<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9595.c" pos:tabs="8"><function pos:start="1:1" pos:end="1369:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">decode_opc</name> <parameter_list pos:start="1:24" pos:end="1:73">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:32">CPUState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">env</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:51">DisasContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">ctx</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:72"><decl pos:start="1:59" pos:end="1:72"><type pos:start="1:59" pos:end="1:72"><name pos:start="1:59" pos:end="1:61">int</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:72">is_branch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1369:1">{<block_content pos:start="5:5" pos:end="1367:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:18">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">rs</name></decl>, <decl pos:start="7:13" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:14">rt</name></decl>, <decl pos:start="7:17" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:18">rd</name></decl>, <decl pos:start="7:21" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:22">sa</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:15">op</name></decl>, <decl pos:start="9:18" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:18" pos:end="9:20">op1</name></decl>, <decl pos:start="9:23" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:23" pos:end="9:25">op2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int16_t</name></type> <name pos:start="11:13" pos:end="11:15">imm</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:55">/* make sure instructions are on a word boundary */</comment>

    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:22">(<expr pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">ctx</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:15">pc</name></name> <operator pos:start="17:17" pos:end="17:17">&amp;</operator> <literal type="number" pos:start="17:19" pos:end="17:21">0x3</literal></expr>)</condition> <block pos:start="17:24" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:15">

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:11">env</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:25">CP0_BadVAddr</name></name> <operator pos:start="19:27" pos:end="19:27">=</operator> <name pos:start="19:29" pos:end="19:35"><name pos:start="19:29" pos:end="19:31">ctx</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:35">pc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:43"><expr pos:start="21:9" pos:end="21:42"><call pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:26">generate_exception</name><argument_list pos:start="21:27" pos:end="21:42">(<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">ctx</name></expr></argument>, <argument pos:start="21:33" pos:end="21:41"><expr pos:start="21:33" pos:end="21:41"><name pos:start="21:33" pos:end="21:41">EXCP_AdEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:39">/* Handle blikely not taken case */</comment>

    <if_stmt pos:start="31:5" pos:end="47:5"><if pos:start="31:5" pos:end="47:5">if <condition pos:start="31:8" pos:end="31:63">(<expr pos:start="31:9" pos:end="31:62"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:20"><name pos:start="31:10" pos:end="31:12">ctx</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:20">hflags</name></name> <operator pos:start="31:22" pos:end="31:22">&amp;</operator> <name pos:start="31:24" pos:end="31:44">MIPS_HFLAG_BMASK_BASE</name><operator pos:start="31:45" pos:end="31:45">)</operator> <operator pos:start="31:47" pos:end="31:48">==</operator> <name pos:start="31:50" pos:end="31:62">MIPS_HFLAG_BL</name></expr>)</condition> <block pos:start="31:65" pos:end="47:5">{<block_content pos:start="33:9" pos:end="45:26">

        <decl_stmt pos:start="33:9" pos:end="33:33"><decl pos:start="33:9" pos:end="33:32"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:14">l1</name> <init pos:start="33:16" pos:end="33:32">= <expr pos:start="33:18" pos:end="33:32"><call pos:start="33:18" pos:end="33:32"><name pos:start="33:18" pos:end="33:30">gen_new_label</name><argument_list pos:start="33:31" pos:end="33:32">()</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:73"><expr pos:start="37:9" pos:end="37:72"><call pos:start="37:9" pos:end="37:72"><name pos:start="37:9" pos:end="37:18">MIPS_DEBUG</name><argument_list pos:start="37:19" pos:end="37:72">(<argument pos:start="37:20" pos:end="37:58"><expr pos:start="37:20" pos:end="37:58"><literal type="string" pos:start="37:20" pos:end="37:40">"blikely condition ("</literal> <name pos:start="37:42" pos:end="37:54">TARGET_FMT_lx</name> <literal type="string" pos:start="37:56" pos:end="37:58">")"</literal></expr></argument>, <argument pos:start="37:61" pos:end="37:71"><expr pos:start="37:61" pos:end="37:71"><name pos:start="37:61" pos:end="37:67"><name pos:start="37:61" pos:end="37:63">ctx</name><operator pos:start="37:64" pos:end="37:65">-&gt;</operator><name pos:start="37:66" pos:end="37:67">pc</name></name> <operator pos:start="37:69" pos:end="37:69">+</operator> <literal type="number" pos:start="37:71" pos:end="37:71">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:54"><expr pos:start="39:9" pos:end="39:53"><call pos:start="39:9" pos:end="39:53"><name pos:start="39:9" pos:end="39:26">tcg_gen_brcondi_tl</name><argument_list pos:start="39:27" pos:end="39:53">(<argument pos:start="39:28" pos:end="39:38"><expr pos:start="39:28" pos:end="39:38"><name pos:start="39:28" pos:end="39:38">TCG_COND_NE</name></expr></argument>, <argument pos:start="39:41" pos:end="39:45"><expr pos:start="39:41" pos:end="39:45"><name pos:start="39:41" pos:end="39:45">bcond</name></expr></argument>, <argument pos:start="39:48" pos:end="39:48"><expr pos:start="39:48" pos:end="39:48"><literal type="number" pos:start="39:48" pos:end="39:48">0</literal></expr></argument>, <argument pos:start="39:51" pos:end="39:52"><expr pos:start="39:51" pos:end="39:52"><name pos:start="39:51" pos:end="39:52">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:66"><expr pos:start="41:9" pos:end="41:65"><call pos:start="41:9" pos:end="41:65"><name pos:start="41:9" pos:end="41:24">tcg_gen_movi_i32</name><argument_list pos:start="41:25" pos:end="41:65">(<argument pos:start="41:26" pos:end="41:31"><expr pos:start="41:26" pos:end="41:31"><name pos:start="41:26" pos:end="41:31">hflags</name></expr></argument>, <argument pos:start="41:34" pos:end="41:64"><expr pos:start="41:34" pos:end="41:64"><name pos:start="41:34" pos:end="41:44"><name pos:start="41:34" pos:end="41:36">ctx</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:44">hflags</name></name> <operator pos:start="41:46" pos:end="41:46">&amp;</operator> <operator pos:start="41:48" pos:end="41:48">~</operator><name pos:start="41:49" pos:end="41:64">MIPS_HFLAG_BMASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:19">gen_goto_tb</name><argument_list pos:start="43:20" pos:end="43:40">(<argument pos:start="43:21" pos:end="43:23"><expr pos:start="43:21" pos:end="43:23"><name pos:start="43:21" pos:end="43:23">ctx</name></expr></argument>, <argument pos:start="43:26" pos:end="43:26"><expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">1</literal></expr></argument>, <argument pos:start="43:29" pos:end="43:39"><expr pos:start="43:29" pos:end="43:39"><name pos:start="43:29" pos:end="43:35"><name pos:start="43:29" pos:end="43:31">ctx</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:35">pc</name></name> <operator pos:start="43:37" pos:end="43:37">+</operator> <literal type="number" pos:start="43:39" pos:end="43:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:26"><expr pos:start="45:9" pos:end="45:25"><call pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:21">gen_set_label</name><argument_list pos:start="45:22" pos:end="45:25">(<argument pos:start="45:23" pos:end="45:24"><expr pos:start="45:23" pos:end="45:24"><name pos:start="45:23" pos:end="45:24">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="53:42"><if pos:start="51:5" pos:end="53:42">if <condition pos:start="51:8" pos:end="51:52">(<expr pos:start="51:9" pos:end="51:51"><call pos:start="51:9" pos:end="51:51"><name pos:start="51:9" pos:end="51:16">unlikely</name><argument_list pos:start="51:17" pos:end="51:51">(<argument pos:start="51:18" pos:end="51:50"><expr pos:start="51:18" pos:end="51:50"><call pos:start="51:18" pos:end="51:50"><name pos:start="51:18" pos:end="51:35">qemu_loglevel_mask</name><argument_list pos:start="51:36" pos:end="51:50">(<argument pos:start="51:37" pos:end="51:49"><expr pos:start="51:37" pos:end="51:49"><name pos:start="51:37" pos:end="51:49">CPU_LOG_TB_OP</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:42"><block_content pos:start="53:9" pos:end="53:42">

        <expr_stmt pos:start="53:9" pos:end="53:42"><expr pos:start="53:9" pos:end="53:41"><call pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:32">tcg_gen_debug_insn_start</name><argument_list pos:start="53:33" pos:end="53:41">(<argument pos:start="53:34" pos:end="53:40"><expr pos:start="53:34" pos:end="53:40"><name pos:start="53:34" pos:end="53:40"><name pos:start="53:34" pos:end="53:36">ctx</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:40">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:36"><expr pos:start="57:5" pos:end="57:35"><name pos:start="57:5" pos:end="57:6">op</name> <operator pos:start="57:8" pos:end="57:8">=</operator> <call pos:start="57:10" pos:end="57:35"><name pos:start="57:10" pos:end="57:22">MASK_OP_MAJOR</name><argument_list pos:start="57:23" pos:end="57:35">(<argument pos:start="57:24" pos:end="57:34"><expr pos:start="57:24" pos:end="57:34"><name pos:start="57:24" pos:end="57:34"><name pos:start="57:24" pos:end="57:26">ctx</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:34">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:6">rs</name> <operator pos:start="59:8" pos:end="59:8">=</operator> <operator pos:start="59:10" pos:end="59:10">(</operator><name pos:start="59:11" pos:end="59:21"><name pos:start="59:11" pos:end="59:13">ctx</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:21">opcode</name></name> <operator pos:start="59:23" pos:end="59:24">&gt;&gt;</operator> <literal type="number" pos:start="59:26" pos:end="59:27">21</literal><operator pos:start="59:28" pos:end="59:28">)</operator> <operator pos:start="59:30" pos:end="59:30">&amp;</operator> <literal type="number" pos:start="59:32" pos:end="59:35">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:36"><expr pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:6">rt</name> <operator pos:start="61:8" pos:end="61:8">=</operator> <operator pos:start="61:10" pos:end="61:10">(</operator><name pos:start="61:11" pos:end="61:21"><name pos:start="61:11" pos:end="61:13">ctx</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:21">opcode</name></name> <operator pos:start="61:23" pos:end="61:24">&gt;&gt;</operator> <literal type="number" pos:start="61:26" pos:end="61:27">16</literal><operator pos:start="61:28" pos:end="61:28">)</operator> <operator pos:start="61:30" pos:end="61:30">&amp;</operator> <literal type="number" pos:start="61:32" pos:end="61:35">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:36"><expr pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:6">rd</name> <operator pos:start="63:8" pos:end="63:8">=</operator> <operator pos:start="63:10" pos:end="63:10">(</operator><name pos:start="63:11" pos:end="63:21"><name pos:start="63:11" pos:end="63:13">ctx</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:21">opcode</name></name> <operator pos:start="63:23" pos:end="63:24">&gt;&gt;</operator> <literal type="number" pos:start="63:26" pos:end="63:27">11</literal><operator pos:start="63:28" pos:end="63:28">)</operator> <operator pos:start="63:30" pos:end="63:30">&amp;</operator> <literal type="number" pos:start="63:32" pos:end="63:35">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:35"><expr pos:start="65:5" pos:end="65:34"><name pos:start="65:5" pos:end="65:6">sa</name> <operator pos:start="65:8" pos:end="65:8">=</operator> <operator pos:start="65:10" pos:end="65:10">(</operator><name pos:start="65:11" pos:end="65:21"><name pos:start="65:11" pos:end="65:13">ctx</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:21">opcode</name></name> <operator pos:start="65:23" pos:end="65:24">&gt;&gt;</operator> <literal type="number" pos:start="65:26" pos:end="65:26">6</literal><operator pos:start="65:27" pos:end="65:27">)</operator> <operator pos:start="65:29" pos:end="65:29">&amp;</operator> <literal type="number" pos:start="65:31" pos:end="65:34">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:31"><expr pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:7">imm</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <operator pos:start="67:11" pos:end="67:11">(</operator><name pos:start="67:12" pos:end="67:18">int16_t</name><operator pos:start="67:19" pos:end="67:19">)</operator><name pos:start="67:20" pos:end="67:30"><name pos:start="67:20" pos:end="67:22">ctx</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:30">opcode</name></name></expr>;</expr_stmt>

    <switch pos:start="69:5" pos:end="1367:5">switch <condition pos:start="69:12" pos:end="69:15">(<expr pos:start="69:13" pos:end="69:14"><name pos:start="69:13" pos:end="69:14">op</name></expr>)</condition> <block pos:start="69:17" pos:end="1367:5">{<block_content pos:start="71:5" pos:end="1365:14">

    <case pos:start="71:5" pos:end="71:21">case <expr pos:start="71:10" pos:end="71:20"><name pos:start="71:10" pos:end="71:20">OPC_SPECIAL</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:40"><expr pos:start="73:9" pos:end="73:39"><name pos:start="73:9" pos:end="73:11">op1</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:39"><name pos:start="73:15" pos:end="73:26">MASK_SPECIAL</name><argument_list pos:start="73:27" pos:end="73:39">(<argument pos:start="73:28" pos:end="73:38"><expr pos:start="73:28" pos:end="73:38"><name pos:start="73:28" pos:end="73:38"><name pos:start="73:28" pos:end="73:30">ctx</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:38">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="75:9" pos:end="493:9">switch <condition pos:start="75:16" pos:end="75:20">(<expr pos:start="75:17" pos:end="75:19"><name pos:start="75:17" pos:end="75:19">op1</name></expr>)</condition> <block pos:start="75:22" pos:end="493:9">{<block_content pos:start="77:9" pos:end="491:18">

        <case pos:start="77:9" pos:end="77:21">case <expr pos:start="77:14" pos:end="77:20"><name pos:start="77:14" pos:end="77:20">OPC_SLL</name></expr>:</case>          <comment type="block" pos:start="77:32" pos:end="77:57">/* Shift with immediate */</comment>

        <case pos:start="79:9" pos:end="79:21">case <expr pos:start="79:14" pos:end="79:20"><name pos:start="79:14" pos:end="79:20">OPC_SRA</name></expr>:</case>

            <expr_stmt pos:start="81:13" pos:end="81:53"><expr pos:start="81:13" pos:end="81:52"><call pos:start="81:13" pos:end="81:52"><name pos:start="81:13" pos:end="81:25">gen_shift_imm</name><argument_list pos:start="81:26" pos:end="81:52">(<argument pos:start="81:27" pos:end="81:29"><expr pos:start="81:27" pos:end="81:29"><name pos:start="81:27" pos:end="81:29">env</name></expr></argument>, <argument pos:start="81:32" pos:end="81:34"><expr pos:start="81:32" pos:end="81:34"><name pos:start="81:32" pos:end="81:34">ctx</name></expr></argument>, <argument pos:start="81:37" pos:end="81:39"><expr pos:start="81:37" pos:end="81:39"><name pos:start="81:37" pos:end="81:39">op1</name></expr></argument>, <argument pos:start="81:42" pos:end="81:43"><expr pos:start="81:42" pos:end="81:43"><name pos:start="81:42" pos:end="81:43">rd</name></expr></argument>, <argument pos:start="81:46" pos:end="81:47"><expr pos:start="81:46" pos:end="81:47"><name pos:start="81:46" pos:end="81:47">rt</name></expr></argument>, <argument pos:start="81:50" pos:end="81:51"><expr pos:start="81:50" pos:end="81:51"><name pos:start="81:50" pos:end="81:51">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="83:13" pos:end="83:18">break;</break>

        <case pos:start="85:9" pos:end="85:21">case <expr pos:start="85:14" pos:end="85:20"><name pos:start="85:14" pos:end="85:20">OPC_SRL</name></expr>:</case>

            <switch pos:start="87:13" pos:end="113:13">switch <condition pos:start="87:20" pos:end="87:47">(<expr pos:start="87:21" pos:end="87:46"><operator pos:start="87:21" pos:end="87:21">(</operator><name pos:start="87:22" pos:end="87:32"><name pos:start="87:22" pos:end="87:24">ctx</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:32">opcode</name></name> <operator pos:start="87:34" pos:end="87:35">&gt;&gt;</operator> <literal type="number" pos:start="87:37" pos:end="87:38">21</literal><operator pos:start="87:39" pos:end="87:39">)</operator> <operator pos:start="87:41" pos:end="87:41">&amp;</operator> <literal type="number" pos:start="87:43" pos:end="87:46">0x1f</literal></expr>)</condition> <block pos:start="87:49" pos:end="113:13">{<block_content pos:start="89:13" pos:end="111:22">

            <case pos:start="89:13" pos:end="89:19">case <expr pos:start="89:18" pos:end="89:18"><literal type="number" pos:start="89:18" pos:end="89:18">1</literal></expr>:</case>

                <comment type="block" pos:start="91:17" pos:end="91:59">/* rotr is decoded as srl on non-R2 CPUs */</comment>

                <if_stmt pos:start="93:17" pos:end="97:17"><if pos:start="93:17" pos:end="97:17">if <condition pos:start="93:20" pos:end="93:51">(<expr pos:start="93:21" pos:end="93:50"><name pos:start="93:21" pos:end="93:35"><name pos:start="93:21" pos:end="93:23">env</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:35">insn_flags</name></name> <operator pos:start="93:37" pos:end="93:37">&amp;</operator> <name pos:start="93:39" pos:end="93:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="93:53" pos:end="97:17">{<block_content pos:start="95:21" pos:end="95:35">

                    <expr_stmt pos:start="95:21" pos:end="95:35"><expr pos:start="95:21" pos:end="95:34"><name pos:start="95:21" pos:end="95:23">op1</name> <operator pos:start="95:25" pos:end="95:25">=</operator> <name pos:start="95:27" pos:end="95:34">OPC_ROTR</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="99:17" pos:end="99:33">/* Fallthrough */</comment>

            <case pos:start="101:13" pos:end="101:19">case <expr pos:start="101:18" pos:end="101:18"><literal type="number" pos:start="101:18" pos:end="101:18">0</literal></expr>:</case>

                <expr_stmt pos:start="103:17" pos:end="103:57"><expr pos:start="103:17" pos:end="103:56"><call pos:start="103:17" pos:end="103:56"><name pos:start="103:17" pos:end="103:29">gen_shift_imm</name><argument_list pos:start="103:30" pos:end="103:56">(<argument pos:start="103:31" pos:end="103:33"><expr pos:start="103:31" pos:end="103:33"><name pos:start="103:31" pos:end="103:33">env</name></expr></argument>, <argument pos:start="103:36" pos:end="103:38"><expr pos:start="103:36" pos:end="103:38"><name pos:start="103:36" pos:end="103:38">ctx</name></expr></argument>, <argument pos:start="103:41" pos:end="103:43"><expr pos:start="103:41" pos:end="103:43"><name pos:start="103:41" pos:end="103:43">op1</name></expr></argument>, <argument pos:start="103:46" pos:end="103:47"><expr pos:start="103:46" pos:end="103:47"><name pos:start="103:46" pos:end="103:47">rd</name></expr></argument>, <argument pos:start="103:50" pos:end="103:51"><expr pos:start="103:50" pos:end="103:51"><name pos:start="103:50" pos:end="103:51">rt</name></expr></argument>, <argument pos:start="103:54" pos:end="103:55"><expr pos:start="103:54" pos:end="103:55"><name pos:start="103:54" pos:end="103:55">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="105:17" pos:end="105:22">break;</break>

            <default pos:start="107:13" pos:end="107:20">default:</default>

                <expr_stmt pos:start="109:17" pos:end="109:49"><expr pos:start="109:17" pos:end="109:48"><call pos:start="109:17" pos:end="109:48"><name pos:start="109:17" pos:end="109:34">generate_exception</name><argument_list pos:start="109:35" pos:end="109:48">(<argument pos:start="109:36" pos:end="109:38"><expr pos:start="109:36" pos:end="109:38"><name pos:start="109:36" pos:end="109:38">ctx</name></expr></argument>, <argument pos:start="109:41" pos:end="109:47"><expr pos:start="109:41" pos:end="109:47"><name pos:start="109:41" pos:end="109:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="111:17" pos:end="111:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        <case pos:start="117:9" pos:end="117:22">case <expr pos:start="117:14" pos:end="117:21"><name pos:start="117:14" pos:end="117:21">OPC_MOVN</name></expr>:</case>         <comment type="block" pos:start="117:32" pos:end="117:53">/* Conditional move */</comment>

        <case pos:start="119:9" pos:end="119:22">case <expr pos:start="119:14" pos:end="119:21"><name pos:start="119:14" pos:end="119:21">OPC_MOVZ</name></expr>:</case>

            <expr_stmt pos:start="121:13" pos:end="123:68"><expr pos:start="121:13" pos:end="123:67"><call pos:start="121:13" pos:end="123:67"><name pos:start="121:13" pos:end="121:22">check_insn</name><argument_list pos:start="121:23" pos:end="123:67">(<argument pos:start="121:24" pos:end="121:26"><expr pos:start="121:24" pos:end="121:26"><name pos:start="121:24" pos:end="121:26">env</name></expr></argument>, <argument pos:start="121:29" pos:end="121:31"><expr pos:start="121:29" pos:end="121:31"><name pos:start="121:29" pos:end="121:31">ctx</name></expr></argument>, <argument pos:start="121:34" pos:end="123:66"><expr pos:start="121:34" pos:end="123:66"><name pos:start="121:34" pos:end="121:42">ISA_MIPS4</name> <operator pos:start="121:44" pos:end="121:44">|</operator> <name pos:start="121:46" pos:end="121:55">ISA_MIPS32</name> <operator pos:start="121:57" pos:end="121:57">|</operator>

                                 <name pos:start="123:34" pos:end="123:48">INSN_LOONGSON2E</name> <operator pos:start="123:50" pos:end="123:50">|</operator> <name pos:start="123:52" pos:end="123:66">INSN_LOONGSON2F</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:48"><expr pos:start="125:13" pos:end="125:47"><call pos:start="125:13" pos:end="125:47"><name pos:start="125:13" pos:end="125:25">gen_cond_move</name><argument_list pos:start="125:26" pos:end="125:47">(<argument pos:start="125:27" pos:end="125:29"><expr pos:start="125:27" pos:end="125:29"><name pos:start="125:27" pos:end="125:29">env</name></expr></argument>, <argument pos:start="125:32" pos:end="125:34"><expr pos:start="125:32" pos:end="125:34"><name pos:start="125:32" pos:end="125:34">op1</name></expr></argument>, <argument pos:start="125:37" pos:end="125:38"><expr pos:start="125:37" pos:end="125:38"><name pos:start="125:37" pos:end="125:38">rd</name></expr></argument>, <argument pos:start="125:41" pos:end="125:42"><expr pos:start="125:41" pos:end="125:42"><name pos:start="125:41" pos:end="125:42">rs</name></expr></argument>, <argument pos:start="125:45" pos:end="125:46"><expr pos:start="125:45" pos:end="125:46"><name pos:start="125:45" pos:end="125:46">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="127:13" pos:end="127:18">break;</break>

        <case pos:start="129:9" pos:end="129:34">case <expr pos:start="129:14" pos:end="129:33"><name pos:start="129:14" pos:end="129:20">OPC_ADD</name> <operator pos:start="129:22" pos:end="129:24">...</operator> <name pos:start="129:26" pos:end="129:33">OPC_SUBU</name></expr>:</case>

            <expr_stmt pos:start="131:13" pos:end="131:49"><expr pos:start="131:13" pos:end="131:48"><call pos:start="131:13" pos:end="131:48"><name pos:start="131:13" pos:end="131:21">gen_arith</name><argument_list pos:start="131:22" pos:end="131:48">(<argument pos:start="131:23" pos:end="131:25"><expr pos:start="131:23" pos:end="131:25"><name pos:start="131:23" pos:end="131:25">env</name></expr></argument>, <argument pos:start="131:28" pos:end="131:30"><expr pos:start="131:28" pos:end="131:30"><name pos:start="131:28" pos:end="131:30">ctx</name></expr></argument>, <argument pos:start="131:33" pos:end="131:35"><expr pos:start="131:33" pos:end="131:35"><name pos:start="131:33" pos:end="131:35">op1</name></expr></argument>, <argument pos:start="131:38" pos:end="131:39"><expr pos:start="131:38" pos:end="131:39"><name pos:start="131:38" pos:end="131:39">rd</name></expr></argument>, <argument pos:start="131:42" pos:end="131:43"><expr pos:start="131:42" pos:end="131:43"><name pos:start="131:42" pos:end="131:43">rs</name></expr></argument>, <argument pos:start="131:46" pos:end="131:47"><expr pos:start="131:46" pos:end="131:47"><name pos:start="131:46" pos:end="131:47">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        <case pos:start="135:9" pos:end="135:22">case <expr pos:start="135:14" pos:end="135:21"><name pos:start="135:14" pos:end="135:21">OPC_SLLV</name></expr>:</case>         <comment type="block" pos:start="135:32" pos:end="135:43">/* Shifts */</comment>

        <case pos:start="137:9" pos:end="137:22">case <expr pos:start="137:14" pos:end="137:21"><name pos:start="137:14" pos:end="137:21">OPC_SRAV</name></expr>:</case>

            <expr_stmt pos:start="139:13" pos:end="139:49"><expr pos:start="139:13" pos:end="139:48"><call pos:start="139:13" pos:end="139:48"><name pos:start="139:13" pos:end="139:21">gen_shift</name><argument_list pos:start="139:22" pos:end="139:48">(<argument pos:start="139:23" pos:end="139:25"><expr pos:start="139:23" pos:end="139:25"><name pos:start="139:23" pos:end="139:25">env</name></expr></argument>, <argument pos:start="139:28" pos:end="139:30"><expr pos:start="139:28" pos:end="139:30"><name pos:start="139:28" pos:end="139:30">ctx</name></expr></argument>, <argument pos:start="139:33" pos:end="139:35"><expr pos:start="139:33" pos:end="139:35"><name pos:start="139:33" pos:end="139:35">op1</name></expr></argument>, <argument pos:start="139:38" pos:end="139:39"><expr pos:start="139:38" pos:end="139:39"><name pos:start="139:38" pos:end="139:39">rd</name></expr></argument>, <argument pos:start="139:42" pos:end="139:43"><expr pos:start="139:42" pos:end="139:43"><name pos:start="139:42" pos:end="139:43">rs</name></expr></argument>, <argument pos:start="139:46" pos:end="139:47"><expr pos:start="139:46" pos:end="139:47"><name pos:start="139:46" pos:end="139:47">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>

        <case pos:start="143:9" pos:end="143:22">case <expr pos:start="143:14" pos:end="143:21"><name pos:start="143:14" pos:end="143:21">OPC_SRLV</name></expr>:</case>

            <switch pos:start="145:13" pos:end="171:13">switch <condition pos:start="145:20" pos:end="145:46">(<expr pos:start="145:21" pos:end="145:45"><operator pos:start="145:21" pos:end="145:21">(</operator><name pos:start="145:22" pos:end="145:32"><name pos:start="145:22" pos:end="145:24">ctx</name><operator pos:start="145:25" pos:end="145:26">-&gt;</operator><name pos:start="145:27" pos:end="145:32">opcode</name></name> <operator pos:start="145:34" pos:end="145:35">&gt;&gt;</operator> <literal type="number" pos:start="145:37" pos:end="145:37">6</literal><operator pos:start="145:38" pos:end="145:38">)</operator> <operator pos:start="145:40" pos:end="145:40">&amp;</operator> <literal type="number" pos:start="145:42" pos:end="145:45">0x1f</literal></expr>)</condition> <block pos:start="145:48" pos:end="171:13">{<block_content pos:start="147:13" pos:end="169:22">

            <case pos:start="147:13" pos:end="147:19">case <expr pos:start="147:18" pos:end="147:18"><literal type="number" pos:start="147:18" pos:end="147:18">1</literal></expr>:</case>

                <comment type="block" pos:start="149:17" pos:end="149:61">/* rotrv is decoded as srlv on non-R2 CPUs */</comment>

                <if_stmt pos:start="151:17" pos:end="155:17"><if pos:start="151:17" pos:end="155:17">if <condition pos:start="151:20" pos:end="151:51">(<expr pos:start="151:21" pos:end="151:50"><name pos:start="151:21" pos:end="151:35"><name pos:start="151:21" pos:end="151:23">env</name><operator pos:start="151:24" pos:end="151:25">-&gt;</operator><name pos:start="151:26" pos:end="151:35">insn_flags</name></name> <operator pos:start="151:37" pos:end="151:37">&amp;</operator> <name pos:start="151:39" pos:end="151:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="151:53" pos:end="155:17">{<block_content pos:start="153:21" pos:end="153:36">

                    <expr_stmt pos:start="153:21" pos:end="153:36"><expr pos:start="153:21" pos:end="153:35"><name pos:start="153:21" pos:end="153:23">op1</name> <operator pos:start="153:25" pos:end="153:25">=</operator> <name pos:start="153:27" pos:end="153:35">OPC_ROTRV</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="157:17" pos:end="157:33">/* Fallthrough */</comment>

            <case pos:start="159:13" pos:end="159:19">case <expr pos:start="159:18" pos:end="159:18"><literal type="number" pos:start="159:18" pos:end="159:18">0</literal></expr>:</case>

                <expr_stmt pos:start="161:17" pos:end="161:53"><expr pos:start="161:17" pos:end="161:52"><call pos:start="161:17" pos:end="161:52"><name pos:start="161:17" pos:end="161:25">gen_shift</name><argument_list pos:start="161:26" pos:end="161:52">(<argument pos:start="161:27" pos:end="161:29"><expr pos:start="161:27" pos:end="161:29"><name pos:start="161:27" pos:end="161:29">env</name></expr></argument>, <argument pos:start="161:32" pos:end="161:34"><expr pos:start="161:32" pos:end="161:34"><name pos:start="161:32" pos:end="161:34">ctx</name></expr></argument>, <argument pos:start="161:37" pos:end="161:39"><expr pos:start="161:37" pos:end="161:39"><name pos:start="161:37" pos:end="161:39">op1</name></expr></argument>, <argument pos:start="161:42" pos:end="161:43"><expr pos:start="161:42" pos:end="161:43"><name pos:start="161:42" pos:end="161:43">rd</name></expr></argument>, <argument pos:start="161:46" pos:end="161:47"><expr pos:start="161:46" pos:end="161:47"><name pos:start="161:46" pos:end="161:47">rs</name></expr></argument>, <argument pos:start="161:50" pos:end="161:51"><expr pos:start="161:50" pos:end="161:51"><name pos:start="161:50" pos:end="161:51">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="163:17" pos:end="163:22">break;</break>

            <default pos:start="165:13" pos:end="165:20">default:</default>

                <expr_stmt pos:start="167:17" pos:end="167:49"><expr pos:start="167:17" pos:end="167:48"><call pos:start="167:17" pos:end="167:48"><name pos:start="167:17" pos:end="167:34">generate_exception</name><argument_list pos:start="167:35" pos:end="167:48">(<argument pos:start="167:36" pos:end="167:38"><expr pos:start="167:36" pos:end="167:38"><name pos:start="167:36" pos:end="167:38">ctx</name></expr></argument>, <argument pos:start="167:41" pos:end="167:47"><expr pos:start="167:41" pos:end="167:47"><name pos:start="167:41" pos:end="167:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="169:17" pos:end="169:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        <case pos:start="175:9" pos:end="175:21">case <expr pos:start="175:14" pos:end="175:20"><name pos:start="175:14" pos:end="175:20">OPC_SLT</name></expr>:</case>          <comment type="block" pos:start="175:32" pos:end="175:53">/* Set on less than */</comment>

        <case pos:start="177:9" pos:end="177:22">case <expr pos:start="177:14" pos:end="177:21"><name pos:start="177:14" pos:end="177:21">OPC_SLTU</name></expr>:</case>

            <expr_stmt pos:start="179:13" pos:end="179:42"><expr pos:start="179:13" pos:end="179:41"><call pos:start="179:13" pos:end="179:41"><name pos:start="179:13" pos:end="179:19">gen_slt</name><argument_list pos:start="179:20" pos:end="179:41">(<argument pos:start="179:21" pos:end="179:23"><expr pos:start="179:21" pos:end="179:23"><name pos:start="179:21" pos:end="179:23">env</name></expr></argument>, <argument pos:start="179:26" pos:end="179:28"><expr pos:start="179:26" pos:end="179:28"><name pos:start="179:26" pos:end="179:28">op1</name></expr></argument>, <argument pos:start="179:31" pos:end="179:32"><expr pos:start="179:31" pos:end="179:32"><name pos:start="179:31" pos:end="179:32">rd</name></expr></argument>, <argument pos:start="179:35" pos:end="179:36"><expr pos:start="179:35" pos:end="179:36"><name pos:start="179:35" pos:end="179:36">rs</name></expr></argument>, <argument pos:start="179:39" pos:end="179:40"><expr pos:start="179:39" pos:end="179:40"><name pos:start="179:39" pos:end="179:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="181:13" pos:end="181:18">break;</break>

        <case pos:start="183:9" pos:end="183:21">case <expr pos:start="183:14" pos:end="183:20"><name pos:start="183:14" pos:end="183:20">OPC_AND</name></expr>:</case>          <comment type="block" pos:start="183:32" pos:end="183:41">/* Logic*/</comment>

        <case pos:start="185:9" pos:end="185:20">case <expr pos:start="185:14" pos:end="185:19"><name pos:start="185:14" pos:end="185:19">OPC_OR</name></expr>:</case>

        <case pos:start="187:9" pos:end="187:21">case <expr pos:start="187:14" pos:end="187:20"><name pos:start="187:14" pos:end="187:20">OPC_NOR</name></expr>:</case>

        <case pos:start="189:9" pos:end="189:21">case <expr pos:start="189:14" pos:end="189:20"><name pos:start="189:14" pos:end="189:20">OPC_XOR</name></expr>:</case>

            <expr_stmt pos:start="191:13" pos:end="191:44"><expr pos:start="191:13" pos:end="191:43"><call pos:start="191:13" pos:end="191:43"><name pos:start="191:13" pos:end="191:21">gen_logic</name><argument_list pos:start="191:22" pos:end="191:43">(<argument pos:start="191:23" pos:end="191:25"><expr pos:start="191:23" pos:end="191:25"><name pos:start="191:23" pos:end="191:25">env</name></expr></argument>, <argument pos:start="191:28" pos:end="191:30"><expr pos:start="191:28" pos:end="191:30"><name pos:start="191:28" pos:end="191:30">op1</name></expr></argument>, <argument pos:start="191:33" pos:end="191:34"><expr pos:start="191:33" pos:end="191:34"><name pos:start="191:33" pos:end="191:34">rd</name></expr></argument>, <argument pos:start="191:37" pos:end="191:38"><expr pos:start="191:37" pos:end="191:38"><name pos:start="191:37" pos:end="191:38">rs</name></expr></argument>, <argument pos:start="191:41" pos:end="191:42"><expr pos:start="191:41" pos:end="191:42"><name pos:start="191:41" pos:end="191:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        <case pos:start="195:9" pos:end="195:35">case <expr pos:start="195:14" pos:end="195:34"><name pos:start="195:14" pos:end="195:21">OPC_MULT</name> <operator pos:start="195:23" pos:end="195:25">...</operator> <name pos:start="195:27" pos:end="195:34">OPC_DIVU</name></expr>:</case>

            <if_stmt pos:start="197:13" pos:end="207:45"><if pos:start="197:13" pos:end="205:13">if <condition pos:start="197:16" pos:end="197:19">(<expr pos:start="197:17" pos:end="197:18"><name pos:start="197:17" pos:end="197:18">sa</name></expr>)</condition> <block pos:start="197:21" pos:end="205:13">{<block_content pos:start="199:17" pos:end="203:53">

                <expr_stmt pos:start="199:17" pos:end="199:50"><expr pos:start="199:17" pos:end="199:49"><call pos:start="199:17" pos:end="199:49"><name pos:start="199:17" pos:end="199:26">check_insn</name><argument_list pos:start="199:27" pos:end="199:49">(<argument pos:start="199:28" pos:end="199:30"><expr pos:start="199:28" pos:end="199:30"><name pos:start="199:28" pos:end="199:30">env</name></expr></argument>, <argument pos:start="199:33" pos:end="199:35"><expr pos:start="199:33" pos:end="199:35"><name pos:start="199:33" pos:end="199:35">ctx</name></expr></argument>, <argument pos:start="199:38" pos:end="199:48"><expr pos:start="199:38" pos:end="199:48"><name pos:start="199:38" pos:end="199:48">INSN_VR54XX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:51"><expr pos:start="201:17" pos:end="201:50"><name pos:start="201:17" pos:end="201:19">op1</name> <operator pos:start="201:21" pos:end="201:21">=</operator> <call pos:start="201:23" pos:end="201:50"><name pos:start="201:23" pos:end="201:37">MASK_MUL_VR54XX</name><argument_list pos:start="201:38" pos:end="201:50">(<argument pos:start="201:39" pos:end="201:49"><expr pos:start="201:39" pos:end="201:49"><name pos:start="201:39" pos:end="201:49"><name pos:start="201:39" pos:end="201:41">ctx</name><operator pos:start="201:42" pos:end="201:43">-&gt;</operator><name pos:start="201:44" pos:end="201:49">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:53"><expr pos:start="203:17" pos:end="203:52"><call pos:start="203:17" pos:end="203:52"><name pos:start="203:17" pos:end="203:30">gen_mul_vr54xx</name><argument_list pos:start="203:31" pos:end="203:52">(<argument pos:start="203:32" pos:end="203:34"><expr pos:start="203:32" pos:end="203:34"><name pos:start="203:32" pos:end="203:34">ctx</name></expr></argument>, <argument pos:start="203:37" pos:end="203:39"><expr pos:start="203:37" pos:end="203:39"><name pos:start="203:37" pos:end="203:39">op1</name></expr></argument>, <argument pos:start="203:42" pos:end="203:43"><expr pos:start="203:42" pos:end="203:43"><name pos:start="203:42" pos:end="203:43">rd</name></expr></argument>, <argument pos:start="203:46" pos:end="203:47"><expr pos:start="203:46" pos:end="203:47"><name pos:start="203:46" pos:end="203:47">rs</name></expr></argument>, <argument pos:start="203:50" pos:end="203:51"><expr pos:start="203:50" pos:end="203:51"><name pos:start="203:50" pos:end="203:51">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="205:15" pos:end="207:45">else<block type="pseudo" pos:start="207:17" pos:end="207:45"><block_content pos:start="207:17" pos:end="207:45">

                <expr_stmt pos:start="207:17" pos:end="207:45"><expr pos:start="207:17" pos:end="207:44"><call pos:start="207:17" pos:end="207:44"><name pos:start="207:17" pos:end="207:26">gen_muldiv</name><argument_list pos:start="207:27" pos:end="207:44">(<argument pos:start="207:28" pos:end="207:30"><expr pos:start="207:28" pos:end="207:30"><name pos:start="207:28" pos:end="207:30">ctx</name></expr></argument>, <argument pos:start="207:33" pos:end="207:35"><expr pos:start="207:33" pos:end="207:35"><name pos:start="207:33" pos:end="207:35">op1</name></expr></argument>, <argument pos:start="207:38" pos:end="207:39"><expr pos:start="207:38" pos:end="207:39"><name pos:start="207:38" pos:end="207:39">rs</name></expr></argument>, <argument pos:start="207:42" pos:end="207:43"><expr pos:start="207:42" pos:end="207:43"><name pos:start="207:42" pos:end="207:43">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="209:13" pos:end="209:18">break;</break>

        <case pos:start="211:9" pos:end="211:33">case <expr pos:start="211:14" pos:end="211:32"><name pos:start="211:14" pos:end="211:19">OPC_JR</name> <operator pos:start="211:21" pos:end="211:23">...</operator> <name pos:start="211:25" pos:end="211:32">OPC_JALR</name></expr>:</case>

            <expr_stmt pos:start="213:13" pos:end="213:56"><expr pos:start="213:13" pos:end="213:55"><call pos:start="213:13" pos:end="213:55"><name pos:start="213:13" pos:end="213:30">gen_compute_branch</name><argument_list pos:start="213:31" pos:end="213:55">(<argument pos:start="213:32" pos:end="213:34"><expr pos:start="213:32" pos:end="213:34"><name pos:start="213:32" pos:end="213:34">ctx</name></expr></argument>, <argument pos:start="213:37" pos:end="213:39"><expr pos:start="213:37" pos:end="213:39"><name pos:start="213:37" pos:end="213:39">op1</name></expr></argument>, <argument pos:start="213:42" pos:end="213:42"><expr pos:start="213:42" pos:end="213:42"><literal type="number" pos:start="213:42" pos:end="213:42">4</literal></expr></argument>, <argument pos:start="213:45" pos:end="213:46"><expr pos:start="213:45" pos:end="213:46"><name pos:start="213:45" pos:end="213:46">rs</name></expr></argument>, <argument pos:start="213:49" pos:end="213:50"><expr pos:start="213:49" pos:end="213:50"><name pos:start="213:49" pos:end="213:50">rd</name></expr></argument>, <argument pos:start="213:53" pos:end="213:54"><expr pos:start="213:53" pos:end="213:54"><name pos:start="213:53" pos:end="213:54">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:27"><expr pos:start="215:13" pos:end="215:26"><operator pos:start="215:13" pos:end="215:13">*</operator><name pos:start="215:14" pos:end="215:22">is_branch</name> <operator pos:start="215:24" pos:end="215:24">=</operator> <literal type="number" pos:start="215:26" pos:end="215:26">1</literal></expr>;</expr_stmt>

            <break pos:start="217:13" pos:end="217:18">break;</break>

        <case pos:start="219:9" pos:end="219:33">case <expr pos:start="219:14" pos:end="219:32"><name pos:start="219:14" pos:end="219:20">OPC_TGE</name> <operator pos:start="219:22" pos:end="219:24">...</operator> <name pos:start="219:26" pos:end="219:32">OPC_TEQ</name></expr>:</case> <comment type="block" pos:start="219:35" pos:end="219:45">/* Traps */</comment>

        <case pos:start="221:9" pos:end="221:21">case <expr pos:start="221:14" pos:end="221:20"><name pos:start="221:14" pos:end="221:20">OPC_TNE</name></expr>:</case>

            <expr_stmt pos:start="223:13" pos:end="223:43"><expr pos:start="223:13" pos:end="223:42"><call pos:start="223:13" pos:end="223:42"><name pos:start="223:13" pos:end="223:20">gen_trap</name><argument_list pos:start="223:21" pos:end="223:42">(<argument pos:start="223:22" pos:end="223:24"><expr pos:start="223:22" pos:end="223:24"><name pos:start="223:22" pos:end="223:24">ctx</name></expr></argument>, <argument pos:start="223:27" pos:end="223:29"><expr pos:start="223:27" pos:end="223:29"><name pos:start="223:27" pos:end="223:29">op1</name></expr></argument>, <argument pos:start="223:32" pos:end="223:33"><expr pos:start="223:32" pos:end="223:33"><name pos:start="223:32" pos:end="223:33">rs</name></expr></argument>, <argument pos:start="223:36" pos:end="223:37"><expr pos:start="223:36" pos:end="223:37"><name pos:start="223:36" pos:end="223:37">rt</name></expr></argument>, <argument pos:start="223:40" pos:end="223:41"><expr pos:start="223:40" pos:end="223:41"><operator pos:start="223:40" pos:end="223:40">-</operator><literal type="number" pos:start="223:41" pos:end="223:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="225:13" pos:end="225:18">break;</break>

        <case pos:start="227:9" pos:end="227:22">case <expr pos:start="227:14" pos:end="227:21"><name pos:start="227:14" pos:end="227:21">OPC_MFHI</name></expr>:</case>          <comment type="block" pos:start="227:33" pos:end="227:53">/* Move from HI/LO */</comment>

        <case pos:start="229:9" pos:end="229:22">case <expr pos:start="229:14" pos:end="229:21"><name pos:start="229:14" pos:end="229:21">OPC_MFLO</name></expr>:</case>

            <expr_stmt pos:start="231:13" pos:end="231:35"><expr pos:start="231:13" pos:end="231:34"><call pos:start="231:13" pos:end="231:34"><name pos:start="231:13" pos:end="231:20">gen_HILO</name><argument_list pos:start="231:21" pos:end="231:34">(<argument pos:start="231:22" pos:end="231:24"><expr pos:start="231:22" pos:end="231:24"><name pos:start="231:22" pos:end="231:24">ctx</name></expr></argument>, <argument pos:start="231:27" pos:end="231:29"><expr pos:start="231:27" pos:end="231:29"><name pos:start="231:27" pos:end="231:29">op1</name></expr></argument>, <argument pos:start="231:32" pos:end="231:33"><expr pos:start="231:32" pos:end="231:33"><name pos:start="231:32" pos:end="231:33">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="233:13" pos:end="233:18">break;</break>

        <case pos:start="235:9" pos:end="235:22">case <expr pos:start="235:14" pos:end="235:21"><name pos:start="235:14" pos:end="235:21">OPC_MTHI</name></expr>:</case>

        <case pos:start="237:9" pos:end="237:22">case <expr pos:start="237:14" pos:end="237:21"><name pos:start="237:14" pos:end="237:21">OPC_MTLO</name></expr>:</case>          <comment type="block" pos:start="237:33" pos:end="237:51">/* Move to HI/LO */</comment>

            <expr_stmt pos:start="239:13" pos:end="239:35"><expr pos:start="239:13" pos:end="239:34"><call pos:start="239:13" pos:end="239:34"><name pos:start="239:13" pos:end="239:20">gen_HILO</name><argument_list pos:start="239:21" pos:end="239:34">(<argument pos:start="239:22" pos:end="239:24"><expr pos:start="239:22" pos:end="239:24"><name pos:start="239:22" pos:end="239:24">ctx</name></expr></argument>, <argument pos:start="239:27" pos:end="239:29"><expr pos:start="239:27" pos:end="239:29"><name pos:start="239:27" pos:end="239:29">op1</name></expr></argument>, <argument pos:start="239:32" pos:end="239:33"><expr pos:start="239:32" pos:end="239:33"><name pos:start="239:32" pos:end="239:33">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="241:13" pos:end="241:18">break;</break>

        <case pos:start="243:9" pos:end="246:0">case <expr pos:start="243:14" pos:end="243:21"><name pos:start="243:14" pos:end="243:21">OPC_PMON</name></expr>:</case>          <comment type="block" pos:start="243:33" pos:end="243:72">/* Pmon entry point, also R4010 selsl */</comment>

<cpp:ifdef pos:start="245:1" pos:end="245:27">#<cpp:directive pos:start="245:2" pos:end="245:6">ifdef</cpp:directive> <name pos:start="245:8" pos:end="245:27">MIPS_STRICT_STANDARD</name></cpp:ifdef>

            <expr_stmt pos:start="247:13" pos:end="247:39"><expr pos:start="247:13" pos:end="247:38"><call pos:start="247:13" pos:end="247:38"><name pos:start="247:13" pos:end="247:22">MIPS_INVAL</name><argument_list pos:start="247:23" pos:end="247:38">(<argument pos:start="247:24" pos:end="247:37"><expr pos:start="247:24" pos:end="247:37"><literal type="string" pos:start="247:24" pos:end="247:37">"PMON / selsl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="252:0"><expr pos:start="249:13" pos:end="249:44"><call pos:start="249:13" pos:end="249:44"><name pos:start="249:13" pos:end="249:30">generate_exception</name><argument_list pos:start="249:31" pos:end="249:44">(<argument pos:start="249:32" pos:end="249:34"><expr pos:start="249:32" pos:end="249:34"><name pos:start="249:32" pos:end="249:34">ctx</name></expr></argument>, <argument pos:start="249:37" pos:end="249:43"><expr pos:start="249:37" pos:end="249:43"><name pos:start="249:37" pos:end="249:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="251:1" pos:end="251:5">#<cpp:directive pos:start="251:2" pos:end="251:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="253:13" pos:end="256:0"><expr pos:start="253:13" pos:end="253:35"><call pos:start="253:13" pos:end="253:35"><name pos:start="253:13" pos:end="253:25">gen_helper_0i</name><argument_list pos:start="253:26" pos:end="253:35">(<argument pos:start="253:27" pos:end="253:30"><expr pos:start="253:27" pos:end="253:30"><name pos:start="253:27" pos:end="253:30">pmon</name></expr></argument>, <argument pos:start="253:33" pos:end="253:34"><expr pos:start="253:33" pos:end="253:34"><name pos:start="253:33" pos:end="253:34">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="255:1" pos:end="255:6">#<cpp:directive pos:start="255:2" pos:end="255:6">endif</cpp:directive></cpp:endif>

            <break pos:start="257:13" pos:end="257:18">break;</break>

        <case pos:start="259:9" pos:end="259:25">case <expr pos:start="259:14" pos:end="259:24"><name pos:start="259:14" pos:end="259:24">OPC_SYSCALL</name></expr>:</case>

            <expr_stmt pos:start="261:13" pos:end="261:50"><expr pos:start="261:13" pos:end="261:49"><call pos:start="261:13" pos:end="261:49"><name pos:start="261:13" pos:end="261:30">generate_exception</name><argument_list pos:start="261:31" pos:end="261:49">(<argument pos:start="261:32" pos:end="261:34"><expr pos:start="261:32" pos:end="261:34"><name pos:start="261:32" pos:end="261:34">ctx</name></expr></argument>, <argument pos:start="261:37" pos:end="261:48"><expr pos:start="261:37" pos:end="261:48"><name pos:start="261:37" pos:end="261:48">EXCP_SYSCALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:34"><expr pos:start="263:13" pos:end="263:33"><name pos:start="263:13" pos:end="263:23"><name pos:start="263:13" pos:end="263:15">ctx</name><operator pos:start="263:16" pos:end="263:17">-&gt;</operator><name pos:start="263:18" pos:end="263:23">bstate</name></name> <operator pos:start="263:25" pos:end="263:25">=</operator> <name pos:start="263:27" pos:end="263:33">BS_STOP</name></expr>;</expr_stmt>

            <break pos:start="265:13" pos:end="265:18">break;</break>

        <case pos:start="267:9" pos:end="267:23">case <expr pos:start="267:14" pos:end="267:22"><name pos:start="267:14" pos:end="267:22">OPC_BREAK</name></expr>:</case>

            <expr_stmt pos:start="269:13" pos:end="269:48"><expr pos:start="269:13" pos:end="269:47"><call pos:start="269:13" pos:end="269:47"><name pos:start="269:13" pos:end="269:30">generate_exception</name><argument_list pos:start="269:31" pos:end="269:47">(<argument pos:start="269:32" pos:end="269:34"><expr pos:start="269:32" pos:end="269:34"><name pos:start="269:32" pos:end="269:34">ctx</name></expr></argument>, <argument pos:start="269:37" pos:end="269:46"><expr pos:start="269:37" pos:end="269:46"><name pos:start="269:37" pos:end="269:46">EXCP_BREAK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="271:13" pos:end="271:18">break;</break>

        <case pos:start="273:9" pos:end="276:0">case <expr pos:start="273:14" pos:end="273:21"><name pos:start="273:14" pos:end="273:21">OPC_SPIM</name></expr>:</case>

<cpp:ifdef pos:start="275:1" pos:end="275:27">#<cpp:directive pos:start="275:2" pos:end="275:6">ifdef</cpp:directive> <name pos:start="275:8" pos:end="275:27">MIPS_STRICT_STANDARD</name></cpp:ifdef>

            <expr_stmt pos:start="277:13" pos:end="277:31"><expr pos:start="277:13" pos:end="277:30"><call pos:start="277:13" pos:end="277:30"><name pos:start="277:13" pos:end="277:22">MIPS_INVAL</name><argument_list pos:start="277:23" pos:end="277:30">(<argument pos:start="277:24" pos:end="277:29"><expr pos:start="277:24" pos:end="277:29"><literal type="string" pos:start="277:24" pos:end="277:29">"SPIM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="279:13" pos:end="282:0"><expr pos:start="279:13" pos:end="279:44"><call pos:start="279:13" pos:end="279:44"><name pos:start="279:13" pos:end="279:30">generate_exception</name><argument_list pos:start="279:31" pos:end="279:44">(<argument pos:start="279:32" pos:end="279:34"><expr pos:start="279:32" pos:end="279:34"><name pos:start="279:32" pos:end="279:34">ctx</name></expr></argument>, <argument pos:start="279:37" pos:end="279:43"><expr pos:start="279:37" pos:end="279:43"><name pos:start="279:37" pos:end="279:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="281:1" pos:end="281:5">#<cpp:directive pos:start="281:2" pos:end="281:5">else</cpp:directive></cpp:else>

           <comment type="block" pos:start="283:12" pos:end="283:53">/* Implemented as RI exception for now. */</comment>

            <expr_stmt pos:start="285:13" pos:end="285:44"><expr pos:start="285:13" pos:end="285:43"><call pos:start="285:13" pos:end="285:43"><name pos:start="285:13" pos:end="285:22">MIPS_INVAL</name><argument_list pos:start="285:23" pos:end="285:43">(<argument pos:start="285:24" pos:end="285:42"><expr pos:start="285:24" pos:end="285:42"><literal type="string" pos:start="285:24" pos:end="285:42">"spim (unofficial)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="290:0"><expr pos:start="287:13" pos:end="287:44"><call pos:start="287:13" pos:end="287:44"><name pos:start="287:13" pos:end="287:30">generate_exception</name><argument_list pos:start="287:31" pos:end="287:44">(<argument pos:start="287:32" pos:end="287:34"><expr pos:start="287:32" pos:end="287:34"><name pos:start="287:32" pos:end="287:34">ctx</name></expr></argument>, <argument pos:start="287:37" pos:end="287:43"><expr pos:start="287:37" pos:end="287:43"><name pos:start="287:37" pos:end="287:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="289:1" pos:end="289:6">#<cpp:directive pos:start="289:2" pos:end="289:6">endif</cpp:directive></cpp:endif>

            <break pos:start="291:13" pos:end="291:18">break;</break>

        <case pos:start="293:9" pos:end="293:22">case <expr pos:start="293:14" pos:end="293:21"><name pos:start="293:14" pos:end="293:21">OPC_SYNC</name></expr>:</case>

            <comment type="block" pos:start="295:13" pos:end="295:31">/* Treat as NOP. */</comment>

            <break pos:start="297:13" pos:end="297:18">break;</break>



        <case pos:start="301:9" pos:end="301:23">case <expr pos:start="301:14" pos:end="301:22"><name pos:start="301:14" pos:end="301:22">OPC_MOVCI</name></expr>:</case>

            <expr_stmt pos:start="303:13" pos:end="303:57"><expr pos:start="303:13" pos:end="303:56"><call pos:start="303:13" pos:end="303:56"><name pos:start="303:13" pos:end="303:22">check_insn</name><argument_list pos:start="303:23" pos:end="303:56">(<argument pos:start="303:24" pos:end="303:26"><expr pos:start="303:24" pos:end="303:26"><name pos:start="303:24" pos:end="303:26">env</name></expr></argument>, <argument pos:start="303:29" pos:end="303:31"><expr pos:start="303:29" pos:end="303:31"><name pos:start="303:29" pos:end="303:31">ctx</name></expr></argument>, <argument pos:start="303:34" pos:end="303:55"><expr pos:start="303:34" pos:end="303:55"><name pos:start="303:34" pos:end="303:42">ISA_MIPS4</name> <operator pos:start="303:44" pos:end="303:44">|</operator> <name pos:start="303:46" pos:end="303:55">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="305:13" pos:end="317:13"><if pos:start="305:13" pos:end="313:13">if <condition pos:start="305:16" pos:end="305:51">(<expr pos:start="305:17" pos:end="305:50"><name pos:start="305:17" pos:end="305:32"><name pos:start="305:17" pos:end="305:19">env</name><operator pos:start="305:20" pos:end="305:21">-&gt;</operator><name pos:start="305:22" pos:end="305:32">CP0_Config1</name></name> <operator pos:start="305:34" pos:end="305:34">&amp;</operator> <operator pos:start="305:36" pos:end="305:36">(</operator><literal type="number" pos:start="305:37" pos:end="305:37">1</literal> <operator pos:start="305:39" pos:end="305:40">&lt;&lt;</operator> <name pos:start="305:42" pos:end="305:49">CP0C1_FP</name><operator pos:start="305:50" pos:end="305:50">)</operator></expr>)</condition> <block pos:start="305:53" pos:end="313:13">{<block_content pos:start="307:17" pos:end="311:51">

                <expr_stmt pos:start="307:17" pos:end="307:39"><expr pos:start="307:17" pos:end="307:38"><call pos:start="307:17" pos:end="307:38"><name pos:start="307:17" pos:end="307:33">check_cp1_enabled</name><argument_list pos:start="307:34" pos:end="307:38">(<argument pos:start="307:35" pos:end="307:37"><expr pos:start="307:35" pos:end="307:37"><name pos:start="307:35" pos:end="307:37">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="309:17" pos:end="311:51"><expr pos:start="309:17" pos:end="311:50"><call pos:start="309:17" pos:end="311:50"><name pos:start="309:17" pos:end="309:25">gen_movci</name><argument_list pos:start="309:26" pos:end="311:50">(<argument pos:start="309:27" pos:end="309:29"><expr pos:start="309:27" pos:end="309:29"><name pos:start="309:27" pos:end="309:29">ctx</name></expr></argument>, <argument pos:start="309:32" pos:end="309:33"><expr pos:start="309:32" pos:end="309:33"><name pos:start="309:32" pos:end="309:33">rd</name></expr></argument>, <argument pos:start="309:36" pos:end="309:37"><expr pos:start="309:36" pos:end="309:37"><name pos:start="309:36" pos:end="309:37">rs</name></expr></argument>, <argument pos:start="309:40" pos:end="309:64"><expr pos:start="309:40" pos:end="309:64"><operator pos:start="309:40" pos:end="309:40">(</operator><name pos:start="309:41" pos:end="309:51"><name pos:start="309:41" pos:end="309:43">ctx</name><operator pos:start="309:44" pos:end="309:45">-&gt;</operator><name pos:start="309:46" pos:end="309:51">opcode</name></name> <operator pos:start="309:53" pos:end="309:54">&gt;&gt;</operator> <literal type="number" pos:start="309:56" pos:end="309:57">18</literal><operator pos:start="309:58" pos:end="309:58">)</operator> <operator pos:start="309:60" pos:end="309:60">&amp;</operator> <literal type="number" pos:start="309:62" pos:end="309:64">0x7</literal></expr></argument>,

                          <argument pos:start="311:27" pos:end="311:49"><expr pos:start="311:27" pos:end="311:49"><operator pos:start="311:27" pos:end="311:27">(</operator><name pos:start="311:28" pos:end="311:38"><name pos:start="311:28" pos:end="311:30">ctx</name><operator pos:start="311:31" pos:end="311:32">-&gt;</operator><name pos:start="311:33" pos:end="311:38">opcode</name></name> <operator pos:start="311:40" pos:end="311:41">&gt;&gt;</operator> <literal type="number" pos:start="311:43" pos:end="311:44">16</literal><operator pos:start="311:45" pos:end="311:45">)</operator> <operator pos:start="311:47" pos:end="311:47">&amp;</operator> <literal type="number" pos:start="311:49" pos:end="311:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="313:15" pos:end="317:13">else <block pos:start="313:20" pos:end="317:13">{<block_content pos:start="315:17" pos:end="315:57">

                <expr_stmt pos:start="315:17" pos:end="315:57"><expr pos:start="315:17" pos:end="315:56"><call pos:start="315:17" pos:end="315:56"><name pos:start="315:17" pos:end="315:38">generate_exception_err</name><argument_list pos:start="315:39" pos:end="315:56">(<argument pos:start="315:40" pos:end="315:42"><expr pos:start="315:40" pos:end="315:42"><name pos:start="315:40" pos:end="315:42">ctx</name></expr></argument>, <argument pos:start="315:45" pos:end="315:52"><expr pos:start="315:45" pos:end="315:52"><name pos:start="315:45" pos:end="315:52">EXCP_CpU</name></expr></argument>, <argument pos:start="315:55" pos:end="315:55"><expr pos:start="315:55" pos:end="315:55"><literal type="number" pos:start="315:55" pos:end="315:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="319:13" pos:end="324:0">break;</break>



<cpp:if pos:start="323:1" pos:end="323:26">#<cpp:directive pos:start="323:2" pos:end="323:3">if</cpp:directive> <expr pos:start="323:5" pos:end="323:26"><call pos:start="323:5" pos:end="323:26"><name pos:start="323:5" pos:end="323:11">defined</name><argument_list pos:start="323:12" pos:end="323:26">(<argument pos:start="323:13" pos:end="323:25"><expr pos:start="323:13" pos:end="323:25"><name pos:start="323:13" pos:end="323:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

       <comment type="block" pos:start="325:8" pos:end="325:36">/* MIPS64 specific opcodes */</comment>

        <case pos:start="327:9" pos:end="327:22">case <expr pos:start="327:14" pos:end="327:21"><name pos:start="327:14" pos:end="327:21">OPC_DSLL</name></expr>:</case>

        <case pos:start="329:9" pos:end="329:22">case <expr pos:start="329:14" pos:end="329:21"><name pos:start="329:14" pos:end="329:21">OPC_DSRA</name></expr>:</case>

        <case pos:start="331:9" pos:end="331:24">case <expr pos:start="331:14" pos:end="331:23"><name pos:start="331:14" pos:end="331:23">OPC_DSLL32</name></expr>:</case>

        <case pos:start="333:9" pos:end="333:24">case <expr pos:start="333:14" pos:end="333:23"><name pos:start="333:14" pos:end="333:23">OPC_DSRA32</name></expr>:</case>

            <expr_stmt pos:start="335:13" pos:end="335:44"><expr pos:start="335:13" pos:end="335:43"><call pos:start="335:13" pos:end="335:43"><name pos:start="335:13" pos:end="335:22">check_insn</name><argument_list pos:start="335:23" pos:end="335:43">(<argument pos:start="335:24" pos:end="335:26"><expr pos:start="335:24" pos:end="335:26"><name pos:start="335:24" pos:end="335:26">env</name></expr></argument>, <argument pos:start="335:29" pos:end="335:31"><expr pos:start="335:29" pos:end="335:31"><name pos:start="335:29" pos:end="335:31">ctx</name></expr></argument>, <argument pos:start="335:34" pos:end="335:42"><expr pos:start="335:34" pos:end="335:42"><name pos:start="335:34" pos:end="335:42">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:31"><expr pos:start="337:13" pos:end="337:30"><call pos:start="337:13" pos:end="337:30"><name pos:start="337:13" pos:end="337:25">check_mips_64</name><argument_list pos:start="337:26" pos:end="337:30">(<argument pos:start="337:27" pos:end="337:29"><expr pos:start="337:27" pos:end="337:29"><name pos:start="337:27" pos:end="337:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:53"><expr pos:start="339:13" pos:end="339:52"><call pos:start="339:13" pos:end="339:52"><name pos:start="339:13" pos:end="339:25">gen_shift_imm</name><argument_list pos:start="339:26" pos:end="339:52">(<argument pos:start="339:27" pos:end="339:29"><expr pos:start="339:27" pos:end="339:29"><name pos:start="339:27" pos:end="339:29">env</name></expr></argument>, <argument pos:start="339:32" pos:end="339:34"><expr pos:start="339:32" pos:end="339:34"><name pos:start="339:32" pos:end="339:34">ctx</name></expr></argument>, <argument pos:start="339:37" pos:end="339:39"><expr pos:start="339:37" pos:end="339:39"><name pos:start="339:37" pos:end="339:39">op1</name></expr></argument>, <argument pos:start="339:42" pos:end="339:43"><expr pos:start="339:42" pos:end="339:43"><name pos:start="339:42" pos:end="339:43">rd</name></expr></argument>, <argument pos:start="339:46" pos:end="339:47"><expr pos:start="339:46" pos:end="339:47"><name pos:start="339:46" pos:end="339:47">rt</name></expr></argument>, <argument pos:start="339:50" pos:end="339:51"><expr pos:start="339:50" pos:end="339:51"><name pos:start="339:50" pos:end="339:51">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="341:13" pos:end="341:18">break;</break>

        <case pos:start="343:9" pos:end="343:22">case <expr pos:start="343:14" pos:end="343:21"><name pos:start="343:14" pos:end="343:21">OPC_DSRL</name></expr>:</case>

            <switch pos:start="345:13" pos:end="375:13">switch <condition pos:start="345:20" pos:end="345:47">(<expr pos:start="345:21" pos:end="345:46"><operator pos:start="345:21" pos:end="345:21">(</operator><name pos:start="345:22" pos:end="345:32"><name pos:start="345:22" pos:end="345:24">ctx</name><operator pos:start="345:25" pos:end="345:26">-&gt;</operator><name pos:start="345:27" pos:end="345:32">opcode</name></name> <operator pos:start="345:34" pos:end="345:35">&gt;&gt;</operator> <literal type="number" pos:start="345:37" pos:end="345:38">21</literal><operator pos:start="345:39" pos:end="345:39">)</operator> <operator pos:start="345:41" pos:end="345:41">&amp;</operator> <literal type="number" pos:start="345:43" pos:end="345:46">0x1f</literal></expr>)</condition> <block pos:start="345:49" pos:end="375:13">{<block_content pos:start="347:13" pos:end="373:22">

            <case pos:start="347:13" pos:end="347:19">case <expr pos:start="347:18" pos:end="347:18"><literal type="number" pos:start="347:18" pos:end="347:18">1</literal></expr>:</case>

                <comment type="block" pos:start="349:17" pos:end="349:61">/* drotr is decoded as dsrl on non-R2 CPUs */</comment>

                <if_stmt pos:start="351:17" pos:end="355:17"><if pos:start="351:17" pos:end="355:17">if <condition pos:start="351:20" pos:end="351:51">(<expr pos:start="351:21" pos:end="351:50"><name pos:start="351:21" pos:end="351:35"><name pos:start="351:21" pos:end="351:23">env</name><operator pos:start="351:24" pos:end="351:25">-&gt;</operator><name pos:start="351:26" pos:end="351:35">insn_flags</name></name> <operator pos:start="351:37" pos:end="351:37">&amp;</operator> <name pos:start="351:39" pos:end="351:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="351:53" pos:end="355:17">{<block_content pos:start="353:21" pos:end="353:36">

                    <expr_stmt pos:start="353:21" pos:end="353:36"><expr pos:start="353:21" pos:end="353:35"><name pos:start="353:21" pos:end="353:23">op1</name> <operator pos:start="353:25" pos:end="353:25">=</operator> <name pos:start="353:27" pos:end="353:35">OPC_DROTR</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="357:17" pos:end="357:33">/* Fallthrough */</comment>

            <case pos:start="359:13" pos:end="359:19">case <expr pos:start="359:18" pos:end="359:18"><literal type="number" pos:start="359:18" pos:end="359:18">0</literal></expr>:</case>

                <expr_stmt pos:start="361:17" pos:end="361:48"><expr pos:start="361:17" pos:end="361:47"><call pos:start="361:17" pos:end="361:47"><name pos:start="361:17" pos:end="361:26">check_insn</name><argument_list pos:start="361:27" pos:end="361:47">(<argument pos:start="361:28" pos:end="361:30"><expr pos:start="361:28" pos:end="361:30"><name pos:start="361:28" pos:end="361:30">env</name></expr></argument>, <argument pos:start="361:33" pos:end="361:35"><expr pos:start="361:33" pos:end="361:35"><name pos:start="361:33" pos:end="361:35">ctx</name></expr></argument>, <argument pos:start="361:38" pos:end="361:46"><expr pos:start="361:38" pos:end="361:46"><name pos:start="361:38" pos:end="361:46">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="363:17" pos:end="363:35"><expr pos:start="363:17" pos:end="363:34"><call pos:start="363:17" pos:end="363:34"><name pos:start="363:17" pos:end="363:29">check_mips_64</name><argument_list pos:start="363:30" pos:end="363:34">(<argument pos:start="363:31" pos:end="363:33"><expr pos:start="363:31" pos:end="363:33"><name pos:start="363:31" pos:end="363:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="365:17" pos:end="365:57"><expr pos:start="365:17" pos:end="365:56"><call pos:start="365:17" pos:end="365:56"><name pos:start="365:17" pos:end="365:29">gen_shift_imm</name><argument_list pos:start="365:30" pos:end="365:56">(<argument pos:start="365:31" pos:end="365:33"><expr pos:start="365:31" pos:end="365:33"><name pos:start="365:31" pos:end="365:33">env</name></expr></argument>, <argument pos:start="365:36" pos:end="365:38"><expr pos:start="365:36" pos:end="365:38"><name pos:start="365:36" pos:end="365:38">ctx</name></expr></argument>, <argument pos:start="365:41" pos:end="365:43"><expr pos:start="365:41" pos:end="365:43"><name pos:start="365:41" pos:end="365:43">op1</name></expr></argument>, <argument pos:start="365:46" pos:end="365:47"><expr pos:start="365:46" pos:end="365:47"><name pos:start="365:46" pos:end="365:47">rd</name></expr></argument>, <argument pos:start="365:50" pos:end="365:51"><expr pos:start="365:50" pos:end="365:51"><name pos:start="365:50" pos:end="365:51">rt</name></expr></argument>, <argument pos:start="365:54" pos:end="365:55"><expr pos:start="365:54" pos:end="365:55"><name pos:start="365:54" pos:end="365:55">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="367:17" pos:end="367:22">break;</break>

            <default pos:start="369:13" pos:end="369:20">default:</default>

                <expr_stmt pos:start="371:17" pos:end="371:49"><expr pos:start="371:17" pos:end="371:48"><call pos:start="371:17" pos:end="371:48"><name pos:start="371:17" pos:end="371:34">generate_exception</name><argument_list pos:start="371:35" pos:end="371:48">(<argument pos:start="371:36" pos:end="371:38"><expr pos:start="371:36" pos:end="371:38"><name pos:start="371:36" pos:end="371:38">ctx</name></expr></argument>, <argument pos:start="371:41" pos:end="371:47"><expr pos:start="371:41" pos:end="371:47"><name pos:start="371:41" pos:end="371:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="373:17" pos:end="373:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="377:13" pos:end="377:18">break;</break>

        <case pos:start="379:9" pos:end="379:24">case <expr pos:start="379:14" pos:end="379:23"><name pos:start="379:14" pos:end="379:23">OPC_DSRL32</name></expr>:</case>

            <switch pos:start="381:13" pos:end="411:13">switch <condition pos:start="381:20" pos:end="381:47">(<expr pos:start="381:21" pos:end="381:46"><operator pos:start="381:21" pos:end="381:21">(</operator><name pos:start="381:22" pos:end="381:32"><name pos:start="381:22" pos:end="381:24">ctx</name><operator pos:start="381:25" pos:end="381:26">-&gt;</operator><name pos:start="381:27" pos:end="381:32">opcode</name></name> <operator pos:start="381:34" pos:end="381:35">&gt;&gt;</operator> <literal type="number" pos:start="381:37" pos:end="381:38">21</literal><operator pos:start="381:39" pos:end="381:39">)</operator> <operator pos:start="381:41" pos:end="381:41">&amp;</operator> <literal type="number" pos:start="381:43" pos:end="381:46">0x1f</literal></expr>)</condition> <block pos:start="381:49" pos:end="411:13">{<block_content pos:start="383:13" pos:end="409:22">

            <case pos:start="383:13" pos:end="383:19">case <expr pos:start="383:18" pos:end="383:18"><literal type="number" pos:start="383:18" pos:end="383:18">1</literal></expr>:</case>

                <comment type="block" pos:start="385:17" pos:end="385:65">/* drotr32 is decoded as dsrl32 on non-R2 CPUs */</comment>

                <if_stmt pos:start="387:17" pos:end="391:17"><if pos:start="387:17" pos:end="391:17">if <condition pos:start="387:20" pos:end="387:51">(<expr pos:start="387:21" pos:end="387:50"><name pos:start="387:21" pos:end="387:35"><name pos:start="387:21" pos:end="387:23">env</name><operator pos:start="387:24" pos:end="387:25">-&gt;</operator><name pos:start="387:26" pos:end="387:35">insn_flags</name></name> <operator pos:start="387:37" pos:end="387:37">&amp;</operator> <name pos:start="387:39" pos:end="387:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="387:53" pos:end="391:17">{<block_content pos:start="389:21" pos:end="389:38">

                    <expr_stmt pos:start="389:21" pos:end="389:38"><expr pos:start="389:21" pos:end="389:37"><name pos:start="389:21" pos:end="389:23">op1</name> <operator pos:start="389:25" pos:end="389:25">=</operator> <name pos:start="389:27" pos:end="389:37">OPC_DROTR32</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="393:17" pos:end="393:33">/* Fallthrough */</comment>

            <case pos:start="395:13" pos:end="395:19">case <expr pos:start="395:18" pos:end="395:18"><literal type="number" pos:start="395:18" pos:end="395:18">0</literal></expr>:</case>

                <expr_stmt pos:start="397:17" pos:end="397:48"><expr pos:start="397:17" pos:end="397:47"><call pos:start="397:17" pos:end="397:47"><name pos:start="397:17" pos:end="397:26">check_insn</name><argument_list pos:start="397:27" pos:end="397:47">(<argument pos:start="397:28" pos:end="397:30"><expr pos:start="397:28" pos:end="397:30"><name pos:start="397:28" pos:end="397:30">env</name></expr></argument>, <argument pos:start="397:33" pos:end="397:35"><expr pos:start="397:33" pos:end="397:35"><name pos:start="397:33" pos:end="397:35">ctx</name></expr></argument>, <argument pos:start="397:38" pos:end="397:46"><expr pos:start="397:38" pos:end="397:46"><name pos:start="397:38" pos:end="397:46">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="399:17" pos:end="399:35"><expr pos:start="399:17" pos:end="399:34"><call pos:start="399:17" pos:end="399:34"><name pos:start="399:17" pos:end="399:29">check_mips_64</name><argument_list pos:start="399:30" pos:end="399:34">(<argument pos:start="399:31" pos:end="399:33"><expr pos:start="399:31" pos:end="399:33"><name pos:start="399:31" pos:end="399:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="401:17" pos:end="401:57"><expr pos:start="401:17" pos:end="401:56"><call pos:start="401:17" pos:end="401:56"><name pos:start="401:17" pos:end="401:29">gen_shift_imm</name><argument_list pos:start="401:30" pos:end="401:56">(<argument pos:start="401:31" pos:end="401:33"><expr pos:start="401:31" pos:end="401:33"><name pos:start="401:31" pos:end="401:33">env</name></expr></argument>, <argument pos:start="401:36" pos:end="401:38"><expr pos:start="401:36" pos:end="401:38"><name pos:start="401:36" pos:end="401:38">ctx</name></expr></argument>, <argument pos:start="401:41" pos:end="401:43"><expr pos:start="401:41" pos:end="401:43"><name pos:start="401:41" pos:end="401:43">op1</name></expr></argument>, <argument pos:start="401:46" pos:end="401:47"><expr pos:start="401:46" pos:end="401:47"><name pos:start="401:46" pos:end="401:47">rd</name></expr></argument>, <argument pos:start="401:50" pos:end="401:51"><expr pos:start="401:50" pos:end="401:51"><name pos:start="401:50" pos:end="401:51">rt</name></expr></argument>, <argument pos:start="401:54" pos:end="401:55"><expr pos:start="401:54" pos:end="401:55"><name pos:start="401:54" pos:end="401:55">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="403:17" pos:end="403:22">break;</break>

            <default pos:start="405:13" pos:end="405:20">default:</default>

                <expr_stmt pos:start="407:17" pos:end="407:49"><expr pos:start="407:17" pos:end="407:48"><call pos:start="407:17" pos:end="407:48"><name pos:start="407:17" pos:end="407:34">generate_exception</name><argument_list pos:start="407:35" pos:end="407:48">(<argument pos:start="407:36" pos:end="407:38"><expr pos:start="407:36" pos:end="407:38"><name pos:start="407:36" pos:end="407:38">ctx</name></expr></argument>, <argument pos:start="407:41" pos:end="407:47"><expr pos:start="407:41" pos:end="407:47"><name pos:start="407:41" pos:end="407:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="409:17" pos:end="409:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="413:13" pos:end="413:18">break;</break>

        <case pos:start="415:9" pos:end="415:36">case <expr pos:start="415:14" pos:end="415:35"><name pos:start="415:14" pos:end="415:21">OPC_DADD</name> <operator pos:start="415:23" pos:end="415:25">...</operator> <name pos:start="415:27" pos:end="415:35">OPC_DSUBU</name></expr>:</case>

            <expr_stmt pos:start="417:13" pos:end="417:44"><expr pos:start="417:13" pos:end="417:43"><call pos:start="417:13" pos:end="417:43"><name pos:start="417:13" pos:end="417:22">check_insn</name><argument_list pos:start="417:23" pos:end="417:43">(<argument pos:start="417:24" pos:end="417:26"><expr pos:start="417:24" pos:end="417:26"><name pos:start="417:24" pos:end="417:26">env</name></expr></argument>, <argument pos:start="417:29" pos:end="417:31"><expr pos:start="417:29" pos:end="417:31"><name pos:start="417:29" pos:end="417:31">ctx</name></expr></argument>, <argument pos:start="417:34" pos:end="417:42"><expr pos:start="417:34" pos:end="417:42"><name pos:start="417:34" pos:end="417:42">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="419:13" pos:end="419:31"><expr pos:start="419:13" pos:end="419:30"><call pos:start="419:13" pos:end="419:30"><name pos:start="419:13" pos:end="419:25">check_mips_64</name><argument_list pos:start="419:26" pos:end="419:30">(<argument pos:start="419:27" pos:end="419:29"><expr pos:start="419:27" pos:end="419:29"><name pos:start="419:27" pos:end="419:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:49"><expr pos:start="421:13" pos:end="421:48"><call pos:start="421:13" pos:end="421:48"><name pos:start="421:13" pos:end="421:21">gen_arith</name><argument_list pos:start="421:22" pos:end="421:48">(<argument pos:start="421:23" pos:end="421:25"><expr pos:start="421:23" pos:end="421:25"><name pos:start="421:23" pos:end="421:25">env</name></expr></argument>, <argument pos:start="421:28" pos:end="421:30"><expr pos:start="421:28" pos:end="421:30"><name pos:start="421:28" pos:end="421:30">ctx</name></expr></argument>, <argument pos:start="421:33" pos:end="421:35"><expr pos:start="421:33" pos:end="421:35"><name pos:start="421:33" pos:end="421:35">op1</name></expr></argument>, <argument pos:start="421:38" pos:end="421:39"><expr pos:start="421:38" pos:end="421:39"><name pos:start="421:38" pos:end="421:39">rd</name></expr></argument>, <argument pos:start="421:42" pos:end="421:43"><expr pos:start="421:42" pos:end="421:43"><name pos:start="421:42" pos:end="421:43">rs</name></expr></argument>, <argument pos:start="421:46" pos:end="421:47"><expr pos:start="421:46" pos:end="421:47"><name pos:start="421:46" pos:end="421:47">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="423:13" pos:end="423:18">break;</break>

        <case pos:start="425:9" pos:end="425:23">case <expr pos:start="425:14" pos:end="425:22"><name pos:start="425:14" pos:end="425:22">OPC_DSLLV</name></expr>:</case>

        <case pos:start="427:9" pos:end="427:23">case <expr pos:start="427:14" pos:end="427:22"><name pos:start="427:14" pos:end="427:22">OPC_DSRAV</name></expr>:</case>

            <expr_stmt pos:start="429:13" pos:end="429:44"><expr pos:start="429:13" pos:end="429:43"><call pos:start="429:13" pos:end="429:43"><name pos:start="429:13" pos:end="429:22">check_insn</name><argument_list pos:start="429:23" pos:end="429:43">(<argument pos:start="429:24" pos:end="429:26"><expr pos:start="429:24" pos:end="429:26"><name pos:start="429:24" pos:end="429:26">env</name></expr></argument>, <argument pos:start="429:29" pos:end="429:31"><expr pos:start="429:29" pos:end="429:31"><name pos:start="429:29" pos:end="429:31">ctx</name></expr></argument>, <argument pos:start="429:34" pos:end="429:42"><expr pos:start="429:34" pos:end="429:42"><name pos:start="429:34" pos:end="429:42">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="431:13" pos:end="431:31"><expr pos:start="431:13" pos:end="431:30"><call pos:start="431:13" pos:end="431:30"><name pos:start="431:13" pos:end="431:25">check_mips_64</name><argument_list pos:start="431:26" pos:end="431:30">(<argument pos:start="431:27" pos:end="431:29"><expr pos:start="431:27" pos:end="431:29"><name pos:start="431:27" pos:end="431:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="433:13" pos:end="433:49"><expr pos:start="433:13" pos:end="433:48"><call pos:start="433:13" pos:end="433:48"><name pos:start="433:13" pos:end="433:21">gen_shift</name><argument_list pos:start="433:22" pos:end="433:48">(<argument pos:start="433:23" pos:end="433:25"><expr pos:start="433:23" pos:end="433:25"><name pos:start="433:23" pos:end="433:25">env</name></expr></argument>, <argument pos:start="433:28" pos:end="433:30"><expr pos:start="433:28" pos:end="433:30"><name pos:start="433:28" pos:end="433:30">ctx</name></expr></argument>, <argument pos:start="433:33" pos:end="433:35"><expr pos:start="433:33" pos:end="433:35"><name pos:start="433:33" pos:end="433:35">op1</name></expr></argument>, <argument pos:start="433:38" pos:end="433:39"><expr pos:start="433:38" pos:end="433:39"><name pos:start="433:38" pos:end="433:39">rd</name></expr></argument>, <argument pos:start="433:42" pos:end="433:43"><expr pos:start="433:42" pos:end="433:43"><name pos:start="433:42" pos:end="433:43">rs</name></expr></argument>, <argument pos:start="433:46" pos:end="433:47"><expr pos:start="433:46" pos:end="433:47"><name pos:start="433:46" pos:end="433:47">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="435:13" pos:end="435:18">break;</break>

        <case pos:start="437:9" pos:end="437:23">case <expr pos:start="437:14" pos:end="437:22"><name pos:start="437:14" pos:end="437:22">OPC_DSRLV</name></expr>:</case>

            <switch pos:start="439:13" pos:end="469:13">switch <condition pos:start="439:20" pos:end="439:46">(<expr pos:start="439:21" pos:end="439:45"><operator pos:start="439:21" pos:end="439:21">(</operator><name pos:start="439:22" pos:end="439:32"><name pos:start="439:22" pos:end="439:24">ctx</name><operator pos:start="439:25" pos:end="439:26">-&gt;</operator><name pos:start="439:27" pos:end="439:32">opcode</name></name> <operator pos:start="439:34" pos:end="439:35">&gt;&gt;</operator> <literal type="number" pos:start="439:37" pos:end="439:37">6</literal><operator pos:start="439:38" pos:end="439:38">)</operator> <operator pos:start="439:40" pos:end="439:40">&amp;</operator> <literal type="number" pos:start="439:42" pos:end="439:45">0x1f</literal></expr>)</condition> <block pos:start="439:48" pos:end="469:13">{<block_content pos:start="441:13" pos:end="467:22">

            <case pos:start="441:13" pos:end="441:19">case <expr pos:start="441:18" pos:end="441:18"><literal type="number" pos:start="441:18" pos:end="441:18">1</literal></expr>:</case>

                <comment type="block" pos:start="443:17" pos:end="443:63">/* drotrv is decoded as dsrlv on non-R2 CPUs */</comment>

                <if_stmt pos:start="445:17" pos:end="449:17"><if pos:start="445:17" pos:end="449:17">if <condition pos:start="445:20" pos:end="445:51">(<expr pos:start="445:21" pos:end="445:50"><name pos:start="445:21" pos:end="445:35"><name pos:start="445:21" pos:end="445:23">env</name><operator pos:start="445:24" pos:end="445:25">-&gt;</operator><name pos:start="445:26" pos:end="445:35">insn_flags</name></name> <operator pos:start="445:37" pos:end="445:37">&amp;</operator> <name pos:start="445:39" pos:end="445:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="445:53" pos:end="449:17">{<block_content pos:start="447:21" pos:end="447:37">

                    <expr_stmt pos:start="447:21" pos:end="447:37"><expr pos:start="447:21" pos:end="447:36"><name pos:start="447:21" pos:end="447:23">op1</name> <operator pos:start="447:25" pos:end="447:25">=</operator> <name pos:start="447:27" pos:end="447:36">OPC_DROTRV</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="451:17" pos:end="451:33">/* Fallthrough */</comment>

            <case pos:start="453:13" pos:end="453:19">case <expr pos:start="453:18" pos:end="453:18"><literal type="number" pos:start="453:18" pos:end="453:18">0</literal></expr>:</case>

                <expr_stmt pos:start="455:17" pos:end="455:48"><expr pos:start="455:17" pos:end="455:47"><call pos:start="455:17" pos:end="455:47"><name pos:start="455:17" pos:end="455:26">check_insn</name><argument_list pos:start="455:27" pos:end="455:47">(<argument pos:start="455:28" pos:end="455:30"><expr pos:start="455:28" pos:end="455:30"><name pos:start="455:28" pos:end="455:30">env</name></expr></argument>, <argument pos:start="455:33" pos:end="455:35"><expr pos:start="455:33" pos:end="455:35"><name pos:start="455:33" pos:end="455:35">ctx</name></expr></argument>, <argument pos:start="455:38" pos:end="455:46"><expr pos:start="455:38" pos:end="455:46"><name pos:start="455:38" pos:end="455:46">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="457:17" pos:end="457:35"><expr pos:start="457:17" pos:end="457:34"><call pos:start="457:17" pos:end="457:34"><name pos:start="457:17" pos:end="457:29">check_mips_64</name><argument_list pos:start="457:30" pos:end="457:34">(<argument pos:start="457:31" pos:end="457:33"><expr pos:start="457:31" pos:end="457:33"><name pos:start="457:31" pos:end="457:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="459:17" pos:end="459:53"><expr pos:start="459:17" pos:end="459:52"><call pos:start="459:17" pos:end="459:52"><name pos:start="459:17" pos:end="459:25">gen_shift</name><argument_list pos:start="459:26" pos:end="459:52">(<argument pos:start="459:27" pos:end="459:29"><expr pos:start="459:27" pos:end="459:29"><name pos:start="459:27" pos:end="459:29">env</name></expr></argument>, <argument pos:start="459:32" pos:end="459:34"><expr pos:start="459:32" pos:end="459:34"><name pos:start="459:32" pos:end="459:34">ctx</name></expr></argument>, <argument pos:start="459:37" pos:end="459:39"><expr pos:start="459:37" pos:end="459:39"><name pos:start="459:37" pos:end="459:39">op1</name></expr></argument>, <argument pos:start="459:42" pos:end="459:43"><expr pos:start="459:42" pos:end="459:43"><name pos:start="459:42" pos:end="459:43">rd</name></expr></argument>, <argument pos:start="459:46" pos:end="459:47"><expr pos:start="459:46" pos:end="459:47"><name pos:start="459:46" pos:end="459:47">rs</name></expr></argument>, <argument pos:start="459:50" pos:end="459:51"><expr pos:start="459:50" pos:end="459:51"><name pos:start="459:50" pos:end="459:51">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="461:17" pos:end="461:22">break;</break>

            <default pos:start="463:13" pos:end="463:20">default:</default>

                <expr_stmt pos:start="465:17" pos:end="465:49"><expr pos:start="465:17" pos:end="465:48"><call pos:start="465:17" pos:end="465:48"><name pos:start="465:17" pos:end="465:34">generate_exception</name><argument_list pos:start="465:35" pos:end="465:48">(<argument pos:start="465:36" pos:end="465:38"><expr pos:start="465:36" pos:end="465:38"><name pos:start="465:36" pos:end="465:38">ctx</name></expr></argument>, <argument pos:start="465:41" pos:end="465:47"><expr pos:start="465:41" pos:end="465:47"><name pos:start="465:41" pos:end="465:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="467:17" pos:end="467:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="471:13" pos:end="471:18">break;</break>

        <case pos:start="473:9" pos:end="473:37">case <expr pos:start="473:14" pos:end="473:36"><name pos:start="473:14" pos:end="473:22">OPC_DMULT</name> <operator pos:start="473:24" pos:end="473:26">...</operator> <name pos:start="473:28" pos:end="473:36">OPC_DDIVU</name></expr>:</case>

            <expr_stmt pos:start="475:13" pos:end="475:44"><expr pos:start="475:13" pos:end="475:43"><call pos:start="475:13" pos:end="475:43"><name pos:start="475:13" pos:end="475:22">check_insn</name><argument_list pos:start="475:23" pos:end="475:43">(<argument pos:start="475:24" pos:end="475:26"><expr pos:start="475:24" pos:end="475:26"><name pos:start="475:24" pos:end="475:26">env</name></expr></argument>, <argument pos:start="475:29" pos:end="475:31"><expr pos:start="475:29" pos:end="475:31"><name pos:start="475:29" pos:end="475:31">ctx</name></expr></argument>, <argument pos:start="475:34" pos:end="475:42"><expr pos:start="475:34" pos:end="475:42"><name pos:start="475:34" pos:end="475:42">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="477:13" pos:end="477:31"><expr pos:start="477:13" pos:end="477:30"><call pos:start="477:13" pos:end="477:30"><name pos:start="477:13" pos:end="477:25">check_mips_64</name><argument_list pos:start="477:26" pos:end="477:30">(<argument pos:start="477:27" pos:end="477:29"><expr pos:start="477:27" pos:end="477:29"><name pos:start="477:27" pos:end="477:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="479:13" pos:end="479:41"><expr pos:start="479:13" pos:end="479:40"><call pos:start="479:13" pos:end="479:40"><name pos:start="479:13" pos:end="479:22">gen_muldiv</name><argument_list pos:start="479:23" pos:end="479:40">(<argument pos:start="479:24" pos:end="479:26"><expr pos:start="479:24" pos:end="479:26"><name pos:start="479:24" pos:end="479:26">ctx</name></expr></argument>, <argument pos:start="479:29" pos:end="479:31"><expr pos:start="479:29" pos:end="479:31"><name pos:start="479:29" pos:end="479:31">op1</name></expr></argument>, <argument pos:start="479:34" pos:end="479:35"><expr pos:start="479:34" pos:end="479:35"><name pos:start="479:34" pos:end="479:35">rs</name></expr></argument>, <argument pos:start="479:38" pos:end="479:39"><expr pos:start="479:38" pos:end="479:39"><name pos:start="479:38" pos:end="479:39">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="481:13" pos:end="484:0">break;</break>

<cpp:endif pos:start="483:1" pos:end="483:6">#<cpp:directive pos:start="483:2" pos:end="483:6">endif</cpp:directive></cpp:endif>

        <default pos:start="485:9" pos:end="485:16">default:</default>            <comment type="block" pos:start="485:29" pos:end="485:41">/* Invalid */</comment>

            <expr_stmt pos:start="487:13" pos:end="487:34"><expr pos:start="487:13" pos:end="487:33"><call pos:start="487:13" pos:end="487:33"><name pos:start="487:13" pos:end="487:22">MIPS_INVAL</name><argument_list pos:start="487:23" pos:end="487:33">(<argument pos:start="487:24" pos:end="487:32"><expr pos:start="487:24" pos:end="487:32"><literal type="string" pos:start="487:24" pos:end="487:32">"special"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="489:13" pos:end="489:45"><expr pos:start="489:13" pos:end="489:44"><call pos:start="489:13" pos:end="489:44"><name pos:start="489:13" pos:end="489:30">generate_exception</name><argument_list pos:start="489:31" pos:end="489:44">(<argument pos:start="489:32" pos:end="489:34"><expr pos:start="489:32" pos:end="489:34"><name pos:start="489:32" pos:end="489:34">ctx</name></expr></argument>, <argument pos:start="489:37" pos:end="489:43"><expr pos:start="489:37" pos:end="489:43"><name pos:start="489:37" pos:end="489:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="491:13" pos:end="491:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="495:9" pos:end="495:14">break;</break>

    <case pos:start="497:5" pos:end="497:22">case <expr pos:start="497:10" pos:end="497:21"><name pos:start="497:10" pos:end="497:21">OPC_SPECIAL2</name></expr>:</case>

        <expr_stmt pos:start="499:9" pos:end="499:41"><expr pos:start="499:9" pos:end="499:40"><name pos:start="499:9" pos:end="499:11">op1</name> <operator pos:start="499:13" pos:end="499:13">=</operator> <call pos:start="499:15" pos:end="499:40"><name pos:start="499:15" pos:end="499:27">MASK_SPECIAL2</name><argument_list pos:start="499:28" pos:end="499:40">(<argument pos:start="499:29" pos:end="499:39"><expr pos:start="499:29" pos:end="499:39"><name pos:start="499:29" pos:end="499:39"><name pos:start="499:29" pos:end="499:31">ctx</name><operator pos:start="499:32" pos:end="499:33">-&gt;</operator><name pos:start="499:34" pos:end="499:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="501:9" pos:end="613:9">switch <condition pos:start="501:16" pos:end="501:20">(<expr pos:start="501:17" pos:end="501:19"><name pos:start="501:17" pos:end="501:19">op1</name></expr>)</condition> <block pos:start="501:22" pos:end="613:9">{<block_content pos:start="503:9" pos:end="611:18">

        <case pos:start="503:9" pos:end="503:36">case <expr pos:start="503:14" pos:end="503:35"><name pos:start="503:14" pos:end="503:21">OPC_MADD</name> <operator pos:start="503:23" pos:end="503:25">...</operator> <name pos:start="503:27" pos:end="503:35">OPC_MADDU</name></expr>:</case> <comment type="block" pos:start="503:38" pos:end="503:63">/* Multiply and add/sub */</comment>

        <case pos:start="505:9" pos:end="505:36">case <expr pos:start="505:14" pos:end="505:35"><name pos:start="505:14" pos:end="505:21">OPC_MSUB</name> <operator pos:start="505:23" pos:end="505:25">...</operator> <name pos:start="505:27" pos:end="505:35">OPC_MSUBU</name></expr>:</case>

            <expr_stmt pos:start="507:13" pos:end="507:45"><expr pos:start="507:13" pos:end="507:44"><call pos:start="507:13" pos:end="507:44"><name pos:start="507:13" pos:end="507:22">check_insn</name><argument_list pos:start="507:23" pos:end="507:44">(<argument pos:start="507:24" pos:end="507:26"><expr pos:start="507:24" pos:end="507:26"><name pos:start="507:24" pos:end="507:26">env</name></expr></argument>, <argument pos:start="507:29" pos:end="507:31"><expr pos:start="507:29" pos:end="507:31"><name pos:start="507:29" pos:end="507:31">ctx</name></expr></argument>, <argument pos:start="507:34" pos:end="507:43"><expr pos:start="507:34" pos:end="507:43"><name pos:start="507:34" pos:end="507:43">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="509:13" pos:end="509:41"><expr pos:start="509:13" pos:end="509:40"><call pos:start="509:13" pos:end="509:40"><name pos:start="509:13" pos:end="509:22">gen_muldiv</name><argument_list pos:start="509:23" pos:end="509:40">(<argument pos:start="509:24" pos:end="509:26"><expr pos:start="509:24" pos:end="509:26"><name pos:start="509:24" pos:end="509:26">ctx</name></expr></argument>, <argument pos:start="509:29" pos:end="509:31"><expr pos:start="509:29" pos:end="509:31"><name pos:start="509:29" pos:end="509:31">op1</name></expr></argument>, <argument pos:start="509:34" pos:end="509:35"><expr pos:start="509:34" pos:end="509:35"><name pos:start="509:34" pos:end="509:35">rs</name></expr></argument>, <argument pos:start="509:38" pos:end="509:39"><expr pos:start="509:38" pos:end="509:39"><name pos:start="509:38" pos:end="509:39">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="511:13" pos:end="511:18">break;</break>

        <case pos:start="513:9" pos:end="513:21">case <expr pos:start="513:14" pos:end="513:20"><name pos:start="513:14" pos:end="513:20">OPC_MUL</name></expr>:</case>

            <expr_stmt pos:start="515:13" pos:end="515:49"><expr pos:start="515:13" pos:end="515:48"><call pos:start="515:13" pos:end="515:48"><name pos:start="515:13" pos:end="515:21">gen_arith</name><argument_list pos:start="515:22" pos:end="515:48">(<argument pos:start="515:23" pos:end="515:25"><expr pos:start="515:23" pos:end="515:25"><name pos:start="515:23" pos:end="515:25">env</name></expr></argument>, <argument pos:start="515:28" pos:end="515:30"><expr pos:start="515:28" pos:end="515:30"><name pos:start="515:28" pos:end="515:30">ctx</name></expr></argument>, <argument pos:start="515:33" pos:end="515:35"><expr pos:start="515:33" pos:end="515:35"><name pos:start="515:33" pos:end="515:35">op1</name></expr></argument>, <argument pos:start="515:38" pos:end="515:39"><expr pos:start="515:38" pos:end="515:39"><name pos:start="515:38" pos:end="515:39">rd</name></expr></argument>, <argument pos:start="515:42" pos:end="515:43"><expr pos:start="515:42" pos:end="515:43"><name pos:start="515:42" pos:end="515:43">rs</name></expr></argument>, <argument pos:start="515:46" pos:end="515:47"><expr pos:start="515:46" pos:end="515:47"><name pos:start="515:46" pos:end="515:47">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="517:13" pos:end="517:18">break;</break>

        <case pos:start="519:9" pos:end="519:21">case <expr pos:start="519:14" pos:end="519:20"><name pos:start="519:14" pos:end="519:20">OPC_CLO</name></expr>:</case>

        <case pos:start="521:9" pos:end="521:21">case <expr pos:start="521:14" pos:end="521:20"><name pos:start="521:14" pos:end="521:20">OPC_CLZ</name></expr>:</case>

            <expr_stmt pos:start="523:13" pos:end="523:45"><expr pos:start="523:13" pos:end="523:44"><call pos:start="523:13" pos:end="523:44"><name pos:start="523:13" pos:end="523:22">check_insn</name><argument_list pos:start="523:23" pos:end="523:44">(<argument pos:start="523:24" pos:end="523:26"><expr pos:start="523:24" pos:end="523:26"><name pos:start="523:24" pos:end="523:26">env</name></expr></argument>, <argument pos:start="523:29" pos:end="523:31"><expr pos:start="523:29" pos:end="523:31"><name pos:start="523:29" pos:end="523:31">ctx</name></expr></argument>, <argument pos:start="523:34" pos:end="523:43"><expr pos:start="523:34" pos:end="523:43"><name pos:start="523:34" pos:end="523:43">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="525:13" pos:end="525:37"><expr pos:start="525:13" pos:end="525:36"><call pos:start="525:13" pos:end="525:36"><name pos:start="525:13" pos:end="525:18">gen_cl</name><argument_list pos:start="525:19" pos:end="525:36">(<argument pos:start="525:20" pos:end="525:22"><expr pos:start="525:20" pos:end="525:22"><name pos:start="525:20" pos:end="525:22">ctx</name></expr></argument>, <argument pos:start="525:25" pos:end="525:27"><expr pos:start="525:25" pos:end="525:27"><name pos:start="525:25" pos:end="525:27">op1</name></expr></argument>, <argument pos:start="525:30" pos:end="525:31"><expr pos:start="525:30" pos:end="525:31"><name pos:start="525:30" pos:end="525:31">rd</name></expr></argument>, <argument pos:start="525:34" pos:end="525:35"><expr pos:start="525:34" pos:end="525:35"><name pos:start="525:34" pos:end="525:35">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="527:13" pos:end="527:18">break;</break>

        <case pos:start="529:9" pos:end="529:23">case <expr pos:start="529:14" pos:end="529:22"><name pos:start="529:14" pos:end="529:22">OPC_SDBBP</name></expr>:</case>

            <comment type="block" pos:start="531:13" pos:end="535:15">/* XXX: not clear which exception should be raised

             *      when in debug mode...

             */</comment>

            <expr_stmt pos:start="537:13" pos:end="537:45"><expr pos:start="537:13" pos:end="537:44"><call pos:start="537:13" pos:end="537:44"><name pos:start="537:13" pos:end="537:22">check_insn</name><argument_list pos:start="537:23" pos:end="537:44">(<argument pos:start="537:24" pos:end="537:26"><expr pos:start="537:24" pos:end="537:26"><name pos:start="537:24" pos:end="537:26">env</name></expr></argument>, <argument pos:start="537:29" pos:end="537:31"><expr pos:start="537:29" pos:end="537:31"><name pos:start="537:29" pos:end="537:31">ctx</name></expr></argument>, <argument pos:start="537:34" pos:end="537:43"><expr pos:start="537:34" pos:end="537:43"><name pos:start="537:34" pos:end="537:43">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="539:13" pos:end="547:13"><if pos:start="539:13" pos:end="543:13">if <condition pos:start="539:16" pos:end="539:47">(<expr pos:start="539:17" pos:end="539:46"><operator pos:start="539:17" pos:end="539:17">!</operator><operator pos:start="539:18" pos:end="539:18">(</operator><name pos:start="539:19" pos:end="539:29"><name pos:start="539:19" pos:end="539:21">ctx</name><operator pos:start="539:22" pos:end="539:23">-&gt;</operator><name pos:start="539:24" pos:end="539:29">hflags</name></name> <operator pos:start="539:31" pos:end="539:31">&amp;</operator> <name pos:start="539:33" pos:end="539:45">MIPS_HFLAG_DM</name><operator pos:start="539:46" pos:end="539:46">)</operator></expr>)</condition> <block pos:start="539:49" pos:end="543:13">{<block_content pos:start="541:17" pos:end="541:50">

                <expr_stmt pos:start="541:17" pos:end="541:50"><expr pos:start="541:17" pos:end="541:49"><call pos:start="541:17" pos:end="541:49"><name pos:start="541:17" pos:end="541:34">generate_exception</name><argument_list pos:start="541:35" pos:end="541:49">(<argument pos:start="541:36" pos:end="541:38"><expr pos:start="541:36" pos:end="541:38"><name pos:start="541:36" pos:end="541:38">ctx</name></expr></argument>, <argument pos:start="541:41" pos:end="541:48"><expr pos:start="541:41" pos:end="541:48"><name pos:start="541:41" pos:end="541:48">EXCP_DBp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="543:15" pos:end="547:13">else <block pos:start="543:20" pos:end="547:13">{<block_content pos:start="545:17" pos:end="545:50">

                <expr_stmt pos:start="545:17" pos:end="545:50"><expr pos:start="545:17" pos:end="545:49"><call pos:start="545:17" pos:end="545:49"><name pos:start="545:17" pos:end="545:34">generate_exception</name><argument_list pos:start="545:35" pos:end="545:49">(<argument pos:start="545:36" pos:end="545:38"><expr pos:start="545:36" pos:end="545:38"><name pos:start="545:36" pos:end="545:38">ctx</name></expr></argument>, <argument pos:start="545:41" pos:end="545:48"><expr pos:start="545:41" pos:end="545:48"><name pos:start="545:41" pos:end="545:48">EXCP_DBp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <comment type="block" pos:start="549:13" pos:end="549:31">/* Treat as NOP. */</comment>

            <break pos:start="551:13" pos:end="551:18">break;</break>

        <case pos:start="553:9" pos:end="553:26">case <expr pos:start="553:14" pos:end="553:25"><name pos:start="553:14" pos:end="553:25">OPC_DIV_G_2F</name></expr>:</case>

        <case pos:start="555:9" pos:end="555:27">case <expr pos:start="555:14" pos:end="555:26"><name pos:start="555:14" pos:end="555:26">OPC_DIVU_G_2F</name></expr>:</case>

        <case pos:start="557:9" pos:end="557:27">case <expr pos:start="557:14" pos:end="557:26"><name pos:start="557:14" pos:end="557:26">OPC_MULT_G_2F</name></expr>:</case>

        <case pos:start="559:9" pos:end="559:28">case <expr pos:start="559:14" pos:end="559:27"><name pos:start="559:14" pos:end="559:27">OPC_MULTU_G_2F</name></expr>:</case>

        <case pos:start="561:9" pos:end="561:26">case <expr pos:start="561:14" pos:end="561:25"><name pos:start="561:14" pos:end="561:25">OPC_MOD_G_2F</name></expr>:</case>

        <case pos:start="563:9" pos:end="563:27">case <expr pos:start="563:14" pos:end="563:26"><name pos:start="563:14" pos:end="563:26">OPC_MODU_G_2F</name></expr>:</case>

            <expr_stmt pos:start="565:13" pos:end="565:50"><expr pos:start="565:13" pos:end="565:49"><call pos:start="565:13" pos:end="565:49"><name pos:start="565:13" pos:end="565:22">check_insn</name><argument_list pos:start="565:23" pos:end="565:49">(<argument pos:start="565:24" pos:end="565:26"><expr pos:start="565:24" pos:end="565:26"><name pos:start="565:24" pos:end="565:26">env</name></expr></argument>, <argument pos:start="565:29" pos:end="565:31"><expr pos:start="565:29" pos:end="565:31"><name pos:start="565:29" pos:end="565:31">ctx</name></expr></argument>, <argument pos:start="565:34" pos:end="565:48"><expr pos:start="565:34" pos:end="565:48"><name pos:start="565:34" pos:end="565:48">INSN_LOONGSON2F</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="567:13" pos:end="567:55"><expr pos:start="567:13" pos:end="567:54"><call pos:start="567:13" pos:end="567:54"><name pos:start="567:13" pos:end="567:32">gen_loongson_integer</name><argument_list pos:start="567:33" pos:end="567:54">(<argument pos:start="567:34" pos:end="567:36"><expr pos:start="567:34" pos:end="567:36"><name pos:start="567:34" pos:end="567:36">ctx</name></expr></argument>, <argument pos:start="567:39" pos:end="567:41"><expr pos:start="567:39" pos:end="567:41"><name pos:start="567:39" pos:end="567:41">op1</name></expr></argument>, <argument pos:start="567:44" pos:end="567:45"><expr pos:start="567:44" pos:end="567:45"><name pos:start="567:44" pos:end="567:45">rd</name></expr></argument>, <argument pos:start="567:48" pos:end="567:49"><expr pos:start="567:48" pos:end="567:49"><name pos:start="567:48" pos:end="567:49">rs</name></expr></argument>, <argument pos:start="567:52" pos:end="567:53"><expr pos:start="567:52" pos:end="567:53"><name pos:start="567:52" pos:end="567:53">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="569:13" pos:end="572:0">break;</break>

<cpp:if pos:start="571:1" pos:end="571:26">#<cpp:directive pos:start="571:2" pos:end="571:3">if</cpp:directive> <expr pos:start="571:5" pos:end="571:26"><call pos:start="571:5" pos:end="571:26"><name pos:start="571:5" pos:end="571:11">defined</name><argument_list pos:start="571:12" pos:end="571:26">(<argument pos:start="571:13" pos:end="571:25"><expr pos:start="571:13" pos:end="571:25"><name pos:start="571:13" pos:end="571:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="573:9" pos:end="573:22">case <expr pos:start="573:14" pos:end="573:21"><name pos:start="573:14" pos:end="573:21">OPC_DCLO</name></expr>:</case>

        <case pos:start="575:9" pos:end="575:22">case <expr pos:start="575:14" pos:end="575:21"><name pos:start="575:14" pos:end="575:21">OPC_DCLZ</name></expr>:</case>

            <expr_stmt pos:start="577:13" pos:end="577:45"><expr pos:start="577:13" pos:end="577:44"><call pos:start="577:13" pos:end="577:44"><name pos:start="577:13" pos:end="577:22">check_insn</name><argument_list pos:start="577:23" pos:end="577:44">(<argument pos:start="577:24" pos:end="577:26"><expr pos:start="577:24" pos:end="577:26"><name pos:start="577:24" pos:end="577:26">env</name></expr></argument>, <argument pos:start="577:29" pos:end="577:31"><expr pos:start="577:29" pos:end="577:31"><name pos:start="577:29" pos:end="577:31">ctx</name></expr></argument>, <argument pos:start="577:34" pos:end="577:43"><expr pos:start="577:34" pos:end="577:43"><name pos:start="577:34" pos:end="577:43">ISA_MIPS64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="579:13" pos:end="579:31"><expr pos:start="579:13" pos:end="579:30"><call pos:start="579:13" pos:end="579:30"><name pos:start="579:13" pos:end="579:25">check_mips_64</name><argument_list pos:start="579:26" pos:end="579:30">(<argument pos:start="579:27" pos:end="579:29"><expr pos:start="579:27" pos:end="579:29"><name pos:start="579:27" pos:end="579:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="581:13" pos:end="581:37"><expr pos:start="581:13" pos:end="581:36"><call pos:start="581:13" pos:end="581:36"><name pos:start="581:13" pos:end="581:18">gen_cl</name><argument_list pos:start="581:19" pos:end="581:36">(<argument pos:start="581:20" pos:end="581:22"><expr pos:start="581:20" pos:end="581:22"><name pos:start="581:20" pos:end="581:22">ctx</name></expr></argument>, <argument pos:start="581:25" pos:end="581:27"><expr pos:start="581:25" pos:end="581:27"><name pos:start="581:25" pos:end="581:27">op1</name></expr></argument>, <argument pos:start="581:30" pos:end="581:31"><expr pos:start="581:30" pos:end="581:31"><name pos:start="581:30" pos:end="581:31">rd</name></expr></argument>, <argument pos:start="581:34" pos:end="581:35"><expr pos:start="581:34" pos:end="581:35"><name pos:start="581:34" pos:end="581:35">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="583:13" pos:end="583:18">break;</break>

        <case pos:start="585:9" pos:end="585:28">case <expr pos:start="585:14" pos:end="585:27"><name pos:start="585:14" pos:end="585:27">OPC_DMULT_G_2F</name></expr>:</case>

        <case pos:start="587:9" pos:end="587:29">case <expr pos:start="587:14" pos:end="587:28"><name pos:start="587:14" pos:end="587:28">OPC_DMULTU_G_2F</name></expr>:</case>

        <case pos:start="589:9" pos:end="589:27">case <expr pos:start="589:14" pos:end="589:26"><name pos:start="589:14" pos:end="589:26">OPC_DDIV_G_2F</name></expr>:</case>

        <case pos:start="591:9" pos:end="591:28">case <expr pos:start="591:14" pos:end="591:27"><name pos:start="591:14" pos:end="591:27">OPC_DDIVU_G_2F</name></expr>:</case>

        <case pos:start="593:9" pos:end="593:27">case <expr pos:start="593:14" pos:end="593:26"><name pos:start="593:14" pos:end="593:26">OPC_DMOD_G_2F</name></expr>:</case>

        <case pos:start="595:9" pos:end="595:28">case <expr pos:start="595:14" pos:end="595:27"><name pos:start="595:14" pos:end="595:27">OPC_DMODU_G_2F</name></expr>:</case>

            <expr_stmt pos:start="597:13" pos:end="597:50"><expr pos:start="597:13" pos:end="597:49"><call pos:start="597:13" pos:end="597:49"><name pos:start="597:13" pos:end="597:22">check_insn</name><argument_list pos:start="597:23" pos:end="597:49">(<argument pos:start="597:24" pos:end="597:26"><expr pos:start="597:24" pos:end="597:26"><name pos:start="597:24" pos:end="597:26">env</name></expr></argument>, <argument pos:start="597:29" pos:end="597:31"><expr pos:start="597:29" pos:end="597:31"><name pos:start="597:29" pos:end="597:31">ctx</name></expr></argument>, <argument pos:start="597:34" pos:end="597:48"><expr pos:start="597:34" pos:end="597:48"><name pos:start="597:34" pos:end="597:48">INSN_LOONGSON2F</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="599:13" pos:end="599:55"><expr pos:start="599:13" pos:end="599:54"><call pos:start="599:13" pos:end="599:54"><name pos:start="599:13" pos:end="599:32">gen_loongson_integer</name><argument_list pos:start="599:33" pos:end="599:54">(<argument pos:start="599:34" pos:end="599:36"><expr pos:start="599:34" pos:end="599:36"><name pos:start="599:34" pos:end="599:36">ctx</name></expr></argument>, <argument pos:start="599:39" pos:end="599:41"><expr pos:start="599:39" pos:end="599:41"><name pos:start="599:39" pos:end="599:41">op1</name></expr></argument>, <argument pos:start="599:44" pos:end="599:45"><expr pos:start="599:44" pos:end="599:45"><name pos:start="599:44" pos:end="599:45">rd</name></expr></argument>, <argument pos:start="599:48" pos:end="599:49"><expr pos:start="599:48" pos:end="599:49"><name pos:start="599:48" pos:end="599:49">rs</name></expr></argument>, <argument pos:start="599:52" pos:end="599:53"><expr pos:start="599:52" pos:end="599:53"><name pos:start="599:52" pos:end="599:53">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="601:13" pos:end="604:0">break;</break>

<cpp:endif pos:start="603:1" pos:end="603:6">#<cpp:directive pos:start="603:2" pos:end="603:6">endif</cpp:directive></cpp:endif>

        <default pos:start="605:9" pos:end="605:16">default:</default>            <comment type="block" pos:start="605:29" pos:end="605:41">/* Invalid */</comment>

            <expr_stmt pos:start="607:13" pos:end="607:35"><expr pos:start="607:13" pos:end="607:34"><call pos:start="607:13" pos:end="607:34"><name pos:start="607:13" pos:end="607:22">MIPS_INVAL</name><argument_list pos:start="607:23" pos:end="607:34">(<argument pos:start="607:24" pos:end="607:33"><expr pos:start="607:24" pos:end="607:33"><literal type="string" pos:start="607:24" pos:end="607:33">"special2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="609:13" pos:end="609:45"><expr pos:start="609:13" pos:end="609:44"><call pos:start="609:13" pos:end="609:44"><name pos:start="609:13" pos:end="609:30">generate_exception</name><argument_list pos:start="609:31" pos:end="609:44">(<argument pos:start="609:32" pos:end="609:34"><expr pos:start="609:32" pos:end="609:34"><name pos:start="609:32" pos:end="609:34">ctx</name></expr></argument>, <argument pos:start="609:37" pos:end="609:43"><expr pos:start="609:37" pos:end="609:43"><name pos:start="609:37" pos:end="609:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="611:13" pos:end="611:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="615:9" pos:end="615:14">break;</break>

    <case pos:start="617:5" pos:end="617:22">case <expr pos:start="617:10" pos:end="617:21"><name pos:start="617:10" pos:end="617:21">OPC_SPECIAL3</name></expr>:</case>

        <expr_stmt pos:start="619:9" pos:end="619:41"><expr pos:start="619:9" pos:end="619:40"><name pos:start="619:9" pos:end="619:11">op1</name> <operator pos:start="619:13" pos:end="619:13">=</operator> <call pos:start="619:15" pos:end="619:40"><name pos:start="619:15" pos:end="619:27">MASK_SPECIAL3</name><argument_list pos:start="619:28" pos:end="619:40">(<argument pos:start="619:29" pos:end="619:39"><expr pos:start="619:29" pos:end="619:39"><name pos:start="619:29" pos:end="619:39"><name pos:start="619:29" pos:end="619:31">ctx</name><operator pos:start="619:32" pos:end="619:33">-&gt;</operator><name pos:start="619:34" pos:end="619:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="621:9" pos:end="759:9">switch <condition pos:start="621:16" pos:end="621:20">(<expr pos:start="621:17" pos:end="621:19"><name pos:start="621:17" pos:end="621:19">op1</name></expr>)</condition> <block pos:start="621:22" pos:end="759:9">{<block_content pos:start="623:9" pos:end="757:18">

        <case pos:start="623:9" pos:end="623:21">case <expr pos:start="623:14" pos:end="623:20"><name pos:start="623:14" pos:end="623:20">OPC_EXT</name></expr>:</case>

        <case pos:start="625:9" pos:end="625:21">case <expr pos:start="625:14" pos:end="625:20"><name pos:start="625:14" pos:end="625:20">OPC_INS</name></expr>:</case>

            <expr_stmt pos:start="627:13" pos:end="627:47"><expr pos:start="627:13" pos:end="627:46"><call pos:start="627:13" pos:end="627:46"><name pos:start="627:13" pos:end="627:22">check_insn</name><argument_list pos:start="627:23" pos:end="627:46">(<argument pos:start="627:24" pos:end="627:26"><expr pos:start="627:24" pos:end="627:26"><name pos:start="627:24" pos:end="627:26">env</name></expr></argument>, <argument pos:start="627:29" pos:end="627:31"><expr pos:start="627:29" pos:end="627:31"><name pos:start="627:29" pos:end="627:31">ctx</name></expr></argument>, <argument pos:start="627:34" pos:end="627:45"><expr pos:start="627:34" pos:end="627:45"><name pos:start="627:34" pos:end="627:45">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="629:13" pos:end="629:49"><expr pos:start="629:13" pos:end="629:48"><call pos:start="629:13" pos:end="629:48"><name pos:start="629:13" pos:end="629:22">gen_bitops</name><argument_list pos:start="629:23" pos:end="629:48">(<argument pos:start="629:24" pos:end="629:26"><expr pos:start="629:24" pos:end="629:26"><name pos:start="629:24" pos:end="629:26">ctx</name></expr></argument>, <argument pos:start="629:29" pos:end="629:31"><expr pos:start="629:29" pos:end="629:31"><name pos:start="629:29" pos:end="629:31">op1</name></expr></argument>, <argument pos:start="629:34" pos:end="629:35"><expr pos:start="629:34" pos:end="629:35"><name pos:start="629:34" pos:end="629:35">rt</name></expr></argument>, <argument pos:start="629:38" pos:end="629:39"><expr pos:start="629:38" pos:end="629:39"><name pos:start="629:38" pos:end="629:39">rs</name></expr></argument>, <argument pos:start="629:42" pos:end="629:43"><expr pos:start="629:42" pos:end="629:43"><name pos:start="629:42" pos:end="629:43">sa</name></expr></argument>, <argument pos:start="629:46" pos:end="629:47"><expr pos:start="629:46" pos:end="629:47"><name pos:start="629:46" pos:end="629:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="631:13" pos:end="631:18">break;</break>

        <case pos:start="633:9" pos:end="633:23">case <expr pos:start="633:14" pos:end="633:22"><name pos:start="633:14" pos:end="633:22">OPC_BSHFL</name></expr>:</case>

            <expr_stmt pos:start="635:13" pos:end="635:47"><expr pos:start="635:13" pos:end="635:46"><call pos:start="635:13" pos:end="635:46"><name pos:start="635:13" pos:end="635:22">check_insn</name><argument_list pos:start="635:23" pos:end="635:46">(<argument pos:start="635:24" pos:end="635:26"><expr pos:start="635:24" pos:end="635:26"><name pos:start="635:24" pos:end="635:26">env</name></expr></argument>, <argument pos:start="635:29" pos:end="635:31"><expr pos:start="635:29" pos:end="635:31"><name pos:start="635:29" pos:end="635:31">ctx</name></expr></argument>, <argument pos:start="635:34" pos:end="635:45"><expr pos:start="635:34" pos:end="635:45"><name pos:start="635:34" pos:end="635:45">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="637:13" pos:end="637:42"><expr pos:start="637:13" pos:end="637:41"><name pos:start="637:13" pos:end="637:15">op2</name> <operator pos:start="637:17" pos:end="637:17">=</operator> <call pos:start="637:19" pos:end="637:41"><name pos:start="637:19" pos:end="637:28">MASK_BSHFL</name><argument_list pos:start="637:29" pos:end="637:41">(<argument pos:start="637:30" pos:end="637:40"><expr pos:start="637:30" pos:end="637:40"><name pos:start="637:30" pos:end="637:40"><name pos:start="637:30" pos:end="637:32">ctx</name><operator pos:start="637:33" pos:end="637:34">-&gt;</operator><name pos:start="637:35" pos:end="637:40">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="639:13" pos:end="639:40"><expr pos:start="639:13" pos:end="639:39"><call pos:start="639:13" pos:end="639:39"><name pos:start="639:13" pos:end="639:21">gen_bshfl</name><argument_list pos:start="639:22" pos:end="639:39">(<argument pos:start="639:23" pos:end="639:25"><expr pos:start="639:23" pos:end="639:25"><name pos:start="639:23" pos:end="639:25">ctx</name></expr></argument>, <argument pos:start="639:28" pos:end="639:30"><expr pos:start="639:28" pos:end="639:30"><name pos:start="639:28" pos:end="639:30">op2</name></expr></argument>, <argument pos:start="639:33" pos:end="639:34"><expr pos:start="639:33" pos:end="639:34"><name pos:start="639:33" pos:end="639:34">rt</name></expr></argument>, <argument pos:start="639:37" pos:end="639:38"><expr pos:start="639:37" pos:end="639:38"><name pos:start="639:37" pos:end="639:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="641:13" pos:end="641:18">break;</break>

        <case pos:start="643:9" pos:end="643:23">case <expr pos:start="643:14" pos:end="643:22"><name pos:start="643:14" pos:end="643:22">OPC_RDHWR</name></expr>:</case>

            <expr_stmt pos:start="645:13" pos:end="645:40"><expr pos:start="645:13" pos:end="645:39"><call pos:start="645:13" pos:end="645:39"><name pos:start="645:13" pos:end="645:21">gen_rdhwr</name><argument_list pos:start="645:22" pos:end="645:39">(<argument pos:start="645:23" pos:end="645:25"><expr pos:start="645:23" pos:end="645:25"><name pos:start="645:23" pos:end="645:25">env</name></expr></argument>, <argument pos:start="645:28" pos:end="645:30"><expr pos:start="645:28" pos:end="645:30"><name pos:start="645:28" pos:end="645:30">ctx</name></expr></argument>, <argument pos:start="645:33" pos:end="645:34"><expr pos:start="645:33" pos:end="645:34"><name pos:start="645:33" pos:end="645:34">rt</name></expr></argument>, <argument pos:start="645:37" pos:end="645:38"><expr pos:start="645:37" pos:end="645:38"><name pos:start="645:37" pos:end="645:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="647:13" pos:end="647:18">break;</break>

        <case pos:start="649:9" pos:end="649:22">case <expr pos:start="649:14" pos:end="649:21"><name pos:start="649:14" pos:end="649:21">OPC_FORK</name></expr>:</case>

            <expr_stmt pos:start="651:13" pos:end="651:41"><expr pos:start="651:13" pos:end="651:40"><call pos:start="651:13" pos:end="651:40"><name pos:start="651:13" pos:end="651:22">check_insn</name><argument_list pos:start="651:23" pos:end="651:40">(<argument pos:start="651:24" pos:end="651:26"><expr pos:start="651:24" pos:end="651:26"><name pos:start="651:24" pos:end="651:26">env</name></expr></argument>, <argument pos:start="651:29" pos:end="651:31"><expr pos:start="651:29" pos:end="651:31"><name pos:start="651:29" pos:end="651:31">ctx</name></expr></argument>, <argument pos:start="651:34" pos:end="651:39"><expr pos:start="651:34" pos:end="651:39"><name pos:start="651:34" pos:end="651:39">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="653:13" pos:end="671:13">{<block_content pos:start="655:17" pos:end="669:34">

                <decl_stmt pos:start="655:17" pos:end="655:41"><decl pos:start="655:17" pos:end="655:40"><type pos:start="655:17" pos:end="655:20"><name pos:start="655:17" pos:end="655:20">TCGv</name></type> <name pos:start="655:22" pos:end="655:23">t0</name> <init pos:start="655:25" pos:end="655:40">= <expr pos:start="655:27" pos:end="655:40"><call pos:start="655:27" pos:end="655:40"><name pos:start="655:27" pos:end="655:38">tcg_temp_new</name><argument_list pos:start="655:39" pos:end="655:40">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="657:17" pos:end="657:41"><decl pos:start="657:17" pos:end="657:40"><type pos:start="657:17" pos:end="657:20"><name pos:start="657:17" pos:end="657:20">TCGv</name></type> <name pos:start="657:22" pos:end="657:23">t1</name> <init pos:start="657:25" pos:end="657:40">= <expr pos:start="657:27" pos:end="657:40"><call pos:start="657:27" pos:end="657:40"><name pos:start="657:27" pos:end="657:38">tcg_temp_new</name><argument_list pos:start="657:39" pos:end="657:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="661:17" pos:end="661:37"><expr pos:start="661:17" pos:end="661:36"><call pos:start="661:17" pos:end="661:36"><name pos:start="661:17" pos:end="661:28">gen_load_gpr</name><argument_list pos:start="661:29" pos:end="661:36">(<argument pos:start="661:30" pos:end="661:31"><expr pos:start="661:30" pos:end="661:31"><name pos:start="661:30" pos:end="661:31">t0</name></expr></argument>, <argument pos:start="661:34" pos:end="661:35"><expr pos:start="661:34" pos:end="661:35"><name pos:start="661:34" pos:end="661:35">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="663:17" pos:end="663:37"><expr pos:start="663:17" pos:end="663:36"><call pos:start="663:17" pos:end="663:36"><name pos:start="663:17" pos:end="663:28">gen_load_gpr</name><argument_list pos:start="663:29" pos:end="663:36">(<argument pos:start="663:30" pos:end="663:31"><expr pos:start="663:30" pos:end="663:31"><name pos:start="663:30" pos:end="663:31">t1</name></expr></argument>, <argument pos:start="663:34" pos:end="663:35"><expr pos:start="663:34" pos:end="663:35"><name pos:start="663:34" pos:end="663:35">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="665:17" pos:end="665:40"><expr pos:start="665:17" pos:end="665:39"><call pos:start="665:17" pos:end="665:39"><name pos:start="665:17" pos:end="665:31">gen_helper_fork</name><argument_list pos:start="665:32" pos:end="665:39">(<argument pos:start="665:33" pos:end="665:34"><expr pos:start="665:33" pos:end="665:34"><name pos:start="665:33" pos:end="665:34">t0</name></expr></argument>, <argument pos:start="665:37" pos:end="665:38"><expr pos:start="665:37" pos:end="665:38"><name pos:start="665:37" pos:end="665:38">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="667:17" pos:end="667:34"><expr pos:start="667:17" pos:end="667:33"><call pos:start="667:17" pos:end="667:33"><name pos:start="667:17" pos:end="667:29">tcg_temp_free</name><argument_list pos:start="667:30" pos:end="667:33">(<argument pos:start="667:31" pos:end="667:32"><expr pos:start="667:31" pos:end="667:32"><name pos:start="667:31" pos:end="667:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="669:17" pos:end="669:34"><expr pos:start="669:17" pos:end="669:33"><call pos:start="669:17" pos:end="669:33"><name pos:start="669:17" pos:end="669:29">tcg_temp_free</name><argument_list pos:start="669:30" pos:end="669:33">(<argument pos:start="669:31" pos:end="669:32"><expr pos:start="669:31" pos:end="669:32"><name pos:start="669:31" pos:end="669:32">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="673:13" pos:end="673:18">break;</break>

        <case pos:start="675:9" pos:end="675:23">case <expr pos:start="675:14" pos:end="675:22"><name pos:start="675:14" pos:end="675:22">OPC_YIELD</name></expr>:</case>

            <expr_stmt pos:start="677:13" pos:end="677:41"><expr pos:start="677:13" pos:end="677:40"><call pos:start="677:13" pos:end="677:40"><name pos:start="677:13" pos:end="677:22">check_insn</name><argument_list pos:start="677:23" pos:end="677:40">(<argument pos:start="677:24" pos:end="677:26"><expr pos:start="677:24" pos:end="677:26"><name pos:start="677:24" pos:end="677:26">env</name></expr></argument>, <argument pos:start="677:29" pos:end="677:31"><expr pos:start="677:29" pos:end="677:31"><name pos:start="677:29" pos:end="677:31">ctx</name></expr></argument>, <argument pos:start="677:34" pos:end="677:39"><expr pos:start="677:34" pos:end="677:39"><name pos:start="677:34" pos:end="677:39">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="679:13" pos:end="695:13">{<block_content pos:start="681:17" pos:end="693:34">

                <decl_stmt pos:start="681:17" pos:end="681:41"><decl pos:start="681:17" pos:end="681:40"><type pos:start="681:17" pos:end="681:20"><name pos:start="681:17" pos:end="681:20">TCGv</name></type> <name pos:start="681:22" pos:end="681:23">t0</name> <init pos:start="681:25" pos:end="681:40">= <expr pos:start="681:27" pos:end="681:40"><call pos:start="681:27" pos:end="681:40"><name pos:start="681:27" pos:end="681:38">tcg_temp_new</name><argument_list pos:start="681:39" pos:end="681:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="685:17" pos:end="685:39"><expr pos:start="685:17" pos:end="685:38"><call pos:start="685:17" pos:end="685:38"><name pos:start="685:17" pos:end="685:30">save_cpu_state</name><argument_list pos:start="685:31" pos:end="685:38">(<argument pos:start="685:32" pos:end="685:34"><expr pos:start="685:32" pos:end="685:34"><name pos:start="685:32" pos:end="685:34">ctx</name></expr></argument>, <argument pos:start="685:37" pos:end="685:37"><expr pos:start="685:37" pos:end="685:37"><literal type="number" pos:start="685:37" pos:end="685:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="687:17" pos:end="687:37"><expr pos:start="687:17" pos:end="687:36"><call pos:start="687:17" pos:end="687:36"><name pos:start="687:17" pos:end="687:28">gen_load_gpr</name><argument_list pos:start="687:29" pos:end="687:36">(<argument pos:start="687:30" pos:end="687:31"><expr pos:start="687:30" pos:end="687:31"><name pos:start="687:30" pos:end="687:31">t0</name></expr></argument>, <argument pos:start="687:34" pos:end="687:35"><expr pos:start="687:34" pos:end="687:35"><name pos:start="687:34" pos:end="687:35">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="689:17" pos:end="689:41"><expr pos:start="689:17" pos:end="689:40"><call pos:start="689:17" pos:end="689:40"><name pos:start="689:17" pos:end="689:32">gen_helper_yield</name><argument_list pos:start="689:33" pos:end="689:40">(<argument pos:start="689:34" pos:end="689:35"><expr pos:start="689:34" pos:end="689:35"><name pos:start="689:34" pos:end="689:35">t0</name></expr></argument>, <argument pos:start="689:38" pos:end="689:39"><expr pos:start="689:38" pos:end="689:39"><name pos:start="689:38" pos:end="689:39">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="691:17" pos:end="691:38"><expr pos:start="691:17" pos:end="691:37"><call pos:start="691:17" pos:end="691:37"><name pos:start="691:17" pos:end="691:29">gen_store_gpr</name><argument_list pos:start="691:30" pos:end="691:37">(<argument pos:start="691:31" pos:end="691:32"><expr pos:start="691:31" pos:end="691:32"><name pos:start="691:31" pos:end="691:32">t0</name></expr></argument>, <argument pos:start="691:35" pos:end="691:36"><expr pos:start="691:35" pos:end="691:36"><name pos:start="691:35" pos:end="691:36">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="693:17" pos:end="693:34"><expr pos:start="693:17" pos:end="693:33"><call pos:start="693:17" pos:end="693:33"><name pos:start="693:17" pos:end="693:29">tcg_temp_free</name><argument_list pos:start="693:30" pos:end="693:33">(<argument pos:start="693:31" pos:end="693:32"><expr pos:start="693:31" pos:end="693:32"><name pos:start="693:31" pos:end="693:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="697:13" pos:end="697:18">break;</break>

        <case pos:start="699:9" pos:end="699:44">case <expr pos:start="699:14" pos:end="699:43"><name pos:start="699:14" pos:end="699:25">OPC_DIV_G_2E</name> <operator pos:start="699:27" pos:end="699:29">...</operator> <name pos:start="699:31" pos:end="699:43">OPC_DIVU_G_2E</name></expr>:</case>

        <case pos:start="701:9" pos:end="701:46">case <expr pos:start="701:14" pos:end="701:45"><name pos:start="701:14" pos:end="701:26">OPC_MULT_G_2E</name> <operator pos:start="701:28" pos:end="701:30">...</operator> <name pos:start="701:32" pos:end="701:45">OPC_MULTU_G_2E</name></expr>:</case>

        <case pos:start="703:9" pos:end="703:44">case <expr pos:start="703:14" pos:end="703:43"><name pos:start="703:14" pos:end="703:25">OPC_MOD_G_2E</name> <operator pos:start="703:27" pos:end="703:29">...</operator> <name pos:start="703:31" pos:end="703:43">OPC_MODU_G_2E</name></expr>:</case>

            <expr_stmt pos:start="705:13" pos:end="705:50"><expr pos:start="705:13" pos:end="705:49"><call pos:start="705:13" pos:end="705:49"><name pos:start="705:13" pos:end="705:22">check_insn</name><argument_list pos:start="705:23" pos:end="705:49">(<argument pos:start="705:24" pos:end="705:26"><expr pos:start="705:24" pos:end="705:26"><name pos:start="705:24" pos:end="705:26">env</name></expr></argument>, <argument pos:start="705:29" pos:end="705:31"><expr pos:start="705:29" pos:end="705:31"><name pos:start="705:29" pos:end="705:31">ctx</name></expr></argument>, <argument pos:start="705:34" pos:end="705:48"><expr pos:start="705:34" pos:end="705:48"><name pos:start="705:34" pos:end="705:48">INSN_LOONGSON2E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="707:13" pos:end="707:55"><expr pos:start="707:13" pos:end="707:54"><call pos:start="707:13" pos:end="707:54"><name pos:start="707:13" pos:end="707:32">gen_loongson_integer</name><argument_list pos:start="707:33" pos:end="707:54">(<argument pos:start="707:34" pos:end="707:36"><expr pos:start="707:34" pos:end="707:36"><name pos:start="707:34" pos:end="707:36">ctx</name></expr></argument>, <argument pos:start="707:39" pos:end="707:41"><expr pos:start="707:39" pos:end="707:41"><name pos:start="707:39" pos:end="707:41">op1</name></expr></argument>, <argument pos:start="707:44" pos:end="707:45"><expr pos:start="707:44" pos:end="707:45"><name pos:start="707:44" pos:end="707:45">rd</name></expr></argument>, <argument pos:start="707:48" pos:end="707:49"><expr pos:start="707:48" pos:end="707:49"><name pos:start="707:48" pos:end="707:49">rs</name></expr></argument>, <argument pos:start="707:52" pos:end="707:53"><expr pos:start="707:52" pos:end="707:53"><name pos:start="707:52" pos:end="707:53">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="709:13" pos:end="712:0">break;</break>

<cpp:if pos:start="711:1" pos:end="711:26">#<cpp:directive pos:start="711:2" pos:end="711:3">if</cpp:directive> <expr pos:start="711:5" pos:end="711:26"><call pos:start="711:5" pos:end="711:26"><name pos:start="711:5" pos:end="711:11">defined</name><argument_list pos:start="711:12" pos:end="711:26">(<argument pos:start="711:13" pos:end="711:25"><expr pos:start="711:13" pos:end="711:25"><name pos:start="711:13" pos:end="711:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="713:9" pos:end="713:36">case <expr pos:start="713:14" pos:end="713:35"><name pos:start="713:14" pos:end="713:22">OPC_DEXTM</name> <operator pos:start="713:24" pos:end="713:26">...</operator> <name pos:start="713:28" pos:end="713:35">OPC_DEXT</name></expr>:</case>

        <case pos:start="715:9" pos:end="715:36">case <expr pos:start="715:14" pos:end="715:35"><name pos:start="715:14" pos:end="715:22">OPC_DINSM</name> <operator pos:start="715:24" pos:end="715:26">...</operator> <name pos:start="715:28" pos:end="715:35">OPC_DINS</name></expr>:</case>

            <expr_stmt pos:start="717:13" pos:end="717:47"><expr pos:start="717:13" pos:end="717:46"><call pos:start="717:13" pos:end="717:46"><name pos:start="717:13" pos:end="717:22">check_insn</name><argument_list pos:start="717:23" pos:end="717:46">(<argument pos:start="717:24" pos:end="717:26"><expr pos:start="717:24" pos:end="717:26"><name pos:start="717:24" pos:end="717:26">env</name></expr></argument>, <argument pos:start="717:29" pos:end="717:31"><expr pos:start="717:29" pos:end="717:31"><name pos:start="717:29" pos:end="717:31">ctx</name></expr></argument>, <argument pos:start="717:34" pos:end="717:45"><expr pos:start="717:34" pos:end="717:45"><name pos:start="717:34" pos:end="717:45">ISA_MIPS64R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="719:13" pos:end="719:31"><expr pos:start="719:13" pos:end="719:30"><call pos:start="719:13" pos:end="719:30"><name pos:start="719:13" pos:end="719:25">check_mips_64</name><argument_list pos:start="719:26" pos:end="719:30">(<argument pos:start="719:27" pos:end="719:29"><expr pos:start="719:27" pos:end="719:29"><name pos:start="719:27" pos:end="719:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="721:13" pos:end="721:49"><expr pos:start="721:13" pos:end="721:48"><call pos:start="721:13" pos:end="721:48"><name pos:start="721:13" pos:end="721:22">gen_bitops</name><argument_list pos:start="721:23" pos:end="721:48">(<argument pos:start="721:24" pos:end="721:26"><expr pos:start="721:24" pos:end="721:26"><name pos:start="721:24" pos:end="721:26">ctx</name></expr></argument>, <argument pos:start="721:29" pos:end="721:31"><expr pos:start="721:29" pos:end="721:31"><name pos:start="721:29" pos:end="721:31">op1</name></expr></argument>, <argument pos:start="721:34" pos:end="721:35"><expr pos:start="721:34" pos:end="721:35"><name pos:start="721:34" pos:end="721:35">rt</name></expr></argument>, <argument pos:start="721:38" pos:end="721:39"><expr pos:start="721:38" pos:end="721:39"><name pos:start="721:38" pos:end="721:39">rs</name></expr></argument>, <argument pos:start="721:42" pos:end="721:43"><expr pos:start="721:42" pos:end="721:43"><name pos:start="721:42" pos:end="721:43">sa</name></expr></argument>, <argument pos:start="721:46" pos:end="721:47"><expr pos:start="721:46" pos:end="721:47"><name pos:start="721:46" pos:end="721:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="723:13" pos:end="723:18">break;</break>

        <case pos:start="725:9" pos:end="725:24">case <expr pos:start="725:14" pos:end="725:23"><name pos:start="725:14" pos:end="725:23">OPC_DBSHFL</name></expr>:</case>

            <expr_stmt pos:start="727:13" pos:end="727:47"><expr pos:start="727:13" pos:end="727:46"><call pos:start="727:13" pos:end="727:46"><name pos:start="727:13" pos:end="727:22">check_insn</name><argument_list pos:start="727:23" pos:end="727:46">(<argument pos:start="727:24" pos:end="727:26"><expr pos:start="727:24" pos:end="727:26"><name pos:start="727:24" pos:end="727:26">env</name></expr></argument>, <argument pos:start="727:29" pos:end="727:31"><expr pos:start="727:29" pos:end="727:31"><name pos:start="727:29" pos:end="727:31">ctx</name></expr></argument>, <argument pos:start="727:34" pos:end="727:45"><expr pos:start="727:34" pos:end="727:45"><name pos:start="727:34" pos:end="727:45">ISA_MIPS64R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="729:13" pos:end="729:31"><expr pos:start="729:13" pos:end="729:30"><call pos:start="729:13" pos:end="729:30"><name pos:start="729:13" pos:end="729:25">check_mips_64</name><argument_list pos:start="729:26" pos:end="729:30">(<argument pos:start="729:27" pos:end="729:29"><expr pos:start="729:27" pos:end="729:29"><name pos:start="729:27" pos:end="729:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="731:13" pos:end="731:43"><expr pos:start="731:13" pos:end="731:42"><name pos:start="731:13" pos:end="731:15">op2</name> <operator pos:start="731:17" pos:end="731:17">=</operator> <call pos:start="731:19" pos:end="731:42"><name pos:start="731:19" pos:end="731:29">MASK_DBSHFL</name><argument_list pos:start="731:30" pos:end="731:42">(<argument pos:start="731:31" pos:end="731:41"><expr pos:start="731:31" pos:end="731:41"><name pos:start="731:31" pos:end="731:41"><name pos:start="731:31" pos:end="731:33">ctx</name><operator pos:start="731:34" pos:end="731:35">-&gt;</operator><name pos:start="731:36" pos:end="731:41">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="733:13" pos:end="733:40"><expr pos:start="733:13" pos:end="733:39"><call pos:start="733:13" pos:end="733:39"><name pos:start="733:13" pos:end="733:21">gen_bshfl</name><argument_list pos:start="733:22" pos:end="733:39">(<argument pos:start="733:23" pos:end="733:25"><expr pos:start="733:23" pos:end="733:25"><name pos:start="733:23" pos:end="733:25">ctx</name></expr></argument>, <argument pos:start="733:28" pos:end="733:30"><expr pos:start="733:28" pos:end="733:30"><name pos:start="733:28" pos:end="733:30">op2</name></expr></argument>, <argument pos:start="733:33" pos:end="733:34"><expr pos:start="733:33" pos:end="733:34"><name pos:start="733:33" pos:end="733:34">rt</name></expr></argument>, <argument pos:start="733:37" pos:end="733:38"><expr pos:start="733:37" pos:end="733:38"><name pos:start="733:37" pos:end="733:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="735:13" pos:end="735:18">break;</break>

        <case pos:start="737:9" pos:end="737:46">case <expr pos:start="737:14" pos:end="737:45"><name pos:start="737:14" pos:end="737:26">OPC_DDIV_G_2E</name> <operator pos:start="737:28" pos:end="737:30">...</operator> <name pos:start="737:32" pos:end="737:45">OPC_DDIVU_G_2E</name></expr>:</case>

        <case pos:start="739:9" pos:end="739:48">case <expr pos:start="739:14" pos:end="739:47"><name pos:start="739:14" pos:end="739:27">OPC_DMULT_G_2E</name> <operator pos:start="739:29" pos:end="739:31">...</operator> <name pos:start="739:33" pos:end="739:47">OPC_DMULTU_G_2E</name></expr>:</case>

        <case pos:start="741:9" pos:end="741:46">case <expr pos:start="741:14" pos:end="741:45"><name pos:start="741:14" pos:end="741:26">OPC_DMOD_G_2E</name> <operator pos:start="741:28" pos:end="741:30">...</operator> <name pos:start="741:32" pos:end="741:45">OPC_DMODU_G_2E</name></expr>:</case>

            <expr_stmt pos:start="743:13" pos:end="743:50"><expr pos:start="743:13" pos:end="743:49"><call pos:start="743:13" pos:end="743:49"><name pos:start="743:13" pos:end="743:22">check_insn</name><argument_list pos:start="743:23" pos:end="743:49">(<argument pos:start="743:24" pos:end="743:26"><expr pos:start="743:24" pos:end="743:26"><name pos:start="743:24" pos:end="743:26">env</name></expr></argument>, <argument pos:start="743:29" pos:end="743:31"><expr pos:start="743:29" pos:end="743:31"><name pos:start="743:29" pos:end="743:31">ctx</name></expr></argument>, <argument pos:start="743:34" pos:end="743:48"><expr pos:start="743:34" pos:end="743:48"><name pos:start="743:34" pos:end="743:48">INSN_LOONGSON2E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="745:13" pos:end="745:55"><expr pos:start="745:13" pos:end="745:54"><call pos:start="745:13" pos:end="745:54"><name pos:start="745:13" pos:end="745:32">gen_loongson_integer</name><argument_list pos:start="745:33" pos:end="745:54">(<argument pos:start="745:34" pos:end="745:36"><expr pos:start="745:34" pos:end="745:36"><name pos:start="745:34" pos:end="745:36">ctx</name></expr></argument>, <argument pos:start="745:39" pos:end="745:41"><expr pos:start="745:39" pos:end="745:41"><name pos:start="745:39" pos:end="745:41">op1</name></expr></argument>, <argument pos:start="745:44" pos:end="745:45"><expr pos:start="745:44" pos:end="745:45"><name pos:start="745:44" pos:end="745:45">rd</name></expr></argument>, <argument pos:start="745:48" pos:end="745:49"><expr pos:start="745:48" pos:end="745:49"><name pos:start="745:48" pos:end="745:49">rs</name></expr></argument>, <argument pos:start="745:52" pos:end="745:53"><expr pos:start="745:52" pos:end="745:53"><name pos:start="745:52" pos:end="745:53">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="747:13" pos:end="750:0">break;</break>

<cpp:endif pos:start="749:1" pos:end="749:6">#<cpp:directive pos:start="749:2" pos:end="749:6">endif</cpp:directive></cpp:endif>

        <default pos:start="751:9" pos:end="751:16">default:</default>            <comment type="block" pos:start="751:29" pos:end="751:41">/* Invalid */</comment>

            <expr_stmt pos:start="753:13" pos:end="753:35"><expr pos:start="753:13" pos:end="753:34"><call pos:start="753:13" pos:end="753:34"><name pos:start="753:13" pos:end="753:22">MIPS_INVAL</name><argument_list pos:start="753:23" pos:end="753:34">(<argument pos:start="753:24" pos:end="753:33"><expr pos:start="753:24" pos:end="753:33"><literal type="string" pos:start="753:24" pos:end="753:33">"special3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="755:13" pos:end="755:45"><expr pos:start="755:13" pos:end="755:44"><call pos:start="755:13" pos:end="755:44"><name pos:start="755:13" pos:end="755:30">generate_exception</name><argument_list pos:start="755:31" pos:end="755:44">(<argument pos:start="755:32" pos:end="755:34"><expr pos:start="755:32" pos:end="755:34"><name pos:start="755:32" pos:end="755:34">ctx</name></expr></argument>, <argument pos:start="755:37" pos:end="755:43"><expr pos:start="755:37" pos:end="755:43"><name pos:start="755:37" pos:end="755:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="757:13" pos:end="757:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="761:9" pos:end="761:14">break;</break>

    <case pos:start="763:5" pos:end="763:20">case <expr pos:start="763:10" pos:end="763:19"><name pos:start="763:10" pos:end="763:19">OPC_REGIMM</name></expr>:</case>

        <expr_stmt pos:start="765:9" pos:end="765:39"><expr pos:start="765:9" pos:end="765:38"><name pos:start="765:9" pos:end="765:11">op1</name> <operator pos:start="765:13" pos:end="765:13">=</operator> <call pos:start="765:15" pos:end="765:38"><name pos:start="765:15" pos:end="765:25">MASK_REGIMM</name><argument_list pos:start="765:26" pos:end="765:38">(<argument pos:start="765:27" pos:end="765:37"><expr pos:start="765:27" pos:end="765:37"><name pos:start="765:27" pos:end="765:37"><name pos:start="765:27" pos:end="765:29">ctx</name><operator pos:start="765:30" pos:end="765:31">-&gt;</operator><name pos:start="765:32" pos:end="765:37">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="767:9" pos:end="803:9">switch <condition pos:start="767:16" pos:end="767:20">(<expr pos:start="767:17" pos:end="767:19"><name pos:start="767:17" pos:end="767:19">op1</name></expr>)</condition> <block pos:start="767:22" pos:end="803:9">{<block_content pos:start="769:9" pos:end="801:18">

        <case pos:start="769:9" pos:end="769:36">case <expr pos:start="769:14" pos:end="769:35"><name pos:start="769:14" pos:end="769:21">OPC_BLTZ</name> <operator pos:start="769:23" pos:end="769:25">...</operator> <name pos:start="769:27" pos:end="769:35">OPC_BGEZL</name></expr>:</case> <comment type="block" pos:start="769:38" pos:end="769:58">/* REGIMM branches */</comment>

        <case pos:start="771:9" pos:end="771:40">case <expr pos:start="771:14" pos:end="771:39"><name pos:start="771:14" pos:end="771:23">OPC_BLTZAL</name> <operator pos:start="771:25" pos:end="771:27">...</operator> <name pos:start="771:29" pos:end="771:39">OPC_BGEZALL</name></expr>:</case>

            <expr_stmt pos:start="773:13" pos:end="773:62"><expr pos:start="773:13" pos:end="773:61"><call pos:start="773:13" pos:end="773:61"><name pos:start="773:13" pos:end="773:30">gen_compute_branch</name><argument_list pos:start="773:31" pos:end="773:61">(<argument pos:start="773:32" pos:end="773:34"><expr pos:start="773:32" pos:end="773:34"><name pos:start="773:32" pos:end="773:34">ctx</name></expr></argument>, <argument pos:start="773:37" pos:end="773:39"><expr pos:start="773:37" pos:end="773:39"><name pos:start="773:37" pos:end="773:39">op1</name></expr></argument>, <argument pos:start="773:42" pos:end="773:42"><expr pos:start="773:42" pos:end="773:42"><literal type="number" pos:start="773:42" pos:end="773:42">4</literal></expr></argument>, <argument pos:start="773:45" pos:end="773:46"><expr pos:start="773:45" pos:end="773:46"><name pos:start="773:45" pos:end="773:46">rs</name></expr></argument>, <argument pos:start="773:49" pos:end="773:50"><expr pos:start="773:49" pos:end="773:50"><operator pos:start="773:49" pos:end="773:49">-</operator><literal type="number" pos:start="773:50" pos:end="773:50">1</literal></expr></argument>, <argument pos:start="773:53" pos:end="773:60"><expr pos:start="773:53" pos:end="773:60"><name pos:start="773:53" pos:end="773:55">imm</name> <operator pos:start="773:57" pos:end="773:58">&lt;&lt;</operator> <literal type="number" pos:start="773:60" pos:end="773:60">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="775:13" pos:end="775:27"><expr pos:start="775:13" pos:end="775:26"><operator pos:start="775:13" pos:end="775:13">*</operator><name pos:start="775:14" pos:end="775:22">is_branch</name> <operator pos:start="775:24" pos:end="775:24">=</operator> <literal type="number" pos:start="775:26" pos:end="775:26">1</literal></expr>;</expr_stmt>

            <break pos:start="777:13" pos:end="777:18">break;</break>

        <case pos:start="779:9" pos:end="779:35">case <expr pos:start="779:14" pos:end="779:34"><name pos:start="779:14" pos:end="779:21">OPC_TGEI</name> <operator pos:start="779:23" pos:end="779:25">...</operator> <name pos:start="779:27" pos:end="779:34">OPC_TEQI</name></expr>:</case> <comment type="block" pos:start="779:37" pos:end="779:54">/* REGIMM traps */</comment>

        <case pos:start="781:9" pos:end="781:22">case <expr pos:start="781:14" pos:end="781:21"><name pos:start="781:14" pos:end="781:21">OPC_TNEI</name></expr>:</case>

            <expr_stmt pos:start="783:13" pos:end="783:44"><expr pos:start="783:13" pos:end="783:43"><call pos:start="783:13" pos:end="783:43"><name pos:start="783:13" pos:end="783:20">gen_trap</name><argument_list pos:start="783:21" pos:end="783:43">(<argument pos:start="783:22" pos:end="783:24"><expr pos:start="783:22" pos:end="783:24"><name pos:start="783:22" pos:end="783:24">ctx</name></expr></argument>, <argument pos:start="783:27" pos:end="783:29"><expr pos:start="783:27" pos:end="783:29"><name pos:start="783:27" pos:end="783:29">op1</name></expr></argument>, <argument pos:start="783:32" pos:end="783:33"><expr pos:start="783:32" pos:end="783:33"><name pos:start="783:32" pos:end="783:33">rs</name></expr></argument>, <argument pos:start="783:36" pos:end="783:37"><expr pos:start="783:36" pos:end="783:37"><operator pos:start="783:36" pos:end="783:36">-</operator><literal type="number" pos:start="783:37" pos:end="783:37">1</literal></expr></argument>, <argument pos:start="783:40" pos:end="783:42"><expr pos:start="783:40" pos:end="783:42"><name pos:start="783:40" pos:end="783:42">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="785:13" pos:end="785:18">break;</break>

        <case pos:start="787:9" pos:end="787:23">case <expr pos:start="787:14" pos:end="787:22"><name pos:start="787:14" pos:end="787:22">OPC_SYNCI</name></expr>:</case>

            <expr_stmt pos:start="789:13" pos:end="789:47"><expr pos:start="789:13" pos:end="789:46"><call pos:start="789:13" pos:end="789:46"><name pos:start="789:13" pos:end="789:22">check_insn</name><argument_list pos:start="789:23" pos:end="789:46">(<argument pos:start="789:24" pos:end="789:26"><expr pos:start="789:24" pos:end="789:26"><name pos:start="789:24" pos:end="789:26">env</name></expr></argument>, <argument pos:start="789:29" pos:end="789:31"><expr pos:start="789:29" pos:end="789:31"><name pos:start="789:29" pos:end="789:31">ctx</name></expr></argument>, <argument pos:start="789:34" pos:end="789:45"><expr pos:start="789:34" pos:end="789:45"><name pos:start="789:34" pos:end="789:45">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="791:13" pos:end="791:31">/* Treat as NOP. */</comment>

            <break pos:start="793:13" pos:end="793:18">break;</break>

        <default pos:start="795:9" pos:end="795:16">default:</default>            <comment type="block" pos:start="795:29" pos:end="795:41">/* Invalid */</comment>

            <expr_stmt pos:start="797:13" pos:end="797:33"><expr pos:start="797:13" pos:end="797:32"><call pos:start="797:13" pos:end="797:32"><name pos:start="797:13" pos:end="797:22">MIPS_INVAL</name><argument_list pos:start="797:23" pos:end="797:32">(<argument pos:start="797:24" pos:end="797:31"><expr pos:start="797:24" pos:end="797:31"><literal type="string" pos:start="797:24" pos:end="797:31">"regimm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="799:13" pos:end="799:45"><expr pos:start="799:13" pos:end="799:44"><call pos:start="799:13" pos:end="799:44"><name pos:start="799:13" pos:end="799:30">generate_exception</name><argument_list pos:start="799:31" pos:end="799:44">(<argument pos:start="799:32" pos:end="799:34"><expr pos:start="799:32" pos:end="799:34"><name pos:start="799:32" pos:end="799:34">ctx</name></expr></argument>, <argument pos:start="799:37" pos:end="799:43"><expr pos:start="799:37" pos:end="799:43"><name pos:start="799:37" pos:end="799:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="801:13" pos:end="801:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="805:9" pos:end="805:14">break;</break>

    <case pos:start="807:5" pos:end="807:17">case <expr pos:start="807:10" pos:end="807:16"><name pos:start="807:10" pos:end="807:16">OPC_CP0</name></expr>:</case>

        <expr_stmt pos:start="809:9" pos:end="809:31"><expr pos:start="809:9" pos:end="809:30"><call pos:start="809:9" pos:end="809:30"><name pos:start="809:9" pos:end="809:25">check_cp0_enabled</name><argument_list pos:start="809:26" pos:end="809:30">(<argument pos:start="809:27" pos:end="809:29"><expr pos:start="809:27" pos:end="809:29"><name pos:start="809:27" pos:end="809:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="811:9" pos:end="811:36"><expr pos:start="811:9" pos:end="811:35"><name pos:start="811:9" pos:end="811:11">op1</name> <operator pos:start="811:13" pos:end="811:13">=</operator> <call pos:start="811:15" pos:end="811:35"><name pos:start="811:15" pos:end="811:22">MASK_CP0</name><argument_list pos:start="811:23" pos:end="811:35">(<argument pos:start="811:24" pos:end="811:34"><expr pos:start="811:24" pos:end="811:34"><name pos:start="811:24" pos:end="811:34"><name pos:start="811:24" pos:end="811:26">ctx</name><operator pos:start="811:27" pos:end="811:28">-&gt;</operator><name pos:start="811:29" pos:end="811:34">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="813:9" pos:end="977:9">switch <condition pos:start="813:16" pos:end="813:20">(<expr pos:start="813:17" pos:end="813:19"><name pos:start="813:17" pos:end="813:19">op1</name></expr>)</condition> <block pos:start="813:22" pos:end="977:9">{<block_content pos:start="815:9" pos:end="975:18">

        <case pos:start="815:9" pos:end="815:22">case <expr pos:start="815:14" pos:end="815:21"><name pos:start="815:14" pos:end="815:21">OPC_MFC0</name></expr>:</case>

        <case pos:start="817:9" pos:end="817:22">case <expr pos:start="817:14" pos:end="817:21"><name pos:start="817:14" pos:end="817:21">OPC_MTC0</name></expr>:</case>

        <case pos:start="819:9" pos:end="819:22">case <expr pos:start="819:14" pos:end="819:21"><name pos:start="819:14" pos:end="819:21">OPC_MFTR</name></expr>:</case>

        <case pos:start="821:9" pos:end="824:0">case <expr pos:start="821:14" pos:end="821:21"><name pos:start="821:14" pos:end="821:21">OPC_MTTR</name></expr>:</case>

<cpp:if pos:start="823:1" pos:end="823:26">#<cpp:directive pos:start="823:2" pos:end="823:3">if</cpp:directive> <expr pos:start="823:5" pos:end="823:26"><call pos:start="823:5" pos:end="823:26"><name pos:start="823:5" pos:end="823:11">defined</name><argument_list pos:start="823:12" pos:end="823:26">(<argument pos:start="823:13" pos:end="823:25"><expr pos:start="823:13" pos:end="823:25"><name pos:start="823:13" pos:end="823:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="825:9" pos:end="825:23">case <expr pos:start="825:14" pos:end="825:22"><name pos:start="825:14" pos:end="825:22">OPC_DMFC0</name></expr>:</case>

        <case pos:start="827:9" pos:end="832:0">case <expr pos:start="827:14" pos:end="827:22"><name pos:start="827:14" pos:end="827:22">OPC_DMTC0</name></expr>:</case>

<cpp:endif pos:start="829:1" pos:end="829:6">#<cpp:directive pos:start="829:2" pos:end="829:6">endif</cpp:directive></cpp:endif>

<cpp:ifndef pos:start="831:1" pos:end="831:24">#<cpp:directive pos:start="831:2" pos:end="831:7">ifndef</cpp:directive> <name pos:start="831:9" pos:end="831:24">CONFIG_USER_ONLY</name></cpp:ifndef>

            <expr_stmt pos:start="833:13" pos:end="836:0"><expr pos:start="833:13" pos:end="833:42"><call pos:start="833:13" pos:end="833:42"><name pos:start="833:13" pos:end="833:19">gen_cp0</name><argument_list pos:start="833:20" pos:end="833:42">(<argument pos:start="833:21" pos:end="833:23"><expr pos:start="833:21" pos:end="833:23"><name pos:start="833:21" pos:end="833:23">env</name></expr></argument>, <argument pos:start="833:26" pos:end="833:28"><expr pos:start="833:26" pos:end="833:28"><name pos:start="833:26" pos:end="833:28">ctx</name></expr></argument>, <argument pos:start="833:31" pos:end="833:33"><expr pos:start="833:31" pos:end="833:33"><name pos:start="833:31" pos:end="833:33">op1</name></expr></argument>, <argument pos:start="833:36" pos:end="833:37"><expr pos:start="833:36" pos:end="833:37"><name pos:start="833:36" pos:end="833:37">rt</name></expr></argument>, <argument pos:start="833:40" pos:end="833:41"><expr pos:start="833:40" pos:end="833:41"><name pos:start="833:40" pos:end="833:41">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="835:1" pos:end="835:6">#<cpp:directive pos:start="835:2" pos:end="835:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="835:8" pos:end="835:30">/* !CONFIG_USER_ONLY */</comment>

            <break pos:start="837:13" pos:end="837:18">break;</break>

        <case pos:start="839:9" pos:end="842:0">case <expr pos:start="839:14" pos:end="839:41"><name pos:start="839:14" pos:end="839:25">OPC_C0_FIRST</name> <operator pos:start="839:27" pos:end="839:29">...</operator> <name pos:start="839:31" pos:end="839:41">OPC_C0_LAST</name></expr>:</case>

<cpp:ifndef pos:start="841:1" pos:end="841:24">#<cpp:directive pos:start="841:2" pos:end="841:7">ifndef</cpp:directive> <name pos:start="841:9" pos:end="841:24">CONFIG_USER_ONLY</name></cpp:ifndef>

            <expr_stmt pos:start="843:13" pos:end="846:0"><expr pos:start="843:13" pos:end="843:59"><call pos:start="843:13" pos:end="843:59"><name pos:start="843:13" pos:end="843:19">gen_cp0</name><argument_list pos:start="843:20" pos:end="843:59">(<argument pos:start="843:21" pos:end="843:23"><expr pos:start="843:21" pos:end="843:23"><name pos:start="843:21" pos:end="843:23">env</name></expr></argument>, <argument pos:start="843:26" pos:end="843:28"><expr pos:start="843:26" pos:end="843:28"><name pos:start="843:26" pos:end="843:28">ctx</name></expr></argument>, <argument pos:start="843:31" pos:end="843:50"><expr pos:start="843:31" pos:end="843:50"><call pos:start="843:31" pos:end="843:50"><name pos:start="843:31" pos:end="843:37">MASK_C0</name><argument_list pos:start="843:38" pos:end="843:50">(<argument pos:start="843:39" pos:end="843:49"><expr pos:start="843:39" pos:end="843:49"><name pos:start="843:39" pos:end="843:49"><name pos:start="843:39" pos:end="843:41">ctx</name><operator pos:start="843:42" pos:end="843:43">-&gt;</operator><name pos:start="843:44" pos:end="843:49">opcode</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="843:53" pos:end="843:54"><expr pos:start="843:53" pos:end="843:54"><name pos:start="843:53" pos:end="843:54">rt</name></expr></argument>, <argument pos:start="843:57" pos:end="843:58"><expr pos:start="843:57" pos:end="843:58"><name pos:start="843:57" pos:end="843:58">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="845:1" pos:end="845:6">#<cpp:directive pos:start="845:2" pos:end="845:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="845:8" pos:end="845:30">/* !CONFIG_USER_ONLY */</comment>

            <break pos:start="847:13" pos:end="847:18">break;</break>

        <case pos:start="849:9" pos:end="852:0">case <expr pos:start="849:14" pos:end="849:22"><name pos:start="849:14" pos:end="849:22">OPC_MFMC0</name></expr>:</case>

<cpp:ifndef pos:start="851:1" pos:end="851:24">#<cpp:directive pos:start="851:2" pos:end="851:7">ifndef</cpp:directive> <name pos:start="851:9" pos:end="851:24">CONFIG_USER_ONLY</name></cpp:ifndef>

            <block pos:start="853:13" pos:end="950:0">{<block_content pos:start="855:17" pos:end="945:34">

                <decl_stmt pos:start="855:17" pos:end="855:41"><decl pos:start="855:17" pos:end="855:40"><type pos:start="855:17" pos:end="855:20"><name pos:start="855:17" pos:end="855:20">TCGv</name></type> <name pos:start="855:22" pos:end="855:23">t0</name> <init pos:start="855:25" pos:end="855:40">= <expr pos:start="855:27" pos:end="855:40"><call pos:start="855:27" pos:end="855:40"><name pos:start="855:27" pos:end="855:38">tcg_temp_new</name><argument_list pos:start="855:39" pos:end="855:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="859:17" pos:end="859:46"><expr pos:start="859:17" pos:end="859:45"><name pos:start="859:17" pos:end="859:19">op2</name> <operator pos:start="859:21" pos:end="859:21">=</operator> <call pos:start="859:23" pos:end="859:45"><name pos:start="859:23" pos:end="859:32">MASK_MFMC0</name><argument_list pos:start="859:33" pos:end="859:45">(<argument pos:start="859:34" pos:end="859:44"><expr pos:start="859:34" pos:end="859:44"><name pos:start="859:34" pos:end="859:44"><name pos:start="859:34" pos:end="859:36">ctx</name><operator pos:start="859:37" pos:end="859:38">-&gt;</operator><name pos:start="859:39" pos:end="859:44">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="861:17" pos:end="943:17">switch <condition pos:start="861:24" pos:end="861:28">(<expr pos:start="861:25" pos:end="861:27"><name pos:start="861:25" pos:end="861:27">op2</name></expr>)</condition> <block pos:start="861:30" pos:end="943:17">{<block_content pos:start="863:17" pos:end="941:26">

                <case pos:start="863:17" pos:end="863:29">case <expr pos:start="863:22" pos:end="863:28"><name pos:start="863:22" pos:end="863:28">OPC_DMT</name></expr>:</case>

                    <expr_stmt pos:start="865:21" pos:end="865:49"><expr pos:start="865:21" pos:end="865:48"><call pos:start="865:21" pos:end="865:48"><name pos:start="865:21" pos:end="865:30">check_insn</name><argument_list pos:start="865:31" pos:end="865:48">(<argument pos:start="865:32" pos:end="865:34"><expr pos:start="865:32" pos:end="865:34"><name pos:start="865:32" pos:end="865:34">env</name></expr></argument>, <argument pos:start="865:37" pos:end="865:39"><expr pos:start="865:37" pos:end="865:39"><name pos:start="865:37" pos:end="865:39">ctx</name></expr></argument>, <argument pos:start="865:42" pos:end="865:47"><expr pos:start="865:42" pos:end="865:47"><name pos:start="865:42" pos:end="865:47">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="867:21" pos:end="867:43"><expr pos:start="867:21" pos:end="867:42"><call pos:start="867:21" pos:end="867:42"><name pos:start="867:21" pos:end="867:34">gen_helper_dmt</name><argument_list pos:start="867:35" pos:end="867:42">(<argument pos:start="867:36" pos:end="867:37"><expr pos:start="867:36" pos:end="867:37"><name pos:start="867:36" pos:end="867:37">t0</name></expr></argument>, <argument pos:start="867:40" pos:end="867:41"><expr pos:start="867:40" pos:end="867:41"><name pos:start="867:40" pos:end="867:41">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="869:21" pos:end="869:42"><expr pos:start="869:21" pos:end="869:41"><call pos:start="869:21" pos:end="869:41"><name pos:start="869:21" pos:end="869:33">gen_store_gpr</name><argument_list pos:start="869:34" pos:end="869:41">(<argument pos:start="869:35" pos:end="869:36"><expr pos:start="869:35" pos:end="869:36"><name pos:start="869:35" pos:end="869:36">t0</name></expr></argument>, <argument pos:start="869:39" pos:end="869:40"><expr pos:start="869:39" pos:end="869:40"><name pos:start="869:39" pos:end="869:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="871:21" pos:end="871:26">break;</break>

                <case pos:start="873:17" pos:end="873:29">case <expr pos:start="873:22" pos:end="873:28"><name pos:start="873:22" pos:end="873:28">OPC_EMT</name></expr>:</case>

                    <expr_stmt pos:start="875:21" pos:end="875:49"><expr pos:start="875:21" pos:end="875:48"><call pos:start="875:21" pos:end="875:48"><name pos:start="875:21" pos:end="875:30">check_insn</name><argument_list pos:start="875:31" pos:end="875:48">(<argument pos:start="875:32" pos:end="875:34"><expr pos:start="875:32" pos:end="875:34"><name pos:start="875:32" pos:end="875:34">env</name></expr></argument>, <argument pos:start="875:37" pos:end="875:39"><expr pos:start="875:37" pos:end="875:39"><name pos:start="875:37" pos:end="875:39">ctx</name></expr></argument>, <argument pos:start="875:42" pos:end="875:47"><expr pos:start="875:42" pos:end="875:47"><name pos:start="875:42" pos:end="875:47">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="877:21" pos:end="877:43"><expr pos:start="877:21" pos:end="877:42"><call pos:start="877:21" pos:end="877:42"><name pos:start="877:21" pos:end="877:34">gen_helper_emt</name><argument_list pos:start="877:35" pos:end="877:42">(<argument pos:start="877:36" pos:end="877:37"><expr pos:start="877:36" pos:end="877:37"><name pos:start="877:36" pos:end="877:37">t0</name></expr></argument>, <argument pos:start="877:40" pos:end="877:41"><expr pos:start="877:40" pos:end="877:41"><name pos:start="877:40" pos:end="877:41">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="879:21" pos:end="879:42"><expr pos:start="879:21" pos:end="879:41"><call pos:start="879:21" pos:end="879:41"><name pos:start="879:21" pos:end="879:33">gen_store_gpr</name><argument_list pos:start="879:34" pos:end="879:41">(<argument pos:start="879:35" pos:end="879:36"><expr pos:start="879:35" pos:end="879:36"><name pos:start="879:35" pos:end="879:36">t0</name></expr></argument>, <argument pos:start="879:39" pos:end="879:40"><expr pos:start="879:39" pos:end="879:40"><name pos:start="879:39" pos:end="879:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="881:21" pos:end="881:26">break;</break>

                <case pos:start="883:17" pos:end="883:30">case <expr pos:start="883:22" pos:end="883:29"><name pos:start="883:22" pos:end="883:29">OPC_DVPE</name></expr>:</case>

                    <expr_stmt pos:start="885:21" pos:end="885:49"><expr pos:start="885:21" pos:end="885:48"><call pos:start="885:21" pos:end="885:48"><name pos:start="885:21" pos:end="885:30">check_insn</name><argument_list pos:start="885:31" pos:end="885:48">(<argument pos:start="885:32" pos:end="885:34"><expr pos:start="885:32" pos:end="885:34"><name pos:start="885:32" pos:end="885:34">env</name></expr></argument>, <argument pos:start="885:37" pos:end="885:39"><expr pos:start="885:37" pos:end="885:39"><name pos:start="885:37" pos:end="885:39">ctx</name></expr></argument>, <argument pos:start="885:42" pos:end="885:47"><expr pos:start="885:42" pos:end="885:47"><name pos:start="885:42" pos:end="885:47">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="887:21" pos:end="887:44"><expr pos:start="887:21" pos:end="887:43"><call pos:start="887:21" pos:end="887:43"><name pos:start="887:21" pos:end="887:35">gen_helper_dvpe</name><argument_list pos:start="887:36" pos:end="887:43">(<argument pos:start="887:37" pos:end="887:38"><expr pos:start="887:37" pos:end="887:38"><name pos:start="887:37" pos:end="887:38">t0</name></expr></argument>, <argument pos:start="887:41" pos:end="887:42"><expr pos:start="887:41" pos:end="887:42"><name pos:start="887:41" pos:end="887:42">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="889:21" pos:end="889:42"><expr pos:start="889:21" pos:end="889:41"><call pos:start="889:21" pos:end="889:41"><name pos:start="889:21" pos:end="889:33">gen_store_gpr</name><argument_list pos:start="889:34" pos:end="889:41">(<argument pos:start="889:35" pos:end="889:36"><expr pos:start="889:35" pos:end="889:36"><name pos:start="889:35" pos:end="889:36">t0</name></expr></argument>, <argument pos:start="889:39" pos:end="889:40"><expr pos:start="889:39" pos:end="889:40"><name pos:start="889:39" pos:end="889:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="891:21" pos:end="891:26">break;</break>

                <case pos:start="893:17" pos:end="893:30">case <expr pos:start="893:22" pos:end="893:29"><name pos:start="893:22" pos:end="893:29">OPC_EVPE</name></expr>:</case>

                    <expr_stmt pos:start="895:21" pos:end="895:49"><expr pos:start="895:21" pos:end="895:48"><call pos:start="895:21" pos:end="895:48"><name pos:start="895:21" pos:end="895:30">check_insn</name><argument_list pos:start="895:31" pos:end="895:48">(<argument pos:start="895:32" pos:end="895:34"><expr pos:start="895:32" pos:end="895:34"><name pos:start="895:32" pos:end="895:34">env</name></expr></argument>, <argument pos:start="895:37" pos:end="895:39"><expr pos:start="895:37" pos:end="895:39"><name pos:start="895:37" pos:end="895:39">ctx</name></expr></argument>, <argument pos:start="895:42" pos:end="895:47"><expr pos:start="895:42" pos:end="895:47"><name pos:start="895:42" pos:end="895:47">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="897:21" pos:end="897:44"><expr pos:start="897:21" pos:end="897:43"><call pos:start="897:21" pos:end="897:43"><name pos:start="897:21" pos:end="897:35">gen_helper_evpe</name><argument_list pos:start="897:36" pos:end="897:43">(<argument pos:start="897:37" pos:end="897:38"><expr pos:start="897:37" pos:end="897:38"><name pos:start="897:37" pos:end="897:38">t0</name></expr></argument>, <argument pos:start="897:41" pos:end="897:42"><expr pos:start="897:41" pos:end="897:42"><name pos:start="897:41" pos:end="897:42">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="899:21" pos:end="899:42"><expr pos:start="899:21" pos:end="899:41"><call pos:start="899:21" pos:end="899:41"><name pos:start="899:21" pos:end="899:33">gen_store_gpr</name><argument_list pos:start="899:34" pos:end="899:41">(<argument pos:start="899:35" pos:end="899:36"><expr pos:start="899:35" pos:end="899:36"><name pos:start="899:35" pos:end="899:36">t0</name></expr></argument>, <argument pos:start="899:39" pos:end="899:40"><expr pos:start="899:39" pos:end="899:40"><name pos:start="899:39" pos:end="899:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="901:21" pos:end="901:26">break;</break>

                <case pos:start="903:17" pos:end="903:28">case <expr pos:start="903:22" pos:end="903:27"><name pos:start="903:22" pos:end="903:27">OPC_DI</name></expr>:</case>

                    <expr_stmt pos:start="905:21" pos:end="905:55"><expr pos:start="905:21" pos:end="905:54"><call pos:start="905:21" pos:end="905:54"><name pos:start="905:21" pos:end="905:30">check_insn</name><argument_list pos:start="905:31" pos:end="905:54">(<argument pos:start="905:32" pos:end="905:34"><expr pos:start="905:32" pos:end="905:34"><name pos:start="905:32" pos:end="905:34">env</name></expr></argument>, <argument pos:start="905:37" pos:end="905:39"><expr pos:start="905:37" pos:end="905:39"><name pos:start="905:37" pos:end="905:39">ctx</name></expr></argument>, <argument pos:start="905:42" pos:end="905:53"><expr pos:start="905:42" pos:end="905:53"><name pos:start="905:42" pos:end="905:53">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="907:21" pos:end="907:43"><expr pos:start="907:21" pos:end="907:42"><call pos:start="907:21" pos:end="907:42"><name pos:start="907:21" pos:end="907:34">save_cpu_state</name><argument_list pos:start="907:35" pos:end="907:42">(<argument pos:start="907:36" pos:end="907:38"><expr pos:start="907:36" pos:end="907:38"><name pos:start="907:36" pos:end="907:38">ctx</name></expr></argument>, <argument pos:start="907:41" pos:end="907:41"><expr pos:start="907:41" pos:end="907:41"><literal type="number" pos:start="907:41" pos:end="907:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="909:21" pos:end="909:38"><expr pos:start="909:21" pos:end="909:37"><call pos:start="909:21" pos:end="909:37"><name pos:start="909:21" pos:end="909:33">gen_helper_di</name><argument_list pos:start="909:34" pos:end="909:37">(<argument pos:start="909:35" pos:end="909:36"><expr pos:start="909:35" pos:end="909:36"><name pos:start="909:35" pos:end="909:36">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="911:21" pos:end="911:42"><expr pos:start="911:21" pos:end="911:41"><call pos:start="911:21" pos:end="911:41"><name pos:start="911:21" pos:end="911:33">gen_store_gpr</name><argument_list pos:start="911:34" pos:end="911:41">(<argument pos:start="911:35" pos:end="911:36"><expr pos:start="911:35" pos:end="911:36"><name pos:start="911:35" pos:end="911:36">t0</name></expr></argument>, <argument pos:start="911:39" pos:end="911:40"><expr pos:start="911:39" pos:end="911:40"><name pos:start="911:39" pos:end="911:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="913:21" pos:end="913:85">/* Stop translation as we may have switched the execution mode */</comment>

                    <expr_stmt pos:start="915:21" pos:end="915:42"><expr pos:start="915:21" pos:end="915:41"><name pos:start="915:21" pos:end="915:31"><name pos:start="915:21" pos:end="915:23">ctx</name><operator pos:start="915:24" pos:end="915:25">-&gt;</operator><name pos:start="915:26" pos:end="915:31">bstate</name></name> <operator pos:start="915:33" pos:end="915:33">=</operator> <name pos:start="915:35" pos:end="915:41">BS_STOP</name></expr>;</expr_stmt>

                    <break pos:start="917:21" pos:end="917:26">break;</break>

                <case pos:start="919:17" pos:end="919:28">case <expr pos:start="919:22" pos:end="919:27"><name pos:start="919:22" pos:end="919:27">OPC_EI</name></expr>:</case>

                    <expr_stmt pos:start="921:21" pos:end="921:55"><expr pos:start="921:21" pos:end="921:54"><call pos:start="921:21" pos:end="921:54"><name pos:start="921:21" pos:end="921:30">check_insn</name><argument_list pos:start="921:31" pos:end="921:54">(<argument pos:start="921:32" pos:end="921:34"><expr pos:start="921:32" pos:end="921:34"><name pos:start="921:32" pos:end="921:34">env</name></expr></argument>, <argument pos:start="921:37" pos:end="921:39"><expr pos:start="921:37" pos:end="921:39"><name pos:start="921:37" pos:end="921:39">ctx</name></expr></argument>, <argument pos:start="921:42" pos:end="921:53"><expr pos:start="921:42" pos:end="921:53"><name pos:start="921:42" pos:end="921:53">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="923:21" pos:end="923:43"><expr pos:start="923:21" pos:end="923:42"><call pos:start="923:21" pos:end="923:42"><name pos:start="923:21" pos:end="923:34">save_cpu_state</name><argument_list pos:start="923:35" pos:end="923:42">(<argument pos:start="923:36" pos:end="923:38"><expr pos:start="923:36" pos:end="923:38"><name pos:start="923:36" pos:end="923:38">ctx</name></expr></argument>, <argument pos:start="923:41" pos:end="923:41"><expr pos:start="923:41" pos:end="923:41"><literal type="number" pos:start="923:41" pos:end="923:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="925:21" pos:end="925:38"><expr pos:start="925:21" pos:end="925:37"><call pos:start="925:21" pos:end="925:37"><name pos:start="925:21" pos:end="925:33">gen_helper_ei</name><argument_list pos:start="925:34" pos:end="925:37">(<argument pos:start="925:35" pos:end="925:36"><expr pos:start="925:35" pos:end="925:36"><name pos:start="925:35" pos:end="925:36">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="927:21" pos:end="927:42"><expr pos:start="927:21" pos:end="927:41"><call pos:start="927:21" pos:end="927:41"><name pos:start="927:21" pos:end="927:33">gen_store_gpr</name><argument_list pos:start="927:34" pos:end="927:41">(<argument pos:start="927:35" pos:end="927:36"><expr pos:start="927:35" pos:end="927:36"><name pos:start="927:35" pos:end="927:36">t0</name></expr></argument>, <argument pos:start="927:39" pos:end="927:40"><expr pos:start="927:39" pos:end="927:40"><name pos:start="927:39" pos:end="927:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="929:21" pos:end="929:85">/* Stop translation as we may have switched the execution mode */</comment>

                    <expr_stmt pos:start="931:21" pos:end="931:42"><expr pos:start="931:21" pos:end="931:41"><name pos:start="931:21" pos:end="931:31"><name pos:start="931:21" pos:end="931:23">ctx</name><operator pos:start="931:24" pos:end="931:25">-&gt;</operator><name pos:start="931:26" pos:end="931:31">bstate</name></name> <operator pos:start="931:33" pos:end="931:33">=</operator> <name pos:start="931:35" pos:end="931:41">BS_STOP</name></expr>;</expr_stmt>

                    <break pos:start="933:21" pos:end="933:26">break;</break>

                <default pos:start="935:17" pos:end="935:24">default:</default>            <comment type="block" pos:start="935:37" pos:end="935:49">/* Invalid */</comment>

                    <expr_stmt pos:start="937:21" pos:end="937:40"><expr pos:start="937:21" pos:end="937:39"><call pos:start="937:21" pos:end="937:39"><name pos:start="937:21" pos:end="937:30">MIPS_INVAL</name><argument_list pos:start="937:31" pos:end="937:39">(<argument pos:start="937:32" pos:end="937:38"><expr pos:start="937:32" pos:end="937:38"><literal type="string" pos:start="937:32" pos:end="937:38">"mfmc0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="939:21" pos:end="939:53"><expr pos:start="939:21" pos:end="939:52"><call pos:start="939:21" pos:end="939:52"><name pos:start="939:21" pos:end="939:38">generate_exception</name><argument_list pos:start="939:39" pos:end="939:52">(<argument pos:start="939:40" pos:end="939:42"><expr pos:start="939:40" pos:end="939:42"><name pos:start="939:40" pos:end="939:42">ctx</name></expr></argument>, <argument pos:start="939:45" pos:end="939:51"><expr pos:start="939:45" pos:end="939:51"><name pos:start="939:45" pos:end="939:51">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="941:21" pos:end="941:26">break;</break>

                </block_content>}</block></switch>

                <expr_stmt pos:start="945:17" pos:end="945:34"><expr pos:start="945:17" pos:end="945:33"><call pos:start="945:17" pos:end="945:33"><name pos:start="945:17" pos:end="945:29">tcg_temp_free</name><argument_list pos:start="945:30" pos:end="945:33">(<argument pos:start="945:31" pos:end="945:32"><expr pos:start="945:31" pos:end="945:32"><name pos:start="945:31" pos:end="945:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

<cpp:endif pos:start="949:1" pos:end="949:6">#<cpp:directive pos:start="949:2" pos:end="949:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="949:8" pos:end="949:30">/* !CONFIG_USER_ONLY */</comment>

            <break pos:start="951:13" pos:end="951:18">break;</break>

        <case pos:start="953:9" pos:end="953:24">case <expr pos:start="953:14" pos:end="953:23"><name pos:start="953:14" pos:end="953:23">OPC_RDPGPR</name></expr>:</case>

            <expr_stmt pos:start="955:13" pos:end="955:47"><expr pos:start="955:13" pos:end="955:46"><call pos:start="955:13" pos:end="955:46"><name pos:start="955:13" pos:end="955:22">check_insn</name><argument_list pos:start="955:23" pos:end="955:46">(<argument pos:start="955:24" pos:end="955:26"><expr pos:start="955:24" pos:end="955:26"><name pos:start="955:24" pos:end="955:26">env</name></expr></argument>, <argument pos:start="955:29" pos:end="955:31"><expr pos:start="955:29" pos:end="955:31"><name pos:start="955:29" pos:end="955:31">ctx</name></expr></argument>, <argument pos:start="955:34" pos:end="955:45"><expr pos:start="955:34" pos:end="955:45"><name pos:start="955:34" pos:end="955:45">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="957:13" pos:end="957:36"><expr pos:start="957:13" pos:end="957:35"><call pos:start="957:13" pos:end="957:35"><name pos:start="957:13" pos:end="957:27">gen_load_srsgpr</name><argument_list pos:start="957:28" pos:end="957:35">(<argument pos:start="957:29" pos:end="957:30"><expr pos:start="957:29" pos:end="957:30"><name pos:start="957:29" pos:end="957:30">rt</name></expr></argument>, <argument pos:start="957:33" pos:end="957:34"><expr pos:start="957:33" pos:end="957:34"><name pos:start="957:33" pos:end="957:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="959:13" pos:end="959:18">break;</break>

        <case pos:start="961:9" pos:end="961:24">case <expr pos:start="961:14" pos:end="961:23"><name pos:start="961:14" pos:end="961:23">OPC_WRPGPR</name></expr>:</case>

            <expr_stmt pos:start="963:13" pos:end="963:47"><expr pos:start="963:13" pos:end="963:46"><call pos:start="963:13" pos:end="963:46"><name pos:start="963:13" pos:end="963:22">check_insn</name><argument_list pos:start="963:23" pos:end="963:46">(<argument pos:start="963:24" pos:end="963:26"><expr pos:start="963:24" pos:end="963:26"><name pos:start="963:24" pos:end="963:26">env</name></expr></argument>, <argument pos:start="963:29" pos:end="963:31"><expr pos:start="963:29" pos:end="963:31"><name pos:start="963:29" pos:end="963:31">ctx</name></expr></argument>, <argument pos:start="963:34" pos:end="963:45"><expr pos:start="963:34" pos:end="963:45"><name pos:start="963:34" pos:end="963:45">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="965:13" pos:end="965:37"><expr pos:start="965:13" pos:end="965:36"><call pos:start="965:13" pos:end="965:36"><name pos:start="965:13" pos:end="965:28">gen_store_srsgpr</name><argument_list pos:start="965:29" pos:end="965:36">(<argument pos:start="965:30" pos:end="965:31"><expr pos:start="965:30" pos:end="965:31"><name pos:start="965:30" pos:end="965:31">rt</name></expr></argument>, <argument pos:start="965:34" pos:end="965:35"><expr pos:start="965:34" pos:end="965:35"><name pos:start="965:34" pos:end="965:35">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="967:13" pos:end="967:18">break;</break>

        <default pos:start="969:9" pos:end="969:16">default:</default>

            <expr_stmt pos:start="971:13" pos:end="971:30"><expr pos:start="971:13" pos:end="971:29"><call pos:start="971:13" pos:end="971:29"><name pos:start="971:13" pos:end="971:22">MIPS_INVAL</name><argument_list pos:start="971:23" pos:end="971:29">(<argument pos:start="971:24" pos:end="971:28"><expr pos:start="971:24" pos:end="971:28"><literal type="string" pos:start="971:24" pos:end="971:28">"cp0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="973:13" pos:end="973:45"><expr pos:start="973:13" pos:end="973:44"><call pos:start="973:13" pos:end="973:44"><name pos:start="973:13" pos:end="973:30">generate_exception</name><argument_list pos:start="973:31" pos:end="973:44">(<argument pos:start="973:32" pos:end="973:34"><expr pos:start="973:32" pos:end="973:34"><name pos:start="973:32" pos:end="973:34">ctx</name></expr></argument>, <argument pos:start="973:37" pos:end="973:43"><expr pos:start="973:37" pos:end="973:43"><name pos:start="973:37" pos:end="973:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="975:13" pos:end="975:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="979:9" pos:end="979:14">break;</break>

    <case pos:start="981:5" pos:end="981:18">case <expr pos:start="981:10" pos:end="981:17"><name pos:start="981:10" pos:end="981:17">OPC_ADDI</name></expr>:</case> <comment type="block" pos:start="981:20" pos:end="981:57">/* Arithmetic with immediate opcode */</comment>

    <case pos:start="983:5" pos:end="983:19">case <expr pos:start="983:10" pos:end="983:18"><name pos:start="983:10" pos:end="983:18">OPC_ADDIU</name></expr>:</case>

         <expr_stmt pos:start="985:10" pos:end="985:50"><expr pos:start="985:10" pos:end="985:49"><call pos:start="985:10" pos:end="985:49"><name pos:start="985:10" pos:end="985:22">gen_arith_imm</name><argument_list pos:start="985:23" pos:end="985:49">(<argument pos:start="985:24" pos:end="985:26"><expr pos:start="985:24" pos:end="985:26"><name pos:start="985:24" pos:end="985:26">env</name></expr></argument>, <argument pos:start="985:29" pos:end="985:31"><expr pos:start="985:29" pos:end="985:31"><name pos:start="985:29" pos:end="985:31">ctx</name></expr></argument>, <argument pos:start="985:34" pos:end="985:35"><expr pos:start="985:34" pos:end="985:35"><name pos:start="985:34" pos:end="985:35">op</name></expr></argument>, <argument pos:start="985:38" pos:end="985:39"><expr pos:start="985:38" pos:end="985:39"><name pos:start="985:38" pos:end="985:39">rt</name></expr></argument>, <argument pos:start="985:42" pos:end="985:43"><expr pos:start="985:42" pos:end="985:43"><name pos:start="985:42" pos:end="985:43">rs</name></expr></argument>, <argument pos:start="985:46" pos:end="985:48"><expr pos:start="985:46" pos:end="985:48"><name pos:start="985:46" pos:end="985:48">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="987:10" pos:end="987:15">break;</break>

    <case pos:start="989:5" pos:end="989:18">case <expr pos:start="989:10" pos:end="989:17"><name pos:start="989:10" pos:end="989:17">OPC_SLTI</name></expr>:</case> <comment type="block" pos:start="989:20" pos:end="989:63">/* Set on less than with immediate opcode */</comment>

    <case pos:start="991:5" pos:end="991:19">case <expr pos:start="991:10" pos:end="991:18"><name pos:start="991:10" pos:end="991:18">OPC_SLTIU</name></expr>:</case>

         <expr_stmt pos:start="993:10" pos:end="993:43"><expr pos:start="993:10" pos:end="993:42"><call pos:start="993:10" pos:end="993:42"><name pos:start="993:10" pos:end="993:20">gen_slt_imm</name><argument_list pos:start="993:21" pos:end="993:42">(<argument pos:start="993:22" pos:end="993:24"><expr pos:start="993:22" pos:end="993:24"><name pos:start="993:22" pos:end="993:24">env</name></expr></argument>, <argument pos:start="993:27" pos:end="993:28"><expr pos:start="993:27" pos:end="993:28"><name pos:start="993:27" pos:end="993:28">op</name></expr></argument>, <argument pos:start="993:31" pos:end="993:32"><expr pos:start="993:31" pos:end="993:32"><name pos:start="993:31" pos:end="993:32">rt</name></expr></argument>, <argument pos:start="993:35" pos:end="993:36"><expr pos:start="993:35" pos:end="993:36"><name pos:start="993:35" pos:end="993:36">rs</name></expr></argument>, <argument pos:start="993:39" pos:end="993:41"><expr pos:start="993:39" pos:end="993:41"><name pos:start="993:39" pos:end="993:41">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="995:10" pos:end="995:15">break;</break>

    <case pos:start="997:5" pos:end="997:18">case <expr pos:start="997:10" pos:end="997:17"><name pos:start="997:10" pos:end="997:17">OPC_ANDI</name></expr>:</case> <comment type="block" pos:start="997:20" pos:end="997:57">/* Arithmetic with immediate opcode */</comment>

    <case pos:start="999:5" pos:end="999:17">case <expr pos:start="999:10" pos:end="999:16"><name pos:start="999:10" pos:end="999:16">OPC_LUI</name></expr>:</case>

    <case pos:start="1001:5" pos:end="1001:17">case <expr pos:start="1001:10" pos:end="1001:16"><name pos:start="1001:10" pos:end="1001:16">OPC_ORI</name></expr>:</case>

    <case pos:start="1003:5" pos:end="1003:18">case <expr pos:start="1003:10" pos:end="1003:17"><name pos:start="1003:10" pos:end="1003:17">OPC_XORI</name></expr>:</case>

         <expr_stmt pos:start="1005:10" pos:end="1005:45"><expr pos:start="1005:10" pos:end="1005:44"><call pos:start="1005:10" pos:end="1005:44"><name pos:start="1005:10" pos:end="1005:22">gen_logic_imm</name><argument_list pos:start="1005:23" pos:end="1005:44">(<argument pos:start="1005:24" pos:end="1005:26"><expr pos:start="1005:24" pos:end="1005:26"><name pos:start="1005:24" pos:end="1005:26">env</name></expr></argument>, <argument pos:start="1005:29" pos:end="1005:30"><expr pos:start="1005:29" pos:end="1005:30"><name pos:start="1005:29" pos:end="1005:30">op</name></expr></argument>, <argument pos:start="1005:33" pos:end="1005:34"><expr pos:start="1005:33" pos:end="1005:34"><name pos:start="1005:33" pos:end="1005:34">rt</name></expr></argument>, <argument pos:start="1005:37" pos:end="1005:38"><expr pos:start="1005:37" pos:end="1005:38"><name pos:start="1005:37" pos:end="1005:38">rs</name></expr></argument>, <argument pos:start="1005:41" pos:end="1005:43"><expr pos:start="1005:41" pos:end="1005:43"><name pos:start="1005:41" pos:end="1005:43">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="1007:10" pos:end="1007:15">break;</break>

    <case pos:start="1009:5" pos:end="1009:27">case <expr pos:start="1009:10" pos:end="1009:26"><name pos:start="1009:10" pos:end="1009:14">OPC_J</name> <operator pos:start="1009:16" pos:end="1009:18">...</operator> <name pos:start="1009:20" pos:end="1009:26">OPC_JAL</name></expr>:</case> <comment type="block" pos:start="1009:29" pos:end="1009:38">/* Jump */</comment>

         <expr_stmt pos:start="1011:10" pos:end="1011:58"><expr pos:start="1011:10" pos:end="1011:57"><name pos:start="1011:10" pos:end="1011:15">offset</name> <operator pos:start="1011:17" pos:end="1011:17">=</operator> <operator pos:start="1011:19" pos:end="1011:19">(</operator><name pos:start="1011:20" pos:end="1011:26">int32_t</name><operator pos:start="1011:27" pos:end="1011:27">)</operator><operator pos:start="1011:28" pos:end="1011:28">(</operator><name pos:start="1011:29" pos:end="1011:39"><name pos:start="1011:29" pos:end="1011:31">ctx</name><operator pos:start="1011:32" pos:end="1011:33">-&gt;</operator><name pos:start="1011:34" pos:end="1011:39">opcode</name></name> <operator pos:start="1011:41" pos:end="1011:41">&amp;</operator> <literal type="number" pos:start="1011:43" pos:end="1011:51">0x3FFFFFF</literal><operator pos:start="1011:52" pos:end="1011:52">)</operator> <operator pos:start="1011:54" pos:end="1011:55">&lt;&lt;</operator> <literal type="number" pos:start="1011:57" pos:end="1011:57">2</literal></expr>;</expr_stmt>

         <expr_stmt pos:start="1013:10" pos:end="1013:56"><expr pos:start="1013:10" pos:end="1013:55"><call pos:start="1013:10" pos:end="1013:55"><name pos:start="1013:10" pos:end="1013:27">gen_compute_branch</name><argument_list pos:start="1013:28" pos:end="1013:55">(<argument pos:start="1013:29" pos:end="1013:31"><expr pos:start="1013:29" pos:end="1013:31"><name pos:start="1013:29" pos:end="1013:31">ctx</name></expr></argument>, <argument pos:start="1013:34" pos:end="1013:35"><expr pos:start="1013:34" pos:end="1013:35"><name pos:start="1013:34" pos:end="1013:35">op</name></expr></argument>, <argument pos:start="1013:38" pos:end="1013:38"><expr pos:start="1013:38" pos:end="1013:38"><literal type="number" pos:start="1013:38" pos:end="1013:38">4</literal></expr></argument>, <argument pos:start="1013:41" pos:end="1013:42"><expr pos:start="1013:41" pos:end="1013:42"><name pos:start="1013:41" pos:end="1013:42">rs</name></expr></argument>, <argument pos:start="1013:45" pos:end="1013:46"><expr pos:start="1013:45" pos:end="1013:46"><name pos:start="1013:45" pos:end="1013:46">rt</name></expr></argument>, <argument pos:start="1013:49" pos:end="1013:54"><expr pos:start="1013:49" pos:end="1013:54"><name pos:start="1013:49" pos:end="1013:54">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <expr_stmt pos:start="1015:10" pos:end="1015:24"><expr pos:start="1015:10" pos:end="1015:23"><operator pos:start="1015:10" pos:end="1015:10">*</operator><name pos:start="1015:11" pos:end="1015:19">is_branch</name> <operator pos:start="1015:21" pos:end="1015:21">=</operator> <literal type="number" pos:start="1015:23" pos:end="1015:23">1</literal></expr>;</expr_stmt>

         <break pos:start="1017:10" pos:end="1017:15">break;</break>

    <case pos:start="1019:5" pos:end="1019:30">case <expr pos:start="1019:10" pos:end="1019:29"><name pos:start="1019:10" pos:end="1019:16">OPC_BEQ</name> <operator pos:start="1019:18" pos:end="1019:20">...</operator> <name pos:start="1019:22" pos:end="1019:29">OPC_BGTZ</name></expr>:</case> <comment type="block" pos:start="1019:32" pos:end="1019:43">/* Branch */</comment>

    <case pos:start="1021:5" pos:end="1021:32">case <expr pos:start="1021:10" pos:end="1021:31"><name pos:start="1021:10" pos:end="1021:17">OPC_BEQL</name> <operator pos:start="1021:19" pos:end="1021:21">...</operator> <name pos:start="1021:23" pos:end="1021:31">OPC_BGTZL</name></expr>:</case>

         <expr_stmt pos:start="1023:10" pos:end="1023:58"><expr pos:start="1023:10" pos:end="1023:57"><call pos:start="1023:10" pos:end="1023:57"><name pos:start="1023:10" pos:end="1023:27">gen_compute_branch</name><argument_list pos:start="1023:28" pos:end="1023:57">(<argument pos:start="1023:29" pos:end="1023:31"><expr pos:start="1023:29" pos:end="1023:31"><name pos:start="1023:29" pos:end="1023:31">ctx</name></expr></argument>, <argument pos:start="1023:34" pos:end="1023:35"><expr pos:start="1023:34" pos:end="1023:35"><name pos:start="1023:34" pos:end="1023:35">op</name></expr></argument>, <argument pos:start="1023:38" pos:end="1023:38"><expr pos:start="1023:38" pos:end="1023:38"><literal type="number" pos:start="1023:38" pos:end="1023:38">4</literal></expr></argument>, <argument pos:start="1023:41" pos:end="1023:42"><expr pos:start="1023:41" pos:end="1023:42"><name pos:start="1023:41" pos:end="1023:42">rs</name></expr></argument>, <argument pos:start="1023:45" pos:end="1023:46"><expr pos:start="1023:45" pos:end="1023:46"><name pos:start="1023:45" pos:end="1023:46">rt</name></expr></argument>, <argument pos:start="1023:49" pos:end="1023:56"><expr pos:start="1023:49" pos:end="1023:56"><name pos:start="1023:49" pos:end="1023:51">imm</name> <operator pos:start="1023:53" pos:end="1023:54">&lt;&lt;</operator> <literal type="number" pos:start="1023:56" pos:end="1023:56">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <expr_stmt pos:start="1025:10" pos:end="1025:24"><expr pos:start="1025:10" pos:end="1025:23"><operator pos:start="1025:10" pos:end="1025:10">*</operator><name pos:start="1025:11" pos:end="1025:19">is_branch</name> <operator pos:start="1025:21" pos:end="1025:21">=</operator> <literal type="number" pos:start="1025:23" pos:end="1025:23">1</literal></expr>;</expr_stmt>

         <break pos:start="1027:10" pos:end="1027:15">break;</break>

    <case pos:start="1029:5" pos:end="1029:28">case <expr pos:start="1029:10" pos:end="1029:27"><name pos:start="1029:10" pos:end="1029:15">OPC_LB</name> <operator pos:start="1029:17" pos:end="1029:19">...</operator> <name pos:start="1029:21" pos:end="1029:27">OPC_LWR</name></expr>:</case> <comment type="block" pos:start="1029:30" pos:end="1029:50">/* Load and stores */</comment>

    <case pos:start="1031:5" pos:end="1031:16">case <expr pos:start="1031:10" pos:end="1031:15"><name pos:start="1031:10" pos:end="1031:15">OPC_LL</name></expr>:</case>

         <expr_stmt pos:start="1033:10" pos:end="1033:43"><expr pos:start="1033:10" pos:end="1033:42"><call pos:start="1033:10" pos:end="1033:42"><name pos:start="1033:10" pos:end="1033:15">gen_ld</name><argument_list pos:start="1033:16" pos:end="1033:42">(<argument pos:start="1033:17" pos:end="1033:19"><expr pos:start="1033:17" pos:end="1033:19"><name pos:start="1033:17" pos:end="1033:19">env</name></expr></argument>, <argument pos:start="1033:22" pos:end="1033:24"><expr pos:start="1033:22" pos:end="1033:24"><name pos:start="1033:22" pos:end="1033:24">ctx</name></expr></argument>, <argument pos:start="1033:27" pos:end="1033:28"><expr pos:start="1033:27" pos:end="1033:28"><name pos:start="1033:27" pos:end="1033:28">op</name></expr></argument>, <argument pos:start="1033:31" pos:end="1033:32"><expr pos:start="1033:31" pos:end="1033:32"><name pos:start="1033:31" pos:end="1033:32">rt</name></expr></argument>, <argument pos:start="1033:35" pos:end="1033:36"><expr pos:start="1033:35" pos:end="1033:36"><name pos:start="1033:35" pos:end="1033:36">rs</name></expr></argument>, <argument pos:start="1033:39" pos:end="1033:41"><expr pos:start="1033:39" pos:end="1033:41"><name pos:start="1033:39" pos:end="1033:41">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="1035:10" pos:end="1035:15">break;</break>

    <case pos:start="1037:5" pos:end="1037:27">case <expr pos:start="1037:10" pos:end="1037:26"><name pos:start="1037:10" pos:end="1037:15">OPC_SB</name> <operator pos:start="1037:17" pos:end="1037:19">...</operator> <name pos:start="1037:21" pos:end="1037:26">OPC_SW</name></expr>:</case>

    <case pos:start="1039:5" pos:end="1039:17">case <expr pos:start="1039:10" pos:end="1039:16"><name pos:start="1039:10" pos:end="1039:16">OPC_SWR</name></expr>:</case>

         <expr_stmt pos:start="1041:10" pos:end="1041:38"><expr pos:start="1041:10" pos:end="1041:37"><call pos:start="1041:10" pos:end="1041:37"><name pos:start="1041:10" pos:end="1041:15">gen_st</name><argument_list pos:start="1041:16" pos:end="1041:37">(<argument pos:start="1041:17" pos:end="1041:19"><expr pos:start="1041:17" pos:end="1041:19"><name pos:start="1041:17" pos:end="1041:19">ctx</name></expr></argument>, <argument pos:start="1041:22" pos:end="1041:23"><expr pos:start="1041:22" pos:end="1041:23"><name pos:start="1041:22" pos:end="1041:23">op</name></expr></argument>, <argument pos:start="1041:26" pos:end="1041:27"><expr pos:start="1041:26" pos:end="1041:27"><name pos:start="1041:26" pos:end="1041:27">rt</name></expr></argument>, <argument pos:start="1041:30" pos:end="1041:31"><expr pos:start="1041:30" pos:end="1041:31"><name pos:start="1041:30" pos:end="1041:31">rs</name></expr></argument>, <argument pos:start="1041:34" pos:end="1041:36"><expr pos:start="1041:34" pos:end="1041:36"><name pos:start="1041:34" pos:end="1041:36">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="1043:10" pos:end="1043:15">break;</break>

    <case pos:start="1045:5" pos:end="1045:16">case <expr pos:start="1045:10" pos:end="1045:15"><name pos:start="1045:10" pos:end="1045:15">OPC_SC</name></expr>:</case>

         <expr_stmt pos:start="1047:10" pos:end="1047:43"><expr pos:start="1047:10" pos:end="1047:42"><call pos:start="1047:10" pos:end="1047:42"><name pos:start="1047:10" pos:end="1047:20">gen_st_cond</name><argument_list pos:start="1047:21" pos:end="1047:42">(<argument pos:start="1047:22" pos:end="1047:24"><expr pos:start="1047:22" pos:end="1047:24"><name pos:start="1047:22" pos:end="1047:24">ctx</name></expr></argument>, <argument pos:start="1047:27" pos:end="1047:28"><expr pos:start="1047:27" pos:end="1047:28"><name pos:start="1047:27" pos:end="1047:28">op</name></expr></argument>, <argument pos:start="1047:31" pos:end="1047:32"><expr pos:start="1047:31" pos:end="1047:32"><name pos:start="1047:31" pos:end="1047:32">rt</name></expr></argument>, <argument pos:start="1047:35" pos:end="1047:36"><expr pos:start="1047:35" pos:end="1047:36"><name pos:start="1047:35" pos:end="1047:36">rs</name></expr></argument>, <argument pos:start="1047:39" pos:end="1047:41"><expr pos:start="1047:39" pos:end="1047:41"><name pos:start="1047:39" pos:end="1047:41">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="1049:10" pos:end="1049:15">break;</break>

    <case pos:start="1051:5" pos:end="1051:19">case <expr pos:start="1051:10" pos:end="1051:18"><name pos:start="1051:10" pos:end="1051:18">OPC_CACHE</name></expr>:</case>

        <expr_stmt pos:start="1053:9" pos:end="1053:53"><expr pos:start="1053:9" pos:end="1053:52"><call pos:start="1053:9" pos:end="1053:52"><name pos:start="1053:9" pos:end="1053:18">check_insn</name><argument_list pos:start="1053:19" pos:end="1053:52">(<argument pos:start="1053:20" pos:end="1053:22"><expr pos:start="1053:20" pos:end="1053:22"><name pos:start="1053:20" pos:end="1053:22">env</name></expr></argument>, <argument pos:start="1053:25" pos:end="1053:27"><expr pos:start="1053:25" pos:end="1053:27"><name pos:start="1053:25" pos:end="1053:27">ctx</name></expr></argument>, <argument pos:start="1053:30" pos:end="1053:51"><expr pos:start="1053:30" pos:end="1053:51"><name pos:start="1053:30" pos:end="1053:38">ISA_MIPS3</name> <operator pos:start="1053:40" pos:end="1053:40">|</operator> <name pos:start="1053:42" pos:end="1053:51">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="1055:9" pos:end="1055:27">/* Treat as NOP. */</comment>

        <break pos:start="1057:9" pos:end="1057:14">break;</break>

    <case pos:start="1059:5" pos:end="1059:18">case <expr pos:start="1059:10" pos:end="1059:17"><name pos:start="1059:10" pos:end="1059:17">OPC_PREF</name></expr>:</case>

        <expr_stmt pos:start="1061:9" pos:end="1061:53"><expr pos:start="1061:9" pos:end="1061:52"><call pos:start="1061:9" pos:end="1061:52"><name pos:start="1061:9" pos:end="1061:18">check_insn</name><argument_list pos:start="1061:19" pos:end="1061:52">(<argument pos:start="1061:20" pos:end="1061:22"><expr pos:start="1061:20" pos:end="1061:22"><name pos:start="1061:20" pos:end="1061:22">env</name></expr></argument>, <argument pos:start="1061:25" pos:end="1061:27"><expr pos:start="1061:25" pos:end="1061:27"><name pos:start="1061:25" pos:end="1061:27">ctx</name></expr></argument>, <argument pos:start="1061:30" pos:end="1061:51"><expr pos:start="1061:30" pos:end="1061:51"><name pos:start="1061:30" pos:end="1061:38">ISA_MIPS4</name> <operator pos:start="1061:40" pos:end="1061:40">|</operator> <name pos:start="1061:42" pos:end="1061:51">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="1063:9" pos:end="1063:27">/* Treat as NOP. */</comment>

        <break pos:start="1065:9" pos:end="1065:14">break;</break>



    <comment type="block" pos:start="1069:5" pos:end="1069:32">/* Floating point (COP1). */</comment>

    <case pos:start="1071:5" pos:end="1071:18">case <expr pos:start="1071:10" pos:end="1071:17"><name pos:start="1071:10" pos:end="1071:17">OPC_LWC1</name></expr>:</case>

    <case pos:start="1073:5" pos:end="1073:18">case <expr pos:start="1073:10" pos:end="1073:17"><name pos:start="1073:10" pos:end="1073:17">OPC_LDC1</name></expr>:</case>

    <case pos:start="1075:5" pos:end="1075:18">case <expr pos:start="1075:10" pos:end="1075:17"><name pos:start="1075:10" pos:end="1075:17">OPC_SWC1</name></expr>:</case>

    <case pos:start="1077:5" pos:end="1077:18">case <expr pos:start="1077:10" pos:end="1077:17"><name pos:start="1077:10" pos:end="1077:17">OPC_SDC1</name></expr>:</case>

        <expr_stmt pos:start="1079:9" pos:end="1079:49"><expr pos:start="1079:9" pos:end="1079:48"><call pos:start="1079:9" pos:end="1079:48"><name pos:start="1079:9" pos:end="1079:21">gen_cop1_ldst</name><argument_list pos:start="1079:22" pos:end="1079:48">(<argument pos:start="1079:23" pos:end="1079:25"><expr pos:start="1079:23" pos:end="1079:25"><name pos:start="1079:23" pos:end="1079:25">env</name></expr></argument>, <argument pos:start="1079:28" pos:end="1079:30"><expr pos:start="1079:28" pos:end="1079:30"><name pos:start="1079:28" pos:end="1079:30">ctx</name></expr></argument>, <argument pos:start="1079:33" pos:end="1079:34"><expr pos:start="1079:33" pos:end="1079:34"><name pos:start="1079:33" pos:end="1079:34">op</name></expr></argument>, <argument pos:start="1079:37" pos:end="1079:38"><expr pos:start="1079:37" pos:end="1079:38"><name pos:start="1079:37" pos:end="1079:38">rt</name></expr></argument>, <argument pos:start="1079:41" pos:end="1079:42"><expr pos:start="1079:41" pos:end="1079:42"><name pos:start="1079:41" pos:end="1079:42">rs</name></expr></argument>, <argument pos:start="1079:45" pos:end="1079:47"><expr pos:start="1079:45" pos:end="1079:47"><name pos:start="1079:45" pos:end="1079:47">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1081:9" pos:end="1081:14">break;</break>



    <case pos:start="1085:5" pos:end="1085:17">case <expr pos:start="1085:10" pos:end="1085:16"><name pos:start="1085:10" pos:end="1085:16">OPC_CP1</name></expr>:</case>

        <if_stmt pos:start="1087:9" pos:end="1177:9"><if pos:start="1087:9" pos:end="1173:9">if <condition pos:start="1087:12" pos:end="1087:47">(<expr pos:start="1087:13" pos:end="1087:46"><name pos:start="1087:13" pos:end="1087:28"><name pos:start="1087:13" pos:end="1087:15">env</name><operator pos:start="1087:16" pos:end="1087:17">-&gt;</operator><name pos:start="1087:18" pos:end="1087:28">CP0_Config1</name></name> <operator pos:start="1087:30" pos:end="1087:30">&amp;</operator> <operator pos:start="1087:32" pos:end="1087:32">(</operator><literal type="number" pos:start="1087:33" pos:end="1087:33">1</literal> <operator pos:start="1087:35" pos:end="1087:36">&lt;&lt;</operator> <name pos:start="1087:38" pos:end="1087:45">CP0C1_FP</name><operator pos:start="1087:46" pos:end="1087:46">)</operator></expr>)</condition> <block pos:start="1087:49" pos:end="1173:9">{<block_content pos:start="1089:13" pos:end="1171:13">

            <expr_stmt pos:start="1089:13" pos:end="1089:35"><expr pos:start="1089:13" pos:end="1089:34"><call pos:start="1089:13" pos:end="1089:34"><name pos:start="1089:13" pos:end="1089:29">check_cp1_enabled</name><argument_list pos:start="1089:30" pos:end="1089:34">(<argument pos:start="1089:31" pos:end="1089:33"><expr pos:start="1089:31" pos:end="1089:33"><name pos:start="1089:31" pos:end="1089:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1091:13" pos:end="1091:40"><expr pos:start="1091:13" pos:end="1091:39"><name pos:start="1091:13" pos:end="1091:15">op1</name> <operator pos:start="1091:17" pos:end="1091:17">=</operator> <call pos:start="1091:19" pos:end="1091:39"><name pos:start="1091:19" pos:end="1091:26">MASK_CP1</name><argument_list pos:start="1091:27" pos:end="1091:39">(<argument pos:start="1091:28" pos:end="1091:38"><expr pos:start="1091:28" pos:end="1091:38"><name pos:start="1091:28" pos:end="1091:38"><name pos:start="1091:28" pos:end="1091:30">ctx</name><operator pos:start="1091:31" pos:end="1091:32">-&gt;</operator><name pos:start="1091:33" pos:end="1091:38">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1093:13" pos:end="1171:13">switch <condition pos:start="1093:20" pos:end="1093:24">(<expr pos:start="1093:21" pos:end="1093:23"><name pos:start="1093:21" pos:end="1093:23">op1</name></expr>)</condition> <block pos:start="1093:26" pos:end="1171:13">{<block_content pos:start="1095:13" pos:end="1169:22">

            <case pos:start="1095:13" pos:end="1095:27">case <expr pos:start="1095:18" pos:end="1095:26"><name pos:start="1095:18" pos:end="1095:26">OPC_MFHC1</name></expr>:</case>

            <case pos:start="1097:13" pos:end="1097:27">case <expr pos:start="1097:18" pos:end="1097:26"><name pos:start="1097:18" pos:end="1097:26">OPC_MTHC1</name></expr>:</case>

                <expr_stmt pos:start="1099:17" pos:end="1099:51"><expr pos:start="1099:17" pos:end="1099:50"><call pos:start="1099:17" pos:end="1099:50"><name pos:start="1099:17" pos:end="1099:26">check_insn</name><argument_list pos:start="1099:27" pos:end="1099:50">(<argument pos:start="1099:28" pos:end="1099:30"><expr pos:start="1099:28" pos:end="1099:30"><name pos:start="1099:28" pos:end="1099:30">env</name></expr></argument>, <argument pos:start="1099:33" pos:end="1099:35"><expr pos:start="1099:33" pos:end="1099:35"><name pos:start="1099:33" pos:end="1099:35">ctx</name></expr></argument>, <argument pos:start="1099:38" pos:end="1099:49"><expr pos:start="1099:38" pos:end="1099:49"><name pos:start="1099:38" pos:end="1099:49">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <case pos:start="1101:13" pos:end="1101:26">case <expr pos:start="1101:18" pos:end="1101:25"><name pos:start="1101:18" pos:end="1101:25">OPC_MFC1</name></expr>:</case>

            <case pos:start="1103:13" pos:end="1103:26">case <expr pos:start="1103:18" pos:end="1103:25"><name pos:start="1103:18" pos:end="1103:25">OPC_CFC1</name></expr>:</case>

            <case pos:start="1105:13" pos:end="1105:26">case <expr pos:start="1105:18" pos:end="1105:25"><name pos:start="1105:18" pos:end="1105:25">OPC_MTC1</name></expr>:</case>

            <case pos:start="1107:13" pos:end="1107:26">case <expr pos:start="1107:18" pos:end="1107:25"><name pos:start="1107:18" pos:end="1107:25">OPC_CTC1</name></expr>:</case>

                <expr_stmt pos:start="1109:17" pos:end="1109:42"><expr pos:start="1109:17" pos:end="1109:41"><call pos:start="1109:17" pos:end="1109:41"><name pos:start="1109:17" pos:end="1109:23">gen_cp1</name><argument_list pos:start="1109:24" pos:end="1109:41">(<argument pos:start="1109:25" pos:end="1109:27"><expr pos:start="1109:25" pos:end="1109:27"><name pos:start="1109:25" pos:end="1109:27">ctx</name></expr></argument>, <argument pos:start="1109:30" pos:end="1109:32"><expr pos:start="1109:30" pos:end="1109:32"><name pos:start="1109:30" pos:end="1109:32">op1</name></expr></argument>, <argument pos:start="1109:35" pos:end="1109:36"><expr pos:start="1109:35" pos:end="1109:36"><name pos:start="1109:35" pos:end="1109:36">rt</name></expr></argument>, <argument pos:start="1109:39" pos:end="1109:40"><expr pos:start="1109:39" pos:end="1109:40"><name pos:start="1109:39" pos:end="1109:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1111:17" pos:end="1114:0">break;</break>

<cpp:if pos:start="1113:1" pos:end="1113:26">#<cpp:directive pos:start="1113:2" pos:end="1113:3">if</cpp:directive> <expr pos:start="1113:5" pos:end="1113:26"><call pos:start="1113:5" pos:end="1113:26"><name pos:start="1113:5" pos:end="1113:11">defined</name><argument_list pos:start="1113:12" pos:end="1113:26">(<argument pos:start="1113:13" pos:end="1113:25"><expr pos:start="1113:13" pos:end="1113:25"><name pos:start="1113:13" pos:end="1113:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <case pos:start="1115:13" pos:end="1115:27">case <expr pos:start="1115:18" pos:end="1115:26"><name pos:start="1115:18" pos:end="1115:26">OPC_DMFC1</name></expr>:</case>

            <case pos:start="1117:13" pos:end="1117:27">case <expr pos:start="1117:18" pos:end="1117:26"><name pos:start="1117:18" pos:end="1117:26">OPC_DMTC1</name></expr>:</case>

                <expr_stmt pos:start="1119:17" pos:end="1119:48"><expr pos:start="1119:17" pos:end="1119:47"><call pos:start="1119:17" pos:end="1119:47"><name pos:start="1119:17" pos:end="1119:26">check_insn</name><argument_list pos:start="1119:27" pos:end="1119:47">(<argument pos:start="1119:28" pos:end="1119:30"><expr pos:start="1119:28" pos:end="1119:30"><name pos:start="1119:28" pos:end="1119:30">env</name></expr></argument>, <argument pos:start="1119:33" pos:end="1119:35"><expr pos:start="1119:33" pos:end="1119:35"><name pos:start="1119:33" pos:end="1119:35">ctx</name></expr></argument>, <argument pos:start="1119:38" pos:end="1119:46"><expr pos:start="1119:38" pos:end="1119:46"><name pos:start="1119:38" pos:end="1119:46">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1121:17" pos:end="1121:42"><expr pos:start="1121:17" pos:end="1121:41"><call pos:start="1121:17" pos:end="1121:41"><name pos:start="1121:17" pos:end="1121:23">gen_cp1</name><argument_list pos:start="1121:24" pos:end="1121:41">(<argument pos:start="1121:25" pos:end="1121:27"><expr pos:start="1121:25" pos:end="1121:27"><name pos:start="1121:25" pos:end="1121:27">ctx</name></expr></argument>, <argument pos:start="1121:30" pos:end="1121:32"><expr pos:start="1121:30" pos:end="1121:32"><name pos:start="1121:30" pos:end="1121:32">op1</name></expr></argument>, <argument pos:start="1121:35" pos:end="1121:36"><expr pos:start="1121:35" pos:end="1121:36"><name pos:start="1121:35" pos:end="1121:36">rt</name></expr></argument>, <argument pos:start="1121:39" pos:end="1121:40"><expr pos:start="1121:39" pos:end="1121:40"><name pos:start="1121:39" pos:end="1121:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1123:17" pos:end="1126:0">break;</break>

<cpp:endif pos:start="1125:1" pos:end="1125:6">#<cpp:directive pos:start="1125:2" pos:end="1125:6">endif</cpp:directive></cpp:endif>

            <case pos:start="1127:13" pos:end="1127:29">case <expr pos:start="1127:18" pos:end="1127:28"><name pos:start="1127:18" pos:end="1127:28">OPC_BC1ANY2</name></expr>:</case>

            <case pos:start="1129:13" pos:end="1129:29">case <expr pos:start="1129:18" pos:end="1129:28"><name pos:start="1129:18" pos:end="1129:28">OPC_BC1ANY4</name></expr>:</case>

                <expr_stmt pos:start="1131:17" pos:end="1131:33"><expr pos:start="1131:17" pos:end="1131:32"><call pos:start="1131:17" pos:end="1131:32"><name pos:start="1131:17" pos:end="1131:27">check_cop1x</name><argument_list pos:start="1131:28" pos:end="1131:32">(<argument pos:start="1131:29" pos:end="1131:31"><expr pos:start="1131:29" pos:end="1131:31"><name pos:start="1131:29" pos:end="1131:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1133:17" pos:end="1133:49"><expr pos:start="1133:17" pos:end="1133:48"><call pos:start="1133:17" pos:end="1133:48"><name pos:start="1133:17" pos:end="1133:26">check_insn</name><argument_list pos:start="1133:27" pos:end="1133:48">(<argument pos:start="1133:28" pos:end="1133:30"><expr pos:start="1133:28" pos:end="1133:30"><name pos:start="1133:28" pos:end="1133:30">env</name></expr></argument>, <argument pos:start="1133:33" pos:end="1133:35"><expr pos:start="1133:33" pos:end="1133:35"><name pos:start="1133:33" pos:end="1133:35">ctx</name></expr></argument>, <argument pos:start="1133:38" pos:end="1133:47"><expr pos:start="1133:38" pos:end="1133:47"><name pos:start="1133:38" pos:end="1133:47">ASE_MIPS3D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="1135:17" pos:end="1135:34">/* fall through */</comment>

            <case pos:start="1137:13" pos:end="1137:25">case <expr pos:start="1137:18" pos:end="1137:24"><name pos:start="1137:18" pos:end="1137:24">OPC_BC1</name></expr>:</case>

                <expr_stmt pos:start="1139:17" pos:end="1141:63"><expr pos:start="1139:17" pos:end="1141:62"><call pos:start="1139:17" pos:end="1141:62"><name pos:start="1139:17" pos:end="1139:35">gen_compute_branch1</name><argument_list pos:start="1139:36" pos:end="1141:62">(<argument pos:start="1139:37" pos:end="1139:39"><expr pos:start="1139:37" pos:end="1139:39"><name pos:start="1139:37" pos:end="1139:39">env</name></expr></argument>, <argument pos:start="1139:42" pos:end="1139:44"><expr pos:start="1139:42" pos:end="1139:44"><name pos:start="1139:42" pos:end="1139:44">ctx</name></expr></argument>, <argument pos:start="1139:47" pos:end="1139:67"><expr pos:start="1139:47" pos:end="1139:67"><call pos:start="1139:47" pos:end="1139:67"><name pos:start="1139:47" pos:end="1139:54">MASK_BC1</name><argument_list pos:start="1139:55" pos:end="1139:67">(<argument pos:start="1139:56" pos:end="1139:66"><expr pos:start="1139:56" pos:end="1139:66"><name pos:start="1139:56" pos:end="1139:66"><name pos:start="1139:56" pos:end="1139:58">ctx</name><operator pos:start="1139:59" pos:end="1139:60">-&gt;</operator><name pos:start="1139:61" pos:end="1139:66">opcode</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="1141:37" pos:end="1141:51"><expr pos:start="1141:37" pos:end="1141:51"><operator pos:start="1141:37" pos:end="1141:37">(</operator><name pos:start="1141:38" pos:end="1141:39">rt</name> <operator pos:start="1141:41" pos:end="1141:42">&gt;&gt;</operator> <literal type="number" pos:start="1141:44" pos:end="1141:44">2</literal><operator pos:start="1141:45" pos:end="1141:45">)</operator> <operator pos:start="1141:47" pos:end="1141:47">&amp;</operator> <literal type="number" pos:start="1141:49" pos:end="1141:51">0x7</literal></expr></argument>, <argument pos:start="1141:54" pos:end="1141:61"><expr pos:start="1141:54" pos:end="1141:61"><name pos:start="1141:54" pos:end="1141:56">imm</name> <operator pos:start="1141:58" pos:end="1141:59">&lt;&lt;</operator> <literal type="number" pos:start="1141:61" pos:end="1141:61">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1143:17" pos:end="1143:31"><expr pos:start="1143:17" pos:end="1143:30"><operator pos:start="1143:17" pos:end="1143:17">*</operator><name pos:start="1143:18" pos:end="1143:26">is_branch</name> <operator pos:start="1143:28" pos:end="1143:28">=</operator> <literal type="number" pos:start="1143:30" pos:end="1143:30">1</literal></expr>;</expr_stmt>

                <break pos:start="1145:17" pos:end="1145:22">break;</break>

            <case pos:start="1147:13" pos:end="1147:27">case <expr pos:start="1147:18" pos:end="1147:26"><name pos:start="1147:18" pos:end="1147:26">OPC_S_FMT</name></expr>:</case>

            <case pos:start="1149:13" pos:end="1149:27">case <expr pos:start="1149:18" pos:end="1149:26"><name pos:start="1149:18" pos:end="1149:26">OPC_D_FMT</name></expr>:</case>

            <case pos:start="1151:13" pos:end="1151:27">case <expr pos:start="1151:18" pos:end="1151:26"><name pos:start="1151:18" pos:end="1151:26">OPC_W_FMT</name></expr>:</case>

            <case pos:start="1153:13" pos:end="1153:27">case <expr pos:start="1153:18" pos:end="1153:26"><name pos:start="1153:18" pos:end="1153:26">OPC_L_FMT</name></expr>:</case>

            <case pos:start="1155:13" pos:end="1155:28">case <expr pos:start="1155:18" pos:end="1155:27"><name pos:start="1155:18" pos:end="1155:27">OPC_PS_FMT</name></expr>:</case>

                <expr_stmt pos:start="1157:17" pos:end="1159:45"><expr pos:start="1157:17" pos:end="1159:44"><call pos:start="1157:17" pos:end="1159:44"><name pos:start="1157:17" pos:end="1157:26">gen_farith</name><argument_list pos:start="1157:27" pos:end="1159:44">(<argument pos:start="1157:28" pos:end="1157:30"><expr pos:start="1157:28" pos:end="1157:30"><name pos:start="1157:28" pos:end="1157:30">ctx</name></expr></argument>, <argument pos:start="1157:33" pos:end="1157:61"><expr pos:start="1157:33" pos:end="1157:61"><name pos:start="1157:33" pos:end="1157:43"><name pos:start="1157:33" pos:end="1157:35">ctx</name><operator pos:start="1157:36" pos:end="1157:37">-&gt;</operator><name pos:start="1157:38" pos:end="1157:43">opcode</name></name> <operator pos:start="1157:45" pos:end="1157:45">&amp;</operator> <call pos:start="1157:47" pos:end="1157:61"><name pos:start="1157:47" pos:end="1157:49">FOP</name><argument_list pos:start="1157:50" pos:end="1157:61">(<argument pos:start="1157:51" pos:end="1157:54"><expr pos:start="1157:51" pos:end="1157:54"><literal type="number" pos:start="1157:51" pos:end="1157:54">0x3f</literal></expr></argument>, <argument pos:start="1157:57" pos:end="1157:60"><expr pos:start="1157:57" pos:end="1157:60"><literal type="number" pos:start="1157:57" pos:end="1157:60">0x1f</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="1157:64" pos:end="1157:65"><expr pos:start="1157:64" pos:end="1157:65"><name pos:start="1157:64" pos:end="1157:65">rt</name></expr></argument>, <argument pos:start="1157:68" pos:end="1157:69"><expr pos:start="1157:68" pos:end="1157:69"><name pos:start="1157:68" pos:end="1157:69">rd</name></expr></argument>, <argument pos:start="1157:72" pos:end="1157:73"><expr pos:start="1157:72" pos:end="1157:73"><name pos:start="1157:72" pos:end="1157:73">sa</name></expr></argument>,

                           <argument pos:start="1159:28" pos:end="1159:43"><expr pos:start="1159:28" pos:end="1159:43"><operator pos:start="1159:28" pos:end="1159:28">(</operator><name pos:start="1159:29" pos:end="1159:31">imm</name> <operator pos:start="1159:33" pos:end="1159:34">&gt;&gt;</operator> <literal type="number" pos:start="1159:36" pos:end="1159:36">8</literal><operator pos:start="1159:37" pos:end="1159:37">)</operator> <operator pos:start="1159:39" pos:end="1159:39">&amp;</operator> <literal type="number" pos:start="1159:41" pos:end="1159:43">0x7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1161:17" pos:end="1161:22">break;</break>

            <default pos:start="1163:13" pos:end="1163:20">default:</default>

                <expr_stmt pos:start="1165:17" pos:end="1165:34"><expr pos:start="1165:17" pos:end="1165:33"><call pos:start="1165:17" pos:end="1165:33"><name pos:start="1165:17" pos:end="1165:26">MIPS_INVAL</name><argument_list pos:start="1165:27" pos:end="1165:33">(<argument pos:start="1165:28" pos:end="1165:32"><expr pos:start="1165:28" pos:end="1165:32"><literal type="string" pos:start="1165:28" pos:end="1165:32">"cp1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1167:17" pos:end="1167:50"><expr pos:start="1167:17" pos:end="1167:49"><call pos:start="1167:17" pos:end="1167:49"><name pos:start="1167:17" pos:end="1167:34">generate_exception</name> <argument_list pos:start="1167:36" pos:end="1167:49">(<argument pos:start="1167:37" pos:end="1167:39"><expr pos:start="1167:37" pos:end="1167:39"><name pos:start="1167:37" pos:end="1167:39">ctx</name></expr></argument>, <argument pos:start="1167:42" pos:end="1167:48"><expr pos:start="1167:42" pos:end="1167:48"><name pos:start="1167:42" pos:end="1167:48">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1169:17" pos:end="1169:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="1173:11" pos:end="1177:9">else <block pos:start="1173:16" pos:end="1177:9">{<block_content pos:start="1175:13" pos:end="1175:53">

            <expr_stmt pos:start="1175:13" pos:end="1175:53"><expr pos:start="1175:13" pos:end="1175:52"><call pos:start="1175:13" pos:end="1175:52"><name pos:start="1175:13" pos:end="1175:34">generate_exception_err</name><argument_list pos:start="1175:35" pos:end="1175:52">(<argument pos:start="1175:36" pos:end="1175:38"><expr pos:start="1175:36" pos:end="1175:38"><name pos:start="1175:36" pos:end="1175:38">ctx</name></expr></argument>, <argument pos:start="1175:41" pos:end="1175:48"><expr pos:start="1175:41" pos:end="1175:48"><name pos:start="1175:41" pos:end="1175:48">EXCP_CpU</name></expr></argument>, <argument pos:start="1175:51" pos:end="1175:51"><expr pos:start="1175:51" pos:end="1175:51"><literal type="number" pos:start="1175:51" pos:end="1175:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="1179:9" pos:end="1179:14">break;</break>



    <comment type="block" pos:start="1183:5" pos:end="1183:16">/* COP2.  */</comment>

    <case pos:start="1185:5" pos:end="1185:18">case <expr pos:start="1185:10" pos:end="1185:17"><name pos:start="1185:10" pos:end="1185:17">OPC_LWC2</name></expr>:</case>

    <case pos:start="1187:5" pos:end="1187:18">case <expr pos:start="1187:10" pos:end="1187:17"><name pos:start="1187:10" pos:end="1187:17">OPC_LDC2</name></expr>:</case>

    <case pos:start="1189:5" pos:end="1189:18">case <expr pos:start="1189:10" pos:end="1189:17"><name pos:start="1189:10" pos:end="1189:17">OPC_SWC2</name></expr>:</case>

    <case pos:start="1191:5" pos:end="1191:18">case <expr pos:start="1191:10" pos:end="1191:17"><name pos:start="1191:10" pos:end="1191:17">OPC_SDC2</name></expr>:</case>

    <case pos:start="1193:5" pos:end="1193:17">case <expr pos:start="1193:10" pos:end="1193:16"><name pos:start="1193:10" pos:end="1193:16">OPC_CP2</name></expr>:</case>

        <comment type="block" pos:start="1195:9" pos:end="1195:36">/* COP2: Not implemented. */</comment>

        <expr_stmt pos:start="1197:9" pos:end="1197:49"><expr pos:start="1197:9" pos:end="1197:48"><call pos:start="1197:9" pos:end="1197:48"><name pos:start="1197:9" pos:end="1197:30">generate_exception_err</name><argument_list pos:start="1197:31" pos:end="1197:48">(<argument pos:start="1197:32" pos:end="1197:34"><expr pos:start="1197:32" pos:end="1197:34"><name pos:start="1197:32" pos:end="1197:34">ctx</name></expr></argument>, <argument pos:start="1197:37" pos:end="1197:44"><expr pos:start="1197:37" pos:end="1197:44"><name pos:start="1197:37" pos:end="1197:44">EXCP_CpU</name></expr></argument>, <argument pos:start="1197:47" pos:end="1197:47"><expr pos:start="1197:47" pos:end="1197:47"><literal type="number" pos:start="1197:47" pos:end="1197:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1199:9" pos:end="1199:14">break;</break>



    <case pos:start="1203:5" pos:end="1203:17">case <expr pos:start="1203:10" pos:end="1203:16"><name pos:start="1203:10" pos:end="1203:16">OPC_CP3</name></expr>:</case>

        <if_stmt pos:start="1205:9" pos:end="1279:9"><if pos:start="1205:9" pos:end="1275:9">if <condition pos:start="1205:12" pos:end="1205:47">(<expr pos:start="1205:13" pos:end="1205:46"><name pos:start="1205:13" pos:end="1205:28"><name pos:start="1205:13" pos:end="1205:15">env</name><operator pos:start="1205:16" pos:end="1205:17">-&gt;</operator><name pos:start="1205:18" pos:end="1205:28">CP0_Config1</name></name> <operator pos:start="1205:30" pos:end="1205:30">&amp;</operator> <operator pos:start="1205:32" pos:end="1205:32">(</operator><literal type="number" pos:start="1205:33" pos:end="1205:33">1</literal> <operator pos:start="1205:35" pos:end="1205:36">&lt;&lt;</operator> <name pos:start="1205:38" pos:end="1205:45">CP0C1_FP</name><operator pos:start="1205:46" pos:end="1205:46">)</operator></expr>)</condition> <block pos:start="1205:49" pos:end="1275:9">{<block_content pos:start="1207:13" pos:end="1273:13">

            <expr_stmt pos:start="1207:13" pos:end="1207:35"><expr pos:start="1207:13" pos:end="1207:34"><call pos:start="1207:13" pos:end="1207:34"><name pos:start="1207:13" pos:end="1207:29">check_cp1_enabled</name><argument_list pos:start="1207:30" pos:end="1207:34">(<argument pos:start="1207:31" pos:end="1207:33"><expr pos:start="1207:31" pos:end="1207:33"><name pos:start="1207:31" pos:end="1207:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1209:13" pos:end="1209:40"><expr pos:start="1209:13" pos:end="1209:39"><name pos:start="1209:13" pos:end="1209:15">op1</name> <operator pos:start="1209:17" pos:end="1209:17">=</operator> <call pos:start="1209:19" pos:end="1209:39"><name pos:start="1209:19" pos:end="1209:26">MASK_CP3</name><argument_list pos:start="1209:27" pos:end="1209:39">(<argument pos:start="1209:28" pos:end="1209:38"><expr pos:start="1209:28" pos:end="1209:38"><name pos:start="1209:28" pos:end="1209:38"><name pos:start="1209:28" pos:end="1209:30">ctx</name><operator pos:start="1209:31" pos:end="1209:32">-&gt;</operator><name pos:start="1209:33" pos:end="1209:38">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1211:13" pos:end="1273:13">switch <condition pos:start="1211:20" pos:end="1211:24">(<expr pos:start="1211:21" pos:end="1211:23"><name pos:start="1211:21" pos:end="1211:23">op1</name></expr>)</condition> <block pos:start="1211:26" pos:end="1273:13">{<block_content pos:start="1213:13" pos:end="1271:22">

            <case pos:start="1213:13" pos:end="1213:27">case <expr pos:start="1213:18" pos:end="1213:26"><name pos:start="1213:18" pos:end="1213:26">OPC_LWXC1</name></expr>:</case>

            <case pos:start="1215:13" pos:end="1215:27">case <expr pos:start="1215:18" pos:end="1215:26"><name pos:start="1215:18" pos:end="1215:26">OPC_LDXC1</name></expr>:</case>

            <case pos:start="1217:13" pos:end="1217:27">case <expr pos:start="1217:18" pos:end="1217:26"><name pos:start="1217:18" pos:end="1217:26">OPC_LUXC1</name></expr>:</case>

            <case pos:start="1219:13" pos:end="1219:27">case <expr pos:start="1219:18" pos:end="1219:26"><name pos:start="1219:18" pos:end="1219:26">OPC_SWXC1</name></expr>:</case>

            <case pos:start="1221:13" pos:end="1221:27">case <expr pos:start="1221:18" pos:end="1221:26"><name pos:start="1221:18" pos:end="1221:26">OPC_SDXC1</name></expr>:</case>

            <case pos:start="1223:13" pos:end="1223:27">case <expr pos:start="1223:18" pos:end="1223:26"><name pos:start="1223:18" pos:end="1223:26">OPC_SUXC1</name></expr>:</case>

                <expr_stmt pos:start="1225:17" pos:end="1225:56"><expr pos:start="1225:17" pos:end="1225:55"><call pos:start="1225:17" pos:end="1225:55"><name pos:start="1225:17" pos:end="1225:29">gen_flt3_ldst</name><argument_list pos:start="1225:30" pos:end="1225:55">(<argument pos:start="1225:31" pos:end="1225:33"><expr pos:start="1225:31" pos:end="1225:33"><name pos:start="1225:31" pos:end="1225:33">ctx</name></expr></argument>, <argument pos:start="1225:36" pos:end="1225:38"><expr pos:start="1225:36" pos:end="1225:38"><name pos:start="1225:36" pos:end="1225:38">op1</name></expr></argument>, <argument pos:start="1225:41" pos:end="1225:42"><expr pos:start="1225:41" pos:end="1225:42"><name pos:start="1225:41" pos:end="1225:42">sa</name></expr></argument>, <argument pos:start="1225:45" pos:end="1225:46"><expr pos:start="1225:45" pos:end="1225:46"><name pos:start="1225:45" pos:end="1225:46">rd</name></expr></argument>, <argument pos:start="1225:49" pos:end="1225:50"><expr pos:start="1225:49" pos:end="1225:50"><name pos:start="1225:49" pos:end="1225:50">rs</name></expr></argument>, <argument pos:start="1225:53" pos:end="1225:54"><expr pos:start="1225:53" pos:end="1225:54"><name pos:start="1225:53" pos:end="1225:54">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1227:17" pos:end="1227:22">break;</break>

            <case pos:start="1229:13" pos:end="1229:27">case <expr pos:start="1229:18" pos:end="1229:26"><name pos:start="1229:18" pos:end="1229:26">OPC_PREFX</name></expr>:</case>

                <comment type="block" pos:start="1231:17" pos:end="1231:35">/* Treat as NOP. */</comment>

                <break pos:start="1233:17" pos:end="1233:22">break;</break>

            <case pos:start="1235:13" pos:end="1235:29">case <expr pos:start="1235:18" pos:end="1235:28"><name pos:start="1235:18" pos:end="1235:28">OPC_ALNV_PS</name></expr>:</case>

            <case pos:start="1237:13" pos:end="1237:28">case <expr pos:start="1237:18" pos:end="1237:27"><name pos:start="1237:18" pos:end="1237:27">OPC_MADD_S</name></expr>:</case>

            <case pos:start="1239:13" pos:end="1239:28">case <expr pos:start="1239:18" pos:end="1239:27"><name pos:start="1239:18" pos:end="1239:27">OPC_MADD_D</name></expr>:</case>

            <case pos:start="1241:13" pos:end="1241:29">case <expr pos:start="1241:18" pos:end="1241:28"><name pos:start="1241:18" pos:end="1241:28">OPC_MADD_PS</name></expr>:</case>

            <case pos:start="1243:13" pos:end="1243:28">case <expr pos:start="1243:18" pos:end="1243:27"><name pos:start="1243:18" pos:end="1243:27">OPC_MSUB_S</name></expr>:</case>

            <case pos:start="1245:13" pos:end="1245:28">case <expr pos:start="1245:18" pos:end="1245:27"><name pos:start="1245:18" pos:end="1245:27">OPC_MSUB_D</name></expr>:</case>

            <case pos:start="1247:13" pos:end="1247:29">case <expr pos:start="1247:18" pos:end="1247:28"><name pos:start="1247:18" pos:end="1247:28">OPC_MSUB_PS</name></expr>:</case>

            <case pos:start="1249:13" pos:end="1249:29">case <expr pos:start="1249:18" pos:end="1249:28"><name pos:start="1249:18" pos:end="1249:28">OPC_NMADD_S</name></expr>:</case>

            <case pos:start="1251:13" pos:end="1251:29">case <expr pos:start="1251:18" pos:end="1251:28"><name pos:start="1251:18" pos:end="1251:28">OPC_NMADD_D</name></expr>:</case>

            <case pos:start="1253:13" pos:end="1253:30">case <expr pos:start="1253:18" pos:end="1253:29"><name pos:start="1253:18" pos:end="1253:29">OPC_NMADD_PS</name></expr>:</case>

            <case pos:start="1255:13" pos:end="1255:29">case <expr pos:start="1255:18" pos:end="1255:28"><name pos:start="1255:18" pos:end="1255:28">OPC_NMSUB_S</name></expr>:</case>

            <case pos:start="1257:13" pos:end="1257:29">case <expr pos:start="1257:18" pos:end="1257:28"><name pos:start="1257:18" pos:end="1257:28">OPC_NMSUB_D</name></expr>:</case>

            <case pos:start="1259:13" pos:end="1259:30">case <expr pos:start="1259:18" pos:end="1259:29"><name pos:start="1259:18" pos:end="1259:29">OPC_NMSUB_PS</name></expr>:</case>

                <expr_stmt pos:start="1261:17" pos:end="1261:57"><expr pos:start="1261:17" pos:end="1261:56"><call pos:start="1261:17" pos:end="1261:56"><name pos:start="1261:17" pos:end="1261:30">gen_flt3_arith</name><argument_list pos:start="1261:31" pos:end="1261:56">(<argument pos:start="1261:32" pos:end="1261:34"><expr pos:start="1261:32" pos:end="1261:34"><name pos:start="1261:32" pos:end="1261:34">ctx</name></expr></argument>, <argument pos:start="1261:37" pos:end="1261:39"><expr pos:start="1261:37" pos:end="1261:39"><name pos:start="1261:37" pos:end="1261:39">op1</name></expr></argument>, <argument pos:start="1261:42" pos:end="1261:43"><expr pos:start="1261:42" pos:end="1261:43"><name pos:start="1261:42" pos:end="1261:43">sa</name></expr></argument>, <argument pos:start="1261:46" pos:end="1261:47"><expr pos:start="1261:46" pos:end="1261:47"><name pos:start="1261:46" pos:end="1261:47">rs</name></expr></argument>, <argument pos:start="1261:50" pos:end="1261:51"><expr pos:start="1261:50" pos:end="1261:51"><name pos:start="1261:50" pos:end="1261:51">rd</name></expr></argument>, <argument pos:start="1261:54" pos:end="1261:55"><expr pos:start="1261:54" pos:end="1261:55"><name pos:start="1261:54" pos:end="1261:55">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1263:17" pos:end="1263:22">break;</break>

            <default pos:start="1265:13" pos:end="1265:20">default:</default>

                <expr_stmt pos:start="1267:17" pos:end="1267:34"><expr pos:start="1267:17" pos:end="1267:33"><call pos:start="1267:17" pos:end="1267:33"><name pos:start="1267:17" pos:end="1267:26">MIPS_INVAL</name><argument_list pos:start="1267:27" pos:end="1267:33">(<argument pos:start="1267:28" pos:end="1267:32"><expr pos:start="1267:28" pos:end="1267:32"><literal type="string" pos:start="1267:28" pos:end="1267:32">"cp3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1269:17" pos:end="1269:50"><expr pos:start="1269:17" pos:end="1269:49"><call pos:start="1269:17" pos:end="1269:49"><name pos:start="1269:17" pos:end="1269:34">generate_exception</name> <argument_list pos:start="1269:36" pos:end="1269:49">(<argument pos:start="1269:37" pos:end="1269:39"><expr pos:start="1269:37" pos:end="1269:39"><name pos:start="1269:37" pos:end="1269:39">ctx</name></expr></argument>, <argument pos:start="1269:42" pos:end="1269:48"><expr pos:start="1269:42" pos:end="1269:48"><name pos:start="1269:42" pos:end="1269:48">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1271:17" pos:end="1271:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="1275:11" pos:end="1279:9">else <block pos:start="1275:16" pos:end="1279:9">{<block_content pos:start="1277:13" pos:end="1277:53">

            <expr_stmt pos:start="1277:13" pos:end="1277:53"><expr pos:start="1277:13" pos:end="1277:52"><call pos:start="1277:13" pos:end="1277:52"><name pos:start="1277:13" pos:end="1277:34">generate_exception_err</name><argument_list pos:start="1277:35" pos:end="1277:52">(<argument pos:start="1277:36" pos:end="1277:38"><expr pos:start="1277:36" pos:end="1277:38"><name pos:start="1277:36" pos:end="1277:38">ctx</name></expr></argument>, <argument pos:start="1277:41" pos:end="1277:48"><expr pos:start="1277:41" pos:end="1277:48"><name pos:start="1277:41" pos:end="1277:48">EXCP_CpU</name></expr></argument>, <argument pos:start="1277:51" pos:end="1277:51"><expr pos:start="1277:51" pos:end="1277:51"><literal type="number" pos:start="1277:51" pos:end="1277:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="1281:9" pos:end="1286:0">break;</break>



<cpp:if pos:start="1285:1" pos:end="1285:26">#<cpp:directive pos:start="1285:2" pos:end="1285:3">if</cpp:directive> <expr pos:start="1285:5" pos:end="1285:26"><call pos:start="1285:5" pos:end="1285:26"><name pos:start="1285:5" pos:end="1285:11">defined</name><argument_list pos:start="1285:12" pos:end="1285:26">(<argument pos:start="1285:13" pos:end="1285:25"><expr pos:start="1285:13" pos:end="1285:25"><name pos:start="1285:13" pos:end="1285:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <comment type="block" pos:start="1287:5" pos:end="1287:24">/* MIPS64 opcodes */</comment>

    <case pos:start="1289:5" pos:end="1289:17">case <expr pos:start="1289:10" pos:end="1289:16"><name pos:start="1289:10" pos:end="1289:16">OPC_LWU</name></expr>:</case>

    <case pos:start="1291:5" pos:end="1291:29">case <expr pos:start="1291:10" pos:end="1291:28"><name pos:start="1291:10" pos:end="1291:16">OPC_LDL</name> <operator pos:start="1291:18" pos:end="1291:20">...</operator> <name pos:start="1291:22" pos:end="1291:28">OPC_LDR</name></expr>:</case>

    <case pos:start="1293:5" pos:end="1293:17">case <expr pos:start="1293:10" pos:end="1293:16"><name pos:start="1293:10" pos:end="1293:16">OPC_LLD</name></expr>:</case>

    <case pos:start="1295:5" pos:end="1295:16">case <expr pos:start="1295:10" pos:end="1295:15"><name pos:start="1295:10" pos:end="1295:15">OPC_LD</name></expr>:</case>

        <expr_stmt pos:start="1297:9" pos:end="1297:40"><expr pos:start="1297:9" pos:end="1297:39"><call pos:start="1297:9" pos:end="1297:39"><name pos:start="1297:9" pos:end="1297:18">check_insn</name><argument_list pos:start="1297:19" pos:end="1297:39">(<argument pos:start="1297:20" pos:end="1297:22"><expr pos:start="1297:20" pos:end="1297:22"><name pos:start="1297:20" pos:end="1297:22">env</name></expr></argument>, <argument pos:start="1297:25" pos:end="1297:27"><expr pos:start="1297:25" pos:end="1297:27"><name pos:start="1297:25" pos:end="1297:27">ctx</name></expr></argument>, <argument pos:start="1297:30" pos:end="1297:38"><expr pos:start="1297:30" pos:end="1297:38"><name pos:start="1297:30" pos:end="1297:38">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1299:9" pos:end="1299:27"><expr pos:start="1299:9" pos:end="1299:26"><call pos:start="1299:9" pos:end="1299:26"><name pos:start="1299:9" pos:end="1299:21">check_mips_64</name><argument_list pos:start="1299:22" pos:end="1299:26">(<argument pos:start="1299:23" pos:end="1299:25"><expr pos:start="1299:23" pos:end="1299:25"><name pos:start="1299:23" pos:end="1299:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1301:9" pos:end="1301:42"><expr pos:start="1301:9" pos:end="1301:41"><call pos:start="1301:9" pos:end="1301:41"><name pos:start="1301:9" pos:end="1301:14">gen_ld</name><argument_list pos:start="1301:15" pos:end="1301:41">(<argument pos:start="1301:16" pos:end="1301:18"><expr pos:start="1301:16" pos:end="1301:18"><name pos:start="1301:16" pos:end="1301:18">env</name></expr></argument>, <argument pos:start="1301:21" pos:end="1301:23"><expr pos:start="1301:21" pos:end="1301:23"><name pos:start="1301:21" pos:end="1301:23">ctx</name></expr></argument>, <argument pos:start="1301:26" pos:end="1301:27"><expr pos:start="1301:26" pos:end="1301:27"><name pos:start="1301:26" pos:end="1301:27">op</name></expr></argument>, <argument pos:start="1301:30" pos:end="1301:31"><expr pos:start="1301:30" pos:end="1301:31"><name pos:start="1301:30" pos:end="1301:31">rt</name></expr></argument>, <argument pos:start="1301:34" pos:end="1301:35"><expr pos:start="1301:34" pos:end="1301:35"><name pos:start="1301:34" pos:end="1301:35">rs</name></expr></argument>, <argument pos:start="1301:38" pos:end="1301:40"><expr pos:start="1301:38" pos:end="1301:40"><name pos:start="1301:38" pos:end="1301:40">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1303:9" pos:end="1303:14">break;</break>

    <case pos:start="1305:5" pos:end="1305:29">case <expr pos:start="1305:10" pos:end="1305:28"><name pos:start="1305:10" pos:end="1305:16">OPC_SDL</name> <operator pos:start="1305:18" pos:end="1305:20">...</operator> <name pos:start="1305:22" pos:end="1305:28">OPC_SDR</name></expr>:</case>

    <case pos:start="1307:5" pos:end="1307:16">case <expr pos:start="1307:10" pos:end="1307:15"><name pos:start="1307:10" pos:end="1307:15">OPC_SD</name></expr>:</case>

        <expr_stmt pos:start="1309:9" pos:end="1309:40"><expr pos:start="1309:9" pos:end="1309:39"><call pos:start="1309:9" pos:end="1309:39"><name pos:start="1309:9" pos:end="1309:18">check_insn</name><argument_list pos:start="1309:19" pos:end="1309:39">(<argument pos:start="1309:20" pos:end="1309:22"><expr pos:start="1309:20" pos:end="1309:22"><name pos:start="1309:20" pos:end="1309:22">env</name></expr></argument>, <argument pos:start="1309:25" pos:end="1309:27"><expr pos:start="1309:25" pos:end="1309:27"><name pos:start="1309:25" pos:end="1309:27">ctx</name></expr></argument>, <argument pos:start="1309:30" pos:end="1309:38"><expr pos:start="1309:30" pos:end="1309:38"><name pos:start="1309:30" pos:end="1309:38">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1311:9" pos:end="1311:27"><expr pos:start="1311:9" pos:end="1311:26"><call pos:start="1311:9" pos:end="1311:26"><name pos:start="1311:9" pos:end="1311:21">check_mips_64</name><argument_list pos:start="1311:22" pos:end="1311:26">(<argument pos:start="1311:23" pos:end="1311:25"><expr pos:start="1311:23" pos:end="1311:25"><name pos:start="1311:23" pos:end="1311:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1313:9" pos:end="1313:37"><expr pos:start="1313:9" pos:end="1313:36"><call pos:start="1313:9" pos:end="1313:36"><name pos:start="1313:9" pos:end="1313:14">gen_st</name><argument_list pos:start="1313:15" pos:end="1313:36">(<argument pos:start="1313:16" pos:end="1313:18"><expr pos:start="1313:16" pos:end="1313:18"><name pos:start="1313:16" pos:end="1313:18">ctx</name></expr></argument>, <argument pos:start="1313:21" pos:end="1313:22"><expr pos:start="1313:21" pos:end="1313:22"><name pos:start="1313:21" pos:end="1313:22">op</name></expr></argument>, <argument pos:start="1313:25" pos:end="1313:26"><expr pos:start="1313:25" pos:end="1313:26"><name pos:start="1313:25" pos:end="1313:26">rt</name></expr></argument>, <argument pos:start="1313:29" pos:end="1313:30"><expr pos:start="1313:29" pos:end="1313:30"><name pos:start="1313:29" pos:end="1313:30">rs</name></expr></argument>, <argument pos:start="1313:33" pos:end="1313:35"><expr pos:start="1313:33" pos:end="1313:35"><name pos:start="1313:33" pos:end="1313:35">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1315:9" pos:end="1315:14">break;</break>

    <case pos:start="1317:5" pos:end="1317:17">case <expr pos:start="1317:10" pos:end="1317:16"><name pos:start="1317:10" pos:end="1317:16">OPC_SCD</name></expr>:</case>

        <expr_stmt pos:start="1319:9" pos:end="1319:40"><expr pos:start="1319:9" pos:end="1319:39"><call pos:start="1319:9" pos:end="1319:39"><name pos:start="1319:9" pos:end="1319:18">check_insn</name><argument_list pos:start="1319:19" pos:end="1319:39">(<argument pos:start="1319:20" pos:end="1319:22"><expr pos:start="1319:20" pos:end="1319:22"><name pos:start="1319:20" pos:end="1319:22">env</name></expr></argument>, <argument pos:start="1319:25" pos:end="1319:27"><expr pos:start="1319:25" pos:end="1319:27"><name pos:start="1319:25" pos:end="1319:27">ctx</name></expr></argument>, <argument pos:start="1319:30" pos:end="1319:38"><expr pos:start="1319:30" pos:end="1319:38"><name pos:start="1319:30" pos:end="1319:38">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1321:9" pos:end="1321:27"><expr pos:start="1321:9" pos:end="1321:26"><call pos:start="1321:9" pos:end="1321:26"><name pos:start="1321:9" pos:end="1321:21">check_mips_64</name><argument_list pos:start="1321:22" pos:end="1321:26">(<argument pos:start="1321:23" pos:end="1321:25"><expr pos:start="1321:23" pos:end="1321:25"><name pos:start="1321:23" pos:end="1321:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1323:9" pos:end="1323:42"><expr pos:start="1323:9" pos:end="1323:41"><call pos:start="1323:9" pos:end="1323:41"><name pos:start="1323:9" pos:end="1323:19">gen_st_cond</name><argument_list pos:start="1323:20" pos:end="1323:41">(<argument pos:start="1323:21" pos:end="1323:23"><expr pos:start="1323:21" pos:end="1323:23"><name pos:start="1323:21" pos:end="1323:23">ctx</name></expr></argument>, <argument pos:start="1323:26" pos:end="1323:27"><expr pos:start="1323:26" pos:end="1323:27"><name pos:start="1323:26" pos:end="1323:27">op</name></expr></argument>, <argument pos:start="1323:30" pos:end="1323:31"><expr pos:start="1323:30" pos:end="1323:31"><name pos:start="1323:30" pos:end="1323:31">rt</name></expr></argument>, <argument pos:start="1323:34" pos:end="1323:35"><expr pos:start="1323:34" pos:end="1323:35"><name pos:start="1323:34" pos:end="1323:35">rs</name></expr></argument>, <argument pos:start="1323:38" pos:end="1323:40"><expr pos:start="1323:38" pos:end="1323:40"><name pos:start="1323:38" pos:end="1323:40">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1325:9" pos:end="1325:14">break;</break>

    <case pos:start="1327:5" pos:end="1327:19">case <expr pos:start="1327:10" pos:end="1327:18"><name pos:start="1327:10" pos:end="1327:18">OPC_DADDI</name></expr>:</case>

    <case pos:start="1329:5" pos:end="1329:20">case <expr pos:start="1329:10" pos:end="1329:19"><name pos:start="1329:10" pos:end="1329:19">OPC_DADDIU</name></expr>:</case>

        <expr_stmt pos:start="1331:9" pos:end="1331:40"><expr pos:start="1331:9" pos:end="1331:39"><call pos:start="1331:9" pos:end="1331:39"><name pos:start="1331:9" pos:end="1331:18">check_insn</name><argument_list pos:start="1331:19" pos:end="1331:39">(<argument pos:start="1331:20" pos:end="1331:22"><expr pos:start="1331:20" pos:end="1331:22"><name pos:start="1331:20" pos:end="1331:22">env</name></expr></argument>, <argument pos:start="1331:25" pos:end="1331:27"><expr pos:start="1331:25" pos:end="1331:27"><name pos:start="1331:25" pos:end="1331:27">ctx</name></expr></argument>, <argument pos:start="1331:30" pos:end="1331:38"><expr pos:start="1331:30" pos:end="1331:38"><name pos:start="1331:30" pos:end="1331:38">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1333:9" pos:end="1333:27"><expr pos:start="1333:9" pos:end="1333:26"><call pos:start="1333:9" pos:end="1333:26"><name pos:start="1333:9" pos:end="1333:21">check_mips_64</name><argument_list pos:start="1333:22" pos:end="1333:26">(<argument pos:start="1333:23" pos:end="1333:25"><expr pos:start="1333:23" pos:end="1333:25"><name pos:start="1333:23" pos:end="1333:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1335:9" pos:end="1335:49"><expr pos:start="1335:9" pos:end="1335:48"><call pos:start="1335:9" pos:end="1335:48"><name pos:start="1335:9" pos:end="1335:21">gen_arith_imm</name><argument_list pos:start="1335:22" pos:end="1335:48">(<argument pos:start="1335:23" pos:end="1335:25"><expr pos:start="1335:23" pos:end="1335:25"><name pos:start="1335:23" pos:end="1335:25">env</name></expr></argument>, <argument pos:start="1335:28" pos:end="1335:30"><expr pos:start="1335:28" pos:end="1335:30"><name pos:start="1335:28" pos:end="1335:30">ctx</name></expr></argument>, <argument pos:start="1335:33" pos:end="1335:34"><expr pos:start="1335:33" pos:end="1335:34"><name pos:start="1335:33" pos:end="1335:34">op</name></expr></argument>, <argument pos:start="1335:37" pos:end="1335:38"><expr pos:start="1335:37" pos:end="1335:38"><name pos:start="1335:37" pos:end="1335:38">rt</name></expr></argument>, <argument pos:start="1335:41" pos:end="1335:42"><expr pos:start="1335:41" pos:end="1335:42"><name pos:start="1335:41" pos:end="1335:42">rs</name></expr></argument>, <argument pos:start="1335:45" pos:end="1335:47"><expr pos:start="1335:45" pos:end="1335:47"><name pos:start="1335:45" pos:end="1335:47">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1337:9" pos:end="1340:0">break;</break>

<cpp:endif pos:start="1339:1" pos:end="1339:6">#<cpp:directive pos:start="1339:2" pos:end="1339:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1341:5" pos:end="1341:18">case <expr pos:start="1341:10" pos:end="1341:17"><name pos:start="1341:10" pos:end="1341:17">OPC_JALX</name></expr>:</case>

        <expr_stmt pos:start="1343:9" pos:end="1343:57"><expr pos:start="1343:9" pos:end="1343:56"><call pos:start="1343:9" pos:end="1343:56"><name pos:start="1343:9" pos:end="1343:18">check_insn</name><argument_list pos:start="1343:19" pos:end="1343:56">(<argument pos:start="1343:20" pos:end="1343:22"><expr pos:start="1343:20" pos:end="1343:22"><name pos:start="1343:20" pos:end="1343:22">env</name></expr></argument>, <argument pos:start="1343:25" pos:end="1343:27"><expr pos:start="1343:25" pos:end="1343:27"><name pos:start="1343:25" pos:end="1343:27">ctx</name></expr></argument>, <argument pos:start="1343:30" pos:end="1343:55"><expr pos:start="1343:30" pos:end="1343:55"><name pos:start="1343:30" pos:end="1343:39">ASE_MIPS16</name> <operator pos:start="1343:41" pos:end="1343:41">|</operator> <name pos:start="1343:43" pos:end="1343:55">ASE_MICROMIPS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1345:9" pos:end="1345:57"><expr pos:start="1345:9" pos:end="1345:56"><name pos:start="1345:9" pos:end="1345:14">offset</name> <operator pos:start="1345:16" pos:end="1345:16">=</operator> <operator pos:start="1345:18" pos:end="1345:18">(</operator><name pos:start="1345:19" pos:end="1345:25">int32_t</name><operator pos:start="1345:26" pos:end="1345:26">)</operator><operator pos:start="1345:27" pos:end="1345:27">(</operator><name pos:start="1345:28" pos:end="1345:38"><name pos:start="1345:28" pos:end="1345:30">ctx</name><operator pos:start="1345:31" pos:end="1345:32">-&gt;</operator><name pos:start="1345:33" pos:end="1345:38">opcode</name></name> <operator pos:start="1345:40" pos:end="1345:40">&amp;</operator> <literal type="number" pos:start="1345:42" pos:end="1345:50">0x3FFFFFF</literal><operator pos:start="1345:51" pos:end="1345:51">)</operator> <operator pos:start="1345:53" pos:end="1345:54">&lt;&lt;</operator> <literal type="number" pos:start="1345:56" pos:end="1345:56">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1347:9" pos:end="1347:55"><expr pos:start="1347:9" pos:end="1347:54"><call pos:start="1347:9" pos:end="1347:54"><name pos:start="1347:9" pos:end="1347:26">gen_compute_branch</name><argument_list pos:start="1347:27" pos:end="1347:54">(<argument pos:start="1347:28" pos:end="1347:30"><expr pos:start="1347:28" pos:end="1347:30"><name pos:start="1347:28" pos:end="1347:30">ctx</name></expr></argument>, <argument pos:start="1347:33" pos:end="1347:34"><expr pos:start="1347:33" pos:end="1347:34"><name pos:start="1347:33" pos:end="1347:34">op</name></expr></argument>, <argument pos:start="1347:37" pos:end="1347:37"><expr pos:start="1347:37" pos:end="1347:37"><literal type="number" pos:start="1347:37" pos:end="1347:37">4</literal></expr></argument>, <argument pos:start="1347:40" pos:end="1347:41"><expr pos:start="1347:40" pos:end="1347:41"><name pos:start="1347:40" pos:end="1347:41">rs</name></expr></argument>, <argument pos:start="1347:44" pos:end="1347:45"><expr pos:start="1347:44" pos:end="1347:45"><name pos:start="1347:44" pos:end="1347:45">rt</name></expr></argument>, <argument pos:start="1347:48" pos:end="1347:53"><expr pos:start="1347:48" pos:end="1347:53"><name pos:start="1347:48" pos:end="1347:53">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1349:9" pos:end="1349:23"><expr pos:start="1349:9" pos:end="1349:22"><operator pos:start="1349:9" pos:end="1349:9">*</operator><name pos:start="1349:10" pos:end="1349:18">is_branch</name> <operator pos:start="1349:20" pos:end="1349:20">=</operator> <literal type="number" pos:start="1349:22" pos:end="1349:22">1</literal></expr>;</expr_stmt>

        <break pos:start="1351:9" pos:end="1351:14">break;</break>

    <case pos:start="1353:5" pos:end="1353:18">case <expr pos:start="1353:10" pos:end="1353:17"><name pos:start="1353:10" pos:end="1353:17">OPC_MDMX</name></expr>:</case>

        <expr_stmt pos:start="1355:9" pos:end="1355:39"><expr pos:start="1355:9" pos:end="1355:38"><call pos:start="1355:9" pos:end="1355:38"><name pos:start="1355:9" pos:end="1355:18">check_insn</name><argument_list pos:start="1355:19" pos:end="1355:38">(<argument pos:start="1355:20" pos:end="1355:22"><expr pos:start="1355:20" pos:end="1355:22"><name pos:start="1355:20" pos:end="1355:22">env</name></expr></argument>, <argument pos:start="1355:25" pos:end="1355:27"><expr pos:start="1355:25" pos:end="1355:27"><name pos:start="1355:25" pos:end="1355:27">ctx</name></expr></argument>, <argument pos:start="1355:30" pos:end="1355:37"><expr pos:start="1355:30" pos:end="1355:37"><name pos:start="1355:30" pos:end="1355:37">ASE_MDMX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="1357:9" pos:end="1357:36">/* MDMX: Not implemented. */</comment>

    <default pos:start="1359:5" pos:end="1359:12">default:</default>            <comment type="block" pos:start="1359:25" pos:end="1359:37">/* Invalid */</comment>

        <expr_stmt pos:start="1361:9" pos:end="1361:35"><expr pos:start="1361:9" pos:end="1361:34"><call pos:start="1361:9" pos:end="1361:34"><name pos:start="1361:9" pos:end="1361:18">MIPS_INVAL</name><argument_list pos:start="1361:19" pos:end="1361:34">(<argument pos:start="1361:20" pos:end="1361:33"><expr pos:start="1361:20" pos:end="1361:33"><literal type="string" pos:start="1361:20" pos:end="1361:33">"major opcode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1363:9" pos:end="1363:41"><expr pos:start="1363:9" pos:end="1363:40"><call pos:start="1363:9" pos:end="1363:40"><name pos:start="1363:9" pos:end="1363:26">generate_exception</name><argument_list pos:start="1363:27" pos:end="1363:40">(<argument pos:start="1363:28" pos:end="1363:30"><expr pos:start="1363:28" pos:end="1363:30"><name pos:start="1363:28" pos:end="1363:30">ctx</name></expr></argument>, <argument pos:start="1363:33" pos:end="1363:39"><expr pos:start="1363:33" pos:end="1363:39"><name pos:start="1363:33" pos:end="1363:39">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1365:9" pos:end="1365:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
