<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25559.c" pos:tabs="8"><function pos:start="1:1" pos:end="574:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">ppce500_load_device_tree</name><parameter_list pos:start="1:36" pos:end="15:49">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:57"><name pos:start="1:37" pos:end="1:48">MachineState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:57">machine</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:57"><decl pos:start="3:37" pos:end="3:57"><type pos:start="3:37" pos:end="3:57"><name pos:start="3:37" pos:end="3:49">PPCE500Params</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:57">params</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:47"><decl pos:start="5:37" pos:end="5:47"><type pos:start="5:37" pos:end="5:47"><name pos:start="5:37" pos:end="5:42">hwaddr</name></type> <name pos:start="5:44" pos:end="5:47">addr</name></decl></parameter>,

                                    <parameter pos:start="7:37" pos:end="7:54"><decl pos:start="7:37" pos:end="7:54"><type pos:start="7:37" pos:end="7:54"><name pos:start="7:37" pos:end="7:42">hwaddr</name></type> <name pos:start="7:44" pos:end="7:54">initrd_base</name></decl></parameter>,

                                    <parameter pos:start="9:37" pos:end="9:54"><decl pos:start="9:37" pos:end="9:54"><type pos:start="9:37" pos:end="9:54"><name pos:start="9:37" pos:end="9:42">hwaddr</name></type> <name pos:start="9:44" pos:end="9:54">initrd_size</name></decl></parameter>,

                                    <parameter pos:start="11:37" pos:end="11:54"><decl pos:start="11:37" pos:end="11:54"><type pos:start="11:37" pos:end="11:54"><name pos:start="11:37" pos:end="11:42">hwaddr</name></type> <name pos:start="11:44" pos:end="11:54">kernel_base</name></decl></parameter>,

                                    <parameter pos:start="13:37" pos:end="13:54"><decl pos:start="13:37" pos:end="13:54"><type pos:start="13:37" pos:end="13:54"><name pos:start="13:37" pos:end="13:42">hwaddr</name></type> <name pos:start="13:44" pos:end="13:54">kernel_size</name></decl></parameter>,

                                    <parameter pos:start="15:37" pos:end="15:48"><decl pos:start="15:37" pos:end="15:48"><type pos:start="15:37" pos:end="15:48"><name pos:start="15:37" pos:end="15:40">bool</name></type> <name pos:start="15:42" pos:end="15:48">dry_run</name></decl></parameter>)</parameter_list>

<block pos:start="17:1" pos:end="574:1">{<block_content pos:start="19:5" pos:end="572:15">

    <decl_stmt pos:start="19:5" pos:end="19:42"><decl pos:start="19:5" pos:end="19:41"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:15">CPUPPCState</name> <modifier pos:start="19:17" pos:end="19:17">*</modifier></type><name pos:start="19:18" pos:end="19:20">env</name> <init pos:start="19:22" pos:end="19:41">= <expr pos:start="19:24" pos:end="19:41"><name pos:start="19:24" pos:end="19:41"><name pos:start="19:24" pos:end="19:32">first_cpu</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:41">env_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name> <init pos:start="21:13" pos:end="21:16">= <expr pos:start="21:15" pos:end="21:16"><operator pos:start="21:15" pos:end="21:15">-</operator><literal type="number" pos:start="21:16" pos:end="21:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:72"><decl pos:start="23:5" pos:end="23:71"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint64_t</name></type> <name pos:start="23:14" pos:end="23:31"><name pos:start="23:14" pos:end="23:29">mem_reg_property</name><index pos:start="23:30" pos:end="23:31">[]</index></name> <init pos:start="23:33" pos:end="23:71">= <expr pos:start="23:35" pos:end="23:71"><block pos:start="23:35" pos:end="23:71">{ <expr pos:start="23:37" pos:end="23:37"><literal type="number" pos:start="23:37" pos:end="23:37">0</literal></expr>, <macro pos:start="23:40" pos:end="23:69"><name pos:start="23:40" pos:end="23:50">cpu_to_be64</name><argument_list pos:start="23:51" pos:end="23:69">(<argument pos:start="23:52" pos:end="23:68">machine-&gt;ram_size</argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:16"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:16">fdt_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:14"><decl pos:start="27:5" pos:end="27:13"><type pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:8">void</name> <modifier pos:start="27:10" pos:end="27:10">*</modifier></type><name pos:start="27:11" pos:end="27:13">fdt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:26"><decl pos:start="29:5" pos:end="29:25"><type pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:11">uint8_t</name></type> <name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:21">hypercall</name><index pos:start="29:22" pos:end="29:25">[<expr pos:start="29:23" pos:end="29:24"><literal type="number" pos:start="29:23" pos:end="29:24">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:36"><decl pos:start="31:5" pos:end="31:35"><type pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:12">uint32_t</name></type> <name pos:start="31:14" pos:end="31:23">clock_freq</name> <init pos:start="31:25" pos:end="31:35">= <expr pos:start="31:27" pos:end="31:35"><literal type="number" pos:start="31:27" pos:end="31:35">400000000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:33"><decl pos:start="33:5" pos:end="33:32"><type pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:12">uint32_t</name></type> <name pos:start="33:14" pos:end="33:20">tb_freq</name> <init pos:start="33:22" pos:end="33:32">= <expr pos:start="33:24" pos:end="33:32"><literal type="number" pos:start="33:24" pos:end="33:32">400000000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:10"><decl pos:start="35:5" pos:end="35:9"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:58"><decl pos:start="37:5" pos:end="37:57"><type pos:start="37:5" pos:end="37:8"><name pos:start="37:5" pos:end="37:8">char</name></type> <name pos:start="37:10" pos:end="37:24"><name pos:start="37:10" pos:end="37:22">compatible_sb</name><index pos:start="37:23" pos:end="37:24">[]</index></name> <init pos:start="37:26" pos:end="37:57">= <expr pos:start="37:28" pos:end="37:57"><literal type="string" pos:start="37:28" pos:end="37:57">"fsl,mpc8544-immr\0simple-bus"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:18"><decl pos:start="39:5" pos:end="39:17"><type pos:start="39:5" pos:end="39:8"><name pos:start="39:5" pos:end="39:8">char</name></type> <name pos:start="39:10" pos:end="39:17"><name pos:start="39:10" pos:end="39:12">soc</name><index pos:start="39:13" pos:end="39:17">[<expr pos:start="39:14" pos:end="39:16"><literal type="number" pos:start="39:14" pos:end="39:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:19"><decl pos:start="41:5" pos:end="41:18"><type pos:start="41:5" pos:end="41:8"><name pos:start="41:5" pos:end="41:8">char</name></type> <name pos:start="41:10" pos:end="41:18"><name pos:start="41:10" pos:end="41:13">mpic</name><index pos:start="41:14" pos:end="41:18">[<expr pos:start="41:15" pos:end="41:17"><literal type="number" pos:start="41:15" pos:end="41:17">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:21"><decl pos:start="43:5" pos:end="43:20"><type pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:12">uint32_t</name></type> <name pos:start="43:14" pos:end="43:20">mpic_ph</name></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:20"><decl pos:start="45:5" pos:end="45:19"><type pos:start="45:5" pos:end="45:12"><name pos:start="45:5" pos:end="45:12">uint32_t</name></type> <name pos:start="45:14" pos:end="45:19">msi_ph</name></decl>;</decl_stmt>

    <decl_stmt pos:start="47:5" pos:end="47:20"><decl pos:start="47:5" pos:end="47:19"><type pos:start="47:5" pos:end="47:8"><name pos:start="47:5" pos:end="47:8">char</name></type> <name pos:start="47:10" pos:end="47:19"><name pos:start="47:10" pos:end="47:14">gutil</name><index pos:start="47:15" pos:end="47:19">[<expr pos:start="47:16" pos:end="47:18"><literal type="number" pos:start="47:16" pos:end="47:18">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="49:18"><decl pos:start="49:5" pos:end="49:17"><type pos:start="49:5" pos:end="49:8"><name pos:start="49:5" pos:end="49:8">char</name></type> <name pos:start="49:10" pos:end="49:17"><name pos:start="49:10" pos:end="49:12">pci</name><index pos:start="49:13" pos:end="49:17">[<expr pos:start="49:14" pos:end="49:16"><literal type="number" pos:start="49:14" pos:end="49:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="51:18"><decl pos:start="51:5" pos:end="51:17"><type pos:start="51:5" pos:end="51:8"><name pos:start="51:5" pos:end="51:8">char</name></type> <name pos:start="51:10" pos:end="51:17"><name pos:start="51:10" pos:end="51:12">msi</name><index pos:start="51:13" pos:end="51:17">[<expr pos:start="51:14" pos:end="51:16"><literal type="number" pos:start="51:14" pos:end="51:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="53:5" pos:end="53:29"><decl pos:start="53:5" pos:end="53:28"><type pos:start="53:5" pos:end="53:14"><name pos:start="53:5" pos:end="53:12">uint32_t</name> <modifier pos:start="53:14" pos:end="53:14">*</modifier></type><name pos:start="53:15" pos:end="53:21">pci_map</name> <init pos:start="53:23" pos:end="53:28">= <expr pos:start="53:25" pos:end="53:28"><name pos:start="53:25" pos:end="53:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="55:5" pos:end="55:12"><decl pos:start="55:5" pos:end="55:11"><type pos:start="55:5" pos:end="55:7"><name pos:start="55:5" pos:end="55:7">int</name></type> <name pos:start="55:9" pos:end="55:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="57:5" pos:end="75:10"><decl pos:start="57:5" pos:end="75:9"><type pos:start="57:5" pos:end="57:12"><name pos:start="57:5" pos:end="57:12">uint32_t</name></type> <name pos:start="57:14" pos:end="57:27"><name pos:start="57:14" pos:end="57:23">pci_ranges</name><index pos:start="57:24" pos:end="57:27">[<expr pos:start="57:25" pos:end="57:26"><literal type="number" pos:start="57:25" pos:end="57:26">14</literal></expr>]</index></name> <init pos:start="57:29" pos:end="75:9">=

        <expr pos:start="59:9" pos:end="75:9"><block pos:start="59:9" pos:end="75:9">{

            <expr pos:start="61:13" pos:end="61:21"><literal type="number" pos:start="61:13" pos:end="61:21">0x2000000</literal></expr>, <expr pos:start="61:24" pos:end="61:26"><literal type="number" pos:start="61:24" pos:end="61:26">0x0</literal></expr>, <expr pos:start="61:29" pos:end="61:53"><name pos:start="61:29" pos:end="61:53"><name pos:start="61:29" pos:end="61:34">params</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:53">pci_mmio_bus_base</name></name></expr>,

            <expr pos:start="63:13" pos:end="63:39"><name pos:start="63:13" pos:end="63:33"><name pos:start="63:13" pos:end="63:18">params</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:33">pci_mmio_base</name></name> <operator pos:start="63:35" pos:end="63:36">&gt;&gt;</operator> <literal type="number" pos:start="63:38" pos:end="63:39">32</literal></expr>, <expr pos:start="63:42" pos:end="63:62"><name pos:start="63:42" pos:end="63:62"><name pos:start="63:42" pos:end="63:47">params</name><operator pos:start="63:48" pos:end="63:49">-&gt;</operator><name pos:start="63:50" pos:end="63:62">pci_mmio_base</name></name></expr>,

            <expr pos:start="65:13" pos:end="65:15"><literal type="number" pos:start="65:13" pos:end="65:15">0x0</literal></expr>, <expr pos:start="65:18" pos:end="65:27"><literal type="number" pos:start="65:18" pos:end="65:27">0x20000000</literal></expr>,



            <expr pos:start="69:13" pos:end="69:21"><literal type="number" pos:start="69:13" pos:end="69:21">0x1000000</literal></expr>, <expr pos:start="69:24" pos:end="69:26"><literal type="number" pos:start="69:24" pos:end="69:26">0x0</literal></expr>, <expr pos:start="69:29" pos:end="69:31"><literal type="number" pos:start="69:29" pos:end="69:31">0x0</literal></expr>,

            <expr pos:start="71:13" pos:end="71:38"><name pos:start="71:13" pos:end="71:32"><name pos:start="71:13" pos:end="71:18">params</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:32">pci_pio_base</name></name> <operator pos:start="71:34" pos:end="71:35">&gt;&gt;</operator> <literal type="number" pos:start="71:37" pos:end="71:38">32</literal></expr>, <expr pos:start="71:41" pos:end="71:60"><name pos:start="71:41" pos:end="71:60"><name pos:start="71:41" pos:end="71:46">params</name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:60">pci_pio_base</name></name></expr>,

            <expr pos:start="73:13" pos:end="73:15"><literal type="number" pos:start="73:13" pos:end="73:15">0x0</literal></expr>, <expr pos:start="73:18" pos:end="73:24"><literal type="number" pos:start="73:18" pos:end="73:24">0x10000</literal></expr>,

        }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="77:5" pos:end="77:53"><decl pos:start="77:5" pos:end="77:52"><type pos:start="77:5" pos:end="77:14"><name pos:start="77:5" pos:end="77:12">QemuOpts</name> <modifier pos:start="77:14" pos:end="77:14">*</modifier></type><name pos:start="77:15" pos:end="77:26">machine_opts</name> <init pos:start="77:28" pos:end="77:52">= <expr pos:start="77:30" pos:end="77:52"><call pos:start="77:30" pos:end="77:52"><name pos:start="77:30" pos:end="77:50">qemu_get_machine_opts</name><argument_list pos:start="77:51" pos:end="77:52">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="79:5" pos:end="79:61"><decl pos:start="79:5" pos:end="79:60"><type pos:start="79:5" pos:end="79:16"><specifier pos:start="79:5" pos:end="79:9">const</specifier> <name pos:start="79:11" pos:end="79:14">char</name> <modifier pos:start="79:16" pos:end="79:16">*</modifier></type><name pos:start="79:17" pos:end="79:24">dtb_file</name> <init pos:start="79:26" pos:end="79:60">= <expr pos:start="79:28" pos:end="79:60"><call pos:start="79:28" pos:end="79:60"><name pos:start="79:28" pos:end="79:39">qemu_opt_get</name><argument_list pos:start="79:40" pos:end="79:60">(<argument pos:start="79:41" pos:end="79:52"><expr pos:start="79:41" pos:end="79:52"><name pos:start="79:41" pos:end="79:52">machine_opts</name></expr></argument>, <argument pos:start="79:55" pos:end="79:59"><expr pos:start="79:55" pos:end="79:59"><literal type="string" pos:start="79:55" pos:end="79:59">"dtb"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="81:5" pos:end="81:78"><decl pos:start="81:5" pos:end="81:77"><type pos:start="81:5" pos:end="81:16"><specifier pos:start="81:5" pos:end="81:9">const</specifier> <name pos:start="81:11" pos:end="81:14">char</name> <modifier pos:start="81:16" pos:end="81:16">*</modifier></type><name pos:start="81:17" pos:end="81:31">toplevel_compat</name> <init pos:start="81:33" pos:end="81:77">= <expr pos:start="81:35" pos:end="81:77"><call pos:start="81:35" pos:end="81:77"><name pos:start="81:35" pos:end="81:46">qemu_opt_get</name><argument_list pos:start="81:47" pos:end="81:77">(<argument pos:start="81:48" pos:end="81:59"><expr pos:start="81:48" pos:end="81:59"><name pos:start="81:48" pos:end="81:59">machine_opts</name></expr></argument>, <argument pos:start="81:62" pos:end="81:76"><expr pos:start="81:62" pos:end="81:76"><literal type="string" pos:start="81:62" pos:end="81:76">"dt_compatible"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="85:5" pos:end="110:5"><if pos:start="85:5" pos:end="110:5">if <condition pos:start="85:8" pos:end="85:17">(<expr pos:start="85:9" pos:end="85:16"><name pos:start="85:9" pos:end="85:16">dtb_file</name></expr>)</condition> <block pos:start="85:19" pos:end="110:5">{<block_content pos:start="87:9" pos:end="108:18">

        <decl_stmt pos:start="87:9" pos:end="87:23"><decl pos:start="87:9" pos:end="87:22"><type pos:start="87:9" pos:end="87:14"><name pos:start="87:9" pos:end="87:12">char</name> <modifier pos:start="87:14" pos:end="87:14">*</modifier></type><name pos:start="87:15" pos:end="87:22">filename</name></decl>;</decl_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:65"><expr pos:start="89:9" pos:end="89:64"><name pos:start="89:9" pos:end="89:16">filename</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <call pos:start="89:20" pos:end="89:64"><name pos:start="89:20" pos:end="89:33">qemu_find_file</name><argument_list pos:start="89:34" pos:end="89:64">(<argument pos:start="89:35" pos:end="89:53"><expr pos:start="89:35" pos:end="89:53"><name pos:start="89:35" pos:end="89:53">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="89:56" pos:end="89:63"><expr pos:start="89:56" pos:end="89:63"><name pos:start="89:56" pos:end="89:63">dtb_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="95:9"><if pos:start="91:9" pos:end="95:9">if <condition pos:start="91:12" pos:end="91:22">(<expr pos:start="91:13" pos:end="91:21"><operator pos:start="91:13" pos:end="91:13">!</operator><name pos:start="91:14" pos:end="91:21">filename</name></expr>)</condition> <block pos:start="91:24" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:21">

            <goto pos:start="93:13" pos:end="93:21">goto <name pos:start="93:18" pos:end="93:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:52"><expr pos:start="99:9" pos:end="99:51"><name pos:start="99:9" pos:end="99:11">fdt</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="99:51"><name pos:start="99:15" pos:end="99:30">load_device_tree</name><argument_list pos:start="99:31" pos:end="99:51">(<argument pos:start="99:32" pos:end="99:39"><expr pos:start="99:32" pos:end="99:39"><name pos:start="99:32" pos:end="99:39">filename</name></expr></argument>, <argument pos:start="99:42" pos:end="99:50"><expr pos:start="99:42" pos:end="99:50"><operator pos:start="99:42" pos:end="99:42">&amp;</operator><name pos:start="99:43" pos:end="99:50">fdt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <if_stmt pos:start="102:9" pos:end="106:9"><if pos:start="102:9" pos:end="106:9">if <condition pos:start="102:12" pos:end="102:17">(<expr pos:start="102:13" pos:end="102:16"><operator pos:start="102:13" pos:end="102:13">!</operator><name pos:start="102:14" pos:end="102:16">fdt</name></expr>)</condition> <block pos:start="102:19" pos:end="106:9">{<block_content pos:start="104:13" pos:end="104:21">

            <goto pos:start="104:13" pos:end="104:21">goto <name pos:start="104:18" pos:end="104:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="108:9" pos:end="108:18">goto <name pos:start="108:14" pos:end="108:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="114:5" pos:end="114:40"><expr pos:start="114:5" pos:end="114:39"><name pos:start="114:5" pos:end="114:7">fdt</name> <operator pos:start="114:9" pos:end="114:9">=</operator> <call pos:start="114:11" pos:end="114:39"><name pos:start="114:11" pos:end="114:28">create_device_tree</name><argument_list pos:start="114:29" pos:end="114:39">(<argument pos:start="114:30" pos:end="114:38"><expr pos:start="114:30" pos:end="114:38"><operator pos:start="114:30" pos:end="114:30">&amp;</operator><name pos:start="114:31" pos:end="114:38">fdt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="116:5" pos:end="120:5"><if pos:start="116:5" pos:end="120:5">if <condition pos:start="116:8" pos:end="116:20">(<expr pos:start="116:9" pos:end="116:19"><name pos:start="116:9" pos:end="116:11">fdt</name> <operator pos:start="116:13" pos:end="116:14">==</operator> <name pos:start="116:16" pos:end="116:19">NULL</name></expr>)</condition> <block pos:start="116:22" pos:end="120:5">{<block_content pos:start="118:9" pos:end="118:17">

        <goto pos:start="118:9" pos:end="118:17">goto <name pos:start="118:14" pos:end="118:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="124:5" pos:end="124:43">/* Manipulate device tree in memory. */</comment>

    <expr_stmt pos:start="126:5" pos:end="126:57"><expr pos:start="126:5" pos:end="126:56"><call pos:start="126:5" pos:end="126:56"><name pos:start="126:5" pos:end="126:25">qemu_fdt_setprop_cell</name><argument_list pos:start="126:26" pos:end="126:56">(<argument pos:start="126:27" pos:end="126:29"><expr pos:start="126:27" pos:end="126:29"><name pos:start="126:27" pos:end="126:29">fdt</name></expr></argument>, <argument pos:start="126:32" pos:end="126:34"><expr pos:start="126:32" pos:end="126:34"><literal type="string" pos:start="126:32" pos:end="126:34">"/"</literal></expr></argument>, <argument pos:start="126:37" pos:end="126:52"><expr pos:start="126:37" pos:end="126:52"><literal type="string" pos:start="126:37" pos:end="126:52">"#address-cells"</literal></expr></argument>, <argument pos:start="126:55" pos:end="126:55"><expr pos:start="126:55" pos:end="126:55"><literal type="number" pos:start="126:55" pos:end="126:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="128:5" pos:end="128:54"><expr pos:start="128:5" pos:end="128:53"><call pos:start="128:5" pos:end="128:53"><name pos:start="128:5" pos:end="128:25">qemu_fdt_setprop_cell</name><argument_list pos:start="128:26" pos:end="128:53">(<argument pos:start="128:27" pos:end="128:29"><expr pos:start="128:27" pos:end="128:29"><name pos:start="128:27" pos:end="128:29">fdt</name></expr></argument>, <argument pos:start="128:32" pos:end="128:34"><expr pos:start="128:32" pos:end="128:34"><literal type="string" pos:start="128:32" pos:end="128:34">"/"</literal></expr></argument>, <argument pos:start="128:37" pos:end="128:49"><expr pos:start="128:37" pos:end="128:49"><literal type="string" pos:start="128:37" pos:end="128:49">"#size-cells"</literal></expr></argument>, <argument pos:start="128:52" pos:end="128:52"><expr pos:start="128:52" pos:end="128:52"><literal type="number" pos:start="128:52" pos:end="128:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="132:5" pos:end="132:41"><expr pos:start="132:5" pos:end="132:40"><call pos:start="132:5" pos:end="132:40"><name pos:start="132:5" pos:end="132:24">qemu_fdt_add_subnode</name><argument_list pos:start="132:25" pos:end="132:40">(<argument pos:start="132:26" pos:end="132:28"><expr pos:start="132:26" pos:end="132:28"><name pos:start="132:26" pos:end="132:28">fdt</name></expr></argument>, <argument pos:start="132:31" pos:end="132:39"><expr pos:start="132:31" pos:end="132:39"><literal type="string" pos:start="132:31" pos:end="132:39">"/memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="134:5" pos:end="134:69"><expr pos:start="134:5" pos:end="134:68"><call pos:start="134:5" pos:end="134:68"><name pos:start="134:5" pos:end="134:27">qemu_fdt_setprop_string</name><argument_list pos:start="134:28" pos:end="134:68">(<argument pos:start="134:29" pos:end="134:31"><expr pos:start="134:29" pos:end="134:31"><name pos:start="134:29" pos:end="134:31">fdt</name></expr></argument>, <argument pos:start="134:34" pos:end="134:42"><expr pos:start="134:34" pos:end="134:42"><literal type="string" pos:start="134:34" pos:end="134:42">"/memory"</literal></expr></argument>, <argument pos:start="134:45" pos:end="134:57"><expr pos:start="134:45" pos:end="134:57"><literal type="string" pos:start="134:45" pos:end="134:57">"device_type"</literal></expr></argument>, <argument pos:start="134:60" pos:end="134:67"><expr pos:start="134:60" pos:end="134:67"><literal type="string" pos:start="134:60" pos:end="134:67">"memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="136:5" pos:end="138:47"><expr pos:start="136:5" pos:end="138:46"><call pos:start="136:5" pos:end="138:46"><name pos:start="136:5" pos:end="136:20">qemu_fdt_setprop</name><argument_list pos:start="136:21" pos:end="138:46">(<argument pos:start="136:22" pos:end="136:24"><expr pos:start="136:22" pos:end="136:24"><name pos:start="136:22" pos:end="136:24">fdt</name></expr></argument>, <argument pos:start="136:27" pos:end="136:35"><expr pos:start="136:27" pos:end="136:35"><literal type="string" pos:start="136:27" pos:end="136:35">"/memory"</literal></expr></argument>, <argument pos:start="136:38" pos:end="136:42"><expr pos:start="136:38" pos:end="136:42"><literal type="string" pos:start="136:38" pos:end="136:42">"reg"</literal></expr></argument>, <argument pos:start="136:45" pos:end="136:60"><expr pos:start="136:45" pos:end="136:60"><name pos:start="136:45" pos:end="136:60">mem_reg_property</name></expr></argument>,

                     <argument pos:start="138:22" pos:end="138:45"><expr pos:start="138:22" pos:end="138:45"><sizeof pos:start="138:22" pos:end="138:45">sizeof<argument_list pos:start="138:28" pos:end="138:45">(<argument pos:start="138:29" pos:end="138:44"><expr pos:start="138:29" pos:end="138:44"><name pos:start="138:29" pos:end="138:44">mem_reg_property</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="142:5" pos:end="142:41"><expr pos:start="142:5" pos:end="142:40"><call pos:start="142:5" pos:end="142:40"><name pos:start="142:5" pos:end="142:24">qemu_fdt_add_subnode</name><argument_list pos:start="142:25" pos:end="142:40">(<argument pos:start="142:26" pos:end="142:28"><expr pos:start="142:26" pos:end="142:28"><name pos:start="142:26" pos:end="142:28">fdt</name></expr></argument>, <argument pos:start="142:31" pos:end="142:39"><expr pos:start="142:31" pos:end="142:39"><literal type="string" pos:start="142:31" pos:end="142:39">"/chosen"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="144:5" pos:end="170:5"><if pos:start="144:5" pos:end="170:5">if <condition pos:start="144:8" pos:end="144:20">(<expr pos:start="144:9" pos:end="144:19"><name pos:start="144:9" pos:end="144:19">initrd_size</name></expr>)</condition> <block pos:start="144:22" pos:end="170:5">{<block_content pos:start="146:9" pos:end="166:9">

        <expr_stmt pos:start="146:9" pos:end="148:49"><expr pos:start="146:9" pos:end="148:48"><name pos:start="146:9" pos:end="146:11">ret</name> <operator pos:start="146:13" pos:end="146:13">=</operator> <call pos:start="146:15" pos:end="148:48"><name pos:start="146:15" pos:end="146:35">qemu_fdt_setprop_cell</name><argument_list pos:start="146:36" pos:end="148:48">(<argument pos:start="146:37" pos:end="146:39"><expr pos:start="146:37" pos:end="146:39"><name pos:start="146:37" pos:end="146:39">fdt</name></expr></argument>, <argument pos:start="146:42" pos:end="146:50"><expr pos:start="146:42" pos:end="146:50"><literal type="string" pos:start="146:42" pos:end="146:50">"/chosen"</literal></expr></argument>, <argument pos:start="146:53" pos:end="146:72"><expr pos:start="146:53" pos:end="146:72"><literal type="string" pos:start="146:53" pos:end="146:72">"linux,initrd-start"</literal></expr></argument>,

                                    <argument pos:start="148:37" pos:end="148:47"><expr pos:start="148:37" pos:end="148:47"><name pos:start="148:37" pos:end="148:47">initrd_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="150:9" pos:end="154:9"><if pos:start="150:9" pos:end="154:9">if <condition pos:start="150:12" pos:end="150:20">(<expr pos:start="150:13" pos:end="150:19"><name pos:start="150:13" pos:end="150:15">ret</name> <operator pos:start="150:17" pos:end="150:17">&lt;</operator> <literal type="number" pos:start="150:19" pos:end="150:19">0</literal></expr>)</condition> <block pos:start="150:22" pos:end="154:9">{<block_content pos:start="152:13" pos:end="152:73">

            <expr_stmt pos:start="152:13" pos:end="152:73"><expr pos:start="152:13" pos:end="152:72"><call pos:start="152:13" pos:end="152:72"><name pos:start="152:13" pos:end="152:19">fprintf</name><argument_list pos:start="152:20" pos:end="152:72">(<argument pos:start="152:21" pos:end="152:26"><expr pos:start="152:21" pos:end="152:26"><name pos:start="152:21" pos:end="152:26">stderr</name></expr></argument>, <argument pos:start="152:29" pos:end="152:71"><expr pos:start="152:29" pos:end="152:71"><literal type="string" pos:start="152:29" pos:end="152:71">"couldn't set /chosen/linux,initrd-start\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="158:9" pos:end="160:65"><expr pos:start="158:9" pos:end="160:64"><name pos:start="158:9" pos:end="158:11">ret</name> <operator pos:start="158:13" pos:end="158:13">=</operator> <call pos:start="158:15" pos:end="160:64"><name pos:start="158:15" pos:end="158:35">qemu_fdt_setprop_cell</name><argument_list pos:start="158:36" pos:end="160:64">(<argument pos:start="158:37" pos:end="158:39"><expr pos:start="158:37" pos:end="158:39"><name pos:start="158:37" pos:end="158:39">fdt</name></expr></argument>, <argument pos:start="158:42" pos:end="158:50"><expr pos:start="158:42" pos:end="158:50"><literal type="string" pos:start="158:42" pos:end="158:50">"/chosen"</literal></expr></argument>, <argument pos:start="158:53" pos:end="158:70"><expr pos:start="158:53" pos:end="158:70"><literal type="string" pos:start="158:53" pos:end="158:70">"linux,initrd-end"</literal></expr></argument>,

                                    <argument pos:start="160:37" pos:end="160:63"><expr pos:start="160:37" pos:end="160:63"><operator pos:start="160:37" pos:end="160:37">(</operator><name pos:start="160:38" pos:end="160:48">initrd_base</name> <operator pos:start="160:50" pos:end="160:50">+</operator> <name pos:start="160:52" pos:end="160:62">initrd_size</name><operator pos:start="160:63" pos:end="160:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="162:9" pos:end="166:9"><if pos:start="162:9" pos:end="166:9">if <condition pos:start="162:12" pos:end="162:20">(<expr pos:start="162:13" pos:end="162:19"><name pos:start="162:13" pos:end="162:15">ret</name> <operator pos:start="162:17" pos:end="162:17">&lt;</operator> <literal type="number" pos:start="162:19" pos:end="162:19">0</literal></expr>)</condition> <block pos:start="162:22" pos:end="166:9">{<block_content pos:start="164:13" pos:end="164:71">

            <expr_stmt pos:start="164:13" pos:end="164:71"><expr pos:start="164:13" pos:end="164:70"><call pos:start="164:13" pos:end="164:70"><name pos:start="164:13" pos:end="164:19">fprintf</name><argument_list pos:start="164:20" pos:end="164:70">(<argument pos:start="164:21" pos:end="164:26"><expr pos:start="164:21" pos:end="164:26"><name pos:start="164:21" pos:end="164:26">stderr</name></expr></argument>, <argument pos:start="164:29" pos:end="164:69"><expr pos:start="164:29" pos:end="164:69"><literal type="string" pos:start="164:29" pos:end="164:69">"couldn't set /chosen/linux,initrd-end\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="174:5" pos:end="182:5"><if pos:start="174:5" pos:end="182:5">if <condition pos:start="174:8" pos:end="174:29">(<expr pos:start="174:9" pos:end="174:28"><name pos:start="174:9" pos:end="174:19">kernel_base</name> <operator pos:start="174:21" pos:end="174:22">!=</operator> <operator pos:start="174:24" pos:end="174:24">-</operator><literal type="number" pos:start="174:25" pos:end="174:28">1ULL</literal></expr>)</condition> <block pos:start="174:31" pos:end="182:5">{<block_content pos:start="176:9" pos:end="180:69">

        <expr_stmt pos:start="176:9" pos:end="180:69"><expr pos:start="176:9" pos:end="180:68"><call pos:start="176:9" pos:end="180:68"><name pos:start="176:9" pos:end="176:30">qemu_fdt_setprop_cells</name><argument_list pos:start="176:31" pos:end="180:68">(<argument pos:start="176:32" pos:end="176:34"><expr pos:start="176:32" pos:end="176:34"><name pos:start="176:32" pos:end="176:34">fdt</name></expr></argument>, <argument pos:start="176:37" pos:end="176:45"><expr pos:start="176:37" pos:end="176:45"><literal type="string" pos:start="176:37" pos:end="176:45">"/chosen"</literal></expr></argument>, <argument pos:start="176:48" pos:end="176:65"><expr pos:start="176:48" pos:end="176:65"><literal type="string" pos:start="176:48" pos:end="176:65">"qemu,boot-kernel"</literal></expr></argument>,

                                     <argument pos:start="178:38" pos:end="178:54"><expr pos:start="178:38" pos:end="178:54"><name pos:start="178:38" pos:end="178:48">kernel_base</name> <operator pos:start="178:50" pos:end="178:51">&gt;&gt;</operator> <literal type="number" pos:start="178:53" pos:end="178:54">32</literal></expr></argument>, <argument pos:start="178:57" pos:end="178:67"><expr pos:start="178:57" pos:end="178:67"><name pos:start="178:57" pos:end="178:67">kernel_base</name></expr></argument>,

                                     <argument pos:start="180:38" pos:end="180:54"><expr pos:start="180:38" pos:end="180:54"><name pos:start="180:38" pos:end="180:48">kernel_size</name> <operator pos:start="180:50" pos:end="180:51">&gt;&gt;</operator> <literal type="number" pos:start="180:53" pos:end="180:54">32</literal></expr></argument>, <argument pos:start="180:57" pos:end="180:67"><expr pos:start="180:57" pos:end="180:67"><name pos:start="180:57" pos:end="180:67">kernel_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="186:5" pos:end="188:63"><expr pos:start="186:5" pos:end="188:62"><name pos:start="186:5" pos:end="186:7">ret</name> <operator pos:start="186:9" pos:end="186:9">=</operator> <call pos:start="186:11" pos:end="188:62"><name pos:start="186:11" pos:end="186:33">qemu_fdt_setprop_string</name><argument_list pos:start="186:34" pos:end="188:62">(<argument pos:start="186:35" pos:end="186:37"><expr pos:start="186:35" pos:end="186:37"><name pos:start="186:35" pos:end="186:37">fdt</name></expr></argument>, <argument pos:start="186:40" pos:end="186:48"><expr pos:start="186:40" pos:end="186:48"><literal type="string" pos:start="186:40" pos:end="186:48">"/chosen"</literal></expr></argument>, <argument pos:start="186:51" pos:end="186:60"><expr pos:start="186:51" pos:end="186:60"><literal type="string" pos:start="186:51" pos:end="186:60">"bootargs"</literal></expr></argument>,

                                      <argument pos:start="188:39" pos:end="188:61"><expr pos:start="188:39" pos:end="188:61"><name pos:start="188:39" pos:end="188:61"><name pos:start="188:39" pos:end="188:45">machine</name><operator pos:start="188:46" pos:end="188:47">-&gt;</operator><name pos:start="188:48" pos:end="188:61">kernel_cmdline</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="190:5" pos:end="192:59"><if pos:start="190:5" pos:end="192:59">if <condition pos:start="190:8" pos:end="190:16">(<expr pos:start="190:9" pos:end="190:15"><name pos:start="190:9" pos:end="190:11">ret</name> <operator pos:start="190:13" pos:end="190:13">&lt;</operator> <literal type="number" pos:start="190:15" pos:end="190:15">0</literal></expr>)</condition><block type="pseudo" pos:start="192:9" pos:end="192:59"><block_content pos:start="192:9" pos:end="192:59">

        <expr_stmt pos:start="192:9" pos:end="192:59"><expr pos:start="192:9" pos:end="192:58"><call pos:start="192:9" pos:end="192:58"><name pos:start="192:9" pos:end="192:15">fprintf</name><argument_list pos:start="192:16" pos:end="192:58">(<argument pos:start="192:17" pos:end="192:22"><expr pos:start="192:17" pos:end="192:22"><name pos:start="192:17" pos:end="192:22">stderr</name></expr></argument>, <argument pos:start="192:25" pos:end="192:57"><expr pos:start="192:25" pos:end="192:57"><literal type="string" pos:start="192:25" pos:end="192:57">"couldn't set /chosen/bootargs\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="196:5" pos:end="228:5"><if pos:start="196:5" pos:end="228:5">if <condition pos:start="196:8" pos:end="196:22">(<expr pos:start="196:9" pos:end="196:21"><call pos:start="196:9" pos:end="196:21"><name pos:start="196:9" pos:end="196:19">kvm_enabled</name><argument_list pos:start="196:20" pos:end="196:21">()</argument_list></call></expr>)</condition> <block pos:start="196:24" pos:end="228:5">{<block_content pos:start="200:9" pos:end="226:9">

        <comment type="block" pos:start="198:9" pos:end="198:41">/* Read out host's frequencies */</comment>

        <expr_stmt pos:start="200:9" pos:end="200:44"><expr pos:start="200:9" pos:end="200:43"><name pos:start="200:9" pos:end="200:18">clock_freq</name> <operator pos:start="200:20" pos:end="200:20">=</operator> <call pos:start="200:22" pos:end="200:43"><name pos:start="200:22" pos:end="200:41">kvmppc_get_clockfreq</name><argument_list pos:start="200:42" pos:end="200:43">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="202:9" pos:end="202:38"><expr pos:start="202:9" pos:end="202:37"><name pos:start="202:9" pos:end="202:15">tb_freq</name> <operator pos:start="202:17" pos:end="202:17">=</operator> <call pos:start="202:19" pos:end="202:37"><name pos:start="202:19" pos:end="202:35">kvmppc_get_tbfreq</name><argument_list pos:start="202:36" pos:end="202:37">()</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="206:9" pos:end="206:46">/* indicate KVM hypercall interface */</comment>

        <expr_stmt pos:start="208:9" pos:end="208:49"><expr pos:start="208:9" pos:end="208:48"><call pos:start="208:9" pos:end="208:48"><name pos:start="208:9" pos:end="208:28">qemu_fdt_add_subnode</name><argument_list pos:start="208:29" pos:end="208:48">(<argument pos:start="208:30" pos:end="208:32"><expr pos:start="208:30" pos:end="208:32"><name pos:start="208:30" pos:end="208:32">fdt</name></expr></argument>, <argument pos:start="208:35" pos:end="208:47"><expr pos:start="208:35" pos:end="208:47"><literal type="string" pos:start="208:35" pos:end="208:47">"/hypervisor"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="210:9" pos:end="212:45"><expr pos:start="210:9" pos:end="212:44"><call pos:start="210:9" pos:end="212:44"><name pos:start="210:9" pos:end="210:31">qemu_fdt_setprop_string</name><argument_list pos:start="210:32" pos:end="212:44">(<argument pos:start="210:33" pos:end="210:35"><expr pos:start="210:33" pos:end="210:35"><name pos:start="210:33" pos:end="210:35">fdt</name></expr></argument>, <argument pos:start="210:38" pos:end="210:50"><expr pos:start="210:38" pos:end="210:50"><literal type="string" pos:start="210:38" pos:end="210:50">"/hypervisor"</literal></expr></argument>, <argument pos:start="210:53" pos:end="210:64"><expr pos:start="210:53" pos:end="210:64"><literal type="string" pos:start="210:53" pos:end="210:64">"compatible"</literal></expr></argument>,

                                <argument pos:start="212:33" pos:end="212:43"><expr pos:start="212:33" pos:end="212:43"><literal type="string" pos:start="212:33" pos:end="212:43">"linux,kvm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="214:9" pos:end="214:64"><expr pos:start="214:9" pos:end="214:63"><call pos:start="214:9" pos:end="214:63"><name pos:start="214:9" pos:end="214:28">kvmppc_get_hypercall</name><argument_list pos:start="214:29" pos:end="214:63">(<argument pos:start="214:30" pos:end="214:32"><expr pos:start="214:30" pos:end="214:32"><name pos:start="214:30" pos:end="214:32">env</name></expr></argument>, <argument pos:start="214:35" pos:end="214:43"><expr pos:start="214:35" pos:end="214:43"><name pos:start="214:35" pos:end="214:43">hypercall</name></expr></argument>, <argument pos:start="214:46" pos:end="214:62"><expr pos:start="214:46" pos:end="214:62"><sizeof pos:start="214:46" pos:end="214:62">sizeof<argument_list pos:start="214:52" pos:end="214:62">(<argument pos:start="214:53" pos:end="214:61"><expr pos:start="214:53" pos:end="214:61"><name pos:start="214:53" pos:end="214:61">hypercall</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="216:9" pos:end="218:55"><expr pos:start="216:9" pos:end="218:54"><call pos:start="216:9" pos:end="218:54"><name pos:start="216:9" pos:end="216:24">qemu_fdt_setprop</name><argument_list pos:start="216:25" pos:end="218:54">(<argument pos:start="216:26" pos:end="216:28"><expr pos:start="216:26" pos:end="216:28"><name pos:start="216:26" pos:end="216:28">fdt</name></expr></argument>, <argument pos:start="216:31" pos:end="216:43"><expr pos:start="216:31" pos:end="216:43"><literal type="string" pos:start="216:31" pos:end="216:43">"/hypervisor"</literal></expr></argument>, <argument pos:start="216:46" pos:end="216:65"><expr pos:start="216:46" pos:end="216:65"><literal type="string" pos:start="216:46" pos:end="216:65">"hcall-instructions"</literal></expr></argument>,

                         <argument pos:start="218:26" pos:end="218:34"><expr pos:start="218:26" pos:end="218:34"><name pos:start="218:26" pos:end="218:34">hypercall</name></expr></argument>, <argument pos:start="218:37" pos:end="218:53"><expr pos:start="218:37" pos:end="218:53"><sizeof pos:start="218:37" pos:end="218:53">sizeof<argument_list pos:start="218:43" pos:end="218:53">(<argument pos:start="218:44" pos:end="218:52"><expr pos:start="218:44" pos:end="218:52"><name pos:start="218:44" pos:end="218:52">hypercall</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="220:9" pos:end="220:74">/* if KVM supports the idle hcall, set property indicating this */</comment>

        <if_stmt pos:start="222:9" pos:end="226:9"><if pos:start="222:9" pos:end="226:9">if <condition pos:start="222:12" pos:end="222:36">(<expr pos:start="222:13" pos:end="222:35"><call pos:start="222:13" pos:end="222:35"><name pos:start="222:13" pos:end="222:30">kvmppc_get_hasidle</name><argument_list pos:start="222:31" pos:end="222:35">(<argument pos:start="222:32" pos:end="222:34"><expr pos:start="222:32" pos:end="222:34"><name pos:start="222:32" pos:end="222:34">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="222:38" pos:end="226:9">{<block_content pos:start="224:13" pos:end="224:70">

            <expr_stmt pos:start="224:13" pos:end="224:70"><expr pos:start="224:13" pos:end="224:69"><call pos:start="224:13" pos:end="224:69"><name pos:start="224:13" pos:end="224:28">qemu_fdt_setprop</name><argument_list pos:start="224:29" pos:end="224:69">(<argument pos:start="224:30" pos:end="224:32"><expr pos:start="224:30" pos:end="224:32"><name pos:start="224:30" pos:end="224:32">fdt</name></expr></argument>, <argument pos:start="224:35" pos:end="224:47"><expr pos:start="224:35" pos:end="224:47"><literal type="string" pos:start="224:35" pos:end="224:47">"/hypervisor"</literal></expr></argument>, <argument pos:start="224:50" pos:end="224:59"><expr pos:start="224:50" pos:end="224:59"><literal type="string" pos:start="224:50" pos:end="224:59">"has-idle"</literal></expr></argument>, <argument pos:start="224:62" pos:end="224:65"><expr pos:start="224:62" pos:end="224:65"><name pos:start="224:62" pos:end="224:65">NULL</name></expr></argument>, <argument pos:start="224:68" pos:end="224:68"><expr pos:start="224:68" pos:end="224:68"><literal type="number" pos:start="224:68" pos:end="224:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="232:5" pos:end="232:26">/* Create CPU nodes */</comment>

    <expr_stmt pos:start="234:5" pos:end="234:39"><expr pos:start="234:5" pos:end="234:38"><call pos:start="234:5" pos:end="234:38"><name pos:start="234:5" pos:end="234:24">qemu_fdt_add_subnode</name><argument_list pos:start="234:25" pos:end="234:38">(<argument pos:start="234:26" pos:end="234:28"><expr pos:start="234:26" pos:end="234:28"><name pos:start="234:26" pos:end="234:28">fdt</name></expr></argument>, <argument pos:start="234:31" pos:end="234:37"><expr pos:start="234:31" pos:end="234:37"><literal type="string" pos:start="234:31" pos:end="234:37">"/cpus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="236:5" pos:end="236:61"><expr pos:start="236:5" pos:end="236:60"><call pos:start="236:5" pos:end="236:60"><name pos:start="236:5" pos:end="236:25">qemu_fdt_setprop_cell</name><argument_list pos:start="236:26" pos:end="236:60">(<argument pos:start="236:27" pos:end="236:29"><expr pos:start="236:27" pos:end="236:29"><name pos:start="236:27" pos:end="236:29">fdt</name></expr></argument>, <argument pos:start="236:32" pos:end="236:38"><expr pos:start="236:32" pos:end="236:38"><literal type="string" pos:start="236:32" pos:end="236:38">"/cpus"</literal></expr></argument>, <argument pos:start="236:41" pos:end="236:56"><expr pos:start="236:41" pos:end="236:56"><literal type="string" pos:start="236:41" pos:end="236:56">"#address-cells"</literal></expr></argument>, <argument pos:start="236:59" pos:end="236:59"><expr pos:start="236:59" pos:end="236:59"><literal type="number" pos:start="236:59" pos:end="236:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="238:5" pos:end="238:58"><expr pos:start="238:5" pos:end="238:57"><call pos:start="238:5" pos:end="238:57"><name pos:start="238:5" pos:end="238:25">qemu_fdt_setprop_cell</name><argument_list pos:start="238:26" pos:end="238:57">(<argument pos:start="238:27" pos:end="238:29"><expr pos:start="238:27" pos:end="238:29"><name pos:start="238:27" pos:end="238:29">fdt</name></expr></argument>, <argument pos:start="238:32" pos:end="238:38"><expr pos:start="238:32" pos:end="238:38"><literal type="string" pos:start="238:32" pos:end="238:38">"/cpus"</literal></expr></argument>, <argument pos:start="238:41" pos:end="238:53"><expr pos:start="238:41" pos:end="238:53"><literal type="string" pos:start="238:41" pos:end="238:53">"#size-cells"</literal></expr></argument>, <argument pos:start="238:56" pos:end="238:56"><expr pos:start="238:56" pos:end="238:56"><literal type="number" pos:start="238:56" pos:end="238:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="242:5" pos:end="244:50">/* We need to generate the cpu nodes in reverse order, so Linux can pick

       the first node as boot node and be happy */</comment>

    <for pos:start="246:5" pos:end="320:5">for <control pos:start="246:9" pos:end="246:39">(<init pos:start="246:10" pos:end="246:26"><expr pos:start="246:10" pos:end="246:25"><name pos:start="246:10" pos:end="246:10">i</name> <operator pos:start="246:12" pos:end="246:12">=</operator> <name pos:start="246:14" pos:end="246:21">smp_cpus</name> <operator pos:start="246:23" pos:end="246:23">-</operator> <literal type="number" pos:start="246:25" pos:end="246:25">1</literal></expr>;</init> <condition pos:start="246:28" pos:end="246:34"><expr pos:start="246:28" pos:end="246:33"><name pos:start="246:28" pos:end="246:28">i</name> <operator pos:start="246:30" pos:end="246:31">&gt;=</operator> <literal type="number" pos:start="246:33" pos:end="246:33">0</literal></expr>;</condition> <incr pos:start="246:36" pos:end="246:38"><expr pos:start="246:36" pos:end="246:38"><name pos:start="246:36" pos:end="246:36">i</name><operator pos:start="246:37" pos:end="246:38">--</operator></expr></incr>)</control> <block pos:start="246:41" pos:end="320:5">{<block_content pos:start="248:9" pos:end="318:9">

        <decl_stmt pos:start="248:9" pos:end="248:22"><decl pos:start="248:9" pos:end="248:21"><type pos:start="248:9" pos:end="248:18"><name pos:start="248:9" pos:end="248:16">CPUState</name> <modifier pos:start="248:18" pos:end="248:18">*</modifier></type><name pos:start="248:19" pos:end="248:21">cpu</name></decl>;</decl_stmt>

        <decl_stmt pos:start="250:9" pos:end="250:25"><decl pos:start="250:9" pos:end="250:24"><type pos:start="250:9" pos:end="250:20"><name pos:start="250:9" pos:end="250:18">PowerPCCPU</name> <modifier pos:start="250:20" pos:end="250:20">*</modifier></type><name pos:start="250:21" pos:end="250:24">pcpu</name></decl>;</decl_stmt>

        <decl_stmt pos:start="252:9" pos:end="252:27"><decl pos:start="252:9" pos:end="252:26"><type pos:start="252:9" pos:end="252:12"><name pos:start="252:9" pos:end="252:12">char</name></type> <name pos:start="252:14" pos:end="252:26"><name pos:start="252:14" pos:end="252:21">cpu_name</name><index pos:start="252:22" pos:end="252:26">[<expr pos:start="252:23" pos:end="252:25"><literal type="number" pos:start="252:23" pos:end="252:25">128</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="254:9" pos:end="254:67"><decl pos:start="254:9" pos:end="254:66"><type pos:start="254:9" pos:end="254:16"><name pos:start="254:9" pos:end="254:16">uint64_t</name></type> <name pos:start="254:18" pos:end="254:33">cpu_release_addr</name> <init pos:start="254:35" pos:end="254:66">= <expr pos:start="254:37" pos:end="254:66"><name pos:start="254:37" pos:end="254:53"><name pos:start="254:37" pos:end="254:42">params</name><operator pos:start="254:43" pos:end="254:44">-&gt;</operator><name pos:start="254:45" pos:end="254:53">spin_base</name></name> <operator pos:start="254:55" pos:end="254:55">+</operator> <operator pos:start="254:57" pos:end="254:57">(</operator><name pos:start="254:58" pos:end="254:58">i</name> <operator pos:start="254:60" pos:end="254:60">*</operator> <literal type="number" pos:start="254:62" pos:end="254:65">0x20</literal><operator pos:start="254:66" pos:end="254:66">)</operator></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="258:9" pos:end="258:30"><expr pos:start="258:9" pos:end="258:29"><name pos:start="258:9" pos:end="258:11">cpu</name> <operator pos:start="258:13" pos:end="258:13">=</operator> <call pos:start="258:15" pos:end="258:29"><name pos:start="258:15" pos:end="258:26">qemu_get_cpu</name><argument_list pos:start="258:27" pos:end="258:29">(<argument pos:start="258:28" pos:end="258:28"><expr pos:start="258:28" pos:end="258:28"><name pos:start="258:28" pos:end="258:28">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="260:9" pos:end="264:9"><if pos:start="260:9" pos:end="264:9">if <condition pos:start="260:12" pos:end="260:24">(<expr pos:start="260:13" pos:end="260:23"><name pos:start="260:13" pos:end="260:15">cpu</name> <operator pos:start="260:17" pos:end="260:18">==</operator> <name pos:start="260:20" pos:end="260:23">NULL</name></expr>)</condition> <block pos:start="260:26" pos:end="264:9">{<block_content pos:start="262:13" pos:end="262:21">

            <continue pos:start="262:13" pos:end="262:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="266:9" pos:end="266:27"><expr pos:start="266:9" pos:end="266:26"><name pos:start="266:9" pos:end="266:11">env</name> <operator pos:start="266:13" pos:end="266:13">=</operator> <name pos:start="266:15" pos:end="266:26"><name pos:start="266:15" pos:end="266:17">cpu</name><operator pos:start="266:18" pos:end="266:19">-&gt;</operator><name pos:start="266:20" pos:end="266:26">env_ptr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="268:9" pos:end="268:32"><expr pos:start="268:9" pos:end="268:31"><name pos:start="268:9" pos:end="268:12">pcpu</name> <operator pos:start="268:14" pos:end="268:14">=</operator> <call pos:start="268:16" pos:end="268:31"><name pos:start="268:16" pos:end="268:26">POWERPC_CPU</name><argument_list pos:start="268:27" pos:end="268:31">(<argument pos:start="268:28" pos:end="268:30"><expr pos:start="268:28" pos:end="268:30"><name pos:start="268:28" pos:end="268:30">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="272:9" pos:end="274:43"><expr pos:start="272:9" pos:end="274:42"><call pos:start="272:9" pos:end="274:42"><name pos:start="272:9" pos:end="272:16">snprintf</name><argument_list pos:start="272:17" pos:end="274:42">(<argument pos:start="272:18" pos:end="272:25"><expr pos:start="272:18" pos:end="272:25"><name pos:start="272:18" pos:end="272:25">cpu_name</name></expr></argument>, <argument pos:start="272:28" pos:end="272:43"><expr pos:start="272:28" pos:end="272:43"><sizeof pos:start="272:28" pos:end="272:43">sizeof<argument_list pos:start="272:34" pos:end="272:43">(<argument pos:start="272:35" pos:end="272:42"><expr pos:start="272:35" pos:end="272:42"><name pos:start="272:35" pos:end="272:42">cpu_name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="272:46" pos:end="272:68"><expr pos:start="272:46" pos:end="272:68"><literal type="string" pos:start="272:46" pos:end="272:68">"/cpus/PowerPC,8544@%x"</literal></expr></argument>,

                 <argument pos:start="274:18" pos:end="274:41"><expr pos:start="274:18" pos:end="274:41"><call pos:start="274:18" pos:end="274:41"><name pos:start="274:18" pos:end="274:35">ppc_get_vcpu_dt_id</name><argument_list pos:start="274:36" pos:end="274:41">(<argument pos:start="274:37" pos:end="274:40"><expr pos:start="274:37" pos:end="274:40"><name pos:start="274:37" pos:end="274:40">pcpu</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="276:9" pos:end="276:44"><expr pos:start="276:9" pos:end="276:43"><call pos:start="276:9" pos:end="276:43"><name pos:start="276:9" pos:end="276:28">qemu_fdt_add_subnode</name><argument_list pos:start="276:29" pos:end="276:43">(<argument pos:start="276:30" pos:end="276:32"><expr pos:start="276:30" pos:end="276:32"><name pos:start="276:30" pos:end="276:32">fdt</name></expr></argument>, <argument pos:start="276:35" pos:end="276:42"><expr pos:start="276:35" pos:end="276:42"><name pos:start="276:35" pos:end="276:42">cpu_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="278:9" pos:end="278:76"><expr pos:start="278:9" pos:end="278:75"><call pos:start="278:9" pos:end="278:75"><name pos:start="278:9" pos:end="278:29">qemu_fdt_setprop_cell</name><argument_list pos:start="278:30" pos:end="278:75">(<argument pos:start="278:31" pos:end="278:33"><expr pos:start="278:31" pos:end="278:33"><name pos:start="278:31" pos:end="278:33">fdt</name></expr></argument>, <argument pos:start="278:36" pos:end="278:43"><expr pos:start="278:36" pos:end="278:43"><name pos:start="278:36" pos:end="278:43">cpu_name</name></expr></argument>, <argument pos:start="278:46" pos:end="278:62"><expr pos:start="278:46" pos:end="278:62"><literal type="string" pos:start="278:46" pos:end="278:62">"clock-frequency"</literal></expr></argument>, <argument pos:start="278:65" pos:end="278:74"><expr pos:start="278:65" pos:end="278:74"><name pos:start="278:65" pos:end="278:74">clock_freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="280:9" pos:end="280:76"><expr pos:start="280:9" pos:end="280:75"><call pos:start="280:9" pos:end="280:75"><name pos:start="280:9" pos:end="280:29">qemu_fdt_setprop_cell</name><argument_list pos:start="280:30" pos:end="280:75">(<argument pos:start="280:31" pos:end="280:33"><expr pos:start="280:31" pos:end="280:33"><name pos:start="280:31" pos:end="280:33">fdt</name></expr></argument>, <argument pos:start="280:36" pos:end="280:43"><expr pos:start="280:36" pos:end="280:43"><name pos:start="280:36" pos:end="280:43">cpu_name</name></expr></argument>, <argument pos:start="280:46" pos:end="280:65"><expr pos:start="280:46" pos:end="280:65"><literal type="string" pos:start="280:46" pos:end="280:65">"timebase-frequency"</literal></expr></argument>, <argument pos:start="280:68" pos:end="280:74"><expr pos:start="280:68" pos:end="280:74"><name pos:start="280:68" pos:end="280:74">tb_freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="282:9" pos:end="282:69"><expr pos:start="282:9" pos:end="282:68"><call pos:start="282:9" pos:end="282:68"><name pos:start="282:9" pos:end="282:31">qemu_fdt_setprop_string</name><argument_list pos:start="282:32" pos:end="282:68">(<argument pos:start="282:33" pos:end="282:35"><expr pos:start="282:33" pos:end="282:35"><name pos:start="282:33" pos:end="282:35">fdt</name></expr></argument>, <argument pos:start="282:38" pos:end="282:45"><expr pos:start="282:38" pos:end="282:45"><name pos:start="282:38" pos:end="282:45">cpu_name</name></expr></argument>, <argument pos:start="282:48" pos:end="282:60"><expr pos:start="282:48" pos:end="282:60"><literal type="string" pos:start="282:48" pos:end="282:60">"device_type"</literal></expr></argument>, <argument pos:start="282:63" pos:end="282:67"><expr pos:start="282:63" pos:end="282:67"><literal type="string" pos:start="282:63" pos:end="282:67">"cpu"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="284:9" pos:end="286:56"><expr pos:start="284:9" pos:end="286:55"><call pos:start="284:9" pos:end="286:55"><name pos:start="284:9" pos:end="284:29">qemu_fdt_setprop_cell</name><argument_list pos:start="284:30" pos:end="286:55">(<argument pos:start="284:31" pos:end="284:33"><expr pos:start="284:31" pos:end="284:33"><name pos:start="284:31" pos:end="284:33">fdt</name></expr></argument>, <argument pos:start="284:36" pos:end="284:43"><expr pos:start="284:36" pos:end="284:43"><name pos:start="284:36" pos:end="284:43">cpu_name</name></expr></argument>, <argument pos:start="284:46" pos:end="284:50"><expr pos:start="284:46" pos:end="284:50"><literal type="string" pos:start="284:46" pos:end="284:50">"reg"</literal></expr></argument>,

                              <argument pos:start="286:31" pos:end="286:54"><expr pos:start="286:31" pos:end="286:54"><call pos:start="286:31" pos:end="286:54"><name pos:start="286:31" pos:end="286:48">ppc_get_vcpu_dt_id</name><argument_list pos:start="286:49" pos:end="286:54">(<argument pos:start="286:50" pos:end="286:53"><expr pos:start="286:50" pos:end="286:53"><name pos:start="286:50" pos:end="286:53">pcpu</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="288:9" pos:end="290:53"><expr pos:start="288:9" pos:end="290:52"><call pos:start="288:9" pos:end="290:52"><name pos:start="288:9" pos:end="288:29">qemu_fdt_setprop_cell</name><argument_list pos:start="288:30" pos:end="290:52">(<argument pos:start="288:31" pos:end="288:33"><expr pos:start="288:31" pos:end="288:33"><name pos:start="288:31" pos:end="288:33">fdt</name></expr></argument>, <argument pos:start="288:36" pos:end="288:43"><expr pos:start="288:36" pos:end="288:43"><name pos:start="288:36" pos:end="288:43">cpu_name</name></expr></argument>, <argument pos:start="288:46" pos:end="288:64"><expr pos:start="288:46" pos:end="288:64"><literal type="string" pos:start="288:46" pos:end="288:64">"d-cache-line-size"</literal></expr></argument>,

                              <argument pos:start="290:31" pos:end="290:51"><expr pos:start="290:31" pos:end="290:51"><name pos:start="290:31" pos:end="290:51"><name pos:start="290:31" pos:end="290:33">env</name><operator pos:start="290:34" pos:end="290:35">-&gt;</operator><name pos:start="290:36" pos:end="290:51">dcache_line_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="292:9" pos:end="294:53"><expr pos:start="292:9" pos:end="294:52"><call pos:start="292:9" pos:end="294:52"><name pos:start="292:9" pos:end="292:29">qemu_fdt_setprop_cell</name><argument_list pos:start="292:30" pos:end="294:52">(<argument pos:start="292:31" pos:end="292:33"><expr pos:start="292:31" pos:end="292:33"><name pos:start="292:31" pos:end="292:33">fdt</name></expr></argument>, <argument pos:start="292:36" pos:end="292:43"><expr pos:start="292:36" pos:end="292:43"><name pos:start="292:36" pos:end="292:43">cpu_name</name></expr></argument>, <argument pos:start="292:46" pos:end="292:64"><expr pos:start="292:46" pos:end="292:64"><literal type="string" pos:start="292:46" pos:end="292:64">"i-cache-line-size"</literal></expr></argument>,

                              <argument pos:start="294:31" pos:end="294:51"><expr pos:start="294:31" pos:end="294:51"><name pos:start="294:31" pos:end="294:51"><name pos:start="294:31" pos:end="294:33">env</name><operator pos:start="294:34" pos:end="294:35">-&gt;</operator><name pos:start="294:36" pos:end="294:51">icache_line_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="296:9" pos:end="296:69"><expr pos:start="296:9" pos:end="296:68"><call pos:start="296:9" pos:end="296:68"><name pos:start="296:9" pos:end="296:29">qemu_fdt_setprop_cell</name><argument_list pos:start="296:30" pos:end="296:68">(<argument pos:start="296:31" pos:end="296:33"><expr pos:start="296:31" pos:end="296:33"><name pos:start="296:31" pos:end="296:33">fdt</name></expr></argument>, <argument pos:start="296:36" pos:end="296:43"><expr pos:start="296:36" pos:end="296:43"><name pos:start="296:36" pos:end="296:43">cpu_name</name></expr></argument>, <argument pos:start="296:46" pos:end="296:59"><expr pos:start="296:46" pos:end="296:59"><literal type="string" pos:start="296:46" pos:end="296:59">"d-cache-size"</literal></expr></argument>, <argument pos:start="296:62" pos:end="296:67"><expr pos:start="296:62" pos:end="296:67"><literal type="number" pos:start="296:62" pos:end="296:67">0x8000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="298:9" pos:end="298:69"><expr pos:start="298:9" pos:end="298:68"><call pos:start="298:9" pos:end="298:68"><name pos:start="298:9" pos:end="298:29">qemu_fdt_setprop_cell</name><argument_list pos:start="298:30" pos:end="298:68">(<argument pos:start="298:31" pos:end="298:33"><expr pos:start="298:31" pos:end="298:33"><name pos:start="298:31" pos:end="298:33">fdt</name></expr></argument>, <argument pos:start="298:36" pos:end="298:43"><expr pos:start="298:36" pos:end="298:43"><name pos:start="298:36" pos:end="298:43">cpu_name</name></expr></argument>, <argument pos:start="298:46" pos:end="298:59"><expr pos:start="298:46" pos:end="298:59"><literal type="string" pos:start="298:46" pos:end="298:59">"i-cache-size"</literal></expr></argument>, <argument pos:start="298:62" pos:end="298:67"><expr pos:start="298:62" pos:end="298:67"><literal type="number" pos:start="298:62" pos:end="298:67">0x8000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="300:9" pos:end="300:65"><expr pos:start="300:9" pos:end="300:64"><call pos:start="300:9" pos:end="300:64"><name pos:start="300:9" pos:end="300:29">qemu_fdt_setprop_cell</name><argument_list pos:start="300:30" pos:end="300:64">(<argument pos:start="300:31" pos:end="300:33"><expr pos:start="300:31" pos:end="300:33"><name pos:start="300:31" pos:end="300:33">fdt</name></expr></argument>, <argument pos:start="300:36" pos:end="300:43"><expr pos:start="300:36" pos:end="300:43"><name pos:start="300:36" pos:end="300:43">cpu_name</name></expr></argument>, <argument pos:start="300:46" pos:end="300:60"><expr pos:start="300:46" pos:end="300:60"><literal type="string" pos:start="300:46" pos:end="300:60">"bus-frequency"</literal></expr></argument>, <argument pos:start="300:63" pos:end="300:63"><expr pos:start="300:63" pos:end="300:63"><literal type="number" pos:start="300:63" pos:end="300:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="302:9" pos:end="318:9"><if pos:start="302:9" pos:end="314:9">if <condition pos:start="302:12" pos:end="302:27">(<expr pos:start="302:13" pos:end="302:26"><name pos:start="302:13" pos:end="302:26"><name pos:start="302:13" pos:end="302:15">cpu</name><operator pos:start="302:16" pos:end="302:17">-&gt;</operator><name pos:start="302:18" pos:end="302:26">cpu_index</name></name></expr>)</condition> <block pos:start="302:29" pos:end="314:9">{<block_content pos:start="304:13" pos:end="312:51">

            <expr_stmt pos:start="304:13" pos:end="304:73"><expr pos:start="304:13" pos:end="304:72"><call pos:start="304:13" pos:end="304:72"><name pos:start="304:13" pos:end="304:35">qemu_fdt_setprop_string</name><argument_list pos:start="304:36" pos:end="304:72">(<argument pos:start="304:37" pos:end="304:39"><expr pos:start="304:37" pos:end="304:39"><name pos:start="304:37" pos:end="304:39">fdt</name></expr></argument>, <argument pos:start="304:42" pos:end="304:49"><expr pos:start="304:42" pos:end="304:49"><name pos:start="304:42" pos:end="304:49">cpu_name</name></expr></argument>, <argument pos:start="304:52" pos:end="304:59"><expr pos:start="304:52" pos:end="304:59"><literal type="string" pos:start="304:52" pos:end="304:59">"status"</literal></expr></argument>, <argument pos:start="304:62" pos:end="304:71"><expr pos:start="304:62" pos:end="304:71"><literal type="string" pos:start="304:62" pos:end="304:71">"disabled"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="306:13" pos:end="308:50"><expr pos:start="306:13" pos:end="308:49"><call pos:start="306:13" pos:end="308:49"><name pos:start="306:13" pos:end="306:35">qemu_fdt_setprop_string</name><argument_list pos:start="306:36" pos:end="308:49">(<argument pos:start="306:37" pos:end="306:39"><expr pos:start="306:37" pos:end="306:39"><name pos:start="306:37" pos:end="306:39">fdt</name></expr></argument>, <argument pos:start="306:42" pos:end="306:49"><expr pos:start="306:42" pos:end="306:49"><name pos:start="306:42" pos:end="306:49">cpu_name</name></expr></argument>, <argument pos:start="306:52" pos:end="306:66"><expr pos:start="306:52" pos:end="306:66"><literal type="string" pos:start="306:52" pos:end="306:66">"enable-method"</literal></expr></argument>,

                                    <argument pos:start="308:37" pos:end="308:48"><expr pos:start="308:37" pos:end="308:48"><literal type="string" pos:start="308:37" pos:end="308:48">"spin-table"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="310:13" pos:end="312:51"><expr pos:start="310:13" pos:end="312:50"><call pos:start="310:13" pos:end="312:50"><name pos:start="310:13" pos:end="310:32">qemu_fdt_setprop_u64</name><argument_list pos:start="310:33" pos:end="312:50">(<argument pos:start="310:34" pos:end="310:36"><expr pos:start="310:34" pos:end="310:36"><name pos:start="310:34" pos:end="310:36">fdt</name></expr></argument>, <argument pos:start="310:39" pos:end="310:46"><expr pos:start="310:39" pos:end="310:46"><name pos:start="310:39" pos:end="310:46">cpu_name</name></expr></argument>, <argument pos:start="310:49" pos:end="310:66"><expr pos:start="310:49" pos:end="310:66"><literal type="string" pos:start="310:49" pos:end="310:66">"cpu-release-addr"</literal></expr></argument>,

                                 <argument pos:start="312:34" pos:end="312:49"><expr pos:start="312:34" pos:end="312:49"><name pos:start="312:34" pos:end="312:49">cpu_release_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="314:11" pos:end="318:9">else <block pos:start="314:16" pos:end="318:9">{<block_content pos:start="316:13" pos:end="316:69">

            <expr_stmt pos:start="316:13" pos:end="316:69"><expr pos:start="316:13" pos:end="316:68"><call pos:start="316:13" pos:end="316:68"><name pos:start="316:13" pos:end="316:35">qemu_fdt_setprop_string</name><argument_list pos:start="316:36" pos:end="316:68">(<argument pos:start="316:37" pos:end="316:39"><expr pos:start="316:37" pos:end="316:39"><name pos:start="316:37" pos:end="316:39">fdt</name></expr></argument>, <argument pos:start="316:42" pos:end="316:49"><expr pos:start="316:42" pos:end="316:49"><name pos:start="316:42" pos:end="316:49">cpu_name</name></expr></argument>, <argument pos:start="316:52" pos:end="316:59"><expr pos:start="316:52" pos:end="316:59"><literal type="string" pos:start="316:52" pos:end="316:59">"status"</literal></expr></argument>, <argument pos:start="316:62" pos:end="316:67"><expr pos:start="316:62" pos:end="316:67"><literal type="string" pos:start="316:62" pos:end="316:67">"okay"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="324:5" pos:end="324:42"><expr pos:start="324:5" pos:end="324:41"><call pos:start="324:5" pos:end="324:41"><name pos:start="324:5" pos:end="324:24">qemu_fdt_add_subnode</name><argument_list pos:start="324:25" pos:end="324:41">(<argument pos:start="324:26" pos:end="324:28"><expr pos:start="324:26" pos:end="324:28"><name pos:start="324:26" pos:end="324:28">fdt</name></expr></argument>, <argument pos:start="324:31" pos:end="324:40"><expr pos:start="324:31" pos:end="324:40"><literal type="string" pos:start="324:31" pos:end="324:40">"/aliases"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="326:5" pos:end="326:65">/* XXX These should go into their respective devices' code */</comment>

    <expr_stmt pos:start="328:5" pos:end="328:69"><expr pos:start="328:5" pos:end="328:68"><call pos:start="328:5" pos:end="328:68"><name pos:start="328:5" pos:end="328:12">snprintf</name><argument_list pos:start="328:13" pos:end="328:68">(<argument pos:start="328:14" pos:end="328:16"><expr pos:start="328:14" pos:end="328:16"><name pos:start="328:14" pos:end="328:16">soc</name></expr></argument>, <argument pos:start="328:19" pos:end="328:29"><expr pos:start="328:19" pos:end="328:29"><sizeof pos:start="328:19" pos:end="328:29">sizeof<argument_list pos:start="328:25" pos:end="328:29">(<argument pos:start="328:26" pos:end="328:28"><expr pos:start="328:26" pos:end="328:28"><name pos:start="328:26" pos:end="328:28">soc</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="328:32" pos:end="328:45"><expr pos:start="328:32" pos:end="328:45"><literal type="string" pos:start="328:32" pos:end="328:39">"/soc@%"</literal><name pos:start="328:40" pos:end="328:45">PRIx64</name></expr></argument>, <argument pos:start="328:48" pos:end="328:67"><expr pos:start="328:48" pos:end="328:67"><name pos:start="328:48" pos:end="328:67"><name pos:start="328:48" pos:end="328:53">params</name><operator pos:start="328:54" pos:end="328:55">-&gt;</operator><name pos:start="328:56" pos:end="328:67">ccsrbar_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="330:5" pos:end="330:35"><expr pos:start="330:5" pos:end="330:34"><call pos:start="330:5" pos:end="330:34"><name pos:start="330:5" pos:end="330:24">qemu_fdt_add_subnode</name><argument_list pos:start="330:25" pos:end="330:34">(<argument pos:start="330:26" pos:end="330:28"><expr pos:start="330:26" pos:end="330:28"><name pos:start="330:26" pos:end="330:28">fdt</name></expr></argument>, <argument pos:start="330:31" pos:end="330:33"><expr pos:start="330:31" pos:end="330:33"><name pos:start="330:31" pos:end="330:33">soc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="332:5" pos:end="332:60"><expr pos:start="332:5" pos:end="332:59"><call pos:start="332:5" pos:end="332:59"><name pos:start="332:5" pos:end="332:27">qemu_fdt_setprop_string</name><argument_list pos:start="332:28" pos:end="332:59">(<argument pos:start="332:29" pos:end="332:31"><expr pos:start="332:29" pos:end="332:31"><name pos:start="332:29" pos:end="332:31">fdt</name></expr></argument>, <argument pos:start="332:34" pos:end="332:36"><expr pos:start="332:34" pos:end="332:36"><name pos:start="332:34" pos:end="332:36">soc</name></expr></argument>, <argument pos:start="332:39" pos:end="332:51"><expr pos:start="332:39" pos:end="332:51"><literal type="string" pos:start="332:39" pos:end="332:51">"device_type"</literal></expr></argument>, <argument pos:start="332:54" pos:end="332:58"><expr pos:start="332:54" pos:end="332:58"><literal type="string" pos:start="332:54" pos:end="332:58">"soc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="334:5" pos:end="336:44"><expr pos:start="334:5" pos:end="336:43"><call pos:start="334:5" pos:end="336:43"><name pos:start="334:5" pos:end="334:20">qemu_fdt_setprop</name><argument_list pos:start="334:21" pos:end="336:43">(<argument pos:start="334:22" pos:end="334:24"><expr pos:start="334:22" pos:end="334:24"><name pos:start="334:22" pos:end="334:24">fdt</name></expr></argument>, <argument pos:start="334:27" pos:end="334:29"><expr pos:start="334:27" pos:end="334:29"><name pos:start="334:27" pos:end="334:29">soc</name></expr></argument>, <argument pos:start="334:32" pos:end="334:43"><expr pos:start="334:32" pos:end="334:43"><literal type="string" pos:start="334:32" pos:end="334:43">"compatible"</literal></expr></argument>, <argument pos:start="334:46" pos:end="334:58"><expr pos:start="334:46" pos:end="334:58"><name pos:start="334:46" pos:end="334:58">compatible_sb</name></expr></argument>,

                     <argument pos:start="336:22" pos:end="336:42"><expr pos:start="336:22" pos:end="336:42"><sizeof pos:start="336:22" pos:end="336:42">sizeof<argument_list pos:start="336:28" pos:end="336:42">(<argument pos:start="336:29" pos:end="336:41"><expr pos:start="336:29" pos:end="336:41"><name pos:start="336:29" pos:end="336:41">compatible_sb</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="338:5" pos:end="338:57"><expr pos:start="338:5" pos:end="338:56"><call pos:start="338:5" pos:end="338:56"><name pos:start="338:5" pos:end="338:25">qemu_fdt_setprop_cell</name><argument_list pos:start="338:26" pos:end="338:56">(<argument pos:start="338:27" pos:end="338:29"><expr pos:start="338:27" pos:end="338:29"><name pos:start="338:27" pos:end="338:29">fdt</name></expr></argument>, <argument pos:start="338:32" pos:end="338:34"><expr pos:start="338:32" pos:end="338:34"><name pos:start="338:32" pos:end="338:34">soc</name></expr></argument>, <argument pos:start="338:37" pos:end="338:52"><expr pos:start="338:37" pos:end="338:52"><literal type="string" pos:start="338:37" pos:end="338:52">"#address-cells"</literal></expr></argument>, <argument pos:start="338:55" pos:end="338:55"><expr pos:start="338:55" pos:end="338:55"><literal type="number" pos:start="338:55" pos:end="338:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="340:5" pos:end="340:54"><expr pos:start="340:5" pos:end="340:53"><call pos:start="340:5" pos:end="340:53"><name pos:start="340:5" pos:end="340:25">qemu_fdt_setprop_cell</name><argument_list pos:start="340:26" pos:end="340:53">(<argument pos:start="340:27" pos:end="340:29"><expr pos:start="340:27" pos:end="340:29"><name pos:start="340:27" pos:end="340:29">fdt</name></expr></argument>, <argument pos:start="340:32" pos:end="340:34"><expr pos:start="340:32" pos:end="340:34"><name pos:start="340:32" pos:end="340:34">soc</name></expr></argument>, <argument pos:start="340:37" pos:end="340:49"><expr pos:start="340:37" pos:end="340:49"><literal type="string" pos:start="340:37" pos:end="340:49">"#size-cells"</literal></expr></argument>, <argument pos:start="340:52" pos:end="340:52"><expr pos:start="340:52" pos:end="340:52"><literal type="number" pos:start="340:52" pos:end="340:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="342:5" pos:end="346:49"><expr pos:start="342:5" pos:end="346:48"><call pos:start="342:5" pos:end="346:48"><name pos:start="342:5" pos:end="342:26">qemu_fdt_setprop_cells</name><argument_list pos:start="342:27" pos:end="346:48">(<argument pos:start="342:28" pos:end="342:30"><expr pos:start="342:28" pos:end="342:30"><name pos:start="342:28" pos:end="342:30">fdt</name></expr></argument>, <argument pos:start="342:33" pos:end="342:35"><expr pos:start="342:33" pos:end="342:35"><name pos:start="342:33" pos:end="342:35">soc</name></expr></argument>, <argument pos:start="342:38" pos:end="342:45"><expr pos:start="342:38" pos:end="342:45"><literal type="string" pos:start="342:38" pos:end="342:45">"ranges"</literal></expr></argument>, <argument pos:start="342:48" pos:end="342:50"><expr pos:start="342:48" pos:end="342:50"><literal type="number" pos:start="342:48" pos:end="342:50">0x0</literal></expr></argument>,

                           <argument pos:start="344:28" pos:end="344:53"><expr pos:start="344:28" pos:end="344:53"><name pos:start="344:28" pos:end="344:47"><name pos:start="344:28" pos:end="344:33">params</name><operator pos:start="344:34" pos:end="344:35">-&gt;</operator><name pos:start="344:36" pos:end="344:47">ccsrbar_base</name></name> <operator pos:start="344:49" pos:end="344:50">&gt;&gt;</operator> <literal type="number" pos:start="344:52" pos:end="344:53">32</literal></expr></argument>, <argument pos:start="344:56" pos:end="344:75"><expr pos:start="344:56" pos:end="344:75"><name pos:start="344:56" pos:end="344:75"><name pos:start="344:56" pos:end="344:61">params</name><operator pos:start="344:62" pos:end="344:63">-&gt;</operator><name pos:start="344:64" pos:end="344:75">ccsrbar_base</name></name></expr></argument>,

                           <argument pos:start="346:28" pos:end="346:47"><expr pos:start="346:28" pos:end="346:47"><name pos:start="346:28" pos:end="346:47">MPC8544_CCSRBAR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="348:5" pos:end="348:47">/* XXX should contain a reasonable value */</comment>

    <expr_stmt pos:start="350:5" pos:end="350:56"><expr pos:start="350:5" pos:end="350:55"><call pos:start="350:5" pos:end="350:55"><name pos:start="350:5" pos:end="350:25">qemu_fdt_setprop_cell</name><argument_list pos:start="350:26" pos:end="350:55">(<argument pos:start="350:27" pos:end="350:29"><expr pos:start="350:27" pos:end="350:29"><name pos:start="350:27" pos:end="350:29">fdt</name></expr></argument>, <argument pos:start="350:32" pos:end="350:34"><expr pos:start="350:32" pos:end="350:34"><name pos:start="350:32" pos:end="350:34">soc</name></expr></argument>, <argument pos:start="350:37" pos:end="350:51"><expr pos:start="350:37" pos:end="350:51"><literal type="string" pos:start="350:37" pos:end="350:51">"bus-frequency"</literal></expr></argument>, <argument pos:start="350:54" pos:end="350:54"><expr pos:start="350:54" pos:end="350:54"><literal type="number" pos:start="350:54" pos:end="350:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="354:5" pos:end="354:79"><expr pos:start="354:5" pos:end="354:78"><call pos:start="354:5" pos:end="354:78"><name pos:start="354:5" pos:end="354:12">snprintf</name><argument_list pos:start="354:13" pos:end="354:78">(<argument pos:start="354:14" pos:end="354:17"><expr pos:start="354:14" pos:end="354:17"><name pos:start="354:14" pos:end="354:17">mpic</name></expr></argument>, <argument pos:start="354:20" pos:end="354:31"><expr pos:start="354:20" pos:end="354:31"><sizeof pos:start="354:20" pos:end="354:31">sizeof<argument_list pos:start="354:26" pos:end="354:31">(<argument pos:start="354:27" pos:end="354:30"><expr pos:start="354:27" pos:end="354:30"><name pos:start="354:27" pos:end="354:30">mpic</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="354:34" pos:end="354:46"><expr pos:start="354:34" pos:end="354:46"><literal type="string" pos:start="354:34" pos:end="354:46">"%s/pic@%llx"</literal></expr></argument>, <argument pos:start="354:49" pos:end="354:51"><expr pos:start="354:49" pos:end="354:51"><name pos:start="354:49" pos:end="354:51">soc</name></expr></argument>, <argument pos:start="354:54" pos:end="354:77"><expr pos:start="354:54" pos:end="354:77"><name pos:start="354:54" pos:end="354:77">MPC8544_MPIC_REGS_OFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="356:5" pos:end="356:36"><expr pos:start="356:5" pos:end="356:35"><call pos:start="356:5" pos:end="356:35"><name pos:start="356:5" pos:end="356:24">qemu_fdt_add_subnode</name><argument_list pos:start="356:25" pos:end="356:35">(<argument pos:start="356:26" pos:end="356:28"><expr pos:start="356:26" pos:end="356:28"><name pos:start="356:26" pos:end="356:28">fdt</name></expr></argument>, <argument pos:start="356:31" pos:end="356:34"><expr pos:start="356:31" pos:end="356:34"><name pos:start="356:31" pos:end="356:34">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="358:5" pos:end="358:66"><expr pos:start="358:5" pos:end="358:65"><call pos:start="358:5" pos:end="358:65"><name pos:start="358:5" pos:end="358:27">qemu_fdt_setprop_string</name><argument_list pos:start="358:28" pos:end="358:65">(<argument pos:start="358:29" pos:end="358:31"><expr pos:start="358:29" pos:end="358:31"><name pos:start="358:29" pos:end="358:31">fdt</name></expr></argument>, <argument pos:start="358:34" pos:end="358:37"><expr pos:start="358:34" pos:end="358:37"><name pos:start="358:34" pos:end="358:37">mpic</name></expr></argument>, <argument pos:start="358:40" pos:end="358:52"><expr pos:start="358:40" pos:end="358:52"><literal type="string" pos:start="358:40" pos:end="358:52">"device_type"</literal></expr></argument>, <argument pos:start="358:55" pos:end="358:64"><expr pos:start="358:55" pos:end="358:64"><literal type="string" pos:start="358:55" pos:end="358:64">"open-pic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="360:5" pos:end="360:65"><expr pos:start="360:5" pos:end="360:64"><call pos:start="360:5" pos:end="360:64"><name pos:start="360:5" pos:end="360:27">qemu_fdt_setprop_string</name><argument_list pos:start="360:28" pos:end="360:64">(<argument pos:start="360:29" pos:end="360:31"><expr pos:start="360:29" pos:end="360:31"><name pos:start="360:29" pos:end="360:31">fdt</name></expr></argument>, <argument pos:start="360:34" pos:end="360:37"><expr pos:start="360:34" pos:end="360:37"><name pos:start="360:34" pos:end="360:37">mpic</name></expr></argument>, <argument pos:start="360:40" pos:end="360:51"><expr pos:start="360:40" pos:end="360:51"><literal type="string" pos:start="360:40" pos:end="360:51">"compatible"</literal></expr></argument>, <argument pos:start="360:54" pos:end="360:63"><expr pos:start="360:54" pos:end="360:63"><literal type="string" pos:start="360:54" pos:end="360:63">"fsl,mpic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="362:5" pos:end="364:36"><expr pos:start="362:5" pos:end="364:35"><call pos:start="362:5" pos:end="364:35"><name pos:start="362:5" pos:end="362:26">qemu_fdt_setprop_cells</name><argument_list pos:start="362:27" pos:end="364:35">(<argument pos:start="362:28" pos:end="362:30"><expr pos:start="362:28" pos:end="362:30"><name pos:start="362:28" pos:end="362:30">fdt</name></expr></argument>, <argument pos:start="362:33" pos:end="362:36"><expr pos:start="362:33" pos:end="362:36"><name pos:start="362:33" pos:end="362:36">mpic</name></expr></argument>, <argument pos:start="362:39" pos:end="362:43"><expr pos:start="362:39" pos:end="362:43"><literal type="string" pos:start="362:39" pos:end="362:43">"reg"</literal></expr></argument>, <argument pos:start="362:46" pos:end="362:69"><expr pos:start="362:46" pos:end="362:69"><name pos:start="362:46" pos:end="362:69">MPC8544_MPIC_REGS_OFFSET</name></expr></argument>,

                           <argument pos:start="364:28" pos:end="364:34"><expr pos:start="364:28" pos:end="364:34"><literal type="number" pos:start="364:28" pos:end="364:34">0x40000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="366:5" pos:end="366:58"><expr pos:start="366:5" pos:end="366:57"><call pos:start="366:5" pos:end="366:57"><name pos:start="366:5" pos:end="366:25">qemu_fdt_setprop_cell</name><argument_list pos:start="366:26" pos:end="366:57">(<argument pos:start="366:27" pos:end="366:29"><expr pos:start="366:27" pos:end="366:29"><name pos:start="366:27" pos:end="366:29">fdt</name></expr></argument>, <argument pos:start="366:32" pos:end="366:35"><expr pos:start="366:32" pos:end="366:35"><name pos:start="366:32" pos:end="366:35">mpic</name></expr></argument>, <argument pos:start="366:38" pos:end="366:53"><expr pos:start="366:38" pos:end="366:53"><literal type="string" pos:start="366:38" pos:end="366:53">"#address-cells"</literal></expr></argument>, <argument pos:start="366:56" pos:end="366:56"><expr pos:start="366:56" pos:end="366:56"><literal type="number" pos:start="366:56" pos:end="366:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="368:5" pos:end="368:60"><expr pos:start="368:5" pos:end="368:59"><call pos:start="368:5" pos:end="368:59"><name pos:start="368:5" pos:end="368:25">qemu_fdt_setprop_cell</name><argument_list pos:start="368:26" pos:end="368:59">(<argument pos:start="368:27" pos:end="368:29"><expr pos:start="368:27" pos:end="368:29"><name pos:start="368:27" pos:end="368:29">fdt</name></expr></argument>, <argument pos:start="368:32" pos:end="368:35"><expr pos:start="368:32" pos:end="368:35"><name pos:start="368:32" pos:end="368:35">mpic</name></expr></argument>, <argument pos:start="368:38" pos:end="368:55"><expr pos:start="368:38" pos:end="368:55"><literal type="string" pos:start="368:38" pos:end="368:55">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="368:58" pos:end="368:58"><expr pos:start="368:58" pos:end="368:58"><literal type="number" pos:start="368:58" pos:end="368:58">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="370:5" pos:end="370:42"><expr pos:start="370:5" pos:end="370:41"><name pos:start="370:5" pos:end="370:11">mpic_ph</name> <operator pos:start="370:13" pos:end="370:13">=</operator> <call pos:start="370:15" pos:end="370:41"><name pos:start="370:15" pos:end="370:36">qemu_fdt_alloc_phandle</name><argument_list pos:start="370:37" pos:end="370:41">(<argument pos:start="370:38" pos:end="370:40"><expr pos:start="370:38" pos:end="370:40"><name pos:start="370:38" pos:end="370:40">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="372:5" pos:end="372:57"><expr pos:start="372:5" pos:end="372:56"><call pos:start="372:5" pos:end="372:56"><name pos:start="372:5" pos:end="372:25">qemu_fdt_setprop_cell</name><argument_list pos:start="372:26" pos:end="372:56">(<argument pos:start="372:27" pos:end="372:29"><expr pos:start="372:27" pos:end="372:29"><name pos:start="372:27" pos:end="372:29">fdt</name></expr></argument>, <argument pos:start="372:32" pos:end="372:35"><expr pos:start="372:32" pos:end="372:35"><name pos:start="372:32" pos:end="372:35">mpic</name></expr></argument>, <argument pos:start="372:38" pos:end="372:46"><expr pos:start="372:38" pos:end="372:46"><literal type="string" pos:start="372:38" pos:end="372:46">"phandle"</literal></expr></argument>, <argument pos:start="372:49" pos:end="372:55"><expr pos:start="372:49" pos:end="372:55"><name pos:start="372:49" pos:end="372:55">mpic_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="374:5" pos:end="374:63"><expr pos:start="374:5" pos:end="374:62"><call pos:start="374:5" pos:end="374:62"><name pos:start="374:5" pos:end="374:25">qemu_fdt_setprop_cell</name><argument_list pos:start="374:26" pos:end="374:62">(<argument pos:start="374:27" pos:end="374:29"><expr pos:start="374:27" pos:end="374:29"><name pos:start="374:27" pos:end="374:29">fdt</name></expr></argument>, <argument pos:start="374:32" pos:end="374:35"><expr pos:start="374:32" pos:end="374:35"><name pos:start="374:32" pos:end="374:35">mpic</name></expr></argument>, <argument pos:start="374:38" pos:end="374:52"><expr pos:start="374:38" pos:end="374:52"><literal type="string" pos:start="374:38" pos:end="374:52">"linux,phandle"</literal></expr></argument>, <argument pos:start="374:55" pos:end="374:61"><expr pos:start="374:55" pos:end="374:61"><name pos:start="374:55" pos:end="374:61">mpic_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="376:5" pos:end="376:65"><expr pos:start="376:5" pos:end="376:64"><call pos:start="376:5" pos:end="376:64"><name pos:start="376:5" pos:end="376:20">qemu_fdt_setprop</name><argument_list pos:start="376:21" pos:end="376:64">(<argument pos:start="376:22" pos:end="376:24"><expr pos:start="376:22" pos:end="376:24"><name pos:start="376:22" pos:end="376:24">fdt</name></expr></argument>, <argument pos:start="376:27" pos:end="376:30"><expr pos:start="376:27" pos:end="376:30"><name pos:start="376:27" pos:end="376:30">mpic</name></expr></argument>, <argument pos:start="376:33" pos:end="376:54"><expr pos:start="376:33" pos:end="376:54"><literal type="string" pos:start="376:33" pos:end="376:54">"interrupt-controller"</literal></expr></argument>, <argument pos:start="376:57" pos:end="376:60"><expr pos:start="376:57" pos:end="376:60"><name pos:start="376:57" pos:end="376:60">NULL</name></expr></argument>, <argument pos:start="376:63" pos:end="376:63"><expr pos:start="376:63" pos:end="376:63"><literal type="number" pos:start="376:63" pos:end="376:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="380:5" pos:end="388:7">/*

     * We have to generate ser1 first, because Linux takes the first

     * device it finds in the dt as serial output device. And we generate

     * devices in reverse order to the dt.

     */</comment>

    <if_stmt pos:start="390:5" pos:end="396:5"><if pos:start="390:5" pos:end="396:5">if <condition pos:start="390:8" pos:end="390:22">(<expr pos:start="390:9" pos:end="390:21"><name pos:start="390:9" pos:end="390:21"><name pos:start="390:9" pos:end="390:18">serial_hds</name><index pos:start="390:19" pos:end="390:21">[<expr pos:start="390:20" pos:end="390:20"><literal type="number" pos:start="390:20" pos:end="390:20">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="390:24" pos:end="396:5">{<block_content pos:start="392:9" pos:end="394:57">

        <expr_stmt pos:start="392:9" pos:end="394:57"><expr pos:start="392:9" pos:end="394:56"><call pos:start="392:9" pos:end="394:56"><name pos:start="392:9" pos:end="392:24">dt_serial_create</name><argument_list pos:start="392:25" pos:end="394:56">(<argument pos:start="392:26" pos:end="392:28"><expr pos:start="392:26" pos:end="392:28"><name pos:start="392:26" pos:end="392:28">fdt</name></expr></argument>, <argument pos:start="392:31" pos:end="392:57"><expr pos:start="392:31" pos:end="392:57"><name pos:start="392:31" pos:end="392:57">MPC8544_SERIAL1_REGS_OFFSET</name></expr></argument>,

                         <argument pos:start="394:26" pos:end="394:28"><expr pos:start="394:26" pos:end="394:28"><name pos:start="394:26" pos:end="394:28">soc</name></expr></argument>, <argument pos:start="394:31" pos:end="394:34"><expr pos:start="394:31" pos:end="394:34"><name pos:start="394:31" pos:end="394:34">mpic</name></expr></argument>, <argument pos:start="394:37" pos:end="394:45"><expr pos:start="394:37" pos:end="394:45"><literal type="string" pos:start="394:37" pos:end="394:45">"serial1"</literal></expr></argument>, <argument pos:start="394:48" pos:end="394:48"><expr pos:start="394:48" pos:end="394:48"><literal type="number" pos:start="394:48" pos:end="394:48">1</literal></expr></argument>, <argument pos:start="394:51" pos:end="394:55"><expr pos:start="394:51" pos:end="394:55"><name pos:start="394:51" pos:end="394:55">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="400:5" pos:end="406:5"><if pos:start="400:5" pos:end="406:5">if <condition pos:start="400:8" pos:end="400:22">(<expr pos:start="400:9" pos:end="400:21"><name pos:start="400:9" pos:end="400:21"><name pos:start="400:9" pos:end="400:18">serial_hds</name><index pos:start="400:19" pos:end="400:21">[<expr pos:start="400:20" pos:end="400:20"><literal type="number" pos:start="400:20" pos:end="400:20">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="400:24" pos:end="406:5">{<block_content pos:start="402:9" pos:end="404:56">

        <expr_stmt pos:start="402:9" pos:end="404:56"><expr pos:start="402:9" pos:end="404:55"><call pos:start="402:9" pos:end="404:55"><name pos:start="402:9" pos:end="402:24">dt_serial_create</name><argument_list pos:start="402:25" pos:end="404:55">(<argument pos:start="402:26" pos:end="402:28"><expr pos:start="402:26" pos:end="402:28"><name pos:start="402:26" pos:end="402:28">fdt</name></expr></argument>, <argument pos:start="402:31" pos:end="402:57"><expr pos:start="402:31" pos:end="402:57"><name pos:start="402:31" pos:end="402:57">MPC8544_SERIAL0_REGS_OFFSET</name></expr></argument>,

                         <argument pos:start="404:26" pos:end="404:28"><expr pos:start="404:26" pos:end="404:28"><name pos:start="404:26" pos:end="404:28">soc</name></expr></argument>, <argument pos:start="404:31" pos:end="404:34"><expr pos:start="404:31" pos:end="404:34"><name pos:start="404:31" pos:end="404:34">mpic</name></expr></argument>, <argument pos:start="404:37" pos:end="404:45"><expr pos:start="404:37" pos:end="404:45"><literal type="string" pos:start="404:37" pos:end="404:45">"serial0"</literal></expr></argument>, <argument pos:start="404:48" pos:end="404:48"><expr pos:start="404:48" pos:end="404:48"><literal type="number" pos:start="404:48" pos:end="404:48">0</literal></expr></argument>, <argument pos:start="404:51" pos:end="404:54"><expr pos:start="404:51" pos:end="404:54"><name pos:start="404:51" pos:end="404:54">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="410:5" pos:end="412:34"><expr pos:start="410:5" pos:end="412:33"><call pos:start="410:5" pos:end="412:33"><name pos:start="410:5" pos:end="410:12">snprintf</name><argument_list pos:start="410:13" pos:end="412:33">(<argument pos:start="410:14" pos:end="410:18"><expr pos:start="410:14" pos:end="410:18"><name pos:start="410:14" pos:end="410:18">gutil</name></expr></argument>, <argument pos:start="410:21" pos:end="410:33"><expr pos:start="410:21" pos:end="410:33"><sizeof pos:start="410:21" pos:end="410:33">sizeof<argument_list pos:start="410:27" pos:end="410:33">(<argument pos:start="410:28" pos:end="410:32"><expr pos:start="410:28" pos:end="410:32"><name pos:start="410:28" pos:end="410:32">gutil</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="410:36" pos:end="410:61"><expr pos:start="410:36" pos:end="410:61"><literal type="string" pos:start="410:36" pos:end="410:61">"%s/global-utilities@%llx"</literal></expr></argument>, <argument pos:start="410:64" pos:end="410:66"><expr pos:start="410:64" pos:end="410:66"><name pos:start="410:64" pos:end="410:66">soc</name></expr></argument>,

             <argument pos:start="412:14" pos:end="412:32"><expr pos:start="412:14" pos:end="412:32"><name pos:start="412:14" pos:end="412:32">MPC8544_UTIL_OFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="414:5" pos:end="414:37"><expr pos:start="414:5" pos:end="414:36"><call pos:start="414:5" pos:end="414:36"><name pos:start="414:5" pos:end="414:24">qemu_fdt_add_subnode</name><argument_list pos:start="414:25" pos:end="414:36">(<argument pos:start="414:26" pos:end="414:28"><expr pos:start="414:26" pos:end="414:28"><name pos:start="414:26" pos:end="414:28">fdt</name></expr></argument>, <argument pos:start="414:31" pos:end="414:35"><expr pos:start="414:31" pos:end="414:35"><name pos:start="414:31" pos:end="414:35">gutil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="416:5" pos:end="416:74"><expr pos:start="416:5" pos:end="416:73"><call pos:start="416:5" pos:end="416:73"><name pos:start="416:5" pos:end="416:27">qemu_fdt_setprop_string</name><argument_list pos:start="416:28" pos:end="416:73">(<argument pos:start="416:29" pos:end="416:31"><expr pos:start="416:29" pos:end="416:31"><name pos:start="416:29" pos:end="416:31">fdt</name></expr></argument>, <argument pos:start="416:34" pos:end="416:38"><expr pos:start="416:34" pos:end="416:38"><name pos:start="416:34" pos:end="416:38">gutil</name></expr></argument>, <argument pos:start="416:41" pos:end="416:52"><expr pos:start="416:41" pos:end="416:52"><literal type="string" pos:start="416:41" pos:end="416:52">"compatible"</literal></expr></argument>, <argument pos:start="416:55" pos:end="416:72"><expr pos:start="416:55" pos:end="416:72"><literal type="string" pos:start="416:55" pos:end="416:72">"fsl,mpc8544-guts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="418:5" pos:end="418:75"><expr pos:start="418:5" pos:end="418:74"><call pos:start="418:5" pos:end="418:74"><name pos:start="418:5" pos:end="418:26">qemu_fdt_setprop_cells</name><argument_list pos:start="418:27" pos:end="418:74">(<argument pos:start="418:28" pos:end="418:30"><expr pos:start="418:28" pos:end="418:30"><name pos:start="418:28" pos:end="418:30">fdt</name></expr></argument>, <argument pos:start="418:33" pos:end="418:37"><expr pos:start="418:33" pos:end="418:37"><name pos:start="418:33" pos:end="418:37">gutil</name></expr></argument>, <argument pos:start="418:40" pos:end="418:44"><expr pos:start="418:40" pos:end="418:44"><literal type="string" pos:start="418:40" pos:end="418:44">"reg"</literal></expr></argument>, <argument pos:start="418:47" pos:end="418:65"><expr pos:start="418:47" pos:end="418:65"><name pos:start="418:47" pos:end="418:65">MPC8544_UTIL_OFFSET</name></expr></argument>, <argument pos:start="418:68" pos:end="418:73"><expr pos:start="418:68" pos:end="418:73"><literal type="number" pos:start="418:68" pos:end="418:73">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="420:5" pos:end="420:59"><expr pos:start="420:5" pos:end="420:58"><call pos:start="420:5" pos:end="420:58"><name pos:start="420:5" pos:end="420:20">qemu_fdt_setprop</name><argument_list pos:start="420:21" pos:end="420:58">(<argument pos:start="420:22" pos:end="420:24"><expr pos:start="420:22" pos:end="420:24"><name pos:start="420:22" pos:end="420:24">fdt</name></expr></argument>, <argument pos:start="420:27" pos:end="420:31"><expr pos:start="420:27" pos:end="420:31"><name pos:start="420:27" pos:end="420:31">gutil</name></expr></argument>, <argument pos:start="420:34" pos:end="420:48"><expr pos:start="420:34" pos:end="420:48"><literal type="string" pos:start="420:34" pos:end="420:48">"fsl,has-rstcr"</literal></expr></argument>, <argument pos:start="420:51" pos:end="420:54"><expr pos:start="420:51" pos:end="420:54"><name pos:start="420:51" pos:end="420:54">NULL</name></expr></argument>, <argument pos:start="420:57" pos:end="420:57"><expr pos:start="420:57" pos:end="420:57"><literal type="number" pos:start="420:57" pos:end="420:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="424:5" pos:end="424:77"><expr pos:start="424:5" pos:end="424:76"><call pos:start="424:5" pos:end="424:76"><name pos:start="424:5" pos:end="424:12">snprintf</name><argument_list pos:start="424:13" pos:end="424:76">(<argument pos:start="424:14" pos:end="424:16"><expr pos:start="424:14" pos:end="424:16"><name pos:start="424:14" pos:end="424:16">msi</name></expr></argument>, <argument pos:start="424:19" pos:end="424:29"><expr pos:start="424:19" pos:end="424:29"><sizeof pos:start="424:19" pos:end="424:29">sizeof<argument_list pos:start="424:25" pos:end="424:29">(<argument pos:start="424:26" pos:end="424:28"><expr pos:start="424:26" pos:end="424:28"><name pos:start="424:26" pos:end="424:28">msi</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="424:32" pos:end="424:45"><expr pos:start="424:32" pos:end="424:45"><literal type="string" pos:start="424:32" pos:end="424:45">"/%s/msi@%llx"</literal></expr></argument>, <argument pos:start="424:48" pos:end="424:50"><expr pos:start="424:48" pos:end="424:50"><name pos:start="424:48" pos:end="424:50">soc</name></expr></argument>, <argument pos:start="424:53" pos:end="424:75"><expr pos:start="424:53" pos:end="424:75"><name pos:start="424:53" pos:end="424:75">MPC8544_MSI_REGS_OFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="426:5" pos:end="426:35"><expr pos:start="426:5" pos:end="426:34"><call pos:start="426:5" pos:end="426:34"><name pos:start="426:5" pos:end="426:24">qemu_fdt_add_subnode</name><argument_list pos:start="426:25" pos:end="426:34">(<argument pos:start="426:26" pos:end="426:28"><expr pos:start="426:26" pos:end="426:28"><name pos:start="426:26" pos:end="426:28">fdt</name></expr></argument>, <argument pos:start="426:31" pos:end="426:33"><expr pos:start="426:31" pos:end="426:33"><name pos:start="426:31" pos:end="426:33">msi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="428:5" pos:end="428:68"><expr pos:start="428:5" pos:end="428:67"><call pos:start="428:5" pos:end="428:67"><name pos:start="428:5" pos:end="428:27">qemu_fdt_setprop_string</name><argument_list pos:start="428:28" pos:end="428:67">(<argument pos:start="428:29" pos:end="428:31"><expr pos:start="428:29" pos:end="428:31"><name pos:start="428:29" pos:end="428:31">fdt</name></expr></argument>, <argument pos:start="428:34" pos:end="428:36"><expr pos:start="428:34" pos:end="428:36"><name pos:start="428:34" pos:end="428:36">msi</name></expr></argument>, <argument pos:start="428:39" pos:end="428:50"><expr pos:start="428:39" pos:end="428:50"><literal type="string" pos:start="428:39" pos:end="428:50">"compatible"</literal></expr></argument>, <argument pos:start="428:53" pos:end="428:66"><expr pos:start="428:53" pos:end="428:66"><literal type="string" pos:start="428:53" pos:end="428:66">"fsl,mpic-msi"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="430:5" pos:end="430:76"><expr pos:start="430:5" pos:end="430:75"><call pos:start="430:5" pos:end="430:75"><name pos:start="430:5" pos:end="430:26">qemu_fdt_setprop_cells</name><argument_list pos:start="430:27" pos:end="430:75">(<argument pos:start="430:28" pos:end="430:30"><expr pos:start="430:28" pos:end="430:30"><name pos:start="430:28" pos:end="430:30">fdt</name></expr></argument>, <argument pos:start="430:33" pos:end="430:35"><expr pos:start="430:33" pos:end="430:35"><name pos:start="430:33" pos:end="430:35">msi</name></expr></argument>, <argument pos:start="430:38" pos:end="430:42"><expr pos:start="430:38" pos:end="430:42"><literal type="string" pos:start="430:38" pos:end="430:42">"reg"</literal></expr></argument>, <argument pos:start="430:45" pos:end="430:67"><expr pos:start="430:45" pos:end="430:67"><name pos:start="430:45" pos:end="430:67">MPC8544_MSI_REGS_OFFSET</name></expr></argument>, <argument pos:start="430:70" pos:end="430:74"><expr pos:start="430:70" pos:end="430:74"><literal type="number" pos:start="430:70" pos:end="430:74">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="432:5" pos:end="432:41"><expr pos:start="432:5" pos:end="432:40"><name pos:start="432:5" pos:end="432:10">msi_ph</name> <operator pos:start="432:12" pos:end="432:12">=</operator> <call pos:start="432:14" pos:end="432:40"><name pos:start="432:14" pos:end="432:35">qemu_fdt_alloc_phandle</name><argument_list pos:start="432:36" pos:end="432:40">(<argument pos:start="432:37" pos:end="432:39"><expr pos:start="432:37" pos:end="432:39"><name pos:start="432:37" pos:end="432:39">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="434:5" pos:end="434:73"><expr pos:start="434:5" pos:end="434:72"><call pos:start="434:5" pos:end="434:72"><name pos:start="434:5" pos:end="434:26">qemu_fdt_setprop_cells</name><argument_list pos:start="434:27" pos:end="434:72">(<argument pos:start="434:28" pos:end="434:30"><expr pos:start="434:28" pos:end="434:30"><name pos:start="434:28" pos:end="434:30">fdt</name></expr></argument>, <argument pos:start="434:33" pos:end="434:35"><expr pos:start="434:33" pos:end="434:35"><name pos:start="434:33" pos:end="434:35">msi</name></expr></argument>, <argument pos:start="434:38" pos:end="434:59"><expr pos:start="434:38" pos:end="434:59"><literal type="string" pos:start="434:38" pos:end="434:59">"msi-available-ranges"</literal></expr></argument>, <argument pos:start="434:62" pos:end="434:64"><expr pos:start="434:62" pos:end="434:64"><literal type="number" pos:start="434:62" pos:end="434:64">0x0</literal></expr></argument>, <argument pos:start="434:67" pos:end="434:71"><expr pos:start="434:67" pos:end="434:71"><literal type="number" pos:start="434:67" pos:end="434:71">0x100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="436:5" pos:end="436:65"><expr pos:start="436:5" pos:end="436:64"><call pos:start="436:5" pos:end="436:64"><name pos:start="436:5" pos:end="436:28">qemu_fdt_setprop_phandle</name><argument_list pos:start="436:29" pos:end="436:64">(<argument pos:start="436:30" pos:end="436:32"><expr pos:start="436:30" pos:end="436:32"><name pos:start="436:30" pos:end="436:32">fdt</name></expr></argument>, <argument pos:start="436:35" pos:end="436:37"><expr pos:start="436:35" pos:end="436:37"><name pos:start="436:35" pos:end="436:37">msi</name></expr></argument>, <argument pos:start="436:40" pos:end="436:57"><expr pos:start="436:40" pos:end="436:57"><literal type="string" pos:start="436:40" pos:end="436:57">"interrupt-parent"</literal></expr></argument>, <argument pos:start="436:60" pos:end="436:63"><expr pos:start="436:60" pos:end="436:63"><name pos:start="436:60" pos:end="436:63">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="438:5" pos:end="454:19"><expr pos:start="438:5" pos:end="454:18"><call pos:start="438:5" pos:end="454:18"><name pos:start="438:5" pos:end="438:26">qemu_fdt_setprop_cells</name><argument_list pos:start="438:27" pos:end="454:18">(<argument pos:start="438:28" pos:end="438:30"><expr pos:start="438:28" pos:end="438:30"><name pos:start="438:28" pos:end="438:30">fdt</name></expr></argument>, <argument pos:start="438:33" pos:end="438:35"><expr pos:start="438:33" pos:end="438:35"><name pos:start="438:33" pos:end="438:35">msi</name></expr></argument>, <argument pos:start="438:38" pos:end="438:49"><expr pos:start="438:38" pos:end="438:49"><literal type="string" pos:start="438:38" pos:end="438:49">"interrupts"</literal></expr></argument>,

        <argument pos:start="440:9" pos:end="440:12"><expr pos:start="440:9" pos:end="440:12"><literal type="number" pos:start="440:9" pos:end="440:12">0xe0</literal></expr></argument>, <argument pos:start="440:15" pos:end="440:17"><expr pos:start="440:15" pos:end="440:17"><literal type="number" pos:start="440:15" pos:end="440:17">0x0</literal></expr></argument>,

        <argument pos:start="442:9" pos:end="442:12"><expr pos:start="442:9" pos:end="442:12"><literal type="number" pos:start="442:9" pos:end="442:12">0xe1</literal></expr></argument>, <argument pos:start="442:15" pos:end="442:17"><expr pos:start="442:15" pos:end="442:17"><literal type="number" pos:start="442:15" pos:end="442:17">0x0</literal></expr></argument>,

        <argument pos:start="444:9" pos:end="444:12"><expr pos:start="444:9" pos:end="444:12"><literal type="number" pos:start="444:9" pos:end="444:12">0xe2</literal></expr></argument>, <argument pos:start="444:15" pos:end="444:17"><expr pos:start="444:15" pos:end="444:17"><literal type="number" pos:start="444:15" pos:end="444:17">0x0</literal></expr></argument>,

        <argument pos:start="446:9" pos:end="446:12"><expr pos:start="446:9" pos:end="446:12"><literal type="number" pos:start="446:9" pos:end="446:12">0xe3</literal></expr></argument>, <argument pos:start="446:15" pos:end="446:17"><expr pos:start="446:15" pos:end="446:17"><literal type="number" pos:start="446:15" pos:end="446:17">0x0</literal></expr></argument>,

        <argument pos:start="448:9" pos:end="448:12"><expr pos:start="448:9" pos:end="448:12"><literal type="number" pos:start="448:9" pos:end="448:12">0xe4</literal></expr></argument>, <argument pos:start="448:15" pos:end="448:17"><expr pos:start="448:15" pos:end="448:17"><literal type="number" pos:start="448:15" pos:end="448:17">0x0</literal></expr></argument>,

        <argument pos:start="450:9" pos:end="450:12"><expr pos:start="450:9" pos:end="450:12"><literal type="number" pos:start="450:9" pos:end="450:12">0xe5</literal></expr></argument>, <argument pos:start="450:15" pos:end="450:17"><expr pos:start="450:15" pos:end="450:17"><literal type="number" pos:start="450:15" pos:end="450:17">0x0</literal></expr></argument>,

        <argument pos:start="452:9" pos:end="452:12"><expr pos:start="452:9" pos:end="452:12"><literal type="number" pos:start="452:9" pos:end="452:12">0xe6</literal></expr></argument>, <argument pos:start="452:15" pos:end="452:17"><expr pos:start="452:15" pos:end="452:17"><literal type="number" pos:start="452:15" pos:end="452:17">0x0</literal></expr></argument>,

        <argument pos:start="454:9" pos:end="454:12"><expr pos:start="454:9" pos:end="454:12"><literal type="number" pos:start="454:9" pos:end="454:12">0xe7</literal></expr></argument>, <argument pos:start="454:15" pos:end="454:17"><expr pos:start="454:15" pos:end="454:17"><literal type="number" pos:start="454:15" pos:end="454:17">0x0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="456:5" pos:end="456:55"><expr pos:start="456:5" pos:end="456:54"><call pos:start="456:5" pos:end="456:54"><name pos:start="456:5" pos:end="456:25">qemu_fdt_setprop_cell</name><argument_list pos:start="456:26" pos:end="456:54">(<argument pos:start="456:27" pos:end="456:29"><expr pos:start="456:27" pos:end="456:29"><name pos:start="456:27" pos:end="456:29">fdt</name></expr></argument>, <argument pos:start="456:32" pos:end="456:34"><expr pos:start="456:32" pos:end="456:34"><name pos:start="456:32" pos:end="456:34">msi</name></expr></argument>, <argument pos:start="456:37" pos:end="456:45"><expr pos:start="456:37" pos:end="456:45"><literal type="string" pos:start="456:37" pos:end="456:45">"phandle"</literal></expr></argument>, <argument pos:start="456:48" pos:end="456:53"><expr pos:start="456:48" pos:end="456:53"><name pos:start="456:48" pos:end="456:53">msi_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="458:5" pos:end="458:61"><expr pos:start="458:5" pos:end="458:60"><call pos:start="458:5" pos:end="458:60"><name pos:start="458:5" pos:end="458:25">qemu_fdt_setprop_cell</name><argument_list pos:start="458:26" pos:end="458:60">(<argument pos:start="458:27" pos:end="458:29"><expr pos:start="458:27" pos:end="458:29"><name pos:start="458:27" pos:end="458:29">fdt</name></expr></argument>, <argument pos:start="458:32" pos:end="458:34"><expr pos:start="458:32" pos:end="458:34"><name pos:start="458:32" pos:end="458:34">msi</name></expr></argument>, <argument pos:start="458:37" pos:end="458:51"><expr pos:start="458:37" pos:end="458:51"><literal type="string" pos:start="458:37" pos:end="458:51">"linux,phandle"</literal></expr></argument>, <argument pos:start="458:54" pos:end="458:59"><expr pos:start="458:54" pos:end="458:59"><name pos:start="458:54" pos:end="458:59">msi_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="462:5" pos:end="464:61"><expr pos:start="462:5" pos:end="464:60"><call pos:start="462:5" pos:end="464:60"><name pos:start="462:5" pos:end="462:12">snprintf</name><argument_list pos:start="462:13" pos:end="464:60">(<argument pos:start="462:14" pos:end="462:16"><expr pos:start="462:14" pos:end="462:16"><name pos:start="462:14" pos:end="462:16">pci</name></expr></argument>, <argument pos:start="462:19" pos:end="462:29"><expr pos:start="462:19" pos:end="462:29"><sizeof pos:start="462:19" pos:end="462:29">sizeof<argument_list pos:start="462:25" pos:end="462:29">(<argument pos:start="462:26" pos:end="462:28"><expr pos:start="462:26" pos:end="462:28"><name pos:start="462:26" pos:end="462:28">pci</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="462:32" pos:end="462:42"><expr pos:start="462:32" pos:end="462:42"><literal type="string" pos:start="462:32" pos:end="462:42">"/pci@%llx"</literal></expr></argument>,

             <argument pos:start="464:14" pos:end="464:59"><expr pos:start="464:14" pos:end="464:59"><name pos:start="464:14" pos:end="464:33"><name pos:start="464:14" pos:end="464:19">params</name><operator pos:start="464:20" pos:end="464:21">-&gt;</operator><name pos:start="464:22" pos:end="464:33">ccsrbar_base</name></name> <operator pos:start="464:35" pos:end="464:35">+</operator> <name pos:start="464:37" pos:end="464:59">MPC8544_PCI_REGS_OFFSET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="466:5" pos:end="466:35"><expr pos:start="466:5" pos:end="466:34"><call pos:start="466:5" pos:end="466:34"><name pos:start="466:5" pos:end="466:24">qemu_fdt_add_subnode</name><argument_list pos:start="466:25" pos:end="466:34">(<argument pos:start="466:26" pos:end="466:28"><expr pos:start="466:26" pos:end="466:28"><name pos:start="466:26" pos:end="466:28">fdt</name></expr></argument>, <argument pos:start="466:31" pos:end="466:33"><expr pos:start="466:31" pos:end="466:33"><name pos:start="466:31" pos:end="466:33">pci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="468:5" pos:end="468:53"><expr pos:start="468:5" pos:end="468:52"><call pos:start="468:5" pos:end="468:52"><name pos:start="468:5" pos:end="468:25">qemu_fdt_setprop_cell</name><argument_list pos:start="468:26" pos:end="468:52">(<argument pos:start="468:27" pos:end="468:29"><expr pos:start="468:27" pos:end="468:29"><name pos:start="468:27" pos:end="468:29">fdt</name></expr></argument>, <argument pos:start="468:32" pos:end="468:34"><expr pos:start="468:32" pos:end="468:34"><name pos:start="468:32" pos:end="468:34">pci</name></expr></argument>, <argument pos:start="468:37" pos:end="468:48"><expr pos:start="468:37" pos:end="468:48"><literal type="string" pos:start="468:37" pos:end="468:48">"cell-index"</literal></expr></argument>, <argument pos:start="468:51" pos:end="468:51"><expr pos:start="468:51" pos:end="468:51"><literal type="number" pos:start="468:51" pos:end="468:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="470:5" pos:end="470:71"><expr pos:start="470:5" pos:end="470:70"><call pos:start="470:5" pos:end="470:70"><name pos:start="470:5" pos:end="470:27">qemu_fdt_setprop_string</name><argument_list pos:start="470:28" pos:end="470:70">(<argument pos:start="470:29" pos:end="470:31"><expr pos:start="470:29" pos:end="470:31"><name pos:start="470:29" pos:end="470:31">fdt</name></expr></argument>, <argument pos:start="470:34" pos:end="470:36"><expr pos:start="470:34" pos:end="470:36"><name pos:start="470:34" pos:end="470:36">pci</name></expr></argument>, <argument pos:start="470:39" pos:end="470:50"><expr pos:start="470:39" pos:end="470:50"><literal type="string" pos:start="470:39" pos:end="470:50">"compatible"</literal></expr></argument>, <argument pos:start="470:53" pos:end="470:69"><expr pos:start="470:53" pos:end="470:69"><literal type="string" pos:start="470:53" pos:end="470:69">"fsl,mpc8540-pci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="472:5" pos:end="472:60"><expr pos:start="472:5" pos:end="472:59"><call pos:start="472:5" pos:end="472:59"><name pos:start="472:5" pos:end="472:27">qemu_fdt_setprop_string</name><argument_list pos:start="472:28" pos:end="472:59">(<argument pos:start="472:29" pos:end="472:31"><expr pos:start="472:29" pos:end="472:31"><name pos:start="472:29" pos:end="472:31">fdt</name></expr></argument>, <argument pos:start="472:34" pos:end="472:36"><expr pos:start="472:34" pos:end="472:36"><name pos:start="472:34" pos:end="472:36">pci</name></expr></argument>, <argument pos:start="472:39" pos:end="472:51"><expr pos:start="472:39" pos:end="472:51"><literal type="string" pos:start="472:39" pos:end="472:51">"device_type"</literal></expr></argument>, <argument pos:start="472:54" pos:end="472:58"><expr pos:start="472:54" pos:end="472:58"><literal type="string" pos:start="472:54" pos:end="472:58">"pci"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="474:5" pos:end="476:37"><expr pos:start="474:5" pos:end="476:36"><call pos:start="474:5" pos:end="476:36"><name pos:start="474:5" pos:end="474:26">qemu_fdt_setprop_cells</name><argument_list pos:start="474:27" pos:end="476:36">(<argument pos:start="474:28" pos:end="474:30"><expr pos:start="474:28" pos:end="474:30"><name pos:start="474:28" pos:end="474:30">fdt</name></expr></argument>, <argument pos:start="474:33" pos:end="474:35"><expr pos:start="474:33" pos:end="474:35"><name pos:start="474:33" pos:end="474:35">pci</name></expr></argument>, <argument pos:start="474:38" pos:end="474:57"><expr pos:start="474:38" pos:end="474:57"><literal type="string" pos:start="474:38" pos:end="474:57">"interrupt-map-mask"</literal></expr></argument>, <argument pos:start="474:60" pos:end="474:65"><expr pos:start="474:60" pos:end="474:65"><literal type="number" pos:start="474:60" pos:end="474:65">0xf800</literal></expr></argument>, <argument pos:start="474:68" pos:end="474:70"><expr pos:start="474:68" pos:end="474:70"><literal type="number" pos:start="474:68" pos:end="474:70">0x0</literal></expr></argument>,

                           <argument pos:start="476:28" pos:end="476:30"><expr pos:start="476:28" pos:end="476:30"><literal type="number" pos:start="476:28" pos:end="476:30">0x0</literal></expr></argument>, <argument pos:start="476:33" pos:end="476:35"><expr pos:start="476:33" pos:end="476:35"><literal type="number" pos:start="476:33" pos:end="476:35">0x7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="478:5" pos:end="482:35"><expr pos:start="478:5" pos:end="482:34"><name pos:start="478:5" pos:end="478:11">pci_map</name> <operator pos:start="478:13" pos:end="478:13">=</operator> <call pos:start="478:15" pos:end="482:34"><name pos:start="478:15" pos:end="478:28">pci_map_create</name><argument_list pos:start="478:29" pos:end="482:34">(<argument pos:start="478:30" pos:end="478:32"><expr pos:start="478:30" pos:end="478:32"><name pos:start="478:30" pos:end="478:32">fdt</name></expr></argument>, <argument pos:start="478:35" pos:end="478:65"><expr pos:start="478:35" pos:end="478:65"><call pos:start="478:35" pos:end="478:65"><name pos:start="478:35" pos:end="478:54">qemu_fdt_get_phandle</name><argument_list pos:start="478:55" pos:end="478:65">(<argument pos:start="478:56" pos:end="478:58"><expr pos:start="478:56" pos:end="478:58"><name pos:start="478:56" pos:end="478:58">fdt</name></expr></argument>, <argument pos:start="478:61" pos:end="478:64"><expr pos:start="478:61" pos:end="478:64"><name pos:start="478:61" pos:end="478:64">mpic</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="480:30" pos:end="480:51"><expr pos:start="480:30" pos:end="480:51"><name pos:start="480:30" pos:end="480:51"><name pos:start="480:30" pos:end="480:35">params</name><operator pos:start="480:36" pos:end="480:37">-&gt;</operator><name pos:start="480:38" pos:end="480:51">pci_first_slot</name></name></expr></argument>, <argument pos:start="480:54" pos:end="480:73"><expr pos:start="480:54" pos:end="480:73"><name pos:start="480:54" pos:end="480:73"><name pos:start="480:54" pos:end="480:59">params</name><operator pos:start="480:60" pos:end="480:61">-&gt;</operator><name pos:start="480:62" pos:end="480:73">pci_nr_slots</name></name></expr></argument>,

                             <argument pos:start="482:30" pos:end="482:33"><expr pos:start="482:30" pos:end="482:33"><operator pos:start="482:30" pos:end="482:30">&amp;</operator><name pos:start="482:31" pos:end="482:33">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="484:5" pos:end="484:62"><expr pos:start="484:5" pos:end="484:61"><call pos:start="484:5" pos:end="484:61"><name pos:start="484:5" pos:end="484:20">qemu_fdt_setprop</name><argument_list pos:start="484:21" pos:end="484:61">(<argument pos:start="484:22" pos:end="484:24"><expr pos:start="484:22" pos:end="484:24"><name pos:start="484:22" pos:end="484:24">fdt</name></expr></argument>, <argument pos:start="484:27" pos:end="484:29"><expr pos:start="484:27" pos:end="484:29"><name pos:start="484:27" pos:end="484:29">pci</name></expr></argument>, <argument pos:start="484:32" pos:end="484:46"><expr pos:start="484:32" pos:end="484:46"><literal type="string" pos:start="484:32" pos:end="484:46">"interrupt-map"</literal></expr></argument>, <argument pos:start="484:49" pos:end="484:55"><expr pos:start="484:49" pos:end="484:55"><name pos:start="484:49" pos:end="484:55">pci_map</name></expr></argument>, <argument pos:start="484:58" pos:end="484:60"><expr pos:start="484:58" pos:end="484:60"><name pos:start="484:58" pos:end="484:60">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="486:5" pos:end="486:65"><expr pos:start="486:5" pos:end="486:64"><call pos:start="486:5" pos:end="486:64"><name pos:start="486:5" pos:end="486:28">qemu_fdt_setprop_phandle</name><argument_list pos:start="486:29" pos:end="486:64">(<argument pos:start="486:30" pos:end="486:32"><expr pos:start="486:30" pos:end="486:32"><name pos:start="486:30" pos:end="486:32">fdt</name></expr></argument>, <argument pos:start="486:35" pos:end="486:37"><expr pos:start="486:35" pos:end="486:37"><name pos:start="486:35" pos:end="486:37">pci</name></expr></argument>, <argument pos:start="486:40" pos:end="486:57"><expr pos:start="486:40" pos:end="486:57"><literal type="string" pos:start="486:40" pos:end="486:57">"interrupt-parent"</literal></expr></argument>, <argument pos:start="486:60" pos:end="486:63"><expr pos:start="486:60" pos:end="486:63"><name pos:start="486:60" pos:end="486:63">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="488:5" pos:end="488:58"><expr pos:start="488:5" pos:end="488:57"><call pos:start="488:5" pos:end="488:57"><name pos:start="488:5" pos:end="488:26">qemu_fdt_setprop_cells</name><argument_list pos:start="488:27" pos:end="488:57">(<argument pos:start="488:28" pos:end="488:30"><expr pos:start="488:28" pos:end="488:30"><name pos:start="488:28" pos:end="488:30">fdt</name></expr></argument>, <argument pos:start="488:33" pos:end="488:35"><expr pos:start="488:33" pos:end="488:35"><name pos:start="488:33" pos:end="488:35">pci</name></expr></argument>, <argument pos:start="488:38" pos:end="488:49"><expr pos:start="488:38" pos:end="488:49"><literal type="string" pos:start="488:38" pos:end="488:49">"interrupts"</literal></expr></argument>, <argument pos:start="488:52" pos:end="488:53"><expr pos:start="488:52" pos:end="488:53"><literal type="number" pos:start="488:52" pos:end="488:53">24</literal></expr></argument>, <argument pos:start="488:56" pos:end="488:56"><expr pos:start="488:56" pos:end="488:56"><literal type="number" pos:start="488:56" pos:end="488:56">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="490:5" pos:end="490:58"><expr pos:start="490:5" pos:end="490:57"><call pos:start="490:5" pos:end="490:57"><name pos:start="490:5" pos:end="490:26">qemu_fdt_setprop_cells</name><argument_list pos:start="490:27" pos:end="490:57">(<argument pos:start="490:28" pos:end="490:30"><expr pos:start="490:28" pos:end="490:30"><name pos:start="490:28" pos:end="490:30">fdt</name></expr></argument>, <argument pos:start="490:33" pos:end="490:35"><expr pos:start="490:33" pos:end="490:35"><name pos:start="490:33" pos:end="490:35">pci</name></expr></argument>, <argument pos:start="490:38" pos:end="490:48"><expr pos:start="490:38" pos:end="490:48"><literal type="string" pos:start="490:38" pos:end="490:48">"bus-range"</literal></expr></argument>, <argument pos:start="490:51" pos:end="490:51"><expr pos:start="490:51" pos:end="490:51"><literal type="number" pos:start="490:51" pos:end="490:51">0</literal></expr></argument>, <argument pos:start="490:54" pos:end="490:56"><expr pos:start="490:54" pos:end="490:56"><literal type="number" pos:start="490:54" pos:end="490:56">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="492:5" pos:end="496:5">for <control pos:start="492:9" pos:end="492:28">(<init pos:start="492:10" pos:end="492:15"><expr pos:start="492:10" pos:end="492:14"><name pos:start="492:10" pos:end="492:10">i</name> <operator pos:start="492:12" pos:end="492:12">=</operator> <literal type="number" pos:start="492:14" pos:end="492:14">0</literal></expr>;</init> <condition pos:start="492:17" pos:end="492:23"><expr pos:start="492:17" pos:end="492:22"><name pos:start="492:17" pos:end="492:17">i</name> <operator pos:start="492:19" pos:end="492:19">&lt;</operator> <literal type="number" pos:start="492:21" pos:end="492:22">14</literal></expr>;</condition> <incr pos:start="492:25" pos:end="492:27"><expr pos:start="492:25" pos:end="492:27"><name pos:start="492:25" pos:end="492:25">i</name><operator pos:start="492:26" pos:end="492:27">++</operator></expr></incr>)</control> <block pos:start="492:30" pos:end="496:5">{<block_content pos:start="494:9" pos:end="494:51">

        <expr_stmt pos:start="494:9" pos:end="494:51"><expr pos:start="494:9" pos:end="494:50"><name pos:start="494:9" pos:end="494:21"><name pos:start="494:9" pos:end="494:18">pci_ranges</name><index pos:start="494:19" pos:end="494:21">[<expr pos:start="494:20" pos:end="494:20"><name pos:start="494:20" pos:end="494:20">i</name></expr>]</index></name> <operator pos:start="494:23" pos:end="494:23">=</operator> <call pos:start="494:25" pos:end="494:50"><name pos:start="494:25" pos:end="494:35">cpu_to_be32</name><argument_list pos:start="494:36" pos:end="494:50">(<argument pos:start="494:37" pos:end="494:49"><expr pos:start="494:37" pos:end="494:49"><name pos:start="494:37" pos:end="494:49"><name pos:start="494:37" pos:end="494:46">pci_ranges</name><index pos:start="494:47" pos:end="494:49">[<expr pos:start="494:48" pos:end="494:48"><name pos:start="494:48" pos:end="494:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="498:5" pos:end="498:55"><expr pos:start="498:5" pos:end="498:54"><call pos:start="498:5" pos:end="498:54"><name pos:start="498:5" pos:end="498:25">qemu_fdt_setprop_cell</name><argument_list pos:start="498:26" pos:end="498:54">(<argument pos:start="498:27" pos:end="498:29"><expr pos:start="498:27" pos:end="498:29"><name pos:start="498:27" pos:end="498:29">fdt</name></expr></argument>, <argument pos:start="498:32" pos:end="498:34"><expr pos:start="498:32" pos:end="498:34"><name pos:start="498:32" pos:end="498:34">pci</name></expr></argument>, <argument pos:start="498:37" pos:end="498:45"><expr pos:start="498:37" pos:end="498:45"><literal type="string" pos:start="498:37" pos:end="498:45">"fsl,msi"</literal></expr></argument>, <argument pos:start="498:48" pos:end="498:53"><expr pos:start="498:48" pos:end="498:53"><name pos:start="498:48" pos:end="498:53">msi_ph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="500:5" pos:end="500:73"><expr pos:start="500:5" pos:end="500:72"><call pos:start="500:5" pos:end="500:72"><name pos:start="500:5" pos:end="500:20">qemu_fdt_setprop</name><argument_list pos:start="500:21" pos:end="500:72">(<argument pos:start="500:22" pos:end="500:24"><expr pos:start="500:22" pos:end="500:24"><name pos:start="500:22" pos:end="500:24">fdt</name></expr></argument>, <argument pos:start="500:27" pos:end="500:29"><expr pos:start="500:27" pos:end="500:29"><name pos:start="500:27" pos:end="500:29">pci</name></expr></argument>, <argument pos:start="500:32" pos:end="500:39"><expr pos:start="500:32" pos:end="500:39"><literal type="string" pos:start="500:32" pos:end="500:39">"ranges"</literal></expr></argument>, <argument pos:start="500:42" pos:end="500:51"><expr pos:start="500:42" pos:end="500:51"><name pos:start="500:42" pos:end="500:51">pci_ranges</name></expr></argument>, <argument pos:start="500:54" pos:end="500:71"><expr pos:start="500:54" pos:end="500:71"><sizeof pos:start="500:54" pos:end="500:71">sizeof<argument_list pos:start="500:60" pos:end="500:71">(<argument pos:start="500:61" pos:end="500:70"><expr pos:start="500:61" pos:end="500:70"><name pos:start="500:61" pos:end="500:70">pci_ranges</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="502:5" pos:end="508:38"><expr pos:start="502:5" pos:end="508:37"><call pos:start="502:5" pos:end="508:37"><name pos:start="502:5" pos:end="502:26">qemu_fdt_setprop_cells</name><argument_list pos:start="502:27" pos:end="508:37">(<argument pos:start="502:28" pos:end="502:30"><expr pos:start="502:28" pos:end="502:30"><name pos:start="502:28" pos:end="502:30">fdt</name></expr></argument>, <argument pos:start="502:33" pos:end="502:35"><expr pos:start="502:33" pos:end="502:35"><name pos:start="502:33" pos:end="502:35">pci</name></expr></argument>, <argument pos:start="502:38" pos:end="502:42"><expr pos:start="502:38" pos:end="502:42"><literal type="string" pos:start="502:38" pos:end="502:42">"reg"</literal></expr></argument>,

                           <argument pos:start="504:28" pos:end="504:81"><expr pos:start="504:28" pos:end="504:81"><operator pos:start="504:28" pos:end="504:28">(</operator><name pos:start="504:29" pos:end="504:48"><name pos:start="504:29" pos:end="504:34">params</name><operator pos:start="504:35" pos:end="504:36">-&gt;</operator><name pos:start="504:37" pos:end="504:48">ccsrbar_base</name></name> <operator pos:start="504:50" pos:end="504:50">+</operator> <name pos:start="504:52" pos:end="504:74">MPC8544_PCI_REGS_OFFSET</name><operator pos:start="504:75" pos:end="504:75">)</operator> <operator pos:start="504:77" pos:end="504:78">&gt;&gt;</operator> <literal type="number" pos:start="504:80" pos:end="504:81">32</literal></expr></argument>,

                           <argument pos:start="506:28" pos:end="506:75"><expr pos:start="506:28" pos:end="506:75"><operator pos:start="506:28" pos:end="506:28">(</operator><name pos:start="506:29" pos:end="506:48"><name pos:start="506:29" pos:end="506:34">params</name><operator pos:start="506:35" pos:end="506:36">-&gt;</operator><name pos:start="506:37" pos:end="506:48">ccsrbar_base</name></name> <operator pos:start="506:50" pos:end="506:50">+</operator> <name pos:start="506:52" pos:end="506:74">MPC8544_PCI_REGS_OFFSET</name><operator pos:start="506:75" pos:end="506:75">)</operator></expr></argument>,

                           <argument pos:start="508:28" pos:end="508:28"><expr pos:start="508:28" pos:end="508:28"><literal type="number" pos:start="508:28" pos:end="508:28">0</literal></expr></argument>, <argument pos:start="508:31" pos:end="508:36"><expr pos:start="508:31" pos:end="508:36"><literal type="number" pos:start="508:31" pos:end="508:36">0x1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="510:5" pos:end="510:65"><expr pos:start="510:5" pos:end="510:64"><call pos:start="510:5" pos:end="510:64"><name pos:start="510:5" pos:end="510:25">qemu_fdt_setprop_cell</name><argument_list pos:start="510:26" pos:end="510:64">(<argument pos:start="510:27" pos:end="510:29"><expr pos:start="510:27" pos:end="510:29"><name pos:start="510:27" pos:end="510:29">fdt</name></expr></argument>, <argument pos:start="510:32" pos:end="510:34"><expr pos:start="510:32" pos:end="510:34"><name pos:start="510:32" pos:end="510:34">pci</name></expr></argument>, <argument pos:start="510:37" pos:end="510:53"><expr pos:start="510:37" pos:end="510:53"><literal type="string" pos:start="510:37" pos:end="510:53">"clock-frequency"</literal></expr></argument>, <argument pos:start="510:56" pos:end="510:63"><expr pos:start="510:56" pos:end="510:63"><literal type="number" pos:start="510:56" pos:end="510:63">66666666</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="512:5" pos:end="512:59"><expr pos:start="512:5" pos:end="512:58"><call pos:start="512:5" pos:end="512:58"><name pos:start="512:5" pos:end="512:25">qemu_fdt_setprop_cell</name><argument_list pos:start="512:26" pos:end="512:58">(<argument pos:start="512:27" pos:end="512:29"><expr pos:start="512:27" pos:end="512:29"><name pos:start="512:27" pos:end="512:29">fdt</name></expr></argument>, <argument pos:start="512:32" pos:end="512:34"><expr pos:start="512:32" pos:end="512:34"><name pos:start="512:32" pos:end="512:34">pci</name></expr></argument>, <argument pos:start="512:37" pos:end="512:54"><expr pos:start="512:37" pos:end="512:54"><literal type="string" pos:start="512:37" pos:end="512:54">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="512:57" pos:end="512:57"><expr pos:start="512:57" pos:end="512:57"><literal type="number" pos:start="512:57" pos:end="512:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="514:5" pos:end="514:54"><expr pos:start="514:5" pos:end="514:53"><call pos:start="514:5" pos:end="514:53"><name pos:start="514:5" pos:end="514:25">qemu_fdt_setprop_cell</name><argument_list pos:start="514:26" pos:end="514:53">(<argument pos:start="514:27" pos:end="514:29"><expr pos:start="514:27" pos:end="514:29"><name pos:start="514:27" pos:end="514:29">fdt</name></expr></argument>, <argument pos:start="514:32" pos:end="514:34"><expr pos:start="514:32" pos:end="514:34"><name pos:start="514:32" pos:end="514:34">pci</name></expr></argument>, <argument pos:start="514:37" pos:end="514:49"><expr pos:start="514:37" pos:end="514:49"><literal type="string" pos:start="514:37" pos:end="514:49">"#size-cells"</literal></expr></argument>, <argument pos:start="514:52" pos:end="514:52"><expr pos:start="514:52" pos:end="514:52"><literal type="number" pos:start="514:52" pos:end="514:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="516:5" pos:end="516:57"><expr pos:start="516:5" pos:end="516:56"><call pos:start="516:5" pos:end="516:56"><name pos:start="516:5" pos:end="516:25">qemu_fdt_setprop_cell</name><argument_list pos:start="516:26" pos:end="516:56">(<argument pos:start="516:27" pos:end="516:29"><expr pos:start="516:27" pos:end="516:29"><name pos:start="516:27" pos:end="516:29">fdt</name></expr></argument>, <argument pos:start="516:32" pos:end="516:34"><expr pos:start="516:32" pos:end="516:34"><name pos:start="516:32" pos:end="516:34">pci</name></expr></argument>, <argument pos:start="516:37" pos:end="516:52"><expr pos:start="516:37" pos:end="516:52"><literal type="string" pos:start="516:37" pos:end="516:52">"#address-cells"</literal></expr></argument>, <argument pos:start="516:55" pos:end="516:55"><expr pos:start="516:55" pos:end="516:55"><literal type="number" pos:start="516:55" pos:end="516:55">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="518:5" pos:end="518:58"><expr pos:start="518:5" pos:end="518:57"><call pos:start="518:5" pos:end="518:57"><name pos:start="518:5" pos:end="518:27">qemu_fdt_setprop_string</name><argument_list pos:start="518:28" pos:end="518:57">(<argument pos:start="518:29" pos:end="518:31"><expr pos:start="518:29" pos:end="518:31"><name pos:start="518:29" pos:end="518:31">fdt</name></expr></argument>, <argument pos:start="518:34" pos:end="518:43"><expr pos:start="518:34" pos:end="518:43"><literal type="string" pos:start="518:34" pos:end="518:43">"/aliases"</literal></expr></argument>, <argument pos:start="518:46" pos:end="518:51"><expr pos:start="518:46" pos:end="518:51"><literal type="string" pos:start="518:46" pos:end="518:51">"pci0"</literal></expr></argument>, <argument pos:start="518:54" pos:end="518:56"><expr pos:start="518:54" pos:end="518:56"><name pos:start="518:54" pos:end="518:56">pci</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="522:5" pos:end="526:5"><if pos:start="522:5" pos:end="526:5">if <condition pos:start="522:8" pos:end="522:33">(<expr pos:start="522:9" pos:end="522:32"><name pos:start="522:9" pos:end="522:32"><name pos:start="522:9" pos:end="522:14">params</name><operator pos:start="522:15" pos:end="522:16">-&gt;</operator><name pos:start="522:17" pos:end="522:32">has_mpc8xxx_gpio</name></name></expr>)</condition> <block pos:start="522:35" pos:end="526:5">{<block_content pos:start="524:9" pos:end="524:47">

        <expr_stmt pos:start="524:9" pos:end="524:47"><expr pos:start="524:9" pos:end="524:46"><call pos:start="524:9" pos:end="524:46"><name pos:start="524:9" pos:end="524:30">create_dt_mpc8xxx_gpio</name><argument_list pos:start="524:31" pos:end="524:46">(<argument pos:start="524:32" pos:end="524:34"><expr pos:start="524:32" pos:end="524:34"><name pos:start="524:32" pos:end="524:34">fdt</name></expr></argument>, <argument pos:start="524:37" pos:end="524:39"><expr pos:start="524:37" pos:end="524:39"><name pos:start="524:37" pos:end="524:39">soc</name></expr></argument>, <argument pos:start="524:42" pos:end="524:45"><expr pos:start="524:42" pos:end="524:45"><name pos:start="524:42" pos:end="524:45">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="530:5" pos:end="534:5"><if pos:start="530:5" pos:end="534:5">if <condition pos:start="530:8" pos:end="530:33">(<expr pos:start="530:9" pos:end="530:32"><name pos:start="530:9" pos:end="530:32"><name pos:start="530:9" pos:end="530:14">params</name><operator pos:start="530:15" pos:end="530:16">-&gt;</operator><name pos:start="530:17" pos:end="530:32">has_platform_bus</name></name></expr>)</condition> <block pos:start="530:35" pos:end="534:5">{<block_content pos:start="532:9" pos:end="532:55">

        <expr_stmt pos:start="532:9" pos:end="532:55"><expr pos:start="532:9" pos:end="532:54"><call pos:start="532:9" pos:end="532:54"><name pos:start="532:9" pos:end="532:35">platform_bus_create_devtree</name><argument_list pos:start="532:36" pos:end="532:54">(<argument pos:start="532:37" pos:end="532:42"><expr pos:start="532:37" pos:end="532:42"><name pos:start="532:37" pos:end="532:42">params</name></expr></argument>, <argument pos:start="532:45" pos:end="532:47"><expr pos:start="532:45" pos:end="532:47"><name pos:start="532:45" pos:end="532:47">fdt</name></expr></argument>, <argument pos:start="532:50" pos:end="532:53"><expr pos:start="532:50" pos:end="532:53"><name pos:start="532:50" pos:end="532:53">mpic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="538:5" pos:end="538:39"><expr pos:start="538:5" pos:end="538:38"><call pos:start="538:5" pos:end="538:38"><name pos:start="538:5" pos:end="538:25"><name pos:start="538:5" pos:end="538:10">params</name><operator pos:start="538:11" pos:end="538:12">-&gt;</operator><name pos:start="538:13" pos:end="538:25">fixup_devtree</name></name><argument_list pos:start="538:26" pos:end="538:38">(<argument pos:start="538:27" pos:end="538:32"><expr pos:start="538:27" pos:end="538:32"><name pos:start="538:27" pos:end="538:32">params</name></expr></argument>, <argument pos:start="538:35" pos:end="538:37"><expr pos:start="538:35" pos:end="538:37"><name pos:start="538:35" pos:end="538:37">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="542:5" pos:end="548:5"><if pos:start="542:5" pos:end="548:5">if <condition pos:start="542:8" pos:end="542:24">(<expr pos:start="542:9" pos:end="542:23"><name pos:start="542:9" pos:end="542:23">toplevel_compat</name></expr>)</condition> <block pos:start="542:26" pos:end="548:5">{<block_content pos:start="544:9" pos:end="546:54">

        <expr_stmt pos:start="544:9" pos:end="546:54"><expr pos:start="544:9" pos:end="546:53"><call pos:start="544:9" pos:end="546:53"><name pos:start="544:9" pos:end="544:24">qemu_fdt_setprop</name><argument_list pos:start="544:25" pos:end="546:53">(<argument pos:start="544:26" pos:end="544:28"><expr pos:start="544:26" pos:end="544:28"><name pos:start="544:26" pos:end="544:28">fdt</name></expr></argument>, <argument pos:start="544:31" pos:end="544:33"><expr pos:start="544:31" pos:end="544:33"><literal type="string" pos:start="544:31" pos:end="544:33">"/"</literal></expr></argument>, <argument pos:start="544:36" pos:end="544:47"><expr pos:start="544:36" pos:end="544:47"><literal type="string" pos:start="544:36" pos:end="544:47">"compatible"</literal></expr></argument>, <argument pos:start="544:50" pos:end="544:64"><expr pos:start="544:50" pos:end="544:64"><name pos:start="544:50" pos:end="544:64">toplevel_compat</name></expr></argument>,

                         <argument pos:start="546:26" pos:end="546:52"><expr pos:start="546:26" pos:end="546:52"><call pos:start="546:26" pos:end="546:48"><name pos:start="546:26" pos:end="546:31">strlen</name><argument_list pos:start="546:32" pos:end="546:48">(<argument pos:start="546:33" pos:end="546:47"><expr pos:start="546:33" pos:end="546:47"><name pos:start="546:33" pos:end="546:47">toplevel_compat</name></expr></argument>)</argument_list></call> <operator pos:start="546:50" pos:end="546:50">+</operator> <literal type="number" pos:start="546:52" pos:end="546:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="552:1" pos:end="552:5"><name pos:start="552:1" pos:end="552:4">done</name>:</label>

    <if_stmt pos:start="554:5" pos:end="560:5"><if pos:start="554:5" pos:end="560:5">if <condition pos:start="554:8" pos:end="554:17">(<expr pos:start="554:9" pos:end="554:16"><operator pos:start="554:9" pos:end="554:9">!</operator><name pos:start="554:10" pos:end="554:16">dry_run</name></expr>)</condition> <block pos:start="554:19" pos:end="560:5">{<block_content pos:start="556:9" pos:end="558:55">

        <expr_stmt pos:start="556:9" pos:end="556:40"><expr pos:start="556:9" pos:end="556:39"><call pos:start="556:9" pos:end="556:39"><name pos:start="556:9" pos:end="556:24">qemu_fdt_dumpdtb</name><argument_list pos:start="556:25" pos:end="556:39">(<argument pos:start="556:26" pos:end="556:28"><expr pos:start="556:26" pos:end="556:28"><name pos:start="556:26" pos:end="556:28">fdt</name></expr></argument>, <argument pos:start="556:31" pos:end="556:38"><expr pos:start="556:31" pos:end="556:38"><name pos:start="556:31" pos:end="556:38">fdt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="558:9" pos:end="558:55"><expr pos:start="558:9" pos:end="558:54"><call pos:start="558:9" pos:end="558:54"><name pos:start="558:9" pos:end="558:33">cpu_physical_memory_write</name><argument_list pos:start="558:34" pos:end="558:54">(<argument pos:start="558:35" pos:end="558:38"><expr pos:start="558:35" pos:end="558:38"><name pos:start="558:35" pos:end="558:38">addr</name></expr></argument>, <argument pos:start="558:41" pos:end="558:43"><expr pos:start="558:41" pos:end="558:43"><name pos:start="558:41" pos:end="558:43">fdt</name></expr></argument>, <argument pos:start="558:46" pos:end="558:53"><expr pos:start="558:46" pos:end="558:53"><name pos:start="558:46" pos:end="558:53">fdt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="562:5" pos:end="562:19"><expr pos:start="562:5" pos:end="562:18"><name pos:start="562:5" pos:end="562:7">ret</name> <operator pos:start="562:9" pos:end="562:9">=</operator> <name pos:start="562:11" pos:end="562:18">fdt_size</name></expr>;</expr_stmt>



<label pos:start="566:1" pos:end="566:4"><name pos:start="566:1" pos:end="566:3">out</name>:</label>

    <expr_stmt pos:start="568:5" pos:end="568:20"><expr pos:start="568:5" pos:end="568:19"><call pos:start="568:5" pos:end="568:19"><name pos:start="568:5" pos:end="568:10">g_free</name><argument_list pos:start="568:11" pos:end="568:19">(<argument pos:start="568:12" pos:end="568:18"><expr pos:start="568:12" pos:end="568:18"><name pos:start="568:12" pos:end="568:18">pci_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="572:5" pos:end="572:15">return <expr pos:start="572:12" pos:end="572:14"><name pos:start="572:12" pos:end="572:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
