<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26907.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">mmu40x_get_physical_address</name> <parameter_list pos:start="1:40" pos:end="3:79">(<parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:48">CPUState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">env</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:69"><decl pos:start="1:56" pos:end="1:69"><type pos:start="1:56" pos:end="1:69"><name pos:start="1:56" pos:end="1:64">mmu_ctx_t</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">ctx</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:53"><decl pos:start="3:34" pos:end="3:53"><type pos:start="3:34" pos:end="3:53"><name pos:start="3:34" pos:end="3:45">target_ulong</name></type> <name pos:start="3:47" pos:end="3:53">address</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:61"><decl pos:start="3:56" pos:end="3:61"><type pos:start="3:56" pos:end="3:61"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:61">rw</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:78"><decl pos:start="3:64" pos:end="3:78"><type pos:start="3:64" pos:end="3:78"><name pos:start="3:64" pos:end="3:66">int</name></type> <name pos:start="3:68" pos:end="3:78">access_type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="117:1">{<block_content pos:start="7:5" pos:end="115:15">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">ppcemb_tlb_t</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">tlb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22">target_phys_addr_t</name></type> <name pos:start="9:24" pos:end="9:28">raddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">ret</name></decl>, <decl pos:start="11:17" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:20">zsel</name></decl>, <decl pos:start="11:23" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:25">zpr</name></decl>, <decl pos:start="11:28" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:28" pos:end="11:29">pr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:13"><expr pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <operator pos:start="15:11" pos:end="15:11">-</operator><literal type="number" pos:start="15:12" pos:end="15:12">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:9">raddr</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:31">target_phys_addr_t</name><operator pos:start="17:32" pos:end="17:32">)</operator><operator pos:start="17:33" pos:end="17:33">-</operator><literal type="number" pos:start="17:34" pos:end="17:37">1ULL</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:16"><expr pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:6">pr</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <name pos:start="19:10" pos:end="19:15">msr_pr</name></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="107:5">for <control pos:start="21:9" pos:end="21:37">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:32"><expr pos:start="21:17" pos:end="21:31"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:31"><name pos:start="21:21" pos:end="21:23">env</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:31">nb_tlb</name></name></expr>;</condition> <incr pos:start="21:34" pos:end="21:36"><expr pos:start="21:34" pos:end="21:36"><name pos:start="21:34" pos:end="21:34">i</name><operator pos:start="21:35" pos:end="21:36">++</operator></expr></incr>)</control> <block pos:start="21:39" pos:end="107:5">{<block_content pos:start="23:9" pos:end="105:9">

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:11">tlb</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <operator pos:start="23:15" pos:end="23:15">&amp;</operator><name pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:18">env</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:23">tlb</name><index pos:start="23:24" pos:end="23:26">[<expr pos:start="23:25" pos:end="23:25"><name pos:start="23:25" pos:end="23:25">i</name></expr>]</index></name><operator pos:start="23:27" pos:end="23:27">.</operator><name pos:start="23:28" pos:end="23:31">tlbe</name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:21"><if pos:start="25:9" pos:end="29:21">if <condition pos:start="25:12" pos:end="27:62">(<expr pos:start="25:13" pos:end="27:61"><call pos:start="25:13" pos:end="27:57"><name pos:start="25:13" pos:end="25:28">ppcemb_tlb_check</name><argument_list pos:start="25:29" pos:end="27:57">(<argument pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><name pos:start="25:30" pos:end="25:32">env</name></expr></argument>, <argument pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><name pos:start="25:35" pos:end="25:37">tlb</name></expr></argument>, <argument pos:start="25:40" pos:end="25:45"><expr pos:start="25:40" pos:end="25:45"><operator pos:start="25:40" pos:end="25:40">&amp;</operator><name pos:start="25:41" pos:end="25:45">raddr</name></expr></argument>, <argument pos:start="25:48" pos:end="25:54"><expr pos:start="25:48" pos:end="25:54"><name pos:start="25:48" pos:end="25:54">address</name></expr></argument>,

                             <argument pos:start="27:30" pos:end="27:50"><expr pos:start="27:30" pos:end="27:50"><name pos:start="27:30" pos:end="27:50"><name pos:start="27:30" pos:end="27:32">env</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:37">spr</name><index pos:start="27:38" pos:end="27:50">[<expr pos:start="27:39" pos:end="27:49"><name pos:start="27:39" pos:end="27:49">SPR_40x_PID</name></expr>]</index></name></expr></argument>, <argument pos:start="27:53" pos:end="27:53"><expr pos:start="27:53" pos:end="27:53"><literal type="number" pos:start="27:53" pos:end="27:53">0</literal></expr></argument>, <argument pos:start="27:56" pos:end="27:56"><expr pos:start="27:56" pos:end="27:56"><name pos:start="27:56" pos:end="27:56">i</name></expr></argument>)</argument_list></call> <operator pos:start="27:59" pos:end="27:59">&lt;</operator> <literal type="number" pos:start="27:61" pos:end="27:61">0</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <continue pos:start="29:13" pos:end="29:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:12">zsel</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <operator pos:start="31:16" pos:end="31:16">(</operator><name pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:19">tlb</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:25">attr</name></name> <operator pos:start="31:27" pos:end="31:28">&gt;&gt;</operator> <literal type="number" pos:start="31:30" pos:end="31:30">4</literal><operator pos:start="31:31" pos:end="31:31">)</operator> <operator pos:start="31:33" pos:end="31:33">&amp;</operator> <literal type="number" pos:start="31:35" pos:end="31:37">0xF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:65"><expr pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:11">zpr</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <operator pos:start="33:15" pos:end="33:15">(</operator><name pos:start="33:16" pos:end="33:36"><name pos:start="33:16" pos:end="33:18">env</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:23">spr</name><index pos:start="33:24" pos:end="33:36">[<expr pos:start="33:25" pos:end="33:35"><name pos:start="33:25" pos:end="33:35">SPR_40x_ZPR</name></expr>]</index></name> <operator pos:start="33:38" pos:end="33:39">&gt;&gt;</operator> <operator pos:start="33:41" pos:end="33:41">(</operator><literal type="number" pos:start="33:42" pos:end="33:45">28</literal> <operator pos:start="33:45" pos:end="33:45">-</operator> <operator pos:start="33:47" pos:end="33:47">(</operator><literal type="number" pos:start="33:48" pos:end="33:48">2</literal> <operator pos:start="33:50" pos:end="33:50">*</operator> <name pos:start="33:52" pos:end="33:55">zsel</name><operator pos:start="33:56" pos:end="33:56">)</operator><operator pos:start="33:57" pos:end="33:57">)</operator><operator pos:start="33:58" pos:end="33:58">)</operator> <operator pos:start="33:60" pos:end="33:60">&amp;</operator> <literal type="number" pos:start="33:62" pos:end="33:64">0x3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="37:59"><expr pos:start="35:9" pos:end="37:58"><call pos:start="35:9" pos:end="37:58"><name pos:start="35:9" pos:end="35:17">LOG_SWTLB</name><argument_list pos:start="35:18" pos:end="37:58">(<argument pos:start="35:19" pos:end="35:63"><expr pos:start="35:19" pos:end="35:63"><literal type="string" pos:start="35:19" pos:end="35:63">"%s: TLB %d zsel %d zpr %d rw %d attr %08x\n"</literal></expr></argument>,

                    <argument pos:start="37:21" pos:end="37:28"><expr pos:start="37:21" pos:end="37:28"><name pos:start="37:21" pos:end="37:28">__func__</name></expr></argument>, <argument pos:start="37:31" pos:end="37:31"><expr pos:start="37:31" pos:end="37:31"><name pos:start="37:31" pos:end="37:31">i</name></expr></argument>, <argument pos:start="37:34" pos:end="37:37"><expr pos:start="37:34" pos:end="37:37"><name pos:start="37:34" pos:end="37:37">zsel</name></expr></argument>, <argument pos:start="37:40" pos:end="37:42"><expr pos:start="37:40" pos:end="37:42"><name pos:start="37:40" pos:end="37:42">zpr</name></expr></argument>, <argument pos:start="37:45" pos:end="37:46"><expr pos:start="37:45" pos:end="37:46"><name pos:start="37:45" pos:end="37:46">rw</name></expr></argument>, <argument pos:start="37:49" pos:end="37:57"><expr pos:start="37:49" pos:end="37:57"><name pos:start="37:49" pos:end="37:57"><name pos:start="37:49" pos:end="37:51">tlb</name><operator pos:start="37:52" pos:end="37:53">-&gt;</operator><name pos:start="37:54" pos:end="37:57">attr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="39:9" pos:end="39:38">/* Check execute enable bit */</comment>

        <switch pos:start="41:9" pos:end="91:9">switch <condition pos:start="41:16" pos:end="41:20">(<expr pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">zpr</name></expr>)</condition> <block pos:start="41:22" pos:end="91:9">{<block_content pos:start="43:9" pos:end="89:18">

        <case pos:start="43:9" pos:end="43:17">case <expr pos:start="43:14" pos:end="43:16"><literal type="number" pos:start="43:14" pos:end="43:16">0x2</literal></expr>:</case>

            <if_stmt pos:start="45:13" pos:end="47:33"><if pos:start="45:13" pos:end="47:33">if <condition pos:start="45:16" pos:end="45:24">(<expr pos:start="45:17" pos:end="45:23"><name pos:start="45:17" pos:end="45:18">pr</name> <operator pos:start="45:20" pos:end="45:21">!=</operator> <literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:33"><block_content pos:start="47:17" pos:end="47:33">

                <goto pos:start="47:17" pos:end="47:33">goto <name pos:start="47:22" pos:end="47:32">check_perms</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="49:13" pos:end="49:31">/* No break here */</comment>

        <case pos:start="51:9" pos:end="51:17">case <expr pos:start="51:14" pos:end="51:16"><literal type="number" pos:start="51:14" pos:end="51:16">0x3</literal></expr>:</case>

            <comment type="block" pos:start="53:13" pos:end="53:38">/* All accesses granted */</comment>

            <expr_stmt pos:start="55:13" pos:end="55:59"><expr pos:start="55:13" pos:end="55:58"><name pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:15">ctx</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:21">prot</name></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <name pos:start="55:25" pos:end="55:33">PAGE_READ</name> <operator pos:start="55:35" pos:end="55:35">|</operator> <name pos:start="55:37" pos:end="55:46">PAGE_WRITE</name> <operator pos:start="55:48" pos:end="55:48">|</operator> <name pos:start="55:50" pos:end="55:58">PAGE_EXEC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:20"><expr pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>;</expr_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>

        <case pos:start="61:9" pos:end="61:17">case <expr pos:start="61:14" pos:end="61:16"><literal type="number" pos:start="61:14" pos:end="61:16">0x0</literal></expr>:</case>

            <if_stmt pos:start="63:13" pos:end="71:13"><if pos:start="63:13" pos:end="71:13">if <condition pos:start="63:16" pos:end="63:24">(<expr pos:start="63:17" pos:end="63:23"><name pos:start="63:17" pos:end="63:18">pr</name> <operator pos:start="63:20" pos:end="63:21">!=</operator> <literal type="number" pos:start="63:23" pos:end="63:23">0</literal></expr>)</condition> <block pos:start="63:26" pos:end="71:13">{<block_content pos:start="65:17" pos:end="69:22">

                <expr_stmt pos:start="65:17" pos:end="65:30"><expr pos:start="65:17" pos:end="65:29"><name pos:start="65:17" pos:end="65:25"><name pos:start="65:17" pos:end="65:19">ctx</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:25">prot</name></name> <operator pos:start="65:27" pos:end="65:27">=</operator> <literal type="number" pos:start="65:29" pos:end="65:29">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:25"><expr pos:start="67:17" pos:end="67:24"><name pos:start="67:17" pos:end="67:19">ret</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <operator pos:start="67:23" pos:end="67:23">-</operator><literal type="number" pos:start="67:24" pos:end="67:24">2</literal></expr>;</expr_stmt>

                <break pos:start="69:17" pos:end="69:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="73:13" pos:end="73:31">/* No break here */</comment>

        <case pos:start="75:9" pos:end="75:17">case <expr pos:start="75:14" pos:end="75:16"><literal type="number" pos:start="75:14" pos:end="75:16">0x1</literal></expr>:</case>

        <label pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:19">check_perms</name>:</label>

            <comment type="block" pos:start="79:13" pos:end="79:38">/* Check from TLB entry */</comment>

            <comment type="block" pos:start="81:13" pos:end="81:73">/* XXX: there is a problem here or in the TLB fill code... */</comment>

            <expr_stmt pos:start="83:13" pos:end="83:34"><expr pos:start="83:13" pos:end="83:33"><name pos:start="83:13" pos:end="83:21"><name pos:start="83:13" pos:end="83:15">ctx</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:21">prot</name></name> <operator pos:start="83:23" pos:end="83:23">=</operator> <name pos:start="83:25" pos:end="83:33"><name pos:start="83:25" pos:end="83:27">tlb</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:33">prot</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:35"><expr pos:start="85:13" pos:end="85:34"><name pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:15">ctx</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:21">prot</name></name> <operator pos:start="85:23" pos:end="85:24">|=</operator> <name pos:start="85:26" pos:end="85:34">PAGE_EXEC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:57"><expr pos:start="87:13" pos:end="87:56"><name pos:start="87:13" pos:end="87:15">ret</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:56"><name pos:start="87:19" pos:end="87:28">check_prot</name><argument_list pos:start="87:29" pos:end="87:56">(<argument pos:start="87:30" pos:end="87:38"><expr pos:start="87:30" pos:end="87:38"><name pos:start="87:30" pos:end="87:38"><name pos:start="87:30" pos:end="87:32">ctx</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:38">prot</name></name></expr></argument>, <argument pos:start="87:41" pos:end="87:42"><expr pos:start="87:41" pos:end="87:42"><name pos:start="87:41" pos:end="87:42">rw</name></expr></argument>, <argument pos:start="87:45" pos:end="87:55"><expr pos:start="87:45" pos:end="87:55"><name pos:start="87:45" pos:end="87:55">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="93:9" pos:end="105:9"><if pos:start="93:9" pos:end="105:9">if <condition pos:start="93:12" pos:end="93:21">(<expr pos:start="93:13" pos:end="93:20"><name pos:start="93:13" pos:end="93:15">ret</name> <operator pos:start="93:17" pos:end="93:18">&gt;=</operator> <literal type="number" pos:start="93:20" pos:end="93:20">0</literal></expr>)</condition> <block pos:start="93:23" pos:end="105:9">{<block_content pos:start="95:13" pos:end="103:21">

            <expr_stmt pos:start="95:13" pos:end="95:31"><expr pos:start="95:13" pos:end="95:30"><name pos:start="95:13" pos:end="95:22"><name pos:start="95:13" pos:end="95:15">ctx</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:22">raddr</name></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:30">raddr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="101:27"><expr pos:start="97:13" pos:end="101:26"><call pos:start="97:13" pos:end="101:26"><name pos:start="97:13" pos:end="97:21">LOG_SWTLB</name><argument_list pos:start="97:22" pos:end="101:26">(<argument pos:start="97:23" pos:end="99:32"><expr pos:start="97:23" pos:end="99:32"><literal type="string" pos:start="97:23" pos:end="97:43">"%s: access granted "</literal> <name pos:start="97:45" pos:end="97:57">TARGET_FMT_lx</name> <literal type="string" pos:start="97:59" pos:end="97:64">" =&gt; "</literal> <name pos:start="97:66" pos:end="97:79">TARGET_FMT_plx</name>

                      <literal type="string" pos:start="99:23" pos:end="99:32">" %d %d\n"</literal></expr></argument>, <argument pos:start="99:35" pos:end="99:42"><expr pos:start="99:35" pos:end="99:42"><name pos:start="99:35" pos:end="99:42">__func__</name></expr></argument>, <argument pos:start="99:45" pos:end="99:51"><expr pos:start="99:45" pos:end="99:51"><name pos:start="99:45" pos:end="99:51">address</name></expr></argument>, <argument pos:start="99:54" pos:end="99:63"><expr pos:start="99:54" pos:end="99:63"><name pos:start="99:54" pos:end="99:63"><name pos:start="99:54" pos:end="99:56">ctx</name><operator pos:start="99:57" pos:end="99:58">-&gt;</operator><name pos:start="99:59" pos:end="99:63">raddr</name></name></expr></argument>, <argument pos:start="99:66" pos:end="99:74"><expr pos:start="99:66" pos:end="99:74"><name pos:start="99:66" pos:end="99:74"><name pos:start="99:66" pos:end="99:68">ctx</name><operator pos:start="99:69" pos:end="99:70">-&gt;</operator><name pos:start="99:71" pos:end="99:74">prot</name></name></expr></argument>,

                      <argument pos:start="101:23" pos:end="101:25"><expr pos:start="101:23" pos:end="101:25"><name pos:start="101:23" pos:end="101:25">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="103:13" pos:end="103:21">return <expr pos:start="103:20" pos:end="103:20"><literal type="number" pos:start="103:20" pos:end="103:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="109:5" pos:end="111:68"><expr pos:start="109:5" pos:end="111:67"><call pos:start="109:5" pos:end="111:67"><name pos:start="109:5" pos:end="109:13">LOG_SWTLB</name><argument_list pos:start="109:14" pos:end="111:67">(<argument pos:start="109:15" pos:end="111:24"><expr pos:start="109:15" pos:end="111:24"><literal type="string" pos:start="109:15" pos:end="109:35">"%s: access refused "</literal> <name pos:start="109:37" pos:end="109:49">TARGET_FMT_lx</name> <literal type="string" pos:start="109:51" pos:end="109:56">" =&gt; "</literal> <name pos:start="109:58" pos:end="109:71">TARGET_FMT_plx</name>

              <literal type="string" pos:start="111:15" pos:end="111:24">" %d %d\n"</literal></expr></argument>, <argument pos:start="111:27" pos:end="111:34"><expr pos:start="111:27" pos:end="111:34"><name pos:start="111:27" pos:end="111:34">__func__</name></expr></argument>, <argument pos:start="111:37" pos:end="111:43"><expr pos:start="111:37" pos:end="111:43"><name pos:start="111:37" pos:end="111:43">address</name></expr></argument>, <argument pos:start="111:46" pos:end="111:50"><expr pos:start="111:46" pos:end="111:50"><name pos:start="111:46" pos:end="111:50">raddr</name></expr></argument>, <argument pos:start="111:53" pos:end="111:61"><expr pos:start="111:53" pos:end="111:61"><name pos:start="111:53" pos:end="111:61"><name pos:start="111:53" pos:end="111:55">ctx</name><operator pos:start="111:56" pos:end="111:57">-&gt;</operator><name pos:start="111:58" pos:end="111:61">prot</name></name></expr></argument>, <argument pos:start="111:64" pos:end="111:66"><expr pos:start="111:64" pos:end="111:66"><name pos:start="111:64" pos:end="111:66">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="115:5" pos:end="115:15">return <expr pos:start="115:12" pos:end="115:14"><name pos:start="115:12" pos:end="115:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
