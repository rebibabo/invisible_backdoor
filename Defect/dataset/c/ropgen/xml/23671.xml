<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23671.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">uhci_complete_td</name><parameter_list pos:start="1:28" pos:end="1:92">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:37">UHCIState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:49">UHCI_TD</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">td</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:71"><decl pos:start="1:56" pos:end="1:71"><type pos:start="1:56" pos:end="1:71"><name pos:start="1:56" pos:end="1:64">UHCIAsync</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:71">async</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:91"><decl pos:start="1:74" pos:end="1:91"><type pos:start="1:74" pos:end="1:91"><name pos:start="1:74" pos:end="1:81">uint32_t</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:91">int_mask</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="199:1">{<block_content pos:start="5:5" pos:end="197:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">len</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>, <decl pos:start="5:18" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:24">max_len</name></decl>, <decl pos:start="5:27" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:27" pos:end="5:29">err</name></decl>, <decl pos:start="5:32" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:34">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:15">pid</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:46"><expr pos:start="11:5" pos:end="11:45"><name pos:start="11:5" pos:end="11:11">max_len</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <operator pos:start="11:15" pos:end="11:15">(</operator><operator pos:start="11:16" pos:end="11:16">(</operator><name pos:start="11:17" pos:end="11:25"><name pos:start="11:17" pos:end="11:18">td</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:25">token</name></name> <operator pos:start="11:27" pos:end="11:28">&gt;&gt;</operator> <literal type="number" pos:start="11:30" pos:end="11:31">21</literal><operator pos:start="11:32" pos:end="11:32">)</operator> <operator pos:start="11:34" pos:end="11:34">+</operator> <literal type="number" pos:start="11:36" pos:end="11:36">1</literal><operator pos:start="11:37" pos:end="11:37">)</operator> <operator pos:start="11:39" pos:end="11:39">&amp;</operator> <literal type="number" pos:start="11:41" pos:end="11:45">0x7ff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:7">pid</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <name pos:start="13:11" pos:end="13:19"><name pos:start="13:11" pos:end="13:12">td</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:19">token</name></name> <operator pos:start="13:21" pos:end="13:21">&amp;</operator> <literal type="number" pos:start="13:23" pos:end="13:26">0xff</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:27"><name pos:start="17:11" pos:end="17:15">async</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:23">packet</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:27">len</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:36"><if pos:start="21:5" pos:end="23:36">if <condition pos:start="21:8" pos:end="21:31">(<expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:10">td</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:16">ctrl</name></name> <operator pos:start="21:18" pos:end="21:18">&amp;</operator> <name pos:start="21:20" pos:end="21:30">TD_CTRL_IOS</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:36"><block_content pos:start="23:9" pos:end="23:36">

        <expr_stmt pos:start="23:9" pos:end="23:36"><expr pos:start="23:9" pos:end="23:35"><name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:10">td</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:16">ctrl</name></name> <operator pos:start="23:18" pos:end="23:19">&amp;=</operator> <operator pos:start="23:21" pos:end="23:21">~</operator><name pos:start="23:22" pos:end="23:35">TD_CTRL_ACTIVE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="29:17"><if pos:start="27:5" pos:end="29:17">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:17"><block_content pos:start="29:9" pos:end="29:17">

        <goto pos:start="29:9" pos:end="29:17">goto <name pos:start="29:14" pos:end="29:16">out</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:7">len</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <name pos:start="33:11" pos:end="33:27"><name pos:start="33:11" pos:end="33:15">async</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:23">packet</name><operator pos:start="33:24" pos:end="33:24">.</operator><name pos:start="33:25" pos:end="33:27">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:57"><expr pos:start="35:5" pos:end="35:56"><name pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:6">td</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:12">ctrl</name></name> <operator pos:start="35:14" pos:end="35:14">=</operator> <operator pos:start="35:16" pos:end="35:16">(</operator><name pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:18">td</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:24">ctrl</name></name> <operator pos:start="35:26" pos:end="35:26">&amp;</operator> <operator pos:start="35:28" pos:end="35:28">~</operator><literal type="number" pos:start="35:29" pos:end="35:33">0x7ff</literal><operator pos:start="35:34" pos:end="35:34">)</operator> <operator pos:start="35:36" pos:end="35:36">|</operator> <operator pos:start="35:38" pos:end="35:38">(</operator><operator pos:start="35:39" pos:end="35:39">(</operator><name pos:start="35:40" pos:end="35:42">len</name> <operator pos:start="35:44" pos:end="35:44">-</operator> <literal type="number" pos:start="35:46" pos:end="35:46">1</literal><operator pos:start="35:47" pos:end="35:47">)</operator> <operator pos:start="35:49" pos:end="35:49">&amp;</operator> <literal type="number" pos:start="35:51" pos:end="35:55">0x7ff</literal><operator pos:start="35:56" pos:end="35:56">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="43:20">/* The NAK bit may have been set by a previous frame, so clear it

       here.  The docs are somewhat unclear, but win2k relies on this

       behavior.  */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:48"><expr pos:start="45:5" pos:end="45:47"><name pos:start="45:5" pos:end="45:12"><name pos:start="45:5" pos:end="45:6">td</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:12">ctrl</name></name> <operator pos:start="45:14" pos:end="45:15">&amp;=</operator> <operator pos:start="45:17" pos:end="45:17">~</operator><operator pos:start="45:18" pos:end="45:18">(</operator><name pos:start="45:19" pos:end="45:32">TD_CTRL_ACTIVE</name> <operator pos:start="45:34" pos:end="45:34">|</operator> <name pos:start="45:36" pos:end="45:46">TD_CTRL_NAK</name><operator pos:start="45:47" pos:end="45:47">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:26"><if pos:start="47:5" pos:end="49:26">if <condition pos:start="47:8" pos:end="47:31">(<expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:10">td</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:16">ctrl</name></name> <operator pos:start="47:18" pos:end="47:18">&amp;</operator> <name pos:start="47:20" pos:end="47:30">TD_CTRL_IOC</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:26"><block_content pos:start="49:9" pos:end="49:26">

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><operator pos:start="49:9" pos:end="49:9">*</operator><name pos:start="49:10" pos:end="49:17">int_mask</name> <operator pos:start="49:19" pos:end="49:20">|=</operator> <literal type="number" pos:start="49:22" pos:end="49:25">0x01</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="87:5"><if pos:start="53:5" pos:end="87:5">if <condition pos:start="53:8" pos:end="53:28">(<expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:11">pid</name> <operator pos:start="53:13" pos:end="53:14">==</operator> <name pos:start="53:16" pos:end="53:27">USB_TOKEN_IN</name></expr>)</condition> <block pos:start="53:30" pos:end="87:5">{<block_content pos:start="55:9" pos:end="85:9">

        <if_stmt pos:start="55:9" pos:end="61:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:26">(<expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:15">len</name> <operator pos:start="55:17" pos:end="55:17">&gt;</operator> <name pos:start="55:19" pos:end="55:25">max_len</name></expr>)</condition> <block pos:start="55:28" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:21">

            <expr_stmt pos:start="57:13" pos:end="57:33"><expr pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:32">USB_RET_BABBLE</name></expr>;</expr_stmt>

            <goto pos:start="59:13" pos:end="59:21">goto <name pos:start="59:18" pos:end="59:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:20">(<expr pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:15">len</name> <operator pos:start="65:17" pos:end="65:17">&gt;</operator> <literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr>)</condition> <block pos:start="65:22" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:70">

            <comment type="block" pos:start="67:13" pos:end="67:37">/* write the data back */</comment>

            <expr_stmt pos:start="69:13" pos:end="69:70"><expr pos:start="69:13" pos:end="69:69"><call pos:start="69:13" pos:end="69:69"><name pos:start="69:13" pos:end="69:37">cpu_physical_memory_write</name><argument_list pos:start="69:38" pos:end="69:69">(<argument pos:start="69:39" pos:end="69:48"><expr pos:start="69:39" pos:end="69:48"><name pos:start="69:39" pos:end="69:48"><name pos:start="69:39" pos:end="69:40">td</name><operator pos:start="69:41" pos:end="69:42">-&gt;</operator><name pos:start="69:43" pos:end="69:48">buffer</name></name></expr></argument>, <argument pos:start="69:51" pos:end="69:63"><expr pos:start="69:51" pos:end="69:63"><name pos:start="69:51" pos:end="69:63"><name pos:start="69:51" pos:end="69:55">async</name><operator pos:start="69:56" pos:end="69:57">-&gt;</operator><name pos:start="69:58" pos:end="69:63">buffer</name></name></expr></argument>, <argument pos:start="69:66" pos:end="69:68"><expr pos:start="69:66" pos:end="69:68"><name pos:start="69:66" pos:end="69:68">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="75:9" pos:end="85:9"><if pos:start="75:9" pos:end="85:9">if <condition pos:start="75:12" pos:end="75:54">(<expr pos:start="75:13" pos:end="75:53"><operator pos:start="75:13" pos:end="75:13">(</operator><name pos:start="75:14" pos:end="75:21"><name pos:start="75:14" pos:end="75:15">td</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:21">ctrl</name></name> <operator pos:start="75:23" pos:end="75:23">&amp;</operator> <name pos:start="75:25" pos:end="75:35">TD_CTRL_SPD</name><operator pos:start="75:36" pos:end="75:36">)</operator> <operator pos:start="75:38" pos:end="75:39">&amp;&amp;</operator> <name pos:start="75:41" pos:end="75:43">len</name> <operator pos:start="75:45" pos:end="75:45">&lt;</operator> <name pos:start="75:47" pos:end="75:53">max_len</name></expr>)</condition> <block pos:start="75:56" pos:end="85:9">{<block_content pos:start="77:13" pos:end="83:21">

            <expr_stmt pos:start="77:13" pos:end="77:30"><expr pos:start="77:13" pos:end="77:29"><operator pos:start="77:13" pos:end="77:13">*</operator><name pos:start="77:14" pos:end="77:21">int_mask</name> <operator pos:start="77:23" pos:end="77:24">|=</operator> <literal type="number" pos:start="77:26" pos:end="77:29">0x02</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="79:13" pos:end="79:48">/* short packet: do not update QH */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:89"><expr pos:start="81:13" pos:end="81:88"><call pos:start="81:13" pos:end="81:88"><name pos:start="81:13" pos:end="81:19">DPRINTF</name><argument_list pos:start="81:20" pos:end="81:88">(<argument pos:start="81:21" pos:end="81:62"><expr pos:start="81:21" pos:end="81:62"><literal type="string" pos:start="81:21" pos:end="81:62">"uhci: short packet. td 0x%x token 0x%x\n"</literal></expr></argument>, <argument pos:start="81:65" pos:end="81:73"><expr pos:start="81:65" pos:end="81:73"><name pos:start="81:65" pos:end="81:73"><name pos:start="81:65" pos:end="81:69">async</name><operator pos:start="81:70" pos:end="81:71">-&gt;</operator><name pos:start="81:72" pos:end="81:73">td</name></name></expr></argument>, <argument pos:start="81:76" pos:end="81:87"><expr pos:start="81:76" pos:end="81:87"><name pos:start="81:76" pos:end="81:87"><name pos:start="81:76" pos:end="81:80">async</name><operator pos:start="81:81" pos:end="81:82">-&gt;</operator><name pos:start="81:83" pos:end="81:87">token</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="83:13" pos:end="83:21">return <expr pos:start="83:20" pos:end="83:20"><literal type="number" pos:start="83:20" pos:end="83:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="91:5" pos:end="91:17">/* success */</comment>

    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>



<label pos:start="97:1" pos:end="97:4"><name pos:start="97:1" pos:end="97:3">out</name>:</label>

    <switch pos:start="99:5" pos:end="161:5">switch<condition pos:start="99:11" pos:end="99:15">(<expr pos:start="99:12" pos:end="99:14"><name pos:start="99:12" pos:end="99:14">ret</name></expr>)</condition> <block pos:start="99:17" pos:end="161:5">{<block_content pos:start="101:5" pos:end="159:14">

    <case pos:start="101:5" pos:end="101:23">case <expr pos:start="101:10" pos:end="101:22"><name pos:start="101:10" pos:end="101:22">USB_RET_STALL</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:34"><expr pos:start="103:9" pos:end="103:33"><name pos:start="103:9" pos:end="103:16"><name pos:start="103:9" pos:end="103:10">td</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:16">ctrl</name></name> <operator pos:start="103:18" pos:end="103:19">|=</operator> <name pos:start="103:21" pos:end="103:33">TD_CTRL_STALL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:36"><expr pos:start="105:9" pos:end="105:35"><name pos:start="105:9" pos:end="105:16"><name pos:start="105:9" pos:end="105:10">td</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:16">ctrl</name></name> <operator pos:start="105:18" pos:end="105:19">&amp;=</operator> <operator pos:start="105:21" pos:end="105:21">~</operator><name pos:start="105:22" pos:end="105:35">TD_CTRL_ACTIVE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:37"><expr pos:start="107:9" pos:end="107:36"><name pos:start="107:9" pos:end="107:17"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:17">status</name></name> <operator pos:start="107:19" pos:end="107:20">|=</operator> <name pos:start="107:22" pos:end="107:36">UHCI_STS_USBERR</name></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="113:9"><if pos:start="109:9" pos:end="113:9">if <condition pos:start="109:12" pos:end="109:35">(<expr pos:start="109:13" pos:end="109:34"><name pos:start="109:13" pos:end="109:20"><name pos:start="109:13" pos:end="109:14">td</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:20">ctrl</name></name> <operator pos:start="109:22" pos:end="109:22">&amp;</operator> <name pos:start="109:24" pos:end="109:34">TD_CTRL_IOC</name></expr>)</condition> <block pos:start="109:37" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:30">

            <expr_stmt pos:start="111:13" pos:end="111:30"><expr pos:start="111:13" pos:end="111:29"><operator pos:start="111:13" pos:end="111:13">*</operator><name pos:start="111:14" pos:end="111:21">int_mask</name> <operator pos:start="111:23" pos:end="111:24">|=</operator> <literal type="number" pos:start="111:26" pos:end="111:29">0x01</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:27"><expr pos:start="115:9" pos:end="115:26"><call pos:start="115:9" pos:end="115:26"><name pos:start="115:9" pos:end="115:23">uhci_update_irq</name><argument_list pos:start="115:24" pos:end="115:26">(<argument pos:start="115:25" pos:end="115:25"><expr pos:start="115:25" pos:end="115:25"><name pos:start="115:25" pos:end="115:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="117:9" pos:end="117:17">return <expr pos:start="117:16" pos:end="117:16"><literal type="number" pos:start="117:16" pos:end="117:16">1</literal></expr>;</return>



    <case pos:start="121:5" pos:end="121:24">case <expr pos:start="121:10" pos:end="121:23"><name pos:start="121:10" pos:end="121:23">USB_RET_BABBLE</name></expr>:</case>

        <expr_stmt pos:start="123:9" pos:end="123:51"><expr pos:start="123:9" pos:end="123:50"><name pos:start="123:9" pos:end="123:16"><name pos:start="123:9" pos:end="123:10">td</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:16">ctrl</name></name> <operator pos:start="123:18" pos:end="123:19">|=</operator> <name pos:start="123:21" pos:end="123:34">TD_CTRL_BABBLE</name> <operator pos:start="123:36" pos:end="123:36">|</operator> <name pos:start="123:38" pos:end="123:50">TD_CTRL_STALL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:36"><expr pos:start="125:9" pos:end="125:35"><name pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:10">td</name><operator pos:start="125:11" pos:end="125:12">-&gt;</operator><name pos:start="125:13" pos:end="125:16">ctrl</name></name> <operator pos:start="125:18" pos:end="125:19">&amp;=</operator> <operator pos:start="125:21" pos:end="125:21">~</operator><name pos:start="125:22" pos:end="125:35">TD_CTRL_ACTIVE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:37"><expr pos:start="127:9" pos:end="127:36"><name pos:start="127:9" pos:end="127:17"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:17">status</name></name> <operator pos:start="127:19" pos:end="127:20">|=</operator> <name pos:start="127:22" pos:end="127:36">UHCI_STS_USBERR</name></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="133:9"><if pos:start="129:9" pos:end="133:9">if <condition pos:start="129:12" pos:end="129:35">(<expr pos:start="129:13" pos:end="129:34"><name pos:start="129:13" pos:end="129:20"><name pos:start="129:13" pos:end="129:14">td</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:20">ctrl</name></name> <operator pos:start="129:22" pos:end="129:22">&amp;</operator> <name pos:start="129:24" pos:end="129:34">TD_CTRL_IOC</name></expr>)</condition> <block pos:start="129:37" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:30">

            <expr_stmt pos:start="131:13" pos:end="131:30"><expr pos:start="131:13" pos:end="131:29"><operator pos:start="131:13" pos:end="131:13">*</operator><name pos:start="131:14" pos:end="131:21">int_mask</name> <operator pos:start="131:23" pos:end="131:24">|=</operator> <literal type="number" pos:start="131:26" pos:end="131:29">0x01</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:27"><expr pos:start="135:9" pos:end="135:26"><call pos:start="135:9" pos:end="135:26"><name pos:start="135:9" pos:end="135:23">uhci_update_irq</name><argument_list pos:start="135:24" pos:end="135:26">(<argument pos:start="135:25" pos:end="135:25"><expr pos:start="135:25" pos:end="135:25"><name pos:start="135:25" pos:end="135:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="137:9" pos:end="137:31">/* frame interrupted */</comment>

        <return pos:start="139:9" pos:end="139:18">return <expr pos:start="139:16" pos:end="139:17"><operator pos:start="139:16" pos:end="139:16">-</operator><literal type="number" pos:start="139:17" pos:end="139:17">1</literal></expr>;</return>



    <case pos:start="143:5" pos:end="143:21">case <expr pos:start="143:10" pos:end="143:20"><name pos:start="143:10" pos:end="143:20">USB_RET_NAK</name></expr>:</case>

        <expr_stmt pos:start="145:9" pos:end="145:32"><expr pos:start="145:9" pos:end="145:31"><name pos:start="145:9" pos:end="145:16"><name pos:start="145:9" pos:end="145:10">td</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:16">ctrl</name></name> <operator pos:start="145:18" pos:end="145:19">|=</operator> <name pos:start="145:21" pos:end="145:31">TD_CTRL_NAK</name></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="149:18"><if pos:start="147:9" pos:end="149:18">if <condition pos:start="147:12" pos:end="147:35">(<expr pos:start="147:13" pos:end="147:34"><name pos:start="147:13" pos:end="147:15">pid</name> <operator pos:start="147:17" pos:end="147:18">==</operator> <name pos:start="147:20" pos:end="147:34">USB_TOKEN_SETUP</name></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:18"><block_content pos:start="149:13" pos:end="149:18">

            <break pos:start="149:13" pos:end="149:18">break;</break></block_content></block></if></if_stmt>

	<return pos:start="151:9" pos:end="151:17">return <expr pos:start="151:16" pos:end="151:16"><literal type="number" pos:start="151:16" pos:end="151:16">1</literal></expr>;</return>



    <case pos:start="155:5" pos:end="155:23">case <expr pos:start="155:10" pos:end="155:22"><name pos:start="155:10" pos:end="155:22">USB_RET_NODEV</name></expr>:</case>

    <default pos:start="157:5" pos:end="157:12">default:</default>

	<break pos:start="159:9" pos:end="159:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="165:5" pos:end="165:49">/* Retry the TD if error count is not zero */</comment>



    <expr_stmt pos:start="169:5" pos:end="169:32"><expr pos:start="169:5" pos:end="169:31"><name pos:start="169:5" pos:end="169:12"><name pos:start="169:5" pos:end="169:6">td</name><operator pos:start="169:7" pos:end="169:8">-&gt;</operator><name pos:start="169:9" pos:end="169:12">ctrl</name></name> <operator pos:start="169:14" pos:end="169:15">|=</operator> <name pos:start="169:17" pos:end="169:31">TD_CTRL_TIMEOUT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:48"><expr pos:start="171:5" pos:end="171:47"><name pos:start="171:5" pos:end="171:7">err</name> <operator pos:start="171:9" pos:end="171:9">=</operator> <operator pos:start="171:11" pos:end="171:11">(</operator><name pos:start="171:12" pos:end="171:19"><name pos:start="171:12" pos:end="171:13">td</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:19">ctrl</name></name> <operator pos:start="171:21" pos:end="171:22">&gt;&gt;</operator> <name pos:start="171:24" pos:end="171:42">TD_CTRL_ERROR_SHIFT</name><operator pos:start="171:43" pos:end="171:43">)</operator> <operator pos:start="171:45" pos:end="171:45">&amp;</operator> <literal type="number" pos:start="171:47" pos:end="171:47">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="173:5" pos:end="191:5"><if pos:start="173:5" pos:end="191:5">if <condition pos:start="173:8" pos:end="173:17">(<expr pos:start="173:9" pos:end="173:16"><name pos:start="173:9" pos:end="173:11">err</name> <operator pos:start="173:13" pos:end="173:14">!=</operator> <literal type="number" pos:start="173:16" pos:end="173:16">0</literal></expr>)</condition> <block pos:start="173:19" pos:end="191:5">{<block_content pos:start="175:9" pos:end="189:9">

        <expr_stmt pos:start="175:9" pos:end="175:14"><expr pos:start="175:9" pos:end="175:13"><name pos:start="175:9" pos:end="175:11">err</name><operator pos:start="175:12" pos:end="175:13">--</operator></expr>;</expr_stmt>

        <if_stmt pos:start="177:9" pos:end="189:9"><if pos:start="177:9" pos:end="189:9">if <condition pos:start="177:12" pos:end="177:21">(<expr pos:start="177:13" pos:end="177:20"><name pos:start="177:13" pos:end="177:15">err</name> <operator pos:start="177:17" pos:end="177:18">==</operator> <literal type="number" pos:start="177:20" pos:end="177:20">0</literal></expr>)</condition> <block pos:start="177:23" pos:end="189:9">{<block_content pos:start="179:13" pos:end="187:31">

            <expr_stmt pos:start="179:13" pos:end="179:40"><expr pos:start="179:13" pos:end="179:39"><name pos:start="179:13" pos:end="179:20"><name pos:start="179:13" pos:end="179:14">td</name><operator pos:start="179:15" pos:end="179:16">-&gt;</operator><name pos:start="179:17" pos:end="179:20">ctrl</name></name> <operator pos:start="179:22" pos:end="179:23">&amp;=</operator> <operator pos:start="179:25" pos:end="179:25">~</operator><name pos:start="179:26" pos:end="179:39">TD_CTRL_ACTIVE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:41"><expr pos:start="181:13" pos:end="181:40"><name pos:start="181:13" pos:end="181:21"><name pos:start="181:13" pos:end="181:13">s</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:21">status</name></name> <operator pos:start="181:23" pos:end="181:24">|=</operator> <name pos:start="181:26" pos:end="181:40">UHCI_STS_USBERR</name></expr>;</expr_stmt>

            <if_stmt pos:start="183:13" pos:end="185:34"><if pos:start="183:13" pos:end="185:34">if <condition pos:start="183:16" pos:end="183:39">(<expr pos:start="183:17" pos:end="183:38"><name pos:start="183:17" pos:end="183:24"><name pos:start="183:17" pos:end="183:18">td</name><operator pos:start="183:19" pos:end="183:20">-&gt;</operator><name pos:start="183:21" pos:end="183:24">ctrl</name></name> <operator pos:start="183:26" pos:end="183:26">&amp;</operator> <name pos:start="183:28" pos:end="183:38">TD_CTRL_IOC</name></expr>)</condition><block type="pseudo" pos:start="185:17" pos:end="185:34"><block_content pos:start="185:17" pos:end="185:34">

                <expr_stmt pos:start="185:17" pos:end="185:34"><expr pos:start="185:17" pos:end="185:33"><operator pos:start="185:17" pos:end="185:17">*</operator><name pos:start="185:18" pos:end="185:25">int_mask</name> <operator pos:start="185:27" pos:end="185:28">|=</operator> <literal type="number" pos:start="185:30" pos:end="185:33">0x01</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:31"><expr pos:start="187:13" pos:end="187:30"><call pos:start="187:13" pos:end="187:30"><name pos:start="187:13" pos:end="187:27">uhci_update_irq</name><argument_list pos:start="187:28" pos:end="187:30">(<argument pos:start="187:29" pos:end="187:29"><expr pos:start="187:29" pos:end="187:29"><name pos:start="187:29" pos:end="187:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="193:5" pos:end="195:37"><expr pos:start="193:5" pos:end="195:36"><name pos:start="193:5" pos:end="193:12"><name pos:start="193:5" pos:end="193:6">td</name><operator pos:start="193:7" pos:end="193:8">-&gt;</operator><name pos:start="193:9" pos:end="193:12">ctrl</name></name> <operator pos:start="193:14" pos:end="193:14">=</operator> <operator pos:start="193:16" pos:end="193:16">(</operator><name pos:start="193:17" pos:end="193:24"><name pos:start="193:17" pos:end="193:18">td</name><operator pos:start="193:19" pos:end="193:20">-&gt;</operator><name pos:start="193:21" pos:end="193:24">ctrl</name></name> <operator pos:start="193:26" pos:end="193:26">&amp;</operator> <operator pos:start="193:28" pos:end="193:28">~</operator><operator pos:start="193:29" pos:end="193:29">(</operator><literal type="number" pos:start="193:30" pos:end="193:30">3</literal> <operator pos:start="193:32" pos:end="193:33">&lt;&lt;</operator> <name pos:start="193:35" pos:end="193:53">TD_CTRL_ERROR_SHIFT</name><operator pos:start="193:54" pos:end="193:54">)</operator><operator pos:start="193:55" pos:end="193:55">)</operator> <operator pos:start="193:57" pos:end="193:57">|</operator>

        <operator pos:start="195:9" pos:end="195:9">(</operator><name pos:start="195:10" pos:end="195:12">err</name> <operator pos:start="195:14" pos:end="195:15">&lt;&lt;</operator> <name pos:start="195:17" pos:end="195:35">TD_CTRL_ERROR_SHIFT</name><operator pos:start="195:36" pos:end="195:36">)</operator></expr>;</expr_stmt>

    <return pos:start="197:5" pos:end="197:13">return <expr pos:start="197:12" pos:end="197:12"><literal type="number" pos:start="197:12" pos:end="197:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
