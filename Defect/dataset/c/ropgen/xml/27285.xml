<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27285.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">ahci_migrate</name><parameter_list pos:start="1:25" pos:end="1:75">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:35">AHCIQState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">from</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:53">AHCIQState</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">to</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:74"><decl pos:start="1:60" pos:end="1:74"><type pos:start="1:60" pos:end="1:74"><specifier pos:start="1:60" pos:end="1:64">const</specifier> <name pos:start="1:66" pos:end="1:69">char</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">uri</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:22">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">QOSState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">tmp</name> <init pos:start="5:19" pos:end="5:30">= <expr pos:start="5:21" pos:end="5:30"><name pos:start="5:21" pos:end="5:30"><name pos:start="5:21" pos:end="5:22">to</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:30">parent</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">QPCIDevice</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">dev</name> <init pos:start="7:21" pos:end="7:29">= <expr pos:start="7:23" pos:end="7:29"><name pos:start="7:23" pos:end="7:29"><name pos:start="7:23" pos:end="7:24">to</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:29">dev</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:19">uri_local</name> <init pos:start="9:21" pos:end="9:26">= <expr pos:start="9:23" pos:end="9:26"><name pos:start="9:23" pos:end="9:26">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:11">uri</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <name pos:start="13:16" pos:end="13:19">NULL</name></expr>)</condition> <block pos:start="13:22" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:24">

        <expr_stmt pos:start="15:9" pos:end="15:65"><expr pos:start="15:9" pos:end="15:64"><name pos:start="15:9" pos:end="15:17">uri_local</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <call pos:start="15:21" pos:end="15:64"><name pos:start="15:21" pos:end="15:35">g_strdup_printf</name><argument_list pos:start="15:36" pos:end="15:64">(<argument pos:start="15:37" pos:end="15:42"><expr pos:start="15:37" pos:end="15:42"><literal type="string" pos:start="15:37" pos:end="15:42">"%s%s"</literal></expr></argument>, <argument pos:start="15:45" pos:end="15:51"><expr pos:start="15:45" pos:end="15:51"><literal type="string" pos:start="15:45" pos:end="15:51">"unix:"</literal></expr></argument>, <argument pos:start="15:54" pos:end="15:63"><expr pos:start="15:54" pos:end="15:63"><name pos:start="15:54" pos:end="15:63">mig_socket</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:24"><expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:11">uri</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:23">uri_local</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:48">/* context will be 'to' after completion. */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><call pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:11">migrate</name><argument_list pos:start="25:12" pos:end="25:42">(<argument pos:start="25:13" pos:end="25:24"><expr pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:16">from</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:24">parent</name></name></expr></argument>, <argument pos:start="25:27" pos:end="25:36"><expr pos:start="25:27" pos:end="25:36"><name pos:start="25:27" pos:end="25:36"><name pos:start="25:27" pos:end="25:28">to</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:36">parent</name></name></expr></argument>, <argument pos:start="25:39" pos:end="25:41"><expr pos:start="25:39" pos:end="25:41"><name pos:start="25:39" pos:end="25:41">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="33:60">/* We'd like for the AHCIState objects to still point

     * to information specific to its specific parent

     * instance, but otherwise just inherit the new data. */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><call pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:10">memcpy</name><argument_list pos:start="35:11" pos:end="35:40">(<argument pos:start="35:12" pos:end="35:13"><expr pos:start="35:12" pos:end="35:13"><name pos:start="35:12" pos:end="35:13">to</name></expr></argument>, <argument pos:start="35:16" pos:end="35:19"><expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">from</name></expr></argument>, <argument pos:start="35:22" pos:end="35:39"><expr pos:start="35:22" pos:end="35:39"><sizeof pos:start="35:22" pos:end="35:39">sizeof<argument_list pos:start="35:28" pos:end="35:39">(<argument pos:start="35:29" pos:end="35:38"><expr pos:start="35:29" pos:end="35:38"><name pos:start="35:29" pos:end="35:38">AHCIQState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:6">to</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:14">parent</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:20">tmp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:18"><expr pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:6">to</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:11">dev</name></name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:17">dev</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:23"><expr pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:7">tmp</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <name pos:start="43:11" pos:end="43:22"><name pos:start="43:11" pos:end="43:14">from</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:22">parent</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:20"><expr pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:7">dev</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <name pos:start="45:11" pos:end="45:19"><name pos:start="45:11" pos:end="45:14">from</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:19">dev</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:43"><expr pos:start="47:5" pos:end="47:42"><call pos:start="47:5" pos:end="47:42"><name pos:start="47:5" pos:end="47:10">memset</name><argument_list pos:start="47:11" pos:end="47:42">(<argument pos:start="47:12" pos:end="47:15"><expr pos:start="47:12" pos:end="47:15"><name pos:start="47:12" pos:end="47:15">from</name></expr></argument>, <argument pos:start="47:18" pos:end="47:21"><expr pos:start="47:18" pos:end="47:21"><literal type="number" pos:start="47:18" pos:end="47:21">0x00</literal></expr></argument>, <argument pos:start="47:24" pos:end="47:41"><expr pos:start="47:24" pos:end="47:41"><sizeof pos:start="47:24" pos:end="47:41">sizeof<argument_list pos:start="47:30" pos:end="47:41">(<argument pos:start="47:31" pos:end="47:40"><expr pos:start="47:31" pos:end="47:40"><name pos:start="47:31" pos:end="47:40">AHCIQState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:23"><expr pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:8">from</name><operator pos:start="49:9" pos:end="49:10">-&gt;</operator><name pos:start="49:11" pos:end="49:16">parent</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:22">tmp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:8">from</name><operator pos:start="51:9" pos:end="51:10">-&gt;</operator><name pos:start="51:11" pos:end="51:13">dev</name></name> <operator pos:start="51:15" pos:end="51:15">=</operator> <name pos:start="51:17" pos:end="51:19">dev</name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:21"><expr pos:start="55:5" pos:end="55:20"><call pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:16">verify_state</name><argument_list pos:start="55:17" pos:end="55:20">(<argument pos:start="55:18" pos:end="55:19"><expr pos:start="55:18" pos:end="55:19"><name pos:start="55:18" pos:end="55:19">to</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:22"><expr pos:start="57:5" pos:end="57:21"><call pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:10">g_free</name><argument_list pos:start="57:11" pos:end="57:21">(<argument pos:start="57:12" pos:end="57:20"><expr pos:start="57:12" pos:end="57:20"><name pos:start="57:12" pos:end="57:20">uri_local</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
