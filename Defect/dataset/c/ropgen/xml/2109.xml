<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2109.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">ff_dirac_golomb_read_32bit</name><parameter_list pos:start="1:31" pos:end="3:68">(<parameter pos:start="1:32" pos:end="1:54"><decl pos:start="1:32" pos:end="1:54"><type pos:start="1:32" pos:end="1:54"><name pos:start="1:32" pos:end="1:45">DiracGolombLUT</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:54">lut_ctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:74"><decl pos:start="1:57" pos:end="1:74"><type pos:start="1:57" pos:end="1:74"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:69">uint8_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">buf</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:40"><decl pos:start="3:32" pos:end="3:40"><type pos:start="3:32" pos:end="3:40"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:40">bytes</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:49">uint8_t</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:55">_dst</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:67"><decl pos:start="3:58" pos:end="3:67"><type pos:start="3:58" pos:end="3:67"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:67">coeffs</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:17">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">b</name></decl>, <decl pos:start="7:15" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:19">c_idx</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int32_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">dst</name> <init pos:start="9:18" pos:end="9:34">= <expr pos:start="9:20" pos:end="9:34"><operator pos:start="9:20" pos:end="9:20">(</operator><name pos:start="9:21" pos:end="9:27">int32_t</name> <operator pos:start="9:29" pos:end="9:29">*</operator><operator pos:start="9:30" pos:end="9:30">)</operator><name pos:start="9:31" pos:end="9:34">_dst</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:66"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">DiracGolombLUT</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:29"><name pos:start="11:21" pos:end="11:26">future</name><index pos:start="11:27" pos:end="11:29">[<expr pos:start="11:28" pos:end="11:28"><literal type="number" pos:start="11:28" pos:end="11:28">4</literal></expr>]</index></name></decl>, <decl pos:start="11:32" pos:end="11:65"><type ref="prev" pos:start="11:5" pos:end="11:20"><modifier pos:start="11:32" pos:end="11:32">*</modifier></type><name pos:start="11:33" pos:end="11:33">l</name> <init pos:start="11:35" pos:end="11:65">= <expr pos:start="11:37" pos:end="11:65"><operator pos:start="11:37" pos:end="11:37">&amp;</operator><name pos:start="11:38" pos:end="11:65"><name pos:start="11:38" pos:end="11:44">lut_ctx</name><index pos:start="11:45" pos:end="11:65">[<expr pos:start="11:46" pos:end="11:64"><literal type="number" pos:start="11:46" pos:end="11:46">2</literal><operator pos:start="11:47" pos:end="11:47">*</operator><name pos:start="11:48" pos:end="11:55">LUT_SIZE</name> <operator pos:start="11:57" pos:end="11:57">+</operator> <name pos:start="11:59" pos:end="11:64"><name pos:start="11:59" pos:end="11:61">buf</name><index pos:start="11:62" pos:end="11:64">[<expr pos:start="11:63" pos:end="11:63"><literal type="number" pos:start="11:63" pos:end="11:63">0</literal></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><call pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:16">INIT_RESIDUE</name><argument_list pos:start="13:17" pos:end="13:21">(<argument pos:start="13:18" pos:end="13:20"><expr pos:start="13:18" pos:end="13:20"><name pos:start="13:18" pos:end="13:20">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="17:5" pos:end="71:5">for <control pos:start="17:9" pos:end="17:32">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">b</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">1</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:27"><expr pos:start="17:17" pos:end="17:26"><name pos:start="17:17" pos:end="17:17">b</name> <operator pos:start="17:19" pos:end="17:20">&lt;=</operator> <name pos:start="17:22" pos:end="17:26">bytes</name></expr>;</condition> <incr pos:start="17:29" pos:end="17:31"><expr pos:start="17:29" pos:end="17:31"><name pos:start="17:29" pos:end="17:29">b</name><operator pos:start="17:30" pos:end="17:31">++</operator></expr></incr>)</control> <block pos:start="17:34" pos:end="71:5">{<block_content pos:start="19:9" pos:end="69:65">

        <expr_stmt pos:start="19:9" pos:end="19:37"><expr pos:start="19:9" pos:end="19:36"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:14">future</name><index pos:start="19:15" pos:end="19:17">[<expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>]</index></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <operator pos:start="19:21" pos:end="19:21">&amp;</operator><name pos:start="19:22" pos:end="19:36"><name pos:start="19:22" pos:end="19:28">lut_ctx</name><index pos:start="19:29" pos:end="19:36">[<expr pos:start="19:30" pos:end="19:35"><name pos:start="19:30" pos:end="19:35"><name pos:start="19:30" pos:end="19:32">buf</name><index pos:start="19:33" pos:end="19:35">[<expr pos:start="19:34" pos:end="19:34"><name pos:start="19:34" pos:end="19:34">b</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:43"><expr pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:14">future</name><index pos:start="21:15" pos:end="21:17">[<expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">1</literal></expr>]</index></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:29"><name pos:start="21:21" pos:end="21:26">future</name><index pos:start="21:27" pos:end="21:29">[<expr pos:start="21:28" pos:end="21:28"><literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr>]</index></name> <operator pos:start="21:31" pos:end="21:31">+</operator> <literal type="number" pos:start="21:33" pos:end="21:33">1</literal><operator pos:start="21:34" pos:end="21:34">*</operator><name pos:start="21:35" pos:end="21:42">LUT_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:43"><expr pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:14">future</name><index pos:start="23:15" pos:end="23:17">[<expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">2</literal></expr>]</index></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:29"><name pos:start="23:21" pos:end="23:26">future</name><index pos:start="23:27" pos:end="23:29">[<expr pos:start="23:28" pos:end="23:28"><literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr>]</index></name> <operator pos:start="23:31" pos:end="23:31">+</operator> <literal type="number" pos:start="23:33" pos:end="23:33">2</literal><operator pos:start="23:34" pos:end="23:34">*</operator><name pos:start="23:35" pos:end="23:42">LUT_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:14">future</name><index pos:start="25:15" pos:end="25:17">[<expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">3</literal></expr>]</index></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:29"><name pos:start="25:21" pos:end="25:26">future</name><index pos:start="25:27" pos:end="25:29">[<expr pos:start="25:28" pos:end="25:28"><literal type="number" pos:start="25:28" pos:end="25:28">0</literal></expr>]</index></name> <operator pos:start="25:31" pos:end="25:31">+</operator> <literal type="number" pos:start="25:33" pos:end="25:33">3</literal><operator pos:start="25:34" pos:end="25:34">*</operator><name pos:start="25:35" pos:end="25:42">LUT_SIZE</name></expr>;</expr_stmt>



        <if_stmt pos:start="29:9" pos:end="31:25"><if pos:start="29:9" pos:end="31:25">if <condition pos:start="29:12" pos:end="29:33">(<expr pos:start="29:13" pos:end="29:32"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:18">c_idx</name> <operator pos:start="29:20" pos:end="29:20">+</operator> <literal type="number" pos:start="29:22" pos:end="29:22">1</literal><operator pos:start="29:23" pos:end="29:23">)</operator> <operator pos:start="29:25" pos:end="29:25">&gt;</operator> <name pos:start="29:27" pos:end="29:32">coeffs</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:25"><block_content pos:start="31:13" pos:end="31:25">

            <return pos:start="31:13" pos:end="31:25">return <expr pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:24">c_idx</name></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="35:9" pos:end="35:61">/* res_bits is a hint for better branch prediction */</comment>

        <if_stmt pos:start="37:9" pos:end="55:9"><if pos:start="37:9" pos:end="55:9">if <condition pos:start="37:12" pos:end="37:32">(<expr pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:20">res_bits</name> <operator pos:start="37:22" pos:end="37:23">&amp;&amp;</operator> <name pos:start="37:25" pos:end="37:31"><name pos:start="37:25" pos:end="37:25">l</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:31">sign</name></name></expr>)</condition> <block pos:start="37:34" pos:end="55:9">{<block_content pos:start="39:13" pos:end="53:35">

            <decl_stmt pos:start="39:13" pos:end="39:30"><decl pos:start="39:13" pos:end="39:29"><type pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:19">int32_t</name></type> <name pos:start="39:21" pos:end="39:25">coeff</name> <init pos:start="39:27" pos:end="39:29">= <expr pos:start="39:29" pos:end="39:29"><literal type="number" pos:start="39:29" pos:end="39:29">1</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:45"><expr pos:start="41:13" pos:end="41:44"><call pos:start="41:13" pos:end="41:44"><name pos:start="41:13" pos:end="41:26">APPEND_RESIDUE</name><argument_list pos:start="41:27" pos:end="41:44">(<argument pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:30">res</name></expr></argument>, <argument pos:start="41:33" pos:end="41:43"><expr pos:start="41:33" pos:end="41:43"><name pos:start="41:33" pos:end="41:43"><name pos:start="41:33" pos:end="41:33">l</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:43">preamble</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="43:13" pos:end="49:13">for <control pos:start="43:17" pos:end="43:53">(<init pos:start="43:18" pos:end="43:23"><expr pos:start="43:18" pos:end="43:22"><name pos:start="43:18" pos:end="43:18">i</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</init> <condition pos:start="43:25" pos:end="43:48"><expr pos:start="43:25" pos:end="43:47"><name pos:start="43:25" pos:end="43:25">i</name> <operator pos:start="43:27" pos:end="43:27">&lt;</operator> <operator pos:start="43:29" pos:end="43:29">(</operator><name pos:start="43:30" pos:end="43:37">res_bits</name> <operator pos:start="43:39" pos:end="43:40">&gt;&gt;</operator> <literal type="number" pos:start="43:42" pos:end="43:42">1</literal><operator pos:start="43:43" pos:end="43:43">)</operator> <operator pos:start="43:45" pos:end="43:45">-</operator> <literal type="number" pos:start="43:47" pos:end="43:47">1</literal></expr>;</condition> <incr pos:start="43:50" pos:end="43:52"><expr pos:start="43:50" pos:end="43:52"><name pos:start="43:50" pos:end="43:50">i</name><operator pos:start="43:51" pos:end="43:52">++</operator></expr></incr>)</control> <block pos:start="43:55" pos:end="49:13">{<block_content pos:start="45:17" pos:end="47:61">

                <expr_stmt pos:start="45:17" pos:end="45:28"><expr pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:21">coeff</name> <operator pos:start="45:23" pos:end="45:25">&lt;&lt;=</operator> <literal type="number" pos:start="45:27" pos:end="45:27">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:61"><expr pos:start="47:17" pos:end="47:60"><name pos:start="47:17" pos:end="47:21">coeff</name> <operator pos:start="47:23" pos:end="47:24">|=</operator> <operator pos:start="47:26" pos:end="47:26">(</operator><name pos:start="47:27" pos:end="47:29">res</name> <operator pos:start="47:31" pos:end="47:32">&gt;&gt;</operator> <operator pos:start="47:34" pos:end="47:34">(</operator><name pos:start="47:35" pos:end="47:44">RSIZE_BITS</name> <operator pos:start="47:46" pos:end="47:46">-</operator> <literal type="number" pos:start="47:48" pos:end="47:48">2</literal><operator pos:start="47:49" pos:end="47:49">*</operator><name pos:start="47:50" pos:end="47:50">i</name> <operator pos:start="47:52" pos:end="47:52">-</operator> <literal type="number" pos:start="47:54" pos:end="47:54">2</literal><operator pos:start="47:55" pos:end="47:55">)</operator><operator pos:start="47:56" pos:end="47:56">)</operator> <operator pos:start="47:58" pos:end="47:58">&amp;</operator> <literal type="number" pos:start="47:60" pos:end="47:60">1</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="51:13" pos:end="51:49"><expr pos:start="51:13" pos:end="51:48"><name pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:15">dst</name><index pos:start="51:16" pos:end="51:24">[<expr pos:start="51:17" pos:end="51:23"><name pos:start="51:17" pos:end="51:21">c_idx</name><operator pos:start="51:22" pos:end="51:23">++</operator></expr>]</index></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <name pos:start="51:28" pos:end="51:34"><name pos:start="51:28" pos:end="51:28">l</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:34">sign</name></name> <operator pos:start="51:36" pos:end="51:36">*</operator> <operator pos:start="51:38" pos:end="51:38">(</operator><name pos:start="51:39" pos:end="51:43">coeff</name> <operator pos:start="51:45" pos:end="51:45">-</operator> <literal type="number" pos:start="51:47" pos:end="51:47">1</literal><operator pos:start="51:48" pos:end="51:48">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:35"><expr pos:start="53:13" pos:end="53:34"><call pos:start="53:13" pos:end="53:34"><name pos:start="53:13" pos:end="53:23">SET_RESIDUE</name><argument_list pos:start="53:24" pos:end="53:34">(<argument pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:27">res</name></expr></argument>, <argument pos:start="53:30" pos:end="53:30"><expr pos:start="53:30" pos:end="53:30"><literal type="number" pos:start="53:30" pos:end="53:30">0</literal></expr></argument>, <argument pos:start="53:33" pos:end="53:33"><expr pos:start="53:33" pos:end="53:33"><literal type="number" pos:start="53:33" pos:end="53:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:64"><expr pos:start="59:9" pos:end="59:63"><call pos:start="59:9" pos:end="59:63"><name pos:start="59:9" pos:end="59:14">memcpy</name><argument_list pos:start="59:15" pos:end="59:63">(<argument pos:start="59:16" pos:end="59:26"><expr pos:start="59:16" pos:end="59:26"><operator pos:start="59:16" pos:end="59:16">&amp;</operator><name pos:start="59:17" pos:end="59:26"><name pos:start="59:17" pos:end="59:19">dst</name><index pos:start="59:20" pos:end="59:26">[<expr pos:start="59:21" pos:end="59:25"><name pos:start="59:21" pos:end="59:25">c_idx</name></expr>]</index></name></expr></argument>, <argument pos:start="59:29" pos:end="59:36"><expr pos:start="59:29" pos:end="59:36"><name pos:start="59:29" pos:end="59:36"><name pos:start="59:29" pos:end="59:29">l</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:36">ready</name></name></expr></argument>, <argument pos:start="59:39" pos:end="59:62"><expr pos:start="59:39" pos:end="59:62"><name pos:start="59:39" pos:end="59:46">LUT_BITS</name><operator pos:start="59:47" pos:end="59:47">*</operator><sizeof pos:start="59:48" pos:end="59:62">sizeof<argument_list pos:start="59:54" pos:end="59:62">(<argument pos:start="59:55" pos:end="59:61"><expr pos:start="59:55" pos:end="59:61"><name pos:start="59:55" pos:end="59:61">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:30"><expr pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:13">c_idx</name> <operator pos:start="61:15" pos:end="61:16">+=</operator> <name pos:start="61:18" pos:end="61:29"><name pos:start="61:18" pos:end="61:18">l</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:29">ready_num</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:41"><expr pos:start="65:9" pos:end="65:40"><call pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:22">APPEND_RESIDUE</name><argument_list pos:start="65:23" pos:end="65:40">(<argument pos:start="65:24" pos:end="65:26"><expr pos:start="65:24" pos:end="65:26"><name pos:start="65:24" pos:end="65:26">res</name></expr></argument>, <argument pos:start="65:29" pos:end="65:39"><expr pos:start="65:29" pos:end="65:39"><name pos:start="65:29" pos:end="65:39"><name pos:start="65:29" pos:end="65:29">l</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:39">leftover</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:65"><expr pos:start="69:9" pos:end="69:64"><name pos:start="69:9" pos:end="69:9">l</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <name pos:start="69:13" pos:end="69:64"><name pos:start="69:13" pos:end="69:18">future</name><index pos:start="69:19" pos:end="69:64">[<expr pos:start="69:20" pos:end="69:63"><ternary pos:start="69:20" pos:end="69:63"><condition pos:start="69:20" pos:end="69:30"><expr pos:start="69:20" pos:end="69:28"><name pos:start="69:20" pos:end="69:28"><name pos:start="69:20" pos:end="69:20">l</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:28">need_s</name></name></expr> ?</condition><then pos:start="69:32" pos:end="69:32"> <expr pos:start="69:32" pos:end="69:32"><literal type="number" pos:start="69:32" pos:end="69:32">3</literal></expr> </then><else pos:start="69:34" pos:end="69:63">: <expr pos:start="69:36" pos:end="69:63"><ternary pos:start="69:36" pos:end="69:63"><condition pos:start="69:36" pos:end="69:46"><expr pos:start="69:36" pos:end="69:44"><operator pos:start="69:36" pos:end="69:36">!</operator><name pos:start="69:37" pos:end="69:44">res_bits</name></expr> ?</condition><then pos:start="69:48" pos:end="69:48"> <expr pos:start="69:48" pos:end="69:48"><literal type="number" pos:start="69:48" pos:end="69:48">2</literal></expr> </then><else pos:start="69:50" pos:end="69:63">: <expr pos:start="69:52" pos:end="69:63"><name pos:start="69:52" pos:end="69:59">res_bits</name> <operator pos:start="69:61" pos:end="69:61">&amp;</operator> <literal type="number" pos:start="69:63" pos:end="69:63">1</literal></expr></else></ternary></expr></else></ternary></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="75:5" pos:end="75:17">return <expr pos:start="75:12" pos:end="75:16"><name pos:start="75:12" pos:end="75:16">c_idx</name></expr>;</return>

</block_content>}</block></function>
</unit>
