<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4051.c" pos:tabs="8"><function pos:start="1:1" pos:end="138:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">double</name></type> <name pos:start="1:15" pos:end="1:24">get_qscale</name><parameter_list pos:start="1:25" pos:end="1:101">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:39">MpegEncContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:65"><decl pos:start="1:45" pos:end="1:65"><type pos:start="1:45" pos:end="1:65"><name pos:start="1:45" pos:end="1:60">RateControlEntry</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">rce</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:85"><decl pos:start="1:68" pos:end="1:85"><type pos:start="1:68" pos:end="1:85"><name pos:start="1:68" pos:end="1:73">double</name></type> <name pos:start="1:75" pos:end="1:85">rate_factor</name></decl></parameter>, <parameter pos:start="1:88" pos:end="1:100"><decl pos:start="1:88" pos:end="1:100"><type pos:start="1:88" pos:end="1:100"><name pos:start="1:88" pos:end="1:90">int</name></type> <name pos:start="1:92" pos:end="1:100">frame_num</name></decl></parameter>)</parameter_list><block pos:start="1:102" pos:end="138:1">{<block_content pos:start="3:5" pos:end="136:13">

    <decl_stmt pos:start="3:5" pos:end="3:44"><decl pos:start="3:5" pos:end="3:43"><type pos:start="3:5" pos:end="3:24"><name pos:start="3:5" pos:end="3:22">RateControlContext</name> <modifier pos:start="3:24" pos:end="3:24">*</modifier></type><name pos:start="3:25" pos:end="3:27">rcc</name><init pos:start="3:28" pos:end="3:43">= <expr pos:start="3:30" pos:end="3:43"><operator pos:start="3:30" pos:end="3:30">&amp;</operator><name pos:start="3:31" pos:end="3:43"><name pos:start="3:31" pos:end="3:31">s</name><operator pos:start="3:32" pos:end="3:33">-&gt;</operator><name pos:start="3:34" pos:end="3:43">rc_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AVCodecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">a</name><init pos:start="5:22" pos:end="5:31">= <expr pos:start="5:24" pos:end="5:31"><name pos:start="5:24" pos:end="5:31"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:31">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">double</name></type> <name pos:start="7:12" pos:end="7:12">q</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:15" pos:end="7:18">bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:23">pict_type</name><init pos:start="9:24" pos:end="9:43">= <expr pos:start="9:26" pos:end="9:43"><name pos:start="9:26" pos:end="9:43"><name pos:start="9:26" pos:end="9:28">rce</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:43">new_pict_type</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:16">double</name></type> <name pos:start="11:18" pos:end="11:23">mb_num</name><init pos:start="11:24" pos:end="11:34">= <expr pos:start="11:26" pos:end="11:34"><name pos:start="11:26" pos:end="11:34"><name pos:start="11:26" pos:end="11:26">s</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:34">mb_num</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="69:6"><decl pos:start="17:5" pos:end="69:5"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">double</name></type> <name pos:start="17:12" pos:end="17:25"><name pos:start="17:12" pos:end="17:23">const_values</name><index pos:start="17:24" pos:end="17:25">[]</index></name><init pos:start="17:26" pos:end="69:5">=<expr pos:start="17:27" pos:end="69:5"><block pos:start="17:27" pos:end="69:5">{

        <expr pos:start="19:9" pos:end="19:12"><name pos:start="19:9" pos:end="19:12">M_PI</name></expr>,

        <expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">M_E</name></expr>,

        <expr pos:start="23:9" pos:end="23:35"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:11">rce</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:23">i_tex_bits</name></name><operator pos:start="23:24" pos:end="23:24">*</operator><name pos:start="23:25" pos:end="23:35"><name pos:start="23:25" pos:end="23:27">rce</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:35">qscale</name></name></expr>,

        <expr pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:11">rce</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:23">p_tex_bits</name></name><operator pos:start="25:24" pos:end="25:24">*</operator><name pos:start="25:25" pos:end="25:35"><name pos:start="25:25" pos:end="25:27">rce</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:35">qscale</name></name></expr>,

        <expr pos:start="27:9" pos:end="27:63"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:24"><name pos:start="27:10" pos:end="27:12">rce</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:24">i_tex_bits</name></name> <operator pos:start="27:26" pos:end="27:26">+</operator> <name pos:start="27:28" pos:end="27:42"><name pos:start="27:28" pos:end="27:30">rce</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:42">p_tex_bits</name></name><operator pos:start="27:43" pos:end="27:43">)</operator><operator pos:start="27:44" pos:end="27:44">*</operator><operator pos:start="27:45" pos:end="27:45">(</operator><name pos:start="27:46" pos:end="27:51">double</name><operator pos:start="27:52" pos:end="27:52">)</operator><name pos:start="27:53" pos:end="27:63"><name pos:start="27:53" pos:end="27:55">rce</name><operator pos:start="27:56" pos:end="27:57">-&gt;</operator><name pos:start="27:58" pos:end="27:63">qscale</name></name></expr>,

        <expr pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:11">rce</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:20">mv_bits</name></name><operator pos:start="29:21" pos:end="29:21">/</operator><name pos:start="29:22" pos:end="29:27">mb_num</name></expr>,

        <expr pos:start="31:9" pos:end="31:80"><name pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:11">rce</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:22">pict_type</name></name> <operator pos:start="31:24" pos:end="31:25">==</operator> <name pos:start="31:27" pos:end="31:32">B_TYPE</name> <operator pos:start="31:34" pos:end="31:34">?</operator> <operator pos:start="31:36" pos:end="31:36">(</operator><name pos:start="31:37" pos:end="31:47"><name pos:start="31:37" pos:end="31:39">rce</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:47">f_code</name></name> <operator pos:start="31:49" pos:end="31:49">+</operator> <name pos:start="31:51" pos:end="31:61"><name pos:start="31:51" pos:end="31:53">rce</name><operator pos:start="31:54" pos:end="31:55">-&gt;</operator><name pos:start="31:56" pos:end="31:61">b_code</name></name><operator pos:start="31:62" pos:end="31:62">)</operator><operator pos:start="31:63" pos:end="31:63">*</operator><literal type="number" pos:start="31:64" pos:end="31:66">0.5</literal> <operator pos:start="31:68" pos:end="31:68">:</operator> <name pos:start="31:70" pos:end="31:80"><name pos:start="31:70" pos:end="31:72">rce</name><operator pos:start="31:73" pos:end="31:74">-&gt;</operator><name pos:start="31:75" pos:end="31:80">f_code</name></name></expr>,

        <expr pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:11">rce</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:20">i_count</name></name><operator pos:start="33:21" pos:end="33:21">/</operator><name pos:start="33:22" pos:end="33:27">mb_num</name></expr>,

        <expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:11">rce</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:26">mc_mb_var_sum</name></name><operator pos:start="35:27" pos:end="35:27">/</operator><name pos:start="35:28" pos:end="35:33">mb_num</name></expr>,

        <expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:11">rce</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:23">mb_var_sum</name></name><operator pos:start="37:24" pos:end="37:24">/</operator><name pos:start="37:25" pos:end="37:30">mb_num</name></expr>,

        <expr pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:11">rce</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:22">pict_type</name></name> <operator pos:start="39:24" pos:end="39:25">==</operator> <name pos:start="39:27" pos:end="39:32">I_TYPE</name></expr>,

        <expr pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:11">rce</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:22">pict_type</name></name> <operator pos:start="41:24" pos:end="41:25">==</operator> <name pos:start="41:27" pos:end="41:32">P_TYPE</name></expr>,

        <expr pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:11">rce</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:22">pict_type</name></name> <operator pos:start="43:24" pos:end="43:25">==</operator> <name pos:start="43:27" pos:end="43:32">B_TYPE</name></expr>,

        <expr pos:start="45:9" pos:end="45:72"><name pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:11">rcc</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:23">qscale_sum</name><index pos:start="45:24" pos:end="45:34">[<expr pos:start="45:25" pos:end="45:33"><name pos:start="45:25" pos:end="45:33">pict_type</name></expr>]</index></name> <operator pos:start="45:36" pos:end="45:36">/</operator> <operator pos:start="45:38" pos:end="45:38">(</operator><name pos:start="45:39" pos:end="45:44">double</name><operator pos:start="45:45" pos:end="45:45">)</operator><name pos:start="45:46" pos:end="45:72"><name pos:start="45:46" pos:end="45:48">rcc</name><operator pos:start="45:49" pos:end="45:50">-&gt;</operator><name pos:start="45:51" pos:end="45:61">frame_count</name><index pos:start="45:62" pos:end="45:72">[<expr pos:start="45:63" pos:end="45:71"><name pos:start="45:63" pos:end="45:71">pict_type</name></expr>]</index></name></expr>,

        <expr pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:9">a</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:20">qcompress</name></name></expr>,

<comment type="block" pos:start="49:1" pos:end="55:33">/*        rcc-&gt;last_qscale_for[I_TYPE],

        rcc-&gt;last_qscale_for[P_TYPE],

        rcc-&gt;last_qscale_for[B_TYPE],

        rcc-&gt;next_non_b_qscale,*/</comment>

        <expr pos:start="57:9" pos:end="57:66"><name pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:11">rcc</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:23">i_cplx_sum</name><index pos:start="57:24" pos:end="57:31">[<expr pos:start="57:25" pos:end="57:30"><name pos:start="57:25" pos:end="57:30">I_TYPE</name></expr>]</index></name> <operator pos:start="57:33" pos:end="57:33">/</operator> <operator pos:start="57:35" pos:end="57:35">(</operator><name pos:start="57:36" pos:end="57:41">double</name><operator pos:start="57:42" pos:end="57:42">)</operator><name pos:start="57:43" pos:end="57:66"><name pos:start="57:43" pos:end="57:45">rcc</name><operator pos:start="57:46" pos:end="57:47">-&gt;</operator><name pos:start="57:48" pos:end="57:58">frame_count</name><index pos:start="57:59" pos:end="57:66">[<expr pos:start="57:60" pos:end="57:65"><name pos:start="57:60" pos:end="57:65">I_TYPE</name></expr>]</index></name></expr>,

        <expr pos:start="59:9" pos:end="59:66"><name pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:11">rcc</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:23">i_cplx_sum</name><index pos:start="59:24" pos:end="59:31">[<expr pos:start="59:25" pos:end="59:30"><name pos:start="59:25" pos:end="59:30">P_TYPE</name></expr>]</index></name> <operator pos:start="59:33" pos:end="59:33">/</operator> <operator pos:start="59:35" pos:end="59:35">(</operator><name pos:start="59:36" pos:end="59:41">double</name><operator pos:start="59:42" pos:end="59:42">)</operator><name pos:start="59:43" pos:end="59:66"><name pos:start="59:43" pos:end="59:45">rcc</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:58">frame_count</name><index pos:start="59:59" pos:end="59:66">[<expr pos:start="59:60" pos:end="59:65"><name pos:start="59:60" pos:end="59:65">P_TYPE</name></expr>]</index></name></expr>,

        <expr pos:start="61:9" pos:end="61:66"><name pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:11">rcc</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:23">p_cplx_sum</name><index pos:start="61:24" pos:end="61:31">[<expr pos:start="61:25" pos:end="61:30"><name pos:start="61:25" pos:end="61:30">P_TYPE</name></expr>]</index></name> <operator pos:start="61:33" pos:end="61:33">/</operator> <operator pos:start="61:35" pos:end="61:35">(</operator><name pos:start="61:36" pos:end="61:41">double</name><operator pos:start="61:42" pos:end="61:42">)</operator><name pos:start="61:43" pos:end="61:66"><name pos:start="61:43" pos:end="61:45">rcc</name><operator pos:start="61:46" pos:end="61:47">-&gt;</operator><name pos:start="61:48" pos:end="61:58">frame_count</name><index pos:start="61:59" pos:end="61:66">[<expr pos:start="61:60" pos:end="61:65"><name pos:start="61:60" pos:end="61:65">P_TYPE</name></expr>]</index></name></expr>,

        <expr pos:start="63:9" pos:end="63:66"><name pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:11">rcc</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:23">p_cplx_sum</name><index pos:start="63:24" pos:end="63:31">[<expr pos:start="63:25" pos:end="63:30"><name pos:start="63:25" pos:end="63:30">B_TYPE</name></expr>]</index></name> <operator pos:start="63:33" pos:end="63:33">/</operator> <operator pos:start="63:35" pos:end="63:35">(</operator><name pos:start="63:36" pos:end="63:41">double</name><operator pos:start="63:42" pos:end="63:42">)</operator><name pos:start="63:43" pos:end="63:66"><name pos:start="63:43" pos:end="63:45">rcc</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:58">frame_count</name><index pos:start="63:59" pos:end="63:66">[<expr pos:start="63:60" pos:end="63:65"><name pos:start="63:60" pos:end="63:65">B_TYPE</name></expr>]</index></name></expr>,

        <expr pos:start="65:9" pos:end="65:103"><operator pos:start="65:9" pos:end="65:9">(</operator><name pos:start="65:10" pos:end="65:35"><name pos:start="65:10" pos:end="65:12">rcc</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:24">i_cplx_sum</name><index pos:start="65:25" pos:end="65:35">[<expr pos:start="65:26" pos:end="65:34"><name pos:start="65:26" pos:end="65:34">pict_type</name></expr>]</index></name> <operator pos:start="65:37" pos:end="65:37">+</operator> <name pos:start="65:39" pos:end="65:64"><name pos:start="65:39" pos:end="65:41">rcc</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:53">p_cplx_sum</name><index pos:start="65:54" pos:end="65:64">[<expr pos:start="65:55" pos:end="65:63"><name pos:start="65:55" pos:end="65:63">pict_type</name></expr>]</index></name><operator pos:start="65:65" pos:end="65:65">)</operator> <operator pos:start="65:67" pos:end="65:67">/</operator> <operator pos:start="65:69" pos:end="65:69">(</operator><name pos:start="65:70" pos:end="65:75">double</name><operator pos:start="65:76" pos:end="65:76">)</operator><name pos:start="65:77" pos:end="65:103"><name pos:start="65:77" pos:end="65:79">rcc</name><operator pos:start="65:80" pos:end="65:81">-&gt;</operator><name pos:start="65:82" pos:end="65:92">frame_count</name><index pos:start="65:93" pos:end="65:103">[<expr pos:start="65:94" pos:end="65:102"><name pos:start="65:94" pos:end="65:102">pict_type</name></expr>]</index></name></expr>,

        <expr pos:start="67:9" pos:end="67:9"><literal type="number" pos:start="67:9" pos:end="67:9">0</literal></expr>

    }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:60"><expr pos:start="73:5" pos:end="73:59"><name pos:start="73:5" pos:end="73:8">bits</name><operator pos:start="73:9" pos:end="73:9">=</operator> <call pos:start="73:11" pos:end="73:59"><name pos:start="73:11" pos:end="73:23">ff_parse_eval</name><argument_list pos:start="73:24" pos:end="73:59">(<argument pos:start="73:25" pos:end="73:39"><expr pos:start="73:25" pos:end="73:39"><name pos:start="73:25" pos:end="73:39"><name pos:start="73:25" pos:end="73:27">rcc</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:39">rc_eq_eval</name></name></expr></argument>, <argument pos:start="73:42" pos:end="73:53"><expr pos:start="73:42" pos:end="73:53"><name pos:start="73:42" pos:end="73:53">const_values</name></expr></argument>, <argument pos:start="73:56" pos:end="73:58"><expr pos:start="73:56" pos:end="73:58"><name pos:start="73:56" pos:end="73:58">rce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:20">(<expr pos:start="75:9" pos:end="75:19"><call pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:13">isnan</name><argument_list pos:start="75:14" pos:end="75:19">(<argument pos:start="75:15" pos:end="75:18"><expr pos:start="75:15" pos:end="75:18"><name pos:start="75:15" pos:end="75:18">bits</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:22" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:18">

        <expr_stmt pos:start="77:9" pos:end="77:91"><expr pos:start="77:9" pos:end="77:90"><call pos:start="77:9" pos:end="77:90"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="77:90">(<argument pos:start="77:16" pos:end="77:23"><expr pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:16">s</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:23">avctx</name></name></expr></argument>, <argument pos:start="77:26" pos:end="77:37"><expr pos:start="77:26" pos:end="77:37"><name pos:start="77:26" pos:end="77:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:40" pos:end="77:72"><expr pos:start="77:40" pos:end="77:72"><literal type="string" pos:start="77:40" pos:end="77:72">"Error evaluating rc_eq \"%s\"\n"</literal></expr></argument>, <argument pos:start="77:75" pos:end="77:89"><expr pos:start="77:75" pos:end="77:89"><name pos:start="77:75" pos:end="77:89"><name pos:start="77:75" pos:end="77:75">s</name><operator pos:start="77:76" pos:end="77:77">-&gt;</operator><name pos:start="77:78" pos:end="77:82">avctx</name><operator pos:start="77:83" pos:end="77:84">-&gt;</operator><name pos:start="77:85" pos:end="77:89">rc_eq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:18">return <expr pos:start="79:16" pos:end="79:17"><operator pos:start="79:16" pos:end="79:16">-</operator><literal type="number" pos:start="79:17" pos:end="79:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:39"><expr pos:start="85:5" pos:end="85:38"><name pos:start="85:5" pos:end="85:31"><name pos:start="85:5" pos:end="85:7">rcc</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:31">pass1_rc_eq_output_sum</name></name><operator pos:start="85:32" pos:end="85:33">+=</operator> <name pos:start="85:35" pos:end="85:38">bits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:22"><expr pos:start="87:5" pos:end="87:21"><name pos:start="87:5" pos:end="87:8">bits</name><operator pos:start="87:9" pos:end="87:10">*=</operator><name pos:start="87:11" pos:end="87:21">rate_factor</name></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="89:26"><if pos:start="89:5" pos:end="89:26">if<condition pos:start="89:7" pos:end="89:16">(<expr pos:start="89:8" pos:end="89:15"><name pos:start="89:8" pos:end="89:11">bits</name><operator pos:start="89:12" pos:end="89:12">&lt;</operator><literal type="number" pos:start="89:13" pos:end="89:15">0.0</literal></expr>)</condition><block type="pseudo" pos:start="89:18" pos:end="89:26"><block_content pos:start="89:18" pos:end="89:26"> <expr_stmt pos:start="89:18" pos:end="89:26"><expr pos:start="89:18" pos:end="89:25"><name pos:start="89:18" pos:end="89:21">bits</name><operator pos:start="89:22" pos:end="89:22">=</operator><literal type="number" pos:start="89:23" pos:end="89:25">0.0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:15"><expr pos:start="91:5" pos:end="91:14"><name pos:start="91:5" pos:end="91:8">bits</name><operator pos:start="91:9" pos:end="91:10">+=</operator> <literal type="number" pos:start="91:12" pos:end="91:14">1.0</literal></expr>;</expr_stmt> <comment type="line" pos:start="91:17" pos:end="91:34">//avoid 1/0 issues</comment>



    <comment type="block" pos:start="95:5" pos:end="95:23">/* user override */</comment>

    <for pos:start="97:5" pos:end="115:5">for<control pos:start="97:8" pos:end="97:48">(<init pos:start="97:9" pos:end="97:12"><expr pos:start="97:9" pos:end="97:11"><name pos:start="97:9" pos:end="97:9">i</name><operator pos:start="97:10" pos:end="97:10">=</operator><literal type="number" pos:start="97:11" pos:end="97:11">0</literal></expr>;</init> <condition pos:start="97:14" pos:end="97:43"><expr pos:start="97:14" pos:end="97:42"><name pos:start="97:14" pos:end="97:14">i</name><operator pos:start="97:15" pos:end="97:15">&lt;</operator><name pos:start="97:16" pos:end="97:42"><name pos:start="97:16" pos:end="97:16">s</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:23">avctx</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:42">rc_override_count</name></name></expr>;</condition> <incr pos:start="97:45" pos:end="97:47"><expr pos:start="97:45" pos:end="97:47"><name pos:start="97:45" pos:end="97:45">i</name><operator pos:start="97:46" pos:end="97:47">++</operator></expr></incr>)</control><block pos:start="97:49" pos:end="115:5">{<block_content pos:start="99:9" pos:end="113:41">

        <decl_stmt pos:start="99:9" pos:end="99:47"><decl pos:start="99:9" pos:end="99:46"><type pos:start="99:9" pos:end="99:20"><name pos:start="99:9" pos:end="99:18">RcOverride</name> <modifier pos:start="99:20" pos:end="99:20">*</modifier></type><name pos:start="99:21" pos:end="99:23">rco</name><init pos:start="99:24" pos:end="99:46">= <expr pos:start="99:26" pos:end="99:46"><name pos:start="99:26" pos:end="99:46"><name pos:start="99:26" pos:end="99:26">s</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:33">avctx</name><operator pos:start="99:34" pos:end="99:35">-&gt;</operator><name pos:start="99:36" pos:end="99:46">rc_override</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="101:9" pos:end="101:52"><if pos:start="101:9" pos:end="101:52">if<condition pos:start="101:11" pos:end="101:42">(<expr pos:start="101:12" pos:end="101:41"><name pos:start="101:12" pos:end="101:17"><name pos:start="101:12" pos:end="101:14">rco</name><index pos:start="101:15" pos:end="101:17">[<expr pos:start="101:16" pos:end="101:16"><name pos:start="101:16" pos:end="101:16">i</name></expr>]</index></name><operator pos:start="101:18" pos:end="101:18">.</operator><name pos:start="101:19" pos:end="101:29">start_frame</name> <operator pos:start="101:31" pos:end="101:31">&gt;</operator> <name pos:start="101:33" pos:end="101:41">frame_num</name></expr>)</condition><block type="pseudo" pos:start="101:44" pos:end="101:52"><block_content pos:start="101:44" pos:end="101:52"> <continue pos:start="101:44" pos:end="101:52">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="103:9" pos:end="103:52"><if pos:start="103:9" pos:end="103:52">if<condition pos:start="103:11" pos:end="103:42">(<expr pos:start="103:12" pos:end="103:41"><name pos:start="103:12" pos:end="103:17"><name pos:start="103:12" pos:end="103:14">rco</name><index pos:start="103:15" pos:end="103:17">[<expr pos:start="103:16" pos:end="103:16"><name pos:start="103:16" pos:end="103:16">i</name></expr>]</index></name><operator pos:start="103:18" pos:end="103:18">.</operator><name pos:start="103:19" pos:end="103:27">end_frame</name>   <operator pos:start="103:31" pos:end="103:31">&lt;</operator> <name pos:start="103:33" pos:end="103:41">frame_num</name></expr>)</condition><block type="pseudo" pos:start="103:44" pos:end="103:52"><block_content pos:start="103:44" pos:end="103:52"> <continue pos:start="103:44" pos:end="103:52">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="107:9" pos:end="113:41"><if pos:start="107:9" pos:end="109:46">if<condition pos:start="107:11" pos:end="107:25">(<expr pos:start="107:12" pos:end="107:24"><name pos:start="107:12" pos:end="107:17"><name pos:start="107:12" pos:end="107:14">rco</name><index pos:start="107:15" pos:end="107:17">[<expr pos:start="107:16" pos:end="107:16"><name pos:start="107:16" pos:end="107:16">i</name></expr>]</index></name><operator pos:start="107:18" pos:end="107:18">.</operator><name pos:start="107:19" pos:end="107:24">qscale</name></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:46"><block_content pos:start="109:13" pos:end="109:46">

            <expr_stmt pos:start="109:13" pos:end="109:46"><expr pos:start="109:13" pos:end="109:45"><name pos:start="109:13" pos:end="109:16">bits</name><operator pos:start="109:17" pos:end="109:17">=</operator> <call pos:start="109:19" pos:end="109:45"><name pos:start="109:19" pos:end="109:25">qp2bits</name><argument_list pos:start="109:26" pos:end="109:45">(<argument pos:start="109:27" pos:end="109:29"><expr pos:start="109:27" pos:end="109:29"><name pos:start="109:27" pos:end="109:29">rce</name></expr></argument>, <argument pos:start="109:32" pos:end="109:44"><expr pos:start="109:32" pos:end="109:44"><name pos:start="109:32" pos:end="109:37"><name pos:start="109:32" pos:end="109:34">rco</name><index pos:start="109:35" pos:end="109:37">[<expr pos:start="109:36" pos:end="109:36"><name pos:start="109:36" pos:end="109:36">i</name></expr>]</index></name><operator pos:start="109:38" pos:end="109:38">.</operator><name pos:start="109:39" pos:end="109:44">qscale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="109:48" pos:end="109:86">//FIXME move at end to really force it?</comment>

        <else pos:start="111:9" pos:end="113:41">else<block type="pseudo" pos:start="113:13" pos:end="113:41"><block_content pos:start="113:13" pos:end="113:41">

            <expr_stmt pos:start="113:13" pos:end="113:41"><expr pos:start="113:13" pos:end="113:40"><name pos:start="113:13" pos:end="113:16">bits</name><operator pos:start="113:17" pos:end="113:18">*=</operator> <name pos:start="113:20" pos:end="113:25"><name pos:start="113:20" pos:end="113:22">rco</name><index pos:start="113:23" pos:end="113:25">[<expr pos:start="113:24" pos:end="113:24"><name pos:start="113:24" pos:end="113:24">i</name></expr>]</index></name><operator pos:start="113:26" pos:end="113:26">.</operator><name pos:start="113:27" pos:end="113:40">quality_factor</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="119:5" pos:end="119:26"><expr pos:start="119:5" pos:end="119:25"><name pos:start="119:5" pos:end="119:5">q</name><operator pos:start="119:6" pos:end="119:6">=</operator> <call pos:start="119:8" pos:end="119:25"><name pos:start="119:8" pos:end="119:14">bits2qp</name><argument_list pos:start="119:15" pos:end="119:25">(<argument pos:start="119:16" pos:end="119:18"><expr pos:start="119:16" pos:end="119:18"><name pos:start="119:16" pos:end="119:18">rce</name></expr></argument>, <argument pos:start="119:21" pos:end="119:24"><expr pos:start="119:21" pos:end="119:24"><name pos:start="119:21" pos:end="119:24">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:24">/* I/B difference */</comment>

    <if_stmt pos:start="125:5" pos:end="131:66"><if pos:start="125:5" pos:end="127:66">if     <condition pos:start="125:12" pos:end="125:62">(<expr pos:start="125:13" pos:end="125:61"><name pos:start="125:13" pos:end="125:21">pict_type</name><operator pos:start="125:22" pos:end="125:23">==</operator><name pos:start="125:24" pos:end="125:29">I_TYPE</name> <operator pos:start="125:31" pos:end="125:32">&amp;&amp;</operator> <name pos:start="125:34" pos:end="125:57"><name pos:start="125:34" pos:end="125:34">s</name><operator pos:start="125:35" pos:end="125:36">-&gt;</operator><name pos:start="125:37" pos:end="125:41">avctx</name><operator pos:start="125:42" pos:end="125:43">-&gt;</operator><name pos:start="125:44" pos:end="125:57">i_quant_factor</name></name><operator pos:start="125:58" pos:end="125:58">&lt;</operator><literal type="number" pos:start="125:59" pos:end="125:61">0.0</literal></expr>)</condition><block type="pseudo" pos:start="127:9" pos:end="127:66"><block_content pos:start="127:9" pos:end="127:66">

        <expr_stmt pos:start="127:9" pos:end="127:66"><expr pos:start="127:9" pos:end="127:65"><name pos:start="127:9" pos:end="127:9">q</name><operator pos:start="127:10" pos:end="127:10">=</operator> <operator pos:start="127:12" pos:end="127:12">-</operator><name pos:start="127:13" pos:end="127:13">q</name><operator pos:start="127:14" pos:end="127:14">*</operator><name pos:start="127:15" pos:end="127:38"><name pos:start="127:15" pos:end="127:15">s</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:22">avctx</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:38">i_quant_factor</name></name> <operator pos:start="127:40" pos:end="127:40">+</operator> <name pos:start="127:42" pos:end="127:65"><name pos:start="127:42" pos:end="127:42">s</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:49">avctx</name><operator pos:start="127:50" pos:end="127:51">-&gt;</operator><name pos:start="127:52" pos:end="127:65">i_quant_offset</name></name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="129:5" pos:end="131:66">else if<condition pos:start="129:12" pos:end="129:62">(<expr pos:start="129:13" pos:end="129:61"><name pos:start="129:13" pos:end="129:21">pict_type</name><operator pos:start="129:22" pos:end="129:23">==</operator><name pos:start="129:24" pos:end="129:29">B_TYPE</name> <operator pos:start="129:31" pos:end="129:32">&amp;&amp;</operator> <name pos:start="129:34" pos:end="129:57"><name pos:start="129:34" pos:end="129:34">s</name><operator pos:start="129:35" pos:end="129:36">-&gt;</operator><name pos:start="129:37" pos:end="129:41">avctx</name><operator pos:start="129:42" pos:end="129:43">-&gt;</operator><name pos:start="129:44" pos:end="129:57">b_quant_factor</name></name><operator pos:start="129:58" pos:end="129:58">&lt;</operator><literal type="number" pos:start="129:59" pos:end="129:61">0.0</literal></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:66"><block_content pos:start="131:9" pos:end="131:66">

        <expr_stmt pos:start="131:9" pos:end="131:66"><expr pos:start="131:9" pos:end="131:65"><name pos:start="131:9" pos:end="131:9">q</name><operator pos:start="131:10" pos:end="131:10">=</operator> <operator pos:start="131:12" pos:end="131:12">-</operator><name pos:start="131:13" pos:end="131:13">q</name><operator pos:start="131:14" pos:end="131:14">*</operator><name pos:start="131:15" pos:end="131:38"><name pos:start="131:15" pos:end="131:15">s</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:22">avctx</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:38">b_quant_factor</name></name> <operator pos:start="131:40" pos:end="131:40">+</operator> <name pos:start="131:42" pos:end="131:65"><name pos:start="131:42" pos:end="131:42">s</name><operator pos:start="131:43" pos:end="131:44">-&gt;</operator><name pos:start="131:45" pos:end="131:49">avctx</name><operator pos:start="131:50" pos:end="131:51">-&gt;</operator><name pos:start="131:52" pos:end="131:65">b_quant_offset</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>




    <return pos:start="136:5" pos:end="136:13">return <expr pos:start="136:12" pos:end="136:12"><name pos:start="136:12" pos:end="136:12">q</name></expr>;</return>

</block_content>}</block></function></unit>
