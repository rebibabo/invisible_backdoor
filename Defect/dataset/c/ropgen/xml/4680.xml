<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4680.c" pos:tabs="8"><function pos:start="1:1" pos:end="211:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_video</name><parameter_list pos:start="1:24" pos:end="1:73">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:35">InputStream</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">ist</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:50">AVPacket</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">pkt</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:72"><decl pos:start="1:58" pos:end="1:72"><type pos:start="1:58" pos:end="1:72"><name pos:start="1:58" pos:end="1:60">int</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:72">got_output</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="211:1">{<block_content pos:start="5:5" pos:end="209:31">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:26">decoded_frame</name></decl>, <decl pos:start="5:29" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:30">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">void</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:24">buffer_to_free</name> <init pos:start="7:26" pos:end="7:31">= <expr pos:start="7:28" pos:end="7:31"><name pos:start="7:28" pos:end="7:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>, <decl pos:start="9:21" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:23">err</name> <init pos:start="9:25" pos:end="9:27">= <expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr></init></decl>, <decl pos:start="9:30" pos:end="9:45"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:45">resample_changed</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:33">best_effort_timestamp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">AVRational</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:35">frame_sample_aspect</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:31"><if pos:start="17:5" pos:end="19:31">if <condition pos:start="17:8" pos:end="17:72">(<expr pos:start="17:9" pos:end="17:71"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:27"><name pos:start="17:10" pos:end="17:12">ist</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:27">decoded_frame</name></name> <operator pos:start="17:29" pos:end="17:30">&amp;&amp;</operator> <operator pos:start="17:32" pos:end="17:32">!</operator><operator pos:start="17:33" pos:end="17:33">(</operator><name pos:start="17:34" pos:end="17:51"><name pos:start="17:34" pos:end="17:36">ist</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:51">decoded_frame</name></name> <operator pos:start="17:53" pos:end="17:53">=</operator> <call pos:start="17:55" pos:end="17:70"><name pos:start="17:55" pos:end="17:68">av_frame_alloc</name><argument_list pos:start="17:69" pos:end="17:70">()</argument_list></call><operator pos:start="17:71" pos:end="17:71">)</operator></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:31"><block_content pos:start="19:9" pos:end="19:31">

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="23:31"><if pos:start="21:5" pos:end="23:31">if <condition pos:start="21:8" pos:end="21:70">(<expr pos:start="21:9" pos:end="21:69"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:26"><name pos:start="21:10" pos:end="21:12">ist</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:26">filter_frame</name></name> <operator pos:start="21:28" pos:end="21:29">&amp;&amp;</operator> <operator pos:start="21:31" pos:end="21:31">!</operator><operator pos:start="21:32" pos:end="21:32">(</operator><name pos:start="21:33" pos:end="21:49"><name pos:start="21:33" pos:end="21:35">ist</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:49">filter_frame</name></name> <operator pos:start="21:51" pos:end="21:51">=</operator> <call pos:start="21:53" pos:end="21:68"><name pos:start="21:53" pos:end="21:66">av_frame_alloc</name><argument_list pos:start="21:67" pos:end="21:68">()</argument_list></call><operator pos:start="21:69" pos:end="21:69">)</operator></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:17">decoded_frame</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:38"><name pos:start="25:21" pos:end="25:23">ist</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:38">decoded_frame</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:75"><expr pos:start="27:5" pos:end="27:74"><name pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:7">pkt</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:12">dts</name></name>  <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:74"><name pos:start="27:17" pos:end="27:28">av_rescale_q</name><argument_list pos:start="27:29" pos:end="27:74">(<argument pos:start="27:30" pos:end="27:37"><expr pos:start="27:30" pos:end="27:37"><name pos:start="27:30" pos:end="27:37"><name pos:start="27:30" pos:end="27:32">ist</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:37">dts</name></name></expr></argument>, <argument pos:start="27:40" pos:end="27:53"><expr pos:start="27:40" pos:end="27:53"><name pos:start="27:40" pos:end="27:53">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="27:56" pos:end="27:73"><expr pos:start="27:56" pos:end="27:73"><name pos:start="27:56" pos:end="27:73"><name pos:start="27:56" pos:end="27:58">ist</name><operator pos:start="27:59" pos:end="27:60">-&gt;</operator><name pos:start="27:61" pos:end="27:62">st</name><operator pos:start="27:63" pos:end="27:64">-&gt;</operator><name pos:start="27:65" pos:end="27:73">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><call pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:20">update_benchmark</name><argument_list pos:start="31:21" pos:end="31:26">(<argument pos:start="31:22" pos:end="31:25"><expr pos:start="31:22" pos:end="31:25"><name pos:start="31:22" pos:end="31:25">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="35:64"><expr pos:start="33:5" pos:end="35:63"><name pos:start="33:5" pos:end="33:7">ret</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="35:63"><name pos:start="33:11" pos:end="33:31">avcodec_decode_video2</name><argument_list pos:start="33:32" pos:end="35:63">(<argument pos:start="33:33" pos:end="33:46"><expr pos:start="33:33" pos:end="33:46"><name pos:start="33:33" pos:end="33:46"><name pos:start="33:33" pos:end="33:35">ist</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:39">st</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:46">codec</name></name></expr></argument>,

                                <argument pos:start="35:33" pos:end="35:45"><expr pos:start="35:33" pos:end="35:45"><name pos:start="35:33" pos:end="35:45">decoded_frame</name></expr></argument>, <argument pos:start="35:48" pos:end="35:57"><expr pos:start="35:48" pos:end="35:57"><name pos:start="35:48" pos:end="35:57">got_output</name></expr></argument>, <argument pos:start="35:60" pos:end="35:62"><expr pos:start="35:60" pos:end="35:62"><name pos:start="35:60" pos:end="35:62">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:76"><expr pos:start="37:5" pos:end="37:75"><call pos:start="37:5" pos:end="37:75"><name pos:start="37:5" pos:end="37:20">update_benchmark</name><argument_list pos:start="37:21" pos:end="37:75">(<argument pos:start="37:22" pos:end="37:41"><expr pos:start="37:22" pos:end="37:41"><literal type="string" pos:start="37:22" pos:end="37:41">"decode_video %d.%d"</literal></expr></argument>, <argument pos:start="37:44" pos:end="37:58"><expr pos:start="37:44" pos:end="37:58"><name pos:start="37:44" pos:end="37:58"><name pos:start="37:44" pos:end="37:46">ist</name><operator pos:start="37:47" pos:end="37:48">-&gt;</operator><name pos:start="37:49" pos:end="37:58">file_index</name></name></expr></argument>, <argument pos:start="37:61" pos:end="37:74"><expr pos:start="37:61" pos:end="37:74"><name pos:start="37:61" pos:end="37:74"><name pos:start="37:61" pos:end="37:63">ist</name><operator pos:start="37:64" pos:end="37:65">-&gt;</operator><name pos:start="37:66" pos:end="37:67">st</name><operator pos:start="37:68" pos:end="37:69">-&gt;</operator><name pos:start="37:70" pos:end="37:74">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="59:5"><if pos:start="39:5" pos:end="59:5">if <condition pos:start="39:8" pos:end="39:32">(<expr pos:start="39:9" pos:end="39:31"><operator pos:start="39:9" pos:end="39:9">!</operator><operator pos:start="39:10" pos:end="39:10">*</operator><name pos:start="39:11" pos:end="39:20">got_output</name> <operator pos:start="39:22" pos:end="39:23">||</operator> <name pos:start="39:25" pos:end="39:27">ret</name> <operator pos:start="39:29" pos:end="39:29">&lt;</operator> <literal type="number" pos:start="39:31" pos:end="39:31">0</literal></expr>)</condition> <block pos:start="39:34" pos:end="59:5">{<block_content pos:start="41:9" pos:end="57:19">

        <if_stmt pos:start="41:9" pos:end="55:9"><if pos:start="41:9" pos:end="55:9">if <condition pos:start="41:12" pos:end="41:23">(<expr pos:start="41:13" pos:end="41:22"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:22"><name pos:start="41:14" pos:end="41:16">pkt</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:22">size</name></name></expr>)</condition> <block pos:start="41:25" pos:end="55:9">{<block_content pos:start="43:13" pos:end="54:0">

            <for pos:start="43:13" pos:end="50:0">for <control pos:start="43:17" pos:end="46:0">(<init pos:start="43:18" pos:end="43:23"><expr pos:start="43:18" pos:end="43:22"><name pos:start="43:18" pos:end="43:18">i</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</init> <condition pos:start="43:25" pos:end="43:44"><expr pos:start="43:25" pos:end="43:43"><name pos:start="43:25" pos:end="43:25">i</name> <operator pos:start="43:27" pos:end="43:27">&lt;</operator> <name pos:start="43:29" pos:end="43:43"><name pos:start="43:29" pos:end="43:31">ist</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:43">nb_filters</name></name></expr>;</condition> <incr pos:start="43:46" pos:end="43:48"><expr pos:start="43:46" pos:end="43:48"><name pos:start="43:46" pos:end="43:46">i</name><operator pos:start="43:47" pos:end="43:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:17" pos:end="50:0"><block_content pos:start="47:17" pos:end="50:0">

<cpp:if pos:start="45:1" pos:end="45:5">#<cpp:directive pos:start="45:2" pos:end="45:3">if</cpp:directive> <expr pos:start="45:5" pos:end="45:5"><literal type="number" pos:start="45:5" pos:end="45:5">1</literal></expr></cpp:if>

                <expr_stmt pos:start="47:17" pos:end="50:0"><expr pos:start="47:17" pos:end="47:70"><call pos:start="47:17" pos:end="47:70"><name pos:start="47:17" pos:end="47:36">av_buffersrc_add_ref</name><argument_list pos:start="47:37" pos:end="47:70">(<argument pos:start="47:38" pos:end="47:60"><expr pos:start="47:38" pos:end="47:60"><name pos:start="47:38" pos:end="47:52"><name pos:start="47:38" pos:end="47:40">ist</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:49">filters</name><index pos:start="47:50" pos:end="47:52">[<expr pos:start="47:51" pos:end="47:51"><name pos:start="47:51" pos:end="47:51">i</name></expr>]</index></name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:60">filter</name></expr></argument>, <argument pos:start="47:63" pos:end="47:66"><expr pos:start="47:63" pos:end="47:66"><name pos:start="47:63" pos:end="47:66">NULL</name></expr></argument>, <argument pos:start="47:69" pos:end="47:69"><expr pos:start="47:69" pos:end="47:69"><literal type="number" pos:start="47:69" pos:end="47:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<cpp:else pos:start="49:1" pos:end="49:5">#<cpp:directive pos:start="49:2" pos:end="49:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="51:17" pos:end="54:0"><expr pos:start="51:17" pos:end="51:69"><call pos:start="51:17" pos:end="51:69"><name pos:start="51:17" pos:end="51:38">av_buffersrc_add_frame</name><argument_list pos:start="51:39" pos:end="51:69">(<argument pos:start="51:40" pos:end="51:62"><expr pos:start="51:40" pos:end="51:62"><name pos:start="51:40" pos:end="51:54"><name pos:start="51:40" pos:end="51:42">ist</name><operator pos:start="51:43" pos:end="51:44">-&gt;</operator><name pos:start="51:45" pos:end="51:51">filters</name><index pos:start="51:52" pos:end="51:54">[<expr pos:start="51:53" pos:end="51:53"><name pos:start="51:53" pos:end="51:53">i</name></expr>]</index></name><operator pos:start="51:55" pos:end="51:56">-&gt;</operator><name pos:start="51:57" pos:end="51:62">filter</name></expr></argument>, <argument pos:start="51:65" pos:end="51:68"><expr pos:start="51:65" pos:end="51:68"><name pos:start="51:65" pos:end="51:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="53:1" pos:end="53:6">#<cpp:directive pos:start="53:2" pos:end="53:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if></if_stmt>

        <return pos:start="57:9" pos:end="57:19">return <expr pos:start="57:16" pos:end="57:18"><name pos:start="57:16" pos:end="57:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="65:62"><if pos:start="63:5" pos:end="65:62">if<condition pos:start="63:7" pos:end="63:31">(<expr pos:start="63:8" pos:end="63:30"><name pos:start="63:8" pos:end="63:27"><name pos:start="63:8" pos:end="63:10">ist</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:27">top_field_first</name></name><operator pos:start="63:28" pos:end="63:29">&gt;=</operator><literal type="number" pos:start="63:30" pos:end="63:30">0</literal></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:62"><block_content pos:start="65:9" pos:end="65:62">

        <expr_stmt pos:start="65:9" pos:end="65:62"><expr pos:start="65:9" pos:end="65:61"><name pos:start="65:9" pos:end="65:38"><name pos:start="65:9" pos:end="65:21">decoded_frame</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:38">top_field_first</name></name> <operator pos:start="65:40" pos:end="65:40">=</operator> <name pos:start="65:42" pos:end="65:61"><name pos:start="65:42" pos:end="65:44">ist</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:61">top_field_first</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:77"><expr pos:start="69:5" pos:end="69:76"><name pos:start="69:5" pos:end="69:25">best_effort_timestamp</name><operator pos:start="69:26" pos:end="69:26">=</operator> <call pos:start="69:28" pos:end="69:76"><name pos:start="69:28" pos:end="69:61">av_frame_get_best_effort_timestamp</name><argument_list pos:start="69:62" pos:end="69:76">(<argument pos:start="69:63" pos:end="69:75"><expr pos:start="69:63" pos:end="69:75"><name pos:start="69:63" pos:end="69:75">decoded_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="73:128"><if pos:start="71:5" pos:end="73:128">if<condition pos:start="71:7" pos:end="71:47">(<expr pos:start="71:8" pos:end="71:46"><name pos:start="71:8" pos:end="71:28">best_effort_timestamp</name> <operator pos:start="71:30" pos:end="71:31">!=</operator> <name pos:start="71:33" pos:end="71:46">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:128"><block_content pos:start="73:9" pos:end="73:128">

        <expr_stmt pos:start="73:9" pos:end="73:128"><expr pos:start="73:9" pos:end="73:127"><name pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:11">ist</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:21">next_pts</name></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:32"><name pos:start="73:25" pos:end="73:27">ist</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:32">pts</name></name> <operator pos:start="73:34" pos:end="73:34">=</operator> <call pos:start="73:36" pos:end="73:127"><name pos:start="73:36" pos:end="73:47">av_rescale_q</name><argument_list pos:start="73:48" pos:end="73:127">(<argument pos:start="73:49" pos:end="73:90"><expr pos:start="73:49" pos:end="73:90"><name pos:start="73:49" pos:end="73:66"><name pos:start="73:49" pos:end="73:61">decoded_frame</name><operator pos:start="73:62" pos:end="73:63">-&gt;</operator><name pos:start="73:64" pos:end="73:66">pts</name></name> <operator pos:start="73:68" pos:end="73:68">=</operator> <name pos:start="73:70" pos:end="73:90">best_effort_timestamp</name></expr></argument>, <argument pos:start="73:93" pos:end="73:110"><expr pos:start="73:93" pos:end="73:110"><name pos:start="73:93" pos:end="73:110"><name pos:start="73:93" pos:end="73:95">ist</name><operator pos:start="73:96" pos:end="73:97">-&gt;</operator><name pos:start="73:98" pos:end="73:99">st</name><operator pos:start="73:100" pos:end="73:101">-&gt;</operator><name pos:start="73:102" pos:end="73:110">time_base</name></name></expr></argument>, <argument pos:start="73:113" pos:end="73:126"><expr pos:start="73:113" pos:end="73:126"><name pos:start="73:113" pos:end="73:126">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="93:5"><if pos:start="77:5" pos:end="93:5">if <condition pos:start="77:8" pos:end="77:17">(<expr pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:16">debug_ts</name></expr>)</condition> <block pos:start="77:19" pos:end="93:5">{<block_content pos:start="79:9" pos:end="91:68">

        <expr_stmt pos:start="79:9" pos:end="91:68"><expr pos:start="79:9" pos:end="91:67"><call pos:start="79:9" pos:end="91:67"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="91:67">(<argument pos:start="79:16" pos:end="79:19"><expr pos:start="79:16" pos:end="79:19"><name pos:start="79:16" pos:end="79:19">NULL</name></expr></argument>, <argument pos:start="79:22" pos:end="79:32"><expr pos:start="79:22" pos:end="79:32"><name pos:start="79:22" pos:end="79:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="79:35" pos:end="81:125"><expr pos:start="79:35" pos:end="81:125"><literal type="string" pos:start="79:35" pos:end="79:71">"decoder -&gt; ist_index:%d type:video "</literal>

                <literal type="string" pos:start="81:17" pos:end="81:65">"frame_pts:%s frame_pts_time:%s best_effort_ts:%"</literal><name pos:start="81:66" pos:end="81:71">PRId64</name><literal type="string" pos:start="81:72" pos:end="81:125">" best_effort_ts_time:%s keyframe:%d frame_type:%d \n"</literal></expr></argument>,

                <argument pos:start="83:17" pos:end="83:30"><expr pos:start="83:17" pos:end="83:30"><name pos:start="83:17" pos:end="83:30"><name pos:start="83:17" pos:end="83:19">ist</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:23">st</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:30">index</name></name></expr></argument>, <argument pos:start="83:33" pos:end="83:61"><expr pos:start="83:33" pos:end="83:61"><call pos:start="83:33" pos:end="83:61"><name pos:start="83:33" pos:end="83:41">av_ts2str</name><argument_list pos:start="83:42" pos:end="83:61">(<argument pos:start="83:43" pos:end="83:60"><expr pos:start="83:43" pos:end="83:60"><name pos:start="83:43" pos:end="83:60"><name pos:start="83:43" pos:end="83:55">decoded_frame</name><operator pos:start="83:56" pos:end="83:57">-&gt;</operator><name pos:start="83:58" pos:end="83:60">pts</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="85:17" pos:end="85:70"><expr pos:start="85:17" pos:end="85:70"><call pos:start="85:17" pos:end="85:70"><name pos:start="85:17" pos:end="85:29">av_ts2timestr</name><argument_list pos:start="85:30" pos:end="85:70">(<argument pos:start="85:31" pos:end="85:48"><expr pos:start="85:31" pos:end="85:48"><name pos:start="85:31" pos:end="85:48"><name pos:start="85:31" pos:end="85:43">decoded_frame</name><operator pos:start="85:44" pos:end="85:45">-&gt;</operator><name pos:start="85:46" pos:end="85:48">pts</name></name></expr></argument>, <argument pos:start="85:51" pos:end="85:69"><expr pos:start="85:51" pos:end="85:69"><operator pos:start="85:51" pos:end="85:51">&amp;</operator><name pos:start="85:52" pos:end="85:69"><name pos:start="85:52" pos:end="85:54">ist</name><operator pos:start="85:55" pos:end="85:56">-&gt;</operator><name pos:start="85:57" pos:end="85:58">st</name><operator pos:start="85:59" pos:end="85:60">-&gt;</operator><name pos:start="85:61" pos:end="85:69">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="87:17" pos:end="87:37"><expr pos:start="87:17" pos:end="87:37"><name pos:start="87:17" pos:end="87:37">best_effort_timestamp</name></expr></argument>,

                <argument pos:start="89:17" pos:end="89:73"><expr pos:start="89:17" pos:end="89:73"><call pos:start="89:17" pos:end="89:73"><name pos:start="89:17" pos:end="89:29">av_ts2timestr</name><argument_list pos:start="89:30" pos:end="89:73">(<argument pos:start="89:31" pos:end="89:51"><expr pos:start="89:31" pos:end="89:51"><name pos:start="89:31" pos:end="89:51">best_effort_timestamp</name></expr></argument>, <argument pos:start="89:54" pos:end="89:72"><expr pos:start="89:54" pos:end="89:72"><operator pos:start="89:54" pos:end="89:54">&amp;</operator><name pos:start="89:55" pos:end="89:72"><name pos:start="89:55" pos:end="89:57">ist</name><operator pos:start="89:58" pos:end="89:59">-&gt;</operator><name pos:start="89:60" pos:end="89:61">st</name><operator pos:start="89:62" pos:end="89:63">-&gt;</operator><name pos:start="89:64" pos:end="89:72">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="91:17" pos:end="91:40"><expr pos:start="91:17" pos:end="91:40"><name pos:start="91:17" pos:end="91:40"><name pos:start="91:17" pos:end="91:29">decoded_frame</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:40">key_frame</name></name></expr></argument>, <argument pos:start="91:43" pos:end="91:66"><expr pos:start="91:43" pos:end="91:66"><name pos:start="91:43" pos:end="91:66"><name pos:start="91:43" pos:end="91:55">decoded_frame</name><operator pos:start="91:56" pos:end="91:57">-&gt;</operator><name pos:start="91:58" pos:end="91:66">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="100:0"><expr pos:start="97:5" pos:end="97:17"><name pos:start="97:5" pos:end="97:13"><name pos:start="97:5" pos:end="97:7">pkt</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:13">size</name></name> <operator pos:start="97:15" pos:end="97:15">=</operator> <literal type="number" pos:start="97:17" pos:end="97:17">0</literal></expr>;</expr_stmt>

<cpp:if pos:start="99:1" pos:end="99:22">#<cpp:directive pos:start="99:2" pos:end="99:3">if</cpp:directive> <expr pos:start="99:5" pos:end="99:22"><name pos:start="99:5" pos:end="99:22">FF_API_DEINTERLACE</name></expr></cpp:if>

    <expr_stmt pos:start="101:5" pos:end="104:0"><expr pos:start="101:5" pos:end="101:77"><call pos:start="101:5" pos:end="101:77"><name pos:start="101:5" pos:end="101:27">pre_process_video_frame</name><argument_list pos:start="101:28" pos:end="101:77">(<argument pos:start="101:29" pos:end="101:31"><expr pos:start="101:29" pos:end="101:31"><name pos:start="101:29" pos:end="101:31">ist</name></expr></argument>, <argument pos:start="101:34" pos:end="101:59"><expr pos:start="101:34" pos:end="101:59"><operator pos:start="101:34" pos:end="101:34">(</operator><name pos:start="101:35" pos:end="101:43">AVPicture</name> <operator pos:start="101:45" pos:end="101:45">*</operator><operator pos:start="101:46" pos:end="101:46">)</operator><name pos:start="101:47" pos:end="101:59">decoded_frame</name></expr></argument>, <argument pos:start="101:62" pos:end="101:76"><expr pos:start="101:62" pos:end="101:76"><operator pos:start="101:62" pos:end="101:62">&amp;</operator><name pos:start="101:63" pos:end="101:76">buffer_to_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="107:5" pos:end="107:24"><expr pos:start="107:5" pos:end="107:23"><call pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:18">rate_emu_sleep</name><argument_list pos:start="107:19" pos:end="107:23">(<argument pos:start="107:20" pos:end="107:22"><expr pos:start="107:20" pos:end="107:22"><name pos:start="107:20" pos:end="107:22">ist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="111:5" pos:end="113:74"><if pos:start="111:5" pos:end="113:74">if <condition pos:start="111:8" pos:end="111:41">(<expr pos:start="111:9" pos:end="111:40"><name pos:start="111:9" pos:end="111:40"><name pos:start="111:9" pos:end="111:11">ist</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:15">st</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:36">sample_aspect_ratio</name><operator pos:start="111:37" pos:end="111:37">.</operator><name pos:start="111:38" pos:end="111:40">num</name></name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:74"><block_content pos:start="113:9" pos:end="113:74">

        <expr_stmt pos:start="113:9" pos:end="113:74"><expr pos:start="113:9" pos:end="113:73"><name pos:start="113:9" pos:end="113:42"><name pos:start="113:9" pos:end="113:21">decoded_frame</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:42">sample_aspect_ratio</name></name> <operator pos:start="113:44" pos:end="113:44">=</operator> <name pos:start="113:46" pos:end="113:73"><name pos:start="113:46" pos:end="113:48">ist</name><operator pos:start="113:49" pos:end="113:50">-&gt;</operator><name pos:start="113:51" pos:end="113:52">st</name><operator pos:start="113:53" pos:end="113:54">-&gt;</operator><name pos:start="113:55" pos:end="113:73">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="121:70"><expr pos:start="117:5" pos:end="121:69"><name pos:start="117:5" pos:end="117:20">resample_changed</name> <operator pos:start="117:22" pos:end="117:22">=</operator> <name pos:start="117:24" pos:end="117:42"><name pos:start="117:24" pos:end="117:26">ist</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:42">resample_width</name></name>   <operator pos:start="117:46" pos:end="117:47">!=</operator> <name pos:start="117:49" pos:end="117:68"><name pos:start="117:49" pos:end="117:61">decoded_frame</name><operator pos:start="117:62" pos:end="117:63">-&gt;</operator><name pos:start="117:64" pos:end="117:68">width</name></name>  <operator pos:start="117:71" pos:end="117:72">||</operator>

                       <name pos:start="119:24" pos:end="119:43"><name pos:start="119:24" pos:end="119:26">ist</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:43">resample_height</name></name>  <operator pos:start="119:46" pos:end="119:47">!=</operator> <name pos:start="119:49" pos:end="119:69"><name pos:start="119:49" pos:end="119:61">decoded_frame</name><operator pos:start="119:62" pos:end="119:63">-&gt;</operator><name pos:start="119:64" pos:end="119:69">height</name></name> <operator pos:start="119:71" pos:end="119:72">||</operator>

                       <name pos:start="121:24" pos:end="121:44"><name pos:start="121:24" pos:end="121:26">ist</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:44">resample_pix_fmt</name></name> <operator pos:start="121:46" pos:end="121:47">!=</operator> <name pos:start="121:49" pos:end="121:69"><name pos:start="121:49" pos:end="121:61">decoded_frame</name><operator pos:start="121:62" pos:end="121:63">-&gt;</operator><name pos:start="121:64" pos:end="121:69">format</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="123:5" pos:end="159:5"><if pos:start="123:5" pos:end="159:5">if <condition pos:start="123:8" pos:end="123:25">(<expr pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:24">resample_changed</name></expr>)</condition> <block pos:start="123:27" pos:end="159:5">{<block_content pos:start="125:9" pos:end="157:9">

        <expr_stmt pos:start="125:9" pos:end="133:104"><expr pos:start="125:9" pos:end="133:103"><call pos:start="125:9" pos:end="133:103"><name pos:start="125:9" pos:end="125:14">av_log</name><argument_list pos:start="125:15" pos:end="133:103">(<argument pos:start="125:16" pos:end="125:19"><expr pos:start="125:16" pos:end="125:19"><name pos:start="125:16" pos:end="125:19">NULL</name></expr></argument>, <argument pos:start="125:22" pos:end="125:32"><expr pos:start="125:22" pos:end="125:32"><name pos:start="125:22" pos:end="125:32">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="127:16" pos:end="127:96"><expr pos:start="127:16" pos:end="127:96"><literal type="string" pos:start="127:16" pos:end="127:96">"Input stream #%d:%d frame changed from size:%dx%d fmt:%s to size:%dx%d fmt:%s\n"</literal></expr></argument>,

               <argument pos:start="129:16" pos:end="129:30"><expr pos:start="129:16" pos:end="129:30"><name pos:start="129:16" pos:end="129:30"><name pos:start="129:16" pos:end="129:18">ist</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:30">file_index</name></name></expr></argument>, <argument pos:start="129:33" pos:end="129:46"><expr pos:start="129:33" pos:end="129:46"><name pos:start="129:33" pos:end="129:46"><name pos:start="129:33" pos:end="129:35">ist</name><operator pos:start="129:36" pos:end="129:37">-&gt;</operator><name pos:start="129:38" pos:end="129:39">st</name><operator pos:start="129:40" pos:end="129:41">-&gt;</operator><name pos:start="129:42" pos:end="129:46">index</name></name></expr></argument>,

               <argument pos:start="131:16" pos:end="131:34"><expr pos:start="131:16" pos:end="131:34"><name pos:start="131:16" pos:end="131:34"><name pos:start="131:16" pos:end="131:18">ist</name><operator pos:start="131:19" pos:end="131:20">-&gt;</operator><name pos:start="131:21" pos:end="131:34">resample_width</name></name></expr></argument>,  <argument pos:start="131:38" pos:end="131:57"><expr pos:start="131:38" pos:end="131:57"><name pos:start="131:38" pos:end="131:57"><name pos:start="131:38" pos:end="131:40">ist</name><operator pos:start="131:41" pos:end="131:42">-&gt;</operator><name pos:start="131:43" pos:end="131:57">resample_height</name></name></expr></argument>,  <argument pos:start="131:61" pos:end="131:102"><expr pos:start="131:61" pos:end="131:102"><call pos:start="131:61" pos:end="131:102"><name pos:start="131:61" pos:end="131:79">av_get_pix_fmt_name</name><argument_list pos:start="131:80" pos:end="131:102">(<argument pos:start="131:81" pos:end="131:101"><expr pos:start="131:81" pos:end="131:101"><name pos:start="131:81" pos:end="131:101"><name pos:start="131:81" pos:end="131:83">ist</name><operator pos:start="131:84" pos:end="131:85">-&gt;</operator><name pos:start="131:86" pos:end="131:101">resample_pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="133:16" pos:end="133:35"><expr pos:start="133:16" pos:end="133:35"><name pos:start="133:16" pos:end="133:35"><name pos:start="133:16" pos:end="133:28">decoded_frame</name><operator pos:start="133:29" pos:end="133:30">-&gt;</operator><name pos:start="133:31" pos:end="133:35">width</name></name></expr></argument>, <argument pos:start="133:38" pos:end="133:58"><expr pos:start="133:38" pos:end="133:58"><name pos:start="133:38" pos:end="133:58"><name pos:start="133:38" pos:end="133:50">decoded_frame</name><operator pos:start="133:51" pos:end="133:52">-&gt;</operator><name pos:start="133:53" pos:end="133:58">height</name></name></expr></argument>, <argument pos:start="133:61" pos:end="133:102"><expr pos:start="133:61" pos:end="133:102"><call pos:start="133:61" pos:end="133:102"><name pos:start="133:61" pos:end="133:79">av_get_pix_fmt_name</name><argument_list pos:start="133:80" pos:end="133:102">(<argument pos:start="133:81" pos:end="133:101"><expr pos:start="133:81" pos:end="133:101"><name pos:start="133:81" pos:end="133:101"><name pos:start="133:81" pos:end="133:93">decoded_frame</name><operator pos:start="133:94" pos:end="133:95">-&gt;</operator><name pos:start="133:96" pos:end="133:101">format</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:53"><expr pos:start="137:9" pos:end="137:52"><name pos:start="137:9" pos:end="137:27"><name pos:start="137:9" pos:end="137:11">ist</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:27">resample_width</name></name>   <operator pos:start="137:31" pos:end="137:31">=</operator> <name pos:start="137:33" pos:end="137:52"><name pos:start="137:33" pos:end="137:45">decoded_frame</name><operator pos:start="137:46" pos:end="137:47">-&gt;</operator><name pos:start="137:48" pos:end="137:52">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:54"><expr pos:start="139:9" pos:end="139:53"><name pos:start="139:9" pos:end="139:28"><name pos:start="139:9" pos:end="139:11">ist</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:28">resample_height</name></name>  <operator pos:start="139:31" pos:end="139:31">=</operator> <name pos:start="139:33" pos:end="139:53"><name pos:start="139:33" pos:end="139:45">decoded_frame</name><operator pos:start="139:46" pos:end="139:47">-&gt;</operator><name pos:start="139:48" pos:end="139:53">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:54"><expr pos:start="141:9" pos:end="141:53"><name pos:start="141:9" pos:end="141:29"><name pos:start="141:9" pos:end="141:11">ist</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:29">resample_pix_fmt</name></name> <operator pos:start="141:31" pos:end="141:31">=</operator> <name pos:start="141:33" pos:end="141:53"><name pos:start="141:33" pos:end="141:45">decoded_frame</name><operator pos:start="141:46" pos:end="141:47">-&gt;</operator><name pos:start="141:48" pos:end="141:53">format</name></name></expr>;</expr_stmt>



        <for pos:start="145:9" pos:end="157:9">for <control pos:start="145:13" pos:end="145:45">(<init pos:start="145:14" pos:end="145:19"><expr pos:start="145:14" pos:end="145:18"><name pos:start="145:14" pos:end="145:14">i</name> <operator pos:start="145:16" pos:end="145:16">=</operator> <literal type="number" pos:start="145:18" pos:end="145:18">0</literal></expr>;</init> <condition pos:start="145:21" pos:end="145:40"><expr pos:start="145:21" pos:end="145:39"><name pos:start="145:21" pos:end="145:21">i</name> <operator pos:start="145:23" pos:end="145:23">&lt;</operator> <name pos:start="145:25" pos:end="145:39">nb_filtergraphs</name></expr>;</condition> <incr pos:start="145:42" pos:end="145:44"><expr pos:start="145:42" pos:end="145:44"><name pos:start="145:42" pos:end="145:42">i</name><operator pos:start="145:43" pos:end="145:44">++</operator></expr></incr>)</control> <block pos:start="145:47" pos:end="157:9">{<block_content pos:start="147:13" pos:end="155:13">

            <if_stmt pos:start="147:13" pos:end="155:13"><if pos:start="147:13" pos:end="155:13">if <condition pos:start="147:16" pos:end="149:59">(<expr pos:start="147:17" pos:end="149:58"><call pos:start="147:17" pos:end="147:56"><name pos:start="147:17" pos:end="147:34">ist_in_filtergraph</name><argument_list pos:start="147:35" pos:end="147:56">(<argument pos:start="147:36" pos:end="147:50"><expr pos:start="147:36" pos:end="147:50"><name pos:start="147:36" pos:end="147:50"><name pos:start="147:36" pos:end="147:47">filtergraphs</name><index pos:start="147:48" pos:end="147:50">[<expr pos:start="147:49" pos:end="147:49"><name pos:start="147:49" pos:end="147:49">i</name></expr>]</index></name></expr></argument>, <argument pos:start="147:53" pos:end="147:55"><expr pos:start="147:53" pos:end="147:55"><name pos:start="147:53" pos:end="147:55">ist</name></expr></argument>)</argument_list></call> <operator pos:start="147:58" pos:end="147:59">&amp;&amp;</operator> <name pos:start="147:61" pos:end="147:79"><name pos:start="147:61" pos:end="147:63">ist</name><operator pos:start="147:64" pos:end="147:65">-&gt;</operator><name pos:start="147:66" pos:end="147:79">reinit_filters</name></name> <operator pos:start="147:81" pos:end="147:82">&amp;&amp;</operator>

                <call pos:start="149:17" pos:end="149:54"><name pos:start="149:17" pos:end="149:37">configure_filtergraph</name><argument_list pos:start="149:38" pos:end="149:54">(<argument pos:start="149:39" pos:end="149:53"><expr pos:start="149:39" pos:end="149:53"><name pos:start="149:39" pos:end="149:53"><name pos:start="149:39" pos:end="149:50">filtergraphs</name><index pos:start="149:51" pos:end="149:53">[<expr pos:start="149:52" pos:end="149:52"><name pos:start="149:52" pos:end="149:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="149:56" pos:end="149:56">&lt;</operator> <literal type="number" pos:start="149:58" pos:end="149:58">0</literal></expr>)</condition> <block pos:start="149:61" pos:end="155:13">{<block_content pos:start="151:17" pos:end="153:24">

                <expr_stmt pos:start="151:17" pos:end="151:78"><expr pos:start="151:17" pos:end="151:77"><call pos:start="151:17" pos:end="151:77"><name pos:start="151:17" pos:end="151:22">av_log</name><argument_list pos:start="151:23" pos:end="151:77">(<argument pos:start="151:24" pos:end="151:27"><expr pos:start="151:24" pos:end="151:27"><name pos:start="151:24" pos:end="151:27">NULL</name></expr></argument>, <argument pos:start="151:30" pos:end="151:41"><expr pos:start="151:30" pos:end="151:41"><name pos:start="151:30" pos:end="151:41">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="151:44" pos:end="151:76"><expr pos:start="151:44" pos:end="151:76"><literal type="string" pos:start="151:44" pos:end="151:76">"Error reinitializing filters!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:24"><expr pos:start="153:17" pos:end="153:23"><call pos:start="153:17" pos:end="153:23"><name pos:start="153:17" pos:end="153:20">exit</name><argument_list pos:start="153:21" pos:end="153:23">(<argument pos:start="153:22" pos:end="153:22"><expr pos:start="153:22" pos:end="153:22"><literal type="number" pos:start="153:22" pos:end="153:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:101"><expr pos:start="163:5" pos:end="163:100"><name pos:start="163:5" pos:end="163:23">frame_sample_aspect</name><operator pos:start="163:24" pos:end="163:24">=</operator> <call pos:start="163:26" pos:end="163:100"><name pos:start="163:26" pos:end="163:35">av_opt_ptr</name><argument_list pos:start="163:36" pos:end="163:100">(<argument pos:start="163:37" pos:end="163:61"><expr pos:start="163:37" pos:end="163:61"><call pos:start="163:37" pos:end="163:61"><name pos:start="163:37" pos:end="163:59">avcodec_get_frame_class</name><argument_list pos:start="163:60" pos:end="163:61">()</argument_list></call></expr></argument>, <argument pos:start="163:64" pos:end="163:76"><expr pos:start="163:64" pos:end="163:76"><name pos:start="163:64" pos:end="163:76">decoded_frame</name></expr></argument>, <argument pos:start="163:79" pos:end="163:99"><expr pos:start="163:79" pos:end="163:99"><literal type="string" pos:start="163:79" pos:end="163:99">"sample_aspect_ratio"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="165:5" pos:end="199:5">for <control pos:start="165:9" pos:end="165:41">(<init pos:start="165:10" pos:end="165:15"><expr pos:start="165:10" pos:end="165:14"><name pos:start="165:10" pos:end="165:10">i</name> <operator pos:start="165:12" pos:end="165:12">=</operator> <literal type="number" pos:start="165:14" pos:end="165:14">0</literal></expr>;</init> <condition pos:start="165:17" pos:end="165:36"><expr pos:start="165:17" pos:end="165:35"><name pos:start="165:17" pos:end="165:17">i</name> <operator pos:start="165:19" pos:end="165:19">&lt;</operator> <name pos:start="165:21" pos:end="165:35"><name pos:start="165:21" pos:end="165:23">ist</name><operator pos:start="165:24" pos:end="165:25">-&gt;</operator><name pos:start="165:26" pos:end="165:35">nb_filters</name></name></expr>;</condition> <incr pos:start="165:38" pos:end="165:40"><expr pos:start="165:38" pos:end="165:40"><name pos:start="165:38" pos:end="165:38">i</name><operator pos:start="165:39" pos:end="165:40">++</operator></expr></incr>)</control> <block pos:start="165:43" pos:end="199:5">{<block_content pos:start="167:9" pos:end="195:9">

        <if_stmt pos:start="167:9" pos:end="169:64"><if pos:start="167:9" pos:end="169:64">if <condition pos:start="167:12" pos:end="167:38">(<expr pos:start="167:13" pos:end="167:37"><operator pos:start="167:13" pos:end="167:13">!</operator><name pos:start="167:14" pos:end="167:37"><name pos:start="167:14" pos:end="167:32">frame_sample_aspect</name><operator pos:start="167:33" pos:end="167:34">-&gt;</operator><name pos:start="167:35" pos:end="167:37">num</name></name></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:64"><block_content pos:start="169:13" pos:end="169:64">

            <expr_stmt pos:start="169:13" pos:end="169:64"><expr pos:start="169:13" pos:end="169:63"><operator pos:start="169:13" pos:end="169:13">*</operator><name pos:start="169:14" pos:end="169:32">frame_sample_aspect</name> <operator pos:start="169:34" pos:end="169:34">=</operator> <name pos:start="169:36" pos:end="169:63"><name pos:start="169:36" pos:end="169:38">ist</name><operator pos:start="169:39" pos:end="169:40">-&gt;</operator><name pos:start="169:41" pos:end="169:42">st</name><operator pos:start="169:43" pos:end="169:44">-&gt;</operator><name pos:start="169:45" pos:end="169:63">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="173:9" pos:end="185:30"><if pos:start="173:9" pos:end="183:9">if <condition pos:start="173:12" pos:end="173:36">(<expr pos:start="173:13" pos:end="173:35"><name pos:start="173:13" pos:end="173:13">i</name> <operator pos:start="173:15" pos:end="173:15">&lt;</operator> <name pos:start="173:17" pos:end="173:31"><name pos:start="173:17" pos:end="173:19">ist</name><operator pos:start="173:20" pos:end="173:21">-&gt;</operator><name pos:start="173:22" pos:end="173:31">nb_filters</name></name> <operator pos:start="173:33" pos:end="173:33">-</operator> <literal type="number" pos:start="173:35" pos:end="173:35">1</literal></expr>)</condition> <block pos:start="173:38" pos:end="183:9">{<block_content pos:start="175:13" pos:end="181:22">

            <expr_stmt pos:start="175:13" pos:end="175:34"><expr pos:start="175:13" pos:end="175:33"><name pos:start="175:13" pos:end="175:13">f</name> <operator pos:start="175:15" pos:end="175:15">=</operator> <name pos:start="175:17" pos:end="175:33"><name pos:start="175:17" pos:end="175:19">ist</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:33">filter_frame</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:49"><expr pos:start="177:13" pos:end="177:48"><name pos:start="177:13" pos:end="177:15">err</name> <operator pos:start="177:17" pos:end="177:17">=</operator> <call pos:start="177:19" pos:end="177:48"><name pos:start="177:19" pos:end="177:30">av_frame_ref</name><argument_list pos:start="177:31" pos:end="177:48">(<argument pos:start="177:32" pos:end="177:32"><expr pos:start="177:32" pos:end="177:32"><name pos:start="177:32" pos:end="177:32">f</name></expr></argument>, <argument pos:start="177:35" pos:end="177:47"><expr pos:start="177:35" pos:end="177:47"><name pos:start="177:35" pos:end="177:47">decoded_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="179:13" pos:end="181:22"><if pos:start="179:13" pos:end="181:22">if <condition pos:start="179:16" pos:end="179:24">(<expr pos:start="179:17" pos:end="179:23"><name pos:start="179:17" pos:end="179:19">err</name> <operator pos:start="179:21" pos:end="179:21">&lt;</operator> <literal type="number" pos:start="179:23" pos:end="179:23">0</literal></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:22"><block_content pos:start="181:17" pos:end="181:22">

                <break pos:start="181:17" pos:end="181:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="183:11" pos:end="185:30">else<block type="pseudo" pos:start="185:13" pos:end="185:30"><block_content pos:start="185:13" pos:end="185:30">

            <expr_stmt pos:start="185:13" pos:end="185:30"><expr pos:start="185:13" pos:end="185:29"><name pos:start="185:13" pos:end="185:13">f</name> <operator pos:start="185:15" pos:end="185:15">=</operator> <name pos:start="185:17" pos:end="185:29">decoded_frame</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="187:9" pos:end="195:9"><if pos:start="187:9" pos:end="195:9">if<condition pos:start="187:11" pos:end="189:66">(<expr pos:start="187:12" pos:end="189:65"><call pos:start="187:12" pos:end="189:63"><name pos:start="187:12" pos:end="187:39">av_buffersrc_add_frame_flags</name><argument_list pos:start="187:40" pos:end="189:63">(<argument pos:start="187:41" pos:end="187:63"><expr pos:start="187:41" pos:end="187:63"><name pos:start="187:41" pos:end="187:55"><name pos:start="187:41" pos:end="187:43">ist</name><operator pos:start="187:44" pos:end="187:45">-&gt;</operator><name pos:start="187:46" pos:end="187:52">filters</name><index pos:start="187:53" pos:end="187:55">[<expr pos:start="187:54" pos:end="187:54"><name pos:start="187:54" pos:end="187:54">i</name></expr>]</index></name><operator pos:start="187:56" pos:end="187:57">-&gt;</operator><name pos:start="187:58" pos:end="187:63">filter</name></expr></argument>, <argument pos:start="187:66" pos:end="187:66"><expr pos:start="187:66" pos:end="187:66"><name pos:start="187:66" pos:end="187:66">f</name></expr></argument>,

                                        <argument pos:start="189:41" pos:end="189:62"><expr pos:start="189:41" pos:end="189:62"><name pos:start="189:41" pos:end="189:62">AV_BUFFERSRC_FLAG_PUSH</name></expr></argument>)</argument_list></call><operator pos:start="189:64" pos:end="189:64">&lt;</operator><literal type="number" pos:start="189:65" pos:end="189:65">0</literal></expr>)</condition> <block pos:start="189:68" pos:end="195:9">{<block_content pos:start="191:13" pos:end="193:20">

            <expr_stmt pos:start="191:13" pos:end="191:87"><expr pos:start="191:13" pos:end="191:86"><call pos:start="191:13" pos:end="191:86"><name pos:start="191:13" pos:end="191:18">av_log</name><argument_list pos:start="191:19" pos:end="191:86">(<argument pos:start="191:20" pos:end="191:23"><expr pos:start="191:20" pos:end="191:23"><name pos:start="191:20" pos:end="191:23">NULL</name></expr></argument>, <argument pos:start="191:26" pos:end="191:37"><expr pos:start="191:26" pos:end="191:37"><name pos:start="191:26" pos:end="191:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="191:40" pos:end="191:85"><expr pos:start="191:40" pos:end="191:85"><literal type="string" pos:start="191:40" pos:end="191:85">"Failed to inject frame into filter network\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:20"><expr pos:start="193:13" pos:end="193:19"><call pos:start="193:13" pos:end="193:19"><name pos:start="193:13" pos:end="193:16">exit</name><argument_list pos:start="193:17" pos:end="193:19">(<argument pos:start="193:18" pos:end="193:18"><expr pos:start="193:18" pos:end="193:18"><literal type="number" pos:start="193:18" pos:end="193:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></for>



    <expr_stmt pos:start="203:5" pos:end="203:38"><expr pos:start="203:5" pos:end="203:37"><call pos:start="203:5" pos:end="203:37"><name pos:start="203:5" pos:end="203:18">av_frame_unref</name><argument_list pos:start="203:19" pos:end="203:37">(<argument pos:start="203:20" pos:end="203:36"><expr pos:start="203:20" pos:end="203:36"><name pos:start="203:20" pos:end="203:36"><name pos:start="203:20" pos:end="203:22">ist</name><operator pos:start="203:23" pos:end="203:24">-&gt;</operator><name pos:start="203:25" pos:end="203:36">filter_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:34"><expr pos:start="205:5" pos:end="205:33"><call pos:start="205:5" pos:end="205:33"><name pos:start="205:5" pos:end="205:18">av_frame_unref</name><argument_list pos:start="205:19" pos:end="205:33">(<argument pos:start="205:20" pos:end="205:32"><expr pos:start="205:20" pos:end="205:32"><name pos:start="205:20" pos:end="205:32">decoded_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:28"><expr pos:start="207:5" pos:end="207:27"><call pos:start="207:5" pos:end="207:27"><name pos:start="207:5" pos:end="207:11">av_free</name><argument_list pos:start="207:12" pos:end="207:27">(<argument pos:start="207:13" pos:end="207:26"><expr pos:start="207:13" pos:end="207:26"><name pos:start="207:13" pos:end="207:26">buffer_to_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="209:5" pos:end="209:31">return <expr pos:start="209:12" pos:end="209:30"><ternary pos:start="209:12" pos:end="209:30"><condition pos:start="209:12" pos:end="209:20"><expr pos:start="209:12" pos:end="209:18"><name pos:start="209:12" pos:end="209:14">err</name> <operator pos:start="209:16" pos:end="209:16">&lt;</operator> <literal type="number" pos:start="209:18" pos:end="209:18">0</literal></expr> ?</condition><then pos:start="209:22" pos:end="209:24"> <expr pos:start="209:22" pos:end="209:24"><name pos:start="209:22" pos:end="209:24">err</name></expr> </then><else pos:start="209:26" pos:end="209:30">: <expr pos:start="209:28" pos:end="209:30"><name pos:start="209:28" pos:end="209:30">ret</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
