<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22123.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">encode_signal_range</name><parameter_list pos:start="1:32" pos:end="1:49">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:45">VC2EncContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:37">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">avctx</name> <init pos:start="7:27" pos:end="7:36">= <expr pos:start="7:29" pos:end="7:36"><name pos:start="7:29" pos:end="7:36"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:36">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:72"><decl pos:start="9:5" pos:end="9:71"><type pos:start="9:5" pos:end="9:30"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:28">AVPixFmtDescriptor</name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:33">fmt</name> <init pos:start="9:35" pos:end="9:71">= <expr pos:start="9:37" pos:end="9:71"><call pos:start="9:37" pos:end="9:71"><name pos:start="9:37" pos:end="9:55">av_pix_fmt_desc_get</name><argument_list pos:start="9:56" pos:end="9:71">(<argument pos:start="9:57" pos:end="9:70"><expr pos:start="9:57" pos:end="9:70"><name pos:start="9:57" pos:end="9:70"><name pos:start="9:57" pos:end="9:61">avctx</name><operator pos:start="9:62" pos:end="9:63">-&gt;</operator><name pos:start="9:64" pos:end="9:70">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:19">depth</name> <init pos:start="11:21" pos:end="11:40">= <expr pos:start="11:23" pos:end="11:40"><name pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:25">fmt</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:31">comp</name><index pos:start="11:32" pos:end="11:34">[<expr pos:start="11:33" pos:end="11:33"><literal type="number" pos:start="11:33" pos:end="11:33">0</literal></expr>]</index></name><operator pos:start="11:35" pos:end="11:35">.</operator><name pos:start="11:36" pos:end="11:40">depth</name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="47:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:61">(<expr pos:start="13:9" pos:end="13:60"><name pos:start="13:9" pos:end="13:13">depth</name> <operator pos:start="13:15" pos:end="13:16">==</operator> <literal type="number" pos:start="13:18" pos:end="13:18">8</literal> <operator pos:start="13:20" pos:end="13:21">&amp;&amp;</operator> <name pos:start="13:23" pos:end="13:40"><name pos:start="13:23" pos:end="13:27">avctx</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:40">color_range</name></name> <operator pos:start="13:42" pos:end="13:43">==</operator> <name pos:start="13:45" pos:end="13:60">AVCOL_RANGE_JPEG</name></expr>)</condition> <block pos:start="13:63" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:29">

        <expr_stmt pos:start="15:9" pos:end="15:16"><expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">idx</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <literal type="number" pos:start="15:15" pos:end="15:15">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:19"><expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:14">bpp</name></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:22">diff_offset</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <literal type="number" pos:start="19:26" pos:end="19:28">128</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="21:7" pos:end="31:5">else if <condition pos:start="21:15" pos:end="23:62">(<expr pos:start="21:16" pos:end="23:61"><name pos:start="21:16" pos:end="21:20">depth</name> <operator pos:start="21:22" pos:end="21:23">==</operator> <literal type="number" pos:start="21:25" pos:end="21:25">8</literal> <operator pos:start="21:27" pos:end="21:28">&amp;&amp;</operator> <operator pos:start="21:30" pos:end="21:30">(</operator><name pos:start="21:31" pos:end="21:48"><name pos:start="21:31" pos:end="21:35">avctx</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:48">color_range</name></name> <operator pos:start="21:50" pos:end="21:51">==</operator> <name pos:start="21:53" pos:end="21:68">AVCOL_RANGE_MPEG</name> <operator pos:start="21:70" pos:end="21:71">||</operator>

               <name pos:start="23:16" pos:end="23:33"><name pos:start="23:16" pos:end="23:20">avctx</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:33">color_range</name></name> <operator pos:start="23:35" pos:end="23:36">==</operator> <name pos:start="23:38" pos:end="23:60">AVCOL_RANGE_UNSPECIFIED</name><operator pos:start="23:61" pos:end="23:61">)</operator></expr>)</condition> <block pos:start="23:64" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:29">

        <expr_stmt pos:start="25:9" pos:end="25:16"><expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:11">idx</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <literal type="number" pos:start="25:15" pos:end="25:15">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:19"><expr pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:14">bpp</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:22">diff_offset</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <literal type="number" pos:start="29:26" pos:end="29:28">128</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="31:7" pos:end="39:5">else if <condition pos:start="31:15" pos:end="31:27">(<expr pos:start="31:16" pos:end="31:26"><name pos:start="31:16" pos:end="31:20">depth</name> <operator pos:start="31:22" pos:end="31:23">==</operator> <literal type="number" pos:start="31:25" pos:end="31:26">10</literal></expr>)</condition> <block pos:start="31:29" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:29">

        <expr_stmt pos:start="33:9" pos:end="33:16"><expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:11">idx</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <literal type="number" pos:start="33:15" pos:end="33:15">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:19"><expr pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:14">bpp</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:29"><expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:22">diff_offset</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <literal type="number" pos:start="37:26" pos:end="37:28">512</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="47:5">else <block pos:start="39:12" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:30">

        <expr_stmt pos:start="41:9" pos:end="41:16"><expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">idx</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <literal type="number" pos:start="41:15" pos:end="41:15">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:19"><expr pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:14">bpp</name></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:22">diff_offset</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <literal type="number" pos:start="45:26" pos:end="45:29">2048</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:47"><expr pos:start="49:5" pos:end="49:46"><call pos:start="49:5" pos:end="49:46"><name pos:start="49:5" pos:end="49:12">put_bits</name><argument_list pos:start="49:13" pos:end="49:46">(<argument pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:19"><operator pos:start="49:14" pos:end="49:14">&amp;</operator><name pos:start="49:15" pos:end="49:19"><name pos:start="49:15" pos:end="49:15">s</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:19">pb</name></name></expr></argument>, <argument pos:start="49:22" pos:end="49:22"><expr pos:start="49:22" pos:end="49:22"><literal type="number" pos:start="49:22" pos:end="49:22">1</literal></expr></argument>, <argument pos:start="49:25" pos:end="49:45"><expr pos:start="49:25" pos:end="49:45"><operator pos:start="49:25" pos:end="49:25">!</operator><name pos:start="49:26" pos:end="49:45"><name pos:start="49:26" pos:end="49:26">s</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:45">strict_compliance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:37"><if pos:start="51:5" pos:end="53:37">if <condition pos:start="51:8" pos:end="51:30">(<expr pos:start="51:9" pos:end="51:29"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:29"><name pos:start="51:10" pos:end="51:10">s</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:29">strict_compliance</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:37"><block_content pos:start="53:9" pos:end="53:37">

        <expr_stmt pos:start="53:9" pos:end="53:37"><expr pos:start="53:9" pos:end="53:36"><call pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:23">put_vc2_ue_uint</name><argument_list pos:start="53:24" pos:end="53:36">(<argument pos:start="53:25" pos:end="53:30"><expr pos:start="53:25" pos:end="53:30"><operator pos:start="53:25" pos:end="53:25">&amp;</operator><name pos:start="53:26" pos:end="53:30"><name pos:start="53:26" pos:end="53:26">s</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:30">pb</name></name></expr></argument>, <argument pos:start="53:33" pos:end="53:35"><expr pos:start="53:33" pos:end="53:35"><name pos:start="53:33" pos:end="53:35">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
