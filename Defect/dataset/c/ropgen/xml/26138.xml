<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26138.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">try_decode_video_frame</name><parameter_list pos:start="1:34" pos:end="1:87">(<parameter pos:start="1:35" pos:end="1:59"><decl pos:start="1:35" pos:end="1:59"><type pos:start="1:35" pos:end="1:59"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:59">codec_ctx</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:74"><decl pos:start="1:62" pos:end="1:74"><type pos:start="1:62" pos:end="1:74"><name pos:start="1:62" pos:end="1:69">AVPacket</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">pkt</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:86"><decl pos:start="1:77" pos:end="1:86"><type pos:start="1:77" pos:end="1:86"><name pos:start="1:77" pos:end="1:79">int</name></type> <name pos:start="1:81" pos:end="1:86">decode</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">got_frame</name> <init pos:start="7:19" pos:end="7:21">= <expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:18">frame</name> <init pos:start="9:20" pos:end="9:25">= <expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">skip_frame</name> <init pos:start="11:20" pos:end="11:42">= <expr pos:start="11:22" pos:end="11:42"><name pos:start="11:22" pos:end="11:42"><name pos:start="11:22" pos:end="11:30">codec_ctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:42">skip_frame</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="31:5"><if pos:start="15:5" pos:end="31:5">if <condition pos:start="15:8" pos:end="15:36">(<expr pos:start="15:9" pos:end="15:35"><operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:35"><name pos:start="15:10" pos:end="15:24">avcodec_is_open</name><argument_list pos:start="15:25" pos:end="15:35">(<argument pos:start="15:26" pos:end="15:34"><expr pos:start="15:26" pos:end="15:34"><name pos:start="15:26" pos:end="15:34">codec_ctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:38" pos:end="31:5">{<block_content pos:start="17:9" pos:end="29:9">

        <decl_stmt pos:start="17:9" pos:end="17:73"><decl pos:start="17:9" pos:end="17:72"><type pos:start="17:9" pos:end="17:23"><specifier pos:start="17:9" pos:end="17:13">const</specifier> <name pos:start="17:15" pos:end="17:21">AVCodec</name> <modifier pos:start="17:23" pos:end="17:23">*</modifier></type><name pos:start="17:24" pos:end="17:28">codec</name> <init pos:start="17:30" pos:end="17:72">= <expr pos:start="17:32" pos:end="17:72"><call pos:start="17:32" pos:end="17:72"><name pos:start="17:32" pos:end="17:51">avcodec_find_decoder</name><argument_list pos:start="17:52" pos:end="17:72">(<argument pos:start="17:53" pos:end="17:71"><expr pos:start="17:53" pos:end="17:71"><name pos:start="17:53" pos:end="17:71"><name pos:start="17:53" pos:end="17:61">codec_ctx</name><operator pos:start="17:62" pos:end="17:63">-&gt;</operator><name pos:start="17:64" pos:end="17:71">codec_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:52"><expr pos:start="21:9" pos:end="21:51"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:51"><name pos:start="21:15" pos:end="21:27">avcodec_open2</name><argument_list pos:start="21:28" pos:end="21:51">(<argument pos:start="21:29" pos:end="21:37"><expr pos:start="21:29" pos:end="21:37"><name pos:start="21:29" pos:end="21:37">codec_ctx</name></expr></argument>, <argument pos:start="21:40" pos:end="21:44"><expr pos:start="21:40" pos:end="21:44"><name pos:start="21:40" pos:end="21:44">codec</name></expr></argument>, <argument pos:start="21:47" pos:end="21:50"><expr pos:start="21:47" pos:end="21:50"><name pos:start="21:47" pos:end="21:50">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:20">(<expr pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:15">ret</name> <operator pos:start="23:17" pos:end="23:17">&lt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>)</condition> <block pos:start="23:22" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:21">

            <expr_stmt pos:start="25:13" pos:end="25:70"><expr pos:start="25:13" pos:end="25:69"><call pos:start="25:13" pos:end="25:69"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="25:69">(<argument pos:start="25:20" pos:end="25:28"><expr pos:start="25:20" pos:end="25:28"><name pos:start="25:20" pos:end="25:28">codec_ctx</name></expr></argument>, <argument pos:start="25:31" pos:end="25:42"><expr pos:start="25:31" pos:end="25:42"><name pos:start="25:31" pos:end="25:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:45" pos:end="25:68"><expr pos:start="25:45" pos:end="25:68"><literal type="string" pos:start="25:45" pos:end="25:68">"Failed to open codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="27:13" pos:end="27:21">goto <name pos:start="27:18" pos:end="27:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:29"><expr pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:9">frame</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:26">av_frame_alloc</name><argument_list pos:start="35:27" pos:end="35:28">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:15">(<expr pos:start="37:9" pos:end="37:14"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:14">frame</name></expr>)</condition> <block pos:start="37:17" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:17">

        <expr_stmt pos:start="39:9" pos:end="39:65"><expr pos:start="39:9" pos:end="39:64"><call pos:start="39:9" pos:end="39:64"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:64">(<argument pos:start="39:16" pos:end="39:19"><expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">NULL</name></expr></argument>, <argument pos:start="39:22" pos:end="39:33"><expr pos:start="39:22" pos:end="39:33"><name pos:start="39:22" pos:end="39:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:36" pos:end="39:63"><expr pos:start="39:36" pos:end="39:63"><literal type="string" pos:start="39:36" pos:end="39:63">"Failed to allocate frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="41:9" pos:end="41:17">goto <name pos:start="41:14" pos:end="41:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:88">(<expr pos:start="47:9" pos:end="47:87"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:15">decode</name> <operator pos:start="47:17" pos:end="47:18">&amp;&amp;</operator> <name pos:start="47:20" pos:end="47:50"><name pos:start="47:20" pos:end="47:28">codec_ctx</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:35">codec</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:50">caps_internal</name></name> <operator pos:start="47:52" pos:end="47:52">&amp;</operator> <name pos:start="47:54" pos:end="47:87">FF_CODEC_CAP_SKIP_FRAME_FILL_PARAM</name></expr>)</condition> <block pos:start="47:90" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:46">

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:17">codec_ctx</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:29">skip_frame</name></name> <operator pos:start="49:31" pos:end="49:31">=</operator> <name pos:start="49:33" pos:end="49:45">AVDISCARD_ALL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <do pos:start="55:5" pos:end="77:28">do <block pos:start="55:8" pos:end="77:5">{<block_content pos:start="57:9" pos:end="75:9">

        <expr_stmt pos:start="57:9" pos:end="57:71"><expr pos:start="57:9" pos:end="57:70"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:70"><name pos:start="57:15" pos:end="57:35">avcodec_decode_video2</name><argument_list pos:start="57:36" pos:end="57:70">(<argument pos:start="57:37" pos:end="57:45"><expr pos:start="57:37" pos:end="57:45"><name pos:start="57:37" pos:end="57:45">codec_ctx</name></expr></argument>, <argument pos:start="57:48" pos:end="57:52"><expr pos:start="57:48" pos:end="57:52"><name pos:start="57:48" pos:end="57:52">frame</name></expr></argument>, <argument pos:start="57:55" pos:end="57:64"><expr pos:start="57:55" pos:end="57:64"><operator pos:start="57:55" pos:end="57:55">&amp;</operator><name pos:start="57:56" pos:end="57:64">got_frame</name></expr></argument>, <argument pos:start="57:67" pos:end="57:69"><expr pos:start="57:67" pos:end="57:69"><name pos:start="57:67" pos:end="57:69">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:54"><expr pos:start="59:9" pos:end="59:53"><call pos:start="59:9" pos:end="59:53"><name pos:start="59:9" pos:end="59:18">av_assert0</name><argument_list pos:start="59:19" pos:end="59:53">(<argument pos:start="59:20" pos:end="59:52"><expr pos:start="59:20" pos:end="59:52"><name pos:start="59:20" pos:end="59:25">decode</name> <operator pos:start="59:27" pos:end="59:28">||</operator> <operator pos:start="59:30" pos:end="59:30">(</operator><operator pos:start="59:31" pos:end="59:31">!</operator><name pos:start="59:32" pos:end="59:37">decode</name> <operator pos:start="59:39" pos:end="59:40">&amp;&amp;</operator> <operator pos:start="59:42" pos:end="59:42">!</operator><name pos:start="59:43" pos:end="59:51">got_frame</name><operator pos:start="59:52" pos:end="59:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="63:18"><if pos:start="61:9" pos:end="63:18">if <condition pos:start="61:12" pos:end="61:20">(<expr pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">&lt;</operator> <literal type="number" pos:start="61:19" pos:end="61:19">0</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:18"><block_content pos:start="63:13" pos:end="63:18">

            <break pos:start="63:13" pos:end="63:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:25"><expr pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:11">pkt</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:17">data</name></name> <operator pos:start="65:19" pos:end="65:20">+=</operator> <name pos:start="65:22" pos:end="65:24">ret</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:25"><expr pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:17"><name pos:start="67:9" pos:end="67:11">pkt</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:17">size</name></name> <operator pos:start="67:19" pos:end="67:20">-=</operator> <name pos:start="67:22" pos:end="67:24">ret</name></expr>;</expr_stmt>



        <if_stmt pos:start="71:9" pos:end="75:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:22">(<expr pos:start="71:13" pos:end="71:21"><name pos:start="71:13" pos:end="71:21">got_frame</name></expr>)</condition> <block pos:start="71:24" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:18">

            <break pos:start="73:13" pos:end="73:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="77:13" pos:end="77:27">(<expr pos:start="77:14" pos:end="77:26"><name pos:start="77:14" pos:end="77:22"><name pos:start="77:14" pos:end="77:16">pkt</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:22">size</name></name> <operator pos:start="77:24" pos:end="77:24">&gt;</operator> <literal type="number" pos:start="77:26" pos:end="77:26">0</literal></expr>)</condition>;</do>



<label pos:start="81:1" pos:end="81:4"><name pos:start="81:1" pos:end="81:3">end</name>:</label>

    <expr_stmt pos:start="83:5" pos:end="83:39"><expr pos:start="83:5" pos:end="83:38"><name pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:13">codec_ctx</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:25">skip_frame</name></name> <operator pos:start="83:27" pos:end="83:27">=</operator> <name pos:start="83:29" pos:end="83:38">skip_frame</name></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:26"><expr pos:start="87:5" pos:end="87:25"><call pos:start="87:5" pos:end="87:25"><name pos:start="87:5" pos:end="87:17">av_frame_free</name><argument_list pos:start="87:18" pos:end="87:25">(<argument pos:start="87:19" pos:end="87:24"><expr pos:start="87:19" pos:end="87:24"><operator pos:start="87:19" pos:end="87:19">&amp;</operator><name pos:start="87:20" pos:end="87:24">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:15">return <expr pos:start="89:12" pos:end="89:14"><name pos:start="89:12" pos:end="89:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
