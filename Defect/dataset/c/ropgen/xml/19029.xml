<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19029.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">rtsp_read_packet</name><parameter_list pos:start="1:28" pos:end="3:42">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:41"><decl pos:start="3:29" pos:end="3:41"><type pos:start="3:29" pos:end="3:41"><name pos:start="3:29" pos:end="3:36">AVPacket</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="179:1">{<block_content pos:start="7:5" pos:end="177:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">RTSPState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">rt</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:21">RTSPMessageHeader</name></type> <name pos:start="11:23" pos:end="11:28">reply1</name></decl>, <decl pos:start="11:31" pos:end="11:46"><type ref="prev" pos:start="11:5" pos:end="11:21"><modifier pos:start="11:31" pos:end="11:31">*</modifier></type><name pos:start="11:32" pos:end="11:36">reply</name> <init pos:start="11:38" pos:end="11:46">= <expr pos:start="11:40" pos:end="11:46"><operator pos:start="11:40" pos:end="11:40">&amp;</operator><name pos:start="11:41" pos:end="11:46">reply1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:18"><name pos:start="13:10" pos:end="13:12">cmd</name><index pos:start="13:13" pos:end="13:18">[<expr pos:start="13:14" pos:end="13:17"><literal type="number" pos:start="13:14" pos:end="13:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="133:5"><if pos:start="17:5" pos:end="133:5">if <condition pos:start="17:8" pos:end="17:44">(<expr pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:10">rt</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:23">server_type</name></name> <operator pos:start="17:25" pos:end="17:26">==</operator> <name pos:start="17:28" pos:end="17:43">RTSP_SERVER_REAL</name></expr>)</condition> <block pos:start="17:46" pos:end="133:5">{<block_content pos:start="19:9" pos:end="131:9">

        <decl_stmt pos:start="19:9" pos:end="19:14"><decl pos:start="19:9" pos:end="19:13"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:42"><decl pos:start="21:9" pos:end="21:41"><type pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:12">enum</name> <name pos:start="21:14" pos:end="21:22">AVDiscard</name></name></type> <name pos:start="21:24" pos:end="21:41"><name pos:start="21:24" pos:end="21:28">cache</name><index pos:start="21:29" pos:end="21:41">[<expr pos:start="21:30" pos:end="21:40"><name pos:start="21:30" pos:end="21:40">MAX_STREAMS</name></expr>]</index></name></decl>;</decl_stmt>



        <for pos:start="25:9" pos:end="27:46">for <control pos:start="25:13" pos:end="25:43">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">i</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:38"><expr pos:start="25:21" pos:end="25:37"><name pos:start="25:21" pos:end="25:21">i</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <name pos:start="25:25" pos:end="25:37"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:37">nb_streams</name></name></expr>;</condition> <incr pos:start="25:40" pos:end="25:42"><expr pos:start="25:40" pos:end="25:42"><name pos:start="25:40" pos:end="25:40">i</name><operator pos:start="25:41" pos:end="25:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:13" pos:end="27:46"><block_content pos:start="27:13" pos:end="27:46">

            <expr_stmt pos:start="27:13" pos:end="27:46"><expr pos:start="27:13" pos:end="27:45"><name pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:17">cache</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><name pos:start="27:19" pos:end="27:19">i</name></expr>]</index></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:36"><name pos:start="27:24" pos:end="27:24">s</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:33">streams</name><index pos:start="27:34" pos:end="27:36">[<expr pos:start="27:35" pos:end="27:35"><name pos:start="27:35" pos:end="27:35">i</name></expr>]</index></name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:45">discard</name></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="31:9" pos:end="55:9"><if pos:start="31:9" pos:end="55:9">if <condition pos:start="31:12" pos:end="31:35">(<expr pos:start="31:13" pos:end="31:34"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:34"><name pos:start="31:14" pos:end="31:15">rt</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:34">need_subscription</name></name></expr>)</condition> <block pos:start="31:37" pos:end="55:9">{<block_content pos:start="33:13" pos:end="53:13">

            <if_stmt pos:start="33:13" pos:end="53:13"><if pos:start="33:13" pos:end="53:13">if <condition pos:start="33:16" pos:end="35:64">(<expr pos:start="33:17" pos:end="35:63"><call pos:start="33:17" pos:end="35:63"><name pos:start="33:17" pos:end="33:22">memcmp</name> <argument_list pos:start="33:24" pos:end="35:63">(<argument pos:start="33:25" pos:end="33:29"><expr pos:start="33:25" pos:end="33:29"><name pos:start="33:25" pos:end="33:29">cache</name></expr></argument>, <argument pos:start="33:32" pos:end="33:51"><expr pos:start="33:32" pos:end="33:51"><name pos:start="33:32" pos:end="33:51"><name pos:start="33:32" pos:end="33:33">rt</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:51">real_setup_cache</name></name></expr></argument>,

                        <argument pos:start="35:25" pos:end="35:62"><expr pos:start="35:25" pos:end="35:62"><sizeof pos:start="35:25" pos:end="35:46">sizeof<argument_list pos:start="35:31" pos:end="35:46">(<argument pos:start="35:32" pos:end="35:45"><expr pos:start="35:32" pos:end="35:45">enum <name pos:start="35:37" pos:end="35:45">AVDiscard</name></expr></argument>)</argument_list></sizeof> <operator pos:start="35:48" pos:end="35:48">*</operator> <name pos:start="35:50" pos:end="35:62"><name pos:start="35:50" pos:end="35:50">s</name><operator pos:start="35:51" pos:end="35:52">-&gt;</operator><name pos:start="35:53" pos:end="35:62">nb_streams</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:66" pos:end="53:13">{<block_content pos:start="37:17" pos:end="51:42">

                <expr_stmt pos:start="37:17" pos:end="43:64"><expr pos:start="37:17" pos:end="43:63"><call pos:start="37:17" pos:end="43:63"><name pos:start="37:17" pos:end="37:27">av_strlcatf</name><argument_list pos:start="37:28" pos:end="43:63">(<argument pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:31">cmd</name></expr></argument>, <argument pos:start="37:34" pos:end="37:44"><expr pos:start="37:34" pos:end="37:44"><sizeof pos:start="37:34" pos:end="37:44">sizeof<argument_list pos:start="37:40" pos:end="37:44">(<argument pos:start="37:41" pos:end="37:43"><expr pos:start="37:41" pos:end="37:43"><name pos:start="37:41" pos:end="37:43">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                            <argument pos:start="39:29" pos:end="41:49"><expr pos:start="39:29" pos:end="41:49"><literal type="string" pos:start="39:29" pos:end="39:59">"SET_PARAMETER %s RTSP/1.0\r\n"</literal>

                            <literal type="string" pos:start="41:29" pos:end="41:49">"Unsubscribe: %s\r\n"</literal></expr></argument>,

                            <argument pos:start="43:29" pos:end="43:39"><expr pos:start="43:29" pos:end="43:39"><name pos:start="43:29" pos:end="43:39"><name pos:start="43:29" pos:end="43:29">s</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:39">filename</name></name></expr></argument>, <argument pos:start="43:42" pos:end="43:62"><expr pos:start="43:42" pos:end="43:62"><name pos:start="43:42" pos:end="43:62"><name pos:start="43:42" pos:end="43:43">rt</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:62">last_subscription</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:51"><expr pos:start="45:17" pos:end="45:50"><call pos:start="45:17" pos:end="45:50"><name pos:start="45:17" pos:end="45:29">rtsp_send_cmd</name><argument_list pos:start="45:30" pos:end="45:50">(<argument pos:start="45:31" pos:end="45:31"><expr pos:start="45:31" pos:end="45:31"><name pos:start="45:31" pos:end="45:31">s</name></expr></argument>, <argument pos:start="45:34" pos:end="45:36"><expr pos:start="45:34" pos:end="45:36"><name pos:start="45:34" pos:end="45:36">cmd</name></expr></argument>, <argument pos:start="45:39" pos:end="45:43"><expr pos:start="45:39" pos:end="45:43"><name pos:start="45:39" pos:end="45:43">reply</name></expr></argument>, <argument pos:start="45:46" pos:end="45:49"><expr pos:start="45:46" pos:end="45:49"><name pos:start="45:46" pos:end="45:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="47:17" pos:end="49:47"><if pos:start="47:17" pos:end="49:47">if <condition pos:start="47:20" pos:end="47:57">(<expr pos:start="47:21" pos:end="47:56"><name pos:start="47:21" pos:end="47:38"><name pos:start="47:21" pos:end="47:25">reply</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:38">status_code</name></name> <operator pos:start="47:40" pos:end="47:41">!=</operator> <name pos:start="47:43" pos:end="47:56">RTSP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="49:21" pos:end="49:47"><block_content pos:start="49:21" pos:end="49:47">

                    <return pos:start="49:21" pos:end="49:47">return <expr pos:start="49:28" pos:end="49:46"><name pos:start="49:28" pos:end="49:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:42"><expr pos:start="51:17" pos:end="51:41"><name pos:start="51:17" pos:end="51:37"><name pos:start="51:17" pos:end="51:18">rt</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:37">need_subscription</name></name> <operator pos:start="51:39" pos:end="51:39">=</operator> <literal type="number" pos:start="51:41" pos:end="51:41">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="59:9" pos:end="131:9"><if pos:start="59:9" pos:end="131:9">if <condition pos:start="59:12" pos:end="59:34">(<expr pos:start="59:13" pos:end="59:33"><name pos:start="59:13" pos:end="59:33"><name pos:start="59:13" pos:end="59:14">rt</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:33">need_subscription</name></name></expr>)</condition> <block pos:start="59:36" pos:end="131:9">{<block_content pos:start="61:13" pos:end="129:35">

            <decl_stmt pos:start="61:13" pos:end="61:38"><decl pos:start="61:13" pos:end="61:17"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:17">r</name></decl>, <decl pos:start="61:20" pos:end="61:26"><type ref="prev" pos:start="61:13" pos:end="61:15"/><name pos:start="61:20" pos:end="61:26">rule_nr</name></decl>, <decl pos:start="61:29" pos:end="61:37"><type ref="prev" pos:start="61:13" pos:end="61:15"/><name pos:start="61:29" pos:end="61:33">first</name> <init pos:start="61:35" pos:end="61:37">= <expr pos:start="61:37" pos:end="61:37"><literal type="number" pos:start="61:37" pos:end="61:37">1</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="65:13" pos:end="67:59"><expr pos:start="65:13" pos:end="67:58"><call pos:start="65:13" pos:end="67:58"><name pos:start="65:13" pos:end="65:18">memcpy</name><argument_list pos:start="65:19" pos:end="67:58">(<argument pos:start="65:20" pos:end="65:39"><expr pos:start="65:20" pos:end="65:39"><name pos:start="65:20" pos:end="65:39"><name pos:start="65:20" pos:end="65:21">rt</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:39">real_setup_cache</name></name></expr></argument>, <argument pos:start="65:42" pos:end="65:46"><expr pos:start="65:42" pos:end="65:46"><name pos:start="65:42" pos:end="65:46">cache</name></expr></argument>,

                   <argument pos:start="67:20" pos:end="67:57"><expr pos:start="67:20" pos:end="67:57"><sizeof pos:start="67:20" pos:end="67:41">sizeof<argument_list pos:start="67:26" pos:end="67:41">(<argument pos:start="67:27" pos:end="67:40"><expr pos:start="67:27" pos:end="67:40">enum <name pos:start="67:32" pos:end="67:40">AVDiscard</name></expr></argument>)</argument_list></sizeof> <operator pos:start="67:43" pos:end="67:43">*</operator> <name pos:start="67:45" pos:end="67:57"><name pos:start="67:45" pos:end="67:45">s</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:57">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:41"><expr pos:start="69:13" pos:end="69:40"><name pos:start="69:13" pos:end="69:36"><name pos:start="69:13" pos:end="69:14">rt</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:33">last_subscription</name><index pos:start="69:34" pos:end="69:36">[<expr pos:start="69:35" pos:end="69:35"><literal type="number" pos:start="69:35" pos:end="69:35">0</literal></expr>]</index></name> <operator pos:start="69:38" pos:end="69:38">=</operator> <literal type="number" pos:start="69:40" pos:end="69:40">0</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="73:13" pos:end="79:34"><expr pos:start="73:13" pos:end="79:33"><call pos:start="73:13" pos:end="79:33"><name pos:start="73:13" pos:end="73:20">snprintf</name><argument_list pos:start="73:21" pos:end="79:33">(<argument pos:start="73:22" pos:end="73:24"><expr pos:start="73:22" pos:end="73:24"><name pos:start="73:22" pos:end="73:24">cmd</name></expr></argument>, <argument pos:start="73:27" pos:end="73:37"><expr pos:start="73:27" pos:end="73:37"><sizeof pos:start="73:27" pos:end="73:37">sizeof<argument_list pos:start="73:33" pos:end="73:37">(<argument pos:start="73:34" pos:end="73:36"><expr pos:start="73:34" pos:end="73:36"><name pos:start="73:34" pos:end="73:36">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="75:22" pos:end="77:34"><expr pos:start="75:22" pos:end="77:34"><literal type="string" pos:start="75:22" pos:end="75:52">"SET_PARAMETER %s RTSP/1.0\r\n"</literal>

                     <literal type="string" pos:start="77:22" pos:end="77:34">"Subscribe: "</literal></expr></argument>,

                     <argument pos:start="79:22" pos:end="79:32"><expr pos:start="79:22" pos:end="79:32"><name pos:start="79:22" pos:end="79:32"><name pos:start="79:22" pos:end="79:22">s</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:32">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="81:13" pos:end="113:13">for <control pos:start="81:17" pos:end="81:53">(<init pos:start="81:18" pos:end="81:23"><expr pos:start="81:18" pos:end="81:22"><name pos:start="81:18" pos:end="81:18">i</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</init> <condition pos:start="81:25" pos:end="81:48"><expr pos:start="81:25" pos:end="81:47"><name pos:start="81:25" pos:end="81:25">i</name> <operator pos:start="81:27" pos:end="81:27">&lt;</operator> <name pos:start="81:29" pos:end="81:47"><name pos:start="81:29" pos:end="81:30">rt</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:47">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="81:50" pos:end="81:52"><expr pos:start="81:50" pos:end="81:52"><name pos:start="81:50" pos:end="81:50">i</name><operator pos:start="81:51" pos:end="81:52">++</operator></expr></incr>)</control> <block pos:start="81:55" pos:end="113:13">{<block_content pos:start="83:17" pos:end="111:17">

                <expr_stmt pos:start="83:17" pos:end="83:28"><expr pos:start="83:17" pos:end="83:27"><name pos:start="83:17" pos:end="83:23">rule_nr</name> <operator pos:start="83:25" pos:end="83:25">=</operator> <literal type="number" pos:start="83:27" pos:end="83:27">0</literal></expr>;</expr_stmt>

                <for pos:start="85:17" pos:end="111:17">for <control pos:start="85:21" pos:end="85:51">(<init pos:start="85:22" pos:end="85:27"><expr pos:start="85:22" pos:end="85:26"><name pos:start="85:22" pos:end="85:22">r</name> <operator pos:start="85:24" pos:end="85:24">=</operator> <literal type="number" pos:start="85:26" pos:end="85:26">0</literal></expr>;</init> <condition pos:start="85:29" pos:end="85:46"><expr pos:start="85:29" pos:end="85:45"><name pos:start="85:29" pos:end="85:29">r</name> <operator pos:start="85:31" pos:end="85:31">&lt;</operator> <name pos:start="85:33" pos:end="85:45"><name pos:start="85:33" pos:end="85:33">s</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:45">nb_streams</name></name></expr>;</condition> <incr pos:start="85:48" pos:end="85:50"><expr pos:start="85:48" pos:end="85:50"><name pos:start="85:48" pos:end="85:48">r</name><operator pos:start="85:49" pos:end="85:50">++</operator></expr></incr>)</control> <block pos:start="85:53" pos:end="111:17">{<block_content pos:start="87:21" pos:end="109:21">

                    <if_stmt pos:start="87:21" pos:end="109:21"><if pos:start="87:21" pos:end="109:21">if <condition pos:start="87:24" pos:end="87:72">(<expr pos:start="87:25" pos:end="87:71"><name pos:start="87:25" pos:end="87:37"><name pos:start="87:25" pos:end="87:25">s</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:34">streams</name><index pos:start="87:35" pos:end="87:37">[<expr pos:start="87:36" pos:end="87:36"><name pos:start="87:36" pos:end="87:36">r</name></expr>]</index></name><operator pos:start="87:38" pos:end="87:39">-&gt;</operator><name pos:start="87:40" pos:end="87:48">priv_data</name> <operator pos:start="87:50" pos:end="87:51">==</operator> <name pos:start="87:53" pos:end="87:71"><name pos:start="87:53" pos:end="87:54">rt</name><operator pos:start="87:55" pos:end="87:56">-&gt;</operator><name pos:start="87:57" pos:end="87:68">rtsp_streams</name><index pos:start="87:69" pos:end="87:71">[<expr pos:start="87:70" pos:end="87:70"><name pos:start="87:70" pos:end="87:70">i</name></expr>]</index></name></expr>)</condition> <block pos:start="87:74" pos:end="109:21">{<block_content pos:start="89:25" pos:end="107:34">

                        <if_stmt pos:start="89:25" pos:end="105:25"><if pos:start="89:25" pos:end="105:25">if <condition pos:start="89:28" pos:end="89:68">(<expr pos:start="89:29" pos:end="89:67"><name pos:start="89:29" pos:end="89:41"><name pos:start="89:29" pos:end="89:29">s</name><operator pos:start="89:30" pos:end="89:31">-&gt;</operator><name pos:start="89:32" pos:end="89:38">streams</name><index pos:start="89:39" pos:end="89:41">[<expr pos:start="89:40" pos:end="89:40"><name pos:start="89:40" pos:end="89:40">r</name></expr>]</index></name><operator pos:start="89:42" pos:end="89:43">-&gt;</operator><name pos:start="89:44" pos:end="89:50">discard</name> <operator pos:start="89:52" pos:end="89:53">!=</operator> <name pos:start="89:55" pos:end="89:67">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="89:70" pos:end="105:25">{<block_content pos:start="91:29" pos:end="103:38">

                            <if_stmt pos:start="91:29" pos:end="95:74"><if pos:start="91:29" pos:end="95:74">if <condition pos:start="91:32" pos:end="91:39">(<expr pos:start="91:33" pos:end="91:38"><operator pos:start="91:33" pos:end="91:33">!</operator><name pos:start="91:34" pos:end="91:38">first</name></expr>)</condition><block type="pseudo" pos:start="93:33" pos:end="95:74"><block_content pos:start="93:33" pos:end="95:74">

                                <expr_stmt pos:start="93:33" pos:end="95:74"><expr pos:start="93:33" pos:end="95:73"><call pos:start="93:33" pos:end="95:73"><name pos:start="93:33" pos:end="93:42">av_strlcat</name><argument_list pos:start="93:43" pos:end="95:73">(<argument pos:start="93:44" pos:end="93:64"><expr pos:start="93:44" pos:end="93:64"><name pos:start="93:44" pos:end="93:64"><name pos:start="93:44" pos:end="93:45">rt</name><operator pos:start="93:46" pos:end="93:47">-&gt;</operator><name pos:start="93:48" pos:end="93:64">last_subscription</name></name></expr></argument>, <argument pos:start="93:67" pos:end="93:69"><expr pos:start="93:67" pos:end="93:69"><literal type="string" pos:start="93:67" pos:end="93:69">","</literal></expr></argument>,

                                           <argument pos:start="95:44" pos:end="95:72"><expr pos:start="95:44" pos:end="95:72"><sizeof pos:start="95:44" pos:end="95:72">sizeof<argument_list pos:start="95:50" pos:end="95:72">(<argument pos:start="95:51" pos:end="95:71"><expr pos:start="95:51" pos:end="95:71"><name pos:start="95:51" pos:end="95:71"><name pos:start="95:51" pos:end="95:52">rt</name><operator pos:start="95:53" pos:end="95:54">-&gt;</operator><name pos:start="95:55" pos:end="95:71">last_subscription</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="97:29" pos:end="101:75"><expr pos:start="97:29" pos:end="101:74"><call pos:start="97:29" pos:end="101:74"><name pos:start="97:29" pos:end="97:49">ff_rdt_subscribe_rule</name><argument_list pos:start="97:50" pos:end="101:74">(

                                <argument pos:start="99:33" pos:end="99:53"><expr pos:start="99:33" pos:end="99:53"><name pos:start="99:33" pos:end="99:53"><name pos:start="99:33" pos:end="99:34">rt</name><operator pos:start="99:35" pos:end="99:36">-&gt;</operator><name pos:start="99:37" pos:end="99:53">last_subscription</name></name></expr></argument>,

                                <argument pos:start="101:33" pos:end="101:61"><expr pos:start="101:33" pos:end="101:61"><sizeof pos:start="101:33" pos:end="101:61">sizeof<argument_list pos:start="101:39" pos:end="101:61">(<argument pos:start="101:40" pos:end="101:60"><expr pos:start="101:40" pos:end="101:60"><name pos:start="101:40" pos:end="101:60"><name pos:start="101:40" pos:end="101:41">rt</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:60">last_subscription</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="101:64" pos:end="101:64"><expr pos:start="101:64" pos:end="101:64"><name pos:start="101:64" pos:end="101:64">i</name></expr></argument>, <argument pos:start="101:67" pos:end="101:73"><expr pos:start="101:67" pos:end="101:73"><name pos:start="101:67" pos:end="101:73">rule_nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="103:29" pos:end="103:38"><expr pos:start="103:29" pos:end="103:37"><name pos:start="103:29" pos:end="103:33">first</name> <operator pos:start="103:35" pos:end="103:35">=</operator> <literal type="number" pos:start="103:37" pos:end="103:37">0</literal></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="107:25" pos:end="107:34"><expr pos:start="107:25" pos:end="107:33"><name pos:start="107:25" pos:end="107:31">rule_nr</name><operator pos:start="107:32" pos:end="107:33">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

            <expr_stmt pos:start="115:13" pos:end="115:75"><expr pos:start="115:13" pos:end="115:74"><call pos:start="115:13" pos:end="115:74"><name pos:start="115:13" pos:end="115:23">av_strlcatf</name><argument_list pos:start="115:24" pos:end="115:74">(<argument pos:start="115:25" pos:end="115:27"><expr pos:start="115:25" pos:end="115:27"><name pos:start="115:25" pos:end="115:27">cmd</name></expr></argument>, <argument pos:start="115:30" pos:end="115:40"><expr pos:start="115:30" pos:end="115:40"><sizeof pos:start="115:30" pos:end="115:40">sizeof<argument_list pos:start="115:36" pos:end="115:40">(<argument pos:start="115:37" pos:end="115:39"><expr pos:start="115:37" pos:end="115:39"><name pos:start="115:37" pos:end="115:39">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="115:43" pos:end="115:50"><expr pos:start="115:43" pos:end="115:50"><literal type="string" pos:start="115:43" pos:end="115:50">"%s\r\n"</literal></expr></argument>, <argument pos:start="115:53" pos:end="115:73"><expr pos:start="115:53" pos:end="115:73"><name pos:start="115:53" pos:end="115:73"><name pos:start="115:53" pos:end="115:54">rt</name><operator pos:start="115:55" pos:end="115:56">-&gt;</operator><name pos:start="115:57" pos:end="115:73">last_subscription</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:47"><expr pos:start="117:13" pos:end="117:46"><call pos:start="117:13" pos:end="117:46"><name pos:start="117:13" pos:end="117:25">rtsp_send_cmd</name><argument_list pos:start="117:26" pos:end="117:46">(<argument pos:start="117:27" pos:end="117:27"><expr pos:start="117:27" pos:end="117:27"><name pos:start="117:27" pos:end="117:27">s</name></expr></argument>, <argument pos:start="117:30" pos:end="117:32"><expr pos:start="117:30" pos:end="117:32"><name pos:start="117:30" pos:end="117:32">cmd</name></expr></argument>, <argument pos:start="117:35" pos:end="117:39"><expr pos:start="117:35" pos:end="117:39"><name pos:start="117:35" pos:end="117:39">reply</name></expr></argument>, <argument pos:start="117:42" pos:end="117:45"><expr pos:start="117:42" pos:end="117:45"><name pos:start="117:42" pos:end="117:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="119:13" pos:end="121:43"><if pos:start="119:13" pos:end="121:43">if <condition pos:start="119:16" pos:end="119:53">(<expr pos:start="119:17" pos:end="119:52"><name pos:start="119:17" pos:end="119:34"><name pos:start="119:17" pos:end="119:21">reply</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:34">status_code</name></name> <operator pos:start="119:36" pos:end="119:37">!=</operator> <name pos:start="119:39" pos:end="119:52">RTSP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:43"><block_content pos:start="121:17" pos:end="121:43">

                <return pos:start="121:17" pos:end="121:43">return <expr pos:start="121:24" pos:end="121:42"><name pos:start="121:24" pos:end="121:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:38"><expr pos:start="123:13" pos:end="123:37"><name pos:start="123:13" pos:end="123:33"><name pos:start="123:13" pos:end="123:14">rt</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:33">need_subscription</name></name> <operator pos:start="123:35" pos:end="123:35">=</operator> <literal type="number" pos:start="123:37" pos:end="123:37">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="127:13" pos:end="129:35"><if pos:start="127:13" pos:end="129:35">if <condition pos:start="127:16" pos:end="127:48">(<expr pos:start="127:17" pos:end="127:47"><name pos:start="127:17" pos:end="127:25"><name pos:start="127:17" pos:end="127:18">rt</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:25">state</name></name> <operator pos:start="127:27" pos:end="127:28">==</operator> <name pos:start="127:30" pos:end="127:47">RTSP_STATE_PLAYING</name></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:35"><block_content pos:start="129:17" pos:end="129:35">

                <expr_stmt pos:start="129:17" pos:end="129:35"><expr pos:start="129:17" pos:end="129:34"><call pos:start="129:17" pos:end="129:34"><name pos:start="129:17" pos:end="129:30">rtsp_read_play</name> <argument_list pos:start="129:32" pos:end="129:34">(<argument pos:start="129:33" pos:end="129:33"><expr pos:start="129:33" pos:end="129:33"><name pos:start="129:33" pos:end="129:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:36"><expr pos:start="137:5" pos:end="137:35"><name pos:start="137:5" pos:end="137:7">ret</name> <operator pos:start="137:9" pos:end="137:9">=</operator> <call pos:start="137:11" pos:end="137:35"><name pos:start="137:11" pos:end="137:27">rtsp_fetch_packet</name><argument_list pos:start="137:28" pos:end="137:35">(<argument pos:start="137:29" pos:end="137:29"><expr pos:start="137:29" pos:end="137:29"><name pos:start="137:29" pos:end="137:29">s</name></expr></argument>, <argument pos:start="137:32" pos:end="137:34"><expr pos:start="137:32" pos:end="137:34"><name pos:start="137:32" pos:end="137:34">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="143:5"><if pos:start="139:5" pos:end="143:5">if <condition pos:start="139:8" pos:end="139:16">(<expr pos:start="139:9" pos:end="139:15"><name pos:start="139:9" pos:end="139:11">ret</name> <operator pos:start="139:13" pos:end="139:13">&lt;</operator> <literal type="number" pos:start="139:15" pos:end="139:15">0</literal></expr>)</condition> <block pos:start="139:18" pos:end="143:5">{<block_content pos:start="141:9" pos:end="141:19">

        <return pos:start="141:9" pos:end="141:19">return <expr pos:start="141:16" pos:end="141:18"><name pos:start="141:16" pos:end="141:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="147:5" pos:end="147:57">/* send dummy request to keep TCP connection alive */</comment>

    <if_stmt pos:start="149:5" pos:end="173:5"><if pos:start="149:5" pos:end="173:5">if <condition pos:start="149:8" pos:end="153:72">(<expr pos:start="149:9" pos:end="153:71"><operator pos:start="149:9" pos:end="149:9">(</operator><name pos:start="149:10" pos:end="149:24"><name pos:start="149:10" pos:end="149:11">rt</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:24">server_type</name></name> <operator pos:start="149:26" pos:end="149:27">==</operator> <name pos:start="149:29" pos:end="149:43">RTSP_SERVER_WMS</name> <operator pos:start="149:45" pos:end="149:46">||</operator>

         <name pos:start="151:10" pos:end="151:24"><name pos:start="151:10" pos:end="151:11">rt</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:24">server_type</name></name> <operator pos:start="151:26" pos:end="151:27">==</operator> <name pos:start="151:29" pos:end="151:44">RTSP_SERVER_REAL</name><operator pos:start="151:45" pos:end="151:45">)</operator> <operator pos:start="151:47" pos:end="151:48">&amp;&amp;</operator>

        <operator pos:start="153:9" pos:end="153:9">(</operator><call pos:start="153:10" pos:end="153:21"><name pos:start="153:10" pos:end="153:19">av_gettime</name><argument_list pos:start="153:20" pos:end="153:21">()</argument_list></call> <operator pos:start="153:23" pos:end="153:23">-</operator> <name pos:start="153:25" pos:end="153:41"><name pos:start="153:25" pos:end="153:26">rt</name><operator pos:start="153:27" pos:end="153:28">-&gt;</operator><name pos:start="153:29" pos:end="153:41">last_cmd_time</name></name><operator pos:start="153:42" pos:end="153:42">)</operator> <operator pos:start="153:44" pos:end="153:44">/</operator> <literal type="number" pos:start="153:46" pos:end="153:52">1000000</literal> <operator pos:start="153:54" pos:end="153:55">&gt;=</operator> <name pos:start="153:57" pos:end="153:67"><name pos:start="153:57" pos:end="153:58">rt</name><operator pos:start="153:59" pos:end="153:60">-&gt;</operator><name pos:start="153:61" pos:end="153:67">timeout</name></name> <operator pos:start="153:69" pos:end="153:69">/</operator> <literal type="number" pos:start="153:71" pos:end="153:71">2</literal></expr>)</condition> <block pos:start="153:74" pos:end="173:5">{<block_content pos:start="155:9" pos:end="171:9">

        <if_stmt pos:start="155:9" pos:end="171:9"><if pos:start="155:9" pos:end="165:9">if <condition pos:start="155:12" pos:end="155:47">(<expr pos:start="155:13" pos:end="155:46"><name pos:start="155:13" pos:end="155:27"><name pos:start="155:13" pos:end="155:14">rt</name><operator pos:start="155:15" pos:end="155:16">-&gt;</operator><name pos:start="155:17" pos:end="155:27">server_type</name></name> <operator pos:start="155:29" pos:end="155:30">==</operator> <name pos:start="155:32" pos:end="155:46">RTSP_SERVER_WMS</name></expr>)</condition> <block pos:start="155:49" pos:end="165:9">{<block_content pos:start="157:13" pos:end="163:53">

            <expr_stmt pos:start="157:13" pos:end="161:34"><expr pos:start="157:13" pos:end="161:33"><call pos:start="157:13" pos:end="161:33"><name pos:start="157:13" pos:end="157:20">snprintf</name><argument_list pos:start="157:21" pos:end="161:33">(<argument pos:start="157:22" pos:end="157:24"><expr pos:start="157:22" pos:end="157:24"><name pos:start="157:22" pos:end="157:24">cmd</name></expr></argument>, <argument pos:start="157:27" pos:end="157:41"><expr pos:start="157:27" pos:end="157:41"><sizeof pos:start="157:27" pos:end="157:37">sizeof<argument_list pos:start="157:33" pos:end="157:37">(<argument pos:start="157:34" pos:end="157:36"><expr pos:start="157:34" pos:end="157:36"><name pos:start="157:34" pos:end="157:36">cmd</name></expr></argument>)</argument_list></sizeof> <operator pos:start="157:39" pos:end="157:39">-</operator> <literal type="number" pos:start="157:41" pos:end="157:41">1</literal></expr></argument>,

                     <argument pos:start="159:22" pos:end="159:52"><expr pos:start="159:22" pos:end="159:52"><literal type="string" pos:start="159:22" pos:end="159:52">"GET_PARAMETER %s RTSP/1.0\r\n"</literal></expr></argument>,

                     <argument pos:start="161:22" pos:end="161:32"><expr pos:start="161:22" pos:end="161:32"><name pos:start="161:22" pos:end="161:32"><name pos:start="161:22" pos:end="161:22">s</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:32">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:53"><expr pos:start="163:13" pos:end="163:52"><call pos:start="163:13" pos:end="163:52"><name pos:start="163:13" pos:end="163:31">rtsp_send_cmd_async</name><argument_list pos:start="163:32" pos:end="163:52">(<argument pos:start="163:33" pos:end="163:33"><expr pos:start="163:33" pos:end="163:33"><name pos:start="163:33" pos:end="163:33">s</name></expr></argument>, <argument pos:start="163:36" pos:end="163:38"><expr pos:start="163:36" pos:end="163:38"><name pos:start="163:36" pos:end="163:38">cmd</name></expr></argument>, <argument pos:start="163:41" pos:end="163:45"><expr pos:start="163:41" pos:end="163:45"><name pos:start="163:41" pos:end="163:45">reply</name></expr></argument>, <argument pos:start="163:48" pos:end="163:51"><expr pos:start="163:48" pos:end="163:51"><name pos:start="163:48" pos:end="163:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="165:11" pos:end="171:9">else <block pos:start="165:16" pos:end="171:9">{<block_content pos:start="167:13" pos:end="169:45">

            <expr_stmt pos:start="167:13" pos:end="169:45"><expr pos:start="167:13" pos:end="169:44"><call pos:start="167:13" pos:end="169:44"><name pos:start="167:13" pos:end="167:31">rtsp_send_cmd_async</name><argument_list pos:start="167:32" pos:end="169:44">(<argument pos:start="167:33" pos:end="167:33"><expr pos:start="167:33" pos:end="167:33"><name pos:start="167:33" pos:end="167:33">s</name></expr></argument>, <argument pos:start="167:36" pos:end="167:59"><expr pos:start="167:36" pos:end="167:59"><literal type="string" pos:start="167:36" pos:end="167:59">"OPTIONS * RTSP/1.0\r\n"</literal></expr></argument>,

                                <argument pos:start="169:33" pos:end="169:37"><expr pos:start="169:33" pos:end="169:37"><name pos:start="169:33" pos:end="169:37">reply</name></expr></argument>, <argument pos:start="169:40" pos:end="169:43"><expr pos:start="169:40" pos:end="169:43"><name pos:start="169:40" pos:end="169:43">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="177:5" pos:end="177:13">return <expr pos:start="177:12" pos:end="177:12"><literal type="number" pos:start="177:12" pos:end="177:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
