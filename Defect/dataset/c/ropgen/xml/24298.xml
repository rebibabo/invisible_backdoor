<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24298.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">mmio_interface_realize</name><parameter_list pos:start="1:35" pos:end="1:66">(<parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:46">DeviceState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">dev</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:58">Error</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:69">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MMIOInterface</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:42">= <expr pos:start="5:24" pos:end="5:42"><call pos:start="5:24" pos:end="5:42"><name pos:start="5:24" pos:end="5:37">MMIO_INTERFACE</name><argument_list pos:start="5:38" pos:end="5:42">(<argument pos:start="5:39" pos:end="5:41"><expr pos:start="5:39" pos:end="5:41"><name pos:start="5:39" pos:end="5:41">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="11:52"><expr pos:start="9:5" pos:end="11:51"><call pos:start="9:5" pos:end="11:51"><name pos:start="9:5" pos:end="9:11">DPRINTF</name><argument_list pos:start="9:12" pos:end="11:51">(<argument pos:start="9:13" pos:end="11:19"><expr pos:start="9:13" pos:end="11:19"><literal type="string" pos:start="9:13" pos:end="9:30">"realize from 0x%"</literal> <name pos:start="9:32" pos:end="9:37">PRIX64</name> <literal type="string" pos:start="9:39" pos:end="9:47">" to 0x%"</literal> <name pos:start="9:49" pos:end="9:54">PRIX64</name> <literal type="string" pos:start="9:56" pos:end="9:74">" map host pointer"</literal>

            <literal type="string" pos:start="11:13" pos:end="11:19">" %p\n"</literal></expr></argument>, <argument pos:start="11:22" pos:end="11:29"><expr pos:start="11:22" pos:end="11:29"><name pos:start="11:22" pos:end="11:29"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:29">start</name></name></expr></argument>, <argument pos:start="11:32" pos:end="11:37"><expr pos:start="11:32" pos:end="11:37"><name pos:start="11:32" pos:end="11:37"><name pos:start="11:32" pos:end="11:32">s</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:37">end</name></name></expr></argument>, <argument pos:start="11:40" pos:end="11:50"><expr pos:start="11:40" pos:end="11:50"><name pos:start="11:40" pos:end="11:50"><name pos:start="11:40" pos:end="11:40">s</name><operator pos:start="11:41" pos:end="11:42">-&gt;</operator><name pos:start="11:43" pos:end="11:50">host_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="20:5"><if pos:start="15:5" pos:end="20:5">if <condition pos:start="15:8" pos:end="15:21">(<expr pos:start="15:9" pos:end="15:20"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:20"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:20">host_ptr</name></name></expr>)</condition> <block pos:start="15:23" pos:end="20:5">{<block_content pos:start="17:9" pos:end="17:58">

        <expr_stmt pos:start="17:9" pos:end="17:58"><expr pos:start="17:9" pos:end="17:57"><call pos:start="17:9" pos:end="17:57"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="17:57">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="17:56"><expr pos:start="17:26" pos:end="17:56"><literal type="string" pos:start="17:26" pos:end="17:56">"host_ptr property must be set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="24:5" pos:end="29:5"><if pos:start="24:5" pos:end="29:5">if <condition pos:start="24:8" pos:end="24:22">(<expr pos:start="24:9" pos:end="24:21"><operator pos:start="24:9" pos:end="24:9">!</operator><name pos:start="24:10" pos:end="24:21"><name pos:start="24:10" pos:end="24:10">s</name><operator pos:start="24:11" pos:end="24:12">-&gt;</operator><name pos:start="24:13" pos:end="24:21">subregion</name></name></expr>)</condition> <block pos:start="24:24" pos:end="29:5">{<block_content pos:start="26:9" pos:end="26:59">

        <expr_stmt pos:start="26:9" pos:end="26:59"><expr pos:start="26:9" pos:end="26:58"><call pos:start="26:9" pos:end="26:58"><name pos:start="26:9" pos:end="26:18">error_setg</name><argument_list pos:start="26:19" pos:end="26:58">(<argument pos:start="26:20" pos:end="26:23"><expr pos:start="26:20" pos:end="26:23"><name pos:start="26:20" pos:end="26:23">errp</name></expr></argument>, <argument pos:start="26:26" pos:end="26:57"><expr pos:start="26:26" pos:end="26:57"><literal type="string" pos:start="26:26" pos:end="26:57">"subregion property must be set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:67"><expr pos:start="33:5" pos:end="35:66"><call pos:start="33:5" pos:end="35:66"><name pos:start="33:5" pos:end="33:30">memory_region_init_ram_ptr</name><argument_list pos:start="33:31" pos:end="35:66">(<argument pos:start="33:32" pos:end="33:42"><expr pos:start="33:32" pos:end="33:42"><operator pos:start="33:32" pos:end="33:32">&amp;</operator><name pos:start="33:33" pos:end="33:42"><name pos:start="33:33" pos:end="33:33">s</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:42">ram_mem</name></name></expr></argument>, <argument pos:start="33:45" pos:end="33:53"><expr pos:start="33:45" pos:end="33:53"><call pos:start="33:45" pos:end="33:53"><name pos:start="33:45" pos:end="33:50">OBJECT</name><argument_list pos:start="33:51" pos:end="33:53">(<argument pos:start="33:52" pos:end="33:52"><expr pos:start="33:52" pos:end="33:52"><name pos:start="33:52" pos:end="33:52">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:56" pos:end="33:60"><expr pos:start="33:56" pos:end="33:60"><literal type="string" pos:start="33:56" pos:end="33:60">"ram"</literal></expr></argument>,

                               <argument pos:start="35:32" pos:end="35:52"><expr pos:start="35:32" pos:end="35:52"><name pos:start="35:32" pos:end="35:37"><name pos:start="35:32" pos:end="35:32">s</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:37">end</name></name> <operator pos:start="35:39" pos:end="35:39">-</operator> <name pos:start="35:41" pos:end="35:48"><name pos:start="35:41" pos:end="35:41">s</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:48">start</name></name> <operator pos:start="35:50" pos:end="35:50">+</operator> <literal type="number" pos:start="35:52" pos:end="35:52">1</literal></expr></argument>, <argument pos:start="35:55" pos:end="35:65"><expr pos:start="35:55" pos:end="35:65"><name pos:start="35:55" pos:end="35:65"><name pos:start="35:55" pos:end="35:55">s</name><operator pos:start="35:56" pos:end="35:57">-&gt;</operator><name pos:start="35:58" pos:end="35:65">host_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:51"><expr pos:start="37:5" pos:end="37:50"><call pos:start="37:5" pos:end="37:50"><name pos:start="37:5" pos:end="37:30">memory_region_set_readonly</name><argument_list pos:start="37:31" pos:end="37:50">(<argument pos:start="37:32" pos:end="37:42"><expr pos:start="37:32" pos:end="37:42"><operator pos:start="37:32" pos:end="37:32">&amp;</operator><name pos:start="37:33" pos:end="37:42"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:42">ram_mem</name></name></expr></argument>, <argument pos:start="37:45" pos:end="37:49"><expr pos:start="37:45" pos:end="37:49"><name pos:start="37:45" pos:end="37:49"><name pos:start="37:45" pos:end="37:45">s</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:49">ro</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:69"><expr pos:start="39:5" pos:end="39:68"><call pos:start="39:5" pos:end="39:68"><name pos:start="39:5" pos:end="39:31">memory_region_add_subregion</name><argument_list pos:start="39:32" pos:end="39:68">(<argument pos:start="39:33" pos:end="39:44"><expr pos:start="39:33" pos:end="39:44"><name pos:start="39:33" pos:end="39:44"><name pos:start="39:33" pos:end="39:33">s</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:44">subregion</name></name></expr></argument>, <argument pos:start="39:47" pos:end="39:54"><expr pos:start="39:47" pos:end="39:54"><name pos:start="39:47" pos:end="39:54"><name pos:start="39:47" pos:end="39:47">s</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:54">start</name></name></expr></argument>, <argument pos:start="39:57" pos:end="39:67"><expr pos:start="39:57" pos:end="39:67"><operator pos:start="39:57" pos:end="39:57">&amp;</operator><name pos:start="39:58" pos:end="39:67"><name pos:start="39:58" pos:end="39:58">s</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:67">ram_mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
