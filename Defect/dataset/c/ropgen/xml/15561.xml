<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15561.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:17">BlockAIOCB</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:31">inject_error</name><parameter_list pos:start="1:32" pos:end="3:62">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:48">BlockDriverState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">bs</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:27"><decl pos:start="3:5" pos:end="3:27"><type pos:start="3:5" pos:end="3:27"><name pos:start="3:5" pos:end="3:23">BlockCompletionFunc</name> <modifier pos:start="3:25" pos:end="3:25">*</modifier></type><name pos:start="3:26" pos:end="3:27">cb</name></decl></parameter>, <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:41">opaque</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:61"><decl pos:start="3:44" pos:end="3:61"><type pos:start="3:44" pos:end="3:61"><name pos:start="3:44" pos:end="3:55">BlkdebugRule</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:61">rule</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:24">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">BDRVBlkdebugState</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:37">= <expr pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:37"><name pos:start="7:28" pos:end="7:29">bs</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:37">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">error</name> <init pos:start="9:15" pos:end="9:42">= <expr pos:start="9:17" pos:end="9:42"><name pos:start="9:17" pos:end="9:42"><name pos:start="9:17" pos:end="9:20">rule</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:29">options</name><operator pos:start="9:30" pos:end="9:30">.</operator><name pos:start="9:31" pos:end="9:36">inject</name><operator pos:start="9:37" pos:end="9:37">.</operator><name pos:start="9:38" pos:end="9:42">error</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:24">BlkdebugAIOCB</name></name> <modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:29">acb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:10">QEMUBH</name> <modifier pos:start="13:12" pos:end="13:12">*</modifier></type><name pos:start="13:13" pos:end="13:14">bh</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:34">(<expr pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:12">rule</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:21">options</name><operator pos:start="17:22" pos:end="17:22">.</operator><name pos:start="17:23" pos:end="17:28">inject</name><operator pos:start="17:29" pos:end="17:29">.</operator><name pos:start="17:30" pos:end="17:33">once</name></name></expr>)</condition> <block pos:start="17:36" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:40">

        <expr_stmt pos:start="19:9" pos:end="19:40"><expr pos:start="19:9" pos:end="19:39"><call pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:21">QSIMPLEQ_INIT</name><argument_list pos:start="19:22" pos:end="19:39">(<argument pos:start="19:23" pos:end="19:38"><expr pos:start="19:23" pos:end="19:38"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:38"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:38">active_rules</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:41">(<expr pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:12">rule</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:21">options</name><operator pos:start="25:22" pos:end="25:22">.</operator><name pos:start="25:23" pos:end="25:28">inject</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:40">immediately</name></name></expr>)</condition> <block pos:start="25:43" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:20">

        <return pos:start="27:9" pos:end="27:20">return <expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:61"><expr pos:start="33:5" pos:end="33:60"><name pos:start="33:5" pos:end="33:7">acb</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:60"><name pos:start="33:11" pos:end="33:22">qemu_aio_get</name><argument_list pos:start="33:23" pos:end="33:60">(<argument pos:start="33:24" pos:end="33:43"><expr pos:start="33:24" pos:end="33:43"><operator pos:start="33:24" pos:end="33:24">&amp;</operator><name pos:start="33:25" pos:end="33:43">blkdebug_aiocb_info</name></expr></argument>, <argument pos:start="33:46" pos:end="33:47"><expr pos:start="33:46" pos:end="33:47"><name pos:start="33:46" pos:end="33:47">bs</name></expr></argument>, <argument pos:start="33:50" pos:end="33:51"><expr pos:start="33:50" pos:end="33:51"><name pos:start="33:50" pos:end="33:51">cb</name></expr></argument>, <argument pos:start="33:54" pos:end="33:59"><expr pos:start="33:54" pos:end="33:59"><name pos:start="33:54" pos:end="33:59">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:7">acb</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:12">ret</name></name> <operator pos:start="35:14" pos:end="35:14">=</operator> <operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:21">error</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:70"><expr pos:start="39:5" pos:end="39:69"><name pos:start="39:5" pos:end="39:6">bh</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <call pos:start="39:10" pos:end="39:69"><name pos:start="39:10" pos:end="39:19">aio_bh_new</name><argument_list pos:start="39:20" pos:end="39:69">(<argument pos:start="39:21" pos:end="39:44"><expr pos:start="39:21" pos:end="39:44"><call pos:start="39:21" pos:end="39:44"><name pos:start="39:21" pos:end="39:40">bdrv_get_aio_context</name><argument_list pos:start="39:41" pos:end="39:44">(<argument pos:start="39:42" pos:end="39:43"><expr pos:start="39:42" pos:end="39:43"><name pos:start="39:42" pos:end="39:43">bs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:47" pos:end="39:63"><expr pos:start="39:47" pos:end="39:63"><name pos:start="39:47" pos:end="39:63">error_callback_bh</name></expr></argument>, <argument pos:start="39:66" pos:end="39:68"><expr pos:start="39:66" pos:end="39:68"><name pos:start="39:66" pos:end="39:68">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:17"><expr pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:7">acb</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:11">bh</name></name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:16">bh</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:25"><expr pos:start="43:5" pos:end="43:24"><call pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:20">qemu_bh_schedule</name><argument_list pos:start="43:21" pos:end="43:24">(<argument pos:start="43:22" pos:end="43:23"><expr pos:start="43:22" pos:end="43:23"><name pos:start="43:22" pos:end="43:23">bh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="47:5" pos:end="47:24">return <expr pos:start="47:12" pos:end="47:23"><operator pos:start="47:12" pos:end="47:12">&amp;</operator><name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:15">acb</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:23">common</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
