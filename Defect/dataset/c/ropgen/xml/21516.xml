<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21516.c" pos:tabs="8"><function pos:start="1:1" pos:end="281:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">bcm2835_property_mbox_push</name><parameter_list pos:start="1:39" pos:end="1:79">(<parameter pos:start="1:40" pos:end="1:62"><decl pos:start="1:40" pos:end="1:62"><type pos:start="1:40" pos:end="1:62"><name pos:start="1:40" pos:end="1:59">BCM2835PropertyState</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:62">s</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:78"><decl pos:start="1:65" pos:end="1:78"><type pos:start="1:65" pos:end="1:78"><name pos:start="1:65" pos:end="1:72">uint32_t</name></type> <name pos:start="1:74" pos:end="1:78">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="281:1">{<block_content pos:start="5:5" pos:end="279:49">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:16">tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:20">bufsize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:20">tot_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:18">resplen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:16">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:9">value</name> <operator pos:start="17:11" pos:end="17:12">&amp;=</operator> <operator pos:start="17:14" pos:end="17:14">~</operator><literal type="number" pos:start="17:15" pos:end="17:17">0xf</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:20"><expr pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:11">addr</name></name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:19">value</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:11">tot_len</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:41"><name pos:start="25:15" pos:end="25:22">ldl_phys</name><argument_list pos:start="25:23" pos:end="25:41">(<argument pos:start="25:24" pos:end="25:33"><expr pos:start="25:24" pos:end="25:33"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:33"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:33">dma_as</name></name></expr></argument>, <argument pos:start="25:36" pos:end="25:40"><expr pos:start="25:36" pos:end="25:40"><name pos:start="25:36" pos:end="25:40">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:44">/* @(addr + 4) : Buffer response code */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:9">value</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <name pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:19">addr</name></name> <operator pos:start="31:21" pos:end="31:21">+</operator> <literal type="number" pos:start="31:23" pos:end="31:23">8</literal></expr>;</expr_stmt>

    <while pos:start="33:5" pos:end="273:5">while <condition pos:start="33:11" pos:end="33:42">(<expr pos:start="33:12" pos:end="33:41"><name pos:start="33:12" pos:end="33:16">value</name> <operator pos:start="33:18" pos:end="33:18">+</operator> <literal type="number" pos:start="33:20" pos:end="33:20">8</literal> <operator pos:start="33:22" pos:end="33:23">&lt;=</operator> <name pos:start="33:25" pos:end="33:31"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:31">addr</name></name> <operator pos:start="33:33" pos:end="33:33">+</operator> <name pos:start="33:35" pos:end="33:41">tot_len</name></expr>)</condition> <block pos:start="33:44" pos:end="273:5">{<block_content pos:start="35:9" pos:end="271:30">

        <expr_stmt pos:start="35:9" pos:end="35:42"><expr pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:11">tag</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:41"><name pos:start="35:15" pos:end="35:22">ldl_phys</name><argument_list pos:start="35:23" pos:end="35:41">(<argument pos:start="35:24" pos:end="35:33"><expr pos:start="35:24" pos:end="35:33"><operator pos:start="35:24" pos:end="35:24">&amp;</operator><name pos:start="35:25" pos:end="35:33"><name pos:start="35:25" pos:end="35:25">s</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:33">dma_as</name></name></expr></argument>, <argument pos:start="35:36" pos:end="35:40"><expr pos:start="35:36" pos:end="35:40"><name pos:start="35:36" pos:end="35:40">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:50"><expr pos:start="37:9" pos:end="37:49"><name pos:start="37:9" pos:end="37:15">bufsize</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:49"><name pos:start="37:19" pos:end="37:26">ldl_phys</name><argument_list pos:start="37:27" pos:end="37:49">(<argument pos:start="37:28" pos:end="37:37"><expr pos:start="37:28" pos:end="37:37"><operator pos:start="37:28" pos:end="37:28">&amp;</operator><name pos:start="37:29" pos:end="37:37"><name pos:start="37:29" pos:end="37:29">s</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:37">dma_as</name></name></expr></argument>, <argument pos:start="37:40" pos:end="37:48"><expr pos:start="37:40" pos:end="37:48"><name pos:start="37:40" pos:end="37:44">value</name> <operator pos:start="37:46" pos:end="37:46">+</operator> <literal type="number" pos:start="37:48" pos:end="37:48">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="39:9" pos:end="39:55">/* @(value + 8) : Request/response indicator */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:20"><expr pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:15">resplen</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>;</expr_stmt>

        <switch pos:start="43:9" pos:end="257:9">switch <condition pos:start="43:16" pos:end="43:20">(<expr pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">tag</name></expr>)</condition> <block pos:start="43:22" pos:end="257:9">{<block_content pos:start="45:9" pos:end="255:18">

        <case pos:start="45:9" pos:end="45:24">case <expr pos:start="45:14" pos:end="45:23"><literal type="number" pos:start="45:14" pos:end="45:23">0x00000000</literal></expr>:</case> <comment type="block" pos:start="45:26" pos:end="45:38">/* End tag */</comment>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:24">case <expr pos:start="49:14" pos:end="49:23"><literal type="number" pos:start="49:14" pos:end="49:23">0x00000001</literal></expr>:</case> <comment type="block" pos:start="49:26" pos:end="49:52">/* Get firmware revision */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:53"><expr pos:start="51:13" pos:end="51:52"><call pos:start="51:13" pos:end="51:52"><name pos:start="51:13" pos:end="51:20">stl_phys</name><argument_list pos:start="51:21" pos:end="51:52">(<argument pos:start="51:22" pos:end="51:31"><expr pos:start="51:22" pos:end="51:31"><operator pos:start="51:22" pos:end="51:22">&amp;</operator><name pos:start="51:23" pos:end="51:31"><name pos:start="51:23" pos:end="51:23">s</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:31">dma_as</name></name></expr></argument>, <argument pos:start="51:34" pos:end="51:43"><expr pos:start="51:34" pos:end="51:43"><name pos:start="51:34" pos:end="51:38">value</name> <operator pos:start="51:40" pos:end="51:40">+</operator> <literal type="number" pos:start="51:42" pos:end="51:43">12</literal></expr></argument>, <argument pos:start="51:46" pos:end="51:51"><expr pos:start="51:46" pos:end="51:51"><literal type="number" pos:start="51:46" pos:end="51:51">346337</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:24"><expr pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:19">resplen</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <literal type="number" pos:start="53:23" pos:end="53:23">4</literal></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        <case pos:start="57:9" pos:end="57:24">case <expr pos:start="57:14" pos:end="57:23"><literal type="number" pos:start="57:14" pos:end="57:23">0x00010001</literal></expr>:</case> <comment type="block" pos:start="57:26" pos:end="57:46">/* Get board model */</comment>

            <expr_stmt pos:start="59:13" pos:end="61:77"><expr pos:start="59:13" pos:end="61:76"><call pos:start="59:13" pos:end="61:76"><name pos:start="59:13" pos:end="59:25">qemu_log_mask</name><argument_list pos:start="59:26" pos:end="61:76">(<argument pos:start="59:27" pos:end="59:35"><expr pos:start="59:27" pos:end="59:35"><name pos:start="59:27" pos:end="59:35">LOG_UNIMP</name></expr></argument>,

                          <argument pos:start="61:27" pos:end="61:70"><expr pos:start="61:27" pos:end="61:70"><literal type="string" pos:start="61:27" pos:end="61:70">"bcm2835_property: %x get board model NYI\n"</literal></expr></argument>, <argument pos:start="61:73" pos:end="61:75"><expr pos:start="61:73" pos:end="61:75"><name pos:start="61:73" pos:end="61:75">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:24"><expr pos:start="63:13" pos:end="63:23"><name pos:start="63:13" pos:end="63:19">resplen</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <literal type="number" pos:start="63:23" pos:end="63:23">4</literal></expr>;</expr_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:24">case <expr pos:start="67:14" pos:end="67:23"><literal type="number" pos:start="67:14" pos:end="67:23">0x00010002</literal></expr>:</case> <comment type="block" pos:start="67:26" pos:end="67:49">/* Get board revision */</comment>

            <expr_stmt pos:start="69:13" pos:end="71:80"><expr pos:start="69:13" pos:end="71:79"><call pos:start="69:13" pos:end="71:79"><name pos:start="69:13" pos:end="69:25">qemu_log_mask</name><argument_list pos:start="69:26" pos:end="71:79">(<argument pos:start="69:27" pos:end="69:35"><expr pos:start="69:27" pos:end="69:35"><name pos:start="69:27" pos:end="69:35">LOG_UNIMP</name></expr></argument>,

                          <argument pos:start="71:27" pos:end="71:73"><expr pos:start="71:27" pos:end="71:73"><literal type="string" pos:start="71:27" pos:end="71:73">"bcm2835_property: %x get board revision NYI\n"</literal></expr></argument>, <argument pos:start="71:76" pos:end="71:78"><expr pos:start="71:76" pos:end="71:78"><name pos:start="71:76" pos:end="71:78">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:24"><expr pos:start="73:13" pos:end="73:23"><name pos:start="73:13" pos:end="73:19">resplen</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <literal type="number" pos:start="73:23" pos:end="73:23">4</literal></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:24">case <expr pos:start="77:14" pos:end="77:23"><literal type="number" pos:start="77:14" pos:end="77:23">0x00010003</literal></expr>:</case> <comment type="block" pos:start="77:26" pos:end="77:52">/* Get board MAC address */</comment>

            <expr_stmt pos:start="79:13" pos:end="79:43"><expr pos:start="79:13" pos:end="79:42"><name pos:start="79:13" pos:end="79:19">resplen</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <sizeof pos:start="79:23" pos:end="79:42">sizeof<argument_list pos:start="79:29" pos:end="79:42">(<argument pos:start="79:30" pos:end="79:41"><expr pos:start="79:30" pos:end="79:41"><name pos:start="79:30" pos:end="79:41"><name pos:start="79:30" pos:end="79:30">s</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:39">macaddr</name><operator pos:start="79:40" pos:end="79:40">.</operator><name pos:start="79:41" pos:end="79:41">a</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:76"><expr pos:start="81:13" pos:end="81:75"><call pos:start="81:13" pos:end="81:75"><name pos:start="81:13" pos:end="81:28">dma_memory_write</name><argument_list pos:start="81:29" pos:end="81:75">(<argument pos:start="81:30" pos:end="81:39"><expr pos:start="81:30" pos:end="81:39"><operator pos:start="81:30" pos:end="81:30">&amp;</operator><name pos:start="81:31" pos:end="81:39"><name pos:start="81:31" pos:end="81:31">s</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:39">dma_as</name></name></expr></argument>, <argument pos:start="81:42" pos:end="81:51"><expr pos:start="81:42" pos:end="81:51"><name pos:start="81:42" pos:end="81:46">value</name> <operator pos:start="81:48" pos:end="81:48">+</operator> <literal type="number" pos:start="81:50" pos:end="81:51">12</literal></expr></argument>, <argument pos:start="81:54" pos:end="81:65"><expr pos:start="81:54" pos:end="81:65"><name pos:start="81:54" pos:end="81:65"><name pos:start="81:54" pos:end="81:54">s</name><operator pos:start="81:55" pos:end="81:56">-&gt;</operator><name pos:start="81:57" pos:end="81:63">macaddr</name><operator pos:start="81:64" pos:end="81:64">.</operator><name pos:start="81:65" pos:end="81:65">a</name></name></expr></argument>, <argument pos:start="81:68" pos:end="81:74"><expr pos:start="81:68" pos:end="81:74"><name pos:start="81:68" pos:end="81:74">resplen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="83:13" pos:end="83:18">break;</break>

        <case pos:start="85:9" pos:end="85:24">case <expr pos:start="85:14" pos:end="85:23"><literal type="number" pos:start="85:14" pos:end="85:23">0x00010004</literal></expr>:</case> <comment type="block" pos:start="85:26" pos:end="85:47">/* Get board serial */</comment>

            <expr_stmt pos:start="87:13" pos:end="89:78"><expr pos:start="87:13" pos:end="89:77"><call pos:start="87:13" pos:end="89:77"><name pos:start="87:13" pos:end="87:25">qemu_log_mask</name><argument_list pos:start="87:26" pos:end="89:77">(<argument pos:start="87:27" pos:end="87:35"><expr pos:start="87:27" pos:end="87:35"><name pos:start="87:27" pos:end="87:35">LOG_UNIMP</name></expr></argument>,

                          <argument pos:start="89:27" pos:end="89:71"><expr pos:start="89:27" pos:end="89:71"><literal type="string" pos:start="89:27" pos:end="89:71">"bcm2835_property: %x get board serial NYI\n"</literal></expr></argument>, <argument pos:start="89:74" pos:end="89:76"><expr pos:start="89:74" pos:end="89:76"><name pos:start="89:74" pos:end="89:76">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:24"><expr pos:start="91:13" pos:end="91:23"><name pos:start="91:13" pos:end="91:19">resplen</name> <operator pos:start="91:21" pos:end="91:21">=</operator> <literal type="number" pos:start="91:23" pos:end="91:23">8</literal></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:24">case <expr pos:start="95:14" pos:end="95:23"><literal type="number" pos:start="95:14" pos:end="95:23">0x00010005</literal></expr>:</case> <comment type="block" pos:start="95:26" pos:end="95:45">/* Get ARM memory */</comment>

            <comment type="block" pos:start="97:13" pos:end="97:22">/* base */</comment>

            <expr_stmt pos:start="99:13" pos:end="99:48"><expr pos:start="99:13" pos:end="99:47"><call pos:start="99:13" pos:end="99:47"><name pos:start="99:13" pos:end="99:20">stl_phys</name><argument_list pos:start="99:21" pos:end="99:47">(<argument pos:start="99:22" pos:end="99:31"><expr pos:start="99:22" pos:end="99:31"><operator pos:start="99:22" pos:end="99:22">&amp;</operator><name pos:start="99:23" pos:end="99:31"><name pos:start="99:23" pos:end="99:23">s</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:31">dma_as</name></name></expr></argument>, <argument pos:start="99:34" pos:end="99:43"><expr pos:start="99:34" pos:end="99:43"><name pos:start="99:34" pos:end="99:38">value</name> <operator pos:start="99:40" pos:end="99:40">+</operator> <literal type="number" pos:start="99:42" pos:end="99:43">12</literal></expr></argument>, <argument pos:start="99:46" pos:end="99:46"><expr pos:start="99:46" pos:end="99:46"><literal type="number" pos:start="99:46" pos:end="99:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="101:13" pos:end="101:22">/* size */</comment>

            <expr_stmt pos:start="103:13" pos:end="103:58"><expr pos:start="103:13" pos:end="103:57"><call pos:start="103:13" pos:end="103:57"><name pos:start="103:13" pos:end="103:20">stl_phys</name><argument_list pos:start="103:21" pos:end="103:57">(<argument pos:start="103:22" pos:end="103:31"><expr pos:start="103:22" pos:end="103:31"><operator pos:start="103:22" pos:end="103:22">&amp;</operator><name pos:start="103:23" pos:end="103:31"><name pos:start="103:23" pos:end="103:23">s</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:31">dma_as</name></name></expr></argument>, <argument pos:start="103:34" pos:end="103:43"><expr pos:start="103:34" pos:end="103:43"><name pos:start="103:34" pos:end="103:38">value</name> <operator pos:start="103:40" pos:end="103:40">+</operator> <literal type="number" pos:start="103:42" pos:end="103:43">16</literal></expr></argument>, <argument pos:start="103:46" pos:end="103:56"><expr pos:start="103:46" pos:end="103:56"><name pos:start="103:46" pos:end="103:56"><name pos:start="103:46" pos:end="103:46">s</name><operator pos:start="103:47" pos:end="103:48">-&gt;</operator><name pos:start="103:49" pos:end="103:56">ram_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:24"><expr pos:start="105:13" pos:end="105:23"><name pos:start="105:13" pos:end="105:19">resplen</name> <operator pos:start="105:21" pos:end="105:21">=</operator> <literal type="number" pos:start="105:23" pos:end="105:23">8</literal></expr>;</expr_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:24">case <expr pos:start="109:14" pos:end="109:23"><literal type="number" pos:start="109:14" pos:end="109:23">0x00028001</literal></expr>:</case> <comment type="block" pos:start="109:26" pos:end="109:46">/* Set power state */</comment>

            <comment type="block" pos:start="111:13" pos:end="115:15">/* Assume that whatever device they asked for exists,

             * and we'll just claim we set it to the desired state

             */</comment>

            <expr_stmt pos:start="117:13" pos:end="117:51"><expr pos:start="117:13" pos:end="117:50"><name pos:start="117:13" pos:end="117:15">tmp</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <call pos:start="117:19" pos:end="117:50"><name pos:start="117:19" pos:end="117:26">ldl_phys</name><argument_list pos:start="117:27" pos:end="117:50">(<argument pos:start="117:28" pos:end="117:37"><expr pos:start="117:28" pos:end="117:37"><operator pos:start="117:28" pos:end="117:28">&amp;</operator><name pos:start="117:29" pos:end="117:37"><name pos:start="117:29" pos:end="117:29">s</name><operator pos:start="117:30" pos:end="117:31">-&gt;</operator><name pos:start="117:32" pos:end="117:37">dma_as</name></name></expr></argument>, <argument pos:start="117:40" pos:end="117:49"><expr pos:start="117:40" pos:end="117:49"><name pos:start="117:40" pos:end="117:44">value</name> <operator pos:start="117:46" pos:end="117:46">+</operator> <literal type="number" pos:start="117:48" pos:end="117:49">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:56"><expr pos:start="119:13" pos:end="119:55"><call pos:start="119:13" pos:end="119:55"><name pos:start="119:13" pos:end="119:20">stl_phys</name><argument_list pos:start="119:21" pos:end="119:55">(<argument pos:start="119:22" pos:end="119:31"><expr pos:start="119:22" pos:end="119:31"><operator pos:start="119:22" pos:end="119:22">&amp;</operator><name pos:start="119:23" pos:end="119:31"><name pos:start="119:23" pos:end="119:23">s</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:31">dma_as</name></name></expr></argument>, <argument pos:start="119:34" pos:end="119:43"><expr pos:start="119:34" pos:end="119:43"><name pos:start="119:34" pos:end="119:38">value</name> <operator pos:start="119:40" pos:end="119:40">+</operator> <literal type="number" pos:start="119:42" pos:end="119:43">16</literal></expr></argument>, <argument pos:start="119:46" pos:end="119:54"><expr pos:start="119:46" pos:end="119:54"><operator pos:start="119:46" pos:end="119:46">(</operator><name pos:start="119:47" pos:end="119:49">tmp</name> <operator pos:start="119:51" pos:end="119:51">&amp;</operator> <literal type="number" pos:start="119:53" pos:end="119:53">1</literal><operator pos:start="119:54" pos:end="119:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:24"><expr pos:start="121:13" pos:end="121:23"><name pos:start="121:13" pos:end="121:19">resplen</name> <operator pos:start="121:21" pos:end="121:21">=</operator> <literal type="number" pos:start="121:23" pos:end="121:23">8</literal></expr>;</expr_stmt>

            <break pos:start="123:13" pos:end="123:18">break;</break>



        <comment type="block" pos:start="127:9" pos:end="127:20">/* Clocks */</comment>



        <case pos:start="131:9" pos:end="131:24">case <expr pos:start="131:14" pos:end="131:23"><literal type="number" pos:start="131:14" pos:end="131:23">0x00030001</literal></expr>:</case> <comment type="block" pos:start="131:26" pos:end="131:46">/* Get clock state */</comment>

            <expr_stmt pos:start="133:13" pos:end="133:50"><expr pos:start="133:13" pos:end="133:49"><call pos:start="133:13" pos:end="133:49"><name pos:start="133:13" pos:end="133:20">stl_phys</name><argument_list pos:start="133:21" pos:end="133:49">(<argument pos:start="133:22" pos:end="133:31"><expr pos:start="133:22" pos:end="133:31"><operator pos:start="133:22" pos:end="133:22">&amp;</operator><name pos:start="133:23" pos:end="133:31"><name pos:start="133:23" pos:end="133:23">s</name><operator pos:start="133:24" pos:end="133:25">-&gt;</operator><name pos:start="133:26" pos:end="133:31">dma_as</name></name></expr></argument>, <argument pos:start="133:34" pos:end="133:43"><expr pos:start="133:34" pos:end="133:43"><name pos:start="133:34" pos:end="133:38">value</name> <operator pos:start="133:40" pos:end="133:40">+</operator> <literal type="number" pos:start="133:42" pos:end="133:43">16</literal></expr></argument>, <argument pos:start="133:46" pos:end="133:48"><expr pos:start="133:46" pos:end="133:48"><literal type="number" pos:start="133:46" pos:end="133:48">0x1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:24"><expr pos:start="135:13" pos:end="135:23"><name pos:start="135:13" pos:end="135:19">resplen</name> <operator pos:start="135:21" pos:end="135:21">=</operator> <literal type="number" pos:start="135:23" pos:end="135:23">8</literal></expr>;</expr_stmt>

            <break pos:start="137:13" pos:end="137:18">break;</break>



        <case pos:start="141:9" pos:end="141:24">case <expr pos:start="141:14" pos:end="141:23"><literal type="number" pos:start="141:14" pos:end="141:23">0x00038001</literal></expr>:</case> <comment type="block" pos:start="141:26" pos:end="141:46">/* Set clock state */</comment>

            <expr_stmt pos:start="143:13" pos:end="145:77"><expr pos:start="143:13" pos:end="145:76"><call pos:start="143:13" pos:end="145:76"><name pos:start="143:13" pos:end="143:25">qemu_log_mask</name><argument_list pos:start="143:26" pos:end="145:76">(<argument pos:start="143:27" pos:end="143:35"><expr pos:start="143:27" pos:end="143:35"><name pos:start="143:27" pos:end="143:35">LOG_UNIMP</name></expr></argument>,

                          <argument pos:start="145:27" pos:end="145:70"><expr pos:start="145:27" pos:end="145:70"><literal type="string" pos:start="145:27" pos:end="145:70">"bcm2835_property: %x set clock state NYI\n"</literal></expr></argument>, <argument pos:start="145:73" pos:end="145:75"><expr pos:start="145:73" pos:end="145:75"><name pos:start="145:73" pos:end="145:75">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:24"><expr pos:start="147:13" pos:end="147:23"><name pos:start="147:13" pos:end="147:19">resplen</name> <operator pos:start="147:21" pos:end="147:21">=</operator> <literal type="number" pos:start="147:23" pos:end="147:23">8</literal></expr>;</expr_stmt>

            <break pos:start="149:13" pos:end="149:18">break;</break>



        <case pos:start="153:9" pos:end="153:24">case <expr pos:start="153:14" pos:end="153:23"><literal type="number" pos:start="153:14" pos:end="153:23">0x00030002</literal></expr>:</case> <comment type="block" pos:start="153:26" pos:end="153:45">/* Get clock rate */</comment>

        <case pos:start="155:9" pos:end="155:24">case <expr pos:start="155:14" pos:end="155:23"><literal type="number" pos:start="155:14" pos:end="155:23">0x00030004</literal></expr>:</case> <comment type="block" pos:start="155:26" pos:end="155:49">/* Get max clock rate */</comment>

        <case pos:start="157:9" pos:end="157:24">case <expr pos:start="157:14" pos:end="157:23"><literal type="number" pos:start="157:14" pos:end="157:23">0x00030007</literal></expr>:</case> <comment type="block" pos:start="157:26" pos:end="157:49">/* Get min clock rate */</comment>

            <switch pos:start="159:13" pos:end="179:13">switch <condition pos:start="159:20" pos:end="159:53">(<expr pos:start="159:21" pos:end="159:52"><call pos:start="159:21" pos:end="159:52"><name pos:start="159:21" pos:end="159:28">ldl_phys</name><argument_list pos:start="159:29" pos:end="159:52">(<argument pos:start="159:30" pos:end="159:39"><expr pos:start="159:30" pos:end="159:39"><operator pos:start="159:30" pos:end="159:30">&amp;</operator><name pos:start="159:31" pos:end="159:39"><name pos:start="159:31" pos:end="159:31">s</name><operator pos:start="159:32" pos:end="159:33">-&gt;</operator><name pos:start="159:34" pos:end="159:39">dma_as</name></name></expr></argument>, <argument pos:start="159:42" pos:end="159:51"><expr pos:start="159:42" pos:end="159:51"><name pos:start="159:42" pos:end="159:46">value</name> <operator pos:start="159:48" pos:end="159:48">+</operator> <literal type="number" pos:start="159:50" pos:end="159:51">12</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:55" pos:end="179:13">{<block_content pos:start="161:13" pos:end="177:22">

            <case pos:start="161:13" pos:end="161:19">case <expr pos:start="161:18" pos:end="161:18"><literal type="number" pos:start="161:18" pos:end="161:18">1</literal></expr>:</case> <comment type="block" pos:start="161:21" pos:end="161:30">/* EMMC */</comment>

                <expr_stmt pos:start="163:17" pos:end="163:59"><expr pos:start="163:17" pos:end="163:58"><call pos:start="163:17" pos:end="163:58"><name pos:start="163:17" pos:end="163:24">stl_phys</name><argument_list pos:start="163:25" pos:end="163:58">(<argument pos:start="163:26" pos:end="163:35"><expr pos:start="163:26" pos:end="163:35"><operator pos:start="163:26" pos:end="163:26">&amp;</operator><name pos:start="163:27" pos:end="163:35"><name pos:start="163:27" pos:end="163:27">s</name><operator pos:start="163:28" pos:end="163:29">-&gt;</operator><name pos:start="163:30" pos:end="163:35">dma_as</name></name></expr></argument>, <argument pos:start="163:38" pos:end="163:47"><expr pos:start="163:38" pos:end="163:47"><name pos:start="163:38" pos:end="163:42">value</name> <operator pos:start="163:44" pos:end="163:44">+</operator> <literal type="number" pos:start="163:46" pos:end="163:47">16</literal></expr></argument>, <argument pos:start="163:50" pos:end="163:57"><expr pos:start="163:50" pos:end="163:57"><literal type="number" pos:start="163:50" pos:end="163:57">50000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="165:17" pos:end="165:22">break;</break>

            <case pos:start="167:13" pos:end="167:19">case <expr pos:start="167:18" pos:end="167:18"><literal type="number" pos:start="167:18" pos:end="167:18">2</literal></expr>:</case> <comment type="block" pos:start="167:21" pos:end="167:30">/* UART */</comment>

                <expr_stmt pos:start="169:17" pos:end="169:58"><expr pos:start="169:17" pos:end="169:57"><call pos:start="169:17" pos:end="169:57"><name pos:start="169:17" pos:end="169:24">stl_phys</name><argument_list pos:start="169:25" pos:end="169:57">(<argument pos:start="169:26" pos:end="169:35"><expr pos:start="169:26" pos:end="169:35"><operator pos:start="169:26" pos:end="169:26">&amp;</operator><name pos:start="169:27" pos:end="169:35"><name pos:start="169:27" pos:end="169:27">s</name><operator pos:start="169:28" pos:end="169:29">-&gt;</operator><name pos:start="169:30" pos:end="169:35">dma_as</name></name></expr></argument>, <argument pos:start="169:38" pos:end="169:47"><expr pos:start="169:38" pos:end="169:47"><name pos:start="169:38" pos:end="169:42">value</name> <operator pos:start="169:44" pos:end="169:44">+</operator> <literal type="number" pos:start="169:46" pos:end="169:47">16</literal></expr></argument>, <argument pos:start="169:50" pos:end="169:56"><expr pos:start="169:50" pos:end="169:56"><literal type="number" pos:start="169:50" pos:end="169:56">3000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="171:17" pos:end="171:22">break;</break>

            <default pos:start="173:13" pos:end="173:20">default:</default>

                <expr_stmt pos:start="175:17" pos:end="175:60"><expr pos:start="175:17" pos:end="175:59"><call pos:start="175:17" pos:end="175:59"><name pos:start="175:17" pos:end="175:24">stl_phys</name><argument_list pos:start="175:25" pos:end="175:59">(<argument pos:start="175:26" pos:end="175:35"><expr pos:start="175:26" pos:end="175:35"><operator pos:start="175:26" pos:end="175:26">&amp;</operator><name pos:start="175:27" pos:end="175:35"><name pos:start="175:27" pos:end="175:27">s</name><operator pos:start="175:28" pos:end="175:29">-&gt;</operator><name pos:start="175:30" pos:end="175:35">dma_as</name></name></expr></argument>, <argument pos:start="175:38" pos:end="175:47"><expr pos:start="175:38" pos:end="175:47"><name pos:start="175:38" pos:end="175:42">value</name> <operator pos:start="175:44" pos:end="175:44">+</operator> <literal type="number" pos:start="175:46" pos:end="175:47">16</literal></expr></argument>, <argument pos:start="175:50" pos:end="175:58"><expr pos:start="175:50" pos:end="175:58"><literal type="number" pos:start="175:50" pos:end="175:58">700000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="177:17" pos:end="177:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="181:13" pos:end="181:24"><expr pos:start="181:13" pos:end="181:23"><name pos:start="181:13" pos:end="181:19">resplen</name> <operator pos:start="181:21" pos:end="181:21">=</operator> <literal type="number" pos:start="181:23" pos:end="181:23">8</literal></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>



        <case pos:start="187:9" pos:end="187:24">case <expr pos:start="187:14" pos:end="187:23"><literal type="number" pos:start="187:14" pos:end="187:23">0x00038002</literal></expr>:</case> <comment type="block" pos:start="187:26" pos:end="187:45">/* Set clock rate */</comment>

        <case pos:start="189:9" pos:end="189:24">case <expr pos:start="189:14" pos:end="189:23"><literal type="number" pos:start="189:14" pos:end="189:23">0x00038004</literal></expr>:</case> <comment type="block" pos:start="189:26" pos:end="189:49">/* Set max clock rate */</comment>

        <case pos:start="191:9" pos:end="191:24">case <expr pos:start="191:14" pos:end="191:23"><literal type="number" pos:start="191:14" pos:end="191:23">0x00038007</literal></expr>:</case> <comment type="block" pos:start="191:26" pos:end="191:49">/* Set min clock rate */</comment>

            <expr_stmt pos:start="193:13" pos:end="195:77"><expr pos:start="193:13" pos:end="195:76"><call pos:start="193:13" pos:end="195:76"><name pos:start="193:13" pos:end="193:25">qemu_log_mask</name><argument_list pos:start="193:26" pos:end="195:76">(<argument pos:start="193:27" pos:end="193:35"><expr pos:start="193:27" pos:end="193:35"><name pos:start="193:27" pos:end="193:35">LOG_UNIMP</name></expr></argument>,

                          <argument pos:start="195:27" pos:end="195:70"><expr pos:start="195:27" pos:end="195:70"><literal type="string" pos:start="195:27" pos:end="195:70">"bcm2835_property: %x set clock rates NYI\n"</literal></expr></argument>, <argument pos:start="195:73" pos:end="195:75"><expr pos:start="195:73" pos:end="195:75"><name pos:start="195:73" pos:end="195:75">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:24"><expr pos:start="197:13" pos:end="197:23"><name pos:start="197:13" pos:end="197:19">resplen</name> <operator pos:start="197:21" pos:end="197:21">=</operator> <literal type="number" pos:start="197:23" pos:end="197:23">8</literal></expr>;</expr_stmt>

            <break pos:start="199:13" pos:end="199:18">break;</break>



        <comment type="block" pos:start="203:9" pos:end="203:25">/* Temperature */</comment>



        <case pos:start="207:9" pos:end="207:24">case <expr pos:start="207:14" pos:end="207:23"><literal type="number" pos:start="207:14" pos:end="207:23">0x00030006</literal></expr>:</case> <comment type="block" pos:start="207:26" pos:end="207:46">/* Get temperature */</comment>

            <expr_stmt pos:start="209:13" pos:end="209:52"><expr pos:start="209:13" pos:end="209:51"><call pos:start="209:13" pos:end="209:51"><name pos:start="209:13" pos:end="209:20">stl_phys</name><argument_list pos:start="209:21" pos:end="209:51">(<argument pos:start="209:22" pos:end="209:31"><expr pos:start="209:22" pos:end="209:31"><operator pos:start="209:22" pos:end="209:22">&amp;</operator><name pos:start="209:23" pos:end="209:31"><name pos:start="209:23" pos:end="209:23">s</name><operator pos:start="209:24" pos:end="209:25">-&gt;</operator><name pos:start="209:26" pos:end="209:31">dma_as</name></name></expr></argument>, <argument pos:start="209:34" pos:end="209:43"><expr pos:start="209:34" pos:end="209:43"><name pos:start="209:34" pos:end="209:38">value</name> <operator pos:start="209:40" pos:end="209:40">+</operator> <literal type="number" pos:start="209:42" pos:end="209:43">16</literal></expr></argument>, <argument pos:start="209:46" pos:end="209:50"><expr pos:start="209:46" pos:end="209:50"><literal type="number" pos:start="209:46" pos:end="209:50">25000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:24"><expr pos:start="211:13" pos:end="211:23"><name pos:start="211:13" pos:end="211:19">resplen</name> <operator pos:start="211:21" pos:end="211:21">=</operator> <literal type="number" pos:start="211:23" pos:end="211:23">8</literal></expr>;</expr_stmt>

            <break pos:start="213:13" pos:end="213:18">break;</break>



        <case pos:start="217:9" pos:end="217:24">case <expr pos:start="217:14" pos:end="217:23"><literal type="number" pos:start="217:14" pos:end="217:23">0x0003000A</literal></expr>:</case> <comment type="block" pos:start="217:26" pos:end="217:50">/* Get max temperature */</comment>

            <expr_stmt pos:start="219:13" pos:end="219:52"><expr pos:start="219:13" pos:end="219:51"><call pos:start="219:13" pos:end="219:51"><name pos:start="219:13" pos:end="219:20">stl_phys</name><argument_list pos:start="219:21" pos:end="219:51">(<argument pos:start="219:22" pos:end="219:31"><expr pos:start="219:22" pos:end="219:31"><operator pos:start="219:22" pos:end="219:22">&amp;</operator><name pos:start="219:23" pos:end="219:31"><name pos:start="219:23" pos:end="219:23">s</name><operator pos:start="219:24" pos:end="219:25">-&gt;</operator><name pos:start="219:26" pos:end="219:31">dma_as</name></name></expr></argument>, <argument pos:start="219:34" pos:end="219:43"><expr pos:start="219:34" pos:end="219:43"><name pos:start="219:34" pos:end="219:38">value</name> <operator pos:start="219:40" pos:end="219:40">+</operator> <literal type="number" pos:start="219:42" pos:end="219:43">16</literal></expr></argument>, <argument pos:start="219:46" pos:end="219:50"><expr pos:start="219:46" pos:end="219:50"><literal type="number" pos:start="219:46" pos:end="219:50">99000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:24"><expr pos:start="221:13" pos:end="221:23"><name pos:start="221:13" pos:end="221:19">resplen</name> <operator pos:start="221:21" pos:end="221:21">=</operator> <literal type="number" pos:start="221:23" pos:end="221:23">8</literal></expr>;</expr_stmt>

            <break pos:start="223:13" pos:end="223:18">break;</break>





        <case pos:start="229:9" pos:end="229:24">case <expr pos:start="229:14" pos:end="229:23"><literal type="number" pos:start="229:14" pos:end="229:23">0x00060001</literal></expr>:</case> <comment type="block" pos:start="229:26" pos:end="229:47">/* Get DMA channels */</comment>

            <comment type="block" pos:start="231:13" pos:end="231:30">/* channels 2-5 */</comment>

            <expr_stmt pos:start="233:13" pos:end="233:53"><expr pos:start="233:13" pos:end="233:52"><call pos:start="233:13" pos:end="233:52"><name pos:start="233:13" pos:end="233:20">stl_phys</name><argument_list pos:start="233:21" pos:end="233:52">(<argument pos:start="233:22" pos:end="233:31"><expr pos:start="233:22" pos:end="233:31"><operator pos:start="233:22" pos:end="233:22">&amp;</operator><name pos:start="233:23" pos:end="233:31"><name pos:start="233:23" pos:end="233:23">s</name><operator pos:start="233:24" pos:end="233:25">-&gt;</operator><name pos:start="233:26" pos:end="233:31">dma_as</name></name></expr></argument>, <argument pos:start="233:34" pos:end="233:43"><expr pos:start="233:34" pos:end="233:43"><name pos:start="233:34" pos:end="233:38">value</name> <operator pos:start="233:40" pos:end="233:40">+</operator> <literal type="number" pos:start="233:42" pos:end="233:43">12</literal></expr></argument>, <argument pos:start="233:46" pos:end="233:51"><expr pos:start="233:46" pos:end="233:51"><literal type="number" pos:start="233:46" pos:end="233:51">0x003C</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:24"><expr pos:start="235:13" pos:end="235:23"><name pos:start="235:13" pos:end="235:19">resplen</name> <operator pos:start="235:21" pos:end="235:21">=</operator> <literal type="number" pos:start="235:23" pos:end="235:23">4</literal></expr>;</expr_stmt>

            <break pos:start="237:13" pos:end="237:18">break;</break>



        <case pos:start="241:9" pos:end="241:24">case <expr pos:start="241:14" pos:end="241:23"><literal type="number" pos:start="241:14" pos:end="241:23">0x00050001</literal></expr>:</case> <comment type="block" pos:start="241:26" pos:end="241:47">/* Get command line */</comment>

            <expr_stmt pos:start="243:13" pos:end="243:24"><expr pos:start="243:13" pos:end="243:23"><name pos:start="243:13" pos:end="243:19">resplen</name> <operator pos:start="243:21" pos:end="243:21">=</operator> <literal type="number" pos:start="243:23" pos:end="243:23">0</literal></expr>;</expr_stmt>

            <break pos:start="245:13" pos:end="245:18">break;</break>



        <default pos:start="249:9" pos:end="249:16">default:</default>

            <expr_stmt pos:start="251:13" pos:end="253:73"><expr pos:start="251:13" pos:end="253:72"><call pos:start="251:13" pos:end="253:72"><name pos:start="251:13" pos:end="251:25">qemu_log_mask</name><argument_list pos:start="251:26" pos:end="253:72">(<argument pos:start="251:27" pos:end="251:41"><expr pos:start="251:27" pos:end="251:41"><name pos:start="251:27" pos:end="251:41">LOG_GUEST_ERROR</name></expr></argument>,

                          <argument pos:start="253:27" pos:end="253:66"><expr pos:start="253:27" pos:end="253:66"><literal type="string" pos:start="253:27" pos:end="253:66">"bcm2835_property: unhandled tag %08x\n"</literal></expr></argument>, <argument pos:start="253:69" pos:end="253:71"><expr pos:start="253:69" pos:end="253:71"><name pos:start="253:69" pos:end="253:71">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="255:13" pos:end="255:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="261:9" pos:end="265:9"><if pos:start="261:9" pos:end="265:9">if <condition pos:start="261:12" pos:end="261:21">(<expr pos:start="261:13" pos:end="261:20"><name pos:start="261:13" pos:end="261:15">tag</name> <operator pos:start="261:17" pos:end="261:18">==</operator> <literal type="number" pos:start="261:20" pos:end="261:20">0</literal></expr>)</condition> <block pos:start="261:23" pos:end="265:9">{<block_content pos:start="263:13" pos:end="263:18">

            <break pos:start="263:13" pos:end="263:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="269:9" pos:end="269:61"><expr pos:start="269:9" pos:end="269:60"><call pos:start="269:9" pos:end="269:60"><name pos:start="269:9" pos:end="269:16">stl_phys</name><argument_list pos:start="269:17" pos:end="269:60">(<argument pos:start="269:18" pos:end="269:27"><expr pos:start="269:18" pos:end="269:27"><operator pos:start="269:18" pos:end="269:18">&amp;</operator><name pos:start="269:19" pos:end="269:27"><name pos:start="269:19" pos:end="269:19">s</name><operator pos:start="269:20" pos:end="269:21">-&gt;</operator><name pos:start="269:22" pos:end="269:27">dma_as</name></name></expr></argument>, <argument pos:start="269:30" pos:end="269:38"><expr pos:start="269:30" pos:end="269:38"><name pos:start="269:30" pos:end="269:34">value</name> <operator pos:start="269:36" pos:end="269:36">+</operator> <literal type="number" pos:start="269:38" pos:end="269:38">8</literal></expr></argument>, <argument pos:start="269:41" pos:end="269:59"><expr pos:start="269:41" pos:end="269:59"><operator pos:start="269:41" pos:end="269:41">(</operator><literal type="number" pos:start="269:42" pos:end="269:42">1</literal> <operator pos:start="269:44" pos:end="269:45">&lt;&lt;</operator> <literal type="number" pos:start="269:47" pos:end="269:48">31</literal><operator pos:start="269:49" pos:end="269:49">)</operator> <operator pos:start="269:51" pos:end="269:51">|</operator> <name pos:start="269:53" pos:end="269:59">resplen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:30"><expr pos:start="271:9" pos:end="271:29"><name pos:start="271:9" pos:end="271:13">value</name> <operator pos:start="271:15" pos:end="271:16">+=</operator> <name pos:start="271:18" pos:end="271:24">bufsize</name> <operator pos:start="271:26" pos:end="271:26">+</operator> <literal type="number" pos:start="271:28" pos:end="271:29">12</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="277:5" pos:end="277:30">/* Buffer response code */</comment>

    <expr_stmt pos:start="279:5" pos:end="279:49"><expr pos:start="279:5" pos:end="279:48"><call pos:start="279:5" pos:end="279:48"><name pos:start="279:5" pos:end="279:12">stl_phys</name><argument_list pos:start="279:13" pos:end="279:48">(<argument pos:start="279:14" pos:end="279:23"><expr pos:start="279:14" pos:end="279:23"><operator pos:start="279:14" pos:end="279:14">&amp;</operator><name pos:start="279:15" pos:end="279:23"><name pos:start="279:15" pos:end="279:15">s</name><operator pos:start="279:16" pos:end="279:17">-&gt;</operator><name pos:start="279:18" pos:end="279:23">dma_as</name></name></expr></argument>, <argument pos:start="279:26" pos:end="279:36"><expr pos:start="279:26" pos:end="279:36"><name pos:start="279:26" pos:end="279:32"><name pos:start="279:26" pos:end="279:26">s</name><operator pos:start="279:27" pos:end="279:28">-&gt;</operator><name pos:start="279:29" pos:end="279:32">addr</name></name> <operator pos:start="279:34" pos:end="279:34">+</operator> <literal type="number" pos:start="279:36" pos:end="279:36">4</literal></expr></argument>, <argument pos:start="279:39" pos:end="279:47"><expr pos:start="279:39" pos:end="279:47"><operator pos:start="279:39" pos:end="279:39">(</operator><literal type="number" pos:start="279:40" pos:end="279:40">1</literal> <operator pos:start="279:42" pos:end="279:43">&lt;&lt;</operator> <literal type="number" pos:start="279:45" pos:end="279:46">31</literal><operator pos:start="279:47" pos:end="279:47">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
