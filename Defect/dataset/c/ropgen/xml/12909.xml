<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12909.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:75"><name pos:start="1:1" pos:end="1:20">grlib_apbuart_writel</name><argument_list pos:start="1:21" pos:end="1:75">(<argument pos:start="1:22" pos:end="1:33">void *opaque</argument>, <argument pos:start="1:36" pos:end="1:58">target_phys_addr_t addr</argument>, <argument pos:start="1:61" pos:end="1:74">uint32_t value</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:56">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:8">UART</name>          <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:23">uart</name> <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name></type>  <name pos:start="7:20" pos:end="7:20">c</name>    <init pos:start="7:25" pos:end="7:27">= <expr pos:start="7:27" pos:end="7:27"><literal type="number" pos:start="7:27" pos:end="7:27">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:8">addr</name> <operator pos:start="11:10" pos:end="11:11">&amp;=</operator> <literal type="number" pos:start="11:13" pos:end="11:16">0xff</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:24">/* Unit registers */</comment>

    <switch pos:start="17:5" pos:end="57:5">switch <condition pos:start="17:12" pos:end="17:17">(<expr pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:16">addr</name></expr>)</condition> <block pos:start="17:19" pos:end="57:5">{<block_content pos:start="19:5" pos:end="55:14">

    <case pos:start="19:5" pos:end="19:21">case <expr pos:start="19:10" pos:end="19:20"><name pos:start="19:10" pos:end="19:20">DATA_OFFSET</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:9">c</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:17">value</name> <operator pos:start="21:19" pos:end="21:19">&amp;</operator> <literal type="number" pos:start="21:21" pos:end="21:24">0xFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:41"><expr pos:start="23:9" pos:end="23:40"><call pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:22">qemu_chr_write</name><argument_list pos:start="23:23" pos:end="23:40">(<argument pos:start="23:24" pos:end="23:32"><expr pos:start="23:24" pos:end="23:32"><name pos:start="23:24" pos:end="23:32"><name pos:start="23:24" pos:end="23:27">uart</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:32">chr</name></name></expr></argument>, <argument pos:start="23:35" pos:end="23:36"><expr pos:start="23:35" pos:end="23:36"><operator pos:start="23:35" pos:end="23:35">&amp;</operator><name pos:start="23:36" pos:end="23:36">c</name></expr></argument>, <argument pos:start="23:39" pos:end="23:39"><expr pos:start="23:39" pos:end="23:39"><literal type="number" pos:start="23:39" pos:end="23:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>



    <case pos:start="29:5" pos:end="29:23">case <expr pos:start="29:10" pos:end="29:22"><name pos:start="29:10" pos:end="29:22">STATUS_OFFSET</name></expr>:</case>

        <comment type="block" pos:start="31:9" pos:end="31:23">/* Read Only */</comment>

        <return pos:start="33:9" pos:end="33:15">return;</return>



    <case pos:start="37:5" pos:end="37:24">case <expr pos:start="37:10" pos:end="37:23"><name pos:start="37:10" pos:end="37:23">CONTROL_OFFSET</name></expr>:</case>

        <comment type="block" pos:start="39:9" pos:end="39:27">/* Not supported */</comment>

        <return pos:start="41:9" pos:end="41:15">return;</return>



    <case pos:start="45:5" pos:end="45:23">case <expr pos:start="45:10" pos:end="45:22"><name pos:start="45:10" pos:end="45:22">SCALER_OFFSET</name></expr>:</case>

        <comment type="block" pos:start="47:9" pos:end="47:27">/* Not supported */</comment>

        <return pos:start="49:9" pos:end="49:15">return;</return>



    <default pos:start="53:5" pos:end="53:12">default:</default>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="61:5" pos:end="61:56"><expr pos:start="61:5" pos:end="61:55"><call pos:start="61:5" pos:end="61:55"><name pos:start="61:5" pos:end="61:40">trace_grlib_apbuart_unknown_register</name><argument_list pos:start="61:41" pos:end="61:55">(<argument pos:start="61:42" pos:end="61:48"><expr pos:start="61:42" pos:end="61:48"><literal type="string" pos:start="61:42" pos:end="61:48">"write"</literal></expr></argument>, <argument pos:start="61:51" pos:end="61:54"><expr pos:start="61:51" pos:end="61:54"><name pos:start="61:51" pos:end="61:54">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
