<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1152.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">ra288_decode_frame</name><parameter_list pos:start="1:30" pos:end="3:66">(<parameter pos:start="1:31" pos:end="1:52"><decl pos:start="1:31" pos:end="1:52"><type pos:start="1:31" pos:end="1:52"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type> <name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:64"><decl pos:start="1:55" pos:end="1:64"><type pos:start="1:55" pos:end="1:64"><name pos:start="1:55" pos:end="1:58">void</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">data</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:48"><decl pos:start="3:31" pos:end="3:48"><type pos:start="3:31" pos:end="3:48"><name pos:start="3:31" pos:end="3:33">int</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:48">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:65"><decl pos:start="3:51" pos:end="3:65"><type pos:start="3:51" pos:end="3:65"><name pos:start="3:51" pos:end="3:58">AVPacket</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:65">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="93:30">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">frame</name>     <init pos:start="7:24" pos:end="7:29">= <expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">float</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:14">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:42"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:16">RA288Context</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:23">ractx</name> <init pos:start="17:25" pos:end="17:42">= <expr pos:start="17:27" pos:end="17:42"><name pos:start="17:27" pos:end="17:42"><name pos:start="17:27" pos:end="17:31">avctx</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:17">GetBitContext</name></type> <name pos:start="19:19" pos:end="19:20">gb</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:38">(<expr pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:16">buf_size</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <name pos:start="23:20" pos:end="23:37"><name pos:start="23:20" pos:end="23:24">avctx</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:37">block_align</name></name></expr>)</condition> <block pos:start="23:40" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:35">

        <expr_stmt pos:start="25:9" pos:end="29:45"><expr pos:start="25:9" pos:end="29:44"><call pos:start="25:9" pos:end="29:44"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="29:44">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="27:16" pos:end="27:59"><expr pos:start="27:16" pos:end="27:59"><literal type="string" pos:start="27:16" pos:end="27:59">"Error! Input buffer is too small [%d&lt;%d]\n"</literal></expr></argument>,

               <argument pos:start="29:16" pos:end="29:23"><expr pos:start="29:16" pos:end="29:23"><name pos:start="29:16" pos:end="29:23">buf_size</name></expr></argument>, <argument pos:start="29:26" pos:end="29:43"><expr pos:start="29:26" pos:end="29:43"><name pos:start="29:26" pos:end="29:43"><name pos:start="29:26" pos:end="29:30">avctx</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:43">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:35">return <expr pos:start="31:16" pos:end="31:34"><name pos:start="31:16" pos:end="31:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:27">/* get output buffer */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:66"><expr pos:start="39:5" pos:end="39:65"><name pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:9">frame</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:21">nb_samples</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <name pos:start="39:25" pos:end="39:40">RA288_BLOCK_SIZE</name> <operator pos:start="39:42" pos:end="39:42">*</operator> <name pos:start="39:44" pos:end="39:65">RA288_BLOCKS_PER_FRAME</name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:19"><if pos:start="41:5" pos:end="43:19">if <condition pos:start="41:8" pos:end="41:51">(<expr pos:start="41:9" pos:end="41:50"><operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:12">ret</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:45"><name pos:start="41:16" pos:end="41:28">ff_get_buffer</name><argument_list pos:start="41:29" pos:end="41:45">(<argument pos:start="41:30" pos:end="41:34"><expr pos:start="41:30" pos:end="41:34"><name pos:start="41:30" pos:end="41:34">avctx</name></expr></argument>, <argument pos:start="41:37" pos:end="41:41"><expr pos:start="41:37" pos:end="41:41"><name pos:start="41:37" pos:end="41:41">frame</name></expr></argument>, <argument pos:start="41:44" pos:end="41:44"><expr pos:start="41:44" pos:end="41:44"><literal type="number" pos:start="41:44" pos:end="41:44">0</literal></expr></argument>)</argument_list></call><operator pos:start="41:46" pos:end="41:46">)</operator> <operator pos:start="41:48" pos:end="41:48">&lt;</operator> <literal type="number" pos:start="41:50" pos:end="41:50">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:19"><block_content pos:start="43:9" pos:end="43:19">

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:34"><expr pos:start="45:5" pos:end="45:33"><name pos:start="45:5" pos:end="45:7">out</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <operator pos:start="45:11" pos:end="45:11">(</operator><name pos:start="45:12" pos:end="45:16">float</name> <operator pos:start="45:18" pos:end="45:18">*</operator><operator pos:start="45:19" pos:end="45:19">)</operator><name pos:start="45:20" pos:end="45:33"><name pos:start="45:20" pos:end="45:24">frame</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:30">data</name><index pos:start="45:31" pos:end="45:33">[<expr pos:start="45:32" pos:end="45:32"><literal type="number" pos:start="45:32" pos:end="45:32">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:49"><expr pos:start="49:5" pos:end="49:48"><call pos:start="49:5" pos:end="49:48"><name pos:start="49:5" pos:end="49:18">init_get_bits8</name><argument_list pos:start="49:19" pos:end="49:48">(<argument pos:start="49:20" pos:end="49:22"><expr pos:start="49:20" pos:end="49:22"><operator pos:start="49:20" pos:end="49:20">&amp;</operator><name pos:start="49:21" pos:end="49:22">gb</name></expr></argument>, <argument pos:start="49:25" pos:end="49:27"><expr pos:start="49:25" pos:end="49:27"><name pos:start="49:25" pos:end="49:27">buf</name></expr></argument>, <argument pos:start="49:30" pos:end="49:47"><expr pos:start="49:30" pos:end="49:47"><name pos:start="49:30" pos:end="49:47"><name pos:start="49:30" pos:end="49:34">avctx</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:47">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="53:5" pos:end="85:5">for <control pos:start="53:9" pos:end="53:46">(<init pos:start="53:10" pos:end="53:13"><expr pos:start="53:10" pos:end="53:12"><name pos:start="53:10" pos:end="53:10">i</name><operator pos:start="53:11" pos:end="53:11">=</operator><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</init> <condition pos:start="53:15" pos:end="53:41"><expr pos:start="53:15" pos:end="53:40"><name pos:start="53:15" pos:end="53:15">i</name> <operator pos:start="53:17" pos:end="53:17">&lt;</operator> <name pos:start="53:19" pos:end="53:40">RA288_BLOCKS_PER_FRAME</name></expr>;</condition> <incr pos:start="53:43" pos:end="53:45"><expr pos:start="53:43" pos:end="53:45"><name pos:start="53:43" pos:end="53:43">i</name><operator pos:start="53:44" pos:end="53:45">++</operator></expr></incr>)</control> <block pos:start="53:48" pos:end="85:5">{<block_content pos:start="55:9" pos:end="83:9">

        <decl_stmt pos:start="55:9" pos:end="55:48"><decl pos:start="55:9" pos:end="55:47"><type pos:start="55:9" pos:end="55:13"><name pos:start="55:9" pos:end="55:13">float</name></type> <name pos:start="55:15" pos:end="55:18">gain</name> <init pos:start="55:20" pos:end="55:47">= <expr pos:start="55:22" pos:end="55:47"><name pos:start="55:22" pos:end="55:47"><name pos:start="55:22" pos:end="55:29">amptable</name><index pos:start="55:30" pos:end="55:47">[<expr pos:start="55:31" pos:end="55:46"><call pos:start="55:31" pos:end="55:46"><name pos:start="55:31" pos:end="55:38">get_bits</name><argument_list pos:start="55:39" pos:end="55:46">(<argument pos:start="55:40" pos:end="55:42"><expr pos:start="55:40" pos:end="55:42"><operator pos:start="55:40" pos:end="55:40">&amp;</operator><name pos:start="55:41" pos:end="55:42">gb</name></expr></argument>, <argument pos:start="55:45" pos:end="55:45"><expr pos:start="55:45" pos:end="55:45"><literal type="number" pos:start="55:45" pos:end="55:45">3</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:47"><decl pos:start="57:9" pos:end="57:46"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:19">cb_coef</name> <init pos:start="57:21" pos:end="57:46">= <expr pos:start="57:23" pos:end="57:46"><call pos:start="57:23" pos:end="57:46"><name pos:start="57:23" pos:end="57:30">get_bits</name><argument_list pos:start="57:31" pos:end="57:46">(<argument pos:start="57:32" pos:end="57:34"><expr pos:start="57:32" pos:end="57:34"><operator pos:start="57:32" pos:end="57:32">&amp;</operator><name pos:start="57:33" pos:end="57:34">gb</name></expr></argument>, <argument pos:start="57:37" pos:end="57:45"><expr pos:start="57:37" pos:end="57:45"><literal type="number" pos:start="57:37" pos:end="57:39">6</literal> <operator pos:start="57:39" pos:end="57:39">+</operator> <operator pos:start="57:41" pos:end="57:41">(</operator><name pos:start="57:42" pos:end="57:42">i</name><operator pos:start="57:43" pos:end="57:43">&amp;</operator><literal type="number" pos:start="57:44" pos:end="57:44">1</literal><operator pos:start="57:45" pos:end="57:45">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:37"><expr pos:start="61:9" pos:end="61:36"><call pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:14">decode</name><argument_list pos:start="61:15" pos:end="61:36">(<argument pos:start="61:16" pos:end="61:20"><expr pos:start="61:16" pos:end="61:20"><name pos:start="61:16" pos:end="61:20">ractx</name></expr></argument>, <argument pos:start="61:23" pos:end="61:26"><expr pos:start="61:23" pos:end="61:26"><name pos:start="61:23" pos:end="61:26">gain</name></expr></argument>, <argument pos:start="61:29" pos:end="61:35"><expr pos:start="61:29" pos:end="61:35"><name pos:start="61:29" pos:end="61:35">cb_coef</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:79"><expr pos:start="65:9" pos:end="65:78"><call pos:start="65:9" pos:end="65:78"><name pos:start="65:9" pos:end="65:14">memcpy</name><argument_list pos:start="65:15" pos:end="65:78">(<argument pos:start="65:16" pos:end="65:18"><expr pos:start="65:16" pos:end="65:18"><name pos:start="65:16" pos:end="65:18">out</name></expr></argument>, <argument pos:start="65:21" pos:end="65:44"><expr pos:start="65:21" pos:end="65:44"><operator pos:start="65:21" pos:end="65:21">&amp;</operator><name pos:start="65:22" pos:end="65:44"><name pos:start="65:22" pos:end="65:26">ractx</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:35">sp_hist</name><index pos:start="65:36" pos:end="65:44">[<expr pos:start="65:37" pos:end="65:43"><literal type="number" pos:start="65:37" pos:end="65:40">70</literal> <operator pos:start="65:40" pos:end="65:40">+</operator> <literal type="number" pos:start="65:42" pos:end="65:43">36</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:47" pos:end="65:77"><expr pos:start="65:47" pos:end="65:77"><name pos:start="65:47" pos:end="65:62">RA288_BLOCK_SIZE</name> <operator pos:start="65:64" pos:end="65:64">*</operator> <sizeof pos:start="65:66" pos:end="65:77">sizeof<argument_list pos:start="65:72" pos:end="65:77">(<argument pos:start="65:73" pos:end="65:76"><expr pos:start="65:73" pos:end="65:76"><operator pos:start="65:73" pos:end="65:73">*</operator><name pos:start="65:74" pos:end="65:76">out</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:32"><expr pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:11">out</name> <operator pos:start="67:13" pos:end="67:14">+=</operator> <name pos:start="67:16" pos:end="67:31">RA288_BLOCK_SIZE</name></expr>;</expr_stmt>



        <if_stmt pos:start="71:9" pos:end="83:9"><if pos:start="71:9" pos:end="83:9">if <condition pos:start="71:12" pos:end="71:25">(<expr pos:start="71:13" pos:end="71:24"><operator pos:start="71:13" pos:end="71:13">(</operator><name pos:start="71:14" pos:end="71:14">i</name> <operator pos:start="71:16" pos:end="71:16">&amp;</operator> <literal type="number" pos:start="71:18" pos:end="71:18">7</literal><operator pos:start="71:19" pos:end="71:19">)</operator> <operator pos:start="71:21" pos:end="71:22">==</operator> <literal type="number" pos:start="71:24" pos:end="71:24">3</literal></expr>)</condition> <block pos:start="71:27" pos:end="83:9">{<block_content pos:start="73:13" pos:end="81:73">

            <expr_stmt pos:start="73:13" pos:end="75:71"><expr pos:start="73:13" pos:end="75:70"><call pos:start="73:13" pos:end="75:70"><name pos:start="73:13" pos:end="73:27">backward_filter</name><argument_list pos:start="73:28" pos:end="75:70">(<argument pos:start="73:29" pos:end="73:33"><expr pos:start="73:29" pos:end="73:33"><name pos:start="73:29" pos:end="73:33">ractx</name></expr></argument>, <argument pos:start="73:36" pos:end="73:49"><expr pos:start="73:36" pos:end="73:49"><name pos:start="73:36" pos:end="73:49"><name pos:start="73:36" pos:end="73:40">ractx</name><operator pos:start="73:41" pos:end="73:42">-&gt;</operator><name pos:start="73:43" pos:end="73:49">sp_hist</name></name></expr></argument>, <argument pos:start="73:52" pos:end="73:64"><expr pos:start="73:52" pos:end="73:64"><name pos:start="73:52" pos:end="73:64"><name pos:start="73:52" pos:end="73:56">ractx</name><operator pos:start="73:57" pos:end="73:58">-&gt;</operator><name pos:start="73:59" pos:end="73:64">sp_rec</name></name></expr></argument>, <argument pos:start="73:67" pos:end="73:76"><expr pos:start="73:67" pos:end="73:76"><name pos:start="73:67" pos:end="73:76">syn_window</name></expr></argument>,

                            <argument pos:start="75:29" pos:end="75:41"><expr pos:start="75:29" pos:end="75:41"><name pos:start="75:29" pos:end="75:41"><name pos:start="75:29" pos:end="75:33">ractx</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:41">sp_lpc</name></name></expr></argument>, <argument pos:start="75:44" pos:end="75:53"><expr pos:start="75:44" pos:end="75:53"><name pos:start="75:44" pos:end="75:53">syn_bw_tab</name></expr></argument>, <argument pos:start="75:56" pos:end="75:57"><expr pos:start="75:56" pos:end="75:57"><literal type="number" pos:start="75:56" pos:end="75:57">36</literal></expr></argument>, <argument pos:start="75:60" pos:end="75:61"><expr pos:start="75:60" pos:end="75:61"><literal type="number" pos:start="75:60" pos:end="75:61">40</literal></expr></argument>, <argument pos:start="75:64" pos:end="75:65"><expr pos:start="75:64" pos:end="75:65"><literal type="number" pos:start="75:64" pos:end="75:65">35</literal></expr></argument>, <argument pos:start="75:68" pos:end="75:69"><expr pos:start="75:68" pos:end="75:69"><literal type="number" pos:start="75:68" pos:end="75:69">70</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="79:13" pos:end="81:73"><expr pos:start="79:13" pos:end="81:72"><call pos:start="79:13" pos:end="81:72"><name pos:start="79:13" pos:end="79:27">backward_filter</name><argument_list pos:start="79:28" pos:end="81:72">(<argument pos:start="79:29" pos:end="79:33"><expr pos:start="79:29" pos:end="79:33"><name pos:start="79:29" pos:end="79:33">ractx</name></expr></argument>, <argument pos:start="79:36" pos:end="79:51"><expr pos:start="79:36" pos:end="79:51"><name pos:start="79:36" pos:end="79:51"><name pos:start="79:36" pos:end="79:40">ractx</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:51">gain_hist</name></name></expr></argument>, <argument pos:start="79:54" pos:end="79:68"><expr pos:start="79:54" pos:end="79:68"><name pos:start="79:54" pos:end="79:68"><name pos:start="79:54" pos:end="79:58">ractx</name><operator pos:start="79:59" pos:end="79:60">-&gt;</operator><name pos:start="79:61" pos:end="79:68">gain_rec</name></name></expr></argument>, <argument pos:start="79:71" pos:end="79:81"><expr pos:start="79:71" pos:end="79:81"><name pos:start="79:71" pos:end="79:81">gain_window</name></expr></argument>,

                            <argument pos:start="81:29" pos:end="81:43"><expr pos:start="81:29" pos:end="81:43"><name pos:start="81:29" pos:end="81:43"><name pos:start="81:29" pos:end="81:33">ractx</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:43">gain_lpc</name></name></expr></argument>, <argument pos:start="81:46" pos:end="81:56"><expr pos:start="81:46" pos:end="81:56"><name pos:start="81:46" pos:end="81:56">gain_bw_tab</name></expr></argument>, <argument pos:start="81:59" pos:end="81:60"><expr pos:start="81:59" pos:end="81:60"><literal type="number" pos:start="81:59" pos:end="81:60">10</literal></expr></argument>, <argument pos:start="81:63" pos:end="81:63"><expr pos:start="81:63" pos:end="81:63"><literal type="number" pos:start="81:63" pos:end="81:63">8</literal></expr></argument>, <argument pos:start="81:66" pos:end="81:67"><expr pos:start="81:66" pos:end="81:67"><literal type="number" pos:start="81:66" pos:end="81:67">20</literal></expr></argument>, <argument pos:start="81:70" pos:end="81:71"><expr pos:start="81:70" pos:end="81:71"><literal type="number" pos:start="81:70" pos:end="81:71">28</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="89:5" pos:end="89:23"><expr pos:start="89:5" pos:end="89:22"><operator pos:start="89:5" pos:end="89:5">*</operator><name pos:start="89:6" pos:end="89:18">got_frame_ptr</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <literal type="number" pos:start="89:22" pos:end="89:22">1</literal></expr>;</expr_stmt>



    <return pos:start="93:5" pos:end="93:30">return <expr pos:start="93:12" pos:end="93:29"><name pos:start="93:12" pos:end="93:29"><name pos:start="93:12" pos:end="93:16">avctx</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:29">block_align</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
