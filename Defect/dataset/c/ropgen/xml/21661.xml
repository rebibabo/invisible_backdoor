<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21661.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:39">vmdaudio_decode_init</name><parameter_list pos:start="1:40" pos:end="1:62">(<parameter pos:start="1:41" pos:end="1:61"><decl pos:start="1:41" pos:end="1:61"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:54">AVCodecContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:13">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">VmdAudioContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:41">= <expr pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:30">avctx</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:51">(<expr pos:start="9:9" pos:end="9:50"><name pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:13">avctx</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:23">channels</name></name> <operator pos:start="9:25" pos:end="9:25">&lt;</operator> <literal type="number" pos:start="9:27" pos:end="9:27">1</literal> <operator pos:start="9:29" pos:end="9:30">||</operator> <name pos:start="9:32" pos:end="9:46"><name pos:start="9:32" pos:end="9:36">avctx</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:46">channels</name></name> <operator pos:start="9:48" pos:end="9:48">&gt;</operator> <literal type="number" pos:start="9:50" pos:end="9:50">2</literal></expr>)</condition> <block pos:start="9:53" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:31">

        <expr_stmt pos:start="11:9" pos:end="11:68"><expr pos:start="11:9" pos:end="11:67"><call pos:start="11:9" pos:end="11:67"><name pos:start="11:9" pos:end="11:14">av_log</name><argument_list pos:start="11:15" pos:end="11:67">(<argument pos:start="11:16" pos:end="11:20"><expr pos:start="11:16" pos:end="11:20"><name pos:start="11:16" pos:end="11:20">avctx</name></expr></argument>, <argument pos:start="11:23" pos:end="11:34"><expr pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="11:37" pos:end="11:66"><expr pos:start="11:37" pos:end="11:66"><literal type="string" pos:start="11:37" pos:end="11:66">"invalid number of channels\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:31">return <expr pos:start="13:16" pos:end="13:30"><call pos:start="13:16" pos:end="13:30"><name pos:start="13:16" pos:end="13:22">AVERROR</name><argument_list pos:start="13:23" pos:end="13:30">(<argument pos:start="13:24" pos:end="13:29"><expr pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:31">(<expr pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:13">avctx</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:26">block_align</name></name> <operator pos:start="17:28" pos:end="17:28">&lt;</operator> <literal type="number" pos:start="17:30" pos:end="17:30">1</literal></expr>)</condition> <block pos:start="17:33" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:31">

        <expr_stmt pos:start="19:9" pos:end="19:61"><expr pos:start="19:9" pos:end="19:60"><call pos:start="19:9" pos:end="19:60"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:60">(<argument pos:start="19:16" pos:end="19:20"><expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:20">avctx</name></expr></argument>, <argument pos:start="19:23" pos:end="19:34"><expr pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:37" pos:end="19:59"><expr pos:start="19:37" pos:end="19:59"><literal type="string" pos:start="19:37" pos:end="19:59">"invalid block align\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:71"><expr pos:start="27:5" pos:end="29:70"><name pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:9">avctx</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:25">channel_layout</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <ternary pos:start="27:29" pos:end="29:70"><condition pos:start="27:29" pos:end="27:50"><expr pos:start="27:29" pos:end="27:48"><name pos:start="27:29" pos:end="27:43"><name pos:start="27:29" pos:end="27:33">avctx</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:43">channels</name></name> <operator pos:start="27:45" pos:end="27:46">==</operator> <literal type="number" pos:start="27:48" pos:end="27:48">1</literal></expr> ?</condition><then pos:start="27:52" pos:end="27:68"> <expr pos:start="27:52" pos:end="27:68"><name pos:start="27:52" pos:end="27:68">AV_CH_LAYOUT_MONO</name></expr> </then><else pos:start="27:70" pos:end="29:70">:

                                                   <expr pos:start="29:52" pos:end="29:70"><name pos:start="29:52" pos:end="29:70">AV_CH_LAYOUT_STEREO</name></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="39:45"><if pos:start="33:5" pos:end="35:46">if <condition pos:start="33:8" pos:end="33:43">(<expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:36">bits_per_coded_sample</name></name> <operator pos:start="33:38" pos:end="33:39">==</operator> <literal type="number" pos:start="33:41" pos:end="33:42">16</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:46"><block_content pos:start="35:9" pos:end="35:46">

        <expr_stmt pos:start="35:9" pos:end="35:46"><expr pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:13">avctx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:25">sample_fmt</name></name> <operator pos:start="35:27" pos:end="35:27">=</operator> <name pos:start="35:29" pos:end="35:45">AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="37:5" pos:end="39:45">else<block type="pseudo" pos:start="39:9" pos:end="39:45"><block_content pos:start="39:9" pos:end="39:45">

        <expr_stmt pos:start="39:9" pos:end="39:45"><expr pos:start="39:9" pos:end="39:44"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:13">avctx</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:25">sample_fmt</name></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:44">AV_SAMPLE_FMT_U8</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:60"><expr pos:start="41:5" pos:end="41:59"><name pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:14">out_bps</name></name> <operator pos:start="41:16" pos:end="41:16">=</operator> <call pos:start="41:18" pos:end="41:59"><name pos:start="41:18" pos:end="41:40">av_get_bytes_per_sample</name><argument_list pos:start="41:41" pos:end="41:59">(<argument pos:start="41:42" pos:end="41:58"><expr pos:start="41:42" pos:end="41:58"><name pos:start="41:42" pos:end="41:58"><name pos:start="41:42" pos:end="41:46">avctx</name><operator pos:start="41:47" pos:end="41:48">-&gt;</operator><name pos:start="41:49" pos:end="41:58">sample_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:77"><expr pos:start="45:5" pos:end="45:76"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:17">chunk_size</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:38"><name pos:start="45:21" pos:end="45:25">avctx</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:38">block_align</name></name> <operator pos:start="45:40" pos:end="45:40">+</operator> <name pos:start="45:42" pos:end="45:56"><name pos:start="45:42" pos:end="45:46">avctx</name><operator pos:start="45:47" pos:end="45:48">-&gt;</operator><name pos:start="45:49" pos:end="45:56">channels</name></name> <operator pos:start="45:58" pos:end="45:58">*</operator> <operator pos:start="45:60" pos:end="45:60">(</operator><name pos:start="45:61" pos:end="45:70"><name pos:start="45:61" pos:end="45:61">s</name><operator pos:start="45:62" pos:end="45:63">-&gt;</operator><name pos:start="45:64" pos:end="45:70">out_bps</name></name> <operator pos:start="45:72" pos:end="45:73">==</operator> <literal type="number" pos:start="45:75" pos:end="45:75">2</literal><operator pos:start="45:76" pos:end="45:76">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:42"><expr pos:start="49:5" pos:end="49:41"><call pos:start="49:5" pos:end="49:41"><name pos:start="49:5" pos:end="49:30">avcodec_get_frame_defaults</name><argument_list pos:start="49:31" pos:end="49:41">(<argument pos:start="49:32" pos:end="49:40"><expr pos:start="49:32" pos:end="49:40"><operator pos:start="49:32" pos:end="49:32">&amp;</operator><name pos:start="49:33" pos:end="49:40"><name pos:start="49:33" pos:end="49:33">s</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:40">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:35"><expr pos:start="51:5" pos:end="51:34"><name pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:9">avctx</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:22">coded_frame</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <operator pos:start="51:26" pos:end="51:26">&amp;</operator><name pos:start="51:27" pos:end="51:34"><name pos:start="51:27" pos:end="51:27">s</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:34">frame</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="61:31"><expr pos:start="55:5" pos:end="61:30"><call pos:start="55:5" pos:end="61:30"><name pos:start="55:5" pos:end="55:10">av_log</name><argument_list pos:start="55:11" pos:end="61:30">(<argument pos:start="55:12" pos:end="55:16"><expr pos:start="55:12" pos:end="55:16"><name pos:start="55:12" pos:end="55:16">avctx</name></expr></argument>, <argument pos:start="55:19" pos:end="55:30"><expr pos:start="55:19" pos:end="55:30"><name pos:start="55:19" pos:end="55:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="55:33" pos:end="57:49"><expr pos:start="55:33" pos:end="57:49"><literal type="string" pos:start="55:33" pos:end="55:63">"%d channels, %d bits/sample, "</literal>

           <literal type="string" pos:start="57:12" pos:end="57:49">"block align = %d, sample rate = %d\n"</literal></expr></argument>,

           <argument pos:start="59:12" pos:end="59:26"><expr pos:start="59:12" pos:end="59:26"><name pos:start="59:12" pos:end="59:26"><name pos:start="59:12" pos:end="59:16">avctx</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:26">channels</name></name></expr></argument>, <argument pos:start="59:29" pos:end="59:56"><expr pos:start="59:29" pos:end="59:56"><name pos:start="59:29" pos:end="59:56"><name pos:start="59:29" pos:end="59:33">avctx</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:56">bits_per_coded_sample</name></name></expr></argument>, <argument pos:start="59:59" pos:end="59:76"><expr pos:start="59:59" pos:end="59:76"><name pos:start="59:59" pos:end="59:76"><name pos:start="59:59" pos:end="59:63">avctx</name><operator pos:start="59:64" pos:end="59:65">-&gt;</operator><name pos:start="59:66" pos:end="59:76">block_align</name></name></expr></argument>,

           <argument pos:start="61:12" pos:end="61:29"><expr pos:start="61:12" pos:end="61:29"><name pos:start="61:12" pos:end="61:29"><name pos:start="61:12" pos:end="61:16">avctx</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:29">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
