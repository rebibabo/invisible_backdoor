<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20293.c" pos:tabs="8"><function pos:start="1:1" pos:end="331:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">hpet_ram_write</name><parameter_list pos:start="1:27" pos:end="3:57">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:64"><decl pos:start="1:42" pos:end="1:64"><type pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:59">target_phys_addr_t</name></type> <name pos:start="1:61" pos:end="1:64">addr</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:41"><decl pos:start="3:28" pos:end="3:41"><type pos:start="3:28" pos:end="3:41"><name pos:start="3:28" pos:end="3:35">uint64_t</name></type> <name pos:start="3:37" pos:end="3:41">value</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:56"><decl pos:start="3:44" pos:end="3:56"><type pos:start="3:44" pos:end="3:56"><name pos:start="3:44" pos:end="3:51">unsigned</name></type> <name pos:start="3:53" pos:end="3:56">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="331:1">{<block_content pos:start="7:5" pos:end="329:5">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">HPETState</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:16">s</name> <init pos:start="9:18" pos:end="9:25">= <expr pos:start="9:20" pos:end="9:25"><name pos:start="9:20" pos:end="9:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:20">old_val</name></decl>, <decl pos:start="11:23" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:23" pos:end="11:29">new_val</name></decl>, <decl pos:start="11:32" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:32" pos:end="11:34">val</name></decl>, <decl pos:start="11:37" pos:end="11:41"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:37" pos:end="11:41">index</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:79"><expr pos:start="15:5" pos:end="15:78"><call pos:start="15:5" pos:end="15:78"><name pos:start="15:5" pos:end="15:11">DPRINTF</name><argument_list pos:start="15:12" pos:end="15:78">(<argument pos:start="15:13" pos:end="15:64"><expr pos:start="15:13" pos:end="15:64"><literal type="string" pos:start="15:13" pos:end="15:46">"qemu: Enter hpet_ram_writel at %"</literal> <name pos:start="15:48" pos:end="15:53">PRIx64</name> <literal type="string" pos:start="15:55" pos:end="15:64">" = %#x\n"</literal></expr></argument>, <argument pos:start="15:67" pos:end="15:70"><expr pos:start="15:67" pos:end="15:70"><name pos:start="15:67" pos:end="15:70">addr</name></expr></argument>, <argument pos:start="15:73" pos:end="15:77"><expr pos:start="15:73" pos:end="15:77"><name pos:start="15:73" pos:end="15:77">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:9">index</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <name pos:start="17:13" pos:end="17:16">addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:11">old_val</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:44"><name pos:start="19:15" pos:end="19:27">hpet_ram_read</name><argument_list pos:start="19:28" pos:end="19:44">(<argument pos:start="19:29" pos:end="19:34"><expr pos:start="19:29" pos:end="19:34"><name pos:start="19:29" pos:end="19:34">opaque</name></expr></argument>, <argument pos:start="19:37" pos:end="19:40"><expr pos:start="19:37" pos:end="19:40"><name pos:start="19:37" pos:end="19:40">addr</name></expr></argument>, <argument pos:start="19:43" pos:end="19:43"><expr pos:start="19:43" pos:end="19:43"><literal type="number" pos:start="19:43" pos:end="19:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:20"><expr pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:11">new_val</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:19">value</name></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:36">/*address range of all TN regs*/</comment>

    <if_stmt pos:start="27:5" pos:end="329:5"><if pos:start="27:5" pos:end="193:5">if <condition pos:start="27:8" pos:end="27:41">(<expr pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:13">index</name> <operator pos:start="27:15" pos:end="27:16">&gt;=</operator> <literal type="number" pos:start="27:18" pos:end="27:22">0x100</literal> <operator pos:start="27:24" pos:end="27:25">&amp;&amp;</operator> <name pos:start="27:27" pos:end="27:31">index</name> <operator pos:start="27:33" pos:end="27:34">&lt;=</operator> <literal type="number" pos:start="27:36" pos:end="27:40">0x3ff</literal></expr>)</condition> <block pos:start="27:43" pos:end="193:5">{<block_content pos:start="29:9" pos:end="191:15">

        <decl_stmt pos:start="29:9" pos:end="29:49"><decl pos:start="29:9" pos:end="29:48"><type pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:15">uint8_t</name></type> <name pos:start="29:17" pos:end="29:24">timer_id</name> <init pos:start="29:26" pos:end="29:48">= <expr pos:start="29:28" pos:end="29:48"><operator pos:start="29:28" pos:end="29:28">(</operator><name pos:start="29:29" pos:end="29:32">addr</name> <operator pos:start="29:34" pos:end="29:34">-</operator> <literal type="number" pos:start="29:36" pos:end="29:40">0x100</literal><operator pos:start="29:41" pos:end="29:41">)</operator> <operator pos:start="29:43" pos:end="29:43">/</operator> <literal type="number" pos:start="29:45" pos:end="29:48">0x20</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:47"><decl pos:start="31:9" pos:end="31:46"><type pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:17">HPETTimer</name> <modifier pos:start="31:19" pos:end="31:19">*</modifier></type><name pos:start="31:20" pos:end="31:24">timer</name> <init pos:start="31:26" pos:end="31:46">= <expr pos:start="31:28" pos:end="31:46"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:46"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:36">timer</name><index pos:start="31:37" pos:end="31:46">[<expr pos:start="31:38" pos:end="31:45"><name pos:start="31:38" pos:end="31:45">timer_id</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:68"><expr pos:start="35:9" pos:end="35:67"><call pos:start="35:9" pos:end="35:67"><name pos:start="35:9" pos:end="35:15">DPRINTF</name><argument_list pos:start="35:16" pos:end="35:67">(<argument pos:start="35:17" pos:end="35:56"><expr pos:start="35:17" pos:end="35:56"><literal type="string" pos:start="35:17" pos:end="35:56">"qemu: hpet_ram_writel timer_id = %#x\n"</literal></expr></argument>, <argument pos:start="35:59" pos:end="35:66"><expr pos:start="35:59" pos:end="35:66"><name pos:start="35:59" pos:end="35:66">timer_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:37">(<expr pos:start="37:13" pos:end="37:36"><name pos:start="37:13" pos:end="37:20">timer_id</name> <operator pos:start="37:22" pos:end="37:22">&gt;</operator> <name pos:start="37:24" pos:end="37:36"><name pos:start="37:24" pos:end="37:24">s</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:36">num_timers</name></name></expr>)</condition> <block pos:start="37:39" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:19">

            <expr_stmt pos:start="39:13" pos:end="39:53"><expr pos:start="39:13" pos:end="39:52"><call pos:start="39:13" pos:end="39:52"><name pos:start="39:13" pos:end="39:19">DPRINTF</name><argument_list pos:start="39:20" pos:end="39:52">(<argument pos:start="39:21" pos:end="39:51"><expr pos:start="39:21" pos:end="39:51"><literal type="string" pos:start="39:21" pos:end="39:51">"qemu: timer id out of range\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="45:9" pos:end="189:9">switch <condition pos:start="45:16" pos:end="45:38">(<expr pos:start="45:17" pos:end="45:37"><operator pos:start="45:17" pos:end="45:17">(</operator><name pos:start="45:18" pos:end="45:21">addr</name> <operator pos:start="45:23" pos:end="45:23">-</operator> <literal type="number" pos:start="45:25" pos:end="45:29">0x100</literal><operator pos:start="45:30" pos:end="45:30">)</operator> <operator pos:start="45:32" pos:end="45:32">%</operator> <literal type="number" pos:start="45:34" pos:end="45:37">0x20</literal></expr>)</condition> <block pos:start="45:40" pos:end="189:9">{<block_content pos:start="47:9" pos:end="187:18">

        <case pos:start="47:9" pos:end="47:25">case <expr pos:start="47:14" pos:end="47:24"><name pos:start="47:14" pos:end="47:24">HPET_TN_CFG</name></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:59"><expr pos:start="49:13" pos:end="49:58"><call pos:start="49:13" pos:end="49:58"><name pos:start="49:13" pos:end="49:19">DPRINTF</name><argument_list pos:start="49:20" pos:end="49:58">(<argument pos:start="49:21" pos:end="49:57"><expr pos:start="49:21" pos:end="49:57"><literal type="string" pos:start="49:21" pos:end="49:57">"qemu: hpet_ram_writel HPET_TN_CFG\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="55:13"><if pos:start="51:13" pos:end="55:13">if <condition pos:start="51:16" pos:end="51:69">(<expr pos:start="51:17" pos:end="51:68"><call pos:start="51:17" pos:end="51:68"><name pos:start="51:17" pos:end="51:30">activating_bit</name><argument_list pos:start="51:31" pos:end="51:68">(<argument pos:start="51:32" pos:end="51:38"><expr pos:start="51:32" pos:end="51:38"><name pos:start="51:32" pos:end="51:38">old_val</name></expr></argument>, <argument pos:start="51:41" pos:end="51:47"><expr pos:start="51:41" pos:end="51:47"><name pos:start="51:41" pos:end="51:47">new_val</name></expr></argument>, <argument pos:start="51:50" pos:end="51:67"><expr pos:start="51:50" pos:end="51:67"><name pos:start="51:50" pos:end="51:67">HPET_TN_FSB_ENABLE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:71" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:37">

                <expr_stmt pos:start="53:17" pos:end="53:37"><expr pos:start="53:17" pos:end="53:36"><call pos:start="53:17" pos:end="53:36"><name pos:start="53:17" pos:end="53:26">update_irq</name><argument_list pos:start="53:27" pos:end="53:36">(<argument pos:start="53:28" pos:end="53:32"><expr pos:start="53:28" pos:end="53:32"><name pos:start="53:28" pos:end="53:32">timer</name></expr></argument>, <argument pos:start="53:35" pos:end="53:35"><expr pos:start="53:35" pos:end="53:35"><literal type="number" pos:start="53:35" pos:end="53:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:75"><expr pos:start="57:13" pos:end="57:74"><name pos:start="57:13" pos:end="57:15">val</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <call pos:start="57:19" pos:end="57:74"><name pos:start="57:19" pos:end="57:32">hpet_fixup_reg</name><argument_list pos:start="57:33" pos:end="57:74">(<argument pos:start="57:34" pos:end="57:40"><expr pos:start="57:34" pos:end="57:40"><name pos:start="57:34" pos:end="57:40">new_val</name></expr></argument>, <argument pos:start="57:43" pos:end="57:49"><expr pos:start="57:43" pos:end="57:49"><name pos:start="57:43" pos:end="57:49">old_val</name></expr></argument>, <argument pos:start="57:52" pos:end="57:73"><expr pos:start="57:52" pos:end="57:73"><name pos:start="57:52" pos:end="57:73">HPET_TN_CFG_WRITE_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:74"><expr pos:start="59:13" pos:end="59:73"><name pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:17">timer</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:25">config</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <operator pos:start="59:29" pos:end="59:29">(</operator><name pos:start="59:30" pos:end="59:42"><name pos:start="59:30" pos:end="59:34">timer</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:42">config</name></name> <operator pos:start="59:44" pos:end="59:44">&amp;</operator> <literal type="number" pos:start="59:46" pos:end="59:66">0xffffffff00000000ULL</literal><operator pos:start="59:67" pos:end="59:67">)</operator> <operator pos:start="59:69" pos:end="59:69">|</operator> <name pos:start="59:71" pos:end="59:73">val</name></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="67:13"><if pos:start="61:13" pos:end="67:13">if <condition pos:start="61:16" pos:end="61:40">(<expr pos:start="61:17" pos:end="61:39"><name pos:start="61:17" pos:end="61:23">new_val</name> <operator pos:start="61:25" pos:end="61:25">&amp;</operator> <name pos:start="61:27" pos:end="61:39">HPET_TN_32BIT</name></expr>)</condition> <block pos:start="61:42" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:56">

                <expr_stmt pos:start="63:17" pos:end="63:50"><expr pos:start="63:17" pos:end="63:49"><name pos:start="63:17" pos:end="63:26"><name pos:start="63:17" pos:end="63:21">timer</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:26">cmp</name></name> <operator pos:start="63:28" pos:end="63:28">=</operator> <operator pos:start="63:30" pos:end="63:30">(</operator><name pos:start="63:31" pos:end="63:38">uint32_t</name><operator pos:start="63:39" pos:end="63:39">)</operator><name pos:start="63:40" pos:end="63:49"><name pos:start="63:40" pos:end="63:44">timer</name><operator pos:start="63:45" pos:end="63:46">-&gt;</operator><name pos:start="63:47" pos:end="63:49">cmp</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:56"><expr pos:start="65:17" pos:end="65:55"><name pos:start="65:17" pos:end="65:29"><name pos:start="65:17" pos:end="65:21">timer</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:29">period</name></name> <operator pos:start="65:31" pos:end="65:31">=</operator> <operator pos:start="65:33" pos:end="65:33">(</operator><name pos:start="65:34" pos:end="65:41">uint32_t</name><operator pos:start="65:42" pos:end="65:42">)</operator><name pos:start="65:43" pos:end="65:55"><name pos:start="65:43" pos:end="65:47">timer</name><operator pos:start="65:48" pos:end="65:49">-&gt;</operator><name pos:start="65:50" pos:end="65:55">period</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="69:13" pos:end="77:13"><if pos:start="69:13" pos:end="73:13">if <condition pos:start="69:16" pos:end="69:65">(<expr pos:start="69:17" pos:end="69:64"><call pos:start="69:17" pos:end="69:64"><name pos:start="69:17" pos:end="69:30">activating_bit</name><argument_list pos:start="69:31" pos:end="69:64">(<argument pos:start="69:32" pos:end="69:38"><expr pos:start="69:32" pos:end="69:38"><name pos:start="69:32" pos:end="69:38">old_val</name></expr></argument>, <argument pos:start="69:41" pos:end="69:47"><expr pos:start="69:41" pos:end="69:47"><name pos:start="69:41" pos:end="69:47">new_val</name></expr></argument>, <argument pos:start="69:50" pos:end="69:63"><expr pos:start="69:50" pos:end="69:63"><name pos:start="69:50" pos:end="69:63">HPET_TN_ENABLE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:67" pos:end="73:13">{<block_content pos:start="71:17" pos:end="71:38">

                <expr_stmt pos:start="71:17" pos:end="71:38"><expr pos:start="71:17" pos:end="71:37"><call pos:start="71:17" pos:end="71:37"><name pos:start="71:17" pos:end="71:30">hpet_set_timer</name><argument_list pos:start="71:31" pos:end="71:37">(<argument pos:start="71:32" pos:end="71:36"><expr pos:start="71:32" pos:end="71:36"><name pos:start="71:32" pos:end="71:36">timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="73:15" pos:end="77:13">else if <condition pos:start="73:23" pos:end="73:74">(<expr pos:start="73:24" pos:end="73:73"><call pos:start="73:24" pos:end="73:73"><name pos:start="73:24" pos:end="73:39">deactivating_bit</name><argument_list pos:start="73:40" pos:end="73:73">(<argument pos:start="73:41" pos:end="73:47"><expr pos:start="73:41" pos:end="73:47"><name pos:start="73:41" pos:end="73:47">old_val</name></expr></argument>, <argument pos:start="73:50" pos:end="73:56"><expr pos:start="73:50" pos:end="73:56"><name pos:start="73:50" pos:end="73:56">new_val</name></expr></argument>, <argument pos:start="73:59" pos:end="73:72"><expr pos:start="73:59" pos:end="73:72"><name pos:start="73:59" pos:end="73:72">HPET_TN_ENABLE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:76" pos:end="77:13">{<block_content pos:start="75:17" pos:end="75:38">

                <expr_stmt pos:start="75:17" pos:end="75:38"><expr pos:start="75:17" pos:end="75:37"><call pos:start="75:17" pos:end="75:37"><name pos:start="75:17" pos:end="75:30">hpet_del_timer</name><argument_list pos:start="75:31" pos:end="75:37">(<argument pos:start="75:32" pos:end="75:36"><expr pos:start="75:32" pos:end="75:36"><name pos:start="75:32" pos:end="75:36">timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        <case pos:start="81:9" pos:end="81:29">case <expr pos:start="81:14" pos:end="81:28"><name pos:start="81:14" pos:end="81:24">HPET_TN_CFG</name> <operator pos:start="81:26" pos:end="81:26">+</operator> <literal type="number" pos:start="81:28" pos:end="81:28">4</literal></expr>:</case> <comment type="line" pos:start="81:31" pos:end="81:55">// Interrupt capabilities</comment>

            <expr_stmt pos:start="83:13" pos:end="83:59"><expr pos:start="83:13" pos:end="83:58"><call pos:start="83:13" pos:end="83:58"><name pos:start="83:13" pos:end="83:19">DPRINTF</name><argument_list pos:start="83:20" pos:end="83:58">(<argument pos:start="83:21" pos:end="83:57"><expr pos:start="83:21" pos:end="83:57"><literal type="string" pos:start="83:21" pos:end="83:57">"qemu: invalid HPET_TN_CFG+4 write\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="87:25">case <expr pos:start="87:14" pos:end="87:24"><name pos:start="87:14" pos:end="87:24">HPET_TN_CMP</name></expr>:</case> <comment type="line" pos:start="87:27" pos:end="87:48">// comparator register</comment>

            <expr_stmt pos:start="89:13" pos:end="89:59"><expr pos:start="89:13" pos:end="89:58"><call pos:start="89:13" pos:end="89:58"><name pos:start="89:13" pos:end="89:19">DPRINTF</name><argument_list pos:start="89:20" pos:end="89:58">(<argument pos:start="89:21" pos:end="89:57"><expr pos:start="89:21" pos:end="89:57"><literal type="string" pos:start="89:21" pos:end="89:57">"qemu: hpet_ram_writel HPET_TN_CMP\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="95:13"><if pos:start="91:13" pos:end="95:13">if <condition pos:start="91:16" pos:end="91:46">(<expr pos:start="91:17" pos:end="91:45"><name pos:start="91:17" pos:end="91:29"><name pos:start="91:17" pos:end="91:21">timer</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:29">config</name></name> <operator pos:start="91:31" pos:end="91:31">&amp;</operator> <name pos:start="91:33" pos:end="91:45">HPET_TN_32BIT</name></expr>)</condition> <block pos:start="91:48" pos:end="95:13">{<block_content pos:start="93:17" pos:end="93:44">

                <expr_stmt pos:start="93:17" pos:end="93:44"><expr pos:start="93:17" pos:end="93:43"><name pos:start="93:17" pos:end="93:23">new_val</name> <operator pos:start="93:25" pos:end="93:25">=</operator> <operator pos:start="93:27" pos:end="93:27">(</operator><name pos:start="93:28" pos:end="93:35">uint32_t</name><operator pos:start="93:36" pos:end="93:36">)</operator><name pos:start="93:37" pos:end="93:43">new_val</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="97:13" pos:end="103:13"><if pos:start="97:13" pos:end="103:13">if <condition pos:start="97:16" pos:end="99:52">(<expr pos:start="97:17" pos:end="99:51"><operator pos:start="97:17" pos:end="97:17">!</operator><call pos:start="97:18" pos:end="97:41"><name pos:start="97:18" pos:end="97:34">timer_is_periodic</name><argument_list pos:start="97:35" pos:end="97:41">(<argument pos:start="97:36" pos:end="97:40"><expr pos:start="97:36" pos:end="97:40"><name pos:start="97:36" pos:end="97:40">timer</name></expr></argument>)</argument_list></call>

                <operator pos:start="99:17" pos:end="99:18">||</operator> <operator pos:start="99:20" pos:end="99:20">(</operator><name pos:start="99:21" pos:end="99:33"><name pos:start="99:21" pos:end="99:25">timer</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:33">config</name></name> <operator pos:start="99:35" pos:end="99:35">&amp;</operator> <name pos:start="99:37" pos:end="99:50">HPET_TN_SETVAL</name><operator pos:start="99:51" pos:end="99:51">)</operator></expr>)</condition> <block pos:start="99:54" pos:end="103:13">{<block_content pos:start="101:17" pos:end="101:76">

                <expr_stmt pos:start="101:17" pos:end="101:76"><expr pos:start="101:17" pos:end="101:75"><name pos:start="101:17" pos:end="101:26"><name pos:start="101:17" pos:end="101:21">timer</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:26">cmp</name></name> <operator pos:start="101:28" pos:end="101:28">=</operator> <operator pos:start="101:30" pos:end="101:30">(</operator><name pos:start="101:31" pos:end="101:40"><name pos:start="101:31" pos:end="101:35">timer</name><operator pos:start="101:36" pos:end="101:37">-&gt;</operator><name pos:start="101:38" pos:end="101:40">cmp</name></name> <operator pos:start="101:42" pos:end="101:42">&amp;</operator> <literal type="number" pos:start="101:44" pos:end="101:64">0xffffffff00000000ULL</literal><operator pos:start="101:65" pos:end="101:65">)</operator> <operator pos:start="101:67" pos:end="101:67">|</operator> <name pos:start="101:69" pos:end="101:75">new_val</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="105:13" pos:end="121:13"><if pos:start="105:13" pos:end="121:13">if <condition pos:start="105:16" pos:end="105:41">(<expr pos:start="105:17" pos:end="105:40"><call pos:start="105:17" pos:end="105:40"><name pos:start="105:17" pos:end="105:33">timer_is_periodic</name><argument_list pos:start="105:34" pos:end="105:40">(<argument pos:start="105:35" pos:end="105:39"><expr pos:start="105:35" pos:end="105:39"><name pos:start="105:35" pos:end="105:39">timer</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="105:43" pos:end="121:13">{<block_content pos:start="115:17" pos:end="119:70">

                <comment type="block" pos:start="107:17" pos:end="113:19">/*

                 * FIXME: Clamp period to reasonable min value?

                 * Clamp period to reasonable max value

                 */</comment>

                <expr_stmt pos:start="115:17" pos:end="115:78"><expr pos:start="115:17" pos:end="115:77"><name pos:start="115:17" pos:end="115:23">new_val</name> <operator pos:start="115:25" pos:end="115:26">&amp;=</operator> <operator pos:start="115:28" pos:end="115:28">(</operator><ternary pos:start="115:29" pos:end="115:71"><condition pos:start="115:29" pos:end="115:59"><expr pos:start="115:29" pos:end="115:57"><name pos:start="115:29" pos:end="115:41"><name pos:start="115:29" pos:end="115:33">timer</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:41">config</name></name> <operator pos:start="115:43" pos:end="115:43">&amp;</operator> <name pos:start="115:45" pos:end="115:57">HPET_TN_32BIT</name></expr> ?</condition><then pos:start="115:61" pos:end="115:63"> <expr pos:start="115:61" pos:end="115:63"><operator pos:start="115:61" pos:end="115:61">~</operator><literal type="number" pos:start="115:62" pos:end="115:63">0u</literal></expr> </then><else pos:start="115:65" pos:end="115:71">: <expr pos:start="115:67" pos:end="115:71"><operator pos:start="115:67" pos:end="115:67">~</operator><literal type="number" pos:start="115:68" pos:end="115:71">0ull</literal></expr></else></ternary><operator pos:start="115:72" pos:end="115:72">)</operator> <operator pos:start="115:74" pos:end="115:75">&gt;&gt;</operator> <literal type="number" pos:start="115:77" pos:end="115:77">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="119:70"><expr pos:start="117:17" pos:end="119:69"><name pos:start="117:17" pos:end="117:29"><name pos:start="117:17" pos:end="117:21">timer</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:29">period</name></name> <operator pos:start="117:31" pos:end="117:31">=</operator>

                    <operator pos:start="119:21" pos:end="119:21">(</operator><name pos:start="119:22" pos:end="119:34"><name pos:start="119:22" pos:end="119:26">timer</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:34">period</name></name> <operator pos:start="119:36" pos:end="119:36">&amp;</operator> <literal type="number" pos:start="119:38" pos:end="119:58">0xffffffff00000000ULL</literal><operator pos:start="119:59" pos:end="119:59">)</operator> <operator pos:start="119:61" pos:end="119:61">|</operator> <name pos:start="119:63" pos:end="119:69">new_val</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:45"><expr pos:start="123:13" pos:end="123:44"><name pos:start="123:13" pos:end="123:25"><name pos:start="123:13" pos:end="123:17">timer</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:25">config</name></name> <operator pos:start="123:27" pos:end="123:28">&amp;=</operator> <operator pos:start="123:30" pos:end="123:30">~</operator><name pos:start="123:31" pos:end="123:44">HPET_TN_SETVAL</name></expr>;</expr_stmt>

            <if_stmt pos:start="125:13" pos:end="129:13"><if pos:start="125:13" pos:end="129:13">if <condition pos:start="125:16" pos:end="125:32">(<expr pos:start="125:17" pos:end="125:31"><call pos:start="125:17" pos:end="125:31"><name pos:start="125:17" pos:end="125:28">hpet_enabled</name><argument_list pos:start="125:29" pos:end="125:31">(<argument pos:start="125:30" pos:end="125:30"><expr pos:start="125:30" pos:end="125:30"><name pos:start="125:30" pos:end="125:30">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:34" pos:end="129:13">{<block_content pos:start="127:17" pos:end="127:38">

                <expr_stmt pos:start="127:17" pos:end="127:38"><expr pos:start="127:17" pos:end="127:37"><call pos:start="127:17" pos:end="127:37"><name pos:start="127:17" pos:end="127:30">hpet_set_timer</name><argument_list pos:start="127:31" pos:end="127:37">(<argument pos:start="127:32" pos:end="127:36"><expr pos:start="127:32" pos:end="127:36"><name pos:start="127:32" pos:end="127:36">timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="131:13" pos:end="131:18">break;</break>

        <case pos:start="133:9" pos:end="133:29">case <expr pos:start="133:14" pos:end="133:28"><name pos:start="133:14" pos:end="133:24">HPET_TN_CMP</name> <operator pos:start="133:26" pos:end="133:26">+</operator> <literal type="number" pos:start="133:28" pos:end="133:28">4</literal></expr>:</case> <comment type="line" pos:start="133:31" pos:end="133:63">// comparator register high order</comment>

            <expr_stmt pos:start="135:13" pos:end="135:63"><expr pos:start="135:13" pos:end="135:62"><call pos:start="135:13" pos:end="135:62"><name pos:start="135:13" pos:end="135:19">DPRINTF</name><argument_list pos:start="135:20" pos:end="135:62">(<argument pos:start="135:21" pos:end="135:61"><expr pos:start="135:21" pos:end="135:61"><literal type="string" pos:start="135:21" pos:end="135:61">"qemu: hpet_ram_writel HPET_TN_CMP + 4\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="137:13" pos:end="159:17"><if pos:start="137:13" pos:end="143:13">if <condition pos:start="137:16" pos:end="139:52">(<expr pos:start="137:17" pos:end="139:51"><operator pos:start="137:17" pos:end="137:17">!</operator><call pos:start="137:18" pos:end="137:41"><name pos:start="137:18" pos:end="137:34">timer_is_periodic</name><argument_list pos:start="137:35" pos:end="137:41">(<argument pos:start="137:36" pos:end="137:40"><expr pos:start="137:36" pos:end="137:40"><name pos:start="137:36" pos:end="137:40">timer</name></expr></argument>)</argument_list></call>

                <operator pos:start="139:17" pos:end="139:18">||</operator> <operator pos:start="139:20" pos:end="139:20">(</operator><name pos:start="139:21" pos:end="139:33"><name pos:start="139:21" pos:end="139:25">timer</name><operator pos:start="139:26" pos:end="139:27">-&gt;</operator><name pos:start="139:28" pos:end="139:33">config</name></name> <operator pos:start="139:35" pos:end="139:35">&amp;</operator> <name pos:start="139:37" pos:end="139:50">HPET_TN_SETVAL</name><operator pos:start="139:51" pos:end="139:51">)</operator></expr>)</condition> <block pos:start="139:54" pos:end="143:13">{<block_content pos:start="141:17" pos:end="141:74">

                <expr_stmt pos:start="141:17" pos:end="141:74"><expr pos:start="141:17" pos:end="141:73"><name pos:start="141:17" pos:end="141:26"><name pos:start="141:17" pos:end="141:21">timer</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:26">cmp</name></name> <operator pos:start="141:28" pos:end="141:28">=</operator> <operator pos:start="141:30" pos:end="141:30">(</operator><name pos:start="141:31" pos:end="141:40"><name pos:start="141:31" pos:end="141:35">timer</name><operator pos:start="141:36" pos:end="141:37">-&gt;</operator><name pos:start="141:38" pos:end="141:40">cmp</name></name> <operator pos:start="141:42" pos:end="141:42">&amp;</operator> <literal type="number" pos:start="141:44" pos:end="141:56">0xffffffffULL</literal><operator pos:start="141:57" pos:end="141:57">)</operator> <operator pos:start="141:59" pos:end="141:59">|</operator> <name pos:start="141:61" pos:end="141:67">new_val</name> <operator pos:start="141:69" pos:end="141:70">&lt;&lt;</operator> <literal type="number" pos:start="141:72" pos:end="141:73">32</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="143:15" pos:end="159:17">else <block pos:start="143:20" pos:end="159:17">{<block_content pos:start="153:17" pos:end="157:68">

                <comment type="block" pos:start="145:17" pos:end="151:19">/*

                 * FIXME: Clamp period to reasonable min value?

                 * Clamp period to reasonable max value

                 */</comment>

                <expr_stmt pos:start="153:17" pos:end="153:78"><expr pos:start="153:17" pos:end="153:77"><name pos:start="153:17" pos:end="153:23">new_val</name> <operator pos:start="153:25" pos:end="153:26">&amp;=</operator> <operator pos:start="153:28" pos:end="153:28">(</operator><ternary pos:start="153:29" pos:end="153:71"><condition pos:start="153:29" pos:end="153:59"><expr pos:start="153:29" pos:end="153:57"><name pos:start="153:29" pos:end="153:41"><name pos:start="153:29" pos:end="153:33">timer</name><operator pos:start="153:34" pos:end="153:35">-&gt;</operator><name pos:start="153:36" pos:end="153:41">config</name></name> <operator pos:start="153:43" pos:end="153:43">&amp;</operator> <name pos:start="153:45" pos:end="153:57">HPET_TN_32BIT</name></expr> ?</condition><then pos:start="153:61" pos:end="153:63"> <expr pos:start="153:61" pos:end="153:63"><operator pos:start="153:61" pos:end="153:61">~</operator><literal type="number" pos:start="153:62" pos:end="153:63">0u</literal></expr> </then><else pos:start="153:65" pos:end="153:71">: <expr pos:start="153:67" pos:end="153:71"><operator pos:start="153:67" pos:end="153:67">~</operator><literal type="number" pos:start="153:68" pos:end="153:71">0ull</literal></expr></else></ternary><operator pos:start="153:72" pos:end="153:72">)</operator> <operator pos:start="153:74" pos:end="153:75">&gt;&gt;</operator> <literal type="number" pos:start="153:77" pos:end="153:77">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="157:68"><expr pos:start="155:17" pos:end="157:67"><name pos:start="155:17" pos:end="155:29"><name pos:start="155:17" pos:end="155:21">timer</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:29">period</name></name> <operator pos:start="155:31" pos:end="155:31">=</operator>

                    <operator pos:start="157:21" pos:end="157:21">(</operator><name pos:start="157:22" pos:end="157:34"><name pos:start="157:22" pos:end="157:26">timer</name><operator pos:start="157:27" pos:end="157:28">-&gt;</operator><name pos:start="157:29" pos:end="157:34">period</name></name> <operator pos:start="157:36" pos:end="157:36">&amp;</operator> <literal type="number" pos:start="157:38" pos:end="157:50">0xffffffffULL</literal><operator pos:start="157:51" pos:end="157:51">)</operator> <operator pos:start="157:53" pos:end="157:53">|</operator> <name pos:start="157:55" pos:end="157:61">new_val</name> <operator pos:start="157:63" pos:end="157:64">&lt;&lt;</operator> <literal type="number" pos:start="157:66" pos:end="157:67">32</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:49"><expr pos:start="161:17" pos:end="161:48"><name pos:start="161:17" pos:end="161:29"><name pos:start="161:17" pos:end="161:21">timer</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:29">config</name></name> <operator pos:start="161:31" pos:end="161:32">&amp;=</operator> <operator pos:start="161:34" pos:end="161:34">~</operator><name pos:start="161:35" pos:end="161:48">HPET_TN_SETVAL</name></expr>;</expr_stmt>

                <if_stmt pos:start="163:17" pos:end="167:17"><if pos:start="163:17" pos:end="167:17">if <condition pos:start="163:20" pos:end="163:36">(<expr pos:start="163:21" pos:end="163:35"><call pos:start="163:21" pos:end="163:35"><name pos:start="163:21" pos:end="163:32">hpet_enabled</name><argument_list pos:start="163:33" pos:end="163:35">(<argument pos:start="163:34" pos:end="163:34"><expr pos:start="163:34" pos:end="163:34"><name pos:start="163:34" pos:end="163:34">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="163:38" pos:end="167:17">{<block_content pos:start="165:21" pos:end="165:42">

                    <expr_stmt pos:start="165:21" pos:end="165:42"><expr pos:start="165:21" pos:end="165:41"><call pos:start="165:21" pos:end="165:41"><name pos:start="165:21" pos:end="165:34">hpet_set_timer</name><argument_list pos:start="165:35" pos:end="165:41">(<argument pos:start="165:36" pos:end="165:40"><expr pos:start="165:36" pos:end="165:40"><name pos:start="165:36" pos:end="165:40">timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="169:17" pos:end="169:22">break;</break>

        <case pos:start="171:9" pos:end="171:27">case <expr pos:start="171:14" pos:end="171:26"><name pos:start="171:14" pos:end="171:26">HPET_TN_ROUTE</name></expr>:</case>

            <expr_stmt pos:start="173:13" pos:end="173:72"><expr pos:start="173:13" pos:end="173:71"><name pos:start="173:13" pos:end="173:22"><name pos:start="173:13" pos:end="173:17">timer</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:22">fsb</name></name> <operator pos:start="173:24" pos:end="173:24">=</operator> <operator pos:start="173:26" pos:end="173:26">(</operator><name pos:start="173:27" pos:end="173:36"><name pos:start="173:27" pos:end="173:31">timer</name><operator pos:start="173:32" pos:end="173:33">-&gt;</operator><name pos:start="173:34" pos:end="173:36">fsb</name></name> <operator pos:start="173:38" pos:end="173:38">&amp;</operator> <literal type="number" pos:start="173:40" pos:end="173:60">0xffffffff00000000ULL</literal><operator pos:start="173:61" pos:end="173:61">)</operator> <operator pos:start="173:63" pos:end="173:63">|</operator> <name pos:start="173:65" pos:end="173:71">new_val</name></expr>;</expr_stmt>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        <case pos:start="177:9" pos:end="177:31">case <expr pos:start="177:14" pos:end="177:30"><name pos:start="177:14" pos:end="177:26">HPET_TN_ROUTE</name> <operator pos:start="177:28" pos:end="177:28">+</operator> <literal type="number" pos:start="177:30" pos:end="177:30">4</literal></expr>:</case>

            <expr_stmt pos:start="179:13" pos:end="179:69"><expr pos:start="179:13" pos:end="179:68"><name pos:start="179:13" pos:end="179:22"><name pos:start="179:13" pos:end="179:17">timer</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:22">fsb</name></name> <operator pos:start="179:24" pos:end="179:24">=</operator> <operator pos:start="179:26" pos:end="179:26">(</operator><name pos:start="179:27" pos:end="179:33">new_val</name> <operator pos:start="179:35" pos:end="179:36">&lt;&lt;</operator> <literal type="number" pos:start="179:38" pos:end="179:39">32</literal><operator pos:start="179:40" pos:end="179:40">)</operator> <operator pos:start="179:42" pos:end="179:42">|</operator> <operator pos:start="179:44" pos:end="179:44">(</operator><name pos:start="179:45" pos:end="179:54"><name pos:start="179:45" pos:end="179:49">timer</name><operator pos:start="179:50" pos:end="179:51">-&gt;</operator><name pos:start="179:52" pos:end="179:54">fsb</name></name> <operator pos:start="179:56" pos:end="179:56">&amp;</operator> <literal type="number" pos:start="179:58" pos:end="179:67">0xffffffff</literal><operator pos:start="179:68" pos:end="179:68">)</operator></expr>;</expr_stmt>

            <break pos:start="181:13" pos:end="181:18">break;</break>

        <default pos:start="183:9" pos:end="183:16">default:</default>

            <expr_stmt pos:start="185:13" pos:end="185:55"><expr pos:start="185:13" pos:end="185:54"><call pos:start="185:13" pos:end="185:54"><name pos:start="185:13" pos:end="185:19">DPRINTF</name><argument_list pos:start="185:20" pos:end="185:54">(<argument pos:start="185:21" pos:end="185:53"><expr pos:start="185:21" pos:end="185:53"><literal type="string" pos:start="185:21" pos:end="185:53">"qemu: invalid hpet_ram_writel\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="187:13" pos:end="187:18">break;</break>

        </block_content>}</block></switch>

        <return pos:start="191:9" pos:end="191:15">return;</return>

    </block_content>}</block></if> <else pos:start="193:7" pos:end="329:5">else <block pos:start="193:12" pos:end="329:5">{<block_content pos:start="195:9" pos:end="327:9">

        <switch pos:start="195:9" pos:end="327:9">switch <condition pos:start="195:16" pos:end="195:22">(<expr pos:start="195:17" pos:end="195:21"><name pos:start="195:17" pos:end="195:21">index</name></expr>)</condition> <block pos:start="195:24" pos:end="327:9">{<block_content pos:start="197:9" pos:end="325:18">

        <case pos:start="197:9" pos:end="197:21">case <expr pos:start="197:14" pos:end="197:20"><name pos:start="197:14" pos:end="197:20">HPET_ID</name></expr>:</case>

            <return pos:start="199:13" pos:end="199:19">return;</return>

        <case pos:start="201:9" pos:end="201:22">case <expr pos:start="201:14" pos:end="201:21"><name pos:start="201:14" pos:end="201:21">HPET_CFG</name></expr>:</case>

            <expr_stmt pos:start="203:13" pos:end="203:72"><expr pos:start="203:13" pos:end="203:71"><name pos:start="203:13" pos:end="203:15">val</name> <operator pos:start="203:17" pos:end="203:17">=</operator> <call pos:start="203:19" pos:end="203:71"><name pos:start="203:19" pos:end="203:32">hpet_fixup_reg</name><argument_list pos:start="203:33" pos:end="203:71">(<argument pos:start="203:34" pos:end="203:40"><expr pos:start="203:34" pos:end="203:40"><name pos:start="203:34" pos:end="203:40">new_val</name></expr></argument>, <argument pos:start="203:43" pos:end="203:49"><expr pos:start="203:43" pos:end="203:49"><name pos:start="203:43" pos:end="203:49">old_val</name></expr></argument>, <argument pos:start="203:52" pos:end="203:70"><expr pos:start="203:52" pos:end="203:70"><name pos:start="203:52" pos:end="203:70">HPET_CFG_WRITE_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:66"><expr pos:start="205:13" pos:end="205:65"><name pos:start="205:13" pos:end="205:21"><name pos:start="205:13" pos:end="205:13">s</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:21">config</name></name> <operator pos:start="205:23" pos:end="205:23">=</operator> <operator pos:start="205:25" pos:end="205:25">(</operator><name pos:start="205:26" pos:end="205:34"><name pos:start="205:26" pos:end="205:26">s</name><operator pos:start="205:27" pos:end="205:28">-&gt;</operator><name pos:start="205:29" pos:end="205:34">config</name></name> <operator pos:start="205:36" pos:end="205:36">&amp;</operator> <literal type="number" pos:start="205:38" pos:end="205:58">0xffffffff00000000ULL</literal><operator pos:start="205:59" pos:end="205:59">)</operator> <operator pos:start="205:61" pos:end="205:61">|</operator> <name pos:start="205:63" pos:end="205:65">val</name></expr>;</expr_stmt>

            <if_stmt pos:start="207:13" pos:end="237:13"><if pos:start="207:13" pos:end="225:13">if <condition pos:start="207:16" pos:end="207:66">(<expr pos:start="207:17" pos:end="207:65"><call pos:start="207:17" pos:end="207:65"><name pos:start="207:17" pos:end="207:30">activating_bit</name><argument_list pos:start="207:31" pos:end="207:65">(<argument pos:start="207:32" pos:end="207:38"><expr pos:start="207:32" pos:end="207:38"><name pos:start="207:32" pos:end="207:38">old_val</name></expr></argument>, <argument pos:start="207:41" pos:end="207:47"><expr pos:start="207:41" pos:end="207:47"><name pos:start="207:41" pos:end="207:47">new_val</name></expr></argument>, <argument pos:start="207:50" pos:end="207:64"><expr pos:start="207:50" pos:end="207:64"><name pos:start="207:50" pos:end="207:64">HPET_CFG_ENABLE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="207:68" pos:end="225:13">{<block_content pos:start="211:17" pos:end="223:17">

                <comment type="block" pos:start="209:17" pos:end="209:67">/* Enable main counter and interrupt generation. */</comment>

                <expr_stmt pos:start="211:17" pos:end="213:79"><expr pos:start="211:17" pos:end="213:78"><name pos:start="211:17" pos:end="211:30"><name pos:start="211:17" pos:end="211:17">s</name><operator pos:start="211:18" pos:end="211:19">-&gt;</operator><name pos:start="211:20" pos:end="211:30">hpet_offset</name></name> <operator pos:start="211:32" pos:end="211:32">=</operator>

                    <call pos:start="213:21" pos:end="213:48"><name pos:start="213:21" pos:end="213:31">ticks_to_ns</name><argument_list pos:start="213:32" pos:end="213:48">(<argument pos:start="213:33" pos:end="213:47"><expr pos:start="213:33" pos:end="213:47"><name pos:start="213:33" pos:end="213:47"><name pos:start="213:33" pos:end="213:33">s</name><operator pos:start="213:34" pos:end="213:35">-&gt;</operator><name pos:start="213:36" pos:end="213:47">hpet_counter</name></name></expr></argument>)</argument_list></call> <operator pos:start="213:50" pos:end="213:50">-</operator> <call pos:start="213:52" pos:end="213:78"><name pos:start="213:52" pos:end="213:68">qemu_get_clock_ns</name><argument_list pos:start="213:69" pos:end="213:78">(<argument pos:start="213:70" pos:end="213:77"><expr pos:start="213:70" pos:end="213:77"><name pos:start="213:70" pos:end="213:77">vm_clock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="215:17" pos:end="223:17">for <control pos:start="215:21" pos:end="215:51">(<init pos:start="215:22" pos:end="215:27"><expr pos:start="215:22" pos:end="215:26"><name pos:start="215:22" pos:end="215:22">i</name> <operator pos:start="215:24" pos:end="215:24">=</operator> <literal type="number" pos:start="215:26" pos:end="215:26">0</literal></expr>;</init> <condition pos:start="215:29" pos:end="215:46"><expr pos:start="215:29" pos:end="215:45"><name pos:start="215:29" pos:end="215:29">i</name> <operator pos:start="215:31" pos:end="215:31">&lt;</operator> <name pos:start="215:33" pos:end="215:45"><name pos:start="215:33" pos:end="215:33">s</name><operator pos:start="215:34" pos:end="215:35">-&gt;</operator><name pos:start="215:36" pos:end="215:45">num_timers</name></name></expr>;</condition> <incr pos:start="215:48" pos:end="215:50"><expr pos:start="215:48" pos:end="215:50"><name pos:start="215:48" pos:end="215:48">i</name><operator pos:start="215:49" pos:end="215:50">++</operator></expr></incr>)</control> <block pos:start="215:53" pos:end="223:17">{<block_content pos:start="217:21" pos:end="221:21">

                    <if_stmt pos:start="217:21" pos:end="221:21"><if pos:start="217:21" pos:end="221:21">if <condition pos:start="217:24" pos:end="217:53">(<expr pos:start="217:25" pos:end="217:52"><name pos:start="217:25" pos:end="217:43"><operator pos:start="217:25" pos:end="217:25">(</operator><operator pos:start="217:26" pos:end="217:26">&amp;</operator><name pos:start="217:27" pos:end="217:34"><name pos:start="217:27" pos:end="217:27">s</name><operator pos:start="217:28" pos:end="217:29">-&gt;</operator><name pos:start="217:30" pos:end="217:34">timer</name></name><index pos:start="217:35" pos:end="217:37">[<expr pos:start="217:36" pos:end="217:36"><name pos:start="217:36" pos:end="217:36">i</name></expr>]</index><operator pos:start="217:38" pos:end="217:38">)</operator><operator pos:start="217:39" pos:end="217:40">-&gt;</operator><name pos:start="217:41" pos:end="217:43">cmp</name></name> <operator pos:start="217:45" pos:end="217:46">!=</operator> <operator pos:start="217:48" pos:end="217:48">~</operator><literal type="number" pos:start="217:49" pos:end="217:52">0ULL</literal></expr>)</condition> <block pos:start="217:55" pos:end="221:21">{<block_content pos:start="219:25" pos:end="219:53">

                        <expr_stmt pos:start="219:25" pos:end="219:53"><expr pos:start="219:25" pos:end="219:52"><call pos:start="219:25" pos:end="219:52"><name pos:start="219:25" pos:end="219:38">hpet_set_timer</name><argument_list pos:start="219:39" pos:end="219:52">(<argument pos:start="219:40" pos:end="219:51"><expr pos:start="219:40" pos:end="219:51"><operator pos:start="219:40" pos:end="219:40">&amp;</operator><name pos:start="219:41" pos:end="219:51"><name pos:start="219:41" pos:end="219:41">s</name><operator pos:start="219:42" pos:end="219:43">-&gt;</operator><name pos:start="219:44" pos:end="219:48">timer</name><index pos:start="219:49" pos:end="219:51">[<expr pos:start="219:50" pos:end="219:50"><name pos:start="219:50" pos:end="219:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <if type="elseif" pos:start="225:15" pos:end="237:13">else if <condition pos:start="225:23" pos:end="225:75">(<expr pos:start="225:24" pos:end="225:74"><call pos:start="225:24" pos:end="225:74"><name pos:start="225:24" pos:end="225:39">deactivating_bit</name><argument_list pos:start="225:40" pos:end="225:74">(<argument pos:start="225:41" pos:end="225:47"><expr pos:start="225:41" pos:end="225:47"><name pos:start="225:41" pos:end="225:47">old_val</name></expr></argument>, <argument pos:start="225:50" pos:end="225:56"><expr pos:start="225:50" pos:end="225:56"><name pos:start="225:50" pos:end="225:56">new_val</name></expr></argument>, <argument pos:start="225:59" pos:end="225:73"><expr pos:start="225:59" pos:end="225:73"><name pos:start="225:59" pos:end="225:73">HPET_CFG_ENABLE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="225:77" pos:end="237:13">{<block_content pos:start="229:17" pos:end="235:17">

                <comment type="block" pos:start="227:17" pos:end="227:73">/* Halt main counter and disable interrupt generation. */</comment>

                <expr_stmt pos:start="229:17" pos:end="229:52"><expr pos:start="229:17" pos:end="229:51"><name pos:start="229:17" pos:end="229:31"><name pos:start="229:17" pos:end="229:17">s</name><operator pos:start="229:18" pos:end="229:19">-&gt;</operator><name pos:start="229:20" pos:end="229:31">hpet_counter</name></name> <operator pos:start="229:33" pos:end="229:33">=</operator> <call pos:start="229:35" pos:end="229:51"><name pos:start="229:35" pos:end="229:48">hpet_get_ticks</name><argument_list pos:start="229:49" pos:end="229:51">(<argument pos:start="229:50" pos:end="229:50"><expr pos:start="229:50" pos:end="229:50"><name pos:start="229:50" pos:end="229:50">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="231:17" pos:end="235:17">for <control pos:start="231:21" pos:end="231:51">(<init pos:start="231:22" pos:end="231:27"><expr pos:start="231:22" pos:end="231:26"><name pos:start="231:22" pos:end="231:22">i</name> <operator pos:start="231:24" pos:end="231:24">=</operator> <literal type="number" pos:start="231:26" pos:end="231:26">0</literal></expr>;</init> <condition pos:start="231:29" pos:end="231:46"><expr pos:start="231:29" pos:end="231:45"><name pos:start="231:29" pos:end="231:29">i</name> <operator pos:start="231:31" pos:end="231:31">&lt;</operator> <name pos:start="231:33" pos:end="231:45"><name pos:start="231:33" pos:end="231:33">s</name><operator pos:start="231:34" pos:end="231:35">-&gt;</operator><name pos:start="231:36" pos:end="231:45">num_timers</name></name></expr>;</condition> <incr pos:start="231:48" pos:end="231:50"><expr pos:start="231:48" pos:end="231:50"><name pos:start="231:48" pos:end="231:48">i</name><operator pos:start="231:49" pos:end="231:50">++</operator></expr></incr>)</control> <block pos:start="231:53" pos:end="235:17">{<block_content pos:start="233:21" pos:end="233:49">

                    <expr_stmt pos:start="233:21" pos:end="233:49"><expr pos:start="233:21" pos:end="233:48"><call pos:start="233:21" pos:end="233:48"><name pos:start="233:21" pos:end="233:34">hpet_del_timer</name><argument_list pos:start="233:35" pos:end="233:48">(<argument pos:start="233:36" pos:end="233:47"><expr pos:start="233:36" pos:end="233:47"><operator pos:start="233:36" pos:end="233:36">&amp;</operator><name pos:start="233:37" pos:end="233:47"><name pos:start="233:37" pos:end="233:37">s</name><operator pos:start="233:38" pos:end="233:39">-&gt;</operator><name pos:start="233:40" pos:end="233:44">timer</name><index pos:start="233:45" pos:end="233:47">[<expr pos:start="233:46" pos:end="233:46"><name pos:start="233:46" pos:end="233:46">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="239:13" pos:end="241:45">/* i8254 and RTC output pins are disabled

             * when HPET is in legacy mode */</comment>

            <if_stmt pos:start="243:13" pos:end="259:13"><if pos:start="243:13" pos:end="251:13">if <condition pos:start="243:16" pos:end="243:66">(<expr pos:start="243:17" pos:end="243:65"><call pos:start="243:17" pos:end="243:65"><name pos:start="243:17" pos:end="243:30">activating_bit</name><argument_list pos:start="243:31" pos:end="243:65">(<argument pos:start="243:32" pos:end="243:38"><expr pos:start="243:32" pos:end="243:38"><name pos:start="243:32" pos:end="243:38">old_val</name></expr></argument>, <argument pos:start="243:41" pos:end="243:47"><expr pos:start="243:41" pos:end="243:47"><name pos:start="243:41" pos:end="243:47">new_val</name></expr></argument>, <argument pos:start="243:50" pos:end="243:64"><expr pos:start="243:50" pos:end="243:64"><name pos:start="243:50" pos:end="243:64">HPET_CFG_LEGACY</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="243:68" pos:end="251:13">{<block_content pos:start="245:17" pos:end="249:53">

                <expr_stmt pos:start="245:17" pos:end="245:48"><expr pos:start="245:17" pos:end="245:47"><call pos:start="245:17" pos:end="245:47"><name pos:start="245:17" pos:end="245:28">qemu_set_irq</name><argument_list pos:start="245:29" pos:end="245:47">(<argument pos:start="245:30" pos:end="245:43"><expr pos:start="245:30" pos:end="245:43"><name pos:start="245:30" pos:end="245:43"><name pos:start="245:30" pos:end="245:30">s</name><operator pos:start="245:31" pos:end="245:32">-&gt;</operator><name pos:start="245:33" pos:end="245:43">pit_enabled</name></name></expr></argument>, <argument pos:start="245:46" pos:end="245:46"><expr pos:start="245:46" pos:end="245:46"><literal type="number" pos:start="245:46" pos:end="245:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="247:17" pos:end="247:43"><expr pos:start="247:17" pos:end="247:42"><call pos:start="247:17" pos:end="247:42"><name pos:start="247:17" pos:end="247:30">qemu_irq_lower</name><argument_list pos:start="247:31" pos:end="247:42">(<argument pos:start="247:32" pos:end="247:41"><expr pos:start="247:32" pos:end="247:41"><name pos:start="247:32" pos:end="247:41"><name pos:start="247:32" pos:end="247:32">s</name><operator pos:start="247:33" pos:end="247:34">-&gt;</operator><name pos:start="247:35" pos:end="247:38">irqs</name><index pos:start="247:39" pos:end="247:41">[<expr pos:start="247:40" pos:end="247:40"><literal type="number" pos:start="247:40" pos:end="247:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:53"><expr pos:start="249:17" pos:end="249:52"><call pos:start="249:17" pos:end="249:52"><name pos:start="249:17" pos:end="249:30">qemu_irq_lower</name><argument_list pos:start="249:31" pos:end="249:52">(<argument pos:start="249:32" pos:end="249:51"><expr pos:start="249:32" pos:end="249:51"><name pos:start="249:32" pos:end="249:51"><name pos:start="249:32" pos:end="249:32">s</name><operator pos:start="249:33" pos:end="249:34">-&gt;</operator><name pos:start="249:35" pos:end="249:38">irqs</name><index pos:start="249:39" pos:end="249:51">[<expr pos:start="249:40" pos:end="249:50"><name pos:start="249:40" pos:end="249:50">RTC_ISA_IRQ</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="251:15" pos:end="259:13">else if <condition pos:start="251:23" pos:end="251:75">(<expr pos:start="251:24" pos:end="251:74"><call pos:start="251:24" pos:end="251:74"><name pos:start="251:24" pos:end="251:39">deactivating_bit</name><argument_list pos:start="251:40" pos:end="251:74">(<argument pos:start="251:41" pos:end="251:47"><expr pos:start="251:41" pos:end="251:47"><name pos:start="251:41" pos:end="251:47">old_val</name></expr></argument>, <argument pos:start="251:50" pos:end="251:56"><expr pos:start="251:50" pos:end="251:56"><name pos:start="251:50" pos:end="251:56">new_val</name></expr></argument>, <argument pos:start="251:59" pos:end="251:73"><expr pos:start="251:59" pos:end="251:73"><name pos:start="251:59" pos:end="251:73">HPET_CFG_LEGACY</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="251:77" pos:end="259:13">{<block_content pos:start="253:17" pos:end="257:69">

                <expr_stmt pos:start="253:17" pos:end="253:43"><expr pos:start="253:17" pos:end="253:42"><call pos:start="253:17" pos:end="253:42"><name pos:start="253:17" pos:end="253:30">qemu_irq_lower</name><argument_list pos:start="253:31" pos:end="253:42">(<argument pos:start="253:32" pos:end="253:41"><expr pos:start="253:32" pos:end="253:41"><name pos:start="253:32" pos:end="253:41"><name pos:start="253:32" pos:end="253:32">s</name><operator pos:start="253:33" pos:end="253:34">-&gt;</operator><name pos:start="253:35" pos:end="253:38">irqs</name><index pos:start="253:39" pos:end="253:41">[<expr pos:start="253:40" pos:end="253:40"><literal type="number" pos:start="253:40" pos:end="253:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:48"><expr pos:start="255:17" pos:end="255:47"><call pos:start="255:17" pos:end="255:47"><name pos:start="255:17" pos:end="255:28">qemu_set_irq</name><argument_list pos:start="255:29" pos:end="255:47">(<argument pos:start="255:30" pos:end="255:43"><expr pos:start="255:30" pos:end="255:43"><name pos:start="255:30" pos:end="255:43"><name pos:start="255:30" pos:end="255:30">s</name><operator pos:start="255:31" pos:end="255:32">-&gt;</operator><name pos:start="255:33" pos:end="255:43">pit_enabled</name></name></expr></argument>, <argument pos:start="255:46" pos:end="255:46"><expr pos:start="255:46" pos:end="255:46"><literal type="number" pos:start="255:46" pos:end="255:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="257:17" pos:end="257:69"><expr pos:start="257:17" pos:end="257:68"><call pos:start="257:17" pos:end="257:68"><name pos:start="257:17" pos:end="257:28">qemu_set_irq</name><argument_list pos:start="257:29" pos:end="257:68">(<argument pos:start="257:30" pos:end="257:49"><expr pos:start="257:30" pos:end="257:49"><name pos:start="257:30" pos:end="257:49"><name pos:start="257:30" pos:end="257:30">s</name><operator pos:start="257:31" pos:end="257:32">-&gt;</operator><name pos:start="257:33" pos:end="257:36">irqs</name><index pos:start="257:37" pos:end="257:49">[<expr pos:start="257:38" pos:end="257:48"><name pos:start="257:38" pos:end="257:48">RTC_ISA_IRQ</name></expr>]</index></name></expr></argument>, <argument pos:start="257:52" pos:end="257:67"><expr pos:start="257:52" pos:end="257:67"><name pos:start="257:52" pos:end="257:67"><name pos:start="257:52" pos:end="257:52">s</name><operator pos:start="257:53" pos:end="257:54">-&gt;</operator><name pos:start="257:55" pos:end="257:67">rtc_irq_level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="261:13" pos:end="261:18">break;</break>

        <case pos:start="263:9" pos:end="263:26">case <expr pos:start="263:14" pos:end="263:25"><name pos:start="263:14" pos:end="263:21">HPET_CFG</name> <operator pos:start="263:23" pos:end="263:23">+</operator> <literal type="number" pos:start="263:25" pos:end="263:25">4</literal></expr>:</case>

            <expr_stmt pos:start="265:13" pos:end="265:56"><expr pos:start="265:13" pos:end="265:55"><call pos:start="265:13" pos:end="265:55"><name pos:start="265:13" pos:end="265:19">DPRINTF</name><argument_list pos:start="265:20" pos:end="265:55">(<argument pos:start="265:21" pos:end="265:54"><expr pos:start="265:21" pos:end="265:54"><literal type="string" pos:start="265:21" pos:end="265:54">"qemu: invalid HPET_CFG+4 write\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="267:13" pos:end="267:18">break;</break>

        <case pos:start="269:9" pos:end="269:25">case <expr pos:start="269:14" pos:end="269:24"><name pos:start="269:14" pos:end="269:24">HPET_STATUS</name></expr>:</case>

            <expr_stmt pos:start="271:13" pos:end="271:35"><expr pos:start="271:13" pos:end="271:34"><name pos:start="271:13" pos:end="271:15">val</name> <operator pos:start="271:17" pos:end="271:17">=</operator> <name pos:start="271:19" pos:end="271:25">new_val</name> <operator pos:start="271:27" pos:end="271:27">&amp;</operator> <name pos:start="271:29" pos:end="271:34"><name pos:start="271:29" pos:end="271:29">s</name><operator pos:start="271:30" pos:end="271:31">-&gt;</operator><name pos:start="271:32" pos:end="271:34">isr</name></name></expr>;</expr_stmt>

            <for pos:start="273:13" pos:end="281:13">for <control pos:start="273:17" pos:end="273:47">(<init pos:start="273:18" pos:end="273:23"><expr pos:start="273:18" pos:end="273:22"><name pos:start="273:18" pos:end="273:18">i</name> <operator pos:start="273:20" pos:end="273:20">=</operator> <literal type="number" pos:start="273:22" pos:end="273:22">0</literal></expr>;</init> <condition pos:start="273:25" pos:end="273:42"><expr pos:start="273:25" pos:end="273:41"><name pos:start="273:25" pos:end="273:25">i</name> <operator pos:start="273:27" pos:end="273:27">&lt;</operator> <name pos:start="273:29" pos:end="273:41"><name pos:start="273:29" pos:end="273:29">s</name><operator pos:start="273:30" pos:end="273:31">-&gt;</operator><name pos:start="273:32" pos:end="273:41">num_timers</name></name></expr>;</condition> <incr pos:start="273:44" pos:end="273:46"><expr pos:start="273:44" pos:end="273:46"><name pos:start="273:44" pos:end="273:44">i</name><operator pos:start="273:45" pos:end="273:46">++</operator></expr></incr>)</control> <block pos:start="273:49" pos:end="281:13">{<block_content pos:start="275:17" pos:end="279:17">

                <if_stmt pos:start="275:17" pos:end="279:17"><if pos:start="275:17" pos:end="279:17">if <condition pos:start="275:20" pos:end="275:35">(<expr pos:start="275:21" pos:end="275:34"><name pos:start="275:21" pos:end="275:23">val</name> <operator pos:start="275:25" pos:end="275:25">&amp;</operator> <operator pos:start="275:27" pos:end="275:27">(</operator><literal type="number" pos:start="275:28" pos:end="275:28">1</literal> <operator pos:start="275:30" pos:end="275:31">&lt;&lt;</operator> <name pos:start="275:33" pos:end="275:33">i</name><operator pos:start="275:34" pos:end="275:34">)</operator></expr>)</condition> <block pos:start="275:37" pos:end="279:17">{<block_content pos:start="277:21" pos:end="277:48">

                    <expr_stmt pos:start="277:21" pos:end="277:48"><expr pos:start="277:21" pos:end="277:47"><call pos:start="277:21" pos:end="277:47"><name pos:start="277:21" pos:end="277:30">update_irq</name><argument_list pos:start="277:31" pos:end="277:47">(<argument pos:start="277:32" pos:end="277:43"><expr pos:start="277:32" pos:end="277:43"><operator pos:start="277:32" pos:end="277:32">&amp;</operator><name pos:start="277:33" pos:end="277:43"><name pos:start="277:33" pos:end="277:33">s</name><operator pos:start="277:34" pos:end="277:35">-&gt;</operator><name pos:start="277:36" pos:end="277:40">timer</name><index pos:start="277:41" pos:end="277:43">[<expr pos:start="277:42" pos:end="277:42"><name pos:start="277:42" pos:end="277:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="277:46" pos:end="277:46"><expr pos:start="277:46" pos:end="277:46"><literal type="number" pos:start="277:46" pos:end="277:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <break pos:start="283:13" pos:end="283:18">break;</break>

        <case pos:start="285:9" pos:end="285:26">case <expr pos:start="285:14" pos:end="285:25"><name pos:start="285:14" pos:end="285:25">HPET_COUNTER</name></expr>:</case>

            <if_stmt pos:start="287:13" pos:end="291:13"><if pos:start="287:13" pos:end="291:13">if <condition pos:start="287:16" pos:end="287:32">(<expr pos:start="287:17" pos:end="287:31"><call pos:start="287:17" pos:end="287:31"><name pos:start="287:17" pos:end="287:28">hpet_enabled</name><argument_list pos:start="287:29" pos:end="287:31">(<argument pos:start="287:30" pos:end="287:30"><expr pos:start="287:30" pos:end="287:30"><name pos:start="287:30" pos:end="287:30">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="287:34" pos:end="291:13">{<block_content pos:start="289:17" pos:end="289:71">

                <expr_stmt pos:start="289:17" pos:end="289:71"><expr pos:start="289:17" pos:end="289:70"><call pos:start="289:17" pos:end="289:70"><name pos:start="289:17" pos:end="289:23">DPRINTF</name><argument_list pos:start="289:24" pos:end="289:70">(<argument pos:start="289:25" pos:end="289:69"><expr pos:start="289:25" pos:end="289:69"><literal type="string" pos:start="289:25" pos:end="289:69">"qemu: Writing counter while HPET enabled!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="293:13" pos:end="295:66"><expr pos:start="293:13" pos:end="295:65"><name pos:start="293:13" pos:end="293:27"><name pos:start="293:13" pos:end="293:13">s</name><operator pos:start="293:14" pos:end="293:15">-&gt;</operator><name pos:start="293:16" pos:end="293:27">hpet_counter</name></name> <operator pos:start="293:29" pos:end="293:29">=</operator>

                <operator pos:start="295:17" pos:end="295:17">(</operator><name pos:start="295:18" pos:end="295:32"><name pos:start="295:18" pos:end="295:18">s</name><operator pos:start="295:19" pos:end="295:20">-&gt;</operator><name pos:start="295:21" pos:end="295:32">hpet_counter</name></name> <operator pos:start="295:34" pos:end="295:34">&amp;</operator> <literal type="number" pos:start="295:36" pos:end="295:56">0xffffffff00000000ULL</literal><operator pos:start="295:57" pos:end="295:57">)</operator> <operator pos:start="295:59" pos:end="295:59">|</operator> <name pos:start="295:61" pos:end="295:65">value</name></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="299:44"><expr pos:start="297:13" pos:end="299:43"><call pos:start="297:13" pos:end="299:43"><name pos:start="297:13" pos:end="297:19">DPRINTF</name><argument_list pos:start="297:20" pos:end="299:43">(<argument pos:start="297:21" pos:end="297:76"><expr pos:start="297:21" pos:end="297:76"><literal type="string" pos:start="297:21" pos:end="297:64">"qemu: HPET counter written. ctr = %#x -&gt; %"</literal> <name pos:start="297:66" pos:end="297:71">PRIx64</name> <literal type="string" pos:start="297:73" pos:end="297:76">"\n"</literal></expr></argument>,

                    <argument pos:start="299:21" pos:end="299:25"><expr pos:start="299:21" pos:end="299:25"><name pos:start="299:21" pos:end="299:25">value</name></expr></argument>, <argument pos:start="299:28" pos:end="299:42"><expr pos:start="299:28" pos:end="299:42"><name pos:start="299:28" pos:end="299:42"><name pos:start="299:28" pos:end="299:28">s</name><operator pos:start="299:29" pos:end="299:30">-&gt;</operator><name pos:start="299:31" pos:end="299:42">hpet_counter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="301:13" pos:end="301:18">break;</break>

        <case pos:start="303:9" pos:end="303:30">case <expr pos:start="303:14" pos:end="303:29"><name pos:start="303:14" pos:end="303:25">HPET_COUNTER</name> <operator pos:start="303:27" pos:end="303:27">+</operator> <literal type="number" pos:start="303:29" pos:end="303:29">4</literal></expr>:</case>

            <if_stmt pos:start="305:13" pos:end="309:13"><if pos:start="305:13" pos:end="309:13">if <condition pos:start="305:16" pos:end="305:32">(<expr pos:start="305:17" pos:end="305:31"><call pos:start="305:17" pos:end="305:31"><name pos:start="305:17" pos:end="305:28">hpet_enabled</name><argument_list pos:start="305:29" pos:end="305:31">(<argument pos:start="305:30" pos:end="305:30"><expr pos:start="305:30" pos:end="305:30"><name pos:start="305:30" pos:end="305:30">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="305:34" pos:end="309:13">{<block_content pos:start="307:17" pos:end="307:71">

                <expr_stmt pos:start="307:17" pos:end="307:71"><expr pos:start="307:17" pos:end="307:70"><call pos:start="307:17" pos:end="307:70"><name pos:start="307:17" pos:end="307:23">DPRINTF</name><argument_list pos:start="307:24" pos:end="307:70">(<argument pos:start="307:25" pos:end="307:69"><expr pos:start="307:25" pos:end="307:69"><literal type="string" pos:start="307:25" pos:end="307:69">"qemu: Writing counter while HPET enabled!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="311:13" pos:end="313:78"><expr pos:start="311:13" pos:end="313:77"><name pos:start="311:13" pos:end="311:27"><name pos:start="311:13" pos:end="311:13">s</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:27">hpet_counter</name></name> <operator pos:start="311:29" pos:end="311:29">=</operator>

                <operator pos:start="313:17" pos:end="313:17">(</operator><name pos:start="313:18" pos:end="313:32"><name pos:start="313:18" pos:end="313:18">s</name><operator pos:start="313:19" pos:end="313:20">-&gt;</operator><name pos:start="313:21" pos:end="313:32">hpet_counter</name></name> <operator pos:start="313:34" pos:end="313:34">&amp;</operator> <literal type="number" pos:start="313:36" pos:end="313:48">0xffffffffULL</literal><operator pos:start="313:49" pos:end="313:49">)</operator> <operator pos:start="313:51" pos:end="313:51">|</operator> <operator pos:start="313:53" pos:end="313:53">(</operator><operator pos:start="313:54" pos:end="313:54">(</operator><operator pos:start="313:55" pos:end="313:55">(</operator><name pos:start="313:56" pos:end="313:63">uint64_t</name><operator pos:start="313:64" pos:end="313:64">)</operator><name pos:start="313:65" pos:end="313:69">value</name><operator pos:start="313:70" pos:end="313:70">)</operator> <operator pos:start="313:72" pos:end="313:73">&lt;&lt;</operator> <literal type="number" pos:start="313:75" pos:end="313:76">32</literal><operator pos:start="313:77" pos:end="313:77">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="317:44"><expr pos:start="315:13" pos:end="317:43"><call pos:start="315:13" pos:end="317:43"><name pos:start="315:13" pos:end="315:19">DPRINTF</name><argument_list pos:start="315:20" pos:end="317:43">(<argument pos:start="315:21" pos:end="315:80"><expr pos:start="315:21" pos:end="315:80"><literal type="string" pos:start="315:21" pos:end="315:68">"qemu: HPET counter + 4 written. ctr = %#x -&gt; %"</literal> <name pos:start="315:70" pos:end="315:75">PRIx64</name> <literal type="string" pos:start="315:77" pos:end="315:80">"\n"</literal></expr></argument>,

                    <argument pos:start="317:21" pos:end="317:25"><expr pos:start="317:21" pos:end="317:25"><name pos:start="317:21" pos:end="317:25">value</name></expr></argument>, <argument pos:start="317:28" pos:end="317:42"><expr pos:start="317:28" pos:end="317:42"><name pos:start="317:28" pos:end="317:42"><name pos:start="317:28" pos:end="317:28">s</name><operator pos:start="317:29" pos:end="317:30">-&gt;</operator><name pos:start="317:31" pos:end="317:42">hpet_counter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="319:13" pos:end="319:18">break;</break>

        <default pos:start="321:9" pos:end="321:16">default:</default>

            <expr_stmt pos:start="323:13" pos:end="323:55"><expr pos:start="323:13" pos:end="323:54"><call pos:start="323:13" pos:end="323:54"><name pos:start="323:13" pos:end="323:19">DPRINTF</name><argument_list pos:start="323:20" pos:end="323:54">(<argument pos:start="323:21" pos:end="323:53"><expr pos:start="323:21" pos:end="323:53"><literal type="string" pos:start="323:21" pos:end="323:53">"qemu: invalid hpet_ram_writel\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="325:13" pos:end="325:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
