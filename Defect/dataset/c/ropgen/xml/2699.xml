<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2699.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">BusState</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:26">qbus_find</name><parameter_list pos:start="1:27" pos:end="1:44">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:39"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">path</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="183:1">{<block_content pos:start="5:5" pos:end="181:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">BusState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:18"><name pos:start="9:10" pos:end="9:13">elem</name><index pos:start="9:14" pos:end="9:18">[<expr pos:start="9:15" pos:end="9:17"><literal type="number" pos:start="9:15" pos:end="9:17">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">pos</name></decl>, <decl pos:start="11:14" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:16">len</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:28">/* find start element */</comment>

    <if_stmt pos:start="17:5" pos:end="53:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:12">path</name><index pos:start="17:13" pos:end="17:15">[<expr pos:start="17:14" pos:end="17:14"><literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>]</index></name> <operator pos:start="17:17" pos:end="17:18">==</operator> <literal type="char" pos:start="17:20" pos:end="17:22">'/'</literal></expr>)</condition> <block pos:start="17:25" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:16">

        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:11">bus</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:34"><name pos:start="19:15" pos:end="19:32">sysbus_get_default</name><argument_list pos:start="19:33" pos:end="19:34">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">pos</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="53:5">else <block pos:start="23:12" pos:end="53:5">{<block_content pos:start="25:9" pos:end="51:18">

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:56">(<expr pos:start="25:13" pos:end="25:55"><call pos:start="25:13" pos:end="25:50"><name pos:start="25:13" pos:end="25:18">sscanf</name><argument_list pos:start="25:19" pos:end="25:50">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">path</name></expr></argument>, <argument pos:start="25:26" pos:end="25:37"><expr pos:start="25:26" pos:end="25:37"><literal type="string" pos:start="25:26" pos:end="25:37">"%127[^/]%n"</literal></expr></argument>, <argument pos:start="25:40" pos:end="25:43"><expr pos:start="25:40" pos:end="25:43"><name pos:start="25:40" pos:end="25:43">elem</name></expr></argument>, <argument pos:start="25:46" pos:end="25:49"><expr pos:start="25:46" pos:end="25:49"><operator pos:start="25:46" pos:end="25:46">&amp;</operator><name pos:start="25:47" pos:end="25:49">len</name></expr></argument>)</argument_list></call> <operator pos:start="25:52" pos:end="25:53">!=</operator> <literal type="number" pos:start="25:55" pos:end="25:55">1</literal></expr>)</condition> <block pos:start="25:58" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:30">

            <expr_stmt pos:start="27:13" pos:end="27:29"><expr pos:start="27:13" pos:end="27:28"><call pos:start="27:13" pos:end="27:28"><name pos:start="27:13" pos:end="27:18">assert</name><argument_list pos:start="27:19" pos:end="27:28">(<argument pos:start="27:20" pos:end="27:27"><expr pos:start="27:20" pos:end="27:27"><operator pos:start="27:20" pos:end="27:20">!</operator><name pos:start="27:21" pos:end="27:27"><name pos:start="27:21" pos:end="27:24">path</name><index pos:start="27:25" pos:end="27:27">[<expr pos:start="27:26" pos:end="27:26"><literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:30"><expr pos:start="29:13" pos:end="29:29"><name pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:16">elem</name><index pos:start="29:17" pos:end="29:19">[<expr pos:start="29:18" pos:end="29:18"><literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>]</index></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <name pos:start="29:23" pos:end="29:25">len</name> <operator pos:start="29:27" pos:end="29:27">=</operator> <literal type="number" pos:start="29:29" pos:end="29:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:68"><expr pos:start="33:9" pos:end="33:67"><name pos:start="33:9" pos:end="33:11">bus</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:67"><name pos:start="33:15" pos:end="33:33">qbus_find_recursive</name><argument_list pos:start="33:34" pos:end="33:67">(<argument pos:start="33:35" pos:end="33:54"><expr pos:start="33:35" pos:end="33:54"><call pos:start="33:35" pos:end="33:54"><name pos:start="33:35" pos:end="33:52">sysbus_get_default</name><argument_list pos:start="33:53" pos:end="33:54">()</argument_list></call></expr></argument>, <argument pos:start="33:57" pos:end="33:60"><expr pos:start="33:57" pos:end="33:60"><name pos:start="33:57" pos:end="33:60">elem</name></expr></argument>, <argument pos:start="33:63" pos:end="33:66"><expr pos:start="33:63" pos:end="33:66"><name pos:start="33:63" pos:end="33:66">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="49:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:17">(<expr pos:start="35:13" pos:end="35:16"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:16">bus</name></expr>)</condition> <block pos:start="35:19" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:24">

            <expr_stmt pos:start="37:13" pos:end="37:52"><expr pos:start="37:13" pos:end="37:51"><call pos:start="37:13" pos:end="37:51"><name pos:start="37:13" pos:end="37:25">qerror_report</name><argument_list pos:start="37:26" pos:end="37:51">(<argument pos:start="37:27" pos:end="37:44"><expr pos:start="37:27" pos:end="37:44"><name pos:start="37:27" pos:end="37:44">QERR_BUS_NOT_FOUND</name></expr></argument>, <argument pos:start="37:47" pos:end="37:50"><expr pos:start="37:47" pos:end="37:50"><name pos:start="37:47" pos:end="37:50">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="39:13" pos:end="39:24">return <expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">NULL</name></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="41:11" pos:end="49:9">else if <condition pos:start="41:19" pos:end="41:37">(<expr pos:start="41:20" pos:end="41:36"><call pos:start="41:20" pos:end="41:36"><name pos:start="41:20" pos:end="41:31">qbus_is_full</name><argument_list pos:start="41:32" pos:end="41:36">(<argument pos:start="41:33" pos:end="41:35"><expr pos:start="41:33" pos:end="41:35"><name pos:start="41:33" pos:end="41:35">bus</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:39" pos:end="49:9">{<block_content pos:start="43:13" pos:end="47:24">

            <expr_stmt pos:start="43:13" pos:end="45:32"><expr pos:start="43:13" pos:end="45:31"><call pos:start="43:13" pos:end="45:31"><name pos:start="43:13" pos:end="43:25">qerror_report</name><argument_list pos:start="43:26" pos:end="45:31">(<argument pos:start="43:27" pos:end="43:51"><expr pos:start="43:27" pos:end="43:51"><name pos:start="43:27" pos:end="43:51">ERROR_CLASS_GENERIC_ERROR</name></expr></argument>, <argument pos:start="43:54" pos:end="43:71"><expr pos:start="43:54" pos:end="43:71"><literal type="string" pos:start="43:54" pos:end="43:71">"Bus '%s' is full"</literal></expr></argument>,

                          <argument pos:start="45:27" pos:end="45:30"><expr pos:start="45:27" pos:end="45:30"><name pos:start="45:27" pos:end="45:30">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:24">return <expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:18"><expr pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:11">pos</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:17">len</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="57:5" pos:end="181:5">for <control pos:start="57:9" pos:end="57:12">(<init pos:start="57:10" pos:end="57:10">;</init><condition pos:start="57:11" pos:end="57:11">;</condition><incr/>)</control> <block pos:start="57:14" pos:end="181:5">{<block_content pos:start="59:9" pos:end="179:9">

        <expr_stmt pos:start="59:9" pos:end="59:47"><expr pos:start="59:9" pos:end="59:46"><call pos:start="59:9" pos:end="59:46"><name pos:start="59:9" pos:end="59:14">assert</name><argument_list pos:start="59:15" pos:end="59:46">(<argument pos:start="59:16" pos:end="59:45"><expr pos:start="59:16" pos:end="59:45"><name pos:start="59:16" pos:end="59:24"><name pos:start="59:16" pos:end="59:19">path</name><index pos:start="59:20" pos:end="59:24">[<expr pos:start="59:21" pos:end="59:23"><name pos:start="59:21" pos:end="59:23">pos</name></expr>]</index></name> <operator pos:start="59:26" pos:end="59:27">==</operator> <literal type="char" pos:start="59:29" pos:end="59:31">'/'</literal> <operator pos:start="59:33" pos:end="59:34">||</operator> <operator pos:start="59:36" pos:end="59:36">!</operator><name pos:start="59:37" pos:end="59:45"><name pos:start="59:37" pos:end="59:40">path</name><index pos:start="59:41" pos:end="59:45">[<expr pos:start="59:42" pos:end="59:44"><name pos:start="59:42" pos:end="59:44">pos</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="61:9" pos:end="65:9">while <condition pos:start="61:15" pos:end="61:32">(<expr pos:start="61:16" pos:end="61:31"><name pos:start="61:16" pos:end="61:24"><name pos:start="61:16" pos:end="61:19">path</name><index pos:start="61:20" pos:end="61:24">[<expr pos:start="61:21" pos:end="61:23"><name pos:start="61:21" pos:end="61:23">pos</name></expr>]</index></name> <operator pos:start="61:26" pos:end="61:27">==</operator> <literal type="char" pos:start="61:29" pos:end="61:31">'/'</literal></expr>)</condition> <block pos:start="61:34" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:18">

            <expr_stmt pos:start="63:13" pos:end="63:18"><expr pos:start="63:13" pos:end="63:17"><name pos:start="63:13" pos:end="63:15">pos</name><operator pos:start="63:16" pos:end="63:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="67:9" pos:end="71:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:30">(<expr pos:start="67:13" pos:end="67:29"><name pos:start="67:13" pos:end="67:21"><name pos:start="67:13" pos:end="67:16">path</name><index pos:start="67:17" pos:end="67:21">[<expr pos:start="67:18" pos:end="67:20"><name pos:start="67:18" pos:end="67:20">pos</name></expr>]</index></name> <operator pos:start="67:23" pos:end="67:24">==</operator> <literal type="char" pos:start="67:26" pos:end="67:29">'\0'</literal></expr>)</condition> <block pos:start="67:32" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:23">

            <return pos:start="69:13" pos:end="69:23">return <expr pos:start="69:20" pos:end="69:22"><name pos:start="69:20" pos:end="69:22">bus</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="75:9" pos:end="75:25">/* find device */</comment>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:60">(<expr pos:start="77:13" pos:end="77:59"><call pos:start="77:13" pos:end="77:54"><name pos:start="77:13" pos:end="77:18">sscanf</name><argument_list pos:start="77:19" pos:end="77:54">(<argument pos:start="77:20" pos:end="77:27"><expr pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:23">path</name><operator pos:start="77:24" pos:end="77:24">+</operator><name pos:start="77:25" pos:end="77:27">pos</name></expr></argument>, <argument pos:start="77:30" pos:end="77:41"><expr pos:start="77:30" pos:end="77:41"><literal type="string" pos:start="77:30" pos:end="77:41">"%127[^/]%n"</literal></expr></argument>, <argument pos:start="77:44" pos:end="77:47"><expr pos:start="77:44" pos:end="77:47"><name pos:start="77:44" pos:end="77:47">elem</name></expr></argument>, <argument pos:start="77:50" pos:end="77:53"><expr pos:start="77:50" pos:end="77:53"><operator pos:start="77:50" pos:end="77:50">&amp;</operator><name pos:start="77:51" pos:end="77:53">len</name></expr></argument>)</argument_list></call> <operator pos:start="77:56" pos:end="77:57">!=</operator> <literal type="number" pos:start="77:59" pos:end="77:59">1</literal></expr>)</condition> <block pos:start="77:62" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:30">

            <expr_stmt pos:start="79:13" pos:end="79:35"><expr pos:start="79:13" pos:end="79:34"><call pos:start="79:13" pos:end="79:34"><name pos:start="79:13" pos:end="79:32">g_assert_not_reached</name><argument_list pos:start="79:33" pos:end="79:34">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:30"><expr pos:start="81:13" pos:end="81:29"><name pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:16">elem</name><index pos:start="81:17" pos:end="81:19">[<expr pos:start="81:18" pos:end="81:18"><literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>]</index></name> <operator pos:start="81:21" pos:end="81:21">=</operator> <name pos:start="81:23" pos:end="81:25">len</name> <operator pos:start="81:27" pos:end="81:27">=</operator> <literal type="number" pos:start="81:29" pos:end="81:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:19"><expr pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:11">pos</name> <operator pos:start="85:13" pos:end="85:14">+=</operator> <name pos:start="85:16" pos:end="85:18">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:39"><expr pos:start="87:9" pos:end="87:38"><name pos:start="87:9" pos:end="87:11">dev</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <call pos:start="87:15" pos:end="87:38"><name pos:start="87:15" pos:end="87:27">qbus_find_dev</name><argument_list pos:start="87:28" pos:end="87:38">(<argument pos:start="87:29" pos:end="87:31"><expr pos:start="87:29" pos:end="87:31"><name pos:start="87:29" pos:end="87:31">bus</name></expr></argument>, <argument pos:start="87:34" pos:end="87:37"><expr pos:start="87:34" pos:end="87:37"><name pos:start="87:34" pos:end="87:37">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="101:9"><if pos:start="89:9" pos:end="101:9">if <condition pos:start="89:12" pos:end="89:17">(<expr pos:start="89:13" pos:end="89:16"><operator pos:start="89:13" pos:end="89:13">!</operator><name pos:start="89:14" pos:end="89:16">dev</name></expr>)</condition> <block pos:start="89:19" pos:end="101:9">{<block_content pos:start="91:13" pos:end="99:24">

            <expr_stmt pos:start="91:13" pos:end="91:55"><expr pos:start="91:13" pos:end="91:54"><call pos:start="91:13" pos:end="91:54"><name pos:start="91:13" pos:end="91:25">qerror_report</name><argument_list pos:start="91:26" pos:end="91:54">(<argument pos:start="91:27" pos:end="91:47"><expr pos:start="91:27" pos:end="91:47"><name pos:start="91:27" pos:end="91:47">QERR_DEVICE_NOT_FOUND</name></expr></argument>, <argument pos:start="91:50" pos:end="91:53"><expr pos:start="91:50" pos:end="91:53"><name pos:start="91:50" pos:end="91:53">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="97:13"><if pos:start="93:13" pos:end="97:13">if <condition pos:start="93:16" pos:end="93:38">(<expr pos:start="93:17" pos:end="93:37"><operator pos:start="93:17" pos:end="93:17">!</operator><call pos:start="93:18" pos:end="93:37"><name pos:start="93:18" pos:end="93:35">monitor_cur_is_qmp</name><argument_list pos:start="93:36" pos:end="93:37">()</argument_list></call></expr>)</condition> <block pos:start="93:40" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:35">

                <expr_stmt pos:start="95:17" pos:end="95:35"><expr pos:start="95:17" pos:end="95:34"><call pos:start="95:17" pos:end="95:34"><name pos:start="95:17" pos:end="95:29">qbus_list_dev</name><argument_list pos:start="95:30" pos:end="95:34">(<argument pos:start="95:31" pos:end="95:33"><expr pos:start="95:31" pos:end="95:33"><name pos:start="95:31" pos:end="95:33">bus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <return pos:start="99:13" pos:end="99:24">return <expr pos:start="99:20" pos:end="99:23"><name pos:start="99:20" pos:end="99:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:47"><expr pos:start="105:9" pos:end="105:46"><call pos:start="105:9" pos:end="105:46"><name pos:start="105:9" pos:end="105:14">assert</name><argument_list pos:start="105:15" pos:end="105:46">(<argument pos:start="105:16" pos:end="105:45"><expr pos:start="105:16" pos:end="105:45"><name pos:start="105:16" pos:end="105:24"><name pos:start="105:16" pos:end="105:19">path</name><index pos:start="105:20" pos:end="105:24">[<expr pos:start="105:21" pos:end="105:23"><name pos:start="105:21" pos:end="105:23">pos</name></expr>]</index></name> <operator pos:start="105:26" pos:end="105:27">==</operator> <literal type="char" pos:start="105:29" pos:end="105:31">'/'</literal> <operator pos:start="105:33" pos:end="105:34">||</operator> <operator pos:start="105:36" pos:end="105:36">!</operator><name pos:start="105:37" pos:end="105:45"><name pos:start="105:37" pos:end="105:40">path</name><index pos:start="105:41" pos:end="105:45">[<expr pos:start="105:42" pos:end="105:44"><name pos:start="105:42" pos:end="105:44">pos</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="107:9" pos:end="111:9">while <condition pos:start="107:15" pos:end="107:32">(<expr pos:start="107:16" pos:end="107:31"><name pos:start="107:16" pos:end="107:24"><name pos:start="107:16" pos:end="107:19">path</name><index pos:start="107:20" pos:end="107:24">[<expr pos:start="107:21" pos:end="107:23"><name pos:start="107:21" pos:end="107:23">pos</name></expr>]</index></name> <operator pos:start="107:26" pos:end="107:27">==</operator> <literal type="char" pos:start="107:29" pos:end="107:31">'/'</literal></expr>)</condition> <block pos:start="107:34" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:18">

            <expr_stmt pos:start="109:13" pos:end="109:18"><expr pos:start="109:13" pos:end="109:17"><name pos:start="109:13" pos:end="109:15">pos</name><operator pos:start="109:16" pos:end="109:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="113:9" pos:end="149:9"><if pos:start="113:9" pos:end="149:9">if <condition pos:start="113:12" pos:end="113:30">(<expr pos:start="113:13" pos:end="113:29"><name pos:start="113:13" pos:end="113:21"><name pos:start="113:13" pos:end="113:16">path</name><index pos:start="113:17" pos:end="113:21">[<expr pos:start="113:18" pos:end="113:20"><name pos:start="113:18" pos:end="113:20">pos</name></expr>]</index></name> <operator pos:start="113:23" pos:end="113:24">==</operator> <literal type="char" pos:start="113:26" pos:end="113:29">'\0'</literal></expr>)</condition> <block pos:start="113:32" pos:end="149:9">{<block_content pos:start="119:13" pos:end="147:13">

            <comment type="block" pos:start="115:13" pos:end="117:54">/* last specified element is a device.  If it has exactly

             * one child bus accept it nevertheless */</comment>

            <switch pos:start="119:13" pos:end="147:13">switch <condition pos:start="119:20" pos:end="119:39">(<expr pos:start="119:21" pos:end="119:38"><name pos:start="119:21" pos:end="119:38"><name pos:start="119:21" pos:end="119:23">dev</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:38">num_child_bus</name></name></expr>)</condition> <block pos:start="119:41" pos:end="147:13">{<block_content pos:start="121:13" pos:end="145:28">

            <case pos:start="121:13" pos:end="121:19">case <expr pos:start="121:18" pos:end="121:18"><literal type="number" pos:start="121:18" pos:end="121:18">0</literal></expr>:</case>

                <expr_stmt pos:start="123:17" pos:end="125:68"><expr pos:start="123:17" pos:end="125:67"><call pos:start="123:17" pos:end="125:67"><name pos:start="123:17" pos:end="123:29">qerror_report</name><argument_list pos:start="123:30" pos:end="125:67">(<argument pos:start="123:31" pos:end="123:55"><expr pos:start="123:31" pos:end="123:55"><name pos:start="123:31" pos:end="123:55">ERROR_CLASS_GENERIC_ERROR</name></expr></argument>,

                              <argument pos:start="125:31" pos:end="125:60"><expr pos:start="125:31" pos:end="125:60"><literal type="string" pos:start="125:31" pos:end="125:60">"Device '%s' has no child bus"</literal></expr></argument>, <argument pos:start="125:63" pos:end="125:66"><expr pos:start="125:63" pos:end="125:66"><name pos:start="125:63" pos:end="125:66">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="127:17" pos:end="127:28">return <expr pos:start="127:24" pos:end="127:27"><name pos:start="127:24" pos:end="127:27">NULL</name></expr>;</return>

            <case pos:start="129:13" pos:end="129:19">case <expr pos:start="129:18" pos:end="129:18"><literal type="number" pos:start="129:18" pos:end="129:18">1</literal></expr>:</case>

                <return pos:start="131:17" pos:end="131:52">return <expr pos:start="131:24" pos:end="131:51"><call pos:start="131:24" pos:end="131:51"><name pos:start="131:24" pos:end="131:34">QLIST_FIRST</name><argument_list pos:start="131:35" pos:end="131:51">(<argument pos:start="131:36" pos:end="131:50"><expr pos:start="131:36" pos:end="131:50"><operator pos:start="131:36" pos:end="131:36">&amp;</operator><name pos:start="131:37" pos:end="131:50"><name pos:start="131:37" pos:end="131:39">dev</name><operator pos:start="131:40" pos:end="131:41">-&gt;</operator><name pos:start="131:42" pos:end="131:50">child_bus</name></name></expr></argument>)</argument_list></call></expr>;</return>

            <default pos:start="133:13" pos:end="133:20">default:</default>

                <expr_stmt pos:start="135:17" pos:end="137:77"><expr pos:start="135:17" pos:end="137:76"><call pos:start="135:17" pos:end="137:76"><name pos:start="135:17" pos:end="135:29">qerror_report</name><argument_list pos:start="135:30" pos:end="137:76">(<argument pos:start="135:31" pos:end="135:55"><expr pos:start="135:31" pos:end="135:55"><name pos:start="135:31" pos:end="135:55">ERROR_CLASS_GENERIC_ERROR</name></expr></argument>,

                              <argument pos:start="137:31" pos:end="137:69"><expr pos:start="137:31" pos:end="137:69"><literal type="string" pos:start="137:31" pos:end="137:69">"Device '%s' has multiple child busses"</literal></expr></argument>, <argument pos:start="137:72" pos:end="137:75"><expr pos:start="137:72" pos:end="137:75"><name pos:start="137:72" pos:end="137:75">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="139:17" pos:end="143:17"><if pos:start="139:17" pos:end="143:17">if <condition pos:start="139:20" pos:end="139:42">(<expr pos:start="139:21" pos:end="139:41"><operator pos:start="139:21" pos:end="139:21">!</operator><call pos:start="139:22" pos:end="139:41"><name pos:start="139:22" pos:end="139:39">monitor_cur_is_qmp</name><argument_list pos:start="139:40" pos:end="139:41">()</argument_list></call></expr>)</condition> <block pos:start="139:44" pos:end="143:17">{<block_content pos:start="141:21" pos:end="141:39">

                    <expr_stmt pos:start="141:21" pos:end="141:39"><expr pos:start="141:21" pos:end="141:38"><call pos:start="141:21" pos:end="141:38"><name pos:start="141:21" pos:end="141:33">qbus_list_bus</name><argument_list pos:start="141:34" pos:end="141:38">(<argument pos:start="141:35" pos:end="141:37"><expr pos:start="141:35" pos:end="141:37"><name pos:start="141:35" pos:end="141:37">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <return pos:start="145:17" pos:end="145:28">return <expr pos:start="145:24" pos:end="145:27"><name pos:start="145:24" pos:end="145:27">NULL</name></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="153:9" pos:end="153:22">/* find bus */</comment>

        <if_stmt pos:start="155:9" pos:end="161:9"><if pos:start="155:9" pos:end="161:9">if <condition pos:start="155:12" pos:end="155:60">(<expr pos:start="155:13" pos:end="155:59"><call pos:start="155:13" pos:end="155:54"><name pos:start="155:13" pos:end="155:18">sscanf</name><argument_list pos:start="155:19" pos:end="155:54">(<argument pos:start="155:20" pos:end="155:27"><expr pos:start="155:20" pos:end="155:27"><name pos:start="155:20" pos:end="155:23">path</name><operator pos:start="155:24" pos:end="155:24">+</operator><name pos:start="155:25" pos:end="155:27">pos</name></expr></argument>, <argument pos:start="155:30" pos:end="155:41"><expr pos:start="155:30" pos:end="155:41"><literal type="string" pos:start="155:30" pos:end="155:41">"%127[^/]%n"</literal></expr></argument>, <argument pos:start="155:44" pos:end="155:47"><expr pos:start="155:44" pos:end="155:47"><name pos:start="155:44" pos:end="155:47">elem</name></expr></argument>, <argument pos:start="155:50" pos:end="155:53"><expr pos:start="155:50" pos:end="155:53"><operator pos:start="155:50" pos:end="155:50">&amp;</operator><name pos:start="155:51" pos:end="155:53">len</name></expr></argument>)</argument_list></call> <operator pos:start="155:56" pos:end="155:57">!=</operator> <literal type="number" pos:start="155:59" pos:end="155:59">1</literal></expr>)</condition> <block pos:start="155:62" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:30">

            <expr_stmt pos:start="157:13" pos:end="157:35"><expr pos:start="157:13" pos:end="157:34"><call pos:start="157:13" pos:end="157:34"><name pos:start="157:13" pos:end="157:32">g_assert_not_reached</name><argument_list pos:start="157:33" pos:end="157:34">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:30"><expr pos:start="159:13" pos:end="159:29"><name pos:start="159:13" pos:end="159:19"><name pos:start="159:13" pos:end="159:16">elem</name><index pos:start="159:17" pos:end="159:19">[<expr pos:start="159:18" pos:end="159:18"><literal type="number" pos:start="159:18" pos:end="159:18">0</literal></expr>]</index></name> <operator pos:start="159:21" pos:end="159:21">=</operator> <name pos:start="159:23" pos:end="159:25">len</name> <operator pos:start="159:27" pos:end="159:27">=</operator> <literal type="number" pos:start="159:29" pos:end="159:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:19"><expr pos:start="163:9" pos:end="163:18"><name pos:start="163:9" pos:end="163:11">pos</name> <operator pos:start="163:13" pos:end="163:14">+=</operator> <name pos:start="163:16" pos:end="163:18">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:39"><expr pos:start="165:9" pos:end="165:38"><name pos:start="165:9" pos:end="165:11">bus</name> <operator pos:start="165:13" pos:end="165:13">=</operator> <call pos:start="165:15" pos:end="165:38"><name pos:start="165:15" pos:end="165:27">qbus_find_bus</name><argument_list pos:start="165:28" pos:end="165:38">(<argument pos:start="165:29" pos:end="165:31"><expr pos:start="165:29" pos:end="165:31"><name pos:start="165:29" pos:end="165:31">dev</name></expr></argument>, <argument pos:start="165:34" pos:end="165:37"><expr pos:start="165:34" pos:end="165:37"><name pos:start="165:34" pos:end="165:37">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="167:9" pos:end="179:9"><if pos:start="167:9" pos:end="179:9">if <condition pos:start="167:12" pos:end="167:17">(<expr pos:start="167:13" pos:end="167:16"><operator pos:start="167:13" pos:end="167:13">!</operator><name pos:start="167:14" pos:end="167:16">bus</name></expr>)</condition> <block pos:start="167:19" pos:end="179:9">{<block_content pos:start="169:13" pos:end="177:24">

            <expr_stmt pos:start="169:13" pos:end="169:52"><expr pos:start="169:13" pos:end="169:51"><call pos:start="169:13" pos:end="169:51"><name pos:start="169:13" pos:end="169:25">qerror_report</name><argument_list pos:start="169:26" pos:end="169:51">(<argument pos:start="169:27" pos:end="169:44"><expr pos:start="169:27" pos:end="169:44"><name pos:start="169:27" pos:end="169:44">QERR_BUS_NOT_FOUND</name></expr></argument>, <argument pos:start="169:47" pos:end="169:50"><expr pos:start="169:47" pos:end="169:50"><name pos:start="169:47" pos:end="169:50">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="175:13"><if pos:start="171:13" pos:end="175:13">if <condition pos:start="171:16" pos:end="171:38">(<expr pos:start="171:17" pos:end="171:37"><operator pos:start="171:17" pos:end="171:17">!</operator><call pos:start="171:18" pos:end="171:37"><name pos:start="171:18" pos:end="171:35">monitor_cur_is_qmp</name><argument_list pos:start="171:36" pos:end="171:37">()</argument_list></call></expr>)</condition> <block pos:start="171:40" pos:end="175:13">{<block_content pos:start="173:17" pos:end="173:35">

                <expr_stmt pos:start="173:17" pos:end="173:35"><expr pos:start="173:17" pos:end="173:34"><call pos:start="173:17" pos:end="173:34"><name pos:start="173:17" pos:end="173:29">qbus_list_bus</name><argument_list pos:start="173:30" pos:end="173:34">(<argument pos:start="173:31" pos:end="173:33"><expr pos:start="173:31" pos:end="173:33"><name pos:start="173:31" pos:end="173:33">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <return pos:start="177:13" pos:end="177:24">return <expr pos:start="177:20" pos:end="177:23"><name pos:start="177:20" pos:end="177:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
