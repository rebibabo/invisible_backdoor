<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18162.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">pxa2xx_mm_write</name><parameter_list pos:start="1:28" pos:end="3:58">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:48">hwaddr</name></type> <name pos:start="1:50" pos:end="1:53">addr</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:36">uint64_t</name></type> <name pos:start="3:38" pos:end="3:42">value</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:57"><decl pos:start="3:45" pos:end="3:57"><type pos:start="3:45" pos:end="3:57"><name pos:start="3:45" pos:end="3:52">unsigned</name></type> <name pos:start="3:54" pos:end="3:57">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:5">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">PXA2xxState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:43">= <expr pos:start="7:22" pos:end="7:43"><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:33">PXA2xxState</name> <operator pos:start="7:35" pos:end="7:35">*</operator><operator pos:start="7:36" pos:end="7:36">)</operator> <name pos:start="7:38" pos:end="7:43">opaque</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="31:5">switch <condition pos:start="11:12" pos:end="11:17">(<expr pos:start="11:13" pos:end="11:16"><name pos:start="11:13" pos:end="11:16">addr</name></expr>)</condition> <block pos:start="11:19" pos:end="31:5">{<block_content pos:start="13:5" pos:end="29:14">

    <case pos:start="13:5" pos:end="13:27">case <expr pos:start="13:10" pos:end="13:26"><name pos:start="13:10" pos:end="13:15">MDCNFG</name> <operator pos:start="13:17" pos:end="13:19">...</operator> <name pos:start="13:21" pos:end="13:26">SA1110</name></expr>:</case>

        <if_stmt pos:start="15:9" pos:end="21:9"><if pos:start="15:9" pos:end="21:9">if <condition pos:start="15:12" pos:end="15:28">(<expr pos:start="15:13" pos:end="15:27"><operator pos:start="15:13" pos:end="15:13">(</operator><name pos:start="15:14" pos:end="15:17">addr</name> <operator pos:start="15:19" pos:end="15:19">&amp;</operator> <literal type="number" pos:start="15:21" pos:end="15:21">3</literal><operator pos:start="15:22" pos:end="15:22">)</operator> <operator pos:start="15:24" pos:end="15:25">==</operator> <literal type="number" pos:start="15:27" pos:end="15:27">0</literal></expr>)</condition> <block pos:start="15:30" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:18">

            <expr_stmt pos:start="17:13" pos:end="17:42"><expr pos:start="17:13" pos:end="17:41"><name pos:start="17:13" pos:end="17:33"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:22">mm_regs</name><index pos:start="17:23" pos:end="17:33">[<expr pos:start="17:24" pos:end="17:32"><name pos:start="17:24" pos:end="17:27">addr</name> <operator pos:start="17:29" pos:end="17:30">&gt;&gt;</operator> <literal type="number" pos:start="17:32" pos:end="17:32">2</literal></expr>]</index></name> <operator pos:start="17:35" pos:end="17:35">=</operator> <name pos:start="17:37" pos:end="17:41">value</name></expr>;</expr_stmt>

            <break pos:start="19:13" pos:end="19:18">break;</break>

        </block_content>}</block></if></if_stmt>



    <default pos:start="25:5" pos:end="25:12">default:</default>

        <expr_stmt pos:start="27:9" pos:end="27:69"><expr pos:start="27:9" pos:end="27:68"><call pos:start="27:9" pos:end="27:68"><name pos:start="27:9" pos:end="27:14">printf</name><argument_list pos:start="27:15" pos:end="27:68">(<argument pos:start="27:16" pos:end="27:47"><expr pos:start="27:16" pos:end="27:47"><literal type="string" pos:start="27:16" pos:end="27:34">"%s: Bad register "</literal> <name pos:start="27:36" pos:end="27:42">REG_FMT</name> <literal type="string" pos:start="27:44" pos:end="27:47">"\n"</literal></expr></argument>, <argument pos:start="27:50" pos:end="27:61"><expr pos:start="27:50" pos:end="27:61"><name pos:start="27:50" pos:end="27:61">__FUNCTION__</name></expr></argument>, <argument pos:start="27:64" pos:end="27:67"><expr pos:start="27:64" pos:end="27:67"><name pos:start="27:64" pos:end="27:67">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
