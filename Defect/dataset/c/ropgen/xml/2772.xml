<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2772.c" pos:tabs="8"><function pos:start="1:1" pos:end="52:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">rtas_stop_self</name><parameter_list pos:start="1:27" pos:end="7:60">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:37">PowerPCCPU</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">cpu</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:68"><decl pos:start="1:45" pos:end="1:68"><type pos:start="1:45" pos:end="1:68"><name pos:start="1:45" pos:end="1:61">sPAPRMachineState</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:68">spapr</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:41"><decl pos:start="3:28" pos:end="3:41"><type pos:start="3:28" pos:end="3:41"><name pos:start="3:28" pos:end="3:35">uint32_t</name></type> <name pos:start="3:37" pos:end="3:41">token</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:57"><decl pos:start="3:44" pos:end="3:57"><type pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:51">uint32_t</name></type> <name pos:start="3:53" pos:end="3:57">nargs</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:44"><decl pos:start="5:28" pos:end="5:44"><type pos:start="5:28" pos:end="5:44"><name pos:start="5:28" pos:end="5:39">target_ulong</name></type> <name pos:start="5:41" pos:end="5:44">args</name></decl></parameter>,

                           <parameter pos:start="7:28" pos:end="7:40"><decl pos:start="7:28" pos:end="7:40"><type pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:35">uint32_t</name></type> <name pos:start="7:37" pos:end="7:40">nret</name></decl></parameter>, <parameter pos:start="7:43" pos:end="7:59"><decl pos:start="7:43" pos:end="7:59"><type pos:start="7:43" pos:end="7:59"><name pos:start="7:43" pos:end="7:54">target_ulong</name></type> <name pos:start="7:56" pos:end="7:59">rets</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="52:1">{<block_content pos:start="11:5" pos:end="50:40">

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">CPUState</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">cs</name> <init pos:start="11:18" pos:end="11:27">= <expr pos:start="11:20" pos:end="11:27"><call pos:start="11:20" pos:end="11:27"><name pos:start="11:20" pos:end="11:22">CPU</name><argument_list pos:start="11:23" pos:end="11:27">(<argument pos:start="11:24" pos:end="11:26"><expr pos:start="11:24" pos:end="11:26"><name pos:start="11:24" pos:end="11:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">CPUPPCState</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">env</name> <init pos:start="13:22" pos:end="13:32">= <expr pos:start="13:24" pos:end="13:32"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:32"><name pos:start="13:25" pos:end="13:27">cpu</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:32">env</name></name></expr></init></decl>;</decl_stmt>




    <expr_stmt pos:start="18:5" pos:end="18:19"><expr pos:start="18:5" pos:end="18:18"><name pos:start="18:5" pos:end="18:14"><name pos:start="18:5" pos:end="18:6">cs</name><operator pos:start="18:7" pos:end="18:8">-&gt;</operator><name pos:start="18:9" pos:end="18:14">halted</name></name> <operator pos:start="18:16" pos:end="18:16">=</operator> <literal type="number" pos:start="18:18" pos:end="18:18">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="20:5" pos:end="20:22"><expr pos:start="20:5" pos:end="20:21"><call pos:start="20:5" pos:end="20:21"><name pos:start="20:5" pos:end="20:17">qemu_cpu_kick</name><argument_list pos:start="20:18" pos:end="20:21">(<argument pos:start="20:19" pos:end="20:20"><expr pos:start="20:19" pos:end="20:20"><name pos:start="20:19" pos:end="20:20">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="22:5" pos:end="38:7">/*

     * While stopping a CPU, the guest calls H_CPPR which

     * effectively disables interrupts on XICS level.

     * However decrementer interrupts in TCG can still

     * wake the CPU up so here we disable interrupts in MSR

     * as well.

     * As rtas_start_cpu() resets the whole MSR anyway, there is

     * no need to bother with specific bits, we just clear it.

     */</comment>

    <expr_stmt pos:start="40:5" pos:end="40:17"><expr pos:start="40:5" pos:end="40:16"><name pos:start="40:5" pos:end="40:12"><name pos:start="40:5" pos:end="40:7">env</name><operator pos:start="40:8" pos:end="40:9">-&gt;</operator><name pos:start="40:10" pos:end="40:12">msr</name></name> <operator pos:start="40:14" pos:end="40:14">=</operator> <literal type="number" pos:start="40:16" pos:end="40:16">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="44:5" pos:end="48:15">/* Disable Power-saving mode Exit Cause exceptions for the CPU.

     * This could deliver an interrupt on a dying CPU and crash the

     * guest */</comment>

    <expr_stmt pos:start="50:5" pos:end="50:40"><expr pos:start="50:5" pos:end="50:39"><name pos:start="50:5" pos:end="50:22"><name pos:start="50:5" pos:end="50:7">env</name><operator pos:start="50:8" pos:end="50:9">-&gt;</operator><name pos:start="50:10" pos:end="50:12">spr</name><index pos:start="50:13" pos:end="50:22">[<expr pos:start="50:14" pos:end="50:21"><name pos:start="50:14" pos:end="50:21">SPR_LPCR</name></expr>]</index></name> <operator pos:start="50:24" pos:end="50:25">&amp;=</operator> <operator pos:start="50:27" pos:end="50:27">~</operator><name pos:start="50:28" pos:end="50:39"><name pos:start="50:28" pos:end="50:30">pcc</name><operator pos:start="50:31" pos:end="50:32">-&gt;</operator><name pos:start="50:33" pos:end="50:39">lpcr_pm</name></name></expr>;</expr_stmt>

</block_content>}</block></function></unit>
