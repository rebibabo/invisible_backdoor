<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7474.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">roq_dpcm_encode_frame</name><parameter_list pos:start="1:33" pos:end="3:75">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:71"><decl pos:start="1:57" pos:end="1:71"><type pos:start="1:57" pos:end="1:71"><name pos:start="1:57" pos:end="1:64">AVPacket</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:71">avpkt</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:53"><decl pos:start="3:34" pos:end="3:53"><type pos:start="3:34" pos:end="3:53"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:46">AVFrame</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:53">frame</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:74"><decl pos:start="3:56" pos:end="3:74"><type pos:start="3:56" pos:end="3:74"><name pos:start="3:56" pos:end="3:58">int</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:74">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="131:1">{<block_content pos:start="7:5" pos:end="129:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:17">stereo</name></decl>, <decl pos:start="7:20" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:28">data_size</name></decl>, <decl pos:start="7:31" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:31" pos:end="7:33">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:71"><decl pos:start="9:5" pos:end="9:70"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">int16_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">in</name> <init pos:start="9:23" pos:end="9:70">= <expr pos:start="9:25" pos:end="9:70"><ternary pos:start="9:25" pos:end="9:70"><condition pos:start="9:25" pos:end="9:31"><expr pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:29">frame</name></expr> ?</condition><then pos:start="9:33" pos:end="9:63"> <expr pos:start="9:33" pos:end="9:63"><operator pos:start="9:33" pos:end="9:33">(</operator><specifier pos:start="9:34" pos:end="9:38">const</specifier> <name pos:start="9:40" pos:end="9:46">int16_t</name> <operator pos:start="9:48" pos:end="9:48">*</operator><operator pos:start="9:49" pos:end="9:49">)</operator><name pos:start="9:50" pos:end="9:63"><name pos:start="9:50" pos:end="9:54">frame</name><operator pos:start="9:55" pos:end="9:56">-&gt;</operator><name pos:start="9:57" pos:end="9:60">data</name><index pos:start="9:61" pos:end="9:63">[<expr pos:start="9:62" pos:end="9:62"><literal type="number" pos:start="9:62" pos:end="9:62">0</literal></expr>]</index></name></expr> </then><else pos:start="9:65" pos:end="9:70">: <expr pos:start="9:67" pos:end="9:70"><name pos:start="9:67" pos:end="9:70">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">ROQDPCMContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:27">context</name> <init pos:start="13:29" pos:end="13:46">= <expr pos:start="13:31" pos:end="13:46"><name pos:start="13:31" pos:end="13:46"><name pos:start="13:31" pos:end="13:35">avctx</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:46">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:10">stereo</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <operator pos:start="17:14" pos:end="17:14">(</operator><name pos:start="17:15" pos:end="17:29"><name pos:start="17:15" pos:end="17:19">avctx</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:29">channels</name></name> <operator pos:start="17:31" pos:end="17:32">==</operator> <literal type="number" pos:start="17:34" pos:end="17:34">2</literal><operator pos:start="17:35" pos:end="17:35">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:42">(<expr pos:start="21:9" pos:end="21:41"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:11">in</name> <operator pos:start="21:13" pos:end="21:14">&amp;&amp;</operator> <name pos:start="21:16" pos:end="21:36"><name pos:start="21:16" pos:end="21:22">context</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:36">input_frames</name></name> <operator pos:start="21:38" pos:end="21:39">&gt;=</operator> <literal type="number" pos:start="21:41" pos:end="21:41">8</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="47:5"><if pos:start="27:5" pos:end="47:5">if <condition pos:start="27:8" pos:end="27:40">(<expr pos:start="27:9" pos:end="27:39"><name pos:start="27:9" pos:end="27:10">in</name> <operator pos:start="27:12" pos:end="27:13">&amp;&amp;</operator> <name pos:start="27:15" pos:end="27:35"><name pos:start="27:15" pos:end="27:21">context</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:35">input_frames</name></name> <operator pos:start="27:37" pos:end="27:37">&lt;</operator> <literal type="number" pos:start="27:39" pos:end="27:39">8</literal></expr>)</condition> <block pos:start="27:42" pos:end="47:5">{<block_content pos:start="29:9" pos:end="45:9">

        <expr_stmt pos:start="29:9" pos:end="31:70"><expr pos:start="29:9" pos:end="31:69"><call pos:start="29:9" pos:end="31:69"><name pos:start="29:9" pos:end="29:14">memcpy</name><argument_list pos:start="29:15" pos:end="31:69">(<argument pos:start="29:16" pos:end="29:82"><expr pos:start="29:16" pos:end="29:82"><operator pos:start="29:16" pos:end="29:16">&amp;</operator><name pos:start="29:17" pos:end="29:82"><name pos:start="29:17" pos:end="29:23">context</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:37">frame_buffer</name><index pos:start="29:38" pos:end="29:82">[<expr pos:start="29:39" pos:end="29:81"><name pos:start="29:39" pos:end="29:63"><name pos:start="29:39" pos:end="29:45">context</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:63">buffered_samples</name></name> <operator pos:start="29:65" pos:end="29:65">*</operator> <name pos:start="29:67" pos:end="29:81"><name pos:start="29:67" pos:end="29:71">avctx</name><operator pos:start="29:72" pos:end="29:73">-&gt;</operator><name pos:start="29:74" pos:end="29:81">channels</name></name></expr>]</index></name></expr></argument>,

               <argument pos:start="31:16" pos:end="31:17"><expr pos:start="31:16" pos:end="31:17"><name pos:start="31:16" pos:end="31:17">in</name></expr></argument>, <argument pos:start="31:20" pos:end="31:68"><expr pos:start="31:20" pos:end="31:68"><name pos:start="31:20" pos:end="31:36"><name pos:start="31:20" pos:end="31:24">avctx</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:36">frame_size</name></name> <operator pos:start="31:38" pos:end="31:38">*</operator> <name pos:start="31:40" pos:end="31:54"><name pos:start="31:40" pos:end="31:44">avctx</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:54">channels</name></name> <operator pos:start="31:56" pos:end="31:56">*</operator> <sizeof pos:start="31:58" pos:end="31:68">sizeof<argument_list pos:start="31:64" pos:end="31:68">(<argument pos:start="31:65" pos:end="31:67"><expr pos:start="31:65" pos:end="31:67"><operator pos:start="31:65" pos:end="31:65">*</operator><name pos:start="31:66" pos:end="31:67">in</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:15">context</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:33">buffered_samples</name></name> <operator pos:start="33:35" pos:end="33:36">+=</operator> <name pos:start="33:38" pos:end="33:54"><name pos:start="33:38" pos:end="33:42">avctx</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:54">frame_size</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:44"><if pos:start="35:9" pos:end="37:44">if <condition pos:start="35:12" pos:end="35:39">(<expr pos:start="35:13" pos:end="35:38"><name pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:19">context</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:33">input_frames</name></name> <operator pos:start="35:35" pos:end="35:36">==</operator> <literal type="number" pos:start="35:38" pos:end="35:38">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:44"><block_content pos:start="37:13" pos:end="37:44">

            <expr_stmt pos:start="37:13" pos:end="37:44"><expr pos:start="37:13" pos:end="37:43"><name pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:19">context</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:30">first_pts</name></name> <operator pos:start="37:32" pos:end="37:32">=</operator> <name pos:start="37:34" pos:end="37:43"><name pos:start="37:34" pos:end="37:38">frame</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:43">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:38">(<expr pos:start="39:13" pos:end="39:37"><name pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:19">context</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:33">input_frames</name></name> <operator pos:start="39:35" pos:end="39:35">&lt;</operator> <literal type="number" pos:start="39:37" pos:end="39:37">7</literal></expr>)</condition> <block pos:start="39:40" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:21">

            <expr_stmt pos:start="41:13" pos:end="41:36"><expr pos:start="41:13" pos:end="41:35"><name pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:19">context</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:33">input_frames</name></name><operator pos:start="41:34" pos:end="41:35">++</operator></expr>;</expr_stmt>

            <return pos:start="43:13" pos:end="43:21">return <expr pos:start="43:20" pos:end="43:20"><literal type="number" pos:start="43:20" pos:end="43:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:34">(<expr pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:15">context</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:29">input_frames</name></name> <operator pos:start="49:31" pos:end="49:31">&lt;</operator> <literal type="number" pos:start="49:33" pos:end="49:33">8</literal></expr>)</condition> <block pos:start="49:36" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:35">

        <expr_stmt pos:start="51:9" pos:end="51:35"><expr pos:start="51:9" pos:end="51:34"><name pos:start="51:9" pos:end="51:10">in</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <name pos:start="51:14" pos:end="51:34"><name pos:start="51:14" pos:end="51:20">context</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:34">frame_buffer</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:15">(<expr pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:14">stereo</name></expr>)</condition> <block pos:start="57:17" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:41">

        <expr_stmt pos:start="59:9" pos:end="59:41"><expr pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:15">context</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:27">lastSample</name><index pos:start="59:28" pos:end="59:30">[<expr pos:start="59:29" pos:end="59:29"><literal type="number" pos:start="59:29" pos:end="59:29">0</literal></expr>]</index></name> <operator pos:start="59:32" pos:end="59:33">&amp;=</operator> <literal type="number" pos:start="59:35" pos:end="59:40">0xFF00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:41"><expr pos:start="61:9" pos:end="61:40"><name pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:15">context</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:27">lastSample</name><index pos:start="61:28" pos:end="61:30">[<expr pos:start="61:29" pos:end="61:29"><literal type="number" pos:start="61:29" pos:end="61:29">1</literal></expr>]</index></name> <operator pos:start="61:32" pos:end="61:33">&amp;=</operator> <literal type="number" pos:start="61:35" pos:end="61:40">0xFF00</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="73:56"><if pos:start="67:5" pos:end="69:64">if <condition pos:start="67:8" pos:end="67:35">(<expr pos:start="67:9" pos:end="67:34"><name pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:15">context</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:29">input_frames</name></name> <operator pos:start="67:31" pos:end="67:32">==</operator> <literal type="number" pos:start="67:34" pos:end="67:34">7</literal></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:64"><block_content pos:start="69:9" pos:end="69:64">

        <expr_stmt pos:start="69:9" pos:end="69:64"><expr pos:start="69:9" pos:end="69:63"><name pos:start="69:9" pos:end="69:17">data_size</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:35"><name pos:start="69:21" pos:end="69:25">avctx</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:35">channels</name></name> <operator pos:start="69:37" pos:end="69:37">*</operator> <name pos:start="69:39" pos:end="69:63"><name pos:start="69:39" pos:end="69:45">context</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:63">buffered_samples</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="71:5" pos:end="73:56">else<block type="pseudo" pos:start="73:9" pos:end="73:56"><block_content pos:start="73:9" pos:end="73:56">

        <expr_stmt pos:start="73:9" pos:end="73:56"><expr pos:start="73:9" pos:end="73:55"><name pos:start="73:9" pos:end="73:17">data_size</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:35"><name pos:start="73:21" pos:end="73:25">avctx</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:35">channels</name></name> <operator pos:start="73:37" pos:end="73:37">*</operator> <name pos:start="73:39" pos:end="73:55"><name pos:start="73:39" pos:end="73:43">avctx</name><operator pos:start="73:44" pos:end="73:45">-&gt;</operator><name pos:start="73:46" pos:end="73:55">frame_size</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="77:5" pos:end="79:19"><if pos:start="77:5" pos:end="79:19">if <condition pos:start="77:8" pos:end="77:76">(<expr pos:start="77:9" pos:end="77:75"><operator pos:start="77:9" pos:end="77:9">(</operator><name pos:start="77:10" pos:end="77:12">ret</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <call pos:start="77:16" pos:end="77:74"><name pos:start="77:16" pos:end="77:31">ff_alloc_packet2</name><argument_list pos:start="77:32" pos:end="77:74">(<argument pos:start="77:33" pos:end="77:37"><expr pos:start="77:33" pos:end="77:37"><name pos:start="77:33" pos:end="77:37">avctx</name></expr></argument>, <argument pos:start="77:40" pos:end="77:44"><expr pos:start="77:40" pos:end="77:44"><name pos:start="77:40" pos:end="77:44">avpkt</name></expr></argument>, <argument pos:start="77:47" pos:end="77:73"><expr pos:start="77:47" pos:end="77:73"><name pos:start="77:47" pos:end="77:61">ROQ_HEADER_SIZE</name> <operator pos:start="77:63" pos:end="77:63">+</operator> <name pos:start="77:65" pos:end="77:73">data_size</name></expr></argument>)</argument_list></call><operator pos:start="77:75" pos:end="77:75">)</operator></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:19"><block_content pos:start="79:9" pos:end="79:19">

        <return pos:start="79:9" pos:end="79:19">return <expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:22"><expr pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:7">out</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <name pos:start="81:11" pos:end="81:21"><name pos:start="81:11" pos:end="81:15">avpkt</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:21">data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:52"><expr pos:start="85:5" pos:end="85:51"><call pos:start="85:5" pos:end="85:51"><name pos:start="85:5" pos:end="85:23">bytestream_put_byte</name><argument_list pos:start="85:24" pos:end="85:51">(<argument pos:start="85:25" pos:end="85:28"><expr pos:start="85:25" pos:end="85:28"><operator pos:start="85:25" pos:end="85:25">&amp;</operator><name pos:start="85:26" pos:end="85:28">out</name></expr></argument>, <argument pos:start="85:31" pos:end="85:50"><expr pos:start="85:31" pos:end="85:50"><ternary pos:start="85:31" pos:end="85:50"><condition pos:start="85:31" pos:end="85:38"><expr pos:start="85:31" pos:end="85:36"><name pos:start="85:31" pos:end="85:36">stereo</name></expr> ?</condition><then pos:start="85:40" pos:end="85:43"> <expr pos:start="85:40" pos:end="85:43"><literal type="number" pos:start="85:40" pos:end="85:43">0x21</literal></expr> </then><else pos:start="85:45" pos:end="85:50">: <expr pos:start="85:47" pos:end="85:50"><literal type="number" pos:start="85:47" pos:end="85:50">0x20</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:36"><expr pos:start="87:5" pos:end="87:35"><call pos:start="87:5" pos:end="87:35"><name pos:start="87:5" pos:end="87:23">bytestream_put_byte</name><argument_list pos:start="87:24" pos:end="87:35">(<argument pos:start="87:25" pos:end="87:28"><expr pos:start="87:25" pos:end="87:28"><operator pos:start="87:25" pos:end="87:25">&amp;</operator><name pos:start="87:26" pos:end="87:28">out</name></expr></argument>, <argument pos:start="87:31" pos:end="87:34"><expr pos:start="87:31" pos:end="87:34"><literal type="number" pos:start="87:31" pos:end="87:34">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:41"><expr pos:start="89:5" pos:end="89:40"><call pos:start="89:5" pos:end="89:40"><name pos:start="89:5" pos:end="89:23">bytestream_put_le32</name><argument_list pos:start="89:24" pos:end="89:40">(<argument pos:start="89:25" pos:end="89:28"><expr pos:start="89:25" pos:end="89:28"><operator pos:start="89:25" pos:end="89:25">&amp;</operator><name pos:start="89:26" pos:end="89:28">out</name></expr></argument>, <argument pos:start="89:31" pos:end="89:39"><expr pos:start="89:31" pos:end="89:39"><name pos:start="89:31" pos:end="89:39">data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="93:5" pos:end="101:58"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:15">(<expr pos:start="93:9" pos:end="93:14"><name pos:start="93:9" pos:end="93:14">stereo</name></expr>)</condition> <block pos:start="93:17" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:63">

        <expr_stmt pos:start="95:9" pos:end="95:63"><expr pos:start="95:9" pos:end="95:62"><call pos:start="95:9" pos:end="95:62"><name pos:start="95:9" pos:end="95:27">bytestream_put_byte</name><argument_list pos:start="95:28" pos:end="95:62">(<argument pos:start="95:29" pos:end="95:32"><expr pos:start="95:29" pos:end="95:32"><operator pos:start="95:29" pos:end="95:29">&amp;</operator><name pos:start="95:30" pos:end="95:32">out</name></expr></argument>, <argument pos:start="95:35" pos:end="95:61"><expr pos:start="95:35" pos:end="95:61"><operator pos:start="95:35" pos:end="95:35">(</operator><name pos:start="95:36" pos:end="95:57"><name pos:start="95:36" pos:end="95:42">context</name><operator pos:start="95:43" pos:end="95:44">-&gt;</operator><name pos:start="95:45" pos:end="95:54">lastSample</name><index pos:start="95:55" pos:end="95:57">[<expr pos:start="95:56" pos:end="95:56"><literal type="number" pos:start="95:56" pos:end="95:56">1</literal></expr>]</index></name><operator pos:start="95:58" pos:end="95:58">)</operator><operator pos:start="95:59" pos:end="95:60">&gt;&gt;</operator><literal type="number" pos:start="95:61" pos:end="95:61">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:63"><expr pos:start="97:9" pos:end="97:62"><call pos:start="97:9" pos:end="97:62"><name pos:start="97:9" pos:end="97:27">bytestream_put_byte</name><argument_list pos:start="97:28" pos:end="97:62">(<argument pos:start="97:29" pos:end="97:32"><expr pos:start="97:29" pos:end="97:32"><operator pos:start="97:29" pos:end="97:29">&amp;</operator><name pos:start="97:30" pos:end="97:32">out</name></expr></argument>, <argument pos:start="97:35" pos:end="97:61"><expr pos:start="97:35" pos:end="97:61"><operator pos:start="97:35" pos:end="97:35">(</operator><name pos:start="97:36" pos:end="97:57"><name pos:start="97:36" pos:end="97:42">context</name><operator pos:start="97:43" pos:end="97:44">-&gt;</operator><name pos:start="97:45" pos:end="97:54">lastSample</name><index pos:start="97:55" pos:end="97:57">[<expr pos:start="97:56" pos:end="97:56"><literal type="number" pos:start="97:56" pos:end="97:56">0</literal></expr>]</index></name><operator pos:start="97:58" pos:end="97:58">)</operator><operator pos:start="97:59" pos:end="97:60">&gt;&gt;</operator><literal type="number" pos:start="97:61" pos:end="97:61">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="101:58">else<block type="pseudo" pos:start="101:9" pos:end="101:58"><block_content pos:start="101:9" pos:end="101:58">

        <expr_stmt pos:start="101:9" pos:end="101:58"><expr pos:start="101:9" pos:end="101:57"><call pos:start="101:9" pos:end="101:57"><name pos:start="101:9" pos:end="101:27">bytestream_put_le16</name><argument_list pos:start="101:28" pos:end="101:57">(<argument pos:start="101:29" pos:end="101:32"><expr pos:start="101:29" pos:end="101:32"><operator pos:start="101:29" pos:end="101:29">&amp;</operator><name pos:start="101:30" pos:end="101:32">out</name></expr></argument>, <argument pos:start="101:35" pos:end="101:56"><expr pos:start="101:35" pos:end="101:56"><name pos:start="101:35" pos:end="101:56"><name pos:start="101:35" pos:end="101:41">context</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:53">lastSample</name><index pos:start="101:54" pos:end="101:56">[<expr pos:start="101:55" pos:end="101:55"><literal type="number" pos:start="101:55" pos:end="101:55">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="105:5" pos:end="105:34">/* Write the actual samples */</comment>

    <for pos:start="107:5" pos:end="109:66">for <control pos:start="107:9" pos:end="107:35">(<init pos:start="107:10" pos:end="107:15"><expr pos:start="107:10" pos:end="107:14"><name pos:start="107:10" pos:end="107:10">i</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <literal type="number" pos:start="107:14" pos:end="107:14">0</literal></expr>;</init> <condition pos:start="107:17" pos:end="107:30"><expr pos:start="107:17" pos:end="107:29"><name pos:start="107:17" pos:end="107:17">i</name> <operator pos:start="107:19" pos:end="107:19">&lt;</operator> <name pos:start="107:21" pos:end="107:29">data_size</name></expr>;</condition> <incr pos:start="107:32" pos:end="107:34"><expr pos:start="107:32" pos:end="107:34"><name pos:start="107:32" pos:end="107:32">i</name><operator pos:start="107:33" pos:end="107:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="109:9" pos:end="109:66"><block_content pos:start="109:9" pos:end="109:66">

        <expr_stmt pos:start="109:9" pos:end="109:66"><expr pos:start="109:9" pos:end="109:65"><operator pos:start="109:9" pos:end="109:9">*</operator><name pos:start="109:10" pos:end="109:12">out</name><operator pos:start="109:13" pos:end="109:14">++</operator> <operator pos:start="109:16" pos:end="109:16">=</operator> <call pos:start="109:18" pos:end="109:65"><name pos:start="109:18" pos:end="109:29">dpcm_predict</name><argument_list pos:start="109:30" pos:end="109:65">(<argument pos:start="109:31" pos:end="109:57"><expr pos:start="109:31" pos:end="109:57"><operator pos:start="109:31" pos:end="109:31">&amp;</operator><name pos:start="109:32" pos:end="109:57"><name pos:start="109:32" pos:end="109:38">context</name><operator pos:start="109:39" pos:end="109:40">-&gt;</operator><name pos:start="109:41" pos:end="109:50">lastSample</name><index pos:start="109:51" pos:end="109:57">[<expr pos:start="109:52" pos:end="109:56"><name pos:start="109:52" pos:end="109:52">i</name> <operator pos:start="109:54" pos:end="109:54">&amp;</operator> <literal type="number" pos:start="109:56" pos:end="109:56">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="109:60" pos:end="109:64"><expr pos:start="109:60" pos:end="109:64"><operator pos:start="109:60" pos:end="109:60">*</operator><name pos:start="109:61" pos:end="109:62">in</name><operator pos:start="109:63" pos:end="109:64">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="113:5" pos:end="113:83"><expr pos:start="113:5" pos:end="113:82"><name pos:start="113:5" pos:end="113:14"><name pos:start="113:5" pos:end="113:9">avpkt</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:14">pts</name></name>      <operator pos:start="113:21" pos:end="113:21">=</operator> <ternary pos:start="113:23" pos:end="113:82"><condition pos:start="113:23" pos:end="113:50"><expr pos:start="113:23" pos:end="113:48"><name pos:start="113:23" pos:end="113:43"><name pos:start="113:23" pos:end="113:29">context</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:43">input_frames</name></name> <operator pos:start="113:45" pos:end="113:46">&lt;=</operator> <literal type="number" pos:start="113:48" pos:end="113:48">7</literal></expr> ?</condition><then pos:start="113:52" pos:end="113:69"> <expr pos:start="113:52" pos:end="113:69"><name pos:start="113:52" pos:end="113:69"><name pos:start="113:52" pos:end="113:58">context</name><operator pos:start="113:59" pos:end="113:60">-&gt;</operator><name pos:start="113:61" pos:end="113:69">first_pts</name></name></expr> </then><else pos:start="113:71" pos:end="113:82">: <expr pos:start="113:73" pos:end="113:82"><name pos:start="113:73" pos:end="113:82"><name pos:start="113:73" pos:end="113:77">frame</name><operator pos:start="113:78" pos:end="113:79">-&gt;</operator><name pos:start="113:80" pos:end="113:82">pts</name></name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:50"><expr pos:start="115:5" pos:end="115:49"><name pos:start="115:5" pos:end="115:19"><name pos:start="115:5" pos:end="115:9">avpkt</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:19">duration</name></name> <operator pos:start="115:21" pos:end="115:21">=</operator> <name pos:start="115:23" pos:end="115:31">data_size</name> <operator pos:start="115:33" pos:end="115:33">/</operator> <name pos:start="115:35" pos:end="115:49"><name pos:start="115:35" pos:end="115:39">avctx</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:49">channels</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:28"><expr pos:start="119:5" pos:end="119:27"><name pos:start="119:5" pos:end="119:25"><name pos:start="119:5" pos:end="119:11">context</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:25">input_frames</name></name><operator pos:start="119:26" pos:end="119:27">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="123:64"><if pos:start="121:5" pos:end="123:64">if <condition pos:start="121:8" pos:end="121:12">(<expr pos:start="121:9" pos:end="121:11"><operator pos:start="121:9" pos:end="121:9">!</operator><name pos:start="121:10" pos:end="121:11">in</name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:64"><block_content pos:start="123:9" pos:end="123:64">

        <expr_stmt pos:start="123:9" pos:end="123:64"><expr pos:start="123:9" pos:end="123:63"><name pos:start="123:9" pos:end="123:29"><name pos:start="123:9" pos:end="123:15">context</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:29">input_frames</name></name> <operator pos:start="123:31" pos:end="123:31">=</operator> <call pos:start="123:33" pos:end="123:63"><name pos:start="123:33" pos:end="123:37">FFMAX</name><argument_list pos:start="123:38" pos:end="123:63">(<argument pos:start="123:39" pos:end="123:59"><expr pos:start="123:39" pos:end="123:59"><name pos:start="123:39" pos:end="123:59"><name pos:start="123:39" pos:end="123:45">context</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:59">input_frames</name></name></expr></argument>, <argument pos:start="123:62" pos:end="123:62"><expr pos:start="123:62" pos:end="123:62"><literal type="number" pos:start="123:62" pos:end="123:62">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:24"><expr pos:start="127:5" pos:end="127:23"><operator pos:start="127:5" pos:end="127:5">*</operator><name pos:start="127:6" pos:end="127:19">got_packet_ptr</name> <operator pos:start="127:21" pos:end="127:21">=</operator> <literal type="number" pos:start="127:23" pos:end="127:23">1</literal></expr>;</expr_stmt>

    <return pos:start="129:5" pos:end="129:13">return <expr pos:start="129:12" pos:end="129:12"><literal type="number" pos:start="129:12" pos:end="129:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
