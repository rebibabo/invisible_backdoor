<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/715.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">ppc_hash64_pte_prot</name><parameter_list pos:start="1:31" pos:end="3:68">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:41">PowerPCCPU</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">cpu</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:45"><decl pos:start="3:32" pos:end="3:45"><type pos:start="3:32" pos:end="3:45"><name pos:start="3:32" pos:end="3:40">ppc_slb_t</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">slb</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:67"><decl pos:start="3:48" pos:end="3:67"><type pos:start="3:48" pos:end="3:67"><name pos:start="3:48" pos:end="3:63">ppc_hash_pte64_t</name></type> <name pos:start="3:65" pos:end="3:67">pte</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:16">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CPUPPCState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">env</name> <init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:15">pp</name></decl>, <decl pos:start="9:18" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:18" pos:end="9:20">key</name></decl>;</decl_stmt>

    <comment type="block" pos:start="11:5" pos:end="13:37">/* Some pp bit combinations have undefined behaviour, so default

     * to no access in those cases */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">prot</name> <init pos:start="15:14" pos:end="15:16">= <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="21:42"><expr pos:start="19:5" pos:end="21:41"><name pos:start="19:5" pos:end="19:7">key</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <operator pos:start="19:11" pos:end="19:11">!</operator><operator pos:start="19:12" pos:end="19:12">!</operator><operator pos:start="19:13" pos:end="19:13">(</operator><ternary pos:start="19:14" pos:end="21:40"><condition pos:start="19:14" pos:end="19:21"><expr pos:start="19:14" pos:end="19:19"><name pos:start="19:14" pos:end="19:19">msr_pr</name></expr> ?</condition><then pos:start="19:23" pos:end="19:47"> <expr pos:start="19:23" pos:end="19:47"><operator pos:start="19:23" pos:end="19:23">(</operator><name pos:start="19:24" pos:end="19:32"><name pos:start="19:24" pos:end="19:26">slb</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:32">vsid</name></name> <operator pos:start="19:34" pos:end="19:34">&amp;</operator> <name pos:start="19:36" pos:end="19:46">SLB_VSID_KP</name><operator pos:start="19:47" pos:end="19:47">)</operator></expr>

             </then><else pos:start="21:14" pos:end="21:40">: <expr pos:start="21:16" pos:end="21:40"><operator pos:start="21:16" pos:end="21:16">(</operator><name pos:start="21:17" pos:end="21:25"><name pos:start="21:17" pos:end="21:19">slb</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:25">vsid</name></name> <operator pos:start="21:27" pos:end="21:27">&amp;</operator> <name pos:start="21:29" pos:end="21:39">SLB_VSID_KS</name><operator pos:start="21:40" pos:end="21:40">)</operator></expr></else></ternary><operator pos:start="21:41" pos:end="21:41">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:70"><expr pos:start="23:5" pos:end="23:69"><name pos:start="23:5" pos:end="23:6">pp</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <operator pos:start="23:10" pos:end="23:10">(</operator><name pos:start="23:11" pos:end="23:18"><name pos:start="23:11" pos:end="23:13">pte</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:18">pte1</name></name> <operator pos:start="23:20" pos:end="23:20">&amp;</operator> <name pos:start="23:22" pos:end="23:32">HPTE64_R_PP</name><operator pos:start="23:33" pos:end="23:33">)</operator> <operator pos:start="23:35" pos:end="23:35">|</operator> <operator pos:start="23:37" pos:end="23:37">(</operator><operator pos:start="23:38" pos:end="23:38">(</operator><name pos:start="23:39" pos:end="23:46"><name pos:start="23:39" pos:end="23:41">pte</name><operator pos:start="23:42" pos:end="23:42">.</operator><name pos:start="23:43" pos:end="23:46">pte1</name></name> <operator pos:start="23:48" pos:end="23:48">&amp;</operator> <name pos:start="23:50" pos:end="23:61">HPTE64_R_PP0</name><operator pos:start="23:62" pos:end="23:62">)</operator> <operator pos:start="23:64" pos:end="23:65">&gt;&gt;</operator> <literal type="number" pos:start="23:67" pos:end="23:68">61</literal><operator pos:start="23:69" pos:end="23:69">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="83:5"><if pos:start="27:5" pos:end="53:5">if <condition pos:start="27:8" pos:end="27:17">(<expr pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:11">key</name> <operator pos:start="27:13" pos:end="27:14">==</operator> <literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>)</condition> <block pos:start="27:19" pos:end="53:5">{<block_content pos:start="29:9" pos:end="51:9">

        <switch pos:start="29:9" pos:end="51:9">switch <condition pos:start="29:16" pos:end="29:19">(<expr pos:start="29:17" pos:end="29:18"><name pos:start="29:17" pos:end="29:18">pp</name></expr>)</condition> <block pos:start="29:21" pos:end="51:9">{<block_content pos:start="31:9" pos:end="49:18">

        <case pos:start="31:9" pos:end="31:17">case <expr pos:start="31:14" pos:end="31:16"><literal type="number" pos:start="31:14" pos:end="31:16">0x0</literal></expr>:</case>

        <case pos:start="33:9" pos:end="33:17">case <expr pos:start="33:14" pos:end="33:16"><literal type="number" pos:start="33:14" pos:end="33:16">0x1</literal></expr>:</case>

        <case pos:start="35:9" pos:end="35:17">case <expr pos:start="35:14" pos:end="35:16"><literal type="number" pos:start="35:14" pos:end="35:16">0x2</literal></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:54"><expr pos:start="37:13" pos:end="37:53"><name pos:start="37:13" pos:end="37:16">prot</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <name pos:start="37:20" pos:end="37:28">PAGE_READ</name> <operator pos:start="37:30" pos:end="37:30">|</operator> <name pos:start="37:32" pos:end="37:41">PAGE_WRITE</name> <operator pos:start="37:43" pos:end="37:43">|</operator> <name pos:start="37:45" pos:end="37:53">PAGE_EXEC</name></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>



        <case pos:start="43:9" pos:end="43:17">case <expr pos:start="43:14" pos:end="43:16"><literal type="number" pos:start="43:14" pos:end="43:16">0x3</literal></expr>:</case>

        <case pos:start="45:9" pos:end="45:17">case <expr pos:start="45:14" pos:end="45:16"><literal type="number" pos:start="45:14" pos:end="45:16">0x6</literal></expr>:</case>

            <expr_stmt pos:start="47:13" pos:end="47:41"><expr pos:start="47:13" pos:end="47:40"><name pos:start="47:13" pos:end="47:16">prot</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:28">PAGE_READ</name> <operator pos:start="47:30" pos:end="47:30">|</operator> <name pos:start="47:32" pos:end="47:40">PAGE_EXEC</name></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="83:5">else <block pos:start="53:12" pos:end="83:5">{<block_content pos:start="55:9" pos:end="81:9">

        <switch pos:start="55:9" pos:end="81:9">switch <condition pos:start="55:16" pos:end="55:19">(<expr pos:start="55:17" pos:end="55:18"><name pos:start="55:17" pos:end="55:18">pp</name></expr>)</condition> <block pos:start="55:21" pos:end="81:9">{<block_content pos:start="57:9" pos:end="79:18">

        <case pos:start="57:9" pos:end="57:17">case <expr pos:start="57:14" pos:end="57:16"><literal type="number" pos:start="57:14" pos:end="57:16">0x0</literal></expr>:</case>

        <case pos:start="59:9" pos:end="59:17">case <expr pos:start="59:14" pos:end="59:16"><literal type="number" pos:start="59:14" pos:end="59:16">0x6</literal></expr>:</case>

            <break pos:start="61:13" pos:end="61:18">break;</break>



        <case pos:start="65:9" pos:end="65:17">case <expr pos:start="65:14" pos:end="65:16"><literal type="number" pos:start="65:14" pos:end="65:16">0x1</literal></expr>:</case>

        <case pos:start="67:9" pos:end="67:17">case <expr pos:start="67:14" pos:end="67:16"><literal type="number" pos:start="67:14" pos:end="67:16">0x3</literal></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:41"><expr pos:start="69:13" pos:end="69:40"><name pos:start="69:13" pos:end="69:16">prot</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:28">PAGE_READ</name> <operator pos:start="69:30" pos:end="69:30">|</operator> <name pos:start="69:32" pos:end="69:40">PAGE_EXEC</name></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>



        <case pos:start="75:9" pos:end="75:17">case <expr pos:start="75:14" pos:end="75:16"><literal type="number" pos:start="75:14" pos:end="75:16">0x2</literal></expr>:</case>

            <expr_stmt pos:start="77:13" pos:end="77:54"><expr pos:start="77:13" pos:end="77:53"><name pos:start="77:13" pos:end="77:16">prot</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <name pos:start="77:20" pos:end="77:28">PAGE_READ</name> <operator pos:start="77:30" pos:end="77:30">|</operator> <name pos:start="77:32" pos:end="77:41">PAGE_WRITE</name> <operator pos:start="77:43" pos:end="77:43">|</operator> <name pos:start="77:45" pos:end="77:53">PAGE_EXEC</name></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:57">/* No execute if either noexec or guarded bits set */</comment>

    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="91:36">(<expr pos:start="89:9" pos:end="91:35"><operator pos:start="89:9" pos:end="89:9">!</operator><operator pos:start="89:10" pos:end="89:10">(</operator><name pos:start="89:11" pos:end="89:18"><name pos:start="89:11" pos:end="89:13">pte</name><operator pos:start="89:14" pos:end="89:14">.</operator><name pos:start="89:15" pos:end="89:18">pte1</name></name> <operator pos:start="89:20" pos:end="89:20">&amp;</operator> <name pos:start="89:22" pos:end="89:31">HPTE64_R_N</name><operator pos:start="89:32" pos:end="89:32">)</operator> <operator pos:start="89:34" pos:end="89:35">||</operator> <operator pos:start="89:37" pos:end="89:37">(</operator><name pos:start="89:38" pos:end="89:45"><name pos:start="89:38" pos:end="89:40">pte</name><operator pos:start="89:41" pos:end="89:41">.</operator><name pos:start="89:42" pos:end="89:45">pte1</name></name> <operator pos:start="89:47" pos:end="89:47">&amp;</operator> <name pos:start="89:49" pos:end="89:58">HPTE64_R_G</name><operator pos:start="89:59" pos:end="89:59">)</operator>

        <operator pos:start="91:9" pos:end="91:10">||</operator> <operator pos:start="91:12" pos:end="91:12">(</operator><name pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:15">slb</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:21">vsid</name></name> <operator pos:start="91:23" pos:end="91:23">&amp;</operator> <name pos:start="91:25" pos:end="91:34">SLB_VSID_N</name><operator pos:start="91:35" pos:end="91:35">)</operator></expr>)</condition> <block pos:start="91:38" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:26">

        <expr_stmt pos:start="93:9" pos:end="93:26"><expr pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:12">prot</name> <operator pos:start="93:14" pos:end="93:15">|=</operator> <name pos:start="93:17" pos:end="93:25">PAGE_EXEC</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="99:5" pos:end="99:16">return <expr pos:start="99:12" pos:end="99:15"><name pos:start="99:12" pos:end="99:15">prot</name></expr>;</return>

</block_content>}</block></function>
</unit>
