<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11569.c" pos:tabs="8"><function pos:start="1:1" pos:end="263:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">mxf_write_index_table_segment</name><parameter_list pos:start="1:42" pos:end="1:61">(<parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:59"><name pos:start="1:43" pos:end="1:57">AVFormatContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="263:1">{<block_content pos:start="5:5" pos:end="261:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mxf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:33">temporal_reordering</name> <init pos:start="9:35" pos:end="9:37">= <expr pos:start="9:37" pos:end="9:37"><literal type="number" pos:start="9:37" pos:end="9:37">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">key_index</name> <init pos:start="11:19" pos:end="11:39">= <expr pos:start="11:21" pos:end="11:39"><name pos:start="11:21" pos:end="11:39"><name pos:start="11:21" pos:end="11:23">mxf</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:39">last_key_index</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:76"><expr pos:start="15:5" pos:end="15:75"><call pos:start="15:5" pos:end="15:75"><name pos:start="15:5" pos:end="15:10">av_log</name><argument_list pos:start="15:11" pos:end="15:75">(<argument pos:start="15:12" pos:end="15:12"><expr pos:start="15:12" pos:end="15:12"><name pos:start="15:12" pos:end="15:12">s</name></expr></argument>, <argument pos:start="15:15" pos:end="15:26"><expr pos:start="15:15" pos:end="15:26"><name pos:start="15:15" pos:end="15:26">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="15:29" pos:end="15:51"><expr pos:start="15:29" pos:end="15:51"><literal type="string" pos:start="15:29" pos:end="15:51">"edit units count %d\n"</literal></expr></argument>, <argument pos:start="15:54" pos:end="15:74"><expr pos:start="15:54" pos:end="15:74"><name pos:start="15:54" pos:end="15:74"><name pos:start="15:54" pos:end="15:56">mxf</name><operator pos:start="15:57" pos:end="15:58">-&gt;</operator><name pos:start="15:59" pos:end="15:74">edit_units_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="21:15"><if pos:start="19:5" pos:end="21:15">if <condition pos:start="19:8" pos:end="19:61">(<expr pos:start="19:9" pos:end="19:60"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:30"><name pos:start="19:10" pos:end="19:12">mxf</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:30">edit_units_count</name></name> <operator pos:start="19:32" pos:end="19:33">&amp;&amp;</operator> <operator pos:start="19:35" pos:end="19:35">!</operator><name pos:start="19:36" pos:end="19:60"><name pos:start="19:36" pos:end="19:38">mxf</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:60">edit_unit_byte_count</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:15"><block_content pos:start="21:9" pos:end="21:15">

        <return pos:start="21:9" pos:end="21:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:48"><expr pos:start="25:5" pos:end="25:47"><call pos:start="25:5" pos:end="25:47"><name pos:start="25:5" pos:end="25:14">avio_write</name><argument_list pos:start="25:15" pos:end="25:47">(<argument pos:start="25:16" pos:end="25:17"><expr pos:start="25:16" pos:end="25:17"><name pos:start="25:16" pos:end="25:17">pb</name></expr></argument>, <argument pos:start="25:20" pos:end="25:42"><expr pos:start="25:20" pos:end="25:42"><name pos:start="25:20" pos:end="25:42">index_table_segment_key</name></expr></argument>, <argument pos:start="25:45" pos:end="25:46"><expr pos:start="25:45" pos:end="25:46"><literal type="number" pos:start="25:45" pos:end="25:46">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="39:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:34">(<expr pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:11">mxf</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:33">edit_unit_byte_count</name></name></expr>)</condition> <block pos:start="29:36" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:38">

        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><call pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:29">klv_encode_ber_length</name><argument_list pos:start="31:30" pos:end="31:37">(<argument pos:start="31:31" pos:end="31:32"><expr pos:start="31:31" pos:end="31:32"><name pos:start="31:31" pos:end="31:32">pb</name></expr></argument>, <argument pos:start="31:35" pos:end="31:36"><expr pos:start="31:35" pos:end="31:36"><literal type="number" pos:start="31:35" pos:end="31:36">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="39:5">else <block pos:start="33:12" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:80">

        <expr_stmt pos:start="35:9" pos:end="37:80"><expr pos:start="35:9" pos:end="37:79"><call pos:start="35:9" pos:end="37:79"><name pos:start="35:9" pos:end="35:29">klv_encode_ber_length</name><argument_list pos:start="35:30" pos:end="37:79">(<argument pos:start="35:31" pos:end="35:32"><expr pos:start="35:31" pos:end="35:32"><name pos:start="35:31" pos:end="35:32">pb</name></expr></argument>, <argument pos:start="35:35" pos:end="37:78"><expr pos:start="35:35" pos:end="37:78"><literal type="number" pos:start="35:35" pos:end="35:38">85</literal> <operator pos:start="35:38" pos:end="35:38">+</operator> <literal type="number" pos:start="35:40" pos:end="35:42">12</literal><operator pos:start="35:42" pos:end="35:42">+</operator><operator pos:start="35:43" pos:end="35:43">(</operator><name pos:start="35:44" pos:end="35:56"><name pos:start="35:44" pos:end="35:44">s</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:56">nb_streams</name></name><operator pos:start="35:57" pos:end="35:57">+</operator><literal type="number" pos:start="35:58" pos:end="35:58">1</literal><operator pos:start="35:59" pos:end="35:59">)</operator><operator pos:start="35:60" pos:end="35:60">*</operator><literal type="number" pos:start="35:61" pos:end="35:63">6</literal> <operator pos:start="35:63" pos:end="35:63">+</operator>

                              <literal type="number" pos:start="37:31" pos:end="37:33">12</literal><operator pos:start="37:33" pos:end="37:33">+</operator><name pos:start="37:34" pos:end="37:54"><name pos:start="37:34" pos:end="37:36">mxf</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:54">edit_units_count</name></name><operator pos:start="37:55" pos:end="37:55">*</operator><operator pos:start="37:56" pos:end="37:56">(</operator><literal type="number" pos:start="37:57" pos:end="37:59">11</literal><operator pos:start="37:59" pos:end="37:59">+</operator><name pos:start="37:60" pos:end="37:75"><name pos:start="37:60" pos:end="37:62">mxf</name><operator pos:start="37:63" pos:end="37:64">-&gt;</operator><name pos:start="37:65" pos:end="37:75">slice_count</name></name><operator pos:start="37:76" pos:end="37:76">*</operator><literal type="number" pos:start="37:77" pos:end="37:77">4</literal><operator pos:start="37:78" pos:end="37:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="43:5" pos:end="43:18">// instance id</comment>

    <expr_stmt pos:start="45:5" pos:end="45:40"><expr pos:start="45:5" pos:end="45:39"><call pos:start="45:5" pos:end="45:39"><name pos:start="45:5" pos:end="45:23">mxf_write_local_tag</name><argument_list pos:start="45:24" pos:end="45:39">(<argument pos:start="45:25" pos:end="45:26"><expr pos:start="45:25" pos:end="45:26"><name pos:start="45:25" pos:end="45:26">pb</name></expr></argument>, <argument pos:start="45:29" pos:end="45:30"><expr pos:start="45:29" pos:end="45:30"><literal type="number" pos:start="45:29" pos:end="45:30">16</literal></expr></argument>, <argument pos:start="45:33" pos:end="45:38"><expr pos:start="45:33" pos:end="45:38"><literal type="number" pos:start="45:33" pos:end="45:38">0x3C0A</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:45"><expr pos:start="47:5" pos:end="47:44"><call pos:start="47:5" pos:end="47:44"><name pos:start="47:5" pos:end="47:18">mxf_write_uuid</name><argument_list pos:start="47:19" pos:end="47:44">(<argument pos:start="47:20" pos:end="47:21"><expr pos:start="47:20" pos:end="47:21"><name pos:start="47:20" pos:end="47:21">pb</name></expr></argument>, <argument pos:start="47:24" pos:end="47:40"><expr pos:start="47:24" pos:end="47:40"><name pos:start="47:24" pos:end="47:40">IndexTableSegment</name></expr></argument>, <argument pos:start="47:43" pos:end="47:43"><expr pos:start="47:43" pos:end="47:43"><literal type="number" pos:start="47:43" pos:end="47:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="51:5" pos:end="51:22">// index edit rate</comment>

    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><call pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:23">mxf_write_local_tag</name><argument_list pos:start="53:24" pos:end="53:38">(<argument pos:start="53:25" pos:end="53:26"><expr pos:start="53:25" pos:end="53:26"><name pos:start="53:25" pos:end="53:26">pb</name></expr></argument>, <argument pos:start="53:29" pos:end="53:29"><expr pos:start="53:29" pos:end="53:29"><literal type="number" pos:start="53:29" pos:end="53:29">8</literal></expr></argument>, <argument pos:start="53:32" pos:end="53:37"><expr pos:start="53:32" pos:end="53:37"><literal type="number" pos:start="53:32" pos:end="53:37">0x3F0B</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:38"><expr pos:start="55:5" pos:end="55:37"><call pos:start="55:5" pos:end="55:37"><name pos:start="55:5" pos:end="55:13">avio_wb32</name><argument_list pos:start="55:14" pos:end="55:37">(<argument pos:start="55:15" pos:end="55:16"><expr pos:start="55:15" pos:end="55:16"><name pos:start="55:15" pos:end="55:16">pb</name></expr></argument>, <argument pos:start="55:19" pos:end="55:36"><expr pos:start="55:19" pos:end="55:36"><name pos:start="55:19" pos:end="55:36"><name pos:start="55:19" pos:end="55:21">mxf</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:32">time_base</name><operator pos:start="55:33" pos:end="55:33">.</operator><name pos:start="55:34" pos:end="55:36">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:38"><expr pos:start="57:5" pos:end="57:37"><call pos:start="57:5" pos:end="57:37"><name pos:start="57:5" pos:end="57:13">avio_wb32</name><argument_list pos:start="57:14" pos:end="57:37">(<argument pos:start="57:15" pos:end="57:16"><expr pos:start="57:15" pos:end="57:16"><name pos:start="57:15" pos:end="57:16">pb</name></expr></argument>, <argument pos:start="57:19" pos:end="57:36"><expr pos:start="57:19" pos:end="57:36"><name pos:start="57:19" pos:end="57:36"><name pos:start="57:19" pos:end="57:21">mxf</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:32">time_base</name><operator pos:start="57:33" pos:end="57:33">.</operator><name pos:start="57:34" pos:end="57:36">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="61:5" pos:end="61:27">// index start position</comment>

    <expr_stmt pos:start="63:5" pos:end="63:39"><expr pos:start="63:5" pos:end="63:38"><call pos:start="63:5" pos:end="63:38"><name pos:start="63:5" pos:end="63:23">mxf_write_local_tag</name><argument_list pos:start="63:24" pos:end="63:38">(<argument pos:start="63:25" pos:end="63:26"><expr pos:start="63:25" pos:end="63:26"><name pos:start="63:25" pos:end="63:26">pb</name></expr></argument>, <argument pos:start="63:29" pos:end="63:29"><expr pos:start="63:29" pos:end="63:29"><literal type="number" pos:start="63:29" pos:end="63:29">8</literal></expr></argument>, <argument pos:start="63:32" pos:end="63:37"><expr pos:start="63:32" pos:end="63:37"><literal type="number" pos:start="63:32" pos:end="63:37">0x3F0C</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:47"><expr pos:start="65:5" pos:end="65:46"><call pos:start="65:5" pos:end="65:46"><name pos:start="65:5" pos:end="65:13">avio_wb64</name><argument_list pos:start="65:14" pos:end="65:46">(<argument pos:start="65:15" pos:end="65:16"><expr pos:start="65:15" pos:end="65:16"><name pos:start="65:15" pos:end="65:16">pb</name></expr></argument>, <argument pos:start="65:19" pos:end="65:45"><expr pos:start="65:19" pos:end="65:45"><name pos:start="65:19" pos:end="65:45"><name pos:start="65:19" pos:end="65:21">mxf</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:45">last_indexed_edit_unit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="69:5" pos:end="69:21">// index duration</comment>

    <expr_stmt pos:start="71:5" pos:end="71:39"><expr pos:start="71:5" pos:end="71:38"><call pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:23">mxf_write_local_tag</name><argument_list pos:start="71:24" pos:end="71:38">(<argument pos:start="71:25" pos:end="71:26"><expr pos:start="71:25" pos:end="71:26"><name pos:start="71:25" pos:end="71:26">pb</name></expr></argument>, <argument pos:start="71:29" pos:end="71:29"><expr pos:start="71:29" pos:end="71:29"><literal type="number" pos:start="71:29" pos:end="71:29">8</literal></expr></argument>, <argument pos:start="71:32" pos:end="71:37"><expr pos:start="71:32" pos:end="71:37"><literal type="number" pos:start="71:32" pos:end="71:37">0x3F0D</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="79:45"><if pos:start="73:5" pos:end="75:25">if <condition pos:start="73:8" pos:end="73:34">(<expr pos:start="73:9" pos:end="73:33"><name pos:start="73:9" pos:end="73:33"><name pos:start="73:9" pos:end="73:11">mxf</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:33">edit_unit_byte_count</name></name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:25"><block_content pos:start="75:9" pos:end="75:25">

        <expr_stmt pos:start="75:9" pos:end="75:25"><expr pos:start="75:9" pos:end="75:24"><call pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:17">avio_wb64</name><argument_list pos:start="75:18" pos:end="75:24">(<argument pos:start="75:19" pos:end="75:20"><expr pos:start="75:19" pos:end="75:20"><name pos:start="75:19" pos:end="75:20">pb</name></expr></argument>, <argument pos:start="75:23" pos:end="75:23"><expr pos:start="75:23" pos:end="75:23"><literal type="number" pos:start="75:23" pos:end="75:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="75:27" pos:end="75:63">// index table covers whole container</comment>

    <else pos:start="77:5" pos:end="79:45">else<block type="pseudo" pos:start="79:9" pos:end="79:45"><block_content pos:start="79:9" pos:end="79:45">

        <expr_stmt pos:start="79:9" pos:end="79:45"><expr pos:start="79:9" pos:end="79:44"><call pos:start="79:9" pos:end="79:44"><name pos:start="79:9" pos:end="79:17">avio_wb64</name><argument_list pos:start="79:18" pos:end="79:44">(<argument pos:start="79:19" pos:end="79:20"><expr pos:start="79:19" pos:end="79:20"><name pos:start="79:19" pos:end="79:20">pb</name></expr></argument>, <argument pos:start="79:23" pos:end="79:43"><expr pos:start="79:23" pos:end="79:43"><name pos:start="79:23" pos:end="79:43"><name pos:start="79:23" pos:end="79:25">mxf</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:43">edit_units_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="line" pos:start="83:5" pos:end="83:27">// edit unit byte count</comment>

    <expr_stmt pos:start="85:5" pos:end="85:39"><expr pos:start="85:5" pos:end="85:38"><call pos:start="85:5" pos:end="85:38"><name pos:start="85:5" pos:end="85:23">mxf_write_local_tag</name><argument_list pos:start="85:24" pos:end="85:38">(<argument pos:start="85:25" pos:end="85:26"><expr pos:start="85:25" pos:end="85:26"><name pos:start="85:25" pos:end="85:26">pb</name></expr></argument>, <argument pos:start="85:29" pos:end="85:29"><expr pos:start="85:29" pos:end="85:29"><literal type="number" pos:start="85:29" pos:end="85:29">4</literal></expr></argument>, <argument pos:start="85:32" pos:end="85:37"><expr pos:start="85:32" pos:end="85:37"><literal type="number" pos:start="85:32" pos:end="85:37">0x3F05</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:45"><expr pos:start="87:5" pos:end="87:44"><call pos:start="87:5" pos:end="87:44"><name pos:start="87:5" pos:end="87:13">avio_wb32</name><argument_list pos:start="87:14" pos:end="87:44">(<argument pos:start="87:15" pos:end="87:16"><expr pos:start="87:15" pos:end="87:16"><name pos:start="87:15" pos:end="87:16">pb</name></expr></argument>, <argument pos:start="87:19" pos:end="87:43"><expr pos:start="87:19" pos:end="87:43"><name pos:start="87:19" pos:end="87:43"><name pos:start="87:19" pos:end="87:21">mxf</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:43">edit_unit_byte_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="91:5" pos:end="91:16">// index sid</comment>

    <expr_stmt pos:start="93:5" pos:end="93:39"><expr pos:start="93:5" pos:end="93:38"><call pos:start="93:5" pos:end="93:38"><name pos:start="93:5" pos:end="93:23">mxf_write_local_tag</name><argument_list pos:start="93:24" pos:end="93:38">(<argument pos:start="93:25" pos:end="93:26"><expr pos:start="93:25" pos:end="93:26"><name pos:start="93:25" pos:end="93:26">pb</name></expr></argument>, <argument pos:start="93:29" pos:end="93:29"><expr pos:start="93:29" pos:end="93:29"><literal type="number" pos:start="93:29" pos:end="93:29">4</literal></expr></argument>, <argument pos:start="93:32" pos:end="93:37"><expr pos:start="93:32" pos:end="93:37"><literal type="number" pos:start="93:32" pos:end="93:37">0x3F06</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:21"><expr pos:start="95:5" pos:end="95:20"><call pos:start="95:5" pos:end="95:20"><name pos:start="95:5" pos:end="95:13">avio_wb32</name><argument_list pos:start="95:14" pos:end="95:20">(<argument pos:start="95:15" pos:end="95:16"><expr pos:start="95:15" pos:end="95:16"><name pos:start="95:15" pos:end="95:16">pb</name></expr></argument>, <argument pos:start="95:19" pos:end="95:19"><expr pos:start="95:19" pos:end="95:19"><literal type="number" pos:start="95:19" pos:end="95:19">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="99:5" pos:end="99:15">// body sid</comment>

    <expr_stmt pos:start="101:5" pos:end="101:39"><expr pos:start="101:5" pos:end="101:38"><call pos:start="101:5" pos:end="101:38"><name pos:start="101:5" pos:end="101:23">mxf_write_local_tag</name><argument_list pos:start="101:24" pos:end="101:38">(<argument pos:start="101:25" pos:end="101:26"><expr pos:start="101:25" pos:end="101:26"><name pos:start="101:25" pos:end="101:26">pb</name></expr></argument>, <argument pos:start="101:29" pos:end="101:29"><expr pos:start="101:29" pos:end="101:29"><literal type="number" pos:start="101:29" pos:end="101:29">4</literal></expr></argument>, <argument pos:start="101:32" pos:end="101:37"><expr pos:start="101:32" pos:end="101:37"><literal type="number" pos:start="101:32" pos:end="101:37">0x3F07</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:21"><expr pos:start="103:5" pos:end="103:20"><call pos:start="103:5" pos:end="103:20"><name pos:start="103:5" pos:end="103:13">avio_wb32</name><argument_list pos:start="103:14" pos:end="103:20">(<argument pos:start="103:15" pos:end="103:16"><expr pos:start="103:15" pos:end="103:16"><name pos:start="103:15" pos:end="103:16">pb</name></expr></argument>, <argument pos:start="103:19" pos:end="103:19"><expr pos:start="103:19" pos:end="103:19"><literal type="number" pos:start="103:19" pos:end="103:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="107:5" pos:end="261:5"><if pos:start="107:5" pos:end="261:5">if <condition pos:start="107:8" pos:end="107:35">(<expr pos:start="107:9" pos:end="107:34"><operator pos:start="107:9" pos:end="107:9">!</operator><name pos:start="107:10" pos:end="107:34"><name pos:start="107:10" pos:end="107:12">mxf</name><operator pos:start="107:13" pos:end="107:14">-&gt;</operator><name pos:start="107:15" pos:end="107:34">edit_unit_byte_count</name></name></expr>)</condition> <block pos:start="107:37" pos:end="261:5">{<block_content pos:start="111:9" pos:end="259:34">

        <comment type="line" pos:start="109:9" pos:end="109:31">// real slice count - 1</comment>

        <expr_stmt pos:start="111:9" pos:end="111:43"><expr pos:start="111:9" pos:end="111:42"><call pos:start="111:9" pos:end="111:42"><name pos:start="111:9" pos:end="111:27">mxf_write_local_tag</name><argument_list pos:start="111:28" pos:end="111:42">(<argument pos:start="111:29" pos:end="111:30"><expr pos:start="111:29" pos:end="111:30"><name pos:start="111:29" pos:end="111:30">pb</name></expr></argument>, <argument pos:start="111:33" pos:end="111:33"><expr pos:start="111:33" pos:end="111:33"><literal type="number" pos:start="111:33" pos:end="111:33">1</literal></expr></argument>, <argument pos:start="111:36" pos:end="111:41"><expr pos:start="111:36" pos:end="111:41"><literal type="number" pos:start="111:36" pos:end="111:41">0x3F08</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:38"><expr pos:start="113:9" pos:end="113:37"><call pos:start="113:9" pos:end="113:37"><name pos:start="113:9" pos:end="113:15">avio_w8</name><argument_list pos:start="113:16" pos:end="113:37">(<argument pos:start="113:17" pos:end="113:18"><expr pos:start="113:17" pos:end="113:18"><name pos:start="113:17" pos:end="113:18">pb</name></expr></argument>, <argument pos:start="113:21" pos:end="113:36"><expr pos:start="113:21" pos:end="113:36"><name pos:start="113:21" pos:end="113:36"><name pos:start="113:21" pos:end="113:23">mxf</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:36">slice_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="117:9" pos:end="117:28">// delta entry array</comment>

        <expr_stmt pos:start="119:9" pos:end="119:65"><expr pos:start="119:9" pos:end="119:64"><call pos:start="119:9" pos:end="119:64"><name pos:start="119:9" pos:end="119:27">mxf_write_local_tag</name><argument_list pos:start="119:28" pos:end="119:64">(<argument pos:start="119:29" pos:end="119:30"><expr pos:start="119:29" pos:end="119:30"><name pos:start="119:29" pos:end="119:30">pb</name></expr></argument>, <argument pos:start="119:33" pos:end="119:55"><expr pos:start="119:33" pos:end="119:55"><literal type="number" pos:start="119:33" pos:end="119:35">8</literal> <operator pos:start="119:35" pos:end="119:35">+</operator> <operator pos:start="119:37" pos:end="119:37">(</operator><name pos:start="119:38" pos:end="119:50"><name pos:start="119:38" pos:end="119:38">s</name><operator pos:start="119:39" pos:end="119:40">-&gt;</operator><name pos:start="119:41" pos:end="119:50">nb_streams</name></name><operator pos:start="119:51" pos:end="119:51">+</operator><literal type="number" pos:start="119:52" pos:end="119:52">1</literal><operator pos:start="119:53" pos:end="119:53">)</operator><operator pos:start="119:54" pos:end="119:54">*</operator><literal type="number" pos:start="119:55" pos:end="119:55">6</literal></expr></argument>, <argument pos:start="119:58" pos:end="119:63"><expr pos:start="119:58" pos:end="119:63"><literal type="number" pos:start="119:58" pos:end="119:63">0x3F09</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:39"><expr pos:start="121:9" pos:end="121:38"><call pos:start="121:9" pos:end="121:38"><name pos:start="121:9" pos:end="121:17">avio_wb32</name><argument_list pos:start="121:18" pos:end="121:38">(<argument pos:start="121:19" pos:end="121:20"><expr pos:start="121:19" pos:end="121:20"><name pos:start="121:19" pos:end="121:20">pb</name></expr></argument>, <argument pos:start="121:23" pos:end="121:37"><expr pos:start="121:23" pos:end="121:37"><name pos:start="121:23" pos:end="121:35"><name pos:start="121:23" pos:end="121:23">s</name><operator pos:start="121:24" pos:end="121:25">-&gt;</operator><name pos:start="121:26" pos:end="121:35">nb_streams</name></name><operator pos:start="121:36" pos:end="121:36">+</operator><literal type="number" pos:start="121:37" pos:end="121:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="121:41" pos:end="121:57">// num of entries</comment>

        <expr_stmt pos:start="123:9" pos:end="123:25"><expr pos:start="123:9" pos:end="123:24"><call pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:17">avio_wb32</name><argument_list pos:start="123:18" pos:end="123:24">(<argument pos:start="123:19" pos:end="123:20"><expr pos:start="123:19" pos:end="123:20"><name pos:start="123:19" pos:end="123:20">pb</name></expr></argument>, <argument pos:start="123:23" pos:end="123:23"><expr pos:start="123:23" pos:end="123:23"><literal type="number" pos:start="123:23" pos:end="123:23">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>               <comment type="line" pos:start="123:41" pos:end="123:60">// size of one entry</comment>

        <comment type="line" pos:start="125:9" pos:end="125:40">// write system item delta entry</comment>

        <expr_stmt pos:start="127:9" pos:end="127:23"><expr pos:start="127:9" pos:end="127:22"><call pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:15">avio_w8</name><argument_list pos:start="127:16" pos:end="127:22">(<argument pos:start="127:17" pos:end="127:18"><expr pos:start="127:17" pos:end="127:18"><name pos:start="127:17" pos:end="127:18">pb</name></expr></argument>, <argument pos:start="127:21" pos:end="127:21"><expr pos:start="127:21" pos:end="127:21"><literal type="number" pos:start="127:21" pos:end="127:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:23"><expr pos:start="129:9" pos:end="129:22"><call pos:start="129:9" pos:end="129:22"><name pos:start="129:9" pos:end="129:15">avio_w8</name><argument_list pos:start="129:16" pos:end="129:22">(<argument pos:start="129:17" pos:end="129:18"><expr pos:start="129:17" pos:end="129:18"><name pos:start="129:17" pos:end="129:18">pb</name></expr></argument>, <argument pos:start="129:21" pos:end="129:21"><expr pos:start="129:21" pos:end="129:21"><literal type="number" pos:start="129:21" pos:end="129:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="129:25" pos:end="129:38">// slice entry</comment>

        <expr_stmt pos:start="131:9" pos:end="131:25"><expr pos:start="131:9" pos:end="131:24"><call pos:start="131:9" pos:end="131:24"><name pos:start="131:9" pos:end="131:17">avio_wb32</name><argument_list pos:start="131:18" pos:end="131:24">(<argument pos:start="131:19" pos:end="131:20"><expr pos:start="131:19" pos:end="131:20"><name pos:start="131:19" pos:end="131:20">pb</name></expr></argument>, <argument pos:start="131:23" pos:end="131:23"><expr pos:start="131:23" pos:end="131:23"><literal type="number" pos:start="131:23" pos:end="131:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="131:27" pos:end="131:42">// element delta</comment>

        <for pos:start="133:9" pos:end="163:9">for <control pos:start="133:13" pos:end="133:43">(<init pos:start="133:14" pos:end="133:19"><expr pos:start="133:14" pos:end="133:18"><name pos:start="133:14" pos:end="133:14">i</name> <operator pos:start="133:16" pos:end="133:16">=</operator> <literal type="number" pos:start="133:18" pos:end="133:18">0</literal></expr>;</init> <condition pos:start="133:21" pos:end="133:38"><expr pos:start="133:21" pos:end="133:37"><name pos:start="133:21" pos:end="133:21">i</name> <operator pos:start="133:23" pos:end="133:23">&lt;</operator> <name pos:start="133:25" pos:end="133:37"><name pos:start="133:25" pos:end="133:25">s</name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:37">nb_streams</name></name></expr>;</condition> <incr pos:start="133:40" pos:end="133:42"><expr pos:start="133:40" pos:end="133:42"><name pos:start="133:40" pos:end="133:40">i</name><operator pos:start="133:41" pos:end="133:42">++</operator></expr></incr>)</control> <block pos:start="133:45" pos:end="163:9">{<block_content pos:start="135:13" pos:end="161:13">

            <decl_stmt pos:start="135:13" pos:end="135:41"><decl pos:start="135:13" pos:end="135:40"><type pos:start="135:13" pos:end="135:22"><name pos:start="135:13" pos:end="135:20">AVStream</name> <modifier pos:start="135:22" pos:end="135:22">*</modifier></type><name pos:start="135:23" pos:end="135:24">st</name> <init pos:start="135:26" pos:end="135:40">= <expr pos:start="135:28" pos:end="135:40"><name pos:start="135:28" pos:end="135:40"><name pos:start="135:28" pos:end="135:28">s</name><operator pos:start="135:29" pos:end="135:30">-&gt;</operator><name pos:start="135:31" pos:end="135:37">streams</name><index pos:start="135:38" pos:end="135:40">[<expr pos:start="135:39" pos:end="135:39"><name pos:start="135:39" pos:end="135:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="137:13" pos:end="137:49"><decl pos:start="137:13" pos:end="137:48"><type pos:start="137:13" pos:end="137:30"><name pos:start="137:13" pos:end="137:28">MXFStreamContext</name> <modifier pos:start="137:30" pos:end="137:30">*</modifier></type><name pos:start="137:31" pos:end="137:32">sc</name> <init pos:start="137:34" pos:end="137:48">= <expr pos:start="137:36" pos:end="137:48"><name pos:start="137:36" pos:end="137:48"><name pos:start="137:36" pos:end="137:37">st</name><operator pos:start="137:38" pos:end="137:39">-&gt;</operator><name pos:start="137:40" pos:end="137:48">priv_data</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:49"><expr pos:start="139:13" pos:end="139:48"><call pos:start="139:13" pos:end="139:48"><name pos:start="139:13" pos:end="139:19">avio_w8</name><argument_list pos:start="139:20" pos:end="139:48">(<argument pos:start="139:21" pos:end="139:22"><expr pos:start="139:21" pos:end="139:22"><name pos:start="139:21" pos:end="139:22">pb</name></expr></argument>, <argument pos:start="139:25" pos:end="139:47"><expr pos:start="139:25" pos:end="139:47"><name pos:start="139:25" pos:end="139:47"><name pos:start="139:25" pos:end="139:26">sc</name><operator pos:start="139:27" pos:end="139:28">-&gt;</operator><name pos:start="139:29" pos:end="139:47">temporal_reordering</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="141:13" pos:end="143:40"><if pos:start="141:13" pos:end="143:40">if <condition pos:start="141:16" pos:end="141:40">(<expr pos:start="141:17" pos:end="141:39"><name pos:start="141:17" pos:end="141:39"><name pos:start="141:17" pos:end="141:18">sc</name><operator pos:start="141:19" pos:end="141:20">-&gt;</operator><name pos:start="141:21" pos:end="141:39">temporal_reordering</name></name></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:40"><block_content pos:start="143:17" pos:end="143:40">

                <expr_stmt pos:start="143:17" pos:end="143:40"><expr pos:start="143:17" pos:end="143:39"><name pos:start="143:17" pos:end="143:35">temporal_reordering</name> <operator pos:start="143:37" pos:end="143:37">=</operator> <literal type="number" pos:start="143:39" pos:end="143:39">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="145:13" pos:end="161:13"><if pos:start="145:13" pos:end="151:13">if <condition pos:start="145:16" pos:end="145:23">(<expr pos:start="145:17" pos:end="145:22"><name pos:start="145:17" pos:end="145:17">i</name> <operator pos:start="145:19" pos:end="145:20">==</operator> <literal type="number" pos:start="145:22" pos:end="145:22">0</literal></expr>)</condition> <block pos:start="145:25" pos:end="151:13">{<block_content pos:start="147:17" pos:end="149:40"> <comment type="line" pos:start="145:27" pos:end="145:40">// video track</comment>

                <expr_stmt pos:start="147:17" pos:end="147:31"><expr pos:start="147:17" pos:end="147:30"><call pos:start="147:17" pos:end="147:30"><name pos:start="147:17" pos:end="147:23">avio_w8</name><argument_list pos:start="147:24" pos:end="147:30">(<argument pos:start="147:25" pos:end="147:26"><expr pos:start="147:25" pos:end="147:26"><name pos:start="147:25" pos:end="147:26">pb</name></expr></argument>, <argument pos:start="147:29" pos:end="147:29"><expr pos:start="147:29" pos:end="147:29"><literal type="number" pos:start="147:29" pos:end="147:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="147:33" pos:end="147:47">// slice number</comment>

                <expr_stmt pos:start="149:17" pos:end="149:40"><expr pos:start="149:17" pos:end="149:39"><call pos:start="149:17" pos:end="149:39"><name pos:start="149:17" pos:end="149:25">avio_wb32</name><argument_list pos:start="149:26" pos:end="149:39">(<argument pos:start="149:27" pos:end="149:28"><expr pos:start="149:27" pos:end="149:28"><name pos:start="149:27" pos:end="149:28">pb</name></expr></argument>, <argument pos:start="149:31" pos:end="149:38"><expr pos:start="149:31" pos:end="149:38"><name pos:start="149:31" pos:end="149:38">KAG_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="149:42" pos:end="149:79">// system item size including klv fill</comment>

            </block_content>}</block></if> <else pos:start="151:15" pos:end="161:13">else <block pos:start="151:20" pos:end="161:13">{<block_content pos:start="153:17" pos:end="159:54"> <comment type="line" pos:start="151:22" pos:end="151:35">// audio track</comment>

                <decl_stmt pos:start="153:17" pos:end="153:83"><decl pos:start="153:17" pos:end="153:82"><type pos:start="153:17" pos:end="153:24"><name pos:start="153:17" pos:end="153:24">unsigned</name></type> <name pos:start="153:26" pos:end="153:41">audio_frame_size</name> <init pos:start="153:43" pos:end="153:82">= <expr pos:start="153:45" pos:end="153:82"><name pos:start="153:45" pos:end="153:62"><name pos:start="153:45" pos:end="153:46">sc</name><operator pos:start="153:47" pos:end="153:48">-&gt;</operator><name pos:start="153:49" pos:end="153:51">aic</name><operator pos:start="153:52" pos:end="153:52">.</operator><name pos:start="153:53" pos:end="153:59">samples</name><index pos:start="153:60" pos:end="153:62">[<expr pos:start="153:61" pos:end="153:61"><literal type="number" pos:start="153:61" pos:end="153:61">0</literal></expr>]</index></name><operator pos:start="153:63" pos:end="153:63">*</operator><name pos:start="153:64" pos:end="153:82"><name pos:start="153:64" pos:end="153:65">sc</name><operator pos:start="153:66" pos:end="153:67">-&gt;</operator><name pos:start="153:68" pos:end="153:70">aic</name><operator pos:start="153:71" pos:end="153:71">.</operator><name pos:start="153:72" pos:end="153:82">sample_size</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:68"><expr pos:start="155:17" pos:end="155:67"><name pos:start="155:17" pos:end="155:32">audio_frame_size</name> <operator pos:start="155:34" pos:end="155:35">+=</operator> <call pos:start="155:37" pos:end="155:67"><name pos:start="155:37" pos:end="155:49">klv_fill_size</name><argument_list pos:start="155:50" pos:end="155:67">(<argument pos:start="155:51" pos:end="155:66"><expr pos:start="155:51" pos:end="155:66"><name pos:start="155:51" pos:end="155:66">audio_frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:31"><expr pos:start="157:17" pos:end="157:30"><call pos:start="157:17" pos:end="157:30"><name pos:start="157:17" pos:end="157:23">avio_w8</name><argument_list pos:start="157:24" pos:end="157:30">(<argument pos:start="157:25" pos:end="157:26"><expr pos:start="157:25" pos:end="157:26"><name pos:start="157:25" pos:end="157:26">pb</name></expr></argument>, <argument pos:start="157:29" pos:end="157:29"><expr pos:start="157:29" pos:end="157:29"><literal type="number" pos:start="157:29" pos:end="157:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:54"><expr pos:start="159:17" pos:end="159:53"><call pos:start="159:17" pos:end="159:53"><name pos:start="159:17" pos:end="159:25">avio_wb32</name><argument_list pos:start="159:26" pos:end="159:53">(<argument pos:start="159:27" pos:end="159:28"><expr pos:start="159:27" pos:end="159:28"><name pos:start="159:27" pos:end="159:28">pb</name></expr></argument>, <argument pos:start="159:31" pos:end="159:52"><expr pos:start="159:31" pos:end="159:52"><operator pos:start="159:31" pos:end="159:31">(</operator><name pos:start="159:32" pos:end="159:32">i</name><operator pos:start="159:33" pos:end="159:33">-</operator><literal type="number" pos:start="159:34" pos:end="159:34">1</literal><operator pos:start="159:35" pos:end="159:35">)</operator><operator pos:start="159:36" pos:end="159:36">*</operator><name pos:start="159:37" pos:end="159:52">audio_frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="159:56" pos:end="159:71">// element delta</comment>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="167:9" pos:end="167:91"><expr pos:start="167:9" pos:end="167:90"><call pos:start="167:9" pos:end="167:90"><name pos:start="167:9" pos:end="167:27">mxf_write_local_tag</name><argument_list pos:start="167:28" pos:end="167:90">(<argument pos:start="167:29" pos:end="167:30"><expr pos:start="167:29" pos:end="167:30"><name pos:start="167:29" pos:end="167:30">pb</name></expr></argument>, <argument pos:start="167:33" pos:end="167:81"><expr pos:start="167:33" pos:end="167:81"><literal type="number" pos:start="167:33" pos:end="167:35">8</literal> <operator pos:start="167:35" pos:end="167:35">+</operator> <name pos:start="167:37" pos:end="167:57"><name pos:start="167:37" pos:end="167:39">mxf</name><operator pos:start="167:40" pos:end="167:41">-&gt;</operator><name pos:start="167:42" pos:end="167:57">edit_units_count</name></name><operator pos:start="167:58" pos:end="167:58">*</operator><operator pos:start="167:59" pos:end="167:59">(</operator><literal type="number" pos:start="167:60" pos:end="167:62">11</literal><operator pos:start="167:62" pos:end="167:62">+</operator><name pos:start="167:63" pos:end="167:78"><name pos:start="167:63" pos:end="167:65">mxf</name><operator pos:start="167:66" pos:end="167:67">-&gt;</operator><name pos:start="167:68" pos:end="167:78">slice_count</name></name><operator pos:start="167:79" pos:end="167:79">*</operator><literal type="number" pos:start="167:80" pos:end="167:80">4</literal><operator pos:start="167:81" pos:end="167:81">)</operator></expr></argument>, <argument pos:start="167:84" pos:end="167:89"><expr pos:start="167:84" pos:end="167:89"><literal type="number" pos:start="167:84" pos:end="167:89">0x3F0A</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:45"><expr pos:start="169:9" pos:end="169:44"><call pos:start="169:9" pos:end="169:44"><name pos:start="169:9" pos:end="169:17">avio_wb32</name><argument_list pos:start="169:18" pos:end="169:44">(<argument pos:start="169:19" pos:end="169:20"><expr pos:start="169:19" pos:end="169:20"><name pos:start="169:19" pos:end="169:20">pb</name></expr></argument>, <argument pos:start="169:23" pos:end="169:43"><expr pos:start="169:23" pos:end="169:43"><name pos:start="169:23" pos:end="169:43"><name pos:start="169:23" pos:end="169:25">mxf</name><operator pos:start="169:26" pos:end="169:27">-&gt;</operator><name pos:start="169:28" pos:end="169:43">edit_units_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="169:48" pos:end="169:64">// num of entries</comment>

        <expr_stmt pos:start="171:9" pos:end="171:45"><expr pos:start="171:9" pos:end="171:44"><call pos:start="171:9" pos:end="171:44"><name pos:start="171:9" pos:end="171:17">avio_wb32</name><argument_list pos:start="171:18" pos:end="171:44">(<argument pos:start="171:19" pos:end="171:20"><expr pos:start="171:19" pos:end="171:20"><name pos:start="171:19" pos:end="171:20">pb</name></expr></argument>, <argument pos:start="171:23" pos:end="171:43"><expr pos:start="171:23" pos:end="171:43"><literal type="number" pos:start="171:23" pos:end="171:25">11</literal><operator pos:start="171:25" pos:end="171:25">+</operator><name pos:start="171:26" pos:end="171:41"><name pos:start="171:26" pos:end="171:28">mxf</name><operator pos:start="171:29" pos:end="171:30">-&gt;</operator><name pos:start="171:31" pos:end="171:41">slice_count</name></name><operator pos:start="171:42" pos:end="171:42">*</operator><literal type="number" pos:start="171:43" pos:end="171:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="171:48" pos:end="171:67">// size of one entry</comment>



        <for pos:start="175:9" pos:end="251:9">for <control pos:start="175:13" pos:end="175:51">(<init pos:start="175:14" pos:end="175:19"><expr pos:start="175:14" pos:end="175:18"><name pos:start="175:14" pos:end="175:14">i</name> <operator pos:start="175:16" pos:end="175:16">=</operator> <literal type="number" pos:start="175:18" pos:end="175:18">0</literal></expr>;</init> <condition pos:start="175:21" pos:end="175:46"><expr pos:start="175:21" pos:end="175:45"><name pos:start="175:21" pos:end="175:21">i</name> <operator pos:start="175:23" pos:end="175:23">&lt;</operator> <name pos:start="175:25" pos:end="175:45"><name pos:start="175:25" pos:end="175:27">mxf</name><operator pos:start="175:28" pos:end="175:29">-&gt;</operator><name pos:start="175:30" pos:end="175:45">edit_units_count</name></name></expr>;</condition> <incr pos:start="175:48" pos:end="175:50"><expr pos:start="175:48" pos:end="175:50"><name pos:start="175:48" pos:end="175:48">i</name><operator pos:start="175:49" pos:end="175:50">++</operator></expr></incr>)</control> <block pos:start="175:53" pos:end="251:9">{<block_content pos:start="177:13" pos:end="249:66">

            <decl_stmt pos:start="177:13" pos:end="177:36"><decl pos:start="177:13" pos:end="177:35"><type pos:start="177:13" pos:end="177:15"><name pos:start="177:13" pos:end="177:15">int</name></type> <name pos:start="177:17" pos:end="177:31">temporal_offset</name> <init pos:start="177:33" pos:end="177:35">= <expr pos:start="177:35" pos:end="177:35"><literal type="number" pos:start="177:35" pos:end="177:35">0</literal></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="181:13" pos:end="187:13"><if pos:start="181:13" pos:end="187:13">if <condition pos:start="181:16" pos:end="181:54">(<expr pos:start="181:17" pos:end="181:53"><operator pos:start="181:17" pos:end="181:17">!</operator><operator pos:start="181:18" pos:end="181:18">(</operator><name pos:start="181:19" pos:end="181:39"><name pos:start="181:19" pos:end="181:21">mxf</name><operator pos:start="181:22" pos:end="181:23">-&gt;</operator><name pos:start="181:24" pos:end="181:36">index_entries</name><index pos:start="181:37" pos:end="181:39">[<expr pos:start="181:38" pos:end="181:38"><name pos:start="181:38" pos:end="181:38">i</name></expr>]</index></name><operator pos:start="181:40" pos:end="181:40">.</operator><name pos:start="181:41" pos:end="181:45">flags</name> <operator pos:start="181:47" pos:end="181:47">&amp;</operator> <literal type="number" pos:start="181:49" pos:end="181:52">0x33</literal><operator pos:start="181:53" pos:end="181:53">)</operator></expr>)</condition> <block pos:start="181:56" pos:end="187:13">{<block_content pos:start="183:17" pos:end="185:30"> <comment type="line" pos:start="181:58" pos:end="181:67">// I frame</comment>

                <expr_stmt pos:start="183:17" pos:end="183:48"><expr pos:start="183:17" pos:end="183:47"><name pos:start="183:17" pos:end="183:35"><name pos:start="183:17" pos:end="183:19">mxf</name><operator pos:start="183:20" pos:end="183:21">-&gt;</operator><name pos:start="183:22" pos:end="183:35">last_key_index</name></name> <operator pos:start="183:37" pos:end="183:37">=</operator> <name pos:start="183:39" pos:end="183:47">key_index</name></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:30"><expr pos:start="185:17" pos:end="185:29"><name pos:start="185:17" pos:end="185:25">key_index</name> <operator pos:start="185:27" pos:end="185:27">=</operator> <name pos:start="185:29" pos:end="185:29">i</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="191:13" pos:end="213:13"><if pos:start="191:13" pos:end="213:13">if <condition pos:start="191:16" pos:end="191:36">(<expr pos:start="191:17" pos:end="191:35"><name pos:start="191:17" pos:end="191:35">temporal_reordering</name></expr>)</condition> <block pos:start="191:38" pos:end="213:13">{<block_content pos:start="193:17" pos:end="211:17">

                <decl_stmt pos:start="193:17" pos:end="193:51"><decl pos:start="193:17" pos:end="193:50"><type pos:start="193:17" pos:end="193:19"><name pos:start="193:17" pos:end="193:19">int</name></type> <name pos:start="193:21" pos:end="193:34">pic_num_in_gop</name> <init pos:start="193:36" pos:end="193:50">= <expr pos:start="193:38" pos:end="193:50"><name pos:start="193:38" pos:end="193:38">i</name> <operator pos:start="193:40" pos:end="193:40">-</operator> <name pos:start="193:42" pos:end="193:50">key_index</name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="195:17" pos:end="211:17"><if pos:start="195:17" pos:end="211:17">if <condition pos:start="195:20" pos:end="195:73">(<expr pos:start="195:21" pos:end="195:72"><name pos:start="195:21" pos:end="195:34">pic_num_in_gop</name> <operator pos:start="195:36" pos:end="195:37">!=</operator> <name pos:start="195:39" pos:end="195:59"><name pos:start="195:39" pos:end="195:41">mxf</name><operator pos:start="195:42" pos:end="195:43">-&gt;</operator><name pos:start="195:44" pos:end="195:56">index_entries</name><index pos:start="195:57" pos:end="195:59">[<expr pos:start="195:58" pos:end="195:58"><name pos:start="195:58" pos:end="195:58">i</name></expr>]</index></name><operator pos:start="195:60" pos:end="195:60">.</operator><name pos:start="195:61" pos:end="195:72">temporal_ref</name></expr>)</condition> <block pos:start="195:75" pos:end="211:17">{<block_content pos:start="197:21" pos:end="209:69">

                    <for pos:start="197:21" pos:end="203:21">for <control pos:start="197:25" pos:end="197:71">(<init pos:start="197:26" pos:end="197:39"><expr pos:start="197:26" pos:end="197:38"><name pos:start="197:26" pos:end="197:26">j</name> <operator pos:start="197:28" pos:end="197:28">=</operator> <name pos:start="197:30" pos:end="197:38">key_index</name></expr>;</init> <condition pos:start="197:41" pos:end="197:66"><expr pos:start="197:41" pos:end="197:65"><name pos:start="197:41" pos:end="197:41">j</name> <operator pos:start="197:43" pos:end="197:43">&lt;</operator> <name pos:start="197:45" pos:end="197:65"><name pos:start="197:45" pos:end="197:47">mxf</name><operator pos:start="197:48" pos:end="197:49">-&gt;</operator><name pos:start="197:50" pos:end="197:65">edit_units_count</name></name></expr>;</condition> <incr pos:start="197:68" pos:end="197:70"><expr pos:start="197:68" pos:end="197:70"><name pos:start="197:68" pos:end="197:68">j</name><operator pos:start="197:69" pos:end="197:70">++</operator></expr></incr>)</control> <block pos:start="197:73" pos:end="203:21">{<block_content pos:start="199:25" pos:end="201:34">

                        <if_stmt pos:start="199:25" pos:end="201:34"><if pos:start="199:25" pos:end="201:34">if <condition pos:start="199:28" pos:end="199:81">(<expr pos:start="199:29" pos:end="199:80"><name pos:start="199:29" pos:end="199:42">pic_num_in_gop</name> <operator pos:start="199:44" pos:end="199:45">==</operator> <name pos:start="199:47" pos:end="199:67"><name pos:start="199:47" pos:end="199:49">mxf</name><operator pos:start="199:50" pos:end="199:51">-&gt;</operator><name pos:start="199:52" pos:end="199:64">index_entries</name><index pos:start="199:65" pos:end="199:67">[<expr pos:start="199:66" pos:end="199:66"><name pos:start="199:66" pos:end="199:66">j</name></expr>]</index></name><operator pos:start="199:68" pos:end="199:68">.</operator><name pos:start="199:69" pos:end="199:80">temporal_ref</name></expr>)</condition><block type="pseudo" pos:start="201:29" pos:end="201:34"><block_content pos:start="201:29" pos:end="201:34">

                            <break pos:start="201:29" pos:end="201:34">break;</break></block_content></block></if></if_stmt>

                    </block_content>}</block></for>

                    <if_stmt pos:start="205:21" pos:end="207:70"><if pos:start="205:21" pos:end="207:70">if <condition pos:start="205:24" pos:end="205:51">(<expr pos:start="205:25" pos:end="205:50"><name pos:start="205:25" pos:end="205:25">j</name> <operator pos:start="205:27" pos:end="205:28">==</operator> <name pos:start="205:30" pos:end="205:50"><name pos:start="205:30" pos:end="205:32">mxf</name><operator pos:start="205:33" pos:end="205:34">-&gt;</operator><name pos:start="205:35" pos:end="205:50">edit_units_count</name></name></expr>)</condition><block type="pseudo" pos:start="207:25" pos:end="207:70"><block_content pos:start="207:25" pos:end="207:70">

                        <expr_stmt pos:start="207:25" pos:end="207:70"><expr pos:start="207:25" pos:end="207:69"><call pos:start="207:25" pos:end="207:69"><name pos:start="207:25" pos:end="207:30">av_log</name><argument_list pos:start="207:31" pos:end="207:69">(<argument pos:start="207:32" pos:end="207:32"><expr pos:start="207:32" pos:end="207:32"><name pos:start="207:32" pos:end="207:32">s</name></expr></argument>, <argument pos:start="207:35" pos:end="207:48"><expr pos:start="207:35" pos:end="207:48"><name pos:start="207:35" pos:end="207:48">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="207:51" pos:end="207:68"><expr pos:start="207:51" pos:end="207:68"><literal type="string" pos:start="207:51" pos:end="207:68">"missing frames\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="209:21" pos:end="209:69"><expr pos:start="209:21" pos:end="209:68"><name pos:start="209:21" pos:end="209:35">temporal_offset</name> <operator pos:start="209:37" pos:end="209:37">=</operator> <name pos:start="209:39" pos:end="209:39">j</name> <operator pos:start="209:41" pos:end="209:41">-</operator> <name pos:start="209:43" pos:end="209:51">key_index</name> <operator pos:start="209:53" pos:end="209:53">-</operator> <name pos:start="209:55" pos:end="209:68">pic_num_in_gop</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:41"><expr pos:start="215:13" pos:end="215:40"><call pos:start="215:13" pos:end="215:40"><name pos:start="215:13" pos:end="215:19">avio_w8</name><argument_list pos:start="215:20" pos:end="215:40">(<argument pos:start="215:21" pos:end="215:22"><expr pos:start="215:21" pos:end="215:22"><name pos:start="215:21" pos:end="215:22">pb</name></expr></argument>, <argument pos:start="215:25" pos:end="215:39"><expr pos:start="215:25" pos:end="215:39"><name pos:start="215:25" pos:end="215:39">temporal_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="219:13" pos:end="231:13"><if pos:start="219:13" pos:end="223:13">if <condition pos:start="219:16" pos:end="219:61">(<expr pos:start="219:17" pos:end="219:60"><operator pos:start="219:17" pos:end="219:17">(</operator><name pos:start="219:18" pos:end="219:38"><name pos:start="219:18" pos:end="219:20">mxf</name><operator pos:start="219:21" pos:end="219:22">-&gt;</operator><name pos:start="219:23" pos:end="219:35">index_entries</name><index pos:start="219:36" pos:end="219:38">[<expr pos:start="219:37" pos:end="219:37"><name pos:start="219:37" pos:end="219:37">i</name></expr>]</index></name><operator pos:start="219:39" pos:end="219:39">.</operator><name pos:start="219:40" pos:end="219:44">flags</name> <operator pos:start="219:46" pos:end="219:46">&amp;</operator> <literal type="number" pos:start="219:48" pos:end="219:51">0x30</literal><operator pos:start="219:52" pos:end="219:52">)</operator> <operator pos:start="219:54" pos:end="219:55">==</operator> <literal type="number" pos:start="219:57" pos:end="219:60">0x30</literal></expr>)</condition> <block pos:start="219:63" pos:end="223:13">{<block_content pos:start="221:17" pos:end="221:53"> <comment type="line" pos:start="219:65" pos:end="219:94">// back and forward prediction</comment>

                <expr_stmt pos:start="221:17" pos:end="221:53"><expr pos:start="221:17" pos:end="221:52"><call pos:start="221:17" pos:end="221:52"><name pos:start="221:17" pos:end="221:23">avio_w8</name><argument_list pos:start="221:24" pos:end="221:52">(<argument pos:start="221:25" pos:end="221:26"><expr pos:start="221:25" pos:end="221:26"><name pos:start="221:25" pos:end="221:26">pb</name></expr></argument>, <argument pos:start="221:29" pos:end="221:51"><expr pos:start="221:29" pos:end="221:51"><name pos:start="221:29" pos:end="221:47"><name pos:start="221:29" pos:end="221:31">mxf</name><operator pos:start="221:32" pos:end="221:33">-&gt;</operator><name pos:start="221:34" pos:end="221:47">last_key_index</name></name> <operator pos:start="221:49" pos:end="221:49">-</operator> <name pos:start="221:51" pos:end="221:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="223:15" pos:end="231:13">else <block pos:start="223:20" pos:end="231:13">{<block_content pos:start="225:17" pos:end="229:52">

                <expr_stmt pos:start="225:17" pos:end="225:43"><expr pos:start="225:17" pos:end="225:42"><call pos:start="225:17" pos:end="225:42"><name pos:start="225:17" pos:end="225:23">avio_w8</name><argument_list pos:start="225:24" pos:end="225:42">(<argument pos:start="225:25" pos:end="225:26"><expr pos:start="225:25" pos:end="225:26"><name pos:start="225:25" pos:end="225:26">pb</name></expr></argument>, <argument pos:start="225:29" pos:end="225:41"><expr pos:start="225:29" pos:end="225:41"><name pos:start="225:29" pos:end="225:37">key_index</name> <operator pos:start="225:39" pos:end="225:39">-</operator> <name pos:start="225:41" pos:end="225:41">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="225:45" pos:end="225:63">// key frame offset</comment>

                <if_stmt pos:start="227:17" pos:end="229:52"><if pos:start="227:17" pos:end="229:52">if <condition pos:start="227:20" pos:end="227:65">(<expr pos:start="227:21" pos:end="227:64"><operator pos:start="227:21" pos:end="227:21">(</operator><name pos:start="227:22" pos:end="227:42"><name pos:start="227:22" pos:end="227:24">mxf</name><operator pos:start="227:25" pos:end="227:26">-&gt;</operator><name pos:start="227:27" pos:end="227:39">index_entries</name><index pos:start="227:40" pos:end="227:42">[<expr pos:start="227:41" pos:end="227:41"><name pos:start="227:41" pos:end="227:41">i</name></expr>]</index></name><operator pos:start="227:43" pos:end="227:43">.</operator><name pos:start="227:44" pos:end="227:48">flags</name> <operator pos:start="227:50" pos:end="227:50">&amp;</operator> <literal type="number" pos:start="227:52" pos:end="227:55">0x20</literal><operator pos:start="227:56" pos:end="227:56">)</operator> <operator pos:start="227:58" pos:end="227:59">==</operator> <literal type="number" pos:start="227:61" pos:end="227:64">0x20</literal></expr>)</condition><block type="pseudo" pos:start="229:21" pos:end="229:52"><block_content pos:start="229:21" pos:end="229:52"> <comment type="line" pos:start="227:67" pos:end="227:81">// only forward</comment>

                    <expr_stmt pos:start="229:21" pos:end="229:52"><expr pos:start="229:21" pos:end="229:51"><name pos:start="229:21" pos:end="229:39"><name pos:start="229:21" pos:end="229:23">mxf</name><operator pos:start="229:24" pos:end="229:25">-&gt;</operator><name pos:start="229:26" pos:end="229:39">last_key_index</name></name> <operator pos:start="229:41" pos:end="229:41">=</operator> <name pos:start="229:43" pos:end="229:51">key_index</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="235:13" pos:end="239:52"><if pos:start="235:13" pos:end="239:52">if <condition pos:start="235:16" pos:end="237:71">(<expr pos:start="235:17" pos:end="237:70"><operator pos:start="235:17" pos:end="235:17">!</operator><operator pos:start="235:18" pos:end="235:18">(</operator><name pos:start="235:19" pos:end="235:39"><name pos:start="235:19" pos:end="235:21">mxf</name><operator pos:start="235:22" pos:end="235:23">-&gt;</operator><name pos:start="235:24" pos:end="235:36">index_entries</name><index pos:start="235:37" pos:end="235:39">[<expr pos:start="235:38" pos:end="235:38"><name pos:start="235:38" pos:end="235:38">i</name></expr>]</index></name><operator pos:start="235:40" pos:end="235:40">.</operator><name pos:start="235:41" pos:end="235:45">flags</name> <operator pos:start="235:47" pos:end="235:47">&amp;</operator> <literal type="number" pos:start="235:49" pos:end="235:52">0x33</literal><operator pos:start="235:53" pos:end="235:53">)</operator> <operator pos:start="235:55" pos:end="235:56">&amp;&amp;</operator> <comment type="line" pos:start="235:58" pos:end="235:67">// I frame</comment>

                <name pos:start="237:17" pos:end="237:37"><name pos:start="237:17" pos:end="237:19">mxf</name><operator pos:start="237:20" pos:end="237:21">-&gt;</operator><name pos:start="237:22" pos:end="237:34">index_entries</name><index pos:start="237:35" pos:end="237:37">[<expr pos:start="237:36" pos:end="237:36"><name pos:start="237:36" pos:end="237:36">i</name></expr>]</index></name><operator pos:start="237:38" pos:end="237:38">.</operator><name pos:start="237:39" pos:end="237:43">flags</name> <operator pos:start="237:45" pos:end="237:45">&amp;</operator> <literal type="number" pos:start="237:47" pos:end="237:50">0x40</literal> <operator pos:start="237:52" pos:end="237:53">&amp;&amp;</operator> <operator pos:start="237:55" pos:end="237:55">!</operator><name pos:start="237:56" pos:end="237:70">temporal_offset</name></expr>)</condition><block type="pseudo" pos:start="239:17" pos:end="239:52"><block_content pos:start="239:17" pos:end="239:52">

                <expr_stmt pos:start="239:17" pos:end="239:52"><expr pos:start="239:17" pos:end="239:51"><name pos:start="239:17" pos:end="239:37"><name pos:start="239:17" pos:end="239:19">mxf</name><operator pos:start="239:20" pos:end="239:21">-&gt;</operator><name pos:start="239:22" pos:end="239:34">index_entries</name><index pos:start="239:35" pos:end="239:37">[<expr pos:start="239:36" pos:end="239:36"><name pos:start="239:36" pos:end="239:36">i</name></expr>]</index></name><operator pos:start="239:38" pos:end="239:38">.</operator><name pos:start="239:39" pos:end="239:43">flags</name> <operator pos:start="239:45" pos:end="239:46">|=</operator> <literal type="number" pos:start="239:48" pos:end="239:51">0x80</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="239:54" pos:end="239:69">// random access</comment>

            <expr_stmt pos:start="241:13" pos:end="241:53"><expr pos:start="241:13" pos:end="241:52"><call pos:start="241:13" pos:end="241:52"><name pos:start="241:13" pos:end="241:19">avio_w8</name><argument_list pos:start="241:20" pos:end="241:52">(<argument pos:start="241:21" pos:end="241:22"><expr pos:start="241:21" pos:end="241:22"><name pos:start="241:21" pos:end="241:22">pb</name></expr></argument>, <argument pos:start="241:25" pos:end="241:51"><expr pos:start="241:25" pos:end="241:51"><name pos:start="241:25" pos:end="241:45"><name pos:start="241:25" pos:end="241:27">mxf</name><operator pos:start="241:28" pos:end="241:29">-&gt;</operator><name pos:start="241:30" pos:end="241:42">index_entries</name><index pos:start="241:43" pos:end="241:45">[<expr pos:start="241:44" pos:end="241:44"><name pos:start="241:44" pos:end="241:44">i</name></expr>]</index></name><operator pos:start="241:46" pos:end="241:46">.</operator><name pos:start="241:47" pos:end="241:51">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="243:13" pos:end="243:28">// stream offset</comment>

            <expr_stmt pos:start="245:13" pos:end="245:56"><expr pos:start="245:13" pos:end="245:55"><call pos:start="245:13" pos:end="245:55"><name pos:start="245:13" pos:end="245:21">avio_wb64</name><argument_list pos:start="245:22" pos:end="245:55">(<argument pos:start="245:23" pos:end="245:24"><expr pos:start="245:23" pos:end="245:24"><name pos:start="245:23" pos:end="245:24">pb</name></expr></argument>, <argument pos:start="245:27" pos:end="245:54"><expr pos:start="245:27" pos:end="245:54"><name pos:start="245:27" pos:end="245:47"><name pos:start="245:27" pos:end="245:29">mxf</name><operator pos:start="245:30" pos:end="245:31">-&gt;</operator><name pos:start="245:32" pos:end="245:44">index_entries</name><index pos:start="245:45" pos:end="245:47">[<expr pos:start="245:46" pos:end="245:46"><name pos:start="245:46" pos:end="245:46">i</name></expr>]</index></name><operator pos:start="245:48" pos:end="245:48">.</operator><name pos:start="245:49" pos:end="245:54">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="247:13" pos:end="249:66"><if pos:start="247:13" pos:end="249:66">if <condition pos:start="247:16" pos:end="247:34">(<expr pos:start="247:17" pos:end="247:33"><name pos:start="247:17" pos:end="247:29"><name pos:start="247:17" pos:end="247:17">s</name><operator pos:start="247:18" pos:end="247:19">-&gt;</operator><name pos:start="247:20" pos:end="247:29">nb_streams</name></name> <operator pos:start="247:31" pos:end="247:31">&gt;</operator> <literal type="number" pos:start="247:33" pos:end="247:33">1</literal></expr>)</condition><block type="pseudo" pos:start="249:17" pos:end="249:66"><block_content pos:start="249:17" pos:end="249:66">

                <expr_stmt pos:start="249:17" pos:end="249:66"><expr pos:start="249:17" pos:end="249:65"><call pos:start="249:17" pos:end="249:65"><name pos:start="249:17" pos:end="249:25">avio_wb32</name><argument_list pos:start="249:26" pos:end="249:65">(<argument pos:start="249:27" pos:end="249:28"><expr pos:start="249:27" pos:end="249:28"><name pos:start="249:27" pos:end="249:28">pb</name></expr></argument>, <argument pos:start="249:31" pos:end="249:64"><expr pos:start="249:31" pos:end="249:64"><name pos:start="249:31" pos:end="249:51"><name pos:start="249:31" pos:end="249:33">mxf</name><operator pos:start="249:34" pos:end="249:35">-&gt;</operator><name pos:start="249:36" pos:end="249:48">index_entries</name><index pos:start="249:49" pos:end="249:51">[<expr pos:start="249:50" pos:end="249:50"><name pos:start="249:50" pos:end="249:50">i</name></expr>]</index></name><operator pos:start="249:52" pos:end="249:52">.</operator><name pos:start="249:53" pos:end="249:64">slice_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="255:9" pos:end="255:64"><expr pos:start="255:9" pos:end="255:63"><name pos:start="255:9" pos:end="255:27"><name pos:start="255:9" pos:end="255:11">mxf</name><operator pos:start="255:12" pos:end="255:13">-&gt;</operator><name pos:start="255:14" pos:end="255:27">last_key_index</name></name> <operator pos:start="255:29" pos:end="255:29">=</operator> <name pos:start="255:31" pos:end="255:39">key_index</name> <operator pos:start="255:41" pos:end="255:41">-</operator> <name pos:start="255:43" pos:end="255:63"><name pos:start="255:43" pos:end="255:45">mxf</name><operator pos:start="255:46" pos:end="255:47">-&gt;</operator><name pos:start="255:48" pos:end="255:63">edit_units_count</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:61"><expr pos:start="257:9" pos:end="257:60"><name pos:start="257:9" pos:end="257:35"><name pos:start="257:9" pos:end="257:11">mxf</name><operator pos:start="257:12" pos:end="257:13">-&gt;</operator><name pos:start="257:14" pos:end="257:35">last_indexed_edit_unit</name></name> <operator pos:start="257:37" pos:end="257:38">+=</operator> <name pos:start="257:40" pos:end="257:60"><name pos:start="257:40" pos:end="257:42">mxf</name><operator pos:start="257:43" pos:end="257:44">-&gt;</operator><name pos:start="257:45" pos:end="257:60">edit_units_count</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:34"><expr pos:start="259:9" pos:end="259:33"><name pos:start="259:9" pos:end="259:29"><name pos:start="259:9" pos:end="259:11">mxf</name><operator pos:start="259:12" pos:end="259:13">-&gt;</operator><name pos:start="259:14" pos:end="259:29">edit_units_count</name></name> <operator pos:start="259:31" pos:end="259:31">=</operator> <literal type="number" pos:start="259:33" pos:end="259:33">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
