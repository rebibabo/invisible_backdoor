<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9368.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">dot_product</name><parameter_list pos:start="1:23" pos:end="1:70">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:36">int16_t</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">a</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:57"><decl pos:start="1:42" pos:end="1:57"><type pos:start="1:42" pos:end="1:57"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:54">int16_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">b</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:69"><decl pos:start="1:60" pos:end="1:69"><type pos:start="1:60" pos:end="1:69"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:69">length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:15">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">sum</name> <init pos:start="5:16" pos:end="5:18">= <expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="15:5">for <control pos:start="9:9" pos:end="9:32">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:27"><expr pos:start="9:17" pos:end="9:26"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:26">length</name></expr>;</condition> <incr pos:start="9:29" pos:end="9:31"><expr pos:start="9:29" pos:end="9:31"><name pos:start="9:29" pos:end="9:29">i</name><operator pos:start="9:30" pos:end="9:31">++</operator></expr></incr>)</control> <block pos:start="9:34" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:41">

        <decl_stmt pos:start="11:9" pos:end="11:62"><decl pos:start="11:9" pos:end="11:61"><type pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:15">int64_t</name></type> <name pos:start="11:17" pos:end="11:20">prod</name> <init pos:start="11:22" pos:end="11:61">= <expr pos:start="11:24" pos:end="11:61"><call pos:start="11:24" pos:end="11:61"><name pos:start="11:24" pos:end="11:37">av_clipl_int32</name><argument_list pos:start="11:38" pos:end="11:61">(<argument pos:start="11:39" pos:end="11:60"><expr pos:start="11:39" pos:end="11:60"><call pos:start="11:39" pos:end="11:55"><name pos:start="11:39" pos:end="11:43">MUL64</name><argument_list pos:start="11:44" pos:end="11:55">(<argument pos:start="11:45" pos:end="11:48"><expr pos:start="11:45" pos:end="11:48"><name pos:start="11:45" pos:end="11:48"><name pos:start="11:45" pos:end="11:45">a</name><index pos:start="11:46" pos:end="11:48">[<expr pos:start="11:47" pos:end="11:47"><name pos:start="11:47" pos:end="11:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="11:51" pos:end="11:54"><expr pos:start="11:51" pos:end="11:54"><name pos:start="11:51" pos:end="11:54"><name pos:start="11:51" pos:end="11:51">b</name><index pos:start="11:52" pos:end="11:54">[<expr pos:start="11:53" pos:end="11:53"><name pos:start="11:53" pos:end="11:53">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="11:57" pos:end="11:58">&lt;&lt;</operator> <literal type="number" pos:start="11:60" pos:end="11:60">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:41"><expr pos:start="13:9" pos:end="13:40"><name pos:start="13:9" pos:end="13:11">sum</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:40"><name pos:start="13:15" pos:end="13:28">av_clipl_int32</name><argument_list pos:start="13:29" pos:end="13:40">(<argument pos:start="13:30" pos:end="13:39"><expr pos:start="13:30" pos:end="13:39"><name pos:start="13:30" pos:end="13:32">sum</name> <operator pos:start="13:34" pos:end="13:34">+</operator> <name pos:start="13:36" pos:end="13:39">prod</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="17:5" pos:end="17:15">return <expr pos:start="17:12" pos:end="17:14"><name pos:start="17:12" pos:end="17:14">sum</name></expr>;</return>

</block_content>}</block></function>
</unit>
