<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12565.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">dct_unquantize_mpeg2_c</name><parameter_list pos:start="1:35" pos:end="3:69">(<parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:49">MpegEncContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, 

                                   <parameter pos:start="3:36" pos:end="3:49"><decl pos:start="3:36" pos:end="3:49"><type pos:start="3:36" pos:end="3:49"><name pos:start="3:36" pos:end="3:42">DCTELEM</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:49">block</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:56"><decl pos:start="3:52" pos:end="3:56"><type pos:start="3:52" pos:end="3:56"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:56">n</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:68"><decl pos:start="3:59" pos:end="3:68"><type pos:start="3:59" pos:end="3:68"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:68">qscale</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="121:1">{<block_content pos:start="7:5" pos:end="119:5">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:16">level</name></decl>, <decl pos:start="7:19" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:25">nCoeffs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:18"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:16">UINT16</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:30">quant_matrix</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:43"><if pos:start="13:5" pos:end="13:38">if<condition pos:start="13:7" pos:end="13:25">(<expr pos:start="13:8" pos:end="13:24"><name pos:start="13:8" pos:end="13:24"><name pos:start="13:8" pos:end="13:8">s</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:24">alternate_scan</name></name></expr>)</condition><block type="pseudo" pos:start="13:27" pos:end="13:38"><block_content pos:start="13:27" pos:end="13:38"> <expr_stmt pos:start="13:27" pos:end="13:38"><expr pos:start="13:27" pos:end="13:37"><name pos:start="13:27" pos:end="13:33">nCoeffs</name><operator pos:start="13:34" pos:end="13:34">=</operator> <literal type="number" pos:start="13:36" pos:end="13:37">64</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="15:5" pos:end="15:43">else<block type="pseudo" pos:start="15:10" pos:end="15:43"><block_content pos:start="15:10" pos:end="15:43"> <expr_stmt pos:start="15:10" pos:end="15:43"><expr pos:start="15:10" pos:end="15:42"><name pos:start="15:10" pos:end="15:16">nCoeffs</name><operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:40"><name pos:start="15:19" pos:end="15:19">s</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:37">block_last_index</name><index pos:start="15:38" pos:end="15:40">[<expr pos:start="15:39" pos:end="15:39"><name pos:start="15:39" pos:end="15:39">n</name></expr>]</index></name><operator pos:start="15:41" pos:end="15:41">+</operator><literal type="number" pos:start="15:42" pos:end="15:42">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    

    <if_stmt pos:start="19:5" pos:end="119:5"><if pos:start="19:5" pos:end="67:5">if <condition pos:start="19:8" pos:end="19:20">(<expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:19">mb_intra</name></name></expr>)</condition> <block pos:start="19:22" pos:end="67:5">{<block_content pos:start="21:9" pos:end="65:9">

        <if_stmt pos:start="21:9" pos:end="27:48"><if pos:start="21:9" pos:end="23:48">if <condition pos:start="21:12" pos:end="21:18">(<expr pos:start="21:13" pos:end="21:17"><name pos:start="21:13" pos:end="21:13">n</name> <operator pos:start="21:15" pos:end="21:15">&lt;</operator> <literal type="number" pos:start="21:17" pos:end="21:17">4</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:48"><block_content pos:start="23:13" pos:end="23:48"> 

            <expr_stmt pos:start="23:13" pos:end="23:48"><expr pos:start="23:13" pos:end="23:47"><name pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:17">block</name><index pos:start="23:18" pos:end="23:20">[<expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>]</index></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:31"><name pos:start="23:24" pos:end="23:28">block</name><index pos:start="23:29" pos:end="23:31">[<expr pos:start="23:30" pos:end="23:30"><literal type="number" pos:start="23:30" pos:end="23:30">0</literal></expr>]</index></name> <operator pos:start="23:33" pos:end="23:33">*</operator> <name pos:start="23:35" pos:end="23:47"><name pos:start="23:35" pos:end="23:35">s</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:47">y_dc_scale</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="25:9" pos:end="27:48">else<block type="pseudo" pos:start="27:13" pos:end="27:48"><block_content pos:start="27:13" pos:end="27:48">

            <expr_stmt pos:start="27:13" pos:end="27:48"><expr pos:start="27:13" pos:end="27:47"><name pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:17">block</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>]</index></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:31"><name pos:start="27:24" pos:end="27:28">block</name><index pos:start="27:29" pos:end="27:31">[<expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">0</literal></expr>]</index></name> <operator pos:start="27:33" pos:end="27:33">*</operator> <name pos:start="27:35" pos:end="27:47"><name pos:start="27:35" pos:end="27:35">s</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:47">c_dc_scale</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:39"><expr pos:start="29:9" pos:end="29:38"><name pos:start="29:9" pos:end="29:20">quant_matrix</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:38"><name pos:start="29:24" pos:end="29:24">s</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:38">intra_matrix</name></name></expr>;</expr_stmt>

        <for pos:start="31:9" pos:end="65:9">for<control pos:start="31:12" pos:end="31:30">(<init pos:start="31:13" pos:end="31:16"><expr pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:13">i</name><operator pos:start="31:14" pos:end="31:14">=</operator><literal type="number" pos:start="31:15" pos:end="31:15">1</literal></expr>;</init><condition pos:start="31:17" pos:end="31:26"><expr pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:17">i</name><operator pos:start="31:18" pos:end="31:18">&lt;</operator><name pos:start="31:19" pos:end="31:25">nCoeffs</name></expr>;</condition><incr pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:27">i</name><operator pos:start="31:28" pos:end="31:29">++</operator></expr></incr>)</control> <block pos:start="31:32" pos:end="65:9">{<block_content pos:start="33:13" pos:end="63:13">

            <decl_stmt pos:start="33:13" pos:end="33:36"><decl pos:start="33:13" pos:end="33:35"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:17">j</name><init pos:start="33:18" pos:end="33:35">= <expr pos:start="33:20" pos:end="33:35"><name pos:start="33:20" pos:end="33:35"><name pos:start="33:20" pos:end="33:32">zigzag_direct</name><index pos:start="33:33" pos:end="33:35">[<expr pos:start="33:34" pos:end="33:34"><name pos:start="33:34" pos:end="33:34">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:29"><expr pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:17">level</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:28"><name pos:start="35:21" pos:end="35:25">block</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><name pos:start="35:27" pos:end="35:27">j</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="63:13"><if pos:start="37:13" pos:end="63:13">if <condition pos:start="37:16" pos:end="37:22">(<expr pos:start="37:17" pos:end="37:21"><name pos:start="37:17" pos:end="37:21">level</name></expr>)</condition> <block pos:start="37:24" pos:end="63:13">{<block_content pos:start="39:17" pos:end="61:33">

                <if_stmt pos:start="39:17" pos:end="54:0"><if pos:start="39:17" pos:end="47:17">if <condition pos:start="39:20" pos:end="39:30">(<expr pos:start="39:21" pos:end="39:29"><name pos:start="39:21" pos:end="39:25">level</name> <operator pos:start="39:27" pos:end="39:27">&lt;</operator> <literal type="number" pos:start="39:29" pos:end="39:29">0</literal></expr>)</condition> <block pos:start="39:32" pos:end="47:17">{<block_content pos:start="41:21" pos:end="45:35">

                    <expr_stmt pos:start="41:21" pos:end="41:35"><expr pos:start="41:21" pos:end="41:34"><name pos:start="41:21" pos:end="41:25">level</name> <operator pos:start="41:27" pos:end="41:27">=</operator> <operator pos:start="41:29" pos:end="41:29">-</operator><name pos:start="41:30" pos:end="41:34">level</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:73"><expr pos:start="43:21" pos:end="43:72"><name pos:start="43:21" pos:end="43:25">level</name> <operator pos:start="43:27" pos:end="43:27">=</operator> <operator pos:start="43:29" pos:end="43:29">(</operator><name pos:start="43:30" pos:end="43:32">int</name><operator pos:start="43:33" pos:end="43:33">)</operator><operator pos:start="43:34" pos:end="43:34">(</operator><name pos:start="43:35" pos:end="43:39">level</name> <operator pos:start="43:41" pos:end="43:41">*</operator> <name pos:start="43:43" pos:end="43:48">qscale</name> <operator pos:start="43:50" pos:end="43:50">*</operator> <name pos:start="43:52" pos:end="43:66"><name pos:start="43:52" pos:end="43:63">quant_matrix</name><index pos:start="43:64" pos:end="43:66">[<expr pos:start="43:65" pos:end="43:65"><name pos:start="43:65" pos:end="43:65">j</name></expr>]</index></name><operator pos:start="43:67" pos:end="43:67">)</operator> <operator pos:start="43:69" pos:end="43:70">&gt;&gt;</operator> <literal type="number" pos:start="43:72" pos:end="43:72">3</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="45:21" pos:end="45:35"><expr pos:start="45:21" pos:end="45:34"><name pos:start="45:21" pos:end="45:25">level</name> <operator pos:start="45:27" pos:end="45:27">=</operator> <operator pos:start="45:29" pos:end="45:29">-</operator><name pos:start="45:30" pos:end="45:34">level</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="47:19" pos:end="54:0">else <block pos:start="47:24" pos:end="54:0">{<block_content pos:start="49:21" pos:end="49:73">

                    <expr_stmt pos:start="49:21" pos:end="49:73"><expr pos:start="49:21" pos:end="49:72"><name pos:start="49:21" pos:end="49:25">level</name> <operator pos:start="49:27" pos:end="49:27">=</operator> <operator pos:start="49:29" pos:end="49:29">(</operator><name pos:start="49:30" pos:end="49:32">int</name><operator pos:start="49:33" pos:end="49:33">)</operator><operator pos:start="49:34" pos:end="49:34">(</operator><name pos:start="49:35" pos:end="49:39">level</name> <operator pos:start="49:41" pos:end="49:41">*</operator> <name pos:start="49:43" pos:end="49:48">qscale</name> <operator pos:start="49:50" pos:end="49:50">*</operator> <name pos:start="49:52" pos:end="49:66"><name pos:start="49:52" pos:end="49:63">quant_matrix</name><index pos:start="49:64" pos:end="49:66">[<expr pos:start="49:65" pos:end="49:65"><name pos:start="49:65" pos:end="49:65">j</name></expr>]</index></name><operator pos:start="49:67" pos:end="49:67">)</operator> <operator pos:start="49:69" pos:end="49:70">&gt;&gt;</operator> <literal type="number" pos:start="49:72" pos:end="49:72">3</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

<cpp:ifdef pos:start="53:1" pos:end="53:15">#<cpp:directive pos:start="53:2" pos:end="53:6">ifdef</cpp:directive> <name pos:start="53:8" pos:end="53:15">PARANOID</name></cpp:ifdef>

                <if_stmt pos:start="55:17" pos:end="60:0"><if pos:start="55:17" pos:end="60:0">if <condition pos:start="55:20" pos:end="55:50">(<expr pos:start="55:21" pos:end="55:49"><name pos:start="55:21" pos:end="55:44"><name pos:start="55:21" pos:end="55:25">level</name> <argument_list type="generic" pos:start="55:27" pos:end="55:44">&lt; <argument pos:start="55:29" pos:end="55:42"><expr pos:start="55:29" pos:end="55:42"><operator pos:start="55:29" pos:end="55:29">-</operator><literal type="number" pos:start="55:30" pos:end="55:33">2048</literal> <operator pos:start="55:35" pos:end="55:36">||</operator> <name pos:start="55:38" pos:end="55:42">level</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="55:46" pos:end="55:49">2047</literal></expr>)</condition><block type="pseudo" pos:start="57:21" pos:end="60:0"><block_content pos:start="57:21" pos:end="60:0">

                    <expr_stmt pos:start="57:21" pos:end="60:0"><expr pos:start="57:21" pos:end="57:70"><call pos:start="57:21" pos:end="57:70"><name pos:start="57:21" pos:end="57:27">fprintf</name><argument_list pos:start="57:28" pos:end="57:70">(<argument pos:start="57:29" pos:end="57:34"><expr pos:start="57:29" pos:end="57:34"><name pos:start="57:29" pos:end="57:34">stderr</name></expr></argument>, <argument pos:start="57:37" pos:end="57:59"><expr pos:start="57:37" pos:end="57:59"><literal type="string" pos:start="57:37" pos:end="57:59">"unquant error %d %d\n"</literal></expr></argument>, <argument pos:start="57:62" pos:end="57:62"><expr pos:start="57:62" pos:end="57:62"><name pos:start="57:62" pos:end="57:62">i</name></expr></argument>, <argument pos:start="57:65" pos:end="57:69"><expr pos:start="57:65" pos:end="57:69"><name pos:start="57:65" pos:end="57:69">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="59:1" pos:end="59:6">#<cpp:directive pos:start="59:2" pos:end="59:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="61:17" pos:end="61:33"><expr pos:start="61:17" pos:end="61:32"><name pos:start="61:17" pos:end="61:24"><name pos:start="61:17" pos:end="61:21">block</name><index pos:start="61:22" pos:end="61:24">[<expr pos:start="61:23" pos:end="61:23"><name pos:start="61:23" pos:end="61:23">j</name></expr>]</index></name> <operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:32">level</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="119:5">else <block pos:start="67:12" pos:end="119:5">{<block_content pos:start="69:9" pos:end="117:25">

        <decl_stmt pos:start="69:9" pos:end="69:19"><decl pos:start="69:9" pos:end="69:18"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:15">sum</name><init pos:start="69:16" pos:end="69:18">=<expr pos:start="69:17" pos:end="69:18"><operator pos:start="69:17" pos:end="69:17">-</operator><literal type="number" pos:start="69:18" pos:end="69:18">1</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:14"><expr pos:start="71:9" pos:end="71:13"><name pos:start="71:9" pos:end="71:9">i</name> <operator pos:start="71:11" pos:end="71:11">=</operator> <literal type="number" pos:start="71:13" pos:end="71:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:43"><expr pos:start="73:9" pos:end="73:42"><name pos:start="73:9" pos:end="73:20">quant_matrix</name> <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:42"><name pos:start="73:24" pos:end="73:24">s</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:42">non_intra_matrix</name></name></expr>;</expr_stmt>

        <for pos:start="75:9" pos:end="115:9">for<control pos:start="75:12" pos:end="75:27">(<init pos:start="75:13" pos:end="75:13">;</init><condition pos:start="75:14" pos:end="75:23"><expr pos:start="75:14" pos:end="75:22"><name pos:start="75:14" pos:end="75:14">i</name><operator pos:start="75:15" pos:end="75:15">&lt;</operator><name pos:start="75:16" pos:end="75:22">nCoeffs</name></expr>;</condition><incr pos:start="75:24" pos:end="75:26"><expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:24">i</name><operator pos:start="75:25" pos:end="75:26">++</operator></expr></incr>)</control> <block pos:start="75:29" pos:end="115:9">{<block_content pos:start="77:13" pos:end="113:13">

            <decl_stmt pos:start="77:13" pos:end="77:36"><decl pos:start="77:13" pos:end="77:35"><type pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:15">int</name></type> <name pos:start="77:17" pos:end="77:17">j</name><init pos:start="77:18" pos:end="77:35">= <expr pos:start="77:20" pos:end="77:35"><name pos:start="77:20" pos:end="77:35"><name pos:start="77:20" pos:end="77:32">zigzag_direct</name><index pos:start="77:33" pos:end="77:35">[<expr pos:start="77:34" pos:end="77:34"><name pos:start="77:34" pos:end="77:34">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:29"><expr pos:start="79:13" pos:end="79:28"><name pos:start="79:13" pos:end="79:17">level</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <name pos:start="79:21" pos:end="79:28"><name pos:start="79:21" pos:end="79:25">block</name><index pos:start="79:26" pos:end="79:28">[<expr pos:start="79:27" pos:end="79:27"><name pos:start="79:27" pos:end="79:27">j</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="113:13"><if pos:start="81:13" pos:end="113:13">if <condition pos:start="81:16" pos:end="81:22">(<expr pos:start="81:17" pos:end="81:21"><name pos:start="81:17" pos:end="81:21">level</name></expr>)</condition> <block pos:start="81:24" pos:end="113:13">{<block_content pos:start="83:17" pos:end="111:27">

                <if_stmt pos:start="83:17" pos:end="102:0"><if pos:start="83:17" pos:end="93:17">if <condition pos:start="83:20" pos:end="83:30">(<expr pos:start="83:21" pos:end="83:29"><name pos:start="83:21" pos:end="83:25">level</name> <operator pos:start="83:27" pos:end="83:27">&lt;</operator> <literal type="number" pos:start="83:29" pos:end="83:29">0</literal></expr>)</condition> <block pos:start="83:32" pos:end="93:17">{<block_content pos:start="85:21" pos:end="91:35">

                    <expr_stmt pos:start="85:21" pos:end="85:35"><expr pos:start="85:21" pos:end="85:34"><name pos:start="85:21" pos:end="85:25">level</name> <operator pos:start="85:27" pos:end="85:27">=</operator> <operator pos:start="85:29" pos:end="85:29">-</operator><name pos:start="85:30" pos:end="85:34">level</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="87:21" pos:end="89:61"><expr pos:start="87:21" pos:end="89:60"><name pos:start="87:21" pos:end="87:25">level</name> <operator pos:start="87:27" pos:end="87:27">=</operator> <operator pos:start="87:29" pos:end="87:29">(</operator><operator pos:start="87:30" pos:end="87:30">(</operator><operator pos:start="87:31" pos:end="87:31">(</operator><name pos:start="87:32" pos:end="87:36">level</name> <operator pos:start="87:38" pos:end="87:39">&lt;&lt;</operator> <literal type="number" pos:start="87:41" pos:end="87:41">1</literal><operator pos:start="87:42" pos:end="87:42">)</operator> <operator pos:start="87:44" pos:end="87:44">+</operator> <literal type="number" pos:start="87:46" pos:end="87:46">1</literal><operator pos:start="87:47" pos:end="87:47">)</operator> <operator pos:start="87:49" pos:end="87:49">*</operator> <name pos:start="87:51" pos:end="87:56">qscale</name> <operator pos:start="87:58" pos:end="87:58">*</operator>

                             <operator pos:start="89:30" pos:end="89:30">(</operator><operator pos:start="89:31" pos:end="89:31">(</operator><name pos:start="89:32" pos:end="89:34">int</name><operator pos:start="89:35" pos:end="89:35">)</operator> <operator pos:start="89:37" pos:end="89:37">(</operator><name pos:start="89:38" pos:end="89:52"><name pos:start="89:38" pos:end="89:49">quant_matrix</name><index pos:start="89:50" pos:end="89:52">[<expr pos:start="89:51" pos:end="89:51"><name pos:start="89:51" pos:end="89:51">j</name></expr>]</index></name><operator pos:start="89:53" pos:end="89:53">)</operator><operator pos:start="89:54" pos:end="89:54">)</operator><operator pos:start="89:55" pos:end="89:55">)</operator> <operator pos:start="89:57" pos:end="89:58">&gt;&gt;</operator> <literal type="number" pos:start="89:60" pos:end="89:60">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:35"><expr pos:start="91:21" pos:end="91:34"><name pos:start="91:21" pos:end="91:25">level</name> <operator pos:start="91:27" pos:end="91:27">=</operator> <operator pos:start="91:29" pos:end="91:29">-</operator><name pos:start="91:30" pos:end="91:34">level</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="93:19" pos:end="102:0">else <block pos:start="93:24" pos:end="102:0">{<block_content pos:start="95:21" pos:end="97:61">

                    <expr_stmt pos:start="95:21" pos:end="97:61"><expr pos:start="95:21" pos:end="97:60"><name pos:start="95:21" pos:end="95:25">level</name> <operator pos:start="95:27" pos:end="95:27">=</operator> <operator pos:start="95:29" pos:end="95:29">(</operator><operator pos:start="95:30" pos:end="95:30">(</operator><operator pos:start="95:31" pos:end="95:31">(</operator><name pos:start="95:32" pos:end="95:36">level</name> <operator pos:start="95:38" pos:end="95:39">&lt;&lt;</operator> <literal type="number" pos:start="95:41" pos:end="95:41">1</literal><operator pos:start="95:42" pos:end="95:42">)</operator> <operator pos:start="95:44" pos:end="95:44">+</operator> <literal type="number" pos:start="95:46" pos:end="95:46">1</literal><operator pos:start="95:47" pos:end="95:47">)</operator> <operator pos:start="95:49" pos:end="95:49">*</operator> <name pos:start="95:51" pos:end="95:56">qscale</name> <operator pos:start="95:58" pos:end="95:58">*</operator>

                             <operator pos:start="97:30" pos:end="97:30">(</operator><operator pos:start="97:31" pos:end="97:31">(</operator><name pos:start="97:32" pos:end="97:34">int</name><operator pos:start="97:35" pos:end="97:35">)</operator> <operator pos:start="97:37" pos:end="97:37">(</operator><name pos:start="97:38" pos:end="97:52"><name pos:start="97:38" pos:end="97:49">quant_matrix</name><index pos:start="97:50" pos:end="97:52">[<expr pos:start="97:51" pos:end="97:51"><name pos:start="97:51" pos:end="97:51">j</name></expr>]</index></name><operator pos:start="97:53" pos:end="97:53">)</operator><operator pos:start="97:54" pos:end="97:54">)</operator><operator pos:start="97:55" pos:end="97:55">)</operator> <operator pos:start="97:57" pos:end="97:58">&gt;&gt;</operator> <literal type="number" pos:start="97:60" pos:end="97:60">4</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

<cpp:ifdef pos:start="101:1" pos:end="101:15">#<cpp:directive pos:start="101:2" pos:end="101:6">ifdef</cpp:directive> <name pos:start="101:8" pos:end="101:15">PARANOID</name></cpp:ifdef>

                <if_stmt pos:start="103:17" pos:end="108:0"><if pos:start="103:17" pos:end="108:0">if <condition pos:start="103:20" pos:end="103:50">(<expr pos:start="103:21" pos:end="103:49"><name pos:start="103:21" pos:end="103:44"><name pos:start="103:21" pos:end="103:25">level</name> <argument_list type="generic" pos:start="103:27" pos:end="103:44">&lt; <argument pos:start="103:29" pos:end="103:42"><expr pos:start="103:29" pos:end="103:42"><operator pos:start="103:29" pos:end="103:29">-</operator><literal type="number" pos:start="103:30" pos:end="103:33">2048</literal> <operator pos:start="103:35" pos:end="103:36">||</operator> <name pos:start="103:38" pos:end="103:42">level</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="103:46" pos:end="103:49">2047</literal></expr>)</condition><block type="pseudo" pos:start="105:21" pos:end="108:0"><block_content pos:start="105:21" pos:end="108:0">

                    <expr_stmt pos:start="105:21" pos:end="108:0"><expr pos:start="105:21" pos:end="105:70"><call pos:start="105:21" pos:end="105:70"><name pos:start="105:21" pos:end="105:27">fprintf</name><argument_list pos:start="105:28" pos:end="105:70">(<argument pos:start="105:29" pos:end="105:34"><expr pos:start="105:29" pos:end="105:34"><name pos:start="105:29" pos:end="105:34">stderr</name></expr></argument>, <argument pos:start="105:37" pos:end="105:59"><expr pos:start="105:37" pos:end="105:59"><literal type="string" pos:start="105:37" pos:end="105:59">"unquant error %d %d\n"</literal></expr></argument>, <argument pos:start="105:62" pos:end="105:62"><expr pos:start="105:62" pos:end="105:62"><name pos:start="105:62" pos:end="105:62">i</name></expr></argument>, <argument pos:start="105:65" pos:end="105:69"><expr pos:start="105:65" pos:end="105:69"><name pos:start="105:65" pos:end="105:69">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="107:1" pos:end="107:6">#<cpp:directive pos:start="107:2" pos:end="107:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="109:17" pos:end="109:33"><expr pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:24"><name pos:start="109:17" pos:end="109:21">block</name><index pos:start="109:22" pos:end="109:24">[<expr pos:start="109:23" pos:end="109:23"><name pos:start="109:23" pos:end="109:23">j</name></expr>]</index></name> <operator pos:start="109:26" pos:end="109:26">=</operator> <name pos:start="109:28" pos:end="109:32">level</name></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:27"><expr pos:start="111:17" pos:end="111:26"><name pos:start="111:17" pos:end="111:19">sum</name><operator pos:start="111:20" pos:end="111:21">+=</operator><name pos:start="111:22" pos:end="111:26">level</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="117:9" pos:end="117:25"><expr pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:17"><name pos:start="117:9" pos:end="117:13">block</name><index pos:start="117:14" pos:end="117:17">[<expr pos:start="117:15" pos:end="117:16"><literal type="number" pos:start="117:15" pos:end="117:16">63</literal></expr>]</index></name><operator pos:start="117:18" pos:end="117:19">^=</operator><name pos:start="117:20" pos:end="117:22">sum</name><operator pos:start="117:23" pos:end="117:23">&amp;</operator><literal type="number" pos:start="117:24" pos:end="117:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
