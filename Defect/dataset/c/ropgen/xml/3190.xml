<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3190.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">gboolean</name></type> <name pos:start="1:17" pos:end="1:28">udp_chr_read</name><parameter_list pos:start="1:29" pos:end="1:79">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:39">GIOChannel</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">chan</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:59">GIOCondition</name></type> <name pos:start="1:61" pos:end="1:64">cond</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:78"><decl pos:start="1:67" pos:end="1:78"><type pos:start="1:67" pos:end="1:78"><name pos:start="1:67" pos:end="1:70">void</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:78">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:16">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CharDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">chr</name> <init pos:start="5:26" pos:end="5:33">= <expr pos:start="5:28" pos:end="5:33"><name pos:start="5:28" pos:end="5:33">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">NetCharDriver</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:34">= <expr pos:start="7:24" pos:end="7:34"><name pos:start="7:24" pos:end="7:34"><name pos:start="7:24" pos:end="7:26">chr</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">gsize</name></type> <name pos:start="9:11" pos:end="9:20">bytes_read</name> <init pos:start="9:22" pos:end="9:24">= <expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">GIOStatus</name></type> <name pos:start="11:15" pos:end="11:20">status</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:25">(<expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:19">max_size</name></name> <operator pos:start="15:21" pos:end="15:22">==</operator> <literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr>)</condition> <block pos:start="15:27" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:20">

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">TRUE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="23:56"><expr pos:start="21:5" pos:end="23:55"><name pos:start="21:5" pos:end="21:10">status</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="23:55"><name pos:start="21:14" pos:end="21:36">g_io_channel_read_chars</name><argument_list pos:start="21:37" pos:end="23:55">(<argument pos:start="21:38" pos:end="21:44"><expr pos:start="21:38" pos:end="21:44"><name pos:start="21:38" pos:end="21:44"><name pos:start="21:38" pos:end="21:38">s</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:44">chan</name></name></expr></argument>, <argument pos:start="21:47" pos:end="21:61"><expr pos:start="21:47" pos:end="21:61"><operator pos:start="21:47" pos:end="21:47">(</operator><name pos:start="21:48" pos:end="21:52">gchar</name> <operator pos:start="21:54" pos:end="21:54">*</operator><operator pos:start="21:55" pos:end="21:55">)</operator><name pos:start="21:56" pos:end="21:61"><name pos:start="21:56" pos:end="21:56">s</name><operator pos:start="21:57" pos:end="21:58">-&gt;</operator><name pos:start="21:59" pos:end="21:61">buf</name></name></expr></argument>, <argument pos:start="21:64" pos:end="21:77"><expr pos:start="21:64" pos:end="21:77"><sizeof pos:start="21:64" pos:end="21:77">sizeof<argument_list pos:start="21:70" pos:end="21:77">(<argument pos:start="21:71" pos:end="21:76"><expr pos:start="21:71" pos:end="21:76"><name pos:start="21:71" pos:end="21:76"><name pos:start="21:71" pos:end="21:71">s</name><operator pos:start="21:72" pos:end="21:73">-&gt;</operator><name pos:start="21:74" pos:end="21:76">buf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                     <argument pos:start="23:38" pos:end="23:48"><expr pos:start="23:38" pos:end="23:48"><operator pos:start="23:38" pos:end="23:38">&amp;</operator><name pos:start="23:39" pos:end="23:48">bytes_read</name></expr></argument>, <argument pos:start="23:51" pos:end="23:54"><expr pos:start="23:51" pos:end="23:54"><name pos:start="23:51" pos:end="23:54">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:13">bufcnt</name></name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:26">bytes_read</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:26"><expr pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:13">bufptr</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:25"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:25">bufcnt</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="41:5"><if pos:start="29:5" pos:end="41:5">if <condition pos:start="29:8" pos:end="29:37">(<expr pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:14">status</name> <operator pos:start="29:16" pos:end="29:17">!=</operator> <name pos:start="29:19" pos:end="29:36">G_IO_STATUS_NORMAL</name></expr>)</condition> <block pos:start="29:39" pos:end="41:5">{<block_content pos:start="31:9" pos:end="39:21">

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:19">(<expr pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:18">tag</name></name></expr>)</condition> <block pos:start="31:21" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:23">

            <expr_stmt pos:start="33:13" pos:end="33:36"><expr pos:start="33:13" pos:end="33:35"><call pos:start="33:13" pos:end="33:35"><name pos:start="33:13" pos:end="33:27">g_source_remove</name><argument_list pos:start="33:28" pos:end="33:35">(<argument pos:start="33:29" pos:end="33:34"><expr pos:start="33:29" pos:end="33:34"><name pos:start="33:29" pos:end="33:34"><name pos:start="33:29" pos:end="33:29">s</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:34">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:23"><expr pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:18">tag</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <literal type="number" pos:start="35:22" pos:end="35:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="39:9" pos:end="39:21">return <expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20">FALSE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:18"><expr pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:13"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:13">bufptr</name></name> <operator pos:start="45:15" pos:end="45:15">=</operator> <literal type="number" pos:start="45:17" pos:end="45:17">0</literal></expr>;</expr_stmt>

    <while pos:start="47:5" pos:end="55:5">while <condition pos:start="47:11" pos:end="47:52">(<expr pos:start="47:12" pos:end="47:51"><name pos:start="47:12" pos:end="47:22"><name pos:start="47:12" pos:end="47:12">s</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:22">max_size</name></name> <operator pos:start="47:24" pos:end="47:24">&gt;</operator> <literal type="number" pos:start="47:26" pos:end="47:26">0</literal> <operator pos:start="47:28" pos:end="47:29">&amp;&amp;</operator> <name pos:start="47:31" pos:end="47:39"><name pos:start="47:31" pos:end="47:31">s</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:39">bufptr</name></name> <operator pos:start="47:41" pos:end="47:41">&lt;</operator> <name pos:start="47:43" pos:end="47:51"><name pos:start="47:43" pos:end="47:43">s</name><operator pos:start="47:44" pos:end="47:45">-&gt;</operator><name pos:start="47:46" pos:end="47:51">bufcnt</name></name></expr>)</condition> <block pos:start="47:54" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:49">

        <expr_stmt pos:start="49:9" pos:end="49:54"><expr pos:start="49:9" pos:end="49:53"><call pos:start="49:9" pos:end="49:53"><name pos:start="49:9" pos:end="49:25">qemu_chr_be_write</name><argument_list pos:start="49:26" pos:end="49:53">(<argument pos:start="49:27" pos:end="49:29"><expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:29">chr</name></expr></argument>, <argument pos:start="49:32" pos:end="49:49"><expr pos:start="49:32" pos:end="49:49"><operator pos:start="49:32" pos:end="49:32">&amp;</operator><name pos:start="49:33" pos:end="49:49"><name pos:start="49:33" pos:end="49:33">s</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:38">buf</name><index pos:start="49:39" pos:end="49:49">[<expr pos:start="49:40" pos:end="49:48"><name pos:start="49:40" pos:end="49:48"><name pos:start="49:40" pos:end="49:40">s</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:48">bufptr</name></name></expr>]</index></name></expr></argument>, <argument pos:start="49:52" pos:end="49:52"><expr pos:start="49:52" pos:end="49:52"><literal type="number" pos:start="49:52" pos:end="49:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:20"><expr pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:17">bufptr</name></name><operator pos:start="51:18" pos:end="51:19">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:49"><expr pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:19">max_size</name></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:48"><name pos:start="53:23" pos:end="53:43">qemu_chr_be_can_write</name><argument_list pos:start="53:44" pos:end="53:48">(<argument pos:start="53:45" pos:end="53:47"><expr pos:start="53:45" pos:end="53:47"><name pos:start="53:45" pos:end="53:47">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="59:5" pos:end="59:16">return <expr pos:start="59:12" pos:end="59:15"><name pos:start="59:12" pos:end="59:15">TRUE</name></expr>;</return>

</block_content>}</block></function>
</unit>
