<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18255.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:54"><name pos:start="1:1" pos:end="1:20">iscsi_aio_write16_cb</name><argument_list pos:start="1:21" pos:end="3:54">(<argument pos:start="1:22" pos:end="1:48">struct iscsi_context *iscsi</argument>, <argument pos:start="1:51" pos:end="1:60">int status</argument>,

                     <argument pos:start="3:22" pos:end="3:39">void *command_data</argument>, <argument pos:start="3:42" pos:end="3:53">void *opaque</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:27">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">IscsiAIOCB</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">acb</name> <init pos:start="7:21" pos:end="7:28">= <expr pos:start="7:23" pos:end="7:28"><name pos:start="7:23" pos:end="7:28">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:66"><expr pos:start="11:5" pos:end="11:65"><call pos:start="11:5" pos:end="11:65"><name pos:start="11:5" pos:end="11:30">trace_iscsi_aio_write16_cb</name><argument_list pos:start="11:31" pos:end="11:65">(<argument pos:start="11:32" pos:end="11:36"><expr pos:start="11:32" pos:end="11:36"><name pos:start="11:32" pos:end="11:36">iscsi</name></expr></argument>, <argument pos:start="11:39" pos:end="11:44"><expr pos:start="11:39" pos:end="11:44"><name pos:start="11:39" pos:end="11:44">status</name></expr></argument>, <argument pos:start="11:47" pos:end="11:49"><expr pos:start="11:47" pos:end="11:49"><name pos:start="11:47" pos:end="11:49">acb</name></expr></argument>, <argument pos:start="11:52" pos:end="11:64"><expr pos:start="11:52" pos:end="11:64"><name pos:start="11:52" pos:end="11:64"><name pos:start="11:52" pos:end="11:54">acb</name><operator pos:start="11:55" pos:end="11:56">-&gt;</operator><name pos:start="11:57" pos:end="11:64">canceled</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><call pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:10">g_free</name><argument_list pos:start="15:11" pos:end="15:20">(<argument pos:start="15:12" pos:end="15:19"><expr pos:start="15:12" pos:end="15:19"><name pos:start="15:12" pos:end="15:19"><name pos:start="15:12" pos:end="15:14">acb</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:19">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:7">acb</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:12">buf</name></name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:27">(<expr pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:11">acb</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:21">canceled</name></name> <operator pos:start="21:23" pos:end="21:24">!=</operator> <literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr>)</condition> <block pos:start="21:29" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:15">

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:20"><expr pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:7">acb</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:15">status</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:14">status</name> <operator pos:start="31:16" pos:end="31:16">&lt;</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>)</condition> <block pos:start="31:21" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:27">

        <expr_stmt pos:start="33:9" pos:end="35:45"><expr pos:start="33:9" pos:end="35:44"><call pos:start="33:9" pos:end="35:44"><name pos:start="33:9" pos:end="33:20">error_report</name><argument_list pos:start="33:21" pos:end="35:44">(<argument pos:start="33:22" pos:end="33:62"><expr pos:start="33:22" pos:end="33:62"><literal type="string" pos:start="33:22" pos:end="33:62">"Failed to write16 data to iSCSI lun. %s"</literal></expr></argument>,

                     <argument pos:start="35:22" pos:end="35:43"><expr pos:start="35:22" pos:end="35:43"><call pos:start="35:22" pos:end="35:43"><name pos:start="35:22" pos:end="35:36">iscsi_get_error</name><argument_list pos:start="35:37" pos:end="35:43">(<argument pos:start="35:38" pos:end="35:42"><expr pos:start="35:38" pos:end="35:42"><name pos:start="35:38" pos:end="35:42">iscsi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:11">acb</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:19">status</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <operator pos:start="37:23" pos:end="37:23">-</operator><name pos:start="37:24" pos:end="37:26">EIO</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:27"><expr pos:start="43:5" pos:end="43:26"><call pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:21">iscsi_schedule_bh</name><argument_list pos:start="43:22" pos:end="43:26">(<argument pos:start="43:23" pos:end="43:25"><expr pos:start="43:23" pos:end="43:25"><name pos:start="43:23" pos:end="43:25">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
