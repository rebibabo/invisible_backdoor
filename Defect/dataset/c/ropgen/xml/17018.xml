<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17018.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:10">ram_addr_t</name></type> <name pos:start="1:12" pos:end="1:25">qemu_ram_alloc</name><parameter_list pos:start="1:26" pos:end="1:42">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:36"><name pos:start="1:27" pos:end="1:36">ram_addr_t</name></type> <name pos:start="1:38" pos:end="1:41">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:29">

    <decl_stmt pos:start="5:5" pos:end="10:0"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">RAMBlock</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:23">new_block</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="9:1" pos:end="9:19">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:19">CONFIG_KQEMU</name></cpp:ifdef>

    <if_stmt pos:start="11:5" pos:end="18:0"><if pos:start="11:5" pos:end="18:0">if <condition pos:start="11:8" pos:end="11:28">(<expr pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:27">kqemu_phys_ram_base</name></expr>)</condition> <block pos:start="11:30" pos:end="18:0">{<block_content pos:start="13:9" pos:end="13:37">

        <return pos:start="13:9" pos:end="13:37">return <expr pos:start="13:16" pos:end="13:36"><call pos:start="13:16" pos:end="13:36"><name pos:start="13:16" pos:end="13:30">kqemu_ram_alloc</name><argument_list pos:start="13:31" pos:end="13:36">(<argument pos:start="13:32" pos:end="13:35"><expr pos:start="13:32" pos:end="13:35"><name pos:start="13:32" pos:end="13:35">size</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:8">size</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:34"><name pos:start="21:12" pos:end="21:28">TARGET_PAGE_ALIGN</name><argument_list pos:start="21:29" pos:end="21:34">(<argument pos:start="21:30" pos:end="21:33"><expr pos:start="21:30" pos:end="21:33"><name pos:start="21:30" pos:end="21:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:48"><expr pos:start="23:5" pos:end="23:47"><name pos:start="23:5" pos:end="23:13">new_block</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:47"><name pos:start="23:17" pos:end="23:27">qemu_malloc</name><argument_list pos:start="23:28" pos:end="23:47">(<argument pos:start="23:29" pos:end="23:46"><expr pos:start="23:29" pos:end="23:46"><sizeof pos:start="23:29" pos:end="23:46">sizeof<argument_list pos:start="23:35" pos:end="23:46">(<argument pos:start="23:36" pos:end="23:45"><expr pos:start="23:36" pos:end="23:45"><operator pos:start="23:36" pos:end="23:36">*</operator><name pos:start="23:37" pos:end="23:45">new_block</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:41"><expr pos:start="27:5" pos:end="27:40"><name pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:13">new_block</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:19">host</name></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <call pos:start="27:23" pos:end="27:40"><name pos:start="27:23" pos:end="27:34">qemu_vmalloc</name><argument_list pos:start="27:35" pos:end="27:40">(<argument pos:start="27:36" pos:end="27:39"><expr pos:start="27:36" pos:end="27:39"><name pos:start="27:36" pos:end="27:39">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:40"><expr pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:13">new_block</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:21">offset</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:39">last_ram_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:13">new_block</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:21">length</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <name pos:start="31:25" pos:end="31:28">size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:13">new_block</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:19">next</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <name pos:start="35:23" pos:end="35:32">ram_blocks</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:14">ram_blocks</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:26">new_block</name></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:54"><expr pos:start="41:5" pos:end="43:53"><name pos:start="41:5" pos:end="41:18">phys_ram_dirty</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <call pos:start="41:22" pos:end="43:53"><name pos:start="41:22" pos:end="41:33">qemu_realloc</name><argument_list pos:start="41:34" pos:end="43:53">(<argument pos:start="41:35" pos:end="41:48"><expr pos:start="41:35" pos:end="41:48"><name pos:start="41:35" pos:end="41:48">phys_ram_dirty</name></expr></argument>,

        <argument pos:start="43:9" pos:end="43:52"><expr pos:start="43:9" pos:end="43:52"><operator pos:start="43:9" pos:end="43:9">(</operator><name pos:start="43:10" pos:end="43:24">last_ram_offset</name> <operator pos:start="43:26" pos:end="43:26">+</operator> <name pos:start="43:28" pos:end="43:31">size</name><operator pos:start="43:32" pos:end="43:32">)</operator> <operator pos:start="43:34" pos:end="43:35">&gt;&gt;</operator> <name pos:start="43:37" pos:end="43:52">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:43"><expr pos:start="45:5" pos:end="47:42"><call pos:start="45:5" pos:end="47:42"><name pos:start="45:5" pos:end="45:10">memset</name><argument_list pos:start="45:11" pos:end="47:42">(<argument pos:start="45:12" pos:end="45:65"><expr pos:start="45:12" pos:end="45:65"><name pos:start="45:12" pos:end="45:25">phys_ram_dirty</name> <operator pos:start="45:27" pos:end="45:27">+</operator> <operator pos:start="45:29" pos:end="45:29">(</operator><name pos:start="45:30" pos:end="45:44">last_ram_offset</name> <operator pos:start="45:46" pos:end="45:47">&gt;&gt;</operator> <name pos:start="45:49" pos:end="45:64">TARGET_PAGE_BITS</name><operator pos:start="45:65" pos:end="45:65">)</operator></expr></argument>,

           <argument pos:start="47:12" pos:end="47:15"><expr pos:start="47:12" pos:end="47:15"><literal type="number" pos:start="47:12" pos:end="47:15">0xff</literal></expr></argument>, <argument pos:start="47:18" pos:end="47:41"><expr pos:start="47:18" pos:end="47:41"><name pos:start="47:18" pos:end="47:21">size</name> <operator pos:start="47:23" pos:end="47:24">&gt;&gt;</operator> <name pos:start="47:26" pos:end="47:41">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:28"><expr pos:start="51:5" pos:end="51:27"><name pos:start="51:5" pos:end="51:19">last_ram_offset</name> <operator pos:start="51:21" pos:end="51:22">+=</operator> <name pos:start="51:24" pos:end="51:27">size</name></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="57:54"><if pos:start="55:5" pos:end="57:54">if <condition pos:start="55:8" pos:end="55:22">(<expr pos:start="55:9" pos:end="55:21"><call pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:19">kvm_enabled</name><argument_list pos:start="55:20" pos:end="55:21">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:54"><block_content pos:start="57:9" pos:end="57:54">

        <expr_stmt pos:start="57:9" pos:end="57:54"><expr pos:start="57:9" pos:end="57:53"><call pos:start="57:9" pos:end="57:53"><name pos:start="57:9" pos:end="57:30">kvm_setup_guest_memory</name><argument_list pos:start="57:31" pos:end="57:53">(<argument pos:start="57:32" pos:end="57:46"><expr pos:start="57:32" pos:end="57:46"><name pos:start="57:32" pos:end="57:46"><name pos:start="57:32" pos:end="57:40">new_block</name><operator pos:start="57:41" pos:end="57:42">-&gt;</operator><name pos:start="57:43" pos:end="57:46">host</name></name></expr></argument>, <argument pos:start="57:49" pos:end="57:52"><expr pos:start="57:49" pos:end="57:52"><name pos:start="57:49" pos:end="57:52">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="61:5" pos:end="61:29">return <expr pos:start="61:12" pos:end="61:28"><name pos:start="61:12" pos:end="61:28"><name pos:start="61:12" pos:end="61:20">new_block</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:28">offset</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
