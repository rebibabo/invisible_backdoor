<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1809.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">configure_video_filters</name><parameter_list pos:start="1:35" pos:end="1:94">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><name pos:start="1:36" pos:end="1:48">AVFilterGraph</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">graph</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:71"><decl pos:start="1:58" pos:end="1:71"><type pos:start="1:58" pos:end="1:71"><name pos:start="1:58" pos:end="1:67">VideoState</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:71">is</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:93"><decl pos:start="1:74" pos:end="1:93"><type pos:start="1:74" pos:end="1:93"><specifier pos:start="1:74" pos:end="1:78">const</specifier> <name pos:start="1:80" pos:end="1:83">char</name> <modifier pos:start="1:85" pos:end="1:85">*</modifier></type><name pos:start="1:86" pos:end="1:93">vfilters</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:15">

    <decl_stmt pos:start="5:5" pos:end="5:89"><decl pos:start="5:5" pos:end="5:88"><type pos:start="5:5" pos:end="5:35"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:35"><name pos:start="5:18" pos:end="5:21">enum</name> <name pos:start="5:23" pos:end="5:35">AVPixelFormat</name></name></type> <name pos:start="5:37" pos:end="5:46"><name pos:start="5:37" pos:end="5:44">pix_fmts</name><index pos:start="5:45" pos:end="5:46">[]</index></name> <init pos:start="5:48" pos:end="5:88">= <expr pos:start="5:50" pos:end="5:88"><block pos:start="5:50" pos:end="5:88">{ <expr pos:start="5:52" pos:end="5:69"><name pos:start="5:52" pos:end="5:69">AV_PIX_FMT_YUV420P</name></expr>, <expr pos:start="5:72" pos:end="5:86"><name pos:start="5:72" pos:end="5:86">AV_PIX_FMT_NONE</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:27"><name pos:start="7:10" pos:end="7:22">sws_flags_str</name><index pos:start="7:23" pos:end="7:27">[<expr pos:start="7:24" pos:end="7:26"><literal type="number" pos:start="7:24" pos:end="7:26">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:28"><name pos:start="9:10" pos:end="9:23">buffersrc_args</name><index pos:start="9:24" pos:end="9:28">[<expr pos:start="9:25" pos:end="9:27"><literal type="number" pos:start="9:25" pos:end="9:27">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:73"><decl pos:start="13:5" pos:end="13:72"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:22">AVBufferSinkParams</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:41">buffersink_params</name> <init pos:start="13:43" pos:end="13:72">= <expr pos:start="13:45" pos:end="13:72"><call pos:start="13:45" pos:end="13:72"><name pos:start="13:45" pos:end="13:70">av_buffersink_params_alloc</name><argument_list pos:start="13:71" pos:end="13:72">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:81"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:19">AVFilterContext</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:29">filt_src</name> <init pos:start="15:31" pos:end="15:36">= <expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">NULL</name></expr></init></decl>, <decl pos:start="15:39" pos:end="15:54"><type ref="prev" pos:start="15:5" pos:end="15:21"><modifier pos:start="15:39" pos:end="15:39">*</modifier></type><name pos:start="15:40" pos:end="15:47">filt_out</name> <init pos:start="15:49" pos:end="15:54">= <expr pos:start="15:51" pos:end="15:54"><name pos:start="15:51" pos:end="15:54">NULL</name></expr></init></decl>, <decl pos:start="15:57" pos:end="15:68"><type ref="prev" pos:start="15:5" pos:end="15:21"><modifier pos:start="15:57" pos:end="15:57">*</modifier></type><name pos:start="15:58" pos:end="15:68">filt_format</name></decl>, <decl pos:start="15:71" pos:end="15:80"><type ref="prev" pos:start="15:5" pos:end="15:21"><modifier pos:start="15:71" pos:end="15:71">*</modifier></type><name pos:start="15:72" pos:end="15:80">filt_crop</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:48"><decl pos:start="17:5" pos:end="17:47"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:18">AVCodecContext</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:25">codec</name> <init pos:start="17:27" pos:end="17:47">= <expr pos:start="17:29" pos:end="17:47"><name pos:start="17:29" pos:end="17:47"><name pos:start="17:29" pos:end="17:30">is</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:40">video_st</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:47">codec</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:74"><expr pos:start="21:5" pos:end="21:73"><call pos:start="21:5" pos:end="21:73"><name pos:start="21:5" pos:end="21:12">snprintf</name><argument_list pos:start="21:13" pos:end="21:73">(<argument pos:start="21:14" pos:end="21:26"><expr pos:start="21:14" pos:end="21:26"><name pos:start="21:14" pos:end="21:26">sws_flags_str</name></expr></argument>, <argument pos:start="21:29" pos:end="21:49"><expr pos:start="21:29" pos:end="21:49"><sizeof pos:start="21:29" pos:end="21:49">sizeof<argument_list pos:start="21:35" pos:end="21:49">(<argument pos:start="21:36" pos:end="21:48"><expr pos:start="21:36" pos:end="21:48"><name pos:start="21:36" pos:end="21:48">sws_flags_str</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="21:52" pos:end="21:61"><expr pos:start="21:52" pos:end="21:61"><literal type="string" pos:start="21:52" pos:end="21:61">"flags=%d"</literal></expr></argument>, <argument pos:start="21:64" pos:end="21:72"><expr pos:start="21:64" pos:end="21:72"><name pos:start="21:64" pos:end="21:72">sws_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:53"><expr pos:start="23:5" pos:end="23:52"><name pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:9">graph</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:25">scale_sws_opts</name></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <call pos:start="23:29" pos:end="23:52"><name pos:start="23:29" pos:end="23:37">av_strdup</name><argument_list pos:start="23:38" pos:end="23:52">(<argument pos:start="23:39" pos:end="23:51"><expr pos:start="23:39" pos:end="23:51"><name pos:start="23:39" pos:end="23:51">sws_flags_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="35:77"><expr pos:start="27:5" pos:end="35:76"><call pos:start="27:5" pos:end="35:76"><name pos:start="27:5" pos:end="27:12">snprintf</name><argument_list pos:start="27:13" pos:end="35:76">(<argument pos:start="27:14" pos:end="27:27"><expr pos:start="27:14" pos:end="27:27"><name pos:start="27:14" pos:end="27:27">buffersrc_args</name></expr></argument>, <argument pos:start="27:30" pos:end="27:51"><expr pos:start="27:30" pos:end="27:51"><sizeof pos:start="27:30" pos:end="27:51">sizeof<argument_list pos:start="27:36" pos:end="27:51">(<argument pos:start="27:37" pos:end="27:50"><expr pos:start="27:37" pos:end="27:50"><name pos:start="27:37" pos:end="27:50">buffersrc_args</name></expr></argument>)</argument_list></sizeof></expr></argument>,

             <argument pos:start="29:14" pos:end="29:77"><expr pos:start="29:14" pos:end="29:77"><literal type="string" pos:start="29:14" pos:end="29:77">"video_size=%dx%d:pix_fmt=%d:time_base=%d/%d:pixel_aspect=%d/%d"</literal></expr></argument>,

             <argument pos:start="31:14" pos:end="31:25"><expr pos:start="31:14" pos:end="31:25"><name pos:start="31:14" pos:end="31:25"><name pos:start="31:14" pos:end="31:18">codec</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:25">width</name></name></expr></argument>, <argument pos:start="31:28" pos:end="31:40"><expr pos:start="31:28" pos:end="31:40"><name pos:start="31:28" pos:end="31:40"><name pos:start="31:28" pos:end="31:32">codec</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:40">height</name></name></expr></argument>, <argument pos:start="31:43" pos:end="31:56"><expr pos:start="31:43" pos:end="31:56"><name pos:start="31:43" pos:end="31:56"><name pos:start="31:43" pos:end="31:47">codec</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:56">pix_fmt</name></name></expr></argument>,

             <argument pos:start="33:14" pos:end="33:40"><expr pos:start="33:14" pos:end="33:40"><name pos:start="33:14" pos:end="33:40"><name pos:start="33:14" pos:end="33:15">is</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:25">video_st</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:36">time_base</name><operator pos:start="33:37" pos:end="33:37">.</operator><name pos:start="33:38" pos:end="33:40">num</name></name></expr></argument>, <argument pos:start="33:43" pos:end="33:69"><expr pos:start="33:43" pos:end="33:69"><name pos:start="33:43" pos:end="33:69"><name pos:start="33:43" pos:end="33:44">is</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:54">video_st</name><operator pos:start="33:55" pos:end="33:56">-&gt;</operator><name pos:start="33:57" pos:end="33:65">time_base</name><operator pos:start="33:66" pos:end="33:66">.</operator><name pos:start="33:67" pos:end="33:69">den</name></name></expr></argument>,

             <argument pos:start="35:14" pos:end="35:43"><expr pos:start="35:14" pos:end="35:43"><name pos:start="35:14" pos:end="35:43"><name pos:start="35:14" pos:end="35:18">codec</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:39">sample_aspect_ratio</name><operator pos:start="35:40" pos:end="35:40">.</operator><name pos:start="35:41" pos:end="35:43">num</name></name></expr></argument>, <argument pos:start="35:46" pos:end="35:75"><expr pos:start="35:46" pos:end="35:75"><name pos:start="35:46" pos:end="35:75"><name pos:start="35:46" pos:end="35:50">codec</name><operator pos:start="35:51" pos:end="35:52">-&gt;</operator><name pos:start="35:53" pos:end="35:71">sample_aspect_ratio</name><operator pos:start="35:72" pos:end="35:72">.</operator><name pos:start="35:73" pos:end="35:75">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="47:19"><if pos:start="39:5" pos:end="47:19">if <condition pos:start="39:8" pos:end="45:56">(<expr pos:start="39:9" pos:end="45:55"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:12">ret</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="45:50"><name pos:start="39:16" pos:end="39:43">avfilter_graph_create_filter</name><argument_list pos:start="39:44" pos:end="45:50">(<argument pos:start="39:45" pos:end="39:53"><expr pos:start="39:45" pos:end="39:53"><operator pos:start="39:45" pos:end="39:45">&amp;</operator><name pos:start="39:46" pos:end="39:53">filt_src</name></expr></argument>,

                                            <argument pos:start="41:45" pos:end="41:74"><expr pos:start="41:45" pos:end="41:74"><call pos:start="41:45" pos:end="41:74"><name pos:start="41:45" pos:end="41:64">avfilter_get_by_name</name><argument_list pos:start="41:65" pos:end="41:74">(<argument pos:start="41:66" pos:end="41:73"><expr pos:start="41:66" pos:end="41:73"><literal type="string" pos:start="41:66" pos:end="41:73">"buffer"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                            <argument pos:start="43:45" pos:end="43:59"><expr pos:start="43:45" pos:end="43:59"><literal type="string" pos:start="43:45" pos:end="43:59">"ffplay_buffer"</literal></expr></argument>, <argument pos:start="43:62" pos:end="43:75"><expr pos:start="43:62" pos:end="43:75"><name pos:start="43:62" pos:end="43:75">buffersrc_args</name></expr></argument>, <argument pos:start="43:78" pos:end="43:81"><expr pos:start="43:78" pos:end="43:81"><name pos:start="43:78" pos:end="43:81">NULL</name></expr></argument>,

                                            <argument pos:start="45:45" pos:end="45:49"><expr pos:start="45:45" pos:end="45:49"><name pos:start="45:45" pos:end="45:49">graph</name></expr></argument>)</argument_list></call><operator pos:start="45:51" pos:end="45:51">)</operator> <operator pos:start="45:53" pos:end="45:53">&lt;</operator> <literal type="number" pos:start="45:55" pos:end="45:55">0</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:19"><block_content pos:start="47:9" pos:end="47:19">

        <return pos:start="47:9" pos:end="47:19">return <expr pos:start="47:16" pos:end="47:18"><name pos:start="47:16" pos:end="47:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:45"><expr pos:start="51:5" pos:end="51:44"><name pos:start="51:5" pos:end="51:33"><name pos:start="51:5" pos:end="51:21">buffersink_params</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:33">pixel_fmts</name></name> <operator pos:start="51:35" pos:end="51:35">=</operator> <name pos:start="51:37" pos:end="51:44">pix_fmts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="57:92"><expr pos:start="53:5" pos:end="57:91"><name pos:start="53:5" pos:end="53:7">ret</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="57:91"><name pos:start="53:11" pos:end="53:38">avfilter_graph_create_filter</name><argument_list pos:start="53:39" pos:end="57:91">(<argument pos:start="53:40" pos:end="53:48"><expr pos:start="53:40" pos:end="53:48"><operator pos:start="53:40" pos:end="53:40">&amp;</operator><name pos:start="53:41" pos:end="53:48">filt_out</name></expr></argument>,

                                       <argument pos:start="55:40" pos:end="55:75"><expr pos:start="55:40" pos:end="55:75"><call pos:start="55:40" pos:end="55:75"><name pos:start="55:40" pos:end="55:59">avfilter_get_by_name</name><argument_list pos:start="55:60" pos:end="55:75">(<argument pos:start="55:61" pos:end="55:74"><expr pos:start="55:61" pos:end="55:74"><literal type="string" pos:start="55:61" pos:end="55:74">"ffbuffersink"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                       <argument pos:start="57:40" pos:end="57:58"><expr pos:start="57:40" pos:end="57:58"><literal type="string" pos:start="57:40" pos:end="57:58">"ffplay_buffersink"</literal></expr></argument>, <argument pos:start="57:61" pos:end="57:64"><expr pos:start="57:61" pos:end="57:64"><name pos:start="57:61" pos:end="57:64">NULL</name></expr></argument>, <argument pos:start="57:67" pos:end="57:83"><expr pos:start="57:67" pos:end="57:83"><name pos:start="57:67" pos:end="57:83">buffersink_params</name></expr></argument>, <argument pos:start="57:86" pos:end="57:90"><expr pos:start="57:86" pos:end="57:90"><name pos:start="57:86" pos:end="57:90">graph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:33"><expr pos:start="59:5" pos:end="59:32"><call pos:start="59:5" pos:end="59:32"><name pos:start="59:5" pos:end="59:12">av_freep</name><argument_list pos:start="59:13" pos:end="59:32">(<argument pos:start="59:14" pos:end="59:31"><expr pos:start="59:14" pos:end="59:31"><operator pos:start="59:14" pos:end="59:14">&amp;</operator><name pos:start="59:15" pos:end="59:31">buffersink_params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="63:19"><if pos:start="61:5" pos:end="63:19">if <condition pos:start="61:8" pos:end="61:16">(<expr pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">&lt;</operator> <literal type="number" pos:start="61:15" pos:end="61:15">0</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:19"><block_content pos:start="63:9" pos:end="63:19">

        <return pos:start="63:9" pos:end="63:19">return <expr pos:start="63:16" pos:end="63:18"><name pos:start="63:16" pos:end="63:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="67:5" pos:end="69:78">/* SDL YUV code is not handling odd width/height for some driver

     * combinations, therefore we crop the picture to an even width/height. */</comment>

    <if_stmt pos:start="71:5" pos:end="77:19"><if pos:start="71:5" pos:end="77:19">if <condition pos:start="71:8" pos:end="75:112">(<expr pos:start="71:9" pos:end="75:111"><operator pos:start="71:9" pos:end="71:9">(</operator><name pos:start="71:10" pos:end="71:12">ret</name> <operator pos:start="71:14" pos:end="71:14">=</operator> <call pos:start="71:16" pos:end="75:106"><name pos:start="71:16" pos:end="71:43">avfilter_graph_create_filter</name><argument_list pos:start="71:44" pos:end="75:106">(<argument pos:start="71:45" pos:end="71:54"><expr pos:start="71:45" pos:end="71:54"><operator pos:start="71:45" pos:end="71:45">&amp;</operator><name pos:start="71:46" pos:end="71:54">filt_crop</name></expr></argument>,

                                            <argument pos:start="73:45" pos:end="73:72"><expr pos:start="73:45" pos:end="73:72"><call pos:start="73:45" pos:end="73:72"><name pos:start="73:45" pos:end="73:64">avfilter_get_by_name</name><argument_list pos:start="73:65" pos:end="73:72">(<argument pos:start="73:66" pos:end="73:71"><expr pos:start="73:66" pos:end="73:71"><literal type="string" pos:start="73:66" pos:end="73:71">"crop"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                            <argument pos:start="75:45" pos:end="75:57"><expr pos:start="75:45" pos:end="75:57"><literal type="string" pos:start="75:45" pos:end="75:57">"ffplay_crop"</literal></expr></argument>, <argument pos:start="75:60" pos:end="75:92"><expr pos:start="75:60" pos:end="75:92"><literal type="string" pos:start="75:60" pos:end="75:92">"floor(in_w/2)*2:floor(in_h/2)*2"</literal></expr></argument>, <argument pos:start="75:95" pos:end="75:98"><expr pos:start="75:95" pos:end="75:98"><name pos:start="75:95" pos:end="75:98">NULL</name></expr></argument>, <argument pos:start="75:101" pos:end="75:105"><expr pos:start="75:101" pos:end="75:105"><name pos:start="75:101" pos:end="75:105">graph</name></expr></argument>)</argument_list></call><operator pos:start="75:107" pos:end="75:107">)</operator> <operator pos:start="75:109" pos:end="75:109">&lt;</operator> <literal type="number" pos:start="75:111" pos:end="75:111">0</literal></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:19"><block_content pos:start="77:9" pos:end="77:19">

        <return pos:start="77:9" pos:end="77:19">return <expr pos:start="77:16" pos:end="77:18"><name pos:start="77:16" pos:end="77:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="79:5" pos:end="85:19"><if pos:start="79:5" pos:end="85:19">if <condition pos:start="79:8" pos:end="83:83">(<expr pos:start="79:9" pos:end="83:82"><operator pos:start="79:9" pos:end="79:9">(</operator><name pos:start="79:10" pos:end="79:12">ret</name> <operator pos:start="79:14" pos:end="79:14">=</operator> <call pos:start="79:16" pos:end="83:77"><name pos:start="79:16" pos:end="79:43">avfilter_graph_create_filter</name><argument_list pos:start="79:44" pos:end="83:77">(<argument pos:start="79:45" pos:end="79:56"><expr pos:start="79:45" pos:end="79:56"><operator pos:start="79:45" pos:end="79:45">&amp;</operator><name pos:start="79:46" pos:end="79:56">filt_format</name></expr></argument>,

                                            <argument pos:start="81:45" pos:end="81:74"><expr pos:start="81:45" pos:end="81:74"><call pos:start="81:45" pos:end="81:74"><name pos:start="81:45" pos:end="81:64">avfilter_get_by_name</name><argument_list pos:start="81:65" pos:end="81:74">(<argument pos:start="81:66" pos:end="81:73"><expr pos:start="81:66" pos:end="81:73"><literal type="string" pos:start="81:66" pos:end="81:73">"format"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                            <argument pos:start="83:45" pos:end="83:52"><expr pos:start="83:45" pos:end="83:52"><literal type="string" pos:start="83:45" pos:end="83:52">"format"</literal></expr></argument>, <argument pos:start="83:55" pos:end="83:63"><expr pos:start="83:55" pos:end="83:63"><literal type="string" pos:start="83:55" pos:end="83:63">"yuv420p"</literal></expr></argument>, <argument pos:start="83:66" pos:end="83:69"><expr pos:start="83:66" pos:end="83:69"><name pos:start="83:66" pos:end="83:69">NULL</name></expr></argument>, <argument pos:start="83:72" pos:end="83:76"><expr pos:start="83:72" pos:end="83:76"><name pos:start="83:72" pos:end="83:76">graph</name></expr></argument>)</argument_list></call><operator pos:start="83:78" pos:end="83:78">)</operator> <operator pos:start="83:80" pos:end="83:80">&lt;</operator> <literal type="number" pos:start="83:82" pos:end="83:82">0</literal></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:19"><block_content pos:start="85:9" pos:end="85:19">

        <return pos:start="85:9" pos:end="85:19">return <expr pos:start="85:16" pos:end="85:18"><name pos:start="85:16" pos:end="85:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="89:19"><if pos:start="87:5" pos:end="89:19">if <condition pos:start="87:8" pos:end="87:64">(<expr pos:start="87:9" pos:end="87:63"><operator pos:start="87:9" pos:end="87:9">(</operator><name pos:start="87:10" pos:end="87:12">ret</name> <operator pos:start="87:14" pos:end="87:14">=</operator> <call pos:start="87:16" pos:end="87:58"><name pos:start="87:16" pos:end="87:28">avfilter_link</name><argument_list pos:start="87:29" pos:end="87:58">(<argument pos:start="87:30" pos:end="87:38"><expr pos:start="87:30" pos:end="87:38"><name pos:start="87:30" pos:end="87:38">filt_crop</name></expr></argument>, <argument pos:start="87:41" pos:end="87:41"><expr pos:start="87:41" pos:end="87:41"><literal type="number" pos:start="87:41" pos:end="87:41">0</literal></expr></argument>, <argument pos:start="87:44" pos:end="87:54"><expr pos:start="87:44" pos:end="87:54"><name pos:start="87:44" pos:end="87:54">filt_format</name></expr></argument>, <argument pos:start="87:57" pos:end="87:57"><expr pos:start="87:57" pos:end="87:57"><literal type="number" pos:start="87:57" pos:end="87:57">0</literal></expr></argument>)</argument_list></call><operator pos:start="87:59" pos:end="87:59">)</operator> <operator pos:start="87:61" pos:end="87:61">&lt;</operator> <literal type="number" pos:start="87:63" pos:end="87:63">0</literal></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:19"><block_content pos:start="89:9" pos:end="89:19">

        <return pos:start="89:9" pos:end="89:19">return <expr pos:start="89:16" pos:end="89:18"><name pos:start="89:16" pos:end="89:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="93:19"><if pos:start="91:5" pos:end="93:19">if <condition pos:start="91:8" pos:end="91:63">(<expr pos:start="91:9" pos:end="91:62"><operator pos:start="91:9" pos:end="91:9">(</operator><name pos:start="91:10" pos:end="91:12">ret</name> <operator pos:start="91:14" pos:end="91:14">=</operator> <call pos:start="91:16" pos:end="91:57"><name pos:start="91:16" pos:end="91:28">avfilter_link</name><argument_list pos:start="91:29" pos:end="91:57">(<argument pos:start="91:30" pos:end="91:40"><expr pos:start="91:30" pos:end="91:40"><name pos:start="91:30" pos:end="91:40">filt_format</name></expr></argument>, <argument pos:start="91:43" pos:end="91:43"><expr pos:start="91:43" pos:end="91:43"><literal type="number" pos:start="91:43" pos:end="91:43">0</literal></expr></argument>, <argument pos:start="91:46" pos:end="91:53"><expr pos:start="91:46" pos:end="91:53"><name pos:start="91:46" pos:end="91:53">filt_out</name></expr></argument>, <argument pos:start="91:56" pos:end="91:56"><expr pos:start="91:56" pos:end="91:56"><literal type="number" pos:start="91:56" pos:end="91:56">0</literal></expr></argument>)</argument_list></call><operator pos:start="91:58" pos:end="91:58">)</operator> <operator pos:start="91:60" pos:end="91:60">&lt;</operator> <literal type="number" pos:start="91:62" pos:end="91:62">0</literal></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:19"><block_content pos:start="93:9" pos:end="93:19">

        <return pos:start="93:9" pos:end="93:19">return <expr pos:start="93:16" pos:end="93:18"><name pos:start="93:16" pos:end="93:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="99:19"><if pos:start="97:5" pos:end="99:19">if <condition pos:start="97:8" pos:end="97:80">(<expr pos:start="97:9" pos:end="97:79"><operator pos:start="97:9" pos:end="97:9">(</operator><name pos:start="97:10" pos:end="97:12">ret</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <call pos:start="97:16" pos:end="97:74"><name pos:start="97:16" pos:end="97:36">configure_filtergraph</name><argument_list pos:start="97:37" pos:end="97:74">(<argument pos:start="97:38" pos:end="97:42"><expr pos:start="97:38" pos:end="97:42"><name pos:start="97:38" pos:end="97:42">graph</name></expr></argument>, <argument pos:start="97:45" pos:end="97:52"><expr pos:start="97:45" pos:end="97:52"><name pos:start="97:45" pos:end="97:52">vfilters</name></expr></argument>, <argument pos:start="97:55" pos:end="97:62"><expr pos:start="97:55" pos:end="97:62"><name pos:start="97:55" pos:end="97:62">filt_src</name></expr></argument>, <argument pos:start="97:65" pos:end="97:73"><expr pos:start="97:65" pos:end="97:73"><name pos:start="97:65" pos:end="97:73">filt_crop</name></expr></argument>)</argument_list></call><operator pos:start="97:75" pos:end="97:75">)</operator> <operator pos:start="97:77" pos:end="97:77">&lt;</operator> <literal type="number" pos:start="97:79" pos:end="97:79">0</literal></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:19"><block_content pos:start="99:9" pos:end="99:19">

        <return pos:start="99:9" pos:end="99:19">return <expr pos:start="99:16" pos:end="99:18"><name pos:start="99:16" pos:end="99:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:36"><expr pos:start="103:5" pos:end="103:35"><name pos:start="103:5" pos:end="103:23"><name pos:start="103:5" pos:end="103:6">is</name><operator pos:start="103:7" pos:end="103:8">-&gt;</operator><name pos:start="103:9" pos:end="103:23">in_video_filter</name></name>  <operator pos:start="103:26" pos:end="103:26">=</operator> <name pos:start="103:28" pos:end="103:35">filt_src</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:36"><expr pos:start="105:5" pos:end="105:35"><name pos:start="105:5" pos:end="105:24"><name pos:start="105:5" pos:end="105:6">is</name><operator pos:start="105:7" pos:end="105:8">-&gt;</operator><name pos:start="105:9" pos:end="105:24">out_video_filter</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <name pos:start="105:28" pos:end="105:35">filt_out</name></expr>;</expr_stmt>



    <return pos:start="109:5" pos:end="109:15">return <expr pos:start="109:12" pos:end="109:14"><name pos:start="109:12" pos:end="109:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
