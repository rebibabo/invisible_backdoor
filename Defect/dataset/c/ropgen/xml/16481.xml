<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16481.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:43">nbd_negotiate_handle_export_name</name><parameter_list pos:start="1:44" pos:end="5:57">(<parameter pos:start="1:45" pos:end="1:61"><decl pos:start="1:45" pos:end="1:61"><type pos:start="1:45" pos:end="1:61"><name pos:start="1:45" pos:end="1:53">NBDClient</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:61">client</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:78"><decl pos:start="1:64" pos:end="1:78"><type pos:start="1:64" pos:end="1:78"><name pos:start="1:64" pos:end="1:71">uint32_t</name></type> <name pos:start="1:73" pos:end="1:78">length</name></decl></parameter>,

                                            <parameter pos:start="3:45" pos:end="3:60"><decl pos:start="3:45" pos:end="3:60"><type pos:start="3:45" pos:end="3:60"><name pos:start="3:45" pos:end="3:52">uint16_t</name></type> <name pos:start="3:54" pos:end="3:60">myflags</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:76"><decl pos:start="3:63" pos:end="3:76"><type pos:start="3:63" pos:end="3:76"><name pos:start="3:63" pos:end="3:66">bool</name></type> <name pos:start="3:68" pos:end="3:76">no_zeroes</name></decl></parameter>,

                                            <parameter pos:start="5:45" pos:end="5:56"><decl pos:start="5:45" pos:end="5:56"><type pos:start="5:45" pos:end="5:56"><name pos:start="5:45" pos:end="5:49">Error</name> <modifier pos:start="5:51" pos:end="5:51">*</modifier><modifier pos:start="5:52" pos:end="5:52">*</modifier></type><name pos:start="5:53" pos:end="5:56">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="93:1">{<block_content pos:start="9:5" pos:end="91:13">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:36"><name pos:start="9:10" pos:end="9:13">name</name><index pos:start="9:14" pos:end="9:36">[<expr pos:start="9:15" pos:end="9:35"><name pos:start="9:15" pos:end="9:31">NBD_MAX_NAME_SIZE</name> <operator pos:start="9:33" pos:end="9:33">+</operator> <literal type="number" pos:start="9:35" pos:end="9:35">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:25"><name pos:start="11:10" pos:end="11:12">buf</name><index pos:start="11:13" pos:end="11:25">[<expr pos:start="11:14" pos:end="11:24"><literal type="number" pos:start="11:14" pos:end="11:16">8</literal> <operator pos:start="11:16" pos:end="11:16">+</operator> <literal type="number" pos:start="11:18" pos:end="11:20">4</literal> <operator pos:start="11:20" pos:end="11:20">+</operator> <literal type="number" pos:start="11:22" pos:end="11:24">124</literal></expr>]</index></name> <init pos:start="11:27" pos:end="11:30">= <expr pos:start="11:29" pos:end="11:30"><literal type="string" pos:start="11:29" pos:end="11:30">""</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">size_t</name></type> <name pos:start="13:12" pos:end="13:14">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="23:7">/* Client sends:

        [20 ..  xx]   export name (length bytes)

     */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><call pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:42">trace_nbd_negotiate_handle_export_name</name><argument_list pos:start="25:43" pos:end="25:44">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:31">(<expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:14">length</name> <operator pos:start="27:16" pos:end="27:17">&gt;=</operator> <sizeof pos:start="27:19" pos:end="27:30">sizeof<argument_list pos:start="27:25" pos:end="27:30">(<argument pos:start="27:26" pos:end="27:29"><expr pos:start="27:26" pos:end="27:29"><name pos:start="27:26" pos:end="27:29">name</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="27:33" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:23">

        <expr_stmt pos:start="29:9" pos:end="29:48"><expr pos:start="29:9" pos:end="29:47"><call pos:start="29:9" pos:end="29:47"><name pos:start="29:9" pos:end="29:18">error_setg</name><argument_list pos:start="29:19" pos:end="29:47">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">errp</name></expr></argument>, <argument pos:start="29:26" pos:end="29:46"><expr pos:start="29:26" pos:end="29:46"><literal type="string" pos:start="29:26" pos:end="29:46">"Bad length received"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:23">return <expr pos:start="31:16" pos:end="31:22"><operator pos:start="31:16" pos:end="31:16">-</operator><name pos:start="31:17" pos:end="31:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:54">(<expr pos:start="35:9" pos:end="35:53"><call pos:start="35:9" pos:end="35:49"><name pos:start="35:9" pos:end="35:16">nbd_read</name><argument_list pos:start="35:17" pos:end="35:49">(<argument pos:start="35:18" pos:end="35:28"><expr pos:start="35:18" pos:end="35:28"><name pos:start="35:18" pos:end="35:28"><name pos:start="35:18" pos:end="35:23">client</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:28">ioc</name></name></expr></argument>, <argument pos:start="35:31" pos:end="35:34"><expr pos:start="35:31" pos:end="35:34"><name pos:start="35:31" pos:end="35:34">name</name></expr></argument>, <argument pos:start="35:37" pos:end="35:42"><expr pos:start="35:37" pos:end="35:42"><name pos:start="35:37" pos:end="35:42">length</name></expr></argument>, <argument pos:start="35:45" pos:end="35:48"><expr pos:start="35:45" pos:end="35:48"><name pos:start="35:45" pos:end="35:48">errp</name></expr></argument>)</argument_list></call> <operator pos:start="35:51" pos:end="35:51">&lt;</operator> <literal type="number" pos:start="35:53" pos:end="35:53">0</literal></expr>)</condition> <block pos:start="35:56" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:23">

        <expr_stmt pos:start="37:9" pos:end="37:45"><expr pos:start="37:9" pos:end="37:44"><call pos:start="37:9" pos:end="37:44"><name pos:start="37:9" pos:end="37:21">error_prepend</name><argument_list pos:start="37:22" pos:end="37:44">(<argument pos:start="37:23" pos:end="37:26"><expr pos:start="37:23" pos:end="37:26"><name pos:start="37:23" pos:end="37:26">errp</name></expr></argument>, <argument pos:start="37:29" pos:end="37:43"><expr pos:start="37:29" pos:end="37:43"><literal type="string" pos:start="37:29" pos:end="37:43">"read failed: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:23">return <expr pos:start="39:16" pos:end="39:22"><operator pos:start="39:16" pos:end="39:16">-</operator><name pos:start="39:17" pos:end="39:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:24"><expr pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:8">name</name><index pos:start="43:9" pos:end="43:16">[<expr pos:start="43:10" pos:end="43:15"><name pos:start="43:10" pos:end="43:15">length</name></expr>]</index></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <literal type="char" pos:start="43:20" pos:end="43:23">'\0'</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:57"><expr pos:start="47:5" pos:end="47:56"><call pos:start="47:5" pos:end="47:56"><name pos:start="47:5" pos:end="47:50">trace_nbd_negotiate_handle_export_name_request</name><argument_list pos:start="47:51" pos:end="47:56">(<argument pos:start="47:52" pos:end="47:55"><expr pos:start="47:52" pos:end="47:55"><name pos:start="47:52" pos:end="47:55">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:40"><expr pos:start="51:5" pos:end="51:39"><name pos:start="51:5" pos:end="51:15"><name pos:start="51:5" pos:end="51:10">client</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:15">exp</name></name> <operator pos:start="51:17" pos:end="51:17">=</operator> <call pos:start="51:19" pos:end="51:39"><name pos:start="51:19" pos:end="51:33">nbd_export_find</name><argument_list pos:start="51:34" pos:end="51:39">(<argument pos:start="51:35" pos:end="51:38"><expr pos:start="51:35" pos:end="51:38"><name pos:start="51:35" pos:end="51:38">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:21">(<expr pos:start="53:9" pos:end="53:20"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:20"><name pos:start="53:10" pos:end="53:15">client</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:20">exp</name></name></expr>)</condition> <block pos:start="53:23" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:23">

        <expr_stmt pos:start="55:9" pos:end="55:45"><expr pos:start="55:9" pos:end="55:44"><call pos:start="55:9" pos:end="55:44"><name pos:start="55:9" pos:end="55:18">error_setg</name><argument_list pos:start="55:19" pos:end="55:44">(<argument pos:start="55:20" pos:end="55:23"><expr pos:start="55:20" pos:end="55:23"><name pos:start="55:20" pos:end="55:23">errp</name></expr></argument>, <argument pos:start="55:26" pos:end="55:43"><expr pos:start="55:26" pos:end="55:43"><literal type="string" pos:start="55:26" pos:end="55:43">"export not found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:23">return <expr pos:start="57:16" pos:end="57:22"><operator pos:start="57:16" pos:end="57:16">-</operator><name pos:start="57:17" pos:end="57:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="65:78"><expr pos:start="63:5" pos:end="65:77"><call pos:start="63:5" pos:end="65:77"><name pos:start="63:5" pos:end="63:44">trace_nbd_negotiate_new_style_size_flags</name><argument_list pos:start="63:45" pos:end="65:77">(<argument pos:start="63:46" pos:end="63:62"><expr pos:start="63:46" pos:end="63:62"><name pos:start="63:46" pos:end="63:62"><name pos:start="63:46" pos:end="63:51">client</name><operator pos:start="63:52" pos:end="63:53">-&gt;</operator><name pos:start="63:54" pos:end="63:56">exp</name><operator pos:start="63:57" pos:end="63:58">-&gt;</operator><name pos:start="63:59" pos:end="63:62">size</name></name></expr></argument>,

                                             <argument pos:start="65:46" pos:end="65:76"><expr pos:start="65:46" pos:end="65:76"><name pos:start="65:46" pos:end="65:66"><name pos:start="65:46" pos:end="65:51">client</name><operator pos:start="65:52" pos:end="65:53">-&gt;</operator><name pos:start="65:54" pos:end="65:56">exp</name><operator pos:start="65:57" pos:end="65:58">-&gt;</operator><name pos:start="65:59" pos:end="65:66">nbdflags</name></name> <operator pos:start="65:68" pos:end="65:68">|</operator> <name pos:start="65:70" pos:end="65:76">myflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:37"><expr pos:start="67:5" pos:end="67:36"><call pos:start="67:5" pos:end="67:36"><name pos:start="67:5" pos:end="67:12">stq_be_p</name><argument_list pos:start="67:13" pos:end="67:36">(<argument pos:start="67:14" pos:end="67:16"><expr pos:start="67:14" pos:end="67:16"><name pos:start="67:14" pos:end="67:16">buf</name></expr></argument>, <argument pos:start="67:19" pos:end="67:35"><expr pos:start="67:19" pos:end="67:35"><name pos:start="67:19" pos:end="67:35"><name pos:start="67:19" pos:end="67:24">client</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:29">exp</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:35">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:55"><expr pos:start="69:5" pos:end="69:54"><call pos:start="69:5" pos:end="69:54"><name pos:start="69:5" pos:end="69:12">stw_be_p</name><argument_list pos:start="69:13" pos:end="69:54">(<argument pos:start="69:14" pos:end="69:20"><expr pos:start="69:14" pos:end="69:20"><name pos:start="69:14" pos:end="69:16">buf</name> <operator pos:start="69:18" pos:end="69:18">+</operator> <literal type="number" pos:start="69:20" pos:end="69:20">8</literal></expr></argument>, <argument pos:start="69:23" pos:end="69:53"><expr pos:start="69:23" pos:end="69:53"><name pos:start="69:23" pos:end="69:43"><name pos:start="69:23" pos:end="69:28">client</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:33">exp</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:43">nbdflags</name></name> <operator pos:start="69:45" pos:end="69:45">|</operator> <name pos:start="69:47" pos:end="69:53">myflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:39"><expr pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:7">len</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <ternary pos:start="71:11" pos:end="71:38"><condition pos:start="71:11" pos:end="71:21"><expr pos:start="71:11" pos:end="71:19"><name pos:start="71:11" pos:end="71:19">no_zeroes</name></expr> ?</condition><then pos:start="71:23" pos:end="71:24"> <expr pos:start="71:23" pos:end="71:24"><literal type="number" pos:start="71:23" pos:end="71:24">10</literal></expr> </then><else pos:start="71:26" pos:end="71:38">: <expr pos:start="71:28" pos:end="71:38"><sizeof pos:start="71:28" pos:end="71:38">sizeof<argument_list pos:start="71:34" pos:end="71:38">(<argument pos:start="71:35" pos:end="71:37"><expr pos:start="71:35" pos:end="71:37"><name pos:start="71:35" pos:end="71:37">buf</name></expr></argument>)</argument_list></sizeof></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:49"><expr pos:start="73:5" pos:end="73:48"><name pos:start="73:5" pos:end="73:7">ret</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <call pos:start="73:11" pos:end="73:48"><name pos:start="73:11" pos:end="73:19">nbd_write</name><argument_list pos:start="73:20" pos:end="73:48">(<argument pos:start="73:21" pos:end="73:31"><expr pos:start="73:21" pos:end="73:31"><name pos:start="73:21" pos:end="73:31"><name pos:start="73:21" pos:end="73:26">client</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:31">ioc</name></name></expr></argument>, <argument pos:start="73:34" pos:end="73:36"><expr pos:start="73:34" pos:end="73:36"><name pos:start="73:34" pos:end="73:36">buf</name></expr></argument>, <argument pos:start="73:39" pos:end="73:41"><expr pos:start="73:39" pos:end="73:41"><name pos:start="73:39" pos:end="73:41">len</name></expr></argument>, <argument pos:start="73:44" pos:end="73:47"><expr pos:start="73:44" pos:end="73:47"><name pos:start="73:44" pos:end="73:47">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:16">(<expr pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">&lt;</operator> <literal type="number" pos:start="75:15" pos:end="75:15">0</literal></expr>)</condition> <block pos:start="75:18" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:19">

        <expr_stmt pos:start="77:9" pos:end="77:46"><expr pos:start="77:9" pos:end="77:45"><call pos:start="77:9" pos:end="77:45"><name pos:start="77:9" pos:end="77:21">error_prepend</name><argument_list pos:start="77:22" pos:end="77:45">(<argument pos:start="77:23" pos:end="77:26"><expr pos:start="77:23" pos:end="77:26"><name pos:start="77:23" pos:end="77:26">errp</name></expr></argument>, <argument pos:start="77:29" pos:end="77:44"><expr pos:start="77:29" pos:end="77:44"><literal type="string" pos:start="77:29" pos:end="77:44">"write failed: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:19">return <expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:60"><expr pos:start="85:5" pos:end="85:59"><call pos:start="85:5" pos:end="85:59"><name pos:start="85:5" pos:end="85:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="85:23" pos:end="85:59">(<argument pos:start="85:24" pos:end="85:44"><expr pos:start="85:24" pos:end="85:44"><operator pos:start="85:24" pos:end="85:24">&amp;</operator><name pos:start="85:25" pos:end="85:44"><name pos:start="85:25" pos:end="85:30">client</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:35">exp</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:44">clients</name></name></expr></argument>, <argument pos:start="85:47" pos:end="85:52"><expr pos:start="85:47" pos:end="85:52"><name pos:start="85:47" pos:end="85:52">client</name></expr></argument>, <argument pos:start="85:55" pos:end="85:58"><expr pos:start="85:55" pos:end="85:58"><name pos:start="85:55" pos:end="85:58">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:32"><expr pos:start="87:5" pos:end="87:31"><call pos:start="87:5" pos:end="87:31"><name pos:start="87:5" pos:end="87:18">nbd_export_get</name><argument_list pos:start="87:19" pos:end="87:31">(<argument pos:start="87:20" pos:end="87:30"><expr pos:start="87:20" pos:end="87:30"><name pos:start="87:20" pos:end="87:30"><name pos:start="87:20" pos:end="87:25">client</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:30">exp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
