<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10101.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">long</name></type> <name pos:start="1:13" pos:end="1:27">gethugepagesize</name><parameter_list pos:start="1:28" pos:end="1:59">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">path</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:51">Error</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier><modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:22">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:17">statfs</name></name></type> <name pos:start="5:19" pos:end="5:20">fs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <do pos:start="11:5" pos:end="15:41">do <block pos:start="11:8" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:32">

        <expr_stmt pos:start="13:9" pos:end="13:32"><expr pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:31"><name pos:start="13:15" pos:end="13:20">statfs</name><argument_list pos:start="13:21" pos:end="13:31">(<argument pos:start="13:22" pos:end="13:25"><expr pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:25">path</name></expr></argument>, <argument pos:start="13:28" pos:end="13:30"><expr pos:start="13:28" pos:end="13:30"><operator pos:start="13:28" pos:end="13:28">&amp;</operator><name pos:start="13:29" pos:end="13:30">fs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="15:13" pos:end="15:40">(<expr pos:start="15:14" pos:end="15:39"><name pos:start="15:14" pos:end="15:16">ret</name> <operator pos:start="15:18" pos:end="15:19">!=</operator> <literal type="number" pos:start="15:21" pos:end="15:21">0</literal> <operator pos:start="15:23" pos:end="15:24">&amp;&amp;</operator> <name pos:start="15:26" pos:end="15:30">errno</name> <operator pos:start="15:32" pos:end="15:33">==</operator> <name pos:start="15:35" pos:end="15:39">EINTR</name></expr>)</condition>;</do>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:14">!=</operator> <literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>)</condition> <block pos:start="19:19" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:17">

        <expr_stmt pos:start="21:9" pos:end="23:31"><expr pos:start="21:9" pos:end="23:30"><call pos:start="21:9" pos:end="23:30"><name pos:start="21:9" pos:end="21:24">error_setg_errno</name><argument_list pos:start="21:25" pos:end="23:30">(<argument pos:start="21:26" pos:end="21:29"><expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">errp</name></expr></argument>, <argument pos:start="21:32" pos:end="21:36"><expr pos:start="21:32" pos:end="21:36"><name pos:start="21:32" pos:end="21:36">errno</name></expr></argument>, <argument pos:start="21:39" pos:end="21:74"><expr pos:start="21:39" pos:end="21:74"><literal type="string" pos:start="21:39" pos:end="21:74">"failed to get page size of file %s"</literal></expr></argument>,

                         <argument pos:start="23:26" pos:end="23:29"><expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="31:5" pos:end="31:22">return <expr pos:start="31:12" pos:end="31:21"><name pos:start="31:12" pos:end="31:21"><name pos:start="31:12" pos:end="31:13">fs</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:21">f_bsize</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
