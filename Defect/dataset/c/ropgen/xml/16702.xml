<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16702.c" pos:tabs="8"><function pos:start="1:1" pos:end="26:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">setup_hwaccel</name><parameter_list pos:start="1:25" pos:end="3:42">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>,
                         <parameter pos:start="2:26" pos:end="2:53"><decl pos:start="2:26" pos:end="2:53"><type pos:start="2:26" pos:end="2:53"><specifier pos:start="2:26" pos:end="2:30">const</specifier> <name pos:start="2:32" pos:end="2:49"><name pos:start="2:32" pos:end="2:35">enum</name> <name pos:start="2:37" pos:end="2:49">AVPixelFormat</name></name></type> <name pos:start="2:51" pos:end="2:53">fmt</name></decl></parameter>,
                         <parameter pos:start="3:26" pos:end="3:41"><decl pos:start="3:26" pos:end="3:41"><type pos:start="3:26" pos:end="3:41"><specifier pos:start="3:26" pos:end="3:30">const</specifier> <name pos:start="3:32" pos:end="3:35">char</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:41">name</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="26:13">{<block_content pos:start="5:5" pos:end="26:13">
    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">AVHWAccel</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">hwa</name> <init pos:start="5:20" pos:end="5:55">= <expr pos:start="5:22" pos:end="5:55"><call pos:start="5:22" pos:end="5:55"><name pos:start="5:22" pos:end="5:33">find_hwaccel</name><argument_list pos:start="5:34" pos:end="5:55">(<argument pos:start="5:35" pos:end="5:49"><expr pos:start="5:35" pos:end="5:49"><name pos:start="5:35" pos:end="5:49"><name pos:start="5:35" pos:end="5:39">avctx</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:49">codec_id</name></name></expr></argument>, <argument pos:start="5:52" pos:end="5:54"><expr pos:start="5:52" pos:end="5:54"><name pos:start="5:52" pos:end="5:54">fmt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:23"><decl pos:start="6:5" pos:end="6:22"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">ret</name>        <init pos:start="6:20" pos:end="6:22">= <expr pos:start="6:22" pos:end="6:22"><literal type="number" pos:start="6:22" pos:end="6:22">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="7:5" pos:end="9:21"><if pos:start="7:5" pos:end="9:21">if <condition pos:start="7:8" pos:end="7:13">(<expr pos:start="7:9" pos:end="7:12"><operator pos:start="7:9" pos:end="7:9">!</operator><name pos:start="7:10" pos:end="7:12">hwa</name></expr>)</condition> <block pos:start="7:15" pos:end="9:20">{<block_content pos:start="8:16" pos:end="9:20">
               <expr_stmt pos:start="8:16" pos:end="9:19"><expr pos:start="8:16" pos:end="8:69"><literal type="string" pos:start="8:16" pos:end="8:69">"Could not find an AVHWAccel for the pixel format: %s"</literal></expr><operator pos:start="8:70" pos:end="8:70">,</operator>
               <expr pos:start="9:16" pos:end="9:19"><name pos:start="9:16" pos:end="9:19">name</name></expr></expr_stmt>)</block_content></block><empty_stmt pos:start="9:21" pos:end="9:21">;</empty_stmt></if></if_stmt>
        <return pos:start="10:9" pos:end="10:31">return <expr pos:start="10:16" pos:end="10:30"><call pos:start="10:16" pos:end="10:30"><name pos:start="10:16" pos:end="10:22">AVERROR</name><argument_list pos:start="10:23" pos:end="10:30">(<argument pos:start="10:24" pos:end="10:29"><expr pos:start="10:24" pos:end="10:29"><name pos:start="10:24" pos:end="10:29">ENOENT</name></expr></argument>)</argument_list></call></expr>;</return>
    <if_stmt pos:start="11:5" pos:end="26:13"><if pos:start="11:5" pos:end="26:13">if <condition pos:start="11:8" pos:end="12:66">(<expr pos:start="11:9" pos:end="12:65"><name pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:11">hwa</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:25">capabilities</name></name> <operator pos:start="11:27" pos:end="11:27">&amp;</operator> <name pos:start="11:29" pos:end="11:58">HWACCEL_CODEC_CAP_EXPERIMENTAL</name> <operator pos:start="11:60" pos:end="11:61">&amp;&amp;</operator>
        <name pos:start="12:9" pos:end="12:36"><name pos:start="12:9" pos:end="12:13">avctx</name><operator pos:start="12:14" pos:end="12:15">-&gt;</operator><name pos:start="12:16" pos:end="12:36">strict_std_compliance</name></name> <operator pos:start="12:38" pos:end="12:38">&gt;</operator> <name pos:start="12:40" pos:end="12:65">FF_COMPLIANCE_EXPERIMENTAL</name></expr>)</condition> <block pos:start="12:68" pos:end="26:13">{<block_content pos:start="13:9" pos:end="26:13">
        <expr_stmt pos:start="13:9" pos:end="14:26"><expr pos:start="13:9" pos:end="14:25"><call pos:start="13:9" pos:end="14:25"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="14:25">(<argument pos:start="13:16" pos:end="13:20"><expr pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:20">avctx</name></expr></argument>, <argument pos:start="13:23" pos:end="13:36"><expr pos:start="13:23" pos:end="13:36"><name pos:start="13:23" pos:end="13:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="13:39" pos:end="13:75"><expr pos:start="13:39" pos:end="13:75"><literal type="string" pos:start="13:39" pos:end="13:75">"Ignoring experimental hwaccel: %s\n"</literal></expr></argument>,
               <argument pos:start="14:16" pos:end="14:24"><expr pos:start="14:16" pos:end="14:24"><name pos:start="14:16" pos:end="14:24"><name pos:start="14:16" pos:end="14:18">hwa</name><operator pos:start="14:19" pos:end="14:20">-&gt;</operator><name pos:start="14:21" pos:end="14:24">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="15:9" pos:end="15:36">return <expr pos:start="15:16" pos:end="15:35"><name pos:start="15:16" pos:end="15:35">AVERROR_PATCHWELCOME</name></expr>;</return>
    <if_stmt pos:start="16:5" pos:end="26:13"><if pos:start="16:5" pos:end="26:13">if <condition pos:start="16:8" pos:end="16:28">(<expr pos:start="16:9" pos:end="16:27"><name pos:start="16:9" pos:end="16:27"><name pos:start="16:9" pos:end="16:11">hwa</name><operator pos:start="16:12" pos:end="16:13">-&gt;</operator><name pos:start="16:14" pos:end="16:27">priv_data_size</name></name></expr>)</condition> <block pos:start="16:30" pos:end="26:13">{<block_content pos:start="17:9" pos:end="26:13">
        <expr_stmt pos:start="17:9" pos:end="17:77"><expr pos:start="17:9" pos:end="17:76"><name pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:13">avctx</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:23">internal</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:42">hwaccel_priv_data</name></name> <operator pos:start="17:44" pos:end="17:44">=</operator> <call pos:start="17:46" pos:end="17:76"><name pos:start="17:46" pos:end="17:55">av_mallocz</name><argument_list pos:start="17:56" pos:end="17:76">(<argument pos:start="17:57" pos:end="17:75"><expr pos:start="17:57" pos:end="17:75"><name pos:start="17:57" pos:end="17:75"><name pos:start="17:57" pos:end="17:59">hwa</name><operator pos:start="17:60" pos:end="17:61">-&gt;</operator><name pos:start="17:62" pos:end="17:75">priv_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="18:9" pos:end="19:35"><if pos:start="18:9" pos:end="19:35">if <condition pos:start="18:12" pos:end="18:48">(<expr pos:start="18:13" pos:end="18:47"><operator pos:start="18:13" pos:end="18:13">!</operator><name pos:start="18:14" pos:end="18:47"><name pos:start="18:14" pos:end="18:18">avctx</name><operator pos:start="18:19" pos:end="18:20">-&gt;</operator><name pos:start="18:21" pos:end="18:28">internal</name><operator pos:start="18:29" pos:end="18:30">-&gt;</operator><name pos:start="18:31" pos:end="18:47">hwaccel_priv_data</name></name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:35"><block_content pos:start="19:13" pos:end="19:35">
            <return pos:start="19:13" pos:end="19:35">return <expr pos:start="19:20" pos:end="19:34"><call pos:start="19:20" pos:end="19:34"><name pos:start="19:20" pos:end="19:26">AVERROR</name><argument_list pos:start="19:27" pos:end="19:34">(<argument pos:start="19:28" pos:end="19:33"><expr pos:start="19:28" pos:end="19:33"><name pos:start="19:28" pos:end="19:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="20:5" pos:end="26:13"><if pos:start="20:5" pos:end="26:13">if <condition pos:start="20:8" pos:end="20:18">(<expr pos:start="20:9" pos:end="20:17"><name pos:start="20:9" pos:end="20:17"><name pos:start="20:9" pos:end="20:11">hwa</name><operator pos:start="20:12" pos:end="20:13">-&gt;</operator><name pos:start="20:14" pos:end="20:17">init</name></name></expr>)</condition> <block pos:start="20:20" pos:end="26:13">{<block_content pos:start="21:9" pos:end="26:13">
        <expr_stmt pos:start="21:9" pos:end="21:31"><expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:30"><name pos:start="21:15" pos:end="21:23"><name pos:start="21:15" pos:end="21:17">hwa</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:23">init</name></name><argument_list pos:start="21:24" pos:end="21:30">(<argument pos:start="21:25" pos:end="21:29"><expr pos:start="21:25" pos:end="21:29"><name pos:start="21:25" pos:end="21:29">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="22:9" pos:end="26:13"><if pos:start="22:9" pos:end="26:13">if <condition pos:start="22:12" pos:end="22:20">(<expr pos:start="22:13" pos:end="22:19"><name pos:start="22:13" pos:end="22:15">ret</name> <operator pos:start="22:17" pos:end="22:17">&lt;</operator> <literal type="number" pos:start="22:19" pos:end="22:19">0</literal></expr>)</condition> <block pos:start="22:22" pos:end="26:13">{<block_content pos:start="23:13" pos:end="26:13">
            <expr_stmt pos:start="23:13" pos:end="23:58"><expr pos:start="23:13" pos:end="23:57"><call pos:start="23:13" pos:end="23:57"><name pos:start="23:13" pos:end="23:20">av_freep</name><argument_list pos:start="23:21" pos:end="23:57">(<argument pos:start="23:22" pos:end="23:56"><expr pos:start="23:22" pos:end="23:56"><operator pos:start="23:22" pos:end="23:22">&amp;</operator><name pos:start="23:23" pos:end="23:56"><name pos:start="23:23" pos:end="23:27">avctx</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:37">internal</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:56">hwaccel_priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="24:13" pos:end="24:23">return <expr pos:start="24:20" pos:end="24:22"><name pos:start="24:20" pos:end="24:22">ret</name></expr>;</return>
    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:9">avctx</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:18">hwaccel</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:24">hwa</name></expr>;</expr_stmt>
    <return pos:start="26:5" pos:end="26:13">return <expr pos:start="26:12" pos:end="26:12"><literal type="number" pos:start="26:12" pos:end="26:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
