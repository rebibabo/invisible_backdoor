<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18531.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">sd_reset</name><parameter_list pos:start="1:21" pos:end="1:57">(<parameter pos:start="1:22" pos:end="1:32"><decl pos:start="1:22" pos:end="1:32"><type pos:start="1:22" pos:end="1:32"><name pos:start="1:22" pos:end="1:28">SDState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:32">sd</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:56"><decl pos:start="1:35" pos:end="1:56"><type pos:start="1:35" pos:end="1:56"><name pos:start="1:35" pos:end="1:50">BlockDriverState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">bdrv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:20">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:17">sect</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:12">bdrv</name></expr>)</condition> <block pos:start="11:15" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:39">

        <expr_stmt pos:start="13:9" pos:end="13:39"><expr pos:start="13:9" pos:end="13:38"><call pos:start="13:9" pos:end="13:38"><name pos:start="13:9" pos:end="13:25">bdrv_get_geometry</name><argument_list pos:start="13:26" pos:end="13:38">(<argument pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:30">bdrv</name></expr></argument>, <argument pos:start="13:33" pos:end="13:37"><expr pos:start="13:33" pos:end="13:37"><operator pos:start="13:33" pos:end="13:33">&amp;</operator><name pos:start="13:34" pos:end="13:37">sect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="19:5">else <block pos:start="15:12" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <expr_stmt pos:start="17:9" pos:end="17:17"><expr pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:12">sect</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:15"><expr pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:8">sect</name> <operator pos:start="21:10" pos:end="21:12">&lt;&lt;=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">9</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:20"><expr pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:8">size</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <name pos:start="25:12" pos:end="25:15">sect</name> <operator pos:start="25:17" pos:end="25:17">+</operator> <literal type="number" pos:start="25:19" pos:end="25:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:72"><expr pos:start="29:5" pos:end="29:71"><name pos:start="29:5" pos:end="29:8">sect</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <operator pos:start="29:12" pos:end="29:12">(</operator><name pos:start="29:13" pos:end="29:16">size</name> <operator pos:start="29:18" pos:end="29:19">&gt;&gt;</operator> <operator pos:start="29:21" pos:end="29:21">(</operator><name pos:start="29:22" pos:end="29:34">HWBLOCK_SHIFT</name> <operator pos:start="29:36" pos:end="29:36">+</operator> <name pos:start="29:38" pos:end="29:49">SECTOR_SHIFT</name> <operator pos:start="29:51" pos:end="29:51">+</operator> <name pos:start="29:53" pos:end="29:65">WPGROUP_SHIFT</name><operator pos:start="29:66" pos:end="29:66">)</operator><operator pos:start="29:67" pos:end="29:67">)</operator> <operator pos:start="29:69" pos:end="29:69">+</operator> <literal type="number" pos:start="29:71" pos:end="29:71">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:6">sd</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:13">state</name></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:29">sd_idle_state</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:21"><expr pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:6">sd</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:11">rca</name></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <literal type="number" pos:start="35:15" pos:end="35:20">0x0000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><call pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:14">sd_set_ocr</name><argument_list pos:start="37:15" pos:end="37:18">(<argument pos:start="37:16" pos:end="37:17"><expr pos:start="37:16" pos:end="37:17"><name pos:start="37:16" pos:end="37:17">sd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><call pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:14">sd_set_scr</name><argument_list pos:start="39:15" pos:end="39:18">(<argument pos:start="39:16" pos:end="39:17"><expr pos:start="39:16" pos:end="39:17"><name pos:start="39:16" pos:end="39:17">sd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:19"><expr pos:start="41:5" pos:end="41:18"><call pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:14">sd_set_cid</name><argument_list pos:start="41:15" pos:end="41:18">(<argument pos:start="41:16" pos:end="41:17"><expr pos:start="41:16" pos:end="41:17"><name pos:start="41:16" pos:end="41:17">sd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:25"><expr pos:start="43:5" pos:end="43:24"><call pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:14">sd_set_csd</name><argument_list pos:start="43:15" pos:end="43:24">(<argument pos:start="43:16" pos:end="43:17"><expr pos:start="43:16" pos:end="43:17"><name pos:start="43:16" pos:end="43:17">sd</name></expr></argument>, <argument pos:start="43:20" pos:end="43:23"><expr pos:start="43:20" pos:end="43:23"><name pos:start="43:20" pos:end="43:23">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:26"><expr pos:start="45:5" pos:end="45:25"><call pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:21">sd_set_cardstatus</name><argument_list pos:start="45:22" pos:end="45:25">(<argument pos:start="45:23" pos:end="45:24"><expr pos:start="45:23" pos:end="45:24"><name pos:start="45:23" pos:end="45:24">sd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:24"><expr pos:start="47:5" pos:end="47:23"><call pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:19">sd_set_sdstatus</name><argument_list pos:start="47:20" pos:end="47:23">(<argument pos:start="47:21" pos:end="47:22"><expr pos:start="47:21" pos:end="47:22"><name pos:start="47:21" pos:end="47:22">sd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:12"><name pos:start="51:5" pos:end="51:6">sd</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:12">bdrv</name></name> <operator pos:start="51:14" pos:end="51:14">=</operator> <name pos:start="51:16" pos:end="51:19">bdrv</name></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="57:33"><if pos:start="55:5" pos:end="57:33">if <condition pos:start="55:8" pos:end="55:22">(<expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:10">sd</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:21">wp_groups</name></name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:33"><block_content pos:start="57:9" pos:end="57:33">

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><call pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:17">qemu_free</name><argument_list pos:start="57:18" pos:end="57:32">(<argument pos:start="57:19" pos:end="57:31"><expr pos:start="57:19" pos:end="57:31"><name pos:start="57:19" pos:end="57:31"><name pos:start="57:19" pos:end="57:20">sd</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:31">wp_groups</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:55"><expr pos:start="59:5" pos:end="59:54"><name pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:6">sd</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:17">wp_switch</name></name> <operator pos:start="59:19" pos:end="59:19">=</operator> <ternary pos:start="59:21" pos:end="59:54"><condition pos:start="59:21" pos:end="59:26"><expr pos:start="59:21" pos:end="59:24"><name pos:start="59:21" pos:end="59:24">bdrv</name></expr> ?</condition><then pos:start="59:28" pos:end="59:50"> <expr pos:start="59:28" pos:end="59:50"><call pos:start="59:28" pos:end="59:50"><name pos:start="59:28" pos:end="59:44">bdrv_is_read_only</name><argument_list pos:start="59:45" pos:end="59:50">(<argument pos:start="59:46" pos:end="59:49"><expr pos:start="59:46" pos:end="59:49"><name pos:start="59:46" pos:end="59:49">bdrv</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="59:52" pos:end="59:54">: <expr pos:start="59:54" pos:end="59:54"><literal type="number" pos:start="59:54" pos:end="59:54">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:61"><expr pos:start="61:5" pos:end="61:60"><name pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:6">sd</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:17">wp_groups</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <operator pos:start="61:21" pos:end="61:21">(</operator><name pos:start="61:22" pos:end="61:24">int</name> <operator pos:start="61:26" pos:end="61:26">*</operator><operator pos:start="61:27" pos:end="61:27">)</operator> <call pos:start="61:29" pos:end="61:60"><name pos:start="61:29" pos:end="61:40">qemu_mallocz</name><argument_list pos:start="61:41" pos:end="61:60">(<argument pos:start="61:42" pos:end="61:59"><expr pos:start="61:42" pos:end="61:59"><sizeof pos:start="61:42" pos:end="61:52">sizeof<argument_list pos:start="61:48" pos:end="61:52">(<argument pos:start="61:49" pos:end="61:51"><expr pos:start="61:49" pos:end="61:51"><name pos:start="61:49" pos:end="61:51">int</name></expr></argument>)</argument_list></sizeof> <operator pos:start="61:54" pos:end="61:54">*</operator> <name pos:start="61:56" pos:end="61:59">sect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:51"><expr pos:start="63:5" pos:end="63:50"><call pos:start="63:5" pos:end="63:50"><name pos:start="63:5" pos:end="63:10">memset</name><argument_list pos:start="63:11" pos:end="63:50">(<argument pos:start="63:12" pos:end="63:29"><expr pos:start="63:12" pos:end="63:29"><name pos:start="63:12" pos:end="63:29"><name pos:start="63:12" pos:end="63:13">sd</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:29">function_group</name></name></expr></argument>, <argument pos:start="63:32" pos:end="63:32"><expr pos:start="63:32" pos:end="63:32"><literal type="number" pos:start="63:32" pos:end="63:32">0</literal></expr></argument>, <argument pos:start="63:35" pos:end="63:49"><expr pos:start="63:35" pos:end="63:49"><sizeof pos:start="63:35" pos:end="63:45">sizeof<argument_list pos:start="63:41" pos:end="63:45">(<argument pos:start="63:42" pos:end="63:44"><expr pos:start="63:42" pos:end="63:44"><name pos:start="63:42" pos:end="63:44">int</name></expr></argument>)</argument_list></sizeof> <operator pos:start="63:47" pos:end="63:47">*</operator> <literal type="number" pos:start="63:49" pos:end="63:49">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:24"><expr pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:6">sd</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:19">erase_start</name></name> <operator pos:start="65:21" pos:end="65:21">=</operator> <literal type="number" pos:start="65:23" pos:end="65:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:22"><expr pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:6">sd</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:17">erase_end</name></name> <operator pos:start="67:19" pos:end="67:19">=</operator> <literal type="number" pos:start="67:21" pos:end="67:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:20"><expr pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:12"><name pos:start="69:5" pos:end="69:6">sd</name><operator pos:start="69:7" pos:end="69:8">-&gt;</operator><name pos:start="69:9" pos:end="69:12">size</name></name> <operator pos:start="69:14" pos:end="69:14">=</operator> <name pos:start="69:16" pos:end="69:19">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:24"><expr pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:15"><name pos:start="71:5" pos:end="71:6">sd</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:15">blk_len</name></name> <operator pos:start="71:17" pos:end="71:17">=</operator> <literal type="number" pos:start="71:19" pos:end="71:23">0x200</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:20"><expr pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:15"><name pos:start="73:5" pos:end="73:6">sd</name><operator pos:start="73:7" pos:end="73:8">-&gt;</operator><name pos:start="73:9" pos:end="73:15">pwd_len</name></name> <operator pos:start="73:17" pos:end="73:17">=</operator> <literal type="number" pos:start="73:19" pos:end="73:19">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
