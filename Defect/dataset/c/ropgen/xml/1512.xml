<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1512.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">tcg_out_qemu_ld</name><parameter_list pos:start="1:28" pos:end="3:43">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:38">TCGContext</name><modifier pos:start="1:39" pos:end="1:39">*</modifier></type> <name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:58"><name pos:start="1:44" pos:end="1:49">TCGReg</name></type> <name pos:start="1:51" pos:end="1:58">data_reg</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:75"><decl pos:start="1:61" pos:end="1:75"><type pos:start="1:61" pos:end="1:75"><name pos:start="1:61" pos:end="1:66">TCGReg</name></type> <name pos:start="1:68" pos:end="1:75">addr_reg</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:39">TCGMemOpIdx</name></type> <name pos:start="3:41" pos:end="3:42">oi</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="48:0">

    <decl_stmt pos:start="7:5" pos:end="10:0"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">TCGMemOp</name></type> <name pos:start="7:14" pos:end="7:16">opc</name> <init pos:start="7:18" pos:end="7:32">= <expr pos:start="7:20" pos:end="7:32"><call pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:28">get_memop</name><argument_list pos:start="7:29" pos:end="7:32">(<argument pos:start="7:30" pos:end="7:31"><expr pos:start="7:30" pos:end="7:31"><name pos:start="7:30" pos:end="7:31">oi</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:start="9:1" pos:end="9:21">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:21">CONFIG_SOFTMMU</name></cpp:ifdef>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:22">mem_index</name> <init pos:start="11:24" pos:end="11:39">= <expr pos:start="11:26" pos:end="11:39"><call pos:start="11:26" pos:end="11:39"><name pos:start="11:26" pos:end="11:35">get_mmuidx</name><argument_list pos:start="11:36" pos:end="11:39">(<argument pos:start="11:37" pos:end="11:38"><expr pos:start="11:37" pos:end="11:38"><name pos:start="11:37" pos:end="11:38">oi</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">tcg_insn_unit</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:28">label_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">TCGReg</name></type> <name pos:start="15:12" pos:end="15:19">base_reg</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:64"><expr pos:start="19:5" pos:end="19:63"><name pos:start="19:5" pos:end="19:12">base_reg</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:63"><name pos:start="19:16" pos:end="19:31">tcg_out_tlb_read</name><argument_list pos:start="19:32" pos:end="19:63">(<argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><name pos:start="19:33" pos:end="19:33">s</name></expr></argument>, <argument pos:start="19:36" pos:end="19:43"><expr pos:start="19:36" pos:end="19:43"><name pos:start="19:36" pos:end="19:43">addr_reg</name></expr></argument>, <argument pos:start="19:46" pos:end="19:48"><expr pos:start="19:46" pos:end="19:48"><name pos:start="19:46" pos:end="19:48">opc</name></expr></argument>, <argument pos:start="19:51" pos:end="19:59"><expr pos:start="19:51" pos:end="19:59"><name pos:start="19:51" pos:end="19:59">mem_index</name></expr></argument>, <argument pos:start="19:62" pos:end="19:62"><expr pos:start="19:62" pos:end="19:62"><literal type="number" pos:start="19:62" pos:end="19:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:13">label_ptr</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:27"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:27">code_ptr</name></name> <operator pos:start="23:29" pos:end="23:29">+</operator> <literal type="number" pos:start="23:31" pos:end="23:31">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:44"><expr pos:start="25:5" pos:end="25:43"><call pos:start="25:5" pos:end="25:43"><name pos:start="25:5" pos:end="25:16">tcg_out_insn</name><argument_list pos:start="25:17" pos:end="25:43">(<argument pos:start="25:18" pos:end="25:18"><expr pos:start="25:18" pos:end="25:18"><name pos:start="25:18" pos:end="25:18">s</name></expr></argument>, <argument pos:start="25:21" pos:end="25:22"><expr pos:start="25:21" pos:end="25:22"><name pos:start="25:21" pos:end="25:22">RI</name></expr></argument>, <argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">BRC</name></expr></argument>, <argument pos:start="25:30" pos:end="25:39"><expr pos:start="25:30" pos:end="25:39"><name pos:start="25:30" pos:end="25:39">S390_CC_NE</name></expr></argument>, <argument pos:start="25:42" pos:end="25:42"><expr pos:start="25:42" pos:end="25:42"><literal type="number" pos:start="25:42" pos:end="25:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:70"><expr pos:start="29:5" pos:end="29:69"><call pos:start="29:5" pos:end="29:69"><name pos:start="29:5" pos:end="29:26">tcg_out_qemu_ld_direct</name><argument_list pos:start="29:27" pos:end="29:69">(<argument pos:start="29:28" pos:end="29:28"><expr pos:start="29:28" pos:end="29:28"><name pos:start="29:28" pos:end="29:28">s</name></expr></argument>, <argument pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:33">opc</name></expr></argument>, <argument pos:start="29:36" pos:end="29:43"><expr pos:start="29:36" pos:end="29:43"><name pos:start="29:36" pos:end="29:43">data_reg</name></expr></argument>, <argument pos:start="29:46" pos:end="29:53"><expr pos:start="29:46" pos:end="29:53"><name pos:start="29:46" pos:end="29:53">base_reg</name></expr></argument>, <argument pos:start="29:56" pos:end="29:65"><expr pos:start="29:56" pos:end="29:65"><name pos:start="29:56" pos:end="29:65">TCG_REG_R2</name></expr></argument>, <argument pos:start="29:68" pos:end="29:68"><expr pos:start="29:68" pos:end="29:68"><literal type="number" pos:start="29:68" pos:end="29:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="36:0"><expr pos:start="33:5" pos:end="33:77"><call pos:start="33:5" pos:end="33:77"><name pos:start="33:5" pos:end="33:23">add_qemu_ldst_label</name><argument_list pos:start="33:24" pos:end="33:77">(<argument pos:start="33:25" pos:end="33:25"><expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">s</name></expr></argument>, <argument pos:start="33:28" pos:end="33:28"><expr pos:start="33:28" pos:end="33:28"><literal type="number" pos:start="33:28" pos:end="33:28">1</literal></expr></argument>, <argument pos:start="33:31" pos:end="33:32"><expr pos:start="33:31" pos:end="33:32"><name pos:start="33:31" pos:end="33:32">oi</name></expr></argument>, <argument pos:start="33:35" pos:end="33:42"><expr pos:start="33:35" pos:end="33:42"><name pos:start="33:35" pos:end="33:42">data_reg</name></expr></argument>, <argument pos:start="33:45" pos:end="33:52"><expr pos:start="33:45" pos:end="33:52"><name pos:start="33:45" pos:end="33:52">addr_reg</name></expr></argument>, <argument pos:start="33:55" pos:end="33:65"><expr pos:start="33:55" pos:end="33:65"><name pos:start="33:55" pos:end="33:65"><name pos:start="33:55" pos:end="33:55">s</name><operator pos:start="33:56" pos:end="33:57">-&gt;</operator><name pos:start="33:58" pos:end="33:65">code_ptr</name></name></expr></argument>, <argument pos:start="33:68" pos:end="33:76"><expr pos:start="33:68" pos:end="33:76"><name pos:start="33:68" pos:end="33:76">label_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="35:1" pos:end="35:5">#<cpp:directive pos:start="35:2" pos:end="35:5">else</cpp:directive></cpp:else>

    <decl_stmt pos:start="37:5" pos:end="37:21"><decl pos:start="37:5" pos:end="37:20"><type pos:start="37:5" pos:end="37:10"><name pos:start="37:5" pos:end="37:10">TCGReg</name></type> <name pos:start="37:12" pos:end="37:20">index_reg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:25"><decl pos:start="39:5" pos:end="39:24"><type pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:19">tcg_target_long</name></type> <name pos:start="39:21" pos:end="39:24">disp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:59"><expr pos:start="43:5" pos:end="43:58"><call pos:start="43:5" pos:end="43:58"><name pos:start="43:5" pos:end="43:25">tcg_prepare_user_ldst</name><argument_list pos:start="43:26" pos:end="43:58">(<argument pos:start="43:27" pos:end="43:27"><expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">s</name></expr></argument>, <argument pos:start="43:30" pos:end="43:38"><expr pos:start="43:30" pos:end="43:38"><operator pos:start="43:30" pos:end="43:30">&amp;</operator><name pos:start="43:31" pos:end="43:38">addr_reg</name></expr></argument>, <argument pos:start="43:41" pos:end="43:50"><expr pos:start="43:41" pos:end="43:50"><operator pos:start="43:41" pos:end="43:41">&amp;</operator><name pos:start="43:42" pos:end="43:50">index_reg</name></expr></argument>, <argument pos:start="43:53" pos:end="43:57"><expr pos:start="43:53" pos:end="43:57"><operator pos:start="43:53" pos:end="43:53">&amp;</operator><name pos:start="43:54" pos:end="43:57">disp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="48:0"><expr pos:start="45:5" pos:end="45:71"><call pos:start="45:5" pos:end="45:71"><name pos:start="45:5" pos:end="45:26">tcg_out_qemu_ld_direct</name><argument_list pos:start="45:27" pos:end="45:71">(<argument pos:start="45:28" pos:end="45:28"><expr pos:start="45:28" pos:end="45:28"><name pos:start="45:28" pos:end="45:28">s</name></expr></argument>, <argument pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:33">opc</name></expr></argument>, <argument pos:start="45:36" pos:end="45:43"><expr pos:start="45:36" pos:end="45:43"><name pos:start="45:36" pos:end="45:43">data_reg</name></expr></argument>, <argument pos:start="45:46" pos:end="45:53"><expr pos:start="45:46" pos:end="45:53"><name pos:start="45:46" pos:end="45:53">addr_reg</name></expr></argument>, <argument pos:start="45:56" pos:end="45:64"><expr pos:start="45:56" pos:end="45:64"><name pos:start="45:56" pos:end="45:64">index_reg</name></expr></argument>, <argument pos:start="45:67" pos:end="45:70"><expr pos:start="45:67" pos:end="45:70"><name pos:start="45:67" pos:end="45:70">disp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
