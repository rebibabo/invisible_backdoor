<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8256.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">size_t</name></type> <name pos:start="1:15" pos:end="1:27">write_to_port</name><parameter_list pos:start="1:28" pos:end="3:60">(<parameter pos:start="1:29" pos:end="1:50"><decl pos:start="1:29" pos:end="1:50"><type pos:start="1:29" pos:end="1:50"><name pos:start="1:29" pos:end="1:44">VirtIOSerialPort</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">port</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:46"><decl pos:start="3:29" pos:end="3:46"><type pos:start="3:29" pos:end="3:46"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:41">uint8_t</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:46">buf</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:59"><decl pos:start="3:49" pos:end="3:59"><type pos:start="3:49" pos:end="3:59"><name pos:start="3:49" pos:end="3:54">size_t</name></type> <name pos:start="3:56" pos:end="3:59">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:18">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:20">VirtQueueElement</name></type> <name pos:start="7:22" pos:end="7:25">elem</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">VirtQueue</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:17">vq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:17">offset</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">size_t</name></type> <name pos:start="13:12" pos:end="13:14">len</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:6">vq</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:18"><name pos:start="17:10" pos:end="17:13">port</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:18">ivq</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:32">(<expr pos:start="19:9" pos:end="19:31"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:31"><name pos:start="19:10" pos:end="19:27">virtio_queue_ready</name><argument_list pos:start="19:28" pos:end="19:31">(<argument pos:start="19:29" pos:end="19:30"><expr pos:start="19:29" pos:end="19:30"><name pos:start="19:29" pos:end="19:30">vq</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:34" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:14">(<expr pos:start="25:9" pos:end="25:13"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:13">size</name></expr>)</condition> <block pos:start="25:16" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="33:5" pos:end="61:5">while <condition pos:start="33:11" pos:end="33:25">(<expr pos:start="33:12" pos:end="33:24"><name pos:start="33:12" pos:end="33:17">offset</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:24">size</name></expr>)</condition> <block pos:start="33:27" pos:end="61:5">{<block_content pos:start="35:9" pos:end="59:39">

        <decl_stmt pos:start="35:9" pos:end="35:14"><decl pos:start="35:9" pos:end="35:13"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:13">i</name></decl>;</decl_stmt>



        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:38">(<expr pos:start="39:13" pos:end="39:37"><operator pos:start="39:13" pos:end="39:13">!</operator><call pos:start="39:14" pos:end="39:37"><name pos:start="39:14" pos:end="39:26">virtqueue_pop</name><argument_list pos:start="39:27" pos:end="39:37">(<argument pos:start="39:28" pos:end="39:29"><expr pos:start="39:28" pos:end="39:29"><name pos:start="39:28" pos:end="39:29">vq</name></expr></argument>, <argument pos:start="39:32" pos:end="39:36"><expr pos:start="39:32" pos:end="39:36"><operator pos:start="39:32" pos:end="39:32">&amp;</operator><name pos:start="39:33" pos:end="39:36">elem</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:40" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:18">

            <break pos:start="41:13" pos:end="41:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <for pos:start="47:9" pos:end="57:9">for <control pos:start="47:13" pos:end="47:58">(<init pos:start="47:14" pos:end="47:19"><expr pos:start="47:14" pos:end="47:18"><name pos:start="47:14" pos:end="47:14">i</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>;</init> <condition pos:start="47:21" pos:end="47:53"><expr pos:start="47:21" pos:end="47:52"><name pos:start="47:21" pos:end="47:26">offset</name> <operator pos:start="47:28" pos:end="47:28">&lt;</operator> <name pos:start="47:30" pos:end="47:33">size</name> <operator pos:start="47:35" pos:end="47:36">&amp;&amp;</operator> <name pos:start="47:38" pos:end="47:38">i</name> <operator pos:start="47:40" pos:end="47:40">&lt;</operator> <name pos:start="47:42" pos:end="47:52"><name pos:start="47:42" pos:end="47:45">elem</name><operator pos:start="47:46" pos:end="47:46">.</operator><name pos:start="47:47" pos:end="47:52">in_num</name></name></expr>;</condition> <incr pos:start="47:55" pos:end="47:57"><expr pos:start="47:55" pos:end="47:57"><name pos:start="47:55" pos:end="47:55">i</name><operator pos:start="47:56" pos:end="47:57">++</operator></expr></incr>)</control> <block pos:start="47:60" pos:end="57:9">{<block_content pos:start="49:13" pos:end="55:26">

            <expr_stmt pos:start="49:13" pos:end="49:60"><expr pos:start="49:13" pos:end="49:59"><name pos:start="49:13" pos:end="49:15">len</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:59"><name pos:start="49:19" pos:end="49:21">MIN</name><argument_list pos:start="49:22" pos:end="49:59">(<argument pos:start="49:23" pos:end="49:43"><expr pos:start="49:23" pos:end="49:43"><name pos:start="49:23" pos:end="49:35"><name pos:start="49:23" pos:end="49:26">elem</name><operator pos:start="49:27" pos:end="49:27">.</operator><name pos:start="49:28" pos:end="49:32">in_sg</name><index pos:start="49:33" pos:end="49:35">[<expr pos:start="49:34" pos:end="49:34"><name pos:start="49:34" pos:end="49:34">i</name></expr>]</index></name><operator pos:start="49:36" pos:end="49:36">.</operator><name pos:start="49:37" pos:end="49:43">iov_len</name></expr></argument>, <argument pos:start="49:46" pos:end="49:58"><expr pos:start="49:46" pos:end="49:58"><name pos:start="49:46" pos:end="49:49">size</name> <operator pos:start="49:51" pos:end="49:51">-</operator> <name pos:start="49:53" pos:end="49:58">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="53:13" pos:end="53:62"><expr pos:start="53:13" pos:end="53:61"><call pos:start="53:13" pos:end="53:61"><name pos:start="53:13" pos:end="53:18">memcpy</name><argument_list pos:start="53:19" pos:end="53:61">(<argument pos:start="53:20" pos:end="53:41"><expr pos:start="53:20" pos:end="53:41"><name pos:start="53:20" pos:end="53:32"><name pos:start="53:20" pos:end="53:23">elem</name><operator pos:start="53:24" pos:end="53:24">.</operator><name pos:start="53:25" pos:end="53:29">in_sg</name><index pos:start="53:30" pos:end="53:32">[<expr pos:start="53:31" pos:end="53:31"><name pos:start="53:31" pos:end="53:31">i</name></expr>]</index></name><operator pos:start="53:33" pos:end="53:33">.</operator><name pos:start="53:34" pos:end="53:41">iov_base</name></expr></argument>, <argument pos:start="53:44" pos:end="53:55"><expr pos:start="53:44" pos:end="53:55"><name pos:start="53:44" pos:end="53:46">buf</name> <operator pos:start="53:48" pos:end="53:48">+</operator> <name pos:start="53:50" pos:end="53:55">offset</name></expr></argument>, <argument pos:start="53:58" pos:end="53:60"><expr pos:start="53:58" pos:end="53:60"><name pos:start="53:58" pos:end="53:60">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:26"><expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:18">offset</name> <operator pos:start="55:20" pos:end="55:21">+=</operator> <name pos:start="55:23" pos:end="55:25">len</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="59:9" pos:end="59:39"><expr pos:start="59:9" pos:end="59:38"><call pos:start="59:9" pos:end="59:38"><name pos:start="59:9" pos:end="59:22">virtqueue_push</name><argument_list pos:start="59:23" pos:end="59:38">(<argument pos:start="59:24" pos:end="59:25"><expr pos:start="59:24" pos:end="59:25"><name pos:start="59:24" pos:end="59:25">vq</name></expr></argument>, <argument pos:start="59:28" pos:end="59:32"><expr pos:start="59:28" pos:end="59:32"><operator pos:start="59:28" pos:end="59:28">&amp;</operator><name pos:start="59:29" pos:end="59:32">elem</name></expr></argument>, <argument pos:start="59:35" pos:end="59:37"><expr pos:start="59:35" pos:end="59:37"><name pos:start="59:35" pos:end="59:37">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="65:5" pos:end="65:41"><expr pos:start="65:5" pos:end="65:40"><call pos:start="65:5" pos:end="65:40"><name pos:start="65:5" pos:end="65:17">virtio_notify</name><argument_list pos:start="65:18" pos:end="65:40">(<argument pos:start="65:19" pos:end="65:35"><expr pos:start="65:19" pos:end="65:35"><operator pos:start="65:19" pos:end="65:19">&amp;</operator><name pos:start="65:20" pos:end="65:35"><name pos:start="65:20" pos:end="65:23">port</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:29">vser</name><operator pos:start="65:30" pos:end="65:31">-&gt;</operator><name pos:start="65:32" pos:end="65:35">vdev</name></name></expr></argument>, <argument pos:start="65:38" pos:end="65:39"><expr pos:start="65:38" pos:end="65:39"><name pos:start="65:38" pos:end="65:39">vq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="67:5" pos:end="67:18">return <expr pos:start="67:12" pos:end="67:17"><name pos:start="67:12" pos:end="67:17">offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
