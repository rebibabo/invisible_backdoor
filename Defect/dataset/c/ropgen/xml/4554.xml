<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4554.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:39">ff_intel_h263_decode_picture_header</name><parameter_list pos:start="1:40" pos:end="1:58">(<parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:54">MpegEncContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="201:1">{<block_content pos:start="5:5" pos:end="199:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">format</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:24">/* picture header */</comment>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:42">(<expr pos:start="11:9" pos:end="11:41"><call pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:21">get_bits_long</name><argument_list pos:start="11:22" pos:end="11:33">(<argument pos:start="11:23" pos:end="11:28"><expr pos:start="11:23" pos:end="11:28"><operator pos:start="11:23" pos:end="11:23">&amp;</operator><name pos:start="11:24" pos:end="11:28"><name pos:start="11:24" pos:end="11:24">s</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:28">gb</name></name></expr></argument>, <argument pos:start="11:31" pos:end="11:32"><expr pos:start="11:31" pos:end="11:32"><literal type="number" pos:start="11:31" pos:end="11:32">22</literal></expr></argument>)</argument_list></call> <operator pos:start="11:35" pos:end="11:36">!=</operator> <literal type="number" pos:start="11:38" pos:end="11:41">0x20</literal></expr>)</condition> <block pos:start="11:44" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:18">

        <expr_stmt pos:start="13:9" pos:end="13:67"><expr pos:start="13:9" pos:end="13:66"><call pos:start="13:9" pos:end="13:66"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:66">(<argument pos:start="13:16" pos:end="13:23"><expr pos:start="13:16" pos:end="13:23"><name pos:start="13:16" pos:end="13:23"><name pos:start="13:16" pos:end="13:16">s</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:23">avctx</name></name></expr></argument>, <argument pos:start="13:26" pos:end="13:37"><expr pos:start="13:26" pos:end="13:37"><name pos:start="13:26" pos:end="13:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:40" pos:end="13:65"><expr pos:start="13:40" pos:end="13:65"><literal type="string" pos:start="13:40" pos:end="13:65">"Bad picture start code\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:21">picture_number</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <call pos:start="19:25" pos:end="19:43"><name pos:start="19:25" pos:end="19:32">get_bits</name><argument_list pos:start="19:33" pos:end="19:43">(<argument pos:start="19:34" pos:end="19:39"><expr pos:start="19:34" pos:end="19:39"><operator pos:start="19:34" pos:end="19:34">&amp;</operator><name pos:start="19:35" pos:end="19:39"><name pos:start="19:35" pos:end="19:35">s</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:39">gb</name></name></expr></argument>, <argument pos:start="19:42" pos:end="19:42"><expr pos:start="19:42" pos:end="19:42"><literal type="number" pos:start="19:42" pos:end="19:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="19:46" pos:end="19:68">/* picture timestamp */</comment>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:31">(<expr pos:start="23:9" pos:end="23:30"><call pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:17">get_bits1</name><argument_list pos:start="23:18" pos:end="23:25">(<argument pos:start="23:19" pos:end="23:24"><expr pos:start="23:19" pos:end="23:24"><operator pos:start="23:19" pos:end="23:19">&amp;</operator><name pos:start="23:20" pos:end="23:24"><name pos:start="23:20" pos:end="23:20">s</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:24">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:27" pos:end="23:28">!=</operator> <literal type="number" pos:start="23:30" pos:end="23:30">1</literal></expr>)</condition> <block pos:start="23:33" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

        <expr_stmt pos:start="25:9" pos:end="25:55"><expr pos:start="25:9" pos:end="25:54"><call pos:start="25:9" pos:end="25:54"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:54">(<argument pos:start="25:16" pos:end="25:23"><expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">avctx</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:37"><expr pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:40" pos:end="25:53"><expr pos:start="25:40" pos:end="25:53"><literal type="string" pos:start="25:40" pos:end="25:53">"Bad marker\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>      <comment type="block" pos:start="27:25" pos:end="27:36">/* marker */</comment>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:31">(<expr pos:start="31:9" pos:end="31:30"><call pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:17">get_bits1</name><argument_list pos:start="31:18" pos:end="31:25">(<argument pos:start="31:19" pos:end="31:24"><expr pos:start="31:19" pos:end="31:24"><operator pos:start="31:19" pos:end="31:19">&amp;</operator><name pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:20">s</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:24">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:27" pos:end="31:28">!=</operator> <literal type="number" pos:start="31:30" pos:end="31:30">0</literal></expr>)</condition> <block pos:start="31:33" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

        <expr_stmt pos:start="33:9" pos:end="33:56"><expr pos:start="33:9" pos:end="33:55"><call pos:start="33:9" pos:end="33:55"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:55">(<argument pos:start="33:16" pos:end="33:23"><expr pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:23">avctx</name></name></expr></argument>, <argument pos:start="33:26" pos:end="33:37"><expr pos:start="33:26" pos:end="33:37"><name pos:start="33:26" pos:end="33:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:40" pos:end="33:54"><expr pos:start="33:40" pos:end="33:54"><literal type="string" pos:start="33:40" pos:end="33:54">"Bad H263 id\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>      <comment type="block" pos:start="35:25" pos:end="35:37">/* h263 id */</comment>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:23"><expr pos:start="39:5" pos:end="39:22"><call pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:14">skip_bits1</name><argument_list pos:start="39:15" pos:end="39:22">(<argument pos:start="39:16" pos:end="39:21"><expr pos:start="39:16" pos:end="39:21"><operator pos:start="39:16" pos:end="39:16">&amp;</operator><name pos:start="39:17" pos:end="39:21"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="39:33" pos:end="39:54">/* split screen off */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:23"><expr pos:start="41:5" pos:end="41:22"><call pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:14">skip_bits1</name><argument_list pos:start="41:15" pos:end="41:22">(<argument pos:start="41:16" pos:end="41:21"><expr pos:start="41:16" pos:end="41:21"><operator pos:start="41:16" pos:end="41:16">&amp;</operator><name pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="41:33" pos:end="41:49">/* camera  off */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:23"><expr pos:start="43:5" pos:end="43:22"><call pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:14">skip_bits1</name><argument_list pos:start="43:15" pos:end="43:22">(<argument pos:start="43:16" pos:end="43:21"><expr pos:start="43:16" pos:end="43:21"><operator pos:start="43:16" pos:end="43:16">&amp;</operator><name pos:start="43:17" pos:end="43:21"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="43:33" pos:end="43:64">/* freeze picture release off */</comment>



    <expr_stmt pos:start="47:5" pos:end="47:33"><expr pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:10">format</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:32"><name pos:start="47:14" pos:end="47:21">get_bits</name><argument_list pos:start="47:22" pos:end="47:32">(<argument pos:start="47:23" pos:end="47:28"><expr pos:start="47:23" pos:end="47:28"><operator pos:start="47:23" pos:end="47:23">&amp;</operator><name pos:start="47:24" pos:end="47:28"><name pos:start="47:24" pos:end="47:24">s</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:28">gb</name></name></expr></argument>, <argument pos:start="47:31" pos:end="47:31"><expr pos:start="47:31" pos:end="47:31"><literal type="number" pos:start="47:31" pos:end="47:31">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:35">(<expr pos:start="49:9" pos:end="49:34"><name pos:start="49:9" pos:end="49:14">format</name> <operator pos:start="49:16" pos:end="49:17">==</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal> <operator pos:start="49:21" pos:end="49:22">||</operator> <name pos:start="49:24" pos:end="49:29">format</name> <operator pos:start="49:31" pos:end="49:32">==</operator> <literal type="number" pos:start="49:34" pos:end="49:34">6</literal></expr>)</condition> <block pos:start="49:37" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:18">

        <expr_stmt pos:start="51:9" pos:end="51:81"><expr pos:start="51:9" pos:end="51:80"><call pos:start="51:9" pos:end="51:80"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:80">(<argument pos:start="51:16" pos:end="51:23"><expr pos:start="51:16" pos:end="51:23"><name pos:start="51:16" pos:end="51:23"><name pos:start="51:16" pos:end="51:16">s</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:23">avctx</name></name></expr></argument>, <argument pos:start="51:26" pos:end="51:37"><expr pos:start="51:26" pos:end="51:37"><name pos:start="51:26" pos:end="51:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:40" pos:end="51:79"><expr pos:start="51:40" pos:end="51:79"><literal type="string" pos:start="51:40" pos:end="51:79">"Intel H263 free format not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:21"><expr pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:16"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:16">h263_plus</name></name> <operator pos:start="57:18" pos:end="57:18">=</operator> <literal type="number" pos:start="57:20" pos:end="57:20">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:57"><expr pos:start="61:5" pos:end="61:56"><name pos:start="61:5" pos:end="61:16"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:16">pict_type</name></name> <operator pos:start="61:18" pos:end="61:18">=</operator> <name pos:start="61:20" pos:end="61:36">AV_PICTURE_TYPE_I</name> <operator pos:start="61:38" pos:end="61:38">+</operator> <call pos:start="61:40" pos:end="61:56"><name pos:start="61:40" pos:end="61:48">get_bits1</name><argument_list pos:start="61:49" pos:end="61:56">(<argument pos:start="61:50" pos:end="61:55"><expr pos:start="61:50" pos:end="61:55"><operator pos:start="61:50" pos:end="61:50">&amp;</operator><name pos:start="61:51" pos:end="61:55"><name pos:start="61:51" pos:end="61:51">s</name><operator pos:start="61:52" pos:end="61:53">-&gt;</operator><name pos:start="61:54" pos:end="61:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:43"><expr pos:start="65:5" pos:end="65:42"><name pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:22">unrestricted_mv</name></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <call pos:start="65:26" pos:end="65:42"><name pos:start="65:26" pos:end="65:34">get_bits1</name><argument_list pos:start="65:35" pos:end="65:42">(<argument pos:start="65:36" pos:end="65:41"><expr pos:start="65:36" pos:end="65:41"><operator pos:start="65:36" pos:end="65:36">&amp;</operator><name pos:start="65:37" pos:end="65:41"><name pos:start="65:37" pos:end="65:37">s</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:46"><expr pos:start="67:5" pos:end="67:45"><name pos:start="67:5" pos:end="67:24"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:24">h263_long_vectors</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:45"><name pos:start="67:28" pos:end="67:28">s</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:45">unrestricted_mv</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:31">(<expr pos:start="71:9" pos:end="71:30"><call pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:17">get_bits1</name><argument_list pos:start="71:18" pos:end="71:25">(<argument pos:start="71:19" pos:end="71:24"><expr pos:start="71:19" pos:end="71:24"><operator pos:start="71:19" pos:end="71:19">&amp;</operator><name pos:start="71:20" pos:end="71:24"><name pos:start="71:20" pos:end="71:20">s</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:24">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="71:27" pos:end="71:28">!=</operator> <literal type="number" pos:start="71:30" pos:end="71:30">0</literal></expr>)</condition> <block pos:start="71:33" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:18">

        <expr_stmt pos:start="73:9" pos:end="73:62"><expr pos:start="73:9" pos:end="73:61"><call pos:start="73:9" pos:end="73:61"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:61">(<argument pos:start="73:16" pos:end="73:23"><expr pos:start="73:16" pos:end="73:23"><name pos:start="73:16" pos:end="73:23"><name pos:start="73:16" pos:end="73:16">s</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:23">avctx</name></name></expr></argument>, <argument pos:start="73:26" pos:end="73:37"><expr pos:start="73:26" pos:end="73:37"><name pos:start="73:26" pos:end="73:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:40" pos:end="73:60"><expr pos:start="73:40" pos:end="73:60"><literal type="string" pos:start="73:40" pos:end="73:60">"SAC not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:18">return <expr pos:start="75:16" pos:end="75:17"><operator pos:start="75:16" pos:end="75:16">-</operator><literal type="number" pos:start="75:17" pos:end="75:17">1</literal></expr>;</return>      <comment type="block" pos:start="75:25" pos:end="75:38">/* SAC: off */</comment>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:31"><expr pos:start="79:5" pos:end="79:30"><name pos:start="79:5" pos:end="79:11"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:11">obmc</name></name><operator pos:start="79:12" pos:end="79:12">=</operator> <call pos:start="79:14" pos:end="79:30"><name pos:start="79:14" pos:end="79:22">get_bits1</name><argument_list pos:start="79:23" pos:end="79:30">(<argument pos:start="79:24" pos:end="79:29"><expr pos:start="79:24" pos:end="79:29"><operator pos:start="79:24" pos:end="79:24">&amp;</operator><name pos:start="79:25" pos:end="79:29"><name pos:start="79:25" pos:end="79:25">s</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:36"><expr pos:start="81:5" pos:end="81:35"><name pos:start="81:5" pos:end="81:15"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:15">pb_frame</name></name> <operator pos:start="81:17" pos:end="81:17">=</operator> <call pos:start="81:19" pos:end="81:35"><name pos:start="81:19" pos:end="81:27">get_bits1</name><argument_list pos:start="81:28" pos:end="81:35">(<argument pos:start="81:29" pos:end="81:34"><expr pos:start="81:29" pos:end="81:34"><operator pos:start="81:29" pos:end="81:29">&amp;</operator><name pos:start="81:30" pos:end="81:34"><name pos:start="81:30" pos:end="81:30">s</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:34">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="85:5" pos:end="129:5"><if pos:start="85:5" pos:end="95:5">if <condition pos:start="85:8" pos:end="85:19">(<expr pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:14">format</name> <operator pos:start="85:16" pos:end="85:16">&lt;</operator> <literal type="number" pos:start="85:18" pos:end="85:18">6</literal></expr>)</condition> <block pos:start="85:21" pos:end="95:5">{<block_content pos:start="87:9" pos:end="93:47">

        <expr_stmt pos:start="87:9" pos:end="87:45"><expr pos:start="87:9" pos:end="87:44"><name pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:16">width</name></name> <operator pos:start="87:18" pos:end="87:18">=</operator> <name pos:start="87:20" pos:end="87:44"><name pos:start="87:20" pos:end="87:33">ff_h263_format</name><index pos:start="87:34" pos:end="87:41">[<expr pos:start="87:35" pos:end="87:40"><name pos:start="87:35" pos:end="87:40">format</name></expr>]</index><index pos:start="87:42" pos:end="87:44">[<expr pos:start="87:43" pos:end="87:43"><literal type="number" pos:start="87:43" pos:end="87:43">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:46"><expr pos:start="89:9" pos:end="89:45"><name pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:17">height</name></name> <operator pos:start="89:19" pos:end="89:19">=</operator> <name pos:start="89:21" pos:end="89:45"><name pos:start="89:21" pos:end="89:34">ff_h263_format</name><index pos:start="89:35" pos:end="89:42">[<expr pos:start="89:36" pos:end="89:41"><name pos:start="89:36" pos:end="89:41">format</name></expr>]</index><index pos:start="89:43" pos:end="89:45">[<expr pos:start="89:44" pos:end="89:44"><literal type="number" pos:start="89:44" pos:end="89:44">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:47"><expr pos:start="91:9" pos:end="91:46"><name pos:start="91:9" pos:end="91:41"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:16">avctx</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:37">sample_aspect_ratio</name><operator pos:start="91:38" pos:end="91:38">.</operator><name pos:start="91:39" pos:end="91:41">num</name></name> <operator pos:start="91:43" pos:end="91:43">=</operator> <literal type="number" pos:start="91:45" pos:end="91:46">12</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:47"><expr pos:start="93:9" pos:end="93:46"><name pos:start="93:9" pos:end="93:41"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:16">avctx</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:37">sample_aspect_ratio</name><operator pos:start="93:38" pos:end="93:38">.</operator><name pos:start="93:39" pos:end="93:41">den</name></name> <operator pos:start="93:43" pos:end="93:43">=</operator> <literal type="number" pos:start="93:45" pos:end="93:46">11</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="129:5">else <block pos:start="95:12" pos:end="129:5">{<block_content pos:start="97:9" pos:end="127:63">

        <expr_stmt pos:start="97:9" pos:end="97:37"><expr pos:start="97:9" pos:end="97:36"><name pos:start="97:9" pos:end="97:14">format</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <call pos:start="97:18" pos:end="97:36"><name pos:start="97:18" pos:end="97:25">get_bits</name><argument_list pos:start="97:26" pos:end="97:36">(<argument pos:start="97:27" pos:end="97:32"><expr pos:start="97:27" pos:end="97:32"><operator pos:start="97:27" pos:end="97:27">&amp;</operator><name pos:start="97:28" pos:end="97:32"><name pos:start="97:28" pos:end="97:28">s</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:32">gb</name></name></expr></argument>, <argument pos:start="97:35" pos:end="97:35"><expr pos:start="97:35" pos:end="97:35"><literal type="number" pos:start="97:35" pos:end="97:35">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if<condition pos:start="99:11" pos:end="99:38">(<expr pos:start="99:12" pos:end="99:37"><name pos:start="99:12" pos:end="99:17">format</name> <operator pos:start="99:19" pos:end="99:20">==</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal> <operator pos:start="99:24" pos:end="99:25">||</operator> <name pos:start="99:27" pos:end="99:32">format</name> <operator pos:start="99:34" pos:end="99:35">==</operator> <literal type="number" pos:start="99:37" pos:end="99:37">7</literal></expr>)</condition><block pos:start="99:39" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:22">

            <expr_stmt pos:start="101:13" pos:end="101:72"><expr pos:start="101:13" pos:end="101:71"><call pos:start="101:13" pos:end="101:71"><name pos:start="101:13" pos:end="101:18">av_log</name><argument_list pos:start="101:19" pos:end="101:71">(<argument pos:start="101:20" pos:end="101:27"><expr pos:start="101:20" pos:end="101:27"><name pos:start="101:20" pos:end="101:27"><name pos:start="101:20" pos:end="101:20">s</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:27">avctx</name></name></expr></argument>, <argument pos:start="101:30" pos:end="101:41"><expr pos:start="101:30" pos:end="101:41"><name pos:start="101:30" pos:end="101:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:44" pos:end="101:70"><expr pos:start="101:44" pos:end="101:70"><literal type="string" pos:start="101:44" pos:end="101:70">"Wrong Intel H263 format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="103:13" pos:end="103:22">return <expr pos:start="103:20" pos:end="103:21"><operator pos:start="103:20" pos:end="103:20">-</operator><literal type="number" pos:start="103:21" pos:end="103:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="107:9" pos:end="109:77"><if pos:start="107:9" pos:end="109:77">if<condition pos:start="107:11" pos:end="107:31">(<expr pos:start="107:12" pos:end="107:30"><call pos:start="107:12" pos:end="107:30"><name pos:start="107:12" pos:end="107:19">get_bits</name><argument_list pos:start="107:20" pos:end="107:30">(<argument pos:start="107:21" pos:end="107:26"><expr pos:start="107:21" pos:end="107:26"><operator pos:start="107:21" pos:end="107:21">&amp;</operator><name pos:start="107:22" pos:end="107:26"><name pos:start="107:22" pos:end="107:22">s</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:26">gb</name></name></expr></argument>, <argument pos:start="107:29" pos:end="107:29"><expr pos:start="107:29" pos:end="107:29"><literal type="number" pos:start="107:29" pos:end="107:29">2</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:77"><block_content pos:start="109:13" pos:end="109:77">

            <expr_stmt pos:start="109:13" pos:end="109:77"><expr pos:start="109:13" pos:end="109:76"><call pos:start="109:13" pos:end="109:76"><name pos:start="109:13" pos:end="109:18">av_log</name><argument_list pos:start="109:19" pos:end="109:76">(<argument pos:start="109:20" pos:end="109:27"><expr pos:start="109:20" pos:end="109:27"><name pos:start="109:20" pos:end="109:27"><name pos:start="109:20" pos:end="109:20">s</name><operator pos:start="109:21" pos:end="109:22">-&gt;</operator><name pos:start="109:23" pos:end="109:27">avctx</name></name></expr></argument>, <argument pos:start="109:30" pos:end="109:41"><expr pos:start="109:30" pos:end="109:41"><name pos:start="109:30" pos:end="109:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="109:44" pos:end="109:75"><expr pos:start="109:44" pos:end="109:75"><literal type="string" pos:start="109:44" pos:end="109:75">"Bad value for reserved field\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:43"><expr pos:start="111:9" pos:end="111:42"><name pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:22">loop_filter</name></name> <operator pos:start="111:24" pos:end="111:24">=</operator> <call pos:start="111:26" pos:end="111:42"><name pos:start="111:26" pos:end="111:34">get_bits1</name><argument_list pos:start="111:35" pos:end="111:42">(<argument pos:start="111:36" pos:end="111:41"><expr pos:start="111:36" pos:end="111:41"><operator pos:start="111:36" pos:end="111:36">&amp;</operator><name pos:start="111:37" pos:end="111:41"><name pos:start="111:37" pos:end="111:37">s</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="115:77"><if pos:start="113:9" pos:end="115:77">if<condition pos:start="113:11" pos:end="113:29">(<expr pos:start="113:12" pos:end="113:28"><call pos:start="113:12" pos:end="113:28"><name pos:start="113:12" pos:end="113:20">get_bits1</name><argument_list pos:start="113:21" pos:end="113:28">(<argument pos:start="113:22" pos:end="113:27"><expr pos:start="113:22" pos:end="113:27"><operator pos:start="113:22" pos:end="113:22">&amp;</operator><name pos:start="113:23" pos:end="113:27"><name pos:start="113:23" pos:end="113:23">s</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:27">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:77"><block_content pos:start="115:13" pos:end="115:77">

            <expr_stmt pos:start="115:13" pos:end="115:77"><expr pos:start="115:13" pos:end="115:76"><call pos:start="115:13" pos:end="115:76"><name pos:start="115:13" pos:end="115:18">av_log</name><argument_list pos:start="115:19" pos:end="115:76">(<argument pos:start="115:20" pos:end="115:27"><expr pos:start="115:20" pos:end="115:27"><name pos:start="115:20" pos:end="115:27"><name pos:start="115:20" pos:end="115:20">s</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:27">avctx</name></name></expr></argument>, <argument pos:start="115:30" pos:end="115:41"><expr pos:start="115:30" pos:end="115:41"><name pos:start="115:30" pos:end="115:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="115:44" pos:end="115:75"><expr pos:start="115:44" pos:end="115:75"><literal type="string" pos:start="115:44" pos:end="115:75">"Bad value for reserved field\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="117:9" pos:end="119:28"><if pos:start="117:9" pos:end="119:28">if<condition pos:start="117:11" pos:end="117:29">(<expr pos:start="117:12" pos:end="117:28"><call pos:start="117:12" pos:end="117:28"><name pos:start="117:12" pos:end="117:20">get_bits1</name><argument_list pos:start="117:21" pos:end="117:28">(<argument pos:start="117:22" pos:end="117:27"><expr pos:start="117:22" pos:end="117:27"><operator pos:start="117:22" pos:end="117:22">&amp;</operator><name pos:start="117:23" pos:end="117:27"><name pos:start="117:23" pos:end="117:23">s</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:27">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:28"><block_content pos:start="119:13" pos:end="119:28">

            <expr_stmt pos:start="119:13" pos:end="119:28"><expr pos:start="119:13" pos:end="119:27"><name pos:start="119:13" pos:end="119:23"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:23">pb_frame</name></name> <operator pos:start="119:25" pos:end="119:25">=</operator> <literal type="number" pos:start="119:27" pos:end="119:27">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="121:9" pos:end="123:77"><if pos:start="121:9" pos:end="123:77">if<condition pos:start="121:11" pos:end="121:31">(<expr pos:start="121:12" pos:end="121:30"><call pos:start="121:12" pos:end="121:30"><name pos:start="121:12" pos:end="121:19">get_bits</name><argument_list pos:start="121:20" pos:end="121:30">(<argument pos:start="121:21" pos:end="121:26"><expr pos:start="121:21" pos:end="121:26"><operator pos:start="121:21" pos:end="121:21">&amp;</operator><name pos:start="121:22" pos:end="121:26"><name pos:start="121:22" pos:end="121:22">s</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:26">gb</name></name></expr></argument>, <argument pos:start="121:29" pos:end="121:29"><expr pos:start="121:29" pos:end="121:29"><literal type="number" pos:start="121:29" pos:end="121:29">5</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:77"><block_content pos:start="123:13" pos:end="123:77">

            <expr_stmt pos:start="123:13" pos:end="123:77"><expr pos:start="123:13" pos:end="123:76"><call pos:start="123:13" pos:end="123:76"><name pos:start="123:13" pos:end="123:18">av_log</name><argument_list pos:start="123:19" pos:end="123:76">(<argument pos:start="123:20" pos:end="123:27"><expr pos:start="123:20" pos:end="123:27"><name pos:start="123:20" pos:end="123:27"><name pos:start="123:20" pos:end="123:20">s</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:27">avctx</name></name></expr></argument>, <argument pos:start="123:30" pos:end="123:41"><expr pos:start="123:30" pos:end="123:41"><name pos:start="123:30" pos:end="123:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="123:44" pos:end="123:75"><expr pos:start="123:44" pos:end="123:75"><literal type="string" pos:start="123:44" pos:end="123:75">"Bad value for reserved field\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="125:9" pos:end="127:63"><if pos:start="125:9" pos:end="127:63">if<condition pos:start="125:11" pos:end="125:36">(<expr pos:start="125:12" pos:end="125:35"><call pos:start="125:12" pos:end="125:30"><name pos:start="125:12" pos:end="125:19">get_bits</name><argument_list pos:start="125:20" pos:end="125:30">(<argument pos:start="125:21" pos:end="125:26"><expr pos:start="125:21" pos:end="125:26"><operator pos:start="125:21" pos:end="125:21">&amp;</operator><name pos:start="125:22" pos:end="125:26"><name pos:start="125:22" pos:end="125:22">s</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:26">gb</name></name></expr></argument>, <argument pos:start="125:29" pos:end="125:29"><expr pos:start="125:29" pos:end="125:29"><literal type="number" pos:start="125:29" pos:end="125:29">5</literal></expr></argument>)</argument_list></call> <operator pos:start="125:32" pos:end="125:33">!=</operator> <literal type="number" pos:start="125:35" pos:end="125:35">1</literal></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:63"><block_content pos:start="127:13" pos:end="127:63">

            <expr_stmt pos:start="127:13" pos:end="127:63"><expr pos:start="127:13" pos:end="127:62"><call pos:start="127:13" pos:end="127:62"><name pos:start="127:13" pos:end="127:18">av_log</name><argument_list pos:start="127:19" pos:end="127:62">(<argument pos:start="127:20" pos:end="127:27"><expr pos:start="127:20" pos:end="127:27"><name pos:start="127:20" pos:end="127:27"><name pos:start="127:20" pos:end="127:20">s</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:27">avctx</name></name></expr></argument>, <argument pos:start="127:30" pos:end="127:41"><expr pos:start="127:30" pos:end="127:41"><name pos:start="127:30" pos:end="127:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="127:44" pos:end="127:61"><expr pos:start="127:44" pos:end="127:61"><literal type="string" pos:start="127:44" pos:end="127:61">"Invalid marker\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="131:5" pos:end="157:5"><if pos:start="131:5" pos:end="157:5">if<condition pos:start="131:7" pos:end="131:19">(<expr pos:start="131:8" pos:end="131:18"><name pos:start="131:8" pos:end="131:13">format</name> <operator pos:start="131:15" pos:end="131:16">==</operator> <literal type="number" pos:start="131:18" pos:end="131:18">6</literal></expr>)</condition><block pos:start="131:20" pos:end="157:5">{<block_content pos:start="133:9" pos:end="155:70">

        <decl_stmt pos:start="133:9" pos:end="133:37"><decl pos:start="133:9" pos:end="133:36"><type pos:start="133:9" pos:end="133:11"><name pos:start="133:9" pos:end="133:11">int</name></type> <name pos:start="133:13" pos:end="133:14">ar</name> <init pos:start="133:16" pos:end="133:36">= <expr pos:start="133:18" pos:end="133:36"><call pos:start="133:18" pos:end="133:36"><name pos:start="133:18" pos:end="133:25">get_bits</name><argument_list pos:start="133:26" pos:end="133:36">(<argument pos:start="133:27" pos:end="133:32"><expr pos:start="133:27" pos:end="133:32"><operator pos:start="133:27" pos:end="133:27">&amp;</operator><name pos:start="133:28" pos:end="133:32"><name pos:start="133:28" pos:end="133:28">s</name><operator pos:start="133:29" pos:end="133:30">-&gt;</operator><name pos:start="133:31" pos:end="133:32">gb</name></name></expr></argument>, <argument pos:start="133:35" pos:end="133:35"><expr pos:start="133:35" pos:end="133:35"><literal type="number" pos:start="133:35" pos:end="133:35">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:29"><expr pos:start="135:9" pos:end="135:28"><call pos:start="135:9" pos:end="135:28"><name pos:start="135:9" pos:end="135:17">skip_bits</name><argument_list pos:start="135:18" pos:end="135:28">(<argument pos:start="135:19" pos:end="135:24"><expr pos:start="135:19" pos:end="135:24"><operator pos:start="135:19" pos:end="135:19">&amp;</operator><name pos:start="135:20" pos:end="135:24"><name pos:start="135:20" pos:end="135:20">s</name><operator pos:start="135:21" pos:end="135:22">-&gt;</operator><name pos:start="135:23" pos:end="135:24">gb</name></name></expr></argument>, <argument pos:start="135:27" pos:end="135:27"><expr pos:start="135:27" pos:end="135:27"><literal type="number" pos:start="135:27" pos:end="135:27">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="135:31" pos:end="135:46">// display width</comment>

        <expr_stmt pos:start="137:9" pos:end="137:27"><expr pos:start="137:9" pos:end="137:26"><call pos:start="137:9" pos:end="137:26"><name pos:start="137:9" pos:end="137:18">skip_bits1</name><argument_list pos:start="137:19" pos:end="137:26">(<argument pos:start="137:20" pos:end="137:25"><expr pos:start="137:20" pos:end="137:25"><operator pos:start="137:20" pos:end="137:20">&amp;</operator><name pos:start="137:21" pos:end="137:25"><name pos:start="137:21" pos:end="137:21">s</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:29"><expr pos:start="139:9" pos:end="139:28"><call pos:start="139:9" pos:end="139:28"><name pos:start="139:9" pos:end="139:17">skip_bits</name><argument_list pos:start="139:18" pos:end="139:28">(<argument pos:start="139:19" pos:end="139:24"><expr pos:start="139:19" pos:end="139:24"><operator pos:start="139:19" pos:end="139:19">&amp;</operator><name pos:start="139:20" pos:end="139:24"><name pos:start="139:20" pos:end="139:20">s</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:24">gb</name></name></expr></argument>, <argument pos:start="139:27" pos:end="139:27"><expr pos:start="139:27" pos:end="139:27"><literal type="number" pos:start="139:27" pos:end="139:27">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="139:31" pos:end="139:47">// display height</comment>

        <if_stmt pos:start="141:9" pos:end="151:9"><if pos:start="141:9" pos:end="147:9">if<condition pos:start="141:11" pos:end="141:20">(<expr pos:start="141:12" pos:end="141:19"><name pos:start="141:12" pos:end="141:13">ar</name> <operator pos:start="141:15" pos:end="141:16">==</operator> <literal type="number" pos:start="141:18" pos:end="141:19">15</literal></expr>)</condition><block pos:start="141:21" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:68">

            <expr_stmt pos:start="143:13" pos:end="143:68"><expr pos:start="143:13" pos:end="143:67"><name pos:start="143:13" pos:end="143:45"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:20">avctx</name><operator pos:start="143:21" pos:end="143:22">-&gt;</operator><name pos:start="143:23" pos:end="143:41">sample_aspect_ratio</name><operator pos:start="143:42" pos:end="143:42">.</operator><name pos:start="143:43" pos:end="143:45">num</name></name> <operator pos:start="143:47" pos:end="143:47">=</operator> <call pos:start="143:49" pos:end="143:67"><name pos:start="143:49" pos:end="143:56">get_bits</name><argument_list pos:start="143:57" pos:end="143:67">(<argument pos:start="143:58" pos:end="143:63"><expr pos:start="143:58" pos:end="143:63"><operator pos:start="143:58" pos:end="143:58">&amp;</operator><name pos:start="143:59" pos:end="143:63"><name pos:start="143:59" pos:end="143:59">s</name><operator pos:start="143:60" pos:end="143:61">-&gt;</operator><name pos:start="143:62" pos:end="143:63">gb</name></name></expr></argument>, <argument pos:start="143:66" pos:end="143:66"><expr pos:start="143:66" pos:end="143:66"><literal type="number" pos:start="143:66" pos:end="143:66">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="143:70" pos:end="143:92">// aspect ratio - width</comment>

            <expr_stmt pos:start="145:13" pos:end="145:68"><expr pos:start="145:13" pos:end="145:67"><name pos:start="145:13" pos:end="145:45"><name pos:start="145:13" pos:end="145:13">s</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:20">avctx</name><operator pos:start="145:21" pos:end="145:22">-&gt;</operator><name pos:start="145:23" pos:end="145:41">sample_aspect_ratio</name><operator pos:start="145:42" pos:end="145:42">.</operator><name pos:start="145:43" pos:end="145:45">den</name></name> <operator pos:start="145:47" pos:end="145:47">=</operator> <call pos:start="145:49" pos:end="145:67"><name pos:start="145:49" pos:end="145:56">get_bits</name><argument_list pos:start="145:57" pos:end="145:67">(<argument pos:start="145:58" pos:end="145:63"><expr pos:start="145:58" pos:end="145:63"><operator pos:start="145:58" pos:end="145:58">&amp;</operator><name pos:start="145:59" pos:end="145:63"><name pos:start="145:59" pos:end="145:59">s</name><operator pos:start="145:60" pos:end="145:61">-&gt;</operator><name pos:start="145:62" pos:end="145:63">gb</name></name></expr></argument>, <argument pos:start="145:66" pos:end="145:66"><expr pos:start="145:66" pos:end="145:66"><literal type="number" pos:start="145:66" pos:end="145:66">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="145:70" pos:end="145:93">// aspect ratio - height</comment>

        </block_content>}</block></if> <else pos:start="147:11" pos:end="151:9">else <block pos:start="147:16" pos:end="151:9">{<block_content pos:start="149:13" pos:end="149:69">

            <expr_stmt pos:start="149:13" pos:end="149:69"><expr pos:start="149:13" pos:end="149:68"><name pos:start="149:13" pos:end="149:41"><name pos:start="149:13" pos:end="149:13">s</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:20">avctx</name><operator pos:start="149:21" pos:end="149:22">-&gt;</operator><name pos:start="149:23" pos:end="149:41">sample_aspect_ratio</name></name> <operator pos:start="149:43" pos:end="149:43">=</operator> <name pos:start="149:45" pos:end="149:68"><name pos:start="149:45" pos:end="149:64">ff_h263_pixel_aspect</name><index pos:start="149:65" pos:end="149:68">[<expr pos:start="149:66" pos:end="149:67"><name pos:start="149:66" pos:end="149:67">ar</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="153:9" pos:end="155:70"><if pos:start="153:9" pos:end="155:70">if <condition pos:start="153:12" pos:end="153:51">(<expr pos:start="153:13" pos:end="153:50"><name pos:start="153:13" pos:end="153:45"><name pos:start="153:13" pos:end="153:13">s</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:20">avctx</name><operator pos:start="153:21" pos:end="153:22">-&gt;</operator><name pos:start="153:23" pos:end="153:41">sample_aspect_ratio</name><operator pos:start="153:42" pos:end="153:42">.</operator><name pos:start="153:43" pos:end="153:45">num</name></name> <operator pos:start="153:47" pos:end="153:48">==</operator> <literal type="number" pos:start="153:50" pos:end="153:50">0</literal></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:70"><block_content pos:start="155:13" pos:end="155:70">

            <expr_stmt pos:start="155:13" pos:end="155:70"><expr pos:start="155:13" pos:end="155:69"><call pos:start="155:13" pos:end="155:69"><name pos:start="155:13" pos:end="155:18">av_log</name><argument_list pos:start="155:19" pos:end="155:69">(<argument pos:start="155:20" pos:end="155:27"><expr pos:start="155:20" pos:end="155:27"><name pos:start="155:20" pos:end="155:27"><name pos:start="155:20" pos:end="155:20">s</name><operator pos:start="155:21" pos:end="155:22">-&gt;</operator><name pos:start="155:23" pos:end="155:27">avctx</name></name></expr></argument>, <argument pos:start="155:30" pos:end="155:41"><expr pos:start="155:30" pos:end="155:41"><name pos:start="155:30" pos:end="155:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="155:44" pos:end="155:68"><expr pos:start="155:44" pos:end="155:68"><literal type="string" pos:start="155:44" pos:end="155:68">"Invalid aspect ratio.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:54"><expr pos:start="161:5" pos:end="161:53"><name pos:start="161:5" pos:end="161:20"><name pos:start="161:5" pos:end="161:5">s</name><operator pos:start="161:6" pos:end="161:7">-&gt;</operator><name pos:start="161:8" pos:end="161:20">chroma_qscale</name></name><operator pos:start="161:21" pos:end="161:21">=</operator> <name pos:start="161:23" pos:end="161:31"><name pos:start="161:23" pos:end="161:23">s</name><operator pos:start="161:24" pos:end="161:25">-&gt;</operator><name pos:start="161:26" pos:end="161:31">qscale</name></name> <operator pos:start="161:33" pos:end="161:33">=</operator> <call pos:start="161:35" pos:end="161:53"><name pos:start="161:35" pos:end="161:42">get_bits</name><argument_list pos:start="161:43" pos:end="161:53">(<argument pos:start="161:44" pos:end="161:49"><expr pos:start="161:44" pos:end="161:49"><operator pos:start="161:44" pos:end="161:44">&amp;</operator><name pos:start="161:45" pos:end="161:49"><name pos:start="161:45" pos:end="161:45">s</name><operator pos:start="161:46" pos:end="161:47">-&gt;</operator><name pos:start="161:48" pos:end="161:49">gb</name></name></expr></argument>, <argument pos:start="161:52" pos:end="161:52"><expr pos:start="161:52" pos:end="161:52"><literal type="number" pos:start="161:52" pos:end="161:52">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:23"><expr pos:start="163:5" pos:end="163:22"><call pos:start="163:5" pos:end="163:22"><name pos:start="163:5" pos:end="163:14">skip_bits1</name><argument_list pos:start="163:15" pos:end="163:22">(<argument pos:start="163:16" pos:end="163:21"><expr pos:start="163:16" pos:end="163:21"><operator pos:start="163:16" pos:end="163:16">&amp;</operator><name pos:start="163:17" pos:end="163:21"><name pos:start="163:17" pos:end="163:17">s</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="163:25" pos:end="163:70">/* Continuous Presence Multipoint mode: off */</comment>



    <if_stmt pos:start="167:5" pos:end="173:5"><if pos:start="167:5" pos:end="173:5">if<condition pos:start="167:7" pos:end="167:19">(<expr pos:start="167:8" pos:end="167:18"><name pos:start="167:8" pos:end="167:18"><name pos:start="167:8" pos:end="167:8">s</name><operator pos:start="167:9" pos:end="167:10">-&gt;</operator><name pos:start="167:11" pos:end="167:18">pb_frame</name></name></expr>)</condition><block pos:start="167:20" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:29">

        <expr_stmt pos:start="169:9" pos:end="169:29"><expr pos:start="169:9" pos:end="169:28"><call pos:start="169:9" pos:end="169:28"><name pos:start="169:9" pos:end="169:17">skip_bits</name><argument_list pos:start="169:18" pos:end="169:28">(<argument pos:start="169:19" pos:end="169:24"><expr pos:start="169:19" pos:end="169:24"><operator pos:start="169:19" pos:end="169:19">&amp;</operator><name pos:start="169:20" pos:end="169:24"><name pos:start="169:20" pos:end="169:20">s</name><operator pos:start="169:21" pos:end="169:22">-&gt;</operator><name pos:start="169:23" pos:end="169:24">gb</name></name></expr></argument>, <argument pos:start="169:27" pos:end="169:27"><expr pos:start="169:27" pos:end="169:27"><literal type="number" pos:start="169:27" pos:end="169:27">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="169:31" pos:end="169:62">//temporal reference for B-frame</comment>

        <expr_stmt pos:start="171:9" pos:end="171:29"><expr pos:start="171:9" pos:end="171:28"><call pos:start="171:9" pos:end="171:28"><name pos:start="171:9" pos:end="171:17">skip_bits</name><argument_list pos:start="171:18" pos:end="171:28">(<argument pos:start="171:19" pos:end="171:24"><expr pos:start="171:19" pos:end="171:24"><operator pos:start="171:19" pos:end="171:19">&amp;</operator><name pos:start="171:20" pos:end="171:24"><name pos:start="171:20" pos:end="171:20">s</name><operator pos:start="171:21" pos:end="171:22">-&gt;</operator><name pos:start="171:23" pos:end="171:24">gb</name></name></expr></argument>, <argument pos:start="171:27" pos:end="171:27"><expr pos:start="171:27" pos:end="171:27"><literal type="number" pos:start="171:27" pos:end="171:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="171:31" pos:end="171:39">//dbquant</comment>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="177:5" pos:end="177:13">/* PEI */</comment>

    <while pos:start="179:5" pos:end="183:5">while <condition pos:start="179:11" pos:end="179:34">(<expr pos:start="179:12" pos:end="179:33"><call pos:start="179:12" pos:end="179:28"><name pos:start="179:12" pos:end="179:20">get_bits1</name><argument_list pos:start="179:21" pos:end="179:28">(<argument pos:start="179:22" pos:end="179:27"><expr pos:start="179:22" pos:end="179:27"><operator pos:start="179:22" pos:end="179:22">&amp;</operator><name pos:start="179:23" pos:end="179:27"><name pos:start="179:23" pos:end="179:23">s</name><operator pos:start="179:24" pos:end="179:25">-&gt;</operator><name pos:start="179:26" pos:end="179:27">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="179:30" pos:end="179:31">!=</operator> <literal type="number" pos:start="179:33" pos:end="179:33">0</literal></expr>)</condition> <block pos:start="179:36" pos:end="183:5">{<block_content pos:start="181:9" pos:end="181:29">

        <expr_stmt pos:start="181:9" pos:end="181:29"><expr pos:start="181:9" pos:end="181:28"><call pos:start="181:9" pos:end="181:28"><name pos:start="181:9" pos:end="181:17">skip_bits</name><argument_list pos:start="181:18" pos:end="181:28">(<argument pos:start="181:19" pos:end="181:24"><expr pos:start="181:19" pos:end="181:24"><operator pos:start="181:19" pos:end="181:19">&amp;</operator><name pos:start="181:20" pos:end="181:24"><name pos:start="181:20" pos:end="181:20">s</name><operator pos:start="181:21" pos:end="181:22">-&gt;</operator><name pos:start="181:23" pos:end="181:24">gb</name></name></expr></argument>, <argument pos:start="181:27" pos:end="181:27"><expr pos:start="181:27" pos:end="181:27"><literal type="number" pos:start="181:27" pos:end="181:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="185:5" pos:end="185:18"><expr pos:start="185:5" pos:end="185:17"><name pos:start="185:5" pos:end="185:13"><name pos:start="185:5" pos:end="185:5">s</name><operator pos:start="185:6" pos:end="185:7">-&gt;</operator><name pos:start="185:8" pos:end="185:13">f_code</name></name> <operator pos:start="185:15" pos:end="185:15">=</operator> <literal type="number" pos:start="185:17" pos:end="185:17">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="189:5" pos:end="191:49"><expr pos:start="189:5" pos:end="191:48"><name pos:start="189:5" pos:end="189:23"><name pos:start="189:5" pos:end="189:5">s</name><operator pos:start="189:6" pos:end="189:7">-&gt;</operator><name pos:start="189:8" pos:end="189:23">y_dc_scale_table</name></name><operator pos:start="189:24" pos:end="189:24">=</operator>

    <name pos:start="191:5" pos:end="191:23"><name pos:start="191:5" pos:end="191:5">s</name><operator pos:start="191:6" pos:end="191:7">-&gt;</operator><name pos:start="191:8" pos:end="191:23">c_dc_scale_table</name></name><operator pos:start="191:24" pos:end="191:24">=</operator> <name pos:start="191:26" pos:end="191:48">ff_mpeg1_dc_scale_table</name></expr>;</expr_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:30"><expr pos:start="195:5" pos:end="195:29"><call pos:start="195:5" pos:end="195:29"><name pos:start="195:5" pos:end="195:26">ff_h263_show_pict_info</name><argument_list pos:start="195:27" pos:end="195:29">(<argument pos:start="195:28" pos:end="195:28"><expr pos:start="195:28" pos:end="195:28"><name pos:start="195:28" pos:end="195:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="199:5" pos:end="199:13">return <expr pos:start="199:12" pos:end="199:12"><literal type="number" pos:start="199:12" pos:end="199:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
