<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3058.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:39">qemu_spice_destroy_primary_surface</name><parameter_list pos:start="1:40" pos:end="3:72">(<parameter pos:start="1:41" pos:end="1:63"><decl pos:start="1:41" pos:end="1:63"><type pos:start="1:41" pos:end="1:63"><name pos:start="1:41" pos:end="1:58">SimpleSpiceDisplay</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">ssd</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:51"><decl pos:start="3:41" pos:end="3:51"><type pos:start="3:41" pos:end="3:51"><name pos:start="3:41" pos:end="3:48">uint32_t</name></type> <name pos:start="3:50" pos:end="3:51">id</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:71"><decl pos:start="3:54" pos:end="3:71"><type pos:start="3:54" pos:end="3:71"><name pos:start="3:54" pos:end="3:65">qxl_async_io</name></type> <name pos:start="3:67" pos:end="3:71">async</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:5">

    <if_stmt pos:start="7:5" pos:end="23:5"><if pos:start="7:5" pos:end="19:5">if <condition pos:start="7:8" pos:end="7:26">(<expr pos:start="7:9" pos:end="7:25"><name pos:start="7:9" pos:end="7:13">async</name> <operator pos:start="7:15" pos:end="7:16">!=</operator> <name pos:start="7:18" pos:end="7:25">QXL_SYNC</name></expr>)</condition> <block pos:start="7:28" pos:end="19:5">{<block_content pos:start="11:9" pos:end="18:0">

<cpp:if pos:start="9:1" pos:end="9:34">#<cpp:directive pos:start="9:2" pos:end="9:3">if</cpp:directive> <expr pos:start="9:5" pos:end="9:34"><name pos:start="9:5" pos:end="9:29">SPICE_INTERFACE_QXL_MINOR</name> <operator pos:start="9:31" pos:end="9:32">&gt;=</operator> <literal type="number" pos:start="9:34" pos:end="9:34">1</literal></expr></cpp:if>

        <expr_stmt pos:start="11:9" pos:end="14:0"><expr pos:start="11:9" pos:end="11:65"><call pos:start="11:9" pos:end="11:65"><name pos:start="11:9" pos:end="11:47">spice_qxl_destroy_primary_surface_async</name><argument_list pos:start="11:48" pos:end="11:65">(<argument pos:start="11:49" pos:end="11:57"><expr pos:start="11:49" pos:end="11:57"><operator pos:start="11:49" pos:end="11:49">&amp;</operator><name pos:start="11:50" pos:end="11:57"><name pos:start="11:50" pos:end="11:52">ssd</name><operator pos:start="11:53" pos:end="11:54">-&gt;</operator><name pos:start="11:55" pos:end="11:57">qxl</name></name></expr></argument>, <argument pos:start="11:60" pos:end="11:61"><expr pos:start="11:60" pos:end="11:61"><name pos:start="11:60" pos:end="11:61">id</name></expr></argument>, <argument pos:start="11:64" pos:end="11:64"><expr pos:start="11:64" pos:end="11:64"><literal type="number" pos:start="11:64" pos:end="11:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="13:1" pos:end="13:5">#<cpp:directive pos:start="13:2" pos:end="13:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="15:9" pos:end="18:0"><expr pos:start="15:9" pos:end="15:15"><call pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:13">abort</name><argument_list pos:start="15:14" pos:end="15:15">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="23:5">else <block pos:start="19:12" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:62">

        <expr_stmt pos:start="21:9" pos:end="21:62"><expr pos:start="21:9" pos:end="21:61"><call pos:start="21:9" pos:end="21:61"><name pos:start="21:9" pos:end="21:44"><name pos:start="21:9" pos:end="21:11">ssd</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:19">worker</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:44">destroy_primary_surface</name></name><argument_list pos:start="21:45" pos:end="21:61">(<argument pos:start="21:46" pos:end="21:56"><expr pos:start="21:46" pos:end="21:56"><name pos:start="21:46" pos:end="21:56"><name pos:start="21:46" pos:end="21:48">ssd</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:56">worker</name></name></expr></argument>, <argument pos:start="21:59" pos:end="21:60"><expr pos:start="21:59" pos:end="21:60"><name pos:start="21:59" pos:end="21:60">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
