<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25772.c" pos:tabs="8"><function pos:start="1:1" pos:end="134:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">restore_median_il</name><parameter_list pos:start="1:30" pos:end="3:75">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:37">uint8_t</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">src</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:52"><decl pos:start="1:45" pos:end="1:52"><type pos:start="1:45" pos:end="1:52"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:52">step</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:64"><decl pos:start="1:55" pos:end="1:64"><type pos:start="1:55" pos:end="1:64"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:64">stride</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:39"><decl pos:start="3:31" pos:end="3:39"><type pos:start="3:31" pos:end="3:39"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:39">width</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:51"><decl pos:start="3:42" pos:end="3:51"><type pos:start="3:42" pos:end="3:51"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:51">height</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:63"><decl pos:start="3:54" pos:end="3:63"><type pos:start="3:54" pos:end="3:63"><name pos:start="3:54" pos:end="3:56">int</name></type> <name pos:start="3:58" pos:end="3:63">slices</name></decl></parameter>, <parameter pos:start="3:66" pos:end="3:74"><decl pos:start="3:66" pos:end="3:74"><type pos:start="3:66" pos:end="3:74"><name pos:start="3:66" pos:end="3:68">int</name></type> <name pos:start="3:70" pos:end="3:74">rmode</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="134:1">{<block_content pos:start="7:5" pos:end="132:5">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:19">slice</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">A</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">B</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">C</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:17">bsrc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">slice_start</name></decl>, <decl pos:start="13:22" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:33">slice_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:41"><decl pos:start="15:5" pos:end="15:40"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:19">cmask</name>   <init pos:start="15:23" pos:end="15:40">= <expr pos:start="15:25" pos:end="15:40"><operator pos:start="15:25" pos:end="15:25">~</operator><operator pos:start="15:26" pos:end="15:26">(</operator><ternary pos:start="15:27" pos:end="15:39"><condition pos:start="15:27" pos:end="15:33"><expr pos:start="15:27" pos:end="15:31"><name pos:start="15:27" pos:end="15:31">rmode</name></expr> ?</condition><then pos:start="15:35" pos:end="15:35"> <expr pos:start="15:35" pos:end="15:35"><literal type="number" pos:start="15:35" pos:end="15:35">3</literal></expr> </then><else pos:start="15:37" pos:end="15:39">: <expr pos:start="15:39" pos:end="15:39"><literal type="number" pos:start="15:39" pos:end="15:39">1</literal></expr></else></ternary><operator pos:start="15:40" pos:end="15:40">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:21">stride2</name> <init pos:start="17:23" pos:end="17:35">= <expr pos:start="17:25" pos:end="17:35"><name pos:start="17:25" pos:end="17:30">stride</name> <operator pos:start="17:32" pos:end="17:33">&lt;&lt;</operator> <literal type="number" pos:start="17:35" pos:end="17:35">1</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="132:5">for <control pos:start="21:9" pos:end="21:44">(<init pos:start="21:10" pos:end="21:19"><expr pos:start="21:10" pos:end="21:18"><name pos:start="21:10" pos:end="21:14">slice</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</init> <condition pos:start="21:21" pos:end="21:35"><expr pos:start="21:21" pos:end="21:34"><name pos:start="21:21" pos:end="21:25">slice</name> <operator pos:start="21:27" pos:end="21:27">&lt;</operator> <name pos:start="21:29" pos:end="21:34">slices</name></expr>;</condition> <incr pos:start="21:37" pos:end="21:43"><expr pos:start="21:37" pos:end="21:43"><name pos:start="21:37" pos:end="21:41">slice</name><operator pos:start="21:42" pos:end="21:43">++</operator></expr></incr>)</control> <block pos:start="21:46" pos:end="132:5">{<block_content pos:start="23:9" pos:end="130:9">

        <expr_stmt pos:start="23:9" pos:end="23:61"><expr pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:19">slice_start</name>    <operator pos:start="23:24" pos:end="23:24">=</operator> <operator pos:start="23:26" pos:end="23:26">(</operator><operator pos:start="23:27" pos:end="23:27">(</operator><name pos:start="23:28" pos:end="23:32">slice</name> <operator pos:start="23:34" pos:end="23:34">*</operator> <name pos:start="23:36" pos:end="23:41">height</name><operator pos:start="23:42" pos:end="23:42">)</operator> <operator pos:start="23:44" pos:end="23:44">/</operator> <name pos:start="23:46" pos:end="23:51">slices</name><operator pos:start="23:52" pos:end="23:52">)</operator> <operator pos:start="23:54" pos:end="23:54">&amp;</operator> <name pos:start="23:56" pos:end="23:60">cmask</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="27:37"><expr pos:start="25:9" pos:end="27:36"><name pos:start="25:9" pos:end="25:20">slice_height</name>   <operator pos:start="25:24" pos:end="25:24">=</operator> <operator pos:start="25:26" pos:end="25:26">(</operator><operator pos:start="25:27" pos:end="25:27">(</operator><operator pos:start="25:28" pos:end="25:28">(</operator><operator pos:start="25:29" pos:end="25:29">(</operator><name pos:start="25:30" pos:end="25:34">slice</name> <operator pos:start="25:36" pos:end="25:36">+</operator> <literal type="number" pos:start="25:38" pos:end="25:38">1</literal><operator pos:start="25:39" pos:end="25:39">)</operator> <operator pos:start="25:41" pos:end="25:41">*</operator> <name pos:start="25:43" pos:end="25:48">height</name><operator pos:start="25:49" pos:end="25:49">)</operator> <operator pos:start="25:51" pos:end="25:51">/</operator> <name pos:start="25:53" pos:end="25:58">slices</name><operator pos:start="25:59" pos:end="25:59">)</operator> <operator pos:start="25:61" pos:end="25:61">&amp;</operator> <name pos:start="25:63" pos:end="25:67">cmask</name><operator pos:start="25:68" pos:end="25:68">)</operator> <operator pos:start="25:70" pos:end="25:70">-</operator>

                         <name pos:start="27:26" pos:end="27:36">slice_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:20">slice_height</name> <operator pos:start="29:22" pos:end="29:24">&gt;&gt;=</operator> <literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr>;</expr_stmt>





        <expr_stmt pos:start="35:9" pos:end="35:42"><expr pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:12">bsrc</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:18">src</name> <operator pos:start="35:20" pos:end="35:20">+</operator> <name pos:start="35:22" pos:end="35:32">slice_start</name> <operator pos:start="35:34" pos:end="35:34">*</operator> <name pos:start="35:36" pos:end="35:41">stride</name></expr>;</expr_stmt>



        <comment type="line" pos:start="39:9" pos:end="39:49">// first line - left neighbour prediction</comment>

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:12">bsrc</name><index pos:start="41:13" pos:end="41:15">[<expr pos:start="41:14" pos:end="41:14"><literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>]</index></name> <operator pos:start="41:17" pos:end="41:18">+=</operator> <literal type="number" pos:start="41:20" pos:end="41:23">0x80</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:27"><expr pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:9">A</name>        <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:26"><name pos:start="43:20" pos:end="43:23">bsrc</name><index pos:start="43:24" pos:end="43:26">[<expr pos:start="43:25" pos:end="43:25"><literal type="number" pos:start="43:25" pos:end="43:25">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="45:9" pos:end="51:9">for <control pos:start="45:13" pos:end="45:51">(<init pos:start="45:14" pos:end="45:22"><expr pos:start="45:14" pos:end="45:21"><name pos:start="45:14" pos:end="45:14">i</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:21">step</name></expr>;</init> <condition pos:start="45:24" pos:end="45:40"><expr pos:start="45:24" pos:end="45:39"><name pos:start="45:24" pos:end="45:24">i</name> <operator pos:start="45:26" pos:end="45:26">&lt;</operator> <name pos:start="45:28" pos:end="45:32">width</name> <operator pos:start="45:34" pos:end="45:34">*</operator> <name pos:start="45:36" pos:end="45:39">step</name></expr>;</condition> <incr pos:start="45:42" pos:end="45:50"><expr pos:start="45:42" pos:end="45:50"><name pos:start="45:42" pos:end="45:42">i</name> <operator pos:start="45:44" pos:end="45:45">+=</operator> <name pos:start="45:47" pos:end="45:50">step</name></expr></incr>)</control> <block pos:start="45:53" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:31">

            <expr_stmt pos:start="47:13" pos:end="47:25"><expr pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:16">bsrc</name><index pos:start="47:17" pos:end="47:19">[<expr pos:start="47:18" pos:end="47:18"><name pos:start="47:18" pos:end="47:18">i</name></expr>]</index></name> <operator pos:start="47:21" pos:end="47:22">+=</operator> <name pos:start="47:24" pos:end="47:24">A</name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:31"><expr pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:13">A</name>        <operator pos:start="49:22" pos:end="49:22">=</operator> <name pos:start="49:24" pos:end="49:30"><name pos:start="49:24" pos:end="49:27">bsrc</name><index pos:start="49:28" pos:end="49:30">[<expr pos:start="49:29" pos:end="49:29"><name pos:start="49:29" pos:end="49:29">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="53:9" pos:end="59:9">for <control pos:start="53:13" pos:end="53:48">(<init pos:start="53:14" pos:end="53:19"><expr pos:start="53:14" pos:end="53:18"><name pos:start="53:14" pos:end="53:14">i</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <literal type="number" pos:start="53:18" pos:end="53:18">0</literal></expr>;</init> <condition pos:start="53:21" pos:end="53:37"><expr pos:start="53:21" pos:end="53:36"><name pos:start="53:21" pos:end="53:21">i</name> <operator pos:start="53:23" pos:end="53:23">&lt;</operator> <name pos:start="53:25" pos:end="53:29">width</name> <operator pos:start="53:31" pos:end="53:31">*</operator> <name pos:start="53:33" pos:end="53:36">step</name></expr>;</condition> <incr pos:start="53:39" pos:end="53:47"><expr pos:start="53:39" pos:end="53:47"><name pos:start="53:39" pos:end="53:39">i</name> <operator pos:start="53:41" pos:end="53:42">+=</operator> <name pos:start="53:44" pos:end="53:47">step</name></expr></incr>)</control> <block pos:start="53:50" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:49">

            <expr_stmt pos:start="55:13" pos:end="55:34"><expr pos:start="55:13" pos:end="55:33"><name pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:16">bsrc</name><index pos:start="55:17" pos:end="55:28">[<expr pos:start="55:18" pos:end="55:27"><name pos:start="55:18" pos:end="55:23">stride</name> <operator pos:start="55:25" pos:end="55:25">+</operator> <name pos:start="55:27" pos:end="55:27">i</name></expr>]</index></name> <operator pos:start="55:30" pos:end="55:31">+=</operator> <name pos:start="55:33" pos:end="55:33">A</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:49"><expr pos:start="57:13" pos:end="57:48"><name pos:start="57:13" pos:end="57:13">A</name>                 <operator pos:start="57:31" pos:end="57:31">=</operator> <name pos:start="57:33" pos:end="57:48"><name pos:start="57:33" pos:end="57:36">bsrc</name><index pos:start="57:37" pos:end="57:48">[<expr pos:start="57:38" pos:end="57:47"><name pos:start="57:38" pos:end="57:43">stride</name> <operator pos:start="57:45" pos:end="57:45">+</operator> <name pos:start="57:47" pos:end="57:47">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="61:9" pos:end="61:24"><expr pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:12">bsrc</name> <operator pos:start="61:14" pos:end="61:15">+=</operator> <name pos:start="61:17" pos:end="61:23">stride2</name></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="68:34"><if pos:start="63:9" pos:end="68:34">if <condition pos:start="63:12" pos:end="63:30">(<expr pos:start="63:13" pos:end="63:29"><name pos:start="63:13" pos:end="63:24">slice_height</name> <operator pos:start="63:26" pos:end="63:27">==</operator> <literal type="number" pos:start="63:29" pos:end="63:29">1</literal></expr>)</condition><block type="pseudo" pos:start="68:9" pos:end="68:34"><block_content pos:start="68:9" pos:end="68:34">


        <comment type="line" pos:start="66:9" pos:end="66:79">// second line - first element has top prediction, the rest uses median</comment>

        <expr_stmt pos:start="68:9" pos:end="68:34"><expr pos:start="68:9" pos:end="68:33"><name pos:start="68:9" pos:end="68:9">C</name>        <operator pos:start="68:18" pos:end="68:18">=</operator> <name pos:start="68:20" pos:end="68:33"><name pos:start="68:20" pos:end="68:23">bsrc</name><index pos:start="68:24" pos:end="68:33">[<expr pos:start="68:25" pos:end="68:32"><operator pos:start="68:25" pos:end="68:25">-</operator><name pos:start="68:26" pos:end="68:32">stride2</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="70:9" pos:end="70:21"><expr pos:start="70:9" pos:end="70:20"><name pos:start="70:9" pos:end="70:15"><name pos:start="70:9" pos:end="70:12">bsrc</name><index pos:start="70:13" pos:end="70:15">[<expr pos:start="70:14" pos:end="70:14"><literal type="number" pos:start="70:14" pos:end="70:14">0</literal></expr>]</index></name> <operator pos:start="70:17" pos:end="70:18">+=</operator> <name pos:start="70:20" pos:end="70:20">C</name></expr>;</expr_stmt>

        <expr_stmt pos:start="72:9" pos:end="72:27"><expr pos:start="72:9" pos:end="72:26"><name pos:start="72:9" pos:end="72:9">A</name>        <operator pos:start="72:18" pos:end="72:18">=</operator> <name pos:start="72:20" pos:end="72:26"><name pos:start="72:20" pos:end="72:23">bsrc</name><index pos:start="72:24" pos:end="72:26">[<expr pos:start="72:25" pos:end="72:25"><literal type="number" pos:start="72:25" pos:end="72:25">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="74:9" pos:end="84:9">for <control pos:start="74:13" pos:end="74:51">(<init pos:start="74:14" pos:end="74:22"><expr pos:start="74:14" pos:end="74:21"><name pos:start="74:14" pos:end="74:14">i</name> <operator pos:start="74:16" pos:end="74:16">=</operator> <name pos:start="74:18" pos:end="74:21">step</name></expr>;</init> <condition pos:start="74:24" pos:end="74:40"><expr pos:start="74:24" pos:end="74:39"><name pos:start="74:24" pos:end="74:24">i</name> <operator pos:start="74:26" pos:end="74:26">&lt;</operator> <name pos:start="74:28" pos:end="74:32">width</name> <operator pos:start="74:34" pos:end="74:34">*</operator> <name pos:start="74:36" pos:end="74:39">step</name></expr>;</condition> <incr pos:start="74:42" pos:end="74:50"><expr pos:start="74:42" pos:end="74:50"><name pos:start="74:42" pos:end="74:42">i</name> <operator pos:start="74:44" pos:end="74:45">+=</operator> <name pos:start="74:47" pos:end="74:50">step</name></expr></incr>)</control> <block pos:start="74:53" pos:end="84:9">{<block_content pos:start="76:13" pos:end="82:31">

            <expr_stmt pos:start="76:13" pos:end="76:41"><expr pos:start="76:13" pos:end="76:40"><name pos:start="76:13" pos:end="76:13">B</name>        <operator pos:start="76:22" pos:end="76:22">=</operator> <name pos:start="76:24" pos:end="76:40"><name pos:start="76:24" pos:end="76:27">bsrc</name><index pos:start="76:28" pos:end="76:40">[<expr pos:start="76:29" pos:end="76:39"><name pos:start="76:29" pos:end="76:29">i</name> <operator pos:start="76:31" pos:end="76:31">-</operator> <name pos:start="76:33" pos:end="76:39">stride2</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="78:13" pos:end="78:60"><expr pos:start="78:13" pos:end="78:59"><name pos:start="78:13" pos:end="78:19"><name pos:start="78:13" pos:end="78:16">bsrc</name><index pos:start="78:17" pos:end="78:19">[<expr pos:start="78:18" pos:end="78:18"><name pos:start="78:18" pos:end="78:18">i</name></expr>]</index></name> <operator pos:start="78:21" pos:end="78:22">+=</operator> <call pos:start="78:24" pos:end="78:59"><name pos:start="78:24" pos:end="78:31">mid_pred</name><argument_list pos:start="78:32" pos:end="78:59">(<argument pos:start="78:33" pos:end="78:33"><expr pos:start="78:33" pos:end="78:33"><name pos:start="78:33" pos:end="78:33">A</name></expr></argument>, <argument pos:start="78:36" pos:end="78:36"><expr pos:start="78:36" pos:end="78:36"><name pos:start="78:36" pos:end="78:36">B</name></expr></argument>, <argument pos:start="78:39" pos:end="78:58"><expr pos:start="78:39" pos:end="78:58"><operator pos:start="78:39" pos:end="78:39">(</operator><name pos:start="78:40" pos:end="78:46">uint8_t</name><operator pos:start="78:47" pos:end="78:47">)</operator><operator pos:start="78:48" pos:end="78:48">(</operator><name pos:start="78:49" pos:end="78:49">A</name> <operator pos:start="78:51" pos:end="78:51">+</operator> <name pos:start="78:53" pos:end="78:53">B</name> <operator pos:start="78:55" pos:end="78:55">-</operator> <name pos:start="78:57" pos:end="78:57">C</name><operator pos:start="78:58" pos:end="78:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="80:13" pos:end="80:25"><expr pos:start="80:13" pos:end="80:24"><name pos:start="80:13" pos:end="80:13">C</name>        <operator pos:start="80:22" pos:end="80:22">=</operator> <name pos:start="80:24" pos:end="80:24">B</name></expr>;</expr_stmt>

            <expr_stmt pos:start="82:13" pos:end="82:31"><expr pos:start="82:13" pos:end="82:30"><name pos:start="82:13" pos:end="82:13">A</name>        <operator pos:start="82:22" pos:end="82:22">=</operator> <name pos:start="82:24" pos:end="82:30"><name pos:start="82:24" pos:end="82:27">bsrc</name><index pos:start="82:28" pos:end="82:30">[<expr pos:start="82:29" pos:end="82:29"><name pos:start="82:29" pos:end="82:29">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="86:9" pos:end="96:9">for <control pos:start="86:13" pos:end="86:48">(<init pos:start="86:14" pos:end="86:19"><expr pos:start="86:14" pos:end="86:18"><name pos:start="86:14" pos:end="86:14">i</name> <operator pos:start="86:16" pos:end="86:16">=</operator> <literal type="number" pos:start="86:18" pos:end="86:18">0</literal></expr>;</init> <condition pos:start="86:21" pos:end="86:37"><expr pos:start="86:21" pos:end="86:36"><name pos:start="86:21" pos:end="86:21">i</name> <operator pos:start="86:23" pos:end="86:23">&lt;</operator> <name pos:start="86:25" pos:end="86:29">width</name> <operator pos:start="86:31" pos:end="86:31">*</operator> <name pos:start="86:33" pos:end="86:36">step</name></expr>;</condition> <incr pos:start="86:39" pos:end="86:47"><expr pos:start="86:39" pos:end="86:47"><name pos:start="86:39" pos:end="86:39">i</name> <operator pos:start="86:41" pos:end="86:42">+=</operator> <name pos:start="86:44" pos:end="86:47">step</name></expr></incr>)</control> <block pos:start="86:50" pos:end="96:9">{<block_content pos:start="88:13" pos:end="94:49">

            <expr_stmt pos:start="88:13" pos:end="88:49"><expr pos:start="88:13" pos:end="88:48"><name pos:start="88:13" pos:end="88:13">B</name>                 <operator pos:start="88:31" pos:end="88:31">=</operator> <name pos:start="88:33" pos:end="88:48"><name pos:start="88:33" pos:end="88:36">bsrc</name><index pos:start="88:37" pos:end="88:48">[<expr pos:start="88:38" pos:end="88:47"><name pos:start="88:38" pos:end="88:38">i</name> <operator pos:start="88:40" pos:end="88:40">-</operator> <name pos:start="88:42" pos:end="88:47">stride</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="90:13" pos:end="90:69"><expr pos:start="90:13" pos:end="90:68"><name pos:start="90:13" pos:end="90:28"><name pos:start="90:13" pos:end="90:16">bsrc</name><index pos:start="90:17" pos:end="90:28">[<expr pos:start="90:18" pos:end="90:27"><name pos:start="90:18" pos:end="90:23">stride</name> <operator pos:start="90:25" pos:end="90:25">+</operator> <name pos:start="90:27" pos:end="90:27">i</name></expr>]</index></name> <operator pos:start="90:30" pos:end="90:31">+=</operator> <call pos:start="90:33" pos:end="90:68"><name pos:start="90:33" pos:end="90:40">mid_pred</name><argument_list pos:start="90:41" pos:end="90:68">(<argument pos:start="90:42" pos:end="90:42"><expr pos:start="90:42" pos:end="90:42"><name pos:start="90:42" pos:end="90:42">A</name></expr></argument>, <argument pos:start="90:45" pos:end="90:45"><expr pos:start="90:45" pos:end="90:45"><name pos:start="90:45" pos:end="90:45">B</name></expr></argument>, <argument pos:start="90:48" pos:end="90:67"><expr pos:start="90:48" pos:end="90:67"><operator pos:start="90:48" pos:end="90:48">(</operator><name pos:start="90:49" pos:end="90:55">uint8_t</name><operator pos:start="90:56" pos:end="90:56">)</operator><operator pos:start="90:57" pos:end="90:57">(</operator><name pos:start="90:58" pos:end="90:58">A</name> <operator pos:start="90:60" pos:end="90:60">+</operator> <name pos:start="90:62" pos:end="90:62">B</name> <operator pos:start="90:64" pos:end="90:64">-</operator> <name pos:start="90:66" pos:end="90:66">C</name><operator pos:start="90:67" pos:end="90:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="92:13" pos:end="92:34"><expr pos:start="92:13" pos:end="92:33"><name pos:start="92:13" pos:end="92:13">C</name>                 <operator pos:start="92:31" pos:end="92:31">=</operator> <name pos:start="92:33" pos:end="92:33">B</name></expr>;</expr_stmt>

            <expr_stmt pos:start="94:13" pos:end="94:49"><expr pos:start="94:13" pos:end="94:48"><name pos:start="94:13" pos:end="94:13">A</name>                 <operator pos:start="94:31" pos:end="94:31">=</operator> <name pos:start="94:33" pos:end="94:48"><name pos:start="94:33" pos:end="94:36">bsrc</name><index pos:start="94:37" pos:end="94:48">[<expr pos:start="94:38" pos:end="94:47"><name pos:start="94:38" pos:end="94:43">stride</name> <operator pos:start="94:45" pos:end="94:45">+</operator> <name pos:start="94:47" pos:end="94:47">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="98:9" pos:end="98:24"><expr pos:start="98:9" pos:end="98:23"><name pos:start="98:9" pos:end="98:12">bsrc</name> <operator pos:start="98:14" pos:end="98:15">+=</operator> <name pos:start="98:17" pos:end="98:23">stride2</name></expr>;</expr_stmt>

        <comment type="line" pos:start="100:9" pos:end="100:61">// the rest of lines use continuous median prediction</comment>

        <for pos:start="102:9" pos:end="130:9">for <control pos:start="102:13" pos:end="102:42">(<init pos:start="102:14" pos:end="102:19"><expr pos:start="102:14" pos:end="102:18"><name pos:start="102:14" pos:end="102:14">j</name> <operator pos:start="102:16" pos:end="102:16">=</operator> <literal type="number" pos:start="102:18" pos:end="102:18">2</literal></expr>;</init> <condition pos:start="102:21" pos:end="102:37"><expr pos:start="102:21" pos:end="102:36"><name pos:start="102:21" pos:end="102:21">j</name> <operator pos:start="102:23" pos:end="102:23">&lt;</operator> <name pos:start="102:25" pos:end="102:36">slice_height</name></expr>;</condition> <incr pos:start="102:39" pos:end="102:41"><expr pos:start="102:39" pos:end="102:41"><name pos:start="102:39" pos:end="102:39">j</name><operator pos:start="102:40" pos:end="102:41">++</operator></expr></incr>)</control> <block pos:start="102:44" pos:end="130:9">{<block_content pos:start="104:13" pos:end="128:28">

            <for pos:start="104:13" pos:end="114:13">for <control pos:start="104:17" pos:end="104:52">(<init pos:start="104:18" pos:end="104:23"><expr pos:start="104:18" pos:end="104:22"><name pos:start="104:18" pos:end="104:18">i</name> <operator pos:start="104:20" pos:end="104:20">=</operator> <literal type="number" pos:start="104:22" pos:end="104:22">0</literal></expr>;</init> <condition pos:start="104:25" pos:end="104:41"><expr pos:start="104:25" pos:end="104:40"><name pos:start="104:25" pos:end="104:25">i</name> <operator pos:start="104:27" pos:end="104:27">&lt;</operator> <name pos:start="104:29" pos:end="104:33">width</name> <operator pos:start="104:35" pos:end="104:35">*</operator> <name pos:start="104:37" pos:end="104:40">step</name></expr>;</condition> <incr pos:start="104:43" pos:end="104:51"><expr pos:start="104:43" pos:end="104:51"><name pos:start="104:43" pos:end="104:43">i</name> <operator pos:start="104:45" pos:end="104:46">+=</operator> <name pos:start="104:48" pos:end="104:51">step</name></expr></incr>)</control> <block pos:start="104:54" pos:end="114:13">{<block_content pos:start="106:17" pos:end="112:35">

                <expr_stmt pos:start="106:17" pos:end="106:45"><expr pos:start="106:17" pos:end="106:44"><name pos:start="106:17" pos:end="106:17">B</name>        <operator pos:start="106:26" pos:end="106:26">=</operator> <name pos:start="106:28" pos:end="106:44"><name pos:start="106:28" pos:end="106:31">bsrc</name><index pos:start="106:32" pos:end="106:44">[<expr pos:start="106:33" pos:end="106:43"><name pos:start="106:33" pos:end="106:33">i</name> <operator pos:start="106:35" pos:end="106:35">-</operator> <name pos:start="106:37" pos:end="106:43">stride2</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="108:17" pos:end="108:64"><expr pos:start="108:17" pos:end="108:63"><name pos:start="108:17" pos:end="108:23"><name pos:start="108:17" pos:end="108:20">bsrc</name><index pos:start="108:21" pos:end="108:23">[<expr pos:start="108:22" pos:end="108:22"><name pos:start="108:22" pos:end="108:22">i</name></expr>]</index></name> <operator pos:start="108:25" pos:end="108:26">+=</operator> <call pos:start="108:28" pos:end="108:63"><name pos:start="108:28" pos:end="108:35">mid_pred</name><argument_list pos:start="108:36" pos:end="108:63">(<argument pos:start="108:37" pos:end="108:37"><expr pos:start="108:37" pos:end="108:37"><name pos:start="108:37" pos:end="108:37">A</name></expr></argument>, <argument pos:start="108:40" pos:end="108:40"><expr pos:start="108:40" pos:end="108:40"><name pos:start="108:40" pos:end="108:40">B</name></expr></argument>, <argument pos:start="108:43" pos:end="108:62"><expr pos:start="108:43" pos:end="108:62"><operator pos:start="108:43" pos:end="108:43">(</operator><name pos:start="108:44" pos:end="108:50">uint8_t</name><operator pos:start="108:51" pos:end="108:51">)</operator><operator pos:start="108:52" pos:end="108:52">(</operator><name pos:start="108:53" pos:end="108:53">A</name> <operator pos:start="108:55" pos:end="108:55">+</operator> <name pos:start="108:57" pos:end="108:57">B</name> <operator pos:start="108:59" pos:end="108:59">-</operator> <name pos:start="108:61" pos:end="108:61">C</name><operator pos:start="108:62" pos:end="108:62">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="110:17" pos:end="110:29"><expr pos:start="110:17" pos:end="110:28"><name pos:start="110:17" pos:end="110:17">C</name>        <operator pos:start="110:26" pos:end="110:26">=</operator> <name pos:start="110:28" pos:end="110:28">B</name></expr>;</expr_stmt>

                <expr_stmt pos:start="112:17" pos:end="112:35"><expr pos:start="112:17" pos:end="112:34"><name pos:start="112:17" pos:end="112:17">A</name>        <operator pos:start="112:26" pos:end="112:26">=</operator> <name pos:start="112:28" pos:end="112:34"><name pos:start="112:28" pos:end="112:31">bsrc</name><index pos:start="112:32" pos:end="112:34">[<expr pos:start="112:33" pos:end="112:33"><name pos:start="112:33" pos:end="112:33">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="116:13" pos:end="126:13">for <control pos:start="116:17" pos:end="116:52">(<init pos:start="116:18" pos:end="116:23"><expr pos:start="116:18" pos:end="116:22"><name pos:start="116:18" pos:end="116:18">i</name> <operator pos:start="116:20" pos:end="116:20">=</operator> <literal type="number" pos:start="116:22" pos:end="116:22">0</literal></expr>;</init> <condition pos:start="116:25" pos:end="116:41"><expr pos:start="116:25" pos:end="116:40"><name pos:start="116:25" pos:end="116:25">i</name> <operator pos:start="116:27" pos:end="116:27">&lt;</operator> <name pos:start="116:29" pos:end="116:33">width</name> <operator pos:start="116:35" pos:end="116:35">*</operator> <name pos:start="116:37" pos:end="116:40">step</name></expr>;</condition> <incr pos:start="116:43" pos:end="116:51"><expr pos:start="116:43" pos:end="116:51"><name pos:start="116:43" pos:end="116:43">i</name> <operator pos:start="116:45" pos:end="116:46">+=</operator> <name pos:start="116:48" pos:end="116:51">step</name></expr></incr>)</control> <block pos:start="116:54" pos:end="126:13">{<block_content pos:start="118:17" pos:end="124:53">

                <expr_stmt pos:start="118:17" pos:end="118:53"><expr pos:start="118:17" pos:end="118:52"><name pos:start="118:17" pos:end="118:17">B</name>                 <operator pos:start="118:35" pos:end="118:35">=</operator> <name pos:start="118:37" pos:end="118:52"><name pos:start="118:37" pos:end="118:40">bsrc</name><index pos:start="118:41" pos:end="118:52">[<expr pos:start="118:42" pos:end="118:51"><name pos:start="118:42" pos:end="118:42">i</name> <operator pos:start="118:44" pos:end="118:44">-</operator> <name pos:start="118:46" pos:end="118:51">stride</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="120:17" pos:end="120:73"><expr pos:start="120:17" pos:end="120:72"><name pos:start="120:17" pos:end="120:32"><name pos:start="120:17" pos:end="120:20">bsrc</name><index pos:start="120:21" pos:end="120:32">[<expr pos:start="120:22" pos:end="120:31"><name pos:start="120:22" pos:end="120:22">i</name> <operator pos:start="120:24" pos:end="120:24">+</operator> <name pos:start="120:26" pos:end="120:31">stride</name></expr>]</index></name> <operator pos:start="120:34" pos:end="120:35">+=</operator> <call pos:start="120:37" pos:end="120:72"><name pos:start="120:37" pos:end="120:44">mid_pred</name><argument_list pos:start="120:45" pos:end="120:72">(<argument pos:start="120:46" pos:end="120:46"><expr pos:start="120:46" pos:end="120:46"><name pos:start="120:46" pos:end="120:46">A</name></expr></argument>, <argument pos:start="120:49" pos:end="120:49"><expr pos:start="120:49" pos:end="120:49"><name pos:start="120:49" pos:end="120:49">B</name></expr></argument>, <argument pos:start="120:52" pos:end="120:71"><expr pos:start="120:52" pos:end="120:71"><operator pos:start="120:52" pos:end="120:52">(</operator><name pos:start="120:53" pos:end="120:59">uint8_t</name><operator pos:start="120:60" pos:end="120:60">)</operator><operator pos:start="120:61" pos:end="120:61">(</operator><name pos:start="120:62" pos:end="120:62">A</name> <operator pos:start="120:64" pos:end="120:64">+</operator> <name pos:start="120:66" pos:end="120:66">B</name> <operator pos:start="120:68" pos:end="120:68">-</operator> <name pos:start="120:70" pos:end="120:70">C</name><operator pos:start="120:71" pos:end="120:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="122:17" pos:end="122:38"><expr pos:start="122:17" pos:end="122:37"><name pos:start="122:17" pos:end="122:17">C</name>                 <operator pos:start="122:35" pos:end="122:35">=</operator> <name pos:start="122:37" pos:end="122:37">B</name></expr>;</expr_stmt>

                <expr_stmt pos:start="124:17" pos:end="124:53"><expr pos:start="124:17" pos:end="124:52"><name pos:start="124:17" pos:end="124:17">A</name>                 <operator pos:start="124:35" pos:end="124:35">=</operator> <name pos:start="124:37" pos:end="124:52"><name pos:start="124:37" pos:end="124:40">bsrc</name><index pos:start="124:41" pos:end="124:52">[<expr pos:start="124:42" pos:end="124:51"><name pos:start="124:42" pos:end="124:42">i</name> <operator pos:start="124:44" pos:end="124:44">+</operator> <name pos:start="124:46" pos:end="124:51">stride</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="128:13" pos:end="128:28"><expr pos:start="128:13" pos:end="128:27"><name pos:start="128:13" pos:end="128:16">bsrc</name> <operator pos:start="128:18" pos:end="128:19">+=</operator> <name pos:start="128:21" pos:end="128:27">stride2</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function></unit>
