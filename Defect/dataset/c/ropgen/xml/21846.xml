<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21846.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">vfio_probe_rtl8168_bar2_quirk</name><parameter_list pos:start="1:42" pos:end="1:70">(<parameter pos:start="1:43" pos:end="1:61"><decl pos:start="1:43" pos:end="1:61"><type pos:start="1:43" pos:end="1:61"><name pos:start="1:43" pos:end="1:55">VFIOPCIDevice</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">vdev</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:69"><decl pos:start="1:64" pos:end="1:69"><type pos:start="1:64" pos:end="1:69"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:69">nr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:56">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VFIOQuirk</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">quirk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">VFIOrtl8168Quirk</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">rtl</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:69">(<expr pos:start="11:9" pos:end="11:68"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:57"><name pos:start="11:10" pos:end="11:20">vfio_pci_is</name><argument_list pos:start="11:21" pos:end="11:57">(<argument pos:start="11:22" pos:end="11:25"><expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">vdev</name></expr></argument>, <argument pos:start="11:28" pos:end="11:48"><expr pos:start="11:28" pos:end="11:48"><name pos:start="11:28" pos:end="11:48">PCI_VENDOR_ID_REALTEK</name></expr></argument>, <argument pos:start="11:51" pos:end="11:56"><expr pos:start="11:51" pos:end="11:56"><literal type="number" pos:start="11:51" pos:end="11:56">0x8168</literal></expr></argument>)</argument_list></call> <operator pos:start="11:59" pos:end="11:60">||</operator> <name pos:start="11:62" pos:end="11:63">nr</name> <operator pos:start="11:65" pos:end="11:66">!=</operator> <literal type="number" pos:start="11:68" pos:end="11:68">2</literal></expr>)</condition> <block pos:start="11:71" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:9">quirk</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:37"><name pos:start="19:13" pos:end="19:21">g_malloc0</name><argument_list pos:start="19:22" pos:end="19:37">(<argument pos:start="19:23" pos:end="19:36"><expr pos:start="19:23" pos:end="19:36"><sizeof pos:start="19:23" pos:end="19:36">sizeof<argument_list pos:start="19:29" pos:end="19:36">(<argument pos:start="19:30" pos:end="19:35"><expr pos:start="19:30" pos:end="19:35"><operator pos:start="19:30" pos:end="19:30">*</operator><name pos:start="19:31" pos:end="19:35">quirk</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:9">quirk</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:14">mem</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:52"><name pos:start="21:18" pos:end="21:26">g_malloc0</name><argument_list pos:start="21:27" pos:end="21:52">(<argument pos:start="21:28" pos:end="21:51"><expr pos:start="21:28" pos:end="21:51"><sizeof pos:start="21:28" pos:end="21:47">sizeof<argument_list pos:start="21:34" pos:end="21:47">(<argument pos:start="21:35" pos:end="21:46"><expr pos:start="21:35" pos:end="21:46"><name pos:start="21:35" pos:end="21:46">MemoryRegion</name></expr></argument>)</argument_list></sizeof> <operator pos:start="21:49" pos:end="21:49">*</operator> <literal type="number" pos:start="21:51" pos:end="21:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:9">quirk</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:17">nr_mem</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:48"><expr pos:start="25:5" pos:end="25:47"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:9">quirk</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:15">data</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <name pos:start="25:19" pos:end="25:21">rtl</name> <operator pos:start="25:23" pos:end="25:23">=</operator> <call pos:start="25:25" pos:end="25:47"><name pos:start="25:25" pos:end="25:33">g_malloc0</name><argument_list pos:start="25:34" pos:end="25:47">(<argument pos:start="25:35" pos:end="25:46"><expr pos:start="25:35" pos:end="25:46"><sizeof pos:start="25:35" pos:end="25:46">sizeof<argument_list pos:start="25:41" pos:end="25:46">(<argument pos:start="25:42" pos:end="25:45"><expr pos:start="25:42" pos:end="25:45"><operator pos:start="25:42" pos:end="25:42">*</operator><name pos:start="25:43" pos:end="25:45">rtl</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:7">rtl</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:13">vdev</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:20">vdev</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="35:66"><expr pos:start="31:5" pos:end="35:65"><call pos:start="31:5" pos:end="35:65"><name pos:start="31:5" pos:end="31:25">memory_region_init_io</name><argument_list pos:start="31:26" pos:end="35:65">(<argument pos:start="31:27" pos:end="31:40"><expr pos:start="31:27" pos:end="31:40"><operator pos:start="31:27" pos:end="31:27">&amp;</operator><name pos:start="31:28" pos:end="31:40"><name pos:start="31:28" pos:end="31:32">quirk</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:37">mem</name><index pos:start="31:38" pos:end="31:40">[<expr pos:start="31:39" pos:end="31:39"><literal type="number" pos:start="31:39" pos:end="31:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:43" pos:end="31:54"><expr pos:start="31:43" pos:end="31:54"><call pos:start="31:43" pos:end="31:54"><name pos:start="31:43" pos:end="31:48">OBJECT</name><argument_list pos:start="31:49" pos:end="31:54">(<argument pos:start="31:50" pos:end="31:53"><expr pos:start="31:50" pos:end="31:53"><name pos:start="31:50" pos:end="31:53">vdev</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="33:27" pos:end="33:49"><expr pos:start="33:27" pos:end="33:49"><operator pos:start="33:27" pos:end="33:27">&amp;</operator><name pos:start="33:28" pos:end="33:49">vfio_rtl_address_quirk</name></expr></argument>, <argument pos:start="33:52" pos:end="33:54"><expr pos:start="33:52" pos:end="33:54"><name pos:start="33:52" pos:end="33:54">rtl</name></expr></argument>,

                          <argument pos:start="35:27" pos:end="35:61"><expr pos:start="35:27" pos:end="35:61"><literal type="string" pos:start="35:27" pos:end="35:61">"vfio-rtl8168-window-address-quirk"</literal></expr></argument>, <argument pos:start="35:64" pos:end="35:64"><expr pos:start="35:64" pos:end="35:64"><literal type="number" pos:start="35:64" pos:end="35:64">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="39:65"><expr pos:start="37:5" pos:end="39:64"><call pos:start="37:5" pos:end="39:64"><name pos:start="37:5" pos:end="37:39">memory_region_add_subregion_overlap</name><argument_list pos:start="37:40" pos:end="39:64">(<argument pos:start="37:41" pos:end="37:66"><expr pos:start="37:41" pos:end="37:66"><operator pos:start="37:41" pos:end="37:41">&amp;</operator><name pos:start="37:42" pos:end="37:55"><name pos:start="37:42" pos:end="37:45">vdev</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:51">bars</name><index pos:start="37:52" pos:end="37:55">[<expr pos:start="37:53" pos:end="37:54"><name pos:start="37:53" pos:end="37:54">nr</name></expr>]</index></name><operator pos:start="37:56" pos:end="37:56">.</operator><name pos:start="37:57" pos:end="37:66"><name pos:start="37:57" pos:end="37:62">region</name><operator pos:start="37:63" pos:end="37:63">.</operator><name pos:start="37:64" pos:end="37:66">mem</name></name></expr></argument>,

                                        <argument pos:start="39:41" pos:end="39:44"><expr pos:start="39:41" pos:end="39:44"><literal type="number" pos:start="39:41" pos:end="39:44">0x74</literal></expr></argument>, <argument pos:start="39:47" pos:end="39:60"><expr pos:start="39:47" pos:end="39:60"><operator pos:start="39:47" pos:end="39:47">&amp;</operator><name pos:start="39:48" pos:end="39:60"><name pos:start="39:48" pos:end="39:52">quirk</name><operator pos:start="39:53" pos:end="39:54">-&gt;</operator><name pos:start="39:55" pos:end="39:57">mem</name><index pos:start="39:58" pos:end="39:60">[<expr pos:start="39:59" pos:end="39:59"><literal type="number" pos:start="39:59" pos:end="39:59">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:63" pos:end="39:63"><expr pos:start="39:63" pos:end="39:63"><literal type="number" pos:start="39:63" pos:end="39:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="47:63"><expr pos:start="43:5" pos:end="47:62"><call pos:start="43:5" pos:end="47:62"><name pos:start="43:5" pos:end="43:25">memory_region_init_io</name><argument_list pos:start="43:26" pos:end="47:62">(<argument pos:start="43:27" pos:end="43:40"><expr pos:start="43:27" pos:end="43:40"><operator pos:start="43:27" pos:end="43:27">&amp;</operator><name pos:start="43:28" pos:end="43:40"><name pos:start="43:28" pos:end="43:32">quirk</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:37">mem</name><index pos:start="43:38" pos:end="43:40">[<expr pos:start="43:39" pos:end="43:39"><literal type="number" pos:start="43:39" pos:end="43:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="43:43" pos:end="43:54"><expr pos:start="43:43" pos:end="43:54"><call pos:start="43:43" pos:end="43:54"><name pos:start="43:43" pos:end="43:48">OBJECT</name><argument_list pos:start="43:49" pos:end="43:54">(<argument pos:start="43:50" pos:end="43:53"><expr pos:start="43:50" pos:end="43:53"><name pos:start="43:50" pos:end="43:53">vdev</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="45:27" pos:end="45:46"><expr pos:start="45:27" pos:end="45:46"><operator pos:start="45:27" pos:end="45:27">&amp;</operator><name pos:start="45:28" pos:end="45:46">vfio_rtl_data_quirk</name></expr></argument>, <argument pos:start="45:49" pos:end="45:51"><expr pos:start="45:49" pos:end="45:51"><name pos:start="45:49" pos:end="45:51">rtl</name></expr></argument>,

                          <argument pos:start="47:27" pos:end="47:58"><expr pos:start="47:27" pos:end="47:58"><literal type="string" pos:start="47:27" pos:end="47:58">"vfio-rtl8168-window-data-quirk"</literal></expr></argument>, <argument pos:start="47:61" pos:end="47:61"><expr pos:start="47:61" pos:end="47:61"><literal type="number" pos:start="47:61" pos:end="47:61">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:65"><expr pos:start="49:5" pos:end="51:64"><call pos:start="49:5" pos:end="51:64"><name pos:start="49:5" pos:end="49:39">memory_region_add_subregion_overlap</name><argument_list pos:start="49:40" pos:end="51:64">(<argument pos:start="49:41" pos:end="49:66"><expr pos:start="49:41" pos:end="49:66"><operator pos:start="49:41" pos:end="49:41">&amp;</operator><name pos:start="49:42" pos:end="49:55"><name pos:start="49:42" pos:end="49:45">vdev</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:51">bars</name><index pos:start="49:52" pos:end="49:55">[<expr pos:start="49:53" pos:end="49:54"><name pos:start="49:53" pos:end="49:54">nr</name></expr>]</index></name><operator pos:start="49:56" pos:end="49:56">.</operator><name pos:start="49:57" pos:end="49:66"><name pos:start="49:57" pos:end="49:62">region</name><operator pos:start="49:63" pos:end="49:63">.</operator><name pos:start="49:64" pos:end="49:66">mem</name></name></expr></argument>,

                                        <argument pos:start="51:41" pos:end="51:44"><expr pos:start="51:41" pos:end="51:44"><literal type="number" pos:start="51:41" pos:end="51:44">0x70</literal></expr></argument>, <argument pos:start="51:47" pos:end="51:60"><expr pos:start="51:47" pos:end="51:60"><operator pos:start="51:47" pos:end="51:47">&amp;</operator><name pos:start="51:48" pos:end="51:60"><name pos:start="51:48" pos:end="51:52">quirk</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:57">mem</name><index pos:start="51:58" pos:end="51:60">[<expr pos:start="51:59" pos:end="51:59"><literal type="number" pos:start="51:59" pos:end="51:59">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:63" pos:end="51:63"><expr pos:start="51:63" pos:end="51:63"><literal type="number" pos:start="51:63" pos:end="51:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:59"><expr pos:start="55:5" pos:end="55:58"><call pos:start="55:5" pos:end="55:58"><name pos:start="55:5" pos:end="55:21">QLIST_INSERT_HEAD</name><argument_list pos:start="55:22" pos:end="55:58">(<argument pos:start="55:23" pos:end="55:44"><expr pos:start="55:23" pos:end="55:44"><operator pos:start="55:23" pos:end="55:23">&amp;</operator><name pos:start="55:24" pos:end="55:37"><name pos:start="55:24" pos:end="55:27">vdev</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:33">bars</name><index pos:start="55:34" pos:end="55:37">[<expr pos:start="55:35" pos:end="55:36"><name pos:start="55:35" pos:end="55:36">nr</name></expr>]</index></name><operator pos:start="55:38" pos:end="55:38">.</operator><name pos:start="55:39" pos:end="55:44">quirks</name></expr></argument>, <argument pos:start="55:47" pos:end="55:51"><expr pos:start="55:47" pos:end="55:51"><name pos:start="55:47" pos:end="55:51">quirk</name></expr></argument>, <argument pos:start="55:54" pos:end="55:57"><expr pos:start="55:54" pos:end="55:57"><name pos:start="55:54" pos:end="55:57">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:56"><expr pos:start="59:5" pos:end="59:55"><call pos:start="59:5" pos:end="59:55"><name pos:start="59:5" pos:end="59:34">trace_vfio_quirk_rtl8168_probe</name><argument_list pos:start="59:35" pos:end="59:55">(<argument pos:start="59:36" pos:end="59:54"><expr pos:start="59:36" pos:end="59:54"><name pos:start="59:36" pos:end="59:54"><name pos:start="59:36" pos:end="59:39">vdev</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:49">vbasedev</name><operator pos:start="59:50" pos:end="59:50">.</operator><name pos:start="59:51" pos:end="59:54">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
