<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23195.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">timebase_post_load</name><parameter_list pos:start="1:30" pos:end="1:59">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:58"><decl pos:start="1:45" pos:end="1:58"><type pos:start="1:45" pos:end="1:58"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:58">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">PPCTimebase</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:26">tb_remote</name> <init pos:start="5:28" pos:end="5:35">= <expr pos:start="5:30" pos:end="5:35"><name pos:start="5:30" pos:end="5:35">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:54"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">PowerPCCPU</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:29">first_ppc_cpu</name> <init pos:start="9:31" pos:end="9:54">= <expr pos:start="9:33" pos:end="9:54"><call pos:start="9:33" pos:end="9:54"><name pos:start="9:33" pos:end="9:43">POWERPC_CPU</name><argument_list pos:start="9:44" pos:end="9:54">(<argument pos:start="9:45" pos:end="9:53"><expr pos:start="9:45" pos:end="9:53"><name pos:start="9:45" pos:end="9:53">first_cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:22">tb_off_adj</name></decl>, <decl pos:start="11:25" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:25" pos:end="11:30">tb_off</name></decl>, <decl pos:start="11:33" pos:end="11:39"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:33" pos:end="11:39">ns_diff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:76"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:33">migration_duration_ns</name></decl>, <decl pos:start="13:36" pos:end="13:56"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:36" pos:end="13:56">migration_duration_tb</name></decl>, <decl pos:start="13:59" pos:end="13:66"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:59" pos:end="13:66">guest_tb</name></decl>, <decl pos:start="13:69" pos:end="13:75"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:69" pos:end="13:75">host_ns</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">long</name></type> <name pos:start="15:19" pos:end="15:22">freq</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:35">(<expr pos:start="19:9" pos:end="19:34"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:34"><name pos:start="19:10" pos:end="19:22">first_ppc_cpu</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:27">env</name><operator pos:start="19:28" pos:end="19:28">.</operator><name pos:start="19:29" pos:end="19:34">tb_env</name></name></expr>)</condition> <block pos:start="19:37" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:43"><expr pos:start="21:9" pos:end="21:42"><call pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:20">error_report</name><argument_list pos:start="21:21" pos:end="21:42">(<argument pos:start="21:22" pos:end="21:41"><expr pos:start="21:22" pos:end="21:41"><literal type="string" pos:start="21:22" pos:end="21:41">"No timebase object"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:8">freq</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <name pos:start="29:12" pos:end="29:45"><name pos:start="29:12" pos:end="29:24">first_ppc_cpu</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:29">env</name><operator pos:start="29:30" pos:end="29:30">.</operator><name pos:start="29:31" pos:end="29:36">tb_env</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:45">tb_freq</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="31:5" pos:end="41:7">/*

     * Calculate timebase on the destination side of migration.

     * The destination timebase must be not less than the source timebase.

     * We try to adjust timebase by downtime if host clocks are not

     * too much out of sync (1 second for now).

     */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:49"><expr pos:start="43:5" pos:end="43:48"><name pos:start="43:5" pos:end="43:11">host_ns</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:48"><name pos:start="43:15" pos:end="43:31">qemu_clock_get_ns</name><argument_list pos:start="43:32" pos:end="43:48">(<argument pos:start="43:33" pos:end="43:47"><expr pos:start="43:33" pos:end="43:47"><name pos:start="43:33" pos:end="43:47">QEMU_CLOCK_HOST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:62"><expr pos:start="45:5" pos:end="45:61"><name pos:start="45:5" pos:end="45:11">ns_diff</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:61"><name pos:start="45:15" pos:end="45:17">MAX</name><argument_list pos:start="45:18" pos:end="45:61">(<argument pos:start="45:19" pos:end="45:19"><expr pos:start="45:19" pos:end="45:19"><literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr></argument>, <argument pos:start="45:22" pos:end="45:60"><expr pos:start="45:22" pos:end="45:60"><name pos:start="45:22" pos:end="45:28">host_ns</name> <operator pos:start="45:30" pos:end="45:30">-</operator> <name pos:start="45:32" pos:end="45:60"><name pos:start="45:32" pos:end="45:40">tb_remote</name><operator pos:start="45:41" pos:end="45:42">-&gt;</operator><name pos:start="45:43" pos:end="45:60">time_of_the_day_ns</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:65"><expr pos:start="47:5" pos:end="47:64"><name pos:start="47:5" pos:end="47:25">migration_duration_ns</name> <operator pos:start="47:27" pos:end="47:27">=</operator> <call pos:start="47:29" pos:end="47:64"><name pos:start="47:29" pos:end="47:31">MIN</name><argument_list pos:start="47:32" pos:end="47:64">(<argument pos:start="47:33" pos:end="47:54"><expr pos:start="47:33" pos:end="47:54"><name pos:start="47:33" pos:end="47:54">NANOSECONDS_PER_SECOND</name></expr></argument>, <argument pos:start="47:57" pos:end="47:63"><expr pos:start="47:57" pos:end="47:63"><name pos:start="47:57" pos:end="47:63">ns_diff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:61"><expr pos:start="49:5" pos:end="51:60"><name pos:start="49:5" pos:end="49:25">migration_duration_tb</name> <operator pos:start="49:27" pos:end="49:27">=</operator> <call pos:start="49:29" pos:end="51:60"><name pos:start="49:29" pos:end="49:36">muldiv64</name><argument_list pos:start="49:37" pos:end="51:60">(<argument pos:start="49:38" pos:end="49:58"><expr pos:start="49:38" pos:end="49:58"><name pos:start="49:38" pos:end="49:58">migration_duration_ns</name></expr></argument>, <argument pos:start="49:61" pos:end="49:64"><expr pos:start="49:61" pos:end="49:64"><name pos:start="49:61" pos:end="49:64">freq</name></expr></argument>,

                                     <argument pos:start="51:38" pos:end="51:59"><expr pos:start="51:38" pos:end="51:59"><name pos:start="51:38" pos:end="51:59">NANOSECONDS_PER_SECOND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:73"><expr pos:start="53:5" pos:end="53:72"><name pos:start="53:5" pos:end="53:12">guest_tb</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:40"><name pos:start="53:16" pos:end="53:24">tb_remote</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:40">guest_timebase</name></name> <operator pos:start="53:42" pos:end="53:42">+</operator> <call pos:start="53:44" pos:end="53:72"><name pos:start="53:44" pos:end="53:46">MIN</name><argument_list pos:start="53:47" pos:end="53:72">(<argument pos:start="53:48" pos:end="53:48"><expr pos:start="53:48" pos:end="53:48"><literal type="number" pos:start="53:48" pos:end="53:48">0</literal></expr></argument>, <argument pos:start="53:51" pos:end="53:71"><expr pos:start="53:51" pos:end="53:71"><name pos:start="53:51" pos:end="53:71">migration_duration_tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:49"><expr pos:start="57:5" pos:end="57:48"><name pos:start="57:5" pos:end="57:14">tb_off_adj</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:25">guest_tb</name> <operator pos:start="57:27" pos:end="57:27">-</operator> <call pos:start="57:29" pos:end="57:48"><name pos:start="57:29" pos:end="57:46">cpu_get_host_ticks</name><argument_list pos:start="57:47" pos:end="57:48">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:50"><expr pos:start="61:5" pos:end="61:49"><name pos:start="61:5" pos:end="61:10">tb_off</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <name pos:start="61:14" pos:end="61:49"><name pos:start="61:14" pos:end="61:26">first_ppc_cpu</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:31">env</name><operator pos:start="61:32" pos:end="61:32">.</operator><name pos:start="61:33" pos:end="61:38">tb_env</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:49">tb_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="65:54"><expr pos:start="63:5" pos:end="65:53"><call pos:start="63:5" pos:end="65:53"><name pos:start="63:5" pos:end="63:23">trace_ppc_tb_adjust</name><argument_list pos:start="63:24" pos:end="65:53">(<argument pos:start="63:25" pos:end="63:30"><expr pos:start="63:25" pos:end="63:30"><name pos:start="63:25" pos:end="63:30">tb_off</name></expr></argument>, <argument pos:start="63:33" pos:end="63:42"><expr pos:start="63:33" pos:end="63:42"><name pos:start="63:33" pos:end="63:42">tb_off_adj</name></expr></argument>, <argument pos:start="63:45" pos:end="63:63"><expr pos:start="63:45" pos:end="63:63"><name pos:start="63:45" pos:end="63:54">tb_off_adj</name> <operator pos:start="63:56" pos:end="63:56">-</operator> <name pos:start="63:58" pos:end="63:63">tb_off</name></expr></argument>,

                        <argument pos:start="65:25" pos:end="65:52"><expr pos:start="65:25" pos:end="65:52"><operator pos:start="65:25" pos:end="65:25">(</operator><name pos:start="65:26" pos:end="65:35">tb_off_adj</name> <operator pos:start="65:37" pos:end="65:37">-</operator> <name pos:start="65:39" pos:end="65:44">tb_off</name><operator pos:start="65:45" pos:end="65:45">)</operator> <operator pos:start="65:47" pos:end="65:47">/</operator> <name pos:start="65:49" pos:end="65:52">freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:36">/* Set new offset to all CPUs */</comment>

    <macro pos:start="71:5" pos:end="71:20"><name pos:start="71:5" pos:end="71:15">CPU_FOREACH</name><argument_list pos:start="71:16" pos:end="71:20">(<argument pos:start="71:17" pos:end="71:19">cpu</argument>)</argument_list></macro> <block pos:start="71:22" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:49">

        <decl_stmt pos:start="73:9" pos:end="73:44"><decl pos:start="73:9" pos:end="73:43"><type pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:18">PowerPCCPU</name> <modifier pos:start="73:20" pos:end="73:20">*</modifier></type><name pos:start="73:21" pos:end="73:24">pcpu</name> <init pos:start="73:26" pos:end="73:43">= <expr pos:start="73:28" pos:end="73:43"><call pos:start="73:28" pos:end="73:43"><name pos:start="73:28" pos:end="73:38">POWERPC_CPU</name><argument_list pos:start="73:39" pos:end="73:43">(<argument pos:start="73:40" pos:end="73:42"><expr pos:start="73:40" pos:end="73:42"><name pos:start="73:40" pos:end="73:42">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:49"><expr pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:35"><name pos:start="75:9" pos:end="75:12">pcpu</name><operator pos:start="75:13" pos:end="75:14">-&gt;</operator><name pos:start="75:15" pos:end="75:17">env</name><operator pos:start="75:18" pos:end="75:18">.</operator><name pos:start="75:19" pos:end="75:24">tb_env</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:35">tb_offset</name></name> <operator pos:start="75:37" pos:end="75:37">=</operator> <name pos:start="75:39" pos:end="75:48">tb_off_adj</name></expr>;</expr_stmt>

    </block_content>}</block>



    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
