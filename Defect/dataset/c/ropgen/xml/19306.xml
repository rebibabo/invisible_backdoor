<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19306.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">IRQ_local_pipe</name> <parameter_list pos:start="1:28" pos:end="1:65">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:37">openpic_t</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">opp</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:53"><decl pos:start="1:45" pos:end="1:53"><type pos:start="1:45" pos:end="1:53"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:53">n_CPU</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:64"><decl pos:start="1:56" pos:end="1:64"><type pos:start="1:56" pos:end="1:64"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:64">n_IRQ</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:36">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">IRQ_dst_t</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">IRQ_src_t</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">priority</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:7">dst</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">&amp;</operator><name pos:start="13:12" pos:end="13:26"><name pos:start="13:12" pos:end="13:14">opp</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:19">dst</name><index pos:start="13:20" pos:end="13:26">[<expr pos:start="13:21" pos:end="13:25"><name pos:start="13:21" pos:end="13:25">n_CPU</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:7">src</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <operator pos:start="15:11" pos:end="15:11">&amp;</operator><name pos:start="15:12" pos:end="15:26"><name pos:start="15:12" pos:end="15:14">opp</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:19">src</name><index pos:start="15:20" pos:end="15:26">[<expr pos:start="15:21" pos:end="15:25"><name pos:start="15:21" pos:end="15:25">n_IRQ</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:40"><expr pos:start="17:5" pos:end="17:39"><name pos:start="17:5" pos:end="17:12">priority</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:39"><name pos:start="17:16" pos:end="17:28">IPVP_PRIORITY</name><argument_list pos:start="17:29" pos:end="17:39">(<argument pos:start="17:30" pos:end="17:38"><expr pos:start="17:30" pos:end="17:38"><name pos:start="17:30" pos:end="17:38"><name pos:start="17:30" pos:end="17:32">src</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:38">ipvp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:30">(<expr pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:16">priority</name> <operator pos:start="19:18" pos:end="19:19">&lt;=</operator> <name pos:start="19:21" pos:end="19:29"><name pos:start="19:21" pos:end="19:23">dst</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:29">pctp</name></name></expr>)</condition> <block pos:start="19:32" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:15">

        <comment type="block" pos:start="21:9" pos:end="21:30">/* Too low priority */</comment>

        <expr_stmt pos:start="23:9" pos:end="25:40"><expr pos:start="23:9" pos:end="25:39"><call pos:start="23:9" pos:end="25:39"><name pos:start="23:9" pos:end="23:15">DPRINTF</name><argument_list pos:start="23:16" pos:end="25:39">(<argument pos:start="23:17" pos:end="23:61"><expr pos:start="23:17" pos:end="23:61"><literal type="string" pos:start="23:17" pos:end="23:61">"%s: IRQ %d has too low priority on CPU %d\n"</literal></expr></argument>,

                <argument pos:start="25:17" pos:end="25:24"><expr pos:start="25:17" pos:end="25:24"><name pos:start="25:17" pos:end="25:24">__func__</name></expr></argument>, <argument pos:start="25:27" pos:end="25:31"><expr pos:start="25:27" pos:end="25:31"><name pos:start="25:27" pos:end="25:31">n_IRQ</name></expr></argument>, <argument pos:start="25:34" pos:end="25:38"><expr pos:start="25:34" pos:end="25:38"><name pos:start="25:34" pos:end="25:38">n_CPU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="41:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="31:41">(<expr pos:start="31:9" pos:end="31:40"><call pos:start="31:9" pos:end="31:40"><name pos:start="31:9" pos:end="31:19">IRQ_testbit</name><argument_list pos:start="31:20" pos:end="31:40">(<argument pos:start="31:21" pos:end="31:32"><expr pos:start="31:21" pos:end="31:32"><operator pos:start="31:21" pos:end="31:21">&amp;</operator><name pos:start="31:22" pos:end="31:32"><name pos:start="31:22" pos:end="31:24">dst</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:32">raised</name></name></expr></argument>, <argument pos:start="31:35" pos:end="31:39"><expr pos:start="31:35" pos:end="31:39"><name pos:start="31:35" pos:end="31:39">n_IRQ</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:43" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:15">

        <comment type="block" pos:start="33:9" pos:end="33:28">/* Interrupt miss */</comment>

        <expr_stmt pos:start="35:9" pos:end="37:40"><expr pos:start="35:9" pos:end="37:39"><call pos:start="35:9" pos:end="37:39"><name pos:start="35:9" pos:end="35:15">DPRINTF</name><argument_list pos:start="35:16" pos:end="37:39">(<argument pos:start="35:17" pos:end="35:51"><expr pos:start="35:17" pos:end="35:51"><literal type="string" pos:start="35:17" pos:end="35:51">"%s: IRQ %d was missed on CPU %d\n"</literal></expr></argument>,

                <argument pos:start="37:17" pos:end="37:24"><expr pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:24">__func__</name></expr></argument>, <argument pos:start="37:27" pos:end="37:31"><expr pos:start="37:27" pos:end="37:31"><name pos:start="37:27" pos:end="37:31">n_IRQ</name></expr></argument>, <argument pos:start="37:34" pos:end="37:38"><expr pos:start="37:34" pos:end="37:38"><name pos:start="37:34" pos:end="37:38">n_CPU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:39"><expr pos:start="43:5" pos:end="43:38"><call pos:start="43:5" pos:end="43:38"><name pos:start="43:5" pos:end="43:11">set_bit</name><argument_list pos:start="43:12" pos:end="43:38">(<argument pos:start="43:13" pos:end="43:22"><expr pos:start="43:13" pos:end="43:22"><operator pos:start="43:13" pos:end="43:13">&amp;</operator><name pos:start="43:14" pos:end="43:22"><name pos:start="43:14" pos:end="43:16">src</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:22">ipvp</name></name></expr></argument>, <argument pos:start="43:25" pos:end="43:37"><expr pos:start="43:25" pos:end="43:37"><name pos:start="43:25" pos:end="43:37">IPVP_ACTIVITY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:36"><expr pos:start="45:5" pos:end="45:35"><call pos:start="45:5" pos:end="45:35"><name pos:start="45:5" pos:end="45:14">IRQ_setbit</name><argument_list pos:start="45:15" pos:end="45:35">(<argument pos:start="45:16" pos:end="45:27"><expr pos:start="45:16" pos:end="45:27"><operator pos:start="45:16" pos:end="45:16">&amp;</operator><name pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:19">dst</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:27">raised</name></name></expr></argument>, <argument pos:start="45:30" pos:end="45:34"><expr pos:start="45:30" pos:end="45:34"><name pos:start="45:30" pos:end="45:34">n_IRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="57:5"><if pos:start="47:5" pos:end="57:5">if <condition pos:start="47:8" pos:end="47:40">(<expr pos:start="47:9" pos:end="47:39"><name pos:start="47:9" pos:end="47:16">priority</name> <operator pos:start="47:18" pos:end="47:18">&lt;</operator> <name pos:start="47:20" pos:end="47:39"><name pos:start="47:20" pos:end="47:22">dst</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:30">raised</name><operator pos:start="47:31" pos:end="47:31">.</operator><name pos:start="47:32" pos:end="47:39">priority</name></name></expr>)</condition> <block pos:start="47:42" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:15">

        <comment type="block" pos:start="49:9" pos:end="49:54">/* An higher priority IRQ is already raised */</comment>

        <expr_stmt pos:start="51:9" pos:end="53:58"><expr pos:start="51:9" pos:end="53:57"><call pos:start="51:9" pos:end="53:57"><name pos:start="51:9" pos:end="51:15">DPRINTF</name><argument_list pos:start="51:16" pos:end="53:57">(<argument pos:start="51:17" pos:end="51:67"><expr pos:start="51:17" pos:end="51:67"><literal type="string" pos:start="51:17" pos:end="51:67">"%s: IRQ %d is hidden by raised IRQ %d on CPU %d\n"</literal></expr></argument>,

                <argument pos:start="53:17" pos:end="53:24"><expr pos:start="53:17" pos:end="53:24"><name pos:start="53:17" pos:end="53:24">__func__</name></expr></argument>, <argument pos:start="53:27" pos:end="53:31"><expr pos:start="53:27" pos:end="53:31"><name pos:start="53:27" pos:end="53:31">n_IRQ</name></expr></argument>, <argument pos:start="53:34" pos:end="53:49"><expr pos:start="53:34" pos:end="53:49"><name pos:start="53:34" pos:end="53:49"><name pos:start="53:34" pos:end="53:36">dst</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:44">raised</name><operator pos:start="53:45" pos:end="53:45">.</operator><name pos:start="53:46" pos:end="53:49">next</name></name></expr></argument>, <argument pos:start="53:52" pos:end="53:56"><expr pos:start="53:52" pos:end="53:56"><name pos:start="53:52" pos:end="53:56">n_CPU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><call pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:16">IRQ_get_next</name><argument_list pos:start="59:17" pos:end="59:35">(<argument pos:start="59:18" pos:end="59:20"><expr pos:start="59:18" pos:end="59:20"><name pos:start="59:18" pos:end="59:20">opp</name></expr></argument>, <argument pos:start="59:23" pos:end="59:34"><expr pos:start="59:23" pos:end="59:34"><operator pos:start="59:23" pos:end="59:23">&amp;</operator><name pos:start="59:24" pos:end="59:34"><name pos:start="59:24" pos:end="59:26">dst</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:34">raised</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="73:5"><if pos:start="61:5" pos:end="73:5">if <condition pos:start="61:8" pos:end="63:44">(<expr pos:start="61:9" pos:end="63:43"><call pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:20">IRQ_get_next</name><argument_list pos:start="61:21" pos:end="61:42">(<argument pos:start="61:22" pos:end="61:24"><expr pos:start="61:22" pos:end="61:24"><name pos:start="61:22" pos:end="61:24">opp</name></expr></argument>, <argument pos:start="61:27" pos:end="61:41"><expr pos:start="61:27" pos:end="61:41"><operator pos:start="61:27" pos:end="61:27">&amp;</operator><name pos:start="61:28" pos:end="61:41"><name pos:start="61:28" pos:end="61:30">dst</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:41">servicing</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:44" pos:end="61:45">!=</operator> <operator pos:start="61:47" pos:end="61:47">-</operator><literal type="number" pos:start="61:48" pos:end="61:48">1</literal> <operator pos:start="61:50" pos:end="61:51">&amp;&amp;</operator>

        <name pos:start="63:9" pos:end="63:16">priority</name> <operator pos:start="63:18" pos:end="63:19">&lt;=</operator> <name pos:start="63:21" pos:end="63:43"><name pos:start="63:21" pos:end="63:23">dst</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:34">servicing</name><operator pos:start="63:35" pos:end="63:35">.</operator><name pos:start="63:36" pos:end="63:43">priority</name></name></expr>)</condition> <block pos:start="63:46" pos:end="73:5">{<block_content pos:start="65:9" pos:end="71:15">

        <expr_stmt pos:start="65:9" pos:end="67:61"><expr pos:start="65:9" pos:end="67:60"><call pos:start="65:9" pos:end="67:60"><name pos:start="65:9" pos:end="65:15">DPRINTF</name><argument_list pos:start="65:16" pos:end="67:60">(<argument pos:start="65:17" pos:end="65:70"><expr pos:start="65:17" pos:end="65:70"><literal type="string" pos:start="65:17" pos:end="65:70">"%s: IRQ %d is hidden by servicing IRQ %d on CPU %d\n"</literal></expr></argument>,

                <argument pos:start="67:17" pos:end="67:24"><expr pos:start="67:17" pos:end="67:24"><name pos:start="67:17" pos:end="67:24">__func__</name></expr></argument>, <argument pos:start="67:27" pos:end="67:31"><expr pos:start="67:27" pos:end="67:31"><name pos:start="67:27" pos:end="67:31">n_IRQ</name></expr></argument>, <argument pos:start="67:34" pos:end="67:52"><expr pos:start="67:34" pos:end="67:52"><name pos:start="67:34" pos:end="67:52"><name pos:start="67:34" pos:end="67:36">dst</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:47">servicing</name><operator pos:start="67:48" pos:end="67:48">.</operator><name pos:start="67:49" pos:end="67:52">next</name></name></expr></argument>, <argument pos:start="67:55" pos:end="67:59"><expr pos:start="67:55" pos:end="67:59"><name pos:start="67:55" pos:end="67:59">n_CPU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="69:9" pos:end="69:53">/* Already servicing a higher priority IRQ */</comment>

        <return pos:start="71:9" pos:end="71:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:70"><expr pos:start="75:5" pos:end="75:69"><call pos:start="75:5" pos:end="75:69"><name pos:start="75:5" pos:end="75:11">DPRINTF</name><argument_list pos:start="75:12" pos:end="75:69">(<argument pos:start="75:13" pos:end="75:54"><expr pos:start="75:13" pos:end="75:54"><literal type="string" pos:start="75:13" pos:end="75:54">"Raise OpenPIC INT output cpu %d irq %d\n"</literal></expr></argument>, <argument pos:start="75:57" pos:end="75:61"><expr pos:start="75:57" pos:end="75:61"><name pos:start="75:57" pos:end="75:61">n_CPU</name></expr></argument>, <argument pos:start="75:64" pos:end="75:68"><expr pos:start="75:64" pos:end="75:68"><name pos:start="75:64" pos:end="75:68">n_IRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:36"><expr pos:start="77:5" pos:end="77:35"><call pos:start="77:5" pos:end="77:35"><name pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:7">opp</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:18">irq_raise</name></name><argument_list pos:start="77:19" pos:end="77:35">(<argument pos:start="77:20" pos:end="77:22"><expr pos:start="77:20" pos:end="77:22"><name pos:start="77:20" pos:end="77:22">opp</name></expr></argument>, <argument pos:start="77:25" pos:end="77:29"><expr pos:start="77:25" pos:end="77:29"><name pos:start="77:25" pos:end="77:29">n_CPU</name></expr></argument>, <argument pos:start="77:32" pos:end="77:34"><expr pos:start="77:32" pos:end="77:34"><name pos:start="77:32" pos:end="77:34">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
