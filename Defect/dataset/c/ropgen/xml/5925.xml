<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5925.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">svq1_encode_frame</name><parameter_list pos:start="1:29" pos:end="3:29">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><name pos:start="1:53" pos:end="1:60">unsigned</name> <name pos:start="1:62" pos:end="1:65">char</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">buf</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:16"><decl pos:start="3:5" pos:end="3:16"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:16">buf_size</name></decl></parameter>, <parameter pos:start="3:19" pos:end="3:28"><decl pos:start="3:19" pos:end="3:28"><type pos:start="3:19" pos:end="3:28"><name pos:start="3:19" pos:end="3:22">void</name> <modifier pos:start="3:24" pos:end="3:24">*</modifier></type><name pos:start="3:25" pos:end="3:28">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:38">

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:15">SVQ1Context</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier> <specifier pos:start="7:19" pos:end="7:23">const</specifier></type> <name pos:start="7:25" pos:end="7:25">s</name> <init pos:start="7:27" pos:end="7:44">= <expr pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:33">avctx</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">pict</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:11">AVFrame</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier> <specifier pos:start="11:15" pos:end="11:19">const</specifier></type> <name pos:start="11:21" pos:end="11:21">p</name><init pos:start="11:22" pos:end="11:44">= <expr pos:start="11:24" pos:end="11:44"><operator pos:start="11:24" pos:end="11:24">(</operator><name pos:start="11:25" pos:end="11:31">AVFrame</name><operator pos:start="11:32" pos:end="11:32">*</operator><operator pos:start="11:33" pos:end="11:33">)</operator><operator pos:start="11:34" pos:end="11:34">&amp;</operator><name pos:start="11:35" pos:end="11:44"><name pos:start="11:35" pos:end="11:35">s</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:44">picture</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">AVFrame</name></type> <name pos:start="13:13" pos:end="13:16">temp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if<condition pos:start="19:7" pos:end="19:41">(<expr pos:start="19:8" pos:end="19:40"><name pos:start="19:8" pos:end="19:21"><name pos:start="19:8" pos:end="19:12">avctx</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:21">pix_fmt</name></name> <operator pos:start="19:23" pos:end="19:24">!=</operator> <name pos:start="19:26" pos:end="19:40">PIX_FMT_YUV410P</name></expr>)</condition><block pos:start="19:42" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:66"><expr pos:start="21:9" pos:end="21:65"><call pos:start="21:9" pos:end="21:65"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:65">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:64"><expr pos:start="21:37" pos:end="21:64"><literal type="string" pos:start="21:37" pos:end="21:64">"unsupported pixel format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if<condition pos:start="29:7" pos:end="29:35">(<expr pos:start="29:8" pos:end="29:34"><operator pos:start="29:8" pos:end="29:8">!</operator><name pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:26">current_picture</name><operator pos:start="29:27" pos:end="29:27">.</operator><name pos:start="29:28" pos:end="29:31">data</name><index pos:start="29:32" pos:end="29:34">[<expr pos:start="29:33" pos:end="29:33"><literal type="number" pos:start="29:33" pos:end="29:33">0</literal></expr>]</index></name></expr>)</condition><block pos:start="29:36" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:71">

        <expr_stmt pos:start="31:9" pos:end="31:54"><expr pos:start="31:9" pos:end="31:53"><call pos:start="31:9" pos:end="31:53"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:13">avctx</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:25">get_buffer</name></name><argument_list pos:start="31:26" pos:end="31:53">(<argument pos:start="31:27" pos:end="31:31"><expr pos:start="31:27" pos:end="31:31"><name pos:start="31:27" pos:end="31:31">avctx</name></expr></argument>, <argument pos:start="31:34" pos:end="31:52"><expr pos:start="31:34" pos:end="31:52"><operator pos:start="31:34" pos:end="31:34">&amp;</operator><name pos:start="31:35" pos:end="31:52"><name pos:start="31:35" pos:end="31:35">s</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:52">current_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:51"><expr pos:start="33:9" pos:end="33:50"><call pos:start="33:9" pos:end="33:50"><name pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:25">get_buffer</name></name><argument_list pos:start="33:26" pos:end="33:50">(<argument pos:start="33:27" pos:end="33:31"><expr pos:start="33:27" pos:end="33:31"><name pos:start="33:27" pos:end="33:31">avctx</name></expr></argument>, <argument pos:start="33:34" pos:end="33:49"><expr pos:start="33:34" pos:end="33:49"><operator pos:start="33:34" pos:end="33:34">&amp;</operator><name pos:start="33:35" pos:end="33:49"><name pos:start="33:35" pos:end="33:35">s</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:49">last_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:71"><expr pos:start="35:9" pos:end="35:70"><name pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:21">scratchbuf</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:70"><name pos:start="35:25" pos:end="35:33">av_malloc</name><argument_list pos:start="35:34" pos:end="35:70">(<argument pos:start="35:35" pos:end="35:69"><expr pos:start="35:35" pos:end="35:69"><name pos:start="35:35" pos:end="35:64"><name pos:start="35:35" pos:end="35:35">s</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:52">current_picture</name><operator pos:start="35:53" pos:end="35:53">.</operator><name pos:start="35:54" pos:end="35:61">linesize</name><index pos:start="35:62" pos:end="35:64">[<expr pos:start="35:63" pos:end="35:63"><literal type="number" pos:start="35:63" pos:end="35:63">0</literal></expr>]</index></name> <operator pos:start="35:66" pos:end="35:66">*</operator> <literal type="number" pos:start="35:68" pos:end="35:69">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:29"><expr pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:8">temp</name><operator pos:start="41:9" pos:end="41:9">=</operator> <name pos:start="41:11" pos:end="41:28"><name pos:start="41:11" pos:end="41:11">s</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:28">current_picture</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:22">current_picture</name></name><operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:39"><name pos:start="43:25" pos:end="43:25">s</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:39">last_picture</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:26"><expr pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:19">last_picture</name></name><operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:25">temp</name></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:41"><expr pos:start="49:5" pos:end="49:40"><call pos:start="49:5" pos:end="49:40"><name pos:start="49:5" pos:end="49:17">init_put_bits</name><argument_list pos:start="49:18" pos:end="49:40">(<argument pos:start="49:19" pos:end="49:24"><expr pos:start="49:19" pos:end="49:24"><operator pos:start="49:19" pos:end="49:19">&amp;</operator><name pos:start="49:20" pos:end="49:24"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:24">pb</name></name></expr></argument>, <argument pos:start="49:27" pos:end="49:29"><expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:29">buf</name></expr></argument>, <argument pos:start="49:32" pos:end="49:39"><expr pos:start="49:32" pos:end="49:39"><name pos:start="49:32" pos:end="49:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:15"><expr pos:start="53:5" pos:end="53:14"><operator pos:start="53:5" pos:end="53:5">*</operator><name pos:start="53:6" pos:end="53:6">p</name> <operator pos:start="53:8" pos:end="53:8">=</operator> <operator pos:start="53:10" pos:end="53:10">*</operator><name pos:start="53:11" pos:end="53:14">pict</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:100"><expr pos:start="55:5" pos:end="55:99"><name pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:5">p</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:16">pict_type</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <ternary pos:start="55:20" pos:end="55:99"><condition pos:start="55:20" pos:end="55:77"><expr pos:start="55:20" pos:end="55:75"><name pos:start="55:20" pos:end="55:34"><name pos:start="55:20" pos:end="55:24">avctx</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:34">gop_size</name></name> <operator pos:start="55:36" pos:end="55:37">&amp;&amp;</operator> <name pos:start="55:39" pos:end="55:57"><name pos:start="55:39" pos:end="55:43">avctx</name><operator pos:start="55:44" pos:end="55:45">-&gt;</operator><name pos:start="55:46" pos:end="55:57">frame_number</name></name> <operator pos:start="55:59" pos:end="55:59">%</operator> <name pos:start="55:61" pos:end="55:75"><name pos:start="55:61" pos:end="55:65">avctx</name><operator pos:start="55:66" pos:end="55:67">-&gt;</operator><name pos:start="55:68" pos:end="55:75">gop_size</name></name></expr> ?</condition><then pos:start="55:79" pos:end="55:87"> <expr pos:start="55:79" pos:end="55:87"><name pos:start="55:79" pos:end="55:87">FF_P_TYPE</name></expr> </then><else pos:start="55:89" pos:end="55:99">: <expr pos:start="55:91" pos:end="55:99"><name pos:start="55:91" pos:end="55:99">FF_I_TYPE</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:45"><expr pos:start="57:5" pos:end="57:44"><name pos:start="57:5" pos:end="57:16"><name pos:start="57:5" pos:end="57:5">p</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:16">key_frame</name></name> <operator pos:start="57:18" pos:end="57:18">=</operator> <name pos:start="57:20" pos:end="57:31"><name pos:start="57:20" pos:end="57:20">p</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:31">pict_type</name></name> <operator pos:start="57:33" pos:end="57:34">==</operator> <name pos:start="57:36" pos:end="57:44">FF_I_TYPE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:39"><expr pos:start="61:5" pos:end="61:38"><call pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:21">svq1_write_header</name><argument_list pos:start="61:22" pos:end="61:38">(<argument pos:start="61:23" pos:end="61:23"><expr pos:start="61:23" pos:end="61:23"><name pos:start="61:23" pos:end="61:23">s</name></expr></argument>, <argument pos:start="61:26" pos:end="61:37"><expr pos:start="61:26" pos:end="61:37"><name pos:start="61:26" pos:end="61:37"><name pos:start="61:26" pos:end="61:26">p</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:37">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="63:5" pos:end="75:5">for<control pos:start="63:8" pos:end="63:22">(<init pos:start="63:9" pos:end="63:12"><expr pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:9">i</name><operator pos:start="63:10" pos:end="63:10">=</operator><literal type="number" pos:start="63:11" pos:end="63:11">0</literal></expr>;</init> <condition pos:start="63:14" pos:end="63:17"><expr pos:start="63:14" pos:end="63:16"><name pos:start="63:14" pos:end="63:14">i</name><operator pos:start="63:15" pos:end="63:15">&lt;</operator><literal type="number" pos:start="63:16" pos:end="63:16">3</literal></expr>;</condition> <incr pos:start="63:19" pos:end="63:21"><expr pos:start="63:19" pos:end="63:21"><name pos:start="63:19" pos:end="63:19">i</name><operator pos:start="63:20" pos:end="63:21">++</operator></expr></incr>)</control><block pos:start="63:23" pos:end="75:5">{<block_content pos:start="65:9" pos:end="73:26">

        <if_stmt pos:start="65:9" pos:end="73:26"><if pos:start="65:9" pos:end="73:26">if<condition pos:start="65:11" pos:end="71:72">(<expr pos:start="65:12" pos:end="71:71"><call pos:start="65:12" pos:end="71:67"><name pos:start="65:12" pos:end="65:28">svq1_encode_plane</name><argument_list pos:start="65:29" pos:end="71:67">(<argument pos:start="65:30" pos:end="65:30"><expr pos:start="65:30" pos:end="65:30"><name pos:start="65:30" pos:end="65:30">s</name></expr></argument>, <argument pos:start="65:33" pos:end="65:33"><expr pos:start="65:33" pos:end="65:33"><name pos:start="65:33" pos:end="65:33">i</name></expr></argument>,

            <argument pos:start="67:13" pos:end="67:30"><expr pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:22">picture</name><operator pos:start="67:23" pos:end="67:23">.</operator><name pos:start="67:24" pos:end="67:27">data</name><index pos:start="67:28" pos:end="67:30">[<expr pos:start="67:29" pos:end="67:29"><name pos:start="67:29" pos:end="67:29">i</name></expr>]</index></name></expr></argument>, <argument pos:start="67:33" pos:end="67:55"><expr pos:start="67:33" pos:end="67:55"><name pos:start="67:33" pos:end="67:55"><name pos:start="67:33" pos:end="67:33">s</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:47">last_picture</name><operator pos:start="67:48" pos:end="67:48">.</operator><name pos:start="67:49" pos:end="67:52">data</name><index pos:start="67:53" pos:end="67:55">[<expr pos:start="67:54" pos:end="67:54"><name pos:start="67:54" pos:end="67:54">i</name></expr>]</index></name></expr></argument>, <argument pos:start="67:58" pos:end="67:83"><expr pos:start="67:58" pos:end="67:83"><name pos:start="67:58" pos:end="67:83"><name pos:start="67:58" pos:end="67:58">s</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:75">current_picture</name><operator pos:start="67:76" pos:end="67:76">.</operator><name pos:start="67:77" pos:end="67:80">data</name><index pos:start="67:81" pos:end="67:83">[<expr pos:start="67:82" pos:end="67:82"><name pos:start="67:82" pos:end="67:82">i</name></expr>]</index></name></expr></argument>,

            <argument pos:start="69:13" pos:end="69:36"><expr pos:start="69:13" pos:end="69:36"><name pos:start="69:13" pos:end="69:26"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:26">frame_width</name></name> <operator pos:start="69:28" pos:end="69:28">/</operator> <operator pos:start="69:30" pos:end="69:30">(</operator><ternary pos:start="69:31" pos:end="69:35"><condition pos:start="69:31" pos:end="69:32"><expr pos:start="69:31" pos:end="69:31"><name pos:start="69:31" pos:end="69:31">i</name></expr>?</condition><then pos:start="69:33" pos:end="69:33"><expr pos:start="69:33" pos:end="69:33"><literal type="number" pos:start="69:33" pos:end="69:33">4</literal></expr></then><else pos:start="69:34" pos:end="69:35">:<expr pos:start="69:35" pos:end="69:35"><literal type="number" pos:start="69:35" pos:end="69:35">1</literal></expr></else></ternary><operator pos:start="69:36" pos:end="69:36">)</operator></expr></argument>, <argument pos:start="69:39" pos:end="69:63"><expr pos:start="69:39" pos:end="69:63"><name pos:start="69:39" pos:end="69:53"><name pos:start="69:39" pos:end="69:39">s</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:53">frame_height</name></name> <operator pos:start="69:55" pos:end="69:55">/</operator> <operator pos:start="69:57" pos:end="69:57">(</operator><ternary pos:start="69:58" pos:end="69:62"><condition pos:start="69:58" pos:end="69:59"><expr pos:start="69:58" pos:end="69:58"><name pos:start="69:58" pos:end="69:58">i</name></expr>?</condition><then pos:start="69:60" pos:end="69:60"><expr pos:start="69:60" pos:end="69:60"><literal type="number" pos:start="69:60" pos:end="69:60">4</literal></expr></then><else pos:start="69:61" pos:end="69:62">:<expr pos:start="69:62" pos:end="69:62"><literal type="number" pos:start="69:62" pos:end="69:62">1</literal></expr></else></ternary><operator pos:start="69:63" pos:end="69:63">)</operator></expr></argument>,

            <argument pos:start="71:13" pos:end="71:34"><expr pos:start="71:13" pos:end="71:34"><name pos:start="71:13" pos:end="71:34"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:22">picture</name><operator pos:start="71:23" pos:end="71:23">.</operator><name pos:start="71:24" pos:end="71:31">linesize</name><index pos:start="71:32" pos:end="71:34">[<expr pos:start="71:33" pos:end="71:33"><name pos:start="71:33" pos:end="71:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="71:37" pos:end="71:66"><expr pos:start="71:37" pos:end="71:66"><name pos:start="71:37" pos:end="71:66"><name pos:start="71:37" pos:end="71:37">s</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:54">current_picture</name><operator pos:start="71:55" pos:end="71:55">.</operator><name pos:start="71:56" pos:end="71:63">linesize</name><index pos:start="71:64" pos:end="71:66">[<expr pos:start="71:65" pos:end="71:65"><name pos:start="71:65" pos:end="71:65">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="71:69" pos:end="71:69">&lt;</operator> <literal type="number" pos:start="71:71" pos:end="71:71">0</literal></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:26"><block_content pos:start="73:17" pos:end="73:26">

                <return pos:start="73:17" pos:end="73:26">return <expr pos:start="73:24" pos:end="73:25"><operator pos:start="73:24" pos:end="73:24">-</operator><literal type="number" pos:start="73:25" pos:end="73:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



<comment type="line" pos:start="79:1" pos:end="79:29">//    align_put_bits(&amp;s-&gt;pb);</comment>

    <while pos:start="81:5" pos:end="83:31">while<condition pos:start="81:10" pos:end="81:38">(<expr pos:start="81:11" pos:end="81:37"><call pos:start="81:11" pos:end="81:32"><name pos:start="81:11" pos:end="81:24">put_bits_count</name><argument_list pos:start="81:25" pos:end="81:32">(<argument pos:start="81:26" pos:end="81:31"><expr pos:start="81:26" pos:end="81:31"><operator pos:start="81:26" pos:end="81:26">&amp;</operator><name pos:start="81:27" pos:end="81:31"><name pos:start="81:27" pos:end="81:27">s</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:31">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="81:34" pos:end="81:34">&amp;</operator> <literal type="number" pos:start="81:36" pos:end="81:37">31</literal></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:31"><block_content pos:start="83:9" pos:end="83:31">

        <expr_stmt pos:start="83:9" pos:end="83:31"><expr pos:start="83:9" pos:end="83:30"><call pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:16">put_bits</name><argument_list pos:start="83:17" pos:end="83:30">(<argument pos:start="83:18" pos:end="83:23"><expr pos:start="83:18" pos:end="83:23"><operator pos:start="83:18" pos:end="83:18">&amp;</operator><name pos:start="83:19" pos:end="83:23"><name pos:start="83:19" pos:end="83:19">s</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:23">pb</name></name></expr></argument>, <argument pos:start="83:26" pos:end="83:26"><expr pos:start="83:26" pos:end="83:26"><literal type="number" pos:start="83:26" pos:end="83:26">1</literal></expr></argument>, <argument pos:start="83:29" pos:end="83:29"><expr pos:start="83:29" pos:end="83:29"><literal type="number" pos:start="83:29" pos:end="83:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <expr_stmt pos:start="87:5" pos:end="87:27"><expr pos:start="87:5" pos:end="87:26"><call pos:start="87:5" pos:end="87:26"><name pos:start="87:5" pos:end="87:18">flush_put_bits</name><argument_list pos:start="87:19" pos:end="87:26">(<argument pos:start="87:20" pos:end="87:25"><expr pos:start="87:20" pos:end="87:25"><operator pos:start="87:20" pos:end="87:20">&amp;</operator><name pos:start="87:21" pos:end="87:25"><name pos:start="87:21" pos:end="87:21">s</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="91:5" pos:end="91:38">return <expr pos:start="91:12" pos:end="91:37"><call pos:start="91:12" pos:end="91:33"><name pos:start="91:12" pos:end="91:25">put_bits_count</name><argument_list pos:start="91:26" pos:end="91:33">(<argument pos:start="91:27" pos:end="91:32"><expr pos:start="91:27" pos:end="91:32"><operator pos:start="91:27" pos:end="91:27">&amp;</operator><name pos:start="91:28" pos:end="91:32"><name pos:start="91:28" pos:end="91:28">s</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:32">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="91:35" pos:end="91:35">/</operator> <literal type="number" pos:start="91:37" pos:end="91:37">8</literal></expr>;</return>

</block_content>}</block></function>
</unit>
