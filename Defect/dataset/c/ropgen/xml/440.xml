<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/440.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">decode_exponents</name><parameter_list pos:start="1:28" pos:end="1:50">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:44">AC3DecodeContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">ac3_audio_block</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">ab</name> <init pos:start="5:25" pos:end="5:43">= <expr pos:start="5:27" pos:end="5:43"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:30">ctx</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:43">audio_block</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">exps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:18">dexps</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:22"><if pos:start="15:5" pos:end="21:22">if <condition pos:start="15:8" pos:end="15:71">(<expr pos:start="15:9" pos:end="15:70"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:10">ab</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:17">flags</name></name> <operator pos:start="15:19" pos:end="15:19">&amp;</operator> <name pos:start="15:21" pos:end="15:33">AC3_AB_CPLINU</name> <operator pos:start="15:35" pos:end="15:36">&amp;&amp;</operator> <name pos:start="15:38" pos:end="15:50"><name pos:start="15:38" pos:end="15:39">ab</name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:50">cplexpstr</name></name> <operator pos:start="15:52" pos:end="15:53">!=</operator> <name pos:start="15:55" pos:end="15:70">AC3_EXPSTR_REUSE</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="21:22"><block_content pos:start="17:9" pos:end="21:22">

        <if_stmt pos:start="17:9" pos:end="21:22"><if pos:start="17:9" pos:end="21:22">if <condition pos:start="17:12" pos:end="19:65">(<expr pos:start="17:13" pos:end="19:64"><call pos:start="17:13" pos:end="19:64"><name pos:start="17:13" pos:end="17:29">_decode_exponents</name><argument_list pos:start="17:30" pos:end="19:64">(<argument pos:start="17:31" pos:end="17:43"><expr pos:start="17:31" pos:end="17:43"><name pos:start="17:31" pos:end="17:43"><name pos:start="17:31" pos:end="17:32">ab</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:43">cplexpstr</name></name></expr></argument>, <argument pos:start="17:46" pos:end="17:57"><expr pos:start="17:46" pos:end="17:57"><name pos:start="17:46" pos:end="17:57"><name pos:start="17:46" pos:end="17:47">ab</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:57">ncplgrps</name></name></expr></argument>, <argument pos:start="17:60" pos:end="17:72"><expr pos:start="17:60" pos:end="17:72"><name pos:start="17:60" pos:end="17:72"><name pos:start="17:60" pos:end="17:61">ab</name><operator pos:start="17:62" pos:end="17:63">-&gt;</operator><name pos:start="17:64" pos:end="17:72">cplabsexp</name></name></expr></argument>,

                    <argument pos:start="19:21" pos:end="19:31"><expr pos:start="19:21" pos:end="19:31"><name pos:start="19:21" pos:end="19:31"><name pos:start="19:21" pos:end="19:22">ab</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:31">cplexps</name></name></expr></argument>, <argument pos:start="19:34" pos:end="19:63"><expr pos:start="19:34" pos:end="19:63"><name pos:start="19:34" pos:end="19:45"><name pos:start="19:34" pos:end="19:35">ab</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:45">dcplexps</name></name> <operator pos:start="19:47" pos:end="19:47">+</operator> <name pos:start="19:49" pos:end="19:63"><name pos:start="19:49" pos:end="19:50">ab</name><operator pos:start="19:51" pos:end="19:52">-&gt;</operator><name pos:start="19:53" pos:end="19:63">cplstrtmant</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:22"><block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    <for pos:start="23:5" pos:end="35:9">for <control pos:start="23:9" pos:end="23:42">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:37"><expr pos:start="23:17" pos:end="23:36"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:36"><name pos:start="23:21" pos:end="23:23">ctx</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:28">bsi</name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:36">nfchans</name></name></expr>;</condition> <incr pos:start="23:39" pos:end="23:41"><expr pos:start="23:39" pos:end="23:41"><name pos:start="23:39" pos:end="23:39">i</name><operator pos:start="23:40" pos:end="23:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="25:9" pos:end="35:9"><block_content pos:start="25:9" pos:end="35:9">

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="35:9">if <condition pos:start="25:12" pos:end="25:48">(<expr pos:start="25:13" pos:end="25:47"><name pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:14">ab</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:24">chexpstr</name><index pos:start="25:25" pos:end="25:27">[<expr pos:start="25:26" pos:end="25:26"><name pos:start="25:26" pos:end="25:26">i</name></expr>]</index></name> <operator pos:start="25:29" pos:end="25:30">!=</operator> <name pos:start="25:32" pos:end="25:47">AC3_EXPSTR_REUSE</name></expr>)</condition> <block pos:start="25:50" pos:end="35:9">{<block_content pos:start="27:13" pos:end="33:26">

            <expr_stmt pos:start="27:13" pos:end="27:31"><expr pos:start="27:13" pos:end="27:30"><name pos:start="27:13" pos:end="27:16">exps</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:30"><name pos:start="27:20" pos:end="27:21">ab</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:27">exps</name><index pos:start="27:28" pos:end="27:30">[<expr pos:start="27:29" pos:end="27:29"><name pos:start="27:29" pos:end="27:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:17">dexps</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:32"><name pos:start="29:21" pos:end="29:22">ab</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:29">dexps</name><index pos:start="29:30" pos:end="29:32">[<expr pos:start="29:31" pos:end="29:31"><name pos:start="29:31" pos:end="29:31">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="31:13" pos:end="33:26"><if pos:start="31:13" pos:end="33:26">if <condition pos:start="31:16" pos:end="31:97">(<expr pos:start="31:17" pos:end="31:96"><call pos:start="31:17" pos:end="31:96"><name pos:start="31:17" pos:end="31:33">_decode_exponents</name><argument_list pos:start="31:34" pos:end="31:96">(<argument pos:start="31:35" pos:end="31:49"><expr pos:start="31:35" pos:end="31:49"><name pos:start="31:35" pos:end="31:49"><name pos:start="31:35" pos:end="31:36">ab</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:46">chexpstr</name><index pos:start="31:47" pos:end="31:49">[<expr pos:start="31:48" pos:end="31:48"><name pos:start="31:48" pos:end="31:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:52" pos:end="31:65"><expr pos:start="31:52" pos:end="31:65"><name pos:start="31:52" pos:end="31:65"><name pos:start="31:52" pos:end="31:53">ab</name><operator pos:start="31:54" pos:end="31:55">-&gt;</operator><name pos:start="31:56" pos:end="31:62">nchgrps</name><index pos:start="31:63" pos:end="31:65">[<expr pos:start="31:64" pos:end="31:64"><name pos:start="31:64" pos:end="31:64">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:68" pos:end="31:74"><expr pos:start="31:68" pos:end="31:74"><name pos:start="31:68" pos:end="31:74"><name pos:start="31:68" pos:end="31:71">exps</name><index pos:start="31:72" pos:end="31:74">[<expr pos:start="31:73" pos:end="31:73"><literal type="number" pos:start="31:73" pos:end="31:73">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:77" pos:end="31:84"><expr pos:start="31:77" pos:end="31:84"><name pos:start="31:77" pos:end="31:80">exps</name> <operator pos:start="31:82" pos:end="31:82">+</operator> <literal type="number" pos:start="31:84" pos:end="31:84">1</literal></expr></argument>, <argument pos:start="31:87" pos:end="31:95"><expr pos:start="31:87" pos:end="31:95"><name pos:start="31:87" pos:end="31:91">dexps</name> <operator pos:start="31:93" pos:end="31:93">+</operator> <literal type="number" pos:start="31:95" pos:end="31:95">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:26"><block_content pos:start="33:17" pos:end="33:26">

                <return pos:start="33:17" pos:end="33:26">return <expr pos:start="33:24" pos:end="33:25"><operator pos:start="33:24" pos:end="33:24">-</operator><literal type="number" pos:start="33:25" pos:end="33:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></for>

    <if_stmt pos:start="37:5" pos:end="41:22"><if pos:start="37:5" pos:end="41:22">if <condition pos:start="37:8" pos:end="37:76">(<expr pos:start="37:9" pos:end="37:75"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:11">ctx</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:16">bsi</name><operator pos:start="37:17" pos:end="37:17">.</operator><name pos:start="37:18" pos:end="37:22">flags</name></name> <operator pos:start="37:24" pos:end="37:24">&amp;</operator> <name pos:start="37:26" pos:end="37:38">AC3_BSI_LFEON</name> <operator pos:start="37:40" pos:end="37:41">&amp;&amp;</operator> <name pos:start="37:43" pos:end="37:55"><name pos:start="37:43" pos:end="37:44">ab</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:55">lfeexpstr</name></name> <operator pos:start="37:57" pos:end="37:58">!=</operator> <name pos:start="37:60" pos:end="37:75">AC3_EXPSTR_REUSE</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="41:22"><block_content pos:start="39:9" pos:end="41:22">

        <if_stmt pos:start="39:9" pos:end="41:22"><if pos:start="39:9" pos:end="41:22">if <condition pos:start="39:12" pos:end="39:95">(<expr pos:start="39:13" pos:end="39:94"><call pos:start="39:13" pos:end="39:94"><name pos:start="39:13" pos:end="39:29">_decode_exponents</name><argument_list pos:start="39:30" pos:end="39:94">(<argument pos:start="39:31" pos:end="39:43"><expr pos:start="39:31" pos:end="39:43"><name pos:start="39:31" pos:end="39:43"><name pos:start="39:31" pos:end="39:32">ab</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:43">lfeexpstr</name></name></expr></argument>, <argument pos:start="39:46" pos:end="39:46"><expr pos:start="39:46" pos:end="39:46"><literal type="number" pos:start="39:46" pos:end="39:46">2</literal></expr></argument>, <argument pos:start="39:49" pos:end="39:62"><expr pos:start="39:49" pos:end="39:62"><name pos:start="39:49" pos:end="39:62"><name pos:start="39:49" pos:end="39:50">ab</name><operator pos:start="39:51" pos:end="39:52">-&gt;</operator><name pos:start="39:53" pos:end="39:59">lfeexps</name><index pos:start="39:60" pos:end="39:62">[<expr pos:start="39:61" pos:end="39:61"><literal type="number" pos:start="39:61" pos:end="39:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:65" pos:end="39:79"><expr pos:start="39:65" pos:end="39:79"><name pos:start="39:65" pos:end="39:75"><name pos:start="39:65" pos:end="39:66">ab</name><operator pos:start="39:67" pos:end="39:68">-&gt;</operator><name pos:start="39:69" pos:end="39:75">lfeexps</name></name> <operator pos:start="39:77" pos:end="39:77">+</operator> <literal type="number" pos:start="39:79" pos:end="39:79">1</literal></expr></argument>, <argument pos:start="39:82" pos:end="39:93"><expr pos:start="39:82" pos:end="39:93"><name pos:start="39:82" pos:end="39:93"><name pos:start="39:82" pos:end="39:83">ab</name><operator pos:start="39:84" pos:end="39:85">-&gt;</operator><name pos:start="39:86" pos:end="39:93">dlfeexps</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:22"><block_content pos:start="41:13" pos:end="41:22">

            <return pos:start="41:13" pos:end="41:22">return <expr pos:start="41:20" pos:end="41:21"><operator pos:start="41:20" pos:end="41:20">-</operator><literal type="number" pos:start="41:21" pos:end="41:21">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
