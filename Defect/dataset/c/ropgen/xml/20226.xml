<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20226.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:21">DisplaySurface</name> <modifier pos:start="1:23" pos:end="1:23">*</modifier></type><name pos:start="1:24" pos:end="1:48">qemu_create_dummy_surface</name><parameter_list pos:start="1:49" pos:end="1:54">(<parameter pos:start="1:50" pos:end="1:53"><decl pos:start="1:50" pos:end="1:53"><type pos:start="1:50" pos:end="1:53"><name pos:start="1:50" pos:end="1:53">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:19">

    <decl_stmt pos:start="5:5" pos:end="7:49"><decl pos:start="5:5" pos:end="7:48"><type pos:start="5:5" pos:end="5:21"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:21">char</name></type> <name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:25">msg</name><index pos:start="5:26" pos:end="5:27">[]</index></name> <init pos:start="5:29" pos:end="7:48">=

        <expr pos:start="7:9" pos:end="7:48"><literal type="string" pos:start="7:9" pos:end="7:48">"This VM has no graphic display device."</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:67"><decl pos:start="9:5" pos:end="9:66"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">DisplaySurface</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">surface</name> <init pos:start="9:29" pos:end="9:66">= <expr pos:start="9:31" pos:end="9:66"><call pos:start="9:31" pos:end="9:66"><name pos:start="9:31" pos:end="9:56">qemu_create_displaysurface</name><argument_list pos:start="9:57" pos:end="9:66">(<argument pos:start="9:58" pos:end="9:60"><expr pos:start="9:58" pos:end="9:60"><literal type="number" pos:start="9:58" pos:end="9:60">640</literal></expr></argument>, <argument pos:start="9:63" pos:end="9:65"><expr pos:start="9:63" pos:end="9:65"><literal type="number" pos:start="9:63" pos:end="9:65">480</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:55"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18">pixman_color_t</name></type> <name pos:start="11:20" pos:end="11:21">bg</name> <init pos:start="11:23" pos:end="11:55">= <expr pos:start="11:25" pos:end="11:55"><name pos:start="11:25" pos:end="11:55"><name pos:start="11:25" pos:end="11:39">color_table_rgb</name><index pos:start="11:40" pos:end="11:42">[<expr pos:start="11:41" pos:end="11:41"><literal type="number" pos:start="11:41" pos:end="11:41">0</literal></expr>]</index><index pos:start="11:43" pos:end="11:55">[<expr pos:start="11:44" pos:end="11:54"><name pos:start="11:44" pos:end="11:54">COLOR_BLACK</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18">pixman_color_t</name></type> <name pos:start="13:20" pos:end="13:21">fg</name> <init pos:start="13:23" pos:end="13:55">= <expr pos:start="13:25" pos:end="13:55"><name pos:start="13:25" pos:end="13:55"><name pos:start="13:25" pos:end="13:39">color_table_rgb</name><index pos:start="13:40" pos:end="13:42">[<expr pos:start="13:41" pos:end="13:41"><literal type="number" pos:start="13:41" pos:end="13:41">0</literal></expr>]</index><index pos:start="13:43" pos:end="13:55">[<expr pos:start="13:44" pos:end="13:54"><name pos:start="13:44" pos:end="13:54">COLOR_WHITE</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">pixman_image_t</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:25">glyph</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">len</name></decl>, <decl pos:start="17:14" pos:end="17:14"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:14" pos:end="17:14">x</name></decl>, <decl pos:start="17:17" pos:end="17:17"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:17" pos:end="17:17">y</name></decl>, <decl pos:start="17:20" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:20" pos:end="17:20">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:7">len</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:21"><name pos:start="21:11" pos:end="21:16">strlen</name><argument_list pos:start="21:17" pos:end="21:21">(<argument pos:start="21:18" pos:end="21:20"><expr pos:start="21:18" pos:end="21:20"><name pos:start="21:18" pos:end="21:20">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:5">x</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <operator pos:start="23:9" pos:end="23:9">(</operator><literal type="number" pos:start="23:10" pos:end="23:12">640</literal><operator pos:start="23:13" pos:end="23:13">/</operator><name pos:start="23:14" pos:end="23:23">FONT_WIDTH</name>  <operator pos:start="23:26" pos:end="23:26">-</operator> <name pos:start="23:28" pos:end="23:30">len</name><operator pos:start="23:31" pos:end="23:31">)</operator> <operator pos:start="23:33" pos:end="23:33">/</operator> <literal type="number" pos:start="23:35" pos:end="23:35">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:36"><expr pos:start="25:5" pos:end="25:35"><name pos:start="25:5" pos:end="25:5">y</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <operator pos:start="25:9" pos:end="25:9">(</operator><literal type="number" pos:start="25:10" pos:end="25:12">480</literal><operator pos:start="25:13" pos:end="25:13">/</operator><name pos:start="25:14" pos:end="25:24">FONT_HEIGHT</name> <operator pos:start="25:26" pos:end="25:26">-</operator> <literal type="number" pos:start="25:28" pos:end="25:28">1</literal><operator pos:start="25:29" pos:end="25:29">)</operator>   <operator pos:start="25:33" pos:end="25:33">/</operator> <literal type="number" pos:start="25:35" pos:end="25:35">2</literal></expr>;</expr_stmt>

    <for pos:start="27:5" pos:end="37:5">for <control pos:start="27:9" pos:end="27:29">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:24"><expr pos:start="27:17" pos:end="27:23"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:23">len</name></expr>;</condition> <incr pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:26">i</name><operator pos:start="27:27" pos:end="27:28">++</operator></expr></incr>)</control> <block pos:start="27:31" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:39">

        <expr_stmt pos:start="29:9" pos:end="29:79"><expr pos:start="29:9" pos:end="29:78"><name pos:start="29:9" pos:end="29:13">glyph</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:78"><name pos:start="29:17" pos:end="29:46">qemu_pixman_glyph_from_vgafont</name><argument_list pos:start="29:47" pos:end="29:78">(<argument pos:start="29:48" pos:end="29:58"><expr pos:start="29:48" pos:end="29:58"><name pos:start="29:48" pos:end="29:58">FONT_HEIGHT</name></expr></argument>, <argument pos:start="29:61" pos:end="29:69"><expr pos:start="29:61" pos:end="29:69"><name pos:start="29:61" pos:end="29:69">vgafont16</name></expr></argument>, <argument pos:start="29:72" pos:end="29:77"><expr pos:start="29:72" pos:end="29:77"><name pos:start="29:72" pos:end="29:77"><name pos:start="29:72" pos:end="29:74">msg</name><index pos:start="29:75" pos:end="29:77">[<expr pos:start="29:76" pos:end="29:76"><name pos:start="29:76" pos:end="29:76">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="33:66"><expr pos:start="31:9" pos:end="33:65"><call pos:start="31:9" pos:end="33:65"><name pos:start="31:9" pos:end="31:32">qemu_pixman_glyph_render</name><argument_list pos:start="31:33" pos:end="33:65">(<argument pos:start="31:34" pos:end="31:38"><expr pos:start="31:34" pos:end="31:38"><name pos:start="31:34" pos:end="31:38">glyph</name></expr></argument>, <argument pos:start="31:41" pos:end="31:54"><expr pos:start="31:41" pos:end="31:54"><name pos:start="31:41" pos:end="31:54"><name pos:start="31:41" pos:end="31:47">surface</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:54">image</name></name></expr></argument>, <argument pos:start="31:57" pos:end="31:59"><expr pos:start="31:57" pos:end="31:59"><operator pos:start="31:57" pos:end="31:57">&amp;</operator><name pos:start="31:58" pos:end="31:59">fg</name></expr></argument>, <argument pos:start="31:62" pos:end="31:64"><expr pos:start="31:62" pos:end="31:64"><operator pos:start="31:62" pos:end="31:62">&amp;</operator><name pos:start="31:63" pos:end="31:64">bg</name></expr></argument>,

                                 <argument pos:start="33:34" pos:end="33:36"><expr pos:start="33:34" pos:end="33:36"><name pos:start="33:34" pos:end="33:34">x</name><operator pos:start="33:35" pos:end="33:35">+</operator><name pos:start="33:36" pos:end="33:36">i</name></expr></argument>, <argument pos:start="33:39" pos:end="33:39"><expr pos:start="33:39" pos:end="33:39"><name pos:start="33:39" pos:end="33:39">y</name></expr></argument>, <argument pos:start="33:42" pos:end="33:51"><expr pos:start="33:42" pos:end="33:51"><name pos:start="33:42" pos:end="33:51">FONT_WIDTH</name></expr></argument>, <argument pos:start="33:54" pos:end="33:64"><expr pos:start="33:54" pos:end="33:64"><name pos:start="33:54" pos:end="33:64">FONT_HEIGHT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:39"><expr pos:start="35:9" pos:end="35:38"><call pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:31">qemu_pixman_image_unref</name><argument_list pos:start="35:32" pos:end="35:38">(<argument pos:start="35:33" pos:end="35:37"><expr pos:start="35:33" pos:end="35:37"><name pos:start="35:33" pos:end="35:37">glyph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="39:5" pos:end="39:19">return <expr pos:start="39:12" pos:end="39:18"><name pos:start="39:12" pos:end="39:18">surface</name></expr>;</return>

</block_content>}</block></function>
</unit>
