<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20397.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">sdhci_data_transfer</name><parameter_list pos:start="1:32" pos:end="1:46">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:42">SDHCIState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:5">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">SDHCIClass</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">k</name> <init pos:start="5:19" pos:end="5:38">= <expr pos:start="5:21" pos:end="5:38"><call pos:start="5:21" pos:end="5:38"><name pos:start="5:21" pos:end="5:35">SDHCI_GET_CLASS</name><argument_list pos:start="5:36" pos:end="5:38">(<argument pos:start="5:37" pos:end="5:37"><expr pos:start="5:37" pos:end="5:37"><name pos:start="5:37" pos:end="5:37">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="117:5"><if pos:start="9:5" pos:end="97:5">if <condition pos:start="9:8" pos:end="9:34">(<expr pos:start="9:9" pos:end="9:33"><name pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:9">s</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:17">trnmod</name></name> <operator pos:start="9:19" pos:end="9:19">&amp;</operator> <name pos:start="9:21" pos:end="9:33">SDHC_TRNS_DMA</name></expr>)</condition> <block pos:start="9:36" pos:end="97:5">{<block_content pos:start="11:9" pos:end="95:9">

        <switch pos:start="11:9" pos:end="95:9">switch <condition pos:start="11:16" pos:end="11:42">(<expr pos:start="11:17" pos:end="11:41"><call pos:start="11:17" pos:end="11:41"><name pos:start="11:17" pos:end="11:29">SDHC_DMA_TYPE</name><argument_list pos:start="11:30" pos:end="11:41">(<argument pos:start="11:31" pos:end="11:40"><expr pos:start="11:31" pos:end="11:40"><name pos:start="11:31" pos:end="11:40"><name pos:start="11:31" pos:end="11:31">s</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:40">hostctl</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:44" pos:end="95:9">{<block_content pos:start="13:9" pos:end="93:18">

        <case pos:start="13:9" pos:end="13:28">case <expr pos:start="13:14" pos:end="13:27"><name pos:start="13:14" pos:end="13:27">SDHC_CTRL_SDMA</name></expr>:</case>

            <if_stmt pos:start="15:13" pos:end="21:13"><if pos:start="15:13" pos:end="21:13">if <condition pos:start="15:16" pos:end="17:76">(<expr pos:start="15:17" pos:end="17:75"><operator pos:start="15:17" pos:end="15:17">(</operator><name pos:start="15:18" pos:end="15:26"><name pos:start="15:18" pos:end="15:18">s</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:26">trnmod</name></name> <operator pos:start="15:28" pos:end="15:28">&amp;</operator> <name pos:start="15:30" pos:end="15:44">SDHC_TRNS_MULTI</name><operator pos:start="15:45" pos:end="15:45">)</operator> <operator pos:start="15:47" pos:end="15:48">&amp;&amp;</operator>

                    <operator pos:start="17:21" pos:end="17:21">(</operator><operator pos:start="17:22" pos:end="17:22">!</operator><operator pos:start="17:23" pos:end="17:23">(</operator><name pos:start="17:24" pos:end="17:32"><name pos:start="17:24" pos:end="17:24">s</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:32">trnmod</name></name> <operator pos:start="17:34" pos:end="17:34">&amp;</operator> <name pos:start="17:36" pos:end="17:55">SDHC_TRNS_BLK_CNT_EN</name><operator pos:start="17:56" pos:end="17:56">)</operator> <operator pos:start="17:58" pos:end="17:59">||</operator> <name pos:start="17:61" pos:end="17:69"><name pos:start="17:61" pos:end="17:61">s</name><operator pos:start="17:62" pos:end="17:63">-&gt;</operator><name pos:start="17:64" pos:end="17:69">blkcnt</name></name> <operator pos:start="17:71" pos:end="17:72">==</operator> <literal type="number" pos:start="17:74" pos:end="17:74">0</literal><operator pos:start="17:75" pos:end="17:75">)</operator></expr>)</condition> <block pos:start="17:78" pos:end="21:13">{<block_content pos:start="19:17" pos:end="19:22">

                <break pos:start="19:17" pos:end="19:22">break;</break>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="25:13" pos:end="33:13"><if pos:start="25:13" pos:end="29:13">if <condition pos:start="25:16" pos:end="25:67">(<expr pos:start="25:17" pos:end="25:66"><operator pos:start="25:17" pos:end="25:17">(</operator><name pos:start="25:18" pos:end="25:26"><name pos:start="25:18" pos:end="25:18">s</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:26">blkcnt</name></name> <operator pos:start="25:28" pos:end="25:29">==</operator> <literal type="number" pos:start="25:31" pos:end="25:31">1</literal><operator pos:start="25:32" pos:end="25:32">)</operator> <operator pos:start="25:34" pos:end="25:35">||</operator> <operator pos:start="25:37" pos:end="25:37">!</operator><operator pos:start="25:38" pos:end="25:38">(</operator><name pos:start="25:39" pos:end="25:47"><name pos:start="25:39" pos:end="25:39">s</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:47">trnmod</name></name> <operator pos:start="25:49" pos:end="25:49">&amp;</operator> <name pos:start="25:51" pos:end="25:65">SDHC_TRNS_MULTI</name><operator pos:start="25:66" pos:end="25:66">)</operator></expr>)</condition> <block pos:start="25:69" pos:end="29:13">{<block_content pos:start="27:17" pos:end="27:37">

                <expr_stmt pos:start="27:17" pos:end="27:37"><expr pos:start="27:17" pos:end="27:36"><call pos:start="27:17" pos:end="27:36"><name pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:17">k</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:33">do_sdma_single</name></name><argument_list pos:start="27:34" pos:end="27:36">(<argument pos:start="27:35" pos:end="27:35"><expr pos:start="27:35" pos:end="27:35"><name pos:start="27:35" pos:end="27:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="29:15" pos:end="33:13">else <block pos:start="29:20" pos:end="33:13">{<block_content pos:start="31:17" pos:end="31:36">

                <expr_stmt pos:start="31:17" pos:end="31:36"><expr pos:start="31:17" pos:end="31:35"><call pos:start="31:17" pos:end="31:35"><name pos:start="31:17" pos:end="31:32"><name pos:start="31:17" pos:end="31:17">k</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:32">do_sdma_multi</name></name><argument_list pos:start="31:33" pos:end="31:35">(<argument pos:start="31:34" pos:end="31:34"><expr pos:start="31:34" pos:end="31:34"><name pos:start="31:34" pos:end="31:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:32">case <expr pos:start="39:14" pos:end="39:31"><name pos:start="39:14" pos:end="39:31">SDHC_CTRL_ADMA1_32</name></expr>:</case>

            <if_stmt pos:start="41:13" pos:end="47:13"><if pos:start="41:13" pos:end="47:13">if <condition pos:start="41:16" pos:end="41:50">(<expr pos:start="41:17" pos:end="41:49"><operator pos:start="41:17" pos:end="41:17">!</operator><operator pos:start="41:18" pos:end="41:18">(</operator><name pos:start="41:19" pos:end="41:28"><name pos:start="41:19" pos:end="41:19">s</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:28">capareg</name></name> <operator pos:start="41:30" pos:end="41:30">&amp;</operator> <name pos:start="41:32" pos:end="41:48">SDHC_CAN_DO_ADMA1</name><operator pos:start="41:49" pos:end="41:49">)</operator></expr>)</condition> <block pos:start="41:52" pos:end="47:13">{<block_content pos:start="43:17" pos:end="45:22">

                <expr_stmt pos:start="43:17" pos:end="43:50"><expr pos:start="43:17" pos:end="43:49"><call pos:start="43:17" pos:end="43:49"><name pos:start="43:17" pos:end="43:24">ERRPRINT</name><argument_list pos:start="43:25" pos:end="43:49">(<argument pos:start="43:26" pos:end="43:48"><expr pos:start="43:26" pos:end="43:48"><literal type="string" pos:start="43:26" pos:end="43:48">"ADMA1 not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="45:17" pos:end="45:22">break;</break>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="51:13" pos:end="51:26"><expr pos:start="51:13" pos:end="51:25"><call pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:13">k</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:22">do_adma</name></name><argument_list pos:start="51:23" pos:end="51:25">(<argument pos:start="51:24" pos:end="51:24"><expr pos:start="51:24" pos:end="51:24"><name pos:start="51:24" pos:end="51:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:32">case <expr pos:start="55:14" pos:end="55:31"><name pos:start="55:14" pos:end="55:31">SDHC_CTRL_ADMA2_32</name></expr>:</case>

            <if_stmt pos:start="57:13" pos:end="63:13"><if pos:start="57:13" pos:end="63:13">if <condition pos:start="57:16" pos:end="57:50">(<expr pos:start="57:17" pos:end="57:49"><operator pos:start="57:17" pos:end="57:17">!</operator><operator pos:start="57:18" pos:end="57:18">(</operator><name pos:start="57:19" pos:end="57:28"><name pos:start="57:19" pos:end="57:19">s</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:28">capareg</name></name> <operator pos:start="57:30" pos:end="57:30">&amp;</operator> <name pos:start="57:32" pos:end="57:48">SDHC_CAN_DO_ADMA2</name><operator pos:start="57:49" pos:end="57:49">)</operator></expr>)</condition> <block pos:start="57:52" pos:end="63:13">{<block_content pos:start="59:17" pos:end="61:22">

                <expr_stmt pos:start="59:17" pos:end="59:50"><expr pos:start="59:17" pos:end="59:49"><call pos:start="59:17" pos:end="59:49"><name pos:start="59:17" pos:end="59:24">ERRPRINT</name><argument_list pos:start="59:25" pos:end="59:49">(<argument pos:start="59:26" pos:end="59:48"><expr pos:start="59:26" pos:end="59:48"><literal type="string" pos:start="59:26" pos:end="59:48">"ADMA2 not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="61:17" pos:end="61:22">break;</break>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="67:13" pos:end="67:26"><expr pos:start="67:13" pos:end="67:25"><call pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:22"><name pos:start="67:13" pos:end="67:13">k</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:22">do_adma</name></name><argument_list pos:start="67:23" pos:end="67:25">(<argument pos:start="67:24" pos:end="67:24"><expr pos:start="67:24" pos:end="67:24"><name pos:start="67:24" pos:end="67:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        <case pos:start="71:9" pos:end="71:32">case <expr pos:start="71:14" pos:end="71:31"><name pos:start="71:14" pos:end="71:31">SDHC_CTRL_ADMA2_64</name></expr>:</case>

            <if_stmt pos:start="73:13" pos:end="81:13"><if pos:start="73:13" pos:end="81:13">if <condition pos:start="73:16" pos:end="75:60">(<expr pos:start="73:17" pos:end="75:59"><operator pos:start="73:17" pos:end="73:17">!</operator><operator pos:start="73:18" pos:end="73:18">(</operator><name pos:start="73:19" pos:end="73:28"><name pos:start="73:19" pos:end="73:19">s</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:28">capareg</name></name> <operator pos:start="73:30" pos:end="73:30">&amp;</operator> <name pos:start="73:32" pos:end="73:48">SDHC_CAN_DO_ADMA2</name><operator pos:start="73:49" pos:end="73:49">)</operator> <operator pos:start="73:51" pos:end="73:52">||</operator>

                    <operator pos:start="75:21" pos:end="75:21">!</operator><operator pos:start="75:22" pos:end="75:22">(</operator><name pos:start="75:23" pos:end="75:32"><name pos:start="75:23" pos:end="75:23">s</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:32">capareg</name></name> <operator pos:start="75:34" pos:end="75:34">&amp;</operator> <name pos:start="75:36" pos:end="75:58">SDHC_64_BIT_BUS_SUPPORT</name><operator pos:start="75:59" pos:end="75:59">)</operator></expr>)</condition> <block pos:start="75:62" pos:end="81:13">{<block_content pos:start="77:17" pos:end="79:22">

                <expr_stmt pos:start="77:17" pos:end="77:56"><expr pos:start="77:17" pos:end="77:55"><call pos:start="77:17" pos:end="77:55"><name pos:start="77:17" pos:end="77:24">ERRPRINT</name><argument_list pos:start="77:25" pos:end="77:55">(<argument pos:start="77:26" pos:end="77:54"><expr pos:start="77:26" pos:end="77:54"><literal type="string" pos:start="77:26" pos:end="77:54">"64 bit ADMA not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="79:17" pos:end="79:22">break;</break>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="85:13" pos:end="85:26"><expr pos:start="85:13" pos:end="85:25"><call pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:22"><name pos:start="85:13" pos:end="85:13">k</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:22">do_adma</name></name><argument_list pos:start="85:23" pos:end="85:25">(<argument pos:start="85:24" pos:end="85:24"><expr pos:start="85:24" pos:end="85:24"><name pos:start="85:24" pos:end="85:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        <default pos:start="89:9" pos:end="89:16">default:</default>

            <expr_stmt pos:start="91:13" pos:end="91:47"><expr pos:start="91:13" pos:end="91:46"><call pos:start="91:13" pos:end="91:46"><name pos:start="91:13" pos:end="91:20">ERRPRINT</name><argument_list pos:start="91:21" pos:end="91:46">(<argument pos:start="91:22" pos:end="91:45"><expr pos:start="91:22" pos:end="91:45"><literal type="string" pos:start="91:22" pos:end="91:45">"Unsupported DMA type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="117:5">else <block pos:start="97:12" pos:end="117:5">{<block_content pos:start="99:9" pos:end="115:9">

        <if_stmt pos:start="99:9" pos:end="115:9"><if pos:start="99:9" pos:end="107:9">if <condition pos:start="99:12" pos:end="99:67">(<expr pos:start="99:13" pos:end="99:66"><operator pos:start="99:13" pos:end="99:13">(</operator><name pos:start="99:14" pos:end="99:22"><name pos:start="99:14" pos:end="99:14">s</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:22">trnmod</name></name> <operator pos:start="99:24" pos:end="99:24">&amp;</operator> <name pos:start="99:26" pos:end="99:39">SDHC_TRNS_READ</name><operator pos:start="99:40" pos:end="99:40">)</operator> <operator pos:start="99:42" pos:end="99:43">&amp;&amp;</operator> <call pos:start="99:45" pos:end="99:66"><name pos:start="99:45" pos:end="99:57">sd_data_ready</name><argument_list pos:start="99:58" pos:end="99:66">(<argument pos:start="99:59" pos:end="99:65"><expr pos:start="99:59" pos:end="99:65"><name pos:start="99:59" pos:end="99:65"><name pos:start="99:59" pos:end="99:59">s</name><operator pos:start="99:60" pos:end="99:61">-&gt;</operator><name pos:start="99:62" pos:end="99:65">card</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:69" pos:end="107:9">{<block_content pos:start="101:13" pos:end="105:56">

            <expr_stmt pos:start="101:13" pos:end="103:41"><expr pos:start="101:13" pos:end="103:40"><name pos:start="101:13" pos:end="101:21"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:21">prnsts</name></name> <operator pos:start="101:23" pos:end="101:24">|=</operator> <name pos:start="101:26" pos:end="101:40">SDHC_DOING_READ</name> <operator pos:start="101:42" pos:end="101:42">|</operator> <name pos:start="101:44" pos:end="101:60">SDHC_DATA_INHIBIT</name> <operator pos:start="101:62" pos:end="101:62">|</operator>

                    <name pos:start="103:21" pos:end="103:40">SDHC_DAT_LINE_ACTIVE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:56"><expr pos:start="105:13" pos:end="105:55"><call pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:27">SDHCI_GET_CLASS</name><argument_list pos:start="105:28" pos:end="105:30">(<argument pos:start="105:29" pos:end="105:29"><expr pos:start="105:29" pos:end="105:29"><name pos:start="105:29" pos:end="105:29">s</name></expr></argument>)</argument_list></call><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><call pos:start="105:33" pos:end="105:55"><name pos:start="105:33" pos:end="105:52">read_block_from_card</name><argument_list pos:start="105:53" pos:end="105:55">(<argument pos:start="105:54" pos:end="105:54"><expr pos:start="105:54" pos:end="105:54"><name pos:start="105:54" pos:end="105:54">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="107:11" pos:end="115:9">else <block pos:start="107:16" pos:end="115:9">{<block_content pos:start="109:13" pos:end="113:55">

            <expr_stmt pos:start="109:13" pos:end="111:61"><expr pos:start="109:13" pos:end="111:60"><name pos:start="109:13" pos:end="109:21"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:21">prnsts</name></name> <operator pos:start="109:23" pos:end="109:24">|=</operator> <name pos:start="109:26" pos:end="109:41">SDHC_DOING_WRITE</name> <operator pos:start="109:43" pos:end="109:43">|</operator> <name pos:start="109:45" pos:end="109:64">SDHC_DAT_LINE_ACTIVE</name> <operator pos:start="109:66" pos:end="109:66">|</operator>

                    <name pos:start="111:21" pos:end="111:40">SDHC_SPACE_AVAILABLE</name> <operator pos:start="111:42" pos:end="111:42">|</operator> <name pos:start="111:44" pos:end="111:60">SDHC_DATA_INHIBIT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:55"><expr pos:start="113:13" pos:end="113:54"><call pos:start="113:13" pos:end="113:30"><name pos:start="113:13" pos:end="113:27">SDHCI_GET_CLASS</name><argument_list pos:start="113:28" pos:end="113:30">(<argument pos:start="113:29" pos:end="113:29"><expr pos:start="113:29" pos:end="113:29"><name pos:start="113:29" pos:end="113:29">s</name></expr></argument>)</argument_list></call><operator pos:start="113:31" pos:end="113:32">-&gt;</operator><call pos:start="113:33" pos:end="113:54"><name pos:start="113:33" pos:end="113:51">write_block_to_card</name><argument_list pos:start="113:52" pos:end="113:54">(<argument pos:start="113:53" pos:end="113:53"><expr pos:start="113:53" pos:end="113:53"><name pos:start="113:53" pos:end="113:53">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
