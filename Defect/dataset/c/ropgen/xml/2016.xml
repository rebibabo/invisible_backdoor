<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2016.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">int64_t</name></type> <name pos:start="1:9" pos:end="1:17">avio_seek</name><parameter_list pos:start="1:18" pos:end="1:61">(<parameter pos:start="1:19" pos:end="1:32"><decl pos:start="1:19" pos:end="1:32"><type pos:start="1:19" pos:end="1:32"><name pos:start="1:19" pos:end="1:29">AVIOContext</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:32">s</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:41">int64_t</name></type> <name pos:start="1:43" pos:end="1:48">offset</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:60">whence</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:18">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:19">offset1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">force</name> <init pos:start="9:15" pos:end="9:37">= <expr pos:start="9:17" pos:end="9:37"><name pos:start="9:17" pos:end="9:22">whence</name> <operator pos:start="9:24" pos:end="9:24">&amp;</operator> <name pos:start="9:26" pos:end="9:37">AVSEEK_FORCE</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:28"><expr pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:10">whence</name> <operator pos:start="11:12" pos:end="11:13">&amp;=</operator> <operator pos:start="11:15" pos:end="11:15">~</operator><name pos:start="11:16" pos:end="11:27">AVSEEK_FORCE</name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if<condition pos:start="15:7" pos:end="15:10">(<expr pos:start="15:8" pos:end="15:9"><operator pos:start="15:8" pos:end="15:8">!</operator><name pos:start="15:9" pos:end="15:9">s</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:66"><expr pos:start="21:5" pos:end="21:65"><name pos:start="21:5" pos:end="21:7">pos</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:16"><name pos:start="21:11" pos:end="21:11">s</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:16">pos</name></name> <operator pos:start="21:18" pos:end="21:18">-</operator> <operator pos:start="21:20" pos:end="21:20">(</operator><ternary pos:start="21:21" pos:end="21:64"><condition pos:start="21:21" pos:end="21:35"><expr pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:33">write_flag</name></name></expr> ?</condition><then pos:start="21:37" pos:end="21:37"> <expr pos:start="21:37" pos:end="21:37"><literal type="number" pos:start="21:37" pos:end="21:37">0</literal></expr> </then><else pos:start="21:39" pos:end="21:64">: <expr pos:start="21:41" pos:end="21:64"><operator pos:start="21:41" pos:end="21:41">(</operator><name pos:start="21:42" pos:end="21:51"><name pos:start="21:42" pos:end="21:42">s</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:51">buf_end</name></name> <operator pos:start="21:53" pos:end="21:53">-</operator> <name pos:start="21:55" pos:end="21:63"><name pos:start="21:55" pos:end="21:55">s</name><operator pos:start="21:56" pos:end="21:57">-&gt;</operator><name pos:start="21:58" pos:end="21:63">buffer</name></name><operator pos:start="21:64" pos:end="21:64">)</operator></expr></else></ternary><operator pos:start="21:65" pos:end="21:65">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:31"><if pos:start="25:5" pos:end="27:31">if <condition pos:start="25:8" pos:end="25:49">(<expr pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:14">whence</name> <operator pos:start="25:16" pos:end="25:17">!=</operator> <name pos:start="25:19" pos:end="25:26">SEEK_CUR</name> <operator pos:start="25:28" pos:end="25:29">&amp;&amp;</operator> <name pos:start="25:31" pos:end="25:36">whence</name> <operator pos:start="25:38" pos:end="25:39">!=</operator> <name pos:start="25:41" pos:end="25:48">SEEK_SET</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="41:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="31:27">(<expr pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:14">whence</name> <operator pos:start="31:16" pos:end="31:17">==</operator> <name pos:start="31:19" pos:end="31:26">SEEK_CUR</name></expr>)</condition> <block pos:start="31:29" pos:end="41:5">{<block_content pos:start="33:9" pos:end="39:26">

        <expr_stmt pos:start="33:9" pos:end="33:49"><expr pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:15">offset1</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:21">pos</name> <operator pos:start="33:23" pos:end="33:23">+</operator> <operator pos:start="33:25" pos:end="33:25">(</operator><name pos:start="33:26" pos:end="33:35"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:35">buf_ptr</name></name> <operator pos:start="33:37" pos:end="33:37">-</operator> <name pos:start="33:39" pos:end="33:47"><name pos:start="33:39" pos:end="33:39">s</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:47">buffer</name></name><operator pos:start="33:48" pos:end="33:48">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:27"><if pos:start="35:9" pos:end="37:27">if <condition pos:start="35:12" pos:end="35:24">(<expr pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:18">offset</name> <operator pos:start="35:20" pos:end="35:21">==</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:27"><block_content pos:start="37:13" pos:end="37:27">

            <return pos:start="37:13" pos:end="37:27">return <expr pos:start="37:20" pos:end="37:26"><name pos:start="37:20" pos:end="37:26">offset1</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:26"><expr pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:14">offset</name> <operator pos:start="39:16" pos:end="39:17">+=</operator> <name pos:start="39:19" pos:end="39:25">offset1</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:27"><expr pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:11">offset1</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:20">offset</name> <operator pos:start="43:22" pos:end="43:22">-</operator> <name pos:start="43:24" pos:end="43:26">pos</name></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="101:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="47:59">(<expr pos:start="45:9" pos:end="47:58"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:22"><name pos:start="45:10" pos:end="45:10">s</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:22">must_flush</name></name> <operator pos:start="45:24" pos:end="45:25">&amp;&amp;</operator>

        <name pos:start="47:9" pos:end="47:15">offset1</name> <operator pos:start="47:17" pos:end="47:18">&gt;=</operator> <literal type="number" pos:start="47:20" pos:end="47:20">0</literal> <operator pos:start="47:22" pos:end="47:23">&amp;&amp;</operator> <name pos:start="47:25" pos:end="47:31">offset1</name> <operator pos:start="47:33" pos:end="47:33">&lt;</operator> <operator pos:start="47:35" pos:end="47:35">(</operator><name pos:start="47:36" pos:end="47:45"><name pos:start="47:36" pos:end="47:36">s</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:45">buf_end</name></name> <operator pos:start="47:47" pos:end="47:47">-</operator> <name pos:start="47:49" pos:end="47:57"><name pos:start="47:49" pos:end="47:49">s</name><operator pos:start="47:50" pos:end="47:51">-&gt;</operator><name pos:start="47:52" pos:end="47:57">buffer</name></name><operator pos:start="47:58" pos:end="47:58">)</operator></expr>)</condition> <block pos:start="47:61" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:41">

        <comment type="block" pos:start="49:9" pos:end="49:47">/* can do the seek inside the buffer */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:41"><expr pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:18">buf_ptr</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:30"><name pos:start="51:22" pos:end="51:22">s</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:30">buffer</name></name> <operator pos:start="51:32" pos:end="51:32">+</operator> <name pos:start="51:34" pos:end="51:40">offset1</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="71:5">else if <condition pos:start="53:15" pos:end="59:44">(<expr pos:start="53:16" pos:end="59:43"><operator pos:start="53:16" pos:end="53:16">(</operator><operator pos:start="53:17" pos:end="53:17">!</operator><name pos:start="53:18" pos:end="53:28"><name pos:start="53:18" pos:end="53:18">s</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:28">seekable</name></name> <operator pos:start="53:30" pos:end="53:31">||</operator>

               <name pos:start="55:16" pos:end="55:22">offset1</name> <operator pos:start="55:24" pos:end="55:25">&lt;=</operator> <name pos:start="55:27" pos:end="55:36"><name pos:start="55:27" pos:end="55:27">s</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:36">buf_end</name></name> <operator pos:start="55:38" pos:end="55:38">+</operator> <name pos:start="55:40" pos:end="55:59">SHORT_SEEK_THRESHOLD</name> <operator pos:start="55:61" pos:end="55:61">-</operator> <name pos:start="55:63" pos:end="55:71"><name pos:start="55:63" pos:end="55:63">s</name><operator pos:start="55:64" pos:end="55:65">-&gt;</operator><name pos:start="55:66" pos:end="55:71">buffer</name></name><operator pos:start="55:72" pos:end="55:72">)</operator> <operator pos:start="55:74" pos:end="55:75">&amp;&amp;</operator>

               <operator pos:start="57:16" pos:end="57:16">!</operator><name pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:29">write_flag</name></name> <operator pos:start="57:31" pos:end="57:32">&amp;&amp;</operator> <name pos:start="57:34" pos:end="57:40">offset1</name> <operator pos:start="57:42" pos:end="57:43">&gt;=</operator> <literal type="number" pos:start="57:45" pos:end="57:45">0</literal> <operator pos:start="57:47" pos:end="57:48">&amp;&amp;</operator>

              <operator pos:start="59:15" pos:end="59:15">(</operator><name pos:start="59:16" pos:end="59:21">whence</name> <operator pos:start="59:23" pos:end="59:24">!=</operator> <name pos:start="59:26" pos:end="59:33">SEEK_END</name> <operator pos:start="59:35" pos:end="59:36">||</operator> <name pos:start="59:38" pos:end="59:42">force</name><operator pos:start="59:43" pos:end="59:43">)</operator></expr>)</condition> <block pos:start="59:46" pos:end="71:5">{<block_content pos:start="61:9" pos:end="69:50">

        <while pos:start="61:9" pos:end="63:27">while<condition pos:start="61:14" pos:end="61:49">(<expr pos:start="61:15" pos:end="61:48"><name pos:start="61:15" pos:end="61:20"><name pos:start="61:15" pos:end="61:15">s</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:20">pos</name></name> <operator pos:start="61:22" pos:end="61:22">&lt;</operator> <name pos:start="61:24" pos:end="61:29">offset</name> <operator pos:start="61:31" pos:end="61:32">&amp;&amp;</operator> <operator pos:start="61:34" pos:end="61:34">!</operator><name pos:start="61:35" pos:end="61:48"><name pos:start="61:35" pos:end="61:35">s</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:48">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:27"><block_content pos:start="63:13" pos:end="63:27">

            <expr_stmt pos:start="63:13" pos:end="63:27"><expr pos:start="63:13" pos:end="63:26"><call pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:23">fill_buffer</name><argument_list pos:start="63:24" pos:end="63:26">(<argument pos:start="63:25" pos:end="63:25"><expr pos:start="63:25" pos:end="63:25"><name pos:start="63:25" pos:end="63:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

        <if_stmt pos:start="65:9" pos:end="67:31"><if pos:start="65:9" pos:end="67:31">if <condition pos:start="65:12" pos:end="65:27">(<expr pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:26">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:31"><block_content pos:start="67:13" pos:end="67:31">

            <return pos:start="67:13" pos:end="67:31">return <expr pos:start="67:20" pos:end="67:30"><name pos:start="67:20" pos:end="67:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:50"><expr pos:start="69:9" pos:end="69:49"><name pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:18">buf_ptr</name></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:31"><name pos:start="69:22" pos:end="69:22">s</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:31">buf_end</name></name> <operator pos:start="69:33" pos:end="69:33">+</operator> <name pos:start="69:35" pos:end="69:40">offset</name> <operator pos:start="69:42" pos:end="69:42">-</operator> <name pos:start="69:44" pos:end="69:49"><name pos:start="69:44" pos:end="69:44">s</name><operator pos:start="69:45" pos:end="69:46">-&gt;</operator><name pos:start="69:47" pos:end="69:49">pos</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="101:5">else <block pos:start="71:12" pos:end="101:5">{<block_content pos:start="73:9" pos:end="99:24">

        <decl_stmt pos:start="73:9" pos:end="73:20"><decl pos:start="73:9" pos:end="73:19"><type pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:15">int64_t</name></type> <name pos:start="73:17" pos:end="73:19">res</name></decl>;</decl_stmt>



        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:26">(<expr pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:25">write_flag</name></name></expr>)</condition> <block pos:start="77:28" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:30">

            <expr_stmt pos:start="79:13" pos:end="79:28"><expr pos:start="79:13" pos:end="79:27"><call pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:24">flush_buffer</name><argument_list pos:start="79:25" pos:end="79:27">(<argument pos:start="79:26" pos:end="79:26"><expr pos:start="79:26" pos:end="79:26"><name pos:start="79:26" pos:end="79:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:30"><expr pos:start="81:13" pos:end="81:29"><name pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:25">must_flush</name></name> <operator pos:start="81:27" pos:end="81:27">=</operator> <literal type="number" pos:start="81:29" pos:end="81:29">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="85:9" pos:end="87:34"><if pos:start="85:9" pos:end="87:34">if <condition pos:start="85:12" pos:end="85:21">(<expr pos:start="85:13" pos:end="85:20"><operator pos:start="85:13" pos:end="85:13">!</operator><name pos:start="85:14" pos:end="85:20"><name pos:start="85:14" pos:end="85:14">s</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:20">seek</name></name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:34"><block_content pos:start="87:13" pos:end="87:34">

            <return pos:start="87:13" pos:end="87:34">return <expr pos:start="87:20" pos:end="87:33"><call pos:start="87:20" pos:end="87:33"><name pos:start="87:20" pos:end="87:26">AVERROR</name><argument_list pos:start="87:27" pos:end="87:33">(<argument pos:start="87:28" pos:end="87:32"><expr pos:start="87:28" pos:end="87:32"><name pos:start="87:28" pos:end="87:32">EPIPE</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="91:23"><if pos:start="89:9" pos:end="91:23">if <condition pos:start="89:12" pos:end="89:61">(<expr pos:start="89:13" pos:end="89:60"><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:16">res</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <call pos:start="89:20" pos:end="89:55"><name pos:start="89:20" pos:end="89:26"><name pos:start="89:20" pos:end="89:20">s</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:26">seek</name></name><argument_list pos:start="89:27" pos:end="89:55">(<argument pos:start="89:28" pos:end="89:36"><expr pos:start="89:28" pos:end="89:36"><name pos:start="89:28" pos:end="89:36"><name pos:start="89:28" pos:end="89:28">s</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:36">opaque</name></name></expr></argument>, <argument pos:start="89:39" pos:end="89:44"><expr pos:start="89:39" pos:end="89:44"><name pos:start="89:39" pos:end="89:44">offset</name></expr></argument>, <argument pos:start="89:47" pos:end="89:54"><expr pos:start="89:47" pos:end="89:54"><name pos:start="89:47" pos:end="89:54">SEEK_SET</name></expr></argument>)</argument_list></call><operator pos:start="89:56" pos:end="89:56">)</operator> <operator pos:start="89:58" pos:end="89:58">&lt;</operator> <literal type="number" pos:start="89:60" pos:end="89:60">0</literal></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:23"><block_content pos:start="91:13" pos:end="91:23">

            <return pos:start="91:13" pos:end="91:23">return <expr pos:start="91:20" pos:end="91:22"><name pos:start="91:20" pos:end="91:22">res</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="93:9" pos:end="95:35"><if pos:start="93:9" pos:end="95:35">if <condition pos:start="93:12" pos:end="93:27">(<expr pos:start="93:13" pos:end="93:26"><operator pos:start="93:13" pos:end="93:13">!</operator><name pos:start="93:14" pos:end="93:26"><name pos:start="93:14" pos:end="93:14">s</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:26">write_flag</name></name></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:35"><block_content pos:start="95:13" pos:end="95:35">

            <expr_stmt pos:start="95:13" pos:end="95:35"><expr pos:start="95:13" pos:end="95:34"><name pos:start="95:13" pos:end="95:22"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:22">buf_end</name></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:34"><name pos:start="95:26" pos:end="95:26">s</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:34">buffer</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:31"><expr pos:start="97:9" pos:end="97:30"><name pos:start="97:9" pos:end="97:18"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:18">buf_ptr</name></name> <operator pos:start="97:20" pos:end="97:20">=</operator> <name pos:start="97:22" pos:end="97:30"><name pos:start="97:22" pos:end="97:22">s</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:30">buffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:24"><expr pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:14"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:14">pos</name></name> <operator pos:start="99:16" pos:end="99:16">=</operator> <name pos:start="99:18" pos:end="99:23">offset</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:23"><expr pos:start="103:5" pos:end="103:22"><name pos:start="103:5" pos:end="103:18"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:18">eof_reached</name></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <literal type="number" pos:start="103:22" pos:end="103:22">0</literal></expr>;</expr_stmt>

    <return pos:start="105:5" pos:end="105:18">return <expr pos:start="105:12" pos:end="105:17"><name pos:start="105:12" pos:end="105:17">offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
