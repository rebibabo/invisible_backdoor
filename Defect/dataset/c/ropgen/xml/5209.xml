<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5209.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">cpu_single_step</name><parameter_list pos:start="1:21" pos:end="1:48">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:29">CPUState</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">cpu</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:47"><decl pos:start="1:37" pos:end="1:47"><type pos:start="1:37" pos:end="1:47"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:47">enabled</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="7:5" pos:end="30:0">

<cpp:if pos:start="5:1" pos:end="5:27">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:27"><call pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:11">defined</name><argument_list pos:start="5:12" pos:end="5:27">(<argument pos:start="5:13" pos:end="5:26"><expr pos:start="5:13" pos:end="5:26"><name pos:start="5:13" pos:end="5:26">TARGET_HAS_ICE</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="7:5" pos:end="30:0"><if pos:start="7:5" pos:end="30:0">if <condition pos:start="7:8" pos:end="7:43">(<expr pos:start="7:9" pos:end="7:42"><name pos:start="7:9" pos:end="7:31"><name pos:start="7:9" pos:end="7:11">cpu</name><operator pos:start="7:12" pos:end="7:13">-&gt;</operator><name pos:start="7:14" pos:end="7:31">singlestep_enabled</name></name> <operator pos:start="7:33" pos:end="7:34">!=</operator> <name pos:start="7:36" pos:end="7:42">enabled</name></expr>)</condition> <block pos:start="7:45" pos:end="30:0">{<block_content pos:start="9:9" pos:end="25:9">

        <expr_stmt pos:start="9:9" pos:end="9:42"><expr pos:start="9:9" pos:end="9:41"><name pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:11">cpu</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:31">singlestep_enabled</name></name> <operator pos:start="9:33" pos:end="9:33">=</operator> <name pos:start="9:35" pos:end="9:41">enabled</name></expr>;</expr_stmt>

        <if_stmt pos:start="11:9" pos:end="25:9"><if pos:start="11:9" pos:end="15:9">if <condition pos:start="11:12" pos:end="11:26">(<expr pos:start="11:13" pos:end="11:25"><call pos:start="11:13" pos:end="11:25"><name pos:start="11:13" pos:end="11:23">kvm_enabled</name><argument_list pos:start="11:24" pos:end="11:25">()</argument_list></call></expr>)</condition> <block pos:start="11:28" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:43">

            <expr_stmt pos:start="13:13" pos:end="13:43"><expr pos:start="13:13" pos:end="13:42"><call pos:start="13:13" pos:end="13:42"><name pos:start="13:13" pos:end="13:34">kvm_update_guest_debug</name><argument_list pos:start="13:35" pos:end="13:42">(<argument pos:start="13:36" pos:end="13:38"><expr pos:start="13:36" pos:end="13:38"><name pos:start="13:36" pos:end="13:38">cpu</name></expr></argument>, <argument pos:start="13:41" pos:end="13:41"><expr pos:start="13:41" pos:end="13:41"><literal type="number" pos:start="13:41" pos:end="13:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="15:11" pos:end="25:9">else <block pos:start="15:16" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:26">

            <comment type="block" pos:start="17:13" pos:end="17:77">/* must flush all the translated code to avoid inconsistencies */</comment>

            <comment type="block" pos:start="19:13" pos:end="19:51">/* XXX: only flush what is necessary */</comment>

            <decl_stmt pos:start="21:13" pos:end="21:45"><decl pos:start="21:13" pos:end="21:44"><type pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:24">CPUArchState</name> <modifier pos:start="21:26" pos:end="21:26">*</modifier></type><name pos:start="21:27" pos:end="21:29">env</name> <init pos:start="21:31" pos:end="21:44">= <expr pos:start="21:33" pos:end="21:44"><name pos:start="21:33" pos:end="21:44"><name pos:start="21:33" pos:end="21:35">cpu</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:44">env_ptr</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:26"><expr pos:start="23:13" pos:end="23:25"><call pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:20">tb_flush</name><argument_list pos:start="23:21" pos:end="23:25">(<argument pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
