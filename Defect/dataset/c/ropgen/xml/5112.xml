<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5112.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:35">tlb_update_dirty</name><parameter_list pos:start="1:36" pos:end="1:59">(<parameter pos:start="1:37" pos:end="1:58"><decl pos:start="1:37" pos:end="1:58"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:47">CPUTLBEntry</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:58">tlb_entry</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:5">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:14">ram_addr_t</name></type> <name pos:start="5:16" pos:end="5:23">ram_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">void</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">p</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="25:5"><if pos:start="11:5" pos:end="25:5">if <condition pos:start="11:8" pos:end="11:75">(<expr pos:start="11:9" pos:end="11:74"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:30"><name pos:start="11:10" pos:end="11:18">tlb_entry</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:30">addr_write</name></name> <operator pos:start="11:32" pos:end="11:32">&amp;</operator> <operator pos:start="11:34" pos:end="11:34">~</operator><name pos:start="11:35" pos:end="11:50">TARGET_PAGE_MASK</name><operator pos:start="11:51" pos:end="11:51">)</operator> <operator pos:start="11:53" pos:end="11:54">==</operator> <name pos:start="11:56" pos:end="11:74"><name pos:start="11:56" pos:end="11:65">io_mem_ram</name><operator pos:start="11:66" pos:end="11:66">.</operator><name pos:start="11:67" pos:end="11:74">ram_addr</name></name></expr>)</condition> <block pos:start="11:77" pos:end="25:5">{<block_content pos:start="13:9" pos:end="23:9">

        <expr_stmt pos:start="13:9" pos:end="15:33"><expr pos:start="13:9" pos:end="15:32"><name pos:start="13:9" pos:end="13:9">p</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <operator pos:start="13:13" pos:end="13:13">(</operator><name pos:start="13:14" pos:end="13:17">void</name> <operator pos:start="13:19" pos:end="13:19">*</operator><operator pos:start="13:20" pos:end="13:20">)</operator><operator pos:start="13:21" pos:end="13:21">(</operator><name pos:start="13:22" pos:end="13:29">unsigned</name> <name pos:start="13:31" pos:end="13:34">long</name><operator pos:start="13:35" pos:end="13:35">)</operator><operator pos:start="13:36" pos:end="13:36">(</operator><operator pos:start="13:37" pos:end="13:37">(</operator><name pos:start="13:38" pos:end="13:58"><name pos:start="13:38" pos:end="13:46">tlb_entry</name><operator pos:start="13:47" pos:end="13:48">-&gt;</operator><name pos:start="13:49" pos:end="13:58">addr_write</name></name> <operator pos:start="13:60" pos:end="13:60">&amp;</operator> <name pos:start="13:62" pos:end="13:77">TARGET_PAGE_MASK</name><operator pos:start="13:78" pos:end="13:78">)</operator>

            <operator pos:start="15:13" pos:end="15:13">+</operator> <name pos:start="15:15" pos:end="15:31"><name pos:start="15:15" pos:end="15:23">tlb_entry</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:31">addend</name></name><operator pos:start="15:32" pos:end="15:32">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:53"><expr pos:start="17:9" pos:end="17:52"><name pos:start="17:9" pos:end="17:16">ram_addr</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:52"><name pos:start="17:20" pos:end="17:49">qemu_ram_addr_from_host_nofail</name><argument_list pos:start="17:50" pos:end="17:52">(<argument pos:start="17:51" pos:end="17:51"><expr pos:start="17:51" pos:end="17:51"><name pos:start="17:51" pos:end="17:51">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:52">(<expr pos:start="19:13" pos:end="19:51"><operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:51"><name pos:start="19:14" pos:end="19:41">cpu_physical_memory_is_dirty</name><argument_list pos:start="19:42" pos:end="19:51">(<argument pos:start="19:43" pos:end="19:50"><expr pos:start="19:43" pos:end="19:50"><name pos:start="19:43" pos:end="19:50">ram_addr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:54" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:50">

            <expr_stmt pos:start="21:13" pos:end="21:50"><expr pos:start="21:13" pos:end="21:49"><name pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:21">tlb_entry</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:33">addr_write</name></name> <operator pos:start="21:35" pos:end="21:36">|=</operator> <name pos:start="21:38" pos:end="21:49">TLB_NOTDIRTY</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
