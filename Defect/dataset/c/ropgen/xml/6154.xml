<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6154.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">qemu_rbd_open</name><parameter_list pos:start="1:25" pos:end="3:38">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:41">BlockDriverState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">bs</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:61"><name pos:start="1:48" pos:end="1:52">QDict</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:61">options</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:72"><decl pos:start="1:64" pos:end="1:72"><type pos:start="1:64" pos:end="1:72"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:72">flags</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:37"><decl pos:start="3:26" pos:end="3:37"><type pos:start="3:26" pos:end="3:37"><name pos:start="3:26" pos:end="3:30">Error</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier><modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:37">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="201:1">{<block_content pos:start="7:5" pos:end="199:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BDRVRBDState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:32">= <expr pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:32"><name pos:start="7:23" pos:end="7:24">bs</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:37"><name pos:start="9:10" pos:end="9:13">pool</name><index pos:start="9:14" pos:end="9:37">[<expr pos:start="9:15" pos:end="9:36"><name pos:start="9:15" pos:end="9:36">RBD_MAX_POOL_NAME_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:41"><name pos:start="11:10" pos:end="11:17">snap_buf</name><index pos:start="11:18" pos:end="11:41">[<expr pos:start="11:19" pos:end="11:40"><name pos:start="11:19" pos:end="11:40">RBD_MAX_SNAP_NAME_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:32"><name pos:start="13:10" pos:end="13:13">conf</name><index pos:start="13:14" pos:end="13:32">[<expr pos:start="13:15" pos:end="13:31"><name pos:start="13:15" pos:end="13:31">RBD_MAX_CONF_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:43"><decl pos:start="15:5" pos:end="15:42"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:42"><name pos:start="15:10" pos:end="15:23">clientname_buf</name><index pos:start="15:24" pos:end="15:42">[<expr pos:start="15:25" pos:end="15:41"><name pos:start="15:25" pos:end="15:41">RBD_MAX_CONF_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:20">clientname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">QemuOpts</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:28"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:9">Error</name> <modifier pos:start="21:11" pos:end="21:11">*</modifier></type><name pos:start="21:12" pos:end="21:20">local_err</name> <init pos:start="21:22" pos:end="21:27">= <expr pos:start="21:24" pos:end="21:27"><name pos:start="21:24" pos:end="21:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:24"><type pos:start="23:5" pos:end="23:16"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:14">char</name> <modifier pos:start="23:16" pos:end="23:16">*</modifier></type><name pos:start="23:17" pos:end="23:24">filename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:66"><expr pos:start="29:5" pos:end="29:65"><name pos:start="29:5" pos:end="29:8">opts</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:65"><name pos:start="29:12" pos:end="29:27">qemu_opts_create</name><argument_list pos:start="29:28" pos:end="29:65">(<argument pos:start="29:29" pos:end="29:41"><expr pos:start="29:29" pos:end="29:41"><operator pos:start="29:29" pos:end="29:29">&amp;</operator><name pos:start="29:30" pos:end="29:41">runtime_opts</name></expr></argument>, <argument pos:start="29:44" pos:end="29:47"><expr pos:start="29:44" pos:end="29:47"><name pos:start="29:44" pos:end="29:47">NULL</name></expr></argument>, <argument pos:start="29:50" pos:end="29:50"><expr pos:start="29:50" pos:end="29:50"><literal type="number" pos:start="29:50" pos:end="29:50">0</literal></expr></argument>, <argument pos:start="29:53" pos:end="29:64"><expr pos:start="29:53" pos:end="29:64"><operator pos:start="29:53" pos:end="29:53">&amp;</operator><name pos:start="29:54" pos:end="29:64">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><call pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:26">qemu_opts_absorb_qdict</name><argument_list pos:start="31:27" pos:end="31:53">(<argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><name pos:start="31:28" pos:end="31:31">opts</name></expr></argument>, <argument pos:start="31:34" pos:end="31:40"><expr pos:start="31:34" pos:end="31:40"><name pos:start="31:34" pos:end="31:40">options</name></expr></argument>, <argument pos:start="31:43" pos:end="31:52"><expr pos:start="31:43" pos:end="31:52"><operator pos:start="31:43" pos:end="31:43">&amp;</operator><name pos:start="31:44" pos:end="31:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:17">local_err</name></expr>)</condition> <block pos:start="33:20" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:23">

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><call pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:23">error_propagate</name><argument_list pos:start="35:24" pos:end="35:40">(<argument pos:start="35:25" pos:end="35:28"><expr pos:start="35:25" pos:end="35:28"><name pos:start="35:25" pos:end="35:28">errp</name></expr></argument>, <argument pos:start="35:31" pos:end="35:39"><expr pos:start="35:31" pos:end="35:39"><name pos:start="35:31" pos:end="35:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:28"><expr pos:start="37:9" pos:end="37:27"><call pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:21">qemu_opts_del</name><argument_list pos:start="37:22" pos:end="37:27">(<argument pos:start="37:23" pos:end="37:26"><expr pos:start="37:23" pos:end="37:26"><name pos:start="37:23" pos:end="37:26">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:23">return <expr pos:start="39:16" pos:end="39:22"><operator pos:start="39:16" pos:end="39:16">-</operator><name pos:start="39:17" pos:end="39:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:46"><expr pos:start="45:5" pos:end="45:45"><name pos:start="45:5" pos:end="45:12">filename</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <call pos:start="45:16" pos:end="45:45"><name pos:start="45:16" pos:end="45:27">qemu_opt_get</name><argument_list pos:start="45:28" pos:end="45:45">(<argument pos:start="45:29" pos:end="45:32"><expr pos:start="45:29" pos:end="45:32"><name pos:start="45:29" pos:end="45:32">opts</name></expr></argument>, <argument pos:start="45:35" pos:end="45:44"><expr pos:start="45:35" pos:end="45:44"><literal type="string" pos:start="45:35" pos:end="45:44">"filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="61:5"><if pos:start="49:5" pos:end="61:5">if <condition pos:start="49:8" pos:end="55:57">(<expr pos:start="49:9" pos:end="55:56"><call pos:start="49:9" pos:end="55:52"><name pos:start="49:9" pos:end="49:26">qemu_rbd_parsename</name><argument_list pos:start="49:27" pos:end="55:52">(<argument pos:start="49:28" pos:end="49:35"><expr pos:start="49:28" pos:end="49:35"><name pos:start="49:28" pos:end="49:35">filename</name></expr></argument>, <argument pos:start="49:38" pos:end="49:41"><expr pos:start="49:38" pos:end="49:41"><name pos:start="49:38" pos:end="49:41">pool</name></expr></argument>, <argument pos:start="49:44" pos:end="49:55"><expr pos:start="49:44" pos:end="49:55"><sizeof pos:start="49:44" pos:end="49:55">sizeof<argument_list pos:start="49:50" pos:end="49:55">(<argument pos:start="49:51" pos:end="49:54"><expr pos:start="49:51" pos:end="49:54"><name pos:start="49:51" pos:end="49:54">pool</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="51:28" pos:end="51:35"><expr pos:start="51:28" pos:end="51:35"><name pos:start="51:28" pos:end="51:35">snap_buf</name></expr></argument>, <argument pos:start="51:38" pos:end="51:53"><expr pos:start="51:38" pos:end="51:53"><sizeof pos:start="51:38" pos:end="51:53">sizeof<argument_list pos:start="51:44" pos:end="51:53">(<argument pos:start="51:45" pos:end="51:52"><expr pos:start="51:45" pos:end="51:52"><name pos:start="51:45" pos:end="51:52">snap_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="53:28" pos:end="53:34"><expr pos:start="53:28" pos:end="53:34"><name pos:start="53:28" pos:end="53:34"><name pos:start="53:28" pos:end="53:28">s</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:34">name</name></name></expr></argument>, <argument pos:start="53:37" pos:end="53:51"><expr pos:start="53:37" pos:end="53:51"><sizeof pos:start="53:37" pos:end="53:51">sizeof<argument_list pos:start="53:43" pos:end="53:51">(<argument pos:start="53:44" pos:end="53:50"><expr pos:start="53:44" pos:end="53:50"><name pos:start="53:44" pos:end="53:50"><name pos:start="53:44" pos:end="53:44">s</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:50">name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="55:28" pos:end="55:31"><expr pos:start="55:28" pos:end="55:31"><name pos:start="55:28" pos:end="55:31">conf</name></expr></argument>, <argument pos:start="55:34" pos:end="55:45"><expr pos:start="55:34" pos:end="55:45"><sizeof pos:start="55:34" pos:end="55:45">sizeof<argument_list pos:start="55:40" pos:end="55:45">(<argument pos:start="55:41" pos:end="55:44"><expr pos:start="55:41" pos:end="55:44"><name pos:start="55:41" pos:end="55:44">conf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="55:48" pos:end="55:51"><expr pos:start="55:48" pos:end="55:51"><name pos:start="55:48" pos:end="55:51">errp</name></expr></argument>)</argument_list></call> <operator pos:start="55:54" pos:end="55:54">&lt;</operator> <literal type="number" pos:start="55:56" pos:end="55:56">0</literal></expr>)</condition> <block pos:start="55:59" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:25">

        <expr_stmt pos:start="57:9" pos:end="57:20"><expr pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:9">r</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <operator pos:start="57:13" pos:end="57:13">-</operator><name pos:start="57:14" pos:end="57:19">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:25">goto <name pos:start="59:14" pos:end="59:24">failed_opts</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:65"><expr pos:start="65:5" pos:end="65:64"><name pos:start="65:5" pos:end="65:14">clientname</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <call pos:start="65:18" pos:end="65:64"><name pos:start="65:18" pos:end="65:42">qemu_rbd_parse_clientname</name><argument_list pos:start="65:43" pos:end="65:64">(<argument pos:start="65:44" pos:end="65:47"><expr pos:start="65:44" pos:end="65:47"><name pos:start="65:44" pos:end="65:47">conf</name></expr></argument>, <argument pos:start="65:50" pos:end="65:63"><expr pos:start="65:50" pos:end="65:63"><name pos:start="65:50" pos:end="65:63">clientname_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:46"><expr pos:start="67:5" pos:end="67:45"><name pos:start="67:5" pos:end="67:5">r</name> <operator pos:start="67:7" pos:end="67:7">=</operator> <call pos:start="67:9" pos:end="67:45"><name pos:start="67:9" pos:end="67:20">rados_create</name><argument_list pos:start="67:21" pos:end="67:45">(<argument pos:start="67:22" pos:end="67:32"><expr pos:start="67:22" pos:end="67:32"><operator pos:start="67:22" pos:end="67:22">&amp;</operator><name pos:start="67:23" pos:end="67:32"><name pos:start="67:23" pos:end="67:23">s</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:32">cluster</name></name></expr></argument>, <argument pos:start="67:35" pos:end="67:44"><expr pos:start="67:35" pos:end="67:44"><name pos:start="67:35" pos:end="67:44">clientname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:14">(<expr pos:start="69:9" pos:end="69:13"><name pos:start="69:9" pos:end="69:9">r</name> <operator pos:start="69:11" pos:end="69:11">&lt;</operator> <literal type="number" pos:start="69:13" pos:end="69:13">0</literal></expr>)</condition> <block pos:start="69:16" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:25">

        <expr_stmt pos:start="71:9" pos:end="71:53"><expr pos:start="71:9" pos:end="71:52"><call pos:start="71:9" pos:end="71:52"><name pos:start="71:9" pos:end="71:18">error_setg</name><argument_list pos:start="71:19" pos:end="71:52">(<argument pos:start="71:20" pos:end="71:29"><expr pos:start="71:20" pos:end="71:29"><operator pos:start="71:20" pos:end="71:20">&amp;</operator><name pos:start="71:21" pos:end="71:29">local_err</name></expr></argument>, <argument pos:start="71:32" pos:end="71:51"><expr pos:start="71:32" pos:end="71:51"><literal type="string" pos:start="71:32" pos:end="71:51">"error initializing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:25">goto <name pos:start="73:14" pos:end="73:24">failed_opts</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:19"><expr pos:start="79:5" pos:end="79:18"><name pos:start="79:5" pos:end="79:11"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:11">snap</name></name> <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:18">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="85:5"><if pos:start="81:5" pos:end="85:5">if <condition pos:start="81:8" pos:end="81:28">(<expr pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:16">snap_buf</name><index pos:start="81:17" pos:end="81:19">[<expr pos:start="81:18" pos:end="81:18"><literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>]</index></name> <operator pos:start="81:21" pos:end="81:22">!=</operator> <literal type="char" pos:start="81:24" pos:end="81:27">'\0'</literal></expr>)</condition> <block pos:start="81:30" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:37">

        <expr_stmt pos:start="83:9" pos:end="83:37"><expr pos:start="83:9" pos:end="83:36"><name pos:start="83:9" pos:end="83:15"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:15">snap</name></name> <operator pos:start="83:17" pos:end="83:17">=</operator> <call pos:start="83:19" pos:end="83:36"><name pos:start="83:19" pos:end="83:26">g_strdup</name><argument_list pos:start="83:27" pos:end="83:36">(<argument pos:start="83:28" pos:end="83:35"><expr pos:start="83:28" pos:end="83:35"><name pos:start="83:28" pos:end="83:35">snap_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="89:5" pos:end="101:7">/*

     * Fallback to more conservative semantics if setting cache

     * options fails. Ignore errors from setting rbd_cache because the

     * only possible error is that the option does not exist, and

     * librbd defaults to no caching. If write through caching cannot

     * be set up, fall back to no caching.

     */</comment>

    <if_stmt pos:start="103:5" pos:end="111:5"><if pos:start="103:5" pos:end="107:5">if <condition pos:start="103:8" pos:end="103:31">(<expr pos:start="103:9" pos:end="103:30"><name pos:start="103:9" pos:end="103:13">flags</name> <operator pos:start="103:15" pos:end="103:15">&amp;</operator> <name pos:start="103:17" pos:end="103:30">BDRV_O_NOCACHE</name></expr>)</condition> <block pos:start="103:33" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:57">

        <expr_stmt pos:start="105:9" pos:end="105:57"><expr pos:start="105:9" pos:end="105:56"><call pos:start="105:9" pos:end="105:56"><name pos:start="105:9" pos:end="105:22">rados_conf_set</name><argument_list pos:start="105:23" pos:end="105:56">(<argument pos:start="105:24" pos:end="105:33"><expr pos:start="105:24" pos:end="105:33"><name pos:start="105:24" pos:end="105:33"><name pos:start="105:24" pos:end="105:24">s</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:33">cluster</name></name></expr></argument>, <argument pos:start="105:36" pos:end="105:46"><expr pos:start="105:36" pos:end="105:46"><literal type="string" pos:start="105:36" pos:end="105:46">"rbd_cache"</literal></expr></argument>, <argument pos:start="105:49" pos:end="105:55"><expr pos:start="105:49" pos:end="105:55"><literal type="string" pos:start="105:49" pos:end="105:55">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="107:7" pos:end="111:5">else <block pos:start="107:12" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:56">

        <expr_stmt pos:start="109:9" pos:end="109:56"><expr pos:start="109:9" pos:end="109:55"><call pos:start="109:9" pos:end="109:55"><name pos:start="109:9" pos:end="109:22">rados_conf_set</name><argument_list pos:start="109:23" pos:end="109:55">(<argument pos:start="109:24" pos:end="109:33"><expr pos:start="109:24" pos:end="109:33"><name pos:start="109:24" pos:end="109:33"><name pos:start="109:24" pos:end="109:24">s</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:33">cluster</name></name></expr></argument>, <argument pos:start="109:36" pos:end="109:46"><expr pos:start="109:36" pos:end="109:46"><literal type="string" pos:start="109:36" pos:end="109:46">"rbd_cache"</literal></expr></argument>, <argument pos:start="109:49" pos:end="109:54"><expr pos:start="109:49" pos:end="109:54"><literal type="string" pos:start="109:49" pos:end="109:54">"true"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:38">(<expr pos:start="115:9" pos:end="115:37"><call pos:start="115:9" pos:end="115:29"><name pos:start="115:9" pos:end="115:14">strstr</name><argument_list pos:start="115:15" pos:end="115:29">(<argument pos:start="115:16" pos:end="115:19"><expr pos:start="115:16" pos:end="115:19"><name pos:start="115:16" pos:end="115:19">conf</name></expr></argument>, <argument pos:start="115:22" pos:end="115:28"><expr pos:start="115:22" pos:end="115:28"><literal type="string" pos:start="115:22" pos:end="115:28">"conf="</literal></expr></argument>)</argument_list></call> <operator pos:start="115:31" pos:end="115:32">==</operator> <name pos:start="115:34" pos:end="115:37">NULL</name></expr>)</condition> <block pos:start="115:40" pos:end="121:5">{<block_content pos:start="119:9" pos:end="119:47">

        <comment type="block" pos:start="117:9" pos:end="117:54">/* try default location, but ignore failure */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:47"><expr pos:start="119:9" pos:end="119:46"><call pos:start="119:9" pos:end="119:46"><name pos:start="119:9" pos:end="119:28">rados_conf_read_file</name><argument_list pos:start="119:29" pos:end="119:46">(<argument pos:start="119:30" pos:end="119:39"><expr pos:start="119:30" pos:end="119:39"><name pos:start="119:30" pos:end="119:39"><name pos:start="119:30" pos:end="119:30">s</name><operator pos:start="119:31" pos:end="119:32">-&gt;</operator><name pos:start="119:33" pos:end="119:39">cluster</name></name></expr></argument>, <argument pos:start="119:42" pos:end="119:45"><expr pos:start="119:42" pos:end="119:45"><name pos:start="119:42" pos:end="119:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="125:5" pos:end="135:5"><if pos:start="125:5" pos:end="135:5">if <condition pos:start="125:8" pos:end="125:24">(<expr pos:start="125:9" pos:end="125:23"><name pos:start="125:9" pos:end="125:15"><name pos:start="125:9" pos:end="125:12">conf</name><index pos:start="125:13" pos:end="125:15">[<expr pos:start="125:14" pos:end="125:14"><literal type="number" pos:start="125:14" pos:end="125:14">0</literal></expr>]</index></name> <operator pos:start="125:17" pos:end="125:18">!=</operator> <literal type="char" pos:start="125:20" pos:end="125:23">'\0'</literal></expr>)</condition> <block pos:start="125:26" pos:end="135:5">{<block_content pos:start="127:9" pos:end="133:9">

        <expr_stmt pos:start="127:9" pos:end="127:54"><expr pos:start="127:9" pos:end="127:53"><name pos:start="127:9" pos:end="127:9">r</name> <operator pos:start="127:11" pos:end="127:11">=</operator> <call pos:start="127:13" pos:end="127:53"><name pos:start="127:13" pos:end="127:29">qemu_rbd_set_conf</name><argument_list pos:start="127:30" pos:end="127:53">(<argument pos:start="127:31" pos:end="127:40"><expr pos:start="127:31" pos:end="127:40"><name pos:start="127:31" pos:end="127:40"><name pos:start="127:31" pos:end="127:31">s</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:40">cluster</name></name></expr></argument>, <argument pos:start="127:43" pos:end="127:46"><expr pos:start="127:43" pos:end="127:46"><name pos:start="127:43" pos:end="127:46">conf</name></expr></argument>, <argument pos:start="127:49" pos:end="127:52"><expr pos:start="127:49" pos:end="127:52"><name pos:start="127:49" pos:end="127:52">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="133:9"><if pos:start="129:9" pos:end="133:9">if <condition pos:start="129:12" pos:end="129:18">(<expr pos:start="129:13" pos:end="129:17"><name pos:start="129:13" pos:end="129:13">r</name> <operator pos:start="129:15" pos:end="129:15">&lt;</operator> <literal type="number" pos:start="129:17" pos:end="129:17">0</literal></expr>)</condition> <block pos:start="129:20" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:33">

            <goto pos:start="131:13" pos:end="131:33">goto <name pos:start="131:18" pos:end="131:32">failed_shutdown</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:34"><expr pos:start="139:5" pos:end="139:33"><name pos:start="139:5" pos:end="139:5">r</name> <operator pos:start="139:7" pos:end="139:7">=</operator> <call pos:start="139:9" pos:end="139:33"><name pos:start="139:9" pos:end="139:21">rados_connect</name><argument_list pos:start="139:22" pos:end="139:33">(<argument pos:start="139:23" pos:end="139:32"><expr pos:start="139:23" pos:end="139:32"><name pos:start="139:23" pos:end="139:32"><name pos:start="139:23" pos:end="139:23">s</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:32">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="147:5"><if pos:start="141:5" pos:end="147:5">if <condition pos:start="141:8" pos:end="141:14">(<expr pos:start="141:9" pos:end="141:13"><name pos:start="141:9" pos:end="141:9">r</name> <operator pos:start="141:11" pos:end="141:11">&lt;</operator> <literal type="number" pos:start="141:13" pos:end="141:13">0</literal></expr>)</condition> <block pos:start="141:16" pos:end="147:5">{<block_content pos:start="143:9" pos:end="145:29">

        <expr_stmt pos:start="143:9" pos:end="143:51"><expr pos:start="143:9" pos:end="143:50"><call pos:start="143:9" pos:end="143:50"><name pos:start="143:9" pos:end="143:18">error_setg</name><argument_list pos:start="143:19" pos:end="143:50">(<argument pos:start="143:20" pos:end="143:29"><expr pos:start="143:20" pos:end="143:29"><operator pos:start="143:20" pos:end="143:20">&amp;</operator><name pos:start="143:21" pos:end="143:29">local_err</name></expr></argument>, <argument pos:start="143:32" pos:end="143:49"><expr pos:start="143:32" pos:end="143:49"><literal type="string" pos:start="143:32" pos:end="143:49">"error connecting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="145:9" pos:end="145:29">goto <name pos:start="145:14" pos:end="145:28">failed_shutdown</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:57"><expr pos:start="151:5" pos:end="151:56"><name pos:start="151:5" pos:end="151:5">r</name> <operator pos:start="151:7" pos:end="151:7">=</operator> <call pos:start="151:9" pos:end="151:56"><name pos:start="151:9" pos:end="151:26">rados_ioctx_create</name><argument_list pos:start="151:27" pos:end="151:56">(<argument pos:start="151:28" pos:end="151:37"><expr pos:start="151:28" pos:end="151:37"><name pos:start="151:28" pos:end="151:37"><name pos:start="151:28" pos:end="151:28">s</name><operator pos:start="151:29" pos:end="151:30">-&gt;</operator><name pos:start="151:31" pos:end="151:37">cluster</name></name></expr></argument>, <argument pos:start="151:40" pos:end="151:43"><expr pos:start="151:40" pos:end="151:43"><name pos:start="151:40" pos:end="151:43">pool</name></expr></argument>, <argument pos:start="151:46" pos:end="151:55"><expr pos:start="151:46" pos:end="151:55"><operator pos:start="151:46" pos:end="151:46">&amp;</operator><name pos:start="151:47" pos:end="151:55"><name pos:start="151:47" pos:end="151:47">s</name><operator pos:start="151:48" pos:end="151:49">-&gt;</operator><name pos:start="151:50" pos:end="151:55">io_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="159:5"><if pos:start="153:5" pos:end="159:5">if <condition pos:start="153:8" pos:end="153:14">(<expr pos:start="153:9" pos:end="153:13"><name pos:start="153:9" pos:end="153:9">r</name> <operator pos:start="153:11" pos:end="153:11">&lt;</operator> <literal type="number" pos:start="153:13" pos:end="153:13">0</literal></expr>)</condition> <block pos:start="153:16" pos:end="159:5">{<block_content pos:start="155:9" pos:end="157:29">

        <expr_stmt pos:start="155:9" pos:end="155:62"><expr pos:start="155:9" pos:end="155:61"><call pos:start="155:9" pos:end="155:61"><name pos:start="155:9" pos:end="155:18">error_setg</name><argument_list pos:start="155:19" pos:end="155:61">(<argument pos:start="155:20" pos:end="155:29"><expr pos:start="155:20" pos:end="155:29"><operator pos:start="155:20" pos:end="155:20">&amp;</operator><name pos:start="155:21" pos:end="155:29">local_err</name></expr></argument>, <argument pos:start="155:32" pos:end="155:54"><expr pos:start="155:32" pos:end="155:54"><literal type="string" pos:start="155:32" pos:end="155:54">"error opening pool %s"</literal></expr></argument>, <argument pos:start="155:57" pos:end="155:60"><expr pos:start="155:57" pos:end="155:60"><name pos:start="155:57" pos:end="155:60">pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="157:9" pos:end="157:29">goto <name pos:start="157:14" pos:end="157:28">failed_shutdown</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:57"><expr pos:start="163:5" pos:end="163:56"><name pos:start="163:5" pos:end="163:5">r</name> <operator pos:start="163:7" pos:end="163:7">=</operator> <call pos:start="163:9" pos:end="163:56"><name pos:start="163:9" pos:end="163:16">rbd_open</name><argument_list pos:start="163:17" pos:end="163:56">(<argument pos:start="163:18" pos:end="163:26"><expr pos:start="163:18" pos:end="163:26"><name pos:start="163:18" pos:end="163:26"><name pos:start="163:18" pos:end="163:18">s</name><operator pos:start="163:19" pos:end="163:20">-&gt;</operator><name pos:start="163:21" pos:end="163:26">io_ctx</name></name></expr></argument>, <argument pos:start="163:29" pos:end="163:35"><expr pos:start="163:29" pos:end="163:35"><name pos:start="163:29" pos:end="163:35"><name pos:start="163:29" pos:end="163:29">s</name><operator pos:start="163:30" pos:end="163:31">-&gt;</operator><name pos:start="163:32" pos:end="163:35">name</name></name></expr></argument>, <argument pos:start="163:38" pos:end="163:46"><expr pos:start="163:38" pos:end="163:46"><operator pos:start="163:38" pos:end="163:38">&amp;</operator><name pos:start="163:39" pos:end="163:46"><name pos:start="163:39" pos:end="163:39">s</name><operator pos:start="163:40" pos:end="163:41">-&gt;</operator><name pos:start="163:42" pos:end="163:46">image</name></name></expr></argument>, <argument pos:start="163:49" pos:end="163:55"><expr pos:start="163:49" pos:end="163:55"><name pos:start="163:49" pos:end="163:55"><name pos:start="163:49" pos:end="163:49">s</name><operator pos:start="163:50" pos:end="163:51">-&gt;</operator><name pos:start="163:52" pos:end="163:55">snap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="165:5" pos:end="171:5"><if pos:start="165:5" pos:end="171:5">if <condition pos:start="165:8" pos:end="165:14">(<expr pos:start="165:9" pos:end="165:13"><name pos:start="165:9" pos:end="165:9">r</name> <operator pos:start="165:11" pos:end="165:11">&lt;</operator> <literal type="number" pos:start="165:13" pos:end="165:13">0</literal></expr>)</condition> <block pos:start="165:16" pos:end="171:5">{<block_content pos:start="167:9" pos:end="169:25">

        <expr_stmt pos:start="167:9" pos:end="167:72"><expr pos:start="167:9" pos:end="167:71"><call pos:start="167:9" pos:end="167:71"><name pos:start="167:9" pos:end="167:18">error_setg</name><argument_list pos:start="167:19" pos:end="167:71">(<argument pos:start="167:20" pos:end="167:29"><expr pos:start="167:20" pos:end="167:29"><operator pos:start="167:20" pos:end="167:20">&amp;</operator><name pos:start="167:21" pos:end="167:29">local_err</name></expr></argument>, <argument pos:start="167:32" pos:end="167:61"><expr pos:start="167:32" pos:end="167:61"><literal type="string" pos:start="167:32" pos:end="167:61">"error reading header from %s"</literal></expr></argument>, <argument pos:start="167:64" pos:end="167:70"><expr pos:start="167:64" pos:end="167:70"><name pos:start="167:64" pos:end="167:70"><name pos:start="167:64" pos:end="167:64">s</name><operator pos:start="167:65" pos:end="167:66">-&gt;</operator><name pos:start="167:67" pos:end="167:70">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="169:9" pos:end="169:25">goto <name pos:start="169:14" pos:end="169:24">failed_open</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:38"><expr pos:start="175:5" pos:end="175:37"><name pos:start="175:5" pos:end="175:17"><name pos:start="175:5" pos:end="175:6">bs</name><operator pos:start="175:7" pos:end="175:8">-&gt;</operator><name pos:start="175:9" pos:end="175:17">read_only</name></name> <operator pos:start="175:19" pos:end="175:19">=</operator> <operator pos:start="175:21" pos:end="175:21">(</operator><name pos:start="175:22" pos:end="175:28"><name pos:start="175:22" pos:end="175:22">s</name><operator pos:start="175:23" pos:end="175:24">-&gt;</operator><name pos:start="175:25" pos:end="175:28">snap</name></name> <operator pos:start="175:30" pos:end="175:31">!=</operator> <name pos:start="175:33" pos:end="175:36">NULL</name><operator pos:start="175:37" pos:end="175:37">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:24"><expr pos:start="179:5" pos:end="179:23"><call pos:start="179:5" pos:end="179:23"><name pos:start="179:5" pos:end="179:17">qemu_opts_del</name><argument_list pos:start="179:18" pos:end="179:23">(<argument pos:start="179:19" pos:end="179:22"><expr pos:start="179:19" pos:end="179:22"><name pos:start="179:19" pos:end="179:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="181:5" pos:end="181:13">return <expr pos:start="181:12" pos:end="181:12"><literal type="number" pos:start="181:12" pos:end="181:12">0</literal></expr>;</return>



<label pos:start="185:1" pos:end="185:12"><name pos:start="185:1" pos:end="185:11">failed_open</name>:</label>

    <expr_stmt pos:start="187:5" pos:end="187:35"><expr pos:start="187:5" pos:end="187:34"><call pos:start="187:5" pos:end="187:34"><name pos:start="187:5" pos:end="187:23">rados_ioctx_destroy</name><argument_list pos:start="187:24" pos:end="187:34">(<argument pos:start="187:25" pos:end="187:33"><expr pos:start="187:25" pos:end="187:33"><name pos:start="187:25" pos:end="187:33"><name pos:start="187:25" pos:end="187:25">s</name><operator pos:start="187:26" pos:end="187:27">-&gt;</operator><name pos:start="187:28" pos:end="187:33">io_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="189:1" pos:end="189:16"><name pos:start="189:1" pos:end="189:15">failed_shutdown</name>:</label>

    <expr_stmt pos:start="191:5" pos:end="191:31"><expr pos:start="191:5" pos:end="191:30"><call pos:start="191:5" pos:end="191:30"><name pos:start="191:5" pos:end="191:18">rados_shutdown</name><argument_list pos:start="191:19" pos:end="191:30">(<argument pos:start="191:20" pos:end="191:29"><expr pos:start="191:20" pos:end="191:29"><name pos:start="191:20" pos:end="191:29"><name pos:start="191:20" pos:end="191:20">s</name><operator pos:start="191:21" pos:end="191:22">-&gt;</operator><name pos:start="191:23" pos:end="191:29">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:20"><expr pos:start="193:5" pos:end="193:19"><call pos:start="193:5" pos:end="193:19"><name pos:start="193:5" pos:end="193:10">g_free</name><argument_list pos:start="193:11" pos:end="193:19">(<argument pos:start="193:12" pos:end="193:18"><expr pos:start="193:12" pos:end="193:18"><name pos:start="193:12" pos:end="193:18"><name pos:start="193:12" pos:end="193:12">s</name><operator pos:start="193:13" pos:end="193:14">-&gt;</operator><name pos:start="193:15" pos:end="193:18">snap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="195:1" pos:end="195:12"><name pos:start="195:1" pos:end="195:11">failed_opts</name>:</label>

    <expr_stmt pos:start="197:5" pos:end="197:24"><expr pos:start="197:5" pos:end="197:23"><call pos:start="197:5" pos:end="197:23"><name pos:start="197:5" pos:end="197:17">qemu_opts_del</name><argument_list pos:start="197:18" pos:end="197:23">(<argument pos:start="197:19" pos:end="197:22"><expr pos:start="197:19" pos:end="197:22"><name pos:start="197:19" pos:end="197:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="199:5" pos:end="199:13">return <expr pos:start="199:12" pos:end="199:12"><name pos:start="199:12" pos:end="199:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
