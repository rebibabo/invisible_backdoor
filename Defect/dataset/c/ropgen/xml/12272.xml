<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12272.c" pos:tabs="8"><function pos:start="1:1" pos:end="86:13"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">net_init_tap</name><parameter_list pos:start="1:17" pos:end="2:38">(<parameter pos:start="1:18" pos:end="1:45"><decl pos:start="1:18" pos:end="1:45"><type pos:start="1:18" pos:end="1:45"><specifier pos:start="1:18" pos:end="1:22">const</specifier> <name pos:start="1:24" pos:end="1:39">NetClientOptions</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">opts</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">name</name></decl></parameter>,
                 <parameter pos:start="2:18" pos:end="2:37"><decl pos:start="2:18" pos:end="2:37"><type pos:start="2:18" pos:end="2:37"><name pos:start="2:18" pos:end="2:31">NetClientState</name> <modifier pos:start="2:33" pos:end="2:33">*</modifier></type><name pos:start="2:34" pos:end="2:37">peer</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="86:13">{<block_content pos:start="4:5" pos:end="86:13">
    <decl_stmt pos:start="4:5" pos:end="4:32"><decl pos:start="4:5" pos:end="4:31"><type pos:start="4:5" pos:end="4:28"><specifier pos:start="4:5" pos:end="4:9">const</specifier> <name pos:start="4:11" pos:end="4:26">NetdevTapOptions</name> <modifier pos:start="4:28" pos:end="4:28">*</modifier></type><name pos:start="4:29" pos:end="4:31">tap</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">fd</name></decl>, <decl pos:start="5:13" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:20">vnet_hdr</name> <init pos:start="5:22" pos:end="5:24">= <expr pos:start="5:24" pos:end="5:24"><literal type="number" pos:start="5:24" pos:end="5:24">0</literal></expr></init></decl>, <decl pos:start="5:27" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:27" pos:end="5:27">i</name> <init pos:start="5:29" pos:end="5:31">= <expr pos:start="5:31" pos:end="5:31"><literal type="number" pos:start="5:31" pos:end="5:31">0</literal></expr></init></decl>, <decl pos:start="5:34" pos:end="5:39"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:34" pos:end="5:39">queues</name></decl>;</decl_stmt>
    <comment type="block" pos:start="6:5" pos:end="6:39">/* for the no-fd, no-helper case */</comment>
    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:22">script</name> <init pos:start="7:24" pos:end="7:29">= <expr pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:29">NULL</name></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="7:32" pos:end="7:78">/* suppress wrong "uninit'd use" gcc warning */</comment>
    <decl_stmt pos:start="8:5" pos:end="8:34"><decl pos:start="8:5" pos:end="8:33"><type pos:start="8:5" pos:end="8:16"><specifier pos:start="8:5" pos:end="8:9">const</specifier> <name pos:start="8:11" pos:end="8:14">char</name> <modifier pos:start="8:16" pos:end="8:16">*</modifier></type><name pos:start="8:17" pos:end="8:26">downscript</name> <init pos:start="8:28" pos:end="8:33">= <expr pos:start="8:30" pos:end="8:33"><name pos:start="8:30" pos:end="8:33">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:27">vhostfdname</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:21"><decl pos:start="10:5" pos:end="10:20"><type pos:start="10:5" pos:end="10:8"><name pos:start="10:5" pos:end="10:8">char</name></type> <name pos:start="10:10" pos:end="10:20"><name pos:start="10:10" pos:end="10:15">ifname</name><index pos:start="10:16" pos:end="10:20">[<expr pos:start="10:17" pos:end="10:19"><literal type="number" pos:start="10:17" pos:end="10:19">128</literal></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:54"><expr pos:start="11:5" pos:end="11:53"><call pos:start="11:5" pos:end="11:53"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:53">(<argument pos:start="11:12" pos:end="11:52"><expr pos:start="11:12" pos:end="11:52"><name pos:start="11:12" pos:end="11:21"><name pos:start="11:12" pos:end="11:15">opts</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:21">kind</name></name> <operator pos:start="11:23" pos:end="11:24">==</operator> <name pos:start="11:26" pos:end="11:52">NET_CLIENT_OPTIONS_KIND_TAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:20"><expr pos:start="12:5" pos:end="12:19"><name pos:start="12:5" pos:end="12:7">tap</name> <operator pos:start="12:9" pos:end="12:9">=</operator> <name pos:start="12:11" pos:end="12:19"><name pos:start="12:11" pos:end="12:14">opts</name><operator pos:start="12:15" pos:end="12:16">-&gt;</operator><name pos:start="12:17" pos:end="12:19">tap</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:47"><expr pos:start="13:5" pos:end="13:46"><name pos:start="13:5" pos:end="13:10">queues</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <ternary pos:start="13:14" pos:end="13:46"><condition pos:start="13:14" pos:end="13:30"><expr pos:start="13:14" pos:end="13:28"><name pos:start="13:14" pos:end="13:28"><name pos:start="13:14" pos:end="13:16">tap</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:28">has_queues</name></name></expr> ?</condition><then pos:start="13:32" pos:end="13:42"> <expr pos:start="13:32" pos:end="13:42"><name pos:start="13:32" pos:end="13:42"><name pos:start="13:32" pos:end="13:34">tap</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:42">queues</name></name></expr> </then><else pos:start="13:44" pos:end="13:46">: <expr pos:start="13:46" pos:end="13:46"><literal type="number" pos:start="13:46" pos:end="13:46">1</literal></expr></else></ternary></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:57"><expr pos:start="14:5" pos:end="14:56"><name pos:start="14:5" pos:end="14:15">vhostfdname</name> <operator pos:start="14:17" pos:end="14:17">=</operator> <ternary pos:start="14:19" pos:end="14:56"><condition pos:start="14:19" pos:end="14:36"><expr pos:start="14:19" pos:end="14:34"><name pos:start="14:19" pos:end="14:34"><name pos:start="14:19" pos:end="14:21">tap</name><operator pos:start="14:22" pos:end="14:23">-&gt;</operator><name pos:start="14:24" pos:end="14:34">has_vhostfd</name></name></expr> ?</condition><then pos:start="14:38" pos:end="14:49"> <expr pos:start="14:38" pos:end="14:49"><name pos:start="14:38" pos:end="14:49"><name pos:start="14:38" pos:end="14:40">tap</name><operator pos:start="14:41" pos:end="14:42">-&gt;</operator><name pos:start="14:43" pos:end="14:49">vhostfd</name></name></expr> </then><else pos:start="14:51" pos:end="14:56">: <expr pos:start="14:53" pos:end="14:56"><name pos:start="14:53" pos:end="14:56">NULL</name></expr></else></ternary></expr>;</expr_stmt>
    <if_stmt pos:start="15:5" pos:end="86:13"><if pos:start="15:5" pos:end="86:13">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:11">tap</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:19">has_fd</name></name></expr>)</condition> <block pos:start="15:22" pos:end="86:13">{<block_content pos:start="16:9" pos:end="86:13">
        <if_stmt pos:start="16:9" pos:end="86:13"><if pos:start="16:9" pos:end="86:13">if <condition pos:start="16:12" pos:end="18:25">(<expr pos:start="16:13" pos:end="18:24"><name pos:start="16:13" pos:end="16:27"><name pos:start="16:13" pos:end="16:15">tap</name><operator pos:start="16:16" pos:end="16:17">-&gt;</operator><name pos:start="16:18" pos:end="16:27">has_ifname</name></name> <operator pos:start="16:29" pos:end="16:30">||</operator> <name pos:start="16:32" pos:end="16:46"><name pos:start="16:32" pos:end="16:34">tap</name><operator pos:start="16:35" pos:end="16:36">-&gt;</operator><name pos:start="16:37" pos:end="16:46">has_script</name></name> <operator pos:start="16:48" pos:end="16:49">||</operator> <name pos:start="16:51" pos:end="16:69"><name pos:start="16:51" pos:end="16:53">tap</name><operator pos:start="16:54" pos:end="16:55">-&gt;</operator><name pos:start="16:56" pos:end="16:69">has_downscript</name></name> <operator pos:start="16:71" pos:end="16:72">||</operator>
            <name pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:15">tap</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:29">has_vnet_hdr</name></name> <operator pos:start="17:31" pos:end="17:32">||</operator> <name pos:start="17:34" pos:end="17:48"><name pos:start="17:34" pos:end="17:36">tap</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:48">has_helper</name></name> <operator pos:start="17:50" pos:end="17:51">||</operator> <name pos:start="17:53" pos:end="17:67"><name pos:start="17:53" pos:end="17:55">tap</name><operator pos:start="17:56" pos:end="17:57">-&gt;</operator><name pos:start="17:58" pos:end="17:67">has_queues</name></name> <operator pos:start="17:69" pos:end="17:70">||</operator>
            <name pos:start="18:13" pos:end="18:24"><name pos:start="18:13" pos:end="18:15">tap</name><operator pos:start="18:16" pos:end="18:17">-&gt;</operator><name pos:start="18:18" pos:end="18:24">has_fds</name></name></expr>)</condition> <block pos:start="18:27" pos:end="86:13">{<block_content pos:start="19:13" pos:end="86:13">
            <expr_stmt pos:start="19:13" pos:end="20:76"><expr pos:start="19:13" pos:end="20:75"><call pos:start="19:13" pos:end="20:75"><name pos:start="19:13" pos:end="19:24">error_report</name><argument_list pos:start="19:25" pos:end="20:75">(<argument pos:start="19:26" pos:end="20:74"><expr pos:start="19:26" pos:end="20:74"><literal type="string" pos:start="19:26" pos:end="19:69">"ifname=, script=, downscript=, vnet_hdr=, "</literal>
                         <literal type="string" pos:start="20:26" pos:end="20:74">"helper=, queues=, and fds= are invalid with fd="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:55"><expr pos:start="21:9" pos:end="21:54"><name pos:start="21:9" pos:end="21:10">fd</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="21:54"><name pos:start="21:14" pos:end="21:36">monitor_handle_fd_param</name><argument_list pos:start="21:37" pos:end="21:54">(<argument pos:start="21:38" pos:end="21:44"><expr pos:start="21:38" pos:end="21:44"><name pos:start="21:38" pos:end="21:44">cur_mon</name></expr></argument>, <argument pos:start="21:47" pos:end="21:53"><expr pos:start="21:47" pos:end="21:53"><name pos:start="21:47" pos:end="21:53"><name pos:start="21:47" pos:end="21:49">tap</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:53">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="22:9" pos:end="86:13"><if pos:start="22:9" pos:end="86:13">if <condition pos:start="22:12" pos:end="22:21">(<expr pos:start="22:13" pos:end="22:20"><name pos:start="22:13" pos:end="22:14">fd</name> <operator pos:start="22:16" pos:end="22:17">==</operator> <operator pos:start="22:19" pos:end="22:19">-</operator><literal type="number" pos:start="22:20" pos:end="22:20">1</literal></expr>)</condition> <block pos:start="22:23" pos:end="86:13">{<block_content pos:start="23:9" pos:end="86:13">
        <expr_stmt pos:start="23:9" pos:end="23:39"><expr pos:start="23:9" pos:end="23:38"><call pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:13">fcntl</name><argument_list pos:start="23:14" pos:end="23:38">(<argument pos:start="23:15" pos:end="23:16"><expr pos:start="23:15" pos:end="23:16"><name pos:start="23:15" pos:end="23:16">fd</name></expr></argument>, <argument pos:start="23:19" pos:end="23:25"><expr pos:start="23:19" pos:end="23:25"><name pos:start="23:19" pos:end="23:25">F_SETFL</name></expr></argument>, <argument pos:start="23:28" pos:end="23:37"><expr pos:start="23:28" pos:end="23:37"><name pos:start="23:28" pos:end="23:37">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:42"><expr pos:start="24:9" pos:end="24:41"><name pos:start="24:9" pos:end="24:16">vnet_hdr</name> <operator pos:start="24:18" pos:end="24:18">=</operator> <call pos:start="24:20" pos:end="24:41"><name pos:start="24:20" pos:end="24:37">tap_probe_vnet_hdr</name><argument_list pos:start="24:38" pos:end="24:41">(<argument pos:start="24:39" pos:end="24:40"><expr pos:start="24:39" pos:end="24:40"><name pos:start="24:39" pos:end="24:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="25:9" pos:end="86:13"><if pos:start="25:9" pos:end="28:5">if <condition pos:start="25:12" pos:end="27:56">(<expr pos:start="25:13" pos:end="27:55"><call pos:start="25:13" pos:end="27:55"><name pos:start="25:13" pos:end="25:28">net_init_tap_one</name><argument_list pos:start="25:29" pos:end="27:55">(<argument pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><name pos:start="25:30" pos:end="25:32">tap</name></expr></argument>, <argument pos:start="25:35" pos:end="25:38"><expr pos:start="25:35" pos:end="25:38"><name pos:start="25:35" pos:end="25:38">peer</name></expr></argument>, <argument pos:start="25:41" pos:end="25:45"><expr pos:start="25:41" pos:end="25:45"><literal type="string" pos:start="25:41" pos:end="25:45">"tap"</literal></expr></argument>, <argument pos:start="25:48" pos:end="25:51"><expr pos:start="25:48" pos:end="25:51"><name pos:start="25:48" pos:end="25:51">name</name></expr></argument>, <argument pos:start="25:54" pos:end="25:57"><expr pos:start="25:54" pos:end="25:57"><name pos:start="25:54" pos:end="25:57">NULL</name></expr></argument>,
                             <argument pos:start="26:30" pos:end="26:35"><expr pos:start="26:30" pos:end="26:35"><name pos:start="26:30" pos:end="26:35">script</name></expr></argument>, <argument pos:start="26:38" pos:end="26:47"><expr pos:start="26:38" pos:end="26:47"><name pos:start="26:38" pos:end="26:47">downscript</name></expr></argument>,
                             <argument pos:start="27:30" pos:end="27:40"><expr pos:start="27:30" pos:end="27:40"><name pos:start="27:30" pos:end="27:40">vhostfdname</name></expr></argument>, <argument pos:start="27:43" pos:end="27:50"><expr pos:start="27:43" pos:end="27:50"><name pos:start="27:43" pos:end="27:50">vnet_hdr</name></expr></argument>, <argument pos:start="27:53" pos:end="27:54"><expr pos:start="27:53" pos:end="27:54"><name pos:start="27:53" pos:end="27:54">fd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:58" pos:end="28:5">{<block_content>
    </block_content>}</block></if> <if type="elseif" pos:start="28:7" pos:end="86:13">else if <condition pos:start="28:15" pos:end="28:28">(<expr pos:start="28:16" pos:end="28:27"><name pos:start="28:16" pos:end="28:27"><name pos:start="28:16" pos:end="28:18">tap</name><operator pos:start="28:19" pos:end="28:20">-&gt;</operator><name pos:start="28:21" pos:end="28:27">has_fds</name></name></expr>)</condition> <block pos:start="28:30" pos:end="86:13">{<block_content pos:start="29:9" pos:end="86:13">
        <decl_stmt pos:start="29:9" pos:end="29:34"><decl pos:start="29:9" pos:end="29:33"><type pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:12">char</name> <modifier pos:start="29:14" pos:end="29:14">*</modifier></type><name pos:start="29:15" pos:end="29:33"><name pos:start="29:15" pos:end="29:17">fds</name><index pos:start="29:18" pos:end="29:33">[<expr pos:start="29:19" pos:end="29:32"><name pos:start="29:19" pos:end="29:32">MAX_TAP_QUEUES</name></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt pos:start="30:9" pos:end="30:40"><decl pos:start="30:9" pos:end="30:39"><type pos:start="30:9" pos:end="30:14"><name pos:start="30:9" pos:end="30:12">char</name> <modifier pos:start="30:14" pos:end="30:14">*</modifier></type><name pos:start="30:15" pos:end="30:39"><name pos:start="30:15" pos:end="30:23">vhost_fds</name><index pos:start="30:24" pos:end="30:39">[<expr pos:start="30:25" pos:end="30:38"><name pos:start="30:25" pos:end="30:38">MAX_TAP_QUEUES</name></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt pos:start="31:9" pos:end="31:26"><decl pos:start="31:9" pos:end="31:16"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:16">nfds</name></decl>, <decl pos:start="31:19" pos:end="31:25"><type ref="prev" pos:start="31:9" pos:end="31:11"/><name pos:start="31:19" pos:end="31:25">nvhosts</name></decl>;</decl_stmt>
        <if_stmt pos:start="32:9" pos:end="86:13"><if pos:start="32:9" pos:end="86:13">if <condition pos:start="32:12" pos:end="34:24">(<expr pos:start="32:13" pos:end="34:23"><name pos:start="32:13" pos:end="32:27"><name pos:start="32:13" pos:end="32:15">tap</name><operator pos:start="32:16" pos:end="32:17">-&gt;</operator><name pos:start="32:18" pos:end="32:27">has_ifname</name></name> <operator pos:start="32:29" pos:end="32:30">||</operator> <name pos:start="32:32" pos:end="32:46"><name pos:start="32:32" pos:end="32:34">tap</name><operator pos:start="32:35" pos:end="32:36">-&gt;</operator><name pos:start="32:37" pos:end="32:46">has_script</name></name> <operator pos:start="32:48" pos:end="32:49">||</operator> <name pos:start="32:51" pos:end="32:69"><name pos:start="32:51" pos:end="32:53">tap</name><operator pos:start="32:54" pos:end="32:55">-&gt;</operator><name pos:start="32:56" pos:end="32:69">has_downscript</name></name> <operator pos:start="32:71" pos:end="32:72">||</operator>
            <name pos:start="33:13" pos:end="33:29"><name pos:start="33:13" pos:end="33:15">tap</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:29">has_vnet_hdr</name></name> <operator pos:start="33:31" pos:end="33:32">||</operator> <name pos:start="33:34" pos:end="33:48"><name pos:start="33:34" pos:end="33:36">tap</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:48">has_helper</name></name> <operator pos:start="33:50" pos:end="33:51">||</operator> <name pos:start="33:53" pos:end="33:67"><name pos:start="33:53" pos:end="33:55">tap</name><operator pos:start="33:56" pos:end="33:57">-&gt;</operator><name pos:start="33:58" pos:end="33:67">has_queues</name></name> <operator pos:start="33:69" pos:end="33:70">||</operator>
            <name pos:start="34:13" pos:end="34:23"><name pos:start="34:13" pos:end="34:15">tap</name><operator pos:start="34:16" pos:end="34:17">-&gt;</operator><name pos:start="34:18" pos:end="34:23">has_fd</name></name></expr>)</condition> <block pos:start="34:26" pos:end="86:13">{<block_content pos:start="35:13" pos:end="86:13">
            <expr_stmt pos:start="35:13" pos:end="36:76"><expr pos:start="35:13" pos:end="36:75"><call pos:start="35:13" pos:end="36:75"><name pos:start="35:13" pos:end="35:24">error_report</name><argument_list pos:start="35:25" pos:end="36:75">(<argument pos:start="35:26" pos:end="36:74"><expr pos:start="35:26" pos:end="36:74"><literal type="string" pos:start="35:26" pos:end="35:69">"ifname=, script=, downscript=, vnet_hdr=, "</literal>
                         <literal type="string" pos:start="36:26" pos:end="36:74">"helper=, queues=, and fd= are invalid with fds="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="37:9" pos:end="37:54"><expr pos:start="37:9" pos:end="37:53"><name pos:start="37:9" pos:end="37:12">nfds</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:53"><name pos:start="37:16" pos:end="37:22">get_fds</name><argument_list pos:start="37:23" pos:end="37:53">(<argument pos:start="37:24" pos:end="37:31"><expr pos:start="37:24" pos:end="37:31"><name pos:start="37:24" pos:end="37:31"><name pos:start="37:24" pos:end="37:26">tap</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:31">fds</name></name></expr></argument>, <argument pos:start="37:34" pos:end="37:36"><expr pos:start="37:34" pos:end="37:36"><name pos:start="37:34" pos:end="37:36">fds</name></expr></argument>, <argument pos:start="37:39" pos:end="37:52"><expr pos:start="37:39" pos:end="37:52"><name pos:start="37:39" pos:end="37:52">MAX_TAP_QUEUES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="38:9" pos:end="86:13"><if pos:start="38:9" pos:end="86:13">if <condition pos:start="38:12" pos:end="38:30">(<expr pos:start="38:13" pos:end="38:29"><name pos:start="38:13" pos:end="38:29"><name pos:start="38:13" pos:end="38:15">tap</name><operator pos:start="38:16" pos:end="38:17">-&gt;</operator><name pos:start="38:18" pos:end="38:29">has_vhostfds</name></name></expr>)</condition> <block pos:start="38:32" pos:end="86:13">{<block_content pos:start="39:13" pos:end="86:13">
            <expr_stmt pos:start="39:13" pos:end="39:72"><expr pos:start="39:13" pos:end="39:71"><name pos:start="39:13" pos:end="39:19">nvhosts</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <call pos:start="39:23" pos:end="39:71"><name pos:start="39:23" pos:end="39:29">get_fds</name><argument_list pos:start="39:30" pos:end="39:71">(<argument pos:start="39:31" pos:end="39:43"><expr pos:start="39:31" pos:end="39:43"><name pos:start="39:31" pos:end="39:43"><name pos:start="39:31" pos:end="39:33">tap</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:43">vhostfds</name></name></expr></argument>, <argument pos:start="39:46" pos:end="39:54"><expr pos:start="39:46" pos:end="39:54"><name pos:start="39:46" pos:end="39:54">vhost_fds</name></expr></argument>, <argument pos:start="39:57" pos:end="39:70"><expr pos:start="39:57" pos:end="39:70"><name pos:start="39:57" pos:end="39:70">MAX_TAP_QUEUES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="40:13" pos:end="86:13"><if pos:start="40:13" pos:end="86:13">if <condition pos:start="40:16" pos:end="40:32">(<expr pos:start="40:17" pos:end="40:31"><name pos:start="40:17" pos:end="40:20">nfds</name> <operator pos:start="40:22" pos:end="40:23">!=</operator> <name pos:start="40:25" pos:end="40:31">nvhosts</name></expr>)</condition> <block pos:start="40:34" pos:end="86:13">{<block_content pos:start="41:17" pos:end="86:13">
                <expr_stmt pos:start="41:17" pos:end="42:58"><expr pos:start="41:17" pos:end="42:57"><call pos:start="41:17" pos:end="42:57"><name pos:start="41:17" pos:end="41:28">error_report</name><argument_list pos:start="41:29" pos:end="42:57">(<argument pos:start="41:30" pos:end="42:56"><expr pos:start="41:30" pos:end="42:56"><literal type="string" pos:start="41:30" pos:end="41:75">"The number of fds passed does not match the "</literal>
                             <literal type="string" pos:start="42:30" pos:end="42:56">"number of vhostfds passed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="43:9" pos:end="86:13">for <control pos:start="43:13" pos:end="43:34">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">i</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:29"><expr pos:start="43:21" pos:end="43:28"><name pos:start="43:21" pos:end="43:21">i</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <name pos:start="43:25" pos:end="43:28">nfds</name></expr>;</condition> <incr pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:31">i</name><operator pos:start="43:32" pos:end="43:33">++</operator></expr></incr>)</control> <block pos:start="43:36" pos:end="86:13">{<block_content pos:start="44:13" pos:end="86:13">
            <expr_stmt pos:start="44:13" pos:end="44:58"><expr pos:start="44:13" pos:end="44:57"><name pos:start="44:13" pos:end="44:14">fd</name> <operator pos:start="44:16" pos:end="44:16">=</operator> <call pos:start="44:18" pos:end="44:57"><name pos:start="44:18" pos:end="44:40">monitor_handle_fd_param</name><argument_list pos:start="44:41" pos:end="44:57">(<argument pos:start="44:42" pos:end="44:48"><expr pos:start="44:42" pos:end="44:48"><name pos:start="44:42" pos:end="44:48">cur_mon</name></expr></argument>, <argument pos:start="44:51" pos:end="44:56"><expr pos:start="44:51" pos:end="44:56"><name pos:start="44:51" pos:end="44:56"><name pos:start="44:51" pos:end="44:53">fds</name><index pos:start="44:54" pos:end="44:56">[<expr pos:start="44:55" pos:end="44:55"><name pos:start="44:55" pos:end="44:55">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="45:13" pos:end="86:13"><if pos:start="45:13" pos:end="86:13">if <condition pos:start="45:16" pos:end="45:25">(<expr pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:18">fd</name> <operator pos:start="45:20" pos:end="45:21">==</operator> <operator pos:start="45:23" pos:end="45:23">-</operator><literal type="number" pos:start="45:24" pos:end="45:24">1</literal></expr>)</condition> <block pos:start="45:27" pos:end="86:13">{<block_content pos:start="46:13" pos:end="86:13">
            <expr_stmt pos:start="46:13" pos:end="46:43"><expr pos:start="46:13" pos:end="46:42"><call pos:start="46:13" pos:end="46:42"><name pos:start="46:13" pos:end="46:17">fcntl</name><argument_list pos:start="46:18" pos:end="46:42">(<argument pos:start="46:19" pos:end="46:20"><expr pos:start="46:19" pos:end="46:20"><name pos:start="46:19" pos:end="46:20">fd</name></expr></argument>, <argument pos:start="46:23" pos:end="46:29"><expr pos:start="46:23" pos:end="46:29"><name pos:start="46:23" pos:end="46:29">F_SETFL</name></expr></argument>, <argument pos:start="46:32" pos:end="46:41"><expr pos:start="46:32" pos:end="46:41"><name pos:start="46:32" pos:end="46:41">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="47:13" pos:end="86:13"><if pos:start="47:13" pos:end="49:13">if <condition pos:start="47:16" pos:end="47:23">(<expr pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:20">==</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>)</condition> <block pos:start="47:25" pos:end="49:13">{<block_content pos:start="48:17" pos:end="48:50">
                <expr_stmt pos:start="48:17" pos:end="48:50"><expr pos:start="48:17" pos:end="48:49"><name pos:start="48:17" pos:end="48:24">vnet_hdr</name> <operator pos:start="48:26" pos:end="48:26">=</operator> <call pos:start="48:28" pos:end="48:49"><name pos:start="48:28" pos:end="48:45">tap_probe_vnet_hdr</name><argument_list pos:start="48:46" pos:end="48:49">(<argument pos:start="48:47" pos:end="48:48"><expr pos:start="48:47" pos:end="48:48"><name pos:start="48:47" pos:end="48:48">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="49:15" pos:end="86:13">else if <condition pos:start="49:23" pos:end="49:58">(<expr pos:start="49:24" pos:end="49:57"><name pos:start="49:24" pos:end="49:31">vnet_hdr</name> <operator pos:start="49:33" pos:end="49:34">!=</operator> <call pos:start="49:36" pos:end="49:57"><name pos:start="49:36" pos:end="49:53">tap_probe_vnet_hdr</name><argument_list pos:start="49:54" pos:end="49:57">(<argument pos:start="49:55" pos:end="49:56"><expr pos:start="49:55" pos:end="49:56"><name pos:start="49:55" pos:end="49:56">fd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:60" pos:end="86:13">{<block_content pos:start="50:17" pos:end="86:13">
                <expr_stmt pos:start="50:17" pos:end="50:77"><expr pos:start="50:17" pos:end="50:76"><call pos:start="50:17" pos:end="50:76"><name pos:start="50:17" pos:end="50:28">error_report</name><argument_list pos:start="50:29" pos:end="50:76">(<argument pos:start="50:30" pos:end="50:75"><expr pos:start="50:30" pos:end="50:75"><literal type="string" pos:start="50:30" pos:end="50:75">"vnet_hdr not consistent across given tap fds"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="51:13" pos:end="86:13"><if pos:start="51:13" pos:end="55:5">if <condition pos:start="51:16" pos:end="54:47">(<expr pos:start="51:17" pos:end="54:46"><call pos:start="51:17" pos:end="54:46"><name pos:start="51:17" pos:end="51:32">net_init_tap_one</name><argument_list pos:start="51:33" pos:end="54:46">(<argument pos:start="51:34" pos:end="51:36"><expr pos:start="51:34" pos:end="51:36"><name pos:start="51:34" pos:end="51:36">tap</name></expr></argument>, <argument pos:start="51:39" pos:end="51:42"><expr pos:start="51:39" pos:end="51:42"><name pos:start="51:39" pos:end="51:42">peer</name></expr></argument>, <argument pos:start="51:45" pos:end="51:49"><expr pos:start="51:45" pos:end="51:49"><literal type="string" pos:start="51:45" pos:end="51:49">"tap"</literal></expr></argument>, <argument pos:start="51:52" pos:end="51:55"><expr pos:start="51:52" pos:end="51:55"><name pos:start="51:52" pos:end="51:55">name</name></expr></argument>, <argument pos:start="51:58" pos:end="51:63"><expr pos:start="51:58" pos:end="51:63"><name pos:start="51:58" pos:end="51:63">ifname</name></expr></argument>,
                                 <argument pos:start="52:34" pos:end="52:39"><expr pos:start="52:34" pos:end="52:39"><name pos:start="52:34" pos:end="52:39">script</name></expr></argument>, <argument pos:start="52:42" pos:end="52:51"><expr pos:start="52:42" pos:end="52:51"><name pos:start="52:42" pos:end="52:51">downscript</name></expr></argument>,
                                 <argument pos:start="53:34" pos:end="53:72"><expr pos:start="53:34" pos:end="53:72"><ternary pos:start="53:34" pos:end="53:72"><condition pos:start="53:34" pos:end="53:52"><expr pos:start="53:34" pos:end="53:50"><name pos:start="53:34" pos:end="53:50"><name pos:start="53:34" pos:end="53:36">tap</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:50">has_vhostfds</name></name></expr> ?</condition><then pos:start="53:54" pos:end="53:65"> <expr pos:start="53:54" pos:end="53:65"><name pos:start="53:54" pos:end="53:65"><name pos:start="53:54" pos:end="53:62">vhost_fds</name><index pos:start="53:63" pos:end="53:65">[<expr pos:start="53:64" pos:end="53:64"><name pos:start="53:64" pos:end="53:64">i</name></expr>]</index></name></expr> </then><else pos:start="53:67" pos:end="53:72">: <expr pos:start="53:69" pos:end="53:72"><name pos:start="53:69" pos:end="53:72">NULL</name></expr></else></ternary></expr></argument>,
                                 <argument pos:start="54:34" pos:end="54:41"><expr pos:start="54:34" pos:end="54:41"><name pos:start="54:34" pos:end="54:41">vnet_hdr</name></expr></argument>, <argument pos:start="54:44" pos:end="54:45"><expr pos:start="54:44" pos:end="54:45"><name pos:start="54:44" pos:end="54:45">fd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="54:49" pos:end="55:5">{<block_content>
    </block_content>}</block></if> <if type="elseif" pos:start="55:7" pos:end="86:13">else if <condition pos:start="55:15" pos:end="55:31">(<expr pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:18">tap</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:30">has_helper</name></name></expr>)</condition> <block pos:start="55:33" pos:end="86:13">{<block_content pos:start="56:9" pos:end="86:13">
        <if_stmt pos:start="56:9" pos:end="86:13"><if pos:start="56:9" pos:end="86:13">if <condition pos:start="56:12" pos:end="57:65">(<expr pos:start="56:13" pos:end="57:64"><name pos:start="56:13" pos:end="56:27"><name pos:start="56:13" pos:end="56:15">tap</name><operator pos:start="56:16" pos:end="56:17">-&gt;</operator><name pos:start="56:18" pos:end="56:27">has_ifname</name></name> <operator pos:start="56:29" pos:end="56:30">||</operator> <name pos:start="56:32" pos:end="56:46"><name pos:start="56:32" pos:end="56:34">tap</name><operator pos:start="56:35" pos:end="56:36">-&gt;</operator><name pos:start="56:37" pos:end="56:46">has_script</name></name> <operator pos:start="56:48" pos:end="56:49">||</operator> <name pos:start="56:51" pos:end="56:69"><name pos:start="56:51" pos:end="56:53">tap</name><operator pos:start="56:54" pos:end="56:55">-&gt;</operator><name pos:start="56:56" pos:end="56:69">has_downscript</name></name> <operator pos:start="56:71" pos:end="56:72">||</operator>
            <name pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:15">tap</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:29">has_vnet_hdr</name></name> <operator pos:start="57:31" pos:end="57:32">||</operator> <name pos:start="57:34" pos:end="57:48"><name pos:start="57:34" pos:end="57:36">tap</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:48">has_queues</name></name> <operator pos:start="57:50" pos:end="57:51">||</operator> <name pos:start="57:53" pos:end="57:64"><name pos:start="57:53" pos:end="57:55">tap</name><operator pos:start="57:56" pos:end="57:57">-&gt;</operator><name pos:start="57:58" pos:end="57:64">has_fds</name></name></expr>)</condition> <block pos:start="57:67" pos:end="86:13">{<block_content pos:start="58:13" pos:end="86:13">
            <expr_stmt pos:start="58:13" pos:end="59:71"><expr pos:start="58:13" pos:end="59:70"><call pos:start="58:13" pos:end="59:70"><name pos:start="58:13" pos:end="58:24">error_report</name><argument_list pos:start="58:25" pos:end="59:70">(<argument pos:start="58:26" pos:end="59:69"><expr pos:start="58:26" pos:end="59:69"><literal type="string" pos:start="58:26" pos:end="58:72">"ifname=, script=, downscript=, and vnet_hdr= "</literal>
                         <literal type="string" pos:start="59:26" pos:end="59:69">"queues=, and fds= are invalid with helper="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="60:9" pos:end="60:74"><expr pos:start="60:9" pos:end="60:73"><name pos:start="60:9" pos:end="60:10">fd</name> <operator pos:start="60:12" pos:end="60:12">=</operator> <call pos:start="60:14" pos:end="60:73"><name pos:start="60:14" pos:end="60:34">net_bridge_run_helper</name><argument_list pos:start="60:35" pos:end="60:73">(<argument pos:start="60:36" pos:end="60:46"><expr pos:start="60:36" pos:end="60:46"><name pos:start="60:36" pos:end="60:46"><name pos:start="60:36" pos:end="60:38">tap</name><operator pos:start="60:39" pos:end="60:40">-&gt;</operator><name pos:start="60:41" pos:end="60:46">helper</name></name></expr></argument>, <argument pos:start="60:49" pos:end="60:72"><expr pos:start="60:49" pos:end="60:72"><name pos:start="60:49" pos:end="60:72">DEFAULT_BRIDGE_INTERFACE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="61:9" pos:end="86:13"><if pos:start="61:9" pos:end="86:13">if <condition pos:start="61:12" pos:end="61:21">(<expr pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:14">fd</name> <operator pos:start="61:16" pos:end="61:17">==</operator> <operator pos:start="61:19" pos:end="61:19">-</operator><literal type="number" pos:start="61:20" pos:end="61:20">1</literal></expr>)</condition> <block pos:start="61:23" pos:end="86:13">{<block_content pos:start="62:9" pos:end="86:13">
        <expr_stmt pos:start="62:9" pos:end="62:39"><expr pos:start="62:9" pos:end="62:38"><call pos:start="62:9" pos:end="62:38"><name pos:start="62:9" pos:end="62:13">fcntl</name><argument_list pos:start="62:14" pos:end="62:38">(<argument pos:start="62:15" pos:end="62:16"><expr pos:start="62:15" pos:end="62:16"><name pos:start="62:15" pos:end="62:16">fd</name></expr></argument>, <argument pos:start="62:19" pos:end="62:25"><expr pos:start="62:19" pos:end="62:25"><name pos:start="62:19" pos:end="62:25">F_SETFL</name></expr></argument>, <argument pos:start="62:28" pos:end="62:37"><expr pos:start="62:28" pos:end="62:37"><name pos:start="62:28" pos:end="62:37">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="63:9" pos:end="63:42"><expr pos:start="63:9" pos:end="63:41"><name pos:start="63:9" pos:end="63:16">vnet_hdr</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:41"><name pos:start="63:20" pos:end="63:37">tap_probe_vnet_hdr</name><argument_list pos:start="63:38" pos:end="63:41">(<argument pos:start="63:39" pos:end="63:40"><expr pos:start="63:39" pos:end="63:40"><name pos:start="63:39" pos:end="63:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="64:9" pos:end="86:13"><if pos:start="64:9" pos:end="67:5">if <condition pos:start="64:12" pos:end="66:43">(<expr pos:start="64:13" pos:end="66:42"><call pos:start="64:13" pos:end="66:42"><name pos:start="64:13" pos:end="64:28">net_init_tap_one</name><argument_list pos:start="64:29" pos:end="66:42">(<argument pos:start="64:30" pos:end="64:32"><expr pos:start="64:30" pos:end="64:32"><name pos:start="64:30" pos:end="64:32">tap</name></expr></argument>, <argument pos:start="64:35" pos:end="64:38"><expr pos:start="64:35" pos:end="64:38"><name pos:start="64:35" pos:end="64:38">peer</name></expr></argument>, <argument pos:start="64:41" pos:end="64:48"><expr pos:start="64:41" pos:end="64:48"><literal type="string" pos:start="64:41" pos:end="64:48">"bridge"</literal></expr></argument>, <argument pos:start="64:51" pos:end="64:54"><expr pos:start="64:51" pos:end="64:54"><name pos:start="64:51" pos:end="64:54">name</name></expr></argument>, <argument pos:start="64:57" pos:end="64:62"><expr pos:start="64:57" pos:end="64:62"><name pos:start="64:57" pos:end="64:62">ifname</name></expr></argument>,
                             <argument pos:start="65:30" pos:end="65:35"><expr pos:start="65:30" pos:end="65:35"><name pos:start="65:30" pos:end="65:35">script</name></expr></argument>, <argument pos:start="65:38" pos:end="65:47"><expr pos:start="65:38" pos:end="65:47"><name pos:start="65:38" pos:end="65:47">downscript</name></expr></argument>, <argument pos:start="65:50" pos:end="65:60"><expr pos:start="65:50" pos:end="65:60"><name pos:start="65:50" pos:end="65:60">vhostfdname</name></expr></argument>,
                             <argument pos:start="66:30" pos:end="66:37"><expr pos:start="66:30" pos:end="66:37"><name pos:start="66:30" pos:end="66:37">vnet_hdr</name></expr></argument>, <argument pos:start="66:40" pos:end="66:41"><expr pos:start="66:40" pos:end="66:41"><name pos:start="66:40" pos:end="66:41">fd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="66:45" pos:end="67:5">{<block_content>
    </block_content>}</block></if> <else pos:start="67:7" pos:end="86:13">else <block pos:start="67:12" pos:end="86:13">{<block_content pos:start="68:9" pos:end="86:13">
        <expr_stmt pos:start="68:9" pos:end="68:72"><expr pos:start="68:9" pos:end="68:71"><name pos:start="68:9" pos:end="68:14">script</name> <operator pos:start="68:16" pos:end="68:16">=</operator> <ternary pos:start="68:18" pos:end="68:71"><condition pos:start="68:18" pos:end="68:34"><expr pos:start="68:18" pos:end="68:32"><name pos:start="68:18" pos:end="68:32"><name pos:start="68:18" pos:end="68:20">tap</name><operator pos:start="68:21" pos:end="68:22">-&gt;</operator><name pos:start="68:23" pos:end="68:32">has_script</name></name></expr> ?</condition><then pos:start="68:36" pos:end="68:46"> <expr pos:start="68:36" pos:end="68:46"><name pos:start="68:36" pos:end="68:46"><name pos:start="68:36" pos:end="68:38">tap</name><operator pos:start="68:39" pos:end="68:40">-&gt;</operator><name pos:start="68:41" pos:end="68:46">script</name></name></expr> </then><else pos:start="68:48" pos:end="68:71">: <expr pos:start="68:50" pos:end="68:71"><name pos:start="68:50" pos:end="68:71">DEFAULT_NETWORK_SCRIPT</name></expr></else></ternary></expr>;</expr_stmt>
        <expr_stmt pos:start="69:9" pos:end="70:40"><expr pos:start="69:9" pos:end="70:39"><name pos:start="69:9" pos:end="69:18">downscript</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <ternary pos:start="69:22" pos:end="70:39"><condition pos:start="69:22" pos:end="69:42"><expr pos:start="69:22" pos:end="69:40"><name pos:start="69:22" pos:end="69:40"><name pos:start="69:22" pos:end="69:24">tap</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:40">has_downscript</name></name></expr> ?</condition><then pos:start="69:44" pos:end="69:58"> <expr pos:start="69:44" pos:end="69:58"><name pos:start="69:44" pos:end="69:58"><name pos:start="69:44" pos:end="69:46">tap</name><operator pos:start="69:47" pos:end="69:48">-&gt;</operator><name pos:start="69:49" pos:end="69:58">downscript</name></name></expr> </then><else pos:start="69:60" pos:end="70:39">:
            <expr pos:start="70:13" pos:end="70:39"><name pos:start="70:13" pos:end="70:39">DEFAULT_NETWORK_DOWN_SCRIPT</name></expr></else></ternary></expr>;</expr_stmt>
        <if_stmt pos:start="71:9" pos:end="86:13"><if pos:start="71:9" pos:end="73:9">if <condition pos:start="71:12" pos:end="71:28">(<expr pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:15">tap</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:27">has_ifname</name></name></expr>)</condition> <block pos:start="71:30" pos:end="73:9">{<block_content pos:start="72:13" pos:end="72:56">
            <expr_stmt pos:start="72:13" pos:end="72:56"><expr pos:start="72:13" pos:end="72:55"><call pos:start="72:13" pos:end="72:55"><name pos:start="72:13" pos:end="72:19">pstrcpy</name><argument_list pos:start="72:20" pos:end="72:55">(<argument pos:start="72:21" pos:end="72:26"><expr pos:start="72:21" pos:end="72:26"><name pos:start="72:21" pos:end="72:26">ifname</name></expr></argument>, <argument pos:start="72:29" pos:end="72:41"><expr pos:start="72:29" pos:end="72:41"><sizeof pos:start="72:29" pos:end="72:41">sizeof <name pos:start="72:36" pos:end="72:41">ifname</name></sizeof></expr></argument>, <argument pos:start="72:44" pos:end="72:54"><expr pos:start="72:44" pos:end="72:54"><name pos:start="72:44" pos:end="72:54"><name pos:start="72:44" pos:end="72:46">tap</name><operator pos:start="72:47" pos:end="72:48">-&gt;</operator><name pos:start="72:49" pos:end="72:54">ifname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="73:11" pos:end="86:13">else <block pos:start="73:16" pos:end="86:13">{<block_content pos:start="74:13" pos:end="86:13">
            <expr_stmt pos:start="74:13" pos:end="74:29"><expr pos:start="74:13" pos:end="74:28"><name pos:start="74:13" pos:end="74:21"><name pos:start="74:13" pos:end="74:18">ifname</name><index pos:start="74:19" pos:end="74:21">[<expr pos:start="74:20" pos:end="74:20"><literal type="number" pos:start="74:20" pos:end="74:20">0</literal></expr>]</index></name> <operator pos:start="74:23" pos:end="74:23">=</operator> <literal type="char" pos:start="74:25" pos:end="74:28">'\0'</literal></expr>;</expr_stmt>
        <for pos:start="75:9" pos:end="86:13">for <control pos:start="75:13" pos:end="75:36">(<init pos:start="75:14" pos:end="75:19"><expr pos:start="75:14" pos:end="75:18"><name pos:start="75:14" pos:end="75:14">i</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr>;</init> <condition pos:start="75:21" pos:end="75:31"><expr pos:start="75:21" pos:end="75:30"><name pos:start="75:21" pos:end="75:21">i</name> <operator pos:start="75:23" pos:end="75:23">&lt;</operator> <name pos:start="75:25" pos:end="75:30">queues</name></expr>;</condition> <incr pos:start="75:33" pos:end="75:35"><expr pos:start="75:33" pos:end="75:35"><name pos:start="75:33" pos:end="75:33">i</name><operator pos:start="75:34" pos:end="75:35">++</operator></expr></incr>)</control> <block pos:start="75:38" pos:end="86:13">{<block_content pos:start="76:13" pos:end="86:13">
            <expr_stmt pos:start="76:13" pos:end="77:65"><expr pos:start="76:13" pos:end="77:64"><name pos:start="76:13" pos:end="76:14">fd</name> <operator pos:start="76:16" pos:end="76:16">=</operator> <call pos:start="76:18" pos:end="77:64"><name pos:start="76:18" pos:end="76:29">net_tap_init</name><argument_list pos:start="76:30" pos:end="77:64">(<argument pos:start="76:31" pos:end="76:33"><expr pos:start="76:31" pos:end="76:33"><name pos:start="76:31" pos:end="76:33">tap</name></expr></argument>, <argument pos:start="76:36" pos:end="76:44"><expr pos:start="76:36" pos:end="76:44"><operator pos:start="76:36" pos:end="76:36">&amp;</operator><name pos:start="76:37" pos:end="76:44">vnet_hdr</name></expr></argument>, <argument pos:start="76:47" pos:end="76:68"><expr pos:start="76:47" pos:end="76:68"><ternary pos:start="76:47" pos:end="76:68"><condition pos:start="76:47" pos:end="76:54"><expr pos:start="76:47" pos:end="76:52"><name pos:start="76:47" pos:end="76:47">i</name> <operator pos:start="76:49" pos:end="76:50">&gt;=</operator> <literal type="number" pos:start="76:52" pos:end="76:52">1</literal></expr> ?</condition><then pos:start="76:56" pos:end="76:59"> <expr pos:start="76:56" pos:end="76:59"><literal type="string" pos:start="76:56" pos:end="76:59">"no"</literal></expr> </then><else pos:start="76:61" pos:end="76:68">: <expr pos:start="76:63" pos:end="76:68"><name pos:start="76:63" pos:end="76:68">script</name></expr></else></ternary></expr></argument>,
                              <argument pos:start="77:31" pos:end="77:36"><expr pos:start="77:31" pos:end="77:36"><name pos:start="77:31" pos:end="77:36">ifname</name></expr></argument>, <argument pos:start="77:39" pos:end="77:51"><expr pos:start="77:39" pos:end="77:51"><sizeof pos:start="77:39" pos:end="77:51">sizeof <name pos:start="77:46" pos:end="77:51">ifname</name></sizeof></expr></argument>, <argument pos:start="77:54" pos:end="77:63"><expr pos:start="77:54" pos:end="77:63"><name pos:start="77:54" pos:end="77:59">queues</name> <operator pos:start="77:61" pos:end="77:61">&gt;</operator> <literal type="number" pos:start="77:63" pos:end="77:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="78:13" pos:end="86:13"><if pos:start="78:13" pos:end="86:13">if <condition pos:start="78:16" pos:end="78:25">(<expr pos:start="78:17" pos:end="78:24"><name pos:start="78:17" pos:end="78:18">fd</name> <operator pos:start="78:20" pos:end="78:21">==</operator> <operator pos:start="78:23" pos:end="78:23">-</operator><literal type="number" pos:start="78:24" pos:end="78:24">1</literal></expr>)</condition> <block pos:start="78:27" pos:end="86:13">{<block_content pos:start="79:13" pos:end="86:13">
            <if_stmt pos:start="79:13" pos:end="86:13"><if pos:start="79:13" pos:end="86:13">if <condition pos:start="79:16" pos:end="79:57">(<expr pos:start="79:17" pos:end="79:56"><name pos:start="79:17" pos:end="79:22">queues</name> <operator pos:start="79:24" pos:end="79:24">&gt;</operator> <literal type="number" pos:start="79:26" pos:end="79:26">1</literal> <operator pos:start="79:28" pos:end="79:29">&amp;&amp;</operator> <name pos:start="79:31" pos:end="79:31">i</name> <operator pos:start="79:33" pos:end="79:34">==</operator> <literal type="number" pos:start="79:36" pos:end="79:36">0</literal> <operator pos:start="79:38" pos:end="79:39">&amp;&amp;</operator> <operator pos:start="79:41" pos:end="79:41">!</operator><name pos:start="79:42" pos:end="79:56"><name pos:start="79:42" pos:end="79:44">tap</name><operator pos:start="79:45" pos:end="79:46">-&gt;</operator><name pos:start="79:47" pos:end="79:56">has_ifname</name></name></expr>)</condition> <block pos:start="79:59" pos:end="86:13">{<block_content pos:start="80:17" pos:end="86:13">
                <if_stmt pos:start="80:17" pos:end="86:13"><if pos:start="80:17" pos:end="86:13">if <condition pos:start="80:20" pos:end="80:50">(<expr pos:start="80:21" pos:end="80:49"><call pos:start="80:21" pos:end="80:49"><name pos:start="80:21" pos:end="80:37">tap_fd_get_ifname</name><argument_list pos:start="80:38" pos:end="80:49">(<argument pos:start="80:39" pos:end="80:40"><expr pos:start="80:39" pos:end="80:40"><name pos:start="80:39" pos:end="80:40">fd</name></expr></argument>, <argument pos:start="80:43" pos:end="80:48"><expr pos:start="80:43" pos:end="80:48"><name pos:start="80:43" pos:end="80:48">ifname</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="80:52" pos:end="86:13">{<block_content pos:start="81:21" pos:end="86:13">
                    <expr_stmt pos:start="81:21" pos:end="81:55"><expr pos:start="81:21" pos:end="81:54"><call pos:start="81:21" pos:end="81:54"><name pos:start="81:21" pos:end="81:32">error_report</name><argument_list pos:start="81:33" pos:end="81:54">(<argument pos:start="81:34" pos:end="81:53"><expr pos:start="81:34" pos:end="81:53"><literal type="string" pos:start="81:34" pos:end="81:53">"Fail to get ifname"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="82:13" pos:end="86:13"><if pos:start="82:13" pos:end="86:13">if <condition pos:start="82:16" pos:end="85:60">(<expr pos:start="82:17" pos:end="85:59"><call pos:start="82:17" pos:end="85:59"><name pos:start="82:17" pos:end="82:32">net_init_tap_one</name><argument_list pos:start="82:33" pos:end="85:59">(<argument pos:start="82:34" pos:end="82:36"><expr pos:start="82:34" pos:end="82:36"><name pos:start="82:34" pos:end="82:36">tap</name></expr></argument>, <argument pos:start="82:39" pos:end="82:42"><expr pos:start="82:39" pos:end="82:42"><name pos:start="82:39" pos:end="82:42">peer</name></expr></argument>, <argument pos:start="82:45" pos:end="82:49"><expr pos:start="82:45" pos:end="82:49"><literal type="string" pos:start="82:45" pos:end="82:49">"tap"</literal></expr></argument>, <argument pos:start="82:52" pos:end="82:55"><expr pos:start="82:52" pos:end="82:55"><name pos:start="82:52" pos:end="82:55">name</name></expr></argument>, <argument pos:start="82:58" pos:end="82:63"><expr pos:start="82:58" pos:end="82:63"><name pos:start="82:58" pos:end="82:63">ifname</name></expr></argument>,
                                 <argument pos:start="83:34" pos:end="83:55"><expr pos:start="83:34" pos:end="83:55"><ternary pos:start="83:34" pos:end="83:55"><condition pos:start="83:34" pos:end="83:41"><expr pos:start="83:34" pos:end="83:39"><name pos:start="83:34" pos:end="83:34">i</name> <operator pos:start="83:36" pos:end="83:37">&gt;=</operator> <literal type="number" pos:start="83:39" pos:end="83:39">1</literal></expr> ?</condition><then pos:start="83:43" pos:end="83:46"> <expr pos:start="83:43" pos:end="83:46"><literal type="string" pos:start="83:43" pos:end="83:46">"no"</literal></expr> </then><else pos:start="83:48" pos:end="83:55">: <expr pos:start="83:50" pos:end="83:55"><name pos:start="83:50" pos:end="83:55">script</name></expr></else></ternary></expr></argument>,
                                 <argument pos:start="84:34" pos:end="84:59"><expr pos:start="84:34" pos:end="84:59"><ternary pos:start="84:34" pos:end="84:59"><condition pos:start="84:34" pos:end="84:41"><expr pos:start="84:34" pos:end="84:39"><name pos:start="84:34" pos:end="84:34">i</name> <operator pos:start="84:36" pos:end="84:37">&gt;=</operator> <literal type="number" pos:start="84:39" pos:end="84:39">1</literal></expr> ?</condition><then pos:start="84:43" pos:end="84:46"> <expr pos:start="84:43" pos:end="84:46"><literal type="string" pos:start="84:43" pos:end="84:46">"no"</literal></expr> </then><else pos:start="84:48" pos:end="84:59">: <expr pos:start="84:50" pos:end="84:59"><name pos:start="84:50" pos:end="84:59">downscript</name></expr></else></ternary></expr></argument>,
                                 <argument pos:start="85:34" pos:end="85:44"><expr pos:start="85:34" pos:end="85:44"><name pos:start="85:34" pos:end="85:44">vhostfdname</name></expr></argument>, <argument pos:start="85:47" pos:end="85:54"><expr pos:start="85:47" pos:end="85:54"><name pos:start="85:47" pos:end="85:54">vnet_hdr</name></expr></argument>, <argument pos:start="85:57" pos:end="85:58"><expr pos:start="85:57" pos:end="85:58"><name pos:start="85:57" pos:end="85:58">fd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:62" pos:end="86:13">{<block_content pos:start="86:5" pos:end="86:13">
    <return pos:start="86:5" pos:end="86:13">return <expr pos:start="86:12" pos:end="86:12"><literal type="number" pos:start="86:12" pos:end="86:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
