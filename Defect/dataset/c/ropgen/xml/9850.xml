<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9850.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:31">tcg_out_addi</name><parameter_list pos:start="1:32" pos:end="1:76">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:42">TCGContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:54"><decl pos:start="1:48" pos:end="1:54"><type pos:start="1:48" pos:end="1:54"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:54">reg</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:75"><decl pos:start="1:57" pos:end="1:75"><type pos:start="1:57" pos:end="1:75"><name pos:start="1:57" pos:end="1:71">tcg_target_long</name></type> <name pos:start="1:73" pos:end="1:75">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:5">

    <if_stmt pos:start="5:5" pos:end="15:5"><if pos:start="5:5" pos:end="15:5">if <condition pos:start="5:8" pos:end="5:17">(<expr pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:11">val</name> <operator pos:start="5:13" pos:end="5:14">!=</operator> <literal type="number" pos:start="5:16" pos:end="5:16">0</literal></expr>)</condition> <block pos:start="5:19" pos:end="15:5">{<block_content pos:start="7:9" pos:end="13:67">

        <if_stmt pos:start="7:9" pos:end="13:67"><if pos:start="7:9" pos:end="9:56">if <condition pos:start="7:12" pos:end="7:33">(<expr pos:start="7:13" pos:end="7:32"><name pos:start="7:13" pos:end="7:15">val</name> <operator pos:start="7:17" pos:end="7:18">==</operator> <operator pos:start="7:20" pos:end="7:20">(</operator><name pos:start="7:21" pos:end="7:23">val</name> <operator pos:start="7:25" pos:end="7:25">&amp;</operator> <literal type="number" pos:start="7:27" pos:end="7:31">0xfff</literal><operator pos:start="7:32" pos:end="7:32">)</operator></expr>)</condition><block type="pseudo" pos:start="9:13" pos:end="9:56"><block_content pos:start="9:13" pos:end="9:56">

            <expr_stmt pos:start="9:13" pos:end="9:56"><expr pos:start="9:13" pos:end="9:55"><call pos:start="9:13" pos:end="9:55"><name pos:start="9:13" pos:end="9:26">tcg_out_arithi</name><argument_list pos:start="9:27" pos:end="9:55">(<argument pos:start="9:28" pos:end="9:28"><expr pos:start="9:28" pos:end="9:28"><name pos:start="9:28" pos:end="9:28">s</name></expr></argument>, <argument pos:start="9:31" pos:end="9:33"><expr pos:start="9:31" pos:end="9:33"><name pos:start="9:31" pos:end="9:33">reg</name></expr></argument>, <argument pos:start="9:36" pos:end="9:38"><expr pos:start="9:36" pos:end="9:38"><name pos:start="9:36" pos:end="9:38">reg</name></expr></argument>, <argument pos:start="9:41" pos:end="9:43"><expr pos:start="9:41" pos:end="9:43"><name pos:start="9:41" pos:end="9:43">val</name></expr></argument>, <argument pos:start="9:46" pos:end="9:54"><expr pos:start="9:46" pos:end="9:54"><name pos:start="9:46" pos:end="9:54">ARITH_ADD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="11:9" pos:end="13:67">else<block type="pseudo" pos:start="13:13" pos:end="13:67"><block_content pos:start="13:13" pos:end="13:67">

            <expr_stmt pos:start="13:13" pos:end="13:67"><expr pos:start="13:13" pos:end="13:66"><call pos:start="13:13" pos:end="13:66"><name pos:start="13:13" pos:end="13:19">fprintf</name><argument_list pos:start="13:20" pos:end="13:66">(<argument pos:start="13:21" pos:end="13:26"><expr pos:start="13:21" pos:end="13:26"><name pos:start="13:21" pos:end="13:26">stderr</name></expr></argument>, <argument pos:start="13:29" pos:end="13:54"><expr pos:start="13:29" pos:end="13:54"><literal type="string" pos:start="13:29" pos:end="13:54">"unimplemented addi %ld\n"</literal></expr></argument>, <argument pos:start="13:57" pos:end="13:65"><expr pos:start="13:57" pos:end="13:65"><operator pos:start="13:57" pos:end="13:57">(</operator><name pos:start="13:58" pos:end="13:61">long</name><operator pos:start="13:62" pos:end="13:62">)</operator><name pos:start="13:63" pos:end="13:65">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
