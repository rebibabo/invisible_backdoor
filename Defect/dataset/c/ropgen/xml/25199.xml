<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25199.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:40">cpu_register_physical_memory_offset</name><parameter_list pos:start="1:41" pos:end="7:66">(<parameter pos:start="1:42" pos:end="1:70"><decl pos:start="1:42" pos:end="1:70"><type pos:start="1:42" pos:end="1:70"><name pos:start="1:42" pos:end="1:59">target_phys_addr_t</name></type> <name pos:start="1:61" pos:end="1:70">start_addr</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:56"><decl pos:start="3:42" pos:end="3:56"><type pos:start="3:42" pos:end="3:56"><name pos:start="3:42" pos:end="3:51">ram_addr_t</name></type> <name pos:start="3:53" pos:end="3:56">size</name></decl></parameter>,

                                         <parameter pos:start="5:42" pos:end="5:63"><decl pos:start="5:42" pos:end="5:63"><type pos:start="5:42" pos:end="5:63"><name pos:start="5:42" pos:end="5:51">ram_addr_t</name></type> <name pos:start="5:53" pos:end="5:63">phys_offset</name></decl></parameter>,

                                         <parameter pos:start="7:42" pos:end="7:65"><decl pos:start="7:42" pos:end="7:65"><type pos:start="7:42" pos:end="7:65"><name pos:start="7:42" pos:end="7:51">ram_addr_t</name></type> <name pos:start="7:53" pos:end="7:65">region_offset</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="175:1">{<block_content pos:start="11:5" pos:end="173:5">

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22">target_phys_addr_t</name></type> <name pos:start="11:24" pos:end="11:27">addr</name></decl>, <decl pos:start="11:30" pos:end="11:37"><type ref="prev" pos:start="11:5" pos:end="11:22"/><name pos:start="11:30" pos:end="11:37">end_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">PhysPageDesc</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:19">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">CPUState</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:17">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:14">ram_addr_t</name></type> <name pos:start="17:16" pos:end="17:24">orig_size</name> <init pos:start="17:26" pos:end="17:31">= <expr pos:start="17:28" pos:end="17:31"><name pos:start="17:28" pos:end="17:31">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="24:0"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:8">void</name> <modifier pos:start="19:10" pos:end="19:10">*</modifier></type><name pos:start="19:11" pos:end="19:17">subpage</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="23:1" pos:end="23:19">#<cpp:directive pos:start="23:2" pos:end="23:6">ifdef</cpp:directive> <name pos:start="23:8" pos:end="23:19">CONFIG_KQEMU</name></cpp:ifdef>

    <comment type="block" pos:start="25:5" pos:end="25:47">/* XXX: should not depend on cpu context */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:20"><expr pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:7">env</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <name pos:start="27:11" pos:end="27:19">first_cpu</name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="36:0"><if pos:start="29:5" pos:end="36:0">if <condition pos:start="29:8" pos:end="29:27">(<expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:11">env</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:26">kqemu_enabled</name></name></expr>)</condition> <block pos:start="29:29" pos:end="36:0">{<block_content pos:start="31:9" pos:end="31:58">

        <expr_stmt pos:start="31:9" pos:end="31:58"><expr pos:start="31:9" pos:end="31:57"><call pos:start="31:9" pos:end="31:57"><name pos:start="31:9" pos:end="31:26">kqemu_set_phys_mem</name><argument_list pos:start="31:27" pos:end="31:57">(<argument pos:start="31:28" pos:end="31:37"><expr pos:start="31:28" pos:end="31:37"><name pos:start="31:28" pos:end="31:37">start_addr</name></expr></argument>, <argument pos:start="31:40" pos:end="31:43"><expr pos:start="31:40" pos:end="31:43"><name pos:start="31:40" pos:end="31:43">size</name></expr></argument>, <argument pos:start="31:46" pos:end="31:56"><expr pos:start="31:46" pos:end="31:56"><name pos:start="31:46" pos:end="31:56">phys_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="37:5" pos:end="39:56"><if pos:start="37:5" pos:end="39:56">if <condition pos:start="37:8" pos:end="37:22">(<expr pos:start="37:9" pos:end="37:21"><call pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:19">kvm_enabled</name><argument_list pos:start="37:20" pos:end="37:21">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:56"><block_content pos:start="39:9" pos:end="39:56">

        <expr_stmt pos:start="39:9" pos:end="39:56"><expr pos:start="39:9" pos:end="39:55"><call pos:start="39:9" pos:end="39:55"><name pos:start="39:9" pos:end="39:24">kvm_set_phys_mem</name><argument_list pos:start="39:25" pos:end="39:55">(<argument pos:start="39:26" pos:end="39:35"><expr pos:start="39:26" pos:end="39:35"><name pos:start="39:26" pos:end="39:35">start_addr</name></expr></argument>, <argument pos:start="39:38" pos:end="39:41"><expr pos:start="39:38" pos:end="39:41"><name pos:start="39:38" pos:end="39:41">size</name></expr></argument>, <argument pos:start="39:44" pos:end="39:54"><expr pos:start="39:44" pos:end="39:54"><name pos:start="39:44" pos:end="39:54">phys_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:41">(<expr pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:19">phys_offset</name> <operator pos:start="43:21" pos:end="43:22">==</operator> <name pos:start="43:24" pos:end="43:40">IO_MEM_UNASSIGNED</name></expr>)</condition> <block pos:start="43:43" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:35">

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:21">region_offset</name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:34">start_addr</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:17">region_offset</name> <operator pos:start="49:19" pos:end="49:20">&amp;=</operator> <name pos:start="49:22" pos:end="49:37">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:60"><expr pos:start="51:5" pos:end="51:59"><name pos:start="51:5" pos:end="51:8">size</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <operator pos:start="51:12" pos:end="51:12">(</operator><name pos:start="51:13" pos:end="51:16">size</name> <operator pos:start="51:18" pos:end="51:18">+</operator> <name pos:start="51:20" pos:end="51:35">TARGET_PAGE_SIZE</name> <operator pos:start="51:37" pos:end="51:37">-</operator> <literal type="number" pos:start="51:39" pos:end="51:39">1</literal><operator pos:start="51:40" pos:end="51:40">)</operator> <operator pos:start="51:42" pos:end="51:42">&amp;</operator> <name pos:start="51:44" pos:end="51:59">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:53"><expr pos:start="53:5" pos:end="53:52"><name pos:start="53:5" pos:end="53:12">end_addr</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:25">start_addr</name> <operator pos:start="53:27" pos:end="53:27">+</operator> <operator pos:start="53:29" pos:end="53:29">(</operator><name pos:start="53:30" pos:end="53:47">target_phys_addr_t</name><operator pos:start="53:48" pos:end="53:48">)</operator><name pos:start="53:49" pos:end="53:52">size</name></expr>;</expr_stmt>

    <for pos:start="55:5" pos:end="159:5">for<control pos:start="55:8" pos:end="55:70">(<init pos:start="55:9" pos:end="55:26"><expr pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:12">addr</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:25">start_addr</name></expr>;</init> <condition pos:start="55:28" pos:end="55:44"><expr pos:start="55:28" pos:end="55:43"><name pos:start="55:28" pos:end="55:31">addr</name> <operator pos:start="55:33" pos:end="55:34">!=</operator> <name pos:start="55:36" pos:end="55:43">end_addr</name></expr>;</condition> <incr pos:start="55:46" pos:end="55:69"><expr pos:start="55:46" pos:end="55:69"><name pos:start="55:46" pos:end="55:49">addr</name> <operator pos:start="55:51" pos:end="55:52">+=</operator> <name pos:start="55:54" pos:end="55:69">TARGET_PAGE_SIZE</name></expr></incr>)</control> <block pos:start="55:72" pos:end="159:5">{<block_content pos:start="57:9" pos:end="157:42">

        <expr_stmt pos:start="57:9" pos:end="57:53"><expr pos:start="57:9" pos:end="57:52"><name pos:start="57:9" pos:end="57:9">p</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <call pos:start="57:13" pos:end="57:52"><name pos:start="57:13" pos:end="57:26">phys_page_find</name><argument_list pos:start="57:27" pos:end="57:52">(<argument pos:start="57:28" pos:end="57:51"><expr pos:start="57:28" pos:end="57:51"><name pos:start="57:28" pos:end="57:31">addr</name> <operator pos:start="57:33" pos:end="57:34">&gt;&gt;</operator> <name pos:start="57:36" pos:end="57:51">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="155:9"><if pos:start="59:9" pos:end="109:9">if <condition pos:start="59:12" pos:end="59:53">(<expr pos:start="59:13" pos:end="59:52"><name pos:start="59:13" pos:end="59:13">p</name> <operator pos:start="59:15" pos:end="59:16">&amp;&amp;</operator> <name pos:start="59:18" pos:end="59:31"><name pos:start="59:18" pos:end="59:18">p</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:31">phys_offset</name></name> <operator pos:start="59:33" pos:end="59:34">!=</operator> <name pos:start="59:36" pos:end="59:52">IO_MEM_UNASSIGNED</name></expr>)</condition> <block pos:start="59:55" pos:end="109:9">{<block_content pos:start="61:13" pos:end="107:13">

            <decl_stmt pos:start="61:13" pos:end="61:52"><decl pos:start="61:13" pos:end="61:51"><type pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:22">ram_addr_t</name></type> <name pos:start="61:24" pos:end="61:34">orig_memory</name> <init pos:start="61:36" pos:end="61:51">= <expr pos:start="61:38" pos:end="61:51"><name pos:start="61:38" pos:end="61:51"><name pos:start="61:38" pos:end="61:38">p</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:51">phys_offset</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="63:13" pos:end="63:54"><decl pos:start="63:13" pos:end="63:42"><type pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:30">target_phys_addr_t</name></type> <name pos:start="63:32" pos:end="63:42">start_addr2</name></decl>, <decl pos:start="63:45" pos:end="63:53"><type ref="prev" pos:start="63:13" pos:end="63:30"/><name pos:start="63:45" pos:end="63:53">end_addr2</name></decl>;</decl_stmt>

            <decl_stmt pos:start="65:13" pos:end="65:33"><decl pos:start="65:13" pos:end="65:32"><type pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:15">int</name></type> <name pos:start="65:17" pos:end="65:28">need_subpage</name> <init pos:start="65:30" pos:end="65:32">= <expr pos:start="65:32" pos:end="65:32"><literal type="number" pos:start="65:32" pos:end="65:32">0</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="69:13" pos:end="71:40"><expr pos:start="69:13" pos:end="71:39"><call pos:start="69:13" pos:end="71:39"><name pos:start="69:13" pos:end="69:25">CHECK_SUBPAGE</name><argument_list pos:start="69:26" pos:end="71:39">(<argument pos:start="69:27" pos:end="69:30"><expr pos:start="69:27" pos:end="69:30"><name pos:start="69:27" pos:end="69:30">addr</name></expr></argument>, <argument pos:start="69:33" pos:end="69:42"><expr pos:start="69:33" pos:end="69:42"><name pos:start="69:33" pos:end="69:42">start_addr</name></expr></argument>, <argument pos:start="69:45" pos:end="69:55"><expr pos:start="69:45" pos:end="69:55"><name pos:start="69:45" pos:end="69:55">start_addr2</name></expr></argument>, <argument pos:start="69:58" pos:end="69:65"><expr pos:start="69:58" pos:end="69:65"><name pos:start="69:58" pos:end="69:65">end_addr</name></expr></argument>, <argument pos:start="69:68" pos:end="69:76"><expr pos:start="69:68" pos:end="69:76"><name pos:start="69:68" pos:end="69:76">end_addr2</name></expr></argument>,

                          <argument pos:start="71:27" pos:end="71:38"><expr pos:start="71:27" pos:end="71:38"><name pos:start="71:27" pos:end="71:38">need_subpage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="107:13"><if pos:start="73:13" pos:end="97:13">if <condition pos:start="73:16" pos:end="73:62">(<expr pos:start="73:17" pos:end="73:61"><name pos:start="73:17" pos:end="73:28">need_subpage</name> <operator pos:start="73:30" pos:end="73:31">||</operator> <name pos:start="73:33" pos:end="73:43">phys_offset</name> <operator pos:start="73:45" pos:end="73:45">&amp;</operator> <name pos:start="73:47" pos:end="73:61">IO_MEM_SUBWIDTH</name></expr>)</condition> <block pos:start="73:64" pos:end="97:13">{<block_content pos:start="75:17" pos:end="95:37">

                <if_stmt pos:start="75:17" pos:end="89:17"><if pos:start="75:17" pos:end="83:17">if <condition pos:start="75:20" pos:end="75:52">(<expr pos:start="75:21" pos:end="75:51"><operator pos:start="75:21" pos:end="75:21">!</operator><operator pos:start="75:22" pos:end="75:22">(</operator><name pos:start="75:23" pos:end="75:33">orig_memory</name> <operator pos:start="75:35" pos:end="75:35">&amp;</operator> <name pos:start="75:37" pos:end="75:50">IO_MEM_SUBPAGE</name><operator pos:start="75:51" pos:end="75:51">)</operator></expr>)</condition> <block pos:start="75:54" pos:end="83:17">{<block_content pos:start="77:21" pos:end="81:61">

                    <expr_stmt pos:start="77:21" pos:end="81:61"><expr pos:start="77:21" pos:end="81:60"><name pos:start="77:21" pos:end="77:27">subpage</name> <operator pos:start="77:29" pos:end="77:29">=</operator> <call pos:start="77:31" pos:end="81:60"><name pos:start="77:31" pos:end="77:42">subpage_init</name><argument_list pos:start="77:43" pos:end="81:60">(<argument pos:start="77:44" pos:end="77:68"><expr pos:start="77:44" pos:end="77:68"><operator pos:start="77:44" pos:end="77:44">(</operator><name pos:start="77:45" pos:end="77:48">addr</name> <operator pos:start="77:50" pos:end="77:50">&amp;</operator> <name pos:start="77:52" pos:end="77:67">TARGET_PAGE_MASK</name><operator pos:start="77:68" pos:end="77:68">)</operator></expr></argument>,

                                           <argument pos:start="79:44" pos:end="79:58"><expr pos:start="79:44" pos:end="79:58"><operator pos:start="79:44" pos:end="79:44">&amp;</operator><name pos:start="79:45" pos:end="79:58"><name pos:start="79:45" pos:end="79:45">p</name><operator pos:start="79:46" pos:end="79:47">-&gt;</operator><name pos:start="79:48" pos:end="79:58">phys_offset</name></name></expr></argument>, <argument pos:start="79:61" pos:end="79:71"><expr pos:start="79:61" pos:end="79:71"><name pos:start="79:61" pos:end="79:71">orig_memory</name></expr></argument>,

                                           <argument pos:start="81:44" pos:end="81:59"><expr pos:start="81:44" pos:end="81:59"><name pos:start="81:44" pos:end="81:59"><name pos:start="81:44" pos:end="81:44">p</name><operator pos:start="81:45" pos:end="81:46">-&gt;</operator><name pos:start="81:47" pos:end="81:59">region_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="83:19" pos:end="89:17">else <block pos:start="83:24" pos:end="89:17">{<block_content pos:start="85:21" pos:end="87:61">

                    <expr_stmt pos:start="85:21" pos:end="87:61"><expr pos:start="85:21" pos:end="87:60"><name pos:start="85:21" pos:end="85:27">subpage</name> <operator pos:start="85:29" pos:end="85:29">=</operator> <name pos:start="85:31" pos:end="87:60"><name pos:start="85:31" pos:end="85:43">io_mem_opaque</name><index pos:start="85:44" pos:end="87:60">[<expr pos:start="85:45" pos:end="87:59"><operator pos:start="85:45" pos:end="85:45">(</operator><name pos:start="85:46" pos:end="85:56">orig_memory</name> <operator pos:start="85:58" pos:end="85:58">&amp;</operator> <operator pos:start="85:60" pos:end="85:60">~</operator><name pos:start="85:61" pos:end="85:76">TARGET_PAGE_MASK</name><operator pos:start="85:77" pos:end="85:77">)</operator>

                                            <operator pos:start="87:45" pos:end="87:46">&gt;&gt;</operator> <name pos:start="87:48" pos:end="87:59">IO_MEM_SHIFT</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="91:17" pos:end="93:48"><expr pos:start="91:17" pos:end="93:47"><call pos:start="91:17" pos:end="93:47"><name pos:start="91:17" pos:end="91:32">subpage_register</name><argument_list pos:start="91:33" pos:end="93:47">(<argument pos:start="91:34" pos:end="91:40"><expr pos:start="91:34" pos:end="91:40"><name pos:start="91:34" pos:end="91:40">subpage</name></expr></argument>, <argument pos:start="91:43" pos:end="91:53"><expr pos:start="91:43" pos:end="91:53"><name pos:start="91:43" pos:end="91:53">start_addr2</name></expr></argument>, <argument pos:start="91:56" pos:end="91:64"><expr pos:start="91:56" pos:end="91:64"><name pos:start="91:56" pos:end="91:64">end_addr2</name></expr></argument>, <argument pos:start="91:67" pos:end="91:77"><expr pos:start="91:67" pos:end="91:77"><name pos:start="91:67" pos:end="91:77">phys_offset</name></expr></argument>,

                                 <argument pos:start="93:34" pos:end="93:46"><expr pos:start="93:34" pos:end="93:46"><name pos:start="93:34" pos:end="93:46">region_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:37"><expr pos:start="95:17" pos:end="95:36"><name pos:start="95:17" pos:end="95:32"><name pos:start="95:17" pos:end="95:17">p</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:32">region_offset</name></name> <operator pos:start="95:34" pos:end="95:34">=</operator> <literal type="number" pos:start="95:36" pos:end="95:36">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="97:15" pos:end="107:13">else <block pos:start="97:20" pos:end="107:13">{<block_content pos:start="99:17" pos:end="105:52">

                <expr_stmt pos:start="99:17" pos:end="99:45"><expr pos:start="99:17" pos:end="99:44"><name pos:start="99:17" pos:end="99:30"><name pos:start="99:17" pos:end="99:17">p</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:30">phys_offset</name></name> <operator pos:start="99:32" pos:end="99:32">=</operator> <name pos:start="99:34" pos:end="99:44">phys_offset</name></expr>;</expr_stmt>

                <if_stmt pos:start="101:17" pos:end="105:52"><if pos:start="101:17" pos:end="105:52">if <condition pos:start="101:20" pos:end="103:48">(<expr pos:start="101:21" pos:end="103:47"><operator pos:start="101:21" pos:end="101:21">(</operator><name pos:start="101:22" pos:end="101:32">phys_offset</name> <operator pos:start="101:34" pos:end="101:34">&amp;</operator> <operator pos:start="101:36" pos:end="101:36">~</operator><name pos:start="101:37" pos:end="101:52">TARGET_PAGE_MASK</name><operator pos:start="101:53" pos:end="101:53">)</operator> <operator pos:start="101:55" pos:end="101:56">&lt;=</operator> <name pos:start="101:58" pos:end="101:67">IO_MEM_ROM</name> <operator pos:start="101:69" pos:end="101:70">||</operator>

                    <operator pos:start="103:21" pos:end="103:21">(</operator><name pos:start="103:22" pos:end="103:32">phys_offset</name> <operator pos:start="103:34" pos:end="103:34">&amp;</operator> <name pos:start="103:36" pos:end="103:46">IO_MEM_ROMD</name><operator pos:start="103:47" pos:end="103:47">)</operator></expr>)</condition><block type="pseudo" pos:start="105:21" pos:end="105:52"><block_content pos:start="105:21" pos:end="105:52">

                    <expr_stmt pos:start="105:21" pos:end="105:52"><expr pos:start="105:21" pos:end="105:51"><name pos:start="105:21" pos:end="105:31">phys_offset</name> <operator pos:start="105:33" pos:end="105:34">+=</operator> <name pos:start="105:36" pos:end="105:51">TARGET_PAGE_SIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="155:9">else <block pos:start="109:16" pos:end="155:9">{<block_content pos:start="111:13" pos:end="153:13">

            <expr_stmt pos:start="111:13" pos:end="111:66"><expr pos:start="111:13" pos:end="111:65"><name pos:start="111:13" pos:end="111:13">p</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <call pos:start="111:17" pos:end="111:65"><name pos:start="111:17" pos:end="111:36">phys_page_find_alloc</name><argument_list pos:start="111:37" pos:end="111:65">(<argument pos:start="111:38" pos:end="111:61"><expr pos:start="111:38" pos:end="111:61"><name pos:start="111:38" pos:end="111:41">addr</name> <operator pos:start="111:43" pos:end="111:44">&gt;&gt;</operator> <name pos:start="111:46" pos:end="111:61">TARGET_PAGE_BITS</name></expr></argument>, <argument pos:start="111:64" pos:end="111:64"><expr pos:start="111:64" pos:end="111:64"><literal type="number" pos:start="111:64" pos:end="111:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:41"><expr pos:start="113:13" pos:end="113:40"><name pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:13">p</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:26">phys_offset</name></name> <operator pos:start="113:28" pos:end="113:28">=</operator> <name pos:start="113:30" pos:end="113:40">phys_offset</name></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:45"><expr pos:start="115:13" pos:end="115:44"><name pos:start="115:13" pos:end="115:28"><name pos:start="115:13" pos:end="115:13">p</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:28">region_offset</name></name> <operator pos:start="115:30" pos:end="115:30">=</operator> <name pos:start="115:32" pos:end="115:44">region_offset</name></expr>;</expr_stmt>

            <if_stmt pos:start="117:13" pos:end="153:13"><if pos:start="117:13" pos:end="123:13">if <condition pos:start="117:16" pos:end="119:44">(<expr pos:start="117:17" pos:end="119:43"><operator pos:start="117:17" pos:end="117:17">(</operator><name pos:start="117:18" pos:end="117:28">phys_offset</name> <operator pos:start="117:30" pos:end="117:30">&amp;</operator> <operator pos:start="117:32" pos:end="117:32">~</operator><name pos:start="117:33" pos:end="117:48">TARGET_PAGE_MASK</name><operator pos:start="117:49" pos:end="117:49">)</operator> <operator pos:start="117:51" pos:end="117:52">&lt;=</operator> <name pos:start="117:54" pos:end="117:63">IO_MEM_ROM</name> <operator pos:start="117:65" pos:end="117:66">||</operator>

                <operator pos:start="119:17" pos:end="119:17">(</operator><name pos:start="119:18" pos:end="119:28">phys_offset</name> <operator pos:start="119:30" pos:end="119:30">&amp;</operator> <name pos:start="119:32" pos:end="119:42">IO_MEM_ROMD</name><operator pos:start="119:43" pos:end="119:43">)</operator></expr>)</condition> <block pos:start="119:46" pos:end="123:13">{<block_content pos:start="121:17" pos:end="121:48">

                <expr_stmt pos:start="121:17" pos:end="121:48"><expr pos:start="121:17" pos:end="121:47"><name pos:start="121:17" pos:end="121:27">phys_offset</name> <operator pos:start="121:29" pos:end="121:30">+=</operator> <name pos:start="121:32" pos:end="121:47">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="123:15" pos:end="153:13">else <block pos:start="123:20" pos:end="153:13">{<block_content pos:start="125:17" pos:end="151:17">

                <decl_stmt pos:start="125:17" pos:end="125:58"><decl pos:start="125:17" pos:end="125:46"><type pos:start="125:17" pos:end="125:34"><name pos:start="125:17" pos:end="125:34">target_phys_addr_t</name></type> <name pos:start="125:36" pos:end="125:46">start_addr2</name></decl>, <decl pos:start="125:49" pos:end="125:57"><type ref="prev" pos:start="125:17" pos:end="125:34"/><name pos:start="125:49" pos:end="125:57">end_addr2</name></decl>;</decl_stmt>

                <decl_stmt pos:start="127:17" pos:end="127:37"><decl pos:start="127:17" pos:end="127:36"><type pos:start="127:17" pos:end="127:19"><name pos:start="127:17" pos:end="127:19">int</name></type> <name pos:start="127:21" pos:end="127:32">need_subpage</name> <init pos:start="127:34" pos:end="127:36">= <expr pos:start="127:36" pos:end="127:36"><literal type="number" pos:start="127:36" pos:end="127:36">0</literal></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="131:17" pos:end="133:55"><expr pos:start="131:17" pos:end="133:54"><call pos:start="131:17" pos:end="133:54"><name pos:start="131:17" pos:end="131:29">CHECK_SUBPAGE</name><argument_list pos:start="131:30" pos:end="133:54">(<argument pos:start="131:31" pos:end="131:34"><expr pos:start="131:31" pos:end="131:34"><name pos:start="131:31" pos:end="131:34">addr</name></expr></argument>, <argument pos:start="131:37" pos:end="131:46"><expr pos:start="131:37" pos:end="131:46"><name pos:start="131:37" pos:end="131:46">start_addr</name></expr></argument>, <argument pos:start="131:49" pos:end="131:59"><expr pos:start="131:49" pos:end="131:59"><name pos:start="131:49" pos:end="131:59">start_addr2</name></expr></argument>, <argument pos:start="131:62" pos:end="131:69"><expr pos:start="131:62" pos:end="131:69"><name pos:start="131:62" pos:end="131:69">end_addr</name></expr></argument>,

                              <argument pos:start="133:31" pos:end="133:39"><expr pos:start="133:31" pos:end="133:39"><name pos:start="133:31" pos:end="133:39">end_addr2</name></expr></argument>, <argument pos:start="133:42" pos:end="133:53"><expr pos:start="133:42" pos:end="133:53"><name pos:start="133:42" pos:end="133:53">need_subpage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="137:17" pos:end="151:17"><if pos:start="137:17" pos:end="151:17">if <condition pos:start="137:20" pos:end="137:66">(<expr pos:start="137:21" pos:end="137:65"><name pos:start="137:21" pos:end="137:32">need_subpage</name> <operator pos:start="137:34" pos:end="137:35">||</operator> <name pos:start="137:37" pos:end="137:47">phys_offset</name> <operator pos:start="137:49" pos:end="137:49">&amp;</operator> <name pos:start="137:51" pos:end="137:65">IO_MEM_SUBWIDTH</name></expr>)</condition> <block pos:start="137:68" pos:end="151:17">{<block_content pos:start="139:21" pos:end="149:41">

                    <expr_stmt pos:start="139:21" pos:end="143:68"><expr pos:start="139:21" pos:end="143:67"><name pos:start="139:21" pos:end="139:27">subpage</name> <operator pos:start="139:29" pos:end="139:29">=</operator> <call pos:start="139:31" pos:end="143:67"><name pos:start="139:31" pos:end="139:42">subpage_init</name><argument_list pos:start="139:43" pos:end="143:67">(<argument pos:start="139:44" pos:end="139:68"><expr pos:start="139:44" pos:end="139:68"><operator pos:start="139:44" pos:end="139:44">(</operator><name pos:start="139:45" pos:end="139:48">addr</name> <operator pos:start="139:50" pos:end="139:50">&amp;</operator> <name pos:start="139:52" pos:end="139:67">TARGET_PAGE_MASK</name><operator pos:start="139:68" pos:end="139:68">)</operator></expr></argument>,

                                           <argument pos:start="141:44" pos:end="141:58"><expr pos:start="141:44" pos:end="141:58"><operator pos:start="141:44" pos:end="141:44">&amp;</operator><name pos:start="141:45" pos:end="141:58"><name pos:start="141:45" pos:end="141:45">p</name><operator pos:start="141:46" pos:end="141:47">-&gt;</operator><name pos:start="141:48" pos:end="141:58">phys_offset</name></name></expr></argument>, <argument pos:start="141:61" pos:end="141:77"><expr pos:start="141:61" pos:end="141:77"><name pos:start="141:61" pos:end="141:77">IO_MEM_UNASSIGNED</name></expr></argument>,

                                           <argument pos:start="143:44" pos:end="143:66"><expr pos:start="143:44" pos:end="143:66"><name pos:start="143:44" pos:end="143:47">addr</name> <operator pos:start="143:49" pos:end="143:49">&amp;</operator> <name pos:start="143:51" pos:end="143:66">TARGET_PAGE_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="145:21" pos:end="147:65"><expr pos:start="145:21" pos:end="147:64"><call pos:start="145:21" pos:end="147:64"><name pos:start="145:21" pos:end="145:36">subpage_register</name><argument_list pos:start="145:37" pos:end="147:64">(<argument pos:start="145:38" pos:end="145:44"><expr pos:start="145:38" pos:end="145:44"><name pos:start="145:38" pos:end="145:44">subpage</name></expr></argument>, <argument pos:start="145:47" pos:end="145:57"><expr pos:start="145:47" pos:end="145:57"><name pos:start="145:47" pos:end="145:57">start_addr2</name></expr></argument>, <argument pos:start="145:60" pos:end="145:68"><expr pos:start="145:60" pos:end="145:68"><name pos:start="145:60" pos:end="145:68">end_addr2</name></expr></argument>,

                                     <argument pos:start="147:38" pos:end="147:48"><expr pos:start="147:38" pos:end="147:48"><name pos:start="147:38" pos:end="147:48">phys_offset</name></expr></argument>, <argument pos:start="147:51" pos:end="147:63"><expr pos:start="147:51" pos:end="147:63"><name pos:start="147:51" pos:end="147:63">region_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:41"><expr pos:start="149:21" pos:end="149:40"><name pos:start="149:21" pos:end="149:36"><name pos:start="149:21" pos:end="149:21">p</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:36">region_offset</name></name> <operator pos:start="149:38" pos:end="149:38">=</operator> <literal type="number" pos:start="149:40" pos:end="149:40">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:42"><expr pos:start="157:9" pos:end="157:41"><name pos:start="157:9" pos:end="157:21">region_offset</name> <operator pos:start="157:23" pos:end="157:24">+=</operator> <name pos:start="157:26" pos:end="157:41">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="163:5" pos:end="165:36">/* since each CPU stores ram addresses in its TLB cache, we must

       reset the modified entries */</comment>

    <comment type="block" pos:start="167:5" pos:end="167:21">/* XXX: slow ! */</comment>

    <for pos:start="169:5" pos:end="173:5">for<control pos:start="169:8" pos:end="169:58">(<init pos:start="169:9" pos:end="169:24"><expr pos:start="169:9" pos:end="169:23"><name pos:start="169:9" pos:end="169:11">env</name> <operator pos:start="169:13" pos:end="169:13">=</operator> <name pos:start="169:15" pos:end="169:23">first_cpu</name></expr>;</init> <condition pos:start="169:26" pos:end="169:37"><expr pos:start="169:26" pos:end="169:36"><name pos:start="169:26" pos:end="169:28">env</name> <operator pos:start="169:30" pos:end="169:31">!=</operator> <name pos:start="169:33" pos:end="169:36">NULL</name></expr>;</condition> <incr pos:start="169:39" pos:end="169:57"><expr pos:start="169:39" pos:end="169:57"><name pos:start="169:39" pos:end="169:41">env</name> <operator pos:start="169:43" pos:end="169:43">=</operator> <name pos:start="169:45" pos:end="169:57"><name pos:start="169:45" pos:end="169:47">env</name><operator pos:start="169:48" pos:end="169:49">-&gt;</operator><name pos:start="169:50" pos:end="169:57">next_cpu</name></name></expr></incr>)</control> <block pos:start="169:60" pos:end="173:5">{<block_content pos:start="171:9" pos:end="171:26">

        <expr_stmt pos:start="171:9" pos:end="171:26"><expr pos:start="171:9" pos:end="171:25"><call pos:start="171:9" pos:end="171:25"><name pos:start="171:9" pos:end="171:17">tlb_flush</name><argument_list pos:start="171:18" pos:end="171:25">(<argument pos:start="171:19" pos:end="171:21"><expr pos:start="171:19" pos:end="171:21"><name pos:start="171:19" pos:end="171:21">env</name></expr></argument>, <argument pos:start="171:24" pos:end="171:24"><expr pos:start="171:24" pos:end="171:24"><literal type="number" pos:start="171:24" pos:end="171:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
