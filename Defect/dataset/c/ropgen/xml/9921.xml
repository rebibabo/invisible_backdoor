<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9921.c" pos:tabs="8"><function pos:start="1:1" pos:end="178:15"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">matroska_parse_block</name><parameter_list pos:start="1:32" pos:end="4:52">(<parameter pos:start="1:33" pos:end="1:62"><decl pos:start="1:33" pos:end="1:62"><type pos:start="1:33" pos:end="1:62"><name pos:start="1:33" pos:end="1:52">MatroskaDemuxContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:62">matroska</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:77"><decl pos:start="1:65" pos:end="1:77"><type pos:start="1:65" pos:end="1:77"><name pos:start="1:65" pos:end="1:71">uint8_t</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">data</name></decl></parameter>,
                                <parameter pos:start="2:33" pos:end="2:40"><decl pos:start="2:33" pos:end="2:40"><type pos:start="2:33" pos:end="2:40"><name pos:start="2:33" pos:end="2:35">int</name></type> <name pos:start="2:37" pos:end="2:40">size</name></decl></parameter>, <parameter pos:start="2:43" pos:end="2:53"><decl pos:start="2:43" pos:end="2:53"><type pos:start="2:43" pos:end="2:53"><name pos:start="2:43" pos:end="2:49">int64_t</name></type> <name pos:start="2:51" pos:end="2:53">pos</name></decl></parameter>, <parameter pos:start="2:56" pos:end="2:76"><decl pos:start="2:56" pos:end="2:76"><type pos:start="2:56" pos:end="2:76"><name pos:start="2:56" pos:end="2:63">uint64_t</name></type> <name pos:start="2:65" pos:end="2:76">cluster_time</name></decl></parameter>,
                                <parameter pos:start="3:33" pos:end="3:49"><decl pos:start="3:33" pos:end="3:49"><type pos:start="3:33" pos:end="3:49"><name pos:start="3:33" pos:end="3:40">uint64_t</name></type> <name pos:start="3:42" pos:end="3:49">duration</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:66"><decl pos:start="3:52" pos:end="3:66"><type pos:start="3:52" pos:end="3:66"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:66">is_keyframe</name></decl></parameter>,
                                <parameter pos:start="4:33" pos:end="4:51"><decl pos:start="4:33" pos:end="4:51"><type pos:start="4:33" pos:end="4:51"><name pos:start="4:33" pos:end="4:39">int64_t</name></type> <name pos:start="4:41" pos:end="4:51">cluster_pos</name></decl></parameter>)</parameter_list>
<block pos:start="5:1" pos:end="178:15">{<block_content pos:start="6:5" pos:end="178:15">
    <decl_stmt pos:start="6:5" pos:end="6:39"><decl pos:start="6:5" pos:end="6:38"><type pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:12">uint64_t</name></type> <name pos:start="6:14" pos:end="6:21">timecode</name> <init pos:start="6:23" pos:end="6:38">= <expr pos:start="6:25" pos:end="6:38"><name pos:start="6:25" pos:end="6:38">AV_NOPTS_VALUE</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MatroskaTrack</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:24">track</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:16"><decl pos:start="8:5" pos:end="8:15"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:11">res</name> <init pos:start="8:13" pos:end="8:15">= <expr pos:start="8:15" pos:end="8:15"><literal type="number" pos:start="8:15" pos:end="8:15">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:18"><decl pos:start="10:5" pos:end="10:17"><type pos:start="10:5" pos:end="10:14"><name pos:start="10:5" pos:end="10:12">AVPacket</name> <modifier pos:start="10:14" pos:end="10:14">*</modifier></type><name pos:start="10:15" pos:end="10:17">pkt</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int16_t</name></type> <name pos:start="11:13" pos:end="11:22">block_time</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:31"><decl pos:start="12:5" pos:end="12:30"><type pos:start="12:5" pos:end="12:14"><name pos:start="12:5" pos:end="12:12">uint32_t</name> <modifier pos:start="12:14" pos:end="12:14">*</modifier></type><name pos:start="12:15" pos:end="12:23">lace_size</name> <init pos:start="12:25" pos:end="12:30">= <expr pos:start="12:27" pos:end="12:30"><name pos:start="12:27" pos:end="12:30">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">n</name></decl>, <decl pos:start="13:12" pos:end="13:16"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:16">flags</name></decl>, <decl pos:start="13:19" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:23">laces</name> <init pos:start="13:25" pos:end="13:27">= <expr pos:start="13:27" pos:end="13:27"><literal type="number" pos:start="13:27" pos:end="13:27">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="14:5" pos:end="14:17"><decl pos:start="14:5" pos:end="14:16"><type pos:start="14:5" pos:end="14:12"><name pos:start="14:5" pos:end="14:12">uint64_t</name></type> <name pos:start="14:14" pos:end="14:16">num</name></decl>;</decl_stmt>
    <if_stmt pos:start="15:5" pos:end="178:15"><if pos:start="15:5" pos:end="178:15">if <condition pos:start="15:8" pos:end="15:68">(<expr pos:start="15:9" pos:end="15:67"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:10">n</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:62"><name pos:start="15:14" pos:end="15:34">matroska_ebmlnum_uint</name><argument_list pos:start="15:35" pos:end="15:62">(<argument pos:start="15:36" pos:end="15:43"><expr pos:start="15:36" pos:end="15:43"><name pos:start="15:36" pos:end="15:43">matroska</name></expr></argument>, <argument pos:start="15:46" pos:end="15:49"><expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">data</name></expr></argument>, <argument pos:start="15:52" pos:end="15:55"><expr pos:start="15:52" pos:end="15:55"><name pos:start="15:52" pos:end="15:55">size</name></expr></argument>, <argument pos:start="15:58" pos:end="15:61"><expr pos:start="15:58" pos:end="15:61"><operator pos:start="15:58" pos:end="15:58">&amp;</operator><name pos:start="15:59" pos:end="15:61">num</name></expr></argument>)</argument_list></call><operator pos:start="15:63" pos:end="15:63">)</operator> <operator pos:start="15:65" pos:end="15:65">&lt;</operator> <literal type="number" pos:start="15:67" pos:end="15:67">0</literal></expr>)</condition> <block pos:start="15:70" pos:end="178:15">{<block_content pos:start="16:9" pos:end="178:15">
        <expr_stmt pos:start="16:9" pos:end="16:71"><expr pos:start="16:9" pos:end="16:70"><call pos:start="16:9" pos:end="16:70"><name pos:start="16:9" pos:end="16:14">av_log</name><argument_list pos:start="16:15" pos:end="16:70">(<argument pos:start="16:16" pos:end="16:28"><expr pos:start="16:16" pos:end="16:28"><name pos:start="16:16" pos:end="16:28"><name pos:start="16:16" pos:end="16:23">matroska</name><operator pos:start="16:24" pos:end="16:25">-&gt;</operator><name pos:start="16:26" pos:end="16:28">ctx</name></name></expr></argument>, <argument pos:start="16:31" pos:end="16:42"><expr pos:start="16:31" pos:end="16:42"><name pos:start="16:31" pos:end="16:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="16:45" pos:end="16:69"><expr pos:start="16:45" pos:end="16:69"><literal type="string" pos:start="16:45" pos:end="16:69">"EBML block data error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">res</name></expr>;</return>
    <expr_stmt pos:start="18:5" pos:end="18:14"><expr pos:start="18:5" pos:end="18:13"><name pos:start="18:5" pos:end="18:8">data</name> <operator pos:start="18:10" pos:end="18:11">+=</operator> <name pos:start="18:13" pos:end="18:13">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:14"><expr pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:8">size</name> <operator pos:start="19:10" pos:end="19:11">-=</operator> <name pos:start="19:13" pos:end="19:13">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:54"><expr pos:start="20:5" pos:end="20:53"><name pos:start="20:5" pos:end="20:9">track</name> <operator pos:start="20:11" pos:end="20:11">=</operator> <call pos:start="20:13" pos:end="20:53"><name pos:start="20:13" pos:end="20:38">matroska_find_track_by_num</name><argument_list pos:start="20:39" pos:end="20:53">(<argument pos:start="20:40" pos:end="20:47"><expr pos:start="20:40" pos:end="20:47"><name pos:start="20:40" pos:end="20:47">matroska</name></expr></argument>, <argument pos:start="20:50" pos:end="20:52"><expr pos:start="20:50" pos:end="20:52"><name pos:start="20:50" pos:end="20:52">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="21:5" pos:end="178:15"><if pos:start="21:5" pos:end="178:15">if <condition pos:start="21:8" pos:end="21:46">(<expr pos:start="21:9" pos:end="21:45"><name pos:start="21:9" pos:end="21:12">size</name> <operator pos:start="21:14" pos:end="21:15">&lt;=</operator> <literal type="number" pos:start="21:17" pos:end="21:17">3</literal> <operator pos:start="21:19" pos:end="21:20">||</operator> <operator pos:start="21:22" pos:end="21:22">!</operator><name pos:start="21:23" pos:end="21:27">track</name> <operator pos:start="21:29" pos:end="21:30">||</operator> <operator pos:start="21:32" pos:end="21:32">!</operator><name pos:start="21:33" pos:end="21:45"><name pos:start="21:33" pos:end="21:37">track</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:45">stream</name></name></expr>)</condition> <block pos:start="21:48" pos:end="178:15">{<block_content pos:start="22:9" pos:end="178:15">
        <expr_stmt pos:start="22:9" pos:end="23:67"><expr pos:start="22:9" pos:end="23:66"><call pos:start="22:9" pos:end="23:66"><name pos:start="22:9" pos:end="22:14">av_log</name><argument_list pos:start="22:15" pos:end="23:66">(<argument pos:start="22:16" pos:end="22:28"><expr pos:start="22:16" pos:end="22:28"><name pos:start="22:16" pos:end="22:28"><name pos:start="22:16" pos:end="22:23">matroska</name><operator pos:start="22:24" pos:end="22:25">-&gt;</operator><name pos:start="22:26" pos:end="22:28">ctx</name></name></expr></argument>, <argument pos:start="22:31" pos:end="22:41"><expr pos:start="22:31" pos:end="22:41"><name pos:start="22:31" pos:end="22:41">AV_LOG_INFO</name></expr></argument>,
               <argument pos:start="23:16" pos:end="23:54"><expr pos:start="23:16" pos:end="23:54"><literal type="string" pos:start="23:16" pos:end="23:33">"Invalid stream %"</literal><name pos:start="23:34" pos:end="23:39">PRIu64</name><literal type="string" pos:start="23:40" pos:end="23:54">" or size %u\n"</literal></expr></argument>, <argument pos:start="23:57" pos:end="23:59"><expr pos:start="23:57" pos:end="23:59"><name pos:start="23:57" pos:end="23:59">num</name></expr></argument>, <argument pos:start="23:62" pos:end="23:65"><expr pos:start="23:62" pos:end="23:65"><name pos:start="23:62" pos:end="23:65">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="24:9" pos:end="24:19">return <expr pos:start="24:16" pos:end="24:18"><name pos:start="24:16" pos:end="24:18">res</name></expr>;</return>
    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:6">st</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <name pos:start="25:10" pos:end="25:22"><name pos:start="25:10" pos:end="25:14">track</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:22">stream</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="26:5" pos:end="27:19"><if pos:start="26:5" pos:end="27:19">if <condition pos:start="26:8" pos:end="26:37">(<expr pos:start="26:9" pos:end="26:36"><name pos:start="26:9" pos:end="26:19"><name pos:start="26:9" pos:end="26:10">st</name><operator pos:start="26:11" pos:end="26:12">-&gt;</operator><name pos:start="26:13" pos:end="26:19">discard</name></name> <operator pos:start="26:21" pos:end="26:22">&gt;=</operator> <name pos:start="26:24" pos:end="26:36">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:19"><block_content pos:start="27:9" pos:end="27:19">
        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">res</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="28:5" pos:end="29:66"><if pos:start="28:5" pos:end="29:66">if <condition pos:start="28:8" pos:end="28:35">(<expr pos:start="28:9" pos:end="28:34"><name pos:start="28:9" pos:end="28:16">duration</name> <operator pos:start="28:18" pos:end="28:19">==</operator> <name pos:start="28:21" pos:end="28:34">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:66"><block_content pos:start="29:9" pos:end="29:66">
        <expr_stmt pos:start="29:9" pos:end="29:66"><expr pos:start="29:9" pos:end="29:65"><name pos:start="29:9" pos:end="29:16">duration</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:42"><name pos:start="29:20" pos:end="29:24">track</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:42">default_duration</name></name> <operator pos:start="29:44" pos:end="29:44">/</operator> <name pos:start="29:46" pos:end="29:65"><name pos:start="29:46" pos:end="29:53">matroska</name><operator pos:start="29:54" pos:end="29:55">-&gt;</operator><name pos:start="29:56" pos:end="29:65">time_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:31"><expr pos:start="30:5" pos:end="30:30"><name pos:start="30:5" pos:end="30:14">block_time</name> <operator pos:start="30:16" pos:end="30:16">=</operator> <call pos:start="30:18" pos:end="30:30"><name pos:start="30:18" pos:end="30:24">AV_RB16</name><argument_list pos:start="30:25" pos:end="30:30">(<argument pos:start="30:26" pos:end="30:29"><expr pos:start="30:26" pos:end="30:29"><name pos:start="30:26" pos:end="30:29">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:14"><expr pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:8">data</name> <operator pos:start="31:10" pos:end="31:11">+=</operator> <literal type="number" pos:start="31:13" pos:end="31:13">2</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:20"><expr pos:start="32:5" pos:end="32:19"><name pos:start="32:5" pos:end="32:9">flags</name> <operator pos:start="32:11" pos:end="32:11">=</operator> <operator pos:start="32:13" pos:end="32:13">*</operator><name pos:start="32:14" pos:end="32:17">data</name><operator pos:start="32:18" pos:end="32:19">++</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:14"><expr pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:8">size</name> <operator pos:start="33:10" pos:end="33:11">-=</operator> <literal type="number" pos:start="33:13" pos:end="33:13">3</literal></expr>;</expr_stmt>
    <if_stmt pos:start="34:5" pos:end="35:54"><if pos:start="34:5" pos:end="35:54">if <condition pos:start="34:8" pos:end="34:26">(<expr pos:start="34:9" pos:end="34:25"><name pos:start="34:9" pos:end="34:19">is_keyframe</name> <operator pos:start="34:21" pos:end="34:22">==</operator> <operator pos:start="34:24" pos:end="34:24">-</operator><literal type="number" pos:start="34:25" pos:end="34:25">1</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:54"><block_content pos:start="35:9" pos:end="35:54">
        <expr_stmt pos:start="35:9" pos:end="35:54"><expr pos:start="35:9" pos:end="35:53"><name pos:start="35:9" pos:end="35:19">is_keyframe</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <ternary pos:start="35:23" pos:end="35:53"><condition pos:start="35:23" pos:end="35:36"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:27">flags</name> <operator pos:start="35:29" pos:end="35:29">&amp;</operator> <literal type="number" pos:start="35:31" pos:end="35:34">0x80</literal></expr> ?</condition><then pos:start="35:38" pos:end="35:49"> <expr pos:start="35:38" pos:end="35:49"><name pos:start="35:38" pos:end="35:49">PKT_FLAG_KEY</name></expr> </then><else pos:start="35:51" pos:end="35:53">: <expr pos:start="35:53" pos:end="35:53"><literal type="number" pos:start="35:53" pos:end="35:53">0</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="36:5" pos:end="178:15"><if pos:start="36:5" pos:end="178:15">if <condition pos:start="36:8" pos:end="37:60">(<expr pos:start="36:9" pos:end="37:59"><name pos:start="36:9" pos:end="36:20">cluster_time</name> <operator pos:start="36:22" pos:end="36:23">!=</operator> <operator pos:start="36:25" pos:end="36:25">(</operator><name pos:start="36:26" pos:end="36:33">uint64_t</name><operator pos:start="36:34" pos:end="36:34">)</operator><operator pos:start="36:35" pos:end="36:35">-</operator><literal type="number" pos:start="36:36" pos:end="36:36">1</literal>
        <operator pos:start="37:9" pos:end="37:10">&amp;&amp;</operator> <operator pos:start="37:12" pos:end="37:12">(</operator><name pos:start="37:13" pos:end="37:22">block_time</name> <operator pos:start="37:24" pos:end="37:25">&gt;=</operator> <literal type="number" pos:start="37:27" pos:end="37:27">0</literal> <operator pos:start="37:29" pos:end="37:30">||</operator> <name pos:start="37:32" pos:end="37:43">cluster_time</name> <operator pos:start="37:45" pos:end="37:46">&gt;=</operator> <operator pos:start="37:48" pos:end="37:48">-</operator><name pos:start="37:49" pos:end="37:58">block_time</name><operator pos:start="37:59" pos:end="37:59">)</operator></expr>)</condition> <block pos:start="37:62" pos:end="178:15">{<block_content pos:start="38:9" pos:end="178:15">
        <expr_stmt pos:start="38:9" pos:end="38:45"><expr pos:start="38:9" pos:end="38:44"><name pos:start="38:9" pos:end="38:16">timecode</name> <operator pos:start="38:18" pos:end="38:18">=</operator> <name pos:start="38:20" pos:end="38:31">cluster_time</name> <operator pos:start="38:33" pos:end="38:33">+</operator> <name pos:start="38:35" pos:end="38:44">block_time</name></expr>;</expr_stmt>
        <if_stmt pos:start="39:9" pos:end="41:28"><if pos:start="39:9" pos:end="41:28">if <condition pos:start="39:12" pos:end="40:46">(<expr pos:start="39:13" pos:end="40:45"><name pos:start="39:13" pos:end="39:23"><name pos:start="39:13" pos:end="39:17">track</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:23">type</name></name> <operator pos:start="39:25" pos:end="39:26">==</operator> <name pos:start="39:28" pos:end="39:55">MATROSKA_TRACK_TYPE_SUBTITLE</name>
            <operator pos:start="40:13" pos:end="40:14">&amp;&amp;</operator> <name pos:start="40:16" pos:end="40:23">timecode</name> <operator pos:start="40:25" pos:end="40:25">&lt;</operator> <name pos:start="40:27" pos:end="40:45"><name pos:start="40:27" pos:end="40:31">track</name><operator pos:start="40:32" pos:end="40:33">-&gt;</operator><name pos:start="40:34" pos:end="40:45">end_timecode</name></name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:28"><block_content pos:start="41:13" pos:end="41:28">
            <expr_stmt pos:start="41:13" pos:end="41:28"><expr pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:23">is_keyframe</name> <operator pos:start="41:25" pos:end="41:25">=</operator> <literal type="number" pos:start="41:27" pos:end="41:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="block" pos:start="41:31" pos:end="41:75">/* overlapping subtitles are not key frame */</comment>
        <if_stmt pos:start="42:9" pos:end="43:80"><if pos:start="42:9" pos:end="43:80">if <condition pos:start="42:12" pos:end="42:24">(<expr pos:start="42:13" pos:end="42:23"><name pos:start="42:13" pos:end="42:23">is_keyframe</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:80"><block_content pos:start="43:13" pos:end="43:80">
            <expr_stmt pos:start="43:13" pos:end="43:80"><expr pos:start="43:13" pos:end="43:79"><call pos:start="43:13" pos:end="43:79"><name pos:start="43:13" pos:end="43:30">av_add_index_entry</name><argument_list pos:start="43:31" pos:end="43:79">(<argument pos:start="43:32" pos:end="43:33"><expr pos:start="43:32" pos:end="43:33"><name pos:start="43:32" pos:end="43:33">st</name></expr></argument>, <argument pos:start="43:36" pos:end="43:46"><expr pos:start="43:36" pos:end="43:46"><name pos:start="43:36" pos:end="43:46">cluster_pos</name></expr></argument>, <argument pos:start="43:49" pos:end="43:56"><expr pos:start="43:49" pos:end="43:56"><name pos:start="43:49" pos:end="43:56">timecode</name></expr></argument>, <argument pos:start="43:59" pos:end="43:59"><expr pos:start="43:59" pos:end="43:59"><literal type="number" pos:start="43:59" pos:end="43:59">0</literal></expr></argument>,<argument pos:start="43:61" pos:end="43:61"><expr pos:start="43:61" pos:end="43:61"><literal type="number" pos:start="43:61" pos:end="43:61">0</literal></expr></argument>,<argument pos:start="43:63" pos:end="43:78"><expr pos:start="43:63" pos:end="43:78"><name pos:start="43:63" pos:end="43:78">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="44:9" pos:end="44:76"><expr pos:start="44:9" pos:end="44:75"><name pos:start="44:9" pos:end="44:27"><name pos:start="44:9" pos:end="44:13">track</name><operator pos:start="44:14" pos:end="44:15">-&gt;</operator><name pos:start="44:16" pos:end="44:27">end_timecode</name></name> <operator pos:start="44:29" pos:end="44:29">=</operator> <call pos:start="44:31" pos:end="44:75"><name pos:start="44:31" pos:end="44:35">FFMAX</name><argument_list pos:start="44:36" pos:end="44:75">(<argument pos:start="44:37" pos:end="44:55"><expr pos:start="44:37" pos:end="44:55"><name pos:start="44:37" pos:end="44:55"><name pos:start="44:37" pos:end="44:41">track</name><operator pos:start="44:42" pos:end="44:43">-&gt;</operator><name pos:start="44:44" pos:end="44:55">end_timecode</name></name></expr></argument>, <argument pos:start="44:58" pos:end="44:74"><expr pos:start="44:58" pos:end="44:74"><name pos:start="44:58" pos:end="44:65">timecode</name><operator pos:start="44:66" pos:end="44:66">+</operator><name pos:start="44:67" pos:end="44:74">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="45:5" pos:end="178:15"><if pos:start="45:5" pos:end="178:15">if <condition pos:start="45:8" pos:end="45:82">(<expr pos:start="45:9" pos:end="45:81"><name pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:16">matroska</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:34">skip_to_keyframe</name></name> <operator pos:start="45:36" pos:end="45:37">&amp;&amp;</operator> <name pos:start="45:39" pos:end="45:49"><name pos:start="45:39" pos:end="45:43">track</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:49">type</name></name> <operator pos:start="45:51" pos:end="45:52">!=</operator> <name pos:start="45:54" pos:end="45:81">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="45:84" pos:end="178:15">{<block_content pos:start="46:9" pos:end="178:15">
        <if_stmt pos:start="46:9" pos:end="47:23"><if pos:start="46:9" pos:end="47:23">if <condition pos:start="46:12" pos:end="46:66">(<expr pos:start="46:13" pos:end="46:65"><operator pos:start="46:13" pos:end="46:13">!</operator><name pos:start="46:14" pos:end="46:24">is_keyframe</name> <operator pos:start="46:26" pos:end="46:27">||</operator> <name pos:start="46:29" pos:end="46:36">timecode</name> <operator pos:start="46:38" pos:end="46:38">&lt;</operator> <name pos:start="46:40" pos:end="46:65"><name pos:start="46:40" pos:end="46:47">matroska</name><operator pos:start="46:48" pos:end="46:49">-&gt;</operator><name pos:start="46:50" pos:end="46:65">skip_to_timecode</name></name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:23"><block_content pos:start="47:13" pos:end="47:23">
            <return pos:start="47:13" pos:end="47:23">return <expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">res</name></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="48:9" pos:end="48:39"><expr pos:start="48:9" pos:end="48:38"><name pos:start="48:9" pos:end="48:34"><name pos:start="48:9" pos:end="48:16">matroska</name><operator pos:start="48:17" pos:end="48:18">-&gt;</operator><name pos:start="48:19" pos:end="48:34">skip_to_keyframe</name></name> <operator pos:start="48:36" pos:end="48:36">=</operator> <literal type="number" pos:start="48:38" pos:end="48:38">0</literal></expr>;</expr_stmt>
    <switch pos:start="49:5" pos:end="178:15">switch <condition pos:start="49:12" pos:end="49:32">(<expr pos:start="49:13" pos:end="49:31"><operator pos:start="49:13" pos:end="49:13">(</operator><name pos:start="49:14" pos:end="49:18">flags</name> <operator pos:start="49:20" pos:end="49:20">&amp;</operator> <literal type="number" pos:start="49:22" pos:end="49:25">0x06</literal><operator pos:start="49:26" pos:end="49:26">)</operator> <operator pos:start="49:28" pos:end="49:29">&gt;&gt;</operator> <literal type="number" pos:start="49:31" pos:end="49:31">1</literal></expr>)</condition> <block pos:start="49:34" pos:end="178:15">{<block_content pos:start="50:9" pos:end="178:15">
        <case pos:start="50:9" pos:end="50:17">case <expr pos:start="50:14" pos:end="50:16"><literal type="number" pos:start="50:14" pos:end="50:16">0x0</literal></expr>:</case> <comment type="block" pos:start="50:19" pos:end="50:33">/* no lacing */</comment>
            <expr_stmt pos:start="51:13" pos:end="51:22"><expr pos:start="51:13" pos:end="51:21"><name pos:start="51:13" pos:end="51:17">laces</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <literal type="number" pos:start="51:21" pos:end="51:21">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="52:13" pos:end="52:48"><expr pos:start="52:13" pos:end="52:47"><name pos:start="52:13" pos:end="52:21">lace_size</name> <operator pos:start="52:23" pos:end="52:23">=</operator> <call pos:start="52:25" pos:end="52:47"><name pos:start="52:25" pos:end="52:34">av_mallocz</name><argument_list pos:start="52:35" pos:end="52:47">(<argument pos:start="52:36" pos:end="52:46"><expr pos:start="52:36" pos:end="52:46"><sizeof pos:start="52:36" pos:end="52:46">sizeof<argument_list pos:start="52:42" pos:end="52:46">(<argument pos:start="52:43" pos:end="52:45"><expr pos:start="52:43" pos:end="52:45"><name pos:start="52:43" pos:end="52:45">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="53:13" pos:end="53:32"><expr pos:start="53:13" pos:end="53:31"><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:21">lace_size</name><index pos:start="53:22" pos:end="53:24">[<expr pos:start="53:23" pos:end="53:23"><literal type="number" pos:start="53:23" pos:end="53:23">0</literal></expr>]</index></name> <operator pos:start="53:26" pos:end="53:26">=</operator> <name pos:start="53:28" pos:end="53:31">size</name></expr>;</expr_stmt>
        <case pos:start="54:9" pos:end="54:17">case <expr pos:start="54:14" pos:end="54:16"><literal type="number" pos:start="54:14" pos:end="54:16">0x1</literal></expr>:</case> <comment type="block" pos:start="54:19" pos:end="54:35">/* Xiph lacing */</comment>
        <case pos:start="55:9" pos:end="55:17">case <expr pos:start="55:14" pos:end="55:16"><literal type="number" pos:start="55:14" pos:end="55:16">0x2</literal></expr>:</case> <comment type="block" pos:start="55:19" pos:end="55:41">/* fixed-size lacing */</comment>
        <case pos:start="56:9" pos:end="56:17">case <expr pos:start="56:14" pos:end="56:16"><literal type="number" pos:start="56:14" pos:end="56:16">0x3</literal></expr>:</case> <comment type="block" pos:start="56:19" pos:end="56:35">/* EBML lacing */</comment>
            <expr_stmt pos:start="57:13" pos:end="57:27"><expr pos:start="57:13" pos:end="57:26"><call pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:18">assert</name><argument_list pos:start="57:19" pos:end="57:26">(<argument pos:start="57:20" pos:end="57:25"><expr pos:start="57:20" pos:end="57:25"><name pos:start="57:20" pos:end="57:23">size</name><operator pos:start="57:24" pos:end="57:24">&gt;</operator><literal type="number" pos:start="57:25" pos:end="57:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="57:29" pos:end="57:71">// size &lt;=3 is checked before size-=3 above</comment>
            <expr_stmt pos:start="58:13" pos:end="58:32"><expr pos:start="58:13" pos:end="58:31"><name pos:start="58:13" pos:end="58:17">laces</name> <operator pos:start="58:19" pos:end="58:19">=</operator> <operator pos:start="58:21" pos:end="58:21">(</operator><operator pos:start="58:22" pos:end="58:22">*</operator><name pos:start="58:23" pos:end="58:26">data</name><operator pos:start="58:27" pos:end="58:27">)</operator> <operator pos:start="58:29" pos:end="58:29">+</operator> <literal type="number" pos:start="58:31" pos:end="58:31">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="59:13" pos:end="59:22"><expr pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:16">data</name> <operator pos:start="59:18" pos:end="59:19">+=</operator> <literal type="number" pos:start="59:21" pos:end="59:21">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="60:13" pos:end="60:22"><expr pos:start="60:13" pos:end="60:21"><name pos:start="60:13" pos:end="60:16">size</name> <operator pos:start="60:18" pos:end="60:19">-=</operator> <literal type="number" pos:start="60:21" pos:end="60:21">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="61:13" pos:end="61:56"><expr pos:start="61:13" pos:end="61:55"><name pos:start="61:13" pos:end="61:21">lace_size</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <call pos:start="61:25" pos:end="61:55"><name pos:start="61:25" pos:end="61:34">av_mallocz</name><argument_list pos:start="61:35" pos:end="61:55">(<argument pos:start="61:36" pos:end="61:54"><expr pos:start="61:36" pos:end="61:54"><name pos:start="61:36" pos:end="61:40">laces</name> <operator pos:start="61:42" pos:end="61:42">*</operator> <sizeof pos:start="61:44" pos:end="61:54">sizeof<argument_list pos:start="61:50" pos:end="61:54">(<argument pos:start="61:51" pos:end="61:53"><expr pos:start="61:51" pos:end="61:53"><name pos:start="61:51" pos:end="61:53">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <switch pos:start="62:13" pos:end="178:15">switch <condition pos:start="62:20" pos:end="62:40">(<expr pos:start="62:21" pos:end="62:39"><operator pos:start="62:21" pos:end="62:21">(</operator><name pos:start="62:22" pos:end="62:26">flags</name> <operator pos:start="62:28" pos:end="62:28">&amp;</operator> <literal type="number" pos:start="62:30" pos:end="62:33">0x06</literal><operator pos:start="62:34" pos:end="62:34">)</operator> <operator pos:start="62:36" pos:end="62:37">&gt;&gt;</operator> <literal type="number" pos:start="62:39" pos:end="62:39">1</literal></expr>)</condition> <block pos:start="62:42" pos:end="178:15">{<block_content pos:start="63:17" pos:end="178:15">
                <case pos:start="63:17" pos:end="63:25">case <expr pos:start="63:22" pos:end="63:24"><literal type="number" pos:start="63:22" pos:end="63:24">0x1</literal></expr>:</case> <comment type="block" pos:start="63:27" pos:end="63:43">/* Xiph lacing */</comment> <block pos:start="63:45" pos:end="178:15">{<block_content pos:start="64:21" pos:end="178:15">
                    <decl_stmt pos:start="64:21" pos:end="64:33"><decl pos:start="64:21" pos:end="64:32"><type pos:start="64:21" pos:end="64:27"><name pos:start="64:21" pos:end="64:27">uint8_t</name></type> <name pos:start="64:29" pos:end="64:32">temp</name></decl>;</decl_stmt>
                    <decl_stmt pos:start="65:21" pos:end="65:39"><decl pos:start="65:21" pos:end="65:38"><type pos:start="65:21" pos:end="65:28"><name pos:start="65:21" pos:end="65:28">uint32_t</name></type> <name pos:start="65:30" pos:end="65:34">total</name> <init pos:start="65:36" pos:end="65:38">= <expr pos:start="65:38" pos:end="65:38"><literal type="number" pos:start="65:38" pos:end="65:38">0</literal></expr></init></decl>;</decl_stmt>
                    <for pos:start="66:21" pos:end="178:15">for <control pos:start="66:25" pos:end="66:63">(<init pos:start="66:26" pos:end="66:31"><expr pos:start="66:26" pos:end="66:30"><name pos:start="66:26" pos:end="66:26">n</name> <operator pos:start="66:28" pos:end="66:28">=</operator> <literal type="number" pos:start="66:30" pos:end="66:30">0</literal></expr>;</init> <condition pos:start="66:33" pos:end="66:58"><expr pos:start="66:33" pos:end="66:57"><name pos:start="66:33" pos:end="66:35">res</name> <operator pos:start="66:37" pos:end="66:38">==</operator> <literal type="number" pos:start="66:40" pos:end="66:40">0</literal> <operator pos:start="66:42" pos:end="66:43">&amp;&amp;</operator> <name pos:start="66:45" pos:end="66:45">n</name> <operator pos:start="66:47" pos:end="66:47">&lt;</operator> <name pos:start="66:49" pos:end="66:53">laces</name> <operator pos:start="66:55" pos:end="66:55">-</operator> <literal type="number" pos:start="66:57" pos:end="66:57">1</literal></expr>;</condition> <incr pos:start="66:60" pos:end="66:62"><expr pos:start="66:60" pos:end="66:62"><name pos:start="66:60" pos:end="66:60">n</name><operator pos:start="66:61" pos:end="66:62">++</operator></expr></incr>)</control> <block pos:start="66:65" pos:end="178:15">{<block_content pos:start="67:25" pos:end="178:15">
                        <while pos:start="67:25" pos:end="178:15">while <condition pos:start="67:31" pos:end="67:33">(<expr pos:start="67:32" pos:end="67:32"><literal type="number" pos:start="67:32" pos:end="67:32">1</literal></expr>)</condition> <block pos:start="67:35" pos:end="178:15">{<block_content pos:start="68:29" pos:end="178:15">
                            <if_stmt pos:start="68:29" pos:end="178:15"><if pos:start="68:29" pos:end="178:15">if <condition pos:start="68:32" pos:end="68:42">(<expr pos:start="68:33" pos:end="68:41"><name pos:start="68:33" pos:end="68:36">size</name> <operator pos:start="68:38" pos:end="68:39">==</operator> <literal type="number" pos:start="68:41" pos:end="68:41">0</literal></expr>)</condition> <block pos:start="68:44" pos:end="178:15">{<block_content pos:start="69:33" pos:end="178:15">
                                <expr_stmt pos:start="69:33" pos:end="69:41"><expr pos:start="69:33" pos:end="69:40"><name pos:start="69:33" pos:end="69:35">res</name> <operator pos:start="69:37" pos:end="69:37">=</operator> <operator pos:start="69:39" pos:end="69:39">-</operator><literal type="number" pos:start="69:40" pos:end="69:40">1</literal></expr>;</expr_stmt>
                            <expr_stmt pos:start="70:29" pos:end="70:41"><expr pos:start="70:29" pos:end="70:40"><name pos:start="70:29" pos:end="70:32">temp</name> <operator pos:start="70:34" pos:end="70:34">=</operator> <operator pos:start="70:36" pos:end="70:36">*</operator><name pos:start="70:37" pos:end="70:40">data</name></expr>;</expr_stmt>
                            <expr_stmt pos:start="71:29" pos:end="71:49"><expr pos:start="71:29" pos:end="71:48"><name pos:start="71:29" pos:end="71:40"><name pos:start="71:29" pos:end="71:37">lace_size</name><index pos:start="71:38" pos:end="71:40">[<expr pos:start="71:39" pos:end="71:39"><name pos:start="71:39" pos:end="71:39">n</name></expr>]</index></name> <operator pos:start="71:42" pos:end="71:43">+=</operator> <name pos:start="71:45" pos:end="71:48">temp</name></expr>;</expr_stmt>
                            <expr_stmt pos:start="72:29" pos:end="72:38"><expr pos:start="72:29" pos:end="72:37"><name pos:start="72:29" pos:end="72:32">data</name> <operator pos:start="72:34" pos:end="72:35">+=</operator> <literal type="number" pos:start="72:37" pos:end="72:37">1</literal></expr>;</expr_stmt>
                            <expr_stmt pos:start="73:29" pos:end="73:38"><expr pos:start="73:29" pos:end="73:37"><name pos:start="73:29" pos:end="73:32">size</name> <operator pos:start="73:34" pos:end="73:35">-=</operator> <literal type="number" pos:start="73:37" pos:end="73:37">1</literal></expr>;</expr_stmt>
                            <if_stmt pos:start="74:29" pos:end="75:46"><if pos:start="74:29" pos:end="75:46">if <condition pos:start="74:32" pos:end="74:45">(<expr pos:start="74:33" pos:end="74:44"><name pos:start="74:33" pos:end="74:36">temp</name> <operator pos:start="74:38" pos:end="74:39">!=</operator> <literal type="number" pos:start="74:41" pos:end="74:44">0xff</literal></expr>)</condition><block type="pseudo" pos:start="75:25" pos:end="75:46"><block_content pos:start="75:25" pos:end="75:46">
                        <expr_stmt pos:start="75:25" pos:end="75:46"><expr pos:start="75:25" pos:end="75:45"><name pos:start="75:25" pos:end="75:29">total</name> <operator pos:start="75:31" pos:end="75:32">+=</operator> <name pos:start="75:34" pos:end="75:45"><name pos:start="75:34" pos:end="75:42">lace_size</name><index pos:start="75:43" pos:end="75:45">[<expr pos:start="75:44" pos:end="75:44"><name pos:start="75:44" pos:end="75:44">n</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    <expr_stmt pos:start="76:21" pos:end="76:48"><expr pos:start="76:21" pos:end="76:47"><name pos:start="76:21" pos:end="76:32"><name pos:start="76:21" pos:end="76:29">lace_size</name><index pos:start="76:30" pos:end="76:32">[<expr pos:start="76:31" pos:end="76:31"><name pos:start="76:31" pos:end="76:31">n</name></expr>]</index></name> <operator pos:start="76:34" pos:end="76:34">=</operator> <name pos:start="76:36" pos:end="76:39">size</name> <operator pos:start="76:41" pos:end="76:41">-</operator> <name pos:start="76:43" pos:end="76:47">total</name></expr>;</expr_stmt>
                <case pos:start="77:17" pos:end="77:25">case <expr pos:start="77:22" pos:end="77:24"><literal type="number" pos:start="77:22" pos:end="77:24">0x2</literal></expr>:</case> <comment type="block" pos:start="77:27" pos:end="77:49">/* fixed-size lacing */</comment>
                    <for pos:start="78:21" pos:end="79:52">for <control pos:start="78:25" pos:end="78:47">(<init pos:start="78:26" pos:end="78:31"><expr pos:start="78:26" pos:end="78:30"><name pos:start="78:26" pos:end="78:26">n</name> <operator pos:start="78:28" pos:end="78:28">=</operator> <literal type="number" pos:start="78:30" pos:end="78:30">0</literal></expr>;</init> <condition pos:start="78:33" pos:end="78:42"><expr pos:start="78:33" pos:end="78:41"><name pos:start="78:33" pos:end="78:33">n</name> <operator pos:start="78:35" pos:end="78:35">&lt;</operator> <name pos:start="78:37" pos:end="78:41">laces</name></expr>;</condition> <incr pos:start="78:44" pos:end="78:46"><expr pos:start="78:44" pos:end="78:46"><name pos:start="78:44" pos:end="78:44">n</name><operator pos:start="78:45" pos:end="78:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="79:25" pos:end="79:52"><block_content pos:start="79:25" pos:end="79:52">
                        <expr_stmt pos:start="79:25" pos:end="79:52"><expr pos:start="79:25" pos:end="79:51"><name pos:start="79:25" pos:end="79:36"><name pos:start="79:25" pos:end="79:33">lace_size</name><index pos:start="79:34" pos:end="79:36">[<expr pos:start="79:35" pos:end="79:35"><name pos:start="79:35" pos:end="79:35">n</name></expr>]</index></name> <operator pos:start="79:38" pos:end="79:38">=</operator> <name pos:start="79:40" pos:end="79:43">size</name> <operator pos:start="79:45" pos:end="79:45">/</operator> <name pos:start="79:47" pos:end="79:51">laces</name></expr>;</expr_stmt></block_content></block></for>
                <case pos:start="80:17" pos:end="80:25">case <expr pos:start="80:22" pos:end="80:24"><literal type="number" pos:start="80:22" pos:end="80:24">0x3</literal></expr>:</case> <comment type="block" pos:start="80:27" pos:end="80:43">/* EBML lacing */</comment> <block pos:start="80:45" pos:end="178:15">{<block_content pos:start="81:21" pos:end="178:15">
                    <decl_stmt pos:start="81:21" pos:end="81:35"><decl pos:start="81:21" pos:end="81:34"><type pos:start="81:21" pos:end="81:28"><name pos:start="81:21" pos:end="81:28">uint32_t</name></type> <name pos:start="81:30" pos:end="81:34">total</name></decl>;</decl_stmt>
                    <expr_stmt pos:start="82:21" pos:end="82:74"><expr pos:start="82:21" pos:end="82:73"><name pos:start="82:21" pos:end="82:21">n</name> <operator pos:start="82:23" pos:end="82:23">=</operator> <call pos:start="82:25" pos:end="82:73"><name pos:start="82:25" pos:end="82:45">matroska_ebmlnum_uint</name><argument_list pos:start="82:46" pos:end="82:73">(<argument pos:start="82:47" pos:end="82:54"><expr pos:start="82:47" pos:end="82:54"><name pos:start="82:47" pos:end="82:54">matroska</name></expr></argument>, <argument pos:start="82:57" pos:end="82:60"><expr pos:start="82:57" pos:end="82:60"><name pos:start="82:57" pos:end="82:60">data</name></expr></argument>, <argument pos:start="82:63" pos:end="82:66"><expr pos:start="82:63" pos:end="82:66"><name pos:start="82:63" pos:end="82:66">size</name></expr></argument>, <argument pos:start="82:69" pos:end="82:72"><expr pos:start="82:69" pos:end="82:72"><operator pos:start="82:69" pos:end="82:69">&amp;</operator><name pos:start="82:70" pos:end="82:72">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if_stmt pos:start="83:21" pos:end="178:15"><if pos:start="83:21" pos:end="178:15">if <condition pos:start="83:24" pos:end="83:30">(<expr pos:start="83:25" pos:end="83:29"><name pos:start="83:25" pos:end="83:25">n</name> <operator pos:start="83:27" pos:end="83:27">&lt;</operator> <literal type="number" pos:start="83:29" pos:end="83:29">0</literal></expr>)</condition> <block pos:start="83:32" pos:end="178:15">{<block_content pos:start="84:25" pos:end="178:15">
                        <expr_stmt pos:start="84:25" pos:end="85:58"><expr pos:start="84:25" pos:end="85:57"><call pos:start="84:25" pos:end="85:57"><name pos:start="84:25" pos:end="84:30">av_log</name><argument_list pos:start="84:31" pos:end="85:57">(<argument pos:start="84:32" pos:end="84:44"><expr pos:start="84:32" pos:end="84:44"><name pos:start="84:32" pos:end="84:44"><name pos:start="84:32" pos:end="84:39">matroska</name><operator pos:start="84:40" pos:end="84:41">-&gt;</operator><name pos:start="84:42" pos:end="84:44">ctx</name></name></expr></argument>, <argument pos:start="84:47" pos:end="84:57"><expr pos:start="84:47" pos:end="84:57"><name pos:start="84:47" pos:end="84:57">AV_LOG_INFO</name></expr></argument>,
                               <argument pos:start="85:32" pos:end="85:56"><expr pos:start="85:32" pos:end="85:56"><literal type="string" pos:start="85:32" pos:end="85:56">"EBML block data error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="86:21" pos:end="86:30"><expr pos:start="86:21" pos:end="86:29"><name pos:start="86:21" pos:end="86:24">data</name> <operator pos:start="86:26" pos:end="86:27">+=</operator> <name pos:start="86:29" pos:end="86:29">n</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="87:21" pos:end="87:30"><expr pos:start="87:21" pos:end="87:29"><name pos:start="87:21" pos:end="87:24">size</name> <operator pos:start="87:26" pos:end="87:27">-=</operator> <name pos:start="87:29" pos:end="87:29">n</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="88:21" pos:end="88:47"><expr pos:start="88:21" pos:end="88:46"><name pos:start="88:21" pos:end="88:25">total</name> <operator pos:start="88:27" pos:end="88:27">=</operator> <name pos:start="88:29" pos:end="88:40"><name pos:start="88:29" pos:end="88:37">lace_size</name><index pos:start="88:38" pos:end="88:40">[<expr pos:start="88:39" pos:end="88:39"><literal type="number" pos:start="88:39" pos:end="88:39">0</literal></expr>]</index></name> <operator pos:start="88:42" pos:end="88:42">=</operator> <name pos:start="88:44" pos:end="88:46">num</name></expr>;</expr_stmt>
                    <for pos:start="89:21" pos:end="178:15">for <control pos:start="89:25" pos:end="89:63">(<init pos:start="89:26" pos:end="89:31"><expr pos:start="89:26" pos:end="89:30"><name pos:start="89:26" pos:end="89:26">n</name> <operator pos:start="89:28" pos:end="89:28">=</operator> <literal type="number" pos:start="89:30" pos:end="89:30">1</literal></expr>;</init> <condition pos:start="89:33" pos:end="89:58"><expr pos:start="89:33" pos:end="89:57"><name pos:start="89:33" pos:end="89:35">res</name> <operator pos:start="89:37" pos:end="89:38">==</operator> <literal type="number" pos:start="89:40" pos:end="89:40">0</literal> <operator pos:start="89:42" pos:end="89:43">&amp;&amp;</operator> <name pos:start="89:45" pos:end="89:45">n</name> <operator pos:start="89:47" pos:end="89:47">&lt;</operator> <name pos:start="89:49" pos:end="89:53">laces</name> <operator pos:start="89:55" pos:end="89:55">-</operator> <literal type="number" pos:start="89:57" pos:end="89:57">1</literal></expr>;</condition> <incr pos:start="89:60" pos:end="89:62"><expr pos:start="89:60" pos:end="89:62"><name pos:start="89:60" pos:end="89:60">n</name><operator pos:start="89:61" pos:end="89:62">++</operator></expr></incr>)</control> <block pos:start="89:65" pos:end="178:15">{<block_content pos:start="90:25" pos:end="178:15">
                        <decl_stmt pos:start="90:25" pos:end="90:37"><decl pos:start="90:25" pos:end="90:36"><type pos:start="90:25" pos:end="90:31"><name pos:start="90:25" pos:end="90:31">int64_t</name></type> <name pos:start="90:33" pos:end="90:36">snum</name></decl>;</decl_stmt>
                        <decl_stmt pos:start="91:25" pos:end="91:30"><decl pos:start="91:25" pos:end="91:29"><type pos:start="91:25" pos:end="91:27"><name pos:start="91:25" pos:end="91:27">int</name></type> <name pos:start="91:29" pos:end="91:29">r</name></decl>;</decl_stmt>
                        <expr_stmt pos:start="92:25" pos:end="92:79"><expr pos:start="92:25" pos:end="92:78"><name pos:start="92:25" pos:end="92:25">r</name> <operator pos:start="92:27" pos:end="92:27">=</operator> <call pos:start="92:29" pos:end="92:78"><name pos:start="92:29" pos:end="92:49">matroska_ebmlnum_sint</name><argument_list pos:start="92:50" pos:end="92:78">(<argument pos:start="92:51" pos:end="92:58"><expr pos:start="92:51" pos:end="92:58"><name pos:start="92:51" pos:end="92:58">matroska</name></expr></argument>, <argument pos:start="92:61" pos:end="92:64"><expr pos:start="92:61" pos:end="92:64"><name pos:start="92:61" pos:end="92:64">data</name></expr></argument>, <argument pos:start="92:67" pos:end="92:70"><expr pos:start="92:67" pos:end="92:70"><name pos:start="92:67" pos:end="92:70">size</name></expr></argument>, <argument pos:start="92:73" pos:end="92:77"><expr pos:start="92:73" pos:end="92:77"><operator pos:start="92:73" pos:end="92:73">&amp;</operator><name pos:start="92:74" pos:end="92:77">snum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if_stmt pos:start="93:25" pos:end="178:15"><if pos:start="93:25" pos:end="178:15">if <condition pos:start="93:28" pos:end="93:34">(<expr pos:start="93:29" pos:end="93:33"><name pos:start="93:29" pos:end="93:29">r</name> <operator pos:start="93:31" pos:end="93:31">&lt;</operator> <literal type="number" pos:start="93:33" pos:end="93:33">0</literal></expr>)</condition> <block pos:start="93:36" pos:end="178:15">{<block_content pos:start="94:29" pos:end="178:15">
                            <expr_stmt pos:start="94:29" pos:end="95:62"><expr pos:start="94:29" pos:end="95:61"><call pos:start="94:29" pos:end="95:61"><name pos:start="94:29" pos:end="94:34">av_log</name><argument_list pos:start="94:35" pos:end="95:61">(<argument pos:start="94:36" pos:end="94:48"><expr pos:start="94:36" pos:end="94:48"><name pos:start="94:36" pos:end="94:48"><name pos:start="94:36" pos:end="94:43">matroska</name><operator pos:start="94:44" pos:end="94:45">-&gt;</operator><name pos:start="94:46" pos:end="94:48">ctx</name></name></expr></argument>, <argument pos:start="94:51" pos:end="94:61"><expr pos:start="94:51" pos:end="94:61"><name pos:start="94:51" pos:end="94:61">AV_LOG_INFO</name></expr></argument>,
                                   <argument pos:start="95:36" pos:end="95:60"><expr pos:start="95:36" pos:end="95:60"><literal type="string" pos:start="95:36" pos:end="95:60">"EBML block data error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt pos:start="96:25" pos:end="96:34"><expr pos:start="96:25" pos:end="96:33"><name pos:start="96:25" pos:end="96:28">data</name> <operator pos:start="96:30" pos:end="96:31">+=</operator> <name pos:start="96:33" pos:end="96:33">r</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="97:25" pos:end="97:34"><expr pos:start="97:25" pos:end="97:33"><name pos:start="97:25" pos:end="97:28">size</name> <operator pos:start="97:30" pos:end="97:31">-=</operator> <name pos:start="97:33" pos:end="97:33">r</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="98:25" pos:end="98:63"><expr pos:start="98:25" pos:end="98:62"><name pos:start="98:25" pos:end="98:36"><name pos:start="98:25" pos:end="98:33">lace_size</name><index pos:start="98:34" pos:end="98:36">[<expr pos:start="98:35" pos:end="98:35"><name pos:start="98:35" pos:end="98:35">n</name></expr>]</index></name> <operator pos:start="98:38" pos:end="98:38">=</operator> <name pos:start="98:40" pos:end="98:55"><name pos:start="98:40" pos:end="98:48">lace_size</name><index pos:start="98:49" pos:end="98:55">[<expr pos:start="98:50" pos:end="98:54"><name pos:start="98:50" pos:end="98:50">n</name> <operator pos:start="98:52" pos:end="98:52">-</operator> <literal type="number" pos:start="98:54" pos:end="98:54">1</literal></expr>]</index></name> <operator pos:start="98:57" pos:end="98:57">+</operator> <name pos:start="98:59" pos:end="98:62">snum</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="99:25" pos:end="99:46"><expr pos:start="99:25" pos:end="99:45"><name pos:start="99:25" pos:end="99:29">total</name> <operator pos:start="99:31" pos:end="99:32">+=</operator> <name pos:start="99:34" pos:end="99:45"><name pos:start="99:34" pos:end="99:42">lace_size</name><index pos:start="99:43" pos:end="99:45">[<expr pos:start="99:44" pos:end="99:44"><name pos:start="99:44" pos:end="99:44">n</name></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="100:21" pos:end="100:48"><expr pos:start="100:21" pos:end="100:47"><name pos:start="100:21" pos:end="100:32"><name pos:start="100:21" pos:end="100:29">lace_size</name><index pos:start="100:30" pos:end="100:32">[<expr pos:start="100:31" pos:end="100:31"><name pos:start="100:31" pos:end="100:31">n</name></expr>]</index></name> <operator pos:start="100:34" pos:end="100:34">=</operator> <name pos:start="100:36" pos:end="100:39">size</name> <operator pos:start="100:41" pos:end="100:41">-</operator> <name pos:start="100:43" pos:end="100:47">total</name></expr>;</expr_stmt>
    <if_stmt pos:start="101:5" pos:end="178:15"><if pos:start="101:5" pos:end="178:15">if <condition pos:start="101:8" pos:end="101:17">(<expr pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:11">res</name> <operator pos:start="101:13" pos:end="101:14">==</operator> <literal type="number" pos:start="101:16" pos:end="101:16">0</literal></expr>)</condition> <block pos:start="101:19" pos:end="178:15">{<block_content pos:start="102:9" pos:end="178:15">
        <for pos:start="102:9" pos:end="178:15">for <control pos:start="102:13" pos:end="102:35">(<init pos:start="102:14" pos:end="102:19"><expr pos:start="102:14" pos:end="102:18"><name pos:start="102:14" pos:end="102:14">n</name> <operator pos:start="102:16" pos:end="102:16">=</operator> <literal type="number" pos:start="102:18" pos:end="102:18">0</literal></expr>;</init> <condition pos:start="102:21" pos:end="102:30"><expr pos:start="102:21" pos:end="102:29"><name pos:start="102:21" pos:end="102:21">n</name> <operator pos:start="102:23" pos:end="102:23">&lt;</operator> <name pos:start="102:25" pos:end="102:29">laces</name></expr>;</condition> <incr pos:start="102:32" pos:end="102:34"><expr pos:start="102:32" pos:end="102:34"><name pos:start="102:32" pos:end="102:32">n</name><operator pos:start="102:33" pos:end="102:34">++</operator></expr></incr>)</control> <block pos:start="102:37" pos:end="178:15">{<block_content pos:start="103:13" pos:end="178:15">
            <if_stmt pos:start="103:13" pos:end="178:15"><if pos:start="103:13" pos:end="178:15">if <condition pos:start="103:16" pos:end="106:72">(<expr pos:start="103:17" pos:end="106:71"><operator pos:start="103:17" pos:end="103:17">(</operator><name pos:start="103:18" pos:end="103:36"><name pos:start="103:18" pos:end="103:19">st</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:26">codec</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:36">codec_id</name></name> <operator pos:start="103:38" pos:end="103:39">==</operator> <name pos:start="103:41" pos:end="103:55">CODEC_ID_RA_288</name> <operator pos:start="103:57" pos:end="103:58">||</operator>
                 <name pos:start="104:18" pos:end="104:36"><name pos:start="104:18" pos:end="104:19">st</name><operator pos:start="104:20" pos:end="104:21">-&gt;</operator><name pos:start="104:22" pos:end="104:26">codec</name><operator pos:start="104:27" pos:end="104:28">-&gt;</operator><name pos:start="104:29" pos:end="104:36">codec_id</name></name> <operator pos:start="104:38" pos:end="104:39">==</operator> <name pos:start="104:41" pos:end="104:53">CODEC_ID_COOK</name> <operator pos:start="104:55" pos:end="104:56">||</operator>
                 <name pos:start="105:18" pos:end="105:36"><name pos:start="105:18" pos:end="105:19">st</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:26">codec</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:36">codec_id</name></name> <operator pos:start="105:38" pos:end="105:39">==</operator> <name pos:start="105:41" pos:end="105:55">CODEC_ID_ATRAC3</name><operator pos:start="105:56" pos:end="105:56">)</operator> <operator pos:start="105:58" pos:end="105:59">&amp;&amp;</operator>
                 <name pos:start="106:18" pos:end="106:39"><name pos:start="106:18" pos:end="106:19">st</name><operator pos:start="106:20" pos:end="106:21">-&gt;</operator><name pos:start="106:22" pos:end="106:26">codec</name><operator pos:start="106:27" pos:end="106:28">-&gt;</operator><name pos:start="106:29" pos:end="106:39">block_align</name></name> <operator pos:start="106:41" pos:end="106:42">&amp;&amp;</operator> <name pos:start="106:44" pos:end="106:71"><name pos:start="106:44" pos:end="106:48">track</name><operator pos:start="106:49" pos:end="106:50">-&gt;</operator><name pos:start="106:51" pos:end="106:55">audio</name><operator pos:start="106:56" pos:end="106:56">.</operator><name pos:start="106:57" pos:end="106:71">sub_packet_size</name></name></expr>)</condition> <block pos:start="106:74" pos:end="178:15">{<block_content pos:start="107:17" pos:end="178:15">
                <decl_stmt pos:start="107:17" pos:end="107:47"><decl pos:start="107:17" pos:end="107:46"><type pos:start="107:17" pos:end="107:19"><name pos:start="107:17" pos:end="107:19">int</name></type> <name pos:start="107:21" pos:end="107:21">a</name> <init pos:start="107:23" pos:end="107:46">= <expr pos:start="107:25" pos:end="107:46"><name pos:start="107:25" pos:end="107:46"><name pos:start="107:25" pos:end="107:26">st</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:33">codec</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:46">block_align</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="108:17" pos:end="108:55"><decl pos:start="108:17" pos:end="108:54"><type pos:start="108:17" pos:end="108:19"><name pos:start="108:17" pos:end="108:19">int</name></type> <name pos:start="108:21" pos:end="108:23">sps</name> <init pos:start="108:25" pos:end="108:54">= <expr pos:start="108:27" pos:end="108:54"><name pos:start="108:27" pos:end="108:54"><name pos:start="108:27" pos:end="108:31">track</name><operator pos:start="108:32" pos:end="108:33">-&gt;</operator><name pos:start="108:34" pos:end="108:38">audio</name><operator pos:start="108:39" pos:end="108:39">.</operator><name pos:start="108:40" pos:end="108:54">sub_packet_size</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="109:17" pos:end="109:55"><decl pos:start="109:17" pos:end="109:54"><type pos:start="109:17" pos:end="109:19"><name pos:start="109:17" pos:end="109:19">int</name></type> <name pos:start="109:21" pos:end="109:23">cfs</name> <init pos:start="109:25" pos:end="109:54">= <expr pos:start="109:27" pos:end="109:54"><name pos:start="109:27" pos:end="109:54"><name pos:start="109:27" pos:end="109:31">track</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:38">audio</name><operator pos:start="109:39" pos:end="109:39">.</operator><name pos:start="109:40" pos:end="109:54">coded_framesize</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="110:17" pos:end="110:50"><decl pos:start="110:17" pos:end="110:49"><type pos:start="110:17" pos:end="110:19"><name pos:start="110:17" pos:end="110:19">int</name></type> <name pos:start="110:21" pos:end="110:21">h</name> <init pos:start="110:23" pos:end="110:49">= <expr pos:start="110:25" pos:end="110:49"><name pos:start="110:25" pos:end="110:49"><name pos:start="110:25" pos:end="110:29">track</name><operator pos:start="110:30" pos:end="110:31">-&gt;</operator><name pos:start="110:32" pos:end="110:36">audio</name><operator pos:start="110:37" pos:end="110:37">.</operator><name pos:start="110:38" pos:end="110:49">sub_packet_h</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="111:17" pos:end="111:52"><decl pos:start="111:17" pos:end="111:51"><type pos:start="111:17" pos:end="111:19"><name pos:start="111:17" pos:end="111:19">int</name></type> <name pos:start="111:21" pos:end="111:21">y</name> <init pos:start="111:23" pos:end="111:51">= <expr pos:start="111:25" pos:end="111:51"><name pos:start="111:25" pos:end="111:51"><name pos:start="111:25" pos:end="111:29">track</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:36">audio</name><operator pos:start="111:37" pos:end="111:37">.</operator><name pos:start="111:38" pos:end="111:51">sub_packet_cnt</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="112:17" pos:end="112:48"><decl pos:start="112:17" pos:end="112:47"><type pos:start="112:17" pos:end="112:19"><name pos:start="112:17" pos:end="112:19">int</name></type> <name pos:start="112:21" pos:end="112:21">w</name> <init pos:start="112:23" pos:end="112:47">= <expr pos:start="112:25" pos:end="112:47"><name pos:start="112:25" pos:end="112:47"><name pos:start="112:25" pos:end="112:29">track</name><operator pos:start="112:30" pos:end="112:31">-&gt;</operator><name pos:start="112:32" pos:end="112:36">audio</name><operator pos:start="112:37" pos:end="112:37">.</operator><name pos:start="112:38" pos:end="112:47">frame_size</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="113:17" pos:end="113:22"><decl pos:start="113:17" pos:end="113:21"><type pos:start="113:17" pos:end="113:19"><name pos:start="113:17" pos:end="113:19">int</name></type> <name pos:start="113:21" pos:end="113:21">x</name></decl>;</decl_stmt>
                <if_stmt pos:start="114:17" pos:end="178:15"><if pos:start="114:17" pos:end="178:15">if <condition pos:start="114:20" pos:end="114:42">(<expr pos:start="114:21" pos:end="114:41"><operator pos:start="114:21" pos:end="114:21">!</operator><name pos:start="114:22" pos:end="114:41"><name pos:start="114:22" pos:end="114:26">track</name><operator pos:start="114:27" pos:end="114:28">-&gt;</operator><name pos:start="114:29" pos:end="114:33">audio</name><operator pos:start="114:34" pos:end="114:34">.</operator><name pos:start="114:35" pos:end="114:41">pkt_cnt</name></name></expr>)</condition> <block pos:start="114:44" pos:end="178:15">{<block_content pos:start="115:21" pos:end="178:15">
                    <if_stmt pos:start="115:21" pos:end="121:103"><if pos:start="115:21" pos:end="118:52">if <condition pos:start="115:24" pos:end="115:63">(<expr pos:start="115:25" pos:end="115:62"><name pos:start="115:25" pos:end="115:43"><name pos:start="115:25" pos:end="115:26">st</name><operator pos:start="115:27" pos:end="115:28">-&gt;</operator><name pos:start="115:29" pos:end="115:33">codec</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:43">codec_id</name></name> <operator pos:start="115:45" pos:end="115:46">==</operator> <name pos:start="115:48" pos:end="115:62">CODEC_ID_RA_288</name></expr>)</condition><block type="pseudo" pos:start="116:25" pos:end="118:52"><block_content pos:start="116:25" pos:end="118:52">
                        <for pos:start="116:25" pos:end="118:52">for <control pos:start="116:29" pos:end="116:45">(<init pos:start="116:30" pos:end="116:33"><expr pos:start="116:30" pos:end="116:32"><name pos:start="116:30" pos:end="116:30">x</name><operator pos:start="116:31" pos:end="116:31">=</operator><literal type="number" pos:start="116:32" pos:end="116:32">0</literal></expr>;</init> <condition pos:start="116:35" pos:end="116:40"><expr pos:start="116:35" pos:end="116:39"><name pos:start="116:35" pos:end="116:35">x</name><operator pos:start="116:36" pos:end="116:36">&lt;</operator><name pos:start="116:37" pos:end="116:37">h</name><operator pos:start="116:38" pos:end="116:38">/</operator><literal type="number" pos:start="116:39" pos:end="116:39">2</literal></expr>;</condition> <incr pos:start="116:42" pos:end="116:44"><expr pos:start="116:42" pos:end="116:44"><name pos:start="116:42" pos:end="116:42">x</name><operator pos:start="116:43" pos:end="116:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="117:29" pos:end="118:52"><block_content pos:start="117:29" pos:end="118:52">
                            <expr_stmt pos:start="117:29" pos:end="118:52"><expr pos:start="117:29" pos:end="118:51"><call pos:start="117:29" pos:end="118:51"><name pos:start="117:29" pos:end="117:34">memcpy</name><argument_list pos:start="117:35" pos:end="118:51">(<argument pos:start="117:36" pos:end="117:63"><expr pos:start="117:36" pos:end="117:63"><name pos:start="117:36" pos:end="117:51"><name pos:start="117:36" pos:end="117:40">track</name><operator pos:start="117:41" pos:end="117:42">-&gt;</operator><name pos:start="117:43" pos:end="117:47">audio</name><operator pos:start="117:48" pos:end="117:48">.</operator><name pos:start="117:49" pos:end="117:51">buf</name></name><operator pos:start="117:52" pos:end="117:52">+</operator><name pos:start="117:53" pos:end="117:53">x</name><operator pos:start="117:54" pos:end="117:54">*</operator><literal type="number" pos:start="117:55" pos:end="117:55">2</literal><operator pos:start="117:56" pos:end="117:56">*</operator><name pos:start="117:57" pos:end="117:57">w</name><operator pos:start="117:58" pos:end="117:58">+</operator><name pos:start="117:59" pos:end="117:59">y</name><operator pos:start="117:60" pos:end="117:60">*</operator><name pos:start="117:61" pos:end="117:63">cfs</name></expr></argument>,
                                   <argument pos:start="118:36" pos:end="118:45"><expr pos:start="118:36" pos:end="118:45"><name pos:start="118:36" pos:end="118:39">data</name><operator pos:start="118:40" pos:end="118:40">+</operator><name pos:start="118:41" pos:end="118:41">x</name><operator pos:start="118:42" pos:end="118:42">*</operator><name pos:start="118:43" pos:end="118:45">cfs</name></expr></argument>, <argument pos:start="118:48" pos:end="118:50"><expr pos:start="118:48" pos:end="118:50"><name pos:start="118:48" pos:end="118:50">cfs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if>
                    <else pos:start="119:21" pos:end="121:103">else<block type="pseudo" pos:start="120:25" pos:end="121:103"><block_content pos:start="120:25" pos:end="121:103">
                        <for pos:start="120:25" pos:end="121:103">for <control pos:start="120:29" pos:end="120:47">(<init pos:start="120:30" pos:end="120:33"><expr pos:start="120:30" pos:end="120:32"><name pos:start="120:30" pos:end="120:30">x</name><operator pos:start="120:31" pos:end="120:31">=</operator><literal type="number" pos:start="120:32" pos:end="120:32">0</literal></expr>;</init> <condition pos:start="120:35" pos:end="120:42"><expr pos:start="120:35" pos:end="120:41"><name pos:start="120:35" pos:end="120:35">x</name><operator pos:start="120:36" pos:end="120:36">&lt;</operator><name pos:start="120:37" pos:end="120:37">w</name><operator pos:start="120:38" pos:end="120:38">/</operator><name pos:start="120:39" pos:end="120:41">sps</name></expr>;</condition> <incr pos:start="120:44" pos:end="120:46"><expr pos:start="120:44" pos:end="120:46"><name pos:start="120:44" pos:end="120:44">x</name><operator pos:start="120:45" pos:end="120:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="121:29" pos:end="121:103"><block_content pos:start="121:29" pos:end="121:103">
                            <expr_stmt pos:start="121:29" pos:end="121:103"><expr pos:start="121:29" pos:end="121:102"><call pos:start="121:29" pos:end="121:102"><name pos:start="121:29" pos:end="121:34">memcpy</name><argument_list pos:start="121:35" pos:end="121:102">(<argument pos:start="121:36" pos:end="121:84"><expr pos:start="121:36" pos:end="121:84"><name pos:start="121:36" pos:end="121:51"><name pos:start="121:36" pos:end="121:40">track</name><operator pos:start="121:41" pos:end="121:42">-&gt;</operator><name pos:start="121:43" pos:end="121:47">audio</name><operator pos:start="121:48" pos:end="121:48">.</operator><name pos:start="121:49" pos:end="121:51">buf</name></name><operator pos:start="121:52" pos:end="121:52">+</operator><name pos:start="121:53" pos:end="121:55">sps</name><operator pos:start="121:56" pos:end="121:56">*</operator><operator pos:start="121:57" pos:end="121:57">(</operator><name pos:start="121:58" pos:end="121:58">h</name><operator pos:start="121:59" pos:end="121:59">*</operator><name pos:start="121:60" pos:end="121:60">x</name><operator pos:start="121:61" pos:end="121:61">+</operator><operator pos:start="121:62" pos:end="121:62">(</operator><operator pos:start="121:63" pos:end="121:63">(</operator><name pos:start="121:64" pos:end="121:64">h</name><operator pos:start="121:65" pos:end="121:65">+</operator><literal type="number" pos:start="121:66" pos:end="121:66">1</literal><operator pos:start="121:67" pos:end="121:67">)</operator><operator pos:start="121:68" pos:end="121:68">/</operator><literal type="number" pos:start="121:69" pos:end="121:69">2</literal><operator pos:start="121:70" pos:end="121:70">)</operator><operator pos:start="121:71" pos:end="121:71">*</operator><operator pos:start="121:72" pos:end="121:72">(</operator><name pos:start="121:73" pos:end="121:73">y</name><operator pos:start="121:74" pos:end="121:74">&amp;</operator><literal type="number" pos:start="121:75" pos:end="121:75">1</literal><operator pos:start="121:76" pos:end="121:76">)</operator><operator pos:start="121:77" pos:end="121:77">+</operator><operator pos:start="121:78" pos:end="121:78">(</operator><name pos:start="121:79" pos:end="121:79">y</name><operator pos:start="121:80" pos:end="121:81">&gt;&gt;</operator><literal type="number" pos:start="121:82" pos:end="121:82">1</literal><operator pos:start="121:83" pos:end="121:83">)</operator><operator pos:start="121:84" pos:end="121:84">)</operator></expr></argument>, <argument pos:start="121:87" pos:end="121:96"><expr pos:start="121:87" pos:end="121:96"><name pos:start="121:87" pos:end="121:90">data</name><operator pos:start="121:91" pos:end="121:91">+</operator><name pos:start="121:92" pos:end="121:92">x</name><operator pos:start="121:93" pos:end="121:93">*</operator><name pos:start="121:94" pos:end="121:96">sps</name></expr></argument>, <argument pos:start="121:99" pos:end="121:101"><expr pos:start="121:99" pos:end="121:101"><name pos:start="121:99" pos:end="121:101">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></else></if_stmt>
                    <if_stmt pos:start="122:21" pos:end="178:15"><if pos:start="122:21" pos:end="178:15">if <condition pos:start="122:24" pos:end="122:59">(<expr pos:start="122:25" pos:end="122:58"><operator pos:start="122:25" pos:end="122:26">++</operator><name pos:start="122:27" pos:end="122:53"><name pos:start="122:27" pos:end="122:31">track</name><operator pos:start="122:32" pos:end="122:33">-&gt;</operator><name pos:start="122:34" pos:end="122:38">audio</name><operator pos:start="122:39" pos:end="122:39">.</operator><name pos:start="122:40" pos:end="122:53">sub_packet_cnt</name></name> <operator pos:start="122:55" pos:end="122:56">&gt;=</operator> <name pos:start="122:58" pos:end="122:58">h</name></expr>)</condition> <block pos:start="122:61" pos:end="178:15">{<block_content pos:start="123:25" pos:end="178:15">
                        <expr_stmt pos:start="123:25" pos:end="123:56"><expr pos:start="123:25" pos:end="123:55"><name pos:start="123:25" pos:end="123:51"><name pos:start="123:25" pos:end="123:29">track</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:36">audio</name><operator pos:start="123:37" pos:end="123:37">.</operator><name pos:start="123:38" pos:end="123:51">sub_packet_cnt</name></name> <operator pos:start="123:53" pos:end="123:53">=</operator> <literal type="number" pos:start="123:55" pos:end="123:55">0</literal></expr>;</expr_stmt>
                        <expr_stmt pos:start="124:25" pos:end="124:55"><expr pos:start="124:25" pos:end="124:54"><name pos:start="124:25" pos:end="124:44"><name pos:start="124:25" pos:end="124:29">track</name><operator pos:start="124:30" pos:end="124:31">-&gt;</operator><name pos:start="124:32" pos:end="124:36">audio</name><operator pos:start="124:37" pos:end="124:37">.</operator><name pos:start="124:38" pos:end="124:44">pkt_cnt</name></name> <operator pos:start="124:46" pos:end="124:46">=</operator> <name pos:start="124:48" pos:end="124:48">h</name><operator pos:start="124:49" pos:end="124:49">*</operator><name pos:start="124:50" pos:end="124:50">w</name> <operator pos:start="124:52" pos:end="124:52">/</operator> <name pos:start="124:54" pos:end="124:54">a</name></expr>;</expr_stmt>
                <while pos:start="125:17" pos:end="133:13">while <condition pos:start="125:23" pos:end="125:44">(<expr pos:start="125:24" pos:end="125:43"><name pos:start="125:24" pos:end="125:43"><name pos:start="125:24" pos:end="125:28">track</name><operator pos:start="125:29" pos:end="125:30">-&gt;</operator><name pos:start="125:31" pos:end="125:35">audio</name><operator pos:start="125:36" pos:end="125:36">.</operator><name pos:start="125:37" pos:end="125:43">pkt_cnt</name></name></expr>)</condition> <block pos:start="125:46" pos:end="133:13">{<block_content pos:start="126:21" pos:end="132:80">
                    <expr_stmt pos:start="126:21" pos:end="126:55"><expr pos:start="126:21" pos:end="126:54"><name pos:start="126:21" pos:end="126:23">pkt</name> <operator pos:start="126:25" pos:end="126:25">=</operator> <call pos:start="126:27" pos:end="126:54"><name pos:start="126:27" pos:end="126:36">av_mallocz</name><argument_list pos:start="126:37" pos:end="126:54">(<argument pos:start="126:38" pos:end="126:53"><expr pos:start="126:38" pos:end="126:53"><sizeof pos:start="126:38" pos:end="126:53">sizeof<argument_list pos:start="126:44" pos:end="126:53">(<argument pos:start="126:45" pos:end="126:52"><expr pos:start="126:45" pos:end="126:52"><name pos:start="126:45" pos:end="126:52">AVPacket</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="127:21" pos:end="127:42"><expr pos:start="127:21" pos:end="127:41"><call pos:start="127:21" pos:end="127:41"><name pos:start="127:21" pos:end="127:33">av_new_packet</name><argument_list pos:start="127:34" pos:end="127:41">(<argument pos:start="127:35" pos:end="127:37"><expr pos:start="127:35" pos:end="127:37"><name pos:start="127:35" pos:end="127:37">pkt</name></expr></argument>, <argument pos:start="127:40" pos:end="127:40"><expr pos:start="127:40" pos:end="127:40"><name pos:start="127:40" pos:end="127:40">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="128:21" pos:end="129:72"><expr pos:start="128:21" pos:end="129:71"><call pos:start="128:21" pos:end="129:71"><name pos:start="128:21" pos:end="128:26">memcpy</name><argument_list pos:start="128:27" pos:end="129:71">(<argument pos:start="128:28" pos:end="128:36"><expr pos:start="128:28" pos:end="128:36"><name pos:start="128:28" pos:end="128:36"><name pos:start="128:28" pos:end="128:30">pkt</name><operator pos:start="128:31" pos:end="128:32">-&gt;</operator><name pos:start="128:33" pos:end="128:36">data</name></name></expr></argument>, <argument pos:start="128:39" pos:end="129:67"><expr pos:start="128:39" pos:end="129:67"><name pos:start="128:39" pos:end="128:54"><name pos:start="128:39" pos:end="128:43">track</name><operator pos:start="128:44" pos:end="128:45">-&gt;</operator><name pos:start="128:46" pos:end="128:50">audio</name><operator pos:start="128:51" pos:end="128:51">.</operator><name pos:start="128:52" pos:end="128:54">buf</name></name>
                           <operator pos:start="129:28" pos:end="129:28">+</operator> <name pos:start="129:30" pos:end="129:30">a</name> <operator pos:start="129:32" pos:end="129:32">*</operator> <operator pos:start="129:34" pos:end="129:34">(</operator><name pos:start="129:35" pos:end="129:35">h</name><operator pos:start="129:36" pos:end="129:36">*</operator><name pos:start="129:37" pos:end="129:37">w</name> <operator pos:start="129:39" pos:end="129:39">/</operator> <name pos:start="129:41" pos:end="129:41">a</name> <operator pos:start="129:43" pos:end="129:43">-</operator> <name pos:start="129:45" pos:end="129:64"><name pos:start="129:45" pos:end="129:49">track</name><operator pos:start="129:50" pos:end="129:51">-&gt;</operator><name pos:start="129:52" pos:end="129:56">audio</name><operator pos:start="129:57" pos:end="129:57">.</operator><name pos:start="129:58" pos:end="129:64">pkt_cnt</name></name><operator pos:start="129:65" pos:end="129:66">--</operator><operator pos:start="129:67" pos:end="129:67">)</operator></expr></argument>, <argument pos:start="129:70" pos:end="129:70"><expr pos:start="129:70" pos:end="129:70"><name pos:start="129:70" pos:end="129:70">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="130:21" pos:end="130:35"><expr pos:start="130:21" pos:end="130:34"><name pos:start="130:21" pos:end="130:28"><name pos:start="130:21" pos:end="130:23">pkt</name><operator pos:start="130:24" pos:end="130:25">-&gt;</operator><name pos:start="130:26" pos:end="130:28">pos</name></name> <operator pos:start="130:30" pos:end="130:30">=</operator> <name pos:start="130:32" pos:end="130:34">pos</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="131:21" pos:end="131:50"><expr pos:start="131:21" pos:end="131:49"><name pos:start="131:21" pos:end="131:37"><name pos:start="131:21" pos:end="131:23">pkt</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:37">stream_index</name></name> <operator pos:start="131:39" pos:end="131:39">=</operator> <name pos:start="131:41" pos:end="131:49"><name pos:start="131:41" pos:end="131:42">st</name><operator pos:start="131:43" pos:end="131:44">-&gt;</operator><name pos:start="131:45" pos:end="131:49">index</name></name></expr>;</expr_stmt>
                    <expr_stmt pos:start="132:21" pos:end="132:80"><expr pos:start="132:21" pos:end="132:79"><call pos:start="132:21" pos:end="132:79"><name pos:start="132:21" pos:end="132:32">dynarray_add</name><argument_list pos:start="132:33" pos:end="132:79">(<argument pos:start="132:34" pos:end="132:51"><expr pos:start="132:34" pos:end="132:51"><operator pos:start="132:34" pos:end="132:34">&amp;</operator><name pos:start="132:35" pos:end="132:51"><name pos:start="132:35" pos:end="132:42">matroska</name><operator pos:start="132:43" pos:end="132:44">-&gt;</operator><name pos:start="132:45" pos:end="132:51">packets</name></name></expr></argument>,<argument pos:start="132:53" pos:end="132:74"><expr pos:start="132:53" pos:end="132:74"><operator pos:start="132:53" pos:end="132:53">&amp;</operator><name pos:start="132:54" pos:end="132:74"><name pos:start="132:54" pos:end="132:61">matroska</name><operator pos:start="132:62" pos:end="132:63">-&gt;</operator><name pos:start="132:64" pos:end="132:74">num_packets</name></name></expr></argument>,<argument pos:start="132:76" pos:end="132:78"><expr pos:start="132:76" pos:end="132:78"><name pos:start="132:76" pos:end="132:78">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></while> <if_stmt pos:start="133:15" pos:end="178:15"><else pos:start="133:15" pos:end="178:15">else <block pos:start="133:20" pos:end="178:15">{<block_content pos:start="134:17" pos:end="178:15">
                <decl_stmt pos:start="134:17" pos:end="134:73"><decl pos:start="134:17" pos:end="134:72"><type pos:start="134:17" pos:end="134:39"><name pos:start="134:17" pos:end="134:37">MatroskaTrackEncoding</name> <modifier pos:start="134:39" pos:end="134:39">*</modifier></type><name pos:start="134:40" pos:end="134:48">encodings</name> <init pos:start="134:50" pos:end="134:72">= <expr pos:start="134:52" pos:end="134:72"><name pos:start="134:52" pos:end="134:72"><name pos:start="134:52" pos:end="134:56">track</name><operator pos:start="134:57" pos:end="134:58">-&gt;</operator><name pos:start="134:59" pos:end="134:67">encodings</name><operator pos:start="134:68" pos:end="134:68">.</operator><name pos:start="134:69" pos:end="134:72">elem</name></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="135:17" pos:end="135:56"><decl pos:start="135:17" pos:end="135:30"><type pos:start="135:17" pos:end="135:19"><name pos:start="135:17" pos:end="135:19">int</name></type> <name pos:start="135:21" pos:end="135:26">offset</name> <init pos:start="135:28" pos:end="135:30">= <expr pos:start="135:30" pos:end="135:30"><literal type="number" pos:start="135:30" pos:end="135:30">0</literal></expr></init></decl>, <decl pos:start="135:33" pos:end="135:55"><type ref="prev" pos:start="135:17" pos:end="135:19"/><name pos:start="135:33" pos:end="135:40">pkt_size</name> <init pos:start="135:42" pos:end="135:55">= <expr pos:start="135:44" pos:end="135:55"><name pos:start="135:44" pos:end="135:55"><name pos:start="135:44" pos:end="135:52">lace_size</name><index pos:start="135:53" pos:end="135:55">[<expr pos:start="135:54" pos:end="135:54"><name pos:start="135:54" pos:end="135:54">n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="136:17" pos:end="136:41"><decl pos:start="136:17" pos:end="136:40"><type pos:start="136:17" pos:end="136:25"><name pos:start="136:17" pos:end="136:23">uint8_t</name> <modifier pos:start="136:25" pos:end="136:25">*</modifier></type><name pos:start="136:26" pos:end="136:33">pkt_data</name> <init pos:start="136:35" pos:end="136:40">= <expr pos:start="136:37" pos:end="136:40"><name pos:start="136:37" pos:end="136:40">data</name></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="137:17" pos:end="178:15"><if pos:start="137:17" pos:end="178:15">if <condition pos:start="137:20" pos:end="137:54">(<expr pos:start="137:21" pos:end="137:53"><name pos:start="137:21" pos:end="137:29">encodings</name> <operator pos:start="137:31" pos:end="137:32">&amp;&amp;</operator> <name pos:start="137:34" pos:end="137:49"><name pos:start="137:34" pos:end="137:42">encodings</name><operator pos:start="137:43" pos:end="137:44">-&gt;</operator><name pos:start="137:45" pos:end="137:49">scope</name></name> <operator pos:start="137:51" pos:end="137:51">&amp;</operator> <literal type="number" pos:start="137:53" pos:end="137:53">1</literal></expr>)</condition> <block pos:start="137:56" pos:end="178:15">{<block_content pos:start="138:21" pos:end="178:15">
                    <expr_stmt pos:start="138:21" pos:end="138:80"><expr pos:start="138:21" pos:end="138:79"><name pos:start="138:21" pos:end="138:26">offset</name> <operator pos:start="138:28" pos:end="138:28">=</operator> <call pos:start="138:30" pos:end="138:79"><name pos:start="138:30" pos:end="138:51">matroska_decode_buffer</name><argument_list pos:start="138:52" pos:end="138:79">(<argument pos:start="138:53" pos:end="138:61"><expr pos:start="138:53" pos:end="138:61"><operator pos:start="138:53" pos:end="138:53">&amp;</operator><name pos:start="138:54" pos:end="138:61">pkt_data</name></expr></argument>,<argument pos:start="138:63" pos:end="138:71"><expr pos:start="138:63" pos:end="138:71"><operator pos:start="138:63" pos:end="138:63">&amp;</operator><name pos:start="138:64" pos:end="138:71">pkt_size</name></expr></argument>, <argument pos:start="138:74" pos:end="138:78"><expr pos:start="138:74" pos:end="138:78"><name pos:start="138:74" pos:end="138:78">track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if_stmt pos:start="139:21" pos:end="140:33"><if pos:start="139:21" pos:end="140:33">if <condition pos:start="139:24" pos:end="139:35">(<expr pos:start="139:25" pos:end="139:34"><name pos:start="139:25" pos:end="139:30">offset</name> <operator pos:start="139:32" pos:end="139:32">&lt;</operator> <literal type="number" pos:start="139:34" pos:end="139:34">0</literal></expr>)</condition><block type="pseudo" pos:start="140:25" pos:end="140:33"><block_content pos:start="140:25" pos:end="140:33">
                        <continue pos:start="140:25" pos:end="140:33">continue;</continue></block_content></block></if></if_stmt>
                <expr_stmt pos:start="141:17" pos:end="141:51"><expr pos:start="141:17" pos:end="141:50"><name pos:start="141:17" pos:end="141:19">pkt</name> <operator pos:start="141:21" pos:end="141:21">=</operator> <call pos:start="141:23" pos:end="141:50"><name pos:start="141:23" pos:end="141:32">av_mallocz</name><argument_list pos:start="141:33" pos:end="141:50">(<argument pos:start="141:34" pos:end="141:49"><expr pos:start="141:34" pos:end="141:49"><sizeof pos:start="141:34" pos:end="141:49">sizeof<argument_list pos:start="141:40" pos:end="141:49">(<argument pos:start="141:41" pos:end="141:48"><expr pos:start="141:41" pos:end="141:48"><name pos:start="141:41" pos:end="141:48">AVPacket</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="block" pos:start="142:17" pos:end="142:47">/* XXX: prevent data copy... */</comment>
                <if_stmt pos:start="143:17" pos:end="178:15"><if pos:start="143:17" pos:end="178:15">if <condition pos:start="143:20" pos:end="143:60">(<expr pos:start="143:21" pos:end="143:59"><call pos:start="143:21" pos:end="143:55"><name pos:start="143:21" pos:end="143:33">av_new_packet</name><argument_list pos:start="143:34" pos:end="143:55">(<argument pos:start="143:35" pos:end="143:37"><expr pos:start="143:35" pos:end="143:37"><name pos:start="143:35" pos:end="143:37">pkt</name></expr></argument>, <argument pos:start="143:40" pos:end="143:54"><expr pos:start="143:40" pos:end="143:54"><name pos:start="143:40" pos:end="143:47">pkt_size</name><operator pos:start="143:48" pos:end="143:48">+</operator><name pos:start="143:49" pos:end="143:54">offset</name></expr></argument>)</argument_list></call> <operator pos:start="143:57" pos:end="143:57">&lt;</operator> <literal type="number" pos:start="143:59" pos:end="143:59">0</literal></expr>)</condition> <block pos:start="143:62" pos:end="178:15">{<block_content pos:start="144:21" pos:end="178:15">
                    <expr_stmt pos:start="144:21" pos:end="144:33"><expr pos:start="144:21" pos:end="144:32"><call pos:start="144:21" pos:end="144:32"><name pos:start="144:21" pos:end="144:27">av_free</name><argument_list pos:start="144:28" pos:end="144:32">(<argument pos:start="144:29" pos:end="144:31"><expr pos:start="144:29" pos:end="144:31"><name pos:start="144:29" pos:end="144:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="145:21" pos:end="145:42"><expr pos:start="145:21" pos:end="145:41"><name pos:start="145:21" pos:end="145:23">res</name> <operator pos:start="145:25" pos:end="145:25">=</operator> <call pos:start="145:27" pos:end="145:41"><name pos:start="145:27" pos:end="145:33">AVERROR</name><argument_list pos:start="145:34" pos:end="145:41">(<argument pos:start="145:35" pos:end="145:40"><expr pos:start="145:35" pos:end="145:40"><name pos:start="145:35" pos:end="145:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="146:17" pos:end="147:85"><if pos:start="146:17" pos:end="147:85">if <condition pos:start="146:20" pos:end="146:27">(<expr pos:start="146:21" pos:end="146:26"><name pos:start="146:21" pos:end="146:26">offset</name></expr>)</condition><block type="pseudo" pos:start="147:21" pos:end="147:85"><block_content pos:start="147:21" pos:end="147:85">
                    <expr_stmt pos:start="147:21" pos:end="147:85"><expr pos:start="147:21" pos:end="147:84"><call pos:start="147:21" pos:end="147:84"><name pos:start="147:21" pos:end="147:26">memcpy</name> <argument_list pos:start="147:28" pos:end="147:84">(<argument pos:start="147:29" pos:end="147:37"><expr pos:start="147:29" pos:end="147:37"><name pos:start="147:29" pos:end="147:37"><name pos:start="147:29" pos:end="147:31">pkt</name><operator pos:start="147:32" pos:end="147:33">-&gt;</operator><name pos:start="147:34" pos:end="147:37">data</name></name></expr></argument>, <argument pos:start="147:40" pos:end="147:75"><expr pos:start="147:40" pos:end="147:75"><name pos:start="147:40" pos:end="147:75"><name pos:start="147:40" pos:end="147:48">encodings</name><operator pos:start="147:49" pos:end="147:50">-&gt;</operator><name pos:start="147:51" pos:end="147:61">compression</name><operator pos:start="147:62" pos:end="147:62">.</operator><name pos:start="147:63" pos:end="147:70">settings</name><operator pos:start="147:71" pos:end="147:71">.</operator><name pos:start="147:72" pos:end="147:75">data</name></name></expr></argument>, <argument pos:start="147:78" pos:end="147:83"><expr pos:start="147:78" pos:end="147:83"><name pos:start="147:78" pos:end="147:83">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <expr_stmt pos:start="148:17" pos:end="148:62"><expr pos:start="148:17" pos:end="148:61"><call pos:start="148:17" pos:end="148:61"><name pos:start="148:17" pos:end="148:22">memcpy</name> <argument_list pos:start="148:24" pos:end="148:61">(<argument pos:start="148:25" pos:end="148:40"><expr pos:start="148:25" pos:end="148:40"><name pos:start="148:25" pos:end="148:33"><name pos:start="148:25" pos:end="148:27">pkt</name><operator pos:start="148:28" pos:end="148:29">-&gt;</operator><name pos:start="148:30" pos:end="148:33">data</name></name><operator pos:start="148:34" pos:end="148:34">+</operator><name pos:start="148:35" pos:end="148:40">offset</name></expr></argument>, <argument pos:start="148:43" pos:end="148:50"><expr pos:start="148:43" pos:end="148:50"><name pos:start="148:43" pos:end="148:50">pkt_data</name></expr></argument>, <argument pos:start="148:53" pos:end="148:60"><expr pos:start="148:53" pos:end="148:60"><name pos:start="148:53" pos:end="148:60">pkt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="149:17" pos:end="150:38"><if pos:start="149:17" pos:end="150:38">if <condition pos:start="149:20" pos:end="149:37">(<expr pos:start="149:21" pos:end="149:36"><name pos:start="149:21" pos:end="149:28">pkt_data</name> <operator pos:start="149:30" pos:end="149:31">!=</operator> <name pos:start="149:33" pos:end="149:36">data</name></expr>)</condition><block type="pseudo" pos:start="150:21" pos:end="150:38"><block_content pos:start="150:21" pos:end="150:38">
                    <expr_stmt pos:start="150:21" pos:end="150:38"><expr pos:start="150:21" pos:end="150:37"><call pos:start="150:21" pos:end="150:37"><name pos:start="150:21" pos:end="150:27">av_free</name><argument_list pos:start="150:28" pos:end="150:37">(<argument pos:start="150:29" pos:end="150:36"><expr pos:start="150:29" pos:end="150:36"><name pos:start="150:29" pos:end="150:36">pkt_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <if_stmt pos:start="151:17" pos:end="152:45"><if pos:start="151:17" pos:end="152:45">if <condition pos:start="151:20" pos:end="151:27">(<expr pos:start="151:21" pos:end="151:26"><name pos:start="151:21" pos:end="151:21">n</name> <operator pos:start="151:23" pos:end="151:24">==</operator> <literal type="number" pos:start="151:26" pos:end="151:26">0</literal></expr>)</condition><block type="pseudo" pos:start="152:21" pos:end="152:45"><block_content pos:start="152:21" pos:end="152:45">
                    <expr_stmt pos:start="152:21" pos:end="152:45"><expr pos:start="152:21" pos:end="152:44"><name pos:start="152:21" pos:end="152:30"><name pos:start="152:21" pos:end="152:23">pkt</name><operator pos:start="152:24" pos:end="152:25">-&gt;</operator><name pos:start="152:26" pos:end="152:30">flags</name></name> <operator pos:start="152:32" pos:end="152:32">=</operator> <name pos:start="152:34" pos:end="152:44">is_keyframe</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <expr_stmt pos:start="153:17" pos:end="153:46"><expr pos:start="153:17" pos:end="153:45"><name pos:start="153:17" pos:end="153:33"><name pos:start="153:17" pos:end="153:19">pkt</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:33">stream_index</name></name> <operator pos:start="153:35" pos:end="153:35">=</operator> <name pos:start="153:37" pos:end="153:45"><name pos:start="153:37" pos:end="153:38">st</name><operator pos:start="153:39" pos:end="153:40">-&gt;</operator><name pos:start="153:41" pos:end="153:45">index</name></name></expr>;</expr_stmt>
                <if_stmt pos:start="154:17" pos:end="157:40"><if pos:start="154:17" pos:end="155:40">if <condition pos:start="154:20" pos:end="154:37">(<expr pos:start="154:21" pos:end="154:36"><name pos:start="154:21" pos:end="154:36"><name pos:start="154:21" pos:end="154:25">track</name><operator pos:start="154:26" pos:end="154:27">-&gt;</operator><name pos:start="154:28" pos:end="154:36">ms_compat</name></name></expr>)</condition><block type="pseudo" pos:start="155:21" pos:end="155:40"><block_content pos:start="155:21" pos:end="155:40">
                    <expr_stmt pos:start="155:21" pos:end="155:40"><expr pos:start="155:21" pos:end="155:39"><name pos:start="155:21" pos:end="155:28"><name pos:start="155:21" pos:end="155:23">pkt</name><operator pos:start="155:24" pos:end="155:25">-&gt;</operator><name pos:start="155:26" pos:end="155:28">dts</name></name> <operator pos:start="155:30" pos:end="155:30">=</operator> <name pos:start="155:32" pos:end="155:39">timecode</name></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="156:17" pos:end="157:40">else<block type="pseudo" pos:start="157:21" pos:end="157:40"><block_content pos:start="157:21" pos:end="157:40">
                    <expr_stmt pos:start="157:21" pos:end="157:40"><expr pos:start="157:21" pos:end="157:39"><name pos:start="157:21" pos:end="157:28"><name pos:start="157:21" pos:end="157:23">pkt</name><operator pos:start="157:24" pos:end="157:25">-&gt;</operator><name pos:start="157:26" pos:end="157:28">pts</name></name> <operator pos:start="157:30" pos:end="157:30">=</operator> <name pos:start="157:32" pos:end="157:39">timecode</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
                <expr_stmt pos:start="158:17" pos:end="158:31"><expr pos:start="158:17" pos:end="158:30"><name pos:start="158:17" pos:end="158:24"><name pos:start="158:17" pos:end="158:19">pkt</name><operator pos:start="158:20" pos:end="158:21">-&gt;</operator><name pos:start="158:22" pos:end="158:24">pos</name></name> <operator pos:start="158:26" pos:end="158:26">=</operator> <name pos:start="158:28" pos:end="158:30">pos</name></expr>;</expr_stmt>
                <if_stmt pos:start="159:17" pos:end="162:45"><if pos:start="159:17" pos:end="160:57">if <condition pos:start="159:20" pos:end="159:57">(<expr pos:start="159:21" pos:end="159:56"><name pos:start="159:21" pos:end="159:39"><name pos:start="159:21" pos:end="159:22">st</name><operator pos:start="159:23" pos:end="159:24">-&gt;</operator><name pos:start="159:25" pos:end="159:29">codec</name><operator pos:start="159:30" pos:end="159:31">-&gt;</operator><name pos:start="159:32" pos:end="159:39">codec_id</name></name> <operator pos:start="159:41" pos:end="159:42">==</operator> <name pos:start="159:44" pos:end="159:56">CODEC_ID_TEXT</name></expr>)</condition><block type="pseudo" pos:start="160:21" pos:end="160:57"><block_content pos:start="160:21" pos:end="160:57">
                    <expr_stmt pos:start="160:21" pos:end="160:57"><expr pos:start="160:21" pos:end="160:56"><name pos:start="160:21" pos:end="160:45"><name pos:start="160:21" pos:end="160:23">pkt</name><operator pos:start="160:24" pos:end="160:25">-&gt;</operator><name pos:start="160:26" pos:end="160:45">convergence_duration</name></name> <operator pos:start="160:47" pos:end="160:47">=</operator> <name pos:start="160:49" pos:end="160:56">duration</name></expr>;</expr_stmt></block_content></block></if>
                <if type="elseif" pos:start="161:17" pos:end="162:45">else if <condition pos:start="161:25" pos:end="161:69">(<expr pos:start="161:26" pos:end="161:68"><name pos:start="161:26" pos:end="161:36"><name pos:start="161:26" pos:end="161:30">track</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:36">type</name></name> <operator pos:start="161:38" pos:end="161:39">!=</operator> <name pos:start="161:41" pos:end="161:68">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr>)</condition><block type="pseudo" pos:start="162:21" pos:end="162:45"><block_content pos:start="162:21" pos:end="162:45">
                    <expr_stmt pos:start="162:21" pos:end="162:45"><expr pos:start="162:21" pos:end="162:44"><name pos:start="162:21" pos:end="162:33"><name pos:start="162:21" pos:end="162:23">pkt</name><operator pos:start="162:24" pos:end="162:25">-&gt;</operator><name pos:start="162:26" pos:end="162:33">duration</name></name> <operator pos:start="162:35" pos:end="162:35">=</operator> <name pos:start="162:37" pos:end="162:44">duration</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <if_stmt pos:start="163:17" pos:end="164:69"><if pos:start="163:17" pos:end="164:69">if <condition pos:start="163:20" pos:end="163:56">(<expr pos:start="163:21" pos:end="163:55"><name pos:start="163:21" pos:end="163:39"><name pos:start="163:21" pos:end="163:22">st</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:29">codec</name><operator pos:start="163:30" pos:end="163:31">-&gt;</operator><name pos:start="163:32" pos:end="163:39">codec_id</name></name> <operator pos:start="163:41" pos:end="163:42">==</operator> <name pos:start="163:44" pos:end="163:55">CODEC_ID_SSA</name></expr>)</condition><block type="pseudo" pos:start="164:21" pos:end="164:69"><block_content pos:start="164:21" pos:end="164:69">
                    <expr_stmt pos:start="164:21" pos:end="164:69"><expr pos:start="164:21" pos:end="164:68"><call pos:start="164:21" pos:end="164:68"><name pos:start="164:21" pos:end="164:43">matroska_fix_ass_packet</name><argument_list pos:start="164:44" pos:end="164:68">(<argument pos:start="164:45" pos:end="164:52"><expr pos:start="164:45" pos:end="164:52"><name pos:start="164:45" pos:end="164:52">matroska</name></expr></argument>, <argument pos:start="164:55" pos:end="164:57"><expr pos:start="164:55" pos:end="164:57"><name pos:start="164:55" pos:end="164:57">pkt</name></expr></argument>, <argument pos:start="164:60" pos:end="164:67"><expr pos:start="164:60" pos:end="164:67"><name pos:start="164:60" pos:end="164:67">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <if_stmt pos:start="165:17" pos:end="178:15"><if pos:start="165:17" pos:end="169:68">if <condition pos:start="165:20" pos:end="168:66">(<expr pos:start="165:21" pos:end="168:65"><name pos:start="165:21" pos:end="165:38"><name pos:start="165:21" pos:end="165:28">matroska</name><operator pos:start="165:29" pos:end="165:30">-&gt;</operator><name pos:start="165:31" pos:end="165:38">prev_pkt</name></name> <operator pos:start="165:40" pos:end="165:41">&amp;&amp;</operator>
                    <name pos:start="166:21" pos:end="166:28">timecode</name> <operator pos:start="166:30" pos:end="166:31">!=</operator> <name pos:start="166:33" pos:end="166:46">AV_NOPTS_VALUE</name> <operator pos:start="166:48" pos:end="166:49">&amp;&amp;</operator>
                    <name pos:start="167:21" pos:end="167:43"><name pos:start="167:21" pos:end="167:28">matroska</name><operator pos:start="167:29" pos:end="167:30">-&gt;</operator><name pos:start="167:31" pos:end="167:38">prev_pkt</name><operator pos:start="167:39" pos:end="167:40">-&gt;</operator><name pos:start="167:41" pos:end="167:43">pts</name></name> <operator pos:start="167:45" pos:end="167:46">==</operator> <name pos:start="167:48" pos:end="167:55">timecode</name> <operator pos:start="167:57" pos:end="167:58">&amp;&amp;</operator>
                    <name pos:start="168:21" pos:end="168:52"><name pos:start="168:21" pos:end="168:28">matroska</name><operator pos:start="168:29" pos:end="168:30">-&gt;</operator><name pos:start="168:31" pos:end="168:38">prev_pkt</name><operator pos:start="168:39" pos:end="168:40">-&gt;</operator><name pos:start="168:41" pos:end="168:52">stream_index</name></name> <operator pos:start="168:54" pos:end="168:55">==</operator> <name pos:start="168:57" pos:end="168:65"><name pos:start="168:57" pos:end="168:58">st</name><operator pos:start="168:59" pos:end="168:60">-&gt;</operator><name pos:start="168:61" pos:end="168:65">index</name></name></expr>)</condition><block type="pseudo" pos:start="169:21" pos:end="169:68"><block_content pos:start="169:21" pos:end="169:68">
                    <expr_stmt pos:start="169:21" pos:end="169:68"><expr pos:start="169:21" pos:end="169:67"><call pos:start="169:21" pos:end="169:67"><name pos:start="169:21" pos:end="169:42">matroska_merge_packets</name><argument_list pos:start="169:43" pos:end="169:67">(<argument pos:start="169:44" pos:end="169:61"><expr pos:start="169:44" pos:end="169:61"><name pos:start="169:44" pos:end="169:61"><name pos:start="169:44" pos:end="169:51">matroska</name><operator pos:start="169:52" pos:end="169:53">-&gt;</operator><name pos:start="169:54" pos:end="169:61">prev_pkt</name></name></expr></argument>, <argument pos:start="169:64" pos:end="169:66"><expr pos:start="169:64" pos:end="169:66"><name pos:start="169:64" pos:end="169:66">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="170:17" pos:end="178:15">else <block pos:start="170:22" pos:end="178:15">{<block_content pos:start="171:21" pos:end="178:15">
                    <expr_stmt pos:start="171:21" pos:end="171:80"><expr pos:start="171:21" pos:end="171:79"><call pos:start="171:21" pos:end="171:79"><name pos:start="171:21" pos:end="171:32">dynarray_add</name><argument_list pos:start="171:33" pos:end="171:79">(<argument pos:start="171:34" pos:end="171:51"><expr pos:start="171:34" pos:end="171:51"><operator pos:start="171:34" pos:end="171:34">&amp;</operator><name pos:start="171:35" pos:end="171:51"><name pos:start="171:35" pos:end="171:42">matroska</name><operator pos:start="171:43" pos:end="171:44">-&gt;</operator><name pos:start="171:45" pos:end="171:51">packets</name></name></expr></argument>,<argument pos:start="171:53" pos:end="171:74"><expr pos:start="171:53" pos:end="171:74"><operator pos:start="171:53" pos:end="171:53">&amp;</operator><name pos:start="171:54" pos:end="171:74"><name pos:start="171:54" pos:end="171:61">matroska</name><operator pos:start="171:62" pos:end="171:63">-&gt;</operator><name pos:start="171:64" pos:end="171:74">num_packets</name></name></expr></argument>,<argument pos:start="171:76" pos:end="171:78"><expr pos:start="171:76" pos:end="171:78"><name pos:start="171:76" pos:end="171:78">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="172:21" pos:end="172:45"><expr pos:start="172:21" pos:end="172:44"><name pos:start="172:21" pos:end="172:38"><name pos:start="172:21" pos:end="172:28">matroska</name><operator pos:start="172:29" pos:end="172:30">-&gt;</operator><name pos:start="172:31" pos:end="172:38">prev_pkt</name></name> <operator pos:start="172:40" pos:end="172:40">=</operator> <name pos:start="172:42" pos:end="172:44">pkt</name></expr>;</expr_stmt>
            <if_stmt pos:start="173:13" pos:end="174:75"><if pos:start="173:13" pos:end="174:75">if <condition pos:start="173:16" pos:end="173:43">(<expr pos:start="173:17" pos:end="173:42"><name pos:start="173:17" pos:end="173:24">timecode</name> <operator pos:start="173:26" pos:end="173:27">!=</operator> <name pos:start="173:29" pos:end="173:42">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="174:17" pos:end="174:75"><block_content pos:start="174:17" pos:end="174:75">
                <expr_stmt pos:start="174:17" pos:end="174:75"><expr pos:start="174:17" pos:end="174:74"><name pos:start="174:17" pos:end="174:24">timecode</name> <operator pos:start="174:26" pos:end="174:26">=</operator> <ternary pos:start="174:28" pos:end="174:74"><condition pos:start="174:28" pos:end="174:37"><expr pos:start="174:28" pos:end="174:35"><name pos:start="174:28" pos:end="174:35">duration</name></expr> ?</condition><then pos:start="174:39" pos:end="174:57"> <expr pos:start="174:39" pos:end="174:57"><name pos:start="174:39" pos:end="174:46">timecode</name> <operator pos:start="174:48" pos:end="174:48">+</operator> <name pos:start="174:50" pos:end="174:57">duration</name></expr> </then><else pos:start="174:59" pos:end="174:74">: <expr pos:start="174:61" pos:end="174:74"><name pos:start="174:61" pos:end="174:74">AV_NOPTS_VALUE</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="175:13" pos:end="175:33"><expr pos:start="175:13" pos:end="175:32"><name pos:start="175:13" pos:end="175:16">data</name> <operator pos:start="175:18" pos:end="175:19">+=</operator> <name pos:start="175:21" pos:end="175:32"><name pos:start="175:21" pos:end="175:29">lace_size</name><index pos:start="175:30" pos:end="175:32">[<expr pos:start="175:31" pos:end="175:31"><name pos:start="175:31" pos:end="175:31">n</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="176:13" pos:end="176:33"><expr pos:start="176:13" pos:end="176:32"><name pos:start="176:13" pos:end="176:16">size</name> <operator pos:start="176:18" pos:end="176:19">-=</operator> <name pos:start="176:21" pos:end="176:32"><name pos:start="176:21" pos:end="176:29">lace_size</name><index pos:start="176:30" pos:end="176:32">[<expr pos:start="176:31" pos:end="176:31"><name pos:start="176:31" pos:end="176:31">n</name></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="177:5" pos:end="177:23"><expr pos:start="177:5" pos:end="177:22"><call pos:start="177:5" pos:end="177:22"><name pos:start="177:5" pos:end="177:11">av_free</name><argument_list pos:start="177:12" pos:end="177:22">(<argument pos:start="177:13" pos:end="177:21"><expr pos:start="177:13" pos:end="177:21"><name pos:start="177:13" pos:end="177:21">lace_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="178:5" pos:end="178:15">return <expr pos:start="178:12" pos:end="178:14"><name pos:start="178:12" pos:end="178:14">res</name></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></block_content></block></if></if_stmt></block_content></block></while></block_content></block></for></block_content></block></block_content></block></switch></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
