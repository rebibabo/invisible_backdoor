<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21543.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:33">SocketAddress_to_str</name><parameter_list pos:start="1:34" pos:end="3:65">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><specifier pos:start="1:35" pos:end="1:39">const</specifier> <name pos:start="1:41" pos:end="1:44">char</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:52">prefix</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:79"><decl pos:start="1:55" pos:end="1:79"><type pos:start="1:55" pos:end="1:79"><name pos:start="1:55" pos:end="1:73">SocketAddressLegacy</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:79">addr</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:48"><decl pos:start="3:35" pos:end="3:48"><type pos:start="3:35" pos:end="3:48"><name pos:start="3:35" pos:end="3:38">bool</name></type> <name pos:start="3:40" pos:end="3:48">is_listen</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:64"><decl pos:start="3:51" pos:end="3:64"><type pos:start="3:51" pos:end="3:64"><name pos:start="3:51" pos:end="3:54">bool</name></type> <name pos:start="3:56" pos:end="3:64">is_telnet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:5">

    <switch pos:start="7:5" pos:end="53:5">switch <condition pos:start="7:12" pos:end="7:23">(<expr pos:start="7:13" pos:end="7:22"><name pos:start="7:13" pos:end="7:22"><name pos:start="7:13" pos:end="7:16">addr</name><operator pos:start="7:17" pos:end="7:18">-&gt;</operator><name pos:start="7:19" pos:end="7:22">type</name></name></expr>)</condition> <block pos:start="7:25" pos:end="53:5">{<block_content pos:start="9:5" pos:end="51:16">

    <case pos:start="9:5" pos:end="9:41">case <expr pos:start="9:10" pos:end="9:40"><name pos:start="9:10" pos:end="9:40">SOCKET_ADDRESS_LEGACY_KIND_INET</name></expr>:</case>

        <return pos:start="11:9" pos:end="19:59">return <expr pos:start="11:16" pos:end="19:58"><call pos:start="11:16" pos:end="19:58"><name pos:start="11:16" pos:end="11:30">g_strdup_printf</name><argument_list pos:start="11:31" pos:end="19:58">(<argument pos:start="11:32" pos:end="11:45"><expr pos:start="11:32" pos:end="11:45"><literal type="string" pos:start="11:32" pos:end="11:45">"%s%s:%s:%s%s"</literal></expr></argument>, <argument pos:start="11:48" pos:end="11:53"><expr pos:start="11:48" pos:end="11:53"><name pos:start="11:48" pos:end="11:53">prefix</name></expr></argument>,

                               <argument pos:start="13:32" pos:end="13:59"><expr pos:start="13:32" pos:end="13:59"><ternary pos:start="13:32" pos:end="13:59"><condition pos:start="13:32" pos:end="13:42"><expr pos:start="13:32" pos:end="13:40"><name pos:start="13:32" pos:end="13:40">is_telnet</name></expr> ?</condition><then pos:start="13:44" pos:end="13:51"> <expr pos:start="13:44" pos:end="13:51"><literal type="string" pos:start="13:44" pos:end="13:51">"telnet"</literal></expr> </then><else pos:start="13:53" pos:end="13:59">: <expr pos:start="13:55" pos:end="13:59"><literal type="string" pos:start="13:55" pos:end="13:59">"tcp"</literal></expr></else></ternary></expr></argument>,

                               <argument pos:start="15:32" pos:end="15:54"><expr pos:start="15:32" pos:end="15:54"><name pos:start="15:32" pos:end="15:54"><name pos:start="15:32" pos:end="15:35">addr</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:38">u</name><operator pos:start="15:39" pos:end="15:39">.</operator><name pos:start="15:40" pos:end="15:43">inet</name><operator pos:start="15:44" pos:end="15:44">.</operator><name pos:start="15:45" pos:end="15:48">data</name><operator pos:start="15:49" pos:end="15:50">-&gt;</operator><name pos:start="15:51" pos:end="15:54">host</name></name></expr></argument>,

                               <argument pos:start="17:32" pos:end="17:54"><expr pos:start="17:32" pos:end="17:54"><name pos:start="17:32" pos:end="17:54"><name pos:start="17:32" pos:end="17:35">addr</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:38">u</name><operator pos:start="17:39" pos:end="17:39">.</operator><name pos:start="17:40" pos:end="17:43">inet</name><operator pos:start="17:44" pos:end="17:44">.</operator><name pos:start="17:45" pos:end="17:48">data</name><operator pos:start="17:49" pos:end="17:50">-&gt;</operator><name pos:start="17:51" pos:end="17:54">port</name></name></expr></argument>,

                               <argument pos:start="19:32" pos:end="19:57"><expr pos:start="19:32" pos:end="19:57"><ternary pos:start="19:32" pos:end="19:57"><condition pos:start="19:32" pos:end="19:42"><expr pos:start="19:32" pos:end="19:40"><name pos:start="19:32" pos:end="19:40">is_listen</name></expr> ?</condition><then pos:start="19:44" pos:end="19:52"> <expr pos:start="19:44" pos:end="19:52"><literal type="string" pos:start="19:44" pos:end="19:52">",server"</literal></expr> </then><else pos:start="19:54" pos:end="19:57">: <expr pos:start="19:56" pos:end="19:57"><literal type="string" pos:start="19:56" pos:end="19:57">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</return>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:41">case <expr pos:start="23:10" pos:end="23:40"><name pos:start="23:10" pos:end="23:40">SOCKET_ADDRESS_LEGACY_KIND_UNIX</name></expr>:</case>

        <return pos:start="25:9" pos:end="29:59">return <expr pos:start="25:16" pos:end="29:58"><call pos:start="25:16" pos:end="29:58"><name pos:start="25:16" pos:end="25:30">g_strdup_printf</name><argument_list pos:start="25:31" pos:end="29:58">(<argument pos:start="25:32" pos:end="25:44"><expr pos:start="25:32" pos:end="25:44"><literal type="string" pos:start="25:32" pos:end="25:44">"%sunix:%s%s"</literal></expr></argument>, <argument pos:start="25:47" pos:end="25:52"><expr pos:start="25:47" pos:end="25:52"><name pos:start="25:47" pos:end="25:52">prefix</name></expr></argument>,

                               <argument pos:start="27:32" pos:end="27:56"><expr pos:start="27:32" pos:end="27:56"><name pos:start="27:32" pos:end="27:56"><name pos:start="27:32" pos:end="27:35">addr</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:38">u</name><operator pos:start="27:39" pos:end="27:39">.</operator><name pos:start="27:40" pos:end="27:45">q_unix</name><operator pos:start="27:46" pos:end="27:46">.</operator><name pos:start="27:47" pos:end="27:50">data</name><operator pos:start="27:51" pos:end="27:52">-&gt;</operator><name pos:start="27:53" pos:end="27:56">path</name></name></expr></argument>,

                               <argument pos:start="29:32" pos:end="29:57"><expr pos:start="29:32" pos:end="29:57"><ternary pos:start="29:32" pos:end="29:57"><condition pos:start="29:32" pos:end="29:42"><expr pos:start="29:32" pos:end="29:40"><name pos:start="29:32" pos:end="29:40">is_listen</name></expr> ?</condition><then pos:start="29:44" pos:end="29:52"> <expr pos:start="29:44" pos:end="29:52"><literal type="string" pos:start="29:44" pos:end="29:52">",server"</literal></expr> </then><else pos:start="29:54" pos:end="29:57">: <expr pos:start="29:56" pos:end="29:57"><literal type="string" pos:start="29:56" pos:end="29:57">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</return>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:39">case <expr pos:start="33:10" pos:end="33:38"><name pos:start="33:10" pos:end="33:38">SOCKET_ADDRESS_LEGACY_KIND_FD</name></expr>:</case>

        <return pos:start="35:9" pos:end="37:59">return <expr pos:start="35:16" pos:end="37:58"><call pos:start="35:16" pos:end="37:58"><name pos:start="35:16" pos:end="35:30">g_strdup_printf</name><argument_list pos:start="35:31" pos:end="37:58">(<argument pos:start="35:32" pos:end="35:42"><expr pos:start="35:32" pos:end="35:42"><literal type="string" pos:start="35:32" pos:end="35:42">"%sfd:%s%s"</literal></expr></argument>, <argument pos:start="35:45" pos:end="35:50"><expr pos:start="35:45" pos:end="35:50"><name pos:start="35:45" pos:end="35:50">prefix</name></expr></argument>, <argument pos:start="35:53" pos:end="35:72"><expr pos:start="35:53" pos:end="35:72"><name pos:start="35:53" pos:end="35:72"><name pos:start="35:53" pos:end="35:56">addr</name><operator pos:start="35:57" pos:end="35:58">-&gt;</operator><name pos:start="35:59" pos:end="35:59">u</name><operator pos:start="35:60" pos:end="35:60">.</operator><name pos:start="35:61" pos:end="35:62">fd</name><operator pos:start="35:63" pos:end="35:63">.</operator><name pos:start="35:64" pos:end="35:67">data</name><operator pos:start="35:68" pos:end="35:69">-&gt;</operator><name pos:start="35:70" pos:end="35:72">str</name></name></expr></argument>,

                               <argument pos:start="37:32" pos:end="37:57"><expr pos:start="37:32" pos:end="37:57"><ternary pos:start="37:32" pos:end="37:57"><condition pos:start="37:32" pos:end="37:42"><expr pos:start="37:32" pos:end="37:40"><name pos:start="37:32" pos:end="37:40">is_listen</name></expr> ?</condition><then pos:start="37:44" pos:end="37:52"> <expr pos:start="37:44" pos:end="37:52"><literal type="string" pos:start="37:44" pos:end="37:52">",server"</literal></expr> </then><else pos:start="37:54" pos:end="37:57">: <expr pos:start="37:56" pos:end="37:57"><literal type="string" pos:start="37:56" pos:end="37:57">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</return>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:42">case <expr pos:start="41:10" pos:end="41:41"><name pos:start="41:10" pos:end="41:41">SOCKET_ADDRESS_LEGACY_KIND_VSOCK</name></expr>:</case>

        <return pos:start="43:9" pos:end="47:57">return <expr pos:start="43:16" pos:end="47:56"><call pos:start="43:16" pos:end="47:56"><name pos:start="43:16" pos:end="43:30">g_strdup_printf</name><argument_list pos:start="43:31" pos:end="47:56">(<argument pos:start="43:32" pos:end="43:46"><expr pos:start="43:32" pos:end="43:46"><literal type="string" pos:start="43:32" pos:end="43:46">"%svsock:%s:%s"</literal></expr></argument>, <argument pos:start="43:49" pos:end="43:54"><expr pos:start="43:49" pos:end="43:54"><name pos:start="43:49" pos:end="43:54">prefix</name></expr></argument>,

                               <argument pos:start="45:32" pos:end="45:54"><expr pos:start="45:32" pos:end="45:54"><name pos:start="45:32" pos:end="45:54"><name pos:start="45:32" pos:end="45:35">addr</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:38">u</name><operator pos:start="45:39" pos:end="45:39">.</operator><name pos:start="45:40" pos:end="45:44">vsock</name><operator pos:start="45:45" pos:end="45:45">.</operator><name pos:start="45:46" pos:end="45:49">data</name><operator pos:start="45:50" pos:end="45:51">-&gt;</operator><name pos:start="45:52" pos:end="45:54">cid</name></name></expr></argument>,

                               <argument pos:start="47:32" pos:end="47:55"><expr pos:start="47:32" pos:end="47:55"><name pos:start="47:32" pos:end="47:55"><name pos:start="47:32" pos:end="47:35">addr</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:38">u</name><operator pos:start="47:39" pos:end="47:39">.</operator><name pos:start="47:40" pos:end="47:44">vsock</name><operator pos:start="47:45" pos:end="47:45">.</operator><name pos:start="47:46" pos:end="47:49">data</name><operator pos:start="47:50" pos:end="47:51">-&gt;</operator><name pos:start="47:52" pos:end="47:55">port</name></name></expr></argument>)</argument_list></call></expr>;</return>

    <default pos:start="49:5" pos:end="49:12">default:</default>

        <expr_stmt pos:start="51:9" pos:end="51:16"><expr pos:start="51:9" pos:end="51:15"><call pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:13">abort</name><argument_list pos:start="51:14" pos:end="51:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
