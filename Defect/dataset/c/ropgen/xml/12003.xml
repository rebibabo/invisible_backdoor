<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12003.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">dirac_decode_frame_internal</name><parameter_list pos:start="1:39" pos:end="1:55">(<parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:51">DiracContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="167:1">{<block_content pos:start="5:5" pos:end="165:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:14">DWTContext</name></type> <name pos:start="5:16" pos:end="5:16">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">y</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">i</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">comp</name></decl>, <decl pos:start="7:21" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:24">dsty</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="33:5"><if pos:start="13:5" pos:end="33:5">if <condition pos:start="13:8" pos:end="13:21">(<expr pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:20">low_delay</name></name></expr>)</condition> <block pos:start="13:23" pos:end="33:5">{<block_content pos:start="17:9" pos:end="31:9">

        <comment type="block" pos:start="15:9" pos:end="15:59">/* [DIRAC_STD] 13.5.1 low_delay_transform_data() */</comment>

        <for pos:start="17:9" pos:end="23:9">for <control pos:start="17:13" pos:end="17:40">(<init pos:start="17:14" pos:end="17:22"><expr pos:start="17:14" pos:end="17:21"><name pos:start="17:14" pos:end="17:17">comp</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr>;</init> <condition pos:start="17:24" pos:end="17:32"><expr pos:start="17:24" pos:end="17:31"><name pos:start="17:24" pos:end="17:27">comp</name> <operator pos:start="17:29" pos:end="17:29">&lt;</operator> <literal type="number" pos:start="17:31" pos:end="17:31">3</literal></expr>;</condition> <incr pos:start="17:34" pos:end="17:39"><expr pos:start="17:34" pos:end="17:39"><name pos:start="17:34" pos:end="17:37">comp</name><operator pos:start="17:38" pos:end="17:39">++</operator></expr></incr>)</control> <block pos:start="17:42" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:87">

            <decl_stmt pos:start="19:13" pos:end="19:39"><decl pos:start="19:13" pos:end="19:38"><type pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:17">Plane</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:20">p</name> <init pos:start="19:22" pos:end="19:38">= <expr pos:start="19:24" pos:end="19:38"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:38"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:32">plane</name><index pos:start="19:33" pos:end="19:38">[<expr pos:start="19:34" pos:end="19:37"><name pos:start="19:34" pos:end="19:37">comp</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:87"><expr pos:start="21:13" pos:end="21:86"><call pos:start="21:13" pos:end="21:86"><name pos:start="21:13" pos:end="21:18">memset</name><argument_list pos:start="21:19" pos:end="21:86">(<argument pos:start="21:20" pos:end="21:30"><expr pos:start="21:20" pos:end="21:30"><name pos:start="21:20" pos:end="21:30"><name pos:start="21:20" pos:end="21:20">p</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:30">idwt_buf</name></name></expr></argument>, <argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><literal type="number" pos:start="21:33" pos:end="21:33">0</literal></expr></argument>, <argument pos:start="21:36" pos:end="21:85"><expr pos:start="21:36" pos:end="21:85"><name pos:start="21:36" pos:end="21:49"><name pos:start="21:36" pos:end="21:36">p</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:49">idwt_stride</name></name> <operator pos:start="21:51" pos:end="21:51">*</operator> <name pos:start="21:53" pos:end="21:66"><name pos:start="21:53" pos:end="21:53">p</name><operator pos:start="21:54" pos:end="21:55">-&gt;</operator><name pos:start="21:56" pos:end="21:66">idwt_height</name></name> <operator pos:start="21:68" pos:end="21:68">*</operator> <sizeof pos:start="21:70" pos:end="21:85">sizeof<argument_list pos:start="21:76" pos:end="21:85">(<argument pos:start="21:77" pos:end="21:84"><expr pos:start="21:77" pos:end="21:84"><name pos:start="21:77" pos:end="21:84">IDWTELEM</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:25">(<expr pos:start="25:13" pos:end="25:24"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:24"><name pos:start="25:14" pos:end="25:14">s</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:24">zero_res</name></name></expr>)</condition> <block pos:start="25:27" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:27">

            <if_stmt pos:start="27:13" pos:end="29:27"><if pos:start="27:13" pos:end="29:27">if <condition pos:start="27:16" pos:end="27:47">(<expr pos:start="27:17" pos:end="27:46"><operator pos:start="27:17" pos:end="27:17">(</operator><name pos:start="27:18" pos:end="27:20">ret</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <call pos:start="27:24" pos:end="27:41"><name pos:start="27:24" pos:end="27:38">decode_lowdelay</name><argument_list pos:start="27:39" pos:end="27:41">(<argument pos:start="27:40" pos:end="27:40"><expr pos:start="27:40" pos:end="27:40"><name pos:start="27:40" pos:end="27:40">s</name></expr></argument>)</argument_list></call><operator pos:start="27:42" pos:end="27:42">)</operator> <operator pos:start="27:44" pos:end="27:44">&lt;</operator> <literal type="number" pos:start="27:46" pos:end="27:46">0</literal></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:27"><block_content pos:start="29:17" pos:end="29:27">

                <return pos:start="29:17" pos:end="29:27">return <expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="37:5" pos:end="159:5">for <control pos:start="37:9" pos:end="37:36">(<init pos:start="37:10" pos:end="37:18"><expr pos:start="37:10" pos:end="37:17"><name pos:start="37:10" pos:end="37:13">comp</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <literal type="number" pos:start="37:17" pos:end="37:17">0</literal></expr>;</init> <condition pos:start="37:20" pos:end="37:28"><expr pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:23">comp</name> <operator pos:start="37:25" pos:end="37:25">&lt;</operator> <literal type="number" pos:start="37:27" pos:end="37:27">3</literal></expr>;</condition> <incr pos:start="37:30" pos:end="37:35"><expr pos:start="37:30" pos:end="37:35"><name pos:start="37:30" pos:end="37:33">comp</name><operator pos:start="37:34" pos:end="37:35">++</operator></expr></incr>)</control> <block pos:start="37:38" pos:end="159:5">{<block_content pos:start="39:9" pos:end="157:9">

        <decl_stmt pos:start="39:9" pos:end="39:41"><decl pos:start="39:9" pos:end="39:40"><type pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:13">Plane</name> <modifier pos:start="39:15" pos:end="39:15">*</modifier></type><name pos:start="39:16" pos:end="39:16">p</name>       <init pos:start="39:24" pos:end="39:40">= <expr pos:start="39:26" pos:end="39:40"><operator pos:start="39:26" pos:end="39:26">&amp;</operator><name pos:start="39:27" pos:end="39:40"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:34">plane</name><index pos:start="39:35" pos:end="39:40">[<expr pos:start="39:36" pos:end="39:39"><name pos:start="39:36" pos:end="39:39">comp</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:65"><decl pos:start="41:9" pos:end="41:64"><type pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:15">uint8_t</name> <modifier pos:start="41:17" pos:end="41:17">*</modifier></type><name pos:start="41:18" pos:end="41:22">frame</name> <init pos:start="41:24" pos:end="41:64">= <expr pos:start="41:26" pos:end="41:64"><name pos:start="41:26" pos:end="41:64"><name pos:start="41:26" pos:end="41:26">s</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:43">current_picture</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:52">avframe</name><operator pos:start="41:53" pos:end="41:54">-&gt;</operator><name pos:start="41:55" pos:end="41:58">data</name><index pos:start="41:59" pos:end="41:64">[<expr pos:start="41:60" pos:end="41:63"><name pos:start="41:60" pos:end="41:63">comp</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="45:9" pos:end="45:38">/* FIXME: small resolutions */</comment>

        <for pos:start="47:9" pos:end="49:86">for <control pos:start="47:13" pos:end="47:31">(<init pos:start="47:14" pos:end="47:19"><expr pos:start="47:14" pos:end="47:18"><name pos:start="47:14" pos:end="47:14">i</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>;</init> <condition pos:start="47:21" pos:end="47:26"><expr pos:start="47:21" pos:end="47:25"><name pos:start="47:21" pos:end="47:21">i</name> <operator pos:start="47:23" pos:end="47:23">&lt;</operator> <literal type="number" pos:start="47:25" pos:end="47:25">4</literal></expr>;</condition> <incr pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:28">i</name><operator pos:start="47:29" pos:end="47:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="49:13" pos:end="49:86"><block_content pos:start="49:13" pos:end="49:86">

            <expr_stmt pos:start="49:13" pos:end="49:86"><expr pos:start="49:13" pos:end="49:85"><name pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:30">edge_emu_buffer</name><index pos:start="49:31" pos:end="49:33">[<expr pos:start="49:32" pos:end="49:32"><name pos:start="49:32" pos:end="49:32">i</name></expr>]</index></name> <operator pos:start="49:35" pos:end="49:35">=</operator> <name pos:start="49:37" pos:end="49:59"><name pos:start="49:37" pos:end="49:37">s</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:59">edge_emu_buffer_base</name></name> <operator pos:start="49:61" pos:end="49:61">+</operator> <name pos:start="49:63" pos:end="49:63">i</name><operator pos:start="49:64" pos:end="49:64">*</operator><call pos:start="49:65" pos:end="49:85"><name pos:start="49:65" pos:end="49:71">FFALIGN</name><argument_list pos:start="49:72" pos:end="49:85">(<argument pos:start="49:73" pos:end="49:80"><expr pos:start="49:73" pos:end="49:80"><name pos:start="49:73" pos:end="49:80"><name pos:start="49:73" pos:end="49:73">p</name><operator pos:start="49:74" pos:end="49:75">-&gt;</operator><name pos:start="49:76" pos:end="49:80">width</name></name></expr></argument>, <argument pos:start="49:83" pos:end="49:84"><expr pos:start="49:83" pos:end="49:84"><literal type="number" pos:start="49:83" pos:end="49:84">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:42">(<expr pos:start="53:13" pos:end="53:41"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:24"><name pos:start="53:14" pos:end="53:14">s</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:24">zero_res</name></name> <operator pos:start="53:26" pos:end="53:27">&amp;&amp;</operator> <operator pos:start="53:29" pos:end="53:29">!</operator><name pos:start="53:30" pos:end="53:41"><name pos:start="53:30" pos:end="53:30">s</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:41">low_delay</name></name></expr>)</condition>

        <block pos:start="55:9" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:38">

            <expr_stmt pos:start="57:13" pos:end="57:87"><expr pos:start="57:13" pos:end="57:86"><call pos:start="57:13" pos:end="57:86"><name pos:start="57:13" pos:end="57:18">memset</name><argument_list pos:start="57:19" pos:end="57:86">(<argument pos:start="57:20" pos:end="57:30"><expr pos:start="57:20" pos:end="57:30"><name pos:start="57:20" pos:end="57:30"><name pos:start="57:20" pos:end="57:20">p</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:30">idwt_buf</name></name></expr></argument>, <argument pos:start="57:33" pos:end="57:33"><expr pos:start="57:33" pos:end="57:33"><literal type="number" pos:start="57:33" pos:end="57:33">0</literal></expr></argument>, <argument pos:start="57:36" pos:end="57:85"><expr pos:start="57:36" pos:end="57:85"><name pos:start="57:36" pos:end="57:49"><name pos:start="57:36" pos:end="57:36">p</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:49">idwt_stride</name></name> <operator pos:start="57:51" pos:end="57:51">*</operator> <name pos:start="57:53" pos:end="57:66"><name pos:start="57:53" pos:end="57:53">p</name><operator pos:start="57:54" pos:end="57:55">-&gt;</operator><name pos:start="57:56" pos:end="57:66">idwt_height</name></name> <operator pos:start="57:68" pos:end="57:68">*</operator> <sizeof pos:start="57:70" pos:end="57:85">sizeof<argument_list pos:start="57:76" pos:end="57:85">(<argument pos:start="57:77" pos:end="57:84"><expr pos:start="57:77" pos:end="57:84"><name pos:start="57:77" pos:end="57:84">IDWTELEM</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:38"><expr pos:start="59:13" pos:end="59:37"><call pos:start="59:13" pos:end="59:37"><name pos:start="59:13" pos:end="59:28">decode_component</name><argument_list pos:start="59:29" pos:end="59:37">(<argument pos:start="59:30" pos:end="59:30"><expr pos:start="59:30" pos:end="59:30"><name pos:start="59:30" pos:end="59:30">s</name></expr></argument>, <argument pos:start="59:33" pos:end="59:36"><expr pos:start="59:33" pos:end="59:36"><name pos:start="59:33" pos:end="59:36">comp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="59:40" pos:end="59:85">/* [DIRAC_STD] 13.4.1 core_transform_data() */</comment>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="65:85"><expr pos:start="63:9" pos:end="65:84"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="65:84"><name pos:start="63:15" pos:end="63:35">ff_spatial_idwt_init2</name><argument_list pos:start="63:36" pos:end="65:84">(<argument pos:start="63:37" pos:end="63:38"><expr pos:start="63:37" pos:end="63:38"><operator pos:start="63:37" pos:end="63:37">&amp;</operator><name pos:start="63:38" pos:end="63:38">d</name></expr></argument>, <argument pos:start="63:41" pos:end="63:51"><expr pos:start="63:41" pos:end="63:51"><name pos:start="63:41" pos:end="63:51"><name pos:start="63:41" pos:end="63:41">p</name><operator pos:start="63:42" pos:end="63:43">-&gt;</operator><name pos:start="63:44" pos:end="63:51">idwt_buf</name></name></expr></argument>, <argument pos:start="63:54" pos:end="63:66"><expr pos:start="63:54" pos:end="63:66"><name pos:start="63:54" pos:end="63:66"><name pos:start="63:54" pos:end="63:54">p</name><operator pos:start="63:55" pos:end="63:56">-&gt;</operator><name pos:start="63:57" pos:end="63:66">idwt_width</name></name></expr></argument>, <argument pos:start="63:69" pos:end="63:82"><expr pos:start="63:69" pos:end="63:82"><name pos:start="63:69" pos:end="63:82"><name pos:start="63:69" pos:end="63:69">p</name><operator pos:start="63:70" pos:end="63:71">-&gt;</operator><name pos:start="63:72" pos:end="63:82">idwt_height</name></name></expr></argument>, <argument pos:start="63:85" pos:end="63:98"><expr pos:start="63:85" pos:end="63:98"><name pos:start="63:85" pos:end="63:98"><name pos:start="63:85" pos:end="63:85">p</name><operator pos:start="63:86" pos:end="63:87">-&gt;</operator><name pos:start="63:88" pos:end="63:98">idwt_stride</name></name></expr></argument>,

                                    <argument pos:start="65:37" pos:end="65:52"><expr pos:start="65:37" pos:end="65:52"><name pos:start="65:37" pos:end="65:50"><name pos:start="65:37" pos:end="65:37">s</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:50">wavelet_idx</name></name><operator pos:start="65:51" pos:end="65:51">+</operator><literal type="number" pos:start="65:52" pos:end="65:52">2</literal></expr></argument>, <argument pos:start="65:55" pos:end="65:70"><expr pos:start="65:55" pos:end="65:70"><name pos:start="65:55" pos:end="65:70"><name pos:start="65:55" pos:end="65:55">s</name><operator pos:start="65:56" pos:end="65:57">-&gt;</operator><name pos:start="65:58" pos:end="65:70">wavelet_depth</name></name></expr></argument>, <argument pos:start="65:73" pos:end="65:83"><expr pos:start="65:73" pos:end="65:83"><name pos:start="65:73" pos:end="65:83"><name pos:start="65:73" pos:end="65:73">p</name><operator pos:start="65:74" pos:end="65:75">-&gt;</operator><name pos:start="65:76" pos:end="65:83">idwt_tmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:23"><if pos:start="67:9" pos:end="69:23">if <condition pos:start="67:12" pos:end="67:20">(<expr pos:start="67:13" pos:end="67:19"><name pos:start="67:13" pos:end="67:15">ret</name> <operator pos:start="67:17" pos:end="67:17">&lt;</operator> <literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:23"><block_content pos:start="69:13" pos:end="69:23">

            <return pos:start="69:13" pos:end="69:23">return <expr pos:start="69:20" pos:end="69:22"><name pos:start="69:20" pos:end="69:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="73:9" pos:end="157:9"><if pos:start="73:9" pos:end="85:9">if <condition pos:start="73:12" pos:end="73:25">(<expr pos:start="73:13" pos:end="73:24"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:24"><name pos:start="73:14" pos:end="73:14">s</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:24">num_refs</name></name></expr>)</condition> <block pos:start="73:27" pos:end="85:9">{<block_content pos:start="75:13" pos:end="83:13"> <comment type="block" pos:start="73:29" pos:end="73:39">/* intra */</comment>

            <for pos:start="75:13" pos:end="83:13">for <control pos:start="75:17" pos:end="75:47">(<init pos:start="75:18" pos:end="75:23"><expr pos:start="75:18" pos:end="75:22"><name pos:start="75:18" pos:end="75:18">y</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>;</init> <condition pos:start="75:25" pos:end="75:38"><expr pos:start="75:25" pos:end="75:37"><name pos:start="75:25" pos:end="75:25">y</name> <operator pos:start="75:27" pos:end="75:27">&lt;</operator> <name pos:start="75:29" pos:end="75:37"><name pos:start="75:29" pos:end="75:29">p</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:37">height</name></name></expr>;</condition> <incr pos:start="75:40" pos:end="75:46"><expr pos:start="75:40" pos:end="75:46"><name pos:start="75:40" pos:end="75:40">y</name> <operator pos:start="75:42" pos:end="75:43">+=</operator> <literal type="number" pos:start="75:45" pos:end="75:46">16</literal></expr></incr>)</control> <block pos:start="75:49" pos:end="83:13">{<block_content pos:start="77:17" pos:end="81:114">

                <expr_stmt pos:start="77:17" pos:end="77:49"><expr pos:start="77:17" pos:end="77:48"><call pos:start="77:17" pos:end="77:48"><name pos:start="77:17" pos:end="77:38">ff_spatial_idwt_slice2</name><argument_list pos:start="77:39" pos:end="77:48">(<argument pos:start="77:40" pos:end="77:41"><expr pos:start="77:40" pos:end="77:41"><operator pos:start="77:40" pos:end="77:40">&amp;</operator><name pos:start="77:41" pos:end="77:41">d</name></expr></argument>, <argument pos:start="77:44" pos:end="77:47"><expr pos:start="77:44" pos:end="77:47"><name pos:start="77:44" pos:end="77:44">y</name><operator pos:start="77:45" pos:end="77:45">+</operator><literal type="number" pos:start="77:46" pos:end="77:47">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="77:51" pos:end="77:62">/* decode */</comment>

                <expr_stmt pos:start="79:17" pos:end="81:114"><expr pos:start="79:17" pos:end="81:113"><call pos:start="79:17" pos:end="81:113"><name pos:start="79:17" pos:end="79:51"><name pos:start="79:17" pos:end="79:17">s</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:27">diracdsp</name><operator pos:start="79:28" pos:end="79:28">.</operator><name pos:start="79:29" pos:end="79:51">put_signed_rect_clamped</name></name><argument_list pos:start="79:52" pos:end="81:113">(<argument pos:start="79:53" pos:end="79:71"><expr pos:start="79:53" pos:end="79:71"><name pos:start="79:53" pos:end="79:57">frame</name> <operator pos:start="79:59" pos:end="79:59">+</operator> <name pos:start="79:61" pos:end="79:61">y</name><operator pos:start="79:62" pos:end="79:62">*</operator><name pos:start="79:63" pos:end="79:71"><name pos:start="79:63" pos:end="79:63">p</name><operator pos:start="79:64" pos:end="79:65">-&gt;</operator><name pos:start="79:66" pos:end="79:71">stride</name></name></expr></argument>, <argument pos:start="79:74" pos:end="79:82"><expr pos:start="79:74" pos:end="79:82"><name pos:start="79:74" pos:end="79:82"><name pos:start="79:74" pos:end="79:74">p</name><operator pos:start="79:75" pos:end="79:76">-&gt;</operator><name pos:start="79:77" pos:end="79:82">stride</name></name></expr></argument>,

                                                    <argument pos:start="81:53" pos:end="81:82"><expr pos:start="81:53" pos:end="81:82"><name pos:start="81:53" pos:end="81:63"><name pos:start="81:53" pos:end="81:53">p</name><operator pos:start="81:54" pos:end="81:55">-&gt;</operator><name pos:start="81:56" pos:end="81:63">idwt_buf</name></name> <operator pos:start="81:65" pos:end="81:65">+</operator> <name pos:start="81:67" pos:end="81:67">y</name><operator pos:start="81:68" pos:end="81:68">*</operator><name pos:start="81:69" pos:end="81:82"><name pos:start="81:69" pos:end="81:69">p</name><operator pos:start="81:70" pos:end="81:71">-&gt;</operator><name pos:start="81:72" pos:end="81:82">idwt_stride</name></name></expr></argument>, <argument pos:start="81:85" pos:end="81:98"><expr pos:start="81:85" pos:end="81:98"><name pos:start="81:85" pos:end="81:98"><name pos:start="81:85" pos:end="81:85">p</name><operator pos:start="81:86" pos:end="81:87">-&gt;</operator><name pos:start="81:88" pos:end="81:98">idwt_stride</name></name></expr></argument>, <argument pos:start="81:101" pos:end="81:108"><expr pos:start="81:101" pos:end="81:108"><name pos:start="81:101" pos:end="81:108"><name pos:start="81:101" pos:end="81:101">p</name><operator pos:start="81:102" pos:end="81:103">-&gt;</operator><name pos:start="81:104" pos:end="81:108">width</name></name></expr></argument>, <argument pos:start="81:111" pos:end="81:112"><expr pos:start="81:111" pos:end="81:112"><literal type="number" pos:start="81:111" pos:end="81:112">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="85:11" pos:end="157:9">else <block pos:start="85:16" pos:end="157:9">{<block_content pos:start="87:13" pos:end="155:13"> <comment type="block" pos:start="85:18" pos:end="85:28">/* inter */</comment>

            <decl_stmt pos:start="87:13" pos:end="87:47"><decl pos:start="87:13" pos:end="87:46"><type pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:15">int</name></type> <name pos:start="87:17" pos:end="87:25">rowheight</name> <init pos:start="87:27" pos:end="87:46">= <expr pos:start="87:29" pos:end="87:46"><name pos:start="87:29" pos:end="87:36"><name pos:start="87:29" pos:end="87:29">p</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:36">ybsep</name></name><operator pos:start="87:37" pos:end="87:37">*</operator><name pos:start="87:38" pos:end="87:46"><name pos:start="87:38" pos:end="87:38">p</name><operator pos:start="87:39" pos:end="87:40">-&gt;</operator><name pos:start="87:41" pos:end="87:46">stride</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="91:13" pos:end="91:73"><expr pos:start="91:13" pos:end="91:72"><call pos:start="91:13" pos:end="91:72"><name pos:start="91:13" pos:end="91:28">select_dsp_funcs</name><argument_list pos:start="91:29" pos:end="91:72">(<argument pos:start="91:30" pos:end="91:30"><expr pos:start="91:30" pos:end="91:30"><name pos:start="91:30" pos:end="91:30">s</name></expr></argument>, <argument pos:start="91:33" pos:end="91:40"><expr pos:start="91:33" pos:end="91:40"><name pos:start="91:33" pos:end="91:40"><name pos:start="91:33" pos:end="91:33">p</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:40">width</name></name></expr></argument>, <argument pos:start="91:43" pos:end="91:51"><expr pos:start="91:43" pos:end="91:51"><name pos:start="91:43" pos:end="91:51"><name pos:start="91:43" pos:end="91:43">p</name><operator pos:start="91:44" pos:end="91:45">-&gt;</operator><name pos:start="91:46" pos:end="91:51">height</name></name></expr></argument>, <argument pos:start="91:54" pos:end="91:61"><expr pos:start="91:54" pos:end="91:61"><name pos:start="91:54" pos:end="91:61"><name pos:start="91:54" pos:end="91:54">p</name><operator pos:start="91:55" pos:end="91:56">-&gt;</operator><name pos:start="91:57" pos:end="91:61">xblen</name></name></expr></argument>, <argument pos:start="91:64" pos:end="91:71"><expr pos:start="91:64" pos:end="91:71"><name pos:start="91:64" pos:end="91:71"><name pos:start="91:64" pos:end="91:64">p</name><operator pos:start="91:65" pos:end="91:66">-&gt;</operator><name pos:start="91:67" pos:end="91:71">yblen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="95:13" pos:end="97:83">for <control pos:start="95:17" pos:end="95:45">(<init pos:start="95:18" pos:end="95:23"><expr pos:start="95:18" pos:end="95:22"><name pos:start="95:18" pos:end="95:18">i</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <literal type="number" pos:start="95:22" pos:end="95:22">0</literal></expr>;</init> <condition pos:start="95:25" pos:end="95:40"><expr pos:start="95:25" pos:end="95:39"><name pos:start="95:25" pos:end="95:25">i</name> <operator pos:start="95:27" pos:end="95:27">&lt;</operator> <name pos:start="95:29" pos:end="95:39"><name pos:start="95:29" pos:end="95:29">s</name><operator pos:start="95:30" pos:end="95:31">-&gt;</operator><name pos:start="95:32" pos:end="95:39">num_refs</name></name></expr>;</condition> <incr pos:start="95:42" pos:end="95:44"><expr pos:start="95:42" pos:end="95:44"><name pos:start="95:42" pos:end="95:42">i</name><operator pos:start="95:43" pos:end="95:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="97:17" pos:end="97:83"><block_content pos:start="97:17" pos:end="97:83">

                <expr_stmt pos:start="97:17" pos:end="97:83"><expr pos:start="97:17" pos:end="97:82"><call pos:start="97:17" pos:end="97:82"><name pos:start="97:17" pos:end="97:36">interpolate_refplane</name><argument_list pos:start="97:37" pos:end="97:82">(<argument pos:start="97:38" pos:end="97:38"><expr pos:start="97:38" pos:end="97:38"><name pos:start="97:38" pos:end="97:38">s</name></expr></argument>, <argument pos:start="97:41" pos:end="97:54"><expr pos:start="97:41" pos:end="97:54"><name pos:start="97:41" pos:end="97:54"><name pos:start="97:41" pos:end="97:41">s</name><operator pos:start="97:42" pos:end="97:43">-&gt;</operator><name pos:start="97:44" pos:end="97:51">ref_pics</name><index pos:start="97:52" pos:end="97:54">[<expr pos:start="97:53" pos:end="97:53"><name pos:start="97:53" pos:end="97:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="97:57" pos:end="97:60"><expr pos:start="97:57" pos:end="97:60"><name pos:start="97:57" pos:end="97:60">comp</name></expr></argument>, <argument pos:start="97:63" pos:end="97:70"><expr pos:start="97:63" pos:end="97:70"><name pos:start="97:63" pos:end="97:70"><name pos:start="97:63" pos:end="97:63">p</name><operator pos:start="97:64" pos:end="97:65">-&gt;</operator><name pos:start="97:66" pos:end="97:70">width</name></name></expr></argument>, <argument pos:start="97:73" pos:end="97:81"><expr pos:start="97:73" pos:end="97:81"><name pos:start="97:73" pos:end="97:81"><name pos:start="97:73" pos:end="97:73">p</name><operator pos:start="97:74" pos:end="97:75">-&gt;</operator><name pos:start="97:76" pos:end="97:81">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="101:13" pos:end="101:56"><expr pos:start="101:13" pos:end="101:55"><call pos:start="101:13" pos:end="101:55"><name pos:start="101:13" pos:end="101:18">memset</name><argument_list pos:start="101:19" pos:end="101:55">(<argument pos:start="101:20" pos:end="101:27"><expr pos:start="101:20" pos:end="101:27"><name pos:start="101:20" pos:end="101:27"><name pos:start="101:20" pos:end="101:20">s</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:27">mctmp</name></name></expr></argument>, <argument pos:start="101:30" pos:end="101:30"><expr pos:start="101:30" pos:end="101:30"><literal type="number" pos:start="101:30" pos:end="101:30">0</literal></expr></argument>, <argument pos:start="101:33" pos:end="101:54"><expr pos:start="101:33" pos:end="101:54"><literal type="number" pos:start="101:33" pos:end="101:33">4</literal><operator pos:start="101:34" pos:end="101:34">*</operator><name pos:start="101:35" pos:end="101:44"><name pos:start="101:35" pos:end="101:35">p</name><operator pos:start="101:36" pos:end="101:37">-&gt;</operator><name pos:start="101:38" pos:end="101:44">yoffset</name></name><operator pos:start="101:45" pos:end="101:45">*</operator><name pos:start="101:46" pos:end="101:54"><name pos:start="101:46" pos:end="101:46">p</name><operator pos:start="101:47" pos:end="101:48">-&gt;</operator><name pos:start="101:49" pos:end="101:54">stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="105:13" pos:end="105:31"><expr pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:16">dsty</name> <operator pos:start="105:18" pos:end="105:18">=</operator> <operator pos:start="105:20" pos:end="105:20">-</operator><name pos:start="105:21" pos:end="105:30"><name pos:start="105:21" pos:end="105:21">p</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:30">yoffset</name></name></expr>;</expr_stmt>

            <for pos:start="107:13" pos:end="155:13">for <control pos:start="107:17" pos:end="107:45">(<init pos:start="107:18" pos:end="107:23"><expr pos:start="107:18" pos:end="107:22"><name pos:start="107:18" pos:end="107:18">y</name> <operator pos:start="107:20" pos:end="107:20">=</operator> <literal type="number" pos:start="107:22" pos:end="107:22">0</literal></expr>;</init> <condition pos:start="107:25" pos:end="107:40"><expr pos:start="107:25" pos:end="107:39"><name pos:start="107:25" pos:end="107:25">y</name> <operator pos:start="107:27" pos:end="107:27">&lt;</operator> <name pos:start="107:29" pos:end="107:39"><name pos:start="107:29" pos:end="107:29">s</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:39">blheight</name></name></expr>;</condition> <incr pos:start="107:42" pos:end="107:44"><expr pos:start="107:42" pos:end="107:44"><name pos:start="107:42" pos:end="107:42">y</name><operator pos:start="107:43" pos:end="107:44">++</operator></expr></incr>)</control> <block pos:start="107:47" pos:end="155:13">{<block_content pos:start="109:17" pos:end="153:33">

                <decl_stmt pos:start="109:17" pos:end="111:43"><decl pos:start="109:17" pos:end="109:29"><type pos:start="109:17" pos:end="109:19"><name pos:start="109:17" pos:end="109:19">int</name></type> <name pos:start="109:21" pos:end="109:21">h</name>     <init pos:start="109:27" pos:end="109:29">= <expr pos:start="109:29" pos:end="109:29"><literal type="number" pos:start="109:29" pos:end="109:29">0</literal></expr></init></decl>,

                    <decl pos:start="111:21" pos:end="111:42"><type ref="prev" pos:start="109:17" pos:end="109:19"/><name pos:start="111:21" pos:end="111:25">start</name> <init pos:start="111:27" pos:end="111:42">= <expr pos:start="111:29" pos:end="111:42"><call pos:start="111:29" pos:end="111:42"><name pos:start="111:29" pos:end="111:33">FFMAX</name><argument_list pos:start="111:34" pos:end="111:42">(<argument pos:start="111:35" pos:end="111:38"><expr pos:start="111:35" pos:end="111:38"><name pos:start="111:35" pos:end="111:38">dsty</name></expr></argument>, <argument pos:start="111:41" pos:end="111:41"><expr pos:start="111:41" pos:end="111:41"><literal type="number" pos:start="111:41" pos:end="111:41">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="113:17" pos:end="113:60"><decl pos:start="113:17" pos:end="113:59"><type pos:start="113:17" pos:end="113:26"><name pos:start="113:17" pos:end="113:24">uint16_t</name> <modifier pos:start="113:26" pos:end="113:26">*</modifier></type><name pos:start="113:27" pos:end="113:31">mctmp</name>    <init pos:start="113:36" pos:end="113:59">= <expr pos:start="113:38" pos:end="113:59"><name pos:start="113:38" pos:end="113:45"><name pos:start="113:38" pos:end="113:38">s</name><operator pos:start="113:39" pos:end="113:40">-&gt;</operator><name pos:start="113:41" pos:end="113:45">mctmp</name></name> <operator pos:start="113:47" pos:end="113:47">+</operator> <name pos:start="113:49" pos:end="113:49">y</name><operator pos:start="113:50" pos:end="113:50">*</operator><name pos:start="113:51" pos:end="113:59">rowheight</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="115:17" pos:end="115:64"><decl pos:start="115:17" pos:end="115:63"><type pos:start="115:17" pos:end="115:28"><name pos:start="115:17" pos:end="115:26">DiracBlock</name> <modifier pos:start="115:28" pos:end="115:28">*</modifier></type><name pos:start="115:29" pos:end="115:34">blocks</name> <init pos:start="115:36" pos:end="115:63">= <expr pos:start="115:38" pos:end="115:63"><name pos:start="115:38" pos:end="115:48"><name pos:start="115:38" pos:end="115:38">s</name><operator pos:start="115:39" pos:end="115:40">-&gt;</operator><name pos:start="115:41" pos:end="115:48">blmotion</name></name> <operator pos:start="115:50" pos:end="115:50">+</operator> <name pos:start="115:52" pos:end="115:52">y</name><operator pos:start="115:53" pos:end="115:53">*</operator><name pos:start="115:54" pos:end="115:63"><name pos:start="115:54" pos:end="115:54">s</name><operator pos:start="115:55" pos:end="115:56">-&gt;</operator><name pos:start="115:57" pos:end="115:63">blwidth</name></name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="119:17" pos:end="119:43"><expr pos:start="119:17" pos:end="119:42"><call pos:start="119:17" pos:end="119:42"><name pos:start="119:17" pos:end="119:33">init_obmc_weights</name><argument_list pos:start="119:34" pos:end="119:42">(<argument pos:start="119:35" pos:end="119:35"><expr pos:start="119:35" pos:end="119:35"><name pos:start="119:35" pos:end="119:35">s</name></expr></argument>, <argument pos:start="119:38" pos:end="119:38"><expr pos:start="119:38" pos:end="119:38"><name pos:start="119:38" pos:end="119:38">p</name></expr></argument>, <argument pos:start="119:41" pos:end="119:41"><expr pos:start="119:41" pos:end="119:41"><name pos:start="119:41" pos:end="119:41">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="123:17" pos:end="129:50"><if pos:start="123:17" pos:end="125:42">if <condition pos:start="123:20" pos:end="123:69">(<expr pos:start="123:21" pos:end="123:68"><name pos:start="123:21" pos:end="123:21">y</name> <operator pos:start="123:23" pos:end="123:24">==</operator> <name pos:start="123:26" pos:end="123:36"><name pos:start="123:26" pos:end="123:26">s</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:36">blheight</name></name><operator pos:start="123:37" pos:end="123:37">-</operator><literal type="number" pos:start="123:38" pos:end="123:38">1</literal> <operator pos:start="123:40" pos:end="123:41">||</operator> <name pos:start="123:43" pos:end="123:47">start</name><operator pos:start="123:48" pos:end="123:48">+</operator><name pos:start="123:49" pos:end="123:56"><name pos:start="123:49" pos:end="123:49">p</name><operator pos:start="123:50" pos:end="123:51">-&gt;</operator><name pos:start="123:52" pos:end="123:56">ybsep</name></name> <operator pos:start="123:58" pos:end="123:58">&gt;</operator> <name pos:start="123:60" pos:end="123:68"><name pos:start="123:60" pos:end="123:60">p</name><operator pos:start="123:61" pos:end="123:62">-&gt;</operator><name pos:start="123:63" pos:end="123:68">height</name></name></expr>)</condition><block type="pseudo" pos:start="125:21" pos:end="125:42"><block_content pos:start="125:21" pos:end="125:42">

                    <expr_stmt pos:start="125:21" pos:end="125:42"><expr pos:start="125:21" pos:end="125:41"><name pos:start="125:21" pos:end="125:21">h</name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:33"><name pos:start="125:25" pos:end="125:25">p</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:33">height</name></name> <operator pos:start="125:35" pos:end="125:35">-</operator> <name pos:start="125:37" pos:end="125:41">start</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="127:17" pos:end="129:50">else<block type="pseudo" pos:start="129:21" pos:end="129:50"><block_content pos:start="129:21" pos:end="129:50">

                    <expr_stmt pos:start="129:21" pos:end="129:50"><expr pos:start="129:21" pos:end="129:49"><name pos:start="129:21" pos:end="129:21">h</name> <operator pos:start="129:23" pos:end="129:23">=</operator> <name pos:start="129:25" pos:end="129:32"><name pos:start="129:25" pos:end="129:25">p</name><operator pos:start="129:26" pos:end="129:27">-&gt;</operator><name pos:start="129:28" pos:end="129:32">ybsep</name></name> <operator pos:start="129:34" pos:end="129:34">-</operator> <operator pos:start="129:36" pos:end="129:36">(</operator><name pos:start="129:37" pos:end="129:41">start</name> <operator pos:start="129:43" pos:end="129:43">-</operator> <name pos:start="129:45" pos:end="129:48">dsty</name><operator pos:start="129:49" pos:end="129:49">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="131:17" pos:end="133:26"><if pos:start="131:17" pos:end="133:26">if <condition pos:start="131:20" pos:end="131:26">(<expr pos:start="131:21" pos:end="131:25"><name pos:start="131:21" pos:end="131:21">h</name> <operator pos:start="131:23" pos:end="131:23">&lt;</operator> <literal type="number" pos:start="131:25" pos:end="131:25">0</literal></expr>)</condition><block type="pseudo" pos:start="133:21" pos:end="133:26"><block_content pos:start="133:21" pos:end="133:26">

                    <break pos:start="133:21" pos:end="133:26">break;</break></block_content></block></if></if_stmt>



                <expr_stmt pos:start="137:17" pos:end="137:69"><expr pos:start="137:17" pos:end="137:68"><call pos:start="137:17" pos:end="137:68"><name pos:start="137:17" pos:end="137:22">memset</name><argument_list pos:start="137:23" pos:end="137:68">(<argument pos:start="137:24" pos:end="137:51"><expr pos:start="137:24" pos:end="137:51"><name pos:start="137:24" pos:end="137:28">mctmp</name><operator pos:start="137:29" pos:end="137:29">+</operator><literal type="number" pos:start="137:30" pos:end="137:30">2</literal><operator pos:start="137:31" pos:end="137:31">*</operator><name pos:start="137:32" pos:end="137:41"><name pos:start="137:32" pos:end="137:32">p</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:41">yoffset</name></name><operator pos:start="137:42" pos:end="137:42">*</operator><name pos:start="137:43" pos:end="137:51"><name pos:start="137:43" pos:end="137:43">p</name><operator pos:start="137:44" pos:end="137:45">-&gt;</operator><name pos:start="137:46" pos:end="137:51">stride</name></name></expr></argument>, <argument pos:start="137:54" pos:end="137:54"><expr pos:start="137:54" pos:end="137:54"><literal type="number" pos:start="137:54" pos:end="137:54">0</literal></expr></argument>, <argument pos:start="137:57" pos:end="137:67"><expr pos:start="137:57" pos:end="137:67"><literal type="number" pos:start="137:57" pos:end="137:57">2</literal><operator pos:start="137:58" pos:end="137:58">*</operator><name pos:start="137:59" pos:end="137:67">rowheight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:53"><expr pos:start="139:17" pos:end="139:52"><call pos:start="139:17" pos:end="139:52"><name pos:start="139:17" pos:end="139:22">mc_row</name><argument_list pos:start="139:23" pos:end="139:52">(<argument pos:start="139:24" pos:end="139:24"><expr pos:start="139:24" pos:end="139:24"><name pos:start="139:24" pos:end="139:24">s</name></expr></argument>, <argument pos:start="139:27" pos:end="139:32"><expr pos:start="139:27" pos:end="139:32"><name pos:start="139:27" pos:end="139:32">blocks</name></expr></argument>, <argument pos:start="139:35" pos:end="139:39"><expr pos:start="139:35" pos:end="139:39"><name pos:start="139:35" pos:end="139:39">mctmp</name></expr></argument>, <argument pos:start="139:42" pos:end="139:45"><expr pos:start="139:42" pos:end="139:45"><name pos:start="139:42" pos:end="139:45">comp</name></expr></argument>, <argument pos:start="139:48" pos:end="139:51"><expr pos:start="139:48" pos:end="139:51"><name pos:start="139:48" pos:end="139:51">dsty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="143:17" pos:end="143:63"><expr pos:start="143:17" pos:end="143:62"><name pos:start="143:17" pos:end="143:21">mctmp</name> <operator pos:start="143:23" pos:end="143:24">+=</operator> <operator pos:start="143:26" pos:end="143:26">(</operator><name pos:start="143:27" pos:end="143:31">start</name> <operator pos:start="143:33" pos:end="143:33">-</operator> <name pos:start="143:35" pos:end="143:38">dsty</name><operator pos:start="143:39" pos:end="143:39">)</operator><operator pos:start="143:40" pos:end="143:40">*</operator><name pos:start="143:41" pos:end="143:49"><name pos:start="143:41" pos:end="143:41">p</name><operator pos:start="143:42" pos:end="143:43">-&gt;</operator><name pos:start="143:44" pos:end="143:49">stride</name></name> <operator pos:start="143:51" pos:end="143:51">+</operator> <name pos:start="143:53" pos:end="143:62"><name pos:start="143:53" pos:end="143:53">p</name><operator pos:start="143:54" pos:end="143:55">-&gt;</operator><name pos:start="143:56" pos:end="143:62">xoffset</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:54"><expr pos:start="145:17" pos:end="145:53"><call pos:start="145:17" pos:end="145:53"><name pos:start="145:17" pos:end="145:38">ff_spatial_idwt_slice2</name><argument_list pos:start="145:39" pos:end="145:53">(<argument pos:start="145:40" pos:end="145:41"><expr pos:start="145:40" pos:end="145:41"><operator pos:start="145:40" pos:end="145:40">&amp;</operator><name pos:start="145:41" pos:end="145:41">d</name></expr></argument>, <argument pos:start="145:44" pos:end="145:52"><expr pos:start="145:44" pos:end="145:52"><name pos:start="145:44" pos:end="145:48">start</name> <operator pos:start="145:50" pos:end="145:50">+</operator> <name pos:start="145:52" pos:end="145:52">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="145:56" pos:end="145:67">/* decode */</comment>

                <expr_stmt pos:start="147:17" pos:end="149:110"><expr pos:start="147:17" pos:end="149:109"><call pos:start="147:17" pos:end="149:109"><name pos:start="147:17" pos:end="147:44"><name pos:start="147:17" pos:end="147:17">s</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:27">diracdsp</name><operator pos:start="147:28" pos:end="147:28">.</operator><name pos:start="147:29" pos:end="147:44">add_rect_clamped</name></name><argument_list pos:start="147:45" pos:end="149:109">(<argument pos:start="147:46" pos:end="147:68"><expr pos:start="147:46" pos:end="147:68"><name pos:start="147:46" pos:end="147:50">frame</name> <operator pos:start="147:52" pos:end="147:52">+</operator> <name pos:start="147:54" pos:end="147:58">start</name><operator pos:start="147:59" pos:end="147:59">*</operator><name pos:start="147:60" pos:end="147:68"><name pos:start="147:60" pos:end="147:60">p</name><operator pos:start="147:61" pos:end="147:62">-&gt;</operator><name pos:start="147:63" pos:end="147:68">stride</name></name></expr></argument>, <argument pos:start="147:71" pos:end="147:75"><expr pos:start="147:71" pos:end="147:75"><name pos:start="147:71" pos:end="147:75">mctmp</name></expr></argument>, <argument pos:start="147:78" pos:end="147:86"><expr pos:start="147:78" pos:end="147:86"><name pos:start="147:78" pos:end="147:86"><name pos:start="147:78" pos:end="147:78">p</name><operator pos:start="147:79" pos:end="147:80">-&gt;</operator><name pos:start="147:81" pos:end="147:86">stride</name></name></expr></argument>,

                                             <argument pos:start="149:46" pos:end="149:79"><expr pos:start="149:46" pos:end="149:79"><name pos:start="149:46" pos:end="149:56"><name pos:start="149:46" pos:end="149:46">p</name><operator pos:start="149:47" pos:end="149:48">-&gt;</operator><name pos:start="149:49" pos:end="149:56">idwt_buf</name></name> <operator pos:start="149:58" pos:end="149:58">+</operator> <name pos:start="149:60" pos:end="149:64">start</name><operator pos:start="149:65" pos:end="149:65">*</operator><name pos:start="149:66" pos:end="149:79"><name pos:start="149:66" pos:end="149:66">p</name><operator pos:start="149:67" pos:end="149:68">-&gt;</operator><name pos:start="149:69" pos:end="149:79">idwt_stride</name></name></expr></argument>, <argument pos:start="149:82" pos:end="149:95"><expr pos:start="149:82" pos:end="149:95"><name pos:start="149:82" pos:end="149:95"><name pos:start="149:82" pos:end="149:82">p</name><operator pos:start="149:83" pos:end="149:84">-&gt;</operator><name pos:start="149:85" pos:end="149:95">idwt_stride</name></name></expr></argument>, <argument pos:start="149:98" pos:end="149:105"><expr pos:start="149:98" pos:end="149:105"><name pos:start="149:98" pos:end="149:105"><name pos:start="149:98" pos:end="149:98">p</name><operator pos:start="149:99" pos:end="149:100">-&gt;</operator><name pos:start="149:101" pos:end="149:105">width</name></name></expr></argument>, <argument pos:start="149:108" pos:end="149:108"><expr pos:start="149:108" pos:end="149:108"><name pos:start="149:108" pos:end="149:108">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="153:17" pos:end="153:33"><expr pos:start="153:17" pos:end="153:32"><name pos:start="153:17" pos:end="153:20">dsty</name> <operator pos:start="153:22" pos:end="153:23">+=</operator> <name pos:start="153:25" pos:end="153:32"><name pos:start="153:25" pos:end="153:25">p</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:32">ybsep</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>





    <return pos:start="165:5" pos:end="165:13">return <expr pos:start="165:12" pos:end="165:12"><literal type="number" pos:start="165:12" pos:end="165:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
