<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4314.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19"><name pos:start="1:8" pos:end="1:11">enum</name> <name pos:start="1:13" pos:end="1:19">CodecID</name></name></type> <name pos:start="1:21" pos:end="1:37">find_codec_or_die</name><parameter_list pos:start="1:38" pos:end="1:91">(<parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:54"><specifier pos:start="1:39" pos:end="1:43">const</specifier> <name pos:start="1:45" pos:end="1:48">char</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">name</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:77"><decl pos:start="1:57" pos:end="1:77"><type pos:start="1:57" pos:end="1:77"><name pos:start="1:57" pos:end="1:72"><name pos:start="1:57" pos:end="1:60">enum</name> <name pos:start="1:62" pos:end="1:72">AVMediaType</name></name></type> <name pos:start="1:74" pos:end="1:77">type</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:90"><decl pos:start="1:80" pos:end="1:90"><type pos:start="1:80" pos:end="1:90"><name pos:start="1:80" pos:end="1:82">int</name></type> <name pos:start="1:84" pos:end="1:90">encoder</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:21">

    <decl_stmt pos:start="5:5" pos:end="5:63"><decl pos:start="5:5" pos:end="5:62"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:28">codec_string</name> <init pos:start="5:30" pos:end="5:62">= <expr pos:start="5:32" pos:end="5:62"><ternary pos:start="5:32" pos:end="5:62"><condition pos:start="5:32" pos:end="5:40"><expr pos:start="5:32" pos:end="5:38"><name pos:start="5:32" pos:end="5:38">encoder</name></expr> ?</condition><then pos:start="5:42" pos:end="5:50"> <expr pos:start="5:42" pos:end="5:50"><literal type="string" pos:start="5:42" pos:end="5:50">"encoder"</literal></expr> </then><else pos:start="5:52" pos:end="5:62">: <expr pos:start="5:54" pos:end="5:62"><literal type="string" pos:start="5:54" pos:end="5:62">"decoder"</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVCodec</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">codec</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:29"><if pos:start="11:5" pos:end="13:29">if<condition pos:start="11:7" pos:end="11:13">(<expr pos:start="11:8" pos:end="11:12"><operator pos:start="11:8" pos:end="11:8">!</operator><name pos:start="11:9" pos:end="11:12">name</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:29"><block_content pos:start="13:9" pos:end="13:29">

        <return pos:start="13:9" pos:end="13:29">return <expr pos:start="13:16" pos:end="13:28"><name pos:start="13:16" pos:end="13:28">CODEC_ID_NONE</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="19:43"><expr pos:start="15:5" pos:end="19:42"><name pos:start="15:5" pos:end="15:9">codec</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <ternary pos:start="15:13" pos:end="19:42"><condition pos:start="15:13" pos:end="15:21"><expr pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:19">encoder</name></expr> ?</condition><then pos:start="17:9" pos:end="17:42">

        <expr pos:start="17:9" pos:end="17:42"><call pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:36">avcodec_find_encoder_by_name</name><argument_list pos:start="17:37" pos:end="17:42">(<argument pos:start="17:38" pos:end="17:41"><expr pos:start="17:38" pos:end="17:41"><name pos:start="17:38" pos:end="17:41">name</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="17:44" pos:end="19:42">:

        <expr pos:start="19:9" pos:end="19:42"><call pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:36">avcodec_find_decoder_by_name</name><argument_list pos:start="19:37" pos:end="19:42">(<argument pos:start="19:38" pos:end="19:41"><expr pos:start="19:38" pos:end="19:41"><name pos:start="19:38" pos:end="19:41">name</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if<condition pos:start="21:7" pos:end="21:14">(<expr pos:start="21:8" pos:end="21:13"><operator pos:start="21:8" pos:end="21:8">!</operator><name pos:start="21:9" pos:end="21:13">codec</name></expr>)</condition> <block pos:start="21:16" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:24">

        <expr_stmt pos:start="23:9" pos:end="23:76"><expr pos:start="23:9" pos:end="23:75"><call pos:start="23:9" pos:end="23:75"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:75">(<argument pos:start="23:16" pos:end="23:19"><expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">NULL</name></expr></argument>, <argument pos:start="23:22" pos:end="23:33"><expr pos:start="23:22" pos:end="23:33"><name pos:start="23:22" pos:end="23:33">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="23:36" pos:end="23:54"><expr pos:start="23:36" pos:end="23:54"><literal type="string" pos:start="23:36" pos:end="23:54">"Unknown %s '%s'\n"</literal></expr></argument>, <argument pos:start="23:57" pos:end="23:68"><expr pos:start="23:57" pos:end="23:68"><name pos:start="23:57" pos:end="23:68">codec_string</name></expr></argument>, <argument pos:start="23:71" pos:end="23:74"><expr pos:start="23:71" pos:end="23:74"><name pos:start="23:71" pos:end="23:74">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><call pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:20">exit_program</name><argument_list pos:start="25:21" pos:end="25:23">(<argument pos:start="25:22" pos:end="25:22"><expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if<condition pos:start="29:7" pos:end="29:27">(<expr pos:start="29:8" pos:end="29:26"><name pos:start="29:8" pos:end="29:18"><name pos:start="29:8" pos:end="29:12">codec</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:18">type</name></name> <operator pos:start="29:20" pos:end="29:21">!=</operator> <name pos:start="29:23" pos:end="29:26">type</name></expr>)</condition> <block pos:start="29:29" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:24">

        <expr_stmt pos:start="31:9" pos:end="31:81"><expr pos:start="31:9" pos:end="31:80"><call pos:start="31:9" pos:end="31:80"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:80">(<argument pos:start="31:16" pos:end="31:19"><expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">NULL</name></expr></argument>, <argument pos:start="31:22" pos:end="31:33"><expr pos:start="31:22" pos:end="31:33"><name pos:start="31:22" pos:end="31:33">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="31:36" pos:end="31:59"><expr pos:start="31:36" pos:end="31:59"><literal type="string" pos:start="31:36" pos:end="31:59">"Invalid %s type '%s'\n"</literal></expr></argument>, <argument pos:start="31:62" pos:end="31:73"><expr pos:start="31:62" pos:end="31:73"><name pos:start="31:62" pos:end="31:73">codec_string</name></expr></argument>, <argument pos:start="31:76" pos:end="31:79"><expr pos:start="31:76" pos:end="31:79"><name pos:start="31:76" pos:end="31:79">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:24"><expr pos:start="33:9" pos:end="33:23"><call pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:20">exit_program</name><argument_list pos:start="33:21" pos:end="33:23">(<argument pos:start="33:22" pos:end="33:22"><expr pos:start="33:22" pos:end="33:22"><literal type="number" pos:start="33:22" pos:end="33:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="37:5" pos:end="37:21">return <expr pos:start="37:12" pos:end="37:20"><name pos:start="37:12" pos:end="37:20"><name pos:start="37:12" pos:end="37:16">codec</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:20">id</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
