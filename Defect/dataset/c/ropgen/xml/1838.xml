<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1838.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">setup_rt_frame</name><parameter_list pos:start="1:27" pos:end="5:66">(<parameter pos:start="1:28" pos:end="1:34"><decl pos:start="1:28" pos:end="1:34"><type pos:start="1:28" pos:end="1:34"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:34">sig</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:63"><decl pos:start="1:37" pos:end="1:63"><type pos:start="1:37" pos:end="1:63"><name pos:start="1:37" pos:end="1:59"><name pos:start="1:37" pos:end="1:42">struct</name> <name pos:start="1:44" pos:end="1:59">target_sigaction</name></name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">ka</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><name pos:start="3:28" pos:end="3:43">target_siginfo_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">info</name></decl></parameter>,

			   <parameter pos:start="5:28" pos:end="5:47"><decl pos:start="5:28" pos:end="5:47"><type pos:start="5:28" pos:end="5:47"><name pos:start="5:28" pos:end="5:42">target_sigset_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">set</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:65"><decl pos:start="5:50" pos:end="5:65"><type pos:start="5:50" pos:end="5:65"><name pos:start="5:50" pos:end="5:60">CPUX86State</name> <modifier pos:start="5:62" pos:end="5:62">*</modifier></type><name pos:start="5:63" pos:end="5:65">env</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="151:1">{<block_content pos:start="9:9" pos:end="149:50">

        <decl_stmt pos:start="9:9" pos:end="9:35"><decl pos:start="9:9" pos:end="9:28"><type pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:17">abi_ulong</name></type> <name pos:start="9:19" pos:end="9:28">frame_addr</name></decl>, <decl pos:start="9:31" pos:end="9:34"><type ref="prev" pos:start="9:9" pos:end="9:17"/><name pos:start="9:31" pos:end="9:34">addr</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:34"><decl pos:start="11:9" pos:end="11:33"><type pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:14">struct</name> <name pos:start="11:16" pos:end="11:26">rt_sigframe</name></name> <modifier pos:start="11:28" pos:end="11:28">*</modifier></type><name pos:start="11:29" pos:end="11:33">frame</name></decl>;</decl_stmt>

	<decl_stmt pos:start="13:9" pos:end="13:23"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name></decl>, <decl pos:start="13:16" pos:end="13:22"><type ref="prev" pos:start="13:9" pos:end="13:11"/><name pos:start="13:16" pos:end="13:18">err</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</decl_stmt>



	<expr_stmt pos:start="17:9" pos:end="17:59"><expr pos:start="17:9" pos:end="17:58"><name pos:start="17:9" pos:end="17:18">frame_addr</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <call pos:start="17:22" pos:end="17:58"><name pos:start="17:22" pos:end="17:33">get_sigframe</name><argument_list pos:start="17:34" pos:end="17:58">(<argument pos:start="17:35" pos:end="17:36"><expr pos:start="17:35" pos:end="17:36"><name pos:start="17:35" pos:end="17:36">ka</name></expr></argument>, <argument pos:start="17:39" pos:end="17:41"><expr pos:start="17:39" pos:end="17:41"><name pos:start="17:39" pos:end="17:41">env</name></expr></argument>, <argument pos:start="17:44" pos:end="17:57"><expr pos:start="17:44" pos:end="17:57"><sizeof pos:start="17:44" pos:end="17:57">sizeof<argument_list pos:start="17:50" pos:end="17:57">(<argument pos:start="17:51" pos:end="17:56"><expr pos:start="17:51" pos:end="17:56"><operator pos:start="17:51" pos:end="17:51">*</operator><name pos:start="17:52" pos:end="17:56">frame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<if_stmt pos:start="21:9" pos:end="23:34"><if pos:start="21:9" pos:end="23:34">if <condition pos:start="21:12" pos:end="21:66">(<expr pos:start="21:13" pos:end="21:65"><operator pos:start="21:13" pos:end="21:13">!</operator><call pos:start="21:14" pos:end="21:65"><name pos:start="21:14" pos:end="21:29">lock_user_struct</name><argument_list pos:start="21:30" pos:end="21:65">(<argument pos:start="21:31" pos:end="21:42"><expr pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:42">VERIFY_WRITE</name></expr></argument>, <argument pos:start="21:45" pos:end="21:49"><expr pos:start="21:45" pos:end="21:49"><name pos:start="21:45" pos:end="21:49">frame</name></expr></argument>, <argument pos:start="21:52" pos:end="21:61"><expr pos:start="21:52" pos:end="21:61"><name pos:start="21:52" pos:end="21:61">frame_addr</name></expr></argument>, <argument pos:start="21:64" pos:end="21:64"><expr pos:start="21:64" pos:end="21:64"><literal type="number" pos:start="21:64" pos:end="21:64">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:34"><block_content pos:start="23:17" pos:end="23:34">

		<goto pos:start="23:17" pos:end="23:34">goto <name pos:start="23:22" pos:end="23:33">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:58"><expr pos:start="27:5" pos:end="27:57"><call pos:start="27:5" pos:end="27:57"><name pos:start="27:5" pos:end="27:14">__put_user</name><argument_list pos:start="27:15" pos:end="27:57">(<argument pos:start="27:16" pos:end="27:43"><expr pos:start="27:16" pos:end="27:43"><call pos:start="27:16" pos:end="27:43"><name pos:start="27:16" pos:end="27:38">current_exec_domain_sig</name><argument_list pos:start="27:39" pos:end="27:43">(<argument pos:start="27:40" pos:end="27:42"><expr pos:start="27:40" pos:end="27:42"><name pos:start="27:40" pos:end="27:42">sig</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:46" pos:end="27:56"><expr pos:start="27:46" pos:end="27:56"><operator pos:start="27:46" pos:end="27:46">&amp;</operator><name pos:start="27:47" pos:end="27:56"><name pos:start="27:47" pos:end="27:51">frame</name><operator pos:start="27:52" pos:end="27:53">-&gt;</operator><name pos:start="27:54" pos:end="27:56">sig</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:63"><expr pos:start="29:9" pos:end="29:62"><name pos:start="29:9" pos:end="29:12">addr</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:25">frame_addr</name> <operator pos:start="29:27" pos:end="29:27">+</operator> <call pos:start="29:29" pos:end="29:62"><name pos:start="29:29" pos:end="29:36">offsetof</name><argument_list pos:start="29:37" pos:end="29:62">(<argument pos:start="29:38" pos:end="29:55"><expr pos:start="29:38" pos:end="29:55">struct <name pos:start="29:45" pos:end="29:55">rt_sigframe</name></expr></argument>, <argument pos:start="29:58" pos:end="29:61"><expr pos:start="29:58" pos:end="29:61"><name pos:start="29:58" pos:end="29:61">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><call pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:14">__put_user</name><argument_list pos:start="31:15" pos:end="31:35">(<argument pos:start="31:16" pos:end="31:19"><expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">addr</name></expr></argument>, <argument pos:start="31:22" pos:end="31:34"><expr pos:start="31:22" pos:end="31:34"><operator pos:start="31:22" pos:end="31:22">&amp;</operator><name pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:27">frame</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:34">pinfo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:61"><expr pos:start="33:9" pos:end="33:60"><name pos:start="33:9" pos:end="33:12">addr</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:25">frame_addr</name> <operator pos:start="33:27" pos:end="33:27">+</operator> <call pos:start="33:29" pos:end="33:60"><name pos:start="33:29" pos:end="33:36">offsetof</name><argument_list pos:start="33:37" pos:end="33:60">(<argument pos:start="33:38" pos:end="33:55"><expr pos:start="33:38" pos:end="33:55">struct <name pos:start="33:45" pos:end="33:55">rt_sigframe</name></expr></argument>, <argument pos:start="33:58" pos:end="33:59"><expr pos:start="33:58" pos:end="33:59"><name pos:start="33:58" pos:end="33:59">uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:34"><expr pos:start="35:5" pos:end="35:33"><call pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:14">__put_user</name><argument_list pos:start="35:15" pos:end="35:33">(<argument pos:start="35:16" pos:end="35:19"><expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">addr</name></expr></argument>, <argument pos:start="35:22" pos:end="35:32"><expr pos:start="35:22" pos:end="35:32"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:32"><name pos:start="35:23" pos:end="35:27">frame</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:32">puc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="37:9" pos:end="37:56"><expr pos:start="37:9" pos:end="37:55"><name pos:start="37:9" pos:end="37:11">err</name> <operator pos:start="37:13" pos:end="37:14">|=</operator> <call pos:start="37:16" pos:end="37:55"><name pos:start="37:16" pos:end="37:35">copy_siginfo_to_user</name><argument_list pos:start="37:36" pos:end="37:55">(<argument pos:start="37:37" pos:end="37:48"><expr pos:start="37:37" pos:end="37:48"><operator pos:start="37:37" pos:end="37:37">&amp;</operator><name pos:start="37:38" pos:end="37:48"><name pos:start="37:38" pos:end="37:42">frame</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:48">info</name></name></expr></argument>, <argument pos:start="37:51" pos:end="37:54"><expr pos:start="37:51" pos:end="37:54"><name pos:start="37:51" pos:end="37:54">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="39:9" pos:end="41:34"><if pos:start="39:9" pos:end="41:34">if <condition pos:start="39:12" pos:end="39:16">(<expr pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">err</name></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:34"><block_content pos:start="41:17" pos:end="41:34">

		<goto pos:start="41:17" pos:end="41:34">goto <name pos:start="41:22" pos:end="41:33">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



	<comment type="block" pos:start="45:9" pos:end="45:35">/* Create the ucontext.  */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:40"><expr pos:start="47:5" pos:end="47:39"><call pos:start="47:5" pos:end="47:39"><name pos:start="47:5" pos:end="47:14">__put_user</name><argument_list pos:start="47:15" pos:end="47:39">(<argument pos:start="47:16" pos:end="47:16"><expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr></argument>, <argument pos:start="47:19" pos:end="47:38"><expr pos:start="47:19" pos:end="47:38"><operator pos:start="47:19" pos:end="47:19">&amp;</operator><name pos:start="47:20" pos:end="47:38"><name pos:start="47:20" pos:end="47:24">frame</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:28">uc</name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:38">tuc_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:39"><expr pos:start="49:5" pos:end="49:38"><call pos:start="49:5" pos:end="49:38"><name pos:start="49:5" pos:end="49:14">__put_user</name><argument_list pos:start="49:15" pos:end="49:38">(<argument pos:start="49:16" pos:end="49:16"><expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr></argument>, <argument pos:start="49:19" pos:end="49:37"><expr pos:start="49:19" pos:end="49:37"><operator pos:start="49:19" pos:end="49:19">&amp;</operator><name pos:start="49:20" pos:end="49:37"><name pos:start="49:20" pos:end="49:24">frame</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:28">uc</name><operator pos:start="49:29" pos:end="49:29">.</operator><name pos:start="49:30" pos:end="49:37">tuc_link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:74"><expr pos:start="51:5" pos:end="51:73"><call pos:start="51:5" pos:end="51:73"><name pos:start="51:5" pos:end="51:14">__put_user</name><argument_list pos:start="51:15" pos:end="51:73">(<argument pos:start="51:16" pos:end="51:44"><expr pos:start="51:16" pos:end="51:44"><name pos:start="51:16" pos:end="51:44"><name pos:start="51:16" pos:end="51:38">target_sigaltstack_used</name><operator pos:start="51:39" pos:end="51:39">.</operator><name pos:start="51:40" pos:end="51:44">ss_sp</name></name></expr></argument>, <argument pos:start="51:47" pos:end="51:72"><expr pos:start="51:47" pos:end="51:72"><operator pos:start="51:47" pos:end="51:47">&amp;</operator><name pos:start="51:48" pos:end="51:72"><name pos:start="51:48" pos:end="51:52">frame</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:56">uc</name><operator pos:start="51:57" pos:end="51:57">.</operator><name pos:start="51:58" pos:end="51:66">tuc_stack</name><operator pos:start="51:67" pos:end="51:67">.</operator><name pos:start="51:68" pos:end="51:72">ss_sp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="55:46"><expr pos:start="53:5" pos:end="55:45"><call pos:start="53:5" pos:end="55:45"><name pos:start="53:5" pos:end="53:14">__put_user</name><argument_list pos:start="53:15" pos:end="55:45">(<argument pos:start="53:16" pos:end="53:54"><expr pos:start="53:16" pos:end="53:54"><call pos:start="53:16" pos:end="53:54"><name pos:start="53:16" pos:end="53:27">sas_ss_flags</name><argument_list pos:start="53:28" pos:end="53:54">(<argument pos:start="53:29" pos:end="53:53"><expr pos:start="53:29" pos:end="53:53"><call pos:start="53:29" pos:end="53:53"><name pos:start="53:29" pos:end="53:48">get_sp_from_cpustate</name><argument_list pos:start="53:49" pos:end="53:53">(<argument pos:start="53:50" pos:end="53:52"><expr pos:start="53:50" pos:end="53:52"><name pos:start="53:50" pos:end="53:52">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="55:16" pos:end="55:44"><expr pos:start="55:16" pos:end="55:44"><operator pos:start="55:16" pos:end="55:16">&amp;</operator><name pos:start="55:17" pos:end="55:44"><name pos:start="55:17" pos:end="55:21">frame</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:25">uc</name><operator pos:start="55:26" pos:end="55:26">.</operator><name pos:start="55:27" pos:end="55:35">tuc_stack</name><operator pos:start="55:36" pos:end="55:36">.</operator><name pos:start="55:37" pos:end="55:44">ss_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="59:45"><expr pos:start="57:5" pos:end="59:44"><call pos:start="57:5" pos:end="59:44"><name pos:start="57:5" pos:end="57:14">__put_user</name><argument_list pos:start="57:15" pos:end="59:44">(<argument pos:start="57:16" pos:end="57:46"><expr pos:start="57:16" pos:end="57:46"><name pos:start="57:16" pos:end="57:46"><name pos:start="57:16" pos:end="57:38">target_sigaltstack_used</name><operator pos:start="57:39" pos:end="57:39">.</operator><name pos:start="57:40" pos:end="57:46">ss_size</name></name></expr></argument>,

               <argument pos:start="59:16" pos:end="59:43"><expr pos:start="59:16" pos:end="59:43"><operator pos:start="59:16" pos:end="59:16">&amp;</operator><name pos:start="59:17" pos:end="59:43"><name pos:start="59:17" pos:end="59:21">frame</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:25">uc</name><operator pos:start="59:26" pos:end="59:26">.</operator><name pos:start="59:27" pos:end="59:35">tuc_stack</name><operator pos:start="59:36" pos:end="59:36">.</operator><name pos:start="59:37" pos:end="59:43">ss_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="61:9" pos:end="65:84"><expr pos:start="61:9" pos:end="65:83"><name pos:start="61:9" pos:end="61:11">err</name> <operator pos:start="61:13" pos:end="61:14">|=</operator> <call pos:start="61:16" pos:end="65:83"><name pos:start="61:16" pos:end="61:31">setup_sigcontext</name><argument_list pos:start="61:32" pos:end="65:83">(<argument pos:start="61:33" pos:end="61:55"><expr pos:start="61:33" pos:end="61:55"><operator pos:start="61:33" pos:end="61:33">&amp;</operator><name pos:start="61:34" pos:end="61:55"><name pos:start="61:34" pos:end="61:38">frame</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:42">uc</name><operator pos:start="61:43" pos:end="61:43">.</operator><name pos:start="61:44" pos:end="61:55">tuc_mcontext</name></name></expr></argument>, <argument pos:start="61:58" pos:end="61:72"><expr pos:start="61:58" pos:end="61:72"><operator pos:start="61:58" pos:end="61:58">&amp;</operator><name pos:start="61:59" pos:end="61:72"><name pos:start="61:59" pos:end="61:63">frame</name><operator pos:start="61:64" pos:end="61:65">-&gt;</operator><name pos:start="61:66" pos:end="61:72">fpstate</name></name></expr></argument>,

			        <argument pos:start="63:33" pos:end="63:35"><expr pos:start="63:33" pos:end="63:35"><name pos:start="63:33" pos:end="63:35">env</name></expr></argument>, <argument pos:start="63:38" pos:end="63:48"><expr pos:start="63:38" pos:end="63:48"><name pos:start="63:38" pos:end="63:48"><name pos:start="63:38" pos:end="63:40">set</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:45">sig</name><index pos:start="63:46" pos:end="63:48">[<expr pos:start="63:47" pos:end="63:47"><literal type="number" pos:start="63:47" pos:end="63:47">0</literal></expr>]</index></name></expr></argument>, 

                                <argument pos:start="65:33" pos:end="65:82"><expr pos:start="65:33" pos:end="65:82"><name pos:start="65:33" pos:end="65:42">frame_addr</name> <operator pos:start="65:44" pos:end="65:44">+</operator> <call pos:start="65:46" pos:end="65:82"><name pos:start="65:46" pos:end="65:53">offsetof</name><argument_list pos:start="65:54" pos:end="65:82">(<argument pos:start="65:55" pos:end="65:72"><expr pos:start="65:55" pos:end="65:72">struct <name pos:start="65:62" pos:end="65:72">rt_sigframe</name></expr></argument>, <argument pos:start="65:75" pos:end="65:81"><expr pos:start="65:75" pos:end="65:81"><name pos:start="65:75" pos:end="65:81">fpstate</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="67:9" pos:end="73:9">for<control pos:start="67:12" pos:end="67:46">(<init pos:start="67:13" pos:end="67:18"><expr pos:start="67:13" pos:end="67:17"><name pos:start="67:13" pos:end="67:13">i</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <literal type="number" pos:start="67:17" pos:end="67:17">0</literal></expr>;</init> <condition pos:start="67:20" pos:end="67:41"><expr pos:start="67:20" pos:end="67:40"><name pos:start="67:20" pos:end="67:20">i</name> <operator pos:start="67:22" pos:end="67:22">&lt;</operator> <name pos:start="67:24" pos:end="67:40">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="67:43" pos:end="67:45"><expr pos:start="67:43" pos:end="67:45"><name pos:start="67:43" pos:end="67:43">i</name><operator pos:start="67:44" pos:end="67:45">++</operator></expr></incr>)</control> <block pos:start="67:48" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:34">

            <if_stmt pos:start="69:13" pos:end="71:34"><if pos:start="69:13" pos:end="71:34">if <condition pos:start="69:16" pos:end="69:71">(<expr pos:start="69:17" pos:end="69:70"><call pos:start="69:17" pos:end="69:70"><name pos:start="69:17" pos:end="69:26">__put_user</name><argument_list pos:start="69:27" pos:end="69:70">(<argument pos:start="69:28" pos:end="69:38"><expr pos:start="69:28" pos:end="69:38"><name pos:start="69:28" pos:end="69:38"><name pos:start="69:28" pos:end="69:30">set</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:35">sig</name><index pos:start="69:36" pos:end="69:38">[<expr pos:start="69:37" pos:end="69:37"><name pos:start="69:37" pos:end="69:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="69:41" pos:end="69:69"><expr pos:start="69:41" pos:end="69:69"><operator pos:start="69:41" pos:end="69:41">&amp;</operator><name pos:start="69:42" pos:end="69:69"><name pos:start="69:42" pos:end="69:46">frame</name><operator pos:start="69:47" pos:end="69:48">-&gt;</operator><name pos:start="69:49" pos:end="69:50">uc</name><operator pos:start="69:51" pos:end="69:51">.</operator><name pos:start="69:52" pos:end="69:62">tuc_sigmask</name><operator pos:start="69:63" pos:end="69:63">.</operator><name pos:start="69:64" pos:end="69:66">sig</name><index pos:start="69:67" pos:end="69:69">[<expr pos:start="69:68" pos:end="69:68"><name pos:start="69:68" pos:end="69:68">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:34"><block_content pos:start="71:17" pos:end="71:34">

                <goto pos:start="71:17" pos:end="71:34">goto <name pos:start="71:22" pos:end="71:33">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></for>



	<comment type="block" pos:start="77:9" pos:end="79:36">/* Set up to return from userspace.  If provided, use a stub

	   already in userspace.  */</comment>

	<if_stmt pos:start="81:9" pos:end="103:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:46">(<expr pos:start="81:13" pos:end="81:45"><name pos:start="81:13" pos:end="81:24"><name pos:start="81:13" pos:end="81:14">ka</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:24">sa_flags</name></name> <operator pos:start="81:26" pos:end="81:26">&amp;</operator> <name pos:start="81:28" pos:end="81:45">TARGET_SA_RESTORER</name></expr>)</condition> <block pos:start="81:48" pos:end="85:9">{<block_content pos:start="83:9" pos:end="83:54">

        <expr_stmt pos:start="83:9" pos:end="83:54"><expr pos:start="83:9" pos:end="83:53"><call pos:start="83:9" pos:end="83:53"><name pos:start="83:9" pos:end="83:18">__put_user</name><argument_list pos:start="83:19" pos:end="83:53">(<argument pos:start="83:20" pos:end="83:34"><expr pos:start="83:20" pos:end="83:34"><name pos:start="83:20" pos:end="83:34"><name pos:start="83:20" pos:end="83:21">ka</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:34">sa_restorer</name></name></expr></argument>, <argument pos:start="83:37" pos:end="83:52"><expr pos:start="83:37" pos:end="83:52"><operator pos:start="83:37" pos:end="83:37">&amp;</operator><name pos:start="83:38" pos:end="83:52"><name pos:start="83:38" pos:end="83:42">frame</name><operator pos:start="83:43" pos:end="83:44">-&gt;</operator><name pos:start="83:45" pos:end="83:52">pretcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="85:11" pos:end="103:9">else <block pos:start="85:16" pos:end="103:9">{<block_content pos:start="87:17" pos:end="101:58">

                <decl_stmt pos:start="87:17" pos:end="87:31"><decl pos:start="87:17" pos:end="87:30"><type pos:start="87:17" pos:end="87:24"><name pos:start="87:17" pos:end="87:24">uint16_t</name></type> <name pos:start="87:26" pos:end="87:30">val16</name></decl>;</decl_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:74"><expr pos:start="89:17" pos:end="89:73"><name pos:start="89:17" pos:end="89:20">addr</name> <operator pos:start="89:22" pos:end="89:22">=</operator> <name pos:start="89:24" pos:end="89:33">frame_addr</name> <operator pos:start="89:35" pos:end="89:35">+</operator> <call pos:start="89:37" pos:end="89:73"><name pos:start="89:37" pos:end="89:44">offsetof</name><argument_list pos:start="89:45" pos:end="89:73">(<argument pos:start="89:46" pos:end="89:63"><expr pos:start="89:46" pos:end="89:63">struct <name pos:start="89:53" pos:end="89:63">rt_sigframe</name></expr></argument>, <argument pos:start="89:66" pos:end="89:72"><expr pos:start="89:66" pos:end="89:72"><name pos:start="89:66" pos:end="89:72">retcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:43"><expr pos:start="91:9" pos:end="91:42"><call pos:start="91:9" pos:end="91:42"><name pos:start="91:9" pos:end="91:18">__put_user</name><argument_list pos:start="91:19" pos:end="91:42">(<argument pos:start="91:20" pos:end="91:23"><expr pos:start="91:20" pos:end="91:23"><name pos:start="91:20" pos:end="91:23">addr</name></expr></argument>, <argument pos:start="91:26" pos:end="91:41"><expr pos:start="91:26" pos:end="91:41"><operator pos:start="91:26" pos:end="91:26">&amp;</operator><name pos:start="91:27" pos:end="91:41"><name pos:start="91:27" pos:end="91:31">frame</name><operator pos:start="91:32" pos:end="91:33">-&gt;</operator><name pos:start="91:34" pos:end="91:41">pretcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="block" pos:start="93:17" pos:end="93:53">/* This is movl $,%eax ; int $0x80 */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:53"><expr pos:start="95:9" pos:end="95:52"><call pos:start="95:9" pos:end="95:52"><name pos:start="95:9" pos:end="95:18">__put_user</name><argument_list pos:start="95:19" pos:end="95:52">(<argument pos:start="95:20" pos:end="95:23"><expr pos:start="95:20" pos:end="95:23"><literal type="number" pos:start="95:20" pos:end="95:23">0xb8</literal></expr></argument>, <argument pos:start="95:26" pos:end="95:51"><expr pos:start="95:26" pos:end="95:51"><operator pos:start="95:26" pos:end="95:26">(</operator><name pos:start="95:27" pos:end="95:30">char</name> <operator pos:start="95:32" pos:end="95:32">*</operator><operator pos:start="95:33" pos:end="95:33">)</operator><operator pos:start="95:34" pos:end="95:34">(</operator><name pos:start="95:35" pos:end="95:48"><name pos:start="95:35" pos:end="95:39">frame</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:48">retcode</name></name><operator pos:start="95:49" pos:end="95:49">+</operator><literal type="number" pos:start="95:50" pos:end="95:50">0</literal><operator pos:start="95:51" pos:end="95:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:70"><expr pos:start="97:9" pos:end="97:69"><call pos:start="97:9" pos:end="97:69"><name pos:start="97:9" pos:end="97:18">__put_user</name><argument_list pos:start="97:19" pos:end="97:69">(<argument pos:start="97:20" pos:end="97:41"><expr pos:start="97:20" pos:end="97:41"><name pos:start="97:20" pos:end="97:41">TARGET_NR_rt_sigreturn</name></expr></argument>, <argument pos:start="97:44" pos:end="97:68"><expr pos:start="97:44" pos:end="97:68"><operator pos:start="97:44" pos:end="97:44">(</operator><name pos:start="97:45" pos:end="97:47">int</name> <operator pos:start="97:49" pos:end="97:49">*</operator><operator pos:start="97:50" pos:end="97:50">)</operator><operator pos:start="97:51" pos:end="97:51">(</operator><name pos:start="97:52" pos:end="97:65"><name pos:start="97:52" pos:end="97:56">frame</name><operator pos:start="97:57" pos:end="97:58">-&gt;</operator><name pos:start="97:59" pos:end="97:65">retcode</name></name><operator pos:start="97:66" pos:end="97:66">+</operator><literal type="number" pos:start="97:67" pos:end="97:67">1</literal><operator pos:start="97:68" pos:end="97:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:31"><expr pos:start="99:17" pos:end="99:30"><name pos:start="99:17" pos:end="99:21">val16</name> <operator pos:start="99:23" pos:end="99:23">=</operator> <literal type="number" pos:start="99:25" pos:end="99:30">0x80cd</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:58"><expr pos:start="101:9" pos:end="101:57"><call pos:start="101:9" pos:end="101:57"><name pos:start="101:9" pos:end="101:18">__put_user</name><argument_list pos:start="101:19" pos:end="101:57">(<argument pos:start="101:20" pos:end="101:24"><expr pos:start="101:20" pos:end="101:24"><name pos:start="101:20" pos:end="101:24">val16</name></expr></argument>, <argument pos:start="101:27" pos:end="101:56"><expr pos:start="101:27" pos:end="101:56"><operator pos:start="101:27" pos:end="101:27">(</operator><name pos:start="101:28" pos:end="101:35">uint16_t</name> <operator pos:start="101:37" pos:end="101:37">*</operator><operator pos:start="101:38" pos:end="101:38">)</operator><operator pos:start="101:39" pos:end="101:39">(</operator><name pos:start="101:40" pos:end="101:53"><name pos:start="101:40" pos:end="101:44">frame</name><operator pos:start="101:45" pos:end="101:46">-&gt;</operator><name pos:start="101:47" pos:end="101:53">retcode</name></name><operator pos:start="101:54" pos:end="101:54">+</operator><literal type="number" pos:start="101:55" pos:end="101:55">5</literal><operator pos:start="101:56" pos:end="101:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>



	<if_stmt pos:start="107:9" pos:end="109:34"><if pos:start="107:9" pos:end="109:34">if <condition pos:start="107:12" pos:end="107:16">(<expr pos:start="107:13" pos:end="107:15"><name pos:start="107:13" pos:end="107:15">err</name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:34"><block_content pos:start="109:17" pos:end="109:34">

		<goto pos:start="109:17" pos:end="109:34">goto <name pos:start="109:22" pos:end="109:33">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



	<comment type="block" pos:start="113:9" pos:end="113:49">/* Set up registers for signal handler */</comment>

	<expr_stmt pos:start="115:9" pos:end="115:38"><expr pos:start="115:9" pos:end="115:37"><name pos:start="115:9" pos:end="115:24"><name pos:start="115:9" pos:end="115:11">env</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:17">regs</name><index pos:start="115:18" pos:end="115:24">[<expr pos:start="115:19" pos:end="115:23"><name pos:start="115:19" pos:end="115:23">R_ESP</name></expr>]</index></name> <operator pos:start="115:26" pos:end="115:26">=</operator> <name pos:start="115:28" pos:end="115:37">frame_addr</name></expr>;</expr_stmt>

	<expr_stmt pos:start="117:9" pos:end="117:35"><expr pos:start="117:9" pos:end="117:34"><name pos:start="117:9" pos:end="117:16"><name pos:start="117:9" pos:end="117:11">env</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:16">eip</name></name> <operator pos:start="117:18" pos:end="117:18">=</operator> <name pos:start="117:20" pos:end="117:34"><name pos:start="117:20" pos:end="117:21">ka</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:34">_sa_handler</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:47"><expr pos:start="121:9" pos:end="121:46"><call pos:start="121:9" pos:end="121:46"><name pos:start="121:9" pos:end="121:24">cpu_x86_load_seg</name><argument_list pos:start="121:25" pos:end="121:46">(<argument pos:start="121:26" pos:end="121:28"><expr pos:start="121:26" pos:end="121:28"><name pos:start="121:26" pos:end="121:28">env</name></expr></argument>, <argument pos:start="121:31" pos:end="121:34"><expr pos:start="121:31" pos:end="121:34"><name pos:start="121:31" pos:end="121:34">R_DS</name></expr></argument>, <argument pos:start="121:37" pos:end="121:45"><expr pos:start="121:37" pos:end="121:45"><name pos:start="121:37" pos:end="121:45">__USER_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:47"><expr pos:start="123:9" pos:end="123:46"><call pos:start="123:9" pos:end="123:46"><name pos:start="123:9" pos:end="123:24">cpu_x86_load_seg</name><argument_list pos:start="123:25" pos:end="123:46">(<argument pos:start="123:26" pos:end="123:28"><expr pos:start="123:26" pos:end="123:28"><name pos:start="123:26" pos:end="123:28">env</name></expr></argument>, <argument pos:start="123:31" pos:end="123:34"><expr pos:start="123:31" pos:end="123:34"><name pos:start="123:31" pos:end="123:34">R_ES</name></expr></argument>, <argument pos:start="123:37" pos:end="123:45"><expr pos:start="123:37" pos:end="123:45"><name pos:start="123:37" pos:end="123:45">__USER_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:47"><expr pos:start="125:9" pos:end="125:46"><call pos:start="125:9" pos:end="125:46"><name pos:start="125:9" pos:end="125:24">cpu_x86_load_seg</name><argument_list pos:start="125:25" pos:end="125:46">(<argument pos:start="125:26" pos:end="125:28"><expr pos:start="125:26" pos:end="125:28"><name pos:start="125:26" pos:end="125:28">env</name></expr></argument>, <argument pos:start="125:31" pos:end="125:34"><expr pos:start="125:31" pos:end="125:34"><name pos:start="125:31" pos:end="125:34">R_SS</name></expr></argument>, <argument pos:start="125:37" pos:end="125:45"><expr pos:start="125:37" pos:end="125:45"><name pos:start="125:37" pos:end="125:45">__USER_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:47"><expr pos:start="127:9" pos:end="127:46"><call pos:start="127:9" pos:end="127:46"><name pos:start="127:9" pos:end="127:24">cpu_x86_load_seg</name><argument_list pos:start="127:25" pos:end="127:46">(<argument pos:start="127:26" pos:end="127:28"><expr pos:start="127:26" pos:end="127:28"><name pos:start="127:26" pos:end="127:28">env</name></expr></argument>, <argument pos:start="127:31" pos:end="127:34"><expr pos:start="127:31" pos:end="127:34"><name pos:start="127:31" pos:end="127:34">R_CS</name></expr></argument>, <argument pos:start="127:37" pos:end="127:45"><expr pos:start="127:37" pos:end="127:45"><name pos:start="127:37" pos:end="127:45">__USER_CS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="129:9" pos:end="129:32"><expr pos:start="129:9" pos:end="129:31"><name pos:start="129:9" pos:end="129:19"><name pos:start="129:9" pos:end="129:11">env</name><operator pos:start="129:12" pos:end="129:13">-&gt;</operator><name pos:start="129:14" pos:end="129:19">eflags</name></name> <operator pos:start="129:21" pos:end="129:22">&amp;=</operator> <operator pos:start="129:24" pos:end="129:24">~</operator><name pos:start="129:25" pos:end="129:31">TF_MASK</name></expr>;</expr_stmt>



	<expr_stmt pos:start="133:9" pos:end="133:49"><expr pos:start="133:9" pos:end="133:48"><call pos:start="133:9" pos:end="133:48"><name pos:start="133:9" pos:end="133:26">unlock_user_struct</name><argument_list pos:start="133:27" pos:end="133:48">(<argument pos:start="133:28" pos:end="133:32"><expr pos:start="133:28" pos:end="133:32"><name pos:start="133:28" pos:end="133:32">frame</name></expr></argument>, <argument pos:start="133:35" pos:end="133:44"><expr pos:start="133:35" pos:end="133:44"><name pos:start="133:35" pos:end="133:44">frame_addr</name></expr></argument>, <argument pos:start="133:47" pos:end="133:47"><expr pos:start="133:47" pos:end="133:47"><literal type="number" pos:start="133:47" pos:end="133:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<return pos:start="137:9" pos:end="137:15">return;</return>



<label pos:start="141:1" pos:end="141:13"><name pos:start="141:1" pos:end="141:12">give_sigsegv</name>:</label>

	<expr_stmt pos:start="143:9" pos:end="143:49"><expr pos:start="143:9" pos:end="143:48"><call pos:start="143:9" pos:end="143:48"><name pos:start="143:9" pos:end="143:26">unlock_user_struct</name><argument_list pos:start="143:27" pos:end="143:48">(<argument pos:start="143:28" pos:end="143:32"><expr pos:start="143:28" pos:end="143:32"><name pos:start="143:28" pos:end="143:32">frame</name></expr></argument>, <argument pos:start="143:35" pos:end="143:44"><expr pos:start="143:35" pos:end="143:44"><name pos:start="143:35" pos:end="143:44">frame_addr</name></expr></argument>, <argument pos:start="143:47" pos:end="143:47"><expr pos:start="143:47" pos:end="143:47"><literal type="number" pos:start="143:47" pos:end="143:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="145:9" pos:end="147:49"><if pos:start="145:9" pos:end="147:49">if <condition pos:start="145:12" pos:end="145:34">(<expr pos:start="145:13" pos:end="145:33"><name pos:start="145:13" pos:end="145:15">sig</name> <operator pos:start="145:17" pos:end="145:18">==</operator> <name pos:start="145:20" pos:end="145:33">TARGET_SIGSEGV</name></expr>)</condition><block type="pseudo" pos:start="147:17" pos:end="147:49"><block_content pos:start="147:17" pos:end="147:49">

		<expr_stmt pos:start="147:17" pos:end="147:49"><expr pos:start="147:17" pos:end="147:48"><name pos:start="147:17" pos:end="147:31"><name pos:start="147:17" pos:end="147:18">ka</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:31">_sa_handler</name></name> <operator pos:start="147:33" pos:end="147:33">=</operator> <name pos:start="147:35" pos:end="147:48">TARGET_SIG_DFL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt pos:start="149:9" pos:end="149:50"><expr pos:start="149:9" pos:end="149:49"><call pos:start="149:9" pos:end="149:49"><name pos:start="149:9" pos:end="149:17">force_sig</name><argument_list pos:start="149:18" pos:end="149:49">(<argument pos:start="149:19" pos:end="149:32"><expr pos:start="149:19" pos:end="149:32"><name pos:start="149:19" pos:end="149:32">TARGET_SIGSEGV</name></expr></argument> <comment type="block" pos:start="149:34" pos:end="149:48">/* , current */</comment>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
