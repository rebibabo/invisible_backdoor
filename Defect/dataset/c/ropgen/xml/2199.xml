<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2199.c" pos:tabs="8"><function pos:start="1:1" pos:end="271:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">vc1_decode_sequence_header</name><parameter_list pos:start="1:31" pos:end="1:87">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:67"><decl pos:start="1:55" pos:end="1:67"><type pos:start="1:55" pos:end="1:67"><name pos:start="1:55" pos:end="1:64">VC1Context</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:67">v</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:86"><decl pos:start="1:70" pos:end="1:86"><type pos:start="1:70" pos:end="1:86"><name pos:start="1:70" pos:end="1:82">GetBitContext</name> <modifier pos:start="1:84" pos:end="1:84">*</modifier></type><name pos:start="1:85" pos:end="1:86">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="271:1">{<block_content pos:start="5:5" pos:end="269:13">

    <expr_stmt pos:start="5:5" pos:end="5:68"><expr pos:start="5:5" pos:end="5:67"><call pos:start="5:5" pos:end="5:67"><name pos:start="5:5" pos:end="5:10">av_log</name><argument_list pos:start="5:11" pos:end="5:67">(<argument pos:start="5:12" pos:end="5:16"><expr pos:start="5:12" pos:end="5:16"><name pos:start="5:12" pos:end="5:16">avctx</name></expr></argument>, <argument pos:start="5:19" pos:end="5:30"><expr pos:start="5:19" pos:end="5:30"><name pos:start="5:19" pos:end="5:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="5:33" pos:end="5:47"><expr pos:start="5:33" pos:end="5:47"><literal type="string" pos:start="5:33" pos:end="5:47">"Header: %0X\n"</literal></expr></argument>, <argument pos:start="5:50" pos:end="5:66"><expr pos:start="5:50" pos:end="5:66"><call pos:start="5:50" pos:end="5:66"><name pos:start="5:50" pos:end="5:58">show_bits</name><argument_list pos:start="5:59" pos:end="5:66">(<argument pos:start="5:60" pos:end="5:61"><expr pos:start="5:60" pos:end="5:61"><name pos:start="5:60" pos:end="5:61">gb</name></expr></argument>, <argument pos:start="5:64" pos:end="5:65"><expr pos:start="5:64" pos:end="5:65"><literal type="number" pos:start="5:64" pos:end="5:65">32</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:33"><expr pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:5">v</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:14">profile</name></name> <operator pos:start="7:16" pos:end="7:16">=</operator> <call pos:start="7:18" pos:end="7:32"><name pos:start="7:18" pos:end="7:25">get_bits</name><argument_list pos:start="7:26" pos:end="7:32">(<argument pos:start="7:27" pos:end="7:28"><expr pos:start="7:27" pos:end="7:28"><name pos:start="7:27" pos:end="7:28">gb</name></expr></argument>, <argument pos:start="7:31" pos:end="7:31"><expr pos:start="7:31" pos:end="7:31"><literal type="number" pos:start="7:31" pos:end="7:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:38">(<expr pos:start="9:9" pos:end="9:37"><name pos:start="9:9" pos:end="9:18"><name pos:start="9:9" pos:end="9:9">v</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:18">profile</name></name> <operator pos:start="9:20" pos:end="9:21">==</operator> <name pos:start="9:23" pos:end="9:37">PROFILE_COMPLEX</name></expr>)</condition>

    <block pos:start="11:5" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:87">

        <expr_stmt pos:start="13:9" pos:end="13:87"><expr pos:start="13:9" pos:end="13:86"><call pos:start="13:9" pos:end="13:86"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:86">(<argument pos:start="13:16" pos:end="13:20"><expr pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:20">avctx</name></expr></argument>, <argument pos:start="13:23" pos:end="13:36"><expr pos:start="13:23" pos:end="13:36"><name pos:start="13:23" pos:end="13:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="13:39" pos:end="13:85"><expr pos:start="13:39" pos:end="13:85"><literal type="string" pos:start="13:39" pos:end="13:85">"WMV3 Complex Profile is not fully supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="61:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:39">(<expr pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:9">v</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:18">profile</name></name> <operator pos:start="19:20" pos:end="19:21">==</operator> <name pos:start="19:23" pos:end="19:38">PROFILE_ADVANCED</name></expr>)</condition>

    <block pos:start="21:5" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:49">

        <expr_stmt pos:start="23:9" pos:end="23:50"><expr pos:start="23:9" pos:end="23:49"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:9">v</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:17">zz_8x4</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:49">ff_vc1_adv_progressive_8x4_zz</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:50"><expr pos:start="25:9" pos:end="25:49"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:9">v</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:17">zz_4x8</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:49">ff_vc1_adv_progressive_4x8_zz</name></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:49">return <expr pos:start="27:16" pos:end="27:48"><call pos:start="27:16" pos:end="27:48"><name pos:start="27:16" pos:end="27:41">decode_sequence_header_adv</name><argument_list pos:start="27:42" pos:end="27:48">(<argument pos:start="27:43" pos:end="27:43"><expr pos:start="27:43" pos:end="27:43"><name pos:start="27:43" pos:end="27:43">v</name></expr></argument>, <argument pos:start="27:46" pos:end="27:47"><expr pos:start="27:46" pos:end="27:47"><name pos:start="27:46" pos:end="27:47">gb</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if>

    <else pos:start="31:5" pos:end="61:5">else

    <block pos:start="33:5" pos:end="61:5">{<block_content pos:start="35:9" pos:end="59:9">

        <expr_stmt pos:start="35:9" pos:end="35:36"><expr pos:start="35:9" pos:end="35:35"><name pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:9">v</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:17">zz_8x4</name></name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:35">wmv2_scantableA</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:36"><expr pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:9">v</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:17">zz_4x8</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <name pos:start="37:21" pos:end="37:35">wmv2_scantableB</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:38"><expr pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:9">v</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:19">res_y411</name></name>   <operator pos:start="39:23" pos:end="39:23">=</operator> <call pos:start="39:25" pos:end="39:37"><name pos:start="39:25" pos:end="39:33">get_bits1</name><argument_list pos:start="39:34" pos:end="39:37">(<argument pos:start="39:35" pos:end="39:36"><expr pos:start="39:35" pos:end="39:36"><name pos:start="39:35" pos:end="39:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:9">v</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:21">res_sprite</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <call pos:start="41:25" pos:end="41:37"><name pos:start="41:25" pos:end="41:33">get_bits1</name><argument_list pos:start="41:34" pos:end="41:37">(<argument pos:start="41:35" pos:end="41:36"><expr pos:start="41:35" pos:end="41:36"><name pos:start="41:35" pos:end="41:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="53:9"><if pos:start="43:9" pos:end="53:9">if <condition pos:start="43:12" pos:end="43:24">(<expr pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:13">v</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:23">res_y411</name></name></expr>)</condition>

        <block pos:start="45:9" pos:end="53:9">{<block_content pos:start="47:13" pos:end="51:22">

            <expr_stmt pos:start="47:13" pos:end="49:61"><expr pos:start="47:13" pos:end="49:60"><call pos:start="47:13" pos:end="49:60"><name pos:start="47:13" pos:end="47:18">av_log</name><argument_list pos:start="47:19" pos:end="49:60">(<argument pos:start="47:20" pos:end="47:24"><expr pos:start="47:20" pos:end="47:24"><name pos:start="47:20" pos:end="47:24">avctx</name></expr></argument>, <argument pos:start="47:27" pos:end="47:38"><expr pos:start="47:27" pos:end="47:38"><name pos:start="47:27" pos:end="47:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="49:20" pos:end="49:59"><expr pos:start="49:20" pos:end="49:59"><literal type="string" pos:start="49:20" pos:end="49:59">"Old interlaced mode is not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="51:13" pos:end="51:22">return <expr pos:start="51:20" pos:end="51:21"><operator pos:start="51:20" pos:end="51:20">-</operator><literal type="number" pos:start="51:21" pos:end="51:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:26">(<expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:13">v</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:25">res_sprite</name></name></expr>)</condition> <block pos:start="55:28" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:73">

            <expr_stmt pos:start="57:13" pos:end="57:73"><expr pos:start="57:13" pos:end="57:72"><call pos:start="57:13" pos:end="57:72"><name pos:start="57:13" pos:end="57:18">av_log</name><argument_list pos:start="57:19" pos:end="57:72">(<argument pos:start="57:20" pos:end="57:24"><expr pos:start="57:20" pos:end="57:24"><name pos:start="57:20" pos:end="57:24">avctx</name></expr></argument>, <argument pos:start="57:27" pos:end="57:38"><expr pos:start="57:27" pos:end="57:38"><name pos:start="57:27" pos:end="57:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:41" pos:end="57:71"><expr pos:start="57:41" pos:end="57:71"><literal type="string" pos:start="57:41" pos:end="57:71">"WMVP is not fully supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="65:5" pos:end="65:23">// (fps-2)/4 (-&gt;30)</comment>

    <expr_stmt pos:start="67:5" pos:end="67:41"><expr pos:start="67:5" pos:end="67:40"><name pos:start="67:5" pos:end="67:22"><name pos:start="67:5" pos:end="67:5">v</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:22">frmrtq_postproc</name></name> <operator pos:start="67:24" pos:end="67:24">=</operator> <call pos:start="67:26" pos:end="67:40"><name pos:start="67:26" pos:end="67:33">get_bits</name><argument_list pos:start="67:34" pos:end="67:40">(<argument pos:start="67:35" pos:end="67:36"><expr pos:start="67:35" pos:end="67:36"><name pos:start="67:35" pos:end="67:36">gb</name></expr></argument>, <argument pos:start="67:39" pos:end="67:39"><expr pos:start="67:39" pos:end="67:39"><literal type="number" pos:start="67:39" pos:end="67:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="67:43" pos:end="67:50">//common</comment>

    <comment type="line" pos:start="69:5" pos:end="69:30">// (bitrate-32kbps)/64kbps</comment>

    <expr_stmt pos:start="71:5" pos:end="71:41"><expr pos:start="71:5" pos:end="71:40"><name pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:5">v</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:22">bitrtq_postproc</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <call pos:start="71:26" pos:end="71:40"><name pos:start="71:26" pos:end="71:33">get_bits</name><argument_list pos:start="71:34" pos:end="71:40">(<argument pos:start="71:35" pos:end="71:36"><expr pos:start="71:35" pos:end="71:36"><name pos:start="71:35" pos:end="71:36">gb</name></expr></argument>, <argument pos:start="71:39" pos:end="71:39"><expr pos:start="71:39" pos:end="71:39"><literal type="number" pos:start="71:39" pos:end="71:39">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="71:43" pos:end="71:50">//common</comment>

    <expr_stmt pos:start="73:5" pos:end="73:37"><expr pos:start="73:5" pos:end="73:36"><name pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:5">v</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:8">s</name><operator pos:start="73:9" pos:end="73:9">.</operator><name pos:start="73:10" pos:end="73:20">loop_filter</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <call pos:start="73:24" pos:end="73:36"><name pos:start="73:24" pos:end="73:32">get_bits1</name><argument_list pos:start="73:33" pos:end="73:36">(<argument pos:start="73:34" pos:end="73:35"><expr pos:start="73:34" pos:end="73:35"><name pos:start="73:34" pos:end="73:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="73:39" pos:end="73:46">//common</comment>

    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="83:5">if<condition pos:start="75:7" pos:end="75:61">(<expr pos:start="75:8" pos:end="75:60"><name pos:start="75:8" pos:end="75:23"><name pos:start="75:8" pos:end="75:8">v</name><operator pos:start="75:9" pos:end="75:10">-&gt;</operator><name pos:start="75:11" pos:end="75:11">s</name><operator pos:start="75:12" pos:end="75:12">.</operator><name pos:start="75:13" pos:end="75:23">loop_filter</name></name> <operator pos:start="75:25" pos:end="75:26">==</operator> <literal type="number" pos:start="75:28" pos:end="75:28">1</literal> <operator pos:start="75:30" pos:end="75:31">&amp;&amp;</operator> <name pos:start="75:33" pos:end="75:42"><name pos:start="75:33" pos:end="75:33">v</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:42">profile</name></name> <operator pos:start="75:44" pos:end="75:45">==</operator> <name pos:start="75:47" pos:end="75:60">PROFILE_SIMPLE</name></expr>)</condition>

    <block pos:start="77:5" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:70">

        <expr_stmt pos:start="79:9" pos:end="81:70"><expr pos:start="79:9" pos:end="81:69"><call pos:start="79:9" pos:end="81:69"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="81:69">(<argument pos:start="79:16" pos:end="79:20"><expr pos:start="79:16" pos:end="79:20"><name pos:start="79:16" pos:end="79:20">avctx</name></expr></argument>, <argument pos:start="79:23" pos:end="79:34"><expr pos:start="79:23" pos:end="79:34"><name pos:start="79:23" pos:end="79:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="81:16" pos:end="81:68"><expr pos:start="81:16" pos:end="81:68"><literal type="string" pos:start="81:16" pos:end="81:68">"LOOPFILTER shall not be enabled in Simple Profile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="85:5" pos:end="87:29"><if pos:start="85:5" pos:end="87:29">if<condition pos:start="85:7" pos:end="85:53">(<expr pos:start="85:8" pos:end="85:52"><name pos:start="85:8" pos:end="85:35"><name pos:start="85:8" pos:end="85:8">v</name><operator pos:start="85:9" pos:end="85:10">-&gt;</operator><name pos:start="85:11" pos:end="85:11">s</name><operator pos:start="85:12" pos:end="85:12">.</operator><name pos:start="85:13" pos:end="85:17">avctx</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:35">skip_loop_filter</name></name> <operator pos:start="85:37" pos:end="85:38">&gt;=</operator> <name pos:start="85:40" pos:end="85:52">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:29"><block_content pos:start="87:9" pos:end="87:29">

        <expr_stmt pos:start="87:9" pos:end="87:29"><expr pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:9">v</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:12">s</name><operator pos:start="87:13" pos:end="87:13">.</operator><name pos:start="87:14" pos:end="87:24">loop_filter</name></name> <operator pos:start="87:26" pos:end="87:26">=</operator> <literal type="number" pos:start="87:28" pos:end="87:28">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:30"><expr pos:start="91:5" pos:end="91:29"><name pos:start="91:5" pos:end="91:13"><name pos:start="91:5" pos:end="91:5">v</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:13">res_x8</name></name> <operator pos:start="91:15" pos:end="91:15">=</operator> <call pos:start="91:17" pos:end="91:29"><name pos:start="91:17" pos:end="91:25">get_bits1</name><argument_list pos:start="91:26" pos:end="91:29">(<argument pos:start="91:27" pos:end="91:28"><expr pos:start="91:27" pos:end="91:28"><name pos:start="91:27" pos:end="91:28">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="91:32" pos:end="91:41">//reserved</comment>

    <expr_stmt pos:start="93:5" pos:end="93:32"><expr pos:start="93:5" pos:end="93:31"><name pos:start="93:5" pos:end="93:15"><name pos:start="93:5" pos:end="93:5">v</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:15">multires</name></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <call pos:start="93:19" pos:end="93:31"><name pos:start="93:19" pos:end="93:27">get_bits1</name><argument_list pos:start="93:28" pos:end="93:31">(<argument pos:start="93:29" pos:end="93:30"><expr pos:start="93:29" pos:end="93:30"><name pos:start="93:29" pos:end="93:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:34"><expr pos:start="95:5" pos:end="95:33"><name pos:start="95:5" pos:end="95:17"><name pos:start="95:5" pos:end="95:5">v</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:17">res_fasttx</name></name> <operator pos:start="95:19" pos:end="95:19">=</operator> <call pos:start="95:21" pos:end="95:33"><name pos:start="95:21" pos:end="95:29">get_bits1</name><argument_list pos:start="95:30" pos:end="95:33">(<argument pos:start="95:31" pos:end="95:32"><expr pos:start="95:31" pos:end="95:32"><name pos:start="95:31" pos:end="95:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="117:5"><if pos:start="97:5" pos:end="117:5">if <condition pos:start="97:8" pos:end="97:23">(<expr pos:start="97:9" pos:end="97:22"><operator pos:start="97:9" pos:end="97:9">!</operator><name pos:start="97:10" pos:end="97:22"><name pos:start="97:10" pos:end="97:10">v</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:22">res_fasttx</name></name></expr>)</condition>

    <block pos:start="99:5" pos:end="117:5">{<block_content pos:start="101:9" pos:end="115:62">

        <expr_stmt pos:start="101:9" pos:end="101:53"><expr pos:start="101:9" pos:end="101:52"><name pos:start="101:9" pos:end="101:35"><name pos:start="101:9" pos:end="101:9">v</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:17">vc1dsp</name><operator pos:start="101:18" pos:end="101:18">.</operator><name pos:start="101:19" pos:end="101:35">vc1_inv_trans_8x8</name></name> <operator pos:start="101:37" pos:end="101:37">=</operator> <name pos:start="101:39" pos:end="101:52">ff_simple_idct</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:59"><expr pos:start="103:9" pos:end="103:58"><name pos:start="103:9" pos:end="103:35"><name pos:start="103:9" pos:end="103:9">v</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:17">vc1dsp</name><operator pos:start="103:18" pos:end="103:18">.</operator><name pos:start="103:19" pos:end="103:35">vc1_inv_trans_8x4</name></name> <operator pos:start="103:37" pos:end="103:37">=</operator> <name pos:start="103:39" pos:end="103:58">ff_simple_idct84_add</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:59"><expr pos:start="105:9" pos:end="105:58"><name pos:start="105:9" pos:end="105:35"><name pos:start="105:9" pos:end="105:9">v</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:17">vc1dsp</name><operator pos:start="105:18" pos:end="105:18">.</operator><name pos:start="105:19" pos:end="105:35">vc1_inv_trans_4x8</name></name> <operator pos:start="105:37" pos:end="105:37">=</operator> <name pos:start="105:39" pos:end="105:58">ff_simple_idct48_add</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:59"><expr pos:start="107:9" pos:end="107:58"><name pos:start="107:9" pos:end="107:35"><name pos:start="107:9" pos:end="107:9">v</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:17">vc1dsp</name><operator pos:start="107:18" pos:end="107:18">.</operator><name pos:start="107:19" pos:end="107:35">vc1_inv_trans_4x4</name></name> <operator pos:start="107:37" pos:end="107:37">=</operator> <name pos:start="107:39" pos:end="107:58">ff_simple_idct44_add</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:60"><expr pos:start="109:9" pos:end="109:59"><name pos:start="109:9" pos:end="109:38"><name pos:start="109:9" pos:end="109:9">v</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:17">vc1dsp</name><operator pos:start="109:18" pos:end="109:18">.</operator><name pos:start="109:19" pos:end="109:38">vc1_inv_trans_8x8_dc</name></name> <operator pos:start="109:40" pos:end="109:40">=</operator> <name pos:start="109:42" pos:end="109:59">ff_simple_idct_add</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:62"><expr pos:start="111:9" pos:end="111:61"><name pos:start="111:9" pos:end="111:38"><name pos:start="111:9" pos:end="111:9">v</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:17">vc1dsp</name><operator pos:start="111:18" pos:end="111:18">.</operator><name pos:start="111:19" pos:end="111:38">vc1_inv_trans_8x4_dc</name></name> <operator pos:start="111:40" pos:end="111:40">=</operator> <name pos:start="111:42" pos:end="111:61">ff_simple_idct84_add</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:62"><expr pos:start="113:9" pos:end="113:61"><name pos:start="113:9" pos:end="113:38"><name pos:start="113:9" pos:end="113:9">v</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:17">vc1dsp</name><operator pos:start="113:18" pos:end="113:18">.</operator><name pos:start="113:19" pos:end="113:38">vc1_inv_trans_4x8_dc</name></name> <operator pos:start="113:40" pos:end="113:40">=</operator> <name pos:start="113:42" pos:end="113:61">ff_simple_idct48_add</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:62"><expr pos:start="115:9" pos:end="115:61"><name pos:start="115:9" pos:end="115:38"><name pos:start="115:9" pos:end="115:9">v</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:17">vc1dsp</name><operator pos:start="115:18" pos:end="115:18">.</operator><name pos:start="115:19" pos:end="115:38">vc1_inv_trans_4x4_dc</name></name> <operator pos:start="115:40" pos:end="115:40">=</operator> <name pos:start="115:42" pos:end="115:61">ff_simple_idct44_add</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:33"><expr pos:start="121:5" pos:end="121:32"><name pos:start="121:5" pos:end="121:15"><name pos:start="121:5" pos:end="121:5">v</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:15">fastuvmc</name></name> <operator pos:start="121:17" pos:end="121:17">=</operator>  <call pos:start="121:20" pos:end="121:32"><name pos:start="121:20" pos:end="121:28">get_bits1</name><argument_list pos:start="121:29" pos:end="121:32">(<argument pos:start="121:30" pos:end="121:31"><expr pos:start="121:30" pos:end="121:31"><name pos:start="121:30" pos:end="121:31">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="121:35" pos:end="121:42">//common</comment>

    <if_stmt pos:start="123:5" pos:end="133:5"><if pos:start="123:5" pos:end="133:5">if <condition pos:start="123:8" pos:end="123:36">(<expr pos:start="123:9" pos:end="123:35"><operator pos:start="123:9" pos:end="123:9">!</operator><name pos:start="123:10" pos:end="123:19"><name pos:start="123:10" pos:end="123:10">v</name><operator pos:start="123:11" pos:end="123:12">-&gt;</operator><name pos:start="123:13" pos:end="123:19">profile</name></name> <operator pos:start="123:21" pos:end="123:22">&amp;&amp;</operator> <operator pos:start="123:24" pos:end="123:24">!</operator><name pos:start="123:25" pos:end="123:35"><name pos:start="123:25" pos:end="123:25">v</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:35">fastuvmc</name></name></expr>)</condition>

    <block pos:start="125:5" pos:end="133:5">{<block_content pos:start="127:9" pos:end="131:18">

        <expr_stmt pos:start="127:9" pos:end="129:59"><expr pos:start="127:9" pos:end="129:58"><call pos:start="127:9" pos:end="129:58"><name pos:start="127:9" pos:end="127:14">av_log</name><argument_list pos:start="127:15" pos:end="129:58">(<argument pos:start="127:16" pos:end="127:20"><expr pos:start="127:16" pos:end="127:20"><name pos:start="127:16" pos:end="127:20">avctx</name></expr></argument>, <argument pos:start="127:23" pos:end="127:34"><expr pos:start="127:23" pos:end="127:34"><name pos:start="127:23" pos:end="127:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="129:16" pos:end="129:57"><expr pos:start="129:16" pos:end="129:57"><literal type="string" pos:start="129:16" pos:end="129:57">"FASTUVMC unavailable in Simple Profile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:18">return <expr pos:start="131:16" pos:end="131:17"><operator pos:start="131:16" pos:end="131:16">-</operator><literal type="number" pos:start="131:17" pos:end="131:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:36"><expr pos:start="135:5" pos:end="135:35"><name pos:start="135:5" pos:end="135:18"><name pos:start="135:5" pos:end="135:5">v</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:18">extended_mv</name></name> <operator pos:start="135:20" pos:end="135:20">=</operator>  <call pos:start="135:23" pos:end="135:35"><name pos:start="135:23" pos:end="135:31">get_bits1</name><argument_list pos:start="135:32" pos:end="135:35">(<argument pos:start="135:33" pos:end="135:34"><expr pos:start="135:33" pos:end="135:34"><name pos:start="135:33" pos:end="135:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="135:38" pos:end="135:45">//common</comment>

    <if_stmt pos:start="137:5" pos:end="147:5"><if pos:start="137:5" pos:end="147:5">if <condition pos:start="137:8" pos:end="137:38">(<expr pos:start="137:9" pos:end="137:37"><operator pos:start="137:9" pos:end="137:9">!</operator><name pos:start="137:10" pos:end="137:19"><name pos:start="137:10" pos:end="137:10">v</name><operator pos:start="137:11" pos:end="137:12">-&gt;</operator><name pos:start="137:13" pos:end="137:19">profile</name></name> <operator pos:start="137:21" pos:end="137:22">&amp;&amp;</operator> <name pos:start="137:24" pos:end="137:37"><name pos:start="137:24" pos:end="137:24">v</name><operator pos:start="137:25" pos:end="137:26">-&gt;</operator><name pos:start="137:27" pos:end="137:37">extended_mv</name></name></expr>)</condition>

    <block pos:start="139:5" pos:end="147:5">{<block_content pos:start="141:9" pos:end="145:18">

        <expr_stmt pos:start="141:9" pos:end="143:63"><expr pos:start="141:9" pos:end="143:62"><call pos:start="141:9" pos:end="143:62"><name pos:start="141:9" pos:end="141:14">av_log</name><argument_list pos:start="141:15" pos:end="143:62">(<argument pos:start="141:16" pos:end="141:20"><expr pos:start="141:16" pos:end="141:20"><name pos:start="141:16" pos:end="141:20">avctx</name></expr></argument>, <argument pos:start="141:23" pos:end="141:34"><expr pos:start="141:23" pos:end="141:34"><name pos:start="141:23" pos:end="141:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="143:16" pos:end="143:61"><expr pos:start="143:16" pos:end="143:61"><literal type="string" pos:start="143:16" pos:end="143:61">"Extended MVs unavailable in Simple Profile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="145:9" pos:end="145:18">return <expr pos:start="145:16" pos:end="145:17"><operator pos:start="145:16" pos:end="145:16">-</operator><literal type="number" pos:start="145:17" pos:end="145:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:33"><expr pos:start="149:5" pos:end="149:32"><name pos:start="149:5" pos:end="149:13"><name pos:start="149:5" pos:end="149:5">v</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:13">dquant</name></name> <operator pos:start="149:15" pos:end="149:15">=</operator>  <call pos:start="149:18" pos:end="149:32"><name pos:start="149:18" pos:end="149:25">get_bits</name><argument_list pos:start="149:26" pos:end="149:32">(<argument pos:start="149:27" pos:end="149:28"><expr pos:start="149:27" pos:end="149:28"><name pos:start="149:27" pos:end="149:28">gb</name></expr></argument>, <argument pos:start="149:31" pos:end="149:31"><expr pos:start="149:31" pos:end="149:31"><literal type="number" pos:start="149:31" pos:end="149:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="149:35" pos:end="149:42">//common</comment>

    <expr_stmt pos:start="151:5" pos:end="151:36"><expr pos:start="151:5" pos:end="151:35"><name pos:start="151:5" pos:end="151:18"><name pos:start="151:5" pos:end="151:5">v</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:18">vstransform</name></name> <operator pos:start="151:20" pos:end="151:20">=</operator>  <call pos:start="151:23" pos:end="151:35"><name pos:start="151:23" pos:end="151:31">get_bits1</name><argument_list pos:start="151:32" pos:end="151:35">(<argument pos:start="151:33" pos:end="151:34"><expr pos:start="151:33" pos:end="151:34"><name pos:start="151:33" pos:end="151:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="151:38" pos:end="151:45">//common</comment>



    <expr_stmt pos:start="155:5" pos:end="155:36"><expr pos:start="155:5" pos:end="155:35"><name pos:start="155:5" pos:end="155:19"><name pos:start="155:5" pos:end="155:5">v</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:19">res_transtab</name></name> <operator pos:start="155:21" pos:end="155:21">=</operator> <call pos:start="155:23" pos:end="155:35"><name pos:start="155:23" pos:end="155:31">get_bits1</name><argument_list pos:start="155:32" pos:end="155:35">(<argument pos:start="155:33" pos:end="155:34"><expr pos:start="155:33" pos:end="155:34"><name pos:start="155:33" pos:end="155:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="157:5" pos:end="167:5"><if pos:start="157:5" pos:end="167:5">if <condition pos:start="157:8" pos:end="157:24">(<expr pos:start="157:9" pos:end="157:23"><name pos:start="157:9" pos:end="157:23"><name pos:start="157:9" pos:end="157:9">v</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:23">res_transtab</name></name></expr>)</condition>

    <block pos:start="159:5" pos:end="167:5">{<block_content pos:start="161:9" pos:end="165:18">

        <expr_stmt pos:start="161:9" pos:end="163:61"><expr pos:start="161:9" pos:end="163:60"><call pos:start="161:9" pos:end="163:60"><name pos:start="161:9" pos:end="161:14">av_log</name><argument_list pos:start="161:15" pos:end="163:60">(<argument pos:start="161:16" pos:end="161:20"><expr pos:start="161:16" pos:end="161:20"><name pos:start="161:16" pos:end="161:20">avctx</name></expr></argument>, <argument pos:start="161:23" pos:end="161:34"><expr pos:start="161:23" pos:end="161:34"><name pos:start="161:23" pos:end="161:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="163:16" pos:end="163:59"><expr pos:start="163:16" pos:end="163:59"><literal type="string" pos:start="163:16" pos:end="163:59">"1 for reserved RES_TRANSTAB is forbidden\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="165:9" pos:end="165:18">return <expr pos:start="165:16" pos:end="165:17"><operator pos:start="165:16" pos:end="165:16">-</operator><literal type="number" pos:start="165:17" pos:end="165:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="171:5" pos:end="171:31"><expr pos:start="171:5" pos:end="171:30"><name pos:start="171:5" pos:end="171:14"><name pos:start="171:5" pos:end="171:5">v</name><operator pos:start="171:6" pos:end="171:7">-&gt;</operator><name pos:start="171:8" pos:end="171:14">overlap</name></name> <operator pos:start="171:16" pos:end="171:16">=</operator> <call pos:start="171:18" pos:end="171:30"><name pos:start="171:18" pos:end="171:26">get_bits1</name><argument_list pos:start="171:27" pos:end="171:30">(<argument pos:start="171:28" pos:end="171:29"><expr pos:start="171:28" pos:end="171:29"><name pos:start="171:28" pos:end="171:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="171:33" pos:end="171:40">//common</comment>



    <expr_stmt pos:start="175:5" pos:end="175:39"><expr pos:start="175:5" pos:end="175:38"><name pos:start="175:5" pos:end="175:22"><name pos:start="175:5" pos:end="175:5">v</name><operator pos:start="175:6" pos:end="175:7">-&gt;</operator><name pos:start="175:8" pos:end="175:8">s</name><operator pos:start="175:9" pos:end="175:9">.</operator><name pos:start="175:10" pos:end="175:22">resync_marker</name></name> <operator pos:start="175:24" pos:end="175:24">=</operator> <call pos:start="175:26" pos:end="175:38"><name pos:start="175:26" pos:end="175:34">get_bits1</name><argument_list pos:start="175:35" pos:end="175:38">(<argument pos:start="175:36" pos:end="175:37"><expr pos:start="175:36" pos:end="175:37"><name pos:start="175:36" pos:end="175:37">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:32"><expr pos:start="177:5" pos:end="177:31"><name pos:start="177:5" pos:end="177:15"><name pos:start="177:5" pos:end="177:5">v</name><operator pos:start="177:6" pos:end="177:7">-&gt;</operator><name pos:start="177:8" pos:end="177:15">rangered</name></name> <operator pos:start="177:17" pos:end="177:17">=</operator> <call pos:start="177:19" pos:end="177:31"><name pos:start="177:19" pos:end="177:27">get_bits1</name><argument_list pos:start="177:28" pos:end="177:31">(<argument pos:start="177:29" pos:end="177:30"><expr pos:start="177:29" pos:end="177:30"><name pos:start="177:29" pos:end="177:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="179:5" pos:end="187:5"><if pos:start="179:5" pos:end="187:5">if <condition pos:start="179:8" pos:end="179:52">(<expr pos:start="179:9" pos:end="179:51"><name pos:start="179:9" pos:end="179:19"><name pos:start="179:9" pos:end="179:9">v</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:19">rangered</name></name> <operator pos:start="179:21" pos:end="179:22">&amp;&amp;</operator> <name pos:start="179:24" pos:end="179:33"><name pos:start="179:24" pos:end="179:24">v</name><operator pos:start="179:25" pos:end="179:26">-&gt;</operator><name pos:start="179:27" pos:end="179:33">profile</name></name> <operator pos:start="179:35" pos:end="179:36">==</operator> <name pos:start="179:38" pos:end="179:51">PROFILE_SIMPLE</name></expr>)</condition>

    <block pos:start="181:5" pos:end="187:5">{<block_content pos:start="183:9" pos:end="185:66">

        <expr_stmt pos:start="183:9" pos:end="185:66"><expr pos:start="183:9" pos:end="185:65"><call pos:start="183:9" pos:end="185:65"><name pos:start="183:9" pos:end="183:14">av_log</name><argument_list pos:start="183:15" pos:end="185:65">(<argument pos:start="183:16" pos:end="183:20"><expr pos:start="183:16" pos:end="183:20"><name pos:start="183:16" pos:end="183:20">avctx</name></expr></argument>, <argument pos:start="183:23" pos:end="183:33"><expr pos:start="183:23" pos:end="183:33"><name pos:start="183:23" pos:end="183:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="185:16" pos:end="185:64"><expr pos:start="185:16" pos:end="185:64"><literal type="string" pos:start="185:16" pos:end="185:64">"RANGERED should be set to 0 in Simple Profile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:62"><expr pos:start="191:5" pos:end="191:61"><name pos:start="191:5" pos:end="191:21"><name pos:start="191:5" pos:end="191:5">v</name><operator pos:start="191:6" pos:end="191:7">-&gt;</operator><name pos:start="191:8" pos:end="191:8">s</name><operator pos:start="191:9" pos:end="191:9">.</operator><name pos:start="191:10" pos:end="191:21">max_b_frames</name></name> <operator pos:start="191:23" pos:end="191:23">=</operator> <name pos:start="191:25" pos:end="191:43"><name pos:start="191:25" pos:end="191:29">avctx</name><operator pos:start="191:30" pos:end="191:31">-&gt;</operator><name pos:start="191:32" pos:end="191:43">max_b_frames</name></name> <operator pos:start="191:45" pos:end="191:45">=</operator> <call pos:start="191:47" pos:end="191:61"><name pos:start="191:47" pos:end="191:54">get_bits</name><argument_list pos:start="191:55" pos:end="191:61">(<argument pos:start="191:56" pos:end="191:57"><expr pos:start="191:56" pos:end="191:57"><name pos:start="191:56" pos:end="191:57">gb</name></expr></argument>, <argument pos:start="191:60" pos:end="191:60"><expr pos:start="191:60" pos:end="191:60"><literal type="number" pos:start="191:60" pos:end="191:60">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="191:64" pos:end="191:71">//common</comment>

    <expr_stmt pos:start="193:5" pos:end="193:40"><expr pos:start="193:5" pos:end="193:39"><name pos:start="193:5" pos:end="193:21"><name pos:start="193:5" pos:end="193:5">v</name><operator pos:start="193:6" pos:end="193:7">-&gt;</operator><name pos:start="193:8" pos:end="193:21">quantizer_mode</name></name> <operator pos:start="193:23" pos:end="193:23">=</operator> <call pos:start="193:25" pos:end="193:39"><name pos:start="193:25" pos:end="193:32">get_bits</name><argument_list pos:start="193:33" pos:end="193:39">(<argument pos:start="193:34" pos:end="193:35"><expr pos:start="193:34" pos:end="193:35"><name pos:start="193:34" pos:end="193:35">gb</name></expr></argument>, <argument pos:start="193:38" pos:end="193:38"><expr pos:start="193:38" pos:end="193:38"><literal type="number" pos:start="193:38" pos:end="193:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="193:42" pos:end="193:49">//common</comment>



    <expr_stmt pos:start="197:5" pos:end="197:35"><expr pos:start="197:5" pos:end="197:34"><name pos:start="197:5" pos:end="197:18"><name pos:start="197:5" pos:end="197:5">v</name><operator pos:start="197:6" pos:end="197:7">-&gt;</operator><name pos:start="197:8" pos:end="197:18">finterpflag</name></name> <operator pos:start="197:20" pos:end="197:20">=</operator> <call pos:start="197:22" pos:end="197:34"><name pos:start="197:22" pos:end="197:30">get_bits1</name><argument_list pos:start="197:31" pos:end="197:34">(<argument pos:start="197:32" pos:end="197:33"><expr pos:start="197:32" pos:end="197:33"><name pos:start="197:32" pos:end="197:33">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="197:37" pos:end="197:44">//common</comment>



    <if_stmt pos:start="201:5" pos:end="227:5"><if pos:start="201:5" pos:end="223:5">if <condition pos:start="201:8" pos:end="201:22">(<expr pos:start="201:9" pos:end="201:21"><name pos:start="201:9" pos:end="201:21"><name pos:start="201:9" pos:end="201:9">v</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:21">res_sprite</name></name></expr>)</condition> <block pos:start="201:24" pos:end="223:5">{<block_content pos:start="203:9" pos:end="221:28">

        <expr_stmt pos:start="203:9" pos:end="203:73"><expr pos:start="203:9" pos:end="203:72"><name pos:start="203:9" pos:end="203:25"><name pos:start="203:9" pos:end="203:9">v</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:12">s</name><operator pos:start="203:13" pos:end="203:13">.</operator><name pos:start="203:14" pos:end="203:18">avctx</name><operator pos:start="203:19" pos:end="203:20">-&gt;</operator><name pos:start="203:21" pos:end="203:25">width</name></name>  <operator pos:start="203:28" pos:end="203:28">=</operator> <name pos:start="203:30" pos:end="203:52"><name pos:start="203:30" pos:end="203:30">v</name><operator pos:start="203:31" pos:end="203:32">-&gt;</operator><name pos:start="203:33" pos:end="203:33">s</name><operator pos:start="203:34" pos:end="203:34">.</operator><name pos:start="203:35" pos:end="203:39">avctx</name><operator pos:start="203:40" pos:end="203:41">-&gt;</operator><name pos:start="203:42" pos:end="203:52">coded_width</name></name>  <operator pos:start="203:55" pos:end="203:55">=</operator> <call pos:start="203:57" pos:end="203:72"><name pos:start="203:57" pos:end="203:64">get_bits</name><argument_list pos:start="203:65" pos:end="203:72">(<argument pos:start="203:66" pos:end="203:67"><expr pos:start="203:66" pos:end="203:67"><name pos:start="203:66" pos:end="203:67">gb</name></expr></argument>, <argument pos:start="203:70" pos:end="203:71"><expr pos:start="203:70" pos:end="203:71"><literal type="number" pos:start="203:70" pos:end="203:71">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:73"><expr pos:start="205:9" pos:end="205:72"><name pos:start="205:9" pos:end="205:26"><name pos:start="205:9" pos:end="205:9">v</name><operator pos:start="205:10" pos:end="205:11">-&gt;</operator><name pos:start="205:12" pos:end="205:12">s</name><operator pos:start="205:13" pos:end="205:13">.</operator><name pos:start="205:14" pos:end="205:18">avctx</name><operator pos:start="205:19" pos:end="205:20">-&gt;</operator><name pos:start="205:21" pos:end="205:26">height</name></name> <operator pos:start="205:28" pos:end="205:28">=</operator> <name pos:start="205:30" pos:end="205:53"><name pos:start="205:30" pos:end="205:30">v</name><operator pos:start="205:31" pos:end="205:32">-&gt;</operator><name pos:start="205:33" pos:end="205:33">s</name><operator pos:start="205:34" pos:end="205:34">.</operator><name pos:start="205:35" pos:end="205:39">avctx</name><operator pos:start="205:40" pos:end="205:41">-&gt;</operator><name pos:start="205:42" pos:end="205:53">coded_height</name></name> <operator pos:start="205:55" pos:end="205:55">=</operator> <call pos:start="205:57" pos:end="205:72"><name pos:start="205:57" pos:end="205:64">get_bits</name><argument_list pos:start="205:65" pos:end="205:72">(<argument pos:start="205:66" pos:end="205:67"><expr pos:start="205:66" pos:end="205:67"><name pos:start="205:66" pos:end="205:67">gb</name></expr></argument>, <argument pos:start="205:70" pos:end="205:71"><expr pos:start="205:70" pos:end="205:71"><literal type="number" pos:start="205:70" pos:end="205:71">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:25"><expr pos:start="207:9" pos:end="207:24"><call pos:start="207:9" pos:end="207:24"><name pos:start="207:9" pos:end="207:17">skip_bits</name><argument_list pos:start="207:18" pos:end="207:24">(<argument pos:start="207:19" pos:end="207:20"><expr pos:start="207:19" pos:end="207:20"><name pos:start="207:19" pos:end="207:20">gb</name></expr></argument>, <argument pos:start="207:23" pos:end="207:23"><expr pos:start="207:23" pos:end="207:23"><literal type="number" pos:start="207:23" pos:end="207:23">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="207:27" pos:end="207:38">//frame rate</comment>

        <expr_stmt pos:start="209:9" pos:end="209:34"><expr pos:start="209:9" pos:end="209:33"><name pos:start="209:9" pos:end="209:17"><name pos:start="209:9" pos:end="209:9">v</name><operator pos:start="209:10" pos:end="209:11">-&gt;</operator><name pos:start="209:12" pos:end="209:17">res_x8</name></name> <operator pos:start="209:19" pos:end="209:19">=</operator> <call pos:start="209:21" pos:end="209:33"><name pos:start="209:21" pos:end="209:29">get_bits1</name><argument_list pos:start="209:30" pos:end="209:33">(<argument pos:start="209:31" pos:end="209:32"><expr pos:start="209:31" pos:end="209:32"><name pos:start="209:31" pos:end="209:32">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="211:9" pos:end="217:9"><if pos:start="211:9" pos:end="217:9">if <condition pos:start="211:12" pos:end="211:26">(<expr pos:start="211:13" pos:end="211:25"><call pos:start="211:13" pos:end="211:25"><name pos:start="211:13" pos:end="211:21">get_bits1</name><argument_list pos:start="211:22" pos:end="211:25">(<argument pos:start="211:23" pos:end="211:24"><expr pos:start="211:23" pos:end="211:24"><name pos:start="211:23" pos:end="211:24">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="211:28" pos:end="217:9">{<block_content pos:start="213:13" pos:end="215:22"> <comment type="line" pos:start="211:30" pos:end="211:69">// something to do with DC VLC selection</comment>

            <expr_stmt pos:start="213:13" pos:end="213:72"><expr pos:start="213:13" pos:end="213:71"><call pos:start="213:13" pos:end="213:71"><name pos:start="213:13" pos:end="213:18">av_log</name><argument_list pos:start="213:19" pos:end="213:71">(<argument pos:start="213:20" pos:end="213:24"><expr pos:start="213:20" pos:end="213:24"><name pos:start="213:20" pos:end="213:24">avctx</name></expr></argument>, <argument pos:start="213:27" pos:end="213:38"><expr pos:start="213:27" pos:end="213:38"><name pos:start="213:27" pos:end="213:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="213:41" pos:end="213:70"><expr pos:start="213:41" pos:end="213:70"><literal type="string" pos:start="213:41" pos:end="213:70">"Unsupported sprite feature\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="215:13" pos:end="215:22">return <expr pos:start="215:20" pos:end="215:21"><operator pos:start="215:20" pos:end="215:20">-</operator><literal type="number" pos:start="215:21" pos:end="215:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:25"><expr pos:start="219:9" pos:end="219:24"><call pos:start="219:9" pos:end="219:24"><name pos:start="219:9" pos:end="219:17">skip_bits</name><argument_list pos:start="219:18" pos:end="219:24">(<argument pos:start="219:19" pos:end="219:20"><expr pos:start="219:19" pos:end="219:20"><name pos:start="219:19" pos:end="219:20">gb</name></expr></argument>, <argument pos:start="219:23" pos:end="219:23"><expr pos:start="219:23" pos:end="219:23"><literal type="number" pos:start="219:23" pos:end="219:23">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="219:27" pos:end="219:38">//slice code</comment>

        <expr_stmt pos:start="221:9" pos:end="221:28"><expr pos:start="221:9" pos:end="221:27"><name pos:start="221:9" pos:end="221:23"><name pos:start="221:9" pos:end="221:9">v</name><operator pos:start="221:10" pos:end="221:11">-&gt;</operator><name pos:start="221:12" pos:end="221:23">res_rtm_flag</name></name> <operator pos:start="221:25" pos:end="221:25">=</operator> <literal type="number" pos:start="221:27" pos:end="221:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="223:7" pos:end="227:5">else <block pos:start="223:12" pos:end="227:5">{<block_content pos:start="225:9" pos:end="225:40">

        <expr_stmt pos:start="225:9" pos:end="225:40"><expr pos:start="225:9" pos:end="225:39"><name pos:start="225:9" pos:end="225:23"><name pos:start="225:9" pos:end="225:9">v</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:23">res_rtm_flag</name></name> <operator pos:start="225:25" pos:end="225:25">=</operator> <call pos:start="225:27" pos:end="225:39"><name pos:start="225:27" pos:end="225:35">get_bits1</name><argument_list pos:start="225:36" pos:end="225:39">(<argument pos:start="225:37" pos:end="225:38"><expr pos:start="225:37" pos:end="225:38"><name pos:start="225:37" pos:end="225:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="225:42" pos:end="225:51">//reserved</comment>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="229:5" pos:end="243:5"><if pos:start="229:5" pos:end="243:5">if <condition pos:start="229:8" pos:end="229:25">(<expr pos:start="229:9" pos:end="229:24"><operator pos:start="229:9" pos:end="229:9">!</operator><name pos:start="229:10" pos:end="229:24"><name pos:start="229:10" pos:end="229:10">v</name><operator pos:start="229:11" pos:end="229:12">-&gt;</operator><name pos:start="229:13" pos:end="229:24">res_rtm_flag</name></name></expr>)</condition>

    <block pos:start="231:5" pos:end="243:5">{<block_content pos:start="237:9" pos:end="239:86">

<comment type="line" pos:start="233:1" pos:end="233:41">//            av_log(avctx, AV_LOG_ERROR,</comment>

<comment type="line" pos:start="235:1" pos:end="235:67">//                   "0 for reserved RES_RTM_FLAG is forbidden\n");</comment>

        <expr_stmt pos:start="237:9" pos:end="239:86"><expr pos:start="237:9" pos:end="239:85"><call pos:start="237:9" pos:end="239:85"><name pos:start="237:9" pos:end="237:14">av_log</name><argument_list pos:start="237:15" pos:end="239:85">(<argument pos:start="237:16" pos:end="237:20"><expr pos:start="237:16" pos:end="237:20"><name pos:start="237:16" pos:end="237:20">avctx</name></expr></argument>, <argument pos:start="237:23" pos:end="237:34"><expr pos:start="237:23" pos:end="237:34"><name pos:start="237:23" pos:end="237:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="239:16" pos:end="239:84"><expr pos:start="239:16" pos:end="239:84"><literal type="string" pos:start="239:16" pos:end="239:84">"Old WMV3 version detected, some frames may be decoded incorrectly\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="241:9" pos:end="241:20">//return -1;</comment>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="245:5" pos:end="245:53">//TODO: figure out what they mean (always 0x402F)</comment>

    <if_stmt pos:start="247:5" pos:end="247:41"><if pos:start="247:5" pos:end="247:41">if<condition pos:start="247:7" pos:end="247:22">(<expr pos:start="247:8" pos:end="247:21"><operator pos:start="247:8" pos:end="247:8">!</operator><name pos:start="247:9" pos:end="247:21"><name pos:start="247:9" pos:end="247:9">v</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:21">res_fasttx</name></name></expr>)</condition><block type="pseudo" pos:start="247:24" pos:end="247:41"><block_content pos:start="247:24" pos:end="247:41"> <expr_stmt pos:start="247:24" pos:end="247:41"><expr pos:start="247:24" pos:end="247:40"><call pos:start="247:24" pos:end="247:40"><name pos:start="247:24" pos:end="247:32">skip_bits</name><argument_list pos:start="247:33" pos:end="247:40">(<argument pos:start="247:34" pos:end="247:35"><expr pos:start="247:34" pos:end="247:35"><name pos:start="247:34" pos:end="247:35">gb</name></expr></argument>, <argument pos:start="247:38" pos:end="247:39"><expr pos:start="247:38" pos:end="247:39"><literal type="number" pos:start="247:38" pos:end="247:39">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="249:5" pos:end="267:17"><expr pos:start="249:5" pos:end="267:16"><call pos:start="249:5" pos:end="267:16"><name pos:start="249:5" pos:end="249:10">av_log</name><argument_list pos:start="249:11" pos:end="267:16">(<argument pos:start="249:12" pos:end="249:16"><expr pos:start="249:12" pos:end="249:16"><name pos:start="249:12" pos:end="249:16">avctx</name></expr></argument>, <argument pos:start="249:19" pos:end="249:30"><expr pos:start="249:19" pos:end="249:30"><name pos:start="249:19" pos:end="249:30">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="251:16" pos:end="257:64"><expr pos:start="251:16" pos:end="257:64"><literal type="string" pos:start="251:16" pos:end="251:70">"Profile %i:\nfrmrtq_postproc=%i, bitrtq_postproc=%i\n"</literal>

               <literal type="string" pos:start="253:16" pos:end="253:74">"LoopFilter=%i, MultiRes=%i, FastUVMC=%i, Extended MV=%i\n"</literal>

               <literal type="string" pos:start="255:16" pos:end="255:73">"Rangered=%i, VSTransform=%i, Overlap=%i, SyncMarker=%i\n"</literal>

               <literal type="string" pos:start="257:16" pos:end="257:64">"DQuant=%i, Quantizer mode=%i, Max B frames=%i\n"</literal></expr></argument>,

               <argument pos:start="259:16" pos:end="259:25"><expr pos:start="259:16" pos:end="259:25"><name pos:start="259:16" pos:end="259:25"><name pos:start="259:16" pos:end="259:16">v</name><operator pos:start="259:17" pos:end="259:18">-&gt;</operator><name pos:start="259:19" pos:end="259:25">profile</name></name></expr></argument>, <argument pos:start="259:28" pos:end="259:45"><expr pos:start="259:28" pos:end="259:45"><name pos:start="259:28" pos:end="259:45"><name pos:start="259:28" pos:end="259:28">v</name><operator pos:start="259:29" pos:end="259:30">-&gt;</operator><name pos:start="259:31" pos:end="259:45">frmrtq_postproc</name></name></expr></argument>, <argument pos:start="259:48" pos:end="259:65"><expr pos:start="259:48" pos:end="259:65"><name pos:start="259:48" pos:end="259:65"><name pos:start="259:48" pos:end="259:48">v</name><operator pos:start="259:49" pos:end="259:50">-&gt;</operator><name pos:start="259:51" pos:end="259:65">bitrtq_postproc</name></name></expr></argument>,

               <argument pos:start="261:16" pos:end="261:31"><expr pos:start="261:16" pos:end="261:31"><name pos:start="261:16" pos:end="261:31"><name pos:start="261:16" pos:end="261:16">v</name><operator pos:start="261:17" pos:end="261:18">-&gt;</operator><name pos:start="261:19" pos:end="261:19">s</name><operator pos:start="261:20" pos:end="261:20">.</operator><name pos:start="261:21" pos:end="261:31">loop_filter</name></name></expr></argument>, <argument pos:start="261:34" pos:end="261:44"><expr pos:start="261:34" pos:end="261:44"><name pos:start="261:34" pos:end="261:44"><name pos:start="261:34" pos:end="261:34">v</name><operator pos:start="261:35" pos:end="261:36">-&gt;</operator><name pos:start="261:37" pos:end="261:44">multires</name></name></expr></argument>, <argument pos:start="261:47" pos:end="261:57"><expr pos:start="261:47" pos:end="261:57"><name pos:start="261:47" pos:end="261:57"><name pos:start="261:47" pos:end="261:47">v</name><operator pos:start="261:48" pos:end="261:49">-&gt;</operator><name pos:start="261:50" pos:end="261:57">fastuvmc</name></name></expr></argument>, <argument pos:start="261:60" pos:end="261:73"><expr pos:start="261:60" pos:end="261:73"><name pos:start="261:60" pos:end="261:73"><name pos:start="261:60" pos:end="261:60">v</name><operator pos:start="261:61" pos:end="261:62">-&gt;</operator><name pos:start="261:63" pos:end="261:73">extended_mv</name></name></expr></argument>,

               <argument pos:start="263:16" pos:end="263:26"><expr pos:start="263:16" pos:end="263:26"><name pos:start="263:16" pos:end="263:26"><name pos:start="263:16" pos:end="263:16">v</name><operator pos:start="263:17" pos:end="263:18">-&gt;</operator><name pos:start="263:19" pos:end="263:26">rangered</name></name></expr></argument>, <argument pos:start="263:29" pos:end="263:42"><expr pos:start="263:29" pos:end="263:42"><name pos:start="263:29" pos:end="263:42"><name pos:start="263:29" pos:end="263:29">v</name><operator pos:start="263:30" pos:end="263:31">-&gt;</operator><name pos:start="263:32" pos:end="263:42">vstransform</name></name></expr></argument>, <argument pos:start="263:45" pos:end="263:54"><expr pos:start="263:45" pos:end="263:54"><name pos:start="263:45" pos:end="263:54"><name pos:start="263:45" pos:end="263:45">v</name><operator pos:start="263:46" pos:end="263:47">-&gt;</operator><name pos:start="263:48" pos:end="263:54">overlap</name></name></expr></argument>, <argument pos:start="263:57" pos:end="263:74"><expr pos:start="263:57" pos:end="263:74"><name pos:start="263:57" pos:end="263:74"><name pos:start="263:57" pos:end="263:57">v</name><operator pos:start="263:58" pos:end="263:59">-&gt;</operator><name pos:start="263:60" pos:end="263:60">s</name><operator pos:start="263:61" pos:end="263:61">.</operator><name pos:start="263:62" pos:end="263:74">resync_marker</name></name></expr></argument>,

               <argument pos:start="265:16" pos:end="265:24"><expr pos:start="265:16" pos:end="265:24"><name pos:start="265:16" pos:end="265:24"><name pos:start="265:16" pos:end="265:16">v</name><operator pos:start="265:17" pos:end="265:18">-&gt;</operator><name pos:start="265:19" pos:end="265:24">dquant</name></name></expr></argument>, <argument pos:start="265:27" pos:end="265:43"><expr pos:start="265:27" pos:end="265:43"><name pos:start="265:27" pos:end="265:43"><name pos:start="265:27" pos:end="265:27">v</name><operator pos:start="265:28" pos:end="265:29">-&gt;</operator><name pos:start="265:30" pos:end="265:43">quantizer_mode</name></name></expr></argument>, <argument pos:start="265:46" pos:end="265:64"><expr pos:start="265:46" pos:end="265:64"><name pos:start="265:46" pos:end="265:64"><name pos:start="265:46" pos:end="265:50">avctx</name><operator pos:start="265:51" pos:end="265:52">-&gt;</operator><name pos:start="265:53" pos:end="265:64">max_b_frames</name></name></expr></argument>

               )</argument_list></call></expr>;</expr_stmt>

    <return pos:start="269:5" pos:end="269:13">return <expr pos:start="269:12" pos:end="269:12"><literal type="number" pos:start="269:12" pos:end="269:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
