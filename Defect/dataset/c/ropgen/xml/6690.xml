<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6690.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">tgq_decode_mb</name><parameter_list pos:start="1:25" pos:end="1:75">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">TgqContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:47">AVFrame</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">frame</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:64"><decl pos:start="1:57" pos:end="1:64"><type pos:start="1:57" pos:end="1:64"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:64">mb_y</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:74"><decl pos:start="1:67" pos:end="1:74"><type pos:start="1:67" pos:end="1:74"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:74">mb_x</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">int8_t</name></type> <name pos:start="9:12" pos:end="9:16"><name pos:start="9:12" pos:end="9:13">dc</name><index pos:start="9:14" pos:end="9:16">[<expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">6</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:8">mode</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:39"><name pos:start="13:12" pos:end="13:31">bytestream2_get_byte</name><argument_list pos:start="13:32" pos:end="13:39">(<argument pos:start="13:33" pos:end="13:38"><expr pos:start="13:33" pos:end="13:38"><operator pos:start="13:33" pos:end="13:33">&amp;</operator><name pos:start="13:34" pos:end="13:38"><name pos:start="13:34" pos:end="13:34">s</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="63:5"><if pos:start="15:5" pos:end="29:5">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:12">mode</name> <operator pos:start="15:14" pos:end="15:14">&gt;</operator> <literal type="number" pos:start="15:16" pos:end="15:17">12</literal></expr>)</condition> <block pos:start="15:20" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:39">

        <decl_stmt pos:start="17:9" pos:end="17:25"><decl pos:start="17:9" pos:end="17:24"><type pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:21">GetBitContext</name></type> <name pos:start="17:23" pos:end="17:24">gb</name></decl>;</decl_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:91"><expr pos:start="19:9" pos:end="19:90"><call pos:start="19:9" pos:end="19:90"><name pos:start="19:9" pos:end="19:22">init_get_bits8</name><argument_list pos:start="19:23" pos:end="19:90">(<argument pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:26">gb</name></expr></argument>, <argument pos:start="19:29" pos:end="19:40"><expr pos:start="19:29" pos:end="19:40"><name pos:start="19:29" pos:end="19:40"><name pos:start="19:29" pos:end="19:29">s</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:33">gb</name><operator pos:start="19:34" pos:end="19:34">.</operator><name pos:start="19:35" pos:end="19:40">buffer</name></name></expr></argument>, <argument pos:start="19:43" pos:end="19:89"><expr pos:start="19:43" pos:end="19:89"><call pos:start="19:43" pos:end="19:89"><name pos:start="19:43" pos:end="19:47">FFMIN</name><argument_list pos:start="19:48" pos:end="19:89">(<argument pos:start="19:49" pos:end="19:82"><expr pos:start="19:49" pos:end="19:82"><call pos:start="19:49" pos:end="19:82"><name pos:start="19:49" pos:end="19:74">bytestream2_get_bytes_left</name><argument_list pos:start="19:75" pos:end="19:82">(<argument pos:start="19:76" pos:end="19:81"><expr pos:start="19:76" pos:end="19:81"><operator pos:start="19:76" pos:end="19:76">&amp;</operator><name pos:start="19:77" pos:end="19:81"><name pos:start="19:77" pos:end="19:77">s</name><operator pos:start="19:78" pos:end="19:79">-&gt;</operator><name pos:start="19:80" pos:end="19:81">gb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:85" pos:end="19:88"><expr pos:start="19:85" pos:end="19:88"><name pos:start="19:85" pos:end="19:88">mode</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="21:9" pos:end="23:50">for <control pos:start="21:13" pos:end="21:31">(<init pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:18"><name pos:start="21:14" pos:end="21:14">i</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</init> <condition pos:start="21:21" pos:end="21:26"><expr pos:start="21:21" pos:end="21:25"><name pos:start="21:21" pos:end="21:21">i</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <literal type="number" pos:start="21:25" pos:end="21:25">6</literal></expr>;</condition> <incr pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:28">i</name><operator pos:start="21:29" pos:end="21:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:13" pos:end="23:50"><block_content pos:start="23:13" pos:end="23:50">

            <expr_stmt pos:start="23:13" pos:end="23:50"><expr pos:start="23:13" pos:end="23:49"><call pos:start="23:13" pos:end="23:49"><name pos:start="23:13" pos:end="23:28">tgq_decode_block</name><argument_list pos:start="23:29" pos:end="23:49">(<argument pos:start="23:30" pos:end="23:30"><expr pos:start="23:30" pos:end="23:30"><name pos:start="23:30" pos:end="23:30">s</name></expr></argument>, <argument pos:start="23:33" pos:end="23:43"><expr pos:start="23:33" pos:end="23:43"><name pos:start="23:33" pos:end="23:43"><name pos:start="23:33" pos:end="23:33">s</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:40">block</name><index pos:start="23:41" pos:end="23:43">[<expr pos:start="23:42" pos:end="23:42"><name pos:start="23:42" pos:end="23:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="23:46" pos:end="23:48"><expr pos:start="23:46" pos:end="23:48"><operator pos:start="23:46" pos:end="23:46">&amp;</operator><name pos:start="23:47" pos:end="23:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="25:9" pos:end="25:56"><expr pos:start="25:9" pos:end="25:55"><call pos:start="25:9" pos:end="25:55"><name pos:start="25:9" pos:end="25:23">tgq_idct_put_mb</name><argument_list pos:start="25:24" pos:end="25:55">(<argument pos:start="25:25" pos:end="25:25"><expr pos:start="25:25" pos:end="25:25"><name pos:start="25:25" pos:end="25:25">s</name></expr></argument>, <argument pos:start="25:28" pos:end="25:35"><expr pos:start="25:28" pos:end="25:35"><name pos:start="25:28" pos:end="25:35"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:35">block</name></name></expr></argument>, <argument pos:start="25:38" pos:end="25:42"><expr pos:start="25:38" pos:end="25:42"><name pos:start="25:38" pos:end="25:42">frame</name></expr></argument>, <argument pos:start="25:45" pos:end="25:48"><expr pos:start="25:45" pos:end="25:48"><name pos:start="25:45" pos:end="25:48">mb_x</name></expr></argument>, <argument pos:start="25:51" pos:end="25:54"><expr pos:start="25:51" pos:end="25:54"><name pos:start="25:51" pos:end="25:54">mb_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:39"><expr pos:start="27:9" pos:end="27:38"><call pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:24">bytestream2_skip</name><argument_list pos:start="27:25" pos:end="27:38">(<argument pos:start="27:26" pos:end="27:31"><expr pos:start="27:26" pos:end="27:31"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:31"><name pos:start="27:27" pos:end="27:27">s</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:31">gb</name></name></expr></argument>, <argument pos:start="27:34" pos:end="27:37"><expr pos:start="27:34" pos:end="27:37"><name pos:start="27:34" pos:end="27:37">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="63:5">else <block pos:start="29:12" pos:end="63:5">{<block_content pos:start="31:9" pos:end="61:57">

        <if_stmt pos:start="31:9" pos:end="59:9"><if pos:start="31:9" pos:end="39:9">if <condition pos:start="31:12" pos:end="31:22">(<expr pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:16">mode</name> <operator pos:start="31:18" pos:end="31:19">==</operator> <literal type="number" pos:start="31:21" pos:end="31:21">3</literal></expr>)</condition> <block pos:start="31:24" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:49">

            <expr_stmt pos:start="33:13" pos:end="33:56"><expr pos:start="33:13" pos:end="33:55"><call pos:start="33:13" pos:end="33:55"><name pos:start="33:13" pos:end="33:18">memset</name><argument_list pos:start="33:19" pos:end="33:55">(<argument pos:start="33:20" pos:end="33:21"><expr pos:start="33:20" pos:end="33:21"><name pos:start="33:20" pos:end="33:21">dc</name></expr></argument>, <argument pos:start="33:24" pos:end="33:51"><expr pos:start="33:24" pos:end="33:51"><call pos:start="33:24" pos:end="33:51"><name pos:start="33:24" pos:end="33:43">bytestream2_get_byte</name><argument_list pos:start="33:44" pos:end="33:51">(<argument pos:start="33:45" pos:end="33:50"><expr pos:start="33:45" pos:end="33:50"><operator pos:start="33:45" pos:end="33:45">&amp;</operator><name pos:start="33:46" pos:end="33:50"><name pos:start="33:46" pos:end="33:46">s</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:50">gb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:54" pos:end="33:54"><expr pos:start="33:54" pos:end="33:54"><literal type="number" pos:start="33:54" pos:end="33:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:49"><expr pos:start="35:13" pos:end="35:48"><name pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:14">dc</name><index pos:start="35:15" pos:end="35:17">[<expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">4</literal></expr>]</index></name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:48"><name pos:start="35:21" pos:end="35:40">bytestream2_get_byte</name><argument_list pos:start="35:41" pos:end="35:48">(<argument pos:start="35:42" pos:end="35:47"><expr pos:start="35:42" pos:end="35:47"><operator pos:start="35:42" pos:end="35:42">&amp;</operator><name pos:start="35:43" pos:end="35:47"><name pos:start="35:43" pos:end="35:43">s</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:49"><expr pos:start="37:13" pos:end="37:48"><name pos:start="37:13" pos:end="37:17"><name pos:start="37:13" pos:end="37:14">dc</name><index pos:start="37:15" pos:end="37:17">[<expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">5</literal></expr>]</index></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:48"><name pos:start="37:21" pos:end="37:40">bytestream2_get_byte</name><argument_list pos:start="37:41" pos:end="37:48">(<argument pos:start="37:42" pos:end="37:47"><expr pos:start="37:42" pos:end="37:47"><operator pos:start="37:42" pos:end="37:42">&amp;</operator><name pos:start="37:43" pos:end="37:47"><name pos:start="37:43" pos:end="37:43">s</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="39:11" pos:end="43:9">else if <condition pos:start="39:19" pos:end="39:29">(<expr pos:start="39:20" pos:end="39:28"><name pos:start="39:20" pos:end="39:23">mode</name> <operator pos:start="39:25" pos:end="39:26">==</operator> <literal type="number" pos:start="39:28" pos:end="39:28">6</literal></expr>)</condition> <block pos:start="39:31" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:50">

            <expr_stmt pos:start="41:13" pos:end="41:50"><expr pos:start="41:13" pos:end="41:49"><call pos:start="41:13" pos:end="41:49"><name pos:start="41:13" pos:end="41:34">bytestream2_get_buffer</name><argument_list pos:start="41:35" pos:end="41:49">(<argument pos:start="41:36" pos:end="41:41"><expr pos:start="41:36" pos:end="41:41"><operator pos:start="41:36" pos:end="41:36">&amp;</operator><name pos:start="41:37" pos:end="41:41"><name pos:start="41:37" pos:end="41:37">s</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:41">gb</name></name></expr></argument>, <argument pos:start="41:44" pos:end="41:45"><expr pos:start="41:44" pos:end="41:45"><name pos:start="41:44" pos:end="41:45">dc</name></expr></argument>, <argument pos:start="41:48" pos:end="41:48"><expr pos:start="41:48" pos:end="41:48"><literal type="number" pos:start="41:48" pos:end="41:48">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="43:11" pos:end="53:9">else if <condition pos:start="43:19" pos:end="43:30">(<expr pos:start="43:20" pos:end="43:29"><name pos:start="43:20" pos:end="43:23">mode</name> <operator pos:start="43:25" pos:end="43:26">==</operator> <literal type="number" pos:start="43:28" pos:end="43:29">12</literal></expr>)</condition> <block pos:start="43:32" pos:end="53:9">{<block_content pos:start="45:13" pos:end="51:13">

            <for pos:start="45:13" pos:end="51:13">for <control pos:start="45:17" pos:end="45:35">(<init pos:start="45:18" pos:end="45:23"><expr pos:start="45:18" pos:end="45:22"><name pos:start="45:18" pos:end="45:18">i</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>;</init> <condition pos:start="45:25" pos:end="45:30"><expr pos:start="45:25" pos:end="45:29"><name pos:start="45:25" pos:end="45:25">i</name> <operator pos:start="45:27" pos:end="45:27">&lt;</operator> <literal type="number" pos:start="45:29" pos:end="45:29">6</literal></expr>;</condition> <incr pos:start="45:32" pos:end="45:34"><expr pos:start="45:32" pos:end="45:34"><name pos:start="45:32" pos:end="45:32">i</name><operator pos:start="45:33" pos:end="45:34">++</operator></expr></incr>)</control> <block pos:start="45:37" pos:end="51:13">{<block_content pos:start="47:17" pos:end="49:44">

                <expr_stmt pos:start="47:17" pos:end="47:53"><expr pos:start="47:17" pos:end="47:52"><name pos:start="47:17" pos:end="47:21"><name pos:start="47:17" pos:end="47:18">dc</name><index pos:start="47:19" pos:end="47:21">[<expr pos:start="47:20" pos:end="47:20"><name pos:start="47:20" pos:end="47:20">i</name></expr>]</index></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <call pos:start="47:25" pos:end="47:52"><name pos:start="47:25" pos:end="47:44">bytestream2_get_byte</name><argument_list pos:start="47:45" pos:end="47:52">(<argument pos:start="47:46" pos:end="47:51"><expr pos:start="47:46" pos:end="47:51"><operator pos:start="47:46" pos:end="47:46">&amp;</operator><name pos:start="47:47" pos:end="47:51"><name pos:start="47:47" pos:end="47:47">s</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:51">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:44"><expr pos:start="49:17" pos:end="49:43"><call pos:start="49:17" pos:end="49:43"><name pos:start="49:17" pos:end="49:32">bytestream2_skip</name><argument_list pos:start="49:33" pos:end="49:43">(<argument pos:start="49:34" pos:end="49:39"><expr pos:start="49:34" pos:end="49:39"><operator pos:start="49:34" pos:end="49:34">&amp;</operator><name pos:start="49:35" pos:end="49:39"><name pos:start="49:35" pos:end="49:35">s</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:39">gb</name></name></expr></argument>, <argument pos:start="49:42" pos:end="49:42"><expr pos:start="49:42" pos:end="49:42"><literal type="number" pos:start="49:42" pos:end="49:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="59:9">else <block pos:start="53:16" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:22">

            <expr_stmt pos:start="55:13" pos:end="55:77"><expr pos:start="55:13" pos:end="55:76"><call pos:start="55:13" pos:end="55:76"><name pos:start="55:13" pos:end="55:18">av_log</name><argument_list pos:start="55:19" pos:end="55:76">(<argument pos:start="55:20" pos:end="55:27"><expr pos:start="55:20" pos:end="55:27"><name pos:start="55:20" pos:end="55:27"><name pos:start="55:20" pos:end="55:20">s</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:27">avctx</name></name></expr></argument>, <argument pos:start="55:30" pos:end="55:41"><expr pos:start="55:30" pos:end="55:41"><name pos:start="55:30" pos:end="55:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:44" pos:end="55:69"><expr pos:start="55:44" pos:end="55:69"><literal type="string" pos:start="55:44" pos:end="55:69">"unsupported mb mode %i\n"</literal></expr></argument>, <argument pos:start="55:72" pos:end="55:75"><expr pos:start="55:72" pos:end="55:75"><name pos:start="55:72" pos:end="55:75">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="57:13" pos:end="57:22">return <expr pos:start="57:20" pos:end="57:21"><operator pos:start="57:20" pos:end="57:20">-</operator><literal type="number" pos:start="57:21" pos:end="57:21">1</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:57"><expr pos:start="61:9" pos:end="61:56"><call pos:start="61:9" pos:end="61:56"><name pos:start="61:9" pos:end="61:30">tgq_idct_put_mb_dconly</name><argument_list pos:start="61:31" pos:end="61:56">(<argument pos:start="61:32" pos:end="61:32"><expr pos:start="61:32" pos:end="61:32"><name pos:start="61:32" pos:end="61:32">s</name></expr></argument>, <argument pos:start="61:35" pos:end="61:39"><expr pos:start="61:35" pos:end="61:39"><name pos:start="61:35" pos:end="61:39">frame</name></expr></argument>, <argument pos:start="61:42" pos:end="61:45"><expr pos:start="61:42" pos:end="61:45"><name pos:start="61:42" pos:end="61:45">mb_x</name></expr></argument>, <argument pos:start="61:48" pos:end="61:51"><expr pos:start="61:48" pos:end="61:51"><name pos:start="61:48" pos:end="61:51">mb_y</name></expr></argument>, <argument pos:start="61:54" pos:end="61:55"><expr pos:start="61:54" pos:end="61:55"><name pos:start="61:54" pos:end="61:55">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
