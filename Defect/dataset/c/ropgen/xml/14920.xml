<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14920.c" pos:tabs="8"><function pos:start="1:1" pos:end="763:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">TCGArg</name> <modifier pos:start="1:15" pos:end="1:15">*</modifier></type><name pos:start="1:16" pos:end="1:35">tcg_constant_folding</name><parameter_list pos:start="1:36" pos:end="3:72">(<parameter pos:start="1:37" pos:end="1:49"><decl pos:start="1:37" pos:end="1:49"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:46">TCGContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:72"><decl pos:start="1:52" pos:end="1:72"><type pos:start="1:52" pos:end="1:72"><name pos:start="1:52" pos:end="1:59">uint16_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:72">tcg_opc_ptr</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:48"><decl pos:start="3:37" pos:end="3:48"><type pos:start="3:37" pos:end="3:48"><name pos:start="3:37" pos:end="3:42">TCGArg</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:48">args</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:71"><decl pos:start="3:51" pos:end="3:71"><type pos:start="3:51" pos:end="3:71"><name pos:start="3:51" pos:end="3:58">TCGOpDef</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:71">tcg_op_defs</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="763:1">{<block_content pos:start="7:5" pos:end="761:20">

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:17">nb_ops</name></decl>, <decl pos:start="7:20" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:27">op_index</name></decl>, <decl pos:start="7:30" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:30" pos:end="7:37">nb_temps</name></decl>, <decl pos:start="7:40" pos:end="7:49"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:40" pos:end="7:49">nb_globals</name></decl>, <decl pos:start="7:52" pos:end="7:63"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:52" pos:end="7:63">nb_call_args</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">TCGOpcode</name></type> <name pos:start="9:15" pos:end="9:16">op</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:20"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">TCGOpDef</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">def</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:10">TCGArg</name> <modifier pos:start="13:12" pos:end="13:12">*</modifier></type><name pos:start="13:13" pos:end="13:20">gen_args</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">TCGArg</name></type> <name pos:start="15:12" pos:end="15:14">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">TCGCond</name></type> <name pos:start="17:13" pos:end="17:16">cond</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="31:28">/* Array VALS has an element for each temp.

       If this temp holds a constant then its value is kept in VALS' element.

       If this temp is a copy of other ones then this equivalence class'

       representative is kept in VALS' element.

       If this temp is neither copy nor constant then corresponding VALS'

       element is unused. */</comment>



    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:12">nb_temps</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:26"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:26">nb_temps</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:31"><expr pos:start="37:5" pos:end="37:30"><name pos:start="37:5" pos:end="37:14">nb_globals</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:30"><name pos:start="37:18" pos:end="37:18">s</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:30">nb_globals</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:62"><expr pos:start="39:5" pos:end="39:61"><call pos:start="39:5" pos:end="39:61"><name pos:start="39:5" pos:end="39:10">memset</name><argument_list pos:start="39:11" pos:end="39:61">(<argument pos:start="39:12" pos:end="39:16"><expr pos:start="39:12" pos:end="39:16"><name pos:start="39:12" pos:end="39:16">temps</name></expr></argument>, <argument pos:start="39:19" pos:end="39:19"><expr pos:start="39:19" pos:end="39:19"><literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr></argument>, <argument pos:start="39:22" pos:end="39:60"><expr pos:start="39:22" pos:end="39:60"><name pos:start="39:22" pos:end="39:29">nb_temps</name> <operator pos:start="39:31" pos:end="39:31">*</operator> <sizeof pos:start="39:33" pos:end="39:60">sizeof<argument_list pos:start="39:39" pos:end="39:60">(<argument pos:start="39:40" pos:end="39:59"><expr pos:start="39:40" pos:end="39:59">struct <name pos:start="39:47" pos:end="39:59">tcg_temp_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:39"><expr pos:start="43:5" pos:end="43:38"><name pos:start="43:5" pos:end="43:10">nb_ops</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <name pos:start="43:14" pos:end="43:24">tcg_opc_ptr</name> <operator pos:start="43:26" pos:end="43:26">-</operator> <name pos:start="43:28" pos:end="43:38">gen_opc_buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:20"><expr pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:12">gen_args</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:19">args</name></expr>;</expr_stmt>

    <for pos:start="47:5" pos:end="757:5">for <control pos:start="47:9" pos:end="47:53">(<init pos:start="47:10" pos:end="47:22"><expr pos:start="47:10" pos:end="47:21"><name pos:start="47:10" pos:end="47:17">op_index</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr>;</init> <condition pos:start="47:24" pos:end="47:41"><expr pos:start="47:24" pos:end="47:40"><name pos:start="47:24" pos:end="47:31">op_index</name> <operator pos:start="47:33" pos:end="47:33">&lt;</operator> <name pos:start="47:35" pos:end="47:40">nb_ops</name></expr>;</condition> <incr pos:start="47:43" pos:end="47:52"><expr pos:start="47:43" pos:end="47:52"><name pos:start="47:43" pos:end="47:50">op_index</name><operator pos:start="47:51" pos:end="47:52">++</operator></expr></incr>)</control> <block pos:start="47:55" pos:end="757:5">{<block_content pos:start="49:9" pos:end="755:9">

        <expr_stmt pos:start="49:9" pos:end="49:35"><expr pos:start="49:9" pos:end="49:34"><name pos:start="49:9" pos:end="49:10">op</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <name pos:start="49:14" pos:end="49:34"><name pos:start="49:14" pos:end="49:24">gen_opc_buf</name><index pos:start="49:25" pos:end="49:34">[<expr pos:start="49:26" pos:end="49:33"><name pos:start="49:26" pos:end="49:33">op_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:11">def</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <operator pos:start="51:15" pos:end="51:15">&amp;</operator><name pos:start="51:16" pos:end="51:30"><name pos:start="51:16" pos:end="51:26">tcg_op_defs</name><index pos:start="51:27" pos:end="51:30">[<expr pos:start="51:28" pos:end="51:29"><name pos:start="51:28" pos:end="51:29">op</name></expr>]</index></name></expr>;</expr_stmt>

        <comment type="block" pos:start="53:9" pos:end="53:33">/* Do copy propagation */</comment>

        <if_stmt pos:start="55:9" pos:end="69:9"><if pos:start="55:9" pos:end="69:9">if <condition pos:start="55:12" pos:end="55:74">(<expr pos:start="55:13" pos:end="55:73"><operator pos:start="55:13" pos:end="55:13">!</operator><operator pos:start="55:14" pos:end="55:14">(</operator><name pos:start="55:15" pos:end="55:24"><name pos:start="55:15" pos:end="55:17">def</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:24">flags</name></name> <operator pos:start="55:26" pos:end="55:26">&amp;</operator> <operator pos:start="55:28" pos:end="55:28">(</operator><name pos:start="55:29" pos:end="55:48">TCG_OPF_CALL_CLOBBER</name> <operator pos:start="55:50" pos:end="55:50">|</operator> <name pos:start="55:52" pos:end="55:71">TCG_OPF_SIDE_EFFECTS</name><operator pos:start="55:72" pos:end="55:72">)</operator><operator pos:start="55:73" pos:end="55:73">)</operator></expr>)</condition> <block pos:start="55:76" pos:end="69:9">{<block_content pos:start="57:13" pos:end="67:13">

            <expr_stmt pos:start="57:13" pos:end="57:40"><expr pos:start="57:13" pos:end="57:39"><call pos:start="57:13" pos:end="57:39"><name pos:start="57:13" pos:end="57:18">assert</name><argument_list pos:start="57:19" pos:end="57:39">(<argument pos:start="57:20" pos:end="57:38"><expr pos:start="57:20" pos:end="57:38"><name pos:start="57:20" pos:end="57:21">op</name> <operator pos:start="57:23" pos:end="57:24">!=</operator> <name pos:start="57:26" pos:end="57:38">INDEX_op_call</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="59:13" pos:end="67:13">for <control pos:start="59:17" pos:end="59:75">(<init pos:start="59:18" pos:end="59:35"><expr pos:start="59:18" pos:end="59:34"><name pos:start="59:18" pos:end="59:18">i</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:34"><name pos:start="59:22" pos:end="59:24">def</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:34">nb_oargs</name></name></expr>;</init> <condition pos:start="59:37" pos:end="59:70"><expr pos:start="59:37" pos:end="59:69"><name pos:start="59:37" pos:end="59:37">i</name> <operator pos:start="59:39" pos:end="59:39">&lt;</operator> <name pos:start="59:41" pos:end="59:53"><name pos:start="59:41" pos:end="59:43">def</name><operator pos:start="59:44" pos:end="59:45">-&gt;</operator><name pos:start="59:46" pos:end="59:53">nb_oargs</name></name> <operator pos:start="59:55" pos:end="59:55">+</operator> <name pos:start="59:57" pos:end="59:69"><name pos:start="59:57" pos:end="59:59">def</name><operator pos:start="59:60" pos:end="59:61">-&gt;</operator><name pos:start="59:62" pos:end="59:69">nb_iargs</name></name></expr>;</condition> <incr pos:start="59:72" pos:end="59:74"><expr pos:start="59:72" pos:end="59:74"><name pos:start="59:72" pos:end="59:72">i</name><operator pos:start="59:73" pos:end="59:74">++</operator></expr></incr>)</control> <block pos:start="59:77" pos:end="67:13">{<block_content pos:start="61:17" pos:end="65:17">

                <if_stmt pos:start="61:17" pos:end="65:17"><if pos:start="61:17" pos:end="65:17">if <condition pos:start="61:20" pos:end="61:58">(<expr pos:start="61:21" pos:end="61:57"><name pos:start="61:21" pos:end="61:34"><name pos:start="61:21" pos:end="61:25">temps</name><index pos:start="61:26" pos:end="61:34">[<expr pos:start="61:27" pos:end="61:33"><name pos:start="61:27" pos:end="61:33"><name pos:start="61:27" pos:end="61:30">args</name><index pos:start="61:31" pos:end="61:33">[<expr pos:start="61:32" pos:end="61:32"><name pos:start="61:32" pos:end="61:32">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="61:35" pos:end="61:35">.</operator><name pos:start="61:36" pos:end="61:40">state</name> <operator pos:start="61:42" pos:end="61:43">==</operator> <name pos:start="61:45" pos:end="61:57">TCG_TEMP_COPY</name></expr>)</condition> <block pos:start="61:60" pos:end="65:17">{<block_content pos:start="63:21" pos:end="63:49">

                    <expr_stmt pos:start="63:21" pos:end="63:49"><expr pos:start="63:21" pos:end="63:48"><name pos:start="63:21" pos:end="63:27"><name pos:start="63:21" pos:end="63:24">args</name><index pos:start="63:25" pos:end="63:27">[<expr pos:start="63:26" pos:end="63:26"><name pos:start="63:26" pos:end="63:26">i</name></expr>]</index></name> <operator pos:start="63:29" pos:end="63:29">=</operator> <name pos:start="63:31" pos:end="63:44"><name pos:start="63:31" pos:end="63:35">temps</name><index pos:start="63:36" pos:end="63:44">[<expr pos:start="63:37" pos:end="63:43"><name pos:start="63:37" pos:end="63:43"><name pos:start="63:37" pos:end="63:40">args</name><index pos:start="63:41" pos:end="63:43">[<expr pos:start="63:42" pos:end="63:42"><name pos:start="63:42" pos:end="63:42">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="63:45" pos:end="63:45">.</operator><name pos:start="63:46" pos:end="63:48">val</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="73:9" pos:end="73:70">/* For commutative operations make constant second argument */</comment>

        <switch pos:start="75:9" pos:end="183:9">switch <condition pos:start="75:16" pos:end="75:19">(<expr pos:start="75:17" pos:end="75:18"><name pos:start="75:17" pos:end="75:18">op</name></expr>)</condition> <block pos:start="75:21" pos:end="183:9">{<block_content pos:start="77:9" pos:end="181:18">

        <expr_stmt pos:start="77:9" pos:end="91:27"><expr pos:start="77:9" pos:end="91:27"><call pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:21">CASE_OP_32_64</name><argument_list pos:start="77:22" pos:end="77:26">(<argument pos:start="77:23" pos:end="77:25"><expr pos:start="77:23" pos:end="77:25"><name pos:start="77:23" pos:end="77:25">add</name></expr></argument>)</argument_list></call><operator pos:start="77:27" pos:end="77:27">:</operator>

        <call pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:21">CASE_OP_32_64</name><argument_list pos:start="79:22" pos:end="79:26">(<argument pos:start="79:23" pos:end="79:25"><expr pos:start="79:23" pos:end="79:25"><name pos:start="79:23" pos:end="79:25">mul</name></expr></argument>)</argument_list></call><operator pos:start="79:27" pos:end="79:27">:</operator>

        <call pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:21">CASE_OP_32_64</name><argument_list pos:start="81:22" pos:end="81:26">(<argument pos:start="81:23" pos:end="81:25"><expr pos:start="81:23" pos:end="81:25"><name pos:start="81:23" pos:end="81:25">and</name></expr></argument>)</argument_list></call><operator pos:start="81:27" pos:end="81:27">:</operator>

        <call pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:21">CASE_OP_32_64</name><argument_list pos:start="83:22" pos:end="83:25">(<argument pos:start="83:23" pos:end="83:24"><expr pos:start="83:23" pos:end="83:24"><name pos:start="83:23" pos:end="83:24">or</name></expr></argument>)</argument_list></call><operator pos:start="83:26" pos:end="83:26">:</operator>

        <call pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:21">CASE_OP_32_64</name><argument_list pos:start="85:22" pos:end="85:26">(<argument pos:start="85:23" pos:end="85:25"><expr pos:start="85:23" pos:end="85:25"><name pos:start="85:23" pos:end="85:25">xor</name></expr></argument>)</argument_list></call><operator pos:start="85:27" pos:end="85:27">:</operator>

        <call pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:21">CASE_OP_32_64</name><argument_list pos:start="87:22" pos:end="87:26">(<argument pos:start="87:23" pos:end="87:25"><expr pos:start="87:23" pos:end="87:25"><name pos:start="87:23" pos:end="87:25">eqv</name></expr></argument>)</argument_list></call><operator pos:start="87:27" pos:end="87:27">:</operator>

        <call pos:start="89:9" pos:end="89:27"><name pos:start="89:9" pos:end="89:21">CASE_OP_32_64</name><argument_list pos:start="89:22" pos:end="89:27">(<argument pos:start="89:23" pos:end="89:26"><expr pos:start="89:23" pos:end="89:26"><name pos:start="89:23" pos:end="89:26">nand</name></expr></argument>)</argument_list></call><operator pos:start="89:28" pos:end="89:28">:</operator>

        <call pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:21">CASE_OP_32_64</name><argument_list pos:start="91:22" pos:end="91:26">(<argument pos:start="91:23" pos:end="91:25"><expr pos:start="91:23" pos:end="91:25"><name pos:start="91:23" pos:end="91:25">nor</name></expr></argument>)</argument_list></call><operator pos:start="91:27" pos:end="91:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="93:13" pos:end="101:13"><if pos:start="93:13" pos:end="101:13">if <condition pos:start="93:16" pos:end="93:55">(<expr pos:start="93:17" pos:end="93:54"><name pos:start="93:17" pos:end="93:30"><name pos:start="93:17" pos:end="93:21">temps</name><index pos:start="93:22" pos:end="93:30">[<expr pos:start="93:23" pos:end="93:29"><name pos:start="93:23" pos:end="93:29"><name pos:start="93:23" pos:end="93:26">args</name><index pos:start="93:27" pos:end="93:29">[<expr pos:start="93:28" pos:end="93:28"><literal type="number" pos:start="93:28" pos:end="93:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="93:31" pos:end="93:31">.</operator><name pos:start="93:32" pos:end="93:36">state</name> <operator pos:start="93:38" pos:end="93:39">==</operator> <name pos:start="93:41" pos:end="93:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="93:57" pos:end="101:13">{<block_content pos:start="95:17" pos:end="99:30">

                <expr_stmt pos:start="95:17" pos:end="95:30"><expr pos:start="95:17" pos:end="95:29"><name pos:start="95:17" pos:end="95:19">tmp</name> <operator pos:start="95:21" pos:end="95:21">=</operator> <name pos:start="95:23" pos:end="95:29"><name pos:start="95:23" pos:end="95:26">args</name><index pos:start="95:27" pos:end="95:29">[<expr pos:start="95:28" pos:end="95:28"><literal type="number" pos:start="95:28" pos:end="95:28">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:34"><expr pos:start="97:17" pos:end="97:33"><name pos:start="97:17" pos:end="97:23"><name pos:start="97:17" pos:end="97:20">args</name><index pos:start="97:21" pos:end="97:23">[<expr pos:start="97:22" pos:end="97:22"><literal type="number" pos:start="97:22" pos:end="97:22">1</literal></expr>]</index></name> <operator pos:start="97:25" pos:end="97:25">=</operator> <name pos:start="97:27" pos:end="97:33"><name pos:start="97:27" pos:end="97:30">args</name><index pos:start="97:31" pos:end="97:33">[<expr pos:start="97:32" pos:end="97:32"><literal type="number" pos:start="97:32" pos:end="97:32">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:30"><expr pos:start="99:17" pos:end="99:29"><name pos:start="99:17" pos:end="99:23"><name pos:start="99:17" pos:end="99:20">args</name><index pos:start="99:21" pos:end="99:23">[<expr pos:start="99:22" pos:end="99:22"><literal type="number" pos:start="99:22" pos:end="99:22">2</literal></expr>]</index></name> <operator pos:start="99:25" pos:end="99:25">=</operator> <name pos:start="99:27" pos:end="99:29">tmp</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        <expr_stmt pos:start="105:9" pos:end="105:30"><expr pos:start="105:9" pos:end="105:30"><call pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:21">CASE_OP_32_64</name><argument_list pos:start="105:22" pos:end="105:29">(<argument pos:start="105:23" pos:end="105:28"><expr pos:start="105:23" pos:end="105:28"><name pos:start="105:23" pos:end="105:28">brcond</name></expr></argument>)</argument_list></call><operator pos:start="105:30" pos:end="105:30">:</operator></expr></expr_stmt>

            <if_stmt pos:start="107:13" pos:end="119:13"><if pos:start="107:13" pos:end="119:13">if <condition pos:start="107:16" pos:end="109:58">(<expr pos:start="107:17" pos:end="109:57"><name pos:start="107:17" pos:end="107:30"><name pos:start="107:17" pos:end="107:21">temps</name><index pos:start="107:22" pos:end="107:30">[<expr pos:start="107:23" pos:end="107:29"><name pos:start="107:23" pos:end="107:29"><name pos:start="107:23" pos:end="107:26">args</name><index pos:start="107:27" pos:end="107:29">[<expr pos:start="107:28" pos:end="107:28"><literal type="number" pos:start="107:28" pos:end="107:28">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="107:31" pos:end="107:31">.</operator><name pos:start="107:32" pos:end="107:36">state</name> <operator pos:start="107:38" pos:end="107:39">==</operator> <name pos:start="107:41" pos:end="107:54">TCG_TEMP_CONST</name>

                <operator pos:start="109:17" pos:end="109:18">&amp;&amp;</operator> <name pos:start="109:20" pos:end="109:33"><name pos:start="109:20" pos:end="109:24">temps</name><index pos:start="109:25" pos:end="109:33">[<expr pos:start="109:26" pos:end="109:32"><name pos:start="109:26" pos:end="109:32"><name pos:start="109:26" pos:end="109:29">args</name><index pos:start="109:30" pos:end="109:32">[<expr pos:start="109:31" pos:end="109:31"><literal type="number" pos:start="109:31" pos:end="109:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="109:34" pos:end="109:34">.</operator><name pos:start="109:35" pos:end="109:39">state</name> <operator pos:start="109:41" pos:end="109:42">!=</operator> <name pos:start="109:44" pos:end="109:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="109:60" pos:end="119:13">{<block_content pos:start="111:17" pos:end="117:49">

                <expr_stmt pos:start="111:17" pos:end="111:30"><expr pos:start="111:17" pos:end="111:29"><name pos:start="111:17" pos:end="111:19">tmp</name> <operator pos:start="111:21" pos:end="111:21">=</operator> <name pos:start="111:23" pos:end="111:29"><name pos:start="111:23" pos:end="111:26">args</name><index pos:start="111:27" pos:end="111:29">[<expr pos:start="111:28" pos:end="111:28"><literal type="number" pos:start="111:28" pos:end="111:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:34"><expr pos:start="113:17" pos:end="113:33"><name pos:start="113:17" pos:end="113:23"><name pos:start="113:17" pos:end="113:20">args</name><index pos:start="113:21" pos:end="113:23">[<expr pos:start="113:22" pos:end="113:22"><literal type="number" pos:start="113:22" pos:end="113:22">0</literal></expr>]</index></name> <operator pos:start="113:25" pos:end="113:25">=</operator> <name pos:start="113:27" pos:end="113:33"><name pos:start="113:27" pos:end="113:30">args</name><index pos:start="113:31" pos:end="113:33">[<expr pos:start="113:32" pos:end="113:32"><literal type="number" pos:start="113:32" pos:end="113:32">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:30"><expr pos:start="115:17" pos:end="115:29"><name pos:start="115:17" pos:end="115:23"><name pos:start="115:17" pos:end="115:20">args</name><index pos:start="115:21" pos:end="115:23">[<expr pos:start="115:22" pos:end="115:22"><literal type="number" pos:start="115:22" pos:end="115:22">1</literal></expr>]</index></name> <operator pos:start="115:25" pos:end="115:25">=</operator> <name pos:start="115:27" pos:end="115:29">tmp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:49"><expr pos:start="117:17" pos:end="117:48"><name pos:start="117:17" pos:end="117:23"><name pos:start="117:17" pos:end="117:20">args</name><index pos:start="117:21" pos:end="117:23">[<expr pos:start="117:22" pos:end="117:22"><literal type="number" pos:start="117:22" pos:end="117:22">2</literal></expr>]</index></name> <operator pos:start="117:25" pos:end="117:25">=</operator> <call pos:start="117:27" pos:end="117:48"><name pos:start="117:27" pos:end="117:39">tcg_swap_cond</name><argument_list pos:start="117:40" pos:end="117:48">(<argument pos:start="117:41" pos:end="117:47"><expr pos:start="117:41" pos:end="117:47"><name pos:start="117:41" pos:end="117:47"><name pos:start="117:41" pos:end="117:44">args</name><index pos:start="117:45" pos:end="117:47">[<expr pos:start="117:46" pos:end="117:46"><literal type="number" pos:start="117:46" pos:end="117:46">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        <expr_stmt pos:start="123:9" pos:end="123:31"><expr pos:start="123:9" pos:end="123:31"><call pos:start="123:9" pos:end="123:30"><name pos:start="123:9" pos:end="123:21">CASE_OP_32_64</name><argument_list pos:start="123:22" pos:end="123:30">(<argument pos:start="123:23" pos:end="123:29"><expr pos:start="123:23" pos:end="123:29"><name pos:start="123:23" pos:end="123:29">setcond</name></expr></argument>)</argument_list></call><operator pos:start="123:31" pos:end="123:31">:</operator></expr></expr_stmt>

            <if_stmt pos:start="125:13" pos:end="137:13"><if pos:start="125:13" pos:end="137:13">if <condition pos:start="125:16" pos:end="127:58">(<expr pos:start="125:17" pos:end="127:57"><name pos:start="125:17" pos:end="125:30"><name pos:start="125:17" pos:end="125:21">temps</name><index pos:start="125:22" pos:end="125:30">[<expr pos:start="125:23" pos:end="125:29"><name pos:start="125:23" pos:end="125:29"><name pos:start="125:23" pos:end="125:26">args</name><index pos:start="125:27" pos:end="125:29">[<expr pos:start="125:28" pos:end="125:28"><literal type="number" pos:start="125:28" pos:end="125:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="125:31" pos:end="125:31">.</operator><name pos:start="125:32" pos:end="125:36">state</name> <operator pos:start="125:38" pos:end="125:39">==</operator> <name pos:start="125:41" pos:end="125:54">TCG_TEMP_CONST</name>

                <operator pos:start="127:17" pos:end="127:18">&amp;&amp;</operator> <name pos:start="127:20" pos:end="127:33"><name pos:start="127:20" pos:end="127:24">temps</name><index pos:start="127:25" pos:end="127:33">[<expr pos:start="127:26" pos:end="127:32"><name pos:start="127:26" pos:end="127:32"><name pos:start="127:26" pos:end="127:29">args</name><index pos:start="127:30" pos:end="127:32">[<expr pos:start="127:31" pos:end="127:31"><literal type="number" pos:start="127:31" pos:end="127:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="127:34" pos:end="127:34">.</operator><name pos:start="127:35" pos:end="127:39">state</name> <operator pos:start="127:41" pos:end="127:42">!=</operator> <name pos:start="127:44" pos:end="127:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="127:60" pos:end="137:13">{<block_content pos:start="129:17" pos:end="135:49">

                <expr_stmt pos:start="129:17" pos:end="129:30"><expr pos:start="129:17" pos:end="129:29"><name pos:start="129:17" pos:end="129:19">tmp</name> <operator pos:start="129:21" pos:end="129:21">=</operator> <name pos:start="129:23" pos:end="129:29"><name pos:start="129:23" pos:end="129:26">args</name><index pos:start="129:27" pos:end="129:29">[<expr pos:start="129:28" pos:end="129:28"><literal type="number" pos:start="129:28" pos:end="129:28">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:34"><expr pos:start="131:17" pos:end="131:33"><name pos:start="131:17" pos:end="131:23"><name pos:start="131:17" pos:end="131:20">args</name><index pos:start="131:21" pos:end="131:23">[<expr pos:start="131:22" pos:end="131:22"><literal type="number" pos:start="131:22" pos:end="131:22">1</literal></expr>]</index></name> <operator pos:start="131:25" pos:end="131:25">=</operator> <name pos:start="131:27" pos:end="131:33"><name pos:start="131:27" pos:end="131:30">args</name><index pos:start="131:31" pos:end="131:33">[<expr pos:start="131:32" pos:end="131:32"><literal type="number" pos:start="131:32" pos:end="131:32">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:30"><expr pos:start="133:17" pos:end="133:29"><name pos:start="133:17" pos:end="133:23"><name pos:start="133:17" pos:end="133:20">args</name><index pos:start="133:21" pos:end="133:23">[<expr pos:start="133:22" pos:end="133:22"><literal type="number" pos:start="133:22" pos:end="133:22">2</literal></expr>]</index></name> <operator pos:start="133:25" pos:end="133:25">=</operator> <name pos:start="133:27" pos:end="133:29">tmp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:49"><expr pos:start="135:17" pos:end="135:48"><name pos:start="135:17" pos:end="135:23"><name pos:start="135:17" pos:end="135:20">args</name><index pos:start="135:21" pos:end="135:23">[<expr pos:start="135:22" pos:end="135:22"><literal type="number" pos:start="135:22" pos:end="135:22">3</literal></expr>]</index></name> <operator pos:start="135:25" pos:end="135:25">=</operator> <call pos:start="135:27" pos:end="135:48"><name pos:start="135:27" pos:end="135:39">tcg_swap_cond</name><argument_list pos:start="135:40" pos:end="135:48">(<argument pos:start="135:41" pos:end="135:47"><expr pos:start="135:41" pos:end="135:47"><name pos:start="135:41" pos:end="135:47"><name pos:start="135:41" pos:end="135:44">args</name><index pos:start="135:45" pos:end="135:47">[<expr pos:start="135:46" pos:end="135:46"><literal type="number" pos:start="135:46" pos:end="135:46">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <expr_stmt pos:start="141:9" pos:end="143:27"><expr pos:start="141:9" pos:end="143:26"><call pos:start="141:9" pos:end="141:30"><name pos:start="141:9" pos:end="141:21">CASE_OP_32_64</name><argument_list pos:start="141:22" pos:end="141:30">(<argument pos:start="141:23" pos:end="141:29"><expr pos:start="141:23" pos:end="141:29"><name pos:start="141:23" pos:end="141:29">movcond</name></expr></argument>)</argument_list></call><operator pos:start="141:31" pos:end="141:31">:</operator>

            <name pos:start="143:13" pos:end="143:16">cond</name> <operator pos:start="143:18" pos:end="143:18">=</operator> <name pos:start="143:20" pos:end="143:26"><name pos:start="143:20" pos:end="143:23">args</name><index pos:start="143:24" pos:end="143:26">[<expr pos:start="143:25" pos:end="143:25"><literal type="number" pos:start="143:25" pos:end="143:25">5</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="145:13" pos:end="157:13"><if pos:start="145:13" pos:end="157:13">if <condition pos:start="145:16" pos:end="147:58">(<expr pos:start="145:17" pos:end="147:57"><name pos:start="145:17" pos:end="145:30"><name pos:start="145:17" pos:end="145:21">temps</name><index pos:start="145:22" pos:end="145:30">[<expr pos:start="145:23" pos:end="145:29"><name pos:start="145:23" pos:end="145:29"><name pos:start="145:23" pos:end="145:26">args</name><index pos:start="145:27" pos:end="145:29">[<expr pos:start="145:28" pos:end="145:28"><literal type="number" pos:start="145:28" pos:end="145:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="145:31" pos:end="145:31">.</operator><name pos:start="145:32" pos:end="145:36">state</name> <operator pos:start="145:38" pos:end="145:39">==</operator> <name pos:start="145:41" pos:end="145:54">TCG_TEMP_CONST</name>

                <operator pos:start="147:17" pos:end="147:18">&amp;&amp;</operator> <name pos:start="147:20" pos:end="147:33"><name pos:start="147:20" pos:end="147:24">temps</name><index pos:start="147:25" pos:end="147:33">[<expr pos:start="147:26" pos:end="147:32"><name pos:start="147:26" pos:end="147:32"><name pos:start="147:26" pos:end="147:29">args</name><index pos:start="147:30" pos:end="147:32">[<expr pos:start="147:31" pos:end="147:31"><literal type="number" pos:start="147:31" pos:end="147:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="147:34" pos:end="147:34">.</operator><name pos:start="147:35" pos:end="147:39">state</name> <operator pos:start="147:41" pos:end="147:42">!=</operator> <name pos:start="147:44" pos:end="147:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="147:60" pos:end="157:13">{<block_content pos:start="149:17" pos:end="155:43">

                <expr_stmt pos:start="149:17" pos:end="149:30"><expr pos:start="149:17" pos:end="149:29"><name pos:start="149:17" pos:end="149:19">tmp</name> <operator pos:start="149:21" pos:end="149:21">=</operator> <name pos:start="149:23" pos:end="149:29"><name pos:start="149:23" pos:end="149:26">args</name><index pos:start="149:27" pos:end="149:29">[<expr pos:start="149:28" pos:end="149:28"><literal type="number" pos:start="149:28" pos:end="149:28">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:34"><expr pos:start="151:17" pos:end="151:33"><name pos:start="151:17" pos:end="151:23"><name pos:start="151:17" pos:end="151:20">args</name><index pos:start="151:21" pos:end="151:23">[<expr pos:start="151:22" pos:end="151:22"><literal type="number" pos:start="151:22" pos:end="151:22">1</literal></expr>]</index></name> <operator pos:start="151:25" pos:end="151:25">=</operator> <name pos:start="151:27" pos:end="151:33"><name pos:start="151:27" pos:end="151:30">args</name><index pos:start="151:31" pos:end="151:33">[<expr pos:start="151:32" pos:end="151:32"><literal type="number" pos:start="151:32" pos:end="151:32">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:30"><expr pos:start="153:17" pos:end="153:29"><name pos:start="153:17" pos:end="153:23"><name pos:start="153:17" pos:end="153:20">args</name><index pos:start="153:21" pos:end="153:23">[<expr pos:start="153:22" pos:end="153:22"><literal type="number" pos:start="153:22" pos:end="153:22">2</literal></expr>]</index></name> <operator pos:start="153:25" pos:end="153:25">=</operator> <name pos:start="153:27" pos:end="153:29">tmp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:43"><expr pos:start="155:17" pos:end="155:42"><name pos:start="155:17" pos:end="155:20">cond</name> <operator pos:start="155:22" pos:end="155:22">=</operator> <call pos:start="155:24" pos:end="155:42"><name pos:start="155:24" pos:end="155:36">tcg_swap_cond</name><argument_list pos:start="155:37" pos:end="155:42">(<argument pos:start="155:38" pos:end="155:41"><expr pos:start="155:38" pos:end="155:41"><name pos:start="155:38" pos:end="155:41">cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="159:13" pos:end="163:46">/* For movcond, we canonicalize the "false" input reg to match

               the destination reg so that the tcg backend can implement

               a "move if true" operation.  */</comment>

            <if_stmt pos:start="165:13" pos:end="175:13"><if pos:start="165:13" pos:end="175:13">if <condition pos:start="165:16" pos:end="165:35">(<expr pos:start="165:17" pos:end="165:34"><name pos:start="165:17" pos:end="165:23"><name pos:start="165:17" pos:end="165:20">args</name><index pos:start="165:21" pos:end="165:23">[<expr pos:start="165:22" pos:end="165:22"><literal type="number" pos:start="165:22" pos:end="165:22">0</literal></expr>]</index></name> <operator pos:start="165:25" pos:end="165:26">==</operator> <name pos:start="165:28" pos:end="165:34"><name pos:start="165:28" pos:end="165:31">args</name><index pos:start="165:32" pos:end="165:34">[<expr pos:start="165:33" pos:end="165:33"><literal type="number" pos:start="165:33" pos:end="165:33">3</literal></expr>]</index></name></expr>)</condition> <block pos:start="165:37" pos:end="175:13">{<block_content pos:start="167:17" pos:end="173:45">

                <expr_stmt pos:start="167:17" pos:end="167:30"><expr pos:start="167:17" pos:end="167:29"><name pos:start="167:17" pos:end="167:19">tmp</name> <operator pos:start="167:21" pos:end="167:21">=</operator> <name pos:start="167:23" pos:end="167:29"><name pos:start="167:23" pos:end="167:26">args</name><index pos:start="167:27" pos:end="167:29">[<expr pos:start="167:28" pos:end="167:28"><literal type="number" pos:start="167:28" pos:end="167:28">3</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:34"><expr pos:start="169:17" pos:end="169:33"><name pos:start="169:17" pos:end="169:23"><name pos:start="169:17" pos:end="169:20">args</name><index pos:start="169:21" pos:end="169:23">[<expr pos:start="169:22" pos:end="169:22"><literal type="number" pos:start="169:22" pos:end="169:22">3</literal></expr>]</index></name> <operator pos:start="169:25" pos:end="169:25">=</operator> <name pos:start="169:27" pos:end="169:33"><name pos:start="169:27" pos:end="169:30">args</name><index pos:start="169:31" pos:end="169:33">[<expr pos:start="169:32" pos:end="169:32"><literal type="number" pos:start="169:32" pos:end="169:32">4</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:30"><expr pos:start="171:17" pos:end="171:29"><name pos:start="171:17" pos:end="171:23"><name pos:start="171:17" pos:end="171:20">args</name><index pos:start="171:21" pos:end="171:23">[<expr pos:start="171:22" pos:end="171:22"><literal type="number" pos:start="171:22" pos:end="171:22">4</literal></expr>]</index></name> <operator pos:start="171:25" pos:end="171:25">=</operator> <name pos:start="171:27" pos:end="171:29">tmp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:45"><expr pos:start="173:17" pos:end="173:44"><name pos:start="173:17" pos:end="173:20">cond</name> <operator pos:start="173:22" pos:end="173:22">=</operator> <call pos:start="173:24" pos:end="173:44"><name pos:start="173:24" pos:end="173:38">tcg_invert_cond</name><argument_list pos:start="173:39" pos:end="173:44">(<argument pos:start="173:40" pos:end="173:43"><expr pos:start="173:40" pos:end="173:43"><name pos:start="173:40" pos:end="173:43">cond</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:27"><expr pos:start="177:13" pos:end="177:26"><name pos:start="177:13" pos:end="177:19"><name pos:start="177:13" pos:end="177:16">args</name><index pos:start="177:17" pos:end="177:19">[<expr pos:start="177:18" pos:end="177:18"><literal type="number" pos:start="177:18" pos:end="177:18">5</literal></expr>]</index></name> <operator pos:start="177:21" pos:end="177:21">=</operator> <name pos:start="177:23" pos:end="177:26">cond</name></expr>;</expr_stmt>

        <default pos:start="179:9" pos:end="179:16">default:</default>

            <break pos:start="181:13" pos:end="181:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="187:9" pos:end="187:71">/* Simplify expressions for "shift/rot r, 0, a =&gt; movi r, 0" */</comment>

        <switch pos:start="189:9" pos:end="223:9">switch <condition pos:start="189:16" pos:end="189:19">(<expr pos:start="189:17" pos:end="189:18"><name pos:start="189:17" pos:end="189:18">op</name></expr>)</condition> <block pos:start="189:21" pos:end="223:9">{<block_content pos:start="191:9" pos:end="221:18">

        <expr_stmt pos:start="191:9" pos:end="199:28"><expr pos:start="191:9" pos:end="199:28"><call pos:start="191:9" pos:end="191:26"><name pos:start="191:9" pos:end="191:21">CASE_OP_32_64</name><argument_list pos:start="191:22" pos:end="191:26">(<argument pos:start="191:23" pos:end="191:25"><expr pos:start="191:23" pos:end="191:25"><name pos:start="191:23" pos:end="191:25">shl</name></expr></argument>)</argument_list></call><operator pos:start="191:27" pos:end="191:27">:</operator>

        <call pos:start="193:9" pos:end="193:26"><name pos:start="193:9" pos:end="193:21">CASE_OP_32_64</name><argument_list pos:start="193:22" pos:end="193:26">(<argument pos:start="193:23" pos:end="193:25"><expr pos:start="193:23" pos:end="193:25"><name pos:start="193:23" pos:end="193:25">shr</name></expr></argument>)</argument_list></call><operator pos:start="193:27" pos:end="193:27">:</operator>

        <call pos:start="195:9" pos:end="195:26"><name pos:start="195:9" pos:end="195:21">CASE_OP_32_64</name><argument_list pos:start="195:22" pos:end="195:26">(<argument pos:start="195:23" pos:end="195:25"><expr pos:start="195:23" pos:end="195:25"><name pos:start="195:23" pos:end="195:25">sar</name></expr></argument>)</argument_list></call><operator pos:start="195:27" pos:end="195:27">:</operator>

        <call pos:start="197:9" pos:end="197:27"><name pos:start="197:9" pos:end="197:21">CASE_OP_32_64</name><argument_list pos:start="197:22" pos:end="197:27">(<argument pos:start="197:23" pos:end="197:26"><expr pos:start="197:23" pos:end="197:26"><name pos:start="197:23" pos:end="197:26">rotl</name></expr></argument>)</argument_list></call><operator pos:start="197:28" pos:end="197:28">:</operator>

        <call pos:start="199:9" pos:end="199:27"><name pos:start="199:9" pos:end="199:21">CASE_OP_32_64</name><argument_list pos:start="199:22" pos:end="199:27">(<argument pos:start="199:23" pos:end="199:26"><expr pos:start="199:23" pos:end="199:26"><name pos:start="199:23" pos:end="199:26">rotr</name></expr></argument>)</argument_list></call><operator pos:start="199:28" pos:end="199:28">:</operator></expr></expr_stmt>

            <if_stmt pos:start="201:13" pos:end="215:13"><if pos:start="201:13" pos:end="215:13">if <condition pos:start="201:16" pos:end="203:43">(<expr pos:start="201:17" pos:end="203:42"><name pos:start="201:17" pos:end="201:30"><name pos:start="201:17" pos:end="201:21">temps</name><index pos:start="201:22" pos:end="201:30">[<expr pos:start="201:23" pos:end="201:29"><name pos:start="201:23" pos:end="201:29"><name pos:start="201:23" pos:end="201:26">args</name><index pos:start="201:27" pos:end="201:29">[<expr pos:start="201:28" pos:end="201:28"><literal type="number" pos:start="201:28" pos:end="201:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="201:31" pos:end="201:31">.</operator><name pos:start="201:32" pos:end="201:36">state</name> <operator pos:start="201:38" pos:end="201:39">==</operator> <name pos:start="201:41" pos:end="201:54">TCG_TEMP_CONST</name>

                <operator pos:start="203:17" pos:end="203:18">&amp;&amp;</operator> <name pos:start="203:20" pos:end="203:33"><name pos:start="203:20" pos:end="203:24">temps</name><index pos:start="203:25" pos:end="203:33">[<expr pos:start="203:26" pos:end="203:32"><name pos:start="203:26" pos:end="203:32"><name pos:start="203:26" pos:end="203:29">args</name><index pos:start="203:30" pos:end="203:32">[<expr pos:start="203:31" pos:end="203:31"><literal type="number" pos:start="203:31" pos:end="203:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="203:34" pos:end="203:34">.</operator><name pos:start="203:35" pos:end="203:37">val</name> <operator pos:start="203:39" pos:end="203:40">==</operator> <literal type="number" pos:start="203:42" pos:end="203:42">0</literal></expr>)</condition> <block pos:start="203:45" pos:end="215:13">{<block_content pos:start="205:17" pos:end="213:25">

                <expr_stmt pos:start="205:17" pos:end="205:55"><expr pos:start="205:17" pos:end="205:54"><name pos:start="205:17" pos:end="205:37"><name pos:start="205:17" pos:end="205:27">gen_opc_buf</name><index pos:start="205:28" pos:end="205:37">[<expr pos:start="205:29" pos:end="205:36"><name pos:start="205:29" pos:end="205:36">op_index</name></expr>]</index></name> <operator pos:start="205:39" pos:end="205:39">=</operator> <call pos:start="205:41" pos:end="205:54"><name pos:start="205:41" pos:end="205:50">op_to_movi</name><argument_list pos:start="205:51" pos:end="205:54">(<argument pos:start="205:52" pos:end="205:53"><expr pos:start="205:52" pos:end="205:53"><name pos:start="205:52" pos:end="205:53">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:77"><expr pos:start="207:17" pos:end="207:76"><call pos:start="207:17" pos:end="207:76"><name pos:start="207:17" pos:end="207:32">tcg_opt_gen_movi</name><argument_list pos:start="207:33" pos:end="207:76">(<argument pos:start="207:34" pos:end="207:41"><expr pos:start="207:34" pos:end="207:41"><name pos:start="207:34" pos:end="207:41">gen_args</name></expr></argument>, <argument pos:start="207:44" pos:end="207:50"><expr pos:start="207:44" pos:end="207:50"><name pos:start="207:44" pos:end="207:50"><name pos:start="207:44" pos:end="207:47">args</name><index pos:start="207:48" pos:end="207:50">[<expr pos:start="207:49" pos:end="207:49"><literal type="number" pos:start="207:49" pos:end="207:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="207:53" pos:end="207:53"><expr pos:start="207:53" pos:end="207:53"><literal type="number" pos:start="207:53" pos:end="207:53">0</literal></expr></argument>, <argument pos:start="207:56" pos:end="207:63"><expr pos:start="207:56" pos:end="207:63"><name pos:start="207:56" pos:end="207:63">nb_temps</name></expr></argument>, <argument pos:start="207:66" pos:end="207:75"><expr pos:start="207:66" pos:end="207:75"><name pos:start="207:66" pos:end="207:75">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:26"><expr pos:start="209:17" pos:end="209:25"><name pos:start="209:17" pos:end="209:20">args</name> <operator pos:start="209:22" pos:end="209:23">+=</operator> <literal type="number" pos:start="209:25" pos:end="209:25">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:30"><expr pos:start="211:17" pos:end="211:29"><name pos:start="211:17" pos:end="211:24">gen_args</name> <operator pos:start="211:26" pos:end="211:27">+=</operator> <literal type="number" pos:start="211:29" pos:end="211:29">2</literal></expr>;</expr_stmt>

                <continue pos:start="213:17" pos:end="213:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="217:13" pos:end="217:18">break;</break>

        <default pos:start="219:9" pos:end="219:16">default:</default>

            <break pos:start="221:13" pos:end="221:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="227:9" pos:end="227:68">/* Simplify expression for "op r, a, 0 =&gt; mov r, a" cases */</comment>

        <switch pos:start="229:9" pos:end="293:9">switch <condition pos:start="229:16" pos:end="229:19">(<expr pos:start="229:17" pos:end="229:18"><name pos:start="229:17" pos:end="229:18">op</name></expr>)</condition> <block pos:start="229:21" pos:end="293:9">{<block_content pos:start="231:9" pos:end="291:18">

        <expr_stmt pos:start="231:9" pos:end="247:27"><expr pos:start="231:9" pos:end="247:27"><call pos:start="231:9" pos:end="231:26"><name pos:start="231:9" pos:end="231:21">CASE_OP_32_64</name><argument_list pos:start="231:22" pos:end="231:26">(<argument pos:start="231:23" pos:end="231:25"><expr pos:start="231:23" pos:end="231:25"><name pos:start="231:23" pos:end="231:25">add</name></expr></argument>)</argument_list></call><operator pos:start="231:27" pos:end="231:27">:</operator>

        <call pos:start="233:9" pos:end="233:26"><name pos:start="233:9" pos:end="233:21">CASE_OP_32_64</name><argument_list pos:start="233:22" pos:end="233:26">(<argument pos:start="233:23" pos:end="233:25"><expr pos:start="233:23" pos:end="233:25"><name pos:start="233:23" pos:end="233:25">sub</name></expr></argument>)</argument_list></call><operator pos:start="233:27" pos:end="233:27">:</operator>

        <call pos:start="235:9" pos:end="235:26"><name pos:start="235:9" pos:end="235:21">CASE_OP_32_64</name><argument_list pos:start="235:22" pos:end="235:26">(<argument pos:start="235:23" pos:end="235:25"><expr pos:start="235:23" pos:end="235:25"><name pos:start="235:23" pos:end="235:25">shl</name></expr></argument>)</argument_list></call><operator pos:start="235:27" pos:end="235:27">:</operator>

        <call pos:start="237:9" pos:end="237:26"><name pos:start="237:9" pos:end="237:21">CASE_OP_32_64</name><argument_list pos:start="237:22" pos:end="237:26">(<argument pos:start="237:23" pos:end="237:25"><expr pos:start="237:23" pos:end="237:25"><name pos:start="237:23" pos:end="237:25">shr</name></expr></argument>)</argument_list></call><operator pos:start="237:27" pos:end="237:27">:</operator>

        <call pos:start="239:9" pos:end="239:26"><name pos:start="239:9" pos:end="239:21">CASE_OP_32_64</name><argument_list pos:start="239:22" pos:end="239:26">(<argument pos:start="239:23" pos:end="239:25"><expr pos:start="239:23" pos:end="239:25"><name pos:start="239:23" pos:end="239:25">sar</name></expr></argument>)</argument_list></call><operator pos:start="239:27" pos:end="239:27">:</operator>

        <call pos:start="241:9" pos:end="241:27"><name pos:start="241:9" pos:end="241:21">CASE_OP_32_64</name><argument_list pos:start="241:22" pos:end="241:27">(<argument pos:start="241:23" pos:end="241:26"><expr pos:start="241:23" pos:end="241:26"><name pos:start="241:23" pos:end="241:26">rotl</name></expr></argument>)</argument_list></call><operator pos:start="241:28" pos:end="241:28">:</operator>

        <call pos:start="243:9" pos:end="243:27"><name pos:start="243:9" pos:end="243:21">CASE_OP_32_64</name><argument_list pos:start="243:22" pos:end="243:27">(<argument pos:start="243:23" pos:end="243:26"><expr pos:start="243:23" pos:end="243:26"><name pos:start="243:23" pos:end="243:26">rotr</name></expr></argument>)</argument_list></call><operator pos:start="243:28" pos:end="243:28">:</operator>

        <call pos:start="245:9" pos:end="245:25"><name pos:start="245:9" pos:end="245:21">CASE_OP_32_64</name><argument_list pos:start="245:22" pos:end="245:25">(<argument pos:start="245:23" pos:end="245:24"><expr pos:start="245:23" pos:end="245:24"><name pos:start="245:23" pos:end="245:24">or</name></expr></argument>)</argument_list></call><operator pos:start="245:26" pos:end="245:26">:</operator>

        <call pos:start="247:9" pos:end="247:26"><name pos:start="247:9" pos:end="247:21">CASE_OP_32_64</name><argument_list pos:start="247:22" pos:end="247:26">(<argument pos:start="247:23" pos:end="247:25"><expr pos:start="247:23" pos:end="247:25"><name pos:start="247:23" pos:end="247:25">xor</name></expr></argument>)</argument_list></call><operator pos:start="247:27" pos:end="247:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="249:13" pos:end="255:13"><if pos:start="249:13" pos:end="255:13">if <condition pos:start="249:16" pos:end="249:55">(<expr pos:start="249:17" pos:end="249:54"><name pos:start="249:17" pos:end="249:30"><name pos:start="249:17" pos:end="249:21">temps</name><index pos:start="249:22" pos:end="249:30">[<expr pos:start="249:23" pos:end="249:29"><name pos:start="249:23" pos:end="249:29"><name pos:start="249:23" pos:end="249:26">args</name><index pos:start="249:27" pos:end="249:29">[<expr pos:start="249:28" pos:end="249:28"><literal type="number" pos:start="249:28" pos:end="249:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="249:31" pos:end="249:31">.</operator><name pos:start="249:32" pos:end="249:36">state</name> <operator pos:start="249:38" pos:end="249:39">==</operator> <name pos:start="249:41" pos:end="249:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="249:57" pos:end="255:13">{<block_content pos:start="253:17" pos:end="253:22">

                <comment type="block" pos:start="251:17" pos:end="251:61">/* Proceed with possible constant folding. */</comment>

                <break pos:start="253:17" pos:end="253:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="257:13" pos:end="285:13"><if pos:start="257:13" pos:end="285:13">if <condition pos:start="257:16" pos:end="259:43">(<expr pos:start="257:17" pos:end="259:42"><name pos:start="257:17" pos:end="257:30"><name pos:start="257:17" pos:end="257:21">temps</name><index pos:start="257:22" pos:end="257:30">[<expr pos:start="257:23" pos:end="257:29"><name pos:start="257:23" pos:end="257:29"><name pos:start="257:23" pos:end="257:26">args</name><index pos:start="257:27" pos:end="257:29">[<expr pos:start="257:28" pos:end="257:28"><literal type="number" pos:start="257:28" pos:end="257:28">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="257:31" pos:end="257:31">.</operator><name pos:start="257:32" pos:end="257:36">state</name> <operator pos:start="257:38" pos:end="257:39">==</operator> <name pos:start="257:41" pos:end="257:54">TCG_TEMP_CONST</name>

                <operator pos:start="259:17" pos:end="259:18">&amp;&amp;</operator> <name pos:start="259:20" pos:end="259:33"><name pos:start="259:20" pos:end="259:24">temps</name><index pos:start="259:25" pos:end="259:33">[<expr pos:start="259:26" pos:end="259:32"><name pos:start="259:26" pos:end="259:32"><name pos:start="259:26" pos:end="259:29">args</name><index pos:start="259:30" pos:end="259:32">[<expr pos:start="259:31" pos:end="259:31"><literal type="number" pos:start="259:31" pos:end="259:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="259:34" pos:end="259:34">.</operator><name pos:start="259:35" pos:end="259:37">val</name> <operator pos:start="259:39" pos:end="259:40">==</operator> <literal type="number" pos:start="259:42" pos:end="259:42">0</literal></expr>)</condition> <block pos:start="259:45" pos:end="285:13">{<block_content pos:start="261:17" pos:end="283:25">

                <if_stmt pos:start="261:17" pos:end="279:17"><if pos:start="261:17" pos:end="269:17">if <condition pos:start="261:20" pos:end="265:42">(<expr pos:start="261:21" pos:end="265:41"><operator pos:start="261:21" pos:end="261:21">(</operator><name pos:start="261:22" pos:end="261:35"><name pos:start="261:22" pos:end="261:26">temps</name><index pos:start="261:27" pos:end="261:35">[<expr pos:start="261:28" pos:end="261:34"><name pos:start="261:28" pos:end="261:34"><name pos:start="261:28" pos:end="261:31">args</name><index pos:start="261:32" pos:end="261:34">[<expr pos:start="261:33" pos:end="261:33"><literal type="number" pos:start="261:33" pos:end="261:33">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="261:36" pos:end="261:36">.</operator><name pos:start="261:37" pos:end="261:41">state</name> <operator pos:start="261:43" pos:end="261:44">==</operator> <name pos:start="261:46" pos:end="261:58">TCG_TEMP_COPY</name>

                    <operator pos:start="263:21" pos:end="263:22">&amp;&amp;</operator> <name pos:start="263:24" pos:end="263:37"><name pos:start="263:24" pos:end="263:28">temps</name><index pos:start="263:29" pos:end="263:37">[<expr pos:start="263:30" pos:end="263:36"><name pos:start="263:30" pos:end="263:36"><name pos:start="263:30" pos:end="263:33">args</name><index pos:start="263:34" pos:end="263:36">[<expr pos:start="263:35" pos:end="263:35"><literal type="number" pos:start="263:35" pos:end="263:35">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="263:38" pos:end="263:38">.</operator><name pos:start="263:39" pos:end="263:41">val</name> <operator pos:start="263:43" pos:end="263:44">==</operator> <name pos:start="263:46" pos:end="263:52"><name pos:start="263:46" pos:end="263:49">args</name><index pos:start="263:50" pos:end="263:52">[<expr pos:start="263:51" pos:end="263:51"><literal type="number" pos:start="263:51" pos:end="263:51">1</literal></expr>]</index></name><operator pos:start="263:53" pos:end="263:53">)</operator>

                    <operator pos:start="265:21" pos:end="265:22">||</operator> <name pos:start="265:24" pos:end="265:30"><name pos:start="265:24" pos:end="265:27">args</name><index pos:start="265:28" pos:end="265:30">[<expr pos:start="265:29" pos:end="265:29"><literal type="number" pos:start="265:29" pos:end="265:29">0</literal></expr>]</index></name> <operator pos:start="265:32" pos:end="265:33">==</operator> <name pos:start="265:35" pos:end="265:41"><name pos:start="265:35" pos:end="265:38">args</name><index pos:start="265:39" pos:end="265:41">[<expr pos:start="265:40" pos:end="265:40"><literal type="number" pos:start="265:40" pos:end="265:40">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="265:44" pos:end="269:17">{<block_content pos:start="267:21" pos:end="267:57">

                    <expr_stmt pos:start="267:21" pos:end="267:57"><expr pos:start="267:21" pos:end="267:56"><name pos:start="267:21" pos:end="267:41"><name pos:start="267:21" pos:end="267:31">gen_opc_buf</name><index pos:start="267:32" pos:end="267:41">[<expr pos:start="267:33" pos:end="267:40"><name pos:start="267:33" pos:end="267:40">op_index</name></expr>]</index></name> <operator pos:start="267:43" pos:end="267:43">=</operator> <name pos:start="267:45" pos:end="267:56">INDEX_op_nop</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="269:19" pos:end="279:17">else <block pos:start="269:24" pos:end="279:17">{<block_content pos:start="271:21" pos:end="277:34">

                    <expr_stmt pos:start="271:21" pos:end="271:58"><expr pos:start="271:21" pos:end="271:57"><name pos:start="271:21" pos:end="271:41"><name pos:start="271:21" pos:end="271:31">gen_opc_buf</name><index pos:start="271:32" pos:end="271:41">[<expr pos:start="271:33" pos:end="271:40"><name pos:start="271:33" pos:end="271:40">op_index</name></expr>]</index></name> <operator pos:start="271:43" pos:end="271:43">=</operator> <call pos:start="271:45" pos:end="271:57"><name pos:start="271:45" pos:end="271:53">op_to_mov</name><argument_list pos:start="271:54" pos:end="271:57">(<argument pos:start="271:55" pos:end="271:56"><expr pos:start="271:55" pos:end="271:56"><name pos:start="271:55" pos:end="271:56">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="273:21" pos:end="275:58"><expr pos:start="273:21" pos:end="275:57"><call pos:start="273:21" pos:end="275:57"><name pos:start="273:21" pos:end="273:35">tcg_opt_gen_mov</name><argument_list pos:start="273:36" pos:end="275:57">(<argument pos:start="273:37" pos:end="273:44"><expr pos:start="273:37" pos:end="273:44"><name pos:start="273:37" pos:end="273:44">gen_args</name></expr></argument>, <argument pos:start="273:47" pos:end="273:53"><expr pos:start="273:47" pos:end="273:53"><name pos:start="273:47" pos:end="273:53"><name pos:start="273:47" pos:end="273:50">args</name><index pos:start="273:51" pos:end="273:53">[<expr pos:start="273:52" pos:end="273:52"><literal type="number" pos:start="273:52" pos:end="273:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="273:56" pos:end="273:62"><expr pos:start="273:56" pos:end="273:62"><name pos:start="273:56" pos:end="273:62"><name pos:start="273:56" pos:end="273:59">args</name><index pos:start="273:60" pos:end="273:62">[<expr pos:start="273:61" pos:end="273:61"><literal type="number" pos:start="273:61" pos:end="273:61">1</literal></expr>]</index></name></expr></argument>,

                                    <argument pos:start="275:37" pos:end="275:44"><expr pos:start="275:37" pos:end="275:44"><name pos:start="275:37" pos:end="275:44">nb_temps</name></expr></argument>, <argument pos:start="275:47" pos:end="275:56"><expr pos:start="275:47" pos:end="275:56"><name pos:start="275:47" pos:end="275:56">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="277:21" pos:end="277:34"><expr pos:start="277:21" pos:end="277:33"><name pos:start="277:21" pos:end="277:28">gen_args</name> <operator pos:start="277:30" pos:end="277:31">+=</operator> <literal type="number" pos:start="277:33" pos:end="277:33">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="281:17" pos:end="281:26"><expr pos:start="281:17" pos:end="281:25"><name pos:start="281:17" pos:end="281:20">args</name> <operator pos:start="281:22" pos:end="281:23">+=</operator> <literal type="number" pos:start="281:25" pos:end="281:25">3</literal></expr>;</expr_stmt>

                <continue pos:start="283:17" pos:end="283:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="287:13" pos:end="287:18">break;</break>

        <default pos:start="289:9" pos:end="289:16">default:</default>

            <break pos:start="291:13" pos:end="291:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="297:9" pos:end="297:69">/* Simplify expression for "op r, a, 0 =&gt; movi r, 0" cases */</comment>

        <switch pos:start="299:9" pos:end="327:9">switch <condition pos:start="299:16" pos:end="299:19">(<expr pos:start="299:17" pos:end="299:18"><name pos:start="299:17" pos:end="299:18">op</name></expr>)</condition> <block pos:start="299:21" pos:end="327:9">{<block_content pos:start="301:9" pos:end="325:18">

        <expr_stmt pos:start="301:9" pos:end="303:27"><expr pos:start="301:9" pos:end="303:27"><call pos:start="301:9" pos:end="301:26"><name pos:start="301:9" pos:end="301:21">CASE_OP_32_64</name><argument_list pos:start="301:22" pos:end="301:26">(<argument pos:start="301:23" pos:end="301:25"><expr pos:start="301:23" pos:end="301:25"><name pos:start="301:23" pos:end="301:25">and</name></expr></argument>)</argument_list></call><operator pos:start="301:27" pos:end="301:27">:</operator>

        <call pos:start="303:9" pos:end="303:26"><name pos:start="303:9" pos:end="303:21">CASE_OP_32_64</name><argument_list pos:start="303:22" pos:end="303:26">(<argument pos:start="303:23" pos:end="303:25"><expr pos:start="303:23" pos:end="303:25"><name pos:start="303:23" pos:end="303:25">mul</name></expr></argument>)</argument_list></call><operator pos:start="303:27" pos:end="303:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="305:13" pos:end="319:13"><if pos:start="305:13" pos:end="319:13">if <condition pos:start="305:16" pos:end="307:44">(<expr pos:start="305:17" pos:end="307:43"><operator pos:start="305:17" pos:end="305:17">(</operator><name pos:start="305:18" pos:end="305:31"><name pos:start="305:18" pos:end="305:22">temps</name><index pos:start="305:23" pos:end="305:31">[<expr pos:start="305:24" pos:end="305:30"><name pos:start="305:24" pos:end="305:30"><name pos:start="305:24" pos:end="305:27">args</name><index pos:start="305:28" pos:end="305:30">[<expr pos:start="305:29" pos:end="305:29"><literal type="number" pos:start="305:29" pos:end="305:29">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="305:32" pos:end="305:32">.</operator><name pos:start="305:33" pos:end="305:37">state</name> <operator pos:start="305:39" pos:end="305:40">==</operator> <name pos:start="305:42" pos:end="305:55">TCG_TEMP_CONST</name>

                <operator pos:start="307:17" pos:end="307:18">&amp;&amp;</operator> <name pos:start="307:20" pos:end="307:33"><name pos:start="307:20" pos:end="307:24">temps</name><index pos:start="307:25" pos:end="307:33">[<expr pos:start="307:26" pos:end="307:32"><name pos:start="307:26" pos:end="307:32"><name pos:start="307:26" pos:end="307:29">args</name><index pos:start="307:30" pos:end="307:32">[<expr pos:start="307:31" pos:end="307:31"><literal type="number" pos:start="307:31" pos:end="307:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="307:34" pos:end="307:34">.</operator><name pos:start="307:35" pos:end="307:37">val</name> <operator pos:start="307:39" pos:end="307:40">==</operator> <literal type="number" pos:start="307:42" pos:end="307:42">0</literal><operator pos:start="307:43" pos:end="307:43">)</operator></expr>)</condition> <block pos:start="307:46" pos:end="319:13">{<block_content pos:start="309:17" pos:end="317:25">

                <expr_stmt pos:start="309:17" pos:end="309:55"><expr pos:start="309:17" pos:end="309:54"><name pos:start="309:17" pos:end="309:37"><name pos:start="309:17" pos:end="309:27">gen_opc_buf</name><index pos:start="309:28" pos:end="309:37">[<expr pos:start="309:29" pos:end="309:36"><name pos:start="309:29" pos:end="309:36">op_index</name></expr>]</index></name> <operator pos:start="309:39" pos:end="309:39">=</operator> <call pos:start="309:41" pos:end="309:54"><name pos:start="309:41" pos:end="309:50">op_to_movi</name><argument_list pos:start="309:51" pos:end="309:54">(<argument pos:start="309:52" pos:end="309:53"><expr pos:start="309:52" pos:end="309:53"><name pos:start="309:52" pos:end="309:53">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="311:17" pos:end="311:77"><expr pos:start="311:17" pos:end="311:76"><call pos:start="311:17" pos:end="311:76"><name pos:start="311:17" pos:end="311:32">tcg_opt_gen_movi</name><argument_list pos:start="311:33" pos:end="311:76">(<argument pos:start="311:34" pos:end="311:41"><expr pos:start="311:34" pos:end="311:41"><name pos:start="311:34" pos:end="311:41">gen_args</name></expr></argument>, <argument pos:start="311:44" pos:end="311:50"><expr pos:start="311:44" pos:end="311:50"><name pos:start="311:44" pos:end="311:50"><name pos:start="311:44" pos:end="311:47">args</name><index pos:start="311:48" pos:end="311:50">[<expr pos:start="311:49" pos:end="311:49"><literal type="number" pos:start="311:49" pos:end="311:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="311:53" pos:end="311:53"><expr pos:start="311:53" pos:end="311:53"><literal type="number" pos:start="311:53" pos:end="311:53">0</literal></expr></argument>, <argument pos:start="311:56" pos:end="311:63"><expr pos:start="311:56" pos:end="311:63"><name pos:start="311:56" pos:end="311:63">nb_temps</name></expr></argument>, <argument pos:start="311:66" pos:end="311:75"><expr pos:start="311:66" pos:end="311:75"><name pos:start="311:66" pos:end="311:75">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:26"><expr pos:start="313:17" pos:end="313:25"><name pos:start="313:17" pos:end="313:20">args</name> <operator pos:start="313:22" pos:end="313:23">+=</operator> <literal type="number" pos:start="313:25" pos:end="313:25">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="315:17" pos:end="315:30"><expr pos:start="315:17" pos:end="315:29"><name pos:start="315:17" pos:end="315:24">gen_args</name> <operator pos:start="315:26" pos:end="315:27">+=</operator> <literal type="number" pos:start="315:29" pos:end="315:29">2</literal></expr>;</expr_stmt>

                <continue pos:start="317:17" pos:end="317:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="321:13" pos:end="321:18">break;</break>

        <default pos:start="323:9" pos:end="323:16">default:</default>

            <break pos:start="325:13" pos:end="325:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="331:9" pos:end="331:68">/* Simplify expression for "op r, a, a =&gt; mov r, a" cases */</comment>

        <switch pos:start="333:9" pos:end="369:9">switch <condition pos:start="333:16" pos:end="333:19">(<expr pos:start="333:17" pos:end="333:18"><name pos:start="333:17" pos:end="333:18">op</name></expr>)</condition> <block pos:start="333:21" pos:end="369:9">{<block_content pos:start="335:9" pos:end="367:18">

        <expr_stmt pos:start="335:9" pos:end="337:27"><expr pos:start="335:9" pos:end="337:27"><call pos:start="335:9" pos:end="335:25"><name pos:start="335:9" pos:end="335:21">CASE_OP_32_64</name><argument_list pos:start="335:22" pos:end="335:25">(<argument pos:start="335:23" pos:end="335:24"><expr pos:start="335:23" pos:end="335:24"><name pos:start="335:23" pos:end="335:24">or</name></expr></argument>)</argument_list></call><operator pos:start="335:26" pos:end="335:26">:</operator>

        <call pos:start="337:9" pos:end="337:26"><name pos:start="337:9" pos:end="337:21">CASE_OP_32_64</name><argument_list pos:start="337:22" pos:end="337:26">(<argument pos:start="337:23" pos:end="337:25"><expr pos:start="337:23" pos:end="337:25"><name pos:start="337:23" pos:end="337:25">and</name></expr></argument>)</argument_list></call><operator pos:start="337:27" pos:end="337:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="339:13" pos:end="361:13"><if pos:start="339:13" pos:end="361:13">if <condition pos:start="339:16" pos:end="339:35">(<expr pos:start="339:17" pos:end="339:34"><name pos:start="339:17" pos:end="339:23"><name pos:start="339:17" pos:end="339:20">args</name><index pos:start="339:21" pos:end="339:23">[<expr pos:start="339:22" pos:end="339:22"><literal type="number" pos:start="339:22" pos:end="339:22">1</literal></expr>]</index></name> <operator pos:start="339:25" pos:end="339:26">==</operator> <name pos:start="339:28" pos:end="339:34"><name pos:start="339:28" pos:end="339:31">args</name><index pos:start="339:32" pos:end="339:34">[<expr pos:start="339:33" pos:end="339:33"><literal type="number" pos:start="339:33" pos:end="339:33">2</literal></expr>]</index></name></expr>)</condition> <block pos:start="339:37" pos:end="361:13">{<block_content pos:start="341:17" pos:end="359:25">

                <if_stmt pos:start="341:17" pos:end="355:17"><if pos:start="341:17" pos:end="345:17">if <condition pos:start="341:20" pos:end="341:39">(<expr pos:start="341:21" pos:end="341:38"><name pos:start="341:21" pos:end="341:27"><name pos:start="341:21" pos:end="341:24">args</name><index pos:start="341:25" pos:end="341:27">[<expr pos:start="341:26" pos:end="341:26"><literal type="number" pos:start="341:26" pos:end="341:26">1</literal></expr>]</index></name> <operator pos:start="341:29" pos:end="341:30">==</operator> <name pos:start="341:32" pos:end="341:38"><name pos:start="341:32" pos:end="341:35">args</name><index pos:start="341:36" pos:end="341:38">[<expr pos:start="341:37" pos:end="341:37"><literal type="number" pos:start="341:37" pos:end="341:37">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="341:41" pos:end="345:17">{<block_content pos:start="343:21" pos:end="343:57">

                    <expr_stmt pos:start="343:21" pos:end="343:57"><expr pos:start="343:21" pos:end="343:56"><name pos:start="343:21" pos:end="343:41"><name pos:start="343:21" pos:end="343:31">gen_opc_buf</name><index pos:start="343:32" pos:end="343:41">[<expr pos:start="343:33" pos:end="343:40"><name pos:start="343:33" pos:end="343:40">op_index</name></expr>]</index></name> <operator pos:start="343:43" pos:end="343:43">=</operator> <name pos:start="343:45" pos:end="343:56">INDEX_op_nop</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="345:19" pos:end="355:17">else <block pos:start="345:24" pos:end="355:17">{<block_content pos:start="347:21" pos:end="353:34">

                    <expr_stmt pos:start="347:21" pos:end="347:58"><expr pos:start="347:21" pos:end="347:57"><name pos:start="347:21" pos:end="347:41"><name pos:start="347:21" pos:end="347:31">gen_opc_buf</name><index pos:start="347:32" pos:end="347:41">[<expr pos:start="347:33" pos:end="347:40"><name pos:start="347:33" pos:end="347:40">op_index</name></expr>]</index></name> <operator pos:start="347:43" pos:end="347:43">=</operator> <call pos:start="347:45" pos:end="347:57"><name pos:start="347:45" pos:end="347:53">op_to_mov</name><argument_list pos:start="347:54" pos:end="347:57">(<argument pos:start="347:55" pos:end="347:56"><expr pos:start="347:55" pos:end="347:56"><name pos:start="347:55" pos:end="347:56">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="349:21" pos:end="351:48"><expr pos:start="349:21" pos:end="351:47"><call pos:start="349:21" pos:end="351:47"><name pos:start="349:21" pos:end="349:35">tcg_opt_gen_mov</name><argument_list pos:start="349:36" pos:end="351:47">(<argument pos:start="349:37" pos:end="349:44"><expr pos:start="349:37" pos:end="349:44"><name pos:start="349:37" pos:end="349:44">gen_args</name></expr></argument>, <argument pos:start="349:47" pos:end="349:53"><expr pos:start="349:47" pos:end="349:53"><name pos:start="349:47" pos:end="349:53"><name pos:start="349:47" pos:end="349:50">args</name><index pos:start="349:51" pos:end="349:53">[<expr pos:start="349:52" pos:end="349:52"><literal type="number" pos:start="349:52" pos:end="349:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="349:56" pos:end="349:62"><expr pos:start="349:56" pos:end="349:62"><name pos:start="349:56" pos:end="349:62"><name pos:start="349:56" pos:end="349:59">args</name><index pos:start="349:60" pos:end="349:62">[<expr pos:start="349:61" pos:end="349:61"><literal type="number" pos:start="349:61" pos:end="349:61">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="349:65" pos:end="349:72"><expr pos:start="349:65" pos:end="349:72"><name pos:start="349:65" pos:end="349:72">nb_temps</name></expr></argument>,

                                    <argument pos:start="351:37" pos:end="351:46"><expr pos:start="351:37" pos:end="351:46"><name pos:start="351:37" pos:end="351:46">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="353:21" pos:end="353:34"><expr pos:start="353:21" pos:end="353:33"><name pos:start="353:21" pos:end="353:28">gen_args</name> <operator pos:start="353:30" pos:end="353:31">+=</operator> <literal type="number" pos:start="353:33" pos:end="353:33">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="357:17" pos:end="357:26"><expr pos:start="357:17" pos:end="357:25"><name pos:start="357:17" pos:end="357:20">args</name> <operator pos:start="357:22" pos:end="357:23">+=</operator> <literal type="number" pos:start="357:25" pos:end="357:25">3</literal></expr>;</expr_stmt>

                <continue pos:start="359:17" pos:end="359:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="363:13" pos:end="363:18">break;</break>

        <default pos:start="365:9" pos:end="365:16">default:</default>

            <break pos:start="367:13" pos:end="367:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="373:9" pos:end="377:71">/* Propagate constants through copy operations and do constant

           folding.  Constants will be substituted to arguments by register

           allocator where needed and possible.  Also detect copies. */</comment>

        <switch pos:start="379:9" pos:end="755:9">switch <condition pos:start="379:16" pos:end="379:19">(<expr pos:start="379:17" pos:end="379:18"><name pos:start="379:17" pos:end="379:18">op</name></expr>)</condition> <block pos:start="379:21" pos:end="755:9">{<block_content pos:start="381:9" pos:end="753:18">

        <expr_stmt pos:start="381:9" pos:end="381:27"><expr pos:start="381:9" pos:end="381:27"><call pos:start="381:9" pos:end="381:26"><name pos:start="381:9" pos:end="381:21">CASE_OP_32_64</name><argument_list pos:start="381:22" pos:end="381:26">(<argument pos:start="381:23" pos:end="381:25"><expr pos:start="381:23" pos:end="381:25"><name pos:start="381:23" pos:end="381:25">mov</name></expr></argument>)</argument_list></call><operator pos:start="381:27" pos:end="381:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="383:13" pos:end="395:13"><if pos:start="383:13" pos:end="395:13">if <condition pos:start="383:16" pos:end="387:38">(<expr pos:start="383:17" pos:end="387:37"><operator pos:start="383:17" pos:end="383:17">(</operator><name pos:start="383:18" pos:end="383:31"><name pos:start="383:18" pos:end="383:22">temps</name><index pos:start="383:23" pos:end="383:31">[<expr pos:start="383:24" pos:end="383:30"><name pos:start="383:24" pos:end="383:30"><name pos:start="383:24" pos:end="383:27">args</name><index pos:start="383:28" pos:end="383:30">[<expr pos:start="383:29" pos:end="383:29"><literal type="number" pos:start="383:29" pos:end="383:29">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="383:32" pos:end="383:32">.</operator><name pos:start="383:33" pos:end="383:37">state</name> <operator pos:start="383:39" pos:end="383:40">==</operator> <name pos:start="383:42" pos:end="383:54">TCG_TEMP_COPY</name>

                <operator pos:start="385:17" pos:end="385:18">&amp;&amp;</operator> <name pos:start="385:20" pos:end="385:33"><name pos:start="385:20" pos:end="385:24">temps</name><index pos:start="385:25" pos:end="385:33">[<expr pos:start="385:26" pos:end="385:32"><name pos:start="385:26" pos:end="385:32"><name pos:start="385:26" pos:end="385:29">args</name><index pos:start="385:30" pos:end="385:32">[<expr pos:start="385:31" pos:end="385:31"><literal type="number" pos:start="385:31" pos:end="385:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="385:34" pos:end="385:34">.</operator><name pos:start="385:35" pos:end="385:37">val</name> <operator pos:start="385:39" pos:end="385:40">==</operator> <name pos:start="385:42" pos:end="385:48"><name pos:start="385:42" pos:end="385:45">args</name><index pos:start="385:46" pos:end="385:48">[<expr pos:start="385:47" pos:end="385:47"><literal type="number" pos:start="385:47" pos:end="385:47">0</literal></expr>]</index></name><operator pos:start="385:49" pos:end="385:49">)</operator>

                <operator pos:start="387:17" pos:end="387:18">||</operator> <name pos:start="387:20" pos:end="387:26"><name pos:start="387:20" pos:end="387:23">args</name><index pos:start="387:24" pos:end="387:26">[<expr pos:start="387:25" pos:end="387:25"><literal type="number" pos:start="387:25" pos:end="387:25">0</literal></expr>]</index></name> <operator pos:start="387:28" pos:end="387:29">==</operator> <name pos:start="387:31" pos:end="387:37"><name pos:start="387:31" pos:end="387:34">args</name><index pos:start="387:35" pos:end="387:37">[<expr pos:start="387:36" pos:end="387:36"><literal type="number" pos:start="387:36" pos:end="387:36">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="387:40" pos:end="395:13">{<block_content pos:start="389:17" pos:end="393:22">

                <expr_stmt pos:start="389:17" pos:end="389:26"><expr pos:start="389:17" pos:end="389:25"><name pos:start="389:17" pos:end="389:20">args</name> <operator pos:start="389:22" pos:end="389:23">+=</operator> <literal type="number" pos:start="389:25" pos:end="389:25">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="391:17" pos:end="391:53"><expr pos:start="391:17" pos:end="391:52"><name pos:start="391:17" pos:end="391:37"><name pos:start="391:17" pos:end="391:27">gen_opc_buf</name><index pos:start="391:28" pos:end="391:37">[<expr pos:start="391:29" pos:end="391:36"><name pos:start="391:29" pos:end="391:36">op_index</name></expr>]</index></name> <operator pos:start="391:39" pos:end="391:39">=</operator> <name pos:start="391:41" pos:end="391:52">INDEX_op_nop</name></expr>;</expr_stmt>

                <break pos:start="393:17" pos:end="393:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="397:13" pos:end="409:13"><if pos:start="397:13" pos:end="409:13">if <condition pos:start="397:16" pos:end="397:55">(<expr pos:start="397:17" pos:end="397:54"><name pos:start="397:17" pos:end="397:30"><name pos:start="397:17" pos:end="397:21">temps</name><index pos:start="397:22" pos:end="397:30">[<expr pos:start="397:23" pos:end="397:29"><name pos:start="397:23" pos:end="397:29"><name pos:start="397:23" pos:end="397:26">args</name><index pos:start="397:27" pos:end="397:29">[<expr pos:start="397:28" pos:end="397:28"><literal type="number" pos:start="397:28" pos:end="397:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="397:31" pos:end="397:31">.</operator><name pos:start="397:32" pos:end="397:36">state</name> <operator pos:start="397:38" pos:end="397:39">!=</operator> <name pos:start="397:41" pos:end="397:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="397:57" pos:end="409:13">{<block_content pos:start="399:17" pos:end="407:22">

                <expr_stmt pos:start="399:17" pos:end="401:54"><expr pos:start="399:17" pos:end="401:53"><call pos:start="399:17" pos:end="401:53"><name pos:start="399:17" pos:end="399:31">tcg_opt_gen_mov</name><argument_list pos:start="399:32" pos:end="401:53">(<argument pos:start="399:33" pos:end="399:40"><expr pos:start="399:33" pos:end="399:40"><name pos:start="399:33" pos:end="399:40">gen_args</name></expr></argument>, <argument pos:start="399:43" pos:end="399:49"><expr pos:start="399:43" pos:end="399:49"><name pos:start="399:43" pos:end="399:49"><name pos:start="399:43" pos:end="399:46">args</name><index pos:start="399:47" pos:end="399:49">[<expr pos:start="399:48" pos:end="399:48"><literal type="number" pos:start="399:48" pos:end="399:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="399:52" pos:end="399:58"><expr pos:start="399:52" pos:end="399:58"><name pos:start="399:52" pos:end="399:58"><name pos:start="399:52" pos:end="399:55">args</name><index pos:start="399:56" pos:end="399:58">[<expr pos:start="399:57" pos:end="399:57"><literal type="number" pos:start="399:57" pos:end="399:57">1</literal></expr>]</index></name></expr></argument>,

                                <argument pos:start="401:33" pos:end="401:40"><expr pos:start="401:33" pos:end="401:40"><name pos:start="401:33" pos:end="401:40">nb_temps</name></expr></argument>, <argument pos:start="401:43" pos:end="401:52"><expr pos:start="401:43" pos:end="401:52"><name pos:start="401:43" pos:end="401:52">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="403:17" pos:end="403:30"><expr pos:start="403:17" pos:end="403:29"><name pos:start="403:17" pos:end="403:24">gen_args</name> <operator pos:start="403:26" pos:end="403:27">+=</operator> <literal type="number" pos:start="403:29" pos:end="403:29">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="405:17" pos:end="405:26"><expr pos:start="405:17" pos:end="405:25"><name pos:start="405:17" pos:end="405:20">args</name> <operator pos:start="405:22" pos:end="405:23">+=</operator> <literal type="number" pos:start="405:25" pos:end="405:25">2</literal></expr>;</expr_stmt>

                <break pos:start="407:17" pos:end="407:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="411:13" pos:end="413:42">/* Source argument is constant.  Rewrite the operation and

               let movi case handle it. */</comment>

            <expr_stmt pos:start="415:13" pos:end="415:32"><expr pos:start="415:13" pos:end="415:31"><name pos:start="415:13" pos:end="415:14">op</name> <operator pos:start="415:16" pos:end="415:16">=</operator> <call pos:start="415:18" pos:end="415:31"><name pos:start="415:18" pos:end="415:27">op_to_movi</name><argument_list pos:start="415:28" pos:end="415:31">(<argument pos:start="415:29" pos:end="415:30"><expr pos:start="415:29" pos:end="415:30"><name pos:start="415:29" pos:end="415:30">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="417:13" pos:end="417:39"><expr pos:start="417:13" pos:end="417:38"><name pos:start="417:13" pos:end="417:33"><name pos:start="417:13" pos:end="417:23">gen_opc_buf</name><index pos:start="417:24" pos:end="417:33">[<expr pos:start="417:25" pos:end="417:32"><name pos:start="417:25" pos:end="417:32">op_index</name></expr>]</index></name> <operator pos:start="417:35" pos:end="417:35">=</operator> <name pos:start="417:37" pos:end="417:38">op</name></expr>;</expr_stmt>

            <expr_stmt pos:start="419:13" pos:end="419:41"><expr pos:start="419:13" pos:end="419:40"><name pos:start="419:13" pos:end="419:19"><name pos:start="419:13" pos:end="419:16">args</name><index pos:start="419:17" pos:end="419:19">[<expr pos:start="419:18" pos:end="419:18"><literal type="number" pos:start="419:18" pos:end="419:18">1</literal></expr>]</index></name> <operator pos:start="419:21" pos:end="419:21">=</operator> <name pos:start="419:23" pos:end="419:36"><name pos:start="419:23" pos:end="419:27">temps</name><index pos:start="419:28" pos:end="419:36">[<expr pos:start="419:29" pos:end="419:35"><name pos:start="419:29" pos:end="419:35"><name pos:start="419:29" pos:end="419:32">args</name><index pos:start="419:33" pos:end="419:35">[<expr pos:start="419:34" pos:end="419:34"><literal type="number" pos:start="419:34" pos:end="419:34">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="419:37" pos:end="419:37">.</operator><name pos:start="419:38" pos:end="419:40">val</name></expr>;</expr_stmt>

            <comment type="block" pos:start="421:13" pos:end="421:29">/* fallthrough */</comment>

        <expr_stmt pos:start="423:9" pos:end="425:79"><expr pos:start="423:9" pos:end="425:78"><call pos:start="423:9" pos:end="423:27"><name pos:start="423:9" pos:end="423:21">CASE_OP_32_64</name><argument_list pos:start="423:22" pos:end="423:27">(<argument pos:start="423:23" pos:end="423:26"><expr pos:start="423:23" pos:end="423:26"><name pos:start="423:23" pos:end="423:26">movi</name></expr></argument>)</argument_list></call><operator pos:start="423:28" pos:end="423:28">:</operator>

            <call pos:start="425:13" pos:end="425:78"><name pos:start="425:13" pos:end="425:28">tcg_opt_gen_movi</name><argument_list pos:start="425:29" pos:end="425:78">(<argument pos:start="425:30" pos:end="425:37"><expr pos:start="425:30" pos:end="425:37"><name pos:start="425:30" pos:end="425:37">gen_args</name></expr></argument>, <argument pos:start="425:40" pos:end="425:46"><expr pos:start="425:40" pos:end="425:46"><name pos:start="425:40" pos:end="425:46"><name pos:start="425:40" pos:end="425:43">args</name><index pos:start="425:44" pos:end="425:46">[<expr pos:start="425:45" pos:end="425:45"><literal type="number" pos:start="425:45" pos:end="425:45">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="425:49" pos:end="425:55"><expr pos:start="425:49" pos:end="425:55"><name pos:start="425:49" pos:end="425:55"><name pos:start="425:49" pos:end="425:52">args</name><index pos:start="425:53" pos:end="425:55">[<expr pos:start="425:54" pos:end="425:54"><literal type="number" pos:start="425:54" pos:end="425:54">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="425:58" pos:end="425:65"><expr pos:start="425:58" pos:end="425:65"><name pos:start="425:58" pos:end="425:65">nb_temps</name></expr></argument>, <argument pos:start="425:68" pos:end="425:77"><expr pos:start="425:68" pos:end="425:77"><name pos:start="425:68" pos:end="425:77">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:26"><expr pos:start="427:13" pos:end="427:25"><name pos:start="427:13" pos:end="427:20">gen_args</name> <operator pos:start="427:22" pos:end="427:23">+=</operator> <literal type="number" pos:start="427:25" pos:end="427:25">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="429:13" pos:end="429:22"><expr pos:start="429:13" pos:end="429:21"><name pos:start="429:13" pos:end="429:16">args</name> <operator pos:start="429:18" pos:end="429:19">+=</operator> <literal type="number" pos:start="429:21" pos:end="429:21">2</literal></expr>;</expr_stmt>

            <break pos:start="431:13" pos:end="431:18">break;</break>

        <expr_stmt pos:start="433:9" pos:end="443:30"><expr pos:start="433:9" pos:end="443:30"><call pos:start="433:9" pos:end="433:26"><name pos:start="433:9" pos:end="433:21">CASE_OP_32_64</name><argument_list pos:start="433:22" pos:end="433:26">(<argument pos:start="433:23" pos:end="433:25"><expr pos:start="433:23" pos:end="433:25"><name pos:start="433:23" pos:end="433:25">not</name></expr></argument>)</argument_list></call><operator pos:start="433:27" pos:end="433:27">:</operator>

        <call pos:start="435:9" pos:end="435:26"><name pos:start="435:9" pos:end="435:21">CASE_OP_32_64</name><argument_list pos:start="435:22" pos:end="435:26">(<argument pos:start="435:23" pos:end="435:25"><expr pos:start="435:23" pos:end="435:25"><name pos:start="435:23" pos:end="435:25">neg</name></expr></argument>)</argument_list></call><operator pos:start="435:27" pos:end="435:27">:</operator>

        <call pos:start="437:9" pos:end="437:28"><name pos:start="437:9" pos:end="437:21">CASE_OP_32_64</name><argument_list pos:start="437:22" pos:end="437:28">(<argument pos:start="437:23" pos:end="437:27"><expr pos:start="437:23" pos:end="437:27"><name pos:start="437:23" pos:end="437:27">ext8s</name></expr></argument>)</argument_list></call><operator pos:start="437:29" pos:end="437:29">:</operator>

        <call pos:start="439:9" pos:end="439:28"><name pos:start="439:9" pos:end="439:21">CASE_OP_32_64</name><argument_list pos:start="439:22" pos:end="439:28">(<argument pos:start="439:23" pos:end="439:27"><expr pos:start="439:23" pos:end="439:27"><name pos:start="439:23" pos:end="439:27">ext8u</name></expr></argument>)</argument_list></call><operator pos:start="439:29" pos:end="439:29">:</operator>

        <call pos:start="441:9" pos:end="441:29"><name pos:start="441:9" pos:end="441:21">CASE_OP_32_64</name><argument_list pos:start="441:22" pos:end="441:29">(<argument pos:start="441:23" pos:end="441:28"><expr pos:start="441:23" pos:end="441:28"><name pos:start="441:23" pos:end="441:28">ext16s</name></expr></argument>)</argument_list></call><operator pos:start="441:30" pos:end="441:30">:</operator>

        <call pos:start="443:9" pos:end="443:29"><name pos:start="443:9" pos:end="443:21">CASE_OP_32_64</name><argument_list pos:start="443:22" pos:end="443:29">(<argument pos:start="443:23" pos:end="443:28"><expr pos:start="443:23" pos:end="443:28"><name pos:start="443:23" pos:end="443:28">ext16u</name></expr></argument>)</argument_list></call><operator pos:start="443:30" pos:end="443:30">:</operator></expr></expr_stmt>

        <case pos:start="445:9" pos:end="445:33">case <expr pos:start="445:14" pos:end="445:32"><name pos:start="445:14" pos:end="445:32">INDEX_op_ext32s_i64</name></expr>:</case>

        <case pos:start="447:9" pos:end="447:33">case <expr pos:start="447:14" pos:end="447:32"><name pos:start="447:14" pos:end="447:32">INDEX_op_ext32u_i64</name></expr>:</case>

            <if_stmt pos:start="449:13" pos:end="465:13"><if pos:start="449:13" pos:end="457:13">if <condition pos:start="449:16" pos:end="449:55">(<expr pos:start="449:17" pos:end="449:54"><name pos:start="449:17" pos:end="449:30"><name pos:start="449:17" pos:end="449:21">temps</name><index pos:start="449:22" pos:end="449:30">[<expr pos:start="449:23" pos:end="449:29"><name pos:start="449:23" pos:end="449:29"><name pos:start="449:23" pos:end="449:26">args</name><index pos:start="449:27" pos:end="449:29">[<expr pos:start="449:28" pos:end="449:28"><literal type="number" pos:start="449:28" pos:end="449:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="449:31" pos:end="449:31">.</operator><name pos:start="449:32" pos:end="449:36">state</name> <operator pos:start="449:38" pos:end="449:39">==</operator> <name pos:start="449:41" pos:end="449:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="449:57" pos:end="457:13">{<block_content pos:start="451:17" pos:end="455:79">

                <expr_stmt pos:start="451:17" pos:end="451:55"><expr pos:start="451:17" pos:end="451:54"><name pos:start="451:17" pos:end="451:37"><name pos:start="451:17" pos:end="451:27">gen_opc_buf</name><index pos:start="451:28" pos:end="451:37">[<expr pos:start="451:29" pos:end="451:36"><name pos:start="451:29" pos:end="451:36">op_index</name></expr>]</index></name> <operator pos:start="451:39" pos:end="451:39">=</operator> <call pos:start="451:41" pos:end="451:54"><name pos:start="451:41" pos:end="451:50">op_to_movi</name><argument_list pos:start="451:51" pos:end="451:54">(<argument pos:start="451:52" pos:end="451:53"><expr pos:start="451:52" pos:end="451:53"><name pos:start="451:52" pos:end="451:53">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="453:17" pos:end="453:69"><expr pos:start="453:17" pos:end="453:68"><name pos:start="453:17" pos:end="453:19">tmp</name> <operator pos:start="453:21" pos:end="453:21">=</operator> <call pos:start="453:23" pos:end="453:68"><name pos:start="453:23" pos:end="453:41">do_constant_folding</name><argument_list pos:start="453:42" pos:end="453:68">(<argument pos:start="453:43" pos:end="453:44"><expr pos:start="453:43" pos:end="453:44"><name pos:start="453:43" pos:end="453:44">op</name></expr></argument>, <argument pos:start="453:47" pos:end="453:64"><expr pos:start="453:47" pos:end="453:64"><name pos:start="453:47" pos:end="453:60"><name pos:start="453:47" pos:end="453:51">temps</name><index pos:start="453:52" pos:end="453:60">[<expr pos:start="453:53" pos:end="453:59"><name pos:start="453:53" pos:end="453:59"><name pos:start="453:53" pos:end="453:56">args</name><index pos:start="453:57" pos:end="453:59">[<expr pos:start="453:58" pos:end="453:58"><literal type="number" pos:start="453:58" pos:end="453:58">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="453:61" pos:end="453:61">.</operator><name pos:start="453:62" pos:end="453:64">val</name></expr></argument>, <argument pos:start="453:67" pos:end="453:67"><expr pos:start="453:67" pos:end="453:67"><literal type="number" pos:start="453:67" pos:end="453:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="455:17" pos:end="455:79"><expr pos:start="455:17" pos:end="455:78"><call pos:start="455:17" pos:end="455:78"><name pos:start="455:17" pos:end="455:32">tcg_opt_gen_movi</name><argument_list pos:start="455:33" pos:end="455:78">(<argument pos:start="455:34" pos:end="455:41"><expr pos:start="455:34" pos:end="455:41"><name pos:start="455:34" pos:end="455:41">gen_args</name></expr></argument>, <argument pos:start="455:44" pos:end="455:50"><expr pos:start="455:44" pos:end="455:50"><name pos:start="455:44" pos:end="455:50"><name pos:start="455:44" pos:end="455:47">args</name><index pos:start="455:48" pos:end="455:50">[<expr pos:start="455:49" pos:end="455:49"><literal type="number" pos:start="455:49" pos:end="455:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="455:53" pos:end="455:55"><expr pos:start="455:53" pos:end="455:55"><name pos:start="455:53" pos:end="455:55">tmp</name></expr></argument>, <argument pos:start="455:58" pos:end="455:65"><expr pos:start="455:58" pos:end="455:65"><name pos:start="455:58" pos:end="455:65">nb_temps</name></expr></argument>, <argument pos:start="455:68" pos:end="455:77"><expr pos:start="455:68" pos:end="455:77"><name pos:start="455:68" pos:end="455:77">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="457:15" pos:end="465:13">else <block pos:start="457:20" pos:end="465:13">{<block_content pos:start="459:17" pos:end="463:38">

                <expr_stmt pos:start="459:17" pos:end="459:58"><expr pos:start="459:17" pos:end="459:57"><call pos:start="459:17" pos:end="459:57"><name pos:start="459:17" pos:end="459:26">reset_temp</name><argument_list pos:start="459:27" pos:end="459:57">(<argument pos:start="459:28" pos:end="459:34"><expr pos:start="459:28" pos:end="459:34"><name pos:start="459:28" pos:end="459:34"><name pos:start="459:28" pos:end="459:31">args</name><index pos:start="459:32" pos:end="459:34">[<expr pos:start="459:33" pos:end="459:33"><literal type="number" pos:start="459:33" pos:end="459:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="459:37" pos:end="459:44"><expr pos:start="459:37" pos:end="459:44"><name pos:start="459:37" pos:end="459:44">nb_temps</name></expr></argument>, <argument pos:start="459:47" pos:end="459:56"><expr pos:start="459:47" pos:end="459:56"><name pos:start="459:47" pos:end="459:56">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="461:17" pos:end="461:38"><expr pos:start="461:17" pos:end="461:37"><name pos:start="461:17" pos:end="461:27"><name pos:start="461:17" pos:end="461:24">gen_args</name><index pos:start="461:25" pos:end="461:27">[<expr pos:start="461:26" pos:end="461:26"><literal type="number" pos:start="461:26" pos:end="461:26">0</literal></expr>]</index></name> <operator pos:start="461:29" pos:end="461:29">=</operator> <name pos:start="461:31" pos:end="461:37"><name pos:start="461:31" pos:end="461:34">args</name><index pos:start="461:35" pos:end="461:37">[<expr pos:start="461:36" pos:end="461:36"><literal type="number" pos:start="461:36" pos:end="461:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="463:17" pos:end="463:38"><expr pos:start="463:17" pos:end="463:37"><name pos:start="463:17" pos:end="463:27"><name pos:start="463:17" pos:end="463:24">gen_args</name><index pos:start="463:25" pos:end="463:27">[<expr pos:start="463:26" pos:end="463:26"><literal type="number" pos:start="463:26" pos:end="463:26">1</literal></expr>]</index></name> <operator pos:start="463:29" pos:end="463:29">=</operator> <name pos:start="463:31" pos:end="463:37"><name pos:start="463:31" pos:end="463:34">args</name><index pos:start="463:35" pos:end="463:37">[<expr pos:start="463:36" pos:end="463:36"><literal type="number" pos:start="463:36" pos:end="463:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="467:13" pos:end="467:26"><expr pos:start="467:13" pos:end="467:25"><name pos:start="467:13" pos:end="467:20">gen_args</name> <operator pos:start="467:22" pos:end="467:23">+=</operator> <literal type="number" pos:start="467:25" pos:end="467:25">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="469:13" pos:end="469:22"><expr pos:start="469:13" pos:end="469:21"><name pos:start="469:13" pos:end="469:16">args</name> <operator pos:start="469:18" pos:end="469:19">+=</operator> <literal type="number" pos:start="469:21" pos:end="469:21">2</literal></expr>;</expr_stmt>

            <break pos:start="471:13" pos:end="471:18">break;</break>

        <expr_stmt pos:start="473:9" pos:end="503:27"><expr pos:start="473:9" pos:end="503:27"><call pos:start="473:9" pos:end="473:26"><name pos:start="473:9" pos:end="473:21">CASE_OP_32_64</name><argument_list pos:start="473:22" pos:end="473:26">(<argument pos:start="473:23" pos:end="473:25"><expr pos:start="473:23" pos:end="473:25"><name pos:start="473:23" pos:end="473:25">add</name></expr></argument>)</argument_list></call><operator pos:start="473:27" pos:end="473:27">:</operator>

        <call pos:start="475:9" pos:end="475:26"><name pos:start="475:9" pos:end="475:21">CASE_OP_32_64</name><argument_list pos:start="475:22" pos:end="475:26">(<argument pos:start="475:23" pos:end="475:25"><expr pos:start="475:23" pos:end="475:25"><name pos:start="475:23" pos:end="475:25">sub</name></expr></argument>)</argument_list></call><operator pos:start="475:27" pos:end="475:27">:</operator>

        <call pos:start="477:9" pos:end="477:26"><name pos:start="477:9" pos:end="477:21">CASE_OP_32_64</name><argument_list pos:start="477:22" pos:end="477:26">(<argument pos:start="477:23" pos:end="477:25"><expr pos:start="477:23" pos:end="477:25"><name pos:start="477:23" pos:end="477:25">mul</name></expr></argument>)</argument_list></call><operator pos:start="477:27" pos:end="477:27">:</operator>

        <call pos:start="479:9" pos:end="479:25"><name pos:start="479:9" pos:end="479:21">CASE_OP_32_64</name><argument_list pos:start="479:22" pos:end="479:25">(<argument pos:start="479:23" pos:end="479:24"><expr pos:start="479:23" pos:end="479:24"><name pos:start="479:23" pos:end="479:24">or</name></expr></argument>)</argument_list></call><operator pos:start="479:26" pos:end="479:26">:</operator>

        <call pos:start="481:9" pos:end="481:26"><name pos:start="481:9" pos:end="481:21">CASE_OP_32_64</name><argument_list pos:start="481:22" pos:end="481:26">(<argument pos:start="481:23" pos:end="481:25"><expr pos:start="481:23" pos:end="481:25"><name pos:start="481:23" pos:end="481:25">and</name></expr></argument>)</argument_list></call><operator pos:start="481:27" pos:end="481:27">:</operator>

        <call pos:start="483:9" pos:end="483:26"><name pos:start="483:9" pos:end="483:21">CASE_OP_32_64</name><argument_list pos:start="483:22" pos:end="483:26">(<argument pos:start="483:23" pos:end="483:25"><expr pos:start="483:23" pos:end="483:25"><name pos:start="483:23" pos:end="483:25">xor</name></expr></argument>)</argument_list></call><operator pos:start="483:27" pos:end="483:27">:</operator>

        <call pos:start="485:9" pos:end="485:26"><name pos:start="485:9" pos:end="485:21">CASE_OP_32_64</name><argument_list pos:start="485:22" pos:end="485:26">(<argument pos:start="485:23" pos:end="485:25"><expr pos:start="485:23" pos:end="485:25"><name pos:start="485:23" pos:end="485:25">shl</name></expr></argument>)</argument_list></call><operator pos:start="485:27" pos:end="485:27">:</operator>

        <call pos:start="487:9" pos:end="487:26"><name pos:start="487:9" pos:end="487:21">CASE_OP_32_64</name><argument_list pos:start="487:22" pos:end="487:26">(<argument pos:start="487:23" pos:end="487:25"><expr pos:start="487:23" pos:end="487:25"><name pos:start="487:23" pos:end="487:25">shr</name></expr></argument>)</argument_list></call><operator pos:start="487:27" pos:end="487:27">:</operator>

        <call pos:start="489:9" pos:end="489:26"><name pos:start="489:9" pos:end="489:21">CASE_OP_32_64</name><argument_list pos:start="489:22" pos:end="489:26">(<argument pos:start="489:23" pos:end="489:25"><expr pos:start="489:23" pos:end="489:25"><name pos:start="489:23" pos:end="489:25">sar</name></expr></argument>)</argument_list></call><operator pos:start="489:27" pos:end="489:27">:</operator>

        <call pos:start="491:9" pos:end="491:27"><name pos:start="491:9" pos:end="491:21">CASE_OP_32_64</name><argument_list pos:start="491:22" pos:end="491:27">(<argument pos:start="491:23" pos:end="491:26"><expr pos:start="491:23" pos:end="491:26"><name pos:start="491:23" pos:end="491:26">rotl</name></expr></argument>)</argument_list></call><operator pos:start="491:28" pos:end="491:28">:</operator>

        <call pos:start="493:9" pos:end="493:27"><name pos:start="493:9" pos:end="493:21">CASE_OP_32_64</name><argument_list pos:start="493:22" pos:end="493:27">(<argument pos:start="493:23" pos:end="493:26"><expr pos:start="493:23" pos:end="493:26"><name pos:start="493:23" pos:end="493:26">rotr</name></expr></argument>)</argument_list></call><operator pos:start="493:28" pos:end="493:28">:</operator>

        <call pos:start="495:9" pos:end="495:27"><name pos:start="495:9" pos:end="495:21">CASE_OP_32_64</name><argument_list pos:start="495:22" pos:end="495:27">(<argument pos:start="495:23" pos:end="495:26"><expr pos:start="495:23" pos:end="495:26"><name pos:start="495:23" pos:end="495:26">andc</name></expr></argument>)</argument_list></call><operator pos:start="495:28" pos:end="495:28">:</operator>

        <call pos:start="497:9" pos:end="497:26"><name pos:start="497:9" pos:end="497:21">CASE_OP_32_64</name><argument_list pos:start="497:22" pos:end="497:26">(<argument pos:start="497:23" pos:end="497:25"><expr pos:start="497:23" pos:end="497:25"><name pos:start="497:23" pos:end="497:25">orc</name></expr></argument>)</argument_list></call><operator pos:start="497:27" pos:end="497:27">:</operator>

        <call pos:start="499:9" pos:end="499:26"><name pos:start="499:9" pos:end="499:21">CASE_OP_32_64</name><argument_list pos:start="499:22" pos:end="499:26">(<argument pos:start="499:23" pos:end="499:25"><expr pos:start="499:23" pos:end="499:25"><name pos:start="499:23" pos:end="499:25">eqv</name></expr></argument>)</argument_list></call><operator pos:start="499:27" pos:end="499:27">:</operator>

        <call pos:start="501:9" pos:end="501:27"><name pos:start="501:9" pos:end="501:21">CASE_OP_32_64</name><argument_list pos:start="501:22" pos:end="501:27">(<argument pos:start="501:23" pos:end="501:26"><expr pos:start="501:23" pos:end="501:26"><name pos:start="501:23" pos:end="501:26">nand</name></expr></argument>)</argument_list></call><operator pos:start="501:28" pos:end="501:28">:</operator>

        <call pos:start="503:9" pos:end="503:26"><name pos:start="503:9" pos:end="503:21">CASE_OP_32_64</name><argument_list pos:start="503:22" pos:end="503:26">(<argument pos:start="503:23" pos:end="503:25"><expr pos:start="503:23" pos:end="503:25"><name pos:start="503:23" pos:end="503:25">nor</name></expr></argument>)</argument_list></call><operator pos:start="503:27" pos:end="503:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="505:13" pos:end="531:13"><if pos:start="505:13" pos:end="519:13">if <condition pos:start="505:16" pos:end="507:58">(<expr pos:start="505:17" pos:end="507:57"><name pos:start="505:17" pos:end="505:30"><name pos:start="505:17" pos:end="505:21">temps</name><index pos:start="505:22" pos:end="505:30">[<expr pos:start="505:23" pos:end="505:29"><name pos:start="505:23" pos:end="505:29"><name pos:start="505:23" pos:end="505:26">args</name><index pos:start="505:27" pos:end="505:29">[<expr pos:start="505:28" pos:end="505:28"><literal type="number" pos:start="505:28" pos:end="505:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="505:31" pos:end="505:31">.</operator><name pos:start="505:32" pos:end="505:36">state</name> <operator pos:start="505:38" pos:end="505:39">==</operator> <name pos:start="505:41" pos:end="505:54">TCG_TEMP_CONST</name>

                <operator pos:start="507:17" pos:end="507:18">&amp;&amp;</operator> <name pos:start="507:20" pos:end="507:33"><name pos:start="507:20" pos:end="507:24">temps</name><index pos:start="507:25" pos:end="507:33">[<expr pos:start="507:26" pos:end="507:32"><name pos:start="507:26" pos:end="507:32"><name pos:start="507:26" pos:end="507:29">args</name><index pos:start="507:30" pos:end="507:32">[<expr pos:start="507:31" pos:end="507:31"><literal type="number" pos:start="507:31" pos:end="507:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="507:34" pos:end="507:34">.</operator><name pos:start="507:35" pos:end="507:39">state</name> <operator pos:start="507:41" pos:end="507:42">==</operator> <name pos:start="507:44" pos:end="507:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="507:60" pos:end="519:13">{<block_content pos:start="509:17" pos:end="517:30">

                <expr_stmt pos:start="509:17" pos:end="509:55"><expr pos:start="509:17" pos:end="509:54"><name pos:start="509:17" pos:end="509:37"><name pos:start="509:17" pos:end="509:27">gen_opc_buf</name><index pos:start="509:28" pos:end="509:37">[<expr pos:start="509:29" pos:end="509:36"><name pos:start="509:29" pos:end="509:36">op_index</name></expr>]</index></name> <operator pos:start="509:39" pos:end="509:39">=</operator> <call pos:start="509:41" pos:end="509:54"><name pos:start="509:41" pos:end="509:50">op_to_movi</name><argument_list pos:start="509:51" pos:end="509:54">(<argument pos:start="509:52" pos:end="509:53"><expr pos:start="509:52" pos:end="509:53"><name pos:start="509:52" pos:end="509:53">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="511:17" pos:end="513:62"><expr pos:start="511:17" pos:end="513:61"><name pos:start="511:17" pos:end="511:19">tmp</name> <operator pos:start="511:21" pos:end="511:21">=</operator> <call pos:start="511:23" pos:end="513:61"><name pos:start="511:23" pos:end="511:41">do_constant_folding</name><argument_list pos:start="511:42" pos:end="513:61">(<argument pos:start="511:43" pos:end="511:44"><expr pos:start="511:43" pos:end="511:44"><name pos:start="511:43" pos:end="511:44">op</name></expr></argument>, <argument pos:start="511:47" pos:end="511:64"><expr pos:start="511:47" pos:end="511:64"><name pos:start="511:47" pos:end="511:60"><name pos:start="511:47" pos:end="511:51">temps</name><index pos:start="511:52" pos:end="511:60">[<expr pos:start="511:53" pos:end="511:59"><name pos:start="511:53" pos:end="511:59"><name pos:start="511:53" pos:end="511:56">args</name><index pos:start="511:57" pos:end="511:59">[<expr pos:start="511:58" pos:end="511:58"><literal type="number" pos:start="511:58" pos:end="511:58">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="511:61" pos:end="511:61">.</operator><name pos:start="511:62" pos:end="511:64">val</name></expr></argument>,

                                          <argument pos:start="513:43" pos:end="513:60"><expr pos:start="513:43" pos:end="513:60"><name pos:start="513:43" pos:end="513:56"><name pos:start="513:43" pos:end="513:47">temps</name><index pos:start="513:48" pos:end="513:56">[<expr pos:start="513:49" pos:end="513:55"><name pos:start="513:49" pos:end="513:55"><name pos:start="513:49" pos:end="513:52">args</name><index pos:start="513:53" pos:end="513:55">[<expr pos:start="513:54" pos:end="513:54"><literal type="number" pos:start="513:54" pos:end="513:54">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="513:57" pos:end="513:57">.</operator><name pos:start="513:58" pos:end="513:60">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="515:17" pos:end="515:79"><expr pos:start="515:17" pos:end="515:78"><call pos:start="515:17" pos:end="515:78"><name pos:start="515:17" pos:end="515:32">tcg_opt_gen_movi</name><argument_list pos:start="515:33" pos:end="515:78">(<argument pos:start="515:34" pos:end="515:41"><expr pos:start="515:34" pos:end="515:41"><name pos:start="515:34" pos:end="515:41">gen_args</name></expr></argument>, <argument pos:start="515:44" pos:end="515:50"><expr pos:start="515:44" pos:end="515:50"><name pos:start="515:44" pos:end="515:50"><name pos:start="515:44" pos:end="515:47">args</name><index pos:start="515:48" pos:end="515:50">[<expr pos:start="515:49" pos:end="515:49"><literal type="number" pos:start="515:49" pos:end="515:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="515:53" pos:end="515:55"><expr pos:start="515:53" pos:end="515:55"><name pos:start="515:53" pos:end="515:55">tmp</name></expr></argument>, <argument pos:start="515:58" pos:end="515:65"><expr pos:start="515:58" pos:end="515:65"><name pos:start="515:58" pos:end="515:65">nb_temps</name></expr></argument>, <argument pos:start="515:68" pos:end="515:77"><expr pos:start="515:68" pos:end="515:77"><name pos:start="515:68" pos:end="515:77">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="517:17" pos:end="517:30"><expr pos:start="517:17" pos:end="517:29"><name pos:start="517:17" pos:end="517:24">gen_args</name> <operator pos:start="517:26" pos:end="517:27">+=</operator> <literal type="number" pos:start="517:29" pos:end="517:29">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="519:15" pos:end="531:13">else <block pos:start="519:20" pos:end="531:13">{<block_content pos:start="521:17" pos:end="529:30">

                <expr_stmt pos:start="521:17" pos:end="521:58"><expr pos:start="521:17" pos:end="521:57"><call pos:start="521:17" pos:end="521:57"><name pos:start="521:17" pos:end="521:26">reset_temp</name><argument_list pos:start="521:27" pos:end="521:57">(<argument pos:start="521:28" pos:end="521:34"><expr pos:start="521:28" pos:end="521:34"><name pos:start="521:28" pos:end="521:34"><name pos:start="521:28" pos:end="521:31">args</name><index pos:start="521:32" pos:end="521:34">[<expr pos:start="521:33" pos:end="521:33"><literal type="number" pos:start="521:33" pos:end="521:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="521:37" pos:end="521:44"><expr pos:start="521:37" pos:end="521:44"><name pos:start="521:37" pos:end="521:44">nb_temps</name></expr></argument>, <argument pos:start="521:47" pos:end="521:56"><expr pos:start="521:47" pos:end="521:56"><name pos:start="521:47" pos:end="521:56">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="523:17" pos:end="523:38"><expr pos:start="523:17" pos:end="523:37"><name pos:start="523:17" pos:end="523:27"><name pos:start="523:17" pos:end="523:24">gen_args</name><index pos:start="523:25" pos:end="523:27">[<expr pos:start="523:26" pos:end="523:26"><literal type="number" pos:start="523:26" pos:end="523:26">0</literal></expr>]</index></name> <operator pos:start="523:29" pos:end="523:29">=</operator> <name pos:start="523:31" pos:end="523:37"><name pos:start="523:31" pos:end="523:34">args</name><index pos:start="523:35" pos:end="523:37">[<expr pos:start="523:36" pos:end="523:36"><literal type="number" pos:start="523:36" pos:end="523:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="525:17" pos:end="525:38"><expr pos:start="525:17" pos:end="525:37"><name pos:start="525:17" pos:end="525:27"><name pos:start="525:17" pos:end="525:24">gen_args</name><index pos:start="525:25" pos:end="525:27">[<expr pos:start="525:26" pos:end="525:26"><literal type="number" pos:start="525:26" pos:end="525:26">1</literal></expr>]</index></name> <operator pos:start="525:29" pos:end="525:29">=</operator> <name pos:start="525:31" pos:end="525:37"><name pos:start="525:31" pos:end="525:34">args</name><index pos:start="525:35" pos:end="525:37">[<expr pos:start="525:36" pos:end="525:36"><literal type="number" pos:start="525:36" pos:end="525:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="527:17" pos:end="527:38"><expr pos:start="527:17" pos:end="527:37"><name pos:start="527:17" pos:end="527:27"><name pos:start="527:17" pos:end="527:24">gen_args</name><index pos:start="527:25" pos:end="527:27">[<expr pos:start="527:26" pos:end="527:26"><literal type="number" pos:start="527:26" pos:end="527:26">2</literal></expr>]</index></name> <operator pos:start="527:29" pos:end="527:29">=</operator> <name pos:start="527:31" pos:end="527:37"><name pos:start="527:31" pos:end="527:34">args</name><index pos:start="527:35" pos:end="527:37">[<expr pos:start="527:36" pos:end="527:36"><literal type="number" pos:start="527:36" pos:end="527:36">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="529:17" pos:end="529:30"><expr pos:start="529:17" pos:end="529:29"><name pos:start="529:17" pos:end="529:24">gen_args</name> <operator pos:start="529:26" pos:end="529:27">+=</operator> <literal type="number" pos:start="529:29" pos:end="529:29">3</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="533:13" pos:end="533:22"><expr pos:start="533:13" pos:end="533:21"><name pos:start="533:13" pos:end="533:16">args</name> <operator pos:start="533:18" pos:end="533:19">+=</operator> <literal type="number" pos:start="533:21" pos:end="533:21">3</literal></expr>;</expr_stmt>

            <break pos:start="535:13" pos:end="535:18">break;</break>

        <expr_stmt pos:start="537:9" pos:end="537:31"><expr pos:start="537:9" pos:end="537:31"><call pos:start="537:9" pos:end="537:30"><name pos:start="537:9" pos:end="537:21">CASE_OP_32_64</name><argument_list pos:start="537:22" pos:end="537:30">(<argument pos:start="537:23" pos:end="537:29"><expr pos:start="537:23" pos:end="537:29"><name pos:start="537:23" pos:end="537:29">setcond</name></expr></argument>)</argument_list></call><operator pos:start="537:31" pos:end="537:31">:</operator></expr></expr_stmt>

            <if_stmt pos:start="539:13" pos:end="567:13"><if pos:start="539:13" pos:end="553:13">if <condition pos:start="539:16" pos:end="541:58">(<expr pos:start="539:17" pos:end="541:57"><name pos:start="539:17" pos:end="539:30"><name pos:start="539:17" pos:end="539:21">temps</name><index pos:start="539:22" pos:end="539:30">[<expr pos:start="539:23" pos:end="539:29"><name pos:start="539:23" pos:end="539:29"><name pos:start="539:23" pos:end="539:26">args</name><index pos:start="539:27" pos:end="539:29">[<expr pos:start="539:28" pos:end="539:28"><literal type="number" pos:start="539:28" pos:end="539:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="539:31" pos:end="539:31">.</operator><name pos:start="539:32" pos:end="539:36">state</name> <operator pos:start="539:38" pos:end="539:39">==</operator> <name pos:start="539:41" pos:end="539:54">TCG_TEMP_CONST</name>

                <operator pos:start="541:17" pos:end="541:18">&amp;&amp;</operator> <name pos:start="541:20" pos:end="541:33"><name pos:start="541:20" pos:end="541:24">temps</name><index pos:start="541:25" pos:end="541:33">[<expr pos:start="541:26" pos:end="541:32"><name pos:start="541:26" pos:end="541:32"><name pos:start="541:26" pos:end="541:29">args</name><index pos:start="541:30" pos:end="541:32">[<expr pos:start="541:31" pos:end="541:31"><literal type="number" pos:start="541:31" pos:end="541:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="541:34" pos:end="541:34">.</operator><name pos:start="541:35" pos:end="541:39">state</name> <operator pos:start="541:41" pos:end="541:42">==</operator> <name pos:start="541:44" pos:end="541:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="541:60" pos:end="553:13">{<block_content pos:start="543:17" pos:end="551:30">

                <expr_stmt pos:start="543:17" pos:end="543:55"><expr pos:start="543:17" pos:end="543:54"><name pos:start="543:17" pos:end="543:37"><name pos:start="543:17" pos:end="543:27">gen_opc_buf</name><index pos:start="543:28" pos:end="543:37">[<expr pos:start="543:29" pos:end="543:36"><name pos:start="543:29" pos:end="543:36">op_index</name></expr>]</index></name> <operator pos:start="543:39" pos:end="543:39">=</operator> <call pos:start="543:41" pos:end="543:54"><name pos:start="543:41" pos:end="543:50">op_to_movi</name><argument_list pos:start="543:51" pos:end="543:54">(<argument pos:start="543:52" pos:end="543:53"><expr pos:start="543:52" pos:end="543:53"><name pos:start="543:52" pos:end="543:53">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="545:17" pos:end="547:76"><expr pos:start="545:17" pos:end="547:75"><name pos:start="545:17" pos:end="545:19">tmp</name> <operator pos:start="545:21" pos:end="545:21">=</operator> <call pos:start="545:23" pos:end="547:75"><name pos:start="545:23" pos:end="545:46">do_constant_folding_cond</name><argument_list pos:start="545:47" pos:end="547:75">(<argument pos:start="545:48" pos:end="545:49"><expr pos:start="545:48" pos:end="545:49"><name pos:start="545:48" pos:end="545:49">op</name></expr></argument>, <argument pos:start="545:52" pos:end="545:69"><expr pos:start="545:52" pos:end="545:69"><name pos:start="545:52" pos:end="545:65"><name pos:start="545:52" pos:end="545:56">temps</name><index pos:start="545:57" pos:end="545:65">[<expr pos:start="545:58" pos:end="545:64"><name pos:start="545:58" pos:end="545:64"><name pos:start="545:58" pos:end="545:61">args</name><index pos:start="545:62" pos:end="545:64">[<expr pos:start="545:63" pos:end="545:63"><literal type="number" pos:start="545:63" pos:end="545:63">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="545:66" pos:end="545:66">.</operator><name pos:start="545:67" pos:end="545:69">val</name></expr></argument>,

                                               <argument pos:start="547:48" pos:end="547:65"><expr pos:start="547:48" pos:end="547:65"><name pos:start="547:48" pos:end="547:61"><name pos:start="547:48" pos:end="547:52">temps</name><index pos:start="547:53" pos:end="547:61">[<expr pos:start="547:54" pos:end="547:60"><name pos:start="547:54" pos:end="547:60"><name pos:start="547:54" pos:end="547:57">args</name><index pos:start="547:58" pos:end="547:60">[<expr pos:start="547:59" pos:end="547:59"><literal type="number" pos:start="547:59" pos:end="547:59">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="547:62" pos:end="547:62">.</operator><name pos:start="547:63" pos:end="547:65">val</name></expr></argument>, <argument pos:start="547:68" pos:end="547:74"><expr pos:start="547:68" pos:end="547:74"><name pos:start="547:68" pos:end="547:74"><name pos:start="547:68" pos:end="547:71">args</name><index pos:start="547:72" pos:end="547:74">[<expr pos:start="547:73" pos:end="547:73"><literal type="number" pos:start="547:73" pos:end="547:73">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="549:17" pos:end="549:79"><expr pos:start="549:17" pos:end="549:78"><call pos:start="549:17" pos:end="549:78"><name pos:start="549:17" pos:end="549:32">tcg_opt_gen_movi</name><argument_list pos:start="549:33" pos:end="549:78">(<argument pos:start="549:34" pos:end="549:41"><expr pos:start="549:34" pos:end="549:41"><name pos:start="549:34" pos:end="549:41">gen_args</name></expr></argument>, <argument pos:start="549:44" pos:end="549:50"><expr pos:start="549:44" pos:end="549:50"><name pos:start="549:44" pos:end="549:50"><name pos:start="549:44" pos:end="549:47">args</name><index pos:start="549:48" pos:end="549:50">[<expr pos:start="549:49" pos:end="549:49"><literal type="number" pos:start="549:49" pos:end="549:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="549:53" pos:end="549:55"><expr pos:start="549:53" pos:end="549:55"><name pos:start="549:53" pos:end="549:55">tmp</name></expr></argument>, <argument pos:start="549:58" pos:end="549:65"><expr pos:start="549:58" pos:end="549:65"><name pos:start="549:58" pos:end="549:65">nb_temps</name></expr></argument>, <argument pos:start="549:68" pos:end="549:77"><expr pos:start="549:68" pos:end="549:77"><name pos:start="549:68" pos:end="549:77">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="551:17" pos:end="551:30"><expr pos:start="551:17" pos:end="551:29"><name pos:start="551:17" pos:end="551:24">gen_args</name> <operator pos:start="551:26" pos:end="551:27">+=</operator> <literal type="number" pos:start="551:29" pos:end="551:29">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="553:15" pos:end="567:13">else <block pos:start="553:20" pos:end="567:13">{<block_content pos:start="555:17" pos:end="565:30">

                <expr_stmt pos:start="555:17" pos:end="555:58"><expr pos:start="555:17" pos:end="555:57"><call pos:start="555:17" pos:end="555:57"><name pos:start="555:17" pos:end="555:26">reset_temp</name><argument_list pos:start="555:27" pos:end="555:57">(<argument pos:start="555:28" pos:end="555:34"><expr pos:start="555:28" pos:end="555:34"><name pos:start="555:28" pos:end="555:34"><name pos:start="555:28" pos:end="555:31">args</name><index pos:start="555:32" pos:end="555:34">[<expr pos:start="555:33" pos:end="555:33"><literal type="number" pos:start="555:33" pos:end="555:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="555:37" pos:end="555:44"><expr pos:start="555:37" pos:end="555:44"><name pos:start="555:37" pos:end="555:44">nb_temps</name></expr></argument>, <argument pos:start="555:47" pos:end="555:56"><expr pos:start="555:47" pos:end="555:56"><name pos:start="555:47" pos:end="555:56">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="557:17" pos:end="557:38"><expr pos:start="557:17" pos:end="557:37"><name pos:start="557:17" pos:end="557:27"><name pos:start="557:17" pos:end="557:24">gen_args</name><index pos:start="557:25" pos:end="557:27">[<expr pos:start="557:26" pos:end="557:26"><literal type="number" pos:start="557:26" pos:end="557:26">0</literal></expr>]</index></name> <operator pos:start="557:29" pos:end="557:29">=</operator> <name pos:start="557:31" pos:end="557:37"><name pos:start="557:31" pos:end="557:34">args</name><index pos:start="557:35" pos:end="557:37">[<expr pos:start="557:36" pos:end="557:36"><literal type="number" pos:start="557:36" pos:end="557:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="559:17" pos:end="559:38"><expr pos:start="559:17" pos:end="559:37"><name pos:start="559:17" pos:end="559:27"><name pos:start="559:17" pos:end="559:24">gen_args</name><index pos:start="559:25" pos:end="559:27">[<expr pos:start="559:26" pos:end="559:26"><literal type="number" pos:start="559:26" pos:end="559:26">1</literal></expr>]</index></name> <operator pos:start="559:29" pos:end="559:29">=</operator> <name pos:start="559:31" pos:end="559:37"><name pos:start="559:31" pos:end="559:34">args</name><index pos:start="559:35" pos:end="559:37">[<expr pos:start="559:36" pos:end="559:36"><literal type="number" pos:start="559:36" pos:end="559:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="561:17" pos:end="561:38"><expr pos:start="561:17" pos:end="561:37"><name pos:start="561:17" pos:end="561:27"><name pos:start="561:17" pos:end="561:24">gen_args</name><index pos:start="561:25" pos:end="561:27">[<expr pos:start="561:26" pos:end="561:26"><literal type="number" pos:start="561:26" pos:end="561:26">2</literal></expr>]</index></name> <operator pos:start="561:29" pos:end="561:29">=</operator> <name pos:start="561:31" pos:end="561:37"><name pos:start="561:31" pos:end="561:34">args</name><index pos:start="561:35" pos:end="561:37">[<expr pos:start="561:36" pos:end="561:36"><literal type="number" pos:start="561:36" pos:end="561:36">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="563:17" pos:end="563:38"><expr pos:start="563:17" pos:end="563:37"><name pos:start="563:17" pos:end="563:27"><name pos:start="563:17" pos:end="563:24">gen_args</name><index pos:start="563:25" pos:end="563:27">[<expr pos:start="563:26" pos:end="563:26"><literal type="number" pos:start="563:26" pos:end="563:26">3</literal></expr>]</index></name> <operator pos:start="563:29" pos:end="563:29">=</operator> <name pos:start="563:31" pos:end="563:37"><name pos:start="563:31" pos:end="563:34">args</name><index pos:start="563:35" pos:end="563:37">[<expr pos:start="563:36" pos:end="563:36"><literal type="number" pos:start="563:36" pos:end="563:36">3</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="565:17" pos:end="565:30"><expr pos:start="565:17" pos:end="565:29"><name pos:start="565:17" pos:end="565:24">gen_args</name> <operator pos:start="565:26" pos:end="565:27">+=</operator> <literal type="number" pos:start="565:29" pos:end="565:29">4</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="569:13" pos:end="569:22"><expr pos:start="569:13" pos:end="569:21"><name pos:start="569:13" pos:end="569:16">args</name> <operator pos:start="569:18" pos:end="569:19">+=</operator> <literal type="number" pos:start="569:21" pos:end="569:21">4</literal></expr>;</expr_stmt>

            <break pos:start="571:13" pos:end="571:18">break;</break>

        <expr_stmt pos:start="573:9" pos:end="573:30"><expr pos:start="573:9" pos:end="573:30"><call pos:start="573:9" pos:end="573:29"><name pos:start="573:9" pos:end="573:21">CASE_OP_32_64</name><argument_list pos:start="573:22" pos:end="573:29">(<argument pos:start="573:23" pos:end="573:28"><expr pos:start="573:23" pos:end="573:28"><name pos:start="573:23" pos:end="573:28">brcond</name></expr></argument>)</argument_list></call><operator pos:start="573:30" pos:end="573:30">:</operator></expr></expr_stmt>

            <if_stmt pos:start="575:13" pos:end="613:13"><if pos:start="575:13" pos:end="597:13">if <condition pos:start="575:16" pos:end="577:58">(<expr pos:start="575:17" pos:end="577:57"><name pos:start="575:17" pos:end="575:30"><name pos:start="575:17" pos:end="575:21">temps</name><index pos:start="575:22" pos:end="575:30">[<expr pos:start="575:23" pos:end="575:29"><name pos:start="575:23" pos:end="575:29"><name pos:start="575:23" pos:end="575:26">args</name><index pos:start="575:27" pos:end="575:29">[<expr pos:start="575:28" pos:end="575:28"><literal type="number" pos:start="575:28" pos:end="575:28">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="575:31" pos:end="575:31">.</operator><name pos:start="575:32" pos:end="575:36">state</name> <operator pos:start="575:38" pos:end="575:39">==</operator> <name pos:start="575:41" pos:end="575:54">TCG_TEMP_CONST</name>

                <operator pos:start="577:17" pos:end="577:18">&amp;&amp;</operator> <name pos:start="577:20" pos:end="577:33"><name pos:start="577:20" pos:end="577:24">temps</name><index pos:start="577:25" pos:end="577:33">[<expr pos:start="577:26" pos:end="577:32"><name pos:start="577:26" pos:end="577:32"><name pos:start="577:26" pos:end="577:29">args</name><index pos:start="577:30" pos:end="577:32">[<expr pos:start="577:31" pos:end="577:31"><literal type="number" pos:start="577:31" pos:end="577:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="577:34" pos:end="577:34">.</operator><name pos:start="577:35" pos:end="577:39">state</name> <operator pos:start="577:41" pos:end="577:42">==</operator> <name pos:start="577:44" pos:end="577:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="577:60" pos:end="597:13">{<block_content pos:start="579:17" pos:end="595:17">

                <if_stmt pos:start="579:17" pos:end="595:17"><if pos:start="579:17" pos:end="591:17">if <condition pos:start="579:20" pos:end="581:74">(<expr pos:start="579:21" pos:end="581:73"><call pos:start="579:21" pos:end="581:73"><name pos:start="579:21" pos:end="579:44">do_constant_folding_cond</name><argument_list pos:start="579:45" pos:end="581:73">(<argument pos:start="579:46" pos:end="579:47"><expr pos:start="579:46" pos:end="579:47"><name pos:start="579:46" pos:end="579:47">op</name></expr></argument>, <argument pos:start="579:50" pos:end="579:67"><expr pos:start="579:50" pos:end="579:67"><name pos:start="579:50" pos:end="579:63"><name pos:start="579:50" pos:end="579:54">temps</name><index pos:start="579:55" pos:end="579:63">[<expr pos:start="579:56" pos:end="579:62"><name pos:start="579:56" pos:end="579:62"><name pos:start="579:56" pos:end="579:59">args</name><index pos:start="579:60" pos:end="579:62">[<expr pos:start="579:61" pos:end="579:61"><literal type="number" pos:start="579:61" pos:end="579:61">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="579:64" pos:end="579:64">.</operator><name pos:start="579:65" pos:end="579:67">val</name></expr></argument>,

                                             <argument pos:start="581:46" pos:end="581:63"><expr pos:start="581:46" pos:end="581:63"><name pos:start="581:46" pos:end="581:59"><name pos:start="581:46" pos:end="581:50">temps</name><index pos:start="581:51" pos:end="581:59">[<expr pos:start="581:52" pos:end="581:58"><name pos:start="581:52" pos:end="581:58"><name pos:start="581:52" pos:end="581:55">args</name><index pos:start="581:56" pos:end="581:58">[<expr pos:start="581:57" pos:end="581:57"><literal type="number" pos:start="581:57" pos:end="581:57">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="581:60" pos:end="581:60">.</operator><name pos:start="581:61" pos:end="581:63">val</name></expr></argument>, <argument pos:start="581:66" pos:end="581:72"><expr pos:start="581:66" pos:end="581:72"><name pos:start="581:66" pos:end="581:72"><name pos:start="581:66" pos:end="581:69">args</name><index pos:start="581:70" pos:end="581:72">[<expr pos:start="581:71" pos:end="581:71"><literal type="number" pos:start="581:71" pos:end="581:71">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="581:76" pos:end="591:17">{<block_content pos:start="583:21" pos:end="589:34">

                    <expr_stmt pos:start="583:21" pos:end="583:78"><expr pos:start="583:21" pos:end="583:77"><call pos:start="583:21" pos:end="583:77"><name pos:start="583:21" pos:end="583:26">memset</name><argument_list pos:start="583:27" pos:end="583:77">(<argument pos:start="583:28" pos:end="583:32"><expr pos:start="583:28" pos:end="583:32"><name pos:start="583:28" pos:end="583:32">temps</name></expr></argument>, <argument pos:start="583:35" pos:end="583:35"><expr pos:start="583:35" pos:end="583:35"><literal type="number" pos:start="583:35" pos:end="583:35">0</literal></expr></argument>, <argument pos:start="583:38" pos:end="583:76"><expr pos:start="583:38" pos:end="583:76"><name pos:start="583:38" pos:end="583:45">nb_temps</name> <operator pos:start="583:47" pos:end="583:47">*</operator> <sizeof pos:start="583:49" pos:end="583:76">sizeof<argument_list pos:start="583:55" pos:end="583:76">(<argument pos:start="583:56" pos:end="583:75"><expr pos:start="583:56" pos:end="583:75">struct <name pos:start="583:63" pos:end="583:75">tcg_temp_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="585:21" pos:end="585:56"><expr pos:start="585:21" pos:end="585:55"><name pos:start="585:21" pos:end="585:41"><name pos:start="585:21" pos:end="585:31">gen_opc_buf</name><index pos:start="585:32" pos:end="585:41">[<expr pos:start="585:33" pos:end="585:40"><name pos:start="585:33" pos:end="585:40">op_index</name></expr>]</index></name> <operator pos:start="585:43" pos:end="585:43">=</operator> <name pos:start="585:45" pos:end="585:55">INDEX_op_br</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="587:21" pos:end="587:42"><expr pos:start="587:21" pos:end="587:41"><name pos:start="587:21" pos:end="587:31"><name pos:start="587:21" pos:end="587:28">gen_args</name><index pos:start="587:29" pos:end="587:31">[<expr pos:start="587:30" pos:end="587:30"><literal type="number" pos:start="587:30" pos:end="587:30">0</literal></expr>]</index></name> <operator pos:start="587:33" pos:end="587:33">=</operator> <name pos:start="587:35" pos:end="587:41"><name pos:start="587:35" pos:end="587:38">args</name><index pos:start="587:39" pos:end="587:41">[<expr pos:start="587:40" pos:end="587:40"><literal type="number" pos:start="587:40" pos:end="587:40">3</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="589:21" pos:end="589:34"><expr pos:start="589:21" pos:end="589:33"><name pos:start="589:21" pos:end="589:28">gen_args</name> <operator pos:start="589:30" pos:end="589:31">+=</operator> <literal type="number" pos:start="589:33" pos:end="589:33">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="591:19" pos:end="595:17">else <block pos:start="591:24" pos:end="595:17">{<block_content pos:start="593:21" pos:end="593:57">

                    <expr_stmt pos:start="593:21" pos:end="593:57"><expr pos:start="593:21" pos:end="593:56"><name pos:start="593:21" pos:end="593:41"><name pos:start="593:21" pos:end="593:31">gen_opc_buf</name><index pos:start="593:32" pos:end="593:41">[<expr pos:start="593:33" pos:end="593:40"><name pos:start="593:33" pos:end="593:40">op_index</name></expr>]</index></name> <operator pos:start="593:43" pos:end="593:43">=</operator> <name pos:start="593:45" pos:end="593:56">INDEX_op_nop</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="597:15" pos:end="613:13">else <block pos:start="597:20" pos:end="613:13">{<block_content pos:start="599:17" pos:end="611:30">

                <expr_stmt pos:start="599:17" pos:end="599:74"><expr pos:start="599:17" pos:end="599:73"><call pos:start="599:17" pos:end="599:73"><name pos:start="599:17" pos:end="599:22">memset</name><argument_list pos:start="599:23" pos:end="599:73">(<argument pos:start="599:24" pos:end="599:28"><expr pos:start="599:24" pos:end="599:28"><name pos:start="599:24" pos:end="599:28">temps</name></expr></argument>, <argument pos:start="599:31" pos:end="599:31"><expr pos:start="599:31" pos:end="599:31"><literal type="number" pos:start="599:31" pos:end="599:31">0</literal></expr></argument>, <argument pos:start="599:34" pos:end="599:72"><expr pos:start="599:34" pos:end="599:72"><name pos:start="599:34" pos:end="599:41">nb_temps</name> <operator pos:start="599:43" pos:end="599:43">*</operator> <sizeof pos:start="599:45" pos:end="599:72">sizeof<argument_list pos:start="599:51" pos:end="599:72">(<argument pos:start="599:52" pos:end="599:71"><expr pos:start="599:52" pos:end="599:71">struct <name pos:start="599:59" pos:end="599:71">tcg_temp_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="601:17" pos:end="601:58"><expr pos:start="601:17" pos:end="601:57"><call pos:start="601:17" pos:end="601:57"><name pos:start="601:17" pos:end="601:26">reset_temp</name><argument_list pos:start="601:27" pos:end="601:57">(<argument pos:start="601:28" pos:end="601:34"><expr pos:start="601:28" pos:end="601:34"><name pos:start="601:28" pos:end="601:34"><name pos:start="601:28" pos:end="601:31">args</name><index pos:start="601:32" pos:end="601:34">[<expr pos:start="601:33" pos:end="601:33"><literal type="number" pos:start="601:33" pos:end="601:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="601:37" pos:end="601:44"><expr pos:start="601:37" pos:end="601:44"><name pos:start="601:37" pos:end="601:44">nb_temps</name></expr></argument>, <argument pos:start="601:47" pos:end="601:56"><expr pos:start="601:47" pos:end="601:56"><name pos:start="601:47" pos:end="601:56">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="603:17" pos:end="603:38"><expr pos:start="603:17" pos:end="603:37"><name pos:start="603:17" pos:end="603:27"><name pos:start="603:17" pos:end="603:24">gen_args</name><index pos:start="603:25" pos:end="603:27">[<expr pos:start="603:26" pos:end="603:26"><literal type="number" pos:start="603:26" pos:end="603:26">0</literal></expr>]</index></name> <operator pos:start="603:29" pos:end="603:29">=</operator> <name pos:start="603:31" pos:end="603:37"><name pos:start="603:31" pos:end="603:34">args</name><index pos:start="603:35" pos:end="603:37">[<expr pos:start="603:36" pos:end="603:36"><literal type="number" pos:start="603:36" pos:end="603:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="605:17" pos:end="605:38"><expr pos:start="605:17" pos:end="605:37"><name pos:start="605:17" pos:end="605:27"><name pos:start="605:17" pos:end="605:24">gen_args</name><index pos:start="605:25" pos:end="605:27">[<expr pos:start="605:26" pos:end="605:26"><literal type="number" pos:start="605:26" pos:end="605:26">1</literal></expr>]</index></name> <operator pos:start="605:29" pos:end="605:29">=</operator> <name pos:start="605:31" pos:end="605:37"><name pos:start="605:31" pos:end="605:34">args</name><index pos:start="605:35" pos:end="605:37">[<expr pos:start="605:36" pos:end="605:36"><literal type="number" pos:start="605:36" pos:end="605:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="607:17" pos:end="607:38"><expr pos:start="607:17" pos:end="607:37"><name pos:start="607:17" pos:end="607:27"><name pos:start="607:17" pos:end="607:24">gen_args</name><index pos:start="607:25" pos:end="607:27">[<expr pos:start="607:26" pos:end="607:26"><literal type="number" pos:start="607:26" pos:end="607:26">2</literal></expr>]</index></name> <operator pos:start="607:29" pos:end="607:29">=</operator> <name pos:start="607:31" pos:end="607:37"><name pos:start="607:31" pos:end="607:34">args</name><index pos:start="607:35" pos:end="607:37">[<expr pos:start="607:36" pos:end="607:36"><literal type="number" pos:start="607:36" pos:end="607:36">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="609:17" pos:end="609:38"><expr pos:start="609:17" pos:end="609:37"><name pos:start="609:17" pos:end="609:27"><name pos:start="609:17" pos:end="609:24">gen_args</name><index pos:start="609:25" pos:end="609:27">[<expr pos:start="609:26" pos:end="609:26"><literal type="number" pos:start="609:26" pos:end="609:26">3</literal></expr>]</index></name> <operator pos:start="609:29" pos:end="609:29">=</operator> <name pos:start="609:31" pos:end="609:37"><name pos:start="609:31" pos:end="609:34">args</name><index pos:start="609:35" pos:end="609:37">[<expr pos:start="609:36" pos:end="609:36"><literal type="number" pos:start="609:36" pos:end="609:36">3</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="611:17" pos:end="611:30"><expr pos:start="611:17" pos:end="611:29"><name pos:start="611:17" pos:end="611:24">gen_args</name> <operator pos:start="611:26" pos:end="611:27">+=</operator> <literal type="number" pos:start="611:29" pos:end="611:29">4</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="615:13" pos:end="615:22"><expr pos:start="615:13" pos:end="615:21"><name pos:start="615:13" pos:end="615:16">args</name> <operator pos:start="615:18" pos:end="615:19">+=</operator> <literal type="number" pos:start="615:21" pos:end="615:21">4</literal></expr>;</expr_stmt>

            <break pos:start="617:13" pos:end="617:18">break;</break>

        <expr_stmt pos:start="619:9" pos:end="619:31"><expr pos:start="619:9" pos:end="619:31"><call pos:start="619:9" pos:end="619:30"><name pos:start="619:9" pos:end="619:21">CASE_OP_32_64</name><argument_list pos:start="619:22" pos:end="619:30">(<argument pos:start="619:23" pos:end="619:29"><expr pos:start="619:23" pos:end="619:29"><name pos:start="619:23" pos:end="619:29">movcond</name></expr></argument>)</argument_list></call><operator pos:start="619:31" pos:end="619:31">:</operator></expr></expr_stmt>

            <if_stmt pos:start="621:13" pos:end="677:13"><if pos:start="621:13" pos:end="659:13">if <condition pos:start="621:16" pos:end="623:58">(<expr pos:start="621:17" pos:end="623:57"><name pos:start="621:17" pos:end="621:30"><name pos:start="621:17" pos:end="621:21">temps</name><index pos:start="621:22" pos:end="621:30">[<expr pos:start="621:23" pos:end="621:29"><name pos:start="621:23" pos:end="621:29"><name pos:start="621:23" pos:end="621:26">args</name><index pos:start="621:27" pos:end="621:29">[<expr pos:start="621:28" pos:end="621:28"><literal type="number" pos:start="621:28" pos:end="621:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="621:31" pos:end="621:31">.</operator><name pos:start="621:32" pos:end="621:36">state</name> <operator pos:start="621:38" pos:end="621:39">==</operator> <name pos:start="621:41" pos:end="621:54">TCG_TEMP_CONST</name>

                <operator pos:start="623:17" pos:end="623:18">&amp;&amp;</operator> <name pos:start="623:20" pos:end="623:33"><name pos:start="623:20" pos:end="623:24">temps</name><index pos:start="623:25" pos:end="623:33">[<expr pos:start="623:26" pos:end="623:32"><name pos:start="623:26" pos:end="623:32"><name pos:start="623:26" pos:end="623:29">args</name><index pos:start="623:30" pos:end="623:32">[<expr pos:start="623:31" pos:end="623:31"><literal type="number" pos:start="623:31" pos:end="623:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="623:34" pos:end="623:34">.</operator><name pos:start="623:35" pos:end="623:39">state</name> <operator pos:start="623:41" pos:end="623:42">==</operator> <name pos:start="623:44" pos:end="623:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="623:60" pos:end="659:13">{<block_content pos:start="625:17" pos:end="657:17">

                <expr_stmt pos:start="625:17" pos:end="627:76"><expr pos:start="625:17" pos:end="627:75"><name pos:start="625:17" pos:end="625:19">tmp</name> <operator pos:start="625:21" pos:end="625:21">=</operator> <call pos:start="625:23" pos:end="627:75"><name pos:start="625:23" pos:end="625:46">do_constant_folding_cond</name><argument_list pos:start="625:47" pos:end="627:75">(<argument pos:start="625:48" pos:end="625:49"><expr pos:start="625:48" pos:end="625:49"><name pos:start="625:48" pos:end="625:49">op</name></expr></argument>, <argument pos:start="625:52" pos:end="625:69"><expr pos:start="625:52" pos:end="625:69"><name pos:start="625:52" pos:end="625:65"><name pos:start="625:52" pos:end="625:56">temps</name><index pos:start="625:57" pos:end="625:65">[<expr pos:start="625:58" pos:end="625:64"><name pos:start="625:58" pos:end="625:64"><name pos:start="625:58" pos:end="625:61">args</name><index pos:start="625:62" pos:end="625:64">[<expr pos:start="625:63" pos:end="625:63"><literal type="number" pos:start="625:63" pos:end="625:63">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="625:66" pos:end="625:66">.</operator><name pos:start="625:67" pos:end="625:69">val</name></expr></argument>,

                                               <argument pos:start="627:48" pos:end="627:65"><expr pos:start="627:48" pos:end="627:65"><name pos:start="627:48" pos:end="627:61"><name pos:start="627:48" pos:end="627:52">temps</name><index pos:start="627:53" pos:end="627:61">[<expr pos:start="627:54" pos:end="627:60"><name pos:start="627:54" pos:end="627:60"><name pos:start="627:54" pos:end="627:57">args</name><index pos:start="627:58" pos:end="627:60">[<expr pos:start="627:59" pos:end="627:59"><literal type="number" pos:start="627:59" pos:end="627:59">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="627:62" pos:end="627:62">.</operator><name pos:start="627:63" pos:end="627:65">val</name></expr></argument>, <argument pos:start="627:68" pos:end="627:74"><expr pos:start="627:68" pos:end="627:74"><name pos:start="627:68" pos:end="627:74"><name pos:start="627:68" pos:end="627:71">args</name><index pos:start="627:72" pos:end="627:74">[<expr pos:start="627:73" pos:end="627:73"><literal type="number" pos:start="627:73" pos:end="627:73">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="629:17" pos:end="657:17"><if pos:start="629:17" pos:end="637:17">if <condition pos:start="629:20" pos:end="633:62">(<expr pos:start="629:21" pos:end="633:61"><name pos:start="629:21" pos:end="629:27"><name pos:start="629:21" pos:end="629:24">args</name><index pos:start="629:25" pos:end="629:27">[<expr pos:start="629:26" pos:end="629:26"><literal type="number" pos:start="629:26" pos:end="629:26">0</literal></expr>]</index></name> <operator pos:start="629:29" pos:end="629:30">==</operator> <name pos:start="629:32" pos:end="629:42"><name pos:start="629:32" pos:end="629:35">args</name><index pos:start="629:36" pos:end="629:42">[<expr pos:start="629:37" pos:end="629:41"><literal type="number" pos:start="629:37" pos:end="629:38">4</literal><operator pos:start="629:38" pos:end="629:38">-</operator><name pos:start="629:39" pos:end="629:41">tmp</name></expr>]</index></name>

                    <operator pos:start="631:21" pos:end="631:22">||</operator> <operator pos:start="631:24" pos:end="631:24">(</operator><name pos:start="631:25" pos:end="631:42"><name pos:start="631:25" pos:end="631:29">temps</name><index pos:start="631:30" pos:end="631:42">[<expr pos:start="631:31" pos:end="631:41"><name pos:start="631:31" pos:end="631:41"><name pos:start="631:31" pos:end="631:34">args</name><index pos:start="631:35" pos:end="631:41">[<expr pos:start="631:36" pos:end="631:40"><literal type="number" pos:start="631:36" pos:end="631:37">4</literal><operator pos:start="631:37" pos:end="631:37">-</operator><name pos:start="631:38" pos:end="631:40">tmp</name></expr>]</index></name></expr>]</index></name><operator pos:start="631:43" pos:end="631:43">.</operator><name pos:start="631:44" pos:end="631:48">state</name> <operator pos:start="631:50" pos:end="631:51">==</operator> <name pos:start="631:53" pos:end="631:65">TCG_TEMP_COPY</name>

                        <operator pos:start="633:25" pos:end="633:26">&amp;&amp;</operator> <name pos:start="633:28" pos:end="633:45"><name pos:start="633:28" pos:end="633:32">temps</name><index pos:start="633:33" pos:end="633:45">[<expr pos:start="633:34" pos:end="633:44"><name pos:start="633:34" pos:end="633:44"><name pos:start="633:34" pos:end="633:37">args</name><index pos:start="633:38" pos:end="633:44">[<expr pos:start="633:39" pos:end="633:43"><literal type="number" pos:start="633:39" pos:end="633:40">4</literal><operator pos:start="633:40" pos:end="633:40">-</operator><name pos:start="633:41" pos:end="633:43">tmp</name></expr>]</index></name></expr>]</index></name><operator pos:start="633:46" pos:end="633:46">.</operator><name pos:start="633:47" pos:end="633:49">val</name> <operator pos:start="633:51" pos:end="633:52">==</operator> <name pos:start="633:54" pos:end="633:60"><name pos:start="633:54" pos:end="633:57">args</name><index pos:start="633:58" pos:end="633:60">[<expr pos:start="633:59" pos:end="633:59"><literal type="number" pos:start="633:59" pos:end="633:59">0</literal></expr>]</index></name><operator pos:start="633:61" pos:end="633:61">)</operator></expr>)</condition> <block pos:start="633:64" pos:end="637:17">{<block_content pos:start="635:21" pos:end="635:57">

                    <expr_stmt pos:start="635:21" pos:end="635:57"><expr pos:start="635:21" pos:end="635:56"><name pos:start="635:21" pos:end="635:41"><name pos:start="635:21" pos:end="635:31">gen_opc_buf</name><index pos:start="635:32" pos:end="635:41">[<expr pos:start="635:33" pos:end="635:40"><name pos:start="635:33" pos:end="635:40">op_index</name></expr>]</index></name> <operator pos:start="635:43" pos:end="635:43">=</operator> <name pos:start="635:45" pos:end="635:56">INDEX_op_nop</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="637:19" pos:end="647:17">else if <condition pos:start="637:27" pos:end="637:70">(<expr pos:start="637:28" pos:end="637:69"><name pos:start="637:28" pos:end="637:45"><name pos:start="637:28" pos:end="637:32">temps</name><index pos:start="637:33" pos:end="637:45">[<expr pos:start="637:34" pos:end="637:44"><name pos:start="637:34" pos:end="637:44"><name pos:start="637:34" pos:end="637:37">args</name><index pos:start="637:38" pos:end="637:44">[<expr pos:start="637:39" pos:end="637:43"><literal type="number" pos:start="637:39" pos:end="637:39">4</literal><operator pos:start="637:40" pos:end="637:40">-</operator><name pos:start="637:41" pos:end="637:43">tmp</name></expr>]</index></name></expr>]</index></name><operator pos:start="637:46" pos:end="637:46">.</operator><name pos:start="637:47" pos:end="637:51">state</name> <operator pos:start="637:53" pos:end="637:54">==</operator> <name pos:start="637:56" pos:end="637:69">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="637:72" pos:end="647:17">{<block_content pos:start="639:21" pos:end="645:34">

                    <expr_stmt pos:start="639:21" pos:end="639:59"><expr pos:start="639:21" pos:end="639:58"><name pos:start="639:21" pos:end="639:41"><name pos:start="639:21" pos:end="639:31">gen_opc_buf</name><index pos:start="639:32" pos:end="639:41">[<expr pos:start="639:33" pos:end="639:40"><name pos:start="639:33" pos:end="639:40">op_index</name></expr>]</index></name> <operator pos:start="639:43" pos:end="639:43">=</operator> <call pos:start="639:45" pos:end="639:58"><name pos:start="639:45" pos:end="639:54">op_to_movi</name><argument_list pos:start="639:55" pos:end="639:58">(<argument pos:start="639:56" pos:end="639:57"><expr pos:start="639:56" pos:end="639:57"><name pos:start="639:56" pos:end="639:57">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="641:21" pos:end="643:59"><expr pos:start="641:21" pos:end="643:58"><call pos:start="641:21" pos:end="643:58"><name pos:start="641:21" pos:end="641:36">tcg_opt_gen_movi</name><argument_list pos:start="641:37" pos:end="643:58">(<argument pos:start="641:38" pos:end="641:45"><expr pos:start="641:38" pos:end="641:45"><name pos:start="641:38" pos:end="641:45">gen_args</name></expr></argument>, <argument pos:start="641:48" pos:end="641:54"><expr pos:start="641:48" pos:end="641:54"><name pos:start="641:48" pos:end="641:54"><name pos:start="641:48" pos:end="641:51">args</name><index pos:start="641:52" pos:end="641:54">[<expr pos:start="641:53" pos:end="641:53"><literal type="number" pos:start="641:53" pos:end="641:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="641:57" pos:end="641:78"><expr pos:start="641:57" pos:end="641:78"><name pos:start="641:57" pos:end="641:74"><name pos:start="641:57" pos:end="641:61">temps</name><index pos:start="641:62" pos:end="641:74">[<expr pos:start="641:63" pos:end="641:73"><name pos:start="641:63" pos:end="641:73"><name pos:start="641:63" pos:end="641:66">args</name><index pos:start="641:67" pos:end="641:73">[<expr pos:start="641:68" pos:end="641:72"><literal type="number" pos:start="641:68" pos:end="641:69">4</literal><operator pos:start="641:69" pos:end="641:69">-</operator><name pos:start="641:70" pos:end="641:72">tmp</name></expr>]</index></name></expr>]</index></name><operator pos:start="641:75" pos:end="641:75">.</operator><name pos:start="641:76" pos:end="641:78">val</name></expr></argument>,

                                     <argument pos:start="643:38" pos:end="643:45"><expr pos:start="643:38" pos:end="643:45"><name pos:start="643:38" pos:end="643:45">nb_temps</name></expr></argument>, <argument pos:start="643:48" pos:end="643:57"><expr pos:start="643:48" pos:end="643:57"><name pos:start="643:48" pos:end="643:57">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="645:21" pos:end="645:34"><expr pos:start="645:21" pos:end="645:33"><name pos:start="645:21" pos:end="645:28">gen_args</name> <operator pos:start="645:30" pos:end="645:31">+=</operator> <literal type="number" pos:start="645:33" pos:end="645:33">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="647:19" pos:end="657:17">else <block pos:start="647:24" pos:end="657:17">{<block_content pos:start="649:21" pos:end="655:34">

                    <expr_stmt pos:start="649:21" pos:end="649:58"><expr pos:start="649:21" pos:end="649:57"><name pos:start="649:21" pos:end="649:41"><name pos:start="649:21" pos:end="649:31">gen_opc_buf</name><index pos:start="649:32" pos:end="649:41">[<expr pos:start="649:33" pos:end="649:40"><name pos:start="649:33" pos:end="649:40">op_index</name></expr>]</index></name> <operator pos:start="649:43" pos:end="649:43">=</operator> <call pos:start="649:45" pos:end="649:57"><name pos:start="649:45" pos:end="649:53">op_to_mov</name><argument_list pos:start="649:54" pos:end="649:57">(<argument pos:start="649:55" pos:end="649:56"><expr pos:start="649:55" pos:end="649:56"><name pos:start="649:55" pos:end="649:56">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="651:21" pos:end="653:58"><expr pos:start="651:21" pos:end="653:57"><call pos:start="651:21" pos:end="653:57"><name pos:start="651:21" pos:end="651:35">tcg_opt_gen_mov</name><argument_list pos:start="651:36" pos:end="653:57">(<argument pos:start="651:37" pos:end="651:44"><expr pos:start="651:37" pos:end="651:44"><name pos:start="651:37" pos:end="651:44">gen_args</name></expr></argument>, <argument pos:start="651:47" pos:end="651:53"><expr pos:start="651:47" pos:end="651:53"><name pos:start="651:47" pos:end="651:53"><name pos:start="651:47" pos:end="651:50">args</name><index pos:start="651:51" pos:end="651:53">[<expr pos:start="651:52" pos:end="651:52"><literal type="number" pos:start="651:52" pos:end="651:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="651:56" pos:end="651:66"><expr pos:start="651:56" pos:end="651:66"><name pos:start="651:56" pos:end="651:66"><name pos:start="651:56" pos:end="651:59">args</name><index pos:start="651:60" pos:end="651:66">[<expr pos:start="651:61" pos:end="651:65"><literal type="number" pos:start="651:61" pos:end="651:62">4</literal><operator pos:start="651:62" pos:end="651:62">-</operator><name pos:start="651:63" pos:end="651:65">tmp</name></expr>]</index></name></expr></argument>,

                                    <argument pos:start="653:37" pos:end="653:44"><expr pos:start="653:37" pos:end="653:44"><name pos:start="653:37" pos:end="653:44">nb_temps</name></expr></argument>, <argument pos:start="653:47" pos:end="653:56"><expr pos:start="653:47" pos:end="653:56"><name pos:start="653:47" pos:end="653:56">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="655:21" pos:end="655:34"><expr pos:start="655:21" pos:end="655:33"><name pos:start="655:21" pos:end="655:28">gen_args</name> <operator pos:start="655:30" pos:end="655:31">+=</operator> <literal type="number" pos:start="655:33" pos:end="655:33">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="659:15" pos:end="677:13">else <block pos:start="659:20" pos:end="677:13">{<block_content pos:start="661:17" pos:end="675:30">

                <expr_stmt pos:start="661:17" pos:end="661:58"><expr pos:start="661:17" pos:end="661:57"><call pos:start="661:17" pos:end="661:57"><name pos:start="661:17" pos:end="661:26">reset_temp</name><argument_list pos:start="661:27" pos:end="661:57">(<argument pos:start="661:28" pos:end="661:34"><expr pos:start="661:28" pos:end="661:34"><name pos:start="661:28" pos:end="661:34"><name pos:start="661:28" pos:end="661:31">args</name><index pos:start="661:32" pos:end="661:34">[<expr pos:start="661:33" pos:end="661:33"><literal type="number" pos:start="661:33" pos:end="661:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="661:37" pos:end="661:44"><expr pos:start="661:37" pos:end="661:44"><name pos:start="661:37" pos:end="661:44">nb_temps</name></expr></argument>, <argument pos:start="661:47" pos:end="661:56"><expr pos:start="661:47" pos:end="661:56"><name pos:start="661:47" pos:end="661:56">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="663:17" pos:end="663:38"><expr pos:start="663:17" pos:end="663:37"><name pos:start="663:17" pos:end="663:27"><name pos:start="663:17" pos:end="663:24">gen_args</name><index pos:start="663:25" pos:end="663:27">[<expr pos:start="663:26" pos:end="663:26"><literal type="number" pos:start="663:26" pos:end="663:26">0</literal></expr>]</index></name> <operator pos:start="663:29" pos:end="663:29">=</operator> <name pos:start="663:31" pos:end="663:37"><name pos:start="663:31" pos:end="663:34">args</name><index pos:start="663:35" pos:end="663:37">[<expr pos:start="663:36" pos:end="663:36"><literal type="number" pos:start="663:36" pos:end="663:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="665:17" pos:end="665:38"><expr pos:start="665:17" pos:end="665:37"><name pos:start="665:17" pos:end="665:27"><name pos:start="665:17" pos:end="665:24">gen_args</name><index pos:start="665:25" pos:end="665:27">[<expr pos:start="665:26" pos:end="665:26"><literal type="number" pos:start="665:26" pos:end="665:26">1</literal></expr>]</index></name> <operator pos:start="665:29" pos:end="665:29">=</operator> <name pos:start="665:31" pos:end="665:37"><name pos:start="665:31" pos:end="665:34">args</name><index pos:start="665:35" pos:end="665:37">[<expr pos:start="665:36" pos:end="665:36"><literal type="number" pos:start="665:36" pos:end="665:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="667:17" pos:end="667:38"><expr pos:start="667:17" pos:end="667:37"><name pos:start="667:17" pos:end="667:27"><name pos:start="667:17" pos:end="667:24">gen_args</name><index pos:start="667:25" pos:end="667:27">[<expr pos:start="667:26" pos:end="667:26"><literal type="number" pos:start="667:26" pos:end="667:26">2</literal></expr>]</index></name> <operator pos:start="667:29" pos:end="667:29">=</operator> <name pos:start="667:31" pos:end="667:37"><name pos:start="667:31" pos:end="667:34">args</name><index pos:start="667:35" pos:end="667:37">[<expr pos:start="667:36" pos:end="667:36"><literal type="number" pos:start="667:36" pos:end="667:36">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="669:17" pos:end="669:38"><expr pos:start="669:17" pos:end="669:37"><name pos:start="669:17" pos:end="669:27"><name pos:start="669:17" pos:end="669:24">gen_args</name><index pos:start="669:25" pos:end="669:27">[<expr pos:start="669:26" pos:end="669:26"><literal type="number" pos:start="669:26" pos:end="669:26">3</literal></expr>]</index></name> <operator pos:start="669:29" pos:end="669:29">=</operator> <name pos:start="669:31" pos:end="669:37"><name pos:start="669:31" pos:end="669:34">args</name><index pos:start="669:35" pos:end="669:37">[<expr pos:start="669:36" pos:end="669:36"><literal type="number" pos:start="669:36" pos:end="669:36">3</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="671:17" pos:end="671:38"><expr pos:start="671:17" pos:end="671:37"><name pos:start="671:17" pos:end="671:27"><name pos:start="671:17" pos:end="671:24">gen_args</name><index pos:start="671:25" pos:end="671:27">[<expr pos:start="671:26" pos:end="671:26"><literal type="number" pos:start="671:26" pos:end="671:26">4</literal></expr>]</index></name> <operator pos:start="671:29" pos:end="671:29">=</operator> <name pos:start="671:31" pos:end="671:37"><name pos:start="671:31" pos:end="671:34">args</name><index pos:start="671:35" pos:end="671:37">[<expr pos:start="671:36" pos:end="671:36"><literal type="number" pos:start="671:36" pos:end="671:36">4</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="673:17" pos:end="673:38"><expr pos:start="673:17" pos:end="673:37"><name pos:start="673:17" pos:end="673:27"><name pos:start="673:17" pos:end="673:24">gen_args</name><index pos:start="673:25" pos:end="673:27">[<expr pos:start="673:26" pos:end="673:26"><literal type="number" pos:start="673:26" pos:end="673:26">5</literal></expr>]</index></name> <operator pos:start="673:29" pos:end="673:29">=</operator> <name pos:start="673:31" pos:end="673:37"><name pos:start="673:31" pos:end="673:34">args</name><index pos:start="673:35" pos:end="673:37">[<expr pos:start="673:36" pos:end="673:36"><literal type="number" pos:start="673:36" pos:end="673:36">5</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="675:17" pos:end="675:30"><expr pos:start="675:17" pos:end="675:29"><name pos:start="675:17" pos:end="675:24">gen_args</name> <operator pos:start="675:26" pos:end="675:27">+=</operator> <literal type="number" pos:start="675:29" pos:end="675:29">6</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="679:13" pos:end="679:22"><expr pos:start="679:13" pos:end="679:21"><name pos:start="679:13" pos:end="679:16">args</name> <operator pos:start="679:18" pos:end="679:19">+=</operator> <literal type="number" pos:start="679:21" pos:end="679:21">6</literal></expr>;</expr_stmt>

            <break pos:start="681:13" pos:end="681:18">break;</break>

        <case pos:start="683:9" pos:end="683:27">case <expr pos:start="683:14" pos:end="683:26"><name pos:start="683:14" pos:end="683:26">INDEX_op_call</name></expr>:</case>

            <expr_stmt pos:start="685:13" pos:end="685:64"><expr pos:start="685:13" pos:end="685:63"><name pos:start="685:13" pos:end="685:24">nb_call_args</name> <operator pos:start="685:26" pos:end="685:26">=</operator> <operator pos:start="685:28" pos:end="685:28">(</operator><name pos:start="685:29" pos:end="685:35"><name pos:start="685:29" pos:end="685:32">args</name><index pos:start="685:33" pos:end="685:35">[<expr pos:start="685:34" pos:end="685:34"><literal type="number" pos:start="685:34" pos:end="685:34">0</literal></expr>]</index></name> <operator pos:start="685:37" pos:end="685:38">&gt;&gt;</operator> <literal type="number" pos:start="685:40" pos:end="685:41">16</literal><operator pos:start="685:42" pos:end="685:42">)</operator> <operator pos:start="685:44" pos:end="685:44">+</operator> <operator pos:start="685:46" pos:end="685:46">(</operator><name pos:start="685:47" pos:end="685:53"><name pos:start="685:47" pos:end="685:50">args</name><index pos:start="685:51" pos:end="685:53">[<expr pos:start="685:52" pos:end="685:52"><literal type="number" pos:start="685:52" pos:end="685:52">0</literal></expr>]</index></name> <operator pos:start="685:55" pos:end="685:55">&amp;</operator> <literal type="number" pos:start="685:57" pos:end="685:62">0xffff</literal><operator pos:start="685:63" pos:end="685:63">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="687:13" pos:end="695:13"><if pos:start="687:13" pos:end="695:13">if <condition pos:start="687:16" pos:end="687:77">(<expr pos:start="687:17" pos:end="687:76"><operator pos:start="687:17" pos:end="687:17">!</operator><operator pos:start="687:18" pos:end="687:18">(</operator><name pos:start="687:19" pos:end="687:40"><name pos:start="687:19" pos:end="687:22">args</name><index pos:start="687:23" pos:end="687:40">[<expr pos:start="687:24" pos:end="687:39"><name pos:start="687:24" pos:end="687:35">nb_call_args</name> <operator pos:start="687:37" pos:end="687:37">+</operator> <literal type="number" pos:start="687:39" pos:end="687:39">1</literal></expr>]</index></name> <operator pos:start="687:42" pos:end="687:42">&amp;</operator> <operator pos:start="687:44" pos:end="687:44">(</operator><name pos:start="687:45" pos:end="687:58">TCG_CALL_CONST</name> <operator pos:start="687:60" pos:end="687:60">|</operator> <name pos:start="687:62" pos:end="687:74">TCG_CALL_PURE</name><operator pos:start="687:75" pos:end="687:75">)</operator><operator pos:start="687:76" pos:end="687:76">)</operator></expr>)</condition> <block pos:start="687:79" pos:end="695:13">{<block_content pos:start="689:17" pos:end="693:17">

                <for pos:start="689:17" pos:end="693:17">for <control pos:start="689:21" pos:end="689:48">(<init pos:start="689:22" pos:end="689:27"><expr pos:start="689:22" pos:end="689:26"><name pos:start="689:22" pos:end="689:22">i</name> <operator pos:start="689:24" pos:end="689:24">=</operator> <literal type="number" pos:start="689:26" pos:end="689:26">0</literal></expr>;</init> <condition pos:start="689:29" pos:end="689:43"><expr pos:start="689:29" pos:end="689:42"><name pos:start="689:29" pos:end="689:29">i</name> <operator pos:start="689:31" pos:end="689:31">&lt;</operator> <name pos:start="689:33" pos:end="689:42">nb_globals</name></expr>;</condition> <incr pos:start="689:45" pos:end="689:47"><expr pos:start="689:45" pos:end="689:47"><name pos:start="689:45" pos:end="689:45">i</name><operator pos:start="689:46" pos:end="689:47">++</operator></expr></incr>)</control> <block pos:start="689:50" pos:end="693:17">{<block_content pos:start="691:21" pos:end="691:56">

                    <expr_stmt pos:start="691:21" pos:end="691:56"><expr pos:start="691:21" pos:end="691:55"><call pos:start="691:21" pos:end="691:55"><name pos:start="691:21" pos:end="691:30">reset_temp</name><argument_list pos:start="691:31" pos:end="691:55">(<argument pos:start="691:32" pos:end="691:32"><expr pos:start="691:32" pos:end="691:32"><name pos:start="691:32" pos:end="691:32">i</name></expr></argument>, <argument pos:start="691:35" pos:end="691:42"><expr pos:start="691:35" pos:end="691:42"><name pos:start="691:35" pos:end="691:42">nb_temps</name></expr></argument>, <argument pos:start="691:45" pos:end="691:54"><expr pos:start="691:45" pos:end="691:54"><name pos:start="691:45" pos:end="691:54">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <for pos:start="697:13" pos:end="701:13">for <control pos:start="697:17" pos:end="697:49">(<init pos:start="697:18" pos:end="697:23"><expr pos:start="697:18" pos:end="697:22"><name pos:start="697:18" pos:end="697:18">i</name> <operator pos:start="697:20" pos:end="697:20">=</operator> <literal type="number" pos:start="697:22" pos:end="697:22">0</literal></expr>;</init> <condition pos:start="697:25" pos:end="697:44"><expr pos:start="697:25" pos:end="697:43"><name pos:start="697:25" pos:end="697:25">i</name> <operator pos:start="697:27" pos:end="697:27">&lt;</operator> <operator pos:start="697:29" pos:end="697:29">(</operator><name pos:start="697:30" pos:end="697:36"><name pos:start="697:30" pos:end="697:33">args</name><index pos:start="697:34" pos:end="697:36">[<expr pos:start="697:35" pos:end="697:35"><literal type="number" pos:start="697:35" pos:end="697:35">0</literal></expr>]</index></name> <operator pos:start="697:38" pos:end="697:39">&gt;&gt;</operator> <literal type="number" pos:start="697:41" pos:end="697:42">16</literal><operator pos:start="697:43" pos:end="697:43">)</operator></expr>;</condition> <incr pos:start="697:46" pos:end="697:48"><expr pos:start="697:46" pos:end="697:48"><name pos:start="697:46" pos:end="697:46">i</name><operator pos:start="697:47" pos:end="697:48">++</operator></expr></incr>)</control> <block pos:start="697:51" pos:end="701:13">{<block_content pos:start="699:17" pos:end="699:62">

                <expr_stmt pos:start="699:17" pos:end="699:62"><expr pos:start="699:17" pos:end="699:61"><call pos:start="699:17" pos:end="699:61"><name pos:start="699:17" pos:end="699:26">reset_temp</name><argument_list pos:start="699:27" pos:end="699:61">(<argument pos:start="699:28" pos:end="699:38"><expr pos:start="699:28" pos:end="699:38"><name pos:start="699:28" pos:end="699:38"><name pos:start="699:28" pos:end="699:31">args</name><index pos:start="699:32" pos:end="699:38">[<expr pos:start="699:33" pos:end="699:37"><name pos:start="699:33" pos:end="699:33">i</name> <operator pos:start="699:35" pos:end="699:35">+</operator> <literal type="number" pos:start="699:37" pos:end="699:37">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="699:41" pos:end="699:48"><expr pos:start="699:41" pos:end="699:48"><name pos:start="699:41" pos:end="699:48">nb_temps</name></expr></argument>, <argument pos:start="699:51" pos:end="699:60"><expr pos:start="699:51" pos:end="699:60"><name pos:start="699:51" pos:end="699:60">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="703:13" pos:end="703:33"><expr pos:start="703:13" pos:end="703:32"><name pos:start="703:13" pos:end="703:13">i</name> <operator pos:start="703:15" pos:end="703:15">=</operator> <name pos:start="703:17" pos:end="703:28">nb_call_args</name> <operator pos:start="703:30" pos:end="703:30">+</operator> <literal type="number" pos:start="703:32" pos:end="703:32">3</literal></expr>;</expr_stmt>

            <while pos:start="705:13" pos:end="715:13">while <condition pos:start="705:19" pos:end="705:21">(<expr pos:start="705:20" pos:end="705:20"><name pos:start="705:20" pos:end="705:20">i</name></expr>)</condition> <block pos:start="705:23" pos:end="715:13">{<block_content pos:start="707:17" pos:end="713:20">

                <expr_stmt pos:start="707:17" pos:end="707:34"><expr pos:start="707:17" pos:end="707:33"><operator pos:start="707:17" pos:end="707:17">*</operator><name pos:start="707:18" pos:end="707:25">gen_args</name> <operator pos:start="707:27" pos:end="707:27">=</operator> <operator pos:start="707:29" pos:end="707:29">*</operator><name pos:start="707:30" pos:end="707:33">args</name></expr>;</expr_stmt>

                <expr_stmt pos:start="709:17" pos:end="709:23"><expr pos:start="709:17" pos:end="709:22"><name pos:start="709:17" pos:end="709:20">args</name><operator pos:start="709:21" pos:end="709:22">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="711:17" pos:end="711:27"><expr pos:start="711:17" pos:end="711:26"><name pos:start="711:17" pos:end="711:24">gen_args</name><operator pos:start="711:25" pos:end="711:26">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="713:17" pos:end="713:20"><expr pos:start="713:17" pos:end="713:19"><name pos:start="713:17" pos:end="713:17">i</name><operator pos:start="713:18" pos:end="713:19">--</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

            <break pos:start="717:13" pos:end="717:18">break;</break>

        <default pos:start="719:9" pos:end="719:16">default:</default>

            <comment type="block" pos:start="721:13" pos:end="727:31">/* Default case: we do know nothing about operation so no

               propagation is done.  We trash everything if the operation

               is the end of a basic block, otherwise we only trash the

               output args.  */</comment>

            <if_stmt pos:start="729:13" pos:end="741:13"><if pos:start="729:13" pos:end="733:13">if <condition pos:start="729:16" pos:end="729:44">(<expr pos:start="729:17" pos:end="729:43"><name pos:start="729:17" pos:end="729:26"><name pos:start="729:17" pos:end="729:19">def</name><operator pos:start="729:20" pos:end="729:21">-&gt;</operator><name pos:start="729:22" pos:end="729:26">flags</name></name> <operator pos:start="729:28" pos:end="729:28">&amp;</operator> <name pos:start="729:30" pos:end="729:43">TCG_OPF_BB_END</name></expr>)</condition> <block pos:start="729:46" pos:end="733:13">{<block_content pos:start="731:17" pos:end="731:74">

                <expr_stmt pos:start="731:17" pos:end="731:74"><expr pos:start="731:17" pos:end="731:73"><call pos:start="731:17" pos:end="731:73"><name pos:start="731:17" pos:end="731:22">memset</name><argument_list pos:start="731:23" pos:end="731:73">(<argument pos:start="731:24" pos:end="731:28"><expr pos:start="731:24" pos:end="731:28"><name pos:start="731:24" pos:end="731:28">temps</name></expr></argument>, <argument pos:start="731:31" pos:end="731:31"><expr pos:start="731:31" pos:end="731:31"><literal type="number" pos:start="731:31" pos:end="731:31">0</literal></expr></argument>, <argument pos:start="731:34" pos:end="731:72"><expr pos:start="731:34" pos:end="731:72"><name pos:start="731:34" pos:end="731:41">nb_temps</name> <operator pos:start="731:43" pos:end="731:43">*</operator> <sizeof pos:start="731:45" pos:end="731:72">sizeof<argument_list pos:start="731:51" pos:end="731:72">(<argument pos:start="731:52" pos:end="731:71"><expr pos:start="731:52" pos:end="731:71">struct <name pos:start="731:59" pos:end="731:71">tcg_temp_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="733:15" pos:end="741:13">else <block pos:start="733:20" pos:end="741:13">{<block_content pos:start="735:17" pos:end="739:17">

                <for pos:start="735:17" pos:end="739:17">for <control pos:start="735:21" pos:end="735:51">(<init pos:start="735:22" pos:end="735:27"><expr pos:start="735:22" pos:end="735:26"><name pos:start="735:22" pos:end="735:22">i</name> <operator pos:start="735:24" pos:end="735:24">=</operator> <literal type="number" pos:start="735:26" pos:end="735:26">0</literal></expr>;</init> <condition pos:start="735:29" pos:end="735:46"><expr pos:start="735:29" pos:end="735:45"><name pos:start="735:29" pos:end="735:29">i</name> <operator pos:start="735:31" pos:end="735:31">&lt;</operator> <name pos:start="735:33" pos:end="735:45"><name pos:start="735:33" pos:end="735:35">def</name><operator pos:start="735:36" pos:end="735:37">-&gt;</operator><name pos:start="735:38" pos:end="735:45">nb_oargs</name></name></expr>;</condition> <incr pos:start="735:48" pos:end="735:50"><expr pos:start="735:48" pos:end="735:50"><name pos:start="735:48" pos:end="735:48">i</name><operator pos:start="735:49" pos:end="735:50">++</operator></expr></incr>)</control> <block pos:start="735:53" pos:end="739:17">{<block_content pos:start="737:21" pos:end="737:62">

                    <expr_stmt pos:start="737:21" pos:end="737:62"><expr pos:start="737:21" pos:end="737:61"><call pos:start="737:21" pos:end="737:61"><name pos:start="737:21" pos:end="737:30">reset_temp</name><argument_list pos:start="737:31" pos:end="737:61">(<argument pos:start="737:32" pos:end="737:38"><expr pos:start="737:32" pos:end="737:38"><name pos:start="737:32" pos:end="737:38"><name pos:start="737:32" pos:end="737:35">args</name><index pos:start="737:36" pos:end="737:38">[<expr pos:start="737:37" pos:end="737:37"><name pos:start="737:37" pos:end="737:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="737:41" pos:end="737:48"><expr pos:start="737:41" pos:end="737:48"><name pos:start="737:41" pos:end="737:48">nb_temps</name></expr></argument>, <argument pos:start="737:51" pos:end="737:60"><expr pos:start="737:51" pos:end="737:60"><name pos:start="737:51" pos:end="737:60">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

            <for pos:start="743:13" pos:end="747:13">for <control pos:start="743:17" pos:end="743:46">(<init pos:start="743:18" pos:end="743:23"><expr pos:start="743:18" pos:end="743:22"><name pos:start="743:18" pos:end="743:18">i</name> <operator pos:start="743:20" pos:end="743:20">=</operator> <literal type="number" pos:start="743:22" pos:end="743:22">0</literal></expr>;</init> <condition pos:start="743:25" pos:end="743:41"><expr pos:start="743:25" pos:end="743:40"><name pos:start="743:25" pos:end="743:25">i</name> <operator pos:start="743:27" pos:end="743:27">&lt;</operator> <name pos:start="743:29" pos:end="743:40"><name pos:start="743:29" pos:end="743:31">def</name><operator pos:start="743:32" pos:end="743:33">-&gt;</operator><name pos:start="743:34" pos:end="743:40">nb_args</name></name></expr>;</condition> <incr pos:start="743:43" pos:end="743:45"><expr pos:start="743:43" pos:end="743:45"><name pos:start="743:43" pos:end="743:43">i</name><operator pos:start="743:44" pos:end="743:45">++</operator></expr></incr>)</control> <block pos:start="743:48" pos:end="747:13">{<block_content pos:start="745:17" pos:end="745:38">

                <expr_stmt pos:start="745:17" pos:end="745:38"><expr pos:start="745:17" pos:end="745:37"><name pos:start="745:17" pos:end="745:27"><name pos:start="745:17" pos:end="745:24">gen_args</name><index pos:start="745:25" pos:end="745:27">[<expr pos:start="745:26" pos:end="745:26"><name pos:start="745:26" pos:end="745:26">i</name></expr>]</index></name> <operator pos:start="745:29" pos:end="745:29">=</operator> <name pos:start="745:31" pos:end="745:37"><name pos:start="745:31" pos:end="745:34">args</name><index pos:start="745:35" pos:end="745:37">[<expr pos:start="745:36" pos:end="745:36"><name pos:start="745:36" pos:end="745:36">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="749:13" pos:end="749:33"><expr pos:start="749:13" pos:end="749:32"><name pos:start="749:13" pos:end="749:16">args</name> <operator pos:start="749:18" pos:end="749:19">+=</operator> <name pos:start="749:21" pos:end="749:32"><name pos:start="749:21" pos:end="749:23">def</name><operator pos:start="749:24" pos:end="749:25">-&gt;</operator><name pos:start="749:26" pos:end="749:32">nb_args</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="751:13" pos:end="751:37"><expr pos:start="751:13" pos:end="751:36"><name pos:start="751:13" pos:end="751:20">gen_args</name> <operator pos:start="751:22" pos:end="751:23">+=</operator> <name pos:start="751:25" pos:end="751:36"><name pos:start="751:25" pos:end="751:27">def</name><operator pos:start="751:28" pos:end="751:29">-&gt;</operator><name pos:start="751:30" pos:end="751:36">nb_args</name></name></expr>;</expr_stmt>

            <break pos:start="753:13" pos:end="753:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <return pos:start="761:5" pos:end="761:20">return <expr pos:start="761:12" pos:end="761:19"><name pos:start="761:12" pos:end="761:19">gen_args</name></expr>;</return>

</block_content>}</block></function>
</unit>
