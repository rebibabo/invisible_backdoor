<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11884.c" pos:tabs="8"><function pos:start="1:1" pos:end="187:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">mpc7_decode_init</name><parameter_list pos:start="1:36" pos:end="1:59">(<parameter pos:start="1:37" pos:end="1:58"><decl pos:start="1:37" pos:end="1:58"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type> <name pos:start="1:54" pos:end="1:58">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="187:1">{<block_content pos:start="5:5" pos:end="185:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">MPCContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">c</name> <init pos:start="7:19" pos:end="7:36">= <expr pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:25">avctx</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">GetBitContext</name></type> <name pos:start="9:19" pos:end="9:20">gb</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:41"><expr pos:start="11:5" pos:end="11:40"><call pos:start="11:5" pos:end="11:40"><name pos:start="11:5" pos:end="11:20">LOCAL_ALIGNED_16</name><argument_list pos:start="11:21" pos:end="11:40">(<argument pos:start="11:22" pos:end="11:28"><expr pos:start="11:22" pos:end="11:28"><name pos:start="11:22" pos:end="11:28">uint8_t</name></expr></argument>, <argument pos:start="11:31" pos:end="11:33"><expr pos:start="11:31" pos:end="11:33"><name pos:start="11:31" pos:end="11:33">buf</name></expr></argument>, <argument pos:start="11:36" pos:end="11:39"><expr pos:start="11:36" pos:end="11:39"><index pos:start="11:36" pos:end="11:39">[<expr pos:start="11:37" pos:end="11:38"><literal type="number" pos:start="11:37" pos:end="11:38">16</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:14"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:14">int</name></type> <name pos:start="13:16" pos:end="13:30">vlc_initialized</name> <init pos:start="13:32" pos:end="13:34">= <expr pos:start="13:34" pos:end="13:34"><literal type="number" pos:start="13:34" pos:end="13:34">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:55"><decl pos:start="17:5" pos:end="17:54"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:10">static</specifier> <name pos:start="17:12" pos:end="17:19">VLC_TYPE</name></type> <name pos:start="17:21" pos:end="17:54"><name pos:start="17:21" pos:end="17:30">scfi_table</name><index pos:start="17:31" pos:end="17:51">[<expr pos:start="17:32" pos:end="17:50"><literal type="number" pos:start="17:32" pos:end="17:32">1</literal> <operator pos:start="17:34" pos:end="17:35">&lt;&lt;</operator> <name pos:start="17:37" pos:end="17:50">MPC7_SCFI_BITS</name></expr>]</index><index pos:start="17:52" pos:end="17:54">[<expr pos:start="17:53" pos:end="17:53"><literal type="number" pos:start="17:53" pos:end="17:53">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:55"><decl pos:start="19:5" pos:end="19:54"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:10">static</specifier> <name pos:start="19:12" pos:end="19:19">VLC_TYPE</name></type> <name pos:start="19:21" pos:end="19:54"><name pos:start="19:21" pos:end="19:30">dscf_table</name><index pos:start="19:31" pos:end="19:51">[<expr pos:start="19:32" pos:end="19:50"><literal type="number" pos:start="19:32" pos:end="19:32">1</literal> <operator pos:start="19:34" pos:end="19:35">&lt;&lt;</operator> <name pos:start="19:37" pos:end="19:50">MPC7_DSCF_BITS</name></expr>]</index><index pos:start="19:52" pos:end="19:54">[<expr pos:start="19:53" pos:end="19:53"><literal type="number" pos:start="19:53" pos:end="19:53">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:53"><decl pos:start="21:5" pos:end="21:52"><type pos:start="21:5" pos:end="21:19"><specifier pos:start="21:5" pos:end="21:10">static</specifier> <name pos:start="21:12" pos:end="21:19">VLC_TYPE</name></type> <name pos:start="21:21" pos:end="21:52"><name pos:start="21:21" pos:end="21:29">hdr_table</name><index pos:start="21:30" pos:end="21:49">[<expr pos:start="21:31" pos:end="21:48"><literal type="number" pos:start="21:31" pos:end="21:31">1</literal> <operator pos:start="21:33" pos:end="21:34">&lt;&lt;</operator> <name pos:start="21:36" pos:end="21:48">MPC7_HDR_BITS</name></expr>]</index><index pos:start="21:50" pos:end="21:52">[<expr pos:start="21:51" pos:end="21:51"><literal type="number" pos:start="21:51" pos:end="21:51">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:42"><decl pos:start="23:5" pos:end="23:41"><type pos:start="23:5" pos:end="23:19"><specifier pos:start="23:5" pos:end="23:10">static</specifier> <name pos:start="23:12" pos:end="23:19">VLC_TYPE</name></type> <name pos:start="23:21" pos:end="23:41"><name pos:start="23:21" pos:end="23:32">quant_tables</name><index pos:start="23:33" pos:end="23:38">[<expr pos:start="23:34" pos:end="23:37"><literal type="number" pos:start="23:34" pos:end="23:37">7224</literal></expr>]</index><index pos:start="23:39" pos:end="23:41">[<expr pos:start="23:40" pos:end="23:40"><literal type="number" pos:start="23:40" pos:end="23:40">2</literal></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:39">/* Musepack SV7 is always stereo */</comment>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:29">(<expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:13">avctx</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:23">channels</name></name> <operator pos:start="29:25" pos:end="29:26">!=</operator> <literal type="number" pos:start="29:28" pos:end="29:28">2</literal></expr>)</condition> <block pos:start="29:31" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:36">

        <expr_stmt pos:start="31:9" pos:end="33:47"><expr pos:start="31:9" pos:end="33:46"><call pos:start="31:9" pos:end="33:46"><name pos:start="31:9" pos:end="31:29">av_log_ask_for_sample</name><argument_list pos:start="31:30" pos:end="33:46">(<argument pos:start="31:31" pos:end="31:35"><expr pos:start="31:31" pos:end="31:35"><name pos:start="31:31" pos:end="31:35">avctx</name></expr></argument>, <argument pos:start="31:38" pos:end="31:75"><expr pos:start="31:38" pos:end="31:75"><literal type="string" pos:start="31:38" pos:end="31:75">"Unsupported number of channels: %d\n"</literal></expr></argument>,

                              <argument pos:start="33:31" pos:end="33:45"><expr pos:start="33:31" pos:end="33:45"><name pos:start="33:31" pos:end="33:45"><name pos:start="33:31" pos:end="33:35">avctx</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:45">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:36">return <expr pos:start="35:16" pos:end="35:35"><name pos:start="35:16" pos:end="35:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if<condition pos:start="41:7" pos:end="41:34">(<expr pos:start="41:8" pos:end="41:33"><name pos:start="41:8" pos:end="41:28"><name pos:start="41:8" pos:end="41:12">avctx</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:28">extradata_size</name></name> <operator pos:start="41:30" pos:end="41:30">&lt;</operator> <literal type="number" pos:start="41:32" pos:end="41:33">16</literal></expr>)</condition><block pos:start="41:35" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:18">

        <expr_stmt pos:start="43:9" pos:end="43:95"><expr pos:start="43:9" pos:end="43:94"><call pos:start="43:9" pos:end="43:94"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:94">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">avctx</name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:37" pos:end="43:70"><expr pos:start="43:37" pos:end="43:70"><literal type="string" pos:start="43:37" pos:end="43:70">"Too small extradata size (%i)!\n"</literal></expr></argument>, <argument pos:start="43:73" pos:end="43:93"><expr pos:start="43:73" pos:end="43:93"><name pos:start="43:73" pos:end="43:93"><name pos:start="43:73" pos:end="43:77">avctx</name><operator pos:start="43:78" pos:end="43:79">-&gt;</operator><name pos:start="43:80" pos:end="43:93">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><operator pos:start="45:16" pos:end="45:16">-</operator><literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:46"><expr pos:start="49:5" pos:end="49:45"><call pos:start="49:5" pos:end="49:45"><name pos:start="49:5" pos:end="49:10">memset</name><argument_list pos:start="49:11" pos:end="49:45">(<argument pos:start="49:12" pos:end="49:21"><expr pos:start="49:12" pos:end="49:21"><name pos:start="49:12" pos:end="49:21"><name pos:start="49:12" pos:end="49:12">c</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:21">oldDSCF</name></name></expr></argument>, <argument pos:start="49:24" pos:end="49:24"><expr pos:start="49:24" pos:end="49:24"><literal type="number" pos:start="49:24" pos:end="49:24">0</literal></expr></argument>, <argument pos:start="49:27" pos:end="49:44"><expr pos:start="49:27" pos:end="49:44"><sizeof pos:start="49:27" pos:end="49:44">sizeof<argument_list pos:start="49:33" pos:end="49:44">(<argument pos:start="49:34" pos:end="49:43"><expr pos:start="49:34" pos:end="49:43"><name pos:start="49:34" pos:end="49:43"><name pos:start="49:34" pos:end="49:34">c</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:43">oldDSCF</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><call pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:15">av_lfg_init</name><argument_list pos:start="51:16" pos:end="51:36">(<argument pos:start="51:17" pos:end="51:23"><expr pos:start="51:17" pos:end="51:23"><operator pos:start="51:17" pos:end="51:17">&amp;</operator><name pos:start="51:18" pos:end="51:23"><name pos:start="51:18" pos:end="51:18">c</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:23">rnd</name></name></expr></argument>, <argument pos:start="51:26" pos:end="51:35"><expr pos:start="51:26" pos:end="51:35"><literal type="number" pos:start="51:26" pos:end="51:35">0xDEADBEEF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><call pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:19">ff_dsputil_init</name><argument_list pos:start="53:20" pos:end="53:35">(<argument pos:start="53:21" pos:end="53:27"><expr pos:start="53:21" pos:end="53:27"><operator pos:start="53:21" pos:end="53:21">&amp;</operator><name pos:start="53:22" pos:end="53:27"><name pos:start="53:22" pos:end="53:22">c</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:27">dsp</name></name></expr></argument>, <argument pos:start="53:30" pos:end="53:34"><expr pos:start="53:30" pos:end="53:34"><name pos:start="53:30" pos:end="53:34">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:31"><expr pos:start="55:5" pos:end="55:30"><call pos:start="55:5" pos:end="55:30"><name pos:start="55:5" pos:end="55:18">ff_mpadsp_init</name><argument_list pos:start="55:19" pos:end="55:30">(<argument pos:start="55:20" pos:end="55:29"><expr pos:start="55:20" pos:end="55:29"><operator pos:start="55:20" pos:end="55:20">&amp;</operator><name pos:start="55:21" pos:end="55:29"><name pos:start="55:21" pos:end="55:21">c</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:29">mpadsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:75"><expr pos:start="57:5" pos:end="57:74"><call pos:start="57:5" pos:end="57:74"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:5">c</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:10">dsp</name><operator pos:start="57:11" pos:end="57:11">.</operator><name pos:start="57:12" pos:end="57:20">bswap_buf</name></name><argument_list pos:start="57:21" pos:end="57:74">(<argument pos:start="57:22" pos:end="57:35"><expr pos:start="57:22" pos:end="57:35"><operator pos:start="57:22" pos:end="57:22">(</operator><name pos:start="57:23" pos:end="57:30">uint32_t</name><operator pos:start="57:31" pos:end="57:31">*</operator><operator pos:start="57:32" pos:end="57:32">)</operator><name pos:start="57:33" pos:end="57:35">buf</name></expr></argument>, <argument pos:start="57:38" pos:end="57:70"><expr pos:start="57:38" pos:end="57:70"><operator pos:start="57:38" pos:end="57:38">(</operator><specifier pos:start="57:39" pos:end="57:43">const</specifier> <name pos:start="57:45" pos:end="57:52">uint32_t</name><operator pos:start="57:53" pos:end="57:53">*</operator><operator pos:start="57:54" pos:end="57:54">)</operator><name pos:start="57:55" pos:end="57:70"><name pos:start="57:55" pos:end="57:59">avctx</name><operator pos:start="57:60" pos:end="57:61">-&gt;</operator><name pos:start="57:62" pos:end="57:70">extradata</name></name></expr></argument>, <argument pos:start="57:73" pos:end="57:73"><expr pos:start="57:73" pos:end="57:73"><literal type="number" pos:start="57:73" pos:end="57:73">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:18"><expr pos:start="59:5" pos:end="59:17"><call pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:15">ff_mpc_init</name><argument_list pos:start="59:16" pos:end="59:17">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:33"><expr pos:start="61:5" pos:end="61:32"><call pos:start="61:5" pos:end="61:32"><name pos:start="61:5" pos:end="61:17">init_get_bits</name><argument_list pos:start="61:18" pos:end="61:32">(<argument pos:start="61:19" pos:end="61:21"><expr pos:start="61:19" pos:end="61:21"><operator pos:start="61:19" pos:end="61:19">&amp;</operator><name pos:start="61:20" pos:end="61:21">gb</name></expr></argument>, <argument pos:start="61:24" pos:end="61:26"><expr pos:start="61:24" pos:end="61:26"><name pos:start="61:24" pos:end="61:26">buf</name></expr></argument>, <argument pos:start="61:29" pos:end="61:31"><expr pos:start="61:29" pos:end="61:31"><literal type="number" pos:start="61:29" pos:end="61:31">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:27"><expr pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:9"><name pos:start="65:5" pos:end="65:5">c</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:9">IS</name></name> <operator pos:start="65:11" pos:end="65:11">=</operator> <call pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:21">get_bits1</name><argument_list pos:start="65:22" pos:end="65:26">(<argument pos:start="65:23" pos:end="65:25"><expr pos:start="65:23" pos:end="65:25"><operator pos:start="65:23" pos:end="65:23">&amp;</operator><name pos:start="65:24" pos:end="65:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:28"><expr pos:start="67:5" pos:end="67:27"><name pos:start="67:5" pos:end="67:10"><name pos:start="67:5" pos:end="67:5">c</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:10">MSS</name></name> <operator pos:start="67:12" pos:end="67:12">=</operator> <call pos:start="67:14" pos:end="67:27"><name pos:start="67:14" pos:end="67:22">get_bits1</name><argument_list pos:start="67:23" pos:end="67:27">(<argument pos:start="67:24" pos:end="67:26"><expr pos:start="67:24" pos:end="67:26"><operator pos:start="67:24" pos:end="67:24">&amp;</operator><name pos:start="67:25" pos:end="67:26">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:35"><expr pos:start="69:5" pos:end="69:34"><name pos:start="69:5" pos:end="69:15"><name pos:start="69:5" pos:end="69:5">c</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:15">maxbands</name></name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:34"><name pos:start="69:19" pos:end="69:26">get_bits</name><argument_list pos:start="69:27" pos:end="69:34">(<argument pos:start="69:28" pos:end="69:30"><expr pos:start="69:28" pos:end="69:30"><operator pos:start="69:28" pos:end="69:28">&amp;</operator><name pos:start="69:29" pos:end="69:30">gb</name></expr></argument>, <argument pos:start="69:33" pos:end="69:33"><expr pos:start="69:33" pos:end="69:33"><literal type="number" pos:start="69:33" pos:end="69:33">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if<condition pos:start="71:7" pos:end="71:28">(<expr pos:start="71:8" pos:end="71:27"><name pos:start="71:8" pos:end="71:18"><name pos:start="71:8" pos:end="71:8">c</name><operator pos:start="71:9" pos:end="71:10">-&gt;</operator><name pos:start="71:11" pos:end="71:18">maxbands</name></name> <operator pos:start="71:20" pos:end="71:21">&gt;=</operator> <name pos:start="71:23" pos:end="71:27">BANDS</name></expr>)</condition><block pos:start="71:29" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:18">

        <expr_stmt pos:start="73:9" pos:end="73:73"><expr pos:start="73:9" pos:end="73:72"><call pos:start="73:9" pos:end="73:72"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:72">(<argument pos:start="73:16" pos:end="73:20"><expr pos:start="73:16" pos:end="73:20"><name pos:start="73:16" pos:end="73:20">avctx</name></expr></argument>, <argument pos:start="73:23" pos:end="73:34"><expr pos:start="73:23" pos:end="73:34"><name pos:start="73:23" pos:end="73:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:37" pos:end="73:58"><expr pos:start="73:37" pos:end="73:58"><literal type="string" pos:start="73:37" pos:end="73:58">"Too many bands: %i\n"</literal></expr></argument>, <argument pos:start="73:61" pos:end="73:71"><expr pos:start="73:61" pos:end="73:71"><name pos:start="73:61" pos:end="73:71"><name pos:start="73:61" pos:end="73:61">c</name><operator pos:start="73:62" pos:end="73:63">-&gt;</operator><name pos:start="73:64" pos:end="73:71">maxbands</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:18">return <expr pos:start="75:16" pos:end="75:17"><operator pos:start="75:16" pos:end="75:16">-</operator><literal type="number" pos:start="75:17" pos:end="75:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:28"><expr pos:start="79:5" pos:end="79:27"><call pos:start="79:5" pos:end="79:27"><name pos:start="79:5" pos:end="79:18">skip_bits_long</name><argument_list pos:start="79:19" pos:end="79:27">(<argument pos:start="79:20" pos:end="79:22"><expr pos:start="79:20" pos:end="79:22"><operator pos:start="79:20" pos:end="79:20">&amp;</operator><name pos:start="79:21" pos:end="79:22">gb</name></expr></argument>, <argument pos:start="79:25" pos:end="79:26"><expr pos:start="79:25" pos:end="79:26"><literal type="number" pos:start="79:25" pos:end="79:26">88</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:32"><expr pos:start="81:5" pos:end="81:31"><name pos:start="81:5" pos:end="81:14"><name pos:start="81:5" pos:end="81:5">c</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:14">gapless</name></name> <operator pos:start="81:16" pos:end="81:16">=</operator> <call pos:start="81:18" pos:end="81:31"><name pos:start="81:18" pos:end="81:26">get_bits1</name><argument_list pos:start="81:27" pos:end="81:31">(<argument pos:start="81:28" pos:end="81:30"><expr pos:start="81:28" pos:end="81:30"><operator pos:start="81:28" pos:end="81:28">&amp;</operator><name pos:start="81:29" pos:end="81:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:40"><expr pos:start="83:5" pos:end="83:39"><name pos:start="83:5" pos:end="83:19"><name pos:start="83:5" pos:end="83:5">c</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:19">lastframelen</name></name> <operator pos:start="83:21" pos:end="83:21">=</operator> <call pos:start="83:23" pos:end="83:39"><name pos:start="83:23" pos:end="83:30">get_bits</name><argument_list pos:start="83:31" pos:end="83:39">(<argument pos:start="83:32" pos:end="83:34"><expr pos:start="83:32" pos:end="83:34"><operator pos:start="83:32" pos:end="83:32">&amp;</operator><name pos:start="83:33" pos:end="83:34">gb</name></expr></argument>, <argument pos:start="83:37" pos:end="83:38"><expr pos:start="83:37" pos:end="83:38"><literal type="number" pos:start="83:37" pos:end="83:38">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="87:69"><expr pos:start="85:5" pos:end="87:68"><call pos:start="85:5" pos:end="87:68"><name pos:start="85:5" pos:end="85:10">av_log</name><argument_list pos:start="85:11" pos:end="87:68">(<argument pos:start="85:12" pos:end="85:16"><expr pos:start="85:12" pos:end="85:16"><name pos:start="85:12" pos:end="85:16">avctx</name></expr></argument>, <argument pos:start="85:19" pos:end="85:30"><expr pos:start="85:19" pos:end="85:30"><name pos:start="85:19" pos:end="85:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="85:33" pos:end="85:79"><expr pos:start="85:33" pos:end="85:79"><literal type="string" pos:start="85:33" pos:end="85:79">"IS: %d, MSS: %d, TG: %d, LFL: %d, bands: %d\n"</literal></expr></argument>,

            <argument pos:start="87:13" pos:end="87:17"><expr pos:start="87:13" pos:end="87:17"><name pos:start="87:13" pos:end="87:17"><name pos:start="87:13" pos:end="87:13">c</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:17">IS</name></name></expr></argument>, <argument pos:start="87:20" pos:end="87:25"><expr pos:start="87:20" pos:end="87:25"><name pos:start="87:20" pos:end="87:25"><name pos:start="87:20" pos:end="87:20">c</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:25">MSS</name></name></expr></argument>, <argument pos:start="87:28" pos:end="87:37"><expr pos:start="87:28" pos:end="87:37"><name pos:start="87:28" pos:end="87:37"><name pos:start="87:28" pos:end="87:28">c</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:37">gapless</name></name></expr></argument>, <argument pos:start="87:40" pos:end="87:54"><expr pos:start="87:40" pos:end="87:54"><name pos:start="87:40" pos:end="87:54"><name pos:start="87:40" pos:end="87:40">c</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:54">lastframelen</name></name></expr></argument>, <argument pos:start="87:57" pos:end="87:67"><expr pos:start="87:57" pos:end="87:67"><name pos:start="87:57" pos:end="87:67"><name pos:start="87:57" pos:end="87:57">c</name><operator pos:start="87:58" pos:end="87:59">-&gt;</operator><name pos:start="87:60" pos:end="87:67">maxbands</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:26"><expr pos:start="89:5" pos:end="89:25"><name pos:start="89:5" pos:end="89:21"><name pos:start="89:5" pos:end="89:5">c</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:21">frames_to_skip</name></name> <operator pos:start="89:23" pos:end="89:23">=</operator> <literal type="number" pos:start="89:25" pos:end="89:25">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:42"><expr pos:start="93:5" pos:end="93:41"><name pos:start="93:5" pos:end="93:21"><name pos:start="93:5" pos:end="93:9">avctx</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:21">sample_fmt</name></name> <operator pos:start="93:23" pos:end="93:23">=</operator> <name pos:start="93:25" pos:end="93:41">AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:48"><expr pos:start="95:5" pos:end="95:47"><name pos:start="95:5" pos:end="95:25"><name pos:start="95:5" pos:end="95:9">avctx</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:25">channel_layout</name></name> <operator pos:start="95:27" pos:end="95:27">=</operator> <name pos:start="95:29" pos:end="95:47">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt>



    <if_stmt pos:start="99:5" pos:end="99:33"><if pos:start="99:5" pos:end="99:33">if<condition pos:start="99:7" pos:end="99:23">(<expr pos:start="99:8" pos:end="99:22"><name pos:start="99:8" pos:end="99:22">vlc_initialized</name></expr>)</condition><block type="pseudo" pos:start="99:25" pos:end="99:33"><block_content pos:start="99:25" pos:end="99:33"> <return pos:start="99:25" pos:end="99:33">return <expr pos:start="99:32" pos:end="99:32"><literal type="number" pos:start="99:32" pos:end="99:32">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:49"><expr pos:start="101:5" pos:end="101:48"><call pos:start="101:5" pos:end="101:48"><name pos:start="101:5" pos:end="101:10">av_log</name><argument_list pos:start="101:11" pos:end="101:48">(<argument pos:start="101:12" pos:end="101:16"><expr pos:start="101:12" pos:end="101:16"><name pos:start="101:12" pos:end="101:16">avctx</name></expr></argument>, <argument pos:start="101:19" pos:end="101:30"><expr pos:start="101:19" pos:end="101:30"><name pos:start="101:19" pos:end="101:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="101:33" pos:end="101:47"><expr pos:start="101:33" pos:end="101:47"><literal type="string" pos:start="101:33" pos:end="101:47">"Initing VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:32"><expr pos:start="103:5" pos:end="103:31"><name pos:start="103:5" pos:end="103:18"><name pos:start="103:5" pos:end="103:12">scfi_vlc</name><operator pos:start="103:13" pos:end="103:13">.</operator><name pos:start="103:14" pos:end="103:18">table</name></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:31">scfi_table</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:51"><expr pos:start="105:5" pos:end="105:50"><name pos:start="105:5" pos:end="105:28"><name pos:start="105:5" pos:end="105:12">scfi_vlc</name><operator pos:start="105:13" pos:end="105:13">.</operator><name pos:start="105:14" pos:end="105:28">table_allocated</name></name> <operator pos:start="105:30" pos:end="105:30">=</operator> <literal type="number" pos:start="105:32" pos:end="105:32">1</literal> <operator pos:start="105:34" pos:end="105:35">&lt;&lt;</operator> <name pos:start="105:37" pos:end="105:50">MPC7_SCFI_BITS</name></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="117:5"><if pos:start="107:5" pos:end="117:5">if<condition pos:start="107:7" pos:end="111:62">(<expr pos:start="107:8" pos:end="111:61"><call pos:start="107:8" pos:end="111:61"><name pos:start="107:8" pos:end="107:15">init_vlc</name><argument_list pos:start="107:16" pos:end="111:61">(<argument pos:start="107:17" pos:end="107:25"><expr pos:start="107:17" pos:end="107:25"><operator pos:start="107:17" pos:end="107:17">&amp;</operator><name pos:start="107:18" pos:end="107:25">scfi_vlc</name></expr></argument>, <argument pos:start="107:28" pos:end="107:41"><expr pos:start="107:28" pos:end="107:41"><name pos:start="107:28" pos:end="107:41">MPC7_SCFI_BITS</name></expr></argument>, <argument pos:start="107:44" pos:end="107:57"><expr pos:start="107:44" pos:end="107:57"><name pos:start="107:44" pos:end="107:57">MPC7_SCFI_SIZE</name></expr></argument>,

                <argument pos:start="109:17" pos:end="109:29"><expr pos:start="109:17" pos:end="109:29"><operator pos:start="109:17" pos:end="109:17">&amp;</operator><name pos:start="109:18" pos:end="109:29"><name pos:start="109:18" pos:end="109:26">mpc7_scfi</name><index pos:start="109:27" pos:end="109:29">[<expr pos:start="109:28" pos:end="109:28"><literal type="number" pos:start="109:28" pos:end="109:28">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="109:32" pos:end="109:32"><expr pos:start="109:32" pos:end="109:32"><literal type="number" pos:start="109:32" pos:end="109:32">2</literal></expr></argument>, <argument pos:start="109:35" pos:end="109:35"><expr pos:start="109:35" pos:end="109:35"><literal type="number" pos:start="109:35" pos:end="109:35">1</literal></expr></argument>,

                <argument pos:start="111:17" pos:end="111:29"><expr pos:start="111:17" pos:end="111:29"><operator pos:start="111:17" pos:end="111:17">&amp;</operator><name pos:start="111:18" pos:end="111:29"><name pos:start="111:18" pos:end="111:26">mpc7_scfi</name><index pos:start="111:27" pos:end="111:29">[<expr pos:start="111:28" pos:end="111:28"><literal type="number" pos:start="111:28" pos:end="111:28">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="111:32" pos:end="111:32"><expr pos:start="111:32" pos:end="111:32"><literal type="number" pos:start="111:32" pos:end="111:32">2</literal></expr></argument>, <argument pos:start="111:35" pos:end="111:35"><expr pos:start="111:35" pos:end="111:35"><literal type="number" pos:start="111:35" pos:end="111:35">1</literal></expr></argument>, <argument pos:start="111:38" pos:end="111:60"><expr pos:start="111:38" pos:end="111:60"><name pos:start="111:38" pos:end="111:60">INIT_VLC_USE_NEW_STATIC</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="111:63" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:18">

        <expr_stmt pos:start="113:9" pos:end="113:62"><expr pos:start="113:9" pos:end="113:61"><call pos:start="113:9" pos:end="113:61"><name pos:start="113:9" pos:end="113:14">av_log</name><argument_list pos:start="113:15" pos:end="113:61">(<argument pos:start="113:16" pos:end="113:20"><expr pos:start="113:16" pos:end="113:20"><name pos:start="113:16" pos:end="113:20">avctx</name></expr></argument>, <argument pos:start="113:23" pos:end="113:34"><expr pos:start="113:23" pos:end="113:34"><name pos:start="113:23" pos:end="113:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:37" pos:end="113:60"><expr pos:start="113:37" pos:end="113:60"><literal type="string" pos:start="113:37" pos:end="113:60">"Cannot init SCFI VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="115:9" pos:end="115:18">return <expr pos:start="115:16" pos:end="115:17"><operator pos:start="115:16" pos:end="115:16">-</operator><literal type="number" pos:start="115:17" pos:end="115:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:32"><expr pos:start="119:5" pos:end="119:31"><name pos:start="119:5" pos:end="119:18"><name pos:start="119:5" pos:end="119:12">dscf_vlc</name><operator pos:start="119:13" pos:end="119:13">.</operator><name pos:start="119:14" pos:end="119:18">table</name></name> <operator pos:start="119:20" pos:end="119:20">=</operator> <name pos:start="119:22" pos:end="119:31">dscf_table</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:51"><expr pos:start="121:5" pos:end="121:50"><name pos:start="121:5" pos:end="121:28"><name pos:start="121:5" pos:end="121:12">dscf_vlc</name><operator pos:start="121:13" pos:end="121:13">.</operator><name pos:start="121:14" pos:end="121:28">table_allocated</name></name> <operator pos:start="121:30" pos:end="121:30">=</operator> <literal type="number" pos:start="121:32" pos:end="121:32">1</literal> <operator pos:start="121:34" pos:end="121:35">&lt;&lt;</operator> <name pos:start="121:37" pos:end="121:50">MPC7_DSCF_BITS</name></expr>;</expr_stmt>

    <if_stmt pos:start="123:5" pos:end="133:5"><if pos:start="123:5" pos:end="133:5">if<condition pos:start="123:7" pos:end="127:62">(<expr pos:start="123:8" pos:end="127:61"><call pos:start="123:8" pos:end="127:61"><name pos:start="123:8" pos:end="123:15">init_vlc</name><argument_list pos:start="123:16" pos:end="127:61">(<argument pos:start="123:17" pos:end="123:25"><expr pos:start="123:17" pos:end="123:25"><operator pos:start="123:17" pos:end="123:17">&amp;</operator><name pos:start="123:18" pos:end="123:25">dscf_vlc</name></expr></argument>, <argument pos:start="123:28" pos:end="123:41"><expr pos:start="123:28" pos:end="123:41"><name pos:start="123:28" pos:end="123:41">MPC7_DSCF_BITS</name></expr></argument>, <argument pos:start="123:44" pos:end="123:57"><expr pos:start="123:44" pos:end="123:57"><name pos:start="123:44" pos:end="123:57">MPC7_DSCF_SIZE</name></expr></argument>,

                <argument pos:start="125:17" pos:end="125:29"><expr pos:start="125:17" pos:end="125:29"><operator pos:start="125:17" pos:end="125:17">&amp;</operator><name pos:start="125:18" pos:end="125:29"><name pos:start="125:18" pos:end="125:26">mpc7_dscf</name><index pos:start="125:27" pos:end="125:29">[<expr pos:start="125:28" pos:end="125:28"><literal type="number" pos:start="125:28" pos:end="125:28">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="125:32" pos:end="125:32"><expr pos:start="125:32" pos:end="125:32"><literal type="number" pos:start="125:32" pos:end="125:32">2</literal></expr></argument>, <argument pos:start="125:35" pos:end="125:35"><expr pos:start="125:35" pos:end="125:35"><literal type="number" pos:start="125:35" pos:end="125:35">1</literal></expr></argument>,

                <argument pos:start="127:17" pos:end="127:29"><expr pos:start="127:17" pos:end="127:29"><operator pos:start="127:17" pos:end="127:17">&amp;</operator><name pos:start="127:18" pos:end="127:29"><name pos:start="127:18" pos:end="127:26">mpc7_dscf</name><index pos:start="127:27" pos:end="127:29">[<expr pos:start="127:28" pos:end="127:28"><literal type="number" pos:start="127:28" pos:end="127:28">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="127:32" pos:end="127:32"><expr pos:start="127:32" pos:end="127:32"><literal type="number" pos:start="127:32" pos:end="127:32">2</literal></expr></argument>, <argument pos:start="127:35" pos:end="127:35"><expr pos:start="127:35" pos:end="127:35"><literal type="number" pos:start="127:35" pos:end="127:35">1</literal></expr></argument>, <argument pos:start="127:38" pos:end="127:60"><expr pos:start="127:38" pos:end="127:60"><name pos:start="127:38" pos:end="127:60">INIT_VLC_USE_NEW_STATIC</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="127:63" pos:end="133:5">{<block_content pos:start="129:9" pos:end="131:18">

        <expr_stmt pos:start="129:9" pos:end="129:62"><expr pos:start="129:9" pos:end="129:61"><call pos:start="129:9" pos:end="129:61"><name pos:start="129:9" pos:end="129:14">av_log</name><argument_list pos:start="129:15" pos:end="129:61">(<argument pos:start="129:16" pos:end="129:20"><expr pos:start="129:16" pos:end="129:20"><name pos:start="129:16" pos:end="129:20">avctx</name></expr></argument>, <argument pos:start="129:23" pos:end="129:34"><expr pos:start="129:23" pos:end="129:34"><name pos:start="129:23" pos:end="129:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:37" pos:end="129:60"><expr pos:start="129:37" pos:end="129:60"><literal type="string" pos:start="129:37" pos:end="129:60">"Cannot init DSCF VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:18">return <expr pos:start="131:16" pos:end="131:17"><operator pos:start="131:16" pos:end="131:16">-</operator><literal type="number" pos:start="131:17" pos:end="131:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:30"><expr pos:start="135:5" pos:end="135:29"><name pos:start="135:5" pos:end="135:17"><name pos:start="135:5" pos:end="135:11">hdr_vlc</name><operator pos:start="135:12" pos:end="135:12">.</operator><name pos:start="135:13" pos:end="135:17">table</name></name> <operator pos:start="135:19" pos:end="135:19">=</operator> <name pos:start="135:21" pos:end="135:29">hdr_table</name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:49"><expr pos:start="137:5" pos:end="137:48"><name pos:start="137:5" pos:end="137:27"><name pos:start="137:5" pos:end="137:11">hdr_vlc</name><operator pos:start="137:12" pos:end="137:12">.</operator><name pos:start="137:13" pos:end="137:27">table_allocated</name></name> <operator pos:start="137:29" pos:end="137:29">=</operator> <literal type="number" pos:start="137:31" pos:end="137:31">1</literal> <operator pos:start="137:33" pos:end="137:34">&lt;&lt;</operator> <name pos:start="137:36" pos:end="137:48">MPC7_HDR_BITS</name></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="149:5"><if pos:start="139:5" pos:end="149:5">if<condition pos:start="139:7" pos:end="143:61">(<expr pos:start="139:8" pos:end="143:60"><call pos:start="139:8" pos:end="143:60"><name pos:start="139:8" pos:end="139:15">init_vlc</name><argument_list pos:start="139:16" pos:end="143:60">(<argument pos:start="139:17" pos:end="139:24"><expr pos:start="139:17" pos:end="139:24"><operator pos:start="139:17" pos:end="139:17">&amp;</operator><name pos:start="139:18" pos:end="139:24">hdr_vlc</name></expr></argument>, <argument pos:start="139:27" pos:end="139:39"><expr pos:start="139:27" pos:end="139:39"><name pos:start="139:27" pos:end="139:39">MPC7_HDR_BITS</name></expr></argument>, <argument pos:start="139:42" pos:end="139:54"><expr pos:start="139:42" pos:end="139:54"><name pos:start="139:42" pos:end="139:54">MPC7_HDR_SIZE</name></expr></argument>,

                <argument pos:start="141:17" pos:end="141:28"><expr pos:start="141:17" pos:end="141:28"><operator pos:start="141:17" pos:end="141:17">&amp;</operator><name pos:start="141:18" pos:end="141:28"><name pos:start="141:18" pos:end="141:25">mpc7_hdr</name><index pos:start="141:26" pos:end="141:28">[<expr pos:start="141:27" pos:end="141:27"><literal type="number" pos:start="141:27" pos:end="141:27">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="141:31" pos:end="141:31"><expr pos:start="141:31" pos:end="141:31"><literal type="number" pos:start="141:31" pos:end="141:31">2</literal></expr></argument>, <argument pos:start="141:34" pos:end="141:34"><expr pos:start="141:34" pos:end="141:34"><literal type="number" pos:start="141:34" pos:end="141:34">1</literal></expr></argument>,

                <argument pos:start="143:17" pos:end="143:28"><expr pos:start="143:17" pos:end="143:28"><operator pos:start="143:17" pos:end="143:17">&amp;</operator><name pos:start="143:18" pos:end="143:28"><name pos:start="143:18" pos:end="143:25">mpc7_hdr</name><index pos:start="143:26" pos:end="143:28">[<expr pos:start="143:27" pos:end="143:27"><literal type="number" pos:start="143:27" pos:end="143:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="143:31" pos:end="143:31"><expr pos:start="143:31" pos:end="143:31"><literal type="number" pos:start="143:31" pos:end="143:31">2</literal></expr></argument>, <argument pos:start="143:34" pos:end="143:34"><expr pos:start="143:34" pos:end="143:34"><literal type="number" pos:start="143:34" pos:end="143:34">1</literal></expr></argument>, <argument pos:start="143:37" pos:end="143:59"><expr pos:start="143:37" pos:end="143:59"><name pos:start="143:37" pos:end="143:59">INIT_VLC_USE_NEW_STATIC</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="143:62" pos:end="149:5">{<block_content pos:start="145:9" pos:end="147:18">

        <expr_stmt pos:start="145:9" pos:end="145:61"><expr pos:start="145:9" pos:end="145:60"><call pos:start="145:9" pos:end="145:60"><name pos:start="145:9" pos:end="145:14">av_log</name><argument_list pos:start="145:15" pos:end="145:60">(<argument pos:start="145:16" pos:end="145:20"><expr pos:start="145:16" pos:end="145:20"><name pos:start="145:16" pos:end="145:20">avctx</name></expr></argument>, <argument pos:start="145:23" pos:end="145:34"><expr pos:start="145:23" pos:end="145:34"><name pos:start="145:23" pos:end="145:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="145:37" pos:end="145:59"><expr pos:start="145:37" pos:end="145:59"><literal type="string" pos:start="145:37" pos:end="145:59">"Cannot init HDR VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="147:9" pos:end="147:18">return <expr pos:start="147:16" pos:end="147:17"><operator pos:start="147:16" pos:end="147:16">-</operator><literal type="number" pos:start="147:17" pos:end="147:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="151:5" pos:end="173:5">for<control pos:start="151:8" pos:end="151:46">(<init pos:start="151:9" pos:end="151:14"><expr pos:start="151:9" pos:end="151:13"><name pos:start="151:9" pos:end="151:9">i</name> <operator pos:start="151:11" pos:end="151:11">=</operator> <literal type="number" pos:start="151:13" pos:end="151:13">0</literal></expr>;</init> <condition pos:start="151:16" pos:end="151:41"><expr pos:start="151:16" pos:end="151:40"><name pos:start="151:16" pos:end="151:16">i</name> <operator pos:start="151:18" pos:end="151:18">&lt;</operator> <name pos:start="151:20" pos:end="151:40">MPC7_QUANT_VLC_TABLES</name></expr>;</condition> <incr pos:start="151:43" pos:end="151:45"><expr pos:start="151:43" pos:end="151:45"><name pos:start="151:43" pos:end="151:43">i</name><operator pos:start="151:44" pos:end="151:45">++</operator></expr></incr>)</control><block pos:start="151:47" pos:end="173:5">{<block_content pos:start="153:9" pos:end="171:9">

        <for pos:start="153:9" pos:end="171:9">for<control pos:start="153:12" pos:end="153:30">(<init pos:start="153:13" pos:end="153:18"><expr pos:start="153:13" pos:end="153:17"><name pos:start="153:13" pos:end="153:13">j</name> <operator pos:start="153:15" pos:end="153:15">=</operator> <literal type="number" pos:start="153:17" pos:end="153:17">0</literal></expr>;</init> <condition pos:start="153:20" pos:end="153:25"><expr pos:start="153:20" pos:end="153:24"><name pos:start="153:20" pos:end="153:20">j</name> <operator pos:start="153:22" pos:end="153:22">&lt;</operator> <literal type="number" pos:start="153:24" pos:end="153:24">2</literal></expr>;</condition> <incr pos:start="153:27" pos:end="153:29"><expr pos:start="153:27" pos:end="153:29"><name pos:start="153:27" pos:end="153:27">j</name><operator pos:start="153:28" pos:end="153:29">++</operator></expr></incr>)</control><block pos:start="153:31" pos:end="171:9">{<block_content pos:start="155:13" pos:end="169:13">

            <expr_stmt pos:start="155:13" pos:end="155:74"><expr pos:start="155:13" pos:end="155:73"><name pos:start="155:13" pos:end="155:27"><name pos:start="155:13" pos:end="155:21">quant_vlc</name><index pos:start="155:22" pos:end="155:24">[<expr pos:start="155:23" pos:end="155:23"><name pos:start="155:23" pos:end="155:23">i</name></expr>]</index><index pos:start="155:25" pos:end="155:27">[<expr pos:start="155:26" pos:end="155:26"><name pos:start="155:26" pos:end="155:26">j</name></expr>]</index></name><operator pos:start="155:28" pos:end="155:28">.</operator><name pos:start="155:29" pos:end="155:33">table</name> <operator pos:start="155:35" pos:end="155:35">=</operator> <operator pos:start="155:37" pos:end="155:37">&amp;</operator><name pos:start="155:38" pos:end="155:73"><name pos:start="155:38" pos:end="155:49">quant_tables</name><index pos:start="155:50" pos:end="155:73">[<expr pos:start="155:51" pos:end="155:72"><name pos:start="155:51" pos:end="155:72"><name pos:start="155:51" pos:end="155:63">quant_offsets</name><index pos:start="155:64" pos:end="155:72">[<expr pos:start="155:65" pos:end="155:71"><name pos:start="155:65" pos:end="155:65">i</name><operator pos:start="155:66" pos:end="155:66">*</operator><literal type="number" pos:start="155:67" pos:end="155:69">2</literal> <operator pos:start="155:69" pos:end="155:69">+</operator> <name pos:start="155:71" pos:end="155:71">j</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:98"><expr pos:start="157:13" pos:end="157:97"><name pos:start="157:13" pos:end="157:27"><name pos:start="157:13" pos:end="157:21">quant_vlc</name><index pos:start="157:22" pos:end="157:24">[<expr pos:start="157:23" pos:end="157:23"><name pos:start="157:23" pos:end="157:23">i</name></expr>]</index><index pos:start="157:25" pos:end="157:27">[<expr pos:start="157:26" pos:end="157:26"><name pos:start="157:26" pos:end="157:26">j</name></expr>]</index></name><operator pos:start="157:28" pos:end="157:28">.</operator><name pos:start="157:29" pos:end="157:43">table_allocated</name> <operator pos:start="157:45" pos:end="157:45">=</operator> <name pos:start="157:47" pos:end="157:72"><name pos:start="157:47" pos:end="157:59">quant_offsets</name><index pos:start="157:60" pos:end="157:72">[<expr pos:start="157:61" pos:end="157:71"><name pos:start="157:61" pos:end="157:61">i</name><operator pos:start="157:62" pos:end="157:62">*</operator><literal type="number" pos:start="157:63" pos:end="157:65">2</literal> <operator pos:start="157:65" pos:end="157:65">+</operator> <name pos:start="157:67" pos:end="157:67">j</name> <operator pos:start="157:69" pos:end="157:69">+</operator> <literal type="number" pos:start="157:71" pos:end="157:71">1</literal></expr>]</index></name> <operator pos:start="157:74" pos:end="157:74">-</operator> <name pos:start="157:76" pos:end="157:97"><name pos:start="157:76" pos:end="157:88">quant_offsets</name><index pos:start="157:89" pos:end="157:97">[<expr pos:start="157:90" pos:end="157:96"><name pos:start="157:90" pos:end="157:90">i</name><operator pos:start="157:91" pos:end="157:91">*</operator><literal type="number" pos:start="157:92" pos:end="157:94">2</literal> <operator pos:start="157:94" pos:end="157:94">+</operator> <name pos:start="157:96" pos:end="157:96">j</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="169:13"><if pos:start="159:13" pos:end="169:13">if<condition pos:start="159:15" pos:end="163:81">(<expr pos:start="159:16" pos:end="163:80"><call pos:start="159:16" pos:end="163:80"><name pos:start="159:16" pos:end="159:23">init_vlc</name><argument_list pos:start="159:24" pos:end="163:80">(<argument pos:start="159:25" pos:end="159:40"><expr pos:start="159:25" pos:end="159:40"><operator pos:start="159:25" pos:end="159:25">&amp;</operator><name pos:start="159:26" pos:end="159:40"><name pos:start="159:26" pos:end="159:34">quant_vlc</name><index pos:start="159:35" pos:end="159:37">[<expr pos:start="159:36" pos:end="159:36"><name pos:start="159:36" pos:end="159:36">i</name></expr>]</index><index pos:start="159:38" pos:end="159:40">[<expr pos:start="159:39" pos:end="159:39"><name pos:start="159:39" pos:end="159:39">j</name></expr>]</index></name></expr></argument>, <argument pos:start="159:43" pos:end="159:43"><expr pos:start="159:43" pos:end="159:43"><literal type="number" pos:start="159:43" pos:end="159:43">9</literal></expr></argument>, <argument pos:start="159:46" pos:end="159:68"><expr pos:start="159:46" pos:end="159:68"><name pos:start="159:46" pos:end="159:68"><name pos:start="159:46" pos:end="159:65">mpc7_quant_vlc_sizes</name><index pos:start="159:66" pos:end="159:68">[<expr pos:start="159:67" pos:end="159:67"><name pos:start="159:67" pos:end="159:67">i</name></expr>]</index></name></expr></argument>,

                        <argument pos:start="161:25" pos:end="161:48"><expr pos:start="161:25" pos:end="161:48"><operator pos:start="161:25" pos:end="161:25">&amp;</operator><name pos:start="161:26" pos:end="161:48"><name pos:start="161:26" pos:end="161:39">mpc7_quant_vlc</name><index pos:start="161:40" pos:end="161:42">[<expr pos:start="161:41" pos:end="161:41"><name pos:start="161:41" pos:end="161:41">i</name></expr>]</index><index pos:start="161:43" pos:end="161:45">[<expr pos:start="161:44" pos:end="161:44"><name pos:start="161:44" pos:end="161:44">j</name></expr>]</index><index pos:start="161:46" pos:end="161:48">[<expr pos:start="161:47" pos:end="161:47"><literal type="number" pos:start="161:47" pos:end="161:47">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="161:51" pos:end="161:51"><expr pos:start="161:51" pos:end="161:51"><literal type="number" pos:start="161:51" pos:end="161:51">4</literal></expr></argument>, <argument pos:start="161:54" pos:end="161:54"><expr pos:start="161:54" pos:end="161:54"><literal type="number" pos:start="161:54" pos:end="161:54">2</literal></expr></argument>,

                        <argument pos:start="163:25" pos:end="163:48"><expr pos:start="163:25" pos:end="163:48"><operator pos:start="163:25" pos:end="163:25">&amp;</operator><name pos:start="163:26" pos:end="163:48"><name pos:start="163:26" pos:end="163:39">mpc7_quant_vlc</name><index pos:start="163:40" pos:end="163:42">[<expr pos:start="163:41" pos:end="163:41"><name pos:start="163:41" pos:end="163:41">i</name></expr>]</index><index pos:start="163:43" pos:end="163:45">[<expr pos:start="163:44" pos:end="163:44"><name pos:start="163:44" pos:end="163:44">j</name></expr>]</index><index pos:start="163:46" pos:end="163:48">[<expr pos:start="163:47" pos:end="163:47"><literal type="number" pos:start="163:47" pos:end="163:47">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="163:51" pos:end="163:51"><expr pos:start="163:51" pos:end="163:51"><literal type="number" pos:start="163:51" pos:end="163:51">4</literal></expr></argument>, <argument pos:start="163:54" pos:end="163:54"><expr pos:start="163:54" pos:end="163:54"><literal type="number" pos:start="163:54" pos:end="163:54">2</literal></expr></argument>, <argument pos:start="163:57" pos:end="163:79"><expr pos:start="163:57" pos:end="163:79"><name pos:start="163:57" pos:end="163:79">INIT_VLC_USE_NEW_STATIC</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="163:82" pos:end="169:13">{<block_content pos:start="165:17" pos:end="167:26">

                <expr_stmt pos:start="165:17" pos:end="165:81"><expr pos:start="165:17" pos:end="165:80"><call pos:start="165:17" pos:end="165:80"><name pos:start="165:17" pos:end="165:22">av_log</name><argument_list pos:start="165:23" pos:end="165:80">(<argument pos:start="165:24" pos:end="165:28"><expr pos:start="165:24" pos:end="165:28"><name pos:start="165:24" pos:end="165:28">avctx</name></expr></argument>, <argument pos:start="165:31" pos:end="165:42"><expr pos:start="165:31" pos:end="165:42"><name pos:start="165:31" pos:end="165:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="165:45" pos:end="165:75"><expr pos:start="165:45" pos:end="165:75"><literal type="string" pos:start="165:45" pos:end="165:75">"Cannot init QUANT VLC %i,%i\n"</literal></expr></argument>,<argument pos:start="165:77" pos:end="165:77"><expr pos:start="165:77" pos:end="165:77"><name pos:start="165:77" pos:end="165:77">i</name></expr></argument>,<argument pos:start="165:79" pos:end="165:79"><expr pos:start="165:79" pos:end="165:79"><name pos:start="165:79" pos:end="165:79">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="167:17" pos:end="167:26">return <expr pos:start="167:24" pos:end="167:25"><operator pos:start="167:24" pos:end="167:24">-</operator><literal type="number" pos:start="167:25" pos:end="167:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="175:5" pos:end="175:24"><expr pos:start="175:5" pos:end="175:23"><name pos:start="175:5" pos:end="175:19">vlc_initialized</name> <operator pos:start="175:21" pos:end="175:21">=</operator> <literal type="number" pos:start="175:23" pos:end="175:23">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:42"><expr pos:start="179:5" pos:end="179:41"><call pos:start="179:5" pos:end="179:41"><name pos:start="179:5" pos:end="179:30">avcodec_get_frame_defaults</name><argument_list pos:start="179:31" pos:end="179:41">(<argument pos:start="179:32" pos:end="179:40"><expr pos:start="179:32" pos:end="179:40"><operator pos:start="179:32" pos:end="179:32">&amp;</operator><name pos:start="179:33" pos:end="179:40"><name pos:start="179:33" pos:end="179:33">c</name><operator pos:start="179:34" pos:end="179:35">-&gt;</operator><name pos:start="179:36" pos:end="179:40">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:35"><expr pos:start="181:5" pos:end="181:34"><name pos:start="181:5" pos:end="181:22"><name pos:start="181:5" pos:end="181:9">avctx</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:22">coded_frame</name></name> <operator pos:start="181:24" pos:end="181:24">=</operator> <operator pos:start="181:26" pos:end="181:26">&amp;</operator><name pos:start="181:27" pos:end="181:34"><name pos:start="181:27" pos:end="181:27">c</name><operator pos:start="181:28" pos:end="181:29">-&gt;</operator><name pos:start="181:30" pos:end="181:34">frame</name></name></expr>;</expr_stmt>



    <return pos:start="185:5" pos:end="185:13">return <expr pos:start="185:12" pos:end="185:12"><literal type="number" pos:start="185:12" pos:end="185:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
