<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17531.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">copy_bits</name><parameter_list pos:start="1:22" pos:end="1:64">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:35">PutBitContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">pb</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:51"><decl pos:start="1:42" pos:end="1:51"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:46">UINT8</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">src</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:63"><decl pos:start="1:54" pos:end="1:63"><type pos:start="1:54" pos:end="1:63"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:63">length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="34:0">

<cpp:if pos:start="5:1" pos:end="5:5">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:5"><literal type="number" pos:start="5:5" pos:end="5:5">1</literal></expr></cpp:if>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">bytes</name><init pos:start="7:14" pos:end="7:24">= <expr pos:start="7:16" pos:end="7:24"><name pos:start="7:16" pos:end="7:21">length</name><operator pos:start="7:22" pos:end="7:23">&gt;&gt;</operator><literal type="number" pos:start="7:24" pos:end="7:24">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">bits</name><init pos:start="9:13" pos:end="9:23">= <expr pos:start="9:15" pos:end="9:23"><name pos:start="9:15" pos:end="9:20">length</name><operator pos:start="9:21" pos:end="9:21">&amp;</operator><literal type="number" pos:start="9:22" pos:end="9:23">15</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="15:75">for<control pos:start="15:8" pos:end="15:26">(<init pos:start="15:9" pos:end="15:12"><expr pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:9">i</name><operator pos:start="15:10" pos:end="15:10">=</operator><literal type="number" pos:start="15:11" pos:end="15:11">0</literal></expr>;</init> <condition pos:start="15:14" pos:end="15:21"><expr pos:start="15:14" pos:end="15:20"><name pos:start="15:14" pos:end="15:14">i</name><operator pos:start="15:15" pos:end="15:15">&lt;</operator><name pos:start="15:16" pos:end="15:20">bytes</name></expr>;</condition> <incr pos:start="15:23" pos:end="15:25"><expr pos:start="15:23" pos:end="15:25"><name pos:start="15:23" pos:end="15:23">i</name><operator pos:start="15:24" pos:end="15:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="15:28" pos:end="15:75"><block_content pos:start="15:28" pos:end="15:75"> <expr_stmt pos:start="15:28" pos:end="15:75"><expr pos:start="15:28" pos:end="15:74"><call pos:start="15:28" pos:end="15:74"><name pos:start="15:28" pos:end="15:35">put_bits</name><argument_list pos:start="15:36" pos:end="15:74">(<argument pos:start="15:37" pos:end="15:38"><expr pos:start="15:37" pos:end="15:38"><name pos:start="15:37" pos:end="15:38">pb</name></expr></argument>, <argument pos:start="15:41" pos:end="15:42"><expr pos:start="15:41" pos:end="15:42"><literal type="number" pos:start="15:41" pos:end="15:42">16</literal></expr></argument>, <argument pos:start="15:45" pos:end="15:73"><expr pos:start="15:45" pos:end="15:73"><call pos:start="15:45" pos:end="15:73"><name pos:start="15:45" pos:end="15:52">be2me_16</name><argument_list pos:start="15:53" pos:end="15:73">(<argument pos:start="15:54" pos:end="15:72"><expr pos:start="15:54" pos:end="15:72"><operator pos:start="15:54" pos:end="15:54">(</operator><operator pos:start="15:55" pos:end="15:55">(</operator><name pos:start="15:56" pos:end="15:63">uint16_t</name><operator pos:start="15:64" pos:end="15:64">*</operator><operator pos:start="15:65" pos:end="15:65">)</operator><name pos:start="15:66" pos:end="15:68">src</name><operator pos:start="15:69" pos:end="15:69">)</operator><index pos:start="15:70" pos:end="15:72">[<expr pos:start="15:71" pos:end="15:71"><name pos:start="15:71" pos:end="15:71">i</name></expr>]</index></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="17:5" pos:end="20:0"><expr pos:start="17:5" pos:end="17:64"><call pos:start="17:5" pos:end="17:64"><name pos:start="17:5" pos:end="17:12">put_bits</name><argument_list pos:start="17:13" pos:end="17:64">(<argument pos:start="17:14" pos:end="17:15"><expr pos:start="17:14" pos:end="17:15"><name pos:start="17:14" pos:end="17:15">pb</name></expr></argument>, <argument pos:start="17:18" pos:end="17:21"><expr pos:start="17:18" pos:end="17:21"><name pos:start="17:18" pos:end="17:21">bits</name></expr></argument>, <argument pos:start="17:24" pos:end="17:63"><expr pos:start="17:24" pos:end="17:63"><call pos:start="17:24" pos:end="17:52"><name pos:start="17:24" pos:end="17:31">be2me_16</name><argument_list pos:start="17:32" pos:end="17:52">(<argument pos:start="17:33" pos:end="17:51"><expr pos:start="17:33" pos:end="17:51"><operator pos:start="17:33" pos:end="17:33">(</operator><operator pos:start="17:34" pos:end="17:34">(</operator><name pos:start="17:35" pos:end="17:42">uint16_t</name><operator pos:start="17:43" pos:end="17:43">*</operator><operator pos:start="17:44" pos:end="17:44">)</operator><name pos:start="17:45" pos:end="17:47">src</name><operator pos:start="17:48" pos:end="17:48">)</operator><index pos:start="17:49" pos:end="17:51">[<expr pos:start="17:50" pos:end="17:50"><name pos:start="17:50" pos:end="17:50">i</name></expr>]</index></expr></argument>)</argument_list></call><operator pos:start="17:53" pos:end="17:54">&gt;&gt;</operator><operator pos:start="17:55" pos:end="17:55">(</operator><literal type="number" pos:start="17:56" pos:end="17:58">16</literal><operator pos:start="17:58" pos:end="17:58">-</operator><name pos:start="17:59" pos:end="17:62">bits</name><operator pos:start="17:63" pos:end="17:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="19:1" pos:end="19:5">#<cpp:directive pos:start="19:2" pos:end="19:5">else</cpp:directive></cpp:else>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:13">bytes</name><init pos:start="21:14" pos:end="21:24">= <expr pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:21">length</name><operator pos:start="21:22" pos:end="21:23">&gt;&gt;</operator><literal type="number" pos:start="21:24" pos:end="21:24">3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:23"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:12">bits</name><init pos:start="23:13" pos:end="23:22">= <expr pos:start="23:15" pos:end="23:22"><name pos:start="23:15" pos:end="23:20">length</name><operator pos:start="23:21" pos:end="23:21">&amp;</operator><literal type="number" pos:start="23:22" pos:end="23:22">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>;</decl_stmt>



    <for pos:start="29:5" pos:end="29:51">for<control pos:start="29:8" pos:end="29:26">(<init pos:start="29:9" pos:end="29:12"><expr pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:9">i</name><operator pos:start="29:10" pos:end="29:10">=</operator><literal type="number" pos:start="29:11" pos:end="29:11">0</literal></expr>;</init> <condition pos:start="29:14" pos:end="29:21"><expr pos:start="29:14" pos:end="29:20"><name pos:start="29:14" pos:end="29:14">i</name><operator pos:start="29:15" pos:end="29:15">&lt;</operator><name pos:start="29:16" pos:end="29:20">bytes</name></expr>;</condition> <incr pos:start="29:23" pos:end="29:25"><expr pos:start="29:23" pos:end="29:25"><name pos:start="29:23" pos:end="29:23">i</name><operator pos:start="29:24" pos:end="29:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:28" pos:end="29:51"><block_content pos:start="29:28" pos:end="29:51"> <expr_stmt pos:start="29:28" pos:end="29:51"><expr pos:start="29:28" pos:end="29:50"><call pos:start="29:28" pos:end="29:50"><name pos:start="29:28" pos:end="29:35">put_bits</name><argument_list pos:start="29:36" pos:end="29:50">(<argument pos:start="29:37" pos:end="29:38"><expr pos:start="29:37" pos:end="29:38"><name pos:start="29:37" pos:end="29:38">pb</name></expr></argument>, <argument pos:start="29:41" pos:end="29:41"><expr pos:start="29:41" pos:end="29:41"><literal type="number" pos:start="29:41" pos:end="29:41">8</literal></expr></argument>, <argument pos:start="29:44" pos:end="29:49"><expr pos:start="29:44" pos:end="29:49"><name pos:start="29:44" pos:end="29:49"><name pos:start="29:44" pos:end="29:46">src</name><index pos:start="29:47" pos:end="29:49">[<expr pos:start="29:48" pos:end="29:48"><name pos:start="29:48" pos:end="29:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="31:5" pos:end="34:0"><expr pos:start="31:5" pos:end="31:40"><call pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:12">put_bits</name><argument_list pos:start="31:13" pos:end="31:40">(<argument pos:start="31:14" pos:end="31:15"><expr pos:start="31:14" pos:end="31:15"><name pos:start="31:14" pos:end="31:15">pb</name></expr></argument>, <argument pos:start="31:18" pos:end="31:21"><expr pos:start="31:18" pos:end="31:21"><name pos:start="31:18" pos:end="31:21">bits</name></expr></argument>, <argument pos:start="31:24" pos:end="31:39"><expr pos:start="31:24" pos:end="31:39"><name pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:26">src</name><index pos:start="31:27" pos:end="31:29">[<expr pos:start="31:28" pos:end="31:28"><name pos:start="31:28" pos:end="31:28">i</name></expr>]</index></name><operator pos:start="31:30" pos:end="31:31">&gt;&gt;</operator><operator pos:start="31:32" pos:end="31:32">(</operator><literal type="number" pos:start="31:33" pos:end="31:34">8</literal><operator pos:start="31:34" pos:end="31:34">-</operator><name pos:start="31:35" pos:end="31:38">bits</name><operator pos:start="31:39" pos:end="31:39">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
