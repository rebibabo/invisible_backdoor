<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6578.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">tcg_op_remove</name><parameter_list pos:start="1:19" pos:end="1:44">(<parameter pos:start="1:20" pos:end="1:32"><decl pos:start="1:20" pos:end="1:32"><type pos:start="1:20" pos:end="1:32"><name pos:start="1:20" pos:end="1:29">TCGContext</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:32">s</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:43"><decl pos:start="1:35" pos:end="1:43"><type pos:start="1:35" pos:end="1:43"><name pos:start="1:35" pos:end="1:39">TCGOp</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">op</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="32:0">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">next</name> <init pos:start="5:14" pos:end="5:23">= <expr pos:start="5:16" pos:end="5:23"><name pos:start="5:16" pos:end="5:23"><name pos:start="5:16" pos:end="5:17">op</name><operator pos:start="5:18" pos:end="5:19">-&gt;</operator><name pos:start="5:20" pos:end="5:23">next</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">prev</name> <init pos:start="7:14" pos:end="7:23">= <expr pos:start="7:16" pos:end="7:23"><name pos:start="7:16" pos:end="7:23"><name pos:start="7:16" pos:end="7:17">op</name><operator pos:start="7:18" pos:end="7:19">-&gt;</operator><name pos:start="7:20" pos:end="7:23">prev</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:65">/* We should never attempt to remove the list terminator.  */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:46"><expr pos:start="13:5" pos:end="13:45"><call pos:start="13:5" pos:end="13:45"><name pos:start="13:5" pos:end="13:20">tcg_debug_assert</name><argument_list pos:start="13:21" pos:end="13:45">(<argument pos:start="13:22" pos:end="13:44"><expr pos:start="13:22" pos:end="13:44"><name pos:start="13:22" pos:end="13:23">op</name> <operator pos:start="13:25" pos:end="13:26">!=</operator> <operator pos:start="13:28" pos:end="13:28">&amp;</operator><name pos:start="13:29" pos:end="13:44"><name pos:start="13:29" pos:end="13:29">s</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:41">gen_op_buf</name><index pos:start="13:42" pos:end="13:44">[<expr pos:start="13:43" pos:end="13:43"><literal type="number" pos:start="13:43" pos:end="13:43">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:17">gen_op_buf</name><index pos:start="17:18" pos:end="17:23">[<expr pos:start="17:19" pos:end="17:22"><name pos:start="17:19" pos:end="17:22">next</name></expr>]</index></name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:28">prev</name> <operator pos:start="17:30" pos:end="17:30">=</operator> <name pos:start="17:32" pos:end="17:35">prev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:17">gen_op_buf</name><index pos:start="19:18" pos:end="19:23">[<expr pos:start="19:19" pos:end="19:22"><name pos:start="19:19" pos:end="19:22">prev</name></expr>]</index></name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:28">next</name> <operator pos:start="19:30" pos:end="19:30">=</operator> <name pos:start="19:32" pos:end="19:35">next</name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="28:0"><expr pos:start="23:5" pos:end="23:30"><call pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:10">memset</name><argument_list pos:start="23:11" pos:end="23:30">(<argument pos:start="23:12" pos:end="23:13"><expr pos:start="23:12" pos:end="23:13"><name pos:start="23:12" pos:end="23:13">op</name></expr></argument>, <argument pos:start="23:16" pos:end="23:16"><expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr></argument>, <argument pos:start="23:19" pos:end="23:29"><expr pos:start="23:19" pos:end="23:29"><sizeof pos:start="23:19" pos:end="23:29">sizeof<argument_list pos:start="23:25" pos:end="23:29">(<argument pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><operator pos:start="23:26" pos:end="23:26">*</operator><name pos:start="23:27" pos:end="23:28">op</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="27:1" pos:end="27:22">#<cpp:directive pos:start="27:2" pos:end="27:6">ifdef</cpp:directive> <name pos:start="27:8" pos:end="27:22">CONFIG_PROFILER</name></cpp:ifdef>

    <expr_stmt pos:start="29:5" pos:end="32:0"><expr pos:start="29:5" pos:end="29:63"><call pos:start="29:5" pos:end="29:63"><name pos:start="29:5" pos:end="29:14">atomic_set</name><argument_list pos:start="29:15" pos:end="29:63">(<argument pos:start="29:16" pos:end="29:36"><expr pos:start="29:16" pos:end="29:36"><operator pos:start="29:16" pos:end="29:16">&amp;</operator><name pos:start="29:17" pos:end="29:36"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:23">prof</name><operator pos:start="29:24" pos:end="29:24">.</operator><name pos:start="29:25" pos:end="29:36">del_op_count</name></name></expr></argument>, <argument pos:start="29:39" pos:end="29:62"><expr pos:start="29:39" pos:end="29:62"><name pos:start="29:39" pos:end="29:58"><name pos:start="29:39" pos:end="29:39">s</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:45">prof</name><operator pos:start="29:46" pos:end="29:46">.</operator><name pos:start="29:47" pos:end="29:58">del_op_count</name></name> <operator pos:start="29:60" pos:end="29:60">+</operator> <literal type="number" pos:start="29:62" pos:end="29:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
