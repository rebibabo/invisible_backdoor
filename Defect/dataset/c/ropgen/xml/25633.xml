<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25633.c" pos:tabs="8"><function pos:start="1:1" pos:end="235:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">cpu_loop</name><parameter_list pos:start="1:14" pos:end="1:33">(<parameter pos:start="1:15" pos:end="1:32"><decl pos:start="1:15" pos:end="1:32"><type pos:start="1:15" pos:end="1:29"><name pos:start="1:15" pos:end="1:27">CPUS390XState</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="235:1">{<block_content pos:start="5:5" pos:end="233:5">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:45">= <expr pos:start="5:20" pos:end="5:45"><call pos:start="5:20" pos:end="5:45"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:45">(<argument pos:start="5:24" pos:end="5:44"><expr pos:start="5:24" pos:end="5:44"><call pos:start="5:24" pos:end="5:44"><name pos:start="5:24" pos:end="5:39">s390_env_get_cpu</name><argument_list pos:start="5:40" pos:end="5:44">(<argument pos:start="5:41" pos:end="5:43"><expr pos:start="5:41" pos:end="5:43"><name pos:start="5:41" pos:end="5:43">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">trapnr</name></decl>, <decl pos:start="7:17" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:17">n</name></decl>, <decl pos:start="7:20" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:22">sig</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:20">target_siginfo_t</name></type> <name pos:start="9:22" pos:end="9:25">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:21">addr</name></decl>;</decl_stmt>



    <while pos:start="15:5" pos:end="233:5">while <condition pos:start="15:11" pos:end="15:13">(<expr pos:start="15:12" pos:end="15:12"><literal type="number" pos:start="15:12" pos:end="15:12">1</literal></expr>)</condition> <block pos:start="15:15" pos:end="233:5">{<block_content pos:start="17:9" pos:end="231:38">

        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><call pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:22">cpu_exec_start</name><argument_list pos:start="17:23" pos:end="17:26">(<argument pos:start="17:24" pos:end="17:25"><expr pos:start="17:24" pos:end="17:25"><name pos:start="17:24" pos:end="17:25">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:14">trapnr</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:35"><name pos:start="19:18" pos:end="19:31">cpu_s390x_exec</name><argument_list pos:start="19:32" pos:end="19:35">(<argument pos:start="19:33" pos:end="19:34"><expr pos:start="19:33" pos:end="19:34"><name pos:start="19:33" pos:end="19:34">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><call pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:20">cpu_exec_end</name><argument_list pos:start="21:21" pos:end="21:24">(<argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="23:9" pos:end="229:9">switch <condition pos:start="23:16" pos:end="23:23">(<expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">trapnr</name></expr>)</condition> <block pos:start="23:25" pos:end="229:9">{<block_content pos:start="25:9" pos:end="227:31">

        <case pos:start="25:9" pos:end="25:28">case <expr pos:start="25:14" pos:end="25:27"><name pos:start="25:14" pos:end="25:27">EXCP_INTERRUPT</name></expr>:</case>

            <comment type="block" pos:start="27:13" pos:end="27:69">/* Just indicate that signals should be handled asap.  */</comment>

            <break pos:start="29:13" pos:end="29:18">break;</break>



        <case pos:start="33:9" pos:end="33:22">case <expr pos:start="33:14" pos:end="33:21"><name pos:start="33:14" pos:end="33:21">EXCP_SVC</name></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:34"><expr pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:13">n</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:33"><name pos:start="35:17" pos:end="35:19">env</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:33">int_svc_code</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="43:13"><if pos:start="37:13" pos:end="43:13">if <condition pos:start="37:16" pos:end="37:19">(<expr pos:start="37:17" pos:end="37:18"><operator pos:start="37:17" pos:end="37:17">!</operator><name pos:start="37:18" pos:end="37:18">n</name></expr>)</condition> <block pos:start="37:21" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:33">

                <comment type="block" pos:start="39:17" pos:end="39:36">/* syscalls &gt; 255 */</comment>

                <expr_stmt pos:start="41:17" pos:end="41:33"><expr pos:start="41:17" pos:end="41:32"><name pos:start="41:17" pos:end="41:17">n</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:32"><name pos:start="41:21" pos:end="41:23">env</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:29">regs</name><index pos:start="41:30" pos:end="41:32">[<expr pos:start="41:31" pos:end="41:31"><literal type="number" pos:start="41:31" pos:end="41:31">1</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:47"><expr pos:start="45:13" pos:end="45:46"><name pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:15">env</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:20">psw</name><operator pos:start="45:21" pos:end="45:21">.</operator><name pos:start="45:22" pos:end="45:25">addr</name></name> <operator pos:start="45:27" pos:end="45:28">+=</operator> <name pos:start="45:30" pos:end="45:46"><name pos:start="45:30" pos:end="45:32">env</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:46">int_svc_ilen</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="51:72"><expr pos:start="47:13" pos:end="51:71"><name pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:15">env</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:21">regs</name><index pos:start="47:22" pos:end="47:24">[<expr pos:start="47:23" pos:end="47:23"><literal type="number" pos:start="47:23" pos:end="47:23">2</literal></expr>]</index></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <call pos:start="47:28" pos:end="51:71"><name pos:start="47:28" pos:end="47:37">do_syscall</name><argument_list pos:start="47:38" pos:end="51:71">(<argument pos:start="47:39" pos:end="47:41"><expr pos:start="47:39" pos:end="47:41"><name pos:start="47:39" pos:end="47:41">env</name></expr></argument>, <argument pos:start="47:44" pos:end="47:44"><expr pos:start="47:44" pos:end="47:44"><name pos:start="47:44" pos:end="47:44">n</name></expr></argument>, <argument pos:start="47:47" pos:end="47:58"><expr pos:start="47:47" pos:end="47:58"><name pos:start="47:47" pos:end="47:58"><name pos:start="47:47" pos:end="47:49">env</name><operator pos:start="47:50" pos:end="47:51">-&gt;</operator><name pos:start="47:52" pos:end="47:55">regs</name><index pos:start="47:56" pos:end="47:58">[<expr pos:start="47:57" pos:end="47:57"><literal type="number" pos:start="47:57" pos:end="47:57">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="47:61" pos:end="47:72"><expr pos:start="47:61" pos:end="47:72"><name pos:start="47:61" pos:end="47:72"><name pos:start="47:61" pos:end="47:63">env</name><operator pos:start="47:64" pos:end="47:65">-&gt;</operator><name pos:start="47:66" pos:end="47:69">regs</name><index pos:start="47:70" pos:end="47:72">[<expr pos:start="47:71" pos:end="47:71"><literal type="number" pos:start="47:71" pos:end="47:71">3</literal></expr>]</index></name></expr></argument>,

                                      <argument pos:start="49:39" pos:end="49:50"><expr pos:start="49:39" pos:end="49:50"><name pos:start="49:39" pos:end="49:50"><name pos:start="49:39" pos:end="49:41">env</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:47">regs</name><index pos:start="49:48" pos:end="49:50">[<expr pos:start="49:49" pos:end="49:49"><literal type="number" pos:start="49:49" pos:end="49:49">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="49:53" pos:end="49:64"><expr pos:start="49:53" pos:end="49:64"><name pos:start="49:53" pos:end="49:64"><name pos:start="49:53" pos:end="49:55">env</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:61">regs</name><index pos:start="49:62" pos:end="49:64">[<expr pos:start="49:63" pos:end="49:63"><literal type="number" pos:start="49:63" pos:end="49:63">5</literal></expr>]</index></name></expr></argument>,

                                      <argument pos:start="51:39" pos:end="51:50"><expr pos:start="51:39" pos:end="51:50"><name pos:start="51:39" pos:end="51:50"><name pos:start="51:39" pos:end="51:41">env</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:47">regs</name><index pos:start="51:48" pos:end="51:50">[<expr pos:start="51:49" pos:end="51:49"><literal type="number" pos:start="51:49" pos:end="51:49">6</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:53" pos:end="51:64"><expr pos:start="51:53" pos:end="51:64"><name pos:start="51:53" pos:end="51:64"><name pos:start="51:53" pos:end="51:55">env</name><operator pos:start="51:56" pos:end="51:57">-&gt;</operator><name pos:start="51:58" pos:end="51:61">regs</name><index pos:start="51:62" pos:end="51:64">[<expr pos:start="51:63" pos:end="51:63"><literal type="number" pos:start="51:63" pos:end="51:63">7</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:67" pos:end="51:67"><expr pos:start="51:67" pos:end="51:67"><literal type="number" pos:start="51:67" pos:end="51:67">0</literal></expr></argument>, <argument pos:start="51:70" pos:end="51:70"><expr pos:start="51:70" pos:end="51:70"><literal type="number" pos:start="51:70" pos:end="51:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>



        <case pos:start="57:9" pos:end="57:24">case <expr pos:start="57:14" pos:end="57:23"><name pos:start="57:14" pos:end="57:23">EXCP_DEBUG</name></expr>:</case>

            <expr_stmt pos:start="59:13" pos:end="59:52"><expr pos:start="59:13" pos:end="59:51"><name pos:start="59:13" pos:end="59:15">sig</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="59:51"><name pos:start="59:19" pos:end="59:31">gdb_handlesig</name><argument_list pos:start="59:32" pos:end="59:51">(<argument pos:start="59:33" pos:end="59:34"><expr pos:start="59:33" pos:end="59:34"><name pos:start="59:33" pos:end="59:34">cs</name></expr></argument>, <argument pos:start="59:37" pos:end="59:50"><expr pos:start="59:37" pos:end="59:50"><name pos:start="59:37" pos:end="59:50">TARGET_SIGTRAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="67:13"><if pos:start="61:13" pos:end="67:13">if <condition pos:start="61:16" pos:end="61:20">(<expr pos:start="61:17" pos:end="61:19"><name pos:start="61:17" pos:end="61:19">sig</name></expr>)</condition> <block pos:start="61:22" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:34">

                <expr_stmt pos:start="63:17" pos:end="63:38"><expr pos:start="63:17" pos:end="63:37"><name pos:start="63:17" pos:end="63:17">n</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:37">TARGET_TRAP_BRKPT</name></expr>;</expr_stmt>

                <goto pos:start="65:17" pos:end="65:34">goto <name pos:start="65:22" pos:end="65:33">do_signal_pc</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        <case pos:start="71:9" pos:end="71:22">case <expr pos:start="71:14" pos:end="71:21"><name pos:start="71:14" pos:end="71:21">EXCP_PGM</name></expr>:</case>

            <expr_stmt pos:start="73:13" pos:end="73:34"><expr pos:start="73:13" pos:end="73:33"><name pos:start="73:13" pos:end="73:13">n</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <name pos:start="73:17" pos:end="73:33"><name pos:start="73:17" pos:end="73:19">env</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:33">int_pgm_code</name></name></expr>;</expr_stmt>

            <switch pos:start="75:13" pos:end="195:13">switch <condition pos:start="75:20" pos:end="75:22">(<expr pos:start="75:21" pos:end="75:21"><name pos:start="75:21" pos:end="75:21">n</name></expr>)</condition> <block pos:start="75:24" pos:end="195:13">{<block_content pos:start="77:13" pos:end="193:35">

            <case pos:start="77:13" pos:end="77:31">case <expr pos:start="77:18" pos:end="77:30"><name pos:start="77:18" pos:end="77:30">PGM_OPERATION</name></expr>:</case>

            <case pos:start="79:13" pos:end="79:32">case <expr pos:start="79:18" pos:end="79:31"><name pos:start="79:18" pos:end="79:31">PGM_PRIVILEGED</name></expr>:</case>

                <expr_stmt pos:start="81:17" pos:end="81:36"><expr pos:start="81:17" pos:end="81:35"><name pos:start="81:17" pos:end="81:19">sig</name> <operator pos:start="81:21" pos:end="81:21">=</operator> <name pos:start="81:23" pos:end="81:35">TARGET_SIGILL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:38"><expr pos:start="83:17" pos:end="83:37"><name pos:start="83:17" pos:end="83:17">n</name> <operator pos:start="83:19" pos:end="83:19">=</operator> <name pos:start="83:21" pos:end="83:37">TARGET_ILL_ILLOPC</name></expr>;</expr_stmt>

                <goto pos:start="85:17" pos:end="85:34">goto <name pos:start="85:22" pos:end="85:33">do_signal_pc</name>;</goto>

            <case pos:start="87:13" pos:end="87:32">case <expr pos:start="87:18" pos:end="87:31"><name pos:start="87:18" pos:end="87:31">PGM_PROTECTION</name></expr>:</case>

            <case pos:start="89:13" pos:end="89:32">case <expr pos:start="89:18" pos:end="89:31"><name pos:start="89:18" pos:end="89:31">PGM_ADDRESSING</name></expr>:</case>

                <expr_stmt pos:start="91:17" pos:end="91:37"><expr pos:start="91:17" pos:end="91:36"><name pos:start="91:17" pos:end="91:19">sig</name> <operator pos:start="91:21" pos:end="91:21">=</operator> <name pos:start="91:23" pos:end="91:36">TARGET_SIGSEGV</name></expr>;</expr_stmt>

                <comment type="block" pos:start="93:17" pos:end="93:48">/* XXX: check env-&gt;error_code */</comment>

                <expr_stmt pos:start="95:17" pos:end="95:39"><expr pos:start="95:17" pos:end="95:38"><name pos:start="95:17" pos:end="95:17">n</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:38">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:40"><expr pos:start="97:17" pos:end="97:39"><name pos:start="97:17" pos:end="97:20">addr</name> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:39"><name pos:start="97:24" pos:end="97:26">env</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:39">__excp_addr</name></name></expr>;</expr_stmt>

                <goto pos:start="99:17" pos:end="99:31">goto <name pos:start="99:22" pos:end="99:30">do_signal</name>;</goto>

            <case pos:start="101:13" pos:end="101:29">case <expr pos:start="101:18" pos:end="101:28"><name pos:start="101:18" pos:end="101:28">PGM_EXECUTE</name></expr>:</case>

            <case pos:start="103:13" pos:end="103:35">case <expr pos:start="103:18" pos:end="103:34"><name pos:start="103:18" pos:end="103:34">PGM_SPECIFICATION</name></expr>:</case>

            <case pos:start="105:13" pos:end="105:32">case <expr pos:start="105:18" pos:end="105:31"><name pos:start="105:18" pos:end="105:31">PGM_SPECIAL_OP</name></expr>:</case>

            <case pos:start="107:13" pos:end="107:29">case <expr pos:start="107:18" pos:end="107:28"><name pos:start="107:18" pos:end="107:28">PGM_OPERAND</name></expr>:</case>

            <label pos:start="109:13" pos:end="109:26"><name pos:start="109:13" pos:end="109:25">do_sigill_opn</name>:</label>

                <expr_stmt pos:start="111:17" pos:end="111:36"><expr pos:start="111:17" pos:end="111:35"><name pos:start="111:17" pos:end="111:19">sig</name> <operator pos:start="111:21" pos:end="111:21">=</operator> <name pos:start="111:23" pos:end="111:35">TARGET_SIGILL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:38"><expr pos:start="113:17" pos:end="113:37"><name pos:start="113:17" pos:end="113:17">n</name> <operator pos:start="113:19" pos:end="113:19">=</operator> <name pos:start="113:21" pos:end="113:37">TARGET_ILL_ILLOPN</name></expr>;</expr_stmt>

                <goto pos:start="115:17" pos:end="115:34">goto <name pos:start="115:22" pos:end="115:33">do_signal_pc</name>;</goto>



            <case pos:start="119:13" pos:end="119:36">case <expr pos:start="119:18" pos:end="119:35"><name pos:start="119:18" pos:end="119:35">PGM_FIXPT_OVERFLOW</name></expr>:</case>

                <expr_stmt pos:start="121:17" pos:end="121:36"><expr pos:start="121:17" pos:end="121:35"><name pos:start="121:17" pos:end="121:19">sig</name> <operator pos:start="121:21" pos:end="121:21">=</operator> <name pos:start="121:23" pos:end="121:35">TARGET_SIGFPE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:38"><expr pos:start="123:17" pos:end="123:37"><name pos:start="123:17" pos:end="123:17">n</name> <operator pos:start="123:19" pos:end="123:19">=</operator> <name pos:start="123:21" pos:end="123:37">TARGET_FPE_INTOVF</name></expr>;</expr_stmt>

                <goto pos:start="125:17" pos:end="125:34">goto <name pos:start="125:22" pos:end="125:33">do_signal_pc</name>;</goto>

            <case pos:start="127:13" pos:end="127:34">case <expr pos:start="127:18" pos:end="127:33"><name pos:start="127:18" pos:end="127:33">PGM_FIXPT_DIVIDE</name></expr>:</case>

                <expr_stmt pos:start="129:17" pos:end="129:36"><expr pos:start="129:17" pos:end="129:35"><name pos:start="129:17" pos:end="129:19">sig</name> <operator pos:start="129:21" pos:end="129:21">=</operator> <name pos:start="129:23" pos:end="129:35">TARGET_SIGFPE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:38"><expr pos:start="131:17" pos:end="131:37"><name pos:start="131:17" pos:end="131:17">n</name> <operator pos:start="131:19" pos:end="131:19">=</operator> <name pos:start="131:21" pos:end="131:37">TARGET_FPE_INTDIV</name></expr>;</expr_stmt>

                <goto pos:start="133:17" pos:end="133:34">goto <name pos:start="133:22" pos:end="133:33">do_signal_pc</name>;</goto>



            <case pos:start="137:13" pos:end="137:26">case <expr pos:start="137:18" pos:end="137:25"><name pos:start="137:18" pos:end="137:25">PGM_DATA</name></expr>:</case>

                <expr_stmt pos:start="139:17" pos:end="139:43"><expr pos:start="139:17" pos:end="139:42"><name pos:start="139:17" pos:end="139:17">n</name> <operator pos:start="139:19" pos:end="139:19">=</operator> <operator pos:start="139:21" pos:end="139:21">(</operator><name pos:start="139:22" pos:end="139:29"><name pos:start="139:22" pos:end="139:24">env</name><operator pos:start="139:25" pos:end="139:26">-&gt;</operator><name pos:start="139:27" pos:end="139:29">fpc</name></name> <operator pos:start="139:31" pos:end="139:32">&gt;&gt;</operator> <literal type="number" pos:start="139:34" pos:end="139:34">8</literal><operator pos:start="139:35" pos:end="139:35">)</operator> <operator pos:start="139:37" pos:end="139:37">&amp;</operator> <literal type="number" pos:start="139:39" pos:end="139:42">0xff</literal></expr>;</expr_stmt>

                <if_stmt pos:start="141:17" pos:end="183:17"><if pos:start="141:17" pos:end="147:17">if <condition pos:start="141:20" pos:end="141:30">(<expr pos:start="141:21" pos:end="141:29"><name pos:start="141:21" pos:end="141:21">n</name> <operator pos:start="141:23" pos:end="141:24">==</operator> <literal type="number" pos:start="141:26" pos:end="141:29">0xff</literal></expr>)</condition> <block pos:start="141:32" pos:end="147:17">{<block_content pos:start="145:21" pos:end="145:39">

                    <comment type="block" pos:start="143:21" pos:end="143:42">/* compare-and-trap */</comment>

                    <goto pos:start="145:21" pos:end="145:39">goto <name pos:start="145:26" pos:end="145:38">do_sigill_opn</name>;</goto>

                </block_content>}</block></if> <else pos:start="147:19" pos:end="183:17">else <block pos:start="147:24" pos:end="183:17">{<block_content pos:start="151:21" pos:end="181:38">

                    <comment type="block" pos:start="149:21" pos:end="149:69">/* An IEEE exception, simulated or otherwise.  */</comment>

                    <if_stmt pos:start="151:21" pos:end="177:21"><if pos:start="151:21" pos:end="155:21">if <condition pos:start="151:24" pos:end="151:33">(<expr pos:start="151:25" pos:end="151:32"><name pos:start="151:25" pos:end="151:25">n</name> <operator pos:start="151:27" pos:end="151:27">&amp;</operator> <literal type="number" pos:start="151:29" pos:end="151:32">0x80</literal></expr>)</condition> <block pos:start="151:35" pos:end="155:21">{<block_content pos:start="153:25" pos:end="153:46">

                        <expr_stmt pos:start="153:25" pos:end="153:46"><expr pos:start="153:25" pos:end="153:45"><name pos:start="153:25" pos:end="153:25">n</name> <operator pos:start="153:27" pos:end="153:27">=</operator> <name pos:start="153:29" pos:end="153:45">TARGET_FPE_FLTINV</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="155:23" pos:end="159:21">else if <condition pos:start="155:31" pos:end="155:40">(<expr pos:start="155:32" pos:end="155:39"><name pos:start="155:32" pos:end="155:32">n</name> <operator pos:start="155:34" pos:end="155:34">&amp;</operator> <literal type="number" pos:start="155:36" pos:end="155:39">0x40</literal></expr>)</condition> <block pos:start="155:42" pos:end="159:21">{<block_content pos:start="157:25" pos:end="157:46">

                        <expr_stmt pos:start="157:25" pos:end="157:46"><expr pos:start="157:25" pos:end="157:45"><name pos:start="157:25" pos:end="157:25">n</name> <operator pos:start="157:27" pos:end="157:27">=</operator> <name pos:start="157:29" pos:end="157:45">TARGET_FPE_FLTDIV</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="159:23" pos:end="163:21">else if <condition pos:start="159:31" pos:end="159:40">(<expr pos:start="159:32" pos:end="159:39"><name pos:start="159:32" pos:end="159:32">n</name> <operator pos:start="159:34" pos:end="159:34">&amp;</operator> <literal type="number" pos:start="159:36" pos:end="159:39">0x20</literal></expr>)</condition> <block pos:start="159:42" pos:end="163:21">{<block_content pos:start="161:25" pos:end="161:46">

                        <expr_stmt pos:start="161:25" pos:end="161:46"><expr pos:start="161:25" pos:end="161:45"><name pos:start="161:25" pos:end="161:25">n</name> <operator pos:start="161:27" pos:end="161:27">=</operator> <name pos:start="161:29" pos:end="161:45">TARGET_FPE_FLTOVF</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="163:23" pos:end="167:21">else if <condition pos:start="163:31" pos:end="163:40">(<expr pos:start="163:32" pos:end="163:39"><name pos:start="163:32" pos:end="163:32">n</name> <operator pos:start="163:34" pos:end="163:34">&amp;</operator> <literal type="number" pos:start="163:36" pos:end="163:39">0x10</literal></expr>)</condition> <block pos:start="163:42" pos:end="167:21">{<block_content pos:start="165:25" pos:end="165:46">

                        <expr_stmt pos:start="165:25" pos:end="165:46"><expr pos:start="165:25" pos:end="165:45"><name pos:start="165:25" pos:end="165:25">n</name> <operator pos:start="165:27" pos:end="165:27">=</operator> <name pos:start="165:29" pos:end="165:45">TARGET_FPE_FLTUND</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="167:23" pos:end="171:21">else if <condition pos:start="167:31" pos:end="167:40">(<expr pos:start="167:32" pos:end="167:39"><name pos:start="167:32" pos:end="167:32">n</name> <operator pos:start="167:34" pos:end="167:34">&amp;</operator> <literal type="number" pos:start="167:36" pos:end="167:39">0x08</literal></expr>)</condition> <block pos:start="167:42" pos:end="171:21">{<block_content pos:start="169:25" pos:end="169:46">

                        <expr_stmt pos:start="169:25" pos:end="169:46"><expr pos:start="169:25" pos:end="169:45"><name pos:start="169:25" pos:end="169:25">n</name> <operator pos:start="169:27" pos:end="169:27">=</operator> <name pos:start="169:29" pos:end="169:45">TARGET_FPE_FLTRES</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="171:23" pos:end="177:21">else <block pos:start="171:28" pos:end="177:21">{<block_content pos:start="175:25" pos:end="175:43">

                        <comment type="block" pos:start="173:25" pos:end="173:69">/* ??? Quantum exception; BFP, DFP error.  */</comment>

                        <goto pos:start="175:25" pos:end="175:43">goto <name pos:start="175:30" pos:end="175:42">do_sigill_opn</name>;</goto>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="179:21" pos:end="179:40"><expr pos:start="179:21" pos:end="179:39"><name pos:start="179:21" pos:end="179:23">sig</name> <operator pos:start="179:25" pos:end="179:25">=</operator> <name pos:start="179:27" pos:end="179:39">TARGET_SIGFPE</name></expr>;</expr_stmt>

                    <goto pos:start="181:21" pos:end="181:38">goto <name pos:start="181:26" pos:end="181:37">do_signal_pc</name>;</goto>

                </block_content>}</block></else></if_stmt>



            <default pos:start="187:13" pos:end="187:20">default:</default>

                <expr_stmt pos:start="189:17" pos:end="189:73"><expr pos:start="189:17" pos:end="189:72"><call pos:start="189:17" pos:end="189:72"><name pos:start="189:17" pos:end="189:23">fprintf</name><argument_list pos:start="189:24" pos:end="189:72">(<argument pos:start="189:25" pos:end="189:30"><expr pos:start="189:25" pos:end="189:30"><name pos:start="189:25" pos:end="189:30">stderr</name></expr></argument>, <argument pos:start="189:33" pos:end="189:68"><expr pos:start="189:33" pos:end="189:68"><literal type="string" pos:start="189:33" pos:end="189:68">"Unhandled program exception: %#x\n"</literal></expr></argument>, <argument pos:start="189:71" pos:end="189:71"><expr pos:start="189:71" pos:end="189:71"><name pos:start="189:71" pos:end="189:71">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:55"><expr pos:start="191:17" pos:end="191:54"><call pos:start="191:17" pos:end="191:54"><name pos:start="191:17" pos:end="191:30">cpu_dump_state</name><argument_list pos:start="191:31" pos:end="191:54">(<argument pos:start="191:32" pos:end="191:33"><expr pos:start="191:32" pos:end="191:33"><name pos:start="191:32" pos:end="191:33">cs</name></expr></argument>, <argument pos:start="191:36" pos:end="191:41"><expr pos:start="191:36" pos:end="191:41"><name pos:start="191:36" pos:end="191:41">stderr</name></expr></argument>, <argument pos:start="191:44" pos:end="191:50"><expr pos:start="191:44" pos:end="191:50"><name pos:start="191:44" pos:end="191:50">fprintf</name></expr></argument>, <argument pos:start="191:53" pos:end="191:53"><expr pos:start="191:53" pos:end="191:53"><literal type="number" pos:start="191:53" pos:end="191:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:35"><expr pos:start="193:17" pos:end="193:34"><call pos:start="193:17" pos:end="193:34"><name pos:start="193:17" pos:end="193:20">exit</name><argument_list pos:start="193:21" pos:end="193:34">(<argument pos:start="193:22" pos:end="193:33"><expr pos:start="193:22" pos:end="193:33"><name pos:start="193:22" pos:end="193:33">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

            <break pos:start="197:13" pos:end="197:18">break;</break>



        <label pos:start="201:9" pos:end="201:21"><name pos:start="201:9" pos:end="201:20">do_signal_pc</name>:</label>

            <expr_stmt pos:start="203:13" pos:end="203:33"><expr pos:start="203:13" pos:end="203:32"><name pos:start="203:13" pos:end="203:16">addr</name> <operator pos:start="203:18" pos:end="203:18">=</operator> <name pos:start="203:20" pos:end="203:32"><name pos:start="203:20" pos:end="203:22">env</name><operator pos:start="203:23" pos:end="203:24">-&gt;</operator><name pos:start="203:25" pos:end="203:27">psw</name><operator pos:start="203:28" pos:end="203:28">.</operator><name pos:start="203:29" pos:end="203:32">addr</name></name></expr>;</expr_stmt>

        <label pos:start="205:9" pos:end="205:18"><name pos:start="205:9" pos:end="205:17">do_signal</name>:</label>

            <expr_stmt pos:start="207:13" pos:end="207:32"><expr pos:start="207:13" pos:end="207:31"><name pos:start="207:13" pos:end="207:25"><name pos:start="207:13" pos:end="207:16">info</name><operator pos:start="207:17" pos:end="207:17">.</operator><name pos:start="207:18" pos:end="207:25">si_signo</name></name> <operator pos:start="207:27" pos:end="207:27">=</operator> <name pos:start="207:29" pos:end="207:31">sig</name></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:30"><expr pos:start="209:13" pos:end="209:29"><name pos:start="209:13" pos:end="209:25"><name pos:start="209:13" pos:end="209:16">info</name><operator pos:start="209:17" pos:end="209:17">.</operator><name pos:start="209:18" pos:end="209:25">si_errno</name></name> <operator pos:start="209:27" pos:end="209:27">=</operator> <literal type="number" pos:start="209:29" pos:end="209:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:29"><expr pos:start="211:13" pos:end="211:28"><name pos:start="211:13" pos:end="211:24"><name pos:start="211:13" pos:end="211:16">info</name><operator pos:start="211:17" pos:end="211:17">.</operator><name pos:start="211:18" pos:end="211:24">si_code</name></name> <operator pos:start="211:26" pos:end="211:26">=</operator> <name pos:start="211:28" pos:end="211:28">n</name></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:50"><expr pos:start="213:13" pos:end="213:49"><name pos:start="213:13" pos:end="213:42"><name pos:start="213:13" pos:end="213:16">info</name><operator pos:start="213:17" pos:end="213:17">.</operator><name pos:start="213:18" pos:end="213:26">_sifields</name><operator pos:start="213:27" pos:end="213:27">.</operator><name pos:start="213:28" pos:end="213:36">_sigfault</name><operator pos:start="213:37" pos:end="213:37">.</operator><name pos:start="213:38" pos:end="213:42">_addr</name></name> <operator pos:start="213:44" pos:end="213:44">=</operator> <name pos:start="213:46" pos:end="213:49">addr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:52"><expr pos:start="215:13" pos:end="215:51"><call pos:start="215:13" pos:end="215:51"><name pos:start="215:13" pos:end="215:24">queue_signal</name><argument_list pos:start="215:25" pos:end="215:51">(<argument pos:start="215:26" pos:end="215:28"><expr pos:start="215:26" pos:end="215:28"><name pos:start="215:26" pos:end="215:28">env</name></expr></argument>, <argument pos:start="215:31" pos:end="215:43"><expr pos:start="215:31" pos:end="215:43"><name pos:start="215:31" pos:end="215:43"><name pos:start="215:31" pos:end="215:34">info</name><operator pos:start="215:35" pos:end="215:35">.</operator><name pos:start="215:36" pos:end="215:43">si_signo</name></name></expr></argument>, <argument pos:start="215:46" pos:end="215:50"><expr pos:start="215:46" pos:end="215:50"><operator pos:start="215:46" pos:end="215:46">&amp;</operator><name pos:start="215:47" pos:end="215:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="217:13" pos:end="217:18">break;</break>



        <default pos:start="221:9" pos:end="221:16">default:</default>

            <expr_stmt pos:start="223:13" pos:end="223:62"><expr pos:start="223:13" pos:end="223:61"><call pos:start="223:13" pos:end="223:61"><name pos:start="223:13" pos:end="223:19">fprintf</name><argument_list pos:start="223:20" pos:end="223:61">(<argument pos:start="223:21" pos:end="223:26"><expr pos:start="223:21" pos:end="223:26"><name pos:start="223:21" pos:end="223:26">stderr</name></expr></argument>, <argument pos:start="223:29" pos:end="223:52"><expr pos:start="223:29" pos:end="223:52"><literal type="string" pos:start="223:29" pos:end="223:52">"Unhandled trap: 0x%x\n"</literal></expr></argument>, <argument pos:start="223:55" pos:end="223:60"><expr pos:start="223:55" pos:end="223:60"><name pos:start="223:55" pos:end="223:60">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:51"><expr pos:start="225:13" pos:end="225:50"><call pos:start="225:13" pos:end="225:50"><name pos:start="225:13" pos:end="225:26">cpu_dump_state</name><argument_list pos:start="225:27" pos:end="225:50">(<argument pos:start="225:28" pos:end="225:29"><expr pos:start="225:28" pos:end="225:29"><name pos:start="225:28" pos:end="225:29">cs</name></expr></argument>, <argument pos:start="225:32" pos:end="225:37"><expr pos:start="225:32" pos:end="225:37"><name pos:start="225:32" pos:end="225:37">stderr</name></expr></argument>, <argument pos:start="225:40" pos:end="225:46"><expr pos:start="225:40" pos:end="225:46"><name pos:start="225:40" pos:end="225:46">fprintf</name></expr></argument>, <argument pos:start="225:49" pos:end="225:49"><expr pos:start="225:49" pos:end="225:49"><literal type="number" pos:start="225:49" pos:end="225:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:31"><expr pos:start="227:13" pos:end="227:30"><call pos:start="227:13" pos:end="227:30"><name pos:start="227:13" pos:end="227:16">exit</name><argument_list pos:start="227:17" pos:end="227:30">(<argument pos:start="227:18" pos:end="227:29"><expr pos:start="227:18" pos:end="227:29"><name pos:start="227:18" pos:end="227:29">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="231:9" pos:end="231:38"><expr pos:start="231:9" pos:end="231:37"><call pos:start="231:9" pos:end="231:37"><name pos:start="231:9" pos:end="231:31">process_pending_signals</name> <argument_list pos:start="231:33" pos:end="231:37">(<argument pos:start="231:34" pos:end="231:36"><expr pos:start="231:34" pos:end="231:36"><name pos:start="231:34" pos:end="231:36">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
