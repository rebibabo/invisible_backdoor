<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8563.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">omap_prcm_dpll_update</name><parameter_list pos:start="1:34" pos:end="1:56">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><name pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:40">struct</name> <name pos:start="1:42" pos:end="1:52">omap_prcm_s</name></name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:5">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">omap_clk</name></type> <name pos:start="5:14" pos:end="5:17">dpll</name> <init pos:start="5:19" pos:end="5:48">= <expr pos:start="5:21" pos:end="5:48"><call pos:start="5:21" pos:end="5:48"><name pos:start="5:21" pos:end="5:32">omap_findclk</name><argument_list pos:start="5:33" pos:end="5:48">(<argument pos:start="5:34" pos:end="5:39"><expr pos:start="5:34" pos:end="5:39"><name pos:start="5:34" pos:end="5:39"><name pos:start="5:34" pos:end="5:34">s</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:39">mpu</name></name></expr></argument>, <argument pos:start="5:42" pos:end="5:47"><expr pos:start="5:42" pos:end="5:47"><literal type="string" pos:start="5:42" pos:end="5:47">"dpll"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">omap_clk</name></type> <name pos:start="7:14" pos:end="7:20">dpll_x2</name> <init pos:start="7:22" pos:end="7:51">= <expr pos:start="7:24" pos:end="7:51"><call pos:start="7:24" pos:end="7:51"><name pos:start="7:24" pos:end="7:35">omap_findclk</name><argument_list pos:start="7:36" pos:end="7:51">(<argument pos:start="7:37" pos:end="7:42"><expr pos:start="7:37" pos:end="7:42"><name pos:start="7:37" pos:end="7:42"><name pos:start="7:37" pos:end="7:37">s</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:42">mpu</name></name></expr></argument>, <argument pos:start="7:45" pos:end="7:50"><expr pos:start="7:45" pos:end="7:50"><literal type="string" pos:start="7:45" pos:end="7:50">"dpll"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">omap_clk</name></type> <name pos:start="9:14" pos:end="9:17">core</name> <init pos:start="9:19" pos:end="9:52">= <expr pos:start="9:21" pos:end="9:52"><call pos:start="9:21" pos:end="9:52"><name pos:start="9:21" pos:end="9:32">omap_findclk</name><argument_list pos:start="9:33" pos:end="9:52">(<argument pos:start="9:34" pos:end="9:39"><expr pos:start="9:34" pos:end="9:39"><name pos:start="9:34" pos:end="9:39"><name pos:start="9:34" pos:end="9:34">s</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:39">mpu</name></name></expr></argument>, <argument pos:start="9:42" pos:end="9:51"><expr pos:start="9:42" pos:end="9:51"><literal type="string" pos:start="9:42" pos:end="9:51">"core_clk"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">mode</name> <init pos:start="11:14" pos:end="11:37">= <expr pos:start="11:16" pos:end="11:37"><operator pos:start="11:16" pos:end="11:16">(</operator><name pos:start="11:17" pos:end="11:27"><name pos:start="11:17" pos:end="11:17">s</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:24">clken</name><index pos:start="11:25" pos:end="11:27">[<expr pos:start="11:26" pos:end="11:26"><literal type="number" pos:start="11:26" pos:end="11:26">9</literal></expr>]</index></name> <operator pos:start="11:29" pos:end="11:30">&gt;&gt;</operator> <literal type="number" pos:start="11:32" pos:end="11:32">0</literal><operator pos:start="11:33" pos:end="11:33">)</operator> <operator pos:start="11:35" pos:end="11:35">&amp;</operator> <literal type="number" pos:start="11:37" pos:end="11:37">3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">mult</name></decl>, <decl pos:start="13:15" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:17">div</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:40"><expr pos:start="17:5" pos:end="17:39"><name pos:start="17:5" pos:end="17:8">mult</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <operator pos:start="17:12" pos:end="17:12">(</operator><name pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:21">clksel</name><index pos:start="17:22" pos:end="17:24">[<expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">5</literal></expr>]</index></name> <operator pos:start="17:26" pos:end="17:27">&gt;&gt;</operator> <literal type="number" pos:start="17:29" pos:end="17:30">12</literal><operator pos:start="17:31" pos:end="17:31">)</operator> <operator pos:start="17:33" pos:end="17:33">&amp;</operator> <literal type="number" pos:start="17:35" pos:end="17:39">0x3ff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:7">div</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <operator pos:start="19:11" pos:end="19:11">(</operator><name pos:start="19:12" pos:end="19:23"><name pos:start="19:12" pos:end="19:12">s</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:20">clksel</name><index pos:start="19:21" pos:end="19:23">[<expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">5</literal></expr>]</index></name> <operator pos:start="19:25" pos:end="19:26">&gt;&gt;</operator> <literal type="number" pos:start="19:28" pos:end="19:28">8</literal><operator pos:start="19:29" pos:end="19:29">)</operator> <operator pos:start="19:31" pos:end="19:31">&amp;</operator> <literal type="number" pos:start="19:33" pos:end="19:35">0xf</literal></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:31">(<expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:12">mult</name> <operator pos:start="21:14" pos:end="21:15">==</operator> <literal type="number" pos:start="21:17" pos:end="21:17">0</literal> <operator pos:start="21:19" pos:end="21:20">||</operator> <name pos:start="21:22" pos:end="21:25">mult</name> <operator pos:start="21:27" pos:end="21:28">==</operator> <literal type="number" pos:start="21:30" pos:end="21:30">1</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <expr_stmt pos:start="23:9" pos:end="23:17"><expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:12">mode</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <literal type="number" pos:start="23:16" pos:end="23:16">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>	<comment type="block" pos:start="23:25" pos:end="23:36">/* Bypass */</comment>



    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:16">dpll_lock</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>;</expr_stmt>

    <switch pos:start="29:5" pos:end="59:5">switch <condition pos:start="29:12" pos:end="29:17">(<expr pos:start="29:13" pos:end="29:16"><name pos:start="29:13" pos:end="29:16">mode</name></expr>)</condition> <block pos:start="29:19" pos:end="59:5">{<block_content pos:start="31:5" pos:end="57:14">

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">0</literal></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:59"><expr pos:start="33:9" pos:end="33:58"><call pos:start="33:9" pos:end="33:58"><name pos:start="33:9" pos:end="33:15">fprintf</name><argument_list pos:start="33:16" pos:end="33:58">(<argument pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:22">stderr</name></expr></argument>, <argument pos:start="33:25" pos:end="33:43"><expr pos:start="33:25" pos:end="33:43"><literal type="string" pos:start="33:25" pos:end="33:43">"%s: bad EN_DPLL\n"</literal></expr></argument>, <argument pos:start="33:46" pos:end="33:57"><expr pos:start="33:46" pos:end="33:57"><name pos:start="33:46" pos:end="33:57">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">1</literal></expr>:</case>	<comment type="block" pos:start="37:17" pos:end="37:53">/* Low-power bypass mode (Default) */</comment>

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">2</literal></expr>:</case>	<comment type="block" pos:start="39:17" pos:end="39:45">/* Fast-relock bypass mode */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:37"><expr pos:start="41:9" pos:end="41:36"><call pos:start="41:9" pos:end="41:36"><name pos:start="41:9" pos:end="41:24">omap_clk_setrate</name><argument_list pos:start="41:25" pos:end="41:36">(<argument pos:start="41:26" pos:end="41:29"><expr pos:start="41:26" pos:end="41:29"><name pos:start="41:26" pos:end="41:29">dpll</name></expr></argument>, <argument pos:start="41:32" pos:end="41:32"><expr pos:start="41:32" pos:end="41:32"><literal type="number" pos:start="41:32" pos:end="41:32">1</literal></expr></argument>, <argument pos:start="41:35" pos:end="41:35"><expr pos:start="41:35" pos:end="41:35"><literal type="number" pos:start="41:35" pos:end="41:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><call pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:24">omap_clk_setrate</name><argument_list pos:start="43:25" pos:end="43:39">(<argument pos:start="43:26" pos:end="43:32"><expr pos:start="43:26" pos:end="43:32"><name pos:start="43:26" pos:end="43:32">dpll_x2</name></expr></argument>, <argument pos:start="43:35" pos:end="43:35"><expr pos:start="43:35" pos:end="43:35"><literal type="number" pos:start="43:35" pos:end="43:35">1</literal></expr></argument>, <argument pos:start="43:38" pos:end="43:38"><expr pos:start="43:38" pos:end="43:38"><literal type="number" pos:start="43:38" pos:end="43:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">3</literal></expr>:</case>	<comment type="block" pos:start="47:17" pos:end="47:31">/* Lock mode */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:25"><expr pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:20">dpll_lock</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <literal type="number" pos:start="49:24" pos:end="49:24">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="49:27" pos:end="49:76">/* After 20 FINT cycles (ref_clk / (div + 1)).  */</comment>



        <expr_stmt pos:start="53:9" pos:end="53:46"><expr pos:start="53:9" pos:end="53:45"><call pos:start="53:9" pos:end="53:45"><name pos:start="53:9" pos:end="53:24">omap_clk_setrate</name><argument_list pos:start="53:25" pos:end="53:45">(<argument pos:start="53:26" pos:end="53:29"><expr pos:start="53:26" pos:end="53:29"><name pos:start="53:26" pos:end="53:29">dpll</name></expr></argument>, <argument pos:start="53:32" pos:end="53:38"><expr pos:start="53:32" pos:end="53:38"><name pos:start="53:32" pos:end="53:34">div</name> <operator pos:start="53:36" pos:end="53:36">+</operator> <literal type="number" pos:start="53:38" pos:end="53:38">1</literal></expr></argument>, <argument pos:start="53:41" pos:end="53:44"><expr pos:start="53:41" pos:end="53:44"><name pos:start="53:41" pos:end="53:44">mult</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:53"><expr pos:start="55:9" pos:end="55:52"><call pos:start="55:9" pos:end="55:52"><name pos:start="55:9" pos:end="55:24">omap_clk_setrate</name><argument_list pos:start="55:25" pos:end="55:52">(<argument pos:start="55:26" pos:end="55:32"><expr pos:start="55:26" pos:end="55:32"><name pos:start="55:26" pos:end="55:32">dpll_x2</name></expr></argument>, <argument pos:start="55:35" pos:end="55:41"><expr pos:start="55:35" pos:end="55:41"><name pos:start="55:35" pos:end="55:37">div</name> <operator pos:start="55:39" pos:end="55:39">+</operator> <literal type="number" pos:start="55:41" pos:end="55:41">1</literal></expr></argument>, <argument pos:start="55:44" pos:end="55:51"><expr pos:start="55:44" pos:end="55:51"><name pos:start="55:44" pos:end="55:47">mult</name> <operator pos:start="55:49" pos:end="55:49">*</operator> <literal type="number" pos:start="55:51" pos:end="55:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    </block_content>}</block></switch>



    <switch pos:start="63:5" pos:end="91:5">switch <condition pos:start="63:12" pos:end="63:36">(<expr pos:start="63:13" pos:end="63:35"><operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:25"><name pos:start="63:14" pos:end="63:14">s</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:22">clksel</name><index pos:start="63:23" pos:end="63:25">[<expr pos:start="63:24" pos:end="63:24"><literal type="number" pos:start="63:24" pos:end="63:24">6</literal></expr>]</index></name> <operator pos:start="63:27" pos:end="63:28">&gt;&gt;</operator> <literal type="number" pos:start="63:30" pos:end="63:30">0</literal><operator pos:start="63:31" pos:end="63:31">)</operator> <operator pos:start="63:33" pos:end="63:33">&amp;</operator> <literal type="number" pos:start="63:35" pos:end="63:35">3</literal></expr>)</condition> <block pos:start="63:38" pos:end="91:5">{<block_content pos:start="65:5" pos:end="89:14">

    <case pos:start="65:5" pos:end="65:11">case <expr pos:start="65:10" pos:end="65:10"><literal type="number" pos:start="65:10" pos:end="65:10">0</literal></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="67:67"><expr pos:start="67:9" pos:end="67:66"><call pos:start="67:9" pos:end="67:66"><name pos:start="67:9" pos:end="67:25">omap_clk_reparent</name><argument_list pos:start="67:26" pos:end="67:66">(<argument pos:start="67:27" pos:end="67:30"><expr pos:start="67:27" pos:end="67:30"><name pos:start="67:27" pos:end="67:30">core</name></expr></argument>, <argument pos:start="67:33" pos:end="67:65"><expr pos:start="67:33" pos:end="67:65"><call pos:start="67:33" pos:end="67:65"><name pos:start="67:33" pos:end="67:44">omap_findclk</name><argument_list pos:start="67:45" pos:end="67:65">(<argument pos:start="67:46" pos:end="67:51"><expr pos:start="67:46" pos:end="67:51"><name pos:start="67:46" pos:end="67:51"><name pos:start="67:46" pos:end="67:46">s</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:51">mpu</name></name></expr></argument>, <argument pos:start="67:54" pos:end="67:64"><expr pos:start="67:54" pos:end="67:64"><literal type="string" pos:start="67:54" pos:end="67:64">"clk32-kHz"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:11">case <expr pos:start="71:10" pos:end="71:10"><literal type="number" pos:start="71:10" pos:end="71:10">1</literal></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:38"><expr pos:start="73:9" pos:end="73:37"><call pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:25">omap_clk_reparent</name><argument_list pos:start="73:26" pos:end="73:37">(<argument pos:start="73:27" pos:end="73:30"><expr pos:start="73:27" pos:end="73:30"><name pos:start="73:27" pos:end="73:30">core</name></expr></argument>, <argument pos:start="73:33" pos:end="73:36"><expr pos:start="73:33" pos:end="73:36"><name pos:start="73:33" pos:end="73:36">dpll</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:11">case <expr pos:start="77:10" pos:end="77:10"><literal type="number" pos:start="77:10" pos:end="77:10">2</literal></expr>:</case>

        <comment type="block" pos:start="79:9" pos:end="79:21">/* Default */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:41"><expr pos:start="81:9" pos:end="81:40"><call pos:start="81:9" pos:end="81:40"><name pos:start="81:9" pos:end="81:25">omap_clk_reparent</name><argument_list pos:start="81:26" pos:end="81:40">(<argument pos:start="81:27" pos:end="81:30"><expr pos:start="81:27" pos:end="81:30"><name pos:start="81:27" pos:end="81:30">core</name></expr></argument>, <argument pos:start="81:33" pos:end="81:39"><expr pos:start="81:33" pos:end="81:39"><name pos:start="81:33" pos:end="81:39">dpll_x2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:11">case <expr pos:start="85:10" pos:end="85:10"><literal type="number" pos:start="85:10" pos:end="85:10">3</literal></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:64"><expr pos:start="87:9" pos:end="87:63"><call pos:start="87:9" pos:end="87:63"><name pos:start="87:9" pos:end="87:15">fprintf</name><argument_list pos:start="87:16" pos:end="87:63">(<argument pos:start="87:17" pos:end="87:22"><expr pos:start="87:17" pos:end="87:22"><name pos:start="87:17" pos:end="87:22">stderr</name></expr></argument>, <argument pos:start="87:25" pos:end="87:48"><expr pos:start="87:25" pos:end="87:48"><literal type="string" pos:start="87:25" pos:end="87:48">"%s: bad CORE_CLK_SRC\n"</literal></expr></argument>, <argument pos:start="87:51" pos:end="87:62"><expr pos:start="87:51" pos:end="87:62"><name pos:start="87:51" pos:end="87:62">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
