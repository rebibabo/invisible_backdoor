<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25270.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">gen_wrteei</name><parameter_list pos:start="1:23" pos:end="1:41">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:35">DisasContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="34:0">

<cpp:if pos:start="5:1" pos:end="5:29">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:29"><call pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:11">defined</name><argument_list pos:start="5:12" pos:end="5:29">(<argument pos:start="5:13" pos:end="5:28"><expr pos:start="5:13" pos:end="5:28"><name pos:start="5:13" pos:end="5:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="7:5" pos:end="10:0"><expr pos:start="7:5" pos:end="7:51"><call pos:start="7:5" pos:end="7:51"><name pos:start="7:5" pos:end="7:23">gen_inval_exception</name><argument_list pos:start="7:24" pos:end="7:51">(<argument pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:27">ctx</name></expr></argument>, <argument pos:start="7:30" pos:end="7:50"><expr pos:start="7:30" pos:end="7:50"><name pos:start="7:30" pos:end="7:50">POWERPC_EXCP_PRIV_OPC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="9:1" pos:end="9:5">#<cpp:directive pos:start="9:2" pos:end="9:5">else</cpp:directive></cpp:else>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:26">(<expr pos:start="11:9" pos:end="11:25"><call pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:16">unlikely</name><argument_list pos:start="11:17" pos:end="11:25">(<argument pos:start="11:18" pos:end="11:24"><expr pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:20">ctx</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:24">pr</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:28" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:56"><expr pos:start="13:9" pos:end="13:55"><call pos:start="13:9" pos:end="13:55"><name pos:start="13:9" pos:end="13:27">gen_inval_exception</name><argument_list pos:start="13:28" pos:end="13:55">(<argument pos:start="13:29" pos:end="13:31"><expr pos:start="13:29" pos:end="13:31"><name pos:start="13:29" pos:end="13:31">ctx</name></expr></argument>, <argument pos:start="13:34" pos:end="13:54"><expr pos:start="13:34" pos:end="13:54"><name pos:start="13:34" pos:end="13:54">POWERPC_EXCP_PRIV_OPC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="34:0"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:33">(<expr pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:11">ctx</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:19">opcode</name></name> <operator pos:start="19:21" pos:end="19:21">&amp;</operator> <literal type="number" pos:start="19:23" pos:end="19:32">0x00008000</literal></expr>)</condition> <block pos:start="19:35" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:32">

        <expr_stmt pos:start="21:9" pos:end="21:56"><expr pos:start="21:9" pos:end="21:55"><call pos:start="21:9" pos:end="21:55"><name pos:start="21:9" pos:end="21:22">tcg_gen_ori_tl</name><argument_list pos:start="21:23" pos:end="21:55">(<argument pos:start="21:24" pos:end="21:30"><expr pos:start="21:24" pos:end="21:30"><name pos:start="21:24" pos:end="21:30">cpu_msr</name></expr></argument>, <argument pos:start="21:33" pos:end="21:39"><expr pos:start="21:33" pos:end="21:39"><name pos:start="21:33" pos:end="21:39">cpu_msr</name></expr></argument>, <argument pos:start="21:42" pos:end="21:54"><expr pos:start="21:42" pos:end="21:54"><operator pos:start="21:42" pos:end="21:42">(</operator><literal type="number" pos:start="21:43" pos:end="21:43">1</literal> <operator pos:start="21:45" pos:end="21:46">&lt;&lt;</operator> <name pos:start="21:48" pos:end="21:53">MSR_EE</name><operator pos:start="21:54" pos:end="21:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="23:9" pos:end="23:69">/* Stop translation to have a chance to raise an exception */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:32"><expr pos:start="25:9" pos:end="25:31"><call pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:26">gen_stop_exception</name><argument_list pos:start="25:27" pos:end="25:31">(<argument pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><name pos:start="25:28" pos:end="25:30">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="34:0">else <block pos:start="27:12" pos:end="34:0">{<block_content pos:start="29:9" pos:end="29:58">

        <expr_stmt pos:start="29:9" pos:end="29:58"><expr pos:start="29:9" pos:end="29:57"><call pos:start="29:9" pos:end="29:57"><name pos:start="29:9" pos:end="29:23">tcg_gen_andi_tl</name><argument_list pos:start="29:24" pos:end="29:57">(<argument pos:start="29:25" pos:end="29:31"><expr pos:start="29:25" pos:end="29:31"><name pos:start="29:25" pos:end="29:31">cpu_msr</name></expr></argument>, <argument pos:start="29:34" pos:end="29:40"><expr pos:start="29:34" pos:end="29:40"><name pos:start="29:34" pos:end="29:40">cpu_msr</name></expr></argument>, <argument pos:start="29:43" pos:end="29:56"><expr pos:start="29:43" pos:end="29:56"><operator pos:start="29:43" pos:end="29:43">~</operator><operator pos:start="29:44" pos:end="29:44">(</operator><literal type="number" pos:start="29:45" pos:end="29:45">1</literal> <operator pos:start="29:47" pos:end="29:48">&lt;&lt;</operator> <name pos:start="29:50" pos:end="29:55">MSR_EE</name><operator pos:start="29:56" pos:end="29:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
