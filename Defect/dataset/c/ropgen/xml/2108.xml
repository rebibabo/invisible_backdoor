<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2108.c" pos:tabs="8"><function pos:start="1:1" pos:end="303:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:17">aflat</name><parameter_list pos:start="1:18" pos:end="3:71">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:36"><name pos:start="1:19" pos:end="1:33">WaveformContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:49"><decl pos:start="1:39" pos:end="1:49"><type pos:start="1:39" pos:end="1:49"><name pos:start="1:39" pos:end="1:45">AVFrame</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">in</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:58">AVFrame</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">out</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:31"><decl pos:start="3:19" pos:end="3:31"><type pos:start="3:19" pos:end="3:31"><name pos:start="3:19" pos:end="3:21">int</name></type> <name pos:start="3:23" pos:end="3:31">component</name></decl></parameter>, <parameter pos:start="3:34" pos:end="3:46"><decl pos:start="3:34" pos:end="3:46"><type pos:start="3:34" pos:end="3:46"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:46">intensity</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:58"><decl pos:start="3:49" pos:end="3:58"><type pos:start="3:49" pos:end="3:58"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:58">offset</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:70"><decl pos:start="3:61" pos:end="3:70"><type pos:start="3:61" pos:end="3:70"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:70">column</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="303:1">{<block_content pos:start="7:5" pos:end="301:52">

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">plane</name> <init pos:start="7:21" pos:end="7:52">= <expr pos:start="7:23" pos:end="7:52"><name pos:start="7:23" pos:end="7:46"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:29">desc</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:35">comp</name><index pos:start="7:36" pos:end="7:46">[<expr pos:start="7:37" pos:end="7:45"><name pos:start="7:37" pos:end="7:45">component</name></expr>]</index></name><operator pos:start="7:47" pos:end="7:47">.</operator><name pos:start="7:48" pos:end="7:52">plane</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:20">mirror</name> <init pos:start="9:22" pos:end="9:32">= <expr pos:start="9:24" pos:end="9:32"><name pos:start="9:24" pos:end="9:32"><name pos:start="9:24" pos:end="9:24">s</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:32">mirror</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:54"><decl pos:start="11:5" pos:end="11:53"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:25">c0_linesize</name> <init pos:start="11:27" pos:end="11:53">= <expr pos:start="11:29" pos:end="11:53"><name pos:start="11:29" pos:end="11:53"><name pos:start="11:29" pos:end="11:30">in</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:40">linesize</name><index pos:start="11:41" pos:end="11:53">[ <expr pos:start="11:43" pos:end="11:51"><name pos:start="11:43" pos:end="11:47">plane</name> <operator pos:start="11:49" pos:end="11:49">+</operator> <literal type="number" pos:start="11:51" pos:end="11:51">0</literal></expr> ]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:65"><decl pos:start="13:5" pos:end="13:64"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:25">c1_linesize</name> <init pos:start="13:27" pos:end="13:64">= <expr pos:start="13:29" pos:end="13:64"><name pos:start="13:29" pos:end="13:64"><name pos:start="13:29" pos:end="13:30">in</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:40">linesize</name><index pos:start="13:41" pos:end="13:64">[<expr pos:start="13:42" pos:end="13:63"><operator pos:start="13:42" pos:end="13:42">(</operator><name pos:start="13:43" pos:end="13:47">plane</name> <operator pos:start="13:49" pos:end="13:49">+</operator> <literal type="number" pos:start="13:51" pos:end="13:51">1</literal><operator pos:start="13:52" pos:end="13:52">)</operator> <operator pos:start="13:54" pos:end="13:54">%</operator> <name pos:start="13:56" pos:end="13:63"><name pos:start="13:56" pos:end="13:56">s</name><operator pos:start="13:57" pos:end="13:58">-&gt;</operator><name pos:start="13:59" pos:end="13:63">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:65"><decl pos:start="15:5" pos:end="15:64"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:25">c2_linesize</name> <init pos:start="15:27" pos:end="15:64">= <expr pos:start="15:29" pos:end="15:64"><name pos:start="15:29" pos:end="15:64"><name pos:start="15:29" pos:end="15:30">in</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:40">linesize</name><index pos:start="15:41" pos:end="15:64">[<expr pos:start="15:42" pos:end="15:63"><operator pos:start="15:42" pos:end="15:42">(</operator><name pos:start="15:43" pos:end="15:47">plane</name> <operator pos:start="15:49" pos:end="15:49">+</operator> <literal type="number" pos:start="15:51" pos:end="15:51">2</literal><operator pos:start="15:52" pos:end="15:52">)</operator> <operator pos:start="15:54" pos:end="15:54">%</operator> <name pos:start="15:56" pos:end="15:63"><name pos:start="15:56" pos:end="15:56">s</name><operator pos:start="15:57" pos:end="15:58">-&gt;</operator><name pos:start="15:59" pos:end="15:63">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:55"><decl pos:start="17:5" pos:end="17:54"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:25">d0_linesize</name> <init pos:start="17:27" pos:end="17:54">= <expr pos:start="17:29" pos:end="17:54"><name pos:start="17:29" pos:end="17:54"><name pos:start="17:29" pos:end="17:31">out</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:41">linesize</name><index pos:start="17:42" pos:end="17:54">[ <expr pos:start="17:44" pos:end="17:52"><name pos:start="17:44" pos:end="17:48">plane</name> <operator pos:start="17:50" pos:end="17:50">+</operator> <literal type="number" pos:start="17:52" pos:end="17:52">0</literal></expr> ]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:66"><decl pos:start="19:5" pos:end="19:65"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:25">d1_linesize</name> <init pos:start="19:27" pos:end="19:65">= <expr pos:start="19:29" pos:end="19:65"><name pos:start="19:29" pos:end="19:65"><name pos:start="19:29" pos:end="19:31">out</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:41">linesize</name><index pos:start="19:42" pos:end="19:65">[<expr pos:start="19:43" pos:end="19:64"><operator pos:start="19:43" pos:end="19:43">(</operator><name pos:start="19:44" pos:end="19:48">plane</name> <operator pos:start="19:50" pos:end="19:50">+</operator> <literal type="number" pos:start="19:52" pos:end="19:52">1</literal><operator pos:start="19:53" pos:end="19:53">)</operator> <operator pos:start="19:55" pos:end="19:55">%</operator> <name pos:start="19:57" pos:end="19:64"><name pos:start="19:57" pos:end="19:57">s</name><operator pos:start="19:58" pos:end="19:59">-&gt;</operator><name pos:start="19:60" pos:end="19:64">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:66"><decl pos:start="21:5" pos:end="21:65"><type pos:start="21:5" pos:end="21:13"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:13">int</name></type> <name pos:start="21:15" pos:end="21:25">d2_linesize</name> <init pos:start="21:27" pos:end="21:65">= <expr pos:start="21:29" pos:end="21:65"><name pos:start="21:29" pos:end="21:65"><name pos:start="21:29" pos:end="21:31">out</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:41">linesize</name><index pos:start="21:42" pos:end="21:65">[<expr pos:start="21:43" pos:end="21:64"><operator pos:start="21:43" pos:end="21:43">(</operator><name pos:start="21:44" pos:end="21:48">plane</name> <operator pos:start="21:50" pos:end="21:50">+</operator> <literal type="number" pos:start="21:52" pos:end="21:52">2</literal><operator pos:start="21:53" pos:end="21:53">)</operator> <operator pos:start="21:55" pos:end="21:55">%</operator> <name pos:start="21:57" pos:end="21:64"><name pos:start="21:57" pos:end="21:57">s</name><operator pos:start="21:58" pos:end="21:59">-&gt;</operator><name pos:start="21:60" pos:end="21:64">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:36"><decl pos:start="23:5" pos:end="23:35"><type pos:start="23:5" pos:end="23:13"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:13">int</name></type> <name pos:start="23:15" pos:end="23:17">max</name> <init pos:start="23:19" pos:end="23:35">= <expr pos:start="23:21" pos:end="23:35"><literal type="number" pos:start="23:21" pos:end="23:25">255</literal> <operator pos:start="23:25" pos:end="23:25">-</operator> <name pos:start="23:27" pos:end="23:35">intensity</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:33"><decl pos:start="25:5" pos:end="25:32"><type pos:start="25:5" pos:end="25:13"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:13">int</name></type> <name pos:start="25:15" pos:end="25:19">src_h</name> <init pos:start="25:21" pos:end="25:32">= <expr pos:start="25:23" pos:end="25:32"><name pos:start="25:23" pos:end="25:32"><name pos:start="25:23" pos:end="25:24">in</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:32">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:32"><decl pos:start="27:5" pos:end="27:31"><type pos:start="27:5" pos:end="27:13"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:13">int</name></type> <name pos:start="27:15" pos:end="27:19">src_w</name> <init pos:start="27:21" pos:end="27:31">= <expr pos:start="27:23" pos:end="27:31"><name pos:start="27:23" pos:end="27:31"><name pos:start="27:23" pos:end="27:24">in</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:31">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:13"><decl pos:start="29:5" pos:end="29:9"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">x</name></decl>, <decl pos:start="29:12" pos:end="29:12"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:12" pos:end="29:12">y</name></decl>;</decl_stmt>



    <if_stmt pos:start="33:5" pos:end="293:5"><if pos:start="33:5" pos:end="147:5">if <condition pos:start="33:8" pos:end="33:15">(<expr pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:14">column</name></expr>)</condition> <block pos:start="33:17" pos:end="147:5">{<block_content pos:start="35:9" pos:end="145:9">

        <decl_stmt pos:start="35:9" pos:end="35:76"><decl pos:start="35:9" pos:end="35:75"><type pos:start="35:9" pos:end="35:17"><specifier pos:start="35:9" pos:end="35:13">const</specifier> <name pos:start="35:15" pos:end="35:17">int</name></type> <name pos:start="35:19" pos:end="35:36">d0_signed_linesize</name> <init pos:start="35:38" pos:end="35:75">= <expr pos:start="35:40" pos:end="35:75"><name pos:start="35:40" pos:end="35:50">d0_linesize</name> <operator pos:start="35:52" pos:end="35:52">*</operator> <operator pos:start="35:54" pos:end="35:54">(</operator><ternary pos:start="35:55" pos:end="35:74"><condition pos:start="35:55" pos:end="35:67"><expr pos:start="35:55" pos:end="35:65"><name pos:start="35:55" pos:end="35:60">mirror</name> <operator pos:start="35:62" pos:end="35:63">==</operator> <literal type="number" pos:start="35:65" pos:end="35:65">1</literal></expr> ?</condition><then pos:start="35:69" pos:end="35:70"> <expr pos:start="35:69" pos:end="35:70"><operator pos:start="35:69" pos:end="35:69">-</operator><literal type="number" pos:start="35:70" pos:end="35:70">1</literal></expr> </then><else pos:start="35:72" pos:end="35:74">: <expr pos:start="35:74" pos:end="35:74"><literal type="number" pos:start="35:74" pos:end="35:74">1</literal></expr></else></ternary><operator pos:start="35:75" pos:end="35:75">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:76"><decl pos:start="37:9" pos:end="37:75"><type pos:start="37:9" pos:end="37:17"><specifier pos:start="37:9" pos:end="37:13">const</specifier> <name pos:start="37:15" pos:end="37:17">int</name></type> <name pos:start="37:19" pos:end="37:36">d1_signed_linesize</name> <init pos:start="37:38" pos:end="37:75">= <expr pos:start="37:40" pos:end="37:75"><name pos:start="37:40" pos:end="37:50">d1_linesize</name> <operator pos:start="37:52" pos:end="37:52">*</operator> <operator pos:start="37:54" pos:end="37:54">(</operator><ternary pos:start="37:55" pos:end="37:74"><condition pos:start="37:55" pos:end="37:67"><expr pos:start="37:55" pos:end="37:65"><name pos:start="37:55" pos:end="37:60">mirror</name> <operator pos:start="37:62" pos:end="37:63">==</operator> <literal type="number" pos:start="37:65" pos:end="37:65">1</literal></expr> ?</condition><then pos:start="37:69" pos:end="37:70"> <expr pos:start="37:69" pos:end="37:70"><operator pos:start="37:69" pos:end="37:69">-</operator><literal type="number" pos:start="37:70" pos:end="37:70">1</literal></expr> </then><else pos:start="37:72" pos:end="37:74">: <expr pos:start="37:74" pos:end="37:74"><literal type="number" pos:start="37:74" pos:end="37:74">1</literal></expr></else></ternary><operator pos:start="37:75" pos:end="37:75">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:76"><decl pos:start="39:9" pos:end="39:75"><type pos:start="39:9" pos:end="39:17"><specifier pos:start="39:9" pos:end="39:13">const</specifier> <name pos:start="39:15" pos:end="39:17">int</name></type> <name pos:start="39:19" pos:end="39:36">d2_signed_linesize</name> <init pos:start="39:38" pos:end="39:75">= <expr pos:start="39:40" pos:end="39:75"><name pos:start="39:40" pos:end="39:50">d2_linesize</name> <operator pos:start="39:52" pos:end="39:52">*</operator> <operator pos:start="39:54" pos:end="39:54">(</operator><ternary pos:start="39:55" pos:end="39:74"><condition pos:start="39:55" pos:end="39:67"><expr pos:start="39:55" pos:end="39:65"><name pos:start="39:55" pos:end="39:60">mirror</name> <operator pos:start="39:62" pos:end="39:63">==</operator> <literal type="number" pos:start="39:65" pos:end="39:65">1</literal></expr> ?</condition><then pos:start="39:69" pos:end="39:70"> <expr pos:start="39:69" pos:end="39:70"><operator pos:start="39:69" pos:end="39:69">-</operator><literal type="number" pos:start="39:70" pos:end="39:70">1</literal></expr> </then><else pos:start="39:72" pos:end="39:74">: <expr pos:start="39:74" pos:end="39:74"><literal type="number" pos:start="39:74" pos:end="39:74">1</literal></expr></else></ternary><operator pos:start="39:75" pos:end="39:75">)</operator></expr></init></decl>;</decl_stmt>



        <for pos:start="43:9" pos:end="145:9">for <control pos:start="43:13" pos:end="43:35">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">x</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:30"><expr pos:start="43:21" pos:end="43:29"><name pos:start="43:21" pos:end="43:21">x</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <name pos:start="43:25" pos:end="43:29">src_w</name></expr>;</condition> <incr pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:32">x</name><operator pos:start="43:33" pos:end="43:34">++</operator></expr></incr>)</control> <block pos:start="43:37" pos:end="145:9">{<block_content pos:start="45:13" pos:end="143:13">

            <decl_stmt pos:start="45:13" pos:end="45:57"><decl pos:start="45:13" pos:end="45:56"><type pos:start="45:13" pos:end="45:27"><specifier pos:start="45:13" pos:end="45:17">const</specifier> <name pos:start="45:19" pos:end="45:25">uint8_t</name> <modifier pos:start="45:27" pos:end="45:27">*</modifier></type><name pos:start="45:28" pos:end="45:34">c0_data</name> <init pos:start="45:36" pos:end="45:56">= <expr pos:start="45:38" pos:end="45:56"><name pos:start="45:38" pos:end="45:56"><name pos:start="45:38" pos:end="45:39">in</name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:45">data</name><index pos:start="45:46" pos:end="45:56">[<expr pos:start="45:47" pos:end="45:55"><name pos:start="45:47" pos:end="45:51">plane</name> <operator pos:start="45:53" pos:end="45:53">+</operator> <literal type="number" pos:start="45:55" pos:end="45:55">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="47:13" pos:end="47:70"><decl pos:start="47:13" pos:end="47:69"><type pos:start="47:13" pos:end="47:27"><specifier pos:start="47:13" pos:end="47:17">const</specifier> <name pos:start="47:19" pos:end="47:25">uint8_t</name> <modifier pos:start="47:27" pos:end="47:27">*</modifier></type><name pos:start="47:28" pos:end="47:34">c1_data</name> <init pos:start="47:36" pos:end="47:69">= <expr pos:start="47:38" pos:end="47:69"><name pos:start="47:38" pos:end="47:69"><name pos:start="47:38" pos:end="47:39">in</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:45">data</name><index pos:start="47:46" pos:end="47:69">[<expr pos:start="47:47" pos:end="47:68"><operator pos:start="47:47" pos:end="47:47">(</operator><name pos:start="47:48" pos:end="47:52">plane</name> <operator pos:start="47:54" pos:end="47:54">+</operator> <literal type="number" pos:start="47:56" pos:end="47:56">1</literal><operator pos:start="47:57" pos:end="47:57">)</operator> <operator pos:start="47:59" pos:end="47:59">%</operator> <name pos:start="47:61" pos:end="47:68"><name pos:start="47:61" pos:end="47:61">s</name><operator pos:start="47:62" pos:end="47:63">-&gt;</operator><name pos:start="47:64" pos:end="47:68">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:70"><decl pos:start="49:13" pos:end="49:69"><type pos:start="49:13" pos:end="49:27"><specifier pos:start="49:13" pos:end="49:17">const</specifier> <name pos:start="49:19" pos:end="49:25">uint8_t</name> <modifier pos:start="49:27" pos:end="49:27">*</modifier></type><name pos:start="49:28" pos:end="49:34">c2_data</name> <init pos:start="49:36" pos:end="49:69">= <expr pos:start="49:38" pos:end="49:69"><name pos:start="49:38" pos:end="49:69"><name pos:start="49:38" pos:end="49:39">in</name><operator pos:start="49:40" pos:end="49:41">-&gt;</operator><name pos:start="49:42" pos:end="49:45">data</name><index pos:start="49:46" pos:end="49:69">[<expr pos:start="49:47" pos:end="49:68"><operator pos:start="49:47" pos:end="49:47">(</operator><name pos:start="49:48" pos:end="49:52">plane</name> <operator pos:start="49:54" pos:end="49:54">+</operator> <literal type="number" pos:start="49:56" pos:end="49:56">2</literal><operator pos:start="49:57" pos:end="49:57">)</operator> <operator pos:start="49:59" pos:end="49:59">%</operator> <name pos:start="49:61" pos:end="49:68"><name pos:start="49:61" pos:end="49:61">s</name><operator pos:start="49:62" pos:end="49:63">-&gt;</operator><name pos:start="49:64" pos:end="49:68">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:71"><decl pos:start="51:13" pos:end="51:70"><type pos:start="51:13" pos:end="51:21"><name pos:start="51:13" pos:end="51:19">uint8_t</name> <modifier pos:start="51:21" pos:end="51:21">*</modifier></type><name pos:start="51:22" pos:end="51:28">d0_data</name> <init pos:start="51:30" pos:end="51:70">= <expr pos:start="51:32" pos:end="51:70"><name pos:start="51:32" pos:end="51:47"><name pos:start="51:32" pos:end="51:34">out</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:40">data</name><index pos:start="51:41" pos:end="51:47">[<expr pos:start="51:42" pos:end="51:46"><name pos:start="51:42" pos:end="51:46">plane</name></expr>]</index></name> <operator pos:start="51:49" pos:end="51:49">+</operator> <name pos:start="51:51" pos:end="51:56">offset</name> <operator pos:start="51:58" pos:end="51:58">*</operator> <name pos:start="51:60" pos:end="51:70">d0_linesize</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="53:88"><decl pos:start="53:13" pos:end="53:87"><type pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:19">uint8_t</name> <modifier pos:start="53:21" pos:end="53:21">*</modifier></type><name pos:start="53:22" pos:end="53:28">d1_data</name> <init pos:start="53:30" pos:end="53:87">= <expr pos:start="53:32" pos:end="53:87"><name pos:start="53:32" pos:end="53:64"><name pos:start="53:32" pos:end="53:34">out</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:40">data</name><index pos:start="53:41" pos:end="53:64">[<expr pos:start="53:42" pos:end="53:63"><operator pos:start="53:42" pos:end="53:42">(</operator><name pos:start="53:43" pos:end="53:47">plane</name> <operator pos:start="53:49" pos:end="53:49">+</operator> <literal type="number" pos:start="53:51" pos:end="53:51">1</literal><operator pos:start="53:52" pos:end="53:52">)</operator> <operator pos:start="53:54" pos:end="53:54">%</operator> <name pos:start="53:56" pos:end="53:63"><name pos:start="53:56" pos:end="53:56">s</name><operator pos:start="53:57" pos:end="53:58">-&gt;</operator><name pos:start="53:59" pos:end="53:63">ncomp</name></name></expr>]</index></name> <operator pos:start="53:66" pos:end="53:66">+</operator> <name pos:start="53:68" pos:end="53:73">offset</name> <operator pos:start="53:75" pos:end="53:75">*</operator> <name pos:start="53:77" pos:end="53:87">d1_linesize</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="55:13" pos:end="55:88"><decl pos:start="55:13" pos:end="55:87"><type pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:19">uint8_t</name> <modifier pos:start="55:21" pos:end="55:21">*</modifier></type><name pos:start="55:22" pos:end="55:28">d2_data</name> <init pos:start="55:30" pos:end="55:87">= <expr pos:start="55:32" pos:end="55:87"><name pos:start="55:32" pos:end="55:64"><name pos:start="55:32" pos:end="55:34">out</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:40">data</name><index pos:start="55:41" pos:end="55:64">[<expr pos:start="55:42" pos:end="55:63"><operator pos:start="55:42" pos:end="55:42">(</operator><name pos:start="55:43" pos:end="55:47">plane</name> <operator pos:start="55:49" pos:end="55:49">+</operator> <literal type="number" pos:start="55:51" pos:end="55:51">2</literal><operator pos:start="55:52" pos:end="55:52">)</operator> <operator pos:start="55:54" pos:end="55:54">%</operator> <name pos:start="55:56" pos:end="55:63"><name pos:start="55:56" pos:end="55:56">s</name><operator pos:start="55:57" pos:end="55:58">-&gt;</operator><name pos:start="55:59" pos:end="55:63">ncomp</name></name></expr>]</index></name> <operator pos:start="55:66" pos:end="55:66">+</operator> <name pos:start="55:68" pos:end="55:73">offset</name> <operator pos:start="55:75" pos:end="55:75">*</operator> <name pos:start="55:77" pos:end="55:87">d2_linesize</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="57:13" pos:end="57:83"><decl pos:start="57:13" pos:end="57:82"><type pos:start="57:13" pos:end="57:27"><name pos:start="57:13" pos:end="57:19">uint8_t</name> <modifier pos:start="57:21" pos:end="57:21">*</modifier> <specifier pos:start="57:23" pos:end="57:27">const</specifier></type> <name pos:start="57:29" pos:end="57:42">d0_bottom_line</name> <init pos:start="57:44" pos:end="57:82">= <expr pos:start="57:46" pos:end="57:82"><name pos:start="57:46" pos:end="57:52">d0_data</name> <operator pos:start="57:54" pos:end="57:54">+</operator> <name pos:start="57:56" pos:end="57:66">d0_linesize</name> <operator pos:start="57:68" pos:end="57:68">*</operator> <operator pos:start="57:70" pos:end="57:70">(</operator><name pos:start="57:71" pos:end="57:77"><name pos:start="57:71" pos:end="57:71">s</name><operator pos:start="57:72" pos:end="57:73">-&gt;</operator><name pos:start="57:74" pos:end="57:77">size</name></name> <operator pos:start="57:79" pos:end="57:79">-</operator> <literal type="number" pos:start="57:81" pos:end="57:81">1</literal><operator pos:start="57:82" pos:end="57:82">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="59:13" pos:end="59:69"><decl pos:start="59:13" pos:end="59:68"><type pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:19">uint8_t</name> <modifier pos:start="59:21" pos:end="59:21">*</modifier> <specifier pos:start="59:23" pos:end="59:27">const</specifier></type> <name pos:start="59:29" pos:end="59:30">d0</name> <init pos:start="59:32" pos:end="59:68">= <expr pos:start="59:34" pos:end="59:68"><operator pos:start="59:34" pos:end="59:34">(</operator><ternary pos:start="59:35" pos:end="59:67"><condition pos:start="59:35" pos:end="59:42"><expr pos:start="59:35" pos:end="59:40"><name pos:start="59:35" pos:end="59:40">mirror</name></expr> ?</condition><then pos:start="59:44" pos:end="59:57"> <expr pos:start="59:44" pos:end="59:57"><name pos:start="59:44" pos:end="59:57">d0_bottom_line</name></expr> </then><else pos:start="59:59" pos:end="59:67">: <expr pos:start="59:61" pos:end="59:67"><name pos:start="59:61" pos:end="59:67">d0_data</name></expr></else></ternary><operator pos:start="59:68" pos:end="59:68">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="61:13" pos:end="61:83"><decl pos:start="61:13" pos:end="61:82"><type pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:19">uint8_t</name> <modifier pos:start="61:21" pos:end="61:21">*</modifier> <specifier pos:start="61:23" pos:end="61:27">const</specifier></type> <name pos:start="61:29" pos:end="61:42">d1_bottom_line</name> <init pos:start="61:44" pos:end="61:82">= <expr pos:start="61:46" pos:end="61:82"><name pos:start="61:46" pos:end="61:52">d1_data</name> <operator pos:start="61:54" pos:end="61:54">+</operator> <name pos:start="61:56" pos:end="61:66">d1_linesize</name> <operator pos:start="61:68" pos:end="61:68">*</operator> <operator pos:start="61:70" pos:end="61:70">(</operator><name pos:start="61:71" pos:end="61:77"><name pos:start="61:71" pos:end="61:71">s</name><operator pos:start="61:72" pos:end="61:73">-&gt;</operator><name pos:start="61:74" pos:end="61:77">size</name></name> <operator pos:start="61:79" pos:end="61:79">-</operator> <literal type="number" pos:start="61:81" pos:end="61:81">1</literal><operator pos:start="61:82" pos:end="61:82">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="63:13" pos:end="63:69"><decl pos:start="63:13" pos:end="63:68"><type pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:19">uint8_t</name> <modifier pos:start="63:21" pos:end="63:21">*</modifier> <specifier pos:start="63:23" pos:end="63:27">const</specifier></type> <name pos:start="63:29" pos:end="63:30">d1</name> <init pos:start="63:32" pos:end="63:68">= <expr pos:start="63:34" pos:end="63:68"><operator pos:start="63:34" pos:end="63:34">(</operator><ternary pos:start="63:35" pos:end="63:67"><condition pos:start="63:35" pos:end="63:42"><expr pos:start="63:35" pos:end="63:40"><name pos:start="63:35" pos:end="63:40">mirror</name></expr> ?</condition><then pos:start="63:44" pos:end="63:57"> <expr pos:start="63:44" pos:end="63:57"><name pos:start="63:44" pos:end="63:57">d1_bottom_line</name></expr> </then><else pos:start="63:59" pos:end="63:67">: <expr pos:start="63:61" pos:end="63:67"><name pos:start="63:61" pos:end="63:67">d1_data</name></expr></else></ternary><operator pos:start="63:68" pos:end="63:68">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="65:13" pos:end="65:83"><decl pos:start="65:13" pos:end="65:82"><type pos:start="65:13" pos:end="65:27"><name pos:start="65:13" pos:end="65:19">uint8_t</name> <modifier pos:start="65:21" pos:end="65:21">*</modifier> <specifier pos:start="65:23" pos:end="65:27">const</specifier></type> <name pos:start="65:29" pos:end="65:42">d2_bottom_line</name> <init pos:start="65:44" pos:end="65:82">= <expr pos:start="65:46" pos:end="65:82"><name pos:start="65:46" pos:end="65:52">d2_data</name> <operator pos:start="65:54" pos:end="65:54">+</operator> <name pos:start="65:56" pos:end="65:66">d2_linesize</name> <operator pos:start="65:68" pos:end="65:68">*</operator> <operator pos:start="65:70" pos:end="65:70">(</operator><name pos:start="65:71" pos:end="65:77"><name pos:start="65:71" pos:end="65:71">s</name><operator pos:start="65:72" pos:end="65:73">-&gt;</operator><name pos:start="65:74" pos:end="65:77">size</name></name> <operator pos:start="65:79" pos:end="65:79">-</operator> <literal type="number" pos:start="65:81" pos:end="65:81">1</literal><operator pos:start="65:82" pos:end="65:82">)</operator></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="67:13" pos:end="67:69"><decl pos:start="67:13" pos:end="67:68"><type pos:start="67:13" pos:end="67:27"><name pos:start="67:13" pos:end="67:19">uint8_t</name> <modifier pos:start="67:21" pos:end="67:21">*</modifier> <specifier pos:start="67:23" pos:end="67:27">const</specifier></type> <name pos:start="67:29" pos:end="67:30">d2</name> <init pos:start="67:32" pos:end="67:68">= <expr pos:start="67:34" pos:end="67:68"><operator pos:start="67:34" pos:end="67:34">(</operator><ternary pos:start="67:35" pos:end="67:67"><condition pos:start="67:35" pos:end="67:42"><expr pos:start="67:35" pos:end="67:40"><name pos:start="67:35" pos:end="67:40">mirror</name></expr> ?</condition><then pos:start="67:44" pos:end="67:57"> <expr pos:start="67:44" pos:end="67:57"><name pos:start="67:44" pos:end="67:57">d2_bottom_line</name></expr> </then><else pos:start="67:59" pos:end="67:67">: <expr pos:start="67:61" pos:end="67:67"><name pos:start="67:61" pos:end="67:67">d2_data</name></expr></else></ternary><operator pos:start="67:68" pos:end="67:68">)</operator></expr></init></decl>;</decl_stmt>



            <for pos:start="71:13" pos:end="143:13">for <control pos:start="71:17" pos:end="71:39">(<init pos:start="71:18" pos:end="71:23"><expr pos:start="71:18" pos:end="71:22"><name pos:start="71:18" pos:end="71:18">y</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>;</init> <condition pos:start="71:25" pos:end="71:34"><expr pos:start="71:25" pos:end="71:33"><name pos:start="71:25" pos:end="71:25">y</name> <operator pos:start="71:27" pos:end="71:27">&lt;</operator> <name pos:start="71:29" pos:end="71:33">src_h</name></expr>;</condition> <incr pos:start="71:36" pos:end="71:38"><expr pos:start="71:36" pos:end="71:38"><name pos:start="71:36" pos:end="71:36">y</name><operator pos:start="71:37" pos:end="71:38">++</operator></expr></incr>)</control> <block pos:start="71:41" pos:end="143:13">{<block_content pos:start="73:17" pos:end="141:39">

                <decl_stmt pos:start="73:17" pos:end="73:48"><decl pos:start="73:17" pos:end="73:47"><type pos:start="73:17" pos:end="73:25"><specifier pos:start="73:17" pos:end="73:21">const</specifier> <name pos:start="73:23" pos:end="73:25">int</name></type> <name pos:start="73:27" pos:end="73:28">c0</name> <init pos:start="73:30" pos:end="73:47">= <expr pos:start="73:32" pos:end="73:47"><name pos:start="73:32" pos:end="73:41"><name pos:start="73:32" pos:end="73:38">c0_data</name><index pos:start="73:39" pos:end="73:41">[<expr pos:start="73:40" pos:end="73:40"><name pos:start="73:40" pos:end="73:40">x</name></expr>]</index></name> <operator pos:start="73:43" pos:end="73:43">+</operator> <literal type="number" pos:start="73:45" pos:end="73:47">128</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="75:17" pos:end="75:48"><decl pos:start="75:17" pos:end="75:47"><type pos:start="75:17" pos:end="75:25"><specifier pos:start="75:17" pos:end="75:21">const</specifier> <name pos:start="75:23" pos:end="75:25">int</name></type> <name pos:start="75:27" pos:end="75:28">c1</name> <init pos:start="75:30" pos:end="75:47">= <expr pos:start="75:32" pos:end="75:47"><name pos:start="75:32" pos:end="75:41"><name pos:start="75:32" pos:end="75:38">c1_data</name><index pos:start="75:39" pos:end="75:41">[<expr pos:start="75:40" pos:end="75:40"><name pos:start="75:40" pos:end="75:40">x</name></expr>]</index></name> <operator pos:start="75:43" pos:end="75:43">-</operator> <literal type="number" pos:start="75:45" pos:end="75:47">128</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="77:17" pos:end="77:48"><decl pos:start="77:17" pos:end="77:47"><type pos:start="77:17" pos:end="77:25"><specifier pos:start="77:17" pos:end="77:21">const</specifier> <name pos:start="77:23" pos:end="77:25">int</name></type> <name pos:start="77:27" pos:end="77:28">c2</name> <init pos:start="77:30" pos:end="77:47">= <expr pos:start="77:32" pos:end="77:47"><name pos:start="77:32" pos:end="77:41"><name pos:start="77:32" pos:end="77:38">c2_data</name><index pos:start="77:39" pos:end="77:41">[<expr pos:start="77:40" pos:end="77:40"><name pos:start="77:40" pos:end="77:40">x</name></expr>]</index></name> <operator pos:start="77:43" pos:end="77:43">-</operator> <literal type="number" pos:start="77:45" pos:end="77:47">128</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="79:17" pos:end="79:32"><decl pos:start="79:17" pos:end="79:31"><type pos:start="79:17" pos:end="79:25"><name pos:start="79:17" pos:end="79:23">uint8_t</name> <modifier pos:start="79:25" pos:end="79:25">*</modifier></type><name pos:start="79:26" pos:end="79:31">target</name></decl>;</decl_stmt>

                <decl_stmt pos:start="81:17" pos:end="81:22"><decl pos:start="81:17" pos:end="81:21"><type pos:start="81:17" pos:end="81:19"><name pos:start="81:17" pos:end="81:19">int</name></type> <name pos:start="81:21" pos:end="81:21">p</name></decl>;</decl_stmt>



                <expr_stmt pos:start="85:17" pos:end="85:58"><expr pos:start="85:17" pos:end="85:57"><name pos:start="85:17" pos:end="85:22">target</name> <operator pos:start="85:24" pos:end="85:24">=</operator> <name pos:start="85:26" pos:end="85:27">d0</name> <operator pos:start="85:29" pos:end="85:29">+</operator> <name pos:start="85:31" pos:end="85:31">x</name> <operator pos:start="85:33" pos:end="85:33">+</operator> <name pos:start="85:35" pos:end="85:52">d0_signed_linesize</name> <operator pos:start="85:54" pos:end="85:54">*</operator> <name pos:start="85:56" pos:end="85:57">c0</name></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:47"><expr pos:start="87:17" pos:end="87:46"><call pos:start="87:17" pos:end="87:46"><name pos:start="87:17" pos:end="87:22">update</name><argument_list pos:start="87:23" pos:end="87:46">(<argument pos:start="87:24" pos:end="87:29"><expr pos:start="87:24" pos:end="87:29"><name pos:start="87:24" pos:end="87:29">target</name></expr></argument>, <argument pos:start="87:32" pos:end="87:34"><expr pos:start="87:32" pos:end="87:34"><name pos:start="87:32" pos:end="87:34">max</name></expr></argument>, <argument pos:start="87:37" pos:end="87:45"><expr pos:start="87:37" pos:end="87:45"><name pos:start="87:37" pos:end="87:45">intensity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <for pos:start="91:17" pos:end="97:17">for <control pos:start="91:21" pos:end="91:46">(<init pos:start="91:22" pos:end="91:33"><expr pos:start="91:22" pos:end="91:32"><name pos:start="91:22" pos:end="91:22">p</name> <operator pos:start="91:24" pos:end="91:24">=</operator> <name pos:start="91:26" pos:end="91:27">c0</name> <operator pos:start="91:29" pos:end="91:29">+</operator> <name pos:start="91:31" pos:end="91:32">c1</name></expr>;</init> <condition pos:start="91:35" pos:end="91:41"><expr pos:start="91:35" pos:end="91:40"><name pos:start="91:35" pos:end="91:35">p</name> <operator pos:start="91:37" pos:end="91:37">&lt;</operator> <name pos:start="91:39" pos:end="91:40">c0</name></expr>;</condition> <incr pos:start="91:43" pos:end="91:45"><expr pos:start="91:43" pos:end="91:45"><name pos:start="91:43" pos:end="91:43">p</name><operator pos:start="91:44" pos:end="91:45">++</operator></expr></incr>)</control> <block pos:start="91:48" pos:end="97:17">{<block_content pos:start="93:21" pos:end="95:43">

                    <expr_stmt pos:start="93:21" pos:end="93:61"><expr pos:start="93:21" pos:end="93:60"><name pos:start="93:21" pos:end="93:26">target</name> <operator pos:start="93:28" pos:end="93:28">=</operator> <name pos:start="93:30" pos:end="93:31">d1</name> <operator pos:start="93:33" pos:end="93:33">+</operator> <name pos:start="93:35" pos:end="93:35">x</name> <operator pos:start="93:37" pos:end="93:37">+</operator> <name pos:start="93:39" pos:end="93:56">d1_signed_linesize</name> <operator pos:start="93:58" pos:end="93:58">*</operator> <name pos:start="93:60" pos:end="93:60">p</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:43"><expr pos:start="95:21" pos:end="95:42"><call pos:start="95:21" pos:end="95:42"><name pos:start="95:21" pos:end="95:26">update</name><argument_list pos:start="95:27" pos:end="95:42">(<argument pos:start="95:28" pos:end="95:33"><expr pos:start="95:28" pos:end="95:33"><name pos:start="95:28" pos:end="95:33">target</name></expr></argument>, <argument pos:start="95:36" pos:end="95:38"><expr pos:start="95:36" pos:end="95:38"><name pos:start="95:36" pos:end="95:38">max</name></expr></argument>, <argument pos:start="95:41" pos:end="95:41"><expr pos:start="95:41" pos:end="95:41"><literal type="number" pos:start="95:41" pos:end="95:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <for pos:start="101:17" pos:end="107:17">for <control pos:start="101:21" pos:end="101:50">(<init pos:start="101:22" pos:end="101:37"><expr pos:start="101:22" pos:end="101:36"><name pos:start="101:22" pos:end="101:22">p</name> <operator pos:start="101:24" pos:end="101:24">=</operator> <name pos:start="101:26" pos:end="101:27">c0</name> <operator pos:start="101:29" pos:end="101:29">+</operator> <name pos:start="101:31" pos:end="101:32">c1</name> <operator pos:start="101:34" pos:end="101:34">-</operator> <literal type="number" pos:start="101:36" pos:end="101:36">1</literal></expr>;</init> <condition pos:start="101:39" pos:end="101:45"><expr pos:start="101:39" pos:end="101:44"><name pos:start="101:39" pos:end="101:39">p</name> <operator pos:start="101:41" pos:end="101:41">&gt;</operator> <name pos:start="101:43" pos:end="101:44">c0</name></expr>;</condition> <incr pos:start="101:47" pos:end="101:49"><expr pos:start="101:47" pos:end="101:49"><name pos:start="101:47" pos:end="101:47">p</name><operator pos:start="101:48" pos:end="101:49">--</operator></expr></incr>)</control> <block pos:start="101:52" pos:end="107:17">{<block_content pos:start="103:21" pos:end="105:43">

                    <expr_stmt pos:start="103:21" pos:end="103:61"><expr pos:start="103:21" pos:end="103:60"><name pos:start="103:21" pos:end="103:26">target</name> <operator pos:start="103:28" pos:end="103:28">=</operator> <name pos:start="103:30" pos:end="103:31">d1</name> <operator pos:start="103:33" pos:end="103:33">+</operator> <name pos:start="103:35" pos:end="103:35">x</name> <operator pos:start="103:37" pos:end="103:37">+</operator> <name pos:start="103:39" pos:end="103:56">d1_signed_linesize</name> <operator pos:start="103:58" pos:end="103:58">*</operator> <name pos:start="103:60" pos:end="103:60">p</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="105:21" pos:end="105:43"><expr pos:start="105:21" pos:end="105:42"><call pos:start="105:21" pos:end="105:42"><name pos:start="105:21" pos:end="105:26">update</name><argument_list pos:start="105:27" pos:end="105:42">(<argument pos:start="105:28" pos:end="105:33"><expr pos:start="105:28" pos:end="105:33"><name pos:start="105:28" pos:end="105:33">target</name></expr></argument>, <argument pos:start="105:36" pos:end="105:38"><expr pos:start="105:36" pos:end="105:38"><name pos:start="105:36" pos:end="105:38">max</name></expr></argument>, <argument pos:start="105:41" pos:end="105:41"><expr pos:start="105:41" pos:end="105:41"><literal type="number" pos:start="105:41" pos:end="105:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <for pos:start="111:17" pos:end="117:17">for <control pos:start="111:21" pos:end="111:46">(<init pos:start="111:22" pos:end="111:33"><expr pos:start="111:22" pos:end="111:32"><name pos:start="111:22" pos:end="111:22">p</name> <operator pos:start="111:24" pos:end="111:24">=</operator> <name pos:start="111:26" pos:end="111:27">c0</name> <operator pos:start="111:29" pos:end="111:29">+</operator> <name pos:start="111:31" pos:end="111:32">c2</name></expr>;</init> <condition pos:start="111:35" pos:end="111:41"><expr pos:start="111:35" pos:end="111:40"><name pos:start="111:35" pos:end="111:35">p</name> <operator pos:start="111:37" pos:end="111:37">&lt;</operator> <name pos:start="111:39" pos:end="111:40">c0</name></expr>;</condition> <incr pos:start="111:43" pos:end="111:45"><expr pos:start="111:43" pos:end="111:45"><name pos:start="111:43" pos:end="111:43">p</name><operator pos:start="111:44" pos:end="111:45">++</operator></expr></incr>)</control> <block pos:start="111:48" pos:end="117:17">{<block_content pos:start="113:21" pos:end="115:43">

                    <expr_stmt pos:start="113:21" pos:end="113:61"><expr pos:start="113:21" pos:end="113:60"><name pos:start="113:21" pos:end="113:26">target</name> <operator pos:start="113:28" pos:end="113:28">=</operator> <name pos:start="113:30" pos:end="113:31">d2</name> <operator pos:start="113:33" pos:end="113:33">+</operator> <name pos:start="113:35" pos:end="113:35">x</name> <operator pos:start="113:37" pos:end="113:37">+</operator> <name pos:start="113:39" pos:end="113:56">d2_signed_linesize</name> <operator pos:start="113:58" pos:end="113:58">*</operator> <name pos:start="113:60" pos:end="113:60">p</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="115:21" pos:end="115:43"><expr pos:start="115:21" pos:end="115:42"><call pos:start="115:21" pos:end="115:42"><name pos:start="115:21" pos:end="115:26">update</name><argument_list pos:start="115:27" pos:end="115:42">(<argument pos:start="115:28" pos:end="115:33"><expr pos:start="115:28" pos:end="115:33"><name pos:start="115:28" pos:end="115:33">target</name></expr></argument>, <argument pos:start="115:36" pos:end="115:38"><expr pos:start="115:36" pos:end="115:38"><name pos:start="115:36" pos:end="115:38">max</name></expr></argument>, <argument pos:start="115:41" pos:end="115:41"><expr pos:start="115:41" pos:end="115:41"><literal type="number" pos:start="115:41" pos:end="115:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <for pos:start="121:17" pos:end="127:17">for <control pos:start="121:21" pos:end="121:50">(<init pos:start="121:22" pos:end="121:37"><expr pos:start="121:22" pos:end="121:36"><name pos:start="121:22" pos:end="121:22">p</name> <operator pos:start="121:24" pos:end="121:24">=</operator> <name pos:start="121:26" pos:end="121:27">c0</name> <operator pos:start="121:29" pos:end="121:29">+</operator> <name pos:start="121:31" pos:end="121:32">c2</name> <operator pos:start="121:34" pos:end="121:34">-</operator> <literal type="number" pos:start="121:36" pos:end="121:36">1</literal></expr>;</init> <condition pos:start="121:39" pos:end="121:45"><expr pos:start="121:39" pos:end="121:44"><name pos:start="121:39" pos:end="121:39">p</name> <operator pos:start="121:41" pos:end="121:41">&gt;</operator> <name pos:start="121:43" pos:end="121:44">c0</name></expr>;</condition> <incr pos:start="121:47" pos:end="121:49"><expr pos:start="121:47" pos:end="121:49"><name pos:start="121:47" pos:end="121:47">p</name><operator pos:start="121:48" pos:end="121:49">--</operator></expr></incr>)</control> <block pos:start="121:52" pos:end="127:17">{<block_content pos:start="123:21" pos:end="125:43">

                    <expr_stmt pos:start="123:21" pos:end="123:61"><expr pos:start="123:21" pos:end="123:60"><name pos:start="123:21" pos:end="123:26">target</name> <operator pos:start="123:28" pos:end="123:28">=</operator> <name pos:start="123:30" pos:end="123:31">d2</name> <operator pos:start="123:33" pos:end="123:33">+</operator> <name pos:start="123:35" pos:end="123:35">x</name> <operator pos:start="123:37" pos:end="123:37">+</operator> <name pos:start="123:39" pos:end="123:56">d2_signed_linesize</name> <operator pos:start="123:58" pos:end="123:58">*</operator> <name pos:start="123:60" pos:end="123:60">p</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="125:21" pos:end="125:43"><expr pos:start="125:21" pos:end="125:42"><call pos:start="125:21" pos:end="125:42"><name pos:start="125:21" pos:end="125:26">update</name><argument_list pos:start="125:27" pos:end="125:42">(<argument pos:start="125:28" pos:end="125:33"><expr pos:start="125:28" pos:end="125:33"><name pos:start="125:28" pos:end="125:33">target</name></expr></argument>, <argument pos:start="125:36" pos:end="125:38"><expr pos:start="125:36" pos:end="125:38"><name pos:start="125:36" pos:end="125:38">max</name></expr></argument>, <argument pos:start="125:41" pos:end="125:41"><expr pos:start="125:41" pos:end="125:41"><literal type="number" pos:start="125:41" pos:end="125:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <expr_stmt pos:start="131:17" pos:end="131:39"><expr pos:start="131:17" pos:end="131:38"><name pos:start="131:17" pos:end="131:23">c0_data</name> <operator pos:start="131:25" pos:end="131:26">+=</operator> <name pos:start="131:28" pos:end="131:38">c0_linesize</name></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:39"><expr pos:start="133:17" pos:end="133:38"><name pos:start="133:17" pos:end="133:23">c1_data</name> <operator pos:start="133:25" pos:end="133:26">+=</operator> <name pos:start="133:28" pos:end="133:38">c1_linesize</name></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:39"><expr pos:start="135:17" pos:end="135:38"><name pos:start="135:17" pos:end="135:23">c2_data</name> <operator pos:start="135:25" pos:end="135:26">+=</operator> <name pos:start="135:28" pos:end="135:38">c2_linesize</name></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:39"><expr pos:start="137:17" pos:end="137:38"><name pos:start="137:17" pos:end="137:23">d0_data</name> <operator pos:start="137:25" pos:end="137:26">+=</operator> <name pos:start="137:28" pos:end="137:38">d0_linesize</name></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:39"><expr pos:start="139:17" pos:end="139:38"><name pos:start="139:17" pos:end="139:23">d1_data</name> <operator pos:start="139:25" pos:end="139:26">+=</operator> <name pos:start="139:28" pos:end="139:38">d1_linesize</name></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:39"><expr pos:start="141:17" pos:end="141:38"><name pos:start="141:17" pos:end="141:23">d2_data</name> <operator pos:start="141:25" pos:end="141:26">+=</operator> <name pos:start="141:28" pos:end="141:38">d2_linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="147:7" pos:end="293:5">else <block pos:start="147:12" pos:end="293:5">{<block_content pos:start="149:9" pos:end="291:9">

        <decl_stmt pos:start="149:9" pos:end="149:49"><decl pos:start="149:9" pos:end="149:48"><type pos:start="149:9" pos:end="149:23"><specifier pos:start="149:9" pos:end="149:13">const</specifier> <name pos:start="149:15" pos:end="149:21">uint8_t</name> <modifier pos:start="149:23" pos:end="149:23">*</modifier></type><name pos:start="149:24" pos:end="149:30">c0_data</name> <init pos:start="149:32" pos:end="149:48">= <expr pos:start="149:34" pos:end="149:48"><name pos:start="149:34" pos:end="149:48"><name pos:start="149:34" pos:end="149:35">in</name><operator pos:start="149:36" pos:end="149:37">-&gt;</operator><name pos:start="149:38" pos:end="149:41">data</name><index pos:start="149:42" pos:end="149:48">[<expr pos:start="149:43" pos:end="149:47"><name pos:start="149:43" pos:end="149:47">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="151:9" pos:end="151:66"><decl pos:start="151:9" pos:end="151:65"><type pos:start="151:9" pos:end="151:23"><specifier pos:start="151:9" pos:end="151:13">const</specifier> <name pos:start="151:15" pos:end="151:21">uint8_t</name> <modifier pos:start="151:23" pos:end="151:23">*</modifier></type><name pos:start="151:24" pos:end="151:30">c1_data</name> <init pos:start="151:32" pos:end="151:65">= <expr pos:start="151:34" pos:end="151:65"><name pos:start="151:34" pos:end="151:65"><name pos:start="151:34" pos:end="151:35">in</name><operator pos:start="151:36" pos:end="151:37">-&gt;</operator><name pos:start="151:38" pos:end="151:41">data</name><index pos:start="151:42" pos:end="151:65">[<expr pos:start="151:43" pos:end="151:64"><operator pos:start="151:43" pos:end="151:43">(</operator><name pos:start="151:44" pos:end="151:48">plane</name> <operator pos:start="151:50" pos:end="151:50">+</operator> <literal type="number" pos:start="151:52" pos:end="151:52">1</literal><operator pos:start="151:53" pos:end="151:53">)</operator> <operator pos:start="151:55" pos:end="151:55">%</operator> <name pos:start="151:57" pos:end="151:64"><name pos:start="151:57" pos:end="151:57">s</name><operator pos:start="151:58" pos:end="151:59">-&gt;</operator><name pos:start="151:60" pos:end="151:64">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="153:9" pos:end="153:66"><decl pos:start="153:9" pos:end="153:65"><type pos:start="153:9" pos:end="153:23"><specifier pos:start="153:9" pos:end="153:13">const</specifier> <name pos:start="153:15" pos:end="153:21">uint8_t</name> <modifier pos:start="153:23" pos:end="153:23">*</modifier></type><name pos:start="153:24" pos:end="153:30">c2_data</name> <init pos:start="153:32" pos:end="153:65">= <expr pos:start="153:34" pos:end="153:65"><name pos:start="153:34" pos:end="153:65"><name pos:start="153:34" pos:end="153:35">in</name><operator pos:start="153:36" pos:end="153:37">-&gt;</operator><name pos:start="153:38" pos:end="153:41">data</name><index pos:start="153:42" pos:end="153:65">[<expr pos:start="153:43" pos:end="153:64"><operator pos:start="153:43" pos:end="153:43">(</operator><name pos:start="153:44" pos:end="153:48">plane</name> <operator pos:start="153:50" pos:end="153:50">+</operator> <literal type="number" pos:start="153:52" pos:end="153:52">2</literal><operator pos:start="153:53" pos:end="153:53">)</operator> <operator pos:start="153:55" pos:end="153:55">%</operator> <name pos:start="153:57" pos:end="153:64"><name pos:start="153:57" pos:end="153:57">s</name><operator pos:start="153:58" pos:end="153:59">-&gt;</operator><name pos:start="153:60" pos:end="153:64">ncomp</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="155:9" pos:end="155:53"><decl pos:start="155:9" pos:end="155:52"><type pos:start="155:9" pos:end="155:17"><name pos:start="155:9" pos:end="155:15">uint8_t</name> <modifier pos:start="155:17" pos:end="155:17">*</modifier></type><name pos:start="155:18" pos:end="155:24">d0_data</name> <init pos:start="155:26" pos:end="155:52">= <expr pos:start="155:28" pos:end="155:52"><name pos:start="155:28" pos:end="155:43"><name pos:start="155:28" pos:end="155:30">out</name><operator pos:start="155:31" pos:end="155:32">-&gt;</operator><name pos:start="155:33" pos:end="155:36">data</name><index pos:start="155:37" pos:end="155:43">[<expr pos:start="155:38" pos:end="155:42"><name pos:start="155:38" pos:end="155:42">plane</name></expr>]</index></name> <operator pos:start="155:45" pos:end="155:45">+</operator> <name pos:start="155:47" pos:end="155:52">offset</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="157:9" pos:end="157:70"><decl pos:start="157:9" pos:end="157:69"><type pos:start="157:9" pos:end="157:17"><name pos:start="157:9" pos:end="157:15">uint8_t</name> <modifier pos:start="157:17" pos:end="157:17">*</modifier></type><name pos:start="157:18" pos:end="157:24">d1_data</name> <init pos:start="157:26" pos:end="157:69">= <expr pos:start="157:28" pos:end="157:69"><name pos:start="157:28" pos:end="157:60"><name pos:start="157:28" pos:end="157:30">out</name><operator pos:start="157:31" pos:end="157:32">-&gt;</operator><name pos:start="157:33" pos:end="157:36">data</name><index pos:start="157:37" pos:end="157:60">[<expr pos:start="157:38" pos:end="157:59"><operator pos:start="157:38" pos:end="157:38">(</operator><name pos:start="157:39" pos:end="157:43">plane</name> <operator pos:start="157:45" pos:end="157:45">+</operator> <literal type="number" pos:start="157:47" pos:end="157:47">1</literal><operator pos:start="157:48" pos:end="157:48">)</operator> <operator pos:start="157:50" pos:end="157:50">%</operator> <name pos:start="157:52" pos:end="157:59"><name pos:start="157:52" pos:end="157:52">s</name><operator pos:start="157:53" pos:end="157:54">-&gt;</operator><name pos:start="157:55" pos:end="157:59">ncomp</name></name></expr>]</index></name> <operator pos:start="157:62" pos:end="157:62">+</operator> <name pos:start="157:64" pos:end="157:69">offset</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="159:9" pos:end="159:70"><decl pos:start="159:9" pos:end="159:69"><type pos:start="159:9" pos:end="159:17"><name pos:start="159:9" pos:end="159:15">uint8_t</name> <modifier pos:start="159:17" pos:end="159:17">*</modifier></type><name pos:start="159:18" pos:end="159:24">d2_data</name> <init pos:start="159:26" pos:end="159:69">= <expr pos:start="159:28" pos:end="159:69"><name pos:start="159:28" pos:end="159:60"><name pos:start="159:28" pos:end="159:30">out</name><operator pos:start="159:31" pos:end="159:32">-&gt;</operator><name pos:start="159:33" pos:end="159:36">data</name><index pos:start="159:37" pos:end="159:60">[<expr pos:start="159:38" pos:end="159:59"><operator pos:start="159:38" pos:end="159:38">(</operator><name pos:start="159:39" pos:end="159:43">plane</name> <operator pos:start="159:45" pos:end="159:45">+</operator> <literal type="number" pos:start="159:47" pos:end="159:47">2</literal><operator pos:start="159:48" pos:end="159:48">)</operator> <operator pos:start="159:50" pos:end="159:50">%</operator> <name pos:start="159:52" pos:end="159:59"><name pos:start="159:52" pos:end="159:52">s</name><operator pos:start="159:53" pos:end="159:54">-&gt;</operator><name pos:start="159:55" pos:end="159:59">ncomp</name></name></expr>]</index></name> <operator pos:start="159:62" pos:end="159:62">+</operator> <name pos:start="159:64" pos:end="159:69">offset</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="163:9" pos:end="171:9"><if pos:start="163:9" pos:end="171:9">if <condition pos:start="163:12" pos:end="163:19">(<expr pos:start="163:13" pos:end="163:18"><name pos:start="163:13" pos:end="163:18">mirror</name></expr>)</condition> <block pos:start="163:21" pos:end="171:9">{<block_content pos:start="165:13" pos:end="169:35">

            <expr_stmt pos:start="165:13" pos:end="165:35"><expr pos:start="165:13" pos:end="165:34"><name pos:start="165:13" pos:end="165:19">d0_data</name> <operator pos:start="165:21" pos:end="165:22">+=</operator> <name pos:start="165:24" pos:end="165:30"><name pos:start="165:24" pos:end="165:24">s</name><operator pos:start="165:25" pos:end="165:26">-&gt;</operator><name pos:start="165:27" pos:end="165:30">size</name></name> <operator pos:start="165:32" pos:end="165:32">-</operator> <literal type="number" pos:start="165:34" pos:end="165:34">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:35"><expr pos:start="167:13" pos:end="167:34"><name pos:start="167:13" pos:end="167:19">d1_data</name> <operator pos:start="167:21" pos:end="167:22">+=</operator> <name pos:start="167:24" pos:end="167:30"><name pos:start="167:24" pos:end="167:24">s</name><operator pos:start="167:25" pos:end="167:26">-&gt;</operator><name pos:start="167:27" pos:end="167:30">size</name></name> <operator pos:start="167:32" pos:end="167:32">-</operator> <literal type="number" pos:start="167:34" pos:end="167:34">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:35"><expr pos:start="169:13" pos:end="169:34"><name pos:start="169:13" pos:end="169:19">d2_data</name> <operator pos:start="169:21" pos:end="169:22">+=</operator> <name pos:start="169:24" pos:end="169:30"><name pos:start="169:24" pos:end="169:24">s</name><operator pos:start="169:25" pos:end="169:26">-&gt;</operator><name pos:start="169:27" pos:end="169:30">size</name></name> <operator pos:start="169:32" pos:end="169:32">-</operator> <literal type="number" pos:start="169:34" pos:end="169:34">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="175:9" pos:end="291:9">for <control pos:start="175:13" pos:end="175:35">(<init pos:start="175:14" pos:end="175:19"><expr pos:start="175:14" pos:end="175:18"><name pos:start="175:14" pos:end="175:14">y</name> <operator pos:start="175:16" pos:end="175:16">=</operator> <literal type="number" pos:start="175:18" pos:end="175:18">0</literal></expr>;</init> <condition pos:start="175:21" pos:end="175:30"><expr pos:start="175:21" pos:end="175:29"><name pos:start="175:21" pos:end="175:21">y</name> <operator pos:start="175:23" pos:end="175:23">&lt;</operator> <name pos:start="175:25" pos:end="175:29">src_h</name></expr>;</condition> <incr pos:start="175:32" pos:end="175:34"><expr pos:start="175:32" pos:end="175:34"><name pos:start="175:32" pos:end="175:32">y</name><operator pos:start="175:33" pos:end="175:34">++</operator></expr></incr>)</control> <block pos:start="175:37" pos:end="291:9">{<block_content pos:start="177:13" pos:end="289:35">

            <for pos:start="177:13" pos:end="275:13">for <control pos:start="177:17" pos:end="177:39">(<init pos:start="177:18" pos:end="177:23"><expr pos:start="177:18" pos:end="177:22"><name pos:start="177:18" pos:end="177:18">x</name> <operator pos:start="177:20" pos:end="177:20">=</operator> <literal type="number" pos:start="177:22" pos:end="177:22">0</literal></expr>;</init> <condition pos:start="177:25" pos:end="177:34"><expr pos:start="177:25" pos:end="177:33"><name pos:start="177:25" pos:end="177:25">x</name> <operator pos:start="177:27" pos:end="177:27">&lt;</operator> <name pos:start="177:29" pos:end="177:33">src_w</name></expr>;</condition> <incr pos:start="177:36" pos:end="177:38"><expr pos:start="177:36" pos:end="177:38"><name pos:start="177:36" pos:end="177:36">x</name><operator pos:start="177:37" pos:end="177:38">++</operator></expr></incr>)</control> <block pos:start="177:41" pos:end="275:13">{<block_content pos:start="179:17" pos:end="273:17">

                <decl_stmt pos:start="179:17" pos:end="179:48"><decl pos:start="179:17" pos:end="179:47"><type pos:start="179:17" pos:end="179:25"><specifier pos:start="179:17" pos:end="179:21">const</specifier> <name pos:start="179:23" pos:end="179:25">int</name></type> <name pos:start="179:27" pos:end="179:28">c0</name> <init pos:start="179:30" pos:end="179:47">= <expr pos:start="179:32" pos:end="179:47"><name pos:start="179:32" pos:end="179:41"><name pos:start="179:32" pos:end="179:38">c0_data</name><index pos:start="179:39" pos:end="179:41">[<expr pos:start="179:40" pos:end="179:40"><name pos:start="179:40" pos:end="179:40">x</name></expr>]</index></name> <operator pos:start="179:43" pos:end="179:43">+</operator> <literal type="number" pos:start="179:45" pos:end="179:47">128</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="181:17" pos:end="181:48"><decl pos:start="181:17" pos:end="181:47"><type pos:start="181:17" pos:end="181:25"><specifier pos:start="181:17" pos:end="181:21">const</specifier> <name pos:start="181:23" pos:end="181:25">int</name></type> <name pos:start="181:27" pos:end="181:28">c1</name> <init pos:start="181:30" pos:end="181:47">= <expr pos:start="181:32" pos:end="181:47"><name pos:start="181:32" pos:end="181:41"><name pos:start="181:32" pos:end="181:38">c1_data</name><index pos:start="181:39" pos:end="181:41">[<expr pos:start="181:40" pos:end="181:40"><name pos:start="181:40" pos:end="181:40">x</name></expr>]</index></name> <operator pos:start="181:43" pos:end="181:43">-</operator> <literal type="number" pos:start="181:45" pos:end="181:47">128</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="183:17" pos:end="183:48"><decl pos:start="183:17" pos:end="183:47"><type pos:start="183:17" pos:end="183:25"><specifier pos:start="183:17" pos:end="183:21">const</specifier> <name pos:start="183:23" pos:end="183:25">int</name></type> <name pos:start="183:27" pos:end="183:28">c2</name> <init pos:start="183:30" pos:end="183:47">= <expr pos:start="183:32" pos:end="183:47"><name pos:start="183:32" pos:end="183:41"><name pos:start="183:32" pos:end="183:38">c2_data</name><index pos:start="183:39" pos:end="183:41">[<expr pos:start="183:40" pos:end="183:40"><name pos:start="183:40" pos:end="183:40">x</name></expr>]</index></name> <operator pos:start="183:43" pos:end="183:43">-</operator> <literal type="number" pos:start="183:45" pos:end="183:47">128</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="185:17" pos:end="185:32"><decl pos:start="185:17" pos:end="185:31"><type pos:start="185:17" pos:end="185:25"><name pos:start="185:17" pos:end="185:23">uint8_t</name> <modifier pos:start="185:25" pos:end="185:25">*</modifier></type><name pos:start="185:26" pos:end="185:31">target</name></decl>;</decl_stmt>

                <decl_stmt pos:start="187:17" pos:end="187:22"><decl pos:start="187:17" pos:end="187:21"><type pos:start="187:17" pos:end="187:19"><name pos:start="187:17" pos:end="187:19">int</name></type> <name pos:start="187:21" pos:end="187:21">p</name></decl>;</decl_stmt>



                <if_stmt pos:start="191:17" pos:end="197:42"><if pos:start="191:17" pos:end="193:42">if <condition pos:start="191:20" pos:end="191:27">(<expr pos:start="191:21" pos:end="191:26"><name pos:start="191:21" pos:end="191:26">mirror</name></expr>)</condition><block type="pseudo" pos:start="193:21" pos:end="193:42"><block_content pos:start="193:21" pos:end="193:42">

                    <expr_stmt pos:start="193:21" pos:end="193:42"><expr pos:start="193:21" pos:end="193:41"><name pos:start="193:21" pos:end="193:26">target</name> <operator pos:start="193:28" pos:end="193:28">=</operator> <name pos:start="193:30" pos:end="193:36">d0_data</name> <operator pos:start="193:38" pos:end="193:38">-</operator> <name pos:start="193:40" pos:end="193:41">c0</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="195:17" pos:end="197:42">else<block type="pseudo" pos:start="197:21" pos:end="197:42"><block_content pos:start="197:21" pos:end="197:42">

                    <expr_stmt pos:start="197:21" pos:end="197:42"><expr pos:start="197:21" pos:end="197:41"><name pos:start="197:21" pos:end="197:26">target</name> <operator pos:start="197:28" pos:end="197:28">=</operator> <name pos:start="197:30" pos:end="197:36">d0_data</name> <operator pos:start="197:38" pos:end="197:38">+</operator> <name pos:start="197:40" pos:end="197:41">c0</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="201:17" pos:end="201:47"><expr pos:start="201:17" pos:end="201:46"><call pos:start="201:17" pos:end="201:46"><name pos:start="201:17" pos:end="201:22">update</name><argument_list pos:start="201:23" pos:end="201:46">(<argument pos:start="201:24" pos:end="201:29"><expr pos:start="201:24" pos:end="201:29"><name pos:start="201:24" pos:end="201:29">target</name></expr></argument>, <argument pos:start="201:32" pos:end="201:34"><expr pos:start="201:32" pos:end="201:34"><name pos:start="201:32" pos:end="201:34">max</name></expr></argument>, <argument pos:start="201:37" pos:end="201:45"><expr pos:start="201:37" pos:end="201:45"><name pos:start="201:37" pos:end="201:45">intensity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <for pos:start="205:17" pos:end="219:17">for <control pos:start="205:21" pos:end="205:46">(<init pos:start="205:22" pos:end="205:33"><expr pos:start="205:22" pos:end="205:32"><name pos:start="205:22" pos:end="205:22">p</name> <operator pos:start="205:24" pos:end="205:24">=</operator> <name pos:start="205:26" pos:end="205:27">c0</name> <operator pos:start="205:29" pos:end="205:29">+</operator> <name pos:start="205:31" pos:end="205:32">c1</name></expr>;</init> <condition pos:start="205:35" pos:end="205:41"><expr pos:start="205:35" pos:end="205:40"><name pos:start="205:35" pos:end="205:35">p</name> <operator pos:start="205:37" pos:end="205:37">&lt;</operator> <name pos:start="205:39" pos:end="205:40">c0</name></expr>;</condition> <incr pos:start="205:43" pos:end="205:45"><expr pos:start="205:43" pos:end="205:45"><name pos:start="205:43" pos:end="205:43">p</name><operator pos:start="205:44" pos:end="205:45">++</operator></expr></incr>)</control> <block pos:start="205:48" pos:end="219:17">{<block_content pos:start="207:21" pos:end="217:43">

                    <if_stmt pos:start="207:21" pos:end="213:45"><if pos:start="207:21" pos:end="209:45">if <condition pos:start="207:24" pos:end="207:31">(<expr pos:start="207:25" pos:end="207:30"><name pos:start="207:25" pos:end="207:30">mirror</name></expr>)</condition><block type="pseudo" pos:start="209:25" pos:end="209:45"><block_content pos:start="209:25" pos:end="209:45">

                        <expr_stmt pos:start="209:25" pos:end="209:45"><expr pos:start="209:25" pos:end="209:44"><name pos:start="209:25" pos:end="209:30">target</name> <operator pos:start="209:32" pos:end="209:32">=</operator> <name pos:start="209:34" pos:end="209:40">d1_data</name> <operator pos:start="209:42" pos:end="209:42">-</operator> <name pos:start="209:44" pos:end="209:44">p</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="211:21" pos:end="213:45">else<block type="pseudo" pos:start="213:25" pos:end="213:45"><block_content pos:start="213:25" pos:end="213:45">

                        <expr_stmt pos:start="213:25" pos:end="213:45"><expr pos:start="213:25" pos:end="213:44"><name pos:start="213:25" pos:end="213:30">target</name> <operator pos:start="213:32" pos:end="213:32">=</operator> <name pos:start="213:34" pos:end="213:40">d1_data</name> <operator pos:start="213:42" pos:end="213:42">+</operator> <name pos:start="213:44" pos:end="213:44">p</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="217:21" pos:end="217:43"><expr pos:start="217:21" pos:end="217:42"><call pos:start="217:21" pos:end="217:42"><name pos:start="217:21" pos:end="217:26">update</name><argument_list pos:start="217:27" pos:end="217:42">(<argument pos:start="217:28" pos:end="217:33"><expr pos:start="217:28" pos:end="217:33"><name pos:start="217:28" pos:end="217:33">target</name></expr></argument>, <argument pos:start="217:36" pos:end="217:38"><expr pos:start="217:36" pos:end="217:38"><name pos:start="217:36" pos:end="217:38">max</name></expr></argument>, <argument pos:start="217:41" pos:end="217:41"><expr pos:start="217:41" pos:end="217:41"><literal type="number" pos:start="217:41" pos:end="217:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <for pos:start="223:17" pos:end="237:17">for <control pos:start="223:21" pos:end="223:50">(<init pos:start="223:22" pos:end="223:32"><expr pos:start="223:22" pos:end="223:31"><name pos:start="223:22" pos:end="223:22">p</name> <operator pos:start="223:24" pos:end="223:24">=</operator> <name pos:start="223:26" pos:end="223:27">c0</name> <operator pos:start="223:29" pos:end="223:29">+</operator> <literal type="number" pos:start="223:31" pos:end="223:31">1</literal></expr>;</init> <condition pos:start="223:34" pos:end="223:45"><expr pos:start="223:34" pos:end="223:44"><name pos:start="223:34" pos:end="223:34">p</name> <operator pos:start="223:36" pos:end="223:36">&lt;</operator> <name pos:start="223:38" pos:end="223:39">c0</name> <operator pos:start="223:41" pos:end="223:41">+</operator> <name pos:start="223:43" pos:end="223:44">c1</name></expr>;</condition> <incr pos:start="223:47" pos:end="223:49"><expr pos:start="223:47" pos:end="223:49"><name pos:start="223:47" pos:end="223:47">p</name><operator pos:start="223:48" pos:end="223:49">++</operator></expr></incr>)</control> <block pos:start="223:52" pos:end="237:17">{<block_content pos:start="225:21" pos:end="235:43">

                    <if_stmt pos:start="225:21" pos:end="231:45"><if pos:start="225:21" pos:end="227:45">if <condition pos:start="225:24" pos:end="225:31">(<expr pos:start="225:25" pos:end="225:30"><name pos:start="225:25" pos:end="225:30">mirror</name></expr>)</condition><block type="pseudo" pos:start="227:25" pos:end="227:45"><block_content pos:start="227:25" pos:end="227:45">

                        <expr_stmt pos:start="227:25" pos:end="227:45"><expr pos:start="227:25" pos:end="227:44"><name pos:start="227:25" pos:end="227:30">target</name> <operator pos:start="227:32" pos:end="227:32">=</operator> <name pos:start="227:34" pos:end="227:40">d1_data</name> <operator pos:start="227:42" pos:end="227:42">-</operator> <name pos:start="227:44" pos:end="227:44">p</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="229:21" pos:end="231:45">else<block type="pseudo" pos:start="231:25" pos:end="231:45"><block_content pos:start="231:25" pos:end="231:45">

                        <expr_stmt pos:start="231:25" pos:end="231:45"><expr pos:start="231:25" pos:end="231:44"><name pos:start="231:25" pos:end="231:30">target</name> <operator pos:start="231:32" pos:end="231:32">=</operator> <name pos:start="231:34" pos:end="231:40">d1_data</name> <operator pos:start="231:42" pos:end="231:42">+</operator> <name pos:start="231:44" pos:end="231:44">p</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="235:21" pos:end="235:43"><expr pos:start="235:21" pos:end="235:42"><call pos:start="235:21" pos:end="235:42"><name pos:start="235:21" pos:end="235:26">update</name><argument_list pos:start="235:27" pos:end="235:42">(<argument pos:start="235:28" pos:end="235:33"><expr pos:start="235:28" pos:end="235:33"><name pos:start="235:28" pos:end="235:33">target</name></expr></argument>, <argument pos:start="235:36" pos:end="235:38"><expr pos:start="235:36" pos:end="235:38"><name pos:start="235:36" pos:end="235:38">max</name></expr></argument>, <argument pos:start="235:41" pos:end="235:41"><expr pos:start="235:41" pos:end="235:41"><literal type="number" pos:start="235:41" pos:end="235:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <for pos:start="241:17" pos:end="255:17">for <control pos:start="241:21" pos:end="241:46">(<init pos:start="241:22" pos:end="241:33"><expr pos:start="241:22" pos:end="241:32"><name pos:start="241:22" pos:end="241:22">p</name> <operator pos:start="241:24" pos:end="241:24">=</operator> <name pos:start="241:26" pos:end="241:27">c0</name> <operator pos:start="241:29" pos:end="241:29">+</operator> <name pos:start="241:31" pos:end="241:32">c2</name></expr>;</init> <condition pos:start="241:35" pos:end="241:41"><expr pos:start="241:35" pos:end="241:40"><name pos:start="241:35" pos:end="241:35">p</name> <operator pos:start="241:37" pos:end="241:37">&lt;</operator> <name pos:start="241:39" pos:end="241:40">c0</name></expr>;</condition> <incr pos:start="241:43" pos:end="241:45"><expr pos:start="241:43" pos:end="241:45"><name pos:start="241:43" pos:end="241:43">p</name><operator pos:start="241:44" pos:end="241:45">++</operator></expr></incr>)</control> <block pos:start="241:48" pos:end="255:17">{<block_content pos:start="243:21" pos:end="253:43">

                    <if_stmt pos:start="243:21" pos:end="249:45"><if pos:start="243:21" pos:end="245:45">if <condition pos:start="243:24" pos:end="243:31">(<expr pos:start="243:25" pos:end="243:30"><name pos:start="243:25" pos:end="243:30">mirror</name></expr>)</condition><block type="pseudo" pos:start="245:25" pos:end="245:45"><block_content pos:start="245:25" pos:end="245:45">

                        <expr_stmt pos:start="245:25" pos:end="245:45"><expr pos:start="245:25" pos:end="245:44"><name pos:start="245:25" pos:end="245:30">target</name> <operator pos:start="245:32" pos:end="245:32">=</operator> <name pos:start="245:34" pos:end="245:40">d2_data</name> <operator pos:start="245:42" pos:end="245:42">-</operator> <name pos:start="245:44" pos:end="245:44">p</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="247:21" pos:end="249:45">else<block type="pseudo" pos:start="249:25" pos:end="249:45"><block_content pos:start="249:25" pos:end="249:45">

                        <expr_stmt pos:start="249:25" pos:end="249:45"><expr pos:start="249:25" pos:end="249:44"><name pos:start="249:25" pos:end="249:30">target</name> <operator pos:start="249:32" pos:end="249:32">=</operator> <name pos:start="249:34" pos:end="249:40">d2_data</name> <operator pos:start="249:42" pos:end="249:42">+</operator> <name pos:start="249:44" pos:end="249:44">p</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="253:21" pos:end="253:43"><expr pos:start="253:21" pos:end="253:42"><call pos:start="253:21" pos:end="253:42"><name pos:start="253:21" pos:end="253:26">update</name><argument_list pos:start="253:27" pos:end="253:42">(<argument pos:start="253:28" pos:end="253:33"><expr pos:start="253:28" pos:end="253:33"><name pos:start="253:28" pos:end="253:33">target</name></expr></argument>, <argument pos:start="253:36" pos:end="253:38"><expr pos:start="253:36" pos:end="253:38"><name pos:start="253:36" pos:end="253:38">max</name></expr></argument>, <argument pos:start="253:41" pos:end="253:41"><expr pos:start="253:41" pos:end="253:41"><literal type="number" pos:start="253:41" pos:end="253:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <for pos:start="259:17" pos:end="273:17">for <control pos:start="259:21" pos:end="259:50">(<init pos:start="259:22" pos:end="259:32"><expr pos:start="259:22" pos:end="259:31"><name pos:start="259:22" pos:end="259:22">p</name> <operator pos:start="259:24" pos:end="259:24">=</operator> <name pos:start="259:26" pos:end="259:27">c0</name> <operator pos:start="259:29" pos:end="259:29">+</operator> <literal type="number" pos:start="259:31" pos:end="259:31">1</literal></expr>;</init> <condition pos:start="259:34" pos:end="259:45"><expr pos:start="259:34" pos:end="259:44"><name pos:start="259:34" pos:end="259:34">p</name> <operator pos:start="259:36" pos:end="259:36">&lt;</operator> <name pos:start="259:38" pos:end="259:39">c0</name> <operator pos:start="259:41" pos:end="259:41">+</operator> <name pos:start="259:43" pos:end="259:44">c2</name></expr>;</condition> <incr pos:start="259:47" pos:end="259:49"><expr pos:start="259:47" pos:end="259:49"><name pos:start="259:47" pos:end="259:47">p</name><operator pos:start="259:48" pos:end="259:49">++</operator></expr></incr>)</control> <block pos:start="259:52" pos:end="273:17">{<block_content pos:start="261:21" pos:end="271:43">

                    <if_stmt pos:start="261:21" pos:end="267:45"><if pos:start="261:21" pos:end="263:45">if <condition pos:start="261:24" pos:end="261:31">(<expr pos:start="261:25" pos:end="261:30"><name pos:start="261:25" pos:end="261:30">mirror</name></expr>)</condition><block type="pseudo" pos:start="263:25" pos:end="263:45"><block_content pos:start="263:25" pos:end="263:45">

                        <expr_stmt pos:start="263:25" pos:end="263:45"><expr pos:start="263:25" pos:end="263:44"><name pos:start="263:25" pos:end="263:30">target</name> <operator pos:start="263:32" pos:end="263:32">=</operator> <name pos:start="263:34" pos:end="263:40">d2_data</name> <operator pos:start="263:42" pos:end="263:42">-</operator> <name pos:start="263:44" pos:end="263:44">p</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="265:21" pos:end="267:45">else<block type="pseudo" pos:start="267:25" pos:end="267:45"><block_content pos:start="267:25" pos:end="267:45">

                        <expr_stmt pos:start="267:25" pos:end="267:45"><expr pos:start="267:25" pos:end="267:44"><name pos:start="267:25" pos:end="267:30">target</name> <operator pos:start="267:32" pos:end="267:32">=</operator> <name pos:start="267:34" pos:end="267:40">d2_data</name> <operator pos:start="267:42" pos:end="267:42">+</operator> <name pos:start="267:44" pos:end="267:44">p</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="271:21" pos:end="271:43"><expr pos:start="271:21" pos:end="271:42"><call pos:start="271:21" pos:end="271:42"><name pos:start="271:21" pos:end="271:26">update</name><argument_list pos:start="271:27" pos:end="271:42">(<argument pos:start="271:28" pos:end="271:33"><expr pos:start="271:28" pos:end="271:33"><name pos:start="271:28" pos:end="271:33">target</name></expr></argument>, <argument pos:start="271:36" pos:end="271:38"><expr pos:start="271:36" pos:end="271:38"><name pos:start="271:36" pos:end="271:38">max</name></expr></argument>, <argument pos:start="271:41" pos:end="271:41"><expr pos:start="271:41" pos:end="271:41"><literal type="number" pos:start="271:41" pos:end="271:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>



            <expr_stmt pos:start="279:13" pos:end="279:35"><expr pos:start="279:13" pos:end="279:34"><name pos:start="279:13" pos:end="279:19">c0_data</name> <operator pos:start="279:21" pos:end="279:22">+=</operator> <name pos:start="279:24" pos:end="279:34">c0_linesize</name></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:35"><expr pos:start="281:13" pos:end="281:34"><name pos:start="281:13" pos:end="281:19">c1_data</name> <operator pos:start="281:21" pos:end="281:22">+=</operator> <name pos:start="281:24" pos:end="281:34">c1_linesize</name></expr>;</expr_stmt>

            <expr_stmt pos:start="283:13" pos:end="283:35"><expr pos:start="283:13" pos:end="283:34"><name pos:start="283:13" pos:end="283:19">c2_data</name> <operator pos:start="283:21" pos:end="283:22">+=</operator> <name pos:start="283:24" pos:end="283:34">c2_linesize</name></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:35"><expr pos:start="285:13" pos:end="285:34"><name pos:start="285:13" pos:end="285:19">d0_data</name> <operator pos:start="285:21" pos:end="285:22">+=</operator> <name pos:start="285:24" pos:end="285:34">d0_linesize</name></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:35"><expr pos:start="287:13" pos:end="287:34"><name pos:start="287:13" pos:end="287:19">d1_data</name> <operator pos:start="287:21" pos:end="287:22">+=</operator> <name pos:start="287:24" pos:end="287:34">d1_linesize</name></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:35"><expr pos:start="289:13" pos:end="289:34"><name pos:start="289:13" pos:end="289:19">d2_data</name> <operator pos:start="289:21" pos:end="289:22">+=</operator> <name pos:start="289:24" pos:end="289:34">d2_linesize</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="297:5" pos:end="297:52"><expr pos:start="297:5" pos:end="297:51"><call pos:start="297:5" pos:end="297:51"><name pos:start="297:5" pos:end="297:12">envelope</name><argument_list pos:start="297:13" pos:end="297:51">(<argument pos:start="297:14" pos:end="297:14"><expr pos:start="297:14" pos:end="297:14"><name pos:start="297:14" pos:end="297:14">s</name></expr></argument>, <argument pos:start="297:17" pos:end="297:19"><expr pos:start="297:17" pos:end="297:19"><name pos:start="297:17" pos:end="297:19">out</name></expr></argument>, <argument pos:start="297:22" pos:end="297:26"><expr pos:start="297:22" pos:end="297:26"><name pos:start="297:22" pos:end="297:26">plane</name></expr></argument>, <argument pos:start="297:29" pos:end="297:50"><expr pos:start="297:29" pos:end="297:50"><operator pos:start="297:29" pos:end="297:29">(</operator><name pos:start="297:30" pos:end="297:34">plane</name> <operator pos:start="297:36" pos:end="297:36">+</operator> <literal type="number" pos:start="297:38" pos:end="297:38">0</literal><operator pos:start="297:39" pos:end="297:39">)</operator> <operator pos:start="297:41" pos:end="297:41">%</operator> <name pos:start="297:43" pos:end="297:50"><name pos:start="297:43" pos:end="297:43">s</name><operator pos:start="297:44" pos:end="297:45">-&gt;</operator><name pos:start="297:46" pos:end="297:50">ncomp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="299:5" pos:end="299:52"><expr pos:start="299:5" pos:end="299:51"><call pos:start="299:5" pos:end="299:51"><name pos:start="299:5" pos:end="299:12">envelope</name><argument_list pos:start="299:13" pos:end="299:51">(<argument pos:start="299:14" pos:end="299:14"><expr pos:start="299:14" pos:end="299:14"><name pos:start="299:14" pos:end="299:14">s</name></expr></argument>, <argument pos:start="299:17" pos:end="299:19"><expr pos:start="299:17" pos:end="299:19"><name pos:start="299:17" pos:end="299:19">out</name></expr></argument>, <argument pos:start="299:22" pos:end="299:26"><expr pos:start="299:22" pos:end="299:26"><name pos:start="299:22" pos:end="299:26">plane</name></expr></argument>, <argument pos:start="299:29" pos:end="299:50"><expr pos:start="299:29" pos:end="299:50"><operator pos:start="299:29" pos:end="299:29">(</operator><name pos:start="299:30" pos:end="299:34">plane</name> <operator pos:start="299:36" pos:end="299:36">+</operator> <literal type="number" pos:start="299:38" pos:end="299:38">1</literal><operator pos:start="299:39" pos:end="299:39">)</operator> <operator pos:start="299:41" pos:end="299:41">%</operator> <name pos:start="299:43" pos:end="299:50"><name pos:start="299:43" pos:end="299:43">s</name><operator pos:start="299:44" pos:end="299:45">-&gt;</operator><name pos:start="299:46" pos:end="299:50">ncomp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="301:5" pos:end="301:52"><expr pos:start="301:5" pos:end="301:51"><call pos:start="301:5" pos:end="301:51"><name pos:start="301:5" pos:end="301:12">envelope</name><argument_list pos:start="301:13" pos:end="301:51">(<argument pos:start="301:14" pos:end="301:14"><expr pos:start="301:14" pos:end="301:14"><name pos:start="301:14" pos:end="301:14">s</name></expr></argument>, <argument pos:start="301:17" pos:end="301:19"><expr pos:start="301:17" pos:end="301:19"><name pos:start="301:17" pos:end="301:19">out</name></expr></argument>, <argument pos:start="301:22" pos:end="301:26"><expr pos:start="301:22" pos:end="301:26"><name pos:start="301:22" pos:end="301:26">plane</name></expr></argument>, <argument pos:start="301:29" pos:end="301:50"><expr pos:start="301:29" pos:end="301:50"><operator pos:start="301:29" pos:end="301:29">(</operator><name pos:start="301:30" pos:end="301:34">plane</name> <operator pos:start="301:36" pos:end="301:36">+</operator> <literal type="number" pos:start="301:38" pos:end="301:38">2</literal><operator pos:start="301:39" pos:end="301:39">)</operator> <operator pos:start="301:41" pos:end="301:41">%</operator> <name pos:start="301:43" pos:end="301:50"><name pos:start="301:43" pos:end="301:43">s</name><operator pos:start="301:44" pos:end="301:45">-&gt;</operator><name pos:start="301:46" pos:end="301:50">ncomp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
