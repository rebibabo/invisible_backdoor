<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18684.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">block_save_iterate</name><parameter_list pos:start="1:30" pos:end="1:56">(<parameter pos:start="1:31" pos:end="1:41"><decl pos:start="1:31" pos:end="1:41"><type pos:start="1:31" pos:end="1:41"><name pos:start="1:31" pos:end="1:38">QEMUFile</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">f</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:47">void</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:55">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="11:68"><expr pos:start="9:5" pos:end="11:67"><call pos:start="9:5" pos:end="11:67"><name pos:start="9:5" pos:end="9:11">DPRINTF</name><argument_list pos:start="9:12" pos:end="11:67">(<argument pos:start="9:13" pos:end="9:67"><expr pos:start="9:13" pos:end="9:67"><literal type="string" pos:start="9:13" pos:end="9:67">"Enter save live iterate submitted %d transferred %d\n"</literal></expr></argument>,

            <argument pos:start="11:13" pos:end="11:37"><expr pos:start="11:13" pos:end="11:37"><name pos:start="11:13" pos:end="11:37"><name pos:start="11:13" pos:end="11:27">block_mig_state</name><operator pos:start="11:28" pos:end="11:28">.</operator><name pos:start="11:29" pos:end="11:37">submitted</name></name></expr></argument>, <argument pos:start="11:40" pos:end="11:66"><expr pos:start="11:40" pos:end="11:66"><name pos:start="11:40" pos:end="11:66"><name pos:start="11:40" pos:end="11:54">block_mig_state</name><operator pos:start="11:55" pos:end="11:55">.</operator><name pos:start="11:56" pos:end="11:66">transferred</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:23"><name pos:start="15:11" pos:end="15:20">flush_blks</name><argument_list pos:start="15:21" pos:end="15:23">(<argument pos:start="15:22" pos:end="15:22"><expr pos:start="15:22" pos:end="15:22"><name pos:start="15:22" pos:end="15:22">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:12">(<expr pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">ret</name></expr>)</condition> <block pos:start="17:14" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:19">

        <expr_stmt pos:start="19:9" pos:end="19:26"><expr pos:start="19:9" pos:end="19:25"><call pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:23">blk_mig_cleanup</name><argument_list pos:start="19:24" pos:end="19:25">()</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><call pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:30">blk_mig_reset_dirty_cursor</name><argument_list pos:start="27:31" pos:end="27:32">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:38">/* control the rate of transfer */</comment>

    <while pos:start="33:5" pos:end="65:5">while <condition pos:start="33:11" pos:end="37:39">(<expr pos:start="33:12" pos:end="37:38"><operator pos:start="33:12" pos:end="33:12">(</operator><name pos:start="33:13" pos:end="33:37"><name pos:start="33:13" pos:end="33:27">block_mig_state</name><operator pos:start="33:28" pos:end="33:28">.</operator><name pos:start="33:29" pos:end="33:37">submitted</name></name> <operator pos:start="33:39" pos:end="33:39">+</operator>

            <name pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:27">block_mig_state</name><operator pos:start="35:28" pos:end="35:28">.</operator><name pos:start="35:29" pos:end="35:37">read_done</name></name><operator pos:start="35:38" pos:end="35:38">)</operator> <operator pos:start="35:40" pos:end="35:40">*</operator> <name pos:start="35:42" pos:end="35:51">BLOCK_SIZE</name> <operator pos:start="35:53" pos:end="35:53">&lt;</operator>

           <call pos:start="37:12" pos:end="37:38"><name pos:start="37:12" pos:end="37:35">qemu_file_get_rate_limit</name><argument_list pos:start="37:36" pos:end="37:38">(<argument pos:start="37:37" pos:end="37:37"><expr pos:start="37:37" pos:end="37:37"><name pos:start="37:37" pos:end="37:37">f</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:41" pos:end="65:5">{<block_content pos:start="39:9" pos:end="63:9">

        <if_stmt pos:start="39:9" pos:end="63:9"><if pos:start="39:9" pos:end="51:9">if <condition pos:start="39:12" pos:end="39:48">(<expr pos:start="39:13" pos:end="39:47"><name pos:start="39:13" pos:end="39:42"><name pos:start="39:13" pos:end="39:27">block_mig_state</name><operator pos:start="39:28" pos:end="39:28">.</operator><name pos:start="39:29" pos:end="39:42">bulk_completed</name></name> <operator pos:start="39:44" pos:end="39:45">==</operator> <literal type="number" pos:start="39:47" pos:end="39:47">0</literal></expr>)</condition> <block pos:start="39:50" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:13">

            <comment type="block" pos:start="41:13" pos:end="41:45">/* first finish the bulk phase */</comment>

            <if_stmt pos:start="43:13" pos:end="49:13"><if pos:start="43:13" pos:end="49:13">if <condition pos:start="43:16" pos:end="43:50">(<expr pos:start="43:17" pos:end="43:49"><call pos:start="43:17" pos:end="43:44"><name pos:start="43:17" pos:end="43:41">blk_mig_save_bulked_block</name><argument_list pos:start="43:42" pos:end="43:44">(<argument pos:start="43:43" pos:end="43:43"><expr pos:start="43:43" pos:end="43:43"><name pos:start="43:43" pos:end="43:43">f</name></expr></argument>)</argument_list></call> <operator pos:start="43:46" pos:end="43:47">==</operator> <literal type="number" pos:start="43:49" pos:end="43:49">0</literal></expr>)</condition> <block pos:start="43:52" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:51">

                <comment type="block" pos:start="45:17" pos:end="45:57">/* finished saving bulk on all devices */</comment>

                <expr_stmt pos:start="47:17" pos:end="47:51"><expr pos:start="47:17" pos:end="47:50"><name pos:start="47:17" pos:end="47:46"><name pos:start="47:17" pos:end="47:31">block_mig_state</name><operator pos:start="47:32" pos:end="47:32">.</operator><name pos:start="47:33" pos:end="47:46">bulk_completed</name></name> <operator pos:start="47:48" pos:end="47:48">=</operator> <literal type="number" pos:start="47:50" pos:end="47:50">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="63:9">else <block pos:start="51:16" pos:end="63:9">{<block_content pos:start="53:13" pos:end="61:13">

            <expr_stmt pos:start="53:13" pos:end="53:49"><expr pos:start="53:13" pos:end="53:48"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="53:48"><name pos:start="53:19" pos:end="53:42">blk_mig_save_dirty_block</name><argument_list pos:start="53:43" pos:end="53:48">(<argument pos:start="53:44" pos:end="53:44"><expr pos:start="53:44" pos:end="53:44"><name pos:start="53:44" pos:end="53:44">f</name></expr></argument>, <argument pos:start="53:47" pos:end="53:47"><expr pos:start="53:47" pos:end="53:47"><literal type="number" pos:start="53:47" pos:end="53:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="61:13"><if pos:start="55:13" pos:end="61:13">if <condition pos:start="55:16" pos:end="55:25">(<expr pos:start="55:17" pos:end="55:24"><name pos:start="55:17" pos:end="55:19">ret</name> <operator pos:start="55:21" pos:end="55:22">!=</operator> <literal type="number" pos:start="55:24" pos:end="55:24">0</literal></expr>)</condition> <block pos:start="55:27" pos:end="61:13">{<block_content pos:start="59:17" pos:end="59:22">

                <comment type="block" pos:start="57:17" pos:end="57:42">/* no more dirty blocks */</comment>

                <break pos:start="59:17" pos:end="59:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:16">(<expr pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">&lt;</operator> <literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr>)</condition> <block pos:start="67:18" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:19">

        <expr_stmt pos:start="69:9" pos:end="69:26"><expr pos:start="69:9" pos:end="69:25"><call pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:23">blk_mig_cleanup</name><argument_list pos:start="69:24" pos:end="69:25">()</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:19">return <expr pos:start="71:16" pos:end="71:18"><name pos:start="71:16" pos:end="71:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:24"><expr pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:7">ret</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="77:23"><name pos:start="77:11" pos:end="77:20">flush_blks</name><argument_list pos:start="77:21" pos:end="77:23">(<argument pos:start="77:22" pos:end="77:22"><expr pos:start="77:22" pos:end="77:22"><name pos:start="77:22" pos:end="77:22">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:12">(<expr pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">ret</name></expr>)</condition> <block pos:start="79:14" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:19">

        <expr_stmt pos:start="81:9" pos:end="81:26"><expr pos:start="81:9" pos:end="81:25"><call pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:23">blk_mig_cleanup</name><argument_list pos:start="81:24" pos:end="81:25">()</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:19">return <expr pos:start="83:16" pos:end="83:18"><name pos:start="83:16" pos:end="83:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:39"><expr pos:start="89:5" pos:end="89:38"><call pos:start="89:5" pos:end="89:38"><name pos:start="89:5" pos:end="89:17">qemu_put_be64</name><argument_list pos:start="89:18" pos:end="89:38">(<argument pos:start="89:19" pos:end="89:19"><expr pos:start="89:19" pos:end="89:19"><name pos:start="89:19" pos:end="89:19">f</name></expr></argument>, <argument pos:start="89:22" pos:end="89:37"><expr pos:start="89:22" pos:end="89:37"><name pos:start="89:22" pos:end="89:37">BLK_MIG_FLAG_EOS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
