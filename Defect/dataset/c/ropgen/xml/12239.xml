<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12239.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">wavpack_decode_frame</name><parameter_list pos:start="1:32" pos:end="5:44">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:36">AVPacket</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="87:1">{<block_content pos:start="9:5" pos:end="85:49">

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">WavpackContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:40">= <expr pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:29">avctx</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">buf</name> <init pos:start="11:24" pos:end="11:36">= <expr pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:30">avpkt</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">buf_size</name> <init pos:start="13:18" pos:end="13:30">= <expr pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:24">avpkt</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">frame_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:19">samplecount</name> <init pos:start="17:21" pos:end="17:23">= <expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:12">block</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:19">samples_left</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:16">ch_offset</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if<condition pos:start="29:7" pos:end="29:19">(<expr pos:start="29:8" pos:end="29:18"><name pos:start="29:8" pos:end="29:18"><name pos:start="29:8" pos:end="29:8">s</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:18">mkv_mode</name></name></expr>)</condition><block pos:start="29:20" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:44">

        <expr_stmt pos:start="31:9" pos:end="31:34"><expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:18">samples</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <call pos:start="31:22" pos:end="31:33"><name pos:start="31:22" pos:end="31:28">AV_RL32</name><argument_list pos:start="31:29" pos:end="31:33">(<argument pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><name pos:start="31:30" pos:end="31:32">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="31:36" pos:end="31:44"><expr pos:start="31:36" pos:end="31:43"><name pos:start="31:36" pos:end="31:38">buf</name> <operator pos:start="31:40" pos:end="31:41">+=</operator> <literal type="number" pos:start="31:43" pos:end="31:43">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <while pos:start="35:5" pos:end="79:5">while<condition pos:start="35:10" pos:end="35:23">(<expr pos:start="35:11" pos:end="35:22"><name pos:start="35:11" pos:end="35:18">buf_size</name> <operator pos:start="35:20" pos:end="35:20">&gt;</operator> <literal type="number" pos:start="35:22" pos:end="35:22">0</literal></expr>)</condition><block pos:start="35:24" pos:end="79:5">{<block_content pos:start="37:9" pos:end="77:50">

        <if_stmt pos:start="37:9" pos:end="57:9"><if pos:start="37:9" pos:end="41:9">if<condition pos:start="37:11" pos:end="37:28">(<expr pos:start="37:12" pos:end="37:27"><operator pos:start="37:12" pos:end="37:12">!</operator><name pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:27">multichannel</name></name></expr>)</condition><block pos:start="37:29" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:34">

            <expr_stmt pos:start="39:13" pos:end="39:34"><expr pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:22">frame_size</name> <operator pos:start="39:24" pos:end="39:24">=</operator> <name pos:start="39:26" pos:end="39:33">buf_size</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="41:10" pos:end="57:9">else<block pos:start="41:14" pos:end="57:9">{<block_content pos:start="43:13" pos:end="55:13">

            <if_stmt pos:start="43:13" pos:end="55:13"><if pos:start="43:13" pos:end="47:13">if<condition pos:start="43:15" pos:end="43:28">(<expr pos:start="43:16" pos:end="43:27"><operator pos:start="43:16" pos:end="43:16">!</operator><name pos:start="43:17" pos:end="43:27"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:27">mkv_mode</name></name></expr>)</condition><block pos:start="43:29" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:72">

                <expr_stmt pos:start="45:17" pos:end="45:47"><expr pos:start="45:17" pos:end="45:46"><name pos:start="45:17" pos:end="45:26">frame_size</name> <operator pos:start="45:28" pos:end="45:28">=</operator> <call pos:start="45:30" pos:end="45:41"><name pos:start="45:30" pos:end="45:36">AV_RL32</name><argument_list pos:start="45:37" pos:end="45:41">(<argument pos:start="45:38" pos:end="45:40"><expr pos:start="45:38" pos:end="45:40"><name pos:start="45:38" pos:end="45:40">buf</name></expr></argument>)</argument_list></call> <operator pos:start="45:43" pos:end="45:43">-</operator> <literal type="number" pos:start="45:45" pos:end="45:46">12</literal></expr>;</expr_stmt> <expr_stmt pos:start="45:49" pos:end="45:57"><expr pos:start="45:49" pos:end="45:56"><name pos:start="45:49" pos:end="45:51">buf</name> <operator pos:start="45:53" pos:end="45:54">+=</operator> <literal type="number" pos:start="45:56" pos:end="45:56">4</literal></expr>;</expr_stmt> <expr_stmt pos:start="45:59" pos:end="45:72"><expr pos:start="45:59" pos:end="45:71"><name pos:start="45:59" pos:end="45:66">buf_size</name> <operator pos:start="45:68" pos:end="45:69">-=</operator> <literal type="number" pos:start="45:71" pos:end="45:71">4</literal></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="47:14" pos:end="55:13">else<block pos:start="47:18" pos:end="55:13">{<block_content pos:start="49:17" pos:end="53:51">

                <if_stmt pos:start="49:17" pos:end="51:26"><if pos:start="49:17" pos:end="51:26">if<condition pos:start="49:19" pos:end="49:33">(<expr pos:start="49:20" pos:end="49:32"><name pos:start="49:20" pos:end="49:27">buf_size</name> <operator pos:start="49:29" pos:end="49:29">&lt;</operator> <literal type="number" pos:start="49:31" pos:end="49:32">12</literal></expr>)</condition><block type="pseudo" pos:start="51:21" pos:end="51:26"><block_content pos:start="51:21" pos:end="51:26"> <comment type="line" pos:start="49:35" pos:end="49:82">//MKV files can have zero flags after last block</comment>

                    <break pos:start="51:21" pos:end="51:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:51"><expr pos:start="53:17" pos:end="53:50"><name pos:start="53:17" pos:end="53:26">frame_size</name> <operator pos:start="53:28" pos:end="53:28">=</operator> <call pos:start="53:30" pos:end="53:45"><name pos:start="53:30" pos:end="53:36">AV_RL32</name><argument_list pos:start="53:37" pos:end="53:45">(<argument pos:start="53:38" pos:end="53:44"><expr pos:start="53:38" pos:end="53:44"><name pos:start="53:38" pos:end="53:40">buf</name> <operator pos:start="53:42" pos:end="53:42">+</operator> <literal type="number" pos:start="53:44" pos:end="53:44">8</literal></expr></argument>)</argument_list></call> <operator pos:start="53:47" pos:end="53:47">+</operator> <literal type="number" pos:start="53:49" pos:end="53:50">12</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="67:9">if<condition pos:start="59:11" pos:end="59:51">(<expr pos:start="59:12" pos:end="59:50"><name pos:start="59:12" pos:end="59:41"><name pos:start="59:12" pos:end="59:21">frame_size</name> <argument_list type="generic" pos:start="59:23" pos:end="59:41">&lt; <argument pos:start="59:25" pos:end="59:39"><expr pos:start="59:25" pos:end="59:39"><literal type="number" pos:start="59:25" pos:end="59:25">0</literal> <operator pos:start="59:27" pos:end="59:28">||</operator> <name pos:start="59:30" pos:end="59:39">frame_size</name></expr></argument> &gt;</argument_list></name> <name pos:start="59:43" pos:end="59:50">buf_size</name></expr>)</condition><block pos:start="59:52" pos:end="67:9">{<block_content pos:start="61:13" pos:end="65:22">

            <expr_stmt pos:start="61:13" pos:end="63:51"><expr pos:start="61:13" pos:end="63:50"><call pos:start="61:13" pos:end="63:50"><name pos:start="61:13" pos:end="61:18">av_log</name><argument_list pos:start="61:19" pos:end="63:50">(<argument pos:start="61:20" pos:end="61:24"><expr pos:start="61:20" pos:end="61:24"><name pos:start="61:20" pos:end="61:24">avctx</name></expr></argument>, <argument pos:start="61:27" pos:end="61:38"><expr pos:start="61:27" pos:end="61:38"><name pos:start="61:27" pos:end="61:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:41" pos:end="61:97"><expr pos:start="61:41" pos:end="61:97"><literal type="string" pos:start="61:41" pos:end="61:97">"Block %d has invalid size (size %d vs. %d bytes left)\n"</literal></expr></argument>,

                   <argument pos:start="63:20" pos:end="63:27"><expr pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:20">s</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:27">block</name></name></expr></argument>, <argument pos:start="63:30" pos:end="63:39"><expr pos:start="63:30" pos:end="63:39"><name pos:start="63:30" pos:end="63:39">frame_size</name></expr></argument>, <argument pos:start="63:42" pos:end="63:49"><expr pos:start="63:42" pos:end="63:49"><name pos:start="63:42" pos:end="63:49">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:22">return <expr pos:start="65:20" pos:end="65:21"><operator pos:start="65:20" pos:end="65:20">-</operator><literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="73:22"><if pos:start="69:9" pos:end="73:22">if<condition pos:start="69:11" pos:end="71:80">(<expr pos:start="69:12" pos:end="71:79"><operator pos:start="69:12" pos:end="69:12">(</operator><name pos:start="69:13" pos:end="69:23">samplecount</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <call pos:start="69:27" pos:end="71:74"><name pos:start="69:27" pos:end="69:46">wavpack_decode_block</name><argument_list pos:start="69:47" pos:end="71:74">(<argument pos:start="69:48" pos:end="69:52"><expr pos:start="69:48" pos:end="69:52"><name pos:start="69:48" pos:end="69:52">avctx</name></expr></argument>, <argument pos:start="69:55" pos:end="69:62"><expr pos:start="69:55" pos:end="69:62"><name pos:start="69:55" pos:end="69:62"><name pos:start="69:55" pos:end="69:55">s</name><operator pos:start="69:56" pos:end="69:57">-&gt;</operator><name pos:start="69:58" pos:end="69:62">block</name></name></expr></argument>, <argument pos:start="69:65" pos:end="69:68"><expr pos:start="69:65" pos:end="69:68"><name pos:start="69:65" pos:end="69:68">data</name></expr></argument>,

                                               <argument pos:start="71:48" pos:end="71:56"><expr pos:start="71:48" pos:end="71:56"><name pos:start="71:48" pos:end="71:56">data_size</name></expr></argument>, <argument pos:start="71:59" pos:end="71:61"><expr pos:start="71:59" pos:end="71:61"><name pos:start="71:59" pos:end="71:61">buf</name></expr></argument>, <argument pos:start="71:64" pos:end="71:73"><expr pos:start="71:64" pos:end="71:73"><name pos:start="71:64" pos:end="71:73">frame_size</name></expr></argument>)</argument_list></call><operator pos:start="71:75" pos:end="71:75">)</operator> <operator pos:start="71:77" pos:end="71:77">&lt;</operator> <literal type="number" pos:start="71:79" pos:end="71:79">0</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:22"><block_content pos:start="73:13" pos:end="73:22">

            <return pos:start="73:13" pos:end="73:22">return <expr pos:start="73:20" pos:end="73:21"><operator pos:start="73:20" pos:end="73:20">-</operator><literal type="number" pos:start="73:21" pos:end="73:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:19"><expr pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:16">block</name></name><operator pos:start="75:17" pos:end="75:18">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:26"><expr pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:11">buf</name> <operator pos:start="77:13" pos:end="77:14">+=</operator> <name pos:start="77:16" pos:end="77:25">frame_size</name></expr>;</expr_stmt> <expr_stmt pos:start="77:28" pos:end="77:50"><expr pos:start="77:28" pos:end="77:49"><name pos:start="77:28" pos:end="77:35">buf_size</name> <operator pos:start="77:37" pos:end="77:38">-=</operator> <name pos:start="77:40" pos:end="77:49">frame_size</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="81:5" pos:end="81:47"><expr pos:start="81:5" pos:end="81:46"><operator pos:start="81:5" pos:end="81:5">*</operator><name pos:start="81:6" pos:end="81:14">data_size</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <name pos:start="81:18" pos:end="81:28">samplecount</name> <operator pos:start="81:30" pos:end="81:30">*</operator> <name pos:start="81:32" pos:end="81:46"><name pos:start="81:32" pos:end="81:36">avctx</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:46">channels</name></name></expr>;</expr_stmt>



    <return pos:start="85:5" pos:end="85:49">return <expr pos:start="85:12" pos:end="85:48"><ternary pos:start="85:12" pos:end="85:48"><condition pos:start="85:12" pos:end="85:32"><expr pos:start="85:12" pos:end="85:30"><name pos:start="85:12" pos:end="85:26"><name pos:start="85:12" pos:end="85:12">s</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:26">samples_left</name></name> <operator pos:start="85:28" pos:end="85:28">&gt;</operator> <literal type="number" pos:start="85:30" pos:end="85:30">0</literal></expr> ?</condition><then pos:start="85:34" pos:end="85:34"> <expr pos:start="85:34" pos:end="85:34"><literal type="number" pos:start="85:34" pos:end="85:34">0</literal></expr> </then><else pos:start="85:36" pos:end="85:48">: <expr pos:start="85:38" pos:end="85:48"><name pos:start="85:38" pos:end="85:48"><name pos:start="85:38" pos:end="85:42">avpkt</name><operator pos:start="85:43" pos:end="85:44">-&gt;</operator><name pos:start="85:45" pos:end="85:48">size</name></name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
