<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17200.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:42">estimate_timings_from_bit_rate</name><parameter_list pos:start="1:43" pos:end="1:63">(<parameter pos:start="1:44" pos:end="1:62"><decl pos:start="1:44" pos:end="1:62"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:58">AVFormatContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">ic</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:5">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:20">filesize</name></decl>, <decl pos:start="5:23" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:23" pos:end="5:30">duration</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:51">/* if bit_rate is already set, we believe it */</comment>

    <if_stmt pos:start="15:5" pos:end="41:5"><if pos:start="15:5" pos:end="41:5">if <condition pos:start="15:8" pos:end="15:26">(<expr pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:10">ic</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:20">bit_rate</name></name> <operator pos:start="15:22" pos:end="15:23">&lt;=</operator> <literal type="number" pos:start="15:25" pos:end="15:25">0</literal></expr>)</condition> <block pos:start="15:28" pos:end="41:5">{<block_content pos:start="17:9" pos:end="39:32">

        <decl_stmt pos:start="17:9" pos:end="17:25"><decl pos:start="17:9" pos:end="17:24"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:20">bit_rate</name> <init pos:start="17:22" pos:end="17:24">= <expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="19:9" pos:end="37:9">for<control pos:start="19:12" pos:end="19:37">(<init pos:start="19:13" pos:end="19:16"><expr pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:13">i</name><operator pos:start="19:14" pos:end="19:14">=</operator><literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>;</init><condition pos:start="19:17" pos:end="19:33"><expr pos:start="19:17" pos:end="19:32"><name pos:start="19:17" pos:end="19:17">i</name><operator pos:start="19:18" pos:end="19:18">&lt;</operator><name pos:start="19:19" pos:end="19:32"><name pos:start="19:19" pos:end="19:20">ic</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:32">nb_streams</name></name></expr>;</condition><incr pos:start="19:34" pos:end="19:36"><expr pos:start="19:34" pos:end="19:36"><name pos:start="19:34" pos:end="19:34">i</name><operator pos:start="19:35" pos:end="19:36">++</operator></expr></incr>)</control> <block pos:start="19:39" pos:end="37:9">{<block_content pos:start="21:13" pos:end="35:13">

            <expr_stmt pos:start="21:13" pos:end="21:32"><expr pos:start="21:13" pos:end="21:31"><name pos:start="21:13" pos:end="21:14">st</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:31"><name pos:start="21:18" pos:end="21:19">ic</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:28">streams</name><index pos:start="21:29" pos:end="21:31">[<expr pos:start="21:30" pos:end="21:30"><name pos:start="21:30" pos:end="21:30">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="35:13"><if pos:start="23:13" pos:end="35:13">if <condition pos:start="23:16" pos:end="23:40">(<expr pos:start="23:17" pos:end="23:39"><name pos:start="23:17" pos:end="23:35"><name pos:start="23:17" pos:end="23:18">st</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:25">codec</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:35">bit_rate</name></name> <operator pos:start="23:37" pos:end="23:37">&gt;</operator> <literal type="number" pos:start="23:39" pos:end="23:39">0</literal></expr>)</condition> <block pos:start="23:42" pos:end="35:13">{<block_content pos:start="25:17" pos:end="33:48">

                <if_stmt pos:start="25:17" pos:end="31:17"><if pos:start="25:17" pos:end="31:17">if <condition pos:start="25:20" pos:end="25:61">(<expr pos:start="25:21" pos:end="25:60"><name pos:start="25:21" pos:end="25:27">INT_MAX</name> <operator pos:start="25:29" pos:end="25:29">-</operator> <name pos:start="25:31" pos:end="25:49"><name pos:start="25:31" pos:end="25:32">st</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:39">codec</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:49">bit_rate</name></name> <operator pos:start="25:51" pos:end="25:51">&gt;</operator> <name pos:start="25:53" pos:end="25:60">bit_rate</name></expr>)</condition> <block pos:start="25:63" pos:end="31:17">{<block_content pos:start="27:21" pos:end="29:26">

                    <expr_stmt pos:start="27:21" pos:end="27:33"><expr pos:start="27:21" pos:end="27:32"><name pos:start="27:21" pos:end="27:28">bit_rate</name> <operator pos:start="27:30" pos:end="27:30">=</operator> <literal type="number" pos:start="27:32" pos:end="27:32">0</literal></expr>;</expr_stmt>

                    <break pos:start="29:21" pos:end="29:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:48"><expr pos:start="33:17" pos:end="33:47"><name pos:start="33:17" pos:end="33:24">bit_rate</name> <operator pos:start="33:26" pos:end="33:27">+=</operator> <name pos:start="33:29" pos:end="33:47"><name pos:start="33:29" pos:end="33:30">st</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:37">codec</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:47">bit_rate</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="39:9" pos:end="39:32"><expr pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:10">ic</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:20">bit_rate</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:31">bit_rate</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:51">/* if duration is already set, we believe it */</comment>

    <if_stmt pos:start="47:5" pos:end="69:5"><if pos:start="47:5" pos:end="69:5">if <condition pos:start="47:8" pos:end="49:26">(<expr pos:start="47:9" pos:end="49:25"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:10">ic</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:20">duration</name></name> <operator pos:start="47:22" pos:end="47:23">==</operator> <name pos:start="47:25" pos:end="47:38">AV_NOPTS_VALUE</name> <operator pos:start="47:40" pos:end="47:41">&amp;&amp;</operator>

        <name pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:10">ic</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:20">bit_rate</name></name> <operator pos:start="49:22" pos:end="49:23">!=</operator> <literal type="number" pos:start="49:25" pos:end="49:25">0</literal></expr>)</condition> <block pos:start="49:28" pos:end="69:5">{<block_content pos:start="51:9" pos:end="67:9">

        <expr_stmt pos:start="51:9" pos:end="51:50"><expr pos:start="51:9" pos:end="51:49"><name pos:start="51:9" pos:end="51:16">filesize</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <ternary pos:start="51:20" pos:end="51:49"><condition pos:start="51:20" pos:end="51:27"><expr pos:start="51:20" pos:end="51:25"><name pos:start="51:20" pos:end="51:25"><name pos:start="51:20" pos:end="51:21">ic</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:25">pb</name></name></expr> ?</condition><then pos:start="51:29" pos:end="51:45"> <expr pos:start="51:29" pos:end="51:45"><call pos:start="51:29" pos:end="51:45"><name pos:start="51:29" pos:end="51:37">avio_size</name><argument_list pos:start="51:38" pos:end="51:45">(<argument pos:start="51:39" pos:end="51:44"><expr pos:start="51:39" pos:end="51:44"><name pos:start="51:39" pos:end="51:44"><name pos:start="51:39" pos:end="51:40">ic</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:44">pb</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="51:47" pos:end="51:49">: <expr pos:start="51:49" pos:end="51:49"><literal type="number" pos:start="51:49" pos:end="51:49">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="67:9"><if pos:start="53:9" pos:end="67:9">if <condition pos:start="53:12" pos:end="53:25">(<expr pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:20">filesize</name> <operator pos:start="53:22" pos:end="53:22">&gt;</operator> <literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr>)</condition> <block pos:start="53:27" pos:end="67:9">{<block_content pos:start="55:13" pos:end="65:13">

            <for pos:start="55:13" pos:end="65:13">for<control pos:start="55:16" pos:end="55:47">(<init pos:start="55:17" pos:end="55:22"><expr pos:start="55:17" pos:end="55:21"><name pos:start="55:17" pos:end="55:17">i</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <literal type="number" pos:start="55:21" pos:end="55:21">0</literal></expr>;</init> <condition pos:start="55:24" pos:end="55:42"><expr pos:start="55:24" pos:end="55:41"><name pos:start="55:24" pos:end="55:24">i</name> <operator pos:start="55:26" pos:end="55:26">&lt;</operator> <name pos:start="55:28" pos:end="55:41"><name pos:start="55:28" pos:end="55:29">ic</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:41">nb_streams</name></name></expr>;</condition> <incr pos:start="55:44" pos:end="55:46"><expr pos:start="55:44" pos:end="55:46"><name pos:start="55:44" pos:end="55:44">i</name><operator pos:start="55:45" pos:end="55:46">++</operator></expr></incr>)</control> <block pos:start="55:49" pos:end="65:13">{<block_content pos:start="57:17" pos:end="63:44">

                <expr_stmt pos:start="57:17" pos:end="57:36"><expr pos:start="57:17" pos:end="57:35"><name pos:start="57:17" pos:end="57:18">st</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:35"><name pos:start="57:22" pos:end="57:23">ic</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:32">streams</name><index pos:start="57:33" pos:end="57:35">[<expr pos:start="57:34" pos:end="57:34"><name pos:start="57:34" pos:end="57:34">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:109"><expr pos:start="59:17" pos:end="59:108"><name pos:start="59:17" pos:end="59:24">duration</name><operator pos:start="59:25" pos:end="59:25">=</operator> <call pos:start="59:27" pos:end="59:108"><name pos:start="59:27" pos:end="59:36">av_rescale</name><argument_list pos:start="59:37" pos:end="59:108">(<argument pos:start="59:38" pos:end="59:47"><expr pos:start="59:38" pos:end="59:47"><literal type="number" pos:start="59:38" pos:end="59:38">8</literal><operator pos:start="59:39" pos:end="59:39">*</operator><name pos:start="59:40" pos:end="59:47">filesize</name></expr></argument>, <argument pos:start="59:50" pos:end="59:66"><expr pos:start="59:50" pos:end="59:66"><name pos:start="59:50" pos:end="59:66"><name pos:start="59:50" pos:end="59:51">st</name><operator pos:start="59:52" pos:end="59:53">-&gt;</operator><name pos:start="59:54" pos:end="59:62">time_base</name><operator pos:start="59:63" pos:end="59:63">.</operator><name pos:start="59:64" pos:end="59:66">den</name></name></expr></argument>, <argument pos:start="59:69" pos:end="59:107"><expr pos:start="59:69" pos:end="59:107"><name pos:start="59:69" pos:end="59:80"><name pos:start="59:69" pos:end="59:70">ic</name><operator pos:start="59:71" pos:end="59:72">-&gt;</operator><name pos:start="59:73" pos:end="59:80">bit_rate</name></name><operator pos:start="59:81" pos:end="59:81">*</operator><operator pos:start="59:82" pos:end="59:82">(</operator><name pos:start="59:83" pos:end="59:89">int64_t</name><operator pos:start="59:90" pos:end="59:90">)</operator><name pos:start="59:91" pos:end="59:107"><name pos:start="59:91" pos:end="59:92">st</name><operator pos:start="59:93" pos:end="59:94">-&gt;</operator><name pos:start="59:95" pos:end="59:103">time_base</name><operator pos:start="59:104" pos:end="59:104">.</operator><name pos:start="59:105" pos:end="59:107">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="61:17" pos:end="63:44"><if pos:start="61:17" pos:end="63:44">if <condition pos:start="61:20" pos:end="61:51">(<expr pos:start="61:21" pos:end="61:50"><name pos:start="61:21" pos:end="61:32"><name pos:start="61:21" pos:end="61:22">st</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:32">duration</name></name> <operator pos:start="61:34" pos:end="61:35">==</operator> <name pos:start="61:37" pos:end="61:50">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="63:21" pos:end="63:44"><block_content pos:start="63:21" pos:end="63:44">

                    <expr_stmt pos:start="63:21" pos:end="63:44"><expr pos:start="63:21" pos:end="63:43"><name pos:start="63:21" pos:end="63:32"><name pos:start="63:21" pos:end="63:22">st</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:32">duration</name></name> <operator pos:start="63:34" pos:end="63:34">=</operator> <name pos:start="63:36" pos:end="63:43">duration</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
