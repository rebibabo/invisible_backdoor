<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24002.c" pos:tabs="8"><function pos:start="1:1" pos:end="237:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">decode_subframe</name><parameter_list pos:start="1:27" pos:end="3:69">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:40">TAKDecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><name pos:start="1:46" pos:end="1:52">int32_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:61">decoded</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:44"><decl pos:start="3:28" pos:end="3:44"><type pos:start="3:28" pos:end="3:44"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:44">subframe_size</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:68"><decl pos:start="3:47" pos:end="3:68"><type pos:start="3:47" pos:end="3:68"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:68">prev_subframe_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="237:1">{<block_content pos:start="7:5" pos:end="235:13">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">x</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">y</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">i</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">j</name></decl>, <decl pos:start="9:21" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:23">ret</name> <init pos:start="9:25" pos:end="9:27">= <expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:65"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">dshift</name></decl>, <decl pos:start="11:17" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:20">size</name></decl>, <decl pos:start="11:23" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:34">filter_quant</name></decl>, <decl pos:start="11:37" pos:end="11:48"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:37" pos:end="11:48">filter_order</name></decl>, <decl pos:start="11:51" pos:end="11:64"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:51" pos:end="11:64">filter_order16</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:15">tfilter</name><index pos:start="13:16" pos:end="13:31">[<expr pos:start="13:17" pos:end="13:30"><name pos:start="13:17" pos:end="13:30">MAX_PREDICTORS</name></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:58"><if pos:start="17:5" pos:end="19:58">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:22"><name pos:start="17:10" pos:end="17:18">get_bits1</name><argument_list pos:start="17:19" pos:end="17:22">(<argument pos:start="17:20" pos:end="17:21"><expr pos:start="17:20" pos:end="17:21"><name pos:start="17:20" pos:end="17:21">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:58"><block_content pos:start="19:9" pos:end="19:58">

        <return pos:start="19:9" pos:end="19:58">return <expr pos:start="19:16" pos:end="19:57"><call pos:start="19:16" pos:end="19:57"><name pos:start="19:16" pos:end="19:30">decode_residues</name><argument_list pos:start="19:31" pos:end="19:57">(<argument pos:start="19:32" pos:end="19:32"><expr pos:start="19:32" pos:end="19:32"><name pos:start="19:32" pos:end="19:32">s</name></expr></argument>, <argument pos:start="19:35" pos:end="19:41"><expr pos:start="19:35" pos:end="19:41"><name pos:start="19:35" pos:end="19:41">decoded</name></expr></argument>, <argument pos:start="19:44" pos:end="19:56"><expr pos:start="19:44" pos:end="19:56"><name pos:start="19:44" pos:end="19:56">subframe_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:52"><expr pos:start="23:5" pos:end="23:51"><name pos:start="23:5" pos:end="23:16">filter_order</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:51"><name pos:start="23:20" pos:end="23:34">predictor_sizes</name><index pos:start="23:35" pos:end="23:51">[<expr pos:start="23:36" pos:end="23:50"><call pos:start="23:36" pos:end="23:50"><name pos:start="23:36" pos:end="23:43">get_bits</name><argument_list pos:start="23:44" pos:end="23:50">(<argument pos:start="23:45" pos:end="23:46"><expr pos:start="23:45" pos:end="23:46"><name pos:start="23:45" pos:end="23:46">gb</name></expr></argument>, <argument pos:start="23:49" pos:end="23:49"><expr pos:start="23:49" pos:end="23:49"><literal type="number" pos:start="23:49" pos:end="23:49">4</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="75:5"><if pos:start="27:5" pos:end="45:5">if <condition pos:start="27:8" pos:end="27:48">(<expr pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:26">prev_subframe_size</name> <operator pos:start="27:28" pos:end="27:28">&gt;</operator> <literal type="number" pos:start="27:30" pos:end="27:30">0</literal> <operator pos:start="27:32" pos:end="27:33">&amp;&amp;</operator> <call pos:start="27:35" pos:end="27:47"><name pos:start="27:35" pos:end="27:43">get_bits1</name><argument_list pos:start="27:44" pos:end="27:47">(<argument pos:start="27:45" pos:end="27:46"><expr pos:start="27:45" pos:end="27:46"><name pos:start="27:45" pos:end="27:46">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:50" pos:end="45:5">{<block_content pos:start="29:9" pos:end="43:39">

        <if_stmt pos:start="29:9" pos:end="31:39"><if pos:start="29:9" pos:end="31:39">if <condition pos:start="29:12" pos:end="29:46">(<expr pos:start="29:13" pos:end="29:45"><name pos:start="29:13" pos:end="29:24">filter_order</name> <operator pos:start="29:26" pos:end="29:26">&gt;</operator> <name pos:start="29:28" pos:end="29:45">prev_subframe_size</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:39"><block_content pos:start="31:13" pos:end="31:39">

            <return pos:start="31:13" pos:end="31:39">return <expr pos:start="31:20" pos:end="31:38"><name pos:start="31:20" pos:end="31:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:38"><expr pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:15">decoded</name>       <operator pos:start="35:23" pos:end="35:24">-=</operator> <name pos:start="35:26" pos:end="35:37">filter_order</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:21">subframe_size</name> <operator pos:start="37:23" pos:end="37:24">+=</operator> <name pos:start="37:26" pos:end="37:37">filter_order</name></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="43:39"><if pos:start="41:9" pos:end="43:39">if <condition pos:start="41:12" pos:end="41:41">(<expr pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:24">filter_order</name> <operator pos:start="41:26" pos:end="41:26">&gt;</operator> <name pos:start="41:28" pos:end="41:40">subframe_size</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:39"><block_content pos:start="43:13" pos:end="43:39">

            <return pos:start="43:13" pos:end="43:39">return <expr pos:start="43:20" pos:end="43:38"><name pos:start="43:20" pos:end="43:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="75:5">else <block pos:start="45:12" pos:end="75:5">{<block_content pos:start="47:9" pos:end="73:56">

        <decl_stmt pos:start="47:9" pos:end="47:21"><decl pos:start="47:9" pos:end="47:20"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:20">lpc_mode</name></decl>;</decl_stmt>



        <if_stmt pos:start="51:9" pos:end="53:39"><if pos:start="51:9" pos:end="53:39">if <condition pos:start="51:12" pos:end="51:41">(<expr pos:start="51:13" pos:end="51:40"><name pos:start="51:13" pos:end="51:24">filter_order</name> <operator pos:start="51:26" pos:end="51:26">&gt;</operator> <name pos:start="51:28" pos:end="51:40">subframe_size</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:39"><block_content pos:start="53:13" pos:end="53:39">

            <return pos:start="53:13" pos:end="53:39">return <expr pos:start="53:20" pos:end="53:38"><name pos:start="53:20" pos:end="53:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:35"><expr pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:16">lpc_mode</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <call pos:start="57:20" pos:end="57:34"><name pos:start="57:20" pos:end="57:27">get_bits</name><argument_list pos:start="57:28" pos:end="57:34">(<argument pos:start="57:29" pos:end="57:30"><expr pos:start="57:29" pos:end="57:30"><name pos:start="57:29" pos:end="57:30">gb</name></expr></argument>, <argument pos:start="57:33" pos:end="57:33"><expr pos:start="57:33" pos:end="57:33"><literal type="number" pos:start="57:33" pos:end="57:33">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:39"><if pos:start="59:9" pos:end="61:39">if <condition pos:start="59:12" pos:end="59:25">(<expr pos:start="59:13" pos:end="59:24"><name pos:start="59:13" pos:end="59:20">lpc_mode</name> <operator pos:start="59:22" pos:end="59:22">&gt;</operator> <literal type="number" pos:start="59:24" pos:end="59:24">2</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:39"><block_content pos:start="61:13" pos:end="61:39">

            <return pos:start="61:13" pos:end="61:39">return <expr pos:start="61:20" pos:end="61:38"><name pos:start="61:20" pos:end="61:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="65:9" pos:end="67:23"><if pos:start="65:9" pos:end="67:23">if <condition pos:start="65:12" pos:end="65:66">(<expr pos:start="65:13" pos:end="65:65"><operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:16">ret</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <call pos:start="65:20" pos:end="65:60"><name pos:start="65:20" pos:end="65:34">decode_residues</name><argument_list pos:start="65:35" pos:end="65:60">(<argument pos:start="65:36" pos:end="65:36"><expr pos:start="65:36" pos:end="65:36"><name pos:start="65:36" pos:end="65:36">s</name></expr></argument>, <argument pos:start="65:39" pos:end="65:45"><expr pos:start="65:39" pos:end="65:45"><name pos:start="65:39" pos:end="65:45">decoded</name></expr></argument>, <argument pos:start="65:48" pos:end="65:59"><expr pos:start="65:48" pos:end="65:59"><name pos:start="65:48" pos:end="65:59">filter_order</name></expr></argument>)</argument_list></call><operator pos:start="65:61" pos:end="65:61">)</operator> <operator pos:start="65:63" pos:end="65:63">&lt;</operator> <literal type="number" pos:start="65:65" pos:end="65:65">0</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:23"><block_content pos:start="67:13" pos:end="67:23">

            <return pos:start="67:13" pos:end="67:23">return <expr pos:start="67:20" pos:end="67:22"><name pos:start="67:20" pos:end="67:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="71:9" pos:end="73:56"><if pos:start="71:9" pos:end="73:56">if <condition pos:start="71:12" pos:end="71:21">(<expr pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:20">lpc_mode</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:56"><block_content pos:start="73:13" pos:end="73:56">

            <expr_stmt pos:start="73:13" pos:end="73:56"><expr pos:start="73:13" pos:end="73:55"><call pos:start="73:13" pos:end="73:55"><name pos:start="73:13" pos:end="73:22">decode_lpc</name><argument_list pos:start="73:23" pos:end="73:55">(<argument pos:start="73:24" pos:end="73:30"><expr pos:start="73:24" pos:end="73:30"><name pos:start="73:24" pos:end="73:30">decoded</name></expr></argument>, <argument pos:start="73:33" pos:end="73:40"><expr pos:start="73:33" pos:end="73:40"><name pos:start="73:33" pos:end="73:40">lpc_mode</name></expr></argument>, <argument pos:start="73:43" pos:end="73:54"><expr pos:start="73:43" pos:end="73:54"><name pos:start="73:43" pos:end="73:54">filter_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:31"><expr pos:start="79:5" pos:end="79:30"><name pos:start="79:5" pos:end="79:10">dshift</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <call pos:start="79:14" pos:end="79:30"><name pos:start="79:14" pos:end="79:26">get_bits_esc4</name><argument_list pos:start="79:27" pos:end="79:30">(<argument pos:start="79:28" pos:end="79:29"><expr pos:start="79:28" pos:end="79:29"><name pos:start="79:28" pos:end="79:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:31"><expr pos:start="81:5" pos:end="81:30"><name pos:start="81:5" pos:end="81:8">size</name>   <operator pos:start="81:12" pos:end="81:12">=</operator> <call pos:start="81:14" pos:end="81:26"><name pos:start="81:14" pos:end="81:22">get_bits1</name><argument_list pos:start="81:23" pos:end="81:26">(<argument pos:start="81:24" pos:end="81:25"><expr pos:start="81:24" pos:end="81:25"><name pos:start="81:24" pos:end="81:25">gb</name></expr></argument>)</argument_list></call> <operator pos:start="81:28" pos:end="81:28">+</operator> <literal type="number" pos:start="81:30" pos:end="81:30">6</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:22"><expr pos:start="85:5" pos:end="85:21"><name pos:start="85:5" pos:end="85:16">filter_quant</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <literal type="number" pos:start="85:20" pos:end="85:21">10</literal></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:22">(<expr pos:start="87:9" pos:end="87:21"><call pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:17">get_bits1</name><argument_list pos:start="87:18" pos:end="87:21">(<argument pos:start="87:19" pos:end="87:20"><expr pos:start="87:19" pos:end="87:20"><name pos:start="87:19" pos:end="87:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:24" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:39">

        <expr_stmt pos:start="89:9" pos:end="89:44"><expr pos:start="89:9" pos:end="89:43"><name pos:start="89:9" pos:end="89:20">filter_quant</name> <operator pos:start="89:22" pos:end="89:23">-=</operator> <call pos:start="89:25" pos:end="89:39"><name pos:start="89:25" pos:end="89:32">get_bits</name><argument_list pos:start="89:33" pos:end="89:39">(<argument pos:start="89:34" pos:end="89:35"><expr pos:start="89:34" pos:end="89:35"><name pos:start="89:34" pos:end="89:35">gb</name></expr></argument>, <argument pos:start="89:38" pos:end="89:38"><expr pos:start="89:38" pos:end="89:38"><literal type="number" pos:start="89:38" pos:end="89:38">3</literal></expr></argument>)</argument_list></call> <operator pos:start="89:41" pos:end="89:41">+</operator> <literal type="number" pos:start="89:43" pos:end="89:43">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="93:39"><if pos:start="91:9" pos:end="93:39">if <condition pos:start="91:12" pos:end="91:29">(<expr pos:start="91:13" pos:end="91:28"><name pos:start="91:13" pos:end="91:24">filter_quant</name> <operator pos:start="91:26" pos:end="91:26">&lt;</operator> <literal type="number" pos:start="91:28" pos:end="91:28">3</literal></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:39"><block_content pos:start="93:13" pos:end="93:39">

            <return pos:start="93:13" pos:end="93:39">return <expr pos:start="93:20" pos:end="93:38"><name pos:start="93:20" pos:end="93:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:41"><expr pos:start="99:5" pos:end="99:40"><name pos:start="99:5" pos:end="99:20"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:17">predictors</name><index pos:start="99:18" pos:end="99:20">[<expr pos:start="99:19" pos:end="99:19"><literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>]</index></name> <operator pos:start="99:22" pos:end="99:22">=</operator> <call pos:start="99:24" pos:end="99:40"><name pos:start="99:24" pos:end="99:32">get_sbits</name><argument_list pos:start="99:33" pos:end="99:40">(<argument pos:start="99:34" pos:end="99:35"><expr pos:start="99:34" pos:end="99:35"><name pos:start="99:34" pos:end="99:35">gb</name></expr></argument>, <argument pos:start="99:38" pos:end="99:39"><expr pos:start="99:38" pos:end="99:39"><literal type="number" pos:start="99:38" pos:end="99:39">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:41"><expr pos:start="101:5" pos:end="101:40"><name pos:start="101:5" pos:end="101:20"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:17">predictors</name><index pos:start="101:18" pos:end="101:20">[<expr pos:start="101:19" pos:end="101:19"><literal type="number" pos:start="101:19" pos:end="101:19">1</literal></expr>]</index></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <call pos:start="101:24" pos:end="101:40"><name pos:start="101:24" pos:end="101:32">get_sbits</name><argument_list pos:start="101:33" pos:end="101:40">(<argument pos:start="101:34" pos:end="101:35"><expr pos:start="101:34" pos:end="101:35"><name pos:start="101:34" pos:end="101:35">gb</name></expr></argument>, <argument pos:start="101:38" pos:end="101:39"><expr pos:start="101:38" pos:end="101:39"><literal type="number" pos:start="101:38" pos:end="101:39">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:58"><expr pos:start="103:5" pos:end="103:57"><name pos:start="103:5" pos:end="103:20"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:17">predictors</name><index pos:start="103:18" pos:end="103:20">[<expr pos:start="103:19" pos:end="103:19"><literal type="number" pos:start="103:19" pos:end="103:19">2</literal></expr>]</index></name> <operator pos:start="103:22" pos:end="103:22">=</operator> <call pos:start="103:24" pos:end="103:42"><name pos:start="103:24" pos:end="103:32">get_sbits</name><argument_list pos:start="103:33" pos:end="103:42">(<argument pos:start="103:34" pos:end="103:35"><expr pos:start="103:34" pos:end="103:35"><name pos:start="103:34" pos:end="103:35">gb</name></expr></argument>, <argument pos:start="103:38" pos:end="103:41"><expr pos:start="103:38" pos:end="103:41"><name pos:start="103:38" pos:end="103:41">size</name></expr></argument>)</argument_list></call> <operator pos:start="103:44" pos:end="103:45">&lt;&lt;</operator> <operator pos:start="103:47" pos:end="103:47">(</operator><literal type="number" pos:start="103:48" pos:end="103:51">10</literal> <operator pos:start="103:51" pos:end="103:51">-</operator> <name pos:start="103:53" pos:end="103:56">size</name><operator pos:start="103:57" pos:end="103:57">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:58"><expr pos:start="105:5" pos:end="105:57"><name pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:17">predictors</name><index pos:start="105:18" pos:end="105:20">[<expr pos:start="105:19" pos:end="105:19"><literal type="number" pos:start="105:19" pos:end="105:19">3</literal></expr>]</index></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <call pos:start="105:24" pos:end="105:42"><name pos:start="105:24" pos:end="105:32">get_sbits</name><argument_list pos:start="105:33" pos:end="105:42">(<argument pos:start="105:34" pos:end="105:35"><expr pos:start="105:34" pos:end="105:35"><name pos:start="105:34" pos:end="105:35">gb</name></expr></argument>, <argument pos:start="105:38" pos:end="105:41"><expr pos:start="105:38" pos:end="105:41"><name pos:start="105:38" pos:end="105:41">size</name></expr></argument>)</argument_list></call> <operator pos:start="105:44" pos:end="105:45">&lt;&lt;</operator> <operator pos:start="105:47" pos:end="105:47">(</operator><literal type="number" pos:start="105:48" pos:end="105:51">10</literal> <operator pos:start="105:51" pos:end="105:51">-</operator> <name pos:start="105:53" pos:end="105:56">size</name><operator pos:start="105:57" pos:end="105:57">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="123:5"><if pos:start="107:5" pos:end="123:5">if <condition pos:start="107:8" pos:end="107:25">(<expr pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:20">filter_order</name> <operator pos:start="107:22" pos:end="107:22">&gt;</operator> <literal type="number" pos:start="107:24" pos:end="107:24">4</literal></expr>)</condition> <block pos:start="107:27" pos:end="123:5">{<block_content pos:start="109:9" pos:end="121:9">

        <decl_stmt pos:start="109:9" pos:end="109:39"><decl pos:start="109:9" pos:end="109:38"><type pos:start="109:9" pos:end="109:11"><name pos:start="109:9" pos:end="109:11">int</name></type> <name pos:start="109:13" pos:end="109:15">tmp</name> <init pos:start="109:17" pos:end="109:38">= <expr pos:start="109:19" pos:end="109:38"><name pos:start="109:19" pos:end="109:22">size</name> <operator pos:start="109:24" pos:end="109:24">-</operator> <call pos:start="109:26" pos:end="109:38"><name pos:start="109:26" pos:end="109:34">get_bits1</name><argument_list pos:start="109:35" pos:end="109:38">(<argument pos:start="109:36" pos:end="109:37"><expr pos:start="109:36" pos:end="109:37"><name pos:start="109:36" pos:end="109:37">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <for pos:start="113:9" pos:end="121:9">for <control pos:start="113:13" pos:end="113:42">(<init pos:start="113:14" pos:end="113:19"><expr pos:start="113:14" pos:end="113:18"><name pos:start="113:14" pos:end="113:14">i</name> <operator pos:start="113:16" pos:end="113:16">=</operator> <literal type="number" pos:start="113:18" pos:end="113:18">4</literal></expr>;</init> <condition pos:start="113:21" pos:end="113:37"><expr pos:start="113:21" pos:end="113:36"><name pos:start="113:21" pos:end="113:21">i</name> <operator pos:start="113:23" pos:end="113:23">&lt;</operator> <name pos:start="113:25" pos:end="113:36">filter_order</name></expr>;</condition> <incr pos:start="113:39" pos:end="113:41"><expr pos:start="113:39" pos:end="113:41"><name pos:start="113:39" pos:end="113:39">i</name><operator pos:start="113:40" pos:end="113:41">++</operator></expr></incr>)</control> <block pos:start="113:44" pos:end="121:9">{<block_content pos:start="115:13" pos:end="119:63">

            <if_stmt pos:start="115:13" pos:end="117:42"><if pos:start="115:13" pos:end="117:42">if <condition pos:start="115:16" pos:end="115:25">(<expr pos:start="115:17" pos:end="115:24"><operator pos:start="115:17" pos:end="115:17">!</operator><operator pos:start="115:18" pos:end="115:18">(</operator><name pos:start="115:19" pos:end="115:19">i</name> <operator pos:start="115:21" pos:end="115:21">&amp;</operator> <literal type="number" pos:start="115:23" pos:end="115:23">3</literal><operator pos:start="115:24" pos:end="115:24">)</operator></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:42"><block_content pos:start="117:17" pos:end="117:42">

                <expr_stmt pos:start="117:17" pos:end="117:42"><expr pos:start="117:17" pos:end="117:41"><name pos:start="117:17" pos:end="117:17">x</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <name pos:start="117:21" pos:end="117:23">tmp</name> <operator pos:start="117:25" pos:end="117:25">-</operator> <call pos:start="117:27" pos:end="117:41"><name pos:start="117:27" pos:end="117:34">get_bits</name><argument_list pos:start="117:35" pos:end="117:41">(<argument pos:start="117:36" pos:end="117:37"><expr pos:start="117:36" pos:end="117:37"><name pos:start="117:36" pos:end="117:37">gb</name></expr></argument>, <argument pos:start="117:40" pos:end="117:40"><expr pos:start="117:40" pos:end="117:40"><literal type="number" pos:start="117:40" pos:end="117:40">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:63"><expr pos:start="119:13" pos:end="119:62"><name pos:start="119:13" pos:end="119:28"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:25">predictors</name><index pos:start="119:26" pos:end="119:28">[<expr pos:start="119:27" pos:end="119:27"><name pos:start="119:27" pos:end="119:27">i</name></expr>]</index></name> <operator pos:start="119:30" pos:end="119:30">=</operator> <call pos:start="119:32" pos:end="119:47"><name pos:start="119:32" pos:end="119:40">get_sbits</name><argument_list pos:start="119:41" pos:end="119:47">(<argument pos:start="119:42" pos:end="119:43"><expr pos:start="119:42" pos:end="119:43"><name pos:start="119:42" pos:end="119:43">gb</name></expr></argument>, <argument pos:start="119:46" pos:end="119:46"><expr pos:start="119:46" pos:end="119:46"><name pos:start="119:46" pos:end="119:46">x</name></expr></argument>)</argument_list></call> <operator pos:start="119:49" pos:end="119:50">&lt;&lt;</operator> <operator pos:start="119:52" pos:end="119:52">(</operator><literal type="number" pos:start="119:53" pos:end="119:56">10</literal> <operator pos:start="119:56" pos:end="119:56">-</operator> <name pos:start="119:58" pos:end="119:61">size</name><operator pos:start="119:62" pos:end="119:62">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:39"><expr pos:start="127:5" pos:end="127:38"><name pos:start="127:5" pos:end="127:14"><name pos:start="127:5" pos:end="127:11">tfilter</name><index pos:start="127:12" pos:end="127:14">[<expr pos:start="127:13" pos:end="127:13"><literal type="number" pos:start="127:13" pos:end="127:13">0</literal></expr>]</index></name> <operator pos:start="127:16" pos:end="127:16">=</operator> <name pos:start="127:18" pos:end="127:33"><name pos:start="127:18" pos:end="127:18">s</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:30">predictors</name><index pos:start="127:31" pos:end="127:33">[<expr pos:start="127:32" pos:end="127:32"><literal type="number" pos:start="127:32" pos:end="127:32">0</literal></expr>]</index></name> <operator pos:start="127:35" pos:end="127:36">&lt;&lt;</operator> <literal type="number" pos:start="127:38" pos:end="127:38">6</literal></expr>;</expr_stmt>

    <for pos:start="129:5" pos:end="153:5">for <control pos:start="129:9" pos:end="129:38">(<init pos:start="129:10" pos:end="129:15"><expr pos:start="129:10" pos:end="129:14"><name pos:start="129:10" pos:end="129:10">i</name> <operator pos:start="129:12" pos:end="129:12">=</operator> <literal type="number" pos:start="129:14" pos:end="129:14">1</literal></expr>;</init> <condition pos:start="129:17" pos:end="129:33"><expr pos:start="129:17" pos:end="129:32"><name pos:start="129:17" pos:end="129:17">i</name> <operator pos:start="129:19" pos:end="129:19">&lt;</operator> <name pos:start="129:21" pos:end="129:32">filter_order</name></expr>;</condition> <incr pos:start="129:35" pos:end="129:37"><expr pos:start="129:35" pos:end="129:37"><name pos:start="129:35" pos:end="129:35">i</name><operator pos:start="129:36" pos:end="129:37">++</operator></expr></incr>)</control> <block pos:start="129:40" pos:end="153:5">{<block_content pos:start="131:9" pos:end="151:43">

        <decl_stmt pos:start="131:9" pos:end="131:34"><decl pos:start="131:9" pos:end="131:33"><type pos:start="131:9" pos:end="131:17"><name pos:start="131:9" pos:end="131:15">int32_t</name> <modifier pos:start="131:17" pos:end="131:17">*</modifier></type><name pos:start="131:18" pos:end="131:19">p1</name> <init pos:start="131:21" pos:end="131:33">= <expr pos:start="131:23" pos:end="131:33"><operator pos:start="131:23" pos:end="131:23">&amp;</operator><name pos:start="131:24" pos:end="131:33"><name pos:start="131:24" pos:end="131:30">tfilter</name><index pos:start="131:31" pos:end="131:33">[<expr pos:start="131:32" pos:end="131:32"><literal type="number" pos:start="131:32" pos:end="131:32">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="133:9" pos:end="133:38"><decl pos:start="133:9" pos:end="133:37"><type pos:start="133:9" pos:end="133:17"><name pos:start="133:9" pos:end="133:15">int32_t</name> <modifier pos:start="133:17" pos:end="133:17">*</modifier></type><name pos:start="133:18" pos:end="133:19">p2</name> <init pos:start="133:21" pos:end="133:37">= <expr pos:start="133:23" pos:end="133:37"><operator pos:start="133:23" pos:end="133:23">&amp;</operator><name pos:start="133:24" pos:end="133:37"><name pos:start="133:24" pos:end="133:30">tfilter</name><index pos:start="133:31" pos:end="133:37">[<expr pos:start="133:32" pos:end="133:36"><name pos:start="133:32" pos:end="133:32">i</name> <operator pos:start="133:34" pos:end="133:34">-</operator> <literal type="number" pos:start="133:36" pos:end="133:36">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <for pos:start="137:9" pos:end="147:9">for <control pos:start="137:13" pos:end="137:41">(<init pos:start="137:14" pos:end="137:19"><expr pos:start="137:14" pos:end="137:18"><name pos:start="137:14" pos:end="137:14">j</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <literal type="number" pos:start="137:18" pos:end="137:18">0</literal></expr>;</init> <condition pos:start="137:21" pos:end="137:36"><expr pos:start="137:21" pos:end="137:35"><name pos:start="137:21" pos:end="137:21">j</name> <operator pos:start="137:23" pos:end="137:23">&lt;</operator> <operator pos:start="137:25" pos:end="137:25">(</operator><name pos:start="137:26" pos:end="137:26">i</name> <operator pos:start="137:28" pos:end="137:28">+</operator> <literal type="number" pos:start="137:30" pos:end="137:30">1</literal><operator pos:start="137:31" pos:end="137:31">)</operator> <operator pos:start="137:33" pos:end="137:33">/</operator> <literal type="number" pos:start="137:35" pos:end="137:35">2</literal></expr>;</condition> <incr pos:start="137:38" pos:end="137:40"><expr pos:start="137:38" pos:end="137:40"><name pos:start="137:38" pos:end="137:38">j</name><operator pos:start="137:39" pos:end="137:40">++</operator></expr></incr>)</control> <block pos:start="137:43" pos:end="147:9">{<block_content pos:start="139:13" pos:end="145:17">

            <expr_stmt pos:start="139:13" pos:end="139:62"><expr pos:start="139:13" pos:end="139:61"><name pos:start="139:13" pos:end="139:13">x</name>     <operator pos:start="139:19" pos:end="139:19">=</operator> <operator pos:start="139:21" pos:end="139:21">*</operator><name pos:start="139:22" pos:end="139:23">p1</name> <operator pos:start="139:25" pos:end="139:25">+</operator> <operator pos:start="139:27" pos:end="139:27">(</operator><name pos:start="139:28" pos:end="139:43"><name pos:start="139:28" pos:end="139:28">s</name><operator pos:start="139:29" pos:end="139:30">-&gt;</operator><name pos:start="139:31" pos:end="139:40">predictors</name><index pos:start="139:41" pos:end="139:43">[<expr pos:start="139:42" pos:end="139:42"><name pos:start="139:42" pos:end="139:42">i</name></expr>]</index></name> <operator pos:start="139:45" pos:end="139:45">*</operator> <operator pos:start="139:47" pos:end="139:47">*</operator><name pos:start="139:48" pos:end="139:49">p2</name> <operator pos:start="139:51" pos:end="139:51">+</operator> <literal type="number" pos:start="139:53" pos:end="139:55">256</literal> <operator pos:start="139:57" pos:end="139:58">&gt;&gt;</operator> <literal type="number" pos:start="139:60" pos:end="139:60">9</literal><operator pos:start="139:61" pos:end="139:61">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:54"><expr pos:start="141:13" pos:end="141:53"><operator pos:start="141:13" pos:end="141:13">*</operator><name pos:start="141:14" pos:end="141:15">p2</name>  <operator pos:start="141:18" pos:end="141:19">+=</operator> <name pos:start="141:21" pos:end="141:36"><name pos:start="141:21" pos:end="141:21">s</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:33">predictors</name><index pos:start="141:34" pos:end="141:36">[<expr pos:start="141:35" pos:end="141:35"><name pos:start="141:35" pos:end="141:35">i</name></expr>]</index></name> <operator pos:start="141:38" pos:end="141:38">*</operator> <operator pos:start="141:40" pos:end="141:40">*</operator><name pos:start="141:41" pos:end="141:42">p1</name> <operator pos:start="141:44" pos:end="141:44">+</operator> <literal type="number" pos:start="141:46" pos:end="141:48">256</literal> <operator pos:start="141:50" pos:end="141:51">&gt;&gt;</operator> <literal type="number" pos:start="141:53" pos:end="141:53">9</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:22"><expr pos:start="143:13" pos:end="143:21"><operator pos:start="143:13" pos:end="143:13">*</operator><name pos:start="143:14" pos:end="143:15">p1</name><operator pos:start="143:16" pos:end="143:17">++</operator> <operator pos:start="143:19" pos:end="143:19">=</operator> <name pos:start="143:21" pos:end="143:21">x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:17"><expr pos:start="145:13" pos:end="145:16"><name pos:start="145:13" pos:end="145:14">p2</name><operator pos:start="145:15" pos:end="145:16">--</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="151:9" pos:end="151:43"><expr pos:start="151:9" pos:end="151:42"><name pos:start="151:9" pos:end="151:18"><name pos:start="151:9" pos:end="151:15">tfilter</name><index pos:start="151:16" pos:end="151:18">[<expr pos:start="151:17" pos:end="151:17"><name pos:start="151:17" pos:end="151:17">i</name></expr>]</index></name> <operator pos:start="151:20" pos:end="151:20">=</operator> <name pos:start="151:22" pos:end="151:37"><name pos:start="151:22" pos:end="151:22">s</name><operator pos:start="151:23" pos:end="151:24">-&gt;</operator><name pos:start="151:25" pos:end="151:34">predictors</name><index pos:start="151:35" pos:end="151:37">[<expr pos:start="151:36" pos:end="151:36"><name pos:start="151:36" pos:end="151:36">i</name></expr>]</index></name> <operator pos:start="151:39" pos:end="151:40">&lt;&lt;</operator> <literal type="number" pos:start="151:42" pos:end="151:42">6</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="157:5" pos:end="157:47"><expr pos:start="157:5" pos:end="157:46"><name pos:start="157:5" pos:end="157:18">filter_order16</name> <operator pos:start="157:20" pos:end="157:20">=</operator> <call pos:start="157:22" pos:end="157:46"><name pos:start="157:22" pos:end="157:28">FFALIGN</name><argument_list pos:start="157:29" pos:end="157:46">(<argument pos:start="157:30" pos:end="157:41"><expr pos:start="157:30" pos:end="157:41"><name pos:start="157:30" pos:end="157:41">filter_order</name></expr></argument>, <argument pos:start="157:44" pos:end="157:45"><expr pos:start="157:44" pos:end="157:45"><literal type="number" pos:start="157:44" pos:end="157:45">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:48"><expr pos:start="159:5" pos:end="159:47"><call pos:start="159:5" pos:end="159:47"><name pos:start="159:5" pos:end="159:14">AV_ZERO128</name><argument_list pos:start="159:15" pos:end="159:47">(<argument pos:start="159:16" pos:end="159:46"><expr pos:start="159:16" pos:end="159:46"><name pos:start="159:16" pos:end="159:24"><name pos:start="159:16" pos:end="159:16">s</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:24">filter</name></name> <operator pos:start="159:26" pos:end="159:26">+</operator> <name pos:start="159:28" pos:end="159:41">filter_order16</name> <operator pos:start="159:43" pos:end="159:43">-</operator> <literal type="number" pos:start="159:45" pos:end="159:46">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:48"><expr pos:start="161:5" pos:end="161:47"><call pos:start="161:5" pos:end="161:47"><name pos:start="161:5" pos:end="161:14">AV_ZERO128</name><argument_list pos:start="161:15" pos:end="161:47">(<argument pos:start="161:16" pos:end="161:46"><expr pos:start="161:16" pos:end="161:46"><name pos:start="161:16" pos:end="161:24"><name pos:start="161:16" pos:end="161:16">s</name><operator pos:start="161:17" pos:end="161:18">-&gt;</operator><name pos:start="161:19" pos:end="161:24">filter</name></name> <operator pos:start="161:26" pos:end="161:26">+</operator> <name pos:start="161:28" pos:end="161:41">filter_order16</name> <operator pos:start="161:43" pos:end="161:43">-</operator>  <literal type="number" pos:start="161:46" pos:end="161:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:40"><expr pos:start="163:5" pos:end="163:39"><name pos:start="163:5" pos:end="163:5">x</name> <operator pos:start="163:7" pos:end="163:7">=</operator> <literal type="number" pos:start="163:9" pos:end="163:9">1</literal> <operator pos:start="163:11" pos:end="163:12">&lt;&lt;</operator> <operator pos:start="163:14" pos:end="163:14">(</operator><literal type="number" pos:start="163:15" pos:end="163:18">32</literal> <operator pos:start="163:18" pos:end="163:18">-</operator> <operator pos:start="163:20" pos:end="163:20">(</operator><literal type="number" pos:start="163:21" pos:end="163:24">15</literal> <operator pos:start="163:24" pos:end="163:24">-</operator> <name pos:start="163:26" pos:end="163:37">filter_quant</name><operator pos:start="163:38" pos:end="163:38">)</operator><operator pos:start="163:39" pos:end="163:39">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:39"><expr pos:start="165:5" pos:end="165:38"><name pos:start="165:5" pos:end="165:5">y</name> <operator pos:start="165:7" pos:end="165:7">=</operator> <literal type="number" pos:start="165:9" pos:end="165:9">1</literal> <operator pos:start="165:11" pos:end="165:12">&lt;&lt;</operator> <operator pos:start="165:14" pos:end="165:14">(</operator><operator pos:start="165:15" pos:end="165:15">(</operator><literal type="number" pos:start="165:16" pos:end="165:19">15</literal> <operator pos:start="165:19" pos:end="165:19">-</operator> <name pos:start="165:21" pos:end="165:32">filter_quant</name><operator pos:start="165:33" pos:end="165:33">)</operator> <operator pos:start="165:35" pos:end="165:35">-</operator> <literal type="number" pos:start="165:37" pos:end="165:37">1</literal><operator pos:start="165:38" pos:end="165:38">)</operator></expr>;</expr_stmt>

    <for pos:start="167:5" pos:end="173:5">for <control pos:start="167:9" pos:end="167:69">(<init pos:start="167:10" pos:end="167:37"><expr pos:start="167:10" pos:end="167:14"><name pos:start="167:10" pos:end="167:10">i</name> <operator pos:start="167:12" pos:end="167:12">=</operator> <literal type="number" pos:start="167:14" pos:end="167:14">0</literal></expr><operator pos:start="167:15" pos:end="167:15">,</operator> <expr pos:start="167:17" pos:end="167:36"><name pos:start="167:17" pos:end="167:17">j</name> <operator pos:start="167:19" pos:end="167:19">=</operator> <name pos:start="167:21" pos:end="167:32">filter_order</name> <operator pos:start="167:34" pos:end="167:34">-</operator> <literal type="number" pos:start="167:36" pos:end="167:36">1</literal></expr>;</init> <condition pos:start="167:39" pos:end="167:59"><expr pos:start="167:39" pos:end="167:58"><name pos:start="167:39" pos:end="167:39">i</name> <operator pos:start="167:41" pos:end="167:41">&lt;</operator> <name pos:start="167:43" pos:end="167:54">filter_order</name> <operator pos:start="167:56" pos:end="167:56">/</operator> <literal type="number" pos:start="167:58" pos:end="167:58">2</literal></expr>;</condition> <incr pos:start="167:61" pos:end="167:68"><expr pos:start="167:61" pos:end="167:63"><name pos:start="167:61" pos:end="167:61">i</name><operator pos:start="167:62" pos:end="167:63">++</operator></expr><operator pos:start="167:64" pos:end="167:64">,</operator> <expr pos:start="167:66" pos:end="167:68"><name pos:start="167:66" pos:end="167:66">j</name><operator pos:start="167:67" pos:end="167:68">--</operator></expr></incr>)</control> <block pos:start="167:71" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:69">

        <expr_stmt pos:start="169:9" pos:end="169:69"><expr pos:start="169:9" pos:end="169:68"><name pos:start="169:9" pos:end="169:20"><name pos:start="169:9" pos:end="169:9">s</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:17">filter</name><index pos:start="169:18" pos:end="169:20">[<expr pos:start="169:19" pos:end="169:19"><name pos:start="169:19" pos:end="169:19">j</name></expr>]</index></name> <operator pos:start="169:22" pos:end="169:22">=</operator> <name pos:start="169:24" pos:end="169:24">x</name> <operator pos:start="169:26" pos:end="169:26">-</operator> <operator pos:start="169:28" pos:end="169:28">(</operator><operator pos:start="169:29" pos:end="169:29">(</operator><name pos:start="169:30" pos:end="169:39"><name pos:start="169:30" pos:end="169:36">tfilter</name><index pos:start="169:37" pos:end="169:39">[<expr pos:start="169:38" pos:end="169:38"><name pos:start="169:38" pos:end="169:38">i</name></expr>]</index></name> <operator pos:start="169:41" pos:end="169:41">+</operator> <name pos:start="169:43" pos:end="169:43">y</name><operator pos:start="169:44" pos:end="169:44">)</operator> <operator pos:start="169:46" pos:end="169:47">&gt;&gt;</operator> <operator pos:start="169:49" pos:end="169:49">(</operator><literal type="number" pos:start="169:50" pos:end="169:53">15</literal> <operator pos:start="169:53" pos:end="169:53">-</operator> <name pos:start="169:55" pos:end="169:66">filter_quant</name><operator pos:start="169:67" pos:end="169:67">)</operator><operator pos:start="169:68" pos:end="169:68">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:69"><expr pos:start="171:9" pos:end="171:68"><name pos:start="171:9" pos:end="171:20"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:17">filter</name><index pos:start="171:18" pos:end="171:20">[<expr pos:start="171:19" pos:end="171:19"><name pos:start="171:19" pos:end="171:19">i</name></expr>]</index></name> <operator pos:start="171:22" pos:end="171:22">=</operator> <name pos:start="171:24" pos:end="171:24">x</name> <operator pos:start="171:26" pos:end="171:26">-</operator> <operator pos:start="171:28" pos:end="171:28">(</operator><operator pos:start="171:29" pos:end="171:29">(</operator><name pos:start="171:30" pos:end="171:39"><name pos:start="171:30" pos:end="171:36">tfilter</name><index pos:start="171:37" pos:end="171:39">[<expr pos:start="171:38" pos:end="171:38"><name pos:start="171:38" pos:end="171:38">j</name></expr>]</index></name> <operator pos:start="171:41" pos:end="171:41">+</operator> <name pos:start="171:43" pos:end="171:43">y</name><operator pos:start="171:44" pos:end="171:44">)</operator> <operator pos:start="171:46" pos:end="171:47">&gt;&gt;</operator> <operator pos:start="171:49" pos:end="171:49">(</operator><literal type="number" pos:start="171:50" pos:end="171:53">15</literal> <operator pos:start="171:53" pos:end="171:53">-</operator> <name pos:start="171:55" pos:end="171:66">filter_quant</name><operator pos:start="171:67" pos:end="171:67">)</operator><operator pos:start="171:68" pos:end="171:68">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="177:5" pos:end="181:19"><if pos:start="177:5" pos:end="181:19">if <condition pos:start="177:8" pos:end="179:66">(<expr pos:start="177:9" pos:end="179:65"><operator pos:start="177:9" pos:end="177:9">(</operator><name pos:start="177:10" pos:end="177:12">ret</name> <operator pos:start="177:14" pos:end="177:14">=</operator> <call pos:start="177:16" pos:end="179:60"><name pos:start="177:16" pos:end="177:30">decode_residues</name><argument_list pos:start="177:31" pos:end="179:60">(<argument pos:start="177:32" pos:end="177:32"><expr pos:start="177:32" pos:end="177:32"><name pos:start="177:32" pos:end="177:32">s</name></expr></argument>, <argument pos:start="177:35" pos:end="177:56"><expr pos:start="177:35" pos:end="177:56"><operator pos:start="177:35" pos:end="177:35">&amp;</operator><name pos:start="177:36" pos:end="177:56"><name pos:start="177:36" pos:end="177:42">decoded</name><index pos:start="177:43" pos:end="177:56">[<expr pos:start="177:44" pos:end="177:55"><name pos:start="177:44" pos:end="177:55">filter_order</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="179:32" pos:end="179:59"><expr pos:start="179:32" pos:end="179:59"><name pos:start="179:32" pos:end="179:44">subframe_size</name> <operator pos:start="179:46" pos:end="179:46">-</operator> <name pos:start="179:48" pos:end="179:59">filter_order</name></expr></argument>)</argument_list></call><operator pos:start="179:61" pos:end="179:61">)</operator> <operator pos:start="179:63" pos:end="179:63">&lt;</operator> <literal type="number" pos:start="179:65" pos:end="179:65">0</literal></expr>)</condition><block type="pseudo" pos:start="181:9" pos:end="181:19"><block_content pos:start="181:9" pos:end="181:19">

        <return pos:start="181:9" pos:end="181:19">return <expr pos:start="181:16" pos:end="181:18"><name pos:start="181:16" pos:end="181:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="185:5" pos:end="187:46">for <control pos:start="185:9" pos:end="185:38">(<init pos:start="185:10" pos:end="185:15"><expr pos:start="185:10" pos:end="185:14"><name pos:start="185:10" pos:end="185:10">i</name> <operator pos:start="185:12" pos:end="185:12">=</operator> <literal type="number" pos:start="185:14" pos:end="185:14">0</literal></expr>;</init> <condition pos:start="185:17" pos:end="185:33"><expr pos:start="185:17" pos:end="185:32"><name pos:start="185:17" pos:end="185:17">i</name> <operator pos:start="185:19" pos:end="185:19">&lt;</operator> <name pos:start="185:21" pos:end="185:32">filter_order</name></expr>;</condition> <incr pos:start="185:35" pos:end="185:37"><expr pos:start="185:35" pos:end="185:37"><name pos:start="185:35" pos:end="185:35">i</name><operator pos:start="185:36" pos:end="185:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="187:9" pos:end="187:46"><block_content pos:start="187:9" pos:end="187:46">

        <expr_stmt pos:start="187:9" pos:end="187:46"><expr pos:start="187:9" pos:end="187:45"><name pos:start="187:9" pos:end="187:22"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:19">residues</name><index pos:start="187:20" pos:end="187:22">[<expr pos:start="187:21" pos:end="187:21"><name pos:start="187:21" pos:end="187:21">i</name></expr>]</index></name> <operator pos:start="187:24" pos:end="187:24">=</operator> <operator pos:start="187:26" pos:end="187:26">*</operator><name pos:start="187:27" pos:end="187:33">decoded</name><operator pos:start="187:34" pos:end="187:35">++</operator> <operator pos:start="187:37" pos:end="187:38">&gt;&gt;</operator> <name pos:start="187:40" pos:end="187:45">dshift</name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="191:5" pos:end="191:54"><expr pos:start="191:5" pos:end="191:53"><name pos:start="191:5" pos:end="191:5">y</name>    <operator pos:start="191:10" pos:end="191:10">=</operator> <call pos:start="191:12" pos:end="191:38"><name pos:start="191:12" pos:end="191:25">FF_ARRAY_ELEMS</name><argument_list pos:start="191:26" pos:end="191:38">(<argument pos:start="191:27" pos:end="191:37"><expr pos:start="191:27" pos:end="191:37"><name pos:start="191:27" pos:end="191:37"><name pos:start="191:27" pos:end="191:27">s</name><operator pos:start="191:28" pos:end="191:29">-&gt;</operator><name pos:start="191:30" pos:end="191:37">residues</name></name></expr></argument>)</argument_list></call> <operator pos:start="191:40" pos:end="191:40">-</operator> <name pos:start="191:42" pos:end="191:53">filter_order</name></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:40"><expr pos:start="193:5" pos:end="193:39"><name pos:start="193:5" pos:end="193:5">x</name>    <operator pos:start="193:10" pos:end="193:10">=</operator> <name pos:start="193:12" pos:end="193:24">subframe_size</name> <operator pos:start="193:26" pos:end="193:26">-</operator> <name pos:start="193:28" pos:end="193:39">filter_order</name></expr>;</expr_stmt>

    <while pos:start="195:5" pos:end="227:5">while <condition pos:start="195:11" pos:end="195:17">(<expr pos:start="195:12" pos:end="195:16"><name pos:start="195:12" pos:end="195:12">x</name> <operator pos:start="195:14" pos:end="195:14">&gt;</operator> <literal type="number" pos:start="195:16" pos:end="195:16">0</literal></expr>)</condition> <block pos:start="195:19" pos:end="227:5">{<block_content pos:start="197:9" pos:end="225:67">

        <decl_stmt pos:start="197:9" pos:end="197:30"><decl pos:start="197:9" pos:end="197:29"><type pos:start="197:9" pos:end="197:11"><name pos:start="197:9" pos:end="197:11">int</name></type> <name pos:start="197:13" pos:end="197:15">tmp</name> <init pos:start="197:17" pos:end="197:29">= <expr pos:start="197:19" pos:end="197:29"><call pos:start="197:19" pos:end="197:29"><name pos:start="197:19" pos:end="197:23">FFMIN</name><argument_list pos:start="197:24" pos:end="197:29">(<argument pos:start="197:25" pos:end="197:25"><expr pos:start="197:25" pos:end="197:25"><name pos:start="197:25" pos:end="197:25">y</name></expr></argument>, <argument pos:start="197:28" pos:end="197:28"><expr pos:start="197:28" pos:end="197:28"><name pos:start="197:28" pos:end="197:28">x</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <for pos:start="201:9" pos:end="217:9">for <control pos:start="201:13" pos:end="201:33">(<init pos:start="201:14" pos:end="201:19"><expr pos:start="201:14" pos:end="201:18"><name pos:start="201:14" pos:end="201:14">i</name> <operator pos:start="201:16" pos:end="201:16">=</operator> <literal type="number" pos:start="201:18" pos:end="201:18">0</literal></expr>;</init> <condition pos:start="201:21" pos:end="201:28"><expr pos:start="201:21" pos:end="201:27"><name pos:start="201:21" pos:end="201:21">i</name> <operator pos:start="201:23" pos:end="201:23">&lt;</operator> <name pos:start="201:25" pos:end="201:27">tmp</name></expr>;</condition> <incr pos:start="201:30" pos:end="201:32"><expr pos:start="201:30" pos:end="201:32"><name pos:start="201:30" pos:end="201:30">i</name><operator pos:start="201:31" pos:end="201:32">++</operator></expr></incr>)</control> <block pos:start="201:35" pos:end="217:9">{<block_content pos:start="203:13" pos:end="215:56">

            <decl_stmt pos:start="203:13" pos:end="203:44"><decl pos:start="203:13" pos:end="203:43"><type pos:start="203:13" pos:end="203:15"><name pos:start="203:13" pos:end="203:15">int</name></type> <name pos:start="203:17" pos:end="203:17">v</name> <init pos:start="203:19" pos:end="203:43">= <expr pos:start="203:21" pos:end="203:43"><literal type="number" pos:start="203:21" pos:end="203:21">1</literal> <operator pos:start="203:23" pos:end="203:24">&lt;&lt;</operator> <operator pos:start="203:26" pos:end="203:26">(</operator><name pos:start="203:27" pos:end="203:38">filter_quant</name> <operator pos:start="203:40" pos:end="203:40">-</operator> <literal type="number" pos:start="203:42" pos:end="203:42">1</literal><operator pos:start="203:43" pos:end="203:43">)</operator></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="207:13" pos:end="209:61"><expr pos:start="207:13" pos:end="209:60"><name pos:start="207:13" pos:end="207:13">v</name> <operator pos:start="207:15" pos:end="207:16">+=</operator> <call pos:start="207:18" pos:end="209:60"><name pos:start="207:18" pos:end="207:44"><name pos:start="207:18" pos:end="207:18">s</name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:24">adsp</name><operator pos:start="207:25" pos:end="207:25">.</operator><name pos:start="207:26" pos:end="207:44">scalarproduct_int16</name></name><argument_list pos:start="207:45" pos:end="209:60">(<argument pos:start="207:46" pos:end="207:60"><expr pos:start="207:46" pos:end="207:60"><operator pos:start="207:46" pos:end="207:46">&amp;</operator><name pos:start="207:47" pos:end="207:60"><name pos:start="207:47" pos:end="207:47">s</name><operator pos:start="207:48" pos:end="207:49">-&gt;</operator><name pos:start="207:50" pos:end="207:57">residues</name><index pos:start="207:58" pos:end="207:60">[<expr pos:start="207:59" pos:end="207:59"><name pos:start="207:59" pos:end="207:59">i</name></expr>]</index></name></expr></argument>, <argument pos:start="207:63" pos:end="207:71"><expr pos:start="207:63" pos:end="207:71"><name pos:start="207:63" pos:end="207:71"><name pos:start="207:63" pos:end="207:63">s</name><operator pos:start="207:64" pos:end="207:65">-&gt;</operator><name pos:start="207:66" pos:end="207:71">filter</name></name></expr></argument>,

                                             <argument pos:start="209:46" pos:end="209:59"><expr pos:start="209:46" pos:end="209:59"><name pos:start="209:46" pos:end="209:59">filter_order16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:76"><expr pos:start="211:13" pos:end="211:75"><name pos:start="211:13" pos:end="211:13">v</name> <operator pos:start="211:15" pos:end="211:15">=</operator> <operator pos:start="211:17" pos:end="211:17">(</operator><call pos:start="211:18" pos:end="211:53"><name pos:start="211:18" pos:end="211:30">av_clip_intp2</name><argument_list pos:start="211:31" pos:end="211:53">(<argument pos:start="211:32" pos:end="211:48"><expr pos:start="211:32" pos:end="211:48"><name pos:start="211:32" pos:end="211:32">v</name> <operator pos:start="211:34" pos:end="211:35">&gt;&gt;</operator> <name pos:start="211:37" pos:end="211:48">filter_quant</name></expr></argument>, <argument pos:start="211:51" pos:end="211:52"><expr pos:start="211:51" pos:end="211:52"><literal type="number" pos:start="211:51" pos:end="211:52">13</literal></expr></argument>)</argument_list></call> <operator pos:start="211:55" pos:end="211:56">&lt;&lt;</operator> <name pos:start="211:58" pos:end="211:63">dshift</name><operator pos:start="211:64" pos:end="211:64">)</operator> <operator pos:start="211:66" pos:end="211:66">-</operator> <operator pos:start="211:68" pos:end="211:68">*</operator><name pos:start="211:69" pos:end="211:75">decoded</name></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:27"><expr pos:start="213:13" pos:end="213:26"><operator pos:start="213:13" pos:end="213:13">*</operator><name pos:start="213:14" pos:end="213:20">decoded</name><operator pos:start="213:21" pos:end="213:22">++</operator> <operator pos:start="213:24" pos:end="213:24">=</operator> <name pos:start="213:26" pos:end="213:26">v</name></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:56"><expr pos:start="215:13" pos:end="215:55"><name pos:start="215:13" pos:end="215:41"><name pos:start="215:13" pos:end="215:13">s</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:23">residues</name><index pos:start="215:24" pos:end="215:41">[<expr pos:start="215:25" pos:end="215:40"><name pos:start="215:25" pos:end="215:36">filter_order</name> <operator pos:start="215:38" pos:end="215:38">+</operator> <name pos:start="215:40" pos:end="215:40">i</name></expr>]</index></name> <operator pos:start="215:43" pos:end="215:43">=</operator> <name pos:start="215:45" pos:end="215:45">v</name> <operator pos:start="215:47" pos:end="215:48">&gt;&gt;</operator> <name pos:start="215:50" pos:end="215:55">dshift</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="221:9" pos:end="221:17"><expr pos:start="221:9" pos:end="221:16"><name pos:start="221:9" pos:end="221:9">x</name> <operator pos:start="221:11" pos:end="221:12">-=</operator> <name pos:start="221:14" pos:end="221:16">tmp</name></expr>;</expr_stmt>

        <if_stmt pos:start="223:9" pos:end="225:67"><if pos:start="223:9" pos:end="225:67">if <condition pos:start="223:12" pos:end="223:18">(<expr pos:start="223:13" pos:end="223:17"><name pos:start="223:13" pos:end="223:13">x</name> <operator pos:start="223:15" pos:end="223:15">&gt;</operator> <literal type="number" pos:start="223:17" pos:end="223:17">0</literal></expr>)</condition><block type="pseudo" pos:start="225:13" pos:end="225:67"><block_content pos:start="225:13" pos:end="225:67">

            <expr_stmt pos:start="225:13" pos:end="225:67"><expr pos:start="225:13" pos:end="225:66"><call pos:start="225:13" pos:end="225:66"><name pos:start="225:13" pos:end="225:18">memcpy</name><argument_list pos:start="225:19" pos:end="225:66">(<argument pos:start="225:20" pos:end="225:30"><expr pos:start="225:20" pos:end="225:30"><name pos:start="225:20" pos:end="225:30"><name pos:start="225:20" pos:end="225:20">s</name><operator pos:start="225:21" pos:end="225:22">-&gt;</operator><name pos:start="225:23" pos:end="225:30">residues</name></name></expr></argument>, <argument pos:start="225:33" pos:end="225:47"><expr pos:start="225:33" pos:end="225:47"><operator pos:start="225:33" pos:end="225:33">&amp;</operator><name pos:start="225:34" pos:end="225:47"><name pos:start="225:34" pos:end="225:34">s</name><operator pos:start="225:35" pos:end="225:36">-&gt;</operator><name pos:start="225:37" pos:end="225:44">residues</name><index pos:start="225:45" pos:end="225:47">[<expr pos:start="225:46" pos:end="225:46"><name pos:start="225:46" pos:end="225:46">y</name></expr>]</index></name></expr></argument>, <argument pos:start="225:50" pos:end="225:65"><expr pos:start="225:50" pos:end="225:65"><literal type="number" pos:start="225:50" pos:end="225:50">2</literal> <operator pos:start="225:52" pos:end="225:52">*</operator> <name pos:start="225:54" pos:end="225:65">filter_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="231:5" pos:end="231:13"><expr pos:start="231:5" pos:end="231:12"><call pos:start="231:5" pos:end="231:12"><name pos:start="231:5" pos:end="231:10">emms_c</name><argument_list pos:start="231:11" pos:end="231:12">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="235:5" pos:end="235:13">return <expr pos:start="235:12" pos:end="235:12"><literal type="number" pos:start="235:12" pos:end="235:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
