<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23732.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">tcp_wait_fd</name><parameter_list pos:start="1:23" pos:end="1:41">(<parameter pos:start="1:24" pos:end="1:29"><decl pos:start="1:24" pos:end="1:29"><type pos:start="1:24" pos:end="1:29"><name pos:start="1:24" pos:end="1:26">int</name></type> <name pos:start="1:28" pos:end="1:29">fd</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:40"><decl pos:start="1:32" pos:end="1:40"><type pos:start="1:32" pos:end="1:40"><name pos:start="1:32" pos:end="1:34">int</name></type> <name pos:start="1:36" pos:end="1:40">write</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:74">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">ev</name> <init pos:start="5:12" pos:end="5:37">= <expr pos:start="5:14" pos:end="5:37"><ternary pos:start="5:14" pos:end="5:37"><condition pos:start="5:14" pos:end="5:20"><expr pos:start="5:14" pos:end="5:18"><name pos:start="5:14" pos:end="5:18">write</name></expr> ?</condition><then pos:start="5:22" pos:end="5:28"> <expr pos:start="5:22" pos:end="5:28"><name pos:start="5:22" pos:end="5:28">POLLOUT</name></expr> </then><else pos:start="5:30" pos:end="5:37">: <expr pos:start="5:32" pos:end="5:37"><name pos:start="5:32" pos:end="5:37">POLLIN</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:63"><decl pos:start="7:5" pos:end="7:62"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:17">pollfd</name></name></type> <name pos:start="7:19" pos:end="7:19">p</name> <init pos:start="7:21" pos:end="7:62">= <expr pos:start="7:23" pos:end="7:62"><block pos:start="7:23" pos:end="7:62">{ <expr pos:start="7:25" pos:end="7:32"><operator pos:start="7:25" pos:end="7:25">.</operator><name pos:start="7:26" pos:end="7:27">fd</name> <operator pos:start="7:29" pos:end="7:29">=</operator> <name pos:start="7:31" pos:end="7:32">fd</name></expr>, <expr pos:start="7:35" pos:end="7:46"><operator pos:start="7:35" pos:end="7:35">.</operator><name pos:start="7:36" pos:end="7:41">events</name> <operator pos:start="7:43" pos:end="7:43">=</operator> <name pos:start="7:45" pos:end="7:46">ev</name></expr>, <expr pos:start="7:49" pos:end="7:60"><operator pos:start="7:49" pos:end="7:49">.</operator><name pos:start="7:50" pos:end="7:56">revents</name> <operator pos:start="7:58" pos:end="7:58">=</operator> <literal type="number" pos:start="7:60" pos:end="7:60">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:26"><name pos:start="13:11" pos:end="13:14">poll</name><argument_list pos:start="13:15" pos:end="13:26">(<argument pos:start="13:16" pos:end="13:17"><expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">&amp;</operator><name pos:start="13:17" pos:end="13:17">p</name></expr></argument>, <argument pos:start="13:20" pos:end="13:20"><expr pos:start="13:20" pos:end="13:20"><literal type="number" pos:start="13:20" pos:end="13:20">1</literal></expr></argument>, <argument pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><literal type="number" pos:start="13:23" pos:end="13:25">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="15:5" pos:end="15:74">return <expr pos:start="15:12" pos:end="15:73"><ternary pos:start="15:12" pos:end="15:73"><condition pos:start="15:12" pos:end="15:20"><expr pos:start="15:12" pos:end="15:18"><name pos:start="15:12" pos:end="15:14">ret</name> <operator pos:start="15:16" pos:end="15:16">&lt;</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr> ?</condition><then pos:start="15:22" pos:end="15:34"> <expr pos:start="15:22" pos:end="15:34"><call pos:start="15:22" pos:end="15:34"><name pos:start="15:22" pos:end="15:32">ff_neterrno</name><argument_list pos:start="15:33" pos:end="15:34">()</argument_list></call></expr> </then><else pos:start="15:36" pos:end="15:73">: <expr pos:start="15:38" pos:end="15:73"><ternary pos:start="15:38" pos:end="15:73"><condition pos:start="15:38" pos:end="15:53"><expr pos:start="15:38" pos:end="15:51"><name pos:start="15:38" pos:end="15:46"><name pos:start="15:38" pos:end="15:38">p</name><operator pos:start="15:39" pos:end="15:39">.</operator><name pos:start="15:40" pos:end="15:46">revents</name></name> <operator pos:start="15:48" pos:end="15:48">&amp;</operator> <name pos:start="15:50" pos:end="15:51">ev</name></expr> ?</condition><then pos:start="15:55" pos:end="15:55"> <expr pos:start="15:55" pos:end="15:55"><literal type="number" pos:start="15:55" pos:end="15:55">0</literal></expr> </then><else pos:start="15:57" pos:end="15:73">: <expr pos:start="15:59" pos:end="15:73"><call pos:start="15:59" pos:end="15:73"><name pos:start="15:59" pos:end="15:65">AVERROR</name><argument_list pos:start="15:66" pos:end="15:73">(<argument pos:start="15:67" pos:end="15:72"><expr pos:start="15:67" pos:end="15:72"><name pos:start="15:67" pos:end="15:72">EAGAIN</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
