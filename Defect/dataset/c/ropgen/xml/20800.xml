<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20800.c" pos:tabs="8"><function pos:start="1:1" pos:end="217:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">raw_decode</name><parameter_list pos:start="1:22" pos:end="3:38">(<parameter pos:start="1:23" pos:end="1:43"><decl pos:start="1:23" pos:end="1:43"><type pos:start="1:23" pos:end="1:43"><name pos:start="1:23" pos:end="1:36">AVCodecContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">avctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:55"><decl pos:start="1:46" pos:end="1:55"><type pos:start="1:46" pos:end="1:55"><name pos:start="1:46" pos:end="1:49">void</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">data</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:71"><decl pos:start="1:58" pos:end="1:71"><type pos:start="1:58" pos:end="1:71"><name pos:start="1:58" pos:end="1:60">int</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:71">got_frame</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:37"><decl pos:start="3:23" pos:end="3:37"><type pos:start="3:23" pos:end="3:37"><name pos:start="3:23" pos:end="3:30">AVPacket</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:37">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="217:1">{<block_content pos:start="7:5" pos:end="215:20">

    <decl_stmt pos:start="7:5" pos:end="7:73"><decl pos:start="7:5" pos:end="7:72"><type pos:start="7:5" pos:end="7:30"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:28">AVPixFmtDescriptor</name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:34">desc</name> <init pos:start="7:36" pos:end="7:72">= <expr pos:start="7:38" pos:end="7:72"><call pos:start="7:38" pos:end="7:72"><name pos:start="7:38" pos:end="7:56">av_pix_fmt_desc_get</name><argument_list pos:start="7:57" pos:end="7:72">(<argument pos:start="7:58" pos:end="7:71"><expr pos:start="7:58" pos:end="7:71"><name pos:start="7:58" pos:end="7:71"><name pos:start="7:58" pos:end="7:62">avctx</name><operator pos:start="7:63" pos:end="7:64">-&gt;</operator><name pos:start="7:65" pos:end="7:71">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">RawVideoContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:28">context</name>       <init pos:start="9:36" pos:end="9:53">= <expr pos:start="9:38" pos:end="9:53"><name pos:start="9:38" pos:end="9:53"><name pos:start="9:38" pos:end="9:42">avctx</name><operator pos:start="9:43" pos:end="9:44">-&gt;</operator><name pos:start="9:45" pos:end="9:53">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">buf</name>             <init pos:start="11:36" pos:end="11:48">= <expr pos:start="11:38" pos:end="11:48"><name pos:start="11:38" pos:end="11:48"><name pos:start="11:38" pos:end="11:42">avpkt</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:48">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:49"><decl pos:start="13:5" pos:end="13:48"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">buf_size</name>                   <init pos:start="13:36" pos:end="13:48">= <expr pos:start="13:38" pos:end="13:48"><name pos:start="13:38" pos:end="13:48"><name pos:start="13:38" pos:end="13:42">avpkt</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:48">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:92"><decl pos:start="15:5" pos:end="15:91"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">need_copy</name>                  <init pos:start="15:36" pos:end="15:91">= <expr pos:start="15:38" pos:end="15:91"><operator pos:start="15:38" pos:end="15:38">!</operator><name pos:start="15:39" pos:end="15:48"><name pos:start="15:39" pos:end="15:43">avpkt</name><operator pos:start="15:44" pos:end="15:45">-&gt;</operator><name pos:start="15:46" pos:end="15:48">buf</name></name> <operator pos:start="15:50" pos:end="15:51">||</operator> <name pos:start="15:53" pos:end="15:71"><name pos:start="15:53" pos:end="15:59">context</name><operator pos:start="15:60" pos:end="15:61">-&gt;</operator><name pos:start="15:62" pos:end="15:71">is_2_4_bpp</name></name> <operator pos:start="15:73" pos:end="15:74">||</operator> <name pos:start="15:76" pos:end="15:91"><name pos:start="15:76" pos:end="15:82">context</name><operator pos:start="15:83" pos:end="15:84">-&gt;</operator><name pos:start="15:85" pos:end="15:91">is_yuv2</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">res</name></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:30"><decl pos:start="21:5" pos:end="21:29"><type pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:11">AVFrame</name>   <modifier pos:start="21:15" pos:end="21:15">*</modifier></type><name pos:start="21:16" pos:end="21:20">frame</name>   <init pos:start="21:24" pos:end="21:29">= <expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:30"><decl pos:start="23:5" pos:end="23:29"><type pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:13">AVPicture</name> <modifier pos:start="23:15" pos:end="23:15">*</modifier></type><name pos:start="23:16" pos:end="23:22">picture</name> <init pos:start="23:24" pos:end="23:29">= <expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">data</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:48"><expr pos:start="27:5" pos:end="27:47"><name pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:9">frame</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:20">pict_type</name></name>        <operator pos:start="27:29" pos:end="27:29">=</operator> <name pos:start="27:31" pos:end="27:47">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:9">frame</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:20">key_frame</name></name>        <operator pos:start="29:29" pos:end="29:29">=</operator> <literal type="number" pos:start="29:31" pos:end="29:31">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:9">frame</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:27">reordered_opaque</name></name> <operator pos:start="31:29" pos:end="31:29">=</operator> <name pos:start="31:31" pos:end="31:53"><name pos:start="31:31" pos:end="31:35">avctx</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:53">reordered_opaque</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:56"><expr pos:start="33:5" pos:end="33:55"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:9">frame</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:18">pkt_pts</name></name>          <operator pos:start="33:29" pos:end="33:29">=</operator> <name pos:start="33:31" pos:end="33:55"><name pos:start="33:31" pos:end="33:35">avctx</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:45">internal</name><operator pos:start="33:46" pos:end="33:47">-&gt;</operator><name pos:start="33:48" pos:end="33:50">pkt</name><operator pos:start="33:51" pos:end="33:52">-&gt;</operator><name pos:start="33:53" pos:end="33:55">pts</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="41:18"><if pos:start="37:5" pos:end="41:18">if <condition pos:start="37:8" pos:end="39:62">(<expr pos:start="37:9" pos:end="39:61"><name pos:start="37:9" pos:end="37:16">buf_size</name> <operator pos:start="37:18" pos:end="37:18">&lt;</operator> <name pos:start="37:20" pos:end="37:38"><name pos:start="37:20" pos:end="37:26">context</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:38">frame_size</name></name> <operator pos:start="37:40" pos:end="37:40">-</operator> <operator pos:start="37:42" pos:end="37:42">(</operator><ternary pos:start="37:43" pos:end="39:60"><condition pos:start="37:43" pos:end="37:77"><expr pos:start="37:43" pos:end="37:75"><name pos:start="37:43" pos:end="37:56"><name pos:start="37:43" pos:end="37:47">avctx</name><operator pos:start="37:48" pos:end="37:49">-&gt;</operator><name pos:start="37:50" pos:end="37:56">pix_fmt</name></name> <operator pos:start="37:58" pos:end="37:59">==</operator> <name pos:start="37:61" pos:end="37:75">AV_PIX_FMT_PAL8</name></expr> ?</condition><then pos:start="39:43" pos:end="39:56">

                                          <expr pos:start="39:43" pos:end="39:56"><name pos:start="39:43" pos:end="39:56">AVPALETTE_SIZE</name></expr> </then><else pos:start="39:58" pos:end="39:60">: <expr pos:start="39:60" pos:end="39:60"><literal type="number" pos:start="39:60" pos:end="39:60">0</literal></expr></else></ternary><operator pos:start="39:61" pos:end="39:61">)</operator></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="51:50"><if pos:start="45:5" pos:end="47:61">if <condition pos:start="45:8" pos:end="45:18">(<expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:17">need_copy</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:61"><block_content pos:start="47:9" pos:end="47:61">

        <expr_stmt pos:start="47:9" pos:end="47:61"><expr pos:start="47:9" pos:end="47:60"><name pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:13">frame</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:18">buf</name><index pos:start="47:19" pos:end="47:21">[<expr pos:start="47:20" pos:end="47:20"><literal type="number" pos:start="47:20" pos:end="47:20">0</literal></expr>]</index></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <call pos:start="47:25" pos:end="47:60"><name pos:start="47:25" pos:end="47:39">av_buffer_alloc</name><argument_list pos:start="47:40" pos:end="47:60">(<argument pos:start="47:41" pos:end="47:59"><expr pos:start="47:41" pos:end="47:59"><name pos:start="47:41" pos:end="47:59"><name pos:start="47:41" pos:end="47:47">context</name><operator pos:start="47:48" pos:end="47:49">-&gt;</operator><name pos:start="47:50" pos:end="47:59">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="49:5" pos:end="51:50">else<block type="pseudo" pos:start="51:9" pos:end="51:50"><block_content pos:start="51:9" pos:end="51:50">

        <expr_stmt pos:start="51:9" pos:end="51:50"><expr pos:start="51:9" pos:end="51:49"><name pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:13">frame</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:18">buf</name><index pos:start="51:19" pos:end="51:21">[<expr pos:start="51:20" pos:end="51:20"><literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>]</index></name> <operator pos:start="51:23" pos:end="51:23">=</operator> <call pos:start="51:25" pos:end="51:49"><name pos:start="51:25" pos:end="51:37">av_buffer_ref</name><argument_list pos:start="51:38" pos:end="51:49">(<argument pos:start="51:39" pos:end="51:48"><expr pos:start="51:39" pos:end="51:48"><name pos:start="51:39" pos:end="51:48"><name pos:start="51:39" pos:end="51:43">avpkt</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:48">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="53:5" pos:end="55:31"><if pos:start="53:5" pos:end="55:31">if <condition pos:start="53:8" pos:end="53:23">(<expr pos:start="53:9" pos:end="53:22"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:22"><name pos:start="53:10" pos:end="53:14">frame</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:19">buf</name><index pos:start="53:20" pos:end="53:22">[<expr pos:start="53:21" pos:end="53:21"><literal type="number" pos:start="53:21" pos:end="53:21">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:31"><block_content pos:start="55:9" pos:end="55:31">

        <return pos:start="55:9" pos:end="55:31">return <expr pos:start="55:16" pos:end="55:30"><call pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:22">AVERROR</name><argument_list pos:start="55:23" pos:end="55:30">(<argument pos:start="55:24" pos:end="55:29"><expr pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="59:5" pos:end="59:61">//2bpp and 4bpp raw in avi and mov (yes this is ugly ...)</comment>

    <if_stmt pos:start="61:5" pos:end="103:5"><if pos:start="61:5" pos:end="97:5">if <condition pos:start="61:8" pos:end="61:28">(<expr pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:15">context</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:27">is_2_4_bpp</name></name></expr>)</condition> <block pos:start="61:30" pos:end="97:5">{<block_content pos:start="63:9" pos:end="95:18">

        <decl_stmt pos:start="63:9" pos:end="63:14"><decl pos:start="63:9" pos:end="63:13"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:43"><decl pos:start="65:9" pos:end="65:42"><type pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:15">uint8_t</name> <modifier pos:start="65:17" pos:end="65:17">*</modifier></type><name pos:start="65:18" pos:end="65:20">dst</name> <init pos:start="65:22" pos:end="65:42">= <expr pos:start="65:24" pos:end="65:42"><name pos:start="65:24" pos:end="65:36"><name pos:start="65:24" pos:end="65:28">frame</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:33">buf</name><index pos:start="65:34" pos:end="65:36">[<expr pos:start="65:35" pos:end="65:35"><literal type="number" pos:start="65:35" pos:end="65:35">0</literal></expr>]</index></name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:42">data</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:56"><expr pos:start="67:9" pos:end="67:55"><name pos:start="67:9" pos:end="67:16">buf_size</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:38"><name pos:start="67:20" pos:end="67:26">context</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:38">frame_size</name></name> <operator pos:start="67:40" pos:end="67:40">-</operator> <name pos:start="67:42" pos:end="67:55">AVPALETTE_SIZE</name></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="93:9"><if pos:start="69:9" pos:end="79:9">if <condition pos:start="69:12" pos:end="69:46">(<expr pos:start="69:13" pos:end="69:45"><name pos:start="69:13" pos:end="69:40"><name pos:start="69:13" pos:end="69:17">avctx</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:40">bits_per_coded_sample</name></name> <operator pos:start="69:42" pos:end="69:43">==</operator> <literal type="number" pos:start="69:45" pos:end="69:45">4</literal></expr>)</condition> <block pos:start="69:48" pos:end="79:9">{<block_content pos:start="71:13" pos:end="77:13">

            <for pos:start="71:13" pos:end="77:13">for <control pos:start="71:17" pos:end="71:50">(<init pos:start="71:18" pos:end="71:23"><expr pos:start="71:18" pos:end="71:22"><name pos:start="71:18" pos:end="71:18">i</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>;</init> <condition pos:start="71:25" pos:end="71:45"><expr pos:start="71:25" pos:end="71:44"><literal type="number" pos:start="71:25" pos:end="71:25">2</literal> <operator pos:start="71:27" pos:end="71:27">*</operator> <name pos:start="71:29" pos:end="71:29">i</name> <operator pos:start="71:31" pos:end="71:31">+</operator> <literal type="number" pos:start="71:33" pos:end="71:33">1</literal> <operator pos:start="71:35" pos:end="71:35">&lt;</operator> <name pos:start="71:37" pos:end="71:44">buf_size</name></expr>;</condition> <incr pos:start="71:47" pos:end="71:49"><expr pos:start="71:47" pos:end="71:49"><name pos:start="71:47" pos:end="71:47">i</name><operator pos:start="71:48" pos:end="71:49">++</operator></expr></incr>)</control> <block pos:start="71:52" pos:end="77:13">{<block_content pos:start="73:17" pos:end="75:45">

                <expr_stmt pos:start="73:17" pos:end="73:45"><expr pos:start="73:17" pos:end="73:44"><name pos:start="73:17" pos:end="73:30"><name pos:start="73:17" pos:end="73:19">dst</name><index pos:start="73:20" pos:end="73:30">[<expr pos:start="73:21" pos:end="73:29"><literal type="number" pos:start="73:21" pos:end="73:21">2</literal> <operator pos:start="73:23" pos:end="73:23">*</operator> <name pos:start="73:25" pos:end="73:25">i</name> <operator pos:start="73:27" pos:end="73:27">+</operator> <literal type="number" pos:start="73:29" pos:end="73:29">0</literal></expr>]</index></name> <operator pos:start="73:32" pos:end="73:32">=</operator> <name pos:start="73:34" pos:end="73:39"><name pos:start="73:34" pos:end="73:36">buf</name><index pos:start="73:37" pos:end="73:39">[<expr pos:start="73:38" pos:end="73:38"><name pos:start="73:38" pos:end="73:38">i</name></expr>]</index></name> <operator pos:start="73:41" pos:end="73:42">&gt;&gt;</operator> <literal type="number" pos:start="73:44" pos:end="73:44">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:45"><expr pos:start="75:17" pos:end="75:44"><name pos:start="75:17" pos:end="75:30"><name pos:start="75:17" pos:end="75:19">dst</name><index pos:start="75:20" pos:end="75:30">[<expr pos:start="75:21" pos:end="75:29"><literal type="number" pos:start="75:21" pos:end="75:21">2</literal> <operator pos:start="75:23" pos:end="75:23">*</operator> <name pos:start="75:25" pos:end="75:25">i</name> <operator pos:start="75:27" pos:end="75:27">+</operator> <literal type="number" pos:start="75:29" pos:end="75:29">1</literal></expr>]</index></name> <operator pos:start="75:32" pos:end="75:32">=</operator> <name pos:start="75:34" pos:end="75:39"><name pos:start="75:34" pos:end="75:36">buf</name><index pos:start="75:37" pos:end="75:39">[<expr pos:start="75:38" pos:end="75:38"><name pos:start="75:38" pos:end="75:38">i</name></expr>]</index></name> <operator pos:start="75:41" pos:end="75:41">&amp;</operator> <literal type="number" pos:start="75:43" pos:end="75:44">15</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="79:11" pos:end="93:9">else <block pos:start="79:16" pos:end="93:9">{<block_content pos:start="81:13" pos:end="91:13">

            <for pos:start="81:13" pos:end="91:13">for <control pos:start="81:17" pos:end="81:50">(<init pos:start="81:18" pos:end="81:23"><expr pos:start="81:18" pos:end="81:22"><name pos:start="81:18" pos:end="81:18">i</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</init> <condition pos:start="81:25" pos:end="81:45"><expr pos:start="81:25" pos:end="81:44"><literal type="number" pos:start="81:25" pos:end="81:25">4</literal> <operator pos:start="81:27" pos:end="81:27">*</operator> <name pos:start="81:29" pos:end="81:29">i</name> <operator pos:start="81:31" pos:end="81:31">+</operator> <literal type="number" pos:start="81:33" pos:end="81:33">3</literal> <operator pos:start="81:35" pos:end="81:35">&lt;</operator> <name pos:start="81:37" pos:end="81:44">buf_size</name></expr>;</condition> <incr pos:start="81:47" pos:end="81:49"><expr pos:start="81:47" pos:end="81:49"><name pos:start="81:47" pos:end="81:47">i</name><operator pos:start="81:48" pos:end="81:49">++</operator></expr></incr>)</control> <block pos:start="81:52" pos:end="91:13">{<block_content pos:start="83:17" pos:end="89:49">

                <expr_stmt pos:start="83:17" pos:end="83:45"><expr pos:start="83:17" pos:end="83:44"><name pos:start="83:17" pos:end="83:30"><name pos:start="83:17" pos:end="83:19">dst</name><index pos:start="83:20" pos:end="83:30">[<expr pos:start="83:21" pos:end="83:29"><literal type="number" pos:start="83:21" pos:end="83:21">4</literal> <operator pos:start="83:23" pos:end="83:23">*</operator> <name pos:start="83:25" pos:end="83:25">i</name> <operator pos:start="83:27" pos:end="83:27">+</operator> <literal type="number" pos:start="83:29" pos:end="83:29">0</literal></expr>]</index></name> <operator pos:start="83:32" pos:end="83:32">=</operator> <name pos:start="83:34" pos:end="83:39"><name pos:start="83:34" pos:end="83:36">buf</name><index pos:start="83:37" pos:end="83:39">[<expr pos:start="83:38" pos:end="83:38"><name pos:start="83:38" pos:end="83:38">i</name></expr>]</index></name> <operator pos:start="83:41" pos:end="83:42">&gt;&gt;</operator> <literal type="number" pos:start="83:44" pos:end="83:44">6</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:49"><expr pos:start="85:17" pos:end="85:48"><name pos:start="85:17" pos:end="85:30"><name pos:start="85:17" pos:end="85:19">dst</name><index pos:start="85:20" pos:end="85:30">[<expr pos:start="85:21" pos:end="85:29"><literal type="number" pos:start="85:21" pos:end="85:21">4</literal> <operator pos:start="85:23" pos:end="85:23">*</operator> <name pos:start="85:25" pos:end="85:25">i</name> <operator pos:start="85:27" pos:end="85:27">+</operator> <literal type="number" pos:start="85:29" pos:end="85:29">1</literal></expr>]</index></name> <operator pos:start="85:32" pos:end="85:32">=</operator> <name pos:start="85:34" pos:end="85:39"><name pos:start="85:34" pos:end="85:36">buf</name><index pos:start="85:37" pos:end="85:39">[<expr pos:start="85:38" pos:end="85:38"><name pos:start="85:38" pos:end="85:38">i</name></expr>]</index></name> <operator pos:start="85:41" pos:end="85:42">&gt;&gt;</operator> <literal type="number" pos:start="85:44" pos:end="85:44">4</literal> <operator pos:start="85:46" pos:end="85:46">&amp;</operator> <literal type="number" pos:start="85:48" pos:end="85:48">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:49"><expr pos:start="87:17" pos:end="87:48"><name pos:start="87:17" pos:end="87:30"><name pos:start="87:17" pos:end="87:19">dst</name><index pos:start="87:20" pos:end="87:30">[<expr pos:start="87:21" pos:end="87:29"><literal type="number" pos:start="87:21" pos:end="87:21">4</literal> <operator pos:start="87:23" pos:end="87:23">*</operator> <name pos:start="87:25" pos:end="87:25">i</name> <operator pos:start="87:27" pos:end="87:27">+</operator> <literal type="number" pos:start="87:29" pos:end="87:29">2</literal></expr>]</index></name> <operator pos:start="87:32" pos:end="87:32">=</operator> <name pos:start="87:34" pos:end="87:39"><name pos:start="87:34" pos:end="87:36">buf</name><index pos:start="87:37" pos:end="87:39">[<expr pos:start="87:38" pos:end="87:38"><name pos:start="87:38" pos:end="87:38">i</name></expr>]</index></name> <operator pos:start="87:41" pos:end="87:42">&gt;&gt;</operator> <literal type="number" pos:start="87:44" pos:end="87:44">2</literal> <operator pos:start="87:46" pos:end="87:46">&amp;</operator> <literal type="number" pos:start="87:48" pos:end="87:48">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:49"><expr pos:start="89:17" pos:end="89:48"><name pos:start="89:17" pos:end="89:30"><name pos:start="89:17" pos:end="89:19">dst</name><index pos:start="89:20" pos:end="89:30">[<expr pos:start="89:21" pos:end="89:29"><literal type="number" pos:start="89:21" pos:end="89:21">4</literal> <operator pos:start="89:23" pos:end="89:23">*</operator> <name pos:start="89:25" pos:end="89:25">i</name> <operator pos:start="89:27" pos:end="89:27">+</operator> <literal type="number" pos:start="89:29" pos:end="89:29">3</literal></expr>]</index></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <name pos:start="89:34" pos:end="89:39"><name pos:start="89:34" pos:end="89:36">buf</name><index pos:start="89:37" pos:end="89:39">[<expr pos:start="89:38" pos:end="89:38"><name pos:start="89:38" pos:end="89:38">i</name></expr>]</index></name>      <operator pos:start="89:46" pos:end="89:46">&amp;</operator> <literal type="number" pos:start="89:48" pos:end="89:48">3</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:18"><expr pos:start="95:9" pos:end="95:17"><name pos:start="95:9" pos:end="95:11">buf</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <name pos:start="95:15" pos:end="95:17">dst</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="97:7" pos:end="103:5">else if <condition pos:start="97:15" pos:end="97:25">(<expr pos:start="97:16" pos:end="97:24"><name pos:start="97:16" pos:end="97:24">need_copy</name></expr>)</condition> <block pos:start="97:27" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:34">

        <expr_stmt pos:start="99:9" pos:end="99:79"><expr pos:start="99:9" pos:end="99:78"><call pos:start="99:9" pos:end="99:78"><name pos:start="99:9" pos:end="99:14">memcpy</name><argument_list pos:start="99:15" pos:end="99:78">(<argument pos:start="99:16" pos:end="99:34"><expr pos:start="99:16" pos:end="99:34"><name pos:start="99:16" pos:end="99:28"><name pos:start="99:16" pos:end="99:20">frame</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:25">buf</name><index pos:start="99:26" pos:end="99:28">[<expr pos:start="99:27" pos:end="99:27"><literal type="number" pos:start="99:27" pos:end="99:27">0</literal></expr>]</index></name><operator pos:start="99:29" pos:end="99:30">-&gt;</operator><name pos:start="99:31" pos:end="99:34">data</name></expr></argument>, <argument pos:start="99:37" pos:end="99:39"><expr pos:start="99:37" pos:end="99:39"><name pos:start="99:37" pos:end="99:39">buf</name></expr></argument>, <argument pos:start="99:42" pos:end="99:77"><expr pos:start="99:42" pos:end="99:77"><call pos:start="99:42" pos:end="99:77"><name pos:start="99:42" pos:end="99:46">FFMIN</name><argument_list pos:start="99:47" pos:end="99:77">(<argument pos:start="99:48" pos:end="99:55"><expr pos:start="99:48" pos:end="99:55"><name pos:start="99:48" pos:end="99:55">buf_size</name></expr></argument>, <argument pos:start="99:58" pos:end="99:76"><expr pos:start="99:58" pos:end="99:76"><name pos:start="99:58" pos:end="99:76"><name pos:start="99:58" pos:end="99:64">context</name><operator pos:start="99:65" pos:end="99:66">-&gt;</operator><name pos:start="99:67" pos:end="99:76">frame_size</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:34"><expr pos:start="101:9" pos:end="101:33"><name pos:start="101:9" pos:end="101:11">buf</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <name pos:start="101:15" pos:end="101:27"><name pos:start="101:15" pos:end="101:19">frame</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:24">buf</name><index pos:start="101:25" pos:end="101:27">[<expr pos:start="101:26" pos:end="101:26"><literal type="number" pos:start="101:26" pos:end="101:26">0</literal></expr>]</index></name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:33">data</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="111:46"><if pos:start="107:5" pos:end="111:46">if <condition pos:start="107:8" pos:end="109:54">(<expr pos:start="107:9" pos:end="109:53"><name pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:13">avctx</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:24">codec_tag</name></name> <operator pos:start="107:26" pos:end="107:27">==</operator> <call pos:start="107:29" pos:end="107:53"><name pos:start="107:29" pos:end="107:33">MKTAG</name><argument_list pos:start="107:34" pos:end="107:53">(<argument pos:start="107:35" pos:end="107:37"><expr pos:start="107:35" pos:end="107:37"><literal type="char" pos:start="107:35" pos:end="107:37">'A'</literal></expr></argument>, <argument pos:start="107:40" pos:end="107:42"><expr pos:start="107:40" pos:end="107:42"><literal type="char" pos:start="107:40" pos:end="107:42">'V'</literal></expr></argument>, <argument pos:start="107:45" pos:end="107:47"><expr pos:start="107:45" pos:end="107:47"><literal type="char" pos:start="107:45" pos:end="107:47">'1'</literal></expr></argument>, <argument pos:start="107:50" pos:end="107:52"><expr pos:start="107:50" pos:end="107:52"><literal type="char" pos:start="107:50" pos:end="107:52">'x'</literal></expr></argument>)</argument_list></call> <operator pos:start="107:55" pos:end="107:56">||</operator>

        <name pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:13">avctx</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:24">codec_tag</name></name> <operator pos:start="109:26" pos:end="109:27">==</operator> <call pos:start="109:29" pos:end="109:53"><name pos:start="109:29" pos:end="109:33">MKTAG</name><argument_list pos:start="109:34" pos:end="109:53">(<argument pos:start="109:35" pos:end="109:37"><expr pos:start="109:35" pos:end="109:37"><literal type="char" pos:start="109:35" pos:end="109:37">'A'</literal></expr></argument>, <argument pos:start="109:40" pos:end="109:42"><expr pos:start="109:40" pos:end="109:42"><literal type="char" pos:start="109:40" pos:end="109:42">'V'</literal></expr></argument>, <argument pos:start="109:45" pos:end="109:47"><expr pos:start="109:45" pos:end="109:47"><literal type="char" pos:start="109:45" pos:end="109:47">'u'</literal></expr></argument>, <argument pos:start="109:50" pos:end="109:52"><expr pos:start="109:50" pos:end="109:52"><literal type="char" pos:start="109:50" pos:end="109:52">'p'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:46"><block_content pos:start="111:9" pos:end="111:46">

        <expr_stmt pos:start="111:9" pos:end="111:46"><expr pos:start="111:9" pos:end="111:45"><name pos:start="111:9" pos:end="111:11">buf</name> <operator pos:start="111:13" pos:end="111:14">+=</operator> <name pos:start="111:16" pos:end="111:23">buf_size</name> <operator pos:start="111:25" pos:end="111:25">-</operator> <name pos:start="111:27" pos:end="111:45"><name pos:start="111:27" pos:end="111:33">context</name><operator pos:start="111:34" pos:end="111:35">-&gt;</operator><name pos:start="111:36" pos:end="111:45">frame_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="115:5" pos:end="119:19"><if pos:start="115:5" pos:end="119:19">if <condition pos:start="115:8" pos:end="117:64">(<expr pos:start="115:9" pos:end="117:63"><operator pos:start="115:9" pos:end="115:9">(</operator><name pos:start="115:10" pos:end="115:12">res</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <call pos:start="115:16" pos:end="117:58"><name pos:start="115:16" pos:end="115:29">avpicture_fill</name><argument_list pos:start="115:30" pos:end="117:58">(<argument pos:start="115:31" pos:end="115:37"><expr pos:start="115:31" pos:end="115:37"><name pos:start="115:31" pos:end="115:37">picture</name></expr></argument>, <argument pos:start="115:40" pos:end="115:42"><expr pos:start="115:40" pos:end="115:42"><name pos:start="115:40" pos:end="115:42">buf</name></expr></argument>, <argument pos:start="115:45" pos:end="115:58"><expr pos:start="115:45" pos:end="115:58"><name pos:start="115:45" pos:end="115:58"><name pos:start="115:45" pos:end="115:49">avctx</name><operator pos:start="115:50" pos:end="115:51">-&gt;</operator><name pos:start="115:52" pos:end="115:58">pix_fmt</name></name></expr></argument>,

                              <argument pos:start="117:31" pos:end="117:42"><expr pos:start="117:31" pos:end="117:42"><name pos:start="117:31" pos:end="117:42"><name pos:start="117:31" pos:end="117:35">avctx</name><operator pos:start="117:36" pos:end="117:37">-&gt;</operator><name pos:start="117:38" pos:end="117:42">width</name></name></expr></argument>, <argument pos:start="117:45" pos:end="117:57"><expr pos:start="117:45" pos:end="117:57"><name pos:start="117:45" pos:end="117:57"><name pos:start="117:45" pos:end="117:49">avctx</name><operator pos:start="117:50" pos:end="117:51">-&gt;</operator><name pos:start="117:52" pos:end="117:57">height</name></name></expr></argument>)</argument_list></call><operator pos:start="117:59" pos:end="117:59">)</operator> <operator pos:start="117:61" pos:end="117:61">&lt;</operator> <literal type="number" pos:start="117:63" pos:end="117:63">0</literal></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:19"><block_content pos:start="119:9" pos:end="119:19">

        <return pos:start="119:9" pos:end="119:19">return <expr pos:start="119:16" pos:end="119:18"><name pos:start="119:16" pos:end="119:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="123:5" pos:end="147:5"><if pos:start="123:5" pos:end="147:5">if <condition pos:start="123:8" pos:end="123:42">(<expr pos:start="123:9" pos:end="123:41"><name pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:13">avctx</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:22">pix_fmt</name></name> <operator pos:start="123:24" pos:end="123:25">==</operator> <name pos:start="123:27" pos:end="123:41">AV_PIX_FMT_PAL8</name></expr>)</condition> <block pos:start="123:44" pos:end="147:5">{<block_content pos:start="125:9" pos:end="145:9">

        <decl_stmt pos:start="125:9" pos:end="127:59"><decl pos:start="125:9" pos:end="127:58"><type pos:start="125:9" pos:end="125:23"><specifier pos:start="125:9" pos:end="125:13">const</specifier> <name pos:start="125:15" pos:end="125:21">uint8_t</name> <modifier pos:start="125:23" pos:end="125:23">*</modifier></type><name pos:start="125:24" pos:end="125:26">pal</name> <init pos:start="125:28" pos:end="127:58">= <expr pos:start="125:30" pos:end="127:58"><call pos:start="125:30" pos:end="127:58"><name pos:start="125:30" pos:end="125:52">av_packet_get_side_data</name><argument_list pos:start="125:53" pos:end="127:58">(<argument pos:start="125:54" pos:end="125:58"><expr pos:start="125:54" pos:end="125:58"><name pos:start="125:54" pos:end="125:58">avpkt</name></expr></argument>, <argument pos:start="125:61" pos:end="125:79"><expr pos:start="125:61" pos:end="125:79"><name pos:start="125:61" pos:end="125:79">AV_PKT_DATA_PALETTE</name></expr></argument>,

                                                     <argument pos:start="127:54" pos:end="127:57"><expr pos:start="127:54" pos:end="127:57"><name pos:start="127:54" pos:end="127:57">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="131:9" pos:end="145:9"><if pos:start="131:9" pos:end="145:9">if <condition pos:start="131:12" pos:end="131:16">(<expr pos:start="131:13" pos:end="131:15"><name pos:start="131:13" pos:end="131:15">pal</name></expr>)</condition> <block pos:start="131:18" pos:end="145:9">{<block_content pos:start="133:13" pos:end="143:43">

            <expr_stmt pos:start="133:13" pos:end="133:47"><expr pos:start="133:13" pos:end="133:46"><call pos:start="133:13" pos:end="133:46"><name pos:start="133:13" pos:end="133:27">av_buffer_unref</name><argument_list pos:start="133:28" pos:end="133:46">(<argument pos:start="133:29" pos:end="133:45"><expr pos:start="133:29" pos:end="133:45"><operator pos:start="133:29" pos:end="133:29">&amp;</operator><name pos:start="133:30" pos:end="133:45"><name pos:start="133:30" pos:end="133:36">context</name><operator pos:start="133:37" pos:end="133:38">-&gt;</operator><name pos:start="133:39" pos:end="133:45">palette</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:63"><expr pos:start="135:13" pos:end="135:62"><name pos:start="135:13" pos:end="135:28"><name pos:start="135:13" pos:end="135:19">context</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:28">palette</name></name> <operator pos:start="135:30" pos:end="135:30">=</operator> <call pos:start="135:32" pos:end="135:62"><name pos:start="135:32" pos:end="135:46">av_buffer_alloc</name><argument_list pos:start="135:47" pos:end="135:62">(<argument pos:start="135:48" pos:end="135:61"><expr pos:start="135:48" pos:end="135:61"><name pos:start="135:48" pos:end="135:61">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="137:13" pos:end="139:39"><if pos:start="137:13" pos:end="139:39">if <condition pos:start="137:16" pos:end="137:34">(<expr pos:start="137:17" pos:end="137:33"><operator pos:start="137:17" pos:end="137:17">!</operator><name pos:start="137:18" pos:end="137:33"><name pos:start="137:18" pos:end="137:24">context</name><operator pos:start="137:25" pos:end="137:26">-&gt;</operator><name pos:start="137:27" pos:end="137:33">palette</name></name></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:39"><block_content pos:start="139:17" pos:end="139:39">

                <return pos:start="139:17" pos:end="139:39">return <expr pos:start="139:24" pos:end="139:38"><call pos:start="139:24" pos:end="139:38"><name pos:start="139:24" pos:end="139:30">AVERROR</name><argument_list pos:start="139:31" pos:end="139:38">(<argument pos:start="139:32" pos:end="139:37"><expr pos:start="139:32" pos:end="139:37"><name pos:start="139:32" pos:end="139:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:64"><expr pos:start="141:13" pos:end="141:63"><call pos:start="141:13" pos:end="141:63"><name pos:start="141:13" pos:end="141:18">memcpy</name><argument_list pos:start="141:19" pos:end="141:63">(<argument pos:start="141:20" pos:end="141:41"><expr pos:start="141:20" pos:end="141:41"><name pos:start="141:20" pos:end="141:41"><name pos:start="141:20" pos:end="141:26">context</name><operator pos:start="141:27" pos:end="141:28">-&gt;</operator><name pos:start="141:29" pos:end="141:35">palette</name><operator pos:start="141:36" pos:end="141:37">-&gt;</operator><name pos:start="141:38" pos:end="141:41">data</name></name></expr></argument>, <argument pos:start="141:44" pos:end="141:46"><expr pos:start="141:44" pos:end="141:46"><name pos:start="141:44" pos:end="141:46">pal</name></expr></argument>, <argument pos:start="141:49" pos:end="141:62"><expr pos:start="141:49" pos:end="141:62"><name pos:start="141:49" pos:end="141:62">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:43"><expr pos:start="143:13" pos:end="143:42"><name pos:start="143:13" pos:end="143:38"><name pos:start="143:13" pos:end="143:17">frame</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:38">palette_has_changed</name></name> <operator pos:start="143:40" pos:end="143:40">=</operator> <literal type="number" pos:start="143:42" pos:end="143:42">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="151:5" pos:end="163:5"><if pos:start="151:5" pos:end="163:5">if <condition pos:start="151:8" pos:end="153:50">(<expr pos:start="151:9" pos:end="153:49"><operator pos:start="151:9" pos:end="151:9">(</operator><name pos:start="151:10" pos:end="151:23"><name pos:start="151:10" pos:end="151:14">avctx</name><operator pos:start="151:15" pos:end="151:16">-&gt;</operator><name pos:start="151:17" pos:end="151:23">pix_fmt</name></name> <operator pos:start="151:25" pos:end="151:26">==</operator> <name pos:start="151:28" pos:end="151:42">AV_PIX_FMT_PAL8</name> <operator pos:start="151:44" pos:end="151:45">&amp;&amp;</operator> <name pos:start="151:47" pos:end="151:54">buf_size</name> <operator pos:start="151:56" pos:end="151:56">&lt;</operator> <name pos:start="151:58" pos:end="151:76"><name pos:start="151:58" pos:end="151:64">context</name><operator pos:start="151:65" pos:end="151:66">-&gt;</operator><name pos:start="151:67" pos:end="151:76">frame_size</name></name><operator pos:start="151:77" pos:end="151:77">)</operator> <operator pos:start="151:79" pos:end="151:80">||</operator>

        <operator pos:start="153:9" pos:end="153:9">(</operator><name pos:start="153:10" pos:end="153:20"><name pos:start="153:10" pos:end="153:13">desc</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:20">flags</name></name> <operator pos:start="153:22" pos:end="153:22">&amp;</operator> <name pos:start="153:24" pos:end="153:48">AV_PIX_FMT_FLAG_PSEUDOPAL</name><operator pos:start="153:49" pos:end="153:49">)</operator></expr>)</condition> <block pos:start="153:52" pos:end="163:5">{<block_content pos:start="155:9" pos:end="161:45">

        <expr_stmt pos:start="155:9" pos:end="155:57"><expr pos:start="155:9" pos:end="155:56"><name pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:13">frame</name><operator pos:start="155:14" pos:end="155:15">-&gt;</operator><name pos:start="155:16" pos:end="155:18">buf</name><index pos:start="155:19" pos:end="155:21">[<expr pos:start="155:20" pos:end="155:20"><literal type="number" pos:start="155:20" pos:end="155:20">1</literal></expr>]</index></name>  <operator pos:start="155:24" pos:end="155:24">=</operator> <call pos:start="155:26" pos:end="155:56"><name pos:start="155:26" pos:end="155:38">av_buffer_ref</name><argument_list pos:start="155:39" pos:end="155:56">(<argument pos:start="155:40" pos:end="155:55"><expr pos:start="155:40" pos:end="155:55"><name pos:start="155:40" pos:end="155:55"><name pos:start="155:40" pos:end="155:46">context</name><operator pos:start="155:47" pos:end="155:48">-&gt;</operator><name pos:start="155:49" pos:end="155:55">palette</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="159:35"><if pos:start="157:9" pos:end="159:35">if <condition pos:start="157:12" pos:end="157:27">(<expr pos:start="157:13" pos:end="157:26"><operator pos:start="157:13" pos:end="157:13">!</operator><name pos:start="157:14" pos:end="157:26"><name pos:start="157:14" pos:end="157:18">frame</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:23">buf</name><index pos:start="157:24" pos:end="157:26">[<expr pos:start="157:25" pos:end="157:25"><literal type="number" pos:start="157:25" pos:end="157:25">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:35"><block_content pos:start="159:13" pos:end="159:35">

            <return pos:start="159:13" pos:end="159:35">return <expr pos:start="159:20" pos:end="159:34"><call pos:start="159:20" pos:end="159:34"><name pos:start="159:20" pos:end="159:26">AVERROR</name><argument_list pos:start="159:27" pos:end="159:34">(<argument pos:start="159:28" pos:end="159:33"><expr pos:start="159:28" pos:end="159:33"><name pos:start="159:28" pos:end="159:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:45"><expr pos:start="161:9" pos:end="161:44"><name pos:start="161:9" pos:end="161:22"><name pos:start="161:9" pos:end="161:13">frame</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:19">data</name><index pos:start="161:20" pos:end="161:22">[<expr pos:start="161:21" pos:end="161:21"><literal type="number" pos:start="161:21" pos:end="161:21">1</literal></expr>]</index></name> <operator pos:start="161:24" pos:end="161:24">=</operator> <name pos:start="161:26" pos:end="161:38"><name pos:start="161:26" pos:end="161:30">frame</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:35">buf</name><index pos:start="161:36" pos:end="161:38">[<expr pos:start="161:37" pos:end="161:37"><literal type="number" pos:start="161:37" pos:end="161:37">1</literal></expr>]</index></name><operator pos:start="161:39" pos:end="161:40">-&gt;</operator><name pos:start="161:41" pos:end="161:44">data</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="165:5" pos:end="169:59"><if pos:start="165:5" pos:end="169:59">if <condition pos:start="165:8" pos:end="167:68">(<expr pos:start="165:9" pos:end="167:67"><name pos:start="165:9" pos:end="165:22"><name pos:start="165:9" pos:end="165:13">avctx</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:22">pix_fmt</name></name> <operator pos:start="165:24" pos:end="165:25">==</operator> <name pos:start="165:27" pos:end="165:42">AV_PIX_FMT_BGR24</name> <operator pos:start="165:44" pos:end="165:45">&amp;&amp;</operator>

        <operator pos:start="167:9" pos:end="167:9">(</operator><operator pos:start="167:10" pos:end="167:10">(</operator><name pos:start="167:11" pos:end="167:28"><name pos:start="167:11" pos:end="167:15">frame</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:25">linesize</name><index pos:start="167:26" pos:end="167:28">[<expr pos:start="167:27" pos:end="167:27"><literal type="number" pos:start="167:27" pos:end="167:27">0</literal></expr>]</index></name> <operator pos:start="167:30" pos:end="167:30">+</operator> <literal type="number" pos:start="167:32" pos:end="167:32">3</literal><operator pos:start="167:33" pos:end="167:33">)</operator> <operator pos:start="167:35" pos:end="167:35">&amp;</operator> <operator pos:start="167:37" pos:end="167:37">~</operator><literal type="number" pos:start="167:38" pos:end="167:38">3</literal><operator pos:start="167:39" pos:end="167:39">)</operator> <operator pos:start="167:41" pos:end="167:41">*</operator> <name pos:start="167:43" pos:end="167:55"><name pos:start="167:43" pos:end="167:47">avctx</name><operator pos:start="167:48" pos:end="167:49">-&gt;</operator><name pos:start="167:50" pos:end="167:55">height</name></name> <operator pos:start="167:57" pos:end="167:58">&lt;=</operator> <name pos:start="167:60" pos:end="167:67">buf_size</name></expr>)</condition><block type="pseudo" pos:start="169:9" pos:end="169:59"><block_content pos:start="169:9" pos:end="169:59">

        <expr_stmt pos:start="169:9" pos:end="169:59"><expr pos:start="169:9" pos:end="169:58"><name pos:start="169:9" pos:end="169:26"><name pos:start="169:9" pos:end="169:13">frame</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:23">linesize</name><index pos:start="169:24" pos:end="169:26">[<expr pos:start="169:25" pos:end="169:25"><literal type="number" pos:start="169:25" pos:end="169:25">0</literal></expr>]</index></name> <operator pos:start="169:28" pos:end="169:28">=</operator> <operator pos:start="169:30" pos:end="169:30">(</operator><name pos:start="169:31" pos:end="169:48"><name pos:start="169:31" pos:end="169:35">frame</name><operator pos:start="169:36" pos:end="169:37">-&gt;</operator><name pos:start="169:38" pos:end="169:45">linesize</name><index pos:start="169:46" pos:end="169:48">[<expr pos:start="169:47" pos:end="169:47"><literal type="number" pos:start="169:47" pos:end="169:47">0</literal></expr>]</index></name> <operator pos:start="169:50" pos:end="169:50">+</operator> <literal type="number" pos:start="169:52" pos:end="169:52">3</literal><operator pos:start="169:53" pos:end="169:53">)</operator> <operator pos:start="169:55" pos:end="169:55">&amp;</operator> <operator pos:start="169:57" pos:end="169:57">~</operator><literal type="number" pos:start="169:58" pos:end="169:58">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="173:5" pos:end="175:29"><if pos:start="173:5" pos:end="175:29">if <condition pos:start="173:8" pos:end="173:22">(<expr pos:start="173:9" pos:end="173:21"><name pos:start="173:9" pos:end="173:21"><name pos:start="173:9" pos:end="173:15">context</name><operator pos:start="173:16" pos:end="173:17">-&gt;</operator><name pos:start="173:18" pos:end="173:21">flip</name></name></expr>)</condition><block type="pseudo" pos:start="175:9" pos:end="175:29"><block_content pos:start="175:9" pos:end="175:29">

        <expr_stmt pos:start="175:9" pos:end="175:29"><expr pos:start="175:9" pos:end="175:28"><call pos:start="175:9" pos:end="175:28"><name pos:start="175:9" pos:end="175:12">flip</name><argument_list pos:start="175:13" pos:end="175:28">(<argument pos:start="175:14" pos:end="175:18"><expr pos:start="175:14" pos:end="175:18"><name pos:start="175:14" pos:end="175:18">avctx</name></expr></argument>, <argument pos:start="175:21" pos:end="175:27"><expr pos:start="175:21" pos:end="175:27"><name pos:start="175:21" pos:end="175:27">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="179:5" pos:end="187:62"><if pos:start="179:5" pos:end="187:62">if <condition pos:start="179:8" pos:end="185:54">(<expr pos:start="179:9" pos:end="185:53"><name pos:start="179:9" pos:end="179:24"><name pos:start="179:9" pos:end="179:13">avctx</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:24">codec_tag</name></name> <operator pos:start="179:26" pos:end="179:27">==</operator> <call pos:start="179:29" pos:end="179:53"><name pos:start="179:29" pos:end="179:33">MKTAG</name><argument_list pos:start="179:34" pos:end="179:53">(<argument pos:start="179:35" pos:end="179:37"><expr pos:start="179:35" pos:end="179:37"><literal type="char" pos:start="179:35" pos:end="179:37">'Y'</literal></expr></argument>, <argument pos:start="179:40" pos:end="179:42"><expr pos:start="179:40" pos:end="179:42"><literal type="char" pos:start="179:40" pos:end="179:42">'V'</literal></expr></argument>, <argument pos:start="179:45" pos:end="179:47"><expr pos:start="179:45" pos:end="179:47"><literal type="char" pos:start="179:45" pos:end="179:47">'1'</literal></expr></argument>, <argument pos:start="179:50" pos:end="179:52"><expr pos:start="179:50" pos:end="179:52"><literal type="char" pos:start="179:50" pos:end="179:52">'2'</literal></expr></argument>)</argument_list></call> <operator pos:start="179:55" pos:end="179:56">||</operator>

        <name pos:start="181:9" pos:end="181:24"><name pos:start="181:9" pos:end="181:13">avctx</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:24">codec_tag</name></name> <operator pos:start="181:26" pos:end="181:27">==</operator> <call pos:start="181:29" pos:end="181:53"><name pos:start="181:29" pos:end="181:33">MKTAG</name><argument_list pos:start="181:34" pos:end="181:53">(<argument pos:start="181:35" pos:end="181:37"><expr pos:start="181:35" pos:end="181:37"><literal type="char" pos:start="181:35" pos:end="181:37">'Y'</literal></expr></argument>, <argument pos:start="181:40" pos:end="181:42"><expr pos:start="181:40" pos:end="181:42"><literal type="char" pos:start="181:40" pos:end="181:42">'V'</literal></expr></argument>, <argument pos:start="181:45" pos:end="181:47"><expr pos:start="181:45" pos:end="181:47"><literal type="char" pos:start="181:45" pos:end="181:47">'1'</literal></expr></argument>, <argument pos:start="181:50" pos:end="181:52"><expr pos:start="181:50" pos:end="181:52"><literal type="char" pos:start="181:50" pos:end="181:52">'6'</literal></expr></argument>)</argument_list></call> <operator pos:start="181:55" pos:end="181:56">||</operator>

        <name pos:start="183:9" pos:end="183:24"><name pos:start="183:9" pos:end="183:13">avctx</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:24">codec_tag</name></name> <operator pos:start="183:26" pos:end="183:27">==</operator> <call pos:start="183:29" pos:end="183:53"><name pos:start="183:29" pos:end="183:33">MKTAG</name><argument_list pos:start="183:34" pos:end="183:53">(<argument pos:start="183:35" pos:end="183:37"><expr pos:start="183:35" pos:end="183:37"><literal type="char" pos:start="183:35" pos:end="183:37">'Y'</literal></expr></argument>, <argument pos:start="183:40" pos:end="183:42"><expr pos:start="183:40" pos:end="183:42"><literal type="char" pos:start="183:40" pos:end="183:42">'V'</literal></expr></argument>, <argument pos:start="183:45" pos:end="183:47"><expr pos:start="183:45" pos:end="183:47"><literal type="char" pos:start="183:45" pos:end="183:47">'2'</literal></expr></argument>, <argument pos:start="183:50" pos:end="183:52"><expr pos:start="183:50" pos:end="183:52"><literal type="char" pos:start="183:50" pos:end="183:52">'4'</literal></expr></argument>)</argument_list></call> <operator pos:start="183:55" pos:end="183:56">||</operator>

        <name pos:start="185:9" pos:end="185:24"><name pos:start="185:9" pos:end="185:13">avctx</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:24">codec_tag</name></name> <operator pos:start="185:26" pos:end="185:27">==</operator> <call pos:start="185:29" pos:end="185:53"><name pos:start="185:29" pos:end="185:33">MKTAG</name><argument_list pos:start="185:34" pos:end="185:53">(<argument pos:start="185:35" pos:end="185:37"><expr pos:start="185:35" pos:end="185:37"><literal type="char" pos:start="185:35" pos:end="185:37">'Y'</literal></expr></argument>, <argument pos:start="185:40" pos:end="185:42"><expr pos:start="185:40" pos:end="185:42"><literal type="char" pos:start="185:40" pos:end="185:42">'V'</literal></expr></argument>, <argument pos:start="185:45" pos:end="185:47"><expr pos:start="185:45" pos:end="185:47"><literal type="char" pos:start="185:45" pos:end="185:47">'U'</literal></expr></argument>, <argument pos:start="185:50" pos:end="185:52"><expr pos:start="185:50" pos:end="185:52"><literal type="char" pos:start="185:50" pos:end="185:52">'9'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="187:9" pos:end="187:62"><block_content pos:start="187:9" pos:end="187:62">

        <expr_stmt pos:start="187:9" pos:end="187:62"><expr pos:start="187:9" pos:end="187:61"><call pos:start="187:9" pos:end="187:61"><name pos:start="187:9" pos:end="187:14">FFSWAP</name><argument_list pos:start="187:15" pos:end="187:61">(<argument pos:start="187:16" pos:end="187:24"><expr pos:start="187:16" pos:end="187:24"><name pos:start="187:16" pos:end="187:22">uint8_t</name> <operator pos:start="187:24" pos:end="187:24">*</operator></expr></argument>, <argument pos:start="187:27" pos:end="187:42"><expr pos:start="187:27" pos:end="187:42"><name pos:start="187:27" pos:end="187:42"><name pos:start="187:27" pos:end="187:33">picture</name><operator pos:start="187:34" pos:end="187:35">-&gt;</operator><name pos:start="187:36" pos:end="187:39">data</name><index pos:start="187:40" pos:end="187:42">[<expr pos:start="187:41" pos:end="187:41"><literal type="number" pos:start="187:41" pos:end="187:41">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="187:45" pos:end="187:60"><expr pos:start="187:45" pos:end="187:60"><name pos:start="187:45" pos:end="187:60"><name pos:start="187:45" pos:end="187:51">picture</name><operator pos:start="187:52" pos:end="187:53">-&gt;</operator><name pos:start="187:54" pos:end="187:57">data</name><index pos:start="187:58" pos:end="187:60">[<expr pos:start="187:59" pos:end="187:59"><literal type="number" pos:start="187:59" pos:end="187:59">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="191:5" pos:end="209:5"><if pos:start="191:5" pos:end="209:5">if <condition pos:start="191:8" pos:end="193:47">(<expr pos:start="191:9" pos:end="193:46"><name pos:start="191:9" pos:end="191:24"><name pos:start="191:9" pos:end="191:13">avctx</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:24">codec_tag</name></name> <operator pos:start="191:26" pos:end="191:27">==</operator> <call pos:start="191:29" pos:end="191:43"><name pos:start="191:29" pos:end="191:35">AV_RL32</name><argument_list pos:start="191:36" pos:end="191:43">(<argument pos:start="191:37" pos:end="191:42"><expr pos:start="191:37" pos:end="191:42"><literal type="string" pos:start="191:37" pos:end="191:42">"yuv2"</literal></expr></argument>)</argument_list></call> <operator pos:start="191:45" pos:end="191:46">&amp;&amp;</operator>

        <name pos:start="193:9" pos:end="193:22"><name pos:start="193:9" pos:end="193:13">avctx</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:22">pix_fmt</name></name>   <operator pos:start="193:26" pos:end="193:27">==</operator> <name pos:start="193:29" pos:end="193:46">AV_PIX_FMT_YUYV422</name></expr>)</condition> <block pos:start="193:49" pos:end="209:5">{<block_content pos:start="195:9" pos:end="207:9">

        <decl_stmt pos:start="195:9" pos:end="195:17"><decl pos:start="195:9" pos:end="195:13"><type pos:start="195:9" pos:end="195:11"><name pos:start="195:9" pos:end="195:11">int</name></type> <name pos:start="195:13" pos:end="195:13">x</name></decl>, <decl pos:start="195:16" pos:end="195:16"><type ref="prev" pos:start="195:9" pos:end="195:11"/><name pos:start="195:16" pos:end="195:16">y</name></decl>;</decl_stmt>

        <decl_stmt pos:start="197:9" pos:end="197:41"><decl pos:start="197:9" pos:end="197:40"><type pos:start="197:9" pos:end="197:17"><name pos:start="197:9" pos:end="197:15">uint8_t</name> <modifier pos:start="197:17" pos:end="197:17">*</modifier></type><name pos:start="197:18" pos:end="197:21">line</name> <init pos:start="197:23" pos:end="197:40">= <expr pos:start="197:25" pos:end="197:40"><name pos:start="197:25" pos:end="197:40"><name pos:start="197:25" pos:end="197:31">picture</name><operator pos:start="197:32" pos:end="197:33">-&gt;</operator><name pos:start="197:34" pos:end="197:37">data</name><index pos:start="197:38" pos:end="197:40">[<expr pos:start="197:39" pos:end="197:39"><literal type="number" pos:start="197:39" pos:end="197:39">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="199:9" pos:end="207:9">for <control pos:start="199:13" pos:end="199:43">(<init pos:start="199:14" pos:end="199:19"><expr pos:start="199:14" pos:end="199:18"><name pos:start="199:14" pos:end="199:14">y</name> <operator pos:start="199:16" pos:end="199:16">=</operator> <literal type="number" pos:start="199:18" pos:end="199:18">0</literal></expr>;</init> <condition pos:start="199:21" pos:end="199:38"><expr pos:start="199:21" pos:end="199:37"><name pos:start="199:21" pos:end="199:21">y</name> <operator pos:start="199:23" pos:end="199:23">&lt;</operator> <name pos:start="199:25" pos:end="199:37"><name pos:start="199:25" pos:end="199:29">avctx</name><operator pos:start="199:30" pos:end="199:31">-&gt;</operator><name pos:start="199:32" pos:end="199:37">height</name></name></expr>;</condition> <incr pos:start="199:40" pos:end="199:42"><expr pos:start="199:40" pos:end="199:42"><name pos:start="199:40" pos:end="199:40">y</name><operator pos:start="199:41" pos:end="199:42">++</operator></expr></incr>)</control> <block pos:start="199:45" pos:end="207:9">{<block_content pos:start="201:13" pos:end="205:41">

            <for pos:start="201:13" pos:end="203:40">for <control pos:start="201:17" pos:end="201:46">(<init pos:start="201:18" pos:end="201:23"><expr pos:start="201:18" pos:end="201:22"><name pos:start="201:18" pos:end="201:18">x</name> <operator pos:start="201:20" pos:end="201:20">=</operator> <literal type="number" pos:start="201:22" pos:end="201:22">0</literal></expr>;</init> <condition pos:start="201:25" pos:end="201:41"><expr pos:start="201:25" pos:end="201:40"><name pos:start="201:25" pos:end="201:25">x</name> <operator pos:start="201:27" pos:end="201:27">&lt;</operator> <name pos:start="201:29" pos:end="201:40"><name pos:start="201:29" pos:end="201:33">avctx</name><operator pos:start="201:34" pos:end="201:35">-&gt;</operator><name pos:start="201:36" pos:end="201:40">width</name></name></expr>;</condition> <incr pos:start="201:43" pos:end="201:45"><expr pos:start="201:43" pos:end="201:45"><name pos:start="201:43" pos:end="201:43">x</name><operator pos:start="201:44" pos:end="201:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="203:17" pos:end="203:40"><block_content pos:start="203:17" pos:end="203:40">

                <expr_stmt pos:start="203:17" pos:end="203:40"><expr pos:start="203:17" pos:end="203:39"><name pos:start="203:17" pos:end="203:31"><name pos:start="203:17" pos:end="203:20">line</name><index pos:start="203:21" pos:end="203:31">[<expr pos:start="203:22" pos:end="203:30"><literal type="number" pos:start="203:22" pos:end="203:22">2</literal> <operator pos:start="203:24" pos:end="203:24">*</operator> <name pos:start="203:26" pos:end="203:26">x</name> <operator pos:start="203:28" pos:end="203:28">+</operator> <literal type="number" pos:start="203:30" pos:end="203:30">1</literal></expr>]</index></name> <operator pos:start="203:33" pos:end="203:34">^=</operator> <literal type="number" pos:start="203:36" pos:end="203:39">0x80</literal></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="205:13" pos:end="205:41"><expr pos:start="205:13" pos:end="205:40"><name pos:start="205:13" pos:end="205:16">line</name> <operator pos:start="205:18" pos:end="205:19">+=</operator> <name pos:start="205:21" pos:end="205:40"><name pos:start="205:21" pos:end="205:27">picture</name><operator pos:start="205:28" pos:end="205:29">-&gt;</operator><name pos:start="205:30" pos:end="205:37">linesize</name><index pos:start="205:38" pos:end="205:40">[<expr pos:start="205:39" pos:end="205:39"><literal type="number" pos:start="205:39" pos:end="205:39">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="213:5" pos:end="213:19"><expr pos:start="213:5" pos:end="213:18"><operator pos:start="213:5" pos:end="213:5">*</operator><name pos:start="213:6" pos:end="213:14">got_frame</name> <operator pos:start="213:16" pos:end="213:16">=</operator> <literal type="number" pos:start="213:18" pos:end="213:18">1</literal></expr>;</expr_stmt>

    <return pos:start="215:5" pos:end="215:20">return <expr pos:start="215:12" pos:end="215:19"><name pos:start="215:12" pos:end="215:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
