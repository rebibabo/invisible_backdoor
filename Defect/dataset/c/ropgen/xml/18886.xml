<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18886.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:20">do_rt_sigreturn</name><parameter_list pos:start="1:21" pos:end="1:38">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:32">CPUX86State</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:9" pos:end="53:17">

        <decl_stmt pos:start="5:9" pos:end="5:29"><decl pos:start="5:9" pos:end="5:28"><type pos:start="5:9" pos:end="5:17"><name pos:start="5:9" pos:end="5:17">abi_ulong</name></type> <name pos:start="5:19" pos:end="5:28">frame_addr</name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:34"><decl pos:start="7:9" pos:end="7:33"><type pos:start="7:9" pos:end="7:28"><name pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:14">struct</name> <name pos:start="7:16" pos:end="7:26">rt_sigframe</name></name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:33">frame</name></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:21"><decl pos:start="9:9" pos:end="9:20"><type pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:16">sigset_t</name></type> <name pos:start="9:18" pos:end="9:20">set</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:16"><decl pos:start="11:9" pos:end="11:15"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:15">eax</name></decl>;</decl_stmt>



        <expr_stmt pos:start="15:9" pos:end="15:42"><expr pos:start="15:9" pos:end="15:41"><name pos:start="15:9" pos:end="15:18">frame_addr</name> <operator pos:start="15:20" pos:end="15:20">=</operator> <name pos:start="15:22" pos:end="15:37"><name pos:start="15:22" pos:end="15:24">env</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:30">regs</name><index pos:start="15:31" pos:end="15:37">[<expr pos:start="15:32" pos:end="15:36"><name pos:start="15:32" pos:end="15:36">R_ESP</name></expr>]</index></name> <operator pos:start="15:39" pos:end="15:39">-</operator> <literal type="number" pos:start="15:41" pos:end="15:41">4</literal></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="19:30"><if pos:start="17:9" pos:end="19:30">if <condition pos:start="17:12" pos:end="17:65">(<expr pos:start="17:13" pos:end="17:64"><operator pos:start="17:13" pos:end="17:13">!</operator><call pos:start="17:14" pos:end="17:64"><name pos:start="17:14" pos:end="17:29">lock_user_struct</name><argument_list pos:start="17:30" pos:end="17:64">(<argument pos:start="17:31" pos:end="17:41"><expr pos:start="17:31" pos:end="17:41"><name pos:start="17:31" pos:end="17:41">VERIFY_READ</name></expr></argument>, <argument pos:start="17:44" pos:end="17:48"><expr pos:start="17:44" pos:end="17:48"><name pos:start="17:44" pos:end="17:48">frame</name></expr></argument>, <argument pos:start="17:51" pos:end="17:60"><expr pos:start="17:51" pos:end="17:60"><name pos:start="17:51" pos:end="17:60">frame_addr</name></expr></argument>, <argument pos:start="17:63" pos:end="17:63"><expr pos:start="17:63" pos:end="17:63"><literal type="number" pos:start="17:63" pos:end="17:63">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:17" pos:end="19:30"><block_content pos:start="19:17" pos:end="19:30">

                <goto pos:start="19:17" pos:end="19:30">goto <name pos:start="19:22" pos:end="19:29">badframe</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:60"><expr pos:start="21:9" pos:end="21:59"><call pos:start="21:9" pos:end="21:59"><name pos:start="21:9" pos:end="21:29">target_to_host_sigset</name><argument_list pos:start="21:30" pos:end="21:59">(<argument pos:start="21:31" pos:end="21:34"><expr pos:start="21:31" pos:end="21:34"><operator pos:start="21:31" pos:end="21:31">&amp;</operator><name pos:start="21:32" pos:end="21:34">set</name></expr></argument>, <argument pos:start="21:37" pos:end="21:58"><expr pos:start="21:37" pos:end="21:58"><operator pos:start="21:37" pos:end="21:37">&amp;</operator><name pos:start="21:38" pos:end="21:58"><name pos:start="21:38" pos:end="21:42">frame</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:46">uc</name><operator pos:start="21:47" pos:end="21:47">.</operator><name pos:start="21:48" pos:end="21:58">tuc_sigmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:45"><expr pos:start="23:9" pos:end="23:44"><call pos:start="23:9" pos:end="23:44"><name pos:start="23:9" pos:end="23:19">sigprocmask</name><argument_list pos:start="23:20" pos:end="23:44">(<argument pos:start="23:21" pos:end="23:31"><expr pos:start="23:21" pos:end="23:31"><name pos:start="23:21" pos:end="23:31">SIG_SETMASK</name></expr></argument>, <argument pos:start="23:34" pos:end="23:37"><expr pos:start="23:34" pos:end="23:37"><operator pos:start="23:34" pos:end="23:34">&amp;</operator><name pos:start="23:35" pos:end="23:37">set</name></expr></argument>, <argument pos:start="23:40" pos:end="23:43"><expr pos:start="23:40" pos:end="23:43"><name pos:start="23:40" pos:end="23:43">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<if_stmt pos:start="27:9" pos:end="29:30"><if pos:start="27:9" pos:end="29:30">if <condition pos:start="27:12" pos:end="27:67">(<expr pos:start="27:13" pos:end="27:66"><call pos:start="27:13" pos:end="27:66"><name pos:start="27:13" pos:end="27:30">restore_sigcontext</name><argument_list pos:start="27:31" pos:end="27:66">(<argument pos:start="27:32" pos:end="27:34"><expr pos:start="27:32" pos:end="27:34"><name pos:start="27:32" pos:end="27:34">env</name></expr></argument>, <argument pos:start="27:37" pos:end="27:59"><expr pos:start="27:37" pos:end="27:59"><operator pos:start="27:37" pos:end="27:37">&amp;</operator><name pos:start="27:38" pos:end="27:59"><name pos:start="27:38" pos:end="27:42">frame</name><operator pos:start="27:43" pos:end="27:44">-&gt;</operator><name pos:start="27:45" pos:end="27:46">uc</name><operator pos:start="27:47" pos:end="27:47">.</operator><name pos:start="27:48" pos:end="27:59">tuc_mcontext</name></name></expr></argument>, <argument pos:start="27:62" pos:end="27:65"><expr pos:start="27:62" pos:end="27:65"><operator pos:start="27:62" pos:end="27:62">&amp;</operator><name pos:start="27:63" pos:end="27:65">eax</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:30"><block_content pos:start="29:17" pos:end="29:30">

		<goto pos:start="29:17" pos:end="29:30">goto <name pos:start="29:22" pos:end="29:29">badframe</name>;</goto></block_content></block></if></if_stmt>



	<if_stmt pos:start="33:9" pos:end="37:30"><if pos:start="33:9" pos:end="37:30">if <condition pos:start="33:12" pos:end="35:65">(<expr pos:start="33:13" pos:end="35:64"><call pos:start="33:13" pos:end="35:53"><name pos:start="33:13" pos:end="33:26">do_sigaltstack</name><argument_list pos:start="33:27" pos:end="35:53">(<argument pos:start="33:28" pos:end="33:82"><expr pos:start="33:28" pos:end="33:82"><name pos:start="33:28" pos:end="33:37">frame_addr</name> <operator pos:start="33:39" pos:end="33:39">+</operator> <call pos:start="33:41" pos:end="33:82"><name pos:start="33:41" pos:end="33:48">offsetof</name><argument_list pos:start="33:49" pos:end="33:82">(<argument pos:start="33:50" pos:end="33:67"><expr pos:start="33:50" pos:end="33:67">struct <name pos:start="33:57" pos:end="33:67">rt_sigframe</name></expr></argument>, <argument pos:start="33:70" pos:end="33:81"><expr pos:start="33:70" pos:end="33:81"><name pos:start="33:70" pos:end="33:81"><name pos:start="33:70" pos:end="33:71">uc</name><operator pos:start="33:72" pos:end="33:72">.</operator><name pos:start="33:73" pos:end="33:81">tuc_stack</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:85" pos:end="33:85"><expr pos:start="33:85" pos:end="33:85"><literal type="number" pos:start="33:85" pos:end="33:85">0</literal></expr></argument>, 

                           <argument pos:start="35:28" pos:end="35:52"><expr pos:start="35:28" pos:end="35:52"><call pos:start="35:28" pos:end="35:52"><name pos:start="35:28" pos:end="35:47">get_sp_from_cpustate</name><argument_list pos:start="35:48" pos:end="35:52">(<argument pos:start="35:49" pos:end="35:51"><expr pos:start="35:49" pos:end="35:51"><name pos:start="35:49" pos:end="35:51">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="35:55" pos:end="35:56">==</operator> <operator pos:start="35:58" pos:end="35:58">-</operator><name pos:start="35:59" pos:end="35:64">EFAULT</name></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:30"><block_content pos:start="37:17" pos:end="37:30">

		<goto pos:start="37:17" pos:end="37:30">goto <name pos:start="37:22" pos:end="37:29">badframe</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><call pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:26">unlock_user_struct</name><argument_list pos:start="41:27" pos:end="41:48">(<argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><name pos:start="41:28" pos:end="41:32">frame</name></expr></argument>, <argument pos:start="41:35" pos:end="41:44"><expr pos:start="41:35" pos:end="41:44"><name pos:start="41:35" pos:end="41:44">frame_addr</name></expr></argument>, <argument pos:start="41:47" pos:end="41:47"><expr pos:start="41:47" pos:end="41:47"><literal type="number" pos:start="41:47" pos:end="41:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">eax</name></expr>;</return>



<label pos:start="47:1" pos:end="47:9"><name pos:start="47:1" pos:end="47:8">badframe</name>:</label>

        <expr_stmt pos:start="49:9" pos:end="49:49"><expr pos:start="49:9" pos:end="49:48"><call pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:26">unlock_user_struct</name><argument_list pos:start="49:27" pos:end="49:48">(<argument pos:start="49:28" pos:end="49:32"><expr pos:start="49:28" pos:end="49:32"><name pos:start="49:28" pos:end="49:32">frame</name></expr></argument>, <argument pos:start="49:35" pos:end="49:44"><expr pos:start="49:35" pos:end="49:44"><name pos:start="49:35" pos:end="49:44">frame_addr</name></expr></argument>, <argument pos:start="49:47" pos:end="49:47"><expr pos:start="49:47" pos:end="49:47"><literal type="number" pos:start="49:47" pos:end="49:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:34"><expr pos:start="51:9" pos:end="51:33"><call pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:17">force_sig</name><argument_list pos:start="51:18" pos:end="51:33">(<argument pos:start="51:19" pos:end="51:32"><expr pos:start="51:19" pos:end="51:32"><name pos:start="51:19" pos:end="51:32">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
