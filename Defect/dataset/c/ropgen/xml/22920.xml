<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22920.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">ffm_read_data</name><parameter_list pos:start="1:25" pos:end="3:59">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:37"><decl pos:start="3:26" pos:end="3:37"><type pos:start="3:26" pos:end="3:37"><name pos:start="3:26" pos:end="3:32">uint8_t</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:37">buf</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:47"><decl pos:start="3:40" pos:end="3:47"><type pos:start="3:40" pos:end="3:47"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:47">size</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:58"><decl pos:start="3:50" pos:end="3:58"><type pos:start="3:50" pos:end="3:58"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:58">first</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="117:1">{<block_content pos:start="7:5" pos:end="115:24">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">FFMContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">ffm</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">pb</name> <init pos:start="9:23" pos:end="9:29">= <expr pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">len</name></decl>, <decl pos:start="11:14" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:22">fill_size</name></decl>, <decl pos:start="11:25" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:29">size1</name></decl>, <decl pos:start="11:32" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:32" pos:end="11:43">frame_offset</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:17"><expr pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:9">size1</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <name pos:start="15:13" pos:end="15:16">size</name></expr>;</expr_stmt>

    <while pos:start="17:5" pos:end="113:5">while <condition pos:start="17:11" pos:end="17:20">(<expr pos:start="17:12" pos:end="17:19"><name pos:start="17:12" pos:end="17:15">size</name> <operator pos:start="17:17" pos:end="17:17">&gt;</operator> <literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr>)</condition> <block pos:start="17:22" pos:end="113:5">{<block_content pos:start="19:5" pos:end="111:18">

    <label pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:8">redo</name>:</label>

        <expr_stmt pos:start="21:9" pos:end="21:48"><expr pos:start="21:9" pos:end="21:47"><name pos:start="21:9" pos:end="21:11">len</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:29"><name pos:start="21:15" pos:end="21:17">ffm</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:29">packet_end</name></name> <operator pos:start="21:31" pos:end="21:31">-</operator> <name pos:start="21:33" pos:end="21:47"><name pos:start="21:33" pos:end="21:35">ffm</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:47">packet_ptr</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:22"><if pos:start="23:9" pos:end="25:22">if <condition pos:start="23:12" pos:end="23:20">(<expr pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:15">len</name> <operator pos:start="23:17" pos:end="23:17">&lt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:22"><block_content pos:start="25:13" pos:end="25:22">

            <return pos:start="25:13" pos:end="25:22">return <expr pos:start="25:20" pos:end="25:21"><operator pos:start="25:20" pos:end="25:20">-</operator><literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="29:23"><if pos:start="27:9" pos:end="29:23">if <condition pos:start="27:12" pos:end="27:23">(<expr pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:15">len</name> <operator pos:start="27:17" pos:end="27:17">&gt;</operator> <name pos:start="27:19" pos:end="27:22">size</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:23"><block_content pos:start="29:13" pos:end="29:23">

            <expr_stmt pos:start="29:13" pos:end="29:23"><expr pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:15">len</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:22">size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="31:9" pos:end="101:9"><if pos:start="31:9" pos:end="101:9">if <condition pos:start="31:12" pos:end="31:21">(<expr pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:15">len</name> <operator pos:start="31:17" pos:end="31:18">==</operator> <literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>)</condition> <block pos:start="31:23" pos:end="101:9">{<block_content pos:start="33:13" pos:end="99:22">

            <if_stmt pos:start="33:13" pos:end="35:58"><if pos:start="33:13" pos:end="35:58">if <condition pos:start="33:16" pos:end="33:48">(<expr pos:start="33:17" pos:end="33:47"><call pos:start="33:17" pos:end="33:29"><name pos:start="33:17" pos:end="33:25">url_ftell</name><argument_list pos:start="33:26" pos:end="33:29">(<argument pos:start="33:27" pos:end="33:28"><expr pos:start="33:27" pos:end="33:28"><name pos:start="33:27" pos:end="33:28">pb</name></expr></argument>)</argument_list></call> <operator pos:start="33:31" pos:end="33:32">==</operator> <name pos:start="33:34" pos:end="33:47"><name pos:start="33:34" pos:end="33:36">ffm</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:47">file_size</name></name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:58"><block_content pos:start="35:17" pos:end="35:58">

                <expr_stmt pos:start="35:17" pos:end="35:58"><expr pos:start="35:17" pos:end="35:57"><call pos:start="35:17" pos:end="35:57"><name pos:start="35:17" pos:end="35:25">url_fseek</name><argument_list pos:start="35:26" pos:end="35:57">(<argument pos:start="35:27" pos:end="35:28"><expr pos:start="35:27" pos:end="35:28"><name pos:start="35:27" pos:end="35:28">pb</name></expr></argument>, <argument pos:start="35:31" pos:end="35:46"><expr pos:start="35:31" pos:end="35:46"><name pos:start="35:31" pos:end="35:46"><name pos:start="35:31" pos:end="35:33">ffm</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:46">packet_size</name></name></expr></argument>, <argument pos:start="35:49" pos:end="35:56"><expr pos:start="35:49" pos:end="35:56"><name pos:start="35:49" pos:end="35:56">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <label pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:14">retry_read</name>:</label>

            <expr_stmt pos:start="39:13" pos:end="39:25"><expr pos:start="39:13" pos:end="39:24"><call pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:20">get_be16</name><argument_list pos:start="39:21" pos:end="39:24">(<argument pos:start="39:22" pos:end="39:23"><expr pos:start="39:22" pos:end="39:23"><name pos:start="39:22" pos:end="39:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="39:27" pos:end="39:41">/* PACKET_ID */</comment>

            <expr_stmt pos:start="41:13" pos:end="41:37"><expr pos:start="41:13" pos:end="41:36"><name pos:start="41:13" pos:end="41:21">fill_size</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <call pos:start="41:25" pos:end="41:36"><name pos:start="41:25" pos:end="41:32">get_be16</name><argument_list pos:start="41:33" pos:end="41:36">(<argument pos:start="41:34" pos:end="41:35"><expr pos:start="41:34" pos:end="41:35"><name pos:start="41:34" pos:end="41:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:36"><expr pos:start="43:13" pos:end="43:35"><name pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:15">ffm</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:20">pts</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:35"><name pos:start="43:24" pos:end="43:31">get_be64</name><argument_list pos:start="43:32" pos:end="43:35">(<argument pos:start="43:33" pos:end="43:34"><expr pos:start="43:33" pos:end="43:34"><name pos:start="43:33" pos:end="43:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:43"><expr pos:start="45:13" pos:end="45:42"><name pos:start="45:13" pos:end="45:38"><name pos:start="45:13" pos:end="45:15">ffm</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:38">first_frame_in_packet</name></name> <operator pos:start="45:40" pos:end="45:40">=</operator> <literal type="number" pos:start="45:42" pos:end="45:42">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:40"><expr pos:start="47:13" pos:end="47:39"><name pos:start="47:13" pos:end="47:24">frame_offset</name> <operator pos:start="47:26" pos:end="47:26">=</operator> <call pos:start="47:28" pos:end="47:39"><name pos:start="47:28" pos:end="47:35">get_be16</name><argument_list pos:start="47:36" pos:end="47:39">(<argument pos:start="47:37" pos:end="47:38"><expr pos:start="47:37" pos:end="47:38"><name pos:start="47:37" pos:end="47:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:76"><expr pos:start="49:13" pos:end="49:75"><call pos:start="49:13" pos:end="49:75"><name pos:start="49:13" pos:end="49:22">get_buffer</name><argument_list pos:start="49:23" pos:end="49:75">(<argument pos:start="49:24" pos:end="49:25"><expr pos:start="49:24" pos:end="49:25"><name pos:start="49:24" pos:end="49:25">pb</name></expr></argument>, <argument pos:start="49:28" pos:end="49:38"><expr pos:start="49:28" pos:end="49:38"><name pos:start="49:28" pos:end="49:38"><name pos:start="49:28" pos:end="49:30">ffm</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:38">packet</name></name></expr></argument>, <argument pos:start="49:41" pos:end="49:74"><expr pos:start="49:41" pos:end="49:74"><name pos:start="49:41" pos:end="49:56"><name pos:start="49:41" pos:end="49:43">ffm</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:56">packet_size</name></name> <operator pos:start="49:58" pos:end="49:58">-</operator> <name pos:start="49:60" pos:end="49:74">FFM_HEADER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:93"><expr pos:start="51:13" pos:end="51:92"><name pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:15">ffm</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:27">packet_end</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <name pos:start="51:31" pos:end="51:41"><name pos:start="51:31" pos:end="51:33">ffm</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:41">packet</name></name> <operator pos:start="51:43" pos:end="51:43">+</operator> <operator pos:start="51:45" pos:end="51:45">(</operator><name pos:start="51:46" pos:end="51:61"><name pos:start="51:46" pos:end="51:48">ffm</name><operator pos:start="51:49" pos:end="51:50">-&gt;</operator><name pos:start="51:51" pos:end="51:61">packet_size</name></name> <operator pos:start="51:63" pos:end="51:63">-</operator> <name pos:start="51:65" pos:end="51:79">FFM_HEADER_SIZE</name> <operator pos:start="51:81" pos:end="51:81">-</operator> <name pos:start="51:83" pos:end="51:91">fill_size</name><operator pos:start="51:92" pos:end="51:92">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="55:26"><if pos:start="53:13" pos:end="55:26">if <condition pos:start="53:16" pos:end="53:46">(<expr pos:start="53:17" pos:end="53:45"><name pos:start="53:17" pos:end="53:31"><name pos:start="53:17" pos:end="53:19">ffm</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:31">packet_end</name></name> <operator pos:start="53:33" pos:end="53:33">&lt;</operator> <name pos:start="53:35" pos:end="53:45"><name pos:start="53:35" pos:end="53:37">ffm</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:45">packet</name></name></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:26"><block_content pos:start="55:17" pos:end="55:26">

                <return pos:start="55:17" pos:end="55:26">return <expr pos:start="55:24" pos:end="55:25"><operator pos:start="55:24" pos:end="55:24">-</operator><literal type="number" pos:start="55:25" pos:end="55:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <comment type="block" pos:start="57:13" pos:end="59:40">/* if first packet or resynchronization packet, we must

               handle it specifically */</comment>

            <if_stmt pos:start="61:13" pos:end="97:13"><if pos:start="61:13" pos:end="93:13">if <condition pos:start="61:16" pos:end="61:61">(<expr pos:start="61:17" pos:end="61:60"><name pos:start="61:17" pos:end="61:33"><name pos:start="61:17" pos:end="61:19">ffm</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:33">first_packet</name></name> <operator pos:start="61:35" pos:end="61:36">||</operator> <operator pos:start="61:38" pos:end="61:38">(</operator><name pos:start="61:39" pos:end="61:50">frame_offset</name> <operator pos:start="61:52" pos:end="61:52">&amp;</operator> <literal type="number" pos:start="61:54" pos:end="61:59">0x8000</literal><operator pos:start="61:60" pos:end="61:60">)</operator></expr>)</condition> <block pos:start="61:63" pos:end="93:13">{<block_content pos:start="63:17" pos:end="91:26">

                <if_stmt pos:start="63:17" pos:end="79:17"><if pos:start="63:17" pos:end="79:17">if <condition pos:start="63:20" pos:end="63:34">(<expr pos:start="63:21" pos:end="63:33"><operator pos:start="63:21" pos:end="63:21">!</operator><name pos:start="63:22" pos:end="63:33">frame_offset</name></expr>)</condition> <block pos:start="63:36" pos:end="79:17">{<block_content pos:start="67:21" pos:end="77:29">

                    <comment type="block" pos:start="65:21" pos:end="65:64">/* This packet has no frame headers in it */</comment>

                    <if_stmt pos:start="67:21" pos:end="73:21"><if pos:start="67:21" pos:end="73:21">if <condition pos:start="67:24" pos:end="67:62">(<expr pos:start="67:25" pos:end="67:61"><call pos:start="67:25" pos:end="67:37"><name pos:start="67:25" pos:end="67:33">url_ftell</name><argument_list pos:start="67:34" pos:end="67:37">(<argument pos:start="67:35" pos:end="67:36"><expr pos:start="67:35" pos:end="67:36"><name pos:start="67:35" pos:end="67:36">pb</name></expr></argument>)</argument_list></call> <operator pos:start="67:39" pos:end="67:40">&gt;=</operator> <name pos:start="67:42" pos:end="67:57"><name pos:start="67:42" pos:end="67:44">ffm</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:57">packet_size</name></name> <operator pos:start="67:59" pos:end="67:59">*</operator> <literal type="number" pos:start="67:61" pos:end="67:61">3</literal></expr>)</condition> <block pos:start="67:64" pos:end="73:21">{<block_content pos:start="69:25" pos:end="71:40">

                        <expr_stmt pos:start="69:25" pos:end="69:71"><expr pos:start="69:25" pos:end="69:70"><call pos:start="69:25" pos:end="69:70"><name pos:start="69:25" pos:end="69:33">url_fseek</name><argument_list pos:start="69:34" pos:end="69:70">(<argument pos:start="69:35" pos:end="69:36"><expr pos:start="69:35" pos:end="69:36"><name pos:start="69:35" pos:end="69:36">pb</name></expr></argument>, <argument pos:start="69:39" pos:end="69:59"><expr pos:start="69:39" pos:end="69:59"><operator pos:start="69:39" pos:end="69:39">-</operator><name pos:start="69:40" pos:end="69:55"><name pos:start="69:40" pos:end="69:42">ffm</name><operator pos:start="69:43" pos:end="69:44">-&gt;</operator><name pos:start="69:45" pos:end="69:55">packet_size</name></name> <operator pos:start="69:57" pos:end="69:57">*</operator> <literal type="number" pos:start="69:59" pos:end="69:59">2</literal></expr></argument>, <argument pos:start="69:62" pos:end="69:69"><expr pos:start="69:62" pos:end="69:69"><name pos:start="69:62" pos:end="69:69">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="71:25" pos:end="71:40">goto <name pos:start="71:30" pos:end="71:39">retry_read</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <comment type="block" pos:start="75:21" pos:end="75:74">/* This is bad, we cannot find a valid frame header */</comment>

                    <return pos:start="77:21" pos:end="77:29">return <expr pos:start="77:28" pos:end="77:28"><literal type="number" pos:start="77:28" pos:end="77:28">0</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:38"><expr pos:start="81:17" pos:end="81:37"><name pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:19">ffm</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:33">first_packet</name></name> <operator pos:start="81:35" pos:end="81:35">=</operator> <literal type="number" pos:start="81:37" pos:end="81:37">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="83:17" pos:end="85:30"><if pos:start="83:17" pos:end="85:30">if <condition pos:start="83:20" pos:end="83:63">(<expr pos:start="83:21" pos:end="83:62"><operator pos:start="83:21" pos:end="83:21">(</operator><name pos:start="83:22" pos:end="83:33">frame_offset</name> <operator pos:start="83:35" pos:end="83:35">&amp;</operator> <literal type="number" pos:start="83:37" pos:end="83:43">0x7ffff</literal><operator pos:start="83:44" pos:end="83:44">)</operator> <operator pos:start="83:46" pos:end="83:46">&lt;</operator> <name pos:start="83:48" pos:end="83:62">FFM_HEADER_SIZE</name></expr>)</condition><block type="pseudo" pos:start="85:21" pos:end="85:30"><block_content pos:start="85:21" pos:end="85:30">

                    <return pos:start="85:21" pos:end="85:30">return <expr pos:start="85:28" pos:end="85:29"><operator pos:start="85:28" pos:end="85:28">-</operator><literal type="number" pos:start="85:29" pos:end="85:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:90"><expr pos:start="87:17" pos:end="87:89"><name pos:start="87:17" pos:end="87:31"><name pos:start="87:17" pos:end="87:19">ffm</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:31">packet_ptr</name></name> <operator pos:start="87:33" pos:end="87:33">=</operator> <name pos:start="87:35" pos:end="87:45"><name pos:start="87:35" pos:end="87:37">ffm</name><operator pos:start="87:38" pos:end="87:39">-&gt;</operator><name pos:start="87:40" pos:end="87:45">packet</name></name> <operator pos:start="87:47" pos:end="87:47">+</operator> <operator pos:start="87:49" pos:end="87:49">(</operator><name pos:start="87:50" pos:end="87:61">frame_offset</name> <operator pos:start="87:63" pos:end="87:63">&amp;</operator> <literal type="number" pos:start="87:65" pos:end="87:70">0x7fff</literal><operator pos:start="87:71" pos:end="87:71">)</operator> <operator pos:start="87:73" pos:end="87:73">-</operator> <name pos:start="87:75" pos:end="87:89">FFM_HEADER_SIZE</name></expr>;</expr_stmt>

                <if_stmt pos:start="89:17" pos:end="91:26"><if pos:start="89:17" pos:end="91:26">if <condition pos:start="89:20" pos:end="89:27">(<expr pos:start="89:21" pos:end="89:26"><operator pos:start="89:21" pos:end="89:21">!</operator><name pos:start="89:22" pos:end="89:26">first</name></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:26"><block_content pos:start="91:21" pos:end="91:26">

                    <break pos:start="91:21" pos:end="91:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="93:15" pos:end="97:13">else <block pos:start="93:20" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:46">

                <expr_stmt pos:start="95:17" pos:end="95:46"><expr pos:start="95:17" pos:end="95:45"><name pos:start="95:17" pos:end="95:31"><name pos:start="95:17" pos:end="95:19">ffm</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:31">packet_ptr</name></name> <operator pos:start="95:33" pos:end="95:33">=</operator> <name pos:start="95:35" pos:end="95:45"><name pos:start="95:35" pos:end="95:37">ffm</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:45">packet</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <goto pos:start="99:13" pos:end="99:22">goto <name pos:start="99:18" pos:end="99:21">redo</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:42"><expr pos:start="103:9" pos:end="103:41"><call pos:start="103:9" pos:end="103:41"><name pos:start="103:9" pos:end="103:14">memcpy</name><argument_list pos:start="103:15" pos:end="103:41">(<argument pos:start="103:16" pos:end="103:18"><expr pos:start="103:16" pos:end="103:18"><name pos:start="103:16" pos:end="103:18">buf</name></expr></argument>, <argument pos:start="103:21" pos:end="103:35"><expr pos:start="103:21" pos:end="103:35"><name pos:start="103:21" pos:end="103:35"><name pos:start="103:21" pos:end="103:23">ffm</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:35">packet_ptr</name></name></expr></argument>, <argument pos:start="103:38" pos:end="103:40"><expr pos:start="103:38" pos:end="103:40"><name pos:start="103:38" pos:end="103:40">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:19"><expr pos:start="105:9" pos:end="105:18"><name pos:start="105:9" pos:end="105:11">buf</name> <operator pos:start="105:13" pos:end="105:14">+=</operator> <name pos:start="105:16" pos:end="105:18">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:31"><expr pos:start="107:9" pos:end="107:30"><name pos:start="107:9" pos:end="107:23"><name pos:start="107:9" pos:end="107:11">ffm</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:23">packet_ptr</name></name> <operator pos:start="107:25" pos:end="107:26">+=</operator> <name pos:start="107:28" pos:end="107:30">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:20"><expr pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:12">size</name> <operator pos:start="109:14" pos:end="109:15">-=</operator> <name pos:start="109:17" pos:end="109:19">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:18"><expr pos:start="111:9" pos:end="111:17"><name pos:start="111:9" pos:end="111:13">first</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <literal type="number" pos:start="111:17" pos:end="111:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="115:5" pos:end="115:24">return <expr pos:start="115:12" pos:end="115:23"><name pos:start="115:12" pos:end="115:16">size1</name> <operator pos:start="115:18" pos:end="115:18">-</operator> <name pos:start="115:20" pos:end="115:23">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
