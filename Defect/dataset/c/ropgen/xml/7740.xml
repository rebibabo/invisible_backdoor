<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7740.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">parse_video_var</name><parameter_list pos:start="1:27" pos:end="1:92">(<parameter pos:start="1:28" pos:end="1:49"><decl pos:start="1:28" pos:end="1:49"><type pos:start="1:28" pos:end="1:49"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:59">AVStream</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">st</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:81"><decl pos:start="1:66" pos:end="1:81"><type pos:start="1:66" pos:end="1:81"><specifier pos:start="1:66" pos:end="1:70">const</specifier> <name pos:start="1:72" pos:end="1:75">char</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:81">name</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:91"><decl pos:start="1:84" pos:end="1:91"><type pos:start="1:84" pos:end="1:91"><name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:91">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:31">= <expr pos:start="5:23" pos:end="5:31"><name pos:start="5:23" pos:end="5:31"><name pos:start="5:23" pos:end="5:27">avctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:31">pb</name></name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="85:18"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:37">(<expr pos:start="7:9" pos:end="7:36"><operator pos:start="7:9" pos:end="7:9">!</operator><call pos:start="7:10" pos:end="7:36"><name pos:start="7:10" pos:end="7:15">strcmp</name><argument_list pos:start="7:16" pos:end="7:36">(<argument pos:start="7:17" pos:end="7:20"><expr pos:start="7:17" pos:end="7:20"><name pos:start="7:17" pos:end="7:20">name</name></expr></argument>, <argument pos:start="7:23" pos:end="7:35"><expr pos:start="7:23" pos:end="7:35"><literal type="string" pos:start="7:23" pos:end="7:35">"__DIR_COUNT"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:39" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:62">

        <expr_stmt pos:start="9:9" pos:end="9:62"><expr pos:start="9:9" pos:end="9:61"><name pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:10">st</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:21">nb_frames</name></name> <operator pos:start="9:23" pos:end="9:23">=</operator> <name pos:start="9:25" pos:end="9:36"><name pos:start="9:25" pos:end="9:26">st</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:36">duration</name></name> <operator pos:start="9:38" pos:end="9:38">=</operator> <call pos:start="9:40" pos:end="9:61"><name pos:start="9:40" pos:end="9:51">var_read_int</name><argument_list pos:start="9:52" pos:end="9:61">(<argument pos:start="9:53" pos:end="9:54"><expr pos:start="9:53" pos:end="9:54"><name pos:start="9:53" pos:end="9:54">pb</name></expr></argument>, <argument pos:start="9:57" pos:end="9:60"><expr pos:start="9:57" pos:end="9:60"><name pos:start="9:57" pos:end="9:60">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="11:7" pos:end="45:5">else if <condition pos:start="11:15" pos:end="11:44">(<expr pos:start="11:16" pos:end="11:43"><operator pos:start="11:16" pos:end="11:16">!</operator><call pos:start="11:17" pos:end="11:43"><name pos:start="11:17" pos:end="11:22">strcmp</name><argument_list pos:start="11:23" pos:end="11:43">(<argument pos:start="11:24" pos:end="11:27"><expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">name</name></expr></argument>, <argument pos:start="11:30" pos:end="11:42"><expr pos:start="11:30" pos:end="11:42"><literal type="string" pos:start="11:30" pos:end="11:42">"COMPRESSION"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:46" pos:end="45:5">{<block_content pos:start="13:9" pos:end="43:21">

        <decl_stmt pos:start="13:9" pos:end="13:47"><decl pos:start="13:9" pos:end="13:46"><type pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:12">char</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type> <name pos:start="13:16" pos:end="13:18">str</name> <init pos:start="13:20" pos:end="13:46">= <expr pos:start="13:22" pos:end="13:46"><call pos:start="13:22" pos:end="13:46"><name pos:start="13:22" pos:end="13:36">var_read_string</name><argument_list pos:start="13:37" pos:end="13:46">(<argument pos:start="13:38" pos:end="13:39"><expr pos:start="13:38" pos:end="13:39"><name pos:start="13:38" pos:end="13:39">pb</name></expr></argument>, <argument pos:start="13:42" pos:end="13:45"><expr pos:start="13:42" pos:end="13:45"><name pos:start="13:42" pos:end="13:45">size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="15:9" pos:end="41:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:30">(<expr pos:start="15:13" pos:end="15:29"><operator pos:start="15:13" pos:end="15:13">!</operator><call pos:start="15:14" pos:end="15:29"><name pos:start="15:14" pos:end="15:19">strcmp</name><argument_list pos:start="15:20" pos:end="15:29">(<argument pos:start="15:21" pos:end="15:23"><expr pos:start="15:21" pos:end="15:23"><name pos:start="15:21" pos:end="15:23">str</name></expr></argument>, <argument pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><literal type="string" pos:start="15:26" pos:end="15:28">"1"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:32" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:51">

            <expr_stmt pos:start="17:13" pos:end="17:51"><expr pos:start="17:13" pos:end="17:50"><name pos:start="17:13" pos:end="17:31"><name pos:start="17:13" pos:end="17:14">st</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:21">codec</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:31">codec_id</name></name> <operator pos:start="17:33" pos:end="17:33">=</operator> <name pos:start="17:35" pos:end="17:50">AV_CODEC_ID_MVC1</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="19:11" pos:end="25:9">else if <condition pos:start="19:19" pos:end="19:37">(<expr pos:start="19:20" pos:end="19:36"><operator pos:start="19:20" pos:end="19:20">!</operator><call pos:start="19:21" pos:end="19:36"><name pos:start="19:21" pos:end="19:26">strcmp</name><argument_list pos:start="19:27" pos:end="19:36">(<argument pos:start="19:28" pos:end="19:30"><expr pos:start="19:28" pos:end="19:30"><name pos:start="19:28" pos:end="19:30">str</name></expr></argument>, <argument pos:start="19:33" pos:end="19:35"><expr pos:start="19:33" pos:end="19:35"><literal type="string" pos:start="19:33" pos:end="19:35">"2"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:39" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:55">

            <expr_stmt pos:start="21:13" pos:end="21:50"><expr pos:start="21:13" pos:end="21:49"><name pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:14">st</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:21">codec</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:30">pix_fmt</name></name>  <operator pos:start="21:33" pos:end="21:33">=</operator> <name pos:start="21:35" pos:end="21:49">AV_PIX_FMT_ABGR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:55"><expr pos:start="23:13" pos:end="23:54"><name pos:start="23:13" pos:end="23:31"><name pos:start="23:13" pos:end="23:14">st</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:21">codec</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:31">codec_id</name></name> <operator pos:start="23:33" pos:end="23:33">=</operator> <name pos:start="23:35" pos:end="23:54">AV_CODEC_ID_RAWVIDEO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="25:11" pos:end="29:9">else if <condition pos:start="25:19" pos:end="25:37">(<expr pos:start="25:20" pos:end="25:36"><operator pos:start="25:20" pos:end="25:20">!</operator><call pos:start="25:21" pos:end="25:36"><name pos:start="25:21" pos:end="25:26">strcmp</name><argument_list pos:start="25:27" pos:end="25:36">(<argument pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><name pos:start="25:28" pos:end="25:30">str</name></expr></argument>, <argument pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><literal type="string" pos:start="25:33" pos:end="25:35">"3"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:39" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:53">

            <expr_stmt pos:start="27:13" pos:end="27:53"><expr pos:start="27:13" pos:end="27:52"><name pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:14">st</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:21">codec</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:31">codec_id</name></name> <operator pos:start="27:33" pos:end="27:33">=</operator> <name pos:start="27:35" pos:end="27:52">AV_CODEC_ID_SGIRLE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="29:11" pos:end="33:9">else if <condition pos:start="29:19" pos:end="29:38">(<expr pos:start="29:20" pos:end="29:37"><operator pos:start="29:20" pos:end="29:20">!</operator><call pos:start="29:21" pos:end="29:37"><name pos:start="29:21" pos:end="29:26">strcmp</name><argument_list pos:start="29:27" pos:end="29:37">(<argument pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:30">str</name></expr></argument>, <argument pos:start="29:33" pos:end="29:36"><expr pos:start="29:33" pos:end="29:36"><literal type="string" pos:start="29:33" pos:end="29:36">"10"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:40" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:52">

            <expr_stmt pos:start="31:13" pos:end="31:52"><expr pos:start="31:13" pos:end="31:51"><name pos:start="31:13" pos:end="31:31"><name pos:start="31:13" pos:end="31:14">st</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:21">codec</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:31">codec_id</name></name> <operator pos:start="31:33" pos:end="31:33">=</operator> <name pos:start="31:35" pos:end="31:51">AV_CODEC_ID_MJPEG</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="33:11" pos:end="37:9">else if <condition pos:start="33:19" pos:end="33:40">(<expr pos:start="33:20" pos:end="33:39"><operator pos:start="33:20" pos:end="33:20">!</operator><call pos:start="33:21" pos:end="33:39"><name pos:start="33:21" pos:end="33:26">strcmp</name><argument_list pos:start="33:27" pos:end="33:39">(<argument pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:30">str</name></expr></argument>, <argument pos:start="33:33" pos:end="33:38"><expr pos:start="33:33" pos:end="33:38"><literal type="string" pos:start="33:33" pos:end="33:38">"MVC2"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:42" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:51">

            <expr_stmt pos:start="35:13" pos:end="35:51"><expr pos:start="35:13" pos:end="35:50"><name pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:14">st</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:21">codec</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:31">codec_id</name></name> <operator pos:start="35:33" pos:end="35:33">=</operator> <name pos:start="35:35" pos:end="35:50">AV_CODEC_ID_MVC2</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="37:11" pos:end="41:9">else <block pos:start="37:16" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:80">

            <expr_stmt pos:start="39:13" pos:end="39:80"><expr pos:start="39:13" pos:end="39:79"><call pos:start="39:13" pos:end="39:79"><name pos:start="39:13" pos:end="39:33">av_log_ask_for_sample</name><argument_list pos:start="39:34" pos:end="39:79">(<argument pos:start="39:35" pos:end="39:39"><expr pos:start="39:35" pos:end="39:39"><name pos:start="39:35" pos:end="39:39">avctx</name></expr></argument>, <argument pos:start="39:42" pos:end="39:73"><expr pos:start="39:42" pos:end="39:73"><literal type="string" pos:start="39:42" pos:end="39:73">"unknown video compression %s\n"</literal></expr></argument>, <argument pos:start="39:76" pos:end="39:78"><expr pos:start="39:76" pos:end="39:78"><name pos:start="39:76" pos:end="39:78">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:21"><expr pos:start="43:9" pos:end="43:20"><call pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:15">av_free</name><argument_list pos:start="43:16" pos:end="43:20">(<argument pos:start="43:17" pos:end="43:19"><expr pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="45:7" pos:end="49:5">else if <condition pos:start="45:15" pos:end="45:36">(<expr pos:start="45:16" pos:end="45:35"><operator pos:start="45:16" pos:end="45:16">!</operator><call pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:22">strcmp</name><argument_list pos:start="45:23" pos:end="45:35">(<argument pos:start="45:24" pos:end="45:27"><expr pos:start="45:24" pos:end="45:27"><name pos:start="45:24" pos:end="45:27">name</name></expr></argument>, <argument pos:start="45:30" pos:end="45:34"><expr pos:start="45:30" pos:end="45:34"><literal type="string" pos:start="45:30" pos:end="45:34">"FPS"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:38" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:59">

        <expr_stmt pos:start="47:9" pos:end="47:59"><expr pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:10">st</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:21">time_base</name></name> <operator pos:start="47:23" pos:end="47:23">=</operator> <call pos:start="47:25" pos:end="47:58"><name pos:start="47:25" pos:end="47:32">av_inv_q</name><argument_list pos:start="47:33" pos:end="47:58">(<argument pos:start="47:34" pos:end="47:57"><expr pos:start="47:34" pos:end="47:57"><call pos:start="47:34" pos:end="47:57"><name pos:start="47:34" pos:end="47:47">var_read_float</name><argument_list pos:start="47:48" pos:end="47:57">(<argument pos:start="47:49" pos:end="47:50"><expr pos:start="47:49" pos:end="47:50"><name pos:start="47:49" pos:end="47:50">pb</name></expr></argument>, <argument pos:start="47:53" pos:end="47:56"><expr pos:start="47:53" pos:end="47:56"><name pos:start="47:53" pos:end="47:56">size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="53:5">else if <condition pos:start="49:15" pos:end="49:39">(<expr pos:start="49:16" pos:end="49:38"><operator pos:start="49:16" pos:end="49:16">!</operator><call pos:start="49:17" pos:end="49:38"><name pos:start="49:17" pos:end="49:22">strcmp</name><argument_list pos:start="49:23" pos:end="49:38">(<argument pos:start="49:24" pos:end="49:27"><expr pos:start="49:24" pos:end="49:27"><name pos:start="49:24" pos:end="49:27">name</name></expr></argument>, <argument pos:start="49:30" pos:end="49:37"><expr pos:start="49:30" pos:end="49:37"><literal type="string" pos:start="49:30" pos:end="49:37">"HEIGHT"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:41" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:51">

        <expr_stmt pos:start="51:9" pos:end="51:51"><expr pos:start="51:9" pos:end="51:50"><name pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:10">st</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:17">codec</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:25">height</name></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <call pos:start="51:29" pos:end="51:50"><name pos:start="51:29" pos:end="51:40">var_read_int</name><argument_list pos:start="51:41" pos:end="51:50">(<argument pos:start="51:42" pos:end="51:43"><expr pos:start="51:42" pos:end="51:43"><name pos:start="51:42" pos:end="51:43">pb</name></expr></argument>, <argument pos:start="51:46" pos:end="51:49"><expr pos:start="51:46" pos:end="51:49"><name pos:start="51:46" pos:end="51:49">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="61:5">else if <condition pos:start="53:15" pos:end="53:45">(<expr pos:start="53:16" pos:end="53:44"><operator pos:start="53:16" pos:end="53:16">!</operator><call pos:start="53:17" pos:end="53:44"><name pos:start="53:17" pos:end="53:22">strcmp</name><argument_list pos:start="53:23" pos:end="53:44">(<argument pos:start="53:24" pos:end="53:27"><expr pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:27">name</name></expr></argument>, <argument pos:start="53:30" pos:end="53:43"><expr pos:start="53:30" pos:end="53:43"><literal type="string" pos:start="53:30" pos:end="53:43">"PIXEL_ASPECT"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:47" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:85">

        <expr_stmt pos:start="55:9" pos:end="55:59"><expr pos:start="55:9" pos:end="55:58"><name pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:10">st</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:31">sample_aspect_ratio</name></name> <operator pos:start="55:33" pos:end="55:33">=</operator> <call pos:start="55:35" pos:end="55:58"><name pos:start="55:35" pos:end="55:48">var_read_float</name><argument_list pos:start="55:49" pos:end="55:58">(<argument pos:start="55:50" pos:end="55:51"><expr pos:start="55:50" pos:end="55:51"><name pos:start="55:50" pos:end="55:51">pb</name></expr></argument>, <argument pos:start="55:54" pos:end="55:57"><expr pos:start="55:54" pos:end="55:57"><name pos:start="55:54" pos:end="55:57">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="59:85"><expr pos:start="57:9" pos:end="59:84"><call pos:start="57:9" pos:end="59:84"><name pos:start="57:9" pos:end="57:17">av_reduce</name><argument_list pos:start="57:18" pos:end="59:84">(<argument pos:start="57:19" pos:end="57:46"><expr pos:start="57:19" pos:end="57:46"><operator pos:start="57:19" pos:end="57:19">&amp;</operator><name pos:start="57:20" pos:end="57:46"><name pos:start="57:20" pos:end="57:21">st</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:42">sample_aspect_ratio</name><operator pos:start="57:43" pos:end="57:43">.</operator><name pos:start="57:44" pos:end="57:46">num</name></name></expr></argument>, <argument pos:start="57:49" pos:end="57:76"><expr pos:start="57:49" pos:end="57:76"><operator pos:start="57:49" pos:end="57:49">&amp;</operator><name pos:start="57:50" pos:end="57:76"><name pos:start="57:50" pos:end="57:51">st</name><operator pos:start="57:52" pos:end="57:53">-&gt;</operator><name pos:start="57:54" pos:end="57:72">sample_aspect_ratio</name><operator pos:start="57:73" pos:end="57:73">.</operator><name pos:start="57:74" pos:end="57:76">den</name></name></expr></argument>,

                  <argument pos:start="59:19" pos:end="59:45"><expr pos:start="59:19" pos:end="59:45"><name pos:start="59:19" pos:end="59:45"><name pos:start="59:19" pos:end="59:20">st</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:41">sample_aspect_ratio</name><operator pos:start="59:42" pos:end="59:42">.</operator><name pos:start="59:43" pos:end="59:45">num</name></name></expr></argument>, <argument pos:start="59:48" pos:end="59:74"><expr pos:start="59:48" pos:end="59:74"><name pos:start="59:48" pos:end="59:74"><name pos:start="59:48" pos:end="59:49">st</name><operator pos:start="59:50" pos:end="59:51">-&gt;</operator><name pos:start="59:52" pos:end="59:70">sample_aspect_ratio</name><operator pos:start="59:71" pos:end="59:71">.</operator><name pos:start="59:72" pos:end="59:74">den</name></name></expr></argument>, <argument pos:start="59:77" pos:end="59:83"><expr pos:start="59:77" pos:end="59:83"><name pos:start="59:77" pos:end="59:83">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="61:7" pos:end="65:5">else if <condition pos:start="61:15" pos:end="61:38">(<expr pos:start="61:16" pos:end="61:37"><operator pos:start="61:16" pos:end="61:16">!</operator><call pos:start="61:17" pos:end="61:37"><name pos:start="61:17" pos:end="61:22">strcmp</name><argument_list pos:start="61:23" pos:end="61:37">(<argument pos:start="61:24" pos:end="61:27"><expr pos:start="61:24" pos:end="61:27"><name pos:start="61:24" pos:end="61:27">name</name></expr></argument>, <argument pos:start="61:30" pos:end="61:36"><expr pos:start="61:30" pos:end="61:36"><literal type="string" pos:start="61:30" pos:end="61:36">"WIDTH"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:40" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:50">

        <expr_stmt pos:start="63:9" pos:end="63:50"><expr pos:start="63:9" pos:end="63:49"><name pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:10">st</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:17">codec</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:24">width</name></name> <operator pos:start="63:26" pos:end="63:26">=</operator> <call pos:start="63:28" pos:end="63:49"><name pos:start="63:28" pos:end="63:39">var_read_int</name><argument_list pos:start="63:40" pos:end="63:49">(<argument pos:start="63:41" pos:end="63:42"><expr pos:start="63:41" pos:end="63:42"><name pos:start="63:41" pos:end="63:42">pb</name></expr></argument>, <argument pos:start="63:45" pos:end="63:48"><expr pos:start="63:45" pos:end="63:48"><name pos:start="63:45" pos:end="63:48">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="65:7" pos:end="75:5">else if <condition pos:start="65:15" pos:end="65:44">(<expr pos:start="65:16" pos:end="65:43"><operator pos:start="65:16" pos:end="65:16">!</operator><call pos:start="65:17" pos:end="65:43"><name pos:start="65:17" pos:end="65:22">strcmp</name><argument_list pos:start="65:23" pos:end="65:43">(<argument pos:start="65:24" pos:end="65:27"><expr pos:start="65:24" pos:end="65:27"><name pos:start="65:24" pos:end="65:27">name</name></expr></argument>, <argument pos:start="65:30" pos:end="65:42"><expr pos:start="65:30" pos:end="65:42"><literal type="string" pos:start="65:30" pos:end="65:42">"ORIENTATION"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:46" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:9">

        <if_stmt pos:start="67:9" pos:end="73:9"><if pos:start="67:9" pos:end="73:9">if <condition pos:start="67:12" pos:end="67:43">(<expr pos:start="67:13" pos:end="67:42"><call pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:24">var_read_int</name><argument_list pos:start="67:25" pos:end="67:34">(<argument pos:start="67:26" pos:end="67:27"><expr pos:start="67:26" pos:end="67:27"><name pos:start="67:26" pos:end="67:27">pb</name></expr></argument>, <argument pos:start="67:30" pos:end="67:33"><expr pos:start="67:30" pos:end="67:33"><name pos:start="67:30" pos:end="67:33">size</name></expr></argument>)</argument_list></call> <operator pos:start="67:36" pos:end="67:37">==</operator> <literal type="number" pos:start="67:39" pos:end="67:42">1101</literal></expr>)</condition> <block pos:start="67:45" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:43">

            <expr_stmt pos:start="69:13" pos:end="69:63"><expr pos:start="69:13" pos:end="69:62"><name pos:start="69:13" pos:end="69:32"><name pos:start="69:13" pos:end="69:14">st</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:21">codec</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:32">extradata</name></name>       <operator pos:start="69:40" pos:end="69:40">=</operator> <call pos:start="69:42" pos:end="69:62"><name pos:start="69:42" pos:end="69:50">av_strdup</name><argument_list pos:start="69:51" pos:end="69:62">(<argument pos:start="69:52" pos:end="69:61"><expr pos:start="69:52" pos:end="69:61"><literal type="string" pos:start="69:52" pos:end="69:61">"BottomUp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:43"><expr pos:start="71:13" pos:end="71:42"><name pos:start="71:13" pos:end="71:37"><name pos:start="71:13" pos:end="71:14">st</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:21">codec</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:37">extradata_size</name></name>  <operator pos:start="71:40" pos:end="71:40">=</operator> <literal type="number" pos:start="71:42" pos:end="71:42">9</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="75:7" pos:end="79:5">else if <condition pos:start="75:15" pos:end="75:73">(<expr pos:start="75:16" pos:end="75:72"><operator pos:start="75:16" pos:end="75:16">!</operator><call pos:start="75:17" pos:end="75:41"><name pos:start="75:17" pos:end="75:22">strcmp</name><argument_list pos:start="75:23" pos:end="75:41">(<argument pos:start="75:24" pos:end="75:27"><expr pos:start="75:24" pos:end="75:27"><name pos:start="75:24" pos:end="75:27">name</name></expr></argument>, <argument pos:start="75:30" pos:end="75:40"><expr pos:start="75:30" pos:end="75:40"><literal type="string" pos:start="75:30" pos:end="75:40">"Q_SPATIAL"</literal></expr></argument>)</argument_list></call> <operator pos:start="75:43" pos:end="75:44">||</operator> <operator pos:start="75:46" pos:end="75:46">!</operator><call pos:start="75:47" pos:end="75:72"><name pos:start="75:47" pos:end="75:52">strcmp</name><argument_list pos:start="75:53" pos:end="75:72">(<argument pos:start="75:54" pos:end="75:57"><expr pos:start="75:54" pos:end="75:57"><name pos:start="75:54" pos:end="75:57">name</name></expr></argument>, <argument pos:start="75:60" pos:end="75:71"><expr pos:start="75:60" pos:end="75:71"><literal type="string" pos:start="75:60" pos:end="75:71">"Q_TEMPORAL"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:75" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:45">

        <expr_stmt pos:start="77:9" pos:end="77:45"><expr pos:start="77:9" pos:end="77:44"><call pos:start="77:9" pos:end="77:44"><name pos:start="77:9" pos:end="77:25">var_read_metadata</name><argument_list pos:start="77:26" pos:end="77:44">(<argument pos:start="77:27" pos:end="77:31"><expr pos:start="77:27" pos:end="77:31"><name pos:start="77:27" pos:end="77:31">avctx</name></expr></argument>, <argument pos:start="77:34" pos:end="77:37"><expr pos:start="77:34" pos:end="77:37"><name pos:start="77:34" pos:end="77:37">name</name></expr></argument>, <argument pos:start="77:40" pos:end="77:43"><expr pos:start="77:40" pos:end="77:43"><name pos:start="77:40" pos:end="77:43">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="79:7" pos:end="83:5">else if <condition pos:start="79:15" pos:end="79:72">(<expr pos:start="79:16" pos:end="79:71"><operator pos:start="79:16" pos:end="79:16">!</operator><call pos:start="79:17" pos:end="79:43"><name pos:start="79:17" pos:end="79:22">strcmp</name><argument_list pos:start="79:23" pos:end="79:43">(<argument pos:start="79:24" pos:end="79:27"><expr pos:start="79:24" pos:end="79:27"><name pos:start="79:24" pos:end="79:27">name</name></expr></argument>, <argument pos:start="79:30" pos:end="79:42"><expr pos:start="79:30" pos:end="79:42"><literal type="string" pos:start="79:30" pos:end="79:42">"INTERLACING"</literal></expr></argument>)</argument_list></call> <operator pos:start="79:45" pos:end="79:46">||</operator> <operator pos:start="79:48" pos:end="79:48">!</operator><call pos:start="79:49" pos:end="79:71"><name pos:start="79:49" pos:end="79:54">strcmp</name><argument_list pos:start="79:55" pos:end="79:71">(<argument pos:start="79:56" pos:end="79:59"><expr pos:start="79:56" pos:end="79:59"><name pos:start="79:56" pos:end="79:59">name</name></expr></argument>, <argument pos:start="79:62" pos:end="79:70"><expr pos:start="79:62" pos:end="79:70"><literal type="string" pos:start="79:62" pos:end="79:70">"PACKING"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:74" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:28">

        <expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><call pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:17">avio_skip</name><argument_list pos:start="81:18" pos:end="81:27">(<argument pos:start="81:19" pos:end="81:20"><expr pos:start="81:19" pos:end="81:20"><name pos:start="81:19" pos:end="81:20">pb</name></expr></argument>, <argument pos:start="81:23" pos:end="81:26"><expr pos:start="81:23" pos:end="81:26"><name pos:start="81:23" pos:end="81:26">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="81:30" pos:end="81:38">// ignore</comment>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="85:18">else<block type="pseudo" pos:start="85:9" pos:end="85:18"><block_content pos:start="85:9" pos:end="85:18">

        <return pos:start="85:9" pos:end="85:18">return <expr pos:start="85:16" pos:end="85:17"><operator pos:start="85:16" pos:end="85:16">-</operator><literal type="number" pos:start="85:17" pos:end="85:17">1</literal></expr>;</return></block_content></block></else></if_stmt>

    <return pos:start="87:5" pos:end="87:13">return <expr pos:start="87:12" pos:end="87:12"><literal type="number" pos:start="87:12" pos:end="87:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
