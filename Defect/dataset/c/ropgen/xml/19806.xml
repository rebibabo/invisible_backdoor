<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19806.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">do_info_registers</name><parameter_list pos:start="1:30" pos:end="1:43">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:39"><name pos:start="1:31" pos:end="1:37">Monitor</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">mon</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="26:0">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">env</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:24"><expr pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:7">env</name> <operator pos:start="7:9" pos:end="7:9">=</operator> <call pos:start="7:11" pos:end="7:23"><name pos:start="7:11" pos:end="7:21">mon_get_cpu</name><argument_list pos:start="7:22" pos:end="7:23">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="14:0"><if pos:start="9:5" pos:end="14:0">if <condition pos:start="9:8" pos:end="9:13">(<expr pos:start="9:9" pos:end="9:12"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:12">env</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="14:0"><block_content pos:start="11:9" pos:end="14:0">

        <return pos:start="11:9" pos:end="14:0">return;</return></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="13:1" pos:end="13:18">#<cpp:directive pos:start="13:2" pos:end="13:6">ifdef</cpp:directive> <name pos:start="13:8" pos:end="13:18">TARGET_I386</name></cpp:ifdef>

    <expr_stmt pos:start="15:5" pos:end="20:0"><expr pos:start="15:5" pos:end="17:32"><call pos:start="15:5" pos:end="17:32"><name pos:start="15:5" pos:end="15:18">cpu_dump_state</name><argument_list pos:start="15:19" pos:end="17:32">(<argument pos:start="15:20" pos:end="15:22"><expr pos:start="15:20" pos:end="15:22"><name pos:start="15:20" pos:end="15:22">env</name></expr></argument>, <argument pos:start="15:25" pos:end="15:35"><expr pos:start="15:25" pos:end="15:35"><operator pos:start="15:25" pos:end="15:25">(</operator><name pos:start="15:26" pos:end="15:29">FILE</name> <operator pos:start="15:31" pos:end="15:31">*</operator><operator pos:start="15:32" pos:end="15:32">)</operator><name pos:start="15:33" pos:end="15:35">mon</name></expr></argument>, <argument pos:start="15:38" pos:end="15:52"><expr pos:start="15:38" pos:end="15:52"><name pos:start="15:38" pos:end="15:52">monitor_fprintf</name></expr></argument>,

                   <argument pos:start="17:20" pos:end="17:31"><expr pos:start="17:20" pos:end="17:31"><name pos:start="17:20" pos:end="17:31">X86_DUMP_FPU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="19:1" pos:end="19:5">#<cpp:directive pos:start="19:2" pos:end="19:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="21:5" pos:end="26:0"><expr pos:start="21:5" pos:end="23:21"><call pos:start="21:5" pos:end="23:21"><name pos:start="21:5" pos:end="21:18">cpu_dump_state</name><argument_list pos:start="21:19" pos:end="23:21">(<argument pos:start="21:20" pos:end="21:22"><expr pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">env</name></expr></argument>, <argument pos:start="21:25" pos:end="21:35"><expr pos:start="21:25" pos:end="21:35"><operator pos:start="21:25" pos:end="21:25">(</operator><name pos:start="21:26" pos:end="21:29">FILE</name> <operator pos:start="21:31" pos:end="21:31">*</operator><operator pos:start="21:32" pos:end="21:32">)</operator><name pos:start="21:33" pos:end="21:35">mon</name></expr></argument>, <argument pos:start="21:38" pos:end="21:52"><expr pos:start="21:38" pos:end="21:52"><name pos:start="21:38" pos:end="21:52">monitor_fprintf</name></expr></argument>,

                   <argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
