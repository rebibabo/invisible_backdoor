<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25228.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">av_image_fill_linesizes</name><parameter_list pos:start="1:28" pos:end="1:82">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:31">int</name></type> <name pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:41">linesizes</name><index pos:start="1:42" pos:end="1:44">[<expr pos:start="1:43" pos:end="1:43"><literal type="number" pos:start="1:43" pos:end="1:43">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:70"><decl pos:start="1:47" pos:end="1:70"><type pos:start="1:47" pos:end="1:70"><name pos:start="1:47" pos:end="1:62"><name pos:start="1:47" pos:end="1:50">enum</name> <name pos:start="1:52" pos:end="1:62">PixelFormat</name></name></type> <name pos:start="1:64" pos:end="1:70">pix_fmt</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:81"><decl pos:start="1:73" pos:end="1:81"><type pos:start="1:73" pos:end="1:81"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:81">width</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:70"><decl pos:start="7:5" pos:end="7:69"><type pos:start="7:5" pos:end="7:30"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:28">AVPixFmtDescriptor</name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:34">desc</name> <init pos:start="7:36" pos:end="7:69">= <expr pos:start="7:38" pos:end="7:69"><operator pos:start="7:38" pos:end="7:38">&amp;</operator><name pos:start="7:39" pos:end="7:69"><name pos:start="7:39" pos:end="7:60">av_pix_fmt_descriptors</name><index pos:start="7:61" pos:end="7:69">[<expr pos:start="7:62" pos:end="7:68"><name pos:start="7:62" pos:end="7:68">pix_fmt</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:24"><name pos:start="9:9" pos:end="9:16">max_step</name>     <index pos:start="9:22" pos:end="9:24">[<expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">4</literal></expr>]</index></name></decl>;</decl_stmt>       <comment type="block" pos:start="9:33" pos:end="9:67">/* max pixel step for each plane */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:21">max_step_comp</name><index pos:start="11:22" pos:end="11:24">[<expr pos:start="11:23" pos:end="11:23"><literal type="number" pos:start="11:23" pos:end="11:23">4</literal></expr>]</index></name></decl>;</decl_stmt>       <comment type="block" pos:start="11:33" pos:end="11:95">/* the component for each plane which has the max pixel step */</comment>



    <expr_stmt pos:start="15:5" pos:end="15:49"><expr pos:start="15:5" pos:end="15:48"><call pos:start="15:5" pos:end="15:48"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:48">(<argument pos:start="15:12" pos:end="15:20"><expr pos:start="15:12" pos:end="15:20"><name pos:start="15:12" pos:end="15:20">linesizes</name></expr></argument>, <argument pos:start="15:23" pos:end="15:23"><expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></argument>, <argument pos:start="15:26" pos:end="15:47"><expr pos:start="15:26" pos:end="15:47"><literal type="number" pos:start="15:26" pos:end="15:26">4</literal><operator pos:start="15:27" pos:end="15:27">*</operator><sizeof pos:start="15:28" pos:end="15:47">sizeof<argument_list pos:start="15:34" pos:end="15:47">(<argument pos:start="15:35" pos:end="15:46"><expr pos:start="15:35" pos:end="15:46"><name pos:start="15:35" pos:end="15:46"><name pos:start="15:35" pos:end="15:43">linesizes</name><index pos:start="15:44" pos:end="15:46">[<expr pos:start="15:45" pos:end="15:45"><literal type="number" pos:start="15:45" pos:end="15:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:38">(<expr pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:12">desc</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:19">flags</name></name> <operator pos:start="19:21" pos:end="19:21">&amp;</operator> <name pos:start="19:23" pos:end="19:37">PIX_FMT_HWACCEL</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:40">(<expr pos:start="25:9" pos:end="25:39"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:12">desc</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:19">flags</name></name> <operator pos:start="25:21" pos:end="25:21">&amp;</operator> <name pos:start="25:23" pos:end="25:39">PIX_FMT_BITSTREAM</name></expr>)</condition> <block pos:start="25:42" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:17">

        <expr_stmt pos:start="27:9" pos:end="27:72"><expr pos:start="27:9" pos:end="27:71"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:17">linesizes</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>]</index></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <operator pos:start="27:24" pos:end="27:24">(</operator><name pos:start="27:25" pos:end="27:29">width</name> <operator pos:start="27:31" pos:end="27:31">*</operator> <operator pos:start="27:33" pos:end="27:33">(</operator><name pos:start="27:34" pos:end="27:46"><name pos:start="27:34" pos:end="27:37">desc</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:43">comp</name><index pos:start="27:44" pos:end="27:46">[<expr pos:start="27:45" pos:end="27:45"><literal type="number" pos:start="27:45" pos:end="27:45">0</literal></expr>]</index></name><operator pos:start="27:47" pos:end="27:47">.</operator><name pos:start="27:48" pos:end="27:58">step_minus1</name><operator pos:start="27:59" pos:end="27:59">+</operator><literal type="number" pos:start="27:60" pos:end="27:60">1</literal><operator pos:start="27:61" pos:end="27:61">)</operator> <operator pos:start="27:63" pos:end="27:63">+</operator> <literal type="number" pos:start="27:65" pos:end="27:65">7</literal><operator pos:start="27:66" pos:end="27:66">)</operator> <operator pos:start="27:68" pos:end="27:69">&gt;&gt;</operator> <literal type="number" pos:start="27:71" pos:end="27:71">3</literal></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:62"><expr pos:start="35:5" pos:end="35:61"><call pos:start="35:5" pos:end="35:61"><name pos:start="35:5" pos:end="35:30">av_image_fill_max_pixsteps</name><argument_list pos:start="35:31" pos:end="35:61">(<argument pos:start="35:32" pos:end="35:39"><expr pos:start="35:32" pos:end="35:39"><name pos:start="35:32" pos:end="35:39">max_step</name></expr></argument>, <argument pos:start="35:42" pos:end="35:54"><expr pos:start="35:42" pos:end="35:54"><name pos:start="35:42" pos:end="35:54">max_step_comp</name></expr></argument>, <argument pos:start="35:57" pos:end="35:60"><expr pos:start="35:57" pos:end="35:60"><name pos:start="35:57" pos:end="35:60">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="37:5" pos:end="43:5">for <control pos:start="37:9" pos:end="37:27">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:22"><expr pos:start="37:17" pos:end="37:21"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <literal type="number" pos:start="37:21" pos:end="37:21">4</literal></expr>;</condition> <incr pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:24">i</name><operator pos:start="37:25" pos:end="37:26">++</operator></expr></incr>)</control> <block pos:start="37:29" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:69">

        <decl_stmt pos:start="39:9" pos:end="39:91"><decl pos:start="39:9" pos:end="39:90"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:13">s</name> <init pos:start="39:15" pos:end="39:90">= <expr pos:start="39:17" pos:end="39:90"><ternary pos:start="39:17" pos:end="39:90"><condition pos:start="39:17" pos:end="39:66"><expr pos:start="39:17" pos:end="39:64"><operator pos:start="39:17" pos:end="39:17">(</operator><name pos:start="39:18" pos:end="39:33"><name pos:start="39:18" pos:end="39:30">max_step_comp</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">i</name></expr>]</index></name> <operator pos:start="39:35" pos:end="39:36">==</operator> <literal type="number" pos:start="39:38" pos:end="39:38">1</literal> <operator pos:start="39:40" pos:end="39:41">||</operator> <name pos:start="39:43" pos:end="39:58"><name pos:start="39:43" pos:end="39:55">max_step_comp</name><index pos:start="39:56" pos:end="39:58">[<expr pos:start="39:57" pos:end="39:57"><name pos:start="39:57" pos:end="39:57">i</name></expr>]</index></name> <operator pos:start="39:60" pos:end="39:61">==</operator> <literal type="number" pos:start="39:63" pos:end="39:63">2</literal><operator pos:start="39:64" pos:end="39:64">)</operator></expr> ?</condition><then pos:start="39:68" pos:end="39:86"> <expr pos:start="39:68" pos:end="39:86"><name pos:start="39:68" pos:end="39:86"><name pos:start="39:68" pos:end="39:71">desc</name><operator pos:start="39:72" pos:end="39:73">-&gt;</operator><name pos:start="39:74" pos:end="39:86">log2_chroma_w</name></name></expr> </then><else pos:start="39:88" pos:end="39:90">: <expr pos:start="39:90" pos:end="39:90"><literal type="number" pos:start="39:90" pos:end="39:90">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:69"><expr pos:start="41:9" pos:end="41:68"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:17">linesizes</name><index pos:start="41:18" pos:end="41:20">[<expr pos:start="41:19" pos:end="41:19"><name pos:start="41:19" pos:end="41:19">i</name></expr>]</index></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:34"><name pos:start="41:24" pos:end="41:31">max_step</name><index pos:start="41:32" pos:end="41:34">[<expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">i</name></expr>]</index></name> <operator pos:start="41:36" pos:end="41:36">*</operator> <operator pos:start="41:38" pos:end="41:38">(</operator><operator pos:start="41:39" pos:end="41:39">(</operator><operator pos:start="41:40" pos:end="41:40">(</operator><name pos:start="41:41" pos:end="41:45">width</name> <operator pos:start="41:47" pos:end="41:47">+</operator> <operator pos:start="41:49" pos:end="41:49">(</operator><literal type="number" pos:start="41:50" pos:end="41:50">1</literal> <operator pos:start="41:52" pos:end="41:53">&lt;&lt;</operator> <name pos:start="41:55" pos:end="41:55">s</name><operator pos:start="41:56" pos:end="41:56">)</operator> <operator pos:start="41:58" pos:end="41:58">-</operator> <literal type="number" pos:start="41:60" pos:end="41:60">1</literal><operator pos:start="41:61" pos:end="41:61">)</operator><operator pos:start="41:62" pos:end="41:62">)</operator> <operator pos:start="41:64" pos:end="41:65">&gt;&gt;</operator> <name pos:start="41:67" pos:end="41:67">s</name><operator pos:start="41:68" pos:end="41:68">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
