<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21920.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">qcow2_write</name><parameter_list pos:start="1:23" pos:end="3:58">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:39">BlockDriverState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">bs</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:63"><decl pos:start="1:46" pos:end="1:63"><type pos:start="1:46" pos:end="1:63"><name pos:start="1:46" pos:end="1:52">int64_t</name></type> <name pos:start="1:54" pos:end="1:63">sector_num</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:41"><decl pos:start="3:24" pos:end="3:41"><type pos:start="3:24" pos:end="3:41"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:36">uint8_t</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">buf</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:57"><decl pos:start="3:44" pos:end="3:57"><type pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:57">nb_sectors</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:20">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">Coroutine</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">co</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:54"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">AioContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:27">aio_context</name> <init pos:start="9:29" pos:end="9:54">= <expr pos:start="9:31" pos:end="9:54"><call pos:start="9:31" pos:end="9:54"><name pos:start="9:31" pos:end="9:50">bdrv_get_aio_context</name><argument_list pos:start="9:51" pos:end="9:54">(<argument pos:start="9:52" pos:end="9:53"><expr pos:start="9:52" pos:end="9:53"><name pos:start="9:52" pos:end="9:53">bs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="23:6"><decl pos:start="11:5" pos:end="23:5"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">Qcow2WriteCo</name></type> <name pos:start="11:18" pos:end="11:21">data</name> <init pos:start="11:23" pos:end="23:5">= <expr pos:start="11:25" pos:end="23:5"><block pos:start="11:25" pos:end="23:5">{

        <expr pos:start="13:9" pos:end="13:24"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:11">bs</name>         <operator pos:start="13:21" pos:end="13:21">=</operator> <name pos:start="13:23" pos:end="13:24">bs</name></expr>,

        <expr pos:start="15:9" pos:end="15:32"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:19">sector_num</name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:32">sector_num</name></expr>,

        <expr pos:start="17:9" pos:end="17:25"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:12">buf</name>        <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:25">buf</name></expr>,

        <expr pos:start="19:9" pos:end="19:32"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:19">nb_sectors</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:32">nb_sectors</name></expr>,

        <expr pos:start="21:9" pos:end="21:34"><operator pos:start="21:9" pos:end="21:9">.</operator><name pos:start="21:10" pos:end="21:12">ret</name>        <operator pos:start="21:21" pos:end="21:21">=</operator> <operator pos:start="21:23" pos:end="21:23">-</operator><name pos:start="21:24" pos:end="21:34">EINPROGRESS</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:53"><expr pos:start="25:5" pos:end="25:52"><name pos:start="25:5" pos:end="25:6">co</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:52"><name pos:start="25:10" pos:end="25:30">qemu_coroutine_create</name><argument_list pos:start="25:31" pos:end="25:52">(<argument pos:start="25:32" pos:end="25:51"><expr pos:start="25:32" pos:end="25:51"><name pos:start="25:32" pos:end="25:51">qcow2_write_co_entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><call pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:24">qemu_coroutine_enter</name><argument_list pos:start="27:25" pos:end="27:35">(<argument pos:start="27:26" pos:end="27:27"><expr pos:start="27:26" pos:end="27:27"><name pos:start="27:26" pos:end="27:27">co</name></expr></argument>, <argument pos:start="27:30" pos:end="27:34"><expr pos:start="27:30" pos:end="27:34"><operator pos:start="27:30" pos:end="27:30">&amp;</operator><name pos:start="27:31" pos:end="27:34">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="29:5" pos:end="33:5">while <condition pos:start="29:11" pos:end="29:36">(<expr pos:start="29:12" pos:end="29:35"><name pos:start="29:12" pos:end="29:19"><name pos:start="29:12" pos:end="29:15">data</name><operator pos:start="29:16" pos:end="29:16">.</operator><name pos:start="29:17" pos:end="29:19">ret</name></name> <operator pos:start="29:21" pos:end="29:22">==</operator> <operator pos:start="29:24" pos:end="29:24">-</operator><name pos:start="29:25" pos:end="29:35">EINPROGRESS</name></expr>)</condition> <block pos:start="29:38" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:36">

        <expr_stmt pos:start="31:9" pos:end="31:36"><expr pos:start="31:9" pos:end="31:35"><call pos:start="31:9" pos:end="31:35"><name pos:start="31:9" pos:end="31:16">aio_poll</name><argument_list pos:start="31:17" pos:end="31:35">(<argument pos:start="31:18" pos:end="31:28"><expr pos:start="31:18" pos:end="31:28"><name pos:start="31:18" pos:end="31:28">aio_context</name></expr></argument>, <argument pos:start="31:31" pos:end="31:34"><expr pos:start="31:31" pos:end="31:34"><name pos:start="31:31" pos:end="31:34">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="35:5" pos:end="35:20">return <expr pos:start="35:12" pos:end="35:19"><name pos:start="35:12" pos:end="35:19"><name pos:start="35:12" pos:end="35:15">data</name><operator pos:start="35:16" pos:end="35:16">.</operator><name pos:start="35:17" pos:end="35:19">ret</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
