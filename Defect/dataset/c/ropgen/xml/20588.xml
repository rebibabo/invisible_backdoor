<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20588.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:57"><name pos:start="1:1" pos:end="1:16">dshow_cycle_pins</name><argument_list pos:start="1:17" pos:end="3:57">(<argument pos:start="1:18" pos:end="1:39">AVFormatContext *avctx</argument>, <argument pos:start="1:42" pos:end="1:69">enum dshowDeviceType devtype</argument>,

                 <argument pos:start="3:18" pos:end="3:43">IBaseFilter *device_filter</argument>, <argument pos:start="3:46" pos:end="3:56">IPin **ppin</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="197:1">{<block_content pos:start="7:5" pos:end="195:13">

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:20">dshow_ctx</name></name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">ctx</name> <init pos:start="7:27" pos:end="7:44">= <expr pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:33">avctx</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">IEnumPins</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:19">pins</name> <init pos:start="9:21" pos:end="9:23">= <expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">IPin</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:20">device_pin</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">IPin</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:13">pin</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">r</name></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:70"><decl pos:start="19:5" pos:end="19:69"><type pos:start="19:5" pos:end="19:16"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:14">GUID</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:28"><name pos:start="19:17" pos:end="19:25">mediatype</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><literal type="number" pos:start="19:27" pos:end="19:27">2</literal></expr>]</index></name> <init pos:start="19:30" pos:end="19:69">= <expr pos:start="19:32" pos:end="19:69"><block pos:start="19:32" pos:end="19:69">{ <expr pos:start="19:34" pos:end="19:49"><operator pos:start="19:34" pos:end="19:34">&amp;</operator><name pos:start="19:35" pos:end="19:49">MEDIATYPE_Video</name></expr>, <expr pos:start="19:52" pos:end="19:67"><operator pos:start="19:52" pos:end="19:52">&amp;</operator><name pos:start="19:53" pos:end="19:67">MEDIATYPE_Audio</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:75"><decl pos:start="21:5" pos:end="21:74"><type pos:start="21:5" pos:end="21:16"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:14">char</name> <modifier pos:start="21:16" pos:end="21:16">*</modifier></type><name pos:start="21:17" pos:end="21:27">devtypename</name> <init pos:start="21:29" pos:end="21:74">= <expr pos:start="21:31" pos:end="21:74"><ternary pos:start="21:31" pos:end="21:74"><condition pos:start="21:31" pos:end="21:56"><expr pos:start="21:31" pos:end="21:54"><operator pos:start="21:31" pos:end="21:31">(</operator><name pos:start="21:32" pos:end="21:38">devtype</name> <operator pos:start="21:40" pos:end="21:41">==</operator> <name pos:start="21:43" pos:end="21:53">VideoDevice</name><operator pos:start="21:54" pos:end="21:54">)</operator></expr> ?</condition><then pos:start="21:58" pos:end="21:64"> <expr pos:start="21:58" pos:end="21:64"><literal type="string" pos:start="21:58" pos:end="21:64">"video"</literal></expr> </then><else pos:start="21:66" pos:end="21:74">: <expr pos:start="21:68" pos:end="21:74"><literal type="string" pos:start="21:68" pos:end="21:74">"audio"</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="25:5" pos:end="27:85"><decl pos:start="25:5" pos:end="27:84"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:18">set_format</name> <init pos:start="25:20" pos:end="27:84">= <expr pos:start="25:22" pos:end="27:84"><operator pos:start="25:22" pos:end="25:22">(</operator><name pos:start="25:23" pos:end="25:29">devtype</name> <operator pos:start="25:31" pos:end="25:32">==</operator> <name pos:start="25:34" pos:end="25:44">VideoDevice</name> <operator pos:start="25:46" pos:end="25:47">&amp;&amp;</operator> <operator pos:start="25:49" pos:end="25:49">(</operator><name pos:start="25:50" pos:end="25:64"><name pos:start="25:50" pos:end="25:52">ctx</name><operator pos:start="25:53" pos:end="25:54">-&gt;</operator><name pos:start="25:55" pos:end="25:64">video_size</name></name> <operator pos:start="25:66" pos:end="25:67">||</operator> <name pos:start="25:69" pos:end="25:82"><name pos:start="25:69" pos:end="25:71">ctx</name><operator pos:start="25:72" pos:end="25:73">-&gt;</operator><name pos:start="25:74" pos:end="25:82">framerate</name></name><operator pos:start="25:83" pos:end="25:83">)</operator><operator pos:start="25:84" pos:end="25:84">)</operator>

                  <operator pos:start="27:19" pos:end="27:20">||</operator> <operator pos:start="27:22" pos:end="27:22">(</operator><name pos:start="27:23" pos:end="27:29">devtype</name> <operator pos:start="27:31" pos:end="27:32">==</operator> <name pos:start="27:34" pos:end="27:44">AudioDevice</name> <operator pos:start="27:46" pos:end="27:47">&amp;&amp;</operator> <operator pos:start="27:49" pos:end="27:49">(</operator><name pos:start="27:50" pos:end="27:62"><name pos:start="27:50" pos:end="27:52">ctx</name><operator pos:start="27:53" pos:end="27:54">-&gt;</operator><name pos:start="27:55" pos:end="27:62">channels</name></name> <operator pos:start="27:64" pos:end="27:65">||</operator> <name pos:start="27:67" pos:end="27:82"><name pos:start="27:67" pos:end="27:69">ctx</name><operator pos:start="27:70" pos:end="27:71">-&gt;</operator><name pos:start="27:72" pos:end="27:82">sample_rate</name></name><operator pos:start="27:83" pos:end="27:83">)</operator><operator pos:start="27:84" pos:end="27:84">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:23"><decl pos:start="29:5" pos:end="29:22"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:18">format_set</name> <init pos:start="29:20" pos:end="29:22">= <expr pos:start="29:22" pos:end="29:22"><literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:51"><expr pos:start="33:5" pos:end="33:50"><name pos:start="33:5" pos:end="33:5">r</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <call pos:start="33:9" pos:end="33:50"><name pos:start="33:9" pos:end="33:28">IBaseFilter_EnumPins</name><argument_list pos:start="33:29" pos:end="33:50">(<argument pos:start="33:30" pos:end="33:42"><expr pos:start="33:30" pos:end="33:42"><name pos:start="33:30" pos:end="33:42">device_filter</name></expr></argument>, <argument pos:start="33:45" pos:end="33:49"><expr pos:start="33:45" pos:end="33:49"><operator pos:start="33:45" pos:end="33:45">&amp;</operator><name pos:start="33:46" pos:end="33:49">pins</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:18">(<expr pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:9">r</name> <operator pos:start="35:11" pos:end="35:12">!=</operator> <name pos:start="35:14" pos:end="35:17">S_OK</name></expr>)</condition> <block pos:start="35:20" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:28">

        <expr_stmt pos:start="37:9" pos:end="37:67"><expr pos:start="37:9" pos:end="37:66"><call pos:start="37:9" pos:end="37:66"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:66">(<argument pos:start="37:16" pos:end="37:20"><expr pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:20">avctx</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:37" pos:end="37:65"><expr pos:start="37:37" pos:end="37:65"><literal type="string" pos:start="37:37" pos:end="37:65">"Could not enumerate pins.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:28">return <expr pos:start="39:16" pos:end="39:27"><call pos:start="39:16" pos:end="39:27"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:27">(<argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:14">(<expr pos:start="45:9" pos:end="45:13"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:13">ppin</name></expr>)</condition> <block pos:start="45:16" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:28">

        <expr_stmt pos:start="47:9" pos:end="49:28"><expr pos:start="47:9" pos:end="49:27"><call pos:start="47:9" pos:end="49:27"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="49:27">(<argument pos:start="47:16" pos:end="47:20"><expr pos:start="47:16" pos:end="47:20"><name pos:start="47:16" pos:end="47:20">avctx</name></expr></argument>, <argument pos:start="47:23" pos:end="47:33"><expr pos:start="47:23" pos:end="47:33"><name pos:start="47:23" pos:end="47:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="47:36" pos:end="47:67"><expr pos:start="47:36" pos:end="47:67"><literal type="string" pos:start="47:36" pos:end="47:67">"DirectShow %s device options\n"</literal></expr></argument>,

               <argument pos:start="49:16" pos:end="49:26"><expr pos:start="49:16" pos:end="49:26"><name pos:start="49:16" pos:end="49:26">devtypename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <while pos:start="53:5" pos:end="161:5">while <condition pos:start="53:11" pos:end="53:70">(<expr pos:start="53:12" pos:end="53:69"><call pos:start="53:12" pos:end="53:46"><name pos:start="53:12" pos:end="53:25">IEnumPins_Next</name><argument_list pos:start="53:26" pos:end="53:46">(<argument pos:start="53:27" pos:end="53:30"><expr pos:start="53:27" pos:end="53:30"><name pos:start="53:27" pos:end="53:30">pins</name></expr></argument>, <argument pos:start="53:33" pos:end="53:33"><expr pos:start="53:33" pos:end="53:33"><literal type="number" pos:start="53:33" pos:end="53:33">1</literal></expr></argument>, <argument pos:start="53:36" pos:end="53:39"><expr pos:start="53:36" pos:end="53:39"><operator pos:start="53:36" pos:end="53:36">&amp;</operator><name pos:start="53:37" pos:end="53:39">pin</name></expr></argument>, <argument pos:start="53:42" pos:end="53:45"><expr pos:start="53:42" pos:end="53:45"><name pos:start="53:42" pos:end="53:45">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="53:48" pos:end="53:49">==</operator> <name pos:start="53:51" pos:end="53:54">S_OK</name> <operator pos:start="53:56" pos:end="53:57">&amp;&amp;</operator> <operator pos:start="53:59" pos:end="53:59">!</operator><name pos:start="53:60" pos:end="53:69">device_pin</name></expr>)</condition> <block pos:start="53:72" pos:end="161:5">{<block_content pos:start="55:9" pos:end="159:30">

        <decl_stmt pos:start="55:9" pos:end="55:33"><decl pos:start="55:9" pos:end="55:32"><type pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:22">IKsPropertySet</name> <modifier pos:start="55:24" pos:end="55:24">*</modifier></type><name pos:start="55:25" pos:end="55:25">p</name> <init pos:start="55:27" pos:end="55:32">= <expr pos:start="55:29" pos:end="55:32"><name pos:start="55:29" pos:end="55:32">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:38"><decl pos:start="57:9" pos:end="57:37"><type pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:23">IEnumMediaTypes</name> <modifier pos:start="57:25" pos:end="57:25">*</modifier></type><name pos:start="57:26" pos:end="57:30">types</name> <init pos:start="57:32" pos:end="57:37">= <expr pos:start="57:34" pos:end="57:37"><name pos:start="57:34" pos:end="57:37">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:28"><decl pos:start="59:9" pos:end="59:27"><type pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:16">PIN_INFO</name></type> <name pos:start="59:18" pos:end="59:21">info</name> <init pos:start="59:23" pos:end="59:27">= <expr pos:start="59:25" pos:end="59:27"><block pos:start="59:25" pos:end="59:27">{<expr pos:start="59:26" pos:end="59:26"><literal type="number" pos:start="59:26" pos:end="59:26">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:28"><decl pos:start="61:9" pos:end="61:27"><type pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:21">AM_MEDIA_TYPE</name> <modifier pos:start="61:23" pos:end="61:23">*</modifier></type><name pos:start="61:24" pos:end="61:27">type</name></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:22"><decl pos:start="63:9" pos:end="63:21"><type pos:start="63:9" pos:end="63:12"><name pos:start="63:9" pos:end="63:12">GUID</name></type> <name pos:start="63:14" pos:end="63:21">category</name></decl>;</decl_stmt>

        <decl_stmt pos:start="65:9" pos:end="65:17"><decl pos:start="65:9" pos:end="65:16"><type pos:start="65:9" pos:end="65:13"><name pos:start="65:9" pos:end="65:13">DWORD</name></type> <name pos:start="65:15" pos:end="65:16">r2</name></decl>;</decl_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:38"><expr pos:start="69:9" pos:end="69:37"><call pos:start="69:9" pos:end="69:37"><name pos:start="69:9" pos:end="69:25">IPin_QueryPinInfo</name><argument_list pos:start="69:26" pos:end="69:37">(<argument pos:start="69:27" pos:end="69:29"><expr pos:start="69:27" pos:end="69:29"><name pos:start="69:27" pos:end="69:29">pin</name></expr></argument>, <argument pos:start="69:32" pos:end="69:36"><expr pos:start="69:32" pos:end="69:36"><operator pos:start="69:32" pos:end="69:32">&amp;</operator><name pos:start="69:33" pos:end="69:36">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:42"><expr pos:start="71:9" pos:end="71:41"><call pos:start="71:9" pos:end="71:41"><name pos:start="71:9" pos:end="71:27">IBaseFilter_Release</name><argument_list pos:start="71:28" pos:end="71:41">(<argument pos:start="71:29" pos:end="71:40"><expr pos:start="71:29" pos:end="71:40"><name pos:start="71:29" pos:end="71:40"><name pos:start="71:29" pos:end="71:32">info</name><operator pos:start="71:33" pos:end="71:33">.</operator><name pos:start="71:34" pos:end="71:40">pFilter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="75:9" pos:end="77:22"><if pos:start="75:9" pos:end="77:22">if <condition pos:start="75:12" pos:end="75:38">(<expr pos:start="75:13" pos:end="75:37"><name pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:16">info</name><operator pos:start="75:17" pos:end="75:17">.</operator><name pos:start="75:18" pos:end="75:20">dir</name></name> <operator pos:start="75:22" pos:end="75:23">!=</operator> <name pos:start="75:25" pos:end="75:37">PINDIR_OUTPUT</name></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:22"><block_content pos:start="77:13" pos:end="77:22">

            <goto pos:start="77:13" pos:end="77:22">goto <name pos:start="77:18" pos:end="77:21">next</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="79:9" pos:end="81:22"><if pos:start="79:9" pos:end="81:22">if <condition pos:start="79:12" pos:end="79:80">(<expr pos:start="79:13" pos:end="79:79"><call pos:start="79:13" pos:end="79:71"><name pos:start="79:13" pos:end="79:31">IPin_QueryInterface</name><argument_list pos:start="79:32" pos:end="79:71">(<argument pos:start="79:33" pos:end="79:35"><expr pos:start="79:33" pos:end="79:35"><name pos:start="79:33" pos:end="79:35">pin</name></expr></argument>, <argument pos:start="79:38" pos:end="79:56"><expr pos:start="79:38" pos:end="79:56"><operator pos:start="79:38" pos:end="79:38">&amp;</operator><name pos:start="79:39" pos:end="79:56">IID_IKsPropertySet</name></expr></argument>, <argument pos:start="79:59" pos:end="79:70"><expr pos:start="79:59" pos:end="79:70"><operator pos:start="79:59" pos:end="79:59">(</operator><name pos:start="79:60" pos:end="79:63">void</name> <operator pos:start="79:65" pos:end="79:65">*</operator><operator pos:start="79:66" pos:end="79:66">*</operator><operator pos:start="79:67" pos:end="79:67">)</operator> <operator pos:start="79:69" pos:end="79:69">&amp;</operator><name pos:start="79:70" pos:end="79:70">p</name></expr></argument>)</argument_list></call> <operator pos:start="79:73" pos:end="79:74">!=</operator> <name pos:start="79:76" pos:end="79:79">S_OK</name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:22"><block_content pos:start="81:13" pos:end="81:22">

            <goto pos:start="81:13" pos:end="81:22">goto <name pos:start="81:18" pos:end="81:21">next</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="83:9" pos:end="87:22"><if pos:start="83:9" pos:end="87:22">if <condition pos:start="83:12" pos:end="85:78">(<expr pos:start="83:13" pos:end="85:77"><call pos:start="83:13" pos:end="85:69"><name pos:start="83:13" pos:end="83:30">IKsPropertySet_Get</name><argument_list pos:start="83:31" pos:end="85:69">(<argument pos:start="83:32" pos:end="83:32"><expr pos:start="83:32" pos:end="83:32"><name pos:start="83:32" pos:end="83:32">p</name></expr></argument>, <argument pos:start="83:35" pos:end="83:50"><expr pos:start="83:35" pos:end="83:50"><operator pos:start="83:35" pos:end="83:35">&amp;</operator><name pos:start="83:36" pos:end="83:50">AMPROPSETID_Pin</name></expr></argument>, <argument pos:start="83:53" pos:end="83:75"><expr pos:start="83:53" pos:end="83:75"><name pos:start="83:53" pos:end="83:75">AMPROPERTY_PIN_CATEGORY</name></expr></argument>,

                               <argument pos:start="85:32" pos:end="85:35"><expr pos:start="85:32" pos:end="85:35"><name pos:start="85:32" pos:end="85:35">NULL</name></expr></argument>, <argument pos:start="85:38" pos:end="85:38"><expr pos:start="85:38" pos:end="85:38"><literal type="number" pos:start="85:38" pos:end="85:38">0</literal></expr></argument>, <argument pos:start="85:41" pos:end="85:49"><expr pos:start="85:41" pos:end="85:49"><operator pos:start="85:41" pos:end="85:41">&amp;</operator><name pos:start="85:42" pos:end="85:49">category</name></expr></argument>, <argument pos:start="85:52" pos:end="85:63"><expr pos:start="85:52" pos:end="85:63"><sizeof pos:start="85:52" pos:end="85:63">sizeof<argument_list pos:start="85:58" pos:end="85:63">(<argument pos:start="85:59" pos:end="85:62"><expr pos:start="85:59" pos:end="85:62"><name pos:start="85:59" pos:end="85:62">GUID</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="85:66" pos:end="85:68"><expr pos:start="85:66" pos:end="85:68"><operator pos:start="85:66" pos:end="85:66">&amp;</operator><name pos:start="85:67" pos:end="85:68">r2</name></expr></argument>)</argument_list></call> <operator pos:start="85:71" pos:end="85:72">!=</operator> <name pos:start="85:74" pos:end="85:77">S_OK</name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:22"><block_content pos:start="87:13" pos:end="87:22">

            <goto pos:start="87:13" pos:end="87:22">goto <name pos:start="87:18" pos:end="87:21">next</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="91:22"><if pos:start="89:9" pos:end="91:22">if <condition pos:start="89:12" pos:end="89:59">(<expr pos:start="89:13" pos:end="89:58"><operator pos:start="89:13" pos:end="89:13">!</operator><call pos:start="89:14" pos:end="89:58"><name pos:start="89:14" pos:end="89:24">IsEqualGUID</name><argument_list pos:start="89:25" pos:end="89:58">(<argument pos:start="89:26" pos:end="89:34"><expr pos:start="89:26" pos:end="89:34"><operator pos:start="89:26" pos:end="89:26">&amp;</operator><name pos:start="89:27" pos:end="89:34">category</name></expr></argument>, <argument pos:start="89:37" pos:end="89:57"><expr pos:start="89:37" pos:end="89:57"><operator pos:start="89:37" pos:end="89:37">&amp;</operator><name pos:start="89:38" pos:end="89:57">PIN_CATEGORY_CAPTURE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:22"><block_content pos:start="91:13" pos:end="91:22">

            <goto pos:start="91:13" pos:end="91:22">goto <name pos:start="91:18" pos:end="91:21">next</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="95:9" pos:end="107:9"><if pos:start="95:9" pos:end="107:9">if <condition pos:start="95:12" pos:end="95:18">(<expr pos:start="95:13" pos:end="95:17"><operator pos:start="95:13" pos:end="95:13">!</operator><name pos:start="95:14" pos:end="95:17">ppin</name></expr>)</condition> <block pos:start="95:20" pos:end="107:9">{<block_content pos:start="97:13" pos:end="105:22">

            <decl_stmt pos:start="97:13" pos:end="97:56"><decl pos:start="97:13" pos:end="97:55"><type pos:start="97:13" pos:end="97:18"><name pos:start="97:13" pos:end="97:16">char</name> <modifier pos:start="97:18" pos:end="97:18">*</modifier></type><name pos:start="97:19" pos:end="97:21">buf</name> <init pos:start="97:23" pos:end="97:55">= <expr pos:start="97:25" pos:end="97:55"><call pos:start="97:25" pos:end="97:55"><name pos:start="97:25" pos:end="97:41">dup_wchar_to_utf8</name><argument_list pos:start="97:42" pos:end="97:55">(<argument pos:start="97:43" pos:end="97:54"><expr pos:start="97:43" pos:end="97:54"><name pos:start="97:43" pos:end="97:54"><name pos:start="97:43" pos:end="97:46">info</name><operator pos:start="97:47" pos:end="97:47">.</operator><name pos:start="97:48" pos:end="97:54">achName</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:61"><expr pos:start="99:13" pos:end="99:60"><call pos:start="99:13" pos:end="99:60"><name pos:start="99:13" pos:end="99:18">av_log</name><argument_list pos:start="99:19" pos:end="99:60">(<argument pos:start="99:20" pos:end="99:24"><expr pos:start="99:20" pos:end="99:24"><name pos:start="99:20" pos:end="99:24">avctx</name></expr></argument>, <argument pos:start="99:27" pos:end="99:37"><expr pos:start="99:27" pos:end="99:37"><name pos:start="99:27" pos:end="99:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="99:40" pos:end="99:54"><expr pos:start="99:40" pos:end="99:54"><literal type="string" pos:start="99:40" pos:end="99:54">" Pin \"%s\"\n"</literal></expr></argument>, <argument pos:start="99:57" pos:end="99:59"><expr pos:start="99:57" pos:end="99:59"><name pos:start="99:57" pos:end="99:59">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:25"><expr pos:start="101:13" pos:end="101:24"><call pos:start="101:13" pos:end="101:24"><name pos:start="101:13" pos:end="101:19">av_free</name><argument_list pos:start="101:20" pos:end="101:24">(<argument pos:start="101:21" pos:end="101:23"><expr pos:start="101:21" pos:end="101:23"><name pos:start="101:21" pos:end="101:23">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:59"><expr pos:start="103:13" pos:end="103:58"><call pos:start="103:13" pos:end="103:58"><name pos:start="103:13" pos:end="103:31">dshow_cycle_formats</name><argument_list pos:start="103:32" pos:end="103:58">(<argument pos:start="103:33" pos:end="103:37"><expr pos:start="103:33" pos:end="103:37"><name pos:start="103:33" pos:end="103:37">avctx</name></expr></argument>, <argument pos:start="103:40" pos:end="103:46"><expr pos:start="103:40" pos:end="103:46"><name pos:start="103:40" pos:end="103:46">devtype</name></expr></argument>, <argument pos:start="103:49" pos:end="103:51"><expr pos:start="103:49" pos:end="103:51"><name pos:start="103:49" pos:end="103:51">pin</name></expr></argument>, <argument pos:start="103:54" pos:end="103:57"><expr pos:start="103:54" pos:end="103:57"><name pos:start="103:54" pos:end="103:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="105:13" pos:end="105:22">goto <name pos:start="105:18" pos:end="105:21">next</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="109:9" pos:end="119:9"><if pos:start="109:9" pos:end="119:9">if <condition pos:start="109:12" pos:end="109:23">(<expr pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:22">set_format</name></expr>)</condition> <block pos:start="109:25" pos:end="119:9">{<block_content pos:start="111:13" pos:end="117:13">

            <expr_stmt pos:start="111:13" pos:end="111:66"><expr pos:start="111:13" pos:end="111:65"><call pos:start="111:13" pos:end="111:65"><name pos:start="111:13" pos:end="111:31">dshow_cycle_formats</name><argument_list pos:start="111:32" pos:end="111:65">(<argument pos:start="111:33" pos:end="111:37"><expr pos:start="111:33" pos:end="111:37"><name pos:start="111:33" pos:end="111:37">avctx</name></expr></argument>, <argument pos:start="111:40" pos:end="111:46"><expr pos:start="111:40" pos:end="111:46"><name pos:start="111:40" pos:end="111:46">devtype</name></expr></argument>, <argument pos:start="111:49" pos:end="111:51"><expr pos:start="111:49" pos:end="111:51"><name pos:start="111:49" pos:end="111:51">pin</name></expr></argument>, <argument pos:start="111:54" pos:end="111:64"><expr pos:start="111:54" pos:end="111:64"><operator pos:start="111:54" pos:end="111:54">&amp;</operator><name pos:start="111:55" pos:end="111:64">format_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="113:13" pos:end="117:13"><if pos:start="113:13" pos:end="117:13">if <condition pos:start="113:16" pos:end="113:28">(<expr pos:start="113:17" pos:end="113:27"><operator pos:start="113:17" pos:end="113:17">!</operator><name pos:start="113:18" pos:end="113:27">format_set</name></expr>)</condition> <block pos:start="113:30" pos:end="117:13">{<block_content pos:start="115:17" pos:end="115:26">

                <goto pos:start="115:17" pos:end="115:26">goto <name pos:start="115:22" pos:end="115:25">next</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="123:9" pos:end="125:22"><if pos:start="123:9" pos:end="125:22">if <condition pos:start="123:12" pos:end="123:53">(<expr pos:start="123:13" pos:end="123:52"><call pos:start="123:13" pos:end="123:44"><name pos:start="123:13" pos:end="123:31">IPin_EnumMediaTypes</name><argument_list pos:start="123:32" pos:end="123:44">(<argument pos:start="123:33" pos:end="123:35"><expr pos:start="123:33" pos:end="123:35"><name pos:start="123:33" pos:end="123:35">pin</name></expr></argument>, <argument pos:start="123:38" pos:end="123:43"><expr pos:start="123:38" pos:end="123:43"><operator pos:start="123:38" pos:end="123:38">&amp;</operator><name pos:start="123:39" pos:end="123:43">types</name></expr></argument>)</argument_list></call> <operator pos:start="123:46" pos:end="123:47">!=</operator> <name pos:start="123:49" pos:end="123:52">S_OK</name></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:22"><block_content pos:start="125:13" pos:end="125:22">

            <goto pos:start="125:13" pos:end="125:22">goto <name pos:start="125:18" pos:end="125:21">next</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:37"><expr pos:start="129:9" pos:end="129:36"><call pos:start="129:9" pos:end="129:36"><name pos:start="129:9" pos:end="129:29">IEnumMediaTypes_Reset</name><argument_list pos:start="129:30" pos:end="129:36">(<argument pos:start="129:31" pos:end="129:35"><expr pos:start="129:31" pos:end="129:35"><name pos:start="129:31" pos:end="129:35">types</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="131:9" pos:end="143:9">while <condition pos:start="131:15" pos:end="131:82">(<expr pos:start="131:16" pos:end="131:81"><call pos:start="131:16" pos:end="131:58"><name pos:start="131:16" pos:end="131:35">IEnumMediaTypes_Next</name><argument_list pos:start="131:36" pos:end="131:58">(<argument pos:start="131:37" pos:end="131:41"><expr pos:start="131:37" pos:end="131:41"><name pos:start="131:37" pos:end="131:41">types</name></expr></argument>, <argument pos:start="131:44" pos:end="131:44"><expr pos:start="131:44" pos:end="131:44"><literal type="number" pos:start="131:44" pos:end="131:44">1</literal></expr></argument>, <argument pos:start="131:47" pos:end="131:51"><expr pos:start="131:47" pos:end="131:51"><operator pos:start="131:47" pos:end="131:47">&amp;</operator><name pos:start="131:48" pos:end="131:51">type</name></expr></argument>, <argument pos:start="131:54" pos:end="131:57"><expr pos:start="131:54" pos:end="131:57"><name pos:start="131:54" pos:end="131:57">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="131:60" pos:end="131:61">==</operator> <name pos:start="131:63" pos:end="131:66">S_OK</name> <operator pos:start="131:68" pos:end="131:69">&amp;&amp;</operator> <operator pos:start="131:71" pos:end="131:71">!</operator><name pos:start="131:72" pos:end="131:81">device_pin</name></expr>)</condition> <block pos:start="131:84" pos:end="143:9">{<block_content pos:start="133:13" pos:end="141:32">

            <if_stmt pos:start="133:13" pos:end="139:13"><if pos:start="133:13" pos:end="139:13">if <condition pos:start="133:16" pos:end="133:66">(<expr pos:start="133:17" pos:end="133:65"><call pos:start="133:17" pos:end="133:65"><name pos:start="133:17" pos:end="133:27">IsEqualGUID</name><argument_list pos:start="133:28" pos:end="133:65">(<argument pos:start="133:29" pos:end="133:44"><expr pos:start="133:29" pos:end="133:44"><operator pos:start="133:29" pos:end="133:29">&amp;</operator><name pos:start="133:30" pos:end="133:44"><name pos:start="133:30" pos:end="133:33">type</name><operator pos:start="133:34" pos:end="133:35">-&gt;</operator><name pos:start="133:36" pos:end="133:44">majortype</name></name></expr></argument>, <argument pos:start="133:47" pos:end="133:64"><expr pos:start="133:47" pos:end="133:64"><name pos:start="133:47" pos:end="133:64"><name pos:start="133:47" pos:end="133:55">mediatype</name><index pos:start="133:56" pos:end="133:64">[<expr pos:start="133:57" pos:end="133:63"><name pos:start="133:57" pos:end="133:63">devtype</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:68" pos:end="139:13">{<block_content pos:start="135:17" pos:end="137:26">

                <expr_stmt pos:start="135:17" pos:end="135:33"><expr pos:start="135:17" pos:end="135:32"><name pos:start="135:17" pos:end="135:26">device_pin</name> <operator pos:start="135:28" pos:end="135:28">=</operator> <name pos:start="135:30" pos:end="135:32">pin</name></expr>;</expr_stmt>

                <goto pos:start="137:17" pos:end="137:26">goto <name pos:start="137:22" pos:end="137:25">next</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:32"><expr pos:start="141:13" pos:end="141:31"><call pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:25">CoTaskMemFree</name><argument_list pos:start="141:26" pos:end="141:31">(<argument pos:start="141:27" pos:end="141:30"><expr pos:start="141:27" pos:end="141:30"><name pos:start="141:27" pos:end="141:30">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>



<label pos:start="147:1" pos:end="147:5"><name pos:start="147:1" pos:end="147:4">next</name>:</label>

        <if_stmt pos:start="149:9" pos:end="151:43"><if pos:start="149:9" pos:end="151:43">if <condition pos:start="149:12" pos:end="149:18">(<expr pos:start="149:13" pos:end="149:17"><name pos:start="149:13" pos:end="149:17">types</name></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:43"><block_content pos:start="151:13" pos:end="151:43">

            <expr_stmt pos:start="151:13" pos:end="151:43"><expr pos:start="151:13" pos:end="151:42"><call pos:start="151:13" pos:end="151:42"><name pos:start="151:13" pos:end="151:35">IEnumMediaTypes_Release</name><argument_list pos:start="151:36" pos:end="151:42">(<argument pos:start="151:37" pos:end="151:41"><expr pos:start="151:37" pos:end="151:41"><name pos:start="151:37" pos:end="151:41">types</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="153:9" pos:end="155:38"><if pos:start="153:9" pos:end="155:38">if <condition pos:start="153:12" pos:end="153:14">(<expr pos:start="153:13" pos:end="153:13"><name pos:start="153:13" pos:end="153:13">p</name></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:38"><block_content pos:start="155:13" pos:end="155:38">

            <expr_stmt pos:start="155:13" pos:end="155:38"><expr pos:start="155:13" pos:end="155:37"><call pos:start="155:13" pos:end="155:37"><name pos:start="155:13" pos:end="155:34">IKsPropertySet_Release</name><argument_list pos:start="155:35" pos:end="155:37">(<argument pos:start="155:36" pos:end="155:36"><expr pos:start="155:36" pos:end="155:36"><name pos:start="155:36" pos:end="155:36">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="157:9" pos:end="159:30"><if pos:start="157:9" pos:end="159:30">if <condition pos:start="157:12" pos:end="157:30">(<expr pos:start="157:13" pos:end="157:29"><name pos:start="157:13" pos:end="157:22">device_pin</name> <operator pos:start="157:24" pos:end="157:25">!=</operator> <name pos:start="157:27" pos:end="157:29">pin</name></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:30"><block_content pos:start="159:13" pos:end="159:30">

            <expr_stmt pos:start="159:13" pos:end="159:30"><expr pos:start="159:13" pos:end="159:29"><call pos:start="159:13" pos:end="159:29"><name pos:start="159:13" pos:end="159:24">IPin_Release</name><argument_list pos:start="159:25" pos:end="159:29">(<argument pos:start="159:26" pos:end="159:28"><expr pos:start="159:26" pos:end="159:28"><name pos:start="159:26" pos:end="159:28">pin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="165:5" pos:end="165:28"><expr pos:start="165:5" pos:end="165:27"><call pos:start="165:5" pos:end="165:27"><name pos:start="165:5" pos:end="165:21">IEnumPins_Release</name><argument_list pos:start="165:22" pos:end="165:27">(<argument pos:start="165:23" pos:end="165:26"><expr pos:start="165:23" pos:end="165:26"><name pos:start="165:23" pos:end="165:26">pins</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="169:5" pos:end="191:5"><if pos:start="169:5" pos:end="191:5">if <condition pos:start="169:8" pos:end="169:13">(<expr pos:start="169:9" pos:end="169:12"><name pos:start="169:9" pos:end="169:12">ppin</name></expr>)</condition> <block pos:start="169:15" pos:end="191:5">{<block_content pos:start="171:9" pos:end="189:27">

        <if_stmt pos:start="171:9" pos:end="177:9"><if pos:start="171:9" pos:end="177:9">if <condition pos:start="171:12" pos:end="171:38">(<expr pos:start="171:13" pos:end="171:37"><name pos:start="171:13" pos:end="171:22">set_format</name> <operator pos:start="171:24" pos:end="171:25">&amp;&amp;</operator> <operator pos:start="171:27" pos:end="171:27">!</operator><name pos:start="171:28" pos:end="171:37">format_set</name></expr>)</condition> <block pos:start="171:40" pos:end="177:9">{<block_content pos:start="173:13" pos:end="175:32">

            <expr_stmt pos:start="173:13" pos:end="173:83"><expr pos:start="173:13" pos:end="173:82"><call pos:start="173:13" pos:end="173:82"><name pos:start="173:13" pos:end="173:18">av_log</name><argument_list pos:start="173:19" pos:end="173:82">(<argument pos:start="173:20" pos:end="173:24"><expr pos:start="173:20" pos:end="173:24"><name pos:start="173:20" pos:end="173:24">avctx</name></expr></argument>, <argument pos:start="173:27" pos:end="173:38"><expr pos:start="173:27" pos:end="173:38"><name pos:start="173:27" pos:end="173:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="173:41" pos:end="173:68"><expr pos:start="173:41" pos:end="173:68"><literal type="string" pos:start="173:41" pos:end="173:68">"Could not set %s options\n"</literal></expr></argument>, <argument pos:start="173:71" pos:end="173:81"><expr pos:start="173:71" pos:end="173:81"><name pos:start="173:71" pos:end="173:81">devtypename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="175:13" pos:end="175:32">return <expr pos:start="175:20" pos:end="175:31"><call pos:start="175:20" pos:end="175:31"><name pos:start="175:20" pos:end="175:26">AVERROR</name><argument_list pos:start="175:27" pos:end="175:31">(<argument pos:start="175:28" pos:end="175:30"><expr pos:start="175:28" pos:end="175:30"><name pos:start="175:28" pos:end="175:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="179:9" pos:end="187:9"><if pos:start="179:9" pos:end="187:9">if <condition pos:start="179:12" pos:end="179:24">(<expr pos:start="179:13" pos:end="179:23"><operator pos:start="179:13" pos:end="179:13">!</operator><name pos:start="179:14" pos:end="179:23">device_pin</name></expr>)</condition> <block pos:start="179:26" pos:end="187:9">{<block_content pos:start="181:13" pos:end="185:32">

            <expr_stmt pos:start="181:13" pos:end="183:84"><expr pos:start="181:13" pos:end="183:83"><call pos:start="181:13" pos:end="183:83"><name pos:start="181:13" pos:end="181:18">av_log</name><argument_list pos:start="181:19" pos:end="183:83">(<argument pos:start="181:20" pos:end="181:24"><expr pos:start="181:20" pos:end="181:24"><name pos:start="181:20" pos:end="181:24">avctx</name></expr></argument>, <argument pos:start="181:27" pos:end="181:38"><expr pos:start="181:27" pos:end="181:38"><name pos:start="181:27" pos:end="181:38">AV_LOG_ERROR</name></expr></argument>,

                <argument pos:start="183:17" pos:end="183:69"><expr pos:start="183:17" pos:end="183:69"><literal type="string" pos:start="183:17" pos:end="183:69">"Could not find output pin from %s capture device.\n"</literal></expr></argument>, <argument pos:start="183:72" pos:end="183:82"><expr pos:start="183:72" pos:end="183:82"><name pos:start="183:72" pos:end="183:82">devtypename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="185:13" pos:end="185:32">return <expr pos:start="185:20" pos:end="185:31"><call pos:start="185:20" pos:end="185:31"><name pos:start="185:20" pos:end="185:26">AVERROR</name><argument_list pos:start="185:27" pos:end="185:31">(<argument pos:start="185:28" pos:end="185:30"><expr pos:start="185:28" pos:end="185:30"><name pos:start="185:28" pos:end="185:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:27"><expr pos:start="189:9" pos:end="189:26"><operator pos:start="189:9" pos:end="189:9">*</operator><name pos:start="189:10" pos:end="189:13">ppin</name> <operator pos:start="189:15" pos:end="189:15">=</operator> <name pos:start="189:17" pos:end="189:26">device_pin</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="195:5" pos:end="195:13">return <expr pos:start="195:12" pos:end="195:12"><literal type="number" pos:start="195:12" pos:end="195:12">0</literal></expr>;</return>

</block_content>}</block>
</unit>
