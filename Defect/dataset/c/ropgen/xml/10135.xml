<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10135.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:16"><name pos:start="1:1" pos:end="1:10">DISAS_INSN</name><argument_list pos:start="1:11" pos:end="1:16">(<argument pos:start="1:12" pos:end="1:15">fbcc</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:36">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:13">flag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:11"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">l1</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:17"><expr pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:8">addr</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <name pos:start="15:12" pos:end="15:16"><name pos:start="15:12" pos:end="15:12">s</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:16">pc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:39"><expr pos:start="17:5" pos:end="17:38"><name pos:start="17:5" pos:end="17:10">offset</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:38"><name pos:start="17:14" pos:end="17:26">cpu_ldsw_code</name><argument_list pos:start="17:27" pos:end="17:38">(<argument pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><name pos:start="17:28" pos:end="17:30">env</name></expr></argument>, <argument pos:start="17:33" pos:end="17:37"><expr pos:start="17:33" pos:end="17:37"><name pos:start="17:33" pos:end="17:37"><name pos:start="17:33" pos:end="17:33">s</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:37">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:15"><expr pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:9">pc</name></name> <operator pos:start="19:11" pos:end="19:12">+=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">2</literal></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:24">(<expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:12">insn</name> <operator pos:start="21:14" pos:end="21:14">&amp;</operator> <operator pos:start="21:16" pos:end="21:16">(</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal> <operator pos:start="21:19" pos:end="21:20">&lt;&lt;</operator> <literal type="number" pos:start="21:22" pos:end="21:22">6</literal><operator pos:start="21:23" pos:end="21:23">)</operator></expr>)</condition> <block pos:start="21:26" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:19">

        <expr_stmt pos:start="23:9" pos:end="23:60"><expr pos:start="23:9" pos:end="23:59"><name pos:start="23:9" pos:end="23:14">offset</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <operator pos:start="23:18" pos:end="23:18">(</operator><name pos:start="23:19" pos:end="23:24">offset</name> <operator pos:start="23:26" pos:end="23:27">&lt;&lt;</operator> <literal type="number" pos:start="23:29" pos:end="23:30">16</literal><operator pos:start="23:31" pos:end="23:31">)</operator> <operator pos:start="23:33" pos:end="23:33">|</operator> <call pos:start="23:35" pos:end="23:59"><name pos:start="23:35" pos:end="23:47">cpu_lduw_code</name><argument_list pos:start="23:48" pos:end="23:59">(<argument pos:start="23:49" pos:end="23:51"><expr pos:start="23:49" pos:end="23:51"><name pos:start="23:49" pos:end="23:51">env</name></expr></argument>, <argument pos:start="23:54" pos:end="23:58"><expr pos:start="23:54" pos:end="23:58"><name pos:start="23:54" pos:end="23:58"><name pos:start="23:54" pos:end="23:54">s</name><operator pos:start="23:55" pos:end="23:56">-&gt;</operator><name pos:start="23:57" pos:end="23:58">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:13">pc</name></name> <operator pos:start="25:15" pos:end="25:16">+=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:25"><expr pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:6">l1</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:22">gen_new_label</name><argument_list pos:start="31:23" pos:end="31:24">()</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="33:5" pos:end="33:38">/* TODO: Raise BSUN exception.  */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:8">flag</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:25"><name pos:start="35:12" pos:end="35:23">tcg_temp_new</name><argument_list pos:start="35:24" pos:end="35:25">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:58"><expr pos:start="37:5" pos:end="37:57"><call pos:start="37:5" pos:end="37:57"><name pos:start="37:5" pos:end="37:26">gen_helper_compare_f64</name><argument_list pos:start="37:27" pos:end="37:57">(<argument pos:start="37:28" pos:end="37:31"><expr pos:start="37:28" pos:end="37:31"><name pos:start="37:28" pos:end="37:31">flag</name></expr></argument>, <argument pos:start="37:34" pos:end="37:40"><expr pos:start="37:34" pos:end="37:40"><name pos:start="37:34" pos:end="37:40">cpu_env</name></expr></argument>, <argument pos:start="37:43" pos:end="37:56"><expr pos:start="37:43" pos:end="37:56"><name pos:start="37:43" pos:end="37:56">QREG_FP_RESULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="39:5" pos:end="39:43">/* Jump to l1 if condition is true.  */</comment>

    <switch pos:start="41:5" pos:end="141:5">switch <condition pos:start="41:12" pos:end="41:23">(<expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:16">insn</name> <operator pos:start="41:18" pos:end="41:18">&amp;</operator> <literal type="number" pos:start="41:20" pos:end="41:22">0xf</literal></expr>)</condition> <block pos:start="41:25" pos:end="141:5">{<block_content pos:start="43:5" pos:end="139:14">

    <case pos:start="43:5" pos:end="43:11">case <expr pos:start="43:10" pos:end="43:10"><literal type="number" pos:start="43:10" pos:end="43:10">0</literal></expr>:</case> <comment type="block" pos:start="43:13" pos:end="43:19">/* f */</comment>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">1</literal></expr>:</case> <comment type="block" pos:start="47:13" pos:end="47:25">/* eq (=0) */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:68"><expr pos:start="49:9" pos:end="49:67"><call pos:start="49:9" pos:end="49:67"><name pos:start="49:9" pos:end="49:26">tcg_gen_brcond_i32</name><argument_list pos:start="49:27" pos:end="49:67">(<argument pos:start="49:28" pos:end="49:38"><expr pos:start="49:28" pos:end="49:38"><name pos:start="49:28" pos:end="49:38">TCG_COND_EQ</name></expr></argument>, <argument pos:start="49:41" pos:end="49:44"><expr pos:start="49:41" pos:end="49:44"><name pos:start="49:41" pos:end="49:44">flag</name></expr></argument>, <argument pos:start="49:47" pos:end="49:62"><expr pos:start="49:47" pos:end="49:62"><call pos:start="49:47" pos:end="49:62"><name pos:start="49:47" pos:end="49:59">tcg_const_i32</name><argument_list pos:start="49:60" pos:end="49:62">(<argument pos:start="49:61" pos:end="49:61"><expr pos:start="49:61" pos:end="49:61"><literal type="number" pos:start="49:61" pos:end="49:61">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:65" pos:end="49:66"><expr pos:start="49:65" pos:end="49:66"><name pos:start="49:65" pos:end="49:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">2</literal></expr>:</case> <comment type="block" pos:start="53:13" pos:end="53:26">/* ogt (=1) */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:68"><expr pos:start="55:9" pos:end="55:67"><call pos:start="55:9" pos:end="55:67"><name pos:start="55:9" pos:end="55:26">tcg_gen_brcond_i32</name><argument_list pos:start="55:27" pos:end="55:67">(<argument pos:start="55:28" pos:end="55:38"><expr pos:start="55:28" pos:end="55:38"><name pos:start="55:28" pos:end="55:38">TCG_COND_EQ</name></expr></argument>, <argument pos:start="55:41" pos:end="55:44"><expr pos:start="55:41" pos:end="55:44"><name pos:start="55:41" pos:end="55:44">flag</name></expr></argument>, <argument pos:start="55:47" pos:end="55:62"><expr pos:start="55:47" pos:end="55:62"><call pos:start="55:47" pos:end="55:62"><name pos:start="55:47" pos:end="55:59">tcg_const_i32</name><argument_list pos:start="55:60" pos:end="55:62">(<argument pos:start="55:61" pos:end="55:61"><expr pos:start="55:61" pos:end="55:61"><literal type="number" pos:start="55:61" pos:end="55:61">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:65" pos:end="55:66"><expr pos:start="55:65" pos:end="55:66"><name pos:start="55:65" pos:end="55:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:11">case <expr pos:start="59:10" pos:end="59:10"><literal type="number" pos:start="59:10" pos:end="59:10">3</literal></expr>:</case> <comment type="block" pos:start="59:13" pos:end="59:32">/* oge (=0 or =1) */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:69"><expr pos:start="61:9" pos:end="61:68"><call pos:start="61:9" pos:end="61:68"><name pos:start="61:9" pos:end="61:26">tcg_gen_brcond_i32</name><argument_list pos:start="61:27" pos:end="61:68">(<argument pos:start="61:28" pos:end="61:39"><expr pos:start="61:28" pos:end="61:39"><name pos:start="61:28" pos:end="61:39">TCG_COND_LEU</name></expr></argument>, <argument pos:start="61:42" pos:end="61:45"><expr pos:start="61:42" pos:end="61:45"><name pos:start="61:42" pos:end="61:45">flag</name></expr></argument>, <argument pos:start="61:48" pos:end="61:63"><expr pos:start="61:48" pos:end="61:63"><call pos:start="61:48" pos:end="61:63"><name pos:start="61:48" pos:end="61:60">tcg_const_i32</name><argument_list pos:start="61:61" pos:end="61:63">(<argument pos:start="61:62" pos:end="61:62"><expr pos:start="61:62" pos:end="61:62"><literal type="number" pos:start="61:62" pos:end="61:62">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:66" pos:end="61:67"><expr pos:start="61:66" pos:end="61:67"><name pos:start="61:66" pos:end="61:67">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:11">case <expr pos:start="65:10" pos:end="65:10"><literal type="number" pos:start="65:10" pos:end="65:10">4</literal></expr>:</case> <comment type="block" pos:start="65:13" pos:end="65:27">/* olt (=-1) */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:68"><expr pos:start="67:9" pos:end="67:67"><call pos:start="67:9" pos:end="67:67"><name pos:start="67:9" pos:end="67:26">tcg_gen_brcond_i32</name><argument_list pos:start="67:27" pos:end="67:67">(<argument pos:start="67:28" pos:end="67:38"><expr pos:start="67:28" pos:end="67:38"><name pos:start="67:28" pos:end="67:38">TCG_COND_LT</name></expr></argument>, <argument pos:start="67:41" pos:end="67:44"><expr pos:start="67:41" pos:end="67:44"><name pos:start="67:41" pos:end="67:44">flag</name></expr></argument>, <argument pos:start="67:47" pos:end="67:62"><expr pos:start="67:47" pos:end="67:62"><call pos:start="67:47" pos:end="67:62"><name pos:start="67:47" pos:end="67:59">tcg_const_i32</name><argument_list pos:start="67:60" pos:end="67:62">(<argument pos:start="67:61" pos:end="67:61"><expr pos:start="67:61" pos:end="67:61"><literal type="number" pos:start="67:61" pos:end="67:61">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="67:65" pos:end="67:66"><expr pos:start="67:65" pos:end="67:66"><name pos:start="67:65" pos:end="67:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:11">case <expr pos:start="71:10" pos:end="71:10"><literal type="number" pos:start="71:10" pos:end="71:10">5</literal></expr>:</case> <comment type="block" pos:start="71:13" pos:end="71:33">/* ole (=-1 or =0) */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:68"><expr pos:start="73:9" pos:end="73:67"><call pos:start="73:9" pos:end="73:67"><name pos:start="73:9" pos:end="73:26">tcg_gen_brcond_i32</name><argument_list pos:start="73:27" pos:end="73:67">(<argument pos:start="73:28" pos:end="73:38"><expr pos:start="73:28" pos:end="73:38"><name pos:start="73:28" pos:end="73:38">TCG_COND_LE</name></expr></argument>, <argument pos:start="73:41" pos:end="73:44"><expr pos:start="73:41" pos:end="73:44"><name pos:start="73:41" pos:end="73:44">flag</name></expr></argument>, <argument pos:start="73:47" pos:end="73:62"><expr pos:start="73:47" pos:end="73:62"><call pos:start="73:47" pos:end="73:62"><name pos:start="73:47" pos:end="73:59">tcg_const_i32</name><argument_list pos:start="73:60" pos:end="73:62">(<argument pos:start="73:61" pos:end="73:61"><expr pos:start="73:61" pos:end="73:61"><literal type="number" pos:start="73:61" pos:end="73:61">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="73:65" pos:end="73:66"><expr pos:start="73:65" pos:end="73:66"><name pos:start="73:65" pos:end="73:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:11">case <expr pos:start="77:10" pos:end="77:10"><literal type="number" pos:start="77:10" pos:end="77:10">6</literal></expr>:</case> <comment type="block" pos:start="77:13" pos:end="77:33">/* ogl (=-1 or =1) */</comment>

        <expr_stmt pos:start="79:9" pos:end="79:40"><expr pos:start="79:9" pos:end="79:39"><call pos:start="79:9" pos:end="79:39"><name pos:start="79:9" pos:end="79:24">tcg_gen_andi_i32</name><argument_list pos:start="79:25" pos:end="79:39">(<argument pos:start="79:26" pos:end="79:29"><expr pos:start="79:26" pos:end="79:29"><name pos:start="79:26" pos:end="79:29">flag</name></expr></argument>, <argument pos:start="79:32" pos:end="79:35"><expr pos:start="79:32" pos:end="79:35"><name pos:start="79:32" pos:end="79:35">flag</name></expr></argument>, <argument pos:start="79:38" pos:end="79:38"><expr pos:start="79:38" pos:end="79:38"><literal type="number" pos:start="79:38" pos:end="79:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:68"><expr pos:start="81:9" pos:end="81:67"><call pos:start="81:9" pos:end="81:67"><name pos:start="81:9" pos:end="81:26">tcg_gen_brcond_i32</name><argument_list pos:start="81:27" pos:end="81:67">(<argument pos:start="81:28" pos:end="81:38"><expr pos:start="81:28" pos:end="81:38"><name pos:start="81:28" pos:end="81:38">TCG_COND_NE</name></expr></argument>, <argument pos:start="81:41" pos:end="81:44"><expr pos:start="81:41" pos:end="81:44"><name pos:start="81:41" pos:end="81:44">flag</name></expr></argument>, <argument pos:start="81:47" pos:end="81:62"><expr pos:start="81:47" pos:end="81:62"><call pos:start="81:47" pos:end="81:62"><name pos:start="81:47" pos:end="81:59">tcg_const_i32</name><argument_list pos:start="81:60" pos:end="81:62">(<argument pos:start="81:61" pos:end="81:61"><expr pos:start="81:61" pos:end="81:61"><literal type="number" pos:start="81:61" pos:end="81:61">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:65" pos:end="81:66"><expr pos:start="81:65" pos:end="81:66"><name pos:start="81:65" pos:end="81:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:11">case <expr pos:start="85:10" pos:end="85:10"><literal type="number" pos:start="85:10" pos:end="85:10">7</literal></expr>:</case> <comment type="block" pos:start="85:13" pos:end="85:25">/* or (=2) */</comment>

        <expr_stmt pos:start="87:9" pos:end="87:68"><expr pos:start="87:9" pos:end="87:67"><call pos:start="87:9" pos:end="87:67"><name pos:start="87:9" pos:end="87:26">tcg_gen_brcond_i32</name><argument_list pos:start="87:27" pos:end="87:67">(<argument pos:start="87:28" pos:end="87:38"><expr pos:start="87:28" pos:end="87:38"><name pos:start="87:28" pos:end="87:38">TCG_COND_EQ</name></expr></argument>, <argument pos:start="87:41" pos:end="87:44"><expr pos:start="87:41" pos:end="87:44"><name pos:start="87:41" pos:end="87:44">flag</name></expr></argument>, <argument pos:start="87:47" pos:end="87:62"><expr pos:start="87:47" pos:end="87:62"><call pos:start="87:47" pos:end="87:62"><name pos:start="87:47" pos:end="87:59">tcg_const_i32</name><argument_list pos:start="87:60" pos:end="87:62">(<argument pos:start="87:61" pos:end="87:61"><expr pos:start="87:61" pos:end="87:61"><literal type="number" pos:start="87:61" pos:end="87:61">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="87:65" pos:end="87:66"><expr pos:start="87:65" pos:end="87:66"><name pos:start="87:65" pos:end="87:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:11">case <expr pos:start="91:10" pos:end="91:10"><literal type="number" pos:start="91:10" pos:end="91:10">8</literal></expr>:</case> <comment type="block" pos:start="91:13" pos:end="91:25">/* un (&lt;2) */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:68"><expr pos:start="93:9" pos:end="93:67"><call pos:start="93:9" pos:end="93:67"><name pos:start="93:9" pos:end="93:26">tcg_gen_brcond_i32</name><argument_list pos:start="93:27" pos:end="93:67">(<argument pos:start="93:28" pos:end="93:38"><expr pos:start="93:28" pos:end="93:38"><name pos:start="93:28" pos:end="93:38">TCG_COND_LT</name></expr></argument>, <argument pos:start="93:41" pos:end="93:44"><expr pos:start="93:41" pos:end="93:44"><name pos:start="93:41" pos:end="93:44">flag</name></expr></argument>, <argument pos:start="93:47" pos:end="93:62"><expr pos:start="93:47" pos:end="93:62"><call pos:start="93:47" pos:end="93:62"><name pos:start="93:47" pos:end="93:59">tcg_const_i32</name><argument_list pos:start="93:60" pos:end="93:62">(<argument pos:start="93:61" pos:end="93:61"><expr pos:start="93:61" pos:end="93:61"><literal type="number" pos:start="93:61" pos:end="93:61">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="93:65" pos:end="93:66"><expr pos:start="93:65" pos:end="93:66"><name pos:start="93:65" pos:end="93:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:11">case <expr pos:start="97:10" pos:end="97:10"><literal type="number" pos:start="97:10" pos:end="97:10">9</literal></expr>:</case> <comment type="block" pos:start="97:13" pos:end="97:32">/* ueq (=0 or =2) */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:40"><expr pos:start="99:9" pos:end="99:39"><call pos:start="99:9" pos:end="99:39"><name pos:start="99:9" pos:end="99:24">tcg_gen_andi_i32</name><argument_list pos:start="99:25" pos:end="99:39">(<argument pos:start="99:26" pos:end="99:29"><expr pos:start="99:26" pos:end="99:29"><name pos:start="99:26" pos:end="99:29">flag</name></expr></argument>, <argument pos:start="99:32" pos:end="99:35"><expr pos:start="99:32" pos:end="99:35"><name pos:start="99:32" pos:end="99:35">flag</name></expr></argument>, <argument pos:start="99:38" pos:end="99:38"><expr pos:start="99:38" pos:end="99:38"><literal type="number" pos:start="99:38" pos:end="99:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:68"><expr pos:start="101:9" pos:end="101:67"><call pos:start="101:9" pos:end="101:67"><name pos:start="101:9" pos:end="101:26">tcg_gen_brcond_i32</name><argument_list pos:start="101:27" pos:end="101:67">(<argument pos:start="101:28" pos:end="101:38"><expr pos:start="101:28" pos:end="101:38"><name pos:start="101:28" pos:end="101:38">TCG_COND_EQ</name></expr></argument>, <argument pos:start="101:41" pos:end="101:44"><expr pos:start="101:41" pos:end="101:44"><name pos:start="101:41" pos:end="101:44">flag</name></expr></argument>, <argument pos:start="101:47" pos:end="101:62"><expr pos:start="101:47" pos:end="101:62"><call pos:start="101:47" pos:end="101:62"><name pos:start="101:47" pos:end="101:59">tcg_const_i32</name><argument_list pos:start="101:60" pos:end="101:62">(<argument pos:start="101:61" pos:end="101:61"><expr pos:start="101:61" pos:end="101:61"><literal type="number" pos:start="101:61" pos:end="101:61">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="101:65" pos:end="101:66"><expr pos:start="101:65" pos:end="101:66"><name pos:start="101:65" pos:end="101:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:12">case <expr pos:start="105:10" pos:end="105:11"><literal type="number" pos:start="105:10" pos:end="105:11">10</literal></expr>:</case> <comment type="block" pos:start="105:14" pos:end="105:27">/* ugt (&gt;0) */</comment>

        <expr_stmt pos:start="107:9" pos:end="107:68"><expr pos:start="107:9" pos:end="107:67"><call pos:start="107:9" pos:end="107:67"><name pos:start="107:9" pos:end="107:26">tcg_gen_brcond_i32</name><argument_list pos:start="107:27" pos:end="107:67">(<argument pos:start="107:28" pos:end="107:38"><expr pos:start="107:28" pos:end="107:38"><name pos:start="107:28" pos:end="107:38">TCG_COND_GT</name></expr></argument>, <argument pos:start="107:41" pos:end="107:44"><expr pos:start="107:41" pos:end="107:44"><name pos:start="107:41" pos:end="107:44">flag</name></expr></argument>, <argument pos:start="107:47" pos:end="107:62"><expr pos:start="107:47" pos:end="107:62"><call pos:start="107:47" pos:end="107:62"><name pos:start="107:47" pos:end="107:59">tcg_const_i32</name><argument_list pos:start="107:60" pos:end="107:62">(<argument pos:start="107:61" pos:end="107:61"><expr pos:start="107:61" pos:end="107:61"><literal type="number" pos:start="107:61" pos:end="107:61">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="107:65" pos:end="107:66"><expr pos:start="107:65" pos:end="107:66"><name pos:start="107:65" pos:end="107:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <case pos:start="111:5" pos:end="111:12">case <expr pos:start="111:10" pos:end="111:11"><literal type="number" pos:start="111:10" pos:end="111:11">11</literal></expr>:</case> <comment type="block" pos:start="111:14" pos:end="111:28">/* uge (&gt;=0) */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:68"><expr pos:start="113:9" pos:end="113:67"><call pos:start="113:9" pos:end="113:67"><name pos:start="113:9" pos:end="113:26">tcg_gen_brcond_i32</name><argument_list pos:start="113:27" pos:end="113:67">(<argument pos:start="113:28" pos:end="113:38"><expr pos:start="113:28" pos:end="113:38"><name pos:start="113:28" pos:end="113:38">TCG_COND_GE</name></expr></argument>, <argument pos:start="113:41" pos:end="113:44"><expr pos:start="113:41" pos:end="113:44"><name pos:start="113:41" pos:end="113:44">flag</name></expr></argument>, <argument pos:start="113:47" pos:end="113:62"><expr pos:start="113:47" pos:end="113:62"><call pos:start="113:47" pos:end="113:62"><name pos:start="113:47" pos:end="113:59">tcg_const_i32</name><argument_list pos:start="113:60" pos:end="113:62">(<argument pos:start="113:61" pos:end="113:61"><expr pos:start="113:61" pos:end="113:61"><literal type="number" pos:start="113:61" pos:end="113:61">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="113:65" pos:end="113:66"><expr pos:start="113:65" pos:end="113:66"><name pos:start="113:65" pos:end="113:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:12">case <expr pos:start="117:10" pos:end="117:11"><literal type="number" pos:start="117:10" pos:end="117:11">12</literal></expr>:</case> <comment type="block" pos:start="117:14" pos:end="117:34">/* ult (=-1 or =2) */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:69"><expr pos:start="119:9" pos:end="119:68"><call pos:start="119:9" pos:end="119:68"><name pos:start="119:9" pos:end="119:26">tcg_gen_brcond_i32</name><argument_list pos:start="119:27" pos:end="119:68">(<argument pos:start="119:28" pos:end="119:39"><expr pos:start="119:28" pos:end="119:39"><name pos:start="119:28" pos:end="119:39">TCG_COND_GEU</name></expr></argument>, <argument pos:start="119:42" pos:end="119:45"><expr pos:start="119:42" pos:end="119:45"><name pos:start="119:42" pos:end="119:45">flag</name></expr></argument>, <argument pos:start="119:48" pos:end="119:63"><expr pos:start="119:48" pos:end="119:63"><call pos:start="119:48" pos:end="119:63"><name pos:start="119:48" pos:end="119:60">tcg_const_i32</name><argument_list pos:start="119:61" pos:end="119:63">(<argument pos:start="119:62" pos:end="119:62"><expr pos:start="119:62" pos:end="119:62"><literal type="number" pos:start="119:62" pos:end="119:62">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:66" pos:end="119:67"><expr pos:start="119:66" pos:end="119:67"><name pos:start="119:66" pos:end="119:67">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:12">case <expr pos:start="123:10" pos:end="123:11"><literal type="number" pos:start="123:10" pos:end="123:11">13</literal></expr>:</case> <comment type="block" pos:start="123:14" pos:end="123:28">/* ule (!=1) */</comment>

        <expr_stmt pos:start="125:9" pos:end="125:68"><expr pos:start="125:9" pos:end="125:67"><call pos:start="125:9" pos:end="125:67"><name pos:start="125:9" pos:end="125:26">tcg_gen_brcond_i32</name><argument_list pos:start="125:27" pos:end="125:67">(<argument pos:start="125:28" pos:end="125:38"><expr pos:start="125:28" pos:end="125:38"><name pos:start="125:28" pos:end="125:38">TCG_COND_NE</name></expr></argument>, <argument pos:start="125:41" pos:end="125:44"><expr pos:start="125:41" pos:end="125:44"><name pos:start="125:41" pos:end="125:44">flag</name></expr></argument>, <argument pos:start="125:47" pos:end="125:62"><expr pos:start="125:47" pos:end="125:62"><call pos:start="125:47" pos:end="125:62"><name pos:start="125:47" pos:end="125:59">tcg_const_i32</name><argument_list pos:start="125:60" pos:end="125:62">(<argument pos:start="125:61" pos:end="125:61"><expr pos:start="125:61" pos:end="125:61"><literal type="number" pos:start="125:61" pos:end="125:61">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="125:65" pos:end="125:66"><expr pos:start="125:65" pos:end="125:66"><name pos:start="125:65" pos:end="125:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    <case pos:start="129:5" pos:end="129:12">case <expr pos:start="129:10" pos:end="129:11"><literal type="number" pos:start="129:10" pos:end="129:11">14</literal></expr>:</case> <comment type="block" pos:start="129:14" pos:end="129:27">/* ne (!=0) */</comment>

        <expr_stmt pos:start="131:9" pos:end="131:68"><expr pos:start="131:9" pos:end="131:67"><call pos:start="131:9" pos:end="131:67"><name pos:start="131:9" pos:end="131:26">tcg_gen_brcond_i32</name><argument_list pos:start="131:27" pos:end="131:67">(<argument pos:start="131:28" pos:end="131:38"><expr pos:start="131:28" pos:end="131:38"><name pos:start="131:28" pos:end="131:38">TCG_COND_NE</name></expr></argument>, <argument pos:start="131:41" pos:end="131:44"><expr pos:start="131:41" pos:end="131:44"><name pos:start="131:41" pos:end="131:44">flag</name></expr></argument>, <argument pos:start="131:47" pos:end="131:62"><expr pos:start="131:47" pos:end="131:62"><call pos:start="131:47" pos:end="131:62"><name pos:start="131:47" pos:end="131:59">tcg_const_i32</name><argument_list pos:start="131:60" pos:end="131:62">(<argument pos:start="131:61" pos:end="131:61"><expr pos:start="131:61" pos:end="131:61"><literal type="number" pos:start="131:61" pos:end="131:61">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="131:65" pos:end="131:66"><expr pos:start="131:65" pos:end="131:66"><name pos:start="131:65" pos:end="131:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="133:9" pos:end="133:14">break;</break>

    <case pos:start="135:5" pos:end="135:12">case <expr pos:start="135:10" pos:end="135:11"><literal type="number" pos:start="135:10" pos:end="135:11">15</literal></expr>:</case> <comment type="block" pos:start="135:14" pos:end="135:20">/* t */</comment>

        <expr_stmt pos:start="137:9" pos:end="137:23"><expr pos:start="137:9" pos:end="137:22"><call pos:start="137:9" pos:end="137:22"><name pos:start="137:9" pos:end="137:18">tcg_gen_br</name><argument_list pos:start="137:19" pos:end="137:22">(<argument pos:start="137:20" pos:end="137:21"><expr pos:start="137:20" pos:end="137:21"><name pos:start="137:20" pos:end="137:21">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="143:5" pos:end="143:28"><expr pos:start="143:5" pos:end="143:27"><call pos:start="143:5" pos:end="143:27"><name pos:start="143:5" pos:end="143:14">gen_jmp_tb</name><argument_list pos:start="143:15" pos:end="143:27">(<argument pos:start="143:16" pos:end="143:16"><expr pos:start="143:16" pos:end="143:16"><name pos:start="143:16" pos:end="143:16">s</name></expr></argument>, <argument pos:start="143:19" pos:end="143:19"><expr pos:start="143:19" pos:end="143:19"><literal type="number" pos:start="143:19" pos:end="143:19">0</literal></expr></argument>, <argument pos:start="143:22" pos:end="143:26"><expr pos:start="143:22" pos:end="143:26"><name pos:start="143:22" pos:end="143:26"><name pos:start="143:22" pos:end="143:22">s</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:26">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:22"><expr pos:start="145:5" pos:end="145:21"><call pos:start="145:5" pos:end="145:21"><name pos:start="145:5" pos:end="145:17">gen_set_label</name><argument_list pos:start="145:18" pos:end="145:21">(<argument pos:start="145:19" pos:end="145:20"><expr pos:start="145:19" pos:end="145:20"><name pos:start="145:19" pos:end="145:20">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:36"><expr pos:start="147:5" pos:end="147:35"><call pos:start="147:5" pos:end="147:35"><name pos:start="147:5" pos:end="147:14">gen_jmp_tb</name><argument_list pos:start="147:15" pos:end="147:35">(<argument pos:start="147:16" pos:end="147:16"><expr pos:start="147:16" pos:end="147:16"><name pos:start="147:16" pos:end="147:16">s</name></expr></argument>, <argument pos:start="147:19" pos:end="147:19"><expr pos:start="147:19" pos:end="147:19"><literal type="number" pos:start="147:19" pos:end="147:19">1</literal></expr></argument>, <argument pos:start="147:22" pos:end="147:34"><expr pos:start="147:22" pos:end="147:34"><name pos:start="147:22" pos:end="147:25">addr</name> <operator pos:start="147:27" pos:end="147:27">+</operator> <name pos:start="147:29" pos:end="147:34">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
