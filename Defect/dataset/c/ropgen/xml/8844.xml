<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8844.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">poll_set_started</name><parameter_list pos:start="1:29" pos:end="1:59">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:44"><name pos:start="1:30" pos:end="1:39">AioContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">ctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:50">bool</name></type> <name pos:start="1:52" pos:end="1:58">started</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:38">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AioHandler</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">node</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:37">(<expr pos:start="9:9" pos:end="9:36"><name pos:start="9:9" pos:end="9:15">started</name> <operator pos:start="9:17" pos:end="9:18">==</operator> <name pos:start="9:20" pos:end="9:36"><name pos:start="9:20" pos:end="9:22">ctx</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:36">poll_started</name></name></expr>)</condition> <block pos:start="9:39" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:7">ctx</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:21">poll_started</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <name pos:start="17:25" pos:end="17:31">started</name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><call pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:20">qemu_lockcnt_inc</name><argument_list pos:start="21:21" pos:end="21:37">(<argument pos:start="21:22" pos:end="21:36"><expr pos:start="21:22" pos:end="21:36"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:36"><name pos:start="21:23" pos:end="21:25">ctx</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:36">list_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:21">QLIST_FOREACH_RCU</name><argument_list pos:start="23:22" pos:end="23:53">(<argument pos:start="23:23" pos:end="23:26">node</argument>, <argument pos:start="23:29" pos:end="23:46">&amp;ctx-&gt;aio_handlers</argument>, <argument pos:start="23:49" pos:end="23:52">node</argument>)</argument_list></macro> <block pos:start="23:55" pos:end="55:5">{<block_content pos:start="25:9" pos:end="53:9">

        <decl_stmt pos:start="25:9" pos:end="25:22"><decl pos:start="25:9" pos:end="25:21"><type pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:17">IOHandler</name> <modifier pos:start="25:19" pos:end="25:19">*</modifier></type><name pos:start="25:20" pos:end="25:21">fn</name></decl>;</decl_stmt>



        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:26">(<expr pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:16">node</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:25">deleted</name></name></expr>)</condition> <block pos:start="29:28" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:21">

            <continue pos:start="31:13" pos:end="31:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:19">started</name></expr>)</condition> <block pos:start="37:22" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:37">

            <expr_stmt pos:start="39:13" pos:end="39:37"><expr pos:start="39:13" pos:end="39:36"><name pos:start="39:13" pos:end="39:14">fn</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:36"><name pos:start="39:18" pos:end="39:21">node</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:36">io_poll_begin</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="45:9">else <block pos:start="41:16" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:35">

            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:14">fn</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:34"><name pos:start="43:18" pos:end="43:21">node</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:34">io_poll_end</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:15">(<expr pos:start="49:13" pos:end="49:14"><name pos:start="49:13" pos:end="49:14">fn</name></expr>)</condition> <block pos:start="49:17" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:29">

            <expr_stmt pos:start="51:13" pos:end="51:29"><expr pos:start="51:13" pos:end="51:28"><call pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:14">fn</name><argument_list pos:start="51:15" pos:end="51:28">(<argument pos:start="51:16" pos:end="51:27"><expr pos:start="51:16" pos:end="51:27"><name pos:start="51:16" pos:end="51:27"><name pos:start="51:16" pos:end="51:19">node</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:27">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="57:5" pos:end="57:38"><expr pos:start="57:5" pos:end="57:37"><call pos:start="57:5" pos:end="57:37"><name pos:start="57:5" pos:end="57:20">qemu_lockcnt_dec</name><argument_list pos:start="57:21" pos:end="57:37">(<argument pos:start="57:22" pos:end="57:36"><expr pos:start="57:22" pos:end="57:36"><operator pos:start="57:22" pos:end="57:22">&amp;</operator><name pos:start="57:23" pos:end="57:36"><name pos:start="57:23" pos:end="57:25">ctx</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:36">list_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
