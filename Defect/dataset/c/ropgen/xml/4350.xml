<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4350.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">gen_load_fp</name><parameter_list pos:start="1:24" pos:end="1:76">(<parameter pos:start="1:25" pos:end="1:39"><decl pos:start="1:25" pos:end="1:39"><type pos:start="1:25" pos:end="1:39"><name pos:start="1:25" pos:end="1:36">DisasContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:51"><decl pos:start="1:42" pos:end="1:51"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:51">opsize</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:62"><decl pos:start="1:54" pos:end="1:62"><type pos:start="1:54" pos:end="1:62"><name pos:start="1:54" pos:end="1:57">TCGv</name></type> <name pos:start="1:59" pos:end="1:62">addr</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:75"><decl pos:start="1:65" pos:end="1:75"><type pos:start="1:65" pos:end="1:75"><name pos:start="1:65" pos:end="1:72">TCGv_ptr</name></type> <name pos:start="1:74" pos:end="1:75">fp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:27">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:12">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">TCGv_i64</name></type> <name pos:start="7:14" pos:end="7:16">t64</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">index</name> <init pos:start="9:15" pos:end="9:26">= <expr pos:start="9:17" pos:end="9:26"><call pos:start="9:17" pos:end="9:26"><name pos:start="9:17" pos:end="9:23">IS_USER</name><argument_list pos:start="9:24" pos:end="9:26">(<argument pos:start="9:25" pos:end="9:25"><expr pos:start="9:25" pos:end="9:25"><name pos:start="9:25" pos:end="9:25">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:29"><expr pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:7">t64</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:28"><name pos:start="13:11" pos:end="13:26">tcg_temp_new_i64</name><argument_list pos:start="13:27" pos:end="13:28">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:7">tmp</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:24"><name pos:start="15:11" pos:end="15:22">tcg_temp_new</name><argument_list pos:start="15:23" pos:end="15:24">()</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="17:5" pos:end="101:5">switch <condition pos:start="17:12" pos:end="17:19">(<expr pos:start="17:13" pos:end="17:18"><name pos:start="17:13" pos:end="17:18">opsize</name></expr>)</condition> <block pos:start="17:21" pos:end="101:5">{<block_content pos:start="19:5" pos:end="99:31">

    <case pos:start="19:5" pos:end="19:17">case <expr pos:start="19:10" pos:end="19:16"><name pos:start="19:10" pos:end="19:16">OS_BYTE</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:44"><expr pos:start="21:9" pos:end="21:43"><call pos:start="21:9" pos:end="21:43"><name pos:start="21:9" pos:end="21:25">tcg_gen_qemu_ld8s</name><argument_list pos:start="21:26" pos:end="21:43">(<argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">tmp</name></expr></argument>, <argument pos:start="21:32" pos:end="21:35"><expr pos:start="21:32" pos:end="21:35"><name pos:start="21:32" pos:end="21:35">addr</name></expr></argument>, <argument pos:start="21:38" pos:end="21:42"><expr pos:start="21:38" pos:end="21:42"><name pos:start="21:38" pos:end="21:42">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:44"><expr pos:start="23:9" pos:end="23:43"><call pos:start="23:9" pos:end="23:43"><name pos:start="23:9" pos:end="23:25">gen_helper_exts32</name><argument_list pos:start="23:26" pos:end="23:43">(<argument pos:start="23:27" pos:end="23:33"><expr pos:start="23:27" pos:end="23:33"><name pos:start="23:27" pos:end="23:33">cpu_env</name></expr></argument>, <argument pos:start="23:36" pos:end="23:37"><expr pos:start="23:36" pos:end="23:37"><name pos:start="23:36" pos:end="23:37">fp</name></expr></argument>, <argument pos:start="23:40" pos:end="23:42"><expr pos:start="23:40" pos:end="23:42"><name pos:start="23:40" pos:end="23:42">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:17">case <expr pos:start="27:10" pos:end="27:16"><name pos:start="27:10" pos:end="27:16">OS_WORD</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:45"><expr pos:start="29:9" pos:end="29:44"><call pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:26">tcg_gen_qemu_ld16s</name><argument_list pos:start="29:27" pos:end="29:44">(<argument pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:30">tmp</name></expr></argument>, <argument pos:start="29:33" pos:end="29:36"><expr pos:start="29:33" pos:end="29:36"><name pos:start="29:33" pos:end="29:36">addr</name></expr></argument>, <argument pos:start="29:39" pos:end="29:43"><expr pos:start="29:39" pos:end="29:43"><name pos:start="29:39" pos:end="29:43">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:44"><expr pos:start="31:9" pos:end="31:43"><call pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:25">gen_helper_exts32</name><argument_list pos:start="31:26" pos:end="31:43">(<argument pos:start="31:27" pos:end="31:33"><expr pos:start="31:27" pos:end="31:33"><name pos:start="31:27" pos:end="31:33">cpu_env</name></expr></argument>, <argument pos:start="31:36" pos:end="31:37"><expr pos:start="31:36" pos:end="31:37"><name pos:start="31:36" pos:end="31:37">fp</name></expr></argument>, <argument pos:start="31:40" pos:end="31:42"><expr pos:start="31:40" pos:end="31:42"><name pos:start="31:40" pos:end="31:42">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:17">case <expr pos:start="35:10" pos:end="35:16"><name pos:start="35:10" pos:end="35:16">OS_LONG</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:45"><expr pos:start="37:9" pos:end="37:44"><call pos:start="37:9" pos:end="37:44"><name pos:start="37:9" pos:end="37:26">tcg_gen_qemu_ld32u</name><argument_list pos:start="37:27" pos:end="37:44">(<argument pos:start="37:28" pos:end="37:30"><expr pos:start="37:28" pos:end="37:30"><name pos:start="37:28" pos:end="37:30">tmp</name></expr></argument>, <argument pos:start="37:33" pos:end="37:36"><expr pos:start="37:33" pos:end="37:36"><name pos:start="37:33" pos:end="37:36">addr</name></expr></argument>, <argument pos:start="37:39" pos:end="37:43"><expr pos:start="37:39" pos:end="37:43"><name pos:start="37:39" pos:end="37:43">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><call pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:25">gen_helper_exts32</name><argument_list pos:start="39:26" pos:end="39:43">(<argument pos:start="39:27" pos:end="39:33"><expr pos:start="39:27" pos:end="39:33"><name pos:start="39:27" pos:end="39:33">cpu_env</name></expr></argument>, <argument pos:start="39:36" pos:end="39:37"><expr pos:start="39:36" pos:end="39:37"><name pos:start="39:36" pos:end="39:37">fp</name></expr></argument>, <argument pos:start="39:40" pos:end="39:42"><expr pos:start="39:40" pos:end="39:42"><name pos:start="39:40" pos:end="39:42">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:19">case <expr pos:start="43:10" pos:end="43:18"><name pos:start="43:10" pos:end="43:18">OS_SINGLE</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:45"><expr pos:start="45:9" pos:end="45:44"><call pos:start="45:9" pos:end="45:44"><name pos:start="45:9" pos:end="45:26">tcg_gen_qemu_ld32u</name><argument_list pos:start="45:27" pos:end="45:44">(<argument pos:start="45:28" pos:end="45:30"><expr pos:start="45:28" pos:end="45:30"><name pos:start="45:28" pos:end="45:30">tmp</name></expr></argument>, <argument pos:start="45:33" pos:end="45:36"><expr pos:start="45:33" pos:end="45:36"><name pos:start="45:33" pos:end="45:36">addr</name></expr></argument>, <argument pos:start="45:39" pos:end="45:43"><expr pos:start="45:39" pos:end="45:43"><name pos:start="45:39" pos:end="45:43">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:44"><expr pos:start="47:9" pos:end="47:43"><call pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:25">gen_helper_extf32</name><argument_list pos:start="47:26" pos:end="47:43">(<argument pos:start="47:27" pos:end="47:33"><expr pos:start="47:27" pos:end="47:33"><name pos:start="47:27" pos:end="47:33">cpu_env</name></expr></argument>, <argument pos:start="47:36" pos:end="47:37"><expr pos:start="47:36" pos:end="47:37"><name pos:start="47:36" pos:end="47:37">fp</name></expr></argument>, <argument pos:start="47:40" pos:end="47:42"><expr pos:start="47:40" pos:end="47:42"><name pos:start="47:40" pos:end="47:42">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:19">case <expr pos:start="51:10" pos:end="51:18"><name pos:start="51:10" pos:end="51:18">OS_DOUBLE</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:44"><expr pos:start="53:9" pos:end="53:43"><call pos:start="53:9" pos:end="53:43"><name pos:start="53:9" pos:end="53:25">tcg_gen_qemu_ld64</name><argument_list pos:start="53:26" pos:end="53:43">(<argument pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:29">t64</name></expr></argument>, <argument pos:start="53:32" pos:end="53:35"><expr pos:start="53:32" pos:end="53:35"><name pos:start="53:32" pos:end="53:35">addr</name></expr></argument>, <argument pos:start="53:38" pos:end="53:42"><expr pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:42">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:44"><expr pos:start="55:9" pos:end="55:43"><call pos:start="55:9" pos:end="55:43"><name pos:start="55:9" pos:end="55:25">gen_helper_extf64</name><argument_list pos:start="55:26" pos:end="55:43">(<argument pos:start="55:27" pos:end="55:33"><expr pos:start="55:27" pos:end="55:33"><name pos:start="55:27" pos:end="55:33">cpu_env</name></expr></argument>, <argument pos:start="55:36" pos:end="55:37"><expr pos:start="55:36" pos:end="55:37"><name pos:start="55:36" pos:end="55:37">fp</name></expr></argument>, <argument pos:start="55:40" pos:end="55:42"><expr pos:start="55:40" pos:end="55:42"><name pos:start="55:40" pos:end="55:42">t64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><call pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:25">tcg_temp_free_i64</name><argument_list pos:start="57:26" pos:end="57:30">(<argument pos:start="57:27" pos:end="57:29"><expr pos:start="57:27" pos:end="57:29"><name pos:start="57:27" pos:end="57:29">t64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:21">case <expr pos:start="61:10" pos:end="61:20"><name pos:start="61:10" pos:end="61:20">OS_EXTENDED</name></expr>:</case>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:54">(<expr pos:start="63:13" pos:end="63:53"><call pos:start="63:13" pos:end="63:53"><name pos:start="63:13" pos:end="63:24">m68k_feature</name><argument_list pos:start="63:25" pos:end="63:53">(<argument pos:start="63:26" pos:end="63:31"><expr pos:start="63:26" pos:end="63:31"><name pos:start="63:26" pos:end="63:31"><name pos:start="63:26" pos:end="63:26">s</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:31">env</name></name></expr></argument>, <argument pos:start="63:34" pos:end="63:52"><expr pos:start="63:34" pos:end="63:52"><name pos:start="63:34" pos:end="63:52">M68K_FEATURE_CF_FPU</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:56" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:18">

            <expr_stmt pos:start="65:13" pos:end="65:56"><expr pos:start="65:13" pos:end="65:55"><call pos:start="65:13" pos:end="65:55"><name pos:start="65:13" pos:end="65:25">gen_exception</name><argument_list pos:start="65:26" pos:end="65:55">(<argument pos:start="65:27" pos:end="65:27"><expr pos:start="65:27" pos:end="65:27"><name pos:start="65:27" pos:end="65:27">s</name></expr></argument>, <argument pos:start="65:30" pos:end="65:39"><expr pos:start="65:30" pos:end="65:39"><name pos:start="65:30" pos:end="65:39"><name pos:start="65:30" pos:end="65:30">s</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:39">insn_pc</name></name></expr></argument>, <argument pos:start="65:42" pos:end="65:54"><expr pos:start="65:42" pos:end="65:54"><name pos:start="65:42" pos:end="65:54">EXCP_FP_UNIMP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:45"><expr pos:start="71:9" pos:end="71:44"><call pos:start="71:9" pos:end="71:44"><name pos:start="71:9" pos:end="71:26">tcg_gen_qemu_ld32u</name><argument_list pos:start="71:27" pos:end="71:44">(<argument pos:start="71:28" pos:end="71:30"><expr pos:start="71:28" pos:end="71:30"><name pos:start="71:28" pos:end="71:30">tmp</name></expr></argument>, <argument pos:start="71:33" pos:end="71:36"><expr pos:start="71:33" pos:end="71:36"><name pos:start="71:33" pos:end="71:36">addr</name></expr></argument>, <argument pos:start="71:39" pos:end="71:43"><expr pos:start="71:39" pos:end="71:43"><name pos:start="71:39" pos:end="71:43">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:39"><expr pos:start="73:9" pos:end="73:38"><call pos:start="73:9" pos:end="73:38"><name pos:start="73:9" pos:end="73:24">tcg_gen_shri_i32</name><argument_list pos:start="73:25" pos:end="73:38">(<argument pos:start="73:26" pos:end="73:28"><expr pos:start="73:26" pos:end="73:28"><name pos:start="73:26" pos:end="73:28">tmp</name></expr></argument>, <argument pos:start="73:31" pos:end="73:33"><expr pos:start="73:31" pos:end="73:33"><name pos:start="73:31" pos:end="73:33">tmp</name></expr></argument>, <argument pos:start="73:36" pos:end="73:37"><expr pos:start="73:36" pos:end="73:37"><literal type="number" pos:start="73:36" pos:end="73:37">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:60"><expr pos:start="75:9" pos:end="75:59"><call pos:start="75:9" pos:end="75:59"><name pos:start="75:9" pos:end="75:24">tcg_gen_st16_i32</name><argument_list pos:start="75:25" pos:end="75:59">(<argument pos:start="75:26" pos:end="75:28"><expr pos:start="75:26" pos:end="75:28"><name pos:start="75:26" pos:end="75:28">tmp</name></expr></argument>, <argument pos:start="75:31" pos:end="75:32"><expr pos:start="75:31" pos:end="75:32"><name pos:start="75:31" pos:end="75:32">fp</name></expr></argument>, <argument pos:start="75:35" pos:end="75:58"><expr pos:start="75:35" pos:end="75:58"><call pos:start="75:35" pos:end="75:58"><name pos:start="75:35" pos:end="75:42">offsetof</name><argument_list pos:start="75:43" pos:end="75:58">(<argument pos:start="75:44" pos:end="75:48"><expr pos:start="75:44" pos:end="75:48"><name pos:start="75:44" pos:end="75:48">FPReg</name></expr></argument>, <argument pos:start="75:51" pos:end="75:57"><expr pos:start="75:51" pos:end="75:57"><name pos:start="75:51" pos:end="75:57"><name pos:start="75:51" pos:end="75:51">l</name><operator pos:start="75:52" pos:end="75:52">.</operator><name pos:start="75:53" pos:end="75:57">upper</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:39"><expr pos:start="77:9" pos:end="77:38"><call pos:start="77:9" pos:end="77:38"><name pos:start="77:9" pos:end="77:24">tcg_gen_addi_i32</name><argument_list pos:start="77:25" pos:end="77:38">(<argument pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:28">tmp</name></expr></argument>, <argument pos:start="77:31" pos:end="77:34"><expr pos:start="77:31" pos:end="77:34"><name pos:start="77:31" pos:end="77:34">addr</name></expr></argument>, <argument pos:start="77:37" pos:end="77:37"><expr pos:start="77:37" pos:end="77:37"><literal type="number" pos:start="77:37" pos:end="77:37">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:43"><expr pos:start="79:9" pos:end="79:42"><call pos:start="79:9" pos:end="79:42"><name pos:start="79:9" pos:end="79:25">tcg_gen_qemu_ld64</name><argument_list pos:start="79:26" pos:end="79:42">(<argument pos:start="79:27" pos:end="79:29"><expr pos:start="79:27" pos:end="79:29"><name pos:start="79:27" pos:end="79:29">t64</name></expr></argument>, <argument pos:start="79:32" pos:end="79:34"><expr pos:start="79:32" pos:end="79:34"><name pos:start="79:32" pos:end="79:34">tmp</name></expr></argument>, <argument pos:start="79:37" pos:end="79:41"><expr pos:start="79:37" pos:end="79:41"><name pos:start="79:37" pos:end="79:41">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:58"><expr pos:start="81:9" pos:end="81:57"><call pos:start="81:9" pos:end="81:57"><name pos:start="81:9" pos:end="81:22">tcg_gen_st_i64</name><argument_list pos:start="81:23" pos:end="81:57">(<argument pos:start="81:24" pos:end="81:26"><expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">t64</name></expr></argument>, <argument pos:start="81:29" pos:end="81:30"><expr pos:start="81:29" pos:end="81:30"><name pos:start="81:29" pos:end="81:30">fp</name></expr></argument>, <argument pos:start="81:33" pos:end="81:56"><expr pos:start="81:33" pos:end="81:56"><call pos:start="81:33" pos:end="81:56"><name pos:start="81:33" pos:end="81:40">offsetof</name><argument_list pos:start="81:41" pos:end="81:56">(<argument pos:start="81:42" pos:end="81:46"><expr pos:start="81:42" pos:end="81:46"><name pos:start="81:42" pos:end="81:46">FPReg</name></expr></argument>, <argument pos:start="81:49" pos:end="81:55"><expr pos:start="81:49" pos:end="81:55"><name pos:start="81:49" pos:end="81:55"><name pos:start="81:49" pos:end="81:49">l</name><operator pos:start="81:50" pos:end="81:50">.</operator><name pos:start="81:51" pos:end="81:55">lower</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:19">case <expr pos:start="85:10" pos:end="85:18"><name pos:start="85:10" pos:end="85:18">OS_PACKED</name></expr>:</case>

        <comment type="block" pos:start="87:9" pos:end="91:11">/* unimplemented data type on 68040/ColdFire

         * FIXME if needed for another FPU

         */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:52"><expr pos:start="93:9" pos:end="93:51"><call pos:start="93:9" pos:end="93:51"><name pos:start="93:9" pos:end="93:21">gen_exception</name><argument_list pos:start="93:22" pos:end="93:51">(<argument pos:start="93:23" pos:end="93:23"><expr pos:start="93:23" pos:end="93:23"><name pos:start="93:23" pos:end="93:23">s</name></expr></argument>, <argument pos:start="93:26" pos:end="93:35"><expr pos:start="93:26" pos:end="93:35"><name pos:start="93:26" pos:end="93:35"><name pos:start="93:26" pos:end="93:26">s</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:35">insn_pc</name></name></expr></argument>, <argument pos:start="93:38" pos:end="93:50"><expr pos:start="93:38" pos:end="93:50"><name pos:start="93:38" pos:end="93:50">EXCP_FP_UNIMP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <default pos:start="97:5" pos:end="97:12">default:</default>

        <expr_stmt pos:start="99:9" pos:end="99:31"><expr pos:start="99:9" pos:end="99:30"><call pos:start="99:9" pos:end="99:30"><name pos:start="99:9" pos:end="99:28">g_assert_not_reached</name><argument_list pos:start="99:29" pos:end="99:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="103:5" pos:end="103:23"><expr pos:start="103:5" pos:end="103:22"><call pos:start="103:5" pos:end="103:22"><name pos:start="103:5" pos:end="103:17">tcg_temp_free</name><argument_list pos:start="103:18" pos:end="103:22">(<argument pos:start="103:19" pos:end="103:21"><expr pos:start="103:19" pos:end="103:21"><name pos:start="103:19" pos:end="103:21">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:27"><expr pos:start="105:5" pos:end="105:26"><call pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:21">tcg_temp_free_i64</name><argument_list pos:start="105:22" pos:end="105:26">(<argument pos:start="105:23" pos:end="105:25"><expr pos:start="105:23" pos:end="105:25"><name pos:start="105:23" pos:end="105:25">t64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
