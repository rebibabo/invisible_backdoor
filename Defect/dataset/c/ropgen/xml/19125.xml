<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19125.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">monitor_read_bdrv_key</name><parameter_list pos:start="1:26" pos:end="1:47">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:18">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:22"><name pos:start="5:10" pos:end="5:17">password</name><index pos:start="5:18" pos:end="5:22">[<expr pos:start="5:19" pos:end="5:21"><literal type="number" pos:start="5:19" pos:end="5:21">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:31">(<expr pos:start="11:9" pos:end="11:30"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:30"><name pos:start="11:10" pos:end="11:26">bdrv_is_encrypted</name><argument_list pos:start="11:27" pos:end="11:30">(<argument pos:start="11:28" pos:end="11:29"><expr pos:start="11:28" pos:end="11:29"><name pos:start="11:28" pos:end="11:29">bs</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:49"><expr pos:start="17:5" pos:end="19:48"><call pos:start="17:5" pos:end="19:48"><name pos:start="17:5" pos:end="17:15">term_printf</name><argument_list pos:start="17:16" pos:end="19:48">(<argument pos:start="17:17" pos:end="17:41"><expr pos:start="17:17" pos:end="17:41"><literal type="string" pos:start="17:17" pos:end="17:41">"%s (%s) is encrypted.\n"</literal></expr></argument>, <argument pos:start="17:44" pos:end="17:67"><expr pos:start="17:44" pos:end="17:67"><call pos:start="17:44" pos:end="17:67"><name pos:start="17:44" pos:end="17:63">bdrv_get_device_name</name><argument_list pos:start="17:64" pos:end="17:67">(<argument pos:start="17:65" pos:end="17:66"><expr pos:start="17:65" pos:end="17:66"><name pos:start="17:65" pos:end="17:66">bs</name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="19:17" pos:end="19:47"><expr pos:start="19:17" pos:end="19:47"><call pos:start="19:17" pos:end="19:47"><name pos:start="19:17" pos:end="19:43">bdrv_get_encrypted_filename</name><argument_list pos:start="19:44" pos:end="19:47">(<argument pos:start="19:45" pos:end="19:46"><expr pos:start="19:45" pos:end="19:46"><name pos:start="19:45" pos:end="19:46">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="31:5">for<control pos:start="21:8" pos:end="21:26">(<init pos:start="21:9" pos:end="21:14"><expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:9">i</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <literal type="number" pos:start="21:13" pos:end="21:13">0</literal></expr>;</init> <condition pos:start="21:16" pos:end="21:21"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:16">i</name> <operator pos:start="21:18" pos:end="21:18">&lt;</operator> <literal type="number" pos:start="21:20" pos:end="21:20">3</literal></expr>;</condition> <incr pos:start="21:23" pos:end="21:25"><expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:23">i</name><operator pos:start="21:24" pos:end="21:25">++</operator></expr></incr>)</control> <block pos:start="21:28" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:42">

        <expr_stmt pos:start="23:9" pos:end="23:70"><expr pos:start="23:9" pos:end="23:69"><call pos:start="23:9" pos:end="23:69"><name pos:start="23:9" pos:end="23:24">monitor_readline</name><argument_list pos:start="23:25" pos:end="23:69">(<argument pos:start="23:26" pos:end="23:37"><expr pos:start="23:26" pos:end="23:37"><literal type="string" pos:start="23:26" pos:end="23:37">"Password: "</literal></expr></argument>, <argument pos:start="23:40" pos:end="23:40"><expr pos:start="23:40" pos:end="23:40"><literal type="number" pos:start="23:40" pos:end="23:40">1</literal></expr></argument>, <argument pos:start="23:43" pos:end="23:50"><expr pos:start="23:43" pos:end="23:50"><name pos:start="23:43" pos:end="23:50">password</name></expr></argument>, <argument pos:start="23:53" pos:end="23:68"><expr pos:start="23:53" pos:end="23:68"><sizeof pos:start="23:53" pos:end="23:68">sizeof<argument_list pos:start="23:59" pos:end="23:68">(<argument pos:start="23:60" pos:end="23:67"><expr pos:start="23:60" pos:end="23:67"><name pos:start="23:60" pos:end="23:67">password</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:21"><if pos:start="25:9" pos:end="27:21">if <condition pos:start="25:12" pos:end="25:44">(<expr pos:start="25:13" pos:end="25:43"><call pos:start="25:13" pos:end="25:38"><name pos:start="25:13" pos:end="25:24">bdrv_set_key</name><argument_list pos:start="25:25" pos:end="25:38">(<argument pos:start="25:26" pos:end="25:27"><expr pos:start="25:26" pos:end="25:27"><name pos:start="25:26" pos:end="25:27">bs</name></expr></argument>, <argument pos:start="25:30" pos:end="25:37"><expr pos:start="25:30" pos:end="25:37"><name pos:start="25:30" pos:end="25:37">password</name></expr></argument>)</argument_list></call> <operator pos:start="25:40" pos:end="25:41">==</operator> <literal type="number" pos:start="25:43" pos:end="25:43">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:21"><block_content pos:start="27:13" pos:end="27:21">

            <return pos:start="27:13" pos:end="27:21">return <expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:42"><expr pos:start="29:9" pos:end="29:41"><call pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:19">term_printf</name><argument_list pos:start="29:20" pos:end="29:41">(<argument pos:start="29:21" pos:end="29:40"><expr pos:start="29:21" pos:end="29:40"><literal type="string" pos:start="29:21" pos:end="29:40">"invalid password\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="33:5" pos:end="33:18">return <expr pos:start="33:12" pos:end="33:17"><operator pos:start="33:12" pos:end="33:12">-</operator><name pos:start="33:13" pos:end="33:17">EPERM</name></expr>;</return>

</block_content>}</block></function>
</unit>
