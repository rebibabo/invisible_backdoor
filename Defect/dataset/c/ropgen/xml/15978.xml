<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15978.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">check_protocol_support</name><parameter_list pos:start="1:34" pos:end="1:65">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:38">bool</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:48">has_ipv4</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:54">bool</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:64">has_ipv6</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="7:5" pos:end="112:0">

<cpp:ifdef pos:start="5:1" pos:end="5:21">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:21">HAVE_IFADDRS_H</name></cpp:ifdef>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:18">ifaddrs</name></name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:26">ifaddr</name> <init pos:start="7:28" pos:end="7:33">= <expr pos:start="7:30" pos:end="7:33"><name pos:start="7:30" pos:end="7:33">NULL</name></expr></init></decl>, <decl pos:start="7:36" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:20"><modifier pos:start="7:36" pos:end="7:36">*</modifier></type><name pos:start="7:37" pos:end="7:39">ifa</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:19">addrinfo</name></name></type> <name pos:start="9:21" pos:end="9:25">hints</name> <init pos:start="9:27" pos:end="9:33">= <expr pos:start="9:29" pos:end="9:33"><block pos:start="9:29" pos:end="9:33">{ <expr pos:start="9:31" pos:end="9:31"><literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:19">addrinfo</name></name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:23">ai</name> <init pos:start="11:25" pos:end="11:30">= <expr pos:start="11:27" pos:end="11:30"><name pos:start="11:27" pos:end="11:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">gaierr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><operator pos:start="17:5" pos:end="17:5">*</operator><name pos:start="17:6" pos:end="17:13">has_ipv4</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <operator pos:start="17:17" pos:end="17:17">*</operator><name pos:start="17:18" pos:end="17:25">has_ipv6</name> <operator pos:start="17:27" pos:end="17:27">=</operator> <name pos:start="17:29" pos:end="17:33">false</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:32">(<expr pos:start="21:9" pos:end="21:31"><call pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:18">getifaddrs</name><argument_list pos:start="21:19" pos:end="21:27">(<argument pos:start="21:20" pos:end="21:26"><expr pos:start="21:20" pos:end="21:26"><operator pos:start="21:20" pos:end="21:20">&amp;</operator><name pos:start="21:21" pos:end="21:26">ifaddr</name></expr></argument>)</argument_list></call> <operator pos:start="21:29" pos:end="21:29">&lt;</operator> <literal type="number" pos:start="21:31" pos:end="21:31">0</literal></expr>)</condition> <block pos:start="21:34" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:18">

        <expr_stmt pos:start="23:9" pos:end="25:36"><expr pos:start="23:9" pos:end="25:35"><call pos:start="23:9" pos:end="25:35"><name pos:start="23:9" pos:end="23:18">g_printerr</name><argument_list pos:start="23:19" pos:end="25:35">(<argument pos:start="23:20" pos:end="23:63"><expr pos:start="23:20" pos:end="23:63"><literal type="string" pos:start="23:20" pos:end="23:63">"Failed to lookup interface addresses: %s\n"</literal></expr></argument>,

                   <argument pos:start="25:20" pos:end="25:34"><expr pos:start="25:20" pos:end="25:34"><call pos:start="25:20" pos:end="25:34"><name pos:start="25:20" pos:end="25:27">strerror</name><argument_list pos:start="25:28" pos:end="25:34">(<argument pos:start="25:29" pos:end="25:33"><expr pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:33">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="33:5" pos:end="55:5">for <control pos:start="33:9" pos:end="33:56">(<init pos:start="33:10" pos:end="33:22"><expr pos:start="33:10" pos:end="33:21"><name pos:start="33:10" pos:end="33:12">ifa</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:21">ifaddr</name></expr>;</init> <condition pos:start="33:24" pos:end="33:35"><expr pos:start="33:24" pos:end="33:34"><name pos:start="33:24" pos:end="33:26">ifa</name> <operator pos:start="33:28" pos:end="33:29">!=</operator> <name pos:start="33:31" pos:end="33:34">NULL</name></expr>;</condition> <incr pos:start="33:37" pos:end="33:55"><expr pos:start="33:37" pos:end="33:55"><name pos:start="33:37" pos:end="33:39">ifa</name> <operator pos:start="33:41" pos:end="33:41">=</operator> <name pos:start="33:43" pos:end="33:55"><name pos:start="33:43" pos:end="33:45">ifa</name><operator pos:start="33:46" pos:end="33:47">-&gt;</operator><name pos:start="33:48" pos:end="33:55">ifa_next</name></name></expr></incr>)</control> <block pos:start="33:58" pos:end="55:5">{<block_content pos:start="35:9" pos:end="53:9">

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:27">(<expr pos:start="35:13" pos:end="35:26"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:26"><name pos:start="35:14" pos:end="35:16">ifa</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:26">ifa_addr</name></name></expr>)</condition> <block pos:start="35:29" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:21">

            <continue pos:start="37:13" pos:end="37:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:48">(<expr pos:start="43:13" pos:end="43:47"><name pos:start="43:13" pos:end="43:36"><name pos:start="43:13" pos:end="43:15">ifa</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:25">ifa_addr</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:36">sa_family</name></name> <operator pos:start="43:38" pos:end="43:39">==</operator> <name pos:start="43:41" pos:end="43:47">AF_INET</name></expr>)</condition> <block pos:start="43:50" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:29">

            <expr_stmt pos:start="45:13" pos:end="45:29"><expr pos:start="45:13" pos:end="45:28"><operator pos:start="45:13" pos:end="45:13">*</operator><name pos:start="45:14" pos:end="45:21">has_ipv4</name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:28">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:49">(<expr pos:start="49:13" pos:end="49:48"><name pos:start="49:13" pos:end="49:36"><name pos:start="49:13" pos:end="49:15">ifa</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:25">ifa_addr</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:36">sa_family</name></name> <operator pos:start="49:38" pos:end="49:39">==</operator> <name pos:start="49:41" pos:end="49:48">AF_INET6</name></expr>)</condition> <block pos:start="49:51" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:29">

            <expr_stmt pos:start="51:13" pos:end="51:29"><expr pos:start="51:13" pos:end="51:28"><operator pos:start="51:13" pos:end="51:13">*</operator><name pos:start="51:14" pos:end="51:21">has_ipv6</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:28">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="59:5" pos:end="59:24"><expr pos:start="59:5" pos:end="59:23"><call pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:15">freeifaddrs</name><argument_list pos:start="59:16" pos:end="59:23">(<argument pos:start="59:17" pos:end="59:22"><expr pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:22">ifaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:48"><expr pos:start="63:5" pos:end="63:47"><name pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:9">hints</name><operator pos:start="63:10" pos:end="63:10">.</operator><name pos:start="63:11" pos:end="63:18">ai_flags</name></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:31">AI_PASSIVE</name> <operator pos:start="63:33" pos:end="63:33">|</operator> <name pos:start="63:35" pos:end="63:47">AI_ADDRCONFIG</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:31"><expr pos:start="65:5" pos:end="65:30"><name pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:9">hints</name><operator pos:start="65:10" pos:end="65:10">.</operator><name pos:start="65:11" pos:end="65:19">ai_family</name></name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:30">AF_INET6</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:36"><expr pos:start="67:5" pos:end="67:35"><name pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:9">hints</name><operator pos:start="67:10" pos:end="67:10">.</operator><name pos:start="67:11" pos:end="67:21">ai_socktype</name></name> <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:35">SOCK_STREAM</name></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:51"><expr pos:start="71:5" pos:end="71:50"><name pos:start="71:5" pos:end="71:10">gaierr</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <call pos:start="71:14" pos:end="71:50"><name pos:start="71:14" pos:end="71:24">getaddrinfo</name><argument_list pos:start="71:25" pos:end="71:50">(<argument pos:start="71:26" pos:end="71:30"><expr pos:start="71:26" pos:end="71:30"><literal type="string" pos:start="71:26" pos:end="71:30">"::1"</literal></expr></argument>, <argument pos:start="71:33" pos:end="71:36"><expr pos:start="71:33" pos:end="71:36"><name pos:start="71:33" pos:end="71:36">NULL</name></expr></argument>, <argument pos:start="71:39" pos:end="71:44"><expr pos:start="71:39" pos:end="71:44"><operator pos:start="71:39" pos:end="71:39">&amp;</operator><name pos:start="71:40" pos:end="71:44">hints</name></expr></argument>, <argument pos:start="71:47" pos:end="71:49"><expr pos:start="71:47" pos:end="71:49"><operator pos:start="71:47" pos:end="71:47">&amp;</operator><name pos:start="71:48" pos:end="71:49">ai</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="93:5"><if pos:start="73:5" pos:end="93:5">if <condition pos:start="73:8" pos:end="73:20">(<expr pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:14">gaierr</name> <operator pos:start="73:16" pos:end="73:17">!=</operator> <literal type="number" pos:start="73:19" pos:end="73:19">0</literal></expr>)</condition> <block pos:start="73:22" pos:end="93:5">{<block_content pos:start="75:9" pos:end="91:9">

        <if_stmt pos:start="75:9" pos:end="91:9"><if pos:start="75:9" pos:end="83:9">if <condition pos:start="75:12" pos:end="79:33">(<expr pos:start="75:13" pos:end="79:32"><name pos:start="75:13" pos:end="75:18">gaierr</name> <operator pos:start="75:20" pos:end="75:21">==</operator> <name pos:start="75:23" pos:end="75:36">EAI_ADDRFAMILY</name> <operator pos:start="75:38" pos:end="75:39">||</operator>

            <name pos:start="77:13" pos:end="77:18">gaierr</name> <operator pos:start="77:20" pos:end="77:21">==</operator> <name pos:start="77:23" pos:end="77:32">EAI_FAMILY</name> <operator pos:start="77:34" pos:end="77:35">||</operator>

            <name pos:start="79:13" pos:end="79:18">gaierr</name> <operator pos:start="79:20" pos:end="79:21">==</operator> <name pos:start="79:23" pos:end="79:32">EAI_NONAME</name></expr>)</condition> <block pos:start="79:35" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:30">

            <expr_stmt pos:start="81:13" pos:end="81:30"><expr pos:start="81:13" pos:end="81:29"><operator pos:start="81:13" pos:end="81:13">*</operator><name pos:start="81:14" pos:end="81:21">has_ipv6</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <name pos:start="81:25" pos:end="81:29">false</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="83:11" pos:end="91:9">else <block pos:start="83:16" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:22">

            <expr_stmt pos:start="85:13" pos:end="87:45"><expr pos:start="85:13" pos:end="87:44"><call pos:start="85:13" pos:end="87:44"><name pos:start="85:13" pos:end="85:22">g_printerr</name><argument_list pos:start="85:23" pos:end="87:44">(<argument pos:start="85:24" pos:end="85:60"><expr pos:start="85:24" pos:end="85:60"><literal type="string" pos:start="85:24" pos:end="85:60">"Failed to resolve ::1 address: %s\n"</literal></expr></argument>,

                       <argument pos:start="87:24" pos:end="87:43"><expr pos:start="87:24" pos:end="87:43"><call pos:start="87:24" pos:end="87:43"><name pos:start="87:24" pos:end="87:35">gai_strerror</name><argument_list pos:start="87:36" pos:end="87:43">(<argument pos:start="87:37" pos:end="87:42"><expr pos:start="87:37" pos:end="87:42"><name pos:start="87:37" pos:end="87:42">gaierr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:22">return <expr pos:start="89:20" pos:end="89:21"><operator pos:start="89:20" pos:end="89:20">-</operator><literal type="number" pos:start="89:21" pos:end="89:21">1</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:21"><expr pos:start="97:5" pos:end="97:20"><call pos:start="97:5" pos:end="97:20"><name pos:start="97:5" pos:end="97:16">freeaddrinfo</name><argument_list pos:start="97:17" pos:end="97:20">(<argument pos:start="97:18" pos:end="97:19"><expr pos:start="97:18" pos:end="97:19"><name pos:start="97:18" pos:end="97:19">ai</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="101:5" pos:end="104:0">return <expr pos:start="101:12" pos:end="101:12"><literal type="number" pos:start="101:12" pos:end="101:12">0</literal></expr>;</return>

<cpp:else pos:start="103:1" pos:end="103:5">#<cpp:directive pos:start="103:2" pos:end="103:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="105:5" pos:end="105:34"><expr pos:start="105:5" pos:end="105:33"><operator pos:start="105:5" pos:end="105:5">*</operator><name pos:start="105:6" pos:end="105:13">has_ipv4</name> <operator pos:start="105:15" pos:end="105:15">=</operator> <operator pos:start="105:17" pos:end="105:17">*</operator><name pos:start="105:18" pos:end="105:25">has_ipv6</name> <operator pos:start="105:27" pos:end="105:27">=</operator> <name pos:start="105:29" pos:end="105:33">false</name></expr>;</expr_stmt>



    <return pos:start="109:5" pos:end="112:0">return <expr pos:start="109:12" pos:end="109:13"><operator pos:start="109:12" pos:end="109:12">-</operator><literal type="number" pos:start="109:13" pos:end="109:13">1</literal></expr>;</return>

<cpp:endif pos:start="111:1" pos:end="111:6">#<cpp:directive pos:start="111:2" pos:end="111:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
