<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20361.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:33">tcg_out_brcond</name><parameter_list pos:start="1:34" pos:end="3:73">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:44">TCGContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:56">TCGCond</name></type> <name pos:start="1:58" pos:end="1:61">cond</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:74"><decl pos:start="1:64" pos:end="1:74"><type pos:start="1:64" pos:end="1:74"><name pos:start="1:64" pos:end="1:69">TCGReg</name></type> <name pos:start="1:71" pos:end="1:74">arg1</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:45"><decl pos:start="3:35" pos:end="3:45"><type pos:start="3:35" pos:end="3:45"><name pos:start="3:35" pos:end="3:40">TCGReg</name></type> <name pos:start="3:42" pos:end="3:45">arg2</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:62"><decl pos:start="3:48" pos:end="3:62"><type pos:start="3:48" pos:end="3:62"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:62">label_index</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:72"><decl pos:start="3:65" pos:end="3:72"><type pos:start="3:65" pos:end="3:72"><name pos:start="3:65" pos:end="3:67">int</name></type> <name pos:start="3:69" pos:end="3:72">cmp4</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:68">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">TCGLabel</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">l</name> <init pos:start="7:17" pos:end="7:41">= <expr pos:start="7:19" pos:end="7:41"><operator pos:start="7:19" pos:end="7:19">&amp;</operator><name pos:start="7:20" pos:end="7:41"><name pos:start="7:20" pos:end="7:20">s</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:28">labels</name><index pos:start="7:29" pos:end="7:41">[<expr pos:start="7:30" pos:end="7:40"><name pos:start="7:30" pos:end="7:40">label_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:16">imm</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="17:56">/* We pay attention here to not modify the branch target by reading

       the existing value and using it again. This ensure that caches and

       memory are kept coherent during retranslation. */</comment>

    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:21">(<expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:9">l</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:20">has_value</name></name></expr>)</condition> <block pos:start="19:23" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:43">

        <expr_stmt pos:start="21:9" pos:end="21:43"><expr pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:11">imm</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:28"><name pos:start="21:15" pos:end="21:15">l</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:18">u</name><operator pos:start="21:19" pos:end="21:19">.</operator><name pos:start="21:20" pos:end="21:28">value_ptr</name></name> <operator pos:start="21:30" pos:end="21:30">-</operator> <name pos:start="21:32" pos:end="21:42"><name pos:start="21:32" pos:end="21:32">s</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:42">code_ptr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="29:5">else <block pos:start="23:12" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:71">

        <expr_stmt pos:start="25:9" pos:end="25:52"><expr pos:start="25:9" pos:end="25:51"><name pos:start="25:9" pos:end="25:11">imm</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:51"><name pos:start="25:15" pos:end="25:38">get_reloc_pcrel21b_slot2</name><argument_list pos:start="25:39" pos:end="25:51">(<argument pos:start="25:40" pos:end="25:50"><expr pos:start="25:40" pos:end="25:50"><name pos:start="25:40" pos:end="25:50"><name pos:start="25:40" pos:end="25:40">s</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:50">code_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:71"><expr pos:start="27:9" pos:end="27:70"><call pos:start="27:9" pos:end="27:70"><name pos:start="27:9" pos:end="27:21">tcg_out_reloc</name><argument_list pos:start="27:22" pos:end="27:70">(<argument pos:start="27:23" pos:end="27:23"><expr pos:start="27:23" pos:end="27:23"><name pos:start="27:23" pos:end="27:23">s</name></expr></argument>, <argument pos:start="27:26" pos:end="27:36"><expr pos:start="27:26" pos:end="27:36"><name pos:start="27:26" pos:end="27:36"><name pos:start="27:26" pos:end="27:26">s</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:36">code_ptr</name></name></expr></argument>, <argument pos:start="27:39" pos:end="27:53"><expr pos:start="27:39" pos:end="27:53"><name pos:start="27:39" pos:end="27:53">R_IA64_PCREL21B</name></expr></argument>, <argument pos:start="27:56" pos:end="27:66"><expr pos:start="27:56" pos:end="27:66"><name pos:start="27:56" pos:end="27:66">label_index</name></expr></argument>, <argument pos:start="27:69" pos:end="27:69"><expr pos:start="27:69" pos:end="27:69"><literal type="number" pos:start="27:69" pos:end="27:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="39:68"><expr pos:start="33:5" pos:end="39:67"><call pos:start="33:5" pos:end="39:67"><name pos:start="33:5" pos:end="33:18">tcg_out_bundle</name><argument_list pos:start="33:19" pos:end="39:67">(<argument pos:start="33:20" pos:end="33:20"><expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">s</name></expr></argument>, <argument pos:start="33:23" pos:end="33:25"><expr pos:start="33:23" pos:end="33:25"><name pos:start="33:23" pos:end="33:25">miB</name></expr></argument>,

                   <argument pos:start="35:20" pos:end="35:29"><expr pos:start="35:20" pos:end="35:29"><name pos:start="35:20" pos:end="35:29">INSN_NOP_M</name></expr></argument>,

                   <argument pos:start="37:20" pos:end="37:68"><expr pos:start="37:20" pos:end="37:68"><call pos:start="37:20" pos:end="37:68"><name pos:start="37:20" pos:end="37:32">tcg_opc_cmp_a</name><argument_list pos:start="37:33" pos:end="37:68">(<argument pos:start="37:34" pos:end="37:43"><expr pos:start="37:34" pos:end="37:43"><name pos:start="37:34" pos:end="37:43">TCG_REG_P0</name></expr></argument>, <argument pos:start="37:46" pos:end="37:49"><expr pos:start="37:46" pos:end="37:49"><name pos:start="37:46" pos:end="37:49">cond</name></expr></argument>, <argument pos:start="37:52" pos:end="37:55"><expr pos:start="37:52" pos:end="37:55"><name pos:start="37:52" pos:end="37:55">arg1</name></expr></argument>, <argument pos:start="37:58" pos:end="37:61"><expr pos:start="37:58" pos:end="37:61"><name pos:start="37:58" pos:end="37:61">arg2</name></expr></argument>, <argument pos:start="37:64" pos:end="37:67"><expr pos:start="37:64" pos:end="37:67"><name pos:start="37:64" pos:end="37:67">cmp4</name></expr></argument>)</argument_list></call></expr></argument>,

                   <argument pos:start="39:20" pos:end="39:66"><expr pos:start="39:20" pos:end="39:66"><call pos:start="39:20" pos:end="39:66"><name pos:start="39:20" pos:end="39:29">tcg_opc_b1</name><argument_list pos:start="39:30" pos:end="39:66">(<argument pos:start="39:31" pos:end="39:40"><expr pos:start="39:31" pos:end="39:40"><name pos:start="39:31" pos:end="39:40">TCG_REG_P6</name></expr></argument>, <argument pos:start="39:43" pos:end="39:60"><expr pos:start="39:43" pos:end="39:60"><name pos:start="39:43" pos:end="39:60">OPC_BR_DPTK_FEW_B1</name></expr></argument>, <argument pos:start="39:63" pos:end="39:65"><expr pos:start="39:63" pos:end="39:65"><name pos:start="39:63" pos:end="39:65">imm</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
