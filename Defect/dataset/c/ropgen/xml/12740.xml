<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12740.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">event_notifier_ready</name><parameter_list pos:start="1:33" pos:end="1:57">(<parameter pos:start="1:34" pos:end="1:56"><decl pos:start="1:34" pos:end="1:56"><type pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:46">EventNotifier</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:56">notifier</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:5">

    <decl_stmt pos:start="5:5" pos:end="5:68"><decl pos:start="5:5" pos:end="5:67"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ThreadPool</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">pool</name> <init pos:start="5:22" pos:end="5:67">= <expr pos:start="5:24" pos:end="5:67"><call pos:start="5:24" pos:end="5:67"><name pos:start="5:24" pos:end="5:35">container_of</name><argument_list pos:start="5:36" pos:end="5:67">(<argument pos:start="5:37" pos:end="5:44"><expr pos:start="5:37" pos:end="5:44"><name pos:start="5:37" pos:end="5:44">notifier</name></expr></argument>, <argument pos:start="5:47" pos:end="5:56"><expr pos:start="5:47" pos:end="5:56"><name pos:start="5:47" pos:end="5:56">ThreadPool</name></expr></argument>, <argument pos:start="5:59" pos:end="5:66"><expr pos:start="5:59" pos:end="5:66"><name pos:start="5:59" pos:end="5:66">notifier</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">ThreadPoolElement</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:27">elem</name></decl>, <decl pos:start="7:30" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:23"><modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:34">next</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:44"><expr pos:start="11:5" pos:end="11:43"><call pos:start="11:5" pos:end="11:43"><name pos:start="11:5" pos:end="11:33">event_notifier_test_and_clear</name><argument_list pos:start="11:34" pos:end="11:43">(<argument pos:start="11:35" pos:end="11:42"><expr pos:start="11:35" pos:end="11:42"><name pos:start="11:35" pos:end="11:42">notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="13:1" pos:end="13:8"><name pos:start="13:1" pos:end="13:7">restart</name>:</label>

    <macro pos:start="15:5" pos:end="15:52"><name pos:start="15:5" pos:end="15:22">QLIST_FOREACH_SAFE</name><argument_list pos:start="15:23" pos:end="15:52">(<argument pos:start="15:24" pos:end="15:27">elem</argument>, <argument pos:start="15:30" pos:end="15:40">&amp;pool-&gt;head</argument>, <argument pos:start="15:43" pos:end="15:45">all</argument>, <argument pos:start="15:48" pos:end="15:51">next</argument>)</argument_list></macro> <block pos:start="15:54" pos:end="55:5">{<block_content pos:start="17:9" pos:end="53:9">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:73">(<expr pos:start="17:13" pos:end="17:72"><name pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:16">elem</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:23">state</name></name> <operator pos:start="17:25" pos:end="17:26">!=</operator> <name pos:start="17:28" pos:end="17:42">THREAD_CANCELED</name> <operator pos:start="17:44" pos:end="17:45">&amp;&amp;</operator> <name pos:start="17:47" pos:end="17:57"><name pos:start="17:47" pos:end="17:50">elem</name><operator pos:start="17:51" pos:end="17:52">-&gt;</operator><name pos:start="17:53" pos:end="17:57">state</name></name> <operator pos:start="17:59" pos:end="17:60">!=</operator> <name pos:start="17:62" pos:end="17:72">THREAD_DONE</name></expr>)</condition> <block pos:start="17:75" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:21">

            <continue pos:start="19:13" pos:end="19:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:39">(<expr pos:start="23:13" pos:end="23:38"><name pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:16">elem</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:23">state</name></name> <operator pos:start="23:25" pos:end="23:26">==</operator> <name pos:start="23:28" pos:end="23:38">THREAD_DONE</name></expr>)</condition> <block pos:start="23:41" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:50">

            <expr_stmt pos:start="25:13" pos:end="27:50"><expr pos:start="25:13" pos:end="27:49"><call pos:start="25:13" pos:end="27:49"><name pos:start="25:13" pos:end="25:38">trace_thread_pool_complete</name><argument_list pos:start="25:39" pos:end="27:49">(<argument pos:start="25:40" pos:end="25:43"><expr pos:start="25:40" pos:end="25:43"><name pos:start="25:40" pos:end="25:43">pool</name></expr></argument>, <argument pos:start="25:46" pos:end="25:49"><expr pos:start="25:46" pos:end="25:49"><name pos:start="25:46" pos:end="25:49">elem</name></expr></argument>, <argument pos:start="25:52" pos:end="25:70"><expr pos:start="25:52" pos:end="25:70"><name pos:start="25:52" pos:end="25:70"><name pos:start="25:52" pos:end="25:55">elem</name><operator pos:start="25:56" pos:end="25:57">-&gt;</operator><name pos:start="25:58" pos:end="25:63">common</name><operator pos:start="25:64" pos:end="25:64">.</operator><name pos:start="25:65" pos:end="25:70">opaque</name></name></expr></argument>,

                                       <argument pos:start="27:40" pos:end="27:48"><expr pos:start="27:40" pos:end="27:48"><name pos:start="27:40" pos:end="27:48"><name pos:start="27:40" pos:end="27:43">elem</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:48">ret</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="31:9" pos:end="53:9"><if pos:start="31:9" pos:end="45:9">if <condition pos:start="31:12" pos:end="31:58">(<expr pos:start="31:13" pos:end="31:57"><name pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:16">elem</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">state</name></name> <operator pos:start="31:25" pos:end="31:26">==</operator> <name pos:start="31:28" pos:end="31:38">THREAD_DONE</name> <operator pos:start="31:40" pos:end="31:41">&amp;&amp;</operator> <name pos:start="31:43" pos:end="31:57"><name pos:start="31:43" pos:end="31:46">elem</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:54">common</name><operator pos:start="31:55" pos:end="31:55">.</operator><name pos:start="31:56" pos:end="31:57">cb</name></name></expr>)</condition> <block pos:start="31:60" pos:end="45:9">{<block_content pos:start="33:13" pos:end="43:25">

            <expr_stmt pos:start="33:13" pos:end="33:36"><expr pos:start="33:13" pos:end="33:35"><call pos:start="33:13" pos:end="33:35"><name pos:start="33:13" pos:end="33:24">QLIST_REMOVE</name><argument_list pos:start="33:25" pos:end="33:35">(<argument pos:start="33:26" pos:end="33:29"><expr pos:start="33:26" pos:end="33:29"><name pos:start="33:26" pos:end="33:29">elem</name></expr></argument>, <argument pos:start="33:32" pos:end="33:34"><expr pos:start="33:32" pos:end="33:34"><name pos:start="33:32" pos:end="33:34">all</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="35:13" pos:end="35:41">/* Read state before ret.  */</comment>

            <expr_stmt pos:start="37:13" pos:end="37:22"><expr pos:start="37:13" pos:end="37:21"><call pos:start="37:13" pos:end="37:21"><name pos:start="37:13" pos:end="37:19">smp_rmb</name><argument_list pos:start="37:20" pos:end="37:21">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:60"><expr pos:start="39:13" pos:end="39:59"><call pos:start="39:13" pos:end="39:59"><name pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:16">elem</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:24">common</name><operator pos:start="39:25" pos:end="39:25">.</operator><name pos:start="39:26" pos:end="39:27">cb</name></name><argument_list pos:start="39:28" pos:end="39:59">(<argument pos:start="39:29" pos:end="39:47"><expr pos:start="39:29" pos:end="39:47"><name pos:start="39:29" pos:end="39:47"><name pos:start="39:29" pos:end="39:32">elem</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:40">common</name><operator pos:start="39:41" pos:end="39:41">.</operator><name pos:start="39:42" pos:end="39:47">opaque</name></name></expr></argument>, <argument pos:start="39:50" pos:end="39:58"><expr pos:start="39:50" pos:end="39:58"><name pos:start="39:50" pos:end="39:58"><name pos:start="39:50" pos:end="39:53">elem</name><operator pos:start="39:54" pos:end="39:55">-&gt;</operator><name pos:start="39:56" pos:end="39:58">ret</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:35"><expr pos:start="41:13" pos:end="41:34"><call pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:28">qemu_aio_release</name><argument_list pos:start="41:29" pos:end="41:34">(<argument pos:start="41:30" pos:end="41:33"><expr pos:start="41:30" pos:end="41:33"><name pos:start="41:30" pos:end="41:33">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="43:13" pos:end="43:25">goto <name pos:start="43:18" pos:end="43:24">restart</name>;</goto>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="53:9">else <block pos:start="45:16" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:35">

            <comment type="block" pos:start="47:13" pos:end="47:36">/* remove the request */</comment>

            <expr_stmt pos:start="49:13" pos:end="49:36"><expr pos:start="49:13" pos:end="49:35"><call pos:start="49:13" pos:end="49:35"><name pos:start="49:13" pos:end="49:24">QLIST_REMOVE</name><argument_list pos:start="49:25" pos:end="49:35">(<argument pos:start="49:26" pos:end="49:29"><expr pos:start="49:26" pos:end="49:29"><name pos:start="49:26" pos:end="49:29">elem</name></expr></argument>, <argument pos:start="49:32" pos:end="49:34"><expr pos:start="49:32" pos:end="49:34"><name pos:start="49:32" pos:end="49:34">all</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:35"><expr pos:start="51:13" pos:end="51:34"><call pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:28">qemu_aio_release</name><argument_list pos:start="51:29" pos:end="51:34">(<argument pos:start="51:30" pos:end="51:33"><expr pos:start="51:30" pos:end="51:33"><name pos:start="51:30" pos:end="51:33">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
