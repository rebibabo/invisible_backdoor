<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2576.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">av_set_options_string</name><parameter_list pos:start="1:26" pos:end="3:73">(<parameter pos:start="1:27" pos:end="1:35"><decl pos:start="1:27" pos:end="1:35"><type pos:start="1:27" pos:end="1:35"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">ctx</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:53"><decl pos:start="1:38" pos:end="1:53"><type pos:start="1:38" pos:end="1:53"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:47">char</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">opts</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:49"><decl pos:start="3:27" pos:end="3:49"><type pos:start="3:27" pos:end="3:49"><specifier pos:start="3:27" pos:end="3:31">const</specifier> <name pos:start="3:33" pos:end="3:36">char</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:49">key_val_sep</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:72"><decl pos:start="3:52" pos:end="3:72"><type pos:start="3:52" pos:end="3:72"><specifier pos:start="3:52" pos:end="3:56">const</specifier> <name pos:start="3:58" pos:end="3:61">char</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:72">pairs_sep</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:17">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:18">count</name> <init pos:start="7:20" pos:end="7:22">= <expr pos:start="7:22" pos:end="7:22"><literal type="number" pos:start="7:22" pos:end="7:22">0</literal></expr></init></decl>;</decl_stmt>





    <while pos:start="13:5" pos:end="27:5">while <condition pos:start="13:11" pos:end="13:17">(<expr pos:start="13:12" pos:end="13:16"><operator pos:start="13:12" pos:end="13:12">*</operator><name pos:start="13:13" pos:end="13:16">opts</name></expr>)</condition> <block pos:start="13:19" pos:end="27:5">{<block_content pos:start="15:9" pos:end="25:19">

        <if_stmt pos:start="15:9" pos:end="17:23"><if pos:start="15:9" pos:end="17:23">if <condition pos:start="15:12" pos:end="15:81">(<expr pos:start="15:13" pos:end="15:80"><operator pos:start="15:13" pos:end="15:13">(</operator><name pos:start="15:14" pos:end="15:16">ret</name> <operator pos:start="15:18" pos:end="15:18">=</operator> <call pos:start="15:20" pos:end="15:75"><name pos:start="15:20" pos:end="15:39">parse_key_value_pair</name><argument_list pos:start="15:40" pos:end="15:75">(<argument pos:start="15:41" pos:end="15:43"><expr pos:start="15:41" pos:end="15:43"><name pos:start="15:41" pos:end="15:43">ctx</name></expr></argument>, <argument pos:start="15:46" pos:end="15:50"><expr pos:start="15:46" pos:end="15:50"><operator pos:start="15:46" pos:end="15:46">&amp;</operator><name pos:start="15:47" pos:end="15:50">opts</name></expr></argument>, <argument pos:start="15:53" pos:end="15:63"><expr pos:start="15:53" pos:end="15:63"><name pos:start="15:53" pos:end="15:63">key_val_sep</name></expr></argument>, <argument pos:start="15:66" pos:end="15:74"><expr pos:start="15:66" pos:end="15:74"><name pos:start="15:66" pos:end="15:74">pairs_sep</name></expr></argument>)</argument_list></call><operator pos:start="15:76" pos:end="15:76">)</operator> <operator pos:start="15:78" pos:end="15:78">&lt;</operator> <literal type="number" pos:start="15:80" pos:end="15:80">0</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:23"><block_content pos:start="17:13" pos:end="17:23">

            <return pos:start="17:13" pos:end="17:23">return <expr pos:start="17:20" pos:end="17:22"><name pos:start="17:20" pos:end="17:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:16"><expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:13">count</name><operator pos:start="19:14" pos:end="19:15">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="23:9" pos:end="25:19"><if pos:start="23:9" pos:end="25:19">if <condition pos:start="23:12" pos:end="23:18">(<expr pos:start="23:13" pos:end="23:17"><operator pos:start="23:13" pos:end="23:13">*</operator><name pos:start="23:14" pos:end="23:17">opts</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:19"><block_content pos:start="25:13" pos:end="25:19">

            <expr_stmt pos:start="25:13" pos:end="25:19"><expr pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:16">opts</name><operator pos:start="25:17" pos:end="25:18">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <return pos:start="31:5" pos:end="31:17">return <expr pos:start="31:12" pos:end="31:16"><name pos:start="31:12" pos:end="31:16">count</name></expr>;</return>

</block_content>}</block></function></unit>
