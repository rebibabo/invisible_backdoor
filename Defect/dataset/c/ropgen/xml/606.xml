<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/606.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name> <name pos:start="1:16" pos:end="1:27">coroutine_fn</name></type> <name pos:start="1:29" pos:end="1:56">bdrv_qed_co_get_block_status</name><parameter_list pos:start="1:57" pos:end="5:75">(<parameter pos:start="1:58" pos:end="1:77"><decl pos:start="1:58" pos:end="1:77"><type pos:start="1:58" pos:end="1:77"><name pos:start="1:58" pos:end="1:73">BlockDriverState</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:77">bs</name></decl></parameter>,

                                                 <parameter pos:start="3:50" pos:end="3:67"><decl pos:start="3:50" pos:end="3:67"><type pos:start="3:50" pos:end="3:67"><name pos:start="3:50" pos:end="3:56">int64_t</name></type> <name pos:start="3:58" pos:end="3:67">sector_num</name></decl></parameter>,

                                                 <parameter pos:start="5:50" pos:end="5:63"><decl pos:start="5:50" pos:end="5:63"><type pos:start="5:50" pos:end="5:63"><name pos:start="5:50" pos:end="5:52">int</name></type> <name pos:start="5:54" pos:end="5:63">nb_sectors</name></decl></parameter>, <parameter pos:start="5:66" pos:end="5:74"><decl pos:start="5:66" pos:end="5:74"><type pos:start="5:66" pos:end="5:74"><name pos:start="5:66" pos:end="5:68">int</name> <modifier pos:start="5:70" pos:end="5:70">*</modifier></type><name pos:start="5:71" pos:end="5:74">pnum</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="51:1">{<block_content pos:start="9:5" pos:end="49:21">

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">BDRVQEDState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name> <init pos:start="9:21" pos:end="9:32">= <expr pos:start="9:23" pos:end="9:32"><name pos:start="9:23" pos:end="9:32"><name pos:start="9:23" pos:end="9:24">bs</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:55"><decl pos:start="11:5" pos:end="11:54"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:14">len</name> <init pos:start="11:16" pos:end="11:54">= <expr pos:start="11:18" pos:end="11:54"><operator pos:start="11:18" pos:end="11:18">(</operator><name pos:start="11:19" pos:end="11:24">size_t</name><operator pos:start="11:25" pos:end="11:25">)</operator><name pos:start="11:26" pos:end="11:35">nb_sectors</name> <operator pos:start="11:37" pos:end="11:37">*</operator> <name pos:start="11:39" pos:end="11:54">BDRV_SECTOR_SIZE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="23:6"><decl pos:start="13:5" pos:end="23:5"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:20">QEDIsAllocatedCB</name></type> <name pos:start="13:22" pos:end="13:23">cb</name> <init pos:start="13:25" pos:end="23:5">= <expr pos:start="13:27" pos:end="23:5"><block pos:start="13:27" pos:end="23:5">{

        <expr pos:start="15:9" pos:end="15:16"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:11">bs</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:16">bs</name></expr>,

        <expr pos:start="17:9" pos:end="17:54"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:12">pos</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <operator pos:start="17:16" pos:end="17:16">(</operator><name pos:start="17:17" pos:end="17:24">uint64_t</name><operator pos:start="17:25" pos:end="17:25">)</operator><name pos:start="17:26" pos:end="17:35">sector_num</name> <operator pos:start="17:37" pos:end="17:37">*</operator> <name pos:start="17:39" pos:end="17:54">BDRV_SECTOR_SIZE</name></expr>,

        <expr pos:start="19:9" pos:end="19:40"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:15">status</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:40">BDRV_BLOCK_OFFSET_MASK</name></expr>,

        <expr pos:start="21:9" pos:end="21:20"><operator pos:start="21:9" pos:end="21:9">.</operator><name pos:start="21:10" pos:end="21:13">pnum</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:20">pnum</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:46"><decl pos:start="25:5" pos:end="25:45"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:14">QEDRequest</name></type> <name pos:start="25:16" pos:end="25:22">request</name> <init pos:start="25:24" pos:end="25:45">= <expr pos:start="25:26" pos:end="25:45"><block pos:start="25:26" pos:end="25:45">{ <expr pos:start="25:28" pos:end="25:43"><operator pos:start="25:28" pos:end="25:28">.</operator><name pos:start="25:29" pos:end="25:36">l2_table</name> <operator pos:start="25:38" pos:end="25:38">=</operator> <name pos:start="25:40" pos:end="25:43">NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:73"><expr pos:start="29:5" pos:end="29:72"><call pos:start="29:5" pos:end="29:72"><name pos:start="29:5" pos:end="29:20">qed_find_cluster</name><argument_list pos:start="29:21" pos:end="29:72">(<argument pos:start="29:22" pos:end="29:22"><expr pos:start="29:22" pos:end="29:22"><name pos:start="29:22" pos:end="29:22">s</name></expr></argument>, <argument pos:start="29:25" pos:end="29:32"><expr pos:start="29:25" pos:end="29:32"><operator pos:start="29:25" pos:end="29:25">&amp;</operator><name pos:start="29:26" pos:end="29:32">request</name></expr></argument>, <argument pos:start="29:35" pos:end="29:40"><expr pos:start="29:35" pos:end="29:40"><name pos:start="29:35" pos:end="29:40"><name pos:start="29:35" pos:end="29:36">cb</name><operator pos:start="29:37" pos:end="29:37">.</operator><name pos:start="29:38" pos:end="29:40">pos</name></name></expr></argument>, <argument pos:start="29:43" pos:end="29:45"><expr pos:start="29:43" pos:end="29:45"><name pos:start="29:43" pos:end="29:45">len</name></expr></argument>, <argument pos:start="29:48" pos:end="29:66"><expr pos:start="29:48" pos:end="29:66"><name pos:start="29:48" pos:end="29:66">qed_is_allocated_cb</name></expr></argument>, <argument pos:start="29:69" pos:end="29:71"><expr pos:start="29:69" pos:end="29:71"><operator pos:start="29:69" pos:end="29:69">&amp;</operator><name pos:start="29:70" pos:end="29:71">cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:62">/* Now sleep if the callback wasn't invoked immediately */</comment>

    <while pos:start="35:5" pos:end="41:5">while <condition pos:start="35:11" pos:end="35:47">(<expr pos:start="35:12" pos:end="35:46"><name pos:start="35:12" pos:end="35:20"><name pos:start="35:12" pos:end="35:13">cb</name><operator pos:start="35:14" pos:end="35:14">.</operator><name pos:start="35:15" pos:end="35:20">status</name></name> <operator pos:start="35:22" pos:end="35:23">==</operator> <name pos:start="35:25" pos:end="35:46">BDRV_BLOCK_OFFSET_MASK</name></expr>)</condition> <block pos:start="35:49" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:31">

        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:10">cb</name><operator pos:start="37:11" pos:end="37:11">.</operator><name pos:start="37:12" pos:end="37:13">co</name></name> <operator pos:start="37:15" pos:end="37:15">=</operator> <call pos:start="37:17" pos:end="37:37"><name pos:start="37:17" pos:end="37:35">qemu_coroutine_self</name><argument_list pos:start="37:36" pos:end="37:37">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><call pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:28">qemu_coroutine_yield</name><argument_list pos:start="39:29" pos:end="39:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="45:5" pos:end="45:47"><expr pos:start="45:5" pos:end="45:46"><call pos:start="45:5" pos:end="45:46"><name pos:start="45:5" pos:end="45:28">qed_unref_l2_cache_entry</name><argument_list pos:start="45:29" pos:end="45:46">(<argument pos:start="45:30" pos:end="45:45"><expr pos:start="45:30" pos:end="45:45"><name pos:start="45:30" pos:end="45:45"><name pos:start="45:30" pos:end="45:36">request</name><operator pos:start="45:37" pos:end="45:37">.</operator><name pos:start="45:38" pos:end="45:45">l2_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="49:5" pos:end="49:21">return <expr pos:start="49:12" pos:end="49:20"><name pos:start="49:12" pos:end="49:20"><name pos:start="49:12" pos:end="49:13">cb</name><operator pos:start="49:14" pos:end="49:14">.</operator><name pos:start="49:15" pos:end="49:20">status</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
