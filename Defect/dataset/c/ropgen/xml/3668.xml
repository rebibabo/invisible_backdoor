<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3668.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:43">qemu_rdma_buffer_mergable</name><parameter_list pos:start="1:44" pos:end="3:50">(<parameter pos:start="1:45" pos:end="1:61"><decl pos:start="1:45" pos:end="1:61"><type pos:start="1:45" pos:end="1:61"><name pos:start="1:45" pos:end="1:55">RDMAContext</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">rdma</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:35"><decl pos:start="3:21" pos:end="3:35"><type pos:start="3:21" pos:end="3:35"><name pos:start="3:21" pos:end="3:28">uint64_t</name></type> <name pos:start="3:30" pos:end="3:35">offset</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:49"><decl pos:start="3:38" pos:end="3:49"><type pos:start="3:38" pos:end="3:49"><name pos:start="3:38" pos:end="3:45">uint64_t</name></type> <name pos:start="3:47" pos:end="3:49">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:13">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">RDMALocalBlock</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">block</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:22">host_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:22">chunk_end</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:32">(<expr pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:12">rdma</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:27">current_index</name></name> <operator pos:start="15:29" pos:end="15:29">&lt;</operator> <literal type="number" pos:start="15:31" pos:end="15:31">0</literal></expr>)</condition> <block pos:start="15:34" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:32">(<expr pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:12">rdma</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:27">current_chunk</name></name> <operator pos:start="23:29" pos:end="23:29">&lt;</operator> <literal type="number" pos:start="23:31" pos:end="23:31">0</literal></expr>)</condition> <block pos:start="23:34" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:17">

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:65"><expr pos:start="31:5" pos:end="31:64"><name pos:start="31:5" pos:end="31:9">block</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <operator pos:start="31:13" pos:end="31:13">&amp;</operator><operator pos:start="31:14" pos:end="31:14">(</operator><name pos:start="31:15" pos:end="31:63"><name pos:start="31:15" pos:end="31:18">rdma</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:36">local_ram_blocks</name><operator pos:start="31:37" pos:end="31:37">.</operator><name pos:start="31:38" pos:end="31:42">block</name><index pos:start="31:43" pos:end="31:63">[<expr pos:start="31:44" pos:end="31:62"><name pos:start="31:44" pos:end="31:62"><name pos:start="31:44" pos:end="31:47">rdma</name><operator pos:start="31:48" pos:end="31:49">-&gt;</operator><name pos:start="31:50" pos:end="31:62">current_index</name></name></expr>]</index></name><operator pos:start="31:64" pos:end="31:64">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:66"><expr pos:start="33:5" pos:end="33:65"><name pos:start="33:5" pos:end="33:13">host_addr</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:38"><name pos:start="33:17" pos:end="33:21">block</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:38">local_host_addr</name></name> <operator pos:start="33:40" pos:end="33:40">+</operator> <operator pos:start="33:42" pos:end="33:42">(</operator><name pos:start="33:43" pos:end="33:48">offset</name> <operator pos:start="33:50" pos:end="33:50">-</operator> <name pos:start="33:52" pos:end="33:64"><name pos:start="33:52" pos:end="33:56">block</name><operator pos:start="33:57" pos:end="33:58">-&gt;</operator><name pos:start="33:59" pos:end="33:64">offset</name></name><operator pos:start="33:65" pos:end="33:65">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:58"><expr pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:13">chunk_end</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:57"><name pos:start="35:17" pos:end="35:29">ram_chunk_end</name><argument_list pos:start="35:30" pos:end="35:57">(<argument pos:start="35:31" pos:end="35:35"><expr pos:start="35:31" pos:end="35:35"><name pos:start="35:31" pos:end="35:35">block</name></expr></argument>, <argument pos:start="35:38" pos:end="35:56"><expr pos:start="35:38" pos:end="35:56"><name pos:start="35:38" pos:end="35:56"><name pos:start="35:38" pos:end="35:41">rdma</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:56">current_chunk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:34">(<expr pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:12">rdma</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:28">current_length</name></name> <operator pos:start="39:30" pos:end="39:31">==</operator> <literal type="number" pos:start="39:33" pos:end="39:33">0</literal></expr>)</condition> <block pos:start="39:36" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:17">

        <return pos:start="41:9" pos:end="41:17">return <expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="51:7">/*

     * Only merge into chunk sequentially.

     */</comment>

    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:62">(<expr pos:start="53:9" pos:end="53:61"><name pos:start="53:9" pos:end="53:14">offset</name> <operator pos:start="53:16" pos:end="53:17">!=</operator> <operator pos:start="53:19" pos:end="53:19">(</operator><name pos:start="53:20" pos:end="53:37"><name pos:start="53:20" pos:end="53:23">rdma</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:37">current_addr</name></name> <operator pos:start="53:39" pos:end="53:39">+</operator> <name pos:start="53:41" pos:end="53:60"><name pos:start="53:41" pos:end="53:44">rdma</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:60">current_length</name></name><operator pos:start="53:61" pos:end="53:61">)</operator></expr>)</condition> <block pos:start="53:64" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:17">

        <return pos:start="55:9" pos:end="55:17">return <expr pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:31">(<expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:14">offset</name> <operator pos:start="61:16" pos:end="61:16">&lt;</operator> <name pos:start="61:18" pos:end="61:30"><name pos:start="61:18" pos:end="61:22">block</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:30">offset</name></name></expr>)</condition> <block pos:start="61:33" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:17">

        <return pos:start="63:9" pos:end="63:17">return <expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:57">(<expr pos:start="69:9" pos:end="69:56"><operator pos:start="69:9" pos:end="69:9">(</operator><name pos:start="69:10" pos:end="69:15">offset</name> <operator pos:start="69:17" pos:end="69:17">+</operator> <name pos:start="69:19" pos:end="69:21">len</name><operator pos:start="69:22" pos:end="69:22">)</operator> <operator pos:start="69:24" pos:end="69:24">&gt;</operator> <operator pos:start="69:26" pos:end="69:26">(</operator><name pos:start="69:27" pos:end="69:39"><name pos:start="69:27" pos:end="69:31">block</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:39">offset</name></name> <operator pos:start="69:41" pos:end="69:41">+</operator> <name pos:start="69:43" pos:end="69:55"><name pos:start="69:43" pos:end="69:47">block</name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:55">length</name></name><operator pos:start="69:56" pos:end="69:56">)</operator></expr>)</condition> <block pos:start="69:59" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:17">

        <return pos:start="71:9" pos:end="71:17">return <expr pos:start="71:16" pos:end="71:16"><literal type="number" pos:start="71:16" pos:end="71:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:38">(<expr pos:start="77:9" pos:end="77:37"><operator pos:start="77:9" pos:end="77:9">(</operator><name pos:start="77:10" pos:end="77:18">host_addr</name> <operator pos:start="77:20" pos:end="77:20">+</operator> <name pos:start="77:22" pos:end="77:24">len</name><operator pos:start="77:25" pos:end="77:25">)</operator> <operator pos:start="77:27" pos:end="77:27">&gt;</operator> <name pos:start="77:29" pos:end="77:37">chunk_end</name></expr>)</condition> <block pos:start="77:40" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:17">

        <return pos:start="79:9" pos:end="79:17">return <expr pos:start="79:16" pos:end="79:16"><literal type="number" pos:start="79:16" pos:end="79:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
