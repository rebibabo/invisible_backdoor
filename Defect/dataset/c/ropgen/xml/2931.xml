<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2931.c" pos:tabs="8"><function pos:start="1:1" pos:end="279:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:58">vorbis_residue_decode_internal</name><parameter_list pos:start="1:59" pos:end="15:71">(<parameter pos:start="1:60" pos:end="1:77"><decl pos:start="1:60" pos:end="1:77"><type pos:start="1:60" pos:end="1:77"><name pos:start="1:60" pos:end="1:73">vorbis_context</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:77">vc</name></decl></parameter>,

                                                           <parameter pos:start="3:60" pos:end="3:77"><decl pos:start="3:60" pos:end="3:77"><type pos:start="3:60" pos:end="3:77"><name pos:start="3:60" pos:end="3:73">vorbis_residue</name> <modifier pos:start="3:75" pos:end="3:75">*</modifier></type><name pos:start="3:76" pos:end="3:77">vr</name></decl></parameter>,

                                                           <parameter pos:start="5:60" pos:end="5:70"><decl pos:start="5:60" pos:end="5:70"><type pos:start="5:60" pos:end="5:70"><name pos:start="5:60" pos:end="5:67">unsigned</name></type> <name pos:start="5:69" pos:end="5:70">ch</name></decl></parameter>,

                                                           <parameter pos:start="7:60" pos:end="7:81"><decl pos:start="7:60" pos:end="7:81"><type pos:start="7:60" pos:end="7:81"><name pos:start="7:60" pos:end="7:66">uint8_t</name> <modifier pos:start="7:68" pos:end="7:68">*</modifier></type><name pos:start="7:69" pos:end="7:81">do_not_decode</name></decl></parameter>,

                                                           <parameter pos:start="9:60" pos:end="9:69"><decl pos:start="9:60" pos:end="9:69"><type pos:start="9:60" pos:end="9:69"><name pos:start="9:60" pos:end="9:64">float</name> <modifier pos:start="9:66" pos:end="9:66">*</modifier></type><name pos:start="9:67" pos:end="9:69">vec</name></decl></parameter>,

                                                           <parameter pos:start="11:60" pos:end="11:72"><decl pos:start="11:60" pos:end="11:72"><type pos:start="11:60" pos:end="11:72"><name pos:start="11:60" pos:end="11:67">unsigned</name></type> <name pos:start="11:69" pos:end="11:72">vlen</name></decl></parameter>,

                                                           <parameter pos:start="13:60" pos:end="13:75"><decl pos:start="13:60" pos:end="13:75"><type pos:start="13:60" pos:end="13:75"><name pos:start="13:60" pos:end="13:67">unsigned</name></type> <name pos:start="13:69" pos:end="13:75">ch_left</name></decl></parameter>,

                                                           <parameter pos:start="15:60" pos:end="15:70"><decl pos:start="15:60" pos:end="15:70"><type pos:start="15:60" pos:end="15:70"><name pos:start="15:60" pos:end="15:62">int</name></type> <name pos:start="15:64" pos:end="15:70">vr_type</name></decl></parameter>)</parameter_list>

<block pos:start="17:1" pos:end="279:1">{<block_content pos:start="19:5" pos:end="277:13">

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:31"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:17">GetBitContext</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:21">gb</name> <init pos:start="19:23" pos:end="19:31">= <expr pos:start="19:25" pos:end="19:31"><operator pos:start="19:25" pos:end="19:25">&amp;</operator><name pos:start="19:26" pos:end="19:31"><name pos:start="19:26" pos:end="19:27">vc</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:31">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:68"><decl pos:start="21:5" pos:end="21:67"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">unsigned</name></type> <name pos:start="21:14" pos:end="21:18">c_p_c</name>        <init pos:start="21:27" pos:end="21:67">= <expr pos:start="21:29" pos:end="21:67"><name pos:start="21:29" pos:end="21:56"><name pos:start="21:29" pos:end="21:30">vc</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:41">codebooks</name><index pos:start="21:42" pos:end="21:56">[<expr pos:start="21:43" pos:end="21:55"><name pos:start="21:43" pos:end="21:55"><name pos:start="21:43" pos:end="21:44">vr</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:55">classbook</name></name></expr>]</index></name><operator pos:start="21:57" pos:end="21:57">.</operator><name pos:start="21:58" pos:end="21:67">dimensions</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:37"><decl pos:start="23:5" pos:end="23:36"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">uint8_t</name> <modifier pos:start="23:13" pos:end="23:13">*</modifier></type><name pos:start="23:14" pos:end="23:21">classifs</name> <init pos:start="23:23" pos:end="23:36">= <expr pos:start="23:25" pos:end="23:36"><name pos:start="23:25" pos:end="23:36"><name pos:start="23:25" pos:end="23:26">vr</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:36">classifs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:39"><decl pos:start="25:5" pos:end="25:17"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">unsigned</name></type> <name pos:start="25:14" pos:end="25:17">pass</name></decl>, <decl pos:start="25:20" pos:end="25:26"><type ref="prev" pos:start="25:5" pos:end="25:12"/><name pos:start="25:20" pos:end="25:26">ch_used</name></decl>, <decl pos:start="25:29" pos:end="25:29"><type ref="prev" pos:start="25:5" pos:end="25:12"/><name pos:start="25:29" pos:end="25:29">i</name></decl>, <decl pos:start="25:32" pos:end="25:32"><type ref="prev" pos:start="25:5" pos:end="25:12"/><name pos:start="25:32" pos:end="25:32">j</name></decl>, <decl pos:start="25:35" pos:end="25:35"><type ref="prev" pos:start="25:5" pos:end="25:12"/><name pos:start="25:35" pos:end="25:35">k</name></decl>, <decl pos:start="25:38" pos:end="25:38"><type ref="prev" pos:start="25:5" pos:end="25:12"/><name pos:start="25:38" pos:end="25:38">l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:42"><decl pos:start="27:5" pos:end="27:41"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">unsigned</name></type> <name pos:start="27:14" pos:end="27:23">max_output</name> <init pos:start="27:25" pos:end="27:41">= <expr pos:start="27:27" pos:end="27:41"><operator pos:start="27:27" pos:end="27:27">(</operator><name pos:start="27:28" pos:end="27:29">ch</name> <operator pos:start="27:31" pos:end="27:31">-</operator> <literal type="number" pos:start="27:33" pos:end="27:33">1</literal><operator pos:start="27:34" pos:end="27:34">)</operator> <operator pos:start="27:36" pos:end="27:36">*</operator> <name pos:start="27:38" pos:end="27:41">vlen</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:40"><decl pos:start="29:5" pos:end="29:39"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:20">ptns_to_read</name> <init pos:start="29:22" pos:end="29:39">= <expr pos:start="29:24" pos:end="29:39"><name pos:start="29:24" pos:end="29:39"><name pos:start="29:24" pos:end="29:25">vr</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:39">ptns_to_read</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="33:5" pos:end="53:5"><if pos:start="33:5" pos:end="47:5">if <condition pos:start="33:8" pos:end="33:21">(<expr pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:15">vr_type</name> <operator pos:start="33:17" pos:end="33:18">==</operator> <literal type="number" pos:start="33:20" pos:end="33:20">2</literal></expr>)</condition> <block pos:start="33:23" pos:end="47:5">{<block_content pos:start="35:9" pos:end="45:35">

        <for pos:start="35:9" pos:end="37:49">for <control pos:start="35:13" pos:end="35:32">(<init pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">j</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">1</literal></expr>;</init> <condition pos:start="35:21" pos:end="35:27"><expr pos:start="35:21" pos:end="35:26"><name pos:start="35:21" pos:end="35:21">j</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <name pos:start="35:25" pos:end="35:26">ch</name></expr>;</condition> <incr pos:start="35:29" pos:end="35:31"><expr pos:start="35:29" pos:end="35:31"><operator pos:start="35:29" pos:end="35:30">++</operator><name pos:start="35:31" pos:end="35:31">j</name></expr></incr>)</control><block type="pseudo" pos:start="37:13" pos:end="37:49"><block_content pos:start="37:13" pos:end="37:49">

            <expr_stmt pos:start="37:13" pos:end="37:49"><expr pos:start="37:13" pos:end="37:48"><name pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:25">do_not_decode</name><index pos:start="37:26" pos:end="37:28">[<expr pos:start="37:27" pos:end="37:27"><literal type="number" pos:start="37:27" pos:end="37:27">0</literal></expr>]</index></name> <operator pos:start="37:30" pos:end="37:31">&amp;=</operator> <name pos:start="37:33" pos:end="37:48"><name pos:start="37:33" pos:end="37:45">do_not_decode</name><index pos:start="37:46" pos:end="37:48">[<expr pos:start="37:47" pos:end="37:47"><name pos:start="37:47" pos:end="37:47">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>  <comment type="line" pos:start="37:52" pos:end="37:78">// FIXME - clobbering input</comment>

        <if_stmt pos:start="39:9" pos:end="41:21"><if pos:start="39:9" pos:end="41:21">if <condition pos:start="39:12" pos:end="39:29">(<expr pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:25">do_not_decode</name><index pos:start="39:26" pos:end="39:28">[<expr pos:start="39:27" pos:end="39:27"><literal type="number" pos:start="39:27" pos:end="39:27">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:21"><block_content pos:start="41:13" pos:end="41:21">

            <return pos:start="41:13" pos:end="41:21">return <expr pos:start="41:20" pos:end="41:20"><literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:20"><expr pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:15">ch_used</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <literal type="number" pos:start="43:19" pos:end="43:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:18">max_output</name> <operator pos:start="45:20" pos:end="45:21">+=</operator> <name pos:start="45:23" pos:end="45:29"><name pos:start="45:23" pos:end="45:24">vr</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:29">end</name></name> <operator pos:start="45:31" pos:end="45:31">/</operator> <name pos:start="45:33" pos:end="45:34">ch</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="53:5">else <block pos:start="47:12" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:30">

        <expr_stmt pos:start="49:9" pos:end="49:21"><expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:15">ch_used</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:20">ch</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:30"><expr pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:18">max_output</name> <operator pos:start="51:20" pos:end="51:21">+=</operator> <name pos:start="51:23" pos:end="51:29"><name pos:start="51:23" pos:end="51:24">vr</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:29">end</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:36">(<expr pos:start="57:9" pos:end="57:35"><name pos:start="57:9" pos:end="57:18">max_output</name> <operator pos:start="57:20" pos:end="57:20">&gt;</operator> <name pos:start="57:22" pos:end="57:28">ch_left</name> <operator pos:start="57:30" pos:end="57:30">*</operator> <name pos:start="57:32" pos:end="57:35">vlen</name></expr>)</condition> <block pos:start="57:38" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:35">

        <expr_stmt pos:start="59:9" pos:end="59:72"><expr pos:start="59:9" pos:end="59:71"><call pos:start="59:9" pos:end="59:71"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="59:71">(<argument pos:start="59:16" pos:end="59:24"><expr pos:start="59:16" pos:end="59:24"><name pos:start="59:16" pos:end="59:24"><name pos:start="59:16" pos:end="59:17">vc</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:24">avctx</name></name></expr></argument>, <argument pos:start="59:27" pos:end="59:38"><expr pos:start="59:27" pos:end="59:38"><name pos:start="59:27" pos:end="59:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:41" pos:end="59:70"><expr pos:start="59:41" pos:end="59:70"><literal type="string" pos:start="59:41" pos:end="59:70">"Insufficient output buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:35">return <expr pos:start="61:16" pos:end="61:34"><name pos:start="61:16" pos:end="61:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:85"><expr pos:start="67:5" pos:end="67:84"><call pos:start="67:5" pos:end="67:84"><name pos:start="67:5" pos:end="67:11">av_dlog</name><argument_list pos:start="67:12" pos:end="67:84">(<argument pos:start="67:13" pos:end="67:16"><expr pos:start="67:13" pos:end="67:16"><name pos:start="67:13" pos:end="67:16">NULL</name></expr></argument>, <argument pos:start="67:19" pos:end="67:72"><expr pos:start="67:19" pos:end="67:72"><literal type="string" pos:start="67:19" pos:end="67:72">" residue type 0/1/2 decode begin, ch: %d  cpc %d  \n"</literal></expr></argument>, <argument pos:start="67:75" pos:end="67:76"><expr pos:start="67:75" pos:end="67:76"><name pos:start="67:75" pos:end="67:76">ch</name></expr></argument>, <argument pos:start="67:79" pos:end="67:83"><expr pos:start="67:79" pos:end="67:83"><name pos:start="67:79" pos:end="67:83">c_p_c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="71:5" pos:end="275:5">for <control pos:start="71:9" pos:end="71:47">(<init pos:start="71:10" pos:end="71:18"><expr pos:start="71:10" pos:end="71:17"><name pos:start="71:10" pos:end="71:13">pass</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <literal type="number" pos:start="71:17" pos:end="71:17">0</literal></expr>;</init> <condition pos:start="71:20" pos:end="71:39"><expr pos:start="71:20" pos:end="71:38"><name pos:start="71:20" pos:end="71:23">pass</name> <operator pos:start="71:25" pos:end="71:26">&lt;=</operator> <name pos:start="71:28" pos:end="71:38"><name pos:start="71:28" pos:end="71:29">vr</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:38">maxpass</name></name></expr>;</condition> <incr pos:start="71:41" pos:end="71:46"><expr pos:start="71:41" pos:end="71:46"><operator pos:start="71:41" pos:end="71:42">++</operator><name pos:start="71:43" pos:end="71:46">pass</name></expr></incr>)</control> <block pos:start="71:49" pos:end="275:5">{<block_content pos:start="73:9" pos:end="273:9"> <comment type="line" pos:start="71:51" pos:end="71:68">// FIXME OPTIMIZE?</comment>

        <decl_stmt pos:start="73:9" pos:end="73:59"><decl pos:start="73:9" pos:end="73:19"><type pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">int</name></type> <name pos:start="73:13" pos:end="73:19">voffset</name></decl>, <decl pos:start="73:22" pos:end="73:36"><type ref="prev" pos:start="73:9" pos:end="73:11"/><name pos:start="73:22" pos:end="73:36">partition_count</name></decl>, <decl pos:start="73:39" pos:end="73:58"><type ref="prev" pos:start="73:9" pos:end="73:11"/><name pos:start="73:39" pos:end="73:58">j_times_ptns_to_read</name></decl>;</decl_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:15">voffset</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <name pos:start="77:19" pos:end="77:27"><name pos:start="77:19" pos:end="77:20">vr</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:27">begin</name></name></expr>;</expr_stmt>

        <for pos:start="79:9" pos:end="273:9">for <control pos:start="79:13" pos:end="79:66">(<init pos:start="79:14" pos:end="79:33"><expr pos:start="79:14" pos:end="79:32"><name pos:start="79:14" pos:end="79:28">partition_count</name> <operator pos:start="79:30" pos:end="79:30">=</operator> <literal type="number" pos:start="79:32" pos:end="79:32">0</literal></expr>;</init> <condition pos:start="79:35" pos:end="79:65"><expr pos:start="79:35" pos:end="79:64"><name pos:start="79:35" pos:end="79:49">partition_count</name> <operator pos:start="79:51" pos:end="79:51">&lt;</operator> <name pos:start="79:53" pos:end="79:64">ptns_to_read</name></expr>;</condition><incr/>)</control> <block pos:start="79:68" pos:end="273:9">{<block_content pos:start="81:13" pos:end="271:13">  <comment type="line" pos:start="79:71" pos:end="79:90">// SPEC        error</comment>

            <if_stmt pos:start="81:13" pos:end="85:13"><if pos:start="81:13" pos:end="85:13">if <condition pos:start="81:16" pos:end="81:22">(<expr pos:start="81:17" pos:end="81:21"><operator pos:start="81:17" pos:end="81:17">!</operator><name pos:start="81:18" pos:end="81:21">pass</name></expr>)</condition> <block pos:start="81:24" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:80">

                <expr_stmt pos:start="83:17" pos:end="83:80"><expr pos:start="83:17" pos:end="83:79"><call pos:start="83:17" pos:end="83:79"><name pos:start="83:17" pos:end="83:30">setup_classifs</name><argument_list pos:start="83:31" pos:end="83:79">(<argument pos:start="83:32" pos:end="83:33"><expr pos:start="83:32" pos:end="83:33"><name pos:start="83:32" pos:end="83:33">vc</name></expr></argument>, <argument pos:start="83:36" pos:end="83:37"><expr pos:start="83:36" pos:end="83:37"><name pos:start="83:36" pos:end="83:37">vr</name></expr></argument>, <argument pos:start="83:40" pos:end="83:52"><expr pos:start="83:40" pos:end="83:52"><name pos:start="83:40" pos:end="83:52">do_not_decode</name></expr></argument>, <argument pos:start="83:55" pos:end="83:61"><expr pos:start="83:55" pos:end="83:61"><name pos:start="83:55" pos:end="83:61">ch_used</name></expr></argument>, <argument pos:start="83:64" pos:end="83:78"><expr pos:start="83:64" pos:end="83:78"><name pos:start="83:64" pos:end="83:78">partition_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <for pos:start="87:13" pos:end="271:13">for <control pos:start="87:17" pos:end="87:77">(<init pos:start="87:18" pos:end="87:23"><expr pos:start="87:18" pos:end="87:22"><name pos:start="87:18" pos:end="87:18">i</name> <operator pos:start="87:20" pos:end="87:20">=</operator> <literal type="number" pos:start="87:22" pos:end="87:22">0</literal></expr>;</init> <condition pos:start="87:25" pos:end="87:72"><expr pos:start="87:25" pos:end="87:71"><operator pos:start="87:25" pos:end="87:25">(</operator><name pos:start="87:26" pos:end="87:26">i</name> <operator pos:start="87:28" pos:end="87:28">&lt;</operator> <name pos:start="87:30" pos:end="87:34">c_p_c</name><operator pos:start="87:35" pos:end="87:35">)</operator> <operator pos:start="87:37" pos:end="87:38">&amp;&amp;</operator> <operator pos:start="87:40" pos:end="87:40">(</operator><name pos:start="87:41" pos:end="87:55">partition_count</name> <operator pos:start="87:57" pos:end="87:57">&lt;</operator> <name pos:start="87:59" pos:end="87:70">ptns_to_read</name><operator pos:start="87:71" pos:end="87:71">)</operator></expr>;</condition> <incr pos:start="87:74" pos:end="87:76"><expr pos:start="87:74" pos:end="87:76"><operator pos:start="87:74" pos:end="87:75">++</operator><name pos:start="87:76" pos:end="87:76">i</name></expr></incr>)</control> <block pos:start="87:79" pos:end="271:13">{<block_content pos:start="89:17" pos:end="269:46">

                <for pos:start="89:17" pos:end="265:17">for <control pos:start="89:21" pos:end="89:71">(<init pos:start="89:22" pos:end="89:53"><expr pos:start="89:22" pos:end="89:45"><name pos:start="89:22" pos:end="89:41">j_times_ptns_to_read</name> <operator pos:start="89:43" pos:end="89:43">=</operator> <literal type="number" pos:start="89:45" pos:end="89:45">0</literal></expr><operator pos:start="89:46" pos:end="89:46">,</operator> <expr pos:start="89:48" pos:end="89:52"><name pos:start="89:48" pos:end="89:48">j</name> <operator pos:start="89:50" pos:end="89:50">=</operator> <literal type="number" pos:start="89:52" pos:end="89:52">0</literal></expr>;</init> <condition pos:start="89:55" pos:end="89:66"><expr pos:start="89:55" pos:end="89:65"><name pos:start="89:55" pos:end="89:55">j</name> <operator pos:start="89:57" pos:end="89:57">&lt;</operator> <name pos:start="89:59" pos:end="89:65">ch_used</name></expr>;</condition> <incr pos:start="89:68" pos:end="89:70"><expr pos:start="89:68" pos:end="89:70"><operator pos:start="89:68" pos:end="89:69">++</operator><name pos:start="89:70" pos:end="89:70">j</name></expr></incr>)</control> <block pos:start="89:73" pos:end="265:17">{<block_content pos:start="91:21" pos:end="263:57">

                    <decl_stmt pos:start="91:21" pos:end="91:35"><decl pos:start="91:21" pos:end="91:34"><type pos:start="91:21" pos:end="91:28"><name pos:start="91:21" pos:end="91:28">unsigned</name></type> <name pos:start="91:30" pos:end="91:34">voffs</name></decl>;</decl_stmt>



                    <if_stmt pos:start="95:21" pos:end="261:21"><if pos:start="95:21" pos:end="261:21">if <condition pos:start="95:24" pos:end="95:42">(<expr pos:start="95:25" pos:end="95:41"><operator pos:start="95:25" pos:end="95:25">!</operator><name pos:start="95:26" pos:end="95:41"><name pos:start="95:26" pos:end="95:38">do_not_decode</name><index pos:start="95:39" pos:end="95:41">[<expr pos:start="95:40" pos:end="95:40"><name pos:start="95:40" pos:end="95:40">j</name></expr>]</index></name></expr>)</condition> <block pos:start="95:44" pos:end="261:21">{<block_content pos:start="97:25" pos:end="259:25">

                        <decl_stmt pos:start="97:25" pos:end="97:92"><decl pos:start="97:25" pos:end="97:91"><type pos:start="97:25" pos:end="97:32"><name pos:start="97:25" pos:end="97:32">unsigned</name></type> <name pos:start="97:34" pos:end="97:40">vqclass</name> <init pos:start="97:42" pos:end="97:91">= <expr pos:start="97:44" pos:end="97:91"><name pos:start="97:44" pos:end="97:91"><name pos:start="97:44" pos:end="97:51">classifs</name><index pos:start="97:52" pos:end="97:91">[<expr pos:start="97:53" pos:end="97:90"><name pos:start="97:53" pos:end="97:72">j_times_ptns_to_read</name> <operator pos:start="97:74" pos:end="97:74">+</operator> <name pos:start="97:76" pos:end="97:90">partition_count</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="99:25" pos:end="99:63"><decl pos:start="99:25" pos:end="99:62"><type pos:start="99:25" pos:end="99:27"><name pos:start="99:25" pos:end="99:27">int</name></type> <name pos:start="99:29" pos:end="99:34">vqbook</name>  <init pos:start="99:37" pos:end="99:62">= <expr pos:start="99:39" pos:end="99:62"><name pos:start="99:39" pos:end="99:62"><name pos:start="99:39" pos:end="99:40">vr</name><operator pos:start="99:41" pos:end="99:42">-&gt;</operator><name pos:start="99:43" pos:end="99:47">books</name><index pos:start="99:48" pos:end="99:56">[<expr pos:start="99:49" pos:end="99:55"><name pos:start="99:49" pos:end="99:55">vqclass</name></expr>]</index><index pos:start="99:57" pos:end="99:62">[<expr pos:start="99:58" pos:end="99:61"><name pos:start="99:58" pos:end="99:61">pass</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                        <if_stmt pos:start="103:25" pos:end="259:25"><if pos:start="103:25" pos:end="259:25">if <condition pos:start="103:28" pos:end="103:77">(<expr pos:start="103:29" pos:end="103:76"><name pos:start="103:29" pos:end="103:34">vqbook</name> <operator pos:start="103:36" pos:end="103:37">&gt;=</operator> <literal type="number" pos:start="103:39" pos:end="103:39">0</literal> <operator pos:start="103:41" pos:end="103:42">&amp;&amp;</operator> <name pos:start="103:44" pos:end="103:64"><name pos:start="103:44" pos:end="103:45">vc</name><operator pos:start="103:46" pos:end="103:47">-&gt;</operator><name pos:start="103:48" pos:end="103:56">codebooks</name><index pos:start="103:57" pos:end="103:64">[<expr pos:start="103:58" pos:end="103:63"><name pos:start="103:58" pos:end="103:63">vqbook</name></expr>]</index></name><operator pos:start="103:65" pos:end="103:65">.</operator><name pos:start="103:66" pos:end="103:76">codevectors</name></expr>)</condition> <block pos:start="103:79" pos:end="259:25">{<block_content pos:start="105:29" pos:end="257:29">

                            <decl_stmt pos:start="105:29" pos:end="105:43"><decl pos:start="105:29" pos:end="105:42"><type pos:start="105:29" pos:end="105:36"><name pos:start="105:29" pos:end="105:36">unsigned</name></type> <name pos:start="105:38" pos:end="105:42">coffs</name></decl>;</decl_stmt>

                            <decl_stmt pos:start="107:29" pos:end="107:77"><decl pos:start="107:29" pos:end="107:76"><type pos:start="107:29" pos:end="107:36"><name pos:start="107:29" pos:end="107:36">unsigned</name></type> <name pos:start="107:38" pos:end="107:40">dim</name>  <init pos:start="107:43" pos:end="107:76">= <expr pos:start="107:45" pos:end="107:76"><name pos:start="107:45" pos:end="107:65"><name pos:start="107:45" pos:end="107:46">vc</name><operator pos:start="107:47" pos:end="107:48">-&gt;</operator><name pos:start="107:49" pos:end="107:57">codebooks</name><index pos:start="107:58" pos:end="107:65">[<expr pos:start="107:59" pos:end="107:64"><name pos:start="107:59" pos:end="107:64">vqbook</name></expr>]</index></name><operator pos:start="107:66" pos:end="107:66">.</operator><name pos:start="107:67" pos:end="107:76">dimensions</name></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="109:29" pos:end="109:87"><decl pos:start="109:29" pos:end="109:86"><type pos:start="109:29" pos:end="109:36"><name pos:start="109:29" pos:end="109:36">unsigned</name></type> <name pos:start="109:38" pos:end="109:41">step</name> <init pos:start="109:43" pos:end="109:86">= <expr pos:start="109:45" pos:end="109:86"><call pos:start="109:45" pos:end="109:86"><name pos:start="109:45" pos:end="109:51">FASTDIV</name><argument_list pos:start="109:52" pos:end="109:86">(<argument pos:start="109:53" pos:end="109:75"><expr pos:start="109:53" pos:end="109:75"><name pos:start="109:53" pos:end="109:70"><name pos:start="109:53" pos:end="109:54">vr</name><operator pos:start="109:55" pos:end="109:56">-&gt;</operator><name pos:start="109:57" pos:end="109:70">partition_size</name></name> <operator pos:start="109:72" pos:end="109:73">&lt;&lt;</operator> <literal type="number" pos:start="109:75" pos:end="109:75">1</literal></expr></argument>, <argument pos:start="109:78" pos:end="109:85"><expr pos:start="109:78" pos:end="109:85"><name pos:start="109:78" pos:end="109:80">dim</name> <operator pos:start="109:82" pos:end="109:83">&lt;&lt;</operator> <literal type="number" pos:start="109:85" pos:end="109:85">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="111:29" pos:end="111:77"><decl pos:start="111:29" pos:end="111:76"><type pos:start="111:29" pos:end="111:43"><name pos:start="111:29" pos:end="111:43">vorbis_codebook</name></type> <name pos:start="111:45" pos:end="111:52">codebook</name> <init pos:start="111:54" pos:end="111:76">= <expr pos:start="111:56" pos:end="111:76"><name pos:start="111:56" pos:end="111:76"><name pos:start="111:56" pos:end="111:57">vc</name><operator pos:start="111:58" pos:end="111:59">-&gt;</operator><name pos:start="111:60" pos:end="111:68">codebooks</name><index pos:start="111:69" pos:end="111:76">[<expr pos:start="111:70" pos:end="111:75"><name pos:start="111:70" pos:end="111:75">vqbook</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                            <if_stmt pos:start="115:29" pos:end="257:29"><if pos:start="115:29" pos:end="131:29">if <condition pos:start="115:32" pos:end="115:45">(<expr pos:start="115:33" pos:end="115:44"><name pos:start="115:33" pos:end="115:39">vr_type</name> <operator pos:start="115:41" pos:end="115:42">==</operator> <literal type="number" pos:start="115:44" pos:end="115:44">0</literal></expr>)</condition> <block pos:start="115:47" pos:end="131:29">{<block_content pos:start="119:33" pos:end="129:33">



                                <expr_stmt pos:start="119:33" pos:end="119:55"><expr pos:start="119:33" pos:end="119:54"><name pos:start="119:33" pos:end="119:37">voffs</name> <operator pos:start="119:39" pos:end="119:39">=</operator> <name pos:start="119:41" pos:end="119:47">voffset</name><operator pos:start="119:48" pos:end="119:48">+</operator><name pos:start="119:49" pos:end="119:49">j</name><operator pos:start="119:50" pos:end="119:50">*</operator><name pos:start="119:51" pos:end="119:54">vlen</name></expr>;</expr_stmt>

                                <for pos:start="121:33" pos:end="129:33">for <control pos:start="121:37" pos:end="121:58">(<init pos:start="121:38" pos:end="121:43"><expr pos:start="121:38" pos:end="121:42"><name pos:start="121:38" pos:end="121:38">k</name> <operator pos:start="121:40" pos:end="121:40">=</operator> <literal type="number" pos:start="121:42" pos:end="121:42">0</literal></expr>;</init> <condition pos:start="121:45" pos:end="121:53"><expr pos:start="121:45" pos:end="121:52"><name pos:start="121:45" pos:end="121:45">k</name> <operator pos:start="121:47" pos:end="121:47">&lt;</operator> <name pos:start="121:49" pos:end="121:52">step</name></expr>;</condition> <incr pos:start="121:55" pos:end="121:57"><expr pos:start="121:55" pos:end="121:57"><operator pos:start="121:55" pos:end="121:56">++</operator><name pos:start="121:57" pos:end="121:57">k</name></expr></incr>)</control> <block pos:start="121:60" pos:end="129:33">{<block_content pos:start="123:37" pos:end="127:101">

                                    <expr_stmt pos:start="123:37" pos:end="123:104"><expr pos:start="123:37" pos:end="123:103"><name pos:start="123:37" pos:end="123:41">coffs</name> <operator pos:start="123:43" pos:end="123:43">=</operator> <call pos:start="123:45" pos:end="123:97"><name pos:start="123:45" pos:end="123:52">get_vlc2</name><argument_list pos:start="123:53" pos:end="123:97">(<argument pos:start="123:54" pos:end="123:55"><expr pos:start="123:54" pos:end="123:55"><name pos:start="123:54" pos:end="123:55">gb</name></expr></argument>, <argument pos:start="123:58" pos:end="123:75"><expr pos:start="123:58" pos:end="123:75"><name pos:start="123:58" pos:end="123:75"><name pos:start="123:58" pos:end="123:65">codebook</name><operator pos:start="123:66" pos:end="123:66">.</operator><name pos:start="123:67" pos:end="123:69">vlc</name><operator pos:start="123:70" pos:end="123:70">.</operator><name pos:start="123:71" pos:end="123:75">table</name></name></expr></argument>, <argument pos:start="123:78" pos:end="123:93"><expr pos:start="123:78" pos:end="123:93"><name pos:start="123:78" pos:end="123:93"><name pos:start="123:78" pos:end="123:85">codebook</name><operator pos:start="123:86" pos:end="123:86">.</operator><name pos:start="123:87" pos:end="123:93">nb_bits</name></name></expr></argument>, <argument pos:start="123:96" pos:end="123:96"><expr pos:start="123:96" pos:end="123:96"><literal type="number" pos:start="123:96" pos:end="123:96">3</literal></expr></argument>)</argument_list></call> <operator pos:start="123:99" pos:end="123:99">*</operator> <name pos:start="123:101" pos:end="123:103">dim</name></expr>;</expr_stmt>

                                    <for pos:start="125:37" pos:end="127:101">for <control pos:start="125:41" pos:end="125:61">(<init pos:start="125:42" pos:end="125:47"><expr pos:start="125:42" pos:end="125:46"><name pos:start="125:42" pos:end="125:42">l</name> <operator pos:start="125:44" pos:end="125:44">=</operator> <literal type="number" pos:start="125:46" pos:end="125:46">0</literal></expr>;</init> <condition pos:start="125:49" pos:end="125:56"><expr pos:start="125:49" pos:end="125:55"><name pos:start="125:49" pos:end="125:49">l</name> <operator pos:start="125:51" pos:end="125:51">&lt;</operator> <name pos:start="125:53" pos:end="125:55">dim</name></expr>;</condition> <incr pos:start="125:58" pos:end="125:60"><expr pos:start="125:58" pos:end="125:60"><operator pos:start="125:58" pos:end="125:59">++</operator><name pos:start="125:60" pos:end="125:60">l</name></expr></incr>)</control><block type="pseudo" pos:start="127:41" pos:end="127:101"><block_content pos:start="127:41" pos:end="127:101">

                                        <expr_stmt pos:start="127:41" pos:end="127:101"><expr pos:start="127:41" pos:end="127:100"><name pos:start="127:41" pos:end="127:65"><name pos:start="127:41" pos:end="127:43">vec</name><index pos:start="127:44" pos:end="127:65">[<expr pos:start="127:45" pos:end="127:64"><name pos:start="127:45" pos:end="127:49">voffs</name> <operator pos:start="127:51" pos:end="127:51">+</operator> <name pos:start="127:53" pos:end="127:53">k</name> <operator pos:start="127:55" pos:end="127:55">+</operator> <name pos:start="127:57" pos:end="127:57">l</name> <operator pos:start="127:59" pos:end="127:59">*</operator> <name pos:start="127:61" pos:end="127:64">step</name></expr>]</index></name> <operator pos:start="127:67" pos:end="127:68">+=</operator> <name pos:start="127:70" pos:end="127:100"><name pos:start="127:70" pos:end="127:77">codebook</name><operator pos:start="127:78" pos:end="127:78">.</operator><name pos:start="127:79" pos:end="127:89">codevectors</name><index pos:start="127:90" pos:end="127:100">[<expr pos:start="127:91" pos:end="127:99"><name pos:start="127:91" pos:end="127:95">coffs</name> <operator pos:start="127:97" pos:end="127:97">+</operator> <name pos:start="127:99" pos:end="127:99">l</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                                </block_content>}</block></for>

                            </block_content>}</block></if> <if type="elseif" pos:start="131:31" pos:end="153:29">else if <condition pos:start="131:39" pos:end="131:52">(<expr pos:start="131:40" pos:end="131:51"><name pos:start="131:40" pos:end="131:46">vr_type</name> <operator pos:start="131:48" pos:end="131:49">==</operator> <literal type="number" pos:start="131:51" pos:end="131:51">1</literal></expr>)</condition> <block pos:start="131:54" pos:end="153:29">{<block_content pos:start="133:33" pos:end="151:33">

                                <expr_stmt pos:start="133:33" pos:end="133:59"><expr pos:start="133:33" pos:end="133:58"><name pos:start="133:33" pos:end="133:37">voffs</name> <operator pos:start="133:39" pos:end="133:39">=</operator> <name pos:start="133:41" pos:end="133:47">voffset</name> <operator pos:start="133:49" pos:end="133:49">+</operator> <name pos:start="133:51" pos:end="133:51">j</name> <operator pos:start="133:53" pos:end="133:53">*</operator> <name pos:start="133:55" pos:end="133:58">vlen</name></expr>;</expr_stmt>

                                <for pos:start="135:33" pos:end="151:33">for <control pos:start="135:37" pos:end="135:58">(<init pos:start="135:38" pos:end="135:43"><expr pos:start="135:38" pos:end="135:42"><name pos:start="135:38" pos:end="135:38">k</name> <operator pos:start="135:40" pos:end="135:40">=</operator> <literal type="number" pos:start="135:42" pos:end="135:42">0</literal></expr>;</init> <condition pos:start="135:45" pos:end="135:53"><expr pos:start="135:45" pos:end="135:52"><name pos:start="135:45" pos:end="135:45">k</name> <operator pos:start="135:47" pos:end="135:47">&lt;</operator> <name pos:start="135:49" pos:end="135:52">step</name></expr>;</condition> <incr pos:start="135:55" pos:end="135:57"><expr pos:start="135:55" pos:end="135:57"><operator pos:start="135:55" pos:end="135:56">++</operator><name pos:start="135:57" pos:end="135:57">k</name></expr></incr>)</control> <block pos:start="135:60" pos:end="151:33">{<block_content pos:start="137:37" pos:end="149:37">

                                    <expr_stmt pos:start="137:37" pos:end="137:104"><expr pos:start="137:37" pos:end="137:103"><name pos:start="137:37" pos:end="137:41">coffs</name> <operator pos:start="137:43" pos:end="137:43">=</operator> <call pos:start="137:45" pos:end="137:97"><name pos:start="137:45" pos:end="137:52">get_vlc2</name><argument_list pos:start="137:53" pos:end="137:97">(<argument pos:start="137:54" pos:end="137:55"><expr pos:start="137:54" pos:end="137:55"><name pos:start="137:54" pos:end="137:55">gb</name></expr></argument>, <argument pos:start="137:58" pos:end="137:75"><expr pos:start="137:58" pos:end="137:75"><name pos:start="137:58" pos:end="137:75"><name pos:start="137:58" pos:end="137:65">codebook</name><operator pos:start="137:66" pos:end="137:66">.</operator><name pos:start="137:67" pos:end="137:69">vlc</name><operator pos:start="137:70" pos:end="137:70">.</operator><name pos:start="137:71" pos:end="137:75">table</name></name></expr></argument>, <argument pos:start="137:78" pos:end="137:93"><expr pos:start="137:78" pos:end="137:93"><name pos:start="137:78" pos:end="137:93"><name pos:start="137:78" pos:end="137:85">codebook</name><operator pos:start="137:86" pos:end="137:86">.</operator><name pos:start="137:87" pos:end="137:93">nb_bits</name></name></expr></argument>, <argument pos:start="137:96" pos:end="137:96"><expr pos:start="137:96" pos:end="137:96"><literal type="number" pos:start="137:96" pos:end="137:96">3</literal></expr></argument>)</argument_list></call> <operator pos:start="137:99" pos:end="137:99">*</operator> <name pos:start="137:101" pos:end="137:103">dim</name></expr>;</expr_stmt>

                                    <for pos:start="139:37" pos:end="149:37">for <control pos:start="139:41" pos:end="139:70">(<init pos:start="139:42" pos:end="139:47"><expr pos:start="139:42" pos:end="139:46"><name pos:start="139:42" pos:end="139:42">l</name> <operator pos:start="139:44" pos:end="139:44">=</operator> <literal type="number" pos:start="139:46" pos:end="139:46">0</literal></expr>;</init> <condition pos:start="139:49" pos:end="139:56"><expr pos:start="139:49" pos:end="139:55"><name pos:start="139:49" pos:end="139:49">l</name> <operator pos:start="139:51" pos:end="139:51">&lt;</operator> <name pos:start="139:53" pos:end="139:55">dim</name></expr>;</condition> <incr pos:start="139:58" pos:end="139:69"><expr pos:start="139:58" pos:end="139:60"><operator pos:start="139:58" pos:end="139:59">++</operator><name pos:start="139:60" pos:end="139:60">l</name></expr><operator pos:start="139:61" pos:end="139:61">,</operator> <expr pos:start="139:63" pos:end="139:69"><operator pos:start="139:63" pos:end="139:64">++</operator><name pos:start="139:65" pos:end="139:69">voffs</name></expr></incr>)</control> <block pos:start="139:72" pos:end="149:37">{<block_content pos:start="141:41" pos:end="147:111">

                                        <expr_stmt pos:start="141:41" pos:end="141:82"><expr pos:start="141:41" pos:end="141:81"><name pos:start="141:41" pos:end="141:50"><name pos:start="141:41" pos:end="141:43">vec</name><index pos:start="141:44" pos:end="141:50">[<expr pos:start="141:45" pos:end="141:49"><name pos:start="141:45" pos:end="141:49">voffs</name></expr>]</index></name><operator pos:start="141:51" pos:end="141:52">+=</operator><name pos:start="141:53" pos:end="141:81"><name pos:start="141:53" pos:end="141:60">codebook</name><operator pos:start="141:61" pos:end="141:61">.</operator><name pos:start="141:62" pos:end="141:72">codevectors</name><index pos:start="141:73" pos:end="141:81">[<expr pos:start="141:74" pos:end="141:80"><name pos:start="141:74" pos:end="141:78">coffs</name><operator pos:start="141:79" pos:end="141:79">+</operator><name pos:start="141:80" pos:end="141:80">l</name></expr>]</index></name></expr>;</expr_stmt>



                                        <expr_stmt pos:start="145:41" pos:end="147:111"><expr pos:start="145:41" pos:end="147:110"><call pos:start="145:41" pos:end="147:110"><name pos:start="145:41" pos:end="145:47">av_dlog</name><argument_list pos:start="145:48" pos:end="147:110">(<argument pos:start="145:49" pos:end="145:52"><expr pos:start="145:49" pos:end="145:52"><name pos:start="145:49" pos:end="145:52">NULL</name></expr></argument>, <argument pos:start="145:55" pos:end="145:110"><expr pos:start="145:55" pos:end="145:110"><literal type="string" pos:start="145:55" pos:end="145:110">" pass %d offs: %d curr: %f change: %f cv offs.: %d  \n"</literal></expr></argument>,

                                                <argument pos:start="147:49" pos:end="147:52"><expr pos:start="147:49" pos:end="147:52"><name pos:start="147:49" pos:end="147:52">pass</name></expr></argument>, <argument pos:start="147:55" pos:end="147:59"><expr pos:start="147:55" pos:end="147:59"><name pos:start="147:55" pos:end="147:59">voffs</name></expr></argument>, <argument pos:start="147:62" pos:end="147:71"><expr pos:start="147:62" pos:end="147:71"><name pos:start="147:62" pos:end="147:71"><name pos:start="147:62" pos:end="147:64">vec</name><index pos:start="147:65" pos:end="147:71">[<expr pos:start="147:66" pos:end="147:70"><name pos:start="147:66" pos:end="147:70">voffs</name></expr>]</index></name></expr></argument>, <argument pos:start="147:74" pos:end="147:102"><expr pos:start="147:74" pos:end="147:102"><name pos:start="147:74" pos:end="147:102"><name pos:start="147:74" pos:end="147:81">codebook</name><operator pos:start="147:82" pos:end="147:82">.</operator><name pos:start="147:83" pos:end="147:93">codevectors</name><index pos:start="147:94" pos:end="147:102">[<expr pos:start="147:95" pos:end="147:101"><name pos:start="147:95" pos:end="147:99">coffs</name><operator pos:start="147:100" pos:end="147:100">+</operator><name pos:start="147:101" pos:end="147:101">l</name></expr>]</index></name></expr></argument>, <argument pos:start="147:105" pos:end="147:109"><expr pos:start="147:105" pos:end="147:109"><name pos:start="147:105" pos:end="147:109">coffs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    </block_content>}</block></for>

                                </block_content>}</block></for>

                            </block_content>}</block></if> <if type="elseif" pos:start="153:31" pos:end="215:29">else if <condition pos:start="153:39" pos:end="153:103">(<expr pos:start="153:40" pos:end="153:102"><name pos:start="153:40" pos:end="153:46">vr_type</name> <operator pos:start="153:48" pos:end="153:49">==</operator> <literal type="number" pos:start="153:51" pos:end="153:51">2</literal> <operator pos:start="153:53" pos:end="153:54">&amp;&amp;</operator> <name pos:start="153:56" pos:end="153:57">ch</name> <operator pos:start="153:59" pos:end="153:60">==</operator> <literal type="number" pos:start="153:62" pos:end="153:62">2</literal> <operator pos:start="153:64" pos:end="153:65">&amp;&amp;</operator> <operator pos:start="153:67" pos:end="153:67">(</operator><name pos:start="153:68" pos:end="153:74">voffset</name> <operator pos:start="153:76" pos:end="153:76">&amp;</operator> <literal type="number" pos:start="153:78" pos:end="153:78">1</literal><operator pos:start="153:79" pos:end="153:79">)</operator> <operator pos:start="153:81" pos:end="153:82">==</operator> <literal type="number" pos:start="153:84" pos:end="153:84">0</literal> <operator pos:start="153:86" pos:end="153:87">&amp;&amp;</operator> <operator pos:start="153:89" pos:end="153:89">(</operator><name pos:start="153:90" pos:end="153:92">dim</name> <operator pos:start="153:94" pos:end="153:94">&amp;</operator> <literal type="number" pos:start="153:96" pos:end="153:96">1</literal><operator pos:start="153:97" pos:end="153:97">)</operator> <operator pos:start="153:99" pos:end="153:100">==</operator> <literal type="number" pos:start="153:102" pos:end="153:102">0</literal></expr>)</condition> <block pos:start="153:105" pos:end="215:29">{<block_content pos:start="155:33" pos:end="211:33"> <comment type="line" pos:start="153:107" pos:end="153:137">// most frequent case optimized</comment>

                                <expr_stmt pos:start="155:33" pos:end="155:53"><expr pos:start="155:33" pos:end="155:52"><name pos:start="155:33" pos:end="155:37">voffs</name> <operator pos:start="155:39" pos:end="155:39">=</operator> <name pos:start="155:41" pos:end="155:47">voffset</name> <operator pos:start="155:49" pos:end="155:50">&gt;&gt;</operator> <literal type="number" pos:start="155:52" pos:end="155:52">1</literal></expr>;</expr_stmt>



                                <if_stmt pos:start="159:33" pos:end="211:33"><if pos:start="159:33" pos:end="171:33">if <condition pos:start="159:36" pos:end="159:45">(<expr pos:start="159:37" pos:end="159:44"><name pos:start="159:37" pos:end="159:39">dim</name> <operator pos:start="159:41" pos:end="159:42">==</operator> <literal type="number" pos:start="159:44" pos:end="159:44">2</literal></expr>)</condition> <block pos:start="159:47" pos:end="171:33">{<block_content pos:start="161:37" pos:end="169:37">

                                    <for pos:start="161:37" pos:end="169:37">for <control pos:start="161:41" pos:end="161:62">(<init pos:start="161:42" pos:end="161:47"><expr pos:start="161:42" pos:end="161:46"><name pos:start="161:42" pos:end="161:42">k</name> <operator pos:start="161:44" pos:end="161:44">=</operator> <literal type="number" pos:start="161:46" pos:end="161:46">0</literal></expr>;</init> <condition pos:start="161:49" pos:end="161:57"><expr pos:start="161:49" pos:end="161:56"><name pos:start="161:49" pos:end="161:49">k</name> <operator pos:start="161:51" pos:end="161:51">&lt;</operator> <name pos:start="161:53" pos:end="161:56">step</name></expr>;</condition> <incr pos:start="161:59" pos:end="161:61"><expr pos:start="161:59" pos:end="161:61"><operator pos:start="161:59" pos:end="161:60">++</operator><name pos:start="161:61" pos:end="161:61">k</name></expr></incr>)</control> <block pos:start="161:64" pos:end="169:37">{<block_content pos:start="163:41" pos:end="167:97">

                                        <expr_stmt pos:start="163:41" pos:end="163:106"><expr pos:start="163:41" pos:end="163:105"><name pos:start="163:41" pos:end="163:45">coffs</name> <operator pos:start="163:47" pos:end="163:47">=</operator> <call pos:start="163:49" pos:end="163:101"><name pos:start="163:49" pos:end="163:56">get_vlc2</name><argument_list pos:start="163:57" pos:end="163:101">(<argument pos:start="163:58" pos:end="163:59"><expr pos:start="163:58" pos:end="163:59"><name pos:start="163:58" pos:end="163:59">gb</name></expr></argument>, <argument pos:start="163:62" pos:end="163:79"><expr pos:start="163:62" pos:end="163:79"><name pos:start="163:62" pos:end="163:79"><name pos:start="163:62" pos:end="163:69">codebook</name><operator pos:start="163:70" pos:end="163:70">.</operator><name pos:start="163:71" pos:end="163:73">vlc</name><operator pos:start="163:74" pos:end="163:74">.</operator><name pos:start="163:75" pos:end="163:79">table</name></name></expr></argument>, <argument pos:start="163:82" pos:end="163:97"><expr pos:start="163:82" pos:end="163:97"><name pos:start="163:82" pos:end="163:97"><name pos:start="163:82" pos:end="163:89">codebook</name><operator pos:start="163:90" pos:end="163:90">.</operator><name pos:start="163:91" pos:end="163:97">nb_bits</name></name></expr></argument>, <argument pos:start="163:100" pos:end="163:100"><expr pos:start="163:100" pos:end="163:100"><literal type="number" pos:start="163:100" pos:end="163:100">3</literal></expr></argument>)</argument_list></call> <operator pos:start="163:103" pos:end="163:103">*</operator> <literal type="number" pos:start="163:105" pos:end="163:105">2</literal></expr>;</expr_stmt>

                                        <expr_stmt pos:start="165:41" pos:end="165:97"><expr pos:start="165:41" pos:end="165:96"><name pos:start="165:41" pos:end="165:61"><name pos:start="165:41" pos:end="165:43">vec</name><index pos:start="165:44" pos:end="165:61">[<expr pos:start="165:45" pos:end="165:53"><name pos:start="165:45" pos:end="165:49">voffs</name> <operator pos:start="165:51" pos:end="165:51">+</operator> <name pos:start="165:53" pos:end="165:53">k</name></expr>       ]</index></name> <operator pos:start="165:63" pos:end="165:64">+=</operator> <name pos:start="165:66" pos:end="165:96"><name pos:start="165:66" pos:end="165:73">codebook</name><operator pos:start="165:74" pos:end="165:74">.</operator><name pos:start="165:75" pos:end="165:85">codevectors</name><index pos:start="165:86" pos:end="165:96">[<expr pos:start="165:87" pos:end="165:91"><name pos:start="165:87" pos:end="165:91">coffs</name></expr>    ]</index></name></expr>;</expr_stmt>

                                        <expr_stmt pos:start="167:41" pos:end="167:97"><expr pos:start="167:41" pos:end="167:96"><name pos:start="167:41" pos:end="167:61"><name pos:start="167:41" pos:end="167:43">vec</name><index pos:start="167:44" pos:end="167:61">[<expr pos:start="167:45" pos:end="167:60"><name pos:start="167:45" pos:end="167:49">voffs</name> <operator pos:start="167:51" pos:end="167:51">+</operator> <name pos:start="167:53" pos:end="167:53">k</name> <operator pos:start="167:55" pos:end="167:55">+</operator> <name pos:start="167:57" pos:end="167:60">vlen</name></expr>]</index></name> <operator pos:start="167:63" pos:end="167:64">+=</operator> <name pos:start="167:66" pos:end="167:96"><name pos:start="167:66" pos:end="167:73">codebook</name><operator pos:start="167:74" pos:end="167:74">.</operator><name pos:start="167:75" pos:end="167:85">codevectors</name><index pos:start="167:86" pos:end="167:96">[<expr pos:start="167:87" pos:end="167:95"><name pos:start="167:87" pos:end="167:91">coffs</name> <operator pos:start="167:93" pos:end="167:93">+</operator> <literal type="number" pos:start="167:95" pos:end="167:95">1</literal></expr>]</index></name></expr>;</expr_stmt>

                                    </block_content>}</block></for>

                                </block_content>}</block></if> <if type="elseif" pos:start="171:35" pos:end="187:33">else if <condition pos:start="171:43" pos:end="171:52">(<expr pos:start="171:44" pos:end="171:51"><name pos:start="171:44" pos:end="171:46">dim</name> <operator pos:start="171:48" pos:end="171:49">==</operator> <literal type="number" pos:start="171:51" pos:end="171:51">4</literal></expr>)</condition> <block pos:start="171:54" pos:end="187:33">{<block_content pos:start="173:37" pos:end="185:37">

                                    <for pos:start="173:37" pos:end="185:37">for <control pos:start="173:41" pos:end="173:74">(<init pos:start="173:42" pos:end="173:47"><expr pos:start="173:42" pos:end="173:46"><name pos:start="173:42" pos:end="173:42">k</name> <operator pos:start="173:44" pos:end="173:44">=</operator> <literal type="number" pos:start="173:46" pos:end="173:46">0</literal></expr>;</init> <condition pos:start="173:49" pos:end="173:57"><expr pos:start="173:49" pos:end="173:56"><name pos:start="173:49" pos:end="173:49">k</name> <operator pos:start="173:51" pos:end="173:51">&lt;</operator> <name pos:start="173:53" pos:end="173:56">step</name></expr>;</condition> <incr pos:start="173:59" pos:end="173:73"><expr pos:start="173:59" pos:end="173:61"><operator pos:start="173:59" pos:end="173:60">++</operator><name pos:start="173:61" pos:end="173:61">k</name></expr><operator pos:start="173:62" pos:end="173:62">,</operator> <expr pos:start="173:64" pos:end="173:73"><name pos:start="173:64" pos:end="173:68">voffs</name> <operator pos:start="173:70" pos:end="173:71">+=</operator> <literal type="number" pos:start="173:73" pos:end="173:73">2</literal></expr></incr>)</control> <block pos:start="173:76" pos:end="185:37">{<block_content pos:start="175:41" pos:end="183:97">

                                        <expr_stmt pos:start="175:41" pos:end="175:106"><expr pos:start="175:41" pos:end="175:105"><name pos:start="175:41" pos:end="175:45">coffs</name> <operator pos:start="175:47" pos:end="175:47">=</operator> <call pos:start="175:49" pos:end="175:101"><name pos:start="175:49" pos:end="175:56">get_vlc2</name><argument_list pos:start="175:57" pos:end="175:101">(<argument pos:start="175:58" pos:end="175:59"><expr pos:start="175:58" pos:end="175:59"><name pos:start="175:58" pos:end="175:59">gb</name></expr></argument>, <argument pos:start="175:62" pos:end="175:79"><expr pos:start="175:62" pos:end="175:79"><name pos:start="175:62" pos:end="175:79"><name pos:start="175:62" pos:end="175:69">codebook</name><operator pos:start="175:70" pos:end="175:70">.</operator><name pos:start="175:71" pos:end="175:73">vlc</name><operator pos:start="175:74" pos:end="175:74">.</operator><name pos:start="175:75" pos:end="175:79">table</name></name></expr></argument>, <argument pos:start="175:82" pos:end="175:97"><expr pos:start="175:82" pos:end="175:97"><name pos:start="175:82" pos:end="175:97"><name pos:start="175:82" pos:end="175:89">codebook</name><operator pos:start="175:90" pos:end="175:90">.</operator><name pos:start="175:91" pos:end="175:97">nb_bits</name></name></expr></argument>, <argument pos:start="175:100" pos:end="175:100"><expr pos:start="175:100" pos:end="175:100"><literal type="number" pos:start="175:100" pos:end="175:100">3</literal></expr></argument>)</argument_list></call> <operator pos:start="175:103" pos:end="175:103">*</operator> <literal type="number" pos:start="175:105" pos:end="175:105">4</literal></expr>;</expr_stmt>

                                        <expr_stmt pos:start="177:41" pos:end="177:97"><expr pos:start="177:41" pos:end="177:96"><name pos:start="177:41" pos:end="177:61"><name pos:start="177:41" pos:end="177:43">vec</name><index pos:start="177:44" pos:end="177:61">[<expr pos:start="177:45" pos:end="177:49"><name pos:start="177:45" pos:end="177:49">voffs</name></expr>           ]</index></name> <operator pos:start="177:63" pos:end="177:64">+=</operator> <name pos:start="177:66" pos:end="177:96"><name pos:start="177:66" pos:end="177:73">codebook</name><operator pos:start="177:74" pos:end="177:74">.</operator><name pos:start="177:75" pos:end="177:85">codevectors</name><index pos:start="177:86" pos:end="177:96">[<expr pos:start="177:87" pos:end="177:91"><name pos:start="177:87" pos:end="177:91">coffs</name></expr>    ]</index></name></expr>;</expr_stmt>

                                        <expr_stmt pos:start="179:41" pos:end="179:97"><expr pos:start="179:41" pos:end="179:96"><name pos:start="179:41" pos:end="179:61"><name pos:start="179:41" pos:end="179:43">vec</name><index pos:start="179:44" pos:end="179:61">[<expr pos:start="179:45" pos:end="179:53"><name pos:start="179:45" pos:end="179:49">voffs</name> <operator pos:start="179:51" pos:end="179:51">+</operator> <literal type="number" pos:start="179:53" pos:end="179:53">1</literal></expr>       ]</index></name> <operator pos:start="179:63" pos:end="179:64">+=</operator> <name pos:start="179:66" pos:end="179:96"><name pos:start="179:66" pos:end="179:73">codebook</name><operator pos:start="179:74" pos:end="179:74">.</operator><name pos:start="179:75" pos:end="179:85">codevectors</name><index pos:start="179:86" pos:end="179:96">[<expr pos:start="179:87" pos:end="179:95"><name pos:start="179:87" pos:end="179:91">coffs</name> <operator pos:start="179:93" pos:end="179:93">+</operator> <literal type="number" pos:start="179:95" pos:end="179:95">2</literal></expr>]</index></name></expr>;</expr_stmt>

                                        <expr_stmt pos:start="181:41" pos:end="181:97"><expr pos:start="181:41" pos:end="181:96"><name pos:start="181:41" pos:end="181:61"><name pos:start="181:41" pos:end="181:43">vec</name><index pos:start="181:44" pos:end="181:61">[<expr pos:start="181:45" pos:end="181:56"><name pos:start="181:45" pos:end="181:49">voffs</name> <operator pos:start="181:51" pos:end="181:51">+</operator> <name pos:start="181:53" pos:end="181:56">vlen</name></expr>    ]</index></name> <operator pos:start="181:63" pos:end="181:64">+=</operator> <name pos:start="181:66" pos:end="181:96"><name pos:start="181:66" pos:end="181:73">codebook</name><operator pos:start="181:74" pos:end="181:74">.</operator><name pos:start="181:75" pos:end="181:85">codevectors</name><index pos:start="181:86" pos:end="181:96">[<expr pos:start="181:87" pos:end="181:95"><name pos:start="181:87" pos:end="181:91">coffs</name> <operator pos:start="181:93" pos:end="181:93">+</operator> <literal type="number" pos:start="181:95" pos:end="181:95">1</literal></expr>]</index></name></expr>;</expr_stmt>

                                        <expr_stmt pos:start="183:41" pos:end="183:97"><expr pos:start="183:41" pos:end="183:96"><name pos:start="183:41" pos:end="183:61"><name pos:start="183:41" pos:end="183:43">vec</name><index pos:start="183:44" pos:end="183:61">[<expr pos:start="183:45" pos:end="183:60"><name pos:start="183:45" pos:end="183:49">voffs</name> <operator pos:start="183:51" pos:end="183:51">+</operator> <name pos:start="183:53" pos:end="183:56">vlen</name> <operator pos:start="183:58" pos:end="183:58">+</operator> <literal type="number" pos:start="183:60" pos:end="183:60">1</literal></expr>]</index></name> <operator pos:start="183:63" pos:end="183:64">+=</operator> <name pos:start="183:66" pos:end="183:96"><name pos:start="183:66" pos:end="183:73">codebook</name><operator pos:start="183:74" pos:end="183:74">.</operator><name pos:start="183:75" pos:end="183:85">codevectors</name><index pos:start="183:86" pos:end="183:96">[<expr pos:start="183:87" pos:end="183:95"><name pos:start="183:87" pos:end="183:91">coffs</name> <operator pos:start="183:93" pos:end="183:93">+</operator> <literal type="number" pos:start="183:95" pos:end="183:95">3</literal></expr>]</index></name></expr>;</expr_stmt>

                                    </block_content>}</block></for>

                                </block_content>}</block></if> <else pos:start="187:35" pos:end="211:33">else<block type="pseudo" pos:start="189:33" pos:end="211:33"><block_content pos:start="189:33" pos:end="211:33">

                                <for pos:start="189:33" pos:end="211:33">for <control pos:start="189:37" pos:end="189:58">(<init pos:start="189:38" pos:end="189:43"><expr pos:start="189:38" pos:end="189:42"><name pos:start="189:38" pos:end="189:38">k</name> <operator pos:start="189:40" pos:end="189:40">=</operator> <literal type="number" pos:start="189:42" pos:end="189:42">0</literal></expr>;</init> <condition pos:start="189:45" pos:end="189:53"><expr pos:start="189:45" pos:end="189:52"><name pos:start="189:45" pos:end="189:45">k</name> <operator pos:start="189:47" pos:end="189:47">&lt;</operator> <name pos:start="189:49" pos:end="189:52">step</name></expr>;</condition> <incr pos:start="189:55" pos:end="189:57"><expr pos:start="189:55" pos:end="189:57"><operator pos:start="189:55" pos:end="189:56">++</operator><name pos:start="189:57" pos:end="189:57">k</name></expr></incr>)</control> <block pos:start="189:60" pos:end="211:33">{<block_content pos:start="191:37" pos:end="209:37">

                                    <expr_stmt pos:start="191:37" pos:end="191:104"><expr pos:start="191:37" pos:end="191:103"><name pos:start="191:37" pos:end="191:41">coffs</name> <operator pos:start="191:43" pos:end="191:43">=</operator> <call pos:start="191:45" pos:end="191:97"><name pos:start="191:45" pos:end="191:52">get_vlc2</name><argument_list pos:start="191:53" pos:end="191:97">(<argument pos:start="191:54" pos:end="191:55"><expr pos:start="191:54" pos:end="191:55"><name pos:start="191:54" pos:end="191:55">gb</name></expr></argument>, <argument pos:start="191:58" pos:end="191:75"><expr pos:start="191:58" pos:end="191:75"><name pos:start="191:58" pos:end="191:75"><name pos:start="191:58" pos:end="191:65">codebook</name><operator pos:start="191:66" pos:end="191:66">.</operator><name pos:start="191:67" pos:end="191:69">vlc</name><operator pos:start="191:70" pos:end="191:70">.</operator><name pos:start="191:71" pos:end="191:75">table</name></name></expr></argument>, <argument pos:start="191:78" pos:end="191:93"><expr pos:start="191:78" pos:end="191:93"><name pos:start="191:78" pos:end="191:93"><name pos:start="191:78" pos:end="191:85">codebook</name><operator pos:start="191:86" pos:end="191:86">.</operator><name pos:start="191:87" pos:end="191:93">nb_bits</name></name></expr></argument>, <argument pos:start="191:96" pos:end="191:96"><expr pos:start="191:96" pos:end="191:96"><literal type="number" pos:start="191:96" pos:end="191:96">3</literal></expr></argument>)</argument_list></call> <operator pos:start="191:99" pos:end="191:99">*</operator> <name pos:start="191:101" pos:end="191:103">dim</name></expr>;</expr_stmt>

                                    <for pos:start="193:37" pos:end="209:37">for <control pos:start="193:41" pos:end="193:73">(<init pos:start="193:42" pos:end="193:47"><expr pos:start="193:42" pos:end="193:46"><name pos:start="193:42" pos:end="193:42">l</name> <operator pos:start="193:44" pos:end="193:44">=</operator> <literal type="number" pos:start="193:46" pos:end="193:46">0</literal></expr>;</init> <condition pos:start="193:49" pos:end="193:56"><expr pos:start="193:49" pos:end="193:55"><name pos:start="193:49" pos:end="193:49">l</name> <operator pos:start="193:51" pos:end="193:51">&lt;</operator> <name pos:start="193:53" pos:end="193:55">dim</name></expr>;</condition> <incr pos:start="193:58" pos:end="193:72"><expr pos:start="193:58" pos:end="193:63"><name pos:start="193:58" pos:end="193:58">l</name> <operator pos:start="193:60" pos:end="193:61">+=</operator> <literal type="number" pos:start="193:63" pos:end="193:63">2</literal></expr><operator pos:start="193:64" pos:end="193:64">,</operator> <expr pos:start="193:66" pos:end="193:72"><name pos:start="193:66" pos:end="193:70">voffs</name><operator pos:start="193:71" pos:end="193:72">++</operator></expr></incr>)</control> <block pos:start="193:75" pos:end="209:37">{<block_content pos:start="195:41" pos:end="207:91">

                                        <expr_stmt pos:start="195:41" pos:end="195:97"><expr pos:start="195:41" pos:end="195:96"><name pos:start="195:41" pos:end="195:57"><name pos:start="195:41" pos:end="195:43">vec</name><index pos:start="195:44" pos:end="195:57">[<expr pos:start="195:45" pos:end="195:49"><name pos:start="195:45" pos:end="195:49">voffs</name></expr>       ]</index></name> <operator pos:start="195:59" pos:end="195:60">+=</operator> <name pos:start="195:62" pos:end="195:96"><name pos:start="195:62" pos:end="195:69">codebook</name><operator pos:start="195:70" pos:end="195:70">.</operator><name pos:start="195:71" pos:end="195:81">codevectors</name><index pos:start="195:82" pos:end="195:96">[<expr pos:start="195:83" pos:end="195:91"><name pos:start="195:83" pos:end="195:87">coffs</name> <operator pos:start="195:89" pos:end="195:89">+</operator> <name pos:start="195:91" pos:end="195:91">l</name></expr>    ]</index></name></expr>;</expr_stmt>

                                        <expr_stmt pos:start="197:41" pos:end="197:97"><expr pos:start="197:41" pos:end="197:96"><name pos:start="197:41" pos:end="197:57"><name pos:start="197:41" pos:end="197:43">vec</name><index pos:start="197:44" pos:end="197:57">[<expr pos:start="197:45" pos:end="197:56"><name pos:start="197:45" pos:end="197:49">voffs</name> <operator pos:start="197:51" pos:end="197:51">+</operator> <name pos:start="197:53" pos:end="197:56">vlen</name></expr>]</index></name> <operator pos:start="197:59" pos:end="197:60">+=</operator> <name pos:start="197:62" pos:end="197:96"><name pos:start="197:62" pos:end="197:69">codebook</name><operator pos:start="197:70" pos:end="197:70">.</operator><name pos:start="197:71" pos:end="197:81">codevectors</name><index pos:start="197:82" pos:end="197:96">[<expr pos:start="197:83" pos:end="197:95"><name pos:start="197:83" pos:end="197:87">coffs</name> <operator pos:start="197:89" pos:end="197:89">+</operator> <name pos:start="197:91" pos:end="197:91">l</name> <operator pos:start="197:93" pos:end="197:93">+</operator> <literal type="number" pos:start="197:95" pos:end="197:95">1</literal></expr>]</index></name></expr>;</expr_stmt>



                                        <expr_stmt pos:start="201:41" pos:end="207:91"><expr pos:start="201:41" pos:end="207:90"><call pos:start="201:41" pos:end="207:90"><name pos:start="201:41" pos:end="201:47">av_dlog</name><argument_list pos:start="201:48" pos:end="207:90">(<argument pos:start="201:49" pos:end="201:52"><expr pos:start="201:49" pos:end="201:52"><name pos:start="201:49" pos:end="201:52">NULL</name></expr></argument>, <argument pos:start="201:55" pos:end="201:113"><expr pos:start="201:55" pos:end="201:113"><literal type="string" pos:start="201:55" pos:end="201:113">" pass %d offs: %d curr: %f change: %f cv offs.: %d+%d  \n"</literal></expr></argument>,

                                                <argument pos:start="203:49" pos:end="203:52"><expr pos:start="203:49" pos:end="203:52"><name pos:start="203:49" pos:end="203:52">pass</name></expr></argument>, <argument pos:start="203:55" pos:end="203:88"><expr pos:start="203:55" pos:end="203:88"><name pos:start="203:55" pos:end="203:61">voffset</name> <operator pos:start="203:63" pos:end="203:63">/</operator> <name pos:start="203:65" pos:end="203:66">ch</name> <operator pos:start="203:68" pos:end="203:68">+</operator> <operator pos:start="203:70" pos:end="203:70">(</operator><name pos:start="203:71" pos:end="203:75">voffs</name> <operator pos:start="203:77" pos:end="203:77">%</operator> <name pos:start="203:79" pos:end="203:80">ch</name><operator pos:start="203:81" pos:end="203:81">)</operator> <operator pos:start="203:83" pos:end="203:83">*</operator> <name pos:start="203:85" pos:end="203:88">vlen</name></expr></argument>,

                                                <argument pos:start="205:49" pos:end="205:87"><expr pos:start="205:49" pos:end="205:87"><name pos:start="205:49" pos:end="205:87"><name pos:start="205:49" pos:end="205:51">vec</name><index pos:start="205:52" pos:end="205:87">[<expr pos:start="205:53" pos:end="205:86"><name pos:start="205:53" pos:end="205:59">voffset</name> <operator pos:start="205:61" pos:end="205:61">/</operator> <name pos:start="205:63" pos:end="205:64">ch</name> <operator pos:start="205:66" pos:end="205:66">+</operator> <operator pos:start="205:68" pos:end="205:68">(</operator><name pos:start="205:69" pos:end="205:73">voffs</name> <operator pos:start="205:75" pos:end="205:75">%</operator> <name pos:start="205:77" pos:end="205:78">ch</name><operator pos:start="205:79" pos:end="205:79">)</operator> <operator pos:start="205:81" pos:end="205:81">*</operator> <name pos:start="205:83" pos:end="205:86">vlen</name></expr>]</index></name></expr></argument>,

                                                <argument pos:start="207:49" pos:end="207:79"><expr pos:start="207:49" pos:end="207:79"><name pos:start="207:49" pos:end="207:79"><name pos:start="207:49" pos:end="207:56">codebook</name><operator pos:start="207:57" pos:end="207:57">.</operator><name pos:start="207:58" pos:end="207:68">codevectors</name><index pos:start="207:69" pos:end="207:79">[<expr pos:start="207:70" pos:end="207:78"><name pos:start="207:70" pos:end="207:74">coffs</name> <operator pos:start="207:76" pos:end="207:76">+</operator> <name pos:start="207:78" pos:end="207:78">l</name></expr>]</index></name></expr></argument>, <argument pos:start="207:82" pos:end="207:86"><expr pos:start="207:82" pos:end="207:86"><name pos:start="207:82" pos:end="207:86">coffs</name></expr></argument>, <argument pos:start="207:89" pos:end="207:89"><expr pos:start="207:89" pos:end="207:89"><name pos:start="207:89" pos:end="207:89">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    </block_content>}</block></for>

                                </block_content>}</block></for></block_content></block></else></if_stmt>



                            </block_content>}</block></if> <if type="elseif" pos:start="215:31" pos:end="257:29">else if <condition pos:start="215:39" pos:end="215:52">(<expr pos:start="215:40" pos:end="215:51"><name pos:start="215:40" pos:end="215:46">vr_type</name> <operator pos:start="215:48" pos:end="215:49">==</operator> <literal type="number" pos:start="215:51" pos:end="215:51">2</literal></expr>)</condition> <block pos:start="215:54" pos:end="257:29">{<block_content pos:start="217:33" pos:end="255:33">

                                <decl_stmt pos:start="217:33" pos:end="217:83"><decl pos:start="217:33" pos:end="217:82"><type pos:start="217:33" pos:end="217:40"><name pos:start="217:33" pos:end="217:40">unsigned</name></type> <name pos:start="217:42" pos:end="217:50">voffs_div</name> <init pos:start="217:52" pos:end="217:82">= <expr pos:start="217:54" pos:end="217:82"><call pos:start="217:54" pos:end="217:82"><name pos:start="217:54" pos:end="217:60">FASTDIV</name><argument_list pos:start="217:61" pos:end="217:82">(<argument pos:start="217:62" pos:end="217:73"><expr pos:start="217:62" pos:end="217:73"><name pos:start="217:62" pos:end="217:68">voffset</name> <operator pos:start="217:70" pos:end="217:71">&lt;&lt;</operator> <literal type="number" pos:start="217:73" pos:end="217:73">1</literal></expr></argument>, <argument pos:start="217:76" pos:end="217:81"><expr pos:start="217:76" pos:end="217:81"><name pos:start="217:76" pos:end="217:77">ch</name> <operator pos:start="217:79" pos:end="217:80">&lt;&lt;</operator><literal type="number" pos:start="217:81" pos:end="217:81">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                                <decl_stmt pos:start="219:33" pos:end="219:78"><decl pos:start="219:33" pos:end="219:77"><type pos:start="219:33" pos:end="219:40"><name pos:start="219:33" pos:end="219:40">unsigned</name></type> <name pos:start="219:42" pos:end="219:50">voffs_mod</name> <init pos:start="219:52" pos:end="219:77">= <expr pos:start="219:54" pos:end="219:77"><name pos:start="219:54" pos:end="219:60">voffset</name> <operator pos:start="219:62" pos:end="219:62">-</operator> <name pos:start="219:64" pos:end="219:72">voffs_div</name> <operator pos:start="219:74" pos:end="219:74">*</operator> <name pos:start="219:76" pos:end="219:77">ch</name></expr></init></decl>;</decl_stmt>



                                <for pos:start="223:33" pos:end="255:33">for <control pos:start="223:37" pos:end="223:58">(<init pos:start="223:38" pos:end="223:43"><expr pos:start="223:38" pos:end="223:42"><name pos:start="223:38" pos:end="223:38">k</name> <operator pos:start="223:40" pos:end="223:40">=</operator> <literal type="number" pos:start="223:42" pos:end="223:42">0</literal></expr>;</init> <condition pos:start="223:45" pos:end="223:53"><expr pos:start="223:45" pos:end="223:52"><name pos:start="223:45" pos:end="223:45">k</name> <operator pos:start="223:47" pos:end="223:47">&lt;</operator> <name pos:start="223:49" pos:end="223:52">step</name></expr>;</condition> <incr pos:start="223:55" pos:end="223:57"><expr pos:start="223:55" pos:end="223:57"><operator pos:start="223:55" pos:end="223:56">++</operator><name pos:start="223:57" pos:end="223:57">k</name></expr></incr>)</control> <block pos:start="223:60" pos:end="255:33">{<block_content pos:start="225:37" pos:end="253:37">

                                    <expr_stmt pos:start="225:37" pos:end="225:104"><expr pos:start="225:37" pos:end="225:103"><name pos:start="225:37" pos:end="225:41">coffs</name> <operator pos:start="225:43" pos:end="225:43">=</operator> <call pos:start="225:45" pos:end="225:97"><name pos:start="225:45" pos:end="225:52">get_vlc2</name><argument_list pos:start="225:53" pos:end="225:97">(<argument pos:start="225:54" pos:end="225:55"><expr pos:start="225:54" pos:end="225:55"><name pos:start="225:54" pos:end="225:55">gb</name></expr></argument>, <argument pos:start="225:58" pos:end="225:75"><expr pos:start="225:58" pos:end="225:75"><name pos:start="225:58" pos:end="225:75"><name pos:start="225:58" pos:end="225:65">codebook</name><operator pos:start="225:66" pos:end="225:66">.</operator><name pos:start="225:67" pos:end="225:69">vlc</name><operator pos:start="225:70" pos:end="225:70">.</operator><name pos:start="225:71" pos:end="225:75">table</name></name></expr></argument>, <argument pos:start="225:78" pos:end="225:93"><expr pos:start="225:78" pos:end="225:93"><name pos:start="225:78" pos:end="225:93"><name pos:start="225:78" pos:end="225:85">codebook</name><operator pos:start="225:86" pos:end="225:86">.</operator><name pos:start="225:87" pos:end="225:93">nb_bits</name></name></expr></argument>, <argument pos:start="225:96" pos:end="225:96"><expr pos:start="225:96" pos:end="225:96"><literal type="number" pos:start="225:96" pos:end="225:96">3</literal></expr></argument>)</argument_list></call> <operator pos:start="225:99" pos:end="225:99">*</operator> <name pos:start="225:101" pos:end="225:103">dim</name></expr>;</expr_stmt>

                                    <for pos:start="227:37" pos:end="253:37">for <control pos:start="227:41" pos:end="227:61">(<init pos:start="227:42" pos:end="227:47"><expr pos:start="227:42" pos:end="227:46"><name pos:start="227:42" pos:end="227:42">l</name> <operator pos:start="227:44" pos:end="227:44">=</operator> <literal type="number" pos:start="227:46" pos:end="227:46">0</literal></expr>;</init> <condition pos:start="227:49" pos:end="227:56"><expr pos:start="227:49" pos:end="227:55"><name pos:start="227:49" pos:end="227:49">l</name> <operator pos:start="227:51" pos:end="227:51">&lt;</operator> <name pos:start="227:53" pos:end="227:55">dim</name></expr>;</condition> <incr pos:start="227:58" pos:end="227:60"><expr pos:start="227:58" pos:end="227:60"><operator pos:start="227:58" pos:end="227:59">++</operator><name pos:start="227:60" pos:end="227:60">l</name></expr></incr>)</control> <block pos:start="227:63" pos:end="253:37">{<block_content pos:start="229:41" pos:end="251:41">

                                        <expr_stmt pos:start="229:41" pos:end="231:76"><expr pos:start="229:41" pos:end="231:75"><name pos:start="229:41" pos:end="229:73"><name pos:start="229:41" pos:end="229:43">vec</name><index pos:start="229:44" pos:end="229:73">[<expr pos:start="229:45" pos:end="229:72"><name pos:start="229:45" pos:end="229:53">voffs_div</name> <operator pos:start="229:55" pos:end="229:55">+</operator> <name pos:start="229:57" pos:end="229:65">voffs_mod</name> <operator pos:start="229:67" pos:end="229:67">*</operator> <name pos:start="229:69" pos:end="229:72">vlen</name></expr>]</index></name> <operator pos:start="229:75" pos:end="229:76">+=</operator>

                                            <name pos:start="231:45" pos:end="231:75"><name pos:start="231:45" pos:end="231:52">codebook</name><operator pos:start="231:53" pos:end="231:53">.</operator><name pos:start="231:54" pos:end="231:64">codevectors</name><index pos:start="231:65" pos:end="231:75">[<expr pos:start="231:66" pos:end="231:74"><name pos:start="231:66" pos:end="231:70">coffs</name> <operator pos:start="231:72" pos:end="231:72">+</operator> <name pos:start="231:74" pos:end="231:74">l</name></expr>]</index></name></expr>;</expr_stmt>



                                        <expr_stmt pos:start="235:41" pos:end="241:91"><expr pos:start="235:41" pos:end="241:90"><call pos:start="235:41" pos:end="241:90"><name pos:start="235:41" pos:end="235:47">av_dlog</name><argument_list pos:start="235:48" pos:end="241:90">(<argument pos:start="235:49" pos:end="235:52"><expr pos:start="235:49" pos:end="235:52"><name pos:start="235:49" pos:end="235:52">NULL</name></expr></argument>, <argument pos:start="235:55" pos:end="235:113"><expr pos:start="235:55" pos:end="235:113"><literal type="string" pos:start="235:55" pos:end="235:113">" pass %d offs: %d curr: %f change: %f cv offs.: %d+%d  \n"</literal></expr></argument>,

                                                <argument pos:start="237:49" pos:end="237:52"><expr pos:start="237:49" pos:end="237:52"><name pos:start="237:49" pos:end="237:52">pass</name></expr></argument>, <argument pos:start="237:55" pos:end="237:82"><expr pos:start="237:55" pos:end="237:82"><name pos:start="237:55" pos:end="237:63">voffs_div</name> <operator pos:start="237:65" pos:end="237:65">+</operator> <name pos:start="237:67" pos:end="237:75">voffs_mod</name> <operator pos:start="237:77" pos:end="237:77">*</operator> <name pos:start="237:79" pos:end="237:82">vlen</name></expr></argument>,

                                                <argument pos:start="239:49" pos:end="239:81"><expr pos:start="239:49" pos:end="239:81"><name pos:start="239:49" pos:end="239:81"><name pos:start="239:49" pos:end="239:51">vec</name><index pos:start="239:52" pos:end="239:81">[<expr pos:start="239:53" pos:end="239:80"><name pos:start="239:53" pos:end="239:61">voffs_div</name> <operator pos:start="239:63" pos:end="239:63">+</operator> <name pos:start="239:65" pos:end="239:73">voffs_mod</name> <operator pos:start="239:75" pos:end="239:75">*</operator> <name pos:start="239:77" pos:end="239:80">vlen</name></expr>]</index></name></expr></argument>,

                                                <argument pos:start="241:49" pos:end="241:79"><expr pos:start="241:49" pos:end="241:79"><name pos:start="241:49" pos:end="241:79"><name pos:start="241:49" pos:end="241:56">codebook</name><operator pos:start="241:57" pos:end="241:57">.</operator><name pos:start="241:58" pos:end="241:68">codevectors</name><index pos:start="241:69" pos:end="241:79">[<expr pos:start="241:70" pos:end="241:78"><name pos:start="241:70" pos:end="241:74">coffs</name> <operator pos:start="241:76" pos:end="241:76">+</operator> <name pos:start="241:78" pos:end="241:78">l</name></expr>]</index></name></expr></argument>, <argument pos:start="241:82" pos:end="241:86"><expr pos:start="241:82" pos:end="241:86"><name pos:start="241:82" pos:end="241:86">coffs</name></expr></argument>, <argument pos:start="241:89" pos:end="241:89"><expr pos:start="241:89" pos:end="241:89"><name pos:start="241:89" pos:end="241:89">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                                        <if_stmt pos:start="245:41" pos:end="251:41"><if pos:start="245:41" pos:end="251:41">if <condition pos:start="245:44" pos:end="245:62">(<expr pos:start="245:45" pos:end="245:61"><operator pos:start="245:45" pos:end="245:46">++</operator><name pos:start="245:47" pos:end="245:55">voffs_mod</name> <operator pos:start="245:57" pos:end="245:58">==</operator> <name pos:start="245:60" pos:end="245:61">ch</name></expr>)</condition> <block pos:start="245:64" pos:end="251:41">{<block_content pos:start="247:45" pos:end="249:58">

                                            <expr_stmt pos:start="247:45" pos:end="247:56"><expr pos:start="247:45" pos:end="247:55"><name pos:start="247:45" pos:end="247:53">voffs_div</name><operator pos:start="247:54" pos:end="247:55">++</operator></expr>;</expr_stmt>

                                            <expr_stmt pos:start="249:45" pos:end="249:58"><expr pos:start="249:45" pos:end="249:57"><name pos:start="249:45" pos:end="249:53">voffs_mod</name> <operator pos:start="249:55" pos:end="249:55">=</operator> <literal type="number" pos:start="249:57" pos:end="249:57">0</literal></expr>;</expr_stmt>

                                        </block_content>}</block></if></if_stmt>

                                    </block_content>}</block></for>

                                </block_content>}</block></for>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="263:21" pos:end="263:57"><expr pos:start="263:21" pos:end="263:56"><name pos:start="263:21" pos:end="263:40">j_times_ptns_to_read</name> <operator pos:start="263:42" pos:end="263:43">+=</operator> <name pos:start="263:45" pos:end="263:56">ptns_to_read</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="267:17" pos:end="267:34"><expr pos:start="267:17" pos:end="267:33"><operator pos:start="267:17" pos:end="267:18">++</operator><name pos:start="267:19" pos:end="267:33">partition_count</name></expr>;</expr_stmt>

                <expr_stmt pos:start="269:17" pos:end="269:46"><expr pos:start="269:17" pos:end="269:45"><name pos:start="269:17" pos:end="269:23">voffset</name> <operator pos:start="269:25" pos:end="269:26">+=</operator> <name pos:start="269:28" pos:end="269:45"><name pos:start="269:28" pos:end="269:29">vr</name><operator pos:start="269:30" pos:end="269:31">-&gt;</operator><name pos:start="269:32" pos:end="269:45">partition_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="277:5" pos:end="277:13">return <expr pos:start="277:12" pos:end="277:12"><literal type="number" pos:start="277:12" pos:end="277:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
