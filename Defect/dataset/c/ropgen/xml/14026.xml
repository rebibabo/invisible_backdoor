<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14026.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">ehci_state_fetchqtd</name><parameter_list pos:start="1:31" pos:end="1:44">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:40">EHCIQueue</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">q</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:17">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">EHCIqtd</name></type> <name pos:start="5:13" pos:end="5:15">qtd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">EHCIPacket</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">again</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="15:37"><expr pos:start="13:5" pos:end="15:36"><call pos:start="13:5" pos:end="15:36"><name pos:start="13:5" pos:end="13:14">get_dwords</name><argument_list pos:start="13:15" pos:end="15:36">(<argument pos:start="13:16" pos:end="13:22"><expr pos:start="13:16" pos:end="13:22"><name pos:start="13:16" pos:end="13:22"><name pos:start="13:16" pos:end="13:16">q</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:22">ehci</name></name></expr></argument>, <argument pos:start="13:25" pos:end="13:45"><expr pos:start="13:25" pos:end="13:45"><call pos:start="13:25" pos:end="13:45"><name pos:start="13:25" pos:end="13:33">NLPTR_GET</name><argument_list pos:start="13:34" pos:end="13:45">(<argument pos:start="13:35" pos:end="13:44"><expr pos:start="13:35" pos:end="13:44"><name pos:start="13:35" pos:end="13:44"><name pos:start="13:35" pos:end="13:35">q</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:44">qtdaddr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:48" pos:end="13:64"><expr pos:start="13:48" pos:end="13:64"><operator pos:start="13:48" pos:end="13:48">(</operator><name pos:start="13:49" pos:end="13:56">uint32_t</name> <operator pos:start="13:58" pos:end="13:58">*</operator><operator pos:start="13:59" pos:end="13:59">)</operator> <operator pos:start="13:61" pos:end="13:61">&amp;</operator><name pos:start="13:62" pos:end="13:64">qtd</name></expr></argument>,

               <argument pos:start="15:16" pos:end="15:35"><expr pos:start="15:16" pos:end="15:35"><sizeof pos:start="15:16" pos:end="15:30">sizeof<argument_list pos:start="15:22" pos:end="15:30">(<argument pos:start="15:23" pos:end="15:29"><expr pos:start="15:23" pos:end="15:29"><name pos:start="15:23" pos:end="15:29">EHCIqtd</name></expr></argument>)</argument_list></sizeof> <operator pos:start="15:32" pos:end="15:33">&gt;&gt;</operator> <literal type="number" pos:start="15:35" pos:end="15:35">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:51"><expr pos:start="17:5" pos:end="17:50"><call pos:start="17:5" pos:end="17:50"><name pos:start="17:5" pos:end="17:18">ehci_trace_qtd</name><argument_list pos:start="17:19" pos:end="17:50">(<argument pos:start="17:20" pos:end="17:20"><expr pos:start="17:20" pos:end="17:20"><name pos:start="17:20" pos:end="17:20">q</name></expr></argument>, <argument pos:start="17:23" pos:end="17:43"><expr pos:start="17:23" pos:end="17:43"><call pos:start="17:23" pos:end="17:43"><name pos:start="17:23" pos:end="17:31">NLPTR_GET</name><argument_list pos:start="17:32" pos:end="17:43">(<argument pos:start="17:33" pos:end="17:42"><expr pos:start="17:33" pos:end="17:42"><name pos:start="17:33" pos:end="17:42"><name pos:start="17:33" pos:end="17:33">q</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:42">qtdaddr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:46" pos:end="17:49"><expr pos:start="17:46" pos:end="17:49"><operator pos:start="17:46" pos:end="17:46">&amp;</operator><name pos:start="17:47" pos:end="17:49">qtd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:5">p</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <call pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:20">QTAILQ_FIRST</name><argument_list pos:start="21:21" pos:end="21:33">(<argument pos:start="21:22" pos:end="21:32"><expr pos:start="21:22" pos:end="21:32"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:32"><name pos:start="21:23" pos:end="21:23">q</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:32">packets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="47:5"><if pos:start="23:5" pos:end="47:5">if <condition pos:start="23:8" pos:end="23:18">(<expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:9">p</name> <operator pos:start="23:11" pos:end="23:12">!=</operator> <name pos:start="23:14" pos:end="23:17">NULL</name></expr>)</condition> <block pos:start="23:20" pos:end="47:5">{<block_content pos:start="25:9" pos:end="45:9">

        <if_stmt pos:start="25:9" pos:end="45:9"><if pos:start="25:9" pos:end="39:9">if <condition pos:start="25:12" pos:end="31:46">(<expr pos:start="25:13" pos:end="31:45"><name pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:13">p</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:22">qtdaddr</name></name> <operator pos:start="25:24" pos:end="25:25">!=</operator> <name pos:start="25:27" pos:end="25:36"><name pos:start="25:27" pos:end="25:27">q</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:36">qtdaddr</name></name> <operator pos:start="25:38" pos:end="25:39">||</operator>

            <operator pos:start="27:13" pos:end="27:13">(</operator><operator pos:start="27:14" pos:end="27:14">!</operator><call pos:start="27:15" pos:end="27:37"><name pos:start="27:15" pos:end="27:24">NLPTR_TBIT</name><argument_list pos:start="27:25" pos:end="27:37">(<argument pos:start="27:26" pos:end="27:36"><expr pos:start="27:26" pos:end="27:36"><name pos:start="27:26" pos:end="27:36"><name pos:start="27:26" pos:end="27:26">p</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:31">qtd</name><operator pos:start="27:32" pos:end="27:32">.</operator><name pos:start="27:33" pos:end="27:36">next</name></name></expr></argument>)</argument_list></call> <operator pos:start="27:39" pos:end="27:40">&amp;&amp;</operator> <operator pos:start="27:42" pos:end="27:42">(</operator><name pos:start="27:43" pos:end="27:53"><name pos:start="27:43" pos:end="27:43">p</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:48">qtd</name><operator pos:start="27:49" pos:end="27:49">.</operator><name pos:start="27:50" pos:end="27:53">next</name></name> <operator pos:start="27:55" pos:end="27:56">!=</operator> <name pos:start="27:58" pos:end="27:65"><name pos:start="27:58" pos:end="27:60">qtd</name><operator pos:start="27:61" pos:end="27:61">.</operator><name pos:start="27:62" pos:end="27:65">next</name></name><operator pos:start="27:66" pos:end="27:66">)</operator><operator pos:start="27:67" pos:end="27:67">)</operator> <operator pos:start="27:69" pos:end="27:70">||</operator>

            <operator pos:start="29:13" pos:end="29:13">(</operator><operator pos:start="29:14" pos:end="29:14">!</operator><call pos:start="29:15" pos:end="29:40"><name pos:start="29:15" pos:end="29:24">NLPTR_TBIT</name><argument_list pos:start="29:25" pos:end="29:40">(<argument pos:start="29:26" pos:end="29:39"><expr pos:start="29:26" pos:end="29:39"><name pos:start="29:26" pos:end="29:39"><name pos:start="29:26" pos:end="29:26">p</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:31">qtd</name><operator pos:start="29:32" pos:end="29:32">.</operator><name pos:start="29:33" pos:end="29:39">altnext</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:42" pos:end="29:43">&amp;&amp;</operator> <operator pos:start="29:45" pos:end="29:45">(</operator><name pos:start="29:46" pos:end="29:59"><name pos:start="29:46" pos:end="29:46">p</name><operator pos:start="29:47" pos:end="29:48">-&gt;</operator><name pos:start="29:49" pos:end="29:51">qtd</name><operator pos:start="29:52" pos:end="29:52">.</operator><name pos:start="29:53" pos:end="29:59">altnext</name></name> <operator pos:start="29:61" pos:end="29:62">!=</operator> <name pos:start="29:64" pos:end="29:74"><name pos:start="29:64" pos:end="29:66">qtd</name><operator pos:start="29:67" pos:end="29:67">.</operator><name pos:start="29:68" pos:end="29:74">altnext</name></name><operator pos:start="29:75" pos:end="29:75">)</operator><operator pos:start="29:76" pos:end="29:76">)</operator> <operator pos:start="29:78" pos:end="29:79">||</operator>

            <name pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:13">p</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:18">qtd</name><operator pos:start="31:19" pos:end="31:19">.</operator><name pos:start="31:20" pos:end="31:25">bufptr</name><index pos:start="31:26" pos:end="31:28">[<expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr>]</index></name> <operator pos:start="31:30" pos:end="31:31">!=</operator> <name pos:start="31:33" pos:end="31:45"><name pos:start="31:33" pos:end="31:35">qtd</name><operator pos:start="31:36" pos:end="31:36">.</operator><name pos:start="31:37" pos:end="31:42">bufptr</name><index pos:start="31:43" pos:end="31:45">[<expr pos:start="31:44" pos:end="31:44"><literal type="number" pos:start="31:44" pos:end="31:44">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="31:48" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:21">

            <expr_stmt pos:start="33:13" pos:end="33:33"><expr pos:start="33:13" pos:end="33:32"><call pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:29">ehci_cancel_queue</name><argument_list pos:start="33:30" pos:end="33:32">(<argument pos:start="33:31" pos:end="33:31"><expr pos:start="33:31" pos:end="33:31"><name pos:start="33:31" pos:end="33:31">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:76"><expr pos:start="35:13" pos:end="35:75"><call pos:start="35:13" pos:end="35:75"><name pos:start="35:13" pos:end="35:32">ehci_trace_guest_bug</name><argument_list pos:start="35:33" pos:end="35:75">(<argument pos:start="35:34" pos:end="35:40"><expr pos:start="35:34" pos:end="35:40"><name pos:start="35:34" pos:end="35:40"><name pos:start="35:34" pos:end="35:34">q</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:40">ehci</name></name></expr></argument>, <argument pos:start="35:43" pos:end="35:74"><expr pos:start="35:43" pos:end="35:74"><literal type="string" pos:start="35:43" pos:end="35:74">"guest updated active QH or qTD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:21"><expr pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:13">p</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:20">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="45:9">else <block pos:start="39:16" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:34">

            <expr_stmt pos:start="41:13" pos:end="41:25"><expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:13">p</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:18">qtd</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:24">qtd</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:34"><expr pos:start="43:13" pos:end="43:33"><call pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:30">ehci_qh_do_overlay</name><argument_list pos:start="43:31" pos:end="43:33">(<argument pos:start="43:32" pos:end="43:32"><expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="111:5"><if pos:start="51:5" pos:end="67:5">if <condition pos:start="51:8" pos:end="51:40">(<expr pos:start="51:9" pos:end="51:39"><operator pos:start="51:9" pos:end="51:9">!</operator><operator pos:start="51:10" pos:end="51:10">(</operator><name pos:start="51:11" pos:end="51:19"><name pos:start="51:11" pos:end="51:13">qtd</name><operator pos:start="51:14" pos:end="51:14">.</operator><name pos:start="51:15" pos:end="51:19">token</name></name> <operator pos:start="51:21" pos:end="51:21">&amp;</operator> <name pos:start="51:23" pos:end="51:38">QTD_TOKEN_ACTIVE</name><operator pos:start="51:39" pos:end="51:39">)</operator></expr>)</condition> <block pos:start="51:42" pos:end="67:5">{<block_content pos:start="53:9" pos:end="65:18">

        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:22">(<expr pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:13">p</name> <operator pos:start="53:15" pos:end="53:16">!=</operator> <name pos:start="53:18" pos:end="53:21">NULL</name></expr>)</condition> <block pos:start="53:24" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:21">

            <comment type="block" pos:start="55:13" pos:end="55:59">/* transfer canceled by guest (clear active) */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:33"><expr pos:start="57:13" pos:end="57:32"><call pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:29">ehci_cancel_queue</name><argument_list pos:start="57:30" pos:end="57:32">(<argument pos:start="57:31" pos:end="57:31"><expr pos:start="57:31" pos:end="57:31"><name pos:start="57:31" pos:end="57:31">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:21"><expr pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:13">p</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <name pos:start="59:17" pos:end="59:20">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:60"><expr pos:start="63:9" pos:end="63:59"><call pos:start="63:9" pos:end="63:59"><name pos:start="63:9" pos:end="63:22">ehci_set_state</name><argument_list pos:start="63:23" pos:end="63:59">(<argument pos:start="63:24" pos:end="63:30"><expr pos:start="63:24" pos:end="63:30"><name pos:start="63:24" pos:end="63:30"><name pos:start="63:24" pos:end="63:24">q</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:30">ehci</name></name></expr></argument>, <argument pos:start="63:33" pos:end="63:40"><expr pos:start="63:33" pos:end="63:40"><name pos:start="63:33" pos:end="63:40"><name pos:start="63:33" pos:end="63:33">q</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:40">async</name></name></expr></argument>, <argument pos:start="63:43" pos:end="63:58"><expr pos:start="63:43" pos:end="63:58"><name pos:start="63:43" pos:end="63:58">EST_HORIZONTALQH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:18"><expr pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:13">again</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <literal type="number" pos:start="65:17" pos:end="65:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="67:7" pos:end="99:5">else if <condition pos:start="67:15" pos:end="67:25">(<expr pos:start="67:16" pos:end="67:24"><name pos:start="67:16" pos:end="67:16">p</name> <operator pos:start="67:18" pos:end="67:19">!=</operator> <name pos:start="67:21" pos:end="67:24">NULL</name></expr>)</condition> <block pos:start="67:27" pos:end="99:5">{<block_content pos:start="69:9" pos:end="97:18">

        <switch pos:start="69:9" pos:end="95:9">switch <condition pos:start="69:16" pos:end="69:25">(<expr pos:start="69:17" pos:end="69:24"><name pos:start="69:17" pos:end="69:24"><name pos:start="69:17" pos:end="69:17">p</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:24">async</name></name></expr>)</condition> <block pos:start="69:27" pos:end="95:9">{<block_content pos:start="71:9" pos:end="93:18">

        <case pos:start="71:9" pos:end="71:29">case <expr pos:start="71:14" pos:end="71:28"><name pos:start="71:14" pos:end="71:28">EHCI_ASYNC_NONE</name></expr>:</case>

            <comment type="block" pos:start="73:13" pos:end="73:64">/* Previously nacked packet (likely interrupt ep) */</comment>

           <expr_stmt pos:start="75:12" pos:end="75:58"><expr pos:start="75:12" pos:end="75:57"><call pos:start="75:12" pos:end="75:57"><name pos:start="75:12" pos:end="75:25">ehci_set_state</name><argument_list pos:start="75:26" pos:end="75:57">(<argument pos:start="75:27" pos:end="75:33"><expr pos:start="75:27" pos:end="75:33"><name pos:start="75:27" pos:end="75:33"><name pos:start="75:27" pos:end="75:27">q</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:33">ehci</name></name></expr></argument>, <argument pos:start="75:36" pos:end="75:43"><expr pos:start="75:36" pos:end="75:43"><name pos:start="75:36" pos:end="75:43"><name pos:start="75:36" pos:end="75:36">q</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:43">async</name></name></expr></argument>, <argument pos:start="75:46" pos:end="75:56"><expr pos:start="75:46" pos:end="75:56"><name pos:start="75:46" pos:end="75:56">EST_EXECUTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <break pos:start="77:12" pos:end="77:17">break;</break>

        <case pos:start="79:9" pos:end="79:33">case <expr pos:start="79:14" pos:end="79:32"><name pos:start="79:14" pos:end="79:32">EHCI_ASYNC_INFLIGHT</name></expr>:</case>

            <comment type="block" pos:start="81:13" pos:end="81:64">/* Unfinyshed async handled packet, go horizontal */</comment>

            <expr_stmt pos:start="83:13" pos:end="83:64"><expr pos:start="83:13" pos:end="83:63"><call pos:start="83:13" pos:end="83:63"><name pos:start="83:13" pos:end="83:26">ehci_set_state</name><argument_list pos:start="83:27" pos:end="83:63">(<argument pos:start="83:28" pos:end="83:34"><expr pos:start="83:28" pos:end="83:34"><name pos:start="83:28" pos:end="83:34"><name pos:start="83:28" pos:end="83:28">q</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:34">ehci</name></name></expr></argument>, <argument pos:start="83:37" pos:end="83:44"><expr pos:start="83:37" pos:end="83:44"><name pos:start="83:37" pos:end="83:44"><name pos:start="83:37" pos:end="83:37">q</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:44">async</name></name></expr></argument>, <argument pos:start="83:47" pos:end="83:62"><expr pos:start="83:47" pos:end="83:62"><name pos:start="83:47" pos:end="83:62">EST_HORIZONTALQH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="87:33">case <expr pos:start="87:14" pos:end="87:32"><name pos:start="87:14" pos:end="87:32">EHCI_ASYNC_FINISHED</name></expr>:</case>

            <comment type="block" pos:start="89:13" pos:end="89:72">/* Should never happen, as this case is caught by fetchqh */</comment>

            <expr_stmt pos:start="91:13" pos:end="91:61"><expr pos:start="91:13" pos:end="91:60"><call pos:start="91:13" pos:end="91:60"><name pos:start="91:13" pos:end="91:26">ehci_set_state</name><argument_list pos:start="91:27" pos:end="91:60">(<argument pos:start="91:28" pos:end="91:34"><expr pos:start="91:28" pos:end="91:34"><name pos:start="91:28" pos:end="91:34"><name pos:start="91:28" pos:end="91:28">q</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:34">ehci</name></name></expr></argument>, <argument pos:start="91:37" pos:end="91:44"><expr pos:start="91:37" pos:end="91:44"><name pos:start="91:37" pos:end="91:44"><name pos:start="91:37" pos:end="91:37">q</name><operator pos:start="91:38" pos:end="91:39">-&gt;</operator><name pos:start="91:40" pos:end="91:44">async</name></name></expr></argument>, <argument pos:start="91:47" pos:end="91:59"><expr pos:start="91:47" pos:end="91:59"><name pos:start="91:47" pos:end="91:59">EST_EXECUTING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="97:9" pos:end="97:18"><expr pos:start="97:9" pos:end="97:17"><name pos:start="97:9" pos:end="97:13">again</name> <operator pos:start="97:15" pos:end="97:15">=</operator> <literal type="number" pos:start="97:17" pos:end="97:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="111:5">else <block pos:start="99:12" pos:end="111:5">{<block_content pos:start="101:9" pos:end="109:18">

        <expr_stmt pos:start="101:9" pos:end="101:33"><expr pos:start="101:9" pos:end="101:32"><name pos:start="101:9" pos:end="101:9">p</name> <operator pos:start="101:11" pos:end="101:11">=</operator> <call pos:start="101:13" pos:end="101:32"><name pos:start="101:13" pos:end="101:29">ehci_alloc_packet</name><argument_list pos:start="101:30" pos:end="101:32">(<argument pos:start="101:31" pos:end="101:31"><expr pos:start="101:31" pos:end="101:31"><name pos:start="101:31" pos:end="101:31">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:32"><expr pos:start="103:9" pos:end="103:31"><name pos:start="103:9" pos:end="103:18"><name pos:start="103:9" pos:end="103:9">p</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:18">qtdaddr</name></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:31"><name pos:start="103:22" pos:end="103:22">q</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:31">qtdaddr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:21"><expr pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:14"><name pos:start="105:9" pos:end="105:9">p</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:14">qtd</name></name> <operator pos:start="105:16" pos:end="105:16">=</operator> <name pos:start="105:18" pos:end="105:20">qtd</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:55"><expr pos:start="107:9" pos:end="107:54"><call pos:start="107:9" pos:end="107:54"><name pos:start="107:9" pos:end="107:22">ehci_set_state</name><argument_list pos:start="107:23" pos:end="107:54">(<argument pos:start="107:24" pos:end="107:30"><expr pos:start="107:24" pos:end="107:30"><name pos:start="107:24" pos:end="107:30"><name pos:start="107:24" pos:end="107:24">q</name><operator pos:start="107:25" pos:end="107:26">-&gt;</operator><name pos:start="107:27" pos:end="107:30">ehci</name></name></expr></argument>, <argument pos:start="107:33" pos:end="107:40"><expr pos:start="107:33" pos:end="107:40"><name pos:start="107:33" pos:end="107:40"><name pos:start="107:33" pos:end="107:33">q</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:40">async</name></name></expr></argument>, <argument pos:start="107:43" pos:end="107:53"><expr pos:start="107:43" pos:end="107:53"><name pos:start="107:43" pos:end="107:53">EST_EXECUTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:18"><expr pos:start="109:9" pos:end="109:17"><name pos:start="109:9" pos:end="109:13">again</name> <operator pos:start="109:15" pos:end="109:15">=</operator> <literal type="number" pos:start="109:17" pos:end="109:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="115:5" pos:end="115:17">return <expr pos:start="115:12" pos:end="115:16"><name pos:start="115:12" pos:end="115:16">again</name></expr>;</return>

</block_content>}</block></function>
</unit>
