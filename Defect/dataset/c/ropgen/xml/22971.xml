<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22971.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">get_audio_frame_size</name><parameter_list pos:start="1:32" pos:end="1:62">(<parameter pos:start="1:33" pos:end="1:51"><decl pos:start="1:33" pos:end="1:51"><type pos:start="1:33" pos:end="1:51"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">enc</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:61"><decl pos:start="1:54" pos:end="1:61"><type pos:start="1:54" pos:end="1:61"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:61">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:22">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">frame_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:18"><if pos:start="9:5" pos:end="11:18">if<condition pos:start="9:7" pos:end="9:40">(<expr pos:start="9:8" pos:end="9:39"><name pos:start="9:8" pos:end="9:20"><name pos:start="9:8" pos:end="9:10">enc</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:20">codec_id</name></name> <operator pos:start="9:22" pos:end="9:23">==</operator> <name pos:start="9:25" pos:end="9:39">CODEC_ID_VORBIS</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:18"><block_content pos:start="11:9" pos:end="11:18">

        <return pos:start="11:9" pos:end="11:18">return <expr pos:start="11:16" pos:end="11:17"><operator pos:start="11:16" pos:end="11:16">-</operator><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="45:5"><if pos:start="15:5" pos:end="41:5">if <condition pos:start="15:8" pos:end="15:29">(<expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:11">enc</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:23">frame_size</name></name> <operator pos:start="15:25" pos:end="15:26">&lt;=</operator> <literal type="number" pos:start="15:28" pos:end="15:28">1</literal></expr>)</condition> <block pos:start="15:31" pos:end="41:5">{<block_content pos:start="17:9" pos:end="39:9">

        <decl_stmt pos:start="17:9" pos:end="17:68"><decl pos:start="17:9" pos:end="17:67"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:27">bits_per_sample</name> <init pos:start="17:29" pos:end="17:67">= <expr pos:start="17:31" pos:end="17:67"><call pos:start="17:31" pos:end="17:67"><name pos:start="17:31" pos:end="17:52">av_get_bits_per_sample</name><argument_list pos:start="17:53" pos:end="17:67">(<argument pos:start="17:54" pos:end="17:66"><expr pos:start="17:54" pos:end="17:66"><name pos:start="17:54" pos:end="17:66"><name pos:start="17:54" pos:end="17:56">enc</name><operator pos:start="17:57" pos:end="17:58">-&gt;</operator><name pos:start="17:59" pos:end="17:66">codec_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="39:9"><if pos:start="21:9" pos:end="29:9">if <condition pos:start="21:12" pos:end="21:28">(<expr pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:27">bits_per_sample</name></expr>)</condition> <block pos:start="21:30" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:73">

            <if_stmt pos:start="23:13" pos:end="25:26"><if pos:start="23:13" pos:end="25:26">if <condition pos:start="23:16" pos:end="23:35">(<expr pos:start="23:17" pos:end="23:34"><name pos:start="23:17" pos:end="23:29"><name pos:start="23:17" pos:end="23:19">enc</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:29">channels</name></name> <operator pos:start="23:31" pos:end="23:32">==</operator> <literal type="number" pos:start="23:34" pos:end="23:34">0</literal></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:26"><block_content pos:start="25:17" pos:end="25:26">

                <return pos:start="25:17" pos:end="25:26">return <expr pos:start="25:24" pos:end="25:25"><operator pos:start="25:24" pos:end="25:24">-</operator><literal type="number" pos:start="25:25" pos:end="25:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:73"><expr pos:start="27:13" pos:end="27:72"><name pos:start="27:13" pos:end="27:22">frame_size</name> <operator pos:start="27:24" pos:end="27:24">=</operator> <operator pos:start="27:26" pos:end="27:26">(</operator><name pos:start="27:27" pos:end="27:30">size</name> <operator pos:start="27:32" pos:end="27:33">&lt;&lt;</operator> <literal type="number" pos:start="27:35" pos:end="27:35">3</literal><operator pos:start="27:36" pos:end="27:36">)</operator> <operator pos:start="27:38" pos:end="27:38">/</operator> <operator pos:start="27:40" pos:end="27:40">(</operator><name pos:start="27:41" pos:end="27:55">bits_per_sample</name> <operator pos:start="27:57" pos:end="27:57">*</operator> <name pos:start="27:59" pos:end="27:71"><name pos:start="27:59" pos:end="27:61">enc</name><operator pos:start="27:62" pos:end="27:63">-&gt;</operator><name pos:start="27:64" pos:end="27:71">channels</name></name><operator pos:start="27:72" pos:end="27:72">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="39:9">else <block pos:start="29:16" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:71">

            <comment type="block" pos:start="31:13" pos:end="31:50">/* used for example by ADPCM codecs */</comment>

            <if_stmt pos:start="33:13" pos:end="35:26"><if pos:start="33:13" pos:end="35:26">if <condition pos:start="33:16" pos:end="33:35">(<expr pos:start="33:17" pos:end="33:34"><name pos:start="33:17" pos:end="33:29"><name pos:start="33:17" pos:end="33:19">enc</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:29">bit_rate</name></name> <operator pos:start="33:31" pos:end="33:32">==</operator> <literal type="number" pos:start="33:34" pos:end="33:34">0</literal></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:26"><block_content pos:start="35:17" pos:end="35:26">

                <return pos:start="35:17" pos:end="35:26">return <expr pos:start="35:24" pos:end="35:25"><operator pos:start="35:24" pos:end="35:24">-</operator><literal type="number" pos:start="35:25" pos:end="35:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:71"><expr pos:start="37:13" pos:end="37:70"><name pos:start="37:13" pos:end="37:22">frame_size</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <operator pos:start="37:26" pos:end="37:26">(</operator><name pos:start="37:27" pos:end="37:30">size</name> <operator pos:start="37:32" pos:end="37:32">*</operator> <literal type="number" pos:start="37:34" pos:end="37:34">8</literal> <operator pos:start="37:36" pos:end="37:36">*</operator> <name pos:start="37:38" pos:end="37:53"><name pos:start="37:38" pos:end="37:40">enc</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:53">sample_rate</name></name><operator pos:start="37:54" pos:end="37:54">)</operator> <operator pos:start="37:56" pos:end="37:56">/</operator> <name pos:start="37:58" pos:end="37:70"><name pos:start="37:58" pos:end="37:60">enc</name><operator pos:start="37:61" pos:end="37:62">-&gt;</operator><name pos:start="37:63" pos:end="37:70">bit_rate</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="45:5">else <block pos:start="41:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:37">

        <expr_stmt pos:start="43:9" pos:end="43:37"><expr pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:18">frame_size</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:36"><name pos:start="43:22" pos:end="43:24">enc</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:36">frame_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="47:5" pos:end="47:22">return <expr pos:start="47:12" pos:end="47:21"><name pos:start="47:12" pos:end="47:21">frame_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
