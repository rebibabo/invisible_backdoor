<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18260.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:33"><name pos:start="1:1" pos:end="1:10">truncate_f</name><argument_list pos:start="1:11" pos:end="1:33">(<argument pos:start="1:12" pos:end="1:19">int argc</argument>, <argument pos:start="1:22" pos:end="1:32">char **argv</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:9" pos:end="35:17">

	<decl_stmt pos:start="5:9" pos:end="5:23"><decl pos:start="5:9" pos:end="5:22"><type pos:start="5:9" pos:end="5:15"><name pos:start="5:9" pos:end="5:15">int64_t</name></type> <name pos:start="5:17" pos:end="5:22">offset</name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:16"><decl pos:start="7:9" pos:end="7:15"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:15">ret</name></decl>;</decl_stmt>



	<expr_stmt pos:start="11:9" pos:end="11:33"><expr pos:start="11:9" pos:end="11:32"><name pos:start="11:9" pos:end="11:14">offset</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <call pos:start="11:18" pos:end="11:32"><name pos:start="11:18" pos:end="11:23">cvtnum</name><argument_list pos:start="11:24" pos:end="11:32">(<argument pos:start="11:25" pos:end="11:31"><expr pos:start="11:25" pos:end="11:31"><name pos:start="11:25" pos:end="11:31"><name pos:start="11:25" pos:end="11:28">argv</name><index pos:start="11:29" pos:end="11:31">[<expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="13:9" pos:end="19:9"><if pos:start="13:9" pos:end="19:9">if <condition pos:start="13:12" pos:end="13:23">(<expr pos:start="13:13" pos:end="13:22"><name pos:start="13:13" pos:end="13:18">offset</name> <operator pos:start="13:20" pos:end="13:20">&lt;</operator> <literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr>)</condition> <block pos:start="13:25" pos:end="19:9">{<block_content pos:start="15:17" pos:end="17:25">

		<expr_stmt pos:start="15:17" pos:end="15:73"><expr pos:start="15:17" pos:end="15:72"><call pos:start="15:17" pos:end="15:72"><name pos:start="15:17" pos:end="15:22">printf</name><argument_list pos:start="15:23" pos:end="15:72">(<argument pos:start="15:24" pos:end="15:62"><expr pos:start="15:24" pos:end="15:62"><literal type="string" pos:start="15:24" pos:end="15:62">"non-numeric truncate argument -- %s\n"</literal></expr></argument>, <argument pos:start="15:65" pos:end="15:71"><expr pos:start="15:65" pos:end="15:71"><name pos:start="15:65" pos:end="15:71"><name pos:start="15:65" pos:end="15:68">argv</name><index pos:start="15:69" pos:end="15:71">[<expr pos:start="15:70" pos:end="15:70"><literal type="number" pos:start="15:70" pos:end="15:70">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="17:17" pos:end="17:25">return <expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr>;</return>

	</block_content>}</block></if></if_stmt>



	<expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:39"><name pos:start="23:15" pos:end="23:27">bdrv_truncate</name><argument_list pos:start="23:28" pos:end="23:39">(<argument pos:start="23:29" pos:end="23:30"><expr pos:start="23:29" pos:end="23:30"><name pos:start="23:29" pos:end="23:30">bs</name></expr></argument>, <argument pos:start="23:33" pos:end="23:38"><expr pos:start="23:33" pos:end="23:38"><name pos:start="23:33" pos:end="23:38">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:15">ret</name> <operator pos:start="25:17" pos:end="25:17">&lt;</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>)</condition> <block pos:start="25:22" pos:end="31:9">{<block_content pos:start="27:17" pos:end="29:25">

		<expr_stmt pos:start="27:17" pos:end="27:54"><expr pos:start="27:17" pos:end="27:53"><call pos:start="27:17" pos:end="27:53"><name pos:start="27:17" pos:end="27:22">printf</name><argument_list pos:start="27:23" pos:end="27:53">(<argument pos:start="27:24" pos:end="27:37"><expr pos:start="27:24" pos:end="27:37"><literal type="string" pos:start="27:24" pos:end="27:37">"truncate: %s"</literal></expr></argument>, <argument pos:start="27:40" pos:end="27:52"><expr pos:start="27:40" pos:end="27:52"><call pos:start="27:40" pos:end="27:52"><name pos:start="27:40" pos:end="27:47">strerror</name><argument_list pos:start="27:48" pos:end="27:52">(<argument pos:start="27:49" pos:end="27:51"><expr pos:start="27:49" pos:end="27:51"><name pos:start="27:49" pos:end="27:51">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="29:17" pos:end="29:25">return <expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>;</return>

	</block_content>}</block></if></if_stmt>



	<return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return>

</block_content>}</block>
</unit>
