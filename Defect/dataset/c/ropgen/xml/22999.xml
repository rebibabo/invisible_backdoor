<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22999.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:32">ff_check_pixfmt_descriptors</name><parameter_list pos:start="1:33" pos:end="1:38">(<parameter pos:start="1:34" pos:end="1:37"><decl pos:start="1:34" pos:end="1:37"><type pos:start="1:34" pos:end="1:37"><name pos:start="1:34" pos:end="1:37">void</name></type></decl></parameter>)</parameter_list><block pos:start="1:39" pos:end="45:1">{<block_content pos:start="3:5" pos:end="43:5">

    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">j</name></decl>;</decl_stmt>



    <for pos:start="7:5" pos:end="43:5">for <control pos:start="7:9" pos:end="7:60">(<init pos:start="7:10" pos:end="7:13"><expr pos:start="7:10" pos:end="7:12"><name pos:start="7:10" pos:end="7:10">i</name><operator pos:start="7:11" pos:end="7:11">=</operator><literal type="number" pos:start="7:12" pos:end="7:12">0</literal></expr>;</init> <condition pos:start="7:15" pos:end="7:55"><expr pos:start="7:15" pos:end="7:54"><name pos:start="7:15" pos:end="7:15">i</name><operator pos:start="7:16" pos:end="7:16">&lt;</operator><call pos:start="7:17" pos:end="7:54"><name pos:start="7:17" pos:end="7:30">FF_ARRAY_ELEMS</name><argument_list pos:start="7:31" pos:end="7:54">(<argument pos:start="7:32" pos:end="7:53"><expr pos:start="7:32" pos:end="7:53"><name pos:start="7:32" pos:end="7:53">av_pix_fmt_descriptors</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="7:57" pos:end="7:59"><expr pos:start="7:57" pos:end="7:59"><name pos:start="7:57" pos:end="7:57">i</name><operator pos:start="7:58" pos:end="7:59">++</operator></expr></incr>)</control> <block pos:start="7:62" pos:end="43:5">{<block_content pos:start="9:9" pos:end="41:9">

        <decl_stmt pos:start="9:9" pos:end="9:65"><decl pos:start="9:9" pos:end="9:64"><type pos:start="9:9" pos:end="9:34"><specifier pos:start="9:9" pos:end="9:13">const</specifier> <name pos:start="9:15" pos:end="9:32">AVPixFmtDescriptor</name> <modifier pos:start="9:34" pos:end="9:34">*</modifier></type><name pos:start="9:35" pos:end="9:35">d</name> <init pos:start="9:37" pos:end="9:64">= <expr pos:start="9:39" pos:end="9:64"><operator pos:start="9:39" pos:end="9:39">&amp;</operator><name pos:start="9:40" pos:end="9:64"><name pos:start="9:40" pos:end="9:61">av_pix_fmt_descriptors</name><index pos:start="9:62" pos:end="9:64">[<expr pos:start="9:63" pos:end="9:63"><name pos:start="9:63" pos:end="9:63">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="13:9" pos:end="15:21"><if pos:start="13:9" pos:end="15:21">if <condition pos:start="13:12" pos:end="13:97">(<expr pos:start="13:13" pos:end="13:96"><operator pos:start="13:13" pos:end="13:13">!</operator><name pos:start="13:14" pos:end="13:20"><name pos:start="13:14" pos:end="13:14">d</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:20">name</name></name> <operator pos:start="13:22" pos:end="13:23">&amp;&amp;</operator> <operator pos:start="13:25" pos:end="13:25">!</operator><name pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:26">d</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:41">nb_components</name></name> <operator pos:start="13:43" pos:end="13:44">&amp;&amp;</operator> <operator pos:start="13:46" pos:end="13:46">!</operator><name pos:start="13:47" pos:end="13:62"><name pos:start="13:47" pos:end="13:47">d</name><operator pos:start="13:48" pos:end="13:49">-&gt;</operator><name pos:start="13:50" pos:end="13:62">log2_chroma_w</name></name> <operator pos:start="13:64" pos:end="13:65">&amp;&amp;</operator> <operator pos:start="13:67" pos:end="13:67">!</operator><name pos:start="13:68" pos:end="13:83"><name pos:start="13:68" pos:end="13:68">d</name><operator pos:start="13:69" pos:end="13:70">-&gt;</operator><name pos:start="13:71" pos:end="13:83">log2_chroma_h</name></name> <operator pos:start="13:85" pos:end="13:86">&amp;&amp;</operator> <operator pos:start="13:88" pos:end="13:88">!</operator><name pos:start="13:89" pos:end="13:96"><name pos:start="13:89" pos:end="13:89">d</name><operator pos:start="13:90" pos:end="13:91">-&gt;</operator><name pos:start="13:92" pos:end="13:96">flags</name></name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:21"><block_content pos:start="15:13" pos:end="15:21">

            <continue pos:start="15:13" pos:end="15:21">continue;</continue></block_content></block></if></if_stmt>

<comment type="line" pos:start="17:1" pos:end="17:65">//         av_log(NULL, AV_LOG_DEBUG, "Checking: %s\n", d-&gt;name);</comment>

        <expr_stmt pos:start="19:9" pos:end="19:42"><expr pos:start="19:9" pos:end="19:41"><call pos:start="19:9" pos:end="19:41"><name pos:start="19:9" pos:end="19:18">av_assert0</name><argument_list pos:start="19:19" pos:end="19:41">(<argument pos:start="19:20" pos:end="19:40"><expr pos:start="19:20" pos:end="19:40"><name pos:start="19:20" pos:end="19:35"><name pos:start="19:20" pos:end="19:20">d</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:35">log2_chroma_w</name></name> <operator pos:start="19:37" pos:end="19:38">&lt;=</operator> <literal type="number" pos:start="19:40" pos:end="19:40">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:42"><expr pos:start="21:9" pos:end="21:41"><call pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:18">av_assert0</name><argument_list pos:start="21:19" pos:end="21:41">(<argument pos:start="21:20" pos:end="21:40"><expr pos:start="21:20" pos:end="21:40"><name pos:start="21:20" pos:end="21:35"><name pos:start="21:20" pos:end="21:20">d</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:35">log2_chroma_h</name></name> <operator pos:start="21:37" pos:end="21:38">&lt;=</operator> <literal type="number" pos:start="21:40" pos:end="21:40">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:42"><expr pos:start="23:9" pos:end="23:41"><call pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:18">av_assert0</name><argument_list pos:start="23:19" pos:end="23:41">(<argument pos:start="23:20" pos:end="23:40"><expr pos:start="23:20" pos:end="23:40"><name pos:start="23:20" pos:end="23:35"><name pos:start="23:20" pos:end="23:20">d</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:35">nb_components</name></name> <operator pos:start="23:37" pos:end="23:38">&lt;=</operator> <literal type="number" pos:start="23:40" pos:end="23:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><call pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:18">av_assert0</name><argument_list pos:start="25:19" pos:end="25:41">(<argument pos:start="25:20" pos:end="25:40"><expr pos:start="25:20" pos:end="25:40"><name pos:start="25:20" pos:end="25:26"><name pos:start="25:20" pos:end="25:20">d</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:26">name</name></name> <operator pos:start="25:28" pos:end="25:29">&amp;&amp;</operator> <name pos:start="25:31" pos:end="25:40"><name pos:start="25:31" pos:end="25:31">d</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:37">name</name><index pos:start="25:38" pos:end="25:40">[<expr pos:start="25:39" pos:end="25:39"><literal type="number" pos:start="25:39" pos:end="25:39">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:97"><expr pos:start="27:9" pos:end="27:96"><call pos:start="27:9" pos:end="27:96"><name pos:start="27:9" pos:end="27:18">av_assert0</name><argument_list pos:start="27:19" pos:end="27:96">(<argument pos:start="27:20" pos:end="27:95"><expr pos:start="27:20" pos:end="27:95"><operator pos:start="27:20" pos:end="27:20">(</operator><name pos:start="27:21" pos:end="27:36"><name pos:start="27:21" pos:end="27:21">d</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:36">nb_components</name></name><operator pos:start="27:37" pos:end="27:38">==</operator><literal type="number" pos:start="27:39" pos:end="27:39">4</literal> <operator pos:start="27:41" pos:end="27:42">||</operator> <name pos:start="27:44" pos:end="27:59"><name pos:start="27:44" pos:end="27:44">d</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:59">nb_components</name></name><operator pos:start="27:60" pos:end="27:61">==</operator><literal type="number" pos:start="27:62" pos:end="27:62">2</literal><operator pos:start="27:63" pos:end="27:63">)</operator> <operator pos:start="27:65" pos:end="27:66">==</operator> <operator pos:start="27:68" pos:end="27:68">!</operator><operator pos:start="27:69" pos:end="27:69">!</operator><operator pos:start="27:70" pos:end="27:70">(</operator><name pos:start="27:71" pos:end="27:78"><name pos:start="27:71" pos:end="27:71">d</name><operator pos:start="27:72" pos:end="27:73">-&gt;</operator><name pos:start="27:74" pos:end="27:78">flags</name></name> <operator pos:start="27:80" pos:end="27:80">&amp;</operator> <name pos:start="27:82" pos:end="27:94">PIX_FMT_ALPHA</name><operator pos:start="27:95" pos:end="27:95">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:49"><expr pos:start="29:9" pos:end="29:48"><call pos:start="29:9" pos:end="29:48"><name pos:start="29:9" pos:end="29:18">av_assert2</name><argument_list pos:start="29:19" pos:end="29:48">(<argument pos:start="29:20" pos:end="29:47"><expr pos:start="29:20" pos:end="29:47"><call pos:start="29:20" pos:end="29:42"><name pos:start="29:20" pos:end="29:33">av_get_pix_fmt</name><argument_list pos:start="29:34" pos:end="29:42">(<argument pos:start="29:35" pos:end="29:41"><expr pos:start="29:35" pos:end="29:41"><name pos:start="29:35" pos:end="29:41"><name pos:start="29:35" pos:end="29:35">d</name><operator pos:start="29:36" pos:end="29:37">-&gt;</operator><name pos:start="29:38" pos:end="29:41">name</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:44" pos:end="29:45">==</operator> <name pos:start="29:47" pos:end="29:47">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="33:9" pos:end="41:9">for <control pos:start="33:13" pos:end="33:49">(<init pos:start="33:14" pos:end="33:17"><expr pos:start="33:14" pos:end="33:16"><name pos:start="33:14" pos:end="33:14">j</name><operator pos:start="33:15" pos:end="33:15">=</operator><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</init> <condition pos:start="33:19" pos:end="33:44"><expr pos:start="33:19" pos:end="33:43"><name pos:start="33:19" pos:end="33:19">j</name><operator pos:start="33:20" pos:end="33:20">&lt;</operator><call pos:start="33:21" pos:end="33:43"><name pos:start="33:21" pos:end="33:34">FF_ARRAY_ELEMS</name><argument_list pos:start="33:35" pos:end="33:43">(<argument pos:start="33:36" pos:end="33:42"><expr pos:start="33:36" pos:end="33:42"><name pos:start="33:36" pos:end="33:42"><name pos:start="33:36" pos:end="33:36">d</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:42">comp</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="33:46" pos:end="33:48"><expr pos:start="33:46" pos:end="33:48"><name pos:start="33:46" pos:end="33:46">j</name><operator pos:start="33:47" pos:end="33:48">++</operator></expr></incr>)</control> <block pos:start="33:51" pos:end="41:9">{<block_content pos:start="35:13" pos:end="39:110">

            <decl_stmt pos:start="35:13" pos:end="35:57"><decl pos:start="35:13" pos:end="35:56"><type pos:start="35:13" pos:end="35:41"><specifier pos:start="35:13" pos:end="35:17">const</specifier> <name pos:start="35:19" pos:end="35:39">AVComponentDescriptor</name> <modifier pos:start="35:41" pos:end="35:41">*</modifier></type><name pos:start="35:42" pos:end="35:42">c</name> <init pos:start="35:44" pos:end="35:56">= <expr pos:start="35:46" pos:end="35:56"><operator pos:start="35:46" pos:end="35:46">&amp;</operator><name pos:start="35:47" pos:end="35:56"><name pos:start="35:47" pos:end="35:47">d</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:53">comp</name><index pos:start="35:54" pos:end="35:56">[<expr pos:start="35:55" pos:end="35:55"><name pos:start="35:55" pos:end="35:55">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="37:13" pos:end="39:110"><if pos:start="37:13" pos:end="39:110">if<condition pos:start="37:15" pos:end="37:35">(<expr pos:start="37:16" pos:end="37:34"><name pos:start="37:16" pos:end="37:16">j</name><operator pos:start="37:17" pos:end="37:18">&gt;=</operator><name pos:start="37:19" pos:end="37:34"><name pos:start="37:19" pos:end="37:19">d</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:34">nb_components</name></name></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:110"><block_content pos:start="39:17" pos:end="39:110">

                <expr_stmt pos:start="39:17" pos:end="39:110"><expr pos:start="39:17" pos:end="39:109"><call pos:start="39:17" pos:end="39:109"><name pos:start="39:17" pos:end="39:26">av_assert0</name><argument_list pos:start="39:27" pos:end="39:109">(<argument pos:start="39:28" pos:end="39:108"><expr pos:start="39:28" pos:end="39:108"><operator pos:start="39:28" pos:end="39:28">!</operator><name pos:start="39:29" pos:end="39:36"><name pos:start="39:29" pos:end="39:29">c</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:36">plane</name></name> <operator pos:start="39:38" pos:end="39:39">&amp;&amp;</operator> <operator pos:start="39:41" pos:end="39:41">!</operator><name pos:start="39:42" pos:end="39:55"><name pos:start="39:42" pos:end="39:42">c</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:55">step_minus1</name></name> <operator pos:start="39:57" pos:end="39:58">&amp;&amp;</operator> <operator pos:start="39:60" pos:end="39:60">!</operator><name pos:start="39:61" pos:end="39:75"><name pos:start="39:61" pos:end="39:61">c</name><operator pos:start="39:62" pos:end="39:63">-&gt;</operator><name pos:start="39:64" pos:end="39:75">offset_plus1</name></name> <operator pos:start="39:77" pos:end="39:78">&amp;&amp;</operator> <operator pos:start="39:80" pos:end="39:80">!</operator><name pos:start="39:81" pos:end="39:88"><name pos:start="39:81" pos:end="39:81">c</name><operator pos:start="39:82" pos:end="39:83">-&gt;</operator><name pos:start="39:84" pos:end="39:88">shift</name></name> <operator pos:start="39:90" pos:end="39:91">&amp;&amp;</operator> <operator pos:start="39:93" pos:end="39:93">!</operator><name pos:start="39:94" pos:end="39:108"><name pos:start="39:94" pos:end="39:94">c</name><operator pos:start="39:95" pos:end="39:96">-&gt;</operator><name pos:start="39:97" pos:end="39:108">depth_minus1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
