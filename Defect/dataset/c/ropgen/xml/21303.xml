<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21303.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:32">ff_rtsp_setup_output_streams</name><parameter_list pos:start="1:33" pos:end="1:70">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:69"><decl pos:start="1:54" pos:end="1:69"><type pos:start="1:54" pos:end="1:69"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:63">char</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">RTSPState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">rt</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:21">RTSPMessageHeader</name></type> <name pos:start="7:23" pos:end="7:28">reply1</name></decl>, <decl pos:start="7:31" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:21"><modifier pos:start="7:31" pos:end="7:31">*</modifier></type><name pos:start="7:32" pos:end="7:36">reply</name> <init pos:start="7:38" pos:end="7:46">= <expr pos:start="7:40" pos:end="7:46"><operator pos:start="7:40" pos:end="7:40">&amp;</operator><name pos:start="7:41" pos:end="7:46">reply1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:13">sdp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:19">AVFormatContext</name></type> <name pos:start="13:21" pos:end="13:27">sdp_ctx</name></decl>, <decl pos:start="13:30" pos:end="13:42"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:30" pos:end="13:30">*</modifier></type><name pos:start="13:31" pos:end="13:42"><name pos:start="13:31" pos:end="13:39">ctx_array</name><index pos:start="13:40" pos:end="13:42">[<expr pos:start="13:41" pos:end="13:41"><literal type="number" pos:start="13:41" pos:end="13:41">1</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:26">start_time_realtime</name></name> <operator pos:start="17:28" pos:end="17:28">=</operator> <call pos:start="17:30" pos:end="17:41"><name pos:start="17:30" pos:end="17:39">av_gettime</name><argument_list pos:start="17:40" pos:end="17:41">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:29">/* Announce the stream */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:7">sdp</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:34"><name pos:start="23:11" pos:end="23:20">av_mallocz</name><argument_list pos:start="23:21" pos:end="23:34">(<argument pos:start="23:22" pos:end="23:33"><expr pos:start="23:22" pos:end="23:33"><name pos:start="23:22" pos:end="23:33">SDP_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:31"><if pos:start="25:5" pos:end="27:31">if <condition pos:start="25:8" pos:end="25:20">(<expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:11">sdp</name> <operator pos:start="25:13" pos:end="25:14">==</operator> <name pos:start="25:16" pos:end="25:19">NULL</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <comment type="block" pos:start="29:5" pos:end="51:7">/* We create the SDP based on the RTSP AVFormatContext where we

     * aren't allowed to change the filename field. (We create the SDP

     * based on the RTSP context since the contexts for the RTP streams

     * don't exist yet.) In order to specify a custom URL with the actual

     * peer IP instead of the originally specified hostname, we create

     * a temporary copy of the AVFormatContext, where the custom URL is set.

     *

     * FIXME: Create the SDP without copying the AVFormatContext.

     * This either requires setting up the RTP stream AVFormatContexts

     * already here (complicating things immensely) or getting a more

     * flexible SDP creation interface.

     */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:17"><expr pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:11">sdp_ctx</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <operator pos:start="53:15" pos:end="53:15">*</operator><name pos:start="53:16" pos:end="53:16">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="57:46"><expr pos:start="55:5" pos:end="57:45"><call pos:start="55:5" pos:end="57:45"><name pos:start="55:5" pos:end="55:15">ff_url_join</name><argument_list pos:start="55:16" pos:end="57:45">(<argument pos:start="55:17" pos:end="55:32"><expr pos:start="55:17" pos:end="55:32"><name pos:start="55:17" pos:end="55:32"><name pos:start="55:17" pos:end="55:23">sdp_ctx</name><operator pos:start="55:24" pos:end="55:24">.</operator><name pos:start="55:25" pos:end="55:32">filename</name></name></expr></argument>, <argument pos:start="55:35" pos:end="55:58"><expr pos:start="55:35" pos:end="55:58"><sizeof pos:start="55:35" pos:end="55:58">sizeof<argument_list pos:start="55:41" pos:end="55:58">(<argument pos:start="55:42" pos:end="55:57"><expr pos:start="55:42" pos:end="55:57"><name pos:start="55:42" pos:end="55:57"><name pos:start="55:42" pos:end="55:48">sdp_ctx</name><operator pos:start="55:49" pos:end="55:49">.</operator><name pos:start="55:50" pos:end="55:57">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                <argument pos:start="57:17" pos:end="57:22"><expr pos:start="57:17" pos:end="57:22"><literal type="string" pos:start="57:17" pos:end="57:22">"rtsp"</literal></expr></argument>, <argument pos:start="57:25" pos:end="57:28"><expr pos:start="57:25" pos:end="57:28"><name pos:start="57:25" pos:end="57:28">NULL</name></expr></argument>, <argument pos:start="57:31" pos:end="57:34"><expr pos:start="57:31" pos:end="57:34"><name pos:start="57:31" pos:end="57:34">addr</name></expr></argument>, <argument pos:start="57:37" pos:end="57:38"><expr pos:start="57:37" pos:end="57:38"><operator pos:start="57:37" pos:end="57:37">-</operator><literal type="number" pos:start="57:38" pos:end="57:38">1</literal></expr></argument>, <argument pos:start="57:41" pos:end="57:44"><expr pos:start="57:41" pos:end="57:44"><name pos:start="57:41" pos:end="57:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:28"><expr pos:start="59:5" pos:end="59:27"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:13">ctx_array</name><index pos:start="59:14" pos:end="59:16">[<expr pos:start="59:15" pos:end="59:15"><literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>]</index></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <operator pos:start="59:20" pos:end="59:20">&amp;</operator><name pos:start="59:21" pos:end="59:27">sdp_ctx</name></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:56">(<expr pos:start="61:9" pos:end="61:55"><call pos:start="61:9" pos:end="61:55"><name pos:start="61:9" pos:end="61:22">avf_sdp_create</name><argument_list pos:start="61:23" pos:end="61:55">(<argument pos:start="61:24" pos:end="61:32"><expr pos:start="61:24" pos:end="61:32"><name pos:start="61:24" pos:end="61:32">ctx_array</name></expr></argument>, <argument pos:start="61:35" pos:end="61:35"><expr pos:start="61:35" pos:end="61:35"><literal type="number" pos:start="61:35" pos:end="61:35">1</literal></expr></argument>, <argument pos:start="61:38" pos:end="61:40"><expr pos:start="61:38" pos:end="61:40"><name pos:start="61:38" pos:end="61:40">sdp</name></expr></argument>, <argument pos:start="61:43" pos:end="61:54"><expr pos:start="61:43" pos:end="61:54"><name pos:start="61:43" pos:end="61:54">SDP_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:58" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:35">

        <expr_stmt pos:start="63:9" pos:end="63:21"><expr pos:start="63:9" pos:end="63:20"><call pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:15">av_free</name><argument_list pos:start="63:16" pos:end="63:20">(<argument pos:start="63:17" pos:end="63:19"><expr pos:start="63:17" pos:end="63:19"><name pos:start="63:17" pos:end="63:19">sdp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:35">return <expr pos:start="65:16" pos:end="65:34"><name pos:start="65:16" pos:end="65:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:49"><expr pos:start="69:5" pos:end="69:48"><call pos:start="69:5" pos:end="69:48"><name pos:start="69:5" pos:end="69:10">av_log</name><argument_list pos:start="69:11" pos:end="69:48">(<argument pos:start="69:12" pos:end="69:12"><expr pos:start="69:12" pos:end="69:12"><name pos:start="69:12" pos:end="69:12">s</name></expr></argument>, <argument pos:start="69:15" pos:end="69:28"><expr pos:start="69:15" pos:end="69:28"><name pos:start="69:15" pos:end="69:28">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="69:31" pos:end="69:42"><expr pos:start="69:31" pos:end="69:42"><literal type="string" pos:start="69:31" pos:end="69:42">"SDP:\n%s\n"</literal></expr></argument>, <argument pos:start="69:45" pos:end="69:47"><expr pos:start="69:45" pos:end="69:47"><name pos:start="69:45" pos:end="69:47">sdp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="75:65"><expr pos:start="71:5" pos:end="75:64"><call pos:start="71:5" pos:end="75:64"><name pos:start="71:5" pos:end="71:33">ff_rtsp_send_cmd_with_content</name><argument_list pos:start="71:34" pos:end="75:64">(<argument pos:start="71:35" pos:end="71:35"><expr pos:start="71:35" pos:end="71:35"><name pos:start="71:35" pos:end="71:35">s</name></expr></argument>, <argument pos:start="71:38" pos:end="71:47"><expr pos:start="71:38" pos:end="71:47"><literal type="string" pos:start="71:38" pos:end="71:47">"ANNOUNCE"</literal></expr></argument>, <argument pos:start="71:50" pos:end="71:64"><expr pos:start="71:50" pos:end="71:64"><name pos:start="71:50" pos:end="71:64"><name pos:start="71:50" pos:end="71:51">rt</name><operator pos:start="71:52" pos:end="71:53">-&gt;</operator><name pos:start="71:54" pos:end="71:64">control_uri</name></name></expr></argument>,

                                  <argument pos:start="73:35" pos:end="73:69"><expr pos:start="73:35" pos:end="73:69"><literal type="string" pos:start="73:35" pos:end="73:69">"Content-Type: application/sdp\r\n"</literal></expr></argument>,

                                  <argument pos:start="75:35" pos:end="75:39"><expr pos:start="75:35" pos:end="75:39"><name pos:start="75:35" pos:end="75:39">reply</name></expr></argument>, <argument pos:start="75:42" pos:end="75:45"><expr pos:start="75:42" pos:end="75:45"><name pos:start="75:42" pos:end="75:45">NULL</name></expr></argument>, <argument pos:start="75:48" pos:end="75:50"><expr pos:start="75:48" pos:end="75:50"><name pos:start="75:48" pos:end="75:50">sdp</name></expr></argument>, <argument pos:start="75:53" pos:end="75:63"><expr pos:start="75:53" pos:end="75:63"><call pos:start="75:53" pos:end="75:63"><name pos:start="75:53" pos:end="75:58">strlen</name><argument_list pos:start="75:59" pos:end="75:63">(<argument pos:start="75:60" pos:end="75:62"><expr pos:start="75:60" pos:end="75:62"><name pos:start="75:60" pos:end="75:62">sdp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:17"><expr pos:start="77:5" pos:end="77:16"><call pos:start="77:5" pos:end="77:16"><name pos:start="77:5" pos:end="77:11">av_free</name><argument_list pos:start="77:12" pos:end="77:16">(<argument pos:start="77:13" pos:end="77:15"><expr pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:15">sdp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="81:35"><if pos:start="79:5" pos:end="81:35">if <condition pos:start="79:8" pos:end="79:45">(<expr pos:start="79:9" pos:end="79:44"><name pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:13">reply</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:26">status_code</name></name> <operator pos:start="79:28" pos:end="79:29">!=</operator> <name pos:start="79:31" pos:end="79:44">RTSP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:35"><block_content pos:start="81:9" pos:end="81:35">

        <return pos:start="81:9" pos:end="81:35">return <expr pos:start="81:16" pos:end="81:34"><name pos:start="81:16" pos:end="81:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:50">/* Set up the RTSPStreams for each AVStream */</comment>

    <for pos:start="87:5" pos:end="119:5">for <control pos:start="87:9" pos:end="87:39">(<init pos:start="87:10" pos:end="87:15"><expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:10">i</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr>;</init> <condition pos:start="87:17" pos:end="87:34"><expr pos:start="87:17" pos:end="87:33"><name pos:start="87:17" pos:end="87:17">i</name> <operator pos:start="87:19" pos:end="87:19">&lt;</operator> <name pos:start="87:21" pos:end="87:33"><name pos:start="87:21" pos:end="87:21">s</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:33">nb_streams</name></name></expr>;</condition> <incr pos:start="87:36" pos:end="87:38"><expr pos:start="87:36" pos:end="87:38"><name pos:start="87:36" pos:end="87:36">i</name><operator pos:start="87:37" pos:end="87:38">++</operator></expr></incr>)</control> <block pos:start="87:41" pos:end="119:5">{<block_content pos:start="89:9" pos:end="117:39">

        <decl_stmt pos:start="89:9" pos:end="89:28"><decl pos:start="89:9" pos:end="89:27"><type pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:18">RTSPStream</name> <modifier pos:start="89:20" pos:end="89:20">*</modifier></type><name pos:start="89:21" pos:end="89:27">rtsp_st</name></decl>;</decl_stmt>

        <decl_stmt pos:start="91:9" pos:end="91:37"><decl pos:start="91:9" pos:end="91:36"><type pos:start="91:9" pos:end="91:18"><name pos:start="91:9" pos:end="91:16">AVStream</name> <modifier pos:start="91:18" pos:end="91:18">*</modifier></type><name pos:start="91:19" pos:end="91:20">st</name> <init pos:start="91:22" pos:end="91:36">= <expr pos:start="91:24" pos:end="91:36"><name pos:start="91:24" pos:end="91:36"><name pos:start="91:24" pos:end="91:24">s</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:33">streams</name><index pos:start="91:34" pos:end="91:36">[<expr pos:start="91:35" pos:end="91:35"><name pos:start="91:35" pos:end="91:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:49"><expr pos:start="95:9" pos:end="95:48"><name pos:start="95:9" pos:end="95:15">rtsp_st</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:48"><name pos:start="95:19" pos:end="95:28">av_mallocz</name><argument_list pos:start="95:29" pos:end="95:48">(<argument pos:start="95:30" pos:end="95:47"><expr pos:start="95:30" pos:end="95:47"><sizeof pos:start="95:30" pos:end="95:47">sizeof<argument_list pos:start="95:36" pos:end="95:47">(<argument pos:start="95:37" pos:end="95:46"><expr pos:start="95:37" pos:end="95:46"><name pos:start="95:37" pos:end="95:46">RTSPStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="99:35"><if pos:start="97:9" pos:end="99:35">if <condition pos:start="97:12" pos:end="97:21">(<expr pos:start="97:13" pos:end="97:20"><operator pos:start="97:13" pos:end="97:13">!</operator><name pos:start="97:14" pos:end="97:20">rtsp_st</name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:35"><block_content pos:start="99:13" pos:end="99:35">

            <return pos:start="99:13" pos:end="99:35">return <expr pos:start="99:20" pos:end="99:34"><call pos:start="99:20" pos:end="99:34"><name pos:start="99:20" pos:end="99:26">AVERROR</name><argument_list pos:start="99:27" pos:end="99:34">(<argument pos:start="99:28" pos:end="99:33"><expr pos:start="99:28" pos:end="99:33"><name pos:start="99:28" pos:end="99:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:71"><expr pos:start="101:9" pos:end="101:70"><call pos:start="101:9" pos:end="101:70"><name pos:start="101:9" pos:end="101:20">dynarray_add</name><argument_list pos:start="101:21" pos:end="101:70">(<argument pos:start="101:22" pos:end="101:38"><expr pos:start="101:22" pos:end="101:38"><operator pos:start="101:22" pos:end="101:22">&amp;</operator><name pos:start="101:23" pos:end="101:38"><name pos:start="101:23" pos:end="101:24">rt</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:38">rtsp_streams</name></name></expr></argument>, <argument pos:start="101:41" pos:end="101:60"><expr pos:start="101:41" pos:end="101:60"><operator pos:start="101:41" pos:end="101:41">&amp;</operator><name pos:start="101:42" pos:end="101:60"><name pos:start="101:42" pos:end="101:43">rt</name><operator pos:start="101:44" pos:end="101:45">-&gt;</operator><name pos:start="101:46" pos:end="101:60">nb_rtsp_streams</name></name></expr></argument>, <argument pos:start="101:63" pos:end="101:69"><expr pos:start="101:63" pos:end="101:69"><name pos:start="101:63" pos:end="101:69">rtsp_st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:32"><expr pos:start="105:9" pos:end="105:31"><name pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:10">st</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:21">priv_data</name></name> <operator pos:start="105:23" pos:end="105:23">=</operator> <name pos:start="105:25" pos:end="105:31">rtsp_st</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:34"><expr pos:start="107:9" pos:end="107:33"><name pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:15">rtsp_st</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:29">stream_index</name></name> <operator pos:start="107:31" pos:end="107:31">=</operator> <name pos:start="107:33" pos:end="107:33">i</name></expr>;</expr_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:88"><expr pos:start="111:9" pos:end="111:87"><call pos:start="111:9" pos:end="111:87"><name pos:start="111:9" pos:end="111:18">av_strlcpy</name><argument_list pos:start="111:19" pos:end="111:87">(<argument pos:start="111:20" pos:end="111:39"><expr pos:start="111:20" pos:end="111:39"><name pos:start="111:20" pos:end="111:39"><name pos:start="111:20" pos:end="111:26">rtsp_st</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:39">control_url</name></name></expr></argument>, <argument pos:start="111:42" pos:end="111:56"><expr pos:start="111:42" pos:end="111:56"><name pos:start="111:42" pos:end="111:56"><name pos:start="111:42" pos:end="111:43">rt</name><operator pos:start="111:44" pos:end="111:45">-&gt;</operator><name pos:start="111:46" pos:end="111:56">control_uri</name></name></expr></argument>, <argument pos:start="111:59" pos:end="111:86"><expr pos:start="111:59" pos:end="111:86"><sizeof pos:start="111:59" pos:end="111:86">sizeof<argument_list pos:start="111:65" pos:end="111:86">(<argument pos:start="111:66" pos:end="111:85"><expr pos:start="111:66" pos:end="111:85"><name pos:start="111:66" pos:end="111:85"><name pos:start="111:66" pos:end="111:72">rtsp_st</name><operator pos:start="111:73" pos:end="111:74">-&gt;</operator><name pos:start="111:75" pos:end="111:85">control_url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="113:9" pos:end="113:75">/* Note, this must match the relative uri set in the sdp content */</comment>

        <expr_stmt pos:start="115:9" pos:end="117:39"><expr pos:start="115:9" pos:end="117:38"><call pos:start="115:9" pos:end="117:38"><name pos:start="115:9" pos:end="115:19">av_strlcatf</name><argument_list pos:start="115:20" pos:end="117:38">(<argument pos:start="115:21" pos:end="115:40"><expr pos:start="115:21" pos:end="115:40"><name pos:start="115:21" pos:end="115:40"><name pos:start="115:21" pos:end="115:27">rtsp_st</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:40">control_url</name></name></expr></argument>, <argument pos:start="115:43" pos:end="115:70"><expr pos:start="115:43" pos:end="115:70"><sizeof pos:start="115:43" pos:end="115:70">sizeof<argument_list pos:start="115:49" pos:end="115:70">(<argument pos:start="115:50" pos:end="115:69"><expr pos:start="115:50" pos:end="115:69"><name pos:start="115:50" pos:end="115:69"><name pos:start="115:50" pos:end="115:56">rtsp_st</name><operator pos:start="115:57" pos:end="115:58">-&gt;</operator><name pos:start="115:59" pos:end="115:69">control_url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                    <argument pos:start="117:21" pos:end="117:34"><expr pos:start="117:21" pos:end="117:34"><literal type="string" pos:start="117:21" pos:end="117:34">"/streamid=%d"</literal></expr></argument>, <argument pos:start="117:37" pos:end="117:37"><expr pos:start="117:37" pos:end="117:37"><name pos:start="117:37" pos:end="117:37">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
