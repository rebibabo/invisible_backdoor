<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8876.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:38">rgb24tobgr32</name>)<parameter_list pos:start="1:40" pos:end="1:88">(<parameter pos:start="1:41" pos:end="1:58"><decl pos:start="1:41" pos:end="1:58"><type pos:start="1:41" pos:end="1:58"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">src</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:67">uint8_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">dst</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:87"><decl pos:start="1:75" pos:end="1:87"><type pos:start="1:75" pos:end="1:87"><name pos:start="1:75" pos:end="1:78">long</name></type> <name pos:start="1:80" pos:end="1:87">src_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:5">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">dest</name> <init pos:start="5:19" pos:end="5:23">= <expr pos:start="5:21" pos:end="5:23"><name pos:start="5:21" pos:end="5:23">dst</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:26">= <expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:26">src</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="12:0"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">end</name></decl>;</decl_stmt>

<cpp:if pos:start="11:1" pos:end="11:24">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

    <decl_stmt pos:start="13:5" pos:end="16:0"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:25">mm_end</name></decl>;</decl_stmt>

<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="17:5" pos:end="20:0"><expr pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:7">end</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:11">s</name> <operator pos:start="17:13" pos:end="17:13">+</operator> <name pos:start="17:15" pos:end="17:22">src_size</name></expr>;</expr_stmt>

<cpp:if pos:start="19:1" pos:end="19:24">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

    <asm pos:start="21:5" pos:end="21:57">__asm__ <specifier pos:start="21:13" pos:end="21:20">volatile</specifier>(PREFETCH"    %0"::"m"(*s):"memory");</asm>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:10">mm_end</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:16">end</name> <operator pos:start="23:18" pos:end="23:18">-</operator> <literal type="number" pos:start="23:20" pos:end="23:21">23</literal></expr>;</expr_stmt>

    <asm pos:start="25:5" pos:end="25:69">__asm__ <specifier pos:start="25:13" pos:end="25:20">volatile</specifier>("movq        %0, %%mm7"::"m"(mask32a):"memory");</asm>

    <while pos:start="27:5" pos:end="75:5">while <condition pos:start="27:11" pos:end="27:22">(<expr pos:start="27:12" pos:end="27:21"><name pos:start="27:12" pos:end="27:12">s</name> <operator pos:start="27:14" pos:end="27:14">&lt;</operator> <name pos:start="27:16" pos:end="27:21">mm_end</name></expr>)</condition> <block pos:start="27:24" pos:end="75:5">{<block_content pos:start="29:9" pos:end="73:16">

        <asm pos:start="29:9" pos:end="69:23">__asm__ <specifier pos:start="29:17" pos:end="29:24">volatile</specifier>(

            PREFETCH"    32%1           \n\t"

            "movd          %1, %%mm0    \n\t"

            "punpckldq    3%1, %%mm0    \n\t"

            "movd         6%1, %%mm1    \n\t"

            "punpckldq    9%1, %%mm1    \n\t"

            "movd        12%1, %%mm2    \n\t"

            "punpckldq   15%1, %%mm2    \n\t"

            "movd        18%1, %%mm3    \n\t"

            "punpckldq   21%1, %%mm3    \n\t"

            "por        %%mm7, %%mm0    \n\t"

            "por        %%mm7, %%mm1    \n\t"

            "por        %%mm7, %%mm2    \n\t"

            "por        %%mm7, %%mm3    \n\t"

            MOVNTQ"     %%mm0,   %0     \n\t"

            MOVNTQ"     %%mm1,  8%0     \n\t"

            MOVNTQ"     %%mm2, 16%0     \n\t"

            MOVNTQ"     %%mm3, 24%0"

            :"=m"(*dest)

            :"m"(*s)

            :"memory");</asm>

        <expr_stmt pos:start="71:9" pos:end="71:19"><expr pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:12">dest</name> <operator pos:start="71:14" pos:end="71:15">+=</operator> <literal type="number" pos:start="71:17" pos:end="71:18">32</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:16"><expr pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:9">s</name> <operator pos:start="73:11" pos:end="73:12">+=</operator> <literal type="number" pos:start="73:14" pos:end="73:15">24</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <asm pos:start="77:5" pos:end="77:40">__asm__ <specifier pos:start="77:13" pos:end="77:20">volatile</specifier>(SFENCE:::"memory");</asm>

    <asm pos:start="79:5" pos:end="82:0">__asm__ <specifier pos:start="79:13" pos:end="79:20">volatile</specifier>(EMMS:::"memory");</asm>

<cpp:endif pos:start="81:1" pos:end="81:6">#<cpp:directive pos:start="81:2" pos:end="81:6">endif</cpp:directive></cpp:endif>

    <while pos:start="83:5" pos:end="111:5">while <condition pos:start="83:11" pos:end="83:19">(<expr pos:start="83:12" pos:end="83:18"><name pos:start="83:12" pos:end="83:12">s</name> <operator pos:start="83:14" pos:end="83:14">&lt;</operator> <name pos:start="83:16" pos:end="83:18">end</name></expr>)</condition> <block pos:start="83:21" pos:end="111:5">{<block_content pos:start="89:9" pos:end="110:0">

<cpp:if pos:start="85:1" pos:end="85:18">#<cpp:directive pos:start="85:2" pos:end="85:3">if</cpp:directive> <expr pos:start="85:5" pos:end="85:18"><name pos:start="85:5" pos:end="85:18">HAVE_BIGENDIAN</name></expr></cpp:if>

        <comment type="block" pos:start="87:9" pos:end="87:50">/* RGB24 (= R,G,B) -&gt; RGB32 (= A,B,G,R) */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:22"><expr pos:start="89:9" pos:end="89:21"><operator pos:start="89:9" pos:end="89:9">*</operator><name pos:start="89:10" pos:end="89:13">dest</name><operator pos:start="89:14" pos:end="89:15">++</operator> <operator pos:start="89:17" pos:end="89:17">=</operator> <literal type="number" pos:start="89:19" pos:end="89:21">255</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:23"><expr pos:start="91:9" pos:end="91:22"><operator pos:start="91:9" pos:end="91:9">*</operator><name pos:start="91:10" pos:end="91:13">dest</name><operator pos:start="91:14" pos:end="91:15">++</operator> <operator pos:start="91:17" pos:end="91:17">=</operator> <name pos:start="91:19" pos:end="91:22"><name pos:start="91:19" pos:end="91:19">s</name><index pos:start="91:20" pos:end="91:22">[<expr pos:start="91:21" pos:end="91:21"><literal type="number" pos:start="91:21" pos:end="91:21">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:23"><expr pos:start="93:9" pos:end="93:22"><operator pos:start="93:9" pos:end="93:9">*</operator><name pos:start="93:10" pos:end="93:13">dest</name><operator pos:start="93:14" pos:end="93:15">++</operator> <operator pos:start="93:17" pos:end="93:17">=</operator> <name pos:start="93:19" pos:end="93:22"><name pos:start="93:19" pos:end="93:19">s</name><index pos:start="93:20" pos:end="93:22">[<expr pos:start="93:21" pos:end="93:21"><literal type="number" pos:start="93:21" pos:end="93:21">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:23"><expr pos:start="95:9" pos:end="95:22"><operator pos:start="95:9" pos:end="95:9">*</operator><name pos:start="95:10" pos:end="95:13">dest</name><operator pos:start="95:14" pos:end="95:15">++</operator> <operator pos:start="95:17" pos:end="95:17">=</operator> <name pos:start="95:19" pos:end="95:22"><name pos:start="95:19" pos:end="95:19">s</name><index pos:start="95:20" pos:end="95:22">[<expr pos:start="95:21" pos:end="95:21"><literal type="number" pos:start="95:21" pos:end="95:21">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="100:0"><expr pos:start="97:9" pos:end="97:12"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">+=</operator><literal type="number" pos:start="97:12" pos:end="97:12">3</literal></expr>;</expr_stmt>

<cpp:else pos:start="99:1" pos:end="99:5">#<cpp:directive pos:start="99:2" pos:end="99:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="101:9" pos:end="101:23"><expr pos:start="101:9" pos:end="101:22"><operator pos:start="101:9" pos:end="101:9">*</operator><name pos:start="101:10" pos:end="101:13">dest</name><operator pos:start="101:14" pos:end="101:15">++</operator> <operator pos:start="101:17" pos:end="101:17">=</operator> <operator pos:start="101:19" pos:end="101:19">*</operator><name pos:start="101:20" pos:end="101:20">s</name><operator pos:start="101:21" pos:end="101:22">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:23"><expr pos:start="103:9" pos:end="103:22"><operator pos:start="103:9" pos:end="103:9">*</operator><name pos:start="103:10" pos:end="103:13">dest</name><operator pos:start="103:14" pos:end="103:15">++</operator> <operator pos:start="103:17" pos:end="103:17">=</operator> <operator pos:start="103:19" pos:end="103:19">*</operator><name pos:start="103:20" pos:end="103:20">s</name><operator pos:start="103:21" pos:end="103:22">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:23"><expr pos:start="105:9" pos:end="105:22"><operator pos:start="105:9" pos:end="105:9">*</operator><name pos:start="105:10" pos:end="105:13">dest</name><operator pos:start="105:14" pos:end="105:15">++</operator> <operator pos:start="105:17" pos:end="105:17">=</operator> <operator pos:start="105:19" pos:end="105:19">*</operator><name pos:start="105:20" pos:end="105:20">s</name><operator pos:start="105:21" pos:end="105:22">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="110:0"><expr pos:start="107:9" pos:end="107:21"><operator pos:start="107:9" pos:end="107:9">*</operator><name pos:start="107:10" pos:end="107:13">dest</name><operator pos:start="107:14" pos:end="107:15">++</operator> <operator pos:start="107:17" pos:end="107:17">=</operator> <literal type="number" pos:start="107:19" pos:end="107:21">255</literal></expr>;</expr_stmt>

<cpp:endif pos:start="109:1" pos:end="109:6">#<cpp:directive pos:start="109:2" pos:end="109:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
