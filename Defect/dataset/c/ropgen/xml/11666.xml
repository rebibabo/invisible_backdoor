<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11666.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">av_read_frame</name><parameter_list pos:start="1:18" pos:end="1:52">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:36"><name pos:start="1:19" pos:end="1:33">AVFormatContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:46">AVPacket</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:5">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:20">genpts</name> <init pos:start="5:22" pos:end="5:51">= <expr pos:start="5:24" pos:end="5:51"><name pos:start="5:24" pos:end="5:31"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:31">flags</name></name> <operator pos:start="5:33" pos:end="5:33">&amp;</operator> <name pos:start="5:35" pos:end="5:51">AVFMT_FLAG_GENPTS</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">eof</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:45"><if pos:start="11:5" pos:end="19:45">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:15">genpts</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="19:45"><block_content pos:start="13:9" pos:end="19:45">

        <return pos:start="13:9" pos:end="19:45">return <expr pos:start="13:16" pos:end="19:44"><ternary pos:start="13:16" pos:end="19:44"><condition pos:start="13:16" pos:end="15:16"><expr pos:start="13:16" pos:end="13:41"><name pos:start="13:16" pos:end="13:41"><name pos:start="13:16" pos:end="13:16">s</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:26">internal</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:41">packet_buffer</name></name></expr>

               ?</condition><then pos:start="15:18" pos:end="17:78"> <expr pos:start="15:18" pos:end="17:78"><call pos:start="15:18" pos:end="17:78"><name pos:start="15:18" pos:end="15:40">read_from_packet_buffer</name><argument_list pos:start="15:41" pos:end="17:78">(<argument pos:start="15:42" pos:end="15:68"><expr pos:start="15:42" pos:end="15:68"><operator pos:start="15:42" pos:end="15:42">&amp;</operator><name pos:start="15:43" pos:end="15:68"><name pos:start="15:43" pos:end="15:43">s</name><operator pos:start="15:44" pos:end="15:45">-&gt;</operator><name pos:start="15:46" pos:end="15:53">internal</name><operator pos:start="15:54" pos:end="15:55">-&gt;</operator><name pos:start="15:56" pos:end="15:68">packet_buffer</name></name></expr></argument>,

                                         <argument pos:start="17:42" pos:end="17:72"><expr pos:start="17:42" pos:end="17:72"><operator pos:start="17:42" pos:end="17:42">&amp;</operator><name pos:start="17:43" pos:end="17:72"><name pos:start="17:43" pos:end="17:43">s</name><operator pos:start="17:44" pos:end="17:45">-&gt;</operator><name pos:start="17:46" pos:end="17:53">internal</name><operator pos:start="17:54" pos:end="17:55">-&gt;</operator><name pos:start="17:56" pos:end="17:72">packet_buffer_end</name></name></expr></argument>, <argument pos:start="17:75" pos:end="17:77"><expr pos:start="17:75" pos:end="17:77"><name pos:start="17:75" pos:end="17:77">pkt</name></expr></argument>)</argument_list></call></expr>

               </then><else pos:start="19:16" pos:end="19:44">: <expr pos:start="19:18" pos:end="19:44"><call pos:start="19:18" pos:end="19:44"><name pos:start="19:18" pos:end="19:36">read_frame_internal</name><argument_list pos:start="19:37" pos:end="19:44">(<argument pos:start="19:38" pos:end="19:38"><expr pos:start="19:38" pos:end="19:38"><name pos:start="19:38" pos:end="19:38">s</name></expr></argument>, <argument pos:start="19:41" pos:end="19:43"><expr pos:start="19:41" pos:end="19:43"><name pos:start="19:41" pos:end="19:43">pkt</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="23:5" pos:end="103:5">for <control pos:start="23:9" pos:end="23:12">(<init pos:start="23:10" pos:end="23:10">;</init><condition pos:start="23:11" pos:end="23:11">;</condition><incr/>)</control> <block pos:start="23:14" pos:end="103:5">{<block_content pos:start="25:9" pos:end="101:35">

        <decl_stmt pos:start="25:9" pos:end="25:16"><decl pos:start="25:9" pos:end="25:15"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:15">ret</name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:56"><decl pos:start="27:9" pos:end="27:55"><type pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:20">AVPacketList</name> <modifier pos:start="27:22" pos:end="27:22">*</modifier></type><name pos:start="27:23" pos:end="27:26">pktl</name> <init pos:start="27:28" pos:end="27:55">= <expr pos:start="27:30" pos:end="27:55"><name pos:start="27:30" pos:end="27:55"><name pos:start="27:30" pos:end="27:30">s</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:40">internal</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:55">packet_buffer</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="31:9" pos:end="75:9"><if pos:start="31:9" pos:end="75:9">if <condition pos:start="31:12" pos:end="31:17">(<expr pos:start="31:13" pos:end="31:16"><name pos:start="31:13" pos:end="31:16">pktl</name></expr>)</condition> <block pos:start="31:19" pos:end="75:9">{<block_content pos:start="33:13" pos:end="73:85">

            <decl_stmt pos:start="33:13" pos:end="33:44"><decl pos:start="33:13" pos:end="33:43"><type pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:20">AVPacket</name> <modifier pos:start="33:22" pos:end="33:22">*</modifier></type><name pos:start="33:23" pos:end="33:30">next_pkt</name> <init pos:start="33:32" pos:end="33:43">= <expr pos:start="33:34" pos:end="33:43"><operator pos:start="33:34" pos:end="33:34">&amp;</operator><name pos:start="33:35" pos:end="33:43"><name pos:start="33:35" pos:end="33:38">pktl</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:43">pkt</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="37:13" pos:end="61:13"><if pos:start="37:13" pos:end="61:13">if <condition pos:start="37:16" pos:end="37:48">(<expr pos:start="37:17" pos:end="37:47"><name pos:start="37:17" pos:end="37:29"><name pos:start="37:17" pos:end="37:24">next_pkt</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:29">dts</name></name> <operator pos:start="37:31" pos:end="37:32">!=</operator> <name pos:start="37:34" pos:end="37:47">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="37:50" pos:end="61:13">{<block_content pos:start="39:17" pos:end="59:50">

                <decl_stmt pos:start="39:17" pos:end="39:82"><decl pos:start="39:17" pos:end="39:81"><type pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:19">int</name></type> <name pos:start="39:21" pos:end="39:29">wrap_bits</name> <init pos:start="39:31" pos:end="39:81">= <expr pos:start="39:33" pos:end="39:81"><name pos:start="39:33" pos:end="39:66"><name pos:start="39:33" pos:end="39:33">s</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:42">streams</name><index pos:start="39:43" pos:end="39:66">[<expr pos:start="39:44" pos:end="39:65"><name pos:start="39:44" pos:end="39:65"><name pos:start="39:44" pos:end="39:51">next_pkt</name><operator pos:start="39:52" pos:end="39:53">-&gt;</operator><name pos:start="39:54" pos:end="39:65">stream_index</name></name></expr>]</index></name><operator pos:start="39:67" pos:end="39:68">-&gt;</operator><name pos:start="39:69" pos:end="39:81">pts_wrap_bits</name></expr></init></decl>;</decl_stmt>

                <while pos:start="41:17" pos:end="57:17">while <condition pos:start="41:23" pos:end="41:63">(<expr pos:start="41:24" pos:end="41:62"><name pos:start="41:24" pos:end="41:27">pktl</name> <operator pos:start="41:29" pos:end="41:30">&amp;&amp;</operator> <name pos:start="41:32" pos:end="41:44"><name pos:start="41:32" pos:end="41:39">next_pkt</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:44">pts</name></name> <operator pos:start="41:46" pos:end="41:47">==</operator> <name pos:start="41:49" pos:end="41:62">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="41:65" pos:end="57:17">{<block_content pos:start="43:21" pos:end="55:38">

                    <if_stmt pos:start="43:21" pos:end="53:21"><if pos:start="43:21" pos:end="53:21">if <condition pos:start="43:24" pos:end="47:94">(<expr pos:start="43:25" pos:end="47:93"><name pos:start="43:25" pos:end="43:46"><name pos:start="43:25" pos:end="43:28">pktl</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:33">pkt</name><operator pos:start="43:34" pos:end="43:34">.</operator><name pos:start="43:35" pos:end="43:46">stream_index</name></name> <operator pos:start="43:48" pos:end="43:49">==</operator> <name pos:start="43:51" pos:end="43:72"><name pos:start="43:51" pos:end="43:58">next_pkt</name><operator pos:start="43:59" pos:end="43:60">-&gt;</operator><name pos:start="43:61" pos:end="43:72">stream_index</name></name> <operator pos:start="43:74" pos:end="43:75">&amp;&amp;</operator>

                        <operator pos:start="45:25" pos:end="45:25">(</operator><call pos:start="45:26" pos:end="45:93"><name pos:start="45:26" pos:end="45:39">av_compare_mod</name><argument_list pos:start="45:40" pos:end="45:93">(<argument pos:start="45:41" pos:end="45:53"><expr pos:start="45:41" pos:end="45:53"><name pos:start="45:41" pos:end="45:53"><name pos:start="45:41" pos:end="45:48">next_pkt</name><operator pos:start="45:49" pos:end="45:50">-&gt;</operator><name pos:start="45:51" pos:end="45:53">dts</name></name></expr></argument>, <argument pos:start="45:56" pos:end="45:68"><expr pos:start="45:56" pos:end="45:68"><name pos:start="45:56" pos:end="45:68"><name pos:start="45:56" pos:end="45:59">pktl</name><operator pos:start="45:60" pos:end="45:61">-&gt;</operator><name pos:start="45:62" pos:end="45:64">pkt</name><operator pos:start="45:65" pos:end="45:65">.</operator><name pos:start="45:66" pos:end="45:68">dts</name></name></expr></argument>, <argument pos:start="45:71" pos:end="45:92"><expr pos:start="45:71" pos:end="45:92"><literal type="number" pos:start="45:71" pos:end="45:73">2LL</literal> <operator pos:start="45:75" pos:end="45:76">&lt;&lt;</operator> <operator pos:start="45:78" pos:end="45:78">(</operator><name pos:start="45:79" pos:end="45:87">wrap_bits</name> <operator pos:start="45:89" pos:end="45:89">-</operator> <literal type="number" pos:start="45:91" pos:end="45:91">1</literal><operator pos:start="45:92" pos:end="45:92">)</operator></expr></argument>)</argument_list></call> <operator pos:start="45:95" pos:end="45:95">&lt;</operator> <literal type="number" pos:start="45:97" pos:end="45:97">0</literal><operator pos:start="45:98" pos:end="45:98">)</operator> <operator pos:start="45:100" pos:end="45:101">&amp;&amp;</operator>

                         <call pos:start="47:26" pos:end="47:93"><name pos:start="47:26" pos:end="47:39">av_compare_mod</name><argument_list pos:start="47:40" pos:end="47:93">(<argument pos:start="47:41" pos:end="47:53"><expr pos:start="47:41" pos:end="47:53"><name pos:start="47:41" pos:end="47:53"><name pos:start="47:41" pos:end="47:44">pktl</name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:49">pkt</name><operator pos:start="47:50" pos:end="47:50">.</operator><name pos:start="47:51" pos:end="47:53">pts</name></name></expr></argument>, <argument pos:start="47:56" pos:end="47:68"><expr pos:start="47:56" pos:end="47:68"><name pos:start="47:56" pos:end="47:68"><name pos:start="47:56" pos:end="47:59">pktl</name><operator pos:start="47:60" pos:end="47:61">-&gt;</operator><name pos:start="47:62" pos:end="47:64">pkt</name><operator pos:start="47:65" pos:end="47:65">.</operator><name pos:start="47:66" pos:end="47:68">dts</name></name></expr></argument>, <argument pos:start="47:71" pos:end="47:92"><expr pos:start="47:71" pos:end="47:92"><literal type="number" pos:start="47:71" pos:end="47:73">2LL</literal> <operator pos:start="47:75" pos:end="47:76">&lt;&lt;</operator> <operator pos:start="47:78" pos:end="47:78">(</operator><name pos:start="47:79" pos:end="47:87">wrap_bits</name> <operator pos:start="47:89" pos:end="47:89">-</operator> <literal type="number" pos:start="47:91" pos:end="47:91">1</literal><operator pos:start="47:92" pos:end="47:92">)</operator></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:96" pos:end="53:21">{<block_content pos:start="51:25" pos:end="51:54">

                        <comment type="line" pos:start="49:25" pos:end="49:38">// not B-frame</comment>

                        <expr_stmt pos:start="51:25" pos:end="51:54"><expr pos:start="51:25" pos:end="51:53"><name pos:start="51:25" pos:end="51:37"><name pos:start="51:25" pos:end="51:32">next_pkt</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:37">pts</name></name> <operator pos:start="51:39" pos:end="51:39">=</operator> <name pos:start="51:41" pos:end="51:53"><name pos:start="51:41" pos:end="51:44">pktl</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:49">pkt</name><operator pos:start="51:50" pos:end="51:50">.</operator><name pos:start="51:51" pos:end="51:53">dts</name></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="55:21" pos:end="55:38"><expr pos:start="55:21" pos:end="55:37"><name pos:start="55:21" pos:end="55:24">pktl</name> <operator pos:start="55:26" pos:end="55:26">=</operator> <name pos:start="55:28" pos:end="55:37"><name pos:start="55:28" pos:end="55:31">pktl</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:37">next</name></name></expr>;</expr_stmt>

                </block_content>}</block></while>

                <expr_stmt pos:start="59:17" pos:end="59:50"><expr pos:start="59:17" pos:end="59:49"><name pos:start="59:17" pos:end="59:20">pktl</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:49"><name pos:start="59:24" pos:end="59:24">s</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:34">internal</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:49">packet_buffer</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="65:13" pos:end="65:66">/* read packet from packet buffer, if there is data */</comment>

            <if_stmt pos:start="67:13" pos:end="73:85"><if pos:start="67:13" pos:end="73:85">if <condition pos:start="67:16" pos:end="69:59">(<expr pos:start="67:17" pos:end="69:58"><operator pos:start="67:17" pos:end="67:17">!</operator><operator pos:start="67:18" pos:end="67:18">(</operator><name pos:start="67:19" pos:end="67:31"><name pos:start="67:19" pos:end="67:26">next_pkt</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:31">pts</name></name> <operator pos:start="67:33" pos:end="67:34">==</operator> <name pos:start="67:36" pos:end="67:49">AV_NOPTS_VALUE</name> <operator pos:start="67:51" pos:end="67:52">&amp;&amp;</operator>

                  <name pos:start="69:19" pos:end="69:31"><name pos:start="69:19" pos:end="69:26">next_pkt</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:31">dts</name></name> <operator pos:start="69:33" pos:end="69:34">!=</operator> <name pos:start="69:36" pos:end="69:49">AV_NOPTS_VALUE</name> <operator pos:start="69:51" pos:end="69:52">&amp;&amp;</operator> <operator pos:start="69:54" pos:end="69:54">!</operator><name pos:start="69:55" pos:end="69:57">eof</name><operator pos:start="69:58" pos:end="69:58">)</operator></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="73:85"><block_content pos:start="71:17" pos:end="73:85">

                <return pos:start="71:17" pos:end="73:85">return <expr pos:start="71:24" pos:end="73:84"><call pos:start="71:24" pos:end="73:84"><name pos:start="71:24" pos:end="71:46">read_from_packet_buffer</name><argument_list pos:start="71:47" pos:end="73:84">(<argument pos:start="71:48" pos:end="71:74"><expr pos:start="71:48" pos:end="71:74"><operator pos:start="71:48" pos:end="71:48">&amp;</operator><name pos:start="71:49" pos:end="71:74"><name pos:start="71:49" pos:end="71:49">s</name><operator pos:start="71:50" pos:end="71:51">-&gt;</operator><name pos:start="71:52" pos:end="71:59">internal</name><operator pos:start="71:60" pos:end="71:61">-&gt;</operator><name pos:start="71:62" pos:end="71:74">packet_buffer</name></name></expr></argument>,

                                               <argument pos:start="73:48" pos:end="73:78"><expr pos:start="73:48" pos:end="73:78"><operator pos:start="73:48" pos:end="73:48">&amp;</operator><name pos:start="73:49" pos:end="73:78"><name pos:start="73:49" pos:end="73:49">s</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:59">internal</name><operator pos:start="73:60" pos:end="73:61">-&gt;</operator><name pos:start="73:62" pos:end="73:78">packet_buffer_end</name></name></expr></argument>, <argument pos:start="73:81" pos:end="73:83"><expr pos:start="73:81" pos:end="73:83"><name pos:start="73:81" pos:end="73:83">pkt</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:42"><expr pos:start="79:9" pos:end="79:41"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:41"><name pos:start="79:15" pos:end="79:33">read_frame_internal</name><argument_list pos:start="79:34" pos:end="79:41">(<argument pos:start="79:35" pos:end="79:35"><expr pos:start="79:35" pos:end="79:35"><name pos:start="79:35" pos:end="79:35">s</name></expr></argument>, <argument pos:start="79:38" pos:end="79:40"><expr pos:start="79:38" pos:end="79:40"><name pos:start="79:38" pos:end="79:40">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="93:9"><if pos:start="81:9" pos:end="93:9">if <condition pos:start="81:12" pos:end="81:20">(<expr pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:15">ret</name> <operator pos:start="81:17" pos:end="81:17">&lt;</operator> <literal type="number" pos:start="81:19" pos:end="81:19">0</literal></expr>)</condition> <block pos:start="81:22" pos:end="93:9">{<block_content pos:start="83:13" pos:end="91:27">

            <if_stmt pos:start="83:13" pos:end="91:27"><if pos:start="83:13" pos:end="89:13">if <condition pos:start="83:16" pos:end="83:47">(<expr pos:start="83:17" pos:end="83:46"><name pos:start="83:17" pos:end="83:20">pktl</name> <operator pos:start="83:22" pos:end="83:23">&amp;&amp;</operator> <name pos:start="83:25" pos:end="83:27">ret</name> <operator pos:start="83:29" pos:end="83:30">!=</operator> <call pos:start="83:32" pos:end="83:46"><name pos:start="83:32" pos:end="83:38">AVERROR</name><argument_list pos:start="83:39" pos:end="83:46">(<argument pos:start="83:40" pos:end="83:45"><expr pos:start="83:40" pos:end="83:45"><name pos:start="83:40" pos:end="83:45">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="83:49" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:25">

                <expr_stmt pos:start="85:17" pos:end="85:24"><expr pos:start="85:17" pos:end="85:23"><name pos:start="85:17" pos:end="85:19">eof</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <literal type="number" pos:start="85:23" pos:end="85:23">1</literal></expr>;</expr_stmt>

                <continue pos:start="87:17" pos:end="87:25">continue;</continue>

            </block_content>}</block></if> <else pos:start="89:15" pos:end="91:27">else<block type="pseudo" pos:start="91:17" pos:end="91:27"><block_content pos:start="91:17" pos:end="91:27">

                <return pos:start="91:17" pos:end="91:27">return <expr pos:start="91:24" pos:end="91:26"><name pos:start="91:24" pos:end="91:26">ret</name></expr>;</return></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="97:9" pos:end="101:35"><if pos:start="97:9" pos:end="101:35">if <condition pos:start="97:12" pos:end="99:78">(<expr pos:start="97:13" pos:end="99:77"><call pos:start="97:13" pos:end="99:73"><name pos:start="97:13" pos:end="97:25">av_dup_packet</name><argument_list pos:start="97:26" pos:end="99:73">(<argument pos:start="97:27" pos:end="99:72"><expr pos:start="97:27" pos:end="99:72"><call pos:start="97:27" pos:end="99:72"><name pos:start="97:27" pos:end="97:39">add_to_pktbuf</name><argument_list pos:start="97:40" pos:end="99:72">(<argument pos:start="97:41" pos:end="97:67"><expr pos:start="97:41" pos:end="97:67"><operator pos:start="97:41" pos:end="97:41">&amp;</operator><name pos:start="97:42" pos:end="97:67"><name pos:start="97:42" pos:end="97:42">s</name><operator pos:start="97:43" pos:end="97:44">-&gt;</operator><name pos:start="97:45" pos:end="97:52">internal</name><operator pos:start="97:53" pos:end="97:54">-&gt;</operator><name pos:start="97:55" pos:end="97:67">packet_buffer</name></name></expr></argument>, <argument pos:start="97:70" pos:end="97:72"><expr pos:start="97:70" pos:end="97:72"><name pos:start="97:70" pos:end="97:72">pkt</name></expr></argument>,

                                        <argument pos:start="99:41" pos:end="99:71"><expr pos:start="99:41" pos:end="99:71"><operator pos:start="99:41" pos:end="99:41">&amp;</operator><name pos:start="99:42" pos:end="99:71"><name pos:start="99:42" pos:end="99:42">s</name><operator pos:start="99:43" pos:end="99:44">-&gt;</operator><name pos:start="99:45" pos:end="99:52">internal</name><operator pos:start="99:53" pos:end="99:54">-&gt;</operator><name pos:start="99:55" pos:end="99:71">packet_buffer_end</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="99:75" pos:end="99:75">&lt;</operator> <literal type="number" pos:start="99:77" pos:end="99:77">0</literal></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:35"><block_content pos:start="101:13" pos:end="101:35">

            <return pos:start="101:13" pos:end="101:35">return <expr pos:start="101:20" pos:end="101:34"><call pos:start="101:20" pos:end="101:34"><name pos:start="101:20" pos:end="101:26">AVERROR</name><argument_list pos:start="101:27" pos:end="101:34">(<argument pos:start="101:28" pos:end="101:33"><expr pos:start="101:28" pos:end="101:33"><name pos:start="101:28" pos:end="101:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
