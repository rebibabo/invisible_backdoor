<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5894.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:74"><name pos:start="1:1" pos:end="1:17">do_gen_eob_worker</name><argument_list pos:start="1:18" pos:end="1:74">(<argument pos:start="1:19" pos:end="1:33">DisasContext *s</argument>, <argument pos:start="1:36" pos:end="1:47">bool inhibit</argument>, <argument pos:start="1:50" pos:end="1:64">bool recheck_tf</argument>, <argument pos:start="1:67" pos:end="1:73">TCGv jr</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:30">

    <expr_stmt pos:start="5:5" pos:end="5:24"><expr pos:start="5:5" pos:end="5:23"><call pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:20">gen_update_cc_op</name><argument_list pos:start="5:21" pos:end="5:23">(<argument pos:start="5:22" pos:end="5:22"><expr pos:start="5:22" pos:end="5:22"><name pos:start="5:22" pos:end="5:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:78">/* If several instructions disable interrupts, only the first does it.  */</comment>

    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:53">(<expr pos:start="11:9" pos:end="11:52"><name pos:start="11:9" pos:end="11:15">inhibit</name> <operator pos:start="11:17" pos:end="11:18">&amp;&amp;</operator> <operator pos:start="11:20" pos:end="11:20">!</operator><operator pos:start="11:21" pos:end="11:21">(</operator><name pos:start="11:22" pos:end="11:29"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:29">flags</name></name> <operator pos:start="11:31" pos:end="11:31">&amp;</operator> <name pos:start="11:33" pos:end="11:51">HF_INHIBIT_IRQ_MASK</name><operator pos:start="11:52" pos:end="11:52">)</operator></expr>)</condition> <block pos:start="11:55" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:46">

        <expr_stmt pos:start="13:9" pos:end="13:46"><expr pos:start="13:9" pos:end="13:45"><call pos:start="13:9" pos:end="13:45"><name pos:start="13:9" pos:end="13:21">gen_set_hflag</name><argument_list pos:start="13:22" pos:end="13:45">(<argument pos:start="13:23" pos:end="13:23"><expr pos:start="13:23" pos:end="13:23"><name pos:start="13:23" pos:end="13:23">s</name></expr></argument>, <argument pos:start="13:26" pos:end="13:44"><expr pos:start="13:26" pos:end="13:44"><name pos:start="13:26" pos:end="13:44">HF_INHIBIT_IRQ_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="19:5">else <block pos:start="15:12" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:48">

        <expr_stmt pos:start="17:9" pos:end="17:48"><expr pos:start="17:9" pos:end="17:47"><call pos:start="17:9" pos:end="17:47"><name pos:start="17:9" pos:end="17:23">gen_reset_hflag</name><argument_list pos:start="17:24" pos:end="17:47">(<argument pos:start="17:25" pos:end="17:25"><expr pos:start="17:25" pos:end="17:25"><name pos:start="17:25" pos:end="17:25">s</name></expr></argument>, <argument pos:start="17:28" pos:end="17:46"><expr pos:start="17:28" pos:end="17:46"><name pos:start="17:28" pos:end="17:46">HF_INHIBIT_IRQ_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:34">(<expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:13">tb</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:20">flags</name></name> <operator pos:start="23:22" pos:end="23:22">&amp;</operator> <name pos:start="23:24" pos:end="23:33">HF_RF_MASK</name></expr>)</condition> <block pos:start="23:36" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:37">

        <expr_stmt pos:start="25:9" pos:end="25:37"><expr pos:start="25:9" pos:end="25:36"><call pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:27">gen_helper_reset_rf</name><argument_list pos:start="25:28" pos:end="25:36">(<argument pos:start="25:29" pos:end="25:35"><expr pos:start="25:29" pos:end="25:35"><name pos:start="25:29" pos:end="25:35">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="59:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:30">(<expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:29">singlestep_enabled</name></name></expr>)</condition> <block pos:start="29:32" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:34">

        <expr_stmt pos:start="31:9" pos:end="31:34"><expr pos:start="31:9" pos:end="31:33"><call pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:24">gen_helper_debug</name><argument_list pos:start="31:25" pos:end="31:33">(<argument pos:start="31:26" pos:end="31:32"><expr pos:start="31:26" pos:end="31:32"><name pos:start="31:26" pos:end="31:32">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="33:7" pos:end="39:5">else if <condition pos:start="33:15" pos:end="33:26">(<expr pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:25">recheck_tf</name></expr>)</condition> <block pos:start="33:28" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:27">

        <expr_stmt pos:start="35:9" pos:end="35:51"><expr pos:start="35:9" pos:end="35:50"><call pos:start="35:9" pos:end="35:50"><name pos:start="35:9" pos:end="35:41">gen_helper_rechecking_single_step</name><argument_list pos:start="35:42" pos:end="35:50">(<argument pos:start="35:43" pos:end="35:49"><expr pos:start="35:43" pos:end="35:49"><name pos:start="35:43" pos:end="35:49">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><call pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:23">tcg_gen_exit_tb</name><argument_list pos:start="37:24" pos:end="37:26">(<argument pos:start="37:25" pos:end="37:25"><expr pos:start="37:25" pos:end="37:25"><literal type="number" pos:start="37:25" pos:end="37:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="43:5">else if <condition pos:start="39:15" pos:end="39:21">(<expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:20">tf</name></name></expr>)</condition> <block pos:start="39:23" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:40">

        <expr_stmt pos:start="41:9" pos:end="41:40"><expr pos:start="41:9" pos:end="41:39"><call pos:start="41:9" pos:end="41:39"><name pos:start="41:9" pos:end="41:30">gen_helper_single_step</name><argument_list pos:start="41:31" pos:end="41:39">(<argument pos:start="41:32" pos:end="41:38"><expr pos:start="41:32" pos:end="41:38"><name pos:start="41:32" pos:end="41:38">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="55:5">else if <condition pos:start="43:15" pos:end="43:35">(<expr pos:start="43:16" pos:end="43:34"><operator pos:start="43:16" pos:end="43:16">!</operator><call pos:start="43:17" pos:end="43:34"><name pos:start="43:17" pos:end="43:30">TCGV_IS_UNUSED</name><argument_list pos:start="43:31" pos:end="43:34">(<argument pos:start="43:32" pos:end="43:33"><expr pos:start="43:32" pos:end="43:33"><name pos:start="43:32" pos:end="43:33">jr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:37" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:29">

        <decl_stmt pos:start="45:9" pos:end="45:36"><decl pos:start="45:9" pos:end="45:35"><type pos:start="45:9" pos:end="45:12"><name pos:start="45:9" pos:end="45:12">TCGv</name></type> <name pos:start="45:14" pos:end="45:18">vaddr</name> <init pos:start="45:20" pos:end="45:35">= <expr pos:start="45:22" pos:end="45:35"><call pos:start="45:22" pos:end="45:35"><name pos:start="45:22" pos:end="45:33">tcg_temp_new</name><argument_list pos:start="45:34" pos:end="45:35">()</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:54"><expr pos:start="49:9" pos:end="49:53"><call pos:start="49:9" pos:end="49:53"><name pos:start="49:9" pos:end="49:22">tcg_gen_add_tl</name><argument_list pos:start="49:23" pos:end="49:53">(<argument pos:start="49:24" pos:end="49:28"><expr pos:start="49:24" pos:end="49:28"><name pos:start="49:24" pos:end="49:28">vaddr</name></expr></argument>, <argument pos:start="49:31" pos:end="49:32"><expr pos:start="49:31" pos:end="49:32"><name pos:start="49:31" pos:end="49:32">jr</name></expr></argument>, <argument pos:start="49:35" pos:end="49:52"><expr pos:start="49:35" pos:end="49:52"><name pos:start="49:35" pos:end="49:52"><name pos:start="49:35" pos:end="49:46">cpu_seg_base</name><index pos:start="49:47" pos:end="49:52">[<expr pos:start="49:48" pos:end="49:51"><name pos:start="49:48" pos:end="49:51">R_CS</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:43"><expr pos:start="51:9" pos:end="51:42"><call pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:35">tcg_gen_lookup_and_goto_ptr</name><argument_list pos:start="51:36" pos:end="51:42">(<argument pos:start="51:37" pos:end="51:41"><expr pos:start="51:37" pos:end="51:41"><name pos:start="51:37" pos:end="51:41">vaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:29"><expr pos:start="53:9" pos:end="53:28"><call pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:21">tcg_temp_free</name><argument_list pos:start="53:22" pos:end="53:28">(<argument pos:start="53:23" pos:end="53:27"><expr pos:start="53:23" pos:end="53:27"><name pos:start="53:23" pos:end="53:27">vaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="59:5">else <block pos:start="55:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:27">

        <expr_stmt pos:start="57:9" pos:end="57:27"><expr pos:start="57:9" pos:end="57:26"><call pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:23">tcg_gen_exit_tb</name><argument_list pos:start="57:24" pos:end="57:26">(<argument pos:start="57:25" pos:end="57:25"><expr pos:start="57:25" pos:end="57:25"><literal type="number" pos:start="57:25" pos:end="57:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:30"><expr pos:start="61:5" pos:end="61:29"><name pos:start="61:5" pos:end="61:13"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:13">is_jmp</name></name> <operator pos:start="61:15" pos:end="61:15">=</operator> <name pos:start="61:17" pos:end="61:29">DISAS_TB_JUMP</name></expr>;</expr_stmt>

</block_content>}</block>
</unit>
