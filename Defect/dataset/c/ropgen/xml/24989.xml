<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24989.c" pos:tabs="8"><function pos:start="1:1" pos:end="243:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">uhci_process_frame</name><parameter_list pos:start="1:31" pos:end="1:44">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:40">UHCIState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="243:1">{<block_content pos:start="5:5" pos:end="241:36">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:23">frame_addr</name></decl>, <decl pos:start="5:26" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:26" pos:end="5:29">link</name></decl>, <decl pos:start="5:32" pos:end="5:42"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:32" pos:end="5:42">old_td_ctrl</name></decl>, <decl pos:start="5:45" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:45" pos:end="5:47">val</name></decl>, <decl pos:start="5:50" pos:end="5:57"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:50" pos:end="5:57">int_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:20">curr_qh</name></decl>, <decl pos:start="7:23" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:23" pos:end="7:30">td_count</name> <init pos:start="7:32" pos:end="7:34">= <expr pos:start="7:34" pos:end="7:34"><literal type="number" pos:start="7:34" pos:end="7:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">cnt</name></decl>, <decl pos:start="9:14" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:16">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">UHCI_TD</name></type> <name pos:start="11:13" pos:end="11:14">td</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">UHCI_QH</name></type> <name pos:start="13:13" pos:end="13:14">qh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">QhDb</name></type> <name pos:start="15:10" pos:end="15:13">qhdb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:61"><expr pos:start="19:5" pos:end="19:60"><name pos:start="19:5" pos:end="19:14">frame_addr</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:32"><name pos:start="19:18" pos:end="19:18">s</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:32">fl_base_addr</name></name> <operator pos:start="19:34" pos:end="19:34">+</operator> <operator pos:start="19:36" pos:end="19:36">(</operator><operator pos:start="19:37" pos:end="19:37">(</operator><name pos:start="19:38" pos:end="19:45"><name pos:start="19:38" pos:end="19:38">s</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:45">frnum</name></name> <operator pos:start="19:47" pos:end="19:47">&amp;</operator> <literal type="number" pos:start="19:49" pos:end="19:53">0x3ff</literal><operator pos:start="19:54" pos:end="19:54">)</operator> <operator pos:start="19:56" pos:end="19:57">&lt;&lt;</operator> <literal type="number" pos:start="19:59" pos:end="19:59">2</literal><operator pos:start="19:60" pos:end="19:60">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:48"><expr pos:start="23:5" pos:end="23:47"><call pos:start="23:5" pos:end="23:47"><name pos:start="23:5" pos:end="23:16">pci_dma_read</name><argument_list pos:start="23:17" pos:end="23:47">(<argument pos:start="23:18" pos:end="23:24"><expr pos:start="23:18" pos:end="23:24"><operator pos:start="23:18" pos:end="23:18">&amp;</operator><name pos:start="23:19" pos:end="23:24"><name pos:start="23:19" pos:end="23:19">s</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:24">dev</name></name></expr></argument>, <argument pos:start="23:27" pos:end="23:36"><expr pos:start="23:27" pos:end="23:36"><name pos:start="23:27" pos:end="23:36">frame_addr</name></expr></argument>, <argument pos:start="23:39" pos:end="23:43"><expr pos:start="23:39" pos:end="23:43"><operator pos:start="23:39" pos:end="23:39">&amp;</operator><name pos:start="23:40" pos:end="23:43">link</name></expr></argument>, <argument pos:start="23:46" pos:end="23:46"><expr pos:start="23:46" pos:end="23:46"><literal type="number" pos:start="23:46" pos:end="23:46">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><call pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:16">le32_to_cpus</name><argument_list pos:start="25:17" pos:end="25:23">(<argument pos:start="25:18" pos:end="25:22"><expr pos:start="25:18" pos:end="25:22"><operator pos:start="25:18" pos:end="25:18">&amp;</operator><name pos:start="25:19" pos:end="25:22">link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:17"><expr pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:12">int_mask</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:17"><expr pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:11">curr_qh</name>  <operator pos:start="31:14" pos:end="31:14">=</operator> <literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><call pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:14">qhdb_reset</name><argument_list pos:start="35:15" pos:end="35:21">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><operator pos:start="35:16" pos:end="35:16">&amp;</operator><name pos:start="35:17" pos:end="35:20">qhdb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="39:5" pos:end="235:5">for <control pos:start="39:9" pos:end="39:61">(<init pos:start="39:10" pos:end="39:31"><expr pos:start="39:10" pos:end="39:30"><name pos:start="39:10" pos:end="39:12">cnt</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:30">FRAME_MAX_LOOPS</name></expr>;</init> <condition pos:start="39:33" pos:end="39:54"><expr pos:start="39:33" pos:end="39:53"><call pos:start="39:33" pos:end="39:46"><name pos:start="39:33" pos:end="39:40">is_valid</name><argument_list pos:start="39:41" pos:end="39:46">(<argument pos:start="39:42" pos:end="39:45"><expr pos:start="39:42" pos:end="39:45"><name pos:start="39:42" pos:end="39:45">link</name></expr></argument>)</argument_list></call> <operator pos:start="39:48" pos:end="39:49">&amp;&amp;</operator> <name pos:start="39:51" pos:end="39:53">cnt</name></expr>;</condition> <incr pos:start="39:56" pos:end="39:60"><expr pos:start="39:56" pos:end="39:60"><name pos:start="39:56" pos:end="39:58">cnt</name><operator pos:start="39:59" pos:end="39:60">--</operator></expr></incr>)</control> <block pos:start="39:63" pos:end="235:5">{<block_content pos:start="41:9" pos:end="229:9">

        <if_stmt pos:start="41:9" pos:end="51:9"><if pos:start="41:9" pos:end="51:9">if <condition pos:start="41:12" pos:end="41:49">(<expr pos:start="41:13" pos:end="41:48"><name pos:start="41:13" pos:end="41:26"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:26">frame_bytes</name></name> <operator pos:start="41:28" pos:end="41:29">&gt;=</operator> <name pos:start="41:31" pos:end="41:48"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:48">frame_bandwidth</name></name></expr>)</condition> <block pos:start="41:51" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:18">

            <comment type="block" pos:start="43:13" pos:end="45:51">/* We've reached the usb 1.1 bandwidth, which is

               1280 bytes/frame, stop processing */</comment>

            <expr_stmt pos:start="47:13" pos:end="47:50"><expr pos:start="47:13" pos:end="47:49"><call pos:start="47:13" pos:end="47:49"><name pos:start="47:13" pos:end="47:47">trace_usb_uhci_frame_stop_bandwidth</name><argument_list pos:start="47:48" pos:end="47:49">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="127:9"><if pos:start="53:9" pos:end="127:9">if <condition pos:start="53:12" pos:end="53:24">(<expr pos:start="53:13" pos:end="53:23"><call pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:17">is_qh</name><argument_list pos:start="53:18" pos:end="53:23">(<argument pos:start="53:19" pos:end="53:22"><expr pos:start="53:19" pos:end="53:22"><name pos:start="53:19" pos:end="53:22">link</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:26" pos:end="127:9">{<block_content pos:start="57:13" pos:end="125:21">

            <comment type="block" pos:start="55:13" pos:end="55:20">/* QH */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:48"><expr pos:start="57:13" pos:end="57:47"><call pos:start="57:13" pos:end="57:47"><name pos:start="57:13" pos:end="57:34">trace_usb_uhci_qh_load</name><argument_list pos:start="57:35" pos:end="57:47">(<argument pos:start="57:36" pos:end="57:46"><expr pos:start="57:36" pos:end="57:46"><name pos:start="57:36" pos:end="57:39">link</name> <operator pos:start="57:41" pos:end="57:41">&amp;</operator> <operator pos:start="57:43" pos:end="57:43">~</operator><literal type="number" pos:start="57:44" pos:end="57:46">0xf</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="61:13" pos:end="95:13"><if pos:start="61:13" pos:end="95:13">if <condition pos:start="61:16" pos:end="61:41">(<expr pos:start="61:17" pos:end="61:40"><call pos:start="61:17" pos:end="61:40"><name pos:start="61:17" pos:end="61:27">qhdb_insert</name><argument_list pos:start="61:28" pos:end="61:40">(<argument pos:start="61:29" pos:end="61:33"><expr pos:start="61:29" pos:end="61:33"><operator pos:start="61:29" pos:end="61:29">&amp;</operator><name pos:start="61:30" pos:end="61:33">qhdb</name></expr></argument>, <argument pos:start="61:36" pos:end="61:39"><expr pos:start="61:36" pos:end="61:39"><name pos:start="61:36" pos:end="61:39">link</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:43" pos:end="95:13">{<block_content pos:start="77:17" pos:end="93:17">

                <comment type="block" pos:start="63:17" pos:end="75:19">/*

                 * We're going in circles. Which is not a bug because

                 * HCD is allowed to do that as part of the BW management.

                 *

                 * Stop processing here if no transaction has been done

                 * since we've been here last time.

                 */</comment>

                <if_stmt pos:start="77:17" pos:end="93:17"><if pos:start="77:17" pos:end="83:17">if <condition pos:start="77:20" pos:end="77:34">(<expr pos:start="77:21" pos:end="77:33"><name pos:start="77:21" pos:end="77:28">td_count</name> <operator pos:start="77:30" pos:end="77:31">==</operator> <literal type="number" pos:start="77:33" pos:end="77:33">0</literal></expr>)</condition> <block pos:start="77:36" pos:end="83:17">{<block_content pos:start="79:21" pos:end="81:26">

                    <expr_stmt pos:start="79:21" pos:end="79:58"><expr pos:start="79:21" pos:end="79:57"><call pos:start="79:21" pos:end="79:57"><name pos:start="79:21" pos:end="79:55">trace_usb_uhci_frame_loop_stop_idle</name><argument_list pos:start="79:56" pos:end="79:57">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="81:21" pos:end="81:26">break;</break>

                </block_content>}</block></if> <else pos:start="83:19" pos:end="93:17">else <block pos:start="83:24" pos:end="93:17">{<block_content pos:start="85:21" pos:end="91:45">

                    <expr_stmt pos:start="85:21" pos:end="85:57"><expr pos:start="85:21" pos:end="85:56"><call pos:start="85:21" pos:end="85:56"><name pos:start="85:21" pos:end="85:54">trace_usb_uhci_frame_loop_continue</name><argument_list pos:start="85:55" pos:end="85:56">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:33"><expr pos:start="87:21" pos:end="87:32"><name pos:start="87:21" pos:end="87:28">td_count</name> <operator pos:start="87:30" pos:end="87:30">=</operator> <literal type="number" pos:start="87:32" pos:end="87:32">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="89:21" pos:end="89:38"><expr pos:start="89:21" pos:end="89:37"><call pos:start="89:21" pos:end="89:37"><name pos:start="89:21" pos:end="89:30">qhdb_reset</name><argument_list pos:start="89:31" pos:end="89:37">(<argument pos:start="89:32" pos:end="89:36"><expr pos:start="89:32" pos:end="89:36"><operator pos:start="89:32" pos:end="89:32">&amp;</operator><name pos:start="89:33" pos:end="89:36">qhdb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:45"><expr pos:start="91:21" pos:end="91:44"><call pos:start="91:21" pos:end="91:44"><name pos:start="91:21" pos:end="91:31">qhdb_insert</name><argument_list pos:start="91:32" pos:end="91:44">(<argument pos:start="91:33" pos:end="91:37"><expr pos:start="91:33" pos:end="91:37"><operator pos:start="91:33" pos:end="91:33">&amp;</operator><name pos:start="91:34" pos:end="91:37">qhdb</name></expr></argument>, <argument pos:start="91:40" pos:end="91:43"><expr pos:start="91:40" pos:end="91:43"><name pos:start="91:40" pos:end="91:43">link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="99:13" pos:end="99:64"><expr pos:start="99:13" pos:end="99:63"><call pos:start="99:13" pos:end="99:63"><name pos:start="99:13" pos:end="99:24">pci_dma_read</name><argument_list pos:start="99:25" pos:end="99:63">(<argument pos:start="99:26" pos:end="99:32"><expr pos:start="99:26" pos:end="99:32"><operator pos:start="99:26" pos:end="99:26">&amp;</operator><name pos:start="99:27" pos:end="99:32"><name pos:start="99:27" pos:end="99:27">s</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:32">dev</name></name></expr></argument>, <argument pos:start="99:35" pos:end="99:45"><expr pos:start="99:35" pos:end="99:45"><name pos:start="99:35" pos:end="99:38">link</name> <operator pos:start="99:40" pos:end="99:40">&amp;</operator> <operator pos:start="99:42" pos:end="99:42">~</operator><literal type="number" pos:start="99:43" pos:end="99:45">0xf</literal></expr></argument>, <argument pos:start="99:48" pos:end="99:50"><expr pos:start="99:48" pos:end="99:50"><operator pos:start="99:48" pos:end="99:48">&amp;</operator><name pos:start="99:49" pos:end="99:50">qh</name></expr></argument>, <argument pos:start="99:53" pos:end="99:62"><expr pos:start="99:53" pos:end="99:62"><sizeof pos:start="99:53" pos:end="99:62">sizeof<argument_list pos:start="99:59" pos:end="99:62">(<argument pos:start="99:60" pos:end="99:61"><expr pos:start="99:60" pos:end="99:61"><name pos:start="99:60" pos:end="99:61">qh</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:35"><expr pos:start="101:13" pos:end="101:34"><call pos:start="101:13" pos:end="101:34"><name pos:start="101:13" pos:end="101:24">le32_to_cpus</name><argument_list pos:start="101:25" pos:end="101:34">(<argument pos:start="101:26" pos:end="101:33"><expr pos:start="101:26" pos:end="101:33"><operator pos:start="101:26" pos:end="101:26">&amp;</operator><name pos:start="101:27" pos:end="101:33"><name pos:start="101:27" pos:end="101:28">qh</name><operator pos:start="101:29" pos:end="101:29">.</operator><name pos:start="101:30" pos:end="101:33">link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:38"><expr pos:start="103:13" pos:end="103:37"><call pos:start="103:13" pos:end="103:37"><name pos:start="103:13" pos:end="103:24">le32_to_cpus</name><argument_list pos:start="103:25" pos:end="103:37">(<argument pos:start="103:26" pos:end="103:36"><expr pos:start="103:26" pos:end="103:36"><operator pos:start="103:26" pos:end="103:26">&amp;</operator><name pos:start="103:27" pos:end="103:36"><name pos:start="103:27" pos:end="103:28">qh</name><operator pos:start="103:29" pos:end="103:29">.</operator><name pos:start="103:30" pos:end="103:36">el_link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="107:13" pos:end="123:13"><if pos:start="107:13" pos:end="115:13">if <condition pos:start="107:16" pos:end="107:38">(<expr pos:start="107:17" pos:end="107:37"><operator pos:start="107:17" pos:end="107:17">!</operator><call pos:start="107:18" pos:end="107:37"><name pos:start="107:18" pos:end="107:25">is_valid</name><argument_list pos:start="107:26" pos:end="107:37">(<argument pos:start="107:27" pos:end="107:36"><expr pos:start="107:27" pos:end="107:36"><name pos:start="107:27" pos:end="107:36"><name pos:start="107:27" pos:end="107:28">qh</name><operator pos:start="107:29" pos:end="107:29">.</operator><name pos:start="107:30" pos:end="107:36">el_link</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:40" pos:end="115:13">{<block_content pos:start="111:17" pos:end="113:31">

                <comment type="block" pos:start="109:17" pos:end="109:37">/* QH w/o elements */</comment>

                <expr_stmt pos:start="111:17" pos:end="111:28"><expr pos:start="111:17" pos:end="111:27"><name pos:start="111:17" pos:end="111:23">curr_qh</name> <operator pos:start="111:25" pos:end="111:25">=</operator> <literal type="number" pos:start="111:27" pos:end="111:27">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:31"><expr pos:start="113:17" pos:end="113:30"><name pos:start="113:17" pos:end="113:20">link</name> <operator pos:start="113:22" pos:end="113:22">=</operator> <name pos:start="113:24" pos:end="113:30"><name pos:start="113:24" pos:end="113:25">qh</name><operator pos:start="113:26" pos:end="113:26">.</operator><name pos:start="113:27" pos:end="113:30">link</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="115:15" pos:end="123:13">else <block pos:start="115:20" pos:end="123:13">{<block_content pos:start="119:17" pos:end="121:34">

                <comment type="block" pos:start="117:17" pos:end="117:38">/* QH with elements */</comment>

            	<expr_stmt pos:start="119:17" pos:end="119:31"><expr pos:start="119:17" pos:end="119:30"><name pos:start="119:17" pos:end="119:23">curr_qh</name> <operator pos:start="119:25" pos:end="119:25">=</operator> <name pos:start="119:27" pos:end="119:30">link</name></expr>;</expr_stmt>

            	<expr_stmt pos:start="121:17" pos:end="121:34"><expr pos:start="121:17" pos:end="121:33"><name pos:start="121:17" pos:end="121:20">link</name> <operator pos:start="121:22" pos:end="121:22">=</operator> <name pos:start="121:24" pos:end="121:33"><name pos:start="121:24" pos:end="121:25">qh</name><operator pos:start="121:26" pos:end="121:26">.</operator><name pos:start="121:27" pos:end="121:33">el_link</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <continue pos:start="125:13" pos:end="125:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="131:9" pos:end="131:16">/* TD */</comment>

        <expr_stmt pos:start="133:9" pos:end="133:35"><expr pos:start="133:9" pos:end="133:34"><call pos:start="133:9" pos:end="133:34"><name pos:start="133:9" pos:end="133:20">uhci_read_td</name><argument_list pos:start="133:21" pos:end="133:34">(<argument pos:start="133:22" pos:end="133:22"><expr pos:start="133:22" pos:end="133:22"><name pos:start="133:22" pos:end="133:22">s</name></expr></argument>, <argument pos:start="133:25" pos:end="133:27"><expr pos:start="133:25" pos:end="133:27"><operator pos:start="133:25" pos:end="133:25">&amp;</operator><name pos:start="133:26" pos:end="133:27">td</name></expr></argument>, <argument pos:start="133:30" pos:end="133:33"><expr pos:start="133:30" pos:end="133:33"><name pos:start="133:30" pos:end="133:33">link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:79"><expr pos:start="135:9" pos:end="135:78"><call pos:start="135:9" pos:end="135:78"><name pos:start="135:9" pos:end="135:30">trace_usb_uhci_td_load</name><argument_list pos:start="135:31" pos:end="135:78">(<argument pos:start="135:32" pos:end="135:45"><expr pos:start="135:32" pos:end="135:45"><name pos:start="135:32" pos:end="135:38">curr_qh</name> <operator pos:start="135:40" pos:end="135:40">&amp;</operator> <operator pos:start="135:42" pos:end="135:42">~</operator><literal type="number" pos:start="135:43" pos:end="135:45">0xf</literal></expr></argument>, <argument pos:start="135:48" pos:end="135:58"><expr pos:start="135:48" pos:end="135:58"><name pos:start="135:48" pos:end="135:51">link</name> <operator pos:start="135:53" pos:end="135:53">&amp;</operator> <operator pos:start="135:55" pos:end="135:55">~</operator><literal type="number" pos:start="135:56" pos:end="135:58">0xf</literal></expr></argument>, <argument pos:start="135:61" pos:end="135:67"><expr pos:start="135:61" pos:end="135:67"><name pos:start="135:61" pos:end="135:67"><name pos:start="135:61" pos:end="135:62">td</name><operator pos:start="135:63" pos:end="135:63">.</operator><name pos:start="135:64" pos:end="135:67">ctrl</name></name></expr></argument>, <argument pos:start="135:70" pos:end="135:77"><expr pos:start="135:70" pos:end="135:77"><name pos:start="135:70" pos:end="135:77"><name pos:start="135:70" pos:end="135:71">td</name><operator pos:start="135:72" pos:end="135:72">.</operator><name pos:start="135:73" pos:end="135:77">token</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="139:9" pos:end="139:30"><expr pos:start="139:9" pos:end="139:29"><name pos:start="139:9" pos:end="139:19">old_td_ctrl</name> <operator pos:start="139:21" pos:end="139:21">=</operator> <name pos:start="139:23" pos:end="139:29"><name pos:start="139:23" pos:end="139:24">td</name><operator pos:start="139:25" pos:end="139:25">.</operator><name pos:start="139:26" pos:end="139:29">ctrl</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:60"><expr pos:start="141:9" pos:end="141:59"><name pos:start="141:9" pos:end="141:11">ret</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <call pos:start="141:15" pos:end="141:59"><name pos:start="141:15" pos:end="141:28">uhci_handle_td</name><argument_list pos:start="141:29" pos:end="141:59">(<argument pos:start="141:30" pos:end="141:30"><expr pos:start="141:30" pos:end="141:30"><name pos:start="141:30" pos:end="141:30">s</name></expr></argument>, <argument pos:start="141:33" pos:end="141:36"><expr pos:start="141:33" pos:end="141:36"><name pos:start="141:33" pos:end="141:36">NULL</name></expr></argument>, <argument pos:start="141:39" pos:end="141:41"><expr pos:start="141:39" pos:end="141:41"><operator pos:start="141:39" pos:end="141:39">&amp;</operator><name pos:start="141:40" pos:end="141:41">td</name></expr></argument>, <argument pos:start="141:44" pos:end="141:47"><expr pos:start="141:44" pos:end="141:47"><name pos:start="141:44" pos:end="141:47">link</name></expr></argument>, <argument pos:start="141:50" pos:end="141:58"><expr pos:start="141:50" pos:end="141:58"><operator pos:start="141:50" pos:end="141:50">&amp;</operator><name pos:start="141:51" pos:end="141:58">int_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="143:9" pos:end="151:9"><if pos:start="143:9" pos:end="151:9">if <condition pos:start="143:12" pos:end="143:35">(<expr pos:start="143:13" pos:end="143:34"><name pos:start="143:13" pos:end="143:23">old_td_ctrl</name> <operator pos:start="143:25" pos:end="143:26">!=</operator> <name pos:start="143:28" pos:end="143:34"><name pos:start="143:28" pos:end="143:29">td</name><operator pos:start="143:30" pos:end="143:30">.</operator><name pos:start="143:31" pos:end="143:34">ctrl</name></name></expr>)</condition> <block pos:start="143:37" pos:end="151:9">{<block_content pos:start="147:13" pos:end="149:73">

            <comment type="block" pos:start="145:13" pos:end="145:50">/* update the status bits of the TD */</comment>

            <expr_stmt pos:start="147:13" pos:end="147:39"><expr pos:start="147:13" pos:end="147:38"><name pos:start="147:13" pos:end="147:15">val</name> <operator pos:start="147:17" pos:end="147:17">=</operator> <call pos:start="147:19" pos:end="147:38"><name pos:start="147:19" pos:end="147:29">cpu_to_le32</name><argument_list pos:start="147:30" pos:end="147:38">(<argument pos:start="147:31" pos:end="147:37"><expr pos:start="147:31" pos:end="147:37"><name pos:start="147:31" pos:end="147:37"><name pos:start="147:31" pos:end="147:32">td</name><operator pos:start="147:33" pos:end="147:33">.</operator><name pos:start="147:34" pos:end="147:37">ctrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:73"><expr pos:start="149:13" pos:end="149:72"><call pos:start="149:13" pos:end="149:72"><name pos:start="149:13" pos:end="149:25">pci_dma_write</name><argument_list pos:start="149:26" pos:end="149:72">(<argument pos:start="149:27" pos:end="149:33"><expr pos:start="149:27" pos:end="149:33"><operator pos:start="149:27" pos:end="149:27">&amp;</operator><name pos:start="149:28" pos:end="149:33"><name pos:start="149:28" pos:end="149:28">s</name><operator pos:start="149:29" pos:end="149:30">-&gt;</operator><name pos:start="149:31" pos:end="149:33">dev</name></name></expr></argument>, <argument pos:start="149:36" pos:end="149:52"><expr pos:start="149:36" pos:end="149:52"><operator pos:start="149:36" pos:end="149:36">(</operator><name pos:start="149:37" pos:end="149:40">link</name> <operator pos:start="149:42" pos:end="149:42">&amp;</operator> <operator pos:start="149:44" pos:end="149:44">~</operator><literal type="number" pos:start="149:45" pos:end="149:47">0xf</literal><operator pos:start="149:48" pos:end="149:48">)</operator> <operator pos:start="149:50" pos:end="149:50">+</operator> <literal type="number" pos:start="149:52" pos:end="149:52">4</literal></expr></argument>, <argument pos:start="149:55" pos:end="149:58"><expr pos:start="149:55" pos:end="149:58"><operator pos:start="149:55" pos:end="149:55">&amp;</operator><name pos:start="149:56" pos:end="149:58">val</name></expr></argument>, <argument pos:start="149:61" pos:end="149:71"><expr pos:start="149:61" pos:end="149:71"><sizeof pos:start="149:61" pos:end="149:71">sizeof<argument_list pos:start="149:67" pos:end="149:71">(<argument pos:start="149:68" pos:end="149:70"><expr pos:start="149:68" pos:end="149:70"><name pos:start="149:68" pos:end="149:70">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="155:9" pos:end="229:9">switch <condition pos:start="155:16" pos:end="155:20">(<expr pos:start="155:17" pos:end="155:19"><name pos:start="155:17" pos:end="155:19">ret</name></expr>)</condition> <block pos:start="155:22" pos:end="229:9">{<block_content pos:start="157:9" pos:end="227:43">

        <case pos:start="157:9" pos:end="157:34">case <expr pos:start="157:14" pos:end="157:33"><name pos:start="157:14" pos:end="157:33">TD_RESULT_STOP_FRAME</name></expr>:</case> <comment type="block" pos:start="157:36" pos:end="157:58">/* interrupted frame */</comment>

            <goto pos:start="159:13" pos:end="159:21">goto <name pos:start="159:18" pos:end="159:20">out</name>;</goto>



        <case pos:start="163:9" pos:end="163:31">case <expr pos:start="163:14" pos:end="163:30"><name pos:start="163:14" pos:end="163:30">TD_RESULT_NEXT_QH</name></expr>:</case>

        <case pos:start="165:9" pos:end="165:34">case <expr pos:start="165:14" pos:end="165:33"><name pos:start="165:14" pos:end="165:33">TD_RESULT_ASYNC_CONT</name></expr>:</case>

            <expr_stmt pos:start="167:13" pos:end="167:66"><expr pos:start="167:13" pos:end="167:65"><call pos:start="167:13" pos:end="167:65"><name pos:start="167:13" pos:end="167:36">trace_usb_uhci_td_nextqh</name><argument_list pos:start="167:37" pos:end="167:65">(<argument pos:start="167:38" pos:end="167:51"><expr pos:start="167:38" pos:end="167:51"><name pos:start="167:38" pos:end="167:44">curr_qh</name> <operator pos:start="167:46" pos:end="167:46">&amp;</operator> <operator pos:start="167:48" pos:end="167:48">~</operator><literal type="number" pos:start="167:49" pos:end="167:51">0xf</literal></expr></argument>, <argument pos:start="167:54" pos:end="167:64"><expr pos:start="167:54" pos:end="167:64"><name pos:start="167:54" pos:end="167:57">link</name> <operator pos:start="167:59" pos:end="167:59">&amp;</operator> <operator pos:start="167:61" pos:end="167:61">~</operator><literal type="number" pos:start="167:62" pos:end="167:64">0xf</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:47"><expr pos:start="169:13" pos:end="169:46"><name pos:start="169:13" pos:end="169:16">link</name> <operator pos:start="169:18" pos:end="169:18">=</operator> <ternary pos:start="169:20" pos:end="169:46"><condition pos:start="169:20" pos:end="169:28"><expr pos:start="169:20" pos:end="169:26"><name pos:start="169:20" pos:end="169:26">curr_qh</name></expr> ?</condition><then pos:start="169:30" pos:end="169:36"> <expr pos:start="169:30" pos:end="169:36"><name pos:start="169:30" pos:end="169:36"><name pos:start="169:30" pos:end="169:31">qh</name><operator pos:start="169:32" pos:end="169:32">.</operator><name pos:start="169:33" pos:end="169:36">link</name></name></expr> </then><else pos:start="169:38" pos:end="169:46">: <expr pos:start="169:40" pos:end="169:46"><name pos:start="169:40" pos:end="169:46"><name pos:start="169:40" pos:end="169:41">td</name><operator pos:start="169:42" pos:end="169:42">.</operator><name pos:start="169:43" pos:end="169:46">link</name></name></expr></else></ternary></expr>;</expr_stmt>

            <continue pos:start="171:13" pos:end="171:21">continue;</continue>



        <case pos:start="175:9" pos:end="175:35">case <expr pos:start="175:14" pos:end="175:34"><name pos:start="175:14" pos:end="175:34">TD_RESULT_ASYNC_START</name></expr>:</case>

            <expr_stmt pos:start="177:13" pos:end="177:65"><expr pos:start="177:13" pos:end="177:64"><call pos:start="177:13" pos:end="177:64"><name pos:start="177:13" pos:end="177:35">trace_usb_uhci_td_async</name><argument_list pos:start="177:36" pos:end="177:64">(<argument pos:start="177:37" pos:end="177:50"><expr pos:start="177:37" pos:end="177:50"><name pos:start="177:37" pos:end="177:43">curr_qh</name> <operator pos:start="177:45" pos:end="177:45">&amp;</operator> <operator pos:start="177:47" pos:end="177:47">~</operator><literal type="number" pos:start="177:48" pos:end="177:50">0xf</literal></expr></argument>, <argument pos:start="177:53" pos:end="177:63"><expr pos:start="177:53" pos:end="177:63"><name pos:start="177:53" pos:end="177:56">link</name> <operator pos:start="177:58" pos:end="177:58">&amp;</operator> <operator pos:start="177:60" pos:end="177:60">~</operator><literal type="number" pos:start="177:61" pos:end="177:63">0xf</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:47"><expr pos:start="179:13" pos:end="179:46"><name pos:start="179:13" pos:end="179:16">link</name> <operator pos:start="179:18" pos:end="179:18">=</operator> <ternary pos:start="179:20" pos:end="179:46"><condition pos:start="179:20" pos:end="179:28"><expr pos:start="179:20" pos:end="179:26"><name pos:start="179:20" pos:end="179:26">curr_qh</name></expr> ?</condition><then pos:start="179:30" pos:end="179:36"> <expr pos:start="179:30" pos:end="179:36"><name pos:start="179:30" pos:end="179:36"><name pos:start="179:30" pos:end="179:31">qh</name><operator pos:start="179:32" pos:end="179:32">.</operator><name pos:start="179:33" pos:end="179:36">link</name></name></expr> </then><else pos:start="179:38" pos:end="179:46">: <expr pos:start="179:40" pos:end="179:46"><name pos:start="179:40" pos:end="179:46"><name pos:start="179:40" pos:end="179:41">td</name><operator pos:start="179:42" pos:end="179:42">.</operator><name pos:start="179:43" pos:end="179:46">link</name></name></expr></else></ternary></expr>;</expr_stmt>

            <continue pos:start="181:13" pos:end="181:21">continue;</continue>



        <case pos:start="185:9" pos:end="185:32">case <expr pos:start="185:14" pos:end="185:31"><name pos:start="185:14" pos:end="185:31">TD_RESULT_COMPLETE</name></expr>:</case>

            <expr_stmt pos:start="187:13" pos:end="187:68"><expr pos:start="187:13" pos:end="187:67"><call pos:start="187:13" pos:end="187:67"><name pos:start="187:13" pos:end="187:38">trace_usb_uhci_td_complete</name><argument_list pos:start="187:39" pos:end="187:67">(<argument pos:start="187:40" pos:end="187:53"><expr pos:start="187:40" pos:end="187:53"><name pos:start="187:40" pos:end="187:46">curr_qh</name> <operator pos:start="187:48" pos:end="187:48">&amp;</operator> <operator pos:start="187:50" pos:end="187:50">~</operator><literal type="number" pos:start="187:51" pos:end="187:53">0xf</literal></expr></argument>, <argument pos:start="187:56" pos:end="187:66"><expr pos:start="187:56" pos:end="187:66"><name pos:start="187:56" pos:end="187:59">link</name> <operator pos:start="187:61" pos:end="187:61">&amp;</operator> <operator pos:start="187:63" pos:end="187:63">~</operator><literal type="number" pos:start="187:64" pos:end="187:66">0xf</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:27"><expr pos:start="189:13" pos:end="189:26"><name pos:start="189:13" pos:end="189:16">link</name> <operator pos:start="189:18" pos:end="189:18">=</operator> <name pos:start="189:20" pos:end="189:26"><name pos:start="189:20" pos:end="189:21">td</name><operator pos:start="189:22" pos:end="189:22">.</operator><name pos:start="189:23" pos:end="189:26">link</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:23"><expr pos:start="191:13" pos:end="191:22"><name pos:start="191:13" pos:end="191:20">td_count</name><operator pos:start="191:21" pos:end="191:22">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:52"><expr pos:start="193:13" pos:end="193:51"><name pos:start="193:13" pos:end="193:26"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:26">frame_bytes</name></name> <operator pos:start="193:28" pos:end="193:29">+=</operator> <operator pos:start="193:31" pos:end="193:31">(</operator><name pos:start="193:32" pos:end="193:38"><name pos:start="193:32" pos:end="193:33">td</name><operator pos:start="193:34" pos:end="193:34">.</operator><name pos:start="193:35" pos:end="193:38">ctrl</name></name> <operator pos:start="193:40" pos:end="193:40">&amp;</operator> <literal type="number" pos:start="193:42" pos:end="193:46">0x7ff</literal><operator pos:start="193:47" pos:end="193:47">)</operator> <operator pos:start="193:49" pos:end="193:49">+</operator> <literal type="number" pos:start="193:51" pos:end="193:51">1</literal></expr>;</expr_stmt>



            <if_stmt pos:start="197:13" pos:end="219:13"><if pos:start="197:13" pos:end="219:13">if <condition pos:start="197:16" pos:end="197:24">(<expr pos:start="197:17" pos:end="197:23"><name pos:start="197:17" pos:end="197:23">curr_qh</name></expr>)</condition> <block pos:start="197:26" pos:end="219:13">{<block_content pos:start="201:17" pos:end="217:17">

                <comment type="block" pos:start="199:17" pos:end="199:44">/* update QH element link */</comment>

                <expr_stmt pos:start="201:17" pos:end="201:34"><expr pos:start="201:17" pos:end="201:33"><name pos:start="201:17" pos:end="201:26"><name pos:start="201:17" pos:end="201:18">qh</name><operator pos:start="201:19" pos:end="201:19">.</operator><name pos:start="201:20" pos:end="201:26">el_link</name></name> <operator pos:start="201:28" pos:end="201:28">=</operator> <name pos:start="201:30" pos:end="201:33">link</name></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:46"><expr pos:start="203:17" pos:end="203:45"><name pos:start="203:17" pos:end="203:19">val</name> <operator pos:start="203:21" pos:end="203:21">=</operator> <call pos:start="203:23" pos:end="203:45"><name pos:start="203:23" pos:end="203:33">cpu_to_le32</name><argument_list pos:start="203:34" pos:end="203:45">(<argument pos:start="203:35" pos:end="203:44"><expr pos:start="203:35" pos:end="203:44"><name pos:start="203:35" pos:end="203:44"><name pos:start="203:35" pos:end="203:36">qh</name><operator pos:start="203:37" pos:end="203:37">.</operator><name pos:start="203:38" pos:end="203:44">el_link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:80"><expr pos:start="205:17" pos:end="205:79"><call pos:start="205:17" pos:end="205:79"><name pos:start="205:17" pos:end="205:29">pci_dma_write</name><argument_list pos:start="205:30" pos:end="205:79">(<argument pos:start="205:31" pos:end="205:37"><expr pos:start="205:31" pos:end="205:37"><operator pos:start="205:31" pos:end="205:31">&amp;</operator><name pos:start="205:32" pos:end="205:37"><name pos:start="205:32" pos:end="205:32">s</name><operator pos:start="205:33" pos:end="205:34">-&gt;</operator><name pos:start="205:35" pos:end="205:37">dev</name></name></expr></argument>, <argument pos:start="205:40" pos:end="205:59"><expr pos:start="205:40" pos:end="205:59"><operator pos:start="205:40" pos:end="205:40">(</operator><name pos:start="205:41" pos:end="205:47">curr_qh</name> <operator pos:start="205:49" pos:end="205:49">&amp;</operator> <operator pos:start="205:51" pos:end="205:51">~</operator><literal type="number" pos:start="205:52" pos:end="205:54">0xf</literal><operator pos:start="205:55" pos:end="205:55">)</operator> <operator pos:start="205:57" pos:end="205:57">+</operator> <literal type="number" pos:start="205:59" pos:end="205:59">4</literal></expr></argument>, <argument pos:start="205:62" pos:end="205:65"><expr pos:start="205:62" pos:end="205:65"><operator pos:start="205:62" pos:end="205:62">&amp;</operator><name pos:start="205:63" pos:end="205:65">val</name></expr></argument>, <argument pos:start="205:68" pos:end="205:78"><expr pos:start="205:68" pos:end="205:78"><sizeof pos:start="205:68" pos:end="205:78">sizeof<argument_list pos:start="205:74" pos:end="205:78">(<argument pos:start="205:75" pos:end="205:77"><expr pos:start="205:75" pos:end="205:77"><name pos:start="205:75" pos:end="205:77">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="209:17" pos:end="217:17"><if pos:start="209:17" pos:end="217:17">if <condition pos:start="209:20" pos:end="209:39">(<expr pos:start="209:21" pos:end="209:38"><operator pos:start="209:21" pos:end="209:21">!</operator><call pos:start="209:22" pos:end="209:38"><name pos:start="209:22" pos:end="209:32">depth_first</name><argument_list pos:start="209:33" pos:end="209:38">(<argument pos:start="209:34" pos:end="209:37"><expr pos:start="209:34" pos:end="209:37"><name pos:start="209:34" pos:end="209:37">link</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="209:41" pos:end="217:17">{<block_content pos:start="213:21" pos:end="215:38">

                    <comment type="block" pos:start="211:21" pos:end="211:43">/* done with this QH */</comment>

                    <expr_stmt pos:start="213:21" pos:end="213:32"><expr pos:start="213:21" pos:end="213:31"><name pos:start="213:21" pos:end="213:27">curr_qh</name> <operator pos:start="213:29" pos:end="213:29">=</operator> <literal type="number" pos:start="213:31" pos:end="213:31">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="215:21" pos:end="215:38"><expr pos:start="215:21" pos:end="215:37"><name pos:start="215:21" pos:end="215:24">link</name>    <operator pos:start="215:29" pos:end="215:29">=</operator> <name pos:start="215:31" pos:end="215:37"><name pos:start="215:31" pos:end="215:32">qh</name><operator pos:start="215:33" pos:end="215:33">.</operator><name pos:start="215:34" pos:end="215:37">link</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="221:13" pos:end="221:18">break;</break>



        <default pos:start="225:9" pos:end="225:16">default:</default>

            <expr_stmt pos:start="227:13" pos:end="227:43"><expr pos:start="227:13" pos:end="227:42"><call pos:start="227:13" pos:end="227:42"><name pos:start="227:13" pos:end="227:18">assert</name><argument_list pos:start="227:19" pos:end="227:42">(<argument pos:start="227:20" pos:end="227:41"><expr pos:start="227:20" pos:end="227:41"><operator pos:start="227:20" pos:end="227:20">!</operator><literal type="string" pos:start="227:21" pos:end="227:41">"unknown return code"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>



        <comment type="block" pos:start="233:9" pos:end="233:34">/* go to the next entry */</comment>

    </block_content>}</block></for>



<label pos:start="239:1" pos:end="239:4"><name pos:start="239:1" pos:end="239:3">out</name>:</label>

    <expr_stmt pos:start="241:5" pos:end="241:36"><expr pos:start="241:5" pos:end="241:35"><name pos:start="241:5" pos:end="241:23"><name pos:start="241:5" pos:end="241:5">s</name><operator pos:start="241:6" pos:end="241:7">-&gt;</operator><name pos:start="241:8" pos:end="241:23">pending_int_mask</name></name> <operator pos:start="241:25" pos:end="241:26">|=</operator> <name pos:start="241:28" pos:end="241:35">int_mask</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
