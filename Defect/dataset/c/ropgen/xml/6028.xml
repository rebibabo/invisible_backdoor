<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6028.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">egl_rendernode_init</name><parameter_list pos:start="1:24" pos:end="1:47">(<parameter pos:start="1:25" pos:end="1:46"><decl pos:start="1:25" pos:end="1:46"><type pos:start="1:25" pos:end="1:36"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:46">rendernode</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:14">

    <expr_stmt pos:start="5:5" pos:end="5:24"><expr pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:18">qemu_egl_rn_fd</name> <operator pos:start="5:20" pos:end="5:20">=</operator> <operator pos:start="5:22" pos:end="5:22">-</operator><literal type="number" pos:start="5:23" pos:end="5:23">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:58"><expr pos:start="9:5" pos:end="9:57"><name pos:start="9:5" pos:end="9:18">qemu_egl_rn_fd</name> <operator pos:start="9:20" pos:end="9:20">=</operator> <call pos:start="9:22" pos:end="9:57"><name pos:start="9:22" pos:end="9:45">qemu_egl_rendernode_open</name><argument_list pos:start="9:46" pos:end="9:57">(<argument pos:start="9:47" pos:end="9:56"><expr pos:start="9:47" pos:end="9:56"><name pos:start="9:47" pos:end="9:56">rendernode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:29">(<expr pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:22">qemu_egl_rn_fd</name> <operator pos:start="11:24" pos:end="11:25">==</operator> <operator pos:start="11:27" pos:end="11:27">-</operator><literal type="number" pos:start="11:28" pos:end="11:28">1</literal></expr>)</condition> <block pos:start="11:31" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:17">

        <expr_stmt pos:start="13:9" pos:end="13:58"><expr pos:start="13:9" pos:end="13:57"><call pos:start="13:9" pos:end="13:57"><name pos:start="13:9" pos:end="13:20">error_report</name><argument_list pos:start="13:21" pos:end="13:57">(<argument pos:start="13:22" pos:end="13:56"><expr pos:start="13:22" pos:end="13:56"><literal type="string" pos:start="13:22" pos:end="13:56">"egl: no drm render node available"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="15:9" pos:end="15:17">goto <name pos:start="15:14" pos:end="15:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:60"><expr pos:start="21:5" pos:end="21:59"><name pos:start="21:5" pos:end="21:23">qemu_egl_rn_gbm_dev</name> <operator pos:start="21:25" pos:end="21:25">=</operator> <call pos:start="21:27" pos:end="21:59"><name pos:start="21:27" pos:end="21:43">gbm_create_device</name><argument_list pos:start="21:44" pos:end="21:59">(<argument pos:start="21:45" pos:end="21:58"><expr pos:start="21:45" pos:end="21:58"><name pos:start="21:45" pos:end="21:58">qemu_egl_rn_fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:29">(<expr pos:start="23:9" pos:end="23:28"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:28">qemu_egl_rn_gbm_dev</name></expr>)</condition> <block pos:start="23:31" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:17">

        <expr_stmt pos:start="25:9" pos:end="25:54"><expr pos:start="25:9" pos:end="25:53"><call pos:start="25:9" pos:end="25:53"><name pos:start="25:9" pos:end="25:20">error_report</name><argument_list pos:start="25:21" pos:end="25:53">(<argument pos:start="25:22" pos:end="25:52"><expr pos:start="25:22" pos:end="25:52"><literal type="string" pos:start="25:22" pos:end="25:52">"egl: gbm_create_device failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="27:9" pos:end="27:17">goto <name pos:start="27:14" pos:end="27:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:70"><expr pos:start="33:5" pos:end="33:69"><call pos:start="33:5" pos:end="33:69"><name pos:start="33:5" pos:end="33:26">qemu_egl_init_dpy_mesa</name><argument_list pos:start="33:27" pos:end="33:69">(<argument pos:start="33:28" pos:end="33:68"><expr pos:start="33:28" pos:end="33:68"><operator pos:start="33:28" pos:end="33:28">(</operator><name pos:start="33:29" pos:end="33:48">EGLNativeDisplayType</name><operator pos:start="33:49" pos:end="33:49">)</operator><name pos:start="33:50" pos:end="33:68">qemu_egl_rn_gbm_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="39:64">(<expr pos:start="37:9" pos:end="39:63"><operator pos:start="37:9" pos:end="37:9">!</operator><call pos:start="37:10" pos:end="39:63"><name pos:start="37:10" pos:end="37:32">epoxy_has_egl_extension</name><argument_list pos:start="37:33" pos:end="39:63">(<argument pos:start="37:34" pos:end="37:49"><expr pos:start="37:34" pos:end="37:49"><name pos:start="37:34" pos:end="37:49">qemu_egl_display</name></expr></argument>,

                                 <argument pos:start="39:34" pos:end="39:62"><expr pos:start="39:34" pos:end="39:62"><literal type="string" pos:start="39:34" pos:end="39:62">"EGL_KHR_surfaceless_context"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:66" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:17">

        <expr_stmt pos:start="41:9" pos:end="41:71"><expr pos:start="41:9" pos:end="41:70"><call pos:start="41:9" pos:end="41:70"><name pos:start="41:9" pos:end="41:20">error_report</name><argument_list pos:start="41:21" pos:end="41:70">(<argument pos:start="41:22" pos:end="41:69"><expr pos:start="41:22" pos:end="41:69"><literal type="string" pos:start="41:22" pos:end="41:69">"egl: EGL_KHR_surfaceless_context not supported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:17">goto <name pos:start="43:14" pos:end="43:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="49:66">(<expr pos:start="47:9" pos:end="49:65"><operator pos:start="47:9" pos:end="47:9">!</operator><call pos:start="47:10" pos:end="49:65"><name pos:start="47:10" pos:end="47:32">epoxy_has_egl_extension</name><argument_list pos:start="47:33" pos:end="49:65">(<argument pos:start="47:34" pos:end="47:49"><expr pos:start="47:34" pos:end="47:49"><name pos:start="47:34" pos:end="47:49">qemu_egl_display</name></expr></argument>,

                                 <argument pos:start="49:34" pos:end="49:64"><expr pos:start="49:34" pos:end="49:64"><literal type="string" pos:start="49:34" pos:end="49:64">"EGL_MESA_image_dma_buf_export"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:68" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:17">

        <expr_stmt pos:start="51:9" pos:end="51:73"><expr pos:start="51:9" pos:end="51:72"><call pos:start="51:9" pos:end="51:72"><name pos:start="51:9" pos:end="51:20">error_report</name><argument_list pos:start="51:21" pos:end="51:72">(<argument pos:start="51:22" pos:end="51:71"><expr pos:start="51:22" pos:end="51:71"><literal type="string" pos:start="51:22" pos:end="51:71">"egl: EGL_MESA_image_dma_buf_export not supported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:17">goto <name pos:start="53:14" pos:end="53:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:42"><expr pos:start="59:5" pos:end="59:41"><name pos:start="59:5" pos:end="59:19">qemu_egl_rn_ctx</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <call pos:start="59:23" pos:end="59:41"><name pos:start="59:23" pos:end="59:39">qemu_egl_init_ctx</name><argument_list pos:start="59:40" pos:end="59:41">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:25">(<expr pos:start="61:9" pos:end="61:24"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:24">qemu_egl_rn_ctx</name></expr>)</condition> <block pos:start="61:27" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:17">

        <expr_stmt pos:start="63:9" pos:end="63:49"><expr pos:start="63:9" pos:end="63:48"><call pos:start="63:9" pos:end="63:48"><name pos:start="63:9" pos:end="63:20">error_report</name><argument_list pos:start="63:21" pos:end="63:48">(<argument pos:start="63:22" pos:end="63:47"><expr pos:start="63:22" pos:end="63:47"><literal type="string" pos:start="63:22" pos:end="63:47">"egl: egl_init_ctx failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:17">goto <name pos:start="65:14" pos:end="65:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>



<label pos:start="75:1" pos:end="75:4"><name pos:start="75:1" pos:end="75:3">err</name>:</label>

    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:28">(<expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:27">qemu_egl_rn_gbm_dev</name></expr>)</condition> <block pos:start="77:30" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:48">

        <expr_stmt pos:start="79:9" pos:end="79:48"><expr pos:start="79:9" pos:end="79:47"><call pos:start="79:9" pos:end="79:47"><name pos:start="79:9" pos:end="79:26">gbm_device_destroy</name><argument_list pos:start="79:27" pos:end="79:47">(<argument pos:start="79:28" pos:end="79:46"><expr pos:start="79:28" pos:end="79:46"><name pos:start="79:28" pos:end="79:46">qemu_egl_rn_gbm_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="83:5" pos:end="87:5"><if pos:start="83:5" pos:end="87:5">if <condition pos:start="83:8" pos:end="83:29">(<expr pos:start="83:9" pos:end="83:28"><name pos:start="83:9" pos:end="83:22">qemu_egl_rn_fd</name> <operator pos:start="83:24" pos:end="83:25">!=</operator> <operator pos:start="83:27" pos:end="83:27">-</operator><literal type="number" pos:start="83:28" pos:end="83:28">1</literal></expr>)</condition> <block pos:start="83:31" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:30">

        <expr_stmt pos:start="85:9" pos:end="85:30"><expr pos:start="85:9" pos:end="85:29"><call pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:13">close</name><argument_list pos:start="85:14" pos:end="85:29">(<argument pos:start="85:15" pos:end="85:28"><expr pos:start="85:15" pos:end="85:28"><name pos:start="85:15" pos:end="85:28">qemu_egl_rn_fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="91:5" pos:end="91:14">return <expr pos:start="91:12" pos:end="91:13"><operator pos:start="91:12" pos:end="91:12">-</operator><literal type="number" pos:start="91:13" pos:end="91:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
