<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26710.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:9"><name pos:start="1:1" pos:end="1:7">S390CPU</name> <modifier pos:start="1:9" pos:end="1:9">*</modifier></type><name pos:start="1:10" pos:end="1:25">cpu_s390x_create</name><parameter_list pos:start="1:26" pos:end="1:62">(<parameter pos:start="1:27" pos:end="1:47"><decl pos:start="1:27" pos:end="1:47"><type pos:start="1:27" pos:end="1:47"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:47">cpu_model</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:54">Error</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier><modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:47">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:15"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:15">bool</name></type> <name pos:start="5:17" pos:end="5:31">features_parsed</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">name</name></decl>, <decl pos:start="7:17" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:25">features</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:24">typename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">ObjectClass</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">oc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">CPUClass</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">cc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:8">name</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:30"><name pos:start="17:12" pos:end="17:19">g_strdup</name><argument_list pos:start="17:20" pos:end="17:30">(<argument pos:start="17:21" pos:end="17:29"><expr pos:start="17:21" pos:end="17:29"><name pos:start="17:21" pos:end="17:29">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:12">features</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:32"><name pos:start="19:16" pos:end="19:21">strchr</name><argument_list pos:start="19:22" pos:end="19:32">(<argument pos:start="19:23" pos:end="19:26"><expr pos:start="19:23" pos:end="19:26"><name pos:start="19:23" pos:end="19:26">name</name></expr></argument>, <argument pos:start="19:29" pos:end="19:31"><expr pos:start="19:29" pos:end="19:31"><literal type="char" pos:start="19:29" pos:end="19:31">','</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:17">(<expr pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:16">features</name></expr>)</condition> <block pos:start="21:19" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:19">

        <expr_stmt pos:start="23:9" pos:end="23:24"><expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:16">features</name><index pos:start="23:17" pos:end="23:19">[<expr pos:start="23:18" pos:end="23:18"><literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>]</index></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:16">features</name><operator pos:start="25:17" pos:end="25:18">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:48"><expr pos:start="31:5" pos:end="31:47"><name pos:start="31:5" pos:end="31:6">oc</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:47"><name pos:start="31:10" pos:end="31:26">cpu_class_by_name</name><argument_list pos:start="31:27" pos:end="31:47">(<argument pos:start="31:28" pos:end="31:40"><expr pos:start="31:28" pos:end="31:40"><name pos:start="31:28" pos:end="31:40">TYPE_S390_CPU</name></expr></argument>, <argument pos:start="31:43" pos:end="31:46"><expr pos:start="31:43" pos:end="31:46"><name pos:start="31:43" pos:end="31:46">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:12">(<expr pos:start="33:9" pos:end="33:11"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:11">oc</name></expr>)</condition> <block pos:start="33:14" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:20">

        <expr_stmt pos:start="35:9" pos:end="35:64"><expr pos:start="35:9" pos:end="35:63"><call pos:start="35:9" pos:end="35:63"><name pos:start="35:9" pos:end="35:18">error_setg</name><argument_list pos:start="35:19" pos:end="35:63">(<argument pos:start="35:20" pos:end="35:23"><expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">errp</name></expr></argument>, <argument pos:start="35:26" pos:end="35:56"><expr pos:start="35:26" pos:end="35:56"><literal type="string" pos:start="35:26" pos:end="35:56">"Unknown CPU definition \'%s\'"</literal></expr></argument>, <argument pos:start="35:59" pos:end="35:62"><expr pos:start="35:59" pos:end="35:62"><name pos:start="35:59" pos:end="35:62">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:21"><expr pos:start="37:9" pos:end="37:20"><call pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:14">g_free</name><argument_list pos:start="37:15" pos:end="37:20">(<argument pos:start="37:16" pos:end="37:19"><expr pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:19">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:20">return <expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:12">typename</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:40"><name pos:start="43:16" pos:end="43:36">object_class_get_name</name><argument_list pos:start="43:37" pos:end="43:40">(<argument pos:start="43:38" pos:end="43:39"><expr pos:start="43:38" pos:end="43:39"><name pos:start="43:38" pos:end="43:39">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:25">(<expr pos:start="47:9" pos:end="47:24"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:24">features_parsed</name></expr>)</condition> <block pos:start="47:27" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:53">

        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:23">features_parsed</name> <operator pos:start="49:25" pos:end="49:25">=</operator> <name pos:start="49:27" pos:end="49:30">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:10">cc</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <call pos:start="51:14" pos:end="51:26"><name pos:start="51:14" pos:end="51:22">CPU_CLASS</name><argument_list pos:start="51:23" pos:end="51:26">(<argument pos:start="51:24" pos:end="51:25"><expr pos:start="51:24" pos:end="51:25"><name pos:start="51:24" pos:end="51:25">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:53"><expr pos:start="53:9" pos:end="53:52"><call pos:start="53:9" pos:end="53:52"><name pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:10">cc</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:26">parse_features</name></name><argument_list pos:start="53:27" pos:end="53:52">(<argument pos:start="53:28" pos:end="53:35"><expr pos:start="53:28" pos:end="53:35"><name pos:start="53:28" pos:end="53:35">typename</name></expr></argument>, <argument pos:start="53:38" pos:end="53:45"><expr pos:start="53:38" pos:end="53:45"><name pos:start="53:38" pos:end="53:45">features</name></expr></argument>, <argument pos:start="53:48" pos:end="53:51"><expr pos:start="53:48" pos:end="53:51"><name pos:start="53:48" pos:end="53:51">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:17"><expr pos:start="57:5" pos:end="57:16"><call pos:start="57:5" pos:end="57:16"><name pos:start="57:5" pos:end="57:10">g_free</name><argument_list pos:start="57:11" pos:end="57:16">(<argument pos:start="57:12" pos:end="57:15"><expr pos:start="57:12" pos:end="57:15"><name pos:start="57:12" pos:end="57:15">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:14">(<expr pos:start="61:9" pos:end="61:13"><operator pos:start="61:9" pos:end="61:9">*</operator><name pos:start="61:10" pos:end="61:13">errp</name></expr>)</condition> <block pos:start="61:16" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:20">

        <return pos:start="63:9" pos:end="63:20">return <expr pos:start="63:16" pos:end="63:19"><name pos:start="63:16" pos:end="63:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="67:5" pos:end="67:47">return <expr pos:start="67:12" pos:end="67:46"><call pos:start="67:12" pos:end="67:46"><name pos:start="67:12" pos:end="67:19">S390_CPU</name><argument_list pos:start="67:20" pos:end="67:46">(<argument pos:start="67:21" pos:end="67:45"><expr pos:start="67:21" pos:end="67:45"><call pos:start="67:21" pos:end="67:45"><name pos:start="67:21" pos:end="67:23">CPU</name><argument_list pos:start="67:24" pos:end="67:45">(<argument pos:start="67:25" pos:end="67:44"><expr pos:start="67:25" pos:end="67:44"><call pos:start="67:25" pos:end="67:44"><name pos:start="67:25" pos:end="67:34">object_new</name><argument_list pos:start="67:35" pos:end="67:44">(<argument pos:start="67:36" pos:end="67:43"><expr pos:start="67:36" pos:end="67:43"><name pos:start="67:36" pos:end="67:43">typename</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
