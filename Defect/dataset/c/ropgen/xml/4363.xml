<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4363.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">target_ulong</name></type> <name pos:start="1:21" pos:end="1:29">h_protect</name><parameter_list pos:start="1:30" pos:end="3:70">(<parameter pos:start="1:31" pos:end="1:46"><decl pos:start="1:31" pos:end="1:46"><type pos:start="1:31" pos:end="1:46"><name pos:start="1:31" pos:end="1:41">CPUPPCState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">env</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:71"><decl pos:start="1:49" pos:end="1:71"><type pos:start="1:49" pos:end="1:71"><name pos:start="1:49" pos:end="1:64">sPAPREnvironment</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:71">spapr</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:49"><decl pos:start="3:31" pos:end="3:49"><type pos:start="3:31" pos:end="3:49"><name pos:start="3:31" pos:end="3:42">target_ulong</name></type> <name pos:start="3:44" pos:end="3:49">opcode</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:69"><decl pos:start="3:52" pos:end="3:69"><type pos:start="3:52" pos:end="3:69"><name pos:start="3:52" pos:end="3:63">target_ulong</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:69">args</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:21">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:22">flags</name> <init pos:start="7:24" pos:end="7:32">= <expr pos:start="7:26" pos:end="7:32"><name pos:start="7:26" pos:end="7:32"><name pos:start="7:26" pos:end="7:29">args</name><index pos:start="7:30" pos:end="7:32">[<expr pos:start="7:31" pos:end="7:31"><literal type="number" pos:start="7:31" pos:end="7:31">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:26">pte_index</name> <init pos:start="9:28" pos:end="9:36">= <expr pos:start="9:30" pos:end="9:36"><name pos:start="9:30" pos:end="9:36"><name pos:start="9:30" pos:end="9:33">args</name><index pos:start="9:34" pos:end="9:36">[<expr pos:start="9:35" pos:end="9:35"><literal type="number" pos:start="9:35" pos:end="9:35">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:21">avpn</name> <init pos:start="11:23" pos:end="11:31">= <expr pos:start="11:25" pos:end="11:31"><name pos:start="11:25" pos:end="11:31"><name pos:start="11:25" pos:end="11:28">args</name><index pos:start="11:29" pos:end="11:31">[<expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">hpte</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:18">v</name></decl>, <decl pos:start="15:21" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:21" pos:end="15:21">r</name></decl>, <decl pos:start="15:24" pos:end="15:25"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:24" pos:end="15:25">rb</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:57">(<expr pos:start="19:9" pos:end="19:56"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:18">pte_index</name> <operator pos:start="19:20" pos:end="19:20">*</operator> <name pos:start="19:22" pos:end="19:37">HASH_PTE_SIZE_64</name><operator pos:start="19:38" pos:end="19:38">)</operator> <operator pos:start="19:40" pos:end="19:40">&amp;</operator> <operator pos:start="19:42" pos:end="19:42">~</operator><name pos:start="19:43" pos:end="19:56"><name pos:start="19:43" pos:end="19:45">env</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:56">htab_mask</name></name></expr>)</condition> <block pos:start="19:59" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:27">

        <return pos:start="21:9" pos:end="21:27">return <expr pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:63"><expr pos:start="27:5" pos:end="27:62"><name pos:start="27:5" pos:end="27:8">hpte</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <name pos:start="27:12" pos:end="27:29"><name pos:start="27:12" pos:end="27:14">env</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:29">external_htab</name></name> <operator pos:start="27:31" pos:end="27:31">+</operator> <operator pos:start="27:33" pos:end="27:33">(</operator><name pos:start="27:34" pos:end="27:42">pte_index</name> <operator pos:start="27:44" pos:end="27:44">*</operator> <name pos:start="27:46" pos:end="27:61">HASH_PTE_SIZE_64</name><operator pos:start="27:62" pos:end="27:62">)</operator></expr>;</expr_stmt>

    <while pos:start="29:5" pos:end="37:5">while <condition pos:start="29:11" pos:end="29:43">(<expr pos:start="29:12" pos:end="29:42"><operator pos:start="29:12" pos:end="29:12">!</operator><call pos:start="29:13" pos:end="29:42"><name pos:start="29:13" pos:end="29:21">lock_hpte</name><argument_list pos:start="29:22" pos:end="29:42">(<argument pos:start="29:23" pos:end="29:26"><expr pos:start="29:23" pos:end="29:26"><name pos:start="29:23" pos:end="29:26">hpte</name></expr></argument>, <argument pos:start="29:29" pos:end="29:41"><expr pos:start="29:29" pos:end="29:41"><name pos:start="29:29" pos:end="29:41">HPTE_V_HVLOCK</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:45" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:18">

        <comment type="block" pos:start="31:9" pos:end="33:55">/* We have no real concurrency in qemu soft-emulation, so we

         * will never actually have a contested lock */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:18"><expr pos:start="35:9" pos:end="35:17"><call pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:14">assert</name><argument_list pos:start="35:15" pos:end="35:17">(<argument pos:start="35:16" pos:end="35:16"><expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:5">v</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <call pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:13">ldq_p</name><argument_list pos:start="41:14" pos:end="41:19">(<argument pos:start="41:15" pos:end="41:18"><expr pos:start="41:15" pos:end="41:18"><name pos:start="41:15" pos:end="41:18">hpte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:43"><expr pos:start="43:5" pos:end="43:42"><name pos:start="43:5" pos:end="43:5">r</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <call pos:start="43:9" pos:end="43:42"><name pos:start="43:9" pos:end="43:13">ldq_p</name><argument_list pos:start="43:14" pos:end="43:42">(<argument pos:start="43:15" pos:end="43:41"><expr pos:start="43:15" pos:end="43:41"><name pos:start="43:15" pos:end="43:18">hpte</name> <operator pos:start="43:20" pos:end="43:20">+</operator> <operator pos:start="43:22" pos:end="43:22">(</operator><name pos:start="43:23" pos:end="43:38">HASH_PTE_SIZE_64</name><operator pos:start="43:39" pos:end="43:39">/</operator><literal type="number" pos:start="43:40" pos:end="43:40">2</literal><operator pos:start="43:41" pos:end="43:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="57:5"><if pos:start="47:5" pos:end="57:5">if <condition pos:start="47:8" pos:end="49:53">(<expr pos:start="47:9" pos:end="49:52"><operator pos:start="47:9" pos:end="47:9">(</operator><name pos:start="47:10" pos:end="47:10">v</name> <operator pos:start="47:12" pos:end="47:12">&amp;</operator> <name pos:start="47:14" pos:end="47:25">HPTE_V_VALID</name><operator pos:start="47:26" pos:end="47:26">)</operator> <operator pos:start="47:28" pos:end="47:29">==</operator> <literal type="number" pos:start="47:31" pos:end="47:31">0</literal> <operator pos:start="47:33" pos:end="47:34">||</operator>

        <operator pos:start="49:9" pos:end="49:9">(</operator><operator pos:start="49:10" pos:end="49:10">(</operator><name pos:start="49:11" pos:end="49:15">flags</name> <operator pos:start="49:17" pos:end="49:17">&amp;</operator> <name pos:start="49:19" pos:end="49:24">H_AVPN</name><operator pos:start="49:25" pos:end="49:25">)</operator> <operator pos:start="49:27" pos:end="49:28">&amp;&amp;</operator> <operator pos:start="49:30" pos:end="49:30">(</operator><name pos:start="49:31" pos:end="49:31">v</name> <operator pos:start="49:33" pos:end="49:33">&amp;</operator> <operator pos:start="49:35" pos:end="49:35">~</operator><literal type="number" pos:start="49:36" pos:end="49:42">0x7fULL</literal><operator pos:start="49:43" pos:end="49:43">)</operator> <operator pos:start="49:45" pos:end="49:46">!=</operator> <name pos:start="49:48" pos:end="49:51">avpn</name><operator pos:start="49:52" pos:end="49:52">)</operator></expr>)</condition> <block pos:start="49:55" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:27">

        <expr_stmt pos:start="51:9" pos:end="51:40"><expr pos:start="51:9" pos:end="51:39"><call pos:start="51:9" pos:end="51:39"><name pos:start="51:9" pos:end="51:13">stq_p</name><argument_list pos:start="51:14" pos:end="51:39">(<argument pos:start="51:15" pos:end="51:18"><expr pos:start="51:15" pos:end="51:18"><name pos:start="51:15" pos:end="51:18">hpte</name></expr></argument>, <argument pos:start="51:21" pos:end="51:38"><expr pos:start="51:21" pos:end="51:38"><name pos:start="51:21" pos:end="51:21">v</name> <operator pos:start="51:23" pos:end="51:23">&amp;</operator> <operator pos:start="51:25" pos:end="51:25">~</operator><name pos:start="51:26" pos:end="51:38">HPTE_V_HVLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:47"><expr pos:start="53:9" pos:end="53:46"><call pos:start="53:9" pos:end="53:46"><name pos:start="53:9" pos:end="53:14">assert</name><argument_list pos:start="53:15" pos:end="53:46">(<argument pos:start="53:16" pos:end="53:45"><expr pos:start="53:16" pos:end="53:45"><operator pos:start="53:16" pos:end="53:16">!</operator><operator pos:start="53:17" pos:end="53:17">(</operator><call pos:start="53:18" pos:end="53:28"><name pos:start="53:18" pos:end="53:22">ldq_p</name><argument_list pos:start="53:23" pos:end="53:28">(<argument pos:start="53:24" pos:end="53:27"><expr pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:27">hpte</name></expr></argument>)</argument_list></call> <operator pos:start="53:30" pos:end="53:30">&amp;</operator> <name pos:start="53:32" pos:end="53:44">HPTE_V_HVLOCK</name><operator pos:start="53:45" pos:end="53:45">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:27">return <expr pos:start="55:16" pos:end="55:26"><name pos:start="55:16" pos:end="55:26">H_NOT_FOUND</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="63:42"><expr pos:start="61:5" pos:end="63:41"><name pos:start="61:5" pos:end="61:5">r</name> <operator pos:start="61:7" pos:end="61:8">&amp;=</operator> <operator pos:start="61:10" pos:end="61:10">~</operator><operator pos:start="61:11" pos:end="61:11">(</operator><name pos:start="61:12" pos:end="61:21">HPTE_R_PP0</name> <operator pos:start="61:23" pos:end="61:23">|</operator> <name pos:start="61:25" pos:end="61:33">HPTE_R_PP</name> <operator pos:start="61:35" pos:end="61:35">|</operator> <name pos:start="61:37" pos:end="61:44">HPTE_R_N</name> <operator pos:start="61:46" pos:end="61:46">|</operator>

           <name pos:start="63:12" pos:end="63:24">HPTE_R_KEY_HI</name> <operator pos:start="63:26" pos:end="63:26">|</operator> <name pos:start="63:28" pos:end="63:40">HPTE_R_KEY_LO</name><operator pos:start="63:41" pos:end="63:41">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:36"><expr pos:start="65:5" pos:end="65:35"><name pos:start="65:5" pos:end="65:5">r</name> <operator pos:start="65:7" pos:end="65:8">|=</operator> <operator pos:start="65:10" pos:end="65:10">(</operator><name pos:start="65:11" pos:end="65:15">flags</name> <operator pos:start="65:17" pos:end="65:18">&lt;&lt;</operator> <literal type="number" pos:start="65:20" pos:end="65:21">55</literal><operator pos:start="65:22" pos:end="65:22">)</operator> <operator pos:start="65:24" pos:end="65:24">&amp;</operator> <name pos:start="65:26" pos:end="65:35">HPTE_R_PP0</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:39"><expr pos:start="67:5" pos:end="67:38"><name pos:start="67:5" pos:end="67:5">r</name> <operator pos:start="67:7" pos:end="67:8">|=</operator> <operator pos:start="67:10" pos:end="67:10">(</operator><name pos:start="67:11" pos:end="67:15">flags</name> <operator pos:start="67:17" pos:end="67:18">&lt;&lt;</operator> <literal type="number" pos:start="67:20" pos:end="67:21">48</literal><operator pos:start="67:22" pos:end="67:22">)</operator> <operator pos:start="67:24" pos:end="67:24">&amp;</operator> <name pos:start="67:26" pos:end="67:38">HPTE_R_KEY_HI</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:56"><expr pos:start="69:5" pos:end="69:55"><name pos:start="69:5" pos:end="69:5">r</name> <operator pos:start="69:7" pos:end="69:8">|=</operator> <name pos:start="69:10" pos:end="69:14">flags</name> <operator pos:start="69:16" pos:end="69:16">&amp;</operator> <operator pos:start="69:18" pos:end="69:18">(</operator><name pos:start="69:19" pos:end="69:27">HPTE_R_PP</name> <operator pos:start="69:29" pos:end="69:29">|</operator> <name pos:start="69:31" pos:end="69:38">HPTE_R_N</name> <operator pos:start="69:40" pos:end="69:40">|</operator> <name pos:start="69:42" pos:end="69:54">HPTE_R_KEY_LO</name><operator pos:start="69:55" pos:end="69:55">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:43"><expr pos:start="71:5" pos:end="71:42"><name pos:start="71:5" pos:end="71:6">rb</name> <operator pos:start="71:8" pos:end="71:8">=</operator> <call pos:start="71:10" pos:end="71:42"><name pos:start="71:10" pos:end="71:25">compute_tlbie_rb</name><argument_list pos:start="71:26" pos:end="71:42">(<argument pos:start="71:27" pos:end="71:27"><expr pos:start="71:27" pos:end="71:27"><name pos:start="71:27" pos:end="71:27">v</name></expr></argument>, <argument pos:start="71:30" pos:end="71:30"><expr pos:start="71:30" pos:end="71:30"><name pos:start="71:30" pos:end="71:30">r</name></expr></argument>, <argument pos:start="71:33" pos:end="71:41"><expr pos:start="71:33" pos:end="71:41"><name pos:start="71:33" pos:end="71:41">pte_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:35"><expr pos:start="73:5" pos:end="73:34"><call pos:start="73:5" pos:end="73:34"><name pos:start="73:5" pos:end="73:9">stq_p</name><argument_list pos:start="73:10" pos:end="73:34">(<argument pos:start="73:11" pos:end="73:14"><expr pos:start="73:11" pos:end="73:14"><name pos:start="73:11" pos:end="73:14">hpte</name></expr></argument>, <argument pos:start="73:17" pos:end="73:33"><expr pos:start="73:17" pos:end="73:33"><name pos:start="73:17" pos:end="73:17">v</name> <operator pos:start="73:19" pos:end="73:19">&amp;</operator> <operator pos:start="73:21" pos:end="73:21">~</operator><name pos:start="73:22" pos:end="73:33">HPTE_V_VALID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:36"><expr pos:start="75:5" pos:end="75:35"><call pos:start="75:5" pos:end="75:35"><name pos:start="75:5" pos:end="75:26">ppc_tlb_invalidate_one</name><argument_list pos:start="75:27" pos:end="75:35">(<argument pos:start="75:28" pos:end="75:30"><expr pos:start="75:28" pos:end="75:30"><name pos:start="75:28" pos:end="75:30">env</name></expr></argument>, <argument pos:start="75:33" pos:end="75:34"><expr pos:start="75:33" pos:end="75:34"><name pos:start="75:33" pos:end="75:34">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:42"><expr pos:start="77:5" pos:end="77:41"><call pos:start="77:5" pos:end="77:41"><name pos:start="77:5" pos:end="77:9">stq_p</name><argument_list pos:start="77:10" pos:end="77:41">(<argument pos:start="77:11" pos:end="77:37"><expr pos:start="77:11" pos:end="77:37"><name pos:start="77:11" pos:end="77:14">hpte</name> <operator pos:start="77:16" pos:end="77:16">+</operator> <operator pos:start="77:18" pos:end="77:18">(</operator><name pos:start="77:19" pos:end="77:34">HASH_PTE_SIZE_64</name><operator pos:start="77:35" pos:end="77:35">/</operator><literal type="number" pos:start="77:36" pos:end="77:36">2</literal><operator pos:start="77:37" pos:end="77:37">)</operator></expr></argument>, <argument pos:start="77:40" pos:end="77:40"><expr pos:start="77:40" pos:end="77:40"><name pos:start="77:40" pos:end="77:40">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="79:5" pos:end="79:64">/* Don't need a memory barrier, due to qemu's global lock */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:36"><expr pos:start="81:5" pos:end="81:35"><call pos:start="81:5" pos:end="81:35"><name pos:start="81:5" pos:end="81:9">stq_p</name><argument_list pos:start="81:10" pos:end="81:35">(<argument pos:start="81:11" pos:end="81:14"><expr pos:start="81:11" pos:end="81:14"><name pos:start="81:11" pos:end="81:14">hpte</name></expr></argument>, <argument pos:start="81:17" pos:end="81:34"><expr pos:start="81:17" pos:end="81:34"><name pos:start="81:17" pos:end="81:17">v</name> <operator pos:start="81:19" pos:end="81:19">&amp;</operator> <operator pos:start="81:21" pos:end="81:21">~</operator><name pos:start="81:22" pos:end="81:34">HPTE_V_HVLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:43"><expr pos:start="83:5" pos:end="83:42"><call pos:start="83:5" pos:end="83:42"><name pos:start="83:5" pos:end="83:10">assert</name><argument_list pos:start="83:11" pos:end="83:42">(<argument pos:start="83:12" pos:end="83:41"><expr pos:start="83:12" pos:end="83:41"><operator pos:start="83:12" pos:end="83:12">!</operator><operator pos:start="83:13" pos:end="83:13">(</operator><call pos:start="83:14" pos:end="83:24"><name pos:start="83:14" pos:end="83:18">ldq_p</name><argument_list pos:start="83:19" pos:end="83:24">(<argument pos:start="83:20" pos:end="83:23"><expr pos:start="83:20" pos:end="83:23"><name pos:start="83:20" pos:end="83:23">hpte</name></expr></argument>)</argument_list></call> <operator pos:start="83:26" pos:end="83:26">&amp;</operator> <name pos:start="83:28" pos:end="83:40">HPTE_V_HVLOCK</name><operator pos:start="83:41" pos:end="83:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="85:5" pos:end="85:21">return <expr pos:start="85:12" pos:end="85:20"><name pos:start="85:12" pos:end="85:20">H_SUCCESS</name></expr>;</return>

</block_content>}</block></function>
</unit>
