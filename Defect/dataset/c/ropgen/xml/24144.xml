<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24144.c" pos:tabs="8"><function pos:start="1:1" pos:end="409:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">nvenc_encode_frame</name><parameter_list pos:start="1:30" pos:end="3:42">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:66"><decl pos:start="1:54" pos:end="1:66"><type pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:61">AVPacket</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">pkt</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:24"><decl pos:start="3:5" pos:end="3:24"><type pos:start="3:5" pos:end="3:24"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:17">AVFrame</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:24">frame</name></decl></parameter>, <parameter pos:start="3:27" pos:end="3:41"><decl pos:start="3:27" pos:end="3:41"><type pos:start="3:27" pos:end="3:41"><name pos:start="3:27" pos:end="3:29">int</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:41">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="409:1">{<block_content pos:start="7:5" pos:end="407:13">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15">NVENCSTATUS</name></type> <name pos:start="7:17" pos:end="7:25">nv_status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:22">NvencOutputSurface</name> <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:34">tmpoutsurf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">res</name></decl>, <decl pos:start="11:14" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:14">i</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:41"><decl pos:start="15:5" pos:end="15:40"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">NvencContext</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:21">ctx</name> <init pos:start="15:23" pos:end="15:40">= <expr pos:start="15:25" pos:end="15:40"><name pos:start="15:25" pos:end="15:40"><name pos:start="15:25" pos:end="15:29">avctx</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:59"><decl pos:start="17:5" pos:end="17:58"><type pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:25">NvencDynLoadFunctions</name> <modifier pos:start="17:27" pos:end="17:27">*</modifier></type><name pos:start="17:28" pos:end="17:32">dl_fn</name> <init pos:start="17:34" pos:end="17:58">= <expr pos:start="17:36" pos:end="17:58"><operator pos:start="17:36" pos:end="17:36">&amp;</operator><name pos:start="17:37" pos:end="17:58"><name pos:start="17:37" pos:end="17:39">ctx</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:58">nvenc_dload_funcs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:63"><decl pos:start="19:5" pos:end="19:62"><type pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:31">NV_ENCODE_API_FUNCTION_LIST</name> <modifier pos:start="19:33" pos:end="19:33">*</modifier></type><name pos:start="19:34" pos:end="19:40">p_nvenc</name> <init pos:start="19:42" pos:end="19:62">= <expr pos:start="19:44" pos:end="19:62"><operator pos:start="19:44" pos:end="19:44">&amp;</operator><name pos:start="19:45" pos:end="19:62"><name pos:start="19:45" pos:end="19:49">dl_fn</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:62">nvenc_funcs</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="23:41"><decl pos:start="23:5" pos:end="23:40"><type pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:21">NV_ENC_PIC_PARAMS</name></type> <name pos:start="23:23" pos:end="23:32">pic_params</name> <init pos:start="23:34" pos:end="23:40">= <expr pos:start="23:36" pos:end="23:40"><block pos:start="23:36" pos:end="23:40">{ <expr pos:start="23:38" pos:end="23:38"><literal type="number" pos:start="23:38" pos:end="23:38">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:14">pic_params</name><operator pos:start="25:15" pos:end="25:15">.</operator><name pos:start="25:16" pos:end="25:22">version</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <name pos:start="25:26" pos:end="25:46">NV_ENC_PIC_PARAMS_VER</name></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="299:5"><if pos:start="29:5" pos:end="295:5">if <condition pos:start="29:8" pos:end="29:14">(<expr pos:start="29:9" pos:end="29:13"><name pos:start="29:9" pos:end="29:13">frame</name></expr>)</condition> <block pos:start="29:16" pos:end="295:5">{<block_content pos:start="31:9" pos:end="293:23">

        <decl_stmt pos:start="31:9" pos:end="31:58"><decl pos:start="31:9" pos:end="31:57"><type pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:32">NV_ENC_LOCK_INPUT_BUFFER</name></type> <name pos:start="31:34" pos:end="31:49">lockBufferParams</name> <init pos:start="31:51" pos:end="31:57">= <expr pos:start="31:53" pos:end="31:57"><block pos:start="31:53" pos:end="31:57">{ <expr pos:start="31:55" pos:end="31:55"><literal type="number" pos:start="31:55" pos:end="31:55">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:41"><decl pos:start="33:9" pos:end="33:40"><type pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:25">NvencInputSurface</name> <modifier pos:start="33:27" pos:end="33:27">*</modifier></type><name pos:start="33:28" pos:end="33:33">inSurf</name> <init pos:start="33:35" pos:end="33:40">= <expr pos:start="33:37" pos:end="33:40"><name pos:start="33:37" pos:end="33:40">NULL</name></expr></init></decl>;</decl_stmt>



        <for pos:start="37:9" pos:end="47:9">for <control pos:start="37:13" pos:end="37:52">(<init pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:18"><name pos:start="37:14" pos:end="37:14">i</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</init> <condition pos:start="37:21" pos:end="37:47"><expr pos:start="37:21" pos:end="37:46"><name pos:start="37:21" pos:end="37:21">i</name> <operator pos:start="37:23" pos:end="37:23">&lt;</operator> <name pos:start="37:25" pos:end="37:46"><name pos:start="37:25" pos:end="37:27">ctx</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:46">max_surface_count</name></name></expr>;</condition> <incr pos:start="37:49" pos:end="37:51"><expr pos:start="37:49" pos:end="37:51"><operator pos:start="37:49" pos:end="37:50">++</operator><name pos:start="37:51" pos:end="37:51">i</name></expr></incr>)</control> <block pos:start="37:54" pos:end="47:9">{<block_content pos:start="39:13" pos:end="45:13">

            <if_stmt pos:start="39:13" pos:end="45:13"><if pos:start="39:13" pos:end="45:13">if <condition pos:start="39:16" pos:end="39:50">(<expr pos:start="39:17" pos:end="39:49"><operator pos:start="39:17" pos:end="39:17">!</operator><name pos:start="39:18" pos:end="39:39"><name pos:start="39:18" pos:end="39:20">ctx</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:36">input_surfaces</name><index pos:start="39:37" pos:end="39:39">[<expr pos:start="39:38" pos:end="39:38"><name pos:start="39:38" pos:end="39:38">i</name></expr>]</index></name><operator pos:start="39:40" pos:end="39:40">.</operator><name pos:start="39:41" pos:end="39:49">lockCount</name></expr>)</condition> <block pos:start="39:52" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:22">

                <expr_stmt pos:start="41:17" pos:end="41:49"><expr pos:start="41:17" pos:end="41:48"><name pos:start="41:17" pos:end="41:22">inSurf</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <operator pos:start="41:26" pos:end="41:26">&amp;</operator><name pos:start="41:27" pos:end="41:48"><name pos:start="41:27" pos:end="41:29">ctx</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:45">input_surfaces</name><index pos:start="41:46" pos:end="41:48">[<expr pos:start="41:47" pos:end="41:47"><name pos:start="41:47" pos:end="41:47">i</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="43:17" pos:end="43:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><call pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:18">av_assert0</name><argument_list pos:start="51:19" pos:end="51:26">(<argument pos:start="51:20" pos:end="51:25"><expr pos:start="51:20" pos:end="51:25"><name pos:start="51:20" pos:end="51:25">inSurf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:30"><expr pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:14">inSurf</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:25">lockCount</name></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <literal type="number" pos:start="55:29" pos:end="55:29">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:64"><expr pos:start="59:9" pos:end="59:63"><name pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:24">lockBufferParams</name><operator pos:start="59:25" pos:end="59:25">.</operator><name pos:start="59:26" pos:end="59:32">version</name></name> <operator pos:start="59:34" pos:end="59:34">=</operator> <name pos:start="59:36" pos:end="59:63">NV_ENC_LOCK_INPUT_BUFFER_VER</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:61"><expr pos:start="61:9" pos:end="61:60"><name pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:24">lockBufferParams</name><operator pos:start="61:25" pos:end="61:25">.</operator><name pos:start="61:26" pos:end="61:36">inputBuffer</name></name> <operator pos:start="61:38" pos:end="61:38">=</operator> <name pos:start="61:40" pos:end="61:60"><name pos:start="61:40" pos:end="61:45">inSurf</name><operator pos:start="61:46" pos:end="61:47">-&gt;</operator><name pos:start="61:48" pos:end="61:60">input_surface</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:85"><expr pos:start="65:9" pos:end="65:84"><name pos:start="65:9" pos:end="65:17">nv_status</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <call pos:start="65:21" pos:end="65:84"><name pos:start="65:21" pos:end="65:49"><name pos:start="65:21" pos:end="65:27">p_nvenc</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:49">nvEncLockInputBuffer</name></name><argument_list pos:start="65:50" pos:end="65:84">(<argument pos:start="65:51" pos:end="65:64"><expr pos:start="65:51" pos:end="65:64"><name pos:start="65:51" pos:end="65:64"><name pos:start="65:51" pos:end="65:53">ctx</name><operator pos:start="65:54" pos:end="65:55">-&gt;</operator><name pos:start="65:56" pos:end="65:64">nvencoder</name></name></expr></argument>, <argument pos:start="65:67" pos:end="65:83"><expr pos:start="65:67" pos:end="65:83"><operator pos:start="65:67" pos:end="65:67">&amp;</operator><name pos:start="65:68" pos:end="65:83">lockBufferParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="73:9"><if pos:start="67:9" pos:end="73:9">if <condition pos:start="67:12" pos:end="67:40">(<expr pos:start="67:13" pos:end="67:39"><name pos:start="67:13" pos:end="67:21">nv_status</name> <operator pos:start="67:23" pos:end="67:24">!=</operator> <name pos:start="67:26" pos:end="67:39">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="67:42" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:21">

            <expr_stmt pos:start="69:13" pos:end="69:79"><expr pos:start="69:13" pos:end="69:78"><call pos:start="69:13" pos:end="69:78"><name pos:start="69:13" pos:end="69:18">av_log</name><argument_list pos:start="69:19" pos:end="69:78">(<argument pos:start="69:20" pos:end="69:24"><expr pos:start="69:20" pos:end="69:24"><name pos:start="69:20" pos:end="69:24">avctx</name></expr></argument>, <argument pos:start="69:27" pos:end="69:38"><expr pos:start="69:27" pos:end="69:38"><name pos:start="69:27" pos:end="69:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:41" pos:end="69:77"><expr pos:start="69:41" pos:end="69:77"><literal type="string" pos:start="69:41" pos:end="69:77">"Failed locking nvenc input buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="71:13" pos:end="71:21">return <expr pos:start="71:20" pos:end="71:20"><literal type="number" pos:start="71:20" pos:end="71:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="77:9" pos:end="179:9"><if pos:start="77:9" pos:end="113:9">if <condition pos:start="77:12" pos:end="77:49">(<expr pos:start="77:13" pos:end="77:48"><name pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:17">avctx</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:26">pix_fmt</name></name> <operator pos:start="77:28" pos:end="77:29">==</operator> <name pos:start="77:31" pos:end="77:48">AV_PIX_FMT_YUV420P</name></expr>)</condition> <block pos:start="77:51" pos:end="113:9">{<block_content pos:start="79:13" pos:end="111:55">

            <decl_stmt pos:start="79:13" pos:end="79:58"><decl pos:start="79:13" pos:end="79:57"><type pos:start="79:13" pos:end="79:21"><name pos:start="79:13" pos:end="79:19">uint8_t</name> <modifier pos:start="79:21" pos:end="79:21">*</modifier></type><name pos:start="79:22" pos:end="79:24">buf</name> <init pos:start="79:26" pos:end="79:57">= <expr pos:start="79:28" pos:end="79:57"><name pos:start="79:28" pos:end="79:57"><name pos:start="79:28" pos:end="79:43">lockBufferParams</name><operator pos:start="79:44" pos:end="79:44">.</operator><name pos:start="79:45" pos:end="79:57">bufferDataPtr</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="83:13" pos:end="87:45"><expr pos:start="83:13" pos:end="87:44"><call pos:start="83:13" pos:end="87:44"><name pos:start="83:13" pos:end="83:31">av_image_copy_plane</name><argument_list pos:start="83:32" pos:end="87:44">(<argument pos:start="83:33" pos:end="83:35"><expr pos:start="83:33" pos:end="83:35"><name pos:start="83:33" pos:end="83:35">buf</name></expr></argument>, <argument pos:start="83:38" pos:end="83:59"><expr pos:start="83:38" pos:end="83:59"><name pos:start="83:38" pos:end="83:59"><name pos:start="83:38" pos:end="83:53">lockBufferParams</name><operator pos:start="83:54" pos:end="83:54">.</operator><name pos:start="83:55" pos:end="83:59">pitch</name></name></expr></argument>,

                <argument pos:start="85:17" pos:end="85:30"><expr pos:start="85:17" pos:end="85:30"><name pos:start="85:17" pos:end="85:30"><name pos:start="85:17" pos:end="85:21">frame</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:27">data</name><index pos:start="85:28" pos:end="85:30">[<expr pos:start="85:29" pos:end="85:29"><literal type="number" pos:start="85:29" pos:end="85:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="85:33" pos:end="85:50"><expr pos:start="85:33" pos:end="85:50"><name pos:start="85:33" pos:end="85:50"><name pos:start="85:33" pos:end="85:37">frame</name><operator pos:start="85:38" pos:end="85:39">-&gt;</operator><name pos:start="85:40" pos:end="85:47">linesize</name><index pos:start="85:48" pos:end="85:50">[<expr pos:start="85:49" pos:end="85:49"><literal type="number" pos:start="85:49" pos:end="85:49">0</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="87:17" pos:end="87:28"><expr pos:start="87:17" pos:end="87:28"><name pos:start="87:17" pos:end="87:28"><name pos:start="87:17" pos:end="87:21">avctx</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:28">width</name></name></expr></argument>, <argument pos:start="87:31" pos:end="87:43"><expr pos:start="87:31" pos:end="87:43"><name pos:start="87:31" pos:end="87:43"><name pos:start="87:31" pos:end="87:35">avctx</name><operator pos:start="87:36" pos:end="87:37">-&gt;</operator><name pos:start="87:38" pos:end="87:43">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="91:13" pos:end="91:59"><expr pos:start="91:13" pos:end="91:58"><name pos:start="91:13" pos:end="91:15">buf</name> <operator pos:start="91:17" pos:end="91:18">+=</operator> <name pos:start="91:20" pos:end="91:33"><name pos:start="91:20" pos:end="91:25">inSurf</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:33">height</name></name> <operator pos:start="91:35" pos:end="91:35">*</operator> <name pos:start="91:37" pos:end="91:58"><name pos:start="91:37" pos:end="91:52">lockBufferParams</name><operator pos:start="91:53" pos:end="91:53">.</operator><name pos:start="91:54" pos:end="91:58">pitch</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="95:13" pos:end="99:55"><expr pos:start="95:13" pos:end="99:54"><call pos:start="95:13" pos:end="99:54"><name pos:start="95:13" pos:end="95:31">av_image_copy_plane</name><argument_list pos:start="95:32" pos:end="99:54">(<argument pos:start="95:33" pos:end="95:35"><expr pos:start="95:33" pos:end="95:35"><name pos:start="95:33" pos:end="95:35">buf</name></expr></argument>, <argument pos:start="95:38" pos:end="95:64"><expr pos:start="95:38" pos:end="95:64"><name pos:start="95:38" pos:end="95:59"><name pos:start="95:38" pos:end="95:53">lockBufferParams</name><operator pos:start="95:54" pos:end="95:54">.</operator><name pos:start="95:55" pos:end="95:59">pitch</name></name> <operator pos:start="95:61" pos:end="95:62">&gt;&gt;</operator> <literal type="number" pos:start="95:64" pos:end="95:64">1</literal></expr></argument>,

                <argument pos:start="97:17" pos:end="97:30"><expr pos:start="97:17" pos:end="97:30"><name pos:start="97:17" pos:end="97:30"><name pos:start="97:17" pos:end="97:21">frame</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:27">data</name><index pos:start="97:28" pos:end="97:30">[<expr pos:start="97:29" pos:end="97:29"><literal type="number" pos:start="97:29" pos:end="97:29">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="97:33" pos:end="97:50"><expr pos:start="97:33" pos:end="97:50"><name pos:start="97:33" pos:end="97:50"><name pos:start="97:33" pos:end="97:37">frame</name><operator pos:start="97:38" pos:end="97:39">-&gt;</operator><name pos:start="97:40" pos:end="97:47">linesize</name><index pos:start="97:48" pos:end="97:50">[<expr pos:start="97:49" pos:end="97:49"><literal type="number" pos:start="97:49" pos:end="97:49">2</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="99:17" pos:end="99:33"><expr pos:start="99:17" pos:end="99:33"><name pos:start="99:17" pos:end="99:28"><name pos:start="99:17" pos:end="99:21">avctx</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:28">width</name></name> <operator pos:start="99:30" pos:end="99:31">&gt;&gt;</operator> <literal type="number" pos:start="99:33" pos:end="99:33">1</literal></expr></argument>, <argument pos:start="99:36" pos:end="99:53"><expr pos:start="99:36" pos:end="99:53"><name pos:start="99:36" pos:end="99:48"><name pos:start="99:36" pos:end="99:40">avctx</name><operator pos:start="99:41" pos:end="99:42">-&gt;</operator><name pos:start="99:43" pos:end="99:48">height</name></name> <operator pos:start="99:50" pos:end="99:51">&gt;&gt;</operator> <literal type="number" pos:start="99:53" pos:end="99:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="103:13" pos:end="103:66"><expr pos:start="103:13" pos:end="103:65"><name pos:start="103:13" pos:end="103:15">buf</name> <operator pos:start="103:17" pos:end="103:18">+=</operator> <operator pos:start="103:20" pos:end="103:20">(</operator><name pos:start="103:21" pos:end="103:34"><name pos:start="103:21" pos:end="103:26">inSurf</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:34">height</name></name> <operator pos:start="103:36" pos:end="103:36">*</operator> <name pos:start="103:38" pos:end="103:59"><name pos:start="103:38" pos:end="103:53">lockBufferParams</name><operator pos:start="103:54" pos:end="103:54">.</operator><name pos:start="103:55" pos:end="103:59">pitch</name></name><operator pos:start="103:60" pos:end="103:60">)</operator> <operator pos:start="103:62" pos:end="103:63">&gt;&gt;</operator> <literal type="number" pos:start="103:65" pos:end="103:65">2</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="107:13" pos:end="111:55"><expr pos:start="107:13" pos:end="111:54"><call pos:start="107:13" pos:end="111:54"><name pos:start="107:13" pos:end="107:31">av_image_copy_plane</name><argument_list pos:start="107:32" pos:end="111:54">(<argument pos:start="107:33" pos:end="107:35"><expr pos:start="107:33" pos:end="107:35"><name pos:start="107:33" pos:end="107:35">buf</name></expr></argument>, <argument pos:start="107:38" pos:end="107:64"><expr pos:start="107:38" pos:end="107:64"><name pos:start="107:38" pos:end="107:59"><name pos:start="107:38" pos:end="107:53">lockBufferParams</name><operator pos:start="107:54" pos:end="107:54">.</operator><name pos:start="107:55" pos:end="107:59">pitch</name></name> <operator pos:start="107:61" pos:end="107:62">&gt;&gt;</operator> <literal type="number" pos:start="107:64" pos:end="107:64">1</literal></expr></argument>,

                <argument pos:start="109:17" pos:end="109:30"><expr pos:start="109:17" pos:end="109:30"><name pos:start="109:17" pos:end="109:30"><name pos:start="109:17" pos:end="109:21">frame</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:27">data</name><index pos:start="109:28" pos:end="109:30">[<expr pos:start="109:29" pos:end="109:29"><literal type="number" pos:start="109:29" pos:end="109:29">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="109:33" pos:end="109:50"><expr pos:start="109:33" pos:end="109:50"><name pos:start="109:33" pos:end="109:50"><name pos:start="109:33" pos:end="109:37">frame</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:47">linesize</name><index pos:start="109:48" pos:end="109:50">[<expr pos:start="109:49" pos:end="109:49"><literal type="number" pos:start="109:49" pos:end="109:49">1</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="111:17" pos:end="111:33"><expr pos:start="111:17" pos:end="111:33"><name pos:start="111:17" pos:end="111:28"><name pos:start="111:17" pos:end="111:21">avctx</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:28">width</name></name> <operator pos:start="111:30" pos:end="111:31">&gt;&gt;</operator> <literal type="number" pos:start="111:33" pos:end="111:33">1</literal></expr></argument>, <argument pos:start="111:36" pos:end="111:53"><expr pos:start="111:36" pos:end="111:53"><name pos:start="111:36" pos:end="111:48"><name pos:start="111:36" pos:end="111:40">avctx</name><operator pos:start="111:41" pos:end="111:42">-&gt;</operator><name pos:start="111:43" pos:end="111:48">height</name></name> <operator pos:start="111:50" pos:end="111:51">&gt;&gt;</operator> <literal type="number" pos:start="111:53" pos:end="111:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="113:11" pos:end="137:9">else if <condition pos:start="113:19" pos:end="113:53">(<expr pos:start="113:20" pos:end="113:52"><name pos:start="113:20" pos:end="113:33"><name pos:start="113:20" pos:end="113:24">avctx</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:33">pix_fmt</name></name> <operator pos:start="113:35" pos:end="113:36">==</operator> <name pos:start="113:38" pos:end="113:52">AV_PIX_FMT_NV12</name></expr>)</condition> <block pos:start="113:55" pos:end="137:9">{<block_content pos:start="115:13" pos:end="135:50">

            <decl_stmt pos:start="115:13" pos:end="115:58"><decl pos:start="115:13" pos:end="115:57"><type pos:start="115:13" pos:end="115:21"><name pos:start="115:13" pos:end="115:19">uint8_t</name> <modifier pos:start="115:21" pos:end="115:21">*</modifier></type><name pos:start="115:22" pos:end="115:24">buf</name> <init pos:start="115:26" pos:end="115:57">= <expr pos:start="115:28" pos:end="115:57"><name pos:start="115:28" pos:end="115:57"><name pos:start="115:28" pos:end="115:43">lockBufferParams</name><operator pos:start="115:44" pos:end="115:44">.</operator><name pos:start="115:45" pos:end="115:57">bufferDataPtr</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="119:13" pos:end="123:45"><expr pos:start="119:13" pos:end="123:44"><call pos:start="119:13" pos:end="123:44"><name pos:start="119:13" pos:end="119:31">av_image_copy_plane</name><argument_list pos:start="119:32" pos:end="123:44">(<argument pos:start="119:33" pos:end="119:35"><expr pos:start="119:33" pos:end="119:35"><name pos:start="119:33" pos:end="119:35">buf</name></expr></argument>, <argument pos:start="119:38" pos:end="119:59"><expr pos:start="119:38" pos:end="119:59"><name pos:start="119:38" pos:end="119:59"><name pos:start="119:38" pos:end="119:53">lockBufferParams</name><operator pos:start="119:54" pos:end="119:54">.</operator><name pos:start="119:55" pos:end="119:59">pitch</name></name></expr></argument>,

                <argument pos:start="121:17" pos:end="121:30"><expr pos:start="121:17" pos:end="121:30"><name pos:start="121:17" pos:end="121:30"><name pos:start="121:17" pos:end="121:21">frame</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:27">data</name><index pos:start="121:28" pos:end="121:30">[<expr pos:start="121:29" pos:end="121:29"><literal type="number" pos:start="121:29" pos:end="121:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="121:33" pos:end="121:50"><expr pos:start="121:33" pos:end="121:50"><name pos:start="121:33" pos:end="121:50"><name pos:start="121:33" pos:end="121:37">frame</name><operator pos:start="121:38" pos:end="121:39">-&gt;</operator><name pos:start="121:40" pos:end="121:47">linesize</name><index pos:start="121:48" pos:end="121:50">[<expr pos:start="121:49" pos:end="121:49"><literal type="number" pos:start="121:49" pos:end="121:49">0</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="123:17" pos:end="123:28"><expr pos:start="123:17" pos:end="123:28"><name pos:start="123:17" pos:end="123:28"><name pos:start="123:17" pos:end="123:21">avctx</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:28">width</name></name></expr></argument>, <argument pos:start="123:31" pos:end="123:43"><expr pos:start="123:31" pos:end="123:43"><name pos:start="123:31" pos:end="123:43"><name pos:start="123:31" pos:end="123:35">avctx</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:43">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="127:13" pos:end="127:59"><expr pos:start="127:13" pos:end="127:58"><name pos:start="127:13" pos:end="127:15">buf</name> <operator pos:start="127:17" pos:end="127:18">+=</operator> <name pos:start="127:20" pos:end="127:33"><name pos:start="127:20" pos:end="127:25">inSurf</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:33">height</name></name> <operator pos:start="127:35" pos:end="127:35">*</operator> <name pos:start="127:37" pos:end="127:58"><name pos:start="127:37" pos:end="127:52">lockBufferParams</name><operator pos:start="127:53" pos:end="127:53">.</operator><name pos:start="127:54" pos:end="127:58">pitch</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="131:13" pos:end="135:50"><expr pos:start="131:13" pos:end="135:49"><call pos:start="131:13" pos:end="135:49"><name pos:start="131:13" pos:end="131:31">av_image_copy_plane</name><argument_list pos:start="131:32" pos:end="135:49">(<argument pos:start="131:33" pos:end="131:35"><expr pos:start="131:33" pos:end="131:35"><name pos:start="131:33" pos:end="131:35">buf</name></expr></argument>, <argument pos:start="131:38" pos:end="131:59"><expr pos:start="131:38" pos:end="131:59"><name pos:start="131:38" pos:end="131:59"><name pos:start="131:38" pos:end="131:53">lockBufferParams</name><operator pos:start="131:54" pos:end="131:54">.</operator><name pos:start="131:55" pos:end="131:59">pitch</name></name></expr></argument>,

                <argument pos:start="133:17" pos:end="133:30"><expr pos:start="133:17" pos:end="133:30"><name pos:start="133:17" pos:end="133:30"><name pos:start="133:17" pos:end="133:21">frame</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:27">data</name><index pos:start="133:28" pos:end="133:30">[<expr pos:start="133:29" pos:end="133:29"><literal type="number" pos:start="133:29" pos:end="133:29">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="133:33" pos:end="133:50"><expr pos:start="133:33" pos:end="133:50"><name pos:start="133:33" pos:end="133:50"><name pos:start="133:33" pos:end="133:37">frame</name><operator pos:start="133:38" pos:end="133:39">-&gt;</operator><name pos:start="133:40" pos:end="133:47">linesize</name><index pos:start="133:48" pos:end="133:50">[<expr pos:start="133:49" pos:end="133:49"><literal type="number" pos:start="133:49" pos:end="133:49">1</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="135:17" pos:end="135:28"><expr pos:start="135:17" pos:end="135:28"><name pos:start="135:17" pos:end="135:28"><name pos:start="135:17" pos:end="135:21">avctx</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:28">width</name></name></expr></argument>, <argument pos:start="135:31" pos:end="135:48"><expr pos:start="135:31" pos:end="135:48"><name pos:start="135:31" pos:end="135:43"><name pos:start="135:31" pos:end="135:35">avctx</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:43">height</name></name> <operator pos:start="135:45" pos:end="135:46">&gt;&gt;</operator> <literal type="number" pos:start="135:48" pos:end="135:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="137:11" pos:end="173:9">else if <condition pos:start="137:19" pos:end="137:56">(<expr pos:start="137:20" pos:end="137:55"><name pos:start="137:20" pos:end="137:33"><name pos:start="137:20" pos:end="137:24">avctx</name><operator pos:start="137:25" pos:end="137:26">-&gt;</operator><name pos:start="137:27" pos:end="137:33">pix_fmt</name></name> <operator pos:start="137:35" pos:end="137:36">==</operator> <name pos:start="137:38" pos:end="137:55">AV_PIX_FMT_YUV444P</name></expr>)</condition> <block pos:start="137:58" pos:end="173:9">{<block_content pos:start="139:13" pos:end="171:45">

            <decl_stmt pos:start="139:13" pos:end="139:58"><decl pos:start="139:13" pos:end="139:57"><type pos:start="139:13" pos:end="139:21"><name pos:start="139:13" pos:end="139:19">uint8_t</name> <modifier pos:start="139:21" pos:end="139:21">*</modifier></type><name pos:start="139:22" pos:end="139:24">buf</name> <init pos:start="139:26" pos:end="139:57">= <expr pos:start="139:28" pos:end="139:57"><name pos:start="139:28" pos:end="139:57"><name pos:start="139:28" pos:end="139:43">lockBufferParams</name><operator pos:start="139:44" pos:end="139:44">.</operator><name pos:start="139:45" pos:end="139:57">bufferDataPtr</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="143:13" pos:end="147:45"><expr pos:start="143:13" pos:end="147:44"><call pos:start="143:13" pos:end="147:44"><name pos:start="143:13" pos:end="143:31">av_image_copy_plane</name><argument_list pos:start="143:32" pos:end="147:44">(<argument pos:start="143:33" pos:end="143:35"><expr pos:start="143:33" pos:end="143:35"><name pos:start="143:33" pos:end="143:35">buf</name></expr></argument>, <argument pos:start="143:38" pos:end="143:59"><expr pos:start="143:38" pos:end="143:59"><name pos:start="143:38" pos:end="143:59"><name pos:start="143:38" pos:end="143:53">lockBufferParams</name><operator pos:start="143:54" pos:end="143:54">.</operator><name pos:start="143:55" pos:end="143:59">pitch</name></name></expr></argument>,

                <argument pos:start="145:17" pos:end="145:30"><expr pos:start="145:17" pos:end="145:30"><name pos:start="145:17" pos:end="145:30"><name pos:start="145:17" pos:end="145:21">frame</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:27">data</name><index pos:start="145:28" pos:end="145:30">[<expr pos:start="145:29" pos:end="145:29"><literal type="number" pos:start="145:29" pos:end="145:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="145:33" pos:end="145:50"><expr pos:start="145:33" pos:end="145:50"><name pos:start="145:33" pos:end="145:50"><name pos:start="145:33" pos:end="145:37">frame</name><operator pos:start="145:38" pos:end="145:39">-&gt;</operator><name pos:start="145:40" pos:end="145:47">linesize</name><index pos:start="145:48" pos:end="145:50">[<expr pos:start="145:49" pos:end="145:49"><literal type="number" pos:start="145:49" pos:end="145:49">0</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="147:17" pos:end="147:28"><expr pos:start="147:17" pos:end="147:28"><name pos:start="147:17" pos:end="147:28"><name pos:start="147:17" pos:end="147:21">avctx</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:28">width</name></name></expr></argument>, <argument pos:start="147:31" pos:end="147:43"><expr pos:start="147:31" pos:end="147:43"><name pos:start="147:31" pos:end="147:43"><name pos:start="147:31" pos:end="147:35">avctx</name><operator pos:start="147:36" pos:end="147:37">-&gt;</operator><name pos:start="147:38" pos:end="147:43">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="151:13" pos:end="151:59"><expr pos:start="151:13" pos:end="151:58"><name pos:start="151:13" pos:end="151:15">buf</name> <operator pos:start="151:17" pos:end="151:18">+=</operator> <name pos:start="151:20" pos:end="151:33"><name pos:start="151:20" pos:end="151:25">inSurf</name><operator pos:start="151:26" pos:end="151:27">-&gt;</operator><name pos:start="151:28" pos:end="151:33">height</name></name> <operator pos:start="151:35" pos:end="151:35">*</operator> <name pos:start="151:37" pos:end="151:58"><name pos:start="151:37" pos:end="151:52">lockBufferParams</name><operator pos:start="151:53" pos:end="151:53">.</operator><name pos:start="151:54" pos:end="151:58">pitch</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="155:13" pos:end="159:45"><expr pos:start="155:13" pos:end="159:44"><call pos:start="155:13" pos:end="159:44"><name pos:start="155:13" pos:end="155:31">av_image_copy_plane</name><argument_list pos:start="155:32" pos:end="159:44">(<argument pos:start="155:33" pos:end="155:35"><expr pos:start="155:33" pos:end="155:35"><name pos:start="155:33" pos:end="155:35">buf</name></expr></argument>, <argument pos:start="155:38" pos:end="155:59"><expr pos:start="155:38" pos:end="155:59"><name pos:start="155:38" pos:end="155:59"><name pos:start="155:38" pos:end="155:53">lockBufferParams</name><operator pos:start="155:54" pos:end="155:54">.</operator><name pos:start="155:55" pos:end="155:59">pitch</name></name></expr></argument>,

                <argument pos:start="157:17" pos:end="157:30"><expr pos:start="157:17" pos:end="157:30"><name pos:start="157:17" pos:end="157:30"><name pos:start="157:17" pos:end="157:21">frame</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:27">data</name><index pos:start="157:28" pos:end="157:30">[<expr pos:start="157:29" pos:end="157:29"><literal type="number" pos:start="157:29" pos:end="157:29">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="157:33" pos:end="157:50"><expr pos:start="157:33" pos:end="157:50"><name pos:start="157:33" pos:end="157:50"><name pos:start="157:33" pos:end="157:37">frame</name><operator pos:start="157:38" pos:end="157:39">-&gt;</operator><name pos:start="157:40" pos:end="157:47">linesize</name><index pos:start="157:48" pos:end="157:50">[<expr pos:start="157:49" pos:end="157:49"><literal type="number" pos:start="157:49" pos:end="157:49">1</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="159:17" pos:end="159:28"><expr pos:start="159:17" pos:end="159:28"><name pos:start="159:17" pos:end="159:28"><name pos:start="159:17" pos:end="159:21">avctx</name><operator pos:start="159:22" pos:end="159:23">-&gt;</operator><name pos:start="159:24" pos:end="159:28">width</name></name></expr></argument>, <argument pos:start="159:31" pos:end="159:43"><expr pos:start="159:31" pos:end="159:43"><name pos:start="159:31" pos:end="159:43"><name pos:start="159:31" pos:end="159:35">avctx</name><operator pos:start="159:36" pos:end="159:37">-&gt;</operator><name pos:start="159:38" pos:end="159:43">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="163:13" pos:end="163:59"><expr pos:start="163:13" pos:end="163:58"><name pos:start="163:13" pos:end="163:15">buf</name> <operator pos:start="163:17" pos:end="163:18">+=</operator> <name pos:start="163:20" pos:end="163:33"><name pos:start="163:20" pos:end="163:25">inSurf</name><operator pos:start="163:26" pos:end="163:27">-&gt;</operator><name pos:start="163:28" pos:end="163:33">height</name></name> <operator pos:start="163:35" pos:end="163:35">*</operator> <name pos:start="163:37" pos:end="163:58"><name pos:start="163:37" pos:end="163:52">lockBufferParams</name><operator pos:start="163:53" pos:end="163:53">.</operator><name pos:start="163:54" pos:end="163:58">pitch</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="167:13" pos:end="171:45"><expr pos:start="167:13" pos:end="171:44"><call pos:start="167:13" pos:end="171:44"><name pos:start="167:13" pos:end="167:31">av_image_copy_plane</name><argument_list pos:start="167:32" pos:end="171:44">(<argument pos:start="167:33" pos:end="167:35"><expr pos:start="167:33" pos:end="167:35"><name pos:start="167:33" pos:end="167:35">buf</name></expr></argument>, <argument pos:start="167:38" pos:end="167:59"><expr pos:start="167:38" pos:end="167:59"><name pos:start="167:38" pos:end="167:59"><name pos:start="167:38" pos:end="167:53">lockBufferParams</name><operator pos:start="167:54" pos:end="167:54">.</operator><name pos:start="167:55" pos:end="167:59">pitch</name></name></expr></argument>,

                <argument pos:start="169:17" pos:end="169:30"><expr pos:start="169:17" pos:end="169:30"><name pos:start="169:17" pos:end="169:30"><name pos:start="169:17" pos:end="169:21">frame</name><operator pos:start="169:22" pos:end="169:23">-&gt;</operator><name pos:start="169:24" pos:end="169:27">data</name><index pos:start="169:28" pos:end="169:30">[<expr pos:start="169:29" pos:end="169:29"><literal type="number" pos:start="169:29" pos:end="169:29">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="169:33" pos:end="169:50"><expr pos:start="169:33" pos:end="169:50"><name pos:start="169:33" pos:end="169:50"><name pos:start="169:33" pos:end="169:37">frame</name><operator pos:start="169:38" pos:end="169:39">-&gt;</operator><name pos:start="169:40" pos:end="169:47">linesize</name><index pos:start="169:48" pos:end="169:50">[<expr pos:start="169:49" pos:end="169:49"><literal type="number" pos:start="169:49" pos:end="169:49">2</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="171:17" pos:end="171:28"><expr pos:start="171:17" pos:end="171:28"><name pos:start="171:17" pos:end="171:28"><name pos:start="171:17" pos:end="171:21">avctx</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:28">width</name></name></expr></argument>, <argument pos:start="171:31" pos:end="171:43"><expr pos:start="171:31" pos:end="171:43"><name pos:start="171:31" pos:end="171:43"><name pos:start="171:31" pos:end="171:35">avctx</name><operator pos:start="171:36" pos:end="171:37">-&gt;</operator><name pos:start="171:38" pos:end="171:43">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="173:11" pos:end="179:9">else <block pos:start="173:16" pos:end="179:9">{<block_content pos:start="175:13" pos:end="177:35">

            <expr_stmt pos:start="175:13" pos:end="175:67"><expr pos:start="175:13" pos:end="175:66"><call pos:start="175:13" pos:end="175:66"><name pos:start="175:13" pos:end="175:18">av_log</name><argument_list pos:start="175:19" pos:end="175:66">(<argument pos:start="175:20" pos:end="175:24"><expr pos:start="175:20" pos:end="175:24"><name pos:start="175:20" pos:end="175:24">avctx</name></expr></argument>, <argument pos:start="175:27" pos:end="175:38"><expr pos:start="175:27" pos:end="175:38"><name pos:start="175:27" pos:end="175:38">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="175:41" pos:end="175:65"><expr pos:start="175:41" pos:end="175:65"><literal type="string" pos:start="175:41" pos:end="175:65">"Invalid pixel format!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="177:13" pos:end="177:35">return <expr pos:start="177:20" pos:end="177:34"><call pos:start="177:20" pos:end="177:34"><name pos:start="177:20" pos:end="177:26">AVERROR</name><argument_list pos:start="177:27" pos:end="177:34">(<argument pos:start="177:28" pos:end="177:33"><expr pos:start="177:28" pos:end="177:33"><name pos:start="177:28" pos:end="177:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="183:9" pos:end="183:91"><expr pos:start="183:9" pos:end="183:90"><name pos:start="183:9" pos:end="183:17">nv_status</name> <operator pos:start="183:19" pos:end="183:19">=</operator> <call pos:start="183:21" pos:end="183:90"><name pos:start="183:21" pos:end="183:51"><name pos:start="183:21" pos:end="183:27">p_nvenc</name><operator pos:start="183:28" pos:end="183:29">-&gt;</operator><name pos:start="183:30" pos:end="183:51">nvEncUnlockInputBuffer</name></name><argument_list pos:start="183:52" pos:end="183:90">(<argument pos:start="183:53" pos:end="183:66"><expr pos:start="183:53" pos:end="183:66"><name pos:start="183:53" pos:end="183:66"><name pos:start="183:53" pos:end="183:55">ctx</name><operator pos:start="183:56" pos:end="183:57">-&gt;</operator><name pos:start="183:58" pos:end="183:66">nvencoder</name></name></expr></argument>, <argument pos:start="183:69" pos:end="183:89"><expr pos:start="183:69" pos:end="183:89"><name pos:start="183:69" pos:end="183:89"><name pos:start="183:69" pos:end="183:74">inSurf</name><operator pos:start="183:75" pos:end="183:76">-&gt;</operator><name pos:start="183:77" pos:end="183:89">input_surface</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="185:9" pos:end="191:9"><if pos:start="185:9" pos:end="191:9">if <condition pos:start="185:12" pos:end="185:40">(<expr pos:start="185:13" pos:end="185:39"><name pos:start="185:13" pos:end="185:21">nv_status</name> <operator pos:start="185:23" pos:end="185:24">!=</operator> <name pos:start="185:26" pos:end="185:39">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="185:42" pos:end="191:9">{<block_content pos:start="187:13" pos:end="189:36">

            <expr_stmt pos:start="187:13" pos:end="187:76"><expr pos:start="187:13" pos:end="187:75"><call pos:start="187:13" pos:end="187:75"><name pos:start="187:13" pos:end="187:18">av_log</name><argument_list pos:start="187:19" pos:end="187:75">(<argument pos:start="187:20" pos:end="187:24"><expr pos:start="187:20" pos:end="187:24"><name pos:start="187:20" pos:end="187:24">avctx</name></expr></argument>, <argument pos:start="187:27" pos:end="187:38"><expr pos:start="187:27" pos:end="187:38"><name pos:start="187:27" pos:end="187:38">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="187:41" pos:end="187:74"><expr pos:start="187:41" pos:end="187:74"><literal type="string" pos:start="187:41" pos:end="187:74">"Failed unlocking input buffer!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="189:13" pos:end="189:36">return <expr pos:start="189:20" pos:end="189:35"><name pos:start="189:20" pos:end="189:35">AVERROR_EXTERNAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <for pos:start="195:9" pos:end="199:22">for <control pos:start="195:13" pos:end="195:52">(<init pos:start="195:14" pos:end="195:19"><expr pos:start="195:14" pos:end="195:18"><name pos:start="195:14" pos:end="195:14">i</name> <operator pos:start="195:16" pos:end="195:16">=</operator> <literal type="number" pos:start="195:18" pos:end="195:18">0</literal></expr>;</init> <condition pos:start="195:21" pos:end="195:47"><expr pos:start="195:21" pos:end="195:46"><name pos:start="195:21" pos:end="195:21">i</name> <operator pos:start="195:23" pos:end="195:23">&lt;</operator> <name pos:start="195:25" pos:end="195:46"><name pos:start="195:25" pos:end="195:27">ctx</name><operator pos:start="195:28" pos:end="195:29">-&gt;</operator><name pos:start="195:30" pos:end="195:46">max_surface_count</name></name></expr>;</condition> <incr pos:start="195:49" pos:end="195:51"><expr pos:start="195:49" pos:end="195:51"><operator pos:start="195:49" pos:end="195:50">++</operator><name pos:start="195:51" pos:end="195:51">i</name></expr></incr>)</control><block type="pseudo" pos:start="197:13" pos:end="199:22"><block_content pos:start="197:13" pos:end="199:22">

            <if_stmt pos:start="197:13" pos:end="199:22"><if pos:start="197:13" pos:end="199:22">if <condition pos:start="197:16" pos:end="197:46">(<expr pos:start="197:17" pos:end="197:45"><operator pos:start="197:17" pos:end="197:17">!</operator><name pos:start="197:18" pos:end="197:40"><name pos:start="197:18" pos:end="197:20">ctx</name><operator pos:start="197:21" pos:end="197:22">-&gt;</operator><name pos:start="197:23" pos:end="197:37">output_surfaces</name><index pos:start="197:38" pos:end="197:40">[<expr pos:start="197:39" pos:end="197:39"><name pos:start="197:39" pos:end="197:39">i</name></expr>]</index></name><operator pos:start="197:41" pos:end="197:41">.</operator><name pos:start="197:42" pos:end="197:45">busy</name></expr>)</condition><block type="pseudo" pos:start="199:17" pos:end="199:22"><block_content pos:start="199:17" pos:end="199:22">

                <break pos:start="199:17" pos:end="199:22">break;</break></block_content></block></if></if_stmt></block_content></block></for>



        <if_stmt pos:start="203:9" pos:end="211:9"><if pos:start="203:9" pos:end="211:9">if <condition pos:start="203:12" pos:end="203:40">(<expr pos:start="203:13" pos:end="203:39"><name pos:start="203:13" pos:end="203:13">i</name> <operator pos:start="203:15" pos:end="203:16">==</operator> <name pos:start="203:18" pos:end="203:39"><name pos:start="203:18" pos:end="203:20">ctx</name><operator pos:start="203:21" pos:end="203:22">-&gt;</operator><name pos:start="203:23" pos:end="203:39">max_surface_count</name></name></expr>)</condition> <block pos:start="203:42" pos:end="211:9">{<block_content pos:start="205:13" pos:end="209:36">

            <expr_stmt pos:start="205:13" pos:end="205:34"><expr pos:start="205:13" pos:end="205:33"><name pos:start="205:13" pos:end="205:29"><name pos:start="205:13" pos:end="205:18">inSurf</name><operator pos:start="205:19" pos:end="205:20">-&gt;</operator><name pos:start="205:21" pos:end="205:29">lockCount</name></name> <operator pos:start="205:31" pos:end="205:31">=</operator> <literal type="number" pos:start="205:33" pos:end="205:33">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:75"><expr pos:start="207:13" pos:end="207:74"><call pos:start="207:13" pos:end="207:74"><name pos:start="207:13" pos:end="207:18">av_log</name><argument_list pos:start="207:19" pos:end="207:74">(<argument pos:start="207:20" pos:end="207:24"><expr pos:start="207:20" pos:end="207:24"><name pos:start="207:20" pos:end="207:24">avctx</name></expr></argument>, <argument pos:start="207:27" pos:end="207:38"><expr pos:start="207:27" pos:end="207:38"><name pos:start="207:27" pos:end="207:38">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="207:41" pos:end="207:73"><expr pos:start="207:41" pos:end="207:73"><literal type="string" pos:start="207:41" pos:end="207:73">"No free output surface found!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="209:13" pos:end="209:36">return <expr pos:start="209:20" pos:end="209:35"><name pos:start="209:20" pos:end="209:35">AVERROR_EXTERNAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="215:9" pos:end="215:55"><expr pos:start="215:9" pos:end="215:54"><name pos:start="215:9" pos:end="215:31"><name pos:start="215:9" pos:end="215:11">ctx</name><operator pos:start="215:12" pos:end="215:13">-&gt;</operator><name pos:start="215:14" pos:end="215:28">output_surfaces</name><index pos:start="215:29" pos:end="215:31">[<expr pos:start="215:30" pos:end="215:30"><name pos:start="215:30" pos:end="215:30">i</name></expr>]</index></name><operator pos:start="215:32" pos:end="215:32">.</operator><name pos:start="215:33" pos:end="215:45">input_surface</name> <operator pos:start="215:47" pos:end="215:47">=</operator> <name pos:start="215:49" pos:end="215:54">inSurf</name></expr>;</expr_stmt>



        <expr_stmt pos:start="219:9" pos:end="219:55"><expr pos:start="219:9" pos:end="219:54"><name pos:start="219:9" pos:end="219:30"><name pos:start="219:9" pos:end="219:18">pic_params</name><operator pos:start="219:19" pos:end="219:19">.</operator><name pos:start="219:20" pos:end="219:30">inputBuffer</name></name> <operator pos:start="219:32" pos:end="219:32">=</operator> <name pos:start="219:34" pos:end="219:54"><name pos:start="219:34" pos:end="219:39">inSurf</name><operator pos:start="219:40" pos:end="219:41">-&gt;</operator><name pos:start="219:42" pos:end="219:54">input_surface</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:46"><expr pos:start="221:9" pos:end="221:45"><name pos:start="221:9" pos:end="221:28"><name pos:start="221:9" pos:end="221:18">pic_params</name><operator pos:start="221:19" pos:end="221:19">.</operator><name pos:start="221:20" pos:end="221:28">bufferFmt</name></name> <operator pos:start="221:30" pos:end="221:30">=</operator> <name pos:start="221:32" pos:end="221:45"><name pos:start="221:32" pos:end="221:37">inSurf</name><operator pos:start="221:38" pos:end="221:39">-&gt;</operator><name pos:start="221:40" pos:end="221:45">format</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:45"><expr pos:start="223:9" pos:end="223:44"><name pos:start="223:9" pos:end="223:29"><name pos:start="223:9" pos:end="223:18">pic_params</name><operator pos:start="223:19" pos:end="223:19">.</operator><name pos:start="223:20" pos:end="223:29">inputWidth</name></name> <operator pos:start="223:31" pos:end="223:31">=</operator> <name pos:start="223:33" pos:end="223:44"><name pos:start="223:33" pos:end="223:37">avctx</name><operator pos:start="223:38" pos:end="223:39">-&gt;</operator><name pos:start="223:40" pos:end="223:44">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:47"><expr pos:start="225:9" pos:end="225:46"><name pos:start="225:9" pos:end="225:30"><name pos:start="225:9" pos:end="225:18">pic_params</name><operator pos:start="225:19" pos:end="225:19">.</operator><name pos:start="225:20" pos:end="225:30">inputHeight</name></name> <operator pos:start="225:32" pos:end="225:32">=</operator> <name pos:start="225:34" pos:end="225:46"><name pos:start="225:34" pos:end="225:38">avctx</name><operator pos:start="225:39" pos:end="225:40">-&gt;</operator><name pos:start="225:41" pos:end="225:46">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:76"><expr pos:start="227:9" pos:end="227:75"><name pos:start="227:9" pos:end="227:34"><name pos:start="227:9" pos:end="227:18">pic_params</name><operator pos:start="227:19" pos:end="227:19">.</operator><name pos:start="227:20" pos:end="227:34">outputBitstream</name></name> <operator pos:start="227:36" pos:end="227:36">=</operator> <name pos:start="227:38" pos:end="227:60"><name pos:start="227:38" pos:end="227:40">ctx</name><operator pos:start="227:41" pos:end="227:42">-&gt;</operator><name pos:start="227:43" pos:end="227:57">output_surfaces</name><index pos:start="227:58" pos:end="227:60">[<expr pos:start="227:59" pos:end="227:59"><name pos:start="227:59" pos:end="227:59">i</name></expr>]</index></name><operator pos:start="227:61" pos:end="227:61">.</operator><name pos:start="227:62" pos:end="227:75">output_surface</name></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:39"><expr pos:start="229:9" pos:end="229:38"><name pos:start="229:9" pos:end="229:34"><name pos:start="229:9" pos:end="229:18">pic_params</name><operator pos:start="229:19" pos:end="229:19">.</operator><name pos:start="229:20" pos:end="229:34">completionEvent</name></name> <operator pos:start="229:36" pos:end="229:36">=</operator> <literal type="number" pos:start="229:38" pos:end="229:38">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="233:9" pos:end="249:9"><if pos:start="233:9" pos:end="245:9">if <condition pos:start="233:12" pos:end="233:56">(<expr pos:start="233:13" pos:end="233:55"><name pos:start="233:13" pos:end="233:24"><name pos:start="233:13" pos:end="233:17">avctx</name><operator pos:start="233:18" pos:end="233:19">-&gt;</operator><name pos:start="233:20" pos:end="233:24">flags</name></name> <operator pos:start="233:26" pos:end="233:26">&amp;</operator> <name pos:start="233:28" pos:end="233:55">AV_CODEC_FLAG_INTERLACED_DCT</name></expr>)</condition> <block pos:start="233:58" pos:end="245:9">{<block_content pos:start="235:13" pos:end="243:13">

            <if_stmt pos:start="235:13" pos:end="243:13"><if pos:start="235:13" pos:end="239:13">if <condition pos:start="235:16" pos:end="235:39">(<expr pos:start="235:17" pos:end="235:38"><name pos:start="235:17" pos:end="235:38"><name pos:start="235:17" pos:end="235:21">frame</name><operator pos:start="235:22" pos:end="235:23">-&gt;</operator><name pos:start="235:24" pos:end="235:38">top_field_first</name></name></expr>)</condition> <block pos:start="235:41" pos:end="239:13">{<block_content pos:start="237:17" pos:end="237:78">

                <expr_stmt pos:start="237:17" pos:end="237:78"><expr pos:start="237:17" pos:end="237:77"><name pos:start="237:17" pos:end="237:40"><name pos:start="237:17" pos:end="237:26">pic_params</name><operator pos:start="237:27" pos:end="237:27">.</operator><name pos:start="237:28" pos:end="237:40">pictureStruct</name></name> <operator pos:start="237:42" pos:end="237:42">=</operator> <name pos:start="237:44" pos:end="237:77">NV_ENC_PIC_STRUCT_FIELD_TOP_BOTTOM</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="239:15" pos:end="243:13">else <block pos:start="239:20" pos:end="243:13">{<block_content pos:start="241:17" pos:end="241:78">

                <expr_stmt pos:start="241:17" pos:end="241:78"><expr pos:start="241:17" pos:end="241:77"><name pos:start="241:17" pos:end="241:40"><name pos:start="241:17" pos:end="241:26">pic_params</name><operator pos:start="241:27" pos:end="241:27">.</operator><name pos:start="241:28" pos:end="241:40">pictureStruct</name></name> <operator pos:start="241:42" pos:end="241:42">=</operator> <name pos:start="241:44" pos:end="241:77">NV_ENC_PIC_STRUCT_FIELD_BOTTOM_TOP</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="245:11" pos:end="249:9">else <block pos:start="245:16" pos:end="249:9">{<block_content pos:start="247:13" pos:end="247:63">

            <expr_stmt pos:start="247:13" pos:end="247:63"><expr pos:start="247:13" pos:end="247:62"><name pos:start="247:13" pos:end="247:36"><name pos:start="247:13" pos:end="247:22">pic_params</name><operator pos:start="247:23" pos:end="247:23">.</operator><name pos:start="247:24" pos:end="247:36">pictureStruct</name></name> <operator pos:start="247:38" pos:end="247:38">=</operator> <name pos:start="247:40" pos:end="247:62">NV_ENC_PIC_STRUCT_FRAME</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="253:9" pos:end="253:38"><expr pos:start="253:9" pos:end="253:37"><name pos:start="253:9" pos:end="253:33"><name pos:start="253:9" pos:end="253:18">pic_params</name><operator pos:start="253:19" pos:end="253:19">.</operator><name pos:start="253:20" pos:end="253:33">encodePicFlags</name></name> <operator pos:start="253:35" pos:end="253:35">=</operator> <literal type="number" pos:start="253:37" pos:end="253:37">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:47"><expr pos:start="255:9" pos:end="255:46"><name pos:start="255:9" pos:end="255:33"><name pos:start="255:9" pos:end="255:18">pic_params</name><operator pos:start="255:19" pos:end="255:19">.</operator><name pos:start="255:20" pos:end="255:33">inputTimeStamp</name></name> <operator pos:start="255:35" pos:end="255:35">=</operator> <name pos:start="255:37" pos:end="255:46"><name pos:start="255:37" pos:end="255:41">frame</name><operator pos:start="255:42" pos:end="255:43">-&gt;</operator><name pos:start="255:44" pos:end="255:46">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:37"><expr pos:start="257:9" pos:end="257:36"><name pos:start="257:9" pos:end="257:32"><name pos:start="257:9" pos:end="257:18">pic_params</name><operator pos:start="257:19" pos:end="257:19">.</operator><name pos:start="257:20" pos:end="257:32">inputDuration</name></name> <operator pos:start="257:34" pos:end="257:34">=</operator> <literal type="number" pos:start="257:36" pos:end="257:36">0</literal></expr>;</expr_stmt>

        <switch pos:start="259:9" pos:end="283:9">switch <condition pos:start="259:16" pos:end="259:33">(<expr pos:start="259:17" pos:end="259:32"><name pos:start="259:17" pos:end="259:32"><name pos:start="259:17" pos:end="259:21">avctx</name><operator pos:start="259:22" pos:end="259:23">-&gt;</operator><name pos:start="259:24" pos:end="259:28">codec</name><operator pos:start="259:29" pos:end="259:30">-&gt;</operator><name pos:start="259:31" pos:end="259:32">id</name></name></expr>)</condition> <block pos:start="259:35" pos:end="283:9">{<block_content pos:start="261:9" pos:end="281:33">

        <case pos:start="261:9" pos:end="261:30">case <expr pos:start="261:14" pos:end="261:29"><name pos:start="261:14" pos:end="261:29">AV_CODEC_ID_H264</name></expr>:</case>

          <expr_stmt pos:start="263:11" pos:end="263:120"><expr pos:start="263:11" pos:end="263:119"><name pos:start="263:11" pos:end="263:59"><name pos:start="263:11" pos:end="263:20">pic_params</name><operator pos:start="263:21" pos:end="263:21">.</operator><name pos:start="263:22" pos:end="263:35">codecPicParams</name><operator pos:start="263:36" pos:end="263:36">.</operator><name pos:start="263:37" pos:end="263:49">h264PicParams</name><operator pos:start="263:50" pos:end="263:50">.</operator><name pos:start="263:51" pos:end="263:59">sliceMode</name></name> <operator pos:start="263:61" pos:end="263:61">=</operator> <name pos:start="263:63" pos:end="263:119"><name pos:start="263:63" pos:end="263:65">ctx</name><operator pos:start="263:66" pos:end="263:67">-&gt;</operator><name pos:start="263:68" pos:end="263:80">encode_config</name><operator pos:start="263:81" pos:end="263:81">.</operator><name pos:start="263:82" pos:end="263:98">encodeCodecConfig</name><operator pos:start="263:99" pos:end="263:99">.</operator><name pos:start="263:100" pos:end="263:109">h264Config</name><operator pos:start="263:110" pos:end="263:110">.</operator><name pos:start="263:111" pos:end="263:119">sliceMode</name></name></expr>;</expr_stmt>

          <expr_stmt pos:start="265:11" pos:end="265:128"><expr pos:start="265:11" pos:end="265:127"><name pos:start="265:11" pos:end="265:63"><name pos:start="265:11" pos:end="265:20">pic_params</name><operator pos:start="265:21" pos:end="265:21">.</operator><name pos:start="265:22" pos:end="265:35">codecPicParams</name><operator pos:start="265:36" pos:end="265:36">.</operator><name pos:start="265:37" pos:end="265:49">h264PicParams</name><operator pos:start="265:50" pos:end="265:50">.</operator><name pos:start="265:51" pos:end="265:63">sliceModeData</name></name> <operator pos:start="265:65" pos:end="265:65">=</operator> <name pos:start="265:67" pos:end="265:127"><name pos:start="265:67" pos:end="265:69">ctx</name><operator pos:start="265:70" pos:end="265:71">-&gt;</operator><name pos:start="265:72" pos:end="265:84">encode_config</name><operator pos:start="265:85" pos:end="265:85">.</operator><name pos:start="265:86" pos:end="265:102">encodeCodecConfig</name><operator pos:start="265:103" pos:end="265:103">.</operator><name pos:start="265:104" pos:end="265:113">h264Config</name><operator pos:start="265:114" pos:end="265:114">.</operator><name pos:start="265:115" pos:end="265:127">sliceModeData</name></name></expr>;</expr_stmt>

          <break pos:start="267:11" pos:end="267:16">break;</break>

        <case pos:start="269:9" pos:end="269:30">case <expr pos:start="269:14" pos:end="269:29"><name pos:start="269:14" pos:end="269:29">AV_CODEC_ID_H265</name></expr>:</case>

          <expr_stmt pos:start="271:11" pos:end="271:120"><expr pos:start="271:11" pos:end="271:119"><name pos:start="271:11" pos:end="271:59"><name pos:start="271:11" pos:end="271:20">pic_params</name><operator pos:start="271:21" pos:end="271:21">.</operator><name pos:start="271:22" pos:end="271:35">codecPicParams</name><operator pos:start="271:36" pos:end="271:36">.</operator><name pos:start="271:37" pos:end="271:49">hevcPicParams</name><operator pos:start="271:50" pos:end="271:50">.</operator><name pos:start="271:51" pos:end="271:59">sliceMode</name></name> <operator pos:start="271:61" pos:end="271:61">=</operator> <name pos:start="271:63" pos:end="271:119"><name pos:start="271:63" pos:end="271:65">ctx</name><operator pos:start="271:66" pos:end="271:67">-&gt;</operator><name pos:start="271:68" pos:end="271:80">encode_config</name><operator pos:start="271:81" pos:end="271:81">.</operator><name pos:start="271:82" pos:end="271:98">encodeCodecConfig</name><operator pos:start="271:99" pos:end="271:99">.</operator><name pos:start="271:100" pos:end="271:109">hevcConfig</name><operator pos:start="271:110" pos:end="271:110">.</operator><name pos:start="271:111" pos:end="271:119">sliceMode</name></name></expr>;</expr_stmt>

          <expr_stmt pos:start="273:11" pos:end="273:128"><expr pos:start="273:11" pos:end="273:127"><name pos:start="273:11" pos:end="273:63"><name pos:start="273:11" pos:end="273:20">pic_params</name><operator pos:start="273:21" pos:end="273:21">.</operator><name pos:start="273:22" pos:end="273:35">codecPicParams</name><operator pos:start="273:36" pos:end="273:36">.</operator><name pos:start="273:37" pos:end="273:49">hevcPicParams</name><operator pos:start="273:50" pos:end="273:50">.</operator><name pos:start="273:51" pos:end="273:63">sliceModeData</name></name> <operator pos:start="273:65" pos:end="273:65">=</operator> <name pos:start="273:67" pos:end="273:127"><name pos:start="273:67" pos:end="273:69">ctx</name><operator pos:start="273:70" pos:end="273:71">-&gt;</operator><name pos:start="273:72" pos:end="273:84">encode_config</name><operator pos:start="273:85" pos:end="273:85">.</operator><name pos:start="273:86" pos:end="273:102">encodeCodecConfig</name><operator pos:start="273:103" pos:end="273:103">.</operator><name pos:start="273:104" pos:end="273:113">hevcConfig</name><operator pos:start="273:114" pos:end="273:114">.</operator><name pos:start="273:115" pos:end="273:127">sliceModeData</name></name></expr>;</expr_stmt>

          <break pos:start="275:11" pos:end="275:16">break;</break>

        <default pos:start="277:9" pos:end="277:16">default:</default>

          <expr_stmt pos:start="279:11" pos:end="279:62"><expr pos:start="279:11" pos:end="279:61"><call pos:start="279:11" pos:end="279:61"><name pos:start="279:11" pos:end="279:16">av_log</name><argument_list pos:start="279:17" pos:end="279:61">(<argument pos:start="279:18" pos:end="279:22"><expr pos:start="279:18" pos:end="279:22"><name pos:start="279:18" pos:end="279:22">avctx</name></expr></argument>, <argument pos:start="279:25" pos:end="279:36"><expr pos:start="279:25" pos:end="279:36"><name pos:start="279:25" pos:end="279:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="279:39" pos:end="279:60"><expr pos:start="279:39" pos:end="279:60"><literal type="string" pos:start="279:39" pos:end="279:60">"Unknown codec name\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

          <return pos:start="281:11" pos:end="281:33">return <expr pos:start="281:18" pos:end="281:32"><call pos:start="281:18" pos:end="281:32"><name pos:start="281:18" pos:end="281:24">AVERROR</name><argument_list pos:start="281:25" pos:end="281:32">(<argument pos:start="281:26" pos:end="281:31"><expr pos:start="281:26" pos:end="281:31"><name pos:start="281:26" pos:end="281:31">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></switch>



        <expr_stmt pos:start="287:9" pos:end="287:72"><expr pos:start="287:9" pos:end="287:71"><name pos:start="287:9" pos:end="287:11">res</name> <operator pos:start="287:13" pos:end="287:13">=</operator> <call pos:start="287:15" pos:end="287:71"><name pos:start="287:15" pos:end="287:37">timestamp_queue_enqueue</name><argument_list pos:start="287:38" pos:end="287:71">(<argument pos:start="287:39" pos:end="287:58"><expr pos:start="287:39" pos:end="287:58"><operator pos:start="287:39" pos:end="287:39">&amp;</operator><name pos:start="287:40" pos:end="287:58"><name pos:start="287:40" pos:end="287:42">ctx</name><operator pos:start="287:43" pos:end="287:44">-&gt;</operator><name pos:start="287:45" pos:end="287:58">timestamp_list</name></name></expr></argument>, <argument pos:start="287:61" pos:end="287:70"><expr pos:start="287:61" pos:end="287:70"><name pos:start="287:61" pos:end="287:70"><name pos:start="287:61" pos:end="287:65">frame</name><operator pos:start="287:66" pos:end="287:67">-&gt;</operator><name pos:start="287:68" pos:end="287:70">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="291:9" pos:end="293:23"><if pos:start="291:9" pos:end="293:23">if <condition pos:start="291:12" pos:end="291:16">(<expr pos:start="291:13" pos:end="291:15"><name pos:start="291:13" pos:end="291:15">res</name></expr>)</condition><block type="pseudo" pos:start="293:13" pos:end="293:23"><block_content pos:start="293:13" pos:end="293:23">

            <return pos:start="293:13" pos:end="293:23">return <expr pos:start="293:20" pos:end="293:22"><name pos:start="293:20" pos:end="293:22">res</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="295:7" pos:end="299:5">else <block pos:start="295:12" pos:end="299:5">{<block_content pos:start="297:9" pos:end="297:56">

        <expr_stmt pos:start="297:9" pos:end="297:56"><expr pos:start="297:9" pos:end="297:55"><name pos:start="297:9" pos:end="297:33"><name pos:start="297:9" pos:end="297:18">pic_params</name><operator pos:start="297:19" pos:end="297:19">.</operator><name pos:start="297:20" pos:end="297:33">encodePicFlags</name></name> <operator pos:start="297:35" pos:end="297:35">=</operator> <name pos:start="297:37" pos:end="297:55">NV_ENC_PIC_FLAG_EOS</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="303:5" pos:end="303:73"><expr pos:start="303:5" pos:end="303:72"><name pos:start="303:5" pos:end="303:13">nv_status</name> <operator pos:start="303:15" pos:end="303:15">=</operator> <call pos:start="303:17" pos:end="303:72"><name pos:start="303:17" pos:end="303:43"><name pos:start="303:17" pos:end="303:23">p_nvenc</name><operator pos:start="303:24" pos:end="303:25">-&gt;</operator><name pos:start="303:26" pos:end="303:43">nvEncEncodePicture</name></name><argument_list pos:start="303:44" pos:end="303:72">(<argument pos:start="303:45" pos:end="303:58"><expr pos:start="303:45" pos:end="303:58"><name pos:start="303:45" pos:end="303:58"><name pos:start="303:45" pos:end="303:47">ctx</name><operator pos:start="303:48" pos:end="303:49">-&gt;</operator><name pos:start="303:50" pos:end="303:58">nvencoder</name></name></expr></argument>, <argument pos:start="303:61" pos:end="303:71"><expr pos:start="303:61" pos:end="303:71"><operator pos:start="303:61" pos:end="303:61">&amp;</operator><name pos:start="303:62" pos:end="303:71">pic_params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="307:5" pos:end="321:5"><if pos:start="307:5" pos:end="321:5">if <condition pos:start="307:8" pos:end="307:57">(<expr pos:start="307:9" pos:end="307:56"><name pos:start="307:9" pos:end="307:13">frame</name> <operator pos:start="307:15" pos:end="307:16">&amp;&amp;</operator> <name pos:start="307:18" pos:end="307:26">nv_status</name> <operator pos:start="307:28" pos:end="307:29">==</operator> <name pos:start="307:31" pos:end="307:56">NV_ENC_ERR_NEED_MORE_INPUT</name></expr>)</condition> <block pos:start="307:59" pos:end="321:5">{<block_content pos:start="309:9" pos:end="319:41">

        <expr_stmt pos:start="309:9" pos:end="309:91"><expr pos:start="309:9" pos:end="309:90"><name pos:start="309:9" pos:end="309:11">res</name> <operator pos:start="309:13" pos:end="309:13">=</operator> <call pos:start="309:15" pos:end="309:90"><name pos:start="309:15" pos:end="309:36">out_surf_queue_enqueue</name><argument_list pos:start="309:37" pos:end="309:90">(<argument pos:start="309:38" pos:end="309:63"><expr pos:start="309:38" pos:end="309:63"><operator pos:start="309:38" pos:end="309:38">&amp;</operator><name pos:start="309:39" pos:end="309:63"><name pos:start="309:39" pos:end="309:41">ctx</name><operator pos:start="309:42" pos:end="309:43">-&gt;</operator><name pos:start="309:44" pos:end="309:63">output_surface_queue</name></name></expr></argument>, <argument pos:start="309:66" pos:end="309:89"><expr pos:start="309:66" pos:end="309:89"><operator pos:start="309:66" pos:end="309:66">&amp;</operator><name pos:start="309:67" pos:end="309:89"><name pos:start="309:67" pos:end="309:69">ctx</name><operator pos:start="309:70" pos:end="309:71">-&gt;</operator><name pos:start="309:72" pos:end="309:86">output_surfaces</name><index pos:start="309:87" pos:end="309:89">[<expr pos:start="309:88" pos:end="309:88"><name pos:start="309:88" pos:end="309:88">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="313:9" pos:end="315:23"><if pos:start="313:9" pos:end="315:23">if <condition pos:start="313:12" pos:end="313:16">(<expr pos:start="313:13" pos:end="313:15"><name pos:start="313:13" pos:end="313:15">res</name></expr>)</condition><block type="pseudo" pos:start="315:13" pos:end="315:23"><block_content pos:start="315:13" pos:end="315:23">

            <return pos:start="315:13" pos:end="315:23">return <expr pos:start="315:20" pos:end="315:22"><name pos:start="315:20" pos:end="315:22">res</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="319:9" pos:end="319:41"><expr pos:start="319:9" pos:end="319:40"><name pos:start="319:9" pos:end="319:31"><name pos:start="319:9" pos:end="319:11">ctx</name><operator pos:start="319:12" pos:end="319:13">-&gt;</operator><name pos:start="319:14" pos:end="319:28">output_surfaces</name><index pos:start="319:29" pos:end="319:31">[<expr pos:start="319:30" pos:end="319:30"><name pos:start="319:30" pos:end="319:30">i</name></expr>]</index></name><operator pos:start="319:32" pos:end="319:32">.</operator><name pos:start="319:33" pos:end="319:36">busy</name> <operator pos:start="319:38" pos:end="319:38">=</operator> <literal type="number" pos:start="319:40" pos:end="319:40">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="325:5" pos:end="331:5"><if pos:start="325:5" pos:end="331:5">if <condition pos:start="325:8" pos:end="325:79">(<expr pos:start="325:9" pos:end="325:78"><name pos:start="325:9" pos:end="325:17">nv_status</name> <operator pos:start="325:19" pos:end="325:20">!=</operator> <name pos:start="325:22" pos:end="325:35">NV_ENC_SUCCESS</name> <operator pos:start="325:37" pos:end="325:38">&amp;&amp;</operator> <name pos:start="325:40" pos:end="325:48">nv_status</name> <operator pos:start="325:50" pos:end="325:51">!=</operator> <name pos:start="325:53" pos:end="325:78">NV_ENC_ERR_NEED_MORE_INPUT</name></expr>)</condition> <block pos:start="325:81" pos:end="331:5">{<block_content pos:start="327:9" pos:end="329:32">

        <expr_stmt pos:start="327:9" pos:end="327:63"><expr pos:start="327:9" pos:end="327:62"><call pos:start="327:9" pos:end="327:62"><name pos:start="327:9" pos:end="327:14">av_log</name><argument_list pos:start="327:15" pos:end="327:62">(<argument pos:start="327:16" pos:end="327:20"><expr pos:start="327:16" pos:end="327:20"><name pos:start="327:16" pos:end="327:20">avctx</name></expr></argument>, <argument pos:start="327:23" pos:end="327:34"><expr pos:start="327:23" pos:end="327:34"><name pos:start="327:23" pos:end="327:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="327:37" pos:end="327:61"><expr pos:start="327:37" pos:end="327:61"><literal type="string" pos:start="327:37" pos:end="327:61">"EncodePicture failed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="329:9" pos:end="329:32">return <expr pos:start="329:16" pos:end="329:31"><name pos:start="329:16" pos:end="329:31">AVERROR_EXTERNAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="335:5" pos:end="369:5"><if pos:start="335:5" pos:end="369:5">if <condition pos:start="335:8" pos:end="335:48">(<expr pos:start="335:9" pos:end="335:47"><name pos:start="335:9" pos:end="335:17">nv_status</name> <operator pos:start="335:19" pos:end="335:20">!=</operator> <name pos:start="335:22" pos:end="335:47">NV_ENC_ERR_NEED_MORE_INPUT</name></expr>)</condition> <block pos:start="335:50" pos:end="369:5">{<block_content pos:start="337:9" pos:end="367:9">

        <while pos:start="337:9" pos:end="349:9">while <condition pos:start="337:15" pos:end="337:47">(<expr pos:start="337:16" pos:end="337:46"><name pos:start="337:16" pos:end="337:46"><name pos:start="337:16" pos:end="337:18">ctx</name><operator pos:start="337:19" pos:end="337:20">-&gt;</operator><name pos:start="337:21" pos:end="337:40">output_surface_queue</name><operator pos:start="337:41" pos:end="337:41">.</operator><name pos:start="337:42" pos:end="337:46">count</name></name></expr>)</condition> <block pos:start="337:49" pos:end="349:9">{<block_content pos:start="339:13" pos:end="347:27">

            <expr_stmt pos:start="339:13" pos:end="339:76"><expr pos:start="339:13" pos:end="339:75"><name pos:start="339:13" pos:end="339:22">tmpoutsurf</name> <operator pos:start="339:24" pos:end="339:24">=</operator> <call pos:start="339:26" pos:end="339:75"><name pos:start="339:26" pos:end="339:47">out_surf_queue_dequeue</name><argument_list pos:start="339:48" pos:end="339:75">(<argument pos:start="339:49" pos:end="339:74"><expr pos:start="339:49" pos:end="339:74"><operator pos:start="339:49" pos:end="339:49">&amp;</operator><name pos:start="339:50" pos:end="339:74"><name pos:start="339:50" pos:end="339:52">ctx</name><operator pos:start="339:53" pos:end="339:54">-&gt;</operator><name pos:start="339:55" pos:end="339:74">output_surface_queue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:87"><expr pos:start="341:13" pos:end="341:86"><name pos:start="341:13" pos:end="341:15">res</name> <operator pos:start="341:17" pos:end="341:17">=</operator> <call pos:start="341:19" pos:end="341:86"><name pos:start="341:19" pos:end="341:40">out_surf_queue_enqueue</name><argument_list pos:start="341:41" pos:end="341:86">(<argument pos:start="341:42" pos:end="341:73"><expr pos:start="341:42" pos:end="341:73"><operator pos:start="341:42" pos:end="341:42">&amp;</operator><name pos:start="341:43" pos:end="341:73"><name pos:start="341:43" pos:end="341:45">ctx</name><operator pos:start="341:46" pos:end="341:47">-&gt;</operator><name pos:start="341:48" pos:end="341:73">output_surface_ready_queue</name></name></expr></argument>, <argument pos:start="341:76" pos:end="341:85"><expr pos:start="341:76" pos:end="341:85"><name pos:start="341:76" pos:end="341:85">tmpoutsurf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="345:13" pos:end="347:27"><if pos:start="345:13" pos:end="347:27">if <condition pos:start="345:16" pos:end="345:20">(<expr pos:start="345:17" pos:end="345:19"><name pos:start="345:17" pos:end="345:19">res</name></expr>)</condition><block type="pseudo" pos:start="347:17" pos:end="347:27"><block_content pos:start="347:17" pos:end="347:27">

                <return pos:start="347:17" pos:end="347:27">return <expr pos:start="347:24" pos:end="347:26"><name pos:start="347:24" pos:end="347:26">res</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></while>



        <if_stmt pos:start="353:9" pos:end="367:9"><if pos:start="353:9" pos:end="367:9">if <condition pos:start="353:12" pos:end="353:18">(<expr pos:start="353:13" pos:end="353:17"><name pos:start="353:13" pos:end="353:17">frame</name></expr>)</condition> <block pos:start="353:20" pos:end="367:9">{<block_content pos:start="355:13" pos:end="365:45">

            <expr_stmt pos:start="355:13" pos:end="355:101"><expr pos:start="355:13" pos:end="355:100"><name pos:start="355:13" pos:end="355:15">res</name> <operator pos:start="355:17" pos:end="355:17">=</operator> <call pos:start="355:19" pos:end="355:100"><name pos:start="355:19" pos:end="355:40">out_surf_queue_enqueue</name><argument_list pos:start="355:41" pos:end="355:100">(<argument pos:start="355:42" pos:end="355:73"><expr pos:start="355:42" pos:end="355:73"><operator pos:start="355:42" pos:end="355:42">&amp;</operator><name pos:start="355:43" pos:end="355:73"><name pos:start="355:43" pos:end="355:45">ctx</name><operator pos:start="355:46" pos:end="355:47">-&gt;</operator><name pos:start="355:48" pos:end="355:73">output_surface_ready_queue</name></name></expr></argument>, <argument pos:start="355:76" pos:end="355:99"><expr pos:start="355:76" pos:end="355:99"><operator pos:start="355:76" pos:end="355:76">&amp;</operator><name pos:start="355:77" pos:end="355:99"><name pos:start="355:77" pos:end="355:79">ctx</name><operator pos:start="355:80" pos:end="355:81">-&gt;</operator><name pos:start="355:82" pos:end="355:96">output_surfaces</name><index pos:start="355:97" pos:end="355:99">[<expr pos:start="355:98" pos:end="355:98"><name pos:start="355:98" pos:end="355:98">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="359:13" pos:end="361:27"><if pos:start="359:13" pos:end="361:27">if <condition pos:start="359:16" pos:end="359:20">(<expr pos:start="359:17" pos:end="359:19"><name pos:start="359:17" pos:end="359:19">res</name></expr>)</condition><block type="pseudo" pos:start="361:17" pos:end="361:27"><block_content pos:start="361:17" pos:end="361:27">

                <return pos:start="361:17" pos:end="361:27">return <expr pos:start="361:24" pos:end="361:26"><name pos:start="361:24" pos:end="361:26">res</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="365:13" pos:end="365:45"><expr pos:start="365:13" pos:end="365:44"><name pos:start="365:13" pos:end="365:35"><name pos:start="365:13" pos:end="365:15">ctx</name><operator pos:start="365:16" pos:end="365:17">-&gt;</operator><name pos:start="365:18" pos:end="365:32">output_surfaces</name><index pos:start="365:33" pos:end="365:35">[<expr pos:start="365:34" pos:end="365:34"><name pos:start="365:34" pos:end="365:34">i</name></expr>]</index></name><operator pos:start="365:36" pos:end="365:36">.</operator><name pos:start="365:37" pos:end="365:40">busy</name> <operator pos:start="365:42" pos:end="365:42">=</operator> <literal type="number" pos:start="365:44" pos:end="365:44">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="373:5" pos:end="403:5"><if pos:start="373:5" pos:end="399:5">if <condition pos:start="373:8" pos:end="373:154">(<expr pos:start="373:9" pos:end="373:153"><name pos:start="373:9" pos:end="373:45"><name pos:start="373:9" pos:end="373:11">ctx</name><operator pos:start="373:12" pos:end="373:13">-&gt;</operator><name pos:start="373:14" pos:end="373:39">output_surface_ready_queue</name><operator pos:start="373:40" pos:end="373:40">.</operator><name pos:start="373:41" pos:end="373:45">count</name></name> <operator pos:start="373:47" pos:end="373:48">&amp;&amp;</operator> <operator pos:start="373:50" pos:end="373:50">(</operator><operator pos:start="373:51" pos:end="373:51">!</operator><name pos:start="373:52" pos:end="373:56">frame</name> <operator pos:start="373:58" pos:end="373:59">||</operator> <name pos:start="373:61" pos:end="373:97"><name pos:start="373:61" pos:end="373:63">ctx</name><operator pos:start="373:64" pos:end="373:65">-&gt;</operator><name pos:start="373:66" pos:end="373:91">output_surface_ready_queue</name><operator pos:start="373:92" pos:end="373:92">.</operator><name pos:start="373:93" pos:end="373:97">count</name></name> <operator pos:start="373:99" pos:end="373:99">+</operator> <name pos:start="373:101" pos:end="373:131"><name pos:start="373:101" pos:end="373:103">ctx</name><operator pos:start="373:104" pos:end="373:105">-&gt;</operator><name pos:start="373:106" pos:end="373:125">output_surface_queue</name><operator pos:start="373:126" pos:end="373:126">.</operator><name pos:start="373:127" pos:end="373:131">count</name></name> <operator pos:start="373:133" pos:end="373:134">&gt;=</operator> <name pos:start="373:136" pos:end="373:152"><name pos:start="373:136" pos:end="373:138">ctx</name><operator pos:start="373:139" pos:end="373:140">-&gt;</operator><name pos:start="373:141" pos:end="373:152">buffer_delay</name></name><operator pos:start="373:153" pos:end="373:153">)</operator></expr>)</condition> <block pos:start="373:156" pos:end="399:5">{<block_content pos:start="375:9" pos:end="397:24">

        <expr_stmt pos:start="375:9" pos:end="375:78"><expr pos:start="375:9" pos:end="375:77"><name pos:start="375:9" pos:end="375:18">tmpoutsurf</name> <operator pos:start="375:20" pos:end="375:20">=</operator> <call pos:start="375:22" pos:end="375:77"><name pos:start="375:22" pos:end="375:43">out_surf_queue_dequeue</name><argument_list pos:start="375:44" pos:end="375:77">(<argument pos:start="375:45" pos:end="375:76"><expr pos:start="375:45" pos:end="375:76"><operator pos:start="375:45" pos:end="375:45">&amp;</operator><name pos:start="375:46" pos:end="375:76"><name pos:start="375:46" pos:end="375:48">ctx</name><operator pos:start="375:49" pos:end="375:50">-&gt;</operator><name pos:start="375:51" pos:end="375:76">output_surface_ready_queue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="379:9" pos:end="379:61"><expr pos:start="379:9" pos:end="379:60"><name pos:start="379:9" pos:end="379:11">res</name> <operator pos:start="379:13" pos:end="379:13">=</operator> <call pos:start="379:15" pos:end="379:60"><name pos:start="379:15" pos:end="379:36">process_output_surface</name><argument_list pos:start="379:37" pos:end="379:60">(<argument pos:start="379:38" pos:end="379:42"><expr pos:start="379:38" pos:end="379:42"><name pos:start="379:38" pos:end="379:42">avctx</name></expr></argument>, <argument pos:start="379:45" pos:end="379:47"><expr pos:start="379:45" pos:end="379:47"><name pos:start="379:45" pos:end="379:47">pkt</name></expr></argument>, <argument pos:start="379:50" pos:end="379:59"><expr pos:start="379:50" pos:end="379:59"><name pos:start="379:50" pos:end="379:59">tmpoutsurf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="383:9" pos:end="385:23"><if pos:start="383:9" pos:end="385:23">if <condition pos:start="383:12" pos:end="383:16">(<expr pos:start="383:13" pos:end="383:15"><name pos:start="383:13" pos:end="383:15">res</name></expr>)</condition><block type="pseudo" pos:start="385:13" pos:end="385:23"><block_content pos:start="385:13" pos:end="385:23">

            <return pos:start="385:13" pos:end="385:23">return <expr pos:start="385:20" pos:end="385:22"><name pos:start="385:20" pos:end="385:22">res</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="389:9" pos:end="389:29"><expr pos:start="389:9" pos:end="389:28"><name pos:start="389:9" pos:end="389:24"><name pos:start="389:9" pos:end="389:18">tmpoutsurf</name><operator pos:start="389:19" pos:end="389:20">-&gt;</operator><name pos:start="389:21" pos:end="389:24">busy</name></name> <operator pos:start="389:26" pos:end="389:26">=</operator> <literal type="number" pos:start="389:28" pos:end="389:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="391:9" pos:end="391:57"><expr pos:start="391:9" pos:end="391:56"><call pos:start="391:9" pos:end="391:56"><name pos:start="391:9" pos:end="391:18">av_assert0</name><argument_list pos:start="391:19" pos:end="391:56">(<argument pos:start="391:20" pos:end="391:55"><expr pos:start="391:20" pos:end="391:55"><name pos:start="391:20" pos:end="391:55"><name pos:start="391:20" pos:end="391:29">tmpoutsurf</name><operator pos:start="391:30" pos:end="391:31">-&gt;</operator><name pos:start="391:32" pos:end="391:44">input_surface</name><operator pos:start="391:45" pos:end="391:46">-&gt;</operator><name pos:start="391:47" pos:end="391:55">lockCount</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="393:9" pos:end="393:47"><expr pos:start="393:9" pos:end="393:46"><name pos:start="393:9" pos:end="393:44"><name pos:start="393:9" pos:end="393:18">tmpoutsurf</name><operator pos:start="393:19" pos:end="393:20">-&gt;</operator><name pos:start="393:21" pos:end="393:33">input_surface</name><operator pos:start="393:34" pos:end="393:35">-&gt;</operator><name pos:start="393:36" pos:end="393:44">lockCount</name></name><operator pos:start="393:45" pos:end="393:46">--</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="397:9" pos:end="397:24"><expr pos:start="397:9" pos:end="397:23"><operator pos:start="397:9" pos:end="397:9">*</operator><name pos:start="397:10" pos:end="397:19">got_packet</name> <operator pos:start="397:21" pos:end="397:21">=</operator> <literal type="number" pos:start="397:23" pos:end="397:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="399:7" pos:end="403:5">else <block pos:start="399:12" pos:end="403:5">{<block_content pos:start="401:9" pos:end="401:24">

        <expr_stmt pos:start="401:9" pos:end="401:24"><expr pos:start="401:9" pos:end="401:23"><operator pos:start="401:9" pos:end="401:9">*</operator><name pos:start="401:10" pos:end="401:19">got_packet</name> <operator pos:start="401:21" pos:end="401:21">=</operator> <literal type="number" pos:start="401:23" pos:end="401:23">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="407:5" pos:end="407:13">return <expr pos:start="407:12" pos:end="407:12"><literal type="number" pos:start="407:12" pos:end="407:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
