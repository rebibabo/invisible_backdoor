<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12316.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">filter_mb_edgecv</name><parameter_list pos:start="1:29" pos:end="1:91">( <parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:41">H264Context</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">h</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">pix</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:70"><decl pos:start="1:61" pos:end="1:70"><type pos:start="1:61" pos:end="1:70"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:70">stride</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:81"><decl pos:start="1:73" pos:end="1:81"><type pos:start="1:73" pos:end="1:78"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:81"><name pos:start="1:77" pos:end="1:78">bS</name><index pos:start="1:79" pos:end="1:81">[<expr pos:start="1:80" pos:end="1:80"><literal type="number" pos:start="1:80" pos:end="1:80">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:89"><decl pos:start="1:84" pos:end="1:89"><type pos:start="1:84" pos:end="1:89"><name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:89">qp</name></decl></parameter> )</parameter_list> <block pos:start="1:93" pos:end="81:1">{<block_content pos:start="3:5" pos:end="79:5">

    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:69"><decl pos:start="5:5" pos:end="5:68"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:21">index_a</name> <init pos:start="5:23" pos:end="5:68">= <expr pos:start="5:25" pos:end="5:68"><call pos:start="5:25" pos:end="5:68"><name pos:start="5:25" pos:end="5:28">clip</name><argument_list pos:start="5:29" pos:end="5:68">( <argument pos:start="5:31" pos:end="5:59"><expr pos:start="5:31" pos:end="5:59"><name pos:start="5:31" pos:end="5:32">qp</name> <operator pos:start="5:34" pos:end="5:34">+</operator> <name pos:start="5:36" pos:end="5:59"><name pos:start="5:36" pos:end="5:36">h</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:59">slice_alpha_c0_offset</name></name></expr></argument>, <argument pos:start="5:62" pos:end="5:62"><expr pos:start="5:62" pos:end="5:62"><literal type="number" pos:start="5:62" pos:end="5:62">0</literal></expr></argument>, <argument pos:start="5:65" pos:end="5:66"><expr pos:start="5:65" pos:end="5:66"><literal type="number" pos:start="5:65" pos:end="5:66">51</literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">alpha</name> <init pos:start="7:21" pos:end="7:42">= <expr pos:start="7:23" pos:end="7:42"><name pos:start="7:23" pos:end="7:42"><name pos:start="7:23" pos:end="7:33">alpha_table</name><index pos:start="7:34" pos:end="7:42">[<expr pos:start="7:35" pos:end="7:41"><name pos:start="7:35" pos:end="7:41">index_a</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:75"><decl pos:start="9:5" pos:end="9:74"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:18">beta</name>  <init pos:start="9:21" pos:end="9:74">= <expr pos:start="9:23" pos:end="9:74"><name pos:start="9:23" pos:end="9:74"><name pos:start="9:23" pos:end="9:32">beta_table</name><index pos:start="9:33" pos:end="9:74">[<expr pos:start="9:34" pos:end="9:73"><call pos:start="9:34" pos:end="9:73"><name pos:start="9:34" pos:end="9:37">clip</name><argument_list pos:start="9:38" pos:end="9:73">( <argument pos:start="9:40" pos:end="9:64"><expr pos:start="9:40" pos:end="9:64"><name pos:start="9:40" pos:end="9:41">qp</name> <operator pos:start="9:43" pos:end="9:43">+</operator> <name pos:start="9:45" pos:end="9:64"><name pos:start="9:45" pos:end="9:45">h</name><operator pos:start="9:46" pos:end="9:47">-&gt;</operator><name pos:start="9:48" pos:end="9:64">slice_beta_offset</name></name></expr></argument>, <argument pos:start="9:67" pos:end="9:67"><expr pos:start="9:67" pos:end="9:67"><literal type="number" pos:start="9:67" pos:end="9:67">0</literal></expr></argument>, <argument pos:start="9:70" pos:end="9:71"><expr pos:start="9:70" pos:end="9:71"><literal type="number" pos:start="9:70" pos:end="9:71">51</literal></expr></argument> )</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="79:5">for<control pos:start="13:8" pos:end="13:28">( <init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:22"><expr pos:start="13:17" pos:end="13:21"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <literal type="number" pos:start="13:21" pos:end="13:21">4</literal></expr>;</condition> <incr pos:start="13:24" pos:end="13:26"><expr pos:start="13:24" pos:end="13:26"><name pos:start="13:24" pos:end="13:24">i</name><operator pos:start="13:25" pos:end="13:26">++</operator></expr></incr> )</control> <block pos:start="13:30" pos:end="79:5">{<block_content pos:start="15:9" pos:end="77:9">

        <if_stmt pos:start="15:9" pos:end="21:9"><if pos:start="15:9" pos:end="21:9">if<condition pos:start="15:11" pos:end="15:24">( <expr pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:17"><name pos:start="15:13" pos:end="15:14">bS</name><index pos:start="15:15" pos:end="15:17">[<expr pos:start="15:16" pos:end="15:16"><name pos:start="15:16" pos:end="15:16">i</name></expr>]</index></name> <operator pos:start="15:19" pos:end="15:20">==</operator> <literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr> )</condition> <block pos:start="15:26" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:21">

            <expr_stmt pos:start="17:13" pos:end="17:30"><expr pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:15">pix</name> <operator pos:start="17:17" pos:end="17:18">+=</operator> <literal type="number" pos:start="17:20" pos:end="17:20">2</literal> <operator pos:start="17:22" pos:end="17:22">*</operator> <name pos:start="17:24" pos:end="17:29">stride</name></expr>;</expr_stmt>

            <continue pos:start="19:13" pos:end="19:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="25:9" pos:end="25:76">/* 2px edge length (because we use same bS than the one for luma) */</comment>

        <for pos:start="27:9" pos:end="77:9">for<control pos:start="27:12" pos:end="27:32">( <init pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">d</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:25"><name pos:start="27:21" pos:end="27:21">d</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <literal type="number" pos:start="27:25" pos:end="27:25">2</literal></expr>;</condition> <incr pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:28">d</name><operator pos:start="27:29" pos:end="27:30">++</operator></expr></incr> )</control>

        <block pos:start="29:9" pos:end="77:9">{<block_content pos:start="31:13" pos:end="75:26">

            <decl_stmt pos:start="31:13" pos:end="31:39"><decl pos:start="31:13" pos:end="31:38"><type pos:start="31:13" pos:end="31:25"><specifier pos:start="31:13" pos:end="31:17">const</specifier> <name pos:start="31:19" pos:end="31:25">uint8_t</name></type> <name pos:start="31:27" pos:end="31:28">p0</name> <init pos:start="31:30" pos:end="31:38">= <expr pos:start="31:32" pos:end="31:38"><name pos:start="31:32" pos:end="31:38"><name pos:start="31:32" pos:end="31:34">pix</name><index pos:start="31:35" pos:end="31:38">[<expr pos:start="31:36" pos:end="31:37"><operator pos:start="31:36" pos:end="31:36">-</operator><literal type="number" pos:start="31:37" pos:end="31:37">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:39"><decl pos:start="33:13" pos:end="33:38"><type pos:start="33:13" pos:end="33:25"><specifier pos:start="33:13" pos:end="33:17">const</specifier> <name pos:start="33:19" pos:end="33:25">uint8_t</name></type> <name pos:start="33:27" pos:end="33:28">p1</name> <init pos:start="33:30" pos:end="33:38">= <expr pos:start="33:32" pos:end="33:38"><name pos:start="33:32" pos:end="33:38"><name pos:start="33:32" pos:end="33:34">pix</name><index pos:start="33:35" pos:end="33:38">[<expr pos:start="33:36" pos:end="33:37"><operator pos:start="33:36" pos:end="33:36">-</operator><literal type="number" pos:start="33:37" pos:end="33:37">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:38"><decl pos:start="35:13" pos:end="35:37"><type pos:start="35:13" pos:end="35:25"><specifier pos:start="35:13" pos:end="35:17">const</specifier> <name pos:start="35:19" pos:end="35:25">uint8_t</name></type> <name pos:start="35:27" pos:end="35:28">q0</name> <init pos:start="35:30" pos:end="35:37">= <expr pos:start="35:32" pos:end="35:37"><name pos:start="35:32" pos:end="35:37"><name pos:start="35:32" pos:end="35:34">pix</name><index pos:start="35:35" pos:end="35:37">[<expr pos:start="35:36" pos:end="35:36"><literal type="number" pos:start="35:36" pos:end="35:36">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="37:13" pos:end="37:38"><decl pos:start="37:13" pos:end="37:37"><type pos:start="37:13" pos:end="37:25"><specifier pos:start="37:13" pos:end="37:17">const</specifier> <name pos:start="37:19" pos:end="37:25">uint8_t</name></type> <name pos:start="37:27" pos:end="37:28">q1</name> <init pos:start="37:30" pos:end="37:37">= <expr pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:34">pix</name><index pos:start="37:35" pos:end="37:37">[<expr pos:start="37:36" pos:end="37:36"><literal type="number" pos:start="37:36" pos:end="37:36">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="41:13" pos:end="51:13"><if pos:start="41:13" pos:end="51:13">if<condition pos:start="41:15" pos:end="45:40">( <expr pos:start="41:17" pos:end="45:38"><call pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:19">abs</name><argument_list pos:start="41:20" pos:end="41:30">( <argument pos:start="41:22" pos:end="41:28"><expr pos:start="41:22" pos:end="41:28"><name pos:start="41:22" pos:end="41:23">p0</name> <operator pos:start="41:25" pos:end="41:25">-</operator> <name pos:start="41:27" pos:end="41:28">q0</name></expr></argument> )</argument_list></call> <operator pos:start="41:32" pos:end="41:33">&gt;=</operator> <name pos:start="41:35" pos:end="41:39">alpha</name> <operator pos:start="41:41" pos:end="41:42">||</operator>

                <call pos:start="43:17" pos:end="43:30"><name pos:start="43:17" pos:end="43:19">abs</name><argument_list pos:start="43:20" pos:end="43:30">( <argument pos:start="43:22" pos:end="43:28"><expr pos:start="43:22" pos:end="43:28"><name pos:start="43:22" pos:end="43:23">p1</name> <operator pos:start="43:25" pos:end="43:25">-</operator> <name pos:start="43:27" pos:end="43:28">p0</name></expr></argument> )</argument_list></call> <operator pos:start="43:32" pos:end="43:33">&gt;=</operator> <name pos:start="43:35" pos:end="43:38">beta</name> <operator pos:start="43:40" pos:end="43:41">||</operator>

                <call pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:19">abs</name><argument_list pos:start="45:20" pos:end="45:30">( <argument pos:start="45:22" pos:end="45:28"><expr pos:start="45:22" pos:end="45:28"><name pos:start="45:22" pos:end="45:23">q1</name> <operator pos:start="45:25" pos:end="45:25">-</operator> <name pos:start="45:27" pos:end="45:28">q0</name></expr></argument> )</argument_list></call> <operator pos:start="45:32" pos:end="45:33">&gt;=</operator> <name pos:start="45:35" pos:end="45:38">beta</name></expr> )</condition> <block pos:start="45:42" pos:end="51:13">{<block_content pos:start="47:17" pos:end="49:25">

                <expr_stmt pos:start="47:17" pos:end="47:30"><expr pos:start="47:17" pos:end="47:29"><name pos:start="47:17" pos:end="47:19">pix</name> <operator pos:start="47:21" pos:end="47:22">+=</operator> <name pos:start="47:24" pos:end="47:29">stride</name></expr>;</expr_stmt>

                <continue pos:start="49:17" pos:end="49:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="55:13" pos:end="73:13"><if pos:start="55:13" pos:end="67:13">if<condition pos:start="55:15" pos:end="55:27">( <expr pos:start="55:17" pos:end="55:25"><name pos:start="55:17" pos:end="55:21"><name pos:start="55:17" pos:end="55:18">bS</name><index pos:start="55:19" pos:end="55:21">[<expr pos:start="55:20" pos:end="55:20"><name pos:start="55:20" pos:end="55:20">i</name></expr>]</index></name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <literal type="number" pos:start="55:25" pos:end="55:25">4</literal></expr> )</condition> <block pos:start="55:29" pos:end="67:13">{<block_content pos:start="57:17" pos:end="65:55">

                <decl_stmt pos:start="57:17" pos:end="57:65"><decl pos:start="57:17" pos:end="57:64"><type pos:start="57:17" pos:end="57:25"><specifier pos:start="57:17" pos:end="57:21">const</specifier> <name pos:start="57:23" pos:end="57:25">int</name></type> <name pos:start="57:27" pos:end="57:28">tc</name> <init pos:start="57:30" pos:end="57:64">= <expr pos:start="57:32" pos:end="57:64"><name pos:start="57:32" pos:end="57:60"><name pos:start="57:32" pos:end="57:40">tc0_table</name><index pos:start="57:41" pos:end="57:49">[<expr pos:start="57:42" pos:end="57:48"><name pos:start="57:42" pos:end="57:48">index_a</name></expr>]</index><index pos:start="57:50" pos:end="57:60">[<expr pos:start="57:51" pos:end="57:59"><name pos:start="57:51" pos:end="57:55"><name pos:start="57:51" pos:end="57:52">bS</name><index pos:start="57:53" pos:end="57:55">[<expr pos:start="57:54" pos:end="57:54"><name pos:start="57:54" pos:end="57:54">i</name></expr>]</index></name> <operator pos:start="57:57" pos:end="57:57">-</operator> <literal type="number" pos:start="57:59" pos:end="57:59">1</literal></expr>]</index></name> <operator pos:start="57:62" pos:end="57:62">+</operator> <literal type="number" pos:start="57:64" pos:end="57:64">1</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="59:17" pos:end="59:94"><decl pos:start="59:17" pos:end="59:93"><type pos:start="59:17" pos:end="59:25"><specifier pos:start="59:17" pos:end="59:21">const</specifier> <name pos:start="59:23" pos:end="59:25">int</name></type> <name pos:start="59:27" pos:end="59:33">i_delta</name> <init pos:start="59:35" pos:end="59:93">= <expr pos:start="59:37" pos:end="59:93"><call pos:start="59:37" pos:end="59:93"><name pos:start="59:37" pos:end="59:40">clip</name><argument_list pos:start="59:41" pos:end="59:93">( <argument pos:start="59:43" pos:end="59:82"><expr pos:start="59:43" pos:end="59:82"><operator pos:start="59:43" pos:end="59:43">(</operator><operator pos:start="59:44" pos:end="59:44">(</operator><operator pos:start="59:45" pos:end="59:45">(</operator><name pos:start="59:46" pos:end="59:47">q0</name> <operator pos:start="59:49" pos:end="59:49">-</operator> <name pos:start="59:51" pos:end="59:52">p0</name> <operator pos:start="59:54" pos:end="59:54">)</operator> <operator pos:start="59:56" pos:end="59:57">&lt;&lt;</operator> <literal type="number" pos:start="59:59" pos:end="59:59">2</literal><operator pos:start="59:60" pos:end="59:60">)</operator> <operator pos:start="59:62" pos:end="59:62">+</operator> <operator pos:start="59:64" pos:end="59:64">(</operator><name pos:start="59:65" pos:end="59:66">p1</name> <operator pos:start="59:68" pos:end="59:68">-</operator> <name pos:start="59:70" pos:end="59:71">q1</name><operator pos:start="59:72" pos:end="59:72">)</operator> <operator pos:start="59:74" pos:end="59:74">+</operator> <literal type="number" pos:start="59:76" pos:end="59:76">4</literal><operator pos:start="59:77" pos:end="59:77">)</operator> <operator pos:start="59:79" pos:end="59:80">&gt;&gt;</operator> <literal type="number" pos:start="59:82" pos:end="59:82">3</literal></expr></argument>, <argument pos:start="59:85" pos:end="59:87"><expr pos:start="59:85" pos:end="59:87"><operator pos:start="59:85" pos:end="59:85">-</operator><name pos:start="59:86" pos:end="59:87">tc</name></expr></argument>, <argument pos:start="59:90" pos:end="59:91"><expr pos:start="59:90" pos:end="59:91"><name pos:start="59:90" pos:end="59:91">tc</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="63:17" pos:end="63:55"><expr pos:start="63:17" pos:end="63:54"><name pos:start="63:17" pos:end="63:23"><name pos:start="63:17" pos:end="63:19">pix</name><index pos:start="63:20" pos:end="63:23">[<expr pos:start="63:21" pos:end="63:22"><operator pos:start="63:21" pos:end="63:21">-</operator><literal type="number" pos:start="63:22" pos:end="63:22">1</literal></expr>]</index></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <call pos:start="63:27" pos:end="63:54"><name pos:start="63:27" pos:end="63:30">clip</name><argument_list pos:start="63:31" pos:end="63:54">( <argument pos:start="63:33" pos:end="63:44"><expr pos:start="63:33" pos:end="63:44"><name pos:start="63:33" pos:end="63:34">p0</name> <operator pos:start="63:36" pos:end="63:36">+</operator> <name pos:start="63:38" pos:end="63:44">i_delta</name></expr></argument>, <argument pos:start="63:47" pos:end="63:47"><expr pos:start="63:47" pos:end="63:47"><literal type="number" pos:start="63:47" pos:end="63:47">0</literal></expr></argument>, <argument pos:start="63:50" pos:end="63:52"><expr pos:start="63:50" pos:end="63:52"><literal type="number" pos:start="63:50" pos:end="63:52">255</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="63:60" pos:end="63:68">/* p0' */</comment>

                <expr_stmt pos:start="65:17" pos:end="65:55"><expr pos:start="65:17" pos:end="65:54"><name pos:start="65:17" pos:end="65:22"><name pos:start="65:17" pos:end="65:19">pix</name><index pos:start="65:20" pos:end="65:22">[<expr pos:start="65:21" pos:end="65:21"><literal type="number" pos:start="65:21" pos:end="65:21">0</literal></expr>]</index></name>  <operator pos:start="65:25" pos:end="65:25">=</operator> <call pos:start="65:27" pos:end="65:54"><name pos:start="65:27" pos:end="65:30">clip</name><argument_list pos:start="65:31" pos:end="65:54">( <argument pos:start="65:33" pos:end="65:44"><expr pos:start="65:33" pos:end="65:44"><name pos:start="65:33" pos:end="65:34">q0</name> <operator pos:start="65:36" pos:end="65:36">-</operator> <name pos:start="65:38" pos:end="65:44">i_delta</name></expr></argument>, <argument pos:start="65:47" pos:end="65:47"><expr pos:start="65:47" pos:end="65:47"><literal type="number" pos:start="65:47" pos:end="65:47">0</literal></expr></argument>, <argument pos:start="65:50" pos:end="65:52"><expr pos:start="65:50" pos:end="65:52"><literal type="number" pos:start="65:50" pos:end="65:52">255</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="65:60" pos:end="65:68">/* q0' */</comment>

            </block_content>}</block></if> <else pos:start="67:15" pos:end="73:13">else <block pos:start="67:20" pos:end="73:13">{<block_content pos:start="69:17" pos:end="71:54">

                <expr_stmt pos:start="69:17" pos:end="69:54"><expr pos:start="69:17" pos:end="69:53"><name pos:start="69:17" pos:end="69:23"><name pos:start="69:17" pos:end="69:19">pix</name><index pos:start="69:20" pos:end="69:23">[<expr pos:start="69:21" pos:end="69:22"><operator pos:start="69:21" pos:end="69:21">-</operator><literal type="number" pos:start="69:22" pos:end="69:22">1</literal></expr>]</index></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <operator pos:start="69:27" pos:end="69:27">(</operator> <literal type="number" pos:start="69:29" pos:end="69:29">2</literal><operator pos:start="69:30" pos:end="69:30">*</operator><name pos:start="69:31" pos:end="69:32">p1</name> <operator pos:start="69:34" pos:end="69:34">+</operator> <name pos:start="69:36" pos:end="69:37">p0</name> <operator pos:start="69:39" pos:end="69:39">+</operator> <name pos:start="69:41" pos:end="69:42">q1</name> <operator pos:start="69:44" pos:end="69:44">+</operator> <literal type="number" pos:start="69:46" pos:end="69:46">2</literal> <operator pos:start="69:48" pos:end="69:48">)</operator> <operator pos:start="69:50" pos:end="69:51">&gt;&gt;</operator> <literal type="number" pos:start="69:53" pos:end="69:53">2</literal></expr>;</expr_stmt>   <comment type="block" pos:start="69:58" pos:end="69:66">/* p0' */</comment>

                <expr_stmt pos:start="71:17" pos:end="71:54"><expr pos:start="71:17" pos:end="71:53"><name pos:start="71:17" pos:end="71:22"><name pos:start="71:17" pos:end="71:19">pix</name><index pos:start="71:20" pos:end="71:22">[<expr pos:start="71:21" pos:end="71:21"><literal type="number" pos:start="71:21" pos:end="71:21">0</literal></expr>]</index></name>  <operator pos:start="71:25" pos:end="71:25">=</operator> <operator pos:start="71:27" pos:end="71:27">(</operator> <literal type="number" pos:start="71:29" pos:end="71:29">2</literal><operator pos:start="71:30" pos:end="71:30">*</operator><name pos:start="71:31" pos:end="71:32">q1</name> <operator pos:start="71:34" pos:end="71:34">+</operator> <name pos:start="71:36" pos:end="71:37">q0</name> <operator pos:start="71:39" pos:end="71:39">+</operator> <name pos:start="71:41" pos:end="71:42">p1</name> <operator pos:start="71:44" pos:end="71:44">+</operator> <literal type="number" pos:start="71:46" pos:end="71:46">2</literal> <operator pos:start="71:48" pos:end="71:48">)</operator> <operator pos:start="71:50" pos:end="71:51">&gt;&gt;</operator> <literal type="number" pos:start="71:53" pos:end="71:53">2</literal></expr>;</expr_stmt>   <comment type="block" pos:start="71:58" pos:end="71:66">/* q0' */</comment>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:26"><expr pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:15">pix</name> <operator pos:start="75:17" pos:end="75:18">+=</operator> <name pos:start="75:20" pos:end="75:25">stride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
