<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1113.c" pos:tabs="8"><function pos:start="1:1" pos:end="257:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">qemu_rbd_parse_filename</name><parameter_list pos:start="1:36" pos:end="3:49">(<parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:56">filename</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:72"><decl pos:start="1:59" pos:end="1:72"><type pos:start="1:59" pos:end="1:72"><name pos:start="1:59" pos:end="1:63">QDict</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:72">options</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:48"><decl pos:start="3:37" pos:end="3:48"><type pos:start="3:37" pos:end="3:48"><name pos:start="3:37" pos:end="3:41">Error</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier><modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:48">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="257:1">{<block_content pos:start="7:5" pos:end="255:11">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:21">start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:11">p</name></decl>, <decl pos:start="9:14" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:10"><modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">buf</name></decl>, <decl pos:start="9:20" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:10"><modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:28">keypairs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:19">found_str</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">size_t</name></type> <name pos:start="13:12" pos:end="13:27">max_keypair_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:20">local_err</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:44">(<expr pos:start="19:9" pos:end="19:43"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:43"><name pos:start="19:10" pos:end="19:17">strstart</name><argument_list pos:start="19:18" pos:end="19:43">(<argument pos:start="19:19" pos:end="19:26"><expr pos:start="19:19" pos:end="19:26"><name pos:start="19:19" pos:end="19:26">filename</name></expr></argument>, <argument pos:start="19:29" pos:end="19:34"><expr pos:start="19:29" pos:end="19:34"><literal type="string" pos:start="19:29" pos:end="19:34">"rbd:"</literal></expr></argument>, <argument pos:start="19:37" pos:end="19:42"><expr pos:start="19:37" pos:end="19:42"><operator pos:start="19:37" pos:end="19:37">&amp;</operator><name pos:start="19:38" pos:end="19:42">start</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:46" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <expr_stmt pos:start="21:9" pos:end="21:61"><expr pos:start="21:9" pos:end="21:60"><call pos:start="21:9" pos:end="21:60"><name pos:start="21:9" pos:end="21:18">error_setg</name><argument_list pos:start="21:19" pos:end="21:60">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">errp</name></expr></argument>, <argument pos:start="21:26" pos:end="21:59"><expr pos:start="21:26" pos:end="21:59"><literal type="string" pos:start="21:26" pos:end="21:59">"File name must start with 'rbd:'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:41"><expr pos:start="29:5" pos:end="29:40"><name pos:start="29:5" pos:end="29:20">max_keypair_size</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <call pos:start="29:24" pos:end="29:36"><name pos:start="29:24" pos:end="29:29">strlen</name><argument_list pos:start="29:30" pos:end="29:36">(<argument pos:start="29:31" pos:end="29:35"><expr pos:start="29:31" pos:end="29:35"><name pos:start="29:31" pos:end="29:35">start</name></expr></argument>)</argument_list></call> <operator pos:start="29:38" pos:end="29:38">+</operator> <literal type="number" pos:start="29:40" pos:end="29:40">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:7">buf</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:25"><name pos:start="31:11" pos:end="31:18">g_strdup</name><argument_list pos:start="31:19" pos:end="31:25">(<argument pos:start="31:20" pos:end="31:24"><expr pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:24">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:12">keypairs</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:42"><name pos:start="33:16" pos:end="33:24">g_malloc0</name><argument_list pos:start="33:25" pos:end="33:42">(<argument pos:start="33:26" pos:end="33:41"><expr pos:start="33:26" pos:end="33:41"><name pos:start="33:26" pos:end="33:41">max_keypair_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:12"><expr pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:5">p</name> <operator pos:start="35:7" pos:end="35:7">=</operator> <name pos:start="35:9" pos:end="35:11">buf</name></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="41:68"><expr pos:start="39:5" pos:end="41:67"><name pos:start="39:5" pos:end="39:13">found_str</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="41:67"><name pos:start="39:17" pos:end="39:33">qemu_rbd_next_tok</name><argument_list pos:start="39:34" pos:end="41:67">(<argument pos:start="39:35" pos:end="39:56"><expr pos:start="39:35" pos:end="39:56"><name pos:start="39:35" pos:end="39:56">RBD_MAX_POOL_NAME_SIZE</name></expr></argument>, <argument pos:start="39:59" pos:end="39:59"><expr pos:start="39:59" pos:end="39:59"><name pos:start="39:59" pos:end="39:59">p</name></expr></argument>,

                                  <argument pos:start="41:35" pos:end="41:37"><expr pos:start="41:35" pos:end="41:37"><literal type="char" pos:start="41:35" pos:end="41:37">'/'</literal></expr></argument>, <argument pos:start="41:40" pos:end="41:50"><expr pos:start="41:40" pos:end="41:50"><literal type="string" pos:start="41:40" pos:end="41:50">"pool name"</literal></expr></argument>, <argument pos:start="41:53" pos:end="41:54"><expr pos:start="41:53" pos:end="41:54"><operator pos:start="41:53" pos:end="41:53">&amp;</operator><name pos:start="41:54" pos:end="41:54">p</name></expr></argument>, <argument pos:start="41:57" pos:end="41:66"><expr pos:start="41:57" pos:end="41:66"><operator pos:start="41:57" pos:end="41:57">&amp;</operator><name pos:start="41:58" pos:end="41:66">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:18">(<expr pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:17">local_err</name></expr>)</condition> <block pos:start="43:20" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:18">

        <goto pos:start="45:9" pos:end="45:18">goto <name pos:start="45:14" pos:end="45:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:11">(<expr pos:start="49:9" pos:end="49:10"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:10">p</name></expr>)</condition> <block pos:start="49:13" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:18">

        <expr_stmt pos:start="51:9" pos:end="51:50"><expr pos:start="51:9" pos:end="51:49"><call pos:start="51:9" pos:end="51:49"><name pos:start="51:9" pos:end="51:18">error_setg</name><argument_list pos:start="51:19" pos:end="51:49">(<argument pos:start="51:20" pos:end="51:23"><expr pos:start="51:20" pos:end="51:23"><name pos:start="51:20" pos:end="51:23">errp</name></expr></argument>, <argument pos:start="51:26" pos:end="51:48"><expr pos:start="51:26" pos:end="51:48"><literal type="string" pos:start="51:26" pos:end="51:48">"Pool name is required"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:18">goto <name pos:start="53:14" pos:end="53:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:33"><expr pos:start="57:5" pos:end="57:32"><call pos:start="57:5" pos:end="57:32"><name pos:start="57:5" pos:end="57:21">qemu_rbd_unescape</name><argument_list pos:start="57:22" pos:end="57:32">(<argument pos:start="57:23" pos:end="57:31"><expr pos:start="57:23" pos:end="57:31"><name pos:start="57:23" pos:end="57:31">found_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:60"><expr pos:start="59:5" pos:end="59:59"><call pos:start="59:5" pos:end="59:59"><name pos:start="59:5" pos:end="59:13">qdict_put</name><argument_list pos:start="59:14" pos:end="59:59">(<argument pos:start="59:15" pos:end="59:21"><expr pos:start="59:15" pos:end="59:21"><name pos:start="59:15" pos:end="59:21">options</name></expr></argument>, <argument pos:start="59:24" pos:end="59:29"><expr pos:start="59:24" pos:end="59:29"><literal type="string" pos:start="59:24" pos:end="59:29">"pool"</literal></expr></argument>, <argument pos:start="59:32" pos:end="59:58"><expr pos:start="59:32" pos:end="59:58"><call pos:start="59:32" pos:end="59:58"><name pos:start="59:32" pos:end="59:47">qstring_from_str</name><argument_list pos:start="59:48" pos:end="59:58">(<argument pos:start="59:49" pos:end="59:57"><expr pos:start="59:49" pos:end="59:57"><name pos:start="59:49" pos:end="59:57">found_str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="111:5"><if pos:start="63:5" pos:end="95:5">if <condition pos:start="63:8" pos:end="63:23">(<expr pos:start="63:9" pos:end="63:22"><call pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:14">strchr</name><argument_list pos:start="63:15" pos:end="63:22">(<argument pos:start="63:16" pos:end="63:16"><expr pos:start="63:16" pos:end="63:16"><name pos:start="63:16" pos:end="63:16">p</name></expr></argument>, <argument pos:start="63:19" pos:end="63:21"><expr pos:start="63:19" pos:end="63:21"><literal type="char" pos:start="63:19" pos:end="63:21">'@'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:25" pos:end="95:5">{<block_content pos:start="65:9" pos:end="93:68">

        <expr_stmt pos:start="65:9" pos:end="67:74"><expr pos:start="65:9" pos:end="67:73"><name pos:start="65:9" pos:end="65:17">found_str</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <call pos:start="65:21" pos:end="67:73"><name pos:start="65:21" pos:end="65:37">qemu_rbd_next_tok</name><argument_list pos:start="65:38" pos:end="67:73">(<argument pos:start="65:39" pos:end="65:61"><expr pos:start="65:39" pos:end="65:61"><name pos:start="65:39" pos:end="65:61">RBD_MAX_IMAGE_NAME_SIZE</name></expr></argument>, <argument pos:start="65:64" pos:end="65:64"><expr pos:start="65:64" pos:end="65:64"><name pos:start="65:64" pos:end="65:64">p</name></expr></argument>,

                                      <argument pos:start="67:39" pos:end="67:41"><expr pos:start="67:39" pos:end="67:41"><literal type="char" pos:start="67:39" pos:end="67:41">'@'</literal></expr></argument>, <argument pos:start="67:44" pos:end="67:56"><expr pos:start="67:44" pos:end="67:56"><literal type="string" pos:start="67:44" pos:end="67:56">"object name"</literal></expr></argument>, <argument pos:start="67:59" pos:end="67:60"><expr pos:start="67:59" pos:end="67:60"><operator pos:start="67:59" pos:end="67:59">&amp;</operator><name pos:start="67:60" pos:end="67:60">p</name></expr></argument>, <argument pos:start="67:63" pos:end="67:72"><expr pos:start="67:63" pos:end="67:72"><operator pos:start="67:63" pos:end="67:63">&amp;</operator><name pos:start="67:64" pos:end="67:72">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:22">(<expr pos:start="69:13" pos:end="69:21"><name pos:start="69:13" pos:end="69:21">local_err</name></expr>)</condition> <block pos:start="69:24" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:22">

            <goto pos:start="71:13" pos:end="71:22">goto <name pos:start="71:18" pos:end="71:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:37"><expr pos:start="75:9" pos:end="75:36"><call pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:25">qemu_rbd_unescape</name><argument_list pos:start="75:26" pos:end="75:36">(<argument pos:start="75:27" pos:end="75:35"><expr pos:start="75:27" pos:end="75:35"><name pos:start="75:27" pos:end="75:35">found_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:65"><expr pos:start="77:9" pos:end="77:64"><call pos:start="77:9" pos:end="77:64"><name pos:start="77:9" pos:end="77:17">qdict_put</name><argument_list pos:start="77:18" pos:end="77:64">(<argument pos:start="77:19" pos:end="77:25"><expr pos:start="77:19" pos:end="77:25"><name pos:start="77:19" pos:end="77:25">options</name></expr></argument>, <argument pos:start="77:28" pos:end="77:34"><expr pos:start="77:28" pos:end="77:34"><literal type="string" pos:start="77:28" pos:end="77:34">"image"</literal></expr></argument>, <argument pos:start="77:37" pos:end="77:63"><expr pos:start="77:37" pos:end="77:63"><call pos:start="77:37" pos:end="77:63"><name pos:start="77:37" pos:end="77:52">qstring_from_str</name><argument_list pos:start="77:53" pos:end="77:63">(<argument pos:start="77:54" pos:end="77:62"><expr pos:start="77:54" pos:end="77:62"><name pos:start="77:54" pos:end="77:62">found_str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="83:72"><expr pos:start="81:9" pos:end="83:71"><name pos:start="81:9" pos:end="81:17">found_str</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <call pos:start="81:21" pos:end="83:71"><name pos:start="81:21" pos:end="81:37">qemu_rbd_next_tok</name><argument_list pos:start="81:38" pos:end="83:71">(<argument pos:start="81:39" pos:end="81:60"><expr pos:start="81:39" pos:end="81:60"><name pos:start="81:39" pos:end="81:60">RBD_MAX_SNAP_NAME_SIZE</name></expr></argument>, <argument pos:start="81:63" pos:end="81:63"><expr pos:start="81:63" pos:end="81:63"><name pos:start="81:63" pos:end="81:63">p</name></expr></argument>,

                                      <argument pos:start="83:39" pos:end="83:41"><expr pos:start="83:39" pos:end="83:41"><literal type="char" pos:start="83:39" pos:end="83:41">':'</literal></expr></argument>, <argument pos:start="83:44" pos:end="83:54"><expr pos:start="83:44" pos:end="83:54"><literal type="string" pos:start="83:44" pos:end="83:54">"snap name"</literal></expr></argument>, <argument pos:start="83:57" pos:end="83:58"><expr pos:start="83:57" pos:end="83:58"><operator pos:start="83:57" pos:end="83:57">&amp;</operator><name pos:start="83:58" pos:end="83:58">p</name></expr></argument>, <argument pos:start="83:61" pos:end="83:70"><expr pos:start="83:61" pos:end="83:70"><operator pos:start="83:61" pos:end="83:61">&amp;</operator><name pos:start="83:62" pos:end="83:70">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="89:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:22">(<expr pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:21">local_err</name></expr>)</condition> <block pos:start="85:24" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:22">

            <goto pos:start="87:13" pos:end="87:22">goto <name pos:start="87:18" pos:end="87:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:37"><expr pos:start="91:9" pos:end="91:36"><call pos:start="91:9" pos:end="91:36"><name pos:start="91:9" pos:end="91:25">qemu_rbd_unescape</name><argument_list pos:start="91:26" pos:end="91:36">(<argument pos:start="91:27" pos:end="91:35"><expr pos:start="91:27" pos:end="91:35"><name pos:start="91:27" pos:end="91:35">found_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:68"><expr pos:start="93:9" pos:end="93:67"><call pos:start="93:9" pos:end="93:67"><name pos:start="93:9" pos:end="93:17">qdict_put</name><argument_list pos:start="93:18" pos:end="93:67">(<argument pos:start="93:19" pos:end="93:25"><expr pos:start="93:19" pos:end="93:25"><name pos:start="93:19" pos:end="93:25">options</name></expr></argument>, <argument pos:start="93:28" pos:end="93:37"><expr pos:start="93:28" pos:end="93:37"><literal type="string" pos:start="93:28" pos:end="93:37">"snapshot"</literal></expr></argument>, <argument pos:start="93:40" pos:end="93:66"><expr pos:start="93:40" pos:end="93:66"><call pos:start="93:40" pos:end="93:66"><name pos:start="93:40" pos:end="93:55">qstring_from_str</name><argument_list pos:start="93:56" pos:end="93:66">(<argument pos:start="93:57" pos:end="93:65"><expr pos:start="93:57" pos:end="93:65"><name pos:start="93:57" pos:end="93:65">found_str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="111:5">else <block pos:start="95:12" pos:end="111:5">{<block_content pos:start="97:9" pos:end="109:65">

        <expr_stmt pos:start="97:9" pos:end="99:74"><expr pos:start="97:9" pos:end="99:73"><name pos:start="97:9" pos:end="97:17">found_str</name> <operator pos:start="97:19" pos:end="97:19">=</operator> <call pos:start="97:21" pos:end="99:73"><name pos:start="97:21" pos:end="97:37">qemu_rbd_next_tok</name><argument_list pos:start="97:38" pos:end="99:73">(<argument pos:start="97:39" pos:end="97:61"><expr pos:start="97:39" pos:end="97:61"><name pos:start="97:39" pos:end="97:61">RBD_MAX_IMAGE_NAME_SIZE</name></expr></argument>, <argument pos:start="97:64" pos:end="97:64"><expr pos:start="97:64" pos:end="97:64"><name pos:start="97:64" pos:end="97:64">p</name></expr></argument>,

                                      <argument pos:start="99:39" pos:end="99:41"><expr pos:start="99:39" pos:end="99:41"><literal type="char" pos:start="99:39" pos:end="99:41">':'</literal></expr></argument>, <argument pos:start="99:44" pos:end="99:56"><expr pos:start="99:44" pos:end="99:56"><literal type="string" pos:start="99:44" pos:end="99:56">"object name"</literal></expr></argument>, <argument pos:start="99:59" pos:end="99:60"><expr pos:start="99:59" pos:end="99:60"><operator pos:start="99:59" pos:end="99:59">&amp;</operator><name pos:start="99:60" pos:end="99:60">p</name></expr></argument>, <argument pos:start="99:63" pos:end="99:72"><expr pos:start="99:63" pos:end="99:72"><operator pos:start="99:63" pos:end="99:63">&amp;</operator><name pos:start="99:64" pos:end="99:72">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="105:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:22">(<expr pos:start="101:13" pos:end="101:21"><name pos:start="101:13" pos:end="101:21">local_err</name></expr>)</condition> <block pos:start="101:24" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:22">

            <goto pos:start="103:13" pos:end="103:22">goto <name pos:start="103:18" pos:end="103:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:37"><expr pos:start="107:9" pos:end="107:36"><call pos:start="107:9" pos:end="107:36"><name pos:start="107:9" pos:end="107:25">qemu_rbd_unescape</name><argument_list pos:start="107:26" pos:end="107:36">(<argument pos:start="107:27" pos:end="107:35"><expr pos:start="107:27" pos:end="107:35"><name pos:start="107:27" pos:end="107:35">found_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:65"><expr pos:start="109:9" pos:end="109:64"><call pos:start="109:9" pos:end="109:64"><name pos:start="109:9" pos:end="109:17">qdict_put</name><argument_list pos:start="109:18" pos:end="109:64">(<argument pos:start="109:19" pos:end="109:25"><expr pos:start="109:19" pos:end="109:25"><name pos:start="109:19" pos:end="109:25">options</name></expr></argument>, <argument pos:start="109:28" pos:end="109:34"><expr pos:start="109:28" pos:end="109:34"><literal type="string" pos:start="109:28" pos:end="109:34">"image"</literal></expr></argument>, <argument pos:start="109:37" pos:end="109:63"><expr pos:start="109:37" pos:end="109:63"><call pos:start="109:37" pos:end="109:63"><name pos:start="109:37" pos:end="109:52">qstring_from_str</name><argument_list pos:start="109:53" pos:end="109:63">(<argument pos:start="109:54" pos:end="109:62"><expr pos:start="109:54" pos:end="109:62"><name pos:start="109:54" pos:end="109:62">found_str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="113:5" pos:end="117:5"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:11">(<expr pos:start="113:9" pos:end="113:10"><operator pos:start="113:9" pos:end="113:9">!</operator><name pos:start="113:10" pos:end="113:10">p</name></expr>)</condition> <block pos:start="113:13" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:18">

        <goto pos:start="115:9" pos:end="115:18">goto <name pos:start="115:14" pos:end="115:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="123:73"><expr pos:start="121:5" pos:end="123:72"><name pos:start="121:5" pos:end="121:13">found_str</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <call pos:start="121:17" pos:end="123:72"><name pos:start="121:17" pos:end="121:33">qemu_rbd_next_tok</name><argument_list pos:start="121:34" pos:end="123:72">(<argument pos:start="121:35" pos:end="121:56"><expr pos:start="121:35" pos:end="121:56"><name pos:start="121:35" pos:end="121:56">RBD_MAX_CONF_NAME_SIZE</name></expr></argument>, <argument pos:start="121:59" pos:end="121:59"><expr pos:start="121:59" pos:end="121:59"><name pos:start="121:59" pos:end="121:59">p</name></expr></argument>,

                                  <argument pos:start="123:35" pos:end="123:38"><expr pos:start="123:35" pos:end="123:38"><literal type="char" pos:start="123:35" pos:end="123:38">'\0'</literal></expr></argument>, <argument pos:start="123:41" pos:end="123:55"><expr pos:start="123:41" pos:end="123:55"><literal type="string" pos:start="123:41" pos:end="123:55">"configuration"</literal></expr></argument>, <argument pos:start="123:58" pos:end="123:59"><expr pos:start="123:58" pos:end="123:59"><operator pos:start="123:58" pos:end="123:58">&amp;</operator><name pos:start="123:59" pos:end="123:59">p</name></expr></argument>, <argument pos:start="123:62" pos:end="123:71"><expr pos:start="123:62" pos:end="123:71"><operator pos:start="123:62" pos:end="123:62">&amp;</operator><name pos:start="123:63" pos:end="123:71">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="129:5"><if pos:start="125:5" pos:end="129:5">if <condition pos:start="125:8" pos:end="125:18">(<expr pos:start="125:9" pos:end="125:17"><name pos:start="125:9" pos:end="125:17">local_err</name></expr>)</condition> <block pos:start="125:20" pos:end="129:5">{<block_content pos:start="127:9" pos:end="127:18">

        <goto pos:start="127:9" pos:end="127:18">goto <name pos:start="127:14" pos:end="127:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:18"><expr pos:start="133:5" pos:end="133:17"><name pos:start="133:5" pos:end="133:5">p</name> <operator pos:start="133:7" pos:end="133:7">=</operator> <name pos:start="133:9" pos:end="133:17">found_str</name></expr>;</expr_stmt>



    <comment type="block" pos:start="137:5" pos:end="139:78">/* The following are essentially all key/value pairs, and we treat

     * 'id' and 'conf' a bit special.  Key/value pairs may be in any order. */</comment>

    <while pos:start="141:5" pos:end="229:5">while <condition pos:start="141:11" pos:end="141:13">(<expr pos:start="141:12" pos:end="141:12"><name pos:start="141:12" pos:end="141:12">p</name></expr>)</condition> <block pos:start="141:15" pos:end="229:5">{<block_content pos:start="143:9" pos:end="227:9">

        <decl_stmt pos:start="143:9" pos:end="143:27"><decl pos:start="143:9" pos:end="143:18"><type pos:start="143:9" pos:end="143:14"><name pos:start="143:9" pos:end="143:12">char</name> <modifier pos:start="143:14" pos:end="143:14">*</modifier></type><name pos:start="143:15" pos:end="143:18">name</name></decl>, <decl pos:start="143:21" pos:end="143:26"><type ref="prev" pos:start="143:9" pos:end="143:14"><modifier pos:start="143:21" pos:end="143:21">*</modifier></type><name pos:start="143:22" pos:end="143:26">value</name></decl>;</decl_stmt>

        <expr_stmt pos:start="145:9" pos:end="147:74"><expr pos:start="145:9" pos:end="147:73"><name pos:start="145:9" pos:end="145:12">name</name> <operator pos:start="145:14" pos:end="145:14">=</operator> <call pos:start="145:16" pos:end="147:73"><name pos:start="145:16" pos:end="145:32">qemu_rbd_next_tok</name><argument_list pos:start="145:33" pos:end="147:73">(<argument pos:start="145:34" pos:end="145:55"><expr pos:start="145:34" pos:end="145:55"><name pos:start="145:34" pos:end="145:55">RBD_MAX_CONF_NAME_SIZE</name></expr></argument>, <argument pos:start="145:58" pos:end="145:58"><expr pos:start="145:58" pos:end="145:58"><name pos:start="145:58" pos:end="145:58">p</name></expr></argument>,

                                 <argument pos:start="147:34" pos:end="147:36"><expr pos:start="147:34" pos:end="147:36"><literal type="char" pos:start="147:34" pos:end="147:36">'='</literal></expr></argument>, <argument pos:start="147:39" pos:end="147:56"><expr pos:start="147:39" pos:end="147:56"><literal type="string" pos:start="147:39" pos:end="147:56">"conf option name"</literal></expr></argument>, <argument pos:start="147:59" pos:end="147:60"><expr pos:start="147:59" pos:end="147:60"><operator pos:start="147:59" pos:end="147:59">&amp;</operator><name pos:start="147:60" pos:end="147:60">p</name></expr></argument>, <argument pos:start="147:63" pos:end="147:72"><expr pos:start="147:63" pos:end="147:72"><operator pos:start="147:63" pos:end="147:63">&amp;</operator><name pos:start="147:64" pos:end="147:72">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="153:9"><if pos:start="149:9" pos:end="153:9">if <condition pos:start="149:12" pos:end="149:22">(<expr pos:start="149:13" pos:end="149:21"><name pos:start="149:13" pos:end="149:21">local_err</name></expr>)</condition> <block pos:start="149:24" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:18">

            <break pos:start="151:13" pos:end="151:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="157:9" pos:end="163:9"><if pos:start="157:9" pos:end="163:9">if <condition pos:start="157:12" pos:end="157:15">(<expr pos:start="157:13" pos:end="157:14"><operator pos:start="157:13" pos:end="157:13">!</operator><name pos:start="157:14" pos:end="157:14">p</name></expr>)</condition> <block pos:start="157:17" pos:end="163:9">{<block_content pos:start="159:13" pos:end="161:18">

            <expr_stmt pos:start="159:13" pos:end="159:66"><expr pos:start="159:13" pos:end="159:65"><call pos:start="159:13" pos:end="159:65"><name pos:start="159:13" pos:end="159:22">error_setg</name><argument_list pos:start="159:23" pos:end="159:65">(<argument pos:start="159:24" pos:end="159:27"><expr pos:start="159:24" pos:end="159:27"><name pos:start="159:24" pos:end="159:27">errp</name></expr></argument>, <argument pos:start="159:30" pos:end="159:58"><expr pos:start="159:30" pos:end="159:58"><literal type="string" pos:start="159:30" pos:end="159:58">"conf option %s has no value"</literal></expr></argument>, <argument pos:start="159:61" pos:end="159:64"><expr pos:start="159:61" pos:end="159:64"><name pos:start="159:61" pos:end="159:64">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="161:13" pos:end="161:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:32"><expr pos:start="167:9" pos:end="167:31"><call pos:start="167:9" pos:end="167:31"><name pos:start="167:9" pos:end="167:25">qemu_rbd_unescape</name><argument_list pos:start="167:26" pos:end="167:31">(<argument pos:start="167:27" pos:end="167:30"><expr pos:start="167:27" pos:end="167:30"><name pos:start="167:27" pos:end="167:30">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="171:9" pos:end="173:76"><expr pos:start="171:9" pos:end="173:75"><name pos:start="171:9" pos:end="171:13">value</name> <operator pos:start="171:15" pos:end="171:15">=</operator> <call pos:start="171:17" pos:end="173:75"><name pos:start="171:17" pos:end="171:33">qemu_rbd_next_tok</name><argument_list pos:start="171:34" pos:end="173:75">(<argument pos:start="171:35" pos:end="171:55"><expr pos:start="171:35" pos:end="171:55"><name pos:start="171:35" pos:end="171:55">RBD_MAX_CONF_VAL_SIZE</name></expr></argument>, <argument pos:start="171:58" pos:end="171:58"><expr pos:start="171:58" pos:end="171:58"><name pos:start="171:58" pos:end="171:58">p</name></expr></argument>,

                                  <argument pos:start="173:35" pos:end="173:37"><expr pos:start="173:35" pos:end="173:37"><literal type="char" pos:start="173:35" pos:end="173:37">':'</literal></expr></argument>, <argument pos:start="173:40" pos:end="173:58"><expr pos:start="173:40" pos:end="173:58"><literal type="string" pos:start="173:40" pos:end="173:58">"conf option value"</literal></expr></argument>, <argument pos:start="173:61" pos:end="173:62"><expr pos:start="173:61" pos:end="173:62"><operator pos:start="173:61" pos:end="173:61">&amp;</operator><name pos:start="173:62" pos:end="173:62">p</name></expr></argument>, <argument pos:start="173:65" pos:end="173:74"><expr pos:start="173:65" pos:end="173:74"><operator pos:start="173:65" pos:end="173:65">&amp;</operator><name pos:start="173:66" pos:end="173:74">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="175:9" pos:end="179:9"><if pos:start="175:9" pos:end="179:9">if <condition pos:start="175:12" pos:end="175:22">(<expr pos:start="175:13" pos:end="175:21"><name pos:start="175:13" pos:end="175:21">local_err</name></expr>)</condition> <block pos:start="175:24" pos:end="179:9">{<block_content pos:start="177:13" pos:end="177:18">

            <break pos:start="177:13" pos:end="177:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:33"><expr pos:start="181:9" pos:end="181:32"><call pos:start="181:9" pos:end="181:32"><name pos:start="181:9" pos:end="181:25">qemu_rbd_unescape</name><argument_list pos:start="181:26" pos:end="181:32">(<argument pos:start="181:27" pos:end="181:31"><expr pos:start="181:27" pos:end="181:31"><name pos:start="181:27" pos:end="181:31">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="185:9" pos:end="227:9"><if pos:start="185:9" pos:end="189:9">if <condition pos:start="185:12" pos:end="185:34">(<expr pos:start="185:13" pos:end="185:33"><operator pos:start="185:13" pos:end="185:13">!</operator><call pos:start="185:14" pos:end="185:33"><name pos:start="185:14" pos:end="185:19">strcmp</name><argument_list pos:start="185:20" pos:end="185:33">(<argument pos:start="185:21" pos:end="185:24"><expr pos:start="185:21" pos:end="185:24"><name pos:start="185:21" pos:end="185:24">name</name></expr></argument>, <argument pos:start="185:27" pos:end="185:32"><expr pos:start="185:27" pos:end="185:32"><literal type="string" pos:start="185:27" pos:end="185:32">"conf"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="185:36" pos:end="189:9">{<block_content pos:start="187:13" pos:end="187:64">

            <expr_stmt pos:start="187:13" pos:end="187:64"><expr pos:start="187:13" pos:end="187:63"><call pos:start="187:13" pos:end="187:63"><name pos:start="187:13" pos:end="187:21">qdict_put</name><argument_list pos:start="187:22" pos:end="187:63">(<argument pos:start="187:23" pos:end="187:29"><expr pos:start="187:23" pos:end="187:29"><name pos:start="187:23" pos:end="187:29">options</name></expr></argument>, <argument pos:start="187:32" pos:end="187:37"><expr pos:start="187:32" pos:end="187:37"><literal type="string" pos:start="187:32" pos:end="187:37">"conf"</literal></expr></argument>, <argument pos:start="187:40" pos:end="187:62"><expr pos:start="187:40" pos:end="187:62"><call pos:start="187:40" pos:end="187:62"><name pos:start="187:40" pos:end="187:55">qstring_from_str</name><argument_list pos:start="187:56" pos:end="187:62">(<argument pos:start="187:57" pos:end="187:61"><expr pos:start="187:57" pos:end="187:61"><name pos:start="187:57" pos:end="187:61">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="189:11" pos:end="193:9">else if <condition pos:start="189:19" pos:end="189:39">(<expr pos:start="189:20" pos:end="189:38"><operator pos:start="189:20" pos:end="189:20">!</operator><call pos:start="189:21" pos:end="189:38"><name pos:start="189:21" pos:end="189:26">strcmp</name><argument_list pos:start="189:27" pos:end="189:38">(<argument pos:start="189:28" pos:end="189:31"><expr pos:start="189:28" pos:end="189:31"><name pos:start="189:28" pos:end="189:31">name</name></expr></argument>, <argument pos:start="189:34" pos:end="189:37"><expr pos:start="189:34" pos:end="189:37"><literal type="string" pos:start="189:34" pos:end="189:37">"id"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="189:41" pos:end="193:9">{<block_content pos:start="191:13" pos:end="191:65">

            <expr_stmt pos:start="191:13" pos:end="191:65"><expr pos:start="191:13" pos:end="191:64"><call pos:start="191:13" pos:end="191:64"><name pos:start="191:13" pos:end="191:21">qdict_put</name><argument_list pos:start="191:22" pos:end="191:64">(<argument pos:start="191:23" pos:end="191:29"><expr pos:start="191:23" pos:end="191:29"><name pos:start="191:23" pos:end="191:29">options</name></expr></argument>, <argument pos:start="191:32" pos:end="191:37"><expr pos:start="191:32" pos:end="191:37"><literal type="string" pos:start="191:32" pos:end="191:37">"user"</literal></expr></argument> , <argument pos:start="191:41" pos:end="191:63"><expr pos:start="191:41" pos:end="191:63"><call pos:start="191:41" pos:end="191:63"><name pos:start="191:41" pos:end="191:56">qstring_from_str</name><argument_list pos:start="191:57" pos:end="191:63">(<argument pos:start="191:58" pos:end="191:62"><expr pos:start="191:58" pos:end="191:62"><name pos:start="191:58" pos:end="191:62">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="193:11" pos:end="227:9">else <block pos:start="193:16" pos:end="227:9">{<block_content pos:start="205:13" pos:end="225:24">

            <comment type="block" pos:start="195:13" pos:end="203:33">/* FIXME: This is pretty ugly, and not the right way to do this.

             *        These should be contained in a structure, and then

             *        passed explicitly as individual key/value pairs to

             *        rados.  Consider this legacy code that needs to be

             *        updated. */</comment>

            <decl_stmt pos:start="205:13" pos:end="205:52"><decl pos:start="205:13" pos:end="205:51"><type pos:start="205:13" pos:end="205:18"><name pos:start="205:13" pos:end="205:16">char</name> <modifier pos:start="205:18" pos:end="205:18">*</modifier></type><name pos:start="205:19" pos:end="205:21">tmp</name> <init pos:start="205:23" pos:end="205:51">= <expr pos:start="205:25" pos:end="205:51"><call pos:start="205:25" pos:end="205:51"><name pos:start="205:25" pos:end="205:33">g_malloc0</name><argument_list pos:start="205:34" pos:end="205:51">(<argument pos:start="205:35" pos:end="205:50"><expr pos:start="205:35" pos:end="205:50"><name pos:start="205:35" pos:end="205:50">max_keypair_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="block" pos:start="207:13" pos:end="207:75">/* only use a delimiter if it is not the first keypair found */</comment>

            <comment type="block" pos:start="209:13" pos:end="211:25">/* These are sets of unknown key/value pairs we'll pass along

             * to ceph */</comment>

            <if_stmt pos:start="213:13" pos:end="223:13"><if pos:start="213:13" pos:end="219:13">if <condition pos:start="213:16" pos:end="213:28">(<expr pos:start="213:17" pos:end="213:27"><name pos:start="213:17" pos:end="213:27"><name pos:start="213:17" pos:end="213:24">keypairs</name><index pos:start="213:25" pos:end="213:27">[<expr pos:start="213:26" pos:end="213:26"><literal type="number" pos:start="213:26" pos:end="213:26">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="213:30" pos:end="219:13">{<block_content pos:start="215:17" pos:end="217:57">

                <expr_stmt pos:start="215:17" pos:end="215:71"><expr pos:start="215:17" pos:end="215:70"><call pos:start="215:17" pos:end="215:70"><name pos:start="215:17" pos:end="215:24">snprintf</name><argument_list pos:start="215:25" pos:end="215:70">(<argument pos:start="215:26" pos:end="215:28"><expr pos:start="215:26" pos:end="215:28"><name pos:start="215:26" pos:end="215:28">tmp</name></expr></argument>, <argument pos:start="215:31" pos:end="215:46"><expr pos:start="215:31" pos:end="215:46"><name pos:start="215:31" pos:end="215:46">max_keypair_size</name></expr></argument>, <argument pos:start="215:49" pos:end="215:56"><expr pos:start="215:49" pos:end="215:56"><literal type="string" pos:start="215:49" pos:end="215:56">":%s=%s"</literal></expr></argument>, <argument pos:start="215:59" pos:end="215:62"><expr pos:start="215:59" pos:end="215:62"><name pos:start="215:59" pos:end="215:62">name</name></expr></argument>, <argument pos:start="215:65" pos:end="215:69"><expr pos:start="215:65" pos:end="215:69"><name pos:start="215:65" pos:end="215:69">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:57"><expr pos:start="217:17" pos:end="217:56"><call pos:start="217:17" pos:end="217:56"><name pos:start="217:17" pos:end="217:23">pstrcat</name><argument_list pos:start="217:24" pos:end="217:56">(<argument pos:start="217:25" pos:end="217:32"><expr pos:start="217:25" pos:end="217:32"><name pos:start="217:25" pos:end="217:32">keypairs</name></expr></argument>, <argument pos:start="217:35" pos:end="217:50"><expr pos:start="217:35" pos:end="217:50"><name pos:start="217:35" pos:end="217:50">max_keypair_size</name></expr></argument>, <argument pos:start="217:53" pos:end="217:55"><expr pos:start="217:53" pos:end="217:55"><name pos:start="217:53" pos:end="217:55">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="219:15" pos:end="223:13">else <block pos:start="219:20" pos:end="223:13">{<block_content pos:start="221:17" pos:end="221:75">

                <expr_stmt pos:start="221:17" pos:end="221:75"><expr pos:start="221:17" pos:end="221:74"><call pos:start="221:17" pos:end="221:74"><name pos:start="221:17" pos:end="221:24">snprintf</name><argument_list pos:start="221:25" pos:end="221:74">(<argument pos:start="221:26" pos:end="221:33"><expr pos:start="221:26" pos:end="221:33"><name pos:start="221:26" pos:end="221:33">keypairs</name></expr></argument>, <argument pos:start="221:36" pos:end="221:51"><expr pos:start="221:36" pos:end="221:51"><name pos:start="221:36" pos:end="221:51">max_keypair_size</name></expr></argument>, <argument pos:start="221:54" pos:end="221:60"><expr pos:start="221:54" pos:end="221:60"><literal type="string" pos:start="221:54" pos:end="221:60">"%s=%s"</literal></expr></argument>, <argument pos:start="221:63" pos:end="221:66"><expr pos:start="221:63" pos:end="221:66"><name pos:start="221:63" pos:end="221:66">name</name></expr></argument>, <argument pos:start="221:69" pos:end="221:73"><expr pos:start="221:69" pos:end="221:73"><name pos:start="221:69" pos:end="221:73">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:24"><expr pos:start="225:13" pos:end="225:23"><call pos:start="225:13" pos:end="225:23"><name pos:start="225:13" pos:end="225:18">g_free</name><argument_list pos:start="225:19" pos:end="225:23">(<argument pos:start="225:20" pos:end="225:22"><expr pos:start="225:20" pos:end="225:22"><name pos:start="225:20" pos:end="225:22">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="233:5" pos:end="237:5"><if pos:start="233:5" pos:end="237:5">if <condition pos:start="233:8" pos:end="233:20">(<expr pos:start="233:9" pos:end="233:19"><name pos:start="233:9" pos:end="233:19"><name pos:start="233:9" pos:end="233:16">keypairs</name><index pos:start="233:17" pos:end="233:19">[<expr pos:start="233:18" pos:end="233:18"><literal type="number" pos:start="233:18" pos:end="233:18">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="233:22" pos:end="237:5">{<block_content pos:start="235:9" pos:end="235:73">

        <expr_stmt pos:start="235:9" pos:end="235:73"><expr pos:start="235:9" pos:end="235:72"><call pos:start="235:9" pos:end="235:72"><name pos:start="235:9" pos:end="235:17">qdict_put</name><argument_list pos:start="235:18" pos:end="235:72">(<argument pos:start="235:19" pos:end="235:25"><expr pos:start="235:19" pos:end="235:25"><name pos:start="235:19" pos:end="235:25">options</name></expr></argument>, <argument pos:start="235:28" pos:end="235:43"><expr pos:start="235:28" pos:end="235:43"><literal type="string" pos:start="235:28" pos:end="235:43">"keyvalue-pairs"</literal></expr></argument>, <argument pos:start="235:46" pos:end="235:71"><expr pos:start="235:46" pos:end="235:71"><call pos:start="235:46" pos:end="235:71"><name pos:start="235:46" pos:end="235:61">qstring_from_str</name><argument_list pos:start="235:62" pos:end="235:71">(<argument pos:start="235:63" pos:end="235:70"><expr pos:start="235:63" pos:end="235:70"><name pos:start="235:63" pos:end="235:70">keypairs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>





<label pos:start="243:1" pos:end="243:5"><name pos:start="243:1" pos:end="243:4">done</name>:</label>

    <if_stmt pos:start="245:5" pos:end="249:5"><if pos:start="245:5" pos:end="249:5">if <condition pos:start="245:8" pos:end="245:18">(<expr pos:start="245:9" pos:end="245:17"><name pos:start="245:9" pos:end="245:17">local_err</name></expr>)</condition> <block pos:start="245:20" pos:end="249:5">{<block_content pos:start="247:9" pos:end="247:41">

        <expr_stmt pos:start="247:9" pos:end="247:41"><expr pos:start="247:9" pos:end="247:40"><call pos:start="247:9" pos:end="247:40"><name pos:start="247:9" pos:end="247:23">error_propagate</name><argument_list pos:start="247:24" pos:end="247:40">(<argument pos:start="247:25" pos:end="247:28"><expr pos:start="247:25" pos:end="247:28"><name pos:start="247:25" pos:end="247:28">errp</name></expr></argument>, <argument pos:start="247:31" pos:end="247:39"><expr pos:start="247:31" pos:end="247:39"><name pos:start="247:31" pos:end="247:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:16"><expr pos:start="251:5" pos:end="251:15"><call pos:start="251:5" pos:end="251:15"><name pos:start="251:5" pos:end="251:10">g_free</name><argument_list pos:start="251:11" pos:end="251:15">(<argument pos:start="251:12" pos:end="251:14"><expr pos:start="251:12" pos:end="251:14"><name pos:start="251:12" pos:end="251:14">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:21"><expr pos:start="253:5" pos:end="253:20"><call pos:start="253:5" pos:end="253:20"><name pos:start="253:5" pos:end="253:10">g_free</name><argument_list pos:start="253:11" pos:end="253:20">(<argument pos:start="253:12" pos:end="253:19"><expr pos:start="253:12" pos:end="253:19"><name pos:start="253:12" pos:end="253:19">keypairs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="255:5" pos:end="255:11">return;</return>

</block_content>}</block></function>
</unit>
