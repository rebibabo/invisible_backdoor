<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1052.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:8">xmit_seg</name><argument_list pos:start="1:9" pos:end="1:23">(<argument pos:start="1:10" pos:end="1:22">E1000State *s</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:27">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint16_t</name></type> <name pos:start="5:14" pos:end="5:16">len</name></decl>, <decl pos:start="5:19" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:12"><modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">sp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:23">frames</name> <init pos:start="7:25" pos:end="7:42">= <expr pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:31">tx</name><operator pos:start="7:32" pos:end="7:32">.</operator><name pos:start="7:33" pos:end="7:42">tso_frames</name></name></expr></init></decl>, <decl pos:start="7:45" pos:end="7:47"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:45" pos:end="7:47">css</name></decl>, <decl pos:start="7:50" pos:end="7:54"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:50" pos:end="7:54">sofar</name></decl>, <decl pos:start="7:57" pos:end="7:57"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:57" pos:end="7:57">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:19">e1000_tx</name></name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:23">tp</name> <init pos:start="9:25" pos:end="9:32">= <expr pos:start="9:27" pos:end="9:32"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:32"><name pos:start="9:28" pos:end="9:28">s</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:32">tx</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="71:5"><if pos:start="13:5" pos:end="71:5">if <condition pos:start="13:8" pos:end="13:29">(<expr pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:10">tp</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:15">tse</name></name> <operator pos:start="13:17" pos:end="13:18">&amp;&amp;</operator> <name pos:start="13:20" pos:end="13:28"><name pos:start="13:20" pos:end="13:21">tp</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:28">cptse</name></name></expr>)</condition> <block pos:start="13:31" pos:end="71:5">{<block_content pos:start="15:9" pos:end="69:25">

        <expr_stmt pos:start="15:9" pos:end="15:24"><expr pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:11">css</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:23"><name pos:start="15:15" pos:end="15:16">tp</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:23">ipcss</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="19:38"><expr pos:start="17:9" pos:end="19:37"><call pos:start="17:9" pos:end="19:37"><name pos:start="17:9" pos:end="17:14">DBGOUT</name><argument_list pos:start="17:15" pos:end="19:37">(<argument pos:start="17:16" pos:end="17:20"><expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:20">TXSUM</name></expr></argument>, <argument pos:start="17:23" pos:end="17:52"><expr pos:start="17:23" pos:end="17:52"><literal type="string" pos:start="17:23" pos:end="17:52">"frames %d size %d ipcss %d\n"</literal></expr></argument>,

               <argument pos:start="19:16" pos:end="19:21"><expr pos:start="19:16" pos:end="19:21"><name pos:start="19:16" pos:end="19:21">frames</name></expr></argument>, <argument pos:start="19:24" pos:end="19:31"><expr pos:start="19:24" pos:end="19:31"><name pos:start="19:24" pos:end="19:31"><name pos:start="19:24" pos:end="19:25">tp</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:31">size</name></name></expr></argument>, <argument pos:start="19:34" pos:end="19:36"><expr pos:start="19:34" pos:end="19:36"><name pos:start="19:34" pos:end="19:36">css</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="35:42"><if pos:start="21:9" pos:end="31:9">if <condition pos:start="21:12" pos:end="21:19">(<expr pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:14">tp</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:18">ip</name></name></expr>)</condition> <block pos:start="21:21" pos:end="31:9">{<block_content pos:start="23:13" pos:end="29:77">		<comment type="line" pos:start="21:33" pos:end="21:39">// IPv4</comment>

            <expr_stmt pos:start="23:13" pos:end="25:42"><expr pos:start="23:13" pos:end="25:41"><call pos:start="23:13" pos:end="25:41"><name pos:start="23:13" pos:end="23:25">cpu_to_be16wu</name><argument_list pos:start="23:26" pos:end="25:41">(<argument pos:start="23:27" pos:end="23:54"><expr pos:start="23:27" pos:end="23:54"><operator pos:start="23:27" pos:end="23:27">(</operator><name pos:start="23:28" pos:end="23:35">uint16_t</name> <operator pos:start="23:37" pos:end="23:37">*</operator><operator pos:start="23:38" pos:end="23:38">)</operator><operator pos:start="23:39" pos:end="23:39">(</operator><name pos:start="23:40" pos:end="23:47"><name pos:start="23:40" pos:end="23:41">tp</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:47">data</name></name><operator pos:start="23:48" pos:end="23:48">+</operator><name pos:start="23:49" pos:end="23:51">css</name><operator pos:start="23:52" pos:end="23:52">+</operator><literal type="number" pos:start="23:53" pos:end="23:53">2</literal><operator pos:start="23:54" pos:end="23:54">)</operator></expr></argument>,

                          <argument pos:start="25:27" pos:end="25:40"><expr pos:start="25:27" pos:end="25:40"><name pos:start="25:27" pos:end="25:34"><name pos:start="25:27" pos:end="25:28">tp</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:34">size</name></name> <operator pos:start="25:36" pos:end="25:36">-</operator> <name pos:start="25:38" pos:end="25:40">css</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="29:77"><expr pos:start="27:13" pos:end="29:76"><call pos:start="27:13" pos:end="29:76"><name pos:start="27:13" pos:end="27:25">cpu_to_be16wu</name><argument_list pos:start="27:26" pos:end="29:76">(<argument pos:start="27:27" pos:end="27:54"><expr pos:start="27:27" pos:end="27:54"><operator pos:start="27:27" pos:end="27:27">(</operator><name pos:start="27:28" pos:end="27:35">uint16_t</name> <operator pos:start="27:37" pos:end="27:37">*</operator><operator pos:start="27:38" pos:end="27:38">)</operator><operator pos:start="27:39" pos:end="27:39">(</operator><name pos:start="27:40" pos:end="27:47"><name pos:start="27:40" pos:end="27:41">tp</name><operator pos:start="27:42" pos:end="27:43">-&gt;</operator><name pos:start="27:44" pos:end="27:47">data</name></name><operator pos:start="27:48" pos:end="27:48">+</operator><name pos:start="27:49" pos:end="27:51">css</name><operator pos:start="27:52" pos:end="27:52">+</operator><literal type="number" pos:start="27:53" pos:end="27:53">4</literal><operator pos:start="27:54" pos:end="27:54">)</operator></expr></argument>,

                          <argument pos:start="29:27" pos:end="29:75"><expr pos:start="29:27" pos:end="29:75"><call pos:start="29:27" pos:end="29:68"><name pos:start="29:27" pos:end="29:38">be16_to_cpup</name><argument_list pos:start="29:39" pos:end="29:68">(<argument pos:start="29:40" pos:end="29:67"><expr pos:start="29:40" pos:end="29:67"><operator pos:start="29:40" pos:end="29:40">(</operator><name pos:start="29:41" pos:end="29:48">uint16_t</name> <operator pos:start="29:50" pos:end="29:50">*</operator><operator pos:start="29:51" pos:end="29:51">)</operator><operator pos:start="29:52" pos:end="29:52">(</operator><name pos:start="29:53" pos:end="29:60"><name pos:start="29:53" pos:end="29:54">tp</name><operator pos:start="29:55" pos:end="29:56">-&gt;</operator><name pos:start="29:57" pos:end="29:60">data</name></name><operator pos:start="29:61" pos:end="29:61">+</operator><name pos:start="29:62" pos:end="29:64">css</name><operator pos:start="29:65" pos:end="29:65">+</operator><literal type="number" pos:start="29:66" pos:end="29:66">4</literal><operator pos:start="29:67" pos:end="29:67">)</operator></expr></argument>)</argument_list></call><operator pos:start="29:69" pos:end="29:69">+</operator><name pos:start="29:70" pos:end="29:75">frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="35:42">else<block type="pseudo" pos:start="33:13" pos:end="35:42"><block_content pos:start="33:13" pos:end="35:42">			<comment type="line" pos:start="31:33" pos:end="31:39">// IPv6</comment>

            <expr_stmt pos:start="33:13" pos:end="35:42"><expr pos:start="33:13" pos:end="35:41"><call pos:start="33:13" pos:end="35:41"><name pos:start="33:13" pos:end="33:25">cpu_to_be16wu</name><argument_list pos:start="33:26" pos:end="35:41">(<argument pos:start="33:27" pos:end="33:54"><expr pos:start="33:27" pos:end="33:54"><operator pos:start="33:27" pos:end="33:27">(</operator><name pos:start="33:28" pos:end="33:35">uint16_t</name> <operator pos:start="33:37" pos:end="33:37">*</operator><operator pos:start="33:38" pos:end="33:38">)</operator><operator pos:start="33:39" pos:end="33:39">(</operator><name pos:start="33:40" pos:end="33:47"><name pos:start="33:40" pos:end="33:41">tp</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:47">data</name></name><operator pos:start="33:48" pos:end="33:48">+</operator><name pos:start="33:49" pos:end="33:51">css</name><operator pos:start="33:52" pos:end="33:52">+</operator><literal type="number" pos:start="33:53" pos:end="33:53">4</literal><operator pos:start="33:54" pos:end="33:54">)</operator></expr></argument>,

                          <argument pos:start="35:27" pos:end="35:40"><expr pos:start="35:27" pos:end="35:40"><name pos:start="35:27" pos:end="35:34"><name pos:start="35:27" pos:end="35:28">tp</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:34">size</name></name> <operator pos:start="35:36" pos:end="35:36">-</operator> <name pos:start="35:38" pos:end="35:40">css</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:11">css</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:23"><name pos:start="37:15" pos:end="37:16">tp</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">tucss</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:29"><expr pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:11">len</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:22"><name pos:start="39:15" pos:end="39:16">tp</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:22">size</name></name> <operator pos:start="39:24" pos:end="39:24">-</operator> <name pos:start="39:26" pos:end="39:28">css</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:69"><expr pos:start="41:9" pos:end="41:68"><call pos:start="41:9" pos:end="41:68"><name pos:start="41:9" pos:end="41:14">DBGOUT</name><argument_list pos:start="41:15" pos:end="41:68">(<argument pos:start="41:16" pos:end="41:20"><expr pos:start="41:16" pos:end="41:20"><name pos:start="41:16" pos:end="41:20">TXSUM</name></expr></argument>, <argument pos:start="41:23" pos:end="41:48"><expr pos:start="41:23" pos:end="41:48"><literal type="string" pos:start="41:23" pos:end="41:48">"tcp %d tucss %d len %d\n"</literal></expr></argument>, <argument pos:start="41:51" pos:end="41:57"><expr pos:start="41:51" pos:end="41:57"><name pos:start="41:51" pos:end="41:57"><name pos:start="41:51" pos:end="41:52">tp</name><operator pos:start="41:53" pos:end="41:54">-&gt;</operator><name pos:start="41:55" pos:end="41:57">tcp</name></name></expr></argument>, <argument pos:start="41:60" pos:end="41:62"><expr pos:start="41:60" pos:end="41:62"><name pos:start="41:60" pos:end="41:62">css</name></expr></argument>, <argument pos:start="41:65" pos:end="41:67"><expr pos:start="41:65" pos:end="41:67"><name pos:start="41:65" pos:end="41:67">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="57:61"><if pos:start="43:9" pos:end="55:9">if <condition pos:start="43:12" pos:end="43:20">(<expr pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:14">tp</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:19">tcp</name></name></expr>)</condition> <block pos:start="43:22" pos:end="55:9">{<block_content pos:start="45:13" pos:end="53:41">

            <expr_stmt pos:start="45:13" pos:end="45:37"><expr pos:start="45:13" pos:end="45:36"><name pos:start="45:13" pos:end="45:17">sofar</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:26">frames</name> <operator pos:start="45:28" pos:end="45:28">*</operator> <name pos:start="45:30" pos:end="45:36"><name pos:start="45:30" pos:end="45:31">tp</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:36">mss</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="49:67"><expr pos:start="47:13" pos:end="49:66"><call pos:start="47:13" pos:end="49:66"><name pos:start="47:13" pos:end="47:25">cpu_to_be32wu</name><argument_list pos:start="47:26" pos:end="49:66">(<argument pos:start="47:27" pos:end="47:54"><expr pos:start="47:27" pos:end="47:54"><operator pos:start="47:27" pos:end="47:27">(</operator><name pos:start="47:28" pos:end="47:35">uint32_t</name> <operator pos:start="47:37" pos:end="47:37">*</operator><operator pos:start="47:38" pos:end="47:38">)</operator><operator pos:start="47:39" pos:end="47:39">(</operator><name pos:start="47:40" pos:end="47:47"><name pos:start="47:40" pos:end="47:41">tp</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:47">data</name></name><operator pos:start="47:48" pos:end="47:48">+</operator><name pos:start="47:49" pos:end="47:51">css</name><operator pos:start="47:52" pos:end="47:52">+</operator><literal type="number" pos:start="47:53" pos:end="47:53">4</literal><operator pos:start="47:54" pos:end="47:54">)</operator></expr></argument>,	<comment type="line" pos:start="47:57" pos:end="47:62">// seq</comment>

                <argument pos:start="49:17" pos:end="49:65"><expr pos:start="49:17" pos:end="49:65"><call pos:start="49:17" pos:end="49:59"><name pos:start="49:17" pos:end="49:29">be32_to_cpupu</name><argument_list pos:start="49:30" pos:end="49:59">(<argument pos:start="49:31" pos:end="49:58"><expr pos:start="49:31" pos:end="49:58"><operator pos:start="49:31" pos:end="49:31">(</operator><name pos:start="49:32" pos:end="49:39">uint32_t</name> <operator pos:start="49:41" pos:end="49:41">*</operator><operator pos:start="49:42" pos:end="49:42">)</operator><operator pos:start="49:43" pos:end="49:43">(</operator><name pos:start="49:44" pos:end="49:51"><name pos:start="49:44" pos:end="49:45">tp</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:51">data</name></name><operator pos:start="49:52" pos:end="49:52">+</operator><name pos:start="49:53" pos:end="49:55">css</name><operator pos:start="49:56" pos:end="49:56">+</operator><literal type="number" pos:start="49:57" pos:end="49:57">4</literal><operator pos:start="49:58" pos:end="49:58">)</operator></expr></argument>)</argument_list></call><operator pos:start="49:60" pos:end="49:60">+</operator><name pos:start="49:61" pos:end="49:65">sofar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="53:41"><if pos:start="51:13" pos:end="53:41">if <condition pos:start="51:16" pos:end="51:45">(<expr pos:start="51:17" pos:end="51:44"><name pos:start="51:17" pos:end="51:26"><name pos:start="51:17" pos:end="51:18">tp</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:26">paylen</name></name> <operator pos:start="51:28" pos:end="51:28">-</operator> <name pos:start="51:30" pos:end="51:34">sofar</name> <operator pos:start="51:36" pos:end="51:36">&gt;</operator> <name pos:start="51:38" pos:end="51:44"><name pos:start="51:38" pos:end="51:39">tp</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:44">mss</name></name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:41"><block_content pos:start="53:17" pos:end="53:41">

                <expr_stmt pos:start="53:17" pos:end="53:41"><expr pos:start="53:17" pos:end="53:40"><name pos:start="53:17" pos:end="53:34"><name pos:start="53:17" pos:end="53:18">tp</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:24">data</name><index pos:start="53:25" pos:end="53:34">[<expr pos:start="53:26" pos:end="53:33"><name pos:start="53:26" pos:end="53:28">css</name> <operator pos:start="53:30" pos:end="53:30">+</operator> <literal type="number" pos:start="53:32" pos:end="53:33">13</literal></expr>]</index></name> <operator pos:start="53:36" pos:end="53:37">&amp;=</operator> <operator pos:start="53:39" pos:end="53:39">~</operator><literal type="number" pos:start="53:40" pos:end="53:40">9</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>		<comment type="line" pos:start="53:57" pos:end="53:67">// PSH, FIN</comment>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="57:61">else<block type="pseudo" pos:start="57:13" pos:end="57:61"><block_content pos:start="57:13" pos:end="57:61">	<comment type="line" pos:start="55:17" pos:end="55:22">// UDP</comment>

            <expr_stmt pos:start="57:13" pos:end="57:61"><expr pos:start="57:13" pos:end="57:60"><call pos:start="57:13" pos:end="57:60"><name pos:start="57:13" pos:end="57:25">cpu_to_be16wu</name><argument_list pos:start="57:26" pos:end="57:60">(<argument pos:start="57:27" pos:end="57:54"><expr pos:start="57:27" pos:end="57:54"><operator pos:start="57:27" pos:end="57:27">(</operator><name pos:start="57:28" pos:end="57:35">uint16_t</name> <operator pos:start="57:37" pos:end="57:37">*</operator><operator pos:start="57:38" pos:end="57:38">)</operator><operator pos:start="57:39" pos:end="57:39">(</operator><name pos:start="57:40" pos:end="57:47"><name pos:start="57:40" pos:end="57:41">tp</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:47">data</name></name><operator pos:start="57:48" pos:end="57:48">+</operator><name pos:start="57:49" pos:end="57:51">css</name><operator pos:start="57:52" pos:end="57:52">+</operator><literal type="number" pos:start="57:53" pos:end="57:53">4</literal><operator pos:start="57:54" pos:end="57:54">)</operator></expr></argument>, <argument pos:start="57:57" pos:end="57:59"><expr pos:start="57:57" pos:end="57:59"><name pos:start="57:57" pos:end="57:59">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="67:9">if <condition pos:start="59:12" pos:end="59:50">(<expr pos:start="59:13" pos:end="59:49"><name pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:14">tp</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:26">sum_needed</name></name> <operator pos:start="59:28" pos:end="59:28">&amp;</operator> <name pos:start="59:30" pos:end="59:49">E1000_TXD_POPTS_TXSM</name></expr>)</condition> <block pos:start="59:52" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:54">

            <comment type="line" pos:start="61:13" pos:end="61:67">// add pseudo-header length before checksum calculation</comment>

            <expr_stmt pos:start="63:13" pos:end="63:52"><expr pos:start="63:13" pos:end="63:51"><name pos:start="63:13" pos:end="63:14">sp</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <operator pos:start="63:18" pos:end="63:18">(</operator><name pos:start="63:19" pos:end="63:26">uint16_t</name> <operator pos:start="63:28" pos:end="63:28">*</operator><operator pos:start="63:29" pos:end="63:29">)</operator><operator pos:start="63:30" pos:end="63:30">(</operator><name pos:start="63:31" pos:end="63:38"><name pos:start="63:31" pos:end="63:32">tp</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:38">data</name></name> <operator pos:start="63:40" pos:end="63:40">+</operator> <name pos:start="63:42" pos:end="63:50"><name pos:start="63:42" pos:end="63:43">tp</name><operator pos:start="63:44" pos:end="63:45">-&gt;</operator><name pos:start="63:46" pos:end="63:50">tucso</name></name><operator pos:start="63:51" pos:end="63:51">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:54"><expr pos:start="65:13" pos:end="65:53"><call pos:start="65:13" pos:end="65:53"><name pos:start="65:13" pos:end="65:25">cpu_to_be16wu</name><argument_list pos:start="65:26" pos:end="65:53">(<argument pos:start="65:27" pos:end="65:28"><expr pos:start="65:27" pos:end="65:28"><name pos:start="65:27" pos:end="65:28">sp</name></expr></argument>, <argument pos:start="65:31" pos:end="65:52"><expr pos:start="65:31" pos:end="65:52"><call pos:start="65:31" pos:end="65:46"><name pos:start="65:31" pos:end="65:42">be16_to_cpup</name><argument_list pos:start="65:43" pos:end="65:46">(<argument pos:start="65:44" pos:end="65:45"><expr pos:start="65:44" pos:end="65:45"><name pos:start="65:44" pos:end="65:45">sp</name></expr></argument>)</argument_list></call> <operator pos:start="65:48" pos:end="65:48">+</operator> <name pos:start="65:50" pos:end="65:52">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:25"><expr pos:start="69:9" pos:end="69:24"><name pos:start="69:9" pos:end="69:22"><name pos:start="69:9" pos:end="69:10">tp</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:22">tso_frames</name></name><operator pos:start="69:23" pos:end="69:24">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="77:68"><if pos:start="75:5" pos:end="77:68">if <condition pos:start="75:8" pos:end="75:46">(<expr pos:start="75:9" pos:end="75:45"><name pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:10">tp</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:22">sum_needed</name></name> <operator pos:start="75:24" pos:end="75:24">&amp;</operator> <name pos:start="75:26" pos:end="75:45">E1000_TXD_POPTS_TXSM</name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:68"><block_content pos:start="77:9" pos:end="77:68">

        <expr_stmt pos:start="77:9" pos:end="77:68"><expr pos:start="77:9" pos:end="77:67"><call pos:start="77:9" pos:end="77:67"><name pos:start="77:9" pos:end="77:14">putsum</name><argument_list pos:start="77:15" pos:end="77:67">(<argument pos:start="77:16" pos:end="77:23"><expr pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:17">tp</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:23">data</name></name></expr></argument>, <argument pos:start="77:26" pos:end="77:33"><expr pos:start="77:26" pos:end="77:33"><name pos:start="77:26" pos:end="77:33"><name pos:start="77:26" pos:end="77:27">tp</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:33">size</name></name></expr></argument>, <argument pos:start="77:36" pos:end="77:44"><expr pos:start="77:36" pos:end="77:44"><name pos:start="77:36" pos:end="77:44"><name pos:start="77:36" pos:end="77:37">tp</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:44">tucso</name></name></expr></argument>, <argument pos:start="77:47" pos:end="77:55"><expr pos:start="77:47" pos:end="77:55"><name pos:start="77:47" pos:end="77:55"><name pos:start="77:47" pos:end="77:48">tp</name><operator pos:start="77:49" pos:end="77:50">-&gt;</operator><name pos:start="77:51" pos:end="77:55">tucss</name></name></expr></argument>, <argument pos:start="77:58" pos:end="77:66"><expr pos:start="77:58" pos:end="77:66"><name pos:start="77:58" pos:end="77:66"><name pos:start="77:58" pos:end="77:59">tp</name><operator pos:start="77:60" pos:end="77:61">-&gt;</operator><name pos:start="77:62" pos:end="77:66">tucse</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="79:5" pos:end="81:68"><if pos:start="79:5" pos:end="81:68">if <condition pos:start="79:8" pos:end="79:46">(<expr pos:start="79:9" pos:end="79:45"><name pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:10">tp</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:22">sum_needed</name></name> <operator pos:start="79:24" pos:end="79:24">&amp;</operator> <name pos:start="79:26" pos:end="79:45">E1000_TXD_POPTS_IXSM</name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:68"><block_content pos:start="81:9" pos:end="81:68">

        <expr_stmt pos:start="81:9" pos:end="81:68"><expr pos:start="81:9" pos:end="81:67"><call pos:start="81:9" pos:end="81:67"><name pos:start="81:9" pos:end="81:14">putsum</name><argument_list pos:start="81:15" pos:end="81:67">(<argument pos:start="81:16" pos:end="81:23"><expr pos:start="81:16" pos:end="81:23"><name pos:start="81:16" pos:end="81:23"><name pos:start="81:16" pos:end="81:17">tp</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:23">data</name></name></expr></argument>, <argument pos:start="81:26" pos:end="81:33"><expr pos:start="81:26" pos:end="81:33"><name pos:start="81:26" pos:end="81:33"><name pos:start="81:26" pos:end="81:27">tp</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:33">size</name></name></expr></argument>, <argument pos:start="81:36" pos:end="81:44"><expr pos:start="81:36" pos:end="81:44"><name pos:start="81:36" pos:end="81:44"><name pos:start="81:36" pos:end="81:37">tp</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:44">ipcso</name></name></expr></argument>, <argument pos:start="81:47" pos:end="81:55"><expr pos:start="81:47" pos:end="81:55"><name pos:start="81:47" pos:end="81:55"><name pos:start="81:47" pos:end="81:48">tp</name><operator pos:start="81:49" pos:end="81:50">-&gt;</operator><name pos:start="81:51" pos:end="81:55">ipcss</name></name></expr></argument>, <argument pos:start="81:58" pos:end="81:66"><expr pos:start="81:58" pos:end="81:66"><name pos:start="81:58" pos:end="81:66"><name pos:start="81:58" pos:end="81:59">tp</name><operator pos:start="81:60" pos:end="81:61">-&gt;</operator><name pos:start="81:62" pos:end="81:66">ipcse</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="83:5" pos:end="95:58"><if pos:start="83:5" pos:end="93:5">if <condition pos:start="83:8" pos:end="83:24">(<expr pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:10">tp</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:23">vlan_needed</name></name></expr>)</condition> <block pos:start="83:26" pos:end="93:5">{<block_content pos:start="85:9" pos:end="91:62">

        <expr_stmt pos:start="85:9" pos:end="85:39"><expr pos:start="85:9" pos:end="85:38"><call pos:start="85:9" pos:end="85:38"><name pos:start="85:9" pos:end="85:15">memmove</name><argument_list pos:start="85:16" pos:end="85:38">(<argument pos:start="85:17" pos:end="85:24"><expr pos:start="85:17" pos:end="85:24"><name pos:start="85:17" pos:end="85:24"><name pos:start="85:17" pos:end="85:18">tp</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:24">vlan</name></name></expr></argument>, <argument pos:start="85:27" pos:end="85:34"><expr pos:start="85:27" pos:end="85:34"><name pos:start="85:27" pos:end="85:34"><name pos:start="85:27" pos:end="85:28">tp</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:34">data</name></name></expr></argument>, <argument pos:start="85:37" pos:end="85:37"><expr pos:start="85:37" pos:end="85:37"><literal type="number" pos:start="85:37" pos:end="85:37">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:43"><expr pos:start="87:9" pos:end="87:42"><call pos:start="87:9" pos:end="87:42"><name pos:start="87:9" pos:end="87:15">memmove</name><argument_list pos:start="87:16" pos:end="87:42">(<argument pos:start="87:17" pos:end="87:24"><expr pos:start="87:17" pos:end="87:24"><name pos:start="87:17" pos:end="87:24"><name pos:start="87:17" pos:end="87:18">tp</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:24">data</name></name></expr></argument>, <argument pos:start="87:27" pos:end="87:38"><expr pos:start="87:27" pos:end="87:38"><name pos:start="87:27" pos:end="87:34"><name pos:start="87:27" pos:end="87:28">tp</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:34">data</name></name> <operator pos:start="87:36" pos:end="87:36">+</operator> <literal type="number" pos:start="87:38" pos:end="87:38">4</literal></expr></argument>, <argument pos:start="87:41" pos:end="87:41"><expr pos:start="87:41" pos:end="87:41"><literal type="number" pos:start="87:41" pos:end="87:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:49"><expr pos:start="89:9" pos:end="89:48"><call pos:start="89:9" pos:end="89:48"><name pos:start="89:9" pos:end="89:14">memcpy</name><argument_list pos:start="89:15" pos:end="89:48">(<argument pos:start="89:16" pos:end="89:27"><expr pos:start="89:16" pos:end="89:27"><name pos:start="89:16" pos:end="89:23"><name pos:start="89:16" pos:end="89:17">tp</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:23">data</name></name> <operator pos:start="89:25" pos:end="89:25">+</operator> <literal type="number" pos:start="89:27" pos:end="89:27">8</literal></expr></argument>, <argument pos:start="89:30" pos:end="89:44"><expr pos:start="89:30" pos:end="89:44"><name pos:start="89:30" pos:end="89:44"><name pos:start="89:30" pos:end="89:31">tp</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:44">vlan_header</name></name></expr></argument>, <argument pos:start="89:47" pos:end="89:47"><expr pos:start="89:47" pos:end="89:47"><literal type="number" pos:start="89:47" pos:end="89:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:62"><expr pos:start="91:9" pos:end="91:61"><call pos:start="91:9" pos:end="91:61"><name pos:start="91:9" pos:end="91:24">qemu_send_packet</name><argument_list pos:start="91:25" pos:end="91:61">(<argument pos:start="91:26" pos:end="91:36"><expr pos:start="91:26" pos:end="91:36"><operator pos:start="91:26" pos:end="91:26">&amp;</operator><name pos:start="91:27" pos:end="91:36"><name pos:start="91:27" pos:end="91:27">s</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:32">nic</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:36">nc</name></name></expr></argument>, <argument pos:start="91:39" pos:end="91:46"><expr pos:start="91:39" pos:end="91:46"><name pos:start="91:39" pos:end="91:46"><name pos:start="91:39" pos:end="91:40">tp</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:46">vlan</name></name></expr></argument>, <argument pos:start="91:49" pos:end="91:60"><expr pos:start="91:49" pos:end="91:60"><name pos:start="91:49" pos:end="91:56"><name pos:start="91:49" pos:end="91:50">tp</name><operator pos:start="91:51" pos:end="91:52">-&gt;</operator><name pos:start="91:53" pos:end="91:56">size</name></name> <operator pos:start="91:58" pos:end="91:58">+</operator> <literal type="number" pos:start="91:60" pos:end="91:60">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="95:58">else<block type="pseudo" pos:start="95:9" pos:end="95:58"><block_content pos:start="95:9" pos:end="95:58">

        <expr_stmt pos:start="95:9" pos:end="95:58"><expr pos:start="95:9" pos:end="95:57"><call pos:start="95:9" pos:end="95:57"><name pos:start="95:9" pos:end="95:24">qemu_send_packet</name><argument_list pos:start="95:25" pos:end="95:57">(<argument pos:start="95:26" pos:end="95:36"><expr pos:start="95:26" pos:end="95:36"><operator pos:start="95:26" pos:end="95:26">&amp;</operator><name pos:start="95:27" pos:end="95:36"><name pos:start="95:27" pos:end="95:27">s</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:32">nic</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:36">nc</name></name></expr></argument>, <argument pos:start="95:39" pos:end="95:46"><expr pos:start="95:39" pos:end="95:46"><name pos:start="95:39" pos:end="95:46"><name pos:start="95:39" pos:end="95:40">tp</name><operator pos:start="95:41" pos:end="95:42">-&gt;</operator><name pos:start="95:43" pos:end="95:46">data</name></name></expr></argument>, <argument pos:start="95:49" pos:end="95:56"><expr pos:start="95:49" pos:end="95:56"><name pos:start="95:49" pos:end="95:56"><name pos:start="95:49" pos:end="95:50">tp</name><operator pos:start="95:51" pos:end="95:52">-&gt;</operator><name pos:start="95:53" pos:end="95:56">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:22"><expr pos:start="97:5" pos:end="97:21"><name pos:start="97:5" pos:end="97:19"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:14">mac_reg</name><index pos:start="97:15" pos:end="97:19">[<expr pos:start="97:16" pos:end="97:18"><name pos:start="97:16" pos:end="97:18">TPT</name></expr>]</index></name><operator pos:start="97:20" pos:end="97:21">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:23"><expr pos:start="99:5" pos:end="99:22"><name pos:start="99:5" pos:end="99:20"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:14">mac_reg</name><index pos:start="99:15" pos:end="99:20">[<expr pos:start="99:16" pos:end="99:19"><name pos:start="99:16" pos:end="99:19">GPTC</name></expr>]</index></name><operator pos:start="99:21" pos:end="99:22">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:25"><expr pos:start="101:5" pos:end="101:24"><name pos:start="101:5" pos:end="101:5">n</name> <operator pos:start="101:7" pos:end="101:7">=</operator> <name pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:18">mac_reg</name><index pos:start="101:19" pos:end="101:24">[<expr pos:start="101:20" pos:end="101:23"><name pos:start="101:20" pos:end="101:23">TOTL</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="105:27"><if pos:start="103:5" pos:end="105:27">if <condition pos:start="103:8" pos:end="103:45">(<expr pos:start="103:9" pos:end="103:44"><operator pos:start="103:9" pos:end="103:9">(</operator><name pos:start="103:10" pos:end="103:25"><name pos:start="103:10" pos:end="103:10">s</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:19">mac_reg</name><index pos:start="103:20" pos:end="103:25">[<expr pos:start="103:21" pos:end="103:24"><name pos:start="103:21" pos:end="103:24">TOTL</name></expr>]</index></name> <operator pos:start="103:27" pos:end="103:28">+=</operator> <name pos:start="103:30" pos:end="103:39"><name pos:start="103:30" pos:end="103:30">s</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:34">tx</name><operator pos:start="103:35" pos:end="103:35">.</operator><name pos:start="103:36" pos:end="103:39">size</name></name><operator pos:start="103:40" pos:end="103:40">)</operator> <operator pos:start="103:42" pos:end="103:42">&lt;</operator> <name pos:start="103:44" pos:end="103:44">n</name></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:27"><block_content pos:start="105:9" pos:end="105:27">

        <expr_stmt pos:start="105:9" pos:end="105:27"><expr pos:start="105:9" pos:end="105:26"><name pos:start="105:9" pos:end="105:24"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:18">mac_reg</name><index pos:start="105:19" pos:end="105:24">[<expr pos:start="105:20" pos:end="105:23"><name pos:start="105:20" pos:end="105:23">TOTH</name></expr>]</index></name><operator pos:start="105:25" pos:end="105:26">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block>
</unit>
