<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2337.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">test_cipher_speed</name><parameter_list pos:start="1:30" pos:end="1:49">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:42"><specifier pos:start="1:31" pos:end="1:35">const</specifier> <name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:16">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">QCryptoCipher</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:25">cipher</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">err</name> <init pos:start="7:16" pos:end="7:21">= <expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">double</name></type> <name pos:start="9:12" pos:end="9:16">total</name> <init pos:start="9:18" pos:end="9:22">= <expr pos:start="9:20" pos:end="9:22"><literal type="number" pos:start="9:20" pos:end="9:22">0.0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:21">chunk_size</name> <init pos:start="11:23" pos:end="11:38">= <expr pos:start="11:25" pos:end="11:38"><operator pos:start="11:25" pos:end="11:25">(</operator><name pos:start="11:26" pos:end="11:31">size_t</name><operator pos:start="11:32" pos:end="11:32">)</operator><name pos:start="11:33" pos:end="11:38">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">key</name> <init pos:start="13:18" pos:end="13:23">= <expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">NULL</name></expr></init></decl>, <decl pos:start="13:26" pos:end="13:35"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:26" pos:end="13:26">*</modifier></type><name pos:start="13:27" pos:end="13:28">iv</name> <init pos:start="13:30" pos:end="13:35">= <expr pos:start="13:32" pos:end="13:35"><name pos:start="13:32" pos:end="13:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:50"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:22">plaintext</name> <init pos:start="15:24" pos:end="15:29">= <expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">NULL</name></expr></init></decl>, <decl pos:start="15:32" pos:end="15:49"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:32" pos:end="15:32">*</modifier></type><name pos:start="15:33" pos:end="15:42">ciphertext</name> <init pos:start="15:44" pos:end="15:49">= <expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:73"><decl pos:start="17:5" pos:end="17:72"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">size_t</name></type> <name pos:start="17:12" pos:end="17:15">nkey</name> <init pos:start="17:17" pos:end="17:72">= <expr pos:start="17:19" pos:end="17:72"><call pos:start="17:19" pos:end="17:72"><name pos:start="17:19" pos:end="17:44">qcrypto_cipher_get_key_len</name><argument_list pos:start="17:45" pos:end="17:72">(<argument pos:start="17:46" pos:end="17:71"><expr pos:start="17:46" pos:end="17:71"><name pos:start="17:46" pos:end="17:71">QCRYPTO_CIPHER_ALG_AES_128</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="21:68"><decl pos:start="19:5" pos:end="21:67"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">size_t</name></type> <name pos:start="19:12" pos:end="19:14">niv</name> <init pos:start="19:16" pos:end="21:67">= <expr pos:start="19:18" pos:end="21:67"><call pos:start="19:18" pos:end="21:67"><name pos:start="19:18" pos:end="19:42">qcrypto_cipher_get_iv_len</name><argument_list pos:start="19:43" pos:end="21:67">(<argument pos:start="19:44" pos:end="19:69"><expr pos:start="19:44" pos:end="19:69"><name pos:start="19:44" pos:end="19:69">QCRYPTO_CIPHER_ALG_AES_128</name></expr></argument>,

                                           <argument pos:start="21:44" pos:end="21:66"><expr pos:start="21:44" pos:end="21:66"><name pos:start="21:44" pos:end="21:66">QCRYPTO_CIPHER_MODE_CBC</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:7">key</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:31"><name pos:start="25:11" pos:end="25:16">g_new0</name><argument_list pos:start="25:17" pos:end="25:31">(<argument pos:start="25:18" pos:end="25:24"><expr pos:start="25:18" pos:end="25:24"><name pos:start="25:18" pos:end="25:24">uint8_t</name></expr></argument>, <argument pos:start="25:27" pos:end="25:30"><expr pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:30">nkey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:41"><expr pos:start="27:5" pos:end="27:40"><call pos:start="27:5" pos:end="27:40"><name pos:start="27:5" pos:end="27:10">memset</name><argument_list pos:start="27:11" pos:end="27:40">(<argument pos:start="27:12" pos:end="27:14"><expr pos:start="27:12" pos:end="27:14"><name pos:start="27:12" pos:end="27:14">key</name></expr></argument>, <argument pos:start="27:17" pos:end="27:33"><expr pos:start="27:17" pos:end="27:33"><call pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:31">g_test_rand_int</name><argument_list pos:start="27:32" pos:end="27:33">()</argument_list></call></expr></argument>, <argument pos:start="27:36" pos:end="27:39"><expr pos:start="27:36" pos:end="27:39"><name pos:start="27:36" pos:end="27:39">nkey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:6">iv</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:29"><name pos:start="31:10" pos:end="31:15">g_new0</name><argument_list pos:start="31:16" pos:end="31:29">(<argument pos:start="31:17" pos:end="31:23"><expr pos:start="31:17" pos:end="31:23"><name pos:start="31:17" pos:end="31:23">uint8_t</name></expr></argument>, <argument pos:start="31:26" pos:end="31:28"><expr pos:start="31:26" pos:end="31:28"><name pos:start="31:26" pos:end="31:28">niv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><call pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:10">memset</name><argument_list pos:start="33:11" pos:end="33:38">(<argument pos:start="33:12" pos:end="33:13"><expr pos:start="33:12" pos:end="33:13"><name pos:start="33:12" pos:end="33:13">iv</name></expr></argument>, <argument pos:start="33:16" pos:end="33:32"><expr pos:start="33:16" pos:end="33:32"><call pos:start="33:16" pos:end="33:32"><name pos:start="33:16" pos:end="33:30">g_test_rand_int</name><argument_list pos:start="33:31" pos:end="33:32">()</argument_list></call></expr></argument>, <argument pos:start="33:35" pos:end="33:37"><expr pos:start="33:35" pos:end="33:37"><name pos:start="33:35" pos:end="33:37">niv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:45"><expr pos:start="37:5" pos:end="37:44"><name pos:start="37:5" pos:end="37:14">ciphertext</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:44"><name pos:start="37:18" pos:end="37:23">g_new0</name><argument_list pos:start="37:24" pos:end="37:44">(<argument pos:start="37:25" pos:end="37:31"><expr pos:start="37:25" pos:end="37:31"><name pos:start="37:25" pos:end="37:31">uint8_t</name></expr></argument>, <argument pos:start="37:34" pos:end="37:43"><expr pos:start="37:34" pos:end="37:43"><name pos:start="37:34" pos:end="37:43">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:44"><expr pos:start="41:5" pos:end="41:43"><name pos:start="41:5" pos:end="41:13">plaintext</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="41:43"><name pos:start="41:17" pos:end="41:22">g_new0</name><argument_list pos:start="41:23" pos:end="41:43">(<argument pos:start="41:24" pos:end="41:30"><expr pos:start="41:24" pos:end="41:30"><name pos:start="41:24" pos:end="41:30">uint8_t</name></expr></argument>, <argument pos:start="41:33" pos:end="41:42"><expr pos:start="41:33" pos:end="41:42"><name pos:start="41:33" pos:end="41:42">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:53"><expr pos:start="43:5" pos:end="43:52"><call pos:start="43:5" pos:end="43:52"><name pos:start="43:5" pos:end="43:10">memset</name><argument_list pos:start="43:11" pos:end="43:52">(<argument pos:start="43:12" pos:end="43:20"><expr pos:start="43:12" pos:end="43:20"><name pos:start="43:12" pos:end="43:20">plaintext</name></expr></argument>, <argument pos:start="43:23" pos:end="43:39"><expr pos:start="43:23" pos:end="43:39"><call pos:start="43:23" pos:end="43:39"><name pos:start="43:23" pos:end="43:37">g_test_rand_int</name><argument_list pos:start="43:38" pos:end="43:39">()</argument_list></call></expr></argument>, <argument pos:start="43:42" pos:end="43:51"><expr pos:start="43:42" pos:end="43:51"><name pos:start="43:42" pos:end="43:51">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="51:49"><expr pos:start="47:5" pos:end="51:48"><name pos:start="47:5" pos:end="47:10">cipher</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="51:48"><name pos:start="47:14" pos:end="47:31">qcrypto_cipher_new</name><argument_list pos:start="47:32" pos:end="51:48">(<argument pos:start="47:33" pos:end="47:58"><expr pos:start="47:33" pos:end="47:58"><name pos:start="47:33" pos:end="47:58">QCRYPTO_CIPHER_ALG_AES_128</name></expr></argument>,

                                <argument pos:start="49:33" pos:end="49:55"><expr pos:start="49:33" pos:end="49:55"><name pos:start="49:33" pos:end="49:55">QCRYPTO_CIPHER_MODE_CBC</name></expr></argument>,

                                <argument pos:start="51:33" pos:end="51:35"><expr pos:start="51:33" pos:end="51:35"><name pos:start="51:33" pos:end="51:35">key</name></expr></argument>, <argument pos:start="51:38" pos:end="51:41"><expr pos:start="51:38" pos:end="51:41"><name pos:start="51:38" pos:end="51:41">nkey</name></expr></argument>, <argument pos:start="51:44" pos:end="51:47"><expr pos:start="51:44" pos:end="51:47"><operator pos:start="51:44" pos:end="51:44">&amp;</operator><name pos:start="51:45" pos:end="51:47">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><call pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:12">g_assert</name><argument_list pos:start="53:13" pos:end="53:28">(<argument pos:start="53:14" pos:end="53:27"><expr pos:start="53:14" pos:end="53:27"><name pos:start="53:14" pos:end="53:19">cipher</name> <operator pos:start="53:21" pos:end="53:22">!=</operator> <name pos:start="53:24" pos:end="53:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="61:46"><expr pos:start="57:5" pos:end="61:45"><call pos:start="57:5" pos:end="61:45"><name pos:start="57:5" pos:end="57:12">g_assert</name><argument_list pos:start="57:13" pos:end="61:45">(<argument pos:start="57:14" pos:end="61:44"><expr pos:start="57:14" pos:end="61:44"><call pos:start="57:14" pos:end="61:39"><name pos:start="57:14" pos:end="57:33">qcrypto_cipher_setiv</name><argument_list pos:start="57:34" pos:end="61:39">(<argument pos:start="57:35" pos:end="57:40"><expr pos:start="57:35" pos:end="57:40"><name pos:start="57:35" pos:end="57:40">cipher</name></expr></argument>,

                                  <argument pos:start="59:35" pos:end="59:36"><expr pos:start="59:35" pos:end="59:36"><name pos:start="59:35" pos:end="59:36">iv</name></expr></argument>, <argument pos:start="59:39" pos:end="59:41"><expr pos:start="59:39" pos:end="59:41"><name pos:start="59:39" pos:end="59:41">niv</name></expr></argument>,

                                  <argument pos:start="61:35" pos:end="61:38"><expr pos:start="61:35" pos:end="61:38"><operator pos:start="61:35" pos:end="61:35">&amp;</operator><name pos:start="61:36" pos:end="61:38">err</name></expr></argument>)</argument_list></call> <operator pos:start="61:41" pos:end="61:42">==</operator> <literal type="number" pos:start="61:44" pos:end="61:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:25"><expr pos:start="65:5" pos:end="65:24"><call pos:start="65:5" pos:end="65:24"><name pos:start="65:5" pos:end="65:22">g_test_timer_start</name><argument_list pos:start="65:23" pos:end="65:24">()</argument_list></call></expr>;</expr_stmt>

    <do pos:start="67:5" pos:end="81:43">do <block pos:start="67:8" pos:end="81:5">{<block_content pos:start="69:9" pos:end="79:28">

        <expr_stmt pos:start="69:9" pos:end="77:52"><expr pos:start="69:9" pos:end="77:51"><call pos:start="69:9" pos:end="77:51"><name pos:start="69:9" pos:end="69:16">g_assert</name><argument_list pos:start="69:17" pos:end="77:51">(<argument pos:start="69:18" pos:end="77:50"><expr pos:start="69:18" pos:end="77:50"><call pos:start="69:18" pos:end="77:45"><name pos:start="69:18" pos:end="69:39">qcrypto_cipher_encrypt</name><argument_list pos:start="69:40" pos:end="77:45">(<argument pos:start="69:41" pos:end="69:46"><expr pos:start="69:41" pos:end="69:46"><name pos:start="69:41" pos:end="69:46">cipher</name></expr></argument>,

                                        <argument pos:start="71:41" pos:end="71:49"><expr pos:start="71:41" pos:end="71:49"><name pos:start="71:41" pos:end="71:49">plaintext</name></expr></argument>,

                                        <argument pos:start="73:41" pos:end="73:50"><expr pos:start="73:41" pos:end="73:50"><name pos:start="73:41" pos:end="73:50">ciphertext</name></expr></argument>,

                                        <argument pos:start="75:41" pos:end="75:50"><expr pos:start="75:41" pos:end="75:50"><name pos:start="75:41" pos:end="75:50">chunk_size</name></expr></argument>,

                                        <argument pos:start="77:41" pos:end="77:44"><expr pos:start="77:41" pos:end="77:44"><operator pos:start="77:41" pos:end="77:41">&amp;</operator><name pos:start="77:42" pos:end="77:44">err</name></expr></argument>)</argument_list></call> <operator pos:start="77:47" pos:end="77:48">==</operator> <literal type="number" pos:start="77:50" pos:end="77:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:28"><expr pos:start="79:9" pos:end="79:27"><name pos:start="79:9" pos:end="79:13">total</name> <operator pos:start="79:15" pos:end="79:16">+=</operator> <name pos:start="79:18" pos:end="79:27">chunk_size</name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="81:13" pos:end="81:42">(<expr pos:start="81:14" pos:end="81:41"><call pos:start="81:14" pos:end="81:35"><name pos:start="81:14" pos:end="81:33">g_test_timer_elapsed</name><argument_list pos:start="81:34" pos:end="81:35">()</argument_list></call> <operator pos:start="81:37" pos:end="81:37">&lt;</operator> <literal type="number" pos:start="81:39" pos:end="81:41">5.0</literal></expr>)</condition>;</do>



    <expr_stmt pos:start="85:5" pos:end="85:25"><expr pos:start="85:5" pos:end="85:24"><name pos:start="85:5" pos:end="85:9">total</name> <operator pos:start="85:11" pos:end="85:12">/=</operator> <literal type="number" pos:start="85:14" pos:end="85:17">1024</literal> <operator pos:start="85:19" pos:end="85:19">*</operator> <literal type="number" pos:start="85:21" pos:end="85:24">1024</literal></expr>;</expr_stmt> <comment type="block" pos:start="85:27" pos:end="85:37">/* to MB */</comment>



    <expr_stmt pos:start="89:5" pos:end="89:29"><expr pos:start="89:5" pos:end="89:28"><call pos:start="89:5" pos:end="89:28"><name pos:start="89:5" pos:end="89:11">g_print</name><argument_list pos:start="89:12" pos:end="89:28">(<argument pos:start="89:13" pos:end="89:27"><expr pos:start="89:13" pos:end="89:27"><literal type="string" pos:start="89:13" pos:end="89:27">"cbc(aes128): "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:57"><expr pos:start="91:5" pos:end="91:56"><call pos:start="91:5" pos:end="91:56"><name pos:start="91:5" pos:end="91:11">g_print</name><argument_list pos:start="91:12" pos:end="91:56">(<argument pos:start="91:13" pos:end="91:43"><expr pos:start="91:13" pos:end="91:43"><literal type="string" pos:start="91:13" pos:end="91:43">"Testing chunk_size %ld bytes "</literal></expr></argument>, <argument pos:start="91:46" pos:end="91:55"><expr pos:start="91:46" pos:end="91:55"><name pos:start="91:46" pos:end="91:55">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:72"><expr pos:start="93:5" pos:end="93:71"><call pos:start="93:5" pos:end="93:71"><name pos:start="93:5" pos:end="93:11">g_print</name><argument_list pos:start="93:12" pos:end="93:71">(<argument pos:start="93:13" pos:end="93:42"><expr pos:start="93:13" pos:end="93:42"><literal type="string" pos:start="93:13" pos:end="93:42">"done: %.2f MB in %.2f secs: "</literal></expr></argument>, <argument pos:start="93:45" pos:end="93:49"><expr pos:start="93:45" pos:end="93:49"><name pos:start="93:45" pos:end="93:49">total</name></expr></argument>, <argument pos:start="93:52" pos:end="93:70"><expr pos:start="93:52" pos:end="93:70"><call pos:start="93:52" pos:end="93:70"><name pos:start="93:52" pos:end="93:68">g_test_timer_last</name><argument_list pos:start="93:69" pos:end="93:70">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:58"><expr pos:start="95:5" pos:end="95:57"><call pos:start="95:5" pos:end="95:57"><name pos:start="95:5" pos:end="95:11">g_print</name><argument_list pos:start="95:12" pos:end="95:57">(<argument pos:start="95:13" pos:end="95:27"><expr pos:start="95:13" pos:end="95:27"><literal type="string" pos:start="95:13" pos:end="95:27">"%.2f MB/sec\n"</literal></expr></argument>, <argument pos:start="95:30" pos:end="95:56"><expr pos:start="95:30" pos:end="95:56"><name pos:start="95:30" pos:end="95:34">total</name> <operator pos:start="95:36" pos:end="95:36">/</operator> <call pos:start="95:38" pos:end="95:56"><name pos:start="95:38" pos:end="95:54">g_test_timer_last</name><argument_list pos:start="95:55" pos:end="95:56">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:32"><expr pos:start="99:5" pos:end="99:31"><call pos:start="99:5" pos:end="99:31"><name pos:start="99:5" pos:end="99:23">qcrypto_cipher_free</name><argument_list pos:start="99:24" pos:end="99:31">(<argument pos:start="99:25" pos:end="99:30"><expr pos:start="99:25" pos:end="99:30"><name pos:start="99:25" pos:end="99:30">cipher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:22"><expr pos:start="101:5" pos:end="101:21"><call pos:start="101:5" pos:end="101:21"><name pos:start="101:5" pos:end="101:10">g_free</name><argument_list pos:start="101:11" pos:end="101:21">(<argument pos:start="101:12" pos:end="101:20"><expr pos:start="101:12" pos:end="101:20"><name pos:start="101:12" pos:end="101:20">plaintext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:23"><expr pos:start="103:5" pos:end="103:22"><call pos:start="103:5" pos:end="103:22"><name pos:start="103:5" pos:end="103:10">g_free</name><argument_list pos:start="103:11" pos:end="103:22">(<argument pos:start="103:12" pos:end="103:21"><expr pos:start="103:12" pos:end="103:21"><name pos:start="103:12" pos:end="103:21">ciphertext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:15"><expr pos:start="105:5" pos:end="105:14"><call pos:start="105:5" pos:end="105:14"><name pos:start="105:5" pos:end="105:10">g_free</name><argument_list pos:start="105:11" pos:end="105:14">(<argument pos:start="105:12" pos:end="105:13"><expr pos:start="105:12" pos:end="105:13"><name pos:start="105:12" pos:end="105:13">iv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:16"><expr pos:start="107:5" pos:end="107:15"><call pos:start="107:5" pos:end="107:15"><name pos:start="107:5" pos:end="107:10">g_free</name><argument_list pos:start="107:11" pos:end="107:15">(<argument pos:start="107:12" pos:end="107:14"><expr pos:start="107:12" pos:end="107:14"><name pos:start="107:12" pos:end="107:14">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
