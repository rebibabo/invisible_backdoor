<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10968.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">qemu_get_buffer</name><parameter_list pos:start="1:20" pos:end="1:57">(<parameter pos:start="1:21" pos:end="1:31"><decl pos:start="1:21" pos:end="1:31"><type pos:start="1:21" pos:end="1:31"><name pos:start="1:21" pos:end="1:28">QEMUFile</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:31">f</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:40">uint8_t</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">buf</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:56"><decl pos:start="1:48" pos:end="1:56"><type pos:start="1:48" pos:end="1:56"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:56">size1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:24">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">size</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">l</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:20">(<expr pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:9">f</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:19">is_write</name></name></expr>)</condition> <block pos:start="9:22" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:16">

        <expr_stmt pos:start="11:9" pos:end="11:16"><expr pos:start="11:9" pos:end="11:15"><call pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:13">abort</name><argument_list pos:start="11:14" pos:end="11:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:8">size</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <name pos:start="17:12" pos:end="17:16">size1</name></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="51:5">while <condition pos:start="19:11" pos:end="19:20">(<expr pos:start="19:12" pos:end="19:19"><name pos:start="19:12" pos:end="19:15">size</name> <operator pos:start="19:17" pos:end="19:17">&gt;</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>)</condition> <block pos:start="19:22" pos:end="51:5">{<block_content pos:start="21:9" pos:end="49:18">

        <expr_stmt pos:start="21:9" pos:end="21:39"><expr pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:9">l</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:13">f</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:23">buf_size</name></name> <operator pos:start="21:25" pos:end="21:25">-</operator> <name pos:start="21:27" pos:end="21:38"><name pos:start="21:27" pos:end="21:27">f</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:38">buf_index</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="35:9"><if pos:start="23:9" pos:end="35:9">if <condition pos:start="23:12" pos:end="23:19">(<expr pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:13">l</name> <operator pos:start="23:15" pos:end="23:16">==</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>)</condition> <block pos:start="23:21" pos:end="35:9">{<block_content pos:start="25:13" pos:end="33:13">

            <expr_stmt pos:start="25:13" pos:end="25:32"><expr pos:start="25:13" pos:end="25:31"><call pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:28">qemu_fill_buffer</name><argument_list pos:start="25:29" pos:end="25:31">(<argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><name pos:start="25:30" pos:end="25:30">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:43"><expr pos:start="27:13" pos:end="27:42"><name pos:start="27:13" pos:end="27:13">l</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:27"><name pos:start="27:17" pos:end="27:17">f</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:27">buf_size</name></name> <operator pos:start="27:29" pos:end="27:29">-</operator> <name pos:start="27:31" pos:end="27:42"><name pos:start="27:31" pos:end="27:31">f</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:42">buf_index</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="33:13"><if pos:start="29:13" pos:end="33:13">if <condition pos:start="29:16" pos:end="29:23">(<expr pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:17">l</name> <operator pos:start="29:19" pos:end="29:20">==</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>)</condition> <block pos:start="29:25" pos:end="33:13">{<block_content pos:start="31:17" pos:end="31:22">

                <break pos:start="31:17" pos:end="31:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:21">(<expr pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:13">l</name> <operator pos:start="37:15" pos:end="37:15">&gt;</operator> <name pos:start="37:17" pos:end="37:20">size</name></expr>)</condition> <block pos:start="37:23" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:21">

            <expr_stmt pos:start="39:13" pos:end="39:21"><expr pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:13">l</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:20">size</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:46"><expr pos:start="43:9" pos:end="43:45"><call pos:start="43:9" pos:end="43:45"><name pos:start="43:9" pos:end="43:14">memcpy</name><argument_list pos:start="43:15" pos:end="43:45">(<argument pos:start="43:16" pos:end="43:18"><expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">buf</name></expr></argument>, <argument pos:start="43:21" pos:end="43:41"><expr pos:start="43:21" pos:end="43:41"><name pos:start="43:21" pos:end="43:26"><name pos:start="43:21" pos:end="43:21">f</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:26">buf</name></name> <operator pos:start="43:28" pos:end="43:28">+</operator> <name pos:start="43:30" pos:end="43:41"><name pos:start="43:30" pos:end="43:30">f</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:41">buf_index</name></name></expr></argument>, <argument pos:start="43:44" pos:end="43:44"><expr pos:start="43:44" pos:end="43:44"><name pos:start="43:44" pos:end="43:44">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:26"><expr pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:9">f</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:20">buf_index</name></name> <operator pos:start="45:22" pos:end="45:23">+=</operator> <name pos:start="45:25" pos:end="45:25">l</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:17"><expr pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:11">buf</name> <operator pos:start="47:13" pos:end="47:14">+=</operator> <name pos:start="47:16" pos:end="47:16">l</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:18"><expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:12">size</name> <operator pos:start="49:14" pos:end="49:15">-=</operator> <name pos:start="49:17" pos:end="49:17">l</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="53:5" pos:end="53:24">return <expr pos:start="53:12" pos:end="53:23"><name pos:start="53:12" pos:end="53:16">size1</name> <operator pos:start="53:18" pos:end="53:18">-</operator> <name pos:start="53:20" pos:end="53:23">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
