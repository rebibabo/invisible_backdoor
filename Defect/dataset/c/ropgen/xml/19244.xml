<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19244.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:42">spatial_compose53i_dy_buffered</name><parameter_list pos:start="1:43" pos:end="1:120">(<parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:56">dwt_compose_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">cs</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:79"><decl pos:start="1:63" pos:end="1:79"><type pos:start="1:63" pos:end="1:79"><name pos:start="1:63" pos:end="1:74">slice_buffer</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type> <name pos:start="1:78" pos:end="1:79">sb</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:90"><decl pos:start="1:82" pos:end="1:90"><type pos:start="1:82" pos:end="1:90"><name pos:start="1:82" pos:end="1:84">int</name></type> <name pos:start="1:86" pos:end="1:90">width</name></decl></parameter>, <parameter pos:start="1:93" pos:end="1:102"><decl pos:start="1:93" pos:end="1:102"><type pos:start="1:93" pos:end="1:102"><name pos:start="1:93" pos:end="1:95">int</name></type> <name pos:start="1:97" pos:end="1:102">height</name></decl></parameter>, <parameter pos:start="1:105" pos:end="1:119"><decl pos:start="1:105" pos:end="1:119"><type pos:start="1:105" pos:end="1:119"><name pos:start="1:105" pos:end="1:107">int</name></type> <name pos:start="1:109" pos:end="1:119">stride_line</name></decl></parameter>)</parameter_list><block pos:start="1:121" pos:end="51:1">{<block_content pos:start="3:5" pos:end="49:15">

    <decl_stmt pos:start="3:5" pos:end="3:17"><decl pos:start="3:5" pos:end="3:16"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">y</name><init pos:start="3:10" pos:end="3:16">= <expr pos:start="3:12" pos:end="3:16"><name pos:start="3:12" pos:end="3:16"><name pos:start="3:12" pos:end="3:13">cs</name><operator pos:start="3:14" pos:end="3:15">-&gt;</operator><name pos:start="3:16" pos:end="3:16">y</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">mirror0</name> <init pos:start="5:17" pos:end="5:39">= <expr pos:start="5:19" pos:end="5:39"><call pos:start="5:19" pos:end="5:39"><name pos:start="5:19" pos:end="5:24">mirror</name><argument_list pos:start="5:25" pos:end="5:39">(<argument pos:start="5:26" pos:end="5:28"><expr pos:start="5:26" pos:end="5:28"><name pos:start="5:26" pos:end="5:26">y</name><operator pos:start="5:27" pos:end="5:27">-</operator><literal type="number" pos:start="5:28" pos:end="5:28">1</literal></expr></argument>, <argument pos:start="5:31" pos:end="5:38"><expr pos:start="5:31" pos:end="5:38"><name pos:start="5:31" pos:end="5:36">height</name><operator pos:start="5:37" pos:end="5:37">-</operator><literal type="number" pos:start="5:38" pos:end="5:38">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">mirror1</name> <init pos:start="7:17" pos:end="7:39">= <expr pos:start="7:19" pos:end="7:39"><call pos:start="7:19" pos:end="7:39"><name pos:start="7:19" pos:end="7:24">mirror</name><argument_list pos:start="7:25" pos:end="7:39">(<argument pos:start="7:26" pos:end="7:26"><expr pos:start="7:26" pos:end="7:26"><name pos:start="7:26" pos:end="7:26">y</name></expr></argument>  , <argument pos:start="7:31" pos:end="7:38"><expr pos:start="7:31" pos:end="7:38"><name pos:start="7:31" pos:end="7:36">height</name><operator pos:start="7:37" pos:end="7:37">-</operator><literal type="number" pos:start="7:38" pos:end="7:38">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">mirror2</name> <init pos:start="9:17" pos:end="9:39">= <expr pos:start="9:19" pos:end="9:39"><call pos:start="9:19" pos:end="9:39"><name pos:start="9:19" pos:end="9:24">mirror</name><argument_list pos:start="9:25" pos:end="9:39">(<argument pos:start="9:26" pos:end="9:28"><expr pos:start="9:26" pos:end="9:28"><name pos:start="9:26" pos:end="9:26">y</name><operator pos:start="9:27" pos:end="9:27">+</operator><literal type="number" pos:start="9:28" pos:end="9:28">1</literal></expr></argument>, <argument pos:start="9:31" pos:end="9:38"><expr pos:start="9:31" pos:end="9:38"><name pos:start="9:31" pos:end="9:36">height</name><operator pos:start="9:37" pos:end="9:37">-</operator><literal type="number" pos:start="9:38" pos:end="9:38">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">mirror3</name> <init pos:start="11:17" pos:end="11:39">= <expr pos:start="11:19" pos:end="11:39"><call pos:start="11:19" pos:end="11:39"><name pos:start="11:19" pos:end="11:24">mirror</name><argument_list pos:start="11:25" pos:end="11:39">(<argument pos:start="11:26" pos:end="11:28"><expr pos:start="11:26" pos:end="11:28"><name pos:start="11:26" pos:end="11:26">y</name><operator pos:start="11:27" pos:end="11:27">+</operator><literal type="number" pos:start="11:28" pos:end="11:28">2</literal></expr></argument>, <argument pos:start="11:31" pos:end="11:38"><expr pos:start="11:31" pos:end="11:38"><name pos:start="11:31" pos:end="11:36">height</name><operator pos:start="11:37" pos:end="11:37">-</operator><literal type="number" pos:start="11:38" pos:end="11:38">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">DWTELEM</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:15">b0</name><init pos:start="15:16" pos:end="15:23">= <expr pos:start="15:18" pos:end="15:23"><name pos:start="15:18" pos:end="15:23"><name pos:start="15:18" pos:end="15:19">cs</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:23">b0</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">DWTELEM</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:15">b1</name><init pos:start="17:16" pos:end="17:23">= <expr pos:start="17:18" pos:end="17:23"><name pos:start="17:18" pos:end="17:23"><name pos:start="17:18" pos:end="17:19">cs</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:23">b1</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:66"><decl pos:start="19:5" pos:end="19:65"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">DWTELEM</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:15">b2</name><init pos:start="19:16" pos:end="19:65">= <expr pos:start="19:18" pos:end="19:65"><call pos:start="19:18" pos:end="19:65"><name pos:start="19:18" pos:end="19:38">slice_buffer_get_line</name><argument_list pos:start="19:39" pos:end="19:65">(<argument pos:start="19:40" pos:end="19:41"><expr pos:start="19:40" pos:end="19:41"><name pos:start="19:40" pos:end="19:41">sb</name></expr></argument>, <argument pos:start="19:44" pos:end="19:64"><expr pos:start="19:44" pos:end="19:64"><name pos:start="19:44" pos:end="19:50">mirror2</name> <operator pos:start="19:52" pos:end="19:52">*</operator> <name pos:start="19:54" pos:end="19:64">stride_line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:66"><decl pos:start="21:5" pos:end="21:65"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">DWTELEM</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:15">b3</name><init pos:start="21:16" pos:end="21:65">= <expr pos:start="21:18" pos:end="21:65"><call pos:start="21:18" pos:end="21:65"><name pos:start="21:18" pos:end="21:38">slice_buffer_get_line</name><argument_list pos:start="21:39" pos:end="21:65">(<argument pos:start="21:40" pos:end="21:41"><expr pos:start="21:40" pos:end="21:41"><name pos:start="21:40" pos:end="21:41">sb</name></expr></argument>, <argument pos:start="21:44" pos:end="21:64"><expr pos:start="21:44" pos:end="21:64"><name pos:start="21:44" pos:end="21:50">mirror3</name> <operator pos:start="21:52" pos:end="21:52">*</operator> <name pos:start="21:54" pos:end="21:64">stride_line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<block pos:start="25:1" pos:end="31:35">{<block_content pos:start="25:2" pos:end="31:34"><macro pos:start="25:2" pos:end="25:12"><name pos:start="25:2" pos:end="25:12">START_TIMER</name></macro>

        <if_stmt pos:start="27:9" pos:end="27:72"><if pos:start="27:9" pos:end="27:72">if<condition pos:start="27:11" pos:end="27:30">(<expr pos:start="27:12" pos:end="27:29"><name pos:start="27:12" pos:end="27:18">mirror1</name> <operator pos:start="27:20" pos:end="27:21">&lt;=</operator> <name pos:start="27:23" pos:end="27:29">mirror3</name></expr>)</condition><block type="pseudo" pos:start="27:32" pos:end="27:72"><block_content pos:start="27:32" pos:end="27:72"> <expr_stmt pos:start="27:32" pos:end="27:72"><expr pos:start="27:32" pos:end="27:71"><call pos:start="27:32" pos:end="27:71"><name pos:start="27:32" pos:end="27:52">vertical_compose53iL0</name><argument_list pos:start="27:53" pos:end="27:71">(<argument pos:start="27:54" pos:end="27:55"><expr pos:start="27:54" pos:end="27:55"><name pos:start="27:54" pos:end="27:55">b1</name></expr></argument>, <argument pos:start="27:58" pos:end="27:59"><expr pos:start="27:58" pos:end="27:59"><name pos:start="27:58" pos:end="27:59">b2</name></expr></argument>, <argument pos:start="27:62" pos:end="27:63"><expr pos:start="27:62" pos:end="27:63"><name pos:start="27:62" pos:end="27:63">b3</name></expr></argument>, <argument pos:start="27:66" pos:end="27:70"><expr pos:start="27:66" pos:end="27:70"><name pos:start="27:66" pos:end="27:70">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="29:72"><if pos:start="29:9" pos:end="29:72">if<condition pos:start="29:11" pos:end="29:30">(<expr pos:start="29:12" pos:end="29:29"><name pos:start="29:12" pos:end="29:18">mirror0</name> <operator pos:start="29:20" pos:end="29:21">&lt;=</operator> <name pos:start="29:23" pos:end="29:29">mirror2</name></expr>)</condition><block type="pseudo" pos:start="29:32" pos:end="29:72"><block_content pos:start="29:32" pos:end="29:72"> <expr_stmt pos:start="29:32" pos:end="29:72"><expr pos:start="29:32" pos:end="29:71"><call pos:start="29:32" pos:end="29:71"><name pos:start="29:32" pos:end="29:52">vertical_compose53iH0</name><argument_list pos:start="29:53" pos:end="29:71">(<argument pos:start="29:54" pos:end="29:55"><expr pos:start="29:54" pos:end="29:55"><name pos:start="29:54" pos:end="29:55">b0</name></expr></argument>, <argument pos:start="29:58" pos:end="29:59"><expr pos:start="29:58" pos:end="29:59"><name pos:start="29:58" pos:end="29:59">b1</name></expr></argument>, <argument pos:start="29:62" pos:end="29:63"><expr pos:start="29:62" pos:end="29:63"><name pos:start="29:62" pos:end="29:63">b2</name></expr></argument>, <argument pos:start="29:66" pos:end="29:70"><expr pos:start="29:66" pos:end="29:70"><name pos:start="29:66" pos:end="29:70">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<macro pos:start="31:1" pos:end="31:34"><name pos:start="31:1" pos:end="31:10">STOP_TIMER</name><argument_list pos:start="31:11" pos:end="31:34">(<argument pos:start="31:12" pos:end="31:33"><literal type="string" pos:start="31:12" pos:end="31:33">"vertical_compose53i*"</literal></argument>)</argument_list></macro></block_content>}</block>



<block pos:start="35:1" pos:end="41:36">{<block_content pos:start="35:2" pos:end="41:35"><macro pos:start="35:2" pos:end="35:12"><name pos:start="35:2" pos:end="35:12">START_TIMER</name></macro>

        <if_stmt pos:start="37:9" pos:end="37:54"><if pos:start="37:9" pos:end="37:54">if<condition pos:start="37:11" pos:end="37:20">(<expr pos:start="37:12" pos:end="37:19"><name pos:start="37:12" pos:end="37:12">y</name><operator pos:start="37:13" pos:end="37:13">-</operator><literal type="number" pos:start="37:14" pos:end="37:14">1</literal> <operator pos:start="37:16" pos:end="37:17">&gt;=</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition><block type="pseudo" pos:start="37:22" pos:end="37:54"><block_content pos:start="37:22" pos:end="37:54"> <expr_stmt pos:start="37:22" pos:end="37:54"><expr pos:start="37:22" pos:end="37:53"><call pos:start="37:22" pos:end="37:53"><name pos:start="37:22" pos:end="37:42">horizontal_compose53i</name><argument_list pos:start="37:43" pos:end="37:53">(<argument pos:start="37:44" pos:end="37:45"><expr pos:start="37:44" pos:end="37:45"><name pos:start="37:44" pos:end="37:45">b0</name></expr></argument>, <argument pos:start="37:48" pos:end="37:52"><expr pos:start="37:48" pos:end="37:52"><name pos:start="37:48" pos:end="37:52">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="39:64"><if pos:start="39:9" pos:end="39:64">if<condition pos:start="39:11" pos:end="39:30">(<expr pos:start="39:12" pos:end="39:29"><name pos:start="39:12" pos:end="39:18">mirror0</name> <operator pos:start="39:20" pos:end="39:21">&lt;=</operator> <name pos:start="39:23" pos:end="39:29">mirror2</name></expr>)</condition><block type="pseudo" pos:start="39:32" pos:end="39:64"><block_content pos:start="39:32" pos:end="39:64"> <expr_stmt pos:start="39:32" pos:end="39:64"><expr pos:start="39:32" pos:end="39:63"><call pos:start="39:32" pos:end="39:63"><name pos:start="39:32" pos:end="39:52">horizontal_compose53i</name><argument_list pos:start="39:53" pos:end="39:63">(<argument pos:start="39:54" pos:end="39:55"><expr pos:start="39:54" pos:end="39:55"><name pos:start="39:54" pos:end="39:55">b1</name></expr></argument>, <argument pos:start="39:58" pos:end="39:62"><expr pos:start="39:58" pos:end="39:62"><name pos:start="39:58" pos:end="39:62">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<macro pos:start="41:1" pos:end="41:35"><name pos:start="41:1" pos:end="41:10">STOP_TIMER</name><argument_list pos:start="41:11" pos:end="41:35">(<argument pos:start="41:12" pos:end="41:34"><literal type="string" pos:start="41:12" pos:end="41:34">"horizontal_compose53i"</literal></argument>)</argument_list></macro></block_content>}</block>



    <expr_stmt pos:start="45:5" pos:end="45:16"><expr pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:6">cs</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:10">b0</name></name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:15">b2</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:16"><expr pos:start="47:5" pos:end="47:15"><name pos:start="47:5" pos:end="47:10"><name pos:start="47:5" pos:end="47:6">cs</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:10">b1</name></name> <operator pos:start="47:12" pos:end="47:12">=</operator> <name pos:start="47:14" pos:end="47:15">b3</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:15"><expr pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:9"><name pos:start="49:5" pos:end="49:6">cs</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:9">y</name></name> <operator pos:start="49:11" pos:end="49:12">+=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">2</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
