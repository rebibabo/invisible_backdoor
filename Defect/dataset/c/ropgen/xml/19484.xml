<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19484.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">ide_drive_pre_save</name><parameter_list pos:start="1:31" pos:end="1:44">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:37"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">IDEState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:24">= <expr pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:24">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:29"><expr pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:24">cur_io_buffer_len</name></name> <operator pos:start="9:26" pos:end="9:26">=</operator> <literal type="number" pos:start="9:28" pos:end="9:28">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="15:15"><if pos:start="13:5" pos:end="15:15">if <condition pos:start="13:8" pos:end="13:32">(<expr pos:start="13:9" pos:end="13:31"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:19"><name pos:start="13:11" pos:end="13:11">s</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:19">status</name></name> <operator pos:start="13:21" pos:end="13:21">&amp;</operator> <name pos:start="13:23" pos:end="13:30">DRQ_STAT</name><operator pos:start="13:31" pos:end="13:31">)</operator></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:15"><block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:57"><expr pos:start="19:5" pos:end="19:56"><name pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:27">cur_io_buffer_offset</name></name> <operator pos:start="19:29" pos:end="19:29">=</operator> <name pos:start="19:31" pos:end="19:41"><name pos:start="19:31" pos:end="19:31">s</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:41">data_ptr</name></name> <operator pos:start="19:43" pos:end="19:43">-</operator> <name pos:start="19:45" pos:end="19:56"><name pos:start="19:45" pos:end="19:45">s</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:56">io_buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:24">cur_io_buffer_len</name></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <name pos:start="21:28" pos:end="21:38"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:38">data_end</name></name> <operator pos:start="21:40" pos:end="21:40">-</operator> <name pos:start="21:42" pos:end="21:52"><name pos:start="21:42" pos:end="21:42">s</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:52">data_ptr</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:74"><expr pos:start="25:5" pos:end="25:73"><name pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:26">end_transfer_fn_idx</name></name> <operator pos:start="25:28" pos:end="25:28">=</operator> <call pos:start="25:30" pos:end="25:73"><name pos:start="25:30" pos:end="25:51">transfer_end_table_idx</name><argument_list pos:start="25:52" pos:end="25:73">(<argument pos:start="25:53" pos:end="25:72"><expr pos:start="25:53" pos:end="25:72"><name pos:start="25:53" pos:end="25:72"><name pos:start="25:53" pos:end="25:53">s</name><operator pos:start="25:54" pos:end="25:55">-&gt;</operator><name pos:start="25:56" pos:end="25:72">end_transfer_func</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:37">(<expr pos:start="27:9" pos:end="27:36"><name pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:30">end_transfer_fn_idx</name></name> <operator pos:start="27:32" pos:end="27:33">==</operator> <operator pos:start="27:35" pos:end="27:35">-</operator><literal type="number" pos:start="27:36" pos:end="27:36">1</literal></expr>)</condition> <block pos:start="27:39" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:35">

        <expr_stmt pos:start="29:9" pos:end="31:34"><expr pos:start="29:9" pos:end="31:33"><call pos:start="29:9" pos:end="31:33"><name pos:start="29:9" pos:end="29:15">fprintf</name><argument_list pos:start="29:16" pos:end="31:33">(<argument pos:start="29:17" pos:end="29:22"><expr pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:22">stderr</name></expr></argument>, <argument pos:start="29:25" pos:end="29:70"><expr pos:start="29:25" pos:end="29:70"><literal type="string" pos:start="29:25" pos:end="29:70">"%s: invalid end_transfer_func for DRQ_STAT\n"</literal></expr></argument>,

                        <argument pos:start="31:25" pos:end="31:32"><expr pos:start="31:25" pos:end="31:32"><name pos:start="31:25" pos:end="31:32">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:35"><expr pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:30">end_transfer_fn_idx</name></name> <operator pos:start="33:32" pos:end="33:32">=</operator> <literal type="number" pos:start="33:34" pos:end="33:34">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
