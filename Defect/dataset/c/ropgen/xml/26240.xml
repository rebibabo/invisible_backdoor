<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26240.c" pos:tabs="8"><function pos:start="1:1" pos:end="413:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">pnm_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:60">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:31">int</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:42">got_frame</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:59"><decl pos:start="3:45" pos:end="3:59"><type pos:start="3:45" pos:end="3:59"><name pos:start="3:45" pos:end="3:52">AVPacket</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:59">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="413:1">{<block_content pos:start="7:5" pos:end="411:47">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name>   <init pos:start="7:26" pos:end="7:38">= <expr pos:start="7:28" pos:end="7:38"><name pos:start="7:28" pos:end="7:38"><name pos:start="7:28" pos:end="7:32">avpkt</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:38">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>         <init pos:start="9:26" pos:end="9:38">= <expr pos:start="9:28" pos:end="9:38"><name pos:start="9:28" pos:end="9:38"><name pos:start="9:28" pos:end="9:32">avpkt</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:38">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:14">PNMContext</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier> <specifier pos:start="11:18" pos:end="11:22">const</specifier></type> <name pos:start="11:24" pos:end="11:24">s</name> <init pos:start="11:26" pos:end="11:43">= <expr pos:start="11:28" pos:end="11:43"><name pos:start="11:28" pos:end="11:43"><name pos:start="11:28" pos:end="11:32">avctx</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier> <specifier pos:start="13:15" pos:end="13:19">const</specifier></type> <name pos:start="13:21" pos:end="13:21">p</name>    <init pos:start="13:26" pos:end="13:31">= <expr pos:start="13:28" pos:end="13:31"><name pos:start="13:28" pos:end="13:31">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:55"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">j</name></decl>, <decl pos:start="15:15" pos:end="15:15"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:15">n</name></decl>, <decl pos:start="15:18" pos:end="15:25"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:25">linesize</name></decl>, <decl pos:start="15:28" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:28" pos:end="15:28">h</name></decl>, <decl pos:start="15:31" pos:end="15:41"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:31" pos:end="15:37">upgrade</name> <init pos:start="15:39" pos:end="15:41">= <expr pos:start="15:41" pos:end="15:41"><literal type="number" pos:start="15:41" pos:end="15:41">0</literal></expr></init></decl>, <decl pos:start="15:44" pos:end="15:54"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:44" pos:end="15:50">is_mono</name> <init pos:start="15:52" pos:end="15:54">= <expr pos:start="15:54" pos:end="15:54"><literal type="number" pos:start="15:54" pos:end="15:54">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:17">char</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:22">ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:36"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">components</name></decl>, <decl pos:start="19:21" pos:end="19:30"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:21" pos:end="19:30">sample_len</name></decl>, <decl pos:start="19:33" pos:end="19:35"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:33" pos:end="19:35">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:28"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:16">int</name></type> <name pos:start="21:18" pos:end="21:24">maskval</name> <init pos:start="21:26" pos:end="21:28">= <expr pos:start="21:28" pos:end="21:28"><literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="27:41"><expr pos:start="25:5" pos:end="27:40"><name pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:23">bytestream_start</name></name> <operator pos:start="25:25" pos:end="25:25">=</operator>

    <name pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:17">bytestream</name></name>       <operator pos:start="27:25" pos:end="27:25">=</operator> <operator pos:start="27:27" pos:end="27:27">(</operator><name pos:start="27:28" pos:end="27:34">uint8_t</name> <operator pos:start="27:36" pos:end="27:36">*</operator><operator pos:start="27:37" pos:end="27:37">)</operator><name pos:start="27:38" pos:end="27:40">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:52"><expr pos:start="29:5" pos:end="29:51"><name pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:21">bytestream_end</name></name>   <operator pos:start="29:25" pos:end="29:25">=</operator> <operator pos:start="29:27" pos:end="29:27">(</operator><name pos:start="29:28" pos:end="29:34">uint8_t</name> <operator pos:start="29:36" pos:end="29:36">*</operator><operator pos:start="29:37" pos:end="29:37">)</operator><name pos:start="29:38" pos:end="29:40">buf</name> <operator pos:start="29:42" pos:end="29:42">+</operator> <name pos:start="29:44" pos:end="29:51">buf_size</name></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="35:19"><if pos:start="33:5" pos:end="35:19">if <condition pos:start="33:8" pos:end="33:51">(<expr pos:start="33:9" pos:end="33:50"><operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:12">ret</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:45"><name pos:start="33:16" pos:end="33:35">ff_pnm_decode_header</name><argument_list pos:start="33:36" pos:end="33:45">(<argument pos:start="33:37" pos:end="33:41"><expr pos:start="33:37" pos:end="33:41"><name pos:start="33:37" pos:end="33:41">avctx</name></expr></argument>, <argument pos:start="33:44" pos:end="33:44"><expr pos:start="33:44" pos:end="33:44"><name pos:start="33:44" pos:end="33:44">s</name></expr></argument>)</argument_list></call><operator pos:start="33:46" pos:end="33:46">)</operator> <operator pos:start="33:48" pos:end="33:48">&lt;</operator> <literal type="number" pos:start="33:50" pos:end="33:50">0</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:19"><block_content pos:start="35:9" pos:end="35:19">

        <return pos:start="35:9" pos:end="35:19">return <expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="41:19"><if pos:start="39:5" pos:end="41:19">if <condition pos:start="39:8" pos:end="39:47">(<expr pos:start="39:9" pos:end="39:46"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:12">ret</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:41"><name pos:start="39:16" pos:end="39:28">ff_get_buffer</name><argument_list pos:start="39:29" pos:end="39:41">(<argument pos:start="39:30" pos:end="39:34"><expr pos:start="39:30" pos:end="39:34"><name pos:start="39:30" pos:end="39:34">avctx</name></expr></argument>, <argument pos:start="39:37" pos:end="39:37"><expr pos:start="39:37" pos:end="39:37"><name pos:start="39:37" pos:end="39:37">p</name></expr></argument>, <argument pos:start="39:40" pos:end="39:40"><expr pos:start="39:40" pos:end="39:40"><literal type="number" pos:start="39:40" pos:end="39:40">0</literal></expr></argument>)</argument_list></call><operator pos:start="39:42" pos:end="39:42">)</operator> <operator pos:start="39:44" pos:end="39:44">&lt;</operator> <literal type="number" pos:start="39:46" pos:end="39:46">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:19"><block_content pos:start="41:9" pos:end="41:19">

        <return pos:start="41:9" pos:end="41:19">return <expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:37"><expr pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:5">p</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:16">pict_type</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:36">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:21"><expr pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:5">p</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:16">key_frame</name></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <literal type="number" pos:start="45:20" pos:end="45:20">1</literal></expr>;</expr_stmt>



    <switch pos:start="49:5" pos:end="405:5">switch <condition pos:start="49:12" pos:end="49:27">(<expr pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:17">avctx</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:26">pix_fmt</name></name></expr>)</condition> <block pos:start="49:29" pos:end="405:5">{<block_content pos:start="51:5" pos:end="403:14">

    <default pos:start="51:5" pos:end="51:12">default:</default>

        <return pos:start="53:9" pos:end="53:31">return <expr pos:start="53:16" pos:end="53:30"><call pos:start="53:16" pos:end="53:30"><name pos:start="53:16" pos:end="53:22">AVERROR</name><argument_list pos:start="53:23" pos:end="53:30">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="55:5" pos:end="55:29">case <expr pos:start="55:10" pos:end="55:28"><name pos:start="55:10" pos:end="55:28">AV_PIX_FMT_RGBA64BE</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:29"><expr pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:9">n</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <name pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:17">avctx</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:24">width</name></name> <operator pos:start="57:26" pos:end="57:26">*</operator> <literal type="number" pos:start="57:28" pos:end="57:28">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:21"><expr pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:18">components</name><operator pos:start="59:19" pos:end="59:19">=</operator><literal type="number" pos:start="59:20" pos:end="59:20">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:22"><expr pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:18">sample_len</name><operator pos:start="61:19" pos:end="61:19">=</operator><literal type="number" pos:start="61:20" pos:end="61:21">16</literal></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:21">goto <name pos:start="63:14" pos:end="63:20">do_read</name>;</goto>

    <case pos:start="65:5" pos:end="65:28">case <expr pos:start="65:10" pos:end="65:27"><name pos:start="65:10" pos:end="65:27">AV_PIX_FMT_RGB48BE</name></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="67:29"><expr pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:9">n</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <name pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:17">avctx</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:24">width</name></name> <operator pos:start="67:26" pos:end="67:26">*</operator> <literal type="number" pos:start="67:28" pos:end="67:28">6</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:21"><expr pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:18">components</name><operator pos:start="69:19" pos:end="69:19">=</operator><literal type="number" pos:start="69:20" pos:end="69:20">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:22"><expr pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:18">sample_len</name><operator pos:start="71:19" pos:end="71:19">=</operator><literal type="number" pos:start="71:20" pos:end="71:21">16</literal></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:21">goto <name pos:start="73:14" pos:end="73:20">do_read</name>;</goto>

    <case pos:start="75:5" pos:end="75:25">case <expr pos:start="75:10" pos:end="75:24"><name pos:start="75:10" pos:end="75:24">AV_PIX_FMT_RGBA</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:29"><expr pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:9">n</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <name pos:start="77:13" pos:end="77:24"><name pos:start="77:13" pos:end="77:17">avctx</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:24">width</name></name> <operator pos:start="77:26" pos:end="77:26">*</operator> <literal type="number" pos:start="77:28" pos:end="77:28">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:21"><expr pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:18">components</name><operator pos:start="79:19" pos:end="79:19">=</operator><literal type="number" pos:start="79:20" pos:end="79:20">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:21"><expr pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:18">sample_len</name><operator pos:start="81:19" pos:end="81:19">=</operator><literal type="number" pos:start="81:20" pos:end="81:20">8</literal></expr>;</expr_stmt>

        <goto pos:start="83:9" pos:end="83:21">goto <name pos:start="83:14" pos:end="83:20">do_read</name>;</goto>

    <case pos:start="85:5" pos:end="85:26">case <expr pos:start="85:10" pos:end="85:25"><name pos:start="85:10" pos:end="85:25">AV_PIX_FMT_RGB24</name></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:29"><expr pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:9">n</name> <operator pos:start="87:11" pos:end="87:11">=</operator> <name pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:17">avctx</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:24">width</name></name> <operator pos:start="87:26" pos:end="87:26">*</operator> <literal type="number" pos:start="87:28" pos:end="87:28">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:21"><expr pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:18">components</name><operator pos:start="89:19" pos:end="89:19">=</operator><literal type="number" pos:start="89:20" pos:end="89:20">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:21"><expr pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:18">sample_len</name><operator pos:start="91:19" pos:end="91:19">=</operator><literal type="number" pos:start="91:20" pos:end="91:20">8</literal></expr>;</expr_stmt>

        <goto pos:start="93:9" pos:end="93:21">goto <name pos:start="93:14" pos:end="93:20">do_read</name>;</goto>

    <case pos:start="95:5" pos:end="95:26">case <expr pos:start="95:10" pos:end="95:25"><name pos:start="95:10" pos:end="95:25">AV_PIX_FMT_GRAY8</name></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:25"><expr pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:9">n</name> <operator pos:start="97:11" pos:end="97:11">=</operator> <name pos:start="97:13" pos:end="97:24"><name pos:start="97:13" pos:end="97:17">avctx</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:24">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:21"><expr pos:start="99:9" pos:end="99:20"><name pos:start="99:9" pos:end="99:18">components</name><operator pos:start="99:19" pos:end="99:19">=</operator><literal type="number" pos:start="99:20" pos:end="99:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:21"><expr pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:18">sample_len</name><operator pos:start="101:19" pos:end="101:19">=</operator><literal type="number" pos:start="101:20" pos:end="101:20">8</literal></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="109:9"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:28">(<expr pos:start="103:13" pos:end="103:27"><name pos:start="103:13" pos:end="103:21"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:21">maxval</name></name> <operator pos:start="103:23" pos:end="103:23">&lt;</operator> <literal type="number" pos:start="103:25" pos:end="103:27">255</literal></expr>)</condition> <block pos:start="103:30" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:52">

            <expr_stmt pos:start="105:13" pos:end="105:24"><expr pos:start="105:13" pos:end="105:23"><name pos:start="105:13" pos:end="105:19">upgrade</name> <operator pos:start="105:21" pos:end="105:21">=</operator> <literal type="number" pos:start="105:23" pos:end="105:23">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:52"><expr pos:start="107:13" pos:end="107:51"><name pos:start="107:13" pos:end="107:19">maskval</name> <operator pos:start="107:21" pos:end="107:21">=</operator> <operator pos:start="107:23" pos:end="107:23">(</operator><literal type="number" pos:start="107:24" pos:end="107:24">2</literal> <operator pos:start="107:26" pos:end="107:27">&lt;&lt;</operator> <call pos:start="107:29" pos:end="107:46"><name pos:start="107:29" pos:end="107:35">av_log2</name><argument_list pos:start="107:36" pos:end="107:46">(<argument pos:start="107:37" pos:end="107:45"><expr pos:start="107:37" pos:end="107:45"><name pos:start="107:37" pos:end="107:45"><name pos:start="107:37" pos:end="107:37">s</name><operator pos:start="107:38" pos:end="107:39">-&gt;</operator><name pos:start="107:40" pos:end="107:45">maxval</name></name></expr></argument>)</argument_list></call><operator pos:start="107:47" pos:end="107:47">)</operator> <operator pos:start="107:49" pos:end="107:49">-</operator> <literal type="number" pos:start="107:51" pos:end="107:51">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="111:9" pos:end="111:21">goto <name pos:start="111:14" pos:end="111:20">do_read</name>;</goto>

    <case pos:start="113:5" pos:end="113:27">case <expr pos:start="113:10" pos:end="113:26"><name pos:start="113:10" pos:end="113:26">AV_PIX_FMT_GRAY8A</name></expr>:</case>

        <expr_stmt pos:start="115:9" pos:end="115:29"><expr pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:9">n</name> <operator pos:start="115:11" pos:end="115:11">=</operator> <name pos:start="115:13" pos:end="115:24"><name pos:start="115:13" pos:end="115:17">avctx</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:24">width</name></name> <operator pos:start="115:26" pos:end="115:26">*</operator> <literal type="number" pos:start="115:28" pos:end="115:28">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:21"><expr pos:start="117:9" pos:end="117:20"><name pos:start="117:9" pos:end="117:18">components</name><operator pos:start="117:19" pos:end="117:19">=</operator><literal type="number" pos:start="117:20" pos:end="117:20">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:21"><expr pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:18">sample_len</name><operator pos:start="119:19" pos:end="119:19">=</operator><literal type="number" pos:start="119:20" pos:end="119:20">8</literal></expr>;</expr_stmt>

        <goto pos:start="121:9" pos:end="121:21">goto <name pos:start="121:14" pos:end="121:20">do_read</name>;</goto>

    <case pos:start="123:5" pos:end="123:29">case <expr pos:start="123:10" pos:end="123:28"><name pos:start="123:10" pos:end="123:28">AV_PIX_FMT_GRAY16BE</name></expr>:</case>

    <case pos:start="125:5" pos:end="125:29">case <expr pos:start="125:10" pos:end="125:28"><name pos:start="125:10" pos:end="125:28">AV_PIX_FMT_GRAY16LE</name></expr>:</case>

        <expr_stmt pos:start="127:9" pos:end="127:29"><expr pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:9">n</name> <operator pos:start="127:11" pos:end="127:11">=</operator> <name pos:start="127:13" pos:end="127:24"><name pos:start="127:13" pos:end="127:17">avctx</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:24">width</name></name> <operator pos:start="127:26" pos:end="127:26">*</operator> <literal type="number" pos:start="127:28" pos:end="127:28">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:21"><expr pos:start="129:9" pos:end="129:20"><name pos:start="129:9" pos:end="129:18">components</name><operator pos:start="129:19" pos:end="129:19">=</operator><literal type="number" pos:start="129:20" pos:end="129:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:22"><expr pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:18">sample_len</name><operator pos:start="131:19" pos:end="131:19">=</operator><literal type="number" pos:start="131:20" pos:end="131:21">16</literal></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="139:9"><if pos:start="133:9" pos:end="139:9">if <condition pos:start="133:12" pos:end="133:30">(<expr pos:start="133:13" pos:end="133:29"><name pos:start="133:13" pos:end="133:21"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:21">maxval</name></name> <operator pos:start="133:23" pos:end="133:23">&lt;</operator> <literal type="number" pos:start="133:25" pos:end="133:29">65535</literal></expr>)</condition> <block pos:start="133:32" pos:end="139:9">{<block_content pos:start="135:13" pos:end="137:52">

            <expr_stmt pos:start="135:13" pos:end="135:24"><expr pos:start="135:13" pos:end="135:23"><name pos:start="135:13" pos:end="135:19">upgrade</name> <operator pos:start="135:21" pos:end="135:21">=</operator> <literal type="number" pos:start="135:23" pos:end="135:23">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:52"><expr pos:start="137:13" pos:end="137:51"><name pos:start="137:13" pos:end="137:19">maskval</name> <operator pos:start="137:21" pos:end="137:21">=</operator> <operator pos:start="137:23" pos:end="137:23">(</operator><literal type="number" pos:start="137:24" pos:end="137:24">2</literal> <operator pos:start="137:26" pos:end="137:27">&lt;&lt;</operator> <call pos:start="137:29" pos:end="137:46"><name pos:start="137:29" pos:end="137:35">av_log2</name><argument_list pos:start="137:36" pos:end="137:46">(<argument pos:start="137:37" pos:end="137:45"><expr pos:start="137:37" pos:end="137:45"><name pos:start="137:37" pos:end="137:45"><name pos:start="137:37" pos:end="137:37">s</name><operator pos:start="137:38" pos:end="137:39">-&gt;</operator><name pos:start="137:40" pos:end="137:45">maxval</name></name></expr></argument>)</argument_list></call><operator pos:start="137:47" pos:end="137:47">)</operator> <operator pos:start="137:49" pos:end="137:49">-</operator> <literal type="number" pos:start="137:51" pos:end="137:51">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="141:9" pos:end="141:21">goto <name pos:start="141:14" pos:end="141:20">do_read</name>;</goto>

    <case pos:start="143:5" pos:end="143:30">case <expr pos:start="143:10" pos:end="143:29"><name pos:start="143:10" pos:end="143:29">AV_PIX_FMT_MONOWHITE</name></expr>:</case>

    <case pos:start="145:5" pos:end="145:30">case <expr pos:start="145:10" pos:end="145:29"><name pos:start="145:10" pos:end="145:29">AV_PIX_FMT_MONOBLACK</name></expr>:</case>

        <expr_stmt pos:start="147:9" pos:end="147:36"><expr pos:start="147:9" pos:end="147:35"><name pos:start="147:9" pos:end="147:9">n</name> <operator pos:start="147:11" pos:end="147:11">=</operator> <operator pos:start="147:13" pos:end="147:13">(</operator><name pos:start="147:14" pos:end="147:25"><name pos:start="147:14" pos:end="147:18">avctx</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:25">width</name></name> <operator pos:start="147:27" pos:end="147:27">+</operator> <literal type="number" pos:start="147:29" pos:end="147:29">7</literal><operator pos:start="147:30" pos:end="147:30">)</operator> <operator pos:start="147:32" pos:end="147:33">&gt;&gt;</operator> <literal type="number" pos:start="147:35" pos:end="147:35">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:21"><expr pos:start="149:9" pos:end="149:20"><name pos:start="149:9" pos:end="149:18">components</name><operator pos:start="149:19" pos:end="149:19">=</operator><literal type="number" pos:start="149:20" pos:end="149:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:21"><expr pos:start="151:9" pos:end="151:20"><name pos:start="151:9" pos:end="151:18">sample_len</name><operator pos:start="151:19" pos:end="151:19">=</operator><literal type="number" pos:start="151:20" pos:end="151:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:20"><expr pos:start="153:9" pos:end="153:19"><name pos:start="153:9" pos:end="153:15">is_mono</name> <operator pos:start="153:17" pos:end="153:17">=</operator> <literal type="number" pos:start="153:19" pos:end="153:19">1</literal></expr>;</expr_stmt>

    <label pos:start="155:5" pos:end="155:12"><name pos:start="155:5" pos:end="155:11">do_read</name>:</label>

        <expr_stmt pos:start="157:9" pos:end="157:30"><expr pos:start="157:9" pos:end="157:29"><name pos:start="157:9" pos:end="157:11">ptr</name>      <operator pos:start="157:18" pos:end="157:18">=</operator> <name pos:start="157:20" pos:end="157:29"><name pos:start="157:20" pos:end="157:20">p</name><operator pos:start="157:21" pos:end="157:22">-&gt;</operator><name pos:start="157:23" pos:end="157:26">data</name><index pos:start="157:27" pos:end="157:29">[<expr pos:start="157:28" pos:end="157:28"><literal type="number" pos:start="157:28" pos:end="157:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:34"><expr pos:start="159:9" pos:end="159:33"><name pos:start="159:9" pos:end="159:16">linesize</name> <operator pos:start="159:18" pos:end="159:18">=</operator> <name pos:start="159:20" pos:end="159:33"><name pos:start="159:20" pos:end="159:20">p</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:30">linesize</name><index pos:start="159:31" pos:end="159:33">[<expr pos:start="159:32" pos:end="159:32"><literal type="number" pos:start="159:32" pos:end="159:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="161:9" pos:end="163:39"><if pos:start="161:9" pos:end="163:39">if <condition pos:start="161:12" pos:end="161:66">(<expr pos:start="161:13" pos:end="161:65"><name pos:start="161:13" pos:end="161:25"><name pos:start="161:13" pos:end="161:13">s</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:25">bytestream</name></name> <operator pos:start="161:27" pos:end="161:27">+</operator> <name pos:start="161:29" pos:end="161:29">n</name> <operator pos:start="161:31" pos:end="161:31">*</operator> <name pos:start="161:33" pos:end="161:45"><name pos:start="161:33" pos:end="161:37">avctx</name><operator pos:start="161:38" pos:end="161:39">-&gt;</operator><name pos:start="161:40" pos:end="161:45">height</name></name> <operator pos:start="161:47" pos:end="161:47">&gt;</operator> <name pos:start="161:49" pos:end="161:65"><name pos:start="161:49" pos:end="161:49">s</name><operator pos:start="161:50" pos:end="161:51">-&gt;</operator><name pos:start="161:52" pos:end="161:65">bytestream_end</name></name></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:39"><block_content pos:start="163:13" pos:end="163:39">

            <return pos:start="163:13" pos:end="163:39">return <expr pos:start="163:20" pos:end="163:38"><name pos:start="163:20" pos:end="163:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="165:9" pos:end="255:9"><if pos:start="165:9" pos:end="219:9">if<condition pos:start="165:11" pos:end="165:50">(<expr pos:start="165:12" pos:end="165:49"><name pos:start="165:12" pos:end="165:18"><name pos:start="165:12" pos:end="165:12">s</name><operator pos:start="165:13" pos:end="165:14">-&gt;</operator><name pos:start="165:15" pos:end="165:18">type</name></name> <operator pos:start="165:20" pos:end="165:20">&lt;</operator> <literal type="number" pos:start="165:22" pos:end="165:22">4</literal> <operator pos:start="165:24" pos:end="165:25">||</operator> <operator pos:start="165:27" pos:end="165:27">(</operator><name pos:start="165:28" pos:end="165:34">is_mono</name> <operator pos:start="165:36" pos:end="165:37">&amp;&amp;</operator> <name pos:start="165:39" pos:end="165:45"><name pos:start="165:39" pos:end="165:39">s</name><operator pos:start="165:40" pos:end="165:41">-&gt;</operator><name pos:start="165:42" pos:end="165:45">type</name></name><operator pos:start="165:46" pos:end="165:47">==</operator><literal type="number" pos:start="165:48" pos:end="165:48">7</literal><operator pos:start="165:49" pos:end="165:49">)</operator></expr>)</condition><block pos:start="165:51" pos:end="219:9">{<block_content pos:start="167:13" pos:end="217:13">

            <for pos:start="167:13" pos:end="217:13">for <control pos:start="167:17" pos:end="167:43">(<init pos:start="167:18" pos:end="167:21"><expr pos:start="167:18" pos:end="167:20"><name pos:start="167:18" pos:end="167:18">i</name><operator pos:start="167:19" pos:end="167:19">=</operator><literal type="number" pos:start="167:20" pos:end="167:20">0</literal></expr>;</init> <condition pos:start="167:23" pos:end="167:38"><expr pos:start="167:23" pos:end="167:37"><name pos:start="167:23" pos:end="167:23">i</name><operator pos:start="167:24" pos:end="167:24">&lt;</operator><name pos:start="167:25" pos:end="167:37"><name pos:start="167:25" pos:end="167:29">avctx</name><operator pos:start="167:30" pos:end="167:31">-&gt;</operator><name pos:start="167:32" pos:end="167:37">height</name></name></expr>;</condition> <incr pos:start="167:40" pos:end="167:42"><expr pos:start="167:40" pos:end="167:42"><name pos:start="167:40" pos:end="167:40">i</name><operator pos:start="167:41" pos:end="167:42">++</operator></expr></incr>)</control> <block pos:start="167:45" pos:end="217:13">{<block_content pos:start="169:17" pos:end="215:31">

                <decl_stmt pos:start="169:17" pos:end="169:33"><decl pos:start="169:17" pos:end="169:32"><type pos:start="169:17" pos:end="169:29"><name pos:start="169:17" pos:end="169:29">PutBitContext</name></type> <name pos:start="169:31" pos:end="169:32">pb</name></decl>;</decl_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:50"><expr pos:start="171:17" pos:end="171:49"><call pos:start="171:17" pos:end="171:49"><name pos:start="171:17" pos:end="171:29">init_put_bits</name><argument_list pos:start="171:30" pos:end="171:49">(<argument pos:start="171:31" pos:end="171:33"><expr pos:start="171:31" pos:end="171:33"><operator pos:start="171:31" pos:end="171:31">&amp;</operator><name pos:start="171:32" pos:end="171:33">pb</name></expr></argument>, <argument pos:start="171:36" pos:end="171:38"><expr pos:start="171:36" pos:end="171:38"><name pos:start="171:36" pos:end="171:38">ptr</name></expr></argument>, <argument pos:start="171:41" pos:end="171:48"><expr pos:start="171:41" pos:end="171:48"><name pos:start="171:41" pos:end="171:48">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="173:17" pos:end="211:17">for<control pos:start="173:20" pos:end="173:58">(<init pos:start="173:21" pos:end="173:24"><expr pos:start="173:21" pos:end="173:23"><name pos:start="173:21" pos:end="173:21">j</name><operator pos:start="173:22" pos:end="173:22">=</operator><literal type="number" pos:start="173:23" pos:end="173:23">0</literal></expr>;</init> <condition pos:start="173:26" pos:end="173:53"><expr pos:start="173:26" pos:end="173:52"><name pos:start="173:26" pos:end="173:26">j</name><operator pos:start="173:27" pos:end="173:27">&lt;</operator><name pos:start="173:28" pos:end="173:39"><name pos:start="173:28" pos:end="173:32">avctx</name><operator pos:start="173:33" pos:end="173:34">-&gt;</operator><name pos:start="173:35" pos:end="173:39">width</name></name> <operator pos:start="173:41" pos:end="173:41">*</operator> <name pos:start="173:43" pos:end="173:52">components</name></expr>;</condition> <incr pos:start="173:55" pos:end="173:57"><expr pos:start="173:55" pos:end="173:57"><name pos:start="173:55" pos:end="173:55">j</name><operator pos:start="173:56" pos:end="173:57">++</operator></expr></incr>)</control><block pos:start="173:59" pos:end="211:17">{<block_content pos:start="175:21" pos:end="209:98">

                    <decl_stmt pos:start="175:21" pos:end="175:37"><decl pos:start="175:21" pos:end="175:36"><type pos:start="175:21" pos:end="175:32"><name pos:start="175:21" pos:end="175:28">unsigned</name> <name pos:start="175:30" pos:end="175:32">int</name></type> <name pos:start="175:34" pos:end="175:34">c</name><init pos:start="175:35" pos:end="175:36">=<expr pos:start="175:36" pos:end="175:36"><literal type="number" pos:start="175:36" pos:end="175:36">0</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="177:21" pos:end="177:28"><decl pos:start="177:21" pos:end="177:27"><type pos:start="177:21" pos:end="177:23"><name pos:start="177:21" pos:end="177:23">int</name></type> <name pos:start="177:25" pos:end="177:25">v</name><init pos:start="177:26" pos:end="177:27">=<expr pos:start="177:27" pos:end="177:27"><literal type="number" pos:start="177:27" pos:end="177:27">0</literal></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="179:21" pos:end="183:40"><if pos:start="179:21" pos:end="183:40">if<condition pos:start="179:23" pos:end="179:35">(<expr pos:start="179:24" pos:end="179:34"><name pos:start="179:24" pos:end="179:30"><name pos:start="179:24" pos:end="179:24">s</name><operator pos:start="179:25" pos:end="179:26">-&gt;</operator><name pos:start="179:27" pos:end="179:30">type</name></name> <operator pos:start="179:32" pos:end="179:32">&lt;</operator> <literal type="number" pos:start="179:34" pos:end="179:34">4</literal></expr>)</condition><block type="pseudo" pos:start="181:21" pos:end="183:40"><block_content pos:start="181:21" pos:end="183:40">

                    <while pos:start="181:21" pos:end="183:40">while<condition pos:start="181:26" pos:end="181:111">(<expr pos:start="181:27" pos:end="181:110"><name pos:start="181:27" pos:end="181:39"><name pos:start="181:27" pos:end="181:27">s</name><operator pos:start="181:28" pos:end="181:29">-&gt;</operator><name pos:start="181:30" pos:end="181:39">bytestream</name></name> <operator pos:start="181:41" pos:end="181:41">&lt;</operator> <name pos:start="181:43" pos:end="181:59"><name pos:start="181:43" pos:end="181:43">s</name><operator pos:start="181:44" pos:end="181:45">-&gt;</operator><name pos:start="181:46" pos:end="181:59">bytestream_end</name></name> <operator pos:start="181:61" pos:end="181:62">&amp;&amp;</operator> <operator pos:start="181:64" pos:end="181:64">(</operator><operator pos:start="181:65" pos:end="181:65">*</operator><name pos:start="181:66" pos:end="181:78"><name pos:start="181:66" pos:end="181:66">s</name><operator pos:start="181:67" pos:end="181:68">-&gt;</operator><name pos:start="181:69" pos:end="181:78">bytestream</name></name> <operator pos:start="181:80" pos:end="181:80">&lt;</operator> <literal type="char" pos:start="181:82" pos:end="181:84">'0'</literal> <operator pos:start="181:86" pos:end="181:87">||</operator> <operator pos:start="181:89" pos:end="181:89">*</operator><name pos:start="181:90" pos:end="181:102"><name pos:start="181:90" pos:end="181:90">s</name><operator pos:start="181:91" pos:end="181:92">-&gt;</operator><name pos:start="181:93" pos:end="181:102">bytestream</name></name> <operator pos:start="181:104" pos:end="181:104">&gt;</operator> <literal type="char" pos:start="181:106" pos:end="181:108">'9'</literal> <operator pos:start="181:110" pos:end="181:110">)</operator></expr>)</condition><block type="pseudo" pos:start="183:25" pos:end="183:40"><block_content pos:start="183:25" pos:end="183:40">

                        <expr_stmt pos:start="183:25" pos:end="183:40"><expr pos:start="183:25" pos:end="183:39"><name pos:start="183:25" pos:end="183:37"><name pos:start="183:25" pos:end="183:25">s</name><operator pos:start="183:26" pos:end="183:27">-&gt;</operator><name pos:start="183:28" pos:end="183:37">bytestream</name></name><operator pos:start="183:38" pos:end="183:39">++</operator></expr>;</expr_stmt></block_content></block></while></block_content></block></if></if_stmt>

                    <if_stmt pos:start="185:21" pos:end="187:51"><if pos:start="185:21" pos:end="187:51">if<condition pos:start="185:23" pos:end="185:58">(<expr pos:start="185:24" pos:end="185:57"><name pos:start="185:24" pos:end="185:36"><name pos:start="185:24" pos:end="185:24">s</name><operator pos:start="185:25" pos:end="185:26">-&gt;</operator><name pos:start="185:27" pos:end="185:36">bytestream</name></name> <operator pos:start="185:38" pos:end="185:39">&gt;=</operator> <name pos:start="185:41" pos:end="185:57"><name pos:start="185:41" pos:end="185:41">s</name><operator pos:start="185:42" pos:end="185:43">-&gt;</operator><name pos:start="185:44" pos:end="185:57">bytestream_end</name></name></expr>)</condition><block type="pseudo" pos:start="187:25" pos:end="187:51"><block_content pos:start="187:25" pos:end="187:51">

                        <return pos:start="187:25" pos:end="187:51">return <expr pos:start="187:32" pos:end="187:50"><name pos:start="187:32" pos:end="187:50">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                    <if_stmt pos:start="189:21" pos:end="207:21"><if pos:start="189:21" pos:end="195:21">if <condition pos:start="189:24" pos:end="189:32">(<expr pos:start="189:25" pos:end="189:31"><name pos:start="189:25" pos:end="189:31">is_mono</name></expr>)</condition> <block pos:start="189:34" pos:end="195:21">{<block_content pos:start="193:25" pos:end="193:49">

                        <comment type="block" pos:start="191:25" pos:end="191:49">/* read a single digit */</comment>

                        <expr_stmt pos:start="193:25" pos:end="193:49"><expr pos:start="193:25" pos:end="193:48"><name pos:start="193:25" pos:end="193:25">v</name> <operator pos:start="193:27" pos:end="193:27">=</operator> <operator pos:start="193:29" pos:end="193:29">(</operator><operator pos:start="193:30" pos:end="193:30">*</operator><name pos:start="193:31" pos:end="193:43"><name pos:start="193:31" pos:end="193:31">s</name><operator pos:start="193:32" pos:end="193:33">-&gt;</operator><name pos:start="193:34" pos:end="193:43">bytestream</name></name><operator pos:start="193:44" pos:end="193:45">++</operator><operator pos:start="193:46" pos:end="193:46">)</operator><operator pos:start="193:47" pos:end="193:47">&amp;</operator><literal type="number" pos:start="193:48" pos:end="193:48">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="195:23" pos:end="207:21">else <block pos:start="195:28" pos:end="207:21">{<block_content pos:start="199:25" pos:end="205:41">

                        <comment type="block" pos:start="197:25" pos:end="197:55">/* read a sequence of digits */</comment>

                        <do pos:start="199:25" pos:end="205:41">do <block pos:start="199:28" pos:end="205:25">{<block_content pos:start="201:29" pos:end="203:57">

                            <expr_stmt pos:start="201:29" pos:end="201:41"><expr pos:start="201:29" pos:end="201:40"><name pos:start="201:29" pos:end="201:29">v</name> <operator pos:start="201:31" pos:end="201:31">=</operator> <literal type="number" pos:start="201:33" pos:end="201:34">10</literal><operator pos:start="201:35" pos:end="201:35">*</operator><name pos:start="201:36" pos:end="201:36">v</name> <operator pos:start="201:38" pos:end="201:38">+</operator> <name pos:start="201:40" pos:end="201:40">c</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="203:29" pos:end="203:57"><expr pos:start="203:29" pos:end="203:56"><name pos:start="203:29" pos:end="203:29">c</name> <operator pos:start="203:31" pos:end="203:31">=</operator> <operator pos:start="203:33" pos:end="203:33">(</operator><operator pos:start="203:34" pos:end="203:34">*</operator><name pos:start="203:35" pos:end="203:47"><name pos:start="203:35" pos:end="203:35">s</name><operator pos:start="203:36" pos:end="203:37">-&gt;</operator><name pos:start="203:38" pos:end="203:47">bytestream</name></name><operator pos:start="203:48" pos:end="203:49">++</operator><operator pos:start="203:50" pos:end="203:50">)</operator> <operator pos:start="203:52" pos:end="203:52">-</operator> <literal type="char" pos:start="203:54" pos:end="203:56">'0'</literal></expr>;</expr_stmt>

                        </block_content>}</block> while <condition pos:start="205:33" pos:end="205:40">(<expr pos:start="205:34" pos:end="205:39"><name pos:start="205:34" pos:end="205:34">c</name> <operator pos:start="205:36" pos:end="205:37">&lt;=</operator> <literal type="number" pos:start="205:39" pos:end="205:39">9</literal></expr>)</condition>;</do>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="209:21" pos:end="209:98"><expr pos:start="209:21" pos:end="209:97"><call pos:start="209:21" pos:end="209:97"><name pos:start="209:21" pos:end="209:28">put_bits</name><argument_list pos:start="209:29" pos:end="209:97">(<argument pos:start="209:30" pos:end="209:32"><expr pos:start="209:30" pos:end="209:32"><operator pos:start="209:30" pos:end="209:30">&amp;</operator><name pos:start="209:31" pos:end="209:32">pb</name></expr></argument>, <argument pos:start="209:35" pos:end="209:44"><expr pos:start="209:35" pos:end="209:44"><name pos:start="209:35" pos:end="209:44">sample_len</name></expr></argument>, <argument pos:start="209:47" pos:end="209:96"><expr pos:start="209:47" pos:end="209:96"><operator pos:start="209:47" pos:end="209:47">(</operator><operator pos:start="209:48" pos:end="209:48">(</operator><operator pos:start="209:49" pos:end="209:49">(</operator><literal type="number" pos:start="209:50" pos:end="209:50">1</literal><operator pos:start="209:51" pos:end="209:52">&lt;&lt;</operator><name pos:start="209:53" pos:end="209:62">sample_len</name><operator pos:start="209:63" pos:end="209:63">)</operator><operator pos:start="209:64" pos:end="209:64">-</operator><literal type="number" pos:start="209:65" pos:end="209:65">1</literal><operator pos:start="209:66" pos:end="209:66">)</operator><operator pos:start="209:67" pos:end="209:67">*</operator><name pos:start="209:68" pos:end="209:68">v</name> <operator pos:start="209:70" pos:end="209:70">+</operator> <operator pos:start="209:72" pos:end="209:72">(</operator><name pos:start="209:73" pos:end="209:81"><name pos:start="209:73" pos:end="209:73">s</name><operator pos:start="209:74" pos:end="209:75">-&gt;</operator><name pos:start="209:76" pos:end="209:81">maxval</name></name><operator pos:start="209:82" pos:end="209:83">&gt;&gt;</operator><literal type="number" pos:start="209:84" pos:end="209:84">1</literal><operator pos:start="209:85" pos:end="209:85">)</operator><operator pos:start="209:86" pos:end="209:86">)</operator><operator pos:start="209:87" pos:end="209:87">/</operator><name pos:start="209:88" pos:end="209:96"><name pos:start="209:88" pos:end="209:88">s</name><operator pos:start="209:89" pos:end="209:90">-&gt;</operator><name pos:start="209:91" pos:end="209:96">maxval</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="213:17" pos:end="213:36"><expr pos:start="213:17" pos:end="213:35"><call pos:start="213:17" pos:end="213:35"><name pos:start="213:17" pos:end="213:30">flush_put_bits</name><argument_list pos:start="213:31" pos:end="213:35">(<argument pos:start="213:32" pos:end="213:34"><expr pos:start="213:32" pos:end="213:34"><operator pos:start="213:32" pos:end="213:32">&amp;</operator><name pos:start="213:33" pos:end="213:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:31"><expr pos:start="215:17" pos:end="215:30"><name pos:start="215:17" pos:end="215:19">ptr</name><operator pos:start="215:20" pos:end="215:21">+=</operator> <name pos:start="215:23" pos:end="215:30">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if><else pos:start="219:10" pos:end="255:9">else<block pos:start="219:14" pos:end="255:9">{<block_content pos:start="221:9" pos:end="253:9">

        <for pos:start="221:9" pos:end="253:9">for <control pos:start="221:13" pos:end="221:43">(<init pos:start="221:14" pos:end="221:19"><expr pos:start="221:14" pos:end="221:18"><name pos:start="221:14" pos:end="221:14">i</name> <operator pos:start="221:16" pos:end="221:16">=</operator> <literal type="number" pos:start="221:18" pos:end="221:18">0</literal></expr>;</init> <condition pos:start="221:21" pos:end="221:38"><expr pos:start="221:21" pos:end="221:37"><name pos:start="221:21" pos:end="221:21">i</name> <operator pos:start="221:23" pos:end="221:23">&lt;</operator> <name pos:start="221:25" pos:end="221:37"><name pos:start="221:25" pos:end="221:29">avctx</name><operator pos:start="221:30" pos:end="221:31">-&gt;</operator><name pos:start="221:32" pos:end="221:37">height</name></name></expr>;</condition> <incr pos:start="221:40" pos:end="221:42"><expr pos:start="221:40" pos:end="221:42"><name pos:start="221:40" pos:end="221:40">i</name><operator pos:start="221:41" pos:end="221:42">++</operator></expr></incr>)</control> <block pos:start="221:45" pos:end="253:9">{<block_content pos:start="223:13" pos:end="251:38">

            <if_stmt pos:start="223:13" pos:end="247:13"><if pos:start="223:13" pos:end="225:46">if <condition pos:start="223:16" pos:end="223:25">(<expr pos:start="223:17" pos:end="223:24"><operator pos:start="223:17" pos:end="223:17">!</operator><name pos:start="223:18" pos:end="223:24">upgrade</name></expr>)</condition><block type="pseudo" pos:start="225:17" pos:end="225:46"><block_content pos:start="225:17" pos:end="225:46">

                <expr_stmt pos:start="225:17" pos:end="225:46"><expr pos:start="225:17" pos:end="225:45"><call pos:start="225:17" pos:end="225:45"><name pos:start="225:17" pos:end="225:22">memcpy</name><argument_list pos:start="225:23" pos:end="225:45">(<argument pos:start="225:24" pos:end="225:26"><expr pos:start="225:24" pos:end="225:26"><name pos:start="225:24" pos:end="225:26">ptr</name></expr></argument>, <argument pos:start="225:29" pos:end="225:41"><expr pos:start="225:29" pos:end="225:41"><name pos:start="225:29" pos:end="225:41"><name pos:start="225:29" pos:end="225:29">s</name><operator pos:start="225:30" pos:end="225:31">-&gt;</operator><name pos:start="225:32" pos:end="225:41">bytestream</name></name></expr></argument>, <argument pos:start="225:44" pos:end="225:44"><expr pos:start="225:44" pos:end="225:44"><name pos:start="225:44" pos:end="225:44">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="227:13" pos:end="235:13">else if <condition pos:start="227:21" pos:end="227:34">(<expr pos:start="227:22" pos:end="227:33"><name pos:start="227:22" pos:end="227:28">upgrade</name> <operator pos:start="227:30" pos:end="227:31">==</operator> <literal type="number" pos:start="227:33" pos:end="227:33">1</literal></expr>)</condition> <block pos:start="227:36" pos:end="235:13">{<block_content pos:start="229:17" pos:end="233:74">

                <decl_stmt pos:start="229:17" pos:end="229:76"><decl pos:start="229:17" pos:end="229:30"><type pos:start="229:17" pos:end="229:28"><name pos:start="229:17" pos:end="229:24">unsigned</name> <name pos:start="229:26" pos:end="229:28">int</name></type> <name pos:start="229:30" pos:end="229:30">j</name></decl>, <decl pos:start="229:33" pos:end="229:75"><type ref="prev" pos:start="229:17" pos:end="229:28"/><name pos:start="229:33" pos:end="229:33">f</name> <init pos:start="229:35" pos:end="229:75">= <expr pos:start="229:37" pos:end="229:75"><operator pos:start="229:37" pos:end="229:37">(</operator><literal type="number" pos:start="229:38" pos:end="229:40">255</literal> <operator pos:start="229:42" pos:end="229:42">*</operator> <literal type="number" pos:start="229:44" pos:end="229:48">128</literal> <operator pos:start="229:48" pos:end="229:48">+</operator> <name pos:start="229:50" pos:end="229:58"><name pos:start="229:50" pos:end="229:50">s</name><operator pos:start="229:51" pos:end="229:52">-&gt;</operator><name pos:start="229:53" pos:end="229:58">maxval</name></name> <operator pos:start="229:60" pos:end="229:60">/</operator> <literal type="number" pos:start="229:62" pos:end="229:62">2</literal><operator pos:start="229:63" pos:end="229:63">)</operator> <operator pos:start="229:65" pos:end="229:65">/</operator> <name pos:start="229:67" pos:end="229:75"><name pos:start="229:67" pos:end="229:67">s</name><operator pos:start="229:68" pos:end="229:69">-&gt;</operator><name pos:start="229:70" pos:end="229:75">maxval</name></name></expr></init></decl>;</decl_stmt>

                <for pos:start="231:17" pos:end="233:74">for <control pos:start="231:21" pos:end="231:39">(<init pos:start="231:22" pos:end="231:27"><expr pos:start="231:22" pos:end="231:26"><name pos:start="231:22" pos:end="231:22">j</name> <operator pos:start="231:24" pos:end="231:24">=</operator> <literal type="number" pos:start="231:26" pos:end="231:26">0</literal></expr>;</init> <condition pos:start="231:29" pos:end="231:34"><expr pos:start="231:29" pos:end="231:33"><name pos:start="231:29" pos:end="231:29">j</name> <operator pos:start="231:31" pos:end="231:31">&lt;</operator> <name pos:start="231:33" pos:end="231:33">n</name></expr>;</condition> <incr pos:start="231:36" pos:end="231:38"><expr pos:start="231:36" pos:end="231:38"><name pos:start="231:36" pos:end="231:36">j</name><operator pos:start="231:37" pos:end="231:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="233:21" pos:end="233:74"><block_content pos:start="233:21" pos:end="233:74">

                    <expr_stmt pos:start="233:21" pos:end="233:74"><expr pos:start="233:21" pos:end="233:73"><name pos:start="233:21" pos:end="233:26"><name pos:start="233:21" pos:end="233:23">ptr</name><index pos:start="233:24" pos:end="233:26">[<expr pos:start="233:25" pos:end="233:25"><name pos:start="233:25" pos:end="233:25">j</name></expr>]</index></name> <operator pos:start="233:28" pos:end="233:28">=</operator> <operator pos:start="233:30" pos:end="233:30">(</operator><operator pos:start="233:31" pos:end="233:31">(</operator><name pos:start="233:32" pos:end="233:47"><name pos:start="233:32" pos:end="233:32">s</name><operator pos:start="233:33" pos:end="233:34">-&gt;</operator><name pos:start="233:35" pos:end="233:44">bytestream</name><index pos:start="233:45" pos:end="233:47">[<expr pos:start="233:46" pos:end="233:46"><name pos:start="233:46" pos:end="233:46">j</name></expr>]</index></name> <operator pos:start="233:49" pos:end="233:49">&amp;</operator> <name pos:start="233:51" pos:end="233:57">maskval</name><operator pos:start="233:58" pos:end="233:58">)</operator> <operator pos:start="233:60" pos:end="233:60">*</operator> <name pos:start="233:62" pos:end="233:62">f</name> <operator pos:start="233:64" pos:end="233:64">+</operator> <literal type="number" pos:start="233:66" pos:end="233:67">64</literal><operator pos:start="233:68" pos:end="233:68">)</operator> <operator pos:start="233:70" pos:end="233:71">&gt;&gt;</operator> <literal type="number" pos:start="233:73" pos:end="233:73">7</literal></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if> <if type="elseif" pos:start="235:15" pos:end="247:13">else if <condition pos:start="235:23" pos:end="235:36">(<expr pos:start="235:24" pos:end="235:35"><name pos:start="235:24" pos:end="235:30">upgrade</name> <operator pos:start="235:32" pos:end="235:33">==</operator> <literal type="number" pos:start="235:35" pos:end="235:35">2</literal></expr>)</condition> <block pos:start="235:38" pos:end="247:13">{<block_content pos:start="237:17" pos:end="245:17">

                <decl_stmt pos:start="237:17" pos:end="237:83"><decl pos:start="237:17" pos:end="237:30"><type pos:start="237:17" pos:end="237:28"><name pos:start="237:17" pos:end="237:24">unsigned</name> <name pos:start="237:26" pos:end="237:28">int</name></type> <name pos:start="237:30" pos:end="237:30">j</name></decl>, <decl pos:start="237:33" pos:end="237:33"><type ref="prev" pos:start="237:17" pos:end="237:28"/><name pos:start="237:33" pos:end="237:33">v</name></decl>, <decl pos:start="237:36" pos:end="237:82"><type ref="prev" pos:start="237:17" pos:end="237:28"/><name pos:start="237:36" pos:end="237:36">f</name> <init pos:start="237:38" pos:end="237:82">= <expr pos:start="237:40" pos:end="237:82"><operator pos:start="237:40" pos:end="237:40">(</operator><literal type="number" pos:start="237:41" pos:end="237:45">65535</literal> <operator pos:start="237:47" pos:end="237:47">*</operator> <literal type="number" pos:start="237:49" pos:end="237:55">32768</literal> <operator pos:start="237:55" pos:end="237:55">+</operator> <name pos:start="237:57" pos:end="237:65"><name pos:start="237:57" pos:end="237:57">s</name><operator pos:start="237:58" pos:end="237:59">-&gt;</operator><name pos:start="237:60" pos:end="237:65">maxval</name></name> <operator pos:start="237:67" pos:end="237:67">/</operator> <literal type="number" pos:start="237:69" pos:end="237:69">2</literal><operator pos:start="237:70" pos:end="237:70">)</operator> <operator pos:start="237:72" pos:end="237:72">/</operator> <name pos:start="237:74" pos:end="237:82"><name pos:start="237:74" pos:end="237:74">s</name><operator pos:start="237:75" pos:end="237:76">-&gt;</operator><name pos:start="237:77" pos:end="237:82">maxval</name></name></expr></init></decl>;</decl_stmt>

                <for pos:start="239:17" pos:end="245:17">for <control pos:start="239:21" pos:end="239:43">(<init pos:start="239:22" pos:end="239:27"><expr pos:start="239:22" pos:end="239:26"><name pos:start="239:22" pos:end="239:22">j</name> <operator pos:start="239:24" pos:end="239:24">=</operator> <literal type="number" pos:start="239:26" pos:end="239:26">0</literal></expr>;</init> <condition pos:start="239:29" pos:end="239:38"><expr pos:start="239:29" pos:end="239:37"><name pos:start="239:29" pos:end="239:29">j</name> <operator pos:start="239:31" pos:end="239:31">&lt;</operator> <name pos:start="239:33" pos:end="239:33">n</name> <operator pos:start="239:35" pos:end="239:35">/</operator> <literal type="number" pos:start="239:37" pos:end="239:37">2</literal></expr>;</condition> <incr pos:start="239:40" pos:end="239:42"><expr pos:start="239:40" pos:end="239:42"><name pos:start="239:40" pos:end="239:40">j</name><operator pos:start="239:41" pos:end="239:42">++</operator></expr></incr>)</control> <block pos:start="239:45" pos:end="245:17">{<block_content pos:start="241:21" pos:end="243:65">

                    <expr_stmt pos:start="241:21" pos:end="241:77"><expr pos:start="241:21" pos:end="241:76"><name pos:start="241:21" pos:end="241:21">v</name> <operator pos:start="241:23" pos:end="241:23">=</operator> <call pos:start="241:25" pos:end="241:66"><name pos:start="241:25" pos:end="241:34">av_be2ne16</name><argument_list pos:start="241:35" pos:end="241:66">(<argument pos:start="241:36" pos:end="241:65"><expr pos:start="241:36" pos:end="241:65"><operator pos:start="241:36" pos:end="241:36">(</operator><operator pos:start="241:37" pos:end="241:37">(</operator><name pos:start="241:38" pos:end="241:45">uint16_t</name> <operator pos:start="241:47" pos:end="241:47">*</operator><operator pos:start="241:48" pos:end="241:48">)</operator><name pos:start="241:49" pos:end="241:61"><name pos:start="241:49" pos:end="241:49">s</name><operator pos:start="241:50" pos:end="241:51">-&gt;</operator><name pos:start="241:52" pos:end="241:61">bytestream</name></name><operator pos:start="241:62" pos:end="241:62">)</operator><index pos:start="241:63" pos:end="241:65">[<expr pos:start="241:64" pos:end="241:64"><name pos:start="241:64" pos:end="241:64">j</name></expr>]</index></expr></argument>)</argument_list></call> <operator pos:start="241:68" pos:end="241:68">&amp;</operator> <name pos:start="241:70" pos:end="241:76">maskval</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="243:21" pos:end="243:65"><expr pos:start="243:21" pos:end="243:64"><operator pos:start="243:21" pos:end="243:21">(</operator><operator pos:start="243:22" pos:end="243:22">(</operator><name pos:start="243:23" pos:end="243:30">uint16_t</name> <operator pos:start="243:32" pos:end="243:32">*</operator><operator pos:start="243:33" pos:end="243:33">)</operator><name pos:start="243:34" pos:end="243:36">ptr</name><operator pos:start="243:37" pos:end="243:37">)</operator><index pos:start="243:38" pos:end="243:40">[<expr pos:start="243:39" pos:end="243:39"><name pos:start="243:39" pos:end="243:39">j</name></expr>]</index> <operator pos:start="243:42" pos:end="243:42">=</operator> <operator pos:start="243:44" pos:end="243:44">(</operator><name pos:start="243:45" pos:end="243:45">v</name> <operator pos:start="243:47" pos:end="243:47">*</operator> <name pos:start="243:49" pos:end="243:49">f</name> <operator pos:start="243:51" pos:end="243:51">+</operator> <literal type="number" pos:start="243:53" pos:end="243:57">16384</literal><operator pos:start="243:58" pos:end="243:58">)</operator> <operator pos:start="243:60" pos:end="243:61">&gt;&gt;</operator> <literal type="number" pos:start="243:63" pos:end="243:64">15</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:31"><expr pos:start="249:13" pos:end="249:30"><name pos:start="249:13" pos:end="249:25"><name pos:start="249:13" pos:end="249:13">s</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:25">bytestream</name></name> <operator pos:start="249:27" pos:end="249:28">+=</operator> <name pos:start="249:30" pos:end="249:30">n</name></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:38"><expr pos:start="251:13" pos:end="251:37"><name pos:start="251:13" pos:end="251:15">ptr</name>           <operator pos:start="251:27" pos:end="251:28">+=</operator> <name pos:start="251:30" pos:end="251:37">linesize</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <break pos:start="257:9" pos:end="257:14">break;</break>

    <case pos:start="259:5" pos:end="259:28">case <expr pos:start="259:10" pos:end="259:27"><name pos:start="259:10" pos:end="259:27">AV_PIX_FMT_YUV420P</name></expr>:</case>

    <case pos:start="261:5" pos:end="261:31">case <expr pos:start="261:10" pos:end="261:30"><name pos:start="261:10" pos:end="261:30">AV_PIX_FMT_YUV420P9BE</name></expr>:</case>

    <case pos:start="263:5" pos:end="263:32">case <expr pos:start="263:10" pos:end="263:31"><name pos:start="263:10" pos:end="263:31">AV_PIX_FMT_YUV420P10BE</name></expr>:</case>

        <block pos:start="265:9" pos:end="319:9">{<block_content pos:start="267:13" pos:end="317:13">

            <decl_stmt pos:start="267:13" pos:end="267:39"><decl pos:start="267:13" pos:end="267:31"><type pos:start="267:13" pos:end="267:27"><name pos:start="267:13" pos:end="267:20">unsigned</name> <name pos:start="267:22" pos:end="267:25">char</name> <modifier pos:start="267:27" pos:end="267:27">*</modifier></type><name pos:start="267:28" pos:end="267:31">ptr1</name></decl>, <decl pos:start="267:34" pos:end="267:38"><type ref="prev" pos:start="267:13" pos:end="267:27"><modifier pos:start="267:34" pos:end="267:34">*</modifier></type><name pos:start="267:35" pos:end="267:38">ptr2</name></decl>;</decl_stmt>



            <expr_stmt pos:start="271:13" pos:end="271:36"><expr pos:start="271:13" pos:end="271:35"><name pos:start="271:13" pos:end="271:13">n</name>        <operator pos:start="271:22" pos:end="271:22">=</operator> <name pos:start="271:24" pos:end="271:35"><name pos:start="271:24" pos:end="271:28">avctx</name><operator pos:start="271:29" pos:end="271:30">-&gt;</operator><name pos:start="271:31" pos:end="271:35">width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:34"><expr pos:start="273:13" pos:end="273:33"><name pos:start="273:13" pos:end="273:15">ptr</name>      <operator pos:start="273:22" pos:end="273:22">=</operator> <name pos:start="273:24" pos:end="273:33"><name pos:start="273:24" pos:end="273:24">p</name><operator pos:start="273:25" pos:end="273:26">-&gt;</operator><name pos:start="273:27" pos:end="273:30">data</name><index pos:start="273:31" pos:end="273:33">[<expr pos:start="273:32" pos:end="273:32"><literal type="number" pos:start="273:32" pos:end="273:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:38"><expr pos:start="275:13" pos:end="275:37"><name pos:start="275:13" pos:end="275:20">linesize</name> <operator pos:start="275:22" pos:end="275:22">=</operator> <name pos:start="275:24" pos:end="275:37"><name pos:start="275:24" pos:end="275:24">p</name><operator pos:start="275:25" pos:end="275:26">-&gt;</operator><name pos:start="275:27" pos:end="275:34">linesize</name><index pos:start="275:35" pos:end="275:37">[<expr pos:start="275:36" pos:end="275:36"><literal type="number" pos:start="275:36" pos:end="275:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="277:13" pos:end="279:23"><if pos:start="277:13" pos:end="279:23">if <condition pos:start="277:16" pos:end="277:33">(<expr pos:start="277:17" pos:end="277:32"><name pos:start="277:17" pos:end="277:25"><name pos:start="277:17" pos:end="277:17">s</name><operator pos:start="277:18" pos:end="277:19">-&gt;</operator><name pos:start="277:20" pos:end="277:25">maxval</name></name> <operator pos:start="277:27" pos:end="277:28">&gt;=</operator> <literal type="number" pos:start="277:30" pos:end="277:32">256</literal></expr>)</condition><block type="pseudo" pos:start="279:17" pos:end="279:23"><block_content pos:start="279:17" pos:end="279:23">

                <expr_stmt pos:start="279:17" pos:end="279:23"><expr pos:start="279:17" pos:end="279:22"><name pos:start="279:17" pos:end="279:17">n</name> <operator pos:start="279:19" pos:end="279:20">*=</operator> <literal type="number" pos:start="279:22" pos:end="279:22">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="281:13" pos:end="283:43"><if pos:start="281:13" pos:end="283:43">if <condition pos:start="281:16" pos:end="281:78">(<expr pos:start="281:17" pos:end="281:77"><name pos:start="281:17" pos:end="281:29"><name pos:start="281:17" pos:end="281:17">s</name><operator pos:start="281:18" pos:end="281:19">-&gt;</operator><name pos:start="281:20" pos:end="281:29">bytestream</name></name> <operator pos:start="281:31" pos:end="281:31">+</operator> <name pos:start="281:33" pos:end="281:33">n</name> <operator pos:start="281:35" pos:end="281:35">*</operator> <name pos:start="281:37" pos:end="281:49"><name pos:start="281:37" pos:end="281:41">avctx</name><operator pos:start="281:42" pos:end="281:43">-&gt;</operator><name pos:start="281:44" pos:end="281:49">height</name></name> <operator pos:start="281:51" pos:end="281:51">*</operator> <literal type="number" pos:start="281:53" pos:end="281:53">3</literal> <operator pos:start="281:55" pos:end="281:55">/</operator> <literal type="number" pos:start="281:57" pos:end="281:57">2</literal> <operator pos:start="281:59" pos:end="281:59">&gt;</operator> <name pos:start="281:61" pos:end="281:77"><name pos:start="281:61" pos:end="281:61">s</name><operator pos:start="281:62" pos:end="281:63">-&gt;</operator><name pos:start="281:64" pos:end="281:77">bytestream_end</name></name></expr>)</condition><block type="pseudo" pos:start="283:17" pos:end="283:43"><block_content pos:start="283:17" pos:end="283:43">

                <return pos:start="283:17" pos:end="283:43">return <expr pos:start="283:24" pos:end="283:42"><name pos:start="283:24" pos:end="283:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <for pos:start="285:13" pos:end="293:13">for <control pos:start="285:17" pos:end="285:47">(<init pos:start="285:18" pos:end="285:23"><expr pos:start="285:18" pos:end="285:22"><name pos:start="285:18" pos:end="285:18">i</name> <operator pos:start="285:20" pos:end="285:20">=</operator> <literal type="number" pos:start="285:22" pos:end="285:22">0</literal></expr>;</init> <condition pos:start="285:25" pos:end="285:42"><expr pos:start="285:25" pos:end="285:41"><name pos:start="285:25" pos:end="285:25">i</name> <operator pos:start="285:27" pos:end="285:27">&lt;</operator> <name pos:start="285:29" pos:end="285:41"><name pos:start="285:29" pos:end="285:33">avctx</name><operator pos:start="285:34" pos:end="285:35">-&gt;</operator><name pos:start="285:36" pos:end="285:41">height</name></name></expr>;</condition> <incr pos:start="285:44" pos:end="285:46"><expr pos:start="285:44" pos:end="285:46"><name pos:start="285:44" pos:end="285:44">i</name><operator pos:start="285:45" pos:end="285:46">++</operator></expr></incr>)</control> <block pos:start="285:49" pos:end="293:13">{<block_content pos:start="287:17" pos:end="291:42">

                <expr_stmt pos:start="287:17" pos:end="287:46"><expr pos:start="287:17" pos:end="287:45"><call pos:start="287:17" pos:end="287:45"><name pos:start="287:17" pos:end="287:22">memcpy</name><argument_list pos:start="287:23" pos:end="287:45">(<argument pos:start="287:24" pos:end="287:26"><expr pos:start="287:24" pos:end="287:26"><name pos:start="287:24" pos:end="287:26">ptr</name></expr></argument>, <argument pos:start="287:29" pos:end="287:41"><expr pos:start="287:29" pos:end="287:41"><name pos:start="287:29" pos:end="287:41"><name pos:start="287:29" pos:end="287:29">s</name><operator pos:start="287:30" pos:end="287:31">-&gt;</operator><name pos:start="287:32" pos:end="287:41">bytestream</name></name></expr></argument>, <argument pos:start="287:44" pos:end="287:44"><expr pos:start="287:44" pos:end="287:44"><name pos:start="287:44" pos:end="287:44">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:35"><expr pos:start="289:17" pos:end="289:34"><name pos:start="289:17" pos:end="289:29"><name pos:start="289:17" pos:end="289:17">s</name><operator pos:start="289:18" pos:end="289:19">-&gt;</operator><name pos:start="289:20" pos:end="289:29">bytestream</name></name> <operator pos:start="289:31" pos:end="289:32">+=</operator> <name pos:start="289:34" pos:end="289:34">n</name></expr>;</expr_stmt>

                <expr_stmt pos:start="291:17" pos:end="291:42"><expr pos:start="291:17" pos:end="291:41"><name pos:start="291:17" pos:end="291:19">ptr</name>           <operator pos:start="291:31" pos:end="291:32">+=</operator> <name pos:start="291:34" pos:end="291:41">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="295:13" pos:end="295:30"><expr pos:start="295:13" pos:end="295:29"><name pos:start="295:13" pos:end="295:16">ptr1</name> <operator pos:start="295:18" pos:end="295:18">=</operator> <name pos:start="295:20" pos:end="295:29"><name pos:start="295:20" pos:end="295:20">p</name><operator pos:start="295:21" pos:end="295:22">-&gt;</operator><name pos:start="295:23" pos:end="295:26">data</name><index pos:start="295:27" pos:end="295:29">[<expr pos:start="295:28" pos:end="295:28"><literal type="number" pos:start="295:28" pos:end="295:28">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:30"><expr pos:start="297:13" pos:end="297:29"><name pos:start="297:13" pos:end="297:16">ptr2</name> <operator pos:start="297:18" pos:end="297:18">=</operator> <name pos:start="297:20" pos:end="297:29"><name pos:start="297:20" pos:end="297:20">p</name><operator pos:start="297:21" pos:end="297:22">-&gt;</operator><name pos:start="297:23" pos:end="297:26">data</name><index pos:start="297:27" pos:end="297:29">[<expr pos:start="297:28" pos:end="297:28"><literal type="number" pos:start="297:28" pos:end="297:28">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:20"><expr pos:start="299:13" pos:end="299:19"><name pos:start="299:13" pos:end="299:13">n</name> <operator pos:start="299:15" pos:end="299:17">&gt;&gt;=</operator> <literal type="number" pos:start="299:19" pos:end="299:19">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:35"><expr pos:start="301:13" pos:end="301:34"><name pos:start="301:13" pos:end="301:13">h</name> <operator pos:start="301:15" pos:end="301:15">=</operator> <name pos:start="301:17" pos:end="301:29"><name pos:start="301:17" pos:end="301:21">avctx</name><operator pos:start="301:22" pos:end="301:23">-&gt;</operator><name pos:start="301:24" pos:end="301:29">height</name></name> <operator pos:start="301:31" pos:end="301:32">&gt;&gt;</operator> <literal type="number" pos:start="301:34" pos:end="301:34">1</literal></expr>;</expr_stmt>

            <for pos:start="303:13" pos:end="317:13">for <control pos:start="303:17" pos:end="303:35">(<init pos:start="303:18" pos:end="303:23"><expr pos:start="303:18" pos:end="303:22"><name pos:start="303:18" pos:end="303:18">i</name> <operator pos:start="303:20" pos:end="303:20">=</operator> <literal type="number" pos:start="303:22" pos:end="303:22">0</literal></expr>;</init> <condition pos:start="303:25" pos:end="303:30"><expr pos:start="303:25" pos:end="303:29"><name pos:start="303:25" pos:end="303:25">i</name> <operator pos:start="303:27" pos:end="303:27">&lt;</operator> <name pos:start="303:29" pos:end="303:29">h</name></expr>;</condition> <incr pos:start="303:32" pos:end="303:34"><expr pos:start="303:32" pos:end="303:34"><name pos:start="303:32" pos:end="303:32">i</name><operator pos:start="303:33" pos:end="303:34">++</operator></expr></incr>)</control> <block pos:start="303:37" pos:end="317:13">{<block_content pos:start="305:17" pos:end="315:39">

                <expr_stmt pos:start="305:17" pos:end="305:47"><expr pos:start="305:17" pos:end="305:46"><call pos:start="305:17" pos:end="305:46"><name pos:start="305:17" pos:end="305:22">memcpy</name><argument_list pos:start="305:23" pos:end="305:46">(<argument pos:start="305:24" pos:end="305:27"><expr pos:start="305:24" pos:end="305:27"><name pos:start="305:24" pos:end="305:27">ptr1</name></expr></argument>, <argument pos:start="305:30" pos:end="305:42"><expr pos:start="305:30" pos:end="305:42"><name pos:start="305:30" pos:end="305:42"><name pos:start="305:30" pos:end="305:30">s</name><operator pos:start="305:31" pos:end="305:32">-&gt;</operator><name pos:start="305:33" pos:end="305:42">bytestream</name></name></expr></argument>, <argument pos:start="305:45" pos:end="305:45"><expr pos:start="305:45" pos:end="305:45"><name pos:start="305:45" pos:end="305:45">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="307:17" pos:end="307:35"><expr pos:start="307:17" pos:end="307:34"><name pos:start="307:17" pos:end="307:29"><name pos:start="307:17" pos:end="307:17">s</name><operator pos:start="307:18" pos:end="307:19">-&gt;</operator><name pos:start="307:20" pos:end="307:29">bytestream</name></name> <operator pos:start="307:31" pos:end="307:32">+=</operator> <name pos:start="307:34" pos:end="307:34">n</name></expr>;</expr_stmt>

                <expr_stmt pos:start="309:17" pos:end="309:47"><expr pos:start="309:17" pos:end="309:46"><call pos:start="309:17" pos:end="309:46"><name pos:start="309:17" pos:end="309:22">memcpy</name><argument_list pos:start="309:23" pos:end="309:46">(<argument pos:start="309:24" pos:end="309:27"><expr pos:start="309:24" pos:end="309:27"><name pos:start="309:24" pos:end="309:27">ptr2</name></expr></argument>, <argument pos:start="309:30" pos:end="309:42"><expr pos:start="309:30" pos:end="309:42"><name pos:start="309:30" pos:end="309:42"><name pos:start="309:30" pos:end="309:30">s</name><operator pos:start="309:31" pos:end="309:32">-&gt;</operator><name pos:start="309:33" pos:end="309:42">bytestream</name></name></expr></argument>, <argument pos:start="309:45" pos:end="309:45"><expr pos:start="309:45" pos:end="309:45"><name pos:start="309:45" pos:end="309:45">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="311:17" pos:end="311:35"><expr pos:start="311:17" pos:end="311:34"><name pos:start="311:17" pos:end="311:29"><name pos:start="311:17" pos:end="311:17">s</name><operator pos:start="311:18" pos:end="311:19">-&gt;</operator><name pos:start="311:20" pos:end="311:29">bytestream</name></name> <operator pos:start="311:31" pos:end="311:32">+=</operator> <name pos:start="311:34" pos:end="311:34">n</name></expr>;</expr_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:39"><expr pos:start="313:17" pos:end="313:38"><name pos:start="313:17" pos:end="313:20">ptr1</name> <operator pos:start="313:22" pos:end="313:23">+=</operator> <name pos:start="313:25" pos:end="313:38"><name pos:start="313:25" pos:end="313:25">p</name><operator pos:start="313:26" pos:end="313:27">-&gt;</operator><name pos:start="313:28" pos:end="313:35">linesize</name><index pos:start="313:36" pos:end="313:38">[<expr pos:start="313:37" pos:end="313:37"><literal type="number" pos:start="313:37" pos:end="313:37">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="315:17" pos:end="315:39"><expr pos:start="315:17" pos:end="315:38"><name pos:start="315:17" pos:end="315:20">ptr2</name> <operator pos:start="315:22" pos:end="315:23">+=</operator> <name pos:start="315:25" pos:end="315:38"><name pos:start="315:25" pos:end="315:25">p</name><operator pos:start="315:26" pos:end="315:27">-&gt;</operator><name pos:start="315:28" pos:end="315:35">linesize</name><index pos:start="315:36" pos:end="315:38">[<expr pos:start="315:37" pos:end="315:37"><literal type="number" pos:start="315:37" pos:end="315:37">2</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block>

        <break pos:start="321:9" pos:end="321:14">break;</break>

    <case pos:start="323:5" pos:end="323:30">case <expr pos:start="323:10" pos:end="323:29"><name pos:start="323:10" pos:end="323:29">AV_PIX_FMT_YUV420P16</name></expr>:</case>

        <block pos:start="325:9" pos:end="401:9">{<block_content pos:start="327:13" pos:end="399:13">

            <decl_stmt pos:start="327:13" pos:end="327:34"><decl pos:start="327:13" pos:end="327:26"><type pos:start="327:13" pos:end="327:22"><name pos:start="327:13" pos:end="327:20">uint16_t</name> <modifier pos:start="327:22" pos:end="327:22">*</modifier></type><name pos:start="327:23" pos:end="327:26">ptr1</name></decl>, <decl pos:start="327:29" pos:end="327:33"><type ref="prev" pos:start="327:13" pos:end="327:22"><modifier pos:start="327:29" pos:end="327:29">*</modifier></type><name pos:start="327:30" pos:end="327:33">ptr2</name></decl>;</decl_stmt>

            <decl_stmt pos:start="329:13" pos:end="329:70"><decl pos:start="329:13" pos:end="329:69"><type pos:start="329:13" pos:end="329:21"><specifier pos:start="329:13" pos:end="329:17">const</specifier> <name pos:start="329:19" pos:end="329:21">int</name></type> <name pos:start="329:23" pos:end="329:23">f</name> <init pos:start="329:25" pos:end="329:69">= <expr pos:start="329:27" pos:end="329:69"><operator pos:start="329:27" pos:end="329:27">(</operator><literal type="number" pos:start="329:28" pos:end="329:32">65535</literal> <operator pos:start="329:34" pos:end="329:34">*</operator> <literal type="number" pos:start="329:36" pos:end="329:42">32768</literal> <operator pos:start="329:42" pos:end="329:42">+</operator> <name pos:start="329:44" pos:end="329:52"><name pos:start="329:44" pos:end="329:44">s</name><operator pos:start="329:45" pos:end="329:46">-&gt;</operator><name pos:start="329:47" pos:end="329:52">maxval</name></name> <operator pos:start="329:54" pos:end="329:54">/</operator> <literal type="number" pos:start="329:56" pos:end="329:56">2</literal><operator pos:start="329:57" pos:end="329:57">)</operator> <operator pos:start="329:59" pos:end="329:59">/</operator> <name pos:start="329:61" pos:end="329:69"><name pos:start="329:61" pos:end="329:61">s</name><operator pos:start="329:62" pos:end="329:63">-&gt;</operator><name pos:start="329:64" pos:end="329:69">maxval</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="331:13" pos:end="331:30"><decl pos:start="331:13" pos:end="331:26"><type pos:start="331:13" pos:end="331:24"><name pos:start="331:13" pos:end="331:20">unsigned</name> <name pos:start="331:22" pos:end="331:24">int</name></type> <name pos:start="331:26" pos:end="331:26">j</name></decl>, <decl pos:start="331:29" pos:end="331:29"><type ref="prev" pos:start="331:13" pos:end="331:24"/><name pos:start="331:29" pos:end="331:29">v</name></decl>;</decl_stmt>



            <expr_stmt pos:start="335:13" pos:end="335:40"><expr pos:start="335:13" pos:end="335:39"><name pos:start="335:13" pos:end="335:13">n</name>        <operator pos:start="335:22" pos:end="335:22">=</operator> <name pos:start="335:24" pos:end="335:35"><name pos:start="335:24" pos:end="335:28">avctx</name><operator pos:start="335:29" pos:end="335:30">-&gt;</operator><name pos:start="335:31" pos:end="335:35">width</name></name> <operator pos:start="335:37" pos:end="335:37">*</operator> <literal type="number" pos:start="335:39" pos:end="335:39">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:34"><expr pos:start="337:13" pos:end="337:33"><name pos:start="337:13" pos:end="337:15">ptr</name>      <operator pos:start="337:22" pos:end="337:22">=</operator> <name pos:start="337:24" pos:end="337:33"><name pos:start="337:24" pos:end="337:24">p</name><operator pos:start="337:25" pos:end="337:26">-&gt;</operator><name pos:start="337:27" pos:end="337:30">data</name><index pos:start="337:31" pos:end="337:33">[<expr pos:start="337:32" pos:end="337:32"><literal type="number" pos:start="337:32" pos:end="337:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:38"><expr pos:start="339:13" pos:end="339:37"><name pos:start="339:13" pos:end="339:20">linesize</name> <operator pos:start="339:22" pos:end="339:22">=</operator> <name pos:start="339:24" pos:end="339:37"><name pos:start="339:24" pos:end="339:24">p</name><operator pos:start="339:25" pos:end="339:26">-&gt;</operator><name pos:start="339:27" pos:end="339:34">linesize</name><index pos:start="339:35" pos:end="339:37">[<expr pos:start="339:36" pos:end="339:36"><literal type="number" pos:start="339:36" pos:end="339:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="341:13" pos:end="343:43"><if pos:start="341:13" pos:end="343:43">if <condition pos:start="341:16" pos:end="341:78">(<expr pos:start="341:17" pos:end="341:77"><name pos:start="341:17" pos:end="341:29"><name pos:start="341:17" pos:end="341:17">s</name><operator pos:start="341:18" pos:end="341:19">-&gt;</operator><name pos:start="341:20" pos:end="341:29">bytestream</name></name> <operator pos:start="341:31" pos:end="341:31">+</operator> <name pos:start="341:33" pos:end="341:33">n</name> <operator pos:start="341:35" pos:end="341:35">*</operator> <name pos:start="341:37" pos:end="341:49"><name pos:start="341:37" pos:end="341:41">avctx</name><operator pos:start="341:42" pos:end="341:43">-&gt;</operator><name pos:start="341:44" pos:end="341:49">height</name></name> <operator pos:start="341:51" pos:end="341:51">*</operator> <literal type="number" pos:start="341:53" pos:end="341:53">3</literal> <operator pos:start="341:55" pos:end="341:55">/</operator> <literal type="number" pos:start="341:57" pos:end="341:57">2</literal> <operator pos:start="341:59" pos:end="341:59">&gt;</operator> <name pos:start="341:61" pos:end="341:77"><name pos:start="341:61" pos:end="341:61">s</name><operator pos:start="341:62" pos:end="341:63">-&gt;</operator><name pos:start="341:64" pos:end="341:77">bytestream_end</name></name></expr>)</condition><block type="pseudo" pos:start="343:17" pos:end="343:43"><block_content pos:start="343:17" pos:end="343:43">

                <return pos:start="343:17" pos:end="343:43">return <expr pos:start="343:24" pos:end="343:42"><name pos:start="343:24" pos:end="343:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <for pos:start="345:13" pos:end="359:13">for <control pos:start="345:17" pos:end="345:47">(<init pos:start="345:18" pos:end="345:23"><expr pos:start="345:18" pos:end="345:22"><name pos:start="345:18" pos:end="345:18">i</name> <operator pos:start="345:20" pos:end="345:20">=</operator> <literal type="number" pos:start="345:22" pos:end="345:22">0</literal></expr>;</init> <condition pos:start="345:25" pos:end="345:42"><expr pos:start="345:25" pos:end="345:41"><name pos:start="345:25" pos:end="345:25">i</name> <operator pos:start="345:27" pos:end="345:27">&lt;</operator> <name pos:start="345:29" pos:end="345:41"><name pos:start="345:29" pos:end="345:33">avctx</name><operator pos:start="345:34" pos:end="345:35">-&gt;</operator><name pos:start="345:36" pos:end="345:41">height</name></name></expr>;</condition> <incr pos:start="345:44" pos:end="345:46"><expr pos:start="345:44" pos:end="345:46"><name pos:start="345:44" pos:end="345:44">i</name><operator pos:start="345:45" pos:end="345:46">++</operator></expr></incr>)</control> <block pos:start="345:49" pos:end="359:13">{<block_content pos:start="347:17" pos:end="357:42">

                <for pos:start="347:17" pos:end="353:17">for <control pos:start="347:21" pos:end="347:43">(<init pos:start="347:22" pos:end="347:27"><expr pos:start="347:22" pos:end="347:26"><name pos:start="347:22" pos:end="347:22">j</name> <operator pos:start="347:24" pos:end="347:24">=</operator> <literal type="number" pos:start="347:26" pos:end="347:26">0</literal></expr>;</init> <condition pos:start="347:29" pos:end="347:38"><expr pos:start="347:29" pos:end="347:37"><name pos:start="347:29" pos:end="347:29">j</name> <operator pos:start="347:31" pos:end="347:31">&lt;</operator> <name pos:start="347:33" pos:end="347:33">n</name> <operator pos:start="347:35" pos:end="347:35">/</operator> <literal type="number" pos:start="347:37" pos:end="347:37">2</literal></expr>;</condition> <incr pos:start="347:40" pos:end="347:42"><expr pos:start="347:40" pos:end="347:42"><name pos:start="347:40" pos:end="347:40">j</name><operator pos:start="347:41" pos:end="347:42">++</operator></expr></incr>)</control> <block pos:start="347:45" pos:end="353:17">{<block_content pos:start="349:21" pos:end="351:65">

                    <expr_stmt pos:start="349:21" pos:end="349:67"><expr pos:start="349:21" pos:end="349:66"><name pos:start="349:21" pos:end="349:21">v</name> <operator pos:start="349:23" pos:end="349:23">=</operator> <call pos:start="349:25" pos:end="349:66"><name pos:start="349:25" pos:end="349:34">av_be2ne16</name><argument_list pos:start="349:35" pos:end="349:66">(<argument pos:start="349:36" pos:end="349:65"><expr pos:start="349:36" pos:end="349:65"><operator pos:start="349:36" pos:end="349:36">(</operator><operator pos:start="349:37" pos:end="349:37">(</operator><name pos:start="349:38" pos:end="349:45">uint16_t</name> <operator pos:start="349:47" pos:end="349:47">*</operator><operator pos:start="349:48" pos:end="349:48">)</operator><name pos:start="349:49" pos:end="349:61"><name pos:start="349:49" pos:end="349:49">s</name><operator pos:start="349:50" pos:end="349:51">-&gt;</operator><name pos:start="349:52" pos:end="349:61">bytestream</name></name><operator pos:start="349:62" pos:end="349:62">)</operator><index pos:start="349:63" pos:end="349:65">[<expr pos:start="349:64" pos:end="349:64"><name pos:start="349:64" pos:end="349:64">j</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="351:21" pos:end="351:65"><expr pos:start="351:21" pos:end="351:64"><operator pos:start="351:21" pos:end="351:21">(</operator><operator pos:start="351:22" pos:end="351:22">(</operator><name pos:start="351:23" pos:end="351:30">uint16_t</name> <operator pos:start="351:32" pos:end="351:32">*</operator><operator pos:start="351:33" pos:end="351:33">)</operator><name pos:start="351:34" pos:end="351:36">ptr</name><operator pos:start="351:37" pos:end="351:37">)</operator><index pos:start="351:38" pos:end="351:40">[<expr pos:start="351:39" pos:end="351:39"><name pos:start="351:39" pos:end="351:39">j</name></expr>]</index> <operator pos:start="351:42" pos:end="351:42">=</operator> <operator pos:start="351:44" pos:end="351:44">(</operator><name pos:start="351:45" pos:end="351:45">v</name> <operator pos:start="351:47" pos:end="351:47">*</operator> <name pos:start="351:49" pos:end="351:49">f</name> <operator pos:start="351:51" pos:end="351:51">+</operator> <literal type="number" pos:start="351:53" pos:end="351:57">16384</literal><operator pos:start="351:58" pos:end="351:58">)</operator> <operator pos:start="351:60" pos:end="351:61">&gt;&gt;</operator> <literal type="number" pos:start="351:63" pos:end="351:64">15</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="355:17" pos:end="355:35"><expr pos:start="355:17" pos:end="355:34"><name pos:start="355:17" pos:end="355:29"><name pos:start="355:17" pos:end="355:17">s</name><operator pos:start="355:18" pos:end="355:19">-&gt;</operator><name pos:start="355:20" pos:end="355:29">bytestream</name></name> <operator pos:start="355:31" pos:end="355:32">+=</operator> <name pos:start="355:34" pos:end="355:34">n</name></expr>;</expr_stmt>

                <expr_stmt pos:start="357:17" pos:end="357:42"><expr pos:start="357:17" pos:end="357:41"><name pos:start="357:17" pos:end="357:19">ptr</name>           <operator pos:start="357:31" pos:end="357:32">+=</operator> <name pos:start="357:34" pos:end="357:41">linesize</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="361:13" pos:end="361:41"><expr pos:start="361:13" pos:end="361:40"><name pos:start="361:13" pos:end="361:16">ptr1</name> <operator pos:start="361:18" pos:end="361:18">=</operator> <operator pos:start="361:20" pos:end="361:20">(</operator><name pos:start="361:21" pos:end="361:28">uint16_t</name><operator pos:start="361:29" pos:end="361:29">*</operator><operator pos:start="361:30" pos:end="361:30">)</operator><name pos:start="361:31" pos:end="361:40"><name pos:start="361:31" pos:end="361:31">p</name><operator pos:start="361:32" pos:end="361:33">-&gt;</operator><name pos:start="361:34" pos:end="361:37">data</name><index pos:start="361:38" pos:end="361:40">[<expr pos:start="361:39" pos:end="361:39"><literal type="number" pos:start="361:39" pos:end="361:39">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:41"><expr pos:start="363:13" pos:end="363:40"><name pos:start="363:13" pos:end="363:16">ptr2</name> <operator pos:start="363:18" pos:end="363:18">=</operator> <operator pos:start="363:20" pos:end="363:20">(</operator><name pos:start="363:21" pos:end="363:28">uint16_t</name><operator pos:start="363:29" pos:end="363:29">*</operator><operator pos:start="363:30" pos:end="363:30">)</operator><name pos:start="363:31" pos:end="363:40"><name pos:start="363:31" pos:end="363:31">p</name><operator pos:start="363:32" pos:end="363:33">-&gt;</operator><name pos:start="363:34" pos:end="363:37">data</name><index pos:start="363:38" pos:end="363:40">[<expr pos:start="363:39" pos:end="363:39"><literal type="number" pos:start="363:39" pos:end="363:39">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:20"><expr pos:start="365:13" pos:end="365:19"><name pos:start="365:13" pos:end="365:13">n</name> <operator pos:start="365:15" pos:end="365:17">&gt;&gt;=</operator> <literal type="number" pos:start="365:19" pos:end="365:19">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:35"><expr pos:start="367:13" pos:end="367:34"><name pos:start="367:13" pos:end="367:13">h</name> <operator pos:start="367:15" pos:end="367:15">=</operator> <name pos:start="367:17" pos:end="367:29"><name pos:start="367:17" pos:end="367:21">avctx</name><operator pos:start="367:22" pos:end="367:23">-&gt;</operator><name pos:start="367:24" pos:end="367:29">height</name></name> <operator pos:start="367:31" pos:end="367:32">&gt;&gt;</operator> <literal type="number" pos:start="367:34" pos:end="367:34">1</literal></expr>;</expr_stmt>

            <for pos:start="369:13" pos:end="399:13">for <control pos:start="369:17" pos:end="369:35">(<init pos:start="369:18" pos:end="369:23"><expr pos:start="369:18" pos:end="369:22"><name pos:start="369:18" pos:end="369:18">i</name> <operator pos:start="369:20" pos:end="369:20">=</operator> <literal type="number" pos:start="369:22" pos:end="369:22">0</literal></expr>;</init> <condition pos:start="369:25" pos:end="369:30"><expr pos:start="369:25" pos:end="369:29"><name pos:start="369:25" pos:end="369:25">i</name> <operator pos:start="369:27" pos:end="369:27">&lt;</operator> <name pos:start="369:29" pos:end="369:29">h</name></expr>;</condition> <incr pos:start="369:32" pos:end="369:34"><expr pos:start="369:32" pos:end="369:34"><name pos:start="369:32" pos:end="369:32">i</name><operator pos:start="369:33" pos:end="369:34">++</operator></expr></incr>)</control> <block pos:start="369:37" pos:end="399:13">{<block_content pos:start="371:17" pos:end="397:43">

                <for pos:start="371:17" pos:end="377:17">for <control pos:start="371:21" pos:end="371:43">(<init pos:start="371:22" pos:end="371:27"><expr pos:start="371:22" pos:end="371:26"><name pos:start="371:22" pos:end="371:22">j</name> <operator pos:start="371:24" pos:end="371:24">=</operator> <literal type="number" pos:start="371:26" pos:end="371:26">0</literal></expr>;</init> <condition pos:start="371:29" pos:end="371:38"><expr pos:start="371:29" pos:end="371:37"><name pos:start="371:29" pos:end="371:29">j</name> <operator pos:start="371:31" pos:end="371:31">&lt;</operator> <name pos:start="371:33" pos:end="371:33">n</name> <operator pos:start="371:35" pos:end="371:35">/</operator> <literal type="number" pos:start="371:37" pos:end="371:37">2</literal></expr>;</condition> <incr pos:start="371:40" pos:end="371:42"><expr pos:start="371:40" pos:end="371:42"><name pos:start="371:40" pos:end="371:40">j</name><operator pos:start="371:41" pos:end="371:42">++</operator></expr></incr>)</control> <block pos:start="371:45" pos:end="377:17">{<block_content pos:start="373:21" pos:end="375:52">

                    <expr_stmt pos:start="373:21" pos:end="373:67"><expr pos:start="373:21" pos:end="373:66"><name pos:start="373:21" pos:end="373:21">v</name> <operator pos:start="373:23" pos:end="373:23">=</operator> <call pos:start="373:25" pos:end="373:66"><name pos:start="373:25" pos:end="373:34">av_be2ne16</name><argument_list pos:start="373:35" pos:end="373:66">(<argument pos:start="373:36" pos:end="373:65"><expr pos:start="373:36" pos:end="373:65"><operator pos:start="373:36" pos:end="373:36">(</operator><operator pos:start="373:37" pos:end="373:37">(</operator><name pos:start="373:38" pos:end="373:45">uint16_t</name> <operator pos:start="373:47" pos:end="373:47">*</operator><operator pos:start="373:48" pos:end="373:48">)</operator><name pos:start="373:49" pos:end="373:61"><name pos:start="373:49" pos:end="373:49">s</name><operator pos:start="373:50" pos:end="373:51">-&gt;</operator><name pos:start="373:52" pos:end="373:61">bytestream</name></name><operator pos:start="373:62" pos:end="373:62">)</operator><index pos:start="373:63" pos:end="373:65">[<expr pos:start="373:64" pos:end="373:64"><name pos:start="373:64" pos:end="373:64">j</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="375:21" pos:end="375:52"><expr pos:start="375:21" pos:end="375:51"><name pos:start="375:21" pos:end="375:27"><name pos:start="375:21" pos:end="375:24">ptr1</name><index pos:start="375:25" pos:end="375:27">[<expr pos:start="375:26" pos:end="375:26"><name pos:start="375:26" pos:end="375:26">j</name></expr>]</index></name> <operator pos:start="375:29" pos:end="375:29">=</operator> <operator pos:start="375:31" pos:end="375:31">(</operator><name pos:start="375:32" pos:end="375:32">v</name> <operator pos:start="375:34" pos:end="375:34">*</operator> <name pos:start="375:36" pos:end="375:36">f</name> <operator pos:start="375:38" pos:end="375:38">+</operator> <literal type="number" pos:start="375:40" pos:end="375:44">16384</literal><operator pos:start="375:45" pos:end="375:45">)</operator> <operator pos:start="375:47" pos:end="375:48">&gt;&gt;</operator> <literal type="number" pos:start="375:50" pos:end="375:51">15</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="379:17" pos:end="379:35"><expr pos:start="379:17" pos:end="379:34"><name pos:start="379:17" pos:end="379:29"><name pos:start="379:17" pos:end="379:17">s</name><operator pos:start="379:18" pos:end="379:19">-&gt;</operator><name pos:start="379:20" pos:end="379:29">bytestream</name></name> <operator pos:start="379:31" pos:end="379:32">+=</operator> <name pos:start="379:34" pos:end="379:34">n</name></expr>;</expr_stmt>



                <for pos:start="383:17" pos:end="389:17">for <control pos:start="383:21" pos:end="383:43">(<init pos:start="383:22" pos:end="383:27"><expr pos:start="383:22" pos:end="383:26"><name pos:start="383:22" pos:end="383:22">j</name> <operator pos:start="383:24" pos:end="383:24">=</operator> <literal type="number" pos:start="383:26" pos:end="383:26">0</literal></expr>;</init> <condition pos:start="383:29" pos:end="383:38"><expr pos:start="383:29" pos:end="383:37"><name pos:start="383:29" pos:end="383:29">j</name> <operator pos:start="383:31" pos:end="383:31">&lt;</operator> <name pos:start="383:33" pos:end="383:33">n</name> <operator pos:start="383:35" pos:end="383:35">/</operator> <literal type="number" pos:start="383:37" pos:end="383:37">2</literal></expr>;</condition> <incr pos:start="383:40" pos:end="383:42"><expr pos:start="383:40" pos:end="383:42"><name pos:start="383:40" pos:end="383:40">j</name><operator pos:start="383:41" pos:end="383:42">++</operator></expr></incr>)</control> <block pos:start="383:45" pos:end="389:17">{<block_content pos:start="385:21" pos:end="387:52">

                    <expr_stmt pos:start="385:21" pos:end="385:67"><expr pos:start="385:21" pos:end="385:66"><name pos:start="385:21" pos:end="385:21">v</name> <operator pos:start="385:23" pos:end="385:23">=</operator> <call pos:start="385:25" pos:end="385:66"><name pos:start="385:25" pos:end="385:34">av_be2ne16</name><argument_list pos:start="385:35" pos:end="385:66">(<argument pos:start="385:36" pos:end="385:65"><expr pos:start="385:36" pos:end="385:65"><operator pos:start="385:36" pos:end="385:36">(</operator><operator pos:start="385:37" pos:end="385:37">(</operator><name pos:start="385:38" pos:end="385:45">uint16_t</name> <operator pos:start="385:47" pos:end="385:47">*</operator><operator pos:start="385:48" pos:end="385:48">)</operator><name pos:start="385:49" pos:end="385:61"><name pos:start="385:49" pos:end="385:49">s</name><operator pos:start="385:50" pos:end="385:51">-&gt;</operator><name pos:start="385:52" pos:end="385:61">bytestream</name></name><operator pos:start="385:62" pos:end="385:62">)</operator><index pos:start="385:63" pos:end="385:65">[<expr pos:start="385:64" pos:end="385:64"><name pos:start="385:64" pos:end="385:64">j</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="387:21" pos:end="387:52"><expr pos:start="387:21" pos:end="387:51"><name pos:start="387:21" pos:end="387:27"><name pos:start="387:21" pos:end="387:24">ptr2</name><index pos:start="387:25" pos:end="387:27">[<expr pos:start="387:26" pos:end="387:26"><name pos:start="387:26" pos:end="387:26">j</name></expr>]</index></name> <operator pos:start="387:29" pos:end="387:29">=</operator> <operator pos:start="387:31" pos:end="387:31">(</operator><name pos:start="387:32" pos:end="387:32">v</name> <operator pos:start="387:34" pos:end="387:34">*</operator> <name pos:start="387:36" pos:end="387:36">f</name> <operator pos:start="387:38" pos:end="387:38">+</operator> <literal type="number" pos:start="387:40" pos:end="387:44">16384</literal><operator pos:start="387:45" pos:end="387:45">)</operator> <operator pos:start="387:47" pos:end="387:48">&gt;&gt;</operator> <literal type="number" pos:start="387:50" pos:end="387:51">15</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="391:17" pos:end="391:35"><expr pos:start="391:17" pos:end="391:34"><name pos:start="391:17" pos:end="391:29"><name pos:start="391:17" pos:end="391:17">s</name><operator pos:start="391:18" pos:end="391:19">-&gt;</operator><name pos:start="391:20" pos:end="391:29">bytestream</name></name> <operator pos:start="391:31" pos:end="391:32">+=</operator> <name pos:start="391:34" pos:end="391:34">n</name></expr>;</expr_stmt>



                <expr_stmt pos:start="395:17" pos:end="395:43"><expr pos:start="395:17" pos:end="395:42"><name pos:start="395:17" pos:end="395:20">ptr1</name> <operator pos:start="395:22" pos:end="395:23">+=</operator> <name pos:start="395:25" pos:end="395:38"><name pos:start="395:25" pos:end="395:25">p</name><operator pos:start="395:26" pos:end="395:27">-&gt;</operator><name pos:start="395:28" pos:end="395:35">linesize</name><index pos:start="395:36" pos:end="395:38">[<expr pos:start="395:37" pos:end="395:37"><literal type="number" pos:start="395:37" pos:end="395:37">1</literal></expr>]</index></name> <operator pos:start="395:40" pos:end="395:40">/</operator> <literal type="number" pos:start="395:42" pos:end="395:42">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="397:17" pos:end="397:43"><expr pos:start="397:17" pos:end="397:42"><name pos:start="397:17" pos:end="397:20">ptr2</name> <operator pos:start="397:22" pos:end="397:23">+=</operator> <name pos:start="397:25" pos:end="397:38"><name pos:start="397:25" pos:end="397:25">p</name><operator pos:start="397:26" pos:end="397:27">-&gt;</operator><name pos:start="397:28" pos:end="397:35">linesize</name><index pos:start="397:36" pos:end="397:38">[<expr pos:start="397:37" pos:end="397:37"><literal type="number" pos:start="397:37" pos:end="397:37">2</literal></expr>]</index></name> <operator pos:start="397:40" pos:end="397:40">/</operator> <literal type="number" pos:start="397:42" pos:end="397:42">2</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block>

        <break pos:start="403:9" pos:end="403:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="407:5" pos:end="407:19"><expr pos:start="407:5" pos:end="407:18"><operator pos:start="407:5" pos:end="407:5">*</operator><name pos:start="407:6" pos:end="407:14">got_frame</name> <operator pos:start="407:16" pos:end="407:16">=</operator> <literal type="number" pos:start="407:18" pos:end="407:18">1</literal></expr>;</expr_stmt>



    <return pos:start="411:5" pos:end="411:47">return <expr pos:start="411:12" pos:end="411:46"><name pos:start="411:12" pos:end="411:24"><name pos:start="411:12" pos:end="411:12">s</name><operator pos:start="411:13" pos:end="411:14">-&gt;</operator><name pos:start="411:15" pos:end="411:24">bytestream</name></name> <operator pos:start="411:26" pos:end="411:26">-</operator> <name pos:start="411:28" pos:end="411:46"><name pos:start="411:28" pos:end="411:28">s</name><operator pos:start="411:29" pos:end="411:30">-&gt;</operator><name pos:start="411:31" pos:end="411:46">bytestream_start</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
