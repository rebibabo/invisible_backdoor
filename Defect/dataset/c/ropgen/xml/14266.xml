<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14266.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">trigger_page_fault</name><parameter_list pos:start="1:31" pos:end="3:67">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:44">CPUS390XState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">env</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:69"><decl pos:start="1:52" pos:end="1:69"><type pos:start="1:52" pos:end="1:69"><name pos:start="1:52" pos:end="1:63">target_ulong</name></type> <name pos:start="1:65" pos:end="1:69">vaddr</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:44"><decl pos:start="3:32" pos:end="3:44"><type pos:start="3:32" pos:end="3:44"><name pos:start="3:32" pos:end="3:39">uint32_t</name></type> <name pos:start="3:41" pos:end="3:44">type</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:58"><decl pos:start="3:47" pos:end="3:58"><type pos:start="3:47" pos:end="3:58"><name pos:start="3:47" pos:end="3:54">uint64_t</name></type> <name pos:start="3:56" pos:end="3:58">asc</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:66"><decl pos:start="3:61" pos:end="3:66"><type pos:start="3:61" pos:end="3:66"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:66">rw</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:43">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:45">= <expr pos:start="7:20" pos:end="7:45"><call pos:start="7:20" pos:end="7:45"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:45">(<argument pos:start="7:24" pos:end="7:44"><expr pos:start="7:24" pos:end="7:44"><call pos:start="7:24" pos:end="7:44"><name pos:start="7:24" pos:end="7:39">s390_env_get_cpu</name><argument_list pos:start="7:40" pos:end="7:44">(<argument pos:start="7:41" pos:end="7:43"><expr pos:start="7:41" pos:end="7:43"><name pos:start="7:41" pos:end="7:43">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">ilen</name> <init pos:start="9:14" pos:end="9:25">= <expr pos:start="9:16" pos:end="9:25"><name pos:start="9:16" pos:end="9:25">ILEN_LATER</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">bits</name> <init pos:start="11:14" pos:end="11:35">= <expr pos:start="11:16" pos:end="11:35"><call pos:start="11:16" pos:end="11:35"><name pos:start="11:16" pos:end="11:25">trans_bits</name><argument_list pos:start="11:26" pos:end="11:35">(<argument pos:start="11:27" pos:end="11:29"><expr pos:start="11:27" pos:end="11:29"><name pos:start="11:27" pos:end="11:29">env</name></expr></argument>, <argument pos:start="11:32" pos:end="11:34"><expr pos:start="11:32" pos:end="11:34"><name pos:start="11:32" pos:end="11:34">asc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:47">/* Code accesses have an undefined ilc.  */</comment>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:10">rw</name> <operator pos:start="17:12" pos:end="17:13">==</operator> <literal type="number" pos:start="17:15" pos:end="17:15">2</literal></expr>)</condition> <block pos:start="17:18" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:17">

        <expr_stmt pos:start="19:9" pos:end="19:17"><expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:12">ilen</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <literal type="number" pos:start="19:16" pos:end="19:16">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:73"><expr pos:start="25:5" pos:end="25:72"><call pos:start="25:5" pos:end="25:72"><name pos:start="25:5" pos:end="25:11">DPRINTF</name><argument_list pos:start="25:12" pos:end="25:72">(<argument pos:start="25:13" pos:end="25:48"><expr pos:start="25:13" pos:end="25:48"><literal type="string" pos:start="25:13" pos:end="25:28">"%s: vaddr=%016"</literal> <name pos:start="25:30" pos:end="25:35">PRIx64</name> <literal type="string" pos:start="25:37" pos:end="25:48">" bits=%d\n"</literal></expr></argument>, <argument pos:start="25:51" pos:end="25:58"><expr pos:start="25:51" pos:end="25:58"><name pos:start="25:51" pos:end="25:58">__func__</name></expr></argument>, <argument pos:start="25:61" pos:end="25:65"><expr pos:start="25:61" pos:end="25:65"><name pos:start="25:61" pos:end="25:65">vaddr</name></expr></argument>, <argument pos:start="25:68" pos:end="25:71"><expr pos:start="25:68" pos:end="25:71"><name pos:start="25:68" pos:end="25:71">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="31:73"><expr pos:start="29:5" pos:end="31:72"><call pos:start="29:5" pos:end="31:72"><name pos:start="29:5" pos:end="29:12">stq_phys</name><argument_list pos:start="29:13" pos:end="31:72">(<argument pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:19"><name pos:start="29:14" pos:end="29:19"><name pos:start="29:14" pos:end="29:15">cs</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:19">as</name></name></expr></argument>,

             <argument pos:start="31:14" pos:end="31:57"><expr pos:start="31:14" pos:end="31:57"><name pos:start="31:14" pos:end="31:21"><name pos:start="31:14" pos:end="31:16">env</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:21">psa</name></name> <operator pos:start="31:23" pos:end="31:23">+</operator> <call pos:start="31:25" pos:end="31:57"><name pos:start="31:25" pos:end="31:32">offsetof</name><argument_list pos:start="31:33" pos:end="31:57">(<argument pos:start="31:34" pos:end="31:40"><expr pos:start="31:34" pos:end="31:40"><name pos:start="31:34" pos:end="31:40">LowCore</name></expr></argument>, <argument pos:start="31:43" pos:end="31:56"><expr pos:start="31:43" pos:end="31:56"><name pos:start="31:43" pos:end="31:56">trans_exc_code</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:60" pos:end="31:71"><expr pos:start="31:60" pos:end="31:71"><name pos:start="31:60" pos:end="31:64">vaddr</name> <operator pos:start="31:66" pos:end="31:66">|</operator> <name pos:start="31:68" pos:end="31:71">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><call pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:25">trigger_pgm_exception</name><argument_list pos:start="33:26" pos:end="33:42">(<argument pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:29">env</name></expr></argument>, <argument pos:start="33:32" pos:end="33:35"><expr pos:start="33:32" pos:end="33:35"><name pos:start="33:32" pos:end="33:35">type</name></expr></argument>, <argument pos:start="33:38" pos:end="33:41"><expr pos:start="33:38" pos:end="33:41"><name pos:start="33:38" pos:end="33:41">ilen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
