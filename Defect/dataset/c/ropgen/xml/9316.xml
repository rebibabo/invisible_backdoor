<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9316.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">gen_compute_eflags_s</name><parameter_list pos:start="1:33" pos:end="1:69">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:45">DisasContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:58"><decl pos:start="1:51" pos:end="1:58"><type pos:start="1:51" pos:end="1:58"><name pos:start="1:51" pos:end="1:54">TCGv</name></type> <name pos:start="1:56" pos:end="1:58">reg</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:68"><decl pos:start="1:61" pos:end="1:68"><type pos:start="1:61" pos:end="1:68"><name pos:start="1:61" pos:end="1:64">bool</name></type> <name pos:start="1:66" pos:end="1:68">inv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <switch pos:start="5:5" pos:end="41:5">switch <condition pos:start="5:12" pos:end="5:21">(<expr pos:start="5:13" pos:end="5:20"><name pos:start="5:13" pos:end="5:20"><name pos:start="5:13" pos:end="5:13">s</name><operator pos:start="5:14" pos:end="5:15">-&gt;</operator><name pos:start="5:16" pos:end="5:20">cc_op</name></name></expr>)</condition> <block pos:start="5:23" pos:end="41:5">{<block_content pos:start="7:5" pos:end="39:14">

    <case pos:start="7:5" pos:end="7:23">case <expr pos:start="7:10" pos:end="7:22"><name pos:start="7:10" pos:end="7:22">CC_OP_DYNAMIC</name></expr>:</case>

        <expr_stmt pos:start="9:9" pos:end="9:30"><expr pos:start="9:9" pos:end="9:29"><call pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:26">gen_compute_eflags</name><argument_list pos:start="9:27" pos:end="9:29">(<argument pos:start="9:28" pos:end="9:28"><expr pos:start="9:28" pos:end="9:28"><name pos:start="9:28" pos:end="9:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="11:9" pos:end="11:22">/* FALLTHRU */</comment>

    <case pos:start="13:5" pos:end="13:22">case <expr pos:start="13:10" pos:end="13:21"><name pos:start="13:10" pos:end="13:21">CC_OP_EFLAGS</name></expr>:</case>

        <expr_stmt pos:start="15:9" pos:end="15:44"><expr pos:start="15:9" pos:end="15:43"><call pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:23">tcg_gen_shri_tl</name><argument_list pos:start="15:24" pos:end="15:43">(<argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><name pos:start="15:25" pos:end="15:27">reg</name></expr></argument>, <argument pos:start="15:30" pos:end="15:39"><expr pos:start="15:30" pos:end="15:39"><name pos:start="15:30" pos:end="15:39">cpu_cc_src</name></expr></argument>, <argument pos:start="15:42" pos:end="15:42"><expr pos:start="15:42" pos:end="15:42"><literal type="number" pos:start="15:42" pos:end="15:42">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:37"><expr pos:start="17:9" pos:end="17:36"><call pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:23">tcg_gen_andi_tl</name><argument_list pos:start="17:24" pos:end="17:36">(<argument pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:27">reg</name></expr></argument>, <argument pos:start="17:30" pos:end="17:32"><expr pos:start="17:30" pos:end="17:32"><name pos:start="17:30" pos:end="17:32">reg</name></expr></argument>, <argument pos:start="17:35" pos:end="17:35"><expr pos:start="17:35" pos:end="17:35"><literal type="number" pos:start="17:35" pos:end="17:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:16">(<expr pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">inv</name></expr>)</condition> <block pos:start="19:18" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:41">

            <expr_stmt pos:start="21:13" pos:end="21:41"><expr pos:start="21:13" pos:end="21:40"><call pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:27">tcg_gen_xori_tl</name><argument_list pos:start="21:28" pos:end="21:40">(<argument pos:start="21:29" pos:end="21:31"><expr pos:start="21:29" pos:end="21:31"><name pos:start="21:29" pos:end="21:31">reg</name></expr></argument>, <argument pos:start="21:34" pos:end="21:36"><expr pos:start="21:34" pos:end="21:36"><name pos:start="21:34" pos:end="21:36">reg</name></expr></argument>, <argument pos:start="21:39" pos:end="21:39"><expr pos:start="21:39" pos:end="21:39"><literal type="number" pos:start="21:39" pos:end="21:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <default pos:start="27:5" pos:end="27:12">default:</default>

        <block pos:start="29:9" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:77">

            <decl_stmt pos:start="31:13" pos:end="31:51"><decl pos:start="31:13" pos:end="31:50"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:20">size</name> <init pos:start="31:22" pos:end="31:50">= <expr pos:start="31:24" pos:end="31:50"><operator pos:start="31:24" pos:end="31:24">(</operator><name pos:start="31:25" pos:end="31:32"><name pos:start="31:25" pos:end="31:25">s</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:32">cc_op</name></name> <operator pos:start="31:34" pos:end="31:34">-</operator> <name pos:start="31:36" pos:end="31:45">CC_OP_ADDB</name><operator pos:start="31:46" pos:end="31:46">)</operator> <operator pos:start="31:48" pos:end="31:48">&amp;</operator> <literal type="number" pos:start="31:50" pos:end="31:50">3</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:62"><decl pos:start="33:13" pos:end="33:61"><type pos:start="33:13" pos:end="33:16"><name pos:start="33:13" pos:end="33:16">TCGv</name></type> <name pos:start="33:18" pos:end="33:19">t0</name> <init pos:start="33:21" pos:end="33:61">= <expr pos:start="33:23" pos:end="33:61"><call pos:start="33:23" pos:end="33:61"><name pos:start="33:23" pos:end="33:32">gen_ext_tl</name><argument_list pos:start="33:33" pos:end="33:61">(<argument pos:start="33:34" pos:end="33:36"><expr pos:start="33:34" pos:end="33:36"><name pos:start="33:34" pos:end="33:36">reg</name></expr></argument>, <argument pos:start="33:39" pos:end="33:48"><expr pos:start="33:39" pos:end="33:48"><name pos:start="33:39" pos:end="33:48">cpu_cc_dst</name></expr></argument>, <argument pos:start="33:51" pos:end="33:54"><expr pos:start="33:51" pos:end="33:54"><name pos:start="33:51" pos:end="33:54">size</name></expr></argument>, <argument pos:start="33:57" pos:end="33:60"><expr pos:start="33:57" pos:end="33:60"><name pos:start="33:57" pos:end="33:60">true</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:77"><expr pos:start="35:13" pos:end="35:76"><call pos:start="35:13" pos:end="35:76"><name pos:start="35:13" pos:end="35:31">tcg_gen_setcondi_tl</name><argument_list pos:start="35:32" pos:end="35:76">(<argument pos:start="35:33" pos:end="35:63"><expr pos:start="35:33" pos:end="35:63"><ternary pos:start="35:33" pos:end="35:63"><condition pos:start="35:33" pos:end="35:37"><expr pos:start="35:33" pos:end="35:35"><name pos:start="35:33" pos:end="35:35">inv</name></expr> ?</condition><then pos:start="35:39" pos:end="35:49"> <expr pos:start="35:39" pos:end="35:49"><name pos:start="35:39" pos:end="35:49">TCG_COND_GE</name></expr> </then><else pos:start="35:51" pos:end="35:63">: <expr pos:start="35:53" pos:end="35:63"><name pos:start="35:53" pos:end="35:63">TCG_COND_LT</name></expr></else></ternary></expr></argument>, <argument pos:start="35:66" pos:end="35:68"><expr pos:start="35:66" pos:end="35:68"><name pos:start="35:66" pos:end="35:68">reg</name></expr></argument>, <argument pos:start="35:71" pos:end="35:72"><expr pos:start="35:71" pos:end="35:72"><name pos:start="35:71" pos:end="35:72">t0</name></expr></argument>, <argument pos:start="35:75" pos:end="35:75"><expr pos:start="35:75" pos:end="35:75"><literal type="number" pos:start="35:75" pos:end="35:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
