<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23987.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:38">report_unsupported_feature</name><parameter_list pos:start="1:39" pos:end="3:53">(<parameter pos:start="1:40" pos:end="1:59"><decl pos:start="1:40" pos:end="1:59"><type pos:start="1:40" pos:end="1:59"><name pos:start="1:40" pos:end="1:55">BlockDriverState</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:59">bs</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:16"><decl pos:start="3:5" pos:end="3:16"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:9">Error</name> <modifier pos:start="3:11" pos:end="3:11">*</modifier><modifier pos:start="3:12" pos:end="3:12">*</modifier></type><name pos:start="3:13" pos:end="3:16">errp</name></decl></parameter>, <parameter pos:start="3:19" pos:end="3:37"><decl pos:start="3:19" pos:end="3:37"><type pos:start="3:19" pos:end="3:37"><name pos:start="3:19" pos:end="3:30">Qcow2Feature</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:37">table</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:52"><decl pos:start="3:40" pos:end="3:52"><type pos:start="3:40" pos:end="3:52"><name pos:start="3:40" pos:end="3:47">uint64_t</name></type> <name pos:start="3:49" pos:end="3:52">mask</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:5">

    <while pos:start="7:5" pos:end="23:5">while <condition pos:start="7:11" pos:end="7:43">(<expr pos:start="7:12" pos:end="7:42"><name pos:start="7:12" pos:end="7:16">table</name> <operator pos:start="7:18" pos:end="7:19">&amp;&amp;</operator> <name pos:start="7:21" pos:end="7:34"><name pos:start="7:21" pos:end="7:25">table</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:31">name</name><index pos:start="7:32" pos:end="7:34">[<expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">0</literal></expr>]</index></name> <operator pos:start="7:36" pos:end="7:37">!=</operator> <literal type="char" pos:start="7:39" pos:end="7:42">'\0'</literal></expr>)</condition> <block pos:start="7:45" pos:end="23:5">{<block_content pos:start="9:9" pos:end="21:16">

        <if_stmt pos:start="9:9" pos:end="19:9"><if pos:start="9:9" pos:end="19:9">if <condition pos:start="9:12" pos:end="9:56">(<expr pos:start="9:13" pos:end="9:55"><name pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:17">table</name><operator pos:start="9:18" pos:end="9:19">-&gt;</operator><name pos:start="9:20" pos:end="9:23">type</name></name> <operator pos:start="9:25" pos:end="9:26">==</operator> <name pos:start="9:28" pos:end="9:55">QCOW2_FEAT_TYPE_INCOMPATIBLE</name></expr>)</condition> <block pos:start="9:58" pos:end="19:9">{<block_content pos:start="11:13" pos:end="17:13">

            <if_stmt pos:start="11:13" pos:end="17:13"><if pos:start="11:13" pos:end="17:13">if <condition pos:start="11:16" pos:end="11:41">(<expr pos:start="11:17" pos:end="11:40"><name pos:start="11:17" pos:end="11:20">mask</name> <operator pos:start="11:22" pos:end="11:22">&amp;</operator> <operator pos:start="11:24" pos:end="11:24">(</operator><literal type="number" pos:start="11:25" pos:end="11:25">1</literal> <operator pos:start="11:27" pos:end="11:28">&lt;&lt;</operator> <name pos:start="11:30" pos:end="11:39"><name pos:start="11:30" pos:end="11:34">table</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:39">bit</name></name><operator pos:start="11:40" pos:end="11:40">)</operator></expr>)</condition> <block pos:start="11:43" pos:end="17:13">{<block_content pos:start="13:17" pos:end="15:43">

                <expr_stmt pos:start="13:17" pos:end="13:67"><expr pos:start="13:17" pos:end="13:66"><call pos:start="13:17" pos:end="13:66"><name pos:start="13:17" pos:end="13:34">report_unsupported</name><argument_list pos:start="13:35" pos:end="13:66">(<argument pos:start="13:36" pos:end="13:37"><expr pos:start="13:36" pos:end="13:37"><name pos:start="13:36" pos:end="13:37">bs</name></expr></argument>, <argument pos:start="13:40" pos:end="13:43"><expr pos:start="13:40" pos:end="13:43"><name pos:start="13:40" pos:end="13:43">errp</name></expr></argument>, <argument pos:start="13:46" pos:end="13:52"><expr pos:start="13:46" pos:end="13:52"><literal type="string" pos:start="13:46" pos:end="13:52">"%.46s"</literal></expr></argument>, <argument pos:start="13:55" pos:end="13:65"><expr pos:start="13:55" pos:end="13:65"><name pos:start="13:55" pos:end="13:65"><name pos:start="13:55" pos:end="13:59">table</name><operator pos:start="13:60" pos:end="13:61">-&gt;</operator><name pos:start="13:62" pos:end="13:65">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="15:17" pos:end="15:43"><expr pos:start="15:17" pos:end="15:42"><name pos:start="15:17" pos:end="15:20">mask</name> <operator pos:start="15:22" pos:end="15:23">&amp;=</operator> <operator pos:start="15:25" pos:end="15:25">~</operator><operator pos:start="15:26" pos:end="15:26">(</operator><literal type="number" pos:start="15:27" pos:end="15:27">1</literal> <operator pos:start="15:29" pos:end="15:30">&lt;&lt;</operator> <name pos:start="15:32" pos:end="15:41"><name pos:start="15:32" pos:end="15:36">table</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:41">bit</name></name><operator pos:start="15:42" pos:end="15:42">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:13">table</name><operator pos:start="21:14" pos:end="21:15">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><name pos:start="27:9" pos:end="27:12">mask</name></expr>)</condition> <block pos:start="27:15" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:33">

        <expr_stmt pos:start="29:9" pos:end="31:33"><expr pos:start="29:9" pos:end="31:32"><call pos:start="29:9" pos:end="31:32"><name pos:start="29:9" pos:end="29:26">report_unsupported</name><argument_list pos:start="29:27" pos:end="31:32">(<argument pos:start="29:28" pos:end="29:29"><expr pos:start="29:28" pos:end="29:29"><name pos:start="29:28" pos:end="29:29">bs</name></expr></argument>, <argument pos:start="29:32" pos:end="29:35"><expr pos:start="29:32" pos:end="29:35"><name pos:start="29:32" pos:end="29:35">errp</name></expr></argument>, <argument pos:start="29:38" pos:end="29:77"><expr pos:start="29:38" pos:end="29:77"><literal type="string" pos:start="29:38" pos:end="29:70">"Unknown incompatible feature: %"</literal> <name pos:start="29:72" pos:end="29:77">PRIx64</name></expr></argument>,

                           <argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><name pos:start="31:28" pos:end="31:31">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
