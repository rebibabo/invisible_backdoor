<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7197.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">pc_system_firmware_init</name><parameter_list pos:start="1:29" pos:end="1:54">(<parameter pos:start="1:30" pos:end="1:53"><decl pos:start="1:30" pos:end="1:53"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:41">MemoryRegion</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:53">rom_memory</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">DriveInfo</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:25">pflash_drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">PcSysFwDevice</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:28">sysfw_dev</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="21:7">/*

     * TODO This device exists only so that users can switch between

     * use of flash and ROM for the BIOS.  The ability to switch was

     * created because flash doesn't work with KVM.  Once it does, we

     * should drop this device for new machine types.

     */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:63"><expr pos:start="23:5" pos:end="23:62"><name pos:start="23:5" pos:end="23:13">sysfw_dev</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <operator pos:start="23:17" pos:end="23:17">(</operator><name pos:start="23:18" pos:end="23:30">PcSysFwDevice</name><operator pos:start="23:31" pos:end="23:31">*</operator><operator pos:start="23:32" pos:end="23:32">)</operator> <call pos:start="23:34" pos:end="23:62"><name pos:start="23:34" pos:end="23:44">qdev_create</name><argument_list pos:start="23:45" pos:end="23:62">(<argument pos:start="23:46" pos:end="23:49"><expr pos:start="23:46" pos:end="23:49"><name pos:start="23:46" pos:end="23:49">NULL</name></expr></argument>, <argument pos:start="23:52" pos:end="23:61"><expr pos:start="23:52" pos:end="23:61"><literal type="string" pos:start="23:52" pos:end="23:61">"pc-sysfw"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><call pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:20">qdev_init_nofail</name><argument_list pos:start="27:21" pos:end="27:39">(<argument pos:start="27:22" pos:end="27:38"><expr pos:start="27:22" pos:end="27:38"><call pos:start="27:22" pos:end="27:38"><name pos:start="27:22" pos:end="27:27">DEVICE</name><argument_list pos:start="27:28" pos:end="27:38">(<argument pos:start="27:29" pos:end="27:37"><expr pos:start="27:29" pos:end="27:37"><name pos:start="27:29" pos:end="27:37">sysfw_dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:28">(<expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:17">sysfw_dev</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:27">rom_only</name></name></expr>)</condition> <block pos:start="31:30" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:15">

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><call pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:30">old_pc_system_rom_init</name><argument_list pos:start="33:31" pos:end="33:42">(<argument pos:start="33:32" pos:end="33:41"><expr pos:start="33:32" pos:end="33:41"><name pos:start="33:32" pos:end="33:41">rom_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:44"><expr pos:start="41:5" pos:end="41:43"><name pos:start="41:5" pos:end="41:14">pflash_drv</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <call pos:start="41:18" pos:end="41:43"><name pos:start="41:18" pos:end="41:26">drive_get</name><argument_list pos:start="41:27" pos:end="41:43">(<argument pos:start="41:28" pos:end="41:36"><expr pos:start="41:28" pos:end="41:36"><name pos:start="41:28" pos:end="41:36">IF_PFLASH</name></expr></argument>, <argument pos:start="41:39" pos:end="41:39"><expr pos:start="41:39" pos:end="41:39"><literal type="number" pos:start="41:39" pos:end="41:39">0</literal></expr></argument>, <argument pos:start="41:42" pos:end="41:42"><expr pos:start="41:42" pos:end="41:42"><literal type="number" pos:start="41:42" pos:end="41:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="47:60">/* Currently KVM cannot execute from device memory.

       Use old rom based firmware initialization for KVM. */</comment>

    <comment type="block" pos:start="49:5" pos:end="55:7">/*

     * This is a Bad Idea, because it makes enabling/disabling KVM

     * guest-visible.  Do it only in bug-compatibility mode.

     */</comment>

    <if_stmt pos:start="57:5" pos:end="75:5"><if pos:start="57:5" pos:end="75:5">if <condition pos:start="57:8" pos:end="57:62">(<expr pos:start="57:9" pos:end="57:61"><name pos:start="57:9" pos:end="57:44">pc_sysfw_flash_vs_rom_bug_compatible</name> <operator pos:start="57:46" pos:end="57:47">&amp;&amp;</operator> <call pos:start="57:49" pos:end="57:61"><name pos:start="57:49" pos:end="57:59">kvm_enabled</name><argument_list pos:start="57:60" pos:end="57:61">()</argument_list></call></expr>)</condition> <block pos:start="57:64" pos:end="75:5">{<block_content pos:start="59:9" pos:end="73:9">

        <if_stmt pos:start="59:9" pos:end="73:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:31">(<expr pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:22">pflash_drv</name> <operator pos:start="59:24" pos:end="59:25">!=</operator> <name pos:start="59:27" pos:end="59:30">NULL</name></expr>)</condition> <block pos:start="59:33" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:20">

            <expr_stmt pos:start="61:13" pos:end="61:78"><expr pos:start="61:13" pos:end="61:77"><call pos:start="61:13" pos:end="61:77"><name pos:start="61:13" pos:end="61:19">fprintf</name><argument_list pos:start="61:20" pos:end="61:77">(<argument pos:start="61:21" pos:end="61:26"><expr pos:start="61:21" pos:end="61:26"><name pos:start="61:21" pos:end="61:26">stderr</name></expr></argument>, <argument pos:start="61:29" pos:end="61:76"><expr pos:start="61:29" pos:end="61:76"><literal type="string" pos:start="61:29" pos:end="61:76">"qemu: pflash cannot be used with kvm enabled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:20"><expr pos:start="63:13" pos:end="63:19"><call pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:16">exit</name><argument_list pos:start="63:17" pos:end="63:19">(<argument pos:start="63:18" pos:end="63:18"><expr pos:start="63:18" pos:end="63:18"><literal type="number" pos:start="63:18" pos:end="63:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="65:11" pos:end="73:9">else <block pos:start="65:16" pos:end="73:9">{<block_content pos:start="67:13" pos:end="71:19">

            <expr_stmt pos:start="67:13" pos:end="67:36"><expr pos:start="67:13" pos:end="67:35"><name pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:21">sysfw_dev</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:31">rom_only</name></name> <operator pos:start="67:33" pos:end="67:33">=</operator> <literal type="number" pos:start="67:35" pos:end="67:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:47"><expr pos:start="69:13" pos:end="69:46"><call pos:start="69:13" pos:end="69:46"><name pos:start="69:13" pos:end="69:34">old_pc_system_rom_init</name><argument_list pos:start="69:35" pos:end="69:46">(<argument pos:start="69:36" pos:end="69:45"><expr pos:start="69:36" pos:end="69:45"><name pos:start="69:36" pos:end="69:45">rom_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="71:13" pos:end="71:19">return;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="79:5" pos:end="81:28">/* If a pflash drive is not found, then create one using

       the bios filename. */</comment>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:27">(<expr pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:18">pflash_drv</name> <operator pos:start="83:20" pos:end="83:21">==</operator> <name pos:start="83:23" pos:end="83:26">NULL</name></expr>)</condition> <block pos:start="83:29" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:48">

        <expr_stmt pos:start="85:9" pos:end="85:31"><expr pos:start="85:9" pos:end="85:30"><call pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:28">pc_fw_add_pflash_drv</name><argument_list pos:start="85:29" pos:end="85:30">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:48"><expr pos:start="87:9" pos:end="87:47"><name pos:start="87:9" pos:end="87:18">pflash_drv</name> <operator pos:start="87:20" pos:end="87:20">=</operator> <call pos:start="87:22" pos:end="87:47"><name pos:start="87:22" pos:end="87:30">drive_get</name><argument_list pos:start="87:31" pos:end="87:47">(<argument pos:start="87:32" pos:end="87:40"><expr pos:start="87:32" pos:end="87:40"><name pos:start="87:32" pos:end="87:40">IF_PFLASH</name></expr></argument>, <argument pos:start="87:43" pos:end="87:43"><expr pos:start="87:43" pos:end="87:43"><literal type="number" pos:start="87:43" pos:end="87:43">0</literal></expr></argument>, <argument pos:start="87:46" pos:end="87:46"><expr pos:start="87:46" pos:end="87:46"><literal type="number" pos:start="87:46" pos:end="87:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="103:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:27">(<expr pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:18">pflash_drv</name> <operator pos:start="93:20" pos:end="93:21">!=</operator> <name pos:start="93:23" pos:end="93:26">NULL</name></expr>)</condition> <block pos:start="93:29" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:53">

        <expr_stmt pos:start="95:9" pos:end="95:53"><expr pos:start="95:9" pos:end="95:52"><call pos:start="95:9" pos:end="95:52"><name pos:start="95:9" pos:end="95:28">pc_system_flash_init</name><argument_list pos:start="95:29" pos:end="95:52">(<argument pos:start="95:30" pos:end="95:39"><expr pos:start="95:30" pos:end="95:39"><name pos:start="95:30" pos:end="95:39">rom_memory</name></expr></argument>, <argument pos:start="95:42" pos:end="95:51"><expr pos:start="95:42" pos:end="95:51"><name pos:start="95:42" pos:end="95:51">pflash_drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="103:5">else <block pos:start="97:12" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:16">

        <expr_stmt pos:start="99:9" pos:end="99:77"><expr pos:start="99:9" pos:end="99:76"><call pos:start="99:9" pos:end="99:76"><name pos:start="99:9" pos:end="99:15">fprintf</name><argument_list pos:start="99:16" pos:end="99:76">(<argument pos:start="99:17" pos:end="99:22"><expr pos:start="99:17" pos:end="99:22"><name pos:start="99:17" pos:end="99:22">stderr</name></expr></argument>, <argument pos:start="99:25" pos:end="99:75"><expr pos:start="99:25" pos:end="99:75"><literal type="string" pos:start="99:25" pos:end="99:75">"qemu: PC system firmware (pflash) not available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:16"><expr pos:start="101:9" pos:end="101:15"><call pos:start="101:9" pos:end="101:15"><name pos:start="101:9" pos:end="101:12">exit</name><argument_list pos:start="101:13" pos:end="101:15">(<argument pos:start="101:14" pos:end="101:14"><expr pos:start="101:14" pos:end="101:14"><literal type="number" pos:start="101:14" pos:end="101:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
