<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12625.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">socket_connect</name><parameter_list pos:start="1:19" pos:end="3:46">(<parameter pos:start="1:20" pos:end="1:44"><decl pos:start="1:20" pos:end="1:44"><type pos:start="1:20" pos:end="1:44"><name pos:start="1:20" pos:end="1:38">SocketAddressLegacy</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">addr</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:81"><decl pos:start="1:47" pos:end="1:81"><type pos:start="1:47" pos:end="1:81"><name pos:start="1:47" pos:end="1:71">NonBlockingConnectHandler</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:81">callback</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:31"><decl pos:start="3:20" pos:end="3:31"><type pos:start="3:20" pos:end="3:31"><name pos:start="3:20" pos:end="3:23">void</name> <modifier pos:start="3:25" pos:end="3:25">*</modifier></type><name pos:start="3:26" pos:end="3:31">opaque</name></decl></parameter>, <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:38">Error</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier><modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:45">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:14">

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">fd</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="57:5">switch <condition pos:start="11:12" pos:end="11:23">(<expr pos:start="11:13" pos:end="11:22"><name pos:start="11:13" pos:end="11:22"><name pos:start="11:13" pos:end="11:16">addr</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:22">type</name></name></expr>)</condition> <block pos:start="11:25" pos:end="57:5">{<block_content pos:start="13:5" pos:end="55:16">

    <case pos:start="13:5" pos:end="13:41">case <expr pos:start="13:10" pos:end="13:40"><name pos:start="13:10" pos:end="13:40">SOCKET_ADDRESS_LEGACY_KIND_INET</name></expr>:</case>

        <expr_stmt pos:start="15:9" pos:end="15:75"><expr pos:start="15:9" pos:end="15:74"><name pos:start="15:9" pos:end="15:10">fd</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:74"><name pos:start="15:14" pos:end="15:31">inet_connect_saddr</name><argument_list pos:start="15:32" pos:end="15:74">(<argument pos:start="15:33" pos:end="15:49"><expr pos:start="15:33" pos:end="15:49"><name pos:start="15:33" pos:end="15:49"><name pos:start="15:33" pos:end="15:36">addr</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:39">u</name><operator pos:start="15:40" pos:end="15:40">.</operator><name pos:start="15:41" pos:end="15:44">inet</name><operator pos:start="15:45" pos:end="15:45">.</operator><name pos:start="15:46" pos:end="15:49">data</name></name></expr></argument>, <argument pos:start="15:52" pos:end="15:59"><expr pos:start="15:52" pos:end="15:59"><name pos:start="15:52" pos:end="15:59">callback</name></expr></argument>, <argument pos:start="15:62" pos:end="15:67"><expr pos:start="15:62" pos:end="15:67"><name pos:start="15:62" pos:end="15:67">opaque</name></expr></argument>, <argument pos:start="15:70" pos:end="15:73"><expr pos:start="15:70" pos:end="15:73"><name pos:start="15:70" pos:end="15:73">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="17:9" pos:end="17:14">break;</break>



    <case pos:start="21:5" pos:end="21:41">case <expr pos:start="21:10" pos:end="21:40"><name pos:start="21:10" pos:end="21:40">SOCKET_ADDRESS_LEGACY_KIND_UNIX</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:77"><expr pos:start="23:9" pos:end="23:76"><name pos:start="23:9" pos:end="23:10">fd</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:76"><name pos:start="23:14" pos:end="23:31">unix_connect_saddr</name><argument_list pos:start="23:32" pos:end="23:76">(<argument pos:start="23:33" pos:end="23:51"><expr pos:start="23:33" pos:end="23:51"><name pos:start="23:33" pos:end="23:51"><name pos:start="23:33" pos:end="23:36">addr</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:39">u</name><operator pos:start="23:40" pos:end="23:40">.</operator><name pos:start="23:41" pos:end="23:46">q_unix</name><operator pos:start="23:47" pos:end="23:47">.</operator><name pos:start="23:48" pos:end="23:51">data</name></name></expr></argument>, <argument pos:start="23:54" pos:end="23:61"><expr pos:start="23:54" pos:end="23:61"><name pos:start="23:54" pos:end="23:61">callback</name></expr></argument>, <argument pos:start="23:64" pos:end="23:69"><expr pos:start="23:64" pos:end="23:69"><name pos:start="23:64" pos:end="23:69">opaque</name></expr></argument>, <argument pos:start="23:72" pos:end="23:75"><expr pos:start="23:72" pos:end="23:75"><name pos:start="23:72" pos:end="23:75">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>



    <case pos:start="29:5" pos:end="29:39">case <expr pos:start="29:10" pos:end="29:38"><name pos:start="29:10" pos:end="29:38">SOCKET_ADDRESS_LEGACY_KIND_FD</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:65"><expr pos:start="31:9" pos:end="31:64"><name pos:start="31:9" pos:end="31:10">fd</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:64"><name pos:start="31:14" pos:end="31:27">monitor_get_fd</name><argument_list pos:start="31:28" pos:end="31:64">(<argument pos:start="31:29" pos:end="31:35"><expr pos:start="31:29" pos:end="31:35"><name pos:start="31:29" pos:end="31:35">cur_mon</name></expr></argument>, <argument pos:start="31:38" pos:end="31:57"><expr pos:start="31:38" pos:end="31:57"><name pos:start="31:38" pos:end="31:57"><name pos:start="31:38" pos:end="31:41">addr</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:44">u</name><operator pos:start="31:45" pos:end="31:45">.</operator><name pos:start="31:46" pos:end="31:47">fd</name><operator pos:start="31:48" pos:end="31:48">.</operator><name pos:start="31:49" pos:end="31:52">data</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:57">str</name></name></expr></argument>, <argument pos:start="31:60" pos:end="31:63"><expr pos:start="31:60" pos:end="31:63"><name pos:start="31:60" pos:end="31:63">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:32">(<expr pos:start="33:13" pos:end="33:31"><name pos:start="33:13" pos:end="33:14">fd</name> <operator pos:start="33:16" pos:end="33:17">&gt;=</operator> <literal type="number" pos:start="33:19" pos:end="33:19">0</literal> <operator pos:start="33:21" pos:end="33:22">&amp;&amp;</operator> <name pos:start="33:24" pos:end="33:31">callback</name></expr>)</condition> <block pos:start="33:34" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:39">

            <expr_stmt pos:start="35:13" pos:end="35:34"><expr pos:start="35:13" pos:end="35:33"><call pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:29">qemu_set_nonblock</name><argument_list pos:start="35:30" pos:end="35:33">(<argument pos:start="35:31" pos:end="35:32"><expr pos:start="35:31" pos:end="35:32"><name pos:start="35:31" pos:end="35:32">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:39"><expr pos:start="37:13" pos:end="37:38"><call pos:start="37:13" pos:end="37:38"><name pos:start="37:13" pos:end="37:20">callback</name><argument_list pos:start="37:21" pos:end="37:38">(<argument pos:start="37:22" pos:end="37:23"><expr pos:start="37:22" pos:end="37:23"><name pos:start="37:22" pos:end="37:23">fd</name></expr></argument>, <argument pos:start="37:26" pos:end="37:29"><expr pos:start="37:26" pos:end="37:29"><name pos:start="37:26" pos:end="37:29">NULL</name></expr></argument>, <argument pos:start="37:32" pos:end="37:37"><expr pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:37">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>



    <case pos:start="45:5" pos:end="45:42">case <expr pos:start="45:10" pos:end="45:41"><name pos:start="45:10" pos:end="45:41">SOCKET_ADDRESS_LEGACY_KIND_VSOCK</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:77"><expr pos:start="47:9" pos:end="47:76"><name pos:start="47:9" pos:end="47:10">fd</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:76"><name pos:start="47:14" pos:end="47:32">vsock_connect_saddr</name><argument_list pos:start="47:33" pos:end="47:76">(<argument pos:start="47:34" pos:end="47:51"><expr pos:start="47:34" pos:end="47:51"><name pos:start="47:34" pos:end="47:51"><name pos:start="47:34" pos:end="47:37">addr</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:40">u</name><operator pos:start="47:41" pos:end="47:41">.</operator><name pos:start="47:42" pos:end="47:46">vsock</name><operator pos:start="47:47" pos:end="47:47">.</operator><name pos:start="47:48" pos:end="47:51">data</name></name></expr></argument>, <argument pos:start="47:54" pos:end="47:61"><expr pos:start="47:54" pos:end="47:61"><name pos:start="47:54" pos:end="47:61">callback</name></expr></argument>, <argument pos:start="47:64" pos:end="47:69"><expr pos:start="47:64" pos:end="47:69"><name pos:start="47:64" pos:end="47:69">opaque</name></expr></argument>, <argument pos:start="47:72" pos:end="47:75"><expr pos:start="47:72" pos:end="47:75"><name pos:start="47:72" pos:end="47:75">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>



    <default pos:start="53:5" pos:end="53:12">default:</default>

        <expr_stmt pos:start="55:9" pos:end="55:16"><expr pos:start="55:9" pos:end="55:15"><call pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:13">abort</name><argument_list pos:start="55:14" pos:end="55:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <return pos:start="59:5" pos:end="59:14">return <expr pos:start="59:12" pos:end="59:13"><name pos:start="59:12" pos:end="59:13">fd</name></expr>;</return>

</block_content>}</block></function>
</unit>
