<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12217.c" pos:tabs="8"><function pos:start="1:1" pos:end="333:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">hScale_altivec_real</name><parameter_list pos:start="1:32" pos:end="5:73">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:42">SwsContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">c</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:54">int16_t</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">dst</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:69"><decl pos:start="1:62" pos:end="1:69"><type pos:start="1:62" pos:end="1:69"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:69">dstW</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:50">src</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:73"><decl pos:start="3:53" pos:end="3:73"><type pos:start="3:53" pos:end="3:73"><specifier pos:start="3:53" pos:end="3:57">const</specifier> <name pos:start="3:59" pos:end="3:65">int16_t</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:73">filter</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:56"><decl pos:start="5:33" pos:end="5:56"><type pos:start="5:33" pos:end="5:56"><specifier pos:start="5:33" pos:end="5:37">const</specifier> <name pos:start="5:39" pos:end="5:45">int16_t</name> <modifier pos:start="5:47" pos:end="5:47">*</modifier></type><name pos:start="5:48" pos:end="5:56">filterPos</name></decl></parameter>, <parameter pos:start="5:59" pos:end="5:72"><decl pos:start="5:59" pos:end="5:72"><type pos:start="5:59" pos:end="5:72"><name pos:start="5:59" pos:end="5:61">int</name></type> <name pos:start="5:63" pos:end="5:72">filterSize</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="333:1">{<block_content pos:start="9:5" pos:end="331:9">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:12">register</specifier> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:39"><expr pos:start="11:5" pos:end="11:38"><call pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:19">DECLARE_ALIGNED</name><argument_list pos:start="11:20" pos:end="11:35">(<argument pos:start="11:21" pos:end="11:22"><expr pos:start="11:21" pos:end="11:22"><literal type="number" pos:start="11:21" pos:end="11:22">16</literal></expr></argument>, <argument pos:start="11:25" pos:end="11:27"><expr pos:start="11:25" pos:end="11:27"><name pos:start="11:25" pos:end="11:27">int</name></expr></argument>, <argument pos:start="11:30" pos:end="11:34"><expr pos:start="11:30" pos:end="11:34"><name pos:start="11:30" pos:end="11:34">tempo</name></expr></argument>)</argument_list></call><index pos:start="11:36" pos:end="11:38">[<expr pos:start="11:37" pos:end="11:37"><literal type="number" pos:start="11:37" pos:end="11:37">4</literal></expr>]</index></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="331:9"><if pos:start="15:5" pos:end="33:5">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:18">filterSize</name> <operator pos:start="15:20" pos:end="15:20">%</operator> <literal type="number" pos:start="15:22" pos:end="15:22">4</literal></expr>)</condition> <block pos:start="15:25" pos:end="33:5">{<block_content pos:start="17:9" pos:end="31:9">

        <for pos:start="17:9" pos:end="31:9">for <control pos:start="17:13" pos:end="17:34">(<init pos:start="17:14" pos:end="17:19"><expr pos:start="17:14" pos:end="17:18"><name pos:start="17:14" pos:end="17:14">i</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</init> <condition pos:start="17:21" pos:end="17:29"><expr pos:start="17:21" pos:end="17:28"><name pos:start="17:21" pos:end="17:21">i</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <name pos:start="17:25" pos:end="17:28">dstW</name></expr>;</condition> <incr pos:start="17:31" pos:end="17:33"><expr pos:start="17:31" pos:end="17:33"><name pos:start="17:31" pos:end="17:31">i</name><operator pos:start="17:32" pos:end="17:33">++</operator></expr></incr>)</control> <block pos:start="17:36" pos:end="31:9">{<block_content pos:start="19:13" pos:end="29:52">

            <decl_stmt pos:start="19:13" pos:end="19:27"><decl pos:start="19:13" pos:end="19:26"><type pos:start="19:13" pos:end="19:24"><specifier pos:start="19:13" pos:end="19:20">register</specifier> <name pos:start="19:22" pos:end="19:24">int</name></type> <name pos:start="19:26" pos:end="19:26">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="21:13" pos:end="21:47"><decl pos:start="21:13" pos:end="21:46"><type pos:start="21:13" pos:end="21:24"><specifier pos:start="21:13" pos:end="21:20">register</specifier> <name pos:start="21:22" pos:end="21:24">int</name></type> <name pos:start="21:26" pos:end="21:31">srcPos</name> <init pos:start="21:33" pos:end="21:46">= <expr pos:start="21:35" pos:end="21:46"><name pos:start="21:35" pos:end="21:46"><name pos:start="21:35" pos:end="21:43">filterPos</name><index pos:start="21:44" pos:end="21:46">[<expr pos:start="21:45" pos:end="21:45"><name pos:start="21:45" pos:end="21:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="23:13" pos:end="23:36"><decl pos:start="23:13" pos:end="23:35"><type pos:start="23:13" pos:end="23:24"><specifier pos:start="23:13" pos:end="23:20">register</specifier> <name pos:start="23:22" pos:end="23:24">int</name></type> <name pos:start="23:26" pos:end="23:28">val</name>    <init pos:start="23:33" pos:end="23:35">= <expr pos:start="23:35" pos:end="23:35"><literal type="number" pos:start="23:35" pos:end="23:35">0</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="25:13" pos:end="27:75">for <control pos:start="25:17" pos:end="25:44">(<init pos:start="25:18" pos:end="25:23"><expr pos:start="25:18" pos:end="25:22"><name pos:start="25:18" pos:end="25:18">j</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>;</init> <condition pos:start="25:25" pos:end="25:39"><expr pos:start="25:25" pos:end="25:38"><name pos:start="25:25" pos:end="25:25">j</name> <operator pos:start="25:27" pos:end="25:27">&lt;</operator> <name pos:start="25:29" pos:end="25:38">filterSize</name></expr>;</condition> <incr pos:start="25:41" pos:end="25:43"><expr pos:start="25:41" pos:end="25:43"><name pos:start="25:41" pos:end="25:41">j</name><operator pos:start="25:42" pos:end="25:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:17" pos:end="27:75"><block_content pos:start="27:17" pos:end="27:75">

                <expr_stmt pos:start="27:17" pos:end="27:75"><expr pos:start="27:17" pos:end="27:74"><name pos:start="27:17" pos:end="27:19">val</name> <operator pos:start="27:21" pos:end="27:22">+=</operator> <operator pos:start="27:24" pos:end="27:24">(</operator><operator pos:start="27:25" pos:end="27:25">(</operator><name pos:start="27:26" pos:end="27:28">int</name><operator pos:start="27:29" pos:end="27:29">)</operator><name pos:start="27:30" pos:end="27:44"><name pos:start="27:30" pos:end="27:32">src</name><index pos:start="27:33" pos:end="27:44">[<expr pos:start="27:34" pos:end="27:43"><name pos:start="27:34" pos:end="27:39">srcPos</name> <operator pos:start="27:41" pos:end="27:41">+</operator> <name pos:start="27:43" pos:end="27:43">j</name></expr>]</index></name><operator pos:start="27:45" pos:end="27:45">)</operator> <operator pos:start="27:47" pos:end="27:47">*</operator> <name pos:start="27:49" pos:end="27:74"><name pos:start="27:49" pos:end="27:54">filter</name><index pos:start="27:55" pos:end="27:74">[<expr pos:start="27:56" pos:end="27:73"><name pos:start="27:56" pos:end="27:65">filterSize</name> <operator pos:start="27:67" pos:end="27:67">*</operator> <name pos:start="27:69" pos:end="27:69">i</name> <operator pos:start="27:71" pos:end="27:71">+</operator> <name pos:start="27:73" pos:end="27:73">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="29:13" pos:end="29:52"><expr pos:start="29:13" pos:end="29:51"><name pos:start="29:13" pos:end="29:18"><name pos:start="29:13" pos:end="29:15">dst</name><index pos:start="29:16" pos:end="29:18">[<expr pos:start="29:17" pos:end="29:17"><name pos:start="29:17" pos:end="29:17">i</name></expr>]</index></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <call pos:start="29:22" pos:end="29:51"><name pos:start="29:22" pos:end="29:26">FFMIN</name><argument_list pos:start="29:27" pos:end="29:51">(<argument pos:start="29:28" pos:end="29:35"><expr pos:start="29:28" pos:end="29:35"><name pos:start="29:28" pos:end="29:30">val</name> <operator pos:start="29:32" pos:end="29:33">&gt;&gt;</operator> <literal type="number" pos:start="29:35" pos:end="29:35">7</literal></expr></argument>, <argument pos:start="29:38" pos:end="29:50"><expr pos:start="29:38" pos:end="29:50"><operator pos:start="29:38" pos:end="29:38">(</operator><literal type="number" pos:start="29:39" pos:end="29:39">1</literal> <operator pos:start="29:41" pos:end="29:42">&lt;&lt;</operator> <literal type="number" pos:start="29:44" pos:end="29:45">15</literal><operator pos:start="29:46" pos:end="29:46">)</operator> <operator pos:start="29:48" pos:end="29:48">-</operator> <literal type="number" pos:start="29:50" pos:end="29:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="331:9">else<block type="pseudo" pos:start="35:9" pos:end="331:9"><block_content pos:start="35:9" pos:end="331:9">

        <switch pos:start="35:9" pos:end="331:9">switch <condition pos:start="35:16" pos:end="35:27">(<expr pos:start="35:17" pos:end="35:26"><name pos:start="35:17" pos:end="35:26">filterSize</name></expr>)</condition> <block pos:start="35:29" pos:end="331:9">{<block_content pos:start="37:9" pos:end="329:13">

        <case pos:start="37:9" pos:end="37:15">case <expr pos:start="37:14" pos:end="37:14"><literal type="number" pos:start="37:14" pos:end="37:14">4</literal></expr>:</case>

            <for pos:start="39:13" pos:end="105:13">for <control pos:start="39:17" pos:end="39:38">(<init pos:start="39:18" pos:end="39:23"><expr pos:start="39:18" pos:end="39:22"><name pos:start="39:18" pos:end="39:18">i</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr>;</init> <condition pos:start="39:25" pos:end="39:33"><expr pos:start="39:25" pos:end="39:32"><name pos:start="39:25" pos:end="39:25">i</name> <operator pos:start="39:27" pos:end="39:27">&lt;</operator> <name pos:start="39:29" pos:end="39:32">dstW</name></expr>;</condition> <incr pos:start="39:35" pos:end="39:37"><expr pos:start="39:35" pos:end="39:37"><name pos:start="39:35" pos:end="39:35">i</name><operator pos:start="39:36" pos:end="39:37">++</operator></expr></incr>)</control> <block pos:start="39:40" pos:end="105:13">{<block_content pos:start="41:17" pos:end="103:61">

                <decl_stmt pos:start="41:17" pos:end="41:51"><decl pos:start="41:17" pos:end="41:50"><type pos:start="41:17" pos:end="41:28"><specifier pos:start="41:17" pos:end="41:24">register</specifier> <name pos:start="41:26" pos:end="41:28">int</name></type> <name pos:start="41:30" pos:end="41:35">srcPos</name> <init pos:start="41:37" pos:end="41:50">= <expr pos:start="41:39" pos:end="41:50"><name pos:start="41:39" pos:end="41:50"><name pos:start="41:39" pos:end="41:47">filterPos</name><index pos:start="41:48" pos:end="41:50">[<expr pos:start="41:49" pos:end="41:49"><name pos:start="41:49" pos:end="41:49">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="45:17" pos:end="45:66"><decl pos:start="45:17" pos:end="45:65"><type pos:start="45:17" pos:end="45:36"><name pos:start="45:17" pos:end="45:22">vector</name> <name pos:start="45:24" pos:end="45:31">unsigned</name> <name pos:start="45:33" pos:end="45:36">char</name></type> <name pos:start="45:38" pos:end="45:43">src_v0</name> <init pos:start="45:45" pos:end="45:65">= <expr pos:start="45:47" pos:end="45:65"><call pos:start="45:47" pos:end="45:65"><name pos:start="45:47" pos:end="45:52">vec_ld</name><argument_list pos:start="45:53" pos:end="45:65">(<argument pos:start="45:54" pos:end="45:59"><expr pos:start="45:54" pos:end="45:59"><name pos:start="45:54" pos:end="45:59">srcPos</name></expr></argument>, <argument pos:start="45:62" pos:end="45:64"><expr pos:start="45:62" pos:end="45:64"><name pos:start="45:62" pos:end="45:64">src</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="47:17" pos:end="47:52"><decl pos:start="47:17" pos:end="47:43"><type pos:start="47:17" pos:end="47:36"><name pos:start="47:17" pos:end="47:22">vector</name> <name pos:start="47:24" pos:end="47:31">unsigned</name> <name pos:start="47:33" pos:end="47:36">char</name></type> <name pos:start="47:38" pos:end="47:43">src_v1</name></decl>, <decl pos:start="47:46" pos:end="47:51"><type ref="prev" pos:start="47:17" pos:end="47:36"/><name pos:start="47:46" pos:end="47:51">src_vF</name></decl>;</decl_stmt>

                <decl_stmt pos:start="49:17" pos:end="49:52"><decl pos:start="49:17" pos:end="49:41"><type pos:start="49:17" pos:end="49:35"><name pos:start="49:17" pos:end="49:22">vector</name> <name pos:start="49:24" pos:end="49:29">signed</name> <name pos:start="49:31" pos:end="49:35">short</name></type> <name pos:start="49:37" pos:end="49:41">src_v</name></decl>, <decl pos:start="49:44" pos:end="49:51"><type ref="prev" pos:start="49:17" pos:end="49:35"/><name pos:start="49:44" pos:end="49:51">filter_v</name></decl>;</decl_stmt>

                <decl_stmt pos:start="51:17" pos:end="51:51"><decl pos:start="51:17" pos:end="51:43"><type pos:start="51:17" pos:end="51:33"><name pos:start="51:17" pos:end="51:22">vector</name> <name pos:start="51:24" pos:end="51:29">signed</name> <name pos:start="51:31" pos:end="51:33">int</name></type> <name pos:start="51:35" pos:end="51:43">val_vEven</name></decl>, <decl pos:start="51:46" pos:end="51:50"><type ref="prev" pos:start="51:17" pos:end="51:33"/><name pos:start="51:46" pos:end="51:50">val_s</name></decl>;</decl_stmt>

                <if_stmt pos:start="53:17" pos:end="57:17"><if pos:start="53:17" pos:end="57:17">if <condition pos:start="53:20" pos:end="53:58">(<expr pos:start="53:21" pos:end="53:57"><operator pos:start="53:21" pos:end="53:21">(</operator><operator pos:start="53:22" pos:end="53:22">(</operator><operator pos:start="53:23" pos:end="53:23">(</operator><name pos:start="53:24" pos:end="53:32">uintptr_t</name><operator pos:start="53:33" pos:end="53:33">)</operator><name pos:start="53:34" pos:end="53:36">src</name> <operator pos:start="53:38" pos:end="53:38">+</operator> <name pos:start="53:40" pos:end="53:45">srcPos</name><operator pos:start="53:46" pos:end="53:46">)</operator> <operator pos:start="53:48" pos:end="53:48">%</operator> <literal type="number" pos:start="53:50" pos:end="53:51">16</literal><operator pos:start="53:52" pos:end="53:52">)</operator> <operator pos:start="53:54" pos:end="53:54">&gt;</operator> <literal type="number" pos:start="53:56" pos:end="53:57">12</literal></expr>)</condition> <block pos:start="53:60" pos:end="57:17">{<block_content pos:start="55:21" pos:end="55:54">

                    <expr_stmt pos:start="55:21" pos:end="55:54"><expr pos:start="55:21" pos:end="55:53"><name pos:start="55:21" pos:end="55:26">src_v1</name> <operator pos:start="55:28" pos:end="55:28">=</operator> <call pos:start="55:30" pos:end="55:53"><name pos:start="55:30" pos:end="55:35">vec_ld</name><argument_list pos:start="55:36" pos:end="55:53">(<argument pos:start="55:37" pos:end="55:47"><expr pos:start="55:37" pos:end="55:47"><name pos:start="55:37" pos:end="55:42">srcPos</name> <operator pos:start="55:44" pos:end="55:44">+</operator> <literal type="number" pos:start="55:46" pos:end="55:47">16</literal></expr></argument>, <argument pos:start="55:50" pos:end="55:52"><expr pos:start="55:50" pos:end="55:52"><name pos:start="55:50" pos:end="55:52">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:73"><expr pos:start="59:17" pos:end="59:72"><name pos:start="59:17" pos:end="59:22">src_vF</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <call pos:start="59:26" pos:end="59:72"><name pos:start="59:26" pos:end="59:33">vec_perm</name><argument_list pos:start="59:34" pos:end="59:72">(<argument pos:start="59:35" pos:end="59:40"><expr pos:start="59:35" pos:end="59:40"><name pos:start="59:35" pos:end="59:40">src_v0</name></expr></argument>, <argument pos:start="59:43" pos:end="59:48"><expr pos:start="59:43" pos:end="59:48"><name pos:start="59:43" pos:end="59:48">src_v1</name></expr></argument>, <argument pos:start="59:51" pos:end="59:71"><expr pos:start="59:51" pos:end="59:71"><call pos:start="59:51" pos:end="59:71"><name pos:start="59:51" pos:end="59:58">vec_lvsl</name><argument_list pos:start="59:59" pos:end="59:71">(<argument pos:start="59:60" pos:end="59:65"><expr pos:start="59:60" pos:end="59:65"><name pos:start="59:60" pos:end="59:65">srcPos</name></expr></argument>, <argument pos:start="59:68" pos:end="59:70"><expr pos:start="59:68" pos:end="59:70"><name pos:start="59:68" pos:end="59:70">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="63:17" pos:end="65:95"><expr pos:start="63:17" pos:end="65:94"><name pos:start="63:17" pos:end="63:21">src_v</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <comment type="line" pos:start="63:25" pos:end="63:54">// vec_unpackh sign-extends...</comment>

                        <operator pos:start="65:25" pos:end="65:25">(</operator><name pos:start="65:26" pos:end="65:31">vector</name> <name pos:start="65:33" pos:end="65:38">signed</name> <name pos:start="65:40" pos:end="65:44">short</name><operator pos:start="65:45" pos:end="65:45">)</operator><operator pos:start="65:46" pos:end="65:46">(</operator><call pos:start="65:47" pos:end="65:93"><name pos:start="65:47" pos:end="65:56">vec_mergeh</name><argument_list pos:start="65:57" pos:end="65:93">(<argument pos:start="65:58" pos:end="65:84"><expr pos:start="65:58" pos:end="65:84"><operator pos:start="65:58" pos:end="65:58">(</operator><name pos:start="65:59" pos:end="65:64">vector</name> <name pos:start="65:66" pos:end="65:73">unsigned</name> <name pos:start="65:75" pos:end="65:78">char</name><operator pos:start="65:79" pos:end="65:79">)</operator><name pos:start="65:80" pos:end="65:84">vzero</name></expr></argument>, <argument pos:start="65:87" pos:end="65:92"><expr pos:start="65:87" pos:end="65:92"><name pos:start="65:87" pos:end="65:92">src_vF</name></expr></argument>)</argument_list></call><operator pos:start="65:94" pos:end="65:94">)</operator></expr>;</expr_stmt>

                <comment type="line" pos:start="67:17" pos:end="67:57">// now put our elements in the even slots</comment>

                <expr_stmt pos:start="69:17" pos:end="69:70"><expr pos:start="69:17" pos:end="69:69"><name pos:start="69:17" pos:end="69:21">src_v</name> <operator pos:start="69:23" pos:end="69:23">=</operator> <call pos:start="69:25" pos:end="69:69"><name pos:start="69:25" pos:end="69:34">vec_mergeh</name><argument_list pos:start="69:35" pos:end="69:69">(<argument pos:start="69:36" pos:end="69:40"><expr pos:start="69:36" pos:end="69:40"><name pos:start="69:36" pos:end="69:40">src_v</name></expr></argument>, <argument pos:start="69:43" pos:end="69:68"><expr pos:start="69:43" pos:end="69:68"><operator pos:start="69:43" pos:end="69:43">(</operator><name pos:start="69:44" pos:end="69:49">vector</name> <name pos:start="69:51" pos:end="69:56">signed</name> <name pos:start="69:58" pos:end="69:62">short</name><operator pos:start="69:63" pos:end="69:63">)</operator><name pos:start="69:64" pos:end="69:68">vzero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="73:17" pos:end="73:50"><expr pos:start="73:17" pos:end="73:49"><name pos:start="73:17" pos:end="73:24">filter_v</name> <operator pos:start="73:26" pos:end="73:26">=</operator> <call pos:start="73:28" pos:end="73:49"><name pos:start="73:28" pos:end="73:33">vec_ld</name><argument_list pos:start="73:34" pos:end="73:49">(<argument pos:start="73:35" pos:end="73:40"><expr pos:start="73:35" pos:end="73:40"><name pos:start="73:35" pos:end="73:35">i</name> <operator pos:start="73:37" pos:end="73:38">&lt;&lt;</operator> <literal type="number" pos:start="73:40" pos:end="73:40">3</literal></expr></argument>, <argument pos:start="73:43" pos:end="73:48"><expr pos:start="73:43" pos:end="73:48"><name pos:start="73:43" pos:end="73:48">filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:start="75:17" pos:end="75:79">// The 3 above is 2 (filterSize == 4) + 1 (sizeof(short) == 2).</comment>



                <comment type="line" pos:start="79:17" pos:end="79:70">// The neat trick: We only care for half the elements,</comment>

                <comment type="line" pos:start="81:17" pos:end="81:73">// high or low depending on (i&lt;&lt;3)%16 (it's 0 or 8 here),</comment>

                <comment type="line" pos:start="83:17" pos:end="83:64">// and we're going to use vec_mule, so we choose</comment>

                <comment type="line" pos:start="85:17" pos:end="85:78">// carefully how to "unpack" the elements into the even slots.</comment>

                <if_stmt pos:start="87:17" pos:end="93:80"><if pos:start="87:17" pos:end="89:80">if <condition pos:start="87:20" pos:end="87:34">(<expr pos:start="87:21" pos:end="87:33"><operator pos:start="87:21" pos:end="87:21">(</operator><name pos:start="87:22" pos:end="87:22">i</name> <operator pos:start="87:24" pos:end="87:25">&lt;&lt;</operator> <literal type="number" pos:start="87:27" pos:end="87:27">3</literal><operator pos:start="87:28" pos:end="87:28">)</operator> <operator pos:start="87:30" pos:end="87:30">%</operator> <literal type="number" pos:start="87:32" pos:end="87:33">16</literal></expr>)</condition><block type="pseudo" pos:start="89:21" pos:end="89:80"><block_content pos:start="89:21" pos:end="89:80">

                    <expr_stmt pos:start="89:21" pos:end="89:80"><expr pos:start="89:21" pos:end="89:79"><name pos:start="89:21" pos:end="89:28">filter_v</name> <operator pos:start="89:30" pos:end="89:30">=</operator> <call pos:start="89:32" pos:end="89:79"><name pos:start="89:32" pos:end="89:41">vec_mergel</name><argument_list pos:start="89:42" pos:end="89:79">(<argument pos:start="89:43" pos:end="89:50"><expr pos:start="89:43" pos:end="89:50"><name pos:start="89:43" pos:end="89:50">filter_v</name></expr></argument>, <argument pos:start="89:53" pos:end="89:78"><expr pos:start="89:53" pos:end="89:78"><operator pos:start="89:53" pos:end="89:53">(</operator><name pos:start="89:54" pos:end="89:59">vector</name> <name pos:start="89:61" pos:end="89:66">signed</name> <name pos:start="89:68" pos:end="89:72">short</name><operator pos:start="89:73" pos:end="89:73">)</operator><name pos:start="89:74" pos:end="89:78">vzero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="91:17" pos:end="93:80">else<block type="pseudo" pos:start="93:21" pos:end="93:80"><block_content pos:start="93:21" pos:end="93:80">

                    <expr_stmt pos:start="93:21" pos:end="93:80"><expr pos:start="93:21" pos:end="93:79"><name pos:start="93:21" pos:end="93:28">filter_v</name> <operator pos:start="93:30" pos:end="93:30">=</operator> <call pos:start="93:32" pos:end="93:79"><name pos:start="93:32" pos:end="93:41">vec_mergeh</name><argument_list pos:start="93:42" pos:end="93:79">(<argument pos:start="93:43" pos:end="93:50"><expr pos:start="93:43" pos:end="93:50"><name pos:start="93:43" pos:end="93:50">filter_v</name></expr></argument>, <argument pos:start="93:53" pos:end="93:78"><expr pos:start="93:53" pos:end="93:78"><operator pos:start="93:53" pos:end="93:53">(</operator><name pos:start="93:54" pos:end="93:59">vector</name> <name pos:start="93:61" pos:end="93:66">signed</name> <name pos:start="93:68" pos:end="93:72">short</name><operator pos:start="93:73" pos:end="93:73">)</operator><name pos:start="93:74" pos:end="93:78">vzero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="97:17" pos:end="97:54"><expr pos:start="97:17" pos:end="97:53"><name pos:start="97:17" pos:end="97:25">val_vEven</name> <operator pos:start="97:27" pos:end="97:27">=</operator> <call pos:start="97:29" pos:end="97:53"><name pos:start="97:29" pos:end="97:36">vec_mule</name><argument_list pos:start="97:37" pos:end="97:53">(<argument pos:start="97:38" pos:end="97:42"><expr pos:start="97:38" pos:end="97:42"><name pos:start="97:38" pos:end="97:42">src_v</name></expr></argument>, <argument pos:start="97:45" pos:end="97:52"><expr pos:start="97:45" pos:end="97:52"><name pos:start="97:45" pos:end="97:52">filter_v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:55"><expr pos:start="99:17" pos:end="99:54"><name pos:start="99:17" pos:end="99:21">val_s</name>     <operator pos:start="99:27" pos:end="99:27">=</operator> <call pos:start="99:29" pos:end="99:54"><name pos:start="99:29" pos:end="99:36">vec_sums</name><argument_list pos:start="99:37" pos:end="99:54">(<argument pos:start="99:38" pos:end="99:46"><expr pos:start="99:38" pos:end="99:46"><name pos:start="99:38" pos:end="99:46">val_vEven</name></expr></argument>, <argument pos:start="99:49" pos:end="99:53"><expr pos:start="99:49" pos:end="99:53"><name pos:start="99:49" pos:end="99:53">vzero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:40"><expr pos:start="101:17" pos:end="101:39"><call pos:start="101:17" pos:end="101:39"><name pos:start="101:17" pos:end="101:22">vec_st</name><argument_list pos:start="101:23" pos:end="101:39">(<argument pos:start="101:24" pos:end="101:28"><expr pos:start="101:24" pos:end="101:28"><name pos:start="101:24" pos:end="101:28">val_s</name></expr></argument>, <argument pos:start="101:31" pos:end="101:31"><expr pos:start="101:31" pos:end="101:31"><literal type="number" pos:start="101:31" pos:end="101:31">0</literal></expr></argument>, <argument pos:start="101:34" pos:end="101:38"><expr pos:start="101:34" pos:end="101:38"><name pos:start="101:34" pos:end="101:38">tempo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:61"><expr pos:start="103:17" pos:end="103:60"><name pos:start="103:17" pos:end="103:22"><name pos:start="103:17" pos:end="103:19">dst</name><index pos:start="103:20" pos:end="103:22">[<expr pos:start="103:21" pos:end="103:21"><name pos:start="103:21" pos:end="103:21">i</name></expr>]</index></name> <operator pos:start="103:24" pos:end="103:24">=</operator> <call pos:start="103:26" pos:end="103:60"><name pos:start="103:26" pos:end="103:30">FFMIN</name><argument_list pos:start="103:31" pos:end="103:60">(<argument pos:start="103:32" pos:end="103:44"><expr pos:start="103:32" pos:end="103:44"><name pos:start="103:32" pos:end="103:39"><name pos:start="103:32" pos:end="103:36">tempo</name><index pos:start="103:37" pos:end="103:39">[<expr pos:start="103:38" pos:end="103:38"><literal type="number" pos:start="103:38" pos:end="103:38">3</literal></expr>]</index></name> <operator pos:start="103:41" pos:end="103:42">&gt;&gt;</operator> <literal type="number" pos:start="103:44" pos:end="103:44">7</literal></expr></argument>, <argument pos:start="103:47" pos:end="103:59"><expr pos:start="103:47" pos:end="103:59"><operator pos:start="103:47" pos:end="103:47">(</operator><literal type="number" pos:start="103:48" pos:end="103:48">1</literal> <operator pos:start="103:50" pos:end="103:51">&lt;&lt;</operator> <literal type="number" pos:start="103:53" pos:end="103:54">15</literal><operator pos:start="103:55" pos:end="103:55">)</operator> <operator pos:start="103:57" pos:end="103:57">-</operator> <literal type="number" pos:start="103:59" pos:end="103:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        <break pos:start="107:9" pos:end="107:14">break;</break>



        <case pos:start="111:9" pos:end="111:15">case <expr pos:start="111:14" pos:end="111:14"><literal type="number" pos:start="111:14" pos:end="111:14">8</literal></expr>:</case>

            <for pos:start="113:13" pos:end="155:13">for <control pos:start="113:17" pos:end="113:38">(<init pos:start="113:18" pos:end="113:23"><expr pos:start="113:18" pos:end="113:22"><name pos:start="113:18" pos:end="113:18">i</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <literal type="number" pos:start="113:22" pos:end="113:22">0</literal></expr>;</init> <condition pos:start="113:25" pos:end="113:33"><expr pos:start="113:25" pos:end="113:32"><name pos:start="113:25" pos:end="113:25">i</name> <operator pos:start="113:27" pos:end="113:27">&lt;</operator> <name pos:start="113:29" pos:end="113:32">dstW</name></expr>;</condition> <incr pos:start="113:35" pos:end="113:37"><expr pos:start="113:35" pos:end="113:37"><name pos:start="113:35" pos:end="113:35">i</name><operator pos:start="113:36" pos:end="113:37">++</operator></expr></incr>)</control> <block pos:start="113:40" pos:end="155:13">{<block_content pos:start="115:17" pos:end="153:61">

                <decl_stmt pos:start="115:17" pos:end="115:51"><decl pos:start="115:17" pos:end="115:50"><type pos:start="115:17" pos:end="115:28"><specifier pos:start="115:17" pos:end="115:24">register</specifier> <name pos:start="115:26" pos:end="115:28">int</name></type> <name pos:start="115:30" pos:end="115:35">srcPos</name> <init pos:start="115:37" pos:end="115:50">= <expr pos:start="115:39" pos:end="115:50"><name pos:start="115:39" pos:end="115:50"><name pos:start="115:39" pos:end="115:47">filterPos</name><index pos:start="115:48" pos:end="115:50">[<expr pos:start="115:49" pos:end="115:49"><name pos:start="115:49" pos:end="115:49">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="119:17" pos:end="119:66"><decl pos:start="119:17" pos:end="119:65"><type pos:start="119:17" pos:end="119:36"><name pos:start="119:17" pos:end="119:22">vector</name> <name pos:start="119:24" pos:end="119:31">unsigned</name> <name pos:start="119:33" pos:end="119:36">char</name></type> <name pos:start="119:38" pos:end="119:43">src_v0</name> <init pos:start="119:45" pos:end="119:65">= <expr pos:start="119:47" pos:end="119:65"><call pos:start="119:47" pos:end="119:65"><name pos:start="119:47" pos:end="119:52">vec_ld</name><argument_list pos:start="119:53" pos:end="119:65">(<argument pos:start="119:54" pos:end="119:59"><expr pos:start="119:54" pos:end="119:59"><name pos:start="119:54" pos:end="119:59">srcPos</name></expr></argument>, <argument pos:start="119:62" pos:end="119:64"><expr pos:start="119:62" pos:end="119:64"><name pos:start="119:62" pos:end="119:64">src</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="121:17" pos:end="121:52"><decl pos:start="121:17" pos:end="121:43"><type pos:start="121:17" pos:end="121:36"><name pos:start="121:17" pos:end="121:22">vector</name> <name pos:start="121:24" pos:end="121:31">unsigned</name> <name pos:start="121:33" pos:end="121:36">char</name></type> <name pos:start="121:38" pos:end="121:43">src_v1</name></decl>, <decl pos:start="121:46" pos:end="121:51"><type ref="prev" pos:start="121:17" pos:end="121:36"/><name pos:start="121:46" pos:end="121:51">src_vF</name></decl>;</decl_stmt>

                <decl_stmt pos:start="123:17" pos:end="123:52"><decl pos:start="123:17" pos:end="123:41"><type pos:start="123:17" pos:end="123:35"><name pos:start="123:17" pos:end="123:22">vector</name> <name pos:start="123:24" pos:end="123:29">signed</name> <name pos:start="123:31" pos:end="123:35">short</name></type> <name pos:start="123:37" pos:end="123:41">src_v</name></decl>, <decl pos:start="123:44" pos:end="123:51"><type ref="prev" pos:start="123:17" pos:end="123:35"/><name pos:start="123:44" pos:end="123:51">filter_v</name></decl>;</decl_stmt>

                <decl_stmt pos:start="125:17" pos:end="125:47"><decl pos:start="125:17" pos:end="125:39"><type pos:start="125:17" pos:end="125:33"><name pos:start="125:17" pos:end="125:22">vector</name> <name pos:start="125:24" pos:end="125:29">signed</name> <name pos:start="125:31" pos:end="125:33">int</name></type> <name pos:start="125:35" pos:end="125:39">val_v</name></decl>, <decl pos:start="125:42" pos:end="125:46"><type ref="prev" pos:start="125:17" pos:end="125:33"/><name pos:start="125:42" pos:end="125:46">val_s</name></decl>;</decl_stmt>

                <if_stmt pos:start="127:17" pos:end="131:17"><if pos:start="127:17" pos:end="131:17">if <condition pos:start="127:20" pos:end="127:57">(<expr pos:start="127:21" pos:end="127:56"><operator pos:start="127:21" pos:end="127:21">(</operator><operator pos:start="127:22" pos:end="127:22">(</operator><operator pos:start="127:23" pos:end="127:23">(</operator><name pos:start="127:24" pos:end="127:32">uintptr_t</name><operator pos:start="127:33" pos:end="127:33">)</operator><name pos:start="127:34" pos:end="127:36">src</name> <operator pos:start="127:38" pos:end="127:38">+</operator> <name pos:start="127:40" pos:end="127:45">srcPos</name><operator pos:start="127:46" pos:end="127:46">)</operator> <operator pos:start="127:48" pos:end="127:48">%</operator> <literal type="number" pos:start="127:50" pos:end="127:51">16</literal><operator pos:start="127:52" pos:end="127:52">)</operator> <operator pos:start="127:54" pos:end="127:54">&gt;</operator> <literal type="number" pos:start="127:56" pos:end="127:56">8</literal></expr>)</condition> <block pos:start="127:59" pos:end="131:17">{<block_content pos:start="129:21" pos:end="129:54">

                    <expr_stmt pos:start="129:21" pos:end="129:54"><expr pos:start="129:21" pos:end="129:53"><name pos:start="129:21" pos:end="129:26">src_v1</name> <operator pos:start="129:28" pos:end="129:28">=</operator> <call pos:start="129:30" pos:end="129:53"><name pos:start="129:30" pos:end="129:35">vec_ld</name><argument_list pos:start="129:36" pos:end="129:53">(<argument pos:start="129:37" pos:end="129:47"><expr pos:start="129:37" pos:end="129:47"><name pos:start="129:37" pos:end="129:42">srcPos</name> <operator pos:start="129:44" pos:end="129:44">+</operator> <literal type="number" pos:start="129:46" pos:end="129:47">16</literal></expr></argument>, <argument pos:start="129:50" pos:end="129:52"><expr pos:start="129:50" pos:end="129:52"><name pos:start="129:50" pos:end="129:52">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:73"><expr pos:start="133:17" pos:end="133:72"><name pos:start="133:17" pos:end="133:22">src_vF</name> <operator pos:start="133:24" pos:end="133:24">=</operator> <call pos:start="133:26" pos:end="133:72"><name pos:start="133:26" pos:end="133:33">vec_perm</name><argument_list pos:start="133:34" pos:end="133:72">(<argument pos:start="133:35" pos:end="133:40"><expr pos:start="133:35" pos:end="133:40"><name pos:start="133:35" pos:end="133:40">src_v0</name></expr></argument>, <argument pos:start="133:43" pos:end="133:48"><expr pos:start="133:43" pos:end="133:48"><name pos:start="133:43" pos:end="133:48">src_v1</name></expr></argument>, <argument pos:start="133:51" pos:end="133:71"><expr pos:start="133:51" pos:end="133:71"><call pos:start="133:51" pos:end="133:71"><name pos:start="133:51" pos:end="133:58">vec_lvsl</name><argument_list pos:start="133:59" pos:end="133:71">(<argument pos:start="133:60" pos:end="133:65"><expr pos:start="133:60" pos:end="133:65"><name pos:start="133:60" pos:end="133:65">srcPos</name></expr></argument>, <argument pos:start="133:68" pos:end="133:70"><expr pos:start="133:68" pos:end="133:70"><name pos:start="133:68" pos:end="133:70">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="137:17" pos:end="139:95"><expr pos:start="137:17" pos:end="139:94"><name pos:start="137:17" pos:end="137:21">src_v</name> <operator pos:start="137:23" pos:end="137:23">=</operator> <comment type="line" pos:start="137:25" pos:end="137:54">// vec_unpackh sign-extends...</comment>

                        <operator pos:start="139:25" pos:end="139:25">(</operator><name pos:start="139:26" pos:end="139:31">vector</name> <name pos:start="139:33" pos:end="139:38">signed</name> <name pos:start="139:40" pos:end="139:44">short</name><operator pos:start="139:45" pos:end="139:45">)</operator><operator pos:start="139:46" pos:end="139:46">(</operator><call pos:start="139:47" pos:end="139:93"><name pos:start="139:47" pos:end="139:56">vec_mergeh</name><argument_list pos:start="139:57" pos:end="139:93">(<argument pos:start="139:58" pos:end="139:84"><expr pos:start="139:58" pos:end="139:84"><operator pos:start="139:58" pos:end="139:58">(</operator><name pos:start="139:59" pos:end="139:64">vector</name> <name pos:start="139:66" pos:end="139:73">unsigned</name> <name pos:start="139:75" pos:end="139:78">char</name><operator pos:start="139:79" pos:end="139:79">)</operator><name pos:start="139:80" pos:end="139:84">vzero</name></expr></argument>, <argument pos:start="139:87" pos:end="139:92"><expr pos:start="139:87" pos:end="139:92"><name pos:start="139:87" pos:end="139:92">src_vF</name></expr></argument>)</argument_list></call><operator pos:start="139:94" pos:end="139:94">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:50"><expr pos:start="141:17" pos:end="141:49"><name pos:start="141:17" pos:end="141:24">filter_v</name> <operator pos:start="141:26" pos:end="141:26">=</operator> <call pos:start="141:28" pos:end="141:49"><name pos:start="141:28" pos:end="141:33">vec_ld</name><argument_list pos:start="141:34" pos:end="141:49">(<argument pos:start="141:35" pos:end="141:40"><expr pos:start="141:35" pos:end="141:40"><name pos:start="141:35" pos:end="141:35">i</name> <operator pos:start="141:37" pos:end="141:38">&lt;&lt;</operator> <literal type="number" pos:start="141:40" pos:end="141:40">4</literal></expr></argument>, <argument pos:start="141:43" pos:end="141:48"><expr pos:start="141:43" pos:end="141:48"><name pos:start="141:43" pos:end="141:48">filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:start="143:17" pos:end="143:78">// the 4 above is 3 (filterSize == 8) + 1 (sizeof(short) == 2)</comment>



                <expr_stmt pos:start="147:17" pos:end="147:77"><expr pos:start="147:17" pos:end="147:76"><name pos:start="147:17" pos:end="147:21">val_v</name> <operator pos:start="147:23" pos:end="147:23">=</operator> <call pos:start="147:25" pos:end="147:76"><name pos:start="147:25" pos:end="147:33">vec_msums</name><argument_list pos:start="147:34" pos:end="147:76">(<argument pos:start="147:35" pos:end="147:39"><expr pos:start="147:35" pos:end="147:39"><name pos:start="147:35" pos:end="147:39">src_v</name></expr></argument>, <argument pos:start="147:42" pos:end="147:49"><expr pos:start="147:42" pos:end="147:49"><name pos:start="147:42" pos:end="147:49">filter_v</name></expr></argument>, <argument pos:start="147:52" pos:end="147:75"><expr pos:start="147:52" pos:end="147:75"><operator pos:start="147:52" pos:end="147:52">(</operator><name pos:start="147:53" pos:end="147:58">vector</name> <name pos:start="147:60" pos:end="147:65">signed</name> <name pos:start="147:67" pos:end="147:69">int</name><operator pos:start="147:70" pos:end="147:70">)</operator><name pos:start="147:71" pos:end="147:75">vzero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:47"><expr pos:start="149:17" pos:end="149:46"><name pos:start="149:17" pos:end="149:21">val_s</name> <operator pos:start="149:23" pos:end="149:23">=</operator> <call pos:start="149:25" pos:end="149:46"><name pos:start="149:25" pos:end="149:32">vec_sums</name><argument_list pos:start="149:33" pos:end="149:46">(<argument pos:start="149:34" pos:end="149:38"><expr pos:start="149:34" pos:end="149:38"><name pos:start="149:34" pos:end="149:38">val_v</name></expr></argument>, <argument pos:start="149:41" pos:end="149:45"><expr pos:start="149:41" pos:end="149:45"><name pos:start="149:41" pos:end="149:45">vzero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:40"><expr pos:start="151:17" pos:end="151:39"><call pos:start="151:17" pos:end="151:39"><name pos:start="151:17" pos:end="151:22">vec_st</name><argument_list pos:start="151:23" pos:end="151:39">(<argument pos:start="151:24" pos:end="151:28"><expr pos:start="151:24" pos:end="151:28"><name pos:start="151:24" pos:end="151:28">val_s</name></expr></argument>, <argument pos:start="151:31" pos:end="151:31"><expr pos:start="151:31" pos:end="151:31"><literal type="number" pos:start="151:31" pos:end="151:31">0</literal></expr></argument>, <argument pos:start="151:34" pos:end="151:38"><expr pos:start="151:34" pos:end="151:38"><name pos:start="151:34" pos:end="151:38">tempo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:61"><expr pos:start="153:17" pos:end="153:60"><name pos:start="153:17" pos:end="153:22"><name pos:start="153:17" pos:end="153:19">dst</name><index pos:start="153:20" pos:end="153:22">[<expr pos:start="153:21" pos:end="153:21"><name pos:start="153:21" pos:end="153:21">i</name></expr>]</index></name> <operator pos:start="153:24" pos:end="153:24">=</operator> <call pos:start="153:26" pos:end="153:60"><name pos:start="153:26" pos:end="153:30">FFMIN</name><argument_list pos:start="153:31" pos:end="153:60">(<argument pos:start="153:32" pos:end="153:44"><expr pos:start="153:32" pos:end="153:44"><name pos:start="153:32" pos:end="153:39"><name pos:start="153:32" pos:end="153:36">tempo</name><index pos:start="153:37" pos:end="153:39">[<expr pos:start="153:38" pos:end="153:38"><literal type="number" pos:start="153:38" pos:end="153:38">3</literal></expr>]</index></name> <operator pos:start="153:41" pos:end="153:42">&gt;&gt;</operator> <literal type="number" pos:start="153:44" pos:end="153:44">7</literal></expr></argument>, <argument pos:start="153:47" pos:end="153:59"><expr pos:start="153:47" pos:end="153:59"><operator pos:start="153:47" pos:end="153:47">(</operator><literal type="number" pos:start="153:48" pos:end="153:48">1</literal> <operator pos:start="153:50" pos:end="153:51">&lt;&lt;</operator> <literal type="number" pos:start="153:53" pos:end="153:54">15</literal><operator pos:start="153:55" pos:end="153:55">)</operator> <operator pos:start="153:57" pos:end="153:57">-</operator> <literal type="number" pos:start="153:59" pos:end="153:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        <break pos:start="157:9" pos:end="157:14">break;</break>



        <case pos:start="161:9" pos:end="161:16">case <expr pos:start="161:14" pos:end="161:15"><literal type="number" pos:start="161:14" pos:end="161:15">16</literal></expr>:</case>

            <for pos:start="163:13" pos:end="209:13">for <control pos:start="163:17" pos:end="163:38">(<init pos:start="163:18" pos:end="163:23"><expr pos:start="163:18" pos:end="163:22"><name pos:start="163:18" pos:end="163:18">i</name> <operator pos:start="163:20" pos:end="163:20">=</operator> <literal type="number" pos:start="163:22" pos:end="163:22">0</literal></expr>;</init> <condition pos:start="163:25" pos:end="163:33"><expr pos:start="163:25" pos:end="163:32"><name pos:start="163:25" pos:end="163:25">i</name> <operator pos:start="163:27" pos:end="163:27">&lt;</operator> <name pos:start="163:29" pos:end="163:32">dstW</name></expr>;</condition> <incr pos:start="163:35" pos:end="163:37"><expr pos:start="163:35" pos:end="163:37"><name pos:start="163:35" pos:end="163:35">i</name><operator pos:start="163:36" pos:end="163:37">++</operator></expr></incr>)</control> <block pos:start="163:40" pos:end="209:13">{<block_content pos:start="165:17" pos:end="207:61">

                <decl_stmt pos:start="165:17" pos:end="165:51"><decl pos:start="165:17" pos:end="165:50"><type pos:start="165:17" pos:end="165:28"><specifier pos:start="165:17" pos:end="165:24">register</specifier> <name pos:start="165:26" pos:end="165:28">int</name></type> <name pos:start="165:30" pos:end="165:35">srcPos</name> <init pos:start="165:37" pos:end="165:50">= <expr pos:start="165:39" pos:end="165:50"><name pos:start="165:39" pos:end="165:50"><name pos:start="165:39" pos:end="165:47">filterPos</name><index pos:start="165:48" pos:end="165:50">[<expr pos:start="165:49" pos:end="165:49"><name pos:start="165:49" pos:end="165:49">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="169:17" pos:end="169:66"><decl pos:start="169:17" pos:end="169:65"><type pos:start="169:17" pos:end="169:36"><name pos:start="169:17" pos:end="169:22">vector</name> <name pos:start="169:24" pos:end="169:31">unsigned</name> <name pos:start="169:33" pos:end="169:36">char</name></type> <name pos:start="169:38" pos:end="169:43">src_v0</name> <init pos:start="169:45" pos:end="169:65">= <expr pos:start="169:47" pos:end="169:65"><call pos:start="169:47" pos:end="169:65"><name pos:start="169:47" pos:end="169:52">vec_ld</name><argument_list pos:start="169:53" pos:end="169:65">(<argument pos:start="169:54" pos:end="169:59"><expr pos:start="169:54" pos:end="169:59"><name pos:start="169:54" pos:end="169:59">srcPos</name></expr></argument>, <argument pos:start="169:62" pos:end="169:64"><expr pos:start="169:62" pos:end="169:64"><name pos:start="169:62" pos:end="169:64">src</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="171:17" pos:end="171:71"><decl pos:start="171:17" pos:end="171:70"><type pos:start="171:17" pos:end="171:36"><name pos:start="171:17" pos:end="171:22">vector</name> <name pos:start="171:24" pos:end="171:31">unsigned</name> <name pos:start="171:33" pos:end="171:36">char</name></type> <name pos:start="171:38" pos:end="171:43">src_v1</name> <init pos:start="171:45" pos:end="171:70">= <expr pos:start="171:47" pos:end="171:70"><call pos:start="171:47" pos:end="171:70"><name pos:start="171:47" pos:end="171:52">vec_ld</name><argument_list pos:start="171:53" pos:end="171:70">(<argument pos:start="171:54" pos:end="171:64"><expr pos:start="171:54" pos:end="171:64"><name pos:start="171:54" pos:end="171:59">srcPos</name> <operator pos:start="171:61" pos:end="171:61">+</operator> <literal type="number" pos:start="171:63" pos:end="171:64">16</literal></expr></argument>, <argument pos:start="171:67" pos:end="171:69"><expr pos:start="171:67" pos:end="171:69"><name pos:start="171:67" pos:end="171:69">src</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="173:17" pos:end="173:94"><decl pos:start="173:17" pos:end="173:93"><type pos:start="173:17" pos:end="173:36"><name pos:start="173:17" pos:end="173:22">vector</name> <name pos:start="173:24" pos:end="173:31">unsigned</name> <name pos:start="173:33" pos:end="173:36">char</name></type> <name pos:start="173:38" pos:end="173:43">src_vF</name> <init pos:start="173:45" pos:end="173:93">= <expr pos:start="173:47" pos:end="173:93"><call pos:start="173:47" pos:end="173:93"><name pos:start="173:47" pos:end="173:54">vec_perm</name><argument_list pos:start="173:55" pos:end="173:93">(<argument pos:start="173:56" pos:end="173:61"><expr pos:start="173:56" pos:end="173:61"><name pos:start="173:56" pos:end="173:61">src_v0</name></expr></argument>, <argument pos:start="173:64" pos:end="173:69"><expr pos:start="173:64" pos:end="173:69"><name pos:start="173:64" pos:end="173:69">src_v1</name></expr></argument>, <argument pos:start="173:72" pos:end="173:92"><expr pos:start="173:72" pos:end="173:92"><call pos:start="173:72" pos:end="173:92"><name pos:start="173:72" pos:end="173:79">vec_lvsl</name><argument_list pos:start="173:80" pos:end="173:92">(<argument pos:start="173:81" pos:end="173:86"><expr pos:start="173:81" pos:end="173:86"><name pos:start="173:81" pos:end="173:86">srcPos</name></expr></argument>, <argument pos:start="173:89" pos:end="173:91"><expr pos:start="173:89" pos:end="173:91"><name pos:start="173:89" pos:end="173:91">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="177:17" pos:end="179:116"><decl pos:start="177:17" pos:end="179:115"><type pos:start="177:17" pos:end="177:35"><name pos:start="177:17" pos:end="177:22">vector</name> <name pos:start="177:24" pos:end="177:29">signed</name> <name pos:start="177:31" pos:end="177:35">short</name></type> <name pos:start="177:37" pos:end="177:42">src_vA</name> <init pos:start="177:44" pos:end="179:115">= <comment type="line" pos:start="177:46" pos:end="177:75">// vec_unpackh sign-extends...</comment>

                                             <expr pos:start="179:46" pos:end="179:115"><operator pos:start="179:46" pos:end="179:46">(</operator><name pos:start="179:47" pos:end="179:52">vector</name> <name pos:start="179:54" pos:end="179:59">signed</name> <name pos:start="179:61" pos:end="179:65">short</name><operator pos:start="179:66" pos:end="179:66">)</operator><operator pos:start="179:67" pos:end="179:67">(</operator><call pos:start="179:68" pos:end="179:114"><name pos:start="179:68" pos:end="179:77">vec_mergeh</name><argument_list pos:start="179:78" pos:end="179:114">(<argument pos:start="179:79" pos:end="179:105"><expr pos:start="179:79" pos:end="179:105"><operator pos:start="179:79" pos:end="179:79">(</operator><name pos:start="179:80" pos:end="179:85">vector</name> <name pos:start="179:87" pos:end="179:94">unsigned</name> <name pos:start="179:96" pos:end="179:99">char</name><operator pos:start="179:100" pos:end="179:100">)</operator><name pos:start="179:101" pos:end="179:105">vzero</name></expr></argument>, <argument pos:start="179:108" pos:end="179:113"><expr pos:start="179:108" pos:end="179:113"><name pos:start="179:108" pos:end="179:113">src_vF</name></expr></argument>)</argument_list></call><operator pos:start="179:115" pos:end="179:115">)</operator></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="181:17" pos:end="183:116"><decl pos:start="181:17" pos:end="183:115"><type pos:start="181:17" pos:end="181:35"><name pos:start="181:17" pos:end="181:22">vector</name> <name pos:start="181:24" pos:end="181:29">signed</name> <name pos:start="181:31" pos:end="181:35">short</name></type> <name pos:start="181:37" pos:end="181:42">src_vB</name> <init pos:start="181:44" pos:end="183:115">= <comment type="line" pos:start="181:46" pos:end="181:75">// vec_unpackh sign-extends...</comment>

                                             <expr pos:start="183:46" pos:end="183:115"><operator pos:start="183:46" pos:end="183:46">(</operator><name pos:start="183:47" pos:end="183:52">vector</name> <name pos:start="183:54" pos:end="183:59">signed</name> <name pos:start="183:61" pos:end="183:65">short</name><operator pos:start="183:66" pos:end="183:66">)</operator><operator pos:start="183:67" pos:end="183:67">(</operator><call pos:start="183:68" pos:end="183:114"><name pos:start="183:68" pos:end="183:77">vec_mergel</name><argument_list pos:start="183:78" pos:end="183:114">(<argument pos:start="183:79" pos:end="183:105"><expr pos:start="183:79" pos:end="183:105"><operator pos:start="183:79" pos:end="183:79">(</operator><name pos:start="183:80" pos:end="183:85">vector</name> <name pos:start="183:87" pos:end="183:94">unsigned</name> <name pos:start="183:96" pos:end="183:99">char</name><operator pos:start="183:100" pos:end="183:100">)</operator><name pos:start="183:101" pos:end="183:105">vzero</name></expr></argument>, <argument pos:start="183:108" pos:end="183:113"><expr pos:start="183:108" pos:end="183:113"><name pos:start="183:108" pos:end="183:113">src_vF</name></expr></argument>)</argument_list></call><operator pos:start="183:115" pos:end="183:115">)</operator></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="187:17" pos:end="187:71"><decl pos:start="187:17" pos:end="187:70"><type pos:start="187:17" pos:end="187:35"><name pos:start="187:17" pos:end="187:22">vector</name> <name pos:start="187:24" pos:end="187:29">signed</name> <name pos:start="187:31" pos:end="187:35">short</name></type> <name pos:start="187:37" pos:end="187:45">filter_v0</name> <init pos:start="187:47" pos:end="187:70">= <expr pos:start="187:49" pos:end="187:70"><call pos:start="187:49" pos:end="187:70"><name pos:start="187:49" pos:end="187:54">vec_ld</name><argument_list pos:start="187:55" pos:end="187:70">(<argument pos:start="187:56" pos:end="187:61"><expr pos:start="187:56" pos:end="187:61"><name pos:start="187:56" pos:end="187:56">i</name> <operator pos:start="187:58" pos:end="187:59">&lt;&lt;</operator> <literal type="number" pos:start="187:61" pos:end="187:61">5</literal></expr></argument>, <argument pos:start="187:64" pos:end="187:69"><expr pos:start="187:64" pos:end="187:69"><name pos:start="187:64" pos:end="187:69">filter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="189:17" pos:end="189:78"><decl pos:start="189:17" pos:end="189:77"><type pos:start="189:17" pos:end="189:35"><name pos:start="189:17" pos:end="189:22">vector</name> <name pos:start="189:24" pos:end="189:29">signed</name> <name pos:start="189:31" pos:end="189:35">short</name></type> <name pos:start="189:37" pos:end="189:45">filter_v1</name> <init pos:start="189:47" pos:end="189:77">= <expr pos:start="189:49" pos:end="189:77"><call pos:start="189:49" pos:end="189:77"><name pos:start="189:49" pos:end="189:54">vec_ld</name><argument_list pos:start="189:55" pos:end="189:77">(<argument pos:start="189:56" pos:end="189:68"><expr pos:start="189:56" pos:end="189:68"><operator pos:start="189:56" pos:end="189:56">(</operator><name pos:start="189:57" pos:end="189:57">i</name> <operator pos:start="189:59" pos:end="189:60">&lt;&lt;</operator> <literal type="number" pos:start="189:62" pos:end="189:62">5</literal><operator pos:start="189:63" pos:end="189:63">)</operator> <operator pos:start="189:65" pos:end="189:65">+</operator> <literal type="number" pos:start="189:67" pos:end="189:68">16</literal></expr></argument>, <argument pos:start="189:71" pos:end="189:76"><expr pos:start="189:71" pos:end="189:76"><name pos:start="189:71" pos:end="189:76">filter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <comment type="line" pos:start="191:17" pos:end="191:80">// the 5 above are 4 (filterSize == 16) + 1 (sizeof(short) == 2)</comment>



                <decl_stmt pos:start="195:17" pos:end="195:99"><decl pos:start="195:17" pos:end="195:98"><type pos:start="195:17" pos:end="195:33"><name pos:start="195:17" pos:end="195:22">vector</name> <name pos:start="195:24" pos:end="195:29">signed</name> <name pos:start="195:31" pos:end="195:33">int</name></type> <name pos:start="195:35" pos:end="195:41">val_acc</name> <init pos:start="195:43" pos:end="195:98">= <expr pos:start="195:45" pos:end="195:98"><call pos:start="195:45" pos:end="195:98"><name pos:start="195:45" pos:end="195:53">vec_msums</name><argument_list pos:start="195:54" pos:end="195:98">(<argument pos:start="195:55" pos:end="195:60"><expr pos:start="195:55" pos:end="195:60"><name pos:start="195:55" pos:end="195:60">src_vA</name></expr></argument>, <argument pos:start="195:63" pos:end="195:71"><expr pos:start="195:63" pos:end="195:71"><name pos:start="195:63" pos:end="195:71">filter_v0</name></expr></argument>, <argument pos:start="195:74" pos:end="195:97"><expr pos:start="195:74" pos:end="195:97"><operator pos:start="195:74" pos:end="195:74">(</operator><name pos:start="195:75" pos:end="195:80">vector</name> <name pos:start="195:82" pos:end="195:87">signed</name> <name pos:start="195:89" pos:end="195:91">int</name><operator pos:start="195:92" pos:end="195:92">)</operator><name pos:start="195:93" pos:end="195:97">vzero</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="197:17" pos:end="197:82"><decl pos:start="197:17" pos:end="197:81"><type pos:start="197:17" pos:end="197:33"><name pos:start="197:17" pos:end="197:22">vector</name> <name pos:start="197:24" pos:end="197:29">signed</name> <name pos:start="197:31" pos:end="197:33">int</name></type> <name pos:start="197:35" pos:end="197:39">val_v</name>   <init pos:start="197:43" pos:end="197:81">= <expr pos:start="197:45" pos:end="197:81"><call pos:start="197:45" pos:end="197:81"><name pos:start="197:45" pos:end="197:53">vec_msums</name><argument_list pos:start="197:54" pos:end="197:81">(<argument pos:start="197:55" pos:end="197:60"><expr pos:start="197:55" pos:end="197:60"><name pos:start="197:55" pos:end="197:60">src_vB</name></expr></argument>, <argument pos:start="197:63" pos:end="197:71"><expr pos:start="197:63" pos:end="197:71"><name pos:start="197:63" pos:end="197:71">filter_v1</name></expr></argument>, <argument pos:start="197:74" pos:end="197:80"><expr pos:start="197:74" pos:end="197:80"><name pos:start="197:74" pos:end="197:80">val_acc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="201:17" pos:end="201:65"><decl pos:start="201:17" pos:end="201:64"><type pos:start="201:17" pos:end="201:33"><name pos:start="201:17" pos:end="201:22">vector</name> <name pos:start="201:24" pos:end="201:29">signed</name> <name pos:start="201:31" pos:end="201:33">int</name></type> <name pos:start="201:35" pos:end="201:39">val_s</name> <init pos:start="201:41" pos:end="201:64">= <expr pos:start="201:43" pos:end="201:64"><call pos:start="201:43" pos:end="201:64"><name pos:start="201:43" pos:end="201:50">vec_sums</name><argument_list pos:start="201:51" pos:end="201:64">(<argument pos:start="201:52" pos:end="201:56"><expr pos:start="201:52" pos:end="201:56"><name pos:start="201:52" pos:end="201:56">val_v</name></expr></argument>, <argument pos:start="201:59" pos:end="201:63"><expr pos:start="201:59" pos:end="201:63"><name pos:start="201:59" pos:end="201:63">vzero</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="205:17" pos:end="205:40"><expr pos:start="205:17" pos:end="205:39"><call pos:start="205:17" pos:end="205:39"><name pos:start="205:17" pos:end="205:22">vec_st</name><argument_list pos:start="205:23" pos:end="205:39">(<argument pos:start="205:24" pos:end="205:28"><expr pos:start="205:24" pos:end="205:28"><name pos:start="205:24" pos:end="205:28">val_s</name></expr></argument>, <argument pos:start="205:31" pos:end="205:31"><expr pos:start="205:31" pos:end="205:31"><literal type="number" pos:start="205:31" pos:end="205:31">0</literal></expr></argument>, <argument pos:start="205:34" pos:end="205:38"><expr pos:start="205:34" pos:end="205:38"><name pos:start="205:34" pos:end="205:38">tempo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:61"><expr pos:start="207:17" pos:end="207:60"><name pos:start="207:17" pos:end="207:22"><name pos:start="207:17" pos:end="207:19">dst</name><index pos:start="207:20" pos:end="207:22">[<expr pos:start="207:21" pos:end="207:21"><name pos:start="207:21" pos:end="207:21">i</name></expr>]</index></name> <operator pos:start="207:24" pos:end="207:24">=</operator> <call pos:start="207:26" pos:end="207:60"><name pos:start="207:26" pos:end="207:30">FFMIN</name><argument_list pos:start="207:31" pos:end="207:60">(<argument pos:start="207:32" pos:end="207:44"><expr pos:start="207:32" pos:end="207:44"><name pos:start="207:32" pos:end="207:39"><name pos:start="207:32" pos:end="207:36">tempo</name><index pos:start="207:37" pos:end="207:39">[<expr pos:start="207:38" pos:end="207:38"><literal type="number" pos:start="207:38" pos:end="207:38">3</literal></expr>]</index></name> <operator pos:start="207:41" pos:end="207:42">&gt;&gt;</operator> <literal type="number" pos:start="207:44" pos:end="207:44">7</literal></expr></argument>, <argument pos:start="207:47" pos:end="207:59"><expr pos:start="207:47" pos:end="207:59"><operator pos:start="207:47" pos:end="207:47">(</operator><literal type="number" pos:start="207:48" pos:end="207:48">1</literal> <operator pos:start="207:50" pos:end="207:51">&lt;&lt;</operator> <literal type="number" pos:start="207:53" pos:end="207:54">15</literal><operator pos:start="207:55" pos:end="207:55">)</operator> <operator pos:start="207:57" pos:end="207:57">-</operator> <literal type="number" pos:start="207:59" pos:end="207:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        <break pos:start="211:9" pos:end="211:14">break;</break>



        <default pos:start="215:9" pos:end="215:16">default:</default>

            <for pos:start="217:13" pos:end="329:13">for <control pos:start="217:17" pos:end="217:38">(<init pos:start="217:18" pos:end="217:23"><expr pos:start="217:18" pos:end="217:22"><name pos:start="217:18" pos:end="217:18">i</name> <operator pos:start="217:20" pos:end="217:20">=</operator> <literal type="number" pos:start="217:22" pos:end="217:22">0</literal></expr>;</init> <condition pos:start="217:25" pos:end="217:33"><expr pos:start="217:25" pos:end="217:32"><name pos:start="217:25" pos:end="217:25">i</name> <operator pos:start="217:27" pos:end="217:27">&lt;</operator> <name pos:start="217:29" pos:end="217:32">dstW</name></expr>;</condition> <incr pos:start="217:35" pos:end="217:37"><expr pos:start="217:35" pos:end="217:37"><name pos:start="217:35" pos:end="217:35">i</name><operator pos:start="217:36" pos:end="217:37">++</operator></expr></incr>)</control> <block pos:start="217:40" pos:end="329:13">{<block_content pos:start="219:17" pos:end="327:61">

                <decl_stmt pos:start="219:17" pos:end="219:31"><decl pos:start="219:17" pos:end="219:30"><type pos:start="219:17" pos:end="219:28"><specifier pos:start="219:17" pos:end="219:24">register</specifier> <name pos:start="219:26" pos:end="219:28">int</name></type> <name pos:start="219:30" pos:end="219:30">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="221:17" pos:end="221:51"><decl pos:start="221:17" pos:end="221:50"><type pos:start="221:17" pos:end="221:28"><specifier pos:start="221:17" pos:end="221:24">register</specifier> <name pos:start="221:26" pos:end="221:28">int</name></type> <name pos:start="221:30" pos:end="221:35">srcPos</name> <init pos:start="221:37" pos:end="221:50">= <expr pos:start="221:39" pos:end="221:50"><name pos:start="221:39" pos:end="221:50"><name pos:start="221:39" pos:end="221:47">filterPos</name><index pos:start="221:48" pos:end="221:50">[<expr pos:start="221:49" pos:end="221:49"><name pos:start="221:49" pos:end="221:49">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="225:17" pos:end="225:74"><decl pos:start="225:17" pos:end="225:39"><type pos:start="225:17" pos:end="225:33"><name pos:start="225:17" pos:end="225:22">vector</name> <name pos:start="225:24" pos:end="225:29">signed</name> <name pos:start="225:31" pos:end="225:33">int</name></type> <name pos:start="225:35" pos:end="225:39">val_s</name></decl>, <decl pos:start="225:42" pos:end="225:73"><type ref="prev" pos:start="225:17" pos:end="225:33"/><name pos:start="225:42" pos:end="225:46">val_v</name> <init pos:start="225:48" pos:end="225:73">= <expr pos:start="225:50" pos:end="225:73"><operator pos:start="225:50" pos:end="225:50">(</operator><name pos:start="225:51" pos:end="225:56">vector</name> <name pos:start="225:58" pos:end="225:63">signed</name> <name pos:start="225:65" pos:end="225:67">int</name><operator pos:start="225:68" pos:end="225:68">)</operator><name pos:start="225:69" pos:end="225:73">vzero</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="227:17" pos:end="227:84"><decl pos:start="227:17" pos:end="227:83"><type pos:start="227:17" pos:end="227:35"><name pos:start="227:17" pos:end="227:22">vector</name> <name pos:start="227:24" pos:end="227:29">signed</name> <name pos:start="227:31" pos:end="227:35">short</name></type> <name pos:start="227:37" pos:end="227:46">filter_v0R</name> <init pos:start="227:48" pos:end="227:83">= <expr pos:start="227:50" pos:end="227:83"><call pos:start="227:50" pos:end="227:83"><name pos:start="227:50" pos:end="227:55">vec_ld</name><argument_list pos:start="227:56" pos:end="227:83">(<argument pos:start="227:57" pos:end="227:74"><expr pos:start="227:57" pos:end="227:74"><name pos:start="227:57" pos:end="227:57">i</name> <operator pos:start="227:59" pos:end="227:59">*</operator> <literal type="number" pos:start="227:61" pos:end="227:61">2</literal> <operator pos:start="227:63" pos:end="227:63">*</operator> <name pos:start="227:65" pos:end="227:74">filterSize</name></expr></argument>, <argument pos:start="227:77" pos:end="227:82"><expr pos:start="227:77" pos:end="227:82"><name pos:start="227:77" pos:end="227:82">filter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="229:17" pos:end="229:88"><decl pos:start="229:17" pos:end="229:87"><type pos:start="229:17" pos:end="229:36"><name pos:start="229:17" pos:end="229:22">vector</name> <name pos:start="229:24" pos:end="229:31">unsigned</name> <name pos:start="229:33" pos:end="229:36">char</name></type> <name pos:start="229:38" pos:end="229:42">permF</name>     <init pos:start="229:48" pos:end="229:87">= <expr pos:start="229:50" pos:end="229:87"><call pos:start="229:50" pos:end="229:87"><name pos:start="229:50" pos:end="229:57">vec_lvsl</name><argument_list pos:start="229:58" pos:end="229:87">(<argument pos:start="229:59" pos:end="229:78"><expr pos:start="229:59" pos:end="229:78"><operator pos:start="229:59" pos:end="229:59">(</operator><name pos:start="229:60" pos:end="229:60">i</name> <operator pos:start="229:62" pos:end="229:62">*</operator> <literal type="number" pos:start="229:64" pos:end="229:64">2</literal> <operator pos:start="229:66" pos:end="229:66">*</operator> <name pos:start="229:68" pos:end="229:77">filterSize</name><operator pos:start="229:78" pos:end="229:78">)</operator></expr></argument>, <argument pos:start="229:81" pos:end="229:86"><expr pos:start="229:81" pos:end="229:86"><name pos:start="229:81" pos:end="229:86">filter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="233:17" pos:end="233:66"><decl pos:start="233:17" pos:end="233:65"><type pos:start="233:17" pos:end="233:36"><name pos:start="233:17" pos:end="233:22">vector</name> <name pos:start="233:24" pos:end="233:31">unsigned</name> <name pos:start="233:33" pos:end="233:36">char</name></type> <name pos:start="233:38" pos:end="233:43">src_v0</name> <init pos:start="233:45" pos:end="233:65">= <expr pos:start="233:47" pos:end="233:65"><call pos:start="233:47" pos:end="233:65"><name pos:start="233:47" pos:end="233:52">vec_ld</name><argument_list pos:start="233:53" pos:end="233:65">(<argument pos:start="233:54" pos:end="233:59"><expr pos:start="233:54" pos:end="233:59"><name pos:start="233:54" pos:end="233:59">srcPos</name></expr></argument>, <argument pos:start="233:62" pos:end="233:64"><expr pos:start="233:62" pos:end="233:64"><name pos:start="233:62" pos:end="233:64">src</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="235:17" pos:end="235:68"><decl pos:start="235:17" pos:end="235:67"><type pos:start="235:17" pos:end="235:36"><name pos:start="235:17" pos:end="235:22">vector</name> <name pos:start="235:24" pos:end="235:31">unsigned</name> <name pos:start="235:33" pos:end="235:36">char</name></type> <name pos:start="235:38" pos:end="235:42">permS</name>  <init pos:start="235:45" pos:end="235:67">= <expr pos:start="235:47" pos:end="235:67"><call pos:start="235:47" pos:end="235:67"><name pos:start="235:47" pos:end="235:54">vec_lvsl</name><argument_list pos:start="235:55" pos:end="235:67">(<argument pos:start="235:56" pos:end="235:61"><expr pos:start="235:56" pos:end="235:61"><name pos:start="235:56" pos:end="235:61">srcPos</name></expr></argument>, <argument pos:start="235:64" pos:end="235:66"><expr pos:start="235:64" pos:end="235:66"><name pos:start="235:64" pos:end="235:66">src</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <for pos:start="239:17" pos:end="277:17">for <control pos:start="239:21" pos:end="239:57">(<init pos:start="239:22" pos:end="239:27"><expr pos:start="239:22" pos:end="239:26"><name pos:start="239:22" pos:end="239:22">j</name> <operator pos:start="239:24" pos:end="239:24">=</operator> <literal type="number" pos:start="239:26" pos:end="239:26">0</literal></expr>;</init> <condition pos:start="239:29" pos:end="239:48"><expr pos:start="239:29" pos:end="239:47"><name pos:start="239:29" pos:end="239:29">j</name> <operator pos:start="239:31" pos:end="239:31">&lt;</operator> <name pos:start="239:33" pos:end="239:42">filterSize</name> <operator pos:start="239:44" pos:end="239:44">-</operator> <literal type="number" pos:start="239:46" pos:end="239:47">15</literal></expr>;</condition> <incr pos:start="239:50" pos:end="239:56"><expr pos:start="239:50" pos:end="239:56"><name pos:start="239:50" pos:end="239:50">j</name> <operator pos:start="239:52" pos:end="239:53">+=</operator> <literal type="number" pos:start="239:55" pos:end="239:56">16</literal></expr></incr>)</control> <block pos:start="239:59" pos:end="277:17">{<block_content pos:start="241:21" pos:end="275:40">

                    <decl_stmt pos:start="241:21" pos:end="241:79"><decl pos:start="241:21" pos:end="241:78"><type pos:start="241:21" pos:end="241:40"><name pos:start="241:21" pos:end="241:26">vector</name> <name pos:start="241:28" pos:end="241:35">unsigned</name> <name pos:start="241:37" pos:end="241:40">char</name></type> <name pos:start="241:42" pos:end="241:47">src_v1</name> <init pos:start="241:49" pos:end="241:78">= <expr pos:start="241:51" pos:end="241:78"><call pos:start="241:51" pos:end="241:78"><name pos:start="241:51" pos:end="241:56">vec_ld</name><argument_list pos:start="241:57" pos:end="241:78">(<argument pos:start="241:58" pos:end="241:72"><expr pos:start="241:58" pos:end="241:72"><name pos:start="241:58" pos:end="241:63">srcPos</name> <operator pos:start="241:65" pos:end="241:65">+</operator> <name pos:start="241:67" pos:end="241:67">j</name> <operator pos:start="241:69" pos:end="241:69">+</operator> <literal type="number" pos:start="241:71" pos:end="241:72">16</literal></expr></argument>, <argument pos:start="241:75" pos:end="241:77"><expr pos:start="241:75" pos:end="241:77"><name pos:start="241:75" pos:end="241:77">src</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="243:21" pos:end="243:82"><decl pos:start="243:21" pos:end="243:81"><type pos:start="243:21" pos:end="243:40"><name pos:start="243:21" pos:end="243:26">vector</name> <name pos:start="243:28" pos:end="243:35">unsigned</name> <name pos:start="243:37" pos:end="243:40">char</name></type> <name pos:start="243:42" pos:end="243:47">src_vF</name> <init pos:start="243:49" pos:end="243:81">= <expr pos:start="243:51" pos:end="243:81"><call pos:start="243:51" pos:end="243:81"><name pos:start="243:51" pos:end="243:58">vec_perm</name><argument_list pos:start="243:59" pos:end="243:81">(<argument pos:start="243:60" pos:end="243:65"><expr pos:start="243:60" pos:end="243:65"><name pos:start="243:60" pos:end="243:65">src_v0</name></expr></argument>, <argument pos:start="243:68" pos:end="243:73"><expr pos:start="243:68" pos:end="243:73"><name pos:start="243:68" pos:end="243:73">src_v1</name></expr></argument>, <argument pos:start="243:76" pos:end="243:80"><expr pos:start="243:76" pos:end="243:80"><name pos:start="243:76" pos:end="243:80">permS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <decl_stmt pos:start="247:21" pos:end="249:120"><decl pos:start="247:21" pos:end="249:119"><type pos:start="247:21" pos:end="247:39"><name pos:start="247:21" pos:end="247:26">vector</name> <name pos:start="247:28" pos:end="247:33">signed</name> <name pos:start="247:35" pos:end="247:39">short</name></type> <name pos:start="247:41" pos:end="247:46">src_vA</name> <init pos:start="247:48" pos:end="249:119">= <comment type="line" pos:start="247:50" pos:end="247:79">// vec_unpackh sign-extends...</comment>

                                                 <expr pos:start="249:50" pos:end="249:119"><operator pos:start="249:50" pos:end="249:50">(</operator><name pos:start="249:51" pos:end="249:56">vector</name> <name pos:start="249:58" pos:end="249:63">signed</name> <name pos:start="249:65" pos:end="249:69">short</name><operator pos:start="249:70" pos:end="249:70">)</operator><operator pos:start="249:71" pos:end="249:71">(</operator><call pos:start="249:72" pos:end="249:118"><name pos:start="249:72" pos:end="249:81">vec_mergeh</name><argument_list pos:start="249:82" pos:end="249:118">(<argument pos:start="249:83" pos:end="249:109"><expr pos:start="249:83" pos:end="249:109"><operator pos:start="249:83" pos:end="249:83">(</operator><name pos:start="249:84" pos:end="249:89">vector</name> <name pos:start="249:91" pos:end="249:98">unsigned</name> <name pos:start="249:100" pos:end="249:103">char</name><operator pos:start="249:104" pos:end="249:104">)</operator><name pos:start="249:105" pos:end="249:109">vzero</name></expr></argument>, <argument pos:start="249:112" pos:end="249:117"><expr pos:start="249:112" pos:end="249:117"><name pos:start="249:112" pos:end="249:117">src_vF</name></expr></argument>)</argument_list></call><operator pos:start="249:119" pos:end="249:119">)</operator></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="251:21" pos:end="253:120"><decl pos:start="251:21" pos:end="253:119"><type pos:start="251:21" pos:end="251:39"><name pos:start="251:21" pos:end="251:26">vector</name> <name pos:start="251:28" pos:end="251:33">signed</name> <name pos:start="251:35" pos:end="251:39">short</name></type> <name pos:start="251:41" pos:end="251:46">src_vB</name> <init pos:start="251:48" pos:end="253:119">= <comment type="line" pos:start="251:50" pos:end="251:79">// vec_unpackh sign-extends...</comment>

                                                 <expr pos:start="253:50" pos:end="253:119"><operator pos:start="253:50" pos:end="253:50">(</operator><name pos:start="253:51" pos:end="253:56">vector</name> <name pos:start="253:58" pos:end="253:63">signed</name> <name pos:start="253:65" pos:end="253:69">short</name><operator pos:start="253:70" pos:end="253:70">)</operator><operator pos:start="253:71" pos:end="253:71">(</operator><call pos:start="253:72" pos:end="253:118"><name pos:start="253:72" pos:end="253:81">vec_mergel</name><argument_list pos:start="253:82" pos:end="253:118">(<argument pos:start="253:83" pos:end="253:109"><expr pos:start="253:83" pos:end="253:109"><operator pos:start="253:83" pos:end="253:83">(</operator><name pos:start="253:84" pos:end="253:89">vector</name> <name pos:start="253:91" pos:end="253:98">unsigned</name> <name pos:start="253:100" pos:end="253:103">char</name><operator pos:start="253:104" pos:end="253:104">)</operator><name pos:start="253:105" pos:end="253:109">vzero</name></expr></argument>, <argument pos:start="253:112" pos:end="253:117"><expr pos:start="253:112" pos:end="253:117"><name pos:start="253:112" pos:end="253:117">src_vF</name></expr></argument>)</argument_list></call><operator pos:start="253:119" pos:end="253:119">)</operator></expr></init></decl>;</decl_stmt>



                    <decl_stmt pos:start="257:21" pos:end="257:105"><decl pos:start="257:21" pos:end="257:104"><type pos:start="257:21" pos:end="257:39"><name pos:start="257:21" pos:end="257:26">vector</name> <name pos:start="257:28" pos:end="257:33">signed</name> <name pos:start="257:35" pos:end="257:39">short</name></type> <name pos:start="257:41" pos:end="257:50">filter_v1R</name> <init pos:start="257:52" pos:end="257:104">= <expr pos:start="257:54" pos:end="257:104"><call pos:start="257:54" pos:end="257:104"><name pos:start="257:54" pos:end="257:59">vec_ld</name><argument_list pos:start="257:60" pos:end="257:104">(<argument pos:start="257:61" pos:end="257:95"><expr pos:start="257:61" pos:end="257:95"><operator pos:start="257:61" pos:end="257:61">(</operator><name pos:start="257:62" pos:end="257:62">i</name> <operator pos:start="257:64" pos:end="257:64">*</operator> <literal type="number" pos:start="257:66" pos:end="257:66">2</literal> <operator pos:start="257:68" pos:end="257:68">*</operator> <name pos:start="257:70" pos:end="257:79">filterSize</name><operator pos:start="257:80" pos:end="257:80">)</operator> <operator pos:start="257:82" pos:end="257:82">+</operator> <operator pos:start="257:84" pos:end="257:84">(</operator><name pos:start="257:85" pos:end="257:85">j</name> <operator pos:start="257:87" pos:end="257:87">*</operator> <literal type="number" pos:start="257:89" pos:end="257:89">2</literal><operator pos:start="257:90" pos:end="257:90">)</operator> <operator pos:start="257:92" pos:end="257:92">+</operator> <literal type="number" pos:start="257:94" pos:end="257:95">16</literal></expr></argument>, <argument pos:start="257:98" pos:end="257:103"><expr pos:start="257:98" pos:end="257:103"><name pos:start="257:98" pos:end="257:103">filter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="259:21" pos:end="259:105"><decl pos:start="259:21" pos:end="259:104"><type pos:start="259:21" pos:end="259:39"><name pos:start="259:21" pos:end="259:26">vector</name> <name pos:start="259:28" pos:end="259:33">signed</name> <name pos:start="259:35" pos:end="259:39">short</name></type> <name pos:start="259:41" pos:end="259:50">filter_v2R</name> <init pos:start="259:52" pos:end="259:104">= <expr pos:start="259:54" pos:end="259:104"><call pos:start="259:54" pos:end="259:104"><name pos:start="259:54" pos:end="259:59">vec_ld</name><argument_list pos:start="259:60" pos:end="259:104">(<argument pos:start="259:61" pos:end="259:95"><expr pos:start="259:61" pos:end="259:95"><operator pos:start="259:61" pos:end="259:61">(</operator><name pos:start="259:62" pos:end="259:62">i</name> <operator pos:start="259:64" pos:end="259:64">*</operator> <literal type="number" pos:start="259:66" pos:end="259:66">2</literal> <operator pos:start="259:68" pos:end="259:68">*</operator> <name pos:start="259:70" pos:end="259:79">filterSize</name><operator pos:start="259:80" pos:end="259:80">)</operator> <operator pos:start="259:82" pos:end="259:82">+</operator> <operator pos:start="259:84" pos:end="259:84">(</operator><name pos:start="259:85" pos:end="259:85">j</name> <operator pos:start="259:87" pos:end="259:87">*</operator> <literal type="number" pos:start="259:89" pos:end="259:89">2</literal><operator pos:start="259:90" pos:end="259:90">)</operator> <operator pos:start="259:92" pos:end="259:92">+</operator> <literal type="number" pos:start="259:94" pos:end="259:95">32</literal></expr></argument>, <argument pos:start="259:98" pos:end="259:103"><expr pos:start="259:98" pos:end="259:103"><name pos:start="259:98" pos:end="259:103">filter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="261:21" pos:end="261:93"><decl pos:start="261:21" pos:end="261:92"><type pos:start="261:21" pos:end="261:39"><name pos:start="261:21" pos:end="261:26">vector</name> <name pos:start="261:28" pos:end="261:33">signed</name> <name pos:start="261:35" pos:end="261:39">short</name></type> <name pos:start="261:41" pos:end="261:49">filter_v0</name>  <init pos:start="261:52" pos:end="261:92">= <expr pos:start="261:54" pos:end="261:92"><call pos:start="261:54" pos:end="261:92"><name pos:start="261:54" pos:end="261:61">vec_perm</name><argument_list pos:start="261:62" pos:end="261:92">(<argument pos:start="261:63" pos:end="261:72"><expr pos:start="261:63" pos:end="261:72"><name pos:start="261:63" pos:end="261:72">filter_v0R</name></expr></argument>, <argument pos:start="261:75" pos:end="261:84"><expr pos:start="261:75" pos:end="261:84"><name pos:start="261:75" pos:end="261:84">filter_v1R</name></expr></argument>, <argument pos:start="261:87" pos:end="261:91"><expr pos:start="261:87" pos:end="261:91"><name pos:start="261:87" pos:end="261:91">permF</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="263:21" pos:end="263:93"><decl pos:start="263:21" pos:end="263:92"><type pos:start="263:21" pos:end="263:39"><name pos:start="263:21" pos:end="263:26">vector</name> <name pos:start="263:28" pos:end="263:33">signed</name> <name pos:start="263:35" pos:end="263:39">short</name></type> <name pos:start="263:41" pos:end="263:49">filter_v1</name>  <init pos:start="263:52" pos:end="263:92">= <expr pos:start="263:54" pos:end="263:92"><call pos:start="263:54" pos:end="263:92"><name pos:start="263:54" pos:end="263:61">vec_perm</name><argument_list pos:start="263:62" pos:end="263:92">(<argument pos:start="263:63" pos:end="263:72"><expr pos:start="263:63" pos:end="263:72"><name pos:start="263:63" pos:end="263:72">filter_v1R</name></expr></argument>, <argument pos:start="263:75" pos:end="263:84"><expr pos:start="263:75" pos:end="263:84"><name pos:start="263:75" pos:end="263:84">filter_v2R</name></expr></argument>, <argument pos:start="263:87" pos:end="263:91"><expr pos:start="263:87" pos:end="263:91"><name pos:start="263:87" pos:end="263:91">permF</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <decl_stmt pos:start="267:21" pos:end="267:84"><decl pos:start="267:21" pos:end="267:83"><type pos:start="267:21" pos:end="267:37"><name pos:start="267:21" pos:end="267:26">vector</name> <name pos:start="267:28" pos:end="267:33">signed</name> <name pos:start="267:35" pos:end="267:37">int</name></type> <name pos:start="267:39" pos:end="267:45">val_acc</name> <init pos:start="267:47" pos:end="267:83">= <expr pos:start="267:49" pos:end="267:83"><call pos:start="267:49" pos:end="267:83"><name pos:start="267:49" pos:end="267:57">vec_msums</name><argument_list pos:start="267:58" pos:end="267:83">(<argument pos:start="267:59" pos:end="267:64"><expr pos:start="267:59" pos:end="267:64"><name pos:start="267:59" pos:end="267:64">src_vA</name></expr></argument>, <argument pos:start="267:67" pos:end="267:75"><expr pos:start="267:67" pos:end="267:75"><name pos:start="267:67" pos:end="267:75">filter_v0</name></expr></argument>, <argument pos:start="267:78" pos:end="267:82"><expr pos:start="267:78" pos:end="267:82"><name pos:start="267:78" pos:end="267:82">val_v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="269:21" pos:end="269:66"><expr pos:start="269:21" pos:end="269:65"><name pos:start="269:21" pos:end="269:25">val_v</name> <operator pos:start="269:27" pos:end="269:27">=</operator> <call pos:start="269:29" pos:end="269:65"><name pos:start="269:29" pos:end="269:37">vec_msums</name><argument_list pos:start="269:38" pos:end="269:65">(<argument pos:start="269:39" pos:end="269:44"><expr pos:start="269:39" pos:end="269:44"><name pos:start="269:39" pos:end="269:44">src_vB</name></expr></argument>, <argument pos:start="269:47" pos:end="269:55"><expr pos:start="269:47" pos:end="269:55"><name pos:start="269:47" pos:end="269:55">filter_v1</name></expr></argument>, <argument pos:start="269:58" pos:end="269:64"><expr pos:start="269:58" pos:end="269:64"><name pos:start="269:58" pos:end="269:64">val_acc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="273:21" pos:end="273:44"><expr pos:start="273:21" pos:end="273:43"><name pos:start="273:21" pos:end="273:30">filter_v0R</name> <operator pos:start="273:32" pos:end="273:32">=</operator> <name pos:start="273:34" pos:end="273:43">filter_v2R</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="275:21" pos:end="275:40"><expr pos:start="275:21" pos:end="275:39"><name pos:start="275:21" pos:end="275:26">src_v0</name>     <operator pos:start="275:32" pos:end="275:32">=</operator> <name pos:start="275:34" pos:end="275:39">src_v1</name></expr>;</expr_stmt>

                </block_content>}</block></for>



                <if_stmt pos:start="281:17" pos:end="317:17"><if pos:start="281:17" pos:end="317:17">if <condition pos:start="281:20" pos:end="281:39">(<expr pos:start="281:21" pos:end="281:38"><name pos:start="281:21" pos:end="281:21">j</name> <operator pos:start="281:23" pos:end="281:23">&lt;</operator> <name pos:start="281:25" pos:end="281:34">filterSize</name> <operator pos:start="281:36" pos:end="281:36">-</operator> <literal type="number" pos:start="281:38" pos:end="281:38">7</literal></expr>)</condition> <block pos:start="281:41" pos:end="317:17">{<block_content pos:start="287:21" pos:end="315:62">

                    <comment type="line" pos:start="283:21" pos:end="283:73">// loading src_v0 is useless, it's already done above</comment>

                    <comment type="line" pos:start="285:21" pos:end="285:77">// vector unsigned char src_v0 = vec_ld(srcPos + j, src);</comment>

                    <decl_stmt pos:start="287:21" pos:end="287:56"><decl pos:start="287:21" pos:end="287:47"><type pos:start="287:21" pos:end="287:40"><name pos:start="287:21" pos:end="287:26">vector</name> <name pos:start="287:28" pos:end="287:35">unsigned</name> <name pos:start="287:37" pos:end="287:40">char</name></type> <name pos:start="287:42" pos:end="287:47">src_v1</name></decl>, <decl pos:start="287:50" pos:end="287:55"><type ref="prev" pos:start="287:21" pos:end="287:40"/><name pos:start="287:50" pos:end="287:55">src_vF</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="289:21" pos:end="289:68"><decl pos:start="289:21" pos:end="289:45"><type pos:start="289:21" pos:end="289:39"><name pos:start="289:21" pos:end="289:26">vector</name> <name pos:start="289:28" pos:end="289:33">signed</name> <name pos:start="289:35" pos:end="289:39">short</name></type> <name pos:start="289:41" pos:end="289:45">src_v</name></decl>, <decl pos:start="289:48" pos:end="289:57"><type ref="prev" pos:start="289:21" pos:end="289:39"/><name pos:start="289:48" pos:end="289:57">filter_v1R</name></decl>, <decl pos:start="289:60" pos:end="289:67"><type ref="prev" pos:start="289:21" pos:end="289:39"/><name pos:start="289:60" pos:end="289:67">filter_v</name></decl>;</decl_stmt>

                    <if_stmt pos:start="291:21" pos:end="295:21"><if pos:start="291:21" pos:end="295:21">if <condition pos:start="291:24" pos:end="291:61">(<expr pos:start="291:25" pos:end="291:60"><operator pos:start="291:25" pos:end="291:25">(</operator><operator pos:start="291:26" pos:end="291:26">(</operator><operator pos:start="291:27" pos:end="291:27">(</operator><name pos:start="291:28" pos:end="291:36">uintptr_t</name><operator pos:start="291:37" pos:end="291:37">)</operator><name pos:start="291:38" pos:end="291:40">src</name> <operator pos:start="291:42" pos:end="291:42">+</operator> <name pos:start="291:44" pos:end="291:49">srcPos</name><operator pos:start="291:50" pos:end="291:50">)</operator> <operator pos:start="291:52" pos:end="291:52">%</operator> <literal type="number" pos:start="291:54" pos:end="291:55">16</literal><operator pos:start="291:56" pos:end="291:56">)</operator> <operator pos:start="291:58" pos:end="291:58">&gt;</operator> <literal type="number" pos:start="291:60" pos:end="291:60">8</literal></expr>)</condition> <block pos:start="291:63" pos:end="295:21">{<block_content pos:start="293:25" pos:end="293:62">

                        <expr_stmt pos:start="293:25" pos:end="293:62"><expr pos:start="293:25" pos:end="293:61"><name pos:start="293:25" pos:end="293:30">src_v1</name> <operator pos:start="293:32" pos:end="293:32">=</operator> <call pos:start="293:34" pos:end="293:61"><name pos:start="293:34" pos:end="293:39">vec_ld</name><argument_list pos:start="293:40" pos:end="293:61">(<argument pos:start="293:41" pos:end="293:55"><expr pos:start="293:41" pos:end="293:55"><name pos:start="293:41" pos:end="293:46">srcPos</name> <operator pos:start="293:48" pos:end="293:48">+</operator> <name pos:start="293:50" pos:end="293:50">j</name> <operator pos:start="293:52" pos:end="293:52">+</operator> <literal type="number" pos:start="293:54" pos:end="293:55">16</literal></expr></argument>, <argument pos:start="293:58" pos:end="293:60"><expr pos:start="293:58" pos:end="293:60"><name pos:start="293:58" pos:end="293:60">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="297:21" pos:end="297:61"><expr pos:start="297:21" pos:end="297:60"><name pos:start="297:21" pos:end="297:26">src_vF</name> <operator pos:start="297:28" pos:end="297:28">=</operator> <call pos:start="297:30" pos:end="297:60"><name pos:start="297:30" pos:end="297:37">vec_perm</name><argument_list pos:start="297:38" pos:end="297:60">(<argument pos:start="297:39" pos:end="297:44"><expr pos:start="297:39" pos:end="297:44"><name pos:start="297:39" pos:end="297:44">src_v0</name></expr></argument>, <argument pos:start="297:47" pos:end="297:52"><expr pos:start="297:47" pos:end="297:52"><name pos:start="297:47" pos:end="297:52">src_v1</name></expr></argument>, <argument pos:start="297:55" pos:end="297:59"><expr pos:start="297:55" pos:end="297:59"><name pos:start="297:55" pos:end="297:59">permS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="301:21" pos:end="303:99"><expr pos:start="301:21" pos:end="303:98"><name pos:start="301:21" pos:end="301:25">src_v</name> <operator pos:start="301:27" pos:end="301:27">=</operator> <comment type="line" pos:start="301:29" pos:end="301:58">// vec_unpackh sign-extends...</comment>

                            <operator pos:start="303:29" pos:end="303:29">(</operator><name pos:start="303:30" pos:end="303:35">vector</name> <name pos:start="303:37" pos:end="303:42">signed</name> <name pos:start="303:44" pos:end="303:48">short</name><operator pos:start="303:49" pos:end="303:49">)</operator><operator pos:start="303:50" pos:end="303:50">(</operator><call pos:start="303:51" pos:end="303:97"><name pos:start="303:51" pos:end="303:60">vec_mergeh</name><argument_list pos:start="303:61" pos:end="303:97">(<argument pos:start="303:62" pos:end="303:88"><expr pos:start="303:62" pos:end="303:88"><operator pos:start="303:62" pos:end="303:62">(</operator><name pos:start="303:63" pos:end="303:68">vector</name> <name pos:start="303:70" pos:end="303:77">unsigned</name> <name pos:start="303:79" pos:end="303:82">char</name><operator pos:start="303:83" pos:end="303:83">)</operator><name pos:start="303:84" pos:end="303:88">vzero</name></expr></argument>, <argument pos:start="303:91" pos:end="303:96"><expr pos:start="303:91" pos:end="303:96"><name pos:start="303:91" pos:end="303:96">src_vF</name></expr></argument>)</argument_list></call><operator pos:start="303:98" pos:end="303:98">)</operator></expr>;</expr_stmt>

                    <comment type="line" pos:start="305:21" pos:end="305:77">// loading filter_v0R is useless, it's already done above</comment>

                    <comment type="line" pos:start="307:21" pos:end="307:97">// vector signed short filter_v0R = vec_ld((i * 2 * filterSize) + j, filter);</comment>

                    <expr_stmt pos:start="309:21" pos:end="309:85"><expr pos:start="309:21" pos:end="309:84"><name pos:start="309:21" pos:end="309:30">filter_v1R</name> <operator pos:start="309:32" pos:end="309:32">=</operator> <call pos:start="309:34" pos:end="309:84"><name pos:start="309:34" pos:end="309:39">vec_ld</name><argument_list pos:start="309:40" pos:end="309:84">(<argument pos:start="309:41" pos:end="309:75"><expr pos:start="309:41" pos:end="309:75"><operator pos:start="309:41" pos:end="309:41">(</operator><name pos:start="309:42" pos:end="309:42">i</name> <operator pos:start="309:44" pos:end="309:44">*</operator> <literal type="number" pos:start="309:46" pos:end="309:46">2</literal> <operator pos:start="309:48" pos:end="309:48">*</operator> <name pos:start="309:50" pos:end="309:59">filterSize</name><operator pos:start="309:60" pos:end="309:60">)</operator> <operator pos:start="309:62" pos:end="309:62">+</operator> <operator pos:start="309:64" pos:end="309:64">(</operator><name pos:start="309:65" pos:end="309:65">j</name> <operator pos:start="309:67" pos:end="309:67">*</operator> <literal type="number" pos:start="309:69" pos:end="309:69">2</literal><operator pos:start="309:70" pos:end="309:70">)</operator> <operator pos:start="309:72" pos:end="309:72">+</operator> <literal type="number" pos:start="309:74" pos:end="309:75">16</literal></expr></argument>, <argument pos:start="309:78" pos:end="309:83"><expr pos:start="309:78" pos:end="309:83"><name pos:start="309:78" pos:end="309:83">filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="311:21" pos:end="311:73"><expr pos:start="311:21" pos:end="311:72"><name pos:start="311:21" pos:end="311:28">filter_v</name>   <operator pos:start="311:32" pos:end="311:32">=</operator> <call pos:start="311:34" pos:end="311:72"><name pos:start="311:34" pos:end="311:41">vec_perm</name><argument_list pos:start="311:42" pos:end="311:72">(<argument pos:start="311:43" pos:end="311:52"><expr pos:start="311:43" pos:end="311:52"><name pos:start="311:43" pos:end="311:52">filter_v0R</name></expr></argument>, <argument pos:start="311:55" pos:end="311:64"><expr pos:start="311:55" pos:end="311:64"><name pos:start="311:55" pos:end="311:64">filter_v1R</name></expr></argument>, <argument pos:start="311:67" pos:end="311:71"><expr pos:start="311:67" pos:end="311:71"><name pos:start="311:67" pos:end="311:71">permF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="315:21" pos:end="315:62"><expr pos:start="315:21" pos:end="315:61"><name pos:start="315:21" pos:end="315:25">val_v</name> <operator pos:start="315:27" pos:end="315:27">=</operator> <call pos:start="315:29" pos:end="315:61"><name pos:start="315:29" pos:end="315:37">vec_msums</name><argument_list pos:start="315:38" pos:end="315:61">(<argument pos:start="315:39" pos:end="315:43"><expr pos:start="315:39" pos:end="315:43"><name pos:start="315:39" pos:end="315:43">src_v</name></expr></argument>, <argument pos:start="315:46" pos:end="315:53"><expr pos:start="315:46" pos:end="315:53"><name pos:start="315:46" pos:end="315:53">filter_v</name></expr></argument>, <argument pos:start="315:56" pos:end="315:60"><expr pos:start="315:56" pos:end="315:60"><name pos:start="315:56" pos:end="315:60">val_v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="321:17" pos:end="321:47"><expr pos:start="321:17" pos:end="321:46"><name pos:start="321:17" pos:end="321:21">val_s</name> <operator pos:start="321:23" pos:end="321:23">=</operator> <call pos:start="321:25" pos:end="321:46"><name pos:start="321:25" pos:end="321:32">vec_sums</name><argument_list pos:start="321:33" pos:end="321:46">(<argument pos:start="321:34" pos:end="321:38"><expr pos:start="321:34" pos:end="321:38"><name pos:start="321:34" pos:end="321:38">val_v</name></expr></argument>, <argument pos:start="321:41" pos:end="321:45"><expr pos:start="321:41" pos:end="321:45"><name pos:start="321:41" pos:end="321:45">vzero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="325:17" pos:end="325:40"><expr pos:start="325:17" pos:end="325:39"><call pos:start="325:17" pos:end="325:39"><name pos:start="325:17" pos:end="325:22">vec_st</name><argument_list pos:start="325:23" pos:end="325:39">(<argument pos:start="325:24" pos:end="325:28"><expr pos:start="325:24" pos:end="325:28"><name pos:start="325:24" pos:end="325:28">val_s</name></expr></argument>, <argument pos:start="325:31" pos:end="325:31"><expr pos:start="325:31" pos:end="325:31"><literal type="number" pos:start="325:31" pos:end="325:31">0</literal></expr></argument>, <argument pos:start="325:34" pos:end="325:38"><expr pos:start="325:34" pos:end="325:38"><name pos:start="325:34" pos:end="325:38">tempo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="327:17" pos:end="327:61"><expr pos:start="327:17" pos:end="327:60"><name pos:start="327:17" pos:end="327:22"><name pos:start="327:17" pos:end="327:19">dst</name><index pos:start="327:20" pos:end="327:22">[<expr pos:start="327:21" pos:end="327:21"><name pos:start="327:21" pos:end="327:21">i</name></expr>]</index></name> <operator pos:start="327:24" pos:end="327:24">=</operator> <call pos:start="327:26" pos:end="327:60"><name pos:start="327:26" pos:end="327:30">FFMIN</name><argument_list pos:start="327:31" pos:end="327:60">(<argument pos:start="327:32" pos:end="327:44"><expr pos:start="327:32" pos:end="327:44"><name pos:start="327:32" pos:end="327:39"><name pos:start="327:32" pos:end="327:36">tempo</name><index pos:start="327:37" pos:end="327:39">[<expr pos:start="327:38" pos:end="327:38"><literal type="number" pos:start="327:38" pos:end="327:38">3</literal></expr>]</index></name> <operator pos:start="327:41" pos:end="327:42">&gt;&gt;</operator> <literal type="number" pos:start="327:44" pos:end="327:44">7</literal></expr></argument>, <argument pos:start="327:47" pos:end="327:59"><expr pos:start="327:47" pos:end="327:59"><operator pos:start="327:47" pos:end="327:47">(</operator><literal type="number" pos:start="327:48" pos:end="327:48">1</literal> <operator pos:start="327:50" pos:end="327:51">&lt;&lt;</operator> <literal type="number" pos:start="327:53" pos:end="327:54">15</literal><operator pos:start="327:55" pos:end="327:55">)</operator> <operator pos:start="327:57" pos:end="327:57">-</operator> <literal type="number" pos:start="327:59" pos:end="327:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></switch></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
