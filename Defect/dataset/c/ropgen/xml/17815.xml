<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17815.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">update_frame_pool</name><parameter_list pos:start="1:29" pos:end="1:67">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:66"><decl pos:start="1:53" pos:end="1:66"><type pos:start="1:53" pos:end="1:66"><name pos:start="1:53" pos:end="1:59">AVFrame</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="199:1">{<block_content pos:start="5:5" pos:end="197:15">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">FramePool</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">pool</name> <init pos:start="5:21" pos:end="5:43">= <expr pos:start="5:23" pos:end="5:43"><name pos:start="5:23" pos:end="5:43"><name pos:start="5:23" pos:end="5:27">avctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:37">internal</name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:43">pool</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="181:5">switch <condition pos:start="11:12" pos:end="11:30">(<expr pos:start="11:13" pos:end="11:29"><name pos:start="11:13" pos:end="11:29"><name pos:start="11:13" pos:end="11:17">avctx</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:29">codec_type</name></name></expr>)</condition> <block pos:start="11:32" pos:end="181:5">{<block_content pos:start="13:5" pos:end="179:27">

    <case pos:start="13:5" pos:end="13:28">case <expr pos:start="13:10" pos:end="13:27"><name pos:start="13:10" pos:end="13:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case> <block pos:start="13:30" pos:end="123:9">{<block_content pos:start="15:9" pos:end="121:14">

        <decl_stmt pos:start="15:9" pos:end="15:26"><decl pos:start="15:9" pos:end="15:25"><type pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:17">AVPicture</name></type> <name pos:start="15:19" pos:end="15:25">picture</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:28"><decl pos:start="17:9" pos:end="17:27"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:16">size</name><index pos:start="17:17" pos:end="17:19">[<expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">4</literal></expr>]</index></name> <init pos:start="17:21" pos:end="17:27">= <expr pos:start="17:23" pos:end="17:27"><block pos:start="17:23" pos:end="17:27">{ <expr pos:start="17:25" pos:end="17:25"><literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:29"><decl pos:start="19:9" pos:end="19:28"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:13">w</name> <init pos:start="19:15" pos:end="19:28">= <expr pos:start="19:17" pos:end="19:28"><name pos:start="19:17" pos:end="19:28"><name pos:start="19:17" pos:end="19:21">frame</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:28">width</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:30"><decl pos:start="21:9" pos:end="21:29"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">h</name> <init pos:start="21:15" pos:end="21:29">= <expr pos:start="21:17" pos:end="21:29"><name pos:start="21:17" pos:end="21:29"><name pos:start="21:17" pos:end="21:21">frame</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:29">height</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:31"><decl pos:start="23:9" pos:end="23:19"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:19">tmpsize</name></decl>, <decl pos:start="23:22" pos:end="23:30"><type ref="prev" pos:start="23:9" pos:end="23:11"/><name pos:start="23:22" pos:end="23:30">unaligned</name></decl>;</decl_stmt>



        <if_stmt pos:start="27:9" pos:end="31:21"><if pos:start="27:9" pos:end="31:21">if <condition pos:start="27:12" pos:end="29:73">(<expr pos:start="27:13" pos:end="29:72"><name pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:16">pool</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:24">format</name></name> <operator pos:start="27:26" pos:end="27:27">==</operator> <name pos:start="27:29" pos:end="27:41"><name pos:start="27:29" pos:end="27:33">frame</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:41">format</name></name> <operator pos:start="27:43" pos:end="27:44">&amp;&amp;</operator>

            <name pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:16">pool</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:23">width</name></name> <operator pos:start="29:25" pos:end="29:26">==</operator> <name pos:start="29:28" pos:end="29:39"><name pos:start="29:28" pos:end="29:32">frame</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:39">width</name></name> <operator pos:start="29:41" pos:end="29:42">&amp;&amp;</operator> <name pos:start="29:44" pos:end="29:55"><name pos:start="29:44" pos:end="29:47">pool</name><operator pos:start="29:48" pos:end="29:49">-&gt;</operator><name pos:start="29:50" pos:end="29:55">height</name></name> <operator pos:start="29:57" pos:end="29:58">==</operator> <name pos:start="29:60" pos:end="29:72"><name pos:start="29:60" pos:end="29:64">frame</name><operator pos:start="29:65" pos:end="29:66">-&gt;</operator><name pos:start="29:67" pos:end="29:72">height</name></name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:21"><block_content pos:start="31:13" pos:end="31:21">

            <return pos:start="31:13" pos:end="31:21">return <expr pos:start="31:20" pos:end="31:20"><literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:69"><expr pos:start="35:9" pos:end="35:68"><call pos:start="35:9" pos:end="35:68"><name pos:start="35:9" pos:end="35:33">avcodec_align_dimensions2</name><argument_list pos:start="35:34" pos:end="35:68">(<argument pos:start="35:35" pos:end="35:39"><expr pos:start="35:35" pos:end="35:39"><name pos:start="35:35" pos:end="35:39">avctx</name></expr></argument>, <argument pos:start="35:42" pos:end="35:43"><expr pos:start="35:42" pos:end="35:43"><operator pos:start="35:42" pos:end="35:42">&amp;</operator><name pos:start="35:43" pos:end="35:43">w</name></expr></argument>, <argument pos:start="35:46" pos:end="35:47"><expr pos:start="35:46" pos:end="35:47"><operator pos:start="35:46" pos:end="35:46">&amp;</operator><name pos:start="35:47" pos:end="35:47">h</name></expr></argument>, <argument pos:start="35:50" pos:end="35:67"><expr pos:start="35:50" pos:end="35:67"><name pos:start="35:50" pos:end="35:67"><name pos:start="35:50" pos:end="35:53">pool</name><operator pos:start="35:54" pos:end="35:55">-&gt;</operator><name pos:start="35:56" pos:end="35:67">stride_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:50">(<expr pos:start="39:13" pos:end="39:49"><operator pos:start="39:13" pos:end="39:13">!</operator><operator pos:start="39:14" pos:end="39:14">(</operator><name pos:start="39:15" pos:end="39:26"><name pos:start="39:15" pos:end="39:19">avctx</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:26">flags</name></name> <operator pos:start="39:28" pos:end="39:28">&amp;</operator> <name pos:start="39:30" pos:end="39:48">CODEC_FLAG_EMU_EDGE</name><operator pos:start="39:49" pos:end="39:49">)</operator></expr>)</condition> <block pos:start="39:52" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:32">

            <expr_stmt pos:start="41:13" pos:end="41:32"><expr pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:13">w</name> <operator pos:start="41:15" pos:end="41:16">+=</operator> <name pos:start="41:18" pos:end="41:27">EDGE_WIDTH</name> <operator pos:start="41:29" pos:end="41:29">*</operator> <literal type="number" pos:start="41:31" pos:end="41:31">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:32"><expr pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:13">h</name> <operator pos:start="43:15" pos:end="43:16">+=</operator> <name pos:start="43:18" pos:end="43:27">EDGE_WIDTH</name> <operator pos:start="43:29" pos:end="43:29">*</operator> <literal type="number" pos:start="43:31" pos:end="43:31">2</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <do pos:start="49:9" pos:end="69:28">do <block pos:start="49:12" pos:end="69:9">{<block_content pos:start="55:13" pos:end="67:73">

            <comment type="line" pos:start="51:13" pos:end="51:86">// NOTE: do not align linesizes individually, this breaks e.g. assumptions</comment>

            <comment type="line" pos:start="53:13" pos:end="53:78">// that linesize[0] == 2*linesize[1] in the MPEG-encoder for 4:2:2</comment>

            <expr_stmt pos:start="55:13" pos:end="55:73"><expr pos:start="55:13" pos:end="55:72"><call pos:start="55:13" pos:end="55:72"><name pos:start="55:13" pos:end="55:35">av_image_fill_linesizes</name><argument_list pos:start="55:36" pos:end="55:72">(<argument pos:start="55:37" pos:end="55:52"><expr pos:start="55:37" pos:end="55:52"><name pos:start="55:37" pos:end="55:52"><name pos:start="55:37" pos:end="55:43">picture</name><operator pos:start="55:44" pos:end="55:44">.</operator><name pos:start="55:45" pos:end="55:52">linesize</name></name></expr></argument>, <argument pos:start="55:55" pos:end="55:68"><expr pos:start="55:55" pos:end="55:68"><name pos:start="55:55" pos:end="55:68"><name pos:start="55:55" pos:end="55:59">avctx</name><operator pos:start="55:60" pos:end="55:61">-&gt;</operator><name pos:start="55:62" pos:end="55:68">pix_fmt</name></name></expr></argument>, <argument pos:start="55:71" pos:end="55:71"><expr pos:start="55:71" pos:end="55:71"><name pos:start="55:71" pos:end="55:71">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="57:13" pos:end="57:87">// increase alignment of w for next try (rhs gives the lowest bit set in w)</comment>

            <expr_stmt pos:start="59:13" pos:end="59:30"><expr pos:start="59:13" pos:end="59:29"><name pos:start="59:13" pos:end="59:13">w</name> <operator pos:start="59:15" pos:end="59:16">+=</operator> <name pos:start="59:18" pos:end="59:18">w</name> <operator pos:start="59:20" pos:end="59:20">&amp;</operator> <operator pos:start="59:22" pos:end="59:22">~</operator><operator pos:start="59:23" pos:end="59:23">(</operator><name pos:start="59:24" pos:end="59:24">w</name> <operator pos:start="59:26" pos:end="59:26">-</operator> <literal type="number" pos:start="59:28" pos:end="59:28">1</literal><operator pos:start="59:29" pos:end="59:29">)</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="63:13" pos:end="63:26"><expr pos:start="63:13" pos:end="63:25"><name pos:start="63:13" pos:end="63:21">unaligned</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:25">0</literal></expr>;</expr_stmt>

            <for pos:start="65:13" pos:end="67:73">for <control pos:start="65:17" pos:end="65:35">(<init pos:start="65:18" pos:end="65:23"><expr pos:start="65:18" pos:end="65:22"><name pos:start="65:18" pos:end="65:18">i</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>;</init> <condition pos:start="65:25" pos:end="65:30"><expr pos:start="65:25" pos:end="65:29"><name pos:start="65:25" pos:end="65:25">i</name> <operator pos:start="65:27" pos:end="65:27">&lt;</operator> <literal type="number" pos:start="65:29" pos:end="65:29">4</literal></expr>;</condition> <incr pos:start="65:32" pos:end="65:34"><expr pos:start="65:32" pos:end="65:34"><name pos:start="65:32" pos:end="65:32">i</name><operator pos:start="65:33" pos:end="65:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:17" pos:end="67:73"><block_content pos:start="67:17" pos:end="67:73">

                <expr_stmt pos:start="67:17" pos:end="67:73"><expr pos:start="67:17" pos:end="67:72"><name pos:start="67:17" pos:end="67:25">unaligned</name> <operator pos:start="67:27" pos:end="67:28">|=</operator> <name pos:start="67:30" pos:end="67:48"><name pos:start="67:30" pos:end="67:36">picture</name><operator pos:start="67:37" pos:end="67:37">.</operator><name pos:start="67:38" pos:end="67:45">linesize</name><index pos:start="67:46" pos:end="67:48">[<expr pos:start="67:47" pos:end="67:47"><name pos:start="67:47" pos:end="67:47">i</name></expr>]</index></name> <operator pos:start="67:50" pos:end="67:50">%</operator> <name pos:start="67:52" pos:end="67:72"><name pos:start="67:52" pos:end="67:55">pool</name><operator pos:start="67:56" pos:end="67:57">-&gt;</operator><name pos:start="67:58" pos:end="67:69">stride_align</name><index pos:start="67:70" pos:end="67:72">[<expr pos:start="67:71" pos:end="67:71"><name pos:start="67:71" pos:end="67:71">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block> while <condition pos:start="69:17" pos:end="69:27">(<expr pos:start="69:18" pos:end="69:26"><name pos:start="69:18" pos:end="69:26">unaligned</name></expr>)</condition>;</do>



        <expr_stmt pos:start="73:9" pos:end="75:65"><expr pos:start="73:9" pos:end="75:64"><name pos:start="73:9" pos:end="73:15">tmpsize</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="75:64"><name pos:start="73:19" pos:end="73:40">av_image_fill_pointers</name><argument_list pos:start="73:41" pos:end="75:64">(<argument pos:start="73:42" pos:end="73:53"><expr pos:start="73:42" pos:end="73:53"><name pos:start="73:42" pos:end="73:53"><name pos:start="73:42" pos:end="73:48">picture</name><operator pos:start="73:49" pos:end="73:49">.</operator><name pos:start="73:50" pos:end="73:53">data</name></name></expr></argument>, <argument pos:start="73:56" pos:end="73:69"><expr pos:start="73:56" pos:end="73:69"><name pos:start="73:56" pos:end="73:69"><name pos:start="73:56" pos:end="73:60">avctx</name><operator pos:start="73:61" pos:end="73:62">-&gt;</operator><name pos:start="73:63" pos:end="73:69">pix_fmt</name></name></expr></argument>, <argument pos:start="73:72" pos:end="73:72"><expr pos:start="73:72" pos:end="73:72"><name pos:start="73:72" pos:end="73:72">h</name></expr></argument>,

                                         <argument pos:start="75:42" pos:end="75:45"><expr pos:start="75:42" pos:end="75:45"><name pos:start="75:42" pos:end="75:45">NULL</name></expr></argument>, <argument pos:start="75:48" pos:end="75:63"><expr pos:start="75:48" pos:end="75:63"><name pos:start="75:48" pos:end="75:63"><name pos:start="75:48" pos:end="75:54">picture</name><operator pos:start="75:55" pos:end="75:55">.</operator><name pos:start="75:56" pos:end="75:63">linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="79:22"><if pos:start="77:9" pos:end="79:22">if <condition pos:start="77:12" pos:end="77:24">(<expr pos:start="77:13" pos:end="77:23"><name pos:start="77:13" pos:end="77:19">tmpsize</name> <operator pos:start="77:21" pos:end="77:21">&lt;</operator> <literal type="number" pos:start="77:23" pos:end="77:23">0</literal></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:22"><block_content pos:start="79:13" pos:end="79:22">

            <return pos:start="79:13" pos:end="79:22">return <expr pos:start="79:20" pos:end="79:21"><operator pos:start="79:20" pos:end="79:20">-</operator><literal type="number" pos:start="79:21" pos:end="79:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <for pos:start="83:9" pos:end="85:60">for <control pos:start="83:13" pos:end="83:54">(<init pos:start="83:14" pos:end="83:19"><expr pos:start="83:14" pos:end="83:18"><name pos:start="83:14" pos:end="83:14">i</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>;</init> <condition pos:start="83:21" pos:end="83:49"><expr pos:start="83:21" pos:end="83:48"><name pos:start="83:21" pos:end="83:21">i</name> <operator pos:start="83:23" pos:end="83:23">&lt;</operator> <literal type="number" pos:start="83:25" pos:end="83:25">3</literal> <operator pos:start="83:27" pos:end="83:28">&amp;&amp;</operator> <name pos:start="83:30" pos:end="83:48"><name pos:start="83:30" pos:end="83:36">picture</name><operator pos:start="83:37" pos:end="83:37">.</operator><name pos:start="83:38" pos:end="83:41">data</name><index pos:start="83:42" pos:end="83:48">[<expr pos:start="83:43" pos:end="83:47"><name pos:start="83:43" pos:end="83:43">i</name> <operator pos:start="83:45" pos:end="83:45">+</operator> <literal type="number" pos:start="83:47" pos:end="83:47">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="83:51" pos:end="83:53"><expr pos:start="83:51" pos:end="83:53"><name pos:start="83:51" pos:end="83:51">i</name><operator pos:start="83:52" pos:end="83:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="85:13" pos:end="85:60"><block_content pos:start="85:13" pos:end="85:60">

            <expr_stmt pos:start="85:13" pos:end="85:60"><expr pos:start="85:13" pos:end="85:59"><name pos:start="85:13" pos:end="85:19"><name pos:start="85:13" pos:end="85:16">size</name><index pos:start="85:17" pos:end="85:19">[<expr pos:start="85:18" pos:end="85:18"><name pos:start="85:18" pos:end="85:18">i</name></expr>]</index></name> <operator pos:start="85:21" pos:end="85:21">=</operator> <name pos:start="85:23" pos:end="85:41"><name pos:start="85:23" pos:end="85:29">picture</name><operator pos:start="85:30" pos:end="85:30">.</operator><name pos:start="85:31" pos:end="85:34">data</name><index pos:start="85:35" pos:end="85:41">[<expr pos:start="85:36" pos:end="85:40"><name pos:start="85:36" pos:end="85:36">i</name> <operator pos:start="85:38" pos:end="85:38">+</operator> <literal type="number" pos:start="85:40" pos:end="85:40">1</literal></expr>]</index></name> <operator pos:start="85:43" pos:end="85:43">-</operator> <name pos:start="85:45" pos:end="85:59"><name pos:start="85:45" pos:end="85:51">picture</name><operator pos:start="85:52" pos:end="85:52">.</operator><name pos:start="85:53" pos:end="85:56">data</name><index pos:start="85:57" pos:end="85:59">[<expr pos:start="85:58" pos:end="85:58"><name pos:start="85:58" pos:end="85:58">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="87:9" pos:end="87:64"><expr pos:start="87:9" pos:end="87:63"><name pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:12">size</name><index pos:start="87:13" pos:end="87:15">[<expr pos:start="87:14" pos:end="87:14"><name pos:start="87:14" pos:end="87:14">i</name></expr>]</index></name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:25">tmpsize</name> <operator pos:start="87:27" pos:end="87:27">-</operator> <operator pos:start="87:29" pos:end="87:29">(</operator><name pos:start="87:30" pos:end="87:44"><name pos:start="87:30" pos:end="87:36">picture</name><operator pos:start="87:37" pos:end="87:37">.</operator><name pos:start="87:38" pos:end="87:41">data</name><index pos:start="87:42" pos:end="87:44">[<expr pos:start="87:43" pos:end="87:43"><name pos:start="87:43" pos:end="87:43">i</name></expr>]</index></name> <operator pos:start="87:46" pos:end="87:46">-</operator> <name pos:start="87:48" pos:end="87:62"><name pos:start="87:48" pos:end="87:54">picture</name><operator pos:start="87:55" pos:end="87:55">.</operator><name pos:start="87:56" pos:end="87:59">data</name><index pos:start="87:60" pos:end="87:62">[<expr pos:start="87:61" pos:end="87:61"><literal type="number" pos:start="87:61" pos:end="87:61">0</literal></expr>]</index></name><operator pos:start="87:63" pos:end="87:63">)</operator></expr>;</expr_stmt>



        <for pos:start="91:9" pos:end="111:9">for <control pos:start="91:13" pos:end="91:31">(<init pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:18"><name pos:start="91:14" pos:end="91:14">i</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:18">0</literal></expr>;</init> <condition pos:start="91:21" pos:end="91:26"><expr pos:start="91:21" pos:end="91:25"><name pos:start="91:21" pos:end="91:21">i</name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <literal type="number" pos:start="91:25" pos:end="91:25">4</literal></expr>;</condition> <incr pos:start="91:28" pos:end="91:30"><expr pos:start="91:28" pos:end="91:30"><name pos:start="91:28" pos:end="91:28">i</name><operator pos:start="91:29" pos:end="91:30">++</operator></expr></incr>)</control> <block pos:start="91:33" pos:end="111:9">{<block_content pos:start="93:13" pos:end="109:13">

            <expr_stmt pos:start="93:13" pos:end="93:51"><expr pos:start="93:13" pos:end="93:50"><call pos:start="93:13" pos:end="93:50"><name pos:start="93:13" pos:end="93:33">av_buffer_pool_uninit</name><argument_list pos:start="93:34" pos:end="93:50">(<argument pos:start="93:35" pos:end="93:49"><expr pos:start="93:35" pos:end="93:49"><operator pos:start="93:35" pos:end="93:35">&amp;</operator><name pos:start="93:36" pos:end="93:49"><name pos:start="93:36" pos:end="93:39">pool</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:46">pools</name><index pos:start="93:47" pos:end="93:49">[<expr pos:start="93:48" pos:end="93:48"><name pos:start="93:48" pos:end="93:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:52"><expr pos:start="95:13" pos:end="95:51"><name pos:start="95:13" pos:end="95:29"><name pos:start="95:13" pos:end="95:16">pool</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:26">linesize</name><index pos:start="95:27" pos:end="95:29">[<expr pos:start="95:28" pos:end="95:28"><name pos:start="95:28" pos:end="95:28">i</name></expr>]</index></name> <operator pos:start="95:31" pos:end="95:31">=</operator> <name pos:start="95:33" pos:end="95:51"><name pos:start="95:33" pos:end="95:39">picture</name><operator pos:start="95:40" pos:end="95:40">.</operator><name pos:start="95:41" pos:end="95:48">linesize</name><index pos:start="95:49" pos:end="95:51">[<expr pos:start="95:50" pos:end="95:50"><name pos:start="95:50" pos:end="95:50">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="109:13"><if pos:start="97:13" pos:end="109:13">if <condition pos:start="97:16" pos:end="97:24">(<expr pos:start="97:17" pos:end="97:23"><name pos:start="97:17" pos:end="97:23"><name pos:start="97:17" pos:end="97:20">size</name><index pos:start="97:21" pos:end="97:23">[<expr pos:start="97:22" pos:end="97:22"><name pos:start="97:22" pos:end="97:22">i</name></expr>]</index></name></expr>)</condition> <block pos:start="97:26" pos:end="109:13">{<block_content pos:start="99:17" pos:end="107:17">

                <expr_stmt pos:start="99:17" pos:end="99:73"><expr pos:start="99:17" pos:end="99:72"><name pos:start="99:17" pos:end="99:30"><name pos:start="99:17" pos:end="99:20">pool</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:27">pools</name><index pos:start="99:28" pos:end="99:30">[<expr pos:start="99:29" pos:end="99:29"><name pos:start="99:29" pos:end="99:29">i</name></expr>]</index></name> <operator pos:start="99:32" pos:end="99:32">=</operator> <call pos:start="99:34" pos:end="99:72"><name pos:start="99:34" pos:end="99:52">av_buffer_pool_init</name><argument_list pos:start="99:53" pos:end="99:72">(<argument pos:start="99:54" pos:end="99:65"><expr pos:start="99:54" pos:end="99:65"><name pos:start="99:54" pos:end="99:60"><name pos:start="99:54" pos:end="99:57">size</name><index pos:start="99:58" pos:end="99:60">[<expr pos:start="99:59" pos:end="99:59"><name pos:start="99:59" pos:end="99:59">i</name></expr>]</index></name> <operator pos:start="99:62" pos:end="99:62">+</operator> <literal type="number" pos:start="99:64" pos:end="99:65">16</literal></expr></argument>, <argument pos:start="99:68" pos:end="99:71"><expr pos:start="99:68" pos:end="99:71"><name pos:start="99:68" pos:end="99:71">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="101:17" pos:end="107:17"><if pos:start="101:17" pos:end="107:17">if <condition pos:start="101:20" pos:end="101:36">(<expr pos:start="101:21" pos:end="101:35"><operator pos:start="101:21" pos:end="101:21">!</operator><name pos:start="101:22" pos:end="101:35"><name pos:start="101:22" pos:end="101:25">pool</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:32">pools</name><index pos:start="101:33" pos:end="101:35">[<expr pos:start="101:34" pos:end="101:34"><name pos:start="101:34" pos:end="101:34">i</name></expr>]</index></name></expr>)</condition> <block pos:start="101:38" pos:end="107:17">{<block_content pos:start="103:21" pos:end="105:30">

                    <expr_stmt pos:start="103:21" pos:end="103:42"><expr pos:start="103:21" pos:end="103:41"><name pos:start="103:21" pos:end="103:23">ret</name> <operator pos:start="103:25" pos:end="103:25">=</operator> <call pos:start="103:27" pos:end="103:41"><name pos:start="103:27" pos:end="103:33">AVERROR</name><argument_list pos:start="103:34" pos:end="103:41">(<argument pos:start="103:35" pos:end="103:40"><expr pos:start="103:35" pos:end="103:40"><name pos:start="103:35" pos:end="103:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="105:21" pos:end="105:30">goto <name pos:start="105:26" pos:end="105:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="113:9" pos:end="113:37"><expr pos:start="113:9" pos:end="113:36"><name pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:12">pool</name><operator pos:start="113:13" pos:end="113:14">-&gt;</operator><name pos:start="113:15" pos:end="113:20">format</name></name> <operator pos:start="113:22" pos:end="113:22">=</operator> <name pos:start="113:24" pos:end="113:36"><name pos:start="113:24" pos:end="113:28">frame</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:36">format</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:36"><expr pos:start="115:9" pos:end="115:35"><name pos:start="115:9" pos:end="115:19"><name pos:start="115:9" pos:end="115:12">pool</name><operator pos:start="115:13" pos:end="115:14">-&gt;</operator><name pos:start="115:15" pos:end="115:19">width</name></name>  <operator pos:start="115:22" pos:end="115:22">=</operator> <name pos:start="115:24" pos:end="115:35"><name pos:start="115:24" pos:end="115:28">frame</name><operator pos:start="115:29" pos:end="115:30">-&gt;</operator><name pos:start="115:31" pos:end="115:35">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:37"><expr pos:start="117:9" pos:end="117:36"><name pos:start="117:9" pos:end="117:20"><name pos:start="117:9" pos:end="117:12">pool</name><operator pos:start="117:13" pos:end="117:14">-&gt;</operator><name pos:start="117:15" pos:end="117:20">height</name></name> <operator pos:start="117:22" pos:end="117:22">=</operator> <name pos:start="117:24" pos:end="117:36"><name pos:start="117:24" pos:end="117:28">frame</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:36">height</name></name></expr>;</expr_stmt>



        <break pos:start="121:9" pos:end="121:14">break;</break>

        </block_content>}</block>

    <case pos:start="125:5" pos:end="125:28">case <expr pos:start="125:10" pos:end="125:27"><name pos:start="125:10" pos:end="125:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case> <block pos:start="125:30" pos:end="177:9">{<block_content pos:start="127:9" pos:end="175:14">

        <decl_stmt pos:start="127:9" pos:end="127:50"><decl pos:start="127:9" pos:end="127:49"><type pos:start="127:9" pos:end="127:11"><name pos:start="127:9" pos:end="127:11">int</name></type> <name pos:start="127:13" pos:end="127:14">ch</name>     <init pos:start="127:20" pos:end="127:49">= <expr pos:start="127:22" pos:end="127:49"><call pos:start="127:22" pos:end="127:49"><name pos:start="127:22" pos:end="127:42">av_frame_get_channels</name><argument_list pos:start="127:43" pos:end="127:49">(<argument pos:start="127:44" pos:end="127:48"><expr pos:start="127:44" pos:end="127:48"><name pos:start="127:44" pos:end="127:48">frame</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="127:52" pos:end="127:110">//av_get_channel_layout_nb_channels(frame-&gt;channel_layout);</comment>

        <decl_stmt pos:start="129:9" pos:end="129:60"><decl pos:start="129:9" pos:end="129:59"><type pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:11">int</name></type> <name pos:start="129:13" pos:end="129:18">planar</name> <init pos:start="129:20" pos:end="129:59">= <expr pos:start="129:22" pos:end="129:59"><call pos:start="129:22" pos:end="129:59"><name pos:start="129:22" pos:end="129:44">av_sample_fmt_is_planar</name><argument_list pos:start="129:45" pos:end="129:59">(<argument pos:start="129:46" pos:end="129:58"><expr pos:start="129:46" pos:end="129:58"><name pos:start="129:46" pos:end="129:58"><name pos:start="129:46" pos:end="129:50">frame</name><operator pos:start="129:51" pos:end="129:52">-&gt;</operator><name pos:start="129:53" pos:end="129:58">format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="131:9" pos:end="131:37"><decl pos:start="131:9" pos:end="131:36"><type pos:start="131:9" pos:end="131:11"><name pos:start="131:9" pos:end="131:11">int</name></type> <name pos:start="131:13" pos:end="131:18">planes</name> <init pos:start="131:20" pos:end="131:36">= <expr pos:start="131:22" pos:end="131:36"><ternary pos:start="131:22" pos:end="131:36"><condition pos:start="131:22" pos:end="131:29"><expr pos:start="131:22" pos:end="131:27"><name pos:start="131:22" pos:end="131:27">planar</name></expr> ?</condition><then pos:start="131:31" pos:end="131:32"> <expr pos:start="131:31" pos:end="131:32"><name pos:start="131:31" pos:end="131:32">ch</name></expr> </then><else pos:start="131:34" pos:end="131:36">: <expr pos:start="131:36" pos:end="131:36"><literal type="number" pos:start="131:36" pos:end="131:36">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="135:9" pos:end="139:21"><if pos:start="135:9" pos:end="139:21">if <condition pos:start="135:12" pos:end="137:71">(<expr pos:start="135:13" pos:end="137:70"><name pos:start="135:13" pos:end="135:24"><name pos:start="135:13" pos:end="135:16">pool</name><operator pos:start="135:17" pos:end="135:18">-&gt;</operator><name pos:start="135:19" pos:end="135:24">format</name></name> <operator pos:start="135:26" pos:end="135:27">==</operator> <name pos:start="135:29" pos:end="135:41"><name pos:start="135:29" pos:end="135:33">frame</name><operator pos:start="135:34" pos:end="135:35">-&gt;</operator><name pos:start="135:36" pos:end="135:41">format</name></name> <operator pos:start="135:43" pos:end="135:44">&amp;&amp;</operator> <name pos:start="135:46" pos:end="135:57"><name pos:start="135:46" pos:end="135:49">pool</name><operator pos:start="135:50" pos:end="135:51">-&gt;</operator><name pos:start="135:52" pos:end="135:57">planes</name></name> <operator pos:start="135:59" pos:end="135:60">==</operator> <name pos:start="135:62" pos:end="135:67">planes</name> <operator pos:start="135:69" pos:end="135:70">&amp;&amp;</operator>

            <name pos:start="137:13" pos:end="137:26"><name pos:start="137:13" pos:end="137:16">pool</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:26">channels</name></name> <operator pos:start="137:28" pos:end="137:29">==</operator> <name pos:start="137:31" pos:end="137:32">ch</name> <operator pos:start="137:34" pos:end="137:35">&amp;&amp;</operator> <name pos:start="137:37" pos:end="137:53"><name pos:start="137:37" pos:end="137:41">frame</name><operator pos:start="137:42" pos:end="137:43">-&gt;</operator><name pos:start="137:44" pos:end="137:53">nb_samples</name></name> <operator pos:start="137:55" pos:end="137:56">==</operator> <name pos:start="137:58" pos:end="137:70"><name pos:start="137:58" pos:end="137:61">pool</name><operator pos:start="137:62" pos:end="137:63">-&gt;</operator><name pos:start="137:64" pos:end="137:70">samples</name></name></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:21"><block_content pos:start="139:13" pos:end="139:21">

            <return pos:start="139:13" pos:end="139:21">return <expr pos:start="139:20" pos:end="139:20"><literal type="number" pos:start="139:20" pos:end="139:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:47"><expr pos:start="143:9" pos:end="143:46"><call pos:start="143:9" pos:end="143:46"><name pos:start="143:9" pos:end="143:29">av_buffer_pool_uninit</name><argument_list pos:start="143:30" pos:end="143:46">(<argument pos:start="143:31" pos:end="143:45"><expr pos:start="143:31" pos:end="143:45"><operator pos:start="143:31" pos:end="143:31">&amp;</operator><name pos:start="143:32" pos:end="143:45"><name pos:start="143:32" pos:end="143:35">pool</name><operator pos:start="143:36" pos:end="143:37">-&gt;</operator><name pos:start="143:38" pos:end="143:42">pools</name><index pos:start="143:43" pos:end="143:45">[<expr pos:start="143:44" pos:end="143:44"><literal type="number" pos:start="143:44" pos:end="143:44">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="147:78"><expr pos:start="145:9" pos:end="147:77"><name pos:start="145:9" pos:end="145:11">ret</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <call pos:start="145:15" pos:end="147:77"><name pos:start="145:15" pos:end="145:40">av_samples_get_buffer_size</name><argument_list pos:start="145:41" pos:end="147:77">(<argument pos:start="145:42" pos:end="145:59"><expr pos:start="145:42" pos:end="145:59"><operator pos:start="145:42" pos:end="145:42">&amp;</operator><name pos:start="145:43" pos:end="145:59"><name pos:start="145:43" pos:end="145:46">pool</name><operator pos:start="145:47" pos:end="145:48">-&gt;</operator><name pos:start="145:49" pos:end="145:56">linesize</name><index pos:start="145:57" pos:end="145:59">[<expr pos:start="145:58" pos:end="145:58"><literal type="number" pos:start="145:58" pos:end="145:58">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="145:62" pos:end="145:63"><expr pos:start="145:62" pos:end="145:63"><name pos:start="145:62" pos:end="145:63">ch</name></expr></argument>,

                                         <argument pos:start="147:42" pos:end="147:58"><expr pos:start="147:42" pos:end="147:58"><name pos:start="147:42" pos:end="147:58"><name pos:start="147:42" pos:end="147:46">frame</name><operator pos:start="147:47" pos:end="147:48">-&gt;</operator><name pos:start="147:49" pos:end="147:58">nb_samples</name></name></expr></argument>, <argument pos:start="147:61" pos:end="147:73"><expr pos:start="147:61" pos:end="147:73"><name pos:start="147:61" pos:end="147:73"><name pos:start="147:61" pos:end="147:65">frame</name><operator pos:start="147:66" pos:end="147:67">-&gt;</operator><name pos:start="147:68" pos:end="147:73">format</name></name></expr></argument>, <argument pos:start="147:76" pos:end="147:76"><expr pos:start="147:76" pos:end="147:76"><literal type="number" pos:start="147:76" pos:end="147:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="151:22"><if pos:start="149:9" pos:end="151:22">if <condition pos:start="149:12" pos:end="149:20">(<expr pos:start="149:13" pos:end="149:19"><name pos:start="149:13" pos:end="149:15">ret</name> <operator pos:start="149:17" pos:end="149:17">&lt;</operator> <literal type="number" pos:start="149:19" pos:end="149:19">0</literal></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:22"><block_content pos:start="151:13" pos:end="151:22">

            <goto pos:start="151:13" pos:end="151:22">goto <name pos:start="151:18" pos:end="151:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="155:9" pos:end="155:70"><expr pos:start="155:9" pos:end="155:69"><name pos:start="155:9" pos:end="155:22"><name pos:start="155:9" pos:end="155:12">pool</name><operator pos:start="155:13" pos:end="155:14">-&gt;</operator><name pos:start="155:15" pos:end="155:19">pools</name><index pos:start="155:20" pos:end="155:22">[<expr pos:start="155:21" pos:end="155:21"><literal type="number" pos:start="155:21" pos:end="155:21">0</literal></expr>]</index></name> <operator pos:start="155:24" pos:end="155:24">=</operator> <call pos:start="155:26" pos:end="155:69"><name pos:start="155:26" pos:end="155:44">av_buffer_pool_init</name><argument_list pos:start="155:45" pos:end="155:69">(<argument pos:start="155:46" pos:end="155:62"><expr pos:start="155:46" pos:end="155:62"><name pos:start="155:46" pos:end="155:62"><name pos:start="155:46" pos:end="155:49">pool</name><operator pos:start="155:50" pos:end="155:51">-&gt;</operator><name pos:start="155:52" pos:end="155:59">linesize</name><index pos:start="155:60" pos:end="155:62">[<expr pos:start="155:61" pos:end="155:61"><literal type="number" pos:start="155:61" pos:end="155:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="155:65" pos:end="155:68"><expr pos:start="155:65" pos:end="155:68"><name pos:start="155:65" pos:end="155:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="163:9"><if pos:start="157:9" pos:end="163:9">if <condition pos:start="157:12" pos:end="157:28">(<expr pos:start="157:13" pos:end="157:27"><operator pos:start="157:13" pos:end="157:13">!</operator><name pos:start="157:14" pos:end="157:27"><name pos:start="157:14" pos:end="157:17">pool</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:24">pools</name><index pos:start="157:25" pos:end="157:27">[<expr pos:start="157:26" pos:end="157:26"><literal type="number" pos:start="157:26" pos:end="157:26">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="157:30" pos:end="163:9">{<block_content pos:start="159:13" pos:end="161:22">

            <expr_stmt pos:start="159:13" pos:end="159:34"><expr pos:start="159:13" pos:end="159:33"><name pos:start="159:13" pos:end="159:15">ret</name> <operator pos:start="159:17" pos:end="159:17">=</operator> <call pos:start="159:19" pos:end="159:33"><name pos:start="159:19" pos:end="159:25">AVERROR</name><argument_list pos:start="159:26" pos:end="159:33">(<argument pos:start="159:27" pos:end="159:32"><expr pos:start="159:27" pos:end="159:32"><name pos:start="159:27" pos:end="159:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="161:13" pos:end="161:22">goto <name pos:start="161:18" pos:end="161:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:41"><expr pos:start="167:9" pos:end="167:40"><name pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:12">pool</name><operator pos:start="167:13" pos:end="167:14">-&gt;</operator><name pos:start="167:15" pos:end="167:20">format</name></name>     <operator pos:start="167:26" pos:end="167:26">=</operator> <name pos:start="167:28" pos:end="167:40"><name pos:start="167:28" pos:end="167:32">frame</name><operator pos:start="167:33" pos:end="167:34">-&gt;</operator><name pos:start="167:35" pos:end="167:40">format</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:34"><expr pos:start="169:9" pos:end="169:33"><name pos:start="169:9" pos:end="169:20"><name pos:start="169:9" pos:end="169:12">pool</name><operator pos:start="169:13" pos:end="169:14">-&gt;</operator><name pos:start="169:15" pos:end="169:20">planes</name></name>     <operator pos:start="169:26" pos:end="169:26">=</operator> <name pos:start="169:28" pos:end="169:33">planes</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:30"><expr pos:start="171:9" pos:end="171:29"><name pos:start="171:9" pos:end="171:22"><name pos:start="171:9" pos:end="171:12">pool</name><operator pos:start="171:13" pos:end="171:14">-&gt;</operator><name pos:start="171:15" pos:end="171:22">channels</name></name>   <operator pos:start="171:26" pos:end="171:26">=</operator> <name pos:start="171:28" pos:end="171:29">ch</name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:42"><expr pos:start="173:9" pos:end="173:41"><name pos:start="173:9" pos:end="173:21"><name pos:start="173:9" pos:end="173:12">pool</name><operator pos:start="173:13" pos:end="173:14">-&gt;</operator><name pos:start="173:15" pos:end="173:21">samples</name></name> <operator pos:start="173:23" pos:end="173:23">=</operator> <name pos:start="173:25" pos:end="173:41"><name pos:start="173:25" pos:end="173:29">frame</name><operator pos:start="173:30" pos:end="173:31">-&gt;</operator><name pos:start="173:32" pos:end="173:41">nb_samples</name></name></expr>;</expr_stmt>

        <break pos:start="175:9" pos:end="175:14">break;</break>

        </block_content>}</block>

    <default pos:start="179:5" pos:end="179:12">default:</default> <expr_stmt pos:start="179:14" pos:end="179:27"><expr pos:start="179:14" pos:end="179:26"><call pos:start="179:14" pos:end="179:26"><name pos:start="179:14" pos:end="179:23">av_assert0</name><argument_list pos:start="179:24" pos:end="179:26">(<argument pos:start="179:25" pos:end="179:25"><expr pos:start="179:25" pos:end="179:25"><literal type="number" pos:start="179:25" pos:end="179:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <return pos:start="183:5" pos:end="183:13">return <expr pos:start="183:12" pos:end="183:12"><literal type="number" pos:start="183:12" pos:end="183:12">0</literal></expr>;</return>

<label pos:start="185:1" pos:end="185:5"><name pos:start="185:1" pos:end="185:4">fail</name>:</label>

    <for pos:start="187:5" pos:end="189:47">for <control pos:start="187:9" pos:end="187:27">(<init pos:start="187:10" pos:end="187:15"><expr pos:start="187:10" pos:end="187:14"><name pos:start="187:10" pos:end="187:10">i</name> <operator pos:start="187:12" pos:end="187:12">=</operator> <literal type="number" pos:start="187:14" pos:end="187:14">0</literal></expr>;</init> <condition pos:start="187:17" pos:end="187:22"><expr pos:start="187:17" pos:end="187:21"><name pos:start="187:17" pos:end="187:17">i</name> <operator pos:start="187:19" pos:end="187:19">&lt;</operator> <literal type="number" pos:start="187:21" pos:end="187:21">4</literal></expr>;</condition> <incr pos:start="187:24" pos:end="187:26"><expr pos:start="187:24" pos:end="187:26"><name pos:start="187:24" pos:end="187:24">i</name><operator pos:start="187:25" pos:end="187:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="189:9" pos:end="189:47"><block_content pos:start="189:9" pos:end="189:47">

        <expr_stmt pos:start="189:9" pos:end="189:47"><expr pos:start="189:9" pos:end="189:46"><call pos:start="189:9" pos:end="189:46"><name pos:start="189:9" pos:end="189:29">av_buffer_pool_uninit</name><argument_list pos:start="189:30" pos:end="189:46">(<argument pos:start="189:31" pos:end="189:45"><expr pos:start="189:31" pos:end="189:45"><operator pos:start="189:31" pos:end="189:31">&amp;</operator><name pos:start="189:32" pos:end="189:45"><name pos:start="189:32" pos:end="189:35">pool</name><operator pos:start="189:36" pos:end="189:37">-&gt;</operator><name pos:start="189:38" pos:end="189:42">pools</name><index pos:start="189:43" pos:end="189:45">[<expr pos:start="189:44" pos:end="189:44"><name pos:start="189:44" pos:end="189:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="191:5" pos:end="191:22"><expr pos:start="191:5" pos:end="191:21"><name pos:start="191:5" pos:end="191:16"><name pos:start="191:5" pos:end="191:8">pool</name><operator pos:start="191:9" pos:end="191:10">-&gt;</operator><name pos:start="191:11" pos:end="191:16">format</name></name> <operator pos:start="191:18" pos:end="191:18">=</operator> <operator pos:start="191:20" pos:end="191:20">-</operator><literal type="number" pos:start="191:21" pos:end="191:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:54"><expr pos:start="193:5" pos:end="193:53"><name pos:start="193:5" pos:end="193:16"><name pos:start="193:5" pos:end="193:8">pool</name><operator pos:start="193:9" pos:end="193:10">-&gt;</operator><name pos:start="193:11" pos:end="193:16">planes</name></name> <operator pos:start="193:18" pos:end="193:18">=</operator> <name pos:start="193:20" pos:end="193:33"><name pos:start="193:20" pos:end="193:23">pool</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:33">channels</name></name> <operator pos:start="193:35" pos:end="193:35">=</operator> <name pos:start="193:37" pos:end="193:49"><name pos:start="193:37" pos:end="193:40">pool</name><operator pos:start="193:41" pos:end="193:42">-&gt;</operator><name pos:start="193:43" pos:end="193:49">samples</name></name> <operator pos:start="193:51" pos:end="193:51">=</operator> <literal type="number" pos:start="193:53" pos:end="193:53">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:36"><expr pos:start="195:5" pos:end="195:35"><name pos:start="195:5" pos:end="195:15"><name pos:start="195:5" pos:end="195:8">pool</name><operator pos:start="195:9" pos:end="195:10">-&gt;</operator><name pos:start="195:11" pos:end="195:15">width</name></name>  <operator pos:start="195:18" pos:end="195:18">=</operator> <name pos:start="195:20" pos:end="195:31"><name pos:start="195:20" pos:end="195:23">pool</name><operator pos:start="195:24" pos:end="195:25">-&gt;</operator><name pos:start="195:26" pos:end="195:31">height</name></name> <operator pos:start="195:33" pos:end="195:33">=</operator> <literal type="number" pos:start="195:35" pos:end="195:35">0</literal></expr>;</expr_stmt>

    <return pos:start="197:5" pos:end="197:15">return <expr pos:start="197:12" pos:end="197:14"><name pos:start="197:12" pos:end="197:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
