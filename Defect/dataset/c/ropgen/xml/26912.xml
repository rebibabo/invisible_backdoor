<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26912.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:41">vhost_client_sync_dirty_bitmap</name><parameter_list pos:start="1:42" pos:end="5:70">(<parameter pos:start="1:43" pos:end="1:69"><decl pos:start="1:43" pos:end="1:69"><type pos:start="1:43" pos:end="1:69"><name pos:start="1:43" pos:end="1:61">CPUPhysMemoryClient</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:69">client</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:71"><decl pos:start="3:43" pos:end="3:71"><type pos:start="3:43" pos:end="3:71"><name pos:start="3:43" pos:end="3:60">target_phys_addr_t</name></type> <name pos:start="3:62" pos:end="3:71">start_addr</name></decl></parameter>,

                                          <parameter pos:start="5:43" pos:end="5:69"><decl pos:start="5:43" pos:end="5:69"><type pos:start="5:43" pos:end="5:69"><name pos:start="5:43" pos:end="5:60">target_phys_addr_t</name></type> <name pos:start="5:62" pos:end="5:69">end_addr</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="45:1">{<block_content pos:start="9:5" pos:end="43:13">

    <decl_stmt pos:start="9:5" pos:end="9:75"><decl pos:start="9:5" pos:end="9:74"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:20">vhost_dev</name></name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:25">dev</name> <init pos:start="9:27" pos:end="9:74">= <expr pos:start="9:29" pos:end="9:74"><call pos:start="9:29" pos:end="9:74"><name pos:start="9:29" pos:end="9:40">container_of</name><argument_list pos:start="9:41" pos:end="9:74">(<argument pos:start="9:42" pos:end="9:47"><expr pos:start="9:42" pos:end="9:47"><name pos:start="9:42" pos:end="9:47">client</name></expr></argument>, <argument pos:start="9:50" pos:end="9:65"><expr pos:start="9:50" pos:end="9:65">struct <name pos:start="9:57" pos:end="9:65">vhost_dev</name></expr></argument>, <argument pos:start="9:68" pos:end="9:73"><expr pos:start="9:68" pos:end="9:73"><name pos:start="9:68" pos:end="9:73">client</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:43">(<expr pos:start="13:9" pos:end="13:42"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:25"><name pos:start="13:10" pos:end="13:12">dev</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:25">log_enabled</name></name> <operator pos:start="13:27" pos:end="13:28">||</operator> <operator pos:start="13:30" pos:end="13:30">!</operator><name pos:start="13:31" pos:end="13:42"><name pos:start="13:31" pos:end="13:33">dev</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:42">started</name></name></expr>)</condition> <block pos:start="13:45" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="19:5" pos:end="31:5">for <control pos:start="19:9" pos:end="19:44">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:39"><expr pos:start="19:17" pos:end="19:38"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:38"><name pos:start="19:21" pos:end="19:23">dev</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:28">mem</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:38">nregions</name></name></expr>;</condition> <incr pos:start="19:41" pos:end="19:43"><expr pos:start="19:41" pos:end="19:43"><operator pos:start="19:41" pos:end="19:42">++</operator><name pos:start="19:43" pos:end="19:43">i</name></expr></incr>)</control> <block pos:start="19:46" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:64">

        <decl_stmt pos:start="21:9" pos:end="21:64"><decl pos:start="21:9" pos:end="21:63"><type pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:14">struct</name> <name pos:start="21:16" pos:end="21:34">vhost_memory_region</name></name> <modifier pos:start="21:36" pos:end="21:36">*</modifier></type><name pos:start="21:37" pos:end="21:39">reg</name> <init pos:start="21:41" pos:end="21:63">= <expr pos:start="21:43" pos:end="21:63"><name pos:start="21:43" pos:end="21:59"><name pos:start="21:43" pos:end="21:45">dev</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:50">mem</name><operator pos:start="21:51" pos:end="21:52">-&gt;</operator><name pos:start="21:53" pos:end="21:59">regions</name></name> <operator pos:start="21:61" pos:end="21:61">+</operator> <name pos:start="21:63" pos:end="21:63">i</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="23:9" pos:end="29:64"><expr pos:start="23:9" pos:end="29:63"><call pos:start="23:9" pos:end="29:63"><name pos:start="23:9" pos:end="23:29">vhost_dev_sync_region</name><argument_list pos:start="23:30" pos:end="29:63">(<argument pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:33">dev</name></expr></argument>, <argument pos:start="23:36" pos:end="23:45"><expr pos:start="23:36" pos:end="23:45"><name pos:start="23:36" pos:end="23:45">start_addr</name></expr></argument>, <argument pos:start="23:48" pos:end="23:55"><expr pos:start="23:48" pos:end="23:55"><name pos:start="23:48" pos:end="23:55">end_addr</name></expr></argument>,

                              <argument pos:start="25:31" pos:end="25:50"><expr pos:start="25:31" pos:end="25:50"><name pos:start="25:31" pos:end="25:50"><name pos:start="25:31" pos:end="25:33">reg</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:50">guest_phys_addr</name></name></expr></argument>,

                              <argument pos:start="27:31" pos:end="29:62"><expr pos:start="27:31" pos:end="29:62"><call pos:start="27:31" pos:end="29:62"><name pos:start="27:31" pos:end="27:44">range_get_last</name><argument_list pos:start="27:45" pos:end="29:62">(<argument pos:start="27:46" pos:end="27:65"><expr pos:start="27:46" pos:end="27:65"><name pos:start="27:46" pos:end="27:65"><name pos:start="27:46" pos:end="27:48">reg</name><operator pos:start="27:49" pos:end="27:50">-&gt;</operator><name pos:start="27:51" pos:end="27:65">guest_phys_addr</name></name></expr></argument>,

                                             <argument pos:start="29:46" pos:end="29:61"><expr pos:start="29:46" pos:end="29:61"><name pos:start="29:46" pos:end="29:61"><name pos:start="29:46" pos:end="29:48">reg</name><operator pos:start="29:49" pos:end="29:50">-&gt;</operator><name pos:start="29:51" pos:end="29:61">memory_size</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="33:5" pos:end="41:5">for <control pos:start="33:9" pos:end="33:35">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:30"><expr pos:start="33:17" pos:end="33:29"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:29"><name pos:start="33:21" pos:end="33:23">dev</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:29">nvqs</name></name></expr>;</condition> <incr pos:start="33:32" pos:end="33:34"><expr pos:start="33:32" pos:end="33:34"><operator pos:start="33:32" pos:end="33:33">++</operator><name pos:start="33:34" pos:end="33:34">i</name></expr></incr>)</control> <block pos:start="33:37" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:76">

        <decl_stmt pos:start="35:9" pos:end="35:50"><decl pos:start="35:9" pos:end="35:49"><type pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:14">struct</name> <name pos:start="35:16" pos:end="35:30">vhost_virtqueue</name></name> <modifier pos:start="35:32" pos:end="35:32">*</modifier></type><name pos:start="35:33" pos:end="35:34">vq</name> <init pos:start="35:36" pos:end="35:49">= <expr pos:start="35:38" pos:end="35:49"><name pos:start="35:38" pos:end="35:45"><name pos:start="35:38" pos:end="35:40">dev</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:45">vqs</name></name> <operator pos:start="35:47" pos:end="35:47">+</operator> <name pos:start="35:49" pos:end="35:49">i</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="37:9" pos:end="39:76"><expr pos:start="37:9" pos:end="39:75"><call pos:start="37:9" pos:end="39:75"><name pos:start="37:9" pos:end="37:29">vhost_dev_sync_region</name><argument_list pos:start="37:30" pos:end="39:75">(<argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">dev</name></expr></argument>, <argument pos:start="37:36" pos:end="37:45"><expr pos:start="37:36" pos:end="37:45"><name pos:start="37:36" pos:end="37:45">start_addr</name></expr></argument>, <argument pos:start="37:48" pos:end="37:55"><expr pos:start="37:48" pos:end="37:55"><name pos:start="37:48" pos:end="37:55">end_addr</name></expr></argument>, <argument pos:start="37:58" pos:end="37:70"><expr pos:start="37:58" pos:end="37:70"><name pos:start="37:58" pos:end="37:70"><name pos:start="37:58" pos:end="37:59">vq</name><operator pos:start="37:60" pos:end="37:61">-&gt;</operator><name pos:start="37:62" pos:end="37:70">used_phys</name></name></expr></argument>,

                              <argument pos:start="39:31" pos:end="39:74"><expr pos:start="39:31" pos:end="39:74"><call pos:start="39:31" pos:end="39:74"><name pos:start="39:31" pos:end="39:44">range_get_last</name><argument_list pos:start="39:45" pos:end="39:74">(<argument pos:start="39:46" pos:end="39:58"><expr pos:start="39:46" pos:end="39:58"><name pos:start="39:46" pos:end="39:58"><name pos:start="39:46" pos:end="39:47">vq</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:58">used_phys</name></name></expr></argument>, <argument pos:start="39:61" pos:end="39:73"><expr pos:start="39:61" pos:end="39:73"><name pos:start="39:61" pos:end="39:73"><name pos:start="39:61" pos:end="39:62">vq</name><operator pos:start="39:63" pos:end="39:64">-&gt;</operator><name pos:start="39:65" pos:end="39:73">used_size</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
