<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7652.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">metadata_parse</name><parameter_list pos:start="1:26" pos:end="1:41">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:37">FLACContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:24">metadata_last</name></decl>, <decl pos:start="5:27" pos:end="5:39"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:27" pos:end="5:39">metadata_type</name></decl>, <decl pos:start="5:42" pos:end="5:54"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:42" pos:end="5:54">metadata_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">initial_pos</name><init pos:start="7:20" pos:end="7:43">= <expr pos:start="7:22" pos:end="7:43"><call pos:start="7:22" pos:end="7:43"><name pos:start="7:22" pos:end="7:35">get_bits_count</name><argument_list pos:start="7:36" pos:end="7:43">(<argument pos:start="7:37" pos:end="7:42"><expr pos:start="7:37" pos:end="7:42"><operator pos:start="7:37" pos:end="7:37">&amp;</operator><name pos:start="7:38" pos:end="7:42"><name pos:start="7:38" pos:end="7:38">s</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:42">gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="71:5"><if pos:start="11:5" pos:end="71:5">if <condition pos:start="11:8" pos:end="11:63">(<expr pos:start="11:9" pos:end="11:62"><call pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:22">show_bits_long</name><argument_list pos:start="11:23" pos:end="11:34">(<argument pos:start="11:24" pos:end="11:29"><expr pos:start="11:24" pos:end="11:29"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:29"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:29">gb</name></name></expr></argument>, <argument pos:start="11:32" pos:end="11:33"><expr pos:start="11:32" pos:end="11:33"><literal type="number" pos:start="11:32" pos:end="11:33">32</literal></expr></argument>)</argument_list></call> <operator pos:start="11:36" pos:end="11:37">==</operator> <call pos:start="11:39" pos:end="11:62"><name pos:start="11:39" pos:end="11:45">MKBETAG</name><argument_list pos:start="11:46" pos:end="11:62">(<argument pos:start="11:47" pos:end="11:49"><expr pos:start="11:47" pos:end="11:49"><literal type="char" pos:start="11:47" pos:end="11:49">'f'</literal></expr></argument>,<argument pos:start="11:51" pos:end="11:53"><expr pos:start="11:51" pos:end="11:53"><literal type="char" pos:start="11:51" pos:end="11:53">'L'</literal></expr></argument>,<argument pos:start="11:55" pos:end="11:57"><expr pos:start="11:55" pos:end="11:57"><literal type="char" pos:start="11:55" pos:end="11:57">'a'</literal></expr></argument>,<argument pos:start="11:59" pos:end="11:61"><expr pos:start="11:59" pos:end="11:61"><literal type="char" pos:start="11:59" pos:end="11:61">'C'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:65" pos:end="71:5">{<block_content pos:start="13:9" pos:end="69:17">

        <expr_stmt pos:start="13:9" pos:end="13:35"><expr pos:start="13:9" pos:end="13:34"><call pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:22">skip_bits_long</name><argument_list pos:start="13:23" pos:end="13:34">(<argument pos:start="13:24" pos:end="13:29"><expr pos:start="13:24" pos:end="13:29"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:29"><name pos:start="13:25" pos:end="13:25">s</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:29">gb</name></name></expr></argument>, <argument pos:start="13:32" pos:end="13:33"><expr pos:start="13:32" pos:end="13:33"><literal type="number" pos:start="13:32" pos:end="13:33">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <do pos:start="17:9" pos:end="65:33">do <block pos:start="17:12" pos:end="65:9">{<block_content pos:start="19:13" pos:end="63:13">

            <expr_stmt pos:start="19:13" pos:end="19:46"><expr pos:start="19:13" pos:end="19:45"><name pos:start="19:13" pos:end="19:25">metadata_last</name> <operator pos:start="19:27" pos:end="19:27">=</operator> <call pos:start="19:29" pos:end="19:45"><name pos:start="19:29" pos:end="19:37">get_bits1</name><argument_list pos:start="19:38" pos:end="19:45">(<argument pos:start="19:39" pos:end="19:44"><expr pos:start="19:39" pos:end="19:44"><operator pos:start="19:39" pos:end="19:39">&amp;</operator><name pos:start="19:40" pos:end="19:44"><name pos:start="19:40" pos:end="19:40">s</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:44">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:48"><expr pos:start="21:13" pos:end="21:47"><name pos:start="21:13" pos:end="21:25">metadata_type</name> <operator pos:start="21:27" pos:end="21:27">=</operator> <call pos:start="21:29" pos:end="21:47"><name pos:start="21:29" pos:end="21:36">get_bits</name><argument_list pos:start="21:37" pos:end="21:47">(<argument pos:start="21:38" pos:end="21:43"><expr pos:start="21:38" pos:end="21:43"><operator pos:start="21:38" pos:end="21:38">&amp;</operator><name pos:start="21:39" pos:end="21:43"><name pos:start="21:39" pos:end="21:39">s</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:43">gb</name></name></expr></argument>, <argument pos:start="21:46" pos:end="21:46"><expr pos:start="21:46" pos:end="21:46"><literal type="number" pos:start="21:46" pos:end="21:46">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:54"><expr pos:start="23:13" pos:end="23:53"><name pos:start="23:13" pos:end="23:25">metadata_size</name> <operator pos:start="23:27" pos:end="23:27">=</operator> <call pos:start="23:29" pos:end="23:53"><name pos:start="23:29" pos:end="23:41">get_bits_long</name><argument_list pos:start="23:42" pos:end="23:53">(<argument pos:start="23:43" pos:end="23:48"><expr pos:start="23:43" pos:end="23:48"><operator pos:start="23:43" pos:end="23:43">&amp;</operator><name pos:start="23:44" pos:end="23:48"><name pos:start="23:44" pos:end="23:44">s</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:48">gb</name></name></expr></argument>, <argument pos:start="23:51" pos:end="23:52"><expr pos:start="23:51" pos:end="23:52"><literal type="number" pos:start="23:51" pos:end="23:52">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="27:13" pos:end="33:13"><if pos:start="27:13" pos:end="33:13">if <condition pos:start="27:16" pos:end="27:78">(<expr pos:start="27:17" pos:end="27:77"><call pos:start="27:17" pos:end="27:38"><name pos:start="27:17" pos:end="27:30">get_bits_count</name><argument_list pos:start="27:31" pos:end="27:38">(<argument pos:start="27:32" pos:end="27:37"><expr pos:start="27:32" pos:end="27:37"><operator pos:start="27:32" pos:end="27:32">&amp;</operator><name pos:start="27:33" pos:end="27:37"><name pos:start="27:33" pos:end="27:33">s</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:37">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="27:40" pos:end="27:40">+</operator> <literal type="number" pos:start="27:42" pos:end="27:42">8</literal><operator pos:start="27:43" pos:end="27:43">*</operator><name pos:start="27:44" pos:end="27:56">metadata_size</name> <operator pos:start="27:58" pos:end="27:58">&gt;</operator> <name pos:start="27:60" pos:end="27:77"><name pos:start="27:60" pos:end="27:60">s</name><operator pos:start="27:61" pos:end="27:62">-&gt;</operator><name pos:start="27:63" pos:end="27:64">gb</name><operator pos:start="27:65" pos:end="27:65">.</operator><name pos:start="27:66" pos:end="27:77">size_in_bits</name></name></expr>)</condition> <block pos:start="27:80" pos:end="33:13">{<block_content pos:start="29:17" pos:end="31:22">

                <expr_stmt pos:start="29:17" pos:end="29:77"><expr pos:start="29:17" pos:end="29:76"><call pos:start="29:17" pos:end="29:76"><name pos:start="29:17" pos:end="29:30">skip_bits_long</name><argument_list pos:start="29:31" pos:end="29:76">(<argument pos:start="29:32" pos:end="29:37"><expr pos:start="29:32" pos:end="29:37"><operator pos:start="29:32" pos:end="29:32">&amp;</operator><name pos:start="29:33" pos:end="29:37"><name pos:start="29:33" pos:end="29:33">s</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:37">gb</name></name></expr></argument>, <argument pos:start="29:40" pos:end="29:75"><expr pos:start="29:40" pos:end="29:75"><name pos:start="29:40" pos:end="29:50">initial_pos</name> <operator pos:start="29:52" pos:end="29:52">-</operator> <call pos:start="29:54" pos:end="29:75"><name pos:start="29:54" pos:end="29:67">get_bits_count</name><argument_list pos:start="29:68" pos:end="29:75">(<argument pos:start="29:69" pos:end="29:74"><expr pos:start="29:69" pos:end="29:74"><operator pos:start="29:69" pos:end="29:69">&amp;</operator><name pos:start="29:70" pos:end="29:74"><name pos:start="29:70" pos:end="29:70">s</name><operator pos:start="29:71" pos:end="29:72">-&gt;</operator><name pos:start="29:73" pos:end="29:74">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="31:17" pos:end="31:22">break;</break>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="37:13" pos:end="63:13"><if pos:start="37:13" pos:end="63:13">if <condition pos:start="37:16" pos:end="37:30">(<expr pos:start="37:17" pos:end="37:29"><name pos:start="37:17" pos:end="37:29">metadata_size</name></expr>)</condition> <block pos:start="37:32" pos:end="63:13">{<block_content pos:start="39:17" pos:end="61:17">

                <switch pos:start="39:17" pos:end="61:17">switch <condition pos:start="39:24" pos:end="39:38">(<expr pos:start="39:25" pos:end="39:37"><name pos:start="39:25" pos:end="39:37">metadata_type</name></expr>)</condition> <block pos:start="39:40" pos:end="61:17">{<block_content pos:start="41:17" pos:end="59:45">

                <case pos:start="41:17" pos:end="41:51">case <expr pos:start="41:22" pos:end="41:50"><name pos:start="41:22" pos:end="41:50">FLAC_METADATA_TYPE_STREAMINFO</name></expr>:</case>

                    <if_stmt pos:start="43:21" pos:end="53:21"><if pos:start="43:21" pos:end="53:21">if <condition pos:start="43:24" pos:end="43:43">(<expr pos:start="43:25" pos:end="43:42"><operator pos:start="43:25" pos:end="43:25">!</operator><name pos:start="43:26" pos:end="43:42"><name pos:start="43:26" pos:end="43:26">s</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:42">got_streaminfo</name></name></expr>)</condition> <block pos:start="43:45" pos:end="53:21">{<block_content pos:start="45:25" pos:end="51:46">

                        <expr_stmt pos:start="45:25" pos:end="47:88"><expr pos:start="45:25" pos:end="47:87"><call pos:start="45:25" pos:end="47:87"><name pos:start="45:25" pos:end="45:48">ff_flac_parse_streaminfo</name><argument_list pos:start="45:49" pos:end="47:87">(<argument pos:start="45:50" pos:end="45:57"><expr pos:start="45:50" pos:end="45:57"><name pos:start="45:50" pos:end="45:57"><name pos:start="45:50" pos:end="45:50">s</name><operator pos:start="45:51" pos:end="45:52">-&gt;</operator><name pos:start="45:53" pos:end="45:57">avctx</name></name></expr></argument>, <argument pos:start="45:60" pos:end="45:78"><expr pos:start="45:60" pos:end="45:78"><operator pos:start="45:60" pos:end="45:60">(</operator><name pos:start="45:61" pos:end="45:74">FLACStreaminfo</name> <operator pos:start="45:76" pos:end="45:76">*</operator><operator pos:start="45:77" pos:end="45:77">)</operator><name pos:start="45:78" pos:end="45:78">s</name></expr></argument>,

                                                 <argument pos:start="47:50" pos:end="47:86"><expr pos:start="47:50" pos:end="47:86"><name pos:start="47:50" pos:end="47:61"><name pos:start="47:50" pos:end="47:50">s</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:54">gb</name><operator pos:start="47:55" pos:end="47:55">.</operator><name pos:start="47:56" pos:end="47:61">buffer</name></name><operator pos:start="47:62" pos:end="47:62">+</operator><call pos:start="47:63" pos:end="47:84"><name pos:start="47:63" pos:end="47:76">get_bits_count</name><argument_list pos:start="47:77" pos:end="47:84">(<argument pos:start="47:78" pos:end="47:83"><expr pos:start="47:78" pos:end="47:83"><operator pos:start="47:78" pos:end="47:78">&amp;</operator><name pos:start="47:79" pos:end="47:83"><name pos:start="47:79" pos:end="47:79">s</name><operator pos:start="47:80" pos:end="47:81">-&gt;</operator><name pos:start="47:82" pos:end="47:83">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="47:85" pos:end="47:85">/</operator><literal type="number" pos:start="47:86" pos:end="47:86">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="49:25" pos:end="49:44"><expr pos:start="49:25" pos:end="49:43"><call pos:start="49:25" pos:end="49:43"><name pos:start="49:25" pos:end="49:40">allocate_buffers</name><argument_list pos:start="49:41" pos:end="49:43">(<argument pos:start="49:42" pos:end="49:42"><expr pos:start="49:42" pos:end="49:42"><name pos:start="49:42" pos:end="49:42">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="51:25" pos:end="51:46"><expr pos:start="51:25" pos:end="51:45"><name pos:start="51:25" pos:end="51:41"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:41">got_streaminfo</name></name> <operator pos:start="51:43" pos:end="51:43">=</operator> <literal type="number" pos:start="51:45" pos:end="51:45">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                <default pos:start="55:17" pos:end="55:24">default:</default>

                    <for pos:start="57:21" pos:end="59:45">for <control pos:start="57:25" pos:end="57:55">(<init pos:start="57:26" pos:end="57:31"><expr pos:start="57:26" pos:end="57:30"><name pos:start="57:26" pos:end="57:26">i</name> <operator pos:start="57:28" pos:end="57:28">=</operator> <literal type="number" pos:start="57:30" pos:end="57:30">0</literal></expr>;</init> <condition pos:start="57:33" pos:end="57:50"><expr pos:start="57:33" pos:end="57:49"><name pos:start="57:33" pos:end="57:33">i</name> <operator pos:start="57:35" pos:end="57:35">&lt;</operator> <name pos:start="57:37" pos:end="57:49">metadata_size</name></expr>;</condition> <incr pos:start="57:52" pos:end="57:54"><expr pos:start="57:52" pos:end="57:54"><name pos:start="57:52" pos:end="57:52">i</name><operator pos:start="57:53" pos:end="57:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:25" pos:end="59:45"><block_content pos:start="59:25" pos:end="59:45">

                        <expr_stmt pos:start="59:25" pos:end="59:45"><expr pos:start="59:25" pos:end="59:44"><call pos:start="59:25" pos:end="59:44"><name pos:start="59:25" pos:end="59:33">skip_bits</name><argument_list pos:start="59:34" pos:end="59:44">(<argument pos:start="59:35" pos:end="59:40"><expr pos:start="59:35" pos:end="59:40"><operator pos:start="59:35" pos:end="59:35">&amp;</operator><name pos:start="59:36" pos:end="59:40"><name pos:start="59:36" pos:end="59:36">s</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:40">gb</name></name></expr></argument>, <argument pos:start="59:43" pos:end="59:43"><expr pos:start="59:43" pos:end="59:43"><literal type="number" pos:start="59:43" pos:end="59:43">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></switch>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block> while <condition pos:start="65:17" pos:end="65:32">(<expr pos:start="65:18" pos:end="65:31"><operator pos:start="65:18" pos:end="65:18">!</operator><name pos:start="65:19" pos:end="65:31">metadata_last</name></expr>)</condition>;</do>



        <return pos:start="69:9" pos:end="69:17">return <expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
