<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12248.c" pos:tabs="8"><function pos:start="1:1" pos:end="66:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:37">handle_aiocb_rw_linear</name><parameter_list pos:start="1:38" pos:end="1:72">(<parameter pos:start="1:39" pos:end="1:60"><decl pos:start="1:39" pos:end="1:60"><type pos:start="1:39" pos:end="1:60"><name pos:start="1:39" pos:end="1:53">RawPosixAIOData</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:60">aiocb</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:71"><decl pos:start="1:63" pos:end="1:71"><type pos:start="1:63" pos:end="1:71"><name pos:start="1:63" pos:end="1:66">char</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="66:1">{<block_content pos:start="5:5" pos:end="64:18">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">ssize_t</name></type> <name pos:start="5:13" pos:end="5:18">offset</name> <init pos:start="5:20" pos:end="5:22">= <expr pos:start="5:22" pos:end="5:22"><literal type="number" pos:start="5:22" pos:end="5:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">ssize_t</name></type> <name pos:start="7:13" pos:end="7:15">len</name></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="60:5">while <condition pos:start="11:11" pos:end="11:38">(<expr pos:start="11:12" pos:end="11:37"><name pos:start="11:12" pos:end="11:17">offset</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:37"><name pos:start="11:21" pos:end="11:25">aiocb</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:37">aio_nbytes</name></name></expr>)</condition> <block pos:start="11:40" pos:end="60:5">{<block_content pos:start="13:9" pos:end="58:22">

        <if_stmt pos:start="13:9" pos:end="33:9"><if pos:start="13:9" pos:end="23:9">if <condition pos:start="13:12" pos:end="13:45">(<expr pos:start="13:13" pos:end="13:44"><name pos:start="13:13" pos:end="13:27"><name pos:start="13:13" pos:end="13:17">aiocb</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:27">aio_type</name></name> <operator pos:start="13:29" pos:end="13:29">&amp;</operator> <name pos:start="13:31" pos:end="13:44">QEMU_AIO_WRITE</name></expr>)</condition> <block pos:start="13:47" pos:end="23:9">{<block_content pos:start="15:13" pos:end="21:53">

            <expr_stmt pos:start="15:13" pos:end="21:53"><expr pos:start="15:13" pos:end="21:52"><name pos:start="15:13" pos:end="15:15">len</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <call pos:start="15:19" pos:end="21:52"><name pos:start="15:19" pos:end="15:24">pwrite</name><argument_list pos:start="15:25" pos:end="21:52">(<argument pos:start="15:26" pos:end="15:42"><expr pos:start="15:26" pos:end="15:42"><name pos:start="15:26" pos:end="15:42"><name pos:start="15:26" pos:end="15:30">aiocb</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:42">aio_fildes</name></name></expr></argument>,

                         <argument pos:start="17:26" pos:end="17:51"><expr pos:start="17:26" pos:end="17:51"><operator pos:start="17:26" pos:end="17:26">(</operator><specifier pos:start="17:27" pos:end="17:31">const</specifier> <name pos:start="17:33" pos:end="17:36">char</name> <operator pos:start="17:38" pos:end="17:38">*</operator><operator pos:start="17:39" pos:end="17:39">)</operator><name pos:start="17:40" pos:end="17:42">buf</name> <operator pos:start="17:44" pos:end="17:44">+</operator> <name pos:start="17:46" pos:end="17:51">offset</name></expr></argument>,

                         <argument pos:start="19:26" pos:end="19:51"><expr pos:start="19:26" pos:end="19:51"><name pos:start="19:26" pos:end="19:42"><name pos:start="19:26" pos:end="19:30">aiocb</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:42">aio_nbytes</name></name> <operator pos:start="19:44" pos:end="19:44">-</operator> <name pos:start="19:46" pos:end="19:51">offset</name></expr></argument>,

                         <argument pos:start="21:26" pos:end="21:51"><expr pos:start="21:26" pos:end="21:51"><name pos:start="21:26" pos:end="21:42"><name pos:start="21:26" pos:end="21:30">aiocb</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:42">aio_offset</name></name> <operator pos:start="21:44" pos:end="21:44">+</operator> <name pos:start="21:46" pos:end="21:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="23:11" pos:end="33:9">else <block pos:start="23:16" pos:end="33:9">{<block_content pos:start="25:13" pos:end="31:52">

            <expr_stmt pos:start="25:13" pos:end="31:52"><expr pos:start="25:13" pos:end="31:51"><name pos:start="25:13" pos:end="25:15">len</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="31:51"><name pos:start="25:19" pos:end="25:23">pread</name><argument_list pos:start="25:24" pos:end="31:51">(<argument pos:start="25:25" pos:end="25:41"><expr pos:start="25:25" pos:end="25:41"><name pos:start="25:25" pos:end="25:41"><name pos:start="25:25" pos:end="25:29">aiocb</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:41">aio_fildes</name></name></expr></argument>,

                        <argument pos:start="27:25" pos:end="27:36"><expr pos:start="27:25" pos:end="27:36"><name pos:start="27:25" pos:end="27:27">buf</name> <operator pos:start="27:29" pos:end="27:29">+</operator> <name pos:start="27:31" pos:end="27:36">offset</name></expr></argument>,

                        <argument pos:start="29:25" pos:end="29:50"><expr pos:start="29:25" pos:end="29:50"><name pos:start="29:25" pos:end="29:41"><name pos:start="29:25" pos:end="29:29">aiocb</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:41">aio_nbytes</name></name> <operator pos:start="29:43" pos:end="29:43">-</operator> <name pos:start="29:45" pos:end="29:50">offset</name></expr></argument>,

                        <argument pos:start="31:25" pos:end="31:50"><expr pos:start="31:25" pos:end="31:50"><name pos:start="31:25" pos:end="31:41"><name pos:start="31:25" pos:end="31:29">aiocb</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:41">aio_offset</name></name> <operator pos:start="31:43" pos:end="31:43">+</operator> <name pos:start="31:45" pos:end="31:50">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="35:9" pos:end="56:9"><if pos:start="35:9" pos:end="48:9">if <condition pos:start="35:12" pos:end="35:40">(<expr pos:start="35:13" pos:end="35:39"><name pos:start="35:13" pos:end="35:15">len</name> <operator pos:start="35:17" pos:end="35:18">==</operator> <operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal> <operator pos:start="35:23" pos:end="35:24">&amp;&amp;</operator> <name pos:start="35:26" pos:end="35:30">errno</name> <operator pos:start="35:32" pos:end="35:33">==</operator> <name pos:start="35:35" pos:end="35:39">EINTR</name></expr>)</condition> <block pos:start="35:42" pos:end="48:9">{<block_content pos:start="37:13" pos:end="37:21">

            <continue pos:start="37:13" pos:end="37:21">continue;</continue>










        </block_content>}</block></if> <if type="elseif" pos:start="48:11" pos:end="53:9">else if <condition pos:start="48:19" pos:end="48:29">(<expr pos:start="48:20" pos:end="48:28"><name pos:start="48:20" pos:end="48:22">len</name> <operator pos:start="48:24" pos:end="48:25">==</operator> <operator pos:start="48:27" pos:end="48:27">-</operator><literal type="number" pos:start="48:28" pos:end="48:28">1</literal></expr>)</condition> <block pos:start="48:31" pos:end="53:9">{<block_content pos:start="50:13" pos:end="50:28">

            <expr_stmt pos:start="50:13" pos:end="50:28"><expr pos:start="50:13" pos:end="50:27"><name pos:start="50:13" pos:end="50:18">offset</name> <operator pos:start="50:20" pos:end="50:20">=</operator> <operator pos:start="50:22" pos:end="50:22">-</operator><name pos:start="50:23" pos:end="50:27">errno</name></expr>;</expr_stmt>


        </block_content>}</block></if> <if type="elseif" pos:start="53:11" pos:end="56:9">else if <condition pos:start="53:19" pos:end="53:28">(<expr pos:start="53:20" pos:end="53:27"><name pos:start="53:20" pos:end="53:22">len</name> <operator pos:start="53:24" pos:end="53:25">==</operator> <literal type="number" pos:start="53:27" pos:end="53:27">0</literal></expr>)</condition> <block pos:start="53:30" pos:end="56:9">{<block_content>


        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="58:9" pos:end="58:22"><expr pos:start="58:9" pos:end="58:21"><name pos:start="58:9" pos:end="58:14">offset</name> <operator pos:start="58:16" pos:end="58:17">+=</operator> <name pos:start="58:19" pos:end="58:21">len</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="64:5" pos:end="64:18">return <expr pos:start="64:12" pos:end="64:17"><name pos:start="64:12" pos:end="64:17">offset</name></expr>;</return>

</block_content>}</block></function></unit>
