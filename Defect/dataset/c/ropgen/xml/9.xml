<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">test_init</name><parameter_list pos:start="1:22" pos:end="1:34">(<parameter pos:start="1:23" pos:end="1:33"><decl pos:start="1:23" pos:end="1:33"><type pos:start="1:23" pos:end="1:32"><name pos:start="1:23" pos:end="1:30">TestData</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:71">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">QPCIBus</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">QTestState</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">qs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:11">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="17:49"><expr pos:start="13:5" pos:end="17:48"><name pos:start="13:5" pos:end="13:5">s</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="17:48"><name pos:start="13:9" pos:end="13:23">g_strdup_printf</name><argument_list pos:start="13:24" pos:end="17:48">(<argument pos:start="13:25" pos:end="13:44"><expr pos:start="13:25" pos:end="13:44"><literal type="string" pos:start="13:25" pos:end="13:44">"-machine q35 %s %s"</literal></expr></argument>,

                        <argument pos:start="15:25" pos:end="15:76"><expr pos:start="15:25" pos:end="15:76"><ternary pos:start="15:25" pos:end="15:76"><condition pos:start="15:25" pos:end="15:37"><expr pos:start="15:25" pos:end="15:35"><name pos:start="15:25" pos:end="15:35"><name pos:start="15:25" pos:end="15:25">d</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:35">noreboot</name></name></expr> ?</condition><then pos:start="15:39" pos:end="15:40"> <expr pos:start="15:39" pos:end="15:40"><literal type="string" pos:start="15:39" pos:end="15:40">""</literal></expr> </then><else pos:start="15:42" pos:end="15:76">: <expr pos:start="15:44" pos:end="15:76"><literal type="string" pos:start="15:44" pos:end="15:76">"-global ICH9-LPC.noreboot=false"</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="17:25" pos:end="17:47"><expr pos:start="17:25" pos:end="17:47"><ternary pos:start="17:25" pos:end="17:47"><condition pos:start="17:25" pos:end="17:34"><expr pos:start="17:25" pos:end="17:32"><operator pos:start="17:25" pos:end="17:25">!</operator><name pos:start="17:26" pos:end="17:32"><name pos:start="17:26" pos:end="17:26">d</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:32">args</name></name></expr> ?</condition><then pos:start="17:36" pos:end="17:37"> <expr pos:start="17:36" pos:end="17:37"><literal type="string" pos:start="17:36" pos:end="17:37">""</literal></expr> </then><else pos:start="17:39" pos:end="17:47">: <expr pos:start="17:41" pos:end="17:47"><name pos:start="17:41" pos:end="17:47"><name pos:start="17:41" pos:end="17:41">d</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:47">args</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:6">qs</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:23"><name pos:start="19:10" pos:end="19:20">qtest_start</name><argument_list pos:start="19:21" pos:end="19:23">(<argument pos:start="19:22" pos:end="19:22"><expr pos:start="19:22" pos:end="19:22"><name pos:start="19:22" pos:end="19:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><call pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:26">qtest_irq_intercept_in</name><argument_list pos:start="21:27" pos:end="21:40">(<argument pos:start="21:28" pos:end="21:29"><expr pos:start="21:28" pos:end="21:29"><name pos:start="21:28" pos:end="21:29">qs</name></expr></argument>, <argument pos:start="21:32" pos:end="21:39"><expr pos:start="21:32" pos:end="21:39"><literal type="string" pos:start="21:32" pos:end="21:39">"ioapic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:14"><expr pos:start="23:5" pos:end="23:13"><call pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:10">g_free</name><argument_list pos:start="23:11" pos:end="23:13">(<argument pos:start="23:12" pos:end="23:12"><expr pos:start="23:12" pos:end="23:12"><name pos:start="23:12" pos:end="23:12">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:7">bus</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:28"><name pos:start="27:11" pos:end="27:22">qpci_init_pc</name><argument_list pos:start="27:23" pos:end="27:28">(<argument pos:start="27:24" pos:end="27:27"><expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:59"><expr pos:start="29:5" pos:end="29:58"><name pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:5">d</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:10">dev</name></name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:58"><name pos:start="29:14" pos:end="29:29">qpci_device_find</name><argument_list pos:start="29:30" pos:end="29:58">(<argument pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:33">bus</name></expr></argument>, <argument pos:start="29:36" pos:end="29:57"><expr pos:start="29:36" pos:end="29:57"><call pos:start="29:36" pos:end="29:57"><name pos:start="29:36" pos:end="29:45">QPCI_DEVFN</name><argument_list pos:start="29:46" pos:end="29:57">(<argument pos:start="29:47" pos:end="29:50"><expr pos:start="29:47" pos:end="29:50"><literal type="number" pos:start="29:47" pos:end="29:50">0x1f</literal></expr></argument>, <argument pos:start="29:53" pos:end="29:56"><expr pos:start="29:53" pos:end="29:56"><literal type="number" pos:start="29:53" pos:end="29:56">0x00</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><call pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:12">g_assert</name><argument_list pos:start="31:13" pos:end="31:28">(<argument pos:start="31:14" pos:end="31:27"><expr pos:start="31:14" pos:end="31:27"><name pos:start="31:14" pos:end="31:19"><name pos:start="31:14" pos:end="31:14">d</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:19">dev</name></name> <operator pos:start="31:21" pos:end="31:22">!=</operator> <name pos:start="31:24" pos:end="31:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><call pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:22">qpci_device_enable</name><argument_list pos:start="35:23" pos:end="35:30">(<argument pos:start="35:24" pos:end="35:29"><expr pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:24">d</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:29">dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:44">/* set ACPI PM I/O space base address */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:71"><expr pos:start="41:5" pos:end="41:70"><call pos:start="41:5" pos:end="41:70"><name pos:start="41:5" pos:end="41:22">qpci_config_writel</name><argument_list pos:start="41:23" pos:end="41:70">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:24">d</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:29">dev</name></name></expr></argument>, <argument pos:start="41:32" pos:end="41:46"><expr pos:start="41:32" pos:end="41:46"><name pos:start="41:32" pos:end="41:46">ICH9_LPC_PMBASE</name></expr></argument>, <argument pos:start="41:49" pos:end="41:69"><expr pos:start="41:49" pos:end="41:69"><name pos:start="41:49" pos:end="41:63">PM_IO_BASE_ADDR</name> <operator pos:start="41:65" pos:end="41:65">|</operator> <literal type="number" pos:start="41:67" pos:end="41:69">0x1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="43:5" pos:end="43:25">/* enable ACPI I/O */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:57"><expr pos:start="45:5" pos:end="45:56"><call pos:start="45:5" pos:end="45:56"><name pos:start="45:5" pos:end="45:22">qpci_config_writeb</name><argument_list pos:start="45:23" pos:end="45:56">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:24">d</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:29">dev</name></name></expr></argument>, <argument pos:start="45:32" pos:end="45:49"><expr pos:start="45:32" pos:end="45:49"><name pos:start="45:32" pos:end="45:49">ICH9_LPC_ACPI_CTRL</name></expr></argument>, <argument pos:start="45:52" pos:end="45:55"><expr pos:start="45:52" pos:end="45:55"><literal type="number" pos:start="45:52" pos:end="45:55">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="47:5" pos:end="47:30">/* set Root Complex BAR */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:68"><expr pos:start="49:5" pos:end="49:67"><call pos:start="49:5" pos:end="49:67"><name pos:start="49:5" pos:end="49:22">qpci_config_writel</name><argument_list pos:start="49:23" pos:end="49:67">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:24">d</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:29">dev</name></name></expr></argument>, <argument pos:start="49:32" pos:end="49:44"><expr pos:start="49:32" pos:end="49:44"><name pos:start="49:32" pos:end="49:44">ICH9_LPC_RCBA</name></expr></argument>, <argument pos:start="49:47" pos:end="49:66"><expr pos:start="49:47" pos:end="49:66"><name pos:start="49:47" pos:end="49:60">RCBA_BASE_ADDR</name> <operator pos:start="49:62" pos:end="49:62">|</operator> <literal type="number" pos:start="49:64" pos:end="49:66">0x1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:71"><expr pos:start="53:5" pos:end="53:70"><name pos:start="53:5" pos:end="53:18"><name pos:start="53:5" pos:end="53:5">d</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:18">tco_io_base</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:70"><name pos:start="53:22" pos:end="53:38">qpci_legacy_iomap</name><argument_list pos:start="53:39" pos:end="53:70">(<argument pos:start="53:40" pos:end="53:45"><expr pos:start="53:40" pos:end="53:45"><name pos:start="53:40" pos:end="53:45"><name pos:start="53:40" pos:end="53:40">d</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:45">dev</name></name></expr></argument>, <argument pos:start="53:48" pos:end="53:69"><expr pos:start="53:48" pos:end="53:69"><name pos:start="53:48" pos:end="53:62">PM_IO_BASE_ADDR</name> <operator pos:start="53:64" pos:end="53:64">+</operator> <literal type="number" pos:start="53:66" pos:end="53:69">0x60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
