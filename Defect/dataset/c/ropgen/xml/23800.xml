<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23800.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:19"><name pos:start="1:1" pos:end="1:17"><name pos:start="1:1" pos:end="1:6">struct</name> <name pos:start="1:8" pos:end="1:17">omap_mmc_s</name></name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:32">omap_mmc_init</name><parameter_list pos:start="1:33" pos:end="7:59">(<parameter pos:start="1:34" pos:end="1:44"><decl pos:start="1:34" pos:end="1:44"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:39">hwaddr</name></type> <name pos:start="1:41" pos:end="1:44">base</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:36"><decl pos:start="3:17" pos:end="3:36"><type pos:start="3:17" pos:end="3:36"><name pos:start="3:17" pos:end="3:28">MemoryRegion</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:36">sysmem</name></decl></parameter>,

                <parameter pos:start="5:17" pos:end="5:33"><decl pos:start="5:17" pos:end="5:33"><type pos:start="5:17" pos:end="5:33"><name pos:start="5:17" pos:end="5:28">BlockBackend</name> <modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:33">blk</name></decl></parameter>,

                <parameter pos:start="7:17" pos:end="7:28"><decl pos:start="7:17" pos:end="7:28"><type pos:start="7:17" pos:end="7:28"><name pos:start="7:17" pos:end="7:24">qemu_irq</name></type> <name pos:start="7:26" pos:end="7:28">irq</name></decl></parameter>, <parameter pos:start="7:31" pos:end="7:44"><decl pos:start="7:31" pos:end="7:44"><type pos:start="7:31" pos:end="7:42"><name pos:start="7:31" pos:end="7:38">qemu_irq</name></type> <name pos:start="7:40" pos:end="7:44"><name pos:start="7:40" pos:end="7:42">dma</name><index pos:start="7:43" pos:end="7:44">[]</index></name></decl></parameter>, <parameter pos:start="7:47" pos:end="7:58"><decl pos:start="7:47" pos:end="7:58"><type pos:start="7:47" pos:end="7:58"><name pos:start="7:47" pos:end="7:54">omap_clk</name></type> <name pos:start="7:56" pos:end="7:58">clk</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="53:1">{<block_content pos:start="11:5" pos:end="51:13">

    <decl_stmt pos:start="11:5" pos:end="13:49"><decl pos:start="11:5" pos:end="13:48"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:21">omap_mmc_s</name></name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:24">s</name> <init pos:start="11:26" pos:end="13:48">= <expr pos:start="11:28" pos:end="13:48"><operator pos:start="11:28" pos:end="11:28">(</operator>struct <name pos:start="11:36" pos:end="11:45">omap_mmc_s</name> <operator pos:start="11:47" pos:end="11:47">*</operator><operator pos:start="11:48" pos:end="11:48">)</operator>

            <call pos:start="13:13" pos:end="13:48"><name pos:start="13:13" pos:end="13:21">g_malloc0</name><argument_list pos:start="13:22" pos:end="13:48">(<argument pos:start="13:23" pos:end="13:47"><expr pos:start="13:23" pos:end="13:47"><sizeof pos:start="13:23" pos:end="13:47">sizeof<argument_list pos:start="13:29" pos:end="13:47">(<argument pos:start="13:30" pos:end="13:46"><expr pos:start="13:30" pos:end="13:46">struct <name pos:start="13:37" pos:end="13:46">omap_mmc_s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:10">irq</name></name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:16">irq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:10">dma</name></name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:16">dma</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:10">clk</name></name> <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:16">clk</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:12">lines</name></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <literal type="number" pos:start="23:16" pos:end="23:16">1</literal></expr>;</expr_stmt>	<comment type="block" pos:start="23:25" pos:end="23:66">/* TODO: needs to be settable per-board */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:15"><expr pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:10"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:10">rev</name></name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><call pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:18">omap_mmc_reset</name><argument_list pos:start="29:19" pos:end="29:21">(<argument pos:start="29:20" pos:end="29:20"><expr pos:start="29:20" pos:end="29:20"><name pos:start="29:20" pos:end="29:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:80"><expr pos:start="33:5" pos:end="33:79"><call pos:start="33:5" pos:end="33:79"><name pos:start="33:5" pos:end="33:25">memory_region_init_io</name><argument_list pos:start="33:26" pos:end="33:79">(<argument pos:start="33:27" pos:end="33:35"><expr pos:start="33:27" pos:end="33:35"><operator pos:start="33:27" pos:end="33:27">&amp;</operator><name pos:start="33:28" pos:end="33:35"><name pos:start="33:28" pos:end="33:28">s</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:35">iomem</name></name></expr></argument>, <argument pos:start="33:38" pos:end="33:41"><expr pos:start="33:38" pos:end="33:41"><name pos:start="33:38" pos:end="33:41">NULL</name></expr></argument>, <argument pos:start="33:44" pos:end="33:56"><expr pos:start="33:44" pos:end="33:56"><operator pos:start="33:44" pos:end="33:44">&amp;</operator><name pos:start="33:45" pos:end="33:56">omap_mmc_ops</name></expr></argument>, <argument pos:start="33:59" pos:end="33:59"><expr pos:start="33:59" pos:end="33:59"><name pos:start="33:59" pos:end="33:59">s</name></expr></argument>, <argument pos:start="33:62" pos:end="33:71"><expr pos:start="33:62" pos:end="33:71"><literal type="string" pos:start="33:62" pos:end="33:71">"omap.mmc"</literal></expr></argument>, <argument pos:start="33:74" pos:end="33:78"><expr pos:start="33:74" pos:end="33:78"><literal type="number" pos:start="33:74" pos:end="33:78">0x800</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:57"><expr pos:start="35:5" pos:end="35:56"><call pos:start="35:5" pos:end="35:56"><name pos:start="35:5" pos:end="35:31">memory_region_add_subregion</name><argument_list pos:start="35:32" pos:end="35:56">(<argument pos:start="35:33" pos:end="35:38"><expr pos:start="35:33" pos:end="35:38"><name pos:start="35:33" pos:end="35:38">sysmem</name></expr></argument>, <argument pos:start="35:41" pos:end="35:44"><expr pos:start="35:41" pos:end="35:44"><name pos:start="35:41" pos:end="35:44">base</name></expr></argument>, <argument pos:start="35:47" pos:end="35:55"><expr pos:start="35:47" pos:end="35:55"><operator pos:start="35:47" pos:end="35:47">&amp;</operator><name pos:start="35:48" pos:end="35:55"><name pos:start="35:48" pos:end="35:48">s</name><operator pos:start="35:49" pos:end="35:50">-&gt;</operator><name pos:start="35:51" pos:end="35:55">iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:33">/* Instantiate the storage */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:11">card</name></name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:33"><name pos:start="41:15" pos:end="41:21">sd_init</name><argument_list pos:start="41:22" pos:end="41:33">(<argument pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:25">blk</name></expr></argument>, <argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><name pos:start="41:28" pos:end="41:32">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:24">(<expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:15">card</name></name> <operator pos:start="43:17" pos:end="43:18">==</operator> <name pos:start="43:20" pos:end="43:23">NULL</name></expr>)</condition> <block pos:start="43:26" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:16">

        <expr_stmt pos:start="45:9" pos:end="45:16"><expr pos:start="45:9" pos:end="45:15"><call pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:12">exit</name><argument_list pos:start="45:13" pos:end="45:15">(<argument pos:start="45:14" pos:end="45:14"><expr pos:start="45:14" pos:end="45:14"><literal type="number" pos:start="45:14" pos:end="45:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><name pos:start="51:12" pos:end="51:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
