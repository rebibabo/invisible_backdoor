<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3052.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">nbd_handle_list</name><parameter_list pos:start="1:27" pos:end="1:62">(<parameter pos:start="1:28" pos:end="1:44"><decl pos:start="1:28" pos:end="1:44"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:36">NBDClient</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">client</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:54">uint32_t</name></type> <name pos:start="1:56" pos:end="1:61">length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:58">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">csock</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">NBDExport</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">exp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:25"><expr pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:9">csock</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <name pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:18">client</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:24">sock</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="13:15">(<expr pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:14">length</name></expr>)</condition> <block pos:start="13:17" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:70">

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:47">(<expr pos:start="15:13" pos:end="15:46"><call pos:start="15:13" pos:end="15:36"><name pos:start="15:13" pos:end="15:21">drop_sync</name><argument_list pos:start="15:22" pos:end="15:36">(<argument pos:start="15:23" pos:end="15:27"><expr pos:start="15:23" pos:end="15:27"><name pos:start="15:23" pos:end="15:27">csock</name></expr></argument>, <argument pos:start="15:30" pos:end="15:35"><expr pos:start="15:30" pos:end="15:35"><name pos:start="15:30" pos:end="15:35">length</name></expr></argument>)</argument_list></call> <operator pos:start="15:38" pos:end="15:39">!=</operator> <name pos:start="15:41" pos:end="15:46">length</name></expr>)</condition> <block pos:start="15:49" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:24">

            <return pos:start="17:13" pos:end="17:24">return <expr pos:start="17:20" pos:end="17:23"><operator pos:start="17:20" pos:end="17:20">-</operator><name pos:start="17:21" pos:end="17:23">EIO</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="21:9" pos:end="21:70">return <expr pos:start="21:16" pos:end="21:69"><call pos:start="21:16" pos:end="21:69"><name pos:start="21:16" pos:end="21:27">nbd_send_rep</name><argument_list pos:start="21:28" pos:end="21:69">(<argument pos:start="21:29" pos:end="21:33"><expr pos:start="21:29" pos:end="21:33"><name pos:start="21:29" pos:end="21:33">csock</name></expr></argument>, <argument pos:start="21:36" pos:end="21:54"><expr pos:start="21:36" pos:end="21:54"><name pos:start="21:36" pos:end="21:54">NBD_REP_ERR_INVALID</name></expr></argument>, <argument pos:start="21:57" pos:end="21:68"><expr pos:start="21:57" pos:end="21:68"><name pos:start="21:57" pos:end="21:68">NBD_OPT_LIST</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:55">/* For each export, send a NBD_REP_SERVER reply. */</comment>

    <macro pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:18">QTAILQ_FOREACH</name><argument_list pos:start="29:19" pos:end="29:39">(<argument pos:start="29:20" pos:end="29:22">exp</argument>, <argument pos:start="29:25" pos:end="29:32">&amp;exports</argument>, <argument pos:start="29:35" pos:end="29:38">next</argument>)</argument_list></macro> <block pos:start="29:41" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:9">

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:42">(<expr pos:start="31:13" pos:end="31:41"><call pos:start="31:13" pos:end="31:41"><name pos:start="31:13" pos:end="31:29">nbd_send_rep_list</name><argument_list pos:start="31:30" pos:end="31:41">(<argument pos:start="31:31" pos:end="31:35"><expr pos:start="31:31" pos:end="31:35"><name pos:start="31:31" pos:end="31:35">csock</name></expr></argument>, <argument pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><name pos:start="31:38" pos:end="31:40">exp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:44" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:27">

            <return pos:start="33:13" pos:end="33:27">return <expr pos:start="33:20" pos:end="33:26"><operator pos:start="33:20" pos:end="33:20">-</operator><name pos:start="33:21" pos:end="33:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <comment type="block" pos:start="39:5" pos:end="39:36">/* Finish with a NBD_REP_ACK. */</comment>

    <return pos:start="41:5" pos:end="41:58">return <expr pos:start="41:12" pos:end="41:57"><call pos:start="41:12" pos:end="41:57"><name pos:start="41:12" pos:end="41:23">nbd_send_rep</name><argument_list pos:start="41:24" pos:end="41:57">(<argument pos:start="41:25" pos:end="41:29"><expr pos:start="41:25" pos:end="41:29"><name pos:start="41:25" pos:end="41:29">csock</name></expr></argument>, <argument pos:start="41:32" pos:end="41:42"><expr pos:start="41:32" pos:end="41:42"><name pos:start="41:32" pos:end="41:42">NBD_REP_ACK</name></expr></argument>, <argument pos:start="41:45" pos:end="41:56"><expr pos:start="41:45" pos:end="41:56"><name pos:start="41:45" pos:end="41:56">NBD_OPT_LIST</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
