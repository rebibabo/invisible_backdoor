<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8360.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:24">ff_rdft_init</name><parameter_list pos:start="1:25" pos:end="1:80">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:36">RDFTContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:50"><decl pos:start="1:42" pos:end="1:50"><type pos:start="1:42" pos:end="1:50"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:50">nbits</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:79"><decl pos:start="1:53" pos:end="1:79"><type pos:start="1:53" pos:end="1:79"><name pos:start="1:53" pos:end="1:73"><name pos:start="1:53" pos:end="1:56">enum</name> <name pos:start="1:58" pos:end="1:73">RDFTransformType</name></name></type> <name pos:start="1:75" pos:end="1:79">trans</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name> <init pos:start="5:11" pos:end="5:22">= <expr pos:start="5:13" pos:end="5:22"><literal type="number" pos:start="5:13" pos:end="5:13">1</literal> <operator pos:start="5:15" pos:end="5:16">&lt;&lt;</operator> <name pos:start="5:18" pos:end="5:22">nbits</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:78"><decl pos:start="9:5" pos:end="9:77"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:16">double</name></type> <name pos:start="9:18" pos:end="9:22">theta</name> <init pos:start="9:24" pos:end="9:77">= <expr pos:start="9:26" pos:end="9:77"><operator pos:start="9:26" pos:end="9:26">(</operator><ternary pos:start="9:27" pos:end="9:67"><condition pos:start="9:27" pos:end="9:60"><expr pos:start="9:27" pos:end="9:58"><name pos:start="9:27" pos:end="9:31">trans</name> <operator pos:start="9:33" pos:end="9:34">==</operator> <name pos:start="9:36" pos:end="9:39">RDFT</name> <operator pos:start="9:41" pos:end="9:42">||</operator> <name pos:start="9:44" pos:end="9:48">trans</name> <operator pos:start="9:50" pos:end="9:51">==</operator> <name pos:start="9:53" pos:end="9:58">IRIDFT</name></expr> ?</condition><then pos:start="9:62" pos:end="9:63"> <expr pos:start="9:62" pos:end="9:63"><operator pos:start="9:62" pos:end="9:62">-</operator><literal type="number" pos:start="9:63" pos:end="9:63">1</literal></expr> </then><else pos:start="9:65" pos:end="9:67">: <expr pos:start="9:67" pos:end="9:67"><literal type="number" pos:start="9:67" pos:end="9:67">1</literal></expr></else></ternary><operator pos:start="9:68" pos:end="9:68">)</operator><operator pos:start="9:69" pos:end="9:69">*</operator><literal type="number" pos:start="9:70" pos:end="9:70">2</literal><operator pos:start="9:71" pos:end="9:71">*</operator><name pos:start="9:72" pos:end="9:75">M_PI</name><operator pos:start="9:76" pos:end="9:76">/</operator><name pos:start="9:77" pos:end="9:77">n</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:12">nbits</name></name>           <operator pos:start="13:24" pos:end="13:24">=</operator> <name pos:start="13:26" pos:end="13:30">nbits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:59"><expr pos:start="15:5" pos:end="15:58"><name pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:14">inverse</name></name>         <operator pos:start="15:24" pos:end="15:24">=</operator> <name pos:start="15:26" pos:end="15:30">trans</name> <operator pos:start="15:32" pos:end="15:33">==</operator> <name pos:start="15:35" pos:end="15:39">IRDFT</name> <operator pos:start="15:41" pos:end="15:42">||</operator> <name pos:start="15:44" pos:end="15:48">trans</name> <operator pos:start="15:50" pos:end="15:51">==</operator> <name pos:start="15:53" pos:end="15:58">IRIDFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:68"><expr pos:start="17:5" pos:end="17:67"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:22">sign_convention</name></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <ternary pos:start="17:26" pos:end="17:67"><condition pos:start="17:26" pos:end="17:60"><expr pos:start="17:26" pos:end="17:58"><name pos:start="17:26" pos:end="17:30">trans</name> <operator pos:start="17:32" pos:end="17:33">==</operator> <name pos:start="17:35" pos:end="17:39">RIDFT</name> <operator pos:start="17:41" pos:end="17:42">||</operator> <name pos:start="17:44" pos:end="17:48">trans</name> <operator pos:start="17:50" pos:end="17:51">==</operator> <name pos:start="17:53" pos:end="17:58">IRIDFT</name></expr> ?</condition><then pos:start="17:62" pos:end="17:62"> <expr pos:start="17:62" pos:end="17:62"><literal type="number" pos:start="17:62" pos:end="17:62">1</literal></expr> </then><else pos:start="17:64" pos:end="17:67">: <expr pos:start="17:66" pos:end="17:67"><operator pos:start="17:66" pos:end="17:66">-</operator><literal type="number" pos:start="17:67" pos:end="17:67">1</literal></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:32">(<expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:13">nbits</name> <argument_list type="generic" pos:start="21:15" pos:end="21:28">&lt; <argument pos:start="21:17" pos:end="21:26"><expr pos:start="21:17" pos:end="21:26"><literal type="number" pos:start="21:17" pos:end="21:17">4</literal> <operator pos:start="21:19" pos:end="21:20">||</operator> <name pos:start="21:22" pos:end="21:26">nbits</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="21:30" pos:end="21:31">16</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if <condition pos:start="27:8" pos:end="27:76">(<expr pos:start="27:9" pos:end="27:75"><call pos:start="27:9" pos:end="27:71"><name pos:start="27:9" pos:end="27:19">ff_fft_init</name><argument_list pos:start="27:20" pos:end="27:71">(<argument pos:start="27:21" pos:end="27:27"><expr pos:start="27:21" pos:end="27:27"><operator pos:start="27:21" pos:end="27:21">&amp;</operator><name pos:start="27:22" pos:end="27:27"><name pos:start="27:22" pos:end="27:22">s</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:27">fft</name></name></expr></argument>, <argument pos:start="27:30" pos:end="27:36"><expr pos:start="27:30" pos:end="27:36"><name pos:start="27:30" pos:end="27:34">nbits</name><operator pos:start="27:35" pos:end="27:35">-</operator><literal type="number" pos:start="27:36" pos:end="27:36">1</literal></expr></argument>, <argument pos:start="27:39" pos:end="27:70"><expr pos:start="27:39" pos:end="27:70"><name pos:start="27:39" pos:end="27:43">trans</name> <operator pos:start="27:45" pos:end="27:46">==</operator> <name pos:start="27:48" pos:end="27:52">IRDFT</name> <operator pos:start="27:54" pos:end="27:55">||</operator> <name pos:start="27:57" pos:end="27:61">trans</name> <operator pos:start="27:63" pos:end="27:64">==</operator> <name pos:start="27:66" pos:end="27:70">RIDFT</name></expr></argument>)</argument_list></call> <operator pos:start="27:73" pos:end="27:73">&lt;</operator> <literal type="number" pos:start="27:75" pos:end="27:75">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:11">tcos</name></name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:34"><name pos:start="33:15" pos:end="33:25">ff_cos_tabs</name><index pos:start="33:26" pos:end="33:34">[<expr pos:start="33:27" pos:end="33:33"><name pos:start="33:27" pos:end="33:31">nbits</name><operator pos:start="33:32" pos:end="33:32">-</operator><literal type="number" pos:start="33:33" pos:end="33:33">4</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:77"><expr pos:start="35:5" pos:end="35:76"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:11">tsin</name></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:34"><name pos:start="35:15" pos:end="35:25">ff_sin_tabs</name><index pos:start="35:26" pos:end="35:34">[<expr pos:start="35:27" pos:end="35:33"><name pos:start="35:27" pos:end="35:31">nbits</name><operator pos:start="35:32" pos:end="35:32">-</operator><literal type="number" pos:start="35:33" pos:end="35:33">4</literal></expr>]</index></name><operator pos:start="35:35" pos:end="35:35">+</operator><operator pos:start="35:36" pos:end="35:36">(</operator><name pos:start="35:37" pos:end="35:41">trans</name> <operator pos:start="35:43" pos:end="35:44">==</operator> <name pos:start="35:46" pos:end="35:49">RDFT</name> <operator pos:start="35:51" pos:end="35:52">||</operator> <name pos:start="35:54" pos:end="35:58">trans</name> <operator pos:start="35:60" pos:end="35:61">==</operator> <name pos:start="35:63" pos:end="35:68">IRIDFT</name><operator pos:start="35:69" pos:end="35:69">)</operator><operator pos:start="35:70" pos:end="35:70">*</operator><operator pos:start="35:71" pos:end="35:71">(</operator><name pos:start="35:72" pos:end="35:72">n</name><operator pos:start="35:73" pos:end="35:74">&gt;&gt;</operator><literal type="number" pos:start="35:75" pos:end="35:75">2</literal><operator pos:start="35:76" pos:end="35:76">)</operator></expr>;</expr_stmt>

    <for pos:start="37:5" pos:end="43:5">for <control pos:start="37:9" pos:end="37:32">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:27"><expr pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <operator pos:start="37:21" pos:end="37:21">(</operator><name pos:start="37:22" pos:end="37:22">n</name><operator pos:start="37:23" pos:end="37:24">&gt;&gt;</operator><literal type="number" pos:start="37:25" pos:end="37:25">2</literal><operator pos:start="37:26" pos:end="37:26">)</operator></expr>;</condition> <incr pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:29">i</name><operator pos:start="37:30" pos:end="37:31">++</operator></expr></incr>)</control> <block pos:start="37:34" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:34">

        <expr_stmt pos:start="39:9" pos:end="39:34"><expr pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:15">tcos</name><index pos:start="39:16" pos:end="39:18">[<expr pos:start="39:17" pos:end="39:17"><name pos:start="39:17" pos:end="39:17">i</name></expr>]</index></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <call pos:start="39:22" pos:end="39:33"><name pos:start="39:22" pos:end="39:24">cos</name><argument_list pos:start="39:25" pos:end="39:33">(<argument pos:start="39:26" pos:end="39:32"><expr pos:start="39:26" pos:end="39:32"><name pos:start="39:26" pos:end="39:26">i</name><operator pos:start="39:27" pos:end="39:27">*</operator><name pos:start="39:28" pos:end="39:32">theta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:15">tsin</name><index pos:start="41:16" pos:end="41:18">[<expr pos:start="41:17" pos:end="41:17"><name pos:start="41:17" pos:end="41:17">i</name></expr>]</index></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <call pos:start="41:22" pos:end="41:33"><name pos:start="41:22" pos:end="41:24">sin</name><argument_list pos:start="41:25" pos:end="41:33">(<argument pos:start="41:26" pos:end="41:32"><expr pos:start="41:26" pos:end="41:32"><name pos:start="41:26" pos:end="41:26">i</name><operator pos:start="41:27" pos:end="41:27">*</operator><name pos:start="41:28" pos:end="41:32">theta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
