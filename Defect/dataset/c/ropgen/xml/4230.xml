<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4230.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">qcow2_snapshot_delete</name><parameter_list pos:start="1:26" pos:end="1:72">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:71"><decl pos:start="1:49" pos:end="1:71"><type pos:start="1:49" pos:end="1:71"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:71">snapshot_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">QCowSnapshot</name></type> <name pos:start="7:18" pos:end="7:19">sn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">snapshot_index</name></decl>, <decl pos:start="9:25" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:27">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:29">/* Search the snapshot */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:66"><expr pos:start="15:5" pos:end="15:65"><name pos:start="15:5" pos:end="15:18">snapshot_index</name> <operator pos:start="15:20" pos:end="15:20">=</operator> <call pos:start="15:22" pos:end="15:65"><name pos:start="15:22" pos:end="15:48">find_snapshot_by_id_or_name</name><argument_list pos:start="15:49" pos:end="15:65">(<argument pos:start="15:50" pos:end="15:51"><expr pos:start="15:50" pos:end="15:51"><name pos:start="15:50" pos:end="15:51">bs</name></expr></argument>, <argument pos:start="15:54" pos:end="15:64"><expr pos:start="15:54" pos:end="15:64"><name pos:start="15:54" pos:end="15:64">snapshot_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:27">(<expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:22">snapshot_index</name> <operator pos:start="17:24" pos:end="17:24">&lt;</operator> <literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>)</condition> <block pos:start="17:29" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:23">

        <return pos:start="19:9" pos:end="19:23">return <expr pos:start="19:16" pos:end="19:22"><operator pos:start="19:16" pos:end="19:16">-</operator><name pos:start="19:17" pos:end="19:22">ENOENT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:6">sn</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <name pos:start="23:10" pos:end="23:37"><name pos:start="23:10" pos:end="23:10">s</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:21">snapshots</name><index pos:start="23:22" pos:end="23:37">[<expr pos:start="23:23" pos:end="23:36"><name pos:start="23:23" pos:end="23:36">snapshot_index</name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:42">/* Remove it from the snapshot list */</comment>

    <expr_stmt pos:start="29:5" pos:end="33:65"><expr pos:start="29:5" pos:end="33:64"><call pos:start="29:5" pos:end="33:64"><name pos:start="29:5" pos:end="29:11">memmove</name><argument_list pos:start="29:12" pos:end="33:64">(<argument pos:start="29:13" pos:end="29:41"><expr pos:start="29:13" pos:end="29:41"><name pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:24">snapshots</name></name> <operator pos:start="29:26" pos:end="29:26">+</operator> <name pos:start="29:28" pos:end="29:41">snapshot_index</name></expr></argument>,

            <argument pos:start="31:13" pos:end="31:45"><expr pos:start="31:13" pos:end="31:45"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:24">snapshots</name></name> <operator pos:start="31:26" pos:end="31:26">+</operator> <name pos:start="31:28" pos:end="31:41">snapshot_index</name> <operator pos:start="31:43" pos:end="31:43">+</operator> <literal type="number" pos:start="31:45" pos:end="31:45">1</literal></expr></argument>,

            <argument pos:start="33:13" pos:end="33:63"><expr pos:start="33:13" pos:end="33:63"><operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:28"><name pos:start="33:14" pos:end="33:14">s</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:28">nb_snapshots</name></name> <operator pos:start="33:30" pos:end="33:30">-</operator> <name pos:start="33:32" pos:end="33:45">snapshot_index</name> <operator pos:start="33:47" pos:end="33:47">-</operator> <literal type="number" pos:start="33:49" pos:end="33:49">1</literal><operator pos:start="33:50" pos:end="33:50">)</operator> <operator pos:start="33:52" pos:end="33:52">*</operator> <sizeof pos:start="33:54" pos:end="33:63">sizeof<argument_list pos:start="33:60" pos:end="33:63">(<argument pos:start="33:61" pos:end="33:62"><expr pos:start="33:61" pos:end="33:62"><name pos:start="33:61" pos:end="33:62">sn</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:19">nb_snapshots</name></name><operator pos:start="35:20" pos:end="35:21">--</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:35"><name pos:start="37:11" pos:end="37:31">qcow2_write_snapshots</name><argument_list pos:start="37:32" pos:end="37:35">(<argument pos:start="37:33" pos:end="37:34"><expr pos:start="37:33" pos:end="37:34"><name pos:start="37:33" pos:end="37:34">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">&lt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition> <block pos:start="39:18" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:19">

        <return pos:start="41:9" pos:end="41:19">return <expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="53:7">/*

     * The snapshot is now unused, clean up. If we fail after this point, we

     * won't recover but just leak clusters.

     */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:22"><expr pos:start="55:5" pos:end="55:21"><call pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:10">g_free</name><argument_list pos:start="55:11" pos:end="55:21">(<argument pos:start="55:12" pos:end="55:20"><expr pos:start="55:12" pos:end="55:20"><name pos:start="55:12" pos:end="55:20"><name pos:start="55:12" pos:end="55:13">sn</name><operator pos:start="55:14" pos:end="55:14">.</operator><name pos:start="55:15" pos:end="55:20">id_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:20"><expr pos:start="57:5" pos:end="57:19"><call pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:10">g_free</name><argument_list pos:start="57:11" pos:end="57:19">(<argument pos:start="57:12" pos:end="57:18"><expr pos:start="57:12" pos:end="57:18"><name pos:start="57:12" pos:end="57:18"><name pos:start="57:12" pos:end="57:13">sn</name><operator pos:start="57:14" pos:end="57:14">.</operator><name pos:start="57:15" pos:end="57:18">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="67:7">/*

     * Now decrease the refcounts of clusters referenced by the snapshot and

     * free the L1 table.

     */</comment>

    <expr_stmt pos:start="69:5" pos:end="71:57"><expr pos:start="69:5" pos:end="71:56"><name pos:start="69:5" pos:end="69:7">ret</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <call pos:start="69:11" pos:end="71:56"><name pos:start="69:11" pos:end="69:40">qcow2_update_snapshot_refcount</name><argument_list pos:start="69:41" pos:end="71:56">(<argument pos:start="69:42" pos:end="69:43"><expr pos:start="69:42" pos:end="69:43"><name pos:start="69:42" pos:end="69:43">bs</name></expr></argument>, <argument pos:start="69:46" pos:end="69:63"><expr pos:start="69:46" pos:end="69:63"><name pos:start="69:46" pos:end="69:63"><name pos:start="69:46" pos:end="69:47">sn</name><operator pos:start="69:48" pos:end="69:48">.</operator><name pos:start="69:49" pos:end="69:63">l1_table_offset</name></name></expr></argument>,

                                         <argument pos:start="71:42" pos:end="71:51"><expr pos:start="71:42" pos:end="71:51"><name pos:start="71:42" pos:end="71:51"><name pos:start="71:42" pos:end="71:43">sn</name><operator pos:start="71:44" pos:end="71:44">.</operator><name pos:start="71:45" pos:end="71:51">l1_size</name></name></expr></argument>, <argument pos:start="71:54" pos:end="71:55"><expr pos:start="71:54" pos:end="71:55"><operator pos:start="71:54" pos:end="71:54">-</operator><literal type="number" pos:start="71:55" pos:end="71:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:16">(<expr pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">&lt;</operator> <literal type="number" pos:start="73:15" pos:end="73:15">0</literal></expr>)</condition> <block pos:start="73:18" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:19">

        <return pos:start="75:9" pos:end="75:19">return <expr pos:start="75:16" pos:end="75:18"><name pos:start="75:16" pos:end="75:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:79"><expr pos:start="79:5" pos:end="79:78"><call pos:start="79:5" pos:end="79:78"><name pos:start="79:5" pos:end="79:23">qcow2_free_clusters</name><argument_list pos:start="79:24" pos:end="79:78">(<argument pos:start="79:25" pos:end="79:26"><expr pos:start="79:25" pos:end="79:26"><name pos:start="79:25" pos:end="79:26">bs</name></expr></argument>, <argument pos:start="79:29" pos:end="79:46"><expr pos:start="79:29" pos:end="79:46"><name pos:start="79:29" pos:end="79:46"><name pos:start="79:29" pos:end="79:30">sn</name><operator pos:start="79:31" pos:end="79:31">.</operator><name pos:start="79:32" pos:end="79:46">l1_table_offset</name></name></expr></argument>, <argument pos:start="79:49" pos:end="79:77"><expr pos:start="79:49" pos:end="79:77"><name pos:start="79:49" pos:end="79:58"><name pos:start="79:49" pos:end="79:50">sn</name><operator pos:start="79:51" pos:end="79:51">.</operator><name pos:start="79:52" pos:end="79:58">l1_size</name></name> <operator pos:start="79:60" pos:end="79:60">*</operator> <sizeof pos:start="79:62" pos:end="79:77">sizeof<argument_list pos:start="79:68" pos:end="79:77">(<argument pos:start="79:69" pos:end="79:76"><expr pos:start="79:69" pos:end="79:76"><name pos:start="79:69" pos:end="79:76">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:68">/* must update the copied flag on the current cluster offsets */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:80"><expr pos:start="85:5" pos:end="85:79"><name pos:start="85:5" pos:end="85:7">ret</name> <operator pos:start="85:9" pos:end="85:9">=</operator> <call pos:start="85:11" pos:end="85:79"><name pos:start="85:11" pos:end="85:40">qcow2_update_snapshot_refcount</name><argument_list pos:start="85:41" pos:end="85:79">(<argument pos:start="85:42" pos:end="85:43"><expr pos:start="85:42" pos:end="85:43"><name pos:start="85:42" pos:end="85:43">bs</name></expr></argument>, <argument pos:start="85:46" pos:end="85:63"><expr pos:start="85:46" pos:end="85:63"><name pos:start="85:46" pos:end="85:63"><name pos:start="85:46" pos:end="85:46">s</name><operator pos:start="85:47" pos:end="85:48">-&gt;</operator><name pos:start="85:49" pos:end="85:63">l1_table_offset</name></name></expr></argument>, <argument pos:start="85:66" pos:end="85:75"><expr pos:start="85:66" pos:end="85:75"><name pos:start="85:66" pos:end="85:75"><name pos:start="85:66" pos:end="85:66">s</name><operator pos:start="85:67" pos:end="85:68">-&gt;</operator><name pos:start="85:69" pos:end="85:75">l1_size</name></name></expr></argument>, <argument pos:start="85:78" pos:end="85:78"><expr pos:start="85:78" pos:end="85:78"><literal type="number" pos:start="85:78" pos:end="85:78">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="96:0"><if pos:start="87:5" pos:end="96:0">if <condition pos:start="87:8" pos:end="87:16">(<expr pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:11">ret</name> <operator pos:start="87:13" pos:end="87:13">&lt;</operator> <literal type="number" pos:start="87:15" pos:end="87:15">0</literal></expr>)</condition> <block pos:start="87:18" pos:end="96:0">{<block_content pos:start="89:9" pos:end="89:19">

        <return pos:start="89:9" pos:end="89:19">return <expr pos:start="89:16" pos:end="89:18"><name pos:start="89:16" pos:end="89:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="95:1" pos:end="95:18">#<cpp:directive pos:start="95:2" pos:end="95:6">ifdef</cpp:directive> <name pos:start="95:8" pos:end="95:18">DEBUG_ALLOC</name></cpp:ifdef>

    <block pos:start="97:5" pos:end="106:0">{<block_content pos:start="99:9" pos:end="101:43">

        <decl_stmt pos:start="99:9" pos:end="99:37"><decl pos:start="99:9" pos:end="99:36"><type pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:23">BdrvCheckResult</name></type> <name pos:start="99:25" pos:end="99:30">result</name> <init pos:start="99:32" pos:end="99:36">= <expr pos:start="99:34" pos:end="99:36"><block pos:start="99:34" pos:end="99:36">{<expr pos:start="99:35" pos:end="99:35"><literal type="number" pos:start="99:35" pos:end="99:35">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:43"><expr pos:start="101:9" pos:end="101:42"><call pos:start="101:9" pos:end="101:42"><name pos:start="101:9" pos:end="101:29">qcow2_check_refcounts</name><argument_list pos:start="101:30" pos:end="101:42">(<argument pos:start="101:31" pos:end="101:32"><expr pos:start="101:31" pos:end="101:32"><name pos:start="101:31" pos:end="101:32">bs</name></expr></argument>, <argument pos:start="101:35" pos:end="101:41"><expr pos:start="101:35" pos:end="101:41"><operator pos:start="101:35" pos:end="101:35">&amp;</operator><name pos:start="101:36" pos:end="101:41">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:endif pos:start="105:1" pos:end="105:6">#<cpp:directive pos:start="105:2" pos:end="105:6">endif</cpp:directive></cpp:endif>

    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
