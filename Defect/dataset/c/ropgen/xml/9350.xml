<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9350.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">virtio_pci_load_config</name><parameter_list pos:start="1:34" pos:end="1:61">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type> <name pos:start="1:42" pos:end="1:47">opaque</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:60"><decl pos:start="1:50" pos:end="1:60"><type pos:start="1:50" pos:end="1:60"><name pos:start="1:50" pos:end="1:57">QEMUFile</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VirtIOPCIProxy</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">proxy</name> <init pos:start="5:27" pos:end="5:34">= <expr pos:start="5:29" pos:end="5:34"><name pos:start="5:29" pos:end="5:34">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:46"><expr pos:start="9:5" pos:end="9:45"><name pos:start="9:5" pos:end="9:7">ret</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:45"><name pos:start="9:11" pos:end="9:25">pci_device_load</name><argument_list pos:start="9:26" pos:end="9:45">(<argument pos:start="9:27" pos:end="9:41"><expr pos:start="9:27" pos:end="9:41"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:41"><name pos:start="9:28" pos:end="9:32">proxy</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:41">pci_dev</name></name></expr></argument>, <argument pos:start="9:44" pos:end="9:44"><expr pos:start="9:44" pos:end="9:44"><name pos:start="9:44" pos:end="9:44">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:12">(<expr pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">ret</name></expr>)</condition> <block pos:start="11:14" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:19">

        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><call pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:13">msix_load</name><argument_list pos:start="17:14" pos:end="17:33">(<argument pos:start="17:15" pos:end="17:29"><expr pos:start="17:15" pos:end="17:29"><operator pos:start="17:15" pos:end="17:15">&amp;</operator><name pos:start="17:16" pos:end="17:29"><name pos:start="17:16" pos:end="17:20">proxy</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:29">pci_dev</name></name></expr></argument>, <argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:38">(<expr pos:start="19:9" pos:end="19:37"><call pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:20">msix_present</name><argument_list pos:start="19:21" pos:end="19:37">(<argument pos:start="19:22" pos:end="19:36"><expr pos:start="19:22" pos:end="19:36"><operator pos:start="19:22" pos:end="19:22">&amp;</operator><name pos:start="19:23" pos:end="19:36"><name pos:start="19:23" pos:end="19:27">proxy</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:36">pci_dev</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:40" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:55">

        <expr_stmt pos:start="21:9" pos:end="21:55"><expr pos:start="21:9" pos:end="21:54"><call pos:start="21:9" pos:end="21:54"><name pos:start="21:9" pos:end="21:22">qemu_get_be16s</name><argument_list pos:start="21:23" pos:end="21:54">(<argument pos:start="21:24" pos:end="21:24"><expr pos:start="21:24" pos:end="21:24"><name pos:start="21:24" pos:end="21:24">f</name></expr></argument>, <argument pos:start="21:27" pos:end="21:53"><expr pos:start="21:27" pos:end="21:53"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:53"><name pos:start="21:28" pos:end="21:32">proxy</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:38">vdev</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:53">config_vector</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="27:5">else <block pos:start="23:12" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:54">

        <expr_stmt pos:start="25:9" pos:end="25:54"><expr pos:start="25:9" pos:end="25:53"><name pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:13">proxy</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:19">vdev</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:34">config_vector</name></name> <operator pos:start="25:36" pos:end="25:36">=</operator> <name pos:start="25:38" pos:end="25:53">VIRTIO_NO_VECTOR</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:55">(<expr pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:13">proxy</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:19">vdev</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:34">config_vector</name></name> <operator pos:start="29:36" pos:end="29:37">!=</operator> <name pos:start="29:39" pos:end="29:54">VIRTIO_NO_VECTOR</name></expr>)</condition> <block pos:start="29:57" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:76">

        <return pos:start="31:9" pos:end="31:76">return <expr pos:start="31:16" pos:end="31:75"><call pos:start="31:16" pos:end="31:75"><name pos:start="31:16" pos:end="31:30">msix_vector_use</name><argument_list pos:start="31:31" pos:end="31:75">(<argument pos:start="31:32" pos:end="31:46"><expr pos:start="31:32" pos:end="31:46"><operator pos:start="31:32" pos:end="31:32">&amp;</operator><name pos:start="31:33" pos:end="31:46"><name pos:start="31:33" pos:end="31:37">proxy</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:46">pci_dev</name></name></expr></argument>, <argument pos:start="31:49" pos:end="31:74"><expr pos:start="31:49" pos:end="31:74"><name pos:start="31:49" pos:end="31:74"><name pos:start="31:49" pos:end="31:53">proxy</name><operator pos:start="31:54" pos:end="31:55">-&gt;</operator><name pos:start="31:56" pos:end="31:59">vdev</name><operator pos:start="31:60" pos:end="31:61">-&gt;</operator><name pos:start="31:62" pos:end="31:74">config_vector</name></name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="39:56">/* Try to find out if the guest has bus master disabled, but is

       in ready state. Then we have a buggy guest OS. */</comment>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="43:67">(<expr pos:start="41:9" pos:end="43:66"><operator pos:start="41:9" pos:end="41:9">!</operator><operator pos:start="41:10" pos:end="41:10">(</operator><name pos:start="41:11" pos:end="41:29"><name pos:start="41:11" pos:end="41:15">proxy</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:21">vdev</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:29">status</name></name> <operator pos:start="41:31" pos:end="41:31">&amp;</operator> <name pos:start="41:33" pos:end="41:57">VIRTIO_CONFIG_S_DRIVER_OK</name><operator pos:start="41:58" pos:end="41:58">)</operator> <operator pos:start="41:60" pos:end="41:61">&amp;&amp;</operator>

        <operator pos:start="43:9" pos:end="43:9">!</operator><operator pos:start="43:10" pos:end="43:10">(</operator><name pos:start="43:11" pos:end="43:44"><name pos:start="43:11" pos:end="43:15">proxy</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:24">pci_dev</name><operator pos:start="43:25" pos:end="43:25">.</operator><name pos:start="43:26" pos:end="43:31">config</name><index pos:start="43:32" pos:end="43:44">[<expr pos:start="43:33" pos:end="43:43"><name pos:start="43:33" pos:end="43:43">PCI_COMMAND</name></expr>]</index></name> <operator pos:start="43:46" pos:end="43:46">&amp;</operator> <name pos:start="43:48" pos:end="43:65">PCI_COMMAND_MASTER</name><operator pos:start="43:66" pos:end="43:66">)</operator></expr>)</condition> <block pos:start="43:69" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:49">

        <expr_stmt pos:start="45:9" pos:end="45:49"><expr pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:13">proxy</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:19">bugs</name></name> <operator pos:start="45:21" pos:end="45:22">|=</operator> <name pos:start="45:24" pos:end="45:48">VIRTIO_PCI_BUG_BUS_MASTER</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
