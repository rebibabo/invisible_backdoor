<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27144.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">update_stream_timings</name><parameter_list pos:start="1:34" pos:end="1:54">(<parameter pos:start="1:35" pos:end="1:53"><decl pos:start="1:35" pos:end="1:53"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:49">AVFormatContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">ic</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:9">

    <decl_stmt pos:start="5:5" pos:end="5:74"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:22">start_time</name></decl>, <decl pos:start="5:25" pos:end="5:35"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:25" pos:end="5:35">start_time1</name></decl>, <decl pos:start="5:38" pos:end="5:52"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:38" pos:end="5:52">start_time_text</name></decl>, <decl pos:start="5:55" pos:end="5:62"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:55" pos:end="5:62">end_time</name></decl>, <decl pos:start="5:65" pos:end="5:73"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:65" pos:end="5:73">end_time1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:20">duration</name></decl>, <decl pos:start="7:23" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:23" pos:end="7:31">duration1</name></decl>, <decl pos:start="7:34" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:34" pos:end="7:41">filesize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">AVProgram</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:16">p</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:14">start_time</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:26">INT64_MAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:19">start_time_text</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:31">INT64_MAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:12">end_time</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:24">INT64_MIN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:12">duration</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:24">INT64_MIN</name></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="77:5">for<control pos:start="25:8" pos:end="25:38">(<init pos:start="25:9" pos:end="25:14"><expr pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">i</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <literal type="number" pos:start="25:13" pos:end="25:13">0</literal></expr>;</init><condition pos:start="25:15" pos:end="25:33"><expr pos:start="25:15" pos:end="25:32"><name pos:start="25:15" pos:end="25:15">i</name> <operator pos:start="25:17" pos:end="25:17">&lt;</operator> <name pos:start="25:19" pos:end="25:32"><name pos:start="25:19" pos:end="25:20">ic</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:32">nb_streams</name></name></expr>;</condition> <incr pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><name pos:start="25:35" pos:end="25:35">i</name><operator pos:start="25:36" pos:end="25:37">++</operator></expr></incr>)</control> <block pos:start="25:40" pos:end="77:5">{<block_content pos:start="27:9" pos:end="75:9">

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:10">st</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:27"><name pos:start="27:14" pos:end="27:15">ic</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:24">streams</name><index pos:start="27:25" pos:end="27:27">[<expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="67:9"><if pos:start="29:9" pos:end="67:9">if <condition pos:start="29:12" pos:end="29:66">(<expr pos:start="29:13" pos:end="29:65"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:14">st</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:26">start_time</name></name> <operator pos:start="29:28" pos:end="29:29">!=</operator> <name pos:start="29:31" pos:end="29:44">AV_NOPTS_VALUE</name> <operator pos:start="29:46" pos:end="29:47">&amp;&amp;</operator> <name pos:start="29:49" pos:end="29:65"><name pos:start="29:49" pos:end="29:50">st</name><operator pos:start="29:51" pos:end="29:52">-&gt;</operator><name pos:start="29:53" pos:end="29:61">time_base</name><operator pos:start="29:62" pos:end="29:62">.</operator><name pos:start="29:63" pos:end="29:65">den</name></name></expr>)</condition> <block pos:start="29:68" pos:end="67:9">{<block_content pos:start="31:13" pos:end="65:13">

            <expr_stmt pos:start="31:13" pos:end="31:85"><expr pos:start="31:13" pos:end="31:84"><name pos:start="31:13" pos:end="31:23">start_time1</name><operator pos:start="31:24" pos:end="31:24">=</operator> <call pos:start="31:26" pos:end="31:84"><name pos:start="31:26" pos:end="31:37">av_rescale_q</name><argument_list pos:start="31:38" pos:end="31:84">(<argument pos:start="31:39" pos:end="31:52"><expr pos:start="31:39" pos:end="31:52"><name pos:start="31:39" pos:end="31:52"><name pos:start="31:39" pos:end="31:40">st</name><operator pos:start="31:41" pos:end="31:42">-&gt;</operator><name pos:start="31:43" pos:end="31:52">start_time</name></name></expr></argument>, <argument pos:start="31:55" pos:end="31:67"><expr pos:start="31:55" pos:end="31:67"><name pos:start="31:55" pos:end="31:67"><name pos:start="31:55" pos:end="31:56">st</name><operator pos:start="31:57" pos:end="31:58">-&gt;</operator><name pos:start="31:59" pos:end="31:67">time_base</name></name></expr></argument>, <argument pos:start="31:70" pos:end="31:83"><expr pos:start="31:70" pos:end="31:83"><name pos:start="31:70" pos:end="31:83">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="41:60"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="33:109">(<expr pos:start="33:17" pos:end="33:108"><name pos:start="33:17" pos:end="33:37"><name pos:start="33:17" pos:end="33:18">st</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:25">codec</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:37">codec_type</name></name> <operator pos:start="33:39" pos:end="33:40">==</operator> <name pos:start="33:42" pos:end="33:62">AVMEDIA_TYPE_SUBTITLE</name> <operator pos:start="33:64" pos:end="33:65">||</operator> <name pos:start="33:67" pos:end="33:87"><name pos:start="33:67" pos:end="33:68">st</name><operator pos:start="33:69" pos:end="33:70">-&gt;</operator><name pos:start="33:71" pos:end="33:75">codec</name><operator pos:start="33:76" pos:end="33:77">-&gt;</operator><name pos:start="33:78" pos:end="33:87">codec_type</name></name> <operator pos:start="33:89" pos:end="33:90">==</operator> <name pos:start="33:92" pos:end="33:108">AVMEDIA_TYPE_DATA</name></expr>)</condition> <block pos:start="33:111" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:50">

                <if_stmt pos:start="35:17" pos:end="37:50"><if pos:start="35:17" pos:end="37:50">if <condition pos:start="35:20" pos:end="35:50">(<expr pos:start="35:21" pos:end="35:49"><name pos:start="35:21" pos:end="35:31">start_time1</name> <operator pos:start="35:33" pos:end="35:33">&lt;</operator> <name pos:start="35:35" pos:end="35:49">start_time_text</name></expr>)</condition><block type="pseudo" pos:start="37:21" pos:end="37:50"><block_content pos:start="37:21" pos:end="37:50">

                    <expr_stmt pos:start="37:21" pos:end="37:50"><expr pos:start="37:21" pos:end="37:49"><name pos:start="37:21" pos:end="37:35">start_time_text</name> <operator pos:start="37:37" pos:end="37:37">=</operator> <name pos:start="37:39" pos:end="37:49">start_time1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="39:15" pos:end="41:60">else<block type="pseudo" pos:start="41:17" pos:end="41:60"><block_content pos:start="41:17" pos:end="41:60">

                <expr_stmt pos:start="41:17" pos:end="41:60"><expr pos:start="41:17" pos:end="41:59"><name pos:start="41:17" pos:end="41:26">start_time</name> <operator pos:start="41:28" pos:end="41:28">=</operator> <call pos:start="41:30" pos:end="41:59"><name pos:start="41:30" pos:end="41:34">FFMIN</name><argument_list pos:start="41:35" pos:end="41:59">(<argument pos:start="41:36" pos:end="41:45"><expr pos:start="41:36" pos:end="41:45"><name pos:start="41:36" pos:end="41:45">start_time</name></expr></argument>, <argument pos:start="41:48" pos:end="41:58"><expr pos:start="41:48" pos:end="41:58"><name pos:start="41:48" pos:end="41:58">start_time1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:39"><expr pos:start="43:13" pos:end="43:38"><name pos:start="43:13" pos:end="43:21">end_time1</name> <operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:38">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="53:13"><if pos:start="45:13" pos:end="53:13">if <condition pos:start="45:16" pos:end="45:47">(<expr pos:start="45:17" pos:end="45:46"><name pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:18">st</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:28">duration</name></name> <operator pos:start="45:30" pos:end="45:31">!=</operator> <name pos:start="45:33" pos:end="45:46">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="45:49" pos:end="53:13">{<block_content pos:start="47:17" pos:end="51:54">

                <expr_stmt pos:start="47:17" pos:end="49:86"><expr pos:start="47:17" pos:end="49:85"><name pos:start="47:17" pos:end="47:25">end_time1</name> <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:39">start_time1</name>

                          <operator pos:start="49:27" pos:end="49:27">+</operator> <call pos:start="49:29" pos:end="49:85"><name pos:start="49:29" pos:end="49:40">av_rescale_q</name><argument_list pos:start="49:41" pos:end="49:85">(<argument pos:start="49:42" pos:end="49:53"><expr pos:start="49:42" pos:end="49:53"><name pos:start="49:42" pos:end="49:53"><name pos:start="49:42" pos:end="49:43">st</name><operator pos:start="49:44" pos:end="49:45">-&gt;</operator><name pos:start="49:46" pos:end="49:53">duration</name></name></expr></argument>, <argument pos:start="49:56" pos:end="49:68"><expr pos:start="49:56" pos:end="49:68"><name pos:start="49:56" pos:end="49:68"><name pos:start="49:56" pos:end="49:57">st</name><operator pos:start="49:58" pos:end="49:59">-&gt;</operator><name pos:start="49:60" pos:end="49:68">time_base</name></name></expr></argument>, <argument pos:start="49:71" pos:end="49:84"><expr pos:start="49:71" pos:end="49:84"><name pos:start="49:71" pos:end="49:84">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:54"><expr pos:start="51:17" pos:end="51:53"><name pos:start="51:17" pos:end="51:24">end_time</name> <operator pos:start="51:26" pos:end="51:26">=</operator> <call pos:start="51:28" pos:end="51:53"><name pos:start="51:28" pos:end="51:32">FFMAX</name><argument_list pos:start="51:33" pos:end="51:53">(<argument pos:start="51:34" pos:end="51:41"><expr pos:start="51:34" pos:end="51:41"><name pos:start="51:34" pos:end="51:41">end_time</name></expr></argument>, <argument pos:start="51:44" pos:end="51:52"><expr pos:start="51:44" pos:end="51:52"><name pos:start="51:44" pos:end="51:52">end_time1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <for pos:start="55:13" pos:end="65:13">for<control pos:start="55:16" pos:end="55:72">(<init pos:start="55:17" pos:end="55:25"><expr pos:start="55:17" pos:end="55:24"><name pos:start="55:17" pos:end="55:17">p</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:24">NULL</name></expr>;</init> <condition pos:start="55:27" pos:end="55:70"><expr pos:start="55:27" pos:end="55:69"><operator pos:start="55:27" pos:end="55:27">(</operator><name pos:start="55:28" pos:end="55:28">p</name> <operator pos:start="55:30" pos:end="55:30">=</operator> <call pos:start="55:32" pos:end="55:68"><name pos:start="55:32" pos:end="55:58">av_find_program_from_stream</name><argument_list pos:start="55:59" pos:end="55:68">(<argument pos:start="55:60" pos:end="55:61"><expr pos:start="55:60" pos:end="55:61"><name pos:start="55:60" pos:end="55:61">ic</name></expr></argument>, <argument pos:start="55:64" pos:end="55:64"><expr pos:start="55:64" pos:end="55:64"><name pos:start="55:64" pos:end="55:64">p</name></expr></argument>, <argument pos:start="55:67" pos:end="55:67"><expr pos:start="55:67" pos:end="55:67"><name pos:start="55:67" pos:end="55:67">i</name></expr></argument>)</argument_list></call><operator pos:start="55:69" pos:end="55:69">)</operator></expr>;</condition> <incr/>)</control><block pos:start="55:73" pos:end="65:13">{<block_content pos:start="57:17" pos:end="63:44">

                <if_stmt pos:start="57:17" pos:end="59:48"><if pos:start="57:17" pos:end="59:48">if<condition pos:start="57:19" pos:end="57:82">(<expr pos:start="57:20" pos:end="57:81"><name pos:start="57:20" pos:end="57:32"><name pos:start="57:20" pos:end="57:20">p</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:32">start_time</name></name> <operator pos:start="57:34" pos:end="57:35">==</operator> <name pos:start="57:37" pos:end="57:50">AV_NOPTS_VALUE</name> <operator pos:start="57:52" pos:end="57:53">||</operator> <name pos:start="57:55" pos:end="57:67"><name pos:start="57:55" pos:end="57:55">p</name><operator pos:start="57:56" pos:end="57:57">-&gt;</operator><name pos:start="57:58" pos:end="57:67">start_time</name></name> <operator pos:start="57:69" pos:end="57:69">&gt;</operator> <name pos:start="57:71" pos:end="57:81">start_time1</name></expr>)</condition><block type="pseudo" pos:start="59:21" pos:end="59:48"><block_content pos:start="59:21" pos:end="59:48">

                    <expr_stmt pos:start="59:21" pos:end="59:48"><expr pos:start="59:21" pos:end="59:47"><name pos:start="59:21" pos:end="59:33"><name pos:start="59:21" pos:end="59:21">p</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:33">start_time</name></name> <operator pos:start="59:35" pos:end="59:35">=</operator> <name pos:start="59:37" pos:end="59:47">start_time1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="61:17" pos:end="63:44"><if pos:start="61:17" pos:end="63:44">if<condition pos:start="61:19" pos:end="61:43">(<expr pos:start="61:20" pos:end="61:42"><name pos:start="61:20" pos:end="61:30"><name pos:start="61:20" pos:end="61:20">p</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:30">end_time</name></name> <operator pos:start="61:32" pos:end="61:32">&lt;</operator> <name pos:start="61:34" pos:end="61:42">end_time1</name></expr>)</condition><block type="pseudo" pos:start="63:21" pos:end="63:44"><block_content pos:start="63:21" pos:end="63:44">

                    <expr_stmt pos:start="63:21" pos:end="63:44"><expr pos:start="63:21" pos:end="63:43"><name pos:start="63:21" pos:end="63:31"><name pos:start="63:21" pos:end="63:21">p</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:31">end_time</name></name> <operator pos:start="63:33" pos:end="63:33">=</operator> <name pos:start="63:35" pos:end="63:43">end_time1</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:43">(<expr pos:start="69:13" pos:end="69:42"><name pos:start="69:13" pos:end="69:24"><name pos:start="69:13" pos:end="69:14">st</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:24">duration</name></name> <operator pos:start="69:26" pos:end="69:27">!=</operator> <name pos:start="69:29" pos:end="69:42">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="69:45" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:50">

            <expr_stmt pos:start="71:13" pos:end="71:82"><expr pos:start="71:13" pos:end="71:81"><name pos:start="71:13" pos:end="71:21">duration1</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <call pos:start="71:25" pos:end="71:81"><name pos:start="71:25" pos:end="71:36">av_rescale_q</name><argument_list pos:start="71:37" pos:end="71:81">(<argument pos:start="71:38" pos:end="71:49"><expr pos:start="71:38" pos:end="71:49"><name pos:start="71:38" pos:end="71:49"><name pos:start="71:38" pos:end="71:39">st</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:49">duration</name></name></expr></argument>, <argument pos:start="71:52" pos:end="71:64"><expr pos:start="71:52" pos:end="71:64"><name pos:start="71:52" pos:end="71:64"><name pos:start="71:52" pos:end="71:53">st</name><operator pos:start="71:54" pos:end="71:55">-&gt;</operator><name pos:start="71:56" pos:end="71:64">time_base</name></name></expr></argument>, <argument pos:start="71:67" pos:end="71:80"><expr pos:start="71:67" pos:end="71:80"><name pos:start="71:67" pos:end="71:80">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:50"><expr pos:start="73:13" pos:end="73:49"><name pos:start="73:13" pos:end="73:20">duration</name> <operator pos:start="73:22" pos:end="73:22">=</operator> <call pos:start="73:24" pos:end="73:49"><name pos:start="73:24" pos:end="73:28">FFMAX</name><argument_list pos:start="73:29" pos:end="73:49">(<argument pos:start="73:30" pos:end="73:37"><expr pos:start="73:30" pos:end="73:37"><name pos:start="73:30" pos:end="73:37">duration</name></expr></argument>, <argument pos:start="73:40" pos:end="73:48"><expr pos:start="73:40" pos:end="73:48"><name pos:start="73:40" pos:end="73:48">duration1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="79:5" pos:end="85:128"><if pos:start="79:5" pos:end="81:37">if <condition pos:start="79:8" pos:end="79:113">(<expr pos:start="79:9" pos:end="79:112"><name pos:start="79:9" pos:end="79:18">start_time</name> <operator pos:start="79:20" pos:end="79:21">==</operator> <name pos:start="79:23" pos:end="79:31">INT64_MAX</name> <operator pos:start="79:33" pos:end="79:34">||</operator> <operator pos:start="79:36" pos:end="79:36">(</operator><name pos:start="79:37" pos:end="79:46">start_time</name> <operator pos:start="79:48" pos:end="79:48">&gt;</operator> <name pos:start="79:50" pos:end="79:64">start_time_text</name> <operator pos:start="79:66" pos:end="79:67">&amp;&amp;</operator> <name pos:start="79:69" pos:end="79:78">start_time</name> <operator pos:start="79:80" pos:end="79:80">-</operator> <name pos:start="79:82" pos:end="79:96">start_time_text</name> <operator pos:start="79:98" pos:end="79:98">&lt;</operator> <name pos:start="79:100" pos:end="79:111">AV_TIME_BASE</name><operator pos:start="79:112" pos:end="79:112">)</operator></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:37"><block_content pos:start="81:9" pos:end="81:37">

        <expr_stmt pos:start="81:9" pos:end="81:37"><expr pos:start="81:9" pos:end="81:36"><name pos:start="81:9" pos:end="81:18">start_time</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:36">start_time_text</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="83:5" pos:end="85:128">else if<condition pos:start="83:12" pos:end="83:41">(<expr pos:start="83:13" pos:end="83:40"><name pos:start="83:13" pos:end="83:22">start_time</name> <operator pos:start="83:24" pos:end="83:24">&gt;</operator> <name pos:start="83:26" pos:end="83:40">start_time_text</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:128"><block_content pos:start="85:9" pos:end="85:128">

        <expr_stmt pos:start="85:9" pos:end="85:128"><expr pos:start="85:9" pos:end="85:127"><call pos:start="85:9" pos:end="85:127"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="85:127">(<argument pos:start="85:16" pos:end="85:17"><expr pos:start="85:16" pos:end="85:17"><name pos:start="85:16" pos:end="85:17">ic</name></expr></argument>, <argument pos:start="85:20" pos:end="85:33"><expr pos:start="85:20" pos:end="85:33"><name pos:start="85:20" pos:end="85:33">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="85:36" pos:end="85:87"><expr pos:start="85:36" pos:end="85:87"><literal type="string" pos:start="85:36" pos:end="85:87">"Ignoring outlier non primary stream starttime %f\n"</literal></expr></argument>, <argument pos:start="85:90" pos:end="85:126"><expr pos:start="85:90" pos:end="85:126"><name pos:start="85:90" pos:end="85:104">start_time_text</name> <operator pos:start="85:106" pos:end="85:106">/</operator> <operator pos:start="85:108" pos:end="85:108">(</operator><name pos:start="85:109" pos:end="85:113">float</name><operator pos:start="85:114" pos:end="85:114">)</operator><name pos:start="85:115" pos:end="85:126">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="113:5"><if pos:start="89:5" pos:end="113:5">if <condition pos:start="89:8" pos:end="89:32">(<expr pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:18">start_time</name> <operator pos:start="89:20" pos:end="89:21">!=</operator> <name pos:start="89:23" pos:end="89:31">INT64_MAX</name></expr>)</condition> <block pos:start="89:34" pos:end="113:5">{<block_content pos:start="91:9" pos:end="111:9">

        <expr_stmt pos:start="91:9" pos:end="91:36"><expr pos:start="91:9" pos:end="91:35"><name pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:10">ic</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:22">start_time</name></name> <operator pos:start="91:24" pos:end="91:24">=</operator> <name pos:start="91:26" pos:end="91:35">start_time</name></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="111:9"><if pos:start="93:9" pos:end="111:9">if <condition pos:start="93:12" pos:end="93:34">(<expr pos:start="93:13" pos:end="93:33"><name pos:start="93:13" pos:end="93:20">end_time</name> <operator pos:start="93:22" pos:end="93:23">!=</operator> <name pos:start="93:25" pos:end="93:33">INT64_MIN</name></expr>)</condition> <block pos:start="93:36" pos:end="111:9">{<block_content pos:start="95:13" pos:end="109:66">

            <if_stmt pos:start="95:13" pos:end="109:66"><if pos:start="95:13" pos:end="107:13">if <condition pos:start="95:16" pos:end="95:32">(<expr pos:start="95:17" pos:end="95:31"><name pos:start="95:17" pos:end="95:31"><name pos:start="95:17" pos:end="95:18">ic</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:31">nb_programs</name></name></expr>)</condition> <block pos:start="95:34" pos:end="107:13">{<block_content pos:start="97:17" pos:end="105:17">

                <for pos:start="97:17" pos:end="105:17">for <control pos:start="97:21" pos:end="97:49">(<init pos:start="97:22" pos:end="97:25"><expr pos:start="97:22" pos:end="97:24"><name pos:start="97:22" pos:end="97:22">i</name><operator pos:start="97:23" pos:end="97:23">=</operator><literal type="number" pos:start="97:24" pos:end="97:24">0</literal></expr>;</init> <condition pos:start="97:27" pos:end="97:44"><expr pos:start="97:27" pos:end="97:43"><name pos:start="97:27" pos:end="97:27">i</name><operator pos:start="97:28" pos:end="97:28">&lt;</operator><name pos:start="97:29" pos:end="97:43"><name pos:start="97:29" pos:end="97:30">ic</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:43">nb_programs</name></name></expr>;</condition> <incr pos:start="97:46" pos:end="97:48"><expr pos:start="97:46" pos:end="97:48"><name pos:start="97:46" pos:end="97:46">i</name><operator pos:start="97:47" pos:end="97:48">++</operator></expr></incr>)</control> <block pos:start="97:51" pos:end="105:17">{<block_content pos:start="99:21" pos:end="103:80">

                    <expr_stmt pos:start="99:21" pos:end="99:40"><expr pos:start="99:21" pos:end="99:39"><name pos:start="99:21" pos:end="99:21">p</name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:39"><name pos:start="99:25" pos:end="99:26">ic</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:36">programs</name><index pos:start="99:37" pos:end="99:39">[<expr pos:start="99:38" pos:end="99:38"><name pos:start="99:38" pos:end="99:38">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="101:21" pos:end="103:80"><if pos:start="101:21" pos:end="103:80">if<condition pos:start="101:23" pos:end="101:86">(<expr pos:start="101:24" pos:end="101:85"><name pos:start="101:24" pos:end="101:36"><name pos:start="101:24" pos:end="101:24">p</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:36">start_time</name></name> <operator pos:start="101:38" pos:end="101:39">!=</operator> <name pos:start="101:41" pos:end="101:54">AV_NOPTS_VALUE</name> <operator pos:start="101:56" pos:end="101:57">&amp;&amp;</operator> <name pos:start="101:59" pos:end="101:69"><name pos:start="101:59" pos:end="101:59">p</name><operator pos:start="101:60" pos:end="101:61">-&gt;</operator><name pos:start="101:62" pos:end="101:69">end_time</name></name> <operator pos:start="101:71" pos:end="101:71">&gt;</operator> <name pos:start="101:73" pos:end="101:85"><name pos:start="101:73" pos:end="101:73">p</name><operator pos:start="101:74" pos:end="101:75">-&gt;</operator><name pos:start="101:76" pos:end="101:85">start_time</name></name></expr>)</condition><block type="pseudo" pos:start="103:25" pos:end="103:80"><block_content pos:start="103:25" pos:end="103:80">

                        <expr_stmt pos:start="103:25" pos:end="103:80"><expr pos:start="103:25" pos:end="103:79"><name pos:start="103:25" pos:end="103:32">duration</name> <operator pos:start="103:34" pos:end="103:34">=</operator> <call pos:start="103:36" pos:end="103:79"><name pos:start="103:36" pos:end="103:40">FFMAX</name><argument_list pos:start="103:41" pos:end="103:79">(<argument pos:start="103:42" pos:end="103:49"><expr pos:start="103:42" pos:end="103:49"><name pos:start="103:42" pos:end="103:49">duration</name></expr></argument>, <argument pos:start="103:52" pos:end="103:78"><expr pos:start="103:52" pos:end="103:78"><name pos:start="103:52" pos:end="103:62"><name pos:start="103:52" pos:end="103:52">p</name><operator pos:start="103:53" pos:end="103:54">-&gt;</operator><name pos:start="103:55" pos:end="103:62">end_time</name></name> <operator pos:start="103:64" pos:end="103:64">-</operator> <name pos:start="103:66" pos:end="103:78"><name pos:start="103:66" pos:end="103:66">p</name><operator pos:start="103:67" pos:end="103:68">-&gt;</operator><name pos:start="103:69" pos:end="103:78">start_time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="107:15" pos:end="109:66">else<block type="pseudo" pos:start="109:17" pos:end="109:66"><block_content pos:start="109:17" pos:end="109:66">

                <expr_stmt pos:start="109:17" pos:end="109:66"><expr pos:start="109:17" pos:end="109:65"><name pos:start="109:17" pos:end="109:24">duration</name> <operator pos:start="109:26" pos:end="109:26">=</operator> <call pos:start="109:28" pos:end="109:65"><name pos:start="109:28" pos:end="109:32">FFMAX</name><argument_list pos:start="109:33" pos:end="109:65">(<argument pos:start="109:34" pos:end="109:41"><expr pos:start="109:34" pos:end="109:41"><name pos:start="109:34" pos:end="109:41">duration</name></expr></argument>, <argument pos:start="109:44" pos:end="109:64"><expr pos:start="109:44" pos:end="109:64"><name pos:start="109:44" pos:end="109:51">end_time</name> <operator pos:start="109:53" pos:end="109:53">-</operator> <name pos:start="109:55" pos:end="109:64">start_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="119:5"><if pos:start="115:5" pos:end="119:5">if <condition pos:start="115:8" pos:end="115:80">(<expr pos:start="115:9" pos:end="115:79"><name pos:start="115:9" pos:end="115:16">duration</name> <operator pos:start="115:18" pos:end="115:19">!=</operator> <name pos:start="115:21" pos:end="115:29">INT64_MIN</name> <operator pos:start="115:31" pos:end="115:32">&amp;&amp;</operator> <name pos:start="115:34" pos:end="115:41">duration</name> <operator pos:start="115:43" pos:end="115:43">&gt;</operator> <literal type="number" pos:start="115:45" pos:end="115:45">0</literal> <operator pos:start="115:47" pos:end="115:48">&amp;&amp;</operator> <name pos:start="115:50" pos:end="115:61"><name pos:start="115:50" pos:end="115:51">ic</name><operator pos:start="115:52" pos:end="115:53">-&gt;</operator><name pos:start="115:54" pos:end="115:61">duration</name></name> <operator pos:start="115:63" pos:end="115:64">==</operator> <name pos:start="115:66" pos:end="115:79">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="115:82" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:32">

        <expr_stmt pos:start="117:9" pos:end="117:32"><expr pos:start="117:9" pos:end="117:31"><name pos:start="117:9" pos:end="117:20"><name pos:start="117:9" pos:end="117:10">ic</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:20">duration</name></name> <operator pos:start="117:22" pos:end="117:22">=</operator> <name pos:start="117:24" pos:end="117:31">duration</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="121:9" pos:end="129:9"><if pos:start="121:9" pos:end="129:9">if <condition pos:start="121:12" pos:end="121:91">(<expr pos:start="121:13" pos:end="121:90"><name pos:start="121:13" pos:end="121:18"><name pos:start="121:13" pos:end="121:14">ic</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:18">pb</name></name> <operator pos:start="121:20" pos:end="121:21">&amp;&amp;</operator> <operator pos:start="121:23" pos:end="121:23">(</operator><name pos:start="121:24" pos:end="121:31">filesize</name> <operator pos:start="121:33" pos:end="121:33">=</operator> <call pos:start="121:35" pos:end="121:51"><name pos:start="121:35" pos:end="121:43">avio_size</name><argument_list pos:start="121:44" pos:end="121:51">(<argument pos:start="121:45" pos:end="121:50"><expr pos:start="121:45" pos:end="121:50"><name pos:start="121:45" pos:end="121:50"><name pos:start="121:45" pos:end="121:46">ic</name><operator pos:start="121:47" pos:end="121:48">-&gt;</operator><name pos:start="121:49" pos:end="121:50">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="121:52" pos:end="121:52">)</operator> <operator pos:start="121:54" pos:end="121:54">&gt;</operator> <literal type="number" pos:start="121:56" pos:end="121:56">0</literal> <operator pos:start="121:58" pos:end="121:59">&amp;&amp;</operator> <name pos:start="121:61" pos:end="121:72"><name pos:start="121:61" pos:end="121:62">ic</name><operator pos:start="121:63" pos:end="121:64">-&gt;</operator><name pos:start="121:65" pos:end="121:72">duration</name></name> <operator pos:start="121:74" pos:end="121:75">!=</operator> <name pos:start="121:77" pos:end="121:90">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="121:93" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:37">

            <comment type="block" pos:start="123:13" pos:end="123:37">/* compute the bitrate */</comment>

            <expr_stmt pos:start="125:13" pos:end="127:37"><expr pos:start="125:13" pos:end="127:36"><name pos:start="125:13" pos:end="125:24"><name pos:start="125:13" pos:end="125:14">ic</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:24">bit_rate</name></name> <operator pos:start="125:26" pos:end="125:26">=</operator> <operator pos:start="125:28" pos:end="125:28">(</operator><name pos:start="125:29" pos:end="125:34">double</name><operator pos:start="125:35" pos:end="125:35">)</operator><name pos:start="125:36" pos:end="125:43">filesize</name> <operator pos:start="125:45" pos:end="125:45">*</operator> <literal type="number" pos:start="125:47" pos:end="125:49">8.0</literal> <operator pos:start="125:51" pos:end="125:51">*</operator> <name pos:start="125:53" pos:end="125:64">AV_TIME_BASE</name> <operator pos:start="125:66" pos:end="125:66">/</operator>

                <operator pos:start="127:17" pos:end="127:17">(</operator><name pos:start="127:18" pos:end="127:23">double</name><operator pos:start="127:24" pos:end="127:24">)</operator><name pos:start="127:25" pos:end="127:36"><name pos:start="127:25" pos:end="127:26">ic</name><operator pos:start="127:27" pos:end="127:28">-&gt;</operator><name pos:start="127:29" pos:end="127:36">duration</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
