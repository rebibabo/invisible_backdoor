<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14341.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:38">sunrast_encode_init</name><parameter_list pos:start="1:39" pos:end="1:61">(<parameter pos:start="1:40" pos:end="1:60"><decl pos:start="1:40" pos:end="1:60"><type pos:start="1:40" pos:end="1:55"><name pos:start="1:40" pos:end="1:53">AVCodecContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:60">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SUNRASTContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="29:5">switch <condition pos:start="9:12" pos:end="9:30">(<expr pos:start="9:13" pos:end="9:29"><name pos:start="9:13" pos:end="9:29"><name pos:start="9:13" pos:end="9:17">avctx</name><operator pos:start="9:18" pos:end="9:19">-&gt;</operator><name pos:start="9:20" pos:end="9:29">coder_type</name></name></expr>)</condition> <block pos:start="9:32" pos:end="29:5">{<block_content pos:start="11:5" pos:end="27:31">

    <case pos:start="11:5" pos:end="11:27">case <expr pos:start="11:10" pos:end="11:26"><name pos:start="11:10" pos:end="11:26">FF_CODER_TYPE_RLE</name></expr>:</case>

        <expr_stmt pos:start="13:9" pos:end="13:34"><expr pos:start="13:9" pos:end="13:33"><name pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:15">type</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <name pos:start="13:19" pos:end="13:33">RT_BYTE_ENCODED</name></expr>;</expr_stmt>

        <break pos:start="15:9" pos:end="15:14">break;</break>

    <case pos:start="17:5" pos:end="17:27">case <expr pos:start="17:10" pos:end="17:26"><name pos:start="17:10" pos:end="17:26">FF_CODER_TYPE_RAW</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:15">type</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:29">RT_STANDARD</name></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <default pos:start="23:5" pos:end="23:12">default:</default>

        <expr_stmt pos:start="25:9" pos:end="25:60"><expr pos:start="25:9" pos:end="25:59"><call pos:start="25:9" pos:end="25:59"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:59">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:37" pos:end="25:58"><expr pos:start="25:37" pos:end="25:58"><literal type="string" pos:start="25:37" pos:end="25:58">"invalid coder_type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:9">avctx</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:22">coded_frame</name></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <call pos:start="33:26" pos:end="33:41"><name pos:start="33:26" pos:end="33:39">av_frame_alloc</name><argument_list pos:start="33:40" pos:end="33:41">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:31"><if pos:start="35:5" pos:end="37:31">if <condition pos:start="35:8" pos:end="35:28">(<expr pos:start="35:9" pos:end="35:27"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:27"><name pos:start="35:10" pos:end="35:14">avctx</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:27">coded_frame</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:31"><block_content pos:start="37:9" pos:end="37:31">

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:9">avctx</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:22">coded_frame</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:33">key_frame</name></name> <operator pos:start="41:35" pos:end="41:35">=</operator> <literal type="number" pos:start="41:37" pos:end="41:37">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:54"><expr pos:start="43:5" pos:end="43:53"><name pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:9">avctx</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:22">coded_frame</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:33">pict_type</name></name> <operator pos:start="43:35" pos:end="43:35">=</operator> <name pos:start="43:37" pos:end="43:53">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:14">maptype</name></name>                    <operator pos:start="45:35" pos:end="45:35">=</operator> <name pos:start="45:37" pos:end="45:44">RMT_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:38"><expr pos:start="47:5" pos:end="47:37"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:16">maplength</name></name>                  <operator pos:start="47:35" pos:end="47:35">=</operator> <literal type="number" pos:start="47:37" pos:end="47:37">0</literal></expr>;</expr_stmt>



    <switch pos:start="51:5" pos:end="83:5">switch <condition pos:start="51:12" pos:end="51:27">(<expr pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:17">avctx</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:26">pix_fmt</name></name></expr>)</condition> <block pos:start="51:29" pos:end="83:5">{<block_content pos:start="53:5" pos:end="81:27">

    <case pos:start="53:5" pos:end="53:30">case <expr pos:start="53:10" pos:end="53:29"><name pos:start="53:10" pos:end="53:29">AV_PIX_FMT_MONOWHITE</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:21"><expr pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:16">depth</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <literal type="number" pos:start="55:20" pos:end="55:20">1</literal></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:26">case <expr pos:start="59:10" pos:end="59:24"><name pos:start="59:10" pos:end="59:24">AV_PIX_FMT_PAL8</name></expr> :</case>

        <expr_stmt pos:start="61:9" pos:end="61:37"><expr pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:18">maptype</name></name>   <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:36">RMT_EQUAL_RGB</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:31"><expr pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:20">maplength</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <literal type="number" pos:start="63:24" pos:end="63:24">3</literal> <operator pos:start="63:26" pos:end="63:26">*</operator> <literal type="number" pos:start="63:28" pos:end="63:30">256</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="65:9" pos:end="65:26">/* fall-through */</comment>

    <case pos:start="67:5" pos:end="67:26">case <expr pos:start="67:10" pos:end="67:25"><name pos:start="67:10" pos:end="67:25">AV_PIX_FMT_GRAY8</name></expr>:</case>

        <expr_stmt pos:start="69:9" pos:end="69:21"><expr pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:16">depth</name></name> <operator pos:start="69:18" pos:end="69:18">=</operator> <literal type="number" pos:start="69:20" pos:end="69:20">8</literal></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:26">case <expr pos:start="73:10" pos:end="73:25"><name pos:start="73:10" pos:end="73:25">AV_PIX_FMT_BGR24</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:22"><expr pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:16">depth</name></name> <operator pos:start="75:18" pos:end="75:18">=</operator> <literal type="number" pos:start="75:20" pos:end="75:21">24</literal></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <default pos:start="79:5" pos:end="79:12">default:</default>

        <return pos:start="81:9" pos:end="81:27">return <expr pos:start="81:16" pos:end="81:26"><name pos:start="81:16" pos:end="81:26">AVERROR_BUG</name></expr>;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="85:5" pos:end="85:76"><expr pos:start="85:5" pos:end="85:75"><name pos:start="85:5" pos:end="85:13"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:13">length</name></name> <operator pos:start="85:15" pos:end="85:15">=</operator> <name pos:start="85:17" pos:end="85:29"><name pos:start="85:17" pos:end="85:21">avctx</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:29">height</name></name> <operator pos:start="85:31" pos:end="85:31">*</operator> <operator pos:start="85:33" pos:end="85:33">(</operator><call pos:start="85:34" pos:end="85:69"><name pos:start="85:34" pos:end="85:40">FFALIGN</name><argument_list pos:start="85:41" pos:end="85:69">(<argument pos:start="85:42" pos:end="85:64"><expr pos:start="85:42" pos:end="85:64"><name pos:start="85:42" pos:end="85:53"><name pos:start="85:42" pos:end="85:46">avctx</name><operator pos:start="85:47" pos:end="85:48">-&gt;</operator><name pos:start="85:49" pos:end="85:53">width</name></name> <operator pos:start="85:55" pos:end="85:55">*</operator> <name pos:start="85:57" pos:end="85:64"><name pos:start="85:57" pos:end="85:57">s</name><operator pos:start="85:58" pos:end="85:59">-&gt;</operator><name pos:start="85:60" pos:end="85:64">depth</name></name></expr></argument>, <argument pos:start="85:67" pos:end="85:68"><expr pos:start="85:67" pos:end="85:68"><literal type="number" pos:start="85:67" pos:end="85:68">16</literal></expr></argument>)</argument_list></call> <operator pos:start="85:71" pos:end="85:72">&gt;&gt;</operator> <literal type="number" pos:start="85:74" pos:end="85:74">3</literal><operator pos:start="85:75" pos:end="85:75">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="89:65"><expr pos:start="87:5" pos:end="89:64"><name pos:start="87:5" pos:end="87:11"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:11">size</name></name>   <operator pos:start="87:15" pos:end="87:15">=</operator> <literal type="number" pos:start="87:17" pos:end="87:20">32</literal> <operator pos:start="87:20" pos:end="87:20">+</operator> <name pos:start="87:22" pos:end="87:33"><name pos:start="87:22" pos:end="87:22">s</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:33">maplength</name></name> <operator pos:start="87:35" pos:end="87:35">+</operator>

                <name pos:start="89:17" pos:end="89:25"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:25">length</name></name> <operator pos:start="89:27" pos:end="89:27">*</operator> <operator pos:start="89:29" pos:end="89:29">(</operator><ternary pos:start="89:30" pos:end="89:63"><condition pos:start="89:30" pos:end="89:57"><expr pos:start="89:30" pos:end="89:55"><name pos:start="89:30" pos:end="89:36"><name pos:start="89:30" pos:end="89:30">s</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:36">type</name></name> <operator pos:start="89:38" pos:end="89:39">==</operator> <name pos:start="89:41" pos:end="89:55">RT_BYTE_ENCODED</name></expr> ?</condition><then pos:start="89:59" pos:end="89:59"> <expr pos:start="89:59" pos:end="89:59"><literal type="number" pos:start="89:59" pos:end="89:59">2</literal></expr> </then><else pos:start="89:61" pos:end="89:63">: <expr pos:start="89:63" pos:end="89:63"><literal type="number" pos:start="89:63" pos:end="89:63">1</literal></expr></else></ternary><operator pos:start="89:64" pos:end="89:64">)</operator></expr>;</expr_stmt>



    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
