<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8805.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">monitor_parse</name><parameter_list pos:start="1:26" pos:end="1:63">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">optarg</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">mode</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:27">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:35">monitor_device_index</name> <init pos:start="5:37" pos:end="5:39">= <expr pos:start="5:39" pos:end="5:39"><literal type="number" pos:start="5:39" pos:end="5:39">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">QemuOpts</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:18"><name pos:start="11:10" pos:end="11:14">label</name><index pos:start="11:15" pos:end="11:18">[<expr pos:start="11:16" pos:end="11:17"><literal type="number" pos:start="11:16" pos:end="11:17">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">def</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="43:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:41">(<expr pos:start="17:9" pos:end="17:40"><call pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:16">strstart</name><argument_list pos:start="17:17" pos:end="17:40">(<argument pos:start="17:18" pos:end="17:23"><expr pos:start="17:18" pos:end="17:23"><name pos:start="17:18" pos:end="17:23">optarg</name></expr></argument>, <argument pos:start="17:26" pos:end="17:35"><expr pos:start="17:26" pos:end="17:35"><literal type="string" pos:start="17:26" pos:end="17:35">"chardev:"</literal></expr></argument>, <argument pos:start="17:38" pos:end="17:39"><expr pos:start="17:38" pos:end="17:39"><operator pos:start="17:38" pos:end="17:38">&amp;</operator><name pos:start="17:39" pos:end="17:39">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:43" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:48">

        <expr_stmt pos:start="19:9" pos:end="19:48"><expr pos:start="19:9" pos:end="19:47"><call pos:start="19:9" pos:end="19:47"><name pos:start="19:9" pos:end="19:16">snprintf</name><argument_list pos:start="19:17" pos:end="19:47">(<argument pos:start="19:18" pos:end="19:22"><expr pos:start="19:18" pos:end="19:22"><name pos:start="19:18" pos:end="19:22">label</name></expr></argument>, <argument pos:start="19:25" pos:end="19:37"><expr pos:start="19:25" pos:end="19:37"><sizeof pos:start="19:25" pos:end="19:37">sizeof<argument_list pos:start="19:31" pos:end="19:37">(<argument pos:start="19:32" pos:end="19:36"><expr pos:start="19:32" pos:end="19:36"><name pos:start="19:32" pos:end="19:36">label</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="19:40" pos:end="19:43"><expr pos:start="19:40" pos:end="19:43"><literal type="string" pos:start="19:40" pos:end="19:43">"%s"</literal></expr></argument>, <argument pos:start="19:46" pos:end="19:46"><expr pos:start="19:46" pos:end="19:46"><name pos:start="19:46" pos:end="19:46">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="43:5">else <block pos:start="21:12" pos:end="43:5">{<block_content pos:start="23:9" pos:end="41:9">

        <expr_stmt pos:start="23:9" pos:end="25:39"><expr pos:start="23:9" pos:end="25:38"><call pos:start="23:9" pos:end="25:38"><name pos:start="23:9" pos:end="23:16">snprintf</name><argument_list pos:start="23:17" pos:end="25:38">(<argument pos:start="23:18" pos:end="23:22"><expr pos:start="23:18" pos:end="23:22"><name pos:start="23:18" pos:end="23:22">label</name></expr></argument>, <argument pos:start="23:25" pos:end="23:37"><expr pos:start="23:25" pos:end="23:37"><sizeof pos:start="23:25" pos:end="23:37">sizeof<argument_list pos:start="23:31" pos:end="23:37">(<argument pos:start="23:32" pos:end="23:36"><expr pos:start="23:32" pos:end="23:36"><name pos:start="23:32" pos:end="23:36">label</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="23:40" pos:end="23:57"><expr pos:start="23:40" pos:end="23:57"><literal type="string" pos:start="23:40" pos:end="23:57">"compat_monitor%d"</literal></expr></argument>,

                 <argument pos:start="25:18" pos:end="25:37"><expr pos:start="25:18" pos:end="25:37"><name pos:start="25:18" pos:end="25:37">monitor_device_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:38">(<expr pos:start="27:13" pos:end="27:37"><name pos:start="27:13" pos:end="27:32">monitor_device_index</name> <operator pos:start="27:34" pos:end="27:35">==</operator> <literal type="number" pos:start="27:37" pos:end="27:37">0</literal></expr>)</condition> <block pos:start="27:40" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:20">

            <expr_stmt pos:start="29:13" pos:end="29:20"><expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:15">def</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <literal type="number" pos:start="29:19" pos:end="29:19">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:52"><expr pos:start="33:9" pos:end="33:51"><name pos:start="33:9" pos:end="33:12">opts</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:51"><name pos:start="33:16" pos:end="33:36">qemu_chr_parse_compat</name><argument_list pos:start="33:37" pos:end="33:51">(<argument pos:start="33:38" pos:end="33:42"><expr pos:start="33:38" pos:end="33:42"><name pos:start="33:38" pos:end="33:42">label</name></expr></argument>, <argument pos:start="33:45" pos:end="33:50"><expr pos:start="33:45" pos:end="33:50"><name pos:start="33:45" pos:end="33:50">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:18">(<expr pos:start="35:13" pos:end="35:17"><operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:17">opts</name></expr>)</condition> <block pos:start="35:20" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:20">

            <expr_stmt pos:start="37:13" pos:end="37:57"><expr pos:start="37:13" pos:end="37:56"><call pos:start="37:13" pos:end="37:56"><name pos:start="37:13" pos:end="37:19">fprintf</name><argument_list pos:start="37:20" pos:end="37:56">(<argument pos:start="37:21" pos:end="37:26"><expr pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:26">stderr</name></expr></argument>, <argument pos:start="37:29" pos:end="37:47"><expr pos:start="37:29" pos:end="37:47"><literal type="string" pos:start="37:29" pos:end="37:47">"parse error: %s\n"</literal></expr></argument>, <argument pos:start="37:50" pos:end="37:55"><expr pos:start="37:50" pos:end="37:55"><name pos:start="37:50" pos:end="37:55">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:20"><expr pos:start="39:13" pos:end="39:19"><call pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:16">exit</name><argument_list pos:start="39:17" pos:end="39:19">(<argument pos:start="39:18" pos:end="39:18"><expr pos:start="39:18" pos:end="39:18"><literal type="number" pos:start="39:18" pos:end="39:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:61"><expr pos:start="47:5" pos:end="47:60"><name pos:start="47:5" pos:end="47:8">opts</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <call pos:start="47:12" pos:end="47:60"><name pos:start="47:12" pos:end="47:27">qemu_opts_create</name><argument_list pos:start="47:28" pos:end="47:60">(<argument pos:start="47:29" pos:end="47:49"><expr pos:start="47:29" pos:end="47:49"><call pos:start="47:29" pos:end="47:49"><name pos:start="47:29" pos:end="47:42">qemu_find_opts</name><argument_list pos:start="47:43" pos:end="47:49">(<argument pos:start="47:44" pos:end="47:48"><expr pos:start="47:44" pos:end="47:48"><literal type="string" pos:start="47:44" pos:end="47:48">"mon"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:52" pos:end="47:56"><expr pos:start="47:52" pos:end="47:56"><name pos:start="47:52" pos:end="47:56">label</name></expr></argument>, <argument pos:start="47:59" pos:end="47:59"><expr pos:start="47:59" pos:end="47:59"><literal type="number" pos:start="47:59" pos:end="47:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:14">(<expr pos:start="49:9" pos:end="49:13"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:13">opts</name></expr>)</condition> <block pos:start="49:16" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:16">

        <expr_stmt pos:start="51:9" pos:end="51:58"><expr pos:start="51:9" pos:end="51:57"><call pos:start="51:9" pos:end="51:57"><name pos:start="51:9" pos:end="51:15">fprintf</name><argument_list pos:start="51:16" pos:end="51:57">(<argument pos:start="51:17" pos:end="51:22"><expr pos:start="51:17" pos:end="51:22"><name pos:start="51:17" pos:end="51:22">stderr</name></expr></argument>, <argument pos:start="51:25" pos:end="51:49"><expr pos:start="51:25" pos:end="51:49"><literal type="string" pos:start="51:25" pos:end="51:49">"duplicate chardev: %s\n"</literal></expr></argument>, <argument pos:start="51:52" pos:end="51:56"><expr pos:start="51:52" pos:end="51:56"><name pos:start="51:52" pos:end="51:56">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:16"><expr pos:start="53:9" pos:end="53:15"><call pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:12">exit</name><argument_list pos:start="53:13" pos:end="53:15">(<argument pos:start="53:14" pos:end="53:14"><expr pos:start="53:14" pos:end="53:14"><literal type="number" pos:start="53:14" pos:end="53:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:37"><expr pos:start="57:5" pos:end="57:36"><call pos:start="57:5" pos:end="57:36"><name pos:start="57:5" pos:end="57:16">qemu_opt_set</name><argument_list pos:start="57:17" pos:end="57:36">(<argument pos:start="57:18" pos:end="57:21"><expr pos:start="57:18" pos:end="57:21"><name pos:start="57:18" pos:end="57:21">opts</name></expr></argument>, <argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><literal type="string" pos:start="57:24" pos:end="57:29">"mode"</literal></expr></argument>, <argument pos:start="57:32" pos:end="57:35"><expr pos:start="57:32" pos:end="57:35"><name pos:start="57:32" pos:end="57:35">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:41"><expr pos:start="59:5" pos:end="59:40"><call pos:start="59:5" pos:end="59:40"><name pos:start="59:5" pos:end="59:16">qemu_opt_set</name><argument_list pos:start="59:17" pos:end="59:40">(<argument pos:start="59:18" pos:end="59:21"><expr pos:start="59:18" pos:end="59:21"><name pos:start="59:18" pos:end="59:21">opts</name></expr></argument>, <argument pos:start="59:24" pos:end="59:32"><expr pos:start="59:24" pos:end="59:32"><literal type="string" pos:start="59:24" pos:end="59:32">"chardev"</literal></expr></argument>, <argument pos:start="59:35" pos:end="59:39"><expr pos:start="59:35" pos:end="59:39"><name pos:start="59:35" pos:end="59:39">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="63:44"><if pos:start="61:5" pos:end="63:44">if <condition pos:start="61:8" pos:end="61:12">(<expr pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">def</name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:44"><block_content pos:start="63:9" pos:end="63:44">

        <expr_stmt pos:start="63:9" pos:end="63:44"><expr pos:start="63:9" pos:end="63:43"><call pos:start="63:9" pos:end="63:43"><name pos:start="63:9" pos:end="63:20">qemu_opt_set</name><argument_list pos:start="63:21" pos:end="63:43">(<argument pos:start="63:22" pos:end="63:25"><expr pos:start="63:22" pos:end="63:25"><name pos:start="63:22" pos:end="63:25">opts</name></expr></argument>, <argument pos:start="63:28" pos:end="63:36"><expr pos:start="63:28" pos:end="63:36"><literal type="string" pos:start="63:28" pos:end="63:36">"default"</literal></expr></argument>, <argument pos:start="63:39" pos:end="63:42"><expr pos:start="63:39" pos:end="63:42"><literal type="string" pos:start="63:39" pos:end="63:42">"on"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:27"><expr pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:24">monitor_device_index</name><operator pos:start="65:25" pos:end="65:26">++</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
