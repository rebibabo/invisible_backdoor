<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18880.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">nbd_negotiate_read</name><parameter_list pos:start="1:30" pos:end="1:73">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:40">QIOChannel</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ioc</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:59">buffer</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:72"><decl pos:start="1:62" pos:end="1:72"><type pos:start="1:62" pos:end="1:72"><name pos:start="1:62" pos:end="1:67">size_t</name></type> <name pos:start="1:69" pos:end="1:72">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="29:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">ssize_t</name></type> <name pos:start="5:13" pos:end="5:15">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">guint</name></type> <name pos:start="7:11" pos:end="7:15">watch</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:32"><expr pos:start="11:5" pos:end="11:31"><call pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:31">(<argument pos:start="11:12" pos:end="11:30"><expr pos:start="11:12" pos:end="11:30"><call pos:start="11:12" pos:end="11:30"><name pos:start="11:12" pos:end="11:28">qemu_in_coroutine</name><argument_list pos:start="11:29" pos:end="11:30">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:46">/* Negotiation are always in main loop. */</comment>

    <expr_stmt pos:start="15:5" pos:end="23:40"><expr pos:start="15:5" pos:end="23:39"><name pos:start="15:5" pos:end="15:9">watch</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="23:39"><name pos:start="15:13" pos:end="15:33">qio_channel_add_watch</name><argument_list pos:start="15:34" pos:end="23:39">(<argument pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><name pos:start="15:35" pos:end="15:37">ioc</name></expr></argument>,

                                  <argument pos:start="17:35" pos:end="17:41"><expr pos:start="17:35" pos:end="17:41"><name pos:start="17:35" pos:end="17:41">G_IO_IN</name></expr></argument>,

                                  <argument pos:start="19:35" pos:end="19:56"><expr pos:start="19:35" pos:end="19:56"><name pos:start="19:35" pos:end="19:56">nbd_negotiate_continue</name></expr></argument>,

                                  <argument pos:start="21:35" pos:end="21:55"><expr pos:start="21:35" pos:end="21:55"><call pos:start="21:35" pos:end="21:55"><name pos:start="21:35" pos:end="21:53">qemu_coroutine_self</name><argument_list pos:start="21:54" pos:end="21:55">()</argument_list></call></expr></argument>,

                                  <argument pos:start="23:35" pos:end="23:38"><expr pos:start="23:35" pos:end="23:38"><name pos:start="23:35" pos:end="23:38">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:44"><name pos:start="25:11" pos:end="25:19">read_sync</name><argument_list pos:start="25:20" pos:end="25:44">(<argument pos:start="25:21" pos:end="25:23"><expr pos:start="25:21" pos:end="25:23"><name pos:start="25:21" pos:end="25:23">ioc</name></expr></argument>, <argument pos:start="25:26" pos:end="25:31"><expr pos:start="25:26" pos:end="25:31"><name pos:start="25:26" pos:end="25:31">buffer</name></expr></argument>, <argument pos:start="25:34" pos:end="25:37"><expr pos:start="25:34" pos:end="25:37"><name pos:start="25:34" pos:end="25:37">size</name></expr></argument>, <argument pos:start="25:40" pos:end="25:43"><expr pos:start="25:40" pos:end="25:43"><name pos:start="25:40" pos:end="25:43">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><call pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:19">g_source_remove</name><argument_list pos:start="27:20" pos:end="27:26">(<argument pos:start="27:21" pos:end="27:25"><expr pos:start="27:21" pos:end="27:25"><name pos:start="27:21" pos:end="27:25">watch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="29:5" pos:end="29:15">return <expr pos:start="29:12" pos:end="29:14"><name pos:start="29:12" pos:end="29:14">ret</name></expr>;</return>



</block_content>}</block></function>
</unit>
