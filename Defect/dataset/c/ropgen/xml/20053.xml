<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20053.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:9">USBDevice</name> <modifier pos:start="1:11" pos:end="1:11">*</modifier></type><name pos:start="1:12" pos:end="1:27">usbdevice_create</name><parameter_list pos:start="1:28" pos:end="1:48">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:40"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:47">cmdline</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:39">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">USBBus</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">bus</name> <init pos:start="5:17" pos:end="5:44">= <expr pos:start="5:19" pos:end="5:44"><call pos:start="5:19" pos:end="5:44"><name pos:start="5:19" pos:end="5:30">usb_bus_find</name><argument_list pos:start="5:31" pos:end="5:44">(<argument pos:start="5:32" pos:end="5:33"><expr pos:start="5:32" pos:end="5:33"><operator pos:start="5:32" pos:end="5:32">-</operator><literal type="number" pos:start="5:33" pos:end="5:33">1</literal></expr></argument> <comment type="block" pos:start="5:35" pos:end="5:43">/* any */</comment>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">DeviceInfo</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:20">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">USBDeviceInfo</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">usb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:19"><name pos:start="11:10" pos:end="11:15">driver</name><index pos:start="11:16" pos:end="11:19">[<expr pos:start="11:17" pos:end="11:18"><literal type="number" pos:start="11:17" pos:end="11:18">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:22">params</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:10">params</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="19:32"><name pos:start="19:14" pos:end="19:19">strchr</name><argument_list pos:start="19:20" pos:end="19:32">(<argument pos:start="19:21" pos:end="19:27"><expr pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:27">cmdline</name></expr></argument>,<argument pos:start="19:29" pos:end="19:31"><expr pos:start="19:29" pos:end="19:31"><literal type="char" pos:start="19:29" pos:end="19:31">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="39:5"><if pos:start="21:5" pos:end="33:5">if <condition pos:start="21:8" pos:end="21:15">(<expr pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:14">params</name></expr>)</condition> <block pos:start="21:17" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:38">

        <expr_stmt pos:start="23:9" pos:end="23:17"><expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:14">params</name><operator pos:start="23:15" pos:end="23:16">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:31"><expr pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:11">len</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:20">params</name> <operator pos:start="25:22" pos:end="25:22">-</operator> <name pos:start="25:24" pos:end="25:30">cmdline</name></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:33"><if pos:start="27:9" pos:end="29:33">if <condition pos:start="27:12" pos:end="27:33">(<expr pos:start="27:13" pos:end="27:32"><name pos:start="27:13" pos:end="27:15">len</name> <operator pos:start="27:17" pos:end="27:17">&gt;</operator> <sizeof pos:start="27:19" pos:end="27:32">sizeof<argument_list pos:start="27:25" pos:end="27:32">(<argument pos:start="27:26" pos:end="27:31"><expr pos:start="27:26" pos:end="27:31"><name pos:start="27:26" pos:end="27:31">driver</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:33"><block_content pos:start="29:13" pos:end="29:33">

            <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:15">len</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <sizeof pos:start="29:19" pos:end="29:32">sizeof<argument_list pos:start="29:25" pos:end="29:32">(<argument pos:start="29:26" pos:end="29:31"><expr pos:start="29:26" pos:end="29:31"><name pos:start="29:26" pos:end="29:31">driver</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><call pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:15">pstrcpy</name><argument_list pos:start="31:16" pos:end="31:37">(<argument pos:start="31:17" pos:end="31:22"><expr pos:start="31:17" pos:end="31:22"><name pos:start="31:17" pos:end="31:22">driver</name></expr></argument>, <argument pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:27">len</name></expr></argument>, <argument pos:start="31:30" pos:end="31:36"><expr pos:start="31:30" pos:end="31:36"><name pos:start="31:30" pos:end="31:36">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="39:5">else <block pos:start="33:12" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:49">

        <expr_stmt pos:start="35:9" pos:end="35:20"><expr pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:14">params</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="string" pos:start="35:18" pos:end="35:19">""</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:49"><expr pos:start="37:9" pos:end="37:48"><call pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:15">pstrcpy</name><argument_list pos:start="37:16" pos:end="37:48">(<argument pos:start="37:17" pos:end="37:22"><expr pos:start="37:17" pos:end="37:22"><name pos:start="37:17" pos:end="37:22">driver</name></expr></argument>, <argument pos:start="37:25" pos:end="37:38"><expr pos:start="37:25" pos:end="37:38"><sizeof pos:start="37:25" pos:end="37:38">sizeof<argument_list pos:start="37:31" pos:end="37:38">(<argument pos:start="37:32" pos:end="37:37"><expr pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:37">driver</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="37:41" pos:end="37:47"><expr pos:start="37:41" pos:end="37:47"><name pos:start="37:41" pos:end="37:47">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="43:5" pos:end="61:5">for <control pos:start="43:9" pos:end="43:66">(<init pos:start="43:10" pos:end="43:33"><expr pos:start="43:10" pos:end="43:32"><name pos:start="43:10" pos:end="43:13">info</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <name pos:start="43:17" pos:end="43:32">device_info_list</name></expr>;</init> <condition pos:start="43:35" pos:end="43:47"><expr pos:start="43:35" pos:end="43:46"><name pos:start="43:35" pos:end="43:38">info</name> <operator pos:start="43:40" pos:end="43:41">!=</operator> <name pos:start="43:43" pos:end="43:46">NULL</name></expr>;</condition> <incr pos:start="43:49" pos:end="43:65"><expr pos:start="43:49" pos:end="43:65"><name pos:start="43:49" pos:end="43:52">info</name> <operator pos:start="43:54" pos:end="43:54">=</operator> <name pos:start="43:56" pos:end="43:65"><name pos:start="43:56" pos:end="43:59">info</name><operator pos:start="43:60" pos:end="43:61">-&gt;</operator><name pos:start="43:62" pos:end="43:65">next</name></name></expr></incr>)</control> <block pos:start="43:68" pos:end="61:5">{<block_content pos:start="45:9" pos:end="59:14">

        <if_stmt pos:start="45:9" pos:end="47:21"><if pos:start="45:9" pos:end="47:21">if <condition pos:start="45:12" pos:end="45:44">(<expr pos:start="45:13" pos:end="45:43"><name pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:16">info</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:26">bus_info</name></name> <operator pos:start="45:28" pos:end="45:29">!=</operator> <operator pos:start="45:31" pos:end="45:31">&amp;</operator><name pos:start="45:32" pos:end="45:43">usb_bus_info</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:21"><block_content pos:start="47:13" pos:end="47:21">

            <continue pos:start="47:13" pos:end="47:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:51"><expr pos:start="49:9" pos:end="49:50"><name pos:start="49:9" pos:end="49:11">usb</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:50"><name pos:start="49:15" pos:end="49:23">DO_UPCAST</name><argument_list pos:start="49:24" pos:end="49:50">(<argument pos:start="49:25" pos:end="49:37"><expr pos:start="49:25" pos:end="49:37"><name pos:start="49:25" pos:end="49:37">USBDeviceInfo</name></expr></argument>, <argument pos:start="49:40" pos:end="49:43"><expr pos:start="49:40" pos:end="49:43"><name pos:start="49:40" pos:end="49:43">qdev</name></expr></argument>, <argument pos:start="49:46" pos:end="49:49"><expr pos:start="49:46" pos:end="49:49"><name pos:start="49:46" pos:end="49:49">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="53:21"><if pos:start="51:9" pos:end="53:21">if <condition pos:start="51:12" pos:end="51:40">(<expr pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:15">usb</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:31">usbdevice_name</name></name> <operator pos:start="51:33" pos:end="51:34">==</operator> <name pos:start="51:36" pos:end="51:39">NULL</name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:21"><block_content pos:start="53:13" pos:end="53:21">

            <continue pos:start="53:13" pos:end="53:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="55:9" pos:end="57:21"><if pos:start="55:9" pos:end="57:21">if <condition pos:start="55:12" pos:end="55:53">(<expr pos:start="55:13" pos:end="55:52"><call pos:start="55:13" pos:end="55:47"><name pos:start="55:13" pos:end="55:18">strcmp</name><argument_list pos:start="55:19" pos:end="55:47">(<argument pos:start="55:20" pos:end="55:38"><expr pos:start="55:20" pos:end="55:38"><name pos:start="55:20" pos:end="55:38"><name pos:start="55:20" pos:end="55:22">usb</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:38">usbdevice_name</name></name></expr></argument>, <argument pos:start="55:41" pos:end="55:46"><expr pos:start="55:41" pos:end="55:46"><name pos:start="55:41" pos:end="55:46">driver</name></expr></argument>)</argument_list></call> <operator pos:start="55:49" pos:end="55:50">!=</operator> <literal type="number" pos:start="55:52" pos:end="55:52">0</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:21"><block_content pos:start="57:13" pos:end="57:21">

            <continue pos:start="57:13" pos:end="57:21">continue;</continue></block_content></block></if></if_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    </block_content>}</block></for>

    <if_stmt pos:start="63:5" pos:end="75:5"><if pos:start="63:5" pos:end="75:5">if <condition pos:start="63:8" pos:end="63:21">(<expr pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:12">info</name> <operator pos:start="63:14" pos:end="63:15">==</operator> <name pos:start="63:17" pos:end="63:20">NULL</name></expr>)</condition> <block pos:start="63:23" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:20">

<cpp:if pos:start="65:1" pos:end="65:5">#<cpp:directive pos:start="65:2" pos:end="65:3">if</cpp:directive> <expr pos:start="65:5" pos:end="65:5"><literal type="number" pos:start="65:5" pos:end="65:5">0</literal></expr></cpp:if>

        <comment type="block" pos:start="67:9" pos:end="67:67">/* no error because some drivers are not converted (yet) */</comment>

        error_report("usbdevice %s not found", driver);

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>

        <return pos:start="73:9" pos:end="73:20">return <expr pos:start="73:16" pos:end="73:19"><name pos:start="73:16" pos:end="73:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="91:5"><if pos:start="79:5" pos:end="91:5">if <condition pos:start="79:8" pos:end="79:29">(<expr pos:start="79:9" pos:end="79:28"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:28"><name pos:start="79:10" pos:end="79:12">usb</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:28">usbdevice_init</name></name></expr>)</condition> <block pos:start="79:31" pos:end="91:5">{<block_content pos:start="81:9" pos:end="89:54">

        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:19">(<expr pos:start="81:13" pos:end="81:18"><name pos:start="81:13" pos:end="81:18">params</name></expr>)</condition> <block pos:start="81:21" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:24">

            <expr_stmt pos:start="83:13" pos:end="83:67"><expr pos:start="83:13" pos:end="83:66"><call pos:start="83:13" pos:end="83:66"><name pos:start="83:13" pos:end="83:24">error_report</name><argument_list pos:start="83:25" pos:end="83:66">(<argument pos:start="83:26" pos:end="83:57"><expr pos:start="83:26" pos:end="83:57"><literal type="string" pos:start="83:26" pos:end="83:57">"usbdevice %s accepts no params"</literal></expr></argument>, <argument pos:start="83:60" pos:end="83:65"><expr pos:start="83:60" pos:end="83:65"><name pos:start="83:60" pos:end="83:65">driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="85:13" pos:end="85:24">return <expr pos:start="85:20" pos:end="85:23"><name pos:start="85:20" pos:end="85:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="89:9" pos:end="89:54">return <expr pos:start="89:16" pos:end="89:53"><call pos:start="89:16" pos:end="89:53"><name pos:start="89:16" pos:end="89:32">usb_create_simple</name><argument_list pos:start="89:33" pos:end="89:53">(<argument pos:start="89:34" pos:end="89:36"><expr pos:start="89:34" pos:end="89:36"><name pos:start="89:34" pos:end="89:36">bus</name></expr></argument>, <argument pos:start="89:39" pos:end="89:52"><expr pos:start="89:39" pos:end="89:52"><name pos:start="89:39" pos:end="89:52"><name pos:start="89:39" pos:end="89:41">usb</name><operator pos:start="89:42" pos:end="89:43">-&gt;</operator><name pos:start="89:44" pos:end="89:47">qdev</name><operator pos:start="89:48" pos:end="89:48">.</operator><name pos:start="89:49" pos:end="89:52">name</name></name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="93:5" pos:end="93:39">return <expr pos:start="93:12" pos:end="93:38"><call pos:start="93:12" pos:end="93:38"><name pos:start="93:12" pos:end="93:30"><name pos:start="93:12" pos:end="93:14">usb</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:30">usbdevice_init</name></name><argument_list pos:start="93:31" pos:end="93:38">(<argument pos:start="93:32" pos:end="93:37"><expr pos:start="93:32" pos:end="93:37"><name pos:start="93:32" pos:end="93:37">params</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
