<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9726.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">test_sum_square</name><parameter_list pos:start="1:28" pos:end="1:33">(<parameter pos:start="1:29" pos:end="1:32"><decl pos:start="1:29" pos:end="1:32"><type pos:start="1:29" pos:end="1:32"><name pos:start="1:29" pos:end="1:32">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:24">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">INTFLOAT</name></type> <name pos:start="5:14" pos:end="5:17">res0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">INTFLOAT</name></type> <name pos:start="7:14" pos:end="7:17">res1</name></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:48"><expr pos:start="9:5" pos:end="9:47"><call pos:start="9:5" pos:end="9:47"><name pos:start="9:5" pos:end="9:20">LOCAL_ALIGNED_16</name><argument_list pos:start="9:21" pos:end="9:47">(<argument pos:start="9:22" pos:end="9:29"><expr pos:start="9:22" pos:end="9:29"><name pos:start="9:22" pos:end="9:29">INTFLOAT</name></expr></argument>, <argument pos:start="9:32" pos:end="9:34"><expr pos:start="9:32" pos:end="9:34"><name pos:start="9:32" pos:end="9:34">src</name></expr></argument>, <argument pos:start="9:37" pos:end="9:41"><expr pos:start="9:37" pos:end="9:41"><index pos:start="9:37" pos:end="9:41">[<expr pos:start="9:38" pos:end="9:40"><literal type="number" pos:start="9:38" pos:end="9:40">256</literal></expr>]</index></expr></argument>, <argument pos:start="9:44" pos:end="9:46"><expr pos:start="9:44" pos:end="9:46"><index pos:start="9:44" pos:end="9:46">[<expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">2</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:16">declare_func</name><argument_list pos:start="13:17" pos:end="13:51">(<argument pos:start="13:18" pos:end="13:25">INTFLOAT</argument>, <argument pos:start="13:28" pos:end="13:43">INTFLOAT (*x)[<literal type="number" pos:start="13:42" pos:end="13:42">2</literal>]</argument>, <argument pos:start="13:46" pos:end="13:50">int n</argument>)</argument_list></macro><empty_stmt pos:start="13:52" pos:end="13:52">;</empty_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:40"><expr pos:start="17:5" pos:end="17:39"><call pos:start="17:5" pos:end="17:39"><name pos:start="17:5" pos:end="17:13">randomize</name><argument_list pos:start="17:14" pos:end="17:39">(<argument pos:start="17:15" pos:end="17:29"><expr pos:start="17:15" pos:end="17:29"><operator pos:start="17:15" pos:end="17:15">(</operator><name pos:start="17:16" pos:end="17:23">INTFLOAT</name> <operator pos:start="17:25" pos:end="17:25">*</operator><operator pos:start="17:26" pos:end="17:26">)</operator><name pos:start="17:27" pos:end="17:29">src</name></expr></argument>, <argument pos:start="17:32" pos:end="17:38"><expr pos:start="17:32" pos:end="17:38"><literal type="number" pos:start="17:32" pos:end="17:34">256</literal> <operator pos:start="17:36" pos:end="17:36">*</operator> <literal type="number" pos:start="17:38" pos:end="17:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:8">res0</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:29"><name pos:start="19:12" pos:end="19:19">call_ref</name><argument_list pos:start="19:20" pos:end="19:29">(<argument pos:start="19:21" pos:end="19:23"><expr pos:start="19:21" pos:end="19:23"><name pos:start="19:21" pos:end="19:23">src</name></expr></argument>, <argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><literal type="number" pos:start="19:26" pos:end="19:28">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:30"><expr pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:8">res1</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:29"><name pos:start="21:12" pos:end="21:19">call_new</name><argument_list pos:start="21:20" pos:end="21:29">(<argument pos:start="21:21" pos:end="21:23"><expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:23">src</name></expr></argument>, <argument pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><literal type="number" pos:start="21:26" pos:end="21:28">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:15"><if pos:start="23:5" pos:end="25:15">if <condition pos:start="23:8" pos:end="23:45">(<expr pos:start="23:9" pos:end="23:44"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:44"><name pos:start="23:10" pos:end="23:27">float_near_abs_eps</name><argument_list pos:start="23:28" pos:end="23:44">(<argument pos:start="23:29" pos:end="23:32"><expr pos:start="23:29" pos:end="23:32"><name pos:start="23:29" pos:end="23:32">res0</name></expr></argument>, <argument pos:start="23:35" pos:end="23:38"><expr pos:start="23:35" pos:end="23:38"><name pos:start="23:35" pos:end="23:38">res1</name></expr></argument>, <argument pos:start="23:41" pos:end="23:43"><expr pos:start="23:41" pos:end="23:43"><name pos:start="23:41" pos:end="23:43">EPS</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:15"><block_content pos:start="25:9" pos:end="25:15">

        <expr_stmt pos:start="25:9" pos:end="25:15"><expr pos:start="25:9" pos:end="25:14"><call pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:12">fail</name><argument_list pos:start="25:13" pos:end="25:14">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><call pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:13">bench_new</name><argument_list pos:start="27:14" pos:end="27:23">(<argument pos:start="27:15" pos:end="27:17"><expr pos:start="27:15" pos:end="27:17"><name pos:start="27:15" pos:end="27:17">src</name></expr></argument>, <argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><literal type="number" pos:start="27:20" pos:end="27:22">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
