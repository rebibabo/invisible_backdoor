<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6482.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">postfilter</name><parameter_list pos:start="1:23" pos:end="5:34">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:34">EVRCContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">e</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:48"><decl pos:start="1:40" pos:end="1:48"><type pos:start="1:40" pos:end="1:48"><name pos:start="1:40" pos:end="1:44">float</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">in</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:68"><decl pos:start="1:51" pos:end="1:68"><type pos:start="1:51" pos:end="1:68"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:61">float</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:68">coeff</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:33"><decl pos:start="3:24" pos:end="3:33"><type pos:start="3:24" pos:end="3:33"><name pos:start="3:24" pos:end="3:28">float</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:33">out</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:42"><decl pos:start="3:36" pos:end="3:42"><type pos:start="3:36" pos:end="3:42"><name pos:start="3:36" pos:end="3:38">int</name></type> <name pos:start="3:40" pos:end="3:42">idx</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:69"><decl pos:start="3:45" pos:end="3:69"><type pos:start="3:45" pos:end="3:69"><specifier pos:start="3:45" pos:end="3:49">const</specifier> <name pos:start="3:51" pos:end="3:64"><name pos:start="3:51" pos:end="3:56">struct</name> <name pos:start="3:58" pos:end="3:64">PfCoeff</name></name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:69">pfc</name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:33"><decl pos:start="5:24" pos:end="5:33"><type pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:26">int</name></type> <name pos:start="5:28" pos:end="5:33">length</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="159:1">{<block_content pos:start="9:5" pos:end="157:70">

    <decl_stmt pos:start="9:5" pos:end="13:29"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">float</name></type> <name pos:start="9:11" pos:end="9:30"><name pos:start="9:11" pos:end="9:16">wcoef1</name><index pos:start="9:17" pos:end="9:30">[<expr pos:start="9:18" pos:end="9:29"><name pos:start="9:18" pos:end="9:29">FILTER_ORDER</name></expr>]</index></name></decl>, <decl pos:start="9:33" pos:end="9:52"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="9:33" pos:end="9:52"><name pos:start="9:33" pos:end="9:38">wcoef2</name><index pos:start="9:39" pos:end="9:52">[<expr pos:start="9:40" pos:end="9:51"><name pos:start="9:40" pos:end="9:51">FILTER_ORDER</name></expr>]</index></name></decl>,

          <decl pos:start="11:11" pos:end="11:32"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="11:11" pos:end="11:32"><name pos:start="11:11" pos:end="11:17">scratch</name><index pos:start="11:18" pos:end="11:32">[<expr pos:start="11:19" pos:end="11:31"><name pos:start="11:19" pos:end="11:31">SUBFRAME_SIZE</name></expr>]</index></name></decl>, <decl pos:start="11:35" pos:end="11:53"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="11:35" pos:end="11:53"><name pos:start="11:35" pos:end="11:38">temp</name><index pos:start="11:39" pos:end="11:53">[<expr pos:start="11:40" pos:end="11:52"><name pos:start="11:40" pos:end="11:52">SUBFRAME_SIZE</name></expr>]</index></name></decl>,

          <decl pos:start="13:11" pos:end="13:28"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="13:11" pos:end="13:28"><name pos:start="13:11" pos:end="13:13">mem</name><index pos:start="13:14" pos:end="13:28">[<expr pos:start="13:15" pos:end="13:27"><name pos:start="13:15" pos:end="13:27">SUBFRAME_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:46"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:9">float</name></type> <name pos:start="15:11" pos:end="15:14">sum1</name> <init pos:start="15:16" pos:end="15:20">= <expr pos:start="15:18" pos:end="15:20"><literal type="number" pos:start="15:18" pos:end="15:20">0.0</literal></expr></init></decl>, <decl pos:start="15:23" pos:end="15:32"><type ref="prev" pos:start="15:5" pos:end="15:9"/><name pos:start="15:23" pos:end="15:26">sum2</name> <init pos:start="15:28" pos:end="15:32">= <expr pos:start="15:30" pos:end="15:32"><literal type="number" pos:start="15:30" pos:end="15:32">0.0</literal></expr></init></decl>, <decl pos:start="15:35" pos:end="15:39"><type ref="prev" pos:start="15:5" pos:end="15:9"/><name pos:start="15:35" pos:end="15:39">gamma</name></decl>, <decl pos:start="15:42" pos:end="15:45"><type ref="prev" pos:start="15:5" pos:end="15:9"/><name pos:start="15:42" pos:end="15:45">gain</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:9">float</name></type> <name pos:start="17:11" pos:end="17:14">tilt</name> <init pos:start="17:16" pos:end="17:26">= <expr pos:start="17:18" pos:end="17:26"><name pos:start="17:18" pos:end="17:26"><name pos:start="17:18" pos:end="17:20">pfc</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:26">tilt</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:12"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:12">n</name></decl>, <decl pos:start="19:15" pos:end="19:18"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:15" pos:end="19:18">best</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:48"><expr pos:start="23:5" pos:end="23:47"><call pos:start="23:5" pos:end="23:47"><name pos:start="23:5" pos:end="23:23">bandwidth_expansion</name><argument_list pos:start="23:24" pos:end="23:47">(<argument pos:start="23:25" pos:end="23:30"><expr pos:start="23:25" pos:end="23:30"><name pos:start="23:25" pos:end="23:30">wcoef1</name></expr></argument>, <argument pos:start="23:33" pos:end="23:37"><expr pos:start="23:33" pos:end="23:37"><name pos:start="23:33" pos:end="23:37">coeff</name></expr></argument>, <argument pos:start="23:40" pos:end="23:46"><expr pos:start="23:40" pos:end="23:46"><name pos:start="23:40" pos:end="23:46"><name pos:start="23:40" pos:end="23:42">pfc</name><operator pos:start="23:43" pos:end="23:44">-&gt;</operator><name pos:start="23:45" pos:end="23:46">p1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:48"><expr pos:start="25:5" pos:end="25:47"><call pos:start="25:5" pos:end="25:47"><name pos:start="25:5" pos:end="25:23">bandwidth_expansion</name><argument_list pos:start="25:24" pos:end="25:47">(<argument pos:start="25:25" pos:end="25:30"><expr pos:start="25:25" pos:end="25:30"><name pos:start="25:25" pos:end="25:30">wcoef2</name></expr></argument>, <argument pos:start="25:33" pos:end="25:37"><expr pos:start="25:33" pos:end="25:37"><name pos:start="25:33" pos:end="25:37">coeff</name></expr></argument>, <argument pos:start="25:40" pos:end="25:46"><expr pos:start="25:40" pos:end="25:46"><name pos:start="25:40" pos:end="25:46"><name pos:start="25:40" pos:end="25:42">pfc</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:46">p2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:52">/* Tilt compensation filter, TIA/IS-127 5.9.1 */</comment>

    <for pos:start="31:5" pos:end="33:34">for <control pos:start="31:9" pos:end="31:36">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:31"><expr pos:start="31:17" pos:end="31:30"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:26">length</name> <operator pos:start="31:28" pos:end="31:28">-</operator> <literal type="number" pos:start="31:30" pos:end="31:30">1</literal></expr>;</condition> <incr pos:start="31:33" pos:end="31:35"><expr pos:start="31:33" pos:end="31:35"><name pos:start="31:33" pos:end="31:33">i</name><operator pos:start="31:34" pos:end="31:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:9" pos:end="33:34"><block_content pos:start="33:9" pos:end="33:34">

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:12">sum2</name> <operator pos:start="33:14" pos:end="33:15">+=</operator> <name pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:18">in</name><index pos:start="33:19" pos:end="33:21">[<expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">i</name></expr>]</index></name> <operator pos:start="33:23" pos:end="33:23">*</operator> <name pos:start="33:25" pos:end="33:33"><name pos:start="33:25" pos:end="33:26">in</name><index pos:start="33:27" pos:end="33:33">[<expr pos:start="33:28" pos:end="33:32"><name pos:start="33:28" pos:end="33:28">i</name> <operator pos:start="33:30" pos:end="33:30">+</operator> <literal type="number" pos:start="33:32" pos:end="33:32">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    <if_stmt pos:start="35:5" pos:end="37:19"><if pos:start="35:5" pos:end="37:19">if <condition pos:start="35:8" pos:end="35:19">(<expr pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:12">sum2</name> <operator pos:start="35:14" pos:end="35:14">&lt;</operator> <literal type="number" pos:start="35:16" pos:end="35:18">0.0</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:19"><block_content pos:start="37:9" pos:end="37:19">

        <expr_stmt pos:start="37:9" pos:end="37:19"><expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:12">tilt</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <literal type="number" pos:start="37:16" pos:end="37:18">0.0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="41:5" pos:end="47:5">for <control pos:start="41:9" pos:end="41:32">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:27"><expr pos:start="41:17" pos:end="41:26"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:26">length</name></expr>;</condition> <incr pos:start="41:29" pos:end="41:31"><expr pos:start="41:29" pos:end="41:31"><name pos:start="41:29" pos:end="41:29">i</name><operator pos:start="41:30" pos:end="41:31">++</operator></expr></incr>)</control> <block pos:start="41:34" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:24">

        <expr_stmt pos:start="43:9" pos:end="43:44"><expr pos:start="43:9" pos:end="43:43"><name pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:15">scratch</name><index pos:start="43:16" pos:end="43:18">[<expr pos:start="43:17" pos:end="43:17"><name pos:start="43:17" pos:end="43:17">i</name></expr>]</index></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:26"><name pos:start="43:22" pos:end="43:23">in</name><index pos:start="43:24" pos:end="43:26">[<expr pos:start="43:25" pos:end="43:25"><name pos:start="43:25" pos:end="43:25">i</name></expr>]</index></name> <operator pos:start="43:28" pos:end="43:28">-</operator> <name pos:start="43:30" pos:end="43:33">tilt</name> <operator pos:start="43:35" pos:end="43:35">*</operator> <name pos:start="43:37" pos:end="43:43"><name pos:start="43:37" pos:end="43:37">e</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:43">last</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:24"><expr pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:9">e</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:15">last</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:23"><name pos:start="45:19" pos:end="45:20">in</name><index pos:start="45:21" pos:end="45:23">[<expr pos:start="45:22" pos:end="45:22"><name pos:start="45:22" pos:end="45:22">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="51:5" pos:end="51:54">/* Short term residual filter, TIA/IS-127 5.9.2 */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:99"><expr pos:start="53:5" pos:end="53:98"><call pos:start="53:5" pos:end="53:98"><name pos:start="53:5" pos:end="53:19">residual_filter</name><argument_list pos:start="53:20" pos:end="53:98">(<argument pos:start="53:21" pos:end="53:53"><expr pos:start="53:21" pos:end="53:53"><operator pos:start="53:21" pos:end="53:21">&amp;</operator><name pos:start="53:22" pos:end="53:53"><name pos:start="53:22" pos:end="53:22">e</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:43">postfilter_residual</name><index pos:start="53:44" pos:end="53:53">[<expr pos:start="53:45" pos:end="53:52"><name pos:start="53:45" pos:end="53:52">ACB_SIZE</name></expr>]</index></name></expr></argument>, <argument pos:start="53:56" pos:end="53:62"><expr pos:start="53:56" pos:end="53:62"><name pos:start="53:56" pos:end="53:62">scratch</name></expr></argument>, <argument pos:start="53:65" pos:end="53:70"><expr pos:start="53:65" pos:end="53:70"><name pos:start="53:65" pos:end="53:70">wcoef1</name></expr></argument>, <argument pos:start="53:73" pos:end="53:89"><expr pos:start="53:73" pos:end="53:89"><name pos:start="53:73" pos:end="53:89"><name pos:start="53:73" pos:end="53:73">e</name><operator pos:start="53:74" pos:end="53:75">-&gt;</operator><name pos:start="53:76" pos:end="53:89">postfilter_fir</name></name></expr></argument>, <argument pos:start="53:92" pos:end="53:97"><expr pos:start="53:92" pos:end="53:97"><name pos:start="53:92" pos:end="53:97">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:30">/* Long term postfilter */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:15"><expr pos:start="59:5" pos:end="59:14"><name pos:start="59:5" pos:end="59:8">best</name> <operator pos:start="59:10" pos:end="59:10">=</operator> <name pos:start="59:12" pos:end="59:14">idx</name></expr>;</expr_stmt>

    <for pos:start="61:5" pos:end="75:5">for <control pos:start="61:9" pos:end="61:76">(<init pos:start="61:10" pos:end="61:39"><expr pos:start="61:10" pos:end="61:38"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <call pos:start="61:14" pos:end="61:38"><name pos:start="61:14" pos:end="61:18">FFMIN</name><argument_list pos:start="61:19" pos:end="61:38">(<argument pos:start="61:20" pos:end="61:28"><expr pos:start="61:20" pos:end="61:28"><name pos:start="61:20" pos:end="61:28">MIN_DELAY</name></expr></argument>, <argument pos:start="61:31" pos:end="61:37"><expr pos:start="61:31" pos:end="61:37"><name pos:start="61:31" pos:end="61:33">idx</name> <operator pos:start="61:35" pos:end="61:35">-</operator> <literal type="number" pos:start="61:37" pos:end="61:37">3</literal></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="61:41" pos:end="61:71"><expr pos:start="61:41" pos:end="61:70"><name pos:start="61:41" pos:end="61:41">i</name> <operator pos:start="61:43" pos:end="61:44">&lt;=</operator> <call pos:start="61:46" pos:end="61:70"><name pos:start="61:46" pos:end="61:50">FFMAX</name><argument_list pos:start="61:51" pos:end="61:70">(<argument pos:start="61:52" pos:end="61:60"><expr pos:start="61:52" pos:end="61:60"><name pos:start="61:52" pos:end="61:60">MAX_DELAY</name></expr></argument>, <argument pos:start="61:63" pos:end="61:69"><expr pos:start="61:63" pos:end="61:69"><name pos:start="61:63" pos:end="61:65">idx</name> <operator pos:start="61:67" pos:end="61:67">+</operator> <literal type="number" pos:start="61:69" pos:end="61:69">3</literal></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="61:73" pos:end="61:75"><expr pos:start="61:73" pos:end="61:75"><name pos:start="61:73" pos:end="61:73">i</name><operator pos:start="61:74" pos:end="61:75">++</operator></expr></incr>)</control> <block pos:start="61:78" pos:end="75:5">{<block_content pos:start="63:9" pos:end="73:9">

        <for pos:start="63:9" pos:end="65:78">for <control pos:start="63:13" pos:end="63:64">(<init pos:start="63:14" pos:end="63:36"><expr pos:start="63:14" pos:end="63:25"><name pos:start="63:14" pos:end="63:14">n</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:25">ACB_SIZE</name></expr><operator pos:start="63:26" pos:end="63:26">,</operator> <expr pos:start="63:28" pos:end="63:35"><name pos:start="63:28" pos:end="63:31">sum2</name> <operator pos:start="63:33" pos:end="63:33">=</operator> <literal type="number" pos:start="63:35" pos:end="63:35">0</literal></expr>;</init> <condition pos:start="63:38" pos:end="63:59"><expr pos:start="63:38" pos:end="63:58"><name pos:start="63:38" pos:end="63:38">n</name> <operator pos:start="63:40" pos:end="63:40">&lt;</operator> <name pos:start="63:42" pos:end="63:49">ACB_SIZE</name> <operator pos:start="63:51" pos:end="63:51">+</operator> <name pos:start="63:53" pos:end="63:58">length</name></expr>;</condition> <incr pos:start="63:61" pos:end="63:63"><expr pos:start="63:61" pos:end="63:63"><name pos:start="63:61" pos:end="63:61">n</name><operator pos:start="63:62" pos:end="63:63">++</operator></expr></incr>)</control><block type="pseudo" pos:start="65:13" pos:end="65:78"><block_content pos:start="65:13" pos:end="65:78">

            <expr_stmt pos:start="65:13" pos:end="65:78"><expr pos:start="65:13" pos:end="65:77"><name pos:start="65:13" pos:end="65:16">sum2</name> <operator pos:start="65:18" pos:end="65:19">+=</operator> <name pos:start="65:21" pos:end="65:45"><name pos:start="65:21" pos:end="65:21">e</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:42">postfilter_residual</name><index pos:start="65:43" pos:end="65:45">[<expr pos:start="65:44" pos:end="65:44"><name pos:start="65:44" pos:end="65:44">n</name></expr>]</index></name> <operator pos:start="65:47" pos:end="65:47">*</operator> <name pos:start="65:49" pos:end="65:77"><name pos:start="65:49" pos:end="65:49">e</name><operator pos:start="65:50" pos:end="65:51">-&gt;</operator><name pos:start="65:52" pos:end="65:70">postfilter_residual</name><index pos:start="65:71" pos:end="65:77">[<expr pos:start="65:72" pos:end="65:76"><name pos:start="65:72" pos:end="65:72">n</name> <operator pos:start="65:74" pos:end="65:74">-</operator> <name pos:start="65:76" pos:end="65:76">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="67:9" pos:end="73:9"><if pos:start="67:9" pos:end="73:9">if <condition pos:start="67:12" pos:end="67:24">(<expr pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:16">sum2</name> <operator pos:start="67:18" pos:end="67:18">&gt;</operator> <name pos:start="67:20" pos:end="67:23">sum1</name></expr>)</condition> <block pos:start="67:26" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:21">

            <expr_stmt pos:start="69:13" pos:end="69:24"><expr pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:16">sum1</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:23">sum2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:21"><expr pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:16">best</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:20">i</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="79:5" pos:end="81:84">for <control pos:start="79:9" pos:end="79:60">(<init pos:start="79:10" pos:end="79:32"><expr pos:start="79:10" pos:end="79:21"><name pos:start="79:10" pos:end="79:10">i</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <name pos:start="79:14" pos:end="79:21">ACB_SIZE</name></expr><operator pos:start="79:22" pos:end="79:22">,</operator> <expr pos:start="79:24" pos:end="79:31"><name pos:start="79:24" pos:end="79:27">sum1</name> <operator pos:start="79:29" pos:end="79:29">=</operator> <literal type="number" pos:start="79:31" pos:end="79:31">0</literal></expr>;</init> <condition pos:start="79:34" pos:end="79:55"><expr pos:start="79:34" pos:end="79:54"><name pos:start="79:34" pos:end="79:34">i</name> <operator pos:start="79:36" pos:end="79:36">&lt;</operator> <name pos:start="79:38" pos:end="79:45">ACB_SIZE</name> <operator pos:start="79:47" pos:end="79:47">+</operator> <name pos:start="79:49" pos:end="79:54">length</name></expr>;</condition> <incr pos:start="79:57" pos:end="79:59"><expr pos:start="79:57" pos:end="79:59"><name pos:start="79:57" pos:end="79:57">i</name><operator pos:start="79:58" pos:end="79:59">++</operator></expr></incr>)</control><block type="pseudo" pos:start="81:9" pos:end="81:84"><block_content pos:start="81:9" pos:end="81:84">

        <expr_stmt pos:start="81:9" pos:end="81:84"><expr pos:start="81:9" pos:end="81:83"><name pos:start="81:9" pos:end="81:12">sum1</name> <operator pos:start="81:14" pos:end="81:15">+=</operator> <name pos:start="81:17" pos:end="81:48"><name pos:start="81:17" pos:end="81:17">e</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:38">postfilter_residual</name><index pos:start="81:39" pos:end="81:48">[<expr pos:start="81:40" pos:end="81:47"><name pos:start="81:40" pos:end="81:40">i</name> <operator pos:start="81:42" pos:end="81:42">-</operator> <name pos:start="81:44" pos:end="81:47">best</name></expr>]</index></name> <operator pos:start="81:50" pos:end="81:50">*</operator> <name pos:start="81:52" pos:end="81:83"><name pos:start="81:52" pos:end="81:52">e</name><operator pos:start="81:53" pos:end="81:54">-&gt;</operator><name pos:start="81:55" pos:end="81:73">postfilter_residual</name><index pos:start="81:74" pos:end="81:83">[<expr pos:start="81:75" pos:end="81:82"><name pos:start="81:75" pos:end="81:75">i</name> <operator pos:start="81:77" pos:end="81:77">-</operator> <name pos:start="81:79" pos:end="81:82">best</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="83:5" pos:end="85:77">for <control pos:start="83:9" pos:end="83:60">(<init pos:start="83:10" pos:end="83:32"><expr pos:start="83:10" pos:end="83:21"><name pos:start="83:10" pos:end="83:10">i</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <name pos:start="83:14" pos:end="83:21">ACB_SIZE</name></expr><operator pos:start="83:22" pos:end="83:22">,</operator> <expr pos:start="83:24" pos:end="83:31"><name pos:start="83:24" pos:end="83:27">sum2</name> <operator pos:start="83:29" pos:end="83:29">=</operator> <literal type="number" pos:start="83:31" pos:end="83:31">0</literal></expr>;</init> <condition pos:start="83:34" pos:end="83:55"><expr pos:start="83:34" pos:end="83:54"><name pos:start="83:34" pos:end="83:34">i</name> <operator pos:start="83:36" pos:end="83:36">&lt;</operator> <name pos:start="83:38" pos:end="83:45">ACB_SIZE</name> <operator pos:start="83:47" pos:end="83:47">+</operator> <name pos:start="83:49" pos:end="83:54">length</name></expr>;</condition> <incr pos:start="83:57" pos:end="83:59"><expr pos:start="83:57" pos:end="83:59"><name pos:start="83:57" pos:end="83:57">i</name><operator pos:start="83:58" pos:end="83:59">++</operator></expr></incr>)</control><block type="pseudo" pos:start="85:9" pos:end="85:77"><block_content pos:start="85:9" pos:end="85:77">

        <expr_stmt pos:start="85:9" pos:end="85:77"><expr pos:start="85:9" pos:end="85:76"><name pos:start="85:9" pos:end="85:12">sum2</name> <operator pos:start="85:14" pos:end="85:15">+=</operator> <name pos:start="85:17" pos:end="85:41"><name pos:start="85:17" pos:end="85:17">e</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:38">postfilter_residual</name><index pos:start="85:39" pos:end="85:41">[<expr pos:start="85:40" pos:end="85:40"><name pos:start="85:40" pos:end="85:40">i</name></expr>]</index></name> <operator pos:start="85:43" pos:end="85:43">*</operator> <name pos:start="85:45" pos:end="85:76"><name pos:start="85:45" pos:end="85:45">e</name><operator pos:start="85:46" pos:end="85:47">-&gt;</operator><name pos:start="85:48" pos:end="85:66">postfilter_residual</name><index pos:start="85:67" pos:end="85:76">[<expr pos:start="85:68" pos:end="85:75"><name pos:start="85:68" pos:end="85:68">i</name> <operator pos:start="85:70" pos:end="85:70">-</operator> <name pos:start="85:72" pos:end="85:75">best</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="89:5" pos:end="117:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:53">(<expr pos:start="89:9" pos:end="89:52"><name pos:start="89:9" pos:end="89:12">sum2</name> <operator pos:start="89:14" pos:end="89:14">*</operator> <name pos:start="89:16" pos:end="89:19">sum1</name> <operator pos:start="89:21" pos:end="89:22">==</operator> <literal type="number" pos:start="89:24" pos:end="89:24">0</literal> <operator pos:start="89:26" pos:end="89:27">||</operator> <name pos:start="89:29" pos:end="89:38"><name pos:start="89:29" pos:end="89:29">e</name><operator pos:start="89:30" pos:end="89:31">-&gt;</operator><name pos:start="89:32" pos:end="89:38">bitrate</name></name> <operator pos:start="89:40" pos:end="89:41">==</operator> <name pos:start="89:43" pos:end="89:52">RATE_QUANT</name></expr>)</condition> <block pos:start="89:55" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:80">

        <expr_stmt pos:start="91:9" pos:end="91:80"><expr pos:start="91:9" pos:end="91:79"><call pos:start="91:9" pos:end="91:79"><name pos:start="91:9" pos:end="91:14">memcpy</name><argument_list pos:start="91:15" pos:end="91:79">(<argument pos:start="91:16" pos:end="91:19"><expr pos:start="91:16" pos:end="91:19"><name pos:start="91:16" pos:end="91:19">temp</name></expr></argument>, <argument pos:start="91:22" pos:end="91:54"><expr pos:start="91:22" pos:end="91:54"><name pos:start="91:22" pos:end="91:43"><name pos:start="91:22" pos:end="91:22">e</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:43">postfilter_residual</name></name> <operator pos:start="91:45" pos:end="91:45">+</operator> <name pos:start="91:47" pos:end="91:54">ACB_SIZE</name></expr></argument>, <argument pos:start="91:57" pos:end="91:78"><expr pos:start="91:57" pos:end="91:78"><name pos:start="91:57" pos:end="91:62">length</name> <operator pos:start="91:64" pos:end="91:64">*</operator> <sizeof pos:start="91:66" pos:end="91:78">sizeof<argument_list pos:start="91:72" pos:end="91:78">(<argument pos:start="91:73" pos:end="91:77"><expr pos:start="91:73" pos:end="91:77"><name pos:start="91:73" pos:end="91:77">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="117:5">else <block pos:start="93:12" pos:end="117:5">{<block_content pos:start="95:9" pos:end="115:9">

        <expr_stmt pos:start="95:9" pos:end="95:28"><expr pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:13">gamma</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <name pos:start="95:17" pos:end="95:20">sum2</name> <operator pos:start="95:22" pos:end="95:22">/</operator> <name pos:start="95:24" pos:end="95:27">sum1</name></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="115:9"><if pos:start="97:9" pos:end="99:84">if <condition pos:start="97:12" pos:end="97:24">(<expr pos:start="97:13" pos:end="97:23"><name pos:start="97:13" pos:end="97:17">gamma</name> <operator pos:start="97:19" pos:end="97:19">&lt;</operator> <literal type="number" pos:start="97:21" pos:end="97:23">0.5</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:84"><block_content pos:start="99:13" pos:end="99:84">

            <expr_stmt pos:start="99:13" pos:end="99:84"><expr pos:start="99:13" pos:end="99:83"><call pos:start="99:13" pos:end="99:83"><name pos:start="99:13" pos:end="99:18">memcpy</name><argument_list pos:start="99:19" pos:end="99:83">(<argument pos:start="99:20" pos:end="99:23"><expr pos:start="99:20" pos:end="99:23"><name pos:start="99:20" pos:end="99:23">temp</name></expr></argument>, <argument pos:start="99:26" pos:end="99:58"><expr pos:start="99:26" pos:end="99:58"><name pos:start="99:26" pos:end="99:47"><name pos:start="99:26" pos:end="99:26">e</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:47">postfilter_residual</name></name> <operator pos:start="99:49" pos:end="99:49">+</operator> <name pos:start="99:51" pos:end="99:58">ACB_SIZE</name></expr></argument>, <argument pos:start="99:61" pos:end="99:82"><expr pos:start="99:61" pos:end="99:82"><name pos:start="99:61" pos:end="99:66">length</name> <operator pos:start="99:68" pos:end="99:68">*</operator> <sizeof pos:start="99:70" pos:end="99:82">sizeof<argument_list pos:start="99:76" pos:end="99:82">(<argument pos:start="99:77" pos:end="99:81"><expr pos:start="99:77" pos:end="99:81"><name pos:start="99:77" pos:end="99:81">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="101:9" pos:end="115:9">else <block pos:start="101:14" pos:end="115:9">{<block_content pos:start="103:13" pos:end="113:13">

            <expr_stmt pos:start="103:13" pos:end="103:38"><expr pos:start="103:13" pos:end="103:37"><name pos:start="103:13" pos:end="103:17">gamma</name> <operator pos:start="103:19" pos:end="103:19">=</operator> <call pos:start="103:21" pos:end="103:37"><name pos:start="103:21" pos:end="103:25">FFMIN</name><argument_list pos:start="103:26" pos:end="103:37">(<argument pos:start="103:27" pos:end="103:31"><expr pos:start="103:27" pos:end="103:31"><name pos:start="103:27" pos:end="103:31">gamma</name></expr></argument>, <argument pos:start="103:34" pos:end="103:36"><expr pos:start="103:34" pos:end="103:36"><literal type="number" pos:start="103:34" pos:end="103:36">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="107:13" pos:end="113:13">for <control pos:start="107:17" pos:end="107:40">(<init pos:start="107:18" pos:end="107:23"><expr pos:start="107:18" pos:end="107:22"><name pos:start="107:18" pos:end="107:18">i</name> <operator pos:start="107:20" pos:end="107:20">=</operator> <literal type="number" pos:start="107:22" pos:end="107:22">0</literal></expr>;</init> <condition pos:start="107:25" pos:end="107:35"><expr pos:start="107:25" pos:end="107:34"><name pos:start="107:25" pos:end="107:25">i</name> <operator pos:start="107:27" pos:end="107:27">&lt;</operator> <name pos:start="107:29" pos:end="107:34">length</name></expr>;</condition> <incr pos:start="107:37" pos:end="107:39"><expr pos:start="107:37" pos:end="107:39"><name pos:start="107:37" pos:end="107:37">i</name><operator pos:start="107:38" pos:end="107:39">++</operator></expr></incr>)</control> <block pos:start="107:42" pos:end="113:13">{<block_content pos:start="109:17" pos:end="111:78">

                <expr_stmt pos:start="109:17" pos:end="111:78"><expr pos:start="109:17" pos:end="111:77"><name pos:start="109:17" pos:end="109:23"><name pos:start="109:17" pos:end="109:20">temp</name><index pos:start="109:21" pos:end="109:23">[<expr pos:start="109:22" pos:end="109:22"><name pos:start="109:22" pos:end="109:22">i</name></expr>]</index></name> <operator pos:start="109:25" pos:end="109:25">=</operator> <name pos:start="109:27" pos:end="109:62"><name pos:start="109:27" pos:end="109:27">e</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:48">postfilter_residual</name><index pos:start="109:49" pos:end="109:62">[<expr pos:start="109:50" pos:end="109:61"><name pos:start="109:50" pos:end="109:57">ACB_SIZE</name> <operator pos:start="109:59" pos:end="109:59">+</operator> <name pos:start="109:61" pos:end="109:61">i</name></expr>]</index></name> <operator pos:start="109:64" pos:end="109:64">+</operator> <name pos:start="109:66" pos:end="109:70">gamma</name> <operator pos:start="109:72" pos:end="109:72">*</operator>

                    <name pos:start="111:21" pos:end="111:31"><name pos:start="111:21" pos:end="111:23">pfc</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:31">ltgain</name></name> <operator pos:start="111:33" pos:end="111:33">*</operator> <name pos:start="111:35" pos:end="111:77"><name pos:start="111:35" pos:end="111:35">e</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:56">postfilter_residual</name><index pos:start="111:57" pos:end="111:77">[<expr pos:start="111:58" pos:end="111:76"><name pos:start="111:58" pos:end="111:65">ACB_SIZE</name> <operator pos:start="111:67" pos:end="111:67">+</operator> <name pos:start="111:69" pos:end="111:69">i</name> <operator pos:start="111:71" pos:end="111:71">-</operator> <name pos:start="111:73" pos:end="111:76">best</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:50"><expr pos:start="121:5" pos:end="121:49"><call pos:start="121:5" pos:end="121:49"><name pos:start="121:5" pos:end="121:10">memcpy</name><argument_list pos:start="121:11" pos:end="121:49">(<argument pos:start="121:12" pos:end="121:18"><expr pos:start="121:12" pos:end="121:18"><name pos:start="121:12" pos:end="121:18">scratch</name></expr></argument>, <argument pos:start="121:21" pos:end="121:24"><expr pos:start="121:21" pos:end="121:24"><name pos:start="121:21" pos:end="121:24">temp</name></expr></argument>, <argument pos:start="121:27" pos:end="121:48"><expr pos:start="121:27" pos:end="121:48"><name pos:start="121:27" pos:end="121:32">length</name> <operator pos:start="121:34" pos:end="121:34">*</operator> <sizeof pos:start="121:36" pos:end="121:48">sizeof<argument_list pos:start="121:42" pos:end="121:48">(<argument pos:start="121:43" pos:end="121:47"><expr pos:start="121:43" pos:end="121:47"><name pos:start="121:43" pos:end="121:47">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:65"><expr pos:start="123:5" pos:end="123:64"><call pos:start="123:5" pos:end="123:64"><name pos:start="123:5" pos:end="123:10">memcpy</name><argument_list pos:start="123:11" pos:end="123:64">(<argument pos:start="123:12" pos:end="123:14"><expr pos:start="123:12" pos:end="123:14"><name pos:start="123:12" pos:end="123:14">mem</name></expr></argument>, <argument pos:start="123:17" pos:end="123:33"><expr pos:start="123:17" pos:end="123:33"><name pos:start="123:17" pos:end="123:33"><name pos:start="123:17" pos:end="123:17">e</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:33">postfilter_iir</name></name></expr></argument>, <argument pos:start="123:36" pos:end="123:63"><expr pos:start="123:36" pos:end="123:63"><name pos:start="123:36" pos:end="123:47">FILTER_ORDER</name> <operator pos:start="123:49" pos:end="123:49">*</operator> <sizeof pos:start="123:51" pos:end="123:63">sizeof<argument_list pos:start="123:57" pos:end="123:63">(<argument pos:start="123:58" pos:end="123:62"><expr pos:start="123:58" pos:end="123:62"><name pos:start="123:58" pos:end="123:62">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:60"><expr pos:start="125:5" pos:end="125:59"><call pos:start="125:5" pos:end="125:59"><name pos:start="125:5" pos:end="125:20">synthesis_filter</name><argument_list pos:start="125:21" pos:end="125:59">(<argument pos:start="125:22" pos:end="125:28"><expr pos:start="125:22" pos:end="125:28"><name pos:start="125:22" pos:end="125:28">scratch</name></expr></argument>, <argument pos:start="125:31" pos:end="125:36"><expr pos:start="125:31" pos:end="125:36"><name pos:start="125:31" pos:end="125:36">wcoef2</name></expr></argument>, <argument pos:start="125:39" pos:end="125:41"><expr pos:start="125:39" pos:end="125:41"><name pos:start="125:39" pos:end="125:41">mem</name></expr></argument>, <argument pos:start="125:44" pos:end="125:49"><expr pos:start="125:44" pos:end="125:49"><name pos:start="125:44" pos:end="125:49">length</name></expr></argument>, <argument pos:start="125:52" pos:end="125:58"><expr pos:start="125:52" pos:end="125:58"><name pos:start="125:52" pos:end="125:58">scratch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="129:5" pos:end="129:46">/* Gain computation, TIA/IS-127 5.9.4-2 */</comment>

    <for pos:start="131:5" pos:end="137:5">for <control pos:start="131:9" pos:end="131:52">(<init pos:start="131:10" pos:end="131:35"><expr pos:start="131:10" pos:end="131:14"><name pos:start="131:10" pos:end="131:10">i</name> <operator pos:start="131:12" pos:end="131:12">=</operator> <literal type="number" pos:start="131:14" pos:end="131:14">0</literal></expr><operator pos:start="131:15" pos:end="131:15">,</operator> <expr pos:start="131:17" pos:end="131:24"><name pos:start="131:17" pos:end="131:20">sum1</name> <operator pos:start="131:22" pos:end="131:22">=</operator> <literal type="number" pos:start="131:24" pos:end="131:24">0</literal></expr><operator pos:start="131:25" pos:end="131:25">,</operator> <expr pos:start="131:27" pos:end="131:34"><name pos:start="131:27" pos:end="131:30">sum2</name> <operator pos:start="131:32" pos:end="131:32">=</operator> <literal type="number" pos:start="131:34" pos:end="131:34">0</literal></expr>;</init> <condition pos:start="131:37" pos:end="131:47"><expr pos:start="131:37" pos:end="131:46"><name pos:start="131:37" pos:end="131:37">i</name> <operator pos:start="131:39" pos:end="131:39">&lt;</operator> <name pos:start="131:41" pos:end="131:46">length</name></expr>;</condition> <incr pos:start="131:49" pos:end="131:51"><expr pos:start="131:49" pos:end="131:51"><name pos:start="131:49" pos:end="131:49">i</name><operator pos:start="131:50" pos:end="131:51">++</operator></expr></incr>)</control> <block pos:start="131:54" pos:end="137:5">{<block_content pos:start="133:9" pos:end="135:40">

        <expr_stmt pos:start="133:9" pos:end="133:30"><expr pos:start="133:9" pos:end="133:29"><name pos:start="133:9" pos:end="133:12">sum1</name> <operator pos:start="133:14" pos:end="133:15">+=</operator> <name pos:start="133:17" pos:end="133:21"><name pos:start="133:17" pos:end="133:18">in</name><index pos:start="133:19" pos:end="133:21">[<expr pos:start="133:20" pos:end="133:20"><name pos:start="133:20" pos:end="133:20">i</name></expr>]</index></name> <operator pos:start="133:23" pos:end="133:23">*</operator> <name pos:start="133:25" pos:end="133:29"><name pos:start="133:25" pos:end="133:26">in</name><index pos:start="133:27" pos:end="133:29">[<expr pos:start="133:28" pos:end="133:28"><name pos:start="133:28" pos:end="133:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:40"><expr pos:start="135:9" pos:end="135:39"><name pos:start="135:9" pos:end="135:12">sum2</name> <operator pos:start="135:14" pos:end="135:15">+=</operator> <name pos:start="135:17" pos:end="135:26"><name pos:start="135:17" pos:end="135:23">scratch</name><index pos:start="135:24" pos:end="135:26">[<expr pos:start="135:25" pos:end="135:25"><name pos:start="135:25" pos:end="135:25">i</name></expr>]</index></name> <operator pos:start="135:28" pos:end="135:28">*</operator> <name pos:start="135:30" pos:end="135:39"><name pos:start="135:30" pos:end="135:36">scratch</name><index pos:start="135:37" pos:end="135:39">[<expr pos:start="135:38" pos:end="135:38"><name pos:start="135:38" pos:end="135:38">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="139:5" pos:end="139:42"><expr pos:start="139:5" pos:end="139:41"><name pos:start="139:5" pos:end="139:8">gain</name> <operator pos:start="139:10" pos:end="139:10">=</operator> <ternary pos:start="139:12" pos:end="139:41"><condition pos:start="139:12" pos:end="139:17"><expr pos:start="139:12" pos:end="139:15"><name pos:start="139:12" pos:end="139:15">sum2</name></expr> ?</condition><then pos:start="139:19" pos:end="139:35"> <expr pos:start="139:19" pos:end="139:35"><call pos:start="139:19" pos:end="139:35"><name pos:start="139:19" pos:end="139:22">sqrt</name><argument_list pos:start="139:23" pos:end="139:35">(<argument pos:start="139:24" pos:end="139:34"><expr pos:start="139:24" pos:end="139:34"><name pos:start="139:24" pos:end="139:27">sum1</name> <operator pos:start="139:29" pos:end="139:29">/</operator> <name pos:start="139:31" pos:end="139:34">sum2</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="139:37" pos:end="139:41">: <expr pos:start="139:39" pos:end="139:41"><literal type="number" pos:start="139:39" pos:end="139:41">1.0</literal></expr></else></ternary></expr>;</expr_stmt>



    <for pos:start="143:5" pos:end="145:24">for <control pos:start="143:9" pos:end="143:32">(<init pos:start="143:10" pos:end="143:15"><expr pos:start="143:10" pos:end="143:14"><name pos:start="143:10" pos:end="143:10">i</name> <operator pos:start="143:12" pos:end="143:12">=</operator> <literal type="number" pos:start="143:14" pos:end="143:14">0</literal></expr>;</init> <condition pos:start="143:17" pos:end="143:27"><expr pos:start="143:17" pos:end="143:26"><name pos:start="143:17" pos:end="143:17">i</name> <operator pos:start="143:19" pos:end="143:19">&lt;</operator> <name pos:start="143:21" pos:end="143:26">length</name></expr>;</condition> <incr pos:start="143:29" pos:end="143:31"><expr pos:start="143:29" pos:end="143:31"><name pos:start="143:29" pos:end="143:29">i</name><operator pos:start="143:30" pos:end="143:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="145:9" pos:end="145:24"><block_content pos:start="145:9" pos:end="145:24">

        <expr_stmt pos:start="145:9" pos:end="145:24"><expr pos:start="145:9" pos:end="145:23"><name pos:start="145:9" pos:end="145:15"><name pos:start="145:9" pos:end="145:12">temp</name><index pos:start="145:13" pos:end="145:15">[<expr pos:start="145:14" pos:end="145:14"><name pos:start="145:14" pos:end="145:14">i</name></expr>]</index></name> <operator pos:start="145:17" pos:end="145:18">*=</operator> <name pos:start="145:20" pos:end="145:23">gain</name></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="149:5" pos:end="149:31">/* Short term postfilter */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:67"><expr pos:start="151:5" pos:end="151:66"><call pos:start="151:5" pos:end="151:66"><name pos:start="151:5" pos:end="151:20">synthesis_filter</name><argument_list pos:start="151:21" pos:end="151:66">(<argument pos:start="151:22" pos:end="151:25"><expr pos:start="151:22" pos:end="151:25"><name pos:start="151:22" pos:end="151:25">temp</name></expr></argument>, <argument pos:start="151:28" pos:end="151:33"><expr pos:start="151:28" pos:end="151:33"><name pos:start="151:28" pos:end="151:33">wcoef2</name></expr></argument>, <argument pos:start="151:36" pos:end="151:52"><expr pos:start="151:36" pos:end="151:52"><name pos:start="151:36" pos:end="151:52"><name pos:start="151:36" pos:end="151:36">e</name><operator pos:start="151:37" pos:end="151:38">-&gt;</operator><name pos:start="151:39" pos:end="151:52">postfilter_iir</name></name></expr></argument>, <argument pos:start="151:55" pos:end="151:60"><expr pos:start="151:55" pos:end="151:60"><name pos:start="151:55" pos:end="151:60">length</name></expr></argument>, <argument pos:start="151:63" pos:end="151:65"><expr pos:start="151:63" pos:end="151:65"><name pos:start="151:63" pos:end="151:65">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="155:5" pos:end="157:70"><expr pos:start="155:5" pos:end="157:69"><call pos:start="155:5" pos:end="157:69"><name pos:start="155:5" pos:end="155:10">memcpy</name><argument_list pos:start="155:11" pos:end="157:69">(<argument pos:start="155:12" pos:end="155:33"><expr pos:start="155:12" pos:end="155:33"><name pos:start="155:12" pos:end="155:33"><name pos:start="155:12" pos:end="155:12">e</name><operator pos:start="155:13" pos:end="155:14">-&gt;</operator><name pos:start="155:15" pos:end="155:33">postfilter_residual</name></name></expr></argument>,

           <argument pos:start="157:12" pos:end="157:42"><expr pos:start="157:12" pos:end="157:42"><name pos:start="157:12" pos:end="157:33"><name pos:start="157:12" pos:end="157:12">e</name><operator pos:start="157:13" pos:end="157:14">-&gt;</operator><name pos:start="157:15" pos:end="157:33">postfilter_residual</name></name> <operator pos:start="157:35" pos:end="157:35">+</operator> <name pos:start="157:37" pos:end="157:42">length</name></expr></argument>, <argument pos:start="157:45" pos:end="157:68"><expr pos:start="157:45" pos:end="157:68"><name pos:start="157:45" pos:end="157:52">ACB_SIZE</name> <operator pos:start="157:54" pos:end="157:54">*</operator> <sizeof pos:start="157:56" pos:end="157:68">sizeof<argument_list pos:start="157:62" pos:end="157:68">(<argument pos:start="157:63" pos:end="157:67"><expr pos:start="157:63" pos:end="157:67"><name pos:start="157:63" pos:end="157:67">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
