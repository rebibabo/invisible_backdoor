<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/229.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">get_physical_address_data</name><parameter_list pos:start="1:37" pos:end="5:79">(<parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:45">CPUState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">env</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:65"><decl pos:start="3:38" pos:end="3:65"><type pos:start="3:38" pos:end="3:65"><name pos:start="3:38" pos:end="3:55">target_phys_addr_t</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:65">physical</name></decl></parameter>, <parameter pos:start="3:68" pos:end="3:76"><decl pos:start="3:68" pos:end="3:76"><type pos:start="3:68" pos:end="3:76"><name pos:start="3:68" pos:end="3:70">int</name> <modifier pos:start="3:72" pos:end="3:72">*</modifier></type><name pos:start="3:73" pos:end="3:76">prot</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:57"><decl pos:start="5:38" pos:end="5:57"><type pos:start="5:38" pos:end="5:57"><name pos:start="5:38" pos:end="5:49">target_ulong</name></type> <name pos:start="5:51" pos:end="5:57">address</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:65"><decl pos:start="5:60" pos:end="5:65"><type pos:start="5:60" pos:end="5:65"><name pos:start="5:60" pos:end="5:62">int</name></type> <name pos:start="5:64" pos:end="5:65">rw</name></decl></parameter>, <parameter pos:start="5:68" pos:end="5:78"><decl pos:start="5:68" pos:end="5:78"><type pos:start="5:68" pos:end="5:78"><name pos:start="5:68" pos:end="5:70">int</name></type> <name pos:start="5:72" pos:end="5:78">is_user</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="123:1">{<block_content pos:start="9:5" pos:end="121:13">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:21">mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:18">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:33">(<expr pos:start="15:9" pos:end="15:32"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:17"><name pos:start="15:10" pos:end="15:12">env</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:17">lsu</name></name> <operator pos:start="15:19" pos:end="15:19">&amp;</operator> <name pos:start="15:21" pos:end="15:26">DMMU_E</name><operator pos:start="15:27" pos:end="15:27">)</operator> <operator pos:start="15:29" pos:end="15:30">==</operator> <literal type="number" pos:start="15:32" pos:end="15:32">0</literal></expr>)</condition> <block pos:start="15:35" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:17"> <comment type="block" pos:start="15:37" pos:end="15:55">/* DMMU disabled */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:28"><expr pos:start="17:9" pos:end="17:27"><operator pos:start="17:9" pos:end="17:9">*</operator><name pos:start="17:10" pos:end="17:17">physical</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:27">address</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:39"><expr pos:start="19:9" pos:end="19:38"><operator pos:start="19:9" pos:end="19:9">*</operator><name pos:start="19:10" pos:end="19:13">prot</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:25">PAGE_READ</name> <operator pos:start="19:27" pos:end="19:27">|</operator> <name pos:start="19:29" pos:end="19:38">PAGE_WRITE</name></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="27:5" pos:end="112:0">for <control pos:start="27:9" pos:end="27:28">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:23"><expr pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <literal type="number" pos:start="27:21" pos:end="27:22">64</literal></expr>;</condition> <incr pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:25">i</name><operator pos:start="27:26" pos:end="27:27">++</operator></expr></incr>)</control> <block pos:start="27:30" pos:end="112:0">{<block_content pos:start="29:9" pos:end="107:9">

        <switch pos:start="29:9" pos:end="57:9">switch <condition pos:start="29:16" pos:end="29:45">(<expr pos:start="29:17" pos:end="29:44"><operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:33"><name pos:start="29:18" pos:end="29:20">env</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:30">dtlb_tte</name><index pos:start="29:31" pos:end="29:33">[<expr pos:start="29:32" pos:end="29:32"><name pos:start="29:32" pos:end="29:32">i</name></expr>]</index></name> <operator pos:start="29:35" pos:end="29:36">&gt;&gt;</operator> <literal type="number" pos:start="29:38" pos:end="29:39">61</literal><operator pos:start="29:40" pos:end="29:40">)</operator> <operator pos:start="29:42" pos:end="29:42">&amp;</operator> <literal type="number" pos:start="29:44" pos:end="29:44">3</literal></expr>)</condition> <block pos:start="29:47" pos:end="57:9">{<block_content pos:start="31:9" pos:end="55:18">

        <default pos:start="31:9" pos:end="31:16">default:</default>

        <case pos:start="33:9" pos:end="33:17">case <expr pos:start="33:14" pos:end="33:16"><literal type="number" pos:start="33:14" pos:end="33:16">0x0</literal></expr>:</case> <comment type="line" pos:start="33:19" pos:end="33:23">// 8k</comment>

            <expr_stmt pos:start="35:13" pos:end="35:41"><expr pos:start="35:13" pos:end="35:40"><name pos:start="35:13" pos:end="35:16">mask</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <literal type="number" pos:start="35:20" pos:end="35:40">0xffffffffffffe000ULL</literal></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:17">case <expr pos:start="39:14" pos:end="39:16"><literal type="number" pos:start="39:14" pos:end="39:16">0x1</literal></expr>:</case> <comment type="line" pos:start="39:19" pos:end="39:24">// 64k</comment>

            <expr_stmt pos:start="41:13" pos:end="41:41"><expr pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:16">mask</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <literal type="number" pos:start="41:20" pos:end="41:40">0xffffffffffff0000ULL</literal></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:17">case <expr pos:start="45:14" pos:end="45:16"><literal type="number" pos:start="45:14" pos:end="45:16">0x2</literal></expr>:</case> <comment type="line" pos:start="45:19" pos:end="45:25">// 512k</comment>

            <expr_stmt pos:start="47:13" pos:end="47:41"><expr pos:start="47:13" pos:end="47:40"><name pos:start="47:13" pos:end="47:16">mask</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <literal type="number" pos:start="47:20" pos:end="47:40">0xfffffffffff80000ULL</literal></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <case pos:start="51:9" pos:end="51:17">case <expr pos:start="51:14" pos:end="51:16"><literal type="number" pos:start="51:14" pos:end="51:16">0x3</literal></expr>:</case> <comment type="line" pos:start="51:19" pos:end="51:23">// 4M</comment>

            <expr_stmt pos:start="53:13" pos:end="53:41"><expr pos:start="53:13" pos:end="53:40"><name pos:start="53:13" pos:end="53:16">mask</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <literal type="number" pos:start="53:20" pos:end="53:40">0xffffffffffc00000ULL</literal></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        </block_content>}</block></switch>

        <comment type="line" pos:start="59:9" pos:end="59:41">// ctx match, vaddr match, valid?</comment>

        <if_stmt pos:start="61:9" pos:end="107:9"><if pos:start="61:9" pos:end="107:9">if <condition pos:start="61:12" pos:end="65:55">(<expr pos:start="61:13" pos:end="65:54"><name pos:start="61:13" pos:end="61:28"><name pos:start="61:13" pos:end="61:15">env</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:25">dmmuregs</name><index pos:start="61:26" pos:end="61:28">[<expr pos:start="61:27" pos:end="61:27"><literal type="number" pos:start="61:27" pos:end="61:27">1</literal></expr>]</index></name> <operator pos:start="61:30" pos:end="61:31">==</operator> <operator pos:start="61:33" pos:end="61:33">(</operator><name pos:start="61:34" pos:end="61:49"><name pos:start="61:34" pos:end="61:36">env</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:46">dtlb_tag</name><index pos:start="61:47" pos:end="61:49">[<expr pos:start="61:48" pos:end="61:48"><name pos:start="61:48" pos:end="61:48">i</name></expr>]</index></name> <operator pos:start="61:51" pos:end="61:51">&amp;</operator> <literal type="number" pos:start="61:53" pos:end="61:58">0x1fff</literal><operator pos:start="61:59" pos:end="61:59">)</operator> <operator pos:start="61:61" pos:end="61:62">&amp;&amp;</operator>

            <operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:20">address</name> <operator pos:start="63:22" pos:end="63:22">&amp;</operator> <name pos:start="63:24" pos:end="63:27">mask</name><operator pos:start="63:28" pos:end="63:28">)</operator> <operator pos:start="63:30" pos:end="63:31">==</operator> <operator pos:start="63:33" pos:end="63:33">(</operator><name pos:start="63:34" pos:end="63:49"><name pos:start="63:34" pos:end="63:36">env</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:46">dtlb_tag</name><index pos:start="63:47" pos:end="63:49">[<expr pos:start="63:48" pos:end="63:48"><name pos:start="63:48" pos:end="63:48">i</name></expr>]</index></name> <operator pos:start="63:51" pos:end="63:51">&amp;</operator> <name pos:start="63:53" pos:end="63:56">mask</name><operator pos:start="63:57" pos:end="63:57">)</operator> <operator pos:start="63:59" pos:end="63:60">&amp;&amp;</operator>

            <operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:29"><name pos:start="65:14" pos:end="65:16">env</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:26">dtlb_tte</name><index pos:start="65:27" pos:end="65:29">[<expr pos:start="65:28" pos:end="65:28"><name pos:start="65:28" pos:end="65:28">i</name></expr>]</index></name> <operator pos:start="65:31" pos:end="65:31">&amp;</operator> <literal type="number" pos:start="65:33" pos:end="65:53">0x8000000000000000ULL</literal><operator pos:start="65:54" pos:end="65:54">)</operator></expr>)</condition> <block pos:start="65:57" pos:end="107:9">{<block_content pos:start="69:13" pos:end="105:21">

            <comment type="line" pos:start="67:13" pos:end="67:25">// access ok?</comment>

            <if_stmt pos:start="69:13" pos:end="93:13"><if pos:start="69:13" pos:end="93:13">if <condition pos:start="69:16" pos:end="71:57">(<expr pos:start="69:17" pos:end="71:56"><operator pos:start="69:17" pos:end="69:17">(</operator><operator pos:start="69:18" pos:end="69:18">(</operator><name pos:start="69:19" pos:end="69:34"><name pos:start="69:19" pos:end="69:21">env</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:31">dtlb_tte</name><index pos:start="69:32" pos:end="69:34">[<expr pos:start="69:33" pos:end="69:33"><name pos:start="69:33" pos:end="69:33">i</name></expr>]</index></name> <operator pos:start="69:36" pos:end="69:36">&amp;</operator> <literal type="number" pos:start="69:38" pos:end="69:40">0x4</literal><operator pos:start="69:41" pos:end="69:41">)</operator> <operator pos:start="69:43" pos:end="69:44">&amp;&amp;</operator> <name pos:start="69:46" pos:end="69:52">is_user</name><operator pos:start="69:53" pos:end="69:53">)</operator> <operator pos:start="69:55" pos:end="69:56">||</operator>

                <operator pos:start="71:17" pos:end="71:17">(</operator><operator pos:start="71:18" pos:end="71:18">!</operator><operator pos:start="71:19" pos:end="71:19">(</operator><name pos:start="71:20" pos:end="71:35"><name pos:start="71:20" pos:end="71:22">env</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:32">dtlb_tte</name><index pos:start="71:33" pos:end="71:35">[<expr pos:start="71:34" pos:end="71:34"><name pos:start="71:34" pos:end="71:34">i</name></expr>]</index></name> <operator pos:start="71:37" pos:end="71:37">&amp;</operator> <literal type="number" pos:start="71:39" pos:end="71:41">0x2</literal><operator pos:start="71:42" pos:end="71:42">)</operator> <operator pos:start="71:44" pos:end="71:45">&amp;&amp;</operator> <operator pos:start="71:47" pos:end="71:47">(</operator><name pos:start="71:48" pos:end="71:49">rw</name> <operator pos:start="71:51" pos:end="71:52">==</operator> <literal type="number" pos:start="71:54" pos:end="71:54">1</literal><operator pos:start="71:55" pos:end="71:55">)</operator><operator pos:start="71:56" pos:end="71:56">)</operator></expr>)</condition> <block pos:start="71:59" pos:end="93:13">{<block_content pos:start="73:17" pos:end="91:25">

                <if_stmt pos:start="73:17" pos:end="75:41"><if pos:start="73:17" pos:end="75:41">if <condition pos:start="73:20" pos:end="73:37">(<expr pos:start="73:21" pos:end="73:36"><name pos:start="73:21" pos:end="73:36"><name pos:start="73:21" pos:end="73:23">env</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:33">dmmuregs</name><index pos:start="73:34" pos:end="73:36">[<expr pos:start="73:35" pos:end="73:35"><literal type="number" pos:start="73:35" pos:end="73:35">3</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="75:21" pos:end="75:41"><block_content pos:start="75:21" pos:end="75:41"> <comment type="block" pos:start="73:39" pos:end="73:65">/* Fault status register */</comment>

                    <expr_stmt pos:start="75:21" pos:end="75:41"><expr pos:start="75:21" pos:end="75:40"><name pos:start="75:21" pos:end="75:36"><name pos:start="75:21" pos:end="75:23">env</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:33">dmmuregs</name><index pos:start="75:34" pos:end="75:36">[<expr pos:start="75:35" pos:end="75:35"><literal type="number" pos:start="75:35" pos:end="75:35">3</literal></expr>]</index></name> <operator pos:start="75:38" pos:end="75:38">=</operator> <literal type="number" pos:start="75:40" pos:end="75:40">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="75:43" pos:end="77:62">/* overflow (not read before

                                             another fault) */</comment>

                <expr_stmt pos:start="79:17" pos:end="79:74"><expr pos:start="79:17" pos:end="79:73"><name pos:start="79:17" pos:end="79:32"><name pos:start="79:17" pos:end="79:19">env</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:29">dmmuregs</name><index pos:start="79:30" pos:end="79:32">[<expr pos:start="79:31" pos:end="79:31"><literal type="number" pos:start="79:31" pos:end="79:31">3</literal></expr>]</index></name> <operator pos:start="79:34" pos:end="79:35">|=</operator> <operator pos:start="79:37" pos:end="79:37">(</operator><name pos:start="79:38" pos:end="79:44">is_user</name> <operator pos:start="79:46" pos:end="79:47">&lt;&lt;</operator> <literal type="number" pos:start="79:49" pos:end="79:49">3</literal><operator pos:start="79:50" pos:end="79:50">)</operator> <operator pos:start="79:52" pos:end="79:52">|</operator> <operator pos:start="79:54" pos:end="79:54">(</operator><operator pos:start="79:55" pos:end="79:55">(</operator><name pos:start="79:56" pos:end="79:57">rw</name> <operator pos:start="79:59" pos:end="79:60">==</operator> <literal type="number" pos:start="79:62" pos:end="79:62">1</literal><operator pos:start="79:63" pos:end="79:63">)</operator> <operator pos:start="79:65" pos:end="79:66">&lt;&lt;</operator> <literal type="number" pos:start="79:68" pos:end="79:68">2</literal><operator pos:start="79:69" pos:end="79:69">)</operator> <operator pos:start="79:71" pos:end="79:71">|</operator> <literal type="number" pos:start="79:73" pos:end="79:73">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:43"><expr pos:start="81:17" pos:end="81:42"><name pos:start="81:17" pos:end="81:32"><name pos:start="81:17" pos:end="81:19">env</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:29">dmmuregs</name><index pos:start="81:30" pos:end="81:32">[<expr pos:start="81:31" pos:end="81:31"><literal type="number" pos:start="81:31" pos:end="81:31">4</literal></expr>]</index></name> <operator pos:start="81:34" pos:end="81:34">=</operator> <name pos:start="81:36" pos:end="81:42">address</name></expr>;</expr_stmt> <comment type="block" pos:start="81:45" pos:end="81:72">/* Fault address register */</comment>

                <expr_stmt pos:start="83:17" pos:end="86:0"><expr pos:start="83:17" pos:end="83:48"><name pos:start="83:17" pos:end="83:36"><name pos:start="83:17" pos:end="83:19">env</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:36">exception_index</name></name> <operator pos:start="83:38" pos:end="83:38">=</operator> <name pos:start="83:40" pos:end="83:48">TT_DFAULT</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="85:1" pos:end="85:16">#<cpp:directive pos:start="85:2" pos:end="85:6">ifdef</cpp:directive> <name pos:start="85:8" pos:end="85:16">DEBUG_MMU</name></cpp:ifdef>

                <expr_stmt pos:start="87:17" pos:end="90:0"><expr pos:start="87:17" pos:end="87:60"><call pos:start="87:17" pos:end="87:60"><name pos:start="87:17" pos:end="87:22">printf</name><argument_list pos:start="87:23" pos:end="87:60">(<argument pos:start="87:24" pos:end="87:50"><expr pos:start="87:24" pos:end="87:50"><literal type="string" pos:start="87:24" pos:end="87:38">"DFAULT at 0x%"</literal> <name pos:start="87:40" pos:end="87:45">PRIx64</name> <literal type="string" pos:start="87:47" pos:end="87:50">"\n"</literal></expr></argument>, <argument pos:start="87:53" pos:end="87:59"><expr pos:start="87:53" pos:end="87:59"><name pos:start="87:53" pos:end="87:59">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>

                <return pos:start="91:17" pos:end="91:25">return <expr pos:start="91:24" pos:end="91:24"><literal type="number" pos:start="91:24" pos:end="91:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="97:41"><expr pos:start="95:13" pos:end="97:40"><operator pos:start="95:13" pos:end="95:13">*</operator><name pos:start="95:14" pos:end="95:21">physical</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <operator pos:start="95:25" pos:end="95:25">(</operator><operator pos:start="95:26" pos:end="95:26">(</operator><name pos:start="95:27" pos:end="95:42"><name pos:start="95:27" pos:end="95:29">env</name><operator pos:start="95:30" pos:end="95:31">-&gt;</operator><name pos:start="95:32" pos:end="95:39">dtlb_tte</name><index pos:start="95:40" pos:end="95:42">[<expr pos:start="95:41" pos:end="95:41"><name pos:start="95:41" pos:end="95:41">i</name></expr>]</index></name> <operator pos:start="95:44" pos:end="95:44">&amp;</operator> <name pos:start="95:46" pos:end="95:49">mask</name><operator pos:start="95:50" pos:end="95:50">)</operator> <operator pos:start="95:52" pos:end="95:52">|</operator> <operator pos:start="95:54" pos:end="95:54">(</operator><name pos:start="95:55" pos:end="95:61">address</name> <operator pos:start="95:63" pos:end="95:63">&amp;</operator> <operator pos:start="95:65" pos:end="95:65">~</operator><name pos:start="95:66" pos:end="95:69">mask</name><operator pos:start="95:70" pos:end="95:70">)</operator><operator pos:start="95:71" pos:end="95:71">)</operator> <operator pos:start="95:73" pos:end="95:73">&amp;</operator>

                        <literal type="number" pos:start="97:25" pos:end="97:40">0x1ffffffe000ULL</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:30"><expr pos:start="99:13" pos:end="99:29"><operator pos:start="99:13" pos:end="99:13">*</operator><name pos:start="99:14" pos:end="99:17">prot</name> <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:29">PAGE_READ</name></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="103:36"><if pos:start="101:13" pos:end="103:36">if <condition pos:start="101:16" pos:end="101:39">(<expr pos:start="101:17" pos:end="101:38"><name pos:start="101:17" pos:end="101:32"><name pos:start="101:17" pos:end="101:19">env</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:29">dtlb_tte</name><index pos:start="101:30" pos:end="101:32">[<expr pos:start="101:31" pos:end="101:31"><name pos:start="101:31" pos:end="101:31">i</name></expr>]</index></name> <operator pos:start="101:34" pos:end="101:34">&amp;</operator> <literal type="number" pos:start="101:36" pos:end="101:38">0x2</literal></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:36"><block_content pos:start="103:17" pos:end="103:36">

                <expr_stmt pos:start="103:17" pos:end="103:36"><expr pos:start="103:17" pos:end="103:35"><operator pos:start="103:17" pos:end="103:17">*</operator><name pos:start="103:18" pos:end="103:21">prot</name> <operator pos:start="103:23" pos:end="103:24">|=</operator> <name pos:start="103:26" pos:end="103:35">PAGE_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="105:13" pos:end="105:21">return <expr pos:start="105:20" pos:end="105:20"><literal type="number" pos:start="105:20" pos:end="105:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<cpp:ifdef pos:start="111:1" pos:end="111:16">#<cpp:directive pos:start="111:2" pos:end="111:6">ifdef</cpp:directive> <name pos:start="111:8" pos:end="111:16">DEBUG_MMU</name></cpp:ifdef>

    <expr_stmt pos:start="113:5" pos:end="116:0"><expr pos:start="113:5" pos:end="113:47"><call pos:start="113:5" pos:end="113:47"><name pos:start="113:5" pos:end="113:10">printf</name><argument_list pos:start="113:11" pos:end="113:47">(<argument pos:start="113:12" pos:end="113:37"><expr pos:start="113:12" pos:end="113:37"><literal type="string" pos:start="113:12" pos:end="113:25">"DMISS at 0x%"</literal> <name pos:start="113:27" pos:end="113:32">PRIx64</name> <literal type="string" pos:start="113:34" pos:end="113:37">"\n"</literal></expr></argument>, <argument pos:start="113:40" pos:end="113:46"><expr pos:start="113:40" pos:end="113:46"><name pos:start="113:40" pos:end="113:46">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="117:5" pos:end="117:76"><expr pos:start="117:5" pos:end="117:75"><name pos:start="117:5" pos:end="117:20"><name pos:start="117:5" pos:end="117:7">env</name><operator pos:start="117:8" pos:end="117:9">-&gt;</operator><name pos:start="117:10" pos:end="117:17">dmmuregs</name><index pos:start="117:18" pos:end="117:20">[<expr pos:start="117:19" pos:end="117:19"><literal type="number" pos:start="117:19" pos:end="117:19">6</literal></expr>]</index></name> <operator pos:start="117:22" pos:end="117:22">=</operator> <operator pos:start="117:24" pos:end="117:24">(</operator><name pos:start="117:25" pos:end="117:31">address</name> <operator pos:start="117:33" pos:end="117:33">&amp;</operator> <operator pos:start="117:35" pos:end="117:35">~</operator><literal type="number" pos:start="117:36" pos:end="117:44">0x1fffULL</literal><operator pos:start="117:45" pos:end="117:45">)</operator> <operator pos:start="117:47" pos:end="117:47">|</operator> <operator pos:start="117:49" pos:end="117:49">(</operator><name pos:start="117:50" pos:end="117:65"><name pos:start="117:50" pos:end="117:52">env</name><operator pos:start="117:53" pos:end="117:54">-&gt;</operator><name pos:start="117:55" pos:end="117:62">dmmuregs</name><index pos:start="117:63" pos:end="117:65">[<expr pos:start="117:64" pos:end="117:64"><literal type="number" pos:start="117:64" pos:end="117:64">1</literal></expr>]</index></name> <operator pos:start="117:67" pos:end="117:67">&amp;</operator> <literal type="number" pos:start="117:69" pos:end="117:74">0x1fff</literal><operator pos:start="117:75" pos:end="117:75">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:36"><expr pos:start="119:5" pos:end="119:35"><name pos:start="119:5" pos:end="119:24"><name pos:start="119:5" pos:end="119:7">env</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:24">exception_index</name></name> <operator pos:start="119:26" pos:end="119:26">=</operator> <name pos:start="119:28" pos:end="119:35">TT_DMISS</name></expr>;</expr_stmt>

    <return pos:start="121:5" pos:end="121:13">return <expr pos:start="121:12" pos:end="121:12"><literal type="number" pos:start="121:12" pos:end="121:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
