<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23805.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">process_pending_signals</name><parameter_list pos:start="1:29" pos:end="1:51">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:41">CPUArchState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:50">cpu_env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:11">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">cpu</name> <init pos:start="5:19" pos:end="5:40">= <expr pos:start="5:21" pos:end="5:40"><call pos:start="5:21" pos:end="5:40"><name pos:start="5:21" pos:end="5:31">ENV_GET_CPU</name><argument_list pos:start="5:32" pos:end="5:40">(<argument pos:start="5:33" pos:end="5:39"><expr pos:start="5:33" pos:end="5:39"><name pos:start="5:33" pos:end="5:39">cpu_env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">sig</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">TaskState</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:17">ts</name> <init pos:start="9:19" pos:end="9:31">= <expr pos:start="9:21" pos:end="9:31"><name pos:start="9:21" pos:end="9:31"><name pos:start="9:21" pos:end="9:23">cpu</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:31">opaque</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:15"><if pos:start="13:5" pos:end="15:15">if <condition pos:start="13:8" pos:end="13:28">(<expr pos:start="13:9" pos:end="13:27"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:27"><name pos:start="13:10" pos:end="13:11">ts</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:27">signal_pending</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:15"><block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:41">/* FIXME: This is not threadsafe.  */</comment>

    <for pos:start="21:5" pos:end="31:5">for<control pos:start="21:8" pos:end="21:43">(<init pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">sig</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <literal type="number" pos:start="21:15" pos:end="21:15">1</literal></expr>;</init> <condition pos:start="21:18" pos:end="21:36"><expr pos:start="21:18" pos:end="21:35"><name pos:start="21:18" pos:end="21:20">sig</name> <operator pos:start="21:22" pos:end="21:23">&lt;=</operator> <name pos:start="21:25" pos:end="21:35">TARGET_NSIG</name></expr>;</condition> <incr pos:start="21:38" pos:end="21:42"><expr pos:start="21:38" pos:end="21:42"><name pos:start="21:38" pos:end="21:40">sig</name><operator pos:start="21:41" pos:end="21:42">++</operator></expr></incr>)</control> <block pos:start="21:45" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:9">

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:40">(<expr pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:31"><name pos:start="23:13" pos:end="23:14">ts</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:22">sigtab</name><index pos:start="23:23" pos:end="23:31">[<expr pos:start="23:24" pos:end="23:30"><name pos:start="23:24" pos:end="23:26">sig</name> <operator pos:start="23:28" pos:end="23:28">-</operator> <literal type="number" pos:start="23:30" pos:end="23:30">1</literal></expr>]</index></name><operator pos:start="23:32" pos:end="23:32">.</operator><name pos:start="23:33" pos:end="23:39">pending</name></expr>)</condition> <block pos:start="23:42" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:19">

            <expr_stmt pos:start="25:13" pos:end="25:48"><expr pos:start="25:13" pos:end="25:47"><call pos:start="25:13" pos:end="25:47"><name pos:start="25:13" pos:end="25:33">handle_pending_signal</name><argument_list pos:start="25:34" pos:end="25:47">(<argument pos:start="25:35" pos:end="25:41"><expr pos:start="25:35" pos:end="25:41"><name pos:start="25:35" pos:end="25:41">cpu_env</name></expr></argument>, <argument pos:start="25:44" pos:end="25:46"><expr pos:start="25:44" pos:end="25:46"><name pos:start="25:44" pos:end="25:46">sig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="33:5" pos:end="33:46">/* if no signal is pending, just return */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:6">ts</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:22">signal_pending</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>;</expr_stmt>

    <return pos:start="37:5" pos:end="37:11">return;</return>

</block_content>}</block></function>
</unit>
