<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17346.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">init_qxl_rom</name><parameter_list pos:start="1:25" pos:end="1:41">(<parameter pos:start="1:26" pos:end="1:40"><decl pos:start="1:26" pos:end="1:40"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:37">PCIQXLDevice</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:26">

    <decl_stmt pos:start="5:5" pos:end="5:57"><decl pos:start="5:5" pos:end="5:56"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">QXLRom</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">rom</name> <init pos:start="5:17" pos:end="5:56">= <expr pos:start="5:19" pos:end="5:56"><call pos:start="5:19" pos:end="5:56"><name pos:start="5:19" pos:end="5:43">memory_region_get_ram_ptr</name><argument_list pos:start="5:44" pos:end="5:56">(<argument pos:start="5:45" pos:end="5:55"><expr pos:start="5:45" pos:end="5:55"><operator pos:start="5:45" pos:end="5:45">&amp;</operator><name pos:start="5:46" pos:end="5:55"><name pos:start="5:46" pos:end="5:46">d</name><operator pos:start="5:47" pos:end="5:48">-&gt;</operator><name pos:start="5:49" pos:end="5:55">rom_bar</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">QXLModes</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:19">modes</name> <init pos:start="7:21" pos:end="7:43">= <expr pos:start="7:23" pos:end="7:43"><operator pos:start="7:23" pos:end="7:23">(</operator><name pos:start="7:24" pos:end="7:31">QXLModes</name> <operator pos:start="7:33" pos:end="7:33">*</operator><operator pos:start="7:34" pos:end="7:34">)</operator><operator pos:start="7:35" pos:end="7:35">(</operator><name pos:start="7:36" pos:end="7:38">rom</name> <operator pos:start="7:40" pos:end="7:40">+</operator> <literal type="number" pos:start="7:42" pos:end="7:42">1</literal><operator pos:start="7:43" pos:end="7:43">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:28">ram_header_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:31">surface0_area_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:22">num_pages</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:15">fb</name></decl>, <decl pos:start="15:18" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:18" pos:end="15:22">maxfb</name> <init pos:start="15:24" pos:end="15:26">= <expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><call pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:10">memset</name><argument_list pos:start="21:11" pos:end="21:31">(<argument pos:start="21:12" pos:end="21:14"><expr pos:start="21:12" pos:end="21:14"><name pos:start="21:12" pos:end="21:14">rom</name></expr></argument>, <argument pos:start="21:17" pos:end="21:17"><expr pos:start="21:17" pos:end="21:17"><literal type="number" pos:start="21:17" pos:end="21:17">0</literal></expr></argument>, <argument pos:start="21:20" pos:end="21:30"><expr pos:start="21:20" pos:end="21:30"><name pos:start="21:20" pos:end="21:30"><name pos:start="21:20" pos:end="21:20">d</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:30">rom_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:52"><expr pos:start="25:5" pos:end="25:51"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:7">rom</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:14">magic</name></name>         <operator pos:start="25:24" pos:end="25:24">=</operator> <call pos:start="25:26" pos:end="25:51"><name pos:start="25:26" pos:end="25:36">cpu_to_le32</name><argument_list pos:start="25:37" pos:end="25:51">(<argument pos:start="25:38" pos:end="25:50"><expr pos:start="25:38" pos:end="25:50"><name pos:start="25:38" pos:end="25:50">QXL_ROM_MAGIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:44"><expr pos:start="27:5" pos:end="27:43"><name pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:7">rom</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:11">id</name></name>            <operator pos:start="27:24" pos:end="27:24">=</operator> <call pos:start="27:26" pos:end="27:43"><name pos:start="27:26" pos:end="27:36">cpu_to_le32</name><argument_list pos:start="27:37" pos:end="27:43">(<argument pos:start="27:38" pos:end="27:42"><expr pos:start="27:38" pos:end="27:42"><name pos:start="27:38" pos:end="27:42"><name pos:start="27:38" pos:end="27:38">d</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:42">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:52"><expr pos:start="29:5" pos:end="29:51"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:7">rom</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:18">log_level</name></name>     <operator pos:start="29:24" pos:end="29:24">=</operator> <call pos:start="29:26" pos:end="29:51"><name pos:start="29:26" pos:end="29:36">cpu_to_le32</name><argument_list pos:start="29:37" pos:end="29:51">(<argument pos:start="29:38" pos:end="29:50"><expr pos:start="29:38" pos:end="29:50"><name pos:start="29:38" pos:end="29:50"><name pos:start="29:38" pos:end="29:38">d</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:50">guestdebug</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:53"><expr pos:start="31:5" pos:end="31:52"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:7">rom</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:21">modes_offset</name></name>  <operator pos:start="31:24" pos:end="31:24">=</operator> <call pos:start="31:26" pos:end="31:52"><name pos:start="31:26" pos:end="31:36">cpu_to_le32</name><argument_list pos:start="31:37" pos:end="31:52">(<argument pos:start="31:38" pos:end="31:51"><expr pos:start="31:38" pos:end="31:51"><sizeof pos:start="31:38" pos:end="31:51">sizeof<argument_list pos:start="31:44" pos:end="31:51">(<argument pos:start="31:45" pos:end="31:50"><expr pos:start="31:45" pos:end="31:50"><name pos:start="31:45" pos:end="31:50">QXLRom</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:49"><expr pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:7">rom</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:22">slot_gen_bits</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <name pos:start="35:26" pos:end="35:48">MEMSLOT_GENERATION_BITS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:43"><expr pos:start="37:5" pos:end="37:42"><name pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:7">rom</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:21">slot_id_bits</name></name>  <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:42">MEMSLOT_SLOT_BITS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:7">rom</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:20">slots_start</name></name>   <operator pos:start="39:24" pos:end="39:24">=</operator> <literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:7">rom</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:18">slots_end</name></name>     <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:37">NUM_MEMSLOTS</name> <operator pos:start="41:39" pos:end="41:39">-</operator> <literal type="number" pos:start="41:41" pos:end="41:41">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:51"><expr pos:start="43:5" pos:end="43:50"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:7">rom</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:19">n_surfaces</name></name>    <operator pos:start="43:24" pos:end="43:24">=</operator> <call pos:start="43:26" pos:end="43:50"><name pos:start="43:26" pos:end="43:36">cpu_to_le32</name><argument_list pos:start="43:37" pos:end="43:50">(<argument pos:start="43:38" pos:end="43:49"><expr pos:start="43:38" pos:end="43:49"><name pos:start="43:38" pos:end="43:49">NUM_SURFACES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:60"><expr pos:start="47:5" pos:end="47:59"><name pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:9">modes</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:18">n_modes</name></name>     <operator pos:start="47:24" pos:end="47:24">=</operator> <call pos:start="47:26" pos:end="47:59"><name pos:start="47:26" pos:end="47:36">cpu_to_le32</name><argument_list pos:start="47:37" pos:end="47:59">(<argument pos:start="47:38" pos:end="47:58"><expr pos:start="47:38" pos:end="47:58"><call pos:start="47:38" pos:end="47:58"><name pos:start="47:38" pos:end="47:47">ARRAY_SIZE</name><argument_list pos:start="47:48" pos:end="47:58">(<argument pos:start="47:49" pos:end="47:57"><expr pos:start="47:49" pos:end="47:57"><name pos:start="47:49" pos:end="47:57">qxl_modes</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="49:5" pos:end="75:5">for <control pos:start="49:9" pos:end="49:40">(<init pos:start="49:10" pos:end="49:15"><expr pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:10">i</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>;</init> <condition pos:start="49:17" pos:end="49:35"><expr pos:start="49:17" pos:end="49:34"><name pos:start="49:17" pos:end="49:17">i</name> <operator pos:start="49:19" pos:end="49:19">&lt;</operator> <name pos:start="49:21" pos:end="49:34"><name pos:start="49:21" pos:end="49:25">modes</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:34">n_modes</name></name></expr>;</condition> <incr pos:start="49:37" pos:end="49:39"><expr pos:start="49:37" pos:end="49:39"><name pos:start="49:37" pos:end="49:37">i</name><operator pos:start="49:38" pos:end="49:39">++</operator></expr></incr>)</control> <block pos:start="49:42" pos:end="75:5">{<block_content pos:start="51:9" pos:end="73:76">

        <expr_stmt pos:start="51:9" pos:end="51:54"><expr pos:start="51:9" pos:end="51:53"><name pos:start="51:9" pos:end="51:10">fb</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <name pos:start="51:14" pos:end="51:25"><name pos:start="51:14" pos:end="51:22">qxl_modes</name><index pos:start="51:23" pos:end="51:25">[<expr pos:start="51:24" pos:end="51:24"><name pos:start="51:24" pos:end="51:24">i</name></expr>]</index></name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:31">y_res</name> <operator pos:start="51:33" pos:end="51:33">*</operator> <name pos:start="51:35" pos:end="51:46"><name pos:start="51:35" pos:end="51:43">qxl_modes</name><index pos:start="51:44" pos:end="51:46">[<expr pos:start="51:45" pos:end="51:45"><name pos:start="51:45" pos:end="51:45">i</name></expr>]</index></name><operator pos:start="51:47" pos:end="51:47">.</operator><name pos:start="51:48" pos:end="51:53">stride</name></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:23">(<expr pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:17">maxfb</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:22">fb</name></expr>)</condition> <block pos:start="53:25" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:23">

            <expr_stmt pos:start="55:13" pos:end="55:23"><expr pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:17">maxfb</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:22">fb</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:53"><expr pos:start="59:9" pos:end="59:52"><name pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:13">modes</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:20">modes</name><index pos:start="59:21" pos:end="59:23">[<expr pos:start="59:22" pos:end="59:22"><name pos:start="59:22" pos:end="59:22">i</name></expr>]</index></name><operator pos:start="59:24" pos:end="59:24">.</operator><name pos:start="59:25" pos:end="59:26">id</name>          <operator pos:start="59:37" pos:end="59:37">=</operator> <call pos:start="59:39" pos:end="59:52"><name pos:start="59:39" pos:end="59:49">cpu_to_le32</name><argument_list pos:start="59:50" pos:end="59:52">(<argument pos:start="59:51" pos:end="59:51"><expr pos:start="59:51" pos:end="59:51"><name pos:start="59:51" pos:end="59:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:70"><expr pos:start="61:9" pos:end="61:69"><name pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:13">modes</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:20">modes</name><index pos:start="61:21" pos:end="61:23">[<expr pos:start="61:22" pos:end="61:22"><name pos:start="61:22" pos:end="61:22">i</name></expr>]</index></name><operator pos:start="61:24" pos:end="61:24">.</operator><name pos:start="61:25" pos:end="61:29">x_res</name>       <operator pos:start="61:37" pos:end="61:37">=</operator> <call pos:start="61:39" pos:end="61:69"><name pos:start="61:39" pos:end="61:49">cpu_to_le32</name><argument_list pos:start="61:50" pos:end="61:69">(<argument pos:start="61:51" pos:end="61:68"><expr pos:start="61:51" pos:end="61:68"><name pos:start="61:51" pos:end="61:62"><name pos:start="61:51" pos:end="61:59">qxl_modes</name><index pos:start="61:60" pos:end="61:62">[<expr pos:start="61:61" pos:end="61:61"><name pos:start="61:61" pos:end="61:61">i</name></expr>]</index></name><operator pos:start="61:63" pos:end="61:63">.</operator><name pos:start="61:64" pos:end="61:68">x_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:70"><expr pos:start="63:9" pos:end="63:69"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:13">modes</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:20">modes</name><index pos:start="63:21" pos:end="63:23">[<expr pos:start="63:22" pos:end="63:22"><name pos:start="63:22" pos:end="63:22">i</name></expr>]</index></name><operator pos:start="63:24" pos:end="63:24">.</operator><name pos:start="63:25" pos:end="63:29">y_res</name>       <operator pos:start="63:37" pos:end="63:37">=</operator> <call pos:start="63:39" pos:end="63:69"><name pos:start="63:39" pos:end="63:49">cpu_to_le32</name><argument_list pos:start="63:50" pos:end="63:69">(<argument pos:start="63:51" pos:end="63:68"><expr pos:start="63:51" pos:end="63:68"><name pos:start="63:51" pos:end="63:62"><name pos:start="63:51" pos:end="63:59">qxl_modes</name><index pos:start="63:60" pos:end="63:62">[<expr pos:start="63:61" pos:end="63:61"><name pos:start="63:61" pos:end="63:61">i</name></expr>]</index></name><operator pos:start="63:63" pos:end="63:63">.</operator><name pos:start="63:64" pos:end="63:68">y_res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:69"><expr pos:start="65:9" pos:end="65:68"><name pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:13">modes</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:20">modes</name><index pos:start="65:21" pos:end="65:23">[<expr pos:start="65:22" pos:end="65:22"><name pos:start="65:22" pos:end="65:22">i</name></expr>]</index></name><operator pos:start="65:24" pos:end="65:24">.</operator><name pos:start="65:25" pos:end="65:28">bits</name>        <operator pos:start="65:37" pos:end="65:37">=</operator> <call pos:start="65:39" pos:end="65:68"><name pos:start="65:39" pos:end="65:49">cpu_to_le32</name><argument_list pos:start="65:50" pos:end="65:68">(<argument pos:start="65:51" pos:end="65:67"><expr pos:start="65:51" pos:end="65:67"><name pos:start="65:51" pos:end="65:62"><name pos:start="65:51" pos:end="65:59">qxl_modes</name><index pos:start="65:60" pos:end="65:62">[<expr pos:start="65:61" pos:end="65:61"><name pos:start="65:61" pos:end="65:61">i</name></expr>]</index></name><operator pos:start="65:63" pos:end="65:63">.</operator><name pos:start="65:64" pos:end="65:67">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:71"><expr pos:start="67:9" pos:end="67:70"><name pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:13">modes</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:20">modes</name><index pos:start="67:21" pos:end="67:23">[<expr pos:start="67:22" pos:end="67:22"><name pos:start="67:22" pos:end="67:22">i</name></expr>]</index></name><operator pos:start="67:24" pos:end="67:24">.</operator><name pos:start="67:25" pos:end="67:30">stride</name>      <operator pos:start="67:37" pos:end="67:37">=</operator> <call pos:start="67:39" pos:end="67:70"><name pos:start="67:39" pos:end="67:49">cpu_to_le32</name><argument_list pos:start="67:50" pos:end="67:70">(<argument pos:start="67:51" pos:end="67:69"><expr pos:start="67:51" pos:end="67:69"><name pos:start="67:51" pos:end="67:62"><name pos:start="67:51" pos:end="67:59">qxl_modes</name><index pos:start="67:60" pos:end="67:62">[<expr pos:start="67:61" pos:end="67:61"><name pos:start="67:61" pos:end="67:61">i</name></expr>]</index></name><operator pos:start="67:63" pos:end="67:63">.</operator><name pos:start="67:64" pos:end="67:69">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:71"><expr pos:start="69:9" pos:end="69:70"><name pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:13">modes</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:20">modes</name><index pos:start="69:21" pos:end="69:23">[<expr pos:start="69:22" pos:end="69:22"><name pos:start="69:22" pos:end="69:22">i</name></expr>]</index></name><operator pos:start="69:24" pos:end="69:24">.</operator><name pos:start="69:25" pos:end="69:30">x_mili</name>      <operator pos:start="69:37" pos:end="69:37">=</operator> <call pos:start="69:39" pos:end="69:70"><name pos:start="69:39" pos:end="69:49">cpu_to_le32</name><argument_list pos:start="69:50" pos:end="69:70">(<argument pos:start="69:51" pos:end="69:69"><expr pos:start="69:51" pos:end="69:69"><name pos:start="69:51" pos:end="69:62"><name pos:start="69:51" pos:end="69:59">qxl_modes</name><index pos:start="69:60" pos:end="69:62">[<expr pos:start="69:61" pos:end="69:61"><name pos:start="69:61" pos:end="69:61">i</name></expr>]</index></name><operator pos:start="69:63" pos:end="69:63">.</operator><name pos:start="69:64" pos:end="69:69">x_mili</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:71"><expr pos:start="71:9" pos:end="71:70"><name pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:13">modes</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:20">modes</name><index pos:start="71:21" pos:end="71:23">[<expr pos:start="71:22" pos:end="71:22"><name pos:start="71:22" pos:end="71:22">i</name></expr>]</index></name><operator pos:start="71:24" pos:end="71:24">.</operator><name pos:start="71:25" pos:end="71:30">y_mili</name>      <operator pos:start="71:37" pos:end="71:37">=</operator> <call pos:start="71:39" pos:end="71:70"><name pos:start="71:39" pos:end="71:49">cpu_to_le32</name><argument_list pos:start="71:50" pos:end="71:70">(<argument pos:start="71:51" pos:end="71:69"><expr pos:start="71:51" pos:end="71:69"><name pos:start="71:51" pos:end="71:62"><name pos:start="71:51" pos:end="71:59">qxl_modes</name><index pos:start="71:60" pos:end="71:62">[<expr pos:start="71:61" pos:end="71:61"><name pos:start="71:61" pos:end="71:61">i</name></expr>]</index></name><operator pos:start="71:63" pos:end="71:63">.</operator><name pos:start="71:64" pos:end="71:69">y_mili</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:76"><expr pos:start="73:9" pos:end="73:75"><name pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:13">modes</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:20">modes</name><index pos:start="73:21" pos:end="73:23">[<expr pos:start="73:22" pos:end="73:22"><name pos:start="73:22" pos:end="73:22">i</name></expr>]</index></name><operator pos:start="73:24" pos:end="73:24">.</operator><name pos:start="73:25" pos:end="73:35">orientation</name> <operator pos:start="73:37" pos:end="73:37">=</operator> <call pos:start="73:39" pos:end="73:75"><name pos:start="73:39" pos:end="73:49">cpu_to_le32</name><argument_list pos:start="73:50" pos:end="73:75">(<argument pos:start="73:51" pos:end="73:74"><expr pos:start="73:51" pos:end="73:74"><name pos:start="73:51" pos:end="73:62"><name pos:start="73:51" pos:end="73:59">qxl_modes</name><index pos:start="73:60" pos:end="73:62">[<expr pos:start="73:61" pos:end="73:61"><name pos:start="73:61" pos:end="73:61">i</name></expr>]</index></name><operator pos:start="73:63" pos:end="73:63">.</operator><name pos:start="73:64" pos:end="73:74">orientation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="77:5" pos:end="79:29"><if pos:start="77:5" pos:end="79:29">if <condition pos:start="77:8" pos:end="77:43">(<expr pos:start="77:9" pos:end="77:42"><name pos:start="77:9" pos:end="77:13">maxfb</name> <operator pos:start="77:15" pos:end="77:15">&lt;</operator> <name pos:start="77:17" pos:end="77:28">VGA_RAM_SIZE</name> <operator pos:start="77:30" pos:end="77:31">&amp;&amp;</operator> <name pos:start="77:33" pos:end="77:37"><name pos:start="77:33" pos:end="77:33">d</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:37">id</name></name> <operator pos:start="77:39" pos:end="77:40">==</operator> <literal type="number" pos:start="77:42" pos:end="77:42">0</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:29"><block_content pos:start="79:9" pos:end="79:29">

        <expr_stmt pos:start="79:9" pos:end="79:29"><expr pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:13">maxfb</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <name pos:start="79:17" pos:end="79:28">VGA_RAM_SIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:53"><expr pos:start="83:5" pos:end="83:52"><name pos:start="83:5" pos:end="83:19">ram_header_size</name>    <operator pos:start="83:24" pos:end="83:24">=</operator> <call pos:start="83:26" pos:end="83:52"><name pos:start="83:26" pos:end="83:30">ALIGN</name><argument_list pos:start="83:31" pos:end="83:52">(<argument pos:start="83:32" pos:end="83:45"><expr pos:start="83:32" pos:end="83:45"><sizeof pos:start="83:32" pos:end="83:45">sizeof<argument_list pos:start="83:38" pos:end="83:45">(<argument pos:start="83:39" pos:end="83:44"><expr pos:start="83:39" pos:end="83:44"><name pos:start="83:39" pos:end="83:44">QXLRam</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="83:48" pos:end="83:51"><expr pos:start="83:48" pos:end="83:51"><literal type="number" pos:start="83:48" pos:end="83:51">4096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:44"><expr pos:start="85:5" pos:end="85:43"><name pos:start="85:5" pos:end="85:22">surface0_area_size</name> <operator pos:start="85:24" pos:end="85:24">=</operator> <call pos:start="85:26" pos:end="85:43"><name pos:start="85:26" pos:end="85:30">ALIGN</name><argument_list pos:start="85:31" pos:end="85:43">(<argument pos:start="85:32" pos:end="85:36"><expr pos:start="85:32" pos:end="85:36"><name pos:start="85:32" pos:end="85:36">maxfb</name></expr></argument>, <argument pos:start="85:39" pos:end="85:42"><expr pos:start="85:39" pos:end="85:42"><literal type="number" pos:start="85:39" pos:end="85:42">4096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:42"><expr pos:start="87:5" pos:end="87:41"><name pos:start="87:5" pos:end="87:13">num_pages</name>          <operator pos:start="87:24" pos:end="87:24">=</operator> <name pos:start="87:26" pos:end="87:41"><name pos:start="87:26" pos:end="87:26">d</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:31">vga</name><operator pos:start="87:32" pos:end="87:32">.</operator><name pos:start="87:33" pos:end="87:41">vram_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:41"><expr pos:start="89:5" pos:end="89:40"><name pos:start="89:5" pos:end="89:13">num_pages</name>         <operator pos:start="89:23" pos:end="89:24">-=</operator> <name pos:start="89:26" pos:end="89:40">ram_header_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:44"><expr pos:start="91:5" pos:end="91:43"><name pos:start="91:5" pos:end="91:13">num_pages</name>         <operator pos:start="91:23" pos:end="91:24">-=</operator> <name pos:start="91:26" pos:end="91:43">surface0_area_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:54"><expr pos:start="93:5" pos:end="93:53"><name pos:start="93:5" pos:end="93:13">num_pages</name>          <operator pos:start="93:24" pos:end="93:24">=</operator> <name pos:start="93:26" pos:end="93:34">num_pages</name> <operator pos:start="93:36" pos:end="93:36">/</operator> <name pos:start="93:38" pos:end="93:53">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:45"><expr pos:start="97:5" pos:end="97:44"><name pos:start="97:5" pos:end="97:25"><name pos:start="97:5" pos:end="97:7">rom</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:25">draw_area_offset</name></name>   <operator pos:start="97:29" pos:end="97:29">=</operator> <call pos:start="97:31" pos:end="97:44"><name pos:start="97:31" pos:end="97:41">cpu_to_le32</name><argument_list pos:start="97:42" pos:end="97:44">(<argument pos:start="97:43" pos:end="97:43"><expr pos:start="97:43" pos:end="97:43"><literal type="number" pos:start="97:43" pos:end="97:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:62"><expr pos:start="99:5" pos:end="99:61"><name pos:start="99:5" pos:end="99:27"><name pos:start="99:5" pos:end="99:7">rom</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:27">surface0_area_size</name></name> <operator pos:start="99:29" pos:end="99:29">=</operator> <call pos:start="99:31" pos:end="99:61"><name pos:start="99:31" pos:end="99:41">cpu_to_le32</name><argument_list pos:start="99:42" pos:end="99:61">(<argument pos:start="99:43" pos:end="99:60"><expr pos:start="99:43" pos:end="99:60"><name pos:start="99:43" pos:end="99:60">surface0_area_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:62"><expr pos:start="101:5" pos:end="101:61"><name pos:start="101:5" pos:end="101:21"><name pos:start="101:5" pos:end="101:7">rom</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:21">pages_offset</name></name>       <operator pos:start="101:29" pos:end="101:29">=</operator> <call pos:start="101:31" pos:end="101:61"><name pos:start="101:31" pos:end="101:41">cpu_to_le32</name><argument_list pos:start="101:42" pos:end="101:61">(<argument pos:start="101:43" pos:end="101:60"><expr pos:start="101:43" pos:end="101:60"><name pos:start="101:43" pos:end="101:60">surface0_area_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:53"><expr pos:start="103:5" pos:end="103:52"><name pos:start="103:5" pos:end="103:18"><name pos:start="103:5" pos:end="103:7">rom</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:18">num_pages</name></name>          <operator pos:start="103:29" pos:end="103:29">=</operator> <call pos:start="103:31" pos:end="103:52"><name pos:start="103:31" pos:end="103:41">cpu_to_le32</name><argument_list pos:start="103:42" pos:end="103:52">(<argument pos:start="103:43" pos:end="103:51"><expr pos:start="103:43" pos:end="103:51"><name pos:start="103:43" pos:end="103:51">num_pages</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:78"><expr pos:start="105:5" pos:end="105:77"><name pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:7">rom</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:26">ram_header_offset</name></name>  <operator pos:start="105:29" pos:end="105:29">=</operator> <call pos:start="105:31" pos:end="105:77"><name pos:start="105:31" pos:end="105:41">cpu_to_le32</name><argument_list pos:start="105:42" pos:end="105:77">(<argument pos:start="105:43" pos:end="105:76"><expr pos:start="105:43" pos:end="105:76"><name pos:start="105:43" pos:end="105:58"><name pos:start="105:43" pos:end="105:43">d</name><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:48">vga</name><operator pos:start="105:49" pos:end="105:49">.</operator><name pos:start="105:50" pos:end="105:58">vram_size</name></name> <operator pos:start="105:60" pos:end="105:60">-</operator> <name pos:start="105:62" pos:end="105:76">ram_header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:25"><expr pos:start="109:5" pos:end="109:24"><name pos:start="109:5" pos:end="109:17"><name pos:start="109:5" pos:end="109:5">d</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:17">shadow_rom</name></name> <operator pos:start="109:19" pos:end="109:19">=</operator> <operator pos:start="109:21" pos:end="109:21">*</operator><name pos:start="109:22" pos:end="109:24">rom</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:24"><expr pos:start="111:5" pos:end="111:23"><name pos:start="111:5" pos:end="111:10"><name pos:start="111:5" pos:end="111:5">d</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:10">rom</name></name>        <operator pos:start="111:19" pos:end="111:19">=</operator> <name pos:start="111:21" pos:end="111:23">rom</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:26"><expr pos:start="113:5" pos:end="113:25"><name pos:start="113:5" pos:end="113:12"><name pos:start="113:5" pos:end="113:5">d</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:12">modes</name></name>      <operator pos:start="113:19" pos:end="113:19">=</operator> <name pos:start="113:21" pos:end="113:25">modes</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
