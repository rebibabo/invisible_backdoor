<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1043.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">av_write_trailer</name><parameter_list pos:start="1:21" pos:end="1:40">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:36">AVFormatContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:15">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:14">i</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="41:5">for <control pos:start="9:9" pos:end="9:13">(<init pos:start="9:10" pos:end="9:10">;</init><condition pos:start="9:11" pos:end="9:11">;</condition> <incr/>)</control> <block pos:start="9:15" pos:end="41:5">{<block_content pos:start="11:9" pos:end="39:22">

        <decl_stmt pos:start="11:9" pos:end="11:21"><decl pos:start="11:9" pos:end="11:20"><type pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16">AVPacket</name></type> <name pos:start="11:18" pos:end="11:20">pkt</name></decl>;</decl_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:50"><expr pos:start="13:9" pos:end="13:49"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:49"><name pos:start="13:15" pos:end="13:31">interleave_packet</name><argument_list pos:start="13:32" pos:end="13:49">(<argument pos:start="13:33" pos:end="13:33"><expr pos:start="13:33" pos:end="13:33"><name pos:start="13:33" pos:end="13:33">s</name></expr></argument>, <argument pos:start="13:36" pos:end="13:39"><expr pos:start="13:36" pos:end="13:39"><operator pos:start="13:36" pos:end="13:36">&amp;</operator><name pos:start="13:37" pos:end="13:39">pkt</name></expr></argument>, <argument pos:start="13:42" pos:end="13:45"><expr pos:start="13:42" pos:end="13:45"><name pos:start="13:42" pos:end="13:45">NULL</name></expr></argument>, <argument pos:start="13:48" pos:end="13:48"><expr pos:start="13:48" pos:end="13:48"><literal type="number" pos:start="13:48" pos:end="13:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="17:22"><if pos:start="15:9" pos:end="17:22">if <condition pos:start="15:12" pos:end="15:20">(<expr pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:15">ret</name> <operator pos:start="15:17" pos:end="15:17">&lt;</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:22"><block_content pos:start="17:13" pos:end="17:22"> <comment type="line" pos:start="15:22" pos:end="15:55">//FIXME cleanup needed for ret&lt;0 ?</comment>

            <goto pos:start="17:13" pos:end="17:22">goto <name pos:start="17:18" pos:end="17:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="19:9" pos:end="21:18"><if pos:start="19:9" pos:end="21:18">if <condition pos:start="19:12" pos:end="19:17">(<expr pos:start="19:13" pos:end="19:16"><operator pos:start="19:13" pos:end="19:13">!</operator><name pos:start="19:14" pos:end="19:16">ret</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:18"><block_content pos:start="21:13" pos:end="21:18">

            <break pos:start="21:13" pos:end="21:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:47"><name pos:start="25:15" pos:end="25:38"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:24">oformat</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:38">write_packet</name></name><argument_list pos:start="25:39" pos:end="25:47">(<argument pos:start="25:40" pos:end="25:40"><expr pos:start="25:40" pos:end="25:40"><name pos:start="25:40" pos:end="25:40">s</name></expr></argument>, <argument pos:start="25:43" pos:end="25:46"><expr pos:start="25:43" pos:end="25:46"><operator pos:start="25:43" pos:end="25:43">&amp;</operator><name pos:start="25:44" pos:end="25:46">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:54"><if pos:start="27:9" pos:end="29:54">if <condition pos:start="27:12" pos:end="27:21">(<expr pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:15">ret</name> <operator pos:start="27:17" pos:end="27:18">&gt;=</operator> <literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:54"><block_content pos:start="29:13" pos:end="29:54">

            <expr_stmt pos:start="29:13" pos:end="29:54"><expr pos:start="29:13" pos:end="29:53"><name pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:22">streams</name><index pos:start="29:23" pos:end="29:40">[<expr pos:start="29:24" pos:end="29:39"><name pos:start="29:24" pos:end="29:39"><name pos:start="29:24" pos:end="29:26">pkt</name><operator pos:start="29:27" pos:end="29:27">.</operator><name pos:start="29:28" pos:end="29:39">stream_index</name></name></expr>]</index></name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:51">nb_frames</name><operator pos:start="29:52" pos:end="29:53">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:29"><expr pos:start="33:9" pos:end="33:28"><call pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:22">av_free_packet</name><argument_list pos:start="33:23" pos:end="33:28">(<argument pos:start="33:24" pos:end="33:27"><expr pos:start="33:24" pos:end="33:27"><operator pos:start="33:24" pos:end="33:24">&amp;</operator><name pos:start="33:25" pos:end="33:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="37:9" pos:end="39:22"><if pos:start="37:9" pos:end="39:22">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">&lt;</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:22"><block_content pos:start="39:13" pos:end="39:22">

            <goto pos:start="39:13" pos:end="39:22">goto <name pos:start="39:18" pos:end="39:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="45:5" pos:end="47:43"><if pos:start="45:5" pos:end="47:43">if <condition pos:start="45:8" pos:end="45:34">(<expr pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:18">oformat</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:33">write_trailer</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:43"><block_content pos:start="47:9" pos:end="47:43">

        <expr_stmt pos:start="47:9" pos:end="47:43"><expr pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:42"><name pos:start="47:15" pos:end="47:39"><name pos:start="47:15" pos:end="47:15">s</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:24">oformat</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:39">write_trailer</name></name><argument_list pos:start="47:40" pos:end="47:42">(<argument pos:start="47:41" pos:end="47:41"><expr pos:start="47:41" pos:end="47:41"><name pos:start="47:41" pos:end="47:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="53:26"><if pos:start="51:5" pos:end="53:26">if <condition pos:start="51:8" pos:end="51:44">(<expr pos:start="51:9" pos:end="51:43"><operator pos:start="51:9" pos:end="51:9">!</operator><operator pos:start="51:10" pos:end="51:10">(</operator><name pos:start="51:11" pos:end="51:27"><name pos:start="51:11" pos:end="51:11">s</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:20">oformat</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:27">flags</name></name> <operator pos:start="51:29" pos:end="51:29">&amp;</operator> <name pos:start="51:31" pos:end="51:42">AVFMT_NOFILE</name><operator pos:start="51:43" pos:end="51:43">)</operator></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:26"><block_content pos:start="53:9" pos:end="53:26">

        <expr_stmt pos:start="53:9" pos:end="53:26"><expr pos:start="53:9" pos:end="53:25"><call pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:18">avio_flush</name><argument_list pos:start="53:19" pos:end="53:25">(<argument pos:start="53:20" pos:end="53:24"><expr pos:start="53:20" pos:end="53:24"><name pos:start="53:20" pos:end="53:24"><name pos:start="53:20" pos:end="53:20">s</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:24">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<label pos:start="57:1" pos:end="57:5"><name pos:start="57:1" pos:end="57:4">fail</name>:</label>

    <for pos:start="59:5" pos:end="65:5">for <control pos:start="59:9" pos:end="59:39">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:34"><expr pos:start="59:17" pos:end="59:33"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <name pos:start="59:21" pos:end="59:33"><name pos:start="59:21" pos:end="59:21">s</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:33">nb_streams</name></name></expr>;</condition> <incr pos:start="59:36" pos:end="59:38"><expr pos:start="59:36" pos:end="59:38"><name pos:start="59:36" pos:end="59:36">i</name><operator pos:start="59:37" pos:end="59:38">++</operator></expr></incr>)</control> <block pos:start="59:41" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:48">

        <expr_stmt pos:start="61:9" pos:end="61:44"><expr pos:start="61:9" pos:end="61:43"><call pos:start="61:9" pos:end="61:43"><name pos:start="61:9" pos:end="61:16">av_freep</name><argument_list pos:start="61:17" pos:end="61:43">(<argument pos:start="61:18" pos:end="61:42"><expr pos:start="61:18" pos:end="61:42"><operator pos:start="61:18" pos:end="61:18">&amp;</operator><name pos:start="61:19" pos:end="61:31"><name pos:start="61:19" pos:end="61:19">s</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:28">streams</name><index pos:start="61:29" pos:end="61:31">[<expr pos:start="61:30" pos:end="61:30"><name pos:start="61:30" pos:end="61:30">i</name></expr>]</index></name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:42">priv_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:48"><expr pos:start="63:9" pos:end="63:47"><call pos:start="63:9" pos:end="63:47"><name pos:start="63:9" pos:end="63:16">av_freep</name><argument_list pos:start="63:17" pos:end="63:47">(<argument pos:start="63:18" pos:end="63:46"><expr pos:start="63:18" pos:end="63:46"><operator pos:start="63:18" pos:end="63:18">&amp;</operator><name pos:start="63:19" pos:end="63:31"><name pos:start="63:19" pos:end="63:19">s</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:28">streams</name><index pos:start="63:29" pos:end="63:31">[<expr pos:start="63:30" pos:end="63:30"><name pos:start="63:30" pos:end="63:30">i</name></expr>]</index></name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:46">index_entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="67:5" pos:end="69:34"><if pos:start="67:5" pos:end="69:34">if <condition pos:start="67:8" pos:end="67:31">(<expr pos:start="67:9" pos:end="67:30"><name pos:start="67:9" pos:end="67:30"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:18">oformat</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:30">priv_class</name></name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:34"><block_content pos:start="69:9" pos:end="69:34">

        <expr_stmt pos:start="69:9" pos:end="69:34"><expr pos:start="69:9" pos:end="69:33"><call pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:19">av_opt_free</name><argument_list pos:start="69:20" pos:end="69:33">(<argument pos:start="69:21" pos:end="69:32"><expr pos:start="69:21" pos:end="69:32"><name pos:start="69:21" pos:end="69:32"><name pos:start="69:21" pos:end="69:21">s</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:32">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><call pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:12">av_freep</name><argument_list pos:start="71:13" pos:end="71:27">(<argument pos:start="71:14" pos:end="71:26"><expr pos:start="71:14" pos:end="71:26"><operator pos:start="71:14" pos:end="71:14">&amp;</operator><name pos:start="71:15" pos:end="71:26"><name pos:start="71:15" pos:end="71:15">s</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:26">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:15">return <expr pos:start="73:12" pos:end="73:14"><name pos:start="73:12" pos:end="73:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
