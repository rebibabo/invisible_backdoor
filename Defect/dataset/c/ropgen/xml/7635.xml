<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7635.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:41">av_thread_message_queue_set_err_recv</name><parameter_list pos:start="1:42" pos:end="3:50">(<parameter pos:start="1:43" pos:end="1:66"><decl pos:start="1:43" pos:end="1:66"><type pos:start="1:43" pos:end="1:66"><name pos:start="1:43" pos:end="1:62">AVThreadMessageQueue</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:66">mq</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:49"><decl pos:start="3:43" pos:end="3:49"><type pos:start="3:43" pos:end="3:49"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:49">err</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="19:1">{<block_content pos:start="9:5" pos:end="18:0">

<cpp:if pos:start="7:1" pos:end="7:16">#<cpp:directive pos:start="7:2" pos:end="7:3">if</cpp:directive> <expr pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">HAVE_THREADS</name></expr></cpp:if>

    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><call pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:22">pthread_mutex_lock</name><argument_list pos:start="9:23" pos:end="9:33">(<argument pos:start="9:24" pos:end="9:32"><expr pos:start="9:24" pos:end="9:32"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:26">mq</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:32">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:6">mq</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:16">err_recv</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:22">err</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><call pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:26">pthread_cond_broadcast</name><argument_list pos:start="13:27" pos:end="13:37">(<argument pos:start="13:28" pos:end="13:36"><expr pos:start="13:28" pos:end="13:36"><operator pos:start="13:28" pos:end="13:28">&amp;</operator><name pos:start="13:29" pos:end="13:36"><name pos:start="13:29" pos:end="13:30">mq</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:36">cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="18:0"><expr pos:start="15:5" pos:end="15:35"><call pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:24">pthread_mutex_unlock</name><argument_list pos:start="15:25" pos:end="15:35">(<argument pos:start="15:26" pos:end="15:34"><expr pos:start="15:26" pos:end="15:34"><operator pos:start="15:26" pos:end="15:26">&amp;</operator><name pos:start="15:27" pos:end="15:34"><name pos:start="15:27" pos:end="15:28">mq</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:34">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="17:8" pos:end="17:25">/* HAVE_THREADS */</comment>

</block_content>}</block></function>
</unit>
