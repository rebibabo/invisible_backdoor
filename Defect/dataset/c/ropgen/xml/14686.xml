<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14686.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">read_mv_component</name><parameter_list pos:start="1:29" pos:end="1:65">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:43">VP56RangeCoder</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">c</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:61">uint8_t</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:64">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:54">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">bit</name></decl>, <decl pos:start="5:14" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:14">x</name> <init pos:start="5:16" pos:end="5:18">= <expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="47:5"><if pos:start="9:5" pos:end="27:5">if <condition pos:start="9:8" pos:end="9:43">(<expr pos:start="9:9" pos:end="9:42"><call pos:start="9:9" pos:end="9:42"><name pos:start="9:9" pos:end="9:33">vp56_rac_get_prob_branchy</name><argument_list pos:start="9:34" pos:end="9:42">(<argument pos:start="9:35" pos:end="9:35"><expr pos:start="9:35" pos:end="9:35"><name pos:start="9:35" pos:end="9:35">c</name></expr></argument>, <argument pos:start="9:38" pos:end="9:41"><expr pos:start="9:38" pos:end="9:41"><name pos:start="9:38" pos:end="9:41"><name pos:start="9:38" pos:end="9:38">p</name><index pos:start="9:39" pos:end="9:41">[<expr pos:start="9:40" pos:end="9:40"><literal type="number" pos:start="9:40" pos:end="9:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:45" pos:end="27:5">{<block_content pos:start="11:9" pos:end="25:19">

        <decl_stmt pos:start="11:9" pos:end="11:14"><decl pos:start="11:9" pos:end="11:13"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:13">i</name></decl>;</decl_stmt>



        <for pos:start="15:9" pos:end="17:53">for <control pos:start="15:13" pos:end="15:31">(<init pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">i</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</init> <condition pos:start="15:21" pos:end="15:26"><expr pos:start="15:21" pos:end="15:25"><name pos:start="15:21" pos:end="15:21">i</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <literal type="number" pos:start="15:25" pos:end="15:25">3</literal></expr>;</condition> <incr pos:start="15:28" pos:end="15:30"><expr pos:start="15:28" pos:end="15:30"><name pos:start="15:28" pos:end="15:28">i</name><operator pos:start="15:29" pos:end="15:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:13" pos:end="17:53"><block_content pos:start="17:13" pos:end="17:53">

            <expr_stmt pos:start="17:13" pos:end="17:53"><expr pos:start="17:13" pos:end="17:52"><name pos:start="17:13" pos:end="17:13">x</name> <operator pos:start="17:15" pos:end="17:16">+=</operator> <call pos:start="17:18" pos:end="17:47"><name pos:start="17:18" pos:end="17:34">vp56_rac_get_prob</name><argument_list pos:start="17:35" pos:end="17:47">(<argument pos:start="17:36" pos:end="17:36"><expr pos:start="17:36" pos:end="17:36"><name pos:start="17:36" pos:end="17:36">c</name></expr></argument>, <argument pos:start="17:39" pos:end="17:46"><expr pos:start="17:39" pos:end="17:46"><name pos:start="17:39" pos:end="17:46"><name pos:start="17:39" pos:end="17:39">p</name><index pos:start="17:40" pos:end="17:46">[<expr pos:start="17:41" pos:end="17:45"><literal type="number" pos:start="17:41" pos:end="17:43">9</literal> <operator pos:start="17:43" pos:end="17:43">+</operator> <name pos:start="17:45" pos:end="17:45">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="17:49" pos:end="17:50">&lt;&lt;</operator> <name pos:start="17:52" pos:end="17:52">i</name></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="19:9" pos:end="21:53">for <control pos:start="19:13" pos:end="19:31">(<init pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:14">i</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">9</literal></expr>;</init> <condition pos:start="19:21" pos:end="19:26"><expr pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:21">i</name> <operator pos:start="19:23" pos:end="19:23">&gt;</operator> <literal type="number" pos:start="19:25" pos:end="19:25">3</literal></expr>;</condition> <incr pos:start="19:28" pos:end="19:30"><expr pos:start="19:28" pos:end="19:30"><name pos:start="19:28" pos:end="19:28">i</name><operator pos:start="19:29" pos:end="19:30">--</operator></expr></incr>)</control><block type="pseudo" pos:start="21:13" pos:end="21:53"><block_content pos:start="21:13" pos:end="21:53">

            <expr_stmt pos:start="21:13" pos:end="21:53"><expr pos:start="21:13" pos:end="21:52"><name pos:start="21:13" pos:end="21:13">x</name> <operator pos:start="21:15" pos:end="21:16">+=</operator> <call pos:start="21:18" pos:end="21:47"><name pos:start="21:18" pos:end="21:34">vp56_rac_get_prob</name><argument_list pos:start="21:35" pos:end="21:47">(<argument pos:start="21:36" pos:end="21:36"><expr pos:start="21:36" pos:end="21:36"><name pos:start="21:36" pos:end="21:36">c</name></expr></argument>, <argument pos:start="21:39" pos:end="21:46"><expr pos:start="21:39" pos:end="21:46"><name pos:start="21:39" pos:end="21:46"><name pos:start="21:39" pos:end="21:39">p</name><index pos:start="21:40" pos:end="21:46">[<expr pos:start="21:41" pos:end="21:45"><literal type="number" pos:start="21:41" pos:end="21:43">9</literal> <operator pos:start="21:43" pos:end="21:43">+</operator> <name pos:start="21:45" pos:end="21:45">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="21:49" pos:end="21:50">&lt;&lt;</operator> <name pos:start="21:52" pos:end="21:52">i</name></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="23:9" pos:end="25:19"><if pos:start="23:9" pos:end="25:19">if <condition pos:start="23:12" pos:end="23:57">(<expr pos:start="23:13" pos:end="23:56"><operator pos:start="23:13" pos:end="23:13">!</operator><operator pos:start="23:14" pos:end="23:14">(</operator><name pos:start="23:15" pos:end="23:15">x</name> <operator pos:start="23:17" pos:end="23:17">&amp;</operator> <literal type="number" pos:start="23:19" pos:end="23:24">0xFFF0</literal><operator pos:start="23:25" pos:end="23:25">)</operator> <operator pos:start="23:27" pos:end="23:28">||</operator> <call pos:start="23:30" pos:end="23:56"><name pos:start="23:30" pos:end="23:46">vp56_rac_get_prob</name><argument_list pos:start="23:47" pos:end="23:56">(<argument pos:start="23:48" pos:end="23:48"><expr pos:start="23:48" pos:end="23:48"><name pos:start="23:48" pos:end="23:48">c</name></expr></argument>, <argument pos:start="23:51" pos:end="23:55"><expr pos:start="23:51" pos:end="23:55"><name pos:start="23:51" pos:end="23:55"><name pos:start="23:51" pos:end="23:51">p</name><index pos:start="23:52" pos:end="23:55">[<expr pos:start="23:53" pos:end="23:54"><literal type="number" pos:start="23:53" pos:end="23:54">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:19"><block_content pos:start="25:13" pos:end="25:19">

            <expr_stmt pos:start="25:13" pos:end="25:19"><expr pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:13">x</name> <operator pos:start="25:15" pos:end="25:16">+=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="47:5">else <block pos:start="27:12" pos:end="47:5">{<block_content pos:start="31:9" pos:end="45:40">

        <comment type="line" pos:start="29:9" pos:end="29:23">// small_mvtree</comment>

        <decl_stmt pos:start="31:9" pos:end="31:34"><decl pos:start="31:9" pos:end="31:33"><type pos:start="31:9" pos:end="31:23"><specifier pos:start="31:9" pos:end="31:13">const</specifier> <name pos:start="31:15" pos:end="31:21">uint8_t</name> <modifier pos:start="31:23" pos:end="31:23">*</modifier></type><name pos:start="31:24" pos:end="31:25">ps</name> <init pos:start="31:27" pos:end="31:33">= <expr pos:start="31:29" pos:end="31:33"><name pos:start="31:29" pos:end="31:29">p</name> <operator pos:start="31:31" pos:end="31:31">+</operator> <literal type="number" pos:start="31:33" pos:end="31:33">2</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:11">bit</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:39"><name pos:start="33:15" pos:end="33:31">vp56_rac_get_prob</name><argument_list pos:start="33:32" pos:end="33:39">(<argument pos:start="33:33" pos:end="33:33"><expr pos:start="33:33" pos:end="33:33"><name pos:start="33:33" pos:end="33:33">c</name></expr></argument>, <argument pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><operator pos:start="33:36" pos:end="33:36">*</operator><name pos:start="33:37" pos:end="33:38">ps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:26"><expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:10">ps</name> <operator pos:start="35:12" pos:end="35:13">+=</operator> <literal type="number" pos:start="35:15" pos:end="35:17">1</literal> <operator pos:start="35:17" pos:end="35:17">+</operator> <literal type="number" pos:start="35:19" pos:end="35:19">3</literal> <operator pos:start="35:21" pos:end="35:21">*</operator> <name pos:start="35:23" pos:end="35:25">bit</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:9">x</name>  <operator pos:start="37:12" pos:end="37:13">+=</operator> <literal type="number" pos:start="37:15" pos:end="37:15">4</literal> <operator pos:start="37:17" pos:end="37:17">*</operator> <name pos:start="37:19" pos:end="37:21">bit</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:40"><expr pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:11">bit</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:39"><name pos:start="39:15" pos:end="39:31">vp56_rac_get_prob</name><argument_list pos:start="39:32" pos:end="39:39">(<argument pos:start="39:33" pos:end="39:33"><expr pos:start="39:33" pos:end="39:33"><name pos:start="39:33" pos:end="39:33">c</name></expr></argument>, <argument pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><operator pos:start="39:36" pos:end="39:36">*</operator><name pos:start="39:37" pos:end="39:38">ps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:10">ps</name> <operator pos:start="41:12" pos:end="41:13">+=</operator> <literal type="number" pos:start="41:15" pos:end="41:17">1</literal> <operator pos:start="41:17" pos:end="41:17">+</operator> <name pos:start="41:19" pos:end="41:21">bit</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:9">x</name>  <operator pos:start="43:12" pos:end="43:13">+=</operator> <literal type="number" pos:start="43:15" pos:end="43:15">2</literal> <operator pos:start="43:17" pos:end="43:17">*</operator> <name pos:start="43:19" pos:end="43:21">bit</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:40"><expr pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:9">x</name>  <operator pos:start="45:12" pos:end="45:13">+=</operator> <call pos:start="45:15" pos:end="45:39"><name pos:start="45:15" pos:end="45:31">vp56_rac_get_prob</name><argument_list pos:start="45:32" pos:end="45:39">(<argument pos:start="45:33" pos:end="45:33"><expr pos:start="45:33" pos:end="45:33"><name pos:start="45:33" pos:end="45:33">c</name></expr></argument>, <argument pos:start="45:36" pos:end="45:38"><expr pos:start="45:36" pos:end="45:38"><operator pos:start="45:36" pos:end="45:36">*</operator><name pos:start="45:37" pos:end="45:38">ps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="51:5" pos:end="51:54">return <expr pos:start="51:12" pos:end="51:53"><ternary pos:start="51:12" pos:end="51:53"><condition pos:start="51:12" pos:end="51:46"><expr pos:start="51:12" pos:end="51:44"><operator pos:start="51:12" pos:end="51:12">(</operator><name pos:start="51:13" pos:end="51:13">x</name> <operator pos:start="51:15" pos:end="51:16">&amp;&amp;</operator> <call pos:start="51:18" pos:end="51:43"><name pos:start="51:18" pos:end="51:34">vp56_rac_get_prob</name><argument_list pos:start="51:35" pos:end="51:43">(<argument pos:start="51:36" pos:end="51:36"><expr pos:start="51:36" pos:end="51:36"><name pos:start="51:36" pos:end="51:36">c</name></expr></argument>, <argument pos:start="51:39" pos:end="51:42"><expr pos:start="51:39" pos:end="51:42"><name pos:start="51:39" pos:end="51:42"><name pos:start="51:39" pos:end="51:39">p</name><index pos:start="51:40" pos:end="51:42">[<expr pos:start="51:41" pos:end="51:41"><literal type="number" pos:start="51:41" pos:end="51:41">1</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="51:44" pos:end="51:44">)</operator></expr> ?</condition><then pos:start="51:48" pos:end="51:49"> <expr pos:start="51:48" pos:end="51:49"><operator pos:start="51:48" pos:end="51:48">-</operator><name pos:start="51:49" pos:end="51:49">x</name></expr> </then><else pos:start="51:51" pos:end="51:53">: <expr pos:start="51:53" pos:end="51:53"><name pos:start="51:53" pos:end="51:53">x</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
