<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7890.c" pos:tabs="8"><function pos:start="1:1" pos:end="58:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">gboolean</name></type> <name pos:start="1:17" pos:end="1:40">ga_channel_listen_accept</name><parameter_list pos:start="1:41" pos:end="3:79">(<parameter pos:start="1:42" pos:end="1:60"><decl pos:start="1:42" pos:end="1:60"><type pos:start="1:42" pos:end="1:60"><name pos:start="1:42" pos:end="1:51">GIOChannel</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:60">channel</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:63"><decl pos:start="3:42" pos:end="3:63"><type pos:start="3:42" pos:end="3:63"><name pos:start="3:42" pos:end="3:53">GIOCondition</name></type> <name pos:start="3:55" pos:end="3:63">condition</name></decl></parameter>, <parameter pos:start="3:66" pos:end="3:78"><decl pos:start="3:66" pos:end="3:78"><type pos:start="3:66" pos:end="3:78"><name pos:start="3:66" pos:end="3:73">gpointer</name></type> <name pos:start="3:75" pos:end="3:78">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="58:1">{<block_content pos:start="7:5" pos:end="56:21">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">GAChannel</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">c</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:22">client_fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:17">accepted</name> <init pos:start="11:19" pos:end="11:25">= <expr pos:start="11:21" pos:end="11:25"><name pos:start="11:21" pos:end="11:25">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:22">sockaddr_un</name></name></type> <name pos:start="13:24" pos:end="13:27">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:13">socklen_t</name></type> <name pos:start="15:15" pos:end="15:21">addrlen</name> <init pos:start="15:23" pos:end="15:36">= <expr pos:start="15:25" pos:end="15:36"><sizeof pos:start="15:25" pos:end="15:36">sizeof<argument_list pos:start="15:31" pos:end="15:36">(<argument pos:start="15:32" pos:end="15:35"><expr pos:start="15:32" pos:end="15:35"><name pos:start="15:32" pos:end="15:35">addr</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><call pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:12">g_assert</name><argument_list pos:start="19:13" pos:end="19:29">(<argument pos:start="19:14" pos:end="19:28"><expr pos:start="19:14" pos:end="19:28"><name pos:start="19:14" pos:end="19:20">channel</name> <operator pos:start="19:22" pos:end="19:23">!=</operator> <name pos:start="19:25" pos:end="19:28">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:64"><expr pos:start="23:5" pos:end="25:63"><name pos:start="23:5" pos:end="23:13">client_fd</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="25:63"><name pos:start="23:17" pos:end="23:27">qemu_accept</name><argument_list pos:start="23:28" pos:end="25:63">(<argument pos:start="23:29" pos:end="23:61"><expr pos:start="23:29" pos:end="23:61"><call pos:start="23:29" pos:end="23:61"><name pos:start="23:29" pos:end="23:52">g_io_channel_unix_get_fd</name><argument_list pos:start="23:53" pos:end="23:61">(<argument pos:start="23:54" pos:end="23:60"><expr pos:start="23:54" pos:end="23:60"><name pos:start="23:54" pos:end="23:60">channel</name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="25:29" pos:end="25:52"><expr pos:start="25:29" pos:end="25:52"><operator pos:start="25:29" pos:end="25:29">(</operator>struct <name pos:start="25:37" pos:end="25:44">sockaddr</name> <operator pos:start="25:46" pos:end="25:46">*</operator><operator pos:start="25:47" pos:end="25:47">)</operator><operator pos:start="25:48" pos:end="25:48">&amp;</operator><name pos:start="25:49" pos:end="25:52">addr</name></expr></argument>, <argument pos:start="25:55" pos:end="25:62"><expr pos:start="25:55" pos:end="25:62"><operator pos:start="25:55" pos:end="25:55">&amp;</operator><name pos:start="25:56" pos:end="25:62">addrlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:24">(<expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:17">client_fd</name> <operator pos:start="27:19" pos:end="27:20">==</operator> <operator pos:start="27:22" pos:end="27:22">-</operator><literal type="number" pos:start="27:23" pos:end="27:23">1</literal></expr>)</condition> <block pos:start="27:26" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:17">

        <expr_stmt pos:start="29:9" pos:end="29:73"><expr pos:start="29:9" pos:end="29:72"><call pos:start="29:9" pos:end="29:72"><name pos:start="29:9" pos:end="29:17">g_warning</name><argument_list pos:start="29:18" pos:end="29:72">(<argument pos:start="29:19" pos:end="29:54"><expr pos:start="29:19" pos:end="29:54"><literal type="string" pos:start="29:19" pos:end="29:54">"error converting fd to gsocket: %s"</literal></expr></argument>, <argument pos:start="29:57" pos:end="29:71"><expr pos:start="29:57" pos:end="29:71"><call pos:start="29:57" pos:end="29:71"><name pos:start="29:57" pos:end="29:64">strerror</name><argument_list pos:start="29:65" pos:end="29:71">(<argument pos:start="29:66" pos:end="29:70"><expr pos:start="29:66" pos:end="29:70"><name pos:start="29:66" pos:end="29:70">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="31:9" pos:end="31:17">goto <name pos:start="31:14" pos:end="31:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><call pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:9">fcntl</name><argument_list pos:start="35:10" pos:end="35:41">(<argument pos:start="35:11" pos:end="35:19"><expr pos:start="35:11" pos:end="35:19"><name pos:start="35:11" pos:end="35:19">client_fd</name></expr></argument>, <argument pos:start="35:22" pos:end="35:28"><expr pos:start="35:22" pos:end="35:28"><name pos:start="35:22" pos:end="35:28">F_SETFL</name></expr></argument>, <argument pos:start="35:31" pos:end="35:40"><expr pos:start="35:31" pos:end="35:40"><name pos:start="35:31" pos:end="35:40">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:46"><expr pos:start="37:5" pos:end="37:45"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:45"><name pos:start="37:11" pos:end="37:31">ga_channel_client_add</name><argument_list pos:start="37:32" pos:end="37:45">(<argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><name pos:start="37:33" pos:end="37:33">c</name></expr></argument>, <argument pos:start="37:36" pos:end="37:44"><expr pos:start="37:36" pos:end="37:44"><name pos:start="37:36" pos:end="37:44">client_fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="46:5"><if pos:start="39:5" pos:end="46:5">if <condition pos:start="39:8" pos:end="39:12">(<expr pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">ret</name></expr>)</condition> <block pos:start="39:14" pos:end="46:5">{<block_content pos:start="41:9" pos:end="44:17">

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><call pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:17">g_warning</name><argument_list pos:start="41:18" pos:end="41:48">(<argument pos:start="41:19" pos:end="41:47"><expr pos:start="41:19" pos:end="41:47"><literal type="string" pos:start="41:19" pos:end="41:47">"error setting up connection"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <goto pos:start="44:9" pos:end="44:17">goto <name pos:start="44:14" pos:end="44:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="48:5" pos:end="48:20"><expr pos:start="48:5" pos:end="48:19"><name pos:start="48:5" pos:end="48:12">accepted</name> <operator pos:start="48:14" pos:end="48:14">=</operator> <name pos:start="48:16" pos:end="48:19">true</name></expr>;</expr_stmt>



<label pos:start="52:1" pos:end="52:4"><name pos:start="52:1" pos:end="52:3">out</name>:</label>

    <comment type="block" pos:start="54:5" pos:end="54:44">/* only accept 1 connection at a time */</comment>

    <return pos:start="56:5" pos:end="56:21">return <expr pos:start="56:12" pos:end="56:20"><operator pos:start="56:12" pos:end="56:12">!</operator><name pos:start="56:13" pos:end="56:20">accepted</name></expr>;</return>

</block_content>}</block></function></unit>
