<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1355.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">rtp_new_av_stream</name><parameter_list pos:start="1:29" pos:end="5:49">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:40">HTTPContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">c</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:45"><decl pos:start="3:30" pos:end="3:45"><type pos:start="3:30" pos:end="3:45"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:45">stream_index</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:76"><decl pos:start="3:48" pos:end="3:76"><type pos:start="3:48" pos:end="3:76"><name pos:start="3:48" pos:end="3:65"><name pos:start="3:48" pos:end="3:53">struct</name> <name pos:start="3:55" pos:end="3:65">sockaddr_in</name></name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:76">dest_addr</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:48"><decl pos:start="5:30" pos:end="5:48"><type pos:start="5:30" pos:end="5:48"><name pos:start="5:30" pos:end="5:40">HTTPContext</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier></type><name pos:start="5:43" pos:end="5:48">rtsp_c</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="181:1">{<block_content pos:start="9:5" pos:end="179:13">

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVFormatContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:16">ipaddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">URLContext</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:17">h</name> <init pos:start="15:19" pos:end="15:24">= <expr pos:start="15:21" pos:end="15:24"><name pos:start="15:21" pos:end="15:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:22">dummy_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:23">max_packet_size</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:52">/* now we can open the relevant output stream */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:7">ctx</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:34"><name pos:start="25:11" pos:end="25:32">avformat_alloc_context</name><argument_list pos:start="25:33" pos:end="25:34">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:12">ctx</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:7">ctx</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:16">oformat</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="31:53"><name pos:start="31:20" pos:end="31:34">av_guess_format</name><argument_list pos:start="31:35" pos:end="31:53">(<argument pos:start="31:36" pos:end="31:40"><expr pos:start="31:36" pos:end="31:40"><literal type="string" pos:start="31:36" pos:end="31:40">"rtp"</literal></expr></argument>, <argument pos:start="31:43" pos:end="31:46"><expr pos:start="31:43" pos:end="31:46"><name pos:start="31:43" pos:end="31:46">NULL</name></expr></argument>, <argument pos:start="31:49" pos:end="31:52"><expr pos:start="31:49" pos:end="31:52"><name pos:start="31:49" pos:end="31:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:38"><expr pos:start="35:5" pos:end="35:37"><name pos:start="35:5" pos:end="35:6">st</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:37"><name pos:start="35:10" pos:end="35:19">av_mallocz</name><argument_list pos:start="35:20" pos:end="35:37">(<argument pos:start="35:21" pos:end="35:36"><expr pos:start="35:21" pos:end="35:36"><sizeof pos:start="35:21" pos:end="35:36">sizeof<argument_list pos:start="35:27" pos:end="35:36">(<argument pos:start="35:28" pos:end="35:35"><expr pos:start="35:28" pos:end="35:35"><name pos:start="35:28" pos:end="35:35">AVStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:12">(<expr pos:start="37:9" pos:end="37:11"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:11">st</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:24"><expr pos:start="41:5" pos:end="41:23"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:7">ctx</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:19">nb_streams</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <literal type="number" pos:start="41:23" pos:end="41:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:25"><expr pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:7">ctx</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:16">streams</name><index pos:start="43:17" pos:end="43:19">[<expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>]</index></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:24">st</name></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="59:33"><if pos:start="47:5" pos:end="51:71">if <condition pos:start="47:8" pos:end="49:37">(<expr pos:start="47:9" pos:end="49:36"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:24"><name pos:start="47:10" pos:end="47:10">c</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:18">stream</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:24">feed</name></name> <operator pos:start="47:26" pos:end="47:27">||</operator>

        <name pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:9">c</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:17">stream</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:23">feed</name></name> <operator pos:start="49:25" pos:end="49:26">==</operator> <name pos:start="49:28" pos:end="49:36"><name pos:start="49:28" pos:end="49:28">c</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:36">stream</name></name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:71"><block_content pos:start="51:9" pos:end="51:71">

        <expr_stmt pos:start="51:9" pos:end="51:71"><expr pos:start="51:9" pos:end="51:70"><call pos:start="51:9" pos:end="51:70"><name pos:start="51:9" pos:end="51:14">memcpy</name><argument_list pos:start="51:15" pos:end="51:70">(<argument pos:start="51:16" pos:end="51:17"><expr pos:start="51:16" pos:end="51:17"><name pos:start="51:16" pos:end="51:17">st</name></expr></argument>, <argument pos:start="51:20" pos:end="51:51"><expr pos:start="51:20" pos:end="51:51"><name pos:start="51:20" pos:end="51:51"><name pos:start="51:20" pos:end="51:20">c</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:28">stream</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:37">streams</name><index pos:start="51:38" pos:end="51:51">[<expr pos:start="51:39" pos:end="51:50"><name pos:start="51:39" pos:end="51:50">stream_index</name></expr>]</index></name></expr></argument>, <argument pos:start="51:54" pos:end="51:69"><expr pos:start="51:54" pos:end="51:69"><sizeof pos:start="51:54" pos:end="51:69">sizeof<argument_list pos:start="51:60" pos:end="51:69">(<argument pos:start="51:61" pos:end="51:68"><expr pos:start="51:61" pos:end="51:68"><name pos:start="51:61" pos:end="51:68">AVStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="53:5" pos:end="59:33">else<block type="pseudo" pos:start="55:9" pos:end="59:33"><block_content pos:start="55:9" pos:end="59:33">

        <expr_stmt pos:start="55:9" pos:end="59:33"><expr pos:start="55:9" pos:end="59:32"><call pos:start="55:9" pos:end="59:32"><name pos:start="55:9" pos:end="55:14">memcpy</name><argument_list pos:start="55:15" pos:end="59:32">(<argument pos:start="55:16" pos:end="55:17"><expr pos:start="55:16" pos:end="55:17"><name pos:start="55:16" pos:end="55:17">st</name></expr></argument>,

               <argument pos:start="57:16" pos:end="57:78"><expr pos:start="57:16" pos:end="57:78"><name pos:start="57:16" pos:end="57:78"><name pos:start="57:16" pos:end="57:16">c</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:24">stream</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:30">feed</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:39">streams</name><index pos:start="57:40" pos:end="57:78">[<expr pos:start="57:41" pos:end="57:77"><name pos:start="57:41" pos:end="57:77"><name pos:start="57:41" pos:end="57:41">c</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:49">stream</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:63">feed_streams</name><index pos:start="57:64" pos:end="57:77">[<expr pos:start="57:65" pos:end="57:76"><name pos:start="57:65" pos:end="57:76">stream_index</name></expr>]</index></name></expr>]</index></name></expr></argument>,

               <argument pos:start="59:16" pos:end="59:31"><expr pos:start="59:16" pos:end="59:31"><sizeof pos:start="59:16" pos:end="59:31">sizeof<argument_list pos:start="59:22" pos:end="59:31">(<argument pos:start="59:23" pos:end="59:30"><expr pos:start="59:23" pos:end="59:30"><name pos:start="59:23" pos:end="59:30">AVStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:25"><expr pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:6">st</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:17">priv_data</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <name pos:start="61:21" pos:end="61:24">NULL</name></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:39">/* build destination RTP address */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:44"><expr pos:start="67:5" pos:end="67:43"><name pos:start="67:5" pos:end="67:10">ipaddr</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <call pos:start="67:14" pos:end="67:43"><name pos:start="67:14" pos:end="67:22">inet_ntoa</name><argument_list pos:start="67:23" pos:end="67:43">(<argument pos:start="67:24" pos:end="67:42"><expr pos:start="67:24" pos:end="67:42"><name pos:start="67:24" pos:end="67:42"><name pos:start="67:24" pos:end="67:32">dest_addr</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:42">sin_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="71:5" pos:end="133:5">switch<condition pos:start="71:11" pos:end="71:27">(<expr pos:start="71:12" pos:end="71:26"><name pos:start="71:12" pos:end="71:26"><name pos:start="71:12" pos:end="71:12">c</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:26">rtp_protocol</name></name></expr>)</condition> <block pos:start="71:29" pos:end="133:5">{<block_content pos:start="73:5" pos:end="131:18">

    <case pos:start="73:5" pos:end="73:34">case <expr pos:start="73:10" pos:end="73:33"><name pos:start="73:10" pos:end="73:33">RTSP_LOWER_TRANSPORT_UDP</name></expr>:</case>

    <case pos:start="75:5" pos:end="75:44">case <expr pos:start="75:10" pos:end="75:43"><name pos:start="75:10" pos:end="75:43">RTSP_LOWER_TRANSPORT_UDP_MULTICAST</name></expr>:</case>

        <comment type="block" pos:start="77:9" pos:end="77:26">/* RTP/UDP case */</comment>



        <comment type="block" pos:start="81:9" pos:end="81:55">/* XXX: also pass as parameter to function ? */</comment>

        <if_stmt pos:start="83:9" pos:end="105:9"><if pos:start="83:9" pos:end="99:9">if <condition pos:start="83:12" pos:end="83:36">(<expr pos:start="83:13" pos:end="83:35"><name pos:start="83:13" pos:end="83:35"><name pos:start="83:13" pos:end="83:13">c</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:21">stream</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:35">is_multicast</name></name></expr>)</condition> <block pos:start="83:38" pos:end="99:9">{<block_content pos:start="85:13" pos:end="97:62">

            <decl_stmt pos:start="85:13" pos:end="85:20"><decl pos:start="85:13" pos:end="85:19"><type pos:start="85:13" pos:end="85:15"><name pos:start="85:13" pos:end="85:15">int</name></type> <name pos:start="85:17" pos:end="85:19">ttl</name></decl>;</decl_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:43"><expr pos:start="87:13" pos:end="87:42"><name pos:start="87:13" pos:end="87:15">ttl</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:42"><name pos:start="87:19" pos:end="87:19">c</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:27">stream</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:42">multicast_ttl</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="91:25"><if pos:start="89:13" pos:end="91:25">if <condition pos:start="89:16" pos:end="89:21">(<expr pos:start="89:17" pos:end="89:20"><operator pos:start="89:17" pos:end="89:17">!</operator><name pos:start="89:18" pos:end="89:20">ttl</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:25"><block_content pos:start="91:17" pos:end="91:25">

                <expr_stmt pos:start="91:17" pos:end="91:25"><expr pos:start="91:17" pos:end="91:24"><name pos:start="91:17" pos:end="91:19">ttl</name> <operator pos:start="91:21" pos:end="91:21">=</operator> <literal type="number" pos:start="91:23" pos:end="91:24">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="93:13" pos:end="97:62"><expr pos:start="93:13" pos:end="97:61"><call pos:start="93:13" pos:end="97:61"><name pos:start="93:13" pos:end="93:20">snprintf</name><argument_list pos:start="93:21" pos:end="97:61">(<argument pos:start="93:22" pos:end="93:34"><expr pos:start="93:22" pos:end="93:34"><name pos:start="93:22" pos:end="93:34"><name pos:start="93:22" pos:end="93:24">ctx</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:34">filename</name></name></expr></argument>, <argument pos:start="93:37" pos:end="93:57"><expr pos:start="93:37" pos:end="93:57"><sizeof pos:start="93:37" pos:end="93:57">sizeof<argument_list pos:start="93:43" pos:end="93:57">(<argument pos:start="93:44" pos:end="93:56"><expr pos:start="93:44" pos:end="93:56"><name pos:start="93:44" pos:end="93:56"><name pos:start="93:44" pos:end="93:46">ctx</name><operator pos:start="93:47" pos:end="93:48">-&gt;</operator><name pos:start="93:49" pos:end="93:56">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="95:22" pos:end="95:53"><expr pos:start="95:22" pos:end="95:53"><literal type="string" pos:start="95:22" pos:end="95:53">"rtp://%s:%d?multicast=1&amp;ttl=%d"</literal></expr></argument>,

                     <argument pos:start="97:22" pos:end="97:27"><expr pos:start="97:22" pos:end="97:27"><name pos:start="97:22" pos:end="97:27">ipaddr</name></expr></argument>, <argument pos:start="97:30" pos:end="97:55"><expr pos:start="97:30" pos:end="97:55"><call pos:start="97:30" pos:end="97:55"><name pos:start="97:30" pos:end="97:34">ntohs</name><argument_list pos:start="97:35" pos:end="97:55">(<argument pos:start="97:36" pos:end="97:54"><expr pos:start="97:36" pos:end="97:54"><name pos:start="97:36" pos:end="97:54"><name pos:start="97:36" pos:end="97:44">dest_addr</name><operator pos:start="97:45" pos:end="97:46">-&gt;</operator><name pos:start="97:47" pos:end="97:54">sin_port</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="97:58" pos:end="97:60"><expr pos:start="97:58" pos:end="97:60"><name pos:start="97:58" pos:end="97:60">ttl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="99:11" pos:end="105:9">else <block pos:start="99:16" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:72">

            <expr_stmt pos:start="101:13" pos:end="103:72"><expr pos:start="101:13" pos:end="103:71"><call pos:start="101:13" pos:end="103:71"><name pos:start="101:13" pos:end="101:20">snprintf</name><argument_list pos:start="101:21" pos:end="103:71">(<argument pos:start="101:22" pos:end="101:34"><expr pos:start="101:22" pos:end="101:34"><name pos:start="101:22" pos:end="101:34"><name pos:start="101:22" pos:end="101:24">ctx</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:34">filename</name></name></expr></argument>, <argument pos:start="101:37" pos:end="101:57"><expr pos:start="101:37" pos:end="101:57"><sizeof pos:start="101:37" pos:end="101:57">sizeof<argument_list pos:start="101:43" pos:end="101:57">(<argument pos:start="101:44" pos:end="101:56"><expr pos:start="101:44" pos:end="101:56"><name pos:start="101:44" pos:end="101:56"><name pos:start="101:44" pos:end="101:46">ctx</name><operator pos:start="101:47" pos:end="101:48">-&gt;</operator><name pos:start="101:49" pos:end="101:56">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="103:22" pos:end="103:34"><expr pos:start="103:22" pos:end="103:34"><literal type="string" pos:start="103:22" pos:end="103:34">"rtp://%s:%d"</literal></expr></argument>, <argument pos:start="103:37" pos:end="103:42"><expr pos:start="103:37" pos:end="103:42"><name pos:start="103:37" pos:end="103:42">ipaddr</name></expr></argument>, <argument pos:start="103:45" pos:end="103:70"><expr pos:start="103:45" pos:end="103:70"><call pos:start="103:45" pos:end="103:70"><name pos:start="103:45" pos:end="103:49">ntohs</name><argument_list pos:start="103:50" pos:end="103:70">(<argument pos:start="103:51" pos:end="103:69"><expr pos:start="103:51" pos:end="103:69"><name pos:start="103:51" pos:end="103:69"><name pos:start="103:51" pos:end="103:59">dest_addr</name><operator pos:start="103:60" pos:end="103:61">-&gt;</operator><name pos:start="103:62" pos:end="103:69">sin_port</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="109:9" pos:end="111:22"><if pos:start="109:9" pos:end="111:22">if <condition pos:start="109:12" pos:end="109:56">(<expr pos:start="109:13" pos:end="109:55"><call pos:start="109:13" pos:end="109:51"><name pos:start="109:13" pos:end="109:20">url_open</name><argument_list pos:start="109:21" pos:end="109:51">(<argument pos:start="109:22" pos:end="109:23"><expr pos:start="109:22" pos:end="109:23"><operator pos:start="109:22" pos:end="109:22">&amp;</operator><name pos:start="109:23" pos:end="109:23">h</name></expr></argument>, <argument pos:start="109:26" pos:end="109:38"><expr pos:start="109:26" pos:end="109:38"><name pos:start="109:26" pos:end="109:38"><name pos:start="109:26" pos:end="109:28">ctx</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:38">filename</name></name></expr></argument>, <argument pos:start="109:41" pos:end="109:50"><expr pos:start="109:41" pos:end="109:50"><name pos:start="109:41" pos:end="109:50">URL_WRONLY</name></expr></argument>)</argument_list></call> <operator pos:start="109:53" pos:end="109:53">&lt;</operator> <literal type="number" pos:start="109:55" pos:end="109:55">0</literal></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:22"><block_content pos:start="111:13" pos:end="111:22">

            <goto pos:start="111:13" pos:end="111:22">goto <name pos:start="111:18" pos:end="111:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:41"><expr pos:start="113:9" pos:end="113:40"><name pos:start="113:9" pos:end="113:36"><name pos:start="113:9" pos:end="113:9">c</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:22">rtp_handles</name><index pos:start="113:23" pos:end="113:36">[<expr pos:start="113:24" pos:end="113:35"><name pos:start="113:24" pos:end="113:35">stream_index</name></expr>]</index></name> <operator pos:start="113:38" pos:end="113:38">=</operator> <name pos:start="113:40" pos:end="113:40">h</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:53"><expr pos:start="115:9" pos:end="115:52"><name pos:start="115:9" pos:end="115:23">max_packet_size</name> <operator pos:start="115:25" pos:end="115:25">=</operator> <call pos:start="115:27" pos:end="115:52"><name pos:start="115:27" pos:end="115:49">url_get_max_packet_size</name><argument_list pos:start="115:50" pos:end="115:52">(<argument pos:start="115:51" pos:end="115:51"><expr pos:start="115:51" pos:end="115:51"><name pos:start="115:51" pos:end="115:51">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    <case pos:start="119:5" pos:end="119:34">case <expr pos:start="119:10" pos:end="119:33"><name pos:start="119:10" pos:end="119:33">RTSP_LOWER_TRANSPORT_TCP</name></expr>:</case>

        <comment type="block" pos:start="121:9" pos:end="121:26">/* RTP/TCP case */</comment>

        <expr_stmt pos:start="123:9" pos:end="123:27"><expr pos:start="123:9" pos:end="123:26"><name pos:start="123:9" pos:end="123:17"><name pos:start="123:9" pos:end="123:9">c</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:17">rtsp_c</name></name> <operator pos:start="123:19" pos:end="123:19">=</operator> <name pos:start="123:21" pos:end="123:26">rtsp_c</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:51"><expr pos:start="125:9" pos:end="125:50"><name pos:start="125:9" pos:end="125:23">max_packet_size</name> <operator pos:start="125:25" pos:end="125:25">=</operator> <name pos:start="125:27" pos:end="125:50">RTSP_TCP_MAX_PACKET_SIZE</name></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    <default pos:start="129:5" pos:end="129:12">default:</default>

        <goto pos:start="131:9" pos:end="131:18">goto <name pos:start="131:14" pos:end="131:17">fail</name>;</goto>

    </block_content>}</block></switch>



    <expr_stmt pos:start="137:5" pos:end="141:61"><expr pos:start="137:5" pos:end="141:60"><call pos:start="137:5" pos:end="141:60"><name pos:start="137:5" pos:end="137:12">http_log</name><argument_list pos:start="137:13" pos:end="141:60">(<argument pos:start="137:14" pos:end="137:53"><expr pos:start="137:14" pos:end="137:53"><literal type="string" pos:start="137:14" pos:end="137:53">"%s:%d - - \"PLAY %s/streamid=%d %s\"\n"</literal></expr></argument>,

             <argument pos:start="139:14" pos:end="139:19"><expr pos:start="139:14" pos:end="139:19"><name pos:start="139:14" pos:end="139:19">ipaddr</name></expr></argument>, <argument pos:start="139:22" pos:end="139:47"><expr pos:start="139:22" pos:end="139:47"><call pos:start="139:22" pos:end="139:47"><name pos:start="139:22" pos:end="139:26">ntohs</name><argument_list pos:start="139:27" pos:end="139:47">(<argument pos:start="139:28" pos:end="139:46"><expr pos:start="139:28" pos:end="139:46"><name pos:start="139:28" pos:end="139:46"><name pos:start="139:28" pos:end="139:36">dest_addr</name><operator pos:start="139:37" pos:end="139:38">-&gt;</operator><name pos:start="139:39" pos:end="139:46">sin_port</name></name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="141:14" pos:end="141:32"><expr pos:start="141:14" pos:end="141:32"><name pos:start="141:14" pos:end="141:32"><name pos:start="141:14" pos:end="141:14">c</name><operator pos:start="141:15" pos:end="141:16">-&gt;</operator><name pos:start="141:17" pos:end="141:22">stream</name><operator pos:start="141:23" pos:end="141:24">-&gt;</operator><name pos:start="141:25" pos:end="141:32">filename</name></name></expr></argument>, <argument pos:start="141:35" pos:end="141:46"><expr pos:start="141:35" pos:end="141:46"><name pos:start="141:35" pos:end="141:46">stream_index</name></expr></argument>, <argument pos:start="141:49" pos:end="141:59"><expr pos:start="141:49" pos:end="141:59"><name pos:start="141:49" pos:end="141:59"><name pos:start="141:49" pos:end="141:49">c</name><operator pos:start="141:50" pos:end="141:51">-&gt;</operator><name pos:start="141:52" pos:end="141:59">protocol</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="145:5" pos:end="145:88">/* normally, no packets should be output here, but the packet size may be checked */</comment>

    <if_stmt pos:start="147:5" pos:end="153:5"><if pos:start="147:5" pos:end="153:5">if <condition pos:start="147:8" pos:end="147:63">(<expr pos:start="147:9" pos:end="147:62"><call pos:start="147:9" pos:end="147:58"><name pos:start="147:9" pos:end="147:31">url_open_dyn_packet_buf</name><argument_list pos:start="147:32" pos:end="147:58">(<argument pos:start="147:33" pos:end="147:40"><expr pos:start="147:33" pos:end="147:40"><operator pos:start="147:33" pos:end="147:33">&amp;</operator><name pos:start="147:34" pos:end="147:40"><name pos:start="147:34" pos:end="147:36">ctx</name><operator pos:start="147:37" pos:end="147:38">-&gt;</operator><name pos:start="147:39" pos:end="147:40">pb</name></name></expr></argument>, <argument pos:start="147:43" pos:end="147:57"><expr pos:start="147:43" pos:end="147:57"><name pos:start="147:43" pos:end="147:57">max_packet_size</name></expr></argument>)</argument_list></call> <operator pos:start="147:60" pos:end="147:60">&lt;</operator> <literal type="number" pos:start="147:62" pos:end="147:62">0</literal></expr>)</condition> <block pos:start="147:65" pos:end="153:5">{<block_content pos:start="151:9" pos:end="151:18">

        <comment type="block" pos:start="149:9" pos:end="149:31">/* XXX: close stream */</comment>

        <goto pos:start="151:9" pos:end="151:18">goto <name pos:start="151:14" pos:end="151:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:33"><expr pos:start="155:5" pos:end="155:32"><call pos:start="155:5" pos:end="155:32"><name pos:start="155:5" pos:end="155:21">av_set_parameters</name><argument_list pos:start="155:22" pos:end="155:32">(<argument pos:start="155:23" pos:end="155:25"><expr pos:start="155:23" pos:end="155:25"><name pos:start="155:23" pos:end="155:25">ctx</name></expr></argument>, <argument pos:start="155:28" pos:end="155:31"><expr pos:start="155:28" pos:end="155:31"><name pos:start="155:28" pos:end="155:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="157:5" pos:end="169:5"><if pos:start="157:5" pos:end="169:5">if <condition pos:start="157:8" pos:end="157:33">(<expr pos:start="157:9" pos:end="157:32"><call pos:start="157:9" pos:end="157:28"><name pos:start="157:9" pos:end="157:23">av_write_header</name><argument_list pos:start="157:24" pos:end="157:28">(<argument pos:start="157:25" pos:end="157:27"><expr pos:start="157:25" pos:end="157:27"><name pos:start="157:25" pos:end="157:27">ctx</name></expr></argument>)</argument_list></call> <operator pos:start="157:30" pos:end="157:30">&lt;</operator> <literal type="number" pos:start="157:32" pos:end="157:32">0</literal></expr>)</condition> <block pos:start="157:35" pos:end="169:5">{<block_content pos:start="159:5" pos:end="167:18">

    <label pos:start="159:5" pos:end="159:9"><name pos:start="159:5" pos:end="159:8">fail</name>:</label>

        <if_stmt pos:start="161:9" pos:end="163:25"><if pos:start="161:9" pos:end="163:25">if <condition pos:start="161:12" pos:end="161:14">(<expr pos:start="161:13" pos:end="161:13"><name pos:start="161:13" pos:end="161:13">h</name></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:25"><block_content pos:start="163:13" pos:end="163:25">

            <expr_stmt pos:start="163:13" pos:end="163:25"><expr pos:start="163:13" pos:end="163:24"><call pos:start="163:13" pos:end="163:24"><name pos:start="163:13" pos:end="163:21">url_close</name><argument_list pos:start="163:22" pos:end="163:24">(<argument pos:start="163:23" pos:end="163:23"><expr pos:start="163:23" pos:end="163:23"><name pos:start="163:23" pos:end="163:23">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:21"><expr pos:start="165:9" pos:end="165:20"><call pos:start="165:9" pos:end="165:20"><name pos:start="165:9" pos:end="165:15">av_free</name><argument_list pos:start="165:16" pos:end="165:20">(<argument pos:start="165:17" pos:end="165:19"><expr pos:start="165:17" pos:end="165:19"><name pos:start="165:17" pos:end="165:19">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="167:9" pos:end="167:18">return <expr pos:start="167:16" pos:end="167:17"><operator pos:start="167:16" pos:end="167:16">-</operator><literal type="number" pos:start="167:17" pos:end="167:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:44"><expr pos:start="171:5" pos:end="171:43"><call pos:start="171:5" pos:end="171:43"><name pos:start="171:5" pos:end="171:22">avio_close_dyn_buf</name><argument_list pos:start="171:23" pos:end="171:43">(<argument pos:start="171:24" pos:end="171:30"><expr pos:start="171:24" pos:end="171:30"><name pos:start="171:24" pos:end="171:30"><name pos:start="171:24" pos:end="171:26">ctx</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:30">pb</name></name></expr></argument>, <argument pos:start="171:33" pos:end="171:42"><expr pos:start="171:33" pos:end="171:42"><operator pos:start="171:33" pos:end="171:33">&amp;</operator><name pos:start="171:34" pos:end="171:42">dummy_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:23"><expr pos:start="173:5" pos:end="173:22"><call pos:start="173:5" pos:end="173:22"><name pos:start="173:5" pos:end="173:11">av_free</name><argument_list pos:start="173:12" pos:end="173:22">(<argument pos:start="173:13" pos:end="173:21"><expr pos:start="173:13" pos:end="173:21"><name pos:start="173:13" pos:end="173:21">dummy_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:35"><expr pos:start="177:5" pos:end="177:34"><name pos:start="177:5" pos:end="177:28"><name pos:start="177:5" pos:end="177:5">c</name><operator pos:start="177:6" pos:end="177:7">-&gt;</operator><name pos:start="177:8" pos:end="177:14">rtp_ctx</name><index pos:start="177:15" pos:end="177:28">[<expr pos:start="177:16" pos:end="177:27"><name pos:start="177:16" pos:end="177:27">stream_index</name></expr>]</index></name> <operator pos:start="177:30" pos:end="177:30">=</operator> <name pos:start="177:32" pos:end="177:34">ctx</name></expr>;</expr_stmt>

    <return pos:start="179:5" pos:end="179:13">return <expr pos:start="179:12" pos:end="179:12"><literal type="number" pos:start="179:12" pos:end="179:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
