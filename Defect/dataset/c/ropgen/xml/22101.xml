<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22101.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">render_memory_region</name><parameter_list pos:start="1:33" pos:end="9:47">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:41">FlatView</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">view</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:49"><decl pos:start="3:34" pos:end="3:49"><type pos:start="3:34" pos:end="3:49"><name pos:start="3:34" pos:end="3:45">MemoryRegion</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:49">mr</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:44"><decl pos:start="5:34" pos:end="5:44"><type pos:start="5:34" pos:end="5:44"><name pos:start="5:34" pos:end="5:39">Int128</name></type> <name pos:start="5:41" pos:end="5:44">base</name></decl></parameter>,

                                 <parameter pos:start="7:34" pos:end="7:47"><decl pos:start="7:34" pos:end="7:47"><type pos:start="7:34" pos:end="7:47"><name pos:start="7:34" pos:end="7:42">AddrRange</name></type> <name pos:start="7:44" pos:end="7:47">clip</name></decl></parameter>,

                                 <parameter pos:start="9:34" pos:end="9:46"><decl pos:start="9:34" pos:end="9:46"><type pos:start="9:34" pos:end="9:46"><name pos:start="9:34" pos:end="9:37">bool</name></type> <name pos:start="9:39" pos:end="9:46">readonly</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="171:1">{<block_content pos:start="13:5" pos:end="169:5">

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">MemoryRegion</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:27">subregion</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">unsigned</name></type> <name pos:start="15:14" pos:end="15:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">hwaddr</name></type> <name pos:start="17:12" pos:end="17:27">offset_in_region</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">Int128</name></type> <name pos:start="19:12" pos:end="19:17">remain</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:15"><decl pos:start="21:5" pos:end="21:14"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">Int128</name></type> <name pos:start="21:12" pos:end="21:14">now</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:17"><decl pos:start="23:5" pos:end="23:16"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:13">FlatRange</name></type> <name pos:start="23:15" pos:end="23:16">fr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:18"><decl pos:start="25:5" pos:end="25:17"><type pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:13">AddrRange</name></type> <name pos:start="25:15" pos:end="25:17">tmp</name></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:21">(<expr pos:start="29:9" pos:end="29:20"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:20"><name pos:start="29:10" pos:end="29:11">mr</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:20">enabled</name></name></expr>)</condition> <block pos:start="29:23" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:15">

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:49"><expr pos:start="37:5" pos:end="37:48"><call pos:start="37:5" pos:end="37:48"><name pos:start="37:5" pos:end="37:16">int128_addto</name><argument_list pos:start="37:17" pos:end="37:48">(<argument pos:start="37:18" pos:end="37:22"><expr pos:start="37:18" pos:end="37:22"><operator pos:start="37:18" pos:end="37:18">&amp;</operator><name pos:start="37:19" pos:end="37:22">base</name></expr></argument>, <argument pos:start="37:25" pos:end="37:47"><expr pos:start="37:25" pos:end="37:47"><call pos:start="37:25" pos:end="37:47"><name pos:start="37:25" pos:end="37:37">int128_make64</name><argument_list pos:start="37:38" pos:end="37:47">(<argument pos:start="37:39" pos:end="37:46"><expr pos:start="37:39" pos:end="37:46"><name pos:start="37:39" pos:end="37:46"><name pos:start="37:39" pos:end="37:40">mr</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:46">addr</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:12">readonly</name> <operator pos:start="39:14" pos:end="39:15">|=</operator> <name pos:start="39:17" pos:end="39:28"><name pos:start="39:17" pos:end="39:18">mr</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:28">readonly</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:7">tmp</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:40"><name pos:start="43:11" pos:end="43:24">addrrange_make</name><argument_list pos:start="43:25" pos:end="43:40">(<argument pos:start="43:26" pos:end="43:29"><expr pos:start="43:26" pos:end="43:29"><name pos:start="43:26" pos:end="43:29">base</name></expr></argument>, <argument pos:start="43:32" pos:end="43:39"><expr pos:start="43:32" pos:end="43:39"><name pos:start="43:32" pos:end="43:39"><name pos:start="43:32" pos:end="43:33">mr</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:39">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:41">(<expr pos:start="47:9" pos:end="47:40"><operator pos:start="47:9" pos:end="47:9">!</operator><call pos:start="47:10" pos:end="47:40"><name pos:start="47:10" pos:end="47:29">addrrange_intersects</name><argument_list pos:start="47:30" pos:end="47:40">(<argument pos:start="47:31" pos:end="47:33"><expr pos:start="47:31" pos:end="47:33"><name pos:start="47:31" pos:end="47:33">tmp</name></expr></argument>, <argument pos:start="47:36" pos:end="47:39"><expr pos:start="47:36" pos:end="47:39"><name pos:start="47:36" pos:end="47:39">clip</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:43" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:15">

        <return pos:start="49:9" pos:end="49:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:45"><expr pos:start="55:5" pos:end="55:44"><name pos:start="55:5" pos:end="55:8">clip</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <call pos:start="55:12" pos:end="55:44"><name pos:start="55:12" pos:end="55:33">addrrange_intersection</name><argument_list pos:start="55:34" pos:end="55:44">(<argument pos:start="55:35" pos:end="55:37"><expr pos:start="55:35" pos:end="55:37"><name pos:start="55:35" pos:end="55:37">tmp</name></expr></argument>, <argument pos:start="55:40" pos:end="55:43"><expr pos:start="55:40" pos:end="55:43"><name pos:start="55:40" pos:end="55:43">clip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="69:5"><if pos:start="59:5" pos:end="69:5">if <condition pos:start="59:8" pos:end="59:18">(<expr pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:10">mr</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:17">alias</name></name></expr>)</condition> <block pos:start="59:20" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:15">

        <expr_stmt pos:start="61:9" pos:end="61:62"><expr pos:start="61:9" pos:end="61:61"><call pos:start="61:9" pos:end="61:61"><name pos:start="61:9" pos:end="61:22">int128_subfrom</name><argument_list pos:start="61:23" pos:end="61:61">(<argument pos:start="61:24" pos:end="61:28"><expr pos:start="61:24" pos:end="61:28"><operator pos:start="61:24" pos:end="61:24">&amp;</operator><name pos:start="61:25" pos:end="61:28">base</name></expr></argument>, <argument pos:start="61:31" pos:end="61:60"><expr pos:start="61:31" pos:end="61:60"><call pos:start="61:31" pos:end="61:60"><name pos:start="61:31" pos:end="61:43">int128_make64</name><argument_list pos:start="61:44" pos:end="61:60">(<argument pos:start="61:45" pos:end="61:59"><expr pos:start="61:45" pos:end="61:59"><name pos:start="61:45" pos:end="61:59"><name pos:start="61:45" pos:end="61:46">mr</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:53">alias</name><operator pos:start="61:54" pos:end="61:55">-&gt;</operator><name pos:start="61:56" pos:end="61:59">addr</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:63"><expr pos:start="63:9" pos:end="63:62"><call pos:start="63:9" pos:end="63:62"><name pos:start="63:9" pos:end="63:22">int128_subfrom</name><argument_list pos:start="63:23" pos:end="63:62">(<argument pos:start="63:24" pos:end="63:28"><expr pos:start="63:24" pos:end="63:28"><operator pos:start="63:24" pos:end="63:24">&amp;</operator><name pos:start="63:25" pos:end="63:28">base</name></expr></argument>, <argument pos:start="63:31" pos:end="63:61"><expr pos:start="63:31" pos:end="63:61"><call pos:start="63:31" pos:end="63:61"><name pos:start="63:31" pos:end="63:43">int128_make64</name><argument_list pos:start="63:44" pos:end="63:61">(<argument pos:start="63:45" pos:end="63:60"><expr pos:start="63:45" pos:end="63:60"><name pos:start="63:45" pos:end="63:60"><name pos:start="63:45" pos:end="63:46">mr</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:60">alias_offset</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:68"><expr pos:start="65:9" pos:end="65:67"><call pos:start="65:9" pos:end="65:67"><name pos:start="65:9" pos:end="65:28">render_memory_region</name><argument_list pos:start="65:29" pos:end="65:67">(<argument pos:start="65:30" pos:end="65:33"><expr pos:start="65:30" pos:end="65:33"><name pos:start="65:30" pos:end="65:33">view</name></expr></argument>, <argument pos:start="65:36" pos:end="65:44"><expr pos:start="65:36" pos:end="65:44"><name pos:start="65:36" pos:end="65:44"><name pos:start="65:36" pos:end="65:37">mr</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:44">alias</name></name></expr></argument>, <argument pos:start="65:47" pos:end="65:50"><expr pos:start="65:47" pos:end="65:50"><name pos:start="65:47" pos:end="65:50">base</name></expr></argument>, <argument pos:start="65:53" pos:end="65:56"><expr pos:start="65:53" pos:end="65:56"><name pos:start="65:53" pos:end="65:56">clip</name></expr></argument>, <argument pos:start="65:59" pos:end="65:66"><expr pos:start="65:59" pos:end="65:66"><name pos:start="65:59" pos:end="65:66">readonly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:46">/* Render subregions in priority order. */</comment>

    <macro pos:start="75:5" pos:end="75:63"><name pos:start="75:5" pos:end="75:18">QTAILQ_FOREACH</name><argument_list pos:start="75:19" pos:end="75:63">(<argument pos:start="75:20" pos:end="75:28">subregion</argument>, <argument pos:start="75:31" pos:end="75:45">&amp;mr-&gt;subregions</argument>, <argument pos:start="75:48" pos:end="75:62">subregions_link</argument>)</argument_list></macro> <block pos:start="75:65" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:68">

        <expr_stmt pos:start="77:9" pos:end="77:68"><expr pos:start="77:9" pos:end="77:67"><call pos:start="77:9" pos:end="77:67"><name pos:start="77:9" pos:end="77:28">render_memory_region</name><argument_list pos:start="77:29" pos:end="77:67">(<argument pos:start="77:30" pos:end="77:33"><expr pos:start="77:30" pos:end="77:33"><name pos:start="77:30" pos:end="77:33">view</name></expr></argument>, <argument pos:start="77:36" pos:end="77:44"><expr pos:start="77:36" pos:end="77:44"><name pos:start="77:36" pos:end="77:44">subregion</name></expr></argument>, <argument pos:start="77:47" pos:end="77:50"><expr pos:start="77:47" pos:end="77:50"><name pos:start="77:47" pos:end="77:50">base</name></expr></argument>, <argument pos:start="77:53" pos:end="77:56"><expr pos:start="77:53" pos:end="77:56"><name pos:start="77:53" pos:end="77:56">clip</name></expr></argument>, <argument pos:start="77:59" pos:end="77:66"><expr pos:start="77:59" pos:end="77:66"><name pos:start="77:59" pos:end="77:66">readonly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <if_stmt pos:start="83:5" pos:end="87:5"><if pos:start="83:5" pos:end="87:5">if <condition pos:start="83:8" pos:end="83:24">(<expr pos:start="83:9" pos:end="83:23"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:23"><name pos:start="83:10" pos:end="83:11">mr</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:23">terminates</name></name></expr>)</condition> <block pos:start="83:26" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:15">

        <return pos:start="85:9" pos:end="85:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:66"><expr pos:start="91:5" pos:end="91:65"><name pos:start="91:5" pos:end="91:20">offset_in_region</name> <operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:65"><name pos:start="91:24" pos:end="91:35">int128_get64</name><argument_list pos:start="91:36" pos:end="91:65">(<argument pos:start="91:37" pos:end="91:64"><expr pos:start="91:37" pos:end="91:64"><call pos:start="91:37" pos:end="91:64"><name pos:start="91:37" pos:end="91:46">int128_sub</name><argument_list pos:start="91:47" pos:end="91:64">(<argument pos:start="91:48" pos:end="91:57"><expr pos:start="91:48" pos:end="91:57"><name pos:start="91:48" pos:end="91:57"><name pos:start="91:48" pos:end="91:51">clip</name><operator pos:start="91:52" pos:end="91:52">.</operator><name pos:start="91:53" pos:end="91:57">start</name></name></expr></argument>, <argument pos:start="91:60" pos:end="91:63"><expr pos:start="91:60" pos:end="91:63"><name pos:start="91:60" pos:end="91:63">base</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:22"><expr pos:start="93:5" pos:end="93:21"><name pos:start="93:5" pos:end="93:8">base</name> <operator pos:start="93:10" pos:end="93:10">=</operator> <name pos:start="93:12" pos:end="93:21"><name pos:start="93:12" pos:end="93:15">clip</name><operator pos:start="93:16" pos:end="93:16">.</operator><name pos:start="93:17" pos:end="93:21">start</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:23"><expr pos:start="95:5" pos:end="95:22"><name pos:start="95:5" pos:end="95:10">remain</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <name pos:start="95:14" pos:end="95:22"><name pos:start="95:14" pos:end="95:17">clip</name><operator pos:start="95:18" pos:end="95:18">.</operator><name pos:start="95:19" pos:end="95:22">size</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:74">/* Render the region itself into any gaps left by the current view. */</comment>

    <for pos:start="101:5" pos:end="151:5">for <control pos:start="101:9" pos:end="101:55">(<init pos:start="101:10" pos:end="101:15"><expr pos:start="101:10" pos:end="101:14"><name pos:start="101:10" pos:end="101:10">i</name> <operator pos:start="101:12" pos:end="101:12">=</operator> <literal type="number" pos:start="101:14" pos:end="101:14">0</literal></expr>;</init> <condition pos:start="101:17" pos:end="101:50"><expr pos:start="101:17" pos:end="101:49"><name pos:start="101:17" pos:end="101:17">i</name> <operator pos:start="101:19" pos:end="101:19">&lt;</operator> <name pos:start="101:21" pos:end="101:28"><name pos:start="101:21" pos:end="101:24">view</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:28">nr</name></name> <operator pos:start="101:30" pos:end="101:31">&amp;&amp;</operator> <call pos:start="101:33" pos:end="101:49"><name pos:start="101:33" pos:end="101:41">int128_nz</name><argument_list pos:start="101:42" pos:end="101:49">(<argument pos:start="101:43" pos:end="101:48"><expr pos:start="101:43" pos:end="101:48"><name pos:start="101:43" pos:end="101:48">remain</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="101:52" pos:end="101:54"><expr pos:start="101:52" pos:end="101:54"><operator pos:start="101:52" pos:end="101:53">++</operator><name pos:start="101:54" pos:end="101:54">i</name></expr></incr>)</control> <block pos:start="101:57" pos:end="151:5">{<block_content pos:start="103:9" pos:end="149:37">

        <if_stmt pos:start="103:9" pos:end="107:9"><if pos:start="103:9" pos:end="107:9">if <condition pos:start="103:12" pos:end="103:65">(<expr pos:start="103:13" pos:end="103:64"><call pos:start="103:13" pos:end="103:64"><name pos:start="103:13" pos:end="103:21">int128_ge</name><argument_list pos:start="103:22" pos:end="103:64">(<argument pos:start="103:23" pos:end="103:26"><expr pos:start="103:23" pos:end="103:26"><name pos:start="103:23" pos:end="103:26">base</name></expr></argument>, <argument pos:start="103:29" pos:end="103:63"><expr pos:start="103:29" pos:end="103:63"><call pos:start="103:29" pos:end="103:63"><name pos:start="103:29" pos:end="103:41">addrrange_end</name><argument_list pos:start="103:42" pos:end="103:63">(<argument pos:start="103:43" pos:end="103:62"><expr pos:start="103:43" pos:end="103:62"><name pos:start="103:43" pos:end="103:57"><name pos:start="103:43" pos:end="103:46">view</name><operator pos:start="103:47" pos:end="103:48">-&gt;</operator><name pos:start="103:49" pos:end="103:54">ranges</name><index pos:start="103:55" pos:end="103:57">[<expr pos:start="103:56" pos:end="103:56"><name pos:start="103:56" pos:end="103:56">i</name></expr>]</index></name><operator pos:start="103:58" pos:end="103:58">.</operator><name pos:start="103:59" pos:end="103:62">addr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:67" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:21">

            <continue pos:start="105:13" pos:end="105:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="109:9" pos:end="137:9"><if pos:start="109:9" pos:end="137:9">if <condition pos:start="109:12" pos:end="109:56">(<expr pos:start="109:13" pos:end="109:55"><call pos:start="109:13" pos:end="109:55"><name pos:start="109:13" pos:end="109:21">int128_lt</name><argument_list pos:start="109:22" pos:end="109:55">(<argument pos:start="109:23" pos:end="109:26"><expr pos:start="109:23" pos:end="109:26"><name pos:start="109:23" pos:end="109:26">base</name></expr></argument>, <argument pos:start="109:29" pos:end="109:54"><expr pos:start="109:29" pos:end="109:54"><name pos:start="109:29" pos:end="109:43"><name pos:start="109:29" pos:end="109:32">view</name><operator pos:start="109:33" pos:end="109:34">-&gt;</operator><name pos:start="109:35" pos:end="109:40">ranges</name><index pos:start="109:41" pos:end="109:43">[<expr pos:start="109:42" pos:end="109:42"><name pos:start="109:42" pos:end="109:42">i</name></expr>]</index></name><operator pos:start="109:44" pos:end="109:44">.</operator><name pos:start="109:45" pos:end="109:54"><name pos:start="109:45" pos:end="109:48">addr</name><operator pos:start="109:49" pos:end="109:49">.</operator><name pos:start="109:50" pos:end="109:54">start</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:58" pos:end="137:9">{<block_content pos:start="111:13" pos:end="135:41">

            <expr_stmt pos:start="111:13" pos:end="113:75"><expr pos:start="111:13" pos:end="113:74"><name pos:start="111:13" pos:end="111:15">now</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <call pos:start="111:19" pos:end="113:74"><name pos:start="111:19" pos:end="111:28">int128_min</name><argument_list pos:start="111:29" pos:end="113:74">(<argument pos:start="111:30" pos:end="111:35"><expr pos:start="111:30" pos:end="111:35"><name pos:start="111:30" pos:end="111:35">remain</name></expr></argument>,

                             <argument pos:start="113:30" pos:end="113:73"><expr pos:start="113:30" pos:end="113:73"><call pos:start="113:30" pos:end="113:73"><name pos:start="113:30" pos:end="113:39">int128_sub</name><argument_list pos:start="113:40" pos:end="113:73">(<argument pos:start="113:41" pos:end="113:66"><expr pos:start="113:41" pos:end="113:66"><name pos:start="113:41" pos:end="113:55"><name pos:start="113:41" pos:end="113:44">view</name><operator pos:start="113:45" pos:end="113:46">-&gt;</operator><name pos:start="113:47" pos:end="113:52">ranges</name><index pos:start="113:53" pos:end="113:55">[<expr pos:start="113:54" pos:end="113:54"><name pos:start="113:54" pos:end="113:54">i</name></expr>]</index></name><operator pos:start="113:56" pos:end="113:56">.</operator><name pos:start="113:57" pos:end="113:66"><name pos:start="113:57" pos:end="113:60">addr</name><operator pos:start="113:61" pos:end="113:61">.</operator><name pos:start="113:62" pos:end="113:66">start</name></name></expr></argument>, <argument pos:start="113:69" pos:end="113:72"><expr pos:start="113:69" pos:end="113:72"><name pos:start="113:69" pos:end="113:72">base</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:23"><expr pos:start="115:13" pos:end="115:22"><name pos:start="115:13" pos:end="115:17"><name pos:start="115:13" pos:end="115:14">fr</name><operator pos:start="115:15" pos:end="115:15">.</operator><name pos:start="115:16" pos:end="115:17">mr</name></name> <operator pos:start="115:19" pos:end="115:19">=</operator> <name pos:start="115:21" pos:end="115:22">mr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:51"><expr pos:start="117:13" pos:end="117:50"><name pos:start="117:13" pos:end="117:31"><name pos:start="117:13" pos:end="117:14">fr</name><operator pos:start="117:15" pos:end="117:15">.</operator><name pos:start="117:16" pos:end="117:31">offset_in_region</name></name> <operator pos:start="117:33" pos:end="117:33">=</operator> <name pos:start="117:35" pos:end="117:50">offset_in_region</name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:48"><expr pos:start="119:13" pos:end="119:47"><name pos:start="119:13" pos:end="119:19"><name pos:start="119:13" pos:end="119:14">fr</name><operator pos:start="119:15" pos:end="119:15">.</operator><name pos:start="119:16" pos:end="119:19">addr</name></name> <operator pos:start="119:21" pos:end="119:21">=</operator> <call pos:start="119:23" pos:end="119:47"><name pos:start="119:23" pos:end="119:36">addrrange_make</name><argument_list pos:start="119:37" pos:end="119:47">(<argument pos:start="119:38" pos:end="119:41"><expr pos:start="119:38" pos:end="119:41"><name pos:start="119:38" pos:end="119:41">base</name></expr></argument>, <argument pos:start="119:44" pos:end="119:46"><expr pos:start="119:44" pos:end="119:46"><name pos:start="119:44" pos:end="119:46">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:51"><expr pos:start="121:13" pos:end="121:50"><name pos:start="121:13" pos:end="121:29"><name pos:start="121:13" pos:end="121:14">fr</name><operator pos:start="121:15" pos:end="121:15">.</operator><name pos:start="121:16" pos:end="121:29">dirty_log_mask</name></name> <operator pos:start="121:31" pos:end="121:31">=</operator> <name pos:start="121:33" pos:end="121:50"><name pos:start="121:33" pos:end="121:34">mr</name><operator pos:start="121:35" pos:end="121:36">-&gt;</operator><name pos:start="121:37" pos:end="121:50">dirty_log_mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:41"><expr pos:start="123:13" pos:end="123:40"><name pos:start="123:13" pos:end="123:24"><name pos:start="123:13" pos:end="123:14">fr</name><operator pos:start="123:15" pos:end="123:15">.</operator><name pos:start="123:16" pos:end="123:24">romd_mode</name></name> <operator pos:start="123:26" pos:end="123:26">=</operator> <name pos:start="123:28" pos:end="123:40"><name pos:start="123:28" pos:end="123:29">mr</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:40">romd_mode</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:35"><expr pos:start="125:13" pos:end="125:34"><name pos:start="125:13" pos:end="125:23"><name pos:start="125:13" pos:end="125:14">fr</name><operator pos:start="125:15" pos:end="125:15">.</operator><name pos:start="125:16" pos:end="125:23">readonly</name></name> <operator pos:start="125:25" pos:end="125:25">=</operator> <name pos:start="125:27" pos:end="125:34">readonly</name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:42"><expr pos:start="127:13" pos:end="127:41"><call pos:start="127:13" pos:end="127:41"><name pos:start="127:13" pos:end="127:27">flatview_insert</name><argument_list pos:start="127:28" pos:end="127:41">(<argument pos:start="127:29" pos:end="127:32"><expr pos:start="127:29" pos:end="127:32"><name pos:start="127:29" pos:end="127:32">view</name></expr></argument>, <argument pos:start="127:35" pos:end="127:35"><expr pos:start="127:35" pos:end="127:35"><name pos:start="127:35" pos:end="127:35">i</name></expr></argument>, <argument pos:start="127:38" pos:end="127:40"><expr pos:start="127:38" pos:end="127:40"><operator pos:start="127:38" pos:end="127:38">&amp;</operator><name pos:start="127:39" pos:end="127:40">fr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:16"><expr pos:start="129:13" pos:end="129:15"><operator pos:start="129:13" pos:end="129:14">++</operator><name pos:start="129:15" pos:end="129:15">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:37"><expr pos:start="131:13" pos:end="131:36"><call pos:start="131:13" pos:end="131:36"><name pos:start="131:13" pos:end="131:24">int128_addto</name><argument_list pos:start="131:25" pos:end="131:36">(<argument pos:start="131:26" pos:end="131:30"><expr pos:start="131:26" pos:end="131:30"><operator pos:start="131:26" pos:end="131:26">&amp;</operator><name pos:start="131:27" pos:end="131:30">base</name></expr></argument>, <argument pos:start="131:33" pos:end="131:35"><expr pos:start="131:33" pos:end="131:35"><name pos:start="131:33" pos:end="131:35">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:50"><expr pos:start="133:13" pos:end="133:49"><name pos:start="133:13" pos:end="133:28">offset_in_region</name> <operator pos:start="133:30" pos:end="133:31">+=</operator> <call pos:start="133:33" pos:end="133:49"><name pos:start="133:33" pos:end="133:44">int128_get64</name><argument_list pos:start="133:45" pos:end="133:49">(<argument pos:start="133:46" pos:end="133:48"><expr pos:start="133:46" pos:end="133:48"><name pos:start="133:46" pos:end="133:48">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:41"><expr pos:start="135:13" pos:end="135:40"><call pos:start="135:13" pos:end="135:40"><name pos:start="135:13" pos:end="135:26">int128_subfrom</name><argument_list pos:start="135:27" pos:end="135:40">(<argument pos:start="135:28" pos:end="135:34"><expr pos:start="135:28" pos:end="135:34"><operator pos:start="135:28" pos:end="135:28">&amp;</operator><name pos:start="135:29" pos:end="135:34">remain</name></expr></argument>, <argument pos:start="135:37" pos:end="135:39"><expr pos:start="135:37" pos:end="135:39"><name pos:start="135:37" pos:end="135:39">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="139:9" pos:end="143:31"><expr pos:start="139:9" pos:end="143:30"><name pos:start="139:9" pos:end="139:11">now</name> <operator pos:start="139:13" pos:end="139:13">=</operator> <call pos:start="139:15" pos:end="143:30"><name pos:start="139:15" pos:end="139:24">int128_sub</name><argument_list pos:start="139:25" pos:end="143:30">(<argument pos:start="139:26" pos:end="141:72"><expr pos:start="139:26" pos:end="141:72"><call pos:start="139:26" pos:end="141:72"><name pos:start="139:26" pos:end="139:35">int128_min</name><argument_list pos:start="139:36" pos:end="141:72">(<argument pos:start="139:37" pos:end="139:60"><expr pos:start="139:37" pos:end="139:60"><call pos:start="139:37" pos:end="139:60"><name pos:start="139:37" pos:end="139:46">int128_add</name><argument_list pos:start="139:47" pos:end="139:60">(<argument pos:start="139:48" pos:end="139:51"><expr pos:start="139:48" pos:end="139:51"><name pos:start="139:48" pos:end="139:51">base</name></expr></argument>, <argument pos:start="139:54" pos:end="139:59"><expr pos:start="139:54" pos:end="139:59"><name pos:start="139:54" pos:end="139:59">remain</name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="141:37" pos:end="141:71"><expr pos:start="141:37" pos:end="141:71"><call pos:start="141:37" pos:end="141:71"><name pos:start="141:37" pos:end="141:49">addrrange_end</name><argument_list pos:start="141:50" pos:end="141:71">(<argument pos:start="141:51" pos:end="141:70"><expr pos:start="141:51" pos:end="141:70"><name pos:start="141:51" pos:end="141:65"><name pos:start="141:51" pos:end="141:54">view</name><operator pos:start="141:55" pos:end="141:56">-&gt;</operator><name pos:start="141:57" pos:end="141:62">ranges</name><index pos:start="141:63" pos:end="141:65">[<expr pos:start="141:64" pos:end="141:64"><name pos:start="141:64" pos:end="141:64">i</name></expr>]</index></name><operator pos:start="141:66" pos:end="141:66">.</operator><name pos:start="141:67" pos:end="141:70">addr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="143:26" pos:end="143:29"><expr pos:start="143:26" pos:end="143:29"><name pos:start="143:26" pos:end="143:29">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:33"><expr pos:start="145:9" pos:end="145:32"><call pos:start="145:9" pos:end="145:32"><name pos:start="145:9" pos:end="145:20">int128_addto</name><argument_list pos:start="145:21" pos:end="145:32">(<argument pos:start="145:22" pos:end="145:26"><expr pos:start="145:22" pos:end="145:26"><operator pos:start="145:22" pos:end="145:22">&amp;</operator><name pos:start="145:23" pos:end="145:26">base</name></expr></argument>, <argument pos:start="145:29" pos:end="145:31"><expr pos:start="145:29" pos:end="145:31"><name pos:start="145:29" pos:end="145:31">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:46"><expr pos:start="147:9" pos:end="147:45"><name pos:start="147:9" pos:end="147:24">offset_in_region</name> <operator pos:start="147:26" pos:end="147:27">+=</operator> <call pos:start="147:29" pos:end="147:45"><name pos:start="147:29" pos:end="147:40">int128_get64</name><argument_list pos:start="147:41" pos:end="147:45">(<argument pos:start="147:42" pos:end="147:44"><expr pos:start="147:42" pos:end="147:44"><name pos:start="147:42" pos:end="147:44">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:37"><expr pos:start="149:9" pos:end="149:36"><call pos:start="149:9" pos:end="149:36"><name pos:start="149:9" pos:end="149:22">int128_subfrom</name><argument_list pos:start="149:23" pos:end="149:36">(<argument pos:start="149:24" pos:end="149:30"><expr pos:start="149:24" pos:end="149:30"><operator pos:start="149:24" pos:end="149:24">&amp;</operator><name pos:start="149:25" pos:end="149:30">remain</name></expr></argument>, <argument pos:start="149:33" pos:end="149:35"><expr pos:start="149:33" pos:end="149:35"><name pos:start="149:33" pos:end="149:35">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="153:5" pos:end="169:5"><if pos:start="153:5" pos:end="169:5">if <condition pos:start="153:8" pos:end="153:26">(<expr pos:start="153:9" pos:end="153:25"><call pos:start="153:9" pos:end="153:25"><name pos:start="153:9" pos:end="153:17">int128_nz</name><argument_list pos:start="153:18" pos:end="153:25">(<argument pos:start="153:19" pos:end="153:24"><expr pos:start="153:19" pos:end="153:24"><name pos:start="153:19" pos:end="153:24">remain</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="153:28" pos:end="169:5">{<block_content pos:start="155:9" pos:end="167:38">

        <expr_stmt pos:start="155:9" pos:end="155:19"><expr pos:start="155:9" pos:end="155:18"><name pos:start="155:9" pos:end="155:13"><name pos:start="155:9" pos:end="155:10">fr</name><operator pos:start="155:11" pos:end="155:11">.</operator><name pos:start="155:12" pos:end="155:13">mr</name></name> <operator pos:start="155:15" pos:end="155:15">=</operator> <name pos:start="155:17" pos:end="155:18">mr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:47"><expr pos:start="157:9" pos:end="157:46"><name pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:10">fr</name><operator pos:start="157:11" pos:end="157:11">.</operator><name pos:start="157:12" pos:end="157:27">offset_in_region</name></name> <operator pos:start="157:29" pos:end="157:29">=</operator> <name pos:start="157:31" pos:end="157:46">offset_in_region</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:47"><expr pos:start="159:9" pos:end="159:46"><name pos:start="159:9" pos:end="159:15"><name pos:start="159:9" pos:end="159:10">fr</name><operator pos:start="159:11" pos:end="159:11">.</operator><name pos:start="159:12" pos:end="159:15">addr</name></name> <operator pos:start="159:17" pos:end="159:17">=</operator> <call pos:start="159:19" pos:end="159:46"><name pos:start="159:19" pos:end="159:32">addrrange_make</name><argument_list pos:start="159:33" pos:end="159:46">(<argument pos:start="159:34" pos:end="159:37"><expr pos:start="159:34" pos:end="159:37"><name pos:start="159:34" pos:end="159:37">base</name></expr></argument>, <argument pos:start="159:40" pos:end="159:45"><expr pos:start="159:40" pos:end="159:45"><name pos:start="159:40" pos:end="159:45">remain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:47"><expr pos:start="161:9" pos:end="161:46"><name pos:start="161:9" pos:end="161:25"><name pos:start="161:9" pos:end="161:10">fr</name><operator pos:start="161:11" pos:end="161:11">.</operator><name pos:start="161:12" pos:end="161:25">dirty_log_mask</name></name> <operator pos:start="161:27" pos:end="161:27">=</operator> <name pos:start="161:29" pos:end="161:46"><name pos:start="161:29" pos:end="161:30">mr</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:46">dirty_log_mask</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:37"><expr pos:start="163:9" pos:end="163:36"><name pos:start="163:9" pos:end="163:20"><name pos:start="163:9" pos:end="163:10">fr</name><operator pos:start="163:11" pos:end="163:11">.</operator><name pos:start="163:12" pos:end="163:20">romd_mode</name></name> <operator pos:start="163:22" pos:end="163:22">=</operator> <name pos:start="163:24" pos:end="163:36"><name pos:start="163:24" pos:end="163:25">mr</name><operator pos:start="163:26" pos:end="163:27">-&gt;</operator><name pos:start="163:28" pos:end="163:36">romd_mode</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:31"><expr pos:start="165:9" pos:end="165:30"><name pos:start="165:9" pos:end="165:19"><name pos:start="165:9" pos:end="165:10">fr</name><operator pos:start="165:11" pos:end="165:11">.</operator><name pos:start="165:12" pos:end="165:19">readonly</name></name> <operator pos:start="165:21" pos:end="165:21">=</operator> <name pos:start="165:23" pos:end="165:30">readonly</name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:38"><expr pos:start="167:9" pos:end="167:37"><call pos:start="167:9" pos:end="167:37"><name pos:start="167:9" pos:end="167:23">flatview_insert</name><argument_list pos:start="167:24" pos:end="167:37">(<argument pos:start="167:25" pos:end="167:28"><expr pos:start="167:25" pos:end="167:28"><name pos:start="167:25" pos:end="167:28">view</name></expr></argument>, <argument pos:start="167:31" pos:end="167:31"><expr pos:start="167:31" pos:end="167:31"><name pos:start="167:31" pos:end="167:31">i</name></expr></argument>, <argument pos:start="167:34" pos:end="167:36"><expr pos:start="167:34" pos:end="167:36"><operator pos:start="167:34" pos:end="167:34">&amp;</operator><name pos:start="167:35" pos:end="167:36">fr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
