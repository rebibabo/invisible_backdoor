<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15957.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">pxb_register_bus</name><parameter_list pos:start="1:29" pos:end="1:75">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:38">PCIDevice</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">dev</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:60"><decl pos:start="1:46" pos:end="1:60"><type pos:start="1:46" pos:end="1:60"><name pos:start="1:46" pos:end="1:51">PCIBus</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:60">pxb_bus</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:67">Error</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier><modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:74">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:58">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">PCIBus</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">bus</name> <init pos:start="5:17" pos:end="5:26">= <expr pos:start="5:19" pos:end="5:26"><name pos:start="5:19" pos:end="5:26"><name pos:start="5:19" pos:end="5:21">dev</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:26">bus</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">pxb_bus_num</name> <init pos:start="7:21" pos:end="7:42">= <expr pos:start="7:23" pos:end="7:42"><call pos:start="7:23" pos:end="7:42"><name pos:start="7:23" pos:end="7:33">pci_bus_num</name><argument_list pos:start="7:34" pos:end="7:42">(<argument pos:start="7:35" pos:end="7:41"><expr pos:start="7:35" pos:end="7:41"><name pos:start="7:35" pos:end="7:41">pxb_bus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:11">bus</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:23">parent_dev</name></name></expr>)</condition> <block pos:start="11:26" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:73"><expr pos:start="13:9" pos:end="13:72"><call pos:start="13:9" pos:end="13:72"><name pos:start="13:9" pos:end="13:18">error_setg</name><argument_list pos:start="13:19" pos:end="13:72">(<argument pos:start="13:20" pos:end="13:23"><expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">errp</name></expr></argument>, <argument pos:start="13:26" pos:end="13:71"><expr pos:start="13:26" pos:end="13:71"><literal type="string" pos:start="13:26" pos:end="13:71">"PXB devices can be attached only to root bus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:17">QLIST_FOREACH</name><argument_list pos:start="21:18" pos:end="21:44">(<argument pos:start="21:19" pos:end="21:21">bus</argument>, <argument pos:start="21:24" pos:end="21:34">&amp;bus-&gt;child</argument>, <argument pos:start="21:37" pos:end="21:43">sibling</argument>)</argument_list></macro> <block pos:start="21:46" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:9">

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:44">(<expr pos:start="23:13" pos:end="23:43"><call pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:23">pci_bus_num</name><argument_list pos:start="23:24" pos:end="23:28">(<argument pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:27">bus</name></expr></argument>)</argument_list></call> <operator pos:start="23:30" pos:end="23:31">==</operator> <name pos:start="23:33" pos:end="23:43">pxb_bus_num</name></expr>)</condition> <block pos:start="23:46" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:19">

            <expr_stmt pos:start="25:13" pos:end="25:70"><expr pos:start="25:13" pos:end="25:69"><call pos:start="25:13" pos:end="25:69"><name pos:start="25:13" pos:end="25:22">error_setg</name><argument_list pos:start="25:23" pos:end="25:69">(<argument pos:start="25:24" pos:end="25:27"><expr pos:start="25:24" pos:end="25:27"><name pos:start="25:24" pos:end="25:27">errp</name></expr></argument>, <argument pos:start="25:30" pos:end="25:55"><expr pos:start="25:30" pos:end="25:55"><literal type="string" pos:start="25:30" pos:end="25:55">"Bus %d is already in use"</literal></expr></argument>, <argument pos:start="25:58" pos:end="25:68"><expr pos:start="25:58" pos:end="25:68"><name pos:start="25:58" pos:end="25:68">pxb_bus_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="33:5" pos:end="33:58"><expr pos:start="33:5" pos:end="33:57"><call pos:start="33:5" pos:end="33:57"><name pos:start="33:5" pos:end="33:21">QLIST_INSERT_HEAD</name><argument_list pos:start="33:22" pos:end="33:57">(<argument pos:start="33:23" pos:end="33:38"><expr pos:start="33:23" pos:end="33:38"><operator pos:start="33:23" pos:end="33:23">&amp;</operator><name pos:start="33:24" pos:end="33:38"><name pos:start="33:24" pos:end="33:26">dev</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:31">bus</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:38">child</name></name></expr></argument>, <argument pos:start="33:41" pos:end="33:47"><expr pos:start="33:41" pos:end="33:47"><name pos:start="33:41" pos:end="33:47">pxb_bus</name></expr></argument>, <argument pos:start="33:50" pos:end="33:56"><expr pos:start="33:50" pos:end="33:56"><name pos:start="33:50" pos:end="33:56">sibling</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
