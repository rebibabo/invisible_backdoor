<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6586.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">ra144_encode_frame</name><parameter_list pos:start="1:30" pos:end="3:72">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:68"><decl pos:start="1:54" pos:end="1:68"><type pos:start="1:54" pos:end="1:68"><name pos:start="1:54" pos:end="1:61">AVPacket</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:68">avpkt</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:50"><decl pos:start="3:31" pos:end="3:50"><type pos:start="3:31" pos:end="3:50"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:43">AVFrame</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:50">frame</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:71"><decl pos:start="3:53" pos:end="3:71"><type pos:start="3:53" pos:end="3:71"><name pos:start="3:53" pos:end="3:55">int</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:71">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="225:1">{<block_content pos:start="7:5" pos:end="223:13">

    <decl_stmt pos:start="7:5" pos:end="7:80"><decl pos:start="7:5" pos:end="7:79"><type pos:start="7:5" pos:end="7:24"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:24">uint8_t</name></type> <name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:30">sizes</name><index pos:start="7:31" pos:end="7:41">[<expr pos:start="7:32" pos:end="7:40"><name pos:start="7:32" pos:end="7:40">LPC_ORDER</name></expr>]</index></name> <init pos:start="7:43" pos:end="7:79">= <expr pos:start="7:45" pos:end="7:79"><block pos:start="7:45" pos:end="7:79">{<expr pos:start="7:46" pos:end="7:47"><literal type="number" pos:start="7:46" pos:end="7:47">64</literal></expr>, <expr pos:start="7:50" pos:end="7:51"><literal type="number" pos:start="7:50" pos:end="7:51">32</literal></expr>, <expr pos:start="7:54" pos:end="7:55"><literal type="number" pos:start="7:54" pos:end="7:55">32</literal></expr>, <expr pos:start="7:58" pos:end="7:59"><literal type="number" pos:start="7:58" pos:end="7:59">16</literal></expr>, <expr pos:start="7:62" pos:end="7:63"><literal type="number" pos:start="7:62" pos:end="7:63">16</literal></expr>, <expr pos:start="7:66" pos:end="7:66"><literal type="number" pos:start="7:66" pos:end="7:66">8</literal></expr>, <expr pos:start="7:69" pos:end="7:69"><literal type="number" pos:start="7:69" pos:end="7:69">8</literal></expr>, <expr pos:start="7:72" pos:end="7:72"><literal type="number" pos:start="7:72" pos:end="7:72">8</literal></expr>, <expr pos:start="7:75" pos:end="7:75"><literal type="number" pos:start="7:75" pos:end="7:75">8</literal></expr>, <expr pos:start="7:78" pos:end="7:78"><literal type="number" pos:start="7:78" pos:end="7:78">4</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:79"><decl pos:start="9:5" pos:end="9:78"><type pos:start="9:5" pos:end="9:24"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <specifier pos:start="9:12" pos:end="9:16">const</specifier> <name pos:start="9:18" pos:end="9:24">uint8_t</name></type> <name pos:start="9:26" pos:end="9:45"><name pos:start="9:26" pos:end="9:34">bit_sizes</name><index pos:start="9:35" pos:end="9:45">[<expr pos:start="9:36" pos:end="9:44"><name pos:start="9:36" pos:end="9:44">LPC_ORDER</name></expr>]</index></name> <init pos:start="9:47" pos:end="9:78">= <expr pos:start="9:49" pos:end="9:78"><block pos:start="9:49" pos:end="9:78">{<expr pos:start="9:50" pos:end="9:50"><literal type="number" pos:start="9:50" pos:end="9:50">6</literal></expr>, <expr pos:start="9:53" pos:end="9:53"><literal type="number" pos:start="9:53" pos:end="9:53">5</literal></expr>, <expr pos:start="9:56" pos:end="9:56"><literal type="number" pos:start="9:56" pos:end="9:56">5</literal></expr>, <expr pos:start="9:59" pos:end="9:59"><literal type="number" pos:start="9:59" pos:end="9:59">4</literal></expr>, <expr pos:start="9:62" pos:end="9:62"><literal type="number" pos:start="9:62" pos:end="9:62">4</literal></expr>, <expr pos:start="9:65" pos:end="9:65"><literal type="number" pos:start="9:65" pos:end="9:65">3</literal></expr>, <expr pos:start="9:68" pos:end="9:68"><literal type="number" pos:start="9:68" pos:end="9:68">3</literal></expr>, <expr pos:start="9:71" pos:end="9:71"><literal type="number" pos:start="9:71" pos:end="9:71">3</literal></expr>, <expr pos:start="9:74" pos:end="9:74"><literal type="number" pos:start="9:74" pos:end="9:74">3</literal></expr>, <expr pos:start="9:77" pos:end="9:77"><literal type="number" pos:start="9:77" pos:end="9:77">2</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">RA144Context</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:23">ractx</name> <init pos:start="11:25" pos:end="11:42">= <expr pos:start="11:27" pos:end="11:42"><name pos:start="11:27" pos:end="11:42"><name pos:start="11:27" pos:end="11:31">avctx</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">PutBitContext</name></type> <name pos:start="13:19" pos:end="13:20">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:42"><decl pos:start="15:5" pos:end="15:41"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int32_t</name></type> <name pos:start="15:13" pos:end="15:41"><name pos:start="15:13" pos:end="15:20">lpc_data</name><index pos:start="15:21" pos:end="15:41">[<expr pos:start="15:22" pos:end="15:40"><name pos:start="15:22" pos:end="15:28">NBLOCKS</name> <operator pos:start="15:30" pos:end="15:30">*</operator> <name pos:start="15:32" pos:end="15:40">BLOCKSIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:48"><decl pos:start="17:5" pos:end="17:47"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int32_t</name></type> <name pos:start="17:13" pos:end="17:47"><name pos:start="17:13" pos:end="17:21">lpc_coefs</name><index pos:start="17:22" pos:end="17:32">[<expr pos:start="17:23" pos:end="17:31"><name pos:start="17:23" pos:end="17:31">LPC_ORDER</name></expr>]</index><index pos:start="17:33" pos:end="17:47">[<expr pos:start="17:34" pos:end="17:46"><name pos:start="17:34" pos:end="17:46">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:13">shift</name><index pos:start="19:14" pos:end="19:24">[<expr pos:start="19:15" pos:end="19:23"><name pos:start="19:15" pos:end="19:23">LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:44"><decl pos:start="21:5" pos:end="21:43"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int16_t</name></type> <name pos:start="21:13" pos:end="21:43"><name pos:start="21:13" pos:end="21:23">block_coefs</name><index pos:start="21:24" pos:end="21:32">[<expr pos:start="21:25" pos:end="21:31"><name pos:start="21:25" pos:end="21:31">NBLOCKS</name></expr>]</index><index pos:start="21:33" pos:end="21:43">[<expr pos:start="21:34" pos:end="21:42"><name pos:start="21:34" pos:end="21:42">LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:27"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:16">lpc_refl</name><index pos:start="23:17" pos:end="23:27">[<expr pos:start="23:18" pos:end="23:26"><name pos:start="23:18" pos:end="23:26">LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>    <comment type="block" format="doxygen" pos:start="23:33" pos:end="23:76">/**&lt; reflection coefficients of the frame */</comment>

    <decl_stmt pos:start="25:5" pos:end="25:35"><decl pos:start="25:5" pos:end="25:34"><type pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:12">unsigned</name> <name pos:start="25:14" pos:end="25:16">int</name></type> <name pos:start="25:18" pos:end="25:34"><name pos:start="25:18" pos:end="25:25">refl_rms</name><index pos:start="25:26" pos:end="25:34">[<expr pos:start="25:27" pos:end="25:33"><name pos:start="25:27" pos:end="25:33">NBLOCKS</name></expr>]</index></name></decl>;</decl_stmt> <comment type="block" format="doxygen" pos:start="25:37" pos:end="25:78">/**&lt; RMS of the reflection coefficients */</comment>

    <decl_stmt pos:start="27:5" pos:end="27:76"><decl pos:start="27:5" pos:end="27:75"><type pos:start="27:5" pos:end="27:19"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:17">int16_t</name> <modifier pos:start="27:19" pos:end="27:19">*</modifier></type><name pos:start="27:20" pos:end="27:26">samples</name> <init pos:start="27:28" pos:end="27:75">= <expr pos:start="27:30" pos:end="27:75"><ternary pos:start="27:30" pos:end="27:75"><condition pos:start="27:30" pos:end="27:36"><expr pos:start="27:30" pos:end="27:34"><name pos:start="27:30" pos:end="27:34">frame</name></expr> ?</condition><then pos:start="27:38" pos:end="27:68"> <expr pos:start="27:38" pos:end="27:68"><operator pos:start="27:38" pos:end="27:38">(</operator><specifier pos:start="27:39" pos:end="27:43">const</specifier> <name pos:start="27:45" pos:end="27:51">int16_t</name> <operator pos:start="27:53" pos:end="27:53">*</operator><operator pos:start="27:54" pos:end="27:54">)</operator><name pos:start="27:55" pos:end="27:68"><name pos:start="27:55" pos:end="27:59">frame</name><operator pos:start="27:60" pos:end="27:61">-&gt;</operator><name pos:start="27:62" pos:end="27:65">data</name><index pos:start="27:66" pos:end="27:68">[<expr pos:start="27:67" pos:end="27:67"><literal type="number" pos:start="27:67" pos:end="27:67">0</literal></expr>]</index></name></expr> </then><else pos:start="27:70" pos:end="27:75">: <expr pos:start="27:72" pos:end="27:75"><name pos:start="27:72" pos:end="27:75">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:19"><decl pos:start="29:5" pos:end="29:18"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:14">energy</name> <init pos:start="29:16" pos:end="29:18">= <expr pos:start="29:18" pos:end="29:18"><literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:20"><decl pos:start="31:5" pos:end="31:9"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:9">i</name></decl>, <decl pos:start="31:12" pos:end="31:14"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:12" pos:end="31:14">idx</name></decl>, <decl pos:start="31:17" pos:end="31:19"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:17" pos:end="31:19">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="37:17"><if pos:start="35:5" pos:end="37:17">if <condition pos:start="35:8" pos:end="35:26">(<expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:13">ractx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:25">last_frame</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:17"><block_content pos:start="37:9" pos:end="37:17">

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="43:19"><if pos:start="41:5" pos:end="43:19">if <condition pos:start="41:8" pos:end="41:58">(<expr pos:start="41:9" pos:end="41:57"><operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:12">ret</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:56"><name pos:start="41:16" pos:end="41:31">ff_alloc_packet2</name><argument_list pos:start="41:32" pos:end="41:56">(<argument pos:start="41:33" pos:end="41:37"><expr pos:start="41:33" pos:end="41:37"><name pos:start="41:33" pos:end="41:37">avctx</name></expr></argument>, <argument pos:start="41:40" pos:end="41:44"><expr pos:start="41:40" pos:end="41:44"><name pos:start="41:40" pos:end="41:44">avpkt</name></expr></argument>, <argument pos:start="41:47" pos:end="41:55"><expr pos:start="41:47" pos:end="41:55"><name pos:start="41:47" pos:end="41:55">FRAMESIZE</name></expr></argument>)</argument_list></call><operator pos:start="41:57" pos:end="41:57">)</operator></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:19"><block_content pos:start="43:9" pos:end="43:19">

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" format="doxygen" pos:start="47:5" pos:end="59:7">/**

     * Since the LPC coefficients are calculated on a frame centered over the

     * fourth subframe, to encode a given frame, data from the next frame is

     * needed. In each call to this function, the previous frame (whose data are

     * saved in the encoder context) is encoded, and data from the current frame

     * are saved in the encoder context to be used in the next function call.

     */</comment>

    <for pos:start="61:5" pos:end="67:5">for <control pos:start="61:9" pos:end="61:57">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">0</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:52"><expr pos:start="61:17" pos:end="61:51"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <operator pos:start="61:21" pos:end="61:21">(</operator><literal type="number" pos:start="61:22" pos:end="61:22">2</literal> <operator pos:start="61:24" pos:end="61:24">*</operator> <name pos:start="61:26" pos:end="61:34">BLOCKSIZE</name> <operator pos:start="61:36" pos:end="61:36">+</operator> <name pos:start="61:38" pos:end="61:46">BLOCKSIZE</name> <operator pos:start="61:48" pos:end="61:48">/</operator> <literal type="number" pos:start="61:50" pos:end="61:50">2</literal><operator pos:start="61:51" pos:end="61:51">)</operator></expr>;</condition> <incr pos:start="61:54" pos:end="61:56"><expr pos:start="61:54" pos:end="61:56"><name pos:start="61:54" pos:end="61:54">i</name><operator pos:start="61:55" pos:end="61:56">++</operator></expr></incr>)</control> <block pos:start="61:59" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:51">

        <expr_stmt pos:start="63:9" pos:end="63:71"><expr pos:start="63:9" pos:end="63:70"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:16">lpc_data</name><index pos:start="63:17" pos:end="63:19">[<expr pos:start="63:18" pos:end="63:18"><name pos:start="63:18" pos:end="63:18">i</name></expr>]</index></name> <operator pos:start="63:21" pos:end="63:21">=</operator> <name pos:start="63:23" pos:end="63:70"><name pos:start="63:23" pos:end="63:27">ractx</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:39">curr_block</name><index pos:start="63:40" pos:end="63:70">[<expr pos:start="63:41" pos:end="63:69"><name pos:start="63:41" pos:end="63:49">BLOCKSIZE</name> <operator pos:start="63:51" pos:end="63:51">+</operator> <name pos:start="63:53" pos:end="63:61">BLOCKSIZE</name> <operator pos:start="63:63" pos:end="63:63">/</operator> <literal type="number" pos:start="63:65" pos:end="63:67">2</literal> <operator pos:start="63:67" pos:end="63:67">+</operator> <name pos:start="63:69" pos:end="63:69">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:51"><expr pos:start="65:9" pos:end="65:50"><name pos:start="65:9" pos:end="65:14">energy</name> <operator pos:start="65:16" pos:end="65:17">+=</operator> <operator pos:start="65:19" pos:end="65:19">(</operator><name pos:start="65:20" pos:end="65:30"><name pos:start="65:20" pos:end="65:27">lpc_data</name><index pos:start="65:28" pos:end="65:30">[<expr pos:start="65:29" pos:end="65:29"><name pos:start="65:29" pos:end="65:29">i</name></expr>]</index></name> <operator pos:start="65:32" pos:end="65:32">*</operator> <name pos:start="65:34" pos:end="65:44"><name pos:start="65:34" pos:end="65:41">lpc_data</name><index pos:start="65:42" pos:end="65:44">[<expr pos:start="65:43" pos:end="65:43"><name pos:start="65:43" pos:end="65:43">i</name></expr>]</index></name><operator pos:start="65:45" pos:end="65:45">)</operator> <operator pos:start="65:47" pos:end="65:48">&gt;&gt;</operator> <literal type="number" pos:start="65:50" pos:end="65:50">4</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="69:5" pos:end="81:5"><if pos:start="69:5" pos:end="81:5">if <condition pos:start="69:8" pos:end="69:14">(<expr pos:start="69:9" pos:end="69:13"><name pos:start="69:9" pos:end="69:13">frame</name></expr>)</condition> <block pos:start="69:16" pos:end="81:5">{<block_content pos:start="71:9" pos:end="79:9">

        <decl_stmt pos:start="71:9" pos:end="71:14"><decl pos:start="71:9" pos:end="71:13"><type pos:start="71:9" pos:end="71:11"><name pos:start="71:9" pos:end="71:11">int</name></type> <name pos:start="71:13" pos:end="71:13">j</name></decl>;</decl_stmt>

        <for pos:start="73:9" pos:end="79:9">for <control pos:start="73:13" pos:end="73:79">(<init pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:18"><name pos:start="73:14" pos:end="73:14">j</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr>;</init> <condition pos:start="73:21" pos:end="73:69"><expr pos:start="73:21" pos:end="73:68"><name pos:start="73:21" pos:end="73:21">j</name> <operator pos:start="73:23" pos:end="73:23">&lt;</operator> <name pos:start="73:25" pos:end="73:41"><name pos:start="73:25" pos:end="73:29">frame</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:41">nb_samples</name></name> <operator pos:start="73:43" pos:end="73:44">&amp;&amp;</operator> <name pos:start="73:46" pos:end="73:46">i</name> <operator pos:start="73:48" pos:end="73:48">&lt;</operator> <name pos:start="73:50" pos:end="73:56">NBLOCKS</name> <operator pos:start="73:58" pos:end="73:58">*</operator> <name pos:start="73:60" pos:end="73:68">BLOCKSIZE</name></expr>;</condition> <incr pos:start="73:71" pos:end="73:78"><expr pos:start="73:71" pos:end="73:73"><name pos:start="73:71" pos:end="73:71">i</name><operator pos:start="73:72" pos:end="73:73">++</operator></expr><operator pos:start="73:74" pos:end="73:74">,</operator> <expr pos:start="73:76" pos:end="73:78"><name pos:start="73:76" pos:end="73:76">j</name><operator pos:start="73:77" pos:end="73:78">++</operator></expr></incr>)</control> <block pos:start="73:81" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:55">

            <expr_stmt pos:start="75:13" pos:end="75:42"><expr pos:start="75:13" pos:end="75:41"><name pos:start="75:13" pos:end="75:23"><name pos:start="75:13" pos:end="75:20">lpc_data</name><index pos:start="75:21" pos:end="75:23">[<expr pos:start="75:22" pos:end="75:22"><name pos:start="75:22" pos:end="75:22">i</name></expr>]</index></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <name pos:start="75:27" pos:end="75:36"><name pos:start="75:27" pos:end="75:33">samples</name><index pos:start="75:34" pos:end="75:36">[<expr pos:start="75:35" pos:end="75:35"><name pos:start="75:35" pos:end="75:35">j</name></expr>]</index></name> <operator pos:start="75:38" pos:end="75:39">&gt;&gt;</operator> <literal type="number" pos:start="75:41" pos:end="75:41">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:55"><expr pos:start="77:13" pos:end="77:54"><name pos:start="77:13" pos:end="77:18">energy</name> <operator pos:start="77:20" pos:end="77:21">+=</operator> <operator pos:start="77:23" pos:end="77:23">(</operator><name pos:start="77:24" pos:end="77:34"><name pos:start="77:24" pos:end="77:31">lpc_data</name><index pos:start="77:32" pos:end="77:34">[<expr pos:start="77:33" pos:end="77:33"><name pos:start="77:33" pos:end="77:33">i</name></expr>]</index></name> <operator pos:start="77:36" pos:end="77:36">*</operator> <name pos:start="77:38" pos:end="77:48"><name pos:start="77:38" pos:end="77:45">lpc_data</name><index pos:start="77:46" pos:end="77:48">[<expr pos:start="77:47" pos:end="77:47"><name pos:start="77:47" pos:end="77:47">i</name></expr>]</index></name><operator pos:start="77:49" pos:end="77:49">)</operator> <operator pos:start="77:51" pos:end="77:52">&gt;&gt;</operator> <literal type="number" pos:start="77:54" pos:end="77:54">4</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="83:5" pos:end="85:79"><if pos:start="83:5" pos:end="85:79">if <condition pos:start="83:8" pos:end="83:32">(<expr pos:start="83:9" pos:end="83:31"><name pos:start="83:9" pos:end="83:9">i</name> <operator pos:start="83:11" pos:end="83:11">&lt;</operator> <name pos:start="83:13" pos:end="83:19">NBLOCKS</name> <operator pos:start="83:21" pos:end="83:21">*</operator> <name pos:start="83:23" pos:end="83:31">BLOCKSIZE</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:79"><block_content pos:start="85:9" pos:end="85:79">

        <expr_stmt pos:start="85:9" pos:end="85:79"><expr pos:start="85:9" pos:end="85:78"><call pos:start="85:9" pos:end="85:78"><name pos:start="85:9" pos:end="85:14">memset</name><argument_list pos:start="85:15" pos:end="85:78">(<argument pos:start="85:16" pos:end="85:27"><expr pos:start="85:16" pos:end="85:27"><operator pos:start="85:16" pos:end="85:16">&amp;</operator><name pos:start="85:17" pos:end="85:27"><name pos:start="85:17" pos:end="85:24">lpc_data</name><index pos:start="85:25" pos:end="85:27">[<expr pos:start="85:26" pos:end="85:26"><name pos:start="85:26" pos:end="85:26">i</name></expr>]</index></name></expr></argument>, <argument pos:start="85:30" pos:end="85:30"><expr pos:start="85:30" pos:end="85:30"><literal type="number" pos:start="85:30" pos:end="85:30">0</literal></expr></argument>, <argument pos:start="85:33" pos:end="85:77"><expr pos:start="85:33" pos:end="85:77"><operator pos:start="85:33" pos:end="85:33">(</operator><name pos:start="85:34" pos:end="85:40">NBLOCKS</name> <operator pos:start="85:42" pos:end="85:42">*</operator> <name pos:start="85:44" pos:end="85:52">BLOCKSIZE</name> <operator pos:start="85:54" pos:end="85:54">-</operator> <name pos:start="85:56" pos:end="85:56">i</name><operator pos:start="85:57" pos:end="85:57">)</operator> <operator pos:start="85:59" pos:end="85:59">*</operator> <sizeof pos:start="85:61" pos:end="85:77">sizeof<argument_list pos:start="85:67" pos:end="85:77">(<argument pos:start="85:68" pos:end="85:76"><expr pos:start="85:68" pos:end="85:76"><operator pos:start="85:68" pos:end="85:68">*</operator><name pos:start="85:69" pos:end="85:76">lpc_data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="87:5" pos:end="89:41"><expr pos:start="87:5" pos:end="89:40"><name pos:start="87:5" pos:end="87:10">energy</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <name pos:start="87:14" pos:end="89:40"><name pos:start="87:14" pos:end="87:26">ff_energy_tab</name><index pos:start="87:27" pos:end="89:40">[<expr pos:start="87:28" pos:end="89:39"><call pos:start="87:28" pos:end="89:39"><name pos:start="87:28" pos:end="87:35">quantize</name><argument_list pos:start="87:36" pos:end="89:39">(<argument pos:start="87:37" pos:end="87:64"><expr pos:start="87:37" pos:end="87:64"><call pos:start="87:37" pos:end="87:58"><name pos:start="87:37" pos:end="87:45">ff_t_sqrt</name><argument_list pos:start="87:46" pos:end="87:58">(<argument pos:start="87:47" pos:end="87:57"><expr pos:start="87:47" pos:end="87:57"><name pos:start="87:47" pos:end="87:52">energy</name> <operator pos:start="87:54" pos:end="87:55">&gt;&gt;</operator> <literal type="number" pos:start="87:57" pos:end="87:57">5</literal></expr></argument>)</argument_list></call> <operator pos:start="87:60" pos:end="87:61">&gt;&gt;</operator> <literal type="number" pos:start="87:63" pos:end="87:64">10</literal></expr></argument>, <argument pos:start="87:67" pos:end="87:79"><expr pos:start="87:67" pos:end="87:79"><name pos:start="87:67" pos:end="87:79">ff_energy_tab</name></expr></argument>,

                                    <argument pos:start="89:37" pos:end="89:38"><expr pos:start="89:37" pos:end="89:38"><literal type="number" pos:start="89:37" pos:end="89:38">32</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="97:50"><expr pos:start="93:5" pos:end="97:49"><call pos:start="93:5" pos:end="97:49"><name pos:start="93:5" pos:end="93:21">ff_lpc_calc_coefs</name><argument_list pos:start="93:22" pos:end="97:49">(<argument pos:start="93:23" pos:end="93:37"><expr pos:start="93:23" pos:end="93:37"><operator pos:start="93:23" pos:end="93:23">&amp;</operator><name pos:start="93:24" pos:end="93:37"><name pos:start="93:24" pos:end="93:28">ractx</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:37">lpc_ctx</name></name></expr></argument>, <argument pos:start="93:40" pos:end="93:47"><expr pos:start="93:40" pos:end="93:47"><name pos:start="93:40" pos:end="93:47">lpc_data</name></expr></argument>, <argument pos:start="93:50" pos:end="93:68"><expr pos:start="93:50" pos:end="93:68"><name pos:start="93:50" pos:end="93:56">NBLOCKS</name> <operator pos:start="93:58" pos:end="93:58">*</operator> <name pos:start="93:60" pos:end="93:68">BLOCKSIZE</name></expr></argument>, <argument pos:start="93:71" pos:end="93:79"><expr pos:start="93:71" pos:end="93:79"><name pos:start="93:71" pos:end="93:79">LPC_ORDER</name></expr></argument>,

                      <argument pos:start="95:23" pos:end="95:31"><expr pos:start="95:23" pos:end="95:31"><name pos:start="95:23" pos:end="95:31">LPC_ORDER</name></expr></argument>, <argument pos:start="95:34" pos:end="95:35"><expr pos:start="95:34" pos:end="95:35"><literal type="number" pos:start="95:34" pos:end="95:35">16</literal></expr></argument>, <argument pos:start="95:38" pos:end="95:46"><expr pos:start="95:38" pos:end="95:46"><name pos:start="95:38" pos:end="95:46">lpc_coefs</name></expr></argument>, <argument pos:start="95:49" pos:end="95:53"><expr pos:start="95:49" pos:end="95:53"><name pos:start="95:49" pos:end="95:53">shift</name></expr></argument>, <argument pos:start="95:56" pos:end="95:75"><expr pos:start="95:56" pos:end="95:75"><name pos:start="95:56" pos:end="95:75">FF_LPC_TYPE_LEVINSON</name></expr></argument>,

                      <argument pos:start="97:23" pos:end="97:23"><expr pos:start="97:23" pos:end="97:23"><literal type="number" pos:start="97:23" pos:end="97:23">0</literal></expr></argument>, <argument pos:start="97:26" pos:end="97:41"><expr pos:start="97:26" pos:end="97:41"><name pos:start="97:26" pos:end="97:41">ORDER_METHOD_EST</name></expr></argument>, <argument pos:start="97:44" pos:end="97:45"><expr pos:start="97:44" pos:end="97:45"><literal type="number" pos:start="97:44" pos:end="97:45">12</literal></expr></argument>, <argument pos:start="97:48" pos:end="97:48"><expr pos:start="97:48" pos:end="97:48"><literal type="number" pos:start="97:48" pos:end="97:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="99:5" pos:end="103:69">for <control pos:start="99:9" pos:end="99:35">(<init pos:start="99:10" pos:end="99:15"><expr pos:start="99:10" pos:end="99:14"><name pos:start="99:10" pos:end="99:10">i</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <literal type="number" pos:start="99:14" pos:end="99:14">0</literal></expr>;</init> <condition pos:start="99:17" pos:end="99:30"><expr pos:start="99:17" pos:end="99:29"><name pos:start="99:17" pos:end="99:17">i</name> <operator pos:start="99:19" pos:end="99:19">&lt;</operator> <name pos:start="99:21" pos:end="99:29">LPC_ORDER</name></expr>;</condition> <incr pos:start="99:32" pos:end="99:34"><expr pos:start="99:32" pos:end="99:34"><name pos:start="99:32" pos:end="99:32">i</name><operator pos:start="99:33" pos:end="99:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="101:9" pos:end="103:69"><block_content pos:start="101:9" pos:end="103:69">

        <expr_stmt pos:start="101:9" pos:end="103:69"><expr pos:start="101:9" pos:end="103:68"><name pos:start="101:9" pos:end="101:35"><name pos:start="101:9" pos:end="101:19">block_coefs</name><index pos:start="101:20" pos:end="101:32">[<expr pos:start="101:21" pos:end="101:31"><name pos:start="101:21" pos:end="101:27">NBLOCKS</name> <operator pos:start="101:29" pos:end="101:29">-</operator> <literal type="number" pos:start="101:31" pos:end="101:31">1</literal></expr>]</index><index pos:start="101:33" pos:end="101:35">[<expr pos:start="101:34" pos:end="101:34"><name pos:start="101:34" pos:end="101:34">i</name></expr>]</index></name> <operator pos:start="101:37" pos:end="101:37">=</operator> <operator pos:start="101:39" pos:end="101:39">-</operator><operator pos:start="101:40" pos:end="101:40">(</operator><name pos:start="101:41" pos:end="101:67"><name pos:start="101:41" pos:end="101:49">lpc_coefs</name><index pos:start="101:50" pos:end="101:64">[<expr pos:start="101:51" pos:end="101:63"><name pos:start="101:51" pos:end="101:59">LPC_ORDER</name> <operator pos:start="101:61" pos:end="101:61">-</operator> <literal type="number" pos:start="101:63" pos:end="101:63">1</literal></expr>]</index><index pos:start="101:65" pos:end="101:67">[<expr pos:start="101:66" pos:end="101:66"><name pos:start="101:66" pos:end="101:66">i</name></expr>]</index></name> <operator pos:start="101:69" pos:end="101:70">&lt;&lt;</operator>

                                        <operator pos:start="103:41" pos:end="103:41">(</operator><literal type="number" pos:start="103:42" pos:end="103:45">12</literal> <operator pos:start="103:45" pos:end="103:45">-</operator> <name pos:start="103:47" pos:end="103:66"><name pos:start="103:47" pos:end="103:51">shift</name><index pos:start="103:52" pos:end="103:66">[<expr pos:start="103:53" pos:end="103:65"><name pos:start="103:53" pos:end="103:61">LPC_ORDER</name> <operator pos:start="103:63" pos:end="103:63">-</operator> <literal type="number" pos:start="103:65" pos:end="103:65">1</literal></expr>]</index></name><operator pos:start="103:67" pos:end="103:67">)</operator><operator pos:start="103:68" pos:end="103:68">)</operator></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" format="doxygen" pos:start="107:5" pos:end="113:7">/**

     * TODO: apply perceptual weighting of the input speech through bandwidth

     * expansion of the LPC filter.

     */</comment>



    <if_stmt pos:start="117:5" pos:end="135:5"><if pos:start="117:5" pos:end="135:5">if <condition pos:start="117:8" pos:end="117:64">(<expr pos:start="117:9" pos:end="117:63"><call pos:start="117:9" pos:end="117:63"><name pos:start="117:9" pos:end="117:20">ff_eval_refl</name><argument_list pos:start="117:21" pos:end="117:63">(<argument pos:start="117:22" pos:end="117:29"><expr pos:start="117:22" pos:end="117:29"><name pos:start="117:22" pos:end="117:29">lpc_refl</name></expr></argument>, <argument pos:start="117:32" pos:end="117:55"><expr pos:start="117:32" pos:end="117:55"><name pos:start="117:32" pos:end="117:55"><name pos:start="117:32" pos:end="117:42">block_coefs</name><index pos:start="117:43" pos:end="117:55">[<expr pos:start="117:44" pos:end="117:54"><name pos:start="117:44" pos:end="117:50">NBLOCKS</name> <operator pos:start="117:52" pos:end="117:52">-</operator> <literal type="number" pos:start="117:54" pos:end="117:54">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="117:58" pos:end="117:62"><expr pos:start="117:58" pos:end="117:62"><name pos:start="117:58" pos:end="117:62">avctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:66" pos:end="135:5">{<block_content pos:start="125:9" pos:end="133:9">

        <comment type="block" format="doxygen" pos:start="119:9" pos:end="123:11">/**

         * The filter is unstable: use the coefficients of the previous frame.

         */</comment>

        <expr_stmt pos:start="125:9" pos:end="125:70"><expr pos:start="125:9" pos:end="125:69"><call pos:start="125:9" pos:end="125:69"><name pos:start="125:9" pos:end="125:23">ff_int_to_int16</name><argument_list pos:start="125:24" pos:end="125:69">(<argument pos:start="125:25" pos:end="125:48"><expr pos:start="125:25" pos:end="125:48"><name pos:start="125:25" pos:end="125:48"><name pos:start="125:25" pos:end="125:35">block_coefs</name><index pos:start="125:36" pos:end="125:48">[<expr pos:start="125:37" pos:end="125:47"><name pos:start="125:37" pos:end="125:43">NBLOCKS</name> <operator pos:start="125:45" pos:end="125:45">-</operator> <literal type="number" pos:start="125:47" pos:end="125:47">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="125:51" pos:end="125:68"><expr pos:start="125:51" pos:end="125:68"><name pos:start="125:51" pos:end="125:68"><name pos:start="125:51" pos:end="125:55">ractx</name><operator pos:start="125:56" pos:end="125:57">-&gt;</operator><name pos:start="125:58" pos:end="125:65">lpc_coef</name><index pos:start="125:66" pos:end="125:68">[<expr pos:start="125:67" pos:end="125:67"><literal type="number" pos:start="125:67" pos:end="125:67">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="133:9"><if pos:start="127:9" pos:end="133:9">if <condition pos:start="127:12" pos:end="127:68">(<expr pos:start="127:13" pos:end="127:67"><call pos:start="127:13" pos:end="127:67"><name pos:start="127:13" pos:end="127:24">ff_eval_refl</name><argument_list pos:start="127:25" pos:end="127:67">(<argument pos:start="127:26" pos:end="127:33"><expr pos:start="127:26" pos:end="127:33"><name pos:start="127:26" pos:end="127:33">lpc_refl</name></expr></argument>, <argument pos:start="127:36" pos:end="127:59"><expr pos:start="127:36" pos:end="127:59"><name pos:start="127:36" pos:end="127:59"><name pos:start="127:36" pos:end="127:46">block_coefs</name><index pos:start="127:47" pos:end="127:59">[<expr pos:start="127:48" pos:end="127:58"><name pos:start="127:48" pos:end="127:54">NBLOCKS</name> <operator pos:start="127:56" pos:end="127:56">-</operator> <literal type="number" pos:start="127:58" pos:end="127:58">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="127:62" pos:end="127:66"><expr pos:start="127:62" pos:end="127:66"><name pos:start="127:62" pos:end="127:66">avctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:70" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:50">

            <comment type="block" pos:start="129:13" pos:end="129:78">/* the filter is still unstable. set reflection coeffs to zero. */</comment>

            <expr_stmt pos:start="131:13" pos:end="131:50"><expr pos:start="131:13" pos:end="131:49"><call pos:start="131:13" pos:end="131:49"><name pos:start="131:13" pos:end="131:18">memset</name><argument_list pos:start="131:19" pos:end="131:49">(<argument pos:start="131:20" pos:end="131:27"><expr pos:start="131:20" pos:end="131:27"><name pos:start="131:20" pos:end="131:27">lpc_refl</name></expr></argument>, <argument pos:start="131:30" pos:end="131:30"><expr pos:start="131:30" pos:end="131:30"><literal type="number" pos:start="131:30" pos:end="131:30">0</literal></expr></argument>, <argument pos:start="131:33" pos:end="131:48"><expr pos:start="131:33" pos:end="131:48"><sizeof pos:start="131:33" pos:end="131:48">sizeof<argument_list pos:start="131:39" pos:end="131:48">(<argument pos:start="131:40" pos:end="131:47"><expr pos:start="131:40" pos:end="131:47"><name pos:start="131:40" pos:end="131:47">lpc_refl</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:49"><expr pos:start="137:5" pos:end="137:48"><call pos:start="137:5" pos:end="137:48"><name pos:start="137:5" pos:end="137:17">init_put_bits</name><argument_list pos:start="137:18" pos:end="137:48">(<argument pos:start="137:19" pos:end="137:21"><expr pos:start="137:19" pos:end="137:21"><operator pos:start="137:19" pos:end="137:19">&amp;</operator><name pos:start="137:20" pos:end="137:21">pb</name></expr></argument>, <argument pos:start="137:24" pos:end="137:34"><expr pos:start="137:24" pos:end="137:34"><name pos:start="137:24" pos:end="137:34"><name pos:start="137:24" pos:end="137:28">avpkt</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:34">data</name></name></expr></argument>, <argument pos:start="137:37" pos:end="137:47"><expr pos:start="137:37" pos:end="137:47"><name pos:start="137:37" pos:end="137:47"><name pos:start="137:37" pos:end="137:41">avpkt</name><operator pos:start="137:42" pos:end="137:43">-&gt;</operator><name pos:start="137:44" pos:end="137:47">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="139:5" pos:end="147:5">for <control pos:start="139:9" pos:end="139:35">(<init pos:start="139:10" pos:end="139:15"><expr pos:start="139:10" pos:end="139:14"><name pos:start="139:10" pos:end="139:10">i</name> <operator pos:start="139:12" pos:end="139:12">=</operator> <literal type="number" pos:start="139:14" pos:end="139:14">0</literal></expr>;</init> <condition pos:start="139:17" pos:end="139:30"><expr pos:start="139:17" pos:end="139:29"><name pos:start="139:17" pos:end="139:17">i</name> <operator pos:start="139:19" pos:end="139:19">&lt;</operator> <name pos:start="139:21" pos:end="139:29">LPC_ORDER</name></expr>;</condition> <incr pos:start="139:32" pos:end="139:34"><expr pos:start="139:32" pos:end="139:34"><name pos:start="139:32" pos:end="139:32">i</name><operator pos:start="139:33" pos:end="139:34">++</operator></expr></incr>)</control> <block pos:start="139:37" pos:end="147:5">{<block_content pos:start="141:9" pos:end="145:45">

        <expr_stmt pos:start="141:9" pos:end="141:65"><expr pos:start="141:9" pos:end="141:64"><name pos:start="141:9" pos:end="141:11">idx</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <call pos:start="141:15" pos:end="141:64"><name pos:start="141:15" pos:end="141:22">quantize</name><argument_list pos:start="141:23" pos:end="141:64">(<argument pos:start="141:24" pos:end="141:34"><expr pos:start="141:24" pos:end="141:34"><name pos:start="141:24" pos:end="141:34"><name pos:start="141:24" pos:end="141:31">lpc_refl</name><index pos:start="141:32" pos:end="141:34">[<expr pos:start="141:33" pos:end="141:33"><name pos:start="141:33" pos:end="141:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="141:37" pos:end="141:53"><expr pos:start="141:37" pos:end="141:53"><name pos:start="141:37" pos:end="141:53"><name pos:start="141:37" pos:end="141:50">ff_lpc_refl_cb</name><index pos:start="141:51" pos:end="141:53">[<expr pos:start="141:52" pos:end="141:52"><name pos:start="141:52" pos:end="141:52">i</name></expr>]</index></name></expr></argument>, <argument pos:start="141:56" pos:end="141:63"><expr pos:start="141:56" pos:end="141:63"><name pos:start="141:56" pos:end="141:63"><name pos:start="141:56" pos:end="141:60">sizes</name><index pos:start="141:61" pos:end="141:63">[<expr pos:start="141:62" pos:end="141:62"><name pos:start="141:62" pos:end="141:62">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:41"><expr pos:start="143:9" pos:end="143:40"><call pos:start="143:9" pos:end="143:40"><name pos:start="143:9" pos:end="143:16">put_bits</name><argument_list pos:start="143:17" pos:end="143:40">(<argument pos:start="143:18" pos:end="143:20"><expr pos:start="143:18" pos:end="143:20"><operator pos:start="143:18" pos:end="143:18">&amp;</operator><name pos:start="143:19" pos:end="143:20">pb</name></expr></argument>, <argument pos:start="143:23" pos:end="143:34"><expr pos:start="143:23" pos:end="143:34"><name pos:start="143:23" pos:end="143:34"><name pos:start="143:23" pos:end="143:31">bit_sizes</name><index pos:start="143:32" pos:end="143:34">[<expr pos:start="143:33" pos:end="143:33"><name pos:start="143:33" pos:end="143:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="143:37" pos:end="143:39"><expr pos:start="143:37" pos:end="143:39"><name pos:start="143:37" pos:end="143:39">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:45"><expr pos:start="145:9" pos:end="145:44"><name pos:start="145:9" pos:end="145:19"><name pos:start="145:9" pos:end="145:16">lpc_refl</name><index pos:start="145:17" pos:end="145:19">[<expr pos:start="145:18" pos:end="145:18"><name pos:start="145:18" pos:end="145:18">i</name></expr>]</index></name> <operator pos:start="145:21" pos:end="145:21">=</operator> <name pos:start="145:23" pos:end="145:44"><name pos:start="145:23" pos:end="145:36">ff_lpc_refl_cb</name><index pos:start="145:37" pos:end="145:39">[<expr pos:start="145:38" pos:end="145:38"><name pos:start="145:38" pos:end="145:38">i</name></expr>]</index><index pos:start="145:40" pos:end="145:44">[<expr pos:start="145:41" pos:end="145:43"><name pos:start="145:41" pos:end="145:43">idx</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="149:5" pos:end="149:46"><expr pos:start="149:5" pos:end="149:45"><name pos:start="149:5" pos:end="149:26"><name pos:start="149:5" pos:end="149:9">ractx</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:23">lpc_refl_rms</name><index pos:start="149:24" pos:end="149:26">[<expr pos:start="149:25" pos:end="149:25"><literal type="number" pos:start="149:25" pos:end="149:25">0</literal></expr>]</index></name> <operator pos:start="149:28" pos:end="149:28">=</operator> <call pos:start="149:30" pos:end="149:45"><name pos:start="149:30" pos:end="149:35">ff_rms</name><argument_list pos:start="149:36" pos:end="149:45">(<argument pos:start="149:37" pos:end="149:44"><expr pos:start="149:37" pos:end="149:44"><name pos:start="149:37" pos:end="149:44">lpc_refl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:48"><expr pos:start="151:5" pos:end="151:47"><call pos:start="151:5" pos:end="151:47"><name pos:start="151:5" pos:end="151:17">ff_eval_coefs</name><argument_list pos:start="151:18" pos:end="151:47">(<argument pos:start="151:19" pos:end="151:36"><expr pos:start="151:19" pos:end="151:36"><name pos:start="151:19" pos:end="151:36"><name pos:start="151:19" pos:end="151:23">ractx</name><operator pos:start="151:24" pos:end="151:25">-&gt;</operator><name pos:start="151:26" pos:end="151:33">lpc_coef</name><index pos:start="151:34" pos:end="151:36">[<expr pos:start="151:35" pos:end="151:35"><literal type="number" pos:start="151:35" pos:end="151:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="151:39" pos:end="151:46"><expr pos:start="151:39" pos:end="151:46"><name pos:start="151:39" pos:end="151:46">lpc_refl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:76"><expr pos:start="153:5" pos:end="153:75"><name pos:start="153:5" pos:end="153:15"><name pos:start="153:5" pos:end="153:12">refl_rms</name><index pos:start="153:13" pos:end="153:15">[<expr pos:start="153:14" pos:end="153:14"><literal type="number" pos:start="153:14" pos:end="153:14">0</literal></expr>]</index></name> <operator pos:start="153:17" pos:end="153:17">=</operator> <call pos:start="153:19" pos:end="153:75"><name pos:start="153:19" pos:end="153:27">ff_interp</name><argument_list pos:start="153:28" pos:end="153:75">(<argument pos:start="153:29" pos:end="153:33"><expr pos:start="153:29" pos:end="153:33"><name pos:start="153:29" pos:end="153:33">ractx</name></expr></argument>, <argument pos:start="153:36" pos:end="153:49"><expr pos:start="153:36" pos:end="153:49"><name pos:start="153:36" pos:end="153:49"><name pos:start="153:36" pos:end="153:46">block_coefs</name><index pos:start="153:47" pos:end="153:49">[<expr pos:start="153:48" pos:end="153:48"><literal type="number" pos:start="153:48" pos:end="153:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="153:52" pos:end="153:52"><expr pos:start="153:52" pos:end="153:52"><literal type="number" pos:start="153:52" pos:end="153:52">1</literal></expr></argument>, <argument pos:start="153:55" pos:end="153:55"><expr pos:start="153:55" pos:end="153:55"><literal type="number" pos:start="153:55" pos:end="153:55">1</literal></expr></argument>, <argument pos:start="153:58" pos:end="153:74"><expr pos:start="153:58" pos:end="153:74"><name pos:start="153:58" pos:end="153:74"><name pos:start="153:58" pos:end="153:62">ractx</name><operator pos:start="153:63" pos:end="153:64">-&gt;</operator><name pos:start="153:65" pos:end="153:74">old_energy</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="159:73"><expr pos:start="155:5" pos:end="159:72"><name pos:start="155:5" pos:end="155:15"><name pos:start="155:5" pos:end="155:12">refl_rms</name><index pos:start="155:13" pos:end="155:15">[<expr pos:start="155:14" pos:end="155:14"><literal type="number" pos:start="155:14" pos:end="155:14">1</literal></expr>]</index></name> <operator pos:start="155:17" pos:end="155:17">=</operator> <call pos:start="155:19" pos:end="159:72"><name pos:start="155:19" pos:end="155:27">ff_interp</name><argument_list pos:start="155:28" pos:end="159:72">(<argument pos:start="155:29" pos:end="155:33"><expr pos:start="155:29" pos:end="155:33"><name pos:start="155:29" pos:end="155:33">ractx</name></expr></argument>, <argument pos:start="155:36" pos:end="155:49"><expr pos:start="155:36" pos:end="155:49"><name pos:start="155:36" pos:end="155:49"><name pos:start="155:36" pos:end="155:46">block_coefs</name><index pos:start="155:47" pos:end="155:49">[<expr pos:start="155:48" pos:end="155:48"><literal type="number" pos:start="155:48" pos:end="155:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="155:52" pos:end="155:52"><expr pos:start="155:52" pos:end="155:52"><literal type="number" pos:start="155:52" pos:end="155:52">2</literal></expr></argument>,

                            <argument pos:start="157:29" pos:end="157:55"><expr pos:start="157:29" pos:end="157:55"><name pos:start="157:29" pos:end="157:34">energy</name> <operator pos:start="157:36" pos:end="157:37">&lt;=</operator> <name pos:start="157:39" pos:end="157:55"><name pos:start="157:39" pos:end="157:43">ractx</name><operator pos:start="157:44" pos:end="157:45">-&gt;</operator><name pos:start="157:46" pos:end="157:55">old_energy</name></name></expr></argument>,

                            <argument pos:start="159:29" pos:end="159:71"><expr pos:start="159:29" pos:end="159:71"><call pos:start="159:29" pos:end="159:65"><name pos:start="159:29" pos:end="159:37">ff_t_sqrt</name><argument_list pos:start="159:38" pos:end="159:65">(<argument pos:start="159:39" pos:end="159:64"><expr pos:start="159:39" pos:end="159:64"><name pos:start="159:39" pos:end="159:44">energy</name> <operator pos:start="159:46" pos:end="159:46">*</operator> <name pos:start="159:48" pos:end="159:64"><name pos:start="159:48" pos:end="159:52">ractx</name><operator pos:start="159:53" pos:end="159:54">-&gt;</operator><name pos:start="159:55" pos:end="159:64">old_energy</name></name></expr></argument>)</argument_list></call> <operator pos:start="159:67" pos:end="159:68">&gt;&gt;</operator> <literal type="number" pos:start="159:70" pos:end="159:71">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:65"><expr pos:start="161:5" pos:end="161:64"><name pos:start="161:5" pos:end="161:15"><name pos:start="161:5" pos:end="161:12">refl_rms</name><index pos:start="161:13" pos:end="161:15">[<expr pos:start="161:14" pos:end="161:14"><literal type="number" pos:start="161:14" pos:end="161:14">2</literal></expr>]</index></name> <operator pos:start="161:17" pos:end="161:17">=</operator> <call pos:start="161:19" pos:end="161:64"><name pos:start="161:19" pos:end="161:27">ff_interp</name><argument_list pos:start="161:28" pos:end="161:64">(<argument pos:start="161:29" pos:end="161:33"><expr pos:start="161:29" pos:end="161:33"><name pos:start="161:29" pos:end="161:33">ractx</name></expr></argument>, <argument pos:start="161:36" pos:end="161:49"><expr pos:start="161:36" pos:end="161:49"><name pos:start="161:36" pos:end="161:49"><name pos:start="161:36" pos:end="161:46">block_coefs</name><index pos:start="161:47" pos:end="161:49">[<expr pos:start="161:48" pos:end="161:48"><literal type="number" pos:start="161:48" pos:end="161:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="161:52" pos:end="161:52"><expr pos:start="161:52" pos:end="161:52"><literal type="number" pos:start="161:52" pos:end="161:52">3</literal></expr></argument>, <argument pos:start="161:55" pos:end="161:55"><expr pos:start="161:55" pos:end="161:55"><literal type="number" pos:start="161:55" pos:end="161:55">0</literal></expr></argument>, <argument pos:start="161:58" pos:end="161:63"><expr pos:start="161:58" pos:end="161:63"><name pos:start="161:58" pos:end="161:63">energy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:65"><expr pos:start="163:5" pos:end="163:64"><name pos:start="163:5" pos:end="163:15"><name pos:start="163:5" pos:end="163:12">refl_rms</name><index pos:start="163:13" pos:end="163:15">[<expr pos:start="163:14" pos:end="163:14"><literal type="number" pos:start="163:14" pos:end="163:14">3</literal></expr>]</index></name> <operator pos:start="163:17" pos:end="163:17">=</operator> <call pos:start="163:19" pos:end="163:64"><name pos:start="163:19" pos:end="163:32">ff_rescale_rms</name><argument_list pos:start="163:33" pos:end="163:64">(<argument pos:start="163:34" pos:end="163:55"><expr pos:start="163:34" pos:end="163:55"><name pos:start="163:34" pos:end="163:55"><name pos:start="163:34" pos:end="163:38">ractx</name><operator pos:start="163:39" pos:end="163:40">-&gt;</operator><name pos:start="163:41" pos:end="163:52">lpc_refl_rms</name><index pos:start="163:53" pos:end="163:55">[<expr pos:start="163:54" pos:end="163:54"><literal type="number" pos:start="163:54" pos:end="163:54">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="163:58" pos:end="163:63"><expr pos:start="163:58" pos:end="163:63"><name pos:start="163:58" pos:end="163:63">energy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:66"><expr pos:start="165:5" pos:end="165:65"><call pos:start="165:5" pos:end="165:65"><name pos:start="165:5" pos:end="165:19">ff_int_to_int16</name><argument_list pos:start="165:20" pos:end="165:65">(<argument pos:start="165:21" pos:end="165:44"><expr pos:start="165:21" pos:end="165:44"><name pos:start="165:21" pos:end="165:44"><name pos:start="165:21" pos:end="165:31">block_coefs</name><index pos:start="165:32" pos:end="165:44">[<expr pos:start="165:33" pos:end="165:43"><name pos:start="165:33" pos:end="165:39">NBLOCKS</name> <operator pos:start="165:41" pos:end="165:41">-</operator> <literal type="number" pos:start="165:43" pos:end="165:43">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:47" pos:end="165:64"><expr pos:start="165:47" pos:end="165:64"><name pos:start="165:47" pos:end="165:64"><name pos:start="165:47" pos:end="165:51">ractx</name><operator pos:start="165:52" pos:end="165:53">-&gt;</operator><name pos:start="165:54" pos:end="165:61">lpc_coef</name><index pos:start="165:62" pos:end="165:64">[<expr pos:start="165:63" pos:end="165:63"><literal type="number" pos:start="165:63" pos:end="165:63">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:58"><expr pos:start="167:5" pos:end="167:57"><call pos:start="167:5" pos:end="167:57"><name pos:start="167:5" pos:end="167:12">put_bits</name><argument_list pos:start="167:13" pos:end="167:57">(<argument pos:start="167:14" pos:end="167:16"><expr pos:start="167:14" pos:end="167:16"><operator pos:start="167:14" pos:end="167:14">&amp;</operator><name pos:start="167:15" pos:end="167:16">pb</name></expr></argument>, <argument pos:start="167:19" pos:end="167:19"><expr pos:start="167:19" pos:end="167:19"><literal type="number" pos:start="167:19" pos:end="167:19">5</literal></expr></argument>, <argument pos:start="167:22" pos:end="167:56"><expr pos:start="167:22" pos:end="167:56"><call pos:start="167:22" pos:end="167:56"><name pos:start="167:22" pos:end="167:29">quantize</name><argument_list pos:start="167:30" pos:end="167:56">(<argument pos:start="167:31" pos:end="167:36"><expr pos:start="167:31" pos:end="167:36"><name pos:start="167:31" pos:end="167:36">energy</name></expr></argument>, <argument pos:start="167:39" pos:end="167:51"><expr pos:start="167:39" pos:end="167:51"><name pos:start="167:39" pos:end="167:51">ff_energy_tab</name></expr></argument>, <argument pos:start="167:54" pos:end="167:55"><expr pos:start="167:54" pos:end="167:55"><literal type="number" pos:start="167:54" pos:end="167:55">32</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="169:5" pos:end="173:64">for <control pos:start="169:9" pos:end="169:33">(<init pos:start="169:10" pos:end="169:15"><expr pos:start="169:10" pos:end="169:14"><name pos:start="169:10" pos:end="169:10">i</name> <operator pos:start="169:12" pos:end="169:12">=</operator> <literal type="number" pos:start="169:14" pos:end="169:14">0</literal></expr>;</init> <condition pos:start="169:17" pos:end="169:28"><expr pos:start="169:17" pos:end="169:27"><name pos:start="169:17" pos:end="169:17">i</name> <operator pos:start="169:19" pos:end="169:19">&lt;</operator> <name pos:start="169:21" pos:end="169:27">NBLOCKS</name></expr>;</condition> <incr pos:start="169:30" pos:end="169:32"><expr pos:start="169:30" pos:end="169:32"><name pos:start="169:30" pos:end="169:30">i</name><operator pos:start="169:31" pos:end="169:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="171:9" pos:end="173:64"><block_content pos:start="171:9" pos:end="173:64">

        <expr_stmt pos:start="171:9" pos:end="173:64"><expr pos:start="171:9" pos:end="173:63"><call pos:start="171:9" pos:end="173:63"><name pos:start="171:9" pos:end="171:29">ra144_encode_subblock</name><argument_list pos:start="171:30" pos:end="173:63">(<argument pos:start="171:31" pos:end="171:35"><expr pos:start="171:31" pos:end="171:35"><name pos:start="171:31" pos:end="171:35">ractx</name></expr></argument>, <argument pos:start="171:38" pos:end="171:70"><expr pos:start="171:38" pos:end="171:70"><name pos:start="171:38" pos:end="171:54"><name pos:start="171:38" pos:end="171:42">ractx</name><operator pos:start="171:43" pos:end="171:44">-&gt;</operator><name pos:start="171:45" pos:end="171:54">curr_block</name></name> <operator pos:start="171:56" pos:end="171:56">+</operator> <name pos:start="171:58" pos:end="171:58">i</name> <operator pos:start="171:60" pos:end="171:60">*</operator> <name pos:start="171:62" pos:end="171:70">BLOCKSIZE</name></expr></argument>,

                              <argument pos:start="173:31" pos:end="173:44"><expr pos:start="173:31" pos:end="173:44"><name pos:start="173:31" pos:end="173:44"><name pos:start="173:31" pos:end="173:41">block_coefs</name><index pos:start="173:42" pos:end="173:44">[<expr pos:start="173:43" pos:end="173:43"><name pos:start="173:43" pos:end="173:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="173:47" pos:end="173:57"><expr pos:start="173:47" pos:end="173:57"><name pos:start="173:47" pos:end="173:57"><name pos:start="173:47" pos:end="173:54">refl_rms</name><index pos:start="173:55" pos:end="173:57">[<expr pos:start="173:56" pos:end="173:56"><name pos:start="173:56" pos:end="173:56">i</name></expr>]</index></name></expr></argument>, <argument pos:start="173:60" pos:end="173:62"><expr pos:start="173:60" pos:end="173:62"><operator pos:start="173:60" pos:end="173:60">&amp;</operator><name pos:start="173:61" pos:end="173:62">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="175:5" pos:end="175:24"><expr pos:start="175:5" pos:end="175:23"><call pos:start="175:5" pos:end="175:23"><name pos:start="175:5" pos:end="175:18">flush_put_bits</name><argument_list pos:start="175:19" pos:end="175:23">(<argument pos:start="175:20" pos:end="175:22"><expr pos:start="175:20" pos:end="175:22"><operator pos:start="175:20" pos:end="175:20">&amp;</operator><name pos:start="175:21" pos:end="175:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:31"><expr pos:start="177:5" pos:end="177:30"><name pos:start="177:5" pos:end="177:21"><name pos:start="177:5" pos:end="177:9">ractx</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:21">old_energy</name></name> <operator pos:start="177:23" pos:end="177:23">=</operator> <name pos:start="177:25" pos:end="177:30">energy</name></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:52"><expr pos:start="179:5" pos:end="179:51"><name pos:start="179:5" pos:end="179:26"><name pos:start="179:5" pos:end="179:9">ractx</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:23">lpc_refl_rms</name><index pos:start="179:24" pos:end="179:26">[<expr pos:start="179:25" pos:end="179:25"><literal type="number" pos:start="179:25" pos:end="179:25">1</literal></expr>]</index></name> <operator pos:start="179:28" pos:end="179:28">=</operator> <name pos:start="179:30" pos:end="179:51"><name pos:start="179:30" pos:end="179:34">ractx</name><operator pos:start="179:35" pos:end="179:36">-&gt;</operator><name pos:start="179:37" pos:end="179:48">lpc_refl_rms</name><index pos:start="179:49" pos:end="179:51">[<expr pos:start="179:50" pos:end="179:50"><literal type="number" pos:start="179:50" pos:end="179:50">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <macro pos:start="181:5" pos:end="181:66"><name pos:start="181:5" pos:end="181:10">FFSWAP</name><argument_list pos:start="181:11" pos:end="181:66">(<argument pos:start="181:12" pos:end="181:25">unsigned int *</argument>, <argument pos:start="181:28" pos:end="181:45">ractx-&gt;lpc_coef[<literal type="number" pos:start="181:44" pos:end="181:44">0</literal>]</argument>, <argument pos:start="181:48" pos:end="181:65">ractx-&gt;lpc_coef[<literal type="number" pos:start="181:64" pos:end="181:64">1</literal>]</argument>)</argument_list></macro><empty_stmt pos:start="181:67" pos:end="181:67">;</empty_stmt>



    <comment type="block" pos:start="185:5" pos:end="185:73">/* copy input samples to current block for processing in next call */</comment>

    <expr_stmt pos:start="187:5" pos:end="187:10"><expr pos:start="187:5" pos:end="187:9"><name pos:start="187:5" pos:end="187:5">i</name> <operator pos:start="187:7" pos:end="187:7">=</operator> <literal type="number" pos:start="187:9" pos:end="187:9">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="189:5" pos:end="203:30"><if pos:start="189:5" pos:end="201:5">if <condition pos:start="189:8" pos:end="189:14">(<expr pos:start="189:9" pos:end="189:13"><name pos:start="189:9" pos:end="189:13">frame</name></expr>)</condition> <block pos:start="189:16" pos:end="201:5">{<block_content pos:start="191:9" pos:end="199:23">

        <for pos:start="191:9" pos:end="193:51">for <control pos:start="191:13" pos:end="191:42">(<init pos:start="191:14" pos:end="191:14">;</init> <condition pos:start="191:16" pos:end="191:37"><expr pos:start="191:16" pos:end="191:36"><name pos:start="191:16" pos:end="191:16">i</name> <operator pos:start="191:18" pos:end="191:18">&lt;</operator> <name pos:start="191:20" pos:end="191:36"><name pos:start="191:20" pos:end="191:24">frame</name><operator pos:start="191:25" pos:end="191:26">-&gt;</operator><name pos:start="191:27" pos:end="191:36">nb_samples</name></name></expr>;</condition> <incr pos:start="191:39" pos:end="191:41"><expr pos:start="191:39" pos:end="191:41"><name pos:start="191:39" pos:end="191:39">i</name><operator pos:start="191:40" pos:end="191:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="193:13" pos:end="193:51"><block_content pos:start="193:13" pos:end="193:51">

            <expr_stmt pos:start="193:13" pos:end="193:51"><expr pos:start="193:13" pos:end="193:50"><name pos:start="193:13" pos:end="193:32"><name pos:start="193:13" pos:end="193:17">ractx</name><operator pos:start="193:18" pos:end="193:19">-&gt;</operator><name pos:start="193:20" pos:end="193:29">curr_block</name><index pos:start="193:30" pos:end="193:32">[<expr pos:start="193:31" pos:end="193:31"><name pos:start="193:31" pos:end="193:31">i</name></expr>]</index></name> <operator pos:start="193:34" pos:end="193:34">=</operator> <name pos:start="193:36" pos:end="193:45"><name pos:start="193:36" pos:end="193:42">samples</name><index pos:start="193:43" pos:end="193:45">[<expr pos:start="193:44" pos:end="193:44"><name pos:start="193:44" pos:end="193:44">i</name></expr>]</index></name> <operator pos:start="193:47" pos:end="193:48">&gt;&gt;</operator> <literal type="number" pos:start="193:50" pos:end="193:50">2</literal></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="197:9" pos:end="199:23"><if pos:start="197:9" pos:end="199:23">if <condition pos:start="197:12" pos:end="197:60">(<expr pos:start="197:13" pos:end="197:59"><operator pos:start="197:13" pos:end="197:13">(</operator><name pos:start="197:14" pos:end="197:16">ret</name> <operator pos:start="197:18" pos:end="197:18">=</operator> <call pos:start="197:20" pos:end="197:54"><name pos:start="197:20" pos:end="197:34">ff_af_queue_add</name><argument_list pos:start="197:35" pos:end="197:54">(<argument pos:start="197:36" pos:end="197:46"><expr pos:start="197:36" pos:end="197:46"><operator pos:start="197:36" pos:end="197:36">&amp;</operator><name pos:start="197:37" pos:end="197:46"><name pos:start="197:37" pos:end="197:41">ractx</name><operator pos:start="197:42" pos:end="197:43">-&gt;</operator><name pos:start="197:44" pos:end="197:46">afq</name></name></expr></argument>, <argument pos:start="197:49" pos:end="197:53"><expr pos:start="197:49" pos:end="197:53"><name pos:start="197:49" pos:end="197:53">frame</name></expr></argument>)</argument_list></call><operator pos:start="197:55" pos:end="197:55">)</operator> <operator pos:start="197:57" pos:end="197:57">&lt;</operator> <literal type="number" pos:start="197:59" pos:end="197:59">0</literal></expr>)</condition><block type="pseudo" pos:start="199:13" pos:end="199:23"><block_content pos:start="199:13" pos:end="199:23">

            <return pos:start="199:13" pos:end="199:23">return <expr pos:start="199:20" pos:end="199:22"><name pos:start="199:20" pos:end="199:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="201:7" pos:end="203:30">else<block type="pseudo" pos:start="203:9" pos:end="203:30"><block_content pos:start="203:9" pos:end="203:30">

        <expr_stmt pos:start="203:9" pos:end="203:30"><expr pos:start="203:9" pos:end="203:29"><name pos:start="203:9" pos:end="203:25"><name pos:start="203:9" pos:end="203:13">ractx</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:25">last_frame</name></name> <operator pos:start="203:27" pos:end="203:27">=</operator> <literal type="number" pos:start="203:29" pos:end="203:29">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="205:5" pos:end="207:67"><expr pos:start="205:5" pos:end="207:66"><call pos:start="205:5" pos:end="207:66"><name pos:start="205:5" pos:end="205:10">memset</name><argument_list pos:start="205:11" pos:end="207:66">(<argument pos:start="205:12" pos:end="205:32"><expr pos:start="205:12" pos:end="205:32"><operator pos:start="205:12" pos:end="205:12">&amp;</operator><name pos:start="205:13" pos:end="205:32"><name pos:start="205:13" pos:end="205:17">ractx</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:29">curr_block</name><index pos:start="205:30" pos:end="205:32">[<expr pos:start="205:31" pos:end="205:31"><name pos:start="205:31" pos:end="205:31">i</name></expr>]</index></name></expr></argument>, <argument pos:start="205:35" pos:end="205:35"><expr pos:start="205:35" pos:end="205:35"><literal type="number" pos:start="205:35" pos:end="205:35">0</literal></expr></argument>,

           <argument pos:start="207:12" pos:end="207:65"><expr pos:start="207:12" pos:end="207:65"><operator pos:start="207:12" pos:end="207:12">(</operator><name pos:start="207:13" pos:end="207:19">NBLOCKS</name> <operator pos:start="207:21" pos:end="207:21">*</operator> <name pos:start="207:23" pos:end="207:31">BLOCKSIZE</name> <operator pos:start="207:33" pos:end="207:33">-</operator> <name pos:start="207:35" pos:end="207:35">i</name><operator pos:start="207:36" pos:end="207:36">)</operator> <operator pos:start="207:38" pos:end="207:38">*</operator> <sizeof pos:start="207:40" pos:end="207:65">sizeof<argument_list pos:start="207:46" pos:end="207:65">(<argument pos:start="207:47" pos:end="207:64"><expr pos:start="207:47" pos:end="207:64"><operator pos:start="207:47" pos:end="207:47">*</operator><name pos:start="207:48" pos:end="207:64"><name pos:start="207:48" pos:end="207:52">ractx</name><operator pos:start="207:53" pos:end="207:54">-&gt;</operator><name pos:start="207:55" pos:end="207:64">curr_block</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="211:5" pos:end="211:41">/* Get the next frame pts/duration */</comment>

    <expr_stmt pos:start="213:5" pos:end="215:41"><expr pos:start="213:5" pos:end="215:40"><call pos:start="213:5" pos:end="215:40"><name pos:start="213:5" pos:end="213:22">ff_af_queue_remove</name><argument_list pos:start="213:23" pos:end="215:40">(<argument pos:start="213:24" pos:end="213:34"><expr pos:start="213:24" pos:end="213:34"><operator pos:start="213:24" pos:end="213:24">&amp;</operator><name pos:start="213:25" pos:end="213:34"><name pos:start="213:25" pos:end="213:29">ractx</name><operator pos:start="213:30" pos:end="213:31">-&gt;</operator><name pos:start="213:32" pos:end="213:34">afq</name></name></expr></argument>, <argument pos:start="213:37" pos:end="213:53"><expr pos:start="213:37" pos:end="213:53"><name pos:start="213:37" pos:end="213:53"><name pos:start="213:37" pos:end="213:41">avctx</name><operator pos:start="213:42" pos:end="213:43">-&gt;</operator><name pos:start="213:44" pos:end="213:53">frame_size</name></name></expr></argument>, <argument pos:start="213:56" pos:end="213:66"><expr pos:start="213:56" pos:end="213:66"><operator pos:start="213:56" pos:end="213:56">&amp;</operator><name pos:start="213:57" pos:end="213:66"><name pos:start="213:57" pos:end="213:61">avpkt</name><operator pos:start="213:62" pos:end="213:63">-&gt;</operator><name pos:start="213:64" pos:end="213:66">pts</name></name></expr></argument>,

                       <argument pos:start="215:24" pos:end="215:39"><expr pos:start="215:24" pos:end="215:39"><operator pos:start="215:24" pos:end="215:24">&amp;</operator><name pos:start="215:25" pos:end="215:39"><name pos:start="215:25" pos:end="215:29">avpkt</name><operator pos:start="215:30" pos:end="215:31">-&gt;</operator><name pos:start="215:32" pos:end="215:39">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:28"><expr pos:start="219:5" pos:end="219:27"><name pos:start="219:5" pos:end="219:15"><name pos:start="219:5" pos:end="219:9">avpkt</name><operator pos:start="219:10" pos:end="219:11">-&gt;</operator><name pos:start="219:12" pos:end="219:15">size</name></name> <operator pos:start="219:17" pos:end="219:17">=</operator> <name pos:start="219:19" pos:end="219:27">FRAMESIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:24"><expr pos:start="221:5" pos:end="221:23"><operator pos:start="221:5" pos:end="221:5">*</operator><name pos:start="221:6" pos:end="221:19">got_packet_ptr</name> <operator pos:start="221:21" pos:end="221:21">=</operator> <literal type="number" pos:start="221:23" pos:end="221:23">1</literal></expr>;</expr_stmt>

    <return pos:start="223:5" pos:end="223:13">return <expr pos:start="223:12" pos:end="223:12"><literal type="number" pos:start="223:12" pos:end="223:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
