<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26842.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">url_split</name><parameter_list pos:start="1:15" pos:end="9:31">(<parameter pos:start="1:16" pos:end="1:26"><decl pos:start="1:16" pos:end="1:26"><type pos:start="1:16" pos:end="1:26"><name pos:start="1:16" pos:end="1:19">char</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:26">proto</name></decl></parameter>, <parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:31">int</name></type> <name pos:start="1:33" pos:end="1:42">proto_size</name></decl></parameter>,

               <parameter pos:start="3:16" pos:end="3:29"><decl pos:start="3:16" pos:end="3:29"><type pos:start="3:16" pos:end="3:29"><name pos:start="3:16" pos:end="3:19">char</name> <modifier pos:start="3:21" pos:end="3:21">*</modifier></type><name pos:start="3:22" pos:end="3:29">hostname</name></decl></parameter>, <parameter pos:start="3:32" pos:end="3:48"><decl pos:start="3:32" pos:end="3:48"><type pos:start="3:32" pos:end="3:48"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:48">hostname_size</name></decl></parameter>,

               <parameter pos:start="5:16" pos:end="5:28"><decl pos:start="5:16" pos:end="5:28"><type pos:start="5:16" pos:end="5:28"><name pos:start="5:16" pos:end="5:18">int</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:28">port_ptr</name></decl></parameter>,

               <parameter pos:start="7:16" pos:end="7:25"><decl pos:start="7:16" pos:end="7:25"><type pos:start="7:16" pos:end="7:25"><name pos:start="7:16" pos:end="7:19">char</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:25">path</name></decl></parameter>, <parameter pos:start="7:28" pos:end="7:40"><decl pos:start="7:28" pos:end="7:40"><type pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:30">int</name></type> <name pos:start="7:32" pos:end="7:40">path_size</name></decl></parameter>,

               <parameter pos:start="9:16" pos:end="9:30"><decl pos:start="9:16" pos:end="9:30"><type pos:start="9:16" pos:end="9:30"><specifier pos:start="9:16" pos:end="9:20">const</specifier> <name pos:start="9:22" pos:end="9:25">char</name> <modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:30">url</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="99:1">{<block_content pos:start="13:5" pos:end="97:32">

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:17">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:11">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:13"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">port</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:14"><expr pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:8">port</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <operator pos:start="21:12" pos:end="21:12">-</operator><literal type="number" pos:start="21:13" pos:end="21:13">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:12"><expr pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:5">p</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <name pos:start="25:9" pos:end="25:11">url</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:14"><expr pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:5">q</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <name pos:start="27:9" pos:end="27:13">proto</name></expr>;</expr_stmt>

    <while pos:start="29:5" pos:end="37:5">while <condition pos:start="29:11" pos:end="29:35">(<expr pos:start="29:12" pos:end="29:34"><operator pos:start="29:12" pos:end="29:12">*</operator><name pos:start="29:13" pos:end="29:13">p</name> <operator pos:start="29:15" pos:end="29:16">!=</operator> <literal type="char" pos:start="29:18" pos:end="29:20">':'</literal> <operator pos:start="29:22" pos:end="29:23">&amp;&amp;</operator> <operator pos:start="29:25" pos:end="29:25">*</operator><name pos:start="29:26" pos:end="29:26">p</name> <operator pos:start="29:28" pos:end="29:29">!=</operator> <literal type="char" pos:start="29:31" pos:end="29:34">'\0'</literal></expr>)</condition> <block pos:start="29:37" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:12">

        <if_stmt pos:start="31:9" pos:end="33:22"><if pos:start="31:9" pos:end="33:22">if <condition pos:start="31:12" pos:end="31:41">(<expr pos:start="31:13" pos:end="31:40"><operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:14">q</name> <operator pos:start="31:16" pos:end="31:16">-</operator> <name pos:start="31:18" pos:end="31:22">proto</name><operator pos:start="31:23" pos:end="31:23">)</operator> <operator pos:start="31:25" pos:end="31:25">&lt;</operator> <name pos:start="31:27" pos:end="31:36">proto_size</name> <operator pos:start="31:38" pos:end="31:38">-</operator> <literal type="number" pos:start="31:40" pos:end="31:40">1</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:22"><block_content pos:start="33:13" pos:end="33:22">

            <expr_stmt pos:start="33:13" pos:end="33:22"><expr pos:start="33:13" pos:end="33:21"><operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:14">q</name><operator pos:start="33:15" pos:end="33:16">++</operator> <operator pos:start="33:18" pos:end="33:18">=</operator> <operator pos:start="33:20" pos:end="33:20">*</operator><name pos:start="33:21" pos:end="33:21">p</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:12"><expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:9">p</name><operator pos:start="35:10" pos:end="35:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="39:5" pos:end="41:18"><if pos:start="39:5" pos:end="41:18">if <condition pos:start="39:8" pos:end="39:23">(<expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:18">proto_size</name> <operator pos:start="39:20" pos:end="39:20">&gt;</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <expr_stmt pos:start="41:9" pos:end="41:18"><expr pos:start="41:9" pos:end="41:17"><operator pos:start="41:9" pos:end="41:9">*</operator><name pos:start="41:10" pos:end="41:10">q</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="char" pos:start="41:14" pos:end="41:17">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="91:5"><if pos:start="43:5" pos:end="55:5">if <condition pos:start="43:8" pos:end="43:19">(<expr pos:start="43:9" pos:end="43:18"><operator pos:start="43:9" pos:end="43:9">*</operator><name pos:start="43:10" pos:end="43:10">p</name> <operator pos:start="43:12" pos:end="43:13">==</operator> <literal type="char" pos:start="43:15" pos:end="43:18">'\0'</literal></expr>)</condition> <block pos:start="43:21" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:16">

        <if_stmt pos:start="45:9" pos:end="47:28"><if pos:start="45:9" pos:end="47:28">if <condition pos:start="45:12" pos:end="45:27">(<expr pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:22">proto_size</name> <operator pos:start="45:24" pos:end="45:24">&gt;</operator> <literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:28"><block_content pos:start="47:13" pos:end="47:28">

            <expr_stmt pos:start="47:13" pos:end="47:28"><expr pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:17">proto</name><index pos:start="47:18" pos:end="47:20">[<expr pos:start="47:19" pos:end="47:19"><literal type="number" pos:start="47:19" pos:end="47:19">0</literal></expr>]</index></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <literal type="char" pos:start="47:24" pos:end="47:27">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="51:31"><if pos:start="49:9" pos:end="51:31">if <condition pos:start="49:12" pos:end="49:30">(<expr pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:25">hostname_size</name> <operator pos:start="49:27" pos:end="49:27">&gt;</operator> <literal type="number" pos:start="49:29" pos:end="49:29">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:31"><block_content pos:start="51:13" pos:end="51:31">

            <expr_stmt pos:start="51:13" pos:end="51:31"><expr pos:start="51:13" pos:end="51:30"><name pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:20">hostname</name><index pos:start="51:21" pos:end="51:23">[<expr pos:start="51:22" pos:end="51:22"><literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>]</index></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <literal type="char" pos:start="51:27" pos:end="51:30">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:16"><expr pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:9">p</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <name pos:start="53:13" pos:end="53:15">url</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="91:5">else <block pos:start="55:12" pos:end="91:5">{<block_content pos:start="57:9" pos:end="89:9">

        <expr_stmt pos:start="57:9" pos:end="57:12"><expr pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:9">p</name><operator pos:start="57:10" pos:end="57:11">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:16"><if pos:start="59:9" pos:end="61:16">if <condition pos:start="59:12" pos:end="59:22">(<expr pos:start="59:13" pos:end="59:21"><operator pos:start="59:13" pos:end="59:13">*</operator><name pos:start="59:14" pos:end="59:14">p</name> <operator pos:start="59:16" pos:end="59:17">==</operator> <literal type="char" pos:start="59:19" pos:end="59:21">'/'</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:16"><block_content pos:start="61:13" pos:end="61:16">

            <expr_stmt pos:start="61:13" pos:end="61:16"><expr pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:13">p</name><operator pos:start="61:14" pos:end="61:15">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="65:16"><if pos:start="63:9" pos:end="65:16">if <condition pos:start="63:12" pos:end="63:22">(<expr pos:start="63:13" pos:end="63:21"><operator pos:start="63:13" pos:end="63:13">*</operator><name pos:start="63:14" pos:end="63:14">p</name> <operator pos:start="63:16" pos:end="63:17">==</operator> <literal type="char" pos:start="63:19" pos:end="63:21">'/'</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:16"><block_content pos:start="65:13" pos:end="65:16">

            <expr_stmt pos:start="65:13" pos:end="65:16"><expr pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:13">p</name><operator pos:start="65:14" pos:end="65:15">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:21"><expr pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:9">q</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <name pos:start="67:13" pos:end="67:20">hostname</name></expr>;</expr_stmt>

        <while pos:start="69:9" pos:end="77:9">while <condition pos:start="69:15" pos:end="69:65">(<expr pos:start="69:16" pos:end="69:64"><operator pos:start="69:16" pos:end="69:16">*</operator><name pos:start="69:17" pos:end="69:17">p</name> <operator pos:start="69:19" pos:end="69:20">!=</operator> <literal type="char" pos:start="69:22" pos:end="69:24">':'</literal> <operator pos:start="69:26" pos:end="69:27">&amp;&amp;</operator> <operator pos:start="69:29" pos:end="69:29">*</operator><name pos:start="69:30" pos:end="69:30">p</name> <operator pos:start="69:32" pos:end="69:33">!=</operator> <literal type="char" pos:start="69:35" pos:end="69:37">'/'</literal> <operator pos:start="69:39" pos:end="69:40">&amp;&amp;</operator> <operator pos:start="69:42" pos:end="69:42">*</operator><name pos:start="69:43" pos:end="69:43">p</name> <operator pos:start="69:45" pos:end="69:46">!=</operator> <literal type="char" pos:start="69:48" pos:end="69:50">'?'</literal> <operator pos:start="69:52" pos:end="69:53">&amp;&amp;</operator> <operator pos:start="69:55" pos:end="69:55">*</operator><name pos:start="69:56" pos:end="69:56">p</name> <operator pos:start="69:58" pos:end="69:59">!=</operator> <literal type="char" pos:start="69:61" pos:end="69:64">'\0'</literal></expr>)</condition> <block pos:start="69:67" pos:end="77:9">{<block_content pos:start="71:13" pos:end="75:16">

            <if_stmt pos:start="71:13" pos:end="73:26"><if pos:start="71:13" pos:end="73:26">if <condition pos:start="71:16" pos:end="71:51">(<expr pos:start="71:17" pos:end="71:50"><operator pos:start="71:17" pos:end="71:17">(</operator><name pos:start="71:18" pos:end="71:18">q</name> <operator pos:start="71:20" pos:end="71:20">-</operator> <name pos:start="71:22" pos:end="71:29">hostname</name><operator pos:start="71:30" pos:end="71:30">)</operator> <operator pos:start="71:32" pos:end="71:32">&lt;</operator> <name pos:start="71:34" pos:end="71:46">hostname_size</name> <operator pos:start="71:48" pos:end="71:48">-</operator> <literal type="number" pos:start="71:50" pos:end="71:50">1</literal></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:26"><block_content pos:start="73:17" pos:end="73:26">

                <expr_stmt pos:start="73:17" pos:end="73:26"><expr pos:start="73:17" pos:end="73:25"><operator pos:start="73:17" pos:end="73:17">*</operator><name pos:start="73:18" pos:end="73:18">q</name><operator pos:start="73:19" pos:end="73:20">++</operator> <operator pos:start="73:22" pos:end="73:22">=</operator> <operator pos:start="73:24" pos:end="73:24">*</operator><name pos:start="73:25" pos:end="73:25">p</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:16"><expr pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:13">p</name><operator pos:start="75:14" pos:end="75:15">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="79:9" pos:end="81:22"><if pos:start="79:9" pos:end="81:22">if <condition pos:start="79:12" pos:end="79:30">(<expr pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:25">hostname_size</name> <operator pos:start="79:27" pos:end="79:27">&gt;</operator> <literal type="number" pos:start="79:29" pos:end="79:29">0</literal></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:22"><block_content pos:start="81:13" pos:end="81:22">

            <expr_stmt pos:start="81:13" pos:end="81:22"><expr pos:start="81:13" pos:end="81:21"><operator pos:start="81:13" pos:end="81:13">*</operator><name pos:start="81:14" pos:end="81:14">q</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="char" pos:start="81:18" pos:end="81:21">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="83:9" pos:end="89:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:22">(<expr pos:start="83:13" pos:end="83:21"><operator pos:start="83:13" pos:end="83:13">*</operator><name pos:start="83:14" pos:end="83:14">p</name> <operator pos:start="83:16" pos:end="83:17">==</operator> <literal type="char" pos:start="83:19" pos:end="83:21">':'</literal></expr>)</condition> <block pos:start="83:24" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:47">

            <expr_stmt pos:start="85:13" pos:end="85:16"><expr pos:start="85:13" pos:end="85:15"><name pos:start="85:13" pos:end="85:13">p</name><operator pos:start="85:14" pos:end="85:15">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:47"><expr pos:start="87:13" pos:end="87:46"><name pos:start="87:13" pos:end="87:16">port</name> <operator pos:start="87:18" pos:end="87:18">=</operator> <call pos:start="87:20" pos:end="87:46"><name pos:start="87:20" pos:end="87:26">strtoul</name><argument_list pos:start="87:27" pos:end="87:46">(<argument pos:start="87:28" pos:end="87:28"><expr pos:start="87:28" pos:end="87:28"><name pos:start="87:28" pos:end="87:28">p</name></expr></argument>, <argument pos:start="87:31" pos:end="87:41"><expr pos:start="87:31" pos:end="87:41"><operator pos:start="87:31" pos:end="87:31">(</operator><name pos:start="87:32" pos:end="87:35">char</name> <operator pos:start="87:37" pos:end="87:37">*</operator><operator pos:start="87:38" pos:end="87:38">*</operator><operator pos:start="87:39" pos:end="87:39">)</operator><operator pos:start="87:40" pos:end="87:40">&amp;</operator><name pos:start="87:41" pos:end="87:41">p</name></expr></argument>, <argument pos:start="87:44" pos:end="87:45"><expr pos:start="87:44" pos:end="87:45"><literal type="number" pos:start="87:44" pos:end="87:45">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="93:5" pos:end="95:25"><if pos:start="93:5" pos:end="95:25">if <condition pos:start="93:8" pos:end="93:17">(<expr pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:16">port_ptr</name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:25"><block_content pos:start="95:9" pos:end="95:25">

        <expr_stmt pos:start="95:9" pos:end="95:25"><expr pos:start="95:9" pos:end="95:24"><operator pos:start="95:9" pos:end="95:9">*</operator><name pos:start="95:10" pos:end="95:17">port_ptr</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:24">port</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:32"><expr pos:start="97:5" pos:end="97:31"><call pos:start="97:5" pos:end="97:31"><name pos:start="97:5" pos:end="97:11">pstrcpy</name><argument_list pos:start="97:12" pos:end="97:31">(<argument pos:start="97:13" pos:end="97:16"><expr pos:start="97:13" pos:end="97:16"><name pos:start="97:13" pos:end="97:16">path</name></expr></argument>, <argument pos:start="97:19" pos:end="97:27"><expr pos:start="97:19" pos:end="97:27"><name pos:start="97:19" pos:end="97:27">path_size</name></expr></argument>, <argument pos:start="97:30" pos:end="97:30"><expr pos:start="97:30" pos:end="97:30"><name pos:start="97:30" pos:end="97:30">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
