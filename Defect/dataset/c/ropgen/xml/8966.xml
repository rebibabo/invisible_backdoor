<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8966.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">onenand_initfn</name><parameter_list pos:start="1:26" pos:end="1:44">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:38">SysBusDevice</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">sbd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="97:1">{<block_content pos:start="5:5" pos:end="95:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name> <init pos:start="5:22" pos:end="5:34">= <expr pos:start="5:24" pos:end="5:34"><call pos:start="5:24" pos:end="5:34"><name pos:start="5:24" pos:end="5:29">DEVICE</name><argument_list pos:start="5:30" pos:end="5:34">(<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">sbd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">OneNANDState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:35">= <expr pos:start="7:23" pos:end="7:35"><call pos:start="7:23" pos:end="7:35"><name pos:start="7:23" pos:end="7:30">ONE_NAND</name><argument_list pos:start="7:31" pos:end="7:35">(<argument pos:start="7:32" pos:end="7:34"><expr pos:start="7:32" pos:end="7:34"><name pos:start="7:32" pos:end="7:34">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:54"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">size</name> <init pos:start="9:19" pos:end="9:54">= <expr pos:start="9:21" pos:end="9:54"><literal type="number" pos:start="9:21" pos:end="9:21">1</literal> <operator pos:start="9:23" pos:end="9:24">&lt;&lt;</operator> <operator pos:start="9:26" pos:end="9:26">(</operator><literal type="number" pos:start="9:27" pos:end="9:30">24</literal> <operator pos:start="9:30" pos:end="9:30">+</operator> <operator pos:start="9:32" pos:end="9:32">(</operator><operator pos:start="9:33" pos:end="9:33">(</operator><name pos:start="9:34" pos:end="9:42"><name pos:start="9:34" pos:end="9:34">s</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:38">id</name><operator pos:start="9:39" pos:end="9:39">.</operator><name pos:start="9:40" pos:end="9:42">dev</name></name> <operator pos:start="9:44" pos:end="9:45">&gt;&gt;</operator> <literal type="number" pos:start="9:47" pos:end="9:47">4</literal><operator pos:start="9:48" pos:end="9:48">)</operator> <operator pos:start="9:50" pos:end="9:50">&amp;</operator> <literal type="number" pos:start="9:52" pos:end="9:52">7</literal><operator pos:start="9:53" pos:end="9:53">)</operator><operator pos:start="9:54" pos:end="9:54">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">void</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:13">ram</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:11">base</name></name> <operator pos:start="15:13" pos:end="15:13">=</operator> <operator pos:start="15:15" pos:end="15:15">(</operator><name pos:start="15:16" pos:end="15:21">hwaddr</name><operator pos:start="15:22" pos:end="15:22">)</operator><operator pos:start="15:23" pos:end="15:23">-</operator><literal type="number" pos:start="15:24" pos:end="15:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:10">rdy</name></name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:17">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:13">blocks</name></name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:20">size</name> <operator pos:start="19:22" pos:end="19:23">&gt;&gt;</operator> <name pos:start="19:25" pos:end="19:35">BLOCK_SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:11">secs</name></name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:18">size</name> <operator pos:start="21:20" pos:end="21:21">&gt;&gt;</operator> <literal type="number" pos:start="21:23" pos:end="21:23">9</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:14">blockwp</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:36"><name pos:start="23:18" pos:end="23:25">g_malloc</name><argument_list pos:start="23:26" pos:end="23:36">(<argument pos:start="23:27" pos:end="23:35"><expr pos:start="23:27" pos:end="23:35"><name pos:start="23:27" pos:end="23:35"><name pos:start="23:27" pos:end="23:27">s</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:35">blocks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:50"><expr pos:start="25:5" pos:end="27:49"><name pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:19">density_mask</name></name> <operator pos:start="25:21" pos:end="25:21">=</operator> <ternary pos:start="25:23" pos:end="27:49"><condition pos:start="25:23" pos:end="27:9"><expr pos:start="25:23" pos:end="25:40"><operator pos:start="25:23" pos:end="25:23">(</operator><name pos:start="25:24" pos:end="25:32"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:28">id</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:32">dev</name></name> <operator pos:start="25:34" pos:end="25:34">&amp;</operator> <literal type="number" pos:start="25:36" pos:end="25:39">0x08</literal><operator pos:start="25:40" pos:end="25:40">)</operator></expr>

        ?</condition><then pos:start="27:11" pos:end="27:45"> <expr pos:start="27:11" pos:end="27:45"><operator pos:start="27:11" pos:end="27:11">(</operator><literal type="number" pos:start="27:12" pos:end="27:12">1</literal> <operator pos:start="27:14" pos:end="27:15">&lt;&lt;</operator> <operator pos:start="27:17" pos:end="27:17">(</operator><literal type="number" pos:start="27:18" pos:end="27:20">6</literal> <operator pos:start="27:20" pos:end="27:20">+</operator> <operator pos:start="27:22" pos:end="27:22">(</operator><operator pos:start="27:23" pos:end="27:23">(</operator><name pos:start="27:24" pos:end="27:32"><name pos:start="27:24" pos:end="27:24">s</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:28">id</name><operator pos:start="27:29" pos:end="27:29">.</operator><name pos:start="27:30" pos:end="27:32">dev</name></name> <operator pos:start="27:34" pos:end="27:35">&gt;&gt;</operator> <literal type="number" pos:start="27:37" pos:end="27:37">4</literal><operator pos:start="27:38" pos:end="27:38">)</operator> <operator pos:start="27:40" pos:end="27:40">&amp;</operator> <literal type="number" pos:start="27:42" pos:end="27:42">7</literal><operator pos:start="27:43" pos:end="27:43">)</operator><operator pos:start="27:44" pos:end="27:44">)</operator><operator pos:start="27:45" pos:end="27:45">)</operator></expr> </then><else pos:start="27:47" pos:end="27:49">: <expr pos:start="27:49" pos:end="27:49"><literal type="number" pos:start="27:49" pos:end="27:49">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="31:47"><expr pos:start="29:5" pos:end="31:46"><call pos:start="29:5" pos:end="31:46"><name pos:start="29:5" pos:end="29:25">memory_region_init_io</name><argument_list pos:start="29:26" pos:end="31:46">(<argument pos:start="29:27" pos:end="29:35"><expr pos:start="29:27" pos:end="29:35"><operator pos:start="29:27" pos:end="29:27">&amp;</operator><name pos:start="29:28" pos:end="29:35"><name pos:start="29:28" pos:end="29:28">s</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:35">iomem</name></name></expr></argument>, <argument pos:start="29:38" pos:end="29:46"><expr pos:start="29:38" pos:end="29:46"><call pos:start="29:38" pos:end="29:46"><name pos:start="29:38" pos:end="29:43">OBJECT</name><argument_list pos:start="29:44" pos:end="29:46">(<argument pos:start="29:45" pos:end="29:45"><expr pos:start="29:45" pos:end="29:45"><name pos:start="29:45" pos:end="29:45">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:49" pos:end="29:60"><expr pos:start="29:49" pos:end="29:60"><operator pos:start="29:49" pos:end="29:49">&amp;</operator><name pos:start="29:50" pos:end="29:60">onenand_ops</name></expr></argument>, <argument pos:start="29:63" pos:end="29:63"><expr pos:start="29:63" pos:end="29:63"><name pos:start="29:63" pos:end="29:63">s</name></expr></argument>, <argument pos:start="29:66" pos:end="29:74"><expr pos:start="29:66" pos:end="29:74"><literal type="string" pos:start="29:66" pos:end="29:74">"onenand"</literal></expr></argument>,

                          <argument pos:start="31:27" pos:end="31:45"><expr pos:start="31:27" pos:end="31:45"><literal type="number" pos:start="31:27" pos:end="31:33">0x10000</literal> <operator pos:start="31:35" pos:end="31:36">&lt;&lt;</operator> <name pos:start="31:38" pos:end="31:45"><name pos:start="31:38" pos:end="31:38">s</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:45">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="51:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:17">(<expr pos:start="33:9" pos:end="33:16"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:16"><name pos:start="33:10" pos:end="33:10">s</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:16">bdrv</name></name></expr>)</condition> <block pos:start="33:19" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:52">

        <expr_stmt pos:start="35:9" pos:end="37:52"><expr pos:start="35:9" pos:end="37:51"><name pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:16">image</name></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="37:51"><name pos:start="35:20" pos:end="35:25">memset</name><argument_list pos:start="35:26" pos:end="37:51">(<argument pos:start="35:27" pos:end="35:54"><expr pos:start="35:27" pos:end="35:54"><call pos:start="35:27" pos:end="35:54"><name pos:start="35:27" pos:end="35:34">g_malloc</name><argument_list pos:start="35:35" pos:end="35:54">(<argument pos:start="35:36" pos:end="35:53"><expr pos:start="35:36" pos:end="35:53"><name pos:start="35:36" pos:end="35:39">size</name> <operator pos:start="35:41" pos:end="35:41">+</operator> <operator pos:start="35:43" pos:end="35:43">(</operator><name pos:start="35:44" pos:end="35:47">size</name> <operator pos:start="35:49" pos:end="35:50">&gt;&gt;</operator> <literal type="number" pos:start="35:52" pos:end="35:52">5</literal><operator pos:start="35:53" pos:end="35:53">)</operator></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="37:27" pos:end="37:30"><expr pos:start="37:27" pos:end="37:30"><literal type="number" pos:start="37:27" pos:end="37:30">0xff</literal></expr></argument>, <argument pos:start="37:33" pos:end="37:50"><expr pos:start="37:33" pos:end="37:50"><name pos:start="37:33" pos:end="37:36">size</name> <operator pos:start="37:38" pos:end="37:38">+</operator> <operator pos:start="37:40" pos:end="37:40">(</operator><name pos:start="37:41" pos:end="37:44">size</name> <operator pos:start="37:46" pos:end="37:47">&gt;&gt;</operator> <literal type="number" pos:start="37:49" pos:end="37:49">5</literal><operator pos:start="37:50" pos:end="37:50">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="51:5">else <block pos:start="39:12" pos:end="51:5">{<block_content pos:start="41:9" pos:end="49:30">

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:39">(<expr pos:start="41:13" pos:end="41:38"><call pos:start="41:13" pos:end="41:38"><name pos:start="41:13" pos:end="41:29">bdrv_is_read_only</name><argument_list pos:start="41:30" pos:end="41:38">(<argument pos:start="41:31" pos:end="41:37"><expr pos:start="41:31" pos:end="41:37"><name pos:start="41:31" pos:end="41:37"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:37">bdrv</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:41" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:22">

            <expr_stmt pos:start="43:13" pos:end="43:56"><expr pos:start="43:13" pos:end="43:55"><call pos:start="43:13" pos:end="43:55"><name pos:start="43:13" pos:end="43:24">error_report</name><argument_list pos:start="43:25" pos:end="43:55">(<argument pos:start="43:26" pos:end="43:54"><expr pos:start="43:26" pos:end="43:54"><literal type="string" pos:start="43:26" pos:end="43:54">"Can't use a read-only drive"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:22">return <expr pos:start="45:20" pos:end="45:21"><operator pos:start="45:20" pos:end="45:20">-</operator><literal type="number" pos:start="45:21" pos:end="45:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:30"><expr pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:19">bdrv_cur</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:29"><name pos:start="49:23" pos:end="49:23">s</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:29">bdrv</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="55:50"><expr pos:start="53:5" pos:end="55:49"><name pos:start="53:5" pos:end="53:10"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:10">otp</name></name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="55:49"><name pos:start="53:14" pos:end="53:19">memset</name><argument_list pos:start="53:20" pos:end="55:49">(<argument pos:start="53:21" pos:end="53:52"><expr pos:start="53:21" pos:end="53:52"><call pos:start="53:21" pos:end="53:52"><name pos:start="53:21" pos:end="53:28">g_malloc</name><argument_list pos:start="53:29" pos:end="53:52">(<argument pos:start="53:30" pos:end="53:51"><expr pos:start="53:30" pos:end="53:51"><operator pos:start="53:30" pos:end="53:30">(</operator><literal type="number" pos:start="53:31" pos:end="53:34">64</literal> <operator pos:start="53:34" pos:end="53:34">+</operator> <literal type="number" pos:start="53:36" pos:end="53:36">2</literal><operator pos:start="53:37" pos:end="53:37">)</operator> <operator pos:start="53:39" pos:end="53:40">&lt;&lt;</operator> <name pos:start="53:42" pos:end="53:51">PAGE_SHIFT</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="55:21" pos:end="55:24"><expr pos:start="55:21" pos:end="55:24"><literal type="number" pos:start="55:21" pos:end="55:24">0xff</literal></expr></argument>, <argument pos:start="55:27" pos:end="55:48"><expr pos:start="55:27" pos:end="55:48"><operator pos:start="55:27" pos:end="55:27">(</operator><literal type="number" pos:start="55:28" pos:end="55:31">64</literal> <operator pos:start="55:31" pos:end="55:31">+</operator> <literal type="number" pos:start="55:33" pos:end="55:33">2</literal><operator pos:start="55:34" pos:end="55:34">)</operator> <operator pos:start="55:36" pos:end="55:37">&lt;&lt;</operator> <name pos:start="55:39" pos:end="55:48">PAGE_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="59:61"><expr pos:start="57:5" pos:end="59:60"><call pos:start="57:5" pos:end="59:60"><name pos:start="57:5" pos:end="57:26">memory_region_init_ram</name><argument_list pos:start="57:27" pos:end="59:60">(<argument pos:start="57:28" pos:end="57:34"><expr pos:start="57:28" pos:end="57:34"><operator pos:start="57:28" pos:end="57:28">&amp;</operator><name pos:start="57:29" pos:end="57:34"><name pos:start="57:29" pos:end="57:29">s</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:34">ram</name></name></expr></argument>, <argument pos:start="57:37" pos:end="57:45"><expr pos:start="57:37" pos:end="57:45"><call pos:start="57:37" pos:end="57:45"><name pos:start="57:37" pos:end="57:42">OBJECT</name><argument_list pos:start="57:43" pos:end="57:45">(<argument pos:start="57:44" pos:end="57:44"><expr pos:start="57:44" pos:end="57:44"><name pos:start="57:44" pos:end="57:44">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="57:48" pos:end="57:60"><expr pos:start="57:48" pos:end="57:60"><literal type="string" pos:start="57:48" pos:end="57:60">"onenand.ram"</literal></expr></argument>,

                           <argument pos:start="59:28" pos:end="59:45"><expr pos:start="59:28" pos:end="59:45"><literal type="number" pos:start="59:28" pos:end="59:33">0xc000</literal> <operator pos:start="59:35" pos:end="59:36">&lt;&lt;</operator> <name pos:start="59:38" pos:end="59:45"><name pos:start="59:38" pos:end="59:38">s</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:45">shift</name></name></expr></argument>, <argument pos:start="59:48" pos:end="59:59"><expr pos:start="59:48" pos:end="59:59"><operator pos:start="59:48" pos:end="59:48">&amp;</operator><name pos:start="59:49" pos:end="59:59">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:41"><expr pos:start="61:5" pos:end="61:40"><call pos:start="61:5" pos:end="61:40"><name pos:start="61:5" pos:end="61:31">vmstate_register_ram_global</name><argument_list pos:start="61:32" pos:end="61:40">(<argument pos:start="61:33" pos:end="61:39"><expr pos:start="61:33" pos:end="61:39"><operator pos:start="61:33" pos:end="61:33">&amp;</operator><name pos:start="61:34" pos:end="61:39"><name pos:start="61:34" pos:end="61:34">s</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:39">ram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:45"><expr pos:start="63:5" pos:end="63:44"><name pos:start="63:5" pos:end="63:7">ram</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:44"><name pos:start="63:11" pos:end="63:35">memory_region_get_ram_ptr</name><argument_list pos:start="63:36" pos:end="63:44">(<argument pos:start="63:37" pos:end="63:43"><expr pos:start="63:37" pos:end="63:43"><operator pos:start="63:37" pos:end="63:37">&amp;</operator><name pos:start="63:38" pos:end="63:43"><name pos:start="63:38" pos:end="63:38">s</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:43">ram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:44"><expr pos:start="65:5" pos:end="65:43"><name pos:start="65:5" pos:end="65:14"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:11">boot</name><index pos:start="65:12" pos:end="65:14">[<expr pos:start="65:13" pos:end="65:13"><literal type="number" pos:start="65:13" pos:end="65:13">0</literal></expr>]</index></name> <operator pos:start="65:16" pos:end="65:16">=</operator> <name pos:start="65:18" pos:end="65:20">ram</name> <operator pos:start="65:22" pos:end="65:22">+</operator> <operator pos:start="65:24" pos:end="65:24">(</operator><literal type="number" pos:start="65:25" pos:end="65:30">0x0000</literal> <operator pos:start="65:32" pos:end="65:33">&lt;&lt;</operator> <name pos:start="65:35" pos:end="65:42"><name pos:start="65:35" pos:end="65:35">s</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:42">shift</name></name><operator pos:start="65:43" pos:end="65:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:44"><expr pos:start="67:5" pos:end="67:43"><name pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:11">boot</name><index pos:start="67:12" pos:end="67:14">[<expr pos:start="67:13" pos:end="67:13"><literal type="number" pos:start="67:13" pos:end="67:13">1</literal></expr>]</index></name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:20">ram</name> <operator pos:start="67:22" pos:end="67:22">+</operator> <operator pos:start="67:24" pos:end="67:24">(</operator><literal type="number" pos:start="67:25" pos:end="67:30">0x8000</literal> <operator pos:start="67:32" pos:end="67:33">&lt;&lt;</operator> <name pos:start="67:35" pos:end="67:42"><name pos:start="67:35" pos:end="67:35">s</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:42">shift</name></name><operator pos:start="67:43" pos:end="67:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:75"><expr pos:start="69:5" pos:end="69:74"><name pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:11">data</name><index pos:start="69:12" pos:end="69:14">[<expr pos:start="69:13" pos:end="69:13"><literal type="number" pos:start="69:13" pos:end="69:13">0</literal></expr>]</index><index pos:start="69:15" pos:end="69:17">[<expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">0</literal></expr>]</index></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:23">ram</name> <operator pos:start="69:25" pos:end="69:25">+</operator> <operator pos:start="69:27" pos:end="69:27">(</operator><operator pos:start="69:28" pos:end="69:28">(</operator><literal type="number" pos:start="69:29" pos:end="69:36">0x0200</literal> <operator pos:start="69:36" pos:end="69:36">+</operator> <operator pos:start="69:38" pos:end="69:38">(</operator><literal type="number" pos:start="69:39" pos:end="69:39">0</literal> <operator pos:start="69:41" pos:end="69:42">&lt;&lt;</operator> <operator pos:start="69:44" pos:end="69:44">(</operator><name pos:start="69:45" pos:end="69:54">PAGE_SHIFT</name> <operator pos:start="69:56" pos:end="69:56">-</operator> <literal type="number" pos:start="69:58" pos:end="69:58">1</literal><operator pos:start="69:59" pos:end="69:59">)</operator><operator pos:start="69:60" pos:end="69:60">)</operator><operator pos:start="69:61" pos:end="69:61">)</operator> <operator pos:start="69:63" pos:end="69:64">&lt;&lt;</operator> <name pos:start="69:66" pos:end="69:73"><name pos:start="69:66" pos:end="69:66">s</name><operator pos:start="69:67" pos:end="69:68">-&gt;</operator><name pos:start="69:69" pos:end="69:73">shift</name></name><operator pos:start="69:74" pos:end="69:74">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:75"><expr pos:start="71:5" pos:end="71:74"><name pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:11">data</name><index pos:start="71:12" pos:end="71:14">[<expr pos:start="71:13" pos:end="71:13"><literal type="number" pos:start="71:13" pos:end="71:13">0</literal></expr>]</index><index pos:start="71:15" pos:end="71:17">[<expr pos:start="71:16" pos:end="71:16"><literal type="number" pos:start="71:16" pos:end="71:16">1</literal></expr>]</index></name> <operator pos:start="71:19" pos:end="71:19">=</operator> <name pos:start="71:21" pos:end="71:23">ram</name> <operator pos:start="71:25" pos:end="71:25">+</operator> <operator pos:start="71:27" pos:end="71:27">(</operator><operator pos:start="71:28" pos:end="71:28">(</operator><literal type="number" pos:start="71:29" pos:end="71:36">0x8010</literal> <operator pos:start="71:36" pos:end="71:36">+</operator> <operator pos:start="71:38" pos:end="71:38">(</operator><literal type="number" pos:start="71:39" pos:end="71:39">0</literal> <operator pos:start="71:41" pos:end="71:42">&lt;&lt;</operator> <operator pos:start="71:44" pos:end="71:44">(</operator><name pos:start="71:45" pos:end="71:54">PAGE_SHIFT</name> <operator pos:start="71:56" pos:end="71:56">-</operator> <literal type="number" pos:start="71:58" pos:end="71:58">6</literal><operator pos:start="71:59" pos:end="71:59">)</operator><operator pos:start="71:60" pos:end="71:60">)</operator><operator pos:start="71:61" pos:end="71:61">)</operator> <operator pos:start="71:63" pos:end="71:64">&lt;&lt;</operator> <name pos:start="71:66" pos:end="71:73"><name pos:start="71:66" pos:end="71:66">s</name><operator pos:start="71:67" pos:end="71:68">-&gt;</operator><name pos:start="71:69" pos:end="71:73">shift</name></name><operator pos:start="71:74" pos:end="71:74">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:75"><expr pos:start="73:5" pos:end="73:74"><name pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:11">data</name><index pos:start="73:12" pos:end="73:14">[<expr pos:start="73:13" pos:end="73:13"><literal type="number" pos:start="73:13" pos:end="73:13">1</literal></expr>]</index><index pos:start="73:15" pos:end="73:17">[<expr pos:start="73:16" pos:end="73:16"><literal type="number" pos:start="73:16" pos:end="73:16">0</literal></expr>]</index></name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:23">ram</name> <operator pos:start="73:25" pos:end="73:25">+</operator> <operator pos:start="73:27" pos:end="73:27">(</operator><operator pos:start="73:28" pos:end="73:28">(</operator><literal type="number" pos:start="73:29" pos:end="73:36">0x0200</literal> <operator pos:start="73:36" pos:end="73:36">+</operator> <operator pos:start="73:38" pos:end="73:38">(</operator><literal type="number" pos:start="73:39" pos:end="73:39">1</literal> <operator pos:start="73:41" pos:end="73:42">&lt;&lt;</operator> <operator pos:start="73:44" pos:end="73:44">(</operator><name pos:start="73:45" pos:end="73:54">PAGE_SHIFT</name> <operator pos:start="73:56" pos:end="73:56">-</operator> <literal type="number" pos:start="73:58" pos:end="73:58">1</literal><operator pos:start="73:59" pos:end="73:59">)</operator><operator pos:start="73:60" pos:end="73:60">)</operator><operator pos:start="73:61" pos:end="73:61">)</operator> <operator pos:start="73:63" pos:end="73:64">&lt;&lt;</operator> <name pos:start="73:66" pos:end="73:73"><name pos:start="73:66" pos:end="73:66">s</name><operator pos:start="73:67" pos:end="73:68">-&gt;</operator><name pos:start="73:69" pos:end="73:73">shift</name></name><operator pos:start="73:74" pos:end="73:74">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:75"><expr pos:start="75:5" pos:end="75:74"><name pos:start="75:5" pos:end="75:17"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:11">data</name><index pos:start="75:12" pos:end="75:14">[<expr pos:start="75:13" pos:end="75:13"><literal type="number" pos:start="75:13" pos:end="75:13">1</literal></expr>]</index><index pos:start="75:15" pos:end="75:17">[<expr pos:start="75:16" pos:end="75:16"><literal type="number" pos:start="75:16" pos:end="75:16">1</literal></expr>]</index></name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:23">ram</name> <operator pos:start="75:25" pos:end="75:25">+</operator> <operator pos:start="75:27" pos:end="75:27">(</operator><operator pos:start="75:28" pos:end="75:28">(</operator><literal type="number" pos:start="75:29" pos:end="75:36">0x8010</literal> <operator pos:start="75:36" pos:end="75:36">+</operator> <operator pos:start="75:38" pos:end="75:38">(</operator><literal type="number" pos:start="75:39" pos:end="75:39">1</literal> <operator pos:start="75:41" pos:end="75:42">&lt;&lt;</operator> <operator pos:start="75:44" pos:end="75:44">(</operator><name pos:start="75:45" pos:end="75:54">PAGE_SHIFT</name> <operator pos:start="75:56" pos:end="75:56">-</operator> <literal type="number" pos:start="75:58" pos:end="75:58">6</literal><operator pos:start="75:59" pos:end="75:59">)</operator><operator pos:start="75:60" pos:end="75:60">)</operator><operator pos:start="75:61" pos:end="75:61">)</operator> <operator pos:start="75:63" pos:end="75:64">&lt;&lt;</operator> <name pos:start="75:66" pos:end="75:73"><name pos:start="75:66" pos:end="75:66">s</name><operator pos:start="75:67" pos:end="75:68">-&gt;</operator><name pos:start="75:69" pos:end="75:73">shift</name></name><operator pos:start="75:74" pos:end="75:74">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:25"><expr pos:start="77:5" pos:end="77:24"><call pos:start="77:5" pos:end="77:24"><name pos:start="77:5" pos:end="77:21">onenand_mem_setup</name><argument_list pos:start="77:22" pos:end="77:24">(<argument pos:start="77:23" pos:end="77:23"><expr pos:start="77:23" pos:end="77:23"><name pos:start="77:23" pos:end="77:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:35"><expr pos:start="79:5" pos:end="79:34"><call pos:start="79:5" pos:end="79:34"><name pos:start="79:5" pos:end="79:19">sysbus_init_irq</name><argument_list pos:start="79:20" pos:end="79:34">(<argument pos:start="79:21" pos:end="79:23"><expr pos:start="79:21" pos:end="79:23"><name pos:start="79:21" pos:end="79:23">sbd</name></expr></argument>, <argument pos:start="79:26" pos:end="79:33"><expr pos:start="79:26" pos:end="79:33"><operator pos:start="79:26" pos:end="79:26">&amp;</operator><name pos:start="79:27" pos:end="79:33"><name pos:start="79:27" pos:end="79:27">s</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:33">intr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:41"><expr pos:start="81:5" pos:end="81:40"><call pos:start="81:5" pos:end="81:40"><name pos:start="81:5" pos:end="81:20">sysbus_init_mmio</name><argument_list pos:start="81:21" pos:end="81:40">(<argument pos:start="81:22" pos:end="81:24"><expr pos:start="81:22" pos:end="81:24"><name pos:start="81:22" pos:end="81:24">sbd</name></expr></argument>, <argument pos:start="81:27" pos:end="81:39"><expr pos:start="81:27" pos:end="81:39"><operator pos:start="81:27" pos:end="81:27">&amp;</operator><name pos:start="81:28" pos:end="81:39"><name pos:start="81:28" pos:end="81:28">s</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:39">container</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="93:42"><expr pos:start="83:5" pos:end="93:41"><call pos:start="83:5" pos:end="93:41"><name pos:start="83:5" pos:end="83:20">vmstate_register</name><argument_list pos:start="83:21" pos:end="93:41">(<argument pos:start="83:22" pos:end="83:24"><expr pos:start="83:22" pos:end="83:24"><name pos:start="83:22" pos:end="83:24">dev</name></expr></argument>,

                     <argument pos:start="85:22" pos:end="91:41"><expr pos:start="85:22" pos:end="91:41"><operator pos:start="85:22" pos:end="85:22">(</operator><operator pos:start="85:23" pos:end="85:23">(</operator><name pos:start="85:24" pos:end="85:31"><name pos:start="85:24" pos:end="85:24">s</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:31">shift</name></name> <operator pos:start="85:33" pos:end="85:33">&amp;</operator> <literal type="number" pos:start="85:35" pos:end="85:38">0x7f</literal><operator pos:start="85:39" pos:end="85:39">)</operator> <operator pos:start="85:41" pos:end="85:42">&lt;&lt;</operator> <literal type="number" pos:start="85:44" pos:end="85:45">24</literal><operator pos:start="85:46" pos:end="85:46">)</operator>

                     <operator pos:start="87:22" pos:end="87:22">|</operator> <operator pos:start="87:24" pos:end="87:24">(</operator><operator pos:start="87:25" pos:end="87:25">(</operator><name pos:start="87:26" pos:end="87:34"><name pos:start="87:26" pos:end="87:26">s</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:30">id</name><operator pos:start="87:31" pos:end="87:31">.</operator><name pos:start="87:32" pos:end="87:34">man</name></name> <operator pos:start="87:36" pos:end="87:36">&amp;</operator> <literal type="number" pos:start="87:38" pos:end="87:41">0xff</literal><operator pos:start="87:42" pos:end="87:42">)</operator> <operator pos:start="87:44" pos:end="87:45">&lt;&lt;</operator> <literal type="number" pos:start="87:47" pos:end="87:48">16</literal><operator pos:start="87:49" pos:end="87:49">)</operator>

                     <operator pos:start="89:22" pos:end="89:22">|</operator> <operator pos:start="89:24" pos:end="89:24">(</operator><operator pos:start="89:25" pos:end="89:25">(</operator><name pos:start="89:26" pos:end="89:34"><name pos:start="89:26" pos:end="89:26">s</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:30">id</name><operator pos:start="89:31" pos:end="89:31">.</operator><name pos:start="89:32" pos:end="89:34">dev</name></name> <operator pos:start="89:36" pos:end="89:36">&amp;</operator> <literal type="number" pos:start="89:38" pos:end="89:41">0xff</literal><operator pos:start="89:42" pos:end="89:42">)</operator> <operator pos:start="89:44" pos:end="89:45">&lt;&lt;</operator> <literal type="number" pos:start="89:47" pos:end="89:47">8</literal><operator pos:start="89:48" pos:end="89:48">)</operator>

                     <operator pos:start="91:22" pos:end="91:22">|</operator> <operator pos:start="91:24" pos:end="91:24">(</operator><name pos:start="91:25" pos:end="91:33"><name pos:start="91:25" pos:end="91:25">s</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:29">id</name><operator pos:start="91:30" pos:end="91:30">.</operator><name pos:start="91:31" pos:end="91:33">ver</name></name> <operator pos:start="91:35" pos:end="91:35">&amp;</operator> <literal type="number" pos:start="91:37" pos:end="91:40">0xff</literal><operator pos:start="91:41" pos:end="91:41">)</operator></expr></argument>,

                     <argument pos:start="93:22" pos:end="93:37"><expr pos:start="93:22" pos:end="93:37"><operator pos:start="93:22" pos:end="93:22">&amp;</operator><name pos:start="93:23" pos:end="93:37">vmstate_onenand</name></expr></argument>, <argument pos:start="93:40" pos:end="93:40"><expr pos:start="93:40" pos:end="93:40"><name pos:start="93:40" pos:end="93:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
