<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13298.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mpc7_decode_init</name><parameter_list pos:start="1:28" pos:end="1:51">(<parameter pos:start="1:29" pos:end="1:50"><decl pos:start="1:29" pos:end="1:50"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type> <name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">MPCContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">c</name> <init pos:start="7:19" pos:end="7:36">= <expr pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:25">avctx</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">GetBitContext</name></type> <name pos:start="9:19" pos:end="9:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:19"><name pos:start="11:13" pos:end="11:15">buf</name><index pos:start="11:16" pos:end="11:19">[<expr pos:start="11:17" pos:end="11:18"><literal type="number" pos:start="11:17" pos:end="11:18">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:14"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:14">int</name></type> <name pos:start="13:16" pos:end="13:25">vlc_inited</name> <init pos:start="13:27" pos:end="13:29">= <expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if<condition pos:start="17:7" pos:end="17:34">(<expr pos:start="17:8" pos:end="17:33"><name pos:start="17:8" pos:end="17:28"><name pos:start="17:8" pos:end="17:12">avctx</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:28">extradata_size</name></name> <operator pos:start="17:30" pos:end="17:30">&lt;</operator> <literal type="number" pos:start="17:32" pos:end="17:33">16</literal></expr>)</condition><block pos:start="17:35" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:18">

        <expr_stmt pos:start="19:9" pos:end="19:95"><expr pos:start="19:9" pos:end="19:94"><call pos:start="19:9" pos:end="19:94"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:94">(<argument pos:start="19:16" pos:end="19:20"><expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:20">avctx</name></expr></argument>, <argument pos:start="19:23" pos:end="19:34"><expr pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:37" pos:end="19:70"><expr pos:start="19:37" pos:end="19:70"><literal type="string" pos:start="19:37" pos:end="19:70">"Too small extradata size (%i)!\n"</literal></expr></argument>, <argument pos:start="19:73" pos:end="19:93"><expr pos:start="19:73" pos:end="19:93"><name pos:start="19:73" pos:end="19:93"><name pos:start="19:73" pos:end="19:77">avctx</name><operator pos:start="19:78" pos:end="19:79">-&gt;</operator><name pos:start="19:80" pos:end="19:93">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><call pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:10">memset</name><argument_list pos:start="25:11" pos:end="25:45">(<argument pos:start="25:12" pos:end="25:21"><expr pos:start="25:12" pos:end="25:21"><name pos:start="25:12" pos:end="25:21"><name pos:start="25:12" pos:end="25:12">c</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:21">oldDSCF</name></name></expr></argument>, <argument pos:start="25:24" pos:end="25:24"><expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">0</literal></expr></argument>, <argument pos:start="25:27" pos:end="25:44"><expr pos:start="25:27" pos:end="25:44"><sizeof pos:start="25:27" pos:end="25:44">sizeof<argument_list pos:start="25:33" pos:end="25:44">(<argument pos:start="25:34" pos:end="25:43"><expr pos:start="25:34" pos:end="25:43"><name pos:start="25:34" pos:end="25:43"><name pos:start="25:34" pos:end="25:34">c</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:43">oldDSCF</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><call pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:18">av_init_random</name><argument_list pos:start="27:19" pos:end="27:39">(<argument pos:start="27:20" pos:end="27:29"><expr pos:start="27:20" pos:end="27:29"><literal type="number" pos:start="27:20" pos:end="27:29">0xDEADBEEF</literal></expr></argument>, <argument pos:start="27:32" pos:end="27:38"><expr pos:start="27:32" pos:end="27:38"><operator pos:start="27:32" pos:end="27:32">&amp;</operator><name pos:start="27:33" pos:end="27:38"><name pos:start="27:33" pos:end="27:33">c</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:38">rnd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><call pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:16">dsputil_init</name><argument_list pos:start="29:17" pos:end="29:32">(<argument pos:start="29:18" pos:end="29:24"><expr pos:start="29:18" pos:end="29:24"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:24"><name pos:start="29:19" pos:end="29:19">c</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:24">dsp</name></name></expr></argument>, <argument pos:start="29:27" pos:end="29:31"><expr pos:start="29:27" pos:end="29:31"><name pos:start="29:27" pos:end="29:31">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:75"><expr pos:start="31:5" pos:end="31:74"><call pos:start="31:5" pos:end="31:74"><name pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:5">c</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:10">dsp</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:20">bswap_buf</name></name><argument_list pos:start="31:21" pos:end="31:74">(<argument pos:start="31:22" pos:end="31:35"><expr pos:start="31:22" pos:end="31:35"><operator pos:start="31:22" pos:end="31:22">(</operator><name pos:start="31:23" pos:end="31:30">uint32_t</name><operator pos:start="31:31" pos:end="31:31">*</operator><operator pos:start="31:32" pos:end="31:32">)</operator><name pos:start="31:33" pos:end="31:35">buf</name></expr></argument>, <argument pos:start="31:38" pos:end="31:70"><expr pos:start="31:38" pos:end="31:70"><operator pos:start="31:38" pos:end="31:38">(</operator><specifier pos:start="31:39" pos:end="31:43">const</specifier> <name pos:start="31:45" pos:end="31:52">uint32_t</name><operator pos:start="31:53" pos:end="31:53">*</operator><operator pos:start="31:54" pos:end="31:54">)</operator><name pos:start="31:55" pos:end="31:70"><name pos:start="31:55" pos:end="31:59">avctx</name><operator pos:start="31:60" pos:end="31:61">-&gt;</operator><name pos:start="31:62" pos:end="31:70">extradata</name></name></expr></argument>, <argument pos:start="31:73" pos:end="31:73"><expr pos:start="31:73" pos:end="31:73"><literal type="number" pos:start="31:73" pos:end="31:73">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><call pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:15">ff_mpc_init</name><argument_list pos:start="33:16" pos:end="33:17">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><call pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:17">init_get_bits</name><argument_list pos:start="35:18" pos:end="35:32">(<argument pos:start="35:19" pos:end="35:21"><expr pos:start="35:19" pos:end="35:21"><operator pos:start="35:19" pos:end="35:19">&amp;</operator><name pos:start="35:20" pos:end="35:21">gb</name></expr></argument>, <argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">buf</name></expr></argument>, <argument pos:start="35:29" pos:end="35:31"><expr pos:start="35:29" pos:end="35:31"><literal type="number" pos:start="35:29" pos:end="35:31">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:9"><name pos:start="39:5" pos:end="39:5">c</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:9">IS</name></name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:26"><name pos:start="39:13" pos:end="39:21">get_bits1</name><argument_list pos:start="39:22" pos:end="39:26">(<argument pos:start="39:23" pos:end="39:25"><expr pos:start="39:23" pos:end="39:25"><operator pos:start="39:23" pos:end="39:23">&amp;</operator><name pos:start="39:24" pos:end="39:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:28"><expr pos:start="41:5" pos:end="41:27"><name pos:start="41:5" pos:end="41:10"><name pos:start="41:5" pos:end="41:5">c</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:10">MSS</name></name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:27"><name pos:start="41:14" pos:end="41:22">get_bits1</name><argument_list pos:start="41:23" pos:end="41:27">(<argument pos:start="41:24" pos:end="41:26"><expr pos:start="41:24" pos:end="41:26"><operator pos:start="41:24" pos:end="41:24">&amp;</operator><name pos:start="41:25" pos:end="41:26">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:35"><expr pos:start="43:5" pos:end="43:34"><name pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:5">c</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:15">maxbands</name></name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:34"><name pos:start="43:19" pos:end="43:26">get_bits</name><argument_list pos:start="43:27" pos:end="43:34">(<argument pos:start="43:28" pos:end="43:30"><expr pos:start="43:28" pos:end="43:30"><operator pos:start="43:28" pos:end="43:28">&amp;</operator><name pos:start="43:29" pos:end="43:30">gb</name></expr></argument>, <argument pos:start="43:33" pos:end="43:33"><expr pos:start="43:33" pos:end="43:33"><literal type="number" pos:start="43:33" pos:end="43:33">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if<condition pos:start="45:7" pos:end="45:28">(<expr pos:start="45:8" pos:end="45:27"><name pos:start="45:8" pos:end="45:18"><name pos:start="45:8" pos:end="45:8">c</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:18">maxbands</name></name> <operator pos:start="45:20" pos:end="45:21">&gt;=</operator> <name pos:start="45:23" pos:end="45:27">BANDS</name></expr>)</condition><block pos:start="45:29" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:18">

        <expr_stmt pos:start="47:9" pos:end="47:73"><expr pos:start="47:9" pos:end="47:72"><call pos:start="47:9" pos:end="47:72"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:72">(<argument pos:start="47:16" pos:end="47:20"><expr pos:start="47:16" pos:end="47:20"><name pos:start="47:16" pos:end="47:20">avctx</name></expr></argument>, <argument pos:start="47:23" pos:end="47:34"><expr pos:start="47:23" pos:end="47:34"><name pos:start="47:23" pos:end="47:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:37" pos:end="47:58"><expr pos:start="47:37" pos:end="47:58"><literal type="string" pos:start="47:37" pos:end="47:58">"Too many bands: %i\n"</literal></expr></argument>, <argument pos:start="47:61" pos:end="47:71"><expr pos:start="47:61" pos:end="47:71"><name pos:start="47:61" pos:end="47:71"><name pos:start="47:61" pos:end="47:61">c</name><operator pos:start="47:62" pos:end="47:63">-&gt;</operator><name pos:start="47:64" pos:end="47:71">maxbands</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:18">return <expr pos:start="49:16" pos:end="49:17"><operator pos:start="49:16" pos:end="49:16">-</operator><literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:23"><expr pos:start="53:5" pos:end="53:22"><call pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:13">skip_bits</name><argument_list pos:start="53:14" pos:end="53:22">(<argument pos:start="53:15" pos:end="53:17"><expr pos:start="53:15" pos:end="53:17"><operator pos:start="53:15" pos:end="53:15">&amp;</operator><name pos:start="53:16" pos:end="53:17">gb</name></expr></argument>, <argument pos:start="53:20" pos:end="53:21"><expr pos:start="53:20" pos:end="53:21"><literal type="number" pos:start="53:20" pos:end="53:21">88</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:32"><expr pos:start="55:5" pos:end="55:31"><name pos:start="55:5" pos:end="55:14"><name pos:start="55:5" pos:end="55:5">c</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:14">gapless</name></name> <operator pos:start="55:16" pos:end="55:16">=</operator> <call pos:start="55:18" pos:end="55:31"><name pos:start="55:18" pos:end="55:26">get_bits1</name><argument_list pos:start="55:27" pos:end="55:31">(<argument pos:start="55:28" pos:end="55:30"><expr pos:start="55:28" pos:end="55:30"><operator pos:start="55:28" pos:end="55:28">&amp;</operator><name pos:start="55:29" pos:end="55:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:40"><expr pos:start="57:5" pos:end="57:39"><name pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:5">c</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:19">lastframelen</name></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <call pos:start="57:23" pos:end="57:39"><name pos:start="57:23" pos:end="57:30">get_bits</name><argument_list pos:start="57:31" pos:end="57:39">(<argument pos:start="57:32" pos:end="57:34"><expr pos:start="57:32" pos:end="57:34"><operator pos:start="57:32" pos:end="57:32">&amp;</operator><name pos:start="57:33" pos:end="57:34">gb</name></expr></argument>, <argument pos:start="57:37" pos:end="57:38"><expr pos:start="57:37" pos:end="57:38"><literal type="number" pos:start="57:37" pos:end="57:38">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="61:69"><expr pos:start="59:5" pos:end="61:68"><call pos:start="59:5" pos:end="61:68"><name pos:start="59:5" pos:end="59:10">av_log</name><argument_list pos:start="59:11" pos:end="61:68">(<argument pos:start="59:12" pos:end="59:16"><expr pos:start="59:12" pos:end="59:16"><name pos:start="59:12" pos:end="59:16">avctx</name></expr></argument>, <argument pos:start="59:19" pos:end="59:30"><expr pos:start="59:19" pos:end="59:30"><name pos:start="59:19" pos:end="59:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="59:33" pos:end="59:79"><expr pos:start="59:33" pos:end="59:79"><literal type="string" pos:start="59:33" pos:end="59:79">"IS: %d, MSS: %d, TG: %d, LFL: %d, bands: %d\n"</literal></expr></argument>,

            <argument pos:start="61:13" pos:end="61:17"><expr pos:start="61:13" pos:end="61:17"><name pos:start="61:13" pos:end="61:17"><name pos:start="61:13" pos:end="61:13">c</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:17">IS</name></name></expr></argument>, <argument pos:start="61:20" pos:end="61:25"><expr pos:start="61:20" pos:end="61:25"><name pos:start="61:20" pos:end="61:25"><name pos:start="61:20" pos:end="61:20">c</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:25">MSS</name></name></expr></argument>, <argument pos:start="61:28" pos:end="61:37"><expr pos:start="61:28" pos:end="61:37"><name pos:start="61:28" pos:end="61:37"><name pos:start="61:28" pos:end="61:28">c</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:37">gapless</name></name></expr></argument>, <argument pos:start="61:40" pos:end="61:54"><expr pos:start="61:40" pos:end="61:54"><name pos:start="61:40" pos:end="61:54"><name pos:start="61:40" pos:end="61:40">c</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:54">lastframelen</name></name></expr></argument>, <argument pos:start="61:57" pos:end="61:67"><expr pos:start="61:57" pos:end="61:67"><name pos:start="61:57" pos:end="61:67"><name pos:start="61:57" pos:end="61:57">c</name><operator pos:start="61:58" pos:end="61:59">-&gt;</operator><name pos:start="61:60" pos:end="61:67">maxbands</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:26"><expr pos:start="63:5" pos:end="63:25"><name pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:5">c</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:21">frames_to_skip</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:25">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="67:28"><if pos:start="67:5" pos:end="67:28">if<condition pos:start="67:7" pos:end="67:18">(<expr pos:start="67:8" pos:end="67:17"><name pos:start="67:8" pos:end="67:17">vlc_inited</name></expr>)</condition><block type="pseudo" pos:start="67:20" pos:end="67:28"><block_content pos:start="67:20" pos:end="67:28"> <return pos:start="67:20" pos:end="67:28">return <expr pos:start="67:27" pos:end="67:27"><literal type="number" pos:start="67:27" pos:end="67:27">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:49"><expr pos:start="69:5" pos:end="69:48"><call pos:start="69:5" pos:end="69:48"><name pos:start="69:5" pos:end="69:10">av_log</name><argument_list pos:start="69:11" pos:end="69:48">(<argument pos:start="69:12" pos:end="69:16"><expr pos:start="69:12" pos:end="69:16"><name pos:start="69:12" pos:end="69:16">avctx</name></expr></argument>, <argument pos:start="69:19" pos:end="69:30"><expr pos:start="69:19" pos:end="69:30"><name pos:start="69:19" pos:end="69:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="69:33" pos:end="69:47"><expr pos:start="69:33" pos:end="69:47"><literal type="string" pos:start="69:33" pos:end="69:47">"Initing VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="81:5"><if pos:start="71:5" pos:end="81:5">if<condition pos:start="71:7" pos:end="75:58">(<expr pos:start="71:8" pos:end="75:57"><call pos:start="71:8" pos:end="75:57"><name pos:start="71:8" pos:end="71:15">init_vlc</name><argument_list pos:start="71:16" pos:end="75:57">(<argument pos:start="71:17" pos:end="71:25"><expr pos:start="71:17" pos:end="71:25"><operator pos:start="71:17" pos:end="71:17">&amp;</operator><name pos:start="71:18" pos:end="71:25">scfi_vlc</name></expr></argument>, <argument pos:start="71:28" pos:end="71:41"><expr pos:start="71:28" pos:end="71:41"><name pos:start="71:28" pos:end="71:41">MPC7_SCFI_BITS</name></expr></argument>, <argument pos:start="71:44" pos:end="71:57"><expr pos:start="71:44" pos:end="71:57"><name pos:start="71:44" pos:end="71:57">MPC7_SCFI_SIZE</name></expr></argument>,

                <argument pos:start="73:17" pos:end="73:29"><expr pos:start="73:17" pos:end="73:29"><operator pos:start="73:17" pos:end="73:17">&amp;</operator><name pos:start="73:18" pos:end="73:29"><name pos:start="73:18" pos:end="73:26">mpc7_scfi</name><index pos:start="73:27" pos:end="73:29">[<expr pos:start="73:28" pos:end="73:28"><literal type="number" pos:start="73:28" pos:end="73:28">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="73:32" pos:end="73:32"><expr pos:start="73:32" pos:end="73:32"><literal type="number" pos:start="73:32" pos:end="73:32">2</literal></expr></argument>, <argument pos:start="73:35" pos:end="73:35"><expr pos:start="73:35" pos:end="73:35"><literal type="number" pos:start="73:35" pos:end="73:35">1</literal></expr></argument>,

                <argument pos:start="75:17" pos:end="75:29"><expr pos:start="75:17" pos:end="75:29"><operator pos:start="75:17" pos:end="75:17">&amp;</operator><name pos:start="75:18" pos:end="75:29"><name pos:start="75:18" pos:end="75:26">mpc7_scfi</name><index pos:start="75:27" pos:end="75:29">[<expr pos:start="75:28" pos:end="75:28"><literal type="number" pos:start="75:28" pos:end="75:28">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:32" pos:end="75:32"><expr pos:start="75:32" pos:end="75:32"><literal type="number" pos:start="75:32" pos:end="75:32">2</literal></expr></argument>, <argument pos:start="75:35" pos:end="75:35"><expr pos:start="75:35" pos:end="75:35"><literal type="number" pos:start="75:35" pos:end="75:35">1</literal></expr></argument>, <argument pos:start="75:38" pos:end="75:56"><expr pos:start="75:38" pos:end="75:56"><name pos:start="75:38" pos:end="75:56">INIT_VLC_USE_STATIC</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="75:59" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:18">

        <expr_stmt pos:start="77:9" pos:end="77:62"><expr pos:start="77:9" pos:end="77:61"><call pos:start="77:9" pos:end="77:61"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="77:61">(<argument pos:start="77:16" pos:end="77:20"><expr pos:start="77:16" pos:end="77:20"><name pos:start="77:16" pos:end="77:20">avctx</name></expr></argument>, <argument pos:start="77:23" pos:end="77:34"><expr pos:start="77:23" pos:end="77:34"><name pos:start="77:23" pos:end="77:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:37" pos:end="77:60"><expr pos:start="77:37" pos:end="77:60"><literal type="string" pos:start="77:37" pos:end="77:60">"Cannot init SCFI VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:18">return <expr pos:start="79:16" pos:end="79:17"><operator pos:start="79:16" pos:end="79:16">-</operator><literal type="number" pos:start="79:17" pos:end="79:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="83:5" pos:end="93:5"><if pos:start="83:5" pos:end="93:5">if<condition pos:start="83:7" pos:end="87:58">(<expr pos:start="83:8" pos:end="87:57"><call pos:start="83:8" pos:end="87:57"><name pos:start="83:8" pos:end="83:15">init_vlc</name><argument_list pos:start="83:16" pos:end="87:57">(<argument pos:start="83:17" pos:end="83:25"><expr pos:start="83:17" pos:end="83:25"><operator pos:start="83:17" pos:end="83:17">&amp;</operator><name pos:start="83:18" pos:end="83:25">dscf_vlc</name></expr></argument>, <argument pos:start="83:28" pos:end="83:41"><expr pos:start="83:28" pos:end="83:41"><name pos:start="83:28" pos:end="83:41">MPC7_DSCF_BITS</name></expr></argument>, <argument pos:start="83:44" pos:end="83:57"><expr pos:start="83:44" pos:end="83:57"><name pos:start="83:44" pos:end="83:57">MPC7_DSCF_SIZE</name></expr></argument>,

                <argument pos:start="85:17" pos:end="85:29"><expr pos:start="85:17" pos:end="85:29"><operator pos:start="85:17" pos:end="85:17">&amp;</operator><name pos:start="85:18" pos:end="85:29"><name pos:start="85:18" pos:end="85:26">mpc7_dscf</name><index pos:start="85:27" pos:end="85:29">[<expr pos:start="85:28" pos:end="85:28"><literal type="number" pos:start="85:28" pos:end="85:28">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="85:32" pos:end="85:32"><expr pos:start="85:32" pos:end="85:32"><literal type="number" pos:start="85:32" pos:end="85:32">2</literal></expr></argument>, <argument pos:start="85:35" pos:end="85:35"><expr pos:start="85:35" pos:end="85:35"><literal type="number" pos:start="85:35" pos:end="85:35">1</literal></expr></argument>,

                <argument pos:start="87:17" pos:end="87:29"><expr pos:start="87:17" pos:end="87:29"><operator pos:start="87:17" pos:end="87:17">&amp;</operator><name pos:start="87:18" pos:end="87:29"><name pos:start="87:18" pos:end="87:26">mpc7_dscf</name><index pos:start="87:27" pos:end="87:29">[<expr pos:start="87:28" pos:end="87:28"><literal type="number" pos:start="87:28" pos:end="87:28">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="87:32" pos:end="87:32"><expr pos:start="87:32" pos:end="87:32"><literal type="number" pos:start="87:32" pos:end="87:32">2</literal></expr></argument>, <argument pos:start="87:35" pos:end="87:35"><expr pos:start="87:35" pos:end="87:35"><literal type="number" pos:start="87:35" pos:end="87:35">1</literal></expr></argument>, <argument pos:start="87:38" pos:end="87:56"><expr pos:start="87:38" pos:end="87:56"><name pos:start="87:38" pos:end="87:56">INIT_VLC_USE_STATIC</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="87:59" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:18">

        <expr_stmt pos:start="89:9" pos:end="89:62"><expr pos:start="89:9" pos:end="89:61"><call pos:start="89:9" pos:end="89:61"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="89:61">(<argument pos:start="89:16" pos:end="89:20"><expr pos:start="89:16" pos:end="89:20"><name pos:start="89:16" pos:end="89:20">avctx</name></expr></argument>, <argument pos:start="89:23" pos:end="89:34"><expr pos:start="89:23" pos:end="89:34"><name pos:start="89:23" pos:end="89:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:37" pos:end="89:60"><expr pos:start="89:37" pos:end="89:60"><literal type="string" pos:start="89:37" pos:end="89:60">"Cannot init DSCF VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="91:9" pos:end="91:18">return <expr pos:start="91:16" pos:end="91:17"><operator pos:start="91:16" pos:end="91:16">-</operator><literal type="number" pos:start="91:17" pos:end="91:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="95:5" pos:end="105:5"><if pos:start="95:5" pos:end="105:5">if<condition pos:start="95:7" pos:end="99:57">(<expr pos:start="95:8" pos:end="99:56"><call pos:start="95:8" pos:end="99:56"><name pos:start="95:8" pos:end="95:15">init_vlc</name><argument_list pos:start="95:16" pos:end="99:56">(<argument pos:start="95:17" pos:end="95:24"><expr pos:start="95:17" pos:end="95:24"><operator pos:start="95:17" pos:end="95:17">&amp;</operator><name pos:start="95:18" pos:end="95:24">hdr_vlc</name></expr></argument>, <argument pos:start="95:27" pos:end="95:39"><expr pos:start="95:27" pos:end="95:39"><name pos:start="95:27" pos:end="95:39">MPC7_HDR_BITS</name></expr></argument>, <argument pos:start="95:42" pos:end="95:54"><expr pos:start="95:42" pos:end="95:54"><name pos:start="95:42" pos:end="95:54">MPC7_HDR_SIZE</name></expr></argument>,

                <argument pos:start="97:17" pos:end="97:28"><expr pos:start="97:17" pos:end="97:28"><operator pos:start="97:17" pos:end="97:17">&amp;</operator><name pos:start="97:18" pos:end="97:28"><name pos:start="97:18" pos:end="97:25">mpc7_hdr</name><index pos:start="97:26" pos:end="97:28">[<expr pos:start="97:27" pos:end="97:27"><literal type="number" pos:start="97:27" pos:end="97:27">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="97:31" pos:end="97:31"><expr pos:start="97:31" pos:end="97:31"><literal type="number" pos:start="97:31" pos:end="97:31">2</literal></expr></argument>, <argument pos:start="97:34" pos:end="97:34"><expr pos:start="97:34" pos:end="97:34"><literal type="number" pos:start="97:34" pos:end="97:34">1</literal></expr></argument>,

                <argument pos:start="99:17" pos:end="99:28"><expr pos:start="99:17" pos:end="99:28"><operator pos:start="99:17" pos:end="99:17">&amp;</operator><name pos:start="99:18" pos:end="99:28"><name pos:start="99:18" pos:end="99:25">mpc7_hdr</name><index pos:start="99:26" pos:end="99:28">[<expr pos:start="99:27" pos:end="99:27"><literal type="number" pos:start="99:27" pos:end="99:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="99:31" pos:end="99:31"><expr pos:start="99:31" pos:end="99:31"><literal type="number" pos:start="99:31" pos:end="99:31">2</literal></expr></argument>, <argument pos:start="99:34" pos:end="99:34"><expr pos:start="99:34" pos:end="99:34"><literal type="number" pos:start="99:34" pos:end="99:34">1</literal></expr></argument>, <argument pos:start="99:37" pos:end="99:55"><expr pos:start="99:37" pos:end="99:55"><name pos:start="99:37" pos:end="99:55">INIT_VLC_USE_STATIC</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="99:58" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:18">

        <expr_stmt pos:start="101:9" pos:end="101:61"><expr pos:start="101:9" pos:end="101:60"><call pos:start="101:9" pos:end="101:60"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:60">(<argument pos:start="101:16" pos:end="101:20"><expr pos:start="101:16" pos:end="101:20"><name pos:start="101:16" pos:end="101:20">avctx</name></expr></argument>, <argument pos:start="101:23" pos:end="101:34"><expr pos:start="101:23" pos:end="101:34"><name pos:start="101:23" pos:end="101:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:37" pos:end="101:59"><expr pos:start="101:37" pos:end="101:59"><literal type="string" pos:start="101:37" pos:end="101:59">"Cannot init HDR VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:18">return <expr pos:start="103:16" pos:end="103:17"><operator pos:start="103:16" pos:end="103:16">-</operator><literal type="number" pos:start="103:17" pos:end="103:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="107:5" pos:end="125:5">for<control pos:start="107:8" pos:end="107:46">(<init pos:start="107:9" pos:end="107:14"><expr pos:start="107:9" pos:end="107:13"><name pos:start="107:9" pos:end="107:9">i</name> <operator pos:start="107:11" pos:end="107:11">=</operator> <literal type="number" pos:start="107:13" pos:end="107:13">0</literal></expr>;</init> <condition pos:start="107:16" pos:end="107:41"><expr pos:start="107:16" pos:end="107:40"><name pos:start="107:16" pos:end="107:16">i</name> <operator pos:start="107:18" pos:end="107:18">&lt;</operator> <name pos:start="107:20" pos:end="107:40">MPC7_QUANT_VLC_TABLES</name></expr>;</condition> <incr pos:start="107:43" pos:end="107:45"><expr pos:start="107:43" pos:end="107:45"><name pos:start="107:43" pos:end="107:43">i</name><operator pos:start="107:44" pos:end="107:45">++</operator></expr></incr>)</control><block pos:start="107:47" pos:end="125:5">{<block_content pos:start="109:9" pos:end="123:9">

        <for pos:start="109:9" pos:end="123:9">for<control pos:start="109:12" pos:end="109:30">(<init pos:start="109:13" pos:end="109:18"><expr pos:start="109:13" pos:end="109:17"><name pos:start="109:13" pos:end="109:13">j</name> <operator pos:start="109:15" pos:end="109:15">=</operator> <literal type="number" pos:start="109:17" pos:end="109:17">0</literal></expr>;</init> <condition pos:start="109:20" pos:end="109:25"><expr pos:start="109:20" pos:end="109:24"><name pos:start="109:20" pos:end="109:20">j</name> <operator pos:start="109:22" pos:end="109:22">&lt;</operator> <literal type="number" pos:start="109:24" pos:end="109:24">2</literal></expr>;</condition> <incr pos:start="109:27" pos:end="109:29"><expr pos:start="109:27" pos:end="109:29"><name pos:start="109:27" pos:end="109:27">j</name><operator pos:start="109:28" pos:end="109:29">++</operator></expr></incr>)</control><block pos:start="109:31" pos:end="123:9">{<block_content pos:start="111:13" pos:end="121:13">

            <if_stmt pos:start="111:13" pos:end="121:13"><if pos:start="111:13" pos:end="121:13">if<condition pos:start="111:15" pos:end="115:77">(<expr pos:start="111:16" pos:end="115:76"><call pos:start="111:16" pos:end="115:76"><name pos:start="111:16" pos:end="111:23">init_vlc</name><argument_list pos:start="111:24" pos:end="115:76">(<argument pos:start="111:25" pos:end="111:40"><expr pos:start="111:25" pos:end="111:40"><operator pos:start="111:25" pos:end="111:25">&amp;</operator><name pos:start="111:26" pos:end="111:40"><name pos:start="111:26" pos:end="111:34">quant_vlc</name><index pos:start="111:35" pos:end="111:37">[<expr pos:start="111:36" pos:end="111:36"><name pos:start="111:36" pos:end="111:36">i</name></expr>]</index><index pos:start="111:38" pos:end="111:40">[<expr pos:start="111:39" pos:end="111:39"><name pos:start="111:39" pos:end="111:39">j</name></expr>]</index></name></expr></argument>, <argument pos:start="111:43" pos:end="111:43"><expr pos:start="111:43" pos:end="111:43"><literal type="number" pos:start="111:43" pos:end="111:43">9</literal></expr></argument>, <argument pos:start="111:46" pos:end="111:68"><expr pos:start="111:46" pos:end="111:68"><name pos:start="111:46" pos:end="111:68"><name pos:start="111:46" pos:end="111:65">mpc7_quant_vlc_sizes</name><index pos:start="111:66" pos:end="111:68">[<expr pos:start="111:67" pos:end="111:67"><name pos:start="111:67" pos:end="111:67">i</name></expr>]</index></name></expr></argument>,

                        <argument pos:start="113:25" pos:end="113:48"><expr pos:start="113:25" pos:end="113:48"><operator pos:start="113:25" pos:end="113:25">&amp;</operator><name pos:start="113:26" pos:end="113:48"><name pos:start="113:26" pos:end="113:39">mpc7_quant_vlc</name><index pos:start="113:40" pos:end="113:42">[<expr pos:start="113:41" pos:end="113:41"><name pos:start="113:41" pos:end="113:41">i</name></expr>]</index><index pos:start="113:43" pos:end="113:45">[<expr pos:start="113:44" pos:end="113:44"><name pos:start="113:44" pos:end="113:44">j</name></expr>]</index><index pos:start="113:46" pos:end="113:48">[<expr pos:start="113:47" pos:end="113:47"><literal type="number" pos:start="113:47" pos:end="113:47">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="113:51" pos:end="113:51"><expr pos:start="113:51" pos:end="113:51"><literal type="number" pos:start="113:51" pos:end="113:51">4</literal></expr></argument>, <argument pos:start="113:54" pos:end="113:54"><expr pos:start="113:54" pos:end="113:54"><literal type="number" pos:start="113:54" pos:end="113:54">2</literal></expr></argument>,

                        <argument pos:start="115:25" pos:end="115:48"><expr pos:start="115:25" pos:end="115:48"><operator pos:start="115:25" pos:end="115:25">&amp;</operator><name pos:start="115:26" pos:end="115:48"><name pos:start="115:26" pos:end="115:39">mpc7_quant_vlc</name><index pos:start="115:40" pos:end="115:42">[<expr pos:start="115:41" pos:end="115:41"><name pos:start="115:41" pos:end="115:41">i</name></expr>]</index><index pos:start="115:43" pos:end="115:45">[<expr pos:start="115:44" pos:end="115:44"><name pos:start="115:44" pos:end="115:44">j</name></expr>]</index><index pos:start="115:46" pos:end="115:48">[<expr pos:start="115:47" pos:end="115:47"><literal type="number" pos:start="115:47" pos:end="115:47">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="115:51" pos:end="115:51"><expr pos:start="115:51" pos:end="115:51"><literal type="number" pos:start="115:51" pos:end="115:51">4</literal></expr></argument>, <argument pos:start="115:54" pos:end="115:54"><expr pos:start="115:54" pos:end="115:54"><literal type="number" pos:start="115:54" pos:end="115:54">2</literal></expr></argument>, <argument pos:start="115:57" pos:end="115:75"><expr pos:start="115:57" pos:end="115:75"><name pos:start="115:57" pos:end="115:75">INIT_VLC_USE_STATIC</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="115:78" pos:end="121:13">{<block_content pos:start="117:17" pos:end="119:26">

                <expr_stmt pos:start="117:17" pos:end="117:81"><expr pos:start="117:17" pos:end="117:80"><call pos:start="117:17" pos:end="117:80"><name pos:start="117:17" pos:end="117:22">av_log</name><argument_list pos:start="117:23" pos:end="117:80">(<argument pos:start="117:24" pos:end="117:28"><expr pos:start="117:24" pos:end="117:28"><name pos:start="117:24" pos:end="117:28">avctx</name></expr></argument>, <argument pos:start="117:31" pos:end="117:42"><expr pos:start="117:31" pos:end="117:42"><name pos:start="117:31" pos:end="117:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="117:45" pos:end="117:75"><expr pos:start="117:45" pos:end="117:75"><literal type="string" pos:start="117:45" pos:end="117:75">"Cannot init QUANT VLC %i,%i\n"</literal></expr></argument>,<argument pos:start="117:77" pos:end="117:77"><expr pos:start="117:77" pos:end="117:77"><name pos:start="117:77" pos:end="117:77">i</name></expr></argument>,<argument pos:start="117:79" pos:end="117:79"><expr pos:start="117:79" pos:end="117:79"><name pos:start="117:79" pos:end="117:79">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="119:17" pos:end="119:26">return <expr pos:start="119:24" pos:end="119:25"><operator pos:start="119:24" pos:end="119:24">-</operator><literal type="number" pos:start="119:25" pos:end="119:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="127:5" pos:end="127:19"><expr pos:start="127:5" pos:end="127:18"><name pos:start="127:5" pos:end="127:14">vlc_inited</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">1</literal></expr>;</expr_stmt>

    <return pos:start="129:5" pos:end="129:13">return <expr pos:start="129:12" pos:end="129:12"><literal type="number" pos:start="129:12" pos:end="129:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
