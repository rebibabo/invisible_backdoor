<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6328.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">double</name></type> <name pos:start="1:15" pos:end="1:23">fade_gain</name><parameter_list pos:start="1:24" pos:end="1:60">(<parameter pos:start="1:25" pos:end="1:33"><decl pos:start="1:25" pos:end="1:33"><type pos:start="1:25" pos:end="1:33"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:33">curve</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:42">int64_t</name></type> <name pos:start="1:44" pos:end="1:48">index</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:59"><decl pos:start="1:51" pos:end="1:59"><type pos:start="1:51" pos:end="1:59"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:59">range</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:16">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">double</name></type> <name pos:start="5:12" pos:end="5:15">gain</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:49"><expr pos:start="9:5" pos:end="9:48"><name pos:start="9:5" pos:end="9:8">gain</name> <operator pos:start="9:10" pos:end="9:10">=</operator> <call pos:start="9:12" pos:end="9:48"><name pos:start="9:12" pos:end="9:19">av_clipd</name><argument_list pos:start="9:20" pos:end="9:48">(<argument pos:start="9:21" pos:end="9:39"><expr pos:start="9:21" pos:end="9:39"><literal type="number" pos:start="9:21" pos:end="9:23">1.0</literal> <operator pos:start="9:25" pos:end="9:25">*</operator> <name pos:start="9:27" pos:end="9:31">index</name> <operator pos:start="9:33" pos:end="9:33">/</operator> <name pos:start="9:35" pos:end="9:39">range</name></expr></argument>, <argument pos:start="9:42" pos:end="9:42"><expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">0</literal></expr></argument>, <argument pos:start="9:45" pos:end="9:47"><expr pos:start="9:45" pos:end="9:47"><literal type="number" pos:start="9:45" pos:end="9:47">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="13:5" pos:end="105:5">switch <condition pos:start="13:12" pos:end="13:18">(<expr pos:start="13:13" pos:end="13:17"><name pos:start="13:13" pos:end="13:17">curve</name></expr>)</condition> <block pos:start="13:20" pos:end="105:5">{<block_content pos:start="15:5" pos:end="103:14">

    <case pos:start="15:5" pos:end="15:14">case <expr pos:start="15:10" pos:end="15:13"><name pos:start="15:10" pos:end="15:13">QSIN</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:38"><expr pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:12">gain</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:37"><name pos:start="17:16" pos:end="17:18">sin</name><argument_list pos:start="17:19" pos:end="17:37">(<argument pos:start="17:20" pos:end="17:36"><expr pos:start="17:20" pos:end="17:36"><name pos:start="17:20" pos:end="17:23">gain</name> <operator pos:start="17:25" pos:end="17:25">*</operator> <name pos:start="17:27" pos:end="17:30">M_PI</name> <operator pos:start="17:32" pos:end="17:32">/</operator> <literal type="number" pos:start="17:34" pos:end="17:36">2.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:15">case <expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:14">IQSIN</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:37"><expr pos:start="23:9" pos:end="23:36"><name pos:start="23:9" pos:end="23:12">gain</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <literal type="number" pos:start="23:16" pos:end="23:23">0.636943</literal> <operator pos:start="23:25" pos:end="23:25">*</operator> <call pos:start="23:27" pos:end="23:36"><name pos:start="23:27" pos:end="23:30">asin</name><argument_list pos:start="23:31" pos:end="23:36">(<argument pos:start="23:32" pos:end="23:35"><expr pos:start="23:32" pos:end="23:35"><name pos:start="23:32" pos:end="23:35">gain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:14">case <expr pos:start="27:10" pos:end="27:13"><name pos:start="27:10" pos:end="27:13">ESIN</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:66"><expr pos:start="29:9" pos:end="29:65"><name pos:start="29:9" pos:end="29:12">gain</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <literal type="number" pos:start="29:16" pos:end="29:20">1.0</literal> <operator pos:start="29:20" pos:end="29:20">-</operator> <call pos:start="29:22" pos:end="29:65"><name pos:start="29:22" pos:end="29:24">cos</name><argument_list pos:start="29:25" pos:end="29:65">(<argument pos:start="29:26" pos:end="29:64"><expr pos:start="29:26" pos:end="29:64"><name pos:start="29:26" pos:end="29:29">M_PI</name> <operator pos:start="29:31" pos:end="29:31">/</operator> <literal type="number" pos:start="29:33" pos:end="29:35">4.0</literal> <operator pos:start="29:37" pos:end="29:37">*</operator> <operator pos:start="29:39" pos:end="29:39">(</operator><call pos:start="29:40" pos:end="29:59"><name pos:start="29:40" pos:end="29:42">pow</name><argument_list pos:start="29:43" pos:end="29:59">(<argument pos:start="29:44" pos:end="29:55"><expr pos:start="29:44" pos:end="29:55"><literal type="number" pos:start="29:44" pos:end="29:46">2.0</literal><operator pos:start="29:47" pos:end="29:47">*</operator><name pos:start="29:48" pos:end="29:51">gain</name> <operator pos:start="29:53" pos:end="29:53">-</operator> <literal type="number" pos:start="29:55" pos:end="29:55">1</literal></expr></argument>, <argument pos:start="29:58" pos:end="29:58"><expr pos:start="29:58" pos:end="29:58"><literal type="number" pos:start="29:58" pos:end="29:58">3</literal></expr></argument>)</argument_list></call> <operator pos:start="29:61" pos:end="29:61">+</operator> <literal type="number" pos:start="29:63" pos:end="29:63">1</literal><operator pos:start="29:64" pos:end="29:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:14">case <expr pos:start="33:10" pos:end="33:13"><name pos:start="33:10" pos:end="33:13">HSIN</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:46"><expr pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:12">gain</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <operator pos:start="35:16" pos:end="35:16">(</operator><literal type="number" pos:start="35:17" pos:end="35:21">1.0</literal> <operator pos:start="35:21" pos:end="35:21">-</operator> <call pos:start="35:23" pos:end="35:38"><name pos:start="35:23" pos:end="35:25">cos</name><argument_list pos:start="35:26" pos:end="35:38">(<argument pos:start="35:27" pos:end="35:37"><expr pos:start="35:27" pos:end="35:37"><name pos:start="35:27" pos:end="35:30">gain</name> <operator pos:start="35:32" pos:end="35:32">*</operator> <name pos:start="35:34" pos:end="35:37">M_PI</name></expr></argument>)</argument_list></call><operator pos:start="35:39" pos:end="35:39">)</operator> <operator pos:start="35:41" pos:end="35:41">/</operator> <literal type="number" pos:start="35:43" pos:end="35:45">2.0</literal></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:15">case <expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:14">IHSIN</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:45"><expr pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:12">gain</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <literal type="number" pos:start="41:16" pos:end="41:23">0.318471</literal> <operator pos:start="41:25" pos:end="41:25">*</operator> <call pos:start="41:27" pos:end="41:44"><name pos:start="41:27" pos:end="41:30">acos</name><argument_list pos:start="41:31" pos:end="41:44">(<argument pos:start="41:32" pos:end="41:43"><expr pos:start="41:32" pos:end="41:43"><literal type="number" pos:start="41:32" pos:end="41:34">1</literal> <operator pos:start="41:34" pos:end="41:34">-</operator> <literal type="number" pos:start="41:36" pos:end="41:36">2</literal> <operator pos:start="41:38" pos:end="41:38">*</operator> <name pos:start="41:40" pos:end="41:43">gain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:13">case <expr pos:start="45:10" pos:end="45:12"><name pos:start="45:10" pos:end="45:12">EXP</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:42"><expr pos:start="47:9" pos:end="47:41"><name pos:start="47:9" pos:end="47:12">gain</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:41"><name pos:start="47:16" pos:end="47:18">pow</name><argument_list pos:start="47:19" pos:end="47:41">(<argument pos:start="47:20" pos:end="47:22"><expr pos:start="47:20" pos:end="47:22"><literal type="number" pos:start="47:20" pos:end="47:22">0.1</literal></expr></argument>, <argument pos:start="47:25" pos:end="47:40"><expr pos:start="47:25" pos:end="47:40"><operator pos:start="47:25" pos:end="47:25">(</operator><literal type="number" pos:start="47:26" pos:end="47:28">1</literal> <operator pos:start="47:28" pos:end="47:28">-</operator> <name pos:start="47:30" pos:end="47:33">gain</name><operator pos:start="47:34" pos:end="47:34">)</operator> <operator pos:start="47:36" pos:end="47:36">*</operator> <literal type="number" pos:start="47:38" pos:end="47:40">5.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:13">case <expr pos:start="51:10" pos:end="51:12"><name pos:start="51:10" pos:end="51:12">LOG</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:64"><expr pos:start="53:9" pos:end="53:63"><name pos:start="53:9" pos:end="53:12">gain</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <call pos:start="53:16" pos:end="53:63"><name pos:start="53:16" pos:end="53:23">av_clipd</name><argument_list pos:start="53:24" pos:end="53:63">(<argument pos:start="53:25" pos:end="53:54"><expr pos:start="53:25" pos:end="53:54"><literal type="number" pos:start="53:25" pos:end="53:33">0.0868589</literal> <operator pos:start="53:35" pos:end="53:35">*</operator> <call pos:start="53:37" pos:end="53:54"><name pos:start="53:37" pos:end="53:39">log</name><argument_list pos:start="53:40" pos:end="53:54">(<argument pos:start="53:41" pos:end="53:53"><expr pos:start="53:41" pos:end="53:53"><literal type="number" pos:start="53:41" pos:end="53:46">100000</literal> <operator pos:start="53:48" pos:end="53:48">*</operator> <name pos:start="53:50" pos:end="53:53">gain</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:57" pos:end="53:57"><expr pos:start="53:57" pos:end="53:57"><literal type="number" pos:start="53:57" pos:end="53:57">0</literal></expr></argument>, <argument pos:start="53:60" pos:end="53:62"><expr pos:start="53:60" pos:end="53:62"><literal type="number" pos:start="53:60" pos:end="53:62">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:13">case <expr pos:start="57:10" pos:end="57:12"><name pos:start="57:10" pos:end="57:12">PAR</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:34"><expr pos:start="59:9" pos:end="59:33"><name pos:start="59:9" pos:end="59:12">gain</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <literal type="number" pos:start="59:16" pos:end="59:18">1</literal> <operator pos:start="59:18" pos:end="59:18">-</operator> <call pos:start="59:20" pos:end="59:33"><name pos:start="59:20" pos:end="59:23">sqrt</name><argument_list pos:start="59:24" pos:end="59:33">(<argument pos:start="59:25" pos:end="59:32"><expr pos:start="59:25" pos:end="59:32"><literal type="number" pos:start="59:25" pos:end="59:27">1</literal> <operator pos:start="59:27" pos:end="59:27">-</operator> <name pos:start="59:29" pos:end="59:32">gain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:14">case <expr pos:start="63:10" pos:end="63:13"><name pos:start="63:10" pos:end="63:13">IPAR</name></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:45"><expr pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:12">gain</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <operator pos:start="65:16" pos:end="65:16">(</operator><literal type="number" pos:start="65:17" pos:end="65:19">1</literal> <operator pos:start="65:19" pos:end="65:19">-</operator> <operator pos:start="65:21" pos:end="65:21">(</operator><literal type="number" pos:start="65:22" pos:end="65:24">1</literal> <operator pos:start="65:24" pos:end="65:24">-</operator> <name pos:start="65:26" pos:end="65:29">gain</name><operator pos:start="65:30" pos:end="65:30">)</operator> <operator pos:start="65:32" pos:end="65:32">*</operator> <operator pos:start="65:34" pos:end="65:34">(</operator><literal type="number" pos:start="65:35" pos:end="65:37">1</literal> <operator pos:start="65:37" pos:end="65:37">-</operator> <name pos:start="65:39" pos:end="65:42">gain</name><operator pos:start="65:43" pos:end="65:43">)</operator><operator pos:start="65:44" pos:end="65:44">)</operator></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:13">case <expr pos:start="69:10" pos:end="69:12"><name pos:start="69:10" pos:end="69:12">QUA</name></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:21"><expr pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:12">gain</name> <operator pos:start="71:14" pos:end="71:15">*=</operator> <name pos:start="71:17" pos:end="71:20">gain</name></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:13">case <expr pos:start="75:10" pos:end="75:12"><name pos:start="75:10" pos:end="75:12">CUB</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:34"><expr pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:12">gain</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <name pos:start="77:16" pos:end="77:19">gain</name> <operator pos:start="77:21" pos:end="77:21">*</operator> <name pos:start="77:23" pos:end="77:26">gain</name> <operator pos:start="77:28" pos:end="77:28">*</operator> <name pos:start="77:30" pos:end="77:33">gain</name></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:13">case <expr pos:start="81:10" pos:end="81:12"><name pos:start="81:10" pos:end="81:12">SQU</name></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:26"><expr pos:start="83:9" pos:end="83:25"><name pos:start="83:9" pos:end="83:12">gain</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <call pos:start="83:16" pos:end="83:25"><name pos:start="83:16" pos:end="83:19">sqrt</name><argument_list pos:start="83:20" pos:end="83:25">(<argument pos:start="83:21" pos:end="83:24"><expr pos:start="83:21" pos:end="83:24"><name pos:start="83:21" pos:end="83:24">gain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:13">case <expr pos:start="87:10" pos:end="87:12"><name pos:start="87:10" pos:end="87:12">CBR</name></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:26"><expr pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:12">gain</name> <operator pos:start="89:14" pos:end="89:14">=</operator> <call pos:start="89:16" pos:end="89:25"><name pos:start="89:16" pos:end="89:19">cbrt</name><argument_list pos:start="89:20" pos:end="89:25">(<argument pos:start="89:21" pos:end="89:24"><expr pos:start="89:21" pos:end="89:24"><name pos:start="89:21" pos:end="89:24">gain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:14">case <expr pos:start="93:10" pos:end="93:13"><name pos:start="93:10" pos:end="93:13">DESE</name></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="95:88"><expr pos:start="95:9" pos:end="95:87"><name pos:start="95:9" pos:end="95:12">gain</name> <operator pos:start="95:14" pos:end="95:14">=</operator> <ternary pos:start="95:16" pos:end="95:87"><condition pos:start="95:16" pos:end="95:28"><expr pos:start="95:16" pos:end="95:26"><name pos:start="95:16" pos:end="95:19">gain</name> <operator pos:start="95:21" pos:end="95:22">&lt;=</operator> <literal type="number" pos:start="95:24" pos:end="95:26">0.5</literal></expr> ?</condition><then pos:start="95:30" pos:end="95:52"> <expr pos:start="95:30" pos:end="95:52"><call pos:start="95:30" pos:end="95:48"><name pos:start="95:30" pos:end="95:32">pow</name><argument_list pos:start="95:33" pos:end="95:48">(<argument pos:start="95:34" pos:end="95:41"><expr pos:start="95:34" pos:end="95:41"><literal type="number" pos:start="95:34" pos:end="95:34">2</literal> <operator pos:start="95:36" pos:end="95:36">*</operator> <name pos:start="95:38" pos:end="95:41">gain</name></expr></argument>, <argument pos:start="95:44" pos:end="95:47"><expr pos:start="95:44" pos:end="95:47"><literal type="number" pos:start="95:44" pos:end="95:44">1</literal><operator pos:start="95:45" pos:end="95:45">/</operator><literal type="number" pos:start="95:46" pos:end="95:47">3.</literal></expr></argument>)</argument_list></call> <operator pos:start="95:50" pos:end="95:50">/</operator> <literal type="number" pos:start="95:52" pos:end="95:52">2</literal></expr></then><else pos:start="95:53" pos:end="95:87">: <expr pos:start="95:55" pos:end="95:87"><literal type="number" pos:start="95:55" pos:end="95:57">1</literal> <operator pos:start="95:57" pos:end="95:57">-</operator> <call pos:start="95:59" pos:end="95:83"><name pos:start="95:59" pos:end="95:61">pow</name><argument_list pos:start="95:62" pos:end="95:83">(<argument pos:start="95:63" pos:end="95:76"><expr pos:start="95:63" pos:end="95:76"><literal type="number" pos:start="95:63" pos:end="95:63">2</literal> <operator pos:start="95:65" pos:end="95:65">*</operator> <operator pos:start="95:67" pos:end="95:67">(</operator><literal type="number" pos:start="95:68" pos:end="95:70">1</literal> <operator pos:start="95:70" pos:end="95:70">-</operator> <name pos:start="95:72" pos:end="95:75">gain</name><operator pos:start="95:76" pos:end="95:76">)</operator></expr></argument>, <argument pos:start="95:79" pos:end="95:82"><expr pos:start="95:79" pos:end="95:82"><literal type="number" pos:start="95:79" pos:end="95:79">1</literal><operator pos:start="95:80" pos:end="95:80">/</operator><literal type="number" pos:start="95:81" pos:end="95:82">3.</literal></expr></argument>)</argument_list></call> <operator pos:start="95:85" pos:end="95:85">/</operator> <literal type="number" pos:start="95:87" pos:end="95:87">2</literal></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:14">case <expr pos:start="99:10" pos:end="99:13"><name pos:start="99:10" pos:end="99:13">DESI</name></expr>:</case>

        <expr_stmt pos:start="101:9" pos:end="101:82"><expr pos:start="101:9" pos:end="101:81"><name pos:start="101:9" pos:end="101:12">gain</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <ternary pos:start="101:16" pos:end="101:81"><condition pos:start="101:16" pos:end="101:28"><expr pos:start="101:16" pos:end="101:26"><name pos:start="101:16" pos:end="101:19">gain</name> <operator pos:start="101:21" pos:end="101:22">&lt;=</operator> <literal type="number" pos:start="101:24" pos:end="101:26">0.5</literal></expr> ?</condition><then pos:start="101:30" pos:end="101:49"> <expr pos:start="101:30" pos:end="101:49"><call pos:start="101:30" pos:end="101:45"><name pos:start="101:30" pos:end="101:32">pow</name><argument_list pos:start="101:33" pos:end="101:45">(<argument pos:start="101:34" pos:end="101:41"><expr pos:start="101:34" pos:end="101:41"><literal type="number" pos:start="101:34" pos:end="101:34">2</literal> <operator pos:start="101:36" pos:end="101:36">*</operator> <name pos:start="101:38" pos:end="101:41">gain</name></expr></argument>, <argument pos:start="101:44" pos:end="101:44"><expr pos:start="101:44" pos:end="101:44"><literal type="number" pos:start="101:44" pos:end="101:44">3</literal></expr></argument>)</argument_list></call> <operator pos:start="101:47" pos:end="101:47">/</operator> <literal type="number" pos:start="101:49" pos:end="101:49">2</literal></expr></then><else pos:start="101:50" pos:end="101:81">: <expr pos:start="101:52" pos:end="101:81"><literal type="number" pos:start="101:52" pos:end="101:54">1</literal> <operator pos:start="101:54" pos:end="101:54">-</operator> <call pos:start="101:56" pos:end="101:77"><name pos:start="101:56" pos:end="101:58">pow</name><argument_list pos:start="101:59" pos:end="101:77">(<argument pos:start="101:60" pos:end="101:73"><expr pos:start="101:60" pos:end="101:73"><literal type="number" pos:start="101:60" pos:end="101:60">2</literal> <operator pos:start="101:62" pos:end="101:62">*</operator> <operator pos:start="101:64" pos:end="101:64">(</operator><literal type="number" pos:start="101:65" pos:end="101:67">1</literal> <operator pos:start="101:67" pos:end="101:67">-</operator> <name pos:start="101:69" pos:end="101:72">gain</name><operator pos:start="101:73" pos:end="101:73">)</operator></expr></argument>, <argument pos:start="101:76" pos:end="101:76"><expr pos:start="101:76" pos:end="101:76"><literal type="number" pos:start="101:76" pos:end="101:76">3</literal></expr></argument>)</argument_list></call> <operator pos:start="101:79" pos:end="101:79">/</operator> <literal type="number" pos:start="101:81" pos:end="101:81">2</literal></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="109:5" pos:end="109:16">return <expr pos:start="109:12" pos:end="109:15"><name pos:start="109:12" pos:end="109:15">gain</name></expr>;</return>

</block_content>}</block></function>
</unit>
