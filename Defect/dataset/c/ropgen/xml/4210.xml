<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4210.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">buffered_put_buffer</name><parameter_list pos:start="1:31" pos:end="1:87">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:63"><decl pos:start="1:46" pos:end="1:63"><type pos:start="1:46" pos:end="1:63"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:58">uint8_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">buf</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:76"><decl pos:start="1:66" pos:end="1:76"><type pos:start="1:66" pos:end="1:76"><name pos:start="1:66" pos:end="1:72">int64_t</name></type> <name pos:start="1:74" pos:end="1:76">pos</name></decl></parameter>, <parameter pos:start="1:79" pos:end="1:86"><decl pos:start="1:79" pos:end="1:86"><type pos:start="1:79" pos:end="1:86"><name pos:start="1:79" pos:end="1:81">int</name></type> <name pos:start="1:83" pos:end="1:86">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:16">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">QEMUFileBuffered</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">s</name> <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">ssize_t</name></type> <name pos:start="7:13" pos:end="7:17">error</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:60"><expr pos:start="11:5" pos:end="11:59"><call pos:start="11:5" pos:end="11:59"><name pos:start="11:5" pos:end="11:11">DPRINTF</name><argument_list pos:start="11:12" pos:end="11:59">(<argument pos:start="11:13" pos:end="11:47"><expr pos:start="11:13" pos:end="11:47"><literal type="string" pos:start="11:13" pos:end="11:35">"putting %d bytes at %"</literal> <name pos:start="11:37" pos:end="11:42">PRId64</name> <literal type="string" pos:start="11:44" pos:end="11:47">"\n"</literal></expr></argument>, <argument pos:start="11:50" pos:end="11:53"><expr pos:start="11:50" pos:end="11:53"><name pos:start="11:50" pos:end="11:53">size</name></expr></argument>, <argument pos:start="11:56" pos:end="11:58"><expr pos:start="11:56" pos:end="11:58"><name pos:start="11:56" pos:end="11:58">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:41"><expr pos:start="15:5" pos:end="15:40"><name pos:start="15:5" pos:end="15:9">error</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:40"><name pos:start="15:13" pos:end="15:31">qemu_file_get_error</name><argument_list pos:start="15:32" pos:end="15:40">(<argument pos:start="15:33" pos:end="15:39"><expr pos:start="15:33" pos:end="15:39"><name pos:start="15:33" pos:end="15:39"><name pos:start="15:33" pos:end="15:33">s</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:39">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:14">(<expr pos:start="17:9" pos:end="17:13"><name pos:start="17:9" pos:end="17:13">error</name></expr>)</condition> <block pos:start="17:16" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:21">

        <expr_stmt pos:start="19:9" pos:end="19:69"><expr pos:start="19:9" pos:end="19:68"><call pos:start="19:9" pos:end="19:68"><name pos:start="19:9" pos:end="19:15">DPRINTF</name><argument_list pos:start="19:16" pos:end="19:68">(<argument pos:start="19:17" pos:end="19:49"><expr pos:start="19:17" pos:end="19:49"><literal type="string" pos:start="19:17" pos:end="19:49">"flush when error, bailing: %s\n"</literal></expr></argument>, <argument pos:start="19:52" pos:end="19:67"><expr pos:start="19:52" pos:end="19:67"><call pos:start="19:52" pos:end="19:67"><name pos:start="19:52" pos:end="19:59">strerror</name><argument_list pos:start="19:60" pos:end="19:67">(<argument pos:start="19:61" pos:end="19:66"><expr pos:start="19:61" pos:end="19:66"><operator pos:start="19:61" pos:end="19:61">-</operator><name pos:start="19:62" pos:end="19:66">error</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:21">return <expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">error</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:12">size</name> <operator pos:start="27:14" pos:end="27:15">&lt;=</operator> <literal type="number" pos:start="27:17" pos:end="27:17">0</literal></expr>)</condition> <block pos:start="27:20" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:20">

        <return pos:start="29:9" pos:end="29:20">return <expr pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:19">size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="49:5"><if pos:start="35:5" pos:end="49:5">if <condition pos:start="35:8" pos:end="35:53">(<expr pos:start="35:9" pos:end="35:52"><name pos:start="35:9" pos:end="35:12">size</name> <operator pos:start="35:14" pos:end="35:14">&gt;</operator> <operator pos:start="35:16" pos:end="35:16">(</operator><name pos:start="35:17" pos:end="35:34"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:34">buffer_capacity</name></name> <operator pos:start="35:36" pos:end="35:36">-</operator> <name pos:start="35:38" pos:end="35:51"><name pos:start="35:38" pos:end="35:38">s</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:51">buffer_size</name></name><operator pos:start="35:52" pos:end="35:52">)</operator></expr>)</condition> <block pos:start="35:55" pos:end="49:5">{<block_content pos:start="37:9" pos:end="47:61">

        <expr_stmt pos:start="37:9" pos:end="39:49"><expr pos:start="37:9" pos:end="39:48"><call pos:start="37:9" pos:end="39:48"><name pos:start="37:9" pos:end="37:15">DPRINTF</name><argument_list pos:start="37:16" pos:end="39:48">(<argument pos:start="37:17" pos:end="37:62"><expr pos:start="37:17" pos:end="37:62"><literal type="string" pos:start="37:17" pos:end="37:62">"increasing buffer capacity from %zu by %zu\n"</literal></expr></argument>,

                <argument pos:start="39:17" pos:end="39:34"><expr pos:start="39:17" pos:end="39:34"><name pos:start="39:17" pos:end="39:34"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:34">buffer_capacity</name></name></expr></argument>, <argument pos:start="39:37" pos:end="39:47"><expr pos:start="39:37" pos:end="39:47"><name pos:start="39:37" pos:end="39:40">size</name> <operator pos:start="39:42" pos:end="39:42">+</operator> <literal type="number" pos:start="39:44" pos:end="39:47">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:42"><expr pos:start="43:9" pos:end="43:41"><name pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:26">buffer_capacity</name></name> <operator pos:start="43:28" pos:end="43:29">+=</operator> <name pos:start="43:31" pos:end="43:34">size</name> <operator pos:start="43:36" pos:end="43:36">+</operator> <literal type="number" pos:start="43:38" pos:end="43:41">1024</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:61"><expr pos:start="47:9" pos:end="47:60"><name pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:17">buffer</name></name> <operator pos:start="47:19" pos:end="47:19">=</operator> <call pos:start="47:21" pos:end="47:60"><name pos:start="47:21" pos:end="47:29">g_realloc</name><argument_list pos:start="47:30" pos:end="47:60">(<argument pos:start="47:31" pos:end="47:39"><expr pos:start="47:31" pos:end="47:39"><name pos:start="47:31" pos:end="47:39"><name pos:start="47:31" pos:end="47:31">s</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:39">buffer</name></name></expr></argument>, <argument pos:start="47:42" pos:end="47:59"><expr pos:start="47:42" pos:end="47:59"><name pos:start="47:42" pos:end="47:59"><name pos:start="47:42" pos:end="47:42">s</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:59">buffer_capacity</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:50"><expr pos:start="53:5" pos:end="53:49"><call pos:start="53:5" pos:end="53:49"><name pos:start="53:5" pos:end="53:10">memcpy</name><argument_list pos:start="53:11" pos:end="53:49">(<argument pos:start="53:12" pos:end="53:37"><expr pos:start="53:12" pos:end="53:37"><name pos:start="53:12" pos:end="53:20"><name pos:start="53:12" pos:end="53:12">s</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:20">buffer</name></name> <operator pos:start="53:22" pos:end="53:22">+</operator> <name pos:start="53:24" pos:end="53:37"><name pos:start="53:24" pos:end="53:24">s</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:37">buffer_size</name></name></expr></argument>, <argument pos:start="53:40" pos:end="53:42"><expr pos:start="53:40" pos:end="53:42"><name pos:start="53:40" pos:end="53:42">buf</name></expr></argument>, <argument pos:start="53:45" pos:end="53:48"><expr pos:start="53:45" pos:end="53:48"><name pos:start="53:45" pos:end="53:48">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:18">buffer_size</name></name> <operator pos:start="55:20" pos:end="55:21">+=</operator> <name pos:start="55:23" pos:end="55:26">size</name></expr>;</expr_stmt>



    <return pos:start="59:5" pos:end="59:16">return <expr pos:start="59:12" pos:end="59:15"><name pos:start="59:12" pos:end="59:15">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
