<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14614.c" pos:tabs="8"><function pos:start="1:1" pos:end="303:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">avresample_open</name><parameter_list pos:start="1:20" pos:end="1:48">(<parameter pos:start="1:21" pos:end="1:47"><decl pos:start="1:21" pos:end="1:47"><type pos:start="1:21" pos:end="1:44"><name pos:start="1:21" pos:end="1:42">AVAudioResampleContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">avr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="303:1">{<block_content pos:start="5:5" pos:end="301:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:39">/* set channel mixing parameters */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:81"><expr pos:start="11:5" pos:end="11:80"><name pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:7">avr</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:20">in_channels</name></name> <operator pos:start="11:22" pos:end="11:22">=</operator> <call pos:start="11:24" pos:end="11:80"><name pos:start="11:24" pos:end="11:56">av_get_channel_layout_nb_channels</name><argument_list pos:start="11:57" pos:end="11:80">(<argument pos:start="11:58" pos:end="11:79"><expr pos:start="11:58" pos:end="11:79"><name pos:start="11:58" pos:end="11:79"><name pos:start="11:58" pos:end="11:60">avr</name><operator pos:start="11:61" pos:end="11:62">-&gt;</operator><name pos:start="11:63" pos:end="11:79">in_channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:76">(<expr pos:start="13:9" pos:end="13:75"><name pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:11">avr</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:24">in_channels</name></name> <operator pos:start="13:26" pos:end="13:27">&lt;=</operator> <literal type="number" pos:start="13:29" pos:end="13:29">0</literal> <operator pos:start="13:31" pos:end="13:32">||</operator> <name pos:start="13:34" pos:end="13:49"><name pos:start="13:34" pos:end="13:36">avr</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:49">in_channels</name></name> <operator pos:start="13:51" pos:end="13:51">&gt;</operator> <name pos:start="13:53" pos:end="13:75">AVRESAMPLE_MAX_CHANNELS</name></expr>)</condition> <block pos:start="13:78" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:31">

        <expr_stmt pos:start="15:9" pos:end="17:39"><expr pos:start="15:9" pos:end="17:38"><call pos:start="15:9" pos:end="17:38"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="17:38">(<argument pos:start="15:16" pos:end="15:18"><expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:18">avr</name></expr></argument>, <argument pos:start="15:21" pos:end="15:32"><expr pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:35" pos:end="15:77"><expr pos:start="15:35" pos:end="15:77"><literal type="string" pos:start="15:35" pos:end="15:67">"Invalid input channel layout: %"</literal><name pos:start="15:68" pos:end="15:73">PRIu64</name><literal type="string" pos:start="15:74" pos:end="15:77">"\n"</literal></expr></argument>,

               <argument pos:start="17:16" pos:end="17:37"><expr pos:start="17:16" pos:end="17:37"><name pos:start="17:16" pos:end="17:37"><name pos:start="17:16" pos:end="17:18">avr</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:37">in_channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:83"><expr pos:start="23:5" pos:end="23:82"><name pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:7">avr</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:21">out_channels</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <call pos:start="23:25" pos:end="23:82"><name pos:start="23:25" pos:end="23:57">av_get_channel_layout_nb_channels</name><argument_list pos:start="23:58" pos:end="23:82">(<argument pos:start="23:59" pos:end="23:81"><expr pos:start="23:59" pos:end="23:81"><name pos:start="23:59" pos:end="23:81"><name pos:start="23:59" pos:end="23:61">avr</name><operator pos:start="23:62" pos:end="23:63">-&gt;</operator><name pos:start="23:64" pos:end="23:81">out_channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:78">(<expr pos:start="25:9" pos:end="25:77"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:11">avr</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:25">out_channels</name></name> <operator pos:start="25:27" pos:end="25:28">&lt;=</operator> <literal type="number" pos:start="25:30" pos:end="25:30">0</literal> <operator pos:start="25:32" pos:end="25:33">||</operator> <name pos:start="25:35" pos:end="25:51"><name pos:start="25:35" pos:end="25:37">avr</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:51">out_channels</name></name> <operator pos:start="25:53" pos:end="25:53">&gt;</operator> <name pos:start="25:55" pos:end="25:77">AVRESAMPLE_MAX_CHANNELS</name></expr>)</condition> <block pos:start="25:80" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:31">

        <expr_stmt pos:start="27:9" pos:end="29:40"><expr pos:start="27:9" pos:end="29:39"><call pos:start="27:9" pos:end="29:39"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="29:39">(<argument pos:start="27:16" pos:end="27:18"><expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">avr</name></expr></argument>, <argument pos:start="27:21" pos:end="27:32"><expr pos:start="27:21" pos:end="27:32"><name pos:start="27:21" pos:end="27:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:35" pos:end="27:78"><expr pos:start="27:35" pos:end="27:78"><literal type="string" pos:start="27:35" pos:end="27:68">"Invalid output channel layout: %"</literal><name pos:start="27:69" pos:end="27:74">PRIu64</name><literal type="string" pos:start="27:75" pos:end="27:78">"\n"</literal></expr></argument>,

               <argument pos:start="29:16" pos:end="29:38"><expr pos:start="29:16" pos:end="29:38"><name pos:start="29:16" pos:end="29:38"><name pos:start="29:16" pos:end="29:18">avr</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:38">out_channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:72"><expr pos:start="35:5" pos:end="35:71"><name pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:7">avr</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:26">resample_channels</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <call pos:start="35:30" pos:end="35:71"><name pos:start="35:30" pos:end="35:34">FFMIN</name><argument_list pos:start="35:35" pos:end="35:71">(<argument pos:start="35:36" pos:end="35:51"><expr pos:start="35:36" pos:end="35:51"><name pos:start="35:36" pos:end="35:51"><name pos:start="35:36" pos:end="35:38">avr</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:51">in_channels</name></name></expr></argument>, <argument pos:start="35:54" pos:end="35:70"><expr pos:start="35:54" pos:end="35:70"><name pos:start="35:54" pos:end="35:70"><name pos:start="35:54" pos:end="35:56">avr</name><operator pos:start="35:57" pos:end="35:58">-&gt;</operator><name pos:start="35:59" pos:end="35:70">out_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:67"><expr pos:start="37:5" pos:end="37:66"><name pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:7">avr</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:23">downmix_needed</name></name>    <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:45"><name pos:start="37:30" pos:end="37:32">avr</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:45">in_channels</name></name>  <operator pos:start="37:48" pos:end="37:48">&gt;</operator> <name pos:start="37:50" pos:end="37:66"><name pos:start="37:50" pos:end="37:52">avr</name><operator pos:start="37:53" pos:end="37:54">-&gt;</operator><name pos:start="37:55" pos:end="37:66">out_channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="45:81"><expr pos:start="39:5" pos:end="45:80"><name pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:7">avr</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:21">upmix_needed</name></name>      <operator pos:start="39:28" pos:end="39:28">=</operator> <name pos:start="39:30" pos:end="39:46"><name pos:start="39:30" pos:end="39:32">avr</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:46">out_channels</name></name> <operator pos:start="39:48" pos:end="39:48">&gt;</operator> <name pos:start="39:50" pos:end="39:65"><name pos:start="39:50" pos:end="39:52">avr</name><operator pos:start="39:53" pos:end="39:54">-&gt;</operator><name pos:start="39:55" pos:end="39:65">in_channels</name></name> <operator pos:start="39:67" pos:end="39:68">||</operator>

                             <name pos:start="41:30" pos:end="41:44"><name pos:start="41:30" pos:end="41:32">avr</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:36">am</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:44">matrix</name></name>                      <operator pos:start="41:67" pos:end="41:68">||</operator>

                             <operator pos:start="43:30" pos:end="43:30">(</operator><name pos:start="43:31" pos:end="43:47"><name pos:start="43:31" pos:end="43:33">avr</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:47">out_channels</name></name> <operator pos:start="43:49" pos:end="43:50">==</operator> <name pos:start="43:52" pos:end="43:67"><name pos:start="43:52" pos:end="43:54">avr</name><operator pos:start="43:55" pos:end="43:56">-&gt;</operator><name pos:start="43:57" pos:end="43:67">in_channels</name></name> <operator pos:start="43:69" pos:end="43:70">&amp;&amp;</operator>

                              <name pos:start="45:31" pos:end="45:52"><name pos:start="45:31" pos:end="45:33">avr</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:52">in_channel_layout</name></name> <operator pos:start="45:54" pos:end="45:55">!=</operator> <name pos:start="45:57" pos:end="45:79"><name pos:start="45:57" pos:end="45:59">avr</name><operator pos:start="45:60" pos:end="45:61">-&gt;</operator><name pos:start="45:62" pos:end="45:79">out_channel_layout</name></name><operator pos:start="45:80" pos:end="45:80">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:70"><expr pos:start="47:5" pos:end="47:69"><name pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:7">avr</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:22">mixing_needed</name></name>     <operator pos:start="47:28" pos:end="47:28">=</operator> <name pos:start="47:30" pos:end="47:48"><name pos:start="47:30" pos:end="47:32">avr</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:48">downmix_needed</name></name> <operator pos:start="47:50" pos:end="47:51">||</operator> <name pos:start="47:53" pos:end="47:69"><name pos:start="47:53" pos:end="47:55">avr</name><operator pos:start="47:56" pos:end="47:57">-&gt;</operator><name pos:start="47:58" pos:end="47:69">upmix_needed</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:35">/* set resampling parameters */</comment>

    <expr_stmt pos:start="53:5" pos:end="55:51"><expr pos:start="53:5" pos:end="55:50"><name pos:start="53:5" pos:end="53:24"><name pos:start="53:5" pos:end="53:7">avr</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:24">resample_needed</name></name>   <operator pos:start="53:28" pos:end="53:28">=</operator> <name pos:start="53:30" pos:end="53:48"><name pos:start="53:30" pos:end="53:32">avr</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:48">in_sample_rate</name></name> <operator pos:start="53:50" pos:end="53:51">!=</operator> <name pos:start="53:53" pos:end="53:72"><name pos:start="53:53" pos:end="53:55">avr</name><operator pos:start="53:56" pos:end="53:57">-&gt;</operator><name pos:start="53:58" pos:end="53:72">out_sample_rate</name></name> <operator pos:start="53:74" pos:end="53:75">||</operator>

                             <name pos:start="55:30" pos:end="55:50"><name pos:start="55:30" pos:end="55:32">avr</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:50">force_resampling</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:68">/* select internal sample format if not specified by the user */</comment>

    <if_stmt pos:start="61:5" pos:end="127:5"><if pos:start="61:5" pos:end="127:5">if <condition pos:start="61:8" pos:end="63:53">(<expr pos:start="61:9" pos:end="63:52"><name pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:11">avr</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:32">internal_sample_fmt</name></name> <operator pos:start="61:34" pos:end="61:35">==</operator> <name pos:start="61:37" pos:end="61:54">AV_SAMPLE_FMT_NONE</name> <operator pos:start="61:56" pos:end="61:57">&amp;&amp;</operator>

        <operator pos:start="63:9" pos:end="63:9">(</operator><name pos:start="63:10" pos:end="63:27"><name pos:start="63:10" pos:end="63:12">avr</name><operator pos:start="63:13" pos:end="63:14">-&gt;</operator><name pos:start="63:15" pos:end="63:27">mixing_needed</name></name> <operator pos:start="63:29" pos:end="63:30">||</operator> <name pos:start="63:32" pos:end="63:51"><name pos:start="63:32" pos:end="63:34">avr</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:51">resample_needed</name></name><operator pos:start="63:52" pos:end="63:52">)</operator></expr>)</condition> <block pos:start="63:55" pos:end="127:5">{<block_content pos:start="65:9" pos:end="125:65">

        <decl_stmt pos:start="65:9" pos:end="65:83"><decl pos:start="65:9" pos:end="65:82"><type pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:12">enum</name> <name pos:start="65:14" pos:end="65:27">AVSampleFormat</name></name></type>  <name pos:start="65:30" pos:end="65:35">in_fmt</name> <init pos:start="65:37" pos:end="65:82">= <expr pos:start="65:39" pos:end="65:82"><call pos:start="65:39" pos:end="65:82"><name pos:start="65:39" pos:end="65:62">av_get_planar_sample_fmt</name><argument_list pos:start="65:63" pos:end="65:82">(<argument pos:start="65:64" pos:end="65:81"><expr pos:start="65:64" pos:end="65:81"><name pos:start="65:64" pos:end="65:81"><name pos:start="65:64" pos:end="65:66">avr</name><operator pos:start="65:67" pos:end="65:68">-&gt;</operator><name pos:start="65:69" pos:end="65:81">in_sample_fmt</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="67:9" pos:end="67:84"><decl pos:start="67:9" pos:end="67:83"><type pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:12">enum</name> <name pos:start="67:14" pos:end="67:27">AVSampleFormat</name></name></type> <name pos:start="67:29" pos:end="67:35">out_fmt</name> <init pos:start="67:37" pos:end="67:83">= <expr pos:start="67:39" pos:end="67:83"><call pos:start="67:39" pos:end="67:83"><name pos:start="67:39" pos:end="67:62">av_get_planar_sample_fmt</name><argument_list pos:start="67:63" pos:end="67:83">(<argument pos:start="67:64" pos:end="67:82"><expr pos:start="67:64" pos:end="67:82"><name pos:start="67:64" pos:end="67:82"><name pos:start="67:64" pos:end="67:66">avr</name><operator pos:start="67:67" pos:end="67:68">-&gt;</operator><name pos:start="67:69" pos:end="67:82">out_sample_fmt</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="71:62"><decl pos:start="69:9" pos:end="71:61"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:19">max_bps</name> <init pos:start="69:21" pos:end="71:61">= <expr pos:start="69:23" pos:end="71:61"><call pos:start="69:23" pos:end="71:61"><name pos:start="69:23" pos:end="69:27">FFMAX</name><argument_list pos:start="69:28" pos:end="71:61">(<argument pos:start="69:29" pos:end="69:59"><expr pos:start="69:29" pos:end="69:59"><call pos:start="69:29" pos:end="69:59"><name pos:start="69:29" pos:end="69:51">av_get_bytes_per_sample</name><argument_list pos:start="69:52" pos:end="69:59">(<argument pos:start="69:53" pos:end="69:58"><expr pos:start="69:53" pos:end="69:58"><name pos:start="69:53" pos:end="69:58">in_fmt</name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="71:29" pos:end="71:60"><expr pos:start="71:29" pos:end="71:60"><call pos:start="71:29" pos:end="71:60"><name pos:start="71:29" pos:end="71:51">av_get_bytes_per_sample</name><argument_list pos:start="71:52" pos:end="71:60">(<argument pos:start="71:53" pos:end="71:59"><expr pos:start="71:53" pos:end="71:59"><name pos:start="71:53" pos:end="71:59">out_fmt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="73:9" pos:end="121:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:25">(<expr pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:19">max_bps</name> <operator pos:start="73:21" pos:end="73:22">&lt;=</operator> <literal type="number" pos:start="73:24" pos:end="73:24">2</literal></expr>)</condition> <block pos:start="73:27" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:58">

            <expr_stmt pos:start="75:13" pos:end="75:58"><expr pos:start="75:13" pos:end="75:57"><name pos:start="75:13" pos:end="75:36"><name pos:start="75:13" pos:end="75:15">avr</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:36">internal_sample_fmt</name></name> <operator pos:start="75:38" pos:end="75:38">=</operator> <name pos:start="75:40" pos:end="75:57">AV_SAMPLE_FMT_S16P</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="77:11" pos:end="81:9">else if <condition pos:start="77:19" pos:end="77:38">(<expr pos:start="77:20" pos:end="77:37"><name pos:start="77:20" pos:end="77:37"><name pos:start="77:20" pos:end="77:22">avr</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:37">mixing_needed</name></name></expr>)</condition> <block pos:start="77:40" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:58">

            <expr_stmt pos:start="79:13" pos:end="79:58"><expr pos:start="79:13" pos:end="79:57"><name pos:start="79:13" pos:end="79:36"><name pos:start="79:13" pos:end="79:15">avr</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:36">internal_sample_fmt</name></name> <operator pos:start="79:38" pos:end="79:38">=</operator> <name pos:start="79:40" pos:end="79:57">AV_SAMPLE_FMT_FLTP</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="121:9">else <block pos:start="81:16" pos:end="121:9">{<block_content pos:start="83:13" pos:end="119:13">

            <if_stmt pos:start="83:13" pos:end="119:13"><if pos:start="83:13" pos:end="113:13">if <condition pos:start="83:16" pos:end="83:29">(<expr pos:start="83:17" pos:end="83:28"><name pos:start="83:17" pos:end="83:23">max_bps</name> <operator pos:start="83:25" pos:end="83:26">&lt;=</operator> <literal type="number" pos:start="83:28" pos:end="83:28">4</literal></expr>)</condition> <block pos:start="83:31" pos:end="113:13">{<block_content pos:start="85:17" pos:end="111:17">

                <if_stmt pos:start="85:17" pos:end="111:17"><if pos:start="85:17" pos:end="105:17">if <condition pos:start="85:20" pos:end="87:50">(<expr pos:start="85:21" pos:end="87:49"><name pos:start="85:21" pos:end="85:26">in_fmt</name>  <operator pos:start="85:29" pos:end="85:30">==</operator> <name pos:start="85:32" pos:end="85:49">AV_SAMPLE_FMT_S32P</name> <operator pos:start="85:51" pos:end="85:52">||</operator>

                    <name pos:start="87:21" pos:end="87:27">out_fmt</name> <operator pos:start="87:29" pos:end="87:30">==</operator> <name pos:start="87:32" pos:end="87:49">AV_SAMPLE_FMT_S32P</name></expr>)</condition> <block pos:start="87:52" pos:end="105:17">{<block_content pos:start="89:21" pos:end="103:21">

                    <if_stmt pos:start="89:21" pos:end="103:21"><if pos:start="89:21" pos:end="97:21">if <condition pos:start="89:24" pos:end="91:54">(<expr pos:start="89:25" pos:end="91:53"><name pos:start="89:25" pos:end="89:30">in_fmt</name>  <operator pos:start="89:33" pos:end="89:34">==</operator> <name pos:start="89:36" pos:end="89:53">AV_SAMPLE_FMT_FLTP</name> <operator pos:start="89:55" pos:end="89:56">||</operator>

                        <name pos:start="91:25" pos:end="91:31">out_fmt</name> <operator pos:start="91:33" pos:end="91:34">==</operator> <name pos:start="91:36" pos:end="91:53">AV_SAMPLE_FMT_FLTP</name></expr>)</condition> <block pos:start="91:56" pos:end="97:21">{<block_content pos:start="95:25" pos:end="95:70">

                        <comment type="block" pos:start="93:25" pos:end="93:73">/* if one is s32 and the other is flt, use dbl */</comment>

                        <expr_stmt pos:start="95:25" pos:end="95:70"><expr pos:start="95:25" pos:end="95:69"><name pos:start="95:25" pos:end="95:48"><name pos:start="95:25" pos:end="95:27">avr</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:48">internal_sample_fmt</name></name> <operator pos:start="95:50" pos:end="95:50">=</operator> <name pos:start="95:52" pos:end="95:69">AV_SAMPLE_FMT_DBLP</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="97:23" pos:end="103:21">else <block pos:start="97:28" pos:end="103:21">{<block_content pos:start="101:25" pos:end="101:70">

                        <comment type="block" pos:start="99:25" pos:end="99:85">/* if one is s32 and the other is s32, s16, or u8, use s32 */</comment>

                        <expr_stmt pos:start="101:25" pos:end="101:70"><expr pos:start="101:25" pos:end="101:69"><name pos:start="101:25" pos:end="101:48"><name pos:start="101:25" pos:end="101:27">avr</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:48">internal_sample_fmt</name></name> <operator pos:start="101:50" pos:end="101:50">=</operator> <name pos:start="101:52" pos:end="101:69">AV_SAMPLE_FMT_S32P</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="105:19" pos:end="111:17">else <block pos:start="105:24" pos:end="111:17">{<block_content pos:start="109:21" pos:end="109:66">

                    <comment type="block" pos:start="107:21" pos:end="107:80">/* if one is flt and the other is flt, s16 or u8, use flt */</comment>

                    <expr_stmt pos:start="109:21" pos:end="109:66"><expr pos:start="109:21" pos:end="109:65"><name pos:start="109:21" pos:end="109:44"><name pos:start="109:21" pos:end="109:23">avr</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:44">internal_sample_fmt</name></name> <operator pos:start="109:46" pos:end="109:46">=</operator> <name pos:start="109:48" pos:end="109:65">AV_SAMPLE_FMT_FLTP</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="113:15" pos:end="119:13">else <block pos:start="113:20" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:62">

                <comment type="block" pos:start="115:17" pos:end="115:47">/* if either is dbl, use dbl */</comment>

                <expr_stmt pos:start="117:17" pos:end="117:62"><expr pos:start="117:17" pos:end="117:61"><name pos:start="117:17" pos:end="117:40"><name pos:start="117:17" pos:end="117:19">avr</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:40">internal_sample_fmt</name></name> <operator pos:start="117:42" pos:end="117:42">=</operator> <name pos:start="117:44" pos:end="117:61">AV_SAMPLE_FMT_DBLP</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="125:65"><expr pos:start="123:9" pos:end="125:64"><call pos:start="123:9" pos:end="125:64"><name pos:start="123:9" pos:end="123:14">av_log</name><argument_list pos:start="123:15" pos:end="125:64">(<argument pos:start="123:16" pos:end="123:18"><expr pos:start="123:16" pos:end="123:18"><name pos:start="123:16" pos:end="123:18">avr</name></expr></argument>, <argument pos:start="123:21" pos:end="123:32"><expr pos:start="123:21" pos:end="123:32"><name pos:start="123:21" pos:end="123:32">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="123:35" pos:end="123:72"><expr pos:start="123:35" pos:end="123:72"><literal type="string" pos:start="123:35" pos:end="123:72">"Using %s as internal sample format\n"</literal></expr></argument>,

               <argument pos:start="125:16" pos:end="125:63"><expr pos:start="125:16" pos:end="125:63"><call pos:start="125:16" pos:end="125:63"><name pos:start="125:16" pos:end="125:37">av_get_sample_fmt_name</name><argument_list pos:start="125:38" pos:end="125:63">(<argument pos:start="125:39" pos:end="125:62"><expr pos:start="125:39" pos:end="125:62"><name pos:start="125:39" pos:end="125:62"><name pos:start="125:39" pos:end="125:41">avr</name><operator pos:start="125:42" pos:end="125:43">-&gt;</operator><name pos:start="125:44" pos:end="125:62">internal_sample_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="131:5" pos:end="131:49">/* set sample format conversion parameters */</comment>

    <if_stmt pos:start="133:5" pos:end="135:74"><if pos:start="133:5" pos:end="135:74">if <condition pos:start="133:8" pos:end="133:30">(<expr pos:start="133:9" pos:end="133:29"><name pos:start="133:9" pos:end="133:24"><name pos:start="133:9" pos:end="133:11">avr</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:24">in_channels</name></name> <operator pos:start="133:26" pos:end="133:27">==</operator> <literal type="number" pos:start="133:29" pos:end="133:29">1</literal></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="135:74"><block_content pos:start="135:9" pos:end="135:74">

        <expr_stmt pos:start="135:9" pos:end="135:74"><expr pos:start="135:9" pos:end="135:73"><name pos:start="135:9" pos:end="135:26"><name pos:start="135:9" pos:end="135:11">avr</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:26">in_sample_fmt</name></name> <operator pos:start="135:28" pos:end="135:28">=</operator> <call pos:start="135:30" pos:end="135:73"><name pos:start="135:30" pos:end="135:53">av_get_planar_sample_fmt</name><argument_list pos:start="135:54" pos:end="135:73">(<argument pos:start="135:55" pos:end="135:72"><expr pos:start="135:55" pos:end="135:72"><name pos:start="135:55" pos:end="135:72"><name pos:start="135:55" pos:end="135:57">avr</name><operator pos:start="135:58" pos:end="135:59">-&gt;</operator><name pos:start="135:60" pos:end="135:72">in_sample_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="137:5" pos:end="139:76"><if pos:start="137:5" pos:end="139:76">if <condition pos:start="137:8" pos:end="137:31">(<expr pos:start="137:9" pos:end="137:30"><name pos:start="137:9" pos:end="137:25"><name pos:start="137:9" pos:end="137:11">avr</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:25">out_channels</name></name> <operator pos:start="137:27" pos:end="137:28">==</operator> <literal type="number" pos:start="137:30" pos:end="137:30">1</literal></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:76"><block_content pos:start="139:9" pos:end="139:76">

        <expr_stmt pos:start="139:9" pos:end="139:76"><expr pos:start="139:9" pos:end="139:75"><name pos:start="139:9" pos:end="139:27"><name pos:start="139:9" pos:end="139:11">avr</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:27">out_sample_fmt</name></name> <operator pos:start="139:29" pos:end="139:29">=</operator> <call pos:start="139:31" pos:end="139:75"><name pos:start="139:31" pos:end="139:54">av_get_planar_sample_fmt</name><argument_list pos:start="139:55" pos:end="139:75">(<argument pos:start="139:56" pos:end="139:74"><expr pos:start="139:56" pos:end="139:74"><name pos:start="139:56" pos:end="139:74"><name pos:start="139:56" pos:end="139:58">avr</name><operator pos:start="139:59" pos:end="139:60">-&gt;</operator><name pos:start="139:61" pos:end="139:74">out_sample_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="141:5" pos:end="143:77"><expr pos:start="141:5" pos:end="143:76"><name pos:start="141:5" pos:end="141:26"><name pos:start="141:5" pos:end="141:7">avr</name><operator pos:start="141:8" pos:end="141:9">-&gt;</operator><name pos:start="141:10" pos:end="141:26">in_convert_needed</name></name> <operator pos:start="141:28" pos:end="141:28">=</operator> <operator pos:start="141:30" pos:end="141:30">(</operator><name pos:start="141:31" pos:end="141:50"><name pos:start="141:31" pos:end="141:33">avr</name><operator pos:start="141:34" pos:end="141:35">-&gt;</operator><name pos:start="141:36" pos:end="141:50">resample_needed</name></name> <operator pos:start="141:52" pos:end="141:53">||</operator> <name pos:start="141:55" pos:end="141:72"><name pos:start="141:55" pos:end="141:57">avr</name><operator pos:start="141:58" pos:end="141:59">-&gt;</operator><name pos:start="141:60" pos:end="141:72">mixing_needed</name></name><operator pos:start="141:73" pos:end="141:73">)</operator> <operator pos:start="141:75" pos:end="141:76">&amp;&amp;</operator>

                              <name pos:start="143:31" pos:end="143:48"><name pos:start="143:31" pos:end="143:33">avr</name><operator pos:start="143:34" pos:end="143:35">-&gt;</operator><name pos:start="143:36" pos:end="143:48">in_sample_fmt</name></name> <operator pos:start="143:50" pos:end="143:51">!=</operator> <name pos:start="143:53" pos:end="143:76"><name pos:start="143:53" pos:end="143:55">avr</name><operator pos:start="143:56" pos:end="143:57">-&gt;</operator><name pos:start="143:58" pos:end="143:76">internal_sample_fmt</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="151:76"><if pos:start="145:5" pos:end="147:82">if <condition pos:start="145:8" pos:end="145:51">(<expr pos:start="145:9" pos:end="145:50"><name pos:start="145:9" pos:end="145:28"><name pos:start="145:9" pos:end="145:11">avr</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:28">resample_needed</name></name> <operator pos:start="145:30" pos:end="145:31">||</operator> <name pos:start="145:33" pos:end="145:50"><name pos:start="145:33" pos:end="145:35">avr</name><operator pos:start="145:36" pos:end="145:37">-&gt;</operator><name pos:start="145:38" pos:end="145:50">mixing_needed</name></name></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:82"><block_content pos:start="147:9" pos:end="147:82">

        <expr_stmt pos:start="147:9" pos:end="147:82"><expr pos:start="147:9" pos:end="147:81"><name pos:start="147:9" pos:end="147:31"><name pos:start="147:9" pos:end="147:11">avr</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:31">out_convert_needed</name></name> <operator pos:start="147:33" pos:end="147:33">=</operator> <name pos:start="147:35" pos:end="147:58"><name pos:start="147:35" pos:end="147:37">avr</name><operator pos:start="147:38" pos:end="147:39">-&gt;</operator><name pos:start="147:40" pos:end="147:58">internal_sample_fmt</name></name> <operator pos:start="147:60" pos:end="147:61">!=</operator> <name pos:start="147:63" pos:end="147:81"><name pos:start="147:63" pos:end="147:65">avr</name><operator pos:start="147:66" pos:end="147:67">-&gt;</operator><name pos:start="147:68" pos:end="147:81">out_sample_fmt</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="149:5" pos:end="151:76">else<block type="pseudo" pos:start="151:9" pos:end="151:76"><block_content pos:start="151:9" pos:end="151:76">

        <expr_stmt pos:start="151:9" pos:end="151:76"><expr pos:start="151:9" pos:end="151:75"><name pos:start="151:9" pos:end="151:31"><name pos:start="151:9" pos:end="151:11">avr</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:31">out_convert_needed</name></name> <operator pos:start="151:33" pos:end="151:33">=</operator> <name pos:start="151:35" pos:end="151:52"><name pos:start="151:35" pos:end="151:37">avr</name><operator pos:start="151:38" pos:end="151:39">-&gt;</operator><name pos:start="151:40" pos:end="151:52">in_sample_fmt</name></name> <operator pos:start="151:54" pos:end="151:55">!=</operator> <name pos:start="151:57" pos:end="151:75"><name pos:start="151:57" pos:end="151:59">avr</name><operator pos:start="151:60" pos:end="151:61">-&gt;</operator><name pos:start="151:62" pos:end="151:75">out_sample_fmt</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="155:5" pos:end="155:26">/* allocate buffers */</comment>

    <if_stmt pos:start="157:5" pos:end="173:5"><if pos:start="157:5" pos:end="173:5">if <condition pos:start="157:8" pos:end="157:53">(<expr pos:start="157:9" pos:end="157:52"><name pos:start="157:9" pos:end="157:26"><name pos:start="157:9" pos:end="157:11">avr</name><operator pos:start="157:12" pos:end="157:13">-&gt;</operator><name pos:start="157:14" pos:end="157:26">mixing_needed</name></name> <operator pos:start="157:28" pos:end="157:29">||</operator> <name pos:start="157:31" pos:end="157:52"><name pos:start="157:31" pos:end="157:33">avr</name><operator pos:start="157:34" pos:end="157:35">-&gt;</operator><name pos:start="157:36" pos:end="157:52">in_convert_needed</name></name></expr>)</condition> <block pos:start="157:55" pos:end="173:5">{<block_content pos:start="159:9" pos:end="171:9">

        <expr_stmt pos:start="159:9" pos:end="163:58"><expr pos:start="159:9" pos:end="163:57"><name pos:start="159:9" pos:end="159:22"><name pos:start="159:9" pos:end="159:11">avr</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:22">in_buffer</name></name> <operator pos:start="159:24" pos:end="159:24">=</operator> <call pos:start="159:26" pos:end="163:57"><name pos:start="159:26" pos:end="159:44">ff_audio_data_alloc</name><argument_list pos:start="159:45" pos:end="163:57">(<argument pos:start="159:46" pos:end="159:87"><expr pos:start="159:46" pos:end="159:87"><call pos:start="159:46" pos:end="159:87"><name pos:start="159:46" pos:end="159:50">FFMAX</name><argument_list pos:start="159:51" pos:end="159:87">(<argument pos:start="159:52" pos:end="159:67"><expr pos:start="159:52" pos:end="159:67"><name pos:start="159:52" pos:end="159:67"><name pos:start="159:52" pos:end="159:54">avr</name><operator pos:start="159:55" pos:end="159:56">-&gt;</operator><name pos:start="159:57" pos:end="159:67">in_channels</name></name></expr></argument>, <argument pos:start="159:70" pos:end="159:86"><expr pos:start="159:70" pos:end="159:86"><name pos:start="159:70" pos:end="159:86"><name pos:start="159:70" pos:end="159:72">avr</name><operator pos:start="159:73" pos:end="159:74">-&gt;</operator><name pos:start="159:75" pos:end="159:86">out_channels</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                             <argument pos:start="161:46" pos:end="161:46"><expr pos:start="161:46" pos:end="161:46"><literal type="number" pos:start="161:46" pos:end="161:46">0</literal></expr></argument>, <argument pos:start="161:49" pos:end="161:72"><expr pos:start="161:49" pos:end="161:72"><name pos:start="161:49" pos:end="161:72"><name pos:start="161:49" pos:end="161:51">avr</name><operator pos:start="161:52" pos:end="161:53">-&gt;</operator><name pos:start="161:54" pos:end="161:72">internal_sample_fmt</name></name></expr></argument>,

                                             <argument pos:start="163:46" pos:end="163:56"><expr pos:start="163:46" pos:end="163:56"><literal type="string" pos:start="163:46" pos:end="163:56">"in_buffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="171:9"><if pos:start="165:9" pos:end="171:9">if <condition pos:start="165:12" pos:end="165:28">(<expr pos:start="165:13" pos:end="165:27"><operator pos:start="165:13" pos:end="165:13">!</operator><name pos:start="165:14" pos:end="165:27"><name pos:start="165:14" pos:end="165:16">avr</name><operator pos:start="165:17" pos:end="165:18">-&gt;</operator><name pos:start="165:19" pos:end="165:27">in_buffer</name></name></expr>)</condition> <block pos:start="165:30" pos:end="171:9">{<block_content pos:start="167:13" pos:end="169:23">

            <expr_stmt pos:start="167:13" pos:end="167:34"><expr pos:start="167:13" pos:end="167:33"><name pos:start="167:13" pos:end="167:15">ret</name> <operator pos:start="167:17" pos:end="167:17">=</operator> <call pos:start="167:19" pos:end="167:33"><name pos:start="167:19" pos:end="167:25">AVERROR</name><argument_list pos:start="167:26" pos:end="167:33">(<argument pos:start="167:27" pos:end="167:32"><expr pos:start="167:27" pos:end="167:32"><name pos:start="167:27" pos:end="167:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="169:13" pos:end="169:23">goto <name pos:start="169:18" pos:end="169:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="175:5" pos:end="191:5"><if pos:start="175:5" pos:end="191:5">if <condition pos:start="175:8" pos:end="175:29">(<expr pos:start="175:9" pos:end="175:28"><name pos:start="175:9" pos:end="175:28"><name pos:start="175:9" pos:end="175:11">avr</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:28">resample_needed</name></name></expr>)</condition> <block pos:start="175:31" pos:end="191:5">{<block_content pos:start="177:9" pos:end="189:9">

        <expr_stmt pos:start="177:9" pos:end="181:78"><expr pos:start="177:9" pos:end="181:77"><name pos:start="177:9" pos:end="177:32"><name pos:start="177:9" pos:end="177:11">avr</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:32">resample_out_buffer</name></name> <operator pos:start="177:34" pos:end="177:34">=</operator> <call pos:start="177:36" pos:end="181:77"><name pos:start="177:36" pos:end="177:54">ff_audio_data_alloc</name><argument_list pos:start="177:55" pos:end="181:77">(<argument pos:start="177:56" pos:end="177:72"><expr pos:start="177:56" pos:end="177:72"><name pos:start="177:56" pos:end="177:72"><name pos:start="177:56" pos:end="177:58">avr</name><operator pos:start="177:59" pos:end="177:60">-&gt;</operator><name pos:start="177:61" pos:end="177:72">out_channels</name></name></expr></argument>,

                                                       <argument pos:start="179:56" pos:end="179:56"><expr pos:start="179:56" pos:end="179:56"><literal type="number" pos:start="179:56" pos:end="179:56">0</literal></expr></argument>, <argument pos:start="179:59" pos:end="179:82"><expr pos:start="179:59" pos:end="179:82"><name pos:start="179:59" pos:end="179:82"><name pos:start="179:59" pos:end="179:61">avr</name><operator pos:start="179:62" pos:end="179:63">-&gt;</operator><name pos:start="179:64" pos:end="179:82">internal_sample_fmt</name></name></expr></argument>,

                                                       <argument pos:start="181:56" pos:end="181:76"><expr pos:start="181:56" pos:end="181:76"><literal type="string" pos:start="181:56" pos:end="181:76">"resample_out_buffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="183:9" pos:end="189:9"><if pos:start="183:9" pos:end="189:9">if <condition pos:start="183:12" pos:end="183:38">(<expr pos:start="183:13" pos:end="183:37"><operator pos:start="183:13" pos:end="183:13">!</operator><name pos:start="183:14" pos:end="183:37"><name pos:start="183:14" pos:end="183:16">avr</name><operator pos:start="183:17" pos:end="183:18">-&gt;</operator><name pos:start="183:19" pos:end="183:37">resample_out_buffer</name></name></expr>)</condition> <block pos:start="183:40" pos:end="189:9">{<block_content pos:start="185:13" pos:end="187:23">

            <expr_stmt pos:start="185:13" pos:end="185:34"><expr pos:start="185:13" pos:end="185:33"><name pos:start="185:13" pos:end="185:15">ret</name> <operator pos:start="185:17" pos:end="185:17">=</operator> <call pos:start="185:19" pos:end="185:33"><name pos:start="185:19" pos:end="185:25">AVERROR</name><argument_list pos:start="185:26" pos:end="185:33">(<argument pos:start="185:27" pos:end="185:32"><expr pos:start="185:27" pos:end="185:32"><name pos:start="185:27" pos:end="185:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="187:13" pos:end="187:23">goto <name pos:start="187:18" pos:end="187:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="193:5" pos:end="207:5"><if pos:start="193:5" pos:end="207:5">if <condition pos:start="193:8" pos:end="193:32">(<expr pos:start="193:9" pos:end="193:31"><name pos:start="193:9" pos:end="193:31"><name pos:start="193:9" pos:end="193:11">avr</name><operator pos:start="193:12" pos:end="193:13">-&gt;</operator><name pos:start="193:14" pos:end="193:31">out_convert_needed</name></name></expr>)</condition> <block pos:start="193:34" pos:end="207:5">{<block_content pos:start="195:9" pos:end="205:9">

        <expr_stmt pos:start="195:9" pos:end="197:81"><expr pos:start="195:9" pos:end="197:80"><name pos:start="195:9" pos:end="195:23"><name pos:start="195:9" pos:end="195:11">avr</name><operator pos:start="195:12" pos:end="195:13">-&gt;</operator><name pos:start="195:14" pos:end="195:23">out_buffer</name></name> <operator pos:start="195:25" pos:end="195:25">=</operator> <call pos:start="195:27" pos:end="197:80"><name pos:start="195:27" pos:end="195:45">ff_audio_data_alloc</name><argument_list pos:start="195:46" pos:end="197:80">(<argument pos:start="195:47" pos:end="195:63"><expr pos:start="195:47" pos:end="195:63"><name pos:start="195:47" pos:end="195:63"><name pos:start="195:47" pos:end="195:49">avr</name><operator pos:start="195:50" pos:end="195:51">-&gt;</operator><name pos:start="195:52" pos:end="195:63">out_channels</name></name></expr></argument>, <argument pos:start="195:66" pos:end="195:66"><expr pos:start="195:66" pos:end="195:66"><literal type="number" pos:start="195:66" pos:end="195:66">0</literal></expr></argument>,

                                              <argument pos:start="197:47" pos:end="197:65"><expr pos:start="197:47" pos:end="197:65"><name pos:start="197:47" pos:end="197:65"><name pos:start="197:47" pos:end="197:49">avr</name><operator pos:start="197:50" pos:end="197:51">-&gt;</operator><name pos:start="197:52" pos:end="197:65">out_sample_fmt</name></name></expr></argument>, <argument pos:start="197:68" pos:end="197:79"><expr pos:start="197:68" pos:end="197:79"><literal type="string" pos:start="197:68" pos:end="197:79">"out_buffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="199:9" pos:end="205:9"><if pos:start="199:9" pos:end="205:9">if <condition pos:start="199:12" pos:end="199:29">(<expr pos:start="199:13" pos:end="199:28"><operator pos:start="199:13" pos:end="199:13">!</operator><name pos:start="199:14" pos:end="199:28"><name pos:start="199:14" pos:end="199:16">avr</name><operator pos:start="199:17" pos:end="199:18">-&gt;</operator><name pos:start="199:19" pos:end="199:28">out_buffer</name></name></expr>)</condition> <block pos:start="199:31" pos:end="205:9">{<block_content pos:start="201:13" pos:end="203:23">

            <expr_stmt pos:start="201:13" pos:end="201:34"><expr pos:start="201:13" pos:end="201:33"><name pos:start="201:13" pos:end="201:15">ret</name> <operator pos:start="201:17" pos:end="201:17">=</operator> <call pos:start="201:19" pos:end="201:33"><name pos:start="201:19" pos:end="201:25">AVERROR</name><argument_list pos:start="201:26" pos:end="201:33">(<argument pos:start="201:27" pos:end="201:32"><expr pos:start="201:27" pos:end="201:32"><name pos:start="201:27" pos:end="201:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="203:13" pos:end="203:23">goto <name pos:start="203:18" pos:end="203:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="209:5" pos:end="211:46"><expr pos:start="209:5" pos:end="211:45"><name pos:start="209:5" pos:end="209:17"><name pos:start="209:5" pos:end="209:7">avr</name><operator pos:start="209:8" pos:end="209:9">-&gt;</operator><name pos:start="209:10" pos:end="209:17">out_fifo</name></name> <operator pos:start="209:19" pos:end="209:19">=</operator> <call pos:start="209:21" pos:end="211:45"><name pos:start="209:21" pos:end="209:39">av_audio_fifo_alloc</name><argument_list pos:start="209:40" pos:end="211:45">(<argument pos:start="209:41" pos:end="209:59"><expr pos:start="209:41" pos:end="209:59"><name pos:start="209:41" pos:end="209:59"><name pos:start="209:41" pos:end="209:43">avr</name><operator pos:start="209:44" pos:end="209:45">-&gt;</operator><name pos:start="209:46" pos:end="209:59">out_sample_fmt</name></name></expr></argument>, <argument pos:start="209:62" pos:end="209:78"><expr pos:start="209:62" pos:end="209:78"><name pos:start="209:62" pos:end="209:78"><name pos:start="209:62" pos:end="209:64">avr</name><operator pos:start="209:65" pos:end="209:66">-&gt;</operator><name pos:start="209:67" pos:end="209:78">out_channels</name></name></expr></argument>,

                                        <argument pos:start="211:41" pos:end="211:44"><expr pos:start="211:41" pos:end="211:44"><literal type="number" pos:start="211:41" pos:end="211:44">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="213:5" pos:end="219:5"><if pos:start="213:5" pos:end="219:5">if <condition pos:start="213:8" pos:end="213:23">(<expr pos:start="213:9" pos:end="213:22"><operator pos:start="213:9" pos:end="213:9">!</operator><name pos:start="213:10" pos:end="213:22"><name pos:start="213:10" pos:end="213:12">avr</name><operator pos:start="213:13" pos:end="213:14">-&gt;</operator><name pos:start="213:15" pos:end="213:22">out_fifo</name></name></expr>)</condition> <block pos:start="213:25" pos:end="219:5">{<block_content pos:start="215:9" pos:end="217:19">

        <expr_stmt pos:start="215:9" pos:end="215:30"><expr pos:start="215:9" pos:end="215:29"><name pos:start="215:9" pos:end="215:11">ret</name> <operator pos:start="215:13" pos:end="215:13">=</operator> <call pos:start="215:15" pos:end="215:29"><name pos:start="215:15" pos:end="215:21">AVERROR</name><argument_list pos:start="215:22" pos:end="215:29">(<argument pos:start="215:23" pos:end="215:28"><expr pos:start="215:23" pos:end="215:28"><name pos:start="215:23" pos:end="215:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="217:9" pos:end="217:19">goto <name pos:start="217:14" pos:end="217:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="223:5" pos:end="223:24">/* setup contexts */</comment>

    <if_stmt pos:start="225:5" pos:end="239:5"><if pos:start="225:5" pos:end="239:5">if <condition pos:start="225:8" pos:end="225:31">(<expr pos:start="225:9" pos:end="225:30"><name pos:start="225:9" pos:end="225:30"><name pos:start="225:9" pos:end="225:11">avr</name><operator pos:start="225:12" pos:end="225:13">-&gt;</operator><name pos:start="225:14" pos:end="225:30">in_convert_needed</name></name></expr>)</condition> <block pos:start="225:33" pos:end="239:5">{<block_content pos:start="227:9" pos:end="237:9">

        <expr_stmt pos:start="227:9" pos:end="229:82"><expr pos:start="227:9" pos:end="229:81"><name pos:start="227:9" pos:end="227:18"><name pos:start="227:9" pos:end="227:11">avr</name><operator pos:start="227:12" pos:end="227:13">-&gt;</operator><name pos:start="227:14" pos:end="227:18">ac_in</name></name> <operator pos:start="227:20" pos:end="227:20">=</operator> <call pos:start="227:22" pos:end="229:81"><name pos:start="227:22" pos:end="227:43">ff_audio_convert_alloc</name><argument_list pos:start="227:44" pos:end="229:81">(<argument pos:start="227:45" pos:end="227:47"><expr pos:start="227:45" pos:end="227:47"><name pos:start="227:45" pos:end="227:47">avr</name></expr></argument>, <argument pos:start="227:50" pos:end="227:73"><expr pos:start="227:50" pos:end="227:73"><name pos:start="227:50" pos:end="227:73"><name pos:start="227:50" pos:end="227:52">avr</name><operator pos:start="227:53" pos:end="227:54">-&gt;</operator><name pos:start="227:55" pos:end="227:73">internal_sample_fmt</name></name></expr></argument>,

                                            <argument pos:start="229:45" pos:end="229:62"><expr pos:start="229:45" pos:end="229:62"><name pos:start="229:45" pos:end="229:62"><name pos:start="229:45" pos:end="229:47">avr</name><operator pos:start="229:48" pos:end="229:49">-&gt;</operator><name pos:start="229:50" pos:end="229:62">in_sample_fmt</name></name></expr></argument>, <argument pos:start="229:65" pos:end="229:80"><expr pos:start="229:65" pos:end="229:80"><name pos:start="229:65" pos:end="229:80"><name pos:start="229:65" pos:end="229:67">avr</name><operator pos:start="229:68" pos:end="229:69">-&gt;</operator><name pos:start="229:70" pos:end="229:80">in_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="231:9" pos:end="237:9"><if pos:start="231:9" pos:end="237:9">if <condition pos:start="231:12" pos:end="231:24">(<expr pos:start="231:13" pos:end="231:23"><operator pos:start="231:13" pos:end="231:13">!</operator><name pos:start="231:14" pos:end="231:23"><name pos:start="231:14" pos:end="231:16">avr</name><operator pos:start="231:17" pos:end="231:18">-&gt;</operator><name pos:start="231:19" pos:end="231:23">ac_in</name></name></expr>)</condition> <block pos:start="231:26" pos:end="237:9">{<block_content pos:start="233:13" pos:end="235:23">

            <expr_stmt pos:start="233:13" pos:end="233:34"><expr pos:start="233:13" pos:end="233:33"><name pos:start="233:13" pos:end="233:15">ret</name> <operator pos:start="233:17" pos:end="233:17">=</operator> <call pos:start="233:19" pos:end="233:33"><name pos:start="233:19" pos:end="233:25">AVERROR</name><argument_list pos:start="233:26" pos:end="233:33">(<argument pos:start="233:27" pos:end="233:32"><expr pos:start="233:27" pos:end="233:32"><name pos:start="233:27" pos:end="233:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="235:13" pos:end="235:23">goto <name pos:start="235:18" pos:end="235:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="241:5" pos:end="265:5"><if pos:start="241:5" pos:end="265:5">if <condition pos:start="241:8" pos:end="241:32">(<expr pos:start="241:9" pos:end="241:31"><name pos:start="241:9" pos:end="241:31"><name pos:start="241:9" pos:end="241:11">avr</name><operator pos:start="241:12" pos:end="241:13">-&gt;</operator><name pos:start="241:14" pos:end="241:31">out_convert_needed</name></name></expr>)</condition> <block pos:start="241:34" pos:end="265:5">{<block_content pos:start="243:9" pos:end="263:9">

        <decl_stmt pos:start="243:9" pos:end="243:36"><decl pos:start="243:9" pos:end="243:35"><type pos:start="243:9" pos:end="243:27"><name pos:start="243:9" pos:end="243:27"><name pos:start="243:9" pos:end="243:12">enum</name> <name pos:start="243:14" pos:end="243:27">AVSampleFormat</name></name></type> <name pos:start="243:29" pos:end="243:35">src_fmt</name></decl>;</decl_stmt>

        <if_stmt pos:start="245:9" pos:end="251:41"><if pos:start="245:9" pos:end="247:47">if <condition pos:start="245:12" pos:end="245:35">(<expr pos:start="245:13" pos:end="245:34"><name pos:start="245:13" pos:end="245:34"><name pos:start="245:13" pos:end="245:15">avr</name><operator pos:start="245:16" pos:end="245:17">-&gt;</operator><name pos:start="245:18" pos:end="245:34">in_convert_needed</name></name></expr>)</condition><block type="pseudo" pos:start="247:13" pos:end="247:47"><block_content pos:start="247:13" pos:end="247:47">

            <expr_stmt pos:start="247:13" pos:end="247:47"><expr pos:start="247:13" pos:end="247:46"><name pos:start="247:13" pos:end="247:19">src_fmt</name> <operator pos:start="247:21" pos:end="247:21">=</operator> <name pos:start="247:23" pos:end="247:46"><name pos:start="247:23" pos:end="247:25">avr</name><operator pos:start="247:26" pos:end="247:27">-&gt;</operator><name pos:start="247:28" pos:end="247:46">internal_sample_fmt</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="249:9" pos:end="251:41">else<block type="pseudo" pos:start="251:13" pos:end="251:41"><block_content pos:start="251:13" pos:end="251:41">

            <expr_stmt pos:start="251:13" pos:end="251:41"><expr pos:start="251:13" pos:end="251:40"><name pos:start="251:13" pos:end="251:19">src_fmt</name> <operator pos:start="251:21" pos:end="251:21">=</operator> <name pos:start="251:23" pos:end="251:40"><name pos:start="251:23" pos:end="251:25">avr</name><operator pos:start="251:26" pos:end="251:27">-&gt;</operator><name pos:start="251:28" pos:end="251:40">in_sample_fmt</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="253:9" pos:end="255:64"><expr pos:start="253:9" pos:end="255:63"><name pos:start="253:9" pos:end="253:19"><name pos:start="253:9" pos:end="253:11">avr</name><operator pos:start="253:12" pos:end="253:13">-&gt;</operator><name pos:start="253:14" pos:end="253:19">ac_out</name></name> <operator pos:start="253:21" pos:end="253:21">=</operator> <call pos:start="253:23" pos:end="255:63"><name pos:start="253:23" pos:end="253:44">ff_audio_convert_alloc</name><argument_list pos:start="253:45" pos:end="255:63">(<argument pos:start="253:46" pos:end="253:48"><expr pos:start="253:46" pos:end="253:48"><name pos:start="253:46" pos:end="253:48">avr</name></expr></argument>, <argument pos:start="253:51" pos:end="253:69"><expr pos:start="253:51" pos:end="253:69"><name pos:start="253:51" pos:end="253:69"><name pos:start="253:51" pos:end="253:53">avr</name><operator pos:start="253:54" pos:end="253:55">-&gt;</operator><name pos:start="253:56" pos:end="253:69">out_sample_fmt</name></name></expr></argument>, <argument pos:start="253:72" pos:end="253:78"><expr pos:start="253:72" pos:end="253:78"><name pos:start="253:72" pos:end="253:78">src_fmt</name></expr></argument>,

                                             <argument pos:start="255:46" pos:end="255:62"><expr pos:start="255:46" pos:end="255:62"><name pos:start="255:46" pos:end="255:62"><name pos:start="255:46" pos:end="255:48">avr</name><operator pos:start="255:49" pos:end="255:50">-&gt;</operator><name pos:start="255:51" pos:end="255:62">out_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="257:9" pos:end="263:9"><if pos:start="257:9" pos:end="263:9">if <condition pos:start="257:12" pos:end="257:25">(<expr pos:start="257:13" pos:end="257:24"><operator pos:start="257:13" pos:end="257:13">!</operator><name pos:start="257:14" pos:end="257:24"><name pos:start="257:14" pos:end="257:16">avr</name><operator pos:start="257:17" pos:end="257:18">-&gt;</operator><name pos:start="257:19" pos:end="257:24">ac_out</name></name></expr>)</condition> <block pos:start="257:27" pos:end="263:9">{<block_content pos:start="259:13" pos:end="261:23">

            <expr_stmt pos:start="259:13" pos:end="259:34"><expr pos:start="259:13" pos:end="259:33"><name pos:start="259:13" pos:end="259:15">ret</name> <operator pos:start="259:17" pos:end="259:17">=</operator> <call pos:start="259:19" pos:end="259:33"><name pos:start="259:19" pos:end="259:25">AVERROR</name><argument_list pos:start="259:26" pos:end="259:33">(<argument pos:start="259:27" pos:end="259:32"><expr pos:start="259:27" pos:end="259:32"><name pos:start="259:27" pos:end="259:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="261:13" pos:end="261:23">goto <name pos:start="261:18" pos:end="261:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="267:5" pos:end="279:5"><if pos:start="267:5" pos:end="279:5">if <condition pos:start="267:8" pos:end="267:29">(<expr pos:start="267:9" pos:end="267:28"><name pos:start="267:9" pos:end="267:28"><name pos:start="267:9" pos:end="267:11">avr</name><operator pos:start="267:12" pos:end="267:13">-&gt;</operator><name pos:start="267:14" pos:end="267:28">resample_needed</name></name></expr>)</condition> <block pos:start="267:31" pos:end="279:5">{<block_content pos:start="269:9" pos:end="277:9">

        <expr_stmt pos:start="269:9" pos:end="269:52"><expr pos:start="269:9" pos:end="269:51"><name pos:start="269:9" pos:end="269:21"><name pos:start="269:9" pos:end="269:11">avr</name><operator pos:start="269:12" pos:end="269:13">-&gt;</operator><name pos:start="269:14" pos:end="269:21">resample</name></name> <operator pos:start="269:23" pos:end="269:23">=</operator> <call pos:start="269:25" pos:end="269:51"><name pos:start="269:25" pos:end="269:46">ff_audio_resample_init</name><argument_list pos:start="269:47" pos:end="269:51">(<argument pos:start="269:48" pos:end="269:50"><expr pos:start="269:48" pos:end="269:50"><name pos:start="269:48" pos:end="269:50">avr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="271:9" pos:end="277:9"><if pos:start="271:9" pos:end="277:9">if <condition pos:start="271:12" pos:end="271:27">(<expr pos:start="271:13" pos:end="271:26"><operator pos:start="271:13" pos:end="271:13">!</operator><name pos:start="271:14" pos:end="271:26"><name pos:start="271:14" pos:end="271:16">avr</name><operator pos:start="271:17" pos:end="271:18">-&gt;</operator><name pos:start="271:19" pos:end="271:26">resample</name></name></expr>)</condition> <block pos:start="271:29" pos:end="277:9">{<block_content pos:start="273:13" pos:end="275:23">

            <expr_stmt pos:start="273:13" pos:end="273:34"><expr pos:start="273:13" pos:end="273:33"><name pos:start="273:13" pos:end="273:15">ret</name> <operator pos:start="273:17" pos:end="273:17">=</operator> <call pos:start="273:19" pos:end="273:33"><name pos:start="273:19" pos:end="273:25">AVERROR</name><argument_list pos:start="273:26" pos:end="273:33">(<argument pos:start="273:27" pos:end="273:32"><expr pos:start="273:27" pos:end="273:32"><name pos:start="273:27" pos:end="273:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="275:13" pos:end="275:23">goto <name pos:start="275:18" pos:end="275:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="281:5" pos:end="289:5"><if pos:start="281:5" pos:end="289:5">if <condition pos:start="281:8" pos:end="281:27">(<expr pos:start="281:9" pos:end="281:26"><name pos:start="281:9" pos:end="281:26"><name pos:start="281:9" pos:end="281:11">avr</name><operator pos:start="281:12" pos:end="281:13">-&gt;</operator><name pos:start="281:14" pos:end="281:26">mixing_needed</name></name></expr>)</condition> <block pos:start="281:29" pos:end="289:5">{<block_content pos:start="283:9" pos:end="287:23">

        <expr_stmt pos:start="283:9" pos:end="283:37"><expr pos:start="283:9" pos:end="283:36"><name pos:start="283:9" pos:end="283:11">ret</name> <operator pos:start="283:13" pos:end="283:13">=</operator> <call pos:start="283:15" pos:end="283:36"><name pos:start="283:15" pos:end="283:31">ff_audio_mix_init</name><argument_list pos:start="283:32" pos:end="283:36">(<argument pos:start="283:33" pos:end="283:35"><expr pos:start="283:33" pos:end="283:35"><name pos:start="283:33" pos:end="283:35">avr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="285:9" pos:end="287:23"><if pos:start="285:9" pos:end="287:23">if <condition pos:start="285:12" pos:end="285:20">(<expr pos:start="285:13" pos:end="285:19"><name pos:start="285:13" pos:end="285:15">ret</name> <operator pos:start="285:17" pos:end="285:17">&lt;</operator> <literal type="number" pos:start="285:19" pos:end="285:19">0</literal></expr>)</condition><block type="pseudo" pos:start="287:13" pos:end="287:23"><block_content pos:start="287:13" pos:end="287:23">

            <goto pos:start="287:13" pos:end="287:23">goto <name pos:start="287:18" pos:end="287:22">error</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="293:5" pos:end="293:13">return <expr pos:start="293:12" pos:end="293:12"><literal type="number" pos:start="293:12" pos:end="293:12">0</literal></expr>;</return>



<label pos:start="297:1" pos:end="297:6"><name pos:start="297:1" pos:end="297:5">error</name>:</label>

    <expr_stmt pos:start="299:5" pos:end="299:26"><expr pos:start="299:5" pos:end="299:25"><call pos:start="299:5" pos:end="299:25"><name pos:start="299:5" pos:end="299:20">avresample_close</name><argument_list pos:start="299:21" pos:end="299:25">(<argument pos:start="299:22" pos:end="299:24"><expr pos:start="299:22" pos:end="299:24"><name pos:start="299:22" pos:end="299:24">avr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="301:5" pos:end="301:15">return <expr pos:start="301:12" pos:end="301:14"><name pos:start="301:12" pos:end="301:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
