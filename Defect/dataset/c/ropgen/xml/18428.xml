<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18428.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">aio_signal_handler</name><parameter_list pos:start="1:31" pos:end="1:42">(<parameter pos:start="1:32" pos:end="1:41"><decl pos:start="1:32" pos:end="1:41"><type pos:start="1:32" pos:end="1:34"><name pos:start="1:32" pos:end="1:34">int</name></type> <name pos:start="1:36" pos:end="1:41">signum</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="28:0">

<cpp:if pos:start="5:1" pos:end="5:44">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:44"><operator pos:start="5:5" pos:end="5:5">!</operator><call pos:start="5:6" pos:end="5:22"><name pos:start="5:6" pos:end="5:12">defined</name><argument_list pos:start="5:13" pos:end="5:22">(<argument pos:start="5:14" pos:end="5:21"><expr pos:start="5:14" pos:end="5:21"><name pos:start="5:14" pos:end="5:21">QEMU_IMG</name></expr></argument>)</argument_list></call> <operator pos:start="5:24" pos:end="5:25">&amp;&amp;</operator> <operator pos:start="5:27" pos:end="5:27">!</operator><call pos:start="5:28" pos:end="5:44"><name pos:start="5:28" pos:end="5:34">defined</name><argument_list pos:start="5:35" pos:end="5:44">(<argument pos:start="5:36" pos:end="5:43"><expr pos:start="5:36" pos:end="5:43"><name pos:start="5:36" pos:end="5:43">QEMU_NBD</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">env</name> <init pos:start="7:19" pos:end="7:34">= <expr pos:start="7:21" pos:end="7:34"><name pos:start="7:21" pos:end="7:34">cpu_single_env</name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="28:0"><if pos:start="9:5" pos:end="28:0">if <condition pos:start="9:8" pos:end="9:12">(<expr pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">env</name></expr>)</condition> <block pos:start="9:14" pos:end="28:0">{<block_content pos:start="13:9" pos:end="24:0">

        <comment type="block" pos:start="11:9" pos:end="11:70">/* stop the currently executing cpu because a timer occured */</comment>

        <expr_stmt pos:start="13:9" pos:end="16:0"><expr pos:start="13:9" pos:end="13:46"><call pos:start="13:9" pos:end="13:46"><name pos:start="13:9" pos:end="13:21">cpu_interrupt</name><argument_list pos:start="13:22" pos:end="13:46">(<argument pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:25">env</name></expr></argument>, <argument pos:start="13:28" pos:end="13:45"><expr pos:start="13:28" pos:end="13:45"><name pos:start="13:28" pos:end="13:45">CPU_INTERRUPT_EXIT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="15:1" pos:end="15:16">#<cpp:directive pos:start="15:2" pos:end="15:6">ifdef</cpp:directive> <name pos:start="15:8" pos:end="15:16">USE_KQEMU</name></cpp:ifdef>

        <if_stmt pos:start="17:9" pos:end="24:0"><if pos:start="17:9" pos:end="24:0">if <condition pos:start="17:12" pos:end="17:31">(<expr pos:start="17:13" pos:end="17:30"><name pos:start="17:13" pos:end="17:30"><name pos:start="17:13" pos:end="17:15">env</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:30">kqemu_enabled</name></name></expr>)</condition> <block pos:start="17:33" pos:end="24:0">{<block_content pos:start="19:13" pos:end="19:37">

            <expr_stmt pos:start="19:13" pos:end="19:37"><expr pos:start="19:13" pos:end="19:36"><call pos:start="19:13" pos:end="19:36"><name pos:start="19:13" pos:end="19:31">kqemu_cpu_interrupt</name><argument_list pos:start="19:32" pos:end="19:36">(<argument pos:start="19:33" pos:end="19:35"><expr pos:start="19:33" pos:end="19:35"><name pos:start="19:33" pos:end="19:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
