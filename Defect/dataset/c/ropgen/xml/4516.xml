<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4516.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:32">virtio_scsi_dataplane_start</name><parameter_list pos:start="1:33" pos:end="1:47">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:43">VirtIOSCSI</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:32">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">rc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:57"><decl pos:start="9:5" pos:end="9:56"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">BusState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">qbus</name> <init pos:start="9:20" pos:end="9:56">= <expr pos:start="9:22" pos:end="9:56"><call pos:start="9:22" pos:end="9:56"><name pos:start="9:22" pos:end="9:24">BUS</name><argument_list pos:start="9:25" pos:end="9:56">(<argument pos:start="9:26" pos:end="9:55"><expr pos:start="9:26" pos:end="9:55"><call pos:start="9:26" pos:end="9:55"><name pos:start="9:26" pos:end="9:44">qdev_get_parent_bus</name><argument_list pos:start="9:45" pos:end="9:55">(<argument pos:start="9:46" pos:end="9:54"><expr pos:start="9:46" pos:end="9:54"><call pos:start="9:46" pos:end="9:54"><name pos:start="9:46" pos:end="9:51">DEVICE</name><argument_list pos:start="9:52" pos:end="9:54">(<argument pos:start="9:53" pos:end="9:53"><expr pos:start="9:53" pos:end="9:53"><name pos:start="9:53" pos:end="9:53">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">VirtioBusClass</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">k</name> <init pos:start="11:23" pos:end="11:50">= <expr pos:start="11:25" pos:end="11:50"><call pos:start="11:25" pos:end="11:50"><name pos:start="11:25" pos:end="11:44">VIRTIO_BUS_GET_CLASS</name><argument_list pos:start="11:45" pos:end="11:50">(<argument pos:start="11:46" pos:end="11:49"><expr pos:start="11:46" pos:end="11:49"><name pos:start="11:46" pos:end="11:49">qbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:49"><decl pos:start="13:5" pos:end="13:48"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">VirtIOSCSICommon</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:24">vs</name> <init pos:start="13:26" pos:end="13:48">= <expr pos:start="13:28" pos:end="13:48"><call pos:start="13:28" pos:end="13:48"><name pos:start="13:28" pos:end="13:45">VIRTIO_SCSI_COMMON</name><argument_list pos:start="13:46" pos:end="13:48">(<argument pos:start="13:47" pos:end="13:47"><expr pos:start="13:47" pos:end="13:47"><name pos:start="13:47" pos:end="13:47">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="23:62">(<expr pos:start="17:9" pos:end="23:61"><name pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:28">dataplane_started</name></name> <operator pos:start="17:30" pos:end="17:31">||</operator>

        <name pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:29">dataplane_starting</name></name> <operator pos:start="19:31" pos:end="19:32">||</operator>

        <name pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:27">dataplane_fenced</name></name> <operator pos:start="21:29" pos:end="21:30">||</operator>

        <name pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:14">ctx</name></name> <operator pos:start="23:16" pos:end="23:17">!=</operator> <call pos:start="23:19" pos:end="23:61"><name pos:start="23:19" pos:end="23:42">iothread_get_aio_context</name><argument_list pos:start="23:43" pos:end="23:61">(<argument pos:start="23:44" pos:end="23:60"><expr pos:start="23:44" pos:end="23:60"><name pos:start="23:44" pos:end="23:60"><name pos:start="23:44" pos:end="23:45">vs</name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:51">conf</name><operator pos:start="23:52" pos:end="23:52">.</operator><name pos:start="23:53" pos:end="23:60">iothread</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:64" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:25">dataplane_starting</name></name> <operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:32">true</name></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:37">/* Set up guest notifier (irq) */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:77"><expr pos:start="37:5" pos:end="37:76"><name pos:start="37:5" pos:end="37:6">rc</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <call pos:start="37:10" pos:end="37:76"><name pos:start="37:10" pos:end="37:31"><name pos:start="37:10" pos:end="37:10">k</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:31">set_guest_notifiers</name></name><argument_list pos:start="37:32" pos:end="37:76">(<argument pos:start="37:33" pos:end="37:44"><expr pos:start="37:33" pos:end="37:44"><name pos:start="37:33" pos:end="37:44"><name pos:start="37:33" pos:end="37:36">qbus</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:44">parent</name></name></expr></argument>, <argument pos:start="37:47" pos:end="37:69"><expr pos:start="37:47" pos:end="37:69"><name pos:start="37:47" pos:end="37:65"><name pos:start="37:47" pos:end="37:48">vs</name><operator pos:start="37:49" pos:end="37:50">-&gt;</operator><name pos:start="37:51" pos:end="37:54">conf</name><operator pos:start="37:55" pos:end="37:55">.</operator><name pos:start="37:56" pos:end="37:65">num_queues</name></name> <operator pos:start="37:67" pos:end="37:67">+</operator> <literal type="number" pos:start="37:69" pos:end="37:69">2</literal></expr></argument>, <argument pos:start="37:72" pos:end="37:75"><expr pos:start="37:72" pos:end="37:75"><name pos:start="37:72" pos:end="37:75">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:10">rc</name> <operator pos:start="39:12" pos:end="39:13">!=</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition> <block pos:start="39:18" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:34">

        <expr_stmt pos:start="41:9" pos:end="43:51"><expr pos:start="41:9" pos:end="43:50"><call pos:start="41:9" pos:end="43:50"><name pos:start="41:9" pos:end="41:15">fprintf</name><argument_list pos:start="41:16" pos:end="43:50">(<argument pos:start="41:17" pos:end="41:22"><expr pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:22">stderr</name></expr></argument>, <argument pos:start="41:25" pos:end="43:45"><expr pos:start="41:25" pos:end="43:45"><literal type="string" pos:start="41:25" pos:end="41:75">"virtio-scsi: Failed to set guest notifiers (%d), "</literal>

                <literal type="string" pos:start="43:17" pos:end="43:45">"ensure -enable-kvm is set\n"</literal></expr></argument>, <argument pos:start="43:48" pos:end="43:49"><expr pos:start="43:48" pos:end="43:49"><name pos:start="43:48" pos:end="43:49">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:34">goto <name pos:start="45:14" pos:end="45:33">fail_guest_notifiers</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:32"><expr pos:start="51:5" pos:end="51:31"><call pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:23">aio_context_acquire</name><argument_list pos:start="51:24" pos:end="51:31">(<argument pos:start="51:25" pos:end="51:30"><expr pos:start="51:25" pos:end="51:30"><name pos:start="51:25" pos:end="51:30"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:30">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:51"><expr pos:start="53:5" pos:end="53:50"><name pos:start="53:5" pos:end="53:6">rc</name> <operator pos:start="53:8" pos:end="53:8">=</operator> <call pos:start="53:10" pos:end="53:50"><name pos:start="53:10" pos:end="53:31">virtio_scsi_vring_init</name><argument_list pos:start="53:32" pos:end="53:50">(<argument pos:start="53:33" pos:end="53:33"><expr pos:start="53:33" pos:end="53:33"><name pos:start="53:33" pos:end="53:33">s</name></expr></argument>, <argument pos:start="53:36" pos:end="53:46"><expr pos:start="53:36" pos:end="53:46"><name pos:start="53:36" pos:end="53:46"><name pos:start="53:36" pos:end="53:37">vs</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:46">ctrl_vq</name></name></expr></argument>, <argument pos:start="53:49" pos:end="53:49"><expr pos:start="53:49" pos:end="53:49"><literal type="number" pos:start="53:49" pos:end="53:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:11">(<expr pos:start="55:9" pos:end="55:10"><name pos:start="55:9" pos:end="55:10">rc</name></expr>)</condition> <block pos:start="55:13" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:25">

        <goto pos:start="57:9" pos:end="57:25">goto <name pos:start="57:14" pos:end="57:24">fail_vrings</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:52"><expr pos:start="61:5" pos:end="61:51"><name pos:start="61:5" pos:end="61:6">rc</name> <operator pos:start="61:8" pos:end="61:8">=</operator> <call pos:start="61:10" pos:end="61:51"><name pos:start="61:10" pos:end="61:31">virtio_scsi_vring_init</name><argument_list pos:start="61:32" pos:end="61:51">(<argument pos:start="61:33" pos:end="61:33"><expr pos:start="61:33" pos:end="61:33"><name pos:start="61:33" pos:end="61:33">s</name></expr></argument>, <argument pos:start="61:36" pos:end="61:47"><expr pos:start="61:36" pos:end="61:47"><name pos:start="61:36" pos:end="61:47"><name pos:start="61:36" pos:end="61:37">vs</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:47">event_vq</name></name></expr></argument>, <argument pos:start="61:50" pos:end="61:50"><expr pos:start="61:50" pos:end="61:50"><literal type="number" pos:start="61:50" pos:end="61:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:11">(<expr pos:start="63:9" pos:end="63:10"><name pos:start="63:9" pos:end="63:10">rc</name></expr>)</condition> <block pos:start="63:13" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:25">

        <goto pos:start="65:9" pos:end="65:25">goto <name pos:start="65:14" pos:end="65:24">fail_vrings</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <for pos:start="69:5" pos:end="79:5">for <control pos:start="69:9" pos:end="69:45">(<init pos:start="69:10" pos:end="69:15"><expr pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:10">i</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>;</init> <condition pos:start="69:17" pos:end="69:40"><expr pos:start="69:17" pos:end="69:39"><name pos:start="69:17" pos:end="69:17">i</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <name pos:start="69:21" pos:end="69:39"><name pos:start="69:21" pos:end="69:22">vs</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:28">conf</name><operator pos:start="69:29" pos:end="69:29">.</operator><name pos:start="69:30" pos:end="69:39">num_queues</name></name></expr>;</condition> <incr pos:start="69:42" pos:end="69:44"><expr pos:start="69:42" pos:end="69:44"><name pos:start="69:42" pos:end="69:42">i</name><operator pos:start="69:43" pos:end="69:44">++</operator></expr></incr>)</control> <block pos:start="69:47" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:9">

        <expr_stmt pos:start="71:9" pos:end="71:62"><expr pos:start="71:9" pos:end="71:61"><name pos:start="71:9" pos:end="71:10">rc</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <call pos:start="71:14" pos:end="71:61"><name pos:start="71:14" pos:end="71:35">virtio_scsi_vring_init</name><argument_list pos:start="71:36" pos:end="71:61">(<argument pos:start="71:37" pos:end="71:37"><expr pos:start="71:37" pos:end="71:37"><name pos:start="71:37" pos:end="71:37">s</name></expr></argument>, <argument pos:start="71:40" pos:end="71:53"><expr pos:start="71:40" pos:end="71:53"><name pos:start="71:40" pos:end="71:53"><name pos:start="71:40" pos:end="71:41">vs</name><operator pos:start="71:42" pos:end="71:43">-&gt;</operator><name pos:start="71:44" pos:end="71:50">cmd_vqs</name><index pos:start="71:51" pos:end="71:53">[<expr pos:start="71:52" pos:end="71:52"><name pos:start="71:52" pos:end="71:52">i</name></expr>]</index></name></expr></argument>, <argument pos:start="71:56" pos:end="71:60"><expr pos:start="71:56" pos:end="71:60"><name pos:start="71:56" pos:end="71:56">i</name> <operator pos:start="71:58" pos:end="71:58">+</operator> <literal type="number" pos:start="71:60" pos:end="71:60">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="77:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:15">(<expr pos:start="73:13" pos:end="73:14"><name pos:start="73:13" pos:end="73:14">rc</name></expr>)</condition> <block pos:start="73:17" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:29">

            <goto pos:start="75:13" pos:end="75:29">goto <name pos:start="75:18" pos:end="75:28">fail_vrings</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="83:5" pos:end="83:34"><expr pos:start="83:5" pos:end="83:33"><name pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:25">dataplane_starting</name></name> <operator pos:start="83:27" pos:end="83:27">=</operator> <name pos:start="83:29" pos:end="83:33">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:32"><expr pos:start="85:5" pos:end="85:31"><name pos:start="85:5" pos:end="85:24"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:24">dataplane_started</name></name> <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:31">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:32"><expr pos:start="87:5" pos:end="87:31"><call pos:start="87:5" pos:end="87:31"><name pos:start="87:5" pos:end="87:23">aio_context_release</name><argument_list pos:start="87:24" pos:end="87:31">(<argument pos:start="87:25" pos:end="87:30"><expr pos:start="87:25" pos:end="87:30"><name pos:start="87:25" pos:end="87:30"><name pos:start="87:25" pos:end="87:25">s</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:30">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:11">return;</return>



<label pos:start="93:1" pos:end="93:12"><name pos:start="93:1" pos:end="93:11">fail_vrings</name>:</label>

    <expr_stmt pos:start="95:5" pos:end="95:29"><expr pos:start="95:5" pos:end="95:28"><call pos:start="95:5" pos:end="95:28"><name pos:start="95:5" pos:end="95:25">virtio_scsi_clear_aio</name><argument_list pos:start="95:26" pos:end="95:28">(<argument pos:start="95:27" pos:end="95:27"><expr pos:start="95:27" pos:end="95:27"><name pos:start="95:27" pos:end="95:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:32"><expr pos:start="97:5" pos:end="97:31"><call pos:start="97:5" pos:end="97:31"><name pos:start="97:5" pos:end="97:23">aio_context_release</name><argument_list pos:start="97:24" pos:end="97:31">(<argument pos:start="97:25" pos:end="97:30"><expr pos:start="97:25" pos:end="97:30"><name pos:start="97:25" pos:end="97:30"><name pos:start="97:25" pos:end="97:25">s</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:30">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="99:5" pos:end="103:5">for <control pos:start="99:9" pos:end="99:49">(<init pos:start="99:10" pos:end="99:15"><expr pos:start="99:10" pos:end="99:14"><name pos:start="99:10" pos:end="99:10">i</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <literal type="number" pos:start="99:14" pos:end="99:14">0</literal></expr>;</init> <condition pos:start="99:17" pos:end="99:44"><expr pos:start="99:17" pos:end="99:43"><name pos:start="99:17" pos:end="99:17">i</name> <operator pos:start="99:19" pos:end="99:19">&lt;</operator> <name pos:start="99:21" pos:end="99:39"><name pos:start="99:21" pos:end="99:22">vs</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:28">conf</name><operator pos:start="99:29" pos:end="99:29">.</operator><name pos:start="99:30" pos:end="99:39">num_queues</name></name> <operator pos:start="99:41" pos:end="99:41">+</operator> <literal type="number" pos:start="99:43" pos:end="99:43">2</literal></expr>;</condition> <incr pos:start="99:46" pos:end="99:48"><expr pos:start="99:46" pos:end="99:48"><name pos:start="99:46" pos:end="99:46">i</name><operator pos:start="99:47" pos:end="99:48">++</operator></expr></incr>)</control> <block pos:start="99:51" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:53">

        <expr_stmt pos:start="101:9" pos:end="101:53"><expr pos:start="101:9" pos:end="101:52"><call pos:start="101:9" pos:end="101:52"><name pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:9">k</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:28">set_host_notifier</name></name><argument_list pos:start="101:29" pos:end="101:52">(<argument pos:start="101:30" pos:end="101:41"><expr pos:start="101:30" pos:end="101:41"><name pos:start="101:30" pos:end="101:41"><name pos:start="101:30" pos:end="101:33">qbus</name><operator pos:start="101:34" pos:end="101:35">-&gt;</operator><name pos:start="101:36" pos:end="101:41">parent</name></name></expr></argument>, <argument pos:start="101:44" pos:end="101:44"><expr pos:start="101:44" pos:end="101:44"><name pos:start="101:44" pos:end="101:44">i</name></expr></argument>, <argument pos:start="101:47" pos:end="101:51"><expr pos:start="101:47" pos:end="101:51"><name pos:start="101:47" pos:end="101:51">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="105:5" pos:end="105:73"><expr pos:start="105:5" pos:end="105:72"><call pos:start="105:5" pos:end="105:72"><name pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:5">k</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:26">set_guest_notifiers</name></name><argument_list pos:start="105:27" pos:end="105:72">(<argument pos:start="105:28" pos:end="105:39"><expr pos:start="105:28" pos:end="105:39"><name pos:start="105:28" pos:end="105:39"><name pos:start="105:28" pos:end="105:31">qbus</name><operator pos:start="105:32" pos:end="105:33">-&gt;</operator><name pos:start="105:34" pos:end="105:39">parent</name></name></expr></argument>, <argument pos:start="105:42" pos:end="105:64"><expr pos:start="105:42" pos:end="105:64"><name pos:start="105:42" pos:end="105:60"><name pos:start="105:42" pos:end="105:43">vs</name><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:49">conf</name><operator pos:start="105:50" pos:end="105:50">.</operator><name pos:start="105:51" pos:end="105:60">num_queues</name></name> <operator pos:start="105:62" pos:end="105:62">+</operator> <literal type="number" pos:start="105:64" pos:end="105:64">2</literal></expr></argument>, <argument pos:start="105:67" pos:end="105:71"><expr pos:start="105:67" pos:end="105:71"><name pos:start="105:67" pos:end="105:71">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="107:1" pos:end="107:21"><name pos:start="107:1" pos:end="107:20">fail_guest_notifiers</name>:</label>

    <expr_stmt pos:start="109:5" pos:end="109:31"><expr pos:start="109:5" pos:end="109:30"><name pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:23">dataplane_fenced</name></name> <operator pos:start="109:25" pos:end="109:25">=</operator> <name pos:start="109:27" pos:end="109:30">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:34"><expr pos:start="111:5" pos:end="111:33"><name pos:start="111:5" pos:end="111:25"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:25">dataplane_starting</name></name> <operator pos:start="111:27" pos:end="111:27">=</operator> <name pos:start="111:29" pos:end="111:33">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:32"><expr pos:start="113:5" pos:end="113:31"><name pos:start="113:5" pos:end="113:24"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:24">dataplane_started</name></name> <operator pos:start="113:26" pos:end="113:26">=</operator> <name pos:start="113:28" pos:end="113:31">true</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
