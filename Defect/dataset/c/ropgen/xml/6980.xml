<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6980.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">kvmppc_set_papr</name><parameter_list pos:start="1:21" pos:end="1:38">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:32">CPUPPCState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:63">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:25">kvm_enable_cap</name></name></type> <name pos:start="5:27" pos:end="5:29">cap</name> <init pos:start="5:31" pos:end="5:34">= <expr pos:start="5:33" pos:end="5:34"><block pos:start="5:33" pos:end="5:34">{}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">kvm_one_reg</name></name></type> <name pos:start="7:24" pos:end="7:26">reg</name> <init pos:start="7:28" pos:end="7:31">= <expr pos:start="7:30" pos:end="7:31"><block pos:start="7:30" pos:end="7:31">{}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:20">kvm_sregs</name></name></type> <name pos:start="9:22" pos:end="9:26">sregs</name> <init pos:start="9:28" pos:end="9:31">= <expr pos:start="9:30" pos:end="9:31"><block pos:start="9:30" pos:end="9:31">{}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:17">hior</name> <init pos:start="13:19" pos:end="13:38">= <expr pos:start="13:21" pos:end="13:38"><name pos:start="13:21" pos:end="13:38"><name pos:start="13:21" pos:end="13:23">env</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:28">spr</name><index pos:start="13:29" pos:end="13:38">[<expr pos:start="13:30" pos:end="13:37"><name pos:start="13:30" pos:end="13:37">SPR_HIOR</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:7">cap</name><operator pos:start="17:8" pos:end="17:8">.</operator><name pos:start="17:9" pos:end="17:11">cap</name></name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:30">KVM_CAP_PPC_PAPR</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:52"><expr pos:start="19:5" pos:end="19:51"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:51"><name pos:start="19:11" pos:end="19:24">kvm_vcpu_ioctl</name><argument_list pos:start="19:25" pos:end="19:51">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">env</name></expr></argument>, <argument pos:start="19:31" pos:end="19:44"><expr pos:start="19:31" pos:end="19:44"><name pos:start="19:31" pos:end="19:44">KVM_ENABLE_CAP</name></expr></argument>, <argument pos:start="19:47" pos:end="19:50"><expr pos:start="19:47" pos:end="19:50"><operator pos:start="19:47" pos:end="19:47">&amp;</operator><name pos:start="19:48" pos:end="19:50">cap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">ret</name></expr>)</condition> <block pos:start="23:14" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:18">

        <goto pos:start="25:9" pos:end="25:18">goto <name pos:start="25:14" pos:end="25:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="43:7">/*

     * XXX We set HIOR here. It really should be a qdev property of

     *     the CPU node, but we don't have CPUs converted to qdev yet.

     *

     *     Once we have qdev CPUs, move HIOR to a qdev property and

     *     remove this chunk.

     */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:7">reg</name><operator pos:start="45:8" pos:end="45:8">.</operator><name pos:start="45:9" pos:end="45:10">id</name></name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:29">KVM_REG_PPC_HIOR</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:32"><expr pos:start="47:5" pos:end="47:31"><name pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:7">reg</name><operator pos:start="47:8" pos:end="47:8">.</operator><name pos:start="47:9" pos:end="47:12">addr</name></name> <operator pos:start="47:14" pos:end="47:14">=</operator> <operator pos:start="47:16" pos:end="47:16">(</operator><name pos:start="47:17" pos:end="47:25">uintptr_t</name><operator pos:start="47:26" pos:end="47:26">)</operator><operator pos:start="47:27" pos:end="47:27">&amp;</operator><name pos:start="47:28" pos:end="47:31">hior</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:53"><expr pos:start="49:5" pos:end="49:52"><name pos:start="49:5" pos:end="49:7">ret</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:52"><name pos:start="49:11" pos:end="49:24">kvm_vcpu_ioctl</name><argument_list pos:start="49:25" pos:end="49:52">(<argument pos:start="49:26" pos:end="49:28"><expr pos:start="49:26" pos:end="49:28"><name pos:start="49:26" pos:end="49:28">env</name></expr></argument>, <argument pos:start="49:31" pos:end="49:45"><expr pos:start="49:31" pos:end="49:45"><name pos:start="49:31" pos:end="49:45">KVM_SET_ONE_REG</name></expr></argument>, <argument pos:start="49:48" pos:end="49:51"><expr pos:start="49:48" pos:end="49:51"><operator pos:start="49:48" pos:end="49:48">&amp;</operator><name pos:start="49:49" pos:end="49:51">reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="61:5"><if pos:start="51:5" pos:end="61:5">if <condition pos:start="51:8" pos:end="51:12">(<expr pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">ret</name></expr>)</condition> <block pos:start="51:14" pos:end="61:5">{<block_content pos:start="53:9" pos:end="59:61">

        <expr_stmt pos:start="53:9" pos:end="59:61"><expr pos:start="53:9" pos:end="59:60"><call pos:start="53:9" pos:end="59:60"><name pos:start="53:9" pos:end="53:15">fprintf</name><argument_list pos:start="53:16" pos:end="59:60">(<argument pos:start="53:17" pos:end="53:22"><expr pos:start="53:17" pos:end="53:22"><name pos:start="53:17" pos:end="53:22">stderr</name></expr></argument>, <argument pos:start="53:25" pos:end="59:59"><expr pos:start="53:25" pos:end="59:59"><literal type="string" pos:start="53:25" pos:end="53:75">"Couldn't set HIOR. Maybe you're running an old \n"</literal>

                        <literal type="string" pos:start="55:25" pos:end="55:74">"kernel with support for HV KVM but no PAPR PR \n"</literal>

                        <literal type="string" pos:start="57:25" pos:end="57:78">"KVM in which case things will work. If they don't \n"</literal>

                        <literal type="string" pos:start="59:25" pos:end="59:59">"please update your host kernel!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:49">/* Set SDR1 so kernel space finds the HTAB */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:53"><expr pos:start="67:5" pos:end="67:52"><name pos:start="67:5" pos:end="67:7">ret</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <call pos:start="67:11" pos:end="67:52"><name pos:start="67:11" pos:end="67:24">kvm_vcpu_ioctl</name><argument_list pos:start="67:25" pos:end="67:52">(<argument pos:start="67:26" pos:end="67:28"><expr pos:start="67:26" pos:end="67:28"><name pos:start="67:26" pos:end="67:28">env</name></expr></argument>, <argument pos:start="67:31" pos:end="67:43"><expr pos:start="67:31" pos:end="67:43"><name pos:start="67:31" pos:end="67:43">KVM_GET_SREGS</name></expr></argument>, <argument pos:start="67:46" pos:end="67:51"><expr pos:start="67:46" pos:end="67:51"><operator pos:start="67:46" pos:end="67:46">&amp;</operator><name pos:start="67:47" pos:end="67:51">sregs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:12">(<expr pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">ret</name></expr>)</condition> <block pos:start="69:14" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:18">

        <goto pos:start="71:9" pos:end="71:18">goto <name pos:start="71:14" pos:end="71:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:40"><expr pos:start="77:5" pos:end="77:39"><name pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:9">sregs</name><operator pos:start="77:10" pos:end="77:10">.</operator><name pos:start="77:11" pos:end="77:11">u</name><operator pos:start="77:12" pos:end="77:12">.</operator><name pos:start="77:13" pos:end="77:13">s</name><operator pos:start="77:14" pos:end="77:14">.</operator><name pos:start="77:15" pos:end="77:18">sdr1</name></name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:39"><name pos:start="77:22" pos:end="77:24">env</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:29">spr</name><index pos:start="77:30" pos:end="77:39">[<expr pos:start="77:31" pos:end="77:38"><name pos:start="77:31" pos:end="77:38">SPR_SDR1</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:53"><expr pos:start="81:5" pos:end="81:52"><name pos:start="81:5" pos:end="81:7">ret</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <call pos:start="81:11" pos:end="81:52"><name pos:start="81:11" pos:end="81:24">kvm_vcpu_ioctl</name><argument_list pos:start="81:25" pos:end="81:52">(<argument pos:start="81:26" pos:end="81:28"><expr pos:start="81:26" pos:end="81:28"><name pos:start="81:26" pos:end="81:28">env</name></expr></argument>, <argument pos:start="81:31" pos:end="81:43"><expr pos:start="81:31" pos:end="81:43"><name pos:start="81:31" pos:end="81:43">KVM_SET_SREGS</name></expr></argument>, <argument pos:start="81:46" pos:end="81:51"><expr pos:start="81:46" pos:end="81:51"><operator pos:start="81:46" pos:end="81:46">&amp;</operator><name pos:start="81:47" pos:end="81:51">sregs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="87:5"><if pos:start="83:5" pos:end="87:5">if <condition pos:start="83:8" pos:end="83:12">(<expr pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">ret</name></expr>)</condition> <block pos:start="83:14" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:18">

        <goto pos:start="85:9" pos:end="85:18">goto <name pos:start="85:14" pos:end="85:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="91:5" pos:end="91:11">return;</return>



<label pos:start="95:1" pos:end="95:5"><name pos:start="95:1" pos:end="95:4">fail</name>:</label>

    <expr_stmt pos:start="97:5" pos:end="97:63"><expr pos:start="97:5" pos:end="97:62"><call pos:start="97:5" pos:end="97:62"><name pos:start="97:5" pos:end="97:13">cpu_abort</name><argument_list pos:start="97:14" pos:end="97:62">(<argument pos:start="97:15" pos:end="97:17"><expr pos:start="97:15" pos:end="97:17"><name pos:start="97:15" pos:end="97:17">env</name></expr></argument>, <argument pos:start="97:20" pos:end="97:61"><expr pos:start="97:20" pos:end="97:61"><literal type="string" pos:start="97:20" pos:end="97:61">"This KVM version does not support PAPR\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
