<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3200.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">do_token_out</name><parameter_list pos:start="1:24" pos:end="1:51">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:33">USBDevice</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:47">USBPacket</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:5">

    <if_stmt pos:start="5:5" pos:end="7:42"><if pos:start="5:5" pos:end="7:42">if <condition pos:start="5:8" pos:end="5:22">(<expr pos:start="5:9" pos:end="5:21"><name pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:9">p</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:16">devep</name></name> <operator pos:start="5:18" pos:end="5:19">!=</operator> <literal type="number" pos:start="5:21" pos:end="5:21">0</literal></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:42"><block_content pos:start="7:9" pos:end="7:42">

        <return pos:start="7:9" pos:end="7:42">return <expr pos:start="7:16" pos:end="7:41"><call pos:start="7:16" pos:end="7:41"><name pos:start="7:16" pos:end="7:35"><name pos:start="7:16" pos:end="7:16">s</name><operator pos:start="7:17" pos:end="7:18">-&gt;</operator><name pos:start="7:19" pos:end="7:22">info</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:35">handle_data</name></name><argument_list pos:start="7:36" pos:end="7:41">(<argument pos:start="7:37" pos:end="7:37"><expr pos:start="7:37" pos:end="7:37"><name pos:start="7:37" pos:end="7:37">s</name></expr></argument>, <argument pos:start="7:40" pos:end="7:40"><expr pos:start="7:40" pos:end="7:40"><name pos:start="7:40" pos:end="7:40">p</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <switch pos:start="11:5" pos:end="65:5">switch<condition pos:start="11:11" pos:end="11:26">(<expr pos:start="11:12" pos:end="11:25"><name pos:start="11:12" pos:end="11:25"><name pos:start="11:12" pos:end="11:12">s</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:25">setup_state</name></name></expr>)</condition> <block pos:start="11:28" pos:end="65:5">{<block_content pos:start="13:5" pos:end="63:29">

    <case pos:start="13:5" pos:end="13:25">case <expr pos:start="13:10" pos:end="13:24"><name pos:start="13:10" pos:end="13:24">SETUP_STATE_ACK</name></expr>:</case>

        <if_stmt pos:start="15:9" pos:end="25:9"><if pos:start="15:9" pos:end="21:9">if <condition pos:start="15:12" pos:end="15:41">(<expr pos:start="15:13" pos:end="15:40"><name pos:start="15:13" pos:end="15:27"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:24">setup_buf</name><index pos:start="15:25" pos:end="15:27">[<expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr>]</index></name> <operator pos:start="15:29" pos:end="15:29">&amp;</operator> <name pos:start="15:31" pos:end="15:40">USB_DIR_IN</name></expr>)</condition> <block pos:start="15:43" pos:end="21:9">{<block_content pos:start="17:13" pos:end="17:46">

            <expr_stmt pos:start="17:13" pos:end="17:46"><expr pos:start="17:13" pos:end="17:45"><name pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:26">setup_state</name></name> <operator pos:start="17:28" pos:end="17:28">=</operator> <name pos:start="17:30" pos:end="17:45">SETUP_STATE_IDLE</name></expr>;</expr_stmt>

            <comment type="block" pos:start="19:13" pos:end="19:29">/* transfer OK */</comment>

        </block_content>}</block></if> <else pos:start="21:11" pos:end="25:9">else <block pos:start="21:16" pos:end="25:9">{<block_content>

            <comment type="block" pos:start="23:13" pos:end="23:42">/* ignore additional output */</comment>

        </block_content>}</block></else></if_stmt>

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return>



    <case pos:start="31:5" pos:end="31:26">case <expr pos:start="31:10" pos:end="31:25"><name pos:start="31:10" pos:end="31:25">SETUP_STATE_DATA</name></expr>:</case>

        <if_stmt pos:start="33:9" pos:end="51:9"><if pos:start="33:9" pos:end="51:9">if <condition pos:start="33:12" pos:end="33:44">(<expr pos:start="33:13" pos:end="33:43"><operator pos:start="33:13" pos:end="33:13">!</operator><operator pos:start="33:14" pos:end="33:14">(</operator><name pos:start="33:15" pos:end="33:29"><name pos:start="33:15" pos:end="33:15">s</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:26">setup_buf</name><index pos:start="33:27" pos:end="33:29">[<expr pos:start="33:28" pos:end="33:28"><literal type="number" pos:start="33:28" pos:end="33:28">0</literal></expr>]</index></name> <operator pos:start="33:31" pos:end="33:31">&amp;</operator> <name pos:start="33:33" pos:end="33:42">USB_DIR_IN</name><operator pos:start="33:43" pos:end="33:43">)</operator></expr>)</condition> <block pos:start="33:46" pos:end="51:9">{<block_content pos:start="35:13" pos:end="49:23">

            <decl_stmt pos:start="35:13" pos:end="35:52"><decl pos:start="35:13" pos:end="35:51"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:19">len</name> <init pos:start="35:21" pos:end="35:51">= <expr pos:start="35:23" pos:end="35:51"><name pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:23">s</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:34">setup_len</name></name> <operator pos:start="35:36" pos:end="35:36">-</operator> <name pos:start="35:38" pos:end="35:51"><name pos:start="35:38" pos:end="35:38">s</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:51">setup_index</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="37:13" pos:end="39:29"><if pos:start="37:13" pos:end="39:29">if <condition pos:start="37:16" pos:end="37:29">(<expr pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:19">len</name> <operator pos:start="37:21" pos:end="37:21">&gt;</operator> <name pos:start="37:23" pos:end="37:28"><name pos:start="37:23" pos:end="37:23">p</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:28">len</name></name></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:29"><block_content pos:start="39:17" pos:end="39:29">

                <expr_stmt pos:start="39:17" pos:end="39:29"><expr pos:start="39:17" pos:end="39:28"><name pos:start="39:17" pos:end="39:19">len</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <name pos:start="39:23" pos:end="39:28"><name pos:start="39:23" pos:end="39:23">p</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:28">len</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:63"><expr pos:start="41:13" pos:end="41:62"><call pos:start="41:13" pos:end="41:62"><name pos:start="41:13" pos:end="41:18">memcpy</name><argument_list pos:start="41:19" pos:end="41:62">(<argument pos:start="41:20" pos:end="41:47"><expr pos:start="41:20" pos:end="41:47"><name pos:start="41:20" pos:end="41:30"><name pos:start="41:20" pos:end="41:20">s</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:30">data_buf</name></name> <operator pos:start="41:32" pos:end="41:32">+</operator> <name pos:start="41:34" pos:end="41:47"><name pos:start="41:34" pos:end="41:34">s</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:47">setup_index</name></name></expr></argument>, <argument pos:start="41:50" pos:end="41:56"><expr pos:start="41:50" pos:end="41:56"><name pos:start="41:50" pos:end="41:56"><name pos:start="41:50" pos:end="41:50">p</name><operator pos:start="41:51" pos:end="41:52">-&gt;</operator><name pos:start="41:53" pos:end="41:56">data</name></name></expr></argument>, <argument pos:start="41:59" pos:end="41:61"><expr pos:start="41:59" pos:end="41:61"><name pos:start="41:59" pos:end="41:61">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:34"><expr pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:26">setup_index</name></name> <operator pos:start="43:28" pos:end="43:29">+=</operator> <name pos:start="43:31" pos:end="43:33">len</name></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:49"><if pos:start="45:13" pos:end="47:49">if <condition pos:start="45:16" pos:end="45:47">(<expr pos:start="45:17" pos:end="45:46"><name pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:30">setup_index</name></name> <operator pos:start="45:32" pos:end="45:33">&gt;=</operator> <name pos:start="45:35" pos:end="45:46"><name pos:start="45:35" pos:end="45:35">s</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:46">setup_len</name></name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:49"><block_content pos:start="47:17" pos:end="47:49">

                <expr_stmt pos:start="47:17" pos:end="47:49"><expr pos:start="47:17" pos:end="47:48"><name pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:30">setup_state</name></name> <operator pos:start="47:32" pos:end="47:32">=</operator> <name pos:start="47:34" pos:end="47:48">SETUP_STATE_ACK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="49:13" pos:end="49:23">return <expr pos:start="49:20" pos:end="49:22"><name pos:start="49:20" pos:end="49:22">len</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:42"><expr pos:start="55:9" pos:end="55:41"><name pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:22">setup_state</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:41">SETUP_STATE_IDLE</name></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:29">return <expr pos:start="57:16" pos:end="57:28"><name pos:start="57:16" pos:end="57:28">USB_RET_STALL</name></expr>;</return>



    <default pos:start="61:5" pos:end="61:12">default:</default>

        <return pos:start="63:9" pos:end="63:29">return <expr pos:start="63:16" pos:end="63:28"><name pos:start="63:16" pos:end="63:28">USB_RET_STALL</name></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
