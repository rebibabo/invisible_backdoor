<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19354.c" pos:tabs="8"><function pos:start="1:1" pos:end="10:46"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">mips_cpu_unassigned_access</name><parameter_list pos:start="1:32" pos:end="3:46">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:40">CPUState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">cs</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:57"><decl pos:start="1:47" pos:end="1:57"><type pos:start="1:47" pos:end="1:57"><name pos:start="1:47" pos:end="1:52">hwaddr</name></type> <name pos:start="1:54" pos:end="1:57">addr</name></decl></parameter>,
                                <parameter pos:start="2:33" pos:end="2:45"><decl pos:start="2:33" pos:end="2:45"><type pos:start="2:33" pos:end="2:45"><name pos:start="2:33" pos:end="2:36">bool</name></type> <name pos:start="2:38" pos:end="2:45">is_write</name></decl></parameter>, <parameter pos:start="2:48" pos:end="2:59"><decl pos:start="2:48" pos:end="2:59"><type pos:start="2:48" pos:end="2:59"><name pos:start="2:48" pos:end="2:51">bool</name></type> <name pos:start="2:53" pos:end="2:59">is_exec</name></decl></parameter>, <parameter pos:start="2:62" pos:end="2:71"><decl pos:start="2:62" pos:end="2:71"><type pos:start="2:62" pos:end="2:71"><name pos:start="2:62" pos:end="2:64">int</name></type> <name pos:start="2:66" pos:end="2:71">unused</name></decl></parameter>,
                                <parameter pos:start="3:33" pos:end="3:45"><decl pos:start="3:33" pos:end="3:45"><type pos:start="3:33" pos:end="3:45"><name pos:start="3:33" pos:end="3:40">unsigned</name></type> <name pos:start="3:42" pos:end="3:45">size</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="10:46">{<block_content pos:start="5:5" pos:end="10:46">
    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">MIPSCPU</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">cpu</name> <init pos:start="5:18" pos:end="5:31">= <expr pos:start="5:20" pos:end="5:31"><call pos:start="5:20" pos:end="5:31"><name pos:start="5:20" pos:end="5:27">MIPS_CPU</name><argument_list pos:start="5:28" pos:end="5:31">(<argument pos:start="5:29" pos:end="5:30"><expr pos:start="5:29" pos:end="5:30"><name pos:start="5:29" pos:end="5:30">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:34"><decl pos:start="6:5" pos:end="6:33"><type pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:16">CPUMIPSState</name> <modifier pos:start="6:18" pos:end="6:18">*</modifier></type><name pos:start="6:19" pos:end="6:21">env</name> <init pos:start="6:23" pos:end="6:33">= <expr pos:start="6:25" pos:end="6:33"><operator pos:start="6:25" pos:end="6:25">&amp;</operator><name pos:start="6:26" pos:end="6:33"><name pos:start="6:26" pos:end="6:28">cpu</name><operator pos:start="6:29" pos:end="6:30">-&gt;</operator><name pos:start="6:31" pos:end="6:33">env</name></name></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="7:5" pos:end="10:46"><if pos:start="7:5" pos:end="9:5">if <condition pos:start="7:8" pos:end="7:16">(<expr pos:start="7:9" pos:end="7:15"><name pos:start="7:9" pos:end="7:15">is_exec</name></expr>)</condition> <block pos:start="7:18" pos:end="9:5">{<block_content pos:start="8:9" pos:end="8:46">
        <expr_stmt pos:start="8:9" pos:end="8:46"><expr pos:start="8:9" pos:end="8:45"><call pos:start="8:9" pos:end="8:45"><name pos:start="8:9" pos:end="8:30">helper_raise_exception</name><argument_list pos:start="8:31" pos:end="8:45">(<argument pos:start="8:32" pos:end="8:34"><expr pos:start="8:32" pos:end="8:34"><name pos:start="8:32" pos:end="8:34">env</name></expr></argument>, <argument pos:start="8:37" pos:end="8:44"><expr pos:start="8:37" pos:end="8:44"><name pos:start="8:37" pos:end="8:44">EXCP_IBE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="9:7" pos:end="10:46">else <block pos:start="9:12" pos:end="10:46">{<block_content pos:start="10:9" pos:end="10:46">
        <expr_stmt pos:start="10:9" pos:end="10:46"><expr pos:start="10:9" pos:end="10:45"><call pos:start="10:9" pos:end="10:45"><name pos:start="10:9" pos:end="10:30">helper_raise_exception</name><argument_list pos:start="10:31" pos:end="10:45">(<argument pos:start="10:32" pos:end="10:34"><expr pos:start="10:32" pos:end="10:34"><name pos:start="10:32" pos:end="10:34">env</name></expr></argument>, <argument pos:start="10:37" pos:end="10:44"><expr pos:start="10:37" pos:end="10:44"><name pos:start="10:37" pos:end="10:44">EXCP_DBE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></function></unit>
