<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8042.c" pos:tabs="8"><function pos:start="1:1" pos:end="277:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">doTest</name><parameter_list pos:start="1:18" pos:end="5:68">(<parameter pos:start="1:19" pos:end="1:33"><decl pos:start="1:19" pos:end="1:33"><type pos:start="1:19" pos:end="1:30"><name pos:start="1:19" pos:end="1:25">uint8_t</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:33"><name pos:start="1:28" pos:end="1:30">ref</name><index pos:start="1:31" pos:end="1:33">[<expr pos:start="1:32" pos:end="1:32"><literal type="number" pos:start="1:32" pos:end="1:32">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:38">int</name></type> <name pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:48">refStride</name><index pos:start="1:49" pos:end="1:51">[<expr pos:start="1:50" pos:end="1:50"><literal type="number" pos:start="1:50" pos:end="1:50">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:58"><decl pos:start="1:54" pos:end="1:58"><type pos:start="1:54" pos:end="1:58"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:58">w</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:65"><decl pos:start="1:61" pos:end="1:65"><type pos:start="1:61" pos:end="1:65"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:65">h</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:44"><decl pos:start="3:19" pos:end="3:44"><type pos:start="3:19" pos:end="3:44"><name pos:start="3:19" pos:end="3:34"><name pos:start="3:19" pos:end="3:22">enum</name> <name pos:start="3:24" pos:end="3:34">PixelFormat</name></name></type> <name pos:start="3:36" pos:end="3:44">srcFormat</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:72"><decl pos:start="3:47" pos:end="3:72"><type pos:start="3:47" pos:end="3:72"><name pos:start="3:47" pos:end="3:62"><name pos:start="3:47" pos:end="3:50">enum</name> <name pos:start="3:52" pos:end="3:62">PixelFormat</name></name></type> <name pos:start="3:64" pos:end="3:72">dstFormat</name></decl></parameter>,

                  <parameter pos:start="5:19" pos:end="5:26"><decl pos:start="5:19" pos:end="5:26"><type pos:start="5:19" pos:end="5:26"><name pos:start="5:19" pos:end="5:21">int</name></type> <name pos:start="5:23" pos:end="5:26">srcW</name></decl></parameter>, <parameter pos:start="5:29" pos:end="5:36"><decl pos:start="5:29" pos:end="5:36"><type pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:31">int</name></type> <name pos:start="5:33" pos:end="5:36">srcH</name></decl></parameter>, <parameter pos:start="5:39" pos:end="5:46"><decl pos:start="5:39" pos:end="5:46"><type pos:start="5:39" pos:end="5:46"><name pos:start="5:39" pos:end="5:41">int</name></type> <name pos:start="5:43" pos:end="5:46">dstW</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:56"><decl pos:start="5:49" pos:end="5:56"><type pos:start="5:49" pos:end="5:56"><name pos:start="5:49" pos:end="5:51">int</name></type> <name pos:start="5:53" pos:end="5:56">dstH</name></decl></parameter>, <parameter pos:start="5:59" pos:end="5:67"><decl pos:start="5:59" pos:end="5:67"><type pos:start="5:59" pos:end="5:67"><name pos:start="5:59" pos:end="5:61">int</name></type> <name pos:start="5:63" pos:end="5:67">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="277:1">{<block_content pos:start="9:5" pos:end="275:15">

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:27"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <name pos:start="9:12" pos:end="9:27"><name pos:start="9:12" pos:end="9:15">enum</name> <name pos:start="9:17" pos:end="9:27">PixelFormat</name></name></type> <name pos:start="9:29" pos:end="9:41">cur_srcFormat</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:14"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <name pos:start="11:12" pos:end="11:14">int</name></type> <name pos:start="11:16" pos:end="11:23">cur_srcW</name></decl>, <decl pos:start="11:26" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:14"/><name pos:start="11:26" pos:end="11:33">cur_srcH</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:20"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:18">uint8_t</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:26"><name pos:start="13:21" pos:end="13:23">src</name><index pos:start="13:24" pos:end="13:26">[<expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:14"><specifier pos:start="15:5" pos:end="15:10">static</specifier> <name pos:start="15:12" pos:end="15:14">int</name></type> <name pos:start="15:16" pos:end="15:27"><name pos:start="15:16" pos:end="15:24">srcStride</name><index pos:start="15:25" pos:end="15:27">[<expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:19"><name pos:start="17:14" pos:end="17:16">dst</name><index pos:start="17:17" pos:end="17:19">[<expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">4</literal></expr>]</index></name> <init pos:start="17:21" pos:end="17:25">= <expr pos:start="17:23" pos:end="17:25"><block pos:start="17:23" pos:end="17:25">{<expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:19"><name pos:start="19:14" pos:end="19:16">out</name><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><literal type="number" pos:start="19:18" pos:end="19:18">4</literal></expr>]</index></name> <init pos:start="19:21" pos:end="19:25">= <expr pos:start="19:23" pos:end="19:25"><block pos:start="19:23" pos:end="19:25">{<expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:17">dstStride</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:10"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:42"><decl pos:start="25:5" pos:end="25:17"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint64_t</name></type> <name pos:start="25:14" pos:end="25:17">ssdY</name></decl>, <decl pos:start="25:20" pos:end="25:25"><type ref="prev" pos:start="25:5" pos:end="25:12"/><name pos:start="25:20" pos:end="25:23">ssdU</name><init pos:start="25:24" pos:end="25:25">=<expr pos:start="25:25" pos:end="25:25"><literal type="number" pos:start="25:25" pos:end="25:25">0</literal></expr></init></decl>, <decl pos:start="25:28" pos:end="25:33"><type ref="prev" pos:start="25:5" pos:end="25:12"/><name pos:start="25:28" pos:end="25:31">ssdV</name><init pos:start="25:32" pos:end="25:33">=<expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">0</literal></expr></init></decl>, <decl pos:start="25:36" pos:end="25:41"><type ref="prev" pos:start="25:5" pos:end="25:12"/><name pos:start="25:36" pos:end="25:39">ssdA</name><init pos:start="25:40" pos:end="25:41">=<expr pos:start="25:41" pos:end="25:41"><literal type="number" pos:start="25:41" pos:end="25:41">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:61"><decl pos:start="27:5" pos:end="27:40"><type pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:10">struct</name> <name pos:start="27:12" pos:end="27:21">SwsContext</name></name> <modifier pos:start="27:23" pos:end="27:23">*</modifier></type><name pos:start="27:24" pos:end="27:33">dstContext</name> <init pos:start="27:35" pos:end="27:40">= <expr pos:start="27:37" pos:end="27:40"><name pos:start="27:37" pos:end="27:40">NULL</name></expr></init></decl>, <decl pos:start="27:43" pos:end="27:60"><type ref="prev" pos:start="27:5" pos:end="27:23"><modifier pos:start="27:43" pos:end="27:43">*</modifier></type><name pos:start="27:44" pos:end="27:53">outContext</name> <init pos:start="27:55" pos:end="27:60">= <expr pos:start="27:57" pos:end="27:60"><name pos:start="27:57" pos:end="27:60">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:21"><decl pos:start="29:5" pos:end="29:20"><type pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:12">uint32_t</name></type> <name pos:start="29:14" pos:end="29:16">crc</name> <init pos:start="29:18" pos:end="29:20">= <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:16"><decl pos:start="31:5" pos:end="31:15"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:11">res</name> <init pos:start="31:13" pos:end="31:15">= <expr pos:start="31:15" pos:end="31:15"><literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="105:5"><if pos:start="35:5" pos:end="105:5">if <condition pos:start="35:8" pos:end="35:75">(<expr pos:start="35:9" pos:end="35:74"><name pos:start="35:9" pos:end="35:21">cur_srcFormat</name> <operator pos:start="35:23" pos:end="35:24">!=</operator> <name pos:start="35:26" pos:end="35:34">srcFormat</name> <operator pos:start="35:36" pos:end="35:37">||</operator> <name pos:start="35:39" pos:end="35:46">cur_srcW</name> <operator pos:start="35:48" pos:end="35:49">!=</operator> <name pos:start="35:51" pos:end="35:54">srcW</name> <operator pos:start="35:56" pos:end="35:57">||</operator> <name pos:start="35:59" pos:end="35:66">cur_srcH</name> <operator pos:start="35:68" pos:end="35:69">!=</operator> <name pos:start="35:71" pos:end="35:74">srcH</name></expr>)</condition> <block pos:start="35:77" pos:end="105:5">{<block_content pos:start="37:9" pos:end="103:24">

        <decl_stmt pos:start="37:9" pos:end="37:45"><decl pos:start="37:9" pos:end="37:44"><type pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:14">struct</name> <name pos:start="37:16" pos:end="37:25">SwsContext</name></name> <modifier pos:start="37:27" pos:end="37:27">*</modifier></type><name pos:start="37:28" pos:end="37:37">srcContext</name> <init pos:start="37:39" pos:end="37:44">= <expr pos:start="37:41" pos:end="37:44"><name pos:start="37:41" pos:end="37:44">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:14"><decl pos:start="39:9" pos:end="39:13"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:13">p</name></decl>;</decl_stmt>



        <for pos:start="43:9" pos:end="47:34">for <control pos:start="43:13" pos:end="43:31">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">p</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:26"><expr pos:start="43:21" pos:end="43:25"><name pos:start="43:21" pos:end="43:21">p</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <literal type="number" pos:start="43:25" pos:end="43:25">4</literal></expr>;</condition> <incr pos:start="43:28" pos:end="43:30"><expr pos:start="43:28" pos:end="43:30"><name pos:start="43:28" pos:end="43:28">p</name><operator pos:start="43:29" pos:end="43:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:13" pos:end="47:34"><block_content pos:start="45:13" pos:end="47:34">

            <if_stmt pos:start="45:13" pos:end="47:34"><if pos:start="45:13" pos:end="47:34">if <condition pos:start="45:16" pos:end="45:23">(<expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:19">src</name><index pos:start="45:20" pos:end="45:22">[<expr pos:start="45:21" pos:end="45:21"><name pos:start="45:21" pos:end="45:21">p</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:34"><block_content pos:start="47:17" pos:end="47:34">

                <expr_stmt pos:start="47:17" pos:end="47:34"><expr pos:start="47:17" pos:end="47:33"><call pos:start="47:17" pos:end="47:33"><name pos:start="47:17" pos:end="47:24">av_freep</name><argument_list pos:start="47:25" pos:end="47:33">(<argument pos:start="47:26" pos:end="47:32"><expr pos:start="47:26" pos:end="47:32"><operator pos:start="47:26" pos:end="47:26">&amp;</operator><name pos:start="47:27" pos:end="47:32"><name pos:start="47:27" pos:end="47:29">src</name><index pos:start="47:30" pos:end="47:32">[<expr pos:start="47:31" pos:end="47:31"><name pos:start="47:31" pos:end="47:31">p</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



        <expr_stmt pos:start="51:9" pos:end="51:60"><expr pos:start="51:9" pos:end="51:59"><call pos:start="51:9" pos:end="51:59"><name pos:start="51:9" pos:end="51:31">av_image_fill_linesizes</name><argument_list pos:start="51:32" pos:end="51:59">(<argument pos:start="51:33" pos:end="51:41"><expr pos:start="51:33" pos:end="51:41"><name pos:start="51:33" pos:end="51:41">srcStride</name></expr></argument>, <argument pos:start="51:44" pos:end="51:52"><expr pos:start="51:44" pos:end="51:52"><name pos:start="51:44" pos:end="51:52">srcFormat</name></expr></argument>, <argument pos:start="51:55" pos:end="51:58"><expr pos:start="51:55" pos:end="51:58"><name pos:start="51:55" pos:end="51:58">srcW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="53:9" pos:end="71:9">for <control pos:start="53:13" pos:end="53:31">(<init pos:start="53:14" pos:end="53:19"><expr pos:start="53:14" pos:end="53:18"><name pos:start="53:14" pos:end="53:14">p</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <literal type="number" pos:start="53:18" pos:end="53:18">0</literal></expr>;</init> <condition pos:start="53:21" pos:end="53:26"><expr pos:start="53:21" pos:end="53:25"><name pos:start="53:21" pos:end="53:21">p</name> <operator pos:start="53:23" pos:end="53:23">&lt;</operator> <literal type="number" pos:start="53:25" pos:end="53:25">4</literal></expr>;</condition> <incr pos:start="53:28" pos:end="53:30"><expr pos:start="53:28" pos:end="53:30"><name pos:start="53:28" pos:end="53:28">p</name><operator pos:start="53:29" pos:end="53:30">++</operator></expr></incr>)</control> <block pos:start="53:33" pos:end="71:9">{<block_content pos:start="55:13" pos:end="69:13">

            <if_stmt pos:start="55:13" pos:end="57:58"><if pos:start="55:13" pos:end="57:58">if <condition pos:start="55:16" pos:end="55:29">(<expr pos:start="55:17" pos:end="55:28"><name pos:start="55:17" pos:end="55:28"><name pos:start="55:17" pos:end="55:25">srcStride</name><index pos:start="55:26" pos:end="55:28">[<expr pos:start="55:27" pos:end="55:27"><name pos:start="55:27" pos:end="55:27">p</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:58"><block_content pos:start="57:17" pos:end="57:58">

                <expr_stmt pos:start="57:17" pos:end="57:58"><expr pos:start="57:17" pos:end="57:57"><name pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:19">src</name><index pos:start="57:20" pos:end="57:22">[<expr pos:start="57:21" pos:end="57:21"><name pos:start="57:21" pos:end="57:21">p</name></expr>]</index></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <call pos:start="57:26" pos:end="57:57"><name pos:start="57:26" pos:end="57:35">av_mallocz</name><argument_list pos:start="57:36" pos:end="57:57">(<argument pos:start="57:37" pos:end="57:56"><expr pos:start="57:37" pos:end="57:56"><name pos:start="57:37" pos:end="57:48"><name pos:start="57:37" pos:end="57:45">srcStride</name><index pos:start="57:46" pos:end="57:48">[<expr pos:start="57:47" pos:end="57:47"><name pos:start="57:47" pos:end="57:47">p</name></expr>]</index></name><operator pos:start="57:49" pos:end="57:49">*</operator><name pos:start="57:50" pos:end="57:53">srcH</name><operator pos:start="57:54" pos:end="57:54">+</operator><literal type="number" pos:start="57:55" pos:end="57:56">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="59:13" pos:end="69:13"><if pos:start="59:13" pos:end="69:13">if <condition pos:start="59:16" pos:end="59:40">(<expr pos:start="59:17" pos:end="59:39"><name pos:start="59:17" pos:end="59:28"><name pos:start="59:17" pos:end="59:25">srcStride</name><index pos:start="59:26" pos:end="59:28">[<expr pos:start="59:27" pos:end="59:27"><name pos:start="59:27" pos:end="59:27">p</name></expr>]</index></name> <operator pos:start="59:30" pos:end="59:31">&amp;&amp;</operator> <operator pos:start="59:33" pos:end="59:33">!</operator><name pos:start="59:34" pos:end="59:39"><name pos:start="59:34" pos:end="59:36">src</name><index pos:start="59:37" pos:end="59:39">[<expr pos:start="59:38" pos:end="59:38"><name pos:start="59:38" pos:end="59:38">p</name></expr>]</index></name></expr>)</condition> <block pos:start="59:42" pos:end="69:13">{<block_content pos:start="61:17" pos:end="67:25">

                <expr_stmt pos:start="61:17" pos:end="61:33"><expr pos:start="61:17" pos:end="61:32"><call pos:start="61:17" pos:end="61:32"><name pos:start="61:17" pos:end="61:22">perror</name><argument_list pos:start="61:23" pos:end="61:32">(<argument pos:start="61:24" pos:end="61:31"><expr pos:start="61:24" pos:end="61:31"><literal type="string" pos:start="61:24" pos:end="61:31">"Malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:25"><expr pos:start="63:17" pos:end="63:24"><name pos:start="63:17" pos:end="63:19">res</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <operator pos:start="63:23" pos:end="63:23">-</operator><literal type="number" pos:start="63:24" pos:end="63:24">1</literal></expr>;</expr_stmt>



                <goto pos:start="67:17" pos:end="67:25">goto <name pos:start="67:22" pos:end="67:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="73:9" pos:end="75:79"><expr pos:start="73:9" pos:end="75:78"><name pos:start="73:9" pos:end="73:18">srcContext</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <call pos:start="73:22" pos:end="75:78"><name pos:start="73:22" pos:end="73:35">sws_getContext</name><argument_list pos:start="73:36" pos:end="75:78">(<argument pos:start="73:37" pos:end="73:37"><expr pos:start="73:37" pos:end="73:37"><name pos:start="73:37" pos:end="73:37">w</name></expr></argument>, <argument pos:start="73:40" pos:end="73:40"><expr pos:start="73:40" pos:end="73:40"><name pos:start="73:40" pos:end="73:40">h</name></expr></argument>, <argument pos:start="73:43" pos:end="73:58"><expr pos:start="73:43" pos:end="73:58"><name pos:start="73:43" pos:end="73:58">PIX_FMT_YUVA420P</name></expr></argument>, <argument pos:start="73:61" pos:end="73:64"><expr pos:start="73:61" pos:end="73:64"><name pos:start="73:61" pos:end="73:64">srcW</name></expr></argument>, <argument pos:start="73:67" pos:end="73:70"><expr pos:start="73:67" pos:end="73:70"><name pos:start="73:67" pos:end="73:70">srcH</name></expr></argument>,

                                    <argument pos:start="75:37" pos:end="75:45"><expr pos:start="75:37" pos:end="75:45"><name pos:start="75:37" pos:end="75:45">srcFormat</name></expr></argument>, <argument pos:start="75:48" pos:end="75:59"><expr pos:start="75:48" pos:end="75:59"><name pos:start="75:48" pos:end="75:59">SWS_BILINEAR</name></expr></argument>, <argument pos:start="75:62" pos:end="75:65"><expr pos:start="75:62" pos:end="75:65"><name pos:start="75:62" pos:end="75:65">NULL</name></expr></argument>, <argument pos:start="75:68" pos:end="75:71"><expr pos:start="75:68" pos:end="75:71"><name pos:start="75:68" pos:end="75:71">NULL</name></expr></argument>, <argument pos:start="75:74" pos:end="75:77"><expr pos:start="75:74" pos:end="75:77"><name pos:start="75:74" pos:end="75:77">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="91:9"><if pos:start="77:9" pos:end="91:9">if <condition pos:start="77:12" pos:end="77:24">(<expr pos:start="77:13" pos:end="77:23"><operator pos:start="77:13" pos:end="77:13">!</operator><name pos:start="77:14" pos:end="77:23">srcContext</name></expr>)</condition> <block pos:start="77:26" pos:end="91:9">{<block_content pos:start="79:13" pos:end="89:21">

            <expr_stmt pos:start="79:13" pos:end="83:60"><expr pos:start="79:13" pos:end="83:59"><call pos:start="79:13" pos:end="83:59"><name pos:start="79:13" pos:end="79:19">fprintf</name><argument_list pos:start="79:20" pos:end="83:59">(<argument pos:start="79:21" pos:end="79:26"><expr pos:start="79:21" pos:end="79:26"><name pos:start="79:21" pos:end="79:26">stderr</name></expr></argument>, <argument pos:start="79:29" pos:end="79:56"><expr pos:start="79:29" pos:end="79:56"><literal type="string" pos:start="79:29" pos:end="79:56">"Failed to get %s ---&gt; %s\n"</literal></expr></argument>,

                    <argument pos:start="81:21" pos:end="81:65"><expr pos:start="81:21" pos:end="81:65"><name pos:start="81:21" pos:end="81:60"><name pos:start="81:21" pos:end="81:42">av_pix_fmt_descriptors</name><index pos:start="81:43" pos:end="81:60">[<expr pos:start="81:44" pos:end="81:59"><name pos:start="81:44" pos:end="81:59">PIX_FMT_YUVA420P</name></expr>]</index></name><operator pos:start="81:61" pos:end="81:61">.</operator><name pos:start="81:62" pos:end="81:65">name</name></expr></argument>,

                    <argument pos:start="83:21" pos:end="83:58"><expr pos:start="83:21" pos:end="83:58"><name pos:start="83:21" pos:end="83:53"><name pos:start="83:21" pos:end="83:42">av_pix_fmt_descriptors</name><index pos:start="83:43" pos:end="83:53">[<expr pos:start="83:44" pos:end="83:52"><name pos:start="83:44" pos:end="83:52">srcFormat</name></expr>]</index></name><operator pos:start="83:54" pos:end="83:54">.</operator><name pos:start="83:55" pos:end="83:58">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:21"><expr pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:15">res</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <operator pos:start="85:19" pos:end="85:19">-</operator><literal type="number" pos:start="85:20" pos:end="85:20">1</literal></expr>;</expr_stmt>



            <goto pos:start="89:13" pos:end="89:21">goto <name pos:start="89:18" pos:end="89:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:68"><expr pos:start="93:9" pos:end="93:67"><call pos:start="93:9" pos:end="93:67"><name pos:start="93:9" pos:end="93:17">sws_scale</name><argument_list pos:start="93:18" pos:end="93:67">(<argument pos:start="93:19" pos:end="93:28"><expr pos:start="93:19" pos:end="93:28"><name pos:start="93:19" pos:end="93:28">srcContext</name></expr></argument>, <argument pos:start="93:31" pos:end="93:33"><expr pos:start="93:31" pos:end="93:33"><name pos:start="93:31" pos:end="93:33">ref</name></expr></argument>, <argument pos:start="93:36" pos:end="93:44"><expr pos:start="93:36" pos:end="93:44"><name pos:start="93:36" pos:end="93:44">refStride</name></expr></argument>, <argument pos:start="93:47" pos:end="93:47"><expr pos:start="93:47" pos:end="93:47"><literal type="number" pos:start="93:47" pos:end="93:47">0</literal></expr></argument>, <argument pos:start="93:50" pos:end="93:50"><expr pos:start="93:50" pos:end="93:50"><name pos:start="93:50" pos:end="93:50">h</name></expr></argument>, <argument pos:start="93:53" pos:end="93:55"><expr pos:start="93:53" pos:end="93:55"><name pos:start="93:53" pos:end="93:55">src</name></expr></argument>, <argument pos:start="93:58" pos:end="93:66"><expr pos:start="93:58" pos:end="93:66"><name pos:start="93:58" pos:end="93:66">srcStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:36"><expr pos:start="95:9" pos:end="95:35"><call pos:start="95:9" pos:end="95:35"><name pos:start="95:9" pos:end="95:23">sws_freeContext</name><argument_list pos:start="95:24" pos:end="95:35">(<argument pos:start="95:25" pos:end="95:34"><expr pos:start="95:25" pos:end="95:34"><name pos:start="95:25" pos:end="95:34">srcContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:34"><expr pos:start="99:9" pos:end="99:33"><name pos:start="99:9" pos:end="99:21">cur_srcFormat</name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:33">srcFormat</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:24"><expr pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:16">cur_srcW</name> <operator pos:start="101:18" pos:end="101:18">=</operator> <name pos:start="101:20" pos:end="101:23">srcW</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:24"><expr pos:start="103:9" pos:end="103:23"><name pos:start="103:9" pos:end="103:16">cur_srcH</name> <operator pos:start="103:18" pos:end="103:18">=</operator> <name pos:start="103:20" pos:end="103:23">srcH</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:56"><expr pos:start="109:5" pos:end="109:55"><call pos:start="109:5" pos:end="109:55"><name pos:start="109:5" pos:end="109:27">av_image_fill_linesizes</name><argument_list pos:start="109:28" pos:end="109:55">(<argument pos:start="109:29" pos:end="109:37"><expr pos:start="109:29" pos:end="109:37"><name pos:start="109:29" pos:end="109:37">dstStride</name></expr></argument>, <argument pos:start="109:40" pos:end="109:48"><expr pos:start="109:40" pos:end="109:48"><name pos:start="109:40" pos:end="109:48">dstFormat</name></expr></argument>, <argument pos:start="109:51" pos:end="109:54"><expr pos:start="109:51" pos:end="109:54"><name pos:start="109:51" pos:end="109:54">dstW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="111:5" pos:end="145:5">for <control pos:start="111:9" pos:end="111:23">(<init pos:start="111:10" pos:end="111:13"><expr pos:start="111:10" pos:end="111:12"><name pos:start="111:10" pos:end="111:10">i</name><operator pos:start="111:11" pos:end="111:11">=</operator><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</init> <condition pos:start="111:15" pos:end="111:18"><expr pos:start="111:15" pos:end="111:17"><name pos:start="111:15" pos:end="111:15">i</name><operator pos:start="111:16" pos:end="111:16">&lt;</operator><literal type="number" pos:start="111:17" pos:end="111:17">4</literal></expr>;</condition> <incr pos:start="111:20" pos:end="111:22"><expr pos:start="111:20" pos:end="111:22"><name pos:start="111:20" pos:end="111:20">i</name><operator pos:start="111:21" pos:end="111:22">++</operator></expr></incr>)</control> <block pos:start="111:25" pos:end="145:5">{<block_content pos:start="125:9" pos:end="143:9">

        <comment type="block" pos:start="113:9" pos:end="119:40">/* Image buffers passed into libswscale can be allocated any way you

         * prefer, as long as they're aligned enough for the architecture, and

         * they're freed appropriately (such as using av_free for buffers

         * allocated with av_malloc). */</comment>

        <comment type="block" pos:start="121:9" pos:end="123:28">/* An extra 16 bytes is being allocated because some scalers may write

         * out of bounds. */</comment>

        <if_stmt pos:start="125:9" pos:end="127:53"><if pos:start="125:9" pos:end="127:53">if <condition pos:start="125:12" pos:end="125:25">(<expr pos:start="125:13" pos:end="125:24"><name pos:start="125:13" pos:end="125:24"><name pos:start="125:13" pos:end="125:21">dstStride</name><index pos:start="125:22" pos:end="125:24">[<expr pos:start="125:23" pos:end="125:23"><name pos:start="125:23" pos:end="125:23">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:53"><block_content pos:start="127:13" pos:end="127:53">

            <expr_stmt pos:start="127:13" pos:end="127:53"><expr pos:start="127:13" pos:end="127:52"><name pos:start="127:13" pos:end="127:18"><name pos:start="127:13" pos:end="127:15">dst</name><index pos:start="127:16" pos:end="127:18">[<expr pos:start="127:17" pos:end="127:17"><name pos:start="127:17" pos:end="127:17">i</name></expr>]</index></name><operator pos:start="127:19" pos:end="127:19">=</operator> <call pos:start="127:21" pos:end="127:52"><name pos:start="127:21" pos:end="127:30">av_mallocz</name><argument_list pos:start="127:31" pos:end="127:52">(<argument pos:start="127:32" pos:end="127:51"><expr pos:start="127:32" pos:end="127:51"><name pos:start="127:32" pos:end="127:43"><name pos:start="127:32" pos:end="127:40">dstStride</name><index pos:start="127:41" pos:end="127:43">[<expr pos:start="127:42" pos:end="127:42"><name pos:start="127:42" pos:end="127:42">i</name></expr>]</index></name><operator pos:start="127:44" pos:end="127:44">*</operator><name pos:start="127:45" pos:end="127:48">dstH</name><operator pos:start="127:49" pos:end="127:49">+</operator><literal type="number" pos:start="127:50" pos:end="127:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="129:9" pos:end="131:47"><if pos:start="129:9" pos:end="131:47">if <condition pos:start="129:12" pos:end="129:25">(<expr pos:start="129:13" pos:end="129:24"><name pos:start="129:13" pos:end="129:24"><name pos:start="129:13" pos:end="129:21">refStride</name><index pos:start="129:22" pos:end="129:24">[<expr pos:start="129:23" pos:end="129:23"><name pos:start="129:23" pos:end="129:23">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:47"><block_content pos:start="131:13" pos:end="131:47">

            <expr_stmt pos:start="131:13" pos:end="131:47"><expr pos:start="131:13" pos:end="131:46"><name pos:start="131:13" pos:end="131:18"><name pos:start="131:13" pos:end="131:15">out</name><index pos:start="131:16" pos:end="131:18">[<expr pos:start="131:17" pos:end="131:17"><name pos:start="131:17" pos:end="131:17">i</name></expr>]</index></name><operator pos:start="131:19" pos:end="131:19">=</operator> <call pos:start="131:21" pos:end="131:46"><name pos:start="131:21" pos:end="131:30">av_mallocz</name><argument_list pos:start="131:31" pos:end="131:46">(<argument pos:start="131:32" pos:end="131:45"><expr pos:start="131:32" pos:end="131:45"><name pos:start="131:32" pos:end="131:43"><name pos:start="131:32" pos:end="131:40">refStride</name><index pos:start="131:41" pos:end="131:43">[<expr pos:start="131:42" pos:end="131:42"><name pos:start="131:42" pos:end="131:42">i</name></expr>]</index></name><operator pos:start="131:44" pos:end="131:44">*</operator><name pos:start="131:45" pos:end="131:45">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="133:9" pos:end="143:9"><if pos:start="133:9" pos:end="143:9">if <condition pos:start="133:12" pos:end="133:67">(<expr pos:start="133:13" pos:end="133:66"><operator pos:start="133:13" pos:end="133:13">(</operator><name pos:start="133:14" pos:end="133:25"><name pos:start="133:14" pos:end="133:22">dstStride</name><index pos:start="133:23" pos:end="133:25">[<expr pos:start="133:24" pos:end="133:24"><name pos:start="133:24" pos:end="133:24">i</name></expr>]</index></name> <operator pos:start="133:27" pos:end="133:28">&amp;&amp;</operator> <operator pos:start="133:30" pos:end="133:30">!</operator><name pos:start="133:31" pos:end="133:36"><name pos:start="133:31" pos:end="133:33">dst</name><index pos:start="133:34" pos:end="133:36">[<expr pos:start="133:35" pos:end="133:35"><name pos:start="133:35" pos:end="133:35">i</name></expr>]</index></name><operator pos:start="133:37" pos:end="133:37">)</operator> <operator pos:start="133:39" pos:end="133:40">||</operator> <operator pos:start="133:42" pos:end="133:42">(</operator><name pos:start="133:43" pos:end="133:54"><name pos:start="133:43" pos:end="133:51">refStride</name><index pos:start="133:52" pos:end="133:54">[<expr pos:start="133:53" pos:end="133:53"><name pos:start="133:53" pos:end="133:53">i</name></expr>]</index></name> <operator pos:start="133:56" pos:end="133:57">&amp;&amp;</operator> <operator pos:start="133:59" pos:end="133:59">!</operator><name pos:start="133:60" pos:end="133:65"><name pos:start="133:60" pos:end="133:62">out</name><index pos:start="133:63" pos:end="133:65">[<expr pos:start="133:64" pos:end="133:64"><name pos:start="133:64" pos:end="133:64">i</name></expr>]</index></name><operator pos:start="133:66" pos:end="133:66">)</operator></expr>)</condition> <block pos:start="133:69" pos:end="143:9">{<block_content pos:start="135:13" pos:end="141:21">

            <expr_stmt pos:start="135:13" pos:end="135:29"><expr pos:start="135:13" pos:end="135:28"><call pos:start="135:13" pos:end="135:28"><name pos:start="135:13" pos:end="135:18">perror</name><argument_list pos:start="135:19" pos:end="135:28">(<argument pos:start="135:20" pos:end="135:27"><expr pos:start="135:20" pos:end="135:27"><literal type="string" pos:start="135:20" pos:end="135:27">"Malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:21"><expr pos:start="137:13" pos:end="137:20"><name pos:start="137:13" pos:end="137:15">res</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <operator pos:start="137:19" pos:end="137:19">-</operator><literal type="number" pos:start="137:20" pos:end="137:20">1</literal></expr>;</expr_stmt>



            <goto pos:start="141:13" pos:end="141:21">goto <name pos:start="141:18" pos:end="141:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="149:5" pos:end="149:102"><expr pos:start="149:5" pos:end="149:101"><name pos:start="149:5" pos:end="149:14">dstContext</name><operator pos:start="149:15" pos:end="149:15">=</operator> <call pos:start="149:17" pos:end="149:101"><name pos:start="149:17" pos:end="149:30">sws_getContext</name><argument_list pos:start="149:31" pos:end="149:101">(<argument pos:start="149:32" pos:end="149:35"><expr pos:start="149:32" pos:end="149:35"><name pos:start="149:32" pos:end="149:35">srcW</name></expr></argument>, <argument pos:start="149:38" pos:end="149:41"><expr pos:start="149:38" pos:end="149:41"><name pos:start="149:38" pos:end="149:41">srcH</name></expr></argument>, <argument pos:start="149:44" pos:end="149:52"><expr pos:start="149:44" pos:end="149:52"><name pos:start="149:44" pos:end="149:52">srcFormat</name></expr></argument>, <argument pos:start="149:55" pos:end="149:58"><expr pos:start="149:55" pos:end="149:58"><name pos:start="149:55" pos:end="149:58">dstW</name></expr></argument>, <argument pos:start="149:61" pos:end="149:64"><expr pos:start="149:61" pos:end="149:64"><name pos:start="149:61" pos:end="149:64">dstH</name></expr></argument>, <argument pos:start="149:67" pos:end="149:75"><expr pos:start="149:67" pos:end="149:75"><name pos:start="149:67" pos:end="149:75">dstFormat</name></expr></argument>, <argument pos:start="149:78" pos:end="149:82"><expr pos:start="149:78" pos:end="149:82"><name pos:start="149:78" pos:end="149:82">flags</name></expr></argument>, <argument pos:start="149:85" pos:end="149:88"><expr pos:start="149:85" pos:end="149:88"><name pos:start="149:85" pos:end="149:88">NULL</name></expr></argument>, <argument pos:start="149:91" pos:end="149:94"><expr pos:start="149:91" pos:end="149:94"><name pos:start="149:91" pos:end="149:94">NULL</name></expr></argument>, <argument pos:start="149:97" pos:end="149:100"><expr pos:start="149:97" pos:end="149:100"><name pos:start="149:97" pos:end="149:100">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="165:5"><if pos:start="151:5" pos:end="165:5">if <condition pos:start="151:8" pos:end="151:20">(<expr pos:start="151:9" pos:end="151:19"><operator pos:start="151:9" pos:end="151:9">!</operator><name pos:start="151:10" pos:end="151:19">dstContext</name></expr>)</condition> <block pos:start="151:22" pos:end="165:5">{<block_content pos:start="153:9" pos:end="163:17">

        <expr_stmt pos:start="153:9" pos:end="157:56"><expr pos:start="153:9" pos:end="157:55"><call pos:start="153:9" pos:end="157:55"><name pos:start="153:9" pos:end="153:15">fprintf</name><argument_list pos:start="153:16" pos:end="157:55">(<argument pos:start="153:17" pos:end="153:22"><expr pos:start="153:17" pos:end="153:22"><name pos:start="153:17" pos:end="153:22">stderr</name></expr></argument>, <argument pos:start="153:25" pos:end="153:52"><expr pos:start="153:25" pos:end="153:52"><literal type="string" pos:start="153:25" pos:end="153:52">"Failed to get %s ---&gt; %s\n"</literal></expr></argument>,

                <argument pos:start="155:17" pos:end="155:54"><expr pos:start="155:17" pos:end="155:54"><name pos:start="155:17" pos:end="155:49"><name pos:start="155:17" pos:end="155:38">av_pix_fmt_descriptors</name><index pos:start="155:39" pos:end="155:49">[<expr pos:start="155:40" pos:end="155:48"><name pos:start="155:40" pos:end="155:48">srcFormat</name></expr>]</index></name><operator pos:start="155:50" pos:end="155:50">.</operator><name pos:start="155:51" pos:end="155:54">name</name></expr></argument>,

                <argument pos:start="157:17" pos:end="157:54"><expr pos:start="157:17" pos:end="157:54"><name pos:start="157:17" pos:end="157:49"><name pos:start="157:17" pos:end="157:38">av_pix_fmt_descriptors</name><index pos:start="157:39" pos:end="157:49">[<expr pos:start="157:40" pos:end="157:48"><name pos:start="157:40" pos:end="157:48">dstFormat</name></expr>]</index></name><operator pos:start="157:50" pos:end="157:50">.</operator><name pos:start="157:51" pos:end="157:54">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:17"><expr pos:start="159:9" pos:end="159:16"><name pos:start="159:9" pos:end="159:11">res</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <operator pos:start="159:15" pos:end="159:15">-</operator><literal type="number" pos:start="159:16" pos:end="159:16">1</literal></expr>;</expr_stmt>



        <goto pos:start="163:9" pos:end="163:17">goto <name pos:start="163:14" pos:end="163:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:103"><expr pos:start="167:5" pos:end="167:102"><name pos:start="167:5" pos:end="167:14">outContext</name><operator pos:start="167:15" pos:end="167:15">=</operator> <call pos:start="167:17" pos:end="167:102"><name pos:start="167:17" pos:end="167:30">sws_getContext</name><argument_list pos:start="167:31" pos:end="167:102">(<argument pos:start="167:32" pos:end="167:35"><expr pos:start="167:32" pos:end="167:35"><name pos:start="167:32" pos:end="167:35">dstW</name></expr></argument>, <argument pos:start="167:38" pos:end="167:41"><expr pos:start="167:38" pos:end="167:41"><name pos:start="167:38" pos:end="167:41">dstH</name></expr></argument>, <argument pos:start="167:44" pos:end="167:52"><expr pos:start="167:44" pos:end="167:52"><name pos:start="167:44" pos:end="167:52">dstFormat</name></expr></argument>, <argument pos:start="167:55" pos:end="167:55"><expr pos:start="167:55" pos:end="167:55"><name pos:start="167:55" pos:end="167:55">w</name></expr></argument>, <argument pos:start="167:58" pos:end="167:58"><expr pos:start="167:58" pos:end="167:58"><name pos:start="167:58" pos:end="167:58">h</name></expr></argument>, <argument pos:start="167:61" pos:end="167:76"><expr pos:start="167:61" pos:end="167:76"><name pos:start="167:61" pos:end="167:76">PIX_FMT_YUVA420P</name></expr></argument>, <argument pos:start="167:79" pos:end="167:83"><expr pos:start="167:79" pos:end="167:83"><name pos:start="167:79" pos:end="167:83">flags</name></expr></argument>, <argument pos:start="167:86" pos:end="167:89"><expr pos:start="167:86" pos:end="167:89"><name pos:start="167:86" pos:end="167:89">NULL</name></expr></argument>, <argument pos:start="167:92" pos:end="167:95"><expr pos:start="167:92" pos:end="167:95"><name pos:start="167:92" pos:end="167:95">NULL</name></expr></argument>, <argument pos:start="167:98" pos:end="167:101"><expr pos:start="167:98" pos:end="167:101"><name pos:start="167:98" pos:end="167:101">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="169:5" pos:end="183:5"><if pos:start="169:5" pos:end="183:5">if <condition pos:start="169:8" pos:end="169:20">(<expr pos:start="169:9" pos:end="169:19"><operator pos:start="169:9" pos:end="169:9">!</operator><name pos:start="169:10" pos:end="169:19">outContext</name></expr>)</condition> <block pos:start="169:22" pos:end="183:5">{<block_content pos:start="171:9" pos:end="181:17">

        <expr_stmt pos:start="171:9" pos:end="175:63"><expr pos:start="171:9" pos:end="175:62"><call pos:start="171:9" pos:end="175:62"><name pos:start="171:9" pos:end="171:15">fprintf</name><argument_list pos:start="171:16" pos:end="175:62">(<argument pos:start="171:17" pos:end="171:22"><expr pos:start="171:17" pos:end="171:22"><name pos:start="171:17" pos:end="171:22">stderr</name></expr></argument>, <argument pos:start="171:25" pos:end="171:52"><expr pos:start="171:25" pos:end="171:52"><literal type="string" pos:start="171:25" pos:end="171:52">"Failed to get %s ---&gt; %s\n"</literal></expr></argument>,

                <argument pos:start="173:17" pos:end="173:54"><expr pos:start="173:17" pos:end="173:54"><name pos:start="173:17" pos:end="173:49"><name pos:start="173:17" pos:end="173:38">av_pix_fmt_descriptors</name><index pos:start="173:39" pos:end="173:49">[<expr pos:start="173:40" pos:end="173:48"><name pos:start="173:40" pos:end="173:48">dstFormat</name></expr>]</index></name><operator pos:start="173:50" pos:end="173:50">.</operator><name pos:start="173:51" pos:end="173:54">name</name></expr></argument>,

                <argument pos:start="175:17" pos:end="175:61"><expr pos:start="175:17" pos:end="175:61"><name pos:start="175:17" pos:end="175:56"><name pos:start="175:17" pos:end="175:38">av_pix_fmt_descriptors</name><index pos:start="175:39" pos:end="175:56">[<expr pos:start="175:40" pos:end="175:55"><name pos:start="175:40" pos:end="175:55">PIX_FMT_YUVA420P</name></expr>]</index></name><operator pos:start="175:57" pos:end="175:57">.</operator><name pos:start="175:58" pos:end="175:61">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:17"><expr pos:start="177:9" pos:end="177:16"><name pos:start="177:9" pos:end="177:11">res</name> <operator pos:start="177:13" pos:end="177:13">=</operator> <operator pos:start="177:15" pos:end="177:15">-</operator><literal type="number" pos:start="177:16" pos:end="177:16">1</literal></expr>;</expr_stmt>



        <goto pos:start="181:9" pos:end="181:17">goto <name pos:start="181:14" pos:end="181:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

<comment type="line" pos:start="185:1" pos:end="185:82">//    printf("test %X %X %X -&gt; %X %X %X\n", (int)ref[0], (int)ref[1], (int)ref[2],</comment>

<comment type="line" pos:start="187:1" pos:end="187:49">//        (int)src[0], (int)src[1], (int)src[2]);</comment>



    <expr_stmt pos:start="191:5" pos:end="197:18"><expr pos:start="191:5" pos:end="197:17"><call pos:start="191:5" pos:end="197:17"><name pos:start="191:5" pos:end="191:10">printf</name><argument_list pos:start="191:11" pos:end="197:17">(<argument pos:start="191:12" pos:end="191:46"><expr pos:start="191:12" pos:end="191:46"><literal type="string" pos:start="191:12" pos:end="191:46">" %s %dx%d -&gt; %s %3dx%3d flags=%2d"</literal></expr></argument>,

           <argument pos:start="193:12" pos:end="193:49"><expr pos:start="193:12" pos:end="193:49"><name pos:start="193:12" pos:end="193:44"><name pos:start="193:12" pos:end="193:33">av_pix_fmt_descriptors</name><index pos:start="193:34" pos:end="193:44">[<expr pos:start="193:35" pos:end="193:43"><name pos:start="193:35" pos:end="193:43">srcFormat</name></expr>]</index></name><operator pos:start="193:45" pos:end="193:45">.</operator><name pos:start="193:46" pos:end="193:49">name</name></expr></argument>, <argument pos:start="193:52" pos:end="193:55"><expr pos:start="193:52" pos:end="193:55"><name pos:start="193:52" pos:end="193:55">srcW</name></expr></argument>, <argument pos:start="193:58" pos:end="193:61"><expr pos:start="193:58" pos:end="193:61"><name pos:start="193:58" pos:end="193:61">srcH</name></expr></argument>,

           <argument pos:start="195:12" pos:end="195:49"><expr pos:start="195:12" pos:end="195:49"><name pos:start="195:12" pos:end="195:44"><name pos:start="195:12" pos:end="195:33">av_pix_fmt_descriptors</name><index pos:start="195:34" pos:end="195:44">[<expr pos:start="195:35" pos:end="195:43"><name pos:start="195:35" pos:end="195:43">dstFormat</name></expr>]</index></name><operator pos:start="195:45" pos:end="195:45">.</operator><name pos:start="195:46" pos:end="195:49">name</name></expr></argument>, <argument pos:start="195:52" pos:end="195:55"><expr pos:start="195:52" pos:end="195:55"><name pos:start="195:52" pos:end="195:55">dstW</name></expr></argument>, <argument pos:start="195:58" pos:end="195:61"><expr pos:start="195:58" pos:end="195:61"><name pos:start="195:58" pos:end="195:61">dstH</name></expr></argument>,

           <argument pos:start="197:12" pos:end="197:16"><expr pos:start="197:12" pos:end="197:16"><name pos:start="197:12" pos:end="197:16">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:19"><expr pos:start="199:5" pos:end="199:18"><call pos:start="199:5" pos:end="199:18"><name pos:start="199:5" pos:end="199:10">fflush</name><argument_list pos:start="199:11" pos:end="199:18">(<argument pos:start="199:12" pos:end="199:17"><expr pos:start="199:12" pos:end="199:17"><name pos:start="199:12" pos:end="199:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="203:5" pos:end="203:67"><expr pos:start="203:5" pos:end="203:66"><call pos:start="203:5" pos:end="203:66"><name pos:start="203:5" pos:end="203:13">sws_scale</name><argument_list pos:start="203:14" pos:end="203:66">(<argument pos:start="203:15" pos:end="203:24"><expr pos:start="203:15" pos:end="203:24"><name pos:start="203:15" pos:end="203:24">dstContext</name></expr></argument>, <argument pos:start="203:27" pos:end="203:29"><expr pos:start="203:27" pos:end="203:29"><name pos:start="203:27" pos:end="203:29">src</name></expr></argument>, <argument pos:start="203:32" pos:end="203:40"><expr pos:start="203:32" pos:end="203:40"><name pos:start="203:32" pos:end="203:40">srcStride</name></expr></argument>, <argument pos:start="203:43" pos:end="203:43"><expr pos:start="203:43" pos:end="203:43"><literal type="number" pos:start="203:43" pos:end="203:43">0</literal></expr></argument>, <argument pos:start="203:46" pos:end="203:49"><expr pos:start="203:46" pos:end="203:49"><name pos:start="203:46" pos:end="203:49">srcH</name></expr></argument>, <argument pos:start="203:52" pos:end="203:54"><expr pos:start="203:52" pos:end="203:54"><name pos:start="203:52" pos:end="203:54">dst</name></expr></argument>, <argument pos:start="203:57" pos:end="203:65"><expr pos:start="203:57" pos:end="203:65"><name pos:start="203:57" pos:end="203:65">dstStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:67"><expr pos:start="205:5" pos:end="205:66"><call pos:start="205:5" pos:end="205:66"><name pos:start="205:5" pos:end="205:13">sws_scale</name><argument_list pos:start="205:14" pos:end="205:66">(<argument pos:start="205:15" pos:end="205:24"><expr pos:start="205:15" pos:end="205:24"><name pos:start="205:15" pos:end="205:24">outContext</name></expr></argument>, <argument pos:start="205:27" pos:end="205:29"><expr pos:start="205:27" pos:end="205:29"><name pos:start="205:27" pos:end="205:29">dst</name></expr></argument>, <argument pos:start="205:32" pos:end="205:40"><expr pos:start="205:32" pos:end="205:40"><name pos:start="205:32" pos:end="205:40">dstStride</name></expr></argument>, <argument pos:start="205:43" pos:end="205:43"><expr pos:start="205:43" pos:end="205:43"><literal type="number" pos:start="205:43" pos:end="205:43">0</literal></expr></argument>, <argument pos:start="205:46" pos:end="205:49"><expr pos:start="205:46" pos:end="205:49"><name pos:start="205:46" pos:end="205:49">dstH</name></expr></argument>, <argument pos:start="205:52" pos:end="205:54"><expr pos:start="205:52" pos:end="205:54"><name pos:start="205:52" pos:end="205:54">out</name></expr></argument>, <argument pos:start="205:57" pos:end="205:65"><expr pos:start="205:57" pos:end="205:65"><name pos:start="205:57" pos:end="205:65">refStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="209:5" pos:end="213:5">for <control pos:start="209:9" pos:end="209:43">(<init pos:start="209:10" pos:end="209:15"><expr pos:start="209:10" pos:end="209:14"><name pos:start="209:10" pos:end="209:10">i</name> <operator pos:start="209:12" pos:end="209:12">=</operator> <literal type="number" pos:start="209:14" pos:end="209:14">0</literal></expr>;</init> <condition pos:start="209:17" pos:end="209:38"><expr pos:start="209:17" pos:end="209:37"><name pos:start="209:17" pos:end="209:17">i</name> <operator pos:start="209:19" pos:end="209:19">&lt;</operator> <literal type="number" pos:start="209:21" pos:end="209:21">4</literal> <operator pos:start="209:23" pos:end="209:24">&amp;&amp;</operator> <name pos:start="209:26" pos:end="209:37"><name pos:start="209:26" pos:end="209:34">dstStride</name><index pos:start="209:35" pos:end="209:37">[<expr pos:start="209:36" pos:end="209:36"><name pos:start="209:36" pos:end="209:36">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="209:40" pos:end="209:42"><expr pos:start="209:40" pos:end="209:42"><name pos:start="209:40" pos:end="209:40">i</name><operator pos:start="209:41" pos:end="209:42">++</operator></expr></incr>)</control> <block pos:start="209:45" pos:end="213:5">{<block_content pos:start="211:9" pos:end="211:89">

        <expr_stmt pos:start="211:9" pos:end="211:89"><expr pos:start="211:9" pos:end="211:88"><name pos:start="211:9" pos:end="211:11">crc</name> <operator pos:start="211:13" pos:end="211:13">=</operator> <call pos:start="211:15" pos:end="211:88"><name pos:start="211:15" pos:end="211:20">av_crc</name><argument_list pos:start="211:21" pos:end="211:88">(<argument pos:start="211:22" pos:end="211:53"><expr pos:start="211:22" pos:end="211:53"><call pos:start="211:22" pos:end="211:53"><name pos:start="211:22" pos:end="211:37">av_crc_get_table</name><argument_list pos:start="211:38" pos:end="211:53">(<argument pos:start="211:39" pos:end="211:52"><expr pos:start="211:39" pos:end="211:52"><name pos:start="211:39" pos:end="211:52">AV_CRC_32_IEEE</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="211:56" pos:end="211:58"><expr pos:start="211:56" pos:end="211:58"><name pos:start="211:56" pos:end="211:58">crc</name></expr></argument>, <argument pos:start="211:61" pos:end="211:66"><expr pos:start="211:61" pos:end="211:66"><name pos:start="211:61" pos:end="211:66"><name pos:start="211:61" pos:end="211:63">dst</name><index pos:start="211:64" pos:end="211:66">[<expr pos:start="211:65" pos:end="211:65"><name pos:start="211:65" pos:end="211:65">i</name></expr>]</index></name></expr></argument>, <argument pos:start="211:69" pos:end="211:87"><expr pos:start="211:69" pos:end="211:87"><name pos:start="211:69" pos:end="211:80"><name pos:start="211:69" pos:end="211:77">dstStride</name><index pos:start="211:78" pos:end="211:80">[<expr pos:start="211:79" pos:end="211:79"><name pos:start="211:79" pos:end="211:79">i</name></expr>]</index></name> <operator pos:start="211:82" pos:end="211:82">*</operator> <name pos:start="211:84" pos:end="211:87">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="217:5" pos:end="217:67"><expr pos:start="217:5" pos:end="217:66"><name pos:start="217:5" pos:end="217:8">ssdY</name><operator pos:start="217:9" pos:end="217:9">=</operator> <call pos:start="217:11" pos:end="217:66"><name pos:start="217:11" pos:end="217:16">getSSD</name><argument_list pos:start="217:17" pos:end="217:66">(<argument pos:start="217:18" pos:end="217:23"><expr pos:start="217:18" pos:end="217:23"><name pos:start="217:18" pos:end="217:23"><name pos:start="217:18" pos:end="217:20">ref</name><index pos:start="217:21" pos:end="217:23">[<expr pos:start="217:22" pos:end="217:22"><literal type="number" pos:start="217:22" pos:end="217:22">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="217:26" pos:end="217:31"><expr pos:start="217:26" pos:end="217:31"><name pos:start="217:26" pos:end="217:31"><name pos:start="217:26" pos:end="217:28">out</name><index pos:start="217:29" pos:end="217:31">[<expr pos:start="217:30" pos:end="217:30"><literal type="number" pos:start="217:30" pos:end="217:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="217:34" pos:end="217:45"><expr pos:start="217:34" pos:end="217:45"><name pos:start="217:34" pos:end="217:45"><name pos:start="217:34" pos:end="217:42">refStride</name><index pos:start="217:43" pos:end="217:45">[<expr pos:start="217:44" pos:end="217:44"><literal type="number" pos:start="217:44" pos:end="217:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="217:48" pos:end="217:59"><expr pos:start="217:48" pos:end="217:59"><name pos:start="217:48" pos:end="217:59"><name pos:start="217:48" pos:end="217:56">refStride</name><index pos:start="217:57" pos:end="217:59">[<expr pos:start="217:58" pos:end="217:58"><literal type="number" pos:start="217:58" pos:end="217:58">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="217:62" pos:end="217:62"><expr pos:start="217:62" pos:end="217:62"><name pos:start="217:62" pos:end="217:62">w</name></expr></argument>, <argument pos:start="217:65" pos:end="217:65"><expr pos:start="217:65" pos:end="217:65"><name pos:start="217:65" pos:end="217:65">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="219:5" pos:end="227:5"><if pos:start="219:5" pos:end="227:5">if <condition pos:start="219:8" pos:end="219:53">(<expr pos:start="219:9" pos:end="219:52"><call pos:start="219:9" pos:end="219:28"><name pos:start="219:9" pos:end="219:17">hasChroma</name><argument_list pos:start="219:18" pos:end="219:28">(<argument pos:start="219:19" pos:end="219:27"><expr pos:start="219:19" pos:end="219:27"><name pos:start="219:19" pos:end="219:27">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="219:30" pos:end="219:31">&amp;&amp;</operator> <call pos:start="219:33" pos:end="219:52"><name pos:start="219:33" pos:end="219:41">hasChroma</name><argument_list pos:start="219:42" pos:end="219:52">(<argument pos:start="219:43" pos:end="219:51"><expr pos:start="219:43" pos:end="219:51"><name pos:start="219:43" pos:end="219:51">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="219:55" pos:end="227:5">{<block_content pos:start="223:9" pos:end="225:85">

        <comment type="line" pos:start="221:9" pos:end="221:48">//FIXME check that output is really gray</comment>

        <expr_stmt pos:start="223:9" pos:end="223:85"><expr pos:start="223:9" pos:end="223:84"><name pos:start="223:9" pos:end="223:12">ssdU</name><operator pos:start="223:13" pos:end="223:13">=</operator> <call pos:start="223:15" pos:end="223:84"><name pos:start="223:15" pos:end="223:20">getSSD</name><argument_list pos:start="223:21" pos:end="223:84">(<argument pos:start="223:22" pos:end="223:27"><expr pos:start="223:22" pos:end="223:27"><name pos:start="223:22" pos:end="223:27"><name pos:start="223:22" pos:end="223:24">ref</name><index pos:start="223:25" pos:end="223:27">[<expr pos:start="223:26" pos:end="223:26"><literal type="number" pos:start="223:26" pos:end="223:26">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="223:30" pos:end="223:35"><expr pos:start="223:30" pos:end="223:35"><name pos:start="223:30" pos:end="223:35"><name pos:start="223:30" pos:end="223:32">out</name><index pos:start="223:33" pos:end="223:35">[<expr pos:start="223:34" pos:end="223:34"><literal type="number" pos:start="223:34" pos:end="223:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="223:38" pos:end="223:49"><expr pos:start="223:38" pos:end="223:49"><name pos:start="223:38" pos:end="223:49"><name pos:start="223:38" pos:end="223:46">refStride</name><index pos:start="223:47" pos:end="223:49">[<expr pos:start="223:48" pos:end="223:48"><literal type="number" pos:start="223:48" pos:end="223:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="223:52" pos:end="223:63"><expr pos:start="223:52" pos:end="223:63"><name pos:start="223:52" pos:end="223:63"><name pos:start="223:52" pos:end="223:60">refStride</name><index pos:start="223:61" pos:end="223:63">[<expr pos:start="223:62" pos:end="223:62"><literal type="number" pos:start="223:62" pos:end="223:62">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="223:66" pos:end="223:73"><expr pos:start="223:66" pos:end="223:73"><operator pos:start="223:66" pos:end="223:66">(</operator><name pos:start="223:67" pos:end="223:67">w</name><operator pos:start="223:68" pos:end="223:68">+</operator><literal type="number" pos:start="223:69" pos:end="223:69">1</literal><operator pos:start="223:70" pos:end="223:70">)</operator><operator pos:start="223:71" pos:end="223:72">&gt;&gt;</operator><literal type="number" pos:start="223:73" pos:end="223:73">1</literal></expr></argument>, <argument pos:start="223:76" pos:end="223:83"><expr pos:start="223:76" pos:end="223:83"><operator pos:start="223:76" pos:end="223:76">(</operator><name pos:start="223:77" pos:end="223:77">h</name><operator pos:start="223:78" pos:end="223:78">+</operator><literal type="number" pos:start="223:79" pos:end="223:79">1</literal><operator pos:start="223:80" pos:end="223:80">)</operator><operator pos:start="223:81" pos:end="223:82">&gt;&gt;</operator><literal type="number" pos:start="223:83" pos:end="223:83">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:85"><expr pos:start="225:9" pos:end="225:84"><name pos:start="225:9" pos:end="225:12">ssdV</name><operator pos:start="225:13" pos:end="225:13">=</operator> <call pos:start="225:15" pos:end="225:84"><name pos:start="225:15" pos:end="225:20">getSSD</name><argument_list pos:start="225:21" pos:end="225:84">(<argument pos:start="225:22" pos:end="225:27"><expr pos:start="225:22" pos:end="225:27"><name pos:start="225:22" pos:end="225:27"><name pos:start="225:22" pos:end="225:24">ref</name><index pos:start="225:25" pos:end="225:27">[<expr pos:start="225:26" pos:end="225:26"><literal type="number" pos:start="225:26" pos:end="225:26">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="225:30" pos:end="225:35"><expr pos:start="225:30" pos:end="225:35"><name pos:start="225:30" pos:end="225:35"><name pos:start="225:30" pos:end="225:32">out</name><index pos:start="225:33" pos:end="225:35">[<expr pos:start="225:34" pos:end="225:34"><literal type="number" pos:start="225:34" pos:end="225:34">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="225:38" pos:end="225:49"><expr pos:start="225:38" pos:end="225:49"><name pos:start="225:38" pos:end="225:49"><name pos:start="225:38" pos:end="225:46">refStride</name><index pos:start="225:47" pos:end="225:49">[<expr pos:start="225:48" pos:end="225:48"><literal type="number" pos:start="225:48" pos:end="225:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="225:52" pos:end="225:63"><expr pos:start="225:52" pos:end="225:63"><name pos:start="225:52" pos:end="225:63"><name pos:start="225:52" pos:end="225:60">refStride</name><index pos:start="225:61" pos:end="225:63">[<expr pos:start="225:62" pos:end="225:62"><literal type="number" pos:start="225:62" pos:end="225:62">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="225:66" pos:end="225:73"><expr pos:start="225:66" pos:end="225:73"><operator pos:start="225:66" pos:end="225:66">(</operator><name pos:start="225:67" pos:end="225:67">w</name><operator pos:start="225:68" pos:end="225:68">+</operator><literal type="number" pos:start="225:69" pos:end="225:69">1</literal><operator pos:start="225:70" pos:end="225:70">)</operator><operator pos:start="225:71" pos:end="225:72">&gt;&gt;</operator><literal type="number" pos:start="225:73" pos:end="225:73">1</literal></expr></argument>, <argument pos:start="225:76" pos:end="225:83"><expr pos:start="225:76" pos:end="225:83"><operator pos:start="225:76" pos:end="225:76">(</operator><name pos:start="225:77" pos:end="225:77">h</name><operator pos:start="225:78" pos:end="225:78">+</operator><literal type="number" pos:start="225:79" pos:end="225:79">1</literal><operator pos:start="225:80" pos:end="225:80">)</operator><operator pos:start="225:81" pos:end="225:82">&gt;&gt;</operator><literal type="number" pos:start="225:83" pos:end="225:83">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="229:5" pos:end="231:71"><if pos:start="229:5" pos:end="231:71">if <condition pos:start="229:8" pos:end="229:49">(<expr pos:start="229:9" pos:end="229:48"><call pos:start="229:9" pos:end="229:26"><name pos:start="229:9" pos:end="229:15">isALPHA</name><argument_list pos:start="229:16" pos:end="229:26">(<argument pos:start="229:17" pos:end="229:25"><expr pos:start="229:17" pos:end="229:25"><name pos:start="229:17" pos:end="229:25">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="229:28" pos:end="229:29">&amp;&amp;</operator> <call pos:start="229:31" pos:end="229:48"><name pos:start="229:31" pos:end="229:37">isALPHA</name><argument_list pos:start="229:38" pos:end="229:48">(<argument pos:start="229:39" pos:end="229:47"><expr pos:start="229:39" pos:end="229:47"><name pos:start="229:39" pos:end="229:47">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="231:9" pos:end="231:71"><block_content pos:start="231:9" pos:end="231:71">

        <expr_stmt pos:start="231:9" pos:end="231:71"><expr pos:start="231:9" pos:end="231:70"><name pos:start="231:9" pos:end="231:12">ssdA</name><operator pos:start="231:13" pos:end="231:13">=</operator> <call pos:start="231:15" pos:end="231:70"><name pos:start="231:15" pos:end="231:20">getSSD</name><argument_list pos:start="231:21" pos:end="231:70">(<argument pos:start="231:22" pos:end="231:27"><expr pos:start="231:22" pos:end="231:27"><name pos:start="231:22" pos:end="231:27"><name pos:start="231:22" pos:end="231:24">ref</name><index pos:start="231:25" pos:end="231:27">[<expr pos:start="231:26" pos:end="231:26"><literal type="number" pos:start="231:26" pos:end="231:26">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="231:30" pos:end="231:35"><expr pos:start="231:30" pos:end="231:35"><name pos:start="231:30" pos:end="231:35"><name pos:start="231:30" pos:end="231:32">out</name><index pos:start="231:33" pos:end="231:35">[<expr pos:start="231:34" pos:end="231:34"><literal type="number" pos:start="231:34" pos:end="231:34">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="231:38" pos:end="231:49"><expr pos:start="231:38" pos:end="231:49"><name pos:start="231:38" pos:end="231:49"><name pos:start="231:38" pos:end="231:46">refStride</name><index pos:start="231:47" pos:end="231:49">[<expr pos:start="231:48" pos:end="231:48"><literal type="number" pos:start="231:48" pos:end="231:48">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="231:52" pos:end="231:63"><expr pos:start="231:52" pos:end="231:63"><name pos:start="231:52" pos:end="231:63"><name pos:start="231:52" pos:end="231:60">refStride</name><index pos:start="231:61" pos:end="231:63">[<expr pos:start="231:62" pos:end="231:62"><literal type="number" pos:start="231:62" pos:end="231:62">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="231:66" pos:end="231:66"><expr pos:start="231:66" pos:end="231:66"><name pos:start="231:66" pos:end="231:66">w</name></expr></argument>, <argument pos:start="231:69" pos:end="231:69"><expr pos:start="231:69" pos:end="231:69"><name pos:start="231:69" pos:end="231:69">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="235:5" pos:end="235:15"><expr pos:start="235:5" pos:end="235:14"><name pos:start="235:5" pos:end="235:8">ssdY</name><operator pos:start="235:9" pos:end="235:10">/=</operator> <name pos:start="235:12" pos:end="235:12">w</name><operator pos:start="235:13" pos:end="235:13">*</operator><name pos:start="235:14" pos:end="235:14">h</name></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:17"><expr pos:start="237:5" pos:end="237:16"><name pos:start="237:5" pos:end="237:8">ssdU</name><operator pos:start="237:9" pos:end="237:10">/=</operator> <name pos:start="237:12" pos:end="237:12">w</name><operator pos:start="237:13" pos:end="237:13">*</operator><name pos:start="237:14" pos:end="237:14">h</name><operator pos:start="237:15" pos:end="237:15">/</operator><literal type="number" pos:start="237:16" pos:end="237:16">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:17"><expr pos:start="239:5" pos:end="239:16"><name pos:start="239:5" pos:end="239:8">ssdV</name><operator pos:start="239:9" pos:end="239:10">/=</operator> <name pos:start="239:12" pos:end="239:12">w</name><operator pos:start="239:13" pos:end="239:13">*</operator><name pos:start="239:14" pos:end="239:14">h</name><operator pos:start="239:15" pos:end="239:15">/</operator><literal type="number" pos:start="239:16" pos:end="239:16">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:15"><expr pos:start="241:5" pos:end="241:14"><name pos:start="241:5" pos:end="241:8">ssdA</name><operator pos:start="241:9" pos:end="241:10">/=</operator> <name pos:start="241:12" pos:end="241:12">w</name><operator pos:start="241:13" pos:end="241:13">*</operator><name pos:start="241:14" pos:end="241:14">h</name></expr>;</expr_stmt>



    <expr_stmt pos:start="245:5" pos:end="247:40"><expr pos:start="245:5" pos:end="247:39"><call pos:start="245:5" pos:end="247:39"><name pos:start="245:5" pos:end="245:10">printf</name><argument_list pos:start="245:11" pos:end="247:39">(<argument pos:start="245:12" pos:end="245:72"><expr pos:start="245:12" pos:end="245:72"><literal type="string" pos:start="245:12" pos:end="245:29">" CRC=%08x SSD=%5"</literal><name pos:start="245:30" pos:end="245:35">PRId64</name><literal type="string" pos:start="245:36" pos:end="245:40">",%5"</literal><name pos:start="245:41" pos:end="245:46">PRId64</name><literal type="string" pos:start="245:47" pos:end="245:51">",%5"</literal><name pos:start="245:52" pos:end="245:57">PRId64</name><literal type="string" pos:start="245:58" pos:end="245:62">",%5"</literal><name pos:start="245:63" pos:end="245:68">PRId64</name><literal type="string" pos:start="245:69" pos:end="245:72">"\n"</literal></expr></argument>,

           <argument pos:start="247:12" pos:end="247:14"><expr pos:start="247:12" pos:end="247:14"><name pos:start="247:12" pos:end="247:14">crc</name></expr></argument>, <argument pos:start="247:17" pos:end="247:20"><expr pos:start="247:17" pos:end="247:20"><name pos:start="247:17" pos:end="247:20">ssdY</name></expr></argument>, <argument pos:start="247:23" pos:end="247:26"><expr pos:start="247:23" pos:end="247:26"><name pos:start="247:23" pos:end="247:26">ssdU</name></expr></argument>, <argument pos:start="247:29" pos:end="247:32"><expr pos:start="247:29" pos:end="247:32"><name pos:start="247:29" pos:end="247:32">ssdV</name></expr></argument>, <argument pos:start="247:35" pos:end="247:38"><expr pos:start="247:35" pos:end="247:38"><name pos:start="247:35" pos:end="247:38">ssdA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="251:1" pos:end="251:4"><name pos:start="251:1" pos:end="251:3">end</name>:</label>



    <expr_stmt pos:start="255:5" pos:end="255:32"><expr pos:start="255:5" pos:end="255:31"><call pos:start="255:5" pos:end="255:31"><name pos:start="255:5" pos:end="255:19">sws_freeContext</name><argument_list pos:start="255:20" pos:end="255:31">(<argument pos:start="255:21" pos:end="255:30"><expr pos:start="255:21" pos:end="255:30"><name pos:start="255:21" pos:end="255:30">dstContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:32"><expr pos:start="257:5" pos:end="257:31"><call pos:start="257:5" pos:end="257:31"><name pos:start="257:5" pos:end="257:19">sws_freeContext</name><argument_list pos:start="257:20" pos:end="257:31">(<argument pos:start="257:21" pos:end="257:30"><expr pos:start="257:21" pos:end="257:30"><name pos:start="257:21" pos:end="257:30">outContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="261:5" pos:end="271:5">for <control pos:start="261:9" pos:end="261:23">(<init pos:start="261:10" pos:end="261:13"><expr pos:start="261:10" pos:end="261:12"><name pos:start="261:10" pos:end="261:10">i</name><operator pos:start="261:11" pos:end="261:11">=</operator><literal type="number" pos:start="261:12" pos:end="261:12">0</literal></expr>;</init> <condition pos:start="261:15" pos:end="261:18"><expr pos:start="261:15" pos:end="261:17"><name pos:start="261:15" pos:end="261:15">i</name><operator pos:start="261:16" pos:end="261:16">&lt;</operator><literal type="number" pos:start="261:17" pos:end="261:17">4</literal></expr>;</condition> <incr pos:start="261:20" pos:end="261:22"><expr pos:start="261:20" pos:end="261:22"><name pos:start="261:20" pos:end="261:20">i</name><operator pos:start="261:21" pos:end="261:22">++</operator></expr></incr>)</control> <block pos:start="261:25" pos:end="271:5">{<block_content pos:start="263:9" pos:end="269:28">

        <if_stmt pos:start="263:9" pos:end="265:28"><if pos:start="263:9" pos:end="265:28">if <condition pos:start="263:12" pos:end="263:25">(<expr pos:start="263:13" pos:end="263:24"><name pos:start="263:13" pos:end="263:24"><name pos:start="263:13" pos:end="263:21">dstStride</name><index pos:start="263:22" pos:end="263:24">[<expr pos:start="263:23" pos:end="263:23"><name pos:start="263:23" pos:end="263:23">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="265:13" pos:end="265:28"><block_content pos:start="265:13" pos:end="265:28">

            <expr_stmt pos:start="265:13" pos:end="265:28"><expr pos:start="265:13" pos:end="265:27"><call pos:start="265:13" pos:end="265:27"><name pos:start="265:13" pos:end="265:19">av_free</name><argument_list pos:start="265:20" pos:end="265:27">(<argument pos:start="265:21" pos:end="265:26"><expr pos:start="265:21" pos:end="265:26"><name pos:start="265:21" pos:end="265:26"><name pos:start="265:21" pos:end="265:23">dst</name><index pos:start="265:24" pos:end="265:26">[<expr pos:start="265:25" pos:end="265:25"><name pos:start="265:25" pos:end="265:25">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="267:9" pos:end="269:28"><if pos:start="267:9" pos:end="269:28">if <condition pos:start="267:12" pos:end="267:25">(<expr pos:start="267:13" pos:end="267:24"><name pos:start="267:13" pos:end="267:24"><name pos:start="267:13" pos:end="267:21">refStride</name><index pos:start="267:22" pos:end="267:24">[<expr pos:start="267:23" pos:end="267:23"><name pos:start="267:23" pos:end="267:23">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="269:13" pos:end="269:28"><block_content pos:start="269:13" pos:end="269:28">

            <expr_stmt pos:start="269:13" pos:end="269:28"><expr pos:start="269:13" pos:end="269:27"><call pos:start="269:13" pos:end="269:27"><name pos:start="269:13" pos:end="269:19">av_free</name><argument_list pos:start="269:20" pos:end="269:27">(<argument pos:start="269:21" pos:end="269:26"><expr pos:start="269:21" pos:end="269:26"><name pos:start="269:21" pos:end="269:26"><name pos:start="269:21" pos:end="269:23">out</name><index pos:start="269:24" pos:end="269:26">[<expr pos:start="269:25" pos:end="269:25"><name pos:start="269:25" pos:end="269:25">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="275:5" pos:end="275:15">return <expr pos:start="275:12" pos:end="275:14"><name pos:start="275:12" pos:end="275:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
