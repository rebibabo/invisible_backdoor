<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19656.c" pos:tabs="8"><function pos:start="1:1" pos:end="275:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">encode_residual</name><parameter_list pos:start="1:27" pos:end="1:58">(<parameter pos:start="1:28" pos:end="1:49"><decl pos:start="1:28" pos:end="1:49"><type pos:start="1:28" pos:end="1:49"><name pos:start="1:28" pos:end="1:44">FlacEncodeContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">ctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:57"><decl pos:start="1:52" pos:end="1:57"><type pos:start="1:52" pos:end="1:57"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:57">ch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="275:1">{<block_content pos:start="5:5" pos:end="273:55">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">min_order</name></decl>, <decl pos:start="7:20" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:28">max_order</name></decl>, <decl pos:start="7:31" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:31" pos:end="7:39">opt_order</name></decl>, <decl pos:start="7:42" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:42" pos:end="7:50">precision</name></decl>, <decl pos:start="7:53" pos:end="7:59"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:53" pos:end="7:59">omethod</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">min_porder</name></decl>, <decl pos:start="9:21" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:30">max_porder</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">FlacFrame</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:20">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">FlacSubframe</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:21">sub</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:48"><decl pos:start="15:5" pos:end="15:47"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int32_t</name></type> <name pos:start="15:13" pos:end="15:47"><name pos:start="15:13" pos:end="15:17">coefs</name><index pos:start="15:18" pos:end="15:32">[<expr pos:start="15:19" pos:end="15:31"><name pos:start="15:19" pos:end="15:31">MAX_LPC_ORDER</name></expr>]</index><index pos:start="15:33" pos:end="15:47">[<expr pos:start="15:34" pos:end="15:46"><name pos:start="15:34" pos:end="15:46">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:13">shift</name><index pos:start="17:14" pos:end="17:28">[<expr pos:start="17:15" pos:end="17:27"><name pos:start="17:15" pos:end="17:27">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">int32_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:16">res</name></decl>, <decl pos:start="19:19" pos:end="19:22"><type ref="prev" pos:start="19:5" pos:end="19:13"><modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:22">smp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:9">frame</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <operator pos:start="23:13" pos:end="23:13">&amp;</operator><name pos:start="23:14" pos:end="23:23"><name pos:start="23:14" pos:end="23:16">ctx</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:23">frame</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:7">sub</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <operator pos:start="25:11" pos:end="25:11">&amp;</operator><name pos:start="25:12" pos:end="25:31"><name pos:start="25:12" pos:end="25:16">frame</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:27">subframes</name><index pos:start="25:28" pos:end="25:31">[<expr pos:start="25:29" pos:end="25:30"><name pos:start="25:29" pos:end="25:30">ch</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:7">res</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <name pos:start="27:11" pos:end="27:23"><name pos:start="27:11" pos:end="27:13">sub</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:23">residual</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:23"><expr pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:7">smp</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <name pos:start="29:11" pos:end="29:22"><name pos:start="29:11" pos:end="29:13">sub</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:22">samples</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:25"><expr pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:5">n</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:13">frame</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:24">blocksize</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:18">/* CONSTANT */</comment>

    <for pos:start="37:5" pos:end="41:5">for<control pos:start="37:8" pos:end="37:22">(<init pos:start="37:9" pos:end="37:12"><expr pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:9">i</name><operator pos:start="37:10" pos:end="37:10">=</operator><literal type="number" pos:start="37:11" pos:end="37:11">1</literal></expr>;</init> <condition pos:start="37:14" pos:end="37:17"><expr pos:start="37:14" pos:end="37:16"><name pos:start="37:14" pos:end="37:14">i</name><operator pos:start="37:15" pos:end="37:15">&lt;</operator><name pos:start="37:16" pos:end="37:16">n</name></expr>;</condition> <incr pos:start="37:19" pos:end="37:21"><expr pos:start="37:19" pos:end="37:21"><name pos:start="37:19" pos:end="37:19">i</name><operator pos:start="37:20" pos:end="37:21">++</operator></expr></incr>)</control> <block pos:start="37:24" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:35">

        <if_stmt pos:start="39:9" pos:end="39:35"><if pos:start="39:9" pos:end="39:35">if<condition pos:start="39:11" pos:end="39:28">(<expr pos:start="39:12" pos:end="39:27"><name pos:start="39:12" pos:end="39:17"><name pos:start="39:12" pos:end="39:14">smp</name><index pos:start="39:15" pos:end="39:17">[<expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">i</name></expr>]</index></name> <operator pos:start="39:19" pos:end="39:20">!=</operator> <name pos:start="39:22" pos:end="39:27"><name pos:start="39:22" pos:end="39:24">smp</name><index pos:start="39:25" pos:end="39:27">[<expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="39:30" pos:end="39:35"><block_content pos:start="39:30" pos:end="39:35"> <break pos:start="39:30" pos:end="39:35">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if<condition pos:start="43:7" pos:end="43:14">(<expr pos:start="43:8" pos:end="43:13"><name pos:start="43:8" pos:end="43:8">i</name> <operator pos:start="43:10" pos:end="43:11">==</operator> <name pos:start="43:13" pos:end="43:13">n</name></expr>)</condition> <block pos:start="43:16" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:26">

        <expr_stmt pos:start="45:9" pos:end="45:60"><expr pos:start="45:9" pos:end="45:59"><name pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:11">sub</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:17">type</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:34"><name pos:start="45:21" pos:end="45:23">sub</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:34">type_code</name></name> <operator pos:start="45:36" pos:end="45:36">=</operator> <name pos:start="45:38" pos:end="45:59">FLAC_SUBFRAME_CONSTANT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:24"><expr pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:11">res</name><index pos:start="47:12" pos:end="47:14">[<expr pos:start="47:13" pos:end="47:13"><literal type="number" pos:start="47:13" pos:end="47:13">0</literal></expr>]</index></name> <operator pos:start="47:16" pos:end="47:16">=</operator> <name pos:start="47:18" pos:end="47:23"><name pos:start="47:18" pos:end="47:20">smp</name><index pos:start="47:21" pos:end="47:23">[<expr pos:start="47:22" pos:end="47:22"><literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:26">return <expr pos:start="49:16" pos:end="49:25"><name pos:start="49:16" pos:end="49:25"><name pos:start="49:16" pos:end="49:18">sub</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:25">obits</name></name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:18">/* VERBATIM */</comment>

    <if_stmt pos:start="57:5" pos:end="65:5"><if pos:start="57:5" pos:end="65:5">if<condition pos:start="57:7" pos:end="57:13">(<expr pos:start="57:8" pos:end="57:12"><name pos:start="57:8" pos:end="57:8">n</name> <operator pos:start="57:10" pos:end="57:10">&lt;</operator> <literal type="number" pos:start="57:12" pos:end="57:12">5</literal></expr>)</condition> <block pos:start="57:15" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:30">

        <expr_stmt pos:start="59:9" pos:end="59:60"><expr pos:start="59:9" pos:end="59:59"><name pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:11">sub</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:17">type</name></name> <operator pos:start="59:19" pos:end="59:19">=</operator> <name pos:start="59:21" pos:end="59:34"><name pos:start="59:21" pos:end="59:23">sub</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:34">type_code</name></name> <operator pos:start="59:36" pos:end="59:36">=</operator> <name pos:start="59:38" pos:end="59:59">FLAC_SUBFRAME_VERBATIM</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:46"><expr pos:start="61:9" pos:end="61:45"><call pos:start="61:9" pos:end="61:45"><name pos:start="61:9" pos:end="61:32">encode_residual_verbatim</name><argument_list pos:start="61:33" pos:end="61:45">(<argument pos:start="61:34" pos:end="61:36"><expr pos:start="61:34" pos:end="61:36"><name pos:start="61:34" pos:end="61:36">res</name></expr></argument>, <argument pos:start="61:39" pos:end="61:41"><expr pos:start="61:39" pos:end="61:41"><name pos:start="61:39" pos:end="61:41">smp</name></expr></argument>, <argument pos:start="61:44" pos:end="61:44"><expr pos:start="61:44" pos:end="61:44"><name pos:start="61:44" pos:end="61:44">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:30">return <expr pos:start="63:16" pos:end="63:29"><name pos:start="63:16" pos:end="63:25"><name pos:start="63:16" pos:end="63:18">sub</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:25">obits</name></name> <operator pos:start="63:27" pos:end="63:27">*</operator> <name pos:start="63:29" pos:end="63:29">n</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:50"><expr pos:start="69:5" pos:end="69:49"><name pos:start="69:5" pos:end="69:13">min_order</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:49"><name pos:start="69:17" pos:end="69:19">ctx</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:28">options</name><operator pos:start="69:29" pos:end="69:29">.</operator><name pos:start="69:30" pos:end="69:49">min_prediction_order</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:50"><expr pos:start="71:5" pos:end="71:49"><name pos:start="71:5" pos:end="71:13">max_order</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <name pos:start="71:17" pos:end="71:49"><name pos:start="71:17" pos:end="71:19">ctx</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:28">options</name><operator pos:start="71:29" pos:end="71:29">.</operator><name pos:start="71:30" pos:end="71:49">max_prediction_order</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:50"><expr pos:start="73:5" pos:end="73:49"><name pos:start="73:5" pos:end="73:14">min_porder</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <name pos:start="73:18" pos:end="73:49"><name pos:start="73:18" pos:end="73:20">ctx</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:29">options</name><operator pos:start="73:30" pos:end="73:30">.</operator><name pos:start="73:31" pos:end="73:49">min_partition_order</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:50"><expr pos:start="75:5" pos:end="75:49"><name pos:start="75:5" pos:end="75:14">max_porder</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <name pos:start="75:18" pos:end="75:49"><name pos:start="75:18" pos:end="75:20">ctx</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:29">options</name><operator pos:start="75:30" pos:end="75:30">.</operator><name pos:start="75:31" pos:end="75:49">max_partition_order</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:49"><expr pos:start="77:5" pos:end="77:48"><name pos:start="77:5" pos:end="77:13">precision</name> <operator pos:start="77:15" pos:end="77:15">=</operator> <name pos:start="77:17" pos:end="77:48"><name pos:start="77:17" pos:end="77:19">ctx</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:28">options</name><operator pos:start="77:29" pos:end="77:29">.</operator><name pos:start="77:30" pos:end="77:48">lpc_coeff_precision</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:51"><expr pos:start="79:5" pos:end="79:50"><name pos:start="79:5" pos:end="79:11">omethod</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:50"><name pos:start="79:15" pos:end="79:17">ctx</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:26">options</name><operator pos:start="79:27" pos:end="79:27">.</operator><name pos:start="79:28" pos:end="79:50">prediction_order_method</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:15">/* FIXED */</comment>

    <if_stmt pos:start="85:5" pos:end="129:5"><if pos:start="85:5" pos:end="129:5">if<condition pos:start="85:7" pos:end="85:67">(<expr pos:start="85:8" pos:end="85:66"><operator pos:start="85:8" pos:end="85:8">!</operator><name pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:11">ctx</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:20">options</name><operator pos:start="85:21" pos:end="85:21">.</operator><name pos:start="85:22" pos:end="85:28">use_lpc</name></name> <operator pos:start="85:30" pos:end="85:31">||</operator> <name pos:start="85:33" pos:end="85:41">max_order</name> <operator pos:start="85:43" pos:end="85:44">==</operator> <literal type="number" pos:start="85:46" pos:end="85:46">0</literal> <operator pos:start="85:48" pos:end="85:49">||</operator> <operator pos:start="85:51" pos:end="85:51">(</operator><name pos:start="85:52" pos:end="85:52">n</name> <operator pos:start="85:54" pos:end="85:55">&lt;=</operator> <name pos:start="85:57" pos:end="85:65">max_order</name><operator pos:start="85:66" pos:end="85:66">)</operator></expr>)</condition> <block pos:start="85:69" pos:end="129:5">{<block_content pos:start="87:9" pos:end="127:32">

        <decl_stmt pos:start="87:9" pos:end="87:41"><decl pos:start="87:9" pos:end="87:40"><type pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:16">uint32_t</name></type> <name pos:start="87:18" pos:end="87:40"><name pos:start="87:18" pos:end="87:21">bits</name><index pos:start="87:22" pos:end="87:40">[<expr pos:start="87:23" pos:end="87:39"><name pos:start="87:23" pos:end="87:37">MAX_FIXED_ORDER</name><operator pos:start="87:38" pos:end="87:38">+</operator><literal type="number" pos:start="87:39" pos:end="87:39">1</literal></expr>]</index></name></decl>;</decl_stmt>

        <if_stmt pos:start="89:9" pos:end="89:68"><if pos:start="89:9" pos:end="89:68">if<condition pos:start="89:11" pos:end="89:39">(<expr pos:start="89:12" pos:end="89:38"><name pos:start="89:12" pos:end="89:20">max_order</name> <operator pos:start="89:22" pos:end="89:22">&gt;</operator> <name pos:start="89:24" pos:end="89:38">MAX_FIXED_ORDER</name></expr>)</condition><block type="pseudo" pos:start="89:41" pos:end="89:68"><block_content pos:start="89:41" pos:end="89:68"> <expr_stmt pos:start="89:41" pos:end="89:68"><expr pos:start="89:41" pos:end="89:67"><name pos:start="89:41" pos:end="89:49">max_order</name> <operator pos:start="89:51" pos:end="89:51">=</operator> <name pos:start="89:53" pos:end="89:67">MAX_FIXED_ORDER</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:22"><expr pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:17">opt_order</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <literal type="number" pos:start="91:21" pos:end="91:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:29"><expr pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:12">bits</name><index pos:start="93:13" pos:end="93:15">[<expr pos:start="93:14" pos:end="93:14"><literal type="number" pos:start="93:14" pos:end="93:14">0</literal></expr>]</index></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <name pos:start="93:19" pos:end="93:28">UINT32_MAX</name></expr>;</expr_stmt>

        <for pos:start="95:9" pos:end="109:9">for<control pos:start="95:12" pos:end="95:43">(<init pos:start="95:13" pos:end="95:24"><expr pos:start="95:13" pos:end="95:23"><name pos:start="95:13" pos:end="95:13">i</name><operator pos:start="95:14" pos:end="95:14">=</operator><name pos:start="95:15" pos:end="95:23">min_order</name></expr>;</init> <condition pos:start="95:26" pos:end="95:38"><expr pos:start="95:26" pos:end="95:37"><name pos:start="95:26" pos:end="95:26">i</name><operator pos:start="95:27" pos:end="95:28">&lt;=</operator><name pos:start="95:29" pos:end="95:37">max_order</name></expr>;</condition> <incr pos:start="95:40" pos:end="95:42"><expr pos:start="95:40" pos:end="95:42"><name pos:start="95:40" pos:end="95:40">i</name><operator pos:start="95:41" pos:end="95:42">++</operator></expr></incr>)</control> <block pos:start="95:45" pos:end="109:9">{<block_content pos:start="97:13" pos:end="107:13">

            <expr_stmt pos:start="97:13" pos:end="97:50"><expr pos:start="97:13" pos:end="97:49"><call pos:start="97:13" pos:end="97:49"><name pos:start="97:13" pos:end="97:33">encode_residual_fixed</name><argument_list pos:start="97:34" pos:end="97:49">(<argument pos:start="97:35" pos:end="97:37"><expr pos:start="97:35" pos:end="97:37"><name pos:start="97:35" pos:end="97:37">res</name></expr></argument>, <argument pos:start="97:40" pos:end="97:42"><expr pos:start="97:40" pos:end="97:42"><name pos:start="97:40" pos:end="97:42">smp</name></expr></argument>, <argument pos:start="97:45" pos:end="97:45"><expr pos:start="97:45" pos:end="97:45"><name pos:start="97:45" pos:end="97:45">n</name></expr></argument>, <argument pos:start="97:48" pos:end="97:48"><expr pos:start="97:48" pos:end="97:48"><name pos:start="97:48" pos:end="97:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="101:63"><expr pos:start="99:13" pos:end="101:62"><name pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:16">bits</name><index pos:start="99:17" pos:end="99:19">[<expr pos:start="99:18" pos:end="99:18"><name pos:start="99:18" pos:end="99:18">i</name></expr>]</index></name> <operator pos:start="99:21" pos:end="99:21">=</operator> <call pos:start="99:23" pos:end="101:62"><name pos:start="99:23" pos:end="99:44">calc_rice_params_fixed</name><argument_list pos:start="99:45" pos:end="101:62">(<argument pos:start="99:46" pos:end="99:53"><expr pos:start="99:46" pos:end="99:53"><operator pos:start="99:46" pos:end="99:46">&amp;</operator><name pos:start="99:47" pos:end="99:53"><name pos:start="99:47" pos:end="99:49">sub</name><operator pos:start="99:50" pos:end="99:51">-&gt;</operator><name pos:start="99:52" pos:end="99:53">rc</name></name></expr></argument>, <argument pos:start="99:56" pos:end="99:65"><expr pos:start="99:56" pos:end="99:65"><name pos:start="99:56" pos:end="99:65">min_porder</name></expr></argument>, <argument pos:start="99:68" pos:end="99:77"><expr pos:start="99:68" pos:end="99:77"><name pos:start="99:68" pos:end="99:77">max_porder</name></expr></argument>, <argument pos:start="99:80" pos:end="99:82"><expr pos:start="99:80" pos:end="99:82"><name pos:start="99:80" pos:end="99:82">res</name></expr></argument>,

                                             <argument pos:start="101:46" pos:end="101:46"><expr pos:start="101:46" pos:end="101:46"><name pos:start="101:46" pos:end="101:46">n</name></expr></argument>, <argument pos:start="101:49" pos:end="101:49"><expr pos:start="101:49" pos:end="101:49"><name pos:start="101:49" pos:end="101:49">i</name></expr></argument>, <argument pos:start="101:52" pos:end="101:61"><expr pos:start="101:52" pos:end="101:61"><name pos:start="101:52" pos:end="101:61"><name pos:start="101:52" pos:end="101:54">sub</name><operator pos:start="101:55" pos:end="101:56">-&gt;</operator><name pos:start="101:57" pos:end="101:61">obits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="107:13"><if pos:start="103:13" pos:end="107:13">if<condition pos:start="103:15" pos:end="103:41">(<expr pos:start="103:16" pos:end="103:40"><name pos:start="103:16" pos:end="103:22"><name pos:start="103:16" pos:end="103:19">bits</name><index pos:start="103:20" pos:end="103:22">[<expr pos:start="103:21" pos:end="103:21"><name pos:start="103:21" pos:end="103:21">i</name></expr>]</index></name> <operator pos:start="103:24" pos:end="103:24">&lt;</operator> <name pos:start="103:26" pos:end="103:40"><name pos:start="103:26" pos:end="103:29">bits</name><index pos:start="103:30" pos:end="103:40">[<expr pos:start="103:31" pos:end="103:39"><name pos:start="103:31" pos:end="103:39">opt_order</name></expr>]</index></name></expr>)</condition> <block pos:start="103:43" pos:end="107:13">{<block_content pos:start="105:17" pos:end="105:30">

                <expr_stmt pos:start="105:17" pos:end="105:30"><expr pos:start="105:17" pos:end="105:29"><name pos:start="105:17" pos:end="105:25">opt_order</name> <operator pos:start="105:27" pos:end="105:27">=</operator> <name pos:start="105:29" pos:end="105:29">i</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="111:9" pos:end="111:31"><expr pos:start="111:9" pos:end="111:30"><name pos:start="111:9" pos:end="111:18"><name pos:start="111:9" pos:end="111:11">sub</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:18">order</name></name> <operator pos:start="111:20" pos:end="111:20">=</operator> <name pos:start="111:22" pos:end="111:30">opt_order</name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:40"><expr pos:start="113:9" pos:end="113:39"><name pos:start="113:9" pos:end="113:17"><name pos:start="113:9" pos:end="113:11">sub</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:17">type</name></name> <operator pos:start="113:19" pos:end="113:19">=</operator> <name pos:start="113:21" pos:end="113:39">FLAC_SUBFRAME_FIXED</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:48"><expr pos:start="115:9" pos:end="115:47"><name pos:start="115:9" pos:end="115:22"><name pos:start="115:9" pos:end="115:11">sub</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:22">type_code</name></name> <operator pos:start="115:24" pos:end="115:24">=</operator> <name pos:start="115:26" pos:end="115:34"><name pos:start="115:26" pos:end="115:28">sub</name><operator pos:start="115:29" pos:end="115:30">-&gt;</operator><name pos:start="115:31" pos:end="115:34">type</name></name> <operator pos:start="115:36" pos:end="115:36">|</operator> <name pos:start="115:38" pos:end="115:47"><name pos:start="115:38" pos:end="115:40">sub</name><operator pos:start="115:41" pos:end="115:42">-&gt;</operator><name pos:start="115:43" pos:end="115:47">order</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="125:9"><if pos:start="117:9" pos:end="125:9">if<condition pos:start="117:11" pos:end="117:35">(<expr pos:start="117:12" pos:end="117:34"><name pos:start="117:12" pos:end="117:21"><name pos:start="117:12" pos:end="117:14">sub</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:21">order</name></name> <operator pos:start="117:23" pos:end="117:24">!=</operator> <name pos:start="117:26" pos:end="117:34">max_order</name></expr>)</condition> <block pos:start="117:37" pos:end="125:9">{<block_content pos:start="119:13" pos:end="123:66">

            <expr_stmt pos:start="119:13" pos:end="119:59"><expr pos:start="119:13" pos:end="119:58"><call pos:start="119:13" pos:end="119:58"><name pos:start="119:13" pos:end="119:33">encode_residual_fixed</name><argument_list pos:start="119:34" pos:end="119:58">(<argument pos:start="119:35" pos:end="119:37"><expr pos:start="119:35" pos:end="119:37"><name pos:start="119:35" pos:end="119:37">res</name></expr></argument>, <argument pos:start="119:40" pos:end="119:42"><expr pos:start="119:40" pos:end="119:42"><name pos:start="119:40" pos:end="119:42">smp</name></expr></argument>, <argument pos:start="119:45" pos:end="119:45"><expr pos:start="119:45" pos:end="119:45"><name pos:start="119:45" pos:end="119:45">n</name></expr></argument>, <argument pos:start="119:48" pos:end="119:57"><expr pos:start="119:48" pos:end="119:57"><name pos:start="119:48" pos:end="119:57"><name pos:start="119:48" pos:end="119:50">sub</name><operator pos:start="119:51" pos:end="119:52">-&gt;</operator><name pos:start="119:53" pos:end="119:57">order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="121:13" pos:end="123:66">return <expr pos:start="121:20" pos:end="123:65"><call pos:start="121:20" pos:end="123:65"><name pos:start="121:20" pos:end="121:41">calc_rice_params_fixed</name><argument_list pos:start="121:42" pos:end="123:65">(<argument pos:start="121:43" pos:end="121:50"><expr pos:start="121:43" pos:end="121:50"><operator pos:start="121:43" pos:end="121:43">&amp;</operator><name pos:start="121:44" pos:end="121:50"><name pos:start="121:44" pos:end="121:46">sub</name><operator pos:start="121:47" pos:end="121:48">-&gt;</operator><name pos:start="121:49" pos:end="121:50">rc</name></name></expr></argument>, <argument pos:start="121:53" pos:end="121:62"><expr pos:start="121:53" pos:end="121:62"><name pos:start="121:53" pos:end="121:62">min_porder</name></expr></argument>, <argument pos:start="121:65" pos:end="121:74"><expr pos:start="121:65" pos:end="121:74"><name pos:start="121:65" pos:end="121:74">max_porder</name></expr></argument>, <argument pos:start="121:77" pos:end="121:79"><expr pos:start="121:77" pos:end="121:79"><name pos:start="121:77" pos:end="121:79">res</name></expr></argument>, <argument pos:start="121:82" pos:end="121:82"><expr pos:start="121:82" pos:end="121:82"><name pos:start="121:82" pos:end="121:82">n</name></expr></argument>,

                                          <argument pos:start="123:43" pos:end="123:52"><expr pos:start="123:43" pos:end="123:52"><name pos:start="123:43" pos:end="123:52"><name pos:start="123:43" pos:end="123:45">sub</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:52">order</name></name></expr></argument>, <argument pos:start="123:55" pos:end="123:64"><expr pos:start="123:55" pos:end="123:64"><name pos:start="123:55" pos:end="123:64"><name pos:start="123:55" pos:end="123:57">sub</name><operator pos:start="123:58" pos:end="123:59">-&gt;</operator><name pos:start="123:60" pos:end="123:64">obits</name></name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="127:9" pos:end="127:32">return <expr pos:start="127:16" pos:end="127:31"><name pos:start="127:16" pos:end="127:31"><name pos:start="127:16" pos:end="127:19">bits</name><index pos:start="127:20" pos:end="127:31">[<expr pos:start="127:21" pos:end="127:30"><name pos:start="127:21" pos:end="127:30"><name pos:start="127:21" pos:end="127:23">sub</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:30">order</name></name></expr>]</index></name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="133:5" pos:end="133:13">/* LPC */</comment>

    <expr_stmt pos:start="135:5" pos:end="137:87"><expr pos:start="135:5" pos:end="137:86"><name pos:start="135:5" pos:end="135:13">opt_order</name> <operator pos:start="135:15" pos:end="135:15">=</operator> <call pos:start="135:17" pos:end="137:86"><name pos:start="135:17" pos:end="135:33">ff_lpc_calc_coefs</name><argument_list pos:start="135:34" pos:end="137:86">(<argument pos:start="135:35" pos:end="135:43"><expr pos:start="135:35" pos:end="135:43"><operator pos:start="135:35" pos:end="135:35">&amp;</operator><name pos:start="135:36" pos:end="135:43"><name pos:start="135:36" pos:end="135:38">ctx</name><operator pos:start="135:39" pos:end="135:40">-&gt;</operator><name pos:start="135:41" pos:end="135:43">dsp</name></name></expr></argument>, <argument pos:start="135:46" pos:end="135:48"><expr pos:start="135:46" pos:end="135:48"><name pos:start="135:46" pos:end="135:48">smp</name></expr></argument>, <argument pos:start="135:51" pos:end="135:51"><expr pos:start="135:51" pos:end="135:51"><name pos:start="135:51" pos:end="135:51">n</name></expr></argument>, <argument pos:start="135:54" pos:end="135:62"><expr pos:start="135:54" pos:end="135:62"><name pos:start="135:54" pos:end="135:62">max_order</name></expr></argument>, <argument pos:start="135:65" pos:end="135:73"><expr pos:start="135:65" pos:end="135:73"><name pos:start="135:65" pos:end="135:73">precision</name></expr></argument>, <argument pos:start="135:76" pos:end="135:80"><expr pos:start="135:76" pos:end="135:80"><name pos:start="135:76" pos:end="135:80">coefs</name></expr></argument>,

                               <argument pos:start="137:32" pos:end="137:36"><expr pos:start="137:32" pos:end="137:36"><name pos:start="137:32" pos:end="137:36">shift</name></expr></argument>, <argument pos:start="137:39" pos:end="137:58"><expr pos:start="137:39" pos:end="137:58"><name pos:start="137:39" pos:end="137:58"><name pos:start="137:39" pos:end="137:41">ctx</name><operator pos:start="137:42" pos:end="137:43">-&gt;</operator><name pos:start="137:44" pos:end="137:50">options</name><operator pos:start="137:51" pos:end="137:51">.</operator><name pos:start="137:52" pos:end="137:58">use_lpc</name></name></expr></argument>, <argument pos:start="137:61" pos:end="137:67"><expr pos:start="137:61" pos:end="137:67"><name pos:start="137:61" pos:end="137:67">omethod</name></expr></argument>, <argument pos:start="137:70" pos:end="137:82"><expr pos:start="137:70" pos:end="137:82"><name pos:start="137:70" pos:end="137:82">MAX_LPC_SHIFT</name></expr></argument>, <argument pos:start="137:85" pos:end="137:85"><expr pos:start="137:85" pos:end="137:85"><literal type="number" pos:start="137:85" pos:end="137:85">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="141:5" pos:end="251:5"><if pos:start="141:5" pos:end="183:5">if<condition pos:start="141:7" pos:end="145:38">(<expr pos:start="141:8" pos:end="145:37"><name pos:start="141:8" pos:end="141:14">omethod</name> <operator pos:start="141:16" pos:end="141:17">==</operator> <name pos:start="141:19" pos:end="141:37">ORDER_METHOD_2LEVEL</name> <operator pos:start="141:39" pos:end="141:40">||</operator>

       <name pos:start="143:8" pos:end="143:14">omethod</name> <operator pos:start="143:16" pos:end="143:17">==</operator> <name pos:start="143:19" pos:end="143:37">ORDER_METHOD_4LEVEL</name> <operator pos:start="143:39" pos:end="143:40">||</operator>

       <name pos:start="145:8" pos:end="145:14">omethod</name> <operator pos:start="145:16" pos:end="145:17">==</operator> <name pos:start="145:19" pos:end="145:37">ORDER_METHOD_8LEVEL</name></expr>)</condition> <block pos:start="145:40" pos:end="183:5">{<block_content pos:start="147:9" pos:end="181:20">

        <decl_stmt pos:start="147:9" pos:end="147:34"><decl pos:start="147:9" pos:end="147:33"><type pos:start="147:9" pos:end="147:11"><name pos:start="147:9" pos:end="147:11">int</name></type> <name pos:start="147:13" pos:end="147:18">levels</name> <init pos:start="147:20" pos:end="147:33">= <expr pos:start="147:22" pos:end="147:33"><literal type="number" pos:start="147:22" pos:end="147:22">1</literal> <operator pos:start="147:24" pos:end="147:25">&lt;&lt;</operator> <name pos:start="147:27" pos:end="147:33">omethod</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="149:9" pos:end="149:30"><decl pos:start="149:9" pos:end="149:29"><type pos:start="149:9" pos:end="149:16"><name pos:start="149:9" pos:end="149:16">uint32_t</name></type> <name pos:start="149:18" pos:end="149:29"><name pos:start="149:18" pos:end="149:21">bits</name><index pos:start="149:22" pos:end="149:29">[<expr pos:start="149:23" pos:end="149:28"><name pos:start="149:23" pos:end="149:28">levels</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="151:9" pos:end="151:18"><decl pos:start="151:9" pos:end="151:17"><type pos:start="151:9" pos:end="151:11"><name pos:start="151:9" pos:end="151:11">int</name></type> <name pos:start="151:13" pos:end="151:17">order</name></decl>;</decl_stmt>

        <decl_stmt pos:start="153:9" pos:end="153:33"><decl pos:start="153:9" pos:end="153:32"><type pos:start="153:9" pos:end="153:11"><name pos:start="153:9" pos:end="153:11">int</name></type> <name pos:start="153:13" pos:end="153:21">opt_index</name> <init pos:start="153:23" pos:end="153:32">= <expr pos:start="153:25" pos:end="153:32"><name pos:start="153:25" pos:end="153:30">levels</name><operator pos:start="153:31" pos:end="153:31">-</operator><literal type="number" pos:start="153:32" pos:end="153:32">1</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:32"><expr pos:start="155:9" pos:end="155:31"><name pos:start="155:9" pos:end="155:17">opt_order</name> <operator pos:start="155:19" pos:end="155:19">=</operator> <name pos:start="155:21" pos:end="155:29">max_order</name><operator pos:start="155:30" pos:end="155:30">-</operator><literal type="number" pos:start="155:31" pos:end="155:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:37"><expr pos:start="157:9" pos:end="157:36"><name pos:start="157:9" pos:end="157:23"><name pos:start="157:9" pos:end="157:12">bits</name><index pos:start="157:13" pos:end="157:23">[<expr pos:start="157:14" pos:end="157:22"><name pos:start="157:14" pos:end="157:22">opt_index</name></expr>]</index></name> <operator pos:start="157:25" pos:end="157:25">=</operator> <name pos:start="157:27" pos:end="157:36">UINT32_MAX</name></expr>;</expr_stmt>

        <for pos:start="159:9" pos:end="179:9">for<control pos:start="159:12" pos:end="159:34">(<init pos:start="159:13" pos:end="159:23"><expr pos:start="159:13" pos:end="159:22"><name pos:start="159:13" pos:end="159:13">i</name><operator pos:start="159:14" pos:end="159:14">=</operator><name pos:start="159:15" pos:end="159:20">levels</name><operator pos:start="159:21" pos:end="159:21">-</operator><literal type="number" pos:start="159:22" pos:end="159:22">1</literal></expr>;</init> <condition pos:start="159:25" pos:end="159:29"><expr pos:start="159:25" pos:end="159:28"><name pos:start="159:25" pos:end="159:25">i</name><operator pos:start="159:26" pos:end="159:27">&gt;=</operator><literal type="number" pos:start="159:28" pos:end="159:28">0</literal></expr>;</condition> <incr pos:start="159:31" pos:end="159:33"><expr pos:start="159:31" pos:end="159:33"><name pos:start="159:31" pos:end="159:31">i</name><operator pos:start="159:32" pos:end="159:33">--</operator></expr></incr>)</control> <block pos:start="159:36" pos:end="179:9">{<block_content pos:start="161:13" pos:end="177:13">

            <expr_stmt pos:start="161:13" pos:end="161:79"><expr pos:start="161:13" pos:end="161:78"><name pos:start="161:13" pos:end="161:17">order</name> <operator pos:start="161:19" pos:end="161:19">=</operator> <name pos:start="161:21" pos:end="161:29">min_order</name> <operator pos:start="161:31" pos:end="161:31">+</operator> <operator pos:start="161:33" pos:end="161:33">(</operator><operator pos:start="161:34" pos:end="161:34">(</operator><operator pos:start="161:35" pos:end="161:35">(</operator><name pos:start="161:36" pos:end="161:44">max_order</name><operator pos:start="161:45" pos:end="161:45">-</operator><name pos:start="161:46" pos:end="161:54">min_order</name><operator pos:start="161:55" pos:end="161:55">+</operator><literal type="number" pos:start="161:56" pos:end="161:56">1</literal><operator pos:start="161:57" pos:end="161:57">)</operator> <operator pos:start="161:59" pos:end="161:59">*</operator> <operator pos:start="161:61" pos:end="161:61">(</operator><name pos:start="161:62" pos:end="161:62">i</name><operator pos:start="161:63" pos:end="161:63">+</operator><literal type="number" pos:start="161:64" pos:end="161:64">1</literal><operator pos:start="161:65" pos:end="161:65">)</operator><operator pos:start="161:66" pos:end="161:66">)</operator> <operator pos:start="161:68" pos:end="161:68">/</operator> <name pos:start="161:70" pos:end="161:75">levels</name><operator pos:start="161:76" pos:end="161:76">)</operator><operator pos:start="161:77" pos:end="161:77">-</operator><literal type="number" pos:start="161:78" pos:end="161:78">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="163:13" pos:end="163:36"><if pos:start="163:13" pos:end="163:36">if<condition pos:start="163:15" pos:end="163:25">(<expr pos:start="163:16" pos:end="163:24"><name pos:start="163:16" pos:end="163:20">order</name> <operator pos:start="163:22" pos:end="163:22">&lt;</operator> <literal type="number" pos:start="163:24" pos:end="163:24">0</literal></expr>)</condition><block type="pseudo" pos:start="163:27" pos:end="163:36"><block_content pos:start="163:27" pos:end="163:36"> <expr_stmt pos:start="163:27" pos:end="163:36"><expr pos:start="163:27" pos:end="163:35"><name pos:start="163:27" pos:end="163:31">order</name> <operator pos:start="163:33" pos:end="163:33">=</operator> <literal type="number" pos:start="163:35" pos:end="163:35">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:82"><expr pos:start="165:13" pos:end="165:81"><call pos:start="165:13" pos:end="165:81"><name pos:start="165:13" pos:end="165:31">encode_residual_lpc</name><argument_list pos:start="165:32" pos:end="165:81">(<argument pos:start="165:33" pos:end="165:35"><expr pos:start="165:33" pos:end="165:35"><name pos:start="165:33" pos:end="165:35">res</name></expr></argument>, <argument pos:start="165:38" pos:end="165:40"><expr pos:start="165:38" pos:end="165:40"><name pos:start="165:38" pos:end="165:40">smp</name></expr></argument>, <argument pos:start="165:43" pos:end="165:43"><expr pos:start="165:43" pos:end="165:43"><name pos:start="165:43" pos:end="165:43">n</name></expr></argument>, <argument pos:start="165:46" pos:end="165:52"><expr pos:start="165:46" pos:end="165:52"><name pos:start="165:46" pos:end="165:50">order</name><operator pos:start="165:51" pos:end="165:51">+</operator><literal type="number" pos:start="165:52" pos:end="165:52">1</literal></expr></argument>, <argument pos:start="165:55" pos:end="165:66"><expr pos:start="165:55" pos:end="165:66"><name pos:start="165:55" pos:end="165:66"><name pos:start="165:55" pos:end="165:59">coefs</name><index pos:start="165:60" pos:end="165:66">[<expr pos:start="165:61" pos:end="165:65"><name pos:start="165:61" pos:end="165:65">order</name></expr>]</index></name></expr></argument>, <argument pos:start="165:69" pos:end="165:80"><expr pos:start="165:69" pos:end="165:80"><name pos:start="165:69" pos:end="165:80"><name pos:start="165:69" pos:end="165:73">shift</name><index pos:start="165:74" pos:end="165:80">[<expr pos:start="165:75" pos:end="165:79"><name pos:start="165:75" pos:end="165:79">order</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="169:83"><expr pos:start="167:13" pos:end="169:82"><name pos:start="167:13" pos:end="167:19"><name pos:start="167:13" pos:end="167:16">bits</name><index pos:start="167:17" pos:end="167:19">[<expr pos:start="167:18" pos:end="167:18"><name pos:start="167:18" pos:end="167:18">i</name></expr>]</index></name> <operator pos:start="167:21" pos:end="167:21">=</operator> <call pos:start="167:23" pos:end="169:82"><name pos:start="167:23" pos:end="167:42">calc_rice_params_lpc</name><argument_list pos:start="167:43" pos:end="169:82">(<argument pos:start="167:44" pos:end="167:51"><expr pos:start="167:44" pos:end="167:51"><operator pos:start="167:44" pos:end="167:44">&amp;</operator><name pos:start="167:45" pos:end="167:51"><name pos:start="167:45" pos:end="167:47">sub</name><operator pos:start="167:48" pos:end="167:49">-&gt;</operator><name pos:start="167:50" pos:end="167:51">rc</name></name></expr></argument>, <argument pos:start="167:54" pos:end="167:63"><expr pos:start="167:54" pos:end="167:63"><name pos:start="167:54" pos:end="167:63">min_porder</name></expr></argument>, <argument pos:start="167:66" pos:end="167:75"><expr pos:start="167:66" pos:end="167:75"><name pos:start="167:66" pos:end="167:75">max_porder</name></expr></argument>,

                                           <argument pos:start="169:44" pos:end="169:46"><expr pos:start="169:44" pos:end="169:46"><name pos:start="169:44" pos:end="169:46">res</name></expr></argument>, <argument pos:start="169:49" pos:end="169:49"><expr pos:start="169:49" pos:end="169:49"><name pos:start="169:49" pos:end="169:49">n</name></expr></argument>, <argument pos:start="169:52" pos:end="169:58"><expr pos:start="169:52" pos:end="169:58"><name pos:start="169:52" pos:end="169:56">order</name><operator pos:start="169:57" pos:end="169:57">+</operator><literal type="number" pos:start="169:58" pos:end="169:58">1</literal></expr></argument>, <argument pos:start="169:61" pos:end="169:70"><expr pos:start="169:61" pos:end="169:70"><name pos:start="169:61" pos:end="169:70"><name pos:start="169:61" pos:end="169:63">sub</name><operator pos:start="169:64" pos:end="169:65">-&gt;</operator><name pos:start="169:66" pos:end="169:70">obits</name></name></expr></argument>, <argument pos:start="169:73" pos:end="169:81"><expr pos:start="169:73" pos:end="169:81"><name pos:start="169:73" pos:end="169:81">precision</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="177:13"><if pos:start="171:13" pos:end="177:13">if<condition pos:start="171:15" pos:end="171:41">(<expr pos:start="171:16" pos:end="171:40"><name pos:start="171:16" pos:end="171:22"><name pos:start="171:16" pos:end="171:19">bits</name><index pos:start="171:20" pos:end="171:22">[<expr pos:start="171:21" pos:end="171:21"><name pos:start="171:21" pos:end="171:21">i</name></expr>]</index></name> <operator pos:start="171:24" pos:end="171:24">&lt;</operator> <name pos:start="171:26" pos:end="171:40"><name pos:start="171:26" pos:end="171:29">bits</name><index pos:start="171:30" pos:end="171:40">[<expr pos:start="171:31" pos:end="171:39"><name pos:start="171:31" pos:end="171:39">opt_index</name></expr>]</index></name></expr>)</condition> <block pos:start="171:43" pos:end="177:13">{<block_content pos:start="173:17" pos:end="175:34">

                <expr_stmt pos:start="173:17" pos:end="173:30"><expr pos:start="173:17" pos:end="173:29"><name pos:start="173:17" pos:end="173:25">opt_index</name> <operator pos:start="173:27" pos:end="173:27">=</operator> <name pos:start="173:29" pos:end="173:29">i</name></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:34"><expr pos:start="175:17" pos:end="175:33"><name pos:start="175:17" pos:end="175:25">opt_order</name> <operator pos:start="175:27" pos:end="175:27">=</operator> <name pos:start="175:29" pos:end="175:33">order</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="181:9" pos:end="181:20"><expr pos:start="181:9" pos:end="181:19"><name pos:start="181:9" pos:end="181:17">opt_order</name><operator pos:start="181:18" pos:end="181:19">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="183:7" pos:end="211:5">else if<condition pos:start="183:14" pos:end="183:45">(<expr pos:start="183:15" pos:end="183:44"><name pos:start="183:15" pos:end="183:21">omethod</name> <operator pos:start="183:23" pos:end="183:24">==</operator> <name pos:start="183:26" pos:end="183:44">ORDER_METHOD_SEARCH</name></expr>)</condition> <block pos:start="183:47" pos:end="211:5">{<block_content pos:start="187:9" pos:end="209:20">

        <comment type="line" pos:start="185:9" pos:end="185:43">// brute-force optimal order search</comment>

        <decl_stmt pos:start="187:9" pos:end="187:37"><decl pos:start="187:9" pos:end="187:36"><type pos:start="187:9" pos:end="187:16"><name pos:start="187:9" pos:end="187:16">uint32_t</name></type> <name pos:start="187:18" pos:end="187:36"><name pos:start="187:18" pos:end="187:21">bits</name><index pos:start="187:22" pos:end="187:36">[<expr pos:start="187:23" pos:end="187:35"><name pos:start="187:23" pos:end="187:35">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:22"><expr pos:start="189:9" pos:end="189:21"><name pos:start="189:9" pos:end="189:17">opt_order</name> <operator pos:start="189:19" pos:end="189:19">=</operator> <literal type="number" pos:start="189:21" pos:end="189:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:29"><expr pos:start="191:9" pos:end="191:28"><name pos:start="191:9" pos:end="191:15"><name pos:start="191:9" pos:end="191:12">bits</name><index pos:start="191:13" pos:end="191:15">[<expr pos:start="191:14" pos:end="191:14"><literal type="number" pos:start="191:14" pos:end="191:14">0</literal></expr>]</index></name> <operator pos:start="191:17" pos:end="191:17">=</operator> <name pos:start="191:19" pos:end="191:28">UINT32_MAX</name></expr>;</expr_stmt>

        <for pos:start="193:9" pos:end="207:9">for<control pos:start="193:12" pos:end="193:44">(<init pos:start="193:13" pos:end="193:26"><expr pos:start="193:13" pos:end="193:25"><name pos:start="193:13" pos:end="193:13">i</name><operator pos:start="193:14" pos:end="193:14">=</operator><name pos:start="193:15" pos:end="193:23">min_order</name><operator pos:start="193:24" pos:end="193:24">-</operator><literal type="number" pos:start="193:25" pos:end="193:25">1</literal></expr>;</init> <condition pos:start="193:28" pos:end="193:39"><expr pos:start="193:28" pos:end="193:38"><name pos:start="193:28" pos:end="193:28">i</name><operator pos:start="193:29" pos:end="193:29">&lt;</operator><name pos:start="193:30" pos:end="193:38">max_order</name></expr>;</condition> <incr pos:start="193:41" pos:end="193:43"><expr pos:start="193:41" pos:end="193:43"><name pos:start="193:41" pos:end="193:41">i</name><operator pos:start="193:42" pos:end="193:43">++</operator></expr></incr>)</control> <block pos:start="193:46" pos:end="207:9">{<block_content pos:start="195:13" pos:end="205:13">

            <expr_stmt pos:start="195:13" pos:end="195:70"><expr pos:start="195:13" pos:end="195:69"><call pos:start="195:13" pos:end="195:69"><name pos:start="195:13" pos:end="195:31">encode_residual_lpc</name><argument_list pos:start="195:32" pos:end="195:69">(<argument pos:start="195:33" pos:end="195:35"><expr pos:start="195:33" pos:end="195:35"><name pos:start="195:33" pos:end="195:35">res</name></expr></argument>, <argument pos:start="195:38" pos:end="195:40"><expr pos:start="195:38" pos:end="195:40"><name pos:start="195:38" pos:end="195:40">smp</name></expr></argument>, <argument pos:start="195:43" pos:end="195:43"><expr pos:start="195:43" pos:end="195:43"><name pos:start="195:43" pos:end="195:43">n</name></expr></argument>, <argument pos:start="195:46" pos:end="195:48"><expr pos:start="195:46" pos:end="195:48"><name pos:start="195:46" pos:end="195:46">i</name><operator pos:start="195:47" pos:end="195:47">+</operator><literal type="number" pos:start="195:48" pos:end="195:48">1</literal></expr></argument>, <argument pos:start="195:51" pos:end="195:58"><expr pos:start="195:51" pos:end="195:58"><name pos:start="195:51" pos:end="195:58"><name pos:start="195:51" pos:end="195:55">coefs</name><index pos:start="195:56" pos:end="195:58">[<expr pos:start="195:57" pos:end="195:57"><name pos:start="195:57" pos:end="195:57">i</name></expr>]</index></name></expr></argument>, <argument pos:start="195:61" pos:end="195:68"><expr pos:start="195:61" pos:end="195:68"><name pos:start="195:61" pos:end="195:68"><name pos:start="195:61" pos:end="195:65">shift</name><index pos:start="195:66" pos:end="195:68">[<expr pos:start="195:67" pos:end="195:67"><name pos:start="195:67" pos:end="195:67">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="199:79"><expr pos:start="197:13" pos:end="199:78"><name pos:start="197:13" pos:end="197:19"><name pos:start="197:13" pos:end="197:16">bits</name><index pos:start="197:17" pos:end="197:19">[<expr pos:start="197:18" pos:end="197:18"><name pos:start="197:18" pos:end="197:18">i</name></expr>]</index></name> <operator pos:start="197:21" pos:end="197:21">=</operator> <call pos:start="197:23" pos:end="199:78"><name pos:start="197:23" pos:end="197:42">calc_rice_params_lpc</name><argument_list pos:start="197:43" pos:end="199:78">(<argument pos:start="197:44" pos:end="197:51"><expr pos:start="197:44" pos:end="197:51"><operator pos:start="197:44" pos:end="197:44">&amp;</operator><name pos:start="197:45" pos:end="197:51"><name pos:start="197:45" pos:end="197:47">sub</name><operator pos:start="197:48" pos:end="197:49">-&gt;</operator><name pos:start="197:50" pos:end="197:51">rc</name></name></expr></argument>, <argument pos:start="197:54" pos:end="197:63"><expr pos:start="197:54" pos:end="197:63"><name pos:start="197:54" pos:end="197:63">min_porder</name></expr></argument>, <argument pos:start="197:66" pos:end="197:75"><expr pos:start="197:66" pos:end="197:75"><name pos:start="197:66" pos:end="197:75">max_porder</name></expr></argument>,

                                           <argument pos:start="199:44" pos:end="199:46"><expr pos:start="199:44" pos:end="199:46"><name pos:start="199:44" pos:end="199:46">res</name></expr></argument>, <argument pos:start="199:49" pos:end="199:49"><expr pos:start="199:49" pos:end="199:49"><name pos:start="199:49" pos:end="199:49">n</name></expr></argument>, <argument pos:start="199:52" pos:end="199:54"><expr pos:start="199:52" pos:end="199:54"><name pos:start="199:52" pos:end="199:52">i</name><operator pos:start="199:53" pos:end="199:53">+</operator><literal type="number" pos:start="199:54" pos:end="199:54">1</literal></expr></argument>, <argument pos:start="199:57" pos:end="199:66"><expr pos:start="199:57" pos:end="199:66"><name pos:start="199:57" pos:end="199:66"><name pos:start="199:57" pos:end="199:59">sub</name><operator pos:start="199:60" pos:end="199:61">-&gt;</operator><name pos:start="199:62" pos:end="199:66">obits</name></name></expr></argument>, <argument pos:start="199:69" pos:end="199:77"><expr pos:start="199:69" pos:end="199:77"><name pos:start="199:69" pos:end="199:77">precision</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="201:13" pos:end="205:13"><if pos:start="201:13" pos:end="205:13">if<condition pos:start="201:15" pos:end="201:41">(<expr pos:start="201:16" pos:end="201:40"><name pos:start="201:16" pos:end="201:22"><name pos:start="201:16" pos:end="201:19">bits</name><index pos:start="201:20" pos:end="201:22">[<expr pos:start="201:21" pos:end="201:21"><name pos:start="201:21" pos:end="201:21">i</name></expr>]</index></name> <operator pos:start="201:24" pos:end="201:24">&lt;</operator> <name pos:start="201:26" pos:end="201:40"><name pos:start="201:26" pos:end="201:29">bits</name><index pos:start="201:30" pos:end="201:40">[<expr pos:start="201:31" pos:end="201:39"><name pos:start="201:31" pos:end="201:39">opt_order</name></expr>]</index></name></expr>)</condition> <block pos:start="201:43" pos:end="205:13">{<block_content pos:start="203:17" pos:end="203:30">

                <expr_stmt pos:start="203:17" pos:end="203:30"><expr pos:start="203:17" pos:end="203:29"><name pos:start="203:17" pos:end="203:25">opt_order</name> <operator pos:start="203:27" pos:end="203:27">=</operator> <name pos:start="203:29" pos:end="203:29">i</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="209:9" pos:end="209:20"><expr pos:start="209:9" pos:end="209:19"><name pos:start="209:9" pos:end="209:17">opt_order</name><operator pos:start="209:18" pos:end="209:19">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="211:7" pos:end="251:5">else if<condition pos:start="211:14" pos:end="211:42">(<expr pos:start="211:15" pos:end="211:41"><name pos:start="211:15" pos:end="211:21">omethod</name> <operator pos:start="211:23" pos:end="211:24">==</operator> <name pos:start="211:26" pos:end="211:41">ORDER_METHOD_LOG</name></expr>)</condition> <block pos:start="211:44" pos:end="251:5">{<block_content pos:start="213:9" pos:end="249:20">

        <decl_stmt pos:start="213:9" pos:end="213:37"><decl pos:start="213:9" pos:end="213:36"><type pos:start="213:9" pos:end="213:16"><name pos:start="213:9" pos:end="213:16">uint32_t</name></type> <name pos:start="213:18" pos:end="213:36"><name pos:start="213:18" pos:end="213:21">bits</name><index pos:start="213:22" pos:end="213:36">[<expr pos:start="213:23" pos:end="213:35"><name pos:start="213:23" pos:end="213:35">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="215:9" pos:end="215:17"><decl pos:start="215:9" pos:end="215:16"><type pos:start="215:9" pos:end="215:11"><name pos:start="215:9" pos:end="215:11">int</name></type> <name pos:start="215:13" pos:end="215:16">step</name></decl>;</decl_stmt>



        <expr_stmt pos:start="219:9" pos:end="219:59"><expr pos:start="219:9" pos:end="219:58"><name pos:start="219:9" pos:end="219:17">opt_order</name><operator pos:start="219:18" pos:end="219:18">=</operator> <name pos:start="219:20" pos:end="219:28">min_order</name> <operator pos:start="219:30" pos:end="219:30">-</operator> <literal type="number" pos:start="219:32" pos:end="219:34">1</literal> <operator pos:start="219:34" pos:end="219:34">+</operator> <operator pos:start="219:36" pos:end="219:36">(</operator><name pos:start="219:37" pos:end="219:45">max_order</name><operator pos:start="219:46" pos:end="219:46">-</operator><name pos:start="219:47" pos:end="219:55">min_order</name><operator pos:start="219:56" pos:end="219:56">)</operator><operator pos:start="219:57" pos:end="219:57">/</operator><literal type="number" pos:start="219:58" pos:end="219:58">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:39"><expr pos:start="221:9" pos:end="221:38"><call pos:start="221:9" pos:end="221:38"><name pos:start="221:9" pos:end="221:14">memset</name><argument_list pos:start="221:15" pos:end="221:38">(<argument pos:start="221:16" pos:end="221:19"><expr pos:start="221:16" pos:end="221:19"><name pos:start="221:16" pos:end="221:19">bits</name></expr></argument>, <argument pos:start="221:22" pos:end="221:23"><expr pos:start="221:22" pos:end="221:23"><operator pos:start="221:22" pos:end="221:22">-</operator><literal type="number" pos:start="221:23" pos:end="221:23">1</literal></expr></argument>, <argument pos:start="221:26" pos:end="221:37"><expr pos:start="221:26" pos:end="221:37"><sizeof pos:start="221:26" pos:end="221:37">sizeof<argument_list pos:start="221:32" pos:end="221:37">(<argument pos:start="221:33" pos:end="221:36"><expr pos:start="221:33" pos:end="221:36"><name pos:start="221:33" pos:end="221:36">bits</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="225:9" pos:end="247:9">for<control pos:start="225:12" pos:end="225:36">(<init pos:start="225:13" pos:end="225:21"><expr pos:start="225:13" pos:end="225:19"><name pos:start="225:13" pos:end="225:16">step</name><operator pos:start="225:17" pos:end="225:17">=</operator><literal type="number" pos:start="225:18" pos:end="225:19">16</literal></expr> ;</init><condition pos:start="225:22" pos:end="225:26"><expr pos:start="225:22" pos:end="225:25"><name pos:start="225:22" pos:end="225:25">step</name></expr>;</condition> <incr pos:start="225:28" pos:end="225:35"><expr pos:start="225:28" pos:end="225:35"><name pos:start="225:28" pos:end="225:31">step</name><operator pos:start="225:32" pos:end="225:34">&gt;&gt;=</operator><literal type="number" pos:start="225:35" pos:end="225:35">1</literal></expr></incr>)</control><block pos:start="225:37" pos:end="247:9">{<block_content pos:start="227:13" pos:end="245:13">

            <decl_stmt pos:start="227:13" pos:end="227:32"><decl pos:start="227:13" pos:end="227:31"><type pos:start="227:13" pos:end="227:15"><name pos:start="227:13" pos:end="227:15">int</name></type> <name pos:start="227:17" pos:end="227:20">last</name><init pos:start="227:21" pos:end="227:31">= <expr pos:start="227:23" pos:end="227:31"><name pos:start="227:23" pos:end="227:31">opt_order</name></expr></init></decl>;</decl_stmt>

            <for pos:start="229:13" pos:end="245:13">for<control pos:start="229:16" pos:end="229:52">(<init pos:start="229:17" pos:end="229:28"><expr pos:start="229:17" pos:end="229:27"><name pos:start="229:17" pos:end="229:17">i</name><operator pos:start="229:18" pos:end="229:18">=</operator><name pos:start="229:19" pos:end="229:22">last</name><operator pos:start="229:23" pos:end="229:23">-</operator><name pos:start="229:24" pos:end="229:27">step</name></expr>;</init> <condition pos:start="229:30" pos:end="229:42"><expr pos:start="229:30" pos:end="229:41"><name pos:start="229:30" pos:end="229:30">i</name><operator pos:start="229:31" pos:end="229:32">&lt;=</operator><name pos:start="229:33" pos:end="229:36">last</name><operator pos:start="229:37" pos:end="229:37">+</operator><name pos:start="229:38" pos:end="229:41">step</name></expr>;</condition> <incr pos:start="229:44" pos:end="229:51"><expr pos:start="229:44" pos:end="229:51"><name pos:start="229:44" pos:end="229:44">i</name><operator pos:start="229:45" pos:end="229:46">+=</operator> <name pos:start="229:48" pos:end="229:51">step</name></expr></incr>)</control><block pos:start="229:53" pos:end="245:13">{<block_content pos:start="231:17" pos:end="243:33">

                <if_stmt pos:start="231:17" pos:end="233:29"><if pos:start="231:17" pos:end="233:29">if<condition pos:start="231:19" pos:end="231:73">(<expr pos:start="231:20" pos:end="231:72"><name pos:start="231:20" pos:end="231:20">i</name><operator pos:start="231:21" pos:end="231:21">&lt;</operator><name pos:start="231:22" pos:end="231:30">min_order</name><operator pos:start="231:31" pos:end="231:31">-</operator><literal type="number" pos:start="231:32" pos:end="231:32">1</literal> <operator pos:start="231:34" pos:end="231:35">||</operator> <name pos:start="231:37" pos:end="231:37">i</name><operator pos:start="231:38" pos:end="231:39">&gt;=</operator><name pos:start="231:40" pos:end="231:48">max_order</name> <operator pos:start="231:50" pos:end="231:51">||</operator> <name pos:start="231:53" pos:end="231:59"><name pos:start="231:53" pos:end="231:56">bits</name><index pos:start="231:57" pos:end="231:59">[<expr pos:start="231:58" pos:end="231:58"><name pos:start="231:58" pos:end="231:58">i</name></expr>]</index></name> <operator pos:start="231:61" pos:end="231:61">&lt;</operator> <name pos:start="231:63" pos:end="231:72">UINT32_MAX</name></expr>)</condition><block type="pseudo" pos:start="233:21" pos:end="233:29"><block_content pos:start="233:21" pos:end="233:29">

                    <continue pos:start="233:21" pos:end="233:29">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:74"><expr pos:start="235:17" pos:end="235:73"><call pos:start="235:17" pos:end="235:73"><name pos:start="235:17" pos:end="235:35">encode_residual_lpc</name><argument_list pos:start="235:36" pos:end="235:73">(<argument pos:start="235:37" pos:end="235:39"><expr pos:start="235:37" pos:end="235:39"><name pos:start="235:37" pos:end="235:39">res</name></expr></argument>, <argument pos:start="235:42" pos:end="235:44"><expr pos:start="235:42" pos:end="235:44"><name pos:start="235:42" pos:end="235:44">smp</name></expr></argument>, <argument pos:start="235:47" pos:end="235:47"><expr pos:start="235:47" pos:end="235:47"><name pos:start="235:47" pos:end="235:47">n</name></expr></argument>, <argument pos:start="235:50" pos:end="235:52"><expr pos:start="235:50" pos:end="235:52"><name pos:start="235:50" pos:end="235:50">i</name><operator pos:start="235:51" pos:end="235:51">+</operator><literal type="number" pos:start="235:52" pos:end="235:52">1</literal></expr></argument>, <argument pos:start="235:55" pos:end="235:62"><expr pos:start="235:55" pos:end="235:62"><name pos:start="235:55" pos:end="235:62"><name pos:start="235:55" pos:end="235:59">coefs</name><index pos:start="235:60" pos:end="235:62">[<expr pos:start="235:61" pos:end="235:61"><name pos:start="235:61" pos:end="235:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="235:65" pos:end="235:72"><expr pos:start="235:65" pos:end="235:72"><name pos:start="235:65" pos:end="235:72"><name pos:start="235:65" pos:end="235:69">shift</name><index pos:start="235:70" pos:end="235:72">[<expr pos:start="235:71" pos:end="235:71"><name pos:start="235:71" pos:end="235:71">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="237:17" pos:end="239:80"><expr pos:start="237:17" pos:end="239:79"><name pos:start="237:17" pos:end="237:23"><name pos:start="237:17" pos:end="237:20">bits</name><index pos:start="237:21" pos:end="237:23">[<expr pos:start="237:22" pos:end="237:22"><name pos:start="237:22" pos:end="237:22">i</name></expr>]</index></name> <operator pos:start="237:25" pos:end="237:25">=</operator> <call pos:start="237:27" pos:end="239:79"><name pos:start="237:27" pos:end="237:46">calc_rice_params_lpc</name><argument_list pos:start="237:47" pos:end="239:79">(<argument pos:start="237:48" pos:end="237:55"><expr pos:start="237:48" pos:end="237:55"><operator pos:start="237:48" pos:end="237:48">&amp;</operator><name pos:start="237:49" pos:end="237:55"><name pos:start="237:49" pos:end="237:51">sub</name><operator pos:start="237:52" pos:end="237:53">-&gt;</operator><name pos:start="237:54" pos:end="237:55">rc</name></name></expr></argument>, <argument pos:start="237:58" pos:end="237:67"><expr pos:start="237:58" pos:end="237:67"><name pos:start="237:58" pos:end="237:67">min_porder</name></expr></argument>, <argument pos:start="237:70" pos:end="237:79"><expr pos:start="237:70" pos:end="237:79"><name pos:start="237:70" pos:end="237:79">max_porder</name></expr></argument>,

                                            <argument pos:start="239:45" pos:end="239:47"><expr pos:start="239:45" pos:end="239:47"><name pos:start="239:45" pos:end="239:47">res</name></expr></argument>, <argument pos:start="239:50" pos:end="239:50"><expr pos:start="239:50" pos:end="239:50"><name pos:start="239:50" pos:end="239:50">n</name></expr></argument>, <argument pos:start="239:53" pos:end="239:55"><expr pos:start="239:53" pos:end="239:55"><name pos:start="239:53" pos:end="239:53">i</name><operator pos:start="239:54" pos:end="239:54">+</operator><literal type="number" pos:start="239:55" pos:end="239:55">1</literal></expr></argument>, <argument pos:start="239:58" pos:end="239:67"><expr pos:start="239:58" pos:end="239:67"><name pos:start="239:58" pos:end="239:67"><name pos:start="239:58" pos:end="239:60">sub</name><operator pos:start="239:61" pos:end="239:62">-&gt;</operator><name pos:start="239:63" pos:end="239:67">obits</name></name></expr></argument>, <argument pos:start="239:70" pos:end="239:78"><expr pos:start="239:70" pos:end="239:78"><name pos:start="239:70" pos:end="239:78">precision</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="241:17" pos:end="243:33"><if pos:start="241:17" pos:end="243:33">if<condition pos:start="241:19" pos:end="241:45">(<expr pos:start="241:20" pos:end="241:44"><name pos:start="241:20" pos:end="241:26"><name pos:start="241:20" pos:end="241:23">bits</name><index pos:start="241:24" pos:end="241:26">[<expr pos:start="241:25" pos:end="241:25"><name pos:start="241:25" pos:end="241:25">i</name></expr>]</index></name> <operator pos:start="241:28" pos:end="241:28">&lt;</operator> <name pos:start="241:30" pos:end="241:44"><name pos:start="241:30" pos:end="241:33">bits</name><index pos:start="241:34" pos:end="241:44">[<expr pos:start="241:35" pos:end="241:43"><name pos:start="241:35" pos:end="241:43">opt_order</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="243:21" pos:end="243:33"><block_content pos:start="243:21" pos:end="243:33">

                    <expr_stmt pos:start="243:21" pos:end="243:33"><expr pos:start="243:21" pos:end="243:32"><name pos:start="243:21" pos:end="243:29">opt_order</name><operator pos:start="243:30" pos:end="243:30">=</operator> <name pos:start="243:32" pos:end="243:32">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="249:9" pos:end="249:20"><expr pos:start="249:9" pos:end="249:19"><name pos:start="249:9" pos:end="249:17">opt_order</name><operator pos:start="249:18" pos:end="249:19">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="255:5" pos:end="255:27"><expr pos:start="255:5" pos:end="255:26"><name pos:start="255:5" pos:end="255:14"><name pos:start="255:5" pos:end="255:7">sub</name><operator pos:start="255:8" pos:end="255:9">-&gt;</operator><name pos:start="255:10" pos:end="255:14">order</name></name> <operator pos:start="255:16" pos:end="255:16">=</operator> <name pos:start="255:18" pos:end="255:26">opt_order</name></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:34"><expr pos:start="257:5" pos:end="257:33"><name pos:start="257:5" pos:end="257:13"><name pos:start="257:5" pos:end="257:7">sub</name><operator pos:start="257:8" pos:end="257:9">-&gt;</operator><name pos:start="257:10" pos:end="257:13">type</name></name> <operator pos:start="257:15" pos:end="257:15">=</operator> <name pos:start="257:17" pos:end="257:33">FLAC_SUBFRAME_LPC</name></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:48"><expr pos:start="259:5" pos:end="259:47"><name pos:start="259:5" pos:end="259:18"><name pos:start="259:5" pos:end="259:7">sub</name><operator pos:start="259:8" pos:end="259:9">-&gt;</operator><name pos:start="259:10" pos:end="259:18">type_code</name></name> <operator pos:start="259:20" pos:end="259:20">=</operator> <name pos:start="259:22" pos:end="259:30"><name pos:start="259:22" pos:end="259:24">sub</name><operator pos:start="259:25" pos:end="259:26">-&gt;</operator><name pos:start="259:27" pos:end="259:30">type</name></name> <operator pos:start="259:32" pos:end="259:32">|</operator> <operator pos:start="259:34" pos:end="259:34">(</operator><name pos:start="259:35" pos:end="259:44"><name pos:start="259:35" pos:end="259:37">sub</name><operator pos:start="259:38" pos:end="259:39">-&gt;</operator><name pos:start="259:40" pos:end="259:44">order</name></name><operator pos:start="259:45" pos:end="259:45">-</operator><literal type="number" pos:start="259:46" pos:end="259:46">1</literal><operator pos:start="259:47" pos:end="259:47">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:37"><expr pos:start="261:5" pos:end="261:36"><name pos:start="261:5" pos:end="261:14"><name pos:start="261:5" pos:end="261:7">sub</name><operator pos:start="261:8" pos:end="261:9">-&gt;</operator><name pos:start="261:10" pos:end="261:14">shift</name></name> <operator pos:start="261:16" pos:end="261:16">=</operator> <name pos:start="261:18" pos:end="261:36"><name pos:start="261:18" pos:end="261:22">shift</name><index pos:start="261:23" pos:end="261:36">[<expr pos:start="261:24" pos:end="261:35"><name pos:start="261:24" pos:end="261:33"><name pos:start="261:24" pos:end="261:26">sub</name><operator pos:start="261:27" pos:end="261:28">-&gt;</operator><name pos:start="261:29" pos:end="261:33">order</name></name><operator pos:start="261:34" pos:end="261:34">-</operator><literal type="number" pos:start="261:35" pos:end="261:35">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="263:5" pos:end="267:5">for<control pos:start="263:8" pos:end="263:31">(<init pos:start="263:9" pos:end="263:12"><expr pos:start="263:9" pos:end="263:11"><name pos:start="263:9" pos:end="263:9">i</name><operator pos:start="263:10" pos:end="263:10">=</operator><literal type="number" pos:start="263:11" pos:end="263:11">0</literal></expr>;</init> <condition pos:start="263:14" pos:end="263:26"><expr pos:start="263:14" pos:end="263:25"><name pos:start="263:14" pos:end="263:14">i</name><operator pos:start="263:15" pos:end="263:15">&lt;</operator><name pos:start="263:16" pos:end="263:25"><name pos:start="263:16" pos:end="263:18">sub</name><operator pos:start="263:19" pos:end="263:20">-&gt;</operator><name pos:start="263:21" pos:end="263:25">order</name></name></expr>;</condition> <incr pos:start="263:28" pos:end="263:30"><expr pos:start="263:28" pos:end="263:30"><name pos:start="263:28" pos:end="263:28">i</name><operator pos:start="263:29" pos:end="263:30">++</operator></expr></incr>)</control> <block pos:start="263:33" pos:end="267:5">{<block_content pos:start="265:9" pos:end="265:47">

        <expr_stmt pos:start="265:9" pos:end="265:47"><expr pos:start="265:9" pos:end="265:46"><name pos:start="265:9" pos:end="265:21"><name pos:start="265:9" pos:end="265:11">sub</name><operator pos:start="265:12" pos:end="265:13">-&gt;</operator><name pos:start="265:14" pos:end="265:18">coefs</name><index pos:start="265:19" pos:end="265:21">[<expr pos:start="265:20" pos:end="265:20"><name pos:start="265:20" pos:end="265:20">i</name></expr>]</index></name> <operator pos:start="265:23" pos:end="265:23">=</operator> <name pos:start="265:25" pos:end="265:46"><name pos:start="265:25" pos:end="265:29">coefs</name><index pos:start="265:30" pos:end="265:43">[<expr pos:start="265:31" pos:end="265:42"><name pos:start="265:31" pos:end="265:40"><name pos:start="265:31" pos:end="265:33">sub</name><operator pos:start="265:34" pos:end="265:35">-&gt;</operator><name pos:start="265:36" pos:end="265:40">order</name></name><operator pos:start="265:41" pos:end="265:41">-</operator><literal type="number" pos:start="265:42" pos:end="265:42">1</literal></expr>]</index><index pos:start="265:44" pos:end="265:46">[<expr pos:start="265:45" pos:end="265:45"><name pos:start="265:45" pos:end="265:45">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="269:5" pos:end="269:73"><expr pos:start="269:5" pos:end="269:72"><call pos:start="269:5" pos:end="269:72"><name pos:start="269:5" pos:end="269:23">encode_residual_lpc</name><argument_list pos:start="269:24" pos:end="269:72">(<argument pos:start="269:25" pos:end="269:27"><expr pos:start="269:25" pos:end="269:27"><name pos:start="269:25" pos:end="269:27">res</name></expr></argument>, <argument pos:start="269:30" pos:end="269:32"><expr pos:start="269:30" pos:end="269:32"><name pos:start="269:30" pos:end="269:32">smp</name></expr></argument>, <argument pos:start="269:35" pos:end="269:35"><expr pos:start="269:35" pos:end="269:35"><name pos:start="269:35" pos:end="269:35">n</name></expr></argument>, <argument pos:start="269:38" pos:end="269:47"><expr pos:start="269:38" pos:end="269:47"><name pos:start="269:38" pos:end="269:47"><name pos:start="269:38" pos:end="269:40">sub</name><operator pos:start="269:41" pos:end="269:42">-&gt;</operator><name pos:start="269:43" pos:end="269:47">order</name></name></expr></argument>, <argument pos:start="269:50" pos:end="269:59"><expr pos:start="269:50" pos:end="269:59"><name pos:start="269:50" pos:end="269:59"><name pos:start="269:50" pos:end="269:52">sub</name><operator pos:start="269:53" pos:end="269:54">-&gt;</operator><name pos:start="269:55" pos:end="269:59">coefs</name></name></expr></argument>, <argument pos:start="269:62" pos:end="269:71"><expr pos:start="269:62" pos:end="269:71"><name pos:start="269:62" pos:end="269:71"><name pos:start="269:62" pos:end="269:64">sub</name><operator pos:start="269:65" pos:end="269:66">-&gt;</operator><name pos:start="269:67" pos:end="269:71">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="271:5" pos:end="273:55">return <expr pos:start="271:12" pos:end="273:54"><call pos:start="271:12" pos:end="273:54"><name pos:start="271:12" pos:end="271:31">calc_rice_params_lpc</name><argument_list pos:start="271:32" pos:end="273:54">(<argument pos:start="271:33" pos:end="271:40"><expr pos:start="271:33" pos:end="271:40"><operator pos:start="271:33" pos:end="271:33">&amp;</operator><name pos:start="271:34" pos:end="271:40"><name pos:start="271:34" pos:end="271:36">sub</name><operator pos:start="271:37" pos:end="271:38">-&gt;</operator><name pos:start="271:39" pos:end="271:40">rc</name></name></expr></argument>, <argument pos:start="271:43" pos:end="271:52"><expr pos:start="271:43" pos:end="271:52"><name pos:start="271:43" pos:end="271:52">min_porder</name></expr></argument>, <argument pos:start="271:55" pos:end="271:64"><expr pos:start="271:55" pos:end="271:64"><name pos:start="271:55" pos:end="271:64">max_porder</name></expr></argument>, <argument pos:start="271:67" pos:end="271:69"><expr pos:start="271:67" pos:end="271:69"><name pos:start="271:67" pos:end="271:69">res</name></expr></argument>, <argument pos:start="271:72" pos:end="271:72"><expr pos:start="271:72" pos:end="271:72"><name pos:start="271:72" pos:end="271:72">n</name></expr></argument>, <argument pos:start="271:75" pos:end="271:84"><expr pos:start="271:75" pos:end="271:84"><name pos:start="271:75" pos:end="271:84"><name pos:start="271:75" pos:end="271:77">sub</name><operator pos:start="271:78" pos:end="271:79">-&gt;</operator><name pos:start="271:80" pos:end="271:84">order</name></name></expr></argument>,

                                <argument pos:start="273:33" pos:end="273:42"><expr pos:start="273:33" pos:end="273:42"><name pos:start="273:33" pos:end="273:42"><name pos:start="273:33" pos:end="273:35">sub</name><operator pos:start="273:36" pos:end="273:37">-&gt;</operator><name pos:start="273:38" pos:end="273:42">obits</name></name></expr></argument>, <argument pos:start="273:45" pos:end="273:53"><expr pos:start="273:45" pos:end="273:53"><name pos:start="273:45" pos:end="273:53">precision</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
