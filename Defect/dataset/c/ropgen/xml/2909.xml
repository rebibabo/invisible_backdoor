<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2909.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">parallels_probe</name><parameter_list pos:start="1:27" pos:end="1:82">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:40">uint8_t</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">buf</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:59">buf_size</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:81"><decl pos:start="1:62" pos:end="1:81"><type pos:start="1:62" pos:end="1:81"><specifier pos:start="1:62" pos:end="1:66">const</specifier> <name pos:start="1:68" pos:end="1:71">char</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:81">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:13">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:27"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:25">ParallelsHeader</name> <modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:29">ph</name> <init pos:start="5:31" pos:end="5:49">= <expr pos:start="5:33" pos:end="5:49"><operator pos:start="5:33" pos:end="5:33">(</operator><specifier pos:start="5:34" pos:end="5:38">const</specifier> <name pos:start="5:40" pos:end="5:43">void</name> <operator pos:start="5:45" pos:end="5:45">*</operator><operator pos:start="5:46" pos:end="5:46">)</operator><name pos:start="5:47" pos:end="5:49">buf</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:17"><if pos:start="9:5" pos:end="11:17">if <condition pos:start="9:8" pos:end="9:43">(<expr pos:start="9:9" pos:end="9:42"><name pos:start="9:9" pos:end="9:16">buf_size</name> <operator pos:start="9:18" pos:end="9:18">&lt;</operator> <sizeof pos:start="9:20" pos:end="9:42">sizeof<argument_list pos:start="9:26" pos:end="9:42">(<argument pos:start="9:27" pos:end="9:41"><expr pos:start="9:27" pos:end="9:41"><name pos:start="9:27" pos:end="9:41">ParallelsHeader</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:17"><block_content pos:start="11:9" pos:end="11:17">

        <return pos:start="11:9" pos:end="11:17">return <expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="21:19"><if pos:start="15:5" pos:end="21:19">if <condition pos:start="15:8" pos:end="19:53">(<expr pos:start="15:9" pos:end="19:52"><operator pos:start="15:9" pos:end="15:9">(</operator><operator pos:start="15:10" pos:end="15:10">!</operator><call pos:start="15:11" pos:end="15:45"><name pos:start="15:11" pos:end="15:16">memcmp</name><argument_list pos:start="15:17" pos:end="15:45">(<argument pos:start="15:18" pos:end="15:26"><expr pos:start="15:18" pos:end="15:26"><name pos:start="15:18" pos:end="15:26"><name pos:start="15:18" pos:end="15:19">ph</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:26">magic</name></name></expr></argument>, <argument pos:start="15:29" pos:end="15:40"><expr pos:start="15:29" pos:end="15:40"><name pos:start="15:29" pos:end="15:40">HEADER_MAGIC</name></expr></argument>, <argument pos:start="15:43" pos:end="15:44"><expr pos:start="15:43" pos:end="15:44"><literal type="number" pos:start="15:43" pos:end="15:44">16</literal></expr></argument>)</argument_list></call> <operator pos:start="15:47" pos:end="15:48">||</operator>

        <operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:45"><name pos:start="17:10" pos:end="17:15">memcmp</name><argument_list pos:start="17:16" pos:end="17:45">(<argument pos:start="17:17" pos:end="17:25"><expr pos:start="17:17" pos:end="17:25"><name pos:start="17:17" pos:end="17:25"><name pos:start="17:17" pos:end="17:18">ph</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:25">magic</name></name></expr></argument>, <argument pos:start="17:28" pos:end="17:40"><expr pos:start="17:28" pos:end="17:40"><name pos:start="17:28" pos:end="17:40">HEADER_MAGIC2</name></expr></argument>, <argument pos:start="17:43" pos:end="17:44"><expr pos:start="17:43" pos:end="17:44"><literal type="number" pos:start="17:43" pos:end="17:44">16</literal></expr></argument>)</argument_list></call><operator pos:start="17:46" pos:end="17:46">)</operator> <operator pos:start="17:48" pos:end="17:49">&amp;&amp;</operator>

        <operator pos:start="19:9" pos:end="19:9">(</operator><call pos:start="19:10" pos:end="19:33"><name pos:start="19:10" pos:end="19:20">le32_to_cpu</name><argument_list pos:start="19:21" pos:end="19:33">(<argument pos:start="19:22" pos:end="19:32"><expr pos:start="19:22" pos:end="19:32"><name pos:start="19:22" pos:end="19:32"><name pos:start="19:22" pos:end="19:23">ph</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:32">version</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:35" pos:end="19:36">==</operator> <name pos:start="19:38" pos:end="19:51">HEADER_VERSION</name><operator pos:start="19:52" pos:end="19:52">)</operator></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:19"><block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><literal type="number" pos:start="21:16" pos:end="21:18">100</literal></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="25:5" pos:end="25:13">return <expr pos:start="25:12" pos:end="25:12"><literal type="number" pos:start="25:12" pos:end="25:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
