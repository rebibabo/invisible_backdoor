<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/714.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:40">kvm_get_dirty_pages_log_range</name><parameter_list pos:start="1:41" pos:end="3:63">(<parameter pos:start="1:42" pos:end="1:69"><decl pos:start="1:42" pos:end="1:69"><type pos:start="1:42" pos:end="1:69"><name pos:start="1:42" pos:end="1:60">MemoryRegionSection</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:69">section</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:62"><decl pos:start="3:42" pos:end="3:62"><type pos:start="3:42" pos:end="3:62"><name pos:start="3:42" pos:end="3:49">unsigned</name> <name pos:start="3:51" pos:end="3:54">long</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:62">bitmap</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:13">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:18">i</name></decl>, <decl pos:start="7:21" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:21" pos:end="7:21">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">long</name></type> <name pos:start="9:19" pos:end="9:29">page_number</name></decl>, <decl pos:start="9:32" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:17"/><name pos:start="9:32" pos:end="9:35">addr</name></decl>, <decl pos:start="9:38" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:17"/><name pos:start="9:38" pos:end="9:42">addr1</name></decl>, <decl pos:start="9:45" pos:end="9:45"><type ref="prev" pos:start="9:5" pos:end="9:17"/><name pos:start="9:45" pos:end="9:45">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:98"><decl pos:start="11:5" pos:end="11:97"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:20">len</name> <init pos:start="11:22" pos:end="11:97">= <expr pos:start="11:24" pos:end="11:97"><operator pos:start="11:24" pos:end="11:24">(</operator><operator pos:start="11:25" pos:end="11:25">(</operator><name pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:32">section</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:38">size</name></name> <operator pos:start="11:40" pos:end="11:40">/</operator> <name pos:start="11:42" pos:end="11:57">TARGET_PAGE_SIZE</name><operator pos:start="11:58" pos:end="11:58">)</operator> <operator pos:start="11:60" pos:end="11:60">+</operator> <name pos:start="11:62" pos:end="11:75">HOST_LONG_BITS</name> <operator pos:start="11:77" pos:end="11:77">-</operator> <literal type="number" pos:start="11:79" pos:end="11:79">1</literal><operator pos:start="11:80" pos:end="11:80">)</operator> <operator pos:start="11:82" pos:end="11:82">/</operator> <name pos:start="11:84" pos:end="11:97">HOST_LONG_BITS</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="21:7">/*

     * bitmap-traveling is faster than memory-traveling (for addr...)

     * especially when most of the memory is not dirty.

     */</comment>

    <for pos:start="23:5" pos:end="47:5">for <control pos:start="23:9" pos:end="23:29">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:24"><expr pos:start="23:17" pos:end="23:23"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:23">len</name></expr>;</condition> <incr pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><name pos:start="23:26" pos:end="23:26">i</name><operator pos:start="23:27" pos:end="23:28">++</operator></expr></incr>)</control> <block pos:start="23:31" pos:end="47:5">{<block_content pos:start="25:9" pos:end="45:9">

        <if_stmt pos:start="25:9" pos:end="45:9"><if pos:start="25:9" pos:end="45:9">if <condition pos:start="25:12" pos:end="25:27">(<expr pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:18">bitmap</name><index pos:start="25:19" pos:end="25:21">[<expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">i</name></expr>]</index></name> <operator pos:start="25:23" pos:end="25:24">!=</operator> <literal type="number" pos:start="25:26" pos:end="25:26">0</literal></expr>)</condition> <block pos:start="25:29" pos:end="45:9">{<block_content pos:start="27:13" pos:end="43:29">

            <expr_stmt pos:start="27:13" pos:end="27:39"><expr pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:13">c</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:38"><name pos:start="27:17" pos:end="27:27">leul_to_cpu</name><argument_list pos:start="27:28" pos:end="27:38">(<argument pos:start="27:29" pos:end="27:37"><expr pos:start="27:29" pos:end="27:37"><name pos:start="27:29" pos:end="27:37"><name pos:start="27:29" pos:end="27:34">bitmap</name><index pos:start="27:35" pos:end="27:37">[<expr pos:start="27:36" pos:end="27:36"><name pos:start="27:36" pos:end="27:36">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <do pos:start="29:13" pos:end="43:29">do <block pos:start="29:16" pos:end="43:13">{<block_content pos:start="31:17" pos:end="41:59">

                <expr_stmt pos:start="31:17" pos:end="31:32"><expr pos:start="31:17" pos:end="31:31"><name pos:start="31:17" pos:end="31:17">j</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:27"><name pos:start="31:21" pos:end="31:24">ffsl</name><argument_list pos:start="31:25" pos:end="31:27">(<argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><name pos:start="31:26" pos:end="31:26">c</name></expr></argument>)</argument_list></call> <operator pos:start="31:29" pos:end="31:29">-</operator> <literal type="number" pos:start="31:31" pos:end="31:31">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:33"><expr pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:17">c</name> <operator pos:start="33:19" pos:end="33:20">&amp;=</operator> <operator pos:start="33:22" pos:end="33:22">~</operator><operator pos:start="33:23" pos:end="33:23">(</operator><literal type="number" pos:start="33:24" pos:end="33:26">1ul</literal> <operator pos:start="33:28" pos:end="33:29">&lt;&lt;</operator> <name pos:start="33:31" pos:end="33:31">j</name><operator pos:start="33:32" pos:end="33:32">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:53"><expr pos:start="35:17" pos:end="35:52"><name pos:start="35:17" pos:end="35:27">page_number</name> <operator pos:start="35:29" pos:end="35:29">=</operator> <name pos:start="35:31" pos:end="35:31">i</name> <operator pos:start="35:33" pos:end="35:33">*</operator> <name pos:start="35:35" pos:end="35:48">HOST_LONG_BITS</name> <operator pos:start="35:50" pos:end="35:50">+</operator> <name pos:start="35:52" pos:end="35:52">j</name></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:55"><expr pos:start="37:17" pos:end="37:54"><name pos:start="37:17" pos:end="37:21">addr1</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:35">page_number</name> <operator pos:start="37:37" pos:end="37:37">*</operator> <name pos:start="37:39" pos:end="37:54">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:61"><expr pos:start="39:17" pos:end="39:60"><name pos:start="39:17" pos:end="39:20">addr</name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:52"><name pos:start="39:24" pos:end="39:30">section</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:52">offset_within_region</name></name> <operator pos:start="39:54" pos:end="39:54">+</operator> <name pos:start="39:56" pos:end="39:60">addr1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:59"><expr pos:start="41:17" pos:end="41:58"><call pos:start="41:17" pos:end="41:58"><name pos:start="41:17" pos:end="41:39">memory_region_set_dirty</name><argument_list pos:start="41:40" pos:end="41:58">(<argument pos:start="41:41" pos:end="41:51"><expr pos:start="41:41" pos:end="41:51"><name pos:start="41:41" pos:end="41:51"><name pos:start="41:41" pos:end="41:47">section</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:51">mr</name></name></expr></argument>, <argument pos:start="41:54" pos:end="41:57"><expr pos:start="41:54" pos:end="41:57"><name pos:start="41:54" pos:end="41:57">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block> while <condition pos:start="43:21" pos:end="43:28">(<expr pos:start="43:22" pos:end="43:27"><name pos:start="43:22" pos:end="43:22">c</name> <operator pos:start="43:24" pos:end="43:25">!=</operator> <literal type="number" pos:start="43:27" pos:end="43:27">0</literal></expr>)</condition>;</do>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
