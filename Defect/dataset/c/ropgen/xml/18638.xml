<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18638.c" pos:tabs="8"><function pos:start="1:1" pos:end="211:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">pcm_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:55">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:40"><decl pos:start="5:29" pos:end="5:40"><type pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:35">uint8_t</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:40">buf</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:54">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="211:1">{<block_content pos:start="9:5" pos:end="209:21">

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">PCMDecode</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:16">s</name> <init pos:start="9:18" pos:end="9:35">= <expr pos:start="9:20" pos:end="9:35"><name pos:start="9:20" pos:end="9:35"><name pos:start="9:20" pos:end="9:24">avctx</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:35">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">short</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:18">samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:16">src</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:11">samples</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:18">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:14"><expr pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:7">src</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:13">buf</name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:50"><if pos:start="25:5" pos:end="27:50">if<condition pos:start="25:7" pos:end="25:49">(<expr pos:start="25:8" pos:end="25:48"><name pos:start="25:8" pos:end="25:15">buf_size</name> <operator pos:start="25:17" pos:end="25:17">&gt;</operator> <name pos:start="25:19" pos:end="25:46">AVCODEC_MAX_AUDIO_FRAME_SIZE</name><operator pos:start="25:47" pos:end="25:47">/</operator><literal type="number" pos:start="25:48" pos:end="25:48">2</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:50"><block_content pos:start="27:9" pos:end="27:50">

        <expr_stmt pos:start="27:9" pos:end="27:50"><expr pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:16">buf_size</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:47">AVCODEC_MAX_AUDIO_FRAME_SIZE</name><operator pos:start="27:48" pos:end="27:48">/</operator><literal type="number" pos:start="27:49" pos:end="27:49">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="31:5" pos:end="205:5">switch<condition pos:start="31:11" pos:end="31:28">(<expr pos:start="31:12" pos:end="31:27"><name pos:start="31:12" pos:end="31:27"><name pos:start="31:12" pos:end="31:16">avctx</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">codec</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:27">id</name></name></expr>)</condition> <block pos:start="31:30" pos:end="205:5">{<block_content pos:start="33:5" pos:end="203:18">

    <case pos:start="33:5" pos:end="33:28">case <expr pos:start="33:10" pos:end="33:27"><name pos:start="33:10" pos:end="33:27">CODEC_ID_PCM_S32LE</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:55"><expr pos:start="35:9" pos:end="35:54"><call pos:start="35:9" pos:end="35:54"><name pos:start="35:9" pos:end="35:19">decode_to16</name><argument_list pos:start="35:20" pos:end="35:54">(<argument pos:start="35:21" pos:end="35:21"><expr pos:start="35:21" pos:end="35:21"><literal type="number" pos:start="35:21" pos:end="35:21">4</literal></expr></argument>, <argument pos:start="35:24" pos:end="35:24"><expr pos:start="35:24" pos:end="35:24"><literal type="number" pos:start="35:24" pos:end="35:24">1</literal></expr></argument>, <argument pos:start="35:27" pos:end="35:27"><expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">0</literal></expr></argument>, <argument pos:start="35:30" pos:end="35:33"><expr pos:start="35:30" pos:end="35:33"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:33">src</name></expr></argument>, <argument pos:start="35:36" pos:end="35:43"><expr pos:start="35:36" pos:end="35:43"><operator pos:start="35:36" pos:end="35:36">&amp;</operator><name pos:start="35:37" pos:end="35:43">samples</name></expr></argument>, <argument pos:start="35:46" pos:end="35:53"><expr pos:start="35:46" pos:end="35:53"><name pos:start="35:46" pos:end="35:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:28">case <expr pos:start="39:10" pos:end="39:27"><name pos:start="39:10" pos:end="39:27">CODEC_ID_PCM_S32BE</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:55"><expr pos:start="41:9" pos:end="41:54"><call pos:start="41:9" pos:end="41:54"><name pos:start="41:9" pos:end="41:19">decode_to16</name><argument_list pos:start="41:20" pos:end="41:54">(<argument pos:start="41:21" pos:end="41:21"><expr pos:start="41:21" pos:end="41:21"><literal type="number" pos:start="41:21" pos:end="41:21">4</literal></expr></argument>, <argument pos:start="41:24" pos:end="41:24"><expr pos:start="41:24" pos:end="41:24"><literal type="number" pos:start="41:24" pos:end="41:24">0</literal></expr></argument>, <argument pos:start="41:27" pos:end="41:27"><expr pos:start="41:27" pos:end="41:27"><literal type="number" pos:start="41:27" pos:end="41:27">0</literal></expr></argument>, <argument pos:start="41:30" pos:end="41:33"><expr pos:start="41:30" pos:end="41:33"><operator pos:start="41:30" pos:end="41:30">&amp;</operator><name pos:start="41:31" pos:end="41:33">src</name></expr></argument>, <argument pos:start="41:36" pos:end="41:43"><expr pos:start="41:36" pos:end="41:43"><operator pos:start="41:36" pos:end="41:36">&amp;</operator><name pos:start="41:37" pos:end="41:43">samples</name></expr></argument>, <argument pos:start="41:46" pos:end="41:53"><expr pos:start="41:46" pos:end="41:53"><name pos:start="41:46" pos:end="41:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:28">case <expr pos:start="45:10" pos:end="45:27"><name pos:start="45:10" pos:end="45:27">CODEC_ID_PCM_U32LE</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:55"><expr pos:start="47:9" pos:end="47:54"><call pos:start="47:9" pos:end="47:54"><name pos:start="47:9" pos:end="47:19">decode_to16</name><argument_list pos:start="47:20" pos:end="47:54">(<argument pos:start="47:21" pos:end="47:21"><expr pos:start="47:21" pos:end="47:21"><literal type="number" pos:start="47:21" pos:end="47:21">4</literal></expr></argument>, <argument pos:start="47:24" pos:end="47:24"><expr pos:start="47:24" pos:end="47:24"><literal type="number" pos:start="47:24" pos:end="47:24">1</literal></expr></argument>, <argument pos:start="47:27" pos:end="47:27"><expr pos:start="47:27" pos:end="47:27"><literal type="number" pos:start="47:27" pos:end="47:27">1</literal></expr></argument>, <argument pos:start="47:30" pos:end="47:33"><expr pos:start="47:30" pos:end="47:33"><operator pos:start="47:30" pos:end="47:30">&amp;</operator><name pos:start="47:31" pos:end="47:33">src</name></expr></argument>, <argument pos:start="47:36" pos:end="47:43"><expr pos:start="47:36" pos:end="47:43"><operator pos:start="47:36" pos:end="47:36">&amp;</operator><name pos:start="47:37" pos:end="47:43">samples</name></expr></argument>, <argument pos:start="47:46" pos:end="47:53"><expr pos:start="47:46" pos:end="47:53"><name pos:start="47:46" pos:end="47:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:28">case <expr pos:start="51:10" pos:end="51:27"><name pos:start="51:10" pos:end="51:27">CODEC_ID_PCM_U32BE</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:55"><expr pos:start="53:9" pos:end="53:54"><call pos:start="53:9" pos:end="53:54"><name pos:start="53:9" pos:end="53:19">decode_to16</name><argument_list pos:start="53:20" pos:end="53:54">(<argument pos:start="53:21" pos:end="53:21"><expr pos:start="53:21" pos:end="53:21"><literal type="number" pos:start="53:21" pos:end="53:21">4</literal></expr></argument>, <argument pos:start="53:24" pos:end="53:24"><expr pos:start="53:24" pos:end="53:24"><literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr></argument>, <argument pos:start="53:27" pos:end="53:27"><expr pos:start="53:27" pos:end="53:27"><literal type="number" pos:start="53:27" pos:end="53:27">1</literal></expr></argument>, <argument pos:start="53:30" pos:end="53:33"><expr pos:start="53:30" pos:end="53:33"><operator pos:start="53:30" pos:end="53:30">&amp;</operator><name pos:start="53:31" pos:end="53:33">src</name></expr></argument>, <argument pos:start="53:36" pos:end="53:43"><expr pos:start="53:36" pos:end="53:43"><operator pos:start="53:36" pos:end="53:36">&amp;</operator><name pos:start="53:37" pos:end="53:43">samples</name></expr></argument>, <argument pos:start="53:46" pos:end="53:53"><expr pos:start="53:46" pos:end="53:53"><name pos:start="53:46" pos:end="53:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:28">case <expr pos:start="57:10" pos:end="57:27"><name pos:start="57:10" pos:end="57:27">CODEC_ID_PCM_S24LE</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:55"><expr pos:start="59:9" pos:end="59:54"><call pos:start="59:9" pos:end="59:54"><name pos:start="59:9" pos:end="59:19">decode_to16</name><argument_list pos:start="59:20" pos:end="59:54">(<argument pos:start="59:21" pos:end="59:21"><expr pos:start="59:21" pos:end="59:21"><literal type="number" pos:start="59:21" pos:end="59:21">3</literal></expr></argument>, <argument pos:start="59:24" pos:end="59:24"><expr pos:start="59:24" pos:end="59:24"><literal type="number" pos:start="59:24" pos:end="59:24">1</literal></expr></argument>, <argument pos:start="59:27" pos:end="59:27"><expr pos:start="59:27" pos:end="59:27"><literal type="number" pos:start="59:27" pos:end="59:27">0</literal></expr></argument>, <argument pos:start="59:30" pos:end="59:33"><expr pos:start="59:30" pos:end="59:33"><operator pos:start="59:30" pos:end="59:30">&amp;</operator><name pos:start="59:31" pos:end="59:33">src</name></expr></argument>, <argument pos:start="59:36" pos:end="59:43"><expr pos:start="59:36" pos:end="59:43"><operator pos:start="59:36" pos:end="59:36">&amp;</operator><name pos:start="59:37" pos:end="59:43">samples</name></expr></argument>, <argument pos:start="59:46" pos:end="59:53"><expr pos:start="59:46" pos:end="59:53"><name pos:start="59:46" pos:end="59:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:28">case <expr pos:start="63:10" pos:end="63:27"><name pos:start="63:10" pos:end="63:27">CODEC_ID_PCM_S24BE</name></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:55"><expr pos:start="65:9" pos:end="65:54"><call pos:start="65:9" pos:end="65:54"><name pos:start="65:9" pos:end="65:19">decode_to16</name><argument_list pos:start="65:20" pos:end="65:54">(<argument pos:start="65:21" pos:end="65:21"><expr pos:start="65:21" pos:end="65:21"><literal type="number" pos:start="65:21" pos:end="65:21">3</literal></expr></argument>, <argument pos:start="65:24" pos:end="65:24"><expr pos:start="65:24" pos:end="65:24"><literal type="number" pos:start="65:24" pos:end="65:24">0</literal></expr></argument>, <argument pos:start="65:27" pos:end="65:27"><expr pos:start="65:27" pos:end="65:27"><literal type="number" pos:start="65:27" pos:end="65:27">0</literal></expr></argument>, <argument pos:start="65:30" pos:end="65:33"><expr pos:start="65:30" pos:end="65:33"><operator pos:start="65:30" pos:end="65:30">&amp;</operator><name pos:start="65:31" pos:end="65:33">src</name></expr></argument>, <argument pos:start="65:36" pos:end="65:43"><expr pos:start="65:36" pos:end="65:43"><operator pos:start="65:36" pos:end="65:36">&amp;</operator><name pos:start="65:37" pos:end="65:43">samples</name></expr></argument>, <argument pos:start="65:46" pos:end="65:53"><expr pos:start="65:46" pos:end="65:53"><name pos:start="65:46" pos:end="65:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:28">case <expr pos:start="69:10" pos:end="69:27"><name pos:start="69:10" pos:end="69:27">CODEC_ID_PCM_U24LE</name></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:55"><expr pos:start="71:9" pos:end="71:54"><call pos:start="71:9" pos:end="71:54"><name pos:start="71:9" pos:end="71:19">decode_to16</name><argument_list pos:start="71:20" pos:end="71:54">(<argument pos:start="71:21" pos:end="71:21"><expr pos:start="71:21" pos:end="71:21"><literal type="number" pos:start="71:21" pos:end="71:21">3</literal></expr></argument>, <argument pos:start="71:24" pos:end="71:24"><expr pos:start="71:24" pos:end="71:24"><literal type="number" pos:start="71:24" pos:end="71:24">1</literal></expr></argument>, <argument pos:start="71:27" pos:end="71:27"><expr pos:start="71:27" pos:end="71:27"><literal type="number" pos:start="71:27" pos:end="71:27">1</literal></expr></argument>, <argument pos:start="71:30" pos:end="71:33"><expr pos:start="71:30" pos:end="71:33"><operator pos:start="71:30" pos:end="71:30">&amp;</operator><name pos:start="71:31" pos:end="71:33">src</name></expr></argument>, <argument pos:start="71:36" pos:end="71:43"><expr pos:start="71:36" pos:end="71:43"><operator pos:start="71:36" pos:end="71:36">&amp;</operator><name pos:start="71:37" pos:end="71:43">samples</name></expr></argument>, <argument pos:start="71:46" pos:end="71:53"><expr pos:start="71:46" pos:end="71:53"><name pos:start="71:46" pos:end="71:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:28">case <expr pos:start="75:10" pos:end="75:27"><name pos:start="75:10" pos:end="75:27">CODEC_ID_PCM_U24BE</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:55"><expr pos:start="77:9" pos:end="77:54"><call pos:start="77:9" pos:end="77:54"><name pos:start="77:9" pos:end="77:19">decode_to16</name><argument_list pos:start="77:20" pos:end="77:54">(<argument pos:start="77:21" pos:end="77:21"><expr pos:start="77:21" pos:end="77:21"><literal type="number" pos:start="77:21" pos:end="77:21">3</literal></expr></argument>, <argument pos:start="77:24" pos:end="77:24"><expr pos:start="77:24" pos:end="77:24"><literal type="number" pos:start="77:24" pos:end="77:24">0</literal></expr></argument>, <argument pos:start="77:27" pos:end="77:27"><expr pos:start="77:27" pos:end="77:27"><literal type="number" pos:start="77:27" pos:end="77:27">1</literal></expr></argument>, <argument pos:start="77:30" pos:end="77:33"><expr pos:start="77:30" pos:end="77:33"><operator pos:start="77:30" pos:end="77:30">&amp;</operator><name pos:start="77:31" pos:end="77:33">src</name></expr></argument>, <argument pos:start="77:36" pos:end="77:43"><expr pos:start="77:36" pos:end="77:43"><operator pos:start="77:36" pos:end="77:36">&amp;</operator><name pos:start="77:37" pos:end="77:43">samples</name></expr></argument>, <argument pos:start="77:46" pos:end="77:53"><expr pos:start="77:46" pos:end="77:53"><name pos:start="77:46" pos:end="77:53">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:30">case <expr pos:start="81:10" pos:end="81:29"><name pos:start="81:10" pos:end="81:29">CODEC_ID_PCM_S24DAUD</name></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:25"><expr pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:9">n</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <name pos:start="83:13" pos:end="83:20">buf_size</name> <operator pos:start="83:22" pos:end="83:22">/</operator> <literal type="number" pos:start="83:24" pos:end="83:24">3</literal></expr>;</expr_stmt>

        <for pos:start="85:9" pos:end="97:9">for<control pos:start="85:12" pos:end="85:21">(<init pos:start="85:13" pos:end="85:13">;</init><condition pos:start="85:14" pos:end="85:17"><expr pos:start="85:14" pos:end="85:16"><name pos:start="85:14" pos:end="85:14">n</name><operator pos:start="85:15" pos:end="85:15">&gt;</operator><literal type="number" pos:start="85:16" pos:end="85:16">0</literal></expr>;</condition><incr pos:start="85:18" pos:end="85:20"><expr pos:start="85:18" pos:end="85:20"><name pos:start="85:18" pos:end="85:18">n</name><operator pos:start="85:19" pos:end="85:20">--</operator></expr></incr>)</control> <block pos:start="85:23" pos:end="97:9">{<block_content pos:start="87:11" pos:end="95:19">

          <decl_stmt pos:start="87:11" pos:end="87:59"><decl pos:start="87:11" pos:end="87:58"><type pos:start="87:11" pos:end="87:18"><name pos:start="87:11" pos:end="87:18">uint32_t</name></type> <name pos:start="87:20" pos:end="87:20">v</name> <init pos:start="87:22" pos:end="87:58">= <expr pos:start="87:24" pos:end="87:58"><name pos:start="87:24" pos:end="87:29"><name pos:start="87:24" pos:end="87:26">src</name><index pos:start="87:27" pos:end="87:29">[<expr pos:start="87:28" pos:end="87:28"><literal type="number" pos:start="87:28" pos:end="87:28">0</literal></expr>]</index></name> <operator pos:start="87:31" pos:end="87:32">&lt;&lt;</operator> <literal type="number" pos:start="87:34" pos:end="87:35">16</literal> <operator pos:start="87:37" pos:end="87:37">|</operator> <name pos:start="87:39" pos:end="87:44"><name pos:start="87:39" pos:end="87:41">src</name><index pos:start="87:42" pos:end="87:44">[<expr pos:start="87:43" pos:end="87:43"><literal type="number" pos:start="87:43" pos:end="87:43">1</literal></expr>]</index></name> <operator pos:start="87:46" pos:end="87:47">&lt;&lt;</operator> <literal type="number" pos:start="87:49" pos:end="87:49">8</literal> <operator pos:start="87:51" pos:end="87:51">|</operator> <name pos:start="87:53" pos:end="87:58"><name pos:start="87:53" pos:end="87:55">src</name><index pos:start="87:56" pos:end="87:58">[<expr pos:start="87:57" pos:end="87:57"><literal type="number" pos:start="87:57" pos:end="87:57">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

          <expr_stmt pos:start="89:11" pos:end="89:18"><expr pos:start="89:11" pos:end="89:17"><name pos:start="89:11" pos:end="89:11">v</name> <operator pos:start="89:13" pos:end="89:15">&gt;&gt;=</operator> <literal type="number" pos:start="89:17" pos:end="89:17">4</literal></expr>;</expr_stmt> <comment type="line" pos:start="89:20" pos:end="89:41">// sync flags are here</comment>

          <expr_stmt pos:start="91:11" pos:end="93:51"><expr pos:start="91:11" pos:end="93:50"><operator pos:start="91:11" pos:end="91:11">*</operator><name pos:start="91:12" pos:end="91:18">samples</name><operator pos:start="91:19" pos:end="91:20">++</operator> <operator pos:start="91:22" pos:end="91:22">=</operator> <name pos:start="91:24" pos:end="91:50"><name pos:start="91:24" pos:end="91:33">ff_reverse</name><index pos:start="91:34" pos:end="91:50">[<expr pos:start="91:35" pos:end="91:49"><operator pos:start="91:35" pos:end="91:35">(</operator><name pos:start="91:36" pos:end="91:36">v</name> <operator pos:start="91:38" pos:end="91:39">&gt;&gt;</operator> <literal type="number" pos:start="91:41" pos:end="91:41">8</literal><operator pos:start="91:42" pos:end="91:42">)</operator> <operator pos:start="91:44" pos:end="91:44">&amp;</operator> <literal type="number" pos:start="91:46" pos:end="91:49">0xff</literal></expr>]</index></name> <operator pos:start="91:52" pos:end="91:52">+</operator>

                       <operator pos:start="93:24" pos:end="93:24">(</operator><name pos:start="93:25" pos:end="93:44"><name pos:start="93:25" pos:end="93:34">ff_reverse</name><index pos:start="93:35" pos:end="93:44">[<expr pos:start="93:36" pos:end="93:43"><name pos:start="93:36" pos:end="93:36">v</name> <operator pos:start="93:38" pos:end="93:38">&amp;</operator> <literal type="number" pos:start="93:40" pos:end="93:43">0xff</literal></expr>]</index></name> <operator pos:start="93:46" pos:end="93:47">&lt;&lt;</operator> <literal type="number" pos:start="93:49" pos:end="93:49">8</literal><operator pos:start="93:50" pos:end="93:50">)</operator></expr>;</expr_stmt>

          <expr_stmt pos:start="95:11" pos:end="95:19"><expr pos:start="95:11" pos:end="95:18"><name pos:start="95:11" pos:end="95:13">src</name> <operator pos:start="95:15" pos:end="95:16">+=</operator> <literal type="number" pos:start="95:18" pos:end="95:18">3</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:28">case <expr pos:start="101:10" pos:end="101:27"><name pos:start="101:10" pos:end="101:27">CODEC_ID_PCM_S16LE</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:26"><expr pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:9">n</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <name pos:start="103:13" pos:end="103:20">buf_size</name> <operator pos:start="103:22" pos:end="103:23">&gt;&gt;</operator> <literal type="number" pos:start="103:25" pos:end="103:25">1</literal></expr>;</expr_stmt>

        <for pos:start="105:9" pos:end="111:9">for<control pos:start="105:12" pos:end="105:21">(<init pos:start="105:13" pos:end="105:13">;</init><condition pos:start="105:14" pos:end="105:17"><expr pos:start="105:14" pos:end="105:16"><name pos:start="105:14" pos:end="105:14">n</name><operator pos:start="105:15" pos:end="105:15">&gt;</operator><literal type="number" pos:start="105:16" pos:end="105:16">0</literal></expr>;</condition><incr pos:start="105:18" pos:end="105:20"><expr pos:start="105:18" pos:end="105:20"><name pos:start="105:18" pos:end="105:18">n</name><operator pos:start="105:19" pos:end="105:20">--</operator></expr></incr>)</control> <block pos:start="105:23" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:21">

            <expr_stmt pos:start="107:13" pos:end="107:48"><expr pos:start="107:13" pos:end="107:47"><operator pos:start="107:13" pos:end="107:13">*</operator><name pos:start="107:14" pos:end="107:20">samples</name><operator pos:start="107:21" pos:end="107:22">++</operator> <operator pos:start="107:24" pos:end="107:24">=</operator> <name pos:start="107:26" pos:end="107:31"><name pos:start="107:26" pos:end="107:28">src</name><index pos:start="107:29" pos:end="107:31">[<expr pos:start="107:30" pos:end="107:30"><literal type="number" pos:start="107:30" pos:end="107:30">0</literal></expr>]</index></name> <operator pos:start="107:33" pos:end="107:33">|</operator> <operator pos:start="107:35" pos:end="107:35">(</operator><name pos:start="107:36" pos:end="107:41"><name pos:start="107:36" pos:end="107:38">src</name><index pos:start="107:39" pos:end="107:41">[<expr pos:start="107:40" pos:end="107:40"><literal type="number" pos:start="107:40" pos:end="107:40">1</literal></expr>]</index></name> <operator pos:start="107:43" pos:end="107:44">&lt;&lt;</operator> <literal type="number" pos:start="107:46" pos:end="107:46">8</literal><operator pos:start="107:47" pos:end="107:47">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:21"><expr pos:start="109:13" pos:end="109:20"><name pos:start="109:13" pos:end="109:15">src</name> <operator pos:start="109:17" pos:end="109:18">+=</operator> <literal type="number" pos:start="109:20" pos:end="109:20">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:28">case <expr pos:start="115:10" pos:end="115:27"><name pos:start="115:10" pos:end="115:27">CODEC_ID_PCM_S16BE</name></expr>:</case>

        <expr_stmt pos:start="117:9" pos:end="117:26"><expr pos:start="117:9" pos:end="117:25"><name pos:start="117:9" pos:end="117:9">n</name> <operator pos:start="117:11" pos:end="117:11">=</operator> <name pos:start="117:13" pos:end="117:20">buf_size</name> <operator pos:start="117:22" pos:end="117:23">&gt;&gt;</operator> <literal type="number" pos:start="117:25" pos:end="117:25">1</literal></expr>;</expr_stmt>

        <for pos:start="119:9" pos:end="125:9">for<control pos:start="119:12" pos:end="119:21">(<init pos:start="119:13" pos:end="119:13">;</init><condition pos:start="119:14" pos:end="119:17"><expr pos:start="119:14" pos:end="119:16"><name pos:start="119:14" pos:end="119:14">n</name><operator pos:start="119:15" pos:end="119:15">&gt;</operator><literal type="number" pos:start="119:16" pos:end="119:16">0</literal></expr>;</condition><incr pos:start="119:18" pos:end="119:20"><expr pos:start="119:18" pos:end="119:20"><name pos:start="119:18" pos:end="119:18">n</name><operator pos:start="119:19" pos:end="119:20">--</operator></expr></incr>)</control> <block pos:start="119:23" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:21">

            <expr_stmt pos:start="121:13" pos:end="121:48"><expr pos:start="121:13" pos:end="121:47"><operator pos:start="121:13" pos:end="121:13">*</operator><name pos:start="121:14" pos:end="121:20">samples</name><operator pos:start="121:21" pos:end="121:22">++</operator> <operator pos:start="121:24" pos:end="121:24">=</operator> <operator pos:start="121:26" pos:end="121:26">(</operator><name pos:start="121:27" pos:end="121:32"><name pos:start="121:27" pos:end="121:29">src</name><index pos:start="121:30" pos:end="121:32">[<expr pos:start="121:31" pos:end="121:31"><literal type="number" pos:start="121:31" pos:end="121:31">0</literal></expr>]</index></name> <operator pos:start="121:34" pos:end="121:35">&lt;&lt;</operator> <literal type="number" pos:start="121:37" pos:end="121:37">8</literal><operator pos:start="121:38" pos:end="121:38">)</operator> <operator pos:start="121:40" pos:end="121:40">|</operator> <name pos:start="121:42" pos:end="121:47"><name pos:start="121:42" pos:end="121:44">src</name><index pos:start="121:45" pos:end="121:47">[<expr pos:start="121:46" pos:end="121:46"><literal type="number" pos:start="121:46" pos:end="121:46">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:21"><expr pos:start="123:13" pos:end="123:20"><name pos:start="123:13" pos:end="123:15">src</name> <operator pos:start="123:17" pos:end="123:18">+=</operator> <literal type="number" pos:start="123:20" pos:end="123:20">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    <case pos:start="129:5" pos:end="129:28">case <expr pos:start="129:10" pos:end="129:27"><name pos:start="129:10" pos:end="129:27">CODEC_ID_PCM_U16LE</name></expr>:</case>

        <expr_stmt pos:start="131:9" pos:end="131:26"><expr pos:start="131:9" pos:end="131:25"><name pos:start="131:9" pos:end="131:9">n</name> <operator pos:start="131:11" pos:end="131:11">=</operator> <name pos:start="131:13" pos:end="131:20">buf_size</name> <operator pos:start="131:22" pos:end="131:23">&gt;&gt;</operator> <literal type="number" pos:start="131:25" pos:end="131:25">1</literal></expr>;</expr_stmt>

        <for pos:start="133:9" pos:end="139:9">for<control pos:start="133:12" pos:end="133:21">(<init pos:start="133:13" pos:end="133:13">;</init><condition pos:start="133:14" pos:end="133:17"><expr pos:start="133:14" pos:end="133:16"><name pos:start="133:14" pos:end="133:14">n</name><operator pos:start="133:15" pos:end="133:15">&gt;</operator><literal type="number" pos:start="133:16" pos:end="133:16">0</literal></expr>;</condition><incr pos:start="133:18" pos:end="133:20"><expr pos:start="133:18" pos:end="133:20"><name pos:start="133:18" pos:end="133:18">n</name><operator pos:start="133:19" pos:end="133:20">--</operator></expr></incr>)</control> <block pos:start="133:23" pos:end="139:9">{<block_content pos:start="135:13" pos:end="137:21">

            <expr_stmt pos:start="135:13" pos:end="135:59"><expr pos:start="135:13" pos:end="135:58"><operator pos:start="135:13" pos:end="135:13">*</operator><name pos:start="135:14" pos:end="135:20">samples</name><operator pos:start="135:21" pos:end="135:22">++</operator> <operator pos:start="135:24" pos:end="135:24">=</operator> <operator pos:start="135:26" pos:end="135:26">(</operator><name pos:start="135:27" pos:end="135:32"><name pos:start="135:27" pos:end="135:29">src</name><index pos:start="135:30" pos:end="135:32">[<expr pos:start="135:31" pos:end="135:31"><literal type="number" pos:start="135:31" pos:end="135:31">0</literal></expr>]</index></name> <operator pos:start="135:34" pos:end="135:34">|</operator> <operator pos:start="135:36" pos:end="135:36">(</operator><name pos:start="135:37" pos:end="135:42"><name pos:start="135:37" pos:end="135:39">src</name><index pos:start="135:40" pos:end="135:42">[<expr pos:start="135:41" pos:end="135:41"><literal type="number" pos:start="135:41" pos:end="135:41">1</literal></expr>]</index></name> <operator pos:start="135:44" pos:end="135:45">&lt;&lt;</operator> <literal type="number" pos:start="135:47" pos:end="135:47">8</literal><operator pos:start="135:48" pos:end="135:48">)</operator><operator pos:start="135:49" pos:end="135:49">)</operator> <operator pos:start="135:51" pos:end="135:51">-</operator> <literal type="number" pos:start="135:53" pos:end="135:58">0x8000</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:21"><expr pos:start="137:13" pos:end="137:20"><name pos:start="137:13" pos:end="137:15">src</name> <operator pos:start="137:17" pos:end="137:18">+=</operator> <literal type="number" pos:start="137:20" pos:end="137:20">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="141:9" pos:end="141:14">break;</break>

    <case pos:start="143:5" pos:end="143:28">case <expr pos:start="143:10" pos:end="143:27"><name pos:start="143:10" pos:end="143:27">CODEC_ID_PCM_U16BE</name></expr>:</case>

        <expr_stmt pos:start="145:9" pos:end="145:26"><expr pos:start="145:9" pos:end="145:25"><name pos:start="145:9" pos:end="145:9">n</name> <operator pos:start="145:11" pos:end="145:11">=</operator> <name pos:start="145:13" pos:end="145:20">buf_size</name> <operator pos:start="145:22" pos:end="145:23">&gt;&gt;</operator> <literal type="number" pos:start="145:25" pos:end="145:25">1</literal></expr>;</expr_stmt>

        <for pos:start="147:9" pos:end="153:9">for<control pos:start="147:12" pos:end="147:21">(<init pos:start="147:13" pos:end="147:13">;</init><condition pos:start="147:14" pos:end="147:17"><expr pos:start="147:14" pos:end="147:16"><name pos:start="147:14" pos:end="147:14">n</name><operator pos:start="147:15" pos:end="147:15">&gt;</operator><literal type="number" pos:start="147:16" pos:end="147:16">0</literal></expr>;</condition><incr pos:start="147:18" pos:end="147:20"><expr pos:start="147:18" pos:end="147:20"><name pos:start="147:18" pos:end="147:18">n</name><operator pos:start="147:19" pos:end="147:20">--</operator></expr></incr>)</control> <block pos:start="147:23" pos:end="153:9">{<block_content pos:start="149:13" pos:end="151:21">

            <expr_stmt pos:start="149:13" pos:end="149:59"><expr pos:start="149:13" pos:end="149:58"><operator pos:start="149:13" pos:end="149:13">*</operator><name pos:start="149:14" pos:end="149:20">samples</name><operator pos:start="149:21" pos:end="149:22">++</operator> <operator pos:start="149:24" pos:end="149:24">=</operator> <operator pos:start="149:26" pos:end="149:26">(</operator><operator pos:start="149:27" pos:end="149:27">(</operator><name pos:start="149:28" pos:end="149:33"><name pos:start="149:28" pos:end="149:30">src</name><index pos:start="149:31" pos:end="149:33">[<expr pos:start="149:32" pos:end="149:32"><literal type="number" pos:start="149:32" pos:end="149:32">0</literal></expr>]</index></name> <operator pos:start="149:35" pos:end="149:36">&lt;&lt;</operator> <literal type="number" pos:start="149:38" pos:end="149:38">8</literal><operator pos:start="149:39" pos:end="149:39">)</operator> <operator pos:start="149:41" pos:end="149:41">|</operator> <name pos:start="149:43" pos:end="149:48"><name pos:start="149:43" pos:end="149:45">src</name><index pos:start="149:46" pos:end="149:48">[<expr pos:start="149:47" pos:end="149:47"><literal type="number" pos:start="149:47" pos:end="149:47">1</literal></expr>]</index></name><operator pos:start="149:49" pos:end="149:49">)</operator> <operator pos:start="149:51" pos:end="149:51">-</operator> <literal type="number" pos:start="149:53" pos:end="149:58">0x8000</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:21"><expr pos:start="151:13" pos:end="151:20"><name pos:start="151:13" pos:end="151:15">src</name> <operator pos:start="151:17" pos:end="151:18">+=</operator> <literal type="number" pos:start="151:20" pos:end="151:20">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="155:9" pos:end="155:14">break;</break>

    <case pos:start="157:5" pos:end="157:25">case <expr pos:start="157:10" pos:end="157:24"><name pos:start="157:10" pos:end="157:24">CODEC_ID_PCM_S8</name></expr>:</case>

        <expr_stmt pos:start="159:9" pos:end="159:21"><expr pos:start="159:9" pos:end="159:20"><name pos:start="159:9" pos:end="159:9">n</name> <operator pos:start="159:11" pos:end="159:11">=</operator> <name pos:start="159:13" pos:end="159:20">buf_size</name></expr>;</expr_stmt>

        <for pos:start="161:9" pos:end="167:9">for<control pos:start="161:12" pos:end="161:21">(<init pos:start="161:13" pos:end="161:13">;</init><condition pos:start="161:14" pos:end="161:17"><expr pos:start="161:14" pos:end="161:16"><name pos:start="161:14" pos:end="161:14">n</name><operator pos:start="161:15" pos:end="161:15">&gt;</operator><literal type="number" pos:start="161:16" pos:end="161:16">0</literal></expr>;</condition><incr pos:start="161:18" pos:end="161:20"><expr pos:start="161:18" pos:end="161:20"><name pos:start="161:18" pos:end="161:18">n</name><operator pos:start="161:19" pos:end="161:20">--</operator></expr></incr>)</control> <block pos:start="161:23" pos:end="167:9">{<block_content pos:start="163:13" pos:end="165:18">

            <expr_stmt pos:start="163:13" pos:end="163:37"><expr pos:start="163:13" pos:end="163:36"><operator pos:start="163:13" pos:end="163:13">*</operator><name pos:start="163:14" pos:end="163:20">samples</name><operator pos:start="163:21" pos:end="163:22">++</operator> <operator pos:start="163:24" pos:end="163:24">=</operator> <name pos:start="163:26" pos:end="163:31"><name pos:start="163:26" pos:end="163:28">src</name><index pos:start="163:29" pos:end="163:31">[<expr pos:start="163:30" pos:end="163:30"><literal type="number" pos:start="163:30" pos:end="163:30">0</literal></expr>]</index></name> <operator pos:start="163:33" pos:end="163:34">&lt;&lt;</operator> <literal type="number" pos:start="163:36" pos:end="163:36">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:18"><expr pos:start="165:13" pos:end="165:17"><name pos:start="165:13" pos:end="165:15">src</name><operator pos:start="165:16" pos:end="165:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="169:9" pos:end="169:14">break;</break>

    <case pos:start="171:5" pos:end="171:25">case <expr pos:start="171:10" pos:end="171:24"><name pos:start="171:10" pos:end="171:24">CODEC_ID_PCM_U8</name></expr>:</case>

        <expr_stmt pos:start="173:9" pos:end="173:21"><expr pos:start="173:9" pos:end="173:20"><name pos:start="173:9" pos:end="173:9">n</name> <operator pos:start="173:11" pos:end="173:11">=</operator> <name pos:start="173:13" pos:end="173:20">buf_size</name></expr>;</expr_stmt>

        <for pos:start="175:9" pos:end="181:9">for<control pos:start="175:12" pos:end="175:21">(<init pos:start="175:13" pos:end="175:13">;</init><condition pos:start="175:14" pos:end="175:17"><expr pos:start="175:14" pos:end="175:16"><name pos:start="175:14" pos:end="175:14">n</name><operator pos:start="175:15" pos:end="175:15">&gt;</operator><literal type="number" pos:start="175:16" pos:end="175:16">0</literal></expr>;</condition><incr pos:start="175:18" pos:end="175:20"><expr pos:start="175:18" pos:end="175:20"><name pos:start="175:18" pos:end="175:18">n</name><operator pos:start="175:19" pos:end="175:20">--</operator></expr></incr>)</control> <block pos:start="175:23" pos:end="181:9">{<block_content pos:start="177:13" pos:end="179:18">

            <expr_stmt pos:start="177:13" pos:end="177:50"><expr pos:start="177:13" pos:end="177:49"><operator pos:start="177:13" pos:end="177:13">*</operator><name pos:start="177:14" pos:end="177:20">samples</name><operator pos:start="177:21" pos:end="177:22">++</operator> <operator pos:start="177:24" pos:end="177:24">=</operator> <operator pos:start="177:26" pos:end="177:26">(</operator><operator pos:start="177:27" pos:end="177:27">(</operator><name pos:start="177:28" pos:end="177:30">int</name><operator pos:start="177:31" pos:end="177:31">)</operator><name pos:start="177:32" pos:end="177:37"><name pos:start="177:32" pos:end="177:34">src</name><index pos:start="177:35" pos:end="177:37">[<expr pos:start="177:36" pos:end="177:36"><literal type="number" pos:start="177:36" pos:end="177:36">0</literal></expr>]</index></name> <operator pos:start="177:39" pos:end="177:39">-</operator> <literal type="number" pos:start="177:41" pos:end="177:43">128</literal><operator pos:start="177:44" pos:end="177:44">)</operator> <operator pos:start="177:46" pos:end="177:47">&lt;&lt;</operator> <literal type="number" pos:start="177:49" pos:end="177:49">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:18"><expr pos:start="179:13" pos:end="179:17"><name pos:start="179:13" pos:end="179:15">src</name><operator pos:start="179:16" pos:end="179:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="183:9" pos:end="183:14">break;</break>

    <case pos:start="185:5" pos:end="185:27">case <expr pos:start="185:10" pos:end="185:26"><name pos:start="185:10" pos:end="185:26">CODEC_ID_PCM_ALAW</name></expr>:</case>

    <case pos:start="187:5" pos:end="187:28">case <expr pos:start="187:10" pos:end="187:27"><name pos:start="187:10" pos:end="187:27">CODEC_ID_PCM_MULAW</name></expr>:</case>

        <expr_stmt pos:start="189:9" pos:end="189:21"><expr pos:start="189:9" pos:end="189:20"><name pos:start="189:9" pos:end="189:9">n</name> <operator pos:start="189:11" pos:end="189:11">=</operator> <name pos:start="189:13" pos:end="189:20">buf_size</name></expr>;</expr_stmt>

        <for pos:start="191:9" pos:end="197:9">for<control pos:start="191:12" pos:end="191:21">(<init pos:start="191:13" pos:end="191:13">;</init><condition pos:start="191:14" pos:end="191:17"><expr pos:start="191:14" pos:end="191:16"><name pos:start="191:14" pos:end="191:14">n</name><operator pos:start="191:15" pos:end="191:15">&gt;</operator><literal type="number" pos:start="191:16" pos:end="191:16">0</literal></expr>;</condition><incr pos:start="191:18" pos:end="191:20"><expr pos:start="191:18" pos:end="191:20"><name pos:start="191:18" pos:end="191:18">n</name><operator pos:start="191:19" pos:end="191:20">--</operator></expr></incr>)</control> <block pos:start="191:23" pos:end="197:9">{<block_content pos:start="193:13" pos:end="195:18">

            <expr_stmt pos:start="193:13" pos:end="193:42"><expr pos:start="193:13" pos:end="193:41"><operator pos:start="193:13" pos:end="193:13">*</operator><name pos:start="193:14" pos:end="193:20">samples</name><operator pos:start="193:21" pos:end="193:22">++</operator> <operator pos:start="193:24" pos:end="193:24">=</operator> <name pos:start="193:26" pos:end="193:41"><name pos:start="193:26" pos:end="193:26">s</name><operator pos:start="193:27" pos:end="193:28">-&gt;</operator><name pos:start="193:29" pos:end="193:33">table</name><index pos:start="193:34" pos:end="193:41">[<expr pos:start="193:35" pos:end="193:40"><name pos:start="193:35" pos:end="193:40"><name pos:start="193:35" pos:end="193:37">src</name><index pos:start="193:38" pos:end="193:40">[<expr pos:start="193:39" pos:end="193:39"><literal type="number" pos:start="193:39" pos:end="193:39">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:18"><expr pos:start="195:13" pos:end="195:17"><name pos:start="195:13" pos:end="195:15">src</name><operator pos:start="195:16" pos:end="195:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="199:9" pos:end="199:14">break;</break>

    <default pos:start="201:5" pos:end="201:12">default:</default>

        <return pos:start="203:9" pos:end="203:18">return <expr pos:start="203:16" pos:end="203:17"><operator pos:start="203:16" pos:end="203:16">-</operator><literal type="number" pos:start="203:17" pos:end="203:17">1</literal></expr>;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="207:5" pos:end="207:54"><expr pos:start="207:5" pos:end="207:53"><operator pos:start="207:5" pos:end="207:5">*</operator><name pos:start="207:6" pos:end="207:14">data_size</name> <operator pos:start="207:16" pos:end="207:16">=</operator> <operator pos:start="207:18" pos:end="207:18">(</operator><name pos:start="207:19" pos:end="207:25">uint8_t</name> <operator pos:start="207:27" pos:end="207:27">*</operator><operator pos:start="207:28" pos:end="207:28">)</operator><name pos:start="207:29" pos:end="207:35">samples</name> <operator pos:start="207:37" pos:end="207:37">-</operator> <operator pos:start="207:39" pos:end="207:39">(</operator><name pos:start="207:40" pos:end="207:46">uint8_t</name> <operator pos:start="207:48" pos:end="207:48">*</operator><operator pos:start="207:49" pos:end="207:49">)</operator><name pos:start="207:50" pos:end="207:53">data</name></expr>;</expr_stmt>

    <return pos:start="209:5" pos:end="209:21">return <expr pos:start="209:12" pos:end="209:20"><name pos:start="209:12" pos:end="209:14">src</name> <operator pos:start="209:16" pos:end="209:16">-</operator> <name pos:start="209:18" pos:end="209:20">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
