<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8721.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">apng_read_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="193:1">{<block_content pos:start="5:5" pos:end="191:32">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">APNGDemuxContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">ctx</name> <init pos:start="5:27" pos:end="5:40">= <expr pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:16">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">AVIOContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">pb</name> <init pos:start="11:21" pos:end="11:27">= <expr pos:start="11:23" pos:end="11:27"><name pos:start="11:23" pos:end="11:27"><name pos:start="11:23" pos:end="11:23">s</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:16">len</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:19" pos:end="13:21">tag</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="35:7">/*

     * fcTL chunk length, in bytes:

     *  4 (length)

     *  4 (tag)

     * 26 (actual chunk)

     *  4 (crc) bytes

     * and needed next:

     *  4 (length)

     *  4 (tag (must be fdAT or IDAT))

     */</comment>

    <comment type="block" pos:start="37:5" pos:end="37:71">/* if num_play is not 1, then the seekback is already guaranteed */</comment>

    <if_stmt pos:start="39:5" pos:end="41:19"><if pos:start="39:5" pos:end="41:19">if <condition pos:start="39:8" pos:end="39:71">(<expr pos:start="39:9" pos:end="39:70"><name pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:11">ctx</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:21">num_play</name></name> <operator pos:start="39:23" pos:end="39:24">==</operator> <literal type="number" pos:start="39:26" pos:end="39:26">1</literal> <operator pos:start="39:28" pos:end="39:29">&amp;&amp;</operator> <operator pos:start="39:31" pos:end="39:31">(</operator><name pos:start="39:32" pos:end="39:34">ret</name> <operator pos:start="39:36" pos:end="39:36">=</operator> <call pos:start="39:38" pos:end="39:65"><name pos:start="39:38" pos:end="39:57">ffio_ensure_seekback</name><argument_list pos:start="39:58" pos:end="39:65">(<argument pos:start="39:59" pos:end="39:60"><expr pos:start="39:59" pos:end="39:60"><name pos:start="39:59" pos:end="39:60">pb</name></expr></argument>, <argument pos:start="39:63" pos:end="39:64"><expr pos:start="39:63" pos:end="39:64"><literal type="number" pos:start="39:63" pos:end="39:64">46</literal></expr></argument>)</argument_list></call><operator pos:start="39:66" pos:end="39:66">)</operator> <operator pos:start="39:68" pos:end="39:68">&lt;</operator> <literal type="number" pos:start="39:70" pos:end="39:70">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:19"><block_content pos:start="41:9" pos:end="41:19">

        <return pos:start="41:9" pos:end="41:19">return <expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:24"><expr pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:7">len</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:23"><name pos:start="45:11" pos:end="45:19">avio_rb32</name><argument_list pos:start="45:20" pos:end="45:23">(<argument pos:start="45:21" pos:end="45:22"><expr pos:start="45:21" pos:end="45:22"><name pos:start="45:21" pos:end="45:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:24"><expr pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:7">tag</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:23"><name pos:start="47:11" pos:end="47:19">avio_rl32</name><argument_list pos:start="47:20" pos:end="47:23">(<argument pos:start="47:21" pos:end="47:22"><expr pos:start="47:21" pos:end="47:22"><name pos:start="47:21" pos:end="47:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="49:5" pos:end="185:5">switch <condition pos:start="49:12" pos:end="49:16">(<expr pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">tag</name></expr>)</condition> <block pos:start="49:18" pos:end="185:5">{<block_content pos:start="51:5" pos:end="183:9">

    <case pos:start="51:5" pos:end="51:35">case <expr pos:start="51:10" pos:end="51:34"><call pos:start="51:10" pos:end="51:34"><name pos:start="51:10" pos:end="51:14">MKTAG</name><argument_list pos:start="51:15" pos:end="51:34">(<argument pos:start="51:16" pos:end="51:18"><expr pos:start="51:16" pos:end="51:18"><literal type="char" pos:start="51:16" pos:end="51:18">'f'</literal></expr></argument>, <argument pos:start="51:21" pos:end="51:23"><expr pos:start="51:21" pos:end="51:23"><literal type="char" pos:start="51:21" pos:end="51:23">'c'</literal></expr></argument>, <argument pos:start="51:26" pos:end="51:28"><expr pos:start="51:26" pos:end="51:28"><literal type="char" pos:start="51:26" pos:end="51:28">'T'</literal></expr></argument>, <argument pos:start="51:31" pos:end="51:33"><expr pos:start="51:31" pos:end="51:33"><literal type="char" pos:start="51:31" pos:end="51:33">'L'</literal></expr></argument>)</argument_list></call></expr>:</case>

        <if_stmt pos:start="53:9" pos:end="55:39"><if pos:start="53:9" pos:end="55:39">if <condition pos:start="53:12" pos:end="53:22">(<expr pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:15">len</name> <operator pos:start="53:17" pos:end="53:18">!=</operator> <literal type="number" pos:start="53:20" pos:end="53:21">26</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:39"><block_content pos:start="55:13" pos:end="55:39">

            <return pos:start="55:13" pos:end="55:39">return <expr pos:start="55:20" pos:end="55:38"><name pos:start="55:20" pos:end="55:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="59:9" pos:end="61:23"><if pos:start="59:9" pos:end="61:23">if <condition pos:start="59:12" pos:end="59:55">(<expr pos:start="59:13" pos:end="59:54"><operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:16">ret</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <call pos:start="59:20" pos:end="59:49"><name pos:start="59:20" pos:end="59:36">decode_fctl_chunk</name><argument_list pos:start="59:37" pos:end="59:49">(<argument pos:start="59:38" pos:end="59:38"><expr pos:start="59:38" pos:end="59:38"><name pos:start="59:38" pos:end="59:38">s</name></expr></argument>, <argument pos:start="59:41" pos:end="59:43"><expr pos:start="59:41" pos:end="59:43"><name pos:start="59:41" pos:end="59:43">ctx</name></expr></argument>, <argument pos:start="59:46" pos:end="59:48"><expr pos:start="59:46" pos:end="59:48"><name pos:start="59:46" pos:end="59:48">pkt</name></expr></argument>)</argument_list></call><operator pos:start="59:50" pos:end="59:50">)</operator> <operator pos:start="59:52" pos:end="59:52">&lt;</operator> <literal type="number" pos:start="59:54" pos:end="59:54">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:23"><block_content pos:start="61:13" pos:end="61:23">

            <return pos:start="61:13" pos:end="61:23">return <expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="65:9" pos:end="65:44">/* fcTL must precede fdAT or IDAT */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:28"><expr pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:11">len</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:27"><name pos:start="67:15" pos:end="67:23">avio_rb32</name><argument_list pos:start="67:24" pos:end="67:27">(<argument pos:start="67:25" pos:end="67:26"><expr pos:start="67:25" pos:end="67:26"><name pos:start="67:25" pos:end="67:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:28"><expr pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:11">tag</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:27"><name pos:start="69:15" pos:end="69:23">avio_rl32</name><argument_list pos:start="69:24" pos:end="69:27">(<argument pos:start="69:25" pos:end="69:26"><expr pos:start="69:25" pos:end="69:26"><name pos:start="69:25" pos:end="69:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="77:39"><if pos:start="71:9" pos:end="77:39">if <condition pos:start="71:12" pos:end="75:45">(<expr pos:start="71:13" pos:end="75:44"><name pos:start="71:13" pos:end="71:15">len</name> <operator pos:start="71:17" pos:end="71:17">&gt;</operator> <literal type="number" pos:start="71:19" pos:end="71:28">0x7fffffff</literal> <operator pos:start="71:30" pos:end="71:31">||</operator>

            <name pos:start="73:13" pos:end="73:15">tag</name> <operator pos:start="73:17" pos:end="73:18">!=</operator> <call pos:start="73:20" pos:end="73:44"><name pos:start="73:20" pos:end="73:24">MKTAG</name><argument_list pos:start="73:25" pos:end="73:44">(<argument pos:start="73:26" pos:end="73:28"><expr pos:start="73:26" pos:end="73:28"><literal type="char" pos:start="73:26" pos:end="73:28">'f'</literal></expr></argument>, <argument pos:start="73:31" pos:end="73:33"><expr pos:start="73:31" pos:end="73:33"><literal type="char" pos:start="73:31" pos:end="73:33">'d'</literal></expr></argument>, <argument pos:start="73:36" pos:end="73:38"><expr pos:start="73:36" pos:end="73:38"><literal type="char" pos:start="73:36" pos:end="73:38">'A'</literal></expr></argument>, <argument pos:start="73:41" pos:end="73:43"><expr pos:start="73:41" pos:end="73:43"><literal type="char" pos:start="73:41" pos:end="73:43">'T'</literal></expr></argument>)</argument_list></call> <operator pos:start="73:46" pos:end="73:47">&amp;&amp;</operator>

            <name pos:start="75:13" pos:end="75:15">tag</name> <operator pos:start="75:17" pos:end="75:18">!=</operator> <call pos:start="75:20" pos:end="75:44"><name pos:start="75:20" pos:end="75:24">MKTAG</name><argument_list pos:start="75:25" pos:end="75:44">(<argument pos:start="75:26" pos:end="75:28"><expr pos:start="75:26" pos:end="75:28"><literal type="char" pos:start="75:26" pos:end="75:28">'I'</literal></expr></argument>, <argument pos:start="75:31" pos:end="75:33"><expr pos:start="75:31" pos:end="75:33"><literal type="char" pos:start="75:31" pos:end="75:33">'D'</literal></expr></argument>, <argument pos:start="75:36" pos:end="75:38"><expr pos:start="75:36" pos:end="75:38"><literal type="char" pos:start="75:36" pos:end="75:38">'A'</literal></expr></argument>, <argument pos:start="75:41" pos:end="75:43"><expr pos:start="75:41" pos:end="75:43"><literal type="char" pos:start="75:41" pos:end="75:43">'T'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:39"><block_content pos:start="77:13" pos:end="77:39">

            <return pos:start="77:13" pos:end="77:39">return <expr pos:start="77:20" pos:end="77:38"><name pos:start="77:20" pos:end="77:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:68"><expr pos:start="81:9" pos:end="81:57"><name pos:start="81:9" pos:end="81:12">size</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <literal type="number" pos:start="81:16" pos:end="81:30">38</literal> <comment type="block" pos:start="81:19" pos:end="81:28">/* fcTL */</comment> <operator pos:start="81:30" pos:end="81:30">+</operator> <literal type="number" pos:start="81:32" pos:end="81:49">8</literal> <comment type="block" pos:start="81:34" pos:end="81:47">/* len, tag */</comment> <operator pos:start="81:49" pos:end="81:49">+</operator> <name pos:start="81:51" pos:end="81:53">len</name> <operator pos:start="81:55" pos:end="81:55">+</operator> <literal type="number" pos:start="81:57" pos:end="81:57">4</literal></expr> <comment type="block" pos:start="81:59" pos:end="81:67">/* crc */</comment>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:35"><if pos:start="83:9" pos:end="85:35">if <condition pos:start="83:12" pos:end="83:27">(<expr pos:start="83:13" pos:end="83:26"><name pos:start="83:13" pos:end="83:16">size</name> <operator pos:start="83:18" pos:end="83:18">&gt;</operator> <name pos:start="83:20" pos:end="83:26">INT_MAX</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:35"><block_content pos:start="85:13" pos:end="85:35">

            <return pos:start="85:13" pos:end="85:35">return <expr pos:start="85:20" pos:end="85:34"><call pos:start="85:20" pos:end="85:34"><name pos:start="85:20" pos:end="85:26">AVERROR</name><argument_list pos:start="85:27" pos:end="85:34">(<argument pos:start="85:28" pos:end="85:33"><expr pos:start="85:28" pos:end="85:33"><name pos:start="85:28" pos:end="85:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="89:9" pos:end="93:23"><if pos:start="89:9" pos:end="93:23">if <condition pos:start="89:12" pos:end="91:56">(<expr pos:start="89:13" pos:end="91:55"><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:16">ret</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <call pos:start="89:20" pos:end="89:47"><name pos:start="89:20" pos:end="89:28">avio_seek</name><argument_list pos:start="89:29" pos:end="89:47">(<argument pos:start="89:30" pos:end="89:31"><expr pos:start="89:30" pos:end="89:31"><name pos:start="89:30" pos:end="89:31">pb</name></expr></argument>, <argument pos:start="89:34" pos:end="89:36"><expr pos:start="89:34" pos:end="89:36"><operator pos:start="89:34" pos:end="89:34">-</operator><literal type="number" pos:start="89:35" pos:end="89:36">46</literal></expr></argument>, <argument pos:start="89:39" pos:end="89:46"><expr pos:start="89:39" pos:end="89:46"><name pos:start="89:39" pos:end="89:46">SEEK_CUR</name></expr></argument>)</argument_list></call><operator pos:start="89:48" pos:end="89:48">)</operator> <operator pos:start="89:50" pos:end="89:50">&lt;</operator> <literal type="number" pos:start="89:52" pos:end="89:52">0</literal> <operator pos:start="89:54" pos:end="89:55">||</operator>

            <operator pos:start="91:13" pos:end="91:13">(</operator><name pos:start="91:14" pos:end="91:16">ret</name> <operator pos:start="91:18" pos:end="91:18">=</operator> <call pos:start="91:20" pos:end="91:50"><name pos:start="91:20" pos:end="91:35">av_append_packet</name><argument_list pos:start="91:36" pos:end="91:50">(<argument pos:start="91:37" pos:end="91:38"><expr pos:start="91:37" pos:end="91:38"><name pos:start="91:37" pos:end="91:38">pb</name></expr></argument>, <argument pos:start="91:41" pos:end="91:43"><expr pos:start="91:41" pos:end="91:43"><name pos:start="91:41" pos:end="91:43">pkt</name></expr></argument>, <argument pos:start="91:46" pos:end="91:49"><expr pos:start="91:46" pos:end="91:49"><name pos:start="91:46" pos:end="91:49">size</name></expr></argument>)</argument_list></call><operator pos:start="91:51" pos:end="91:51">)</operator> <operator pos:start="91:53" pos:end="91:53">&lt;</operator> <literal type="number" pos:start="91:55" pos:end="91:55">0</literal></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:23"><block_content pos:start="93:13" pos:end="93:23">

            <return pos:start="93:13" pos:end="93:23">return <expr pos:start="93:20" pos:end="93:22"><name pos:start="93:20" pos:end="93:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="97:9" pos:end="99:23"><if pos:start="97:9" pos:end="99:23">if <condition pos:start="97:12" pos:end="97:74">(<expr pos:start="97:13" pos:end="97:73"><name pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:15">ctx</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:25">num_play</name></name> <operator pos:start="97:27" pos:end="97:28">==</operator> <literal type="number" pos:start="97:30" pos:end="97:30">1</literal> <operator pos:start="97:32" pos:end="97:33">&amp;&amp;</operator> <operator pos:start="97:35" pos:end="97:35">(</operator><name pos:start="97:36" pos:end="97:38">ret</name> <operator pos:start="97:40" pos:end="97:40">=</operator> <call pos:start="97:42" pos:end="97:68"><name pos:start="97:42" pos:end="97:61">ffio_ensure_seekback</name><argument_list pos:start="97:62" pos:end="97:68">(<argument pos:start="97:63" pos:end="97:64"><expr pos:start="97:63" pos:end="97:64"><name pos:start="97:63" pos:end="97:64">pb</name></expr></argument>, <argument pos:start="97:67" pos:end="97:67"><expr pos:start="97:67" pos:end="97:67"><literal type="number" pos:start="97:67" pos:end="97:67">8</literal></expr></argument>)</argument_list></call><operator pos:start="97:69" pos:end="97:69">)</operator> <operator pos:start="97:71" pos:end="97:71">&lt;</operator> <literal type="number" pos:start="97:73" pos:end="97:73">0</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:23"><block_content pos:start="99:13" pos:end="99:23">

            <return pos:start="99:13" pos:end="99:23">return <expr pos:start="99:20" pos:end="99:22"><name pos:start="99:20" pos:end="99:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:28"><expr pos:start="103:9" pos:end="103:27"><name pos:start="103:9" pos:end="103:11">len</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <call pos:start="103:15" pos:end="103:27"><name pos:start="103:15" pos:end="103:23">avio_rb32</name><argument_list pos:start="103:24" pos:end="103:27">(<argument pos:start="103:25" pos:end="103:26"><expr pos:start="103:25" pos:end="103:26"><name pos:start="103:25" pos:end="103:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:28"><expr pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:11">tag</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:27"><name pos:start="105:15" pos:end="105:23">avio_rl32</name><argument_list pos:start="105:24" pos:end="105:27">(<argument pos:start="105:25" pos:end="105:26"><expr pos:start="105:25" pos:end="105:26"><name pos:start="105:25" pos:end="105:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="107:9" pos:end="131:9">while <condition pos:start="107:15" pos:end="111:48">(<expr pos:start="107:16" pos:end="111:47"><name pos:start="107:16" pos:end="107:18">tag</name> <operator pos:start="107:20" pos:end="107:21">&amp;&amp;</operator>

               <name pos:start="109:16" pos:end="109:18">tag</name> <operator pos:start="109:20" pos:end="109:21">!=</operator> <call pos:start="109:23" pos:end="109:47"><name pos:start="109:23" pos:end="109:27">MKTAG</name><argument_list pos:start="109:28" pos:end="109:47">(<argument pos:start="109:29" pos:end="109:31"><expr pos:start="109:29" pos:end="109:31"><literal type="char" pos:start="109:29" pos:end="109:31">'f'</literal></expr></argument>, <argument pos:start="109:34" pos:end="109:36"><expr pos:start="109:34" pos:end="109:36"><literal type="char" pos:start="109:34" pos:end="109:36">'c'</literal></expr></argument>, <argument pos:start="109:39" pos:end="109:41"><expr pos:start="109:39" pos:end="109:41"><literal type="char" pos:start="109:39" pos:end="109:41">'T'</literal></expr></argument>, <argument pos:start="109:44" pos:end="109:46"><expr pos:start="109:44" pos:end="109:46"><literal type="char" pos:start="109:44" pos:end="109:46">'L'</literal></expr></argument>)</argument_list></call> <operator pos:start="109:49" pos:end="109:50">&amp;&amp;</operator>

               <name pos:start="111:16" pos:end="111:18">tag</name> <operator pos:start="111:20" pos:end="111:21">!=</operator> <call pos:start="111:23" pos:end="111:47"><name pos:start="111:23" pos:end="111:27">MKTAG</name><argument_list pos:start="111:28" pos:end="111:47">(<argument pos:start="111:29" pos:end="111:31"><expr pos:start="111:29" pos:end="111:31"><literal type="char" pos:start="111:29" pos:end="111:31">'I'</literal></expr></argument>, <argument pos:start="111:34" pos:end="111:36"><expr pos:start="111:34" pos:end="111:36"><literal type="char" pos:start="111:34" pos:end="111:36">'E'</literal></expr></argument>, <argument pos:start="111:39" pos:end="111:41"><expr pos:start="111:39" pos:end="111:41"><literal type="char" pos:start="111:39" pos:end="111:41">'N'</literal></expr></argument>, <argument pos:start="111:44" pos:end="111:46"><expr pos:start="111:44" pos:end="111:46"><literal type="char" pos:start="111:44" pos:end="111:46">'D'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:50" pos:end="131:9">{<block_content pos:start="113:13" pos:end="129:32">

            <if_stmt pos:start="113:13" pos:end="115:43"><if pos:start="113:13" pos:end="115:43">if <condition pos:start="113:16" pos:end="113:33">(<expr pos:start="113:17" pos:end="113:32"><name pos:start="113:17" pos:end="113:19">len</name> <operator pos:start="113:21" pos:end="113:21">&gt;</operator> <literal type="number" pos:start="113:23" pos:end="113:32">0x7fffffff</literal></expr>)</condition><block type="pseudo" pos:start="115:17" pos:end="115:43"><block_content pos:start="115:17" pos:end="115:43">

                <return pos:start="115:17" pos:end="115:43">return <expr pos:start="115:24" pos:end="115:42"><name pos:start="115:24" pos:end="115:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="117:13" pos:end="121:27"><if pos:start="117:13" pos:end="121:27">if <condition pos:start="117:16" pos:end="119:64">(<expr pos:start="117:17" pos:end="119:63"><operator pos:start="117:17" pos:end="117:17">(</operator><name pos:start="117:18" pos:end="117:20">ret</name> <operator pos:start="117:22" pos:end="117:22">=</operator> <call pos:start="117:24" pos:end="117:50"><name pos:start="117:24" pos:end="117:32">avio_seek</name><argument_list pos:start="117:33" pos:end="117:50">(<argument pos:start="117:34" pos:end="117:35"><expr pos:start="117:34" pos:end="117:35"><name pos:start="117:34" pos:end="117:35">pb</name></expr></argument>, <argument pos:start="117:38" pos:end="117:39"><expr pos:start="117:38" pos:end="117:39"><operator pos:start="117:38" pos:end="117:38">-</operator><literal type="number" pos:start="117:39" pos:end="117:39">8</literal></expr></argument>, <argument pos:start="117:42" pos:end="117:49"><expr pos:start="117:42" pos:end="117:49"><name pos:start="117:42" pos:end="117:49">SEEK_CUR</name></expr></argument>)</argument_list></call><operator pos:start="117:51" pos:end="117:51">)</operator> <operator pos:start="117:53" pos:end="117:53">&lt;</operator> <literal type="number" pos:start="117:55" pos:end="117:55">0</literal> <operator pos:start="117:57" pos:end="117:58">||</operator>

                <operator pos:start="119:17" pos:end="119:17">(</operator><name pos:start="119:18" pos:end="119:20">ret</name> <operator pos:start="119:22" pos:end="119:22">=</operator> <call pos:start="119:24" pos:end="119:58"><name pos:start="119:24" pos:end="119:39">av_append_packet</name><argument_list pos:start="119:40" pos:end="119:58">(<argument pos:start="119:41" pos:end="119:42"><expr pos:start="119:41" pos:end="119:42"><name pos:start="119:41" pos:end="119:42">pb</name></expr></argument>, <argument pos:start="119:45" pos:end="119:47"><expr pos:start="119:45" pos:end="119:47"><name pos:start="119:45" pos:end="119:47">pkt</name></expr></argument>, <argument pos:start="119:50" pos:end="119:57"><expr pos:start="119:50" pos:end="119:57"><name pos:start="119:50" pos:end="119:52">len</name> <operator pos:start="119:54" pos:end="119:54">+</operator> <literal type="number" pos:start="119:56" pos:end="119:57">12</literal></expr></argument>)</argument_list></call><operator pos:start="119:59" pos:end="119:59">)</operator> <operator pos:start="119:61" pos:end="119:61">&lt;</operator> <literal type="number" pos:start="119:63" pos:end="119:63">0</literal></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:27"><block_content pos:start="121:17" pos:end="121:27">

                <return pos:start="121:17" pos:end="121:27">return <expr pos:start="121:24" pos:end="121:26"><name pos:start="121:24" pos:end="121:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="123:13" pos:end="125:27"><if pos:start="123:13" pos:end="125:27">if <condition pos:start="123:16" pos:end="123:78">(<expr pos:start="123:17" pos:end="123:77"><name pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:19">ctx</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:29">num_play</name></name> <operator pos:start="123:31" pos:end="123:32">==</operator> <literal type="number" pos:start="123:34" pos:end="123:34">1</literal> <operator pos:start="123:36" pos:end="123:37">&amp;&amp;</operator> <operator pos:start="123:39" pos:end="123:39">(</operator><name pos:start="123:40" pos:end="123:42">ret</name> <operator pos:start="123:44" pos:end="123:44">=</operator> <call pos:start="123:46" pos:end="123:72"><name pos:start="123:46" pos:end="123:65">ffio_ensure_seekback</name><argument_list pos:start="123:66" pos:end="123:72">(<argument pos:start="123:67" pos:end="123:68"><expr pos:start="123:67" pos:end="123:68"><name pos:start="123:67" pos:end="123:68">pb</name></expr></argument>, <argument pos:start="123:71" pos:end="123:71"><expr pos:start="123:71" pos:end="123:71"><literal type="number" pos:start="123:71" pos:end="123:71">8</literal></expr></argument>)</argument_list></call><operator pos:start="123:73" pos:end="123:73">)</operator> <operator pos:start="123:75" pos:end="123:75">&lt;</operator> <literal type="number" pos:start="123:77" pos:end="123:77">0</literal></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:27"><block_content pos:start="125:17" pos:end="125:27">

                <return pos:start="125:17" pos:end="125:27">return <expr pos:start="125:24" pos:end="125:26"><name pos:start="125:24" pos:end="125:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:32"><expr pos:start="127:13" pos:end="127:31"><name pos:start="127:13" pos:end="127:15">len</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <call pos:start="127:19" pos:end="127:31"><name pos:start="127:19" pos:end="127:27">avio_rb32</name><argument_list pos:start="127:28" pos:end="127:31">(<argument pos:start="127:29" pos:end="127:30"><expr pos:start="127:29" pos:end="127:30"><name pos:start="127:29" pos:end="127:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:32"><expr pos:start="129:13" pos:end="129:31"><name pos:start="129:13" pos:end="129:15">tag</name> <operator pos:start="129:17" pos:end="129:17">=</operator> <call pos:start="129:19" pos:end="129:31"><name pos:start="129:19" pos:end="129:27">avio_rl32</name><argument_list pos:start="129:28" pos:end="129:31">(<argument pos:start="129:29" pos:end="129:30"><expr pos:start="129:29" pos:end="129:30"><name pos:start="129:29" pos:end="129:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="133:9" pos:end="135:23"><if pos:start="133:9" pos:end="135:23">if <condition pos:start="133:12" pos:end="133:52">(<expr pos:start="133:13" pos:end="133:51"><operator pos:start="133:13" pos:end="133:13">(</operator><name pos:start="133:14" pos:end="133:16">ret</name> <operator pos:start="133:18" pos:end="133:18">=</operator> <call pos:start="133:20" pos:end="133:46"><name pos:start="133:20" pos:end="133:28">avio_seek</name><argument_list pos:start="133:29" pos:end="133:46">(<argument pos:start="133:30" pos:end="133:31"><expr pos:start="133:30" pos:end="133:31"><name pos:start="133:30" pos:end="133:31">pb</name></expr></argument>, <argument pos:start="133:34" pos:end="133:35"><expr pos:start="133:34" pos:end="133:35"><operator pos:start="133:34" pos:end="133:34">-</operator><literal type="number" pos:start="133:35" pos:end="133:35">8</literal></expr></argument>, <argument pos:start="133:38" pos:end="133:45"><expr pos:start="133:38" pos:end="133:45"><name pos:start="133:38" pos:end="133:45">SEEK_CUR</name></expr></argument>)</argument_list></call><operator pos:start="133:47" pos:end="133:47">)</operator> <operator pos:start="133:49" pos:end="133:49">&lt;</operator> <literal type="number" pos:start="133:51" pos:end="133:51">0</literal></expr>)</condition><block type="pseudo" pos:start="135:13" pos:end="135:23"><block_content pos:start="135:13" pos:end="135:23">

            <return pos:start="135:13" pos:end="135:23">return <expr pos:start="135:20" pos:end="135:22"><name pos:start="135:20" pos:end="135:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="139:9" pos:end="141:42"><if pos:start="139:9" pos:end="141:42">if <condition pos:start="139:12" pos:end="139:30">(<expr pos:start="139:13" pos:end="139:29"><name pos:start="139:13" pos:end="139:29"><name pos:start="139:13" pos:end="139:15">ctx</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:29">is_key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:42"><block_content pos:start="141:13" pos:end="141:42">

            <expr_stmt pos:start="141:13" pos:end="141:42"><expr pos:start="141:13" pos:end="141:41"><name pos:start="141:13" pos:end="141:22"><name pos:start="141:13" pos:end="141:15">pkt</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:22">flags</name></name> <operator pos:start="141:24" pos:end="141:25">|=</operator> <name pos:start="141:27" pos:end="141:41">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:32"><expr pos:start="143:9" pos:end="143:31"><name pos:start="143:9" pos:end="143:16"><name pos:start="143:9" pos:end="143:11">pkt</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:16">pts</name></name> <operator pos:start="143:18" pos:end="143:18">=</operator> <name pos:start="143:20" pos:end="143:31"><name pos:start="143:20" pos:end="143:22">ctx</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:31">pkt_pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:42"><expr pos:start="145:9" pos:end="145:41"><name pos:start="145:9" pos:end="145:21"><name pos:start="145:9" pos:end="145:11">pkt</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:21">duration</name></name> <operator pos:start="145:23" pos:end="145:23">=</operator> <name pos:start="145:25" pos:end="145:41"><name pos:start="145:25" pos:end="145:27">ctx</name><operator pos:start="145:28" pos:end="145:29">-&gt;</operator><name pos:start="145:30" pos:end="145:41">pkt_duration</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:42"><expr pos:start="147:9" pos:end="147:41"><name pos:start="147:9" pos:end="147:20"><name pos:start="147:9" pos:end="147:11">ctx</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:20">pkt_pts</name></name> <operator pos:start="147:22" pos:end="147:23">+=</operator> <name pos:start="147:25" pos:end="147:41"><name pos:start="147:25" pos:end="147:27">ctx</name><operator pos:start="147:28" pos:end="147:29">-&gt;</operator><name pos:start="147:30" pos:end="147:41">pkt_duration</name></name></expr>;</expr_stmt>

        <return pos:start="149:9" pos:end="149:40">return <expr pos:start="149:16" pos:end="149:39"><call pos:start="149:16" pos:end="149:39"><name pos:start="149:16" pos:end="149:29">send_extradata</name><argument_list pos:start="149:30" pos:end="149:39">(<argument pos:start="149:31" pos:end="149:33"><expr pos:start="149:31" pos:end="149:33"><name pos:start="149:31" pos:end="149:33">ctx</name></expr></argument>, <argument pos:start="149:36" pos:end="149:38"><expr pos:start="149:36" pos:end="149:38"><name pos:start="149:36" pos:end="149:38">pkt</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="151:5" pos:end="151:35">case <expr pos:start="151:10" pos:end="151:34"><call pos:start="151:10" pos:end="151:34"><name pos:start="151:10" pos:end="151:14">MKTAG</name><argument_list pos:start="151:15" pos:end="151:34">(<argument pos:start="151:16" pos:end="151:18"><expr pos:start="151:16" pos:end="151:18"><literal type="char" pos:start="151:16" pos:end="151:18">'I'</literal></expr></argument>, <argument pos:start="151:21" pos:end="151:23"><expr pos:start="151:21" pos:end="151:23"><literal type="char" pos:start="151:21" pos:end="151:23">'E'</literal></expr></argument>, <argument pos:start="151:26" pos:end="151:28"><expr pos:start="151:26" pos:end="151:28"><literal type="char" pos:start="151:26" pos:end="151:28">'N'</literal></expr></argument>, <argument pos:start="151:31" pos:end="151:33"><expr pos:start="151:31" pos:end="151:33"><literal type="char" pos:start="151:31" pos:end="151:33">'D'</literal></expr></argument>)</argument_list></call></expr>:</case>

        <expr_stmt pos:start="153:9" pos:end="153:24"><expr pos:start="153:9" pos:end="153:23"><name pos:start="153:9" pos:end="153:21"><name pos:start="153:9" pos:end="153:11">ctx</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:21">cur_loop</name></name><operator pos:start="153:22" pos:end="153:23">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="161:9"><if pos:start="155:9" pos:end="161:9">if <condition pos:start="155:12" pos:end="155:85">(<expr pos:start="155:13" pos:end="155:84"><name pos:start="155:13" pos:end="155:28"><name pos:start="155:13" pos:end="155:15">ctx</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:28">ignore_loop</name></name> <operator pos:start="155:30" pos:end="155:31">||</operator> <name pos:start="155:33" pos:end="155:45"><name pos:start="155:33" pos:end="155:35">ctx</name><operator pos:start="155:36" pos:end="155:37">-&gt;</operator><name pos:start="155:38" pos:end="155:45">num_play</name></name> <operator pos:start="155:47" pos:end="155:48">&gt;=</operator> <literal type="number" pos:start="155:50" pos:end="155:50">1</literal> <operator pos:start="155:52" pos:end="155:53">&amp;&amp;</operator> <name pos:start="155:55" pos:end="155:67"><name pos:start="155:55" pos:end="155:57">ctx</name><operator pos:start="155:58" pos:end="155:59">-&gt;</operator><name pos:start="155:60" pos:end="155:67">cur_loop</name></name> <operator pos:start="155:69" pos:end="155:70">==</operator> <name pos:start="155:72" pos:end="155:84"><name pos:start="155:72" pos:end="155:74">ctx</name><operator pos:start="155:75" pos:end="155:76">-&gt;</operator><name pos:start="155:77" pos:end="155:84">num_play</name></name></expr>)</condition> <block pos:start="155:87" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:31">

            <expr_stmt pos:start="157:13" pos:end="157:40"><expr pos:start="157:13" pos:end="157:39"><call pos:start="157:13" pos:end="157:39"><name pos:start="157:13" pos:end="157:21">avio_seek</name><argument_list pos:start="157:22" pos:end="157:39">(<argument pos:start="157:23" pos:end="157:24"><expr pos:start="157:23" pos:end="157:24"><name pos:start="157:23" pos:end="157:24">pb</name></expr></argument>, <argument pos:start="157:27" pos:end="157:28"><expr pos:start="157:27" pos:end="157:28"><operator pos:start="157:27" pos:end="157:27">-</operator><literal type="number" pos:start="157:28" pos:end="157:28">8</literal></expr></argument>, <argument pos:start="157:31" pos:end="157:38"><expr pos:start="157:31" pos:end="157:38"><name pos:start="157:31" pos:end="157:38">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="159:13" pos:end="159:31">return <expr pos:start="159:20" pos:end="159:30"><name pos:start="159:20" pos:end="159:30">AVERROR_EOF</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="163:9" pos:end="165:23"><if pos:start="163:9" pos:end="165:23">if <condition pos:start="163:12" pos:end="163:74">(<expr pos:start="163:13" pos:end="163:73"><operator pos:start="163:13" pos:end="163:13">(</operator><name pos:start="163:14" pos:end="163:16">ret</name> <operator pos:start="163:18" pos:end="163:18">=</operator> <call pos:start="163:20" pos:end="163:68"><name pos:start="163:20" pos:end="163:28">avio_seek</name><argument_list pos:start="163:29" pos:end="163:68">(<argument pos:start="163:30" pos:end="163:31"><expr pos:start="163:30" pos:end="163:31"><name pos:start="163:30" pos:end="163:31">pb</name></expr></argument>, <argument pos:start="163:34" pos:end="163:57"><expr pos:start="163:34" pos:end="163:57"><name pos:start="163:34" pos:end="163:53"><name pos:start="163:34" pos:end="163:36">ctx</name><operator pos:start="163:37" pos:end="163:38">-&gt;</operator><name pos:start="163:39" pos:end="163:53">extra_data_size</name></name> <operator pos:start="163:55" pos:end="163:55">+</operator> <literal type="number" pos:start="163:57" pos:end="163:57">8</literal></expr></argument>, <argument pos:start="163:60" pos:end="163:67"><expr pos:start="163:60" pos:end="163:67"><name pos:start="163:60" pos:end="163:67">SEEK_SET</name></expr></argument>)</argument_list></call><operator pos:start="163:69" pos:end="163:69">)</operator> <operator pos:start="163:71" pos:end="163:71">&lt;</operator> <literal type="number" pos:start="163:73" pos:end="163:73">0</literal></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:23"><block_content pos:start="165:13" pos:end="165:23">

            <return pos:start="165:13" pos:end="165:23">return <expr pos:start="165:20" pos:end="165:22"><name pos:start="165:20" pos:end="165:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <return pos:start="167:9" pos:end="167:40">return <expr pos:start="167:16" pos:end="167:39"><call pos:start="167:16" pos:end="167:39"><name pos:start="167:16" pos:end="167:29">send_extradata</name><argument_list pos:start="167:30" pos:end="167:39">(<argument pos:start="167:31" pos:end="167:33"><expr pos:start="167:31" pos:end="167:33"><name pos:start="167:31" pos:end="167:33">ctx</name></expr></argument>, <argument pos:start="167:36" pos:end="167:38"><expr pos:start="167:36" pos:end="167:38"><name pos:start="167:36" pos:end="167:38">pkt</name></expr></argument>)</argument_list></call></expr>;</return>

    <default pos:start="169:5" pos:end="169:12">default:</default>

        <block pos:start="171:9" pos:end="183:9">{<block_content pos:start="173:9" pos:end="181:31">

        <decl_stmt pos:start="173:9" pos:end="173:25"><decl pos:start="173:9" pos:end="173:24"><type pos:start="173:9" pos:end="173:12"><name pos:start="173:9" pos:end="173:12">char</name></type> <name pos:start="173:14" pos:end="173:24"><name pos:start="173:14" pos:end="173:20">tag_buf</name><index pos:start="173:21" pos:end="173:24">[<expr pos:start="173:22" pos:end="173:23"><literal type="number" pos:start="173:22" pos:end="173:23">32</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="177:9" pos:end="177:63"><expr pos:start="177:9" pos:end="177:62"><call pos:start="177:9" pos:end="177:62"><name pos:start="177:9" pos:end="177:31">av_get_codec_tag_string</name><argument_list pos:start="177:32" pos:end="177:62">(<argument pos:start="177:33" pos:end="177:39"><expr pos:start="177:33" pos:end="177:39"><name pos:start="177:33" pos:end="177:39">tag_buf</name></expr></argument>, <argument pos:start="177:42" pos:end="177:56"><expr pos:start="177:42" pos:end="177:56"><sizeof pos:start="177:42" pos:end="177:56">sizeof<argument_list pos:start="177:48" pos:end="177:56">(<argument pos:start="177:49" pos:end="177:55"><expr pos:start="177:49" pos:end="177:55"><name pos:start="177:49" pos:end="177:55">tag_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="177:59" pos:end="177:61"><expr pos:start="177:59" pos:end="177:61"><name pos:start="177:59" pos:end="177:61">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:93"><expr pos:start="179:9" pos:end="179:92"><call pos:start="179:9" pos:end="179:92"><name pos:start="179:9" pos:end="179:29">avpriv_request_sample</name><argument_list pos:start="179:30" pos:end="179:92">(<argument pos:start="179:31" pos:end="179:31"><expr pos:start="179:31" pos:end="179:31"><name pos:start="179:31" pos:end="179:31">s</name></expr></argument>, <argument pos:start="179:34" pos:end="179:72"><expr pos:start="179:34" pos:end="179:72"><literal type="string" pos:start="179:34" pos:end="179:66">"In-stream tag=%s (0x%08X) len=%"</literal><name pos:start="179:67" pos:end="179:72">PRIu32</name></expr></argument>, <argument pos:start="179:75" pos:end="179:81"><expr pos:start="179:75" pos:end="179:81"><name pos:start="179:75" pos:end="179:81">tag_buf</name></expr></argument>, <argument pos:start="179:84" pos:end="179:86"><expr pos:start="179:84" pos:end="179:86"><name pos:start="179:84" pos:end="179:86">tag</name></expr></argument>, <argument pos:start="179:89" pos:end="179:91"><expr pos:start="179:89" pos:end="179:91"><name pos:start="179:89" pos:end="179:91">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:31"><expr pos:start="181:9" pos:end="181:30"><call pos:start="181:9" pos:end="181:30"><name pos:start="181:9" pos:end="181:17">avio_skip</name><argument_list pos:start="181:18" pos:end="181:30">(<argument pos:start="181:19" pos:end="181:20"><expr pos:start="181:19" pos:end="181:20"><name pos:start="181:19" pos:end="181:20">pb</name></expr></argument>, <argument pos:start="181:23" pos:end="181:29"><expr pos:start="181:23" pos:end="181:29"><name pos:start="181:23" pos:end="181:25">len</name> <operator pos:start="181:27" pos:end="181:27">+</operator> <literal type="number" pos:start="181:29" pos:end="181:29">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

    </block_content>}</block></switch>



    <comment type="block" pos:start="189:5" pos:end="189:42">/* Handle the unsupported yet cases */</comment>

    <return pos:start="191:5" pos:end="191:32">return <expr pos:start="191:12" pos:end="191:31"><name pos:start="191:12" pos:end="191:31">AVERROR_PATCHWELCOME</name></expr>;</return>

</block_content>}</block></function>
</unit>
