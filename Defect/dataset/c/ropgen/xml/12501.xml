<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12501.c" pos:tabs="8"><function pos:start="1:1" pos:end="529:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">ff_h263_decode_picture_header</name><parameter_list pos:start="1:34" pos:end="1:52">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:50"><name pos:start="1:35" pos:end="1:48">MpegEncContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="529:1">{<block_content pos:start="5:5" pos:end="527:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">format</name></decl>, <decl pos:start="5:17" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:21">width</name></decl>, <decl pos:start="5:24" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:29">height</name></decl>, <decl pos:start="5:32" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:32">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:22">startcode</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><call pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:18">align_get_bits</name><argument_list pos:start="11:19" pos:end="11:26">(<argument pos:start="11:20" pos:end="11:25"><expr pos:start="11:20" pos:end="11:25"><operator pos:start="11:20" pos:end="11:20">&amp;</operator><name pos:start="11:21" pos:end="11:25"><name pos:start="11:21" pos:end="11:21">s</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:13">startcode</name><operator pos:start="15:14" pos:end="15:14">=</operator> <call pos:start="15:16" pos:end="15:37"><name pos:start="15:16" pos:end="15:23">get_bits</name><argument_list pos:start="15:24" pos:end="15:37">(<argument pos:start="15:25" pos:end="15:30"><expr pos:start="15:25" pos:end="15:30"><operator pos:start="15:25" pos:end="15:25">&amp;</operator><name pos:start="15:26" pos:end="15:30"><name pos:start="15:26" pos:end="15:26">s</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:30">gb</name></name></expr></argument>, <argument pos:start="15:33" pos:end="15:36"><expr pos:start="15:33" pos:end="15:36"><literal type="number" pos:start="15:33" pos:end="15:35">22</literal><operator pos:start="15:35" pos:end="15:35">-</operator><literal type="number" pos:start="15:36" pos:end="15:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="19:5" pos:end="29:5">for<control pos:start="19:8" pos:end="19:45">(<init pos:start="19:9" pos:end="19:33"><expr pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:9">i</name><operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:32"><name pos:start="19:12" pos:end="19:24">get_bits_left</name><argument_list pos:start="19:25" pos:end="19:32">(<argument pos:start="19:26" pos:end="19:31"><expr pos:start="19:26" pos:end="19:31"><operator pos:start="19:26" pos:end="19:26">&amp;</operator><name pos:start="19:27" pos:end="19:31"><name pos:start="19:27" pos:end="19:27">s</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="19:35" pos:end="19:39"><expr pos:start="19:35" pos:end="19:38"><name pos:start="19:35" pos:end="19:35">i</name><operator pos:start="19:36" pos:end="19:36">&gt;</operator><literal type="number" pos:start="19:37" pos:end="19:38">24</literal></expr>;</condition> <incr pos:start="19:41" pos:end="19:44"><expr pos:start="19:41" pos:end="19:44"><name pos:start="19:41" pos:end="19:41">i</name><operator pos:start="19:42" pos:end="19:43">-=</operator><literal type="number" pos:start="19:44" pos:end="19:44">8</literal></expr></incr>)</control> <block pos:start="19:47" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:18">

        <expr_stmt pos:start="21:9" pos:end="21:74"><expr pos:start="21:9" pos:end="21:73"><name pos:start="21:9" pos:end="21:17">startcode</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <operator pos:start="21:21" pos:end="21:21">(</operator><operator pos:start="21:22" pos:end="21:22">(</operator><name pos:start="21:23" pos:end="21:31">startcode</name> <operator pos:start="21:33" pos:end="21:34">&lt;&lt;</operator> <literal type="number" pos:start="21:36" pos:end="21:36">8</literal><operator pos:start="21:37" pos:end="21:37">)</operator> <operator pos:start="21:39" pos:end="21:39">|</operator> <call pos:start="21:41" pos:end="21:59"><name pos:start="21:41" pos:end="21:48">get_bits</name><argument_list pos:start="21:49" pos:end="21:59">(<argument pos:start="21:50" pos:end="21:55"><expr pos:start="21:50" pos:end="21:55"><operator pos:start="21:50" pos:end="21:50">&amp;</operator><name pos:start="21:51" pos:end="21:55"><name pos:start="21:51" pos:end="21:51">s</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:55">gb</name></name></expr></argument>, <argument pos:start="21:58" pos:end="21:58"><expr pos:start="21:58" pos:end="21:58"><literal type="number" pos:start="21:58" pos:end="21:58">8</literal></expr></argument>)</argument_list></call><operator pos:start="21:60" pos:end="21:60">)</operator> <operator pos:start="21:62" pos:end="21:62">&amp;</operator> <literal type="number" pos:start="21:64" pos:end="21:73">0x003FFFFF</literal></expr>;</expr_stmt>



        <if_stmt pos:start="25:9" pos:end="27:18"><if pos:start="25:9" pos:end="27:18">if<condition pos:start="25:11" pos:end="25:29">(<expr pos:start="25:12" pos:end="25:28"><name pos:start="25:12" pos:end="25:20">startcode</name> <operator pos:start="25:22" pos:end="25:23">==</operator> <literal type="number" pos:start="25:25" pos:end="25:28">0x20</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:26">(<expr pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:17">startcode</name> <operator pos:start="33:19" pos:end="33:20">!=</operator> <literal type="number" pos:start="33:22" pos:end="33:25">0x20</literal></expr>)</condition> <block pos:start="33:28" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:67"><expr pos:start="35:9" pos:end="35:66"><call pos:start="35:9" pos:end="35:66"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:66">(<argument pos:start="35:16" pos:end="35:23"><expr pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:23">avctx</name></name></expr></argument>, <argument pos:start="35:26" pos:end="35:37"><expr pos:start="35:26" pos:end="35:37"><name pos:start="35:26" pos:end="35:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:40" pos:end="35:65"><expr pos:start="35:40" pos:end="35:65"><literal type="string" pos:start="35:40" pos:end="35:65">"Bad picture start code\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="41:5" pos:end="41:28">/* temporal reference */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:5">i</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <call pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:16">get_bits</name><argument_list pos:start="43:17" pos:end="43:27">(<argument pos:start="43:18" pos:end="43:23"><expr pos:start="43:18" pos:end="43:23"><operator pos:start="43:18" pos:end="43:18">&amp;</operator><name pos:start="43:19" pos:end="43:23"><name pos:start="43:19" pos:end="43:19">s</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:23">gb</name></name></expr></argument>, <argument pos:start="43:26" pos:end="43:26"><expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="43:30" pos:end="43:52">/* picture timestamp */</comment>

    <if_stmt pos:start="45:5" pos:end="47:16"><if pos:start="45:5" pos:end="47:16">if<condition pos:start="45:7" pos:end="45:56">( <expr pos:start="45:9" pos:end="45:55"><operator pos:start="45:9" pos:end="45:9">(</operator><name pos:start="45:10" pos:end="45:26"><name pos:start="45:10" pos:end="45:10">s</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:26">picture_number</name></name><operator pos:start="45:27" pos:end="45:27">&amp;</operator><operator pos:start="45:28" pos:end="45:28">~</operator><literal type="number" pos:start="45:29" pos:end="45:32">0xFF</literal><operator pos:start="45:33" pos:end="45:33">)</operator><operator pos:start="45:34" pos:end="45:34">+</operator><name pos:start="45:35" pos:end="45:35">i</name> <operator pos:start="45:37" pos:end="45:37">&lt;</operator> <name pos:start="45:39" pos:end="45:55"><name pos:start="45:39" pos:end="45:39">s</name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:55">picture_number</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:16"><block_content pos:start="47:9" pos:end="47:16">

        <expr_stmt pos:start="47:9" pos:end="47:16"><expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:9">i</name><operator pos:start="47:10" pos:end="47:11">+=</operator> <literal type="number" pos:start="47:13" pos:end="47:15">256</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:53"><expr pos:start="49:5" pos:end="51:52"><name pos:start="49:5" pos:end="49:33"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:26">current_picture_ptr</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:29">f</name><operator pos:start="49:30" pos:end="49:30">.</operator><name pos:start="49:31" pos:end="49:33">pts</name></name> <operator pos:start="49:35" pos:end="49:35">=</operator>

    <name pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:21">picture_number</name></name><operator pos:start="51:22" pos:end="51:22">=</operator> <operator pos:start="51:24" pos:end="51:24">(</operator><name pos:start="51:25" pos:end="51:41"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:41">picture_number</name></name><operator pos:start="51:42" pos:end="51:42">&amp;</operator><operator pos:start="51:43" pos:end="51:43">~</operator><literal type="number" pos:start="51:44" pos:end="51:47">0xFF</literal><operator pos:start="51:48" pos:end="51:48">)</operator> <operator pos:start="51:50" pos:end="51:50">+</operator> <name pos:start="51:52" pos:end="51:52">i</name></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:27">/* PTYPE starts here */</comment>

    <if_stmt pos:start="57:5" pos:end="65:5"><if pos:start="57:5" pos:end="65:5">if <condition pos:start="57:8" pos:end="57:31">(<expr pos:start="57:9" pos:end="57:30"><call pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:17">get_bits1</name><argument_list pos:start="57:18" pos:end="57:25">(<argument pos:start="57:19" pos:end="57:24"><expr pos:start="57:19" pos:end="57:24"><operator pos:start="57:19" pos:end="57:19">&amp;</operator><name pos:start="57:20" pos:end="57:24"><name pos:start="57:20" pos:end="57:20">s</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:24">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="57:27" pos:end="57:28">!=</operator> <literal type="number" pos:start="57:30" pos:end="57:30">1</literal></expr>)</condition> <block pos:start="57:33" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:18">

        <comment type="block" pos:start="59:9" pos:end="59:20">/* marker */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:55"><expr pos:start="61:9" pos:end="61:54"><call pos:start="61:9" pos:end="61:54"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:54">(<argument pos:start="61:16" pos:end="61:23"><expr pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:16">s</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:23">avctx</name></name></expr></argument>, <argument pos:start="61:26" pos:end="61:37"><expr pos:start="61:26" pos:end="61:37"><name pos:start="61:26" pos:end="61:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:40" pos:end="61:53"><expr pos:start="61:40" pos:end="61:53"><literal type="string" pos:start="61:40" pos:end="61:53">"Bad marker\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:18">return <expr pos:start="63:16" pos:end="63:17"><operator pos:start="63:16" pos:end="63:16">-</operator><literal type="number" pos:start="63:17" pos:end="63:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:31">(<expr pos:start="67:9" pos:end="67:30"><call pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:17">get_bits1</name><argument_list pos:start="67:18" pos:end="67:25">(<argument pos:start="67:19" pos:end="67:24"><expr pos:start="67:19" pos:end="67:24"><operator pos:start="67:19" pos:end="67:19">&amp;</operator><name pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:20">s</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:24">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="67:27" pos:end="67:28">!=</operator> <literal type="number" pos:start="67:30" pos:end="67:30">0</literal></expr>)</condition> <block pos:start="67:33" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:18">

        <expr_stmt pos:start="69:9" pos:end="69:56"><expr pos:start="69:9" pos:end="69:55"><call pos:start="69:9" pos:end="69:55"><name pos:start="69:9" pos:end="69:14">av_log</name><argument_list pos:start="69:15" pos:end="69:55">(<argument pos:start="69:16" pos:end="69:23"><expr pos:start="69:16" pos:end="69:23"><name pos:start="69:16" pos:end="69:23"><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:23">avctx</name></name></expr></argument>, <argument pos:start="69:26" pos:end="69:37"><expr pos:start="69:26" pos:end="69:37"><name pos:start="69:26" pos:end="69:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:40" pos:end="69:54"><expr pos:start="69:40" pos:end="69:54"><literal type="string" pos:start="69:40" pos:end="69:54">"Bad H263 id\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:18">return <expr pos:start="71:16" pos:end="71:17"><operator pos:start="71:16" pos:end="71:16">-</operator><literal type="number" pos:start="71:17" pos:end="71:17">1</literal></expr>;</return>      <comment type="block" pos:start="71:25" pos:end="71:37">/* h263 id */</comment>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:23"><expr pos:start="75:5" pos:end="75:22"><call pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:14">skip_bits1</name><argument_list pos:start="75:15" pos:end="75:22">(<argument pos:start="75:16" pos:end="75:21"><expr pos:start="75:16" pos:end="75:21"><operator pos:start="75:16" pos:end="75:16">&amp;</operator><name pos:start="75:17" pos:end="75:21"><name pos:start="75:17" pos:end="75:17">s</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="75:33" pos:end="75:54">/* split screen off */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:23"><expr pos:start="77:5" pos:end="77:22"><call pos:start="77:5" pos:end="77:22"><name pos:start="77:5" pos:end="77:14">skip_bits1</name><argument_list pos:start="77:15" pos:end="77:22">(<argument pos:start="77:16" pos:end="77:21"><expr pos:start="77:16" pos:end="77:21"><operator pos:start="77:16" pos:end="77:16">&amp;</operator><name pos:start="77:17" pos:end="77:21"><name pos:start="77:17" pos:end="77:17">s</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="77:33" pos:end="77:49">/* camera  off */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:23"><expr pos:start="79:5" pos:end="79:22"><call pos:start="79:5" pos:end="79:22"><name pos:start="79:5" pos:end="79:14">skip_bits1</name><argument_list pos:start="79:15" pos:end="79:22">(<argument pos:start="79:16" pos:end="79:21"><expr pos:start="79:16" pos:end="79:21"><operator pos:start="79:16" pos:end="79:16">&amp;</operator><name pos:start="79:17" pos:end="79:21"><name pos:start="79:17" pos:end="79:17">s</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="79:33" pos:end="79:64">/* freeze picture release off */</comment>



    <expr_stmt pos:start="83:5" pos:end="83:33"><expr pos:start="83:5" pos:end="83:32"><name pos:start="83:5" pos:end="83:10">format</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="83:32"><name pos:start="83:14" pos:end="83:21">get_bits</name><argument_list pos:start="83:22" pos:end="83:32">(<argument pos:start="83:23" pos:end="83:28"><expr pos:start="83:23" pos:end="83:28"><operator pos:start="83:23" pos:end="83:23">&amp;</operator><name pos:start="83:24" pos:end="83:28"><name pos:start="83:24" pos:end="83:24">s</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:28">gb</name></name></expr></argument>, <argument pos:start="83:31" pos:end="83:31"><expr pos:start="83:31" pos:end="83:31"><literal type="number" pos:start="83:31" pos:end="83:31">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="85:5" pos:end="95:6">/*

        0    forbidden

        1    sub-QCIF

        10   QCIF

        7       extended PTYPE (PLUSPTYPE)

    */</comment>



    <if_stmt pos:start="99:5" pos:end="413:5"><if pos:start="99:5" pos:end="153:5">if <condition pos:start="99:8" pos:end="99:35">(<expr pos:start="99:9" pos:end="99:34"><name pos:start="99:9" pos:end="99:14">format</name> <operator pos:start="99:16" pos:end="99:17">!=</operator> <literal type="number" pos:start="99:19" pos:end="99:19">7</literal> <operator pos:start="99:21" pos:end="99:22">&amp;&amp;</operator> <name pos:start="99:24" pos:end="99:29">format</name> <operator pos:start="99:31" pos:end="99:32">!=</operator> <literal type="number" pos:start="99:34" pos:end="99:34">6</literal></expr>)</condition> <block pos:start="99:37" pos:end="153:5">{<block_content pos:start="101:9" pos:end="151:55">

        <expr_stmt pos:start="101:9" pos:end="101:25"><expr pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:20">h263_plus</name></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <literal type="number" pos:start="101:24" pos:end="101:24">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="103:9" pos:end="103:21">/* H.263v1 */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:42"><expr pos:start="105:9" pos:end="105:41"><name pos:start="105:9" pos:end="105:13">width</name> <operator pos:start="105:15" pos:end="105:15">=</operator> <name pos:start="105:17" pos:end="105:41"><name pos:start="105:17" pos:end="105:30">ff_h263_format</name><index pos:start="105:31" pos:end="105:38">[<expr pos:start="105:32" pos:end="105:37"><name pos:start="105:32" pos:end="105:37">format</name></expr>]</index><index pos:start="105:39" pos:end="105:41">[<expr pos:start="105:40" pos:end="105:40"><literal type="number" pos:start="105:40" pos:end="105:40">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:43"><expr pos:start="107:9" pos:end="107:42"><name pos:start="107:9" pos:end="107:14">height</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <name pos:start="107:18" pos:end="107:42"><name pos:start="107:18" pos:end="107:31">ff_h263_format</name><index pos:start="107:32" pos:end="107:39">[<expr pos:start="107:33" pos:end="107:38"><name pos:start="107:33" pos:end="107:38">format</name></expr>]</index><index pos:start="107:40" pos:end="107:42">[<expr pos:start="107:41" pos:end="107:41"><literal type="number" pos:start="107:41" pos:end="107:41">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="111:22"><if pos:start="109:9" pos:end="111:22">if <condition pos:start="109:12" pos:end="109:19">(<expr pos:start="109:13" pos:end="109:18"><operator pos:start="109:13" pos:end="109:13">!</operator><name pos:start="109:14" pos:end="109:18">width</name></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:22"><block_content pos:start="111:13" pos:end="111:22">

            <return pos:start="111:13" pos:end="111:22">return <expr pos:start="111:20" pos:end="111:21"><operator pos:start="111:20" pos:end="111:20">-</operator><literal type="number" pos:start="111:21" pos:end="111:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:61"><expr pos:start="115:9" pos:end="115:60"><name pos:start="115:9" pos:end="115:20"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:20">pict_type</name></name> <operator pos:start="115:22" pos:end="115:22">=</operator> <name pos:start="115:24" pos:end="115:40">AV_PICTURE_TYPE_I</name> <operator pos:start="115:42" pos:end="115:42">+</operator> <call pos:start="115:44" pos:end="115:60"><name pos:start="115:44" pos:end="115:52">get_bits1</name><argument_list pos:start="115:53" pos:end="115:60">(<argument pos:start="115:54" pos:end="115:59"><expr pos:start="115:54" pos:end="115:59"><operator pos:start="115:54" pos:end="115:54">&amp;</operator><name pos:start="115:55" pos:end="115:59"><name pos:start="115:55" pos:end="115:55">s</name><operator pos:start="115:56" pos:end="115:57">-&gt;</operator><name pos:start="115:58" pos:end="115:59">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:49"><expr pos:start="119:9" pos:end="119:48"><name pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:28">h263_long_vectors</name></name> <operator pos:start="119:30" pos:end="119:30">=</operator> <call pos:start="119:32" pos:end="119:48"><name pos:start="119:32" pos:end="119:40">get_bits1</name><argument_list pos:start="119:41" pos:end="119:48">(<argument pos:start="119:42" pos:end="119:47"><expr pos:start="119:42" pos:end="119:47"><operator pos:start="119:42" pos:end="119:42">&amp;</operator><name pos:start="119:43" pos:end="119:47"><name pos:start="119:43" pos:end="119:43">s</name><operator pos:start="119:44" pos:end="119:45">-&gt;</operator><name pos:start="119:46" pos:end="119:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:35">(<expr pos:start="123:13" pos:end="123:34"><call pos:start="123:13" pos:end="123:29"><name pos:start="123:13" pos:end="123:21">get_bits1</name><argument_list pos:start="123:22" pos:end="123:29">(<argument pos:start="123:23" pos:end="123:28"><expr pos:start="123:23" pos:end="123:28"><operator pos:start="123:23" pos:end="123:23">&amp;</operator><name pos:start="123:24" pos:end="123:28"><name pos:start="123:24" pos:end="123:24">s</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="123:31" pos:end="123:32">!=</operator> <literal type="number" pos:start="123:34" pos:end="123:34">0</literal></expr>)</condition> <block pos:start="123:37" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:22">

            <expr_stmt pos:start="125:13" pos:end="125:71"><expr pos:start="125:13" pos:end="125:70"><call pos:start="125:13" pos:end="125:70"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="125:70">(<argument pos:start="125:20" pos:end="125:27"><expr pos:start="125:20" pos:end="125:27"><name pos:start="125:20" pos:end="125:27"><name pos:start="125:20" pos:end="125:20">s</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:27">avctx</name></name></expr></argument>, <argument pos:start="125:30" pos:end="125:41"><expr pos:start="125:30" pos:end="125:41"><name pos:start="125:30" pos:end="125:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:44" pos:end="125:69"><expr pos:start="125:44" pos:end="125:69"><literal type="string" pos:start="125:44" pos:end="125:69">"H263 SAC not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="127:13" pos:end="127:22">return <expr pos:start="127:20" pos:end="127:21"><operator pos:start="127:20" pos:end="127:20">-</operator><literal type="number" pos:start="127:21" pos:end="127:21">1</literal></expr>;</return> <comment type="block" pos:start="127:24" pos:end="127:37">/* SAC: off */</comment>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:35"><expr pos:start="131:9" pos:end="131:34"><name pos:start="131:9" pos:end="131:15"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:15">obmc</name></name><operator pos:start="131:16" pos:end="131:16">=</operator> <call pos:start="131:18" pos:end="131:34"><name pos:start="131:18" pos:end="131:26">get_bits1</name><argument_list pos:start="131:27" pos:end="131:34">(<argument pos:start="131:28" pos:end="131:33"><expr pos:start="131:28" pos:end="131:33"><operator pos:start="131:28" pos:end="131:28">&amp;</operator><name pos:start="131:29" pos:end="131:33"><name pos:start="131:29" pos:end="131:29">s</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="131:37" pos:end="131:66">/* Advanced prediction mode */</comment>

        <expr_stmt pos:start="133:9" pos:end="133:61"><expr pos:start="133:9" pos:end="133:60"><name pos:start="133:9" pos:end="133:26"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:26">unrestricted_mv</name></name> <operator pos:start="133:28" pos:end="133:28">=</operator> <name pos:start="133:30" pos:end="133:49"><name pos:start="133:30" pos:end="133:30">s</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:49">h263_long_vectors</name></name> <operator pos:start="133:51" pos:end="133:52">||</operator> <name pos:start="133:54" pos:end="133:60"><name pos:start="133:54" pos:end="133:54">s</name><operator pos:start="133:55" pos:end="133:56">-&gt;</operator><name pos:start="133:57" pos:end="133:60">obmc</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:40"><expr pos:start="137:9" pos:end="137:39"><name pos:start="137:9" pos:end="137:19"><name pos:start="137:9" pos:end="137:9">s</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:19">pb_frame</name></name> <operator pos:start="137:21" pos:end="137:21">=</operator> <call pos:start="137:23" pos:end="137:39"><name pos:start="137:23" pos:end="137:31">get_bits1</name><argument_list pos:start="137:32" pos:end="137:39">(<argument pos:start="137:33" pos:end="137:38"><expr pos:start="137:33" pos:end="137:38"><operator pos:start="137:33" pos:end="137:33">&amp;</operator><name pos:start="137:34" pos:end="137:38"><name pos:start="137:34" pos:end="137:34">s</name><operator pos:start="137:35" pos:end="137:36">-&gt;</operator><name pos:start="137:37" pos:end="137:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:58"><expr pos:start="139:9" pos:end="139:57"><name pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:24">chroma_qscale</name></name><operator pos:start="139:25" pos:end="139:25">=</operator> <name pos:start="139:27" pos:end="139:35"><name pos:start="139:27" pos:end="139:27">s</name><operator pos:start="139:28" pos:end="139:29">-&gt;</operator><name pos:start="139:30" pos:end="139:35">qscale</name></name> <operator pos:start="139:37" pos:end="139:37">=</operator> <call pos:start="139:39" pos:end="139:57"><name pos:start="139:39" pos:end="139:46">get_bits</name><argument_list pos:start="139:47" pos:end="139:57">(<argument pos:start="139:48" pos:end="139:53"><expr pos:start="139:48" pos:end="139:53"><operator pos:start="139:48" pos:end="139:48">&amp;</operator><name pos:start="139:49" pos:end="139:53"><name pos:start="139:49" pos:end="139:49">s</name><operator pos:start="139:50" pos:end="139:51">-&gt;</operator><name pos:start="139:52" pos:end="139:53">gb</name></name></expr></argument>, <argument pos:start="139:56" pos:end="139:56"><expr pos:start="139:56" pos:end="139:56"><literal type="number" pos:start="139:56" pos:end="139:56">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:27"><expr pos:start="141:9" pos:end="141:26"><call pos:start="141:9" pos:end="141:26"><name pos:start="141:9" pos:end="141:18">skip_bits1</name><argument_list pos:start="141:19" pos:end="141:26">(<argument pos:start="141:20" pos:end="141:25"><expr pos:start="141:20" pos:end="141:25"><operator pos:start="141:20" pos:end="141:20">&amp;</operator><name pos:start="141:21" pos:end="141:25"><name pos:start="141:21" pos:end="141:21">s</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="141:29" pos:end="141:74">/* Continuous Presence Multipoint mode: off */</comment>



        <expr_stmt pos:start="145:9" pos:end="145:25"><expr pos:start="145:9" pos:end="145:24"><name pos:start="145:9" pos:end="145:16"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:16">width</name></name> <operator pos:start="145:18" pos:end="145:18">=</operator> <name pos:start="145:20" pos:end="145:24">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:27"><expr pos:start="147:9" pos:end="147:26"><name pos:start="147:9" pos:end="147:17"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:17">height</name></name> <operator pos:start="147:19" pos:end="147:19">=</operator> <name pos:start="147:21" pos:end="147:26">height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:59"><expr pos:start="149:9" pos:end="149:58"><name pos:start="149:9" pos:end="149:37"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:16">avctx</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:37">sample_aspect_ratio</name></name><operator pos:start="149:38" pos:end="149:38">=</operator> <operator pos:start="149:40" pos:end="149:40">(</operator><name pos:start="149:41" pos:end="149:50">AVRational</name><operator pos:start="149:51" pos:end="149:51">)</operator><block pos:start="149:52" pos:end="149:58">{<expr pos:start="149:53" pos:end="149:54"><literal type="number" pos:start="149:53" pos:end="149:54">12</literal></expr>,<expr pos:start="149:56" pos:end="149:57"><literal type="number" pos:start="149:56" pos:end="149:57">11</literal></expr>}</block></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:55"><expr pos:start="151:9" pos:end="151:54"><name pos:start="151:9" pos:end="151:27"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:16">avctx</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:27">time_base</name></name><operator pos:start="151:28" pos:end="151:28">=</operator> <operator pos:start="151:30" pos:end="151:30">(</operator><name pos:start="151:31" pos:end="151:40">AVRational</name><operator pos:start="151:41" pos:end="151:41">)</operator><block pos:start="151:42" pos:end="151:54">{<expr pos:start="151:43" pos:end="151:46"><literal type="number" pos:start="151:43" pos:end="151:46">1001</literal></expr>, <expr pos:start="151:49" pos:end="151:53"><literal type="number" pos:start="151:49" pos:end="151:53">30000</literal></expr>}</block></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="153:7" pos:end="413:5">else <block pos:start="153:12" pos:end="413:5">{<block_content pos:start="155:9" pos:end="411:40">

        <decl_stmt pos:start="155:9" pos:end="155:17"><decl pos:start="155:9" pos:end="155:16"><type pos:start="155:9" pos:end="155:11"><name pos:start="155:9" pos:end="155:11">int</name></type> <name pos:start="155:13" pos:end="155:16">ufep</name></decl>;</decl_stmt>



        <comment type="block" pos:start="159:9" pos:end="159:21">/* H.263v2 */</comment>

        <expr_stmt pos:start="161:9" pos:end="161:25"><expr pos:start="161:9" pos:end="161:24"><name pos:start="161:9" pos:end="161:20"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:20">h263_plus</name></name> <operator pos:start="161:22" pos:end="161:22">=</operator> <literal type="number" pos:start="161:24" pos:end="161:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:35"><expr pos:start="163:9" pos:end="163:34"><name pos:start="163:9" pos:end="163:12">ufep</name> <operator pos:start="163:14" pos:end="163:14">=</operator> <call pos:start="163:16" pos:end="163:34"><name pos:start="163:16" pos:end="163:23">get_bits</name><argument_list pos:start="163:24" pos:end="163:34">(<argument pos:start="163:25" pos:end="163:30"><expr pos:start="163:25" pos:end="163:30"><operator pos:start="163:25" pos:end="163:25">&amp;</operator><name pos:start="163:26" pos:end="163:30"><name pos:start="163:26" pos:end="163:26">s</name><operator pos:start="163:27" pos:end="163:28">-&gt;</operator><name pos:start="163:29" pos:end="163:30">gb</name></name></expr></argument>, <argument pos:start="163:33" pos:end="163:33"><expr pos:start="163:33" pos:end="163:33"><literal type="number" pos:start="163:33" pos:end="163:33">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="163:37" pos:end="163:68">/* Update Full Extended PTYPE */</comment>



        <comment type="block" pos:start="167:9" pos:end="167:50">/* ufep other than 0 and 1 are reserved */</comment>

        <if_stmt pos:start="169:9" pos:end="233:9"><if pos:start="169:9" pos:end="227:9">if <condition pos:start="169:12" pos:end="169:22">(<expr pos:start="169:13" pos:end="169:21"><name pos:start="169:13" pos:end="169:16">ufep</name> <operator pos:start="169:18" pos:end="169:19">==</operator> <literal type="number" pos:start="169:21" pos:end="169:21">1</literal></expr>)</condition> <block pos:start="169:24" pos:end="227:9">{<block_content pos:start="173:13" pos:end="225:33">

            <comment type="block" pos:start="171:13" pos:end="171:25">/* OPPTYPE */</comment>

            <expr_stmt pos:start="173:13" pos:end="173:41"><expr pos:start="173:13" pos:end="173:40"><name pos:start="173:13" pos:end="173:18">format</name> <operator pos:start="173:20" pos:end="173:20">=</operator> <call pos:start="173:22" pos:end="173:40"><name pos:start="173:22" pos:end="173:29">get_bits</name><argument_list pos:start="173:30" pos:end="173:40">(<argument pos:start="173:31" pos:end="173:36"><expr pos:start="173:31" pos:end="173:36"><operator pos:start="173:31" pos:end="173:31">&amp;</operator><name pos:start="173:32" pos:end="173:36"><name pos:start="173:32" pos:end="173:32">s</name><operator pos:start="173:33" pos:end="173:34">-&gt;</operator><name pos:start="173:35" pos:end="173:36">gb</name></name></expr></argument>, <argument pos:start="173:39" pos:end="173:39"><expr pos:start="173:39" pos:end="173:39"><literal type="number" pos:start="173:39" pos:end="173:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:62"><expr pos:start="175:13" pos:end="175:61"><call pos:start="175:13" pos:end="175:61"><name pos:start="175:13" pos:end="175:19">av_dlog</name><argument_list pos:start="175:20" pos:end="175:61">(<argument pos:start="175:21" pos:end="175:28"><expr pos:start="175:21" pos:end="175:28"><name pos:start="175:21" pos:end="175:28"><name pos:start="175:21" pos:end="175:21">s</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:28">avctx</name></name></expr></argument>, <argument pos:start="175:31" pos:end="175:52"><expr pos:start="175:31" pos:end="175:52"><literal type="string" pos:start="175:31" pos:end="175:52">"ufep=1, format: %d\n"</literal></expr></argument>, <argument pos:start="175:55" pos:end="175:60"><expr pos:start="175:55" pos:end="175:60"><name pos:start="175:55" pos:end="175:60">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:45"><expr pos:start="177:13" pos:end="177:44"><name pos:start="177:13" pos:end="177:25"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:25">custom_pcf</name></name><operator pos:start="177:26" pos:end="177:26">=</operator> <call pos:start="177:28" pos:end="177:44"><name pos:start="177:28" pos:end="177:36">get_bits1</name><argument_list pos:start="177:37" pos:end="177:44">(<argument pos:start="177:38" pos:end="177:43"><expr pos:start="177:38" pos:end="177:43"><operator pos:start="177:38" pos:end="177:38">&amp;</operator><name pos:start="177:39" pos:end="177:43"><name pos:start="177:39" pos:end="177:39">s</name><operator pos:start="177:40" pos:end="177:41">-&gt;</operator><name pos:start="177:42" pos:end="177:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:43"><expr pos:start="179:13" pos:end="179:42"><name pos:start="179:13" pos:end="179:22"><name pos:start="179:13" pos:end="179:13">s</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:22">umvplus</name></name> <operator pos:start="179:24" pos:end="179:24">=</operator> <call pos:start="179:26" pos:end="179:42"><name pos:start="179:26" pos:end="179:34">get_bits1</name><argument_list pos:start="179:35" pos:end="179:42">(<argument pos:start="179:36" pos:end="179:41"><expr pos:start="179:36" pos:end="179:41"><operator pos:start="179:36" pos:end="179:36">&amp;</operator><name pos:start="179:37" pos:end="179:41"><name pos:start="179:37" pos:end="179:37">s</name><operator pos:start="179:38" pos:end="179:39">-&gt;</operator><name pos:start="179:40" pos:end="179:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="179:45" pos:end="179:76">/* Unrestricted Motion Vector */</comment>

            <if_stmt pos:start="181:13" pos:end="185:13"><if pos:start="181:13" pos:end="185:13">if <condition pos:start="181:16" pos:end="181:39">(<expr pos:start="181:17" pos:end="181:38"><call pos:start="181:17" pos:end="181:33"><name pos:start="181:17" pos:end="181:25">get_bits1</name><argument_list pos:start="181:26" pos:end="181:33">(<argument pos:start="181:27" pos:end="181:32"><expr pos:start="181:27" pos:end="181:32"><operator pos:start="181:27" pos:end="181:27">&amp;</operator><name pos:start="181:28" pos:end="181:32"><name pos:start="181:28" pos:end="181:28">s</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="181:35" pos:end="181:36">!=</operator> <literal type="number" pos:start="181:38" pos:end="181:38">0</literal></expr>)</condition> <block pos:start="181:41" pos:end="185:13">{<block_content pos:start="183:17" pos:end="183:103">

                <expr_stmt pos:start="183:17" pos:end="183:103"><expr pos:start="183:17" pos:end="183:102"><call pos:start="183:17" pos:end="183:102"><name pos:start="183:17" pos:end="183:22">av_log</name><argument_list pos:start="183:23" pos:end="183:102">(<argument pos:start="183:24" pos:end="183:31"><expr pos:start="183:24" pos:end="183:31"><name pos:start="183:24" pos:end="183:31"><name pos:start="183:24" pos:end="183:24">s</name><operator pos:start="183:25" pos:end="183:26">-&gt;</operator><name pos:start="183:27" pos:end="183:31">avctx</name></name></expr></argument>, <argument pos:start="183:34" pos:end="183:45"><expr pos:start="183:34" pos:end="183:45"><name pos:start="183:34" pos:end="183:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="183:48" pos:end="183:101"><expr pos:start="183:48" pos:end="183:101"><literal type="string" pos:start="183:48" pos:end="183:101">"Syntax-based Arithmetic Coding (SAC) not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:39"><expr pos:start="187:13" pos:end="187:38"><name pos:start="187:13" pos:end="187:19"><name pos:start="187:13" pos:end="187:13">s</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:19">obmc</name></name><operator pos:start="187:20" pos:end="187:20">=</operator> <call pos:start="187:22" pos:end="187:38"><name pos:start="187:22" pos:end="187:30">get_bits1</name><argument_list pos:start="187:31" pos:end="187:38">(<argument pos:start="187:32" pos:end="187:37"><expr pos:start="187:32" pos:end="187:37"><operator pos:start="187:32" pos:end="187:32">&amp;</operator><name pos:start="187:33" pos:end="187:37"><name pos:start="187:33" pos:end="187:33">s</name><operator pos:start="187:34" pos:end="187:35">-&gt;</operator><name pos:start="187:36" pos:end="187:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="187:41" pos:end="187:70">/* Advanced prediction mode */</comment>

            <expr_stmt pos:start="189:13" pos:end="189:44"><expr pos:start="189:13" pos:end="189:43"><name pos:start="189:13" pos:end="189:23"><name pos:start="189:13" pos:end="189:13">s</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:23">h263_aic</name></name> <operator pos:start="189:25" pos:end="189:25">=</operator> <call pos:start="189:27" pos:end="189:43"><name pos:start="189:27" pos:end="189:35">get_bits1</name><argument_list pos:start="189:36" pos:end="189:43">(<argument pos:start="189:37" pos:end="189:42"><expr pos:start="189:37" pos:end="189:42"><operator pos:start="189:37" pos:end="189:37">&amp;</operator><name pos:start="189:38" pos:end="189:42"><name pos:start="189:38" pos:end="189:38">s</name><operator pos:start="189:39" pos:end="189:40">-&gt;</operator><name pos:start="189:41" pos:end="189:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="189:46" pos:end="189:78">/* Advanced Intra Coding (AIC) */</comment>

            <expr_stmt pos:start="191:13" pos:end="191:46"><expr pos:start="191:13" pos:end="191:45"><name pos:start="191:13" pos:end="191:26"><name pos:start="191:13" pos:end="191:13">s</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:26">loop_filter</name></name><operator pos:start="191:27" pos:end="191:27">=</operator> <call pos:start="191:29" pos:end="191:45"><name pos:start="191:29" pos:end="191:37">get_bits1</name><argument_list pos:start="191:38" pos:end="191:45">(<argument pos:start="191:39" pos:end="191:44"><expr pos:start="191:39" pos:end="191:44"><operator pos:start="191:39" pos:end="191:39">&amp;</operator><name pos:start="191:40" pos:end="191:44"><name pos:start="191:40" pos:end="191:40">s</name><operator pos:start="191:41" pos:end="191:42">-&gt;</operator><name pos:start="191:43" pos:end="191:44">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:73"><expr pos:start="193:13" pos:end="193:72"><name pos:start="193:13" pos:end="193:30"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:30">unrestricted_mv</name></name> <operator pos:start="193:32" pos:end="193:32">=</operator> <name pos:start="193:34" pos:end="193:43"><name pos:start="193:34" pos:end="193:34">s</name><operator pos:start="193:35" pos:end="193:36">-&gt;</operator><name pos:start="193:37" pos:end="193:43">umvplus</name></name> <operator pos:start="193:45" pos:end="193:46">||</operator> <name pos:start="193:48" pos:end="193:54"><name pos:start="193:48" pos:end="193:48">s</name><operator pos:start="193:49" pos:end="193:50">-&gt;</operator><name pos:start="193:51" pos:end="193:54">obmc</name></name> <operator pos:start="193:56" pos:end="193:57">||</operator> <name pos:start="193:59" pos:end="193:72"><name pos:start="193:59" pos:end="193:59">s</name><operator pos:start="193:60" pos:end="193:61">-&gt;</operator><name pos:start="193:62" pos:end="193:72">loop_filter</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="197:13" pos:end="197:56"><expr pos:start="197:13" pos:end="197:55"><name pos:start="197:13" pos:end="197:36"><name pos:start="197:13" pos:end="197:13">s</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:36">h263_slice_structured</name></name><operator pos:start="197:37" pos:end="197:37">=</operator> <call pos:start="197:39" pos:end="197:55"><name pos:start="197:39" pos:end="197:47">get_bits1</name><argument_list pos:start="197:48" pos:end="197:55">(<argument pos:start="197:49" pos:end="197:54"><expr pos:start="197:49" pos:end="197:54"><operator pos:start="197:49" pos:end="197:49">&amp;</operator><name pos:start="197:50" pos:end="197:54"><name pos:start="197:50" pos:end="197:50">s</name><operator pos:start="197:51" pos:end="197:52">-&gt;</operator><name pos:start="197:53" pos:end="197:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="199:13" pos:end="203:13"><if pos:start="199:13" pos:end="203:13">if <condition pos:start="199:16" pos:end="199:39">(<expr pos:start="199:17" pos:end="199:38"><call pos:start="199:17" pos:end="199:33"><name pos:start="199:17" pos:end="199:25">get_bits1</name><argument_list pos:start="199:26" pos:end="199:33">(<argument pos:start="199:27" pos:end="199:32"><expr pos:start="199:27" pos:end="199:32"><operator pos:start="199:27" pos:end="199:27">&amp;</operator><name pos:start="199:28" pos:end="199:32"><name pos:start="199:28" pos:end="199:28">s</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="199:35" pos:end="199:36">!=</operator> <literal type="number" pos:start="199:38" pos:end="199:38">0</literal></expr>)</condition> <block pos:start="199:41" pos:end="203:13">{<block_content pos:start="201:17" pos:end="201:94">

                <expr_stmt pos:start="201:17" pos:end="201:94"><expr pos:start="201:17" pos:end="201:93"><call pos:start="201:17" pos:end="201:93"><name pos:start="201:17" pos:end="201:22">av_log</name><argument_list pos:start="201:23" pos:end="201:93">(<argument pos:start="201:24" pos:end="201:31"><expr pos:start="201:24" pos:end="201:31"><name pos:start="201:24" pos:end="201:31"><name pos:start="201:24" pos:end="201:24">s</name><operator pos:start="201:25" pos:end="201:26">-&gt;</operator><name pos:start="201:27" pos:end="201:31">avctx</name></name></expr></argument>, <argument pos:start="201:34" pos:end="201:45"><expr pos:start="201:34" pos:end="201:45"><name pos:start="201:34" pos:end="201:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="201:48" pos:end="201:92"><expr pos:start="201:48" pos:end="201:92"><literal type="string" pos:start="201:48" pos:end="201:92">"Reference Picture Selection not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="205:13" pos:end="209:13"><if pos:start="205:13" pos:end="209:13">if <condition pos:start="205:16" pos:end="205:39">(<expr pos:start="205:17" pos:end="205:38"><call pos:start="205:17" pos:end="205:33"><name pos:start="205:17" pos:end="205:25">get_bits1</name><argument_list pos:start="205:26" pos:end="205:33">(<argument pos:start="205:27" pos:end="205:32"><expr pos:start="205:27" pos:end="205:32"><operator pos:start="205:27" pos:end="205:27">&amp;</operator><name pos:start="205:28" pos:end="205:32"><name pos:start="205:28" pos:end="205:28">s</name><operator pos:start="205:29" pos:end="205:30">-&gt;</operator><name pos:start="205:31" pos:end="205:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="205:35" pos:end="205:36">!=</operator> <literal type="number" pos:start="205:38" pos:end="205:38">0</literal></expr>)</condition> <block pos:start="205:41" pos:end="209:13">{<block_content pos:start="207:17" pos:end="207:95">

                <expr_stmt pos:start="207:17" pos:end="207:95"><expr pos:start="207:17" pos:end="207:94"><call pos:start="207:17" pos:end="207:94"><name pos:start="207:17" pos:end="207:22">av_log</name><argument_list pos:start="207:23" pos:end="207:94">(<argument pos:start="207:24" pos:end="207:31"><expr pos:start="207:24" pos:end="207:31"><name pos:start="207:24" pos:end="207:31"><name pos:start="207:24" pos:end="207:24">s</name><operator pos:start="207:25" pos:end="207:26">-&gt;</operator><name pos:start="207:27" pos:end="207:31">avctx</name></name></expr></argument>, <argument pos:start="207:34" pos:end="207:45"><expr pos:start="207:34" pos:end="207:45"><name pos:start="207:34" pos:end="207:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="207:48" pos:end="207:93"><expr pos:start="207:48" pos:end="207:93"><literal type="string" pos:start="207:48" pos:end="207:93">"Independent Segment Decoding not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:48"><expr pos:start="211:13" pos:end="211:47"><name pos:start="211:13" pos:end="211:28"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:28">alt_inter_vlc</name></name><operator pos:start="211:29" pos:end="211:29">=</operator> <call pos:start="211:31" pos:end="211:47"><name pos:start="211:31" pos:end="211:39">get_bits1</name><argument_list pos:start="211:40" pos:end="211:47">(<argument pos:start="211:41" pos:end="211:46"><expr pos:start="211:41" pos:end="211:46"><operator pos:start="211:41" pos:end="211:41">&amp;</operator><name pos:start="211:42" pos:end="211:46"><name pos:start="211:42" pos:end="211:42">s</name><operator pos:start="211:43" pos:end="211:44">-&gt;</operator><name pos:start="211:45" pos:end="211:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:49"><expr pos:start="213:13" pos:end="213:48"><name pos:start="213:13" pos:end="213:29"><name pos:start="213:13" pos:end="213:13">s</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:29">modified_quant</name></name><operator pos:start="213:30" pos:end="213:30">=</operator> <call pos:start="213:32" pos:end="213:48"><name pos:start="213:32" pos:end="213:40">get_bits1</name><argument_list pos:start="213:41" pos:end="213:48">(<argument pos:start="213:42" pos:end="213:47"><expr pos:start="213:42" pos:end="213:47"><operator pos:start="213:42" pos:end="213:42">&amp;</operator><name pos:start="213:43" pos:end="213:47"><name pos:start="213:43" pos:end="213:43">s</name><operator pos:start="213:44" pos:end="213:45">-&gt;</operator><name pos:start="213:46" pos:end="213:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="215:13" pos:end="217:68"><if pos:start="215:13" pos:end="217:68">if<condition pos:start="215:15" pos:end="215:33">(<expr pos:start="215:16" pos:end="215:32"><name pos:start="215:16" pos:end="215:32"><name pos:start="215:16" pos:end="215:16">s</name><operator pos:start="215:17" pos:end="215:18">-&gt;</operator><name pos:start="215:19" pos:end="215:32">modified_quant</name></name></expr>)</condition><block type="pseudo" pos:start="217:17" pos:end="217:68"><block_content pos:start="217:17" pos:end="217:68">

                <expr_stmt pos:start="217:17" pos:end="217:68"><expr pos:start="217:17" pos:end="217:67"><name pos:start="217:17" pos:end="217:38"><name pos:start="217:17" pos:end="217:17">s</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:38">chroma_qscale_table</name></name><operator pos:start="217:39" pos:end="217:39">=</operator> <name pos:start="217:41" pos:end="217:67">ff_h263_chroma_qscale_table</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="221:13" pos:end="221:33"><expr pos:start="221:13" pos:end="221:32"><call pos:start="221:13" pos:end="221:32"><name pos:start="221:13" pos:end="221:21">skip_bits</name><argument_list pos:start="221:22" pos:end="221:32">(<argument pos:start="221:23" pos:end="221:28"><expr pos:start="221:23" pos:end="221:28"><operator pos:start="221:23" pos:end="221:23">&amp;</operator><name pos:start="221:24" pos:end="221:28"><name pos:start="221:24" pos:end="221:24">s</name><operator pos:start="221:25" pos:end="221:26">-&gt;</operator><name pos:start="221:27" pos:end="221:28">gb</name></name></expr></argument>, <argument pos:start="221:31" pos:end="221:31"><expr pos:start="221:31" pos:end="221:31"><literal type="number" pos:start="221:31" pos:end="221:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="221:35" pos:end="221:68">/* Prevent start code emulation */</comment>



            <expr_stmt pos:start="225:13" pos:end="225:33"><expr pos:start="225:13" pos:end="225:32"><call pos:start="225:13" pos:end="225:32"><name pos:start="225:13" pos:end="225:21">skip_bits</name><argument_list pos:start="225:22" pos:end="225:32">(<argument pos:start="225:23" pos:end="225:28"><expr pos:start="225:23" pos:end="225:28"><operator pos:start="225:23" pos:end="225:23">&amp;</operator><name pos:start="225:24" pos:end="225:28"><name pos:start="225:24" pos:end="225:24">s</name><operator pos:start="225:25" pos:end="225:26">-&gt;</operator><name pos:start="225:27" pos:end="225:28">gb</name></name></expr></argument>, <argument pos:start="225:31" pos:end="225:31"><expr pos:start="225:31" pos:end="225:31"><literal type="number" pos:start="225:31" pos:end="225:31">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="225:35" pos:end="225:48">/* Reserved */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="227:11" pos:end="233:9">else if <condition pos:start="227:19" pos:end="227:29">(<expr pos:start="227:20" pos:end="227:28"><name pos:start="227:20" pos:end="227:23">ufep</name> <operator pos:start="227:25" pos:end="227:26">!=</operator> <literal type="number" pos:start="227:28" pos:end="227:28">0</literal></expr>)</condition> <block pos:start="227:31" pos:end="233:9">{<block_content pos:start="229:13" pos:end="231:22">

            <expr_stmt pos:start="229:13" pos:end="229:73"><expr pos:start="229:13" pos:end="229:72"><call pos:start="229:13" pos:end="229:72"><name pos:start="229:13" pos:end="229:18">av_log</name><argument_list pos:start="229:19" pos:end="229:72">(<argument pos:start="229:20" pos:end="229:27"><expr pos:start="229:20" pos:end="229:27"><name pos:start="229:20" pos:end="229:27"><name pos:start="229:20" pos:end="229:20">s</name><operator pos:start="229:21" pos:end="229:22">-&gt;</operator><name pos:start="229:23" pos:end="229:27">avctx</name></name></expr></argument>, <argument pos:start="229:30" pos:end="229:41"><expr pos:start="229:30" pos:end="229:41"><name pos:start="229:30" pos:end="229:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="229:44" pos:end="229:65"><expr pos:start="229:44" pos:end="229:65"><literal type="string" pos:start="229:44" pos:end="229:65">"Bad UFEP type (%d)\n"</literal></expr></argument>, <argument pos:start="229:68" pos:end="229:71"><expr pos:start="229:68" pos:end="229:71"><name pos:start="229:68" pos:end="229:71">ufep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="231:13" pos:end="231:22">return <expr pos:start="231:20" pos:end="231:21"><operator pos:start="231:20" pos:end="231:20">-</operator><literal type="number" pos:start="231:21" pos:end="231:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="237:9" pos:end="237:21">/* MPPTYPE */</comment>

        <expr_stmt pos:start="239:9" pos:end="239:43"><expr pos:start="239:9" pos:end="239:42"><name pos:start="239:9" pos:end="239:20"><name pos:start="239:9" pos:end="239:9">s</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:20">pict_type</name></name> <operator pos:start="239:22" pos:end="239:22">=</operator> <call pos:start="239:24" pos:end="239:42"><name pos:start="239:24" pos:end="239:31">get_bits</name><argument_list pos:start="239:32" pos:end="239:42">(<argument pos:start="239:33" pos:end="239:38"><expr pos:start="239:33" pos:end="239:38"><operator pos:start="239:33" pos:end="239:33">&amp;</operator><name pos:start="239:34" pos:end="239:38"><name pos:start="239:34" pos:end="239:34">s</name><operator pos:start="239:35" pos:end="239:36">-&gt;</operator><name pos:start="239:37" pos:end="239:38">gb</name></name></expr></argument>, <argument pos:start="239:41" pos:end="239:41"><expr pos:start="239:41" pos:end="239:41"><literal type="number" pos:start="239:41" pos:end="239:41">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="241:9" pos:end="257:9">switch<condition pos:start="241:15" pos:end="241:28">(<expr pos:start="241:16" pos:end="241:27"><name pos:start="241:16" pos:end="241:27"><name pos:start="241:16" pos:end="241:16">s</name><operator pos:start="241:17" pos:end="241:18">-&gt;</operator><name pos:start="241:19" pos:end="241:27">pict_type</name></name></expr>)</condition><block pos:start="241:29" pos:end="257:9">{<block_content pos:start="243:9" pos:end="255:22">

        <case pos:start="243:9" pos:end="243:15">case <expr pos:start="243:14" pos:end="243:14"><literal type="number" pos:start="243:14" pos:end="243:14">0</literal></expr>:</case> <expr_stmt pos:start="243:17" pos:end="243:48"><expr pos:start="243:17" pos:end="243:47"><name pos:start="243:17" pos:end="243:28"><name pos:start="243:17" pos:end="243:17">s</name><operator pos:start="243:18" pos:end="243:19">-&gt;</operator><name pos:start="243:20" pos:end="243:28">pict_type</name></name><operator pos:start="243:29" pos:end="243:29">=</operator> <name pos:start="243:31" pos:end="243:47">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt><break pos:start="243:49" pos:end="243:54">break;</break>

        <case pos:start="245:9" pos:end="245:15">case <expr pos:start="245:14" pos:end="245:14"><literal type="number" pos:start="245:14" pos:end="245:14">1</literal></expr>:</case> <expr_stmt pos:start="245:17" pos:end="245:48"><expr pos:start="245:17" pos:end="245:47"><name pos:start="245:17" pos:end="245:28"><name pos:start="245:17" pos:end="245:17">s</name><operator pos:start="245:18" pos:end="245:19">-&gt;</operator><name pos:start="245:20" pos:end="245:28">pict_type</name></name><operator pos:start="245:29" pos:end="245:29">=</operator> <name pos:start="245:31" pos:end="245:47">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt><break pos:start="245:49" pos:end="245:54">break;</break>

        <case pos:start="247:9" pos:end="247:15">case <expr pos:start="247:14" pos:end="247:14"><literal type="number" pos:start="247:14" pos:end="247:14">2</literal></expr>:</case> <expr_stmt pos:start="247:17" pos:end="247:48"><expr pos:start="247:17" pos:end="247:47"><name pos:start="247:17" pos:end="247:28"><name pos:start="247:17" pos:end="247:17">s</name><operator pos:start="247:18" pos:end="247:19">-&gt;</operator><name pos:start="247:20" pos:end="247:28">pict_type</name></name><operator pos:start="247:29" pos:end="247:29">=</operator> <name pos:start="247:31" pos:end="247:47">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt><expr_stmt pos:start="247:49" pos:end="247:64"><expr pos:start="247:49" pos:end="247:63"><name pos:start="247:49" pos:end="247:59"><name pos:start="247:49" pos:end="247:49">s</name><operator pos:start="247:50" pos:end="247:51">-&gt;</operator><name pos:start="247:52" pos:end="247:59">pb_frame</name></name> <operator pos:start="247:61" pos:end="247:61">=</operator> <literal type="number" pos:start="247:63" pos:end="247:63">3</literal></expr>;</expr_stmt><break pos:start="247:65" pos:end="247:70">break;</break>

        <case pos:start="249:9" pos:end="249:15">case <expr pos:start="249:14" pos:end="249:14"><literal type="number" pos:start="249:14" pos:end="249:14">3</literal></expr>:</case> <expr_stmt pos:start="249:17" pos:end="249:48"><expr pos:start="249:17" pos:end="249:47"><name pos:start="249:17" pos:end="249:28"><name pos:start="249:17" pos:end="249:17">s</name><operator pos:start="249:18" pos:end="249:19">-&gt;</operator><name pos:start="249:20" pos:end="249:28">pict_type</name></name><operator pos:start="249:29" pos:end="249:29">=</operator> <name pos:start="249:31" pos:end="249:47">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt><break pos:start="249:49" pos:end="249:54">break;</break>

        <case pos:start="251:9" pos:end="251:15">case <expr pos:start="251:14" pos:end="251:14"><literal type="number" pos:start="251:14" pos:end="251:14">7</literal></expr>:</case> <expr_stmt pos:start="251:17" pos:end="251:48"><expr pos:start="251:17" pos:end="251:47"><name pos:start="251:17" pos:end="251:28"><name pos:start="251:17" pos:end="251:17">s</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:28">pict_type</name></name><operator pos:start="251:29" pos:end="251:29">=</operator> <name pos:start="251:31" pos:end="251:47">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt><break pos:start="251:49" pos:end="251:54">break;</break> <comment type="line" pos:start="251:56" pos:end="251:61">//ZYGO</comment>

        <default pos:start="253:9" pos:end="253:16">default:</default>

            <return pos:start="255:13" pos:end="255:22">return <expr pos:start="255:20" pos:end="255:21"><operator pos:start="255:20" pos:end="255:20">-</operator><literal type="number" pos:start="255:21" pos:end="255:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="259:9" pos:end="259:29"><expr pos:start="259:9" pos:end="259:28"><call pos:start="259:9" pos:end="259:28"><name pos:start="259:9" pos:end="259:17">skip_bits</name><argument_list pos:start="259:18" pos:end="259:28">(<argument pos:start="259:19" pos:end="259:24"><expr pos:start="259:19" pos:end="259:24"><operator pos:start="259:19" pos:end="259:19">&amp;</operator><name pos:start="259:20" pos:end="259:24"><name pos:start="259:20" pos:end="259:20">s</name><operator pos:start="259:21" pos:end="259:22">-&gt;</operator><name pos:start="259:23" pos:end="259:24">gb</name></name></expr></argument>, <argument pos:start="259:27" pos:end="259:27"><expr pos:start="259:27" pos:end="259:27"><literal type="number" pos:start="259:27" pos:end="259:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="261:9" pos:end="261:43"><expr pos:start="261:9" pos:end="261:42"><name pos:start="261:9" pos:end="261:22"><name pos:start="261:9" pos:end="261:9">s</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:22">no_rounding</name></name> <operator pos:start="261:24" pos:end="261:24">=</operator> <call pos:start="261:26" pos:end="261:42"><name pos:start="261:26" pos:end="261:34">get_bits1</name><argument_list pos:start="261:35" pos:end="261:42">(<argument pos:start="261:36" pos:end="261:41"><expr pos:start="261:36" pos:end="261:41"><operator pos:start="261:36" pos:end="261:36">&amp;</operator><name pos:start="261:37" pos:end="261:41"><name pos:start="261:37" pos:end="261:37">s</name><operator pos:start="261:38" pos:end="261:39">-&gt;</operator><name pos:start="261:40" pos:end="261:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="263:29"><expr pos:start="263:9" pos:end="263:28"><call pos:start="263:9" pos:end="263:28"><name pos:start="263:9" pos:end="263:17">skip_bits</name><argument_list pos:start="263:18" pos:end="263:28">(<argument pos:start="263:19" pos:end="263:24"><expr pos:start="263:19" pos:end="263:24"><operator pos:start="263:19" pos:end="263:19">&amp;</operator><name pos:start="263:20" pos:end="263:24"><name pos:start="263:20" pos:end="263:20">s</name><operator pos:start="263:21" pos:end="263:22">-&gt;</operator><name pos:start="263:23" pos:end="263:24">gb</name></name></expr></argument>, <argument pos:start="263:27" pos:end="263:27"><expr pos:start="263:27" pos:end="263:27"><literal type="number" pos:start="263:27" pos:end="263:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="267:9" pos:end="267:40">/* Get the picture dimensions */</comment>

        <if_stmt pos:start="269:9" pos:end="369:9"><if pos:start="269:9" pos:end="369:9">if <condition pos:start="269:12" pos:end="269:17">(<expr pos:start="269:13" pos:end="269:16"><name pos:start="269:13" pos:end="269:16">ufep</name></expr>)</condition> <block pos:start="269:19" pos:end="369:9">{<block_content pos:start="271:13" pos:end="367:13">

            <if_stmt pos:start="271:13" pos:end="327:13"><if pos:start="271:13" pos:end="319:13">if <condition pos:start="271:16" pos:end="271:28">(<expr pos:start="271:17" pos:end="271:27"><name pos:start="271:17" pos:end="271:22">format</name> <operator pos:start="271:24" pos:end="271:25">==</operator> <literal type="number" pos:start="271:27" pos:end="271:27">6</literal></expr>)</condition> <block pos:start="271:30" pos:end="319:13">{<block_content pos:start="275:17" pos:end="317:17">

                <comment type="block" pos:start="273:17" pos:end="273:51">/* Custom Picture Format (CPFMT) */</comment>

                <expr_stmt pos:start="275:17" pos:end="275:59"><expr pos:start="275:17" pos:end="275:58"><name pos:start="275:17" pos:end="275:36"><name pos:start="275:17" pos:end="275:17">s</name><operator pos:start="275:18" pos:end="275:19">-&gt;</operator><name pos:start="275:20" pos:end="275:36">aspect_ratio_info</name></name> <operator pos:start="275:38" pos:end="275:38">=</operator> <call pos:start="275:40" pos:end="275:58"><name pos:start="275:40" pos:end="275:47">get_bits</name><argument_list pos:start="275:48" pos:end="275:58">(<argument pos:start="275:49" pos:end="275:54"><expr pos:start="275:49" pos:end="275:54"><operator pos:start="275:49" pos:end="275:49">&amp;</operator><name pos:start="275:50" pos:end="275:54"><name pos:start="275:50" pos:end="275:50">s</name><operator pos:start="275:51" pos:end="275:52">-&gt;</operator><name pos:start="275:53" pos:end="275:54">gb</name></name></expr></argument>, <argument pos:start="275:57" pos:end="275:57"><expr pos:start="275:57" pos:end="275:57"><literal type="number" pos:start="275:57" pos:end="275:57">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="277:17" pos:end="277:72"><expr pos:start="277:17" pos:end="277:71"><call pos:start="277:17" pos:end="277:71"><name pos:start="277:17" pos:end="277:23">av_dlog</name><argument_list pos:start="277:24" pos:end="277:71">(<argument pos:start="277:25" pos:end="277:32"><expr pos:start="277:25" pos:end="277:32"><name pos:start="277:25" pos:end="277:32"><name pos:start="277:25" pos:end="277:25">s</name><operator pos:start="277:26" pos:end="277:27">-&gt;</operator><name pos:start="277:28" pos:end="277:32">avctx</name></name></expr></argument>, <argument pos:start="277:35" pos:end="277:48"><expr pos:start="277:35" pos:end="277:48"><literal type="string" pos:start="277:35" pos:end="277:48">"aspect: %d\n"</literal></expr></argument>, <argument pos:start="277:51" pos:end="277:70"><expr pos:start="277:51" pos:end="277:70"><name pos:start="277:51" pos:end="277:70"><name pos:start="277:51" pos:end="277:51">s</name><operator pos:start="277:52" pos:end="277:53">-&gt;</operator><name pos:start="277:54" pos:end="277:70">aspect_ratio_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="279:17" pos:end="295:18">/* aspect ratios:

                0 - forbidden

                1 - 1:1

                2 - 12:11 (CIF 4:3)

                3 - 10:11 (525-type 4:3)

                4 - 16:11 (CIF 16:9)

                5 - 40:33 (525-type 16:9)

                6-14 - reserved

                */</comment>

                <expr_stmt pos:start="297:17" pos:end="297:54"><expr pos:start="297:17" pos:end="297:53"><name pos:start="297:17" pos:end="297:21">width</name> <operator pos:start="297:23" pos:end="297:23">=</operator> <operator pos:start="297:25" pos:end="297:25">(</operator><call pos:start="297:26" pos:end="297:44"><name pos:start="297:26" pos:end="297:33">get_bits</name><argument_list pos:start="297:34" pos:end="297:44">(<argument pos:start="297:35" pos:end="297:40"><expr pos:start="297:35" pos:end="297:40"><operator pos:start="297:35" pos:end="297:35">&amp;</operator><name pos:start="297:36" pos:end="297:40"><name pos:start="297:36" pos:end="297:36">s</name><operator pos:start="297:37" pos:end="297:38">-&gt;</operator><name pos:start="297:39" pos:end="297:40">gb</name></name></expr></argument>, <argument pos:start="297:43" pos:end="297:43"><expr pos:start="297:43" pos:end="297:43"><literal type="number" pos:start="297:43" pos:end="297:43">9</literal></expr></argument>)</argument_list></call> <operator pos:start="297:46" pos:end="297:46">+</operator> <literal type="number" pos:start="297:48" pos:end="297:48">1</literal><operator pos:start="297:49" pos:end="297:49">)</operator> <operator pos:start="297:51" pos:end="297:51">*</operator> <literal type="number" pos:start="297:53" pos:end="297:53">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="299:17" pos:end="299:35"><expr pos:start="299:17" pos:end="299:34"><call pos:start="299:17" pos:end="299:34"><name pos:start="299:17" pos:end="299:26">skip_bits1</name><argument_list pos:start="299:27" pos:end="299:34">(<argument pos:start="299:28" pos:end="299:33"><expr pos:start="299:28" pos:end="299:33"><operator pos:start="299:28" pos:end="299:28">&amp;</operator><name pos:start="299:29" pos:end="299:33"><name pos:start="299:29" pos:end="299:29">s</name><operator pos:start="299:30" pos:end="299:31">-&gt;</operator><name pos:start="299:32" pos:end="299:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="301:17" pos:end="301:49"><expr pos:start="301:17" pos:end="301:48"><name pos:start="301:17" pos:end="301:22">height</name> <operator pos:start="301:24" pos:end="301:24">=</operator> <call pos:start="301:26" pos:end="301:44"><name pos:start="301:26" pos:end="301:33">get_bits</name><argument_list pos:start="301:34" pos:end="301:44">(<argument pos:start="301:35" pos:end="301:40"><expr pos:start="301:35" pos:end="301:40"><operator pos:start="301:35" pos:end="301:35">&amp;</operator><name pos:start="301:36" pos:end="301:40"><name pos:start="301:36" pos:end="301:36">s</name><operator pos:start="301:37" pos:end="301:38">-&gt;</operator><name pos:start="301:39" pos:end="301:40">gb</name></name></expr></argument>, <argument pos:start="301:43" pos:end="301:43"><expr pos:start="301:43" pos:end="301:43"><literal type="number" pos:start="301:43" pos:end="301:43">9</literal></expr></argument>)</argument_list></call> <operator pos:start="301:46" pos:end="301:46">*</operator> <literal type="number" pos:start="301:48" pos:end="301:48">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="303:17" pos:end="303:83"><expr pos:start="303:17" pos:end="303:82"><call pos:start="303:17" pos:end="303:82"><name pos:start="303:17" pos:end="303:23">av_dlog</name><argument_list pos:start="303:24" pos:end="303:82">(<argument pos:start="303:25" pos:end="303:32"><expr pos:start="303:25" pos:end="303:32"><name pos:start="303:25" pos:end="303:32"><name pos:start="303:25" pos:end="303:25">s</name><operator pos:start="303:26" pos:end="303:27">-&gt;</operator><name pos:start="303:28" pos:end="303:32">avctx</name></name></expr></argument>, <argument pos:start="303:35" pos:end="303:68"><expr pos:start="303:35" pos:end="303:68"><literal type="string" pos:start="303:35" pos:end="303:68">"\nH.263+ Custom picture: %dx%d\n"</literal></expr></argument>,<argument pos:start="303:70" pos:end="303:74"><expr pos:start="303:70" pos:end="303:74"><name pos:start="303:70" pos:end="303:74">width</name></expr></argument>,<argument pos:start="303:76" pos:end="303:81"><expr pos:start="303:76" pos:end="303:81"><name pos:start="303:76" pos:end="303:81">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="305:17" pos:end="317:17"><if pos:start="305:17" pos:end="313:17">if <condition pos:start="305:20" pos:end="305:63">(<expr pos:start="305:21" pos:end="305:62"><name pos:start="305:21" pos:end="305:40"><name pos:start="305:21" pos:end="305:21">s</name><operator pos:start="305:22" pos:end="305:23">-&gt;</operator><name pos:start="305:24" pos:end="305:40">aspect_ratio_info</name></name> <operator pos:start="305:42" pos:end="305:43">==</operator> <name pos:start="305:45" pos:end="305:62">FF_ASPECT_EXTENDED</name></expr>)</condition> <block pos:start="305:65" pos:end="313:17">{<block_content pos:start="309:21" pos:end="311:75">

                    <comment type="block" pos:start="307:21" pos:end="307:45">/* aspected dimensions */</comment>

                    <expr_stmt pos:start="309:21" pos:end="309:75"><expr pos:start="309:21" pos:end="309:74"><name pos:start="309:21" pos:end="309:53"><name pos:start="309:21" pos:end="309:21">s</name><operator pos:start="309:22" pos:end="309:23">-&gt;</operator><name pos:start="309:24" pos:end="309:28">avctx</name><operator pos:start="309:29" pos:end="309:30">-&gt;</operator><name pos:start="309:31" pos:end="309:49">sample_aspect_ratio</name><operator pos:start="309:50" pos:end="309:50">.</operator><name pos:start="309:51" pos:end="309:53">num</name></name><operator pos:start="309:54" pos:end="309:54">=</operator> <call pos:start="309:56" pos:end="309:74"><name pos:start="309:56" pos:end="309:63">get_bits</name><argument_list pos:start="309:64" pos:end="309:74">(<argument pos:start="309:65" pos:end="309:70"><expr pos:start="309:65" pos:end="309:70"><operator pos:start="309:65" pos:end="309:65">&amp;</operator><name pos:start="309:66" pos:end="309:70"><name pos:start="309:66" pos:end="309:66">s</name><operator pos:start="309:67" pos:end="309:68">-&gt;</operator><name pos:start="309:69" pos:end="309:70">gb</name></name></expr></argument>, <argument pos:start="309:73" pos:end="309:73"><expr pos:start="309:73" pos:end="309:73"><literal type="number" pos:start="309:73" pos:end="309:73">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="311:21" pos:end="311:75"><expr pos:start="311:21" pos:end="311:74"><name pos:start="311:21" pos:end="311:53"><name pos:start="311:21" pos:end="311:21">s</name><operator pos:start="311:22" pos:end="311:23">-&gt;</operator><name pos:start="311:24" pos:end="311:28">avctx</name><operator pos:start="311:29" pos:end="311:30">-&gt;</operator><name pos:start="311:31" pos:end="311:49">sample_aspect_ratio</name><operator pos:start="311:50" pos:end="311:50">.</operator><name pos:start="311:51" pos:end="311:53">den</name></name><operator pos:start="311:54" pos:end="311:54">=</operator> <call pos:start="311:56" pos:end="311:74"><name pos:start="311:56" pos:end="311:63">get_bits</name><argument_list pos:start="311:64" pos:end="311:74">(<argument pos:start="311:65" pos:end="311:70"><expr pos:start="311:65" pos:end="311:70"><operator pos:start="311:65" pos:end="311:65">&amp;</operator><name pos:start="311:66" pos:end="311:70"><name pos:start="311:66" pos:end="311:66">s</name><operator pos:start="311:67" pos:end="311:68">-&gt;</operator><name pos:start="311:69" pos:end="311:70">gb</name></name></expr></argument>, <argument pos:start="311:73" pos:end="311:73"><expr pos:start="311:73" pos:end="311:73"><literal type="number" pos:start="311:73" pos:end="311:73">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="313:18" pos:end="317:17">else<block pos:start="313:22" pos:end="317:17">{<block_content pos:start="315:21" pos:end="315:94">

                    <expr_stmt pos:start="315:21" pos:end="315:94"><expr pos:start="315:21" pos:end="315:93"><name pos:start="315:21" pos:end="315:49"><name pos:start="315:21" pos:end="315:21">s</name><operator pos:start="315:22" pos:end="315:23">-&gt;</operator><name pos:start="315:24" pos:end="315:28">avctx</name><operator pos:start="315:29" pos:end="315:30">-&gt;</operator><name pos:start="315:31" pos:end="315:49">sample_aspect_ratio</name></name><operator pos:start="315:50" pos:end="315:50">=</operator> <name pos:start="315:52" pos:end="315:93"><name pos:start="315:52" pos:end="315:71">ff_h263_pixel_aspect</name><index pos:start="315:72" pos:end="315:93">[<expr pos:start="315:73" pos:end="315:92"><name pos:start="315:73" pos:end="315:92"><name pos:start="315:73" pos:end="315:73">s</name><operator pos:start="315:74" pos:end="315:75">-&gt;</operator><name pos:start="315:76" pos:end="315:92">aspect_ratio_info</name></name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="319:15" pos:end="327:13">else <block pos:start="319:20" pos:end="327:13">{<block_content pos:start="321:17" pos:end="325:67">

                <expr_stmt pos:start="321:17" pos:end="321:50"><expr pos:start="321:17" pos:end="321:49"><name pos:start="321:17" pos:end="321:21">width</name> <operator pos:start="321:23" pos:end="321:23">=</operator> <name pos:start="321:25" pos:end="321:49"><name pos:start="321:25" pos:end="321:38">ff_h263_format</name><index pos:start="321:39" pos:end="321:46">[<expr pos:start="321:40" pos:end="321:45"><name pos:start="321:40" pos:end="321:45">format</name></expr>]</index><index pos:start="321:47" pos:end="321:49">[<expr pos:start="321:48" pos:end="321:48"><literal type="number" pos:start="321:48" pos:end="321:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="323:17" pos:end="323:51"><expr pos:start="323:17" pos:end="323:50"><name pos:start="323:17" pos:end="323:22">height</name> <operator pos:start="323:24" pos:end="323:24">=</operator> <name pos:start="323:26" pos:end="323:50"><name pos:start="323:26" pos:end="323:39">ff_h263_format</name><index pos:start="323:40" pos:end="323:47">[<expr pos:start="323:41" pos:end="323:46"><name pos:start="323:41" pos:end="323:46">format</name></expr>]</index><index pos:start="323:48" pos:end="323:50">[<expr pos:start="323:49" pos:end="323:49"><literal type="number" pos:start="323:49" pos:end="323:49">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="325:17" pos:end="325:67"><expr pos:start="325:17" pos:end="325:66"><name pos:start="325:17" pos:end="325:45"><name pos:start="325:17" pos:end="325:17">s</name><operator pos:start="325:18" pos:end="325:19">-&gt;</operator><name pos:start="325:20" pos:end="325:24">avctx</name><operator pos:start="325:25" pos:end="325:26">-&gt;</operator><name pos:start="325:27" pos:end="325:45">sample_aspect_ratio</name></name><operator pos:start="325:46" pos:end="325:46">=</operator> <operator pos:start="325:48" pos:end="325:48">(</operator><name pos:start="325:49" pos:end="325:58">AVRational</name><operator pos:start="325:59" pos:end="325:59">)</operator><block pos:start="325:60" pos:end="325:66">{<expr pos:start="325:61" pos:end="325:62"><literal type="number" pos:start="325:61" pos:end="325:62">12</literal></expr>,<expr pos:start="325:64" pos:end="325:65"><literal type="number" pos:start="325:64" pos:end="325:65">11</literal></expr>}</block></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="329:13" pos:end="331:26"><if pos:start="329:13" pos:end="331:26">if <condition pos:start="329:16" pos:end="329:46">(<expr pos:start="329:17" pos:end="329:45"><operator pos:start="329:17" pos:end="329:17">(</operator><name pos:start="329:18" pos:end="329:22">width</name> <operator pos:start="329:24" pos:end="329:25">==</operator> <literal type="number" pos:start="329:27" pos:end="329:27">0</literal><operator pos:start="329:28" pos:end="329:28">)</operator> <operator pos:start="329:30" pos:end="329:31">||</operator> <operator pos:start="329:33" pos:end="329:33">(</operator><name pos:start="329:34" pos:end="329:39">height</name> <operator pos:start="329:41" pos:end="329:42">==</operator> <literal type="number" pos:start="329:44" pos:end="329:44">0</literal><operator pos:start="329:45" pos:end="329:45">)</operator></expr>)</condition><block type="pseudo" pos:start="331:17" pos:end="331:26"><block_content pos:start="331:17" pos:end="331:26">

                <return pos:start="331:17" pos:end="331:26">return <expr pos:start="331:24" pos:end="331:25"><operator pos:start="331:24" pos:end="331:24">-</operator><literal type="number" pos:start="331:25" pos:end="331:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:29"><expr pos:start="333:13" pos:end="333:28"><name pos:start="333:13" pos:end="333:20"><name pos:start="333:13" pos:end="333:13">s</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:20">width</name></name> <operator pos:start="333:22" pos:end="333:22">=</operator> <name pos:start="333:24" pos:end="333:28">width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="335:13" pos:end="335:31"><expr pos:start="335:13" pos:end="335:30"><name pos:start="335:13" pos:end="335:21"><name pos:start="335:13" pos:end="335:13">s</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:21">height</name></name> <operator pos:start="335:23" pos:end="335:23">=</operator> <name pos:start="335:25" pos:end="335:30">height</name></expr>;</expr_stmt>



            <if_stmt pos:start="339:13" pos:end="367:13"><if pos:start="339:13" pos:end="363:13">if<condition pos:start="339:15" pos:end="339:29">(<expr pos:start="339:16" pos:end="339:28"><name pos:start="339:16" pos:end="339:28"><name pos:start="339:16" pos:end="339:16">s</name><operator pos:start="339:17" pos:end="339:18">-&gt;</operator><name pos:start="339:19" pos:end="339:28">custom_pcf</name></name></expr>)</condition><block pos:start="339:30" pos:end="363:13">{<block_content pos:start="341:17" pos:end="361:47">

                <decl_stmt pos:start="341:17" pos:end="341:24"><decl pos:start="341:17" pos:end="341:23"><type pos:start="341:17" pos:end="341:19"><name pos:start="341:17" pos:end="341:19">int</name></type> <name pos:start="341:21" pos:end="341:23">gcd</name></decl>;</decl_stmt>

                <expr_stmt pos:start="343:17" pos:end="343:49"><expr pos:start="343:17" pos:end="343:48"><name pos:start="343:17" pos:end="343:39"><name pos:start="343:17" pos:end="343:17">s</name><operator pos:start="343:18" pos:end="343:19">-&gt;</operator><name pos:start="343:20" pos:end="343:24">avctx</name><operator pos:start="343:25" pos:end="343:26">-&gt;</operator><name pos:start="343:27" pos:end="343:35">time_base</name><operator pos:start="343:36" pos:end="343:36">.</operator><name pos:start="343:37" pos:end="343:39">den</name></name><operator pos:start="343:40" pos:end="343:40">=</operator> <literal type="number" pos:start="343:42" pos:end="343:48">1800000</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="345:17" pos:end="345:66"><expr pos:start="345:17" pos:end="345:65"><name pos:start="345:17" pos:end="345:39"><name pos:start="345:17" pos:end="345:17">s</name><operator pos:start="345:18" pos:end="345:19">-&gt;</operator><name pos:start="345:20" pos:end="345:24">avctx</name><operator pos:start="345:25" pos:end="345:26">-&gt;</operator><name pos:start="345:27" pos:end="345:35">time_base</name><operator pos:start="345:36" pos:end="345:36">.</operator><name pos:start="345:37" pos:end="345:39">num</name></name><operator pos:start="345:40" pos:end="345:40">=</operator> <literal type="number" pos:start="345:42" pos:end="345:47">1000</literal> <operator pos:start="345:47" pos:end="345:47">+</operator> <call pos:start="345:49" pos:end="345:65"><name pos:start="345:49" pos:end="345:57">get_bits1</name><argument_list pos:start="345:58" pos:end="345:65">(<argument pos:start="345:59" pos:end="345:64"><expr pos:start="345:59" pos:end="345:64"><operator pos:start="345:59" pos:end="345:59">&amp;</operator><name pos:start="345:60" pos:end="345:64"><name pos:start="345:60" pos:end="345:60">s</name><operator pos:start="345:61" pos:end="345:62">-&gt;</operator><name pos:start="345:63" pos:end="345:64">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="347:17" pos:end="347:62"><expr pos:start="347:17" pos:end="347:61"><name pos:start="347:17" pos:end="347:39"><name pos:start="347:17" pos:end="347:17">s</name><operator pos:start="347:18" pos:end="347:19">-&gt;</operator><name pos:start="347:20" pos:end="347:24">avctx</name><operator pos:start="347:25" pos:end="347:26">-&gt;</operator><name pos:start="347:27" pos:end="347:35">time_base</name><operator pos:start="347:36" pos:end="347:36">.</operator><name pos:start="347:37" pos:end="347:39">num</name></name><operator pos:start="347:40" pos:end="347:41">*=</operator> <call pos:start="347:43" pos:end="347:61"><name pos:start="347:43" pos:end="347:50">get_bits</name><argument_list pos:start="347:51" pos:end="347:61">(<argument pos:start="347:52" pos:end="347:57"><expr pos:start="347:52" pos:end="347:57"><operator pos:start="347:52" pos:end="347:52">&amp;</operator><name pos:start="347:53" pos:end="347:57"><name pos:start="347:53" pos:end="347:53">s</name><operator pos:start="347:54" pos:end="347:55">-&gt;</operator><name pos:start="347:56" pos:end="347:57">gb</name></name></expr></argument>, <argument pos:start="347:60" pos:end="347:60"><expr pos:start="347:60" pos:end="347:60"><literal type="number" pos:start="347:60" pos:end="347:60">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="349:17" pos:end="355:17"><if pos:start="349:17" pos:end="355:17">if<condition pos:start="349:19" pos:end="349:48">(<expr pos:start="349:20" pos:end="349:47"><name pos:start="349:20" pos:end="349:42"><name pos:start="349:20" pos:end="349:20">s</name><operator pos:start="349:21" pos:end="349:22">-&gt;</operator><name pos:start="349:23" pos:end="349:27">avctx</name><operator pos:start="349:28" pos:end="349:29">-&gt;</operator><name pos:start="349:30" pos:end="349:38">time_base</name><operator pos:start="349:39" pos:end="349:39">.</operator><name pos:start="349:40" pos:end="349:42">num</name></name> <operator pos:start="349:44" pos:end="349:45">==</operator> <literal type="number" pos:start="349:47" pos:end="349:47">0</literal></expr>)</condition><block pos:start="349:49" pos:end="355:17">{<block_content pos:start="351:21" pos:end="353:30">

                    <expr_stmt pos:start="351:21" pos:end="351:64"><expr pos:start="351:21" pos:end="351:63"><call pos:start="351:21" pos:end="351:63"><name pos:start="351:21" pos:end="351:26">av_log</name><argument_list pos:start="351:27" pos:end="351:63">(<argument pos:start="351:28" pos:end="351:28"><expr pos:start="351:28" pos:end="351:28"><name pos:start="351:28" pos:end="351:28">s</name></expr></argument>, <argument pos:start="351:31" pos:end="351:42"><expr pos:start="351:31" pos:end="351:42"><name pos:start="351:31" pos:end="351:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="351:45" pos:end="351:62"><expr pos:start="351:45" pos:end="351:62"><literal type="string" pos:start="351:45" pos:end="351:62">"zero framerate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="353:21" pos:end="353:30">return <expr pos:start="353:28" pos:end="353:29"><operator pos:start="353:28" pos:end="353:28">-</operator><literal type="number" pos:start="353:29" pos:end="353:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="357:17" pos:end="357:78"><expr pos:start="357:17" pos:end="357:77"><name pos:start="357:17" pos:end="357:19">gcd</name><operator pos:start="357:20" pos:end="357:20">=</operator> <call pos:start="357:22" pos:end="357:77"><name pos:start="357:22" pos:end="357:27">av_gcd</name><argument_list pos:start="357:28" pos:end="357:77">(<argument pos:start="357:29" pos:end="357:51"><expr pos:start="357:29" pos:end="357:51"><name pos:start="357:29" pos:end="357:51"><name pos:start="357:29" pos:end="357:29">s</name><operator pos:start="357:30" pos:end="357:31">-&gt;</operator><name pos:start="357:32" pos:end="357:36">avctx</name><operator pos:start="357:37" pos:end="357:38">-&gt;</operator><name pos:start="357:39" pos:end="357:47">time_base</name><operator pos:start="357:48" pos:end="357:48">.</operator><name pos:start="357:49" pos:end="357:51">den</name></name></expr></argument>, <argument pos:start="357:54" pos:end="357:76"><expr pos:start="357:54" pos:end="357:76"><name pos:start="357:54" pos:end="357:76"><name pos:start="357:54" pos:end="357:54">s</name><operator pos:start="357:55" pos:end="357:56">-&gt;</operator><name pos:start="357:57" pos:end="357:61">avctx</name><operator pos:start="357:62" pos:end="357:63">-&gt;</operator><name pos:start="357:64" pos:end="357:72">time_base</name><operator pos:start="357:73" pos:end="357:73">.</operator><name pos:start="357:74" pos:end="357:76">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="359:17" pos:end="359:47"><expr pos:start="359:17" pos:end="359:46"><name pos:start="359:17" pos:end="359:39"><name pos:start="359:17" pos:end="359:17">s</name><operator pos:start="359:18" pos:end="359:19">-&gt;</operator><name pos:start="359:20" pos:end="359:24">avctx</name><operator pos:start="359:25" pos:end="359:26">-&gt;</operator><name pos:start="359:27" pos:end="359:35">time_base</name><operator pos:start="359:36" pos:end="359:36">.</operator><name pos:start="359:37" pos:end="359:39">den</name></name> <operator pos:start="359:41" pos:end="359:42">/=</operator> <name pos:start="359:44" pos:end="359:46">gcd</name></expr>;</expr_stmt>

                <expr_stmt pos:start="361:17" pos:end="361:47"><expr pos:start="361:17" pos:end="361:46"><name pos:start="361:17" pos:end="361:39"><name pos:start="361:17" pos:end="361:17">s</name><operator pos:start="361:18" pos:end="361:19">-&gt;</operator><name pos:start="361:20" pos:end="361:24">avctx</name><operator pos:start="361:25" pos:end="361:26">-&gt;</operator><name pos:start="361:27" pos:end="361:35">time_base</name><operator pos:start="361:36" pos:end="361:36">.</operator><name pos:start="361:37" pos:end="361:39">num</name></name> <operator pos:start="361:41" pos:end="361:42">/=</operator> <name pos:start="361:44" pos:end="361:46">gcd</name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="363:14" pos:end="367:13">else<block pos:start="363:18" pos:end="367:13">{<block_content pos:start="365:17" pos:end="365:63">

                <expr_stmt pos:start="365:17" pos:end="365:63"><expr pos:start="365:17" pos:end="365:62"><name pos:start="365:17" pos:end="365:35"><name pos:start="365:17" pos:end="365:17">s</name><operator pos:start="365:18" pos:end="365:19">-&gt;</operator><name pos:start="365:20" pos:end="365:24">avctx</name><operator pos:start="365:25" pos:end="365:26">-&gt;</operator><name pos:start="365:27" pos:end="365:35">time_base</name></name><operator pos:start="365:36" pos:end="365:36">=</operator> <operator pos:start="365:38" pos:end="365:38">(</operator><name pos:start="365:39" pos:end="365:48">AVRational</name><operator pos:start="365:49" pos:end="365:49">)</operator><block pos:start="365:50" pos:end="365:62">{<expr pos:start="365:51" pos:end="365:54"><literal type="number" pos:start="365:51" pos:end="365:54">1001</literal></expr>, <expr pos:start="365:57" pos:end="365:61"><literal type="number" pos:start="365:57" pos:end="365:61">30000</literal></expr>}</block></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="373:9" pos:end="377:9"><if pos:start="373:9" pos:end="377:9">if<condition pos:start="373:11" pos:end="373:25">(<expr pos:start="373:12" pos:end="373:24"><name pos:start="373:12" pos:end="373:24"><name pos:start="373:12" pos:end="373:12">s</name><operator pos:start="373:13" pos:end="373:14">-&gt;</operator><name pos:start="373:15" pos:end="373:24">custom_pcf</name></name></expr>)</condition><block pos:start="373:26" pos:end="377:9">{<block_content pos:start="375:13" pos:end="375:33">

            <expr_stmt pos:start="375:13" pos:end="375:33"><expr pos:start="375:13" pos:end="375:32"><call pos:start="375:13" pos:end="375:32"><name pos:start="375:13" pos:end="375:21">skip_bits</name><argument_list pos:start="375:22" pos:end="375:32">(<argument pos:start="375:23" pos:end="375:28"><expr pos:start="375:23" pos:end="375:28"><operator pos:start="375:23" pos:end="375:23">&amp;</operator><name pos:start="375:24" pos:end="375:28"><name pos:start="375:24" pos:end="375:24">s</name><operator pos:start="375:25" pos:end="375:26">-&gt;</operator><name pos:start="375:27" pos:end="375:28">gb</name></name></expr></argument>, <argument pos:start="375:31" pos:end="375:31"><expr pos:start="375:31" pos:end="375:31"><literal type="number" pos:start="375:31" pos:end="375:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="375:35" pos:end="375:63">//extended Temporal reference</comment>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="381:9" pos:end="407:9"><if pos:start="381:9" pos:end="407:9">if <condition pos:start="381:12" pos:end="381:17">(<expr pos:start="381:13" pos:end="381:16"><name pos:start="381:13" pos:end="381:16">ufep</name></expr>)</condition> <block pos:start="381:19" pos:end="407:9">{<block_content pos:start="383:13" pos:end="405:13">

            <if_stmt pos:start="383:13" pos:end="389:13"><if pos:start="383:13" pos:end="389:13">if <condition pos:start="383:16" pos:end="383:27">(<expr pos:start="383:17" pos:end="383:26"><name pos:start="383:17" pos:end="383:26"><name pos:start="383:17" pos:end="383:17">s</name><operator pos:start="383:18" pos:end="383:19">-&gt;</operator><name pos:start="383:20" pos:end="383:26">umvplus</name></name></expr>)</condition> <block pos:start="383:29" pos:end="389:13">{<block_content pos:start="385:17" pos:end="387:39">

                <if_stmt pos:start="385:17" pos:end="387:39"><if pos:start="385:17" pos:end="387:39">if<condition pos:start="385:19" pos:end="385:40">(<expr pos:start="385:20" pos:end="385:39"><call pos:start="385:20" pos:end="385:36"><name pos:start="385:20" pos:end="385:28">get_bits1</name><argument_list pos:start="385:29" pos:end="385:36">(<argument pos:start="385:30" pos:end="385:35"><expr pos:start="385:30" pos:end="385:35"><operator pos:start="385:30" pos:end="385:30">&amp;</operator><name pos:start="385:31" pos:end="385:35"><name pos:start="385:31" pos:end="385:31">s</name><operator pos:start="385:32" pos:end="385:33">-&gt;</operator><name pos:start="385:34" pos:end="385:35">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="385:37" pos:end="385:38">==</operator><literal type="number" pos:start="385:39" pos:end="385:39">0</literal></expr>)</condition><block type="pseudo" pos:start="387:21" pos:end="387:39"><block_content pos:start="387:21" pos:end="387:39"> <comment type="block" pos:start="385:42" pos:end="385:100">/* Unlimited Unrestricted Motion Vectors Indicator (UUI) */</comment>

                    <expr_stmt pos:start="387:21" pos:end="387:39"><expr pos:start="387:21" pos:end="387:38"><call pos:start="387:21" pos:end="387:38"><name pos:start="387:21" pos:end="387:30">skip_bits1</name><argument_list pos:start="387:31" pos:end="387:38">(<argument pos:start="387:32" pos:end="387:37"><expr pos:start="387:32" pos:end="387:37"><operator pos:start="387:32" pos:end="387:32">&amp;</operator><name pos:start="387:33" pos:end="387:37"><name pos:start="387:33" pos:end="387:33">s</name><operator pos:start="387:34" pos:end="387:35">-&gt;</operator><name pos:start="387:36" pos:end="387:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="391:13" pos:end="405:13"><if pos:start="391:13" pos:end="405:13">if<condition pos:start="391:15" pos:end="391:40">(<expr pos:start="391:16" pos:end="391:39"><name pos:start="391:16" pos:end="391:39"><name pos:start="391:16" pos:end="391:16">s</name><operator pos:start="391:17" pos:end="391:18">-&gt;</operator><name pos:start="391:19" pos:end="391:39">h263_slice_structured</name></name></expr>)</condition><block pos:start="391:41" pos:end="405:13">{<block_content pos:start="393:17" pos:end="403:17">

                <if_stmt pos:start="393:17" pos:end="397:17"><if pos:start="393:17" pos:end="397:17">if <condition pos:start="393:20" pos:end="393:43">(<expr pos:start="393:21" pos:end="393:42"><call pos:start="393:21" pos:end="393:37"><name pos:start="393:21" pos:end="393:29">get_bits1</name><argument_list pos:start="393:30" pos:end="393:37">(<argument pos:start="393:31" pos:end="393:36"><expr pos:start="393:31" pos:end="393:36"><operator pos:start="393:31" pos:end="393:31">&amp;</operator><name pos:start="393:32" pos:end="393:36"><name pos:start="393:32" pos:end="393:32">s</name><operator pos:start="393:33" pos:end="393:34">-&gt;</operator><name pos:start="393:35" pos:end="393:36">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="393:39" pos:end="393:40">!=</operator> <literal type="number" pos:start="393:42" pos:end="393:42">0</literal></expr>)</condition> <block pos:start="393:45" pos:end="397:17">{<block_content pos:start="395:21" pos:end="395:89">

                    <expr_stmt pos:start="395:21" pos:end="395:89"><expr pos:start="395:21" pos:end="395:88"><call pos:start="395:21" pos:end="395:88"><name pos:start="395:21" pos:end="395:26">av_log</name><argument_list pos:start="395:27" pos:end="395:88">(<argument pos:start="395:28" pos:end="395:35"><expr pos:start="395:28" pos:end="395:35"><name pos:start="395:28" pos:end="395:35"><name pos:start="395:28" pos:end="395:28">s</name><operator pos:start="395:29" pos:end="395:30">-&gt;</operator><name pos:start="395:31" pos:end="395:35">avctx</name></name></expr></argument>, <argument pos:start="395:38" pos:end="395:49"><expr pos:start="395:38" pos:end="395:49"><name pos:start="395:38" pos:end="395:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="395:52" pos:end="395:87"><expr pos:start="395:52" pos:end="395:87"><literal type="string" pos:start="395:52" pos:end="395:87">"rectangular slices not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="399:17" pos:end="403:17"><if pos:start="399:17" pos:end="403:17">if <condition pos:start="399:20" pos:end="399:43">(<expr pos:start="399:21" pos:end="399:42"><call pos:start="399:21" pos:end="399:37"><name pos:start="399:21" pos:end="399:29">get_bits1</name><argument_list pos:start="399:30" pos:end="399:37">(<argument pos:start="399:31" pos:end="399:36"><expr pos:start="399:31" pos:end="399:36"><operator pos:start="399:31" pos:end="399:31">&amp;</operator><name pos:start="399:32" pos:end="399:36"><name pos:start="399:32" pos:end="399:32">s</name><operator pos:start="399:33" pos:end="399:34">-&gt;</operator><name pos:start="399:35" pos:end="399:36">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="399:39" pos:end="399:40">!=</operator> <literal type="number" pos:start="399:42" pos:end="399:42">0</literal></expr>)</condition> <block pos:start="399:45" pos:end="403:17">{<block_content pos:start="401:21" pos:end="401:87">

                    <expr_stmt pos:start="401:21" pos:end="401:87"><expr pos:start="401:21" pos:end="401:86"><call pos:start="401:21" pos:end="401:86"><name pos:start="401:21" pos:end="401:26">av_log</name><argument_list pos:start="401:27" pos:end="401:86">(<argument pos:start="401:28" pos:end="401:35"><expr pos:start="401:28" pos:end="401:35"><name pos:start="401:28" pos:end="401:35"><name pos:start="401:28" pos:end="401:28">s</name><operator pos:start="401:29" pos:end="401:30">-&gt;</operator><name pos:start="401:31" pos:end="401:35">avctx</name></name></expr></argument>, <argument pos:start="401:38" pos:end="401:49"><expr pos:start="401:38" pos:end="401:49"><name pos:start="401:38" pos:end="401:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="401:52" pos:end="401:85"><expr pos:start="401:52" pos:end="401:85"><literal type="string" pos:start="401:52" pos:end="401:85">"unordered slices not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="411:9" pos:end="411:40"><expr pos:start="411:9" pos:end="411:39"><name pos:start="411:9" pos:end="411:17"><name pos:start="411:9" pos:end="411:9">s</name><operator pos:start="411:10" pos:end="411:11">-&gt;</operator><name pos:start="411:12" pos:end="411:17">qscale</name></name> <operator pos:start="411:19" pos:end="411:19">=</operator> <call pos:start="411:21" pos:end="411:39"><name pos:start="411:21" pos:end="411:28">get_bits</name><argument_list pos:start="411:29" pos:end="411:39">(<argument pos:start="411:30" pos:end="411:35"><expr pos:start="411:30" pos:end="411:35"><operator pos:start="411:30" pos:end="411:30">&amp;</operator><name pos:start="411:31" pos:end="411:35"><name pos:start="411:31" pos:end="411:31">s</name><operator pos:start="411:32" pos:end="411:33">-&gt;</operator><name pos:start="411:34" pos:end="411:35">gb</name></name></expr></argument>, <argument pos:start="411:38" pos:end="411:38"><expr pos:start="411:38" pos:end="411:38"><literal type="number" pos:start="411:38" pos:end="411:38">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="417:5" pos:end="417:40"><expr pos:start="417:5" pos:end="417:39"><name pos:start="417:5" pos:end="417:15"><name pos:start="417:5" pos:end="417:5">s</name><operator pos:start="417:6" pos:end="417:7">-&gt;</operator><name pos:start="417:8" pos:end="417:15">mb_width</name></name> <operator pos:start="417:17" pos:end="417:17">=</operator> <operator pos:start="417:19" pos:end="417:19">(</operator><name pos:start="417:20" pos:end="417:27"><name pos:start="417:20" pos:end="417:20">s</name><operator pos:start="417:21" pos:end="417:22">-&gt;</operator><name pos:start="417:23" pos:end="417:27">width</name></name>  <operator pos:start="417:30" pos:end="417:30">+</operator> <literal type="number" pos:start="417:32" pos:end="417:33">15</literal><operator pos:start="417:34" pos:end="417:34">)</operator> <operator pos:start="417:36" pos:end="417:36">/</operator> <literal type="number" pos:start="417:38" pos:end="417:39">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="419:5" pos:end="419:42"><expr pos:start="419:5" pos:end="419:41"><name pos:start="419:5" pos:end="419:16"><name pos:start="419:5" pos:end="419:5">s</name><operator pos:start="419:6" pos:end="419:7">-&gt;</operator><name pos:start="419:8" pos:end="419:16">mb_height</name></name> <operator pos:start="419:18" pos:end="419:18">=</operator> <operator pos:start="419:20" pos:end="419:20">(</operator><name pos:start="419:21" pos:end="419:29"><name pos:start="419:21" pos:end="419:21">s</name><operator pos:start="419:22" pos:end="419:23">-&gt;</operator><name pos:start="419:24" pos:end="419:29">height</name></name>  <operator pos:start="419:32" pos:end="419:32">+</operator> <literal type="number" pos:start="419:34" pos:end="419:35">15</literal><operator pos:start="419:36" pos:end="419:36">)</operator> <operator pos:start="419:38" pos:end="419:38">/</operator> <literal type="number" pos:start="419:40" pos:end="419:41">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="421:5" pos:end="421:43"><expr pos:start="421:5" pos:end="421:42"><name pos:start="421:5" pos:end="421:13"><name pos:start="421:5" pos:end="421:5">s</name><operator pos:start="421:6" pos:end="421:7">-&gt;</operator><name pos:start="421:8" pos:end="421:13">mb_num</name></name> <operator pos:start="421:15" pos:end="421:15">=</operator> <name pos:start="421:17" pos:end="421:27"><name pos:start="421:17" pos:end="421:17">s</name><operator pos:start="421:18" pos:end="421:19">-&gt;</operator><name pos:start="421:20" pos:end="421:27">mb_width</name></name> <operator pos:start="421:29" pos:end="421:29">*</operator> <name pos:start="421:31" pos:end="421:42"><name pos:start="421:31" pos:end="421:31">s</name><operator pos:start="421:32" pos:end="421:33">-&gt;</operator><name pos:start="421:34" pos:end="421:42">mb_height</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="425:5" pos:end="435:5"><if pos:start="425:5" pos:end="435:5">if <condition pos:start="425:8" pos:end="425:20">(<expr pos:start="425:9" pos:end="425:19"><name pos:start="425:9" pos:end="425:19"><name pos:start="425:9" pos:end="425:9">s</name><operator pos:start="425:10" pos:end="425:11">-&gt;</operator><name pos:start="425:12" pos:end="425:19">pb_frame</name></name></expr>)</condition> <block pos:start="425:22" pos:end="435:5">{<block_content pos:start="427:9" pos:end="433:29">

        <expr_stmt pos:start="427:9" pos:end="427:29"><expr pos:start="427:9" pos:end="427:28"><call pos:start="427:9" pos:end="427:28"><name pos:start="427:9" pos:end="427:17">skip_bits</name><argument_list pos:start="427:18" pos:end="427:28">(<argument pos:start="427:19" pos:end="427:24"><expr pos:start="427:19" pos:end="427:24"><operator pos:start="427:19" pos:end="427:19">&amp;</operator><name pos:start="427:20" pos:end="427:24"><name pos:start="427:20" pos:end="427:20">s</name><operator pos:start="427:21" pos:end="427:22">-&gt;</operator><name pos:start="427:23" pos:end="427:24">gb</name></name></expr></argument>, <argument pos:start="427:27" pos:end="427:27"><expr pos:start="427:27" pos:end="427:27"><literal type="number" pos:start="427:27" pos:end="427:27">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="427:31" pos:end="427:69">/* Temporal reference for B-pictures */</comment>

        <if_stmt pos:start="429:9" pos:end="431:33"><if pos:start="429:9" pos:end="431:33">if <condition pos:start="429:12" pos:end="429:26">(<expr pos:start="429:13" pos:end="429:25"><name pos:start="429:13" pos:end="429:25"><name pos:start="429:13" pos:end="429:13">s</name><operator pos:start="429:14" pos:end="429:15">-&gt;</operator><name pos:start="429:16" pos:end="429:25">custom_pcf</name></name></expr>)</condition><block type="pseudo" pos:start="431:13" pos:end="431:33"><block_content pos:start="431:13" pos:end="431:33">

            <expr_stmt pos:start="431:13" pos:end="431:33"><expr pos:start="431:13" pos:end="431:32"><call pos:start="431:13" pos:end="431:32"><name pos:start="431:13" pos:end="431:21">skip_bits</name><argument_list pos:start="431:22" pos:end="431:32">(<argument pos:start="431:23" pos:end="431:28"><expr pos:start="431:23" pos:end="431:28"><operator pos:start="431:23" pos:end="431:23">&amp;</operator><name pos:start="431:24" pos:end="431:28"><name pos:start="431:24" pos:end="431:24">s</name><operator pos:start="431:25" pos:end="431:26">-&gt;</operator><name pos:start="431:27" pos:end="431:28">gb</name></name></expr></argument>, <argument pos:start="431:31" pos:end="431:31"><expr pos:start="431:31" pos:end="431:31"><literal type="number" pos:start="431:31" pos:end="431:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="431:35" pos:end="431:63">//extended Temporal reference</comment>

        <expr_stmt pos:start="433:9" pos:end="433:29"><expr pos:start="433:9" pos:end="433:28"><call pos:start="433:9" pos:end="433:28"><name pos:start="433:9" pos:end="433:17">skip_bits</name><argument_list pos:start="433:18" pos:end="433:28">(<argument pos:start="433:19" pos:end="433:24"><expr pos:start="433:19" pos:end="433:24"><operator pos:start="433:19" pos:end="433:19">&amp;</operator><name pos:start="433:20" pos:end="433:24"><name pos:start="433:20" pos:end="433:20">s</name><operator pos:start="433:21" pos:end="433:22">-&gt;</operator><name pos:start="433:23" pos:end="433:24">gb</name></name></expr></argument>, <argument pos:start="433:27" pos:end="433:27"><expr pos:start="433:27" pos:end="433:27"><literal type="number" pos:start="433:27" pos:end="433:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="433:31" pos:end="433:75">/* Quantization information for B-pictures */</comment>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="439:5" pos:end="439:13">/* PEI */</comment>

    <while pos:start="441:5" pos:end="445:5">while <condition pos:start="441:11" pos:end="441:34">(<expr pos:start="441:12" pos:end="441:33"><call pos:start="441:12" pos:end="441:28"><name pos:start="441:12" pos:end="441:20">get_bits1</name><argument_list pos:start="441:21" pos:end="441:28">(<argument pos:start="441:22" pos:end="441:27"><expr pos:start="441:22" pos:end="441:27"><operator pos:start="441:22" pos:end="441:22">&amp;</operator><name pos:start="441:23" pos:end="441:27"><name pos:start="441:23" pos:end="441:23">s</name><operator pos:start="441:24" pos:end="441:25">-&gt;</operator><name pos:start="441:26" pos:end="441:27">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="441:30" pos:end="441:31">!=</operator> <literal type="number" pos:start="441:33" pos:end="441:33">0</literal></expr>)</condition> <block pos:start="441:36" pos:end="445:5">{<block_content pos:start="443:9" pos:end="443:29">

        <expr_stmt pos:start="443:9" pos:end="443:29"><expr pos:start="443:9" pos:end="443:28"><call pos:start="443:9" pos:end="443:28"><name pos:start="443:9" pos:end="443:17">skip_bits</name><argument_list pos:start="443:18" pos:end="443:28">(<argument pos:start="443:19" pos:end="443:24"><expr pos:start="443:19" pos:end="443:24"><operator pos:start="443:19" pos:end="443:19">&amp;</operator><name pos:start="443:20" pos:end="443:24"><name pos:start="443:20" pos:end="443:20">s</name><operator pos:start="443:21" pos:end="443:22">-&gt;</operator><name pos:start="443:23" pos:end="443:24">gb</name></name></expr></argument>, <argument pos:start="443:27" pos:end="443:27"><expr pos:start="443:27" pos:end="443:27"><literal type="number" pos:start="443:27" pos:end="443:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="449:5" pos:end="473:5"><if pos:start="449:5" pos:end="473:5">if<condition pos:start="449:7" pos:end="449:32">(<expr pos:start="449:8" pos:end="449:31"><name pos:start="449:8" pos:end="449:31"><name pos:start="449:8" pos:end="449:8">s</name><operator pos:start="449:9" pos:end="449:10">-&gt;</operator><name pos:start="449:11" pos:end="449:31">h263_slice_structured</name></name></expr>)</condition><block pos:start="449:33" pos:end="473:5">{<block_content pos:start="451:9" pos:end="471:9">

        <if_stmt pos:start="451:9" pos:end="457:9"><if pos:start="451:9" pos:end="457:9">if <condition pos:start="451:12" pos:end="451:35">(<expr pos:start="451:13" pos:end="451:34"><call pos:start="451:13" pos:end="451:29"><name pos:start="451:13" pos:end="451:21">get_bits1</name><argument_list pos:start="451:22" pos:end="451:29">(<argument pos:start="451:23" pos:end="451:28"><expr pos:start="451:23" pos:end="451:28"><operator pos:start="451:23" pos:end="451:23">&amp;</operator><name pos:start="451:24" pos:end="451:28"><name pos:start="451:24" pos:end="451:24">s</name><operator pos:start="451:25" pos:end="451:26">-&gt;</operator><name pos:start="451:27" pos:end="451:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="451:31" pos:end="451:32">!=</operator> <literal type="number" pos:start="451:34" pos:end="451:34">1</literal></expr>)</condition> <block pos:start="451:37" pos:end="457:9">{<block_content pos:start="453:13" pos:end="455:22">

            <expr_stmt pos:start="453:13" pos:end="453:69"><expr pos:start="453:13" pos:end="453:68"><call pos:start="453:13" pos:end="453:68"><name pos:start="453:13" pos:end="453:18">av_log</name><argument_list pos:start="453:19" pos:end="453:68">(<argument pos:start="453:20" pos:end="453:27"><expr pos:start="453:20" pos:end="453:27"><name pos:start="453:20" pos:end="453:27"><name pos:start="453:20" pos:end="453:20">s</name><operator pos:start="453:21" pos:end="453:22">-&gt;</operator><name pos:start="453:23" pos:end="453:27">avctx</name></name></expr></argument>, <argument pos:start="453:30" pos:end="453:41"><expr pos:start="453:30" pos:end="453:41"><name pos:start="453:30" pos:end="453:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="453:44" pos:end="453:67"><expr pos:start="453:44" pos:end="453:67"><literal type="string" pos:start="453:44" pos:end="453:67">"SEPB1 marker missing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="455:13" pos:end="455:22">return <expr pos:start="455:20" pos:end="455:21"><operator pos:start="455:20" pos:end="455:20">-</operator><literal type="number" pos:start="455:21" pos:end="455:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="461:9" pos:end="461:30"><expr pos:start="461:9" pos:end="461:29"><call pos:start="461:9" pos:end="461:29"><name pos:start="461:9" pos:end="461:26">ff_h263_decode_mba</name><argument_list pos:start="461:27" pos:end="461:29">(<argument pos:start="461:28" pos:end="461:28"><expr pos:start="461:28" pos:end="461:28"><name pos:start="461:28" pos:end="461:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="465:9" pos:end="471:9"><if pos:start="465:9" pos:end="471:9">if <condition pos:start="465:12" pos:end="465:35">(<expr pos:start="465:13" pos:end="465:34"><call pos:start="465:13" pos:end="465:29"><name pos:start="465:13" pos:end="465:21">get_bits1</name><argument_list pos:start="465:22" pos:end="465:29">(<argument pos:start="465:23" pos:end="465:28"><expr pos:start="465:23" pos:end="465:28"><operator pos:start="465:23" pos:end="465:23">&amp;</operator><name pos:start="465:24" pos:end="465:28"><name pos:start="465:24" pos:end="465:24">s</name><operator pos:start="465:25" pos:end="465:26">-&gt;</operator><name pos:start="465:27" pos:end="465:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="465:31" pos:end="465:32">!=</operator> <literal type="number" pos:start="465:34" pos:end="465:34">1</literal></expr>)</condition> <block pos:start="465:37" pos:end="471:9">{<block_content pos:start="467:13" pos:end="469:22">

            <expr_stmt pos:start="467:13" pos:end="467:69"><expr pos:start="467:13" pos:end="467:68"><call pos:start="467:13" pos:end="467:68"><name pos:start="467:13" pos:end="467:18">av_log</name><argument_list pos:start="467:19" pos:end="467:68">(<argument pos:start="467:20" pos:end="467:27"><expr pos:start="467:20" pos:end="467:27"><name pos:start="467:20" pos:end="467:27"><name pos:start="467:20" pos:end="467:20">s</name><operator pos:start="467:21" pos:end="467:22">-&gt;</operator><name pos:start="467:23" pos:end="467:27">avctx</name></name></expr></argument>, <argument pos:start="467:30" pos:end="467:41"><expr pos:start="467:30" pos:end="467:41"><name pos:start="467:30" pos:end="467:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="467:44" pos:end="467:67"><expr pos:start="467:44" pos:end="467:67"><literal type="string" pos:start="467:44" pos:end="467:67">"SEPB2 marker missing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="469:13" pos:end="469:22">return <expr pos:start="469:20" pos:end="469:21"><operator pos:start="469:20" pos:end="469:20">-</operator><literal type="number" pos:start="469:21" pos:end="469:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="475:5" pos:end="475:18"><expr pos:start="475:5" pos:end="475:17"><name pos:start="475:5" pos:end="475:13"><name pos:start="475:5" pos:end="475:5">s</name><operator pos:start="475:6" pos:end="475:7">-&gt;</operator><name pos:start="475:8" pos:end="475:13">f_code</name></name> <operator pos:start="475:15" pos:end="475:15">=</operator> <literal type="number" pos:start="475:17" pos:end="475:17">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="479:5" pos:end="491:5"><if pos:start="479:5" pos:end="485:5">if<condition pos:start="479:7" pos:end="479:19">(<expr pos:start="479:8" pos:end="479:18"><name pos:start="479:8" pos:end="479:18"><name pos:start="479:8" pos:end="479:8">s</name><operator pos:start="479:9" pos:end="479:10">-&gt;</operator><name pos:start="479:11" pos:end="479:18">h263_aic</name></name></expr>)</condition><block pos:start="479:20" pos:end="485:5">{<block_content pos:start="481:10" pos:end="483:52">

         <expr_stmt pos:start="481:10" pos:end="483:52"><expr pos:start="481:10" pos:end="483:51"><name pos:start="481:10" pos:end="481:28"><name pos:start="481:10" pos:end="481:10">s</name><operator pos:start="481:11" pos:end="481:12">-&gt;</operator><name pos:start="481:13" pos:end="481:28">y_dc_scale_table</name></name><operator pos:start="481:29" pos:end="481:29">=</operator>

         <name pos:start="483:10" pos:end="483:28"><name pos:start="483:10" pos:end="483:10">s</name><operator pos:start="483:11" pos:end="483:12">-&gt;</operator><name pos:start="483:13" pos:end="483:28">c_dc_scale_table</name></name><operator pos:start="483:29" pos:end="483:29">=</operator> <name pos:start="483:31" pos:end="483:51">ff_aic_dc_scale_table</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="485:6" pos:end="491:5">else<block pos:start="485:10" pos:end="491:5">{<block_content pos:start="487:9" pos:end="489:53">

        <expr_stmt pos:start="487:9" pos:end="489:53"><expr pos:start="487:9" pos:end="489:52"><name pos:start="487:9" pos:end="487:27"><name pos:start="487:9" pos:end="487:9">s</name><operator pos:start="487:10" pos:end="487:11">-&gt;</operator><name pos:start="487:12" pos:end="487:27">y_dc_scale_table</name></name><operator pos:start="487:28" pos:end="487:28">=</operator>

        <name pos:start="489:9" pos:end="489:27"><name pos:start="489:9" pos:end="489:9">s</name><operator pos:start="489:10" pos:end="489:11">-&gt;</operator><name pos:start="489:12" pos:end="489:27">c_dc_scale_table</name></name><operator pos:start="489:28" pos:end="489:28">=</operator> <name pos:start="489:30" pos:end="489:52">ff_mpeg1_dc_scale_table</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="495:9" pos:end="495:34"><expr pos:start="495:9" pos:end="495:33"><call pos:start="495:9" pos:end="495:33"><name pos:start="495:9" pos:end="495:30">ff_h263_show_pict_info</name><argument_list pos:start="495:31" pos:end="495:33">(<argument pos:start="495:32" pos:end="495:32"><expr pos:start="495:32" pos:end="495:32"><name pos:start="495:32" pos:end="495:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="497:5" pos:end="523:5"><if pos:start="497:5" pos:end="523:5">if <condition pos:start="497:8" pos:end="497:77">(<expr pos:start="497:9" pos:end="497:76"><name pos:start="497:9" pos:end="497:20"><name pos:start="497:9" pos:end="497:9">s</name><operator pos:start="497:10" pos:end="497:11">-&gt;</operator><name pos:start="497:12" pos:end="497:20">pict_type</name></name> <operator pos:start="497:22" pos:end="497:23">==</operator> <name pos:start="497:25" pos:end="497:41">AV_PICTURE_TYPE_I</name> <operator pos:start="497:43" pos:end="497:44">&amp;&amp;</operator> <name pos:start="497:46" pos:end="497:57"><name pos:start="497:46" pos:end="497:46">s</name><operator pos:start="497:47" pos:end="497:48">-&gt;</operator><name pos:start="497:49" pos:end="497:57">codec_tag</name></name> <operator pos:start="497:59" pos:end="497:60">==</operator> <call pos:start="497:62" pos:end="497:76"><name pos:start="497:62" pos:end="497:68">AV_RL32</name><argument_list pos:start="497:69" pos:end="497:76">(<argument pos:start="497:70" pos:end="497:75"><expr pos:start="497:70" pos:end="497:75"><literal type="string" pos:start="497:70" pos:end="497:75">"ZYGO"</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="497:78" pos:end="523:5">{<block_content pos:start="499:9" pos:end="521:84">

        <decl_stmt pos:start="499:9" pos:end="499:16"><decl pos:start="499:9" pos:end="499:13"><type pos:start="499:9" pos:end="499:11"><name pos:start="499:9" pos:end="499:11">int</name></type> <name pos:start="499:13" pos:end="499:13">i</name></decl>,<decl pos:start="499:15" pos:end="499:15"><type ref="prev" pos:start="499:9" pos:end="499:11"/><name pos:start="499:15" pos:end="499:15">j</name></decl>;</decl_stmt>

        <for pos:start="501:9" pos:end="501:84">for<control pos:start="501:12" pos:end="501:27">(<init pos:start="501:13" pos:end="501:16"><expr pos:start="501:13" pos:end="501:15"><name pos:start="501:13" pos:end="501:13">i</name><operator pos:start="501:14" pos:end="501:14">=</operator><literal type="number" pos:start="501:15" pos:end="501:15">0</literal></expr>;</init> <condition pos:start="501:18" pos:end="501:22"><expr pos:start="501:18" pos:end="501:21"><name pos:start="501:18" pos:end="501:18">i</name><operator pos:start="501:19" pos:end="501:19">&lt;</operator><literal type="number" pos:start="501:20" pos:end="501:21">85</literal></expr>;</condition> <incr pos:start="501:24" pos:end="501:26"><expr pos:start="501:24" pos:end="501:26"><name pos:start="501:24" pos:end="501:24">i</name><operator pos:start="501:25" pos:end="501:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="501:29" pos:end="501:84"><block_content pos:start="501:29" pos:end="501:84"> <expr_stmt pos:start="501:29" pos:end="501:84"><expr pos:start="501:29" pos:end="501:83"><call pos:start="501:29" pos:end="501:83"><name pos:start="501:29" pos:end="501:34">av_log</name><argument_list pos:start="501:35" pos:end="501:83">(<argument pos:start="501:36" pos:end="501:43"><expr pos:start="501:36" pos:end="501:43"><name pos:start="501:36" pos:end="501:43"><name pos:start="501:36" pos:end="501:36">s</name><operator pos:start="501:37" pos:end="501:38">-&gt;</operator><name pos:start="501:39" pos:end="501:43">avctx</name></name></expr></argument>, <argument pos:start="501:46" pos:end="501:57"><expr pos:start="501:46" pos:end="501:57"><name pos:start="501:46" pos:end="501:57">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="501:60" pos:end="501:63"><expr pos:start="501:60" pos:end="501:63"><literal type="string" pos:start="501:60" pos:end="501:63">"%d"</literal></expr></argument>, <argument pos:start="501:66" pos:end="501:82"><expr pos:start="501:66" pos:end="501:82"><call pos:start="501:66" pos:end="501:82"><name pos:start="501:66" pos:end="501:74">get_bits1</name><argument_list pos:start="501:75" pos:end="501:82">(<argument pos:start="501:76" pos:end="501:81"><expr pos:start="501:76" pos:end="501:81"><operator pos:start="501:76" pos:end="501:76">&amp;</operator><name pos:start="501:77" pos:end="501:81"><name pos:start="501:77" pos:end="501:77">s</name><operator pos:start="501:78" pos:end="501:79">-&gt;</operator><name pos:start="501:80" pos:end="501:81">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="503:9" pos:end="503:45"><expr pos:start="503:9" pos:end="503:44"><call pos:start="503:9" pos:end="503:44"><name pos:start="503:9" pos:end="503:14">av_log</name><argument_list pos:start="503:15" pos:end="503:44">(<argument pos:start="503:16" pos:end="503:23"><expr pos:start="503:16" pos:end="503:23"><name pos:start="503:16" pos:end="503:23"><name pos:start="503:16" pos:end="503:16">s</name><operator pos:start="503:17" pos:end="503:18">-&gt;</operator><name pos:start="503:19" pos:end="503:23">avctx</name></name></expr></argument>, <argument pos:start="503:26" pos:end="503:37"><expr pos:start="503:26" pos:end="503:37"><name pos:start="503:26" pos:end="503:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="503:40" pos:end="503:43"><expr pos:start="503:40" pos:end="503:43"><literal type="string" pos:start="503:40" pos:end="503:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="505:9" pos:end="519:9">for<control pos:start="505:12" pos:end="505:27">(<init pos:start="505:13" pos:end="505:16"><expr pos:start="505:13" pos:end="505:15"><name pos:start="505:13" pos:end="505:13">i</name><operator pos:start="505:14" pos:end="505:14">=</operator><literal type="number" pos:start="505:15" pos:end="505:15">0</literal></expr>;</init> <condition pos:start="505:18" pos:end="505:22"><expr pos:start="505:18" pos:end="505:21"><name pos:start="505:18" pos:end="505:18">i</name><operator pos:start="505:19" pos:end="505:19">&lt;</operator><literal type="number" pos:start="505:20" pos:end="505:21">13</literal></expr>;</condition> <incr pos:start="505:24" pos:end="505:26"><expr pos:start="505:24" pos:end="505:26"><name pos:start="505:24" pos:end="505:24">i</name><operator pos:start="505:25" pos:end="505:26">++</operator></expr></incr>)</control><block pos:start="505:28" pos:end="519:9">{<block_content pos:start="507:13" pos:end="517:49">

            <for pos:start="507:13" pos:end="515:13">for<control pos:start="507:16" pos:end="507:30">(<init pos:start="507:17" pos:end="507:20"><expr pos:start="507:17" pos:end="507:19"><name pos:start="507:17" pos:end="507:17">j</name><operator pos:start="507:18" pos:end="507:18">=</operator><literal type="number" pos:start="507:19" pos:end="507:19">0</literal></expr>;</init> <condition pos:start="507:22" pos:end="507:25"><expr pos:start="507:22" pos:end="507:24"><name pos:start="507:22" pos:end="507:22">j</name><operator pos:start="507:23" pos:end="507:23">&lt;</operator><literal type="number" pos:start="507:24" pos:end="507:24">3</literal></expr>;</condition> <incr pos:start="507:27" pos:end="507:29"><expr pos:start="507:27" pos:end="507:29"><name pos:start="507:27" pos:end="507:27">j</name><operator pos:start="507:28" pos:end="507:29">++</operator></expr></incr>)</control><block pos:start="507:31" pos:end="515:13">{<block_content pos:start="509:17" pos:end="513:58">

                <decl_stmt pos:start="509:17" pos:end="509:43"><decl pos:start="509:17" pos:end="509:42"><type pos:start="509:17" pos:end="509:19"><name pos:start="509:17" pos:end="509:19">int</name></type> <name pos:start="509:21" pos:end="509:21">v</name><init pos:start="509:22" pos:end="509:42">= <expr pos:start="509:24" pos:end="509:42"><call pos:start="509:24" pos:end="509:42"><name pos:start="509:24" pos:end="509:31">get_bits</name><argument_list pos:start="509:32" pos:end="509:42">(<argument pos:start="509:33" pos:end="509:38"><expr pos:start="509:33" pos:end="509:38"><operator pos:start="509:33" pos:end="509:33">&amp;</operator><name pos:start="509:34" pos:end="509:38"><name pos:start="509:34" pos:end="509:34">s</name><operator pos:start="509:35" pos:end="509:36">-&gt;</operator><name pos:start="509:37" pos:end="509:38">gb</name></name></expr></argument>, <argument pos:start="509:41" pos:end="509:41"><expr pos:start="509:41" pos:end="509:41"><literal type="number" pos:start="509:41" pos:end="509:41">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="511:17" pos:end="511:45"><expr pos:start="511:17" pos:end="511:44"><name pos:start="511:17" pos:end="511:17">v</name> <operator pos:start="511:19" pos:end="511:20">|=</operator> <call pos:start="511:22" pos:end="511:41"><name pos:start="511:22" pos:end="511:30">get_sbits</name><argument_list pos:start="511:31" pos:end="511:41">(<argument pos:start="511:32" pos:end="511:37"><expr pos:start="511:32" pos:end="511:37"><operator pos:start="511:32" pos:end="511:32">&amp;</operator><name pos:start="511:33" pos:end="511:37"><name pos:start="511:33" pos:end="511:33">s</name><operator pos:start="511:34" pos:end="511:35">-&gt;</operator><name pos:start="511:36" pos:end="511:37">gb</name></name></expr></argument>, <argument pos:start="511:40" pos:end="511:40"><expr pos:start="511:40" pos:end="511:40"><literal type="number" pos:start="511:40" pos:end="511:40">8</literal></expr></argument>)</argument_list></call><operator pos:start="511:42" pos:end="511:43">&lt;&lt;</operator><literal type="number" pos:start="511:44" pos:end="511:44">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="513:17" pos:end="513:58"><expr pos:start="513:17" pos:end="513:57"><call pos:start="513:17" pos:end="513:57"><name pos:start="513:17" pos:end="513:22">av_log</name><argument_list pos:start="513:23" pos:end="513:57">(<argument pos:start="513:24" pos:end="513:31"><expr pos:start="513:24" pos:end="513:31"><name pos:start="513:24" pos:end="513:31"><name pos:start="513:24" pos:end="513:24">s</name><operator pos:start="513:25" pos:end="513:26">-&gt;</operator><name pos:start="513:27" pos:end="513:31">avctx</name></name></expr></argument>, <argument pos:start="513:34" pos:end="513:45"><expr pos:start="513:34" pos:end="513:45"><name pos:start="513:34" pos:end="513:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="513:48" pos:end="513:53"><expr pos:start="513:48" pos:end="513:53"><literal type="string" pos:start="513:48" pos:end="513:53">" %5d"</literal></expr></argument>, <argument pos:start="513:56" pos:end="513:56"><expr pos:start="513:56" pos:end="513:56"><name pos:start="513:56" pos:end="513:56">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="517:13" pos:end="517:49"><expr pos:start="517:13" pos:end="517:48"><call pos:start="517:13" pos:end="517:48"><name pos:start="517:13" pos:end="517:18">av_log</name><argument_list pos:start="517:19" pos:end="517:48">(<argument pos:start="517:20" pos:end="517:27"><expr pos:start="517:20" pos:end="517:27"><name pos:start="517:20" pos:end="517:27"><name pos:start="517:20" pos:end="517:20">s</name><operator pos:start="517:21" pos:end="517:22">-&gt;</operator><name pos:start="517:23" pos:end="517:27">avctx</name></name></expr></argument>, <argument pos:start="517:30" pos:end="517:41"><expr pos:start="517:30" pos:end="517:41"><name pos:start="517:30" pos:end="517:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="517:44" pos:end="517:47"><expr pos:start="517:44" pos:end="517:47"><literal type="string" pos:start="517:44" pos:end="517:47">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="521:9" pos:end="521:84">for<control pos:start="521:12" pos:end="521:27">(<init pos:start="521:13" pos:end="521:16"><expr pos:start="521:13" pos:end="521:15"><name pos:start="521:13" pos:end="521:13">i</name><operator pos:start="521:14" pos:end="521:14">=</operator><literal type="number" pos:start="521:15" pos:end="521:15">0</literal></expr>;</init> <condition pos:start="521:18" pos:end="521:22"><expr pos:start="521:18" pos:end="521:21"><name pos:start="521:18" pos:end="521:18">i</name><operator pos:start="521:19" pos:end="521:19">&lt;</operator><literal type="number" pos:start="521:20" pos:end="521:21">50</literal></expr>;</condition> <incr pos:start="521:24" pos:end="521:26"><expr pos:start="521:24" pos:end="521:26"><name pos:start="521:24" pos:end="521:24">i</name><operator pos:start="521:25" pos:end="521:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="521:29" pos:end="521:84"><block_content pos:start="521:29" pos:end="521:84"> <expr_stmt pos:start="521:29" pos:end="521:84"><expr pos:start="521:29" pos:end="521:83"><call pos:start="521:29" pos:end="521:83"><name pos:start="521:29" pos:end="521:34">av_log</name><argument_list pos:start="521:35" pos:end="521:83">(<argument pos:start="521:36" pos:end="521:43"><expr pos:start="521:36" pos:end="521:43"><name pos:start="521:36" pos:end="521:43"><name pos:start="521:36" pos:end="521:36">s</name><operator pos:start="521:37" pos:end="521:38">-&gt;</operator><name pos:start="521:39" pos:end="521:43">avctx</name></name></expr></argument>, <argument pos:start="521:46" pos:end="521:57"><expr pos:start="521:46" pos:end="521:57"><name pos:start="521:46" pos:end="521:57">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="521:60" pos:end="521:63"><expr pos:start="521:60" pos:end="521:63"><literal type="string" pos:start="521:60" pos:end="521:63">"%d"</literal></expr></argument>, <argument pos:start="521:66" pos:end="521:82"><expr pos:start="521:66" pos:end="521:82"><call pos:start="521:66" pos:end="521:82"><name pos:start="521:66" pos:end="521:74">get_bits1</name><argument_list pos:start="521:75" pos:end="521:82">(<argument pos:start="521:76" pos:end="521:81"><expr pos:start="521:76" pos:end="521:81"><operator pos:start="521:76" pos:end="521:76">&amp;</operator><name pos:start="521:77" pos:end="521:81"><name pos:start="521:77" pos:end="521:77">s</name><operator pos:start="521:78" pos:end="521:79">-&gt;</operator><name pos:start="521:80" pos:end="521:81">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="527:5" pos:end="527:13">return <expr pos:start="527:12" pos:end="527:12"><literal type="number" pos:start="527:12" pos:end="527:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
