<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2955.c" pos:tabs="8"><function pos:start="1:1" pos:end="10:15"><type pos:start="1:1" pos:end="1:5"><name pos:start="1:1" pos:end="1:3">PCA</name> <modifier pos:start="1:5" pos:end="1:5">*</modifier></type><name pos:start="1:6" pos:end="1:16">ff_pca_init</name><parameter_list pos:start="1:17" pos:end="1:23">(<parameter pos:start="1:18" pos:end="1:22"><decl pos:start="1:18" pos:end="1:22"><type pos:start="1:18" pos:end="1:20"><name pos:start="1:18" pos:end="1:20">int</name></type> <name pos:start="1:22" pos:end="1:22">n</name></decl></parameter>)</parameter_list><block pos:start="1:24" pos:end="10:15">{<block_content pos:start="2:5" pos:end="10:15">
    <decl_stmt pos:start="2:5" pos:end="2:13"><decl pos:start="2:5" pos:end="2:12"><type pos:start="2:5" pos:end="2:9"><name pos:start="2:5" pos:end="2:7">PCA</name> <modifier pos:start="2:9" pos:end="2:9">*</modifier></type><name pos:start="2:10" pos:end="2:12">pca</name></decl>;</decl_stmt>
    <if_stmt pos:start="3:5" pos:end="4:34"><if pos:start="3:5" pos:end="4:34">if<condition pos:start="3:7" pos:end="3:12">(<expr pos:start="3:8" pos:end="3:11"><name pos:start="3:8" pos:end="3:8">n</name><operator pos:start="3:9" pos:end="3:10">&lt;=</operator><literal type="number" pos:start="3:11" pos:end="3:11">0</literal></expr>)</condition><block type="pseudo" pos:start="4:5" pos:end="4:34"><block_content pos:start="4:5" pos:end="4:34">
    <expr_stmt pos:start="4:5" pos:end="4:34"><expr pos:start="4:5" pos:end="4:33"><name pos:start="4:5" pos:end="4:7">pca</name><operator pos:start="4:8" pos:end="4:8">=</operator> <call pos:start="4:10" pos:end="4:33"><name pos:start="4:10" pos:end="4:19">av_mallocz</name><argument_list pos:start="4:20" pos:end="4:33">(<argument pos:start="4:21" pos:end="4:32"><expr pos:start="4:21" pos:end="4:32"><sizeof pos:start="4:21" pos:end="4:32">sizeof<argument_list pos:start="4:27" pos:end="4:32">(<argument pos:start="4:28" pos:end="4:31"><expr pos:start="4:28" pos:end="4:31"><operator pos:start="4:28" pos:end="4:28">*</operator><name pos:start="4:29" pos:end="4:31">pca</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:14"><expr pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:7">pca</name><operator pos:start="5:8" pos:end="5:9">-&gt;</operator><name pos:start="5:10" pos:end="5:10">n</name></name><operator pos:start="5:11" pos:end="5:11">=</operator> <name pos:start="5:13" pos:end="5:13">n</name></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:49"><expr pos:start="6:5" pos:end="6:48"><name pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:7">pca</name><operator pos:start="6:8" pos:end="6:9">-&gt;</operator><name pos:start="6:10" pos:end="6:10">z</name></name> <operator pos:start="6:12" pos:end="6:12">=</operator> <call pos:start="6:14" pos:end="6:48"><name pos:start="6:14" pos:end="6:28">av_malloc_array</name><argument_list pos:start="6:29" pos:end="6:48">(<argument pos:start="6:30" pos:end="6:30"><expr pos:start="6:30" pos:end="6:30"><name pos:start="6:30" pos:end="6:30">n</name></expr></argument>, <argument pos:start="6:33" pos:end="6:47"><expr pos:start="6:33" pos:end="6:47"><sizeof pos:start="6:33" pos:end="6:47">sizeof<argument_list pos:start="6:39" pos:end="6:47">(<argument pos:start="6:40" pos:end="6:46"><expr pos:start="6:40" pos:end="6:46"><operator pos:start="6:40" pos:end="6:40">*</operator><name pos:start="6:41" pos:end="6:46"><name pos:start="6:41" pos:end="6:43">pca</name><operator pos:start="6:44" pos:end="6:45">-&gt;</operator><name pos:start="6:46" pos:end="6:46">z</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:17"><expr pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:7">pca</name><operator pos:start="7:8" pos:end="7:9">-&gt;</operator><name pos:start="7:10" pos:end="7:14">count</name></name><operator pos:start="7:15" pos:end="7:15">=</operator><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:52"><expr pos:start="8:5" pos:end="8:51"><name pos:start="8:5" pos:end="8:19"><name pos:start="8:5" pos:end="8:7">pca</name><operator pos:start="8:8" pos:end="8:9">-&gt;</operator><name pos:start="8:10" pos:end="8:19">covariance</name></name><operator pos:start="8:20" pos:end="8:20">=</operator> <call pos:start="8:22" pos:end="8:51"><name pos:start="8:22" pos:end="8:30">av_calloc</name><argument_list pos:start="8:31" pos:end="8:51">(<argument pos:start="8:32" pos:end="8:34"><expr pos:start="8:32" pos:end="8:34"><name pos:start="8:32" pos:end="8:32">n</name><operator pos:start="8:33" pos:end="8:33">*</operator><name pos:start="8:34" pos:end="8:34">n</name></expr></argument>, <argument pos:start="8:37" pos:end="8:50"><expr pos:start="8:37" pos:end="8:50"><sizeof pos:start="8:37" pos:end="8:50">sizeof<argument_list pos:start="8:43" pos:end="8:50">(<argument pos:start="8:44" pos:end="8:49"><expr pos:start="8:44" pos:end="8:49"><name pos:start="8:44" pos:end="8:49">double</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:44"><expr pos:start="9:5" pos:end="9:43"><name pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:7">pca</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:13">mean</name></name><operator pos:start="9:14" pos:end="9:14">=</operator> <call pos:start="9:16" pos:end="9:43"><name pos:start="9:16" pos:end="9:24">av_calloc</name><argument_list pos:start="9:25" pos:end="9:43">(<argument pos:start="9:26" pos:end="9:26"><expr pos:start="9:26" pos:end="9:26"><name pos:start="9:26" pos:end="9:26">n</name></expr></argument>, <argument pos:start="9:29" pos:end="9:42"><expr pos:start="9:29" pos:end="9:42"><sizeof pos:start="9:29" pos:end="9:42">sizeof<argument_list pos:start="9:35" pos:end="9:42">(<argument pos:start="9:36" pos:end="9:41"><expr pos:start="9:36" pos:end="9:41"><name pos:start="9:36" pos:end="9:41">double</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="10:5" pos:end="10:15">return <expr pos:start="10:12" pos:end="10:14"><name pos:start="10:12" pos:end="10:14">pca</name></expr>;</return></block_content></block></function></unit>
