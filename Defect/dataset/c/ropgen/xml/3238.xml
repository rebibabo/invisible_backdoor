<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3238.c" pos:tabs="8"><function pos:start="1:1" pos:end="207:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">monitor_find_completion</name><parameter_list pos:start="1:36" pos:end="3:56">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:43">Monitor</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">mon</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:55"><decl pos:start="3:37" pos:end="3:55"><type pos:start="3:37" pos:end="3:55"><specifier pos:start="3:37" pos:end="3:41">const</specifier> <name pos:start="3:43" pos:end="3:46">char</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:55">cmdline</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="207:1">{<block_content pos:start="7:5" pos:end="205:5">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:23">cmdname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:24"><name pos:start="9:11" pos:end="9:14">args</name><index pos:start="9:15" pos:end="9:24">[<expr pos:start="9:16" pos:end="9:23"><name pos:start="9:16" pos:end="9:23">MAX_ARGS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">nb_args</name></decl>, <decl pos:start="11:18" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:18">i</name></decl>, <decl pos:start="11:21" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:23">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:21">ptype</name></decl>, <decl pos:start="13:24" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:27">str</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:21"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:19">mon_cmd_t</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:24">cmd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:24">MonitorBlockComplete</name></type> <name pos:start="17:26" pos:end="17:28">mbs</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="24:0"><expr pos:start="21:5" pos:end="21:42"><call pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:17">parse_cmdline</name><argument_list pos:start="21:18" pos:end="21:42">(<argument pos:start="21:19" pos:end="21:25"><expr pos:start="21:19" pos:end="21:25"><name pos:start="21:19" pos:end="21:25">cmdline</name></expr></argument>, <argument pos:start="21:28" pos:end="21:35"><expr pos:start="21:28" pos:end="21:35"><operator pos:start="21:28" pos:end="21:28">&amp;</operator><name pos:start="21:29" pos:end="21:35">nb_args</name></expr></argument>, <argument pos:start="21:38" pos:end="21:41"><expr pos:start="21:38" pos:end="21:41"><name pos:start="21:38" pos:end="21:41">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="23:1" pos:end="23:23">#<cpp:directive pos:start="23:2" pos:end="23:6">ifdef</cpp:directive> <name pos:start="23:8" pos:end="23:23">DEBUG_COMPLETION</name></cpp:ifdef>

    <for pos:start="25:5" pos:end="32:0">for <control pos:start="25:9" pos:end="25:33">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:28"><expr pos:start="25:17" pos:end="25:27"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:27">nb_args</name></expr>;</condition> <incr pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><name pos:start="25:30" pos:end="25:30">i</name><operator pos:start="25:31" pos:end="25:32">++</operator></expr></incr>)</control> <block pos:start="25:35" pos:end="32:0">{<block_content pos:start="27:9" pos:end="27:58">

        <expr_stmt pos:start="27:9" pos:end="27:58"><expr pos:start="27:9" pos:end="27:57"><call pos:start="27:9" pos:end="27:57"><name pos:start="27:9" pos:end="27:22">monitor_printf</name><argument_list pos:start="27:23" pos:end="27:57">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">mon</name></expr></argument>, <argument pos:start="27:29" pos:end="27:44"><expr pos:start="27:29" pos:end="27:44"><literal type="string" pos:start="27:29" pos:end="27:44">"arg%d = '%s'\n"</literal></expr></argument>, <argument pos:start="27:47" pos:end="27:47"><expr pos:start="27:47" pos:end="27:47"><name pos:start="27:47" pos:end="27:47">i</name></expr></argument>, <argument pos:start="27:50" pos:end="27:56"><expr pos:start="27:50" pos:end="27:56"><name pos:start="27:50" pos:end="27:56"><name pos:start="27:50" pos:end="27:53">args</name><index pos:start="27:54" pos:end="27:56">[<expr pos:start="27:55" pos:end="27:55"><name pos:start="27:55" pos:end="27:55">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="35:5" pos:end="37:18">/* if the line ends with a space, it means we want to complete the

       next arg */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:7">len</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:25"><name pos:start="39:11" pos:end="39:16">strlen</name><argument_list pos:start="39:17" pos:end="39:25">(<argument pos:start="39:18" pos:end="39:24"><expr pos:start="39:18" pos:end="39:24"><name pos:start="39:18" pos:end="39:24">cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="51:5"><if pos:start="41:5" pos:end="51:5">if <condition pos:start="41:8" pos:end="41:50">(<expr pos:start="41:9" pos:end="41:49"><name pos:start="41:9" pos:end="41:11">len</name> <operator pos:start="41:13" pos:end="41:13">&gt;</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal> <operator pos:start="41:17" pos:end="41:18">&amp;&amp;</operator> <call pos:start="41:20" pos:end="41:49"><name pos:start="41:20" pos:end="41:31">qemu_isspace</name><argument_list pos:start="41:32" pos:end="41:49">(<argument pos:start="41:33" pos:end="41:48"><expr pos:start="41:33" pos:end="41:48"><name pos:start="41:33" pos:end="41:48"><name pos:start="41:33" pos:end="41:39">cmdline</name><index pos:start="41:40" pos:end="41:48">[<expr pos:start="41:41" pos:end="41:47"><name pos:start="41:41" pos:end="41:43">len</name> <operator pos:start="41:45" pos:end="41:45">-</operator> <literal type="number" pos:start="41:47" pos:end="41:47">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:52" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:39">

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:32">(<expr pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:19">nb_args</name> <operator pos:start="43:21" pos:end="43:22">&gt;=</operator> <name pos:start="43:24" pos:end="43:31">MAX_ARGS</name></expr>)</condition> <block pos:start="43:34" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:25">

            <goto pos:start="45:13" pos:end="45:25">goto <name pos:start="45:18" pos:end="45:24">cleanup</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:39"><expr pos:start="49:9" pos:end="49:38"><name pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:12">args</name><index pos:start="49:13" pos:end="49:23">[<expr pos:start="49:14" pos:end="49:22"><name pos:start="49:14" pos:end="49:20">nb_args</name><operator pos:start="49:21" pos:end="49:22">++</operator></expr>]</index></name> <operator pos:start="49:25" pos:end="49:25">=</operator> <call pos:start="49:27" pos:end="49:38"><name pos:start="49:27" pos:end="49:34">g_strdup</name><argument_list pos:start="49:35" pos:end="49:38">(<argument pos:start="49:36" pos:end="49:37"><expr pos:start="49:36" pos:end="49:37"><literal type="string" pos:start="49:36" pos:end="49:37">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="195:5"><if pos:start="53:5" pos:end="73:5">if <condition pos:start="53:8" pos:end="53:21">(<expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:15">nb_args</name> <operator pos:start="53:17" pos:end="53:18">&lt;=</operator> <literal type="number" pos:start="53:20" pos:end="53:20">1</literal></expr>)</condition> <block pos:start="53:23" pos:end="73:5">{<block_content pos:start="57:9" pos:end="71:9">

        <comment type="block" pos:start="55:9" pos:end="55:32">/* command completion */</comment>

        <if_stmt pos:start="57:9" pos:end="63:30"><if pos:start="57:9" pos:end="59:25">if <condition pos:start="57:12" pos:end="57:25">(<expr pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:19">nb_args</name> <operator pos:start="57:21" pos:end="57:22">==</operator> <literal type="number" pos:start="57:24" pos:end="57:24">0</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:25"><block_content pos:start="59:13" pos:end="59:25">

            <expr_stmt pos:start="59:13" pos:end="59:25"><expr pos:start="59:13" pos:end="59:24"><name pos:start="59:13" pos:end="59:19">cmdname</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <literal type="string" pos:start="59:23" pos:end="59:24">""</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="61:9" pos:end="63:30">else<block type="pseudo" pos:start="63:13" pos:end="63:30"><block_content pos:start="63:13" pos:end="63:30">

            <expr_stmt pos:start="63:13" pos:end="63:30"><expr pos:start="63:13" pos:end="63:29"><name pos:start="63:13" pos:end="63:19">cmdname</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <name pos:start="63:23" pos:end="63:29"><name pos:start="63:23" pos:end="63:26">args</name><index pos:start="63:27" pos:end="63:29">[<expr pos:start="63:28" pos:end="63:28"><literal type="number" pos:start="63:28" pos:end="63:28">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:64"><expr pos:start="65:9" pos:end="65:63"><call pos:start="65:9" pos:end="65:63"><name pos:start="65:9" pos:end="65:37">readline_set_completion_index</name><argument_list pos:start="65:38" pos:end="65:63">(<argument pos:start="65:39" pos:end="65:45"><expr pos:start="65:39" pos:end="65:45"><name pos:start="65:39" pos:end="65:45"><name pos:start="65:39" pos:end="65:41">mon</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:45">rs</name></name></expr></argument>, <argument pos:start="65:48" pos:end="65:62"><expr pos:start="65:48" pos:end="65:62"><call pos:start="65:48" pos:end="65:62"><name pos:start="65:48" pos:end="65:53">strlen</name><argument_list pos:start="65:54" pos:end="65:62">(<argument pos:start="65:55" pos:end="65:61"><expr pos:start="65:55" pos:end="65:61"><name pos:start="65:55" pos:end="65:61">cmdname</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="67:9" pos:end="71:9">for <control pos:start="67:13" pos:end="67:60">(<init pos:start="67:14" pos:end="67:34"><expr pos:start="67:14" pos:end="67:33"><name pos:start="67:14" pos:end="67:16">cmd</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:33"><name pos:start="67:20" pos:end="67:22">mon</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:33">cmd_table</name></name></expr>;</init> <condition pos:start="67:36" pos:end="67:53"><expr pos:start="67:36" pos:end="67:52"><name pos:start="67:36" pos:end="67:44"><name pos:start="67:36" pos:end="67:38">cmd</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:44">name</name></name> <operator pos:start="67:46" pos:end="67:47">!=</operator> <name pos:start="67:49" pos:end="67:52">NULL</name></expr>;</condition> <incr pos:start="67:55" pos:end="67:59"><expr pos:start="67:55" pos:end="67:59"><name pos:start="67:55" pos:end="67:57">cmd</name><operator pos:start="67:58" pos:end="67:59">++</operator></expr></incr>)</control> <block pos:start="67:62" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:52">

            <expr_stmt pos:start="69:13" pos:end="69:52"><expr pos:start="69:13" pos:end="69:51"><call pos:start="69:13" pos:end="69:51"><name pos:start="69:13" pos:end="69:26">cmd_completion</name><argument_list pos:start="69:27" pos:end="69:51">(<argument pos:start="69:28" pos:end="69:30"><expr pos:start="69:28" pos:end="69:30"><name pos:start="69:28" pos:end="69:30">mon</name></expr></argument>, <argument pos:start="69:33" pos:end="69:39"><expr pos:start="69:33" pos:end="69:39"><name pos:start="69:33" pos:end="69:39">cmdname</name></expr></argument>, <argument pos:start="69:42" pos:end="69:50"><expr pos:start="69:42" pos:end="69:50"><name pos:start="69:42" pos:end="69:50"><name pos:start="69:42" pos:end="69:44">cmd</name><operator pos:start="69:45" pos:end="69:46">-&gt;</operator><name pos:start="69:47" pos:end="69:50">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="73:7" pos:end="195:5">else <block pos:start="73:12" pos:end="195:5">{<block_content pos:start="77:9" pos:end="193:9">

        <comment type="block" pos:start="75:9" pos:end="75:30">/* find the command */</comment>

        <for pos:start="77:9" pos:end="85:9">for <control pos:start="77:13" pos:end="77:60">(<init pos:start="77:14" pos:end="77:34"><expr pos:start="77:14" pos:end="77:33"><name pos:start="77:14" pos:end="77:16">cmd</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <name pos:start="77:20" pos:end="77:33"><name pos:start="77:20" pos:end="77:22">mon</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:33">cmd_table</name></name></expr>;</init> <condition pos:start="77:36" pos:end="77:53"><expr pos:start="77:36" pos:end="77:52"><name pos:start="77:36" pos:end="77:44"><name pos:start="77:36" pos:end="77:38">cmd</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:44">name</name></name> <operator pos:start="77:46" pos:end="77:47">!=</operator> <name pos:start="77:49" pos:end="77:52">NULL</name></expr>;</condition> <incr pos:start="77:55" pos:end="77:59"><expr pos:start="77:55" pos:end="77:59"><name pos:start="77:55" pos:end="77:57">cmd</name><operator pos:start="77:58" pos:end="77:59">++</operator></expr></incr>)</control> <block pos:start="77:62" pos:end="85:9">{<block_content pos:start="79:13" pos:end="83:13">

            <if_stmt pos:start="79:13" pos:end="83:13"><if pos:start="79:13" pos:end="83:13">if <condition pos:start="79:16" pos:end="79:48">(<expr pos:start="79:17" pos:end="79:47"><call pos:start="79:17" pos:end="79:47"><name pos:start="79:17" pos:end="79:27">compare_cmd</name><argument_list pos:start="79:28" pos:end="79:47">(<argument pos:start="79:29" pos:end="79:35"><expr pos:start="79:29" pos:end="79:35"><name pos:start="79:29" pos:end="79:35"><name pos:start="79:29" pos:end="79:32">args</name><index pos:start="79:33" pos:end="79:35">[<expr pos:start="79:34" pos:end="79:34"><literal type="number" pos:start="79:34" pos:end="79:34">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="79:38" pos:end="79:46"><expr pos:start="79:38" pos:end="79:46"><name pos:start="79:38" pos:end="79:46"><name pos:start="79:38" pos:end="79:40">cmd</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:46">name</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:50" pos:end="83:13">{<block_content pos:start="81:17" pos:end="81:22">

                <break pos:start="81:17" pos:end="81:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="87:9" pos:end="91:9"><if pos:start="87:9" pos:end="91:9">if <condition pos:start="87:12" pos:end="87:23">(<expr pos:start="87:13" pos:end="87:22"><operator pos:start="87:13" pos:end="87:13">!</operator><name pos:start="87:14" pos:end="87:22"><name pos:start="87:14" pos:end="87:16">cmd</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:22">name</name></name></expr>)</condition> <block pos:start="87:25" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:25">

            <goto pos:start="89:13" pos:end="89:25">goto <name pos:start="89:18" pos:end="89:24">cleanup</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:46"><expr pos:start="95:9" pos:end="95:45"><name pos:start="95:9" pos:end="95:13">ptype</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <call pos:start="95:17" pos:end="95:45"><name pos:start="95:17" pos:end="95:29">next_arg_type</name><argument_list pos:start="95:30" pos:end="95:45">(<argument pos:start="95:31" pos:end="95:44"><expr pos:start="95:31" pos:end="95:44"><name pos:start="95:31" pos:end="95:44"><name pos:start="95:31" pos:end="95:33">cmd</name><operator pos:start="95:34" pos:end="95:35">-&gt;</operator><name pos:start="95:36" pos:end="95:44">args_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="97:9" pos:end="109:9">for<control pos:start="97:12" pos:end="97:40">(<init pos:start="97:13" pos:end="97:18"><expr pos:start="97:13" pos:end="97:17"><name pos:start="97:13" pos:end="97:13">i</name> <operator pos:start="97:15" pos:end="97:15">=</operator> <literal type="number" pos:start="97:17" pos:end="97:17">0</literal></expr>;</init> <condition pos:start="97:20" pos:end="97:35"><expr pos:start="97:20" pos:end="97:34"><name pos:start="97:20" pos:end="97:20">i</name> <operator pos:start="97:22" pos:end="97:22">&lt;</operator> <name pos:start="97:24" pos:end="97:30">nb_args</name> <operator pos:start="97:32" pos:end="97:32">-</operator> <literal type="number" pos:start="97:34" pos:end="97:34">2</literal></expr>;</condition> <incr pos:start="97:37" pos:end="97:39"><expr pos:start="97:37" pos:end="97:39"><name pos:start="97:37" pos:end="97:37">i</name><operator pos:start="97:38" pos:end="97:39">++</operator></expr></incr>)</control> <block pos:start="97:42" pos:end="109:9">{<block_content pos:start="99:13" pos:end="107:13">

            <if_stmt pos:start="99:13" pos:end="107:13"><if pos:start="99:13" pos:end="107:13">if <condition pos:start="99:16" pos:end="99:31">(<expr pos:start="99:17" pos:end="99:30"><operator pos:start="99:17" pos:end="99:17">*</operator><name pos:start="99:18" pos:end="99:22">ptype</name> <operator pos:start="99:24" pos:end="99:25">!=</operator> <literal type="char" pos:start="99:27" pos:end="99:30">'\0'</literal></expr>)</condition> <block pos:start="99:33" pos:end="107:13">{<block_content pos:start="101:17" pos:end="105:49">

                <expr_stmt pos:start="101:17" pos:end="101:45"><expr pos:start="101:17" pos:end="101:44"><name pos:start="101:17" pos:end="101:21">ptype</name> <operator pos:start="101:23" pos:end="101:23">=</operator> <call pos:start="101:25" pos:end="101:44"><name pos:start="101:25" pos:end="101:37">next_arg_type</name><argument_list pos:start="101:38" pos:end="101:44">(<argument pos:start="101:39" pos:end="101:43"><expr pos:start="101:39" pos:end="101:43"><name pos:start="101:39" pos:end="101:43">ptype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <while pos:start="103:17" pos:end="105:49">while <condition pos:start="103:23" pos:end="103:37">(<expr pos:start="103:24" pos:end="103:36"><operator pos:start="103:24" pos:end="103:24">*</operator><name pos:start="103:25" pos:end="103:29">ptype</name> <operator pos:start="103:31" pos:end="103:32">==</operator> <literal type="char" pos:start="103:34" pos:end="103:36">'?'</literal></expr>)</condition><block type="pseudo" pos:start="105:21" pos:end="105:49"><block_content pos:start="105:21" pos:end="105:49">

                    <expr_stmt pos:start="105:21" pos:end="105:49"><expr pos:start="105:21" pos:end="105:48"><name pos:start="105:21" pos:end="105:25">ptype</name> <operator pos:start="105:27" pos:end="105:27">=</operator> <call pos:start="105:29" pos:end="105:48"><name pos:start="105:29" pos:end="105:41">next_arg_type</name><argument_list pos:start="105:42" pos:end="105:48">(<argument pos:start="105:43" pos:end="105:47"><expr pos:start="105:43" pos:end="105:47"><name pos:start="105:43" pos:end="105:47">ptype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="111:9" pos:end="111:32"><expr pos:start="111:9" pos:end="111:31"><name pos:start="111:9" pos:end="111:11">str</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <name pos:start="111:15" pos:end="111:31"><name pos:start="111:15" pos:end="111:18">args</name><index pos:start="111:19" pos:end="111:31">[<expr pos:start="111:20" pos:end="111:30"><name pos:start="111:20" pos:end="111:26">nb_args</name> <operator pos:start="111:28" pos:end="111:28">-</operator> <literal type="number" pos:start="111:30" pos:end="111:30">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="117:9"><if pos:start="113:9" pos:end="117:9">if <condition pos:start="113:12" pos:end="113:46">(<expr pos:start="113:13" pos:end="113:45"><operator pos:start="113:13" pos:end="113:13">*</operator><name pos:start="113:14" pos:end="113:18">ptype</name> <operator pos:start="113:20" pos:end="113:21">==</operator> <literal type="char" pos:start="113:23" pos:end="113:25">'-'</literal> <operator pos:start="113:27" pos:end="113:28">&amp;&amp;</operator> <name pos:start="113:30" pos:end="113:37"><name pos:start="113:30" pos:end="113:34">ptype</name><index pos:start="113:35" pos:end="113:37">[<expr pos:start="113:36" pos:end="113:36"><literal type="number" pos:start="113:36" pos:end="113:36">1</literal></expr>]</index></name> <operator pos:start="113:39" pos:end="113:40">!=</operator> <literal type="char" pos:start="113:42" pos:end="113:45">'\0'</literal></expr>)</condition> <block pos:start="113:48" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:41">

            <expr_stmt pos:start="115:13" pos:end="115:41"><expr pos:start="115:13" pos:end="115:40"><name pos:start="115:13" pos:end="115:17">ptype</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <call pos:start="115:21" pos:end="115:40"><name pos:start="115:21" pos:end="115:33">next_arg_type</name><argument_list pos:start="115:34" pos:end="115:40">(<argument pos:start="115:35" pos:end="115:39"><expr pos:start="115:35" pos:end="115:39"><name pos:start="115:35" pos:end="115:39">ptype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="119:9" pos:end="193:9">switch<condition pos:start="119:15" pos:end="119:22">(<expr pos:start="119:16" pos:end="119:21"><operator pos:start="119:16" pos:end="119:16">*</operator><name pos:start="119:17" pos:end="119:21">ptype</name></expr>)</condition> <block pos:start="119:24" pos:end="193:9">{<block_content pos:start="121:9" pos:end="191:18">

        <case pos:start="121:9" pos:end="121:17">case <expr pos:start="121:14" pos:end="121:16"><literal type="char" pos:start="121:14" pos:end="121:16">'F'</literal></expr>:</case>

            <comment type="block" pos:start="123:13" pos:end="123:33">/* file completion */</comment>

            <expr_stmt pos:start="125:13" pos:end="125:64"><expr pos:start="125:13" pos:end="125:63"><call pos:start="125:13" pos:end="125:63"><name pos:start="125:13" pos:end="125:41">readline_set_completion_index</name><argument_list pos:start="125:42" pos:end="125:63">(<argument pos:start="125:43" pos:end="125:49"><expr pos:start="125:43" pos:end="125:49"><name pos:start="125:43" pos:end="125:49"><name pos:start="125:43" pos:end="125:45">mon</name><operator pos:start="125:46" pos:end="125:47">-&gt;</operator><name pos:start="125:48" pos:end="125:49">rs</name></name></expr></argument>, <argument pos:start="125:52" pos:end="125:62"><expr pos:start="125:52" pos:end="125:62"><call pos:start="125:52" pos:end="125:62"><name pos:start="125:52" pos:end="125:57">strlen</name><argument_list pos:start="125:58" pos:end="125:62">(<argument pos:start="125:59" pos:end="125:61"><expr pos:start="125:59" pos:end="125:61"><name pos:start="125:59" pos:end="125:61">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:38"><expr pos:start="127:13" pos:end="127:37"><call pos:start="127:13" pos:end="127:37"><name pos:start="127:13" pos:end="127:27">file_completion</name><argument_list pos:start="127:28" pos:end="127:37">(<argument pos:start="127:29" pos:end="127:31"><expr pos:start="127:29" pos:end="127:31"><name pos:start="127:29" pos:end="127:31">mon</name></expr></argument>, <argument pos:start="127:34" pos:end="127:36"><expr pos:start="127:34" pos:end="127:36"><name pos:start="127:34" pos:end="127:36">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:17">case <expr pos:start="131:14" pos:end="131:16"><literal type="char" pos:start="131:14" pos:end="131:16">'B'</literal></expr>:</case>

            <comment type="block" pos:start="133:13" pos:end="133:46">/* block device name completion */</comment>

            <expr_stmt pos:start="135:13" pos:end="135:26"><expr pos:start="135:13" pos:end="135:25"><name pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:15">mbs</name><operator pos:start="135:16" pos:end="135:16">.</operator><name pos:start="135:17" pos:end="135:19">mon</name></name> <operator pos:start="135:21" pos:end="135:21">=</operator> <name pos:start="135:23" pos:end="135:25">mon</name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:28"><expr pos:start="137:13" pos:end="137:27"><name pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:15">mbs</name><operator pos:start="137:16" pos:end="137:16">.</operator><name pos:start="137:17" pos:end="137:21">input</name></name> <operator pos:start="137:23" pos:end="137:23">=</operator> <name pos:start="137:25" pos:end="137:27">str</name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:64"><expr pos:start="139:13" pos:end="139:63"><call pos:start="139:13" pos:end="139:63"><name pos:start="139:13" pos:end="139:41">readline_set_completion_index</name><argument_list pos:start="139:42" pos:end="139:63">(<argument pos:start="139:43" pos:end="139:49"><expr pos:start="139:43" pos:end="139:49"><name pos:start="139:43" pos:end="139:49"><name pos:start="139:43" pos:end="139:45">mon</name><operator pos:start="139:46" pos:end="139:47">-&gt;</operator><name pos:start="139:48" pos:end="139:49">rs</name></name></expr></argument>, <argument pos:start="139:52" pos:end="139:62"><expr pos:start="139:52" pos:end="139:62"><call pos:start="139:52" pos:end="139:62"><name pos:start="139:52" pos:end="139:57">strlen</name><argument_list pos:start="139:58" pos:end="139:62">(<argument pos:start="139:59" pos:end="139:61"><expr pos:start="139:59" pos:end="139:61"><name pos:start="139:59" pos:end="139:61">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:52"><expr pos:start="141:13" pos:end="141:51"><call pos:start="141:13" pos:end="141:51"><name pos:start="141:13" pos:end="141:24">bdrv_iterate</name><argument_list pos:start="141:25" pos:end="141:51">(<argument pos:start="141:26" pos:end="141:44"><expr pos:start="141:26" pos:end="141:44"><name pos:start="141:26" pos:end="141:44">block_completion_it</name></expr></argument>, <argument pos:start="141:47" pos:end="141:50"><expr pos:start="141:47" pos:end="141:50"><operator pos:start="141:47" pos:end="141:47">&amp;</operator><name pos:start="141:48" pos:end="141:50">mbs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <case pos:start="145:9" pos:end="145:17">case <expr pos:start="145:14" pos:end="145:16"><literal type="char" pos:start="145:14" pos:end="145:16">'s'</literal></expr>:</case>

            <comment type="block" pos:start="147:13" pos:end="147:37">/* XXX: more generic ? */</comment>

            <if_stmt pos:start="149:13" pos:end="185:13"><if pos:start="149:13" pos:end="159:13">if <condition pos:start="149:16" pos:end="149:43">(<expr pos:start="149:17" pos:end="149:42"><operator pos:start="149:17" pos:end="149:17">!</operator><call pos:start="149:18" pos:end="149:42"><name pos:start="149:18" pos:end="149:23">strcmp</name><argument_list pos:start="149:24" pos:end="149:42">(<argument pos:start="149:25" pos:end="149:33"><expr pos:start="149:25" pos:end="149:33"><name pos:start="149:25" pos:end="149:33"><name pos:start="149:25" pos:end="149:27">cmd</name><operator pos:start="149:28" pos:end="149:29">-&gt;</operator><name pos:start="149:30" pos:end="149:33">name</name></name></expr></argument>, <argument pos:start="149:36" pos:end="149:41"><expr pos:start="149:36" pos:end="149:41"><literal type="string" pos:start="149:36" pos:end="149:41">"info"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="149:45" pos:end="159:13">{<block_content pos:start="151:17" pos:end="157:17">

                <expr_stmt pos:start="151:17" pos:end="151:68"><expr pos:start="151:17" pos:end="151:67"><call pos:start="151:17" pos:end="151:67"><name pos:start="151:17" pos:end="151:45">readline_set_completion_index</name><argument_list pos:start="151:46" pos:end="151:67">(<argument pos:start="151:47" pos:end="151:53"><expr pos:start="151:47" pos:end="151:53"><name pos:start="151:47" pos:end="151:53"><name pos:start="151:47" pos:end="151:49">mon</name><operator pos:start="151:50" pos:end="151:51">-&gt;</operator><name pos:start="151:52" pos:end="151:53">rs</name></name></expr></argument>, <argument pos:start="151:56" pos:end="151:66"><expr pos:start="151:56" pos:end="151:66"><call pos:start="151:56" pos:end="151:66"><name pos:start="151:56" pos:end="151:61">strlen</name><argument_list pos:start="151:62" pos:end="151:66">(<argument pos:start="151:63" pos:end="151:65"><expr pos:start="151:63" pos:end="151:65"><name pos:start="151:63" pos:end="151:65">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="153:17" pos:end="157:17">for<control pos:start="153:20" pos:end="153:62">(<init pos:start="153:21" pos:end="153:36"><expr pos:start="153:21" pos:end="153:35"><name pos:start="153:21" pos:end="153:23">cmd</name> <operator pos:start="153:25" pos:end="153:25">=</operator> <name pos:start="153:27" pos:end="153:35">info_cmds</name></expr>;</init> <condition pos:start="153:38" pos:end="153:55"><expr pos:start="153:38" pos:end="153:54"><name pos:start="153:38" pos:end="153:46"><name pos:start="153:38" pos:end="153:40">cmd</name><operator pos:start="153:41" pos:end="153:42">-&gt;</operator><name pos:start="153:43" pos:end="153:46">name</name></name> <operator pos:start="153:48" pos:end="153:49">!=</operator> <name pos:start="153:51" pos:end="153:54">NULL</name></expr>;</condition> <incr pos:start="153:57" pos:end="153:61"><expr pos:start="153:57" pos:end="153:61"><name pos:start="153:57" pos:end="153:59">cmd</name><operator pos:start="153:60" pos:end="153:61">++</operator></expr></incr>)</control> <block pos:start="153:64" pos:end="157:17">{<block_content pos:start="155:21" pos:end="155:56">

                    <expr_stmt pos:start="155:21" pos:end="155:56"><expr pos:start="155:21" pos:end="155:55"><call pos:start="155:21" pos:end="155:55"><name pos:start="155:21" pos:end="155:34">cmd_completion</name><argument_list pos:start="155:35" pos:end="155:55">(<argument pos:start="155:36" pos:end="155:38"><expr pos:start="155:36" pos:end="155:38"><name pos:start="155:36" pos:end="155:38">mon</name></expr></argument>, <argument pos:start="155:41" pos:end="155:43"><expr pos:start="155:41" pos:end="155:43"><name pos:start="155:41" pos:end="155:43">str</name></expr></argument>, <argument pos:start="155:46" pos:end="155:54"><expr pos:start="155:46" pos:end="155:54"><name pos:start="155:46" pos:end="155:54"><name pos:start="155:46" pos:end="155:48">cmd</name><operator pos:start="155:49" pos:end="155:50">-&gt;</operator><name pos:start="155:51" pos:end="155:54">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <if type="elseif" pos:start="159:15" pos:end="175:13">else if <condition pos:start="159:23" pos:end="159:53">(<expr pos:start="159:24" pos:end="159:52"><operator pos:start="159:24" pos:end="159:24">!</operator><call pos:start="159:25" pos:end="159:52"><name pos:start="159:25" pos:end="159:30">strcmp</name><argument_list pos:start="159:31" pos:end="159:52">(<argument pos:start="159:32" pos:end="159:40"><expr pos:start="159:32" pos:end="159:40"><name pos:start="159:32" pos:end="159:40"><name pos:start="159:32" pos:end="159:34">cmd</name><operator pos:start="159:35" pos:end="159:36">-&gt;</operator><name pos:start="159:37" pos:end="159:40">name</name></name></expr></argument>, <argument pos:start="159:43" pos:end="159:51"><expr pos:start="159:43" pos:end="159:51"><literal type="string" pos:start="159:43" pos:end="159:51">"sendkey"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:55" pos:end="175:13">{<block_content pos:start="161:17" pos:end="173:17">

                <decl_stmt pos:start="161:17" pos:end="161:46"><decl pos:start="161:17" pos:end="161:45"><type pos:start="161:17" pos:end="161:22"><name pos:start="161:17" pos:end="161:20">char</name> <modifier pos:start="161:22" pos:end="161:22">*</modifier></type><name pos:start="161:23" pos:end="161:25">sep</name> <init pos:start="161:27" pos:end="161:45">= <expr pos:start="161:29" pos:end="161:45"><call pos:start="161:29" pos:end="161:45"><name pos:start="161:29" pos:end="161:35">strrchr</name><argument_list pos:start="161:36" pos:end="161:45">(<argument pos:start="161:37" pos:end="161:39"><expr pos:start="161:37" pos:end="161:39"><name pos:start="161:37" pos:end="161:39">str</name></expr></argument>, <argument pos:start="161:42" pos:end="161:44"><expr pos:start="161:42" pos:end="161:44"><literal type="char" pos:start="161:42" pos:end="161:44">'-'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="163:17" pos:end="165:34"><if pos:start="163:17" pos:end="165:34">if <condition pos:start="163:20" pos:end="163:24">(<expr pos:start="163:21" pos:end="163:23"><name pos:start="163:21" pos:end="163:23">sep</name></expr>)</condition><block type="pseudo" pos:start="165:21" pos:end="165:34"><block_content pos:start="165:21" pos:end="165:34">

                    <expr_stmt pos:start="165:21" pos:end="165:34"><expr pos:start="165:21" pos:end="165:33"><name pos:start="165:21" pos:end="165:23">str</name> <operator pos:start="165:25" pos:end="165:25">=</operator> <name pos:start="165:27" pos:end="165:29">sep</name> <operator pos:start="165:31" pos:end="165:31">+</operator> <literal type="number" pos:start="165:33" pos:end="165:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:68"><expr pos:start="167:17" pos:end="167:67"><call pos:start="167:17" pos:end="167:67"><name pos:start="167:17" pos:end="167:45">readline_set_completion_index</name><argument_list pos:start="167:46" pos:end="167:67">(<argument pos:start="167:47" pos:end="167:53"><expr pos:start="167:47" pos:end="167:53"><name pos:start="167:47" pos:end="167:53"><name pos:start="167:47" pos:end="167:49">mon</name><operator pos:start="167:50" pos:end="167:51">-&gt;</operator><name pos:start="167:52" pos:end="167:53">rs</name></name></expr></argument>, <argument pos:start="167:56" pos:end="167:66"><expr pos:start="167:56" pos:end="167:66"><call pos:start="167:56" pos:end="167:66"><name pos:start="167:56" pos:end="167:61">strlen</name><argument_list pos:start="167:62" pos:end="167:66">(<argument pos:start="167:63" pos:end="167:65"><expr pos:start="167:63" pos:end="167:65"><name pos:start="167:63" pos:end="167:65">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="169:17" pos:end="173:17">for <control pos:start="169:21" pos:end="169:52">(<init pos:start="169:22" pos:end="169:27"><expr pos:start="169:22" pos:end="169:26"><name pos:start="169:22" pos:end="169:22">i</name> <operator pos:start="169:24" pos:end="169:24">=</operator> <literal type="number" pos:start="169:26" pos:end="169:26">0</literal></expr>;</init> <condition pos:start="169:29" pos:end="169:47"><expr pos:start="169:29" pos:end="169:46"><name pos:start="169:29" pos:end="169:29">i</name> <operator pos:start="169:31" pos:end="169:31">&lt;</operator> <name pos:start="169:33" pos:end="169:46">Q_KEY_CODE_MAX</name></expr>;</condition> <incr pos:start="169:49" pos:end="169:51"><expr pos:start="169:49" pos:end="169:51"><name pos:start="169:49" pos:end="169:49">i</name><operator pos:start="169:50" pos:end="169:51">++</operator></expr></incr>)</control> <block pos:start="169:54" pos:end="173:17">{<block_content pos:start="171:21" pos:end="171:65">

                    <expr_stmt pos:start="171:21" pos:end="171:65"><expr pos:start="171:21" pos:end="171:64"><call pos:start="171:21" pos:end="171:64"><name pos:start="171:21" pos:end="171:34">cmd_completion</name><argument_list pos:start="171:35" pos:end="171:64">(<argument pos:start="171:36" pos:end="171:38"><expr pos:start="171:36" pos:end="171:38"><name pos:start="171:36" pos:end="171:38">mon</name></expr></argument>, <argument pos:start="171:41" pos:end="171:43"><expr pos:start="171:41" pos:end="171:43"><name pos:start="171:41" pos:end="171:43">str</name></expr></argument>, <argument pos:start="171:46" pos:end="171:63"><expr pos:start="171:46" pos:end="171:63"><name pos:start="171:46" pos:end="171:63"><name pos:start="171:46" pos:end="171:60">QKeyCode_lookup</name><index pos:start="171:61" pos:end="171:63">[<expr pos:start="171:62" pos:end="171:62"><name pos:start="171:62" pos:end="171:62">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <if type="elseif" pos:start="175:15" pos:end="185:13">else if <condition pos:start="175:23" pos:end="175:52">(<expr pos:start="175:24" pos:end="175:51"><operator pos:start="175:24" pos:end="175:24">!</operator><call pos:start="175:25" pos:end="175:51"><name pos:start="175:25" pos:end="175:30">strcmp</name><argument_list pos:start="175:31" pos:end="175:51">(<argument pos:start="175:32" pos:end="175:40"><expr pos:start="175:32" pos:end="175:40"><name pos:start="175:32" pos:end="175:40"><name pos:start="175:32" pos:end="175:34">cmd</name><operator pos:start="175:35" pos:end="175:36">-&gt;</operator><name pos:start="175:37" pos:end="175:40">name</name></name></expr></argument>, <argument pos:start="175:43" pos:end="175:50"><expr pos:start="175:43" pos:end="175:50"><literal type="string" pos:start="175:43" pos:end="175:50">"help|?"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="175:54" pos:end="185:13">{<block_content pos:start="177:17" pos:end="183:17">

                <expr_stmt pos:start="177:17" pos:end="177:68"><expr pos:start="177:17" pos:end="177:67"><call pos:start="177:17" pos:end="177:67"><name pos:start="177:17" pos:end="177:45">readline_set_completion_index</name><argument_list pos:start="177:46" pos:end="177:67">(<argument pos:start="177:47" pos:end="177:53"><expr pos:start="177:47" pos:end="177:53"><name pos:start="177:47" pos:end="177:53"><name pos:start="177:47" pos:end="177:49">mon</name><operator pos:start="177:50" pos:end="177:51">-&gt;</operator><name pos:start="177:52" pos:end="177:53">rs</name></name></expr></argument>, <argument pos:start="177:56" pos:end="177:66"><expr pos:start="177:56" pos:end="177:66"><call pos:start="177:56" pos:end="177:66"><name pos:start="177:56" pos:end="177:61">strlen</name><argument_list pos:start="177:62" pos:end="177:66">(<argument pos:start="177:63" pos:end="177:65"><expr pos:start="177:63" pos:end="177:65"><name pos:start="177:63" pos:end="177:65">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="179:17" pos:end="183:17">for <control pos:start="179:21" pos:end="179:68">(<init pos:start="179:22" pos:end="179:42"><expr pos:start="179:22" pos:end="179:41"><name pos:start="179:22" pos:end="179:24">cmd</name> <operator pos:start="179:26" pos:end="179:26">=</operator> <name pos:start="179:28" pos:end="179:41"><name pos:start="179:28" pos:end="179:30">mon</name><operator pos:start="179:31" pos:end="179:32">-&gt;</operator><name pos:start="179:33" pos:end="179:41">cmd_table</name></name></expr>;</init> <condition pos:start="179:44" pos:end="179:61"><expr pos:start="179:44" pos:end="179:60"><name pos:start="179:44" pos:end="179:52"><name pos:start="179:44" pos:end="179:46">cmd</name><operator pos:start="179:47" pos:end="179:48">-&gt;</operator><name pos:start="179:49" pos:end="179:52">name</name></name> <operator pos:start="179:54" pos:end="179:55">!=</operator> <name pos:start="179:57" pos:end="179:60">NULL</name></expr>;</condition> <incr pos:start="179:63" pos:end="179:67"><expr pos:start="179:63" pos:end="179:67"><name pos:start="179:63" pos:end="179:65">cmd</name><operator pos:start="179:66" pos:end="179:67">++</operator></expr></incr>)</control> <block pos:start="179:70" pos:end="183:17">{<block_content pos:start="181:21" pos:end="181:56">

                    <expr_stmt pos:start="181:21" pos:end="181:56"><expr pos:start="181:21" pos:end="181:55"><call pos:start="181:21" pos:end="181:55"><name pos:start="181:21" pos:end="181:34">cmd_completion</name><argument_list pos:start="181:35" pos:end="181:55">(<argument pos:start="181:36" pos:end="181:38"><expr pos:start="181:36" pos:end="181:38"><name pos:start="181:36" pos:end="181:38">mon</name></expr></argument>, <argument pos:start="181:41" pos:end="181:43"><expr pos:start="181:41" pos:end="181:43"><name pos:start="181:41" pos:end="181:43">str</name></expr></argument>, <argument pos:start="181:46" pos:end="181:54"><expr pos:start="181:46" pos:end="181:54"><name pos:start="181:46" pos:end="181:54"><name pos:start="181:46" pos:end="181:48">cmd</name><operator pos:start="181:49" pos:end="181:50">-&gt;</operator><name pos:start="181:51" pos:end="181:54">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <break pos:start="187:13" pos:end="187:18">break;</break>

        <default pos:start="189:9" pos:end="189:16">default:</default>

            <break pos:start="191:13" pos:end="191:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>



<label pos:start="199:1" pos:end="199:8"><name pos:start="199:1" pos:end="199:7">cleanup</name>:</label>

    <for pos:start="201:5" pos:end="205:5">for <control pos:start="201:9" pos:end="201:33">(<init pos:start="201:10" pos:end="201:15"><expr pos:start="201:10" pos:end="201:14"><name pos:start="201:10" pos:end="201:10">i</name> <operator pos:start="201:12" pos:end="201:12">=</operator> <literal type="number" pos:start="201:14" pos:end="201:14">0</literal></expr>;</init> <condition pos:start="201:17" pos:end="201:28"><expr pos:start="201:17" pos:end="201:27"><name pos:start="201:17" pos:end="201:17">i</name> <operator pos:start="201:19" pos:end="201:19">&lt;</operator> <name pos:start="201:21" pos:end="201:27">nb_args</name></expr>;</condition> <incr pos:start="201:30" pos:end="201:32"><expr pos:start="201:30" pos:end="201:32"><name pos:start="201:30" pos:end="201:30">i</name><operator pos:start="201:31" pos:end="201:32">++</operator></expr></incr>)</control> <block pos:start="201:35" pos:end="205:5">{<block_content pos:start="203:9" pos:end="203:24">

        <expr_stmt pos:start="203:9" pos:end="203:24"><expr pos:start="203:9" pos:end="203:23"><call pos:start="203:9" pos:end="203:23"><name pos:start="203:9" pos:end="203:14">g_free</name><argument_list pos:start="203:15" pos:end="203:23">(<argument pos:start="203:16" pos:end="203:22"><expr pos:start="203:16" pos:end="203:22"><name pos:start="203:16" pos:end="203:22"><name pos:start="203:16" pos:end="203:19">args</name><index pos:start="203:20" pos:end="203:22">[<expr pos:start="203:21" pos:end="203:21"><name pos:start="203:21" pos:end="203:21">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
