<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25296.c" pos:tabs="8"><function pos:start="1:1" pos:end="343:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">deblocking_filter_CTB</name><parameter_list pos:start="1:34" pos:end="1:65">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:45">HEVCContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:56"><decl pos:start="1:51" pos:end="1:56"><type pos:start="1:51" pos:end="1:56"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:56">x0</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:64"><decl pos:start="1:59" pos:end="1:64"><type pos:start="1:59" pos:end="1:64"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:64">y0</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="343:1">{<block_content pos:start="5:5" pos:end="341:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">x</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">y</name></decl>, <decl pos:start="7:15" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:19">x_end</name></decl>, <decl pos:start="7:22" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:26">y_end</name></decl>, <decl pos:start="7:29" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:34">chroma</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:12">c_tc</name><index pos:start="9:13" pos:end="9:15">[<expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">2</literal></expr>]</index></name></decl>, <decl pos:start="9:18" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:24"><name pos:start="9:18" pos:end="9:21">beta</name><index pos:start="9:22" pos:end="9:24">[<expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">2</literal></expr>]</index></name></decl>, <decl pos:start="9:27" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:31"><name pos:start="9:27" pos:end="9:28">tc</name><index pos:start="9:29" pos:end="9:31">[<expr pos:start="9:30" pos:end="9:30"><literal type="number" pos:start="9:30" pos:end="9:30">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:19"><name pos:start="11:13" pos:end="11:16">no_p</name><index pos:start="11:17" pos:end="11:19">[<expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">2</literal></expr>]</index></name> <init pos:start="11:21" pos:end="11:27">= <expr pos:start="11:23" pos:end="11:27"><block pos:start="11:23" pos:end="11:27">{ <expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:19"><name pos:start="13:13" pos:end="13:16">no_q</name><index pos:start="13:17" pos:end="13:19">[<expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">2</literal></expr>]</index></name> <init pos:start="13:21" pos:end="13:27">= <expr pos:start="13:23" pos:end="13:27"><block pos:start="13:23" pos:end="13:27">{ <expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:46"><decl pos:start="17:5" pos:end="17:45"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:21">log2_ctb_size</name> <init pos:start="17:23" pos:end="17:45">= <expr pos:start="17:25" pos:end="17:45"><name pos:start="17:25" pos:end="17:45"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:30">sps</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:45">log2_ctb_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:45"><decl pos:start="19:5" pos:end="19:44"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">ctb_size</name>        <init pos:start="19:25" pos:end="19:44">= <expr pos:start="19:27" pos:end="19:44"><literal type="number" pos:start="19:27" pos:end="19:27">1</literal> <operator pos:start="19:29" pos:end="19:30">&lt;&lt;</operator> <name pos:start="19:32" pos:end="19:44">log2_ctb_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="23:68"><decl pos:start="21:5" pos:end="23:67"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ctb</name>             <init pos:start="21:25" pos:end="23:67">= <expr pos:start="21:27" pos:end="23:67"><operator pos:start="21:27" pos:end="21:27">(</operator><name pos:start="21:28" pos:end="21:29">x0</name> <operator pos:start="21:31" pos:end="21:32">&gt;&gt;</operator> <name pos:start="21:34" pos:end="21:46">log2_ctb_size</name><operator pos:start="21:47" pos:end="21:47">)</operator> <operator pos:start="21:49" pos:end="21:49">+</operator>

                          <operator pos:start="23:27" pos:end="23:27">(</operator><name pos:start="23:28" pos:end="23:29">y0</name> <operator pos:start="23:31" pos:end="23:32">&gt;&gt;</operator> <name pos:start="23:34" pos:end="23:46">log2_ctb_size</name><operator pos:start="23:47" pos:end="23:47">)</operator> <operator pos:start="23:49" pos:end="23:49">*</operator> <name pos:start="23:51" pos:end="23:67"><name pos:start="23:51" pos:end="23:51">s</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:56">sps</name><operator pos:start="23:57" pos:end="23:58">-&gt;</operator><name pos:start="23:59" pos:end="23:67">ctb_width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:52"><decl pos:start="25:5" pos:end="25:51"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:21">cur_tc_offset</name>   <init pos:start="25:25" pos:end="25:51">= <expr pos:start="25:27" pos:end="25:51"><name pos:start="25:27" pos:end="25:41"><name pos:start="25:27" pos:end="25:27">s</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:36">deblock</name><index pos:start="25:37" pos:end="25:41">[<expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:40">ctb</name></expr>]</index></name><operator pos:start="25:42" pos:end="25:42">.</operator><name pos:start="25:43" pos:end="25:51">tc_offset</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:54"><decl pos:start="27:5" pos:end="27:53"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:23">cur_beta_offset</name> <init pos:start="27:25" pos:end="27:53">= <expr pos:start="27:27" pos:end="27:53"><name pos:start="27:27" pos:end="27:41"><name pos:start="27:27" pos:end="27:27">s</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:36">deblock</name><index pos:start="27:37" pos:end="27:41">[<expr pos:start="27:38" pos:end="27:40"><name pos:start="27:38" pos:end="27:40">ctb</name></expr>]</index></name><operator pos:start="27:42" pos:end="27:42">.</operator><name pos:start="27:43" pos:end="27:53">beta_offset</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:65"><decl pos:start="29:5" pos:end="29:17"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:17">tc_offset</name></decl>, <decl pos:start="29:20" pos:end="29:33"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:20" pos:end="29:33">left_tc_offset</name></decl>, <decl pos:start="29:36" pos:end="29:46"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:36" pos:end="29:46">beta_offset</name></decl>, <decl pos:start="29:49" pos:end="29:64"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:49" pos:end="29:64">left_beta_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="35:53"><decl pos:start="31:5" pos:end="35:52"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:12">pcmf</name> <init pos:start="31:14" pos:end="35:52">= <expr pos:start="31:16" pos:end="35:52"><operator pos:start="31:16" pos:end="31:16">(</operator><name pos:start="31:17" pos:end="31:40"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:22">sps</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:40">pcm_enabled_flag</name></name> <operator pos:start="31:42" pos:end="31:43">&amp;&amp;</operator>

                <name pos:start="33:17" pos:end="33:52"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:22">sps</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:27">pcm</name><operator pos:start="33:28" pos:end="33:28">.</operator><name pos:start="33:29" pos:end="33:52">loop_filter_disable_flag</name></name><operator pos:start="33:53" pos:end="33:53">)</operator> <operator pos:start="33:55" pos:end="33:56">||</operator>

               <name pos:start="35:16" pos:end="35:52"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:21">pps</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:52">transquant_bypass_enable_flag</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:11">(<expr pos:start="39:9" pos:end="39:10"><name pos:start="39:9" pos:end="39:10">x0</name></expr>)</condition> <block pos:start="39:13" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:59">

        <expr_stmt pos:start="41:9" pos:end="41:57"><expr pos:start="41:9" pos:end="41:56"><name pos:start="41:9" pos:end="41:22">left_tc_offset</name>   <operator pos:start="41:26" pos:end="41:26">=</operator> <name pos:start="41:28" pos:end="41:46"><name pos:start="41:28" pos:end="41:28">s</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:37">deblock</name><index pos:start="41:38" pos:end="41:46">[<expr pos:start="41:39" pos:end="41:45"><name pos:start="41:39" pos:end="41:41">ctb</name> <operator pos:start="41:43" pos:end="41:43">-</operator> <literal type="number" pos:start="41:45" pos:end="41:45">1</literal></expr>]</index></name><operator pos:start="41:47" pos:end="41:47">.</operator><name pos:start="41:48" pos:end="41:56">tc_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:59"><expr pos:start="43:9" pos:end="43:58"><name pos:start="43:9" pos:end="43:24">left_beta_offset</name> <operator pos:start="43:26" pos:end="43:26">=</operator> <name pos:start="43:28" pos:end="43:46"><name pos:start="43:28" pos:end="43:28">s</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:37">deblock</name><index pos:start="43:38" pos:end="43:46">[<expr pos:start="43:39" pos:end="43:45"><name pos:start="43:39" pos:end="43:41">ctb</name> <operator pos:start="43:43" pos:end="43:43">-</operator> <literal type="number" pos:start="43:45" pos:end="43:45">1</literal></expr>]</index></name><operator pos:start="43:47" pos:end="43:47">.</operator><name pos:start="43:48" pos:end="43:58">beta_offset</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:26"><expr pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:9">x_end</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <name pos:start="49:13" pos:end="49:14">x0</name> <operator pos:start="49:16" pos:end="49:16">+</operator> <name pos:start="49:18" pos:end="49:25">ctb_size</name></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:30"><if pos:start="51:5" pos:end="53:30">if <condition pos:start="51:8" pos:end="51:30">(<expr pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:13">x_end</name> <operator pos:start="51:15" pos:end="51:15">&gt;</operator> <name pos:start="51:17" pos:end="51:29"><name pos:start="51:17" pos:end="51:17">s</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:22">sps</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:29">width</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:30"><block_content pos:start="53:9" pos:end="53:30">

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:13">x_end</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <name pos:start="53:17" pos:end="53:29"><name pos:start="53:17" pos:end="53:17">s</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:22">sps</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:29">width</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:26"><expr pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:9">y_end</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <name pos:start="55:13" pos:end="55:14">y0</name> <operator pos:start="55:16" pos:end="55:16">+</operator> <name pos:start="55:18" pos:end="55:25">ctb_size</name></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="59:31"><if pos:start="57:5" pos:end="59:31">if <condition pos:start="57:8" pos:end="57:31">(<expr pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:13">y_end</name> <operator pos:start="57:15" pos:end="57:15">&gt;</operator> <name pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:22">sps</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:30">height</name></name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:31"><block_content pos:start="59:9" pos:end="59:31">

        <expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:13">y_end</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <name pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:22">sps</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:30">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:13">tc_offset</name>   <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:31">cur_tc_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:34"><expr pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:15">beta_offset</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:33">cur_beta_offset</name></expr>;</expr_stmt>



    <comment type="line" pos:start="69:5" pos:end="69:30">// vertical filtering luma</comment>

    <for pos:start="71:5" pos:end="125:5">for <control pos:start="71:9" pos:end="71:35">(<init pos:start="71:10" pos:end="71:16"><expr pos:start="71:10" pos:end="71:15"><name pos:start="71:10" pos:end="71:10">y</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <name pos:start="71:14" pos:end="71:15">y0</name></expr>;</init> <condition pos:start="71:18" pos:end="71:27"><expr pos:start="71:18" pos:end="71:26"><name pos:start="71:18" pos:end="71:18">y</name> <operator pos:start="71:20" pos:end="71:20">&lt;</operator> <name pos:start="71:22" pos:end="71:26">y_end</name></expr>;</condition> <incr pos:start="71:29" pos:end="71:34"><expr pos:start="71:29" pos:end="71:34"><name pos:start="71:29" pos:end="71:29">y</name> <operator pos:start="71:31" pos:end="71:32">+=</operator> <literal type="number" pos:start="71:34" pos:end="71:34">8</literal></expr></incr>)</control> <block pos:start="71:37" pos:end="125:5">{<block_content pos:start="73:9" pos:end="123:9">

        <for pos:start="73:9" pos:end="123:9">for <control pos:start="73:13" pos:end="73:48">(<init pos:start="73:14" pos:end="73:29"><expr pos:start="73:14" pos:end="73:28"><name pos:start="73:14" pos:end="73:14">x</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <ternary pos:start="73:18" pos:end="73:28"><condition pos:start="73:18" pos:end="73:21"><expr pos:start="73:18" pos:end="73:19"><name pos:start="73:18" pos:end="73:19">x0</name></expr> ?</condition><then pos:start="73:23" pos:end="73:24"> <expr pos:start="73:23" pos:end="73:24"><name pos:start="73:23" pos:end="73:24">x0</name></expr> </then><else pos:start="73:26" pos:end="73:28">: <expr pos:start="73:28" pos:end="73:28"><literal type="number" pos:start="73:28" pos:end="73:28">8</literal></expr></else></ternary></expr>;</init> <condition pos:start="73:31" pos:end="73:40"><expr pos:start="73:31" pos:end="73:39"><name pos:start="73:31" pos:end="73:31">x</name> <operator pos:start="73:33" pos:end="73:33">&lt;</operator> <name pos:start="73:35" pos:end="73:39">x_end</name></expr>;</condition> <incr pos:start="73:42" pos:end="73:47"><expr pos:start="73:42" pos:end="73:47"><name pos:start="73:42" pos:end="73:42">x</name> <operator pos:start="73:44" pos:end="73:45">+=</operator> <literal type="number" pos:start="73:47" pos:end="73:47">8</literal></expr></incr>)</control> <block pos:start="73:50" pos:end="123:9">{<block_content pos:start="75:13" pos:end="121:13">

            <decl_stmt pos:start="75:13" pos:end="75:84"><decl pos:start="75:13" pos:end="75:83"><type pos:start="75:13" pos:end="75:21"><specifier pos:start="75:13" pos:end="75:17">const</specifier> <name pos:start="75:19" pos:end="75:21">int</name></type> <name pos:start="75:23" pos:end="75:25">bs0</name> <init pos:start="75:27" pos:end="75:83">= <expr pos:start="75:29" pos:end="75:83"><name pos:start="75:29" pos:end="75:83"><name pos:start="75:29" pos:end="75:29">s</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:42">vertical_bs</name><index pos:start="75:43" pos:end="75:83">[<expr pos:start="75:44" pos:end="75:82"><operator pos:start="75:44" pos:end="75:44">(</operator><name pos:start="75:45" pos:end="75:45">x</name> <operator pos:start="75:47" pos:end="75:48">&gt;&gt;</operator> <literal type="number" pos:start="75:50" pos:end="75:50">3</literal><operator pos:start="75:51" pos:end="75:51">)</operator> <operator pos:start="75:53" pos:end="75:53">+</operator> <operator pos:start="75:55" pos:end="75:55">(</operator><name pos:start="75:56" pos:end="75:56">y</name>       <operator pos:start="75:64" pos:end="75:65">&gt;&gt;</operator> <literal type="number" pos:start="75:67" pos:end="75:67">2</literal><operator pos:start="75:68" pos:end="75:68">)</operator> <operator pos:start="75:70" pos:end="75:70">*</operator> <name pos:start="75:72" pos:end="75:82"><name pos:start="75:72" pos:end="75:72">s</name><operator pos:start="75:73" pos:end="75:74">-&gt;</operator><name pos:start="75:75" pos:end="75:82">bs_width</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="77:13" pos:end="77:84"><decl pos:start="77:13" pos:end="77:83"><type pos:start="77:13" pos:end="77:21"><specifier pos:start="77:13" pos:end="77:17">const</specifier> <name pos:start="77:19" pos:end="77:21">int</name></type> <name pos:start="77:23" pos:end="77:25">bs1</name> <init pos:start="77:27" pos:end="77:83">= <expr pos:start="77:29" pos:end="77:83"><name pos:start="77:29" pos:end="77:83"><name pos:start="77:29" pos:end="77:29">s</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:42">vertical_bs</name><index pos:start="77:43" pos:end="77:83">[<expr pos:start="77:44" pos:end="77:82"><operator pos:start="77:44" pos:end="77:44">(</operator><name pos:start="77:45" pos:end="77:45">x</name> <operator pos:start="77:47" pos:end="77:48">&gt;&gt;</operator> <literal type="number" pos:start="77:50" pos:end="77:50">3</literal><operator pos:start="77:51" pos:end="77:51">)</operator> <operator pos:start="77:53" pos:end="77:53">+</operator> <operator pos:start="77:55" pos:end="77:55">(</operator><operator pos:start="77:56" pos:end="77:56">(</operator><name pos:start="77:57" pos:end="77:57">y</name> <operator pos:start="77:59" pos:end="77:59">+</operator> <literal type="number" pos:start="77:61" pos:end="77:61">4</literal><operator pos:start="77:62" pos:end="77:62">)</operator> <operator pos:start="77:64" pos:end="77:65">&gt;&gt;</operator> <literal type="number" pos:start="77:67" pos:end="77:67">2</literal><operator pos:start="77:68" pos:end="77:68">)</operator> <operator pos:start="77:70" pos:end="77:70">*</operator> <name pos:start="77:72" pos:end="77:82"><name pos:start="77:72" pos:end="77:72">s</name><operator pos:start="77:73" pos:end="77:74">-&gt;</operator><name pos:start="77:75" pos:end="77:82">bs_width</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="79:13" pos:end="121:13"><if pos:start="79:13" pos:end="121:13">if <condition pos:start="79:16" pos:end="79:27">(<expr pos:start="79:17" pos:end="79:26"><name pos:start="79:17" pos:end="79:19">bs0</name> <operator pos:start="79:21" pos:end="79:22">||</operator> <name pos:start="79:24" pos:end="79:26">bs1</name></expr>)</condition> <block pos:start="79:29" pos:end="121:13">{<block_content pos:start="81:17" pos:end="119:77">

                <decl_stmt pos:start="81:17" pos:end="81:91"><decl pos:start="81:17" pos:end="81:90"><type pos:start="81:17" pos:end="81:25"><specifier pos:start="81:17" pos:end="81:21">const</specifier> <name pos:start="81:23" pos:end="81:25">int</name></type> <name pos:start="81:27" pos:end="81:29">qp0</name> <init pos:start="81:31" pos:end="81:90">= <expr pos:start="81:33" pos:end="81:90"><operator pos:start="81:33" pos:end="81:33">(</operator><call pos:start="81:34" pos:end="81:53"><name pos:start="81:34" pos:end="81:40">get_qPy</name><argument_list pos:start="81:41" pos:end="81:53">(<argument pos:start="81:42" pos:end="81:42"><expr pos:start="81:42" pos:end="81:42"><name pos:start="81:42" pos:end="81:42">s</name></expr></argument>, <argument pos:start="81:45" pos:end="81:49"><expr pos:start="81:45" pos:end="81:49"><name pos:start="81:45" pos:end="81:45">x</name> <operator pos:start="81:47" pos:end="81:47">-</operator> <literal type="number" pos:start="81:49" pos:end="81:49">1</literal></expr></argument>, <argument pos:start="81:52" pos:end="81:52"><expr pos:start="81:52" pos:end="81:52"><name pos:start="81:52" pos:end="81:52">y</name></expr></argument>)</argument_list></call>     <operator pos:start="81:59" pos:end="81:59">+</operator> <call pos:start="81:61" pos:end="81:76"><name pos:start="81:61" pos:end="81:67">get_qPy</name><argument_list pos:start="81:68" pos:end="81:76">(<argument pos:start="81:69" pos:end="81:69"><expr pos:start="81:69" pos:end="81:69"><name pos:start="81:69" pos:end="81:69">s</name></expr></argument>, <argument pos:start="81:72" pos:end="81:72"><expr pos:start="81:72" pos:end="81:72"><name pos:start="81:72" pos:end="81:72">x</name></expr></argument>, <argument pos:start="81:75" pos:end="81:75"><expr pos:start="81:75" pos:end="81:75"><name pos:start="81:75" pos:end="81:75">y</name></expr></argument>)</argument_list></call>     <operator pos:start="81:82" pos:end="81:82">+</operator> <literal type="number" pos:start="81:84" pos:end="81:84">1</literal><operator pos:start="81:85" pos:end="81:85">)</operator> <operator pos:start="81:87" pos:end="81:88">&gt;&gt;</operator> <literal type="number" pos:start="81:90" pos:end="81:90">1</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="83:17" pos:end="83:91"><decl pos:start="83:17" pos:end="83:90"><type pos:start="83:17" pos:end="83:25"><specifier pos:start="83:17" pos:end="83:21">const</specifier> <name pos:start="83:23" pos:end="83:25">int</name></type> <name pos:start="83:27" pos:end="83:29">qp1</name> <init pos:start="83:31" pos:end="83:90">= <expr pos:start="83:33" pos:end="83:90"><operator pos:start="83:33" pos:end="83:33">(</operator><call pos:start="83:34" pos:end="83:57"><name pos:start="83:34" pos:end="83:40">get_qPy</name><argument_list pos:start="83:41" pos:end="83:57">(<argument pos:start="83:42" pos:end="83:42"><expr pos:start="83:42" pos:end="83:42"><name pos:start="83:42" pos:end="83:42">s</name></expr></argument>, <argument pos:start="83:45" pos:end="83:49"><expr pos:start="83:45" pos:end="83:49"><name pos:start="83:45" pos:end="83:45">x</name> <operator pos:start="83:47" pos:end="83:47">-</operator> <literal type="number" pos:start="83:49" pos:end="83:49">1</literal></expr></argument>, <argument pos:start="83:52" pos:end="83:56"><expr pos:start="83:52" pos:end="83:56"><name pos:start="83:52" pos:end="83:52">y</name> <operator pos:start="83:54" pos:end="83:54">+</operator> <literal type="number" pos:start="83:56" pos:end="83:56">4</literal></expr></argument>)</argument_list></call> <operator pos:start="83:59" pos:end="83:59">+</operator> <call pos:start="83:61" pos:end="83:80"><name pos:start="83:61" pos:end="83:67">get_qPy</name><argument_list pos:start="83:68" pos:end="83:80">(<argument pos:start="83:69" pos:end="83:69"><expr pos:start="83:69" pos:end="83:69"><name pos:start="83:69" pos:end="83:69">s</name></expr></argument>, <argument pos:start="83:72" pos:end="83:72"><expr pos:start="83:72" pos:end="83:72"><name pos:start="83:72" pos:end="83:72">x</name></expr></argument>, <argument pos:start="83:75" pos:end="83:79"><expr pos:start="83:75" pos:end="83:79"><name pos:start="83:75" pos:end="83:75">y</name> <operator pos:start="83:77" pos:end="83:77">+</operator> <literal type="number" pos:start="83:79" pos:end="83:79">4</literal></expr></argument>)</argument_list></call> <operator pos:start="83:82" pos:end="83:82">+</operator> <literal type="number" pos:start="83:84" pos:end="83:84">1</literal><operator pos:start="83:85" pos:end="83:85">)</operator> <operator pos:start="83:87" pos:end="83:88">&gt;&gt;</operator> <literal type="number" pos:start="83:90" pos:end="83:90">1</literal></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="87:17" pos:end="87:75"><expr pos:start="87:17" pos:end="87:74"><name pos:start="87:17" pos:end="87:23"><name pos:start="87:17" pos:end="87:20">beta</name><index pos:start="87:21" pos:end="87:23">[<expr pos:start="87:22" pos:end="87:22"><literal type="number" pos:start="87:22" pos:end="87:22">0</literal></expr>]</index></name> <operator pos:start="87:25" pos:end="87:25">=</operator> <name pos:start="87:27" pos:end="87:74"><name pos:start="87:27" pos:end="87:35">betatable</name><index pos:start="87:36" pos:end="87:74">[<expr pos:start="87:37" pos:end="87:73"><call pos:start="87:37" pos:end="87:73"><name pos:start="87:37" pos:end="87:43">av_clip</name><argument_list pos:start="87:44" pos:end="87:73">(<argument pos:start="87:45" pos:end="87:61"><expr pos:start="87:45" pos:end="87:61"><name pos:start="87:45" pos:end="87:47">qp0</name> <operator pos:start="87:49" pos:end="87:49">+</operator> <name pos:start="87:51" pos:end="87:61">beta_offset</name></expr></argument>, <argument pos:start="87:64" pos:end="87:64"><expr pos:start="87:64" pos:end="87:64"><literal type="number" pos:start="87:64" pos:end="87:64">0</literal></expr></argument>, <argument pos:start="87:67" pos:end="87:72"><expr pos:start="87:67" pos:end="87:72"><name pos:start="87:67" pos:end="87:72">MAX_QP</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:75"><expr pos:start="89:17" pos:end="89:74"><name pos:start="89:17" pos:end="89:23"><name pos:start="89:17" pos:end="89:20">beta</name><index pos:start="89:21" pos:end="89:23">[<expr pos:start="89:22" pos:end="89:22"><literal type="number" pos:start="89:22" pos:end="89:22">1</literal></expr>]</index></name> <operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:74"><name pos:start="89:27" pos:end="89:35">betatable</name><index pos:start="89:36" pos:end="89:74">[<expr pos:start="89:37" pos:end="89:73"><call pos:start="89:37" pos:end="89:73"><name pos:start="89:37" pos:end="89:43">av_clip</name><argument_list pos:start="89:44" pos:end="89:73">(<argument pos:start="89:45" pos:end="89:61"><expr pos:start="89:45" pos:end="89:61"><name pos:start="89:45" pos:end="89:47">qp1</name> <operator pos:start="89:49" pos:end="89:49">+</operator> <name pos:start="89:51" pos:end="89:61">beta_offset</name></expr></argument>, <argument pos:start="89:64" pos:end="89:64"><expr pos:start="89:64" pos:end="89:64"><literal type="number" pos:start="89:64" pos:end="89:64">0</literal></expr></argument>, <argument pos:start="89:67" pos:end="89:72"><expr pos:start="89:67" pos:end="89:72"><name pos:start="89:67" pos:end="89:72">MAX_QP</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:54"><expr pos:start="91:17" pos:end="91:53"><name pos:start="91:17" pos:end="91:21"><name pos:start="91:17" pos:end="91:18">tc</name><index pos:start="91:19" pos:end="91:21">[<expr pos:start="91:20" pos:end="91:20"><literal type="number" pos:start="91:20" pos:end="91:20">0</literal></expr>]</index></name>   <operator pos:start="91:25" pos:end="91:25">=</operator> <ternary pos:start="91:27" pos:end="91:53"><condition pos:start="91:27" pos:end="91:31"><expr pos:start="91:27" pos:end="91:29"><name pos:start="91:27" pos:end="91:29">bs0</name></expr> ?</condition><then pos:start="91:33" pos:end="91:49"> <expr pos:start="91:33" pos:end="91:49"><call pos:start="91:33" pos:end="91:49"><name pos:start="91:33" pos:end="91:39">TC_CALC</name><argument_list pos:start="91:40" pos:end="91:49">(<argument pos:start="91:41" pos:end="91:43"><expr pos:start="91:41" pos:end="91:43"><name pos:start="91:41" pos:end="91:43">qp0</name></expr></argument>, <argument pos:start="91:46" pos:end="91:48"><expr pos:start="91:46" pos:end="91:48"><name pos:start="91:46" pos:end="91:48">bs0</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="91:51" pos:end="91:53">: <expr pos:start="91:53" pos:end="91:53"><literal type="number" pos:start="91:53" pos:end="91:53">0</literal></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:54"><expr pos:start="93:17" pos:end="93:53"><name pos:start="93:17" pos:end="93:21"><name pos:start="93:17" pos:end="93:18">tc</name><index pos:start="93:19" pos:end="93:21">[<expr pos:start="93:20" pos:end="93:20"><literal type="number" pos:start="93:20" pos:end="93:20">1</literal></expr>]</index></name>   <operator pos:start="93:25" pos:end="93:25">=</operator> <ternary pos:start="93:27" pos:end="93:53"><condition pos:start="93:27" pos:end="93:31"><expr pos:start="93:27" pos:end="93:29"><name pos:start="93:27" pos:end="93:29">bs1</name></expr> ?</condition><then pos:start="93:33" pos:end="93:49"> <expr pos:start="93:33" pos:end="93:49"><call pos:start="93:33" pos:end="93:49"><name pos:start="93:33" pos:end="93:39">TC_CALC</name><argument_list pos:start="93:40" pos:end="93:49">(<argument pos:start="93:41" pos:end="93:43"><expr pos:start="93:41" pos:end="93:43"><name pos:start="93:41" pos:end="93:43">qp1</name></expr></argument>, <argument pos:start="93:46" pos:end="93:48"><expr pos:start="93:46" pos:end="93:48"><name pos:start="93:46" pos:end="93:48">bs1</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="93:51" pos:end="93:53">: <expr pos:start="93:53" pos:end="93:53"><literal type="number" pos:start="93:53" pos:end="93:53">0</literal></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:107"><expr pos:start="95:17" pos:end="95:106"><name pos:start="95:17" pos:end="95:19">src</name>     <operator pos:start="95:25" pos:end="95:25">=</operator> <operator pos:start="95:27" pos:end="95:27">&amp;</operator><name pos:start="95:28" pos:end="95:106"><name pos:start="95:28" pos:end="95:28">s</name><operator pos:start="95:29" pos:end="95:30">-&gt;</operator><name pos:start="95:31" pos:end="95:35">frame</name><operator pos:start="95:36" pos:end="95:37">-&gt;</operator><name pos:start="95:38" pos:end="95:41">data</name><index pos:start="95:42" pos:end="95:47">[<expr pos:start="95:43" pos:end="95:46"><name pos:start="95:43" pos:end="95:46">LUMA</name></expr>]</index><index pos:start="95:48" pos:end="95:106">[<expr pos:start="95:49" pos:end="95:105"><name pos:start="95:49" pos:end="95:49">y</name> <operator pos:start="95:51" pos:end="95:51">*</operator> <name pos:start="95:53" pos:end="95:76"><name pos:start="95:53" pos:end="95:53">s</name><operator pos:start="95:54" pos:end="95:55">-&gt;</operator><name pos:start="95:56" pos:end="95:60">frame</name><operator pos:start="95:61" pos:end="95:62">-&gt;</operator><name pos:start="95:63" pos:end="95:70">linesize</name><index pos:start="95:71" pos:end="95:76">[<expr pos:start="95:72" pos:end="95:75"><name pos:start="95:72" pos:end="95:75">LUMA</name></expr>]</index></name> <operator pos:start="95:78" pos:end="95:78">+</operator> <operator pos:start="95:80" pos:end="95:80">(</operator><name pos:start="95:81" pos:end="95:81">x</name> <operator pos:start="95:83" pos:end="95:84">&lt;&lt;</operator> <name pos:start="95:86" pos:end="95:104"><name pos:start="95:86" pos:end="95:86">s</name><operator pos:start="95:87" pos:end="95:88">-&gt;</operator><name pos:start="95:89" pos:end="95:91">sps</name><operator pos:start="95:92" pos:end="95:93">-&gt;</operator><name pos:start="95:94" pos:end="95:104">pixel_shift</name></name><operator pos:start="95:105" pos:end="95:105">)</operator></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="97:17" pos:end="119:77"><if pos:start="97:17" pos:end="113:17">if <condition pos:start="97:20" pos:end="97:25">(<expr pos:start="97:21" pos:end="97:24"><name pos:start="97:21" pos:end="97:24">pcmf</name></expr>)</condition> <block pos:start="97:27" pos:end="113:17">{<block_content pos:start="99:21" pos:end="111:79">

                    <expr_stmt pos:start="99:21" pos:end="99:51"><expr pos:start="99:21" pos:end="99:50"><name pos:start="99:21" pos:end="99:27"><name pos:start="99:21" pos:end="99:24">no_p</name><index pos:start="99:25" pos:end="99:27">[<expr pos:start="99:26" pos:end="99:26"><literal type="number" pos:start="99:26" pos:end="99:26">0</literal></expr>]</index></name> <operator pos:start="99:29" pos:end="99:29">=</operator> <call pos:start="99:31" pos:end="99:50"><name pos:start="99:31" pos:end="99:37">get_pcm</name><argument_list pos:start="99:38" pos:end="99:50">(<argument pos:start="99:39" pos:end="99:39"><expr pos:start="99:39" pos:end="99:39"><name pos:start="99:39" pos:end="99:39">s</name></expr></argument>, <argument pos:start="99:42" pos:end="99:46"><expr pos:start="99:42" pos:end="99:46"><name pos:start="99:42" pos:end="99:42">x</name> <operator pos:start="99:44" pos:end="99:44">-</operator> <literal type="number" pos:start="99:46" pos:end="99:46">1</literal></expr></argument>, <argument pos:start="99:49" pos:end="99:49"><expr pos:start="99:49" pos:end="99:49"><name pos:start="99:49" pos:end="99:49">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="101:21" pos:end="101:55"><expr pos:start="101:21" pos:end="101:54"><name pos:start="101:21" pos:end="101:27"><name pos:start="101:21" pos:end="101:24">no_p</name><index pos:start="101:25" pos:end="101:27">[<expr pos:start="101:26" pos:end="101:26"><literal type="number" pos:start="101:26" pos:end="101:26">1</literal></expr>]</index></name> <operator pos:start="101:29" pos:end="101:29">=</operator> <call pos:start="101:31" pos:end="101:54"><name pos:start="101:31" pos:end="101:37">get_pcm</name><argument_list pos:start="101:38" pos:end="101:54">(<argument pos:start="101:39" pos:end="101:39"><expr pos:start="101:39" pos:end="101:39"><name pos:start="101:39" pos:end="101:39">s</name></expr></argument>, <argument pos:start="101:42" pos:end="101:46"><expr pos:start="101:42" pos:end="101:46"><name pos:start="101:42" pos:end="101:42">x</name> <operator pos:start="101:44" pos:end="101:44">-</operator> <literal type="number" pos:start="101:46" pos:end="101:46">1</literal></expr></argument>, <argument pos:start="101:49" pos:end="101:53"><expr pos:start="101:49" pos:end="101:53"><name pos:start="101:49" pos:end="101:49">y</name> <operator pos:start="101:51" pos:end="101:51">+</operator> <literal type="number" pos:start="101:53" pos:end="101:53">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="103:21" pos:end="103:47"><expr pos:start="103:21" pos:end="103:46"><name pos:start="103:21" pos:end="103:27"><name pos:start="103:21" pos:end="103:24">no_q</name><index pos:start="103:25" pos:end="103:27">[<expr pos:start="103:26" pos:end="103:26"><literal type="number" pos:start="103:26" pos:end="103:26">0</literal></expr>]</index></name> <operator pos:start="103:29" pos:end="103:29">=</operator> <call pos:start="103:31" pos:end="103:46"><name pos:start="103:31" pos:end="103:37">get_pcm</name><argument_list pos:start="103:38" pos:end="103:46">(<argument pos:start="103:39" pos:end="103:39"><expr pos:start="103:39" pos:end="103:39"><name pos:start="103:39" pos:end="103:39">s</name></expr></argument>, <argument pos:start="103:42" pos:end="103:42"><expr pos:start="103:42" pos:end="103:42"><name pos:start="103:42" pos:end="103:42">x</name></expr></argument>, <argument pos:start="103:45" pos:end="103:45"><expr pos:start="103:45" pos:end="103:45"><name pos:start="103:45" pos:end="103:45">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="105:21" pos:end="105:51"><expr pos:start="105:21" pos:end="105:50"><name pos:start="105:21" pos:end="105:27"><name pos:start="105:21" pos:end="105:24">no_q</name><index pos:start="105:25" pos:end="105:27">[<expr pos:start="105:26" pos:end="105:26"><literal type="number" pos:start="105:26" pos:end="105:26">1</literal></expr>]</index></name> <operator pos:start="105:29" pos:end="105:29">=</operator> <call pos:start="105:31" pos:end="105:50"><name pos:start="105:31" pos:end="105:37">get_pcm</name><argument_list pos:start="105:38" pos:end="105:50">(<argument pos:start="105:39" pos:end="105:39"><expr pos:start="105:39" pos:end="105:39"><name pos:start="105:39" pos:end="105:39">s</name></expr></argument>, <argument pos:start="105:42" pos:end="105:42"><expr pos:start="105:42" pos:end="105:42"><name pos:start="105:42" pos:end="105:42">x</name></expr></argument>, <argument pos:start="105:45" pos:end="105:49"><expr pos:start="105:45" pos:end="105:49"><name pos:start="105:45" pos:end="105:45">y</name> <operator pos:start="105:47" pos:end="105:47">+</operator> <literal type="number" pos:start="105:49" pos:end="105:49">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="107:21" pos:end="111:79"><expr pos:start="107:21" pos:end="111:78"><call pos:start="107:21" pos:end="111:78"><name pos:start="107:21" pos:end="107:56"><name pos:start="107:21" pos:end="107:21">s</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:30">hevcdsp</name><operator pos:start="107:31" pos:end="107:31">.</operator><name pos:start="107:32" pos:end="107:56">hevc_v_loop_filter_luma_c</name></name><argument_list pos:start="107:57" pos:end="111:78">(<argument pos:start="107:58" pos:end="107:60"><expr pos:start="107:58" pos:end="107:60"><name pos:start="107:58" pos:end="107:60">src</name></expr></argument>,

                                                         <argument pos:start="109:58" pos:end="109:81"><expr pos:start="109:58" pos:end="109:81"><name pos:start="109:58" pos:end="109:81"><name pos:start="109:58" pos:end="109:58">s</name><operator pos:start="109:59" pos:end="109:60">-&gt;</operator><name pos:start="109:61" pos:end="109:65">frame</name><operator pos:start="109:66" pos:end="109:67">-&gt;</operator><name pos:start="109:68" pos:end="109:75">linesize</name><index pos:start="109:76" pos:end="109:81">[<expr pos:start="109:77" pos:end="109:80"><name pos:start="109:77" pos:end="109:80">LUMA</name></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="111:58" pos:end="111:61"><expr pos:start="111:58" pos:end="111:61"><name pos:start="111:58" pos:end="111:61">beta</name></expr></argument>, <argument pos:start="111:64" pos:end="111:65"><expr pos:start="111:64" pos:end="111:65"><name pos:start="111:64" pos:end="111:65">tc</name></expr></argument>, <argument pos:start="111:68" pos:end="111:71"><expr pos:start="111:68" pos:end="111:71"><name pos:start="111:68" pos:end="111:71">no_p</name></expr></argument>, <argument pos:start="111:74" pos:end="111:77"><expr pos:start="111:74" pos:end="111:77"><name pos:start="111:74" pos:end="111:77">no_q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="113:19" pos:end="119:77">else<block type="pseudo" pos:start="115:21" pos:end="119:77"><block_content pos:start="115:21" pos:end="119:77">

                    <expr_stmt pos:start="115:21" pos:end="119:77"><expr pos:start="115:21" pos:end="119:76"><call pos:start="115:21" pos:end="119:76"><name pos:start="115:21" pos:end="115:54"><name pos:start="115:21" pos:end="115:21">s</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:30">hevcdsp</name><operator pos:start="115:31" pos:end="115:31">.</operator><name pos:start="115:32" pos:end="115:54">hevc_v_loop_filter_luma</name></name><argument_list pos:start="115:55" pos:end="119:76">(<argument pos:start="115:56" pos:end="115:58"><expr pos:start="115:56" pos:end="115:58"><name pos:start="115:56" pos:end="115:58">src</name></expr></argument>,

                                                       <argument pos:start="117:56" pos:end="117:79"><expr pos:start="117:56" pos:end="117:79"><name pos:start="117:56" pos:end="117:79"><name pos:start="117:56" pos:end="117:56">s</name><operator pos:start="117:57" pos:end="117:58">-&gt;</operator><name pos:start="117:59" pos:end="117:63">frame</name><operator pos:start="117:64" pos:end="117:65">-&gt;</operator><name pos:start="117:66" pos:end="117:73">linesize</name><index pos:start="117:74" pos:end="117:79">[<expr pos:start="117:75" pos:end="117:78"><name pos:start="117:75" pos:end="117:78">LUMA</name></expr>]</index></name></expr></argument>,

                                                       <argument pos:start="119:56" pos:end="119:59"><expr pos:start="119:56" pos:end="119:59"><name pos:start="119:56" pos:end="119:59">beta</name></expr></argument>, <argument pos:start="119:62" pos:end="119:63"><expr pos:start="119:62" pos:end="119:63"><name pos:start="119:62" pos:end="119:63">tc</name></expr></argument>, <argument pos:start="119:66" pos:end="119:69"><expr pos:start="119:66" pos:end="119:69"><name pos:start="119:66" pos:end="119:69">no_p</name></expr></argument>, <argument pos:start="119:72" pos:end="119:75"><expr pos:start="119:72" pos:end="119:75"><name pos:start="119:72" pos:end="119:75">no_q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="line" pos:start="129:5" pos:end="129:32">// vertical filtering chroma</comment>

    <for pos:start="131:5" pos:end="185:5">for <control pos:start="131:9" pos:end="131:43">(<init pos:start="131:10" pos:end="131:20"><expr pos:start="131:10" pos:end="131:19"><name pos:start="131:10" pos:end="131:15">chroma</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <literal type="number" pos:start="131:19" pos:end="131:19">1</literal></expr>;</init> <condition pos:start="131:22" pos:end="131:33"><expr pos:start="131:22" pos:end="131:32"><name pos:start="131:22" pos:end="131:27">chroma</name> <operator pos:start="131:29" pos:end="131:30">&lt;=</operator> <literal type="number" pos:start="131:32" pos:end="131:32">2</literal></expr>;</condition> <incr pos:start="131:35" pos:end="131:42"><expr pos:start="131:35" pos:end="131:42"><name pos:start="131:35" pos:end="131:40">chroma</name><operator pos:start="131:41" pos:end="131:42">++</operator></expr></incr>)</control> <block pos:start="131:45" pos:end="185:5">{<block_content pos:start="133:9" pos:end="183:9">

        <for pos:start="133:9" pos:end="183:9">for <control pos:start="133:13" pos:end="133:40">(<init pos:start="133:14" pos:end="133:20"><expr pos:start="133:14" pos:end="133:19"><name pos:start="133:14" pos:end="133:14">y</name> <operator pos:start="133:16" pos:end="133:16">=</operator> <name pos:start="133:18" pos:end="133:19">y0</name></expr>;</init> <condition pos:start="133:22" pos:end="133:31"><expr pos:start="133:22" pos:end="133:30"><name pos:start="133:22" pos:end="133:22">y</name> <operator pos:start="133:24" pos:end="133:24">&lt;</operator> <name pos:start="133:26" pos:end="133:30">y_end</name></expr>;</condition> <incr pos:start="133:33" pos:end="133:39"><expr pos:start="133:33" pos:end="133:39"><name pos:start="133:33" pos:end="133:33">y</name> <operator pos:start="133:35" pos:end="133:36">+=</operator> <literal type="number" pos:start="133:38" pos:end="133:39">16</literal></expr></incr>)</control> <block pos:start="133:42" pos:end="183:9">{<block_content pos:start="135:13" pos:end="181:13">

            <for pos:start="135:13" pos:end="181:13">for <control pos:start="135:17" pos:end="135:54">(<init pos:start="135:18" pos:end="135:34"><expr pos:start="135:18" pos:end="135:33"><name pos:start="135:18" pos:end="135:18">x</name> <operator pos:start="135:20" pos:end="135:20">=</operator> <ternary pos:start="135:22" pos:end="135:33"><condition pos:start="135:22" pos:end="135:25"><expr pos:start="135:22" pos:end="135:23"><name pos:start="135:22" pos:end="135:23">x0</name></expr> ?</condition><then pos:start="135:27" pos:end="135:28"> <expr pos:start="135:27" pos:end="135:28"><name pos:start="135:27" pos:end="135:28">x0</name></expr> </then><else pos:start="135:30" pos:end="135:33">: <expr pos:start="135:32" pos:end="135:33"><literal type="number" pos:start="135:32" pos:end="135:33">16</literal></expr></else></ternary></expr>;</init> <condition pos:start="135:36" pos:end="135:45"><expr pos:start="135:36" pos:end="135:44"><name pos:start="135:36" pos:end="135:36">x</name> <operator pos:start="135:38" pos:end="135:38">&lt;</operator> <name pos:start="135:40" pos:end="135:44">x_end</name></expr>;</condition> <incr pos:start="135:47" pos:end="135:53"><expr pos:start="135:47" pos:end="135:53"><name pos:start="135:47" pos:end="135:47">x</name> <operator pos:start="135:49" pos:end="135:50">+=</operator> <literal type="number" pos:start="135:52" pos:end="135:53">16</literal></expr></incr>)</control> <block pos:start="135:56" pos:end="181:13">{<block_content pos:start="137:17" pos:end="179:17">

                <decl_stmt pos:start="137:17" pos:end="137:88"><decl pos:start="137:17" pos:end="137:87"><type pos:start="137:17" pos:end="137:25"><specifier pos:start="137:17" pos:end="137:21">const</specifier> <name pos:start="137:23" pos:end="137:25">int</name></type> <name pos:start="137:27" pos:end="137:29">bs0</name> <init pos:start="137:31" pos:end="137:87">= <expr pos:start="137:33" pos:end="137:87"><name pos:start="137:33" pos:end="137:87"><name pos:start="137:33" pos:end="137:33">s</name><operator pos:start="137:34" pos:end="137:35">-&gt;</operator><name pos:start="137:36" pos:end="137:46">vertical_bs</name><index pos:start="137:47" pos:end="137:87">[<expr pos:start="137:48" pos:end="137:86"><operator pos:start="137:48" pos:end="137:48">(</operator><name pos:start="137:49" pos:end="137:49">x</name> <operator pos:start="137:51" pos:end="137:52">&gt;&gt;</operator> <literal type="number" pos:start="137:54" pos:end="137:54">3</literal><operator pos:start="137:55" pos:end="137:55">)</operator> <operator pos:start="137:57" pos:end="137:57">+</operator> <operator pos:start="137:59" pos:end="137:59">(</operator><name pos:start="137:60" pos:end="137:60">y</name>       <operator pos:start="137:68" pos:end="137:69">&gt;&gt;</operator> <literal type="number" pos:start="137:71" pos:end="137:71">2</literal><operator pos:start="137:72" pos:end="137:72">)</operator> <operator pos:start="137:74" pos:end="137:74">*</operator> <name pos:start="137:76" pos:end="137:86"><name pos:start="137:76" pos:end="137:76">s</name><operator pos:start="137:77" pos:end="137:78">-&gt;</operator><name pos:start="137:79" pos:end="137:86">bs_width</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="139:17" pos:end="139:88"><decl pos:start="139:17" pos:end="139:87"><type pos:start="139:17" pos:end="139:25"><specifier pos:start="139:17" pos:end="139:21">const</specifier> <name pos:start="139:23" pos:end="139:25">int</name></type> <name pos:start="139:27" pos:end="139:29">bs1</name> <init pos:start="139:31" pos:end="139:87">= <expr pos:start="139:33" pos:end="139:87"><name pos:start="139:33" pos:end="139:87"><name pos:start="139:33" pos:end="139:33">s</name><operator pos:start="139:34" pos:end="139:35">-&gt;</operator><name pos:start="139:36" pos:end="139:46">vertical_bs</name><index pos:start="139:47" pos:end="139:87">[<expr pos:start="139:48" pos:end="139:86"><operator pos:start="139:48" pos:end="139:48">(</operator><name pos:start="139:49" pos:end="139:49">x</name> <operator pos:start="139:51" pos:end="139:52">&gt;&gt;</operator> <literal type="number" pos:start="139:54" pos:end="139:54">3</literal><operator pos:start="139:55" pos:end="139:55">)</operator> <operator pos:start="139:57" pos:end="139:57">+</operator> <operator pos:start="139:59" pos:end="139:59">(</operator><operator pos:start="139:60" pos:end="139:60">(</operator><name pos:start="139:61" pos:end="139:61">y</name> <operator pos:start="139:63" pos:end="139:63">+</operator> <literal type="number" pos:start="139:65" pos:end="139:65">8</literal><operator pos:start="139:66" pos:end="139:66">)</operator> <operator pos:start="139:68" pos:end="139:69">&gt;&gt;</operator> <literal type="number" pos:start="139:71" pos:end="139:71">2</literal><operator pos:start="139:72" pos:end="139:72">)</operator> <operator pos:start="139:74" pos:end="139:74">*</operator> <name pos:start="139:76" pos:end="139:86"><name pos:start="139:76" pos:end="139:76">s</name><operator pos:start="139:77" pos:end="139:78">-&gt;</operator><name pos:start="139:79" pos:end="139:86">bs_width</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="141:17" pos:end="179:17"><if pos:start="141:17" pos:end="179:17">if <condition pos:start="141:20" pos:end="141:45">(<expr pos:start="141:21" pos:end="141:44"><operator pos:start="141:21" pos:end="141:21">(</operator><name pos:start="141:22" pos:end="141:24">bs0</name> <operator pos:start="141:26" pos:end="141:27">==</operator> <literal type="number" pos:start="141:29" pos:end="141:29">2</literal><operator pos:start="141:30" pos:end="141:30">)</operator> <operator pos:start="141:32" pos:end="141:33">||</operator> <operator pos:start="141:35" pos:end="141:35">(</operator><name pos:start="141:36" pos:end="141:38">bs1</name> <operator pos:start="141:40" pos:end="141:41">==</operator> <literal type="number" pos:start="141:43" pos:end="141:43">2</literal><operator pos:start="141:44" pos:end="141:44">)</operator></expr>)</condition> <block pos:start="141:47" pos:end="179:17">{<block_content pos:start="143:21" pos:end="177:79">

                    <decl_stmt pos:start="143:21" pos:end="143:95"><decl pos:start="143:21" pos:end="143:94"><type pos:start="143:21" pos:end="143:29"><specifier pos:start="143:21" pos:end="143:25">const</specifier> <name pos:start="143:27" pos:end="143:29">int</name></type> <name pos:start="143:31" pos:end="143:33">qp0</name> <init pos:start="143:35" pos:end="143:94">= <expr pos:start="143:37" pos:end="143:94"><operator pos:start="143:37" pos:end="143:37">(</operator><call pos:start="143:38" pos:end="143:57"><name pos:start="143:38" pos:end="143:44">get_qPy</name><argument_list pos:start="143:45" pos:end="143:57">(<argument pos:start="143:46" pos:end="143:46"><expr pos:start="143:46" pos:end="143:46"><name pos:start="143:46" pos:end="143:46">s</name></expr></argument>, <argument pos:start="143:49" pos:end="143:53"><expr pos:start="143:49" pos:end="143:53"><name pos:start="143:49" pos:end="143:49">x</name> <operator pos:start="143:51" pos:end="143:51">-</operator> <literal type="number" pos:start="143:53" pos:end="143:53">1</literal></expr></argument>, <argument pos:start="143:56" pos:end="143:56"><expr pos:start="143:56" pos:end="143:56"><name pos:start="143:56" pos:end="143:56">y</name></expr></argument>)</argument_list></call>     <operator pos:start="143:63" pos:end="143:63">+</operator> <call pos:start="143:65" pos:end="143:80"><name pos:start="143:65" pos:end="143:71">get_qPy</name><argument_list pos:start="143:72" pos:end="143:80">(<argument pos:start="143:73" pos:end="143:73"><expr pos:start="143:73" pos:end="143:73"><name pos:start="143:73" pos:end="143:73">s</name></expr></argument>, <argument pos:start="143:76" pos:end="143:76"><expr pos:start="143:76" pos:end="143:76"><name pos:start="143:76" pos:end="143:76">x</name></expr></argument>, <argument pos:start="143:79" pos:end="143:79"><expr pos:start="143:79" pos:end="143:79"><name pos:start="143:79" pos:end="143:79">y</name></expr></argument>)</argument_list></call>     <operator pos:start="143:86" pos:end="143:86">+</operator> <literal type="number" pos:start="143:88" pos:end="143:88">1</literal><operator pos:start="143:89" pos:end="143:89">)</operator> <operator pos:start="143:91" pos:end="143:92">&gt;&gt;</operator> <literal type="number" pos:start="143:94" pos:end="143:94">1</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="145:21" pos:end="145:95"><decl pos:start="145:21" pos:end="145:94"><type pos:start="145:21" pos:end="145:29"><specifier pos:start="145:21" pos:end="145:25">const</specifier> <name pos:start="145:27" pos:end="145:29">int</name></type> <name pos:start="145:31" pos:end="145:33">qp1</name> <init pos:start="145:35" pos:end="145:94">= <expr pos:start="145:37" pos:end="145:94"><operator pos:start="145:37" pos:end="145:37">(</operator><call pos:start="145:38" pos:end="145:61"><name pos:start="145:38" pos:end="145:44">get_qPy</name><argument_list pos:start="145:45" pos:end="145:61">(<argument pos:start="145:46" pos:end="145:46"><expr pos:start="145:46" pos:end="145:46"><name pos:start="145:46" pos:end="145:46">s</name></expr></argument>, <argument pos:start="145:49" pos:end="145:53"><expr pos:start="145:49" pos:end="145:53"><name pos:start="145:49" pos:end="145:49">x</name> <operator pos:start="145:51" pos:end="145:51">-</operator> <literal type="number" pos:start="145:53" pos:end="145:53">1</literal></expr></argument>, <argument pos:start="145:56" pos:end="145:60"><expr pos:start="145:56" pos:end="145:60"><name pos:start="145:56" pos:end="145:56">y</name> <operator pos:start="145:58" pos:end="145:58">+</operator> <literal type="number" pos:start="145:60" pos:end="145:60">8</literal></expr></argument>)</argument_list></call> <operator pos:start="145:63" pos:end="145:63">+</operator> <call pos:start="145:65" pos:end="145:84"><name pos:start="145:65" pos:end="145:71">get_qPy</name><argument_list pos:start="145:72" pos:end="145:84">(<argument pos:start="145:73" pos:end="145:73"><expr pos:start="145:73" pos:end="145:73"><name pos:start="145:73" pos:end="145:73">s</name></expr></argument>, <argument pos:start="145:76" pos:end="145:76"><expr pos:start="145:76" pos:end="145:76"><name pos:start="145:76" pos:end="145:76">x</name></expr></argument>, <argument pos:start="145:79" pos:end="145:83"><expr pos:start="145:79" pos:end="145:83"><name pos:start="145:79" pos:end="145:79">y</name> <operator pos:start="145:81" pos:end="145:81">+</operator> <literal type="number" pos:start="145:83" pos:end="145:83">8</literal></expr></argument>)</argument_list></call> <operator pos:start="145:86" pos:end="145:86">+</operator> <literal type="number" pos:start="145:88" pos:end="145:88">1</literal><operator pos:start="145:89" pos:end="145:89">)</operator> <operator pos:start="145:91" pos:end="145:92">&gt;&gt;</operator> <literal type="number" pos:start="145:94" pos:end="145:94">1</literal></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="149:21" pos:end="149:84"><expr pos:start="149:21" pos:end="149:83"><name pos:start="149:21" pos:end="149:27"><name pos:start="149:21" pos:end="149:24">c_tc</name><index pos:start="149:25" pos:end="149:27">[<expr pos:start="149:26" pos:end="149:26"><literal type="number" pos:start="149:26" pos:end="149:26">0</literal></expr>]</index></name> <operator pos:start="149:29" pos:end="149:29">=</operator> <ternary pos:start="149:31" pos:end="149:83"><condition pos:start="149:31" pos:end="149:42"><expr pos:start="149:31" pos:end="149:40"><operator pos:start="149:31" pos:end="149:31">(</operator><name pos:start="149:32" pos:end="149:34">bs0</name> <operator pos:start="149:36" pos:end="149:37">==</operator> <literal type="number" pos:start="149:39" pos:end="149:39">2</literal><operator pos:start="149:40" pos:end="149:40">)</operator></expr> ?</condition><then pos:start="149:44" pos:end="149:79"> <expr pos:start="149:44" pos:end="149:79"><call pos:start="149:44" pos:end="149:79"><name pos:start="149:44" pos:end="149:52">chroma_tc</name><argument_list pos:start="149:53" pos:end="149:79">(<argument pos:start="149:54" pos:end="149:54"><expr pos:start="149:54" pos:end="149:54"><name pos:start="149:54" pos:end="149:54">s</name></expr></argument>, <argument pos:start="149:57" pos:end="149:59"><expr pos:start="149:57" pos:end="149:59"><name pos:start="149:57" pos:end="149:59">qp0</name></expr></argument>, <argument pos:start="149:62" pos:end="149:67"><expr pos:start="149:62" pos:end="149:67"><name pos:start="149:62" pos:end="149:67">chroma</name></expr></argument>, <argument pos:start="149:70" pos:end="149:78"><expr pos:start="149:70" pos:end="149:78"><name pos:start="149:70" pos:end="149:78">tc_offset</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="149:81" pos:end="149:83">: <expr pos:start="149:83" pos:end="149:83"><literal type="number" pos:start="149:83" pos:end="149:83">0</literal></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:84"><expr pos:start="151:21" pos:end="151:83"><name pos:start="151:21" pos:end="151:27"><name pos:start="151:21" pos:end="151:24">c_tc</name><index pos:start="151:25" pos:end="151:27">[<expr pos:start="151:26" pos:end="151:26"><literal type="number" pos:start="151:26" pos:end="151:26">1</literal></expr>]</index></name> <operator pos:start="151:29" pos:end="151:29">=</operator> <ternary pos:start="151:31" pos:end="151:83"><condition pos:start="151:31" pos:end="151:42"><expr pos:start="151:31" pos:end="151:40"><operator pos:start="151:31" pos:end="151:31">(</operator><name pos:start="151:32" pos:end="151:34">bs1</name> <operator pos:start="151:36" pos:end="151:37">==</operator> <literal type="number" pos:start="151:39" pos:end="151:39">2</literal><operator pos:start="151:40" pos:end="151:40">)</operator></expr> ?</condition><then pos:start="151:44" pos:end="151:79"> <expr pos:start="151:44" pos:end="151:79"><call pos:start="151:44" pos:end="151:79"><name pos:start="151:44" pos:end="151:52">chroma_tc</name><argument_list pos:start="151:53" pos:end="151:79">(<argument pos:start="151:54" pos:end="151:54"><expr pos:start="151:54" pos:end="151:54"><name pos:start="151:54" pos:end="151:54">s</name></expr></argument>, <argument pos:start="151:57" pos:end="151:59"><expr pos:start="151:57" pos:end="151:59"><name pos:start="151:57" pos:end="151:59">qp1</name></expr></argument>, <argument pos:start="151:62" pos:end="151:67"><expr pos:start="151:62" pos:end="151:67"><name pos:start="151:62" pos:end="151:67">chroma</name></expr></argument>, <argument pos:start="151:70" pos:end="151:78"><expr pos:start="151:70" pos:end="151:78"><name pos:start="151:70" pos:end="151:78">tc_offset</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="151:81" pos:end="151:83">: <expr pos:start="151:83" pos:end="151:83"><literal type="number" pos:start="151:83" pos:end="151:83">0</literal></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="153:21" pos:end="153:125"><expr pos:start="153:21" pos:end="153:124"><name pos:start="153:21" pos:end="153:23">src</name>     <operator pos:start="153:29" pos:end="153:29">=</operator> <operator pos:start="153:31" pos:end="153:31">&amp;</operator><name pos:start="153:32" pos:end="153:124"><name pos:start="153:32" pos:end="153:32">s</name><operator pos:start="153:33" pos:end="153:34">-&gt;</operator><name pos:start="153:35" pos:end="153:39">frame</name><operator pos:start="153:40" pos:end="153:41">-&gt;</operator><name pos:start="153:42" pos:end="153:45">data</name><index pos:start="153:46" pos:end="153:53">[<expr pos:start="153:47" pos:end="153:52"><name pos:start="153:47" pos:end="153:52">chroma</name></expr>]</index><index pos:start="153:54" pos:end="153:124">[<expr pos:start="153:55" pos:end="153:123"><name pos:start="153:55" pos:end="153:55">y</name> <operator pos:start="153:57" pos:end="153:57">/</operator> <literal type="number" pos:start="153:59" pos:end="153:59">2</literal> <operator pos:start="153:61" pos:end="153:61">*</operator> <name pos:start="153:63" pos:end="153:88"><name pos:start="153:63" pos:end="153:63">s</name><operator pos:start="153:64" pos:end="153:65">-&gt;</operator><name pos:start="153:66" pos:end="153:70">frame</name><operator pos:start="153:71" pos:end="153:72">-&gt;</operator><name pos:start="153:73" pos:end="153:80">linesize</name><index pos:start="153:81" pos:end="153:88">[<expr pos:start="153:82" pos:end="153:87"><name pos:start="153:82" pos:end="153:87">chroma</name></expr>]</index></name> <operator pos:start="153:90" pos:end="153:90">+</operator> <operator pos:start="153:92" pos:end="153:92">(</operator><operator pos:start="153:93" pos:end="153:93">(</operator><name pos:start="153:94" pos:end="153:94">x</name> <operator pos:start="153:96" pos:end="153:96">/</operator> <literal type="number" pos:start="153:98" pos:end="153:98">2</literal><operator pos:start="153:99" pos:end="153:99">)</operator> <operator pos:start="153:101" pos:end="153:102">&lt;&lt;</operator> <name pos:start="153:104" pos:end="153:122"><name pos:start="153:104" pos:end="153:104">s</name><operator pos:start="153:105" pos:end="153:106">-&gt;</operator><name pos:start="153:107" pos:end="153:109">sps</name><operator pos:start="153:110" pos:end="153:111">-&gt;</operator><name pos:start="153:112" pos:end="153:122">pixel_shift</name></name><operator pos:start="153:123" pos:end="153:123">)</operator></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="155:21" pos:end="177:79"><if pos:start="155:21" pos:end="171:21">if <condition pos:start="155:24" pos:end="155:29">(<expr pos:start="155:25" pos:end="155:28"><name pos:start="155:25" pos:end="155:28">pcmf</name></expr>)</condition> <block pos:start="155:31" pos:end="171:21">{<block_content pos:start="157:25" pos:end="169:81">

                        <expr_stmt pos:start="157:25" pos:end="157:55"><expr pos:start="157:25" pos:end="157:54"><name pos:start="157:25" pos:end="157:31"><name pos:start="157:25" pos:end="157:28">no_p</name><index pos:start="157:29" pos:end="157:31">[<expr pos:start="157:30" pos:end="157:30"><literal type="number" pos:start="157:30" pos:end="157:30">0</literal></expr>]</index></name> <operator pos:start="157:33" pos:end="157:33">=</operator> <call pos:start="157:35" pos:end="157:54"><name pos:start="157:35" pos:end="157:41">get_pcm</name><argument_list pos:start="157:42" pos:end="157:54">(<argument pos:start="157:43" pos:end="157:43"><expr pos:start="157:43" pos:end="157:43"><name pos:start="157:43" pos:end="157:43">s</name></expr></argument>, <argument pos:start="157:46" pos:end="157:50"><expr pos:start="157:46" pos:end="157:50"><name pos:start="157:46" pos:end="157:46">x</name> <operator pos:start="157:48" pos:end="157:48">-</operator> <literal type="number" pos:start="157:50" pos:end="157:50">1</literal></expr></argument>, <argument pos:start="157:53" pos:end="157:53"><expr pos:start="157:53" pos:end="157:53"><name pos:start="157:53" pos:end="157:53">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="159:25" pos:end="159:59"><expr pos:start="159:25" pos:end="159:58"><name pos:start="159:25" pos:end="159:31"><name pos:start="159:25" pos:end="159:28">no_p</name><index pos:start="159:29" pos:end="159:31">[<expr pos:start="159:30" pos:end="159:30"><literal type="number" pos:start="159:30" pos:end="159:30">1</literal></expr>]</index></name> <operator pos:start="159:33" pos:end="159:33">=</operator> <call pos:start="159:35" pos:end="159:58"><name pos:start="159:35" pos:end="159:41">get_pcm</name><argument_list pos:start="159:42" pos:end="159:58">(<argument pos:start="159:43" pos:end="159:43"><expr pos:start="159:43" pos:end="159:43"><name pos:start="159:43" pos:end="159:43">s</name></expr></argument>, <argument pos:start="159:46" pos:end="159:50"><expr pos:start="159:46" pos:end="159:50"><name pos:start="159:46" pos:end="159:46">x</name> <operator pos:start="159:48" pos:end="159:48">-</operator> <literal type="number" pos:start="159:50" pos:end="159:50">1</literal></expr></argument>, <argument pos:start="159:53" pos:end="159:57"><expr pos:start="159:53" pos:end="159:57"><name pos:start="159:53" pos:end="159:53">y</name> <operator pos:start="159:55" pos:end="159:55">+</operator> <literal type="number" pos:start="159:57" pos:end="159:57">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="161:25" pos:end="161:51"><expr pos:start="161:25" pos:end="161:50"><name pos:start="161:25" pos:end="161:31"><name pos:start="161:25" pos:end="161:28">no_q</name><index pos:start="161:29" pos:end="161:31">[<expr pos:start="161:30" pos:end="161:30"><literal type="number" pos:start="161:30" pos:end="161:30">0</literal></expr>]</index></name> <operator pos:start="161:33" pos:end="161:33">=</operator> <call pos:start="161:35" pos:end="161:50"><name pos:start="161:35" pos:end="161:41">get_pcm</name><argument_list pos:start="161:42" pos:end="161:50">(<argument pos:start="161:43" pos:end="161:43"><expr pos:start="161:43" pos:end="161:43"><name pos:start="161:43" pos:end="161:43">s</name></expr></argument>, <argument pos:start="161:46" pos:end="161:46"><expr pos:start="161:46" pos:end="161:46"><name pos:start="161:46" pos:end="161:46">x</name></expr></argument>, <argument pos:start="161:49" pos:end="161:49"><expr pos:start="161:49" pos:end="161:49"><name pos:start="161:49" pos:end="161:49">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="163:25" pos:end="163:55"><expr pos:start="163:25" pos:end="163:54"><name pos:start="163:25" pos:end="163:31"><name pos:start="163:25" pos:end="163:28">no_q</name><index pos:start="163:29" pos:end="163:31">[<expr pos:start="163:30" pos:end="163:30"><literal type="number" pos:start="163:30" pos:end="163:30">1</literal></expr>]</index></name> <operator pos:start="163:33" pos:end="163:33">=</operator> <call pos:start="163:35" pos:end="163:54"><name pos:start="163:35" pos:end="163:41">get_pcm</name><argument_list pos:start="163:42" pos:end="163:54">(<argument pos:start="163:43" pos:end="163:43"><expr pos:start="163:43" pos:end="163:43"><name pos:start="163:43" pos:end="163:43">s</name></expr></argument>, <argument pos:start="163:46" pos:end="163:46"><expr pos:start="163:46" pos:end="163:46"><name pos:start="163:46" pos:end="163:46">x</name></expr></argument>, <argument pos:start="163:49" pos:end="163:53"><expr pos:start="163:49" pos:end="163:53"><name pos:start="163:49" pos:end="163:49">y</name> <operator pos:start="163:51" pos:end="163:51">+</operator> <literal type="number" pos:start="163:53" pos:end="163:53">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="165:25" pos:end="169:81"><expr pos:start="165:25" pos:end="169:80"><call pos:start="165:25" pos:end="169:80"><name pos:start="165:25" pos:end="165:62"><name pos:start="165:25" pos:end="165:25">s</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:34">hevcdsp</name><operator pos:start="165:35" pos:end="165:35">.</operator><name pos:start="165:36" pos:end="165:62">hevc_v_loop_filter_chroma_c</name></name><argument_list pos:start="165:63" pos:end="169:80">(<argument pos:start="165:64" pos:end="165:66"><expr pos:start="165:64" pos:end="165:66"><name pos:start="165:64" pos:end="165:66">src</name></expr></argument>,

                                                               <argument pos:start="167:64" pos:end="167:89"><expr pos:start="167:64" pos:end="167:89"><name pos:start="167:64" pos:end="167:89"><name pos:start="167:64" pos:end="167:64">s</name><operator pos:start="167:65" pos:end="167:66">-&gt;</operator><name pos:start="167:67" pos:end="167:71">frame</name><operator pos:start="167:72" pos:end="167:73">-&gt;</operator><name pos:start="167:74" pos:end="167:81">linesize</name><index pos:start="167:82" pos:end="167:89">[<expr pos:start="167:83" pos:end="167:88"><name pos:start="167:83" pos:end="167:88">chroma</name></expr>]</index></name></expr></argument>,

                                                               <argument pos:start="169:64" pos:end="169:67"><expr pos:start="169:64" pos:end="169:67"><name pos:start="169:64" pos:end="169:67">c_tc</name></expr></argument>, <argument pos:start="169:70" pos:end="169:73"><expr pos:start="169:70" pos:end="169:73"><name pos:start="169:70" pos:end="169:73">no_p</name></expr></argument>, <argument pos:start="169:76" pos:end="169:79"><expr pos:start="169:76" pos:end="169:79"><name pos:start="169:76" pos:end="169:79">no_q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="171:23" pos:end="177:79">else<block type="pseudo" pos:start="173:25" pos:end="177:79"><block_content pos:start="173:25" pos:end="177:79">

                        <expr_stmt pos:start="173:25" pos:end="177:79"><expr pos:start="173:25" pos:end="177:78"><call pos:start="173:25" pos:end="177:78"><name pos:start="173:25" pos:end="173:60"><name pos:start="173:25" pos:end="173:25">s</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:34">hevcdsp</name><operator pos:start="173:35" pos:end="173:35">.</operator><name pos:start="173:36" pos:end="173:60">hevc_v_loop_filter_chroma</name></name><argument_list pos:start="173:61" pos:end="177:78">(<argument pos:start="173:62" pos:end="173:64"><expr pos:start="173:62" pos:end="173:64"><name pos:start="173:62" pos:end="173:64">src</name></expr></argument>,

                                                             <argument pos:start="175:62" pos:end="175:87"><expr pos:start="175:62" pos:end="175:87"><name pos:start="175:62" pos:end="175:87"><name pos:start="175:62" pos:end="175:62">s</name><operator pos:start="175:63" pos:end="175:64">-&gt;</operator><name pos:start="175:65" pos:end="175:69">frame</name><operator pos:start="175:70" pos:end="175:71">-&gt;</operator><name pos:start="175:72" pos:end="175:79">linesize</name><index pos:start="175:80" pos:end="175:87">[<expr pos:start="175:81" pos:end="175:86"><name pos:start="175:81" pos:end="175:86">chroma</name></expr>]</index></name></expr></argument>,

                                                             <argument pos:start="177:62" pos:end="177:65"><expr pos:start="177:62" pos:end="177:65"><name pos:start="177:62" pos:end="177:65">c_tc</name></expr></argument>, <argument pos:start="177:68" pos:end="177:71"><expr pos:start="177:68" pos:end="177:71"><name pos:start="177:68" pos:end="177:71">no_p</name></expr></argument>, <argument pos:start="177:74" pos:end="177:77"><expr pos:start="177:74" pos:end="177:77"><name pos:start="177:74" pos:end="177:77">no_q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="line" pos:start="189:5" pos:end="189:32">// horizontal filtering luma</comment>

    <if_stmt pos:start="191:5" pos:end="193:19"><if pos:start="191:5" pos:end="193:19">if <condition pos:start="191:8" pos:end="191:31">(<expr pos:start="191:9" pos:end="191:30"><name pos:start="191:9" pos:end="191:13">x_end</name> <operator pos:start="191:15" pos:end="191:16">!=</operator> <name pos:start="191:18" pos:end="191:30"><name pos:start="191:18" pos:end="191:18">s</name><operator pos:start="191:19" pos:end="191:20">-&gt;</operator><name pos:start="191:21" pos:end="191:23">sps</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:30">width</name></name></expr>)</condition><block type="pseudo" pos:start="193:9" pos:end="193:19"><block_content pos:start="193:9" pos:end="193:19">

        <expr_stmt pos:start="193:9" pos:end="193:19"><expr pos:start="193:9" pos:end="193:18"><name pos:start="193:9" pos:end="193:13">x_end</name> <operator pos:start="193:15" pos:end="193:16">-=</operator> <literal type="number" pos:start="193:18" pos:end="193:18">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="195:5" pos:end="255:5">for <control pos:start="195:9" pos:end="195:44">(<init pos:start="195:10" pos:end="195:25"><expr pos:start="195:10" pos:end="195:24"><name pos:start="195:10" pos:end="195:10">y</name> <operator pos:start="195:12" pos:end="195:12">=</operator> <ternary pos:start="195:14" pos:end="195:24"><condition pos:start="195:14" pos:end="195:17"><expr pos:start="195:14" pos:end="195:15"><name pos:start="195:14" pos:end="195:15">y0</name></expr> ?</condition><then pos:start="195:19" pos:end="195:20"> <expr pos:start="195:19" pos:end="195:20"><name pos:start="195:19" pos:end="195:20">y0</name></expr> </then><else pos:start="195:22" pos:end="195:24">: <expr pos:start="195:24" pos:end="195:24"><literal type="number" pos:start="195:24" pos:end="195:24">8</literal></expr></else></ternary></expr>;</init> <condition pos:start="195:27" pos:end="195:36"><expr pos:start="195:27" pos:end="195:35"><name pos:start="195:27" pos:end="195:27">y</name> <operator pos:start="195:29" pos:end="195:29">&lt;</operator> <name pos:start="195:31" pos:end="195:35">y_end</name></expr>;</condition> <incr pos:start="195:38" pos:end="195:43"><expr pos:start="195:38" pos:end="195:43"><name pos:start="195:38" pos:end="195:38">y</name> <operator pos:start="195:40" pos:end="195:41">+=</operator> <literal type="number" pos:start="195:43" pos:end="195:43">8</literal></expr></incr>)</control> <block pos:start="195:46" pos:end="255:5">{<block_content pos:start="197:9" pos:end="253:9">

        <for pos:start="197:9" pos:end="253:9">for <control pos:start="197:13" pos:end="197:52">(<init pos:start="197:14" pos:end="197:33"><expr pos:start="197:14" pos:end="197:32"><name pos:start="197:14" pos:end="197:14">x</name> <operator pos:start="197:16" pos:end="197:16">=</operator> <ternary pos:start="197:18" pos:end="197:32"><condition pos:start="197:18" pos:end="197:21"><expr pos:start="197:18" pos:end="197:19"><name pos:start="197:18" pos:end="197:19">x0</name></expr> ?</condition><then pos:start="197:23" pos:end="197:28"> <expr pos:start="197:23" pos:end="197:28"><name pos:start="197:23" pos:end="197:24">x0</name> <operator pos:start="197:26" pos:end="197:26">-</operator> <literal type="number" pos:start="197:28" pos:end="197:28">8</literal></expr> </then><else pos:start="197:30" pos:end="197:32">: <expr pos:start="197:32" pos:end="197:32"><literal type="number" pos:start="197:32" pos:end="197:32">0</literal></expr></else></ternary></expr>;</init> <condition pos:start="197:35" pos:end="197:44"><expr pos:start="197:35" pos:end="197:43"><name pos:start="197:35" pos:end="197:35">x</name> <operator pos:start="197:37" pos:end="197:37">&lt;</operator> <name pos:start="197:39" pos:end="197:43">x_end</name></expr>;</condition> <incr pos:start="197:46" pos:end="197:51"><expr pos:start="197:46" pos:end="197:51"><name pos:start="197:46" pos:end="197:46">x</name> <operator pos:start="197:48" pos:end="197:49">+=</operator> <literal type="number" pos:start="197:51" pos:end="197:51">8</literal></expr></incr>)</control> <block pos:start="197:54" pos:end="253:9">{<block_content pos:start="199:13" pos:end="251:13">

            <decl_stmt pos:start="199:13" pos:end="199:77"><decl pos:start="199:13" pos:end="199:76"><type pos:start="199:13" pos:end="199:21"><specifier pos:start="199:13" pos:end="199:17">const</specifier> <name pos:start="199:19" pos:end="199:21">int</name></type> <name pos:start="199:23" pos:end="199:25">bs0</name> <init pos:start="199:27" pos:end="199:76">= <expr pos:start="199:29" pos:end="199:76"><name pos:start="199:29" pos:end="199:76"><name pos:start="199:29" pos:end="199:29">s</name><operator pos:start="199:30" pos:end="199:31">-&gt;</operator><name pos:start="199:32" pos:end="199:44">horizontal_bs</name><index pos:start="199:45" pos:end="199:76">[<expr pos:start="199:46" pos:end="199:75"><operator pos:start="199:46" pos:end="199:46">(</operator><name pos:start="199:47" pos:end="199:47">x</name> <operator pos:start="199:49" pos:end="199:49">+</operator>     <name pos:start="199:55" pos:end="199:55">y</name> <operator pos:start="199:57" pos:end="199:57">*</operator> <name pos:start="199:59" pos:end="199:69"><name pos:start="199:59" pos:end="199:59">s</name><operator pos:start="199:60" pos:end="199:61">-&gt;</operator><name pos:start="199:62" pos:end="199:69">bs_width</name></name><operator pos:start="199:70" pos:end="199:70">)</operator> <operator pos:start="199:72" pos:end="199:73">&gt;&gt;</operator> <literal type="number" pos:start="199:75" pos:end="199:75">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="201:13" pos:end="201:77"><decl pos:start="201:13" pos:end="201:76"><type pos:start="201:13" pos:end="201:21"><specifier pos:start="201:13" pos:end="201:17">const</specifier> <name pos:start="201:19" pos:end="201:21">int</name></type> <name pos:start="201:23" pos:end="201:25">bs1</name> <init pos:start="201:27" pos:end="201:76">= <expr pos:start="201:29" pos:end="201:76"><name pos:start="201:29" pos:end="201:76"><name pos:start="201:29" pos:end="201:29">s</name><operator pos:start="201:30" pos:end="201:31">-&gt;</operator><name pos:start="201:32" pos:end="201:44">horizontal_bs</name><index pos:start="201:45" pos:end="201:76">[<expr pos:start="201:46" pos:end="201:75"><operator pos:start="201:46" pos:end="201:46">(</operator><name pos:start="201:47" pos:end="201:47">x</name> <operator pos:start="201:49" pos:end="201:49">+</operator> <literal type="number" pos:start="201:51" pos:end="201:53">4</literal> <operator pos:start="201:53" pos:end="201:53">+</operator> <name pos:start="201:55" pos:end="201:55">y</name> <operator pos:start="201:57" pos:end="201:57">*</operator> <name pos:start="201:59" pos:end="201:69"><name pos:start="201:59" pos:end="201:59">s</name><operator pos:start="201:60" pos:end="201:61">-&gt;</operator><name pos:start="201:62" pos:end="201:69">bs_width</name></name><operator pos:start="201:70" pos:end="201:70">)</operator> <operator pos:start="201:72" pos:end="201:73">&gt;&gt;</operator> <literal type="number" pos:start="201:75" pos:end="201:75">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="203:13" pos:end="251:13"><if pos:start="203:13" pos:end="251:13">if <condition pos:start="203:16" pos:end="203:27">(<expr pos:start="203:17" pos:end="203:26"><name pos:start="203:17" pos:end="203:19">bs0</name> <operator pos:start="203:21" pos:end="203:22">||</operator> <name pos:start="203:24" pos:end="203:26">bs1</name></expr>)</condition> <block pos:start="203:29" pos:end="251:13">{<block_content pos:start="205:17" pos:end="249:77">

                <decl_stmt pos:start="205:17" pos:end="205:91"><decl pos:start="205:17" pos:end="205:90"><type pos:start="205:17" pos:end="205:25"><specifier pos:start="205:17" pos:end="205:21">const</specifier> <name pos:start="205:23" pos:end="205:25">int</name></type> <name pos:start="205:27" pos:end="205:29">qp0</name> <init pos:start="205:31" pos:end="205:90">= <expr pos:start="205:33" pos:end="205:90"><operator pos:start="205:33" pos:end="205:33">(</operator><call pos:start="205:34" pos:end="205:53"><name pos:start="205:34" pos:end="205:40">get_qPy</name><argument_list pos:start="205:41" pos:end="205:53">(<argument pos:start="205:42" pos:end="205:42"><expr pos:start="205:42" pos:end="205:42"><name pos:start="205:42" pos:end="205:42">s</name></expr></argument>, <argument pos:start="205:45" pos:end="205:45"><expr pos:start="205:45" pos:end="205:45"><name pos:start="205:45" pos:end="205:45">x</name></expr></argument>, <argument pos:start="205:48" pos:end="205:52"><expr pos:start="205:48" pos:end="205:52"><name pos:start="205:48" pos:end="205:48">y</name> <operator pos:start="205:50" pos:end="205:50">-</operator> <literal type="number" pos:start="205:52" pos:end="205:52">1</literal></expr></argument>)</argument_list></call>     <operator pos:start="205:59" pos:end="205:59">+</operator> <call pos:start="205:61" pos:end="205:76"><name pos:start="205:61" pos:end="205:67">get_qPy</name><argument_list pos:start="205:68" pos:end="205:76">(<argument pos:start="205:69" pos:end="205:69"><expr pos:start="205:69" pos:end="205:69"><name pos:start="205:69" pos:end="205:69">s</name></expr></argument>, <argument pos:start="205:72" pos:end="205:72"><expr pos:start="205:72" pos:end="205:72"><name pos:start="205:72" pos:end="205:72">x</name></expr></argument>, <argument pos:start="205:75" pos:end="205:75"><expr pos:start="205:75" pos:end="205:75"><name pos:start="205:75" pos:end="205:75">y</name></expr></argument>)</argument_list></call>     <operator pos:start="205:82" pos:end="205:82">+</operator> <literal type="number" pos:start="205:84" pos:end="205:84">1</literal><operator pos:start="205:85" pos:end="205:85">)</operator> <operator pos:start="205:87" pos:end="205:88">&gt;&gt;</operator> <literal type="number" pos:start="205:90" pos:end="205:90">1</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="207:17" pos:end="207:91"><decl pos:start="207:17" pos:end="207:90"><type pos:start="207:17" pos:end="207:25"><specifier pos:start="207:17" pos:end="207:21">const</specifier> <name pos:start="207:23" pos:end="207:25">int</name></type> <name pos:start="207:27" pos:end="207:29">qp1</name> <init pos:start="207:31" pos:end="207:90">= <expr pos:start="207:33" pos:end="207:90"><operator pos:start="207:33" pos:end="207:33">(</operator><call pos:start="207:34" pos:end="207:57"><name pos:start="207:34" pos:end="207:40">get_qPy</name><argument_list pos:start="207:41" pos:end="207:57">(<argument pos:start="207:42" pos:end="207:42"><expr pos:start="207:42" pos:end="207:42"><name pos:start="207:42" pos:end="207:42">s</name></expr></argument>, <argument pos:start="207:45" pos:end="207:49"><expr pos:start="207:45" pos:end="207:49"><name pos:start="207:45" pos:end="207:45">x</name> <operator pos:start="207:47" pos:end="207:47">+</operator> <literal type="number" pos:start="207:49" pos:end="207:49">4</literal></expr></argument>, <argument pos:start="207:52" pos:end="207:56"><expr pos:start="207:52" pos:end="207:56"><name pos:start="207:52" pos:end="207:52">y</name> <operator pos:start="207:54" pos:end="207:54">-</operator> <literal type="number" pos:start="207:56" pos:end="207:56">1</literal></expr></argument>)</argument_list></call> <operator pos:start="207:59" pos:end="207:59">+</operator> <call pos:start="207:61" pos:end="207:80"><name pos:start="207:61" pos:end="207:67">get_qPy</name><argument_list pos:start="207:68" pos:end="207:80">(<argument pos:start="207:69" pos:end="207:69"><expr pos:start="207:69" pos:end="207:69"><name pos:start="207:69" pos:end="207:69">s</name></expr></argument>, <argument pos:start="207:72" pos:end="207:76"><expr pos:start="207:72" pos:end="207:76"><name pos:start="207:72" pos:end="207:72">x</name> <operator pos:start="207:74" pos:end="207:74">+</operator> <literal type="number" pos:start="207:76" pos:end="207:76">4</literal></expr></argument>, <argument pos:start="207:79" pos:end="207:79"><expr pos:start="207:79" pos:end="207:79"><name pos:start="207:79" pos:end="207:79">y</name></expr></argument>)</argument_list></call> <operator pos:start="207:82" pos:end="207:82">+</operator> <literal type="number" pos:start="207:84" pos:end="207:84">1</literal><operator pos:start="207:85" pos:end="207:85">)</operator> <operator pos:start="207:87" pos:end="207:88">&gt;&gt;</operator> <literal type="number" pos:start="207:90" pos:end="207:90">1</literal></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="211:17" pos:end="211:71"><expr pos:start="211:17" pos:end="211:70"><name pos:start="211:17" pos:end="211:25">tc_offset</name>   <operator pos:start="211:29" pos:end="211:29">=</operator> <ternary pos:start="211:31" pos:end="211:70"><condition pos:start="211:31" pos:end="211:39"><expr pos:start="211:31" pos:end="211:37"><name pos:start="211:31" pos:end="211:31">x</name> <operator pos:start="211:33" pos:end="211:34">&gt;=</operator> <name pos:start="211:36" pos:end="211:37">x0</name></expr> ?</condition><then pos:start="211:41" pos:end="211:53"> <expr pos:start="211:41" pos:end="211:53"><name pos:start="211:41" pos:end="211:53">cur_tc_offset</name></expr> </then><else pos:start="211:55" pos:end="211:70">: <expr pos:start="211:57" pos:end="211:70"><name pos:start="211:57" pos:end="211:70">left_tc_offset</name></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:75"><expr pos:start="213:17" pos:end="213:74"><name pos:start="213:17" pos:end="213:27">beta_offset</name> <operator pos:start="213:29" pos:end="213:29">=</operator> <ternary pos:start="213:31" pos:end="213:74"><condition pos:start="213:31" pos:end="213:39"><expr pos:start="213:31" pos:end="213:37"><name pos:start="213:31" pos:end="213:31">x</name> <operator pos:start="213:33" pos:end="213:34">&gt;=</operator> <name pos:start="213:36" pos:end="213:37">x0</name></expr> ?</condition><then pos:start="213:41" pos:end="213:55"> <expr pos:start="213:41" pos:end="213:55"><name pos:start="213:41" pos:end="213:55">cur_beta_offset</name></expr> </then><else pos:start="213:57" pos:end="213:74">: <expr pos:start="213:59" pos:end="213:74"><name pos:start="213:59" pos:end="213:74">left_beta_offset</name></expr></else></ternary></expr>;</expr_stmt>



                <expr_stmt pos:start="217:17" pos:end="217:75"><expr pos:start="217:17" pos:end="217:74"><name pos:start="217:17" pos:end="217:23"><name pos:start="217:17" pos:end="217:20">beta</name><index pos:start="217:21" pos:end="217:23">[<expr pos:start="217:22" pos:end="217:22"><literal type="number" pos:start="217:22" pos:end="217:22">0</literal></expr>]</index></name> <operator pos:start="217:25" pos:end="217:25">=</operator> <name pos:start="217:27" pos:end="217:74"><name pos:start="217:27" pos:end="217:35">betatable</name><index pos:start="217:36" pos:end="217:74">[<expr pos:start="217:37" pos:end="217:73"><call pos:start="217:37" pos:end="217:73"><name pos:start="217:37" pos:end="217:43">av_clip</name><argument_list pos:start="217:44" pos:end="217:73">(<argument pos:start="217:45" pos:end="217:61"><expr pos:start="217:45" pos:end="217:61"><name pos:start="217:45" pos:end="217:47">qp0</name> <operator pos:start="217:49" pos:end="217:49">+</operator> <name pos:start="217:51" pos:end="217:61">beta_offset</name></expr></argument>, <argument pos:start="217:64" pos:end="217:64"><expr pos:start="217:64" pos:end="217:64"><literal type="number" pos:start="217:64" pos:end="217:64">0</literal></expr></argument>, <argument pos:start="217:67" pos:end="217:72"><expr pos:start="217:67" pos:end="217:72"><name pos:start="217:67" pos:end="217:72">MAX_QP</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:75"><expr pos:start="219:17" pos:end="219:74"><name pos:start="219:17" pos:end="219:23"><name pos:start="219:17" pos:end="219:20">beta</name><index pos:start="219:21" pos:end="219:23">[<expr pos:start="219:22" pos:end="219:22"><literal type="number" pos:start="219:22" pos:end="219:22">1</literal></expr>]</index></name> <operator pos:start="219:25" pos:end="219:25">=</operator> <name pos:start="219:27" pos:end="219:74"><name pos:start="219:27" pos:end="219:35">betatable</name><index pos:start="219:36" pos:end="219:74">[<expr pos:start="219:37" pos:end="219:73"><call pos:start="219:37" pos:end="219:73"><name pos:start="219:37" pos:end="219:43">av_clip</name><argument_list pos:start="219:44" pos:end="219:73">(<argument pos:start="219:45" pos:end="219:61"><expr pos:start="219:45" pos:end="219:61"><name pos:start="219:45" pos:end="219:47">qp1</name> <operator pos:start="219:49" pos:end="219:49">+</operator> <name pos:start="219:51" pos:end="219:61">beta_offset</name></expr></argument>, <argument pos:start="219:64" pos:end="219:64"><expr pos:start="219:64" pos:end="219:64"><literal type="number" pos:start="219:64" pos:end="219:64">0</literal></expr></argument>, <argument pos:start="219:67" pos:end="219:72"><expr pos:start="219:67" pos:end="219:72"><name pos:start="219:67" pos:end="219:72">MAX_QP</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:54"><expr pos:start="221:17" pos:end="221:53"><name pos:start="221:17" pos:end="221:21"><name pos:start="221:17" pos:end="221:18">tc</name><index pos:start="221:19" pos:end="221:21">[<expr pos:start="221:20" pos:end="221:20"><literal type="number" pos:start="221:20" pos:end="221:20">0</literal></expr>]</index></name>   <operator pos:start="221:25" pos:end="221:25">=</operator> <ternary pos:start="221:27" pos:end="221:53"><condition pos:start="221:27" pos:end="221:31"><expr pos:start="221:27" pos:end="221:29"><name pos:start="221:27" pos:end="221:29">bs0</name></expr> ?</condition><then pos:start="221:33" pos:end="221:49"> <expr pos:start="221:33" pos:end="221:49"><call pos:start="221:33" pos:end="221:49"><name pos:start="221:33" pos:end="221:39">TC_CALC</name><argument_list pos:start="221:40" pos:end="221:49">(<argument pos:start="221:41" pos:end="221:43"><expr pos:start="221:41" pos:end="221:43"><name pos:start="221:41" pos:end="221:43">qp0</name></expr></argument>, <argument pos:start="221:46" pos:end="221:48"><expr pos:start="221:46" pos:end="221:48"><name pos:start="221:46" pos:end="221:48">bs0</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="221:51" pos:end="221:53">: <expr pos:start="221:53" pos:end="221:53"><literal type="number" pos:start="221:53" pos:end="221:53">0</literal></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:54"><expr pos:start="223:17" pos:end="223:53"><name pos:start="223:17" pos:end="223:21"><name pos:start="223:17" pos:end="223:18">tc</name><index pos:start="223:19" pos:end="223:21">[<expr pos:start="223:20" pos:end="223:20"><literal type="number" pos:start="223:20" pos:end="223:20">1</literal></expr>]</index></name>   <operator pos:start="223:25" pos:end="223:25">=</operator> <ternary pos:start="223:27" pos:end="223:53"><condition pos:start="223:27" pos:end="223:31"><expr pos:start="223:27" pos:end="223:29"><name pos:start="223:27" pos:end="223:29">bs1</name></expr> ?</condition><then pos:start="223:33" pos:end="223:49"> <expr pos:start="223:33" pos:end="223:49"><call pos:start="223:33" pos:end="223:49"><name pos:start="223:33" pos:end="223:39">TC_CALC</name><argument_list pos:start="223:40" pos:end="223:49">(<argument pos:start="223:41" pos:end="223:43"><expr pos:start="223:41" pos:end="223:43"><name pos:start="223:41" pos:end="223:43">qp1</name></expr></argument>, <argument pos:start="223:46" pos:end="223:48"><expr pos:start="223:46" pos:end="223:48"><name pos:start="223:46" pos:end="223:48">bs1</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="223:51" pos:end="223:53">: <expr pos:start="223:53" pos:end="223:53"><literal type="number" pos:start="223:53" pos:end="223:53">0</literal></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:107"><expr pos:start="225:17" pos:end="225:106"><name pos:start="225:17" pos:end="225:19">src</name>     <operator pos:start="225:25" pos:end="225:25">=</operator> <operator pos:start="225:27" pos:end="225:27">&amp;</operator><name pos:start="225:28" pos:end="225:106"><name pos:start="225:28" pos:end="225:28">s</name><operator pos:start="225:29" pos:end="225:30">-&gt;</operator><name pos:start="225:31" pos:end="225:35">frame</name><operator pos:start="225:36" pos:end="225:37">-&gt;</operator><name pos:start="225:38" pos:end="225:41">data</name><index pos:start="225:42" pos:end="225:47">[<expr pos:start="225:43" pos:end="225:46"><name pos:start="225:43" pos:end="225:46">LUMA</name></expr>]</index><index pos:start="225:48" pos:end="225:106">[<expr pos:start="225:49" pos:end="225:105"><name pos:start="225:49" pos:end="225:49">y</name> <operator pos:start="225:51" pos:end="225:51">*</operator> <name pos:start="225:53" pos:end="225:76"><name pos:start="225:53" pos:end="225:53">s</name><operator pos:start="225:54" pos:end="225:55">-&gt;</operator><name pos:start="225:56" pos:end="225:60">frame</name><operator pos:start="225:61" pos:end="225:62">-&gt;</operator><name pos:start="225:63" pos:end="225:70">linesize</name><index pos:start="225:71" pos:end="225:76">[<expr pos:start="225:72" pos:end="225:75"><name pos:start="225:72" pos:end="225:75">LUMA</name></expr>]</index></name> <operator pos:start="225:78" pos:end="225:78">+</operator> <operator pos:start="225:80" pos:end="225:80">(</operator><name pos:start="225:81" pos:end="225:81">x</name> <operator pos:start="225:83" pos:end="225:84">&lt;&lt;</operator> <name pos:start="225:86" pos:end="225:104"><name pos:start="225:86" pos:end="225:86">s</name><operator pos:start="225:87" pos:end="225:88">-&gt;</operator><name pos:start="225:89" pos:end="225:91">sps</name><operator pos:start="225:92" pos:end="225:93">-&gt;</operator><name pos:start="225:94" pos:end="225:104">pixel_shift</name></name><operator pos:start="225:105" pos:end="225:105">)</operator></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="227:17" pos:end="249:77"><if pos:start="227:17" pos:end="243:17">if <condition pos:start="227:20" pos:end="227:25">(<expr pos:start="227:21" pos:end="227:24"><name pos:start="227:21" pos:end="227:24">pcmf</name></expr>)</condition> <block pos:start="227:27" pos:end="243:17">{<block_content pos:start="229:21" pos:end="241:79">

                    <expr_stmt pos:start="229:21" pos:end="229:51"><expr pos:start="229:21" pos:end="229:50"><name pos:start="229:21" pos:end="229:27"><name pos:start="229:21" pos:end="229:24">no_p</name><index pos:start="229:25" pos:end="229:27">[<expr pos:start="229:26" pos:end="229:26"><literal type="number" pos:start="229:26" pos:end="229:26">0</literal></expr>]</index></name> <operator pos:start="229:29" pos:end="229:29">=</operator> <call pos:start="229:31" pos:end="229:50"><name pos:start="229:31" pos:end="229:37">get_pcm</name><argument_list pos:start="229:38" pos:end="229:50">(<argument pos:start="229:39" pos:end="229:39"><expr pos:start="229:39" pos:end="229:39"><name pos:start="229:39" pos:end="229:39">s</name></expr></argument>, <argument pos:start="229:42" pos:end="229:42"><expr pos:start="229:42" pos:end="229:42"><name pos:start="229:42" pos:end="229:42">x</name></expr></argument>, <argument pos:start="229:45" pos:end="229:49"><expr pos:start="229:45" pos:end="229:49"><name pos:start="229:45" pos:end="229:45">y</name> <operator pos:start="229:47" pos:end="229:47">-</operator> <literal type="number" pos:start="229:49" pos:end="229:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="231:21" pos:end="231:55"><expr pos:start="231:21" pos:end="231:54"><name pos:start="231:21" pos:end="231:27"><name pos:start="231:21" pos:end="231:24">no_p</name><index pos:start="231:25" pos:end="231:27">[<expr pos:start="231:26" pos:end="231:26"><literal type="number" pos:start="231:26" pos:end="231:26">1</literal></expr>]</index></name> <operator pos:start="231:29" pos:end="231:29">=</operator> <call pos:start="231:31" pos:end="231:54"><name pos:start="231:31" pos:end="231:37">get_pcm</name><argument_list pos:start="231:38" pos:end="231:54">(<argument pos:start="231:39" pos:end="231:39"><expr pos:start="231:39" pos:end="231:39"><name pos:start="231:39" pos:end="231:39">s</name></expr></argument>, <argument pos:start="231:42" pos:end="231:46"><expr pos:start="231:42" pos:end="231:46"><name pos:start="231:42" pos:end="231:42">x</name> <operator pos:start="231:44" pos:end="231:44">+</operator> <literal type="number" pos:start="231:46" pos:end="231:46">4</literal></expr></argument>, <argument pos:start="231:49" pos:end="231:53"><expr pos:start="231:49" pos:end="231:53"><name pos:start="231:49" pos:end="231:49">y</name> <operator pos:start="231:51" pos:end="231:51">-</operator> <literal type="number" pos:start="231:53" pos:end="231:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="233:21" pos:end="233:47"><expr pos:start="233:21" pos:end="233:46"><name pos:start="233:21" pos:end="233:27"><name pos:start="233:21" pos:end="233:24">no_q</name><index pos:start="233:25" pos:end="233:27">[<expr pos:start="233:26" pos:end="233:26"><literal type="number" pos:start="233:26" pos:end="233:26">0</literal></expr>]</index></name> <operator pos:start="233:29" pos:end="233:29">=</operator> <call pos:start="233:31" pos:end="233:46"><name pos:start="233:31" pos:end="233:37">get_pcm</name><argument_list pos:start="233:38" pos:end="233:46">(<argument pos:start="233:39" pos:end="233:39"><expr pos:start="233:39" pos:end="233:39"><name pos:start="233:39" pos:end="233:39">s</name></expr></argument>, <argument pos:start="233:42" pos:end="233:42"><expr pos:start="233:42" pos:end="233:42"><name pos:start="233:42" pos:end="233:42">x</name></expr></argument>, <argument pos:start="233:45" pos:end="233:45"><expr pos:start="233:45" pos:end="233:45"><name pos:start="233:45" pos:end="233:45">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="235:21" pos:end="235:51"><expr pos:start="235:21" pos:end="235:50"><name pos:start="235:21" pos:end="235:27"><name pos:start="235:21" pos:end="235:24">no_q</name><index pos:start="235:25" pos:end="235:27">[<expr pos:start="235:26" pos:end="235:26"><literal type="number" pos:start="235:26" pos:end="235:26">1</literal></expr>]</index></name> <operator pos:start="235:29" pos:end="235:29">=</operator> <call pos:start="235:31" pos:end="235:50"><name pos:start="235:31" pos:end="235:37">get_pcm</name><argument_list pos:start="235:38" pos:end="235:50">(<argument pos:start="235:39" pos:end="235:39"><expr pos:start="235:39" pos:end="235:39"><name pos:start="235:39" pos:end="235:39">s</name></expr></argument>, <argument pos:start="235:42" pos:end="235:46"><expr pos:start="235:42" pos:end="235:46"><name pos:start="235:42" pos:end="235:42">x</name> <operator pos:start="235:44" pos:end="235:44">+</operator> <literal type="number" pos:start="235:46" pos:end="235:46">4</literal></expr></argument>, <argument pos:start="235:49" pos:end="235:49"><expr pos:start="235:49" pos:end="235:49"><name pos:start="235:49" pos:end="235:49">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="237:21" pos:end="241:79"><expr pos:start="237:21" pos:end="241:78"><call pos:start="237:21" pos:end="241:78"><name pos:start="237:21" pos:end="237:56"><name pos:start="237:21" pos:end="237:21">s</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:30">hevcdsp</name><operator pos:start="237:31" pos:end="237:31">.</operator><name pos:start="237:32" pos:end="237:56">hevc_h_loop_filter_luma_c</name></name><argument_list pos:start="237:57" pos:end="241:78">(<argument pos:start="237:58" pos:end="237:60"><expr pos:start="237:58" pos:end="237:60"><name pos:start="237:58" pos:end="237:60">src</name></expr></argument>,

                                                         <argument pos:start="239:58" pos:end="239:81"><expr pos:start="239:58" pos:end="239:81"><name pos:start="239:58" pos:end="239:81"><name pos:start="239:58" pos:end="239:58">s</name><operator pos:start="239:59" pos:end="239:60">-&gt;</operator><name pos:start="239:61" pos:end="239:65">frame</name><operator pos:start="239:66" pos:end="239:67">-&gt;</operator><name pos:start="239:68" pos:end="239:75">linesize</name><index pos:start="239:76" pos:end="239:81">[<expr pos:start="239:77" pos:end="239:80"><name pos:start="239:77" pos:end="239:80">LUMA</name></expr>]</index></name></expr></argument>,

                                                         <argument pos:start="241:58" pos:end="241:61"><expr pos:start="241:58" pos:end="241:61"><name pos:start="241:58" pos:end="241:61">beta</name></expr></argument>, <argument pos:start="241:64" pos:end="241:65"><expr pos:start="241:64" pos:end="241:65"><name pos:start="241:64" pos:end="241:65">tc</name></expr></argument>, <argument pos:start="241:68" pos:end="241:71"><expr pos:start="241:68" pos:end="241:71"><name pos:start="241:68" pos:end="241:71">no_p</name></expr></argument>, <argument pos:start="241:74" pos:end="241:77"><expr pos:start="241:74" pos:end="241:77"><name pos:start="241:74" pos:end="241:77">no_q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="243:19" pos:end="249:77">else<block type="pseudo" pos:start="245:21" pos:end="249:77"><block_content pos:start="245:21" pos:end="249:77">

                    <expr_stmt pos:start="245:21" pos:end="249:77"><expr pos:start="245:21" pos:end="249:76"><call pos:start="245:21" pos:end="249:76"><name pos:start="245:21" pos:end="245:54"><name pos:start="245:21" pos:end="245:21">s</name><operator pos:start="245:22" pos:end="245:23">-&gt;</operator><name pos:start="245:24" pos:end="245:30">hevcdsp</name><operator pos:start="245:31" pos:end="245:31">.</operator><name pos:start="245:32" pos:end="245:54">hevc_h_loop_filter_luma</name></name><argument_list pos:start="245:55" pos:end="249:76">(<argument pos:start="245:56" pos:end="245:58"><expr pos:start="245:56" pos:end="245:58"><name pos:start="245:56" pos:end="245:58">src</name></expr></argument>,

                                                       <argument pos:start="247:56" pos:end="247:79"><expr pos:start="247:56" pos:end="247:79"><name pos:start="247:56" pos:end="247:79"><name pos:start="247:56" pos:end="247:56">s</name><operator pos:start="247:57" pos:end="247:58">-&gt;</operator><name pos:start="247:59" pos:end="247:63">frame</name><operator pos:start="247:64" pos:end="247:65">-&gt;</operator><name pos:start="247:66" pos:end="247:73">linesize</name><index pos:start="247:74" pos:end="247:79">[<expr pos:start="247:75" pos:end="247:78"><name pos:start="247:75" pos:end="247:78">LUMA</name></expr>]</index></name></expr></argument>,

                                                       <argument pos:start="249:56" pos:end="249:59"><expr pos:start="249:56" pos:end="249:59"><name pos:start="249:56" pos:end="249:59">beta</name></expr></argument>, <argument pos:start="249:62" pos:end="249:63"><expr pos:start="249:62" pos:end="249:63"><name pos:start="249:62" pos:end="249:63">tc</name></expr></argument>, <argument pos:start="249:66" pos:end="249:69"><expr pos:start="249:66" pos:end="249:69"><name pos:start="249:66" pos:end="249:69">no_p</name></expr></argument>, <argument pos:start="249:72" pos:end="249:75"><expr pos:start="249:72" pos:end="249:75"><name pos:start="249:72" pos:end="249:75">no_q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <comment type="line" pos:start="259:5" pos:end="259:34">// horizontal filtering chroma</comment>

    <for pos:start="261:5" pos:end="341:5">for <control pos:start="261:9" pos:end="261:43">(<init pos:start="261:10" pos:end="261:20"><expr pos:start="261:10" pos:end="261:19"><name pos:start="261:10" pos:end="261:15">chroma</name> <operator pos:start="261:17" pos:end="261:17">=</operator> <literal type="number" pos:start="261:19" pos:end="261:19">1</literal></expr>;</init> <condition pos:start="261:22" pos:end="261:33"><expr pos:start="261:22" pos:end="261:32"><name pos:start="261:22" pos:end="261:27">chroma</name> <operator pos:start="261:29" pos:end="261:30">&lt;=</operator> <literal type="number" pos:start="261:32" pos:end="261:32">2</literal></expr>;</condition> <incr pos:start="261:35" pos:end="261:42"><expr pos:start="261:35" pos:end="261:42"><name pos:start="261:35" pos:end="261:40">chroma</name><operator pos:start="261:41" pos:end="261:42">++</operator></expr></incr>)</control> <block pos:start="261:45" pos:end="341:5">{<block_content pos:start="263:9" pos:end="339:9">

        <for pos:start="263:9" pos:end="339:9">for <control pos:start="263:13" pos:end="263:50">(<init pos:start="263:14" pos:end="263:30"><expr pos:start="263:14" pos:end="263:29"><name pos:start="263:14" pos:end="263:14">y</name> <operator pos:start="263:16" pos:end="263:16">=</operator> <ternary pos:start="263:18" pos:end="263:29"><condition pos:start="263:18" pos:end="263:21"><expr pos:start="263:18" pos:end="263:19"><name pos:start="263:18" pos:end="263:19">y0</name></expr> ?</condition><then pos:start="263:23" pos:end="263:24"> <expr pos:start="263:23" pos:end="263:24"><name pos:start="263:23" pos:end="263:24">y0</name></expr> </then><else pos:start="263:26" pos:end="263:29">: <expr pos:start="263:28" pos:end="263:29"><literal type="number" pos:start="263:28" pos:end="263:29">16</literal></expr></else></ternary></expr>;</init> <condition pos:start="263:32" pos:end="263:41"><expr pos:start="263:32" pos:end="263:40"><name pos:start="263:32" pos:end="263:32">y</name> <operator pos:start="263:34" pos:end="263:34">&lt;</operator> <name pos:start="263:36" pos:end="263:40">y_end</name></expr>;</condition> <incr pos:start="263:43" pos:end="263:49"><expr pos:start="263:43" pos:end="263:49"><name pos:start="263:43" pos:end="263:43">y</name> <operator pos:start="263:45" pos:end="263:46">+=</operator> <literal type="number" pos:start="263:48" pos:end="263:49">16</literal></expr></incr>)</control> <block pos:start="263:52" pos:end="339:9">{<block_content pos:start="265:13" pos:end="337:13">

            <for pos:start="265:13" pos:end="337:13">for <control pos:start="265:17" pos:end="265:48">(<init pos:start="265:18" pos:end="265:28"><expr pos:start="265:18" pos:end="265:27"><name pos:start="265:18" pos:end="265:18">x</name> <operator pos:start="265:20" pos:end="265:20">=</operator> <name pos:start="265:22" pos:end="265:23">x0</name> <operator pos:start="265:25" pos:end="265:25">-</operator> <literal type="number" pos:start="265:27" pos:end="265:27">8</literal></expr>;</init> <condition pos:start="265:30" pos:end="265:39"><expr pos:start="265:30" pos:end="265:38"><name pos:start="265:30" pos:end="265:30">x</name> <operator pos:start="265:32" pos:end="265:32">&lt;</operator> <name pos:start="265:34" pos:end="265:38">x_end</name></expr>;</condition> <incr pos:start="265:41" pos:end="265:47"><expr pos:start="265:41" pos:end="265:47"><name pos:start="265:41" pos:end="265:41">x</name> <operator pos:start="265:43" pos:end="265:44">+=</operator> <literal type="number" pos:start="265:46" pos:end="265:47">16</literal></expr></incr>)</control> <block pos:start="265:50" pos:end="337:13">{<block_content pos:start="267:17" pos:end="335:17">

                <decl_stmt pos:start="267:17" pos:end="267:29"><decl pos:start="267:17" pos:end="267:23"><type pos:start="267:17" pos:end="267:19"><name pos:start="267:17" pos:end="267:19">int</name></type> <name pos:start="267:21" pos:end="267:23">bs0</name></decl>, <decl pos:start="267:26" pos:end="267:28"><type ref="prev" pos:start="267:17" pos:end="267:19"/><name pos:start="267:26" pos:end="267:28">bs1</name></decl>;</decl_stmt>

                <comment type="line" pos:start="269:17" pos:end="269:74">// to make sure no memory access over boundary when x = -8</comment>

                <comment type="line" pos:start="271:17" pos:end="271:59">// TODO: simplify with row based deblocking</comment>

                <if_stmt pos:start="273:17" pos:end="291:17"><if pos:start="273:17" pos:end="279:17">if <condition pos:start="273:20" pos:end="273:26">(<expr pos:start="273:21" pos:end="273:25"><name pos:start="273:21" pos:end="273:21">x</name> <operator pos:start="273:23" pos:end="273:23">&lt;</operator> <literal type="number" pos:start="273:25" pos:end="273:25">0</literal></expr>)</condition> <block pos:start="273:28" pos:end="279:17">{<block_content pos:start="275:21" pos:end="277:75">

                    <expr_stmt pos:start="275:21" pos:end="275:28"><expr pos:start="275:21" pos:end="275:27"><name pos:start="275:21" pos:end="275:23">bs0</name> <operator pos:start="275:25" pos:end="275:25">=</operator> <literal type="number" pos:start="275:27" pos:end="275:27">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="277:21" pos:end="277:75"><expr pos:start="277:21" pos:end="277:74"><name pos:start="277:21" pos:end="277:23">bs1</name> <operator pos:start="277:25" pos:end="277:25">=</operator> <name pos:start="277:27" pos:end="277:74"><name pos:start="277:27" pos:end="277:27">s</name><operator pos:start="277:28" pos:end="277:29">-&gt;</operator><name pos:start="277:30" pos:end="277:42">horizontal_bs</name><index pos:start="277:43" pos:end="277:74">[<expr pos:start="277:44" pos:end="277:73"><operator pos:start="277:44" pos:end="277:44">(</operator><name pos:start="277:45" pos:end="277:45">x</name> <operator pos:start="277:47" pos:end="277:47">+</operator> <literal type="number" pos:start="277:49" pos:end="277:51">8</literal> <operator pos:start="277:51" pos:end="277:51">+</operator> <name pos:start="277:53" pos:end="277:53">y</name> <operator pos:start="277:55" pos:end="277:55">*</operator> <name pos:start="277:57" pos:end="277:67"><name pos:start="277:57" pos:end="277:57">s</name><operator pos:start="277:58" pos:end="277:59">-&gt;</operator><name pos:start="277:60" pos:end="277:67">bs_width</name></name><operator pos:start="277:68" pos:end="277:68">)</operator> <operator pos:start="277:70" pos:end="277:71">&gt;&gt;</operator> <literal type="number" pos:start="277:73" pos:end="277:73">2</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="279:19" pos:end="285:17">else if <condition pos:start="279:27" pos:end="279:42">(<expr pos:start="279:28" pos:end="279:41"><name pos:start="279:28" pos:end="279:28">x</name> <operator pos:start="279:30" pos:end="279:31">&gt;=</operator> <name pos:start="279:33" pos:end="279:37">x_end</name> <operator pos:start="279:39" pos:end="279:39">-</operator> <literal type="number" pos:start="279:41" pos:end="279:41">8</literal></expr>)</condition> <block pos:start="279:44" pos:end="285:17">{<block_content pos:start="281:21" pos:end="283:28">

                    <expr_stmt pos:start="281:21" pos:end="281:75"><expr pos:start="281:21" pos:end="281:74"><name pos:start="281:21" pos:end="281:23">bs0</name> <operator pos:start="281:25" pos:end="281:25">=</operator> <name pos:start="281:27" pos:end="281:74"><name pos:start="281:27" pos:end="281:27">s</name><operator pos:start="281:28" pos:end="281:29">-&gt;</operator><name pos:start="281:30" pos:end="281:42">horizontal_bs</name><index pos:start="281:43" pos:end="281:74">[<expr pos:start="281:44" pos:end="281:73"><operator pos:start="281:44" pos:end="281:44">(</operator><name pos:start="281:45" pos:end="281:45">x</name> <operator pos:start="281:47" pos:end="281:47">+</operator>     <name pos:start="281:53" pos:end="281:53">y</name> <operator pos:start="281:55" pos:end="281:55">*</operator> <name pos:start="281:57" pos:end="281:67"><name pos:start="281:57" pos:end="281:57">s</name><operator pos:start="281:58" pos:end="281:59">-&gt;</operator><name pos:start="281:60" pos:end="281:67">bs_width</name></name><operator pos:start="281:68" pos:end="281:68">)</operator> <operator pos:start="281:70" pos:end="281:71">&gt;&gt;</operator> <literal type="number" pos:start="281:73" pos:end="281:73">2</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="283:21" pos:end="283:28"><expr pos:start="283:21" pos:end="283:27"><name pos:start="283:21" pos:end="283:23">bs1</name> <operator pos:start="283:25" pos:end="283:25">=</operator> <literal type="number" pos:start="283:27" pos:end="283:27">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="285:19" pos:end="291:17">else <block pos:start="285:24" pos:end="291:17">{<block_content pos:start="287:21" pos:end="289:75">

                    <expr_stmt pos:start="287:21" pos:end="287:75"><expr pos:start="287:21" pos:end="287:74"><name pos:start="287:21" pos:end="287:23">bs0</name> <operator pos:start="287:25" pos:end="287:25">=</operator> <name pos:start="287:27" pos:end="287:74"><name pos:start="287:27" pos:end="287:27">s</name><operator pos:start="287:28" pos:end="287:29">-&gt;</operator><name pos:start="287:30" pos:end="287:42">horizontal_bs</name><index pos:start="287:43" pos:end="287:74">[<expr pos:start="287:44" pos:end="287:73"><operator pos:start="287:44" pos:end="287:44">(</operator><name pos:start="287:45" pos:end="287:45">x</name> <operator pos:start="287:47" pos:end="287:47">+</operator> <name pos:start="287:49" pos:end="287:49">y</name>     <operator pos:start="287:55" pos:end="287:55">*</operator> <name pos:start="287:57" pos:end="287:67"><name pos:start="287:57" pos:end="287:57">s</name><operator pos:start="287:58" pos:end="287:59">-&gt;</operator><name pos:start="287:60" pos:end="287:67">bs_width</name></name><operator pos:start="287:68" pos:end="287:68">)</operator> <operator pos:start="287:70" pos:end="287:71">&gt;&gt;</operator> <literal type="number" pos:start="287:73" pos:end="287:73">2</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="289:21" pos:end="289:75"><expr pos:start="289:21" pos:end="289:74"><name pos:start="289:21" pos:end="289:23">bs1</name> <operator pos:start="289:25" pos:end="289:25">=</operator> <name pos:start="289:27" pos:end="289:74"><name pos:start="289:27" pos:end="289:27">s</name><operator pos:start="289:28" pos:end="289:29">-&gt;</operator><name pos:start="289:30" pos:end="289:42">horizontal_bs</name><index pos:start="289:43" pos:end="289:74">[<expr pos:start="289:44" pos:end="289:73"><operator pos:start="289:44" pos:end="289:44">(</operator><name pos:start="289:45" pos:end="289:45">x</name> <operator pos:start="289:47" pos:end="289:47">+</operator> <literal type="number" pos:start="289:49" pos:end="289:51">8</literal> <operator pos:start="289:51" pos:end="289:51">+</operator> <name pos:start="289:53" pos:end="289:53">y</name> <operator pos:start="289:55" pos:end="289:55">*</operator> <name pos:start="289:57" pos:end="289:67"><name pos:start="289:57" pos:end="289:57">s</name><operator pos:start="289:58" pos:end="289:59">-&gt;</operator><name pos:start="289:60" pos:end="289:67">bs_width</name></name><operator pos:start="289:68" pos:end="289:68">)</operator> <operator pos:start="289:70" pos:end="289:71">&gt;&gt;</operator> <literal type="number" pos:start="289:73" pos:end="289:73">2</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="295:17" pos:end="335:17"><if pos:start="295:17" pos:end="335:17">if <condition pos:start="295:20" pos:end="295:45">(<expr pos:start="295:21" pos:end="295:44"><operator pos:start="295:21" pos:end="295:21">(</operator><name pos:start="295:22" pos:end="295:24">bs0</name> <operator pos:start="295:26" pos:end="295:27">==</operator> <literal type="number" pos:start="295:29" pos:end="295:29">2</literal><operator pos:start="295:30" pos:end="295:30">)</operator> <operator pos:start="295:32" pos:end="295:33">||</operator> <operator pos:start="295:35" pos:end="295:35">(</operator><name pos:start="295:36" pos:end="295:38">bs1</name> <operator pos:start="295:40" pos:end="295:41">==</operator> <literal type="number" pos:start="295:43" pos:end="295:43">2</literal><operator pos:start="295:44" pos:end="295:44">)</operator></expr>)</condition> <block pos:start="295:47" pos:end="335:17">{<block_content pos:start="297:21" pos:end="333:79">

                    <decl_stmt pos:start="297:21" pos:end="297:110"><decl pos:start="297:21" pos:end="297:109"><type pos:start="297:21" pos:end="297:29"><specifier pos:start="297:21" pos:end="297:25">const</specifier> <name pos:start="297:27" pos:end="297:29">int</name></type> <name pos:start="297:31" pos:end="297:33">qp0</name> <init pos:start="297:35" pos:end="297:109">= <expr pos:start="297:37" pos:end="297:109"><ternary pos:start="297:37" pos:end="297:109"><condition pos:start="297:37" pos:end="297:46"><expr pos:start="297:37" pos:end="297:44"><name pos:start="297:37" pos:end="297:39">bs0</name> <operator pos:start="297:41" pos:end="297:42">==</operator> <literal type="number" pos:start="297:44" pos:end="297:44">2</literal></expr> ?</condition><then pos:start="297:48" pos:end="297:105"> <expr pos:start="297:48" pos:end="297:105"><operator pos:start="297:48" pos:end="297:48">(</operator><call pos:start="297:49" pos:end="297:72"><name pos:start="297:49" pos:end="297:55">get_qPy</name><argument_list pos:start="297:56" pos:end="297:72">(<argument pos:start="297:57" pos:end="297:57"><expr pos:start="297:57" pos:end="297:57"><name pos:start="297:57" pos:end="297:57">s</name></expr></argument>, <argument pos:start="297:60" pos:end="297:60"><expr pos:start="297:60" pos:end="297:60"><name pos:start="297:60" pos:end="297:60">x</name></expr></argument>,     <argument pos:start="297:67" pos:end="297:71"><expr pos:start="297:67" pos:end="297:71"><name pos:start="297:67" pos:end="297:67">y</name> <operator pos:start="297:69" pos:end="297:69">-</operator> <literal type="number" pos:start="297:71" pos:end="297:71">1</literal></expr></argument>)</argument_list></call> <operator pos:start="297:74" pos:end="297:74">+</operator> <call pos:start="297:76" pos:end="297:95"><name pos:start="297:76" pos:end="297:82">get_qPy</name><argument_list pos:start="297:83" pos:end="297:95">(<argument pos:start="297:84" pos:end="297:84"><expr pos:start="297:84" pos:end="297:84"><name pos:start="297:84" pos:end="297:84">s</name></expr></argument>, <argument pos:start="297:87" pos:end="297:87"><expr pos:start="297:87" pos:end="297:87"><name pos:start="297:87" pos:end="297:87">x</name></expr></argument>,     <argument pos:start="297:94" pos:end="297:94"><expr pos:start="297:94" pos:end="297:94"><name pos:start="297:94" pos:end="297:94">y</name></expr></argument>)</argument_list></call> <operator pos:start="297:97" pos:end="297:97">+</operator> <literal type="number" pos:start="297:99" pos:end="297:99">1</literal><operator pos:start="297:100" pos:end="297:100">)</operator> <operator pos:start="297:102" pos:end="297:103">&gt;&gt;</operator> <literal type="number" pos:start="297:105" pos:end="297:105">1</literal></expr> </then><else pos:start="297:107" pos:end="297:109">: <expr pos:start="297:109" pos:end="297:109"><literal type="number" pos:start="297:109" pos:end="297:109">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="299:21" pos:end="299:110"><decl pos:start="299:21" pos:end="299:109"><type pos:start="299:21" pos:end="299:29"><specifier pos:start="299:21" pos:end="299:25">const</specifier> <name pos:start="299:27" pos:end="299:29">int</name></type> <name pos:start="299:31" pos:end="299:33">qp1</name> <init pos:start="299:35" pos:end="299:109">= <expr pos:start="299:37" pos:end="299:109"><ternary pos:start="299:37" pos:end="299:109"><condition pos:start="299:37" pos:end="299:46"><expr pos:start="299:37" pos:end="299:44"><name pos:start="299:37" pos:end="299:39">bs1</name> <operator pos:start="299:41" pos:end="299:42">==</operator> <literal type="number" pos:start="299:44" pos:end="299:44">2</literal></expr> ?</condition><then pos:start="299:48" pos:end="299:105"> <expr pos:start="299:48" pos:end="299:105"><operator pos:start="299:48" pos:end="299:48">(</operator><call pos:start="299:49" pos:end="299:72"><name pos:start="299:49" pos:end="299:55">get_qPy</name><argument_list pos:start="299:56" pos:end="299:72">(<argument pos:start="299:57" pos:end="299:57"><expr pos:start="299:57" pos:end="299:57"><name pos:start="299:57" pos:end="299:57">s</name></expr></argument>, <argument pos:start="299:60" pos:end="299:64"><expr pos:start="299:60" pos:end="299:64"><name pos:start="299:60" pos:end="299:60">x</name> <operator pos:start="299:62" pos:end="299:62">+</operator> <literal type="number" pos:start="299:64" pos:end="299:64">8</literal></expr></argument>, <argument pos:start="299:67" pos:end="299:71"><expr pos:start="299:67" pos:end="299:71"><name pos:start="299:67" pos:end="299:67">y</name> <operator pos:start="299:69" pos:end="299:69">-</operator> <literal type="number" pos:start="299:71" pos:end="299:71">1</literal></expr></argument>)</argument_list></call> <operator pos:start="299:74" pos:end="299:74">+</operator> <call pos:start="299:76" pos:end="299:95"><name pos:start="299:76" pos:end="299:82">get_qPy</name><argument_list pos:start="299:83" pos:end="299:95">(<argument pos:start="299:84" pos:end="299:84"><expr pos:start="299:84" pos:end="299:84"><name pos:start="299:84" pos:end="299:84">s</name></expr></argument>, <argument pos:start="299:87" pos:end="299:91"><expr pos:start="299:87" pos:end="299:91"><name pos:start="299:87" pos:end="299:87">x</name> <operator pos:start="299:89" pos:end="299:89">+</operator> <literal type="number" pos:start="299:91" pos:end="299:91">8</literal></expr></argument>, <argument pos:start="299:94" pos:end="299:94"><expr pos:start="299:94" pos:end="299:94"><name pos:start="299:94" pos:end="299:94">y</name></expr></argument>)</argument_list></call> <operator pos:start="299:97" pos:end="299:97">+</operator> <literal type="number" pos:start="299:99" pos:end="299:99">1</literal><operator pos:start="299:100" pos:end="299:100">)</operator> <operator pos:start="299:102" pos:end="299:103">&gt;&gt;</operator> <literal type="number" pos:start="299:105" pos:end="299:105">1</literal></expr> </then><else pos:start="299:107" pos:end="299:109">: <expr pos:start="299:109" pos:end="299:109"><literal type="number" pos:start="299:109" pos:end="299:109">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="303:21" pos:end="303:73"><expr pos:start="303:21" pos:end="303:72"><name pos:start="303:21" pos:end="303:29">tc_offset</name> <operator pos:start="303:31" pos:end="303:31">=</operator> <ternary pos:start="303:33" pos:end="303:72"><condition pos:start="303:33" pos:end="303:41"><expr pos:start="303:33" pos:end="303:39"><name pos:start="303:33" pos:end="303:33">x</name> <operator pos:start="303:35" pos:end="303:36">&gt;=</operator> <name pos:start="303:38" pos:end="303:39">x0</name></expr> ?</condition><then pos:start="303:43" pos:end="303:55"> <expr pos:start="303:43" pos:end="303:55"><name pos:start="303:43" pos:end="303:55">cur_tc_offset</name></expr> </then><else pos:start="303:57" pos:end="303:72">: <expr pos:start="303:59" pos:end="303:72"><name pos:start="303:59" pos:end="303:72">left_tc_offset</name></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="305:21" pos:end="305:88"><expr pos:start="305:21" pos:end="305:87"><name pos:start="305:21" pos:end="305:27"><name pos:start="305:21" pos:end="305:24">c_tc</name><index pos:start="305:25" pos:end="305:27">[<expr pos:start="305:26" pos:end="305:26"><literal type="number" pos:start="305:26" pos:end="305:26">0</literal></expr>]</index></name>   <operator pos:start="305:31" pos:end="305:31">=</operator> <ternary pos:start="305:33" pos:end="305:87"><condition pos:start="305:33" pos:end="305:42"><expr pos:start="305:33" pos:end="305:40"><name pos:start="305:33" pos:end="305:35">bs0</name> <operator pos:start="305:37" pos:end="305:38">==</operator> <literal type="number" pos:start="305:40" pos:end="305:40">2</literal></expr> ?</condition><then pos:start="305:44" pos:end="305:79"> <expr pos:start="305:44" pos:end="305:79"><call pos:start="305:44" pos:end="305:79"><name pos:start="305:44" pos:end="305:52">chroma_tc</name><argument_list pos:start="305:53" pos:end="305:79">(<argument pos:start="305:54" pos:end="305:54"><expr pos:start="305:54" pos:end="305:54"><name pos:start="305:54" pos:end="305:54">s</name></expr></argument>, <argument pos:start="305:57" pos:end="305:59"><expr pos:start="305:57" pos:end="305:59"><name pos:start="305:57" pos:end="305:59">qp0</name></expr></argument>, <argument pos:start="305:62" pos:end="305:67"><expr pos:start="305:62" pos:end="305:67"><name pos:start="305:62" pos:end="305:67">chroma</name></expr></argument>, <argument pos:start="305:70" pos:end="305:78"><expr pos:start="305:70" pos:end="305:78"><name pos:start="305:70" pos:end="305:78">tc_offset</name></expr></argument>)</argument_list></call></expr>     </then><else pos:start="305:85" pos:end="305:87">: <expr pos:start="305:87" pos:end="305:87"><literal type="number" pos:start="305:87" pos:end="305:87">0</literal></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="307:21" pos:end="307:88"><expr pos:start="307:21" pos:end="307:87"><name pos:start="307:21" pos:end="307:27"><name pos:start="307:21" pos:end="307:24">c_tc</name><index pos:start="307:25" pos:end="307:27">[<expr pos:start="307:26" pos:end="307:26"><literal type="number" pos:start="307:26" pos:end="307:26">1</literal></expr>]</index></name>   <operator pos:start="307:31" pos:end="307:31">=</operator> <ternary pos:start="307:33" pos:end="307:87"><condition pos:start="307:33" pos:end="307:42"><expr pos:start="307:33" pos:end="307:40"><name pos:start="307:33" pos:end="307:35">bs1</name> <operator pos:start="307:37" pos:end="307:38">==</operator> <literal type="number" pos:start="307:40" pos:end="307:40">2</literal></expr> ?</condition><then pos:start="307:44" pos:end="307:83"> <expr pos:start="307:44" pos:end="307:83"><call pos:start="307:44" pos:end="307:83"><name pos:start="307:44" pos:end="307:52">chroma_tc</name><argument_list pos:start="307:53" pos:end="307:83">(<argument pos:start="307:54" pos:end="307:54"><expr pos:start="307:54" pos:end="307:54"><name pos:start="307:54" pos:end="307:54">s</name></expr></argument>, <argument pos:start="307:57" pos:end="307:59"><expr pos:start="307:57" pos:end="307:59"><name pos:start="307:57" pos:end="307:59">qp1</name></expr></argument>, <argument pos:start="307:62" pos:end="307:67"><expr pos:start="307:62" pos:end="307:67"><name pos:start="307:62" pos:end="307:67">chroma</name></expr></argument>, <argument pos:start="307:70" pos:end="307:82"><expr pos:start="307:70" pos:end="307:82"><name pos:start="307:70" pos:end="307:82">cur_tc_offset</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="307:85" pos:end="307:87">: <expr pos:start="307:87" pos:end="307:87"><literal type="number" pos:start="307:87" pos:end="307:87">0</literal></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="309:21" pos:end="309:127"><expr pos:start="309:21" pos:end="309:126"><name pos:start="309:21" pos:end="309:23">src</name>       <operator pos:start="309:31" pos:end="309:31">=</operator> <operator pos:start="309:33" pos:end="309:33">&amp;</operator><name pos:start="309:34" pos:end="309:126"><name pos:start="309:34" pos:end="309:34">s</name><operator pos:start="309:35" pos:end="309:36">-&gt;</operator><name pos:start="309:37" pos:end="309:41">frame</name><operator pos:start="309:42" pos:end="309:43">-&gt;</operator><name pos:start="309:44" pos:end="309:47">data</name><index pos:start="309:48" pos:end="309:55">[<expr pos:start="309:49" pos:end="309:54"><name pos:start="309:49" pos:end="309:54">chroma</name></expr>]</index><index pos:start="309:56" pos:end="309:126">[<expr pos:start="309:57" pos:end="309:125"><name pos:start="309:57" pos:end="309:57">y</name> <operator pos:start="309:59" pos:end="309:59">/</operator> <literal type="number" pos:start="309:61" pos:end="309:61">2</literal> <operator pos:start="309:63" pos:end="309:63">*</operator> <name pos:start="309:65" pos:end="309:90"><name pos:start="309:65" pos:end="309:65">s</name><operator pos:start="309:66" pos:end="309:67">-&gt;</operator><name pos:start="309:68" pos:end="309:72">frame</name><operator pos:start="309:73" pos:end="309:74">-&gt;</operator><name pos:start="309:75" pos:end="309:82">linesize</name><index pos:start="309:83" pos:end="309:90">[<expr pos:start="309:84" pos:end="309:89"><name pos:start="309:84" pos:end="309:89">chroma</name></expr>]</index></name> <operator pos:start="309:92" pos:end="309:92">+</operator> <operator pos:start="309:94" pos:end="309:94">(</operator><operator pos:start="309:95" pos:end="309:95">(</operator><name pos:start="309:96" pos:end="309:96">x</name> <operator pos:start="309:98" pos:end="309:98">/</operator> <literal type="number" pos:start="309:100" pos:end="309:100">2</literal><operator pos:start="309:101" pos:end="309:101">)</operator> <operator pos:start="309:103" pos:end="309:104">&lt;&lt;</operator> <name pos:start="309:106" pos:end="309:124"><name pos:start="309:106" pos:end="309:106">s</name><operator pos:start="309:107" pos:end="309:108">-&gt;</operator><name pos:start="309:109" pos:end="309:111">sps</name><operator pos:start="309:112" pos:end="309:113">-&gt;</operator><name pos:start="309:114" pos:end="309:124">pixel_shift</name></name><operator pos:start="309:125" pos:end="309:125">)</operator></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="311:21" pos:end="333:79"><if pos:start="311:21" pos:end="327:21">if <condition pos:start="311:24" pos:end="311:29">(<expr pos:start="311:25" pos:end="311:28"><name pos:start="311:25" pos:end="311:28">pcmf</name></expr>)</condition> <block pos:start="311:31" pos:end="327:21">{<block_content pos:start="313:25" pos:end="325:81">

                        <expr_stmt pos:start="313:25" pos:end="313:55"><expr pos:start="313:25" pos:end="313:54"><name pos:start="313:25" pos:end="313:31"><name pos:start="313:25" pos:end="313:28">no_p</name><index pos:start="313:29" pos:end="313:31">[<expr pos:start="313:30" pos:end="313:30"><literal type="number" pos:start="313:30" pos:end="313:30">0</literal></expr>]</index></name> <operator pos:start="313:33" pos:end="313:33">=</operator> <call pos:start="313:35" pos:end="313:54"><name pos:start="313:35" pos:end="313:41">get_pcm</name><argument_list pos:start="313:42" pos:end="313:54">(<argument pos:start="313:43" pos:end="313:43"><expr pos:start="313:43" pos:end="313:43"><name pos:start="313:43" pos:end="313:43">s</name></expr></argument>, <argument pos:start="313:46" pos:end="313:46"><expr pos:start="313:46" pos:end="313:46"><name pos:start="313:46" pos:end="313:46">x</name></expr></argument>, <argument pos:start="313:49" pos:end="313:53"><expr pos:start="313:49" pos:end="313:53"><name pos:start="313:49" pos:end="313:49">y</name> <operator pos:start="313:51" pos:end="313:51">-</operator> <literal type="number" pos:start="313:53" pos:end="313:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="315:25" pos:end="315:59"><expr pos:start="315:25" pos:end="315:58"><name pos:start="315:25" pos:end="315:31"><name pos:start="315:25" pos:end="315:28">no_p</name><index pos:start="315:29" pos:end="315:31">[<expr pos:start="315:30" pos:end="315:30"><literal type="number" pos:start="315:30" pos:end="315:30">1</literal></expr>]</index></name> <operator pos:start="315:33" pos:end="315:33">=</operator> <call pos:start="315:35" pos:end="315:58"><name pos:start="315:35" pos:end="315:41">get_pcm</name><argument_list pos:start="315:42" pos:end="315:58">(<argument pos:start="315:43" pos:end="315:43"><expr pos:start="315:43" pos:end="315:43"><name pos:start="315:43" pos:end="315:43">s</name></expr></argument>, <argument pos:start="315:46" pos:end="315:50"><expr pos:start="315:46" pos:end="315:50"><name pos:start="315:46" pos:end="315:46">x</name> <operator pos:start="315:48" pos:end="315:48">+</operator> <literal type="number" pos:start="315:50" pos:end="315:50">8</literal></expr></argument>, <argument pos:start="315:53" pos:end="315:57"><expr pos:start="315:53" pos:end="315:57"><name pos:start="315:53" pos:end="315:53">y</name> <operator pos:start="315:55" pos:end="315:55">-</operator> <literal type="number" pos:start="315:57" pos:end="315:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="317:25" pos:end="317:51"><expr pos:start="317:25" pos:end="317:50"><name pos:start="317:25" pos:end="317:31"><name pos:start="317:25" pos:end="317:28">no_q</name><index pos:start="317:29" pos:end="317:31">[<expr pos:start="317:30" pos:end="317:30"><literal type="number" pos:start="317:30" pos:end="317:30">0</literal></expr>]</index></name> <operator pos:start="317:33" pos:end="317:33">=</operator> <call pos:start="317:35" pos:end="317:50"><name pos:start="317:35" pos:end="317:41">get_pcm</name><argument_list pos:start="317:42" pos:end="317:50">(<argument pos:start="317:43" pos:end="317:43"><expr pos:start="317:43" pos:end="317:43"><name pos:start="317:43" pos:end="317:43">s</name></expr></argument>, <argument pos:start="317:46" pos:end="317:46"><expr pos:start="317:46" pos:end="317:46"><name pos:start="317:46" pos:end="317:46">x</name></expr></argument>, <argument pos:start="317:49" pos:end="317:49"><expr pos:start="317:49" pos:end="317:49"><name pos:start="317:49" pos:end="317:49">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="319:25" pos:end="319:55"><expr pos:start="319:25" pos:end="319:54"><name pos:start="319:25" pos:end="319:31"><name pos:start="319:25" pos:end="319:28">no_q</name><index pos:start="319:29" pos:end="319:31">[<expr pos:start="319:30" pos:end="319:30"><literal type="number" pos:start="319:30" pos:end="319:30">1</literal></expr>]</index></name> <operator pos:start="319:33" pos:end="319:33">=</operator> <call pos:start="319:35" pos:end="319:54"><name pos:start="319:35" pos:end="319:41">get_pcm</name><argument_list pos:start="319:42" pos:end="319:54">(<argument pos:start="319:43" pos:end="319:43"><expr pos:start="319:43" pos:end="319:43"><name pos:start="319:43" pos:end="319:43">s</name></expr></argument>, <argument pos:start="319:46" pos:end="319:50"><expr pos:start="319:46" pos:end="319:50"><name pos:start="319:46" pos:end="319:46">x</name> <operator pos:start="319:48" pos:end="319:48">+</operator> <literal type="number" pos:start="319:50" pos:end="319:50">8</literal></expr></argument>, <argument pos:start="319:53" pos:end="319:53"><expr pos:start="319:53" pos:end="319:53"><name pos:start="319:53" pos:end="319:53">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="321:25" pos:end="325:81"><expr pos:start="321:25" pos:end="325:80"><call pos:start="321:25" pos:end="325:80"><name pos:start="321:25" pos:end="321:62"><name pos:start="321:25" pos:end="321:25">s</name><operator pos:start="321:26" pos:end="321:27">-&gt;</operator><name pos:start="321:28" pos:end="321:34">hevcdsp</name><operator pos:start="321:35" pos:end="321:35">.</operator><name pos:start="321:36" pos:end="321:62">hevc_h_loop_filter_chroma_c</name></name><argument_list pos:start="321:63" pos:end="325:80">(<argument pos:start="321:64" pos:end="321:66"><expr pos:start="321:64" pos:end="321:66"><name pos:start="321:64" pos:end="321:66">src</name></expr></argument>,

                                                               <argument pos:start="323:64" pos:end="323:89"><expr pos:start="323:64" pos:end="323:89"><name pos:start="323:64" pos:end="323:89"><name pos:start="323:64" pos:end="323:64">s</name><operator pos:start="323:65" pos:end="323:66">-&gt;</operator><name pos:start="323:67" pos:end="323:71">frame</name><operator pos:start="323:72" pos:end="323:73">-&gt;</operator><name pos:start="323:74" pos:end="323:81">linesize</name><index pos:start="323:82" pos:end="323:89">[<expr pos:start="323:83" pos:end="323:88"><name pos:start="323:83" pos:end="323:88">chroma</name></expr>]</index></name></expr></argument>,

                                                               <argument pos:start="325:64" pos:end="325:67"><expr pos:start="325:64" pos:end="325:67"><name pos:start="325:64" pos:end="325:67">c_tc</name></expr></argument>, <argument pos:start="325:70" pos:end="325:73"><expr pos:start="325:70" pos:end="325:73"><name pos:start="325:70" pos:end="325:73">no_p</name></expr></argument>, <argument pos:start="325:76" pos:end="325:79"><expr pos:start="325:76" pos:end="325:79"><name pos:start="325:76" pos:end="325:79">no_q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="327:23" pos:end="333:79">else<block type="pseudo" pos:start="329:25" pos:end="333:79"><block_content pos:start="329:25" pos:end="333:79">

                        <expr_stmt pos:start="329:25" pos:end="333:79"><expr pos:start="329:25" pos:end="333:78"><call pos:start="329:25" pos:end="333:78"><name pos:start="329:25" pos:end="329:60"><name pos:start="329:25" pos:end="329:25">s</name><operator pos:start="329:26" pos:end="329:27">-&gt;</operator><name pos:start="329:28" pos:end="329:34">hevcdsp</name><operator pos:start="329:35" pos:end="329:35">.</operator><name pos:start="329:36" pos:end="329:60">hevc_h_loop_filter_chroma</name></name><argument_list pos:start="329:61" pos:end="333:78">(<argument pos:start="329:62" pos:end="329:64"><expr pos:start="329:62" pos:end="329:64"><name pos:start="329:62" pos:end="329:64">src</name></expr></argument>,

                                                             <argument pos:start="331:62" pos:end="331:87"><expr pos:start="331:62" pos:end="331:87"><name pos:start="331:62" pos:end="331:87"><name pos:start="331:62" pos:end="331:62">s</name><operator pos:start="331:63" pos:end="331:64">-&gt;</operator><name pos:start="331:65" pos:end="331:69">frame</name><operator pos:start="331:70" pos:end="331:71">-&gt;</operator><name pos:start="331:72" pos:end="331:79">linesize</name><index pos:start="331:80" pos:end="331:87">[<expr pos:start="331:81" pos:end="331:86"><name pos:start="331:81" pos:end="331:86">chroma</name></expr>]</index></name></expr></argument>,

                                                             <argument pos:start="333:62" pos:end="333:65"><expr pos:start="333:62" pos:end="333:65"><name pos:start="333:62" pos:end="333:65">c_tc</name></expr></argument>, <argument pos:start="333:68" pos:end="333:71"><expr pos:start="333:68" pos:end="333:71"><name pos:start="333:68" pos:end="333:71">no_p</name></expr></argument>, <argument pos:start="333:74" pos:end="333:77"><expr pos:start="333:74" pos:end="333:77"><name pos:start="333:74" pos:end="333:77">no_q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
