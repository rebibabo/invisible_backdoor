<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3342.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">local_rename</name><parameter_list pos:start="1:24" pos:end="3:44">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:33">FsContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">ctx</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:59"><decl pos:start="1:41" pos:end="1:59"><type pos:start="1:41" pos:end="1:59"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:50">char</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:59">oldpath</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:43"><decl pos:start="3:25" pos:end="3:43"><type pos:start="3:25" pos:end="3:43"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:34">char</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:43">newpath</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="41:15">

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:7">tmp</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:42"><name pos:start="13:11" pos:end="13:21">qemu_strdup</name><argument_list pos:start="13:22" pos:end="13:42">(<argument pos:start="13:23" pos:end="13:41"><expr pos:start="13:23" pos:end="13:41"><call pos:start="13:23" pos:end="13:41"><name pos:start="13:23" pos:end="13:27">rpath</name><argument_list pos:start="13:28" pos:end="13:41">(<argument pos:start="13:29" pos:end="13:31"><expr pos:start="13:29" pos:end="13:31"><name pos:start="13:29" pos:end="13:31">ctx</name></expr></argument>, <argument pos:start="13:34" pos:end="13:40"><expr pos:start="13:34" pos:end="13:40"><name pos:start="13:34" pos:end="13:40">oldpath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:11">tmp</name> <operator pos:start="15:13" pos:end="15:14">==</operator> <name pos:start="15:16" pos:end="15:19">NULL</name></expr>)</condition> <block pos:start="15:22" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:43"><expr pos:start="23:5" pos:end="23:42"><name pos:start="23:5" pos:end="23:7">err</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:42"><name pos:start="23:11" pos:end="23:16">rename</name><argument_list pos:start="23:17" pos:end="23:42">(<argument pos:start="23:18" pos:end="23:20"><expr pos:start="23:18" pos:end="23:20"><name pos:start="23:18" pos:end="23:20">tmp</name></expr></argument>, <argument pos:start="23:23" pos:end="23:41"><expr pos:start="23:23" pos:end="23:41"><call pos:start="23:23" pos:end="23:41"><name pos:start="23:23" pos:end="23:27">rpath</name><argument_list pos:start="23:28" pos:end="23:41">(<argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">ctx</name></expr></argument>, <argument pos:start="23:34" pos:end="23:40"><expr pos:start="23:34" pos:end="23:40"><name pos:start="23:34" pos:end="23:40">newpath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:18">(<expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:11">err</name> <operator pos:start="25:13" pos:end="25:14">==</operator> <operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>)</condition> <block pos:start="25:20" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:23">

        <decl_stmt pos:start="27:9" pos:end="27:27"><decl pos:start="27:9" pos:end="27:26"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:18">serrno</name> <init pos:start="27:20" pos:end="27:26">= <expr pos:start="27:22" pos:end="27:26"><name pos:start="27:22" pos:end="27:26">errno</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:23"><expr pos:start="29:9" pos:end="29:22"><call pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:17">qemu_free</name><argument_list pos:start="29:18" pos:end="29:22">(<argument pos:start="29:19" pos:end="29:21"><expr pos:start="29:19" pos:end="29:21"><name pos:start="29:19" pos:end="29:21">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:23"><expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:13">errno</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:22">serrno</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="37:5">else <block pos:start="33:12" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:23">

        <expr_stmt pos:start="35:9" pos:end="35:23"><expr pos:start="35:9" pos:end="35:22"><call pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:17">qemu_free</name><argument_list pos:start="35:18" pos:end="35:22">(<argument pos:start="35:19" pos:end="35:21"><expr pos:start="35:19" pos:end="35:21"><name pos:start="35:19" pos:end="35:21">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="41:5" pos:end="41:15">return <expr pos:start="41:12" pos:end="41:14"><name pos:start="41:12" pos:end="41:14">err</name></expr>;</return>



</block_content>}</block></function>
</unit>
