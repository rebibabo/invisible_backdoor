<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4374.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">avi_load_index</name><parameter_list pos:start="1:26" pos:end="1:45">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AVIContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">avi</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ByteIOContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">pb</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">tag</name></decl>, <decl pos:start="9:19" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:19" pos:end="9:22">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">pos</name><init pos:start="11:16" pos:end="11:30">= <expr pos:start="11:18" pos:end="11:30"><call pos:start="11:18" pos:end="11:30"><name pos:start="11:18" pos:end="11:26">url_ftell</name><argument_list pos:start="11:27" pos:end="11:30">(<argument pos:start="11:28" pos:end="11:29"><expr pos:start="11:28" pos:end="11:29"><name pos:start="11:28" pos:end="11:29">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="18:0"><expr pos:start="15:5" pos:end="15:42"><call pos:start="15:5" pos:end="15:42"><name pos:start="15:5" pos:end="15:13">url_fseek</name><argument_list pos:start="15:14" pos:end="15:42">(<argument pos:start="15:15" pos:end="15:16"><expr pos:start="15:15" pos:end="15:16"><name pos:start="15:15" pos:end="15:16">pb</name></expr></argument>, <argument pos:start="15:19" pos:end="15:31"><expr pos:start="15:19" pos:end="15:31"><name pos:start="15:19" pos:end="15:31"><name pos:start="15:19" pos:end="15:21">avi</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:31">movi_end</name></name></expr></argument>, <argument pos:start="15:34" pos:end="15:41"><expr pos:start="15:34" pos:end="15:41"><name pos:start="15:34" pos:end="15:41">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="17:1" pos:end="17:17">#<cpp:directive pos:start="17:2" pos:end="17:6">ifdef</cpp:directive> <name pos:start="17:8" pos:end="17:17">DEBUG_SEEK</name></cpp:ifdef>

    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:51"><call pos:start="19:5" pos:end="19:51"><name pos:start="19:5" pos:end="19:10">printf</name><argument_list pos:start="19:11" pos:end="19:51">(<argument pos:start="19:12" pos:end="19:35"><expr pos:start="19:12" pos:end="19:35"><literal type="string" pos:start="19:12" pos:end="19:25">"movi_end=0x%"</literal><name pos:start="19:26" pos:end="19:31">PRIx64</name><literal type="string" pos:start="19:32" pos:end="19:35">"\n"</literal></expr></argument>, <argument pos:start="19:38" pos:end="19:50"><expr pos:start="19:38" pos:end="19:50"><name pos:start="19:38" pos:end="19:50"><name pos:start="19:38" pos:end="19:40">avi</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:50">movi_end</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

    <for pos:start="23:5" pos:end="75:5">for<control pos:start="23:8" pos:end="23:11">(<init pos:start="23:9" pos:end="23:9">;</init><condition pos:start="23:10" pos:end="23:10">;</condition><incr/>)</control> <block pos:start="23:13" pos:end="75:5">{<block_content pos:start="25:9" pos:end="73:9">

        <if_stmt pos:start="25:9" pos:end="27:18"><if pos:start="25:9" pos:end="27:18">if <condition pos:start="25:12" pos:end="25:25">(<expr pos:start="25:13" pos:end="25:24"><call pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:20">url_feof</name><argument_list pos:start="25:21" pos:end="25:24">(<argument pos:start="25:22" pos:end="25:23"><expr pos:start="25:22" pos:end="25:23"><name pos:start="25:22" pos:end="25:23">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:11">tag</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:26"><name pos:start="29:15" pos:end="29:22">get_le32</name><argument_list pos:start="29:23" pos:end="29:26">(<argument pos:start="29:24" pos:end="29:25"><expr pos:start="29:24" pos:end="29:25"><name pos:start="29:24" pos:end="29:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="34:0"><expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:12">size</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:27"><name pos:start="31:16" pos:end="31:23">get_le32</name><argument_list pos:start="31:24" pos:end="31:27">(<argument pos:start="31:25" pos:end="31:26"><expr pos:start="31:25" pos:end="31:26"><name pos:start="31:25" pos:end="31:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="33:1" pos:end="33:17">#<cpp:directive pos:start="33:2" pos:end="33:6">ifdef</cpp:directive> <name pos:start="33:8" pos:end="33:17">DEBUG_SEEK</name></cpp:ifdef>

        <expr_stmt pos:start="35:9" pos:end="48:0"><expr pos:start="35:9" pos:end="45:20"><call pos:start="35:9" pos:end="45:20"><name pos:start="35:9" pos:end="35:14">printf</name><argument_list pos:start="35:15" pos:end="45:20">(<argument pos:start="35:16" pos:end="35:41"><expr pos:start="35:16" pos:end="35:41"><literal type="string" pos:start="35:16" pos:end="35:41">"tag=%c%c%c%c size=0x%x\n"</literal></expr></argument>,

               <argument pos:start="37:16" pos:end="37:25"><expr pos:start="37:16" pos:end="37:25"><name pos:start="37:16" pos:end="37:18">tag</name> <operator pos:start="37:20" pos:end="37:20">&amp;</operator> <literal type="number" pos:start="37:22" pos:end="37:25">0xff</literal></expr></argument>,

               <argument pos:start="39:16" pos:end="39:32"><expr pos:start="39:16" pos:end="39:32"><operator pos:start="39:16" pos:end="39:16">(</operator><name pos:start="39:17" pos:end="39:19">tag</name> <operator pos:start="39:21" pos:end="39:22">&gt;&gt;</operator> <literal type="number" pos:start="39:24" pos:end="39:24">8</literal><operator pos:start="39:25" pos:end="39:25">)</operator> <operator pos:start="39:27" pos:end="39:27">&amp;</operator> <literal type="number" pos:start="39:29" pos:end="39:32">0xff</literal></expr></argument>,

               <argument pos:start="41:16" pos:end="41:33"><expr pos:start="41:16" pos:end="41:33"><operator pos:start="41:16" pos:end="41:16">(</operator><name pos:start="41:17" pos:end="41:19">tag</name> <operator pos:start="41:21" pos:end="41:22">&gt;&gt;</operator> <literal type="number" pos:start="41:24" pos:end="41:25">16</literal><operator pos:start="41:26" pos:end="41:26">)</operator> <operator pos:start="41:28" pos:end="41:28">&amp;</operator> <literal type="number" pos:start="41:30" pos:end="41:33">0xff</literal></expr></argument>,

               <argument pos:start="43:16" pos:end="43:33"><expr pos:start="43:16" pos:end="43:33"><operator pos:start="43:16" pos:end="43:16">(</operator><name pos:start="43:17" pos:end="43:19">tag</name> <operator pos:start="43:21" pos:end="43:22">&gt;&gt;</operator> <literal type="number" pos:start="43:24" pos:end="43:25">24</literal><operator pos:start="43:26" pos:end="43:26">)</operator> <operator pos:start="43:28" pos:end="43:28">&amp;</operator> <literal type="number" pos:start="43:30" pos:end="43:33">0xff</literal></expr></argument>,

               <argument pos:start="45:16" pos:end="45:19"><expr pos:start="45:16" pos:end="45:19"><name pos:start="45:16" pos:end="45:19">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

        <switch pos:start="49:9" pos:end="73:9">switch<condition pos:start="49:15" pos:end="49:19">(<expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">tag</name></expr>)</condition> <block pos:start="49:21" pos:end="73:9">{<block_content pos:start="51:9" pos:end="71:18">

        <case pos:start="51:9" pos:end="51:39">case <expr pos:start="51:14" pos:end="51:38"><call pos:start="51:14" pos:end="51:38"><name pos:start="51:14" pos:end="51:18">MKTAG</name><argument_list pos:start="51:19" pos:end="51:38">(<argument pos:start="51:20" pos:end="51:22"><expr pos:start="51:20" pos:end="51:22"><literal type="char" pos:start="51:20" pos:end="51:22">'i'</literal></expr></argument>, <argument pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><literal type="char" pos:start="51:25" pos:end="51:27">'d'</literal></expr></argument>, <argument pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><literal type="char" pos:start="51:30" pos:end="51:32">'x'</literal></expr></argument>, <argument pos:start="51:35" pos:end="51:37"><expr pos:start="51:35" pos:end="51:37"><literal type="char" pos:start="51:35" pos:end="51:37">'1'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="53:13" pos:end="59:29"><if pos:start="53:13" pos:end="55:26">if <condition pos:start="53:16" pos:end="53:43">(<expr pos:start="53:17" pos:end="53:42"><call pos:start="53:17" pos:end="53:38"><name pos:start="53:17" pos:end="53:29">avi_read_idx1</name><argument_list pos:start="53:30" pos:end="53:38">(<argument pos:start="53:31" pos:end="53:31"><expr pos:start="53:31" pos:end="53:31"><name pos:start="53:31" pos:end="53:31">s</name></expr></argument>, <argument pos:start="53:34" pos:end="53:37"><expr pos:start="53:34" pos:end="53:37"><name pos:start="53:34" pos:end="53:37">size</name></expr></argument>)</argument_list></call> <operator pos:start="53:40" pos:end="53:40">&lt;</operator> <literal type="number" pos:start="53:42" pos:end="53:42">0</literal></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:26"><block_content pos:start="55:17" pos:end="55:26">

                <goto pos:start="55:17" pos:end="55:26">goto <name pos:start="55:22" pos:end="55:25">skip</name>;</goto></block_content></block></if>

            <else pos:start="57:13" pos:end="59:29">else<block type="pseudo" pos:start="59:17" pos:end="59:29"><block_content pos:start="59:17" pos:end="59:29">

                <goto pos:start="59:17" pos:end="59:29">goto <name pos:start="59:22" pos:end="59:28">the_end</name>;</goto></block_content></block></else></if_stmt>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        <default pos:start="63:9" pos:end="63:16">default:</default>

        <label pos:start="65:9" pos:end="65:13"><name pos:start="65:9" pos:end="65:12">skip</name>:</label>

            <expr_stmt pos:start="67:13" pos:end="67:31"><expr pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:16">size</name> <operator pos:start="67:18" pos:end="67:19">+=</operator> <operator pos:start="67:21" pos:end="67:21">(</operator><name pos:start="67:22" pos:end="67:25">size</name> <operator pos:start="67:27" pos:end="67:27">&amp;</operator> <literal type="number" pos:start="67:29" pos:end="67:29">1</literal><operator pos:start="67:30" pos:end="67:30">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:32"><expr pos:start="69:13" pos:end="69:31"><call pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:21">url_fskip</name><argument_list pos:start="69:22" pos:end="69:31">(<argument pos:start="69:23" pos:end="69:24"><expr pos:start="69:23" pos:end="69:24"><name pos:start="69:23" pos:end="69:24">pb</name></expr></argument>, <argument pos:start="69:27" pos:end="69:30"><expr pos:start="69:27" pos:end="69:30"><name pos:start="69:27" pos:end="69:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>

 <label pos:start="77:2" pos:end="77:9"><name pos:start="77:2" pos:end="77:8">the_end</name>:</label>

    <expr_stmt pos:start="79:5" pos:end="79:33"><expr pos:start="79:5" pos:end="79:32"><call pos:start="79:5" pos:end="79:32"><name pos:start="79:5" pos:end="79:13">url_fseek</name><argument_list pos:start="79:14" pos:end="79:32">(<argument pos:start="79:15" pos:end="79:16"><expr pos:start="79:15" pos:end="79:16"><name pos:start="79:15" pos:end="79:16">pb</name></expr></argument>, <argument pos:start="79:19" pos:end="79:21"><expr pos:start="79:19" pos:end="79:21"><name pos:start="79:19" pos:end="79:21">pos</name></expr></argument>, <argument pos:start="79:24" pos:end="79:31"><expr pos:start="79:24" pos:end="79:31"><name pos:start="79:24" pos:end="79:31">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
