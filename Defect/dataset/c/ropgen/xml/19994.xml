<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19994.c" pos:tabs="8"><function pos:start="1:1" pos:end="471:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">cpu_ppc_handle_mmu_fault</name> <parameter_list pos:start="1:30" pos:end="3:58">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:38">CPUState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">env</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:65"><decl pos:start="1:46" pos:end="1:65"><type pos:start="1:46" pos:end="1:65"><name pos:start="1:46" pos:end="1:57">target_ulong</name></type> <name pos:start="1:59" pos:end="1:65">address</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:73"><decl pos:start="1:68" pos:end="1:73"><type pos:start="1:68" pos:end="1:73"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:73">rw</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:41"><decl pos:start="3:31" pos:end="3:41"><type pos:start="3:31" pos:end="3:41"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:41">mmu_idx</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:57"><decl pos:start="3:44" pos:end="3:57"><type pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:57">is_softmmu</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="471:1">{<block_content pos:start="7:5" pos:end="469:15">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">mmu_ctx_t</name></type> <name pos:start="7:15" pos:end="7:17">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">access_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="35:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:10">rw</name> <operator pos:start="15:12" pos:end="15:13">==</operator> <literal type="number" pos:start="15:15" pos:end="15:15">2</literal></expr>)</condition> <block pos:start="15:18" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:34">

        <comment type="block" pos:start="17:9" pos:end="17:25">/* code access */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:15"><expr pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:10">rw</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:19">access_type</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:33">ACCESS_CODE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="35:5">else <block pos:start="23:12" pos:end="35:5">{<block_content pos:start="31:9" pos:end="31:33">

        <comment type="block" pos:start="25:9" pos:end="25:25">/* data access */</comment>

        <comment type="block" pos:start="27:9" pos:end="29:23">/* XXX: put correct access by using cpu_restore_state()

           correctly */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:19">access_type</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:32">ACCESS_INT</name></expr>;</expr_stmt>

        <comment type="line" pos:start="33:9" pos:end="33:49">//        access_type = env-&gt;access_type;</comment>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:71"><expr pos:start="37:5" pos:end="37:70"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:70"><name pos:start="37:11" pos:end="37:30">get_physical_address</name><argument_list pos:start="37:31" pos:end="37:70">(<argument pos:start="37:32" pos:end="37:34"><expr pos:start="37:32" pos:end="37:34"><name pos:start="37:32" pos:end="37:34">env</name></expr></argument>, <argument pos:start="37:37" pos:end="37:40"><expr pos:start="37:37" pos:end="37:40"><operator pos:start="37:37" pos:end="37:37">&amp;</operator><name pos:start="37:38" pos:end="37:40">ctx</name></expr></argument>, <argument pos:start="37:43" pos:end="37:49"><expr pos:start="37:43" pos:end="37:49"><name pos:start="37:43" pos:end="37:49">address</name></expr></argument>, <argument pos:start="37:52" pos:end="37:53"><expr pos:start="37:52" pos:end="37:53"><name pos:start="37:52" pos:end="37:53">rw</name></expr></argument>, <argument pos:start="37:56" pos:end="37:66"><expr pos:start="37:56" pos:end="37:66"><name pos:start="37:56" pos:end="37:66">access_type</name></expr></argument>, <argument pos:start="37:69" pos:end="37:69"><expr pos:start="37:69" pos:end="37:69"><literal type="number" pos:start="37:69" pos:end="37:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="465:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:17">(<expr pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:14">==</operator> <literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>)</condition> <block pos:start="39:19" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:53">

        <expr_stmt pos:start="41:9" pos:end="45:53"><expr pos:start="41:9" pos:end="45:52"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="45:52"><name pos:start="41:15" pos:end="41:31">tlb_set_page_exec</name><argument_list pos:start="41:32" pos:end="45:52">(<argument pos:start="41:33" pos:end="41:35"><expr pos:start="41:33" pos:end="41:35"><name pos:start="41:33" pos:end="41:35">env</name></expr></argument>, <argument pos:start="41:38" pos:end="41:63"><expr pos:start="41:38" pos:end="41:63"><name pos:start="41:38" pos:end="41:44">address</name> <operator pos:start="41:46" pos:end="41:46">&amp;</operator> <name pos:start="41:48" pos:end="41:63">TARGET_PAGE_MASK</name></expr></argument>,

                                <argument pos:start="43:33" pos:end="43:60"><expr pos:start="43:33" pos:end="43:60"><name pos:start="43:33" pos:end="43:41"><name pos:start="43:33" pos:end="43:35">ctx</name><operator pos:start="43:36" pos:end="43:36">.</operator><name pos:start="43:37" pos:end="43:41">raddr</name></name> <operator pos:start="43:43" pos:end="43:43">&amp;</operator> <name pos:start="43:45" pos:end="43:60">TARGET_PAGE_MASK</name></expr></argument>, <argument pos:start="43:63" pos:end="43:70"><expr pos:start="43:63" pos:end="43:70"><name pos:start="43:63" pos:end="43:70"><name pos:start="43:63" pos:end="43:65">ctx</name><operator pos:start="43:66" pos:end="43:66">.</operator><name pos:start="43:67" pos:end="43:70">prot</name></name></expr></argument>,

                                <argument pos:start="45:33" pos:end="45:39"><expr pos:start="45:33" pos:end="45:39"><name pos:start="45:33" pos:end="45:39">mmu_idx</name></expr></argument>, <argument pos:start="45:42" pos:end="45:51"><expr pos:start="45:42" pos:end="45:51"><name pos:start="45:42" pos:end="45:51">is_softmmu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="47:7" pos:end="465:5">else if <condition pos:start="47:15" pos:end="47:23">(<expr pos:start="47:16" pos:end="47:22"><name pos:start="47:16" pos:end="47:18">ret</name> <operator pos:start="47:20" pos:end="47:20">&lt;</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>)</condition> <block pos:start="47:25" pos:end="465:5">{<block_content pos:start="51:9" pos:end="463:16">

<cpp:if pos:start="49:1" pos:end="49:23">#<cpp:directive pos:start="49:2" pos:end="49:3">if</cpp:directive> <expr pos:start="49:5" pos:end="49:23"><call pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:11">defined</name> <argument_list pos:start="49:13" pos:end="49:23">(<argument pos:start="49:14" pos:end="49:22"><expr pos:start="49:14" pos:end="49:22"><name pos:start="49:14" pos:end="49:22">DEBUG_MMU</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="51:9" pos:end="56:0"><if pos:start="51:9" pos:end="56:0">if <condition pos:start="51:12" pos:end="51:26">(<expr pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:20">loglevel</name> <operator pos:start="51:22" pos:end="51:23">!=</operator> <literal type="number" pos:start="51:25" pos:end="51:25">0</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="56:0"><block_content pos:start="53:13" pos:end="56:0">

            <expr_stmt pos:start="53:13" pos:end="56:0"><expr pos:start="53:13" pos:end="53:52"><call pos:start="53:13" pos:end="53:52"><name pos:start="53:13" pos:end="53:26">cpu_dump_state</name><argument_list pos:start="53:27" pos:end="53:52">(<argument pos:start="53:28" pos:end="53:30"><expr pos:start="53:28" pos:end="53:30"><name pos:start="53:28" pos:end="53:30">env</name></expr></argument>, <argument pos:start="53:33" pos:end="53:39"><expr pos:start="53:33" pos:end="53:39"><name pos:start="53:33" pos:end="53:39">logfile</name></expr></argument>, <argument pos:start="53:42" pos:end="53:48"><expr pos:start="53:42" pos:end="53:48"><name pos:start="53:42" pos:end="53:48">fprintf</name></expr></argument>, <argument pos:start="53:51" pos:end="53:51"><expr pos:start="53:51" pos:end="53:51"><literal type="number" pos:start="53:51" pos:end="53:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="57:9" pos:end="462:0"><if pos:start="57:9" pos:end="195:9">if <condition pos:start="57:12" pos:end="57:39">(<expr pos:start="57:13" pos:end="57:38"><name pos:start="57:13" pos:end="57:23">access_type</name> <operator pos:start="57:25" pos:end="57:26">==</operator> <name pos:start="57:28" pos:end="57:38">ACCESS_CODE</name></expr>)</condition> <block pos:start="57:41" pos:end="195:9">{<block_content pos:start="59:13" pos:end="193:13">

            <switch pos:start="59:13" pos:end="193:13">switch <condition pos:start="59:20" pos:end="59:24">(<expr pos:start="59:21" pos:end="59:23"><name pos:start="59:21" pos:end="59:23">ret</name></expr>)</condition> <block pos:start="59:26" pos:end="193:13">{<block_content pos:start="61:13" pos:end="192:0">

            <case pos:start="61:13" pos:end="61:20">case <expr pos:start="61:18" pos:end="61:19"><operator pos:start="61:18" pos:end="61:18">-</operator><literal type="number" pos:start="61:19" pos:end="61:19">1</literal></expr>:</case>

                <comment type="block" pos:start="63:17" pos:end="63:54">/* No matches in page tables or TLB */</comment>

                <switch pos:start="65:17" pos:end="143:17">switch <condition pos:start="65:24" pos:end="65:39">(<expr pos:start="65:25" pos:end="65:38"><name pos:start="65:25" pos:end="65:38"><name pos:start="65:25" pos:end="65:27">env</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:38">mmu_model</name></name></expr>)</condition> <block pos:start="65:41" pos:end="143:17">{<block_content pos:start="67:17" pos:end="141:30">

                <case pos:start="67:17" pos:end="67:42">case <expr pos:start="67:22" pos:end="67:41"><name pos:start="67:22" pos:end="67:41">POWERPC_MMU_SOFT_6xx</name></expr>:</case>

                    <expr_stmt pos:start="69:21" pos:end="69:62"><expr pos:start="69:21" pos:end="69:61"><name pos:start="69:21" pos:end="69:40"><name pos:start="69:21" pos:end="69:23">env</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:40">exception_index</name></name> <operator pos:start="69:42" pos:end="69:42">=</operator> <name pos:start="69:44" pos:end="69:61">POWERPC_EXCP_IFTLB</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:46"><expr pos:start="71:21" pos:end="71:45"><name pos:start="71:21" pos:end="71:35"><name pos:start="71:21" pos:end="71:23">env</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:35">error_code</name></name> <operator pos:start="71:37" pos:end="71:37">=</operator> <literal type="number" pos:start="71:39" pos:end="71:39">1</literal> <operator pos:start="71:41" pos:end="71:42">&lt;&lt;</operator> <literal type="number" pos:start="71:44" pos:end="71:45">18</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:50"><expr pos:start="73:21" pos:end="73:49"><name pos:start="73:21" pos:end="73:39"><name pos:start="73:21" pos:end="73:23">env</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:28">spr</name><index pos:start="73:29" pos:end="73:39">[<expr pos:start="73:30" pos:end="73:38"><name pos:start="73:30" pos:end="73:38">SPR_IMISS</name></expr>]</index></name> <operator pos:start="73:41" pos:end="73:41">=</operator> <name pos:start="73:43" pos:end="73:49">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="75:21" pos:end="75:63"><expr pos:start="75:21" pos:end="75:62"><name pos:start="75:21" pos:end="75:38"><name pos:start="75:21" pos:end="75:23">env</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:28">spr</name><index pos:start="75:29" pos:end="75:38">[<expr pos:start="75:30" pos:end="75:37"><name pos:start="75:30" pos:end="75:37">SPR_ICMP</name></expr>]</index></name> <operator pos:start="75:40" pos:end="75:40">=</operator> <literal type="number" pos:start="75:42" pos:end="75:51">0x80000000</literal> <operator pos:start="75:53" pos:end="75:53">|</operator> <name pos:start="75:55" pos:end="75:62"><name pos:start="75:55" pos:end="75:57">ctx</name><operator pos:start="75:58" pos:end="75:58">.</operator><name pos:start="75:59" pos:end="75:62">ptem</name></name></expr>;</expr_stmt>

                    <goto pos:start="77:21" pos:end="77:34">goto <name pos:start="77:26" pos:end="77:33">tlb_miss</name>;</goto>

                <case pos:start="79:17" pos:end="79:43">case <expr pos:start="79:22" pos:end="79:42"><name pos:start="79:22" pos:end="79:42">POWERPC_MMU_SOFT_74xx</name></expr>:</case>

                    <expr_stmt pos:start="81:21" pos:end="81:62"><expr pos:start="81:21" pos:end="81:61"><name pos:start="81:21" pos:end="81:40"><name pos:start="81:21" pos:end="81:23">env</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:40">exception_index</name></name> <operator pos:start="81:42" pos:end="81:42">=</operator> <name pos:start="81:44" pos:end="81:61">POWERPC_EXCP_IFTLB</name></expr>;</expr_stmt>

                    <goto pos:start="83:21" pos:end="83:39">goto <name pos:start="83:26" pos:end="83:38">tlb_miss_74xx</name>;</goto>

                <case pos:start="85:17" pos:end="85:42">case <expr pos:start="85:22" pos:end="85:41"><name pos:start="85:22" pos:end="85:41">POWERPC_MMU_SOFT_4xx</name></expr>:</case>

                <case pos:start="87:17" pos:end="87:44">case <expr pos:start="87:22" pos:end="87:43"><name pos:start="87:22" pos:end="87:43">POWERPC_MMU_SOFT_4xx_Z</name></expr>:</case>

                    <expr_stmt pos:start="89:21" pos:end="89:61"><expr pos:start="89:21" pos:end="89:60"><name pos:start="89:21" pos:end="89:40"><name pos:start="89:21" pos:end="89:23">env</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:40">exception_index</name></name> <operator pos:start="89:42" pos:end="89:42">=</operator> <name pos:start="89:44" pos:end="89:60">POWERPC_EXCP_ITLB</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:40"><expr pos:start="91:21" pos:end="91:39"><name pos:start="91:21" pos:end="91:35"><name pos:start="91:21" pos:end="91:23">env</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:35">error_code</name></name> <operator pos:start="91:37" pos:end="91:37">=</operator> <literal type="number" pos:start="91:39" pos:end="91:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:53"><expr pos:start="93:21" pos:end="93:52"><name pos:start="93:21" pos:end="93:42"><name pos:start="93:21" pos:end="93:23">env</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:28">spr</name><index pos:start="93:29" pos:end="93:42">[<expr pos:start="93:30" pos:end="93:41"><name pos:start="93:30" pos:end="93:41">SPR_40x_DEAR</name></expr>]</index></name> <operator pos:start="93:44" pos:end="93:44">=</operator> <name pos:start="93:46" pos:end="93:52">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:55"><expr pos:start="95:21" pos:end="95:54"><name pos:start="95:21" pos:end="95:41"><name pos:start="95:21" pos:end="95:23">env</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:28">spr</name><index pos:start="95:29" pos:end="95:41">[<expr pos:start="95:30" pos:end="95:40"><name pos:start="95:30" pos:end="95:40">SPR_40x_ESR</name></expr>]</index></name> <operator pos:start="95:43" pos:end="95:43">=</operator> <literal type="number" pos:start="95:45" pos:end="95:54">0x00000000</literal></expr>;</expr_stmt>

                    <break pos:start="97:21" pos:end="97:26">break;</break>

                <case pos:start="99:17" pos:end="102:0">case <expr pos:start="99:22" pos:end="99:36"><name pos:start="99:22" pos:end="99:36">POWERPC_MMU_32B</name></expr>:</case>

<cpp:if pos:start="101:1" pos:end="101:25">#<cpp:directive pos:start="101:2" pos:end="101:3">if</cpp:directive> <expr pos:start="101:5" pos:end="101:25"><call pos:start="101:5" pos:end="101:25"><name pos:start="101:5" pos:end="101:11">defined</name><argument_list pos:start="101:12" pos:end="101:25">(<argument pos:start="101:13" pos:end="101:24"><expr pos:start="101:13" pos:end="101:24"><name pos:start="101:13" pos:end="101:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <case pos:start="103:17" pos:end="106:0">case <expr pos:start="103:22" pos:end="103:36"><name pos:start="103:22" pos:end="103:36">POWERPC_MMU_64B</name></expr>:</case>

<cpp:endif pos:start="105:1" pos:end="105:6">#<cpp:directive pos:start="105:2" pos:end="105:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="107:21" pos:end="107:60"><expr pos:start="107:21" pos:end="107:59"><name pos:start="107:21" pos:end="107:40"><name pos:start="107:21" pos:end="107:23">env</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:40">exception_index</name></name> <operator pos:start="107:42" pos:end="107:42">=</operator> <name pos:start="107:44" pos:end="107:59">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:49"><expr pos:start="109:21" pos:end="109:48"><name pos:start="109:21" pos:end="109:35"><name pos:start="109:21" pos:end="109:23">env</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:35">error_code</name></name> <operator pos:start="109:37" pos:end="109:37">=</operator> <literal type="number" pos:start="109:39" pos:end="109:48">0x40000000</literal></expr>;</expr_stmt>

                    <break pos:start="111:21" pos:end="111:26">break;</break>

                <case pos:start="113:17" pos:end="113:39">case <expr pos:start="113:22" pos:end="113:38"><name pos:start="113:22" pos:end="113:38">POWERPC_MMU_BOOKE</name></expr>:</case>

                    <comment type="block" pos:start="115:21" pos:end="115:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="117:21" pos:end="117:66"><expr pos:start="117:21" pos:end="117:65"><call pos:start="117:21" pos:end="117:65"><name pos:start="117:21" pos:end="117:29">cpu_abort</name><argument_list pos:start="117:30" pos:end="117:65">(<argument pos:start="117:31" pos:end="117:33"><expr pos:start="117:31" pos:end="117:33"><name pos:start="117:31" pos:end="117:33">env</name></expr></argument>, <argument pos:start="117:36" pos:end="117:64"><expr pos:start="117:36" pos:end="117:64"><literal type="string" pos:start="117:36" pos:end="117:64">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="119:21" pos:end="119:30">return <expr pos:start="119:28" pos:end="119:29"><operator pos:start="119:28" pos:end="119:28">-</operator><literal type="number" pos:start="119:29" pos:end="119:29">1</literal></expr>;</return>

                <case pos:start="121:17" pos:end="121:43">case <expr pos:start="121:22" pos:end="121:42"><name pos:start="121:22" pos:end="121:42">POWERPC_MMU_BOOKE_FSL</name></expr>:</case>

                    <comment type="block" pos:start="123:21" pos:end="123:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="125:21" pos:end="125:66"><expr pos:start="125:21" pos:end="125:65"><call pos:start="125:21" pos:end="125:65"><name pos:start="125:21" pos:end="125:29">cpu_abort</name><argument_list pos:start="125:30" pos:end="125:65">(<argument pos:start="125:31" pos:end="125:33"><expr pos:start="125:31" pos:end="125:33"><name pos:start="125:31" pos:end="125:33">env</name></expr></argument>, <argument pos:start="125:36" pos:end="125:64"><expr pos:start="125:36" pos:end="125:64"><literal type="string" pos:start="125:36" pos:end="125:64">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="127:21" pos:end="127:30">return <expr pos:start="127:28" pos:end="127:29"><operator pos:start="127:28" pos:end="127:28">-</operator><literal type="number" pos:start="127:29" pos:end="127:29">1</literal></expr>;</return>

                <case pos:start="129:17" pos:end="129:42">case <expr pos:start="129:22" pos:end="129:41"><name pos:start="129:22" pos:end="129:41">POWERPC_MMU_REAL_4xx</name></expr>:</case>

                    <expr_stmt pos:start="131:21" pos:end="133:46"><expr pos:start="131:21" pos:end="133:45"><call pos:start="131:21" pos:end="133:45"><name pos:start="131:21" pos:end="131:29">cpu_abort</name><argument_list pos:start="131:30" pos:end="133:45">(<argument pos:start="131:31" pos:end="131:33"><expr pos:start="131:31" pos:end="131:33"><name pos:start="131:31" pos:end="131:33">env</name></expr></argument>, <argument pos:start="131:36" pos:end="133:44"><expr pos:start="131:36" pos:end="133:44"><literal type="string" pos:start="131:36" pos:end="131:76">"PowerPC 401 should never raise any MMU "</literal>

                              <literal type="string" pos:start="133:31" pos:end="133:44">"exceptions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="135:21" pos:end="135:30">return <expr pos:start="135:28" pos:end="135:29"><operator pos:start="135:28" pos:end="135:28">-</operator><literal type="number" pos:start="135:29" pos:end="135:29">1</literal></expr>;</return>

                <default pos:start="137:17" pos:end="137:24">default:</default>

                    <expr_stmt pos:start="139:21" pos:end="139:69"><expr pos:start="139:21" pos:end="139:68"><call pos:start="139:21" pos:end="139:68"><name pos:start="139:21" pos:end="139:29">cpu_abort</name><argument_list pos:start="139:30" pos:end="139:68">(<argument pos:start="139:31" pos:end="139:33"><expr pos:start="139:31" pos:end="139:33"><name pos:start="139:31" pos:end="139:33">env</name></expr></argument>, <argument pos:start="139:36" pos:end="139:67"><expr pos:start="139:36" pos:end="139:67"><literal type="string" pos:start="139:36" pos:end="139:67">"Unknown or invalid MMU model\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="141:21" pos:end="141:30">return <expr pos:start="141:28" pos:end="141:29"><operator pos:start="141:28" pos:end="141:28">-</operator><literal type="number" pos:start="141:29" pos:end="141:29">1</literal></expr>;</return>

                </block_content>}</block></switch>

                <break pos:start="145:17" pos:end="145:22">break;</break>

            <case pos:start="147:13" pos:end="147:20">case <expr pos:start="147:18" pos:end="147:19"><operator pos:start="147:18" pos:end="147:18">-</operator><literal type="number" pos:start="147:19" pos:end="147:19">2</literal></expr>:</case>

                <comment type="block" pos:start="149:17" pos:end="149:45">/* Access rights violation */</comment>

                <expr_stmt pos:start="151:17" pos:end="151:56"><expr pos:start="151:17" pos:end="151:55"><name pos:start="151:17" pos:end="151:36"><name pos:start="151:17" pos:end="151:19">env</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:36">exception_index</name></name> <operator pos:start="151:38" pos:end="151:38">=</operator> <name pos:start="151:40" pos:end="151:55">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:45"><expr pos:start="153:17" pos:end="153:44"><name pos:start="153:17" pos:end="153:31"><name pos:start="153:17" pos:end="153:19">env</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:31">error_code</name></name> <operator pos:start="153:33" pos:end="153:33">=</operator> <literal type="number" pos:start="153:35" pos:end="153:44">0x08000000</literal></expr>;</expr_stmt>

                <break pos:start="155:17" pos:end="155:22">break;</break>

            <case pos:start="157:13" pos:end="157:20">case <expr pos:start="157:18" pos:end="157:19"><operator pos:start="157:18" pos:end="157:18">-</operator><literal type="number" pos:start="157:19" pos:end="157:19">3</literal></expr>:</case>

                <comment type="block" pos:start="159:17" pos:end="159:53">/* No execute protection violation */</comment>

                <expr_stmt pos:start="161:17" pos:end="161:56"><expr pos:start="161:17" pos:end="161:55"><name pos:start="161:17" pos:end="161:36"><name pos:start="161:17" pos:end="161:19">env</name><operator pos:start="161:20" pos:end="161:21">-&gt;</operator><name pos:start="161:22" pos:end="161:36">exception_index</name></name> <operator pos:start="161:38" pos:end="161:38">=</operator> <name pos:start="161:40" pos:end="161:55">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:45"><expr pos:start="163:17" pos:end="163:44"><name pos:start="163:17" pos:end="163:31"><name pos:start="163:17" pos:end="163:19">env</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:31">error_code</name></name> <operator pos:start="163:33" pos:end="163:33">=</operator> <literal type="number" pos:start="163:35" pos:end="163:44">0x10000000</literal></expr>;</expr_stmt>

                <break pos:start="165:17" pos:end="165:22">break;</break>

            <case pos:start="167:13" pos:end="167:20">case <expr pos:start="167:18" pos:end="167:19"><operator pos:start="167:18" pos:end="167:18">-</operator><literal type="number" pos:start="167:19" pos:end="167:19">4</literal></expr>:</case>

                <comment type="block" pos:start="169:17" pos:end="169:44">/* Direct store exception */</comment>

                <comment type="block" pos:start="171:17" pos:end="171:68">/* No code fetch is allowed in direct-store areas */</comment>

                <expr_stmt pos:start="173:17" pos:end="173:56"><expr pos:start="173:17" pos:end="173:55"><name pos:start="173:17" pos:end="173:36"><name pos:start="173:17" pos:end="173:19">env</name><operator pos:start="173:20" pos:end="173:21">-&gt;</operator><name pos:start="173:22" pos:end="173:36">exception_index</name></name> <operator pos:start="173:38" pos:end="173:38">=</operator> <name pos:start="173:40" pos:end="173:55">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:45"><expr pos:start="175:17" pos:end="175:44"><name pos:start="175:17" pos:end="175:31"><name pos:start="175:17" pos:end="175:19">env</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:31">error_code</name></name> <operator pos:start="175:33" pos:end="175:33">=</operator> <literal type="number" pos:start="175:35" pos:end="175:44">0x10000000</literal></expr>;</expr_stmt>

                <break pos:start="177:17" pos:end="180:0">break;</break>

<cpp:if pos:start="179:1" pos:end="179:25">#<cpp:directive pos:start="179:2" pos:end="179:3">if</cpp:directive> <expr pos:start="179:5" pos:end="179:25"><call pos:start="179:5" pos:end="179:25"><name pos:start="179:5" pos:end="179:11">defined</name><argument_list pos:start="179:12" pos:end="179:25">(<argument pos:start="179:13" pos:end="179:24"><expr pos:start="179:13" pos:end="179:24"><name pos:start="179:13" pos:end="179:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <case pos:start="181:13" pos:end="181:20">case <expr pos:start="181:18" pos:end="181:19"><operator pos:start="181:18" pos:end="181:18">-</operator><literal type="number" pos:start="181:19" pos:end="181:19">5</literal></expr>:</case>

                <comment type="block" pos:start="183:17" pos:end="183:47">/* No match in segment table */</comment>

                <expr_stmt pos:start="185:17" pos:end="185:57"><expr pos:start="185:17" pos:end="185:56"><name pos:start="185:17" pos:end="185:36"><name pos:start="185:17" pos:end="185:19">env</name><operator pos:start="185:20" pos:end="185:21">-&gt;</operator><name pos:start="185:22" pos:end="185:36">exception_index</name></name> <operator pos:start="185:38" pos:end="185:38">=</operator> <name pos:start="185:40" pos:end="185:56">POWERPC_EXCP_ISEG</name></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:36"><expr pos:start="187:17" pos:end="187:35"><name pos:start="187:17" pos:end="187:31"><name pos:start="187:17" pos:end="187:19">env</name><operator pos:start="187:20" pos:end="187:21">-&gt;</operator><name pos:start="187:22" pos:end="187:31">error_code</name></name> <operator pos:start="187:33" pos:end="187:33">=</operator> <literal type="number" pos:start="187:35" pos:end="187:35">0</literal></expr>;</expr_stmt>

                <break pos:start="189:17" pos:end="192:0">break;</break>

<cpp:endif pos:start="191:1" pos:end="191:6">#<cpp:directive pos:start="191:2" pos:end="191:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="195:11" pos:end="462:0">else <block pos:start="195:16" pos:end="462:0">{<block_content pos:start="197:13" pos:end="451:13">

            <switch pos:start="197:13" pos:end="451:13">switch <condition pos:start="197:20" pos:end="197:24">(<expr pos:start="197:21" pos:end="197:23"><name pos:start="197:21" pos:end="197:23">ret</name></expr>)</condition> <block pos:start="197:26" pos:end="451:13">{<block_content pos:start="199:13" pos:end="450:0">

            <case pos:start="199:13" pos:end="199:20">case <expr pos:start="199:18" pos:end="199:19"><operator pos:start="199:18" pos:end="199:18">-</operator><literal type="number" pos:start="199:19" pos:end="199:19">1</literal></expr>:</case>

                <comment type="block" pos:start="201:17" pos:end="201:54">/* No matches in page tables or TLB */</comment>

                <switch pos:start="203:17" pos:end="335:17">switch <condition pos:start="203:24" pos:end="203:39">(<expr pos:start="203:25" pos:end="203:38"><name pos:start="203:25" pos:end="203:38"><name pos:start="203:25" pos:end="203:27">env</name><operator pos:start="203:28" pos:end="203:29">-&gt;</operator><name pos:start="203:30" pos:end="203:38">mmu_model</name></name></expr>)</condition> <block pos:start="203:41" pos:end="335:17">{<block_content pos:start="205:17" pos:end="333:30">

                <case pos:start="205:17" pos:end="205:42">case <expr pos:start="205:22" pos:end="205:41"><name pos:start="205:22" pos:end="205:41">POWERPC_MMU_SOFT_6xx</name></expr>:</case>

                    <if_stmt pos:start="207:21" pos:end="219:21"><if pos:start="207:21" pos:end="213:21">if <condition pos:start="207:24" pos:end="207:32">(<expr pos:start="207:25" pos:end="207:31"><name pos:start="207:25" pos:end="207:26">rw</name> <operator pos:start="207:28" pos:end="207:29">==</operator> <literal type="number" pos:start="207:31" pos:end="207:31">1</literal></expr>)</condition> <block pos:start="207:34" pos:end="213:21">{<block_content pos:start="209:25" pos:end="211:50">

                        <expr_stmt pos:start="209:25" pos:end="209:66"><expr pos:start="209:25" pos:end="209:65"><name pos:start="209:25" pos:end="209:44"><name pos:start="209:25" pos:end="209:27">env</name><operator pos:start="209:28" pos:end="209:29">-&gt;</operator><name pos:start="209:30" pos:end="209:44">exception_index</name></name> <operator pos:start="209:46" pos:end="209:46">=</operator> <name pos:start="209:48" pos:end="209:65">POWERPC_EXCP_DSTLB</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="211:25" pos:end="211:50"><expr pos:start="211:25" pos:end="211:49"><name pos:start="211:25" pos:end="211:39"><name pos:start="211:25" pos:end="211:27">env</name><operator pos:start="211:28" pos:end="211:29">-&gt;</operator><name pos:start="211:30" pos:end="211:39">error_code</name></name> <operator pos:start="211:41" pos:end="211:41">=</operator> <literal type="number" pos:start="211:43" pos:end="211:43">1</literal> <operator pos:start="211:45" pos:end="211:46">&lt;&lt;</operator> <literal type="number" pos:start="211:48" pos:end="211:49">16</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="213:23" pos:end="219:21">else <block pos:start="213:28" pos:end="219:21">{<block_content pos:start="215:25" pos:end="217:44">

                        <expr_stmt pos:start="215:25" pos:end="215:66"><expr pos:start="215:25" pos:end="215:65"><name pos:start="215:25" pos:end="215:44"><name pos:start="215:25" pos:end="215:27">env</name><operator pos:start="215:28" pos:end="215:29">-&gt;</operator><name pos:start="215:30" pos:end="215:44">exception_index</name></name> <operator pos:start="215:46" pos:end="215:46">=</operator> <name pos:start="215:48" pos:end="215:65">POWERPC_EXCP_DLTLB</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="217:25" pos:end="217:44"><expr pos:start="217:25" pos:end="217:43"><name pos:start="217:25" pos:end="217:39"><name pos:start="217:25" pos:end="217:27">env</name><operator pos:start="217:28" pos:end="217:29">-&gt;</operator><name pos:start="217:30" pos:end="217:39">error_code</name></name> <operator pos:start="217:41" pos:end="217:41">=</operator> <literal type="number" pos:start="217:43" pos:end="217:43">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="221:21" pos:end="221:50"><expr pos:start="221:21" pos:end="221:49"><name pos:start="221:21" pos:end="221:39"><name pos:start="221:21" pos:end="221:23">env</name><operator pos:start="221:24" pos:end="221:25">-&gt;</operator><name pos:start="221:26" pos:end="221:28">spr</name><index pos:start="221:29" pos:end="221:39">[<expr pos:start="221:30" pos:end="221:38"><name pos:start="221:30" pos:end="221:38">SPR_DMISS</name></expr>]</index></name> <operator pos:start="221:41" pos:end="221:41">=</operator> <name pos:start="221:43" pos:end="221:49">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="223:21" pos:end="223:63"><expr pos:start="223:21" pos:end="223:62"><name pos:start="223:21" pos:end="223:38"><name pos:start="223:21" pos:end="223:23">env</name><operator pos:start="223:24" pos:end="223:25">-&gt;</operator><name pos:start="223:26" pos:end="223:28">spr</name><index pos:start="223:29" pos:end="223:38">[<expr pos:start="223:30" pos:end="223:37"><name pos:start="223:30" pos:end="223:37">SPR_DCMP</name></expr>]</index></name> <operator pos:start="223:40" pos:end="223:40">=</operator> <literal type="number" pos:start="223:42" pos:end="223:51">0x80000000</literal> <operator pos:start="223:53" pos:end="223:53">|</operator> <name pos:start="223:55" pos:end="223:62"><name pos:start="223:55" pos:end="223:57">ctx</name><operator pos:start="223:58" pos:end="223:58">.</operator><name pos:start="223:59" pos:end="223:62">ptem</name></name></expr>;</expr_stmt>

                <label pos:start="225:17" pos:end="225:25"><name pos:start="225:17" pos:end="225:24">tlb_miss</name>:</label>

                    <expr_stmt pos:start="227:21" pos:end="227:53"><expr pos:start="227:21" pos:end="227:52"><name pos:start="227:21" pos:end="227:35"><name pos:start="227:21" pos:end="227:23">env</name><operator pos:start="227:24" pos:end="227:25">-&gt;</operator><name pos:start="227:26" pos:end="227:35">error_code</name></name> <operator pos:start="227:37" pos:end="227:38">|=</operator> <name pos:start="227:40" pos:end="227:46"><name pos:start="227:40" pos:end="227:42">ctx</name><operator pos:start="227:43" pos:end="227:43">.</operator><name pos:start="227:44" pos:end="227:46">key</name></name> <operator pos:start="227:48" pos:end="227:49">&lt;&lt;</operator> <literal type="number" pos:start="227:51" pos:end="227:52">19</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="229:21" pos:end="229:57"><expr pos:start="229:21" pos:end="229:56"><name pos:start="229:21" pos:end="229:39"><name pos:start="229:21" pos:end="229:23">env</name><operator pos:start="229:24" pos:end="229:25">-&gt;</operator><name pos:start="229:26" pos:end="229:28">spr</name><index pos:start="229:29" pos:end="229:39">[<expr pos:start="229:30" pos:end="229:38"><name pos:start="229:30" pos:end="229:38">SPR_HASH1</name></expr>]</index></name> <operator pos:start="229:41" pos:end="229:41">=</operator> <name pos:start="229:43" pos:end="229:56"><name pos:start="229:43" pos:end="229:45">ctx</name><operator pos:start="229:46" pos:end="229:46">.</operator><name pos:start="229:47" pos:end="229:53">pg_addr</name><index pos:start="229:54" pos:end="229:56">[<expr pos:start="229:55" pos:end="229:55"><literal type="number" pos:start="229:55" pos:end="229:55">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="231:21" pos:end="231:57"><expr pos:start="231:21" pos:end="231:56"><name pos:start="231:21" pos:end="231:39"><name pos:start="231:21" pos:end="231:23">env</name><operator pos:start="231:24" pos:end="231:25">-&gt;</operator><name pos:start="231:26" pos:end="231:28">spr</name><index pos:start="231:29" pos:end="231:39">[<expr pos:start="231:30" pos:end="231:38"><name pos:start="231:30" pos:end="231:38">SPR_HASH2</name></expr>]</index></name> <operator pos:start="231:41" pos:end="231:41">=</operator> <name pos:start="231:43" pos:end="231:56"><name pos:start="231:43" pos:end="231:45">ctx</name><operator pos:start="231:46" pos:end="231:46">.</operator><name pos:start="231:47" pos:end="231:53">pg_addr</name><index pos:start="231:54" pos:end="231:56">[<expr pos:start="231:55" pos:end="231:55"><literal type="number" pos:start="231:55" pos:end="231:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <break pos:start="233:21" pos:end="233:26">break;</break>

                <case pos:start="235:17" pos:end="235:43">case <expr pos:start="235:22" pos:end="235:42"><name pos:start="235:22" pos:end="235:42">POWERPC_MMU_SOFT_74xx</name></expr>:</case>

                    <if_stmt pos:start="237:21" pos:end="245:21"><if pos:start="237:21" pos:end="241:21">if <condition pos:start="237:24" pos:end="237:32">(<expr pos:start="237:25" pos:end="237:31"><name pos:start="237:25" pos:end="237:26">rw</name> <operator pos:start="237:28" pos:end="237:29">==</operator> <literal type="number" pos:start="237:31" pos:end="237:31">1</literal></expr>)</condition> <block pos:start="237:34" pos:end="241:21">{<block_content pos:start="239:25" pos:end="239:66">

                        <expr_stmt pos:start="239:25" pos:end="239:66"><expr pos:start="239:25" pos:end="239:65"><name pos:start="239:25" pos:end="239:44"><name pos:start="239:25" pos:end="239:27">env</name><operator pos:start="239:28" pos:end="239:29">-&gt;</operator><name pos:start="239:30" pos:end="239:44">exception_index</name></name> <operator pos:start="239:46" pos:end="239:46">=</operator> <name pos:start="239:48" pos:end="239:65">POWERPC_EXCP_DSTLB</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="241:23" pos:end="245:21">else <block pos:start="241:28" pos:end="245:21">{<block_content pos:start="243:25" pos:end="243:66">

                        <expr_stmt pos:start="243:25" pos:end="243:66"><expr pos:start="243:25" pos:end="243:65"><name pos:start="243:25" pos:end="243:44"><name pos:start="243:25" pos:end="243:27">env</name><operator pos:start="243:28" pos:end="243:29">-&gt;</operator><name pos:start="243:30" pos:end="243:44">exception_index</name></name> <operator pos:start="243:46" pos:end="243:46">=</operator> <name pos:start="243:48" pos:end="243:65">POWERPC_EXCP_DLTLB</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                <label pos:start="247:17" pos:end="247:30"><name pos:start="247:17" pos:end="247:29">tlb_miss_74xx</name>:</label>

                    <comment type="block" pos:start="249:21" pos:end="249:49">/* Implement LRU algorithm */</comment>

                    <expr_stmt pos:start="251:21" pos:end="251:52"><expr pos:start="251:21" pos:end="251:51"><name pos:start="251:21" pos:end="251:35"><name pos:start="251:21" pos:end="251:23">env</name><operator pos:start="251:24" pos:end="251:25">-&gt;</operator><name pos:start="251:26" pos:end="251:35">error_code</name></name> <operator pos:start="251:37" pos:end="251:37">=</operator> <name pos:start="251:39" pos:end="251:45"><name pos:start="251:39" pos:end="251:41">ctx</name><operator pos:start="251:42" pos:end="251:42">.</operator><name pos:start="251:43" pos:end="251:45">key</name></name> <operator pos:start="251:47" pos:end="251:48">&lt;&lt;</operator> <literal type="number" pos:start="251:50" pos:end="251:51">19</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="253:21" pos:end="255:67"><expr pos:start="253:21" pos:end="255:66"><name pos:start="253:21" pos:end="253:41"><name pos:start="253:21" pos:end="253:23">env</name><operator pos:start="253:24" pos:end="253:25">-&gt;</operator><name pos:start="253:26" pos:end="253:28">spr</name><index pos:start="253:29" pos:end="253:41">[<expr pos:start="253:30" pos:end="253:40"><name pos:start="253:30" pos:end="253:40">SPR_TLBMISS</name></expr>]</index></name> <operator pos:start="253:43" pos:end="253:43">=</operator> <operator pos:start="253:45" pos:end="253:45">(</operator><name pos:start="253:46" pos:end="253:52">address</name> <operator pos:start="253:54" pos:end="253:54">&amp;</operator> <operator pos:start="253:56" pos:end="253:56">~</operator><operator pos:start="253:57" pos:end="253:57">(</operator><operator pos:start="253:58" pos:end="253:58">(</operator><name pos:start="253:59" pos:end="253:70">target_ulong</name><operator pos:start="253:71" pos:end="253:71">)</operator><literal type="number" pos:start="253:72" pos:end="253:74">0x3</literal><operator pos:start="253:75" pos:end="253:75">)</operator><operator pos:start="253:76" pos:end="253:76">)</operator> <operator pos:start="253:78" pos:end="253:78">|</operator>

                        <operator pos:start="255:25" pos:end="255:25">(</operator><operator pos:start="255:26" pos:end="255:26">(</operator><name pos:start="255:27" pos:end="255:39"><name pos:start="255:27" pos:end="255:29">env</name><operator pos:start="255:30" pos:end="255:31">-&gt;</operator><name pos:start="255:32" pos:end="255:39">last_way</name></name> <operator pos:start="255:41" pos:end="255:41">+</operator> <literal type="number" pos:start="255:43" pos:end="255:43">1</literal><operator pos:start="255:44" pos:end="255:44">)</operator> <operator pos:start="255:46" pos:end="255:46">&amp;</operator> <operator pos:start="255:48" pos:end="255:48">(</operator><name pos:start="255:49" pos:end="255:60"><name pos:start="255:49" pos:end="255:51">env</name><operator pos:start="255:52" pos:end="255:53">-&gt;</operator><name pos:start="255:54" pos:end="255:60">nb_ways</name></name> <operator pos:start="255:62" pos:end="255:62">-</operator> <literal type="number" pos:start="255:64" pos:end="255:64">1</literal><operator pos:start="255:65" pos:end="255:65">)</operator><operator pos:start="255:66" pos:end="255:66">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="257:21" pos:end="257:64"><expr pos:start="257:21" pos:end="257:63"><name pos:start="257:21" pos:end="257:39"><name pos:start="257:21" pos:end="257:23">env</name><operator pos:start="257:24" pos:end="257:25">-&gt;</operator><name pos:start="257:26" pos:end="257:28">spr</name><index pos:start="257:29" pos:end="257:39">[<expr pos:start="257:30" pos:end="257:38"><name pos:start="257:30" pos:end="257:38">SPR_PTEHI</name></expr>]</index></name> <operator pos:start="257:41" pos:end="257:41">=</operator> <literal type="number" pos:start="257:43" pos:end="257:52">0x80000000</literal> <operator pos:start="257:54" pos:end="257:54">|</operator> <name pos:start="257:56" pos:end="257:63"><name pos:start="257:56" pos:end="257:58">ctx</name><operator pos:start="257:59" pos:end="257:59">.</operator><name pos:start="257:60" pos:end="257:63">ptem</name></name></expr>;</expr_stmt>

                    <break pos:start="259:21" pos:end="259:26">break;</break>

                <case pos:start="261:17" pos:end="261:42">case <expr pos:start="261:22" pos:end="261:41"><name pos:start="261:22" pos:end="261:41">POWERPC_MMU_SOFT_4xx</name></expr>:</case>

                <case pos:start="263:17" pos:end="263:44">case <expr pos:start="263:22" pos:end="263:43"><name pos:start="263:22" pos:end="263:43">POWERPC_MMU_SOFT_4xx_Z</name></expr>:</case>

                    <expr_stmt pos:start="265:21" pos:end="265:61"><expr pos:start="265:21" pos:end="265:60"><name pos:start="265:21" pos:end="265:40"><name pos:start="265:21" pos:end="265:23">env</name><operator pos:start="265:24" pos:end="265:25">-&gt;</operator><name pos:start="265:26" pos:end="265:40">exception_index</name></name> <operator pos:start="265:42" pos:end="265:42">=</operator> <name pos:start="265:44" pos:end="265:60">POWERPC_EXCP_DTLB</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="267:21" pos:end="267:40"><expr pos:start="267:21" pos:end="267:39"><name pos:start="267:21" pos:end="267:35"><name pos:start="267:21" pos:end="267:23">env</name><operator pos:start="267:24" pos:end="267:25">-&gt;</operator><name pos:start="267:26" pos:end="267:35">error_code</name></name> <operator pos:start="267:37" pos:end="267:37">=</operator> <literal type="number" pos:start="267:39" pos:end="267:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="269:21" pos:end="269:53"><expr pos:start="269:21" pos:end="269:52"><name pos:start="269:21" pos:end="269:42"><name pos:start="269:21" pos:end="269:23">env</name><operator pos:start="269:24" pos:end="269:25">-&gt;</operator><name pos:start="269:26" pos:end="269:28">spr</name><index pos:start="269:29" pos:end="269:42">[<expr pos:start="269:30" pos:end="269:41"><name pos:start="269:30" pos:end="269:41">SPR_40x_DEAR</name></expr>]</index></name> <operator pos:start="269:44" pos:end="269:44">=</operator> <name pos:start="269:46" pos:end="269:52">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="271:21" pos:end="277:59"><if pos:start="271:21" pos:end="273:59">if <condition pos:start="271:24" pos:end="271:27">(<expr pos:start="271:25" pos:end="271:26"><name pos:start="271:25" pos:end="271:26">rw</name></expr>)</condition><block type="pseudo" pos:start="273:25" pos:end="273:59"><block_content pos:start="273:25" pos:end="273:59">

                        <expr_stmt pos:start="273:25" pos:end="273:59"><expr pos:start="273:25" pos:end="273:58"><name pos:start="273:25" pos:end="273:45"><name pos:start="273:25" pos:end="273:27">env</name><operator pos:start="273:28" pos:end="273:29">-&gt;</operator><name pos:start="273:30" pos:end="273:32">spr</name><index pos:start="273:33" pos:end="273:45">[<expr pos:start="273:34" pos:end="273:44"><name pos:start="273:34" pos:end="273:44">SPR_40x_ESR</name></expr>]</index></name> <operator pos:start="273:47" pos:end="273:47">=</operator> <literal type="number" pos:start="273:49" pos:end="273:58">0x00800000</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="275:21" pos:end="277:59">else<block type="pseudo" pos:start="277:25" pos:end="277:59"><block_content pos:start="277:25" pos:end="277:59">

                        <expr_stmt pos:start="277:25" pos:end="277:59"><expr pos:start="277:25" pos:end="277:58"><name pos:start="277:25" pos:end="277:45"><name pos:start="277:25" pos:end="277:27">env</name><operator pos:start="277:28" pos:end="277:29">-&gt;</operator><name pos:start="277:30" pos:end="277:32">spr</name><index pos:start="277:33" pos:end="277:45">[<expr pos:start="277:34" pos:end="277:44"><name pos:start="277:34" pos:end="277:44">SPR_40x_ESR</name></expr>]</index></name> <operator pos:start="277:47" pos:end="277:47">=</operator> <literal type="number" pos:start="277:49" pos:end="277:58">0x00000000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="279:21" pos:end="279:26">break;</break>

                <case pos:start="281:17" pos:end="284:0">case <expr pos:start="281:22" pos:end="281:36"><name pos:start="281:22" pos:end="281:36">POWERPC_MMU_32B</name></expr>:</case>

<cpp:if pos:start="283:1" pos:end="283:25">#<cpp:directive pos:start="283:2" pos:end="283:3">if</cpp:directive> <expr pos:start="283:5" pos:end="283:25"><call pos:start="283:5" pos:end="283:25"><name pos:start="283:5" pos:end="283:11">defined</name><argument_list pos:start="283:12" pos:end="283:25">(<argument pos:start="283:13" pos:end="283:24"><expr pos:start="283:13" pos:end="283:24"><name pos:start="283:13" pos:end="283:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <case pos:start="285:17" pos:end="288:0">case <expr pos:start="285:22" pos:end="285:36"><name pos:start="285:22" pos:end="285:36">POWERPC_MMU_64B</name></expr>:</case>

<cpp:endif pos:start="287:1" pos:end="287:6">#<cpp:directive pos:start="287:2" pos:end="287:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="289:21" pos:end="289:60"><expr pos:start="289:21" pos:end="289:59"><name pos:start="289:21" pos:end="289:40"><name pos:start="289:21" pos:end="289:23">env</name><operator pos:start="289:24" pos:end="289:25">-&gt;</operator><name pos:start="289:26" pos:end="289:40">exception_index</name></name> <operator pos:start="289:42" pos:end="289:42">=</operator> <name pos:start="289:44" pos:end="289:59">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="291:21" pos:end="291:40"><expr pos:start="291:21" pos:end="291:39"><name pos:start="291:21" pos:end="291:35"><name pos:start="291:21" pos:end="291:23">env</name><operator pos:start="291:24" pos:end="291:25">-&gt;</operator><name pos:start="291:26" pos:end="291:35">error_code</name></name> <operator pos:start="291:37" pos:end="291:37">=</operator> <literal type="number" pos:start="291:39" pos:end="291:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="293:21" pos:end="293:48"><expr pos:start="293:21" pos:end="293:47"><name pos:start="293:21" pos:end="293:37"><name pos:start="293:21" pos:end="293:23">env</name><operator pos:start="293:24" pos:end="293:25">-&gt;</operator><name pos:start="293:26" pos:end="293:28">spr</name><index pos:start="293:29" pos:end="293:37">[<expr pos:start="293:30" pos:end="293:36"><name pos:start="293:30" pos:end="293:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="293:39" pos:end="293:39">=</operator> <name pos:start="293:41" pos:end="293:47">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="295:21" pos:end="301:57"><if pos:start="295:21" pos:end="297:57">if <condition pos:start="295:24" pos:end="295:32">(<expr pos:start="295:25" pos:end="295:31"><name pos:start="295:25" pos:end="295:26">rw</name> <operator pos:start="295:28" pos:end="295:29">==</operator> <literal type="number" pos:start="295:31" pos:end="295:31">1</literal></expr>)</condition><block type="pseudo" pos:start="297:25" pos:end="297:57"><block_content pos:start="297:25" pos:end="297:57">

                        <expr_stmt pos:start="297:25" pos:end="297:57"><expr pos:start="297:25" pos:end="297:56"><name pos:start="297:25" pos:end="297:43"><name pos:start="297:25" pos:end="297:27">env</name><operator pos:start="297:28" pos:end="297:29">-&gt;</operator><name pos:start="297:30" pos:end="297:32">spr</name><index pos:start="297:33" pos:end="297:43">[<expr pos:start="297:34" pos:end="297:42"><name pos:start="297:34" pos:end="297:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="297:45" pos:end="297:45">=</operator> <literal type="number" pos:start="297:47" pos:end="297:56">0x42000000</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="299:21" pos:end="301:57">else<block type="pseudo" pos:start="301:25" pos:end="301:57"><block_content pos:start="301:25" pos:end="301:57">

                        <expr_stmt pos:start="301:25" pos:end="301:57"><expr pos:start="301:25" pos:end="301:56"><name pos:start="301:25" pos:end="301:43"><name pos:start="301:25" pos:end="301:27">env</name><operator pos:start="301:28" pos:end="301:29">-&gt;</operator><name pos:start="301:30" pos:end="301:32">spr</name><index pos:start="301:33" pos:end="301:43">[<expr pos:start="301:34" pos:end="301:42"><name pos:start="301:34" pos:end="301:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="301:45" pos:end="301:45">=</operator> <literal type="number" pos:start="301:47" pos:end="301:56">0x40000000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="303:21" pos:end="303:26">break;</break>

                <case pos:start="305:17" pos:end="305:39">case <expr pos:start="305:22" pos:end="305:38"><name pos:start="305:22" pos:end="305:38">POWERPC_MMU_BOOKE</name></expr>:</case>

                    <comment type="block" pos:start="307:21" pos:end="307:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="309:21" pos:end="309:66"><expr pos:start="309:21" pos:end="309:65"><call pos:start="309:21" pos:end="309:65"><name pos:start="309:21" pos:end="309:29">cpu_abort</name><argument_list pos:start="309:30" pos:end="309:65">(<argument pos:start="309:31" pos:end="309:33"><expr pos:start="309:31" pos:end="309:33"><name pos:start="309:31" pos:end="309:33">env</name></expr></argument>, <argument pos:start="309:36" pos:end="309:64"><expr pos:start="309:36" pos:end="309:64"><literal type="string" pos:start="309:36" pos:end="309:64">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="311:21" pos:end="311:30">return <expr pos:start="311:28" pos:end="311:29"><operator pos:start="311:28" pos:end="311:28">-</operator><literal type="number" pos:start="311:29" pos:end="311:29">1</literal></expr>;</return>

                <case pos:start="313:17" pos:end="313:43">case <expr pos:start="313:22" pos:end="313:42"><name pos:start="313:22" pos:end="313:42">POWERPC_MMU_BOOKE_FSL</name></expr>:</case>

                    <comment type="block" pos:start="315:21" pos:end="315:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="317:21" pos:end="317:66"><expr pos:start="317:21" pos:end="317:65"><call pos:start="317:21" pos:end="317:65"><name pos:start="317:21" pos:end="317:29">cpu_abort</name><argument_list pos:start="317:30" pos:end="317:65">(<argument pos:start="317:31" pos:end="317:33"><expr pos:start="317:31" pos:end="317:33"><name pos:start="317:31" pos:end="317:33">env</name></expr></argument>, <argument pos:start="317:36" pos:end="317:64"><expr pos:start="317:36" pos:end="317:64"><literal type="string" pos:start="317:36" pos:end="317:64">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="319:21" pos:end="319:30">return <expr pos:start="319:28" pos:end="319:29"><operator pos:start="319:28" pos:end="319:28">-</operator><literal type="number" pos:start="319:29" pos:end="319:29">1</literal></expr>;</return>

                <case pos:start="321:17" pos:end="321:42">case <expr pos:start="321:22" pos:end="321:41"><name pos:start="321:22" pos:end="321:41">POWERPC_MMU_REAL_4xx</name></expr>:</case>

                    <expr_stmt pos:start="323:21" pos:end="325:46"><expr pos:start="323:21" pos:end="325:45"><call pos:start="323:21" pos:end="325:45"><name pos:start="323:21" pos:end="323:29">cpu_abort</name><argument_list pos:start="323:30" pos:end="325:45">(<argument pos:start="323:31" pos:end="323:33"><expr pos:start="323:31" pos:end="323:33"><name pos:start="323:31" pos:end="323:33">env</name></expr></argument>, <argument pos:start="323:36" pos:end="325:44"><expr pos:start="323:36" pos:end="325:44"><literal type="string" pos:start="323:36" pos:end="323:76">"PowerPC 401 should never raise any MMU "</literal>

                              <literal type="string" pos:start="325:31" pos:end="325:44">"exceptions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="327:21" pos:end="327:30">return <expr pos:start="327:28" pos:end="327:29"><operator pos:start="327:28" pos:end="327:28">-</operator><literal type="number" pos:start="327:29" pos:end="327:29">1</literal></expr>;</return>

                <default pos:start="329:17" pos:end="329:24">default:</default>

                    <expr_stmt pos:start="331:21" pos:end="331:69"><expr pos:start="331:21" pos:end="331:68"><call pos:start="331:21" pos:end="331:68"><name pos:start="331:21" pos:end="331:29">cpu_abort</name><argument_list pos:start="331:30" pos:end="331:68">(<argument pos:start="331:31" pos:end="331:33"><expr pos:start="331:31" pos:end="331:33"><name pos:start="331:31" pos:end="331:33">env</name></expr></argument>, <argument pos:start="331:36" pos:end="331:67"><expr pos:start="331:36" pos:end="331:67"><literal type="string" pos:start="331:36" pos:end="331:67">"Unknown or invalid MMU model\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="333:21" pos:end="333:30">return <expr pos:start="333:28" pos:end="333:29"><operator pos:start="333:28" pos:end="333:28">-</operator><literal type="number" pos:start="333:29" pos:end="333:29">1</literal></expr>;</return>

                </block_content>}</block></switch>

                <break pos:start="337:17" pos:end="337:22">break;</break>

            <case pos:start="339:13" pos:end="339:20">case <expr pos:start="339:18" pos:end="339:19"><operator pos:start="339:18" pos:end="339:18">-</operator><literal type="number" pos:start="339:19" pos:end="339:19">2</literal></expr>:</case>

                <comment type="block" pos:start="341:17" pos:end="341:45">/* Access rights violation */</comment>

                <expr_stmt pos:start="343:17" pos:end="343:56"><expr pos:start="343:17" pos:end="343:55"><name pos:start="343:17" pos:end="343:36"><name pos:start="343:17" pos:end="343:19">env</name><operator pos:start="343:20" pos:end="343:21">-&gt;</operator><name pos:start="343:22" pos:end="343:36">exception_index</name></name> <operator pos:start="343:38" pos:end="343:38">=</operator> <name pos:start="343:40" pos:end="343:55">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="345:17" pos:end="345:36"><expr pos:start="345:17" pos:end="345:35"><name pos:start="345:17" pos:end="345:31"><name pos:start="345:17" pos:end="345:19">env</name><operator pos:start="345:20" pos:end="345:21">-&gt;</operator><name pos:start="345:22" pos:end="345:31">error_code</name></name> <operator pos:start="345:33" pos:end="345:33">=</operator> <literal type="number" pos:start="345:35" pos:end="345:35">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="347:17" pos:end="347:44"><expr pos:start="347:17" pos:end="347:43"><name pos:start="347:17" pos:end="347:33"><name pos:start="347:17" pos:end="347:19">env</name><operator pos:start="347:20" pos:end="347:21">-&gt;</operator><name pos:start="347:22" pos:end="347:24">spr</name><index pos:start="347:25" pos:end="347:33">[<expr pos:start="347:26" pos:end="347:32"><name pos:start="347:26" pos:end="347:32">SPR_DAR</name></expr>]</index></name> <operator pos:start="347:35" pos:end="347:35">=</operator> <name pos:start="347:37" pos:end="347:43">address</name></expr>;</expr_stmt>

                <if_stmt pos:start="349:17" pos:end="355:53"><if pos:start="349:17" pos:end="351:53">if <condition pos:start="349:20" pos:end="349:28">(<expr pos:start="349:21" pos:end="349:27"><name pos:start="349:21" pos:end="349:22">rw</name> <operator pos:start="349:24" pos:end="349:25">==</operator> <literal type="number" pos:start="349:27" pos:end="349:27">1</literal></expr>)</condition><block type="pseudo" pos:start="351:21" pos:end="351:53"><block_content pos:start="351:21" pos:end="351:53">

                    <expr_stmt pos:start="351:21" pos:end="351:53"><expr pos:start="351:21" pos:end="351:52"><name pos:start="351:21" pos:end="351:39"><name pos:start="351:21" pos:end="351:23">env</name><operator pos:start="351:24" pos:end="351:25">-&gt;</operator><name pos:start="351:26" pos:end="351:28">spr</name><index pos:start="351:29" pos:end="351:39">[<expr pos:start="351:30" pos:end="351:38"><name pos:start="351:30" pos:end="351:38">SPR_DSISR</name></expr>]</index></name> <operator pos:start="351:41" pos:end="351:41">=</operator> <literal type="number" pos:start="351:43" pos:end="351:52">0x0A000000</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="353:17" pos:end="355:53">else<block type="pseudo" pos:start="355:21" pos:end="355:53"><block_content pos:start="355:21" pos:end="355:53">

                    <expr_stmt pos:start="355:21" pos:end="355:53"><expr pos:start="355:21" pos:end="355:52"><name pos:start="355:21" pos:end="355:39"><name pos:start="355:21" pos:end="355:23">env</name><operator pos:start="355:24" pos:end="355:25">-&gt;</operator><name pos:start="355:26" pos:end="355:28">spr</name><index pos:start="355:29" pos:end="355:39">[<expr pos:start="355:30" pos:end="355:38"><name pos:start="355:30" pos:end="355:38">SPR_DSISR</name></expr>]</index></name> <operator pos:start="355:41" pos:end="355:41">=</operator> <literal type="number" pos:start="355:43" pos:end="355:52">0x08000000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="357:17" pos:end="357:22">break;</break>

            <case pos:start="359:13" pos:end="359:20">case <expr pos:start="359:18" pos:end="359:19"><operator pos:start="359:18" pos:end="359:18">-</operator><literal type="number" pos:start="359:19" pos:end="359:19">4</literal></expr>:</case>

                <comment type="block" pos:start="361:17" pos:end="361:44">/* Direct store exception */</comment>

                <switch pos:start="363:17" pos:end="431:17">switch <condition pos:start="363:24" pos:end="363:36">(<expr pos:start="363:25" pos:end="363:35"><name pos:start="363:25" pos:end="363:35">access_type</name></expr>)</condition> <block pos:start="363:38" pos:end="431:17">{<block_content pos:start="365:17" pos:end="429:26">

                <case pos:start="365:17" pos:end="365:34">case <expr pos:start="365:22" pos:end="365:33"><name pos:start="365:22" pos:end="365:33">ACCESS_FLOAT</name></expr>:</case>

                    <comment type="block" pos:start="367:21" pos:end="367:51">/* Floating point load/store */</comment>

                    <expr_stmt pos:start="369:21" pos:end="369:62"><expr pos:start="369:21" pos:end="369:61"><name pos:start="369:21" pos:end="369:40"><name pos:start="369:21" pos:end="369:23">env</name><operator pos:start="369:24" pos:end="369:25">-&gt;</operator><name pos:start="369:26" pos:end="369:40">exception_index</name></name> <operator pos:start="369:42" pos:end="369:42">=</operator> <name pos:start="369:44" pos:end="369:61">POWERPC_EXCP_ALIGN</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="371:21" pos:end="371:60"><expr pos:start="371:21" pos:end="371:59"><name pos:start="371:21" pos:end="371:35"><name pos:start="371:21" pos:end="371:23">env</name><operator pos:start="371:24" pos:end="371:25">-&gt;</operator><name pos:start="371:26" pos:end="371:35">error_code</name></name> <operator pos:start="371:37" pos:end="371:37">=</operator> <name pos:start="371:39" pos:end="371:59">POWERPC_EXCP_ALIGN_FP</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="373:21" pos:end="373:48"><expr pos:start="373:21" pos:end="373:47"><name pos:start="373:21" pos:end="373:37"><name pos:start="373:21" pos:end="373:23">env</name><operator pos:start="373:24" pos:end="373:25">-&gt;</operator><name pos:start="373:26" pos:end="373:28">spr</name><index pos:start="373:29" pos:end="373:37">[<expr pos:start="373:30" pos:end="373:36"><name pos:start="373:30" pos:end="373:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="373:39" pos:end="373:39">=</operator> <name pos:start="373:41" pos:end="373:47">address</name></expr>;</expr_stmt>

                    <break pos:start="375:21" pos:end="375:26">break;</break>

                <case pos:start="377:17" pos:end="377:32">case <expr pos:start="377:22" pos:end="377:31"><name pos:start="377:22" pos:end="377:31">ACCESS_RES</name></expr>:</case>

                    <comment type="block" pos:start="379:21" pos:end="379:48">/* lwarx, ldarx or stwcx. */</comment>

                    <expr_stmt pos:start="381:21" pos:end="381:60"><expr pos:start="381:21" pos:end="381:59"><name pos:start="381:21" pos:end="381:40"><name pos:start="381:21" pos:end="381:23">env</name><operator pos:start="381:24" pos:end="381:25">-&gt;</operator><name pos:start="381:26" pos:end="381:40">exception_index</name></name> <operator pos:start="381:42" pos:end="381:42">=</operator> <name pos:start="381:44" pos:end="381:59">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="383:21" pos:end="383:40"><expr pos:start="383:21" pos:end="383:39"><name pos:start="383:21" pos:end="383:35"><name pos:start="383:21" pos:end="383:23">env</name><operator pos:start="383:24" pos:end="383:25">-&gt;</operator><name pos:start="383:26" pos:end="383:35">error_code</name></name> <operator pos:start="383:37" pos:end="383:37">=</operator> <literal type="number" pos:start="383:39" pos:end="383:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="385:21" pos:end="385:48"><expr pos:start="385:21" pos:end="385:47"><name pos:start="385:21" pos:end="385:37"><name pos:start="385:21" pos:end="385:23">env</name><operator pos:start="385:24" pos:end="385:25">-&gt;</operator><name pos:start="385:26" pos:end="385:28">spr</name><index pos:start="385:29" pos:end="385:37">[<expr pos:start="385:30" pos:end="385:36"><name pos:start="385:30" pos:end="385:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="385:39" pos:end="385:39">=</operator> <name pos:start="385:41" pos:end="385:47">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="387:21" pos:end="393:57"><if pos:start="387:21" pos:end="389:57">if <condition pos:start="387:24" pos:end="387:32">(<expr pos:start="387:25" pos:end="387:31"><name pos:start="387:25" pos:end="387:26">rw</name> <operator pos:start="387:28" pos:end="387:29">==</operator> <literal type="number" pos:start="387:31" pos:end="387:31">1</literal></expr>)</condition><block type="pseudo" pos:start="389:25" pos:end="389:57"><block_content pos:start="389:25" pos:end="389:57">

                        <expr_stmt pos:start="389:25" pos:end="389:57"><expr pos:start="389:25" pos:end="389:56"><name pos:start="389:25" pos:end="389:43"><name pos:start="389:25" pos:end="389:27">env</name><operator pos:start="389:28" pos:end="389:29">-&gt;</operator><name pos:start="389:30" pos:end="389:32">spr</name><index pos:start="389:33" pos:end="389:43">[<expr pos:start="389:34" pos:end="389:42"><name pos:start="389:34" pos:end="389:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="389:45" pos:end="389:45">=</operator> <literal type="number" pos:start="389:47" pos:end="389:56">0x06000000</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="391:21" pos:end="393:57">else<block type="pseudo" pos:start="393:25" pos:end="393:57"><block_content pos:start="393:25" pos:end="393:57">

                        <expr_stmt pos:start="393:25" pos:end="393:57"><expr pos:start="393:25" pos:end="393:56"><name pos:start="393:25" pos:end="393:43"><name pos:start="393:25" pos:end="393:27">env</name><operator pos:start="393:28" pos:end="393:29">-&gt;</operator><name pos:start="393:30" pos:end="393:32">spr</name><index pos:start="393:33" pos:end="393:43">[<expr pos:start="393:34" pos:end="393:42"><name pos:start="393:34" pos:end="393:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="393:45" pos:end="393:45">=</operator> <literal type="number" pos:start="393:47" pos:end="393:56">0x04000000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="395:21" pos:end="395:26">break;</break>

                <case pos:start="397:17" pos:end="397:32">case <expr pos:start="397:22" pos:end="397:31"><name pos:start="397:22" pos:end="397:31">ACCESS_EXT</name></expr>:</case>

                    <comment type="block" pos:start="399:21" pos:end="399:40">/* eciwx or ecowx */</comment>

                    <expr_stmt pos:start="401:21" pos:end="401:60"><expr pos:start="401:21" pos:end="401:59"><name pos:start="401:21" pos:end="401:40"><name pos:start="401:21" pos:end="401:23">env</name><operator pos:start="401:24" pos:end="401:25">-&gt;</operator><name pos:start="401:26" pos:end="401:40">exception_index</name></name> <operator pos:start="401:42" pos:end="401:42">=</operator> <name pos:start="401:44" pos:end="401:59">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="403:21" pos:end="403:40"><expr pos:start="403:21" pos:end="403:39"><name pos:start="403:21" pos:end="403:35"><name pos:start="403:21" pos:end="403:23">env</name><operator pos:start="403:24" pos:end="403:25">-&gt;</operator><name pos:start="403:26" pos:end="403:35">error_code</name></name> <operator pos:start="403:37" pos:end="403:37">=</operator> <literal type="number" pos:start="403:39" pos:end="403:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="405:21" pos:end="405:48"><expr pos:start="405:21" pos:end="405:47"><name pos:start="405:21" pos:end="405:37"><name pos:start="405:21" pos:end="405:23">env</name><operator pos:start="405:24" pos:end="405:25">-&gt;</operator><name pos:start="405:26" pos:end="405:28">spr</name><index pos:start="405:29" pos:end="405:37">[<expr pos:start="405:30" pos:end="405:36"><name pos:start="405:30" pos:end="405:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="405:39" pos:end="405:39">=</operator> <name pos:start="405:41" pos:end="405:47">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="407:21" pos:end="413:57"><if pos:start="407:21" pos:end="409:57">if <condition pos:start="407:24" pos:end="407:32">(<expr pos:start="407:25" pos:end="407:31"><name pos:start="407:25" pos:end="407:26">rw</name> <operator pos:start="407:28" pos:end="407:29">==</operator> <literal type="number" pos:start="407:31" pos:end="407:31">1</literal></expr>)</condition><block type="pseudo" pos:start="409:25" pos:end="409:57"><block_content pos:start="409:25" pos:end="409:57">

                        <expr_stmt pos:start="409:25" pos:end="409:57"><expr pos:start="409:25" pos:end="409:56"><name pos:start="409:25" pos:end="409:43"><name pos:start="409:25" pos:end="409:27">env</name><operator pos:start="409:28" pos:end="409:29">-&gt;</operator><name pos:start="409:30" pos:end="409:32">spr</name><index pos:start="409:33" pos:end="409:43">[<expr pos:start="409:34" pos:end="409:42"><name pos:start="409:34" pos:end="409:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="409:45" pos:end="409:45">=</operator> <literal type="number" pos:start="409:47" pos:end="409:56">0x06100000</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="411:21" pos:end="413:57">else<block type="pseudo" pos:start="413:25" pos:end="413:57"><block_content pos:start="413:25" pos:end="413:57">

                        <expr_stmt pos:start="413:25" pos:end="413:57"><expr pos:start="413:25" pos:end="413:56"><name pos:start="413:25" pos:end="413:43"><name pos:start="413:25" pos:end="413:27">env</name><operator pos:start="413:28" pos:end="413:29">-&gt;</operator><name pos:start="413:30" pos:end="413:32">spr</name><index pos:start="413:33" pos:end="413:43">[<expr pos:start="413:34" pos:end="413:42"><name pos:start="413:34" pos:end="413:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="413:45" pos:end="413:45">=</operator> <literal type="number" pos:start="413:47" pos:end="413:56">0x04100000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="415:21" pos:end="415:26">break;</break>

                <default pos:start="417:17" pos:end="417:24">default:</default>

                    <expr_stmt pos:start="419:21" pos:end="419:65"><expr pos:start="419:21" pos:end="419:64"><call pos:start="419:21" pos:end="419:64"><name pos:start="419:21" pos:end="419:26">printf</name><argument_list pos:start="419:27" pos:end="419:64">(<argument pos:start="419:28" pos:end="419:58"><expr pos:start="419:28" pos:end="419:58"><literal type="string" pos:start="419:28" pos:end="419:58">"DSI: invalid exception (%d)\n"</literal></expr></argument>, <argument pos:start="419:61" pos:end="419:63"><expr pos:start="419:61" pos:end="419:63"><name pos:start="419:61" pos:end="419:63">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="421:21" pos:end="421:64"><expr pos:start="421:21" pos:end="421:63"><name pos:start="421:21" pos:end="421:40"><name pos:start="421:21" pos:end="421:23">env</name><operator pos:start="421:24" pos:end="421:25">-&gt;</operator><name pos:start="421:26" pos:end="421:40">exception_index</name></name> <operator pos:start="421:42" pos:end="421:42">=</operator> <name pos:start="421:44" pos:end="421:63">POWERPC_EXCP_PROGRAM</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="423:21" pos:end="425:70"><expr pos:start="423:21" pos:end="425:69"><name pos:start="423:21" pos:end="423:35"><name pos:start="423:21" pos:end="423:23">env</name><operator pos:start="423:24" pos:end="423:25">-&gt;</operator><name pos:start="423:26" pos:end="423:35">error_code</name></name> <operator pos:start="423:37" pos:end="423:37">=</operator>

                        <name pos:start="425:25" pos:end="425:42">POWERPC_EXCP_INVAL</name> <operator pos:start="425:44" pos:end="425:44">|</operator> <name pos:start="425:46" pos:end="425:69">POWERPC_EXCP_INVAL_INVAL</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="427:21" pos:end="427:48"><expr pos:start="427:21" pos:end="427:47"><name pos:start="427:21" pos:end="427:37"><name pos:start="427:21" pos:end="427:23">env</name><operator pos:start="427:24" pos:end="427:25">-&gt;</operator><name pos:start="427:26" pos:end="427:28">spr</name><index pos:start="427:29" pos:end="427:37">[<expr pos:start="427:30" pos:end="427:36"><name pos:start="427:30" pos:end="427:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="427:39" pos:end="427:39">=</operator> <name pos:start="427:41" pos:end="427:47">address</name></expr>;</expr_stmt>

                    <break pos:start="429:21" pos:end="429:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="433:17" pos:end="436:0">break;</break>

<cpp:if pos:start="435:1" pos:end="435:25">#<cpp:directive pos:start="435:2" pos:end="435:3">if</cpp:directive> <expr pos:start="435:5" pos:end="435:25"><call pos:start="435:5" pos:end="435:25"><name pos:start="435:5" pos:end="435:11">defined</name><argument_list pos:start="435:12" pos:end="435:25">(<argument pos:start="435:13" pos:end="435:24"><expr pos:start="435:13" pos:end="435:24"><name pos:start="435:13" pos:end="435:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <case pos:start="437:13" pos:end="437:20">case <expr pos:start="437:18" pos:end="437:19"><operator pos:start="437:18" pos:end="437:18">-</operator><literal type="number" pos:start="437:19" pos:end="437:19">5</literal></expr>:</case>

                <comment type="block" pos:start="439:17" pos:end="439:47">/* No match in segment table */</comment>

                <expr_stmt pos:start="441:17" pos:end="441:57"><expr pos:start="441:17" pos:end="441:56"><name pos:start="441:17" pos:end="441:36"><name pos:start="441:17" pos:end="441:19">env</name><operator pos:start="441:20" pos:end="441:21">-&gt;</operator><name pos:start="441:22" pos:end="441:36">exception_index</name></name> <operator pos:start="441:38" pos:end="441:38">=</operator> <name pos:start="441:40" pos:end="441:56">POWERPC_EXCP_DSEG</name></expr>;</expr_stmt>

                <expr_stmt pos:start="443:17" pos:end="443:36"><expr pos:start="443:17" pos:end="443:35"><name pos:start="443:17" pos:end="443:31"><name pos:start="443:17" pos:end="443:19">env</name><operator pos:start="443:20" pos:end="443:21">-&gt;</operator><name pos:start="443:22" pos:end="443:31">error_code</name></name> <operator pos:start="443:33" pos:end="443:33">=</operator> <literal type="number" pos:start="443:35" pos:end="443:35">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="445:17" pos:end="445:44"><expr pos:start="445:17" pos:end="445:43"><name pos:start="445:17" pos:end="445:33"><name pos:start="445:17" pos:end="445:19">env</name><operator pos:start="445:20" pos:end="445:21">-&gt;</operator><name pos:start="445:22" pos:end="445:24">spr</name><index pos:start="445:25" pos:end="445:33">[<expr pos:start="445:26" pos:end="445:32"><name pos:start="445:26" pos:end="445:32">SPR_DAR</name></expr>]</index></name> <operator pos:start="445:35" pos:end="445:35">=</operator> <name pos:start="445:37" pos:end="445:43">address</name></expr>;</expr_stmt>

                <break pos:start="447:17" pos:end="450:0">break;</break>

<cpp:endif pos:start="449:1" pos:end="449:6">#<cpp:directive pos:start="449:2" pos:end="449:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

<cpp:if pos:start="455:1" pos:end="455:5">#<cpp:directive pos:start="455:2" pos:end="455:3">if</cpp:directive> <expr pos:start="455:5" pos:end="455:5"><literal type="number" pos:start="455:5" pos:end="455:5">0</literal></expr></cpp:if>

        printf("%s: set exception to %d %02x\n", __func__,

               env-&gt;exception, env-&gt;error_code);

<cpp:endif pos:start="461:1" pos:end="461:6">#<cpp:directive pos:start="461:2" pos:end="461:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="463:9" pos:end="463:16"><expr pos:start="463:9" pos:end="463:15"><name pos:start="463:9" pos:end="463:11">ret</name> <operator pos:start="463:13" pos:end="463:13">=</operator> <literal type="number" pos:start="463:15" pos:end="463:15">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="469:5" pos:end="469:15">return <expr pos:start="469:12" pos:end="469:14"><name pos:start="469:12" pos:end="469:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
