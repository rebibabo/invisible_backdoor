<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10855.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">local_mkdir</name><parameter_list pos:start="1:23" pos:end="1:74">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:32">FsContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">fs_ctx</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">path</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:73"><decl pos:start="1:61" pos:end="1:73"><type pos:start="1:61" pos:end="1:73"><name pos:start="1:61" pos:end="1:66">FsCred</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">credp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:15">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">err</name> <init pos:start="5:13" pos:end="5:16">= <expr pos:start="5:15" pos:end="5:16"><operator pos:start="5:15" pos:end="5:15">-</operator><literal type="number" pos:start="5:16" pos:end="5:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">serrno</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:38">/* Determine the security model */</comment>

    <if_stmt pos:start="13:5" pos:end="55:5"><if pos:start="13:5" pos:end="35:5">if <condition pos:start="13:8" pos:end="13:35">(<expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:14">fs_ctx</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:21">fs_sm</name></name> <operator pos:start="13:23" pos:end="13:24">==</operator> <name pos:start="13:26" pos:end="13:34">SM_MAPPED</name></expr>)</condition> <block pos:start="13:37" pos:end="35:5">{<block_content pos:start="15:9" pos:end="33:9">

        <expr_stmt pos:start="15:9" pos:end="15:65"><expr pos:start="15:9" pos:end="15:64"><name pos:start="15:9" pos:end="15:11">err</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:64"><name pos:start="15:15" pos:end="15:19">mkdir</name><argument_list pos:start="15:20" pos:end="15:64">(<argument pos:start="15:21" pos:end="15:39"><expr pos:start="15:21" pos:end="15:39"><call pos:start="15:21" pos:end="15:39"><name pos:start="15:21" pos:end="15:25">rpath</name><argument_list pos:start="15:26" pos:end="15:39">(<argument pos:start="15:27" pos:end="15:32"><expr pos:start="15:27" pos:end="15:32"><name pos:start="15:27" pos:end="15:32">fs_ctx</name></expr></argument>, <argument pos:start="15:35" pos:end="15:38"><expr pos:start="15:35" pos:end="15:38"><name pos:start="15:35" pos:end="15:38">path</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:42" pos:end="15:63"><expr pos:start="15:42" pos:end="15:63"><name pos:start="15:42" pos:end="15:63">SM_LOCAL_DIR_MODE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:22">(<expr pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:15">err</name> <operator pos:start="17:17" pos:end="17:18">==</operator> <operator pos:start="17:20" pos:end="17:20">-</operator><literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr>)</condition> <block pos:start="17:24" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:23">

            <return pos:start="19:13" pos:end="19:23">return <expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">err</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:48"><expr pos:start="23:9" pos:end="23:47"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:13">credp</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:22">fc_mode</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <name pos:start="23:26" pos:end="23:39"><name pos:start="23:26" pos:end="23:30">credp</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:39">fc_mode</name></name><operator pos:start="23:40" pos:end="23:40">|</operator><name pos:start="23:41" pos:end="23:47">S_IFDIR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:58"><expr pos:start="25:9" pos:end="25:57"><name pos:start="25:9" pos:end="25:11">err</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:57"><name pos:start="25:15" pos:end="25:29">local_set_xattr</name><argument_list pos:start="25:30" pos:end="25:57">(<argument pos:start="25:31" pos:end="25:49"><expr pos:start="25:31" pos:end="25:49"><call pos:start="25:31" pos:end="25:49"><name pos:start="25:31" pos:end="25:35">rpath</name><argument_list pos:start="25:36" pos:end="25:49">(<argument pos:start="25:37" pos:end="25:42"><expr pos:start="25:37" pos:end="25:42"><name pos:start="25:37" pos:end="25:42">fs_ctx</name></expr></argument>, <argument pos:start="25:45" pos:end="25:48"><expr pos:start="25:45" pos:end="25:48"><name pos:start="25:45" pos:end="25:48">path</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:52" pos:end="25:56"><expr pos:start="25:52" pos:end="25:56"><name pos:start="25:52" pos:end="25:56">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:22">(<expr pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:15">err</name> <operator pos:start="27:17" pos:end="27:18">==</operator> <operator pos:start="27:20" pos:end="27:20">-</operator><literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr>)</condition> <block pos:start="27:24" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:25">

            <expr_stmt pos:start="29:13" pos:end="29:27"><expr pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:18">serrno</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="31:13" pos:end="31:25">goto <name pos:start="31:18" pos:end="31:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="55:5">else if <condition pos:start="35:15" pos:end="35:47">(<expr pos:start="35:16" pos:end="35:46"><name pos:start="35:16" pos:end="35:28"><name pos:start="35:16" pos:end="35:21">fs_ctx</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:28">fs_sm</name></name> <operator pos:start="35:30" pos:end="35:31">==</operator> <name pos:start="35:33" pos:end="35:46">SM_PASSTHROUGH</name></expr>)</condition> <block pos:start="35:49" pos:end="55:5">{<block_content pos:start="37:9" pos:end="53:9">

        <expr_stmt pos:start="37:9" pos:end="37:57"><expr pos:start="37:9" pos:end="37:56"><name pos:start="37:9" pos:end="37:11">err</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:56"><name pos:start="37:15" pos:end="37:19">mkdir</name><argument_list pos:start="37:20" pos:end="37:56">(<argument pos:start="37:21" pos:end="37:39"><expr pos:start="37:21" pos:end="37:39"><call pos:start="37:21" pos:end="37:39"><name pos:start="37:21" pos:end="37:25">rpath</name><argument_list pos:start="37:26" pos:end="37:39">(<argument pos:start="37:27" pos:end="37:32"><expr pos:start="37:27" pos:end="37:32"><name pos:start="37:27" pos:end="37:32">fs_ctx</name></expr></argument>, <argument pos:start="37:35" pos:end="37:38"><expr pos:start="37:35" pos:end="37:38"><name pos:start="37:35" pos:end="37:38">path</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:42" pos:end="37:55"><expr pos:start="37:42" pos:end="37:55"><name pos:start="37:42" pos:end="37:55"><name pos:start="37:42" pos:end="37:46">credp</name><operator pos:start="37:47" pos:end="37:48">-&gt;</operator><name pos:start="37:49" pos:end="37:55">fc_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:22">(<expr pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:15">err</name> <operator pos:start="39:17" pos:end="39:18">==</operator> <operator pos:start="39:20" pos:end="39:20">-</operator><literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr>)</condition> <block pos:start="39:24" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:23">

            <return pos:start="41:13" pos:end="41:23">return <expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">err</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:65"><expr pos:start="45:9" pos:end="45:64"><name pos:start="45:9" pos:end="45:11">err</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:64"><name pos:start="45:15" pos:end="45:43">local_post_create_passthrough</name><argument_list pos:start="45:44" pos:end="45:64">(<argument pos:start="45:45" pos:end="45:50"><expr pos:start="45:45" pos:end="45:50"><name pos:start="45:45" pos:end="45:50">fs_ctx</name></expr></argument>, <argument pos:start="45:53" pos:end="45:56"><expr pos:start="45:53" pos:end="45:56"><name pos:start="45:53" pos:end="45:56">path</name></expr></argument>, <argument pos:start="45:59" pos:end="45:63"><expr pos:start="45:59" pos:end="45:63"><name pos:start="45:59" pos:end="45:63">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:22">(<expr pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:15">err</name> <operator pos:start="47:17" pos:end="47:18">==</operator> <operator pos:start="47:20" pos:end="47:20">-</operator><literal type="number" pos:start="47:21" pos:end="47:21">1</literal></expr>)</condition> <block pos:start="47:24" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:25">

            <expr_stmt pos:start="49:13" pos:end="49:27"><expr pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:18">serrno</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="51:13" pos:end="51:25">goto <name pos:start="51:18" pos:end="51:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="57:5" pos:end="57:15">return <expr pos:start="57:12" pos:end="57:14"><name pos:start="57:12" pos:end="57:14">err</name></expr>;</return>



<label pos:start="61:1" pos:end="61:8"><name pos:start="61:1" pos:end="61:7">err_end</name>:</label>

    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><call pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:10">remove</name><argument_list pos:start="63:11" pos:end="63:31">(<argument pos:start="63:12" pos:end="63:30"><expr pos:start="63:12" pos:end="63:30"><call pos:start="63:12" pos:end="63:30"><name pos:start="63:12" pos:end="63:16">rpath</name><argument_list pos:start="63:17" pos:end="63:30">(<argument pos:start="63:18" pos:end="63:23"><expr pos:start="63:18" pos:end="63:23"><name pos:start="63:18" pos:end="63:23">fs_ctx</name></expr></argument>, <argument pos:start="63:26" pos:end="63:29"><expr pos:start="63:26" pos:end="63:29"><name pos:start="63:26" pos:end="63:29">path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:19"><expr pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:9">errno</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <name pos:start="65:13" pos:end="65:18">serrno</name></expr>;</expr_stmt>

    <return pos:start="67:5" pos:end="67:15">return <expr pos:start="67:12" pos:end="67:14"><name pos:start="67:12" pos:end="67:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
