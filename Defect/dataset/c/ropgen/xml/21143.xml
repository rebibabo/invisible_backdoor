<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21143.c" pos:tabs="8"><function pos:start="1:1" pos:end="5798:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">abi_long</name></type> <name pos:start="1:10" pos:end="1:19">do_syscall</name><parameter_list pos:start="1:20" pos:end="5:49">(<parameter pos:start="1:21" pos:end="1:33"><decl pos:start="1:21" pos:end="1:33"><type pos:start="1:21" pos:end="1:33"><name pos:start="1:21" pos:end="1:24">void</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:33">cpu_env</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:42"><decl pos:start="1:36" pos:end="1:42"><type pos:start="1:36" pos:end="1:42"><name pos:start="1:36" pos:end="1:38">int</name></type> <name pos:start="1:40" pos:end="1:42">num</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">abi_long</name></type> <name pos:start="1:54" pos:end="1:57">arg1</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:33"><decl pos:start="3:21" pos:end="3:33"><type pos:start="3:21" pos:end="3:33"><name pos:start="3:21" pos:end="3:28">abi_long</name></type> <name pos:start="3:30" pos:end="3:33">arg2</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:48"><decl pos:start="3:36" pos:end="3:48"><type pos:start="3:36" pos:end="3:48"><name pos:start="3:36" pos:end="3:43">abi_long</name></type> <name pos:start="3:45" pos:end="3:48">arg3</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:63"><decl pos:start="3:51" pos:end="3:63"><type pos:start="3:51" pos:end="3:63"><name pos:start="3:51" pos:end="3:58">abi_long</name></type> <name pos:start="3:60" pos:end="3:63">arg4</name></decl></parameter>,

                    <parameter pos:start="5:21" pos:end="5:33"><decl pos:start="5:21" pos:end="5:33"><type pos:start="5:21" pos:end="5:33"><name pos:start="5:21" pos:end="5:28">abi_long</name></type> <name pos:start="5:30" pos:end="5:33">arg5</name></decl></parameter>, <parameter pos:start="5:36" pos:end="5:48"><decl pos:start="5:36" pos:end="5:48"><type pos:start="5:36" pos:end="5:48"><name pos:start="5:36" pos:end="5:43">abi_long</name></type> <name pos:start="5:45" pos:end="5:48">arg6</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="5798:1">{<block_content pos:start="9:5" pos:end="5796:14">

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">abi_long</name></type> <name pos:start="9:14" pos:end="9:16">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:15">stat</name></name></type> <name pos:start="11:17" pos:end="11:18">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:17">statfs</name></name></type> <name pos:start="13:19" pos:end="13:22">stfs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="20:0"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">void</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:11">p</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="19:1" pos:end="19:12">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="21:5" pos:end="24:0"><expr pos:start="21:5" pos:end="21:31"><call pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:12">gemu_log</name><argument_list pos:start="21:13" pos:end="21:31">(<argument pos:start="21:14" pos:end="21:25"><expr pos:start="21:14" pos:end="21:25"><literal type="string" pos:start="21:14" pos:end="21:25">"syscall %d"</literal></expr></argument>, <argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="25:5" pos:end="27:63"><if pos:start="25:5" pos:end="27:63">if<condition pos:start="25:7" pos:end="25:17">(<expr pos:start="25:8" pos:end="25:16"><name pos:start="25:8" pos:end="25:16">do_strace</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:63"><block_content pos:start="27:9" pos:end="27:63">

        <expr_stmt pos:start="27:9" pos:end="27:63"><expr pos:start="27:9" pos:end="27:62"><call pos:start="27:9" pos:end="27:62"><name pos:start="27:9" pos:end="27:21">print_syscall</name><argument_list pos:start="27:22" pos:end="27:62">(<argument pos:start="27:23" pos:end="27:25"><expr pos:start="27:23" pos:end="27:25"><name pos:start="27:23" pos:end="27:25">num</name></expr></argument>, <argument pos:start="27:28" pos:end="27:31"><expr pos:start="27:28" pos:end="27:31"><name pos:start="27:28" pos:end="27:31">arg1</name></expr></argument>, <argument pos:start="27:34" pos:end="27:37"><expr pos:start="27:34" pos:end="27:37"><name pos:start="27:34" pos:end="27:37">arg2</name></expr></argument>, <argument pos:start="27:40" pos:end="27:43"><expr pos:start="27:40" pos:end="27:43"><name pos:start="27:40" pos:end="27:43">arg3</name></expr></argument>, <argument pos:start="27:46" pos:end="27:49"><expr pos:start="27:46" pos:end="27:49"><name pos:start="27:46" pos:end="27:49">arg4</name></expr></argument>, <argument pos:start="27:52" pos:end="27:55"><expr pos:start="27:52" pos:end="27:55"><name pos:start="27:52" pos:end="27:55">arg5</name></expr></argument>, <argument pos:start="27:58" pos:end="27:61"><expr pos:start="27:58" pos:end="27:61"><name pos:start="27:58" pos:end="27:61">arg6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="31:5" pos:end="5776:5">switch<condition pos:start="31:11" pos:end="31:15">(<expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">num</name></expr>)</condition> <block pos:start="31:17" pos:end="5776:5">{<block_content pos:start="33:5" pos:end="5774:14">

    <case pos:start="33:5" pos:end="36:0">case <expr pos:start="33:10" pos:end="33:23"><name pos:start="33:10" pos:end="33:23">TARGET_NR_exit</name></expr>:</case>

<cpp:ifdef pos:start="35:1" pos:end="35:22">#<cpp:directive pos:start="35:2" pos:end="35:6">ifdef</cpp:directive> <name pos:start="35:8" pos:end="35:22">CONFIG_USE_NPTL</name></cpp:ifdef>

      <comment type="block" pos:start="37:7" pos:end="43:67">/* In old applications this may be used to implement _exit(2).

         However in threaded applictions it is used for thread termination,

         and _exit_group is used for application termination.

         Do thread termination if we have more then one thread.  */</comment>

      <comment type="block" pos:start="45:7" pos:end="47:34">/* FIXME: This probably breaks if a signal arrives.  We should probably

         be disabling signals.  */</comment>

      <if_stmt pos:start="49:7" pos:end="108:0"><if pos:start="49:7" pos:end="108:0">if <condition pos:start="49:10" pos:end="49:30">(<expr pos:start="49:11" pos:end="49:29"><name pos:start="49:11" pos:end="49:29"><name pos:start="49:11" pos:end="49:19">first_cpu</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:29">next_cpu</name></name></expr>)</condition> <block pos:start="49:32" pos:end="108:0">{<block_content pos:start="51:11" pos:end="101:29">

          <decl_stmt pos:start="51:11" pos:end="51:24"><decl pos:start="51:11" pos:end="51:23"><type pos:start="51:11" pos:end="51:21"><name pos:start="51:11" pos:end="51:19">TaskState</name> <modifier pos:start="51:21" pos:end="51:21">*</modifier></type><name pos:start="51:22" pos:end="51:23">ts</name></decl>;</decl_stmt>

          <decl_stmt pos:start="53:11" pos:end="53:27"><decl pos:start="53:11" pos:end="53:26"><type pos:start="53:11" pos:end="53:21"><name pos:start="53:11" pos:end="53:18">CPUState</name> <modifier pos:start="53:20" pos:end="53:20">*</modifier><modifier pos:start="53:21" pos:end="53:21">*</modifier></type><name pos:start="53:22" pos:end="53:26">lastp</name></decl>;</decl_stmt>

          <decl_stmt pos:start="55:11" pos:end="55:22"><decl pos:start="55:11" pos:end="55:21"><type pos:start="55:11" pos:end="55:20"><name pos:start="55:11" pos:end="55:18">CPUState</name> <modifier pos:start="55:20" pos:end="55:20">*</modifier></type><name pos:start="55:21" pos:end="55:21">p</name></decl>;</decl_stmt>



          <expr_stmt pos:start="59:11" pos:end="59:26"><expr pos:start="59:11" pos:end="59:25"><call pos:start="59:11" pos:end="59:25"><name pos:start="59:11" pos:end="59:23">cpu_list_lock</name><argument_list pos:start="59:24" pos:end="59:25">()</argument_list></call></expr>;</expr_stmt>

          <expr_stmt pos:start="61:11" pos:end="61:29"><expr pos:start="61:11" pos:end="61:28"><name pos:start="61:11" pos:end="61:15">lastp</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <operator pos:start="61:19" pos:end="61:19">&amp;</operator><name pos:start="61:20" pos:end="61:28">first_cpu</name></expr>;</expr_stmt>

          <expr_stmt pos:start="63:11" pos:end="63:24"><expr pos:start="63:11" pos:end="63:23"><name pos:start="63:11" pos:end="63:11">p</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <name pos:start="63:15" pos:end="63:23">first_cpu</name></expr>;</expr_stmt>

          <while pos:start="65:11" pos:end="71:11">while <condition pos:start="65:17" pos:end="65:47">(<expr pos:start="65:18" pos:end="65:46"><name pos:start="65:18" pos:end="65:18">p</name> <operator pos:start="65:20" pos:end="65:21">&amp;&amp;</operator> <name pos:start="65:23" pos:end="65:23">p</name> <operator pos:start="65:25" pos:end="65:26">!=</operator> <operator pos:start="65:28" pos:end="65:28">(</operator><name pos:start="65:29" pos:end="65:36">CPUState</name> <operator pos:start="65:38" pos:end="65:38">*</operator><operator pos:start="65:39" pos:end="65:39">)</operator><name pos:start="65:40" pos:end="65:46">cpu_env</name></expr>)</condition> <block pos:start="65:49" pos:end="71:11">{<block_content pos:start="67:15" pos:end="69:30">

              <expr_stmt pos:start="67:15" pos:end="67:35"><expr pos:start="67:15" pos:end="67:34"><name pos:start="67:15" pos:end="67:19">lastp</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <operator pos:start="67:23" pos:end="67:23">&amp;</operator><name pos:start="67:24" pos:end="67:34"><name pos:start="67:24" pos:end="67:24">p</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:34">next_cpu</name></name></expr>;</expr_stmt>

              <expr_stmt pos:start="69:15" pos:end="69:30"><expr pos:start="69:15" pos:end="69:29"><name pos:start="69:15" pos:end="69:15">p</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <name pos:start="69:19" pos:end="69:29"><name pos:start="69:19" pos:end="69:19">p</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:29">next_cpu</name></name></expr>;</expr_stmt>

          </block_content>}</block></while>

          <comment type="block" pos:start="73:11" pos:end="75:32">/* If we didn't find the CPU for this thread then something is

             horribly wrong.  */</comment>

          <if_stmt pos:start="77:11" pos:end="79:22"><if pos:start="77:11" pos:end="79:22">if <condition pos:start="77:14" pos:end="77:17">(<expr pos:start="77:15" pos:end="77:16"><operator pos:start="77:15" pos:end="77:15">!</operator><name pos:start="77:16" pos:end="77:16">p</name></expr>)</condition><block type="pseudo" pos:start="79:15" pos:end="79:22"><block_content pos:start="79:15" pos:end="79:22">

              <expr_stmt pos:start="79:15" pos:end="79:22"><expr pos:start="79:15" pos:end="79:21"><call pos:start="79:15" pos:end="79:21"><name pos:start="79:15" pos:end="79:19">abort</name><argument_list pos:start="79:20" pos:end="79:21">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

          <comment type="block" pos:start="81:11" pos:end="81:46">/* Remove the CPU from the list.  */</comment>

          <expr_stmt pos:start="83:11" pos:end="83:31"><expr pos:start="83:11" pos:end="83:30"><operator pos:start="83:11" pos:end="83:11">*</operator><name pos:start="83:12" pos:end="83:16">lastp</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:30"><name pos:start="83:20" pos:end="83:20">p</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:30">next_cpu</name></name></expr>;</expr_stmt>

          <expr_stmt pos:start="85:11" pos:end="85:28"><expr pos:start="85:11" pos:end="85:27"><call pos:start="85:11" pos:end="85:27"><name pos:start="85:11" pos:end="85:25">cpu_list_unlock</name><argument_list pos:start="85:26" pos:end="85:27">()</argument_list></call></expr>;</expr_stmt>

          <expr_stmt pos:start="87:11" pos:end="87:45"><expr pos:start="87:11" pos:end="87:44"><name pos:start="87:11" pos:end="87:12">ts</name> <operator pos:start="87:14" pos:end="87:14">=</operator> <operator pos:start="87:16" pos:end="87:16">(</operator><operator pos:start="87:17" pos:end="87:17">(</operator><name pos:start="87:18" pos:end="87:25">CPUState</name> <operator pos:start="87:27" pos:end="87:27">*</operator><operator pos:start="87:28" pos:end="87:28">)</operator><name pos:start="87:29" pos:end="87:35">cpu_env</name><operator pos:start="87:36" pos:end="87:36">)</operator><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:44">opaque</name></expr>;</expr_stmt>

          <if_stmt pos:start="89:11" pos:end="97:11"><if pos:start="89:11" pos:end="97:11">if <condition pos:start="89:14" pos:end="89:31">(<expr pos:start="89:15" pos:end="89:30"><name pos:start="89:15" pos:end="89:30"><name pos:start="89:15" pos:end="89:16">ts</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:30">child_tidptr</name></name></expr>)</condition> <block pos:start="89:33" pos:end="97:11">{<block_content pos:start="91:15" pos:end="95:39">

              <expr_stmt pos:start="91:15" pos:end="91:48"><expr pos:start="91:15" pos:end="91:47"><call pos:start="91:15" pos:end="91:47"><name pos:start="91:15" pos:end="91:26">put_user_u32</name><argument_list pos:start="91:27" pos:end="91:47">(<argument pos:start="91:28" pos:end="91:28"><expr pos:start="91:28" pos:end="91:28"><literal type="number" pos:start="91:28" pos:end="91:28">0</literal></expr></argument>, <argument pos:start="91:31" pos:end="91:46"><expr pos:start="91:31" pos:end="91:46"><name pos:start="91:31" pos:end="91:46"><name pos:start="91:31" pos:end="91:32">ts</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:46">child_tidptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

              <expr_stmt pos:start="93:15" pos:end="95:39"><expr pos:start="93:15" pos:end="95:38"><call pos:start="93:15" pos:end="95:38"><name pos:start="93:15" pos:end="93:23">sys_futex</name><argument_list pos:start="93:24" pos:end="95:38">(<argument pos:start="93:25" pos:end="93:45"><expr pos:start="93:25" pos:end="93:45"><call pos:start="93:25" pos:end="93:45"><name pos:start="93:25" pos:end="93:27">g2h</name><argument_list pos:start="93:28" pos:end="93:45">(<argument pos:start="93:29" pos:end="93:44"><expr pos:start="93:29" pos:end="93:44"><name pos:start="93:29" pos:end="93:44"><name pos:start="93:29" pos:end="93:30">ts</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:44">child_tidptr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="93:48" pos:end="93:57"><expr pos:start="93:48" pos:end="93:57"><name pos:start="93:48" pos:end="93:57">FUTEX_WAKE</name></expr></argument>, <argument pos:start="93:60" pos:end="93:66"><expr pos:start="93:60" pos:end="93:66"><name pos:start="93:60" pos:end="93:66">INT_MAX</name></expr></argument>,

                        <argument pos:start="95:25" pos:end="95:28"><expr pos:start="95:25" pos:end="95:28"><name pos:start="95:25" pos:end="95:28">NULL</name></expr></argument>, <argument pos:start="95:31" pos:end="95:34"><expr pos:start="95:31" pos:end="95:34"><name pos:start="95:31" pos:end="95:34">NULL</name></expr></argument>, <argument pos:start="95:37" pos:end="95:37"><expr pos:start="95:37" pos:end="95:37"><literal type="number" pos:start="95:37" pos:end="95:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

          </block_content>}</block></if></if_stmt>

          <comment type="block" pos:start="99:11" pos:end="99:38">/* TODO: Free CPU state.  */</comment>

          <expr_stmt pos:start="101:11" pos:end="101:29"><expr pos:start="101:11" pos:end="101:28"><call pos:start="101:11" pos:end="101:28"><name pos:start="101:11" pos:end="101:22">pthread_exit</name><argument_list pos:start="101:23" pos:end="101:28">(<argument pos:start="101:24" pos:end="101:27"><expr pos:start="101:24" pos:end="101:27"><name pos:start="101:24" pos:end="101:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="105:1" pos:end="105:6">#<cpp:directive pos:start="105:2" pos:end="105:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="107:1" pos:end="107:19">#<cpp:directive pos:start="107:2" pos:end="107:6">ifdef</cpp:directive> <name pos:start="107:8" pos:end="107:19">TARGET_GPROF</name></cpp:ifdef>

        <expr_stmt pos:start="109:9" pos:end="112:0"><expr pos:start="109:9" pos:end="109:19"><call pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:17">_mcleanup</name><argument_list pos:start="109:18" pos:end="109:19">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="111:1" pos:end="111:6">#<cpp:directive pos:start="111:2" pos:end="111:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="113:9" pos:end="113:32"><expr pos:start="113:9" pos:end="113:31"><call pos:start="113:9" pos:end="113:31"><name pos:start="113:9" pos:end="113:16">gdb_exit</name><argument_list pos:start="113:17" pos:end="113:31">(<argument pos:start="113:18" pos:end="113:24"><expr pos:start="113:18" pos:end="113:24"><name pos:start="113:18" pos:end="113:24">cpu_env</name></expr></argument>, <argument pos:start="113:27" pos:end="113:30"><expr pos:start="113:27" pos:end="113:30"><name pos:start="113:27" pos:end="113:30">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:20"><expr pos:start="115:9" pos:end="115:19"><call pos:start="115:9" pos:end="115:19"><name pos:start="115:9" pos:end="115:13">_exit</name><argument_list pos:start="115:14" pos:end="115:19">(<argument pos:start="115:15" pos:end="115:18"><expr pos:start="115:15" pos:end="115:18"><name pos:start="115:15" pos:end="115:18">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:16"><expr pos:start="117:9" pos:end="117:15"><name pos:start="117:9" pos:end="117:11">ret</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <literal type="number" pos:start="117:15" pos:end="117:15">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="117:18" pos:end="117:36">/* avoid warning */</comment>

        <break pos:start="119:9" pos:end="119:14">break;</break>

    <case pos:start="121:5" pos:end="121:24">case <expr pos:start="121:10" pos:end="121:23"><name pos:start="121:10" pos:end="121:23">TARGET_NR_read</name></expr>:</case>

        <if_stmt pos:start="123:9" pos:end="137:9"><if pos:start="123:9" pos:end="125:20">if <condition pos:start="123:12" pos:end="123:22">(<expr pos:start="123:13" pos:end="123:21"><name pos:start="123:13" pos:end="123:16">arg3</name> <operator pos:start="123:18" pos:end="123:19">==</operator> <literal type="number" pos:start="123:21" pos:end="123:21">0</literal></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:20"><block_content pos:start="125:13" pos:end="125:20">

            <expr_stmt pos:start="125:13" pos:end="125:20"><expr pos:start="125:13" pos:end="125:19"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <literal type="number" pos:start="125:19" pos:end="125:19">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="127:9" pos:end="137:9">else <block pos:start="127:14" pos:end="137:9">{<block_content pos:start="129:13" pos:end="135:38">

            <if_stmt pos:start="129:13" pos:end="131:28"><if pos:start="129:13" pos:end="131:28">if <condition pos:start="129:16" pos:end="129:62">(<expr pos:start="129:17" pos:end="129:61"><operator pos:start="129:17" pos:end="129:17">!</operator><operator pos:start="129:18" pos:end="129:18">(</operator><name pos:start="129:19" pos:end="129:19">p</name> <operator pos:start="129:21" pos:end="129:21">=</operator> <call pos:start="129:23" pos:end="129:60"><name pos:start="129:23" pos:end="129:31">lock_user</name><argument_list pos:start="129:32" pos:end="129:60">(<argument pos:start="129:33" pos:end="129:44"><expr pos:start="129:33" pos:end="129:44"><name pos:start="129:33" pos:end="129:44">VERIFY_WRITE</name></expr></argument>, <argument pos:start="129:47" pos:end="129:50"><expr pos:start="129:47" pos:end="129:50"><name pos:start="129:47" pos:end="129:50">arg2</name></expr></argument>, <argument pos:start="129:53" pos:end="129:56"><expr pos:start="129:53" pos:end="129:56"><name pos:start="129:53" pos:end="129:56">arg3</name></expr></argument>, <argument pos:start="129:59" pos:end="129:59"><expr pos:start="129:59" pos:end="129:59"><literal type="number" pos:start="129:59" pos:end="129:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="129:61" pos:end="129:61">)</operator></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:28"><block_content pos:start="131:17" pos:end="131:28">

                <goto pos:start="131:17" pos:end="131:28">goto <name pos:start="131:22" pos:end="131:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:49"><expr pos:start="133:13" pos:end="133:48"><name pos:start="133:13" pos:end="133:15">ret</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <call pos:start="133:19" pos:end="133:48"><name pos:start="133:19" pos:end="133:27">get_errno</name><argument_list pos:start="133:28" pos:end="133:48">(<argument pos:start="133:29" pos:end="133:47"><expr pos:start="133:29" pos:end="133:47"><call pos:start="133:29" pos:end="133:47"><name pos:start="133:29" pos:end="133:32">read</name><argument_list pos:start="133:33" pos:end="133:47">(<argument pos:start="133:34" pos:end="133:37"><expr pos:start="133:34" pos:end="133:37"><name pos:start="133:34" pos:end="133:37">arg1</name></expr></argument>, <argument pos:start="133:40" pos:end="133:40"><expr pos:start="133:40" pos:end="133:40"><name pos:start="133:40" pos:end="133:40">p</name></expr></argument>, <argument pos:start="133:43" pos:end="133:46"><expr pos:start="133:43" pos:end="133:46"><name pos:start="133:43" pos:end="133:46">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:38"><expr pos:start="135:13" pos:end="135:37"><call pos:start="135:13" pos:end="135:37"><name pos:start="135:13" pos:end="135:23">unlock_user</name><argument_list pos:start="135:24" pos:end="135:37">(<argument pos:start="135:25" pos:end="135:25"><expr pos:start="135:25" pos:end="135:25"><name pos:start="135:25" pos:end="135:25">p</name></expr></argument>, <argument pos:start="135:28" pos:end="135:31"><expr pos:start="135:28" pos:end="135:31"><name pos:start="135:28" pos:end="135:31">arg2</name></expr></argument>, <argument pos:start="135:34" pos:end="135:36"><expr pos:start="135:34" pos:end="135:36"><name pos:start="135:34" pos:end="135:36">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    <case pos:start="141:5" pos:end="141:25">case <expr pos:start="141:10" pos:end="141:24"><name pos:start="141:10" pos:end="141:24">TARGET_NR_write</name></expr>:</case>

        <if_stmt pos:start="143:9" pos:end="145:24"><if pos:start="143:9" pos:end="145:24">if <condition pos:start="143:12" pos:end="143:57">(<expr pos:start="143:13" pos:end="143:56"><operator pos:start="143:13" pos:end="143:13">!</operator><operator pos:start="143:14" pos:end="143:14">(</operator><name pos:start="143:15" pos:end="143:15">p</name> <operator pos:start="143:17" pos:end="143:17">=</operator> <call pos:start="143:19" pos:end="143:55"><name pos:start="143:19" pos:end="143:27">lock_user</name><argument_list pos:start="143:28" pos:end="143:55">(<argument pos:start="143:29" pos:end="143:39"><expr pos:start="143:29" pos:end="143:39"><name pos:start="143:29" pos:end="143:39">VERIFY_READ</name></expr></argument>, <argument pos:start="143:42" pos:end="143:45"><expr pos:start="143:42" pos:end="143:45"><name pos:start="143:42" pos:end="143:45">arg2</name></expr></argument>, <argument pos:start="143:48" pos:end="143:51"><expr pos:start="143:48" pos:end="143:51"><name pos:start="143:48" pos:end="143:51">arg3</name></expr></argument>, <argument pos:start="143:54" pos:end="143:54"><expr pos:start="143:54" pos:end="143:54"><literal type="number" pos:start="143:54" pos:end="143:54">1</literal></expr></argument>)</argument_list></call><operator pos:start="143:56" pos:end="143:56">)</operator></expr>)</condition><block type="pseudo" pos:start="145:13" pos:end="145:24"><block_content pos:start="145:13" pos:end="145:24">

            <goto pos:start="145:13" pos:end="145:24">goto <name pos:start="145:18" pos:end="145:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:46"><expr pos:start="147:9" pos:end="147:45"><name pos:start="147:9" pos:end="147:11">ret</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <call pos:start="147:15" pos:end="147:45"><name pos:start="147:15" pos:end="147:23">get_errno</name><argument_list pos:start="147:24" pos:end="147:45">(<argument pos:start="147:25" pos:end="147:44"><expr pos:start="147:25" pos:end="147:44"><call pos:start="147:25" pos:end="147:44"><name pos:start="147:25" pos:end="147:29">write</name><argument_list pos:start="147:30" pos:end="147:44">(<argument pos:start="147:31" pos:end="147:34"><expr pos:start="147:31" pos:end="147:34"><name pos:start="147:31" pos:end="147:34">arg1</name></expr></argument>, <argument pos:start="147:37" pos:end="147:37"><expr pos:start="147:37" pos:end="147:37"><name pos:start="147:37" pos:end="147:37">p</name></expr></argument>, <argument pos:start="147:40" pos:end="147:43"><expr pos:start="147:40" pos:end="147:43"><name pos:start="147:40" pos:end="147:43">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:32"><expr pos:start="149:9" pos:end="149:31"><call pos:start="149:9" pos:end="149:31"><name pos:start="149:9" pos:end="149:19">unlock_user</name><argument_list pos:start="149:20" pos:end="149:31">(<argument pos:start="149:21" pos:end="149:21"><expr pos:start="149:21" pos:end="149:21"><name pos:start="149:21" pos:end="149:21">p</name></expr></argument>, <argument pos:start="149:24" pos:end="149:27"><expr pos:start="149:24" pos:end="149:27"><name pos:start="149:24" pos:end="149:27">arg2</name></expr></argument>, <argument pos:start="149:30" pos:end="149:30"><expr pos:start="149:30" pos:end="149:30"><literal type="number" pos:start="149:30" pos:end="149:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="151:9" pos:end="151:14">break;</break>

    <case pos:start="153:5" pos:end="153:24">case <expr pos:start="153:10" pos:end="153:23"><name pos:start="153:10" pos:end="153:23">TARGET_NR_open</name></expr>:</case>

        <if_stmt pos:start="155:9" pos:end="157:24"><if pos:start="155:9" pos:end="157:24">if <condition pos:start="155:12" pos:end="155:42">(<expr pos:start="155:13" pos:end="155:41"><operator pos:start="155:13" pos:end="155:13">!</operator><operator pos:start="155:14" pos:end="155:14">(</operator><name pos:start="155:15" pos:end="155:15">p</name> <operator pos:start="155:17" pos:end="155:17">=</operator> <call pos:start="155:19" pos:end="155:40"><name pos:start="155:19" pos:end="155:34">lock_user_string</name><argument_list pos:start="155:35" pos:end="155:40">(<argument pos:start="155:36" pos:end="155:39"><expr pos:start="155:36" pos:end="155:39"><name pos:start="155:36" pos:end="155:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="155:41" pos:end="155:41">)</operator></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:24"><block_content pos:start="157:13" pos:end="157:24">

            <goto pos:start="157:13" pos:end="157:24">goto <name pos:start="157:18" pos:end="157:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="159:9" pos:end="163:36"><expr pos:start="159:9" pos:end="163:35"><name pos:start="159:9" pos:end="159:11">ret</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <call pos:start="159:15" pos:end="163:35"><name pos:start="159:15" pos:end="159:23">get_errno</name><argument_list pos:start="159:24" pos:end="163:35">(<argument pos:start="159:25" pos:end="163:34"><expr pos:start="159:25" pos:end="163:34"><call pos:start="159:25" pos:end="163:34"><name pos:start="159:25" pos:end="159:28">open</name><argument_list pos:start="159:29" pos:end="163:34">(<argument pos:start="159:30" pos:end="159:36"><expr pos:start="159:30" pos:end="159:36"><call pos:start="159:30" pos:end="159:36"><name pos:start="159:30" pos:end="159:33">path</name><argument_list pos:start="159:34" pos:end="159:36">(<argument pos:start="159:35" pos:end="159:35"><expr pos:start="159:35" pos:end="159:35"><name pos:start="159:35" pos:end="159:35">p</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="161:30" pos:end="161:74"><expr pos:start="161:30" pos:end="161:74"><call pos:start="161:30" pos:end="161:74"><name pos:start="161:30" pos:end="161:51">target_to_host_bitmask</name><argument_list pos:start="161:52" pos:end="161:74">(<argument pos:start="161:53" pos:end="161:56"><expr pos:start="161:53" pos:end="161:56"><name pos:start="161:53" pos:end="161:56">arg2</name></expr></argument>, <argument pos:start="161:59" pos:end="161:73"><expr pos:start="161:59" pos:end="161:73"><name pos:start="161:59" pos:end="161:73">fcntl_flags_tbl</name></expr></argument>)</argument_list></call></expr></argument>,

                             <argument pos:start="163:30" pos:end="163:33"><expr pos:start="163:30" pos:end="163:33"><name pos:start="163:30" pos:end="163:33">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:32"><expr pos:start="165:9" pos:end="165:31"><call pos:start="165:9" pos:end="165:31"><name pos:start="165:9" pos:end="165:19">unlock_user</name><argument_list pos:start="165:20" pos:end="165:31">(<argument pos:start="165:21" pos:end="165:21"><expr pos:start="165:21" pos:end="165:21"><name pos:start="165:21" pos:end="165:21">p</name></expr></argument>, <argument pos:start="165:24" pos:end="165:27"><expr pos:start="165:24" pos:end="165:27"><name pos:start="165:24" pos:end="165:27">arg1</name></expr></argument>, <argument pos:start="165:30" pos:end="165:30"><expr pos:start="165:30" pos:end="165:30"><literal type="number" pos:start="165:30" pos:end="165:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="167:9" pos:end="170:0">break;</break>

<cpp:if pos:start="169:1" pos:end="169:53">#<cpp:directive pos:start="169:2" pos:end="169:3">if</cpp:directive> <expr pos:start="169:5" pos:end="169:53"><call pos:start="169:5" pos:end="169:29"><name pos:start="169:5" pos:end="169:11">defined</name><argument_list pos:start="169:12" pos:end="169:29">(<argument pos:start="169:13" pos:end="169:28"><expr pos:start="169:13" pos:end="169:28"><name pos:start="169:13" pos:end="169:28">TARGET_NR_openat</name></expr></argument>)</argument_list></call> <operator pos:start="169:31" pos:end="169:32">&amp;&amp;</operator> <call pos:start="169:34" pos:end="169:53"><name pos:start="169:34" pos:end="169:40">defined</name><argument_list pos:start="169:41" pos:end="169:53">(<argument pos:start="169:42" pos:end="169:52"><expr pos:start="169:42" pos:end="169:52"><name pos:start="169:42" pos:end="169:52">__NR_openat</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="171:5" pos:end="171:26">case <expr pos:start="171:10" pos:end="171:25"><name pos:start="171:10" pos:end="171:25">TARGET_NR_openat</name></expr>:</case>

        <if_stmt pos:start="173:9" pos:end="175:24"><if pos:start="173:9" pos:end="175:24">if <condition pos:start="173:12" pos:end="173:42">(<expr pos:start="173:13" pos:end="173:41"><operator pos:start="173:13" pos:end="173:13">!</operator><operator pos:start="173:14" pos:end="173:14">(</operator><name pos:start="173:15" pos:end="173:15">p</name> <operator pos:start="173:17" pos:end="173:17">=</operator> <call pos:start="173:19" pos:end="173:40"><name pos:start="173:19" pos:end="173:34">lock_user_string</name><argument_list pos:start="173:35" pos:end="173:40">(<argument pos:start="173:36" pos:end="173:39"><expr pos:start="173:36" pos:end="173:39"><name pos:start="173:36" pos:end="173:39">arg2</name></expr></argument>)</argument_list></call><operator pos:start="173:41" pos:end="173:41">)</operator></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:24"><block_content pos:start="175:13" pos:end="175:24">

            <goto pos:start="175:13" pos:end="175:24">goto <name pos:start="175:18" pos:end="175:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="177:9" pos:end="183:42"><expr pos:start="177:9" pos:end="183:41"><name pos:start="177:9" pos:end="177:11">ret</name> <operator pos:start="177:13" pos:end="177:13">=</operator> <call pos:start="177:15" pos:end="183:41"><name pos:start="177:15" pos:end="177:23">get_errno</name><argument_list pos:start="177:24" pos:end="183:41">(<argument pos:start="177:25" pos:end="183:40"><expr pos:start="177:25" pos:end="183:40"><call pos:start="177:25" pos:end="183:40"><name pos:start="177:25" pos:end="177:34">sys_openat</name><argument_list pos:start="177:35" pos:end="183:40">(<argument pos:start="177:36" pos:end="177:39"><expr pos:start="177:36" pos:end="177:39"><name pos:start="177:36" pos:end="177:39">arg1</name></expr></argument>,

                                   <argument pos:start="179:36" pos:end="179:42"><expr pos:start="179:36" pos:end="179:42"><call pos:start="179:36" pos:end="179:42"><name pos:start="179:36" pos:end="179:39">path</name><argument_list pos:start="179:40" pos:end="179:42">(<argument pos:start="179:41" pos:end="179:41"><expr pos:start="179:41" pos:end="179:41"><name pos:start="179:41" pos:end="179:41">p</name></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="181:36" pos:end="181:80"><expr pos:start="181:36" pos:end="181:80"><call pos:start="181:36" pos:end="181:80"><name pos:start="181:36" pos:end="181:57">target_to_host_bitmask</name><argument_list pos:start="181:58" pos:end="181:80">(<argument pos:start="181:59" pos:end="181:62"><expr pos:start="181:59" pos:end="181:62"><name pos:start="181:59" pos:end="181:62">arg3</name></expr></argument>, <argument pos:start="181:65" pos:end="181:79"><expr pos:start="181:65" pos:end="181:79"><name pos:start="181:65" pos:end="181:79">fcntl_flags_tbl</name></expr></argument>)</argument_list></call></expr></argument>,

                                   <argument pos:start="183:36" pos:end="183:39"><expr pos:start="183:36" pos:end="183:39"><name pos:start="183:36" pos:end="183:39">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:32"><expr pos:start="185:9" pos:end="185:31"><call pos:start="185:9" pos:end="185:31"><name pos:start="185:9" pos:end="185:19">unlock_user</name><argument_list pos:start="185:20" pos:end="185:31">(<argument pos:start="185:21" pos:end="185:21"><expr pos:start="185:21" pos:end="185:21"><name pos:start="185:21" pos:end="185:21">p</name></expr></argument>, <argument pos:start="185:24" pos:end="185:27"><expr pos:start="185:24" pos:end="185:27"><name pos:start="185:24" pos:end="185:27">arg2</name></expr></argument>, <argument pos:start="185:30" pos:end="185:30"><expr pos:start="185:30" pos:end="185:30"><literal type="number" pos:start="185:30" pos:end="185:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="187:9" pos:end="190:0">break;</break>

<cpp:endif pos:start="189:1" pos:end="189:6">#<cpp:directive pos:start="189:2" pos:end="189:6">endif</cpp:directive></cpp:endif>

    <case pos:start="191:5" pos:end="191:25">case <expr pos:start="191:10" pos:end="191:24"><name pos:start="191:10" pos:end="191:24">TARGET_NR_close</name></expr>:</case>

        <expr_stmt pos:start="193:9" pos:end="193:37"><expr pos:start="193:9" pos:end="193:36"><name pos:start="193:9" pos:end="193:11">ret</name> <operator pos:start="193:13" pos:end="193:13">=</operator> <call pos:start="193:15" pos:end="193:36"><name pos:start="193:15" pos:end="193:23">get_errno</name><argument_list pos:start="193:24" pos:end="193:36">(<argument pos:start="193:25" pos:end="193:35"><expr pos:start="193:25" pos:end="193:35"><call pos:start="193:25" pos:end="193:35"><name pos:start="193:25" pos:end="193:29">close</name><argument_list pos:start="193:30" pos:end="193:35">(<argument pos:start="193:31" pos:end="193:34"><expr pos:start="193:31" pos:end="193:34"><name pos:start="193:31" pos:end="193:34">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="195:9" pos:end="195:14">break;</break>

    <case pos:start="197:5" pos:end="197:23">case <expr pos:start="197:10" pos:end="197:22"><name pos:start="197:10" pos:end="197:22">TARGET_NR_brk</name></expr>:</case>

        <expr_stmt pos:start="199:9" pos:end="199:27"><expr pos:start="199:9" pos:end="199:26"><name pos:start="199:9" pos:end="199:11">ret</name> <operator pos:start="199:13" pos:end="199:13">=</operator> <call pos:start="199:15" pos:end="199:26"><name pos:start="199:15" pos:end="199:20">do_brk</name><argument_list pos:start="199:21" pos:end="199:26">(<argument pos:start="199:22" pos:end="199:25"><expr pos:start="199:22" pos:end="199:25"><name pos:start="199:22" pos:end="199:25">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="201:9" pos:end="201:14">break;</break>

    <case pos:start="203:5" pos:end="203:24">case <expr pos:start="203:10" pos:end="203:23"><name pos:start="203:10" pos:end="203:23">TARGET_NR_fork</name></expr>:</case>

        <expr_stmt pos:start="205:9" pos:end="205:63"><expr pos:start="205:9" pos:end="205:62"><name pos:start="205:9" pos:end="205:11">ret</name> <operator pos:start="205:13" pos:end="205:13">=</operator> <call pos:start="205:15" pos:end="205:62"><name pos:start="205:15" pos:end="205:23">get_errno</name><argument_list pos:start="205:24" pos:end="205:62">(<argument pos:start="205:25" pos:end="205:61"><expr pos:start="205:25" pos:end="205:61"><call pos:start="205:25" pos:end="205:61"><name pos:start="205:25" pos:end="205:31">do_fork</name><argument_list pos:start="205:32" pos:end="205:61">(<argument pos:start="205:33" pos:end="205:39"><expr pos:start="205:33" pos:end="205:39"><name pos:start="205:33" pos:end="205:39">cpu_env</name></expr></argument>, <argument pos:start="205:42" pos:end="205:48"><expr pos:start="205:42" pos:end="205:48"><name pos:start="205:42" pos:end="205:48">SIGCHLD</name></expr></argument>, <argument pos:start="205:51" pos:end="205:51"><expr pos:start="205:51" pos:end="205:51"><literal type="number" pos:start="205:51" pos:end="205:51">0</literal></expr></argument>, <argument pos:start="205:54" pos:end="205:54"><expr pos:start="205:54" pos:end="205:54"><literal type="number" pos:start="205:54" pos:end="205:54">0</literal></expr></argument>, <argument pos:start="205:57" pos:end="205:57"><expr pos:start="205:57" pos:end="205:57"><literal type="number" pos:start="205:57" pos:end="205:57">0</literal></expr></argument>, <argument pos:start="205:60" pos:end="205:60"><expr pos:start="205:60" pos:end="205:60"><literal type="number" pos:start="205:60" pos:end="205:60">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="207:9" pos:end="210:0">break;</break>

<cpp:ifdef pos:start="209:1" pos:end="209:24">#<cpp:directive pos:start="209:2" pos:end="209:6">ifdef</cpp:directive> <name pos:start="209:8" pos:end="209:24">TARGET_NR_waitpid</name></cpp:ifdef>

    <case pos:start="211:5" pos:end="211:27">case <expr pos:start="211:10" pos:end="211:26"><name pos:start="211:10" pos:end="211:26">TARGET_NR_waitpid</name></expr>:</case>

        <block pos:start="213:9" pos:end="225:9">{<block_content pos:start="215:13" pos:end="223:28">

            <decl_stmt pos:start="215:13" pos:end="215:23"><decl pos:start="215:13" pos:end="215:22"><type pos:start="215:13" pos:end="215:15"><name pos:start="215:13" pos:end="215:15">int</name></type> <name pos:start="215:17" pos:end="215:22">status</name></decl>;</decl_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:58"><expr pos:start="217:13" pos:end="217:57"><name pos:start="217:13" pos:end="217:15">ret</name> <operator pos:start="217:17" pos:end="217:17">=</operator> <call pos:start="217:19" pos:end="217:57"><name pos:start="217:19" pos:end="217:27">get_errno</name><argument_list pos:start="217:28" pos:end="217:57">(<argument pos:start="217:29" pos:end="217:56"><expr pos:start="217:29" pos:end="217:56"><call pos:start="217:29" pos:end="217:56"><name pos:start="217:29" pos:end="217:35">waitpid</name><argument_list pos:start="217:36" pos:end="217:56">(<argument pos:start="217:37" pos:end="217:40"><expr pos:start="217:37" pos:end="217:40"><name pos:start="217:37" pos:end="217:40">arg1</name></expr></argument>, <argument pos:start="217:43" pos:end="217:49"><expr pos:start="217:43" pos:end="217:49"><operator pos:start="217:43" pos:end="217:43">&amp;</operator><name pos:start="217:44" pos:end="217:49">status</name></expr></argument>, <argument pos:start="217:52" pos:end="217:55"><expr pos:start="217:52" pos:end="217:55"><name pos:start="217:52" pos:end="217:55">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="219:13" pos:end="223:28"><if pos:start="219:13" pos:end="223:28">if <condition pos:start="219:16" pos:end="221:73">(<expr pos:start="219:17" pos:end="221:72"><operator pos:start="219:17" pos:end="219:17">!</operator><call pos:start="219:18" pos:end="219:30"><name pos:start="219:18" pos:end="219:25">is_error</name><argument_list pos:start="219:26" pos:end="219:30">(<argument pos:start="219:27" pos:end="219:29"><expr pos:start="219:27" pos:end="219:29"><name pos:start="219:27" pos:end="219:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="219:32" pos:end="219:33">&amp;&amp;</operator> <name pos:start="219:35" pos:end="219:38">arg2</name>

                <operator pos:start="221:17" pos:end="221:18">&amp;&amp;</operator> <call pos:start="221:20" pos:end="221:72"><name pos:start="221:20" pos:end="221:31">put_user_s32</name><argument_list pos:start="221:32" pos:end="221:72">(<argument pos:start="221:33" pos:end="221:65"><expr pos:start="221:33" pos:end="221:65"><call pos:start="221:33" pos:end="221:65"><name pos:start="221:33" pos:end="221:57">host_to_target_waitstatus</name><argument_list pos:start="221:58" pos:end="221:65">(<argument pos:start="221:59" pos:end="221:64"><expr pos:start="221:59" pos:end="221:64"><name pos:start="221:59" pos:end="221:64">status</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="221:68" pos:end="221:71"><expr pos:start="221:68" pos:end="221:71"><name pos:start="221:68" pos:end="221:71">arg2</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="223:17" pos:end="223:28"><block_content pos:start="223:17" pos:end="223:28">

                <goto pos:start="223:17" pos:end="223:28">goto <name pos:start="223:22" pos:end="223:27">efault</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="227:9" pos:end="232:0">break;</break>

<cpp:endif pos:start="229:1" pos:end="229:6">#<cpp:directive pos:start="229:2" pos:end="229:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="231:1" pos:end="231:23">#<cpp:directive pos:start="231:2" pos:end="231:6">ifdef</cpp:directive> <name pos:start="231:8" pos:end="231:23">TARGET_NR_waitid</name></cpp:ifdef>

    <case pos:start="233:5" pos:end="233:26">case <expr pos:start="233:10" pos:end="233:25"><name pos:start="233:10" pos:end="233:25">TARGET_NR_waitid</name></expr>:</case>

        <block pos:start="235:9" pos:end="255:9">{<block_content pos:start="237:13" pos:end="253:13">

            <decl_stmt pos:start="237:13" pos:end="237:27"><decl pos:start="237:13" pos:end="237:26"><type pos:start="237:13" pos:end="237:21"><name pos:start="237:13" pos:end="237:21">siginfo_t</name></type> <name pos:start="237:23" pos:end="237:26">info</name></decl>;</decl_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:28"><expr pos:start="239:13" pos:end="239:27"><name pos:start="239:13" pos:end="239:23"><name pos:start="239:13" pos:end="239:16">info</name><operator pos:start="239:17" pos:end="239:17">.</operator><name pos:start="239:18" pos:end="239:23">si_pid</name></name> <operator pos:start="239:25" pos:end="239:25">=</operator> <literal type="number" pos:start="239:27" pos:end="239:27">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:61"><expr pos:start="241:13" pos:end="241:60"><name pos:start="241:13" pos:end="241:15">ret</name> <operator pos:start="241:17" pos:end="241:17">=</operator> <call pos:start="241:19" pos:end="241:60"><name pos:start="241:19" pos:end="241:27">get_errno</name><argument_list pos:start="241:28" pos:end="241:60">(<argument pos:start="241:29" pos:end="241:59"><expr pos:start="241:29" pos:end="241:59"><call pos:start="241:29" pos:end="241:59"><name pos:start="241:29" pos:end="241:34">waitid</name><argument_list pos:start="241:35" pos:end="241:59">(<argument pos:start="241:36" pos:end="241:39"><expr pos:start="241:36" pos:end="241:39"><name pos:start="241:36" pos:end="241:39">arg1</name></expr></argument>, <argument pos:start="241:42" pos:end="241:45"><expr pos:start="241:42" pos:end="241:45"><name pos:start="241:42" pos:end="241:45">arg2</name></expr></argument>, <argument pos:start="241:48" pos:end="241:52"><expr pos:start="241:48" pos:end="241:52"><operator pos:start="241:48" pos:end="241:48">&amp;</operator><name pos:start="241:49" pos:end="241:52">info</name></expr></argument>, <argument pos:start="241:55" pos:end="241:58"><expr pos:start="241:55" pos:end="241:58"><name pos:start="241:55" pos:end="241:58">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="243:13" pos:end="253:13"><if pos:start="243:13" pos:end="253:13">if <condition pos:start="243:16" pos:end="243:59">(<expr pos:start="243:17" pos:end="243:58"><operator pos:start="243:17" pos:end="243:17">!</operator><call pos:start="243:18" pos:end="243:30"><name pos:start="243:18" pos:end="243:25">is_error</name><argument_list pos:start="243:26" pos:end="243:30">(<argument pos:start="243:27" pos:end="243:29"><expr pos:start="243:27" pos:end="243:29"><name pos:start="243:27" pos:end="243:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="243:32" pos:end="243:33">&amp;&amp;</operator> <name pos:start="243:35" pos:end="243:38">arg3</name> <operator pos:start="243:40" pos:end="243:41">&amp;&amp;</operator> <name pos:start="243:43" pos:end="243:53"><name pos:start="243:43" pos:end="243:46">info</name><operator pos:start="243:47" pos:end="243:47">.</operator><name pos:start="243:48" pos:end="243:53">si_pid</name></name> <operator pos:start="243:55" pos:end="243:56">!=</operator> <literal type="number" pos:start="243:58" pos:end="243:58">0</literal></expr>)</condition> <block pos:start="243:61" pos:end="253:13">{<block_content pos:start="245:17" pos:end="251:63">

                <if_stmt pos:start="245:17" pos:end="247:32"><if pos:start="245:17" pos:end="247:32">if <condition pos:start="245:20" pos:end="245:86">(<expr pos:start="245:21" pos:end="245:85"><operator pos:start="245:21" pos:end="245:21">!</operator><operator pos:start="245:22" pos:end="245:22">(</operator><name pos:start="245:23" pos:end="245:23">p</name> <operator pos:start="245:25" pos:end="245:25">=</operator> <call pos:start="245:27" pos:end="245:84"><name pos:start="245:27" pos:end="245:35">lock_user</name><argument_list pos:start="245:36" pos:end="245:84">(<argument pos:start="245:37" pos:end="245:48"><expr pos:start="245:37" pos:end="245:48"><name pos:start="245:37" pos:end="245:48">VERIFY_WRITE</name></expr></argument>, <argument pos:start="245:51" pos:end="245:54"><expr pos:start="245:51" pos:end="245:54"><name pos:start="245:51" pos:end="245:54">arg3</name></expr></argument>, <argument pos:start="245:57" pos:end="245:80"><expr pos:start="245:57" pos:end="245:80"><sizeof pos:start="245:57" pos:end="245:80">sizeof<argument_list pos:start="245:63" pos:end="245:80">(<argument pos:start="245:64" pos:end="245:79"><expr pos:start="245:64" pos:end="245:79"><name pos:start="245:64" pos:end="245:79">target_siginfo_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="245:83" pos:end="245:83"><expr pos:start="245:83" pos:end="245:83"><literal type="number" pos:start="245:83" pos:end="245:83">0</literal></expr></argument>)</argument_list></call><operator pos:start="245:85" pos:end="245:85">)</operator></expr>)</condition><block type="pseudo" pos:start="247:21" pos:end="247:32"><block_content pos:start="247:21" pos:end="247:32">

                    <goto pos:start="247:21" pos:end="247:32">goto <name pos:start="247:26" pos:end="247:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:49"><expr pos:start="249:17" pos:end="249:48"><call pos:start="249:17" pos:end="249:48"><name pos:start="249:17" pos:end="249:38">host_to_target_siginfo</name><argument_list pos:start="249:39" pos:end="249:48">(<argument pos:start="249:40" pos:end="249:40"><expr pos:start="249:40" pos:end="249:40"><name pos:start="249:40" pos:end="249:40">p</name></expr></argument>, <argument pos:start="249:43" pos:end="249:47"><expr pos:start="249:43" pos:end="249:47"><operator pos:start="249:43" pos:end="249:43">&amp;</operator><name pos:start="249:44" pos:end="249:47">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:63"><expr pos:start="251:17" pos:end="251:62"><call pos:start="251:17" pos:end="251:62"><name pos:start="251:17" pos:end="251:27">unlock_user</name><argument_list pos:start="251:28" pos:end="251:62">(<argument pos:start="251:29" pos:end="251:29"><expr pos:start="251:29" pos:end="251:29"><name pos:start="251:29" pos:end="251:29">p</name></expr></argument>, <argument pos:start="251:32" pos:end="251:35"><expr pos:start="251:32" pos:end="251:35"><name pos:start="251:32" pos:end="251:35">arg3</name></expr></argument>, <argument pos:start="251:38" pos:end="251:61"><expr pos:start="251:38" pos:end="251:61"><sizeof pos:start="251:38" pos:end="251:61">sizeof<argument_list pos:start="251:44" pos:end="251:61">(<argument pos:start="251:45" pos:end="251:60"><expr pos:start="251:45" pos:end="251:60"><name pos:start="251:45" pos:end="251:60">target_siginfo_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="257:9" pos:end="262:0">break;</break>

<cpp:endif pos:start="259:1" pos:end="259:6">#<cpp:directive pos:start="259:2" pos:end="259:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="261:1" pos:end="261:22">#<cpp:directive pos:start="261:2" pos:end="261:6">ifdef</cpp:directive> <name pos:start="261:8" pos:end="261:22">TARGET_NR_creat</name></cpp:ifdef> <comment type="block" pos:start="261:24" pos:end="261:41">/* not on alpha */</comment>

    <case pos:start="263:5" pos:end="263:25">case <expr pos:start="263:10" pos:end="263:24"><name pos:start="263:10" pos:end="263:24">TARGET_NR_creat</name></expr>:</case>

        <if_stmt pos:start="265:9" pos:end="267:24"><if pos:start="265:9" pos:end="267:24">if <condition pos:start="265:12" pos:end="265:42">(<expr pos:start="265:13" pos:end="265:41"><operator pos:start="265:13" pos:end="265:13">!</operator><operator pos:start="265:14" pos:end="265:14">(</operator><name pos:start="265:15" pos:end="265:15">p</name> <operator pos:start="265:17" pos:end="265:17">=</operator> <call pos:start="265:19" pos:end="265:40"><name pos:start="265:19" pos:end="265:34">lock_user_string</name><argument_list pos:start="265:35" pos:end="265:40">(<argument pos:start="265:36" pos:end="265:39"><expr pos:start="265:36" pos:end="265:39"><name pos:start="265:36" pos:end="265:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="265:41" pos:end="265:41">)</operator></expr>)</condition><block type="pseudo" pos:start="267:13" pos:end="267:24"><block_content pos:start="267:13" pos:end="267:24">

            <goto pos:start="267:13" pos:end="267:24">goto <name pos:start="267:18" pos:end="267:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:40"><expr pos:start="269:9" pos:end="269:39"><name pos:start="269:9" pos:end="269:11">ret</name> <operator pos:start="269:13" pos:end="269:13">=</operator> <call pos:start="269:15" pos:end="269:39"><name pos:start="269:15" pos:end="269:23">get_errno</name><argument_list pos:start="269:24" pos:end="269:39">(<argument pos:start="269:25" pos:end="269:38"><expr pos:start="269:25" pos:end="269:38"><call pos:start="269:25" pos:end="269:38"><name pos:start="269:25" pos:end="269:29">creat</name><argument_list pos:start="269:30" pos:end="269:38">(<argument pos:start="269:31" pos:end="269:31"><expr pos:start="269:31" pos:end="269:31"><name pos:start="269:31" pos:end="269:31">p</name></expr></argument>, <argument pos:start="269:34" pos:end="269:37"><expr pos:start="269:34" pos:end="269:37"><name pos:start="269:34" pos:end="269:37">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:32"><expr pos:start="271:9" pos:end="271:31"><call pos:start="271:9" pos:end="271:31"><name pos:start="271:9" pos:end="271:19">unlock_user</name><argument_list pos:start="271:20" pos:end="271:31">(<argument pos:start="271:21" pos:end="271:21"><expr pos:start="271:21" pos:end="271:21"><name pos:start="271:21" pos:end="271:21">p</name></expr></argument>, <argument pos:start="271:24" pos:end="271:27"><expr pos:start="271:24" pos:end="271:27"><name pos:start="271:24" pos:end="271:27">arg1</name></expr></argument>, <argument pos:start="271:30" pos:end="271:30"><expr pos:start="271:30" pos:end="271:30"><literal type="number" pos:start="271:30" pos:end="271:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="273:9" pos:end="276:0">break;</break>

<cpp:endif pos:start="275:1" pos:end="275:6">#<cpp:directive pos:start="275:2" pos:end="275:6">endif</cpp:directive></cpp:endif>

    <case pos:start="277:5" pos:end="277:24">case <expr pos:start="277:10" pos:end="277:23"><name pos:start="277:10" pos:end="277:23">TARGET_NR_link</name></expr>:</case>

        <block pos:start="279:9" pos:end="299:9">{<block_content pos:start="281:13" pos:end="297:36">

            <decl_stmt pos:start="281:13" pos:end="281:22"><decl pos:start="281:13" pos:end="281:21"><type pos:start="281:13" pos:end="281:18"><name pos:start="281:13" pos:end="281:16">void</name> <modifier pos:start="281:18" pos:end="281:18">*</modifier></type> <name pos:start="281:20" pos:end="281:21">p2</name></decl>;</decl_stmt>

            <expr_stmt pos:start="283:13" pos:end="283:39"><expr pos:start="283:13" pos:end="283:38"><name pos:start="283:13" pos:end="283:13">p</name> <operator pos:start="283:15" pos:end="283:15">=</operator> <call pos:start="283:17" pos:end="283:38"><name pos:start="283:17" pos:end="283:32">lock_user_string</name><argument_list pos:start="283:33" pos:end="283:38">(<argument pos:start="283:34" pos:end="283:37"><expr pos:start="283:34" pos:end="283:37"><name pos:start="283:34" pos:end="283:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:40"><expr pos:start="285:13" pos:end="285:39"><name pos:start="285:13" pos:end="285:14">p2</name> <operator pos:start="285:16" pos:end="285:16">=</operator> <call pos:start="285:18" pos:end="285:39"><name pos:start="285:18" pos:end="285:33">lock_user_string</name><argument_list pos:start="285:34" pos:end="285:39">(<argument pos:start="285:35" pos:end="285:38"><expr pos:start="285:35" pos:end="285:38"><name pos:start="285:35" pos:end="285:38">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="287:13" pos:end="293:45"><if pos:start="287:13" pos:end="289:37">if <condition pos:start="287:16" pos:end="287:26">(<expr pos:start="287:17" pos:end="287:25"><operator pos:start="287:17" pos:end="287:17">!</operator><name pos:start="287:18" pos:end="287:18">p</name> <operator pos:start="287:20" pos:end="287:21">||</operator> <operator pos:start="287:23" pos:end="287:23">!</operator><name pos:start="287:24" pos:end="287:25">p2</name></expr>)</condition><block type="pseudo" pos:start="289:17" pos:end="289:37"><block_content pos:start="289:17" pos:end="289:37">

                <expr_stmt pos:start="289:17" pos:end="289:37"><expr pos:start="289:17" pos:end="289:36"><name pos:start="289:17" pos:end="289:19">ret</name> <operator pos:start="289:21" pos:end="289:21">=</operator> <operator pos:start="289:23" pos:end="289:23">-</operator><name pos:start="289:24" pos:end="289:36">TARGET_EFAULT</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="291:13" pos:end="293:45">else<block type="pseudo" pos:start="293:17" pos:end="293:45"><block_content pos:start="293:17" pos:end="293:45">

                <expr_stmt pos:start="293:17" pos:end="293:45"><expr pos:start="293:17" pos:end="293:44"><name pos:start="293:17" pos:end="293:19">ret</name> <operator pos:start="293:21" pos:end="293:21">=</operator> <call pos:start="293:23" pos:end="293:44"><name pos:start="293:23" pos:end="293:31">get_errno</name><argument_list pos:start="293:32" pos:end="293:44">(<argument pos:start="293:33" pos:end="293:43"><expr pos:start="293:33" pos:end="293:43"><call pos:start="293:33" pos:end="293:43"><name pos:start="293:33" pos:end="293:36">link</name><argument_list pos:start="293:37" pos:end="293:43">(<argument pos:start="293:38" pos:end="293:38"><expr pos:start="293:38" pos:end="293:38"><name pos:start="293:38" pos:end="293:38">p</name></expr></argument>, <argument pos:start="293:41" pos:end="293:42"><expr pos:start="293:41" pos:end="293:42"><name pos:start="293:41" pos:end="293:42">p2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:37"><expr pos:start="295:13" pos:end="295:36"><call pos:start="295:13" pos:end="295:36"><name pos:start="295:13" pos:end="295:23">unlock_user</name><argument_list pos:start="295:24" pos:end="295:36">(<argument pos:start="295:25" pos:end="295:26"><expr pos:start="295:25" pos:end="295:26"><name pos:start="295:25" pos:end="295:26">p2</name></expr></argument>, <argument pos:start="295:29" pos:end="295:32"><expr pos:start="295:29" pos:end="295:32"><name pos:start="295:29" pos:end="295:32">arg2</name></expr></argument>, <argument pos:start="295:35" pos:end="295:35"><expr pos:start="295:35" pos:end="295:35"><literal type="number" pos:start="295:35" pos:end="295:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:36"><expr pos:start="297:13" pos:end="297:35"><call pos:start="297:13" pos:end="297:35"><name pos:start="297:13" pos:end="297:23">unlock_user</name><argument_list pos:start="297:24" pos:end="297:35">(<argument pos:start="297:25" pos:end="297:25"><expr pos:start="297:25" pos:end="297:25"><name pos:start="297:25" pos:end="297:25">p</name></expr></argument>, <argument pos:start="297:28" pos:end="297:31"><expr pos:start="297:28" pos:end="297:31"><name pos:start="297:28" pos:end="297:31">arg1</name></expr></argument>, <argument pos:start="297:34" pos:end="297:34"><expr pos:start="297:34" pos:end="297:34"><literal type="number" pos:start="297:34" pos:end="297:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="301:9" pos:end="304:0">break;</break>

<cpp:if pos:start="303:1" pos:end="303:53">#<cpp:directive pos:start="303:2" pos:end="303:3">if</cpp:directive> <expr pos:start="303:5" pos:end="303:53"><call pos:start="303:5" pos:end="303:29"><name pos:start="303:5" pos:end="303:11">defined</name><argument_list pos:start="303:12" pos:end="303:29">(<argument pos:start="303:13" pos:end="303:28"><expr pos:start="303:13" pos:end="303:28"><name pos:start="303:13" pos:end="303:28">TARGET_NR_linkat</name></expr></argument>)</argument_list></call> <operator pos:start="303:31" pos:end="303:32">&amp;&amp;</operator> <call pos:start="303:34" pos:end="303:53"><name pos:start="303:34" pos:end="303:40">defined</name><argument_list pos:start="303:41" pos:end="303:53">(<argument pos:start="303:42" pos:end="303:52"><expr pos:start="303:42" pos:end="303:52"><name pos:start="303:42" pos:end="303:52">__NR_linkat</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="305:5" pos:end="305:26">case <expr pos:start="305:10" pos:end="305:25"><name pos:start="305:10" pos:end="305:25">TARGET_NR_linkat</name></expr>:</case>

        <block pos:start="307:9" pos:end="331:9">{<block_content pos:start="309:13" pos:end="329:37">

            <decl_stmt pos:start="309:13" pos:end="309:29"><decl pos:start="309:13" pos:end="309:28"><type pos:start="309:13" pos:end="309:18"><name pos:start="309:13" pos:end="309:16">void</name> <modifier pos:start="309:18" pos:end="309:18">*</modifier></type> <name pos:start="309:20" pos:end="309:21">p2</name> <init pos:start="309:23" pos:end="309:28">= <expr pos:start="309:25" pos:end="309:28"><name pos:start="309:25" pos:end="309:28">NULL</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="311:13" pos:end="313:28"><if pos:start="311:13" pos:end="313:28">if <condition pos:start="311:16" pos:end="311:31">(<expr pos:start="311:17" pos:end="311:30"><operator pos:start="311:17" pos:end="311:17">!</operator><name pos:start="311:18" pos:end="311:21">arg2</name> <operator pos:start="311:23" pos:end="311:24">||</operator> <operator pos:start="311:26" pos:end="311:26">!</operator><name pos:start="311:27" pos:end="311:30">arg4</name></expr>)</condition><block type="pseudo" pos:start="313:17" pos:end="313:28"><block_content pos:start="313:17" pos:end="313:28">

                <goto pos:start="313:17" pos:end="313:28">goto <name pos:start="313:22" pos:end="313:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:40"><expr pos:start="315:13" pos:end="315:39"><name pos:start="315:13" pos:end="315:13">p</name>  <operator pos:start="315:16" pos:end="315:16">=</operator> <call pos:start="315:18" pos:end="315:39"><name pos:start="315:18" pos:end="315:33">lock_user_string</name><argument_list pos:start="315:34" pos:end="315:39">(<argument pos:start="315:35" pos:end="315:38"><expr pos:start="315:35" pos:end="315:38"><name pos:start="315:35" pos:end="315:38">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="317:13" pos:end="317:40"><expr pos:start="317:13" pos:end="317:39"><name pos:start="317:13" pos:end="317:14">p2</name> <operator pos:start="317:16" pos:end="317:16">=</operator> <call pos:start="317:18" pos:end="317:39"><name pos:start="317:18" pos:end="317:33">lock_user_string</name><argument_list pos:start="317:34" pos:end="317:39">(<argument pos:start="317:35" pos:end="317:38"><expr pos:start="317:35" pos:end="317:38"><name pos:start="317:35" pos:end="317:38">arg4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="319:13" pos:end="325:69"><if pos:start="319:13" pos:end="321:37">if <condition pos:start="319:16" pos:end="319:26">(<expr pos:start="319:17" pos:end="319:25"><operator pos:start="319:17" pos:end="319:17">!</operator><name pos:start="319:18" pos:end="319:18">p</name> <operator pos:start="319:20" pos:end="319:21">||</operator> <operator pos:start="319:23" pos:end="319:23">!</operator><name pos:start="319:24" pos:end="319:25">p2</name></expr>)</condition><block type="pseudo" pos:start="321:17" pos:end="321:37"><block_content pos:start="321:17" pos:end="321:37">

                <expr_stmt pos:start="321:17" pos:end="321:37"><expr pos:start="321:17" pos:end="321:36"><name pos:start="321:17" pos:end="321:19">ret</name> <operator pos:start="321:21" pos:end="321:21">=</operator> <operator pos:start="321:23" pos:end="321:23">-</operator><name pos:start="321:24" pos:end="321:36">TARGET_EFAULT</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="323:13" pos:end="325:69">else<block type="pseudo" pos:start="325:17" pos:end="325:69"><block_content pos:start="325:17" pos:end="325:69">

                <expr_stmt pos:start="325:17" pos:end="325:69"><expr pos:start="325:17" pos:end="325:68"><name pos:start="325:17" pos:end="325:19">ret</name> <operator pos:start="325:21" pos:end="325:21">=</operator> <call pos:start="325:23" pos:end="325:68"><name pos:start="325:23" pos:end="325:31">get_errno</name><argument_list pos:start="325:32" pos:end="325:68">(<argument pos:start="325:33" pos:end="325:67"><expr pos:start="325:33" pos:end="325:67"><call pos:start="325:33" pos:end="325:67"><name pos:start="325:33" pos:end="325:42">sys_linkat</name><argument_list pos:start="325:43" pos:end="325:67">(<argument pos:start="325:44" pos:end="325:47"><expr pos:start="325:44" pos:end="325:47"><name pos:start="325:44" pos:end="325:47">arg1</name></expr></argument>, <argument pos:start="325:50" pos:end="325:50"><expr pos:start="325:50" pos:end="325:50"><name pos:start="325:50" pos:end="325:50">p</name></expr></argument>, <argument pos:start="325:53" pos:end="325:56"><expr pos:start="325:53" pos:end="325:56"><name pos:start="325:53" pos:end="325:56">arg3</name></expr></argument>, <argument pos:start="325:59" pos:end="325:60"><expr pos:start="325:59" pos:end="325:60"><name pos:start="325:59" pos:end="325:60">p2</name></expr></argument>, <argument pos:start="325:63" pos:end="325:66"><expr pos:start="325:63" pos:end="325:66"><name pos:start="325:63" pos:end="325:66">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="327:13" pos:end="327:36"><expr pos:start="327:13" pos:end="327:35"><call pos:start="327:13" pos:end="327:35"><name pos:start="327:13" pos:end="327:23">unlock_user</name><argument_list pos:start="327:24" pos:end="327:35">(<argument pos:start="327:25" pos:end="327:25"><expr pos:start="327:25" pos:end="327:25"><name pos:start="327:25" pos:end="327:25">p</name></expr></argument>, <argument pos:start="327:28" pos:end="327:31"><expr pos:start="327:28" pos:end="327:31"><name pos:start="327:28" pos:end="327:31">arg2</name></expr></argument>, <argument pos:start="327:34" pos:end="327:34"><expr pos:start="327:34" pos:end="327:34"><literal type="number" pos:start="327:34" pos:end="327:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:37"><expr pos:start="329:13" pos:end="329:36"><call pos:start="329:13" pos:end="329:36"><name pos:start="329:13" pos:end="329:23">unlock_user</name><argument_list pos:start="329:24" pos:end="329:36">(<argument pos:start="329:25" pos:end="329:26"><expr pos:start="329:25" pos:end="329:26"><name pos:start="329:25" pos:end="329:26">p2</name></expr></argument>, <argument pos:start="329:29" pos:end="329:32"><expr pos:start="329:29" pos:end="329:32"><name pos:start="329:29" pos:end="329:32">arg4</name></expr></argument>, <argument pos:start="329:35" pos:end="329:35"><expr pos:start="329:35" pos:end="329:35"><literal type="number" pos:start="329:35" pos:end="329:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="333:9" pos:end="336:0">break;</break>

<cpp:endif pos:start="335:1" pos:end="335:6">#<cpp:directive pos:start="335:2" pos:end="335:6">endif</cpp:directive></cpp:endif>

    <case pos:start="337:5" pos:end="337:26">case <expr pos:start="337:10" pos:end="337:25"><name pos:start="337:10" pos:end="337:25">TARGET_NR_unlink</name></expr>:</case>

        <if_stmt pos:start="339:9" pos:end="341:24"><if pos:start="339:9" pos:end="341:24">if <condition pos:start="339:12" pos:end="339:42">(<expr pos:start="339:13" pos:end="339:41"><operator pos:start="339:13" pos:end="339:13">!</operator><operator pos:start="339:14" pos:end="339:14">(</operator><name pos:start="339:15" pos:end="339:15">p</name> <operator pos:start="339:17" pos:end="339:17">=</operator> <call pos:start="339:19" pos:end="339:40"><name pos:start="339:19" pos:end="339:34">lock_user_string</name><argument_list pos:start="339:35" pos:end="339:40">(<argument pos:start="339:36" pos:end="339:39"><expr pos:start="339:36" pos:end="339:39"><name pos:start="339:36" pos:end="339:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="339:41" pos:end="339:41">)</operator></expr>)</condition><block type="pseudo" pos:start="341:13" pos:end="341:24"><block_content pos:start="341:13" pos:end="341:24">

            <goto pos:start="341:13" pos:end="341:24">goto <name pos:start="341:18" pos:end="341:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="343:9" pos:end="343:35"><expr pos:start="343:9" pos:end="343:34"><name pos:start="343:9" pos:end="343:11">ret</name> <operator pos:start="343:13" pos:end="343:13">=</operator> <call pos:start="343:15" pos:end="343:34"><name pos:start="343:15" pos:end="343:23">get_errno</name><argument_list pos:start="343:24" pos:end="343:34">(<argument pos:start="343:25" pos:end="343:33"><expr pos:start="343:25" pos:end="343:33"><call pos:start="343:25" pos:end="343:33"><name pos:start="343:25" pos:end="343:30">unlink</name><argument_list pos:start="343:31" pos:end="343:33">(<argument pos:start="343:32" pos:end="343:32"><expr pos:start="343:32" pos:end="343:32"><name pos:start="343:32" pos:end="343:32">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="345:9" pos:end="345:32"><expr pos:start="345:9" pos:end="345:31"><call pos:start="345:9" pos:end="345:31"><name pos:start="345:9" pos:end="345:19">unlock_user</name><argument_list pos:start="345:20" pos:end="345:31">(<argument pos:start="345:21" pos:end="345:21"><expr pos:start="345:21" pos:end="345:21"><name pos:start="345:21" pos:end="345:21">p</name></expr></argument>, <argument pos:start="345:24" pos:end="345:27"><expr pos:start="345:24" pos:end="345:27"><name pos:start="345:24" pos:end="345:27">arg1</name></expr></argument>, <argument pos:start="345:30" pos:end="345:30"><expr pos:start="345:30" pos:end="345:30"><literal type="number" pos:start="345:30" pos:end="345:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="347:9" pos:end="350:0">break;</break>

<cpp:if pos:start="349:1" pos:end="349:57">#<cpp:directive pos:start="349:2" pos:end="349:3">if</cpp:directive> <expr pos:start="349:5" pos:end="349:57"><call pos:start="349:5" pos:end="349:31"><name pos:start="349:5" pos:end="349:11">defined</name><argument_list pos:start="349:12" pos:end="349:31">(<argument pos:start="349:13" pos:end="349:30"><expr pos:start="349:13" pos:end="349:30"><name pos:start="349:13" pos:end="349:30">TARGET_NR_unlinkat</name></expr></argument>)</argument_list></call> <operator pos:start="349:33" pos:end="349:34">&amp;&amp;</operator> <call pos:start="349:36" pos:end="349:57"><name pos:start="349:36" pos:end="349:42">defined</name><argument_list pos:start="349:43" pos:end="349:57">(<argument pos:start="349:44" pos:end="349:56"><expr pos:start="349:44" pos:end="349:56"><name pos:start="349:44" pos:end="349:56">__NR_unlinkat</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="351:5" pos:end="351:28">case <expr pos:start="351:10" pos:end="351:27"><name pos:start="351:10" pos:end="351:27">TARGET_NR_unlinkat</name></expr>:</case>

        <if_stmt pos:start="353:9" pos:end="355:24"><if pos:start="353:9" pos:end="355:24">if <condition pos:start="353:12" pos:end="353:42">(<expr pos:start="353:13" pos:end="353:41"><operator pos:start="353:13" pos:end="353:13">!</operator><operator pos:start="353:14" pos:end="353:14">(</operator><name pos:start="353:15" pos:end="353:15">p</name> <operator pos:start="353:17" pos:end="353:17">=</operator> <call pos:start="353:19" pos:end="353:40"><name pos:start="353:19" pos:end="353:34">lock_user_string</name><argument_list pos:start="353:35" pos:end="353:40">(<argument pos:start="353:36" pos:end="353:39"><expr pos:start="353:36" pos:end="353:39"><name pos:start="353:36" pos:end="353:39">arg2</name></expr></argument>)</argument_list></call><operator pos:start="353:41" pos:end="353:41">)</operator></expr>)</condition><block type="pseudo" pos:start="355:13" pos:end="355:24"><block_content pos:start="355:13" pos:end="355:24">

            <goto pos:start="355:13" pos:end="355:24">goto <name pos:start="355:18" pos:end="355:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="357:9" pos:end="357:53"><expr pos:start="357:9" pos:end="357:52"><name pos:start="357:9" pos:end="357:11">ret</name> <operator pos:start="357:13" pos:end="357:13">=</operator> <call pos:start="357:15" pos:end="357:52"><name pos:start="357:15" pos:end="357:23">get_errno</name><argument_list pos:start="357:24" pos:end="357:52">(<argument pos:start="357:25" pos:end="357:51"><expr pos:start="357:25" pos:end="357:51"><call pos:start="357:25" pos:end="357:51"><name pos:start="357:25" pos:end="357:36">sys_unlinkat</name><argument_list pos:start="357:37" pos:end="357:51">(<argument pos:start="357:38" pos:end="357:41"><expr pos:start="357:38" pos:end="357:41"><name pos:start="357:38" pos:end="357:41">arg1</name></expr></argument>, <argument pos:start="357:44" pos:end="357:44"><expr pos:start="357:44" pos:end="357:44"><name pos:start="357:44" pos:end="357:44">p</name></expr></argument>, <argument pos:start="357:47" pos:end="357:50"><expr pos:start="357:47" pos:end="357:50"><name pos:start="357:47" pos:end="357:50">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:32"><expr pos:start="359:9" pos:end="359:31"><call pos:start="359:9" pos:end="359:31"><name pos:start="359:9" pos:end="359:19">unlock_user</name><argument_list pos:start="359:20" pos:end="359:31">(<argument pos:start="359:21" pos:end="359:21"><expr pos:start="359:21" pos:end="359:21"><name pos:start="359:21" pos:end="359:21">p</name></expr></argument>, <argument pos:start="359:24" pos:end="359:27"><expr pos:start="359:24" pos:end="359:27"><name pos:start="359:24" pos:end="359:27">arg2</name></expr></argument>, <argument pos:start="359:30" pos:end="359:30"><expr pos:start="359:30" pos:end="359:30"><literal type="number" pos:start="359:30" pos:end="359:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="361:9" pos:end="364:0">break;</break>

<cpp:endif pos:start="363:1" pos:end="363:6">#<cpp:directive pos:start="363:2" pos:end="363:6">endif</cpp:directive></cpp:endif>

    <case pos:start="365:5" pos:end="365:26">case <expr pos:start="365:10" pos:end="365:25"><name pos:start="365:10" pos:end="365:25">TARGET_NR_execve</name></expr>:</case>

        <block pos:start="367:9" pos:end="523:9">{<block_content pos:start="369:13" pos:end="521:13">

            <decl_stmt pos:start="369:13" pos:end="369:32"><decl pos:start="369:13" pos:end="369:23"><type pos:start="369:13" pos:end="369:19"><name pos:start="369:13" pos:end="369:16">char</name> <modifier pos:start="369:18" pos:end="369:18">*</modifier><modifier pos:start="369:19" pos:end="369:19">*</modifier></type><name pos:start="369:20" pos:end="369:23">argp</name></decl>, <decl pos:start="369:26" pos:end="369:31"><type ref="prev" pos:start="369:13" pos:end="369:19"><modifier pos:start="369:26" pos:end="369:26">*</modifier><modifier pos:start="369:27" pos:end="369:27">*</modifier></type><name pos:start="369:28" pos:end="369:31">envp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="371:13" pos:end="371:27"><decl pos:start="371:13" pos:end="371:20"><type pos:start="371:13" pos:end="371:15"><name pos:start="371:13" pos:end="371:15">int</name></type> <name pos:start="371:17" pos:end="371:20">argc</name></decl>, <decl pos:start="371:23" pos:end="371:26"><type ref="prev" pos:start="371:13" pos:end="371:15"/><name pos:start="371:23" pos:end="371:26">envc</name></decl>;</decl_stmt>

            <decl_stmt pos:start="373:13" pos:end="373:25"><decl pos:start="373:13" pos:end="373:24"><type pos:start="373:13" pos:end="373:21"><name pos:start="373:13" pos:end="373:21">abi_ulong</name></type> <name pos:start="373:23" pos:end="373:24">gp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="375:13" pos:end="375:33"><decl pos:start="375:13" pos:end="375:32"><type pos:start="375:13" pos:end="375:21"><name pos:start="375:13" pos:end="375:21">abi_ulong</name></type> <name pos:start="375:23" pos:end="375:32">guest_argp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="377:13" pos:end="377:33"><decl pos:start="377:13" pos:end="377:32"><type pos:start="377:13" pos:end="377:21"><name pos:start="377:13" pos:end="377:21">abi_ulong</name></type> <name pos:start="377:23" pos:end="377:32">guest_envp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="379:13" pos:end="379:27"><decl pos:start="379:13" pos:end="379:26"><type pos:start="379:13" pos:end="379:21"><name pos:start="379:13" pos:end="379:21">abi_ulong</name></type> <name pos:start="379:23" pos:end="379:26">addr</name></decl>;</decl_stmt>

            <decl_stmt pos:start="381:13" pos:end="381:21"><decl pos:start="381:13" pos:end="381:20"><type pos:start="381:13" pos:end="381:19"><name pos:start="381:13" pos:end="381:16">char</name> <modifier pos:start="381:18" pos:end="381:18">*</modifier><modifier pos:start="381:19" pos:end="381:19">*</modifier></type><name pos:start="381:20" pos:end="381:20">q</name></decl>;</decl_stmt>



            <expr_stmt pos:start="385:13" pos:end="385:21"><expr pos:start="385:13" pos:end="385:20"><name pos:start="385:13" pos:end="385:16">argc</name> <operator pos:start="385:18" pos:end="385:18">=</operator> <literal type="number" pos:start="385:20" pos:end="385:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="387:13" pos:end="387:30"><expr pos:start="387:13" pos:end="387:29"><name pos:start="387:13" pos:end="387:22">guest_argp</name> <operator pos:start="387:24" pos:end="387:24">=</operator> <name pos:start="387:26" pos:end="387:29">arg2</name></expr>;</expr_stmt>

            <for pos:start="389:13" pos:end="401:13">for <control pos:start="389:17" pos:end="389:62">(<init pos:start="389:18" pos:end="389:33"><expr pos:start="389:18" pos:end="389:32"><name pos:start="389:18" pos:end="389:19">gp</name> <operator pos:start="389:21" pos:end="389:21">=</operator> <name pos:start="389:23" pos:end="389:32">guest_argp</name></expr>;</init> <condition pos:start="389:35" pos:end="389:37"><expr pos:start="389:35" pos:end="389:36"><name pos:start="389:35" pos:end="389:36">gp</name></expr>;</condition> <incr pos:start="389:39" pos:end="389:61"><expr pos:start="389:39" pos:end="389:61"><name pos:start="389:39" pos:end="389:40">gp</name> <operator pos:start="389:42" pos:end="389:43">+=</operator> <sizeof pos:start="389:45" pos:end="389:61">sizeof<argument_list pos:start="389:51" pos:end="389:61">(<argument pos:start="389:52" pos:end="389:60"><expr pos:start="389:52" pos:end="389:60"><name pos:start="389:52" pos:end="389:60">abi_ulong</name></expr></argument>)</argument_list></sizeof></expr></incr>)</control> <block pos:start="389:64" pos:end="401:13">{<block_content pos:start="391:17" pos:end="399:23">

                <if_stmt pos:start="391:17" pos:end="393:32"><if pos:start="391:17" pos:end="393:32">if <condition pos:start="391:20" pos:end="391:43">(<expr pos:start="391:21" pos:end="391:42"><call pos:start="391:21" pos:end="391:42"><name pos:start="391:21" pos:end="391:32">get_user_ual</name><argument_list pos:start="391:33" pos:end="391:42">(<argument pos:start="391:34" pos:end="391:37"><expr pos:start="391:34" pos:end="391:37"><name pos:start="391:34" pos:end="391:37">addr</name></expr></argument>, <argument pos:start="391:40" pos:end="391:41"><expr pos:start="391:40" pos:end="391:41"><name pos:start="391:40" pos:end="391:41">gp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="393:21" pos:end="393:32"><block_content pos:start="393:21" pos:end="393:32">

                    <goto pos:start="393:21" pos:end="393:32">goto <name pos:start="393:26" pos:end="393:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <if_stmt pos:start="395:17" pos:end="397:26"><if pos:start="395:17" pos:end="397:26">if <condition pos:start="395:20" pos:end="395:26">(<expr pos:start="395:21" pos:end="395:25"><operator pos:start="395:21" pos:end="395:21">!</operator><name pos:start="395:22" pos:end="395:25">addr</name></expr>)</condition><block type="pseudo" pos:start="397:21" pos:end="397:26"><block_content pos:start="397:21" pos:end="397:26">

                    <break pos:start="397:21" pos:end="397:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="399:17" pos:end="399:23"><expr pos:start="399:17" pos:end="399:22"><name pos:start="399:17" pos:end="399:20">argc</name><operator pos:start="399:21" pos:end="399:22">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="403:13" pos:end="403:21"><expr pos:start="403:13" pos:end="403:20"><name pos:start="403:13" pos:end="403:16">envc</name> <operator pos:start="403:18" pos:end="403:18">=</operator> <literal type="number" pos:start="403:20" pos:end="403:20">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="405:13" pos:end="405:30"><expr pos:start="405:13" pos:end="405:29"><name pos:start="405:13" pos:end="405:22">guest_envp</name> <operator pos:start="405:24" pos:end="405:24">=</operator> <name pos:start="405:26" pos:end="405:29">arg3</name></expr>;</expr_stmt>

            <for pos:start="407:13" pos:end="419:13">for <control pos:start="407:17" pos:end="407:62">(<init pos:start="407:18" pos:end="407:33"><expr pos:start="407:18" pos:end="407:32"><name pos:start="407:18" pos:end="407:19">gp</name> <operator pos:start="407:21" pos:end="407:21">=</operator> <name pos:start="407:23" pos:end="407:32">guest_envp</name></expr>;</init> <condition pos:start="407:35" pos:end="407:37"><expr pos:start="407:35" pos:end="407:36"><name pos:start="407:35" pos:end="407:36">gp</name></expr>;</condition> <incr pos:start="407:39" pos:end="407:61"><expr pos:start="407:39" pos:end="407:61"><name pos:start="407:39" pos:end="407:40">gp</name> <operator pos:start="407:42" pos:end="407:43">+=</operator> <sizeof pos:start="407:45" pos:end="407:61">sizeof<argument_list pos:start="407:51" pos:end="407:61">(<argument pos:start="407:52" pos:end="407:60"><expr pos:start="407:52" pos:end="407:60"><name pos:start="407:52" pos:end="407:60">abi_ulong</name></expr></argument>)</argument_list></sizeof></expr></incr>)</control> <block pos:start="407:64" pos:end="419:13">{<block_content pos:start="409:17" pos:end="417:23">

                <if_stmt pos:start="409:17" pos:end="411:32"><if pos:start="409:17" pos:end="411:32">if <condition pos:start="409:20" pos:end="409:43">(<expr pos:start="409:21" pos:end="409:42"><call pos:start="409:21" pos:end="409:42"><name pos:start="409:21" pos:end="409:32">get_user_ual</name><argument_list pos:start="409:33" pos:end="409:42">(<argument pos:start="409:34" pos:end="409:37"><expr pos:start="409:34" pos:end="409:37"><name pos:start="409:34" pos:end="409:37">addr</name></expr></argument>, <argument pos:start="409:40" pos:end="409:41"><expr pos:start="409:40" pos:end="409:41"><name pos:start="409:40" pos:end="409:41">gp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="411:21" pos:end="411:32"><block_content pos:start="411:21" pos:end="411:32">

                    <goto pos:start="411:21" pos:end="411:32">goto <name pos:start="411:26" pos:end="411:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <if_stmt pos:start="413:17" pos:end="415:26"><if pos:start="413:17" pos:end="415:26">if <condition pos:start="413:20" pos:end="413:26">(<expr pos:start="413:21" pos:end="413:25"><operator pos:start="413:21" pos:end="413:21">!</operator><name pos:start="413:22" pos:end="413:25">addr</name></expr>)</condition><block type="pseudo" pos:start="415:21" pos:end="415:26"><block_content pos:start="415:21" pos:end="415:26">

                    <break pos:start="415:21" pos:end="415:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="417:17" pos:end="417:23"><expr pos:start="417:17" pos:end="417:22"><name pos:start="417:17" pos:end="417:20">envc</name><operator pos:start="417:21" pos:end="417:22">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="423:13" pos:end="423:55"><expr pos:start="423:13" pos:end="423:54"><name pos:start="423:13" pos:end="423:16">argp</name> <operator pos:start="423:18" pos:end="423:18">=</operator> <call pos:start="423:20" pos:end="423:54"><name pos:start="423:20" pos:end="423:25">alloca</name><argument_list pos:start="423:26" pos:end="423:54">(<argument pos:start="423:27" pos:end="423:53"><expr pos:start="423:27" pos:end="423:53"><operator pos:start="423:27" pos:end="423:27">(</operator><name pos:start="423:28" pos:end="423:31">argc</name> <operator pos:start="423:33" pos:end="423:33">+</operator> <literal type="number" pos:start="423:35" pos:end="423:35">1</literal><operator pos:start="423:36" pos:end="423:36">)</operator> <operator pos:start="423:38" pos:end="423:38">*</operator> <sizeof pos:start="423:40" pos:end="423:53">sizeof<argument_list pos:start="423:46" pos:end="423:53">(<argument pos:start="423:47" pos:end="423:52"><expr pos:start="423:47" pos:end="423:52"><name pos:start="423:47" pos:end="423:50">void</name> <operator pos:start="423:52" pos:end="423:52">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:55"><expr pos:start="425:13" pos:end="425:54"><name pos:start="425:13" pos:end="425:16">envp</name> <operator pos:start="425:18" pos:end="425:18">=</operator> <call pos:start="425:20" pos:end="425:54"><name pos:start="425:20" pos:end="425:25">alloca</name><argument_list pos:start="425:26" pos:end="425:54">(<argument pos:start="425:27" pos:end="425:53"><expr pos:start="425:27" pos:end="425:53"><operator pos:start="425:27" pos:end="425:27">(</operator><name pos:start="425:28" pos:end="425:31">envc</name> <operator pos:start="425:33" pos:end="425:33">+</operator> <literal type="number" pos:start="425:35" pos:end="425:35">1</literal><operator pos:start="425:36" pos:end="425:36">)</operator> <operator pos:start="425:38" pos:end="425:38">*</operator> <sizeof pos:start="425:40" pos:end="425:53">sizeof<argument_list pos:start="425:46" pos:end="425:53">(<argument pos:start="425:47" pos:end="425:52"><expr pos:start="425:47" pos:end="425:52"><name pos:start="425:47" pos:end="425:50">void</name> <operator pos:start="425:52" pos:end="425:52">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="429:13" pos:end="445:13">for <control pos:start="429:17" pos:end="431:47">(<init pos:start="429:18" pos:end="429:43"><expr pos:start="429:18" pos:end="429:32"><name pos:start="429:18" pos:end="429:19">gp</name> <operator pos:start="429:21" pos:end="429:21">=</operator> <name pos:start="429:23" pos:end="429:32">guest_argp</name></expr><operator pos:start="429:33" pos:end="429:33">,</operator> <expr pos:start="429:35" pos:end="429:42"><name pos:start="429:35" pos:end="429:35">q</name> <operator pos:start="429:37" pos:end="429:37">=</operator> <name pos:start="429:39" pos:end="429:42">argp</name></expr>;</init> <condition pos:start="429:45" pos:end="429:47"><expr pos:start="429:45" pos:end="429:46"><name pos:start="429:45" pos:end="429:46">gp</name></expr>;</condition>

                  <incr pos:start="431:19" pos:end="431:46"><expr pos:start="431:19" pos:end="431:41"><name pos:start="431:19" pos:end="431:20">gp</name> <operator pos:start="431:22" pos:end="431:23">+=</operator> <sizeof pos:start="431:25" pos:end="431:41">sizeof<argument_list pos:start="431:31" pos:end="431:41">(<argument pos:start="431:32" pos:end="431:40"><expr pos:start="431:32" pos:end="431:40"><name pos:start="431:32" pos:end="431:40">abi_ulong</name></expr></argument>)</argument_list></sizeof></expr><operator pos:start="431:42" pos:end="431:42">,</operator> <expr pos:start="431:44" pos:end="431:46"><name pos:start="431:44" pos:end="431:44">q</name><operator pos:start="431:45" pos:end="431:46">++</operator></expr></incr>)</control> <block pos:start="431:49" pos:end="445:13">{<block_content pos:start="433:17" pos:end="443:39">

                <if_stmt pos:start="433:17" pos:end="435:39"><if pos:start="433:17" pos:end="435:39">if <condition pos:start="433:20" pos:end="433:43">(<expr pos:start="433:21" pos:end="433:42"><call pos:start="433:21" pos:end="433:42"><name pos:start="433:21" pos:end="433:32">get_user_ual</name><argument_list pos:start="433:33" pos:end="433:42">(<argument pos:start="433:34" pos:end="433:37"><expr pos:start="433:34" pos:end="433:37"><name pos:start="433:34" pos:end="433:37">addr</name></expr></argument>, <argument pos:start="433:40" pos:end="433:41"><expr pos:start="433:40" pos:end="433:41"><name pos:start="433:40" pos:end="433:41">gp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="435:21" pos:end="435:39"><block_content pos:start="435:21" pos:end="435:39">

                    <goto pos:start="435:21" pos:end="435:39">goto <name pos:start="435:26" pos:end="435:38">execve_efault</name>;</goto></block_content></block></if></if_stmt>

                <if_stmt pos:start="437:17" pos:end="439:26"><if pos:start="437:17" pos:end="439:26">if <condition pos:start="437:20" pos:end="437:26">(<expr pos:start="437:21" pos:end="437:25"><operator pos:start="437:21" pos:end="437:21">!</operator><name pos:start="437:22" pos:end="437:25">addr</name></expr>)</condition><block type="pseudo" pos:start="439:21" pos:end="439:26"><block_content pos:start="439:21" pos:end="439:26">

                    <break pos:start="439:21" pos:end="439:26">break;</break></block_content></block></if></if_stmt>

                <if_stmt pos:start="441:17" pos:end="443:39"><if pos:start="441:17" pos:end="443:39">if <condition pos:start="441:20" pos:end="441:51">(<expr pos:start="441:21" pos:end="441:50"><operator pos:start="441:21" pos:end="441:21">!</operator><operator pos:start="441:22" pos:end="441:22">(</operator><operator pos:start="441:23" pos:end="441:23">*</operator><name pos:start="441:24" pos:end="441:24">q</name> <operator pos:start="441:26" pos:end="441:26">=</operator> <call pos:start="441:28" pos:end="441:49"><name pos:start="441:28" pos:end="441:43">lock_user_string</name><argument_list pos:start="441:44" pos:end="441:49">(<argument pos:start="441:45" pos:end="441:48"><expr pos:start="441:45" pos:end="441:48"><name pos:start="441:45" pos:end="441:48">addr</name></expr></argument>)</argument_list></call><operator pos:start="441:50" pos:end="441:50">)</operator></expr>)</condition><block type="pseudo" pos:start="443:21" pos:end="443:39"><block_content pos:start="443:21" pos:end="443:39">

                    <goto pos:start="443:21" pos:end="443:39">goto <name pos:start="443:26" pos:end="443:38">execve_efault</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="447:13" pos:end="447:22"><expr pos:start="447:13" pos:end="447:21"><operator pos:start="447:13" pos:end="447:13">*</operator><name pos:start="447:14" pos:end="447:14">q</name> <operator pos:start="447:16" pos:end="447:16">=</operator> <name pos:start="447:18" pos:end="447:21">NULL</name></expr>;</expr_stmt>



            <for pos:start="451:13" pos:end="467:13">for <control pos:start="451:17" pos:end="453:47">(<init pos:start="451:18" pos:end="451:43"><expr pos:start="451:18" pos:end="451:32"><name pos:start="451:18" pos:end="451:19">gp</name> <operator pos:start="451:21" pos:end="451:21">=</operator> <name pos:start="451:23" pos:end="451:32">guest_envp</name></expr><operator pos:start="451:33" pos:end="451:33">,</operator> <expr pos:start="451:35" pos:end="451:42"><name pos:start="451:35" pos:end="451:35">q</name> <operator pos:start="451:37" pos:end="451:37">=</operator> <name pos:start="451:39" pos:end="451:42">envp</name></expr>;</init> <condition pos:start="451:45" pos:end="451:47"><expr pos:start="451:45" pos:end="451:46"><name pos:start="451:45" pos:end="451:46">gp</name></expr>;</condition>

                  <incr pos:start="453:19" pos:end="453:46"><expr pos:start="453:19" pos:end="453:41"><name pos:start="453:19" pos:end="453:20">gp</name> <operator pos:start="453:22" pos:end="453:23">+=</operator> <sizeof pos:start="453:25" pos:end="453:41">sizeof<argument_list pos:start="453:31" pos:end="453:41">(<argument pos:start="453:32" pos:end="453:40"><expr pos:start="453:32" pos:end="453:40"><name pos:start="453:32" pos:end="453:40">abi_ulong</name></expr></argument>)</argument_list></sizeof></expr><operator pos:start="453:42" pos:end="453:42">,</operator> <expr pos:start="453:44" pos:end="453:46"><name pos:start="453:44" pos:end="453:44">q</name><operator pos:start="453:45" pos:end="453:46">++</operator></expr></incr>)</control> <block pos:start="453:49" pos:end="467:13">{<block_content pos:start="455:17" pos:end="465:39">

                <if_stmt pos:start="455:17" pos:end="457:39"><if pos:start="455:17" pos:end="457:39">if <condition pos:start="455:20" pos:end="455:43">(<expr pos:start="455:21" pos:end="455:42"><call pos:start="455:21" pos:end="455:42"><name pos:start="455:21" pos:end="455:32">get_user_ual</name><argument_list pos:start="455:33" pos:end="455:42">(<argument pos:start="455:34" pos:end="455:37"><expr pos:start="455:34" pos:end="455:37"><name pos:start="455:34" pos:end="455:37">addr</name></expr></argument>, <argument pos:start="455:40" pos:end="455:41"><expr pos:start="455:40" pos:end="455:41"><name pos:start="455:40" pos:end="455:41">gp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="457:21" pos:end="457:39"><block_content pos:start="457:21" pos:end="457:39">

                    <goto pos:start="457:21" pos:end="457:39">goto <name pos:start="457:26" pos:end="457:38">execve_efault</name>;</goto></block_content></block></if></if_stmt>

                <if_stmt pos:start="459:17" pos:end="461:26"><if pos:start="459:17" pos:end="461:26">if <condition pos:start="459:20" pos:end="459:26">(<expr pos:start="459:21" pos:end="459:25"><operator pos:start="459:21" pos:end="459:21">!</operator><name pos:start="459:22" pos:end="459:25">addr</name></expr>)</condition><block type="pseudo" pos:start="461:21" pos:end="461:26"><block_content pos:start="461:21" pos:end="461:26">

                    <break pos:start="461:21" pos:end="461:26">break;</break></block_content></block></if></if_stmt>

                <if_stmt pos:start="463:17" pos:end="465:39"><if pos:start="463:17" pos:end="465:39">if <condition pos:start="463:20" pos:end="463:51">(<expr pos:start="463:21" pos:end="463:50"><operator pos:start="463:21" pos:end="463:21">!</operator><operator pos:start="463:22" pos:end="463:22">(</operator><operator pos:start="463:23" pos:end="463:23">*</operator><name pos:start="463:24" pos:end="463:24">q</name> <operator pos:start="463:26" pos:end="463:26">=</operator> <call pos:start="463:28" pos:end="463:49"><name pos:start="463:28" pos:end="463:43">lock_user_string</name><argument_list pos:start="463:44" pos:end="463:49">(<argument pos:start="463:45" pos:end="463:48"><expr pos:start="463:45" pos:end="463:48"><name pos:start="463:45" pos:end="463:48">addr</name></expr></argument>)</argument_list></call><operator pos:start="463:50" pos:end="463:50">)</operator></expr>)</condition><block type="pseudo" pos:start="465:21" pos:end="465:39"><block_content pos:start="465:21" pos:end="465:39">

                    <goto pos:start="465:21" pos:end="465:39">goto <name pos:start="465:26" pos:end="465:38">execve_efault</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="469:13" pos:end="469:22"><expr pos:start="469:13" pos:end="469:21"><operator pos:start="469:13" pos:end="469:13">*</operator><name pos:start="469:14" pos:end="469:14">q</name> <operator pos:start="469:16" pos:end="469:16">=</operator> <name pos:start="469:18" pos:end="469:21">NULL</name></expr>;</expr_stmt>



            <if_stmt pos:start="473:13" pos:end="475:35"><if pos:start="473:13" pos:end="475:35">if <condition pos:start="473:16" pos:end="473:46">(<expr pos:start="473:17" pos:end="473:45"><operator pos:start="473:17" pos:end="473:17">!</operator><operator pos:start="473:18" pos:end="473:18">(</operator><name pos:start="473:19" pos:end="473:19">p</name> <operator pos:start="473:21" pos:end="473:21">=</operator> <call pos:start="473:23" pos:end="473:44"><name pos:start="473:23" pos:end="473:38">lock_user_string</name><argument_list pos:start="473:39" pos:end="473:44">(<argument pos:start="473:40" pos:end="473:43"><expr pos:start="473:40" pos:end="473:43"><name pos:start="473:40" pos:end="473:43">arg1</name></expr></argument>)</argument_list></call><operator pos:start="473:45" pos:end="473:45">)</operator></expr>)</condition><block type="pseudo" pos:start="475:17" pos:end="475:35"><block_content pos:start="475:17" pos:end="475:35">

                <goto pos:start="475:17" pos:end="475:35">goto <name pos:start="475:22" pos:end="475:34">execve_efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="477:13" pos:end="477:51"><expr pos:start="477:13" pos:end="477:50"><name pos:start="477:13" pos:end="477:15">ret</name> <operator pos:start="477:17" pos:end="477:17">=</operator> <call pos:start="477:19" pos:end="477:50"><name pos:start="477:19" pos:end="477:27">get_errno</name><argument_list pos:start="477:28" pos:end="477:50">(<argument pos:start="477:29" pos:end="477:49"><expr pos:start="477:29" pos:end="477:49"><call pos:start="477:29" pos:end="477:49"><name pos:start="477:29" pos:end="477:34">execve</name><argument_list pos:start="477:35" pos:end="477:49">(<argument pos:start="477:36" pos:end="477:36"><expr pos:start="477:36" pos:end="477:36"><name pos:start="477:36" pos:end="477:36">p</name></expr></argument>, <argument pos:start="477:39" pos:end="477:42"><expr pos:start="477:39" pos:end="477:42"><name pos:start="477:39" pos:end="477:42">argp</name></expr></argument>, <argument pos:start="477:45" pos:end="477:48"><expr pos:start="477:45" pos:end="477:48"><name pos:start="477:45" pos:end="477:48">envp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="479:13" pos:end="479:36"><expr pos:start="479:13" pos:end="479:35"><call pos:start="479:13" pos:end="479:35"><name pos:start="479:13" pos:end="479:23">unlock_user</name><argument_list pos:start="479:24" pos:end="479:35">(<argument pos:start="479:25" pos:end="479:25"><expr pos:start="479:25" pos:end="479:25"><name pos:start="479:25" pos:end="479:25">p</name></expr></argument>, <argument pos:start="479:28" pos:end="479:31"><expr pos:start="479:28" pos:end="479:31"><name pos:start="479:28" pos:end="479:31">arg1</name></expr></argument>, <argument pos:start="479:34" pos:end="479:34"><expr pos:start="479:34" pos:end="479:34"><literal type="number" pos:start="479:34" pos:end="479:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <goto pos:start="483:13" pos:end="483:28">goto <name pos:start="483:18" pos:end="483:27">execve_end</name>;</goto>



        <label pos:start="487:9" pos:end="487:22"><name pos:start="487:9" pos:end="487:21">execve_efault</name>:</label>

            <expr_stmt pos:start="489:13" pos:end="489:33"><expr pos:start="489:13" pos:end="489:32"><name pos:start="489:13" pos:end="489:15">ret</name> <operator pos:start="489:17" pos:end="489:17">=</operator> <operator pos:start="489:19" pos:end="489:19">-</operator><name pos:start="489:20" pos:end="489:32">TARGET_EFAULT</name></expr>;</expr_stmt>



        <label pos:start="493:9" pos:end="493:19"><name pos:start="493:9" pos:end="493:18">execve_end</name>:</label>

            <for pos:start="495:13" pos:end="507:13">for <control pos:start="495:17" pos:end="497:47">(<init pos:start="495:18" pos:end="495:43"><expr pos:start="495:18" pos:end="495:32"><name pos:start="495:18" pos:end="495:19">gp</name> <operator pos:start="495:21" pos:end="495:21">=</operator> <name pos:start="495:23" pos:end="495:32">guest_argp</name></expr><operator pos:start="495:33" pos:end="495:33">,</operator> <expr pos:start="495:35" pos:end="495:42"><name pos:start="495:35" pos:end="495:35">q</name> <operator pos:start="495:37" pos:end="495:37">=</operator> <name pos:start="495:39" pos:end="495:42">argp</name></expr>;</init> <condition pos:start="495:45" pos:end="495:47"><expr pos:start="495:45" pos:end="495:46"><operator pos:start="495:45" pos:end="495:45">*</operator><name pos:start="495:46" pos:end="495:46">q</name></expr>;</condition>

                  <incr pos:start="497:19" pos:end="497:46"><expr pos:start="497:19" pos:end="497:41"><name pos:start="497:19" pos:end="497:20">gp</name> <operator pos:start="497:22" pos:end="497:23">+=</operator> <sizeof pos:start="497:25" pos:end="497:41">sizeof<argument_list pos:start="497:31" pos:end="497:41">(<argument pos:start="497:32" pos:end="497:40"><expr pos:start="497:32" pos:end="497:40"><name pos:start="497:32" pos:end="497:40">abi_ulong</name></expr></argument>)</argument_list></sizeof></expr><operator pos:start="497:42" pos:end="497:42">,</operator> <expr pos:start="497:44" pos:end="497:46"><name pos:start="497:44" pos:end="497:44">q</name><operator pos:start="497:45" pos:end="497:46">++</operator></expr></incr>)</control> <block pos:start="497:49" pos:end="507:13">{<block_content pos:start="499:17" pos:end="505:41">

                <if_stmt pos:start="499:17" pos:end="503:26"><if pos:start="499:17" pos:end="503:26">if <condition pos:start="499:20" pos:end="501:29">(<expr pos:start="499:21" pos:end="501:28"><call pos:start="499:21" pos:end="499:42"><name pos:start="499:21" pos:end="499:32">get_user_ual</name><argument_list pos:start="499:33" pos:end="499:42">(<argument pos:start="499:34" pos:end="499:37"><expr pos:start="499:34" pos:end="499:37"><name pos:start="499:34" pos:end="499:37">addr</name></expr></argument>, <argument pos:start="499:40" pos:end="499:41"><expr pos:start="499:40" pos:end="499:41"><name pos:start="499:40" pos:end="499:41">gp</name></expr></argument>)</argument_list></call>

                    <operator pos:start="501:21" pos:end="501:22">||</operator> <operator pos:start="501:24" pos:end="501:24">!</operator><name pos:start="501:25" pos:end="501:28">addr</name></expr>)</condition><block type="pseudo" pos:start="503:21" pos:end="503:26"><block_content pos:start="503:21" pos:end="503:26">

                    <break pos:start="503:21" pos:end="503:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="505:17" pos:end="505:41"><expr pos:start="505:17" pos:end="505:40"><call pos:start="505:17" pos:end="505:40"><name pos:start="505:17" pos:end="505:27">unlock_user</name><argument_list pos:start="505:28" pos:end="505:40">(<argument pos:start="505:29" pos:end="505:30"><expr pos:start="505:29" pos:end="505:30"><operator pos:start="505:29" pos:end="505:29">*</operator><name pos:start="505:30" pos:end="505:30">q</name></expr></argument>, <argument pos:start="505:33" pos:end="505:36"><expr pos:start="505:33" pos:end="505:36"><name pos:start="505:33" pos:end="505:36">addr</name></expr></argument>, <argument pos:start="505:39" pos:end="505:39"><expr pos:start="505:39" pos:end="505:39"><literal type="number" pos:start="505:39" pos:end="505:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="509:13" pos:end="521:13">for <control pos:start="509:17" pos:end="511:47">(<init pos:start="509:18" pos:end="509:43"><expr pos:start="509:18" pos:end="509:32"><name pos:start="509:18" pos:end="509:19">gp</name> <operator pos:start="509:21" pos:end="509:21">=</operator> <name pos:start="509:23" pos:end="509:32">guest_envp</name></expr><operator pos:start="509:33" pos:end="509:33">,</operator> <expr pos:start="509:35" pos:end="509:42"><name pos:start="509:35" pos:end="509:35">q</name> <operator pos:start="509:37" pos:end="509:37">=</operator> <name pos:start="509:39" pos:end="509:42">envp</name></expr>;</init> <condition pos:start="509:45" pos:end="509:47"><expr pos:start="509:45" pos:end="509:46"><operator pos:start="509:45" pos:end="509:45">*</operator><name pos:start="509:46" pos:end="509:46">q</name></expr>;</condition>

                  <incr pos:start="511:19" pos:end="511:46"><expr pos:start="511:19" pos:end="511:41"><name pos:start="511:19" pos:end="511:20">gp</name> <operator pos:start="511:22" pos:end="511:23">+=</operator> <sizeof pos:start="511:25" pos:end="511:41">sizeof<argument_list pos:start="511:31" pos:end="511:41">(<argument pos:start="511:32" pos:end="511:40"><expr pos:start="511:32" pos:end="511:40"><name pos:start="511:32" pos:end="511:40">abi_ulong</name></expr></argument>)</argument_list></sizeof></expr><operator pos:start="511:42" pos:end="511:42">,</operator> <expr pos:start="511:44" pos:end="511:46"><name pos:start="511:44" pos:end="511:44">q</name><operator pos:start="511:45" pos:end="511:46">++</operator></expr></incr>)</control> <block pos:start="511:49" pos:end="521:13">{<block_content pos:start="513:17" pos:end="519:41">

                <if_stmt pos:start="513:17" pos:end="517:26"><if pos:start="513:17" pos:end="517:26">if <condition pos:start="513:20" pos:end="515:29">(<expr pos:start="513:21" pos:end="515:28"><call pos:start="513:21" pos:end="513:42"><name pos:start="513:21" pos:end="513:32">get_user_ual</name><argument_list pos:start="513:33" pos:end="513:42">(<argument pos:start="513:34" pos:end="513:37"><expr pos:start="513:34" pos:end="513:37"><name pos:start="513:34" pos:end="513:37">addr</name></expr></argument>, <argument pos:start="513:40" pos:end="513:41"><expr pos:start="513:40" pos:end="513:41"><name pos:start="513:40" pos:end="513:41">gp</name></expr></argument>)</argument_list></call>

                    <operator pos:start="515:21" pos:end="515:22">||</operator> <operator pos:start="515:24" pos:end="515:24">!</operator><name pos:start="515:25" pos:end="515:28">addr</name></expr>)</condition><block type="pseudo" pos:start="517:21" pos:end="517:26"><block_content pos:start="517:21" pos:end="517:26">

                    <break pos:start="517:21" pos:end="517:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="519:17" pos:end="519:41"><expr pos:start="519:17" pos:end="519:40"><call pos:start="519:17" pos:end="519:40"><name pos:start="519:17" pos:end="519:27">unlock_user</name><argument_list pos:start="519:28" pos:end="519:40">(<argument pos:start="519:29" pos:end="519:30"><expr pos:start="519:29" pos:end="519:30"><operator pos:start="519:29" pos:end="519:29">*</operator><name pos:start="519:30" pos:end="519:30">q</name></expr></argument>, <argument pos:start="519:33" pos:end="519:36"><expr pos:start="519:33" pos:end="519:36"><name pos:start="519:33" pos:end="519:36">addr</name></expr></argument>, <argument pos:start="519:39" pos:end="519:39"><expr pos:start="519:39" pos:end="519:39"><literal type="number" pos:start="519:39" pos:end="519:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block>

        <break pos:start="525:9" pos:end="525:14">break;</break>

    <case pos:start="527:5" pos:end="527:25">case <expr pos:start="527:10" pos:end="527:24"><name pos:start="527:10" pos:end="527:24">TARGET_NR_chdir</name></expr>:</case>

        <if_stmt pos:start="529:9" pos:end="531:24"><if pos:start="529:9" pos:end="531:24">if <condition pos:start="529:12" pos:end="529:42">(<expr pos:start="529:13" pos:end="529:41"><operator pos:start="529:13" pos:end="529:13">!</operator><operator pos:start="529:14" pos:end="529:14">(</operator><name pos:start="529:15" pos:end="529:15">p</name> <operator pos:start="529:17" pos:end="529:17">=</operator> <call pos:start="529:19" pos:end="529:40"><name pos:start="529:19" pos:end="529:34">lock_user_string</name><argument_list pos:start="529:35" pos:end="529:40">(<argument pos:start="529:36" pos:end="529:39"><expr pos:start="529:36" pos:end="529:39"><name pos:start="529:36" pos:end="529:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="529:41" pos:end="529:41">)</operator></expr>)</condition><block type="pseudo" pos:start="531:13" pos:end="531:24"><block_content pos:start="531:13" pos:end="531:24">

            <goto pos:start="531:13" pos:end="531:24">goto <name pos:start="531:18" pos:end="531:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="533:9" pos:end="533:34"><expr pos:start="533:9" pos:end="533:33"><name pos:start="533:9" pos:end="533:11">ret</name> <operator pos:start="533:13" pos:end="533:13">=</operator> <call pos:start="533:15" pos:end="533:33"><name pos:start="533:15" pos:end="533:23">get_errno</name><argument_list pos:start="533:24" pos:end="533:33">(<argument pos:start="533:25" pos:end="533:32"><expr pos:start="533:25" pos:end="533:32"><call pos:start="533:25" pos:end="533:32"><name pos:start="533:25" pos:end="533:29">chdir</name><argument_list pos:start="533:30" pos:end="533:32">(<argument pos:start="533:31" pos:end="533:31"><expr pos:start="533:31" pos:end="533:31"><name pos:start="533:31" pos:end="533:31">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="535:9" pos:end="535:32"><expr pos:start="535:9" pos:end="535:31"><call pos:start="535:9" pos:end="535:31"><name pos:start="535:9" pos:end="535:19">unlock_user</name><argument_list pos:start="535:20" pos:end="535:31">(<argument pos:start="535:21" pos:end="535:21"><expr pos:start="535:21" pos:end="535:21"><name pos:start="535:21" pos:end="535:21">p</name></expr></argument>, <argument pos:start="535:24" pos:end="535:27"><expr pos:start="535:24" pos:end="535:27"><name pos:start="535:24" pos:end="535:27">arg1</name></expr></argument>, <argument pos:start="535:30" pos:end="535:30"><expr pos:start="535:30" pos:end="535:30"><literal type="number" pos:start="535:30" pos:end="535:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="537:9" pos:end="540:0">break;</break>

<cpp:ifdef pos:start="539:1" pos:end="539:21">#<cpp:directive pos:start="539:2" pos:end="539:6">ifdef</cpp:directive> <name pos:start="539:8" pos:end="539:21">TARGET_NR_time</name></cpp:ifdef>

    <case pos:start="541:5" pos:end="541:24">case <expr pos:start="541:10" pos:end="541:23"><name pos:start="541:10" pos:end="541:23">TARGET_NR_time</name></expr>:</case>

        <block pos:start="543:9" pos:end="557:9">{<block_content pos:start="545:13" pos:end="555:28">

            <decl_stmt pos:start="545:13" pos:end="545:29"><decl pos:start="545:13" pos:end="545:28"><type pos:start="545:13" pos:end="545:18"><name pos:start="545:13" pos:end="545:18">time_t</name></type> <name pos:start="545:20" pos:end="545:28">host_time</name></decl>;</decl_stmt>

            <expr_stmt pos:start="547:13" pos:end="547:46"><expr pos:start="547:13" pos:end="547:45"><name pos:start="547:13" pos:end="547:15">ret</name> <operator pos:start="547:17" pos:end="547:17">=</operator> <call pos:start="547:19" pos:end="547:45"><name pos:start="547:19" pos:end="547:27">get_errno</name><argument_list pos:start="547:28" pos:end="547:45">(<argument pos:start="547:29" pos:end="547:44"><expr pos:start="547:29" pos:end="547:44"><call pos:start="547:29" pos:end="547:44"><name pos:start="547:29" pos:end="547:32">time</name><argument_list pos:start="547:33" pos:end="547:44">(<argument pos:start="547:34" pos:end="547:43"><expr pos:start="547:34" pos:end="547:43"><operator pos:start="547:34" pos:end="547:34">&amp;</operator><name pos:start="547:35" pos:end="547:43">host_time</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="549:13" pos:end="555:28"><if pos:start="549:13" pos:end="555:28">if <condition pos:start="549:16" pos:end="553:49">(<expr pos:start="549:17" pos:end="553:48"><operator pos:start="549:17" pos:end="549:17">!</operator><call pos:start="549:18" pos:end="549:30"><name pos:start="549:18" pos:end="549:25">is_error</name><argument_list pos:start="549:26" pos:end="549:30">(<argument pos:start="549:27" pos:end="549:29"><expr pos:start="549:27" pos:end="549:29"><name pos:start="549:27" pos:end="549:29">ret</name></expr></argument>)</argument_list></call>

                <operator pos:start="551:17" pos:end="551:18">&amp;&amp;</operator> <name pos:start="551:20" pos:end="551:23">arg1</name>

                <operator pos:start="553:17" pos:end="553:18">&amp;&amp;</operator> <call pos:start="553:20" pos:end="553:48"><name pos:start="553:20" pos:end="553:31">put_user_sal</name><argument_list pos:start="553:32" pos:end="553:48">(<argument pos:start="553:33" pos:end="553:41"><expr pos:start="553:33" pos:end="553:41"><name pos:start="553:33" pos:end="553:41">host_time</name></expr></argument>, <argument pos:start="553:44" pos:end="553:47"><expr pos:start="553:44" pos:end="553:47"><name pos:start="553:44" pos:end="553:47">arg1</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="555:17" pos:end="555:28"><block_content pos:start="555:17" pos:end="555:28">

                <goto pos:start="555:17" pos:end="555:28">goto <name pos:start="555:22" pos:end="555:27">efault</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="559:9" pos:end="562:0">break;</break>

<cpp:endif pos:start="561:1" pos:end="561:6">#<cpp:directive pos:start="561:2" pos:end="561:6">endif</cpp:directive></cpp:endif>

    <case pos:start="563:5" pos:end="563:25">case <expr pos:start="563:10" pos:end="563:24"><name pos:start="563:10" pos:end="563:24">TARGET_NR_mknod</name></expr>:</case>

        <if_stmt pos:start="565:9" pos:end="567:24"><if pos:start="565:9" pos:end="567:24">if <condition pos:start="565:12" pos:end="565:42">(<expr pos:start="565:13" pos:end="565:41"><operator pos:start="565:13" pos:end="565:13">!</operator><operator pos:start="565:14" pos:end="565:14">(</operator><name pos:start="565:15" pos:end="565:15">p</name> <operator pos:start="565:17" pos:end="565:17">=</operator> <call pos:start="565:19" pos:end="565:40"><name pos:start="565:19" pos:end="565:34">lock_user_string</name><argument_list pos:start="565:35" pos:end="565:40">(<argument pos:start="565:36" pos:end="565:39"><expr pos:start="565:36" pos:end="565:39"><name pos:start="565:36" pos:end="565:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="565:41" pos:end="565:41">)</operator></expr>)</condition><block type="pseudo" pos:start="567:13" pos:end="567:24"><block_content pos:start="567:13" pos:end="567:24">

            <goto pos:start="567:13" pos:end="567:24">goto <name pos:start="567:18" pos:end="567:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="569:9" pos:end="569:46"><expr pos:start="569:9" pos:end="569:45"><name pos:start="569:9" pos:end="569:11">ret</name> <operator pos:start="569:13" pos:end="569:13">=</operator> <call pos:start="569:15" pos:end="569:45"><name pos:start="569:15" pos:end="569:23">get_errno</name><argument_list pos:start="569:24" pos:end="569:45">(<argument pos:start="569:25" pos:end="569:44"><expr pos:start="569:25" pos:end="569:44"><call pos:start="569:25" pos:end="569:44"><name pos:start="569:25" pos:end="569:29">mknod</name><argument_list pos:start="569:30" pos:end="569:44">(<argument pos:start="569:31" pos:end="569:31"><expr pos:start="569:31" pos:end="569:31"><name pos:start="569:31" pos:end="569:31">p</name></expr></argument>, <argument pos:start="569:34" pos:end="569:37"><expr pos:start="569:34" pos:end="569:37"><name pos:start="569:34" pos:end="569:37">arg2</name></expr></argument>, <argument pos:start="569:40" pos:end="569:43"><expr pos:start="569:40" pos:end="569:43"><name pos:start="569:40" pos:end="569:43">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="571:9" pos:end="571:32"><expr pos:start="571:9" pos:end="571:31"><call pos:start="571:9" pos:end="571:31"><name pos:start="571:9" pos:end="571:19">unlock_user</name><argument_list pos:start="571:20" pos:end="571:31">(<argument pos:start="571:21" pos:end="571:21"><expr pos:start="571:21" pos:end="571:21"><name pos:start="571:21" pos:end="571:21">p</name></expr></argument>, <argument pos:start="571:24" pos:end="571:27"><expr pos:start="571:24" pos:end="571:27"><name pos:start="571:24" pos:end="571:27">arg1</name></expr></argument>, <argument pos:start="571:30" pos:end="571:30"><expr pos:start="571:30" pos:end="571:30"><literal type="number" pos:start="571:30" pos:end="571:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="573:9" pos:end="576:0">break;</break>

<cpp:if pos:start="575:1" pos:end="575:55">#<cpp:directive pos:start="575:2" pos:end="575:3">if</cpp:directive> <expr pos:start="575:5" pos:end="575:55"><call pos:start="575:5" pos:end="575:30"><name pos:start="575:5" pos:end="575:11">defined</name><argument_list pos:start="575:12" pos:end="575:30">(<argument pos:start="575:13" pos:end="575:29"><expr pos:start="575:13" pos:end="575:29"><name pos:start="575:13" pos:end="575:29">TARGET_NR_mknodat</name></expr></argument>)</argument_list></call> <operator pos:start="575:32" pos:end="575:33">&amp;&amp;</operator> <call pos:start="575:35" pos:end="575:55"><name pos:start="575:35" pos:end="575:41">defined</name><argument_list pos:start="575:42" pos:end="575:55">(<argument pos:start="575:43" pos:end="575:54"><expr pos:start="575:43" pos:end="575:54"><name pos:start="575:43" pos:end="575:54">__NR_mknodat</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="577:5" pos:end="577:27">case <expr pos:start="577:10" pos:end="577:26"><name pos:start="577:10" pos:end="577:26">TARGET_NR_mknodat</name></expr>:</case>

        <if_stmt pos:start="579:9" pos:end="581:24"><if pos:start="579:9" pos:end="581:24">if <condition pos:start="579:12" pos:end="579:42">(<expr pos:start="579:13" pos:end="579:41"><operator pos:start="579:13" pos:end="579:13">!</operator><operator pos:start="579:14" pos:end="579:14">(</operator><name pos:start="579:15" pos:end="579:15">p</name> <operator pos:start="579:17" pos:end="579:17">=</operator> <call pos:start="579:19" pos:end="579:40"><name pos:start="579:19" pos:end="579:34">lock_user_string</name><argument_list pos:start="579:35" pos:end="579:40">(<argument pos:start="579:36" pos:end="579:39"><expr pos:start="579:36" pos:end="579:39"><name pos:start="579:36" pos:end="579:39">arg2</name></expr></argument>)</argument_list></call><operator pos:start="579:41" pos:end="579:41">)</operator></expr>)</condition><block type="pseudo" pos:start="581:13" pos:end="581:24"><block_content pos:start="581:13" pos:end="581:24">

            <goto pos:start="581:13" pos:end="581:24">goto <name pos:start="581:18" pos:end="581:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="583:9" pos:end="583:58"><expr pos:start="583:9" pos:end="583:57"><name pos:start="583:9" pos:end="583:11">ret</name> <operator pos:start="583:13" pos:end="583:13">=</operator> <call pos:start="583:15" pos:end="583:57"><name pos:start="583:15" pos:end="583:23">get_errno</name><argument_list pos:start="583:24" pos:end="583:57">(<argument pos:start="583:25" pos:end="583:56"><expr pos:start="583:25" pos:end="583:56"><call pos:start="583:25" pos:end="583:56"><name pos:start="583:25" pos:end="583:35">sys_mknodat</name><argument_list pos:start="583:36" pos:end="583:56">(<argument pos:start="583:37" pos:end="583:40"><expr pos:start="583:37" pos:end="583:40"><name pos:start="583:37" pos:end="583:40">arg1</name></expr></argument>, <argument pos:start="583:43" pos:end="583:43"><expr pos:start="583:43" pos:end="583:43"><name pos:start="583:43" pos:end="583:43">p</name></expr></argument>, <argument pos:start="583:46" pos:end="583:49"><expr pos:start="583:46" pos:end="583:49"><name pos:start="583:46" pos:end="583:49">arg3</name></expr></argument>, <argument pos:start="583:52" pos:end="583:55"><expr pos:start="583:52" pos:end="583:55"><name pos:start="583:52" pos:end="583:55">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="585:9" pos:end="585:32"><expr pos:start="585:9" pos:end="585:31"><call pos:start="585:9" pos:end="585:31"><name pos:start="585:9" pos:end="585:19">unlock_user</name><argument_list pos:start="585:20" pos:end="585:31">(<argument pos:start="585:21" pos:end="585:21"><expr pos:start="585:21" pos:end="585:21"><name pos:start="585:21" pos:end="585:21">p</name></expr></argument>, <argument pos:start="585:24" pos:end="585:27"><expr pos:start="585:24" pos:end="585:27"><name pos:start="585:24" pos:end="585:27">arg2</name></expr></argument>, <argument pos:start="585:30" pos:end="585:30"><expr pos:start="585:30" pos:end="585:30"><literal type="number" pos:start="585:30" pos:end="585:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="587:9" pos:end="590:0">break;</break>

<cpp:endif pos:start="589:1" pos:end="589:6">#<cpp:directive pos:start="589:2" pos:end="589:6">endif</cpp:directive></cpp:endif>

    <case pos:start="591:5" pos:end="591:25">case <expr pos:start="591:10" pos:end="591:24"><name pos:start="591:10" pos:end="591:24">TARGET_NR_chmod</name></expr>:</case>

        <if_stmt pos:start="593:9" pos:end="595:24"><if pos:start="593:9" pos:end="595:24">if <condition pos:start="593:12" pos:end="593:42">(<expr pos:start="593:13" pos:end="593:41"><operator pos:start="593:13" pos:end="593:13">!</operator><operator pos:start="593:14" pos:end="593:14">(</operator><name pos:start="593:15" pos:end="593:15">p</name> <operator pos:start="593:17" pos:end="593:17">=</operator> <call pos:start="593:19" pos:end="593:40"><name pos:start="593:19" pos:end="593:34">lock_user_string</name><argument_list pos:start="593:35" pos:end="593:40">(<argument pos:start="593:36" pos:end="593:39"><expr pos:start="593:36" pos:end="593:39"><name pos:start="593:36" pos:end="593:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="593:41" pos:end="593:41">)</operator></expr>)</condition><block type="pseudo" pos:start="595:13" pos:end="595:24"><block_content pos:start="595:13" pos:end="595:24">

            <goto pos:start="595:13" pos:end="595:24">goto <name pos:start="595:18" pos:end="595:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="597:9" pos:end="597:40"><expr pos:start="597:9" pos:end="597:39"><name pos:start="597:9" pos:end="597:11">ret</name> <operator pos:start="597:13" pos:end="597:13">=</operator> <call pos:start="597:15" pos:end="597:39"><name pos:start="597:15" pos:end="597:23">get_errno</name><argument_list pos:start="597:24" pos:end="597:39">(<argument pos:start="597:25" pos:end="597:38"><expr pos:start="597:25" pos:end="597:38"><call pos:start="597:25" pos:end="597:38"><name pos:start="597:25" pos:end="597:29">chmod</name><argument_list pos:start="597:30" pos:end="597:38">(<argument pos:start="597:31" pos:end="597:31"><expr pos:start="597:31" pos:end="597:31"><name pos:start="597:31" pos:end="597:31">p</name></expr></argument>, <argument pos:start="597:34" pos:end="597:37"><expr pos:start="597:34" pos:end="597:37"><name pos:start="597:34" pos:end="597:37">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="599:9" pos:end="599:32"><expr pos:start="599:9" pos:end="599:31"><call pos:start="599:9" pos:end="599:31"><name pos:start="599:9" pos:end="599:19">unlock_user</name><argument_list pos:start="599:20" pos:end="599:31">(<argument pos:start="599:21" pos:end="599:21"><expr pos:start="599:21" pos:end="599:21"><name pos:start="599:21" pos:end="599:21">p</name></expr></argument>, <argument pos:start="599:24" pos:end="599:27"><expr pos:start="599:24" pos:end="599:27"><name pos:start="599:24" pos:end="599:27">arg1</name></expr></argument>, <argument pos:start="599:30" pos:end="599:30"><expr pos:start="599:30" pos:end="599:30"><literal type="number" pos:start="599:30" pos:end="599:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="601:9" pos:end="604:0">break;</break>

<cpp:ifdef pos:start="603:1" pos:end="603:22">#<cpp:directive pos:start="603:2" pos:end="603:6">ifdef</cpp:directive> <name pos:start="603:8" pos:end="603:22">TARGET_NR_break</name></cpp:ifdef>

    <case pos:start="605:5" pos:end="605:25">case <expr pos:start="605:10" pos:end="605:24"><name pos:start="605:10" pos:end="605:24">TARGET_NR_break</name></expr>:</case>

        <goto pos:start="607:9" pos:end="612:0">goto <name pos:start="607:14" pos:end="607:26">unimplemented</name>;</goto>

<cpp:endif pos:start="609:1" pos:end="609:6">#<cpp:directive pos:start="609:2" pos:end="609:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="611:1" pos:end="611:24">#<cpp:directive pos:start="611:2" pos:end="611:6">ifdef</cpp:directive> <name pos:start="611:8" pos:end="611:24">TARGET_NR_oldstat</name></cpp:ifdef>

    <case pos:start="613:5" pos:end="613:27">case <expr pos:start="613:10" pos:end="613:26"><name pos:start="613:10" pos:end="613:26">TARGET_NR_oldstat</name></expr>:</case>

        <goto pos:start="615:9" pos:end="618:0">goto <name pos:start="615:14" pos:end="615:26">unimplemented</name>;</goto>

<cpp:endif pos:start="617:1" pos:end="617:6">#<cpp:directive pos:start="617:2" pos:end="617:6">endif</cpp:directive></cpp:endif>

    <case pos:start="619:5" pos:end="619:25">case <expr pos:start="619:10" pos:end="619:24"><name pos:start="619:10" pos:end="619:24">TARGET_NR_lseek</name></expr>:</case>

        <expr_stmt pos:start="621:9" pos:end="621:49"><expr pos:start="621:9" pos:end="621:48"><name pos:start="621:9" pos:end="621:11">ret</name> <operator pos:start="621:13" pos:end="621:13">=</operator> <call pos:start="621:15" pos:end="621:48"><name pos:start="621:15" pos:end="621:23">get_errno</name><argument_list pos:start="621:24" pos:end="621:48">(<argument pos:start="621:25" pos:end="621:47"><expr pos:start="621:25" pos:end="621:47"><call pos:start="621:25" pos:end="621:47"><name pos:start="621:25" pos:end="621:29">lseek</name><argument_list pos:start="621:30" pos:end="621:47">(<argument pos:start="621:31" pos:end="621:34"><expr pos:start="621:31" pos:end="621:34"><name pos:start="621:31" pos:end="621:34">arg1</name></expr></argument>, <argument pos:start="621:37" pos:end="621:40"><expr pos:start="621:37" pos:end="621:40"><name pos:start="621:37" pos:end="621:40">arg2</name></expr></argument>, <argument pos:start="621:43" pos:end="621:46"><expr pos:start="621:43" pos:end="621:46"><name pos:start="621:43" pos:end="621:46">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="623:9" pos:end="626:0">break;</break>

<cpp:ifdef pos:start="625:1" pos:end="625:24">#<cpp:directive pos:start="625:2" pos:end="625:6">ifdef</cpp:directive> <name pos:start="625:8" pos:end="625:24">TARGET_NR_getxpid</name></cpp:ifdef>

    <case pos:start="627:5" pos:end="630:0">case <expr pos:start="627:10" pos:end="627:26"><name pos:start="627:10" pos:end="627:26">TARGET_NR_getxpid</name></expr>:</case>

<cpp:else pos:start="629:1" pos:end="629:5">#<cpp:directive pos:start="629:2" pos:end="629:5">else</cpp:directive></cpp:else>

    <case pos:start="631:5" pos:end="634:0">case <expr pos:start="631:10" pos:end="631:25"><name pos:start="631:10" pos:end="631:25">TARGET_NR_getpid</name></expr>:</case>

<cpp:endif pos:start="633:1" pos:end="633:6">#<cpp:directive pos:start="633:2" pos:end="633:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="635:9" pos:end="635:34"><expr pos:start="635:9" pos:end="635:33"><name pos:start="635:9" pos:end="635:11">ret</name> <operator pos:start="635:13" pos:end="635:13">=</operator> <call pos:start="635:15" pos:end="635:33"><name pos:start="635:15" pos:end="635:23">get_errno</name><argument_list pos:start="635:24" pos:end="635:33">(<argument pos:start="635:25" pos:end="635:32"><expr pos:start="635:25" pos:end="635:32"><call pos:start="635:25" pos:end="635:32"><name pos:start="635:25" pos:end="635:30">getpid</name><argument_list pos:start="635:31" pos:end="635:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="637:9" pos:end="637:14">break;</break>

    <case pos:start="639:5" pos:end="639:25">case <expr pos:start="639:10" pos:end="639:24"><name pos:start="639:10" pos:end="639:24">TARGET_NR_mount</name></expr>:</case>

		<block pos:start="641:17" pos:end="680:0">{<block_content pos:start="645:25" pos:end="675:30">

			<comment type="block" pos:start="643:25" pos:end="643:60">/* need to look at the data field */</comment>

			<decl_stmt pos:start="645:25" pos:end="645:38"><decl pos:start="645:25" pos:end="645:32"><type pos:start="645:25" pos:end="645:30"><name pos:start="645:25" pos:end="645:28">void</name> <modifier pos:start="645:30" pos:end="645:30">*</modifier></type><name pos:start="645:31" pos:end="645:32">p2</name></decl>, <decl pos:start="645:35" pos:end="645:37"><type ref="prev" pos:start="645:25" pos:end="645:30"><modifier pos:start="645:35" pos:end="645:35">*</modifier></type><name pos:start="645:36" pos:end="645:37">p3</name></decl>;</decl_stmt>

			<expr_stmt pos:start="647:25" pos:end="647:51"><expr pos:start="647:25" pos:end="647:50"><name pos:start="647:25" pos:end="647:25">p</name> <operator pos:start="647:27" pos:end="647:27">=</operator> <call pos:start="647:29" pos:end="647:50"><name pos:start="647:29" pos:end="647:44">lock_user_string</name><argument_list pos:start="647:45" pos:end="647:50">(<argument pos:start="647:46" pos:end="647:49"><expr pos:start="647:46" pos:end="647:49"><name pos:start="647:46" pos:end="647:49">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="649:25" pos:end="649:52"><expr pos:start="649:25" pos:end="649:51"><name pos:start="649:25" pos:end="649:26">p2</name> <operator pos:start="649:28" pos:end="649:28">=</operator> <call pos:start="649:30" pos:end="649:51"><name pos:start="649:30" pos:end="649:45">lock_user_string</name><argument_list pos:start="649:46" pos:end="649:51">(<argument pos:start="649:47" pos:end="649:50"><expr pos:start="649:47" pos:end="649:50"><name pos:start="649:47" pos:end="649:50">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="651:25" pos:end="651:52"><expr pos:start="651:25" pos:end="651:51"><name pos:start="651:25" pos:end="651:26">p3</name> <operator pos:start="651:28" pos:end="651:28">=</operator> <call pos:start="651:30" pos:end="651:51"><name pos:start="651:30" pos:end="651:45">lock_user_string</name><argument_list pos:start="651:46" pos:end="651:51">(<argument pos:start="651:47" pos:end="651:50"><expr pos:start="651:47" pos:end="651:50"><name pos:start="651:47" pos:end="651:50">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="653:25" pos:end="667:94"><if pos:start="653:25" pos:end="655:49">if <condition pos:start="653:28" pos:end="653:45">(<expr pos:start="653:29" pos:end="653:44"><operator pos:start="653:29" pos:end="653:29">!</operator><name pos:start="653:30" pos:end="653:30">p</name> <operator pos:start="653:32" pos:end="653:33">||</operator> <operator pos:start="653:35" pos:end="653:35">!</operator><name pos:start="653:36" pos:end="653:37">p2</name> <operator pos:start="653:39" pos:end="653:40">||</operator> <operator pos:start="653:42" pos:end="653:42">!</operator><name pos:start="653:43" pos:end="653:44">p3</name></expr>)</condition><block type="pseudo" pos:start="655:29" pos:end="655:49"><block_content pos:start="655:29" pos:end="655:49">

                            <expr_stmt pos:start="655:29" pos:end="655:49"><expr pos:start="655:29" pos:end="655:48"><name pos:start="655:29" pos:end="655:31">ret</name> <operator pos:start="655:33" pos:end="655:33">=</operator> <operator pos:start="655:35" pos:end="655:35">-</operator><name pos:start="655:36" pos:end="655:48">TARGET_EFAULT</name></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="657:25" pos:end="667:94">else<block type="pseudo" pos:start="667:29" pos:end="667:94"><block_content pos:start="667:29" pos:end="667:94">

                            <comment type="block" pos:start="659:29" pos:end="665:31">/* FIXME - arg5 should be locked, but it isn't clear how to

                             * do that since it's not guaranteed to be a NULL-terminated

                             * string.

                             */</comment>

                            <expr_stmt pos:start="667:29" pos:end="667:94"><expr pos:start="667:29" pos:end="667:93"><name pos:start="667:29" pos:end="667:31">ret</name> <operator pos:start="667:33" pos:end="667:33">=</operator> <call pos:start="667:35" pos:end="667:93"><name pos:start="667:35" pos:end="667:43">get_errno</name><argument_list pos:start="667:44" pos:end="667:93">(<argument pos:start="667:45" pos:end="667:92"><expr pos:start="667:45" pos:end="667:92"><call pos:start="667:45" pos:end="667:92"><name pos:start="667:45" pos:end="667:49">mount</name><argument_list pos:start="667:50" pos:end="667:92">(<argument pos:start="667:51" pos:end="667:51"><expr pos:start="667:51" pos:end="667:51"><name pos:start="667:51" pos:end="667:51">p</name></expr></argument>, <argument pos:start="667:54" pos:end="667:55"><expr pos:start="667:54" pos:end="667:55"><name pos:start="667:54" pos:end="667:55">p2</name></expr></argument>, <argument pos:start="667:58" pos:end="667:59"><expr pos:start="667:58" pos:end="667:59"><name pos:start="667:58" pos:end="667:59">p3</name></expr></argument>, <argument pos:start="667:62" pos:end="667:80"><expr pos:start="667:62" pos:end="667:80"><operator pos:start="667:62" pos:end="667:62">(</operator><name pos:start="667:63" pos:end="667:70">unsigned</name> <name pos:start="667:72" pos:end="667:75">long</name><operator pos:start="667:76" pos:end="667:76">)</operator><name pos:start="667:77" pos:end="667:80">arg4</name></expr></argument>, <argument pos:start="667:83" pos:end="667:91"><expr pos:start="667:83" pos:end="667:91"><call pos:start="667:83" pos:end="667:91"><name pos:start="667:83" pos:end="667:85">g2h</name><argument_list pos:start="667:86" pos:end="667:91">(<argument pos:start="667:87" pos:end="667:90"><expr pos:start="667:87" pos:end="667:90"><name pos:start="667:87" pos:end="667:90">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="669:25" pos:end="669:48"><expr pos:start="669:25" pos:end="669:47"><call pos:start="669:25" pos:end="669:47"><name pos:start="669:25" pos:end="669:35">unlock_user</name><argument_list pos:start="669:36" pos:end="669:47">(<argument pos:start="669:37" pos:end="669:37"><expr pos:start="669:37" pos:end="669:37"><name pos:start="669:37" pos:end="669:37">p</name></expr></argument>, <argument pos:start="669:40" pos:end="669:43"><expr pos:start="669:40" pos:end="669:43"><name pos:start="669:40" pos:end="669:43">arg1</name></expr></argument>, <argument pos:start="669:46" pos:end="669:46"><expr pos:start="669:46" pos:end="669:46"><literal type="number" pos:start="669:46" pos:end="669:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="671:25" pos:end="671:49"><expr pos:start="671:25" pos:end="671:48"><call pos:start="671:25" pos:end="671:48"><name pos:start="671:25" pos:end="671:35">unlock_user</name><argument_list pos:start="671:36" pos:end="671:48">(<argument pos:start="671:37" pos:end="671:38"><expr pos:start="671:37" pos:end="671:38"><name pos:start="671:37" pos:end="671:38">p2</name></expr></argument>, <argument pos:start="671:41" pos:end="671:44"><expr pos:start="671:41" pos:end="671:44"><name pos:start="671:41" pos:end="671:44">arg2</name></expr></argument>, <argument pos:start="671:47" pos:end="671:47"><expr pos:start="671:47" pos:end="671:47"><literal type="number" pos:start="671:47" pos:end="671:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="673:25" pos:end="673:49"><expr pos:start="673:25" pos:end="673:48"><call pos:start="673:25" pos:end="673:48"><name pos:start="673:25" pos:end="673:35">unlock_user</name><argument_list pos:start="673:36" pos:end="673:48">(<argument pos:start="673:37" pos:end="673:38"><expr pos:start="673:37" pos:end="673:38"><name pos:start="673:37" pos:end="673:38">p3</name></expr></argument>, <argument pos:start="673:41" pos:end="673:44"><expr pos:start="673:41" pos:end="673:44"><name pos:start="673:41" pos:end="673:44">arg3</name></expr></argument>, <argument pos:start="673:47" pos:end="673:47"><expr pos:start="673:47" pos:end="673:47"><literal type="number" pos:start="673:47" pos:end="673:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:start="675:25" pos:end="675:30">break;</break>

		</block_content>}</block>

<cpp:ifdef pos:start="679:1" pos:end="679:23">#<cpp:directive pos:start="679:2" pos:end="679:6">ifdef</cpp:directive> <name pos:start="679:8" pos:end="679:23">TARGET_NR_umount</name></cpp:ifdef>

    <case pos:start="681:5" pos:end="681:26">case <expr pos:start="681:10" pos:end="681:25"><name pos:start="681:10" pos:end="681:25">TARGET_NR_umount</name></expr>:</case>

        <if_stmt pos:start="683:9" pos:end="685:24"><if pos:start="683:9" pos:end="685:24">if <condition pos:start="683:12" pos:end="683:42">(<expr pos:start="683:13" pos:end="683:41"><operator pos:start="683:13" pos:end="683:13">!</operator><operator pos:start="683:14" pos:end="683:14">(</operator><name pos:start="683:15" pos:end="683:15">p</name> <operator pos:start="683:17" pos:end="683:17">=</operator> <call pos:start="683:19" pos:end="683:40"><name pos:start="683:19" pos:end="683:34">lock_user_string</name><argument_list pos:start="683:35" pos:end="683:40">(<argument pos:start="683:36" pos:end="683:39"><expr pos:start="683:36" pos:end="683:39"><name pos:start="683:36" pos:end="683:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="683:41" pos:end="683:41">)</operator></expr>)</condition><block type="pseudo" pos:start="685:13" pos:end="685:24"><block_content pos:start="685:13" pos:end="685:24">

            <goto pos:start="685:13" pos:end="685:24">goto <name pos:start="685:18" pos:end="685:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="687:9" pos:end="687:35"><expr pos:start="687:9" pos:end="687:34"><name pos:start="687:9" pos:end="687:11">ret</name> <operator pos:start="687:13" pos:end="687:13">=</operator> <call pos:start="687:15" pos:end="687:34"><name pos:start="687:15" pos:end="687:23">get_errno</name><argument_list pos:start="687:24" pos:end="687:34">(<argument pos:start="687:25" pos:end="687:33"><expr pos:start="687:25" pos:end="687:33"><call pos:start="687:25" pos:end="687:33"><name pos:start="687:25" pos:end="687:30">umount</name><argument_list pos:start="687:31" pos:end="687:33">(<argument pos:start="687:32" pos:end="687:32"><expr pos:start="687:32" pos:end="687:32"><name pos:start="687:32" pos:end="687:32">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="689:9" pos:end="689:32"><expr pos:start="689:9" pos:end="689:31"><call pos:start="689:9" pos:end="689:31"><name pos:start="689:9" pos:end="689:19">unlock_user</name><argument_list pos:start="689:20" pos:end="689:31">(<argument pos:start="689:21" pos:end="689:21"><expr pos:start="689:21" pos:end="689:21"><name pos:start="689:21" pos:end="689:21">p</name></expr></argument>, <argument pos:start="689:24" pos:end="689:27"><expr pos:start="689:24" pos:end="689:27"><name pos:start="689:24" pos:end="689:27">arg1</name></expr></argument>, <argument pos:start="689:30" pos:end="689:30"><expr pos:start="689:30" pos:end="689:30"><literal type="number" pos:start="689:30" pos:end="689:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="691:9" pos:end="696:0">break;</break>

<cpp:endif pos:start="693:1" pos:end="693:6">#<cpp:directive pos:start="693:2" pos:end="693:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="695:1" pos:end="695:22">#<cpp:directive pos:start="695:2" pos:end="695:6">ifdef</cpp:directive> <name pos:start="695:8" pos:end="695:22">TARGET_NR_stime</name></cpp:ifdef> <comment type="block" pos:start="695:24" pos:end="695:41">/* not on alpha */</comment>

    <case pos:start="697:5" pos:end="697:25">case <expr pos:start="697:10" pos:end="697:24"><name pos:start="697:10" pos:end="697:24">TARGET_NR_stime</name></expr>:</case>

        <block pos:start="699:9" pos:end="709:9">{<block_content pos:start="701:13" pos:end="707:47">

            <decl_stmt pos:start="701:13" pos:end="701:29"><decl pos:start="701:13" pos:end="701:28"><type pos:start="701:13" pos:end="701:18"><name pos:start="701:13" pos:end="701:18">time_t</name></type> <name pos:start="701:20" pos:end="701:28">host_time</name></decl>;</decl_stmt>

            <if_stmt pos:start="703:13" pos:end="705:28"><if pos:start="703:13" pos:end="705:28">if <condition pos:start="703:16" pos:end="703:46">(<expr pos:start="703:17" pos:end="703:45"><call pos:start="703:17" pos:end="703:45"><name pos:start="703:17" pos:end="703:28">get_user_sal</name><argument_list pos:start="703:29" pos:end="703:45">(<argument pos:start="703:30" pos:end="703:38"><expr pos:start="703:30" pos:end="703:38"><name pos:start="703:30" pos:end="703:38">host_time</name></expr></argument>, <argument pos:start="703:41" pos:end="703:44"><expr pos:start="703:41" pos:end="703:44"><name pos:start="703:41" pos:end="703:44">arg1</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="705:17" pos:end="705:28"><block_content pos:start="705:17" pos:end="705:28">

                <goto pos:start="705:17" pos:end="705:28">goto <name pos:start="705:22" pos:end="705:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="707:13" pos:end="707:47"><expr pos:start="707:13" pos:end="707:46"><name pos:start="707:13" pos:end="707:15">ret</name> <operator pos:start="707:17" pos:end="707:17">=</operator> <call pos:start="707:19" pos:end="707:46"><name pos:start="707:19" pos:end="707:27">get_errno</name><argument_list pos:start="707:28" pos:end="707:46">(<argument pos:start="707:29" pos:end="707:45"><expr pos:start="707:29" pos:end="707:45"><call pos:start="707:29" pos:end="707:45"><name pos:start="707:29" pos:end="707:33">stime</name><argument_list pos:start="707:34" pos:end="707:45">(<argument pos:start="707:35" pos:end="707:44"><expr pos:start="707:35" pos:end="707:44"><operator pos:start="707:35" pos:end="707:35">&amp;</operator><name pos:start="707:36" pos:end="707:44">host_time</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="711:9" pos:end="714:0">break;</break>

<cpp:endif pos:start="713:1" pos:end="713:6">#<cpp:directive pos:start="713:2" pos:end="713:6">endif</cpp:directive></cpp:endif>

    <case pos:start="715:5" pos:end="715:26">case <expr pos:start="715:10" pos:end="715:25"><name pos:start="715:10" pos:end="715:25">TARGET_NR_ptrace</name></expr>:</case>

        <goto pos:start="717:9" pos:end="720:0">goto <name pos:start="717:14" pos:end="717:26">unimplemented</name>;</goto>

<cpp:ifdef pos:start="719:1" pos:end="719:22">#<cpp:directive pos:start="719:2" pos:end="719:6">ifdef</cpp:directive> <name pos:start="719:8" pos:end="719:22">TARGET_NR_alarm</name></cpp:ifdef> <comment type="block" pos:start="719:24" pos:end="719:41">/* not on alpha */</comment>

    <case pos:start="721:5" pos:end="721:25">case <expr pos:start="721:10" pos:end="721:24"><name pos:start="721:10" pos:end="721:24">TARGET_NR_alarm</name></expr>:</case>

        <expr_stmt pos:start="723:9" pos:end="723:26"><expr pos:start="723:9" pos:end="723:25"><name pos:start="723:9" pos:end="723:11">ret</name> <operator pos:start="723:13" pos:end="723:13">=</operator> <call pos:start="723:15" pos:end="723:25"><name pos:start="723:15" pos:end="723:19">alarm</name><argument_list pos:start="723:20" pos:end="723:25">(<argument pos:start="723:21" pos:end="723:24"><expr pos:start="723:21" pos:end="723:24"><name pos:start="723:21" pos:end="723:24">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="725:9" pos:end="730:0">break;</break>

<cpp:endif pos:start="727:1" pos:end="727:6">#<cpp:directive pos:start="727:2" pos:end="727:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="729:1" pos:end="729:25">#<cpp:directive pos:start="729:2" pos:end="729:6">ifdef</cpp:directive> <name pos:start="729:8" pos:end="729:25">TARGET_NR_oldfstat</name></cpp:ifdef>

    <case pos:start="731:5" pos:end="731:28">case <expr pos:start="731:10" pos:end="731:27"><name pos:start="731:10" pos:end="731:27">TARGET_NR_oldfstat</name></expr>:</case>

        <goto pos:start="733:9" pos:end="738:0">goto <name pos:start="733:14" pos:end="733:26">unimplemented</name>;</goto>

<cpp:endif pos:start="735:1" pos:end="735:6">#<cpp:directive pos:start="735:2" pos:end="735:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="737:1" pos:end="737:22">#<cpp:directive pos:start="737:2" pos:end="737:6">ifdef</cpp:directive> <name pos:start="737:8" pos:end="737:22">TARGET_NR_pause</name></cpp:ifdef> <comment type="block" pos:start="737:24" pos:end="737:41">/* not on alpha */</comment>

    <case pos:start="739:5" pos:end="739:25">case <expr pos:start="739:10" pos:end="739:24"><name pos:start="739:10" pos:end="739:24">TARGET_NR_pause</name></expr>:</case>

        <expr_stmt pos:start="741:9" pos:end="741:33"><expr pos:start="741:9" pos:end="741:32"><name pos:start="741:9" pos:end="741:11">ret</name> <operator pos:start="741:13" pos:end="741:13">=</operator> <call pos:start="741:15" pos:end="741:32"><name pos:start="741:15" pos:end="741:23">get_errno</name><argument_list pos:start="741:24" pos:end="741:32">(<argument pos:start="741:25" pos:end="741:31"><expr pos:start="741:25" pos:end="741:31"><call pos:start="741:25" pos:end="741:31"><name pos:start="741:25" pos:end="741:29">pause</name><argument_list pos:start="741:30" pos:end="741:31">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="743:9" pos:end="748:0">break;</break>

<cpp:endif pos:start="745:1" pos:end="745:6">#<cpp:directive pos:start="745:2" pos:end="745:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="747:1" pos:end="747:22">#<cpp:directive pos:start="747:2" pos:end="747:6">ifdef</cpp:directive> <name pos:start="747:8" pos:end="747:22">TARGET_NR_utime</name></cpp:ifdef>

    <case pos:start="749:5" pos:end="749:25">case <expr pos:start="749:10" pos:end="749:24"><name pos:start="749:10" pos:end="749:24">TARGET_NR_utime</name></expr>:</case>

        <block pos:start="751:9" pos:end="785:9">{<block_content pos:start="753:13" pos:end="783:36">

            <decl_stmt pos:start="753:13" pos:end="753:44"><decl pos:start="753:13" pos:end="753:31"><type pos:start="753:13" pos:end="753:26"><name pos:start="753:13" pos:end="753:26"><name pos:start="753:13" pos:end="753:18">struct</name> <name pos:start="753:20" pos:end="753:26">utimbuf</name></name></type> <name pos:start="753:28" pos:end="753:31">tbuf</name></decl>, <decl pos:start="753:34" pos:end="753:43"><type ref="prev" pos:start="753:13" pos:end="753:26"><modifier pos:start="753:34" pos:end="753:34">*</modifier></type><name pos:start="753:35" pos:end="753:43">host_tbuf</name></decl>;</decl_stmt>

            <decl_stmt pos:start="755:13" pos:end="755:47"><decl pos:start="755:13" pos:end="755:46"><type pos:start="755:13" pos:end="755:35"><name pos:start="755:13" pos:end="755:33"><name pos:start="755:13" pos:end="755:18">struct</name> <name pos:start="755:20" pos:end="755:33">target_utimbuf</name></name> <modifier pos:start="755:35" pos:end="755:35">*</modifier></type><name pos:start="755:36" pos:end="755:46">target_tbuf</name></decl>;</decl_stmt>

            <if_stmt pos:start="757:13" pos:end="775:13"><if pos:start="757:13" pos:end="771:13">if <condition pos:start="757:16" pos:end="757:21">(<expr pos:start="757:17" pos:end="757:20"><name pos:start="757:17" pos:end="757:20">arg2</name></expr>)</condition> <block pos:start="757:23" pos:end="771:13">{<block_content pos:start="759:17" pos:end="769:34">

                <if_stmt pos:start="759:17" pos:end="761:32"><if pos:start="759:17" pos:end="761:32">if <condition pos:start="759:20" pos:end="759:73">(<expr pos:start="759:21" pos:end="759:72"><operator pos:start="759:21" pos:end="759:21">!</operator><call pos:start="759:22" pos:end="759:72"><name pos:start="759:22" pos:end="759:37">lock_user_struct</name><argument_list pos:start="759:38" pos:end="759:72">(<argument pos:start="759:39" pos:end="759:49"><expr pos:start="759:39" pos:end="759:49"><name pos:start="759:39" pos:end="759:49">VERIFY_READ</name></expr></argument>, <argument pos:start="759:52" pos:end="759:62"><expr pos:start="759:52" pos:end="759:62"><name pos:start="759:52" pos:end="759:62">target_tbuf</name></expr></argument>, <argument pos:start="759:65" pos:end="759:68"><expr pos:start="759:65" pos:end="759:68"><name pos:start="759:65" pos:end="759:68">arg2</name></expr></argument>, <argument pos:start="759:71" pos:end="759:71"><expr pos:start="759:71" pos:end="759:71"><literal type="number" pos:start="759:71" pos:end="759:71">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="761:21" pos:end="761:32"><block_content pos:start="761:21" pos:end="761:32">

                    <goto pos:start="761:21" pos:end="761:32">goto <name pos:start="761:26" pos:end="761:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="763:17" pos:end="763:58"><expr pos:start="763:17" pos:end="763:57"><name pos:start="763:17" pos:end="763:27"><name pos:start="763:17" pos:end="763:20">tbuf</name><operator pos:start="763:21" pos:end="763:21">.</operator><name pos:start="763:22" pos:end="763:27">actime</name></name> <operator pos:start="763:29" pos:end="763:29">=</operator> <call pos:start="763:31" pos:end="763:57"><name pos:start="763:31" pos:end="763:36">tswapl</name><argument_list pos:start="763:37" pos:end="763:57">(<argument pos:start="763:38" pos:end="763:56"><expr pos:start="763:38" pos:end="763:56"><name pos:start="763:38" pos:end="763:56"><name pos:start="763:38" pos:end="763:48">target_tbuf</name><operator pos:start="763:49" pos:end="763:50">-&gt;</operator><name pos:start="763:51" pos:end="763:56">actime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="765:17" pos:end="765:60"><expr pos:start="765:17" pos:end="765:59"><name pos:start="765:17" pos:end="765:28"><name pos:start="765:17" pos:end="765:20">tbuf</name><operator pos:start="765:21" pos:end="765:21">.</operator><name pos:start="765:22" pos:end="765:28">modtime</name></name> <operator pos:start="765:30" pos:end="765:30">=</operator> <call pos:start="765:32" pos:end="765:59"><name pos:start="765:32" pos:end="765:37">tswapl</name><argument_list pos:start="765:38" pos:end="765:59">(<argument pos:start="765:39" pos:end="765:58"><expr pos:start="765:39" pos:end="765:58"><name pos:start="765:39" pos:end="765:58"><name pos:start="765:39" pos:end="765:49">target_tbuf</name><operator pos:start="765:50" pos:end="765:51">-&gt;</operator><name pos:start="765:52" pos:end="765:58">modtime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="767:17" pos:end="767:57"><expr pos:start="767:17" pos:end="767:56"><call pos:start="767:17" pos:end="767:56"><name pos:start="767:17" pos:end="767:34">unlock_user_struct</name><argument_list pos:start="767:35" pos:end="767:56">(<argument pos:start="767:36" pos:end="767:46"><expr pos:start="767:36" pos:end="767:46"><name pos:start="767:36" pos:end="767:46">target_tbuf</name></expr></argument>, <argument pos:start="767:49" pos:end="767:52"><expr pos:start="767:49" pos:end="767:52"><name pos:start="767:49" pos:end="767:52">arg2</name></expr></argument>, <argument pos:start="767:55" pos:end="767:55"><expr pos:start="767:55" pos:end="767:55"><literal type="number" pos:start="767:55" pos:end="767:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="769:17" pos:end="769:34"><expr pos:start="769:17" pos:end="769:33"><name pos:start="769:17" pos:end="769:25">host_tbuf</name> <operator pos:start="769:27" pos:end="769:27">=</operator> <operator pos:start="769:29" pos:end="769:29">&amp;</operator><name pos:start="769:30" pos:end="769:33">tbuf</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="771:15" pos:end="775:13">else <block pos:start="771:20" pos:end="775:13">{<block_content pos:start="773:17" pos:end="773:33">

                <expr_stmt pos:start="773:17" pos:end="773:33"><expr pos:start="773:17" pos:end="773:32"><name pos:start="773:17" pos:end="773:25">host_tbuf</name> <operator pos:start="773:27" pos:end="773:27">=</operator> <name pos:start="773:29" pos:end="773:32">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="777:13" pos:end="779:28"><if pos:start="777:13" pos:end="779:28">if <condition pos:start="777:16" pos:end="777:46">(<expr pos:start="777:17" pos:end="777:45"><operator pos:start="777:17" pos:end="777:17">!</operator><operator pos:start="777:18" pos:end="777:18">(</operator><name pos:start="777:19" pos:end="777:19">p</name> <operator pos:start="777:21" pos:end="777:21">=</operator> <call pos:start="777:23" pos:end="777:44"><name pos:start="777:23" pos:end="777:38">lock_user_string</name><argument_list pos:start="777:39" pos:end="777:44">(<argument pos:start="777:40" pos:end="777:43"><expr pos:start="777:40" pos:end="777:43"><name pos:start="777:40" pos:end="777:43">arg1</name></expr></argument>)</argument_list></call><operator pos:start="777:45" pos:end="777:45">)</operator></expr>)</condition><block type="pseudo" pos:start="779:17" pos:end="779:28"><block_content pos:start="779:17" pos:end="779:28">

                <goto pos:start="779:17" pos:end="779:28">goto <name pos:start="779:22" pos:end="779:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="781:13" pos:end="781:49"><expr pos:start="781:13" pos:end="781:48"><name pos:start="781:13" pos:end="781:15">ret</name> <operator pos:start="781:17" pos:end="781:17">=</operator> <call pos:start="781:19" pos:end="781:48"><name pos:start="781:19" pos:end="781:27">get_errno</name><argument_list pos:start="781:28" pos:end="781:48">(<argument pos:start="781:29" pos:end="781:47"><expr pos:start="781:29" pos:end="781:47"><call pos:start="781:29" pos:end="781:47"><name pos:start="781:29" pos:end="781:33">utime</name><argument_list pos:start="781:34" pos:end="781:47">(<argument pos:start="781:35" pos:end="781:35"><expr pos:start="781:35" pos:end="781:35"><name pos:start="781:35" pos:end="781:35">p</name></expr></argument>, <argument pos:start="781:38" pos:end="781:46"><expr pos:start="781:38" pos:end="781:46"><name pos:start="781:38" pos:end="781:46">host_tbuf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="783:13" pos:end="783:36"><expr pos:start="783:13" pos:end="783:35"><call pos:start="783:13" pos:end="783:35"><name pos:start="783:13" pos:end="783:23">unlock_user</name><argument_list pos:start="783:24" pos:end="783:35">(<argument pos:start="783:25" pos:end="783:25"><expr pos:start="783:25" pos:end="783:25"><name pos:start="783:25" pos:end="783:25">p</name></expr></argument>, <argument pos:start="783:28" pos:end="783:31"><expr pos:start="783:28" pos:end="783:31"><name pos:start="783:28" pos:end="783:31">arg1</name></expr></argument>, <argument pos:start="783:34" pos:end="783:34"><expr pos:start="783:34" pos:end="783:34"><literal type="number" pos:start="783:34" pos:end="783:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="787:9" pos:end="790:0">break;</break>

<cpp:endif pos:start="789:1" pos:end="789:6">#<cpp:directive pos:start="789:2" pos:end="789:6">endif</cpp:directive></cpp:endif>

    <case pos:start="791:5" pos:end="791:26">case <expr pos:start="791:10" pos:end="791:25"><name pos:start="791:10" pos:end="791:25">TARGET_NR_utimes</name></expr>:</case>

        <block pos:start="793:9" pos:end="823:9">{<block_content pos:start="795:13" pos:end="821:36">

            <decl_stmt pos:start="795:13" pos:end="795:39"><decl pos:start="795:13" pos:end="795:31"><type pos:start="795:13" pos:end="795:28"><name pos:start="795:13" pos:end="795:26"><name pos:start="795:13" pos:end="795:18">struct</name> <name pos:start="795:20" pos:end="795:26">timeval</name></name> <modifier pos:start="795:28" pos:end="795:28">*</modifier></type><name pos:start="795:29" pos:end="795:31">tvp</name></decl>, <decl pos:start="795:34" pos:end="795:38"><type ref="prev" pos:start="795:13" pos:end="795:28"/><name pos:start="795:34" pos:end="795:38"><name pos:start="795:34" pos:end="795:35">tv</name><index pos:start="795:36" pos:end="795:38">[<expr pos:start="795:37" pos:end="795:37"><literal type="number" pos:start="795:37" pos:end="795:37">2</literal></expr>]</index></name></decl>;</decl_stmt>

            <if_stmt pos:start="797:13" pos:end="813:13"><if pos:start="797:13" pos:end="809:13">if <condition pos:start="797:16" pos:end="797:21">(<expr pos:start="797:17" pos:end="797:20"><name pos:start="797:17" pos:end="797:20">arg2</name></expr>)</condition> <block pos:start="797:23" pos:end="809:13">{<block_content pos:start="799:17" pos:end="807:25">

                <if_stmt pos:start="799:17" pos:end="805:32"><if pos:start="799:17" pos:end="805:32">if <condition pos:start="799:20" pos:end="803:84">(<expr pos:start="799:21" pos:end="803:83"><call pos:start="799:21" pos:end="799:56"><name pos:start="799:21" pos:end="799:42">copy_from_user_timeval</name><argument_list pos:start="799:43" pos:end="799:56">(<argument pos:start="799:44" pos:end="799:49"><expr pos:start="799:44" pos:end="799:49"><operator pos:start="799:44" pos:end="799:44">&amp;</operator><name pos:start="799:45" pos:end="799:49"><name pos:start="799:45" pos:end="799:46">tv</name><index pos:start="799:47" pos:end="799:49">[<expr pos:start="799:48" pos:end="799:48"><literal type="number" pos:start="799:48" pos:end="799:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="799:52" pos:end="799:55"><expr pos:start="799:52" pos:end="799:55"><name pos:start="799:52" pos:end="799:55">arg2</name></expr></argument>)</argument_list></call>

                    <operator pos:start="801:21" pos:end="801:22">||</operator> <call pos:start="801:24" pos:end="803:83"><name pos:start="801:24" pos:end="801:45">copy_from_user_timeval</name><argument_list pos:start="801:46" pos:end="803:83">(<argument pos:start="801:47" pos:end="801:52"><expr pos:start="801:47" pos:end="801:52"><operator pos:start="801:47" pos:end="801:47">&amp;</operator><name pos:start="801:48" pos:end="801:52"><name pos:start="801:48" pos:end="801:49">tv</name><index pos:start="801:50" pos:end="801:52">[<expr pos:start="801:51" pos:end="801:51"><literal type="number" pos:start="801:51" pos:end="801:51">1</literal></expr>]</index></name></expr></argument>,

                                              <argument pos:start="803:47" pos:end="803:82"><expr pos:start="803:47" pos:end="803:82"><name pos:start="803:47" pos:end="803:50">arg2</name> <operator pos:start="803:52" pos:end="803:52">+</operator> <sizeof pos:start="803:54" pos:end="803:82">sizeof<argument_list pos:start="803:60" pos:end="803:82">(<argument pos:start="803:61" pos:end="803:81"><expr pos:start="803:61" pos:end="803:81">struct <name pos:start="803:68" pos:end="803:81">target_timeval</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="805:21" pos:end="805:32"><block_content pos:start="805:21" pos:end="805:32">

                    <goto pos:start="805:21" pos:end="805:32">goto <name pos:start="805:26" pos:end="805:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="807:17" pos:end="807:25"><expr pos:start="807:17" pos:end="807:24"><name pos:start="807:17" pos:end="807:19">tvp</name> <operator pos:start="807:21" pos:end="807:21">=</operator> <name pos:start="807:23" pos:end="807:24">tv</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="809:15" pos:end="813:13">else <block pos:start="809:20" pos:end="813:13">{<block_content pos:start="811:17" pos:end="811:27">

                <expr_stmt pos:start="811:17" pos:end="811:27"><expr pos:start="811:17" pos:end="811:26"><name pos:start="811:17" pos:end="811:19">tvp</name> <operator pos:start="811:21" pos:end="811:21">=</operator> <name pos:start="811:23" pos:end="811:26">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="815:13" pos:end="817:28"><if pos:start="815:13" pos:end="817:28">if <condition pos:start="815:16" pos:end="815:46">(<expr pos:start="815:17" pos:end="815:45"><operator pos:start="815:17" pos:end="815:17">!</operator><operator pos:start="815:18" pos:end="815:18">(</operator><name pos:start="815:19" pos:end="815:19">p</name> <operator pos:start="815:21" pos:end="815:21">=</operator> <call pos:start="815:23" pos:end="815:44"><name pos:start="815:23" pos:end="815:38">lock_user_string</name><argument_list pos:start="815:39" pos:end="815:44">(<argument pos:start="815:40" pos:end="815:43"><expr pos:start="815:40" pos:end="815:43"><name pos:start="815:40" pos:end="815:43">arg1</name></expr></argument>)</argument_list></call><operator pos:start="815:45" pos:end="815:45">)</operator></expr>)</condition><block type="pseudo" pos:start="817:17" pos:end="817:28"><block_content pos:start="817:17" pos:end="817:28">

                <goto pos:start="817:17" pos:end="817:28">goto <name pos:start="817:22" pos:end="817:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="819:13" pos:end="819:44"><expr pos:start="819:13" pos:end="819:43"><name pos:start="819:13" pos:end="819:15">ret</name> <operator pos:start="819:17" pos:end="819:17">=</operator> <call pos:start="819:19" pos:end="819:43"><name pos:start="819:19" pos:end="819:27">get_errno</name><argument_list pos:start="819:28" pos:end="819:43">(<argument pos:start="819:29" pos:end="819:42"><expr pos:start="819:29" pos:end="819:42"><call pos:start="819:29" pos:end="819:42"><name pos:start="819:29" pos:end="819:34">utimes</name><argument_list pos:start="819:35" pos:end="819:42">(<argument pos:start="819:36" pos:end="819:36"><expr pos:start="819:36" pos:end="819:36"><name pos:start="819:36" pos:end="819:36">p</name></expr></argument>, <argument pos:start="819:39" pos:end="819:41"><expr pos:start="819:39" pos:end="819:41"><name pos:start="819:39" pos:end="819:41">tvp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="821:13" pos:end="821:36"><expr pos:start="821:13" pos:end="821:35"><call pos:start="821:13" pos:end="821:35"><name pos:start="821:13" pos:end="821:23">unlock_user</name><argument_list pos:start="821:24" pos:end="821:35">(<argument pos:start="821:25" pos:end="821:25"><expr pos:start="821:25" pos:end="821:25"><name pos:start="821:25" pos:end="821:25">p</name></expr></argument>, <argument pos:start="821:28" pos:end="821:31"><expr pos:start="821:28" pos:end="821:31"><name pos:start="821:28" pos:end="821:31">arg1</name></expr></argument>, <argument pos:start="821:34" pos:end="821:34"><expr pos:start="821:34" pos:end="821:34"><literal type="number" pos:start="821:34" pos:end="821:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="825:9" pos:end="828:0">break;</break>

<cpp:if pos:start="827:1" pos:end="827:59">#<cpp:directive pos:start="827:2" pos:end="827:3">if</cpp:directive> <expr pos:start="827:5" pos:end="827:59"><call pos:start="827:5" pos:end="827:32"><name pos:start="827:5" pos:end="827:11">defined</name><argument_list pos:start="827:12" pos:end="827:32">(<argument pos:start="827:13" pos:end="827:31"><expr pos:start="827:13" pos:end="827:31"><name pos:start="827:13" pos:end="827:31">TARGET_NR_futimesat</name></expr></argument>)</argument_list></call> <operator pos:start="827:34" pos:end="827:35">&amp;&amp;</operator> <call pos:start="827:37" pos:end="827:59"><name pos:start="827:37" pos:end="827:43">defined</name><argument_list pos:start="827:44" pos:end="827:59">(<argument pos:start="827:45" pos:end="827:58"><expr pos:start="827:45" pos:end="827:58"><name pos:start="827:45" pos:end="827:58">__NR_futimesat</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="829:5" pos:end="829:29">case <expr pos:start="829:10" pos:end="829:28"><name pos:start="829:10" pos:end="829:28">TARGET_NR_futimesat</name></expr>:</case>

        <block pos:start="831:9" pos:end="861:9">{<block_content pos:start="833:13" pos:end="859:36">

            <decl_stmt pos:start="833:13" pos:end="833:39"><decl pos:start="833:13" pos:end="833:31"><type pos:start="833:13" pos:end="833:28"><name pos:start="833:13" pos:end="833:26"><name pos:start="833:13" pos:end="833:18">struct</name> <name pos:start="833:20" pos:end="833:26">timeval</name></name> <modifier pos:start="833:28" pos:end="833:28">*</modifier></type><name pos:start="833:29" pos:end="833:31">tvp</name></decl>, <decl pos:start="833:34" pos:end="833:38"><type ref="prev" pos:start="833:13" pos:end="833:28"/><name pos:start="833:34" pos:end="833:38"><name pos:start="833:34" pos:end="833:35">tv</name><index pos:start="833:36" pos:end="833:38">[<expr pos:start="833:37" pos:end="833:37"><literal type="number" pos:start="833:37" pos:end="833:37">2</literal></expr>]</index></name></decl>;</decl_stmt>

            <if_stmt pos:start="835:13" pos:end="851:13"><if pos:start="835:13" pos:end="847:13">if <condition pos:start="835:16" pos:end="835:21">(<expr pos:start="835:17" pos:end="835:20"><name pos:start="835:17" pos:end="835:20">arg3</name></expr>)</condition> <block pos:start="835:23" pos:end="847:13">{<block_content pos:start="837:17" pos:end="845:25">

                <if_stmt pos:start="837:17" pos:end="843:32"><if pos:start="837:17" pos:end="843:32">if <condition pos:start="837:20" pos:end="841:84">(<expr pos:start="837:21" pos:end="841:83"><call pos:start="837:21" pos:end="837:56"><name pos:start="837:21" pos:end="837:42">copy_from_user_timeval</name><argument_list pos:start="837:43" pos:end="837:56">(<argument pos:start="837:44" pos:end="837:49"><expr pos:start="837:44" pos:end="837:49"><operator pos:start="837:44" pos:end="837:44">&amp;</operator><name pos:start="837:45" pos:end="837:49"><name pos:start="837:45" pos:end="837:46">tv</name><index pos:start="837:47" pos:end="837:49">[<expr pos:start="837:48" pos:end="837:48"><literal type="number" pos:start="837:48" pos:end="837:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="837:52" pos:end="837:55"><expr pos:start="837:52" pos:end="837:55"><name pos:start="837:52" pos:end="837:55">arg3</name></expr></argument>)</argument_list></call>

                    <operator pos:start="839:21" pos:end="839:22">||</operator> <call pos:start="839:24" pos:end="841:83"><name pos:start="839:24" pos:end="839:45">copy_from_user_timeval</name><argument_list pos:start="839:46" pos:end="841:83">(<argument pos:start="839:47" pos:end="839:52"><expr pos:start="839:47" pos:end="839:52"><operator pos:start="839:47" pos:end="839:47">&amp;</operator><name pos:start="839:48" pos:end="839:52"><name pos:start="839:48" pos:end="839:49">tv</name><index pos:start="839:50" pos:end="839:52">[<expr pos:start="839:51" pos:end="839:51"><literal type="number" pos:start="839:51" pos:end="839:51">1</literal></expr>]</index></name></expr></argument>,

                                              <argument pos:start="841:47" pos:end="841:82"><expr pos:start="841:47" pos:end="841:82"><name pos:start="841:47" pos:end="841:50">arg3</name> <operator pos:start="841:52" pos:end="841:52">+</operator> <sizeof pos:start="841:54" pos:end="841:82">sizeof<argument_list pos:start="841:60" pos:end="841:82">(<argument pos:start="841:61" pos:end="841:81"><expr pos:start="841:61" pos:end="841:81">struct <name pos:start="841:68" pos:end="841:81">target_timeval</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="843:21" pos:end="843:32"><block_content pos:start="843:21" pos:end="843:32">

                    <goto pos:start="843:21" pos:end="843:32">goto <name pos:start="843:26" pos:end="843:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="845:17" pos:end="845:25"><expr pos:start="845:17" pos:end="845:24"><name pos:start="845:17" pos:end="845:19">tvp</name> <operator pos:start="845:21" pos:end="845:21">=</operator> <name pos:start="845:23" pos:end="845:24">tv</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="847:15" pos:end="851:13">else <block pos:start="847:20" pos:end="851:13">{<block_content pos:start="849:17" pos:end="849:27">

                <expr_stmt pos:start="849:17" pos:end="849:27"><expr pos:start="849:17" pos:end="849:26"><name pos:start="849:17" pos:end="849:19">tvp</name> <operator pos:start="849:21" pos:end="849:21">=</operator> <name pos:start="849:23" pos:end="849:26">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="853:13" pos:end="855:28"><if pos:start="853:13" pos:end="855:28">if <condition pos:start="853:16" pos:end="853:46">(<expr pos:start="853:17" pos:end="853:45"><operator pos:start="853:17" pos:end="853:17">!</operator><operator pos:start="853:18" pos:end="853:18">(</operator><name pos:start="853:19" pos:end="853:19">p</name> <operator pos:start="853:21" pos:end="853:21">=</operator> <call pos:start="853:23" pos:end="853:44"><name pos:start="853:23" pos:end="853:38">lock_user_string</name><argument_list pos:start="853:39" pos:end="853:44">(<argument pos:start="853:40" pos:end="853:43"><expr pos:start="853:40" pos:end="853:43"><name pos:start="853:40" pos:end="853:43">arg2</name></expr></argument>)</argument_list></call><operator pos:start="853:45" pos:end="853:45">)</operator></expr>)</condition><block type="pseudo" pos:start="855:17" pos:end="855:28"><block_content pos:start="855:17" pos:end="855:28">

                <goto pos:start="855:17" pos:end="855:28">goto <name pos:start="855:22" pos:end="855:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="857:13" pos:end="857:63"><expr pos:start="857:13" pos:end="857:62"><name pos:start="857:13" pos:end="857:15">ret</name> <operator pos:start="857:17" pos:end="857:17">=</operator> <call pos:start="857:19" pos:end="857:62"><name pos:start="857:19" pos:end="857:27">get_errno</name><argument_list pos:start="857:28" pos:end="857:62">(<argument pos:start="857:29" pos:end="857:61"><expr pos:start="857:29" pos:end="857:61"><call pos:start="857:29" pos:end="857:61"><name pos:start="857:29" pos:end="857:41">sys_futimesat</name><argument_list pos:start="857:42" pos:end="857:61">(<argument pos:start="857:43" pos:end="857:46"><expr pos:start="857:43" pos:end="857:46"><name pos:start="857:43" pos:end="857:46">arg1</name></expr></argument>, <argument pos:start="857:49" pos:end="857:55"><expr pos:start="857:49" pos:end="857:55"><call pos:start="857:49" pos:end="857:55"><name pos:start="857:49" pos:end="857:52">path</name><argument_list pos:start="857:53" pos:end="857:55">(<argument pos:start="857:54" pos:end="857:54"><expr pos:start="857:54" pos:end="857:54"><name pos:start="857:54" pos:end="857:54">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="857:58" pos:end="857:60"><expr pos:start="857:58" pos:end="857:60"><name pos:start="857:58" pos:end="857:60">tvp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="859:13" pos:end="859:36"><expr pos:start="859:13" pos:end="859:35"><call pos:start="859:13" pos:end="859:35"><name pos:start="859:13" pos:end="859:23">unlock_user</name><argument_list pos:start="859:24" pos:end="859:35">(<argument pos:start="859:25" pos:end="859:25"><expr pos:start="859:25" pos:end="859:25"><name pos:start="859:25" pos:end="859:25">p</name></expr></argument>, <argument pos:start="859:28" pos:end="859:31"><expr pos:start="859:28" pos:end="859:31"><name pos:start="859:28" pos:end="859:31">arg2</name></expr></argument>, <argument pos:start="859:34" pos:end="859:34"><expr pos:start="859:34" pos:end="859:34"><literal type="number" pos:start="859:34" pos:end="859:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="863:9" pos:end="868:0">break;</break>

<cpp:endif pos:start="865:1" pos:end="865:6">#<cpp:directive pos:start="865:2" pos:end="865:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="867:1" pos:end="867:21">#<cpp:directive pos:start="867:2" pos:end="867:6">ifdef</cpp:directive> <name pos:start="867:8" pos:end="867:21">TARGET_NR_stty</name></cpp:ifdef>

    <case pos:start="869:5" pos:end="869:24">case <expr pos:start="869:10" pos:end="869:23"><name pos:start="869:10" pos:end="869:23">TARGET_NR_stty</name></expr>:</case>

        <goto pos:start="871:9" pos:end="876:0">goto <name pos:start="871:14" pos:end="871:26">unimplemented</name>;</goto>

<cpp:endif pos:start="873:1" pos:end="873:6">#<cpp:directive pos:start="873:2" pos:end="873:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="875:1" pos:end="875:21">#<cpp:directive pos:start="875:2" pos:end="875:6">ifdef</cpp:directive> <name pos:start="875:8" pos:end="875:21">TARGET_NR_gtty</name></cpp:ifdef>

    <case pos:start="877:5" pos:end="877:24">case <expr pos:start="877:10" pos:end="877:23"><name pos:start="877:10" pos:end="877:23">TARGET_NR_gtty</name></expr>:</case>

        <goto pos:start="879:9" pos:end="882:0">goto <name pos:start="879:14" pos:end="879:26">unimplemented</name>;</goto>

<cpp:endif pos:start="881:1" pos:end="881:6">#<cpp:directive pos:start="881:2" pos:end="881:6">endif</cpp:directive></cpp:endif>

    <case pos:start="883:5" pos:end="883:26">case <expr pos:start="883:10" pos:end="883:25"><name pos:start="883:10" pos:end="883:25">TARGET_NR_access</name></expr>:</case>

        <if_stmt pos:start="885:9" pos:end="887:24"><if pos:start="885:9" pos:end="887:24">if <condition pos:start="885:12" pos:end="885:42">(<expr pos:start="885:13" pos:end="885:41"><operator pos:start="885:13" pos:end="885:13">!</operator><operator pos:start="885:14" pos:end="885:14">(</operator><name pos:start="885:15" pos:end="885:15">p</name> <operator pos:start="885:17" pos:end="885:17">=</operator> <call pos:start="885:19" pos:end="885:40"><name pos:start="885:19" pos:end="885:34">lock_user_string</name><argument_list pos:start="885:35" pos:end="885:40">(<argument pos:start="885:36" pos:end="885:39"><expr pos:start="885:36" pos:end="885:39"><name pos:start="885:36" pos:end="885:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="885:41" pos:end="885:41">)</operator></expr>)</condition><block type="pseudo" pos:start="887:13" pos:end="887:24"><block_content pos:start="887:13" pos:end="887:24">

            <goto pos:start="887:13" pos:end="887:24">goto <name pos:start="887:18" pos:end="887:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="889:9" pos:end="889:47"><expr pos:start="889:9" pos:end="889:46"><name pos:start="889:9" pos:end="889:11">ret</name> <operator pos:start="889:13" pos:end="889:13">=</operator> <call pos:start="889:15" pos:end="889:46"><name pos:start="889:15" pos:end="889:23">get_errno</name><argument_list pos:start="889:24" pos:end="889:46">(<argument pos:start="889:25" pos:end="889:45"><expr pos:start="889:25" pos:end="889:45"><call pos:start="889:25" pos:end="889:45"><name pos:start="889:25" pos:end="889:30">access</name><argument_list pos:start="889:31" pos:end="889:45">(<argument pos:start="889:32" pos:end="889:38"><expr pos:start="889:32" pos:end="889:38"><call pos:start="889:32" pos:end="889:38"><name pos:start="889:32" pos:end="889:35">path</name><argument_list pos:start="889:36" pos:end="889:38">(<argument pos:start="889:37" pos:end="889:37"><expr pos:start="889:37" pos:end="889:37"><name pos:start="889:37" pos:end="889:37">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="889:41" pos:end="889:44"><expr pos:start="889:41" pos:end="889:44"><name pos:start="889:41" pos:end="889:44">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="891:9" pos:end="891:32"><expr pos:start="891:9" pos:end="891:31"><call pos:start="891:9" pos:end="891:31"><name pos:start="891:9" pos:end="891:19">unlock_user</name><argument_list pos:start="891:20" pos:end="891:31">(<argument pos:start="891:21" pos:end="891:21"><expr pos:start="891:21" pos:end="891:21"><name pos:start="891:21" pos:end="891:21">p</name></expr></argument>, <argument pos:start="891:24" pos:end="891:27"><expr pos:start="891:24" pos:end="891:27"><name pos:start="891:24" pos:end="891:27">arg1</name></expr></argument>, <argument pos:start="891:30" pos:end="891:30"><expr pos:start="891:30" pos:end="891:30"><literal type="number" pos:start="891:30" pos:end="891:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="893:9" pos:end="896:0">break;</break>

<cpp:if pos:start="895:1" pos:end="895:59">#<cpp:directive pos:start="895:2" pos:end="895:3">if</cpp:directive> <expr pos:start="895:5" pos:end="895:59"><call pos:start="895:5" pos:end="895:32"><name pos:start="895:5" pos:end="895:11">defined</name><argument_list pos:start="895:12" pos:end="895:32">(<argument pos:start="895:13" pos:end="895:31"><expr pos:start="895:13" pos:end="895:31"><name pos:start="895:13" pos:end="895:31">TARGET_NR_faccessat</name></expr></argument>)</argument_list></call> <operator pos:start="895:34" pos:end="895:35">&amp;&amp;</operator> <call pos:start="895:37" pos:end="895:59"><name pos:start="895:37" pos:end="895:43">defined</name><argument_list pos:start="895:44" pos:end="895:59">(<argument pos:start="895:45" pos:end="895:58"><expr pos:start="895:45" pos:end="895:58"><name pos:start="895:45" pos:end="895:58">__NR_faccessat</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="897:5" pos:end="897:29">case <expr pos:start="897:10" pos:end="897:28"><name pos:start="897:10" pos:end="897:28">TARGET_NR_faccessat</name></expr>:</case>

        <if_stmt pos:start="899:9" pos:end="901:24"><if pos:start="899:9" pos:end="901:24">if <condition pos:start="899:12" pos:end="899:42">(<expr pos:start="899:13" pos:end="899:41"><operator pos:start="899:13" pos:end="899:13">!</operator><operator pos:start="899:14" pos:end="899:14">(</operator><name pos:start="899:15" pos:end="899:15">p</name> <operator pos:start="899:17" pos:end="899:17">=</operator> <call pos:start="899:19" pos:end="899:40"><name pos:start="899:19" pos:end="899:34">lock_user_string</name><argument_list pos:start="899:35" pos:end="899:40">(<argument pos:start="899:36" pos:end="899:39"><expr pos:start="899:36" pos:end="899:39"><name pos:start="899:36" pos:end="899:39">arg2</name></expr></argument>)</argument_list></call><operator pos:start="899:41" pos:end="899:41">)</operator></expr>)</condition><block type="pseudo" pos:start="901:13" pos:end="901:24"><block_content pos:start="901:13" pos:end="901:24">

            <goto pos:start="901:13" pos:end="901:24">goto <name pos:start="901:18" pos:end="901:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="903:9" pos:end="903:54"><expr pos:start="903:9" pos:end="903:53"><name pos:start="903:9" pos:end="903:11">ret</name> <operator pos:start="903:13" pos:end="903:13">=</operator> <call pos:start="903:15" pos:end="903:53"><name pos:start="903:15" pos:end="903:23">get_errno</name><argument_list pos:start="903:24" pos:end="903:53">(<argument pos:start="903:25" pos:end="903:52"><expr pos:start="903:25" pos:end="903:52"><call pos:start="903:25" pos:end="903:52"><name pos:start="903:25" pos:end="903:37">sys_faccessat</name><argument_list pos:start="903:38" pos:end="903:52">(<argument pos:start="903:39" pos:end="903:42"><expr pos:start="903:39" pos:end="903:42"><name pos:start="903:39" pos:end="903:42">arg1</name></expr></argument>, <argument pos:start="903:45" pos:end="903:45"><expr pos:start="903:45" pos:end="903:45"><name pos:start="903:45" pos:end="903:45">p</name></expr></argument>, <argument pos:start="903:48" pos:end="903:51"><expr pos:start="903:48" pos:end="903:51"><name pos:start="903:48" pos:end="903:51">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="905:9" pos:end="905:32"><expr pos:start="905:9" pos:end="905:31"><call pos:start="905:9" pos:end="905:31"><name pos:start="905:9" pos:end="905:19">unlock_user</name><argument_list pos:start="905:20" pos:end="905:31">(<argument pos:start="905:21" pos:end="905:21"><expr pos:start="905:21" pos:end="905:21"><name pos:start="905:21" pos:end="905:21">p</name></expr></argument>, <argument pos:start="905:24" pos:end="905:27"><expr pos:start="905:24" pos:end="905:27"><name pos:start="905:24" pos:end="905:27">arg2</name></expr></argument>, <argument pos:start="905:30" pos:end="905:30"><expr pos:start="905:30" pos:end="905:30"><literal type="number" pos:start="905:30" pos:end="905:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="907:9" pos:end="912:0">break;</break>

<cpp:endif pos:start="909:1" pos:end="909:6">#<cpp:directive pos:start="909:2" pos:end="909:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="911:1" pos:end="911:21">#<cpp:directive pos:start="911:2" pos:end="911:6">ifdef</cpp:directive> <name pos:start="911:8" pos:end="911:21">TARGET_NR_nice</name></cpp:ifdef> <comment type="block" pos:start="911:23" pos:end="911:40">/* not on alpha */</comment>

    <case pos:start="913:5" pos:end="913:24">case <expr pos:start="913:10" pos:end="913:23"><name pos:start="913:10" pos:end="913:23">TARGET_NR_nice</name></expr>:</case>

        <expr_stmt pos:start="915:9" pos:end="915:36"><expr pos:start="915:9" pos:end="915:35"><name pos:start="915:9" pos:end="915:11">ret</name> <operator pos:start="915:13" pos:end="915:13">=</operator> <call pos:start="915:15" pos:end="915:35"><name pos:start="915:15" pos:end="915:23">get_errno</name><argument_list pos:start="915:24" pos:end="915:35">(<argument pos:start="915:25" pos:end="915:34"><expr pos:start="915:25" pos:end="915:34"><call pos:start="915:25" pos:end="915:34"><name pos:start="915:25" pos:end="915:28">nice</name><argument_list pos:start="915:29" pos:end="915:34">(<argument pos:start="915:30" pos:end="915:33"><expr pos:start="915:30" pos:end="915:33"><name pos:start="915:30" pos:end="915:33">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="917:9" pos:end="922:0">break;</break>

<cpp:endif pos:start="919:1" pos:end="919:6">#<cpp:directive pos:start="919:2" pos:end="919:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="921:1" pos:end="921:22">#<cpp:directive pos:start="921:2" pos:end="921:6">ifdef</cpp:directive> <name pos:start="921:8" pos:end="921:22">TARGET_NR_ftime</name></cpp:ifdef>

    <case pos:start="923:5" pos:end="923:25">case <expr pos:start="923:10" pos:end="923:24"><name pos:start="923:10" pos:end="923:24">TARGET_NR_ftime</name></expr>:</case>

        <goto pos:start="925:9" pos:end="928:0">goto <name pos:start="925:14" pos:end="925:26">unimplemented</name>;</goto>

<cpp:endif pos:start="927:1" pos:end="927:6">#<cpp:directive pos:start="927:2" pos:end="927:6">endif</cpp:directive></cpp:endif>

    <case pos:start="929:5" pos:end="929:24">case <expr pos:start="929:10" pos:end="929:23"><name pos:start="929:10" pos:end="929:23">TARGET_NR_sync</name></expr>:</case>

        <expr_stmt pos:start="931:9" pos:end="931:15"><expr pos:start="931:9" pos:end="931:14"><call pos:start="931:9" pos:end="931:14"><name pos:start="931:9" pos:end="931:12">sync</name><argument_list pos:start="931:13" pos:end="931:14">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="933:9" pos:end="933:16"><expr pos:start="933:9" pos:end="933:15"><name pos:start="933:9" pos:end="933:11">ret</name> <operator pos:start="933:13" pos:end="933:13">=</operator> <literal type="number" pos:start="933:15" pos:end="933:15">0</literal></expr>;</expr_stmt>

        <break pos:start="935:9" pos:end="935:14">break;</break>

    <case pos:start="937:5" pos:end="937:24">case <expr pos:start="937:10" pos:end="937:23"><name pos:start="937:10" pos:end="937:23">TARGET_NR_kill</name></expr>:</case>

        <expr_stmt pos:start="939:9" pos:end="939:65"><expr pos:start="939:9" pos:end="939:64"><name pos:start="939:9" pos:end="939:11">ret</name> <operator pos:start="939:13" pos:end="939:13">=</operator> <call pos:start="939:15" pos:end="939:64"><name pos:start="939:15" pos:end="939:23">get_errno</name><argument_list pos:start="939:24" pos:end="939:64">(<argument pos:start="939:25" pos:end="939:63"><expr pos:start="939:25" pos:end="939:63"><call pos:start="939:25" pos:end="939:63"><name pos:start="939:25" pos:end="939:28">kill</name><argument_list pos:start="939:29" pos:end="939:63">(<argument pos:start="939:30" pos:end="939:33"><expr pos:start="939:30" pos:end="939:33"><name pos:start="939:30" pos:end="939:33">arg1</name></expr></argument>, <argument pos:start="939:36" pos:end="939:62"><expr pos:start="939:36" pos:end="939:62"><call pos:start="939:36" pos:end="939:62"><name pos:start="939:36" pos:end="939:56">target_to_host_signal</name><argument_list pos:start="939:57" pos:end="939:62">(<argument pos:start="939:58" pos:end="939:61"><expr pos:start="939:58" pos:end="939:61"><name pos:start="939:58" pos:end="939:61">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="941:9" pos:end="941:14">break;</break>

    <case pos:start="943:5" pos:end="943:26">case <expr pos:start="943:10" pos:end="943:25"><name pos:start="943:10" pos:end="943:25">TARGET_NR_rename</name></expr>:</case>

        <block pos:start="945:9" pos:end="965:9">{<block_content pos:start="947:13" pos:end="963:36">

            <decl_stmt pos:start="947:13" pos:end="947:21"><decl pos:start="947:13" pos:end="947:20"><type pos:start="947:13" pos:end="947:18"><name pos:start="947:13" pos:end="947:16">void</name> <modifier pos:start="947:18" pos:end="947:18">*</modifier></type><name pos:start="947:19" pos:end="947:20">p2</name></decl>;</decl_stmt>

            <expr_stmt pos:start="949:13" pos:end="949:39"><expr pos:start="949:13" pos:end="949:38"><name pos:start="949:13" pos:end="949:13">p</name> <operator pos:start="949:15" pos:end="949:15">=</operator> <call pos:start="949:17" pos:end="949:38"><name pos:start="949:17" pos:end="949:32">lock_user_string</name><argument_list pos:start="949:33" pos:end="949:38">(<argument pos:start="949:34" pos:end="949:37"><expr pos:start="949:34" pos:end="949:37"><name pos:start="949:34" pos:end="949:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="951:13" pos:end="951:40"><expr pos:start="951:13" pos:end="951:39"><name pos:start="951:13" pos:end="951:14">p2</name> <operator pos:start="951:16" pos:end="951:16">=</operator> <call pos:start="951:18" pos:end="951:39"><name pos:start="951:18" pos:end="951:33">lock_user_string</name><argument_list pos:start="951:34" pos:end="951:39">(<argument pos:start="951:35" pos:end="951:38"><expr pos:start="951:35" pos:end="951:38"><name pos:start="951:35" pos:end="951:38">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="953:13" pos:end="959:47"><if pos:start="953:13" pos:end="955:37">if <condition pos:start="953:16" pos:end="953:26">(<expr pos:start="953:17" pos:end="953:25"><operator pos:start="953:17" pos:end="953:17">!</operator><name pos:start="953:18" pos:end="953:18">p</name> <operator pos:start="953:20" pos:end="953:21">||</operator> <operator pos:start="953:23" pos:end="953:23">!</operator><name pos:start="953:24" pos:end="953:25">p2</name></expr>)</condition><block type="pseudo" pos:start="955:17" pos:end="955:37"><block_content pos:start="955:17" pos:end="955:37">

                <expr_stmt pos:start="955:17" pos:end="955:37"><expr pos:start="955:17" pos:end="955:36"><name pos:start="955:17" pos:end="955:19">ret</name> <operator pos:start="955:21" pos:end="955:21">=</operator> <operator pos:start="955:23" pos:end="955:23">-</operator><name pos:start="955:24" pos:end="955:36">TARGET_EFAULT</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="957:13" pos:end="959:47">else<block type="pseudo" pos:start="959:17" pos:end="959:47"><block_content pos:start="959:17" pos:end="959:47">

                <expr_stmt pos:start="959:17" pos:end="959:47"><expr pos:start="959:17" pos:end="959:46"><name pos:start="959:17" pos:end="959:19">ret</name> <operator pos:start="959:21" pos:end="959:21">=</operator> <call pos:start="959:23" pos:end="959:46"><name pos:start="959:23" pos:end="959:31">get_errno</name><argument_list pos:start="959:32" pos:end="959:46">(<argument pos:start="959:33" pos:end="959:45"><expr pos:start="959:33" pos:end="959:45"><call pos:start="959:33" pos:end="959:45"><name pos:start="959:33" pos:end="959:38">rename</name><argument_list pos:start="959:39" pos:end="959:45">(<argument pos:start="959:40" pos:end="959:40"><expr pos:start="959:40" pos:end="959:40"><name pos:start="959:40" pos:end="959:40">p</name></expr></argument>, <argument pos:start="959:43" pos:end="959:44"><expr pos:start="959:43" pos:end="959:44"><name pos:start="959:43" pos:end="959:44">p2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="961:13" pos:end="961:37"><expr pos:start="961:13" pos:end="961:36"><call pos:start="961:13" pos:end="961:36"><name pos:start="961:13" pos:end="961:23">unlock_user</name><argument_list pos:start="961:24" pos:end="961:36">(<argument pos:start="961:25" pos:end="961:26"><expr pos:start="961:25" pos:end="961:26"><name pos:start="961:25" pos:end="961:26">p2</name></expr></argument>, <argument pos:start="961:29" pos:end="961:32"><expr pos:start="961:29" pos:end="961:32"><name pos:start="961:29" pos:end="961:32">arg2</name></expr></argument>, <argument pos:start="961:35" pos:end="961:35"><expr pos:start="961:35" pos:end="961:35"><literal type="number" pos:start="961:35" pos:end="961:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="963:13" pos:end="963:36"><expr pos:start="963:13" pos:end="963:35"><call pos:start="963:13" pos:end="963:35"><name pos:start="963:13" pos:end="963:23">unlock_user</name><argument_list pos:start="963:24" pos:end="963:35">(<argument pos:start="963:25" pos:end="963:25"><expr pos:start="963:25" pos:end="963:25"><name pos:start="963:25" pos:end="963:25">p</name></expr></argument>, <argument pos:start="963:28" pos:end="963:31"><expr pos:start="963:28" pos:end="963:31"><name pos:start="963:28" pos:end="963:31">arg1</name></expr></argument>, <argument pos:start="963:34" pos:end="963:34"><expr pos:start="963:34" pos:end="963:34"><literal type="number" pos:start="963:34" pos:end="963:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="967:9" pos:end="970:0">break;</break>

<cpp:if pos:start="969:1" pos:end="969:57">#<cpp:directive pos:start="969:2" pos:end="969:3">if</cpp:directive> <expr pos:start="969:5" pos:end="969:57"><call pos:start="969:5" pos:end="969:31"><name pos:start="969:5" pos:end="969:11">defined</name><argument_list pos:start="969:12" pos:end="969:31">(<argument pos:start="969:13" pos:end="969:30"><expr pos:start="969:13" pos:end="969:30"><name pos:start="969:13" pos:end="969:30">TARGET_NR_renameat</name></expr></argument>)</argument_list></call> <operator pos:start="969:33" pos:end="969:34">&amp;&amp;</operator> <call pos:start="969:36" pos:end="969:57"><name pos:start="969:36" pos:end="969:42">defined</name><argument_list pos:start="969:43" pos:end="969:57">(<argument pos:start="969:44" pos:end="969:56"><expr pos:start="969:44" pos:end="969:56"><name pos:start="969:44" pos:end="969:56">__NR_renameat</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="971:5" pos:end="971:28">case <expr pos:start="971:10" pos:end="971:27"><name pos:start="971:10" pos:end="971:27">TARGET_NR_renameat</name></expr>:</case>

        <block pos:start="973:9" pos:end="993:9">{<block_content pos:start="975:13" pos:end="991:36">

            <decl_stmt pos:start="975:13" pos:end="975:21"><decl pos:start="975:13" pos:end="975:20"><type pos:start="975:13" pos:end="975:18"><name pos:start="975:13" pos:end="975:16">void</name> <modifier pos:start="975:18" pos:end="975:18">*</modifier></type><name pos:start="975:19" pos:end="975:20">p2</name></decl>;</decl_stmt>

            <expr_stmt pos:start="977:13" pos:end="977:40"><expr pos:start="977:13" pos:end="977:39"><name pos:start="977:13" pos:end="977:13">p</name>  <operator pos:start="977:16" pos:end="977:16">=</operator> <call pos:start="977:18" pos:end="977:39"><name pos:start="977:18" pos:end="977:33">lock_user_string</name><argument_list pos:start="977:34" pos:end="977:39">(<argument pos:start="977:35" pos:end="977:38"><expr pos:start="977:35" pos:end="977:38"><name pos:start="977:35" pos:end="977:38">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="979:13" pos:end="979:40"><expr pos:start="979:13" pos:end="979:39"><name pos:start="979:13" pos:end="979:14">p2</name> <operator pos:start="979:16" pos:end="979:16">=</operator> <call pos:start="979:18" pos:end="979:39"><name pos:start="979:18" pos:end="979:33">lock_user_string</name><argument_list pos:start="979:34" pos:end="979:39">(<argument pos:start="979:35" pos:end="979:38"><expr pos:start="979:35" pos:end="979:38"><name pos:start="979:35" pos:end="979:38">arg4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="981:13" pos:end="987:65"><if pos:start="981:13" pos:end="983:37">if <condition pos:start="981:16" pos:end="981:26">(<expr pos:start="981:17" pos:end="981:25"><operator pos:start="981:17" pos:end="981:17">!</operator><name pos:start="981:18" pos:end="981:18">p</name> <operator pos:start="981:20" pos:end="981:21">||</operator> <operator pos:start="981:23" pos:end="981:23">!</operator><name pos:start="981:24" pos:end="981:25">p2</name></expr>)</condition><block type="pseudo" pos:start="983:17" pos:end="983:37"><block_content pos:start="983:17" pos:end="983:37">

                <expr_stmt pos:start="983:17" pos:end="983:37"><expr pos:start="983:17" pos:end="983:36"><name pos:start="983:17" pos:end="983:19">ret</name> <operator pos:start="983:21" pos:end="983:21">=</operator> <operator pos:start="983:23" pos:end="983:23">-</operator><name pos:start="983:24" pos:end="983:36">TARGET_EFAULT</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="985:13" pos:end="987:65">else<block type="pseudo" pos:start="987:17" pos:end="987:65"><block_content pos:start="987:17" pos:end="987:65">

                <expr_stmt pos:start="987:17" pos:end="987:65"><expr pos:start="987:17" pos:end="987:64"><name pos:start="987:17" pos:end="987:19">ret</name> <operator pos:start="987:21" pos:end="987:21">=</operator> <call pos:start="987:23" pos:end="987:64"><name pos:start="987:23" pos:end="987:31">get_errno</name><argument_list pos:start="987:32" pos:end="987:64">(<argument pos:start="987:33" pos:end="987:63"><expr pos:start="987:33" pos:end="987:63"><call pos:start="987:33" pos:end="987:63"><name pos:start="987:33" pos:end="987:44">sys_renameat</name><argument_list pos:start="987:45" pos:end="987:63">(<argument pos:start="987:46" pos:end="987:49"><expr pos:start="987:46" pos:end="987:49"><name pos:start="987:46" pos:end="987:49">arg1</name></expr></argument>, <argument pos:start="987:52" pos:end="987:52"><expr pos:start="987:52" pos:end="987:52"><name pos:start="987:52" pos:end="987:52">p</name></expr></argument>, <argument pos:start="987:55" pos:end="987:58"><expr pos:start="987:55" pos:end="987:58"><name pos:start="987:55" pos:end="987:58">arg3</name></expr></argument>, <argument pos:start="987:61" pos:end="987:62"><expr pos:start="987:61" pos:end="987:62"><name pos:start="987:61" pos:end="987:62">p2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="989:13" pos:end="989:37"><expr pos:start="989:13" pos:end="989:36"><call pos:start="989:13" pos:end="989:36"><name pos:start="989:13" pos:end="989:23">unlock_user</name><argument_list pos:start="989:24" pos:end="989:36">(<argument pos:start="989:25" pos:end="989:26"><expr pos:start="989:25" pos:end="989:26"><name pos:start="989:25" pos:end="989:26">p2</name></expr></argument>, <argument pos:start="989:29" pos:end="989:32"><expr pos:start="989:29" pos:end="989:32"><name pos:start="989:29" pos:end="989:32">arg4</name></expr></argument>, <argument pos:start="989:35" pos:end="989:35"><expr pos:start="989:35" pos:end="989:35"><literal type="number" pos:start="989:35" pos:end="989:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="991:13" pos:end="991:36"><expr pos:start="991:13" pos:end="991:35"><call pos:start="991:13" pos:end="991:35"><name pos:start="991:13" pos:end="991:23">unlock_user</name><argument_list pos:start="991:24" pos:end="991:35">(<argument pos:start="991:25" pos:end="991:25"><expr pos:start="991:25" pos:end="991:25"><name pos:start="991:25" pos:end="991:25">p</name></expr></argument>, <argument pos:start="991:28" pos:end="991:31"><expr pos:start="991:28" pos:end="991:31"><name pos:start="991:28" pos:end="991:31">arg2</name></expr></argument>, <argument pos:start="991:34" pos:end="991:34"><expr pos:start="991:34" pos:end="991:34"><literal type="number" pos:start="991:34" pos:end="991:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="995:9" pos:end="998:0">break;</break>

<cpp:endif pos:start="997:1" pos:end="997:6">#<cpp:directive pos:start="997:2" pos:end="997:6">endif</cpp:directive></cpp:endif>

    <case pos:start="999:5" pos:end="999:25">case <expr pos:start="999:10" pos:end="999:24"><name pos:start="999:10" pos:end="999:24">TARGET_NR_mkdir</name></expr>:</case>

        <if_stmt pos:start="1001:9" pos:end="1003:24"><if pos:start="1001:9" pos:end="1003:24">if <condition pos:start="1001:12" pos:end="1001:42">(<expr pos:start="1001:13" pos:end="1001:41"><operator pos:start="1001:13" pos:end="1001:13">!</operator><operator pos:start="1001:14" pos:end="1001:14">(</operator><name pos:start="1001:15" pos:end="1001:15">p</name> <operator pos:start="1001:17" pos:end="1001:17">=</operator> <call pos:start="1001:19" pos:end="1001:40"><name pos:start="1001:19" pos:end="1001:34">lock_user_string</name><argument_list pos:start="1001:35" pos:end="1001:40">(<argument pos:start="1001:36" pos:end="1001:39"><expr pos:start="1001:36" pos:end="1001:39"><name pos:start="1001:36" pos:end="1001:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="1001:41" pos:end="1001:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1003:13" pos:end="1003:24"><block_content pos:start="1003:13" pos:end="1003:24">

            <goto pos:start="1003:13" pos:end="1003:24">goto <name pos:start="1003:18" pos:end="1003:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1005:9" pos:end="1005:40"><expr pos:start="1005:9" pos:end="1005:39"><name pos:start="1005:9" pos:end="1005:11">ret</name> <operator pos:start="1005:13" pos:end="1005:13">=</operator> <call pos:start="1005:15" pos:end="1005:39"><name pos:start="1005:15" pos:end="1005:23">get_errno</name><argument_list pos:start="1005:24" pos:end="1005:39">(<argument pos:start="1005:25" pos:end="1005:38"><expr pos:start="1005:25" pos:end="1005:38"><call pos:start="1005:25" pos:end="1005:38"><name pos:start="1005:25" pos:end="1005:29">mkdir</name><argument_list pos:start="1005:30" pos:end="1005:38">(<argument pos:start="1005:31" pos:end="1005:31"><expr pos:start="1005:31" pos:end="1005:31"><name pos:start="1005:31" pos:end="1005:31">p</name></expr></argument>, <argument pos:start="1005:34" pos:end="1005:37"><expr pos:start="1005:34" pos:end="1005:37"><name pos:start="1005:34" pos:end="1005:37">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1007:9" pos:end="1007:32"><expr pos:start="1007:9" pos:end="1007:31"><call pos:start="1007:9" pos:end="1007:31"><name pos:start="1007:9" pos:end="1007:19">unlock_user</name><argument_list pos:start="1007:20" pos:end="1007:31">(<argument pos:start="1007:21" pos:end="1007:21"><expr pos:start="1007:21" pos:end="1007:21"><name pos:start="1007:21" pos:end="1007:21">p</name></expr></argument>, <argument pos:start="1007:24" pos:end="1007:27"><expr pos:start="1007:24" pos:end="1007:27"><name pos:start="1007:24" pos:end="1007:27">arg1</name></expr></argument>, <argument pos:start="1007:30" pos:end="1007:30"><expr pos:start="1007:30" pos:end="1007:30"><literal type="number" pos:start="1007:30" pos:end="1007:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1009:9" pos:end="1012:0">break;</break>

<cpp:if pos:start="1011:1" pos:end="1011:55">#<cpp:directive pos:start="1011:2" pos:end="1011:3">if</cpp:directive> <expr pos:start="1011:5" pos:end="1011:55"><call pos:start="1011:5" pos:end="1011:30"><name pos:start="1011:5" pos:end="1011:11">defined</name><argument_list pos:start="1011:12" pos:end="1011:30">(<argument pos:start="1011:13" pos:end="1011:29"><expr pos:start="1011:13" pos:end="1011:29"><name pos:start="1011:13" pos:end="1011:29">TARGET_NR_mkdirat</name></expr></argument>)</argument_list></call> <operator pos:start="1011:32" pos:end="1011:33">&amp;&amp;</operator> <call pos:start="1011:35" pos:end="1011:55"><name pos:start="1011:35" pos:end="1011:41">defined</name><argument_list pos:start="1011:42" pos:end="1011:55">(<argument pos:start="1011:43" pos:end="1011:54"><expr pos:start="1011:43" pos:end="1011:54"><name pos:start="1011:43" pos:end="1011:54">__NR_mkdirat</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="1013:5" pos:end="1013:27">case <expr pos:start="1013:10" pos:end="1013:26"><name pos:start="1013:10" pos:end="1013:26">TARGET_NR_mkdirat</name></expr>:</case>

        <if_stmt pos:start="1015:9" pos:end="1017:24"><if pos:start="1015:9" pos:end="1017:24">if <condition pos:start="1015:12" pos:end="1015:42">(<expr pos:start="1015:13" pos:end="1015:41"><operator pos:start="1015:13" pos:end="1015:13">!</operator><operator pos:start="1015:14" pos:end="1015:14">(</operator><name pos:start="1015:15" pos:end="1015:15">p</name> <operator pos:start="1015:17" pos:end="1015:17">=</operator> <call pos:start="1015:19" pos:end="1015:40"><name pos:start="1015:19" pos:end="1015:34">lock_user_string</name><argument_list pos:start="1015:35" pos:end="1015:40">(<argument pos:start="1015:36" pos:end="1015:39"><expr pos:start="1015:36" pos:end="1015:39"><name pos:start="1015:36" pos:end="1015:39">arg2</name></expr></argument>)</argument_list></call><operator pos:start="1015:41" pos:end="1015:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1017:13" pos:end="1017:24"><block_content pos:start="1017:13" pos:end="1017:24">

            <goto pos:start="1017:13" pos:end="1017:24">goto <name pos:start="1017:18" pos:end="1017:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1019:9" pos:end="1019:52"><expr pos:start="1019:9" pos:end="1019:51"><name pos:start="1019:9" pos:end="1019:11">ret</name> <operator pos:start="1019:13" pos:end="1019:13">=</operator> <call pos:start="1019:15" pos:end="1019:51"><name pos:start="1019:15" pos:end="1019:23">get_errno</name><argument_list pos:start="1019:24" pos:end="1019:51">(<argument pos:start="1019:25" pos:end="1019:50"><expr pos:start="1019:25" pos:end="1019:50"><call pos:start="1019:25" pos:end="1019:50"><name pos:start="1019:25" pos:end="1019:35">sys_mkdirat</name><argument_list pos:start="1019:36" pos:end="1019:50">(<argument pos:start="1019:37" pos:end="1019:40"><expr pos:start="1019:37" pos:end="1019:40"><name pos:start="1019:37" pos:end="1019:40">arg1</name></expr></argument>, <argument pos:start="1019:43" pos:end="1019:43"><expr pos:start="1019:43" pos:end="1019:43"><name pos:start="1019:43" pos:end="1019:43">p</name></expr></argument>, <argument pos:start="1019:46" pos:end="1019:49"><expr pos:start="1019:46" pos:end="1019:49"><name pos:start="1019:46" pos:end="1019:49">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1021:9" pos:end="1021:32"><expr pos:start="1021:9" pos:end="1021:31"><call pos:start="1021:9" pos:end="1021:31"><name pos:start="1021:9" pos:end="1021:19">unlock_user</name><argument_list pos:start="1021:20" pos:end="1021:31">(<argument pos:start="1021:21" pos:end="1021:21"><expr pos:start="1021:21" pos:end="1021:21"><name pos:start="1021:21" pos:end="1021:21">p</name></expr></argument>, <argument pos:start="1021:24" pos:end="1021:27"><expr pos:start="1021:24" pos:end="1021:27"><name pos:start="1021:24" pos:end="1021:27">arg2</name></expr></argument>, <argument pos:start="1021:30" pos:end="1021:30"><expr pos:start="1021:30" pos:end="1021:30"><literal type="number" pos:start="1021:30" pos:end="1021:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1023:9" pos:end="1026:0">break;</break>

<cpp:endif pos:start="1025:1" pos:end="1025:6">#<cpp:directive pos:start="1025:2" pos:end="1025:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1027:5" pos:end="1027:25">case <expr pos:start="1027:10" pos:end="1027:24"><name pos:start="1027:10" pos:end="1027:24">TARGET_NR_rmdir</name></expr>:</case>

        <if_stmt pos:start="1029:9" pos:end="1031:24"><if pos:start="1029:9" pos:end="1031:24">if <condition pos:start="1029:12" pos:end="1029:42">(<expr pos:start="1029:13" pos:end="1029:41"><operator pos:start="1029:13" pos:end="1029:13">!</operator><operator pos:start="1029:14" pos:end="1029:14">(</operator><name pos:start="1029:15" pos:end="1029:15">p</name> <operator pos:start="1029:17" pos:end="1029:17">=</operator> <call pos:start="1029:19" pos:end="1029:40"><name pos:start="1029:19" pos:end="1029:34">lock_user_string</name><argument_list pos:start="1029:35" pos:end="1029:40">(<argument pos:start="1029:36" pos:end="1029:39"><expr pos:start="1029:36" pos:end="1029:39"><name pos:start="1029:36" pos:end="1029:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="1029:41" pos:end="1029:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1031:13" pos:end="1031:24"><block_content pos:start="1031:13" pos:end="1031:24">

            <goto pos:start="1031:13" pos:end="1031:24">goto <name pos:start="1031:18" pos:end="1031:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1033:9" pos:end="1033:34"><expr pos:start="1033:9" pos:end="1033:33"><name pos:start="1033:9" pos:end="1033:11">ret</name> <operator pos:start="1033:13" pos:end="1033:13">=</operator> <call pos:start="1033:15" pos:end="1033:33"><name pos:start="1033:15" pos:end="1033:23">get_errno</name><argument_list pos:start="1033:24" pos:end="1033:33">(<argument pos:start="1033:25" pos:end="1033:32"><expr pos:start="1033:25" pos:end="1033:32"><call pos:start="1033:25" pos:end="1033:32"><name pos:start="1033:25" pos:end="1033:29">rmdir</name><argument_list pos:start="1033:30" pos:end="1033:32">(<argument pos:start="1033:31" pos:end="1033:31"><expr pos:start="1033:31" pos:end="1033:31"><name pos:start="1033:31" pos:end="1033:31">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1035:9" pos:end="1035:32"><expr pos:start="1035:9" pos:end="1035:31"><call pos:start="1035:9" pos:end="1035:31"><name pos:start="1035:9" pos:end="1035:19">unlock_user</name><argument_list pos:start="1035:20" pos:end="1035:31">(<argument pos:start="1035:21" pos:end="1035:21"><expr pos:start="1035:21" pos:end="1035:21"><name pos:start="1035:21" pos:end="1035:21">p</name></expr></argument>, <argument pos:start="1035:24" pos:end="1035:27"><expr pos:start="1035:24" pos:end="1035:27"><name pos:start="1035:24" pos:end="1035:27">arg1</name></expr></argument>, <argument pos:start="1035:30" pos:end="1035:30"><expr pos:start="1035:30" pos:end="1035:30"><literal type="number" pos:start="1035:30" pos:end="1035:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1037:9" pos:end="1037:14">break;</break>

    <case pos:start="1039:5" pos:end="1039:23">case <expr pos:start="1039:10" pos:end="1039:22"><name pos:start="1039:10" pos:end="1039:22">TARGET_NR_dup</name></expr>:</case>

        <expr_stmt pos:start="1041:9" pos:end="1041:35"><expr pos:start="1041:9" pos:end="1041:34"><name pos:start="1041:9" pos:end="1041:11">ret</name> <operator pos:start="1041:13" pos:end="1041:13">=</operator> <call pos:start="1041:15" pos:end="1041:34"><name pos:start="1041:15" pos:end="1041:23">get_errno</name><argument_list pos:start="1041:24" pos:end="1041:34">(<argument pos:start="1041:25" pos:end="1041:33"><expr pos:start="1041:25" pos:end="1041:33"><call pos:start="1041:25" pos:end="1041:33"><name pos:start="1041:25" pos:end="1041:27">dup</name><argument_list pos:start="1041:28" pos:end="1041:33">(<argument pos:start="1041:29" pos:end="1041:32"><expr pos:start="1041:29" pos:end="1041:32"><name pos:start="1041:29" pos:end="1041:32">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1043:9" pos:end="1043:14">break;</break>

    <case pos:start="1045:5" pos:end="1045:24">case <expr pos:start="1045:10" pos:end="1045:23"><name pos:start="1045:10" pos:end="1045:23">TARGET_NR_pipe</name></expr>:</case>

        <expr_stmt pos:start="1047:9" pos:end="1047:40"><expr pos:start="1047:9" pos:end="1047:39"><name pos:start="1047:9" pos:end="1047:11">ret</name> <operator pos:start="1047:13" pos:end="1047:13">=</operator> <call pos:start="1047:15" pos:end="1047:39"><name pos:start="1047:15" pos:end="1047:21">do_pipe</name><argument_list pos:start="1047:22" pos:end="1047:39">(<argument pos:start="1047:23" pos:end="1047:29"><expr pos:start="1047:23" pos:end="1047:29"><name pos:start="1047:23" pos:end="1047:29">cpu_env</name></expr></argument>, <argument pos:start="1047:32" pos:end="1047:35"><expr pos:start="1047:32" pos:end="1047:35"><name pos:start="1047:32" pos:end="1047:35">arg1</name></expr></argument>, <argument pos:start="1047:38" pos:end="1047:38"><expr pos:start="1047:38" pos:end="1047:38"><literal type="number" pos:start="1047:38" pos:end="1047:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1049:9" pos:end="1052:0">break;</break>

<cpp:ifdef pos:start="1051:1" pos:end="1051:22">#<cpp:directive pos:start="1051:2" pos:end="1051:6">ifdef</cpp:directive> <name pos:start="1051:8" pos:end="1051:22">TARGET_NR_pipe2</name></cpp:ifdef>

    <case pos:start="1053:5" pos:end="1053:25">case <expr pos:start="1053:10" pos:end="1053:24"><name pos:start="1053:10" pos:end="1053:24">TARGET_NR_pipe2</name></expr>:</case>

        <expr_stmt pos:start="1055:9" pos:end="1055:43"><expr pos:start="1055:9" pos:end="1055:42"><name pos:start="1055:9" pos:end="1055:11">ret</name> <operator pos:start="1055:13" pos:end="1055:13">=</operator> <call pos:start="1055:15" pos:end="1055:42"><name pos:start="1055:15" pos:end="1055:21">do_pipe</name><argument_list pos:start="1055:22" pos:end="1055:42">(<argument pos:start="1055:23" pos:end="1055:29"><expr pos:start="1055:23" pos:end="1055:29"><name pos:start="1055:23" pos:end="1055:29">cpu_env</name></expr></argument>, <argument pos:start="1055:32" pos:end="1055:35"><expr pos:start="1055:32" pos:end="1055:35"><name pos:start="1055:32" pos:end="1055:35">arg1</name></expr></argument>, <argument pos:start="1055:38" pos:end="1055:41"><expr pos:start="1055:38" pos:end="1055:41"><name pos:start="1055:38" pos:end="1055:41">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1057:9" pos:end="1060:0">break;</break>

<cpp:endif pos:start="1059:1" pos:end="1059:6">#<cpp:directive pos:start="1059:2" pos:end="1059:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1061:5" pos:end="1061:25">case <expr pos:start="1061:10" pos:end="1061:24"><name pos:start="1061:10" pos:end="1061:24">TARGET_NR_times</name></expr>:</case>

        <block pos:start="1063:9" pos:end="1093:9">{<block_content pos:start="1065:13" pos:end="1091:50">

            <decl_stmt pos:start="1065:13" pos:end="1065:36"><decl pos:start="1065:13" pos:end="1065:35"><type pos:start="1065:13" pos:end="1065:31"><name pos:start="1065:13" pos:end="1065:29"><name pos:start="1065:13" pos:end="1065:18">struct</name> <name pos:start="1065:20" pos:end="1065:29">target_tms</name></name> <modifier pos:start="1065:31" pos:end="1065:31">*</modifier></type><name pos:start="1065:32" pos:end="1065:35">tmsp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1067:13" pos:end="1067:27"><decl pos:start="1067:13" pos:end="1067:26"><type pos:start="1067:13" pos:end="1067:22"><name pos:start="1067:13" pos:end="1067:22"><name pos:start="1067:13" pos:end="1067:18">struct</name> <name pos:start="1067:20" pos:end="1067:22">tms</name></name></type> <name pos:start="1067:24" pos:end="1067:26">tms</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1069:13" pos:end="1069:41"><expr pos:start="1069:13" pos:end="1069:40"><name pos:start="1069:13" pos:end="1069:15">ret</name> <operator pos:start="1069:17" pos:end="1069:17">=</operator> <call pos:start="1069:19" pos:end="1069:40"><name pos:start="1069:19" pos:end="1069:27">get_errno</name><argument_list pos:start="1069:28" pos:end="1069:40">(<argument pos:start="1069:29" pos:end="1069:39"><expr pos:start="1069:29" pos:end="1069:39"><call pos:start="1069:29" pos:end="1069:39"><name pos:start="1069:29" pos:end="1069:33">times</name><argument_list pos:start="1069:34" pos:end="1069:39">(<argument pos:start="1069:35" pos:end="1069:38"><expr pos:start="1069:35" pos:end="1069:38"><operator pos:start="1069:35" pos:end="1069:35">&amp;</operator><name pos:start="1069:36" pos:end="1069:38">tms</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1071:13" pos:end="1087:13"><if pos:start="1071:13" pos:end="1087:13">if <condition pos:start="1071:16" pos:end="1071:21">(<expr pos:start="1071:17" pos:end="1071:20"><name pos:start="1071:17" pos:end="1071:20">arg1</name></expr>)</condition> <block pos:start="1071:23" pos:end="1087:13">{<block_content pos:start="1073:17" pos:end="1085:82">

                <expr_stmt pos:start="1073:17" pos:end="1073:83"><expr pos:start="1073:17" pos:end="1073:82"><name pos:start="1073:17" pos:end="1073:20">tmsp</name> <operator pos:start="1073:22" pos:end="1073:22">=</operator> <call pos:start="1073:24" pos:end="1073:82"><name pos:start="1073:24" pos:end="1073:32">lock_user</name><argument_list pos:start="1073:33" pos:end="1073:82">(<argument pos:start="1073:34" pos:end="1073:45"><expr pos:start="1073:34" pos:end="1073:45"><name pos:start="1073:34" pos:end="1073:45">VERIFY_WRITE</name></expr></argument>, <argument pos:start="1073:48" pos:end="1073:51"><expr pos:start="1073:48" pos:end="1073:51"><name pos:start="1073:48" pos:end="1073:51">arg1</name></expr></argument>, <argument pos:start="1073:54" pos:end="1073:78"><expr pos:start="1073:54" pos:end="1073:78"><sizeof pos:start="1073:54" pos:end="1073:78">sizeof<argument_list pos:start="1073:60" pos:end="1073:78">(<argument pos:start="1073:61" pos:end="1073:77"><expr pos:start="1073:61" pos:end="1073:77">struct <name pos:start="1073:68" pos:end="1073:77">target_tms</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1073:81" pos:end="1073:81"><expr pos:start="1073:81" pos:end="1073:81"><literal type="number" pos:start="1073:81" pos:end="1073:81">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1075:17" pos:end="1077:32"><if pos:start="1075:17" pos:end="1077:32">if <condition pos:start="1075:20" pos:end="1075:26">(<expr pos:start="1075:21" pos:end="1075:25"><operator pos:start="1075:21" pos:end="1075:21">!</operator><name pos:start="1075:22" pos:end="1075:25">tmsp</name></expr>)</condition><block type="pseudo" pos:start="1077:21" pos:end="1077:32"><block_content pos:start="1077:21" pos:end="1077:32">

                    <goto pos:start="1077:21" pos:end="1077:32">goto <name pos:start="1077:26" pos:end="1077:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1079:17" pos:end="1079:80"><expr pos:start="1079:17" pos:end="1079:79"><name pos:start="1079:17" pos:end="1079:31"><name pos:start="1079:17" pos:end="1079:20">tmsp</name><operator pos:start="1079:21" pos:end="1079:22">-&gt;</operator><name pos:start="1079:23" pos:end="1079:31">tms_utime</name></name> <operator pos:start="1079:33" pos:end="1079:33">=</operator> <call pos:start="1079:35" pos:end="1079:79"><name pos:start="1079:35" pos:end="1079:40">tswapl</name><argument_list pos:start="1079:41" pos:end="1079:79">(<argument pos:start="1079:42" pos:end="1079:78"><expr pos:start="1079:42" pos:end="1079:78"><call pos:start="1079:42" pos:end="1079:78"><name pos:start="1079:42" pos:end="1079:63">host_to_target_clock_t</name><argument_list pos:start="1079:64" pos:end="1079:78">(<argument pos:start="1079:65" pos:end="1079:77"><expr pos:start="1079:65" pos:end="1079:77"><name pos:start="1079:65" pos:end="1079:77"><name pos:start="1079:65" pos:end="1079:67">tms</name><operator pos:start="1079:68" pos:end="1079:68">.</operator><name pos:start="1079:69" pos:end="1079:77">tms_utime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1081:17" pos:end="1081:80"><expr pos:start="1081:17" pos:end="1081:79"><name pos:start="1081:17" pos:end="1081:31"><name pos:start="1081:17" pos:end="1081:20">tmsp</name><operator pos:start="1081:21" pos:end="1081:22">-&gt;</operator><name pos:start="1081:23" pos:end="1081:31">tms_stime</name></name> <operator pos:start="1081:33" pos:end="1081:33">=</operator> <call pos:start="1081:35" pos:end="1081:79"><name pos:start="1081:35" pos:end="1081:40">tswapl</name><argument_list pos:start="1081:41" pos:end="1081:79">(<argument pos:start="1081:42" pos:end="1081:78"><expr pos:start="1081:42" pos:end="1081:78"><call pos:start="1081:42" pos:end="1081:78"><name pos:start="1081:42" pos:end="1081:63">host_to_target_clock_t</name><argument_list pos:start="1081:64" pos:end="1081:78">(<argument pos:start="1081:65" pos:end="1081:77"><expr pos:start="1081:65" pos:end="1081:77"><name pos:start="1081:65" pos:end="1081:77"><name pos:start="1081:65" pos:end="1081:67">tms</name><operator pos:start="1081:68" pos:end="1081:68">.</operator><name pos:start="1081:69" pos:end="1081:77">tms_stime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1083:17" pos:end="1083:82"><expr pos:start="1083:17" pos:end="1083:81"><name pos:start="1083:17" pos:end="1083:32"><name pos:start="1083:17" pos:end="1083:20">tmsp</name><operator pos:start="1083:21" pos:end="1083:22">-&gt;</operator><name pos:start="1083:23" pos:end="1083:32">tms_cutime</name></name> <operator pos:start="1083:34" pos:end="1083:34">=</operator> <call pos:start="1083:36" pos:end="1083:81"><name pos:start="1083:36" pos:end="1083:41">tswapl</name><argument_list pos:start="1083:42" pos:end="1083:81">(<argument pos:start="1083:43" pos:end="1083:80"><expr pos:start="1083:43" pos:end="1083:80"><call pos:start="1083:43" pos:end="1083:80"><name pos:start="1083:43" pos:end="1083:64">host_to_target_clock_t</name><argument_list pos:start="1083:65" pos:end="1083:80">(<argument pos:start="1083:66" pos:end="1083:79"><expr pos:start="1083:66" pos:end="1083:79"><name pos:start="1083:66" pos:end="1083:79"><name pos:start="1083:66" pos:end="1083:68">tms</name><operator pos:start="1083:69" pos:end="1083:69">.</operator><name pos:start="1083:70" pos:end="1083:79">tms_cutime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1085:17" pos:end="1085:82"><expr pos:start="1085:17" pos:end="1085:81"><name pos:start="1085:17" pos:end="1085:32"><name pos:start="1085:17" pos:end="1085:20">tmsp</name><operator pos:start="1085:21" pos:end="1085:22">-&gt;</operator><name pos:start="1085:23" pos:end="1085:32">tms_cstime</name></name> <operator pos:start="1085:34" pos:end="1085:34">=</operator> <call pos:start="1085:36" pos:end="1085:81"><name pos:start="1085:36" pos:end="1085:41">tswapl</name><argument_list pos:start="1085:42" pos:end="1085:81">(<argument pos:start="1085:43" pos:end="1085:80"><expr pos:start="1085:43" pos:end="1085:80"><call pos:start="1085:43" pos:end="1085:80"><name pos:start="1085:43" pos:end="1085:64">host_to_target_clock_t</name><argument_list pos:start="1085:65" pos:end="1085:80">(<argument pos:start="1085:66" pos:end="1085:79"><expr pos:start="1085:66" pos:end="1085:79"><name pos:start="1085:66" pos:end="1085:79"><name pos:start="1085:66" pos:end="1085:68">tms</name><operator pos:start="1085:69" pos:end="1085:69">.</operator><name pos:start="1085:70" pos:end="1085:79">tms_cstime</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1089:13" pos:end="1091:50"><if pos:start="1089:13" pos:end="1091:50">if <condition pos:start="1089:16" pos:end="1089:31">(<expr pos:start="1089:17" pos:end="1089:30"><operator pos:start="1089:17" pos:end="1089:17">!</operator><call pos:start="1089:18" pos:end="1089:30"><name pos:start="1089:18" pos:end="1089:25">is_error</name><argument_list pos:start="1089:26" pos:end="1089:30">(<argument pos:start="1089:27" pos:end="1089:29"><expr pos:start="1089:27" pos:end="1089:29"><name pos:start="1089:27" pos:end="1089:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1091:17" pos:end="1091:50"><block_content pos:start="1091:17" pos:end="1091:50">

                <expr_stmt pos:start="1091:17" pos:end="1091:50"><expr pos:start="1091:17" pos:end="1091:49"><name pos:start="1091:17" pos:end="1091:19">ret</name> <operator pos:start="1091:21" pos:end="1091:21">=</operator> <call pos:start="1091:23" pos:end="1091:49"><name pos:start="1091:23" pos:end="1091:44">host_to_target_clock_t</name><argument_list pos:start="1091:45" pos:end="1091:49">(<argument pos:start="1091:46" pos:end="1091:48"><expr pos:start="1091:46" pos:end="1091:48"><name pos:start="1091:46" pos:end="1091:48">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1095:9" pos:end="1098:0">break;</break>

<cpp:ifdef pos:start="1097:1" pos:end="1097:21">#<cpp:directive pos:start="1097:2" pos:end="1097:6">ifdef</cpp:directive> <name pos:start="1097:8" pos:end="1097:21">TARGET_NR_prof</name></cpp:ifdef>

    <case pos:start="1099:5" pos:end="1099:24">case <expr pos:start="1099:10" pos:end="1099:23"><name pos:start="1099:10" pos:end="1099:23">TARGET_NR_prof</name></expr>:</case>

        <goto pos:start="1101:9" pos:end="1106:0">goto <name pos:start="1101:14" pos:end="1101:26">unimplemented</name>;</goto>

<cpp:endif pos:start="1103:1" pos:end="1103:6">#<cpp:directive pos:start="1103:2" pos:end="1103:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1105:1" pos:end="1105:23">#<cpp:directive pos:start="1105:2" pos:end="1105:6">ifdef</cpp:directive> <name pos:start="1105:8" pos:end="1105:23">TARGET_NR_signal</name></cpp:ifdef>

    <case pos:start="1107:5" pos:end="1107:26">case <expr pos:start="1107:10" pos:end="1107:25"><name pos:start="1107:10" pos:end="1107:25">TARGET_NR_signal</name></expr>:</case>

        <goto pos:start="1109:9" pos:end="1112:0">goto <name pos:start="1109:14" pos:end="1109:26">unimplemented</name>;</goto>

<cpp:endif pos:start="1111:1" pos:end="1111:6">#<cpp:directive pos:start="1111:2" pos:end="1111:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1113:5" pos:end="1113:24">case <expr pos:start="1113:10" pos:end="1113:23"><name pos:start="1113:10" pos:end="1113:23">TARGET_NR_acct</name></expr>:</case>

        <if_stmt pos:start="1115:9" pos:end="1129:9"><if pos:start="1115:9" pos:end="1119:9">if <condition pos:start="1115:12" pos:end="1115:22">(<expr pos:start="1115:13" pos:end="1115:21"><name pos:start="1115:13" pos:end="1115:16">arg1</name> <operator pos:start="1115:18" pos:end="1115:19">==</operator> <literal type="number" pos:start="1115:21" pos:end="1115:21">0</literal></expr>)</condition> <block pos:start="1115:24" pos:end="1119:9">{<block_content pos:start="1117:13" pos:end="1117:40">

            <expr_stmt pos:start="1117:13" pos:end="1117:40"><expr pos:start="1117:13" pos:end="1117:39"><name pos:start="1117:13" pos:end="1117:15">ret</name> <operator pos:start="1117:17" pos:end="1117:17">=</operator> <call pos:start="1117:19" pos:end="1117:39"><name pos:start="1117:19" pos:end="1117:27">get_errno</name><argument_list pos:start="1117:28" pos:end="1117:39">(<argument pos:start="1117:29" pos:end="1117:38"><expr pos:start="1117:29" pos:end="1117:38"><call pos:start="1117:29" pos:end="1117:38"><name pos:start="1117:29" pos:end="1117:32">acct</name><argument_list pos:start="1117:33" pos:end="1117:38">(<argument pos:start="1117:34" pos:end="1117:37"><expr pos:start="1117:34" pos:end="1117:37"><name pos:start="1117:34" pos:end="1117:37">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1119:11" pos:end="1129:9">else <block pos:start="1119:16" pos:end="1129:9">{<block_content pos:start="1121:13" pos:end="1127:36">

            <if_stmt pos:start="1121:13" pos:end="1123:28"><if pos:start="1121:13" pos:end="1123:28">if <condition pos:start="1121:16" pos:end="1121:46">(<expr pos:start="1121:17" pos:end="1121:45"><operator pos:start="1121:17" pos:end="1121:17">!</operator><operator pos:start="1121:18" pos:end="1121:18">(</operator><name pos:start="1121:19" pos:end="1121:19">p</name> <operator pos:start="1121:21" pos:end="1121:21">=</operator> <call pos:start="1121:23" pos:end="1121:44"><name pos:start="1121:23" pos:end="1121:38">lock_user_string</name><argument_list pos:start="1121:39" pos:end="1121:44">(<argument pos:start="1121:40" pos:end="1121:43"><expr pos:start="1121:40" pos:end="1121:43"><name pos:start="1121:40" pos:end="1121:43">arg1</name></expr></argument>)</argument_list></call><operator pos:start="1121:45" pos:end="1121:45">)</operator></expr>)</condition><block type="pseudo" pos:start="1123:17" pos:end="1123:28"><block_content pos:start="1123:17" pos:end="1123:28">

                <goto pos:start="1123:17" pos:end="1123:28">goto <name pos:start="1123:22" pos:end="1123:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1125:13" pos:end="1125:43"><expr pos:start="1125:13" pos:end="1125:42"><name pos:start="1125:13" pos:end="1125:15">ret</name> <operator pos:start="1125:17" pos:end="1125:17">=</operator> <call pos:start="1125:19" pos:end="1125:42"><name pos:start="1125:19" pos:end="1125:27">get_errno</name><argument_list pos:start="1125:28" pos:end="1125:42">(<argument pos:start="1125:29" pos:end="1125:41"><expr pos:start="1125:29" pos:end="1125:41"><call pos:start="1125:29" pos:end="1125:41"><name pos:start="1125:29" pos:end="1125:32">acct</name><argument_list pos:start="1125:33" pos:end="1125:41">(<argument pos:start="1125:34" pos:end="1125:40"><expr pos:start="1125:34" pos:end="1125:40"><call pos:start="1125:34" pos:end="1125:40"><name pos:start="1125:34" pos:end="1125:37">path</name><argument_list pos:start="1125:38" pos:end="1125:40">(<argument pos:start="1125:39" pos:end="1125:39"><expr pos:start="1125:39" pos:end="1125:39"><name pos:start="1125:39" pos:end="1125:39">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1127:13" pos:end="1127:36"><expr pos:start="1127:13" pos:end="1127:35"><call pos:start="1127:13" pos:end="1127:35"><name pos:start="1127:13" pos:end="1127:23">unlock_user</name><argument_list pos:start="1127:24" pos:end="1127:35">(<argument pos:start="1127:25" pos:end="1127:25"><expr pos:start="1127:25" pos:end="1127:25"><name pos:start="1127:25" pos:end="1127:25">p</name></expr></argument>, <argument pos:start="1127:28" pos:end="1127:31"><expr pos:start="1127:28" pos:end="1127:31"><name pos:start="1127:28" pos:end="1127:31">arg1</name></expr></argument>, <argument pos:start="1127:34" pos:end="1127:34"><expr pos:start="1127:34" pos:end="1127:34"><literal type="number" pos:start="1127:34" pos:end="1127:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="1131:9" pos:end="1134:0">break;</break>

<cpp:ifdef pos:start="1133:1" pos:end="1133:24">#<cpp:directive pos:start="1133:2" pos:end="1133:6">ifdef</cpp:directive> <name pos:start="1133:8" pos:end="1133:24">TARGET_NR_umount2</name></cpp:ifdef> <comment type="block" pos:start="1133:26" pos:end="1133:43">/* not on alpha */</comment>

    <case pos:start="1135:5" pos:end="1135:27">case <expr pos:start="1135:10" pos:end="1135:26"><name pos:start="1135:10" pos:end="1135:26">TARGET_NR_umount2</name></expr>:</case>

        <if_stmt pos:start="1137:9" pos:end="1139:24"><if pos:start="1137:9" pos:end="1139:24">if <condition pos:start="1137:12" pos:end="1137:42">(<expr pos:start="1137:13" pos:end="1137:41"><operator pos:start="1137:13" pos:end="1137:13">!</operator><operator pos:start="1137:14" pos:end="1137:14">(</operator><name pos:start="1137:15" pos:end="1137:15">p</name> <operator pos:start="1137:17" pos:end="1137:17">=</operator> <call pos:start="1137:19" pos:end="1137:40"><name pos:start="1137:19" pos:end="1137:34">lock_user_string</name><argument_list pos:start="1137:35" pos:end="1137:40">(<argument pos:start="1137:36" pos:end="1137:39"><expr pos:start="1137:36" pos:end="1137:39"><name pos:start="1137:36" pos:end="1137:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="1137:41" pos:end="1137:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1139:13" pos:end="1139:24"><block_content pos:start="1139:13" pos:end="1139:24">

            <goto pos:start="1139:13" pos:end="1139:24">goto <name pos:start="1139:18" pos:end="1139:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1141:9" pos:end="1141:42"><expr pos:start="1141:9" pos:end="1141:41"><name pos:start="1141:9" pos:end="1141:11">ret</name> <operator pos:start="1141:13" pos:end="1141:13">=</operator> <call pos:start="1141:15" pos:end="1141:41"><name pos:start="1141:15" pos:end="1141:23">get_errno</name><argument_list pos:start="1141:24" pos:end="1141:41">(<argument pos:start="1141:25" pos:end="1141:40"><expr pos:start="1141:25" pos:end="1141:40"><call pos:start="1141:25" pos:end="1141:40"><name pos:start="1141:25" pos:end="1141:31">umount2</name><argument_list pos:start="1141:32" pos:end="1141:40">(<argument pos:start="1141:33" pos:end="1141:33"><expr pos:start="1141:33" pos:end="1141:33"><name pos:start="1141:33" pos:end="1141:33">p</name></expr></argument>, <argument pos:start="1141:36" pos:end="1141:39"><expr pos:start="1141:36" pos:end="1141:39"><name pos:start="1141:36" pos:end="1141:39">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1143:9" pos:end="1143:32"><expr pos:start="1143:9" pos:end="1143:31"><call pos:start="1143:9" pos:end="1143:31"><name pos:start="1143:9" pos:end="1143:19">unlock_user</name><argument_list pos:start="1143:20" pos:end="1143:31">(<argument pos:start="1143:21" pos:end="1143:21"><expr pos:start="1143:21" pos:end="1143:21"><name pos:start="1143:21" pos:end="1143:21">p</name></expr></argument>, <argument pos:start="1143:24" pos:end="1143:27"><expr pos:start="1143:24" pos:end="1143:27"><name pos:start="1143:24" pos:end="1143:27">arg1</name></expr></argument>, <argument pos:start="1143:30" pos:end="1143:30"><expr pos:start="1143:30" pos:end="1143:30"><literal type="number" pos:start="1143:30" pos:end="1143:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1145:9" pos:end="1150:0">break;</break>

<cpp:endif pos:start="1147:1" pos:end="1147:6">#<cpp:directive pos:start="1147:2" pos:end="1147:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1149:1" pos:end="1149:21">#<cpp:directive pos:start="1149:2" pos:end="1149:6">ifdef</cpp:directive> <name pos:start="1149:8" pos:end="1149:21">TARGET_NR_lock</name></cpp:ifdef>

    <case pos:start="1151:5" pos:end="1151:24">case <expr pos:start="1151:10" pos:end="1151:23"><name pos:start="1151:10" pos:end="1151:23">TARGET_NR_lock</name></expr>:</case>

        <goto pos:start="1153:9" pos:end="1156:0">goto <name pos:start="1153:14" pos:end="1153:26">unimplemented</name>;</goto>

<cpp:endif pos:start="1155:1" pos:end="1155:6">#<cpp:directive pos:start="1155:2" pos:end="1155:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1157:5" pos:end="1157:25">case <expr pos:start="1157:10" pos:end="1157:24"><name pos:start="1157:10" pos:end="1157:24">TARGET_NR_ioctl</name></expr>:</case>

        <expr_stmt pos:start="1159:9" pos:end="1159:41"><expr pos:start="1159:9" pos:end="1159:40"><name pos:start="1159:9" pos:end="1159:11">ret</name> <operator pos:start="1159:13" pos:end="1159:13">=</operator> <call pos:start="1159:15" pos:end="1159:40"><name pos:start="1159:15" pos:end="1159:22">do_ioctl</name><argument_list pos:start="1159:23" pos:end="1159:40">(<argument pos:start="1159:24" pos:end="1159:27"><expr pos:start="1159:24" pos:end="1159:27"><name pos:start="1159:24" pos:end="1159:27">arg1</name></expr></argument>, <argument pos:start="1159:30" pos:end="1159:33"><expr pos:start="1159:30" pos:end="1159:33"><name pos:start="1159:30" pos:end="1159:33">arg2</name></expr></argument>, <argument pos:start="1159:36" pos:end="1159:39"><expr pos:start="1159:36" pos:end="1159:39"><name pos:start="1159:36" pos:end="1159:39">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1161:9" pos:end="1161:14">break;</break>

    <case pos:start="1163:5" pos:end="1163:25">case <expr pos:start="1163:10" pos:end="1163:24"><name pos:start="1163:10" pos:end="1163:24">TARGET_NR_fcntl</name></expr>:</case>

        <expr_stmt pos:start="1165:9" pos:end="1165:41"><expr pos:start="1165:9" pos:end="1165:40"><name pos:start="1165:9" pos:end="1165:11">ret</name> <operator pos:start="1165:13" pos:end="1165:13">=</operator> <call pos:start="1165:15" pos:end="1165:40"><name pos:start="1165:15" pos:end="1165:22">do_fcntl</name><argument_list pos:start="1165:23" pos:end="1165:40">(<argument pos:start="1165:24" pos:end="1165:27"><expr pos:start="1165:24" pos:end="1165:27"><name pos:start="1165:24" pos:end="1165:27">arg1</name></expr></argument>, <argument pos:start="1165:30" pos:end="1165:33"><expr pos:start="1165:30" pos:end="1165:33"><name pos:start="1165:30" pos:end="1165:33">arg2</name></expr></argument>, <argument pos:start="1165:36" pos:end="1165:39"><expr pos:start="1165:36" pos:end="1165:39"><name pos:start="1165:36" pos:end="1165:39">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1167:9" pos:end="1170:0">break;</break>

<cpp:ifdef pos:start="1169:1" pos:end="1169:20">#<cpp:directive pos:start="1169:2" pos:end="1169:6">ifdef</cpp:directive> <name pos:start="1169:8" pos:end="1169:20">TARGET_NR_mpx</name></cpp:ifdef>

    <case pos:start="1171:5" pos:end="1171:23">case <expr pos:start="1171:10" pos:end="1171:22"><name pos:start="1171:10" pos:end="1171:22">TARGET_NR_mpx</name></expr>:</case>

        <goto pos:start="1173:9" pos:end="1176:0">goto <name pos:start="1173:14" pos:end="1173:26">unimplemented</name>;</goto>

<cpp:endif pos:start="1175:1" pos:end="1175:6">#<cpp:directive pos:start="1175:2" pos:end="1175:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1177:5" pos:end="1177:27">case <expr pos:start="1177:10" pos:end="1177:26"><name pos:start="1177:10" pos:end="1177:26">TARGET_NR_setpgid</name></expr>:</case>

        <expr_stmt pos:start="1179:9" pos:end="1179:45"><expr pos:start="1179:9" pos:end="1179:44"><name pos:start="1179:9" pos:end="1179:11">ret</name> <operator pos:start="1179:13" pos:end="1179:13">=</operator> <call pos:start="1179:15" pos:end="1179:44"><name pos:start="1179:15" pos:end="1179:23">get_errno</name><argument_list pos:start="1179:24" pos:end="1179:44">(<argument pos:start="1179:25" pos:end="1179:43"><expr pos:start="1179:25" pos:end="1179:43"><call pos:start="1179:25" pos:end="1179:43"><name pos:start="1179:25" pos:end="1179:31">setpgid</name><argument_list pos:start="1179:32" pos:end="1179:43">(<argument pos:start="1179:33" pos:end="1179:36"><expr pos:start="1179:33" pos:end="1179:36"><name pos:start="1179:33" pos:end="1179:36">arg1</name></expr></argument>, <argument pos:start="1179:39" pos:end="1179:42"><expr pos:start="1179:39" pos:end="1179:42"><name pos:start="1179:39" pos:end="1179:42">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1181:9" pos:end="1184:0">break;</break>

<cpp:ifdef pos:start="1183:1" pos:end="1183:23">#<cpp:directive pos:start="1183:2" pos:end="1183:6">ifdef</cpp:directive> <name pos:start="1183:8" pos:end="1183:23">TARGET_NR_ulimit</name></cpp:ifdef>

    <case pos:start="1185:5" pos:end="1185:26">case <expr pos:start="1185:10" pos:end="1185:25"><name pos:start="1185:10" pos:end="1185:25">TARGET_NR_ulimit</name></expr>:</case>

        <goto pos:start="1187:9" pos:end="1192:0">goto <name pos:start="1187:14" pos:end="1187:26">unimplemented</name>;</goto>

<cpp:endif pos:start="1189:1" pos:end="1189:6">#<cpp:directive pos:start="1189:2" pos:end="1189:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1191:1" pos:end="1191:28">#<cpp:directive pos:start="1191:2" pos:end="1191:6">ifdef</cpp:directive> <name pos:start="1191:8" pos:end="1191:28">TARGET_NR_oldolduname</name></cpp:ifdef>

    <case pos:start="1193:5" pos:end="1193:31">case <expr pos:start="1193:10" pos:end="1193:30"><name pos:start="1193:10" pos:end="1193:30">TARGET_NR_oldolduname</name></expr>:</case>

        <goto pos:start="1195:9" pos:end="1198:0">goto <name pos:start="1195:14" pos:end="1195:26">unimplemented</name>;</goto>

<cpp:endif pos:start="1197:1" pos:end="1197:6">#<cpp:directive pos:start="1197:2" pos:end="1197:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1199:5" pos:end="1199:25">case <expr pos:start="1199:10" pos:end="1199:24"><name pos:start="1199:10" pos:end="1199:24">TARGET_NR_umask</name></expr>:</case>

        <expr_stmt pos:start="1201:9" pos:end="1201:37"><expr pos:start="1201:9" pos:end="1201:36"><name pos:start="1201:9" pos:end="1201:11">ret</name> <operator pos:start="1201:13" pos:end="1201:13">=</operator> <call pos:start="1201:15" pos:end="1201:36"><name pos:start="1201:15" pos:end="1201:23">get_errno</name><argument_list pos:start="1201:24" pos:end="1201:36">(<argument pos:start="1201:25" pos:end="1201:35"><expr pos:start="1201:25" pos:end="1201:35"><call pos:start="1201:25" pos:end="1201:35"><name pos:start="1201:25" pos:end="1201:29">umask</name><argument_list pos:start="1201:30" pos:end="1201:35">(<argument pos:start="1201:31" pos:end="1201:34"><expr pos:start="1201:31" pos:end="1201:34"><name pos:start="1201:31" pos:end="1201:34">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1203:9" pos:end="1203:14">break;</break>

    <case pos:start="1205:5" pos:end="1205:26">case <expr pos:start="1205:10" pos:end="1205:25"><name pos:start="1205:10" pos:end="1205:25">TARGET_NR_chroot</name></expr>:</case>

        <if_stmt pos:start="1207:9" pos:end="1209:24"><if pos:start="1207:9" pos:end="1209:24">if <condition pos:start="1207:12" pos:end="1207:42">(<expr pos:start="1207:13" pos:end="1207:41"><operator pos:start="1207:13" pos:end="1207:13">!</operator><operator pos:start="1207:14" pos:end="1207:14">(</operator><name pos:start="1207:15" pos:end="1207:15">p</name> <operator pos:start="1207:17" pos:end="1207:17">=</operator> <call pos:start="1207:19" pos:end="1207:40"><name pos:start="1207:19" pos:end="1207:34">lock_user_string</name><argument_list pos:start="1207:35" pos:end="1207:40">(<argument pos:start="1207:36" pos:end="1207:39"><expr pos:start="1207:36" pos:end="1207:39"><name pos:start="1207:36" pos:end="1207:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="1207:41" pos:end="1207:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1209:13" pos:end="1209:24"><block_content pos:start="1209:13" pos:end="1209:24">

            <goto pos:start="1209:13" pos:end="1209:24">goto <name pos:start="1209:18" pos:end="1209:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1211:9" pos:end="1211:35"><expr pos:start="1211:9" pos:end="1211:34"><name pos:start="1211:9" pos:end="1211:11">ret</name> <operator pos:start="1211:13" pos:end="1211:13">=</operator> <call pos:start="1211:15" pos:end="1211:34"><name pos:start="1211:15" pos:end="1211:23">get_errno</name><argument_list pos:start="1211:24" pos:end="1211:34">(<argument pos:start="1211:25" pos:end="1211:33"><expr pos:start="1211:25" pos:end="1211:33"><call pos:start="1211:25" pos:end="1211:33"><name pos:start="1211:25" pos:end="1211:30">chroot</name><argument_list pos:start="1211:31" pos:end="1211:33">(<argument pos:start="1211:32" pos:end="1211:32"><expr pos:start="1211:32" pos:end="1211:32"><name pos:start="1211:32" pos:end="1211:32">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1213:9" pos:end="1213:32"><expr pos:start="1213:9" pos:end="1213:31"><call pos:start="1213:9" pos:end="1213:31"><name pos:start="1213:9" pos:end="1213:19">unlock_user</name><argument_list pos:start="1213:20" pos:end="1213:31">(<argument pos:start="1213:21" pos:end="1213:21"><expr pos:start="1213:21" pos:end="1213:21"><name pos:start="1213:21" pos:end="1213:21">p</name></expr></argument>, <argument pos:start="1213:24" pos:end="1213:27"><expr pos:start="1213:24" pos:end="1213:27"><name pos:start="1213:24" pos:end="1213:27">arg1</name></expr></argument>, <argument pos:start="1213:30" pos:end="1213:30"><expr pos:start="1213:30" pos:end="1213:30"><literal type="number" pos:start="1213:30" pos:end="1213:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1215:9" pos:end="1215:14">break;</break>

    <case pos:start="1217:5" pos:end="1217:25">case <expr pos:start="1217:10" pos:end="1217:24"><name pos:start="1217:10" pos:end="1217:24">TARGET_NR_ustat</name></expr>:</case>

        <goto pos:start="1219:9" pos:end="1219:27">goto <name pos:start="1219:14" pos:end="1219:26">unimplemented</name>;</goto>

    <case pos:start="1221:5" pos:end="1221:24">case <expr pos:start="1221:10" pos:end="1221:23"><name pos:start="1221:10" pos:end="1221:23">TARGET_NR_dup2</name></expr>:</case>

        <expr_stmt pos:start="1223:9" pos:end="1223:42"><expr pos:start="1223:9" pos:end="1223:41"><name pos:start="1223:9" pos:end="1223:11">ret</name> <operator pos:start="1223:13" pos:end="1223:13">=</operator> <call pos:start="1223:15" pos:end="1223:41"><name pos:start="1223:15" pos:end="1223:23">get_errno</name><argument_list pos:start="1223:24" pos:end="1223:41">(<argument pos:start="1223:25" pos:end="1223:40"><expr pos:start="1223:25" pos:end="1223:40"><call pos:start="1223:25" pos:end="1223:40"><name pos:start="1223:25" pos:end="1223:28">dup2</name><argument_list pos:start="1223:29" pos:end="1223:40">(<argument pos:start="1223:30" pos:end="1223:33"><expr pos:start="1223:30" pos:end="1223:33"><name pos:start="1223:30" pos:end="1223:33">arg1</name></expr></argument>, <argument pos:start="1223:36" pos:end="1223:39"><expr pos:start="1223:36" pos:end="1223:39"><name pos:start="1223:36" pos:end="1223:39">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1225:9" pos:end="1228:0">break;</break>

<cpp:ifdef pos:start="1227:1" pos:end="1227:24">#<cpp:directive pos:start="1227:2" pos:end="1227:6">ifdef</cpp:directive> <name pos:start="1227:8" pos:end="1227:24">TARGET_NR_getppid</name></cpp:ifdef> <comment type="block" pos:start="1227:26" pos:end="1227:43">/* not on alpha */</comment>

    <case pos:start="1229:5" pos:end="1229:27">case <expr pos:start="1229:10" pos:end="1229:26"><name pos:start="1229:10" pos:end="1229:26">TARGET_NR_getppid</name></expr>:</case>

        <expr_stmt pos:start="1231:9" pos:end="1231:35"><expr pos:start="1231:9" pos:end="1231:34"><name pos:start="1231:9" pos:end="1231:11">ret</name> <operator pos:start="1231:13" pos:end="1231:13">=</operator> <call pos:start="1231:15" pos:end="1231:34"><name pos:start="1231:15" pos:end="1231:23">get_errno</name><argument_list pos:start="1231:24" pos:end="1231:34">(<argument pos:start="1231:25" pos:end="1231:33"><expr pos:start="1231:25" pos:end="1231:33"><call pos:start="1231:25" pos:end="1231:33"><name pos:start="1231:25" pos:end="1231:31">getppid</name><argument_list pos:start="1231:32" pos:end="1231:33">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1233:9" pos:end="1236:0">break;</break>

<cpp:endif pos:start="1235:1" pos:end="1235:6">#<cpp:directive pos:start="1235:2" pos:end="1235:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1237:5" pos:end="1237:27">case <expr pos:start="1237:10" pos:end="1237:26"><name pos:start="1237:10" pos:end="1237:26">TARGET_NR_getpgrp</name></expr>:</case>

        <expr_stmt pos:start="1239:9" pos:end="1239:35"><expr pos:start="1239:9" pos:end="1239:34"><name pos:start="1239:9" pos:end="1239:11">ret</name> <operator pos:start="1239:13" pos:end="1239:13">=</operator> <call pos:start="1239:15" pos:end="1239:34"><name pos:start="1239:15" pos:end="1239:23">get_errno</name><argument_list pos:start="1239:24" pos:end="1239:34">(<argument pos:start="1239:25" pos:end="1239:33"><expr pos:start="1239:25" pos:end="1239:33"><call pos:start="1239:25" pos:end="1239:33"><name pos:start="1239:25" pos:end="1239:31">getpgrp</name><argument_list pos:start="1239:32" pos:end="1239:33">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1241:9" pos:end="1241:14">break;</break>

    <case pos:start="1243:5" pos:end="1243:26">case <expr pos:start="1243:10" pos:end="1243:25"><name pos:start="1243:10" pos:end="1243:25">TARGET_NR_setsid</name></expr>:</case>

        <expr_stmt pos:start="1245:9" pos:end="1245:34"><expr pos:start="1245:9" pos:end="1245:33"><name pos:start="1245:9" pos:end="1245:11">ret</name> <operator pos:start="1245:13" pos:end="1245:13">=</operator> <call pos:start="1245:15" pos:end="1245:33"><name pos:start="1245:15" pos:end="1245:23">get_errno</name><argument_list pos:start="1245:24" pos:end="1245:33">(<argument pos:start="1245:25" pos:end="1245:32"><expr pos:start="1245:25" pos:end="1245:32"><call pos:start="1245:25" pos:end="1245:32"><name pos:start="1245:25" pos:end="1245:30">setsid</name><argument_list pos:start="1245:31" pos:end="1245:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1247:9" pos:end="1250:0">break;</break>

<cpp:ifdef pos:start="1249:1" pos:end="1249:26">#<cpp:directive pos:start="1249:2" pos:end="1249:6">ifdef</cpp:directive> <name pos:start="1249:8" pos:end="1249:26">TARGET_NR_sigaction</name></cpp:ifdef>

    <case pos:start="1251:5" pos:end="1251:29">case <expr pos:start="1251:10" pos:end="1251:28"><name pos:start="1251:10" pos:end="1251:28">TARGET_NR_sigaction</name></expr>:</case>

        <block pos:start="1253:9" pos:end="1363:9">{<block_content pos:start="1257:13" pos:end="1362:0">

<cpp:if pos:start="1255:1" pos:end="1255:25">#<cpp:directive pos:start="1255:2" pos:end="1255:3">if</cpp:directive> <expr pos:start="1255:5" pos:end="1255:25"><operator pos:start="1255:5" pos:end="1255:5">!</operator><call pos:start="1255:6" pos:end="1255:25"><name pos:start="1255:6" pos:end="1255:12">defined</name><argument_list pos:start="1255:13" pos:end="1255:25">(<argument pos:start="1255:14" pos:end="1255:24"><expr pos:start="1255:14" pos:end="1255:24"><name pos:start="1255:14" pos:end="1255:24">TARGET_MIPS</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <decl_stmt pos:start="1257:13" pos:end="1257:49"><decl pos:start="1257:13" pos:end="1257:48"><type pos:start="1257:13" pos:end="1257:41"><name pos:start="1257:13" pos:end="1257:39"><name pos:start="1257:13" pos:end="1257:18">struct</name> <name pos:start="1257:20" pos:end="1257:39">target_old_sigaction</name></name> <modifier pos:start="1257:41" pos:end="1257:41">*</modifier></type><name pos:start="1257:42" pos:end="1257:48">old_act</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1259:13" pos:end="1259:53"><decl pos:start="1259:13" pos:end="1259:39"><type pos:start="1259:13" pos:end="1259:35"><name pos:start="1259:13" pos:end="1259:35"><name pos:start="1259:13" pos:end="1259:18">struct</name> <name pos:start="1259:20" pos:end="1259:35">target_sigaction</name></name></type> <name pos:start="1259:37" pos:end="1259:39">act</name></decl>, <decl pos:start="1259:42" pos:end="1259:45"><type ref="prev" pos:start="1259:13" pos:end="1259:35"/><name pos:start="1259:42" pos:end="1259:45">oact</name></decl>, <decl pos:start="1259:48" pos:end="1259:52"><type ref="prev" pos:start="1259:13" pos:end="1259:35"><modifier pos:start="1259:48" pos:end="1259:48">*</modifier></type><name pos:start="1259:49" pos:end="1259:52">pact</name></decl>;</decl_stmt>

            <if_stmt pos:start="1261:13" pos:end="1283:13"><if pos:start="1261:13" pos:end="1279:13">if <condition pos:start="1261:16" pos:end="1261:21">(<expr pos:start="1261:17" pos:end="1261:20"><name pos:start="1261:17" pos:end="1261:20">arg2</name></expr>)</condition> <block pos:start="1261:23" pos:end="1279:13">{<block_content pos:start="1263:17" pos:end="1277:28">

                <if_stmt pos:start="1263:17" pos:end="1265:32"><if pos:start="1263:17" pos:end="1265:32">if <condition pos:start="1263:20" pos:end="1263:69">(<expr pos:start="1263:21" pos:end="1263:68"><operator pos:start="1263:21" pos:end="1263:21">!</operator><call pos:start="1263:22" pos:end="1263:68"><name pos:start="1263:22" pos:end="1263:37">lock_user_struct</name><argument_list pos:start="1263:38" pos:end="1263:68">(<argument pos:start="1263:39" pos:end="1263:49"><expr pos:start="1263:39" pos:end="1263:49"><name pos:start="1263:39" pos:end="1263:49">VERIFY_READ</name></expr></argument>, <argument pos:start="1263:52" pos:end="1263:58"><expr pos:start="1263:52" pos:end="1263:58"><name pos:start="1263:52" pos:end="1263:58">old_act</name></expr></argument>, <argument pos:start="1263:61" pos:end="1263:64"><expr pos:start="1263:61" pos:end="1263:64"><name pos:start="1263:61" pos:end="1263:64">arg2</name></expr></argument>, <argument pos:start="1263:67" pos:end="1263:67"><expr pos:start="1263:67" pos:end="1263:67"><literal type="number" pos:start="1263:67" pos:end="1263:67">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1265:21" pos:end="1265:32"><block_content pos:start="1265:21" pos:end="1265:32">

                    <goto pos:start="1265:21" pos:end="1265:32">goto <name pos:start="1265:26" pos:end="1265:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1267:17" pos:end="1267:55"><expr pos:start="1267:17" pos:end="1267:54"><name pos:start="1267:17" pos:end="1267:31"><name pos:start="1267:17" pos:end="1267:19">act</name><operator pos:start="1267:20" pos:end="1267:20">.</operator><name pos:start="1267:21" pos:end="1267:31">_sa_handler</name></name> <operator pos:start="1267:33" pos:end="1267:33">=</operator> <name pos:start="1267:35" pos:end="1267:54"><name pos:start="1267:35" pos:end="1267:41">old_act</name><operator pos:start="1267:42" pos:end="1267:43">-&gt;</operator><name pos:start="1267:44" pos:end="1267:54">_sa_handler</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1269:17" pos:end="1269:66"><expr pos:start="1269:17" pos:end="1269:65"><call pos:start="1269:17" pos:end="1269:65"><name pos:start="1269:17" pos:end="1269:33">target_siginitset</name><argument_list pos:start="1269:34" pos:end="1269:65">(<argument pos:start="1269:35" pos:end="1269:46"><expr pos:start="1269:35" pos:end="1269:46"><operator pos:start="1269:35" pos:end="1269:35">&amp;</operator><name pos:start="1269:36" pos:end="1269:46"><name pos:start="1269:36" pos:end="1269:38">act</name><operator pos:start="1269:39" pos:end="1269:39">.</operator><name pos:start="1269:40" pos:end="1269:46">sa_mask</name></name></expr></argument>, <argument pos:start="1269:49" pos:end="1269:64"><expr pos:start="1269:49" pos:end="1269:64"><name pos:start="1269:49" pos:end="1269:64"><name pos:start="1269:49" pos:end="1269:55">old_act</name><operator pos:start="1269:56" pos:end="1269:57">-&gt;</operator><name pos:start="1269:58" pos:end="1269:64">sa_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1271:17" pos:end="1271:49"><expr pos:start="1271:17" pos:end="1271:48"><name pos:start="1271:17" pos:end="1271:28"><name pos:start="1271:17" pos:end="1271:19">act</name><operator pos:start="1271:20" pos:end="1271:20">.</operator><name pos:start="1271:21" pos:end="1271:28">sa_flags</name></name> <operator pos:start="1271:30" pos:end="1271:30">=</operator> <name pos:start="1271:32" pos:end="1271:48"><name pos:start="1271:32" pos:end="1271:38">old_act</name><operator pos:start="1271:39" pos:end="1271:40">-&gt;</operator><name pos:start="1271:41" pos:end="1271:48">sa_flags</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1273:17" pos:end="1273:55"><expr pos:start="1273:17" pos:end="1273:54"><name pos:start="1273:17" pos:end="1273:31"><name pos:start="1273:17" pos:end="1273:19">act</name><operator pos:start="1273:20" pos:end="1273:20">.</operator><name pos:start="1273:21" pos:end="1273:31">sa_restorer</name></name> <operator pos:start="1273:33" pos:end="1273:33">=</operator> <name pos:start="1273:35" pos:end="1273:54"><name pos:start="1273:35" pos:end="1273:41">old_act</name><operator pos:start="1273:42" pos:end="1273:43">-&gt;</operator><name pos:start="1273:44" pos:end="1273:54">sa_restorer</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1275:17" pos:end="1275:53"><expr pos:start="1275:17" pos:end="1275:52"><call pos:start="1275:17" pos:end="1275:52"><name pos:start="1275:17" pos:end="1275:34">unlock_user_struct</name><argument_list pos:start="1275:35" pos:end="1275:52">(<argument pos:start="1275:36" pos:end="1275:42"><expr pos:start="1275:36" pos:end="1275:42"><name pos:start="1275:36" pos:end="1275:42">old_act</name></expr></argument>, <argument pos:start="1275:45" pos:end="1275:48"><expr pos:start="1275:45" pos:end="1275:48"><name pos:start="1275:45" pos:end="1275:48">arg2</name></expr></argument>, <argument pos:start="1275:51" pos:end="1275:51"><expr pos:start="1275:51" pos:end="1275:51"><literal type="number" pos:start="1275:51" pos:end="1275:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1277:17" pos:end="1277:28"><expr pos:start="1277:17" pos:end="1277:27"><name pos:start="1277:17" pos:end="1277:20">pact</name> <operator pos:start="1277:22" pos:end="1277:22">=</operator> <operator pos:start="1277:24" pos:end="1277:24">&amp;</operator><name pos:start="1277:25" pos:end="1277:27">act</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1279:15" pos:end="1283:13">else <block pos:start="1279:20" pos:end="1283:13">{<block_content pos:start="1281:17" pos:end="1281:28">

                <expr_stmt pos:start="1281:17" pos:end="1281:28"><expr pos:start="1281:17" pos:end="1281:27"><name pos:start="1281:17" pos:end="1281:20">pact</name> <operator pos:start="1281:22" pos:end="1281:22">=</operator> <name pos:start="1281:24" pos:end="1281:27">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1285:13" pos:end="1285:61"><expr pos:start="1285:13" pos:end="1285:60"><name pos:start="1285:13" pos:end="1285:15">ret</name> <operator pos:start="1285:17" pos:end="1285:17">=</operator> <call pos:start="1285:19" pos:end="1285:60"><name pos:start="1285:19" pos:end="1285:27">get_errno</name><argument_list pos:start="1285:28" pos:end="1285:60">(<argument pos:start="1285:29" pos:end="1285:59"><expr pos:start="1285:29" pos:end="1285:59"><call pos:start="1285:29" pos:end="1285:59"><name pos:start="1285:29" pos:end="1285:40">do_sigaction</name><argument_list pos:start="1285:41" pos:end="1285:59">(<argument pos:start="1285:42" pos:end="1285:45"><expr pos:start="1285:42" pos:end="1285:45"><name pos:start="1285:42" pos:end="1285:45">arg1</name></expr></argument>, <argument pos:start="1285:48" pos:end="1285:51"><expr pos:start="1285:48" pos:end="1285:51"><name pos:start="1285:48" pos:end="1285:51">pact</name></expr></argument>, <argument pos:start="1285:54" pos:end="1285:58"><expr pos:start="1285:54" pos:end="1285:58"><operator pos:start="1285:54" pos:end="1285:54">&amp;</operator><name pos:start="1285:55" pos:end="1285:58">oact</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1287:13" pos:end="1306:0"><if pos:start="1287:13" pos:end="1306:0">if <condition pos:start="1287:16" pos:end="1287:39">(<expr pos:start="1287:17" pos:end="1287:38"><operator pos:start="1287:17" pos:end="1287:17">!</operator><call pos:start="1287:18" pos:end="1287:30"><name pos:start="1287:18" pos:end="1287:25">is_error</name><argument_list pos:start="1287:26" pos:end="1287:30">(<argument pos:start="1287:27" pos:end="1287:29"><expr pos:start="1287:27" pos:end="1287:29"><name pos:start="1287:27" pos:end="1287:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="1287:32" pos:end="1287:33">&amp;&amp;</operator> <name pos:start="1287:35" pos:end="1287:38">arg3</name></expr>)</condition> <block pos:start="1287:41" pos:end="1306:0">{<block_content pos:start="1289:17" pos:end="1301:53">

                <if_stmt pos:start="1289:17" pos:end="1291:32"><if pos:start="1289:17" pos:end="1291:32">if <condition pos:start="1289:20" pos:end="1289:70">(<expr pos:start="1289:21" pos:end="1289:69"><operator pos:start="1289:21" pos:end="1289:21">!</operator><call pos:start="1289:22" pos:end="1289:69"><name pos:start="1289:22" pos:end="1289:37">lock_user_struct</name><argument_list pos:start="1289:38" pos:end="1289:69">(<argument pos:start="1289:39" pos:end="1289:50"><expr pos:start="1289:39" pos:end="1289:50"><name pos:start="1289:39" pos:end="1289:50">VERIFY_WRITE</name></expr></argument>, <argument pos:start="1289:53" pos:end="1289:59"><expr pos:start="1289:53" pos:end="1289:59"><name pos:start="1289:53" pos:end="1289:59">old_act</name></expr></argument>, <argument pos:start="1289:62" pos:end="1289:65"><expr pos:start="1289:62" pos:end="1289:65"><name pos:start="1289:62" pos:end="1289:65">arg3</name></expr></argument>, <argument pos:start="1289:68" pos:end="1289:68"><expr pos:start="1289:68" pos:end="1289:68"><literal type="number" pos:start="1289:68" pos:end="1289:68">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1291:21" pos:end="1291:32"><block_content pos:start="1291:21" pos:end="1291:32">

                    <goto pos:start="1291:21" pos:end="1291:32">goto <name pos:start="1291:26" pos:end="1291:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1293:17" pos:end="1293:56"><expr pos:start="1293:17" pos:end="1293:55"><name pos:start="1293:17" pos:end="1293:36"><name pos:start="1293:17" pos:end="1293:23">old_act</name><operator pos:start="1293:24" pos:end="1293:25">-&gt;</operator><name pos:start="1293:26" pos:end="1293:36">_sa_handler</name></name> <operator pos:start="1293:38" pos:end="1293:38">=</operator> <name pos:start="1293:40" pos:end="1293:55"><name pos:start="1293:40" pos:end="1293:43">oact</name><operator pos:start="1293:44" pos:end="1293:44">.</operator><name pos:start="1293:45" pos:end="1293:55">_sa_handler</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1295:17" pos:end="1295:55"><expr pos:start="1295:17" pos:end="1295:54"><name pos:start="1295:17" pos:end="1295:32"><name pos:start="1295:17" pos:end="1295:23">old_act</name><operator pos:start="1295:24" pos:end="1295:25">-&gt;</operator><name pos:start="1295:26" pos:end="1295:32">sa_mask</name></name> <operator pos:start="1295:34" pos:end="1295:34">=</operator> <name pos:start="1295:36" pos:end="1295:54"><name pos:start="1295:36" pos:end="1295:39">oact</name><operator pos:start="1295:40" pos:end="1295:40">.</operator><name pos:start="1295:41" pos:end="1295:47">sa_mask</name><operator pos:start="1295:48" pos:end="1295:48">.</operator><name pos:start="1295:49" pos:end="1295:51">sig</name><index pos:start="1295:52" pos:end="1295:54">[<expr pos:start="1295:53" pos:end="1295:53"><literal type="number" pos:start="1295:53" pos:end="1295:53">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1297:17" pos:end="1297:50"><expr pos:start="1297:17" pos:end="1297:49"><name pos:start="1297:17" pos:end="1297:33"><name pos:start="1297:17" pos:end="1297:23">old_act</name><operator pos:start="1297:24" pos:end="1297:25">-&gt;</operator><name pos:start="1297:26" pos:end="1297:33">sa_flags</name></name> <operator pos:start="1297:35" pos:end="1297:35">=</operator> <name pos:start="1297:37" pos:end="1297:49"><name pos:start="1297:37" pos:end="1297:40">oact</name><operator pos:start="1297:41" pos:end="1297:41">.</operator><name pos:start="1297:42" pos:end="1297:49">sa_flags</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1299:17" pos:end="1299:56"><expr pos:start="1299:17" pos:end="1299:55"><name pos:start="1299:17" pos:end="1299:36"><name pos:start="1299:17" pos:end="1299:23">old_act</name><operator pos:start="1299:24" pos:end="1299:25">-&gt;</operator><name pos:start="1299:26" pos:end="1299:36">sa_restorer</name></name> <operator pos:start="1299:38" pos:end="1299:38">=</operator> <name pos:start="1299:40" pos:end="1299:55"><name pos:start="1299:40" pos:end="1299:43">oact</name><operator pos:start="1299:44" pos:end="1299:44">.</operator><name pos:start="1299:45" pos:end="1299:55">sa_restorer</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="1301:17" pos:end="1301:53"><expr pos:start="1301:17" pos:end="1301:52"><call pos:start="1301:17" pos:end="1301:52"><name pos:start="1301:17" pos:end="1301:34">unlock_user_struct</name><argument_list pos:start="1301:35" pos:end="1301:52">(<argument pos:start="1301:36" pos:end="1301:42"><expr pos:start="1301:36" pos:end="1301:42"><name pos:start="1301:36" pos:end="1301:42">old_act</name></expr></argument>, <argument pos:start="1301:45" pos:end="1301:48"><expr pos:start="1301:45" pos:end="1301:48"><name pos:start="1301:45" pos:end="1301:48">arg3</name></expr></argument>, <argument pos:start="1301:51" pos:end="1301:51"><expr pos:start="1301:51" pos:end="1301:51"><literal type="number" pos:start="1301:51" pos:end="1301:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:else pos:start="1305:1" pos:end="1305:5">#<cpp:directive pos:start="1305:2" pos:end="1305:5">else</cpp:directive></cpp:else>

	    <decl_stmt pos:start="1307:13" pos:end="1307:63"><decl pos:start="1307:13" pos:end="1307:39"><type pos:start="1307:13" pos:end="1307:35"><name pos:start="1307:13" pos:end="1307:35"><name pos:start="1307:13" pos:end="1307:18">struct</name> <name pos:start="1307:20" pos:end="1307:35">target_sigaction</name></name></type> <name pos:start="1307:37" pos:end="1307:39">act</name></decl>, <decl pos:start="1307:42" pos:end="1307:45"><type ref="prev" pos:start="1307:13" pos:end="1307:35"/><name pos:start="1307:42" pos:end="1307:45">oact</name></decl>, <decl pos:start="1307:48" pos:end="1307:52"><type ref="prev" pos:start="1307:13" pos:end="1307:35"><modifier pos:start="1307:48" pos:end="1307:48">*</modifier></type><name pos:start="1307:49" pos:end="1307:52">pact</name></decl>, <decl pos:start="1307:55" pos:end="1307:62"><type ref="prev" pos:start="1307:13" pos:end="1307:35"><modifier pos:start="1307:55" pos:end="1307:55">*</modifier></type><name pos:start="1307:56" pos:end="1307:62">old_act</name></decl>;</decl_stmt>



	    <if_stmt pos:start="1311:13" pos:end="1331:13"><if pos:start="1311:13" pos:end="1327:13">if <condition pos:start="1311:16" pos:end="1311:21">(<expr pos:start="1311:17" pos:end="1311:20"><name pos:start="1311:17" pos:end="1311:20">arg2</name></expr>)</condition> <block pos:start="1311:23" pos:end="1327:13">{<block_content pos:start="1313:17" pos:end="1325:28">

                <if_stmt pos:start="1313:17" pos:end="1315:32"><if pos:start="1313:17" pos:end="1315:32">if <condition pos:start="1313:20" pos:end="1313:69">(<expr pos:start="1313:21" pos:end="1313:68"><operator pos:start="1313:21" pos:end="1313:21">!</operator><call pos:start="1313:22" pos:end="1313:68"><name pos:start="1313:22" pos:end="1313:37">lock_user_struct</name><argument_list pos:start="1313:38" pos:end="1313:68">(<argument pos:start="1313:39" pos:end="1313:49"><expr pos:start="1313:39" pos:end="1313:49"><name pos:start="1313:39" pos:end="1313:49">VERIFY_READ</name></expr></argument>, <argument pos:start="1313:52" pos:end="1313:58"><expr pos:start="1313:52" pos:end="1313:58"><name pos:start="1313:52" pos:end="1313:58">old_act</name></expr></argument>, <argument pos:start="1313:61" pos:end="1313:64"><expr pos:start="1313:61" pos:end="1313:64"><name pos:start="1313:61" pos:end="1313:64">arg2</name></expr></argument>, <argument pos:start="1313:67" pos:end="1313:67"><expr pos:start="1313:67" pos:end="1313:67"><literal type="number" pos:start="1313:67" pos:end="1313:67">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1315:21" pos:end="1315:32"><block_content pos:start="1315:21" pos:end="1315:32">

                    <goto pos:start="1315:21" pos:end="1315:32">goto <name pos:start="1315:26" pos:end="1315:31">efault</name>;</goto></block_content></block></if></if_stmt>

		<expr_stmt pos:start="1317:17" pos:end="1317:55"><expr pos:start="1317:17" pos:end="1317:54"><name pos:start="1317:17" pos:end="1317:31"><name pos:start="1317:17" pos:end="1317:19">act</name><operator pos:start="1317:20" pos:end="1317:20">.</operator><name pos:start="1317:21" pos:end="1317:31">_sa_handler</name></name> <operator pos:start="1317:33" pos:end="1317:33">=</operator> <name pos:start="1317:35" pos:end="1317:54"><name pos:start="1317:35" pos:end="1317:41">old_act</name><operator pos:start="1317:42" pos:end="1317:43">-&gt;</operator><name pos:start="1317:44" pos:end="1317:54">_sa_handler</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="1319:17" pos:end="1319:73"><expr pos:start="1319:17" pos:end="1319:72"><call pos:start="1319:17" pos:end="1319:72"><name pos:start="1319:17" pos:end="1319:33">target_siginitset</name><argument_list pos:start="1319:34" pos:end="1319:72">(<argument pos:start="1319:35" pos:end="1319:46"><expr pos:start="1319:35" pos:end="1319:46"><operator pos:start="1319:35" pos:end="1319:35">&amp;</operator><name pos:start="1319:36" pos:end="1319:46"><name pos:start="1319:36" pos:end="1319:38">act</name><operator pos:start="1319:39" pos:end="1319:39">.</operator><name pos:start="1319:40" pos:end="1319:46">sa_mask</name></name></expr></argument>, <argument pos:start="1319:49" pos:end="1319:71"><expr pos:start="1319:49" pos:end="1319:71"><name pos:start="1319:49" pos:end="1319:71"><name pos:start="1319:49" pos:end="1319:55">old_act</name><operator pos:start="1319:56" pos:end="1319:57">-&gt;</operator><name pos:start="1319:58" pos:end="1319:64">sa_mask</name><operator pos:start="1319:65" pos:end="1319:65">.</operator><name pos:start="1319:66" pos:end="1319:68">sig</name><index pos:start="1319:69" pos:end="1319:71">[<expr pos:start="1319:70" pos:end="1319:70"><literal type="number" pos:start="1319:70" pos:end="1319:70">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="1321:17" pos:end="1321:49"><expr pos:start="1321:17" pos:end="1321:48"><name pos:start="1321:17" pos:end="1321:28"><name pos:start="1321:17" pos:end="1321:19">act</name><operator pos:start="1321:20" pos:end="1321:20">.</operator><name pos:start="1321:21" pos:end="1321:28">sa_flags</name></name> <operator pos:start="1321:30" pos:end="1321:30">=</operator> <name pos:start="1321:32" pos:end="1321:48"><name pos:start="1321:32" pos:end="1321:38">old_act</name><operator pos:start="1321:39" pos:end="1321:40">-&gt;</operator><name pos:start="1321:41" pos:end="1321:48">sa_flags</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="1323:17" pos:end="1323:53"><expr pos:start="1323:17" pos:end="1323:52"><call pos:start="1323:17" pos:end="1323:52"><name pos:start="1323:17" pos:end="1323:34">unlock_user_struct</name><argument_list pos:start="1323:35" pos:end="1323:52">(<argument pos:start="1323:36" pos:end="1323:42"><expr pos:start="1323:36" pos:end="1323:42"><name pos:start="1323:36" pos:end="1323:42">old_act</name></expr></argument>, <argument pos:start="1323:45" pos:end="1323:48"><expr pos:start="1323:45" pos:end="1323:48"><name pos:start="1323:45" pos:end="1323:48">arg2</name></expr></argument>, <argument pos:start="1323:51" pos:end="1323:51"><expr pos:start="1323:51" pos:end="1323:51"><literal type="number" pos:start="1323:51" pos:end="1323:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="1325:17" pos:end="1325:28"><expr pos:start="1325:17" pos:end="1325:27"><name pos:start="1325:17" pos:end="1325:20">pact</name> <operator pos:start="1325:22" pos:end="1325:22">=</operator> <operator pos:start="1325:24" pos:end="1325:24">&amp;</operator><name pos:start="1325:25" pos:end="1325:27">act</name></expr>;</expr_stmt>

	    </block_content>}</block></if> <else pos:start="1327:15" pos:end="1331:13">else <block pos:start="1327:20" pos:end="1331:13">{<block_content pos:start="1329:17" pos:end="1329:28">

		<expr_stmt pos:start="1329:17" pos:end="1329:28"><expr pos:start="1329:17" pos:end="1329:27"><name pos:start="1329:17" pos:end="1329:20">pact</name> <operator pos:start="1329:22" pos:end="1329:22">=</operator> <name pos:start="1329:24" pos:end="1329:27">NULL</name></expr>;</expr_stmt>

	    </block_content>}</block></else></if_stmt>



	    <expr_stmt pos:start="1335:13" pos:end="1335:61"><expr pos:start="1335:13" pos:end="1335:60"><name pos:start="1335:13" pos:end="1335:15">ret</name> <operator pos:start="1335:17" pos:end="1335:17">=</operator> <call pos:start="1335:19" pos:end="1335:60"><name pos:start="1335:19" pos:end="1335:27">get_errno</name><argument_list pos:start="1335:28" pos:end="1335:60">(<argument pos:start="1335:29" pos:end="1335:59"><expr pos:start="1335:29" pos:end="1335:59"><call pos:start="1335:29" pos:end="1335:59"><name pos:start="1335:29" pos:end="1335:40">do_sigaction</name><argument_list pos:start="1335:41" pos:end="1335:59">(<argument pos:start="1335:42" pos:end="1335:45"><expr pos:start="1335:42" pos:end="1335:45"><name pos:start="1335:42" pos:end="1335:45">arg1</name></expr></argument>, <argument pos:start="1335:48" pos:end="1335:51"><expr pos:start="1335:48" pos:end="1335:51"><name pos:start="1335:48" pos:end="1335:51">pact</name></expr></argument>, <argument pos:start="1335:54" pos:end="1335:58"><expr pos:start="1335:54" pos:end="1335:58"><operator pos:start="1335:54" pos:end="1335:54">&amp;</operator><name pos:start="1335:55" pos:end="1335:58">oact</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	    <if_stmt pos:start="1339:13" pos:end="1362:0"><if pos:start="1339:13" pos:end="1362:0">if <condition pos:start="1339:16" pos:end="1339:39">(<expr pos:start="1339:17" pos:end="1339:38"><operator pos:start="1339:17" pos:end="1339:17">!</operator><call pos:start="1339:18" pos:end="1339:30"><name pos:start="1339:18" pos:end="1339:25">is_error</name><argument_list pos:start="1339:26" pos:end="1339:30">(<argument pos:start="1339:27" pos:end="1339:29"><expr pos:start="1339:27" pos:end="1339:29"><name pos:start="1339:27" pos:end="1339:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="1339:32" pos:end="1339:33">&amp;&amp;</operator> <name pos:start="1339:35" pos:end="1339:38">arg3</name></expr>)</condition> <block pos:start="1339:41" pos:end="1362:0">{<block_content pos:start="1341:17" pos:end="1357:53">

                <if_stmt pos:start="1341:17" pos:end="1343:32"><if pos:start="1341:17" pos:end="1343:32">if <condition pos:start="1341:20" pos:end="1341:70">(<expr pos:start="1341:21" pos:end="1341:69"><operator pos:start="1341:21" pos:end="1341:21">!</operator><call pos:start="1341:22" pos:end="1341:69"><name pos:start="1341:22" pos:end="1341:37">lock_user_struct</name><argument_list pos:start="1341:38" pos:end="1341:69">(<argument pos:start="1341:39" pos:end="1341:50"><expr pos:start="1341:39" pos:end="1341:50"><name pos:start="1341:39" pos:end="1341:50">VERIFY_WRITE</name></expr></argument>, <argument pos:start="1341:53" pos:end="1341:59"><expr pos:start="1341:53" pos:end="1341:59"><name pos:start="1341:53" pos:end="1341:59">old_act</name></expr></argument>, <argument pos:start="1341:62" pos:end="1341:65"><expr pos:start="1341:62" pos:end="1341:65"><name pos:start="1341:62" pos:end="1341:65">arg3</name></expr></argument>, <argument pos:start="1341:68" pos:end="1341:68"><expr pos:start="1341:68" pos:end="1341:68"><literal type="number" pos:start="1341:68" pos:end="1341:68">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1343:21" pos:end="1343:32"><block_content pos:start="1343:21" pos:end="1343:32">

                    <goto pos:start="1343:21" pos:end="1343:32">goto <name pos:start="1343:26" pos:end="1343:31">efault</name>;</goto></block_content></block></if></if_stmt>

		<expr_stmt pos:start="1345:17" pos:end="1345:56"><expr pos:start="1345:17" pos:end="1345:55"><name pos:start="1345:17" pos:end="1345:36"><name pos:start="1345:17" pos:end="1345:23">old_act</name><operator pos:start="1345:24" pos:end="1345:25">-&gt;</operator><name pos:start="1345:26" pos:end="1345:36">_sa_handler</name></name> <operator pos:start="1345:38" pos:end="1345:38">=</operator> <name pos:start="1345:40" pos:end="1345:55"><name pos:start="1345:40" pos:end="1345:43">oact</name><operator pos:start="1345:44" pos:end="1345:44">.</operator><name pos:start="1345:45" pos:end="1345:55">_sa_handler</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="1347:17" pos:end="1347:50"><expr pos:start="1347:17" pos:end="1347:49"><name pos:start="1347:17" pos:end="1347:33"><name pos:start="1347:17" pos:end="1347:23">old_act</name><operator pos:start="1347:24" pos:end="1347:25">-&gt;</operator><name pos:start="1347:26" pos:end="1347:33">sa_flags</name></name> <operator pos:start="1347:35" pos:end="1347:35">=</operator> <name pos:start="1347:37" pos:end="1347:49"><name pos:start="1347:37" pos:end="1347:40">oact</name><operator pos:start="1347:41" pos:end="1347:41">.</operator><name pos:start="1347:42" pos:end="1347:49">sa_flags</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="1349:17" pos:end="1349:62"><expr pos:start="1349:17" pos:end="1349:61"><name pos:start="1349:17" pos:end="1349:39"><name pos:start="1349:17" pos:end="1349:23">old_act</name><operator pos:start="1349:24" pos:end="1349:25">-&gt;</operator><name pos:start="1349:26" pos:end="1349:32">sa_mask</name><operator pos:start="1349:33" pos:end="1349:33">.</operator><name pos:start="1349:34" pos:end="1349:36">sig</name><index pos:start="1349:37" pos:end="1349:39">[<expr pos:start="1349:38" pos:end="1349:38"><literal type="number" pos:start="1349:38" pos:end="1349:38">0</literal></expr>]</index></name> <operator pos:start="1349:41" pos:end="1349:41">=</operator> <name pos:start="1349:43" pos:end="1349:61"><name pos:start="1349:43" pos:end="1349:46">oact</name><operator pos:start="1349:47" pos:end="1349:47">.</operator><name pos:start="1349:48" pos:end="1349:54">sa_mask</name><operator pos:start="1349:55" pos:end="1349:55">.</operator><name pos:start="1349:56" pos:end="1349:58">sig</name><index pos:start="1349:59" pos:end="1349:61">[<expr pos:start="1349:60" pos:end="1349:60"><literal type="number" pos:start="1349:60" pos:end="1349:60">0</literal></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="1351:17" pos:end="1351:44"><expr pos:start="1351:17" pos:end="1351:43"><name pos:start="1351:17" pos:end="1351:39"><name pos:start="1351:17" pos:end="1351:23">old_act</name><operator pos:start="1351:24" pos:end="1351:25">-&gt;</operator><name pos:start="1351:26" pos:end="1351:32">sa_mask</name><operator pos:start="1351:33" pos:end="1351:33">.</operator><name pos:start="1351:34" pos:end="1351:36">sig</name><index pos:start="1351:37" pos:end="1351:39">[<expr pos:start="1351:38" pos:end="1351:38"><literal type="number" pos:start="1351:38" pos:end="1351:38">1</literal></expr>]</index></name> <operator pos:start="1351:41" pos:end="1351:41">=</operator> <literal type="number" pos:start="1351:43" pos:end="1351:43">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="1353:17" pos:end="1353:44"><expr pos:start="1353:17" pos:end="1353:43"><name pos:start="1353:17" pos:end="1353:39"><name pos:start="1353:17" pos:end="1353:23">old_act</name><operator pos:start="1353:24" pos:end="1353:25">-&gt;</operator><name pos:start="1353:26" pos:end="1353:32">sa_mask</name><operator pos:start="1353:33" pos:end="1353:33">.</operator><name pos:start="1353:34" pos:end="1353:36">sig</name><index pos:start="1353:37" pos:end="1353:39">[<expr pos:start="1353:38" pos:end="1353:38"><literal type="number" pos:start="1353:38" pos:end="1353:38">2</literal></expr>]</index></name> <operator pos:start="1353:41" pos:end="1353:41">=</operator> <literal type="number" pos:start="1353:43" pos:end="1353:43">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="1355:17" pos:end="1355:44"><expr pos:start="1355:17" pos:end="1355:43"><name pos:start="1355:17" pos:end="1355:39"><name pos:start="1355:17" pos:end="1355:23">old_act</name><operator pos:start="1355:24" pos:end="1355:25">-&gt;</operator><name pos:start="1355:26" pos:end="1355:32">sa_mask</name><operator pos:start="1355:33" pos:end="1355:33">.</operator><name pos:start="1355:34" pos:end="1355:36">sig</name><index pos:start="1355:37" pos:end="1355:39">[<expr pos:start="1355:38" pos:end="1355:38"><literal type="number" pos:start="1355:38" pos:end="1355:38">3</literal></expr>]</index></name> <operator pos:start="1355:41" pos:end="1355:41">=</operator> <literal type="number" pos:start="1355:43" pos:end="1355:43">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="1357:17" pos:end="1357:53"><expr pos:start="1357:17" pos:end="1357:52"><call pos:start="1357:17" pos:end="1357:52"><name pos:start="1357:17" pos:end="1357:34">unlock_user_struct</name><argument_list pos:start="1357:35" pos:end="1357:52">(<argument pos:start="1357:36" pos:end="1357:42"><expr pos:start="1357:36" pos:end="1357:42"><name pos:start="1357:36" pos:end="1357:42">old_act</name></expr></argument>, <argument pos:start="1357:45" pos:end="1357:48"><expr pos:start="1357:45" pos:end="1357:48"><name pos:start="1357:45" pos:end="1357:48">arg3</name></expr></argument>, <argument pos:start="1357:51" pos:end="1357:51"><expr pos:start="1357:51" pos:end="1357:51"><literal type="number" pos:start="1357:51" pos:end="1357:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="1361:1" pos:end="1361:6">#<cpp:directive pos:start="1361:2" pos:end="1361:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block>

        <break pos:start="1365:9" pos:end="1368:0">break;</break>

<cpp:endif pos:start="1367:1" pos:end="1367:6">#<cpp:directive pos:start="1367:2" pos:end="1367:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1369:5" pos:end="1369:32">case <expr pos:start="1369:10" pos:end="1369:31"><name pos:start="1369:10" pos:end="1369:31">TARGET_NR_rt_sigaction</name></expr>:</case>

        <block pos:start="1371:9" pos:end="1415:9">{<block_content pos:start="1373:13" pos:end="1413:50">

            <decl_stmt pos:start="1373:13" pos:end="1373:41"><decl pos:start="1373:13" pos:end="1373:40"><type pos:start="1373:13" pos:end="1373:37"><name pos:start="1373:13" pos:end="1373:35"><name pos:start="1373:13" pos:end="1373:18">struct</name> <name pos:start="1373:20" pos:end="1373:35">target_sigaction</name></name> <modifier pos:start="1373:37" pos:end="1373:37">*</modifier></type><name pos:start="1373:38" pos:end="1373:40">act</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1375:13" pos:end="1375:42"><decl pos:start="1375:13" pos:end="1375:41"><type pos:start="1375:13" pos:end="1375:37"><name pos:start="1375:13" pos:end="1375:35"><name pos:start="1375:13" pos:end="1375:18">struct</name> <name pos:start="1375:20" pos:end="1375:35">target_sigaction</name></name> <modifier pos:start="1375:37" pos:end="1375:37">*</modifier></type><name pos:start="1375:38" pos:end="1375:41">oact</name></decl>;</decl_stmt>



            <if_stmt pos:start="1379:13" pos:end="1387:27"><if pos:start="1379:13" pos:end="1385:13">if <condition pos:start="1379:16" pos:end="1379:21">(<expr pos:start="1379:17" pos:end="1379:20"><name pos:start="1379:17" pos:end="1379:20">arg2</name></expr>)</condition> <block pos:start="1379:23" pos:end="1385:13">{<block_content pos:start="1381:17" pos:end="1383:32">

                <if_stmt pos:start="1381:17" pos:end="1383:32"><if pos:start="1381:17" pos:end="1383:32">if <condition pos:start="1381:20" pos:end="1381:65">(<expr pos:start="1381:21" pos:end="1381:64"><operator pos:start="1381:21" pos:end="1381:21">!</operator><call pos:start="1381:22" pos:end="1381:64"><name pos:start="1381:22" pos:end="1381:37">lock_user_struct</name><argument_list pos:start="1381:38" pos:end="1381:64">(<argument pos:start="1381:39" pos:end="1381:49"><expr pos:start="1381:39" pos:end="1381:49"><name pos:start="1381:39" pos:end="1381:49">VERIFY_READ</name></expr></argument>, <argument pos:start="1381:52" pos:end="1381:54"><expr pos:start="1381:52" pos:end="1381:54"><name pos:start="1381:52" pos:end="1381:54">act</name></expr></argument>, <argument pos:start="1381:57" pos:end="1381:60"><expr pos:start="1381:57" pos:end="1381:60"><name pos:start="1381:57" pos:end="1381:60">arg2</name></expr></argument>, <argument pos:start="1381:63" pos:end="1381:63"><expr pos:start="1381:63" pos:end="1381:63"><literal type="number" pos:start="1381:63" pos:end="1381:63">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1383:21" pos:end="1383:32"><block_content pos:start="1383:21" pos:end="1383:32">

                    <goto pos:start="1383:21" pos:end="1383:32">goto <name pos:start="1383:26" pos:end="1383:31">efault</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="1385:15" pos:end="1387:27">else<block type="pseudo" pos:start="1387:17" pos:end="1387:27"><block_content pos:start="1387:17" pos:end="1387:27">

                <expr_stmt pos:start="1387:17" pos:end="1387:27"><expr pos:start="1387:17" pos:end="1387:26"><name pos:start="1387:17" pos:end="1387:19">act</name> <operator pos:start="1387:21" pos:end="1387:21">=</operator> <name pos:start="1387:23" pos:end="1387:26">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="1389:13" pos:end="1401:28"><if pos:start="1389:13" pos:end="1399:13">if <condition pos:start="1389:16" pos:end="1389:21">(<expr pos:start="1389:17" pos:end="1389:20"><name pos:start="1389:17" pos:end="1389:20">arg3</name></expr>)</condition> <block pos:start="1389:23" pos:end="1399:13">{<block_content pos:start="1391:17" pos:end="1397:17">

                <if_stmt pos:start="1391:17" pos:end="1397:17"><if pos:start="1391:17" pos:end="1397:17">if <condition pos:start="1391:20" pos:end="1391:67">(<expr pos:start="1391:21" pos:end="1391:66"><operator pos:start="1391:21" pos:end="1391:21">!</operator><call pos:start="1391:22" pos:end="1391:66"><name pos:start="1391:22" pos:end="1391:37">lock_user_struct</name><argument_list pos:start="1391:38" pos:end="1391:66">(<argument pos:start="1391:39" pos:end="1391:50"><expr pos:start="1391:39" pos:end="1391:50"><name pos:start="1391:39" pos:end="1391:50">VERIFY_WRITE</name></expr></argument>, <argument pos:start="1391:53" pos:end="1391:56"><expr pos:start="1391:53" pos:end="1391:56"><name pos:start="1391:53" pos:end="1391:56">oact</name></expr></argument>, <argument pos:start="1391:59" pos:end="1391:62"><expr pos:start="1391:59" pos:end="1391:62"><name pos:start="1391:59" pos:end="1391:62">arg3</name></expr></argument>, <argument pos:start="1391:65" pos:end="1391:65"><expr pos:start="1391:65" pos:end="1391:65"><literal type="number" pos:start="1391:65" pos:end="1391:65">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1391:69" pos:end="1397:17">{<block_content pos:start="1393:21" pos:end="1395:43">

                    <expr_stmt pos:start="1393:21" pos:end="1393:41"><expr pos:start="1393:21" pos:end="1393:40"><name pos:start="1393:21" pos:end="1393:23">ret</name> <operator pos:start="1393:25" pos:end="1393:25">=</operator> <operator pos:start="1393:27" pos:end="1393:27">-</operator><name pos:start="1393:28" pos:end="1393:40">TARGET_EFAULT</name></expr>;</expr_stmt>

                    <goto pos:start="1395:21" pos:end="1395:43">goto <name pos:start="1395:26" pos:end="1395:42">rt_sigaction_fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="1399:15" pos:end="1401:28">else<block type="pseudo" pos:start="1401:17" pos:end="1401:28"><block_content pos:start="1401:17" pos:end="1401:28">

                <expr_stmt pos:start="1401:17" pos:end="1401:28"><expr pos:start="1401:17" pos:end="1401:27"><name pos:start="1401:17" pos:end="1401:20">oact</name> <operator pos:start="1401:22" pos:end="1401:22">=</operator> <name pos:start="1401:24" pos:end="1401:27">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="1403:13" pos:end="1403:59"><expr pos:start="1403:13" pos:end="1403:58"><name pos:start="1403:13" pos:end="1403:15">ret</name> <operator pos:start="1403:17" pos:end="1403:17">=</operator> <call pos:start="1403:19" pos:end="1403:58"><name pos:start="1403:19" pos:end="1403:27">get_errno</name><argument_list pos:start="1403:28" pos:end="1403:58">(<argument pos:start="1403:29" pos:end="1403:57"><expr pos:start="1403:29" pos:end="1403:57"><call pos:start="1403:29" pos:end="1403:57"><name pos:start="1403:29" pos:end="1403:40">do_sigaction</name><argument_list pos:start="1403:41" pos:end="1403:57">(<argument pos:start="1403:42" pos:end="1403:45"><expr pos:start="1403:42" pos:end="1403:45"><name pos:start="1403:42" pos:end="1403:45">arg1</name></expr></argument>, <argument pos:start="1403:48" pos:end="1403:50"><expr pos:start="1403:48" pos:end="1403:50"><name pos:start="1403:48" pos:end="1403:50">act</name></expr></argument>, <argument pos:start="1403:53" pos:end="1403:56"><expr pos:start="1403:53" pos:end="1403:56"><name pos:start="1403:53" pos:end="1403:56">oact</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<label pos:start="1405:9" pos:end="1405:26"><name pos:start="1405:9" pos:end="1405:25">rt_sigaction_fail</name>:</label>

            <if_stmt pos:start="1407:13" pos:end="1409:49"><if pos:start="1407:13" pos:end="1409:49">if <condition pos:start="1407:16" pos:end="1407:20">(<expr pos:start="1407:17" pos:end="1407:19"><name pos:start="1407:17" pos:end="1407:19">act</name></expr>)</condition><block type="pseudo" pos:start="1409:17" pos:end="1409:49"><block_content pos:start="1409:17" pos:end="1409:49">

                <expr_stmt pos:start="1409:17" pos:end="1409:49"><expr pos:start="1409:17" pos:end="1409:48"><call pos:start="1409:17" pos:end="1409:48"><name pos:start="1409:17" pos:end="1409:34">unlock_user_struct</name><argument_list pos:start="1409:35" pos:end="1409:48">(<argument pos:start="1409:36" pos:end="1409:38"><expr pos:start="1409:36" pos:end="1409:38"><name pos:start="1409:36" pos:end="1409:38">act</name></expr></argument>, <argument pos:start="1409:41" pos:end="1409:44"><expr pos:start="1409:41" pos:end="1409:44"><name pos:start="1409:41" pos:end="1409:44">arg2</name></expr></argument>, <argument pos:start="1409:47" pos:end="1409:47"><expr pos:start="1409:47" pos:end="1409:47"><literal type="number" pos:start="1409:47" pos:end="1409:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="1411:13" pos:end="1413:50"><if pos:start="1411:13" pos:end="1413:50">if <condition pos:start="1411:16" pos:end="1411:21">(<expr pos:start="1411:17" pos:end="1411:20"><name pos:start="1411:17" pos:end="1411:20">oact</name></expr>)</condition><block type="pseudo" pos:start="1413:17" pos:end="1413:50"><block_content pos:start="1413:17" pos:end="1413:50">

                <expr_stmt pos:start="1413:17" pos:end="1413:50"><expr pos:start="1413:17" pos:end="1413:49"><call pos:start="1413:17" pos:end="1413:49"><name pos:start="1413:17" pos:end="1413:34">unlock_user_struct</name><argument_list pos:start="1413:35" pos:end="1413:49">(<argument pos:start="1413:36" pos:end="1413:39"><expr pos:start="1413:36" pos:end="1413:39"><name pos:start="1413:36" pos:end="1413:39">oact</name></expr></argument>, <argument pos:start="1413:42" pos:end="1413:45"><expr pos:start="1413:42" pos:end="1413:45"><name pos:start="1413:42" pos:end="1413:45">arg3</name></expr></argument>, <argument pos:start="1413:48" pos:end="1413:48"><expr pos:start="1413:48" pos:end="1413:48"><literal type="number" pos:start="1413:48" pos:end="1413:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1417:9" pos:end="1420:0">break;</break>

<cpp:ifdef pos:start="1419:1" pos:end="1419:25">#<cpp:directive pos:start="1419:2" pos:end="1419:6">ifdef</cpp:directive> <name pos:start="1419:8" pos:end="1419:25">TARGET_NR_sgetmask</name></cpp:ifdef> <comment type="block" pos:start="1419:27" pos:end="1419:44">/* not on alpha */</comment>

    <case pos:start="1421:5" pos:end="1421:28">case <expr pos:start="1421:10" pos:end="1421:27"><name pos:start="1421:10" pos:end="1421:27">TARGET_NR_sgetmask</name></expr>:</case>

        <block pos:start="1423:9" pos:end="1435:9">{<block_content pos:start="1425:13" pos:end="1433:29">

            <decl_stmt pos:start="1425:13" pos:end="1425:29"><decl pos:start="1425:13" pos:end="1425:28"><type pos:start="1425:13" pos:end="1425:20"><name pos:start="1425:13" pos:end="1425:20">sigset_t</name></type> <name pos:start="1425:22" pos:end="1425:28">cur_set</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1427:13" pos:end="1427:33"><decl pos:start="1427:13" pos:end="1427:32"><type pos:start="1427:13" pos:end="1427:21"><name pos:start="1427:13" pos:end="1427:21">abi_ulong</name></type> <name pos:start="1427:23" pos:end="1427:32">target_set</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1429:13" pos:end="1429:43"><expr pos:start="1429:13" pos:end="1429:42"><call pos:start="1429:13" pos:end="1429:42"><name pos:start="1429:13" pos:end="1429:23">sigprocmask</name><argument_list pos:start="1429:24" pos:end="1429:42">(<argument pos:start="1429:25" pos:end="1429:25"><expr pos:start="1429:25" pos:end="1429:25"><literal type="number" pos:start="1429:25" pos:end="1429:25">0</literal></expr></argument>, <argument pos:start="1429:28" pos:end="1429:31"><expr pos:start="1429:28" pos:end="1429:31"><name pos:start="1429:28" pos:end="1429:31">NULL</name></expr></argument>, <argument pos:start="1429:34" pos:end="1429:41"><expr pos:start="1429:34" pos:end="1429:41"><operator pos:start="1429:34" pos:end="1429:34">&amp;</operator><name pos:start="1429:35" pos:end="1429:41">cur_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1431:13" pos:end="1431:61"><expr pos:start="1431:13" pos:end="1431:60"><call pos:start="1431:13" pos:end="1431:60"><name pos:start="1431:13" pos:end="1431:37">host_to_target_old_sigset</name><argument_list pos:start="1431:38" pos:end="1431:60">(<argument pos:start="1431:39" pos:end="1431:49"><expr pos:start="1431:39" pos:end="1431:49"><operator pos:start="1431:39" pos:end="1431:39">&amp;</operator><name pos:start="1431:40" pos:end="1431:49">target_set</name></expr></argument>, <argument pos:start="1431:52" pos:end="1431:59"><expr pos:start="1431:52" pos:end="1431:59"><operator pos:start="1431:52" pos:end="1431:52">&amp;</operator><name pos:start="1431:53" pos:end="1431:59">cur_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1433:13" pos:end="1433:29"><expr pos:start="1433:13" pos:end="1433:28"><name pos:start="1433:13" pos:end="1433:15">ret</name> <operator pos:start="1433:17" pos:end="1433:17">=</operator> <name pos:start="1433:19" pos:end="1433:28">target_set</name></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1437:9" pos:end="1442:0">break;</break>

<cpp:endif pos:start="1439:1" pos:end="1439:6">#<cpp:directive pos:start="1439:2" pos:end="1439:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1441:1" pos:end="1441:25">#<cpp:directive pos:start="1441:2" pos:end="1441:6">ifdef</cpp:directive> <name pos:start="1441:8" pos:end="1441:25">TARGET_NR_ssetmask</name></cpp:ifdef> <comment type="block" pos:start="1441:27" pos:end="1441:44">/* not on alpha */</comment>

    <case pos:start="1443:5" pos:end="1443:28">case <expr pos:start="1443:10" pos:end="1443:27"><name pos:start="1443:10" pos:end="1443:27">TARGET_NR_ssetmask</name></expr>:</case>

        <block pos:start="1445:9" pos:end="1463:9">{<block_content pos:start="1447:13" pos:end="1461:29">

            <decl_stmt pos:start="1447:13" pos:end="1447:40"><decl pos:start="1447:13" pos:end="1447:24"><type pos:start="1447:13" pos:end="1447:20"><name pos:start="1447:13" pos:end="1447:20">sigset_t</name></type> <name pos:start="1447:22" pos:end="1447:24">set</name></decl>, <decl pos:start="1447:27" pos:end="1447:30"><type ref="prev" pos:start="1447:13" pos:end="1447:20"/><name pos:start="1447:27" pos:end="1447:30">oset</name></decl>, <decl pos:start="1447:33" pos:end="1447:39"><type ref="prev" pos:start="1447:13" pos:end="1447:20"/><name pos:start="1447:33" pos:end="1447:39">cur_set</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1449:13" pos:end="1449:40"><decl pos:start="1449:13" pos:end="1449:39"><type pos:start="1449:13" pos:end="1449:21"><name pos:start="1449:13" pos:end="1449:21">abi_ulong</name></type> <name pos:start="1449:23" pos:end="1449:32">target_set</name> <init pos:start="1449:34" pos:end="1449:39">= <expr pos:start="1449:36" pos:end="1449:39"><name pos:start="1449:36" pos:end="1449:39">arg1</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="1451:13" pos:end="1451:43"><expr pos:start="1451:13" pos:end="1451:42"><call pos:start="1451:13" pos:end="1451:42"><name pos:start="1451:13" pos:end="1451:23">sigprocmask</name><argument_list pos:start="1451:24" pos:end="1451:42">(<argument pos:start="1451:25" pos:end="1451:25"><expr pos:start="1451:25" pos:end="1451:25"><literal type="number" pos:start="1451:25" pos:end="1451:25">0</literal></expr></argument>, <argument pos:start="1451:28" pos:end="1451:31"><expr pos:start="1451:28" pos:end="1451:31"><name pos:start="1451:28" pos:end="1451:31">NULL</name></expr></argument>, <argument pos:start="1451:34" pos:end="1451:41"><expr pos:start="1451:34" pos:end="1451:41"><operator pos:start="1451:34" pos:end="1451:34">&amp;</operator><name pos:start="1451:35" pos:end="1451:41">cur_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1453:13" pos:end="1453:57"><expr pos:start="1453:13" pos:end="1453:56"><call pos:start="1453:13" pos:end="1453:56"><name pos:start="1453:13" pos:end="1453:37">target_to_host_old_sigset</name><argument_list pos:start="1453:38" pos:end="1453:56">(<argument pos:start="1453:39" pos:end="1453:42"><expr pos:start="1453:39" pos:end="1453:42"><operator pos:start="1453:39" pos:end="1453:39">&amp;</operator><name pos:start="1453:40" pos:end="1453:42">set</name></expr></argument>, <argument pos:start="1453:45" pos:end="1453:55"><expr pos:start="1453:45" pos:end="1453:55"><operator pos:start="1453:45" pos:end="1453:45">&amp;</operator><name pos:start="1453:46" pos:end="1453:55">target_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1455:13" pos:end="1455:43"><expr pos:start="1455:13" pos:end="1455:42"><call pos:start="1455:13" pos:end="1455:42"><name pos:start="1455:13" pos:end="1455:20">sigorset</name><argument_list pos:start="1455:21" pos:end="1455:42">(<argument pos:start="1455:22" pos:end="1455:25"><expr pos:start="1455:22" pos:end="1455:25"><operator pos:start="1455:22" pos:end="1455:22">&amp;</operator><name pos:start="1455:23" pos:end="1455:25">set</name></expr></argument>, <argument pos:start="1455:28" pos:end="1455:31"><expr pos:start="1455:28" pos:end="1455:31"><operator pos:start="1455:28" pos:end="1455:28">&amp;</operator><name pos:start="1455:29" pos:end="1455:31">set</name></expr></argument>, <argument pos:start="1455:34" pos:end="1455:41"><expr pos:start="1455:34" pos:end="1455:41"><operator pos:start="1455:34" pos:end="1455:34">&amp;</operator><name pos:start="1455:35" pos:end="1455:41">cur_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1457:13" pos:end="1457:50"><expr pos:start="1457:13" pos:end="1457:49"><call pos:start="1457:13" pos:end="1457:49"><name pos:start="1457:13" pos:end="1457:23">sigprocmask</name><argument_list pos:start="1457:24" pos:end="1457:49">(<argument pos:start="1457:25" pos:end="1457:35"><expr pos:start="1457:25" pos:end="1457:35"><name pos:start="1457:25" pos:end="1457:35">SIG_SETMASK</name></expr></argument>, <argument pos:start="1457:38" pos:end="1457:41"><expr pos:start="1457:38" pos:end="1457:41"><operator pos:start="1457:38" pos:end="1457:38">&amp;</operator><name pos:start="1457:39" pos:end="1457:41">set</name></expr></argument>, <argument pos:start="1457:44" pos:end="1457:48"><expr pos:start="1457:44" pos:end="1457:48"><operator pos:start="1457:44" pos:end="1457:44">&amp;</operator><name pos:start="1457:45" pos:end="1457:48">oset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1459:13" pos:end="1459:58"><expr pos:start="1459:13" pos:end="1459:57"><call pos:start="1459:13" pos:end="1459:57"><name pos:start="1459:13" pos:end="1459:37">host_to_target_old_sigset</name><argument_list pos:start="1459:38" pos:end="1459:57">(<argument pos:start="1459:39" pos:end="1459:49"><expr pos:start="1459:39" pos:end="1459:49"><operator pos:start="1459:39" pos:end="1459:39">&amp;</operator><name pos:start="1459:40" pos:end="1459:49">target_set</name></expr></argument>, <argument pos:start="1459:52" pos:end="1459:56"><expr pos:start="1459:52" pos:end="1459:56"><operator pos:start="1459:52" pos:end="1459:52">&amp;</operator><name pos:start="1459:53" pos:end="1459:56">oset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1461:13" pos:end="1461:29"><expr pos:start="1461:13" pos:end="1461:28"><name pos:start="1461:13" pos:end="1461:15">ret</name> <operator pos:start="1461:17" pos:end="1461:17">=</operator> <name pos:start="1461:19" pos:end="1461:28">target_set</name></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1465:9" pos:end="1470:0">break;</break>

<cpp:endif pos:start="1467:1" pos:end="1467:6">#<cpp:directive pos:start="1467:2" pos:end="1467:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="1469:1" pos:end="1469:28">#<cpp:directive pos:start="1469:2" pos:end="1469:6">ifdef</cpp:directive> <name pos:start="1469:8" pos:end="1469:28">TARGET_NR_sigprocmask</name></cpp:ifdef>

    <case pos:start="1471:5" pos:end="1471:31">case <expr pos:start="1471:10" pos:end="1471:30"><name pos:start="1471:10" pos:end="1471:30">TARGET_NR_sigprocmask</name></expr>:</case>

        <block pos:start="1473:9" pos:end="1543:9">{<block_content pos:start="1475:13" pos:end="1541:13">

            <decl_stmt pos:start="1475:13" pos:end="1475:27"><decl pos:start="1475:13" pos:end="1475:26"><type pos:start="1475:13" pos:end="1475:15"><name pos:start="1475:13" pos:end="1475:15">int</name></type> <name pos:start="1475:17" pos:end="1475:19">how</name> <init pos:start="1475:21" pos:end="1475:26">= <expr pos:start="1475:23" pos:end="1475:26"><name pos:start="1475:23" pos:end="1475:26">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1477:13" pos:end="1477:43"><decl pos:start="1477:13" pos:end="1477:24"><type pos:start="1477:13" pos:end="1477:20"><name pos:start="1477:13" pos:end="1477:20">sigset_t</name></type> <name pos:start="1477:22" pos:end="1477:24">set</name></decl>, <decl pos:start="1477:27" pos:end="1477:32"><type ref="prev" pos:start="1477:13" pos:end="1477:20"/><name pos:start="1477:27" pos:end="1477:32">oldset</name></decl>, <decl pos:start="1477:35" pos:end="1477:42"><type ref="prev" pos:start="1477:13" pos:end="1477:20"><modifier pos:start="1477:35" pos:end="1477:35">*</modifier></type><name pos:start="1477:36" pos:end="1477:42">set_ptr</name></decl>;</decl_stmt>



            <if_stmt pos:start="1481:13" pos:end="1527:13"><if pos:start="1481:13" pos:end="1521:13">if <condition pos:start="1481:16" pos:end="1481:21">(<expr pos:start="1481:17" pos:end="1481:20"><name pos:start="1481:17" pos:end="1481:20">arg2</name></expr>)</condition> <block pos:start="1481:23" pos:end="1521:13">{<block_content pos:start="1483:17" pos:end="1519:31">

                <switch pos:start="1483:17" pos:end="1509:17">switch<condition pos:start="1483:23" pos:end="1483:27">(<expr pos:start="1483:24" pos:end="1483:26"><name pos:start="1483:24" pos:end="1483:26">how</name></expr>)</condition> <block pos:start="1483:29" pos:end="1509:17">{<block_content pos:start="1485:17" pos:end="1507:30">

                <case pos:start="1485:17" pos:end="1485:38">case <expr pos:start="1485:22" pos:end="1485:37"><name pos:start="1485:22" pos:end="1485:37">TARGET_SIG_BLOCK</name></expr>:</case>

                    <expr_stmt pos:start="1487:21" pos:end="1487:36"><expr pos:start="1487:21" pos:end="1487:35"><name pos:start="1487:21" pos:end="1487:23">how</name> <operator pos:start="1487:25" pos:end="1487:25">=</operator> <name pos:start="1487:27" pos:end="1487:35">SIG_BLOCK</name></expr>;</expr_stmt>

                    <break pos:start="1489:21" pos:end="1489:26">break;</break>

                <case pos:start="1491:17" pos:end="1491:40">case <expr pos:start="1491:22" pos:end="1491:39"><name pos:start="1491:22" pos:end="1491:39">TARGET_SIG_UNBLOCK</name></expr>:</case>

                    <expr_stmt pos:start="1493:21" pos:end="1493:38"><expr pos:start="1493:21" pos:end="1493:37"><name pos:start="1493:21" pos:end="1493:23">how</name> <operator pos:start="1493:25" pos:end="1493:25">=</operator> <name pos:start="1493:27" pos:end="1493:37">SIG_UNBLOCK</name></expr>;</expr_stmt>

                    <break pos:start="1495:21" pos:end="1495:26">break;</break>

                <case pos:start="1497:17" pos:end="1497:40">case <expr pos:start="1497:22" pos:end="1497:39"><name pos:start="1497:22" pos:end="1497:39">TARGET_SIG_SETMASK</name></expr>:</case>

                    <expr_stmt pos:start="1499:21" pos:end="1499:38"><expr pos:start="1499:21" pos:end="1499:37"><name pos:start="1499:21" pos:end="1499:23">how</name> <operator pos:start="1499:25" pos:end="1499:25">=</operator> <name pos:start="1499:27" pos:end="1499:37">SIG_SETMASK</name></expr>;</expr_stmt>

                    <break pos:start="1501:21" pos:end="1501:26">break;</break>

                <default pos:start="1503:17" pos:end="1503:24">default:</default>

                    <expr_stmt pos:start="1505:21" pos:end="1505:41"><expr pos:start="1505:21" pos:end="1505:40"><name pos:start="1505:21" pos:end="1505:23">ret</name> <operator pos:start="1505:25" pos:end="1505:25">=</operator> <operator pos:start="1505:27" pos:end="1505:27">-</operator><name pos:start="1505:28" pos:end="1505:40">TARGET_EINVAL</name></expr>;</expr_stmt>

                    <goto pos:start="1507:21" pos:end="1507:30">goto <name pos:start="1507:26" pos:end="1507:29">fail</name>;</goto>

                </block_content>}</block></switch>

                <if_stmt pos:start="1511:17" pos:end="1513:32"><if pos:start="1511:17" pos:end="1513:32">if <condition pos:start="1511:20" pos:end="1511:84">(<expr pos:start="1511:21" pos:end="1511:83"><operator pos:start="1511:21" pos:end="1511:21">!</operator><operator pos:start="1511:22" pos:end="1511:22">(</operator><name pos:start="1511:23" pos:end="1511:23">p</name> <operator pos:start="1511:25" pos:end="1511:25">=</operator> <call pos:start="1511:27" pos:end="1511:82"><name pos:start="1511:27" pos:end="1511:35">lock_user</name><argument_list pos:start="1511:36" pos:end="1511:82">(<argument pos:start="1511:37" pos:end="1511:47"><expr pos:start="1511:37" pos:end="1511:47"><name pos:start="1511:37" pos:end="1511:47">VERIFY_READ</name></expr></argument>, <argument pos:start="1511:50" pos:end="1511:53"><expr pos:start="1511:50" pos:end="1511:53"><name pos:start="1511:50" pos:end="1511:53">arg2</name></expr></argument>, <argument pos:start="1511:56" pos:end="1511:78"><expr pos:start="1511:56" pos:end="1511:78"><sizeof pos:start="1511:56" pos:end="1511:78">sizeof<argument_list pos:start="1511:62" pos:end="1511:78">(<argument pos:start="1511:63" pos:end="1511:77"><expr pos:start="1511:63" pos:end="1511:77"><name pos:start="1511:63" pos:end="1511:77">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1511:81" pos:end="1511:81"><expr pos:start="1511:81" pos:end="1511:81"><literal type="number" pos:start="1511:81" pos:end="1511:81">1</literal></expr></argument>)</argument_list></call><operator pos:start="1511:83" pos:end="1511:83">)</operator></expr>)</condition><block type="pseudo" pos:start="1513:21" pos:end="1513:32"><block_content pos:start="1513:21" pos:end="1513:32">

                    <goto pos:start="1513:21" pos:end="1513:32">goto <name pos:start="1513:26" pos:end="1513:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1515:17" pos:end="1515:51"><expr pos:start="1515:17" pos:end="1515:50"><call pos:start="1515:17" pos:end="1515:50"><name pos:start="1515:17" pos:end="1515:41">target_to_host_old_sigset</name><argument_list pos:start="1515:42" pos:end="1515:50">(<argument pos:start="1515:43" pos:end="1515:46"><expr pos:start="1515:43" pos:end="1515:46"><operator pos:start="1515:43" pos:end="1515:43">&amp;</operator><name pos:start="1515:44" pos:end="1515:46">set</name></expr></argument>, <argument pos:start="1515:49" pos:end="1515:49"><expr pos:start="1515:49" pos:end="1515:49"><name pos:start="1515:49" pos:end="1515:49">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1517:17" pos:end="1517:40"><expr pos:start="1517:17" pos:end="1517:39"><call pos:start="1517:17" pos:end="1517:39"><name pos:start="1517:17" pos:end="1517:27">unlock_user</name><argument_list pos:start="1517:28" pos:end="1517:39">(<argument pos:start="1517:29" pos:end="1517:29"><expr pos:start="1517:29" pos:end="1517:29"><name pos:start="1517:29" pos:end="1517:29">p</name></expr></argument>, <argument pos:start="1517:32" pos:end="1517:35"><expr pos:start="1517:32" pos:end="1517:35"><name pos:start="1517:32" pos:end="1517:35">arg2</name></expr></argument>, <argument pos:start="1517:38" pos:end="1517:38"><expr pos:start="1517:38" pos:end="1517:38"><literal type="number" pos:start="1517:38" pos:end="1517:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1519:17" pos:end="1519:31"><expr pos:start="1519:17" pos:end="1519:30"><name pos:start="1519:17" pos:end="1519:23">set_ptr</name> <operator pos:start="1519:25" pos:end="1519:25">=</operator> <operator pos:start="1519:27" pos:end="1519:27">&amp;</operator><name pos:start="1519:28" pos:end="1519:30">set</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1521:15" pos:end="1527:13">else <block pos:start="1521:20" pos:end="1527:13">{<block_content pos:start="1523:17" pos:end="1525:31">

                <expr_stmt pos:start="1523:17" pos:end="1523:24"><expr pos:start="1523:17" pos:end="1523:23"><name pos:start="1523:17" pos:end="1523:19">how</name> <operator pos:start="1523:21" pos:end="1523:21">=</operator> <literal type="number" pos:start="1523:23" pos:end="1523:23">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1525:17" pos:end="1525:31"><expr pos:start="1525:17" pos:end="1525:30"><name pos:start="1525:17" pos:end="1525:23">set_ptr</name> <operator pos:start="1525:25" pos:end="1525:25">=</operator> <name pos:start="1525:27" pos:end="1525:30">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1529:13" pos:end="1529:65"><expr pos:start="1529:13" pos:end="1529:64"><name pos:start="1529:13" pos:end="1529:15">ret</name> <operator pos:start="1529:17" pos:end="1529:17">=</operator> <call pos:start="1529:19" pos:end="1529:64"><name pos:start="1529:19" pos:end="1529:27">get_errno</name><argument_list pos:start="1529:28" pos:end="1529:64">(<argument pos:start="1529:29" pos:end="1529:63"><expr pos:start="1529:29" pos:end="1529:63"><call pos:start="1529:29" pos:end="1529:63"><name pos:start="1529:29" pos:end="1529:39">sigprocmask</name><argument_list pos:start="1529:40" pos:end="1529:63">(<argument pos:start="1529:41" pos:end="1529:44"><expr pos:start="1529:41" pos:end="1529:44"><name pos:start="1529:41" pos:end="1529:44">arg1</name></expr></argument>, <argument pos:start="1529:47" pos:end="1529:53"><expr pos:start="1529:47" pos:end="1529:53"><name pos:start="1529:47" pos:end="1529:53">set_ptr</name></expr></argument>, <argument pos:start="1529:56" pos:end="1529:62"><expr pos:start="1529:56" pos:end="1529:62"><operator pos:start="1529:56" pos:end="1529:56">&amp;</operator><name pos:start="1529:57" pos:end="1529:62">oldset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1531:13" pos:end="1541:13"><if pos:start="1531:13" pos:end="1541:13">if <condition pos:start="1531:16" pos:end="1531:39">(<expr pos:start="1531:17" pos:end="1531:38"><operator pos:start="1531:17" pos:end="1531:17">!</operator><call pos:start="1531:18" pos:end="1531:30"><name pos:start="1531:18" pos:end="1531:25">is_error</name><argument_list pos:start="1531:26" pos:end="1531:30">(<argument pos:start="1531:27" pos:end="1531:29"><expr pos:start="1531:27" pos:end="1531:29"><name pos:start="1531:27" pos:end="1531:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="1531:32" pos:end="1531:33">&amp;&amp;</operator> <name pos:start="1531:35" pos:end="1531:38">arg3</name></expr>)</condition> <block pos:start="1531:41" pos:end="1541:13">{<block_content pos:start="1533:17" pos:end="1539:62">

                <if_stmt pos:start="1533:17" pos:end="1535:32"><if pos:start="1533:17" pos:end="1535:32">if <condition pos:start="1533:20" pos:end="1533:85">(<expr pos:start="1533:21" pos:end="1533:84"><operator pos:start="1533:21" pos:end="1533:21">!</operator><operator pos:start="1533:22" pos:end="1533:22">(</operator><name pos:start="1533:23" pos:end="1533:23">p</name> <operator pos:start="1533:25" pos:end="1533:25">=</operator> <call pos:start="1533:27" pos:end="1533:83"><name pos:start="1533:27" pos:end="1533:35">lock_user</name><argument_list pos:start="1533:36" pos:end="1533:83">(<argument pos:start="1533:37" pos:end="1533:48"><expr pos:start="1533:37" pos:end="1533:48"><name pos:start="1533:37" pos:end="1533:48">VERIFY_WRITE</name></expr></argument>, <argument pos:start="1533:51" pos:end="1533:54"><expr pos:start="1533:51" pos:end="1533:54"><name pos:start="1533:51" pos:end="1533:54">arg3</name></expr></argument>, <argument pos:start="1533:57" pos:end="1533:79"><expr pos:start="1533:57" pos:end="1533:79"><sizeof pos:start="1533:57" pos:end="1533:79">sizeof<argument_list pos:start="1533:63" pos:end="1533:79">(<argument pos:start="1533:64" pos:end="1533:78"><expr pos:start="1533:64" pos:end="1533:78"><name pos:start="1533:64" pos:end="1533:78">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1533:82" pos:end="1533:82"><expr pos:start="1533:82" pos:end="1533:82"><literal type="number" pos:start="1533:82" pos:end="1533:82">0</literal></expr></argument>)</argument_list></call><operator pos:start="1533:84" pos:end="1533:84">)</operator></expr>)</condition><block type="pseudo" pos:start="1535:21" pos:end="1535:32"><block_content pos:start="1535:21" pos:end="1535:32">

                    <goto pos:start="1535:21" pos:end="1535:32">goto <name pos:start="1535:26" pos:end="1535:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1537:17" pos:end="1537:54"><expr pos:start="1537:17" pos:end="1537:53"><call pos:start="1537:17" pos:end="1537:53"><name pos:start="1537:17" pos:end="1537:41">host_to_target_old_sigset</name><argument_list pos:start="1537:42" pos:end="1537:53">(<argument pos:start="1537:43" pos:end="1537:43"><expr pos:start="1537:43" pos:end="1537:43"><name pos:start="1537:43" pos:end="1537:43">p</name></expr></argument>, <argument pos:start="1537:46" pos:end="1537:52"><expr pos:start="1537:46" pos:end="1537:52"><operator pos:start="1537:46" pos:end="1537:46">&amp;</operator><name pos:start="1537:47" pos:end="1537:52">oldset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1539:17" pos:end="1539:62"><expr pos:start="1539:17" pos:end="1539:61"><call pos:start="1539:17" pos:end="1539:61"><name pos:start="1539:17" pos:end="1539:27">unlock_user</name><argument_list pos:start="1539:28" pos:end="1539:61">(<argument pos:start="1539:29" pos:end="1539:29"><expr pos:start="1539:29" pos:end="1539:29"><name pos:start="1539:29" pos:end="1539:29">p</name></expr></argument>, <argument pos:start="1539:32" pos:end="1539:35"><expr pos:start="1539:32" pos:end="1539:35"><name pos:start="1539:32" pos:end="1539:35">arg3</name></expr></argument>, <argument pos:start="1539:38" pos:end="1539:60"><expr pos:start="1539:38" pos:end="1539:60"><sizeof pos:start="1539:38" pos:end="1539:60">sizeof<argument_list pos:start="1539:44" pos:end="1539:60">(<argument pos:start="1539:45" pos:end="1539:59"><expr pos:start="1539:45" pos:end="1539:59"><name pos:start="1539:45" pos:end="1539:59">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1545:9" pos:end="1548:0">break;</break>

<cpp:endif pos:start="1547:1" pos:end="1547:6">#<cpp:directive pos:start="1547:2" pos:end="1547:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1549:5" pos:end="1549:34">case <expr pos:start="1549:10" pos:end="1549:33"><name pos:start="1549:10" pos:end="1549:33">TARGET_NR_rt_sigprocmask</name></expr>:</case>

        <block pos:start="1551:9" pos:end="1621:9">{<block_content pos:start="1553:13" pos:end="1619:13">

            <decl_stmt pos:start="1553:13" pos:end="1553:27"><decl pos:start="1553:13" pos:end="1553:26"><type pos:start="1553:13" pos:end="1553:15"><name pos:start="1553:13" pos:end="1553:15">int</name></type> <name pos:start="1553:17" pos:end="1553:19">how</name> <init pos:start="1553:21" pos:end="1553:26">= <expr pos:start="1553:23" pos:end="1553:26"><name pos:start="1553:23" pos:end="1553:26">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1555:13" pos:end="1555:43"><decl pos:start="1555:13" pos:end="1555:24"><type pos:start="1555:13" pos:end="1555:20"><name pos:start="1555:13" pos:end="1555:20">sigset_t</name></type> <name pos:start="1555:22" pos:end="1555:24">set</name></decl>, <decl pos:start="1555:27" pos:end="1555:32"><type ref="prev" pos:start="1555:13" pos:end="1555:20"/><name pos:start="1555:27" pos:end="1555:32">oldset</name></decl>, <decl pos:start="1555:35" pos:end="1555:42"><type ref="prev" pos:start="1555:13" pos:end="1555:20"><modifier pos:start="1555:35" pos:end="1555:35">*</modifier></type><name pos:start="1555:36" pos:end="1555:42">set_ptr</name></decl>;</decl_stmt>



            <if_stmt pos:start="1559:13" pos:end="1605:13"><if pos:start="1559:13" pos:end="1599:13">if <condition pos:start="1559:16" pos:end="1559:21">(<expr pos:start="1559:17" pos:end="1559:20"><name pos:start="1559:17" pos:end="1559:20">arg2</name></expr>)</condition> <block pos:start="1559:23" pos:end="1599:13">{<block_content pos:start="1561:17" pos:end="1597:31">

                <switch pos:start="1561:17" pos:end="1587:17">switch<condition pos:start="1561:23" pos:end="1561:27">(<expr pos:start="1561:24" pos:end="1561:26"><name pos:start="1561:24" pos:end="1561:26">how</name></expr>)</condition> <block pos:start="1561:29" pos:end="1587:17">{<block_content pos:start="1563:17" pos:end="1585:30">

                <case pos:start="1563:17" pos:end="1563:38">case <expr pos:start="1563:22" pos:end="1563:37"><name pos:start="1563:22" pos:end="1563:37">TARGET_SIG_BLOCK</name></expr>:</case>

                    <expr_stmt pos:start="1565:21" pos:end="1565:36"><expr pos:start="1565:21" pos:end="1565:35"><name pos:start="1565:21" pos:end="1565:23">how</name> <operator pos:start="1565:25" pos:end="1565:25">=</operator> <name pos:start="1565:27" pos:end="1565:35">SIG_BLOCK</name></expr>;</expr_stmt>

                    <break pos:start="1567:21" pos:end="1567:26">break;</break>

                <case pos:start="1569:17" pos:end="1569:40">case <expr pos:start="1569:22" pos:end="1569:39"><name pos:start="1569:22" pos:end="1569:39">TARGET_SIG_UNBLOCK</name></expr>:</case>

                    <expr_stmt pos:start="1571:21" pos:end="1571:38"><expr pos:start="1571:21" pos:end="1571:37"><name pos:start="1571:21" pos:end="1571:23">how</name> <operator pos:start="1571:25" pos:end="1571:25">=</operator> <name pos:start="1571:27" pos:end="1571:37">SIG_UNBLOCK</name></expr>;</expr_stmt>

                    <break pos:start="1573:21" pos:end="1573:26">break;</break>

                <case pos:start="1575:17" pos:end="1575:40">case <expr pos:start="1575:22" pos:end="1575:39"><name pos:start="1575:22" pos:end="1575:39">TARGET_SIG_SETMASK</name></expr>:</case>

                    <expr_stmt pos:start="1577:21" pos:end="1577:38"><expr pos:start="1577:21" pos:end="1577:37"><name pos:start="1577:21" pos:end="1577:23">how</name> <operator pos:start="1577:25" pos:end="1577:25">=</operator> <name pos:start="1577:27" pos:end="1577:37">SIG_SETMASK</name></expr>;</expr_stmt>

                    <break pos:start="1579:21" pos:end="1579:26">break;</break>

                <default pos:start="1581:17" pos:end="1581:24">default:</default>

                    <expr_stmt pos:start="1583:21" pos:end="1583:41"><expr pos:start="1583:21" pos:end="1583:40"><name pos:start="1583:21" pos:end="1583:23">ret</name> <operator pos:start="1583:25" pos:end="1583:25">=</operator> <operator pos:start="1583:27" pos:end="1583:27">-</operator><name pos:start="1583:28" pos:end="1583:40">TARGET_EINVAL</name></expr>;</expr_stmt>

                    <goto pos:start="1585:21" pos:end="1585:30">goto <name pos:start="1585:26" pos:end="1585:29">fail</name>;</goto>

                </block_content>}</block></switch>

                <if_stmt pos:start="1589:17" pos:end="1591:32"><if pos:start="1589:17" pos:end="1591:32">if <condition pos:start="1589:20" pos:end="1589:84">(<expr pos:start="1589:21" pos:end="1589:83"><operator pos:start="1589:21" pos:end="1589:21">!</operator><operator pos:start="1589:22" pos:end="1589:22">(</operator><name pos:start="1589:23" pos:end="1589:23">p</name> <operator pos:start="1589:25" pos:end="1589:25">=</operator> <call pos:start="1589:27" pos:end="1589:82"><name pos:start="1589:27" pos:end="1589:35">lock_user</name><argument_list pos:start="1589:36" pos:end="1589:82">(<argument pos:start="1589:37" pos:end="1589:47"><expr pos:start="1589:37" pos:end="1589:47"><name pos:start="1589:37" pos:end="1589:47">VERIFY_READ</name></expr></argument>, <argument pos:start="1589:50" pos:end="1589:53"><expr pos:start="1589:50" pos:end="1589:53"><name pos:start="1589:50" pos:end="1589:53">arg2</name></expr></argument>, <argument pos:start="1589:56" pos:end="1589:78"><expr pos:start="1589:56" pos:end="1589:78"><sizeof pos:start="1589:56" pos:end="1589:78">sizeof<argument_list pos:start="1589:62" pos:end="1589:78">(<argument pos:start="1589:63" pos:end="1589:77"><expr pos:start="1589:63" pos:end="1589:77"><name pos:start="1589:63" pos:end="1589:77">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1589:81" pos:end="1589:81"><expr pos:start="1589:81" pos:end="1589:81"><literal type="number" pos:start="1589:81" pos:end="1589:81">1</literal></expr></argument>)</argument_list></call><operator pos:start="1589:83" pos:end="1589:83">)</operator></expr>)</condition><block type="pseudo" pos:start="1591:21" pos:end="1591:32"><block_content pos:start="1591:21" pos:end="1591:32">

                    <goto pos:start="1591:21" pos:end="1591:32">goto <name pos:start="1591:26" pos:end="1591:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1593:17" pos:end="1593:47"><expr pos:start="1593:17" pos:end="1593:46"><call pos:start="1593:17" pos:end="1593:46"><name pos:start="1593:17" pos:end="1593:37">target_to_host_sigset</name><argument_list pos:start="1593:38" pos:end="1593:46">(<argument pos:start="1593:39" pos:end="1593:42"><expr pos:start="1593:39" pos:end="1593:42"><operator pos:start="1593:39" pos:end="1593:39">&amp;</operator><name pos:start="1593:40" pos:end="1593:42">set</name></expr></argument>, <argument pos:start="1593:45" pos:end="1593:45"><expr pos:start="1593:45" pos:end="1593:45"><name pos:start="1593:45" pos:end="1593:45">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1595:17" pos:end="1595:40"><expr pos:start="1595:17" pos:end="1595:39"><call pos:start="1595:17" pos:end="1595:39"><name pos:start="1595:17" pos:end="1595:27">unlock_user</name><argument_list pos:start="1595:28" pos:end="1595:39">(<argument pos:start="1595:29" pos:end="1595:29"><expr pos:start="1595:29" pos:end="1595:29"><name pos:start="1595:29" pos:end="1595:29">p</name></expr></argument>, <argument pos:start="1595:32" pos:end="1595:35"><expr pos:start="1595:32" pos:end="1595:35"><name pos:start="1595:32" pos:end="1595:35">arg2</name></expr></argument>, <argument pos:start="1595:38" pos:end="1595:38"><expr pos:start="1595:38" pos:end="1595:38"><literal type="number" pos:start="1595:38" pos:end="1595:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1597:17" pos:end="1597:31"><expr pos:start="1597:17" pos:end="1597:30"><name pos:start="1597:17" pos:end="1597:23">set_ptr</name> <operator pos:start="1597:25" pos:end="1597:25">=</operator> <operator pos:start="1597:27" pos:end="1597:27">&amp;</operator><name pos:start="1597:28" pos:end="1597:30">set</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1599:15" pos:end="1605:13">else <block pos:start="1599:20" pos:end="1605:13">{<block_content pos:start="1601:17" pos:end="1603:31">

                <expr_stmt pos:start="1601:17" pos:end="1601:24"><expr pos:start="1601:17" pos:end="1601:23"><name pos:start="1601:17" pos:end="1601:19">how</name> <operator pos:start="1601:21" pos:end="1601:21">=</operator> <literal type="number" pos:start="1601:23" pos:end="1601:23">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1603:17" pos:end="1603:31"><expr pos:start="1603:17" pos:end="1603:30"><name pos:start="1603:17" pos:end="1603:23">set_ptr</name> <operator pos:start="1603:25" pos:end="1603:25">=</operator> <name pos:start="1603:27" pos:end="1603:30">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1607:13" pos:end="1607:64"><expr pos:start="1607:13" pos:end="1607:63"><name pos:start="1607:13" pos:end="1607:15">ret</name> <operator pos:start="1607:17" pos:end="1607:17">=</operator> <call pos:start="1607:19" pos:end="1607:63"><name pos:start="1607:19" pos:end="1607:27">get_errno</name><argument_list pos:start="1607:28" pos:end="1607:63">(<argument pos:start="1607:29" pos:end="1607:62"><expr pos:start="1607:29" pos:end="1607:62"><call pos:start="1607:29" pos:end="1607:62"><name pos:start="1607:29" pos:end="1607:39">sigprocmask</name><argument_list pos:start="1607:40" pos:end="1607:62">(<argument pos:start="1607:41" pos:end="1607:43"><expr pos:start="1607:41" pos:end="1607:43"><name pos:start="1607:41" pos:end="1607:43">how</name></expr></argument>, <argument pos:start="1607:46" pos:end="1607:52"><expr pos:start="1607:46" pos:end="1607:52"><name pos:start="1607:46" pos:end="1607:52">set_ptr</name></expr></argument>, <argument pos:start="1607:55" pos:end="1607:61"><expr pos:start="1607:55" pos:end="1607:61"><operator pos:start="1607:55" pos:end="1607:55">&amp;</operator><name pos:start="1607:56" pos:end="1607:61">oldset</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1609:13" pos:end="1619:13"><if pos:start="1609:13" pos:end="1619:13">if <condition pos:start="1609:16" pos:end="1609:39">(<expr pos:start="1609:17" pos:end="1609:38"><operator pos:start="1609:17" pos:end="1609:17">!</operator><call pos:start="1609:18" pos:end="1609:30"><name pos:start="1609:18" pos:end="1609:25">is_error</name><argument_list pos:start="1609:26" pos:end="1609:30">(<argument pos:start="1609:27" pos:end="1609:29"><expr pos:start="1609:27" pos:end="1609:29"><name pos:start="1609:27" pos:end="1609:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="1609:32" pos:end="1609:33">&amp;&amp;</operator> <name pos:start="1609:35" pos:end="1609:38">arg3</name></expr>)</condition> <block pos:start="1609:41" pos:end="1619:13">{<block_content pos:start="1611:17" pos:end="1617:62">

                <if_stmt pos:start="1611:17" pos:end="1613:32"><if pos:start="1611:17" pos:end="1613:32">if <condition pos:start="1611:20" pos:end="1611:85">(<expr pos:start="1611:21" pos:end="1611:84"><operator pos:start="1611:21" pos:end="1611:21">!</operator><operator pos:start="1611:22" pos:end="1611:22">(</operator><name pos:start="1611:23" pos:end="1611:23">p</name> <operator pos:start="1611:25" pos:end="1611:25">=</operator> <call pos:start="1611:27" pos:end="1611:83"><name pos:start="1611:27" pos:end="1611:35">lock_user</name><argument_list pos:start="1611:36" pos:end="1611:83">(<argument pos:start="1611:37" pos:end="1611:48"><expr pos:start="1611:37" pos:end="1611:48"><name pos:start="1611:37" pos:end="1611:48">VERIFY_WRITE</name></expr></argument>, <argument pos:start="1611:51" pos:end="1611:54"><expr pos:start="1611:51" pos:end="1611:54"><name pos:start="1611:51" pos:end="1611:54">arg3</name></expr></argument>, <argument pos:start="1611:57" pos:end="1611:79"><expr pos:start="1611:57" pos:end="1611:79"><sizeof pos:start="1611:57" pos:end="1611:79">sizeof<argument_list pos:start="1611:63" pos:end="1611:79">(<argument pos:start="1611:64" pos:end="1611:78"><expr pos:start="1611:64" pos:end="1611:78"><name pos:start="1611:64" pos:end="1611:78">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1611:82" pos:end="1611:82"><expr pos:start="1611:82" pos:end="1611:82"><literal type="number" pos:start="1611:82" pos:end="1611:82">0</literal></expr></argument>)</argument_list></call><operator pos:start="1611:84" pos:end="1611:84">)</operator></expr>)</condition><block type="pseudo" pos:start="1613:21" pos:end="1613:32"><block_content pos:start="1613:21" pos:end="1613:32">

                    <goto pos:start="1613:21" pos:end="1613:32">goto <name pos:start="1613:26" pos:end="1613:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1615:17" pos:end="1615:50"><expr pos:start="1615:17" pos:end="1615:49"><call pos:start="1615:17" pos:end="1615:49"><name pos:start="1615:17" pos:end="1615:37">host_to_target_sigset</name><argument_list pos:start="1615:38" pos:end="1615:49">(<argument pos:start="1615:39" pos:end="1615:39"><expr pos:start="1615:39" pos:end="1615:39"><name pos:start="1615:39" pos:end="1615:39">p</name></expr></argument>, <argument pos:start="1615:42" pos:end="1615:48"><expr pos:start="1615:42" pos:end="1615:48"><operator pos:start="1615:42" pos:end="1615:42">&amp;</operator><name pos:start="1615:43" pos:end="1615:48">oldset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1617:17" pos:end="1617:62"><expr pos:start="1617:17" pos:end="1617:61"><call pos:start="1617:17" pos:end="1617:61"><name pos:start="1617:17" pos:end="1617:27">unlock_user</name><argument_list pos:start="1617:28" pos:end="1617:61">(<argument pos:start="1617:29" pos:end="1617:29"><expr pos:start="1617:29" pos:end="1617:29"><name pos:start="1617:29" pos:end="1617:29">p</name></expr></argument>, <argument pos:start="1617:32" pos:end="1617:35"><expr pos:start="1617:32" pos:end="1617:35"><name pos:start="1617:32" pos:end="1617:35">arg3</name></expr></argument>, <argument pos:start="1617:38" pos:end="1617:60"><expr pos:start="1617:38" pos:end="1617:60"><sizeof pos:start="1617:38" pos:end="1617:60">sizeof<argument_list pos:start="1617:44" pos:end="1617:60">(<argument pos:start="1617:45" pos:end="1617:59"><expr pos:start="1617:45" pos:end="1617:59"><name pos:start="1617:45" pos:end="1617:59">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1623:9" pos:end="1626:0">break;</break>

<cpp:ifdef pos:start="1625:1" pos:end="1625:27">#<cpp:directive pos:start="1625:2" pos:end="1625:6">ifdef</cpp:directive> <name pos:start="1625:8" pos:end="1625:27">TARGET_NR_sigpending</name></cpp:ifdef>

    <case pos:start="1627:5" pos:end="1627:30">case <expr pos:start="1627:10" pos:end="1627:29"><name pos:start="1627:10" pos:end="1627:29">TARGET_NR_sigpending</name></expr>:</case>

        <block pos:start="1629:9" pos:end="1647:9">{<block_content pos:start="1631:13" pos:end="1645:13">

            <decl_stmt pos:start="1631:13" pos:end="1631:25"><decl pos:start="1631:13" pos:end="1631:24"><type pos:start="1631:13" pos:end="1631:20"><name pos:start="1631:13" pos:end="1631:20">sigset_t</name></type> <name pos:start="1631:22" pos:end="1631:24">set</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1633:13" pos:end="1633:46"><expr pos:start="1633:13" pos:end="1633:45"><name pos:start="1633:13" pos:end="1633:15">ret</name> <operator pos:start="1633:17" pos:end="1633:17">=</operator> <call pos:start="1633:19" pos:end="1633:45"><name pos:start="1633:19" pos:end="1633:27">get_errno</name><argument_list pos:start="1633:28" pos:end="1633:45">(<argument pos:start="1633:29" pos:end="1633:44"><expr pos:start="1633:29" pos:end="1633:44"><call pos:start="1633:29" pos:end="1633:44"><name pos:start="1633:29" pos:end="1633:38">sigpending</name><argument_list pos:start="1633:39" pos:end="1633:44">(<argument pos:start="1633:40" pos:end="1633:43"><expr pos:start="1633:40" pos:end="1633:43"><operator pos:start="1633:40" pos:end="1633:40">&amp;</operator><name pos:start="1633:41" pos:end="1633:43">set</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1635:13" pos:end="1645:13"><if pos:start="1635:13" pos:end="1645:13">if <condition pos:start="1635:16" pos:end="1635:31">(<expr pos:start="1635:17" pos:end="1635:30"><operator pos:start="1635:17" pos:end="1635:17">!</operator><call pos:start="1635:18" pos:end="1635:30"><name pos:start="1635:18" pos:end="1635:25">is_error</name><argument_list pos:start="1635:26" pos:end="1635:30">(<argument pos:start="1635:27" pos:end="1635:29"><expr pos:start="1635:27" pos:end="1635:29"><name pos:start="1635:27" pos:end="1635:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1635:33" pos:end="1645:13">{<block_content pos:start="1637:17" pos:end="1643:62">

                <if_stmt pos:start="1637:17" pos:end="1639:32"><if pos:start="1637:17" pos:end="1639:32">if <condition pos:start="1637:20" pos:end="1637:85">(<expr pos:start="1637:21" pos:end="1637:84"><operator pos:start="1637:21" pos:end="1637:21">!</operator><operator pos:start="1637:22" pos:end="1637:22">(</operator><name pos:start="1637:23" pos:end="1637:23">p</name> <operator pos:start="1637:25" pos:end="1637:25">=</operator> <call pos:start="1637:27" pos:end="1637:83"><name pos:start="1637:27" pos:end="1637:35">lock_user</name><argument_list pos:start="1637:36" pos:end="1637:83">(<argument pos:start="1637:37" pos:end="1637:48"><expr pos:start="1637:37" pos:end="1637:48"><name pos:start="1637:37" pos:end="1637:48">VERIFY_WRITE</name></expr></argument>, <argument pos:start="1637:51" pos:end="1637:54"><expr pos:start="1637:51" pos:end="1637:54"><name pos:start="1637:51" pos:end="1637:54">arg1</name></expr></argument>, <argument pos:start="1637:57" pos:end="1637:79"><expr pos:start="1637:57" pos:end="1637:79"><sizeof pos:start="1637:57" pos:end="1637:79">sizeof<argument_list pos:start="1637:63" pos:end="1637:79">(<argument pos:start="1637:64" pos:end="1637:78"><expr pos:start="1637:64" pos:end="1637:78"><name pos:start="1637:64" pos:end="1637:78">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1637:82" pos:end="1637:82"><expr pos:start="1637:82" pos:end="1637:82"><literal type="number" pos:start="1637:82" pos:end="1637:82">0</literal></expr></argument>)</argument_list></call><operator pos:start="1637:84" pos:end="1637:84">)</operator></expr>)</condition><block type="pseudo" pos:start="1639:21" pos:end="1639:32"><block_content pos:start="1639:21" pos:end="1639:32">

                    <goto pos:start="1639:21" pos:end="1639:32">goto <name pos:start="1639:26" pos:end="1639:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1641:17" pos:end="1641:51"><expr pos:start="1641:17" pos:end="1641:50"><call pos:start="1641:17" pos:end="1641:50"><name pos:start="1641:17" pos:end="1641:41">host_to_target_old_sigset</name><argument_list pos:start="1641:42" pos:end="1641:50">(<argument pos:start="1641:43" pos:end="1641:43"><expr pos:start="1641:43" pos:end="1641:43"><name pos:start="1641:43" pos:end="1641:43">p</name></expr></argument>, <argument pos:start="1641:46" pos:end="1641:49"><expr pos:start="1641:46" pos:end="1641:49"><operator pos:start="1641:46" pos:end="1641:46">&amp;</operator><name pos:start="1641:47" pos:end="1641:49">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1643:17" pos:end="1643:62"><expr pos:start="1643:17" pos:end="1643:61"><call pos:start="1643:17" pos:end="1643:61"><name pos:start="1643:17" pos:end="1643:27">unlock_user</name><argument_list pos:start="1643:28" pos:end="1643:61">(<argument pos:start="1643:29" pos:end="1643:29"><expr pos:start="1643:29" pos:end="1643:29"><name pos:start="1643:29" pos:end="1643:29">p</name></expr></argument>, <argument pos:start="1643:32" pos:end="1643:35"><expr pos:start="1643:32" pos:end="1643:35"><name pos:start="1643:32" pos:end="1643:35">arg1</name></expr></argument>, <argument pos:start="1643:38" pos:end="1643:60"><expr pos:start="1643:38" pos:end="1643:60"><sizeof pos:start="1643:38" pos:end="1643:60">sizeof<argument_list pos:start="1643:44" pos:end="1643:60">(<argument pos:start="1643:45" pos:end="1643:59"><expr pos:start="1643:45" pos:end="1643:59"><name pos:start="1643:45" pos:end="1643:59">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1649:9" pos:end="1652:0">break;</break>

<cpp:endif pos:start="1651:1" pos:end="1651:6">#<cpp:directive pos:start="1651:2" pos:end="1651:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1653:5" pos:end="1653:33">case <expr pos:start="1653:10" pos:end="1653:32"><name pos:start="1653:10" pos:end="1653:32">TARGET_NR_rt_sigpending</name></expr>:</case>

        <block pos:start="1655:9" pos:end="1673:9">{<block_content pos:start="1657:13" pos:end="1671:13">

            <decl_stmt pos:start="1657:13" pos:end="1657:25"><decl pos:start="1657:13" pos:end="1657:24"><type pos:start="1657:13" pos:end="1657:20"><name pos:start="1657:13" pos:end="1657:20">sigset_t</name></type> <name pos:start="1657:22" pos:end="1657:24">set</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1659:13" pos:end="1659:46"><expr pos:start="1659:13" pos:end="1659:45"><name pos:start="1659:13" pos:end="1659:15">ret</name> <operator pos:start="1659:17" pos:end="1659:17">=</operator> <call pos:start="1659:19" pos:end="1659:45"><name pos:start="1659:19" pos:end="1659:27">get_errno</name><argument_list pos:start="1659:28" pos:end="1659:45">(<argument pos:start="1659:29" pos:end="1659:44"><expr pos:start="1659:29" pos:end="1659:44"><call pos:start="1659:29" pos:end="1659:44"><name pos:start="1659:29" pos:end="1659:38">sigpending</name><argument_list pos:start="1659:39" pos:end="1659:44">(<argument pos:start="1659:40" pos:end="1659:43"><expr pos:start="1659:40" pos:end="1659:43"><operator pos:start="1659:40" pos:end="1659:40">&amp;</operator><name pos:start="1659:41" pos:end="1659:43">set</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1661:13" pos:end="1671:13"><if pos:start="1661:13" pos:end="1671:13">if <condition pos:start="1661:16" pos:end="1661:31">(<expr pos:start="1661:17" pos:end="1661:30"><operator pos:start="1661:17" pos:end="1661:17">!</operator><call pos:start="1661:18" pos:end="1661:30"><name pos:start="1661:18" pos:end="1661:25">is_error</name><argument_list pos:start="1661:26" pos:end="1661:30">(<argument pos:start="1661:27" pos:end="1661:29"><expr pos:start="1661:27" pos:end="1661:29"><name pos:start="1661:27" pos:end="1661:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1661:33" pos:end="1671:13">{<block_content pos:start="1663:17" pos:end="1669:62">

                <if_stmt pos:start="1663:17" pos:end="1665:32"><if pos:start="1663:17" pos:end="1665:32">if <condition pos:start="1663:20" pos:end="1663:85">(<expr pos:start="1663:21" pos:end="1663:84"><operator pos:start="1663:21" pos:end="1663:21">!</operator><operator pos:start="1663:22" pos:end="1663:22">(</operator><name pos:start="1663:23" pos:end="1663:23">p</name> <operator pos:start="1663:25" pos:end="1663:25">=</operator> <call pos:start="1663:27" pos:end="1663:83"><name pos:start="1663:27" pos:end="1663:35">lock_user</name><argument_list pos:start="1663:36" pos:end="1663:83">(<argument pos:start="1663:37" pos:end="1663:48"><expr pos:start="1663:37" pos:end="1663:48"><name pos:start="1663:37" pos:end="1663:48">VERIFY_WRITE</name></expr></argument>, <argument pos:start="1663:51" pos:end="1663:54"><expr pos:start="1663:51" pos:end="1663:54"><name pos:start="1663:51" pos:end="1663:54">arg1</name></expr></argument>, <argument pos:start="1663:57" pos:end="1663:79"><expr pos:start="1663:57" pos:end="1663:79"><sizeof pos:start="1663:57" pos:end="1663:79">sizeof<argument_list pos:start="1663:63" pos:end="1663:79">(<argument pos:start="1663:64" pos:end="1663:78"><expr pos:start="1663:64" pos:end="1663:78"><name pos:start="1663:64" pos:end="1663:78">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1663:82" pos:end="1663:82"><expr pos:start="1663:82" pos:end="1663:82"><literal type="number" pos:start="1663:82" pos:end="1663:82">0</literal></expr></argument>)</argument_list></call><operator pos:start="1663:84" pos:end="1663:84">)</operator></expr>)</condition><block type="pseudo" pos:start="1665:21" pos:end="1665:32"><block_content pos:start="1665:21" pos:end="1665:32">

                    <goto pos:start="1665:21" pos:end="1665:32">goto <name pos:start="1665:26" pos:end="1665:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1667:17" pos:end="1667:47"><expr pos:start="1667:17" pos:end="1667:46"><call pos:start="1667:17" pos:end="1667:46"><name pos:start="1667:17" pos:end="1667:37">host_to_target_sigset</name><argument_list pos:start="1667:38" pos:end="1667:46">(<argument pos:start="1667:39" pos:end="1667:39"><expr pos:start="1667:39" pos:end="1667:39"><name pos:start="1667:39" pos:end="1667:39">p</name></expr></argument>, <argument pos:start="1667:42" pos:end="1667:45"><expr pos:start="1667:42" pos:end="1667:45"><operator pos:start="1667:42" pos:end="1667:42">&amp;</operator><name pos:start="1667:43" pos:end="1667:45">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1669:17" pos:end="1669:62"><expr pos:start="1669:17" pos:end="1669:61"><call pos:start="1669:17" pos:end="1669:61"><name pos:start="1669:17" pos:end="1669:27">unlock_user</name><argument_list pos:start="1669:28" pos:end="1669:61">(<argument pos:start="1669:29" pos:end="1669:29"><expr pos:start="1669:29" pos:end="1669:29"><name pos:start="1669:29" pos:end="1669:29">p</name></expr></argument>, <argument pos:start="1669:32" pos:end="1669:35"><expr pos:start="1669:32" pos:end="1669:35"><name pos:start="1669:32" pos:end="1669:35">arg1</name></expr></argument>, <argument pos:start="1669:38" pos:end="1669:60"><expr pos:start="1669:38" pos:end="1669:60"><sizeof pos:start="1669:38" pos:end="1669:60">sizeof<argument_list pos:start="1669:44" pos:end="1669:60">(<argument pos:start="1669:45" pos:end="1669:59"><expr pos:start="1669:45" pos:end="1669:59"><name pos:start="1669:45" pos:end="1669:59">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1675:9" pos:end="1678:0">break;</break>

<cpp:ifdef pos:start="1677:1" pos:end="1677:27">#<cpp:directive pos:start="1677:2" pos:end="1677:6">ifdef</cpp:directive> <name pos:start="1677:8" pos:end="1677:27">TARGET_NR_sigsuspend</name></cpp:ifdef>

    <case pos:start="1679:5" pos:end="1679:30">case <expr pos:start="1679:10" pos:end="1679:29"><name pos:start="1679:10" pos:end="1679:29">TARGET_NR_sigsuspend</name></expr>:</case>

        <block pos:start="1681:9" pos:end="1695:9">{<block_content pos:start="1683:13" pos:end="1693:46">

            <decl_stmt pos:start="1683:13" pos:end="1683:25"><decl pos:start="1683:13" pos:end="1683:24"><type pos:start="1683:13" pos:end="1683:20"><name pos:start="1683:13" pos:end="1683:20">sigset_t</name></type> <name pos:start="1683:22" pos:end="1683:24">set</name></decl>;</decl_stmt>

            <if_stmt pos:start="1685:13" pos:end="1687:28"><if pos:start="1685:13" pos:end="1687:28">if <condition pos:start="1685:16" pos:end="1685:80">(<expr pos:start="1685:17" pos:end="1685:79"><operator pos:start="1685:17" pos:end="1685:17">!</operator><operator pos:start="1685:18" pos:end="1685:18">(</operator><name pos:start="1685:19" pos:end="1685:19">p</name> <operator pos:start="1685:21" pos:end="1685:21">=</operator> <call pos:start="1685:23" pos:end="1685:78"><name pos:start="1685:23" pos:end="1685:31">lock_user</name><argument_list pos:start="1685:32" pos:end="1685:78">(<argument pos:start="1685:33" pos:end="1685:43"><expr pos:start="1685:33" pos:end="1685:43"><name pos:start="1685:33" pos:end="1685:43">VERIFY_READ</name></expr></argument>, <argument pos:start="1685:46" pos:end="1685:49"><expr pos:start="1685:46" pos:end="1685:49"><name pos:start="1685:46" pos:end="1685:49">arg1</name></expr></argument>, <argument pos:start="1685:52" pos:end="1685:74"><expr pos:start="1685:52" pos:end="1685:74"><sizeof pos:start="1685:52" pos:end="1685:74">sizeof<argument_list pos:start="1685:58" pos:end="1685:74">(<argument pos:start="1685:59" pos:end="1685:73"><expr pos:start="1685:59" pos:end="1685:73"><name pos:start="1685:59" pos:end="1685:73">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1685:77" pos:end="1685:77"><expr pos:start="1685:77" pos:end="1685:77"><literal type="number" pos:start="1685:77" pos:end="1685:77">1</literal></expr></argument>)</argument_list></call><operator pos:start="1685:79" pos:end="1685:79">)</operator></expr>)</condition><block type="pseudo" pos:start="1687:17" pos:end="1687:28"><block_content pos:start="1687:17" pos:end="1687:28">

                <goto pos:start="1687:17" pos:end="1687:28">goto <name pos:start="1687:22" pos:end="1687:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1689:13" pos:end="1689:47"><expr pos:start="1689:13" pos:end="1689:46"><call pos:start="1689:13" pos:end="1689:46"><name pos:start="1689:13" pos:end="1689:37">target_to_host_old_sigset</name><argument_list pos:start="1689:38" pos:end="1689:46">(<argument pos:start="1689:39" pos:end="1689:42"><expr pos:start="1689:39" pos:end="1689:42"><operator pos:start="1689:39" pos:end="1689:39">&amp;</operator><name pos:start="1689:40" pos:end="1689:42">set</name></expr></argument>, <argument pos:start="1689:45" pos:end="1689:45"><expr pos:start="1689:45" pos:end="1689:45"><name pos:start="1689:45" pos:end="1689:45">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1691:13" pos:end="1691:36"><expr pos:start="1691:13" pos:end="1691:35"><call pos:start="1691:13" pos:end="1691:35"><name pos:start="1691:13" pos:end="1691:23">unlock_user</name><argument_list pos:start="1691:24" pos:end="1691:35">(<argument pos:start="1691:25" pos:end="1691:25"><expr pos:start="1691:25" pos:end="1691:25"><name pos:start="1691:25" pos:end="1691:25">p</name></expr></argument>, <argument pos:start="1691:28" pos:end="1691:31"><expr pos:start="1691:28" pos:end="1691:31"><name pos:start="1691:28" pos:end="1691:31">arg1</name></expr></argument>, <argument pos:start="1691:34" pos:end="1691:34"><expr pos:start="1691:34" pos:end="1691:34"><literal type="number" pos:start="1691:34" pos:end="1691:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1693:13" pos:end="1693:46"><expr pos:start="1693:13" pos:end="1693:45"><name pos:start="1693:13" pos:end="1693:15">ret</name> <operator pos:start="1693:17" pos:end="1693:17">=</operator> <call pos:start="1693:19" pos:end="1693:45"><name pos:start="1693:19" pos:end="1693:27">get_errno</name><argument_list pos:start="1693:28" pos:end="1693:45">(<argument pos:start="1693:29" pos:end="1693:44"><expr pos:start="1693:29" pos:end="1693:44"><call pos:start="1693:29" pos:end="1693:44"><name pos:start="1693:29" pos:end="1693:38">sigsuspend</name><argument_list pos:start="1693:39" pos:end="1693:44">(<argument pos:start="1693:40" pos:end="1693:43"><expr pos:start="1693:40" pos:end="1693:43"><operator pos:start="1693:40" pos:end="1693:40">&amp;</operator><name pos:start="1693:41" pos:end="1693:43">set</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1697:9" pos:end="1700:0">break;</break>

<cpp:endif pos:start="1699:1" pos:end="1699:6">#<cpp:directive pos:start="1699:2" pos:end="1699:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1701:5" pos:end="1701:33">case <expr pos:start="1701:10" pos:end="1701:32"><name pos:start="1701:10" pos:end="1701:32">TARGET_NR_rt_sigsuspend</name></expr>:</case>

        <block pos:start="1703:9" pos:end="1717:9">{<block_content pos:start="1705:13" pos:end="1715:46">

            <decl_stmt pos:start="1705:13" pos:end="1705:25"><decl pos:start="1705:13" pos:end="1705:24"><type pos:start="1705:13" pos:end="1705:20"><name pos:start="1705:13" pos:end="1705:20">sigset_t</name></type> <name pos:start="1705:22" pos:end="1705:24">set</name></decl>;</decl_stmt>

            <if_stmt pos:start="1707:13" pos:end="1709:28"><if pos:start="1707:13" pos:end="1709:28">if <condition pos:start="1707:16" pos:end="1707:80">(<expr pos:start="1707:17" pos:end="1707:79"><operator pos:start="1707:17" pos:end="1707:17">!</operator><operator pos:start="1707:18" pos:end="1707:18">(</operator><name pos:start="1707:19" pos:end="1707:19">p</name> <operator pos:start="1707:21" pos:end="1707:21">=</operator> <call pos:start="1707:23" pos:end="1707:78"><name pos:start="1707:23" pos:end="1707:31">lock_user</name><argument_list pos:start="1707:32" pos:end="1707:78">(<argument pos:start="1707:33" pos:end="1707:43"><expr pos:start="1707:33" pos:end="1707:43"><name pos:start="1707:33" pos:end="1707:43">VERIFY_READ</name></expr></argument>, <argument pos:start="1707:46" pos:end="1707:49"><expr pos:start="1707:46" pos:end="1707:49"><name pos:start="1707:46" pos:end="1707:49">arg1</name></expr></argument>, <argument pos:start="1707:52" pos:end="1707:74"><expr pos:start="1707:52" pos:end="1707:74"><sizeof pos:start="1707:52" pos:end="1707:74">sizeof<argument_list pos:start="1707:58" pos:end="1707:74">(<argument pos:start="1707:59" pos:end="1707:73"><expr pos:start="1707:59" pos:end="1707:73"><name pos:start="1707:59" pos:end="1707:73">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1707:77" pos:end="1707:77"><expr pos:start="1707:77" pos:end="1707:77"><literal type="number" pos:start="1707:77" pos:end="1707:77">1</literal></expr></argument>)</argument_list></call><operator pos:start="1707:79" pos:end="1707:79">)</operator></expr>)</condition><block type="pseudo" pos:start="1709:17" pos:end="1709:28"><block_content pos:start="1709:17" pos:end="1709:28">

                <goto pos:start="1709:17" pos:end="1709:28">goto <name pos:start="1709:22" pos:end="1709:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1711:13" pos:end="1711:43"><expr pos:start="1711:13" pos:end="1711:42"><call pos:start="1711:13" pos:end="1711:42"><name pos:start="1711:13" pos:end="1711:33">target_to_host_sigset</name><argument_list pos:start="1711:34" pos:end="1711:42">(<argument pos:start="1711:35" pos:end="1711:38"><expr pos:start="1711:35" pos:end="1711:38"><operator pos:start="1711:35" pos:end="1711:35">&amp;</operator><name pos:start="1711:36" pos:end="1711:38">set</name></expr></argument>, <argument pos:start="1711:41" pos:end="1711:41"><expr pos:start="1711:41" pos:end="1711:41"><name pos:start="1711:41" pos:end="1711:41">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1713:13" pos:end="1713:36"><expr pos:start="1713:13" pos:end="1713:35"><call pos:start="1713:13" pos:end="1713:35"><name pos:start="1713:13" pos:end="1713:23">unlock_user</name><argument_list pos:start="1713:24" pos:end="1713:35">(<argument pos:start="1713:25" pos:end="1713:25"><expr pos:start="1713:25" pos:end="1713:25"><name pos:start="1713:25" pos:end="1713:25">p</name></expr></argument>, <argument pos:start="1713:28" pos:end="1713:31"><expr pos:start="1713:28" pos:end="1713:31"><name pos:start="1713:28" pos:end="1713:31">arg1</name></expr></argument>, <argument pos:start="1713:34" pos:end="1713:34"><expr pos:start="1713:34" pos:end="1713:34"><literal type="number" pos:start="1713:34" pos:end="1713:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1715:13" pos:end="1715:46"><expr pos:start="1715:13" pos:end="1715:45"><name pos:start="1715:13" pos:end="1715:15">ret</name> <operator pos:start="1715:17" pos:end="1715:17">=</operator> <call pos:start="1715:19" pos:end="1715:45"><name pos:start="1715:19" pos:end="1715:27">get_errno</name><argument_list pos:start="1715:28" pos:end="1715:45">(<argument pos:start="1715:29" pos:end="1715:44"><expr pos:start="1715:29" pos:end="1715:44"><call pos:start="1715:29" pos:end="1715:44"><name pos:start="1715:29" pos:end="1715:38">sigsuspend</name><argument_list pos:start="1715:39" pos:end="1715:44">(<argument pos:start="1715:40" pos:end="1715:43"><expr pos:start="1715:40" pos:end="1715:43"><operator pos:start="1715:40" pos:end="1715:40">&amp;</operator><name pos:start="1715:41" pos:end="1715:43">set</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1719:9" pos:end="1719:14">break;</break>

    <case pos:start="1721:5" pos:end="1721:35">case <expr pos:start="1721:10" pos:end="1721:34"><name pos:start="1721:10" pos:end="1721:34">TARGET_NR_rt_sigtimedwait</name></expr>:</case>

        <block pos:start="1723:9" pos:end="1767:9">{<block_content pos:start="1725:13" pos:end="1765:13">

            <decl_stmt pos:start="1725:13" pos:end="1725:25"><decl pos:start="1725:13" pos:end="1725:24"><type pos:start="1725:13" pos:end="1725:20"><name pos:start="1725:13" pos:end="1725:20">sigset_t</name></type> <name pos:start="1725:22" pos:end="1725:24">set</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1727:13" pos:end="1727:39"><decl pos:start="1727:13" pos:end="1727:31"><type pos:start="1727:13" pos:end="1727:27"><name pos:start="1727:13" pos:end="1727:27"><name pos:start="1727:13" pos:end="1727:18">struct</name> <name pos:start="1727:20" pos:end="1727:27">timespec</name></name></type> <name pos:start="1727:29" pos:end="1727:31">uts</name></decl>, <decl pos:start="1727:34" pos:end="1727:38"><type ref="prev" pos:start="1727:13" pos:end="1727:27"><modifier pos:start="1727:34" pos:end="1727:34">*</modifier></type><name pos:start="1727:35" pos:end="1727:38">puts</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1729:13" pos:end="1729:28"><decl pos:start="1729:13" pos:end="1729:27"><type pos:start="1729:13" pos:end="1729:21"><name pos:start="1729:13" pos:end="1729:21">siginfo_t</name></type> <name pos:start="1729:23" pos:end="1729:27">uinfo</name></decl>;</decl_stmt>



            <if_stmt pos:start="1733:13" pos:end="1735:28"><if pos:start="1733:13" pos:end="1735:28">if <condition pos:start="1733:16" pos:end="1733:80">(<expr pos:start="1733:17" pos:end="1733:79"><operator pos:start="1733:17" pos:end="1733:17">!</operator><operator pos:start="1733:18" pos:end="1733:18">(</operator><name pos:start="1733:19" pos:end="1733:19">p</name> <operator pos:start="1733:21" pos:end="1733:21">=</operator> <call pos:start="1733:23" pos:end="1733:78"><name pos:start="1733:23" pos:end="1733:31">lock_user</name><argument_list pos:start="1733:32" pos:end="1733:78">(<argument pos:start="1733:33" pos:end="1733:43"><expr pos:start="1733:33" pos:end="1733:43"><name pos:start="1733:33" pos:end="1733:43">VERIFY_READ</name></expr></argument>, <argument pos:start="1733:46" pos:end="1733:49"><expr pos:start="1733:46" pos:end="1733:49"><name pos:start="1733:46" pos:end="1733:49">arg1</name></expr></argument>, <argument pos:start="1733:52" pos:end="1733:74"><expr pos:start="1733:52" pos:end="1733:74"><sizeof pos:start="1733:52" pos:end="1733:74">sizeof<argument_list pos:start="1733:58" pos:end="1733:74">(<argument pos:start="1733:59" pos:end="1733:73"><expr pos:start="1733:59" pos:end="1733:73"><name pos:start="1733:59" pos:end="1733:73">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1733:77" pos:end="1733:77"><expr pos:start="1733:77" pos:end="1733:77"><literal type="number" pos:start="1733:77" pos:end="1733:77">1</literal></expr></argument>)</argument_list></call><operator pos:start="1733:79" pos:end="1733:79">)</operator></expr>)</condition><block type="pseudo" pos:start="1735:17" pos:end="1735:28"><block_content pos:start="1735:17" pos:end="1735:28">

                <goto pos:start="1735:17" pos:end="1735:28">goto <name pos:start="1735:22" pos:end="1735:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1737:13" pos:end="1737:43"><expr pos:start="1737:13" pos:end="1737:42"><call pos:start="1737:13" pos:end="1737:42"><name pos:start="1737:13" pos:end="1737:33">target_to_host_sigset</name><argument_list pos:start="1737:34" pos:end="1737:42">(<argument pos:start="1737:35" pos:end="1737:38"><expr pos:start="1737:35" pos:end="1737:38"><operator pos:start="1737:35" pos:end="1737:35">&amp;</operator><name pos:start="1737:36" pos:end="1737:38">set</name></expr></argument>, <argument pos:start="1737:41" pos:end="1737:41"><expr pos:start="1737:41" pos:end="1737:41"><name pos:start="1737:41" pos:end="1737:41">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1739:13" pos:end="1739:36"><expr pos:start="1739:13" pos:end="1739:35"><call pos:start="1739:13" pos:end="1739:35"><name pos:start="1739:13" pos:end="1739:23">unlock_user</name><argument_list pos:start="1739:24" pos:end="1739:35">(<argument pos:start="1739:25" pos:end="1739:25"><expr pos:start="1739:25" pos:end="1739:25"><name pos:start="1739:25" pos:end="1739:25">p</name></expr></argument>, <argument pos:start="1739:28" pos:end="1739:31"><expr pos:start="1739:28" pos:end="1739:31"><name pos:start="1739:28" pos:end="1739:31">arg1</name></expr></argument>, <argument pos:start="1739:34" pos:end="1739:34"><expr pos:start="1739:34" pos:end="1739:34"><literal type="number" pos:start="1739:34" pos:end="1739:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1741:13" pos:end="1751:13"><if pos:start="1741:13" pos:end="1747:13">if <condition pos:start="1741:16" pos:end="1741:21">(<expr pos:start="1741:17" pos:end="1741:20"><name pos:start="1741:17" pos:end="1741:20">arg3</name></expr>)</condition> <block pos:start="1741:23" pos:end="1747:13">{<block_content pos:start="1743:17" pos:end="1745:52">

                <expr_stmt pos:start="1743:17" pos:end="1743:28"><expr pos:start="1743:17" pos:end="1743:27"><name pos:start="1743:17" pos:end="1743:20">puts</name> <operator pos:start="1743:22" pos:end="1743:22">=</operator> <operator pos:start="1743:24" pos:end="1743:24">&amp;</operator><name pos:start="1743:25" pos:end="1743:27">uts</name></expr>;</expr_stmt>

                <expr_stmt pos:start="1745:17" pos:end="1745:52"><expr pos:start="1745:17" pos:end="1745:51"><call pos:start="1745:17" pos:end="1745:51"><name pos:start="1745:17" pos:end="1745:39">target_to_host_timespec</name><argument_list pos:start="1745:40" pos:end="1745:51">(<argument pos:start="1745:41" pos:end="1745:44"><expr pos:start="1745:41" pos:end="1745:44"><name pos:start="1745:41" pos:end="1745:44">puts</name></expr></argument>, <argument pos:start="1745:47" pos:end="1745:50"><expr pos:start="1745:47" pos:end="1745:50"><name pos:start="1745:47" pos:end="1745:50">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1747:15" pos:end="1751:13">else <block pos:start="1747:20" pos:end="1751:13">{<block_content pos:start="1749:17" pos:end="1749:28">

                <expr_stmt pos:start="1749:17" pos:end="1749:28"><expr pos:start="1749:17" pos:end="1749:27"><name pos:start="1749:17" pos:end="1749:20">puts</name> <operator pos:start="1749:22" pos:end="1749:22">=</operator> <name pos:start="1749:24" pos:end="1749:27">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1753:13" pos:end="1753:62"><expr pos:start="1753:13" pos:end="1753:61"><name pos:start="1753:13" pos:end="1753:15">ret</name> <operator pos:start="1753:17" pos:end="1753:17">=</operator> <call pos:start="1753:19" pos:end="1753:61"><name pos:start="1753:19" pos:end="1753:27">get_errno</name><argument_list pos:start="1753:28" pos:end="1753:61">(<argument pos:start="1753:29" pos:end="1753:60"><expr pos:start="1753:29" pos:end="1753:60"><call pos:start="1753:29" pos:end="1753:60"><name pos:start="1753:29" pos:end="1753:40">sigtimedwait</name><argument_list pos:start="1753:41" pos:end="1753:60">(<argument pos:start="1753:42" pos:end="1753:45"><expr pos:start="1753:42" pos:end="1753:45"><operator pos:start="1753:42" pos:end="1753:42">&amp;</operator><name pos:start="1753:43" pos:end="1753:45">set</name></expr></argument>, <argument pos:start="1753:48" pos:end="1753:53"><expr pos:start="1753:48" pos:end="1753:53"><operator pos:start="1753:48" pos:end="1753:48">&amp;</operator><name pos:start="1753:49" pos:end="1753:53">uinfo</name></expr></argument>, <argument pos:start="1753:56" pos:end="1753:59"><expr pos:start="1753:56" pos:end="1753:59"><name pos:start="1753:56" pos:end="1753:59">puts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1755:13" pos:end="1765:13"><if pos:start="1755:13" pos:end="1765:13">if <condition pos:start="1755:16" pos:end="1755:39">(<expr pos:start="1755:17" pos:end="1755:38"><operator pos:start="1755:17" pos:end="1755:17">!</operator><call pos:start="1755:18" pos:end="1755:30"><name pos:start="1755:18" pos:end="1755:25">is_error</name><argument_list pos:start="1755:26" pos:end="1755:30">(<argument pos:start="1755:27" pos:end="1755:29"><expr pos:start="1755:27" pos:end="1755:29"><name pos:start="1755:27" pos:end="1755:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="1755:32" pos:end="1755:33">&amp;&amp;</operator> <name pos:start="1755:35" pos:end="1755:38">arg2</name></expr>)</condition> <block pos:start="1755:41" pos:end="1765:13">{<block_content pos:start="1757:17" pos:end="1763:63">

                <if_stmt pos:start="1757:17" pos:end="1759:32"><if pos:start="1757:17" pos:end="1759:32">if <condition pos:start="1757:20" pos:end="1757:86">(<expr pos:start="1757:21" pos:end="1757:85"><operator pos:start="1757:21" pos:end="1757:21">!</operator><operator pos:start="1757:22" pos:end="1757:22">(</operator><name pos:start="1757:23" pos:end="1757:23">p</name> <operator pos:start="1757:25" pos:end="1757:25">=</operator> <call pos:start="1757:27" pos:end="1757:84"><name pos:start="1757:27" pos:end="1757:35">lock_user</name><argument_list pos:start="1757:36" pos:end="1757:84">(<argument pos:start="1757:37" pos:end="1757:48"><expr pos:start="1757:37" pos:end="1757:48"><name pos:start="1757:37" pos:end="1757:48">VERIFY_WRITE</name></expr></argument>, <argument pos:start="1757:51" pos:end="1757:54"><expr pos:start="1757:51" pos:end="1757:54"><name pos:start="1757:51" pos:end="1757:54">arg2</name></expr></argument>, <argument pos:start="1757:57" pos:end="1757:80"><expr pos:start="1757:57" pos:end="1757:80"><sizeof pos:start="1757:57" pos:end="1757:80">sizeof<argument_list pos:start="1757:63" pos:end="1757:80">(<argument pos:start="1757:64" pos:end="1757:79"><expr pos:start="1757:64" pos:end="1757:79"><name pos:start="1757:64" pos:end="1757:79">target_siginfo_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1757:83" pos:end="1757:83"><expr pos:start="1757:83" pos:end="1757:83"><literal type="number" pos:start="1757:83" pos:end="1757:83">0</literal></expr></argument>)</argument_list></call><operator pos:start="1757:85" pos:end="1757:85">)</operator></expr>)</condition><block type="pseudo" pos:start="1759:21" pos:end="1759:32"><block_content pos:start="1759:21" pos:end="1759:32">

                    <goto pos:start="1759:21" pos:end="1759:32">goto <name pos:start="1759:26" pos:end="1759:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1761:17" pos:end="1761:50"><expr pos:start="1761:17" pos:end="1761:49"><call pos:start="1761:17" pos:end="1761:49"><name pos:start="1761:17" pos:end="1761:38">host_to_target_siginfo</name><argument_list pos:start="1761:39" pos:end="1761:49">(<argument pos:start="1761:40" pos:end="1761:40"><expr pos:start="1761:40" pos:end="1761:40"><name pos:start="1761:40" pos:end="1761:40">p</name></expr></argument>, <argument pos:start="1761:43" pos:end="1761:48"><expr pos:start="1761:43" pos:end="1761:48"><operator pos:start="1761:43" pos:end="1761:43">&amp;</operator><name pos:start="1761:44" pos:end="1761:48">uinfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1763:17" pos:end="1763:63"><expr pos:start="1763:17" pos:end="1763:62"><call pos:start="1763:17" pos:end="1763:62"><name pos:start="1763:17" pos:end="1763:27">unlock_user</name><argument_list pos:start="1763:28" pos:end="1763:62">(<argument pos:start="1763:29" pos:end="1763:29"><expr pos:start="1763:29" pos:end="1763:29"><name pos:start="1763:29" pos:end="1763:29">p</name></expr></argument>, <argument pos:start="1763:32" pos:end="1763:35"><expr pos:start="1763:32" pos:end="1763:35"><name pos:start="1763:32" pos:end="1763:35">arg2</name></expr></argument>, <argument pos:start="1763:38" pos:end="1763:61"><expr pos:start="1763:38" pos:end="1763:61"><sizeof pos:start="1763:38" pos:end="1763:61">sizeof<argument_list pos:start="1763:44" pos:end="1763:61">(<argument pos:start="1763:45" pos:end="1763:60"><expr pos:start="1763:45" pos:end="1763:60"><name pos:start="1763:45" pos:end="1763:60">target_siginfo_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1769:9" pos:end="1769:14">break;</break>

    <case pos:start="1771:5" pos:end="1771:35">case <expr pos:start="1771:10" pos:end="1771:34"><name pos:start="1771:10" pos:end="1771:34">TARGET_NR_rt_sigqueueinfo</name></expr>:</case>

        <block pos:start="1773:9" pos:end="1787:9">{<block_content pos:start="1775:13" pos:end="1785:69">

            <decl_stmt pos:start="1775:13" pos:end="1775:28"><decl pos:start="1775:13" pos:end="1775:27"><type pos:start="1775:13" pos:end="1775:21"><name pos:start="1775:13" pos:end="1775:21">siginfo_t</name></type> <name pos:start="1775:23" pos:end="1775:27">uinfo</name></decl>;</decl_stmt>

            <if_stmt pos:start="1777:13" pos:end="1779:28"><if pos:start="1777:13" pos:end="1779:28">if <condition pos:start="1777:16" pos:end="1777:80">(<expr pos:start="1777:17" pos:end="1777:79"><operator pos:start="1777:17" pos:end="1777:17">!</operator><operator pos:start="1777:18" pos:end="1777:18">(</operator><name pos:start="1777:19" pos:end="1777:19">p</name> <operator pos:start="1777:21" pos:end="1777:21">=</operator> <call pos:start="1777:23" pos:end="1777:78"><name pos:start="1777:23" pos:end="1777:31">lock_user</name><argument_list pos:start="1777:32" pos:end="1777:78">(<argument pos:start="1777:33" pos:end="1777:43"><expr pos:start="1777:33" pos:end="1777:43"><name pos:start="1777:33" pos:end="1777:43">VERIFY_READ</name></expr></argument>, <argument pos:start="1777:46" pos:end="1777:49"><expr pos:start="1777:46" pos:end="1777:49"><name pos:start="1777:46" pos:end="1777:49">arg3</name></expr></argument>, <argument pos:start="1777:52" pos:end="1777:74"><expr pos:start="1777:52" pos:end="1777:74"><sizeof pos:start="1777:52" pos:end="1777:74">sizeof<argument_list pos:start="1777:58" pos:end="1777:74">(<argument pos:start="1777:59" pos:end="1777:73"><expr pos:start="1777:59" pos:end="1777:73"><name pos:start="1777:59" pos:end="1777:73">target_sigset_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="1777:77" pos:end="1777:77"><expr pos:start="1777:77" pos:end="1777:77"><literal type="number" pos:start="1777:77" pos:end="1777:77">1</literal></expr></argument>)</argument_list></call><operator pos:start="1777:79" pos:end="1777:79">)</operator></expr>)</condition><block type="pseudo" pos:start="1779:17" pos:end="1779:28"><block_content pos:start="1779:17" pos:end="1779:28">

                <goto pos:start="1779:17" pos:end="1779:28">goto <name pos:start="1779:22" pos:end="1779:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1781:13" pos:end="1781:46"><expr pos:start="1781:13" pos:end="1781:45"><call pos:start="1781:13" pos:end="1781:45"><name pos:start="1781:13" pos:end="1781:34">target_to_host_siginfo</name><argument_list pos:start="1781:35" pos:end="1781:45">(<argument pos:start="1781:36" pos:end="1781:41"><expr pos:start="1781:36" pos:end="1781:41"><operator pos:start="1781:36" pos:end="1781:36">&amp;</operator><name pos:start="1781:37" pos:end="1781:41">uinfo</name></expr></argument>, <argument pos:start="1781:44" pos:end="1781:44"><expr pos:start="1781:44" pos:end="1781:44"><name pos:start="1781:44" pos:end="1781:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1783:13" pos:end="1783:36"><expr pos:start="1783:13" pos:end="1783:35"><call pos:start="1783:13" pos:end="1783:35"><name pos:start="1783:13" pos:end="1783:23">unlock_user</name><argument_list pos:start="1783:24" pos:end="1783:35">(<argument pos:start="1783:25" pos:end="1783:25"><expr pos:start="1783:25" pos:end="1783:25"><name pos:start="1783:25" pos:end="1783:25">p</name></expr></argument>, <argument pos:start="1783:28" pos:end="1783:31"><expr pos:start="1783:28" pos:end="1783:31"><name pos:start="1783:28" pos:end="1783:31">arg1</name></expr></argument>, <argument pos:start="1783:34" pos:end="1783:34"><expr pos:start="1783:34" pos:end="1783:34"><literal type="number" pos:start="1783:34" pos:end="1783:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1785:13" pos:end="1785:69"><expr pos:start="1785:13" pos:end="1785:68"><name pos:start="1785:13" pos:end="1785:15">ret</name> <operator pos:start="1785:17" pos:end="1785:17">=</operator> <call pos:start="1785:19" pos:end="1785:68"><name pos:start="1785:19" pos:end="1785:27">get_errno</name><argument_list pos:start="1785:28" pos:end="1785:68">(<argument pos:start="1785:29" pos:end="1785:67"><expr pos:start="1785:29" pos:end="1785:67"><call pos:start="1785:29" pos:end="1785:67"><name pos:start="1785:29" pos:end="1785:47">sys_rt_sigqueueinfo</name><argument_list pos:start="1785:48" pos:end="1785:67">(<argument pos:start="1785:49" pos:end="1785:52"><expr pos:start="1785:49" pos:end="1785:52"><name pos:start="1785:49" pos:end="1785:52">arg1</name></expr></argument>, <argument pos:start="1785:55" pos:end="1785:58"><expr pos:start="1785:55" pos:end="1785:58"><name pos:start="1785:55" pos:end="1785:58">arg2</name></expr></argument>, <argument pos:start="1785:61" pos:end="1785:66"><expr pos:start="1785:61" pos:end="1785:66"><operator pos:start="1785:61" pos:end="1785:61">&amp;</operator><name pos:start="1785:62" pos:end="1785:66">uinfo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1789:9" pos:end="1792:0">break;</break>

<cpp:ifdef pos:start="1791:1" pos:end="1791:26">#<cpp:directive pos:start="1791:2" pos:end="1791:6">ifdef</cpp:directive> <name pos:start="1791:8" pos:end="1791:26">TARGET_NR_sigreturn</name></cpp:ifdef>

    <case pos:start="1793:5" pos:end="1793:29">case <expr pos:start="1793:10" pos:end="1793:28"><name pos:start="1793:10" pos:end="1793:28">TARGET_NR_sigreturn</name></expr>:</case>

        <comment type="block" pos:start="1795:9" pos:end="1795:63">/* NOTE: ret is eax, so not transcoding must be done */</comment>

        <expr_stmt pos:start="1797:9" pos:end="1797:36"><expr pos:start="1797:9" pos:end="1797:35"><name pos:start="1797:9" pos:end="1797:11">ret</name> <operator pos:start="1797:13" pos:end="1797:13">=</operator> <call pos:start="1797:15" pos:end="1797:35"><name pos:start="1797:15" pos:end="1797:26">do_sigreturn</name><argument_list pos:start="1797:27" pos:end="1797:35">(<argument pos:start="1797:28" pos:end="1797:34"><expr pos:start="1797:28" pos:end="1797:34"><name pos:start="1797:28" pos:end="1797:34">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1799:9" pos:end="1802:0">break;</break>

<cpp:endif pos:start="1801:1" pos:end="1801:6">#<cpp:directive pos:start="1801:2" pos:end="1801:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1803:5" pos:end="1803:32">case <expr pos:start="1803:10" pos:end="1803:31"><name pos:start="1803:10" pos:end="1803:31">TARGET_NR_rt_sigreturn</name></expr>:</case>

        <comment type="block" pos:start="1805:9" pos:end="1805:63">/* NOTE: ret is eax, so not transcoding must be done */</comment>

        <expr_stmt pos:start="1807:9" pos:end="1807:39"><expr pos:start="1807:9" pos:end="1807:38"><name pos:start="1807:9" pos:end="1807:11">ret</name> <operator pos:start="1807:13" pos:end="1807:13">=</operator> <call pos:start="1807:15" pos:end="1807:38"><name pos:start="1807:15" pos:end="1807:29">do_rt_sigreturn</name><argument_list pos:start="1807:30" pos:end="1807:38">(<argument pos:start="1807:31" pos:end="1807:37"><expr pos:start="1807:31" pos:end="1807:37"><name pos:start="1807:31" pos:end="1807:37">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1809:9" pos:end="1809:14">break;</break>

    <case pos:start="1811:5" pos:end="1811:31">case <expr pos:start="1811:10" pos:end="1811:30"><name pos:start="1811:10" pos:end="1811:30">TARGET_NR_sethostname</name></expr>:</case>

        <if_stmt pos:start="1813:9" pos:end="1815:24"><if pos:start="1813:9" pos:end="1815:24">if <condition pos:start="1813:12" pos:end="1813:42">(<expr pos:start="1813:13" pos:end="1813:41"><operator pos:start="1813:13" pos:end="1813:13">!</operator><operator pos:start="1813:14" pos:end="1813:14">(</operator><name pos:start="1813:15" pos:end="1813:15">p</name> <operator pos:start="1813:17" pos:end="1813:17">=</operator> <call pos:start="1813:19" pos:end="1813:40"><name pos:start="1813:19" pos:end="1813:34">lock_user_string</name><argument_list pos:start="1813:35" pos:end="1813:40">(<argument pos:start="1813:36" pos:end="1813:39"><expr pos:start="1813:36" pos:end="1813:39"><name pos:start="1813:36" pos:end="1813:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="1813:41" pos:end="1813:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1815:13" pos:end="1815:24"><block_content pos:start="1815:13" pos:end="1815:24">

            <goto pos:start="1815:13" pos:end="1815:24">goto <name pos:start="1815:18" pos:end="1815:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="1817:9" pos:end="1817:46"><expr pos:start="1817:9" pos:end="1817:45"><name pos:start="1817:9" pos:end="1817:11">ret</name> <operator pos:start="1817:13" pos:end="1817:13">=</operator> <call pos:start="1817:15" pos:end="1817:45"><name pos:start="1817:15" pos:end="1817:23">get_errno</name><argument_list pos:start="1817:24" pos:end="1817:45">(<argument pos:start="1817:25" pos:end="1817:44"><expr pos:start="1817:25" pos:end="1817:44"><call pos:start="1817:25" pos:end="1817:44"><name pos:start="1817:25" pos:end="1817:35">sethostname</name><argument_list pos:start="1817:36" pos:end="1817:44">(<argument pos:start="1817:37" pos:end="1817:37"><expr pos:start="1817:37" pos:end="1817:37"><name pos:start="1817:37" pos:end="1817:37">p</name></expr></argument>, <argument pos:start="1817:40" pos:end="1817:43"><expr pos:start="1817:40" pos:end="1817:43"><name pos:start="1817:40" pos:end="1817:43">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1819:9" pos:end="1819:32"><expr pos:start="1819:9" pos:end="1819:31"><call pos:start="1819:9" pos:end="1819:31"><name pos:start="1819:9" pos:end="1819:19">unlock_user</name><argument_list pos:start="1819:20" pos:end="1819:31">(<argument pos:start="1819:21" pos:end="1819:21"><expr pos:start="1819:21" pos:end="1819:21"><name pos:start="1819:21" pos:end="1819:21">p</name></expr></argument>, <argument pos:start="1819:24" pos:end="1819:27"><expr pos:start="1819:24" pos:end="1819:27"><name pos:start="1819:24" pos:end="1819:27">arg1</name></expr></argument>, <argument pos:start="1819:30" pos:end="1819:30"><expr pos:start="1819:30" pos:end="1819:30"><literal type="number" pos:start="1819:30" pos:end="1819:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="1821:9" pos:end="1821:14">break;</break>

    <case pos:start="1823:5" pos:end="1823:29">case <expr pos:start="1823:10" pos:end="1823:28"><name pos:start="1823:10" pos:end="1823:28">TARGET_NR_setrlimit</name></expr>:</case>

        <block pos:start="1825:9" pos:end="1847:9">{<block_content pos:start="1829:13" pos:end="1845:56">

            <comment type="block" pos:start="1827:13" pos:end="1827:41">/* XXX: convert resource ? */</comment>

            <decl_stmt pos:start="1829:13" pos:end="1829:32"><decl pos:start="1829:13" pos:end="1829:31"><type pos:start="1829:13" pos:end="1829:15"><name pos:start="1829:13" pos:end="1829:15">int</name></type> <name pos:start="1829:17" pos:end="1829:24">resource</name> <init pos:start="1829:26" pos:end="1829:31">= <expr pos:start="1829:28" pos:end="1829:31"><name pos:start="1829:28" pos:end="1829:31">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1831:13" pos:end="1831:46"><decl pos:start="1831:13" pos:end="1831:45"><type pos:start="1831:13" pos:end="1831:34"><name pos:start="1831:13" pos:end="1831:32"><name pos:start="1831:13" pos:end="1831:18">struct</name> <name pos:start="1831:20" pos:end="1831:32">target_rlimit</name></name> <modifier pos:start="1831:34" pos:end="1831:34">*</modifier></type><name pos:start="1831:35" pos:end="1831:45">target_rlim</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1833:13" pos:end="1833:31"><decl pos:start="1833:13" pos:end="1833:30"><type pos:start="1833:13" pos:end="1833:25"><name pos:start="1833:13" pos:end="1833:25"><name pos:start="1833:13" pos:end="1833:18">struct</name> <name pos:start="1833:20" pos:end="1833:25">rlimit</name></name></type> <name pos:start="1833:27" pos:end="1833:30">rlim</name></decl>;</decl_stmt>

            <if_stmt pos:start="1835:13" pos:end="1837:28"><if pos:start="1835:13" pos:end="1837:28">if <condition pos:start="1835:16" pos:end="1835:69">(<expr pos:start="1835:17" pos:end="1835:68"><operator pos:start="1835:17" pos:end="1835:17">!</operator><call pos:start="1835:18" pos:end="1835:68"><name pos:start="1835:18" pos:end="1835:33">lock_user_struct</name><argument_list pos:start="1835:34" pos:end="1835:68">(<argument pos:start="1835:35" pos:end="1835:45"><expr pos:start="1835:35" pos:end="1835:45"><name pos:start="1835:35" pos:end="1835:45">VERIFY_READ</name></expr></argument>, <argument pos:start="1835:48" pos:end="1835:58"><expr pos:start="1835:48" pos:end="1835:58"><name pos:start="1835:48" pos:end="1835:58">target_rlim</name></expr></argument>, <argument pos:start="1835:61" pos:end="1835:64"><expr pos:start="1835:61" pos:end="1835:64"><name pos:start="1835:61" pos:end="1835:64">arg2</name></expr></argument>, <argument pos:start="1835:67" pos:end="1835:67"><expr pos:start="1835:67" pos:end="1835:67"><literal type="number" pos:start="1835:67" pos:end="1835:67">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1837:17" pos:end="1837:28"><block_content pos:start="1837:17" pos:end="1837:28">

                <goto pos:start="1837:17" pos:end="1837:28">goto <name pos:start="1837:22" pos:end="1837:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1839:13" pos:end="1839:58"><expr pos:start="1839:13" pos:end="1839:57"><name pos:start="1839:13" pos:end="1839:25"><name pos:start="1839:13" pos:end="1839:16">rlim</name><operator pos:start="1839:17" pos:end="1839:17">.</operator><name pos:start="1839:18" pos:end="1839:25">rlim_cur</name></name> <operator pos:start="1839:27" pos:end="1839:27">=</operator> <call pos:start="1839:29" pos:end="1839:57"><name pos:start="1839:29" pos:end="1839:34">tswapl</name><argument_list pos:start="1839:35" pos:end="1839:57">(<argument pos:start="1839:36" pos:end="1839:56"><expr pos:start="1839:36" pos:end="1839:56"><name pos:start="1839:36" pos:end="1839:56"><name pos:start="1839:36" pos:end="1839:46">target_rlim</name><operator pos:start="1839:47" pos:end="1839:48">-&gt;</operator><name pos:start="1839:49" pos:end="1839:56">rlim_cur</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1841:13" pos:end="1841:58"><expr pos:start="1841:13" pos:end="1841:57"><name pos:start="1841:13" pos:end="1841:25"><name pos:start="1841:13" pos:end="1841:16">rlim</name><operator pos:start="1841:17" pos:end="1841:17">.</operator><name pos:start="1841:18" pos:end="1841:25">rlim_max</name></name> <operator pos:start="1841:27" pos:end="1841:27">=</operator> <call pos:start="1841:29" pos:end="1841:57"><name pos:start="1841:29" pos:end="1841:34">tswapl</name><argument_list pos:start="1841:35" pos:end="1841:57">(<argument pos:start="1841:36" pos:end="1841:56"><expr pos:start="1841:36" pos:end="1841:56"><name pos:start="1841:36" pos:end="1841:56"><name pos:start="1841:36" pos:end="1841:46">target_rlim</name><operator pos:start="1841:47" pos:end="1841:48">-&gt;</operator><name pos:start="1841:49" pos:end="1841:56">rlim_max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1843:13" pos:end="1843:53"><expr pos:start="1843:13" pos:end="1843:52"><call pos:start="1843:13" pos:end="1843:52"><name pos:start="1843:13" pos:end="1843:30">unlock_user_struct</name><argument_list pos:start="1843:31" pos:end="1843:52">(<argument pos:start="1843:32" pos:end="1843:42"><expr pos:start="1843:32" pos:end="1843:42"><name pos:start="1843:32" pos:end="1843:42">target_rlim</name></expr></argument>, <argument pos:start="1843:45" pos:end="1843:48"><expr pos:start="1843:45" pos:end="1843:48"><name pos:start="1843:45" pos:end="1843:48">arg2</name></expr></argument>, <argument pos:start="1843:51" pos:end="1843:51"><expr pos:start="1843:51" pos:end="1843:51"><literal type="number" pos:start="1843:51" pos:end="1843:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1845:13" pos:end="1845:56"><expr pos:start="1845:13" pos:end="1845:55"><name pos:start="1845:13" pos:end="1845:15">ret</name> <operator pos:start="1845:17" pos:end="1845:17">=</operator> <call pos:start="1845:19" pos:end="1845:55"><name pos:start="1845:19" pos:end="1845:27">get_errno</name><argument_list pos:start="1845:28" pos:end="1845:55">(<argument pos:start="1845:29" pos:end="1845:54"><expr pos:start="1845:29" pos:end="1845:54"><call pos:start="1845:29" pos:end="1845:54"><name pos:start="1845:29" pos:end="1845:37">setrlimit</name><argument_list pos:start="1845:38" pos:end="1845:54">(<argument pos:start="1845:39" pos:end="1845:46"><expr pos:start="1845:39" pos:end="1845:46"><name pos:start="1845:39" pos:end="1845:46">resource</name></expr></argument>, <argument pos:start="1845:49" pos:end="1845:53"><expr pos:start="1845:49" pos:end="1845:53"><operator pos:start="1845:49" pos:end="1845:49">&amp;</operator><name pos:start="1845:50" pos:end="1845:53">rlim</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1849:9" pos:end="1849:14">break;</break>

    <case pos:start="1851:5" pos:end="1851:29">case <expr pos:start="1851:10" pos:end="1851:28"><name pos:start="1851:10" pos:end="1851:28">TARGET_NR_getrlimit</name></expr>:</case>

        <block pos:start="1853:9" pos:end="1881:9">{<block_content pos:start="1857:13" pos:end="1879:13">

            <comment type="block" pos:start="1855:13" pos:end="1855:41">/* XXX: convert resource ? */</comment>

            <decl_stmt pos:start="1857:13" pos:end="1857:32"><decl pos:start="1857:13" pos:end="1857:31"><type pos:start="1857:13" pos:end="1857:15"><name pos:start="1857:13" pos:end="1857:15">int</name></type> <name pos:start="1857:17" pos:end="1857:24">resource</name> <init pos:start="1857:26" pos:end="1857:31">= <expr pos:start="1857:28" pos:end="1857:31"><name pos:start="1857:28" pos:end="1857:31">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="1859:13" pos:end="1859:46"><decl pos:start="1859:13" pos:end="1859:45"><type pos:start="1859:13" pos:end="1859:34"><name pos:start="1859:13" pos:end="1859:32"><name pos:start="1859:13" pos:end="1859:18">struct</name> <name pos:start="1859:20" pos:end="1859:32">target_rlimit</name></name> <modifier pos:start="1859:34" pos:end="1859:34">*</modifier></type><name pos:start="1859:35" pos:end="1859:45">target_rlim</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1861:13" pos:end="1861:31"><decl pos:start="1861:13" pos:end="1861:30"><type pos:start="1861:13" pos:end="1861:25"><name pos:start="1861:13" pos:end="1861:25"><name pos:start="1861:13" pos:end="1861:18">struct</name> <name pos:start="1861:20" pos:end="1861:25">rlimit</name></name></type> <name pos:start="1861:27" pos:end="1861:30">rlim</name></decl>;</decl_stmt>



            <expr_stmt pos:start="1865:13" pos:end="1865:56"><expr pos:start="1865:13" pos:end="1865:55"><name pos:start="1865:13" pos:end="1865:15">ret</name> <operator pos:start="1865:17" pos:end="1865:17">=</operator> <call pos:start="1865:19" pos:end="1865:55"><name pos:start="1865:19" pos:end="1865:27">get_errno</name><argument_list pos:start="1865:28" pos:end="1865:55">(<argument pos:start="1865:29" pos:end="1865:54"><expr pos:start="1865:29" pos:end="1865:54"><call pos:start="1865:29" pos:end="1865:54"><name pos:start="1865:29" pos:end="1865:37">getrlimit</name><argument_list pos:start="1865:38" pos:end="1865:54">(<argument pos:start="1865:39" pos:end="1865:46"><expr pos:start="1865:39" pos:end="1865:46"><name pos:start="1865:39" pos:end="1865:46">resource</name></expr></argument>, <argument pos:start="1865:49" pos:end="1865:53"><expr pos:start="1865:49" pos:end="1865:53"><operator pos:start="1865:49" pos:end="1865:49">&amp;</operator><name pos:start="1865:50" pos:end="1865:53">rlim</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1867:13" pos:end="1879:13"><if pos:start="1867:13" pos:end="1879:13">if <condition pos:start="1867:16" pos:end="1867:31">(<expr pos:start="1867:17" pos:end="1867:30"><operator pos:start="1867:17" pos:end="1867:17">!</operator><call pos:start="1867:18" pos:end="1867:30"><name pos:start="1867:18" pos:end="1867:25">is_error</name><argument_list pos:start="1867:26" pos:end="1867:30">(<argument pos:start="1867:27" pos:end="1867:29"><expr pos:start="1867:27" pos:end="1867:29"><name pos:start="1867:27" pos:end="1867:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1867:33" pos:end="1879:13">{<block_content pos:start="1869:17" pos:end="1877:57">

                <if_stmt pos:start="1869:17" pos:end="1871:32"><if pos:start="1869:17" pos:end="1871:32">if <condition pos:start="1869:20" pos:end="1869:74">(<expr pos:start="1869:21" pos:end="1869:73"><operator pos:start="1869:21" pos:end="1869:21">!</operator><call pos:start="1869:22" pos:end="1869:73"><name pos:start="1869:22" pos:end="1869:37">lock_user_struct</name><argument_list pos:start="1869:38" pos:end="1869:73">(<argument pos:start="1869:39" pos:end="1869:50"><expr pos:start="1869:39" pos:end="1869:50"><name pos:start="1869:39" pos:end="1869:50">VERIFY_WRITE</name></expr></argument>, <argument pos:start="1869:53" pos:end="1869:63"><expr pos:start="1869:53" pos:end="1869:63"><name pos:start="1869:53" pos:end="1869:63">target_rlim</name></expr></argument>, <argument pos:start="1869:66" pos:end="1869:69"><expr pos:start="1869:66" pos:end="1869:69"><name pos:start="1869:66" pos:end="1869:69">arg2</name></expr></argument>, <argument pos:start="1869:72" pos:end="1869:72"><expr pos:start="1869:72" pos:end="1869:72"><literal type="number" pos:start="1869:72" pos:end="1869:72">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1871:21" pos:end="1871:32"><block_content pos:start="1871:21" pos:end="1871:32">

                    <goto pos:start="1871:21" pos:end="1871:32">goto <name pos:start="1871:26" pos:end="1871:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1873:17" pos:end="1873:62"><expr pos:start="1873:17" pos:end="1873:61"><name pos:start="1873:17" pos:end="1873:37"><name pos:start="1873:17" pos:end="1873:27">target_rlim</name><operator pos:start="1873:28" pos:end="1873:29">-&gt;</operator><name pos:start="1873:30" pos:end="1873:37">rlim_cur</name></name> <operator pos:start="1873:39" pos:end="1873:39">=</operator> <call pos:start="1873:41" pos:end="1873:61"><name pos:start="1873:41" pos:end="1873:46">tswapl</name><argument_list pos:start="1873:47" pos:end="1873:61">(<argument pos:start="1873:48" pos:end="1873:60"><expr pos:start="1873:48" pos:end="1873:60"><name pos:start="1873:48" pos:end="1873:60"><name pos:start="1873:48" pos:end="1873:51">rlim</name><operator pos:start="1873:52" pos:end="1873:52">.</operator><name pos:start="1873:53" pos:end="1873:60">rlim_cur</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1875:17" pos:end="1875:62"><expr pos:start="1875:17" pos:end="1875:61"><name pos:start="1875:17" pos:end="1875:37"><name pos:start="1875:17" pos:end="1875:27">target_rlim</name><operator pos:start="1875:28" pos:end="1875:29">-&gt;</operator><name pos:start="1875:30" pos:end="1875:37">rlim_max</name></name> <operator pos:start="1875:39" pos:end="1875:39">=</operator> <call pos:start="1875:41" pos:end="1875:61"><name pos:start="1875:41" pos:end="1875:46">tswapl</name><argument_list pos:start="1875:47" pos:end="1875:61">(<argument pos:start="1875:48" pos:end="1875:60"><expr pos:start="1875:48" pos:end="1875:60"><name pos:start="1875:48" pos:end="1875:60"><name pos:start="1875:48" pos:end="1875:51">rlim</name><operator pos:start="1875:52" pos:end="1875:52">.</operator><name pos:start="1875:53" pos:end="1875:60">rlim_max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1877:17" pos:end="1877:57"><expr pos:start="1877:17" pos:end="1877:56"><call pos:start="1877:17" pos:end="1877:56"><name pos:start="1877:17" pos:end="1877:34">unlock_user_struct</name><argument_list pos:start="1877:35" pos:end="1877:56">(<argument pos:start="1877:36" pos:end="1877:46"><expr pos:start="1877:36" pos:end="1877:46"><name pos:start="1877:36" pos:end="1877:46">target_rlim</name></expr></argument>, <argument pos:start="1877:49" pos:end="1877:52"><expr pos:start="1877:49" pos:end="1877:52"><name pos:start="1877:49" pos:end="1877:52">arg2</name></expr></argument>, <argument pos:start="1877:55" pos:end="1877:55"><expr pos:start="1877:55" pos:end="1877:55"><literal type="number" pos:start="1877:55" pos:end="1877:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1883:9" pos:end="1883:14">break;</break>

    <case pos:start="1885:5" pos:end="1885:29">case <expr pos:start="1885:10" pos:end="1885:28"><name pos:start="1885:10" pos:end="1885:28">TARGET_NR_getrusage</name></expr>:</case>

        <block pos:start="1887:9" pos:end="1899:9">{<block_content pos:start="1889:13" pos:end="1897:13">

            <decl_stmt pos:start="1889:13" pos:end="1889:33"><decl pos:start="1889:13" pos:end="1889:32"><type pos:start="1889:13" pos:end="1889:25"><name pos:start="1889:13" pos:end="1889:25"><name pos:start="1889:13" pos:end="1889:18">struct</name> <name pos:start="1889:20" pos:end="1889:25">rusage</name></name></type> <name pos:start="1889:27" pos:end="1889:32">rusage</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1891:13" pos:end="1891:54"><expr pos:start="1891:13" pos:end="1891:53"><name pos:start="1891:13" pos:end="1891:15">ret</name> <operator pos:start="1891:17" pos:end="1891:17">=</operator> <call pos:start="1891:19" pos:end="1891:53"><name pos:start="1891:19" pos:end="1891:27">get_errno</name><argument_list pos:start="1891:28" pos:end="1891:53">(<argument pos:start="1891:29" pos:end="1891:52"><expr pos:start="1891:29" pos:end="1891:52"><call pos:start="1891:29" pos:end="1891:52"><name pos:start="1891:29" pos:end="1891:37">getrusage</name><argument_list pos:start="1891:38" pos:end="1891:52">(<argument pos:start="1891:39" pos:end="1891:42"><expr pos:start="1891:39" pos:end="1891:42"><name pos:start="1891:39" pos:end="1891:42">arg1</name></expr></argument>, <argument pos:start="1891:45" pos:end="1891:51"><expr pos:start="1891:45" pos:end="1891:51"><operator pos:start="1891:45" pos:end="1891:45">&amp;</operator><name pos:start="1891:46" pos:end="1891:51">rusage</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1893:13" pos:end="1897:13"><if pos:start="1893:13" pos:end="1897:13">if <condition pos:start="1893:16" pos:end="1893:31">(<expr pos:start="1893:17" pos:end="1893:30"><operator pos:start="1893:17" pos:end="1893:17">!</operator><call pos:start="1893:18" pos:end="1893:30"><name pos:start="1893:18" pos:end="1893:25">is_error</name><argument_list pos:start="1893:26" pos:end="1893:30">(<argument pos:start="1893:27" pos:end="1893:29"><expr pos:start="1893:27" pos:end="1893:29"><name pos:start="1893:27" pos:end="1893:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1893:33" pos:end="1897:13">{<block_content pos:start="1895:17" pos:end="1895:53">

                <expr_stmt pos:start="1895:17" pos:end="1895:53"><expr pos:start="1895:17" pos:end="1895:52"><call pos:start="1895:17" pos:end="1895:52"><name pos:start="1895:17" pos:end="1895:37">host_to_target_rusage</name><argument_list pos:start="1895:38" pos:end="1895:52">(<argument pos:start="1895:39" pos:end="1895:42"><expr pos:start="1895:39" pos:end="1895:42"><name pos:start="1895:39" pos:end="1895:42">arg2</name></expr></argument>, <argument pos:start="1895:45" pos:end="1895:51"><expr pos:start="1895:45" pos:end="1895:51"><operator pos:start="1895:45" pos:end="1895:45">&amp;</operator><name pos:start="1895:46" pos:end="1895:51">rusage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1901:9" pos:end="1901:14">break;</break>

    <case pos:start="1903:5" pos:end="1903:32">case <expr pos:start="1903:10" pos:end="1903:31"><name pos:start="1903:10" pos:end="1903:31">TARGET_NR_gettimeofday</name></expr>:</case>

        <block pos:start="1905:9" pos:end="1919:9">{<block_content pos:start="1907:13" pos:end="1917:13">

            <decl_stmt pos:start="1907:13" pos:end="1907:30"><decl pos:start="1907:13" pos:end="1907:29"><type pos:start="1907:13" pos:end="1907:26"><name pos:start="1907:13" pos:end="1907:26"><name pos:start="1907:13" pos:end="1907:18">struct</name> <name pos:start="1907:20" pos:end="1907:26">timeval</name></name></type> <name pos:start="1907:28" pos:end="1907:29">tv</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1909:13" pos:end="1909:53"><expr pos:start="1909:13" pos:end="1909:52"><name pos:start="1909:13" pos:end="1909:15">ret</name> <operator pos:start="1909:17" pos:end="1909:17">=</operator> <call pos:start="1909:19" pos:end="1909:52"><name pos:start="1909:19" pos:end="1909:27">get_errno</name><argument_list pos:start="1909:28" pos:end="1909:52">(<argument pos:start="1909:29" pos:end="1909:51"><expr pos:start="1909:29" pos:end="1909:51"><call pos:start="1909:29" pos:end="1909:51"><name pos:start="1909:29" pos:end="1909:40">gettimeofday</name><argument_list pos:start="1909:41" pos:end="1909:51">(<argument pos:start="1909:42" pos:end="1909:44"><expr pos:start="1909:42" pos:end="1909:44"><operator pos:start="1909:42" pos:end="1909:42">&amp;</operator><name pos:start="1909:43" pos:end="1909:44">tv</name></expr></argument>, <argument pos:start="1909:47" pos:end="1909:50"><expr pos:start="1909:47" pos:end="1909:50"><name pos:start="1909:47" pos:end="1909:50">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1911:13" pos:end="1917:13"><if pos:start="1911:13" pos:end="1917:13">if <condition pos:start="1911:16" pos:end="1911:31">(<expr pos:start="1911:17" pos:end="1911:30"><operator pos:start="1911:17" pos:end="1911:17">!</operator><call pos:start="1911:18" pos:end="1911:30"><name pos:start="1911:18" pos:end="1911:25">is_error</name><argument_list pos:start="1911:26" pos:end="1911:30">(<argument pos:start="1911:27" pos:end="1911:29"><expr pos:start="1911:27" pos:end="1911:29"><name pos:start="1911:27" pos:end="1911:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1911:33" pos:end="1917:13">{<block_content pos:start="1913:17" pos:end="1915:32">

                <if_stmt pos:start="1913:17" pos:end="1915:32"><if pos:start="1913:17" pos:end="1915:32">if <condition pos:start="1913:20" pos:end="1913:52">(<expr pos:start="1913:21" pos:end="1913:51"><call pos:start="1913:21" pos:end="1913:51"><name pos:start="1913:21" pos:end="1913:40">copy_to_user_timeval</name><argument_list pos:start="1913:41" pos:end="1913:51">(<argument pos:start="1913:42" pos:end="1913:45"><expr pos:start="1913:42" pos:end="1913:45"><name pos:start="1913:42" pos:end="1913:45">arg1</name></expr></argument>, <argument pos:start="1913:48" pos:end="1913:50"><expr pos:start="1913:48" pos:end="1913:50"><operator pos:start="1913:48" pos:end="1913:48">&amp;</operator><name pos:start="1913:49" pos:end="1913:50">tv</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1915:21" pos:end="1915:32"><block_content pos:start="1915:21" pos:end="1915:32">

                    <goto pos:start="1915:21" pos:end="1915:32">goto <name pos:start="1915:26" pos:end="1915:31">efault</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="1921:9" pos:end="1921:14">break;</break>

    <case pos:start="1923:5" pos:end="1923:32">case <expr pos:start="1923:10" pos:end="1923:31"><name pos:start="1923:10" pos:end="1923:31">TARGET_NR_settimeofday</name></expr>:</case>

        <block pos:start="1925:9" pos:end="1935:9">{<block_content pos:start="1927:13" pos:end="1933:53">

            <decl_stmt pos:start="1927:13" pos:end="1927:30"><decl pos:start="1927:13" pos:end="1927:29"><type pos:start="1927:13" pos:end="1927:26"><name pos:start="1927:13" pos:end="1927:26"><name pos:start="1927:13" pos:end="1927:18">struct</name> <name pos:start="1927:20" pos:end="1927:26">timeval</name></name></type> <name pos:start="1927:28" pos:end="1927:29">tv</name></decl>;</decl_stmt>

            <if_stmt pos:start="1929:13" pos:end="1931:28"><if pos:start="1929:13" pos:end="1931:28">if <condition pos:start="1929:16" pos:end="1929:50">(<expr pos:start="1929:17" pos:end="1929:49"><call pos:start="1929:17" pos:end="1929:49"><name pos:start="1929:17" pos:end="1929:38">copy_from_user_timeval</name><argument_list pos:start="1929:39" pos:end="1929:49">(<argument pos:start="1929:40" pos:end="1929:42"><expr pos:start="1929:40" pos:end="1929:42"><operator pos:start="1929:40" pos:end="1929:40">&amp;</operator><name pos:start="1929:41" pos:end="1929:42">tv</name></expr></argument>, <argument pos:start="1929:45" pos:end="1929:48"><expr pos:start="1929:45" pos:end="1929:48"><name pos:start="1929:45" pos:end="1929:48">arg1</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1931:17" pos:end="1931:28"><block_content pos:start="1931:17" pos:end="1931:28">

                <goto pos:start="1931:17" pos:end="1931:28">goto <name pos:start="1931:22" pos:end="1931:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1933:13" pos:end="1933:53"><expr pos:start="1933:13" pos:end="1933:52"><name pos:start="1933:13" pos:end="1933:15">ret</name> <operator pos:start="1933:17" pos:end="1933:17">=</operator> <call pos:start="1933:19" pos:end="1933:52"><name pos:start="1933:19" pos:end="1933:27">get_errno</name><argument_list pos:start="1933:28" pos:end="1933:52">(<argument pos:start="1933:29" pos:end="1933:51"><expr pos:start="1933:29" pos:end="1933:51"><call pos:start="1933:29" pos:end="1933:51"><name pos:start="1933:29" pos:end="1933:40">settimeofday</name><argument_list pos:start="1933:41" pos:end="1933:51">(<argument pos:start="1933:42" pos:end="1933:44"><expr pos:start="1933:42" pos:end="1933:44"><operator pos:start="1933:42" pos:end="1933:42">&amp;</operator><name pos:start="1933:43" pos:end="1933:44">tv</name></expr></argument>, <argument pos:start="1933:47" pos:end="1933:50"><expr pos:start="1933:47" pos:end="1933:50"><name pos:start="1933:47" pos:end="1933:50">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1937:9" pos:end="1940:0">break;</break>

<cpp:ifdef pos:start="1939:1" pos:end="1939:23">#<cpp:directive pos:start="1939:2" pos:end="1939:6">ifdef</cpp:directive> <name pos:start="1939:8" pos:end="1939:23">TARGET_NR_select</name></cpp:ifdef>

    <case pos:start="1941:5" pos:end="1941:26">case <expr pos:start="1941:10" pos:end="1941:25"><name pos:start="1941:10" pos:end="1941:25">TARGET_NR_select</name></expr>:</case>

        <block pos:start="1943:9" pos:end="1971:9">{<block_content pos:start="1945:13" pos:end="1969:55">

            <decl_stmt pos:start="1945:13" pos:end="1945:46"><decl pos:start="1945:13" pos:end="1945:45"><type pos:start="1945:13" pos:end="1945:42"><name pos:start="1945:13" pos:end="1945:40"><name pos:start="1945:13" pos:end="1945:18">struct</name> <name pos:start="1945:20" pos:end="1945:40">target_sel_arg_struct</name></name> <modifier pos:start="1945:42" pos:end="1945:42">*</modifier></type><name pos:start="1945:43" pos:end="1945:45">sel</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1947:13" pos:end="1947:42"><decl pos:start="1947:13" pos:end="1947:25"><type pos:start="1947:13" pos:end="1947:21"><name pos:start="1947:13" pos:end="1947:21">abi_ulong</name></type> <name pos:start="1947:23" pos:end="1947:25">inp</name></decl>, <decl pos:start="1947:28" pos:end="1947:31"><type ref="prev" pos:start="1947:13" pos:end="1947:21"/><name pos:start="1947:28" pos:end="1947:31">outp</name></decl>, <decl pos:start="1947:34" pos:end="1947:36"><type ref="prev" pos:start="1947:13" pos:end="1947:21"/><name pos:start="1947:34" pos:end="1947:36">exp</name></decl>, <decl pos:start="1947:39" pos:end="1947:41"><type ref="prev" pos:start="1947:13" pos:end="1947:21"/><name pos:start="1947:39" pos:end="1947:41">tvp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="1949:13" pos:end="1949:22"><decl pos:start="1949:13" pos:end="1949:21"><type pos:start="1949:13" pos:end="1949:16"><name pos:start="1949:13" pos:end="1949:16">long</name></type> <name pos:start="1949:18" pos:end="1949:21">nsel</name></decl>;</decl_stmt>



            <if_stmt pos:start="1953:13" pos:end="1955:28"><if pos:start="1953:13" pos:end="1955:28">if <condition pos:start="1953:16" pos:end="1953:61">(<expr pos:start="1953:17" pos:end="1953:60"><operator pos:start="1953:17" pos:end="1953:17">!</operator><call pos:start="1953:18" pos:end="1953:60"><name pos:start="1953:18" pos:end="1953:33">lock_user_struct</name><argument_list pos:start="1953:34" pos:end="1953:60">(<argument pos:start="1953:35" pos:end="1953:45"><expr pos:start="1953:35" pos:end="1953:45"><name pos:start="1953:35" pos:end="1953:45">VERIFY_READ</name></expr></argument>, <argument pos:start="1953:48" pos:end="1953:50"><expr pos:start="1953:48" pos:end="1953:50"><name pos:start="1953:48" pos:end="1953:50">sel</name></expr></argument>, <argument pos:start="1953:53" pos:end="1953:56"><expr pos:start="1953:53" pos:end="1953:56"><name pos:start="1953:53" pos:end="1953:56">arg1</name></expr></argument>, <argument pos:start="1953:59" pos:end="1953:59"><expr pos:start="1953:59" pos:end="1953:59"><literal type="number" pos:start="1953:59" pos:end="1953:59">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1955:17" pos:end="1955:28"><block_content pos:start="1955:17" pos:end="1955:28">

                <goto pos:start="1955:17" pos:end="1955:28">goto <name pos:start="1955:22" pos:end="1955:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1957:13" pos:end="1957:34"><expr pos:start="1957:13" pos:end="1957:33"><name pos:start="1957:13" pos:end="1957:16">nsel</name> <operator pos:start="1957:18" pos:end="1957:18">=</operator> <call pos:start="1957:20" pos:end="1957:33"><name pos:start="1957:20" pos:end="1957:25">tswapl</name><argument_list pos:start="1957:26" pos:end="1957:33">(<argument pos:start="1957:27" pos:end="1957:32"><expr pos:start="1957:27" pos:end="1957:32"><name pos:start="1957:27" pos:end="1957:32"><name pos:start="1957:27" pos:end="1957:29">sel</name><operator pos:start="1957:30" pos:end="1957:31">-&gt;</operator><name pos:start="1957:32" pos:end="1957:32">n</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1959:13" pos:end="1959:35"><expr pos:start="1959:13" pos:end="1959:34"><name pos:start="1959:13" pos:end="1959:15">inp</name> <operator pos:start="1959:17" pos:end="1959:17">=</operator> <call pos:start="1959:19" pos:end="1959:34"><name pos:start="1959:19" pos:end="1959:24">tswapl</name><argument_list pos:start="1959:25" pos:end="1959:34">(<argument pos:start="1959:26" pos:end="1959:33"><expr pos:start="1959:26" pos:end="1959:33"><name pos:start="1959:26" pos:end="1959:33"><name pos:start="1959:26" pos:end="1959:28">sel</name><operator pos:start="1959:29" pos:end="1959:30">-&gt;</operator><name pos:start="1959:31" pos:end="1959:33">inp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1961:13" pos:end="1961:37"><expr pos:start="1961:13" pos:end="1961:36"><name pos:start="1961:13" pos:end="1961:16">outp</name> <operator pos:start="1961:18" pos:end="1961:18">=</operator> <call pos:start="1961:20" pos:end="1961:36"><name pos:start="1961:20" pos:end="1961:25">tswapl</name><argument_list pos:start="1961:26" pos:end="1961:36">(<argument pos:start="1961:27" pos:end="1961:35"><expr pos:start="1961:27" pos:end="1961:35"><name pos:start="1961:27" pos:end="1961:35"><name pos:start="1961:27" pos:end="1961:29">sel</name><operator pos:start="1961:30" pos:end="1961:31">-&gt;</operator><name pos:start="1961:32" pos:end="1961:35">outp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1963:13" pos:end="1963:35"><expr pos:start="1963:13" pos:end="1963:34"><name pos:start="1963:13" pos:end="1963:15">exp</name> <operator pos:start="1963:17" pos:end="1963:17">=</operator> <call pos:start="1963:19" pos:end="1963:34"><name pos:start="1963:19" pos:end="1963:24">tswapl</name><argument_list pos:start="1963:25" pos:end="1963:34">(<argument pos:start="1963:26" pos:end="1963:33"><expr pos:start="1963:26" pos:end="1963:33"><name pos:start="1963:26" pos:end="1963:33"><name pos:start="1963:26" pos:end="1963:28">sel</name><operator pos:start="1963:29" pos:end="1963:30">-&gt;</operator><name pos:start="1963:31" pos:end="1963:33">exp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1965:13" pos:end="1965:35"><expr pos:start="1965:13" pos:end="1965:34"><name pos:start="1965:13" pos:end="1965:15">tvp</name> <operator pos:start="1965:17" pos:end="1965:17">=</operator> <call pos:start="1965:19" pos:end="1965:34"><name pos:start="1965:19" pos:end="1965:24">tswapl</name><argument_list pos:start="1965:25" pos:end="1965:34">(<argument pos:start="1965:26" pos:end="1965:33"><expr pos:start="1965:26" pos:end="1965:33"><name pos:start="1965:26" pos:end="1965:33"><name pos:start="1965:26" pos:end="1965:28">sel</name><operator pos:start="1965:29" pos:end="1965:30">-&gt;</operator><name pos:start="1965:31" pos:end="1965:33">tvp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1967:13" pos:end="1967:45"><expr pos:start="1967:13" pos:end="1967:44"><call pos:start="1967:13" pos:end="1967:44"><name pos:start="1967:13" pos:end="1967:30">unlock_user_struct</name><argument_list pos:start="1967:31" pos:end="1967:44">(<argument pos:start="1967:32" pos:end="1967:34"><expr pos:start="1967:32" pos:end="1967:34"><name pos:start="1967:32" pos:end="1967:34">sel</name></expr></argument>, <argument pos:start="1967:37" pos:end="1967:40"><expr pos:start="1967:37" pos:end="1967:40"><name pos:start="1967:37" pos:end="1967:40">arg1</name></expr></argument>, <argument pos:start="1967:43" pos:end="1967:43"><expr pos:start="1967:43" pos:end="1967:43"><literal type="number" pos:start="1967:43" pos:end="1967:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1969:13" pos:end="1969:55"><expr pos:start="1969:13" pos:end="1969:54"><name pos:start="1969:13" pos:end="1969:15">ret</name> <operator pos:start="1969:17" pos:end="1969:17">=</operator> <call pos:start="1969:19" pos:end="1969:54"><name pos:start="1969:19" pos:end="1969:27">do_select</name><argument_list pos:start="1969:28" pos:end="1969:54">(<argument pos:start="1969:29" pos:end="1969:32"><expr pos:start="1969:29" pos:end="1969:32"><name pos:start="1969:29" pos:end="1969:32">nsel</name></expr></argument>, <argument pos:start="1969:35" pos:end="1969:37"><expr pos:start="1969:35" pos:end="1969:37"><name pos:start="1969:35" pos:end="1969:37">inp</name></expr></argument>, <argument pos:start="1969:40" pos:end="1969:43"><expr pos:start="1969:40" pos:end="1969:43"><name pos:start="1969:40" pos:end="1969:43">outp</name></expr></argument>, <argument pos:start="1969:46" pos:end="1969:48"><expr pos:start="1969:46" pos:end="1969:48"><name pos:start="1969:46" pos:end="1969:48">exp</name></expr></argument>, <argument pos:start="1969:51" pos:end="1969:53"><expr pos:start="1969:51" pos:end="1969:53"><name pos:start="1969:51" pos:end="1969:53">tvp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="1973:9" pos:end="1976:0">break;</break>

<cpp:endif pos:start="1975:1" pos:end="1975:6">#<cpp:directive pos:start="1975:2" pos:end="1975:6">endif</cpp:directive></cpp:endif>

    <case pos:start="1977:5" pos:end="1977:27">case <expr pos:start="1977:10" pos:end="1977:26"><name pos:start="1977:10" pos:end="1977:26">TARGET_NR_symlink</name></expr>:</case>

        <block pos:start="1979:9" pos:end="1999:9">{<block_content pos:start="1981:13" pos:end="1997:36">

            <decl_stmt pos:start="1981:13" pos:end="1981:21"><decl pos:start="1981:13" pos:end="1981:20"><type pos:start="1981:13" pos:end="1981:18"><name pos:start="1981:13" pos:end="1981:16">void</name> <modifier pos:start="1981:18" pos:end="1981:18">*</modifier></type><name pos:start="1981:19" pos:end="1981:20">p2</name></decl>;</decl_stmt>

            <expr_stmt pos:start="1983:13" pos:end="1983:39"><expr pos:start="1983:13" pos:end="1983:38"><name pos:start="1983:13" pos:end="1983:13">p</name> <operator pos:start="1983:15" pos:end="1983:15">=</operator> <call pos:start="1983:17" pos:end="1983:38"><name pos:start="1983:17" pos:end="1983:32">lock_user_string</name><argument_list pos:start="1983:33" pos:end="1983:38">(<argument pos:start="1983:34" pos:end="1983:37"><expr pos:start="1983:34" pos:end="1983:37"><name pos:start="1983:34" pos:end="1983:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1985:13" pos:end="1985:40"><expr pos:start="1985:13" pos:end="1985:39"><name pos:start="1985:13" pos:end="1985:14">p2</name> <operator pos:start="1985:16" pos:end="1985:16">=</operator> <call pos:start="1985:18" pos:end="1985:39"><name pos:start="1985:18" pos:end="1985:33">lock_user_string</name><argument_list pos:start="1985:34" pos:end="1985:39">(<argument pos:start="1985:35" pos:end="1985:38"><expr pos:start="1985:35" pos:end="1985:38"><name pos:start="1985:35" pos:end="1985:38">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1987:13" pos:end="1993:48"><if pos:start="1987:13" pos:end="1989:37">if <condition pos:start="1987:16" pos:end="1987:26">(<expr pos:start="1987:17" pos:end="1987:25"><operator pos:start="1987:17" pos:end="1987:17">!</operator><name pos:start="1987:18" pos:end="1987:18">p</name> <operator pos:start="1987:20" pos:end="1987:21">||</operator> <operator pos:start="1987:23" pos:end="1987:23">!</operator><name pos:start="1987:24" pos:end="1987:25">p2</name></expr>)</condition><block type="pseudo" pos:start="1989:17" pos:end="1989:37"><block_content pos:start="1989:17" pos:end="1989:37">

                <expr_stmt pos:start="1989:17" pos:end="1989:37"><expr pos:start="1989:17" pos:end="1989:36"><name pos:start="1989:17" pos:end="1989:19">ret</name> <operator pos:start="1989:21" pos:end="1989:21">=</operator> <operator pos:start="1989:23" pos:end="1989:23">-</operator><name pos:start="1989:24" pos:end="1989:36">TARGET_EFAULT</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1991:13" pos:end="1993:48">else<block type="pseudo" pos:start="1993:17" pos:end="1993:48"><block_content pos:start="1993:17" pos:end="1993:48">

                <expr_stmt pos:start="1993:17" pos:end="1993:48"><expr pos:start="1993:17" pos:end="1993:47"><name pos:start="1993:17" pos:end="1993:19">ret</name> <operator pos:start="1993:21" pos:end="1993:21">=</operator> <call pos:start="1993:23" pos:end="1993:47"><name pos:start="1993:23" pos:end="1993:31">get_errno</name><argument_list pos:start="1993:32" pos:end="1993:47">(<argument pos:start="1993:33" pos:end="1993:46"><expr pos:start="1993:33" pos:end="1993:46"><call pos:start="1993:33" pos:end="1993:46"><name pos:start="1993:33" pos:end="1993:39">symlink</name><argument_list pos:start="1993:40" pos:end="1993:46">(<argument pos:start="1993:41" pos:end="1993:41"><expr pos:start="1993:41" pos:end="1993:41"><name pos:start="1993:41" pos:end="1993:41">p</name></expr></argument>, <argument pos:start="1993:44" pos:end="1993:45"><expr pos:start="1993:44" pos:end="1993:45"><name pos:start="1993:44" pos:end="1993:45">p2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="1995:13" pos:end="1995:37"><expr pos:start="1995:13" pos:end="1995:36"><call pos:start="1995:13" pos:end="1995:36"><name pos:start="1995:13" pos:end="1995:23">unlock_user</name><argument_list pos:start="1995:24" pos:end="1995:36">(<argument pos:start="1995:25" pos:end="1995:26"><expr pos:start="1995:25" pos:end="1995:26"><name pos:start="1995:25" pos:end="1995:26">p2</name></expr></argument>, <argument pos:start="1995:29" pos:end="1995:32"><expr pos:start="1995:29" pos:end="1995:32"><name pos:start="1995:29" pos:end="1995:32">arg2</name></expr></argument>, <argument pos:start="1995:35" pos:end="1995:35"><expr pos:start="1995:35" pos:end="1995:35"><literal type="number" pos:start="1995:35" pos:end="1995:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1997:13" pos:end="1997:36"><expr pos:start="1997:13" pos:end="1997:35"><call pos:start="1997:13" pos:end="1997:35"><name pos:start="1997:13" pos:end="1997:23">unlock_user</name><argument_list pos:start="1997:24" pos:end="1997:35">(<argument pos:start="1997:25" pos:end="1997:25"><expr pos:start="1997:25" pos:end="1997:25"><name pos:start="1997:25" pos:end="1997:25">p</name></expr></argument>, <argument pos:start="1997:28" pos:end="1997:31"><expr pos:start="1997:28" pos:end="1997:31"><name pos:start="1997:28" pos:end="1997:31">arg1</name></expr></argument>, <argument pos:start="1997:34" pos:end="1997:34"><expr pos:start="1997:34" pos:end="1997:34"><literal type="number" pos:start="1997:34" pos:end="1997:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="2001:9" pos:end="2004:0">break;</break>

<cpp:if pos:start="2003:1" pos:end="2003:59">#<cpp:directive pos:start="2003:2" pos:end="2003:3">if</cpp:directive> <expr pos:start="2003:5" pos:end="2003:59"><call pos:start="2003:5" pos:end="2003:32"><name pos:start="2003:5" pos:end="2003:11">defined</name><argument_list pos:start="2003:12" pos:end="2003:32">(<argument pos:start="2003:13" pos:end="2003:31"><expr pos:start="2003:13" pos:end="2003:31"><name pos:start="2003:13" pos:end="2003:31">TARGET_NR_symlinkat</name></expr></argument>)</argument_list></call> <operator pos:start="2003:34" pos:end="2003:35">&amp;&amp;</operator> <call pos:start="2003:37" pos:end="2003:59"><name pos:start="2003:37" pos:end="2003:43">defined</name><argument_list pos:start="2003:44" pos:end="2003:59">(<argument pos:start="2003:45" pos:end="2003:58"><expr pos:start="2003:45" pos:end="2003:58"><name pos:start="2003:45" pos:end="2003:58">__NR_symlinkat</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="2005:5" pos:end="2005:29">case <expr pos:start="2005:10" pos:end="2005:28"><name pos:start="2005:10" pos:end="2005:28">TARGET_NR_symlinkat</name></expr>:</case>

        <block pos:start="2007:9" pos:end="2027:9">{<block_content pos:start="2009:13" pos:end="2025:36">

            <decl_stmt pos:start="2009:13" pos:end="2009:21"><decl pos:start="2009:13" pos:end="2009:20"><type pos:start="2009:13" pos:end="2009:18"><name pos:start="2009:13" pos:end="2009:16">void</name> <modifier pos:start="2009:18" pos:end="2009:18">*</modifier></type><name pos:start="2009:19" pos:end="2009:20">p2</name></decl>;</decl_stmt>

            <expr_stmt pos:start="2011:13" pos:end="2011:40"><expr pos:start="2011:13" pos:end="2011:39"><name pos:start="2011:13" pos:end="2011:13">p</name>  <operator pos:start="2011:16" pos:end="2011:16">=</operator> <call pos:start="2011:18" pos:end="2011:39"><name pos:start="2011:18" pos:end="2011:33">lock_user_string</name><argument_list pos:start="2011:34" pos:end="2011:39">(<argument pos:start="2011:35" pos:end="2011:38"><expr pos:start="2011:35" pos:end="2011:38"><name pos:start="2011:35" pos:end="2011:38">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2013:13" pos:end="2013:40"><expr pos:start="2013:13" pos:end="2013:39"><name pos:start="2013:13" pos:end="2013:14">p2</name> <operator pos:start="2013:16" pos:end="2013:16">=</operator> <call pos:start="2013:18" pos:end="2013:39"><name pos:start="2013:18" pos:end="2013:33">lock_user_string</name><argument_list pos:start="2013:34" pos:end="2013:39">(<argument pos:start="2013:35" pos:end="2013:38"><expr pos:start="2013:35" pos:end="2013:38"><name pos:start="2013:35" pos:end="2013:38">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2015:13" pos:end="2021:60"><if pos:start="2015:13" pos:end="2017:37">if <condition pos:start="2015:16" pos:end="2015:26">(<expr pos:start="2015:17" pos:end="2015:25"><operator pos:start="2015:17" pos:end="2015:17">!</operator><name pos:start="2015:18" pos:end="2015:18">p</name> <operator pos:start="2015:20" pos:end="2015:21">||</operator> <operator pos:start="2015:23" pos:end="2015:23">!</operator><name pos:start="2015:24" pos:end="2015:25">p2</name></expr>)</condition><block type="pseudo" pos:start="2017:17" pos:end="2017:37"><block_content pos:start="2017:17" pos:end="2017:37">

                <expr_stmt pos:start="2017:17" pos:end="2017:37"><expr pos:start="2017:17" pos:end="2017:36"><name pos:start="2017:17" pos:end="2017:19">ret</name> <operator pos:start="2017:21" pos:end="2017:21">=</operator> <operator pos:start="2017:23" pos:end="2017:23">-</operator><name pos:start="2017:24" pos:end="2017:36">TARGET_EFAULT</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="2019:13" pos:end="2021:60">else<block type="pseudo" pos:start="2021:17" pos:end="2021:60"><block_content pos:start="2021:17" pos:end="2021:60">

                <expr_stmt pos:start="2021:17" pos:end="2021:60"><expr pos:start="2021:17" pos:end="2021:59"><name pos:start="2021:17" pos:end="2021:19">ret</name> <operator pos:start="2021:21" pos:end="2021:21">=</operator> <call pos:start="2021:23" pos:end="2021:59"><name pos:start="2021:23" pos:end="2021:31">get_errno</name><argument_list pos:start="2021:32" pos:end="2021:59">(<argument pos:start="2021:33" pos:end="2021:58"><expr pos:start="2021:33" pos:end="2021:58"><call pos:start="2021:33" pos:end="2021:58"><name pos:start="2021:33" pos:end="2021:45">sys_symlinkat</name><argument_list pos:start="2021:46" pos:end="2021:58">(<argument pos:start="2021:47" pos:end="2021:47"><expr pos:start="2021:47" pos:end="2021:47"><name pos:start="2021:47" pos:end="2021:47">p</name></expr></argument>, <argument pos:start="2021:50" pos:end="2021:53"><expr pos:start="2021:50" pos:end="2021:53"><name pos:start="2021:50" pos:end="2021:53">arg2</name></expr></argument>, <argument pos:start="2021:56" pos:end="2021:57"><expr pos:start="2021:56" pos:end="2021:57"><name pos:start="2021:56" pos:end="2021:57">p2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="2023:13" pos:end="2023:37"><expr pos:start="2023:13" pos:end="2023:36"><call pos:start="2023:13" pos:end="2023:36"><name pos:start="2023:13" pos:end="2023:23">unlock_user</name><argument_list pos:start="2023:24" pos:end="2023:36">(<argument pos:start="2023:25" pos:end="2023:26"><expr pos:start="2023:25" pos:end="2023:26"><name pos:start="2023:25" pos:end="2023:26">p2</name></expr></argument>, <argument pos:start="2023:29" pos:end="2023:32"><expr pos:start="2023:29" pos:end="2023:32"><name pos:start="2023:29" pos:end="2023:32">arg3</name></expr></argument>, <argument pos:start="2023:35" pos:end="2023:35"><expr pos:start="2023:35" pos:end="2023:35"><literal type="number" pos:start="2023:35" pos:end="2023:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2025:13" pos:end="2025:36"><expr pos:start="2025:13" pos:end="2025:35"><call pos:start="2025:13" pos:end="2025:35"><name pos:start="2025:13" pos:end="2025:23">unlock_user</name><argument_list pos:start="2025:24" pos:end="2025:35">(<argument pos:start="2025:25" pos:end="2025:25"><expr pos:start="2025:25" pos:end="2025:25"><name pos:start="2025:25" pos:end="2025:25">p</name></expr></argument>, <argument pos:start="2025:28" pos:end="2025:31"><expr pos:start="2025:28" pos:end="2025:31"><name pos:start="2025:28" pos:end="2025:31">arg1</name></expr></argument>, <argument pos:start="2025:34" pos:end="2025:34"><expr pos:start="2025:34" pos:end="2025:34"><literal type="number" pos:start="2025:34" pos:end="2025:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="2029:9" pos:end="2034:0">break;</break>

<cpp:endif pos:start="2031:1" pos:end="2031:6">#<cpp:directive pos:start="2031:2" pos:end="2031:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2033:1" pos:end="2033:25">#<cpp:directive pos:start="2033:2" pos:end="2033:6">ifdef</cpp:directive> <name pos:start="2033:8" pos:end="2033:25">TARGET_NR_oldlstat</name></cpp:ifdef>

    <case pos:start="2035:5" pos:end="2035:28">case <expr pos:start="2035:10" pos:end="2035:27"><name pos:start="2035:10" pos:end="2035:27">TARGET_NR_oldlstat</name></expr>:</case>

        <goto pos:start="2037:9" pos:end="2040:0">goto <name pos:start="2037:14" pos:end="2037:26">unimplemented</name>;</goto>

<cpp:endif pos:start="2039:1" pos:end="2039:6">#<cpp:directive pos:start="2039:2" pos:end="2039:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2041:5" pos:end="2041:28">case <expr pos:start="2041:10" pos:end="2041:27"><name pos:start="2041:10" pos:end="2041:27">TARGET_NR_readlink</name></expr>:</case>

        <block pos:start="2043:9" pos:end="2079:9">{<block_content pos:start="2045:13" pos:end="2077:36">

            <decl_stmt pos:start="2045:13" pos:end="2045:28"><decl pos:start="2045:13" pos:end="2045:20"><type pos:start="2045:13" pos:end="2045:18"><name pos:start="2045:13" pos:end="2045:16">void</name> <modifier pos:start="2045:18" pos:end="2045:18">*</modifier></type><name pos:start="2045:19" pos:end="2045:20">p2</name></decl>, <decl pos:start="2045:23" pos:end="2045:27"><type ref="prev" pos:start="2045:13" pos:end="2045:18"><modifier pos:start="2045:23" pos:end="2045:23">*</modifier></type><name pos:start="2045:24" pos:end="2045:27">temp</name></decl>;</decl_stmt>

            <expr_stmt pos:start="2047:13" pos:end="2047:39"><expr pos:start="2047:13" pos:end="2047:38"><name pos:start="2047:13" pos:end="2047:13">p</name> <operator pos:start="2047:15" pos:end="2047:15">=</operator> <call pos:start="2047:17" pos:end="2047:38"><name pos:start="2047:17" pos:end="2047:32">lock_user_string</name><argument_list pos:start="2047:33" pos:end="2047:38">(<argument pos:start="2047:34" pos:end="2047:37"><expr pos:start="2047:34" pos:end="2047:37"><name pos:start="2047:34" pos:end="2047:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2049:13" pos:end="2049:56"><expr pos:start="2049:13" pos:end="2049:55"><name pos:start="2049:13" pos:end="2049:14">p2</name> <operator pos:start="2049:16" pos:end="2049:16">=</operator> <call pos:start="2049:18" pos:end="2049:55"><name pos:start="2049:18" pos:end="2049:26">lock_user</name><argument_list pos:start="2049:27" pos:end="2049:55">(<argument pos:start="2049:28" pos:end="2049:39"><expr pos:start="2049:28" pos:end="2049:39"><name pos:start="2049:28" pos:end="2049:39">VERIFY_WRITE</name></expr></argument>, <argument pos:start="2049:42" pos:end="2049:45"><expr pos:start="2049:42" pos:end="2049:45"><name pos:start="2049:42" pos:end="2049:45">arg2</name></expr></argument>, <argument pos:start="2049:48" pos:end="2049:51"><expr pos:start="2049:48" pos:end="2049:51"><name pos:start="2049:48" pos:end="2049:51">arg3</name></expr></argument>, <argument pos:start="2049:54" pos:end="2049:54"><expr pos:start="2049:54" pos:end="2049:54"><literal type="number" pos:start="2049:54" pos:end="2049:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2051:13" pos:end="2073:13"><if pos:start="2051:13" pos:end="2053:37">if <condition pos:start="2051:16" pos:end="2051:26">(<expr pos:start="2051:17" pos:end="2051:25"><operator pos:start="2051:17" pos:end="2051:17">!</operator><name pos:start="2051:18" pos:end="2051:18">p</name> <operator pos:start="2051:20" pos:end="2051:21">||</operator> <operator pos:start="2051:23" pos:end="2051:23">!</operator><name pos:start="2051:24" pos:end="2051:25">p2</name></expr>)</condition><block type="pseudo" pos:start="2053:17" pos:end="2053:37"><block_content pos:start="2053:17" pos:end="2053:37">

                <expr_stmt pos:start="2053:17" pos:end="2053:37"><expr pos:start="2053:17" pos:end="2053:36"><name pos:start="2053:17" pos:end="2053:19">ret</name> <operator pos:start="2053:21" pos:end="2053:21">=</operator> <operator pos:start="2053:23" pos:end="2053:23">-</operator><name pos:start="2053:24" pos:end="2053:36">TARGET_EFAULT</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="2055:13" pos:end="2073:13">else <block pos:start="2055:18" pos:end="2073:13">{<block_content pos:start="2057:17" pos:end="2071:65">

                <if_stmt pos:start="2057:17" pos:end="2071:65"><if pos:start="2057:17" pos:end="2067:21">if <condition pos:start="2057:20" pos:end="2057:72">(<expr pos:start="2057:21" pos:end="2057:71"><call pos:start="2057:21" pos:end="2057:66"><name pos:start="2057:21" pos:end="2057:27">strncmp</name><argument_list pos:start="2057:28" pos:end="2057:66">(<argument pos:start="2057:29" pos:end="2057:43"><expr pos:start="2057:29" pos:end="2057:43"><operator pos:start="2057:29" pos:end="2057:29">(</operator><specifier pos:start="2057:30" pos:end="2057:34">const</specifier> <name pos:start="2057:36" pos:end="2057:39">char</name> <operator pos:start="2057:41" pos:end="2057:41">*</operator><operator pos:start="2057:42" pos:end="2057:42">)</operator><name pos:start="2057:43" pos:end="2057:43">p</name></expr></argument>, <argument pos:start="2057:46" pos:end="2057:61"><expr pos:start="2057:46" pos:end="2057:61"><literal type="string" pos:start="2057:46" pos:end="2057:61">"/proc/self/exe"</literal></expr></argument>, <argument pos:start="2057:64" pos:end="2057:65"><expr pos:start="2057:64" pos:end="2057:65"><literal type="number" pos:start="2057:64" pos:end="2057:65">14</literal></expr></argument>)</argument_list></call> <operator pos:start="2057:68" pos:end="2057:69">==</operator> <literal type="number" pos:start="2057:71" pos:end="2057:71">0</literal></expr>)</condition> <block pos:start="2057:74" pos:end="2067:21">{<block_content pos:start="2059:21" pos:end="2065:59">

                    <decl_stmt pos:start="2059:21" pos:end="2059:40"><decl pos:start="2059:21" pos:end="2059:39"><type pos:start="2059:21" pos:end="2059:24"><name pos:start="2059:21" pos:end="2059:24">char</name></type> <name pos:start="2059:26" pos:end="2059:39"><name pos:start="2059:26" pos:end="2059:29">real</name><index pos:start="2059:30" pos:end="2059:39">[<expr pos:start="2059:31" pos:end="2059:38"><name pos:start="2059:31" pos:end="2059:38">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

                    <expr_stmt pos:start="2061:21" pos:end="2061:52"><expr pos:start="2061:21" pos:end="2061:51"><name pos:start="2061:21" pos:end="2061:24">temp</name> <operator pos:start="2061:26" pos:end="2061:26">=</operator> <call pos:start="2061:28" pos:end="2061:51"><name pos:start="2061:28" pos:end="2061:35">realpath</name><argument_list pos:start="2061:36" pos:end="2061:51">(<argument pos:start="2061:37" pos:end="2061:45"><expr pos:start="2061:37" pos:end="2061:45"><name pos:start="2061:37" pos:end="2061:45">exec_path</name></expr></argument>,<argument pos:start="2061:47" pos:end="2061:50"><expr pos:start="2061:47" pos:end="2061:50"><name pos:start="2061:47" pos:end="2061:50">real</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2063:21" pos:end="2063:71"><expr pos:start="2063:21" pos:end="2063:69"><name pos:start="2063:21" pos:end="2063:23">ret</name> <operator pos:start="2063:25" pos:end="2063:25">=</operator> <ternary pos:start="2063:27" pos:end="2063:69"><condition pos:start="2063:27" pos:end="2063:40"><expr pos:start="2063:27" pos:end="2063:38"><operator pos:start="2063:27" pos:end="2063:27">(</operator><name pos:start="2063:28" pos:end="2063:31">temp</name><operator pos:start="2063:32" pos:end="2063:33">==</operator><name pos:start="2063:34" pos:end="2063:37">NULL</name><operator pos:start="2063:38" pos:end="2063:38">)</operator></expr> ?</condition><then pos:start="2063:42" pos:end="2063:54"> <expr pos:start="2063:42" pos:end="2063:54"><call pos:start="2063:42" pos:end="2063:54"><name pos:start="2063:42" pos:end="2063:50">get_errno</name><argument_list pos:start="2063:51" pos:end="2063:54">(<argument pos:start="2063:52" pos:end="2063:53"><expr pos:start="2063:52" pos:end="2063:53"><operator pos:start="2063:52" pos:end="2063:52">-</operator><literal type="number" pos:start="2063:53" pos:end="2063:53">1</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="2063:56" pos:end="2063:69">: <expr pos:start="2063:58" pos:end="2063:69"><call pos:start="2063:58" pos:end="2063:69"><name pos:start="2063:58" pos:end="2063:63">strlen</name><argument_list pos:start="2063:64" pos:end="2063:69">(<argument pos:start="2063:65" pos:end="2063:68"><expr pos:start="2063:65" pos:end="2063:68"><name pos:start="2063:65" pos:end="2063:68">real</name></expr></argument>)</argument_list></call></expr></else></ternary></expr> ;</expr_stmt>

                    <expr_stmt pos:start="2065:21" pos:end="2065:59"><expr pos:start="2065:21" pos:end="2065:58"><call pos:start="2065:21" pos:end="2065:58"><name pos:start="2065:21" pos:end="2065:28">snprintf</name><argument_list pos:start="2065:29" pos:end="2065:58">(<argument pos:start="2065:30" pos:end="2065:39"><expr pos:start="2065:30" pos:end="2065:39"><operator pos:start="2065:30" pos:end="2065:30">(</operator><name pos:start="2065:31" pos:end="2065:34">char</name> <operator pos:start="2065:36" pos:end="2065:36">*</operator><operator pos:start="2065:37" pos:end="2065:37">)</operator><name pos:start="2065:38" pos:end="2065:39">p2</name></expr></argument>, <argument pos:start="2065:42" pos:end="2065:45"><expr pos:start="2065:42" pos:end="2065:45"><name pos:start="2065:42" pos:end="2065:45">arg3</name></expr></argument>, <argument pos:start="2065:48" pos:end="2065:51"><expr pos:start="2065:48" pos:end="2065:51"><literal type="string" pos:start="2065:48" pos:end="2065:51">"%s"</literal></expr></argument>, <argument pos:start="2065:54" pos:end="2065:57"><expr pos:start="2065:54" pos:end="2065:57"><name pos:start="2065:54" pos:end="2065:57">real</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if>

                <else pos:start="2069:17" pos:end="2071:65">else<block type="pseudo" pos:start="2071:21" pos:end="2071:65"><block_content pos:start="2071:21" pos:end="2071:65">

                    <expr_stmt pos:start="2071:21" pos:end="2071:65"><expr pos:start="2071:21" pos:end="2071:64"><name pos:start="2071:21" pos:end="2071:23">ret</name> <operator pos:start="2071:25" pos:end="2071:25">=</operator> <call pos:start="2071:27" pos:end="2071:64"><name pos:start="2071:27" pos:end="2071:35">get_errno</name><argument_list pos:start="2071:36" pos:end="2071:64">(<argument pos:start="2071:37" pos:end="2071:63"><expr pos:start="2071:37" pos:end="2071:63"><call pos:start="2071:37" pos:end="2071:63"><name pos:start="2071:37" pos:end="2071:44">readlink</name><argument_list pos:start="2071:45" pos:end="2071:63">(<argument pos:start="2071:46" pos:end="2071:52"><expr pos:start="2071:46" pos:end="2071:52"><call pos:start="2071:46" pos:end="2071:52"><name pos:start="2071:46" pos:end="2071:49">path</name><argument_list pos:start="2071:50" pos:end="2071:52">(<argument pos:start="2071:51" pos:end="2071:51"><expr pos:start="2071:51" pos:end="2071:51"><name pos:start="2071:51" pos:end="2071:51">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2071:55" pos:end="2071:56"><expr pos:start="2071:55" pos:end="2071:56"><name pos:start="2071:55" pos:end="2071:56">p2</name></expr></argument>, <argument pos:start="2071:59" pos:end="2071:62"><expr pos:start="2071:59" pos:end="2071:62"><name pos:start="2071:59" pos:end="2071:62">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="2075:13" pos:end="2075:39"><expr pos:start="2075:13" pos:end="2075:38"><call pos:start="2075:13" pos:end="2075:38"><name pos:start="2075:13" pos:end="2075:23">unlock_user</name><argument_list pos:start="2075:24" pos:end="2075:38">(<argument pos:start="2075:25" pos:end="2075:26"><expr pos:start="2075:25" pos:end="2075:26"><name pos:start="2075:25" pos:end="2075:26">p2</name></expr></argument>, <argument pos:start="2075:29" pos:end="2075:32"><expr pos:start="2075:29" pos:end="2075:32"><name pos:start="2075:29" pos:end="2075:32">arg2</name></expr></argument>, <argument pos:start="2075:35" pos:end="2075:37"><expr pos:start="2075:35" pos:end="2075:37"><name pos:start="2075:35" pos:end="2075:37">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2077:13" pos:end="2077:36"><expr pos:start="2077:13" pos:end="2077:35"><call pos:start="2077:13" pos:end="2077:35"><name pos:start="2077:13" pos:end="2077:23">unlock_user</name><argument_list pos:start="2077:24" pos:end="2077:35">(<argument pos:start="2077:25" pos:end="2077:25"><expr pos:start="2077:25" pos:end="2077:25"><name pos:start="2077:25" pos:end="2077:25">p</name></expr></argument>, <argument pos:start="2077:28" pos:end="2077:31"><expr pos:start="2077:28" pos:end="2077:31"><name pos:start="2077:28" pos:end="2077:31">arg1</name></expr></argument>, <argument pos:start="2077:34" pos:end="2077:34"><expr pos:start="2077:34" pos:end="2077:34"><literal type="number" pos:start="2077:34" pos:end="2077:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="2081:9" pos:end="2084:0">break;</break>

<cpp:if pos:start="2083:1" pos:end="2083:61">#<cpp:directive pos:start="2083:2" pos:end="2083:3">if</cpp:directive> <expr pos:start="2083:5" pos:end="2083:61"><call pos:start="2083:5" pos:end="2083:33"><name pos:start="2083:5" pos:end="2083:11">defined</name><argument_list pos:start="2083:12" pos:end="2083:33">(<argument pos:start="2083:13" pos:end="2083:32"><expr pos:start="2083:13" pos:end="2083:32"><name pos:start="2083:13" pos:end="2083:32">TARGET_NR_readlinkat</name></expr></argument>)</argument_list></call> <operator pos:start="2083:35" pos:end="2083:36">&amp;&amp;</operator> <call pos:start="2083:38" pos:end="2083:61"><name pos:start="2083:38" pos:end="2083:44">defined</name><argument_list pos:start="2083:45" pos:end="2083:61">(<argument pos:start="2083:46" pos:end="2083:60"><expr pos:start="2083:46" pos:end="2083:60"><name pos:start="2083:46" pos:end="2083:60">__NR_readlinkat</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="2085:5" pos:end="2085:30">case <expr pos:start="2085:10" pos:end="2085:29"><name pos:start="2085:10" pos:end="2085:29">TARGET_NR_readlinkat</name></expr>:</case>

        <block pos:start="2087:9" pos:end="2107:9">{<block_content pos:start="2089:13" pos:end="2105:36">

            <decl_stmt pos:start="2089:13" pos:end="2089:21"><decl pos:start="2089:13" pos:end="2089:20"><type pos:start="2089:13" pos:end="2089:18"><name pos:start="2089:13" pos:end="2089:16">void</name> <modifier pos:start="2089:18" pos:end="2089:18">*</modifier></type><name pos:start="2089:19" pos:end="2089:20">p2</name></decl>;</decl_stmt>

            <expr_stmt pos:start="2091:13" pos:end="2091:40"><expr pos:start="2091:13" pos:end="2091:39"><name pos:start="2091:13" pos:end="2091:13">p</name>  <operator pos:start="2091:16" pos:end="2091:16">=</operator> <call pos:start="2091:18" pos:end="2091:39"><name pos:start="2091:18" pos:end="2091:33">lock_user_string</name><argument_list pos:start="2091:34" pos:end="2091:39">(<argument pos:start="2091:35" pos:end="2091:38"><expr pos:start="2091:35" pos:end="2091:38"><name pos:start="2091:35" pos:end="2091:38">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2093:13" pos:end="2093:56"><expr pos:start="2093:13" pos:end="2093:55"><name pos:start="2093:13" pos:end="2093:14">p2</name> <operator pos:start="2093:16" pos:end="2093:16">=</operator> <call pos:start="2093:18" pos:end="2093:55"><name pos:start="2093:18" pos:end="2093:26">lock_user</name><argument_list pos:start="2093:27" pos:end="2093:55">(<argument pos:start="2093:28" pos:end="2093:39"><expr pos:start="2093:28" pos:end="2093:39"><name pos:start="2093:28" pos:end="2093:39">VERIFY_WRITE</name></expr></argument>, <argument pos:start="2093:42" pos:end="2093:45"><expr pos:start="2093:42" pos:end="2093:45"><name pos:start="2093:42" pos:end="2093:45">arg3</name></expr></argument>, <argument pos:start="2093:48" pos:end="2093:51"><expr pos:start="2093:48" pos:end="2093:51"><name pos:start="2093:48" pos:end="2093:51">arg4</name></expr></argument>, <argument pos:start="2093:54" pos:end="2093:54"><expr pos:start="2093:54" pos:end="2093:54"><literal type="number" pos:start="2093:54" pos:end="2093:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2095:13" pos:end="2101:73"><if pos:start="2095:13" pos:end="2097:37">if <condition pos:start="2095:16" pos:end="2095:26">(<expr pos:start="2095:17" pos:end="2095:25"><operator pos:start="2095:17" pos:end="2095:17">!</operator><name pos:start="2095:18" pos:end="2095:18">p</name> <operator pos:start="2095:20" pos:end="2095:21">||</operator> <operator pos:start="2095:23" pos:end="2095:23">!</operator><name pos:start="2095:24" pos:end="2095:25">p2</name></expr>)</condition><block type="pseudo" pos:start="2097:17" pos:end="2097:37"><block_content pos:start="2097:17" pos:end="2097:37">

        	<expr_stmt pos:start="2097:17" pos:end="2097:37"><expr pos:start="2097:17" pos:end="2097:36"><name pos:start="2097:17" pos:end="2097:19">ret</name> <operator pos:start="2097:21" pos:end="2097:21">=</operator> <operator pos:start="2097:23" pos:end="2097:23">-</operator><name pos:start="2097:24" pos:end="2097:36">TARGET_EFAULT</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="2099:13" pos:end="2101:73">else<block type="pseudo" pos:start="2101:17" pos:end="2101:73"><block_content pos:start="2101:17" pos:end="2101:73">

                <expr_stmt pos:start="2101:17" pos:end="2101:73"><expr pos:start="2101:17" pos:end="2101:72"><name pos:start="2101:17" pos:end="2101:19">ret</name> <operator pos:start="2101:21" pos:end="2101:21">=</operator> <call pos:start="2101:23" pos:end="2101:72"><name pos:start="2101:23" pos:end="2101:31">get_errno</name><argument_list pos:start="2101:32" pos:end="2101:72">(<argument pos:start="2101:33" pos:end="2101:71"><expr pos:start="2101:33" pos:end="2101:71"><call pos:start="2101:33" pos:end="2101:71"><name pos:start="2101:33" pos:end="2101:46">sys_readlinkat</name><argument_list pos:start="2101:47" pos:end="2101:71">(<argument pos:start="2101:48" pos:end="2101:51"><expr pos:start="2101:48" pos:end="2101:51"><name pos:start="2101:48" pos:end="2101:51">arg1</name></expr></argument>, <argument pos:start="2101:54" pos:end="2101:60"><expr pos:start="2101:54" pos:end="2101:60"><call pos:start="2101:54" pos:end="2101:60"><name pos:start="2101:54" pos:end="2101:57">path</name><argument_list pos:start="2101:58" pos:end="2101:60">(<argument pos:start="2101:59" pos:end="2101:59"><expr pos:start="2101:59" pos:end="2101:59"><name pos:start="2101:59" pos:end="2101:59">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2101:63" pos:end="2101:64"><expr pos:start="2101:63" pos:end="2101:64"><name pos:start="2101:63" pos:end="2101:64">p2</name></expr></argument>, <argument pos:start="2101:67" pos:end="2101:70"><expr pos:start="2101:67" pos:end="2101:70"><name pos:start="2101:67" pos:end="2101:70">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="2103:13" pos:end="2103:39"><expr pos:start="2103:13" pos:end="2103:38"><call pos:start="2103:13" pos:end="2103:38"><name pos:start="2103:13" pos:end="2103:23">unlock_user</name><argument_list pos:start="2103:24" pos:end="2103:38">(<argument pos:start="2103:25" pos:end="2103:26"><expr pos:start="2103:25" pos:end="2103:26"><name pos:start="2103:25" pos:end="2103:26">p2</name></expr></argument>, <argument pos:start="2103:29" pos:end="2103:32"><expr pos:start="2103:29" pos:end="2103:32"><name pos:start="2103:29" pos:end="2103:32">arg3</name></expr></argument>, <argument pos:start="2103:35" pos:end="2103:37"><expr pos:start="2103:35" pos:end="2103:37"><name pos:start="2103:35" pos:end="2103:37">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2105:13" pos:end="2105:36"><expr pos:start="2105:13" pos:end="2105:35"><call pos:start="2105:13" pos:end="2105:35"><name pos:start="2105:13" pos:end="2105:23">unlock_user</name><argument_list pos:start="2105:24" pos:end="2105:35">(<argument pos:start="2105:25" pos:end="2105:25"><expr pos:start="2105:25" pos:end="2105:25"><name pos:start="2105:25" pos:end="2105:25">p</name></expr></argument>, <argument pos:start="2105:28" pos:end="2105:31"><expr pos:start="2105:28" pos:end="2105:31"><name pos:start="2105:28" pos:end="2105:31">arg2</name></expr></argument>, <argument pos:start="2105:34" pos:end="2105:34"><expr pos:start="2105:34" pos:end="2105:34"><literal type="number" pos:start="2105:34" pos:end="2105:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="2109:9" pos:end="2114:0">break;</break>

<cpp:endif pos:start="2111:1" pos:end="2111:6">#<cpp:directive pos:start="2111:2" pos:end="2111:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2113:1" pos:end="2113:23">#<cpp:directive pos:start="2113:2" pos:end="2113:6">ifdef</cpp:directive> <name pos:start="2113:8" pos:end="2113:23">TARGET_NR_uselib</name></cpp:ifdef>

    <case pos:start="2115:5" pos:end="2115:26">case <expr pos:start="2115:10" pos:end="2115:25"><name pos:start="2115:10" pos:end="2115:25">TARGET_NR_uselib</name></expr>:</case>

        <goto pos:start="2117:9" pos:end="2122:0">goto <name pos:start="2117:14" pos:end="2117:26">unimplemented</name>;</goto>

<cpp:endif pos:start="2119:1" pos:end="2119:6">#<cpp:directive pos:start="2119:2" pos:end="2119:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2121:1" pos:end="2121:23">#<cpp:directive pos:start="2121:2" pos:end="2121:6">ifdef</cpp:directive> <name pos:start="2121:8" pos:end="2121:23">TARGET_NR_swapon</name></cpp:ifdef>

    <case pos:start="2123:5" pos:end="2123:26">case <expr pos:start="2123:10" pos:end="2123:25"><name pos:start="2123:10" pos:end="2123:25">TARGET_NR_swapon</name></expr>:</case>

        <if_stmt pos:start="2125:9" pos:end="2127:24"><if pos:start="2125:9" pos:end="2127:24">if <condition pos:start="2125:12" pos:end="2125:42">(<expr pos:start="2125:13" pos:end="2125:41"><operator pos:start="2125:13" pos:end="2125:13">!</operator><operator pos:start="2125:14" pos:end="2125:14">(</operator><name pos:start="2125:15" pos:end="2125:15">p</name> <operator pos:start="2125:17" pos:end="2125:17">=</operator> <call pos:start="2125:19" pos:end="2125:40"><name pos:start="2125:19" pos:end="2125:34">lock_user_string</name><argument_list pos:start="2125:35" pos:end="2125:40">(<argument pos:start="2125:36" pos:end="2125:39"><expr pos:start="2125:36" pos:end="2125:39"><name pos:start="2125:36" pos:end="2125:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="2125:41" pos:end="2125:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2127:13" pos:end="2127:24"><block_content pos:start="2127:13" pos:end="2127:24">

            <goto pos:start="2127:13" pos:end="2127:24">goto <name pos:start="2127:18" pos:end="2127:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="2129:9" pos:end="2129:41"><expr pos:start="2129:9" pos:end="2129:40"><name pos:start="2129:9" pos:end="2129:11">ret</name> <operator pos:start="2129:13" pos:end="2129:13">=</operator> <call pos:start="2129:15" pos:end="2129:40"><name pos:start="2129:15" pos:end="2129:23">get_errno</name><argument_list pos:start="2129:24" pos:end="2129:40">(<argument pos:start="2129:25" pos:end="2129:39"><expr pos:start="2129:25" pos:end="2129:39"><call pos:start="2129:25" pos:end="2129:39"><name pos:start="2129:25" pos:end="2129:30">swapon</name><argument_list pos:start="2129:31" pos:end="2129:39">(<argument pos:start="2129:32" pos:end="2129:32"><expr pos:start="2129:32" pos:end="2129:32"><name pos:start="2129:32" pos:end="2129:32">p</name></expr></argument>, <argument pos:start="2129:35" pos:end="2129:38"><expr pos:start="2129:35" pos:end="2129:38"><name pos:start="2129:35" pos:end="2129:38">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2131:9" pos:end="2131:32"><expr pos:start="2131:9" pos:end="2131:31"><call pos:start="2131:9" pos:end="2131:31"><name pos:start="2131:9" pos:end="2131:19">unlock_user</name><argument_list pos:start="2131:20" pos:end="2131:31">(<argument pos:start="2131:21" pos:end="2131:21"><expr pos:start="2131:21" pos:end="2131:21"><name pos:start="2131:21" pos:end="2131:21">p</name></expr></argument>, <argument pos:start="2131:24" pos:end="2131:27"><expr pos:start="2131:24" pos:end="2131:27"><name pos:start="2131:24" pos:end="2131:27">arg1</name></expr></argument>, <argument pos:start="2131:30" pos:end="2131:30"><expr pos:start="2131:30" pos:end="2131:30"><literal type="number" pos:start="2131:30" pos:end="2131:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2133:9" pos:end="2136:0">break;</break>

<cpp:endif pos:start="2135:1" pos:end="2135:6">#<cpp:directive pos:start="2135:2" pos:end="2135:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2137:5" pos:end="2137:26">case <expr pos:start="2137:10" pos:end="2137:25"><name pos:start="2137:10" pos:end="2137:25">TARGET_NR_reboot</name></expr>:</case>

        <goto pos:start="2139:9" pos:end="2142:0">goto <name pos:start="2139:14" pos:end="2139:26">unimplemented</name>;</goto>

<cpp:ifdef pos:start="2141:1" pos:end="2141:24">#<cpp:directive pos:start="2141:2" pos:end="2141:6">ifdef</cpp:directive> <name pos:start="2141:8" pos:end="2141:24">TARGET_NR_readdir</name></cpp:ifdef>

    <case pos:start="2143:5" pos:end="2143:27">case <expr pos:start="2143:10" pos:end="2143:26"><name pos:start="2143:10" pos:end="2143:26">TARGET_NR_readdir</name></expr>:</case>

        <goto pos:start="2145:9" pos:end="2150:0">goto <name pos:start="2145:14" pos:end="2145:26">unimplemented</name>;</goto>

<cpp:endif pos:start="2147:1" pos:end="2147:6">#<cpp:directive pos:start="2147:2" pos:end="2147:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2149:1" pos:end="2149:21">#<cpp:directive pos:start="2149:2" pos:end="2149:6">ifdef</cpp:directive> <name pos:start="2149:8" pos:end="2149:21">TARGET_NR_mmap</name></cpp:ifdef>

    <case pos:start="2151:5" pos:end="2154:0">case <expr pos:start="2151:10" pos:end="2151:23"><name pos:start="2151:10" pos:end="2151:23">TARGET_NR_mmap</name></expr>:</case>

<cpp:if pos:start="2153:1" pos:end="2153:152">#<cpp:directive pos:start="2153:2" pos:end="2153:3">if</cpp:directive> <expr pos:start="2153:5" pos:end="2153:152"><operator pos:start="2153:5" pos:end="2153:5">(</operator><call pos:start="2153:6" pos:end="2153:25"><name pos:start="2153:6" pos:end="2153:12">defined</name><argument_list pos:start="2153:13" pos:end="2153:25">(<argument pos:start="2153:14" pos:end="2153:24"><expr pos:start="2153:14" pos:end="2153:24"><name pos:start="2153:14" pos:end="2153:24">TARGET_I386</name></expr></argument>)</argument_list></call> <operator pos:start="2153:27" pos:end="2153:28">&amp;&amp;</operator> <call pos:start="2153:30" pos:end="2153:50"><name pos:start="2153:30" pos:end="2153:36">defined</name><argument_list pos:start="2153:37" pos:end="2153:50">(<argument pos:start="2153:38" pos:end="2153:49"><expr pos:start="2153:38" pos:end="2153:49"><name pos:start="2153:38" pos:end="2153:49">TARGET_ABI32</name></expr></argument>)</argument_list></call><operator pos:start="2153:51" pos:end="2153:51">)</operator> <operator pos:start="2153:53" pos:end="2153:54">||</operator> <call pos:start="2153:56" pos:end="2153:74"><name pos:start="2153:56" pos:end="2153:62">defined</name><argument_list pos:start="2153:63" pos:end="2153:74">(<argument pos:start="2153:64" pos:end="2153:73"><expr pos:start="2153:64" pos:end="2153:73"><name pos:start="2153:64" pos:end="2153:73">TARGET_ARM</name></expr></argument>)</argument_list></call> <operator pos:start="2153:76" pos:end="2153:77">||</operator> <call pos:start="2153:79" pos:end="2153:98"><name pos:start="2153:79" pos:end="2153:85">defined</name><argument_list pos:start="2153:86" pos:end="2153:98">(<argument pos:start="2153:87" pos:end="2153:97"><expr pos:start="2153:87" pos:end="2153:97"><name pos:start="2153:87" pos:end="2153:97">TARGET_M68K</name></expr></argument>)</argument_list></call> <operator pos:start="2153:100" pos:end="2153:101">||</operator> <call pos:start="2153:103" pos:end="2153:122"><name pos:start="2153:103" pos:end="2153:109">defined</name><argument_list pos:start="2153:110" pos:end="2153:122">(<argument pos:start="2153:111" pos:end="2153:121"><expr pos:start="2153:111" pos:end="2153:121"><name pos:start="2153:111" pos:end="2153:121">TARGET_CRIS</name></expr></argument>)</argument_list></call> <operator pos:start="2153:124" pos:end="2153:125">||</operator> <call pos:start="2153:127" pos:end="2153:152"><name pos:start="2153:127" pos:end="2153:133">defined</name><argument_list pos:start="2153:134" pos:end="2153:152">(<argument pos:start="2153:135" pos:end="2153:151"><expr pos:start="2153:135" pos:end="2153:151"><name pos:start="2153:135" pos:end="2153:151">TARGET_MICROBLAZE</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <block pos:start="2155:9" pos:end="2188:0">{<block_content pos:start="2157:13" pos:end="2183:49">

            <decl_stmt pos:start="2157:13" pos:end="2157:25"><decl pos:start="2157:13" pos:end="2157:24"><type pos:start="2157:13" pos:end="2157:23"><name pos:start="2157:13" pos:end="2157:21">abi_ulong</name> <modifier pos:start="2157:23" pos:end="2157:23">*</modifier></type><name pos:start="2157:24" pos:end="2157:24">v</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2159:13" pos:end="2159:45"><decl pos:start="2159:13" pos:end="2159:24"><type pos:start="2159:13" pos:end="2159:21"><name pos:start="2159:13" pos:end="2159:21">abi_ulong</name></type> <name pos:start="2159:23" pos:end="2159:24">v1</name></decl>, <decl pos:start="2159:27" pos:end="2159:28"><type ref="prev" pos:start="2159:13" pos:end="2159:21"/><name pos:start="2159:27" pos:end="2159:28">v2</name></decl>, <decl pos:start="2159:31" pos:end="2159:32"><type ref="prev" pos:start="2159:13" pos:end="2159:21"/><name pos:start="2159:31" pos:end="2159:32">v3</name></decl>, <decl pos:start="2159:35" pos:end="2159:36"><type ref="prev" pos:start="2159:13" pos:end="2159:21"/><name pos:start="2159:35" pos:end="2159:36">v4</name></decl>, <decl pos:start="2159:39" pos:end="2159:40"><type ref="prev" pos:start="2159:13" pos:end="2159:21"/><name pos:start="2159:39" pos:end="2159:40">v5</name></decl>, <decl pos:start="2159:43" pos:end="2159:44"><type ref="prev" pos:start="2159:13" pos:end="2159:21"/><name pos:start="2159:43" pos:end="2159:44">v6</name></decl>;</decl_stmt>

            <if_stmt pos:start="2161:13" pos:end="2163:28"><if pos:start="2161:13" pos:end="2163:28">if <condition pos:start="2161:16" pos:end="2161:78">(<expr pos:start="2161:17" pos:end="2161:77"><operator pos:start="2161:17" pos:end="2161:17">!</operator><operator pos:start="2161:18" pos:end="2161:18">(</operator><name pos:start="2161:19" pos:end="2161:19">v</name> <operator pos:start="2161:21" pos:end="2161:21">=</operator> <call pos:start="2161:23" pos:end="2161:76"><name pos:start="2161:23" pos:end="2161:31">lock_user</name><argument_list pos:start="2161:32" pos:end="2161:76">(<argument pos:start="2161:33" pos:end="2161:43"><expr pos:start="2161:33" pos:end="2161:43"><name pos:start="2161:33" pos:end="2161:43">VERIFY_READ</name></expr></argument>, <argument pos:start="2161:46" pos:end="2161:49"><expr pos:start="2161:46" pos:end="2161:49"><name pos:start="2161:46" pos:end="2161:49">arg1</name></expr></argument>, <argument pos:start="2161:52" pos:end="2161:72"><expr pos:start="2161:52" pos:end="2161:72"><literal type="number" pos:start="2161:52" pos:end="2161:52">6</literal> <operator pos:start="2161:54" pos:end="2161:54">*</operator> <sizeof pos:start="2161:56" pos:end="2161:72">sizeof<argument_list pos:start="2161:62" pos:end="2161:72">(<argument pos:start="2161:63" pos:end="2161:71"><expr pos:start="2161:63" pos:end="2161:71"><name pos:start="2161:63" pos:end="2161:71">abi_ulong</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="2161:75" pos:end="2161:75"><expr pos:start="2161:75" pos:end="2161:75"><literal type="number" pos:start="2161:75" pos:end="2161:75">1</literal></expr></argument>)</argument_list></call><operator pos:start="2161:77" pos:end="2161:77">)</operator></expr>)</condition><block type="pseudo" pos:start="2163:17" pos:end="2163:28"><block_content pos:start="2163:17" pos:end="2163:28">

                <goto pos:start="2163:17" pos:end="2163:28">goto <name pos:start="2163:22" pos:end="2163:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="2165:13" pos:end="2165:30"><expr pos:start="2165:13" pos:end="2165:29"><name pos:start="2165:13" pos:end="2165:14">v1</name> <operator pos:start="2165:16" pos:end="2165:16">=</operator> <call pos:start="2165:18" pos:end="2165:29"><name pos:start="2165:18" pos:end="2165:23">tswapl</name><argument_list pos:start="2165:24" pos:end="2165:29">(<argument pos:start="2165:25" pos:end="2165:28"><expr pos:start="2165:25" pos:end="2165:28"><name pos:start="2165:25" pos:end="2165:28"><name pos:start="2165:25" pos:end="2165:25">v</name><index pos:start="2165:26" pos:end="2165:28">[<expr pos:start="2165:27" pos:end="2165:27"><literal type="number" pos:start="2165:27" pos:end="2165:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2167:13" pos:end="2167:30"><expr pos:start="2167:13" pos:end="2167:29"><name pos:start="2167:13" pos:end="2167:14">v2</name> <operator pos:start="2167:16" pos:end="2167:16">=</operator> <call pos:start="2167:18" pos:end="2167:29"><name pos:start="2167:18" pos:end="2167:23">tswapl</name><argument_list pos:start="2167:24" pos:end="2167:29">(<argument pos:start="2167:25" pos:end="2167:28"><expr pos:start="2167:25" pos:end="2167:28"><name pos:start="2167:25" pos:end="2167:28"><name pos:start="2167:25" pos:end="2167:25">v</name><index pos:start="2167:26" pos:end="2167:28">[<expr pos:start="2167:27" pos:end="2167:27"><literal type="number" pos:start="2167:27" pos:end="2167:27">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2169:13" pos:end="2169:30"><expr pos:start="2169:13" pos:end="2169:29"><name pos:start="2169:13" pos:end="2169:14">v3</name> <operator pos:start="2169:16" pos:end="2169:16">=</operator> <call pos:start="2169:18" pos:end="2169:29"><name pos:start="2169:18" pos:end="2169:23">tswapl</name><argument_list pos:start="2169:24" pos:end="2169:29">(<argument pos:start="2169:25" pos:end="2169:28"><expr pos:start="2169:25" pos:end="2169:28"><name pos:start="2169:25" pos:end="2169:28"><name pos:start="2169:25" pos:end="2169:25">v</name><index pos:start="2169:26" pos:end="2169:28">[<expr pos:start="2169:27" pos:end="2169:27"><literal type="number" pos:start="2169:27" pos:end="2169:27">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2171:13" pos:end="2171:30"><expr pos:start="2171:13" pos:end="2171:29"><name pos:start="2171:13" pos:end="2171:14">v4</name> <operator pos:start="2171:16" pos:end="2171:16">=</operator> <call pos:start="2171:18" pos:end="2171:29"><name pos:start="2171:18" pos:end="2171:23">tswapl</name><argument_list pos:start="2171:24" pos:end="2171:29">(<argument pos:start="2171:25" pos:end="2171:28"><expr pos:start="2171:25" pos:end="2171:28"><name pos:start="2171:25" pos:end="2171:28"><name pos:start="2171:25" pos:end="2171:25">v</name><index pos:start="2171:26" pos:end="2171:28">[<expr pos:start="2171:27" pos:end="2171:27"><literal type="number" pos:start="2171:27" pos:end="2171:27">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2173:13" pos:end="2173:30"><expr pos:start="2173:13" pos:end="2173:29"><name pos:start="2173:13" pos:end="2173:14">v5</name> <operator pos:start="2173:16" pos:end="2173:16">=</operator> <call pos:start="2173:18" pos:end="2173:29"><name pos:start="2173:18" pos:end="2173:23">tswapl</name><argument_list pos:start="2173:24" pos:end="2173:29">(<argument pos:start="2173:25" pos:end="2173:28"><expr pos:start="2173:25" pos:end="2173:28"><name pos:start="2173:25" pos:end="2173:28"><name pos:start="2173:25" pos:end="2173:25">v</name><index pos:start="2173:26" pos:end="2173:28">[<expr pos:start="2173:27" pos:end="2173:27"><literal type="number" pos:start="2173:27" pos:end="2173:27">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2175:13" pos:end="2175:30"><expr pos:start="2175:13" pos:end="2175:29"><name pos:start="2175:13" pos:end="2175:14">v6</name> <operator pos:start="2175:16" pos:end="2175:16">=</operator> <call pos:start="2175:18" pos:end="2175:29"><name pos:start="2175:18" pos:end="2175:23">tswapl</name><argument_list pos:start="2175:24" pos:end="2175:29">(<argument pos:start="2175:25" pos:end="2175:28"><expr pos:start="2175:25" pos:end="2175:28"><name pos:start="2175:25" pos:end="2175:28"><name pos:start="2175:25" pos:end="2175:25">v</name><index pos:start="2175:26" pos:end="2175:28">[<expr pos:start="2175:27" pos:end="2175:27"><literal type="number" pos:start="2175:27" pos:end="2175:27">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2177:13" pos:end="2177:36"><expr pos:start="2177:13" pos:end="2177:35"><call pos:start="2177:13" pos:end="2177:35"><name pos:start="2177:13" pos:end="2177:23">unlock_user</name><argument_list pos:start="2177:24" pos:end="2177:35">(<argument pos:start="2177:25" pos:end="2177:25"><expr pos:start="2177:25" pos:end="2177:25"><name pos:start="2177:25" pos:end="2177:25">v</name></expr></argument>, <argument pos:start="2177:28" pos:end="2177:31"><expr pos:start="2177:28" pos:end="2177:31"><name pos:start="2177:28" pos:end="2177:31">arg1</name></expr></argument>, <argument pos:start="2177:34" pos:end="2177:34"><expr pos:start="2177:34" pos:end="2177:34"><literal type="number" pos:start="2177:34" pos:end="2177:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2179:13" pos:end="2183:49"><expr pos:start="2179:13" pos:end="2183:48"><name pos:start="2179:13" pos:end="2179:15">ret</name> <operator pos:start="2179:17" pos:end="2179:17">=</operator> <call pos:start="2179:19" pos:end="2183:48"><name pos:start="2179:19" pos:end="2179:27">get_errno</name><argument_list pos:start="2179:28" pos:end="2183:48">(<argument pos:start="2179:29" pos:end="2183:47"><expr pos:start="2179:29" pos:end="2183:47"><call pos:start="2179:29" pos:end="2183:47"><name pos:start="2179:29" pos:end="2179:39">target_mmap</name><argument_list pos:start="2179:40" pos:end="2183:47">(<argument pos:start="2179:41" pos:end="2179:42"><expr pos:start="2179:41" pos:end="2179:42"><name pos:start="2179:41" pos:end="2179:42">v1</name></expr></argument>, <argument pos:start="2179:45" pos:end="2179:46"><expr pos:start="2179:45" pos:end="2179:46"><name pos:start="2179:45" pos:end="2179:46">v2</name></expr></argument>, <argument pos:start="2179:49" pos:end="2179:50"><expr pos:start="2179:49" pos:end="2179:50"><name pos:start="2179:49" pos:end="2179:50">v3</name></expr></argument>,

                                        <argument pos:start="2181:41" pos:end="2181:82"><expr pos:start="2181:41" pos:end="2181:82"><call pos:start="2181:41" pos:end="2181:82"><name pos:start="2181:41" pos:end="2181:62">target_to_host_bitmask</name><argument_list pos:start="2181:63" pos:end="2181:82">(<argument pos:start="2181:64" pos:end="2181:65"><expr pos:start="2181:64" pos:end="2181:65"><name pos:start="2181:64" pos:end="2181:65">v4</name></expr></argument>, <argument pos:start="2181:68" pos:end="2181:81"><expr pos:start="2181:68" pos:end="2181:81"><name pos:start="2181:68" pos:end="2181:81">mmap_flags_tbl</name></expr></argument>)</argument_list></call></expr></argument>,

                                        <argument pos:start="2183:41" pos:end="2183:42"><expr pos:start="2183:41" pos:end="2183:42"><name pos:start="2183:41" pos:end="2183:42">v5</name></expr></argument>, <argument pos:start="2183:45" pos:end="2183:46"><expr pos:start="2183:45" pos:end="2183:46"><name pos:start="2183:45" pos:end="2183:46">v6</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

<cpp:else pos:start="2187:1" pos:end="2187:5">#<cpp:directive pos:start="2187:2" pos:end="2187:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="2189:9" pos:end="2198:0"><expr pos:start="2189:9" pos:end="2195:42"><name pos:start="2189:9" pos:end="2189:11">ret</name> <operator pos:start="2189:13" pos:end="2189:13">=</operator> <call pos:start="2189:15" pos:end="2195:42"><name pos:start="2189:15" pos:end="2189:23">get_errno</name><argument_list pos:start="2189:24" pos:end="2195:42">(<argument pos:start="2189:25" pos:end="2195:41"><expr pos:start="2189:25" pos:end="2195:41"><call pos:start="2189:25" pos:end="2195:41"><name pos:start="2189:25" pos:end="2189:35">target_mmap</name><argument_list pos:start="2189:36" pos:end="2195:41">(<argument pos:start="2189:37" pos:end="2189:40"><expr pos:start="2189:37" pos:end="2189:40"><name pos:start="2189:37" pos:end="2189:40">arg1</name></expr></argument>, <argument pos:start="2189:43" pos:end="2189:46"><expr pos:start="2189:43" pos:end="2189:46"><name pos:start="2189:43" pos:end="2189:46">arg2</name></expr></argument>, <argument pos:start="2189:49" pos:end="2189:52"><expr pos:start="2189:49" pos:end="2189:52"><name pos:start="2189:49" pos:end="2189:52">arg3</name></expr></argument>,

                                    <argument pos:start="2191:37" pos:end="2191:80"><expr pos:start="2191:37" pos:end="2191:80"><call pos:start="2191:37" pos:end="2191:80"><name pos:start="2191:37" pos:end="2191:58">target_to_host_bitmask</name><argument_list pos:start="2191:59" pos:end="2191:80">(<argument pos:start="2191:60" pos:end="2191:63"><expr pos:start="2191:60" pos:end="2191:63"><name pos:start="2191:60" pos:end="2191:63">arg4</name></expr></argument>, <argument pos:start="2191:66" pos:end="2191:79"><expr pos:start="2191:66" pos:end="2191:79"><name pos:start="2191:66" pos:end="2191:79">mmap_flags_tbl</name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="2193:37" pos:end="2193:40"><expr pos:start="2193:37" pos:end="2193:40"><name pos:start="2193:37" pos:end="2193:40">arg5</name></expr></argument>,

                                    <argument pos:start="2195:37" pos:end="2195:40"><expr pos:start="2195:37" pos:end="2195:40"><name pos:start="2195:37" pos:end="2195:40">arg6</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="2197:1" pos:end="2197:6">#<cpp:directive pos:start="2197:2" pos:end="2197:6">endif</cpp:directive></cpp:endif>

        <break pos:start="2199:9" pos:end="2204:0">break;</break>

<cpp:endif pos:start="2201:1" pos:end="2201:6">#<cpp:directive pos:start="2201:2" pos:end="2201:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2203:1" pos:end="2203:22">#<cpp:directive pos:start="2203:2" pos:end="2203:6">ifdef</cpp:directive> <name pos:start="2203:8" pos:end="2203:22">TARGET_NR_mmap2</name></cpp:ifdef>

    <case pos:start="2205:5" pos:end="2212:0">case <expr pos:start="2205:10" pos:end="2205:24"><name pos:start="2205:10" pos:end="2205:24">TARGET_NR_mmap2</name></expr>:</case>

<cpp:ifndef pos:start="2207:1" pos:end="2207:18">#<cpp:directive pos:start="2207:2" pos:end="2207:7">ifndef</cpp:directive> <name pos:start="2207:9" pos:end="2207:18">MMAP_SHIFT</name></cpp:ifndef>

<cpp:define pos:start="2209:1" pos:end="2209:21">#<cpp:directive pos:start="2209:2" pos:end="2209:7">define</cpp:directive> <cpp:macro pos:start="2209:9" pos:end="2209:18"><name pos:start="2209:9" pos:end="2209:18">MMAP_SHIFT</name></cpp:macro> <cpp:value pos:start="2209:20" pos:end="2209:21">12</cpp:value></cpp:define>

<cpp:endif pos:start="2211:1" pos:end="2211:6">#<cpp:directive pos:start="2211:2" pos:end="2211:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="2213:9" pos:end="2219:57"><expr pos:start="2213:9" pos:end="2219:56"><name pos:start="2213:9" pos:end="2213:11">ret</name> <operator pos:start="2213:13" pos:end="2213:13">=</operator> <call pos:start="2213:15" pos:end="2219:56"><name pos:start="2213:15" pos:end="2213:23">get_errno</name><argument_list pos:start="2213:24" pos:end="2219:56">(<argument pos:start="2213:25" pos:end="2219:55"><expr pos:start="2213:25" pos:end="2219:55"><call pos:start="2213:25" pos:end="2219:55"><name pos:start="2213:25" pos:end="2213:35">target_mmap</name><argument_list pos:start="2213:36" pos:end="2219:55">(<argument pos:start="2213:37" pos:end="2213:40"><expr pos:start="2213:37" pos:end="2213:40"><name pos:start="2213:37" pos:end="2213:40">arg1</name></expr></argument>, <argument pos:start="2213:43" pos:end="2213:46"><expr pos:start="2213:43" pos:end="2213:46"><name pos:start="2213:43" pos:end="2213:46">arg2</name></expr></argument>, <argument pos:start="2213:49" pos:end="2213:52"><expr pos:start="2213:49" pos:end="2213:52"><name pos:start="2213:49" pos:end="2213:52">arg3</name></expr></argument>,

                                    <argument pos:start="2215:37" pos:end="2215:80"><expr pos:start="2215:37" pos:end="2215:80"><call pos:start="2215:37" pos:end="2215:80"><name pos:start="2215:37" pos:end="2215:58">target_to_host_bitmask</name><argument_list pos:start="2215:59" pos:end="2215:80">(<argument pos:start="2215:60" pos:end="2215:63"><expr pos:start="2215:60" pos:end="2215:63"><name pos:start="2215:60" pos:end="2215:63">arg4</name></expr></argument>, <argument pos:start="2215:66" pos:end="2215:79"><expr pos:start="2215:66" pos:end="2215:79"><name pos:start="2215:66" pos:end="2215:79">mmap_flags_tbl</name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="2217:37" pos:end="2217:40"><expr pos:start="2217:37" pos:end="2217:40"><name pos:start="2217:37" pos:end="2217:40">arg5</name></expr></argument>,

                                    <argument pos:start="2219:37" pos:end="2219:54"><expr pos:start="2219:37" pos:end="2219:54"><name pos:start="2219:37" pos:end="2219:40">arg6</name> <operator pos:start="2219:42" pos:end="2219:43">&lt;&lt;</operator> <name pos:start="2219:45" pos:end="2219:54">MMAP_SHIFT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2221:9" pos:end="2224:0">break;</break>

<cpp:endif pos:start="2223:1" pos:end="2223:6">#<cpp:directive pos:start="2223:2" pos:end="2223:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2225:5" pos:end="2225:26">case <expr pos:start="2225:10" pos:end="2225:25"><name pos:start="2225:10" pos:end="2225:25">TARGET_NR_munmap</name></expr>:</case>

        <expr_stmt pos:start="2227:9" pos:end="2227:51"><expr pos:start="2227:9" pos:end="2227:50"><name pos:start="2227:9" pos:end="2227:11">ret</name> <operator pos:start="2227:13" pos:end="2227:13">=</operator> <call pos:start="2227:15" pos:end="2227:50"><name pos:start="2227:15" pos:end="2227:23">get_errno</name><argument_list pos:start="2227:24" pos:end="2227:50">(<argument pos:start="2227:25" pos:end="2227:49"><expr pos:start="2227:25" pos:end="2227:49"><call pos:start="2227:25" pos:end="2227:49"><name pos:start="2227:25" pos:end="2227:37">target_munmap</name><argument_list pos:start="2227:38" pos:end="2227:49">(<argument pos:start="2227:39" pos:end="2227:42"><expr pos:start="2227:39" pos:end="2227:42"><name pos:start="2227:39" pos:end="2227:42">arg1</name></expr></argument>, <argument pos:start="2227:45" pos:end="2227:48"><expr pos:start="2227:45" pos:end="2227:48"><name pos:start="2227:45" pos:end="2227:48">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2229:9" pos:end="2229:14">break;</break>

    <case pos:start="2231:5" pos:end="2231:28">case <expr pos:start="2231:10" pos:end="2231:27"><name pos:start="2231:10" pos:end="2231:27">TARGET_NR_mprotect</name></expr>:</case>

        <expr_stmt pos:start="2233:9" pos:end="2233:59"><expr pos:start="2233:9" pos:end="2233:58"><name pos:start="2233:9" pos:end="2233:11">ret</name> <operator pos:start="2233:13" pos:end="2233:13">=</operator> <call pos:start="2233:15" pos:end="2233:58"><name pos:start="2233:15" pos:end="2233:23">get_errno</name><argument_list pos:start="2233:24" pos:end="2233:58">(<argument pos:start="2233:25" pos:end="2233:57"><expr pos:start="2233:25" pos:end="2233:57"><call pos:start="2233:25" pos:end="2233:57"><name pos:start="2233:25" pos:end="2233:39">target_mprotect</name><argument_list pos:start="2233:40" pos:end="2233:57">(<argument pos:start="2233:41" pos:end="2233:44"><expr pos:start="2233:41" pos:end="2233:44"><name pos:start="2233:41" pos:end="2233:44">arg1</name></expr></argument>, <argument pos:start="2233:47" pos:end="2233:50"><expr pos:start="2233:47" pos:end="2233:50"><name pos:start="2233:47" pos:end="2233:50">arg2</name></expr></argument>, <argument pos:start="2233:53" pos:end="2233:56"><expr pos:start="2233:53" pos:end="2233:56"><name pos:start="2233:53" pos:end="2233:56">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2235:9" pos:end="2238:0">break;</break>

<cpp:ifdef pos:start="2237:1" pos:end="2237:23">#<cpp:directive pos:start="2237:2" pos:end="2237:6">ifdef</cpp:directive> <name pos:start="2237:8" pos:end="2237:23">TARGET_NR_mremap</name></cpp:ifdef>

    <case pos:start="2239:5" pos:end="2239:26">case <expr pos:start="2239:10" pos:end="2239:25"><name pos:start="2239:10" pos:end="2239:25">TARGET_NR_mremap</name></expr>:</case>

        <expr_stmt pos:start="2241:9" pos:end="2241:69"><expr pos:start="2241:9" pos:end="2241:68"><name pos:start="2241:9" pos:end="2241:11">ret</name> <operator pos:start="2241:13" pos:end="2241:13">=</operator> <call pos:start="2241:15" pos:end="2241:68"><name pos:start="2241:15" pos:end="2241:23">get_errno</name><argument_list pos:start="2241:24" pos:end="2241:68">(<argument pos:start="2241:25" pos:end="2241:67"><expr pos:start="2241:25" pos:end="2241:67"><call pos:start="2241:25" pos:end="2241:67"><name pos:start="2241:25" pos:end="2241:37">target_mremap</name><argument_list pos:start="2241:38" pos:end="2241:67">(<argument pos:start="2241:39" pos:end="2241:42"><expr pos:start="2241:39" pos:end="2241:42"><name pos:start="2241:39" pos:end="2241:42">arg1</name></expr></argument>, <argument pos:start="2241:45" pos:end="2241:48"><expr pos:start="2241:45" pos:end="2241:48"><name pos:start="2241:45" pos:end="2241:48">arg2</name></expr></argument>, <argument pos:start="2241:51" pos:end="2241:54"><expr pos:start="2241:51" pos:end="2241:54"><name pos:start="2241:51" pos:end="2241:54">arg3</name></expr></argument>, <argument pos:start="2241:57" pos:end="2241:60"><expr pos:start="2241:57" pos:end="2241:60"><name pos:start="2241:57" pos:end="2241:60">arg4</name></expr></argument>, <argument pos:start="2241:63" pos:end="2241:66"><expr pos:start="2241:63" pos:end="2241:66"><name pos:start="2241:63" pos:end="2241:66">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2243:9" pos:end="2250:0">break;</break>

<cpp:endif pos:start="2245:1" pos:end="2245:6">#<cpp:directive pos:start="2245:2" pos:end="2245:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="2247:9" pos:end="2247:62">/* ??? msync/mlock/munlock are broken for softmmu.  */</comment>

<cpp:ifdef pos:start="2249:1" pos:end="2249:22">#<cpp:directive pos:start="2249:2" pos:end="2249:6">ifdef</cpp:directive> <name pos:start="2249:8" pos:end="2249:22">TARGET_NR_msync</name></cpp:ifdef>

    <case pos:start="2251:5" pos:end="2251:25">case <expr pos:start="2251:10" pos:end="2251:24"><name pos:start="2251:10" pos:end="2251:24">TARGET_NR_msync</name></expr>:</case>

        <expr_stmt pos:start="2253:9" pos:end="2253:54"><expr pos:start="2253:9" pos:end="2253:53"><name pos:start="2253:9" pos:end="2253:11">ret</name> <operator pos:start="2253:13" pos:end="2253:13">=</operator> <call pos:start="2253:15" pos:end="2253:53"><name pos:start="2253:15" pos:end="2253:23">get_errno</name><argument_list pos:start="2253:24" pos:end="2253:53">(<argument pos:start="2253:25" pos:end="2253:52"><expr pos:start="2253:25" pos:end="2253:52"><call pos:start="2253:25" pos:end="2253:52"><name pos:start="2253:25" pos:end="2253:29">msync</name><argument_list pos:start="2253:30" pos:end="2253:52">(<argument pos:start="2253:31" pos:end="2253:39"><expr pos:start="2253:31" pos:end="2253:39"><call pos:start="2253:31" pos:end="2253:39"><name pos:start="2253:31" pos:end="2253:33">g2h</name><argument_list pos:start="2253:34" pos:end="2253:39">(<argument pos:start="2253:35" pos:end="2253:38"><expr pos:start="2253:35" pos:end="2253:38"><name pos:start="2253:35" pos:end="2253:38">arg1</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2253:42" pos:end="2253:45"><expr pos:start="2253:42" pos:end="2253:45"><name pos:start="2253:42" pos:end="2253:45">arg2</name></expr></argument>, <argument pos:start="2253:48" pos:end="2253:51"><expr pos:start="2253:48" pos:end="2253:51"><name pos:start="2253:48" pos:end="2253:51">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2255:9" pos:end="2260:0">break;</break>

<cpp:endif pos:start="2257:1" pos:end="2257:6">#<cpp:directive pos:start="2257:2" pos:end="2257:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2259:1" pos:end="2259:22">#<cpp:directive pos:start="2259:2" pos:end="2259:6">ifdef</cpp:directive> <name pos:start="2259:8" pos:end="2259:22">TARGET_NR_mlock</name></cpp:ifdef>

    <case pos:start="2261:5" pos:end="2261:25">case <expr pos:start="2261:10" pos:end="2261:24"><name pos:start="2261:10" pos:end="2261:24">TARGET_NR_mlock</name></expr>:</case>

        <expr_stmt pos:start="2263:9" pos:end="2263:48"><expr pos:start="2263:9" pos:end="2263:47"><name pos:start="2263:9" pos:end="2263:11">ret</name> <operator pos:start="2263:13" pos:end="2263:13">=</operator> <call pos:start="2263:15" pos:end="2263:47"><name pos:start="2263:15" pos:end="2263:23">get_errno</name><argument_list pos:start="2263:24" pos:end="2263:47">(<argument pos:start="2263:25" pos:end="2263:46"><expr pos:start="2263:25" pos:end="2263:46"><call pos:start="2263:25" pos:end="2263:46"><name pos:start="2263:25" pos:end="2263:29">mlock</name><argument_list pos:start="2263:30" pos:end="2263:46">(<argument pos:start="2263:31" pos:end="2263:39"><expr pos:start="2263:31" pos:end="2263:39"><call pos:start="2263:31" pos:end="2263:39"><name pos:start="2263:31" pos:end="2263:33">g2h</name><argument_list pos:start="2263:34" pos:end="2263:39">(<argument pos:start="2263:35" pos:end="2263:38"><expr pos:start="2263:35" pos:end="2263:38"><name pos:start="2263:35" pos:end="2263:38">arg1</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2263:42" pos:end="2263:45"><expr pos:start="2263:42" pos:end="2263:45"><name pos:start="2263:42" pos:end="2263:45">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2265:9" pos:end="2270:0">break;</break>

<cpp:endif pos:start="2267:1" pos:end="2267:6">#<cpp:directive pos:start="2267:2" pos:end="2267:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2269:1" pos:end="2269:24">#<cpp:directive pos:start="2269:2" pos:end="2269:6">ifdef</cpp:directive> <name pos:start="2269:8" pos:end="2269:24">TARGET_NR_munlock</name></cpp:ifdef>

    <case pos:start="2271:5" pos:end="2271:27">case <expr pos:start="2271:10" pos:end="2271:26"><name pos:start="2271:10" pos:end="2271:26">TARGET_NR_munlock</name></expr>:</case>

        <expr_stmt pos:start="2273:9" pos:end="2273:50"><expr pos:start="2273:9" pos:end="2273:49"><name pos:start="2273:9" pos:end="2273:11">ret</name> <operator pos:start="2273:13" pos:end="2273:13">=</operator> <call pos:start="2273:15" pos:end="2273:49"><name pos:start="2273:15" pos:end="2273:23">get_errno</name><argument_list pos:start="2273:24" pos:end="2273:49">(<argument pos:start="2273:25" pos:end="2273:48"><expr pos:start="2273:25" pos:end="2273:48"><call pos:start="2273:25" pos:end="2273:48"><name pos:start="2273:25" pos:end="2273:31">munlock</name><argument_list pos:start="2273:32" pos:end="2273:48">(<argument pos:start="2273:33" pos:end="2273:41"><expr pos:start="2273:33" pos:end="2273:41"><call pos:start="2273:33" pos:end="2273:41"><name pos:start="2273:33" pos:end="2273:35">g2h</name><argument_list pos:start="2273:36" pos:end="2273:41">(<argument pos:start="2273:37" pos:end="2273:40"><expr pos:start="2273:37" pos:end="2273:40"><name pos:start="2273:37" pos:end="2273:40">arg1</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2273:44" pos:end="2273:47"><expr pos:start="2273:44" pos:end="2273:47"><name pos:start="2273:44" pos:end="2273:47">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2275:9" pos:end="2280:0">break;</break>

<cpp:endif pos:start="2277:1" pos:end="2277:6">#<cpp:directive pos:start="2277:2" pos:end="2277:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2279:1" pos:end="2279:25">#<cpp:directive pos:start="2279:2" pos:end="2279:6">ifdef</cpp:directive> <name pos:start="2279:8" pos:end="2279:25">TARGET_NR_mlockall</name></cpp:ifdef>

    <case pos:start="2281:5" pos:end="2281:28">case <expr pos:start="2281:10" pos:end="2281:27"><name pos:start="2281:10" pos:end="2281:27">TARGET_NR_mlockall</name></expr>:</case>

        <expr_stmt pos:start="2283:9" pos:end="2283:40"><expr pos:start="2283:9" pos:end="2283:39"><name pos:start="2283:9" pos:end="2283:11">ret</name> <operator pos:start="2283:13" pos:end="2283:13">=</operator> <call pos:start="2283:15" pos:end="2283:39"><name pos:start="2283:15" pos:end="2283:23">get_errno</name><argument_list pos:start="2283:24" pos:end="2283:39">(<argument pos:start="2283:25" pos:end="2283:38"><expr pos:start="2283:25" pos:end="2283:38"><call pos:start="2283:25" pos:end="2283:38"><name pos:start="2283:25" pos:end="2283:32">mlockall</name><argument_list pos:start="2283:33" pos:end="2283:38">(<argument pos:start="2283:34" pos:end="2283:37"><expr pos:start="2283:34" pos:end="2283:37"><name pos:start="2283:34" pos:end="2283:37">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2285:9" pos:end="2290:0">break;</break>

<cpp:endif pos:start="2287:1" pos:end="2287:6">#<cpp:directive pos:start="2287:2" pos:end="2287:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2289:1" pos:end="2289:27">#<cpp:directive pos:start="2289:2" pos:end="2289:6">ifdef</cpp:directive> <name pos:start="2289:8" pos:end="2289:27">TARGET_NR_munlockall</name></cpp:ifdef>

    <case pos:start="2291:5" pos:end="2291:30">case <expr pos:start="2291:10" pos:end="2291:29"><name pos:start="2291:10" pos:end="2291:29">TARGET_NR_munlockall</name></expr>:</case>

        <expr_stmt pos:start="2293:9" pos:end="2293:38"><expr pos:start="2293:9" pos:end="2293:37"><name pos:start="2293:9" pos:end="2293:11">ret</name> <operator pos:start="2293:13" pos:end="2293:13">=</operator> <call pos:start="2293:15" pos:end="2293:37"><name pos:start="2293:15" pos:end="2293:23">get_errno</name><argument_list pos:start="2293:24" pos:end="2293:37">(<argument pos:start="2293:25" pos:end="2293:36"><expr pos:start="2293:25" pos:end="2293:36"><call pos:start="2293:25" pos:end="2293:36"><name pos:start="2293:25" pos:end="2293:34">munlockall</name><argument_list pos:start="2293:35" pos:end="2293:36">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2295:9" pos:end="2298:0">break;</break>

<cpp:endif pos:start="2297:1" pos:end="2297:6">#<cpp:directive pos:start="2297:2" pos:end="2297:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2299:5" pos:end="2299:28">case <expr pos:start="2299:10" pos:end="2299:27"><name pos:start="2299:10" pos:end="2299:27">TARGET_NR_truncate</name></expr>:</case>

        <if_stmt pos:start="2301:9" pos:end="2303:24"><if pos:start="2301:9" pos:end="2303:24">if <condition pos:start="2301:12" pos:end="2301:42">(<expr pos:start="2301:13" pos:end="2301:41"><operator pos:start="2301:13" pos:end="2301:13">!</operator><operator pos:start="2301:14" pos:end="2301:14">(</operator><name pos:start="2301:15" pos:end="2301:15">p</name> <operator pos:start="2301:17" pos:end="2301:17">=</operator> <call pos:start="2301:19" pos:end="2301:40"><name pos:start="2301:19" pos:end="2301:34">lock_user_string</name><argument_list pos:start="2301:35" pos:end="2301:40">(<argument pos:start="2301:36" pos:end="2301:39"><expr pos:start="2301:36" pos:end="2301:39"><name pos:start="2301:36" pos:end="2301:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="2301:41" pos:end="2301:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2303:13" pos:end="2303:24"><block_content pos:start="2303:13" pos:end="2303:24">

            <goto pos:start="2303:13" pos:end="2303:24">goto <name pos:start="2303:18" pos:end="2303:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="2305:9" pos:end="2305:43"><expr pos:start="2305:9" pos:end="2305:42"><name pos:start="2305:9" pos:end="2305:11">ret</name> <operator pos:start="2305:13" pos:end="2305:13">=</operator> <call pos:start="2305:15" pos:end="2305:42"><name pos:start="2305:15" pos:end="2305:23">get_errno</name><argument_list pos:start="2305:24" pos:end="2305:42">(<argument pos:start="2305:25" pos:end="2305:41"><expr pos:start="2305:25" pos:end="2305:41"><call pos:start="2305:25" pos:end="2305:41"><name pos:start="2305:25" pos:end="2305:32">truncate</name><argument_list pos:start="2305:33" pos:end="2305:41">(<argument pos:start="2305:34" pos:end="2305:34"><expr pos:start="2305:34" pos:end="2305:34"><name pos:start="2305:34" pos:end="2305:34">p</name></expr></argument>, <argument pos:start="2305:37" pos:end="2305:40"><expr pos:start="2305:37" pos:end="2305:40"><name pos:start="2305:37" pos:end="2305:40">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2307:9" pos:end="2307:32"><expr pos:start="2307:9" pos:end="2307:31"><call pos:start="2307:9" pos:end="2307:31"><name pos:start="2307:9" pos:end="2307:19">unlock_user</name><argument_list pos:start="2307:20" pos:end="2307:31">(<argument pos:start="2307:21" pos:end="2307:21"><expr pos:start="2307:21" pos:end="2307:21"><name pos:start="2307:21" pos:end="2307:21">p</name></expr></argument>, <argument pos:start="2307:24" pos:end="2307:27"><expr pos:start="2307:24" pos:end="2307:27"><name pos:start="2307:24" pos:end="2307:27">arg1</name></expr></argument>, <argument pos:start="2307:30" pos:end="2307:30"><expr pos:start="2307:30" pos:end="2307:30"><literal type="number" pos:start="2307:30" pos:end="2307:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2309:9" pos:end="2309:14">break;</break>

    <case pos:start="2311:5" pos:end="2311:29">case <expr pos:start="2311:10" pos:end="2311:28"><name pos:start="2311:10" pos:end="2311:28">TARGET_NR_ftruncate</name></expr>:</case>

        <expr_stmt pos:start="2313:9" pos:end="2313:47"><expr pos:start="2313:9" pos:end="2313:46"><name pos:start="2313:9" pos:end="2313:11">ret</name> <operator pos:start="2313:13" pos:end="2313:13">=</operator> <call pos:start="2313:15" pos:end="2313:46"><name pos:start="2313:15" pos:end="2313:23">get_errno</name><argument_list pos:start="2313:24" pos:end="2313:46">(<argument pos:start="2313:25" pos:end="2313:45"><expr pos:start="2313:25" pos:end="2313:45"><call pos:start="2313:25" pos:end="2313:45"><name pos:start="2313:25" pos:end="2313:33">ftruncate</name><argument_list pos:start="2313:34" pos:end="2313:45">(<argument pos:start="2313:35" pos:end="2313:38"><expr pos:start="2313:35" pos:end="2313:38"><name pos:start="2313:35" pos:end="2313:38">arg1</name></expr></argument>, <argument pos:start="2313:41" pos:end="2313:44"><expr pos:start="2313:41" pos:end="2313:44"><name pos:start="2313:41" pos:end="2313:44">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2315:9" pos:end="2315:14">break;</break>

    <case pos:start="2317:5" pos:end="2317:26">case <expr pos:start="2317:10" pos:end="2317:25"><name pos:start="2317:10" pos:end="2317:25">TARGET_NR_fchmod</name></expr>:</case>

        <expr_stmt pos:start="2319:9" pos:end="2319:44"><expr pos:start="2319:9" pos:end="2319:43"><name pos:start="2319:9" pos:end="2319:11">ret</name> <operator pos:start="2319:13" pos:end="2319:13">=</operator> <call pos:start="2319:15" pos:end="2319:43"><name pos:start="2319:15" pos:end="2319:23">get_errno</name><argument_list pos:start="2319:24" pos:end="2319:43">(<argument pos:start="2319:25" pos:end="2319:42"><expr pos:start="2319:25" pos:end="2319:42"><call pos:start="2319:25" pos:end="2319:42"><name pos:start="2319:25" pos:end="2319:30">fchmod</name><argument_list pos:start="2319:31" pos:end="2319:42">(<argument pos:start="2319:32" pos:end="2319:35"><expr pos:start="2319:32" pos:end="2319:35"><name pos:start="2319:32" pos:end="2319:35">arg1</name></expr></argument>, <argument pos:start="2319:38" pos:end="2319:41"><expr pos:start="2319:38" pos:end="2319:41"><name pos:start="2319:38" pos:end="2319:41">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2321:9" pos:end="2324:0">break;</break>

<cpp:if pos:start="2323:1" pos:end="2323:57">#<cpp:directive pos:start="2323:2" pos:end="2323:3">if</cpp:directive> <expr pos:start="2323:5" pos:end="2323:57"><call pos:start="2323:5" pos:end="2323:31"><name pos:start="2323:5" pos:end="2323:11">defined</name><argument_list pos:start="2323:12" pos:end="2323:31">(<argument pos:start="2323:13" pos:end="2323:30"><expr pos:start="2323:13" pos:end="2323:30"><name pos:start="2323:13" pos:end="2323:30">TARGET_NR_fchmodat</name></expr></argument>)</argument_list></call> <operator pos:start="2323:33" pos:end="2323:34">&amp;&amp;</operator> <call pos:start="2323:36" pos:end="2323:57"><name pos:start="2323:36" pos:end="2323:42">defined</name><argument_list pos:start="2323:43" pos:end="2323:57">(<argument pos:start="2323:44" pos:end="2323:56"><expr pos:start="2323:44" pos:end="2323:56"><name pos:start="2323:44" pos:end="2323:56">__NR_fchmodat</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="2325:5" pos:end="2325:28">case <expr pos:start="2325:10" pos:end="2325:27"><name pos:start="2325:10" pos:end="2325:27">TARGET_NR_fchmodat</name></expr>:</case>

        <if_stmt pos:start="2327:9" pos:end="2329:24"><if pos:start="2327:9" pos:end="2329:24">if <condition pos:start="2327:12" pos:end="2327:42">(<expr pos:start="2327:13" pos:end="2327:41"><operator pos:start="2327:13" pos:end="2327:13">!</operator><operator pos:start="2327:14" pos:end="2327:14">(</operator><name pos:start="2327:15" pos:end="2327:15">p</name> <operator pos:start="2327:17" pos:end="2327:17">=</operator> <call pos:start="2327:19" pos:end="2327:40"><name pos:start="2327:19" pos:end="2327:34">lock_user_string</name><argument_list pos:start="2327:35" pos:end="2327:40">(<argument pos:start="2327:36" pos:end="2327:39"><expr pos:start="2327:36" pos:end="2327:39"><name pos:start="2327:36" pos:end="2327:39">arg2</name></expr></argument>)</argument_list></call><operator pos:start="2327:41" pos:end="2327:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2329:13" pos:end="2329:24"><block_content pos:start="2329:13" pos:end="2329:24">

            <goto pos:start="2329:13" pos:end="2329:24">goto <name pos:start="2329:18" pos:end="2329:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="2331:9" pos:end="2331:53"><expr pos:start="2331:9" pos:end="2331:52"><name pos:start="2331:9" pos:end="2331:11">ret</name> <operator pos:start="2331:13" pos:end="2331:13">=</operator> <call pos:start="2331:15" pos:end="2331:52"><name pos:start="2331:15" pos:end="2331:23">get_errno</name><argument_list pos:start="2331:24" pos:end="2331:52">(<argument pos:start="2331:25" pos:end="2331:51"><expr pos:start="2331:25" pos:end="2331:51"><call pos:start="2331:25" pos:end="2331:51"><name pos:start="2331:25" pos:end="2331:36">sys_fchmodat</name><argument_list pos:start="2331:37" pos:end="2331:51">(<argument pos:start="2331:38" pos:end="2331:41"><expr pos:start="2331:38" pos:end="2331:41"><name pos:start="2331:38" pos:end="2331:41">arg1</name></expr></argument>, <argument pos:start="2331:44" pos:end="2331:44"><expr pos:start="2331:44" pos:end="2331:44"><name pos:start="2331:44" pos:end="2331:44">p</name></expr></argument>, <argument pos:start="2331:47" pos:end="2331:50"><expr pos:start="2331:47" pos:end="2331:50"><name pos:start="2331:47" pos:end="2331:50">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2333:9" pos:end="2333:32"><expr pos:start="2333:9" pos:end="2333:31"><call pos:start="2333:9" pos:end="2333:31"><name pos:start="2333:9" pos:end="2333:19">unlock_user</name><argument_list pos:start="2333:20" pos:end="2333:31">(<argument pos:start="2333:21" pos:end="2333:21"><expr pos:start="2333:21" pos:end="2333:21"><name pos:start="2333:21" pos:end="2333:21">p</name></expr></argument>, <argument pos:start="2333:24" pos:end="2333:27"><expr pos:start="2333:24" pos:end="2333:27"><name pos:start="2333:24" pos:end="2333:27">arg2</name></expr></argument>, <argument pos:start="2333:30" pos:end="2333:30"><expr pos:start="2333:30" pos:end="2333:30"><literal type="number" pos:start="2333:30" pos:end="2333:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2335:9" pos:end="2338:0">break;</break>

<cpp:endif pos:start="2337:1" pos:end="2337:6">#<cpp:directive pos:start="2337:2" pos:end="2337:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2339:5" pos:end="2339:31">case <expr pos:start="2339:10" pos:end="2339:30"><name pos:start="2339:10" pos:end="2339:30">TARGET_NR_getpriority</name></expr>:</case>

        <comment type="block" pos:start="2341:9" pos:end="2345:66">/* libc does special remapping of the return value of

         * sys_getpriority() so it's just easiest to call

         * sys_getpriority() directly rather than through libc. */</comment>

        <expr_stmt pos:start="2347:9" pos:end="2347:42"><expr pos:start="2347:9" pos:end="2347:41"><name pos:start="2347:9" pos:end="2347:11">ret</name> <operator pos:start="2347:13" pos:end="2347:13">=</operator> <call pos:start="2347:15" pos:end="2347:41"><name pos:start="2347:15" pos:end="2347:29">sys_getpriority</name><argument_list pos:start="2347:30" pos:end="2347:41">(<argument pos:start="2347:31" pos:end="2347:34"><expr pos:start="2347:31" pos:end="2347:34"><name pos:start="2347:31" pos:end="2347:34">arg1</name></expr></argument>, <argument pos:start="2347:37" pos:end="2347:40"><expr pos:start="2347:37" pos:end="2347:40"><name pos:start="2347:37" pos:end="2347:40">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2349:9" pos:end="2349:14">break;</break>

    <case pos:start="2351:5" pos:end="2351:31">case <expr pos:start="2351:10" pos:end="2351:30"><name pos:start="2351:10" pos:end="2351:30">TARGET_NR_setpriority</name></expr>:</case>

        <expr_stmt pos:start="2353:9" pos:end="2353:55"><expr pos:start="2353:9" pos:end="2353:54"><name pos:start="2353:9" pos:end="2353:11">ret</name> <operator pos:start="2353:13" pos:end="2353:13">=</operator> <call pos:start="2353:15" pos:end="2353:54"><name pos:start="2353:15" pos:end="2353:23">get_errno</name><argument_list pos:start="2353:24" pos:end="2353:54">(<argument pos:start="2353:25" pos:end="2353:53"><expr pos:start="2353:25" pos:end="2353:53"><call pos:start="2353:25" pos:end="2353:53"><name pos:start="2353:25" pos:end="2353:35">setpriority</name><argument_list pos:start="2353:36" pos:end="2353:53">(<argument pos:start="2353:37" pos:end="2353:40"><expr pos:start="2353:37" pos:end="2353:40"><name pos:start="2353:37" pos:end="2353:40">arg1</name></expr></argument>, <argument pos:start="2353:43" pos:end="2353:46"><expr pos:start="2353:43" pos:end="2353:46"><name pos:start="2353:43" pos:end="2353:46">arg2</name></expr></argument>, <argument pos:start="2353:49" pos:end="2353:52"><expr pos:start="2353:49" pos:end="2353:52"><name pos:start="2353:49" pos:end="2353:52">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2355:9" pos:end="2358:0">break;</break>

<cpp:ifdef pos:start="2357:1" pos:end="2357:23">#<cpp:directive pos:start="2357:2" pos:end="2357:6">ifdef</cpp:directive> <name pos:start="2357:8" pos:end="2357:23">TARGET_NR_profil</name></cpp:ifdef>

    <case pos:start="2359:5" pos:end="2359:26">case <expr pos:start="2359:10" pos:end="2359:25"><name pos:start="2359:10" pos:end="2359:25">TARGET_NR_profil</name></expr>:</case>

        <goto pos:start="2361:9" pos:end="2364:0">goto <name pos:start="2361:14" pos:end="2361:26">unimplemented</name>;</goto>

<cpp:endif pos:start="2363:1" pos:end="2363:6">#<cpp:directive pos:start="2363:2" pos:end="2363:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2365:5" pos:end="2365:26">case <expr pos:start="2365:10" pos:end="2365:25"><name pos:start="2365:10" pos:end="2365:25">TARGET_NR_statfs</name></expr>:</case>

        <if_stmt pos:start="2367:9" pos:end="2369:24"><if pos:start="2367:9" pos:end="2369:24">if <condition pos:start="2367:12" pos:end="2367:42">(<expr pos:start="2367:13" pos:end="2367:41"><operator pos:start="2367:13" pos:end="2367:13">!</operator><operator pos:start="2367:14" pos:end="2367:14">(</operator><name pos:start="2367:15" pos:end="2367:15">p</name> <operator pos:start="2367:17" pos:end="2367:17">=</operator> <call pos:start="2367:19" pos:end="2367:40"><name pos:start="2367:19" pos:end="2367:34">lock_user_string</name><argument_list pos:start="2367:35" pos:end="2367:40">(<argument pos:start="2367:36" pos:end="2367:39"><expr pos:start="2367:36" pos:end="2367:39"><name pos:start="2367:36" pos:end="2367:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="2367:41" pos:end="2367:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2369:13" pos:end="2369:24"><block_content pos:start="2369:13" pos:end="2369:24">

            <goto pos:start="2369:13" pos:end="2369:24">goto <name pos:start="2369:18" pos:end="2369:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="2371:9" pos:end="2371:48"><expr pos:start="2371:9" pos:end="2371:47"><name pos:start="2371:9" pos:end="2371:11">ret</name> <operator pos:start="2371:13" pos:end="2371:13">=</operator> <call pos:start="2371:15" pos:end="2371:47"><name pos:start="2371:15" pos:end="2371:23">get_errno</name><argument_list pos:start="2371:24" pos:end="2371:47">(<argument pos:start="2371:25" pos:end="2371:46"><expr pos:start="2371:25" pos:end="2371:46"><call pos:start="2371:25" pos:end="2371:46"><name pos:start="2371:25" pos:end="2371:30">statfs</name><argument_list pos:start="2371:31" pos:end="2371:46">(<argument pos:start="2371:32" pos:end="2371:38"><expr pos:start="2371:32" pos:end="2371:38"><call pos:start="2371:32" pos:end="2371:38"><name pos:start="2371:32" pos:end="2371:35">path</name><argument_list pos:start="2371:36" pos:end="2371:38">(<argument pos:start="2371:37" pos:end="2371:37"><expr pos:start="2371:37" pos:end="2371:37"><name pos:start="2371:37" pos:end="2371:37">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2371:41" pos:end="2371:45"><expr pos:start="2371:41" pos:end="2371:45"><operator pos:start="2371:41" pos:end="2371:41">&amp;</operator><name pos:start="2371:42" pos:end="2371:45">stfs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2373:9" pos:end="2373:32"><expr pos:start="2373:9" pos:end="2373:31"><call pos:start="2373:9" pos:end="2373:31"><name pos:start="2373:9" pos:end="2373:19">unlock_user</name><argument_list pos:start="2373:20" pos:end="2373:31">(<argument pos:start="2373:21" pos:end="2373:21"><expr pos:start="2373:21" pos:end="2373:21"><name pos:start="2373:21" pos:end="2373:21">p</name></expr></argument>, <argument pos:start="2373:24" pos:end="2373:27"><expr pos:start="2373:24" pos:end="2373:27"><name pos:start="2373:24" pos:end="2373:27">arg1</name></expr></argument>, <argument pos:start="2373:30" pos:end="2373:30"><expr pos:start="2373:30" pos:end="2373:30"><literal type="number" pos:start="2373:30" pos:end="2373:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <label pos:start="2375:5" pos:end="2375:19"><name pos:start="2375:5" pos:end="2375:18">convert_statfs</name>:</label>

        <if_stmt pos:start="2377:9" pos:end="2409:9"><if pos:start="2377:9" pos:end="2409:9">if <condition pos:start="2377:12" pos:end="2377:27">(<expr pos:start="2377:13" pos:end="2377:26"><operator pos:start="2377:13" pos:end="2377:13">!</operator><call pos:start="2377:14" pos:end="2377:26"><name pos:start="2377:14" pos:end="2377:21">is_error</name><argument_list pos:start="2377:22" pos:end="2377:26">(<argument pos:start="2377:23" pos:end="2377:25"><expr pos:start="2377:23" pos:end="2377:25"><name pos:start="2377:23" pos:end="2377:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2377:29" pos:end="2409:9">{<block_content pos:start="2379:13" pos:end="2407:53">

            <decl_stmt pos:start="2379:13" pos:end="2379:46"><decl pos:start="2379:13" pos:end="2379:45"><type pos:start="2379:13" pos:end="2379:34"><name pos:start="2379:13" pos:end="2379:32"><name pos:start="2379:13" pos:end="2379:18">struct</name> <name pos:start="2379:20" pos:end="2379:32">target_statfs</name></name> <modifier pos:start="2379:34" pos:end="2379:34">*</modifier></type><name pos:start="2379:35" pos:end="2379:45">target_stfs</name></decl>;</decl_stmt>



            <if_stmt pos:start="2383:13" pos:end="2385:28"><if pos:start="2383:13" pos:end="2385:28">if <condition pos:start="2383:16" pos:end="2383:70">(<expr pos:start="2383:17" pos:end="2383:69"><operator pos:start="2383:17" pos:end="2383:17">!</operator><call pos:start="2383:18" pos:end="2383:69"><name pos:start="2383:18" pos:end="2383:33">lock_user_struct</name><argument_list pos:start="2383:34" pos:end="2383:69">(<argument pos:start="2383:35" pos:end="2383:46"><expr pos:start="2383:35" pos:end="2383:46"><name pos:start="2383:35" pos:end="2383:46">VERIFY_WRITE</name></expr></argument>, <argument pos:start="2383:49" pos:end="2383:59"><expr pos:start="2383:49" pos:end="2383:59"><name pos:start="2383:49" pos:end="2383:59">target_stfs</name></expr></argument>, <argument pos:start="2383:62" pos:end="2383:65"><expr pos:start="2383:62" pos:end="2383:65"><name pos:start="2383:62" pos:end="2383:65">arg2</name></expr></argument>, <argument pos:start="2383:68" pos:end="2383:68"><expr pos:start="2383:68" pos:end="2383:68"><literal type="number" pos:start="2383:68" pos:end="2383:68">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2385:17" pos:end="2385:28"><block_content pos:start="2385:17" pos:end="2385:28">

                <goto pos:start="2385:17" pos:end="2385:28">goto <name pos:start="2385:22" pos:end="2385:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="2387:13" pos:end="2387:58"><expr pos:start="2387:13" pos:end="2387:57"><call pos:start="2387:13" pos:end="2387:57"><name pos:start="2387:13" pos:end="2387:22">__put_user</name><argument_list pos:start="2387:23" pos:end="2387:57">(<argument pos:start="2387:24" pos:end="2387:34"><expr pos:start="2387:24" pos:end="2387:34"><name pos:start="2387:24" pos:end="2387:34"><name pos:start="2387:24" pos:end="2387:27">stfs</name><operator pos:start="2387:28" pos:end="2387:28">.</operator><name pos:start="2387:29" pos:end="2387:34">f_type</name></name></expr></argument>, <argument pos:start="2387:37" pos:end="2387:56"><expr pos:start="2387:37" pos:end="2387:56"><operator pos:start="2387:37" pos:end="2387:37">&amp;</operator><name pos:start="2387:38" pos:end="2387:56"><name pos:start="2387:38" pos:end="2387:48">target_stfs</name><operator pos:start="2387:49" pos:end="2387:50">-&gt;</operator><name pos:start="2387:51" pos:end="2387:56">f_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2389:13" pos:end="2389:60"><expr pos:start="2389:13" pos:end="2389:59"><call pos:start="2389:13" pos:end="2389:59"><name pos:start="2389:13" pos:end="2389:22">__put_user</name><argument_list pos:start="2389:23" pos:end="2389:59">(<argument pos:start="2389:24" pos:end="2389:35"><expr pos:start="2389:24" pos:end="2389:35"><name pos:start="2389:24" pos:end="2389:35"><name pos:start="2389:24" pos:end="2389:27">stfs</name><operator pos:start="2389:28" pos:end="2389:28">.</operator><name pos:start="2389:29" pos:end="2389:35">f_bsize</name></name></expr></argument>, <argument pos:start="2389:38" pos:end="2389:58"><expr pos:start="2389:38" pos:end="2389:58"><operator pos:start="2389:38" pos:end="2389:38">&amp;</operator><name pos:start="2389:39" pos:end="2389:58"><name pos:start="2389:39" pos:end="2389:49">target_stfs</name><operator pos:start="2389:50" pos:end="2389:51">-&gt;</operator><name pos:start="2389:52" pos:end="2389:58">f_bsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2391:13" pos:end="2391:62"><expr pos:start="2391:13" pos:end="2391:61"><call pos:start="2391:13" pos:end="2391:61"><name pos:start="2391:13" pos:end="2391:22">__put_user</name><argument_list pos:start="2391:23" pos:end="2391:61">(<argument pos:start="2391:24" pos:end="2391:36"><expr pos:start="2391:24" pos:end="2391:36"><name pos:start="2391:24" pos:end="2391:36"><name pos:start="2391:24" pos:end="2391:27">stfs</name><operator pos:start="2391:28" pos:end="2391:28">.</operator><name pos:start="2391:29" pos:end="2391:36">f_blocks</name></name></expr></argument>, <argument pos:start="2391:39" pos:end="2391:60"><expr pos:start="2391:39" pos:end="2391:60"><operator pos:start="2391:39" pos:end="2391:39">&amp;</operator><name pos:start="2391:40" pos:end="2391:60"><name pos:start="2391:40" pos:end="2391:50">target_stfs</name><operator pos:start="2391:51" pos:end="2391:52">-&gt;</operator><name pos:start="2391:53" pos:end="2391:60">f_blocks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2393:13" pos:end="2393:60"><expr pos:start="2393:13" pos:end="2393:59"><call pos:start="2393:13" pos:end="2393:59"><name pos:start="2393:13" pos:end="2393:22">__put_user</name><argument_list pos:start="2393:23" pos:end="2393:59">(<argument pos:start="2393:24" pos:end="2393:35"><expr pos:start="2393:24" pos:end="2393:35"><name pos:start="2393:24" pos:end="2393:35"><name pos:start="2393:24" pos:end="2393:27">stfs</name><operator pos:start="2393:28" pos:end="2393:28">.</operator><name pos:start="2393:29" pos:end="2393:35">f_bfree</name></name></expr></argument>, <argument pos:start="2393:38" pos:end="2393:58"><expr pos:start="2393:38" pos:end="2393:58"><operator pos:start="2393:38" pos:end="2393:38">&amp;</operator><name pos:start="2393:39" pos:end="2393:58"><name pos:start="2393:39" pos:end="2393:49">target_stfs</name><operator pos:start="2393:50" pos:end="2393:51">-&gt;</operator><name pos:start="2393:52" pos:end="2393:58">f_bfree</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2395:13" pos:end="2395:62"><expr pos:start="2395:13" pos:end="2395:61"><call pos:start="2395:13" pos:end="2395:61"><name pos:start="2395:13" pos:end="2395:22">__put_user</name><argument_list pos:start="2395:23" pos:end="2395:61">(<argument pos:start="2395:24" pos:end="2395:36"><expr pos:start="2395:24" pos:end="2395:36"><name pos:start="2395:24" pos:end="2395:36"><name pos:start="2395:24" pos:end="2395:27">stfs</name><operator pos:start="2395:28" pos:end="2395:28">.</operator><name pos:start="2395:29" pos:end="2395:36">f_bavail</name></name></expr></argument>, <argument pos:start="2395:39" pos:end="2395:60"><expr pos:start="2395:39" pos:end="2395:60"><operator pos:start="2395:39" pos:end="2395:39">&amp;</operator><name pos:start="2395:40" pos:end="2395:60"><name pos:start="2395:40" pos:end="2395:50">target_stfs</name><operator pos:start="2395:51" pos:end="2395:52">-&gt;</operator><name pos:start="2395:53" pos:end="2395:60">f_bavail</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2397:13" pos:end="2397:60"><expr pos:start="2397:13" pos:end="2397:59"><call pos:start="2397:13" pos:end="2397:59"><name pos:start="2397:13" pos:end="2397:22">__put_user</name><argument_list pos:start="2397:23" pos:end="2397:59">(<argument pos:start="2397:24" pos:end="2397:35"><expr pos:start="2397:24" pos:end="2397:35"><name pos:start="2397:24" pos:end="2397:35"><name pos:start="2397:24" pos:end="2397:27">stfs</name><operator pos:start="2397:28" pos:end="2397:28">.</operator><name pos:start="2397:29" pos:end="2397:35">f_files</name></name></expr></argument>, <argument pos:start="2397:38" pos:end="2397:58"><expr pos:start="2397:38" pos:end="2397:58"><operator pos:start="2397:38" pos:end="2397:38">&amp;</operator><name pos:start="2397:39" pos:end="2397:58"><name pos:start="2397:39" pos:end="2397:49">target_stfs</name><operator pos:start="2397:50" pos:end="2397:51">-&gt;</operator><name pos:start="2397:52" pos:end="2397:58">f_files</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2399:13" pos:end="2399:60"><expr pos:start="2399:13" pos:end="2399:59"><call pos:start="2399:13" pos:end="2399:59"><name pos:start="2399:13" pos:end="2399:22">__put_user</name><argument_list pos:start="2399:23" pos:end="2399:59">(<argument pos:start="2399:24" pos:end="2399:35"><expr pos:start="2399:24" pos:end="2399:35"><name pos:start="2399:24" pos:end="2399:35"><name pos:start="2399:24" pos:end="2399:27">stfs</name><operator pos:start="2399:28" pos:end="2399:28">.</operator><name pos:start="2399:29" pos:end="2399:35">f_ffree</name></name></expr></argument>, <argument pos:start="2399:38" pos:end="2399:58"><expr pos:start="2399:38" pos:end="2399:58"><operator pos:start="2399:38" pos:end="2399:38">&amp;</operator><name pos:start="2399:39" pos:end="2399:58"><name pos:start="2399:39" pos:end="2399:49">target_stfs</name><operator pos:start="2399:50" pos:end="2399:51">-&gt;</operator><name pos:start="2399:52" pos:end="2399:58">f_ffree</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2401:13" pos:end="2401:74"><expr pos:start="2401:13" pos:end="2401:73"><call pos:start="2401:13" pos:end="2401:73"><name pos:start="2401:13" pos:end="2401:22">__put_user</name><argument_list pos:start="2401:23" pos:end="2401:73">(<argument pos:start="2401:24" pos:end="2401:43"><expr pos:start="2401:24" pos:end="2401:43"><name pos:start="2401:24" pos:end="2401:43"><name pos:start="2401:24" pos:end="2401:27">stfs</name><operator pos:start="2401:28" pos:end="2401:28">.</operator><name pos:start="2401:29" pos:end="2401:34">f_fsid</name><operator pos:start="2401:35" pos:end="2401:35">.</operator><name pos:start="2401:36" pos:end="2401:40">__val</name><index pos:start="2401:41" pos:end="2401:43">[<expr pos:start="2401:42" pos:end="2401:42"><literal type="number" pos:start="2401:42" pos:end="2401:42">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="2401:46" pos:end="2401:72"><expr pos:start="2401:46" pos:end="2401:72"><operator pos:start="2401:46" pos:end="2401:46">&amp;</operator><name pos:start="2401:47" pos:end="2401:72"><name pos:start="2401:47" pos:end="2401:57">target_stfs</name><operator pos:start="2401:58" pos:end="2401:59">-&gt;</operator><name pos:start="2401:60" pos:end="2401:65">f_fsid</name><operator pos:start="2401:66" pos:end="2401:66">.</operator><name pos:start="2401:67" pos:end="2401:69">val</name><index pos:start="2401:70" pos:end="2401:72">[<expr pos:start="2401:71" pos:end="2401:71"><literal type="number" pos:start="2401:71" pos:end="2401:71">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2403:13" pos:end="2403:74"><expr pos:start="2403:13" pos:end="2403:73"><call pos:start="2403:13" pos:end="2403:73"><name pos:start="2403:13" pos:end="2403:22">__put_user</name><argument_list pos:start="2403:23" pos:end="2403:73">(<argument pos:start="2403:24" pos:end="2403:43"><expr pos:start="2403:24" pos:end="2403:43"><name pos:start="2403:24" pos:end="2403:43"><name pos:start="2403:24" pos:end="2403:27">stfs</name><operator pos:start="2403:28" pos:end="2403:28">.</operator><name pos:start="2403:29" pos:end="2403:34">f_fsid</name><operator pos:start="2403:35" pos:end="2403:35">.</operator><name pos:start="2403:36" pos:end="2403:40">__val</name><index pos:start="2403:41" pos:end="2403:43">[<expr pos:start="2403:42" pos:end="2403:42"><literal type="number" pos:start="2403:42" pos:end="2403:42">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="2403:46" pos:end="2403:72"><expr pos:start="2403:46" pos:end="2403:72"><operator pos:start="2403:46" pos:end="2403:46">&amp;</operator><name pos:start="2403:47" pos:end="2403:72"><name pos:start="2403:47" pos:end="2403:57">target_stfs</name><operator pos:start="2403:58" pos:end="2403:59">-&gt;</operator><name pos:start="2403:60" pos:end="2403:65">f_fsid</name><operator pos:start="2403:66" pos:end="2403:66">.</operator><name pos:start="2403:67" pos:end="2403:69">val</name><index pos:start="2403:70" pos:end="2403:72">[<expr pos:start="2403:71" pos:end="2403:71"><literal type="number" pos:start="2403:71" pos:end="2403:71">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2405:13" pos:end="2405:64"><expr pos:start="2405:13" pos:end="2405:63"><call pos:start="2405:13" pos:end="2405:63"><name pos:start="2405:13" pos:end="2405:22">__put_user</name><argument_list pos:start="2405:23" pos:end="2405:63">(<argument pos:start="2405:24" pos:end="2405:37"><expr pos:start="2405:24" pos:end="2405:37"><name pos:start="2405:24" pos:end="2405:37"><name pos:start="2405:24" pos:end="2405:27">stfs</name><operator pos:start="2405:28" pos:end="2405:28">.</operator><name pos:start="2405:29" pos:end="2405:37">f_namelen</name></name></expr></argument>, <argument pos:start="2405:40" pos:end="2405:62"><expr pos:start="2405:40" pos:end="2405:62"><operator pos:start="2405:40" pos:end="2405:40">&amp;</operator><name pos:start="2405:41" pos:end="2405:62"><name pos:start="2405:41" pos:end="2405:51">target_stfs</name><operator pos:start="2405:52" pos:end="2405:53">-&gt;</operator><name pos:start="2405:54" pos:end="2405:62">f_namelen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2407:13" pos:end="2407:53"><expr pos:start="2407:13" pos:end="2407:52"><call pos:start="2407:13" pos:end="2407:52"><name pos:start="2407:13" pos:end="2407:30">unlock_user_struct</name><argument_list pos:start="2407:31" pos:end="2407:52">(<argument pos:start="2407:32" pos:end="2407:42"><expr pos:start="2407:32" pos:end="2407:42"><name pos:start="2407:32" pos:end="2407:42">target_stfs</name></expr></argument>, <argument pos:start="2407:45" pos:end="2407:48"><expr pos:start="2407:45" pos:end="2407:48"><name pos:start="2407:45" pos:end="2407:48">arg2</name></expr></argument>, <argument pos:start="2407:51" pos:end="2407:51"><expr pos:start="2407:51" pos:end="2407:51"><literal type="number" pos:start="2407:51" pos:end="2407:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="2411:9" pos:end="2411:14">break;</break>

    <case pos:start="2413:5" pos:end="2413:27">case <expr pos:start="2413:10" pos:end="2413:26"><name pos:start="2413:10" pos:end="2413:26">TARGET_NR_fstatfs</name></expr>:</case>

        <expr_stmt pos:start="2415:9" pos:end="2415:46"><expr pos:start="2415:9" pos:end="2415:45"><name pos:start="2415:9" pos:end="2415:11">ret</name> <operator pos:start="2415:13" pos:end="2415:13">=</operator> <call pos:start="2415:15" pos:end="2415:45"><name pos:start="2415:15" pos:end="2415:23">get_errno</name><argument_list pos:start="2415:24" pos:end="2415:45">(<argument pos:start="2415:25" pos:end="2415:44"><expr pos:start="2415:25" pos:end="2415:44"><call pos:start="2415:25" pos:end="2415:44"><name pos:start="2415:25" pos:end="2415:31">fstatfs</name><argument_list pos:start="2415:32" pos:end="2415:44">(<argument pos:start="2415:33" pos:end="2415:36"><expr pos:start="2415:33" pos:end="2415:36"><name pos:start="2415:33" pos:end="2415:36">arg1</name></expr></argument>, <argument pos:start="2415:39" pos:end="2415:43"><expr pos:start="2415:39" pos:end="2415:43"><operator pos:start="2415:39" pos:end="2415:39">&amp;</operator><name pos:start="2415:40" pos:end="2415:43">stfs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="2417:9" pos:end="2420:0">goto <name pos:start="2417:14" pos:end="2417:27">convert_statfs</name>;</goto>

<cpp:ifdef pos:start="2419:1" pos:end="2419:25">#<cpp:directive pos:start="2419:2" pos:end="2419:6">ifdef</cpp:directive> <name pos:start="2419:8" pos:end="2419:25">TARGET_NR_statfs64</name></cpp:ifdef>

    <case pos:start="2421:5" pos:end="2421:28">case <expr pos:start="2421:10" pos:end="2421:27"><name pos:start="2421:10" pos:end="2421:27">TARGET_NR_statfs64</name></expr>:</case>

        <if_stmt pos:start="2423:9" pos:end="2425:24"><if pos:start="2423:9" pos:end="2425:24">if <condition pos:start="2423:12" pos:end="2423:42">(<expr pos:start="2423:13" pos:end="2423:41"><operator pos:start="2423:13" pos:end="2423:13">!</operator><operator pos:start="2423:14" pos:end="2423:14">(</operator><name pos:start="2423:15" pos:end="2423:15">p</name> <operator pos:start="2423:17" pos:end="2423:17">=</operator> <call pos:start="2423:19" pos:end="2423:40"><name pos:start="2423:19" pos:end="2423:34">lock_user_string</name><argument_list pos:start="2423:35" pos:end="2423:40">(<argument pos:start="2423:36" pos:end="2423:39"><expr pos:start="2423:36" pos:end="2423:39"><name pos:start="2423:36" pos:end="2423:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="2423:41" pos:end="2423:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2425:13" pos:end="2425:24"><block_content pos:start="2425:13" pos:end="2425:24">

            <goto pos:start="2425:13" pos:end="2425:24">goto <name pos:start="2425:18" pos:end="2425:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="2427:9" pos:end="2427:48"><expr pos:start="2427:9" pos:end="2427:47"><name pos:start="2427:9" pos:end="2427:11">ret</name> <operator pos:start="2427:13" pos:end="2427:13">=</operator> <call pos:start="2427:15" pos:end="2427:47"><name pos:start="2427:15" pos:end="2427:23">get_errno</name><argument_list pos:start="2427:24" pos:end="2427:47">(<argument pos:start="2427:25" pos:end="2427:46"><expr pos:start="2427:25" pos:end="2427:46"><call pos:start="2427:25" pos:end="2427:46"><name pos:start="2427:25" pos:end="2427:30">statfs</name><argument_list pos:start="2427:31" pos:end="2427:46">(<argument pos:start="2427:32" pos:end="2427:38"><expr pos:start="2427:32" pos:end="2427:38"><call pos:start="2427:32" pos:end="2427:38"><name pos:start="2427:32" pos:end="2427:35">path</name><argument_list pos:start="2427:36" pos:end="2427:38">(<argument pos:start="2427:37" pos:end="2427:37"><expr pos:start="2427:37" pos:end="2427:37"><name pos:start="2427:37" pos:end="2427:37">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2427:41" pos:end="2427:45"><expr pos:start="2427:41" pos:end="2427:45"><operator pos:start="2427:41" pos:end="2427:41">&amp;</operator><name pos:start="2427:42" pos:end="2427:45">stfs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2429:9" pos:end="2429:32"><expr pos:start="2429:9" pos:end="2429:31"><call pos:start="2429:9" pos:end="2429:31"><name pos:start="2429:9" pos:end="2429:19">unlock_user</name><argument_list pos:start="2429:20" pos:end="2429:31">(<argument pos:start="2429:21" pos:end="2429:21"><expr pos:start="2429:21" pos:end="2429:21"><name pos:start="2429:21" pos:end="2429:21">p</name></expr></argument>, <argument pos:start="2429:24" pos:end="2429:27"><expr pos:start="2429:24" pos:end="2429:27"><name pos:start="2429:24" pos:end="2429:27">arg1</name></expr></argument>, <argument pos:start="2429:30" pos:end="2429:30"><expr pos:start="2429:30" pos:end="2429:30"><literal type="number" pos:start="2429:30" pos:end="2429:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <label pos:start="2431:5" pos:end="2431:21"><name pos:start="2431:5" pos:end="2431:20">convert_statfs64</name>:</label>

        <if_stmt pos:start="2433:9" pos:end="2465:9"><if pos:start="2433:9" pos:end="2465:9">if <condition pos:start="2433:12" pos:end="2433:27">(<expr pos:start="2433:13" pos:end="2433:26"><operator pos:start="2433:13" pos:end="2433:13">!</operator><call pos:start="2433:14" pos:end="2433:26"><name pos:start="2433:14" pos:end="2433:21">is_error</name><argument_list pos:start="2433:22" pos:end="2433:26">(<argument pos:start="2433:23" pos:end="2433:25"><expr pos:start="2433:23" pos:end="2433:25"><name pos:start="2433:23" pos:end="2433:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2433:29" pos:end="2465:9">{<block_content pos:start="2435:13" pos:end="2463:53">

            <decl_stmt pos:start="2435:13" pos:end="2435:48"><decl pos:start="2435:13" pos:end="2435:47"><type pos:start="2435:13" pos:end="2435:36"><name pos:start="2435:13" pos:end="2435:34"><name pos:start="2435:13" pos:end="2435:18">struct</name> <name pos:start="2435:20" pos:end="2435:34">target_statfs64</name></name> <modifier pos:start="2435:36" pos:end="2435:36">*</modifier></type><name pos:start="2435:37" pos:end="2435:47">target_stfs</name></decl>;</decl_stmt>



            <if_stmt pos:start="2439:13" pos:end="2441:28"><if pos:start="2439:13" pos:end="2441:28">if <condition pos:start="2439:16" pos:end="2439:70">(<expr pos:start="2439:17" pos:end="2439:69"><operator pos:start="2439:17" pos:end="2439:17">!</operator><call pos:start="2439:18" pos:end="2439:69"><name pos:start="2439:18" pos:end="2439:33">lock_user_struct</name><argument_list pos:start="2439:34" pos:end="2439:69">(<argument pos:start="2439:35" pos:end="2439:46"><expr pos:start="2439:35" pos:end="2439:46"><name pos:start="2439:35" pos:end="2439:46">VERIFY_WRITE</name></expr></argument>, <argument pos:start="2439:49" pos:end="2439:59"><expr pos:start="2439:49" pos:end="2439:59"><name pos:start="2439:49" pos:end="2439:59">target_stfs</name></expr></argument>, <argument pos:start="2439:62" pos:end="2439:65"><expr pos:start="2439:62" pos:end="2439:65"><name pos:start="2439:62" pos:end="2439:65">arg3</name></expr></argument>, <argument pos:start="2439:68" pos:end="2439:68"><expr pos:start="2439:68" pos:end="2439:68"><literal type="number" pos:start="2439:68" pos:end="2439:68">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2441:17" pos:end="2441:28"><block_content pos:start="2441:17" pos:end="2441:28">

                <goto pos:start="2441:17" pos:end="2441:28">goto <name pos:start="2441:22" pos:end="2441:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="2443:13" pos:end="2443:58"><expr pos:start="2443:13" pos:end="2443:57"><call pos:start="2443:13" pos:end="2443:57"><name pos:start="2443:13" pos:end="2443:22">__put_user</name><argument_list pos:start="2443:23" pos:end="2443:57">(<argument pos:start="2443:24" pos:end="2443:34"><expr pos:start="2443:24" pos:end="2443:34"><name pos:start="2443:24" pos:end="2443:34"><name pos:start="2443:24" pos:end="2443:27">stfs</name><operator pos:start="2443:28" pos:end="2443:28">.</operator><name pos:start="2443:29" pos:end="2443:34">f_type</name></name></expr></argument>, <argument pos:start="2443:37" pos:end="2443:56"><expr pos:start="2443:37" pos:end="2443:56"><operator pos:start="2443:37" pos:end="2443:37">&amp;</operator><name pos:start="2443:38" pos:end="2443:56"><name pos:start="2443:38" pos:end="2443:48">target_stfs</name><operator pos:start="2443:49" pos:end="2443:50">-&gt;</operator><name pos:start="2443:51" pos:end="2443:56">f_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2445:13" pos:end="2445:60"><expr pos:start="2445:13" pos:end="2445:59"><call pos:start="2445:13" pos:end="2445:59"><name pos:start="2445:13" pos:end="2445:22">__put_user</name><argument_list pos:start="2445:23" pos:end="2445:59">(<argument pos:start="2445:24" pos:end="2445:35"><expr pos:start="2445:24" pos:end="2445:35"><name pos:start="2445:24" pos:end="2445:35"><name pos:start="2445:24" pos:end="2445:27">stfs</name><operator pos:start="2445:28" pos:end="2445:28">.</operator><name pos:start="2445:29" pos:end="2445:35">f_bsize</name></name></expr></argument>, <argument pos:start="2445:38" pos:end="2445:58"><expr pos:start="2445:38" pos:end="2445:58"><operator pos:start="2445:38" pos:end="2445:38">&amp;</operator><name pos:start="2445:39" pos:end="2445:58"><name pos:start="2445:39" pos:end="2445:49">target_stfs</name><operator pos:start="2445:50" pos:end="2445:51">-&gt;</operator><name pos:start="2445:52" pos:end="2445:58">f_bsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2447:13" pos:end="2447:62"><expr pos:start="2447:13" pos:end="2447:61"><call pos:start="2447:13" pos:end="2447:61"><name pos:start="2447:13" pos:end="2447:22">__put_user</name><argument_list pos:start="2447:23" pos:end="2447:61">(<argument pos:start="2447:24" pos:end="2447:36"><expr pos:start="2447:24" pos:end="2447:36"><name pos:start="2447:24" pos:end="2447:36"><name pos:start="2447:24" pos:end="2447:27">stfs</name><operator pos:start="2447:28" pos:end="2447:28">.</operator><name pos:start="2447:29" pos:end="2447:36">f_blocks</name></name></expr></argument>, <argument pos:start="2447:39" pos:end="2447:60"><expr pos:start="2447:39" pos:end="2447:60"><operator pos:start="2447:39" pos:end="2447:39">&amp;</operator><name pos:start="2447:40" pos:end="2447:60"><name pos:start="2447:40" pos:end="2447:50">target_stfs</name><operator pos:start="2447:51" pos:end="2447:52">-&gt;</operator><name pos:start="2447:53" pos:end="2447:60">f_blocks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2449:13" pos:end="2449:60"><expr pos:start="2449:13" pos:end="2449:59"><call pos:start="2449:13" pos:end="2449:59"><name pos:start="2449:13" pos:end="2449:22">__put_user</name><argument_list pos:start="2449:23" pos:end="2449:59">(<argument pos:start="2449:24" pos:end="2449:35"><expr pos:start="2449:24" pos:end="2449:35"><name pos:start="2449:24" pos:end="2449:35"><name pos:start="2449:24" pos:end="2449:27">stfs</name><operator pos:start="2449:28" pos:end="2449:28">.</operator><name pos:start="2449:29" pos:end="2449:35">f_bfree</name></name></expr></argument>, <argument pos:start="2449:38" pos:end="2449:58"><expr pos:start="2449:38" pos:end="2449:58"><operator pos:start="2449:38" pos:end="2449:38">&amp;</operator><name pos:start="2449:39" pos:end="2449:58"><name pos:start="2449:39" pos:end="2449:49">target_stfs</name><operator pos:start="2449:50" pos:end="2449:51">-&gt;</operator><name pos:start="2449:52" pos:end="2449:58">f_bfree</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2451:13" pos:end="2451:62"><expr pos:start="2451:13" pos:end="2451:61"><call pos:start="2451:13" pos:end="2451:61"><name pos:start="2451:13" pos:end="2451:22">__put_user</name><argument_list pos:start="2451:23" pos:end="2451:61">(<argument pos:start="2451:24" pos:end="2451:36"><expr pos:start="2451:24" pos:end="2451:36"><name pos:start="2451:24" pos:end="2451:36"><name pos:start="2451:24" pos:end="2451:27">stfs</name><operator pos:start="2451:28" pos:end="2451:28">.</operator><name pos:start="2451:29" pos:end="2451:36">f_bavail</name></name></expr></argument>, <argument pos:start="2451:39" pos:end="2451:60"><expr pos:start="2451:39" pos:end="2451:60"><operator pos:start="2451:39" pos:end="2451:39">&amp;</operator><name pos:start="2451:40" pos:end="2451:60"><name pos:start="2451:40" pos:end="2451:50">target_stfs</name><operator pos:start="2451:51" pos:end="2451:52">-&gt;</operator><name pos:start="2451:53" pos:end="2451:60">f_bavail</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2453:13" pos:end="2453:60"><expr pos:start="2453:13" pos:end="2453:59"><call pos:start="2453:13" pos:end="2453:59"><name pos:start="2453:13" pos:end="2453:22">__put_user</name><argument_list pos:start="2453:23" pos:end="2453:59">(<argument pos:start="2453:24" pos:end="2453:35"><expr pos:start="2453:24" pos:end="2453:35"><name pos:start="2453:24" pos:end="2453:35"><name pos:start="2453:24" pos:end="2453:27">stfs</name><operator pos:start="2453:28" pos:end="2453:28">.</operator><name pos:start="2453:29" pos:end="2453:35">f_files</name></name></expr></argument>, <argument pos:start="2453:38" pos:end="2453:58"><expr pos:start="2453:38" pos:end="2453:58"><operator pos:start="2453:38" pos:end="2453:38">&amp;</operator><name pos:start="2453:39" pos:end="2453:58"><name pos:start="2453:39" pos:end="2453:49">target_stfs</name><operator pos:start="2453:50" pos:end="2453:51">-&gt;</operator><name pos:start="2453:52" pos:end="2453:58">f_files</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2455:13" pos:end="2455:60"><expr pos:start="2455:13" pos:end="2455:59"><call pos:start="2455:13" pos:end="2455:59"><name pos:start="2455:13" pos:end="2455:22">__put_user</name><argument_list pos:start="2455:23" pos:end="2455:59">(<argument pos:start="2455:24" pos:end="2455:35"><expr pos:start="2455:24" pos:end="2455:35"><name pos:start="2455:24" pos:end="2455:35"><name pos:start="2455:24" pos:end="2455:27">stfs</name><operator pos:start="2455:28" pos:end="2455:28">.</operator><name pos:start="2455:29" pos:end="2455:35">f_ffree</name></name></expr></argument>, <argument pos:start="2455:38" pos:end="2455:58"><expr pos:start="2455:38" pos:end="2455:58"><operator pos:start="2455:38" pos:end="2455:38">&amp;</operator><name pos:start="2455:39" pos:end="2455:58"><name pos:start="2455:39" pos:end="2455:49">target_stfs</name><operator pos:start="2455:50" pos:end="2455:51">-&gt;</operator><name pos:start="2455:52" pos:end="2455:58">f_ffree</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2457:13" pos:end="2457:74"><expr pos:start="2457:13" pos:end="2457:73"><call pos:start="2457:13" pos:end="2457:73"><name pos:start="2457:13" pos:end="2457:22">__put_user</name><argument_list pos:start="2457:23" pos:end="2457:73">(<argument pos:start="2457:24" pos:end="2457:43"><expr pos:start="2457:24" pos:end="2457:43"><name pos:start="2457:24" pos:end="2457:43"><name pos:start="2457:24" pos:end="2457:27">stfs</name><operator pos:start="2457:28" pos:end="2457:28">.</operator><name pos:start="2457:29" pos:end="2457:34">f_fsid</name><operator pos:start="2457:35" pos:end="2457:35">.</operator><name pos:start="2457:36" pos:end="2457:40">__val</name><index pos:start="2457:41" pos:end="2457:43">[<expr pos:start="2457:42" pos:end="2457:42"><literal type="number" pos:start="2457:42" pos:end="2457:42">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="2457:46" pos:end="2457:72"><expr pos:start="2457:46" pos:end="2457:72"><operator pos:start="2457:46" pos:end="2457:46">&amp;</operator><name pos:start="2457:47" pos:end="2457:72"><name pos:start="2457:47" pos:end="2457:57">target_stfs</name><operator pos:start="2457:58" pos:end="2457:59">-&gt;</operator><name pos:start="2457:60" pos:end="2457:65">f_fsid</name><operator pos:start="2457:66" pos:end="2457:66">.</operator><name pos:start="2457:67" pos:end="2457:69">val</name><index pos:start="2457:70" pos:end="2457:72">[<expr pos:start="2457:71" pos:end="2457:71"><literal type="number" pos:start="2457:71" pos:end="2457:71">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2459:13" pos:end="2459:74"><expr pos:start="2459:13" pos:end="2459:73"><call pos:start="2459:13" pos:end="2459:73"><name pos:start="2459:13" pos:end="2459:22">__put_user</name><argument_list pos:start="2459:23" pos:end="2459:73">(<argument pos:start="2459:24" pos:end="2459:43"><expr pos:start="2459:24" pos:end="2459:43"><name pos:start="2459:24" pos:end="2459:43"><name pos:start="2459:24" pos:end="2459:27">stfs</name><operator pos:start="2459:28" pos:end="2459:28">.</operator><name pos:start="2459:29" pos:end="2459:34">f_fsid</name><operator pos:start="2459:35" pos:end="2459:35">.</operator><name pos:start="2459:36" pos:end="2459:40">__val</name><index pos:start="2459:41" pos:end="2459:43">[<expr pos:start="2459:42" pos:end="2459:42"><literal type="number" pos:start="2459:42" pos:end="2459:42">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="2459:46" pos:end="2459:72"><expr pos:start="2459:46" pos:end="2459:72"><operator pos:start="2459:46" pos:end="2459:46">&amp;</operator><name pos:start="2459:47" pos:end="2459:72"><name pos:start="2459:47" pos:end="2459:57">target_stfs</name><operator pos:start="2459:58" pos:end="2459:59">-&gt;</operator><name pos:start="2459:60" pos:end="2459:65">f_fsid</name><operator pos:start="2459:66" pos:end="2459:66">.</operator><name pos:start="2459:67" pos:end="2459:69">val</name><index pos:start="2459:70" pos:end="2459:72">[<expr pos:start="2459:71" pos:end="2459:71"><literal type="number" pos:start="2459:71" pos:end="2459:71">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2461:13" pos:end="2461:64"><expr pos:start="2461:13" pos:end="2461:63"><call pos:start="2461:13" pos:end="2461:63"><name pos:start="2461:13" pos:end="2461:22">__put_user</name><argument_list pos:start="2461:23" pos:end="2461:63">(<argument pos:start="2461:24" pos:end="2461:37"><expr pos:start="2461:24" pos:end="2461:37"><name pos:start="2461:24" pos:end="2461:37"><name pos:start="2461:24" pos:end="2461:27">stfs</name><operator pos:start="2461:28" pos:end="2461:28">.</operator><name pos:start="2461:29" pos:end="2461:37">f_namelen</name></name></expr></argument>, <argument pos:start="2461:40" pos:end="2461:62"><expr pos:start="2461:40" pos:end="2461:62"><operator pos:start="2461:40" pos:end="2461:40">&amp;</operator><name pos:start="2461:41" pos:end="2461:62"><name pos:start="2461:41" pos:end="2461:51">target_stfs</name><operator pos:start="2461:52" pos:end="2461:53">-&gt;</operator><name pos:start="2461:54" pos:end="2461:62">f_namelen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2463:13" pos:end="2463:53"><expr pos:start="2463:13" pos:end="2463:52"><call pos:start="2463:13" pos:end="2463:52"><name pos:start="2463:13" pos:end="2463:30">unlock_user_struct</name><argument_list pos:start="2463:31" pos:end="2463:52">(<argument pos:start="2463:32" pos:end="2463:42"><expr pos:start="2463:32" pos:end="2463:42"><name pos:start="2463:32" pos:end="2463:42">target_stfs</name></expr></argument>, <argument pos:start="2463:45" pos:end="2463:48"><expr pos:start="2463:45" pos:end="2463:48"><name pos:start="2463:45" pos:end="2463:48">arg3</name></expr></argument>, <argument pos:start="2463:51" pos:end="2463:51"><expr pos:start="2463:51" pos:end="2463:51"><literal type="number" pos:start="2463:51" pos:end="2463:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="2467:9" pos:end="2467:14">break;</break>

    <case pos:start="2469:5" pos:end="2469:29">case <expr pos:start="2469:10" pos:end="2469:28"><name pos:start="2469:10" pos:end="2469:28">TARGET_NR_fstatfs64</name></expr>:</case>

        <expr_stmt pos:start="2471:9" pos:end="2471:46"><expr pos:start="2471:9" pos:end="2471:45"><name pos:start="2471:9" pos:end="2471:11">ret</name> <operator pos:start="2471:13" pos:end="2471:13">=</operator> <call pos:start="2471:15" pos:end="2471:45"><name pos:start="2471:15" pos:end="2471:23">get_errno</name><argument_list pos:start="2471:24" pos:end="2471:45">(<argument pos:start="2471:25" pos:end="2471:44"><expr pos:start="2471:25" pos:end="2471:44"><call pos:start="2471:25" pos:end="2471:44"><name pos:start="2471:25" pos:end="2471:31">fstatfs</name><argument_list pos:start="2471:32" pos:end="2471:44">(<argument pos:start="2471:33" pos:end="2471:36"><expr pos:start="2471:33" pos:end="2471:36"><name pos:start="2471:33" pos:end="2471:36">arg1</name></expr></argument>, <argument pos:start="2471:39" pos:end="2471:43"><expr pos:start="2471:39" pos:end="2471:43"><operator pos:start="2471:39" pos:end="2471:39">&amp;</operator><name pos:start="2471:40" pos:end="2471:43">stfs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="2473:9" pos:end="2478:0">goto <name pos:start="2473:14" pos:end="2473:29">convert_statfs64</name>;</goto>

<cpp:endif pos:start="2475:1" pos:end="2475:6">#<cpp:directive pos:start="2475:2" pos:end="2475:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2477:1" pos:end="2477:23">#<cpp:directive pos:start="2477:2" pos:end="2477:6">ifdef</cpp:directive> <name pos:start="2477:8" pos:end="2477:23">TARGET_NR_ioperm</name></cpp:ifdef>

    <case pos:start="2479:5" pos:end="2479:26">case <expr pos:start="2479:10" pos:end="2479:25"><name pos:start="2479:10" pos:end="2479:25">TARGET_NR_ioperm</name></expr>:</case>

        <goto pos:start="2481:9" pos:end="2486:0">goto <name pos:start="2481:14" pos:end="2481:26">unimplemented</name>;</goto>

<cpp:endif pos:start="2483:1" pos:end="2483:6">#<cpp:directive pos:start="2483:2" pos:end="2483:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2485:1" pos:end="2485:27">#<cpp:directive pos:start="2485:2" pos:end="2485:6">ifdef</cpp:directive> <name pos:start="2485:8" pos:end="2485:27">TARGET_NR_socketcall</name></cpp:ifdef>

    <case pos:start="2487:5" pos:end="2487:30">case <expr pos:start="2487:10" pos:end="2487:29"><name pos:start="2487:10" pos:end="2487:29">TARGET_NR_socketcall</name></expr>:</case>

        <expr_stmt pos:start="2489:9" pos:end="2489:40"><expr pos:start="2489:9" pos:end="2489:39"><name pos:start="2489:9" pos:end="2489:11">ret</name> <operator pos:start="2489:13" pos:end="2489:13">=</operator> <call pos:start="2489:15" pos:end="2489:39"><name pos:start="2489:15" pos:end="2489:27">do_socketcall</name><argument_list pos:start="2489:28" pos:end="2489:39">(<argument pos:start="2489:29" pos:end="2489:32"><expr pos:start="2489:29" pos:end="2489:32"><name pos:start="2489:29" pos:end="2489:32">arg1</name></expr></argument>, <argument pos:start="2489:35" pos:end="2489:38"><expr pos:start="2489:35" pos:end="2489:38"><name pos:start="2489:35" pos:end="2489:38">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2491:9" pos:end="2496:0">break;</break>

<cpp:endif pos:start="2493:1" pos:end="2493:6">#<cpp:directive pos:start="2493:2" pos:end="2493:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2495:1" pos:end="2495:23">#<cpp:directive pos:start="2495:2" pos:end="2495:6">ifdef</cpp:directive> <name pos:start="2495:8" pos:end="2495:23">TARGET_NR_accept</name></cpp:ifdef>

    <case pos:start="2497:5" pos:end="2497:26">case <expr pos:start="2497:10" pos:end="2497:25"><name pos:start="2497:10" pos:end="2497:25">TARGET_NR_accept</name></expr>:</case>

        <expr_stmt pos:start="2499:9" pos:end="2499:42"><expr pos:start="2499:9" pos:end="2499:41"><name pos:start="2499:9" pos:end="2499:11">ret</name> <operator pos:start="2499:13" pos:end="2499:13">=</operator> <call pos:start="2499:15" pos:end="2499:41"><name pos:start="2499:15" pos:end="2499:23">do_accept</name><argument_list pos:start="2499:24" pos:end="2499:41">(<argument pos:start="2499:25" pos:end="2499:28"><expr pos:start="2499:25" pos:end="2499:28"><name pos:start="2499:25" pos:end="2499:28">arg1</name></expr></argument>, <argument pos:start="2499:31" pos:end="2499:34"><expr pos:start="2499:31" pos:end="2499:34"><name pos:start="2499:31" pos:end="2499:34">arg2</name></expr></argument>, <argument pos:start="2499:37" pos:end="2499:40"><expr pos:start="2499:37" pos:end="2499:40"><name pos:start="2499:37" pos:end="2499:40">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2501:9" pos:end="2506:0">break;</break>

<cpp:endif pos:start="2503:1" pos:end="2503:6">#<cpp:directive pos:start="2503:2" pos:end="2503:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2505:1" pos:end="2505:21">#<cpp:directive pos:start="2505:2" pos:end="2505:6">ifdef</cpp:directive> <name pos:start="2505:8" pos:end="2505:21">TARGET_NR_bind</name></cpp:ifdef>

    <case pos:start="2507:5" pos:end="2507:24">case <expr pos:start="2507:10" pos:end="2507:23"><name pos:start="2507:10" pos:end="2507:23">TARGET_NR_bind</name></expr>:</case>

        <expr_stmt pos:start="2509:9" pos:end="2509:40"><expr pos:start="2509:9" pos:end="2509:39"><name pos:start="2509:9" pos:end="2509:11">ret</name> <operator pos:start="2509:13" pos:end="2509:13">=</operator> <call pos:start="2509:15" pos:end="2509:39"><name pos:start="2509:15" pos:end="2509:21">do_bind</name><argument_list pos:start="2509:22" pos:end="2509:39">(<argument pos:start="2509:23" pos:end="2509:26"><expr pos:start="2509:23" pos:end="2509:26"><name pos:start="2509:23" pos:end="2509:26">arg1</name></expr></argument>, <argument pos:start="2509:29" pos:end="2509:32"><expr pos:start="2509:29" pos:end="2509:32"><name pos:start="2509:29" pos:end="2509:32">arg2</name></expr></argument>, <argument pos:start="2509:35" pos:end="2509:38"><expr pos:start="2509:35" pos:end="2509:38"><name pos:start="2509:35" pos:end="2509:38">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2511:9" pos:end="2516:0">break;</break>

<cpp:endif pos:start="2513:1" pos:end="2513:6">#<cpp:directive pos:start="2513:2" pos:end="2513:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2515:1" pos:end="2515:24">#<cpp:directive pos:start="2515:2" pos:end="2515:6">ifdef</cpp:directive> <name pos:start="2515:8" pos:end="2515:24">TARGET_NR_connect</name></cpp:ifdef>

    <case pos:start="2517:5" pos:end="2517:27">case <expr pos:start="2517:10" pos:end="2517:26"><name pos:start="2517:10" pos:end="2517:26">TARGET_NR_connect</name></expr>:</case>

        <expr_stmt pos:start="2519:9" pos:end="2519:43"><expr pos:start="2519:9" pos:end="2519:42"><name pos:start="2519:9" pos:end="2519:11">ret</name> <operator pos:start="2519:13" pos:end="2519:13">=</operator> <call pos:start="2519:15" pos:end="2519:42"><name pos:start="2519:15" pos:end="2519:24">do_connect</name><argument_list pos:start="2519:25" pos:end="2519:42">(<argument pos:start="2519:26" pos:end="2519:29"><expr pos:start="2519:26" pos:end="2519:29"><name pos:start="2519:26" pos:end="2519:29">arg1</name></expr></argument>, <argument pos:start="2519:32" pos:end="2519:35"><expr pos:start="2519:32" pos:end="2519:35"><name pos:start="2519:32" pos:end="2519:35">arg2</name></expr></argument>, <argument pos:start="2519:38" pos:end="2519:41"><expr pos:start="2519:38" pos:end="2519:41"><name pos:start="2519:38" pos:end="2519:41">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2521:9" pos:end="2526:0">break;</break>

<cpp:endif pos:start="2523:1" pos:end="2523:6">#<cpp:directive pos:start="2523:2" pos:end="2523:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2525:1" pos:end="2525:28">#<cpp:directive pos:start="2525:2" pos:end="2525:6">ifdef</cpp:directive> <name pos:start="2525:8" pos:end="2525:28">TARGET_NR_getpeername</name></cpp:ifdef>

    <case pos:start="2527:5" pos:end="2527:31">case <expr pos:start="2527:10" pos:end="2527:30"><name pos:start="2527:10" pos:end="2527:30">TARGET_NR_getpeername</name></expr>:</case>

        <expr_stmt pos:start="2529:9" pos:end="2529:47"><expr pos:start="2529:9" pos:end="2529:46"><name pos:start="2529:9" pos:end="2529:11">ret</name> <operator pos:start="2529:13" pos:end="2529:13">=</operator> <call pos:start="2529:15" pos:end="2529:46"><name pos:start="2529:15" pos:end="2529:28">do_getpeername</name><argument_list pos:start="2529:29" pos:end="2529:46">(<argument pos:start="2529:30" pos:end="2529:33"><expr pos:start="2529:30" pos:end="2529:33"><name pos:start="2529:30" pos:end="2529:33">arg1</name></expr></argument>, <argument pos:start="2529:36" pos:end="2529:39"><expr pos:start="2529:36" pos:end="2529:39"><name pos:start="2529:36" pos:end="2529:39">arg2</name></expr></argument>, <argument pos:start="2529:42" pos:end="2529:45"><expr pos:start="2529:42" pos:end="2529:45"><name pos:start="2529:42" pos:end="2529:45">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2531:9" pos:end="2536:0">break;</break>

<cpp:endif pos:start="2533:1" pos:end="2533:6">#<cpp:directive pos:start="2533:2" pos:end="2533:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2535:1" pos:end="2535:28">#<cpp:directive pos:start="2535:2" pos:end="2535:6">ifdef</cpp:directive> <name pos:start="2535:8" pos:end="2535:28">TARGET_NR_getsockname</name></cpp:ifdef>

    <case pos:start="2537:5" pos:end="2537:31">case <expr pos:start="2537:10" pos:end="2537:30"><name pos:start="2537:10" pos:end="2537:30">TARGET_NR_getsockname</name></expr>:</case>

        <expr_stmt pos:start="2539:9" pos:end="2539:47"><expr pos:start="2539:9" pos:end="2539:46"><name pos:start="2539:9" pos:end="2539:11">ret</name> <operator pos:start="2539:13" pos:end="2539:13">=</operator> <call pos:start="2539:15" pos:end="2539:46"><name pos:start="2539:15" pos:end="2539:28">do_getsockname</name><argument_list pos:start="2539:29" pos:end="2539:46">(<argument pos:start="2539:30" pos:end="2539:33"><expr pos:start="2539:30" pos:end="2539:33"><name pos:start="2539:30" pos:end="2539:33">arg1</name></expr></argument>, <argument pos:start="2539:36" pos:end="2539:39"><expr pos:start="2539:36" pos:end="2539:39"><name pos:start="2539:36" pos:end="2539:39">arg2</name></expr></argument>, <argument pos:start="2539:42" pos:end="2539:45"><expr pos:start="2539:42" pos:end="2539:45"><name pos:start="2539:42" pos:end="2539:45">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2541:9" pos:end="2546:0">break;</break>

<cpp:endif pos:start="2543:1" pos:end="2543:6">#<cpp:directive pos:start="2543:2" pos:end="2543:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2545:1" pos:end="2545:27">#<cpp:directive pos:start="2545:2" pos:end="2545:6">ifdef</cpp:directive> <name pos:start="2545:8" pos:end="2545:27">TARGET_NR_getsockopt</name></cpp:ifdef>

    <case pos:start="2547:5" pos:end="2547:30">case <expr pos:start="2547:10" pos:end="2547:29"><name pos:start="2547:10" pos:end="2547:29">TARGET_NR_getsockopt</name></expr>:</case>

        <expr_stmt pos:start="2549:9" pos:end="2549:58"><expr pos:start="2549:9" pos:end="2549:57"><name pos:start="2549:9" pos:end="2549:11">ret</name> <operator pos:start="2549:13" pos:end="2549:13">=</operator> <call pos:start="2549:15" pos:end="2549:57"><name pos:start="2549:15" pos:end="2549:27">do_getsockopt</name><argument_list pos:start="2549:28" pos:end="2549:57">(<argument pos:start="2549:29" pos:end="2549:32"><expr pos:start="2549:29" pos:end="2549:32"><name pos:start="2549:29" pos:end="2549:32">arg1</name></expr></argument>, <argument pos:start="2549:35" pos:end="2549:38"><expr pos:start="2549:35" pos:end="2549:38"><name pos:start="2549:35" pos:end="2549:38">arg2</name></expr></argument>, <argument pos:start="2549:41" pos:end="2549:44"><expr pos:start="2549:41" pos:end="2549:44"><name pos:start="2549:41" pos:end="2549:44">arg3</name></expr></argument>, <argument pos:start="2549:47" pos:end="2549:50"><expr pos:start="2549:47" pos:end="2549:50"><name pos:start="2549:47" pos:end="2549:50">arg4</name></expr></argument>, <argument pos:start="2549:53" pos:end="2549:56"><expr pos:start="2549:53" pos:end="2549:56"><name pos:start="2549:53" pos:end="2549:56">arg5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2551:9" pos:end="2556:0">break;</break>

<cpp:endif pos:start="2553:1" pos:end="2553:6">#<cpp:directive pos:start="2553:2" pos:end="2553:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2555:1" pos:end="2555:23">#<cpp:directive pos:start="2555:2" pos:end="2555:6">ifdef</cpp:directive> <name pos:start="2555:8" pos:end="2555:23">TARGET_NR_listen</name></cpp:ifdef>

    <case pos:start="2557:5" pos:end="2557:26">case <expr pos:start="2557:10" pos:end="2557:25"><name pos:start="2557:10" pos:end="2557:25">TARGET_NR_listen</name></expr>:</case>

        <expr_stmt pos:start="2559:9" pos:end="2559:44"><expr pos:start="2559:9" pos:end="2559:43"><name pos:start="2559:9" pos:end="2559:11">ret</name> <operator pos:start="2559:13" pos:end="2559:13">=</operator> <call pos:start="2559:15" pos:end="2559:43"><name pos:start="2559:15" pos:end="2559:23">get_errno</name><argument_list pos:start="2559:24" pos:end="2559:43">(<argument pos:start="2559:25" pos:end="2559:42"><expr pos:start="2559:25" pos:end="2559:42"><call pos:start="2559:25" pos:end="2559:42"><name pos:start="2559:25" pos:end="2559:30">listen</name><argument_list pos:start="2559:31" pos:end="2559:42">(<argument pos:start="2559:32" pos:end="2559:35"><expr pos:start="2559:32" pos:end="2559:35"><name pos:start="2559:32" pos:end="2559:35">arg1</name></expr></argument>, <argument pos:start="2559:38" pos:end="2559:41"><expr pos:start="2559:38" pos:end="2559:41"><name pos:start="2559:38" pos:end="2559:41">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2561:9" pos:end="2566:0">break;</break>

<cpp:endif pos:start="2563:1" pos:end="2563:6">#<cpp:directive pos:start="2563:2" pos:end="2563:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2565:1" pos:end="2565:21">#<cpp:directive pos:start="2565:2" pos:end="2565:6">ifdef</cpp:directive> <name pos:start="2565:8" pos:end="2565:21">TARGET_NR_recv</name></cpp:ifdef>

    <case pos:start="2567:5" pos:end="2567:24">case <expr pos:start="2567:10" pos:end="2567:23"><name pos:start="2567:10" pos:end="2567:23">TARGET_NR_recv</name></expr>:</case>

        <expr_stmt pos:start="2569:9" pos:end="2569:56"><expr pos:start="2569:9" pos:end="2569:55"><name pos:start="2569:9" pos:end="2569:11">ret</name> <operator pos:start="2569:13" pos:end="2569:13">=</operator> <call pos:start="2569:15" pos:end="2569:55"><name pos:start="2569:15" pos:end="2569:25">do_recvfrom</name><argument_list pos:start="2569:26" pos:end="2569:55">(<argument pos:start="2569:27" pos:end="2569:30"><expr pos:start="2569:27" pos:end="2569:30"><name pos:start="2569:27" pos:end="2569:30">arg1</name></expr></argument>, <argument pos:start="2569:33" pos:end="2569:36"><expr pos:start="2569:33" pos:end="2569:36"><name pos:start="2569:33" pos:end="2569:36">arg2</name></expr></argument>, <argument pos:start="2569:39" pos:end="2569:42"><expr pos:start="2569:39" pos:end="2569:42"><name pos:start="2569:39" pos:end="2569:42">arg3</name></expr></argument>, <argument pos:start="2569:45" pos:end="2569:48"><expr pos:start="2569:45" pos:end="2569:48"><name pos:start="2569:45" pos:end="2569:48">arg4</name></expr></argument>, <argument pos:start="2569:51" pos:end="2569:51"><expr pos:start="2569:51" pos:end="2569:51"><literal type="number" pos:start="2569:51" pos:end="2569:51">0</literal></expr></argument>, <argument pos:start="2569:54" pos:end="2569:54"><expr pos:start="2569:54" pos:end="2569:54"><literal type="number" pos:start="2569:54" pos:end="2569:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2571:9" pos:end="2576:0">break;</break>

<cpp:endif pos:start="2573:1" pos:end="2573:6">#<cpp:directive pos:start="2573:2" pos:end="2573:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2575:1" pos:end="2575:25">#<cpp:directive pos:start="2575:2" pos:end="2575:6">ifdef</cpp:directive> <name pos:start="2575:8" pos:end="2575:25">TARGET_NR_recvfrom</name></cpp:ifdef>

    <case pos:start="2577:5" pos:end="2577:28">case <expr pos:start="2577:10" pos:end="2577:27"><name pos:start="2577:10" pos:end="2577:27">TARGET_NR_recvfrom</name></expr>:</case>

        <expr_stmt pos:start="2579:9" pos:end="2579:62"><expr pos:start="2579:9" pos:end="2579:61"><name pos:start="2579:9" pos:end="2579:11">ret</name> <operator pos:start="2579:13" pos:end="2579:13">=</operator> <call pos:start="2579:15" pos:end="2579:61"><name pos:start="2579:15" pos:end="2579:25">do_recvfrom</name><argument_list pos:start="2579:26" pos:end="2579:61">(<argument pos:start="2579:27" pos:end="2579:30"><expr pos:start="2579:27" pos:end="2579:30"><name pos:start="2579:27" pos:end="2579:30">arg1</name></expr></argument>, <argument pos:start="2579:33" pos:end="2579:36"><expr pos:start="2579:33" pos:end="2579:36"><name pos:start="2579:33" pos:end="2579:36">arg2</name></expr></argument>, <argument pos:start="2579:39" pos:end="2579:42"><expr pos:start="2579:39" pos:end="2579:42"><name pos:start="2579:39" pos:end="2579:42">arg3</name></expr></argument>, <argument pos:start="2579:45" pos:end="2579:48"><expr pos:start="2579:45" pos:end="2579:48"><name pos:start="2579:45" pos:end="2579:48">arg4</name></expr></argument>, <argument pos:start="2579:51" pos:end="2579:54"><expr pos:start="2579:51" pos:end="2579:54"><name pos:start="2579:51" pos:end="2579:54">arg5</name></expr></argument>, <argument pos:start="2579:57" pos:end="2579:60"><expr pos:start="2579:57" pos:end="2579:60"><name pos:start="2579:57" pos:end="2579:60">arg6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2581:9" pos:end="2586:0">break;</break>

<cpp:endif pos:start="2583:1" pos:end="2583:6">#<cpp:directive pos:start="2583:2" pos:end="2583:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2585:1" pos:end="2585:24">#<cpp:directive pos:start="2585:2" pos:end="2585:6">ifdef</cpp:directive> <name pos:start="2585:8" pos:end="2585:24">TARGET_NR_recvmsg</name></cpp:ifdef>

    <case pos:start="2587:5" pos:end="2587:27">case <expr pos:start="2587:10" pos:end="2587:26"><name pos:start="2587:10" pos:end="2587:26">TARGET_NR_recvmsg</name></expr>:</case>

        <expr_stmt pos:start="2589:9" pos:end="2589:50"><expr pos:start="2589:9" pos:end="2589:49"><name pos:start="2589:9" pos:end="2589:11">ret</name> <operator pos:start="2589:13" pos:end="2589:13">=</operator> <call pos:start="2589:15" pos:end="2589:49"><name pos:start="2589:15" pos:end="2589:28">do_sendrecvmsg</name><argument_list pos:start="2589:29" pos:end="2589:49">(<argument pos:start="2589:30" pos:end="2589:33"><expr pos:start="2589:30" pos:end="2589:33"><name pos:start="2589:30" pos:end="2589:33">arg1</name></expr></argument>, <argument pos:start="2589:36" pos:end="2589:39"><expr pos:start="2589:36" pos:end="2589:39"><name pos:start="2589:36" pos:end="2589:39">arg2</name></expr></argument>, <argument pos:start="2589:42" pos:end="2589:45"><expr pos:start="2589:42" pos:end="2589:45"><name pos:start="2589:42" pos:end="2589:45">arg3</name></expr></argument>, <argument pos:start="2589:48" pos:end="2589:48"><expr pos:start="2589:48" pos:end="2589:48"><literal type="number" pos:start="2589:48" pos:end="2589:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2591:9" pos:end="2596:0">break;</break>

<cpp:endif pos:start="2593:1" pos:end="2593:6">#<cpp:directive pos:start="2593:2" pos:end="2593:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2595:1" pos:end="2595:21">#<cpp:directive pos:start="2595:2" pos:end="2595:6">ifdef</cpp:directive> <name pos:start="2595:8" pos:end="2595:21">TARGET_NR_send</name></cpp:ifdef>

    <case pos:start="2597:5" pos:end="2597:24">case <expr pos:start="2597:10" pos:end="2597:23"><name pos:start="2597:10" pos:end="2597:23">TARGET_NR_send</name></expr>:</case>

        <expr_stmt pos:start="2599:9" pos:end="2599:54"><expr pos:start="2599:9" pos:end="2599:53"><name pos:start="2599:9" pos:end="2599:11">ret</name> <operator pos:start="2599:13" pos:end="2599:13">=</operator> <call pos:start="2599:15" pos:end="2599:53"><name pos:start="2599:15" pos:end="2599:23">do_sendto</name><argument_list pos:start="2599:24" pos:end="2599:53">(<argument pos:start="2599:25" pos:end="2599:28"><expr pos:start="2599:25" pos:end="2599:28"><name pos:start="2599:25" pos:end="2599:28">arg1</name></expr></argument>, <argument pos:start="2599:31" pos:end="2599:34"><expr pos:start="2599:31" pos:end="2599:34"><name pos:start="2599:31" pos:end="2599:34">arg2</name></expr></argument>, <argument pos:start="2599:37" pos:end="2599:40"><expr pos:start="2599:37" pos:end="2599:40"><name pos:start="2599:37" pos:end="2599:40">arg3</name></expr></argument>, <argument pos:start="2599:43" pos:end="2599:46"><expr pos:start="2599:43" pos:end="2599:46"><name pos:start="2599:43" pos:end="2599:46">arg4</name></expr></argument>, <argument pos:start="2599:49" pos:end="2599:49"><expr pos:start="2599:49" pos:end="2599:49"><literal type="number" pos:start="2599:49" pos:end="2599:49">0</literal></expr></argument>, <argument pos:start="2599:52" pos:end="2599:52"><expr pos:start="2599:52" pos:end="2599:52"><literal type="number" pos:start="2599:52" pos:end="2599:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2601:9" pos:end="2606:0">break;</break>

<cpp:endif pos:start="2603:1" pos:end="2603:6">#<cpp:directive pos:start="2603:2" pos:end="2603:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2605:1" pos:end="2605:24">#<cpp:directive pos:start="2605:2" pos:end="2605:6">ifdef</cpp:directive> <name pos:start="2605:8" pos:end="2605:24">TARGET_NR_sendmsg</name></cpp:ifdef>

    <case pos:start="2607:5" pos:end="2607:27">case <expr pos:start="2607:10" pos:end="2607:26"><name pos:start="2607:10" pos:end="2607:26">TARGET_NR_sendmsg</name></expr>:</case>

        <expr_stmt pos:start="2609:9" pos:end="2609:50"><expr pos:start="2609:9" pos:end="2609:49"><name pos:start="2609:9" pos:end="2609:11">ret</name> <operator pos:start="2609:13" pos:end="2609:13">=</operator> <call pos:start="2609:15" pos:end="2609:49"><name pos:start="2609:15" pos:end="2609:28">do_sendrecvmsg</name><argument_list pos:start="2609:29" pos:end="2609:49">(<argument pos:start="2609:30" pos:end="2609:33"><expr pos:start="2609:30" pos:end="2609:33"><name pos:start="2609:30" pos:end="2609:33">arg1</name></expr></argument>, <argument pos:start="2609:36" pos:end="2609:39"><expr pos:start="2609:36" pos:end="2609:39"><name pos:start="2609:36" pos:end="2609:39">arg2</name></expr></argument>, <argument pos:start="2609:42" pos:end="2609:45"><expr pos:start="2609:42" pos:end="2609:45"><name pos:start="2609:42" pos:end="2609:45">arg3</name></expr></argument>, <argument pos:start="2609:48" pos:end="2609:48"><expr pos:start="2609:48" pos:end="2609:48"><literal type="number" pos:start="2609:48" pos:end="2609:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2611:9" pos:end="2616:0">break;</break>

<cpp:endif pos:start="2613:1" pos:end="2613:6">#<cpp:directive pos:start="2613:2" pos:end="2613:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2615:1" pos:end="2615:23">#<cpp:directive pos:start="2615:2" pos:end="2615:6">ifdef</cpp:directive> <name pos:start="2615:8" pos:end="2615:23">TARGET_NR_sendto</name></cpp:ifdef>

    <case pos:start="2617:5" pos:end="2617:26">case <expr pos:start="2617:10" pos:end="2617:25"><name pos:start="2617:10" pos:end="2617:25">TARGET_NR_sendto</name></expr>:</case>

        <expr_stmt pos:start="2619:9" pos:end="2619:60"><expr pos:start="2619:9" pos:end="2619:59"><name pos:start="2619:9" pos:end="2619:11">ret</name> <operator pos:start="2619:13" pos:end="2619:13">=</operator> <call pos:start="2619:15" pos:end="2619:59"><name pos:start="2619:15" pos:end="2619:23">do_sendto</name><argument_list pos:start="2619:24" pos:end="2619:59">(<argument pos:start="2619:25" pos:end="2619:28"><expr pos:start="2619:25" pos:end="2619:28"><name pos:start="2619:25" pos:end="2619:28">arg1</name></expr></argument>, <argument pos:start="2619:31" pos:end="2619:34"><expr pos:start="2619:31" pos:end="2619:34"><name pos:start="2619:31" pos:end="2619:34">arg2</name></expr></argument>, <argument pos:start="2619:37" pos:end="2619:40"><expr pos:start="2619:37" pos:end="2619:40"><name pos:start="2619:37" pos:end="2619:40">arg3</name></expr></argument>, <argument pos:start="2619:43" pos:end="2619:46"><expr pos:start="2619:43" pos:end="2619:46"><name pos:start="2619:43" pos:end="2619:46">arg4</name></expr></argument>, <argument pos:start="2619:49" pos:end="2619:52"><expr pos:start="2619:49" pos:end="2619:52"><name pos:start="2619:49" pos:end="2619:52">arg5</name></expr></argument>, <argument pos:start="2619:55" pos:end="2619:58"><expr pos:start="2619:55" pos:end="2619:58"><name pos:start="2619:55" pos:end="2619:58">arg6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2621:9" pos:end="2626:0">break;</break>

<cpp:endif pos:start="2623:1" pos:end="2623:6">#<cpp:directive pos:start="2623:2" pos:end="2623:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2625:1" pos:end="2625:25">#<cpp:directive pos:start="2625:2" pos:end="2625:6">ifdef</cpp:directive> <name pos:start="2625:8" pos:end="2625:25">TARGET_NR_shutdown</name></cpp:ifdef>

    <case pos:start="2627:5" pos:end="2627:28">case <expr pos:start="2627:10" pos:end="2627:27"><name pos:start="2627:10" pos:end="2627:27">TARGET_NR_shutdown</name></expr>:</case>

        <expr_stmt pos:start="2629:9" pos:end="2629:46"><expr pos:start="2629:9" pos:end="2629:45"><name pos:start="2629:9" pos:end="2629:11">ret</name> <operator pos:start="2629:13" pos:end="2629:13">=</operator> <call pos:start="2629:15" pos:end="2629:45"><name pos:start="2629:15" pos:end="2629:23">get_errno</name><argument_list pos:start="2629:24" pos:end="2629:45">(<argument pos:start="2629:25" pos:end="2629:44"><expr pos:start="2629:25" pos:end="2629:44"><call pos:start="2629:25" pos:end="2629:44"><name pos:start="2629:25" pos:end="2629:32">shutdown</name><argument_list pos:start="2629:33" pos:end="2629:44">(<argument pos:start="2629:34" pos:end="2629:37"><expr pos:start="2629:34" pos:end="2629:37"><name pos:start="2629:34" pos:end="2629:37">arg1</name></expr></argument>, <argument pos:start="2629:40" pos:end="2629:43"><expr pos:start="2629:40" pos:end="2629:43"><name pos:start="2629:40" pos:end="2629:43">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2631:9" pos:end="2636:0">break;</break>

<cpp:endif pos:start="2633:1" pos:end="2633:6">#<cpp:directive pos:start="2633:2" pos:end="2633:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2635:1" pos:end="2635:23">#<cpp:directive pos:start="2635:2" pos:end="2635:6">ifdef</cpp:directive> <name pos:start="2635:8" pos:end="2635:23">TARGET_NR_socket</name></cpp:ifdef>

    <case pos:start="2637:5" pos:end="2637:26">case <expr pos:start="2637:10" pos:end="2637:25"><name pos:start="2637:10" pos:end="2637:25">TARGET_NR_socket</name></expr>:</case>

        <expr_stmt pos:start="2639:9" pos:end="2639:42"><expr pos:start="2639:9" pos:end="2639:41"><name pos:start="2639:9" pos:end="2639:11">ret</name> <operator pos:start="2639:13" pos:end="2639:13">=</operator> <call pos:start="2639:15" pos:end="2639:41"><name pos:start="2639:15" pos:end="2639:23">do_socket</name><argument_list pos:start="2639:24" pos:end="2639:41">(<argument pos:start="2639:25" pos:end="2639:28"><expr pos:start="2639:25" pos:end="2639:28"><name pos:start="2639:25" pos:end="2639:28">arg1</name></expr></argument>, <argument pos:start="2639:31" pos:end="2639:34"><expr pos:start="2639:31" pos:end="2639:34"><name pos:start="2639:31" pos:end="2639:34">arg2</name></expr></argument>, <argument pos:start="2639:37" pos:end="2639:40"><expr pos:start="2639:37" pos:end="2639:40"><name pos:start="2639:37" pos:end="2639:40">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2641:9" pos:end="2646:0">break;</break>

<cpp:endif pos:start="2643:1" pos:end="2643:6">#<cpp:directive pos:start="2643:2" pos:end="2643:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2645:1" pos:end="2645:27">#<cpp:directive pos:start="2645:2" pos:end="2645:6">ifdef</cpp:directive> <name pos:start="2645:8" pos:end="2645:27">TARGET_NR_socketpair</name></cpp:ifdef>

    <case pos:start="2647:5" pos:end="2647:30">case <expr pos:start="2647:10" pos:end="2647:29"><name pos:start="2647:10" pos:end="2647:29">TARGET_NR_socketpair</name></expr>:</case>

        <expr_stmt pos:start="2649:9" pos:end="2649:52"><expr pos:start="2649:9" pos:end="2649:51"><name pos:start="2649:9" pos:end="2649:11">ret</name> <operator pos:start="2649:13" pos:end="2649:13">=</operator> <call pos:start="2649:15" pos:end="2649:51"><name pos:start="2649:15" pos:end="2649:27">do_socketpair</name><argument_list pos:start="2649:28" pos:end="2649:51">(<argument pos:start="2649:29" pos:end="2649:32"><expr pos:start="2649:29" pos:end="2649:32"><name pos:start="2649:29" pos:end="2649:32">arg1</name></expr></argument>, <argument pos:start="2649:35" pos:end="2649:38"><expr pos:start="2649:35" pos:end="2649:38"><name pos:start="2649:35" pos:end="2649:38">arg2</name></expr></argument>, <argument pos:start="2649:41" pos:end="2649:44"><expr pos:start="2649:41" pos:end="2649:44"><name pos:start="2649:41" pos:end="2649:44">arg3</name></expr></argument>, <argument pos:start="2649:47" pos:end="2649:50"><expr pos:start="2649:47" pos:end="2649:50"><name pos:start="2649:47" pos:end="2649:50">arg4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2651:9" pos:end="2656:0">break;</break>

<cpp:endif pos:start="2653:1" pos:end="2653:6">#<cpp:directive pos:start="2653:2" pos:end="2653:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2655:1" pos:end="2655:27">#<cpp:directive pos:start="2655:2" pos:end="2655:6">ifdef</cpp:directive> <name pos:start="2655:8" pos:end="2655:27">TARGET_NR_setsockopt</name></cpp:ifdef>

    <case pos:start="2657:5" pos:end="2657:30">case <expr pos:start="2657:10" pos:end="2657:29"><name pos:start="2657:10" pos:end="2657:29">TARGET_NR_setsockopt</name></expr>:</case>

        <expr_stmt pos:start="2659:9" pos:end="2659:70"><expr pos:start="2659:9" pos:end="2659:69"><name pos:start="2659:9" pos:end="2659:11">ret</name> <operator pos:start="2659:13" pos:end="2659:13">=</operator> <call pos:start="2659:15" pos:end="2659:69"><name pos:start="2659:15" pos:end="2659:27">do_setsockopt</name><argument_list pos:start="2659:28" pos:end="2659:69">(<argument pos:start="2659:29" pos:end="2659:32"><expr pos:start="2659:29" pos:end="2659:32"><name pos:start="2659:29" pos:end="2659:32">arg1</name></expr></argument>, <argument pos:start="2659:35" pos:end="2659:38"><expr pos:start="2659:35" pos:end="2659:38"><name pos:start="2659:35" pos:end="2659:38">arg2</name></expr></argument>, <argument pos:start="2659:41" pos:end="2659:44"><expr pos:start="2659:41" pos:end="2659:44"><name pos:start="2659:41" pos:end="2659:44">arg3</name></expr></argument>, <argument pos:start="2659:47" pos:end="2659:50"><expr pos:start="2659:47" pos:end="2659:50"><name pos:start="2659:47" pos:end="2659:50">arg4</name></expr></argument>, <argument pos:start="2659:53" pos:end="2659:68"><expr pos:start="2659:53" pos:end="2659:68"><operator pos:start="2659:53" pos:end="2659:53">(</operator><name pos:start="2659:54" pos:end="2659:62">socklen_t</name><operator pos:start="2659:63" pos:end="2659:63">)</operator> <name pos:start="2659:65" pos:end="2659:68">arg5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2661:9" pos:end="2664:0">break;</break>

<cpp:endif pos:start="2663:1" pos:end="2663:6">#<cpp:directive pos:start="2663:2" pos:end="2663:6">endif</cpp:directive></cpp:endif>



    <case pos:start="2667:5" pos:end="2667:26">case <expr pos:start="2667:10" pos:end="2667:25"><name pos:start="2667:10" pos:end="2667:25">TARGET_NR_syslog</name></expr>:</case>

        <if_stmt pos:start="2669:9" pos:end="2671:24"><if pos:start="2669:9" pos:end="2671:24">if <condition pos:start="2669:12" pos:end="2669:42">(<expr pos:start="2669:13" pos:end="2669:41"><operator pos:start="2669:13" pos:end="2669:13">!</operator><operator pos:start="2669:14" pos:end="2669:14">(</operator><name pos:start="2669:15" pos:end="2669:15">p</name> <operator pos:start="2669:17" pos:end="2669:17">=</operator> <call pos:start="2669:19" pos:end="2669:40"><name pos:start="2669:19" pos:end="2669:34">lock_user_string</name><argument_list pos:start="2669:35" pos:end="2669:40">(<argument pos:start="2669:36" pos:end="2669:39"><expr pos:start="2669:36" pos:end="2669:39"><name pos:start="2669:36" pos:end="2669:39">arg2</name></expr></argument>)</argument_list></call><operator pos:start="2669:41" pos:end="2669:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2671:13" pos:end="2671:24"><block_content pos:start="2671:13" pos:end="2671:24">

            <goto pos:start="2671:13" pos:end="2671:24">goto <name pos:start="2671:18" pos:end="2671:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="2673:9" pos:end="2673:61"><expr pos:start="2673:9" pos:end="2673:60"><name pos:start="2673:9" pos:end="2673:11">ret</name> <operator pos:start="2673:13" pos:end="2673:13">=</operator> <call pos:start="2673:15" pos:end="2673:60"><name pos:start="2673:15" pos:end="2673:23">get_errno</name><argument_list pos:start="2673:24" pos:end="2673:60">(<argument pos:start="2673:25" pos:end="2673:59"><expr pos:start="2673:25" pos:end="2673:59"><call pos:start="2673:25" pos:end="2673:59"><name pos:start="2673:25" pos:end="2673:34">sys_syslog</name><argument_list pos:start="2673:35" pos:end="2673:59">(<argument pos:start="2673:36" pos:end="2673:44"><expr pos:start="2673:36" pos:end="2673:44"><operator pos:start="2673:36" pos:end="2673:36">(</operator><name pos:start="2673:37" pos:end="2673:39">int</name><operator pos:start="2673:40" pos:end="2673:40">)</operator><name pos:start="2673:41" pos:end="2673:44">arg1</name></expr></argument>, <argument pos:start="2673:47" pos:end="2673:47"><expr pos:start="2673:47" pos:end="2673:47"><name pos:start="2673:47" pos:end="2673:47">p</name></expr></argument>, <argument pos:start="2673:50" pos:end="2673:58"><expr pos:start="2673:50" pos:end="2673:58"><operator pos:start="2673:50" pos:end="2673:50">(</operator><name pos:start="2673:51" pos:end="2673:53">int</name><operator pos:start="2673:54" pos:end="2673:54">)</operator><name pos:start="2673:55" pos:end="2673:58">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2675:9" pos:end="2675:32"><expr pos:start="2675:9" pos:end="2675:31"><call pos:start="2675:9" pos:end="2675:31"><name pos:start="2675:9" pos:end="2675:19">unlock_user</name><argument_list pos:start="2675:20" pos:end="2675:31">(<argument pos:start="2675:21" pos:end="2675:21"><expr pos:start="2675:21" pos:end="2675:21"><name pos:start="2675:21" pos:end="2675:21">p</name></expr></argument>, <argument pos:start="2675:24" pos:end="2675:27"><expr pos:start="2675:24" pos:end="2675:27"><name pos:start="2675:24" pos:end="2675:27">arg2</name></expr></argument>, <argument pos:start="2675:30" pos:end="2675:30"><expr pos:start="2675:30" pos:end="2675:30"><literal type="number" pos:start="2675:30" pos:end="2675:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2677:9" pos:end="2677:14">break;</break>



    <case pos:start="2681:5" pos:end="2681:29">case <expr pos:start="2681:10" pos:end="2681:28"><name pos:start="2681:10" pos:end="2681:28">TARGET_NR_setitimer</name></expr>:</case>

        <block pos:start="2683:9" pos:end="2723:9">{<block_content pos:start="2685:13" pos:end="2721:13">

            <decl_stmt pos:start="2685:13" pos:end="2685:52"><decl pos:start="2685:13" pos:end="2685:34"><type pos:start="2685:13" pos:end="2685:28"><name pos:start="2685:13" pos:end="2685:28"><name pos:start="2685:13" pos:end="2685:18">struct</name> <name pos:start="2685:20" pos:end="2685:28">itimerval</name></name></type> <name pos:start="2685:30" pos:end="2685:34">value</name></decl>, <decl pos:start="2685:37" pos:end="2685:42"><type ref="prev" pos:start="2685:13" pos:end="2685:28"/><name pos:start="2685:37" pos:end="2685:42">ovalue</name></decl>, <decl pos:start="2685:45" pos:end="2685:51"><type ref="prev" pos:start="2685:13" pos:end="2685:28"><modifier pos:start="2685:45" pos:end="2685:45">*</modifier></type><name pos:start="2685:46" pos:end="2685:51">pvalue</name></decl>;</decl_stmt>



            <if_stmt pos:start="2689:13" pos:end="2705:13"><if pos:start="2689:13" pos:end="2701:13">if <condition pos:start="2689:16" pos:end="2689:21">(<expr pos:start="2689:17" pos:end="2689:20"><name pos:start="2689:17" pos:end="2689:20">arg2</name></expr>)</condition> <block pos:start="2689:23" pos:end="2701:13">{<block_content pos:start="2691:17" pos:end="2699:32">

                <expr_stmt pos:start="2691:17" pos:end="2691:32"><expr pos:start="2691:17" pos:end="2691:31"><name pos:start="2691:17" pos:end="2691:22">pvalue</name> <operator pos:start="2691:24" pos:end="2691:24">=</operator> <operator pos:start="2691:26" pos:end="2691:26">&amp;</operator><name pos:start="2691:27" pos:end="2691:31">value</name></expr>;</expr_stmt>

                <if_stmt pos:start="2693:17" pos:end="2699:32"><if pos:start="2693:17" pos:end="2699:32">if <condition pos:start="2693:20" pos:end="2697:84">(<expr pos:start="2693:21" pos:end="2697:83"><call pos:start="2693:21" pos:end="2693:70"><name pos:start="2693:21" pos:end="2693:42">copy_from_user_timeval</name><argument_list pos:start="2693:43" pos:end="2693:70">(<argument pos:start="2693:44" pos:end="2693:63"><expr pos:start="2693:44" pos:end="2693:63"><operator pos:start="2693:44" pos:end="2693:44">&amp;</operator><name pos:start="2693:45" pos:end="2693:63"><name pos:start="2693:45" pos:end="2693:50">pvalue</name><operator pos:start="2693:51" pos:end="2693:52">-&gt;</operator><name pos:start="2693:53" pos:end="2693:63">it_interval</name></name></expr></argument>, <argument pos:start="2693:66" pos:end="2693:69"><expr pos:start="2693:66" pos:end="2693:69"><name pos:start="2693:66" pos:end="2693:69">arg2</name></expr></argument>)</argument_list></call>

                    <operator pos:start="2695:21" pos:end="2695:22">||</operator> <call pos:start="2695:24" pos:end="2697:83"><name pos:start="2695:24" pos:end="2695:45">copy_from_user_timeval</name><argument_list pos:start="2695:46" pos:end="2697:83">(<argument pos:start="2695:47" pos:end="2695:63"><expr pos:start="2695:47" pos:end="2695:63"><operator pos:start="2695:47" pos:end="2695:47">&amp;</operator><name pos:start="2695:48" pos:end="2695:63"><name pos:start="2695:48" pos:end="2695:53">pvalue</name><operator pos:start="2695:54" pos:end="2695:55">-&gt;</operator><name pos:start="2695:56" pos:end="2695:63">it_value</name></name></expr></argument>,

                                              <argument pos:start="2697:47" pos:end="2697:82"><expr pos:start="2697:47" pos:end="2697:82"><name pos:start="2697:47" pos:end="2697:50">arg2</name> <operator pos:start="2697:52" pos:end="2697:52">+</operator> <sizeof pos:start="2697:54" pos:end="2697:82">sizeof<argument_list pos:start="2697:60" pos:end="2697:82">(<argument pos:start="2697:61" pos:end="2697:81"><expr pos:start="2697:61" pos:end="2697:81">struct <name pos:start="2697:68" pos:end="2697:81">target_timeval</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2699:21" pos:end="2699:32"><block_content pos:start="2699:21" pos:end="2699:32">

                    <goto pos:start="2699:21" pos:end="2699:32">goto <name pos:start="2699:26" pos:end="2699:31">efault</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="2701:15" pos:end="2705:13">else <block pos:start="2701:20" pos:end="2705:13">{<block_content pos:start="2703:17" pos:end="2703:30">

                <expr_stmt pos:start="2703:17" pos:end="2703:30"><expr pos:start="2703:17" pos:end="2703:29"><name pos:start="2703:17" pos:end="2703:22">pvalue</name> <operator pos:start="2703:24" pos:end="2703:24">=</operator> <name pos:start="2703:26" pos:end="2703:29">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="2707:13" pos:end="2707:62"><expr pos:start="2707:13" pos:end="2707:61"><name pos:start="2707:13" pos:end="2707:15">ret</name> <operator pos:start="2707:17" pos:end="2707:17">=</operator> <call pos:start="2707:19" pos:end="2707:61"><name pos:start="2707:19" pos:end="2707:27">get_errno</name><argument_list pos:start="2707:28" pos:end="2707:61">(<argument pos:start="2707:29" pos:end="2707:60"><expr pos:start="2707:29" pos:end="2707:60"><call pos:start="2707:29" pos:end="2707:60"><name pos:start="2707:29" pos:end="2707:37">setitimer</name><argument_list pos:start="2707:38" pos:end="2707:60">(<argument pos:start="2707:39" pos:end="2707:42"><expr pos:start="2707:39" pos:end="2707:42"><name pos:start="2707:39" pos:end="2707:42">arg1</name></expr></argument>, <argument pos:start="2707:45" pos:end="2707:50"><expr pos:start="2707:45" pos:end="2707:50"><name pos:start="2707:45" pos:end="2707:50">pvalue</name></expr></argument>, <argument pos:start="2707:53" pos:end="2707:59"><expr pos:start="2707:53" pos:end="2707:59"><operator pos:start="2707:53" pos:end="2707:53">&amp;</operator><name pos:start="2707:54" pos:end="2707:59">ovalue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2709:13" pos:end="2721:13"><if pos:start="2709:13" pos:end="2721:13">if <condition pos:start="2709:16" pos:end="2709:39">(<expr pos:start="2709:17" pos:end="2709:38"><operator pos:start="2709:17" pos:end="2709:17">!</operator><call pos:start="2709:18" pos:end="2709:30"><name pos:start="2709:18" pos:end="2709:25">is_error</name><argument_list pos:start="2709:26" pos:end="2709:30">(<argument pos:start="2709:27" pos:end="2709:29"><expr pos:start="2709:27" pos:end="2709:29"><name pos:start="2709:27" pos:end="2709:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="2709:32" pos:end="2709:33">&amp;&amp;</operator> <name pos:start="2709:35" pos:end="2709:38">arg3</name></expr>)</condition> <block pos:start="2709:41" pos:end="2721:13">{<block_content pos:start="2711:17" pos:end="2719:32">

                <if_stmt pos:start="2711:17" pos:end="2719:32"><if pos:start="2711:17" pos:end="2719:32">if <condition pos:start="2711:20" pos:end="2717:62">(<expr pos:start="2711:21" pos:end="2717:61"><call pos:start="2711:21" pos:end="2713:61"><name pos:start="2711:21" pos:end="2711:40">copy_to_user_timeval</name><argument_list pos:start="2711:41" pos:end="2713:61">(<argument pos:start="2711:42" pos:end="2711:45"><expr pos:start="2711:42" pos:end="2711:45"><name pos:start="2711:42" pos:end="2711:45">arg3</name></expr></argument>,

                                         <argument pos:start="2713:42" pos:end="2713:60"><expr pos:start="2713:42" pos:end="2713:60"><operator pos:start="2713:42" pos:end="2713:42">&amp;</operator><name pos:start="2713:43" pos:end="2713:60"><name pos:start="2713:43" pos:end="2713:48">ovalue</name><operator pos:start="2713:49" pos:end="2713:49">.</operator><name pos:start="2713:50" pos:end="2713:60">it_interval</name></name></expr></argument>)</argument_list></call>

                    <operator pos:start="2715:21" pos:end="2715:22">||</operator> <call pos:start="2715:24" pos:end="2717:61"><name pos:start="2715:24" pos:end="2715:43">copy_to_user_timeval</name><argument_list pos:start="2715:44" pos:end="2717:61">(<argument pos:start="2715:45" pos:end="2715:80"><expr pos:start="2715:45" pos:end="2715:80"><name pos:start="2715:45" pos:end="2715:48">arg3</name> <operator pos:start="2715:50" pos:end="2715:50">+</operator> <sizeof pos:start="2715:52" pos:end="2715:80">sizeof<argument_list pos:start="2715:58" pos:end="2715:80">(<argument pos:start="2715:59" pos:end="2715:79"><expr pos:start="2715:59" pos:end="2715:79">struct <name pos:start="2715:66" pos:end="2715:79">target_timeval</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                            <argument pos:start="2717:45" pos:end="2717:60"><expr pos:start="2717:45" pos:end="2717:60"><operator pos:start="2717:45" pos:end="2717:45">&amp;</operator><name pos:start="2717:46" pos:end="2717:60"><name pos:start="2717:46" pos:end="2717:51">ovalue</name><operator pos:start="2717:52" pos:end="2717:52">.</operator><name pos:start="2717:53" pos:end="2717:60">it_value</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2719:21" pos:end="2719:32"><block_content pos:start="2719:21" pos:end="2719:32">

                    <goto pos:start="2719:21" pos:end="2719:32">goto <name pos:start="2719:26" pos:end="2719:31">efault</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="2725:9" pos:end="2725:14">break;</break>

    <case pos:start="2727:5" pos:end="2727:29">case <expr pos:start="2727:10" pos:end="2727:28"><name pos:start="2727:10" pos:end="2727:28">TARGET_NR_getitimer</name></expr>:</case>

        <block pos:start="2729:9" pos:end="2751:9">{<block_content pos:start="2731:13" pos:end="2749:13">

            <decl_stmt pos:start="2731:13" pos:end="2731:35"><decl pos:start="2731:13" pos:end="2731:34"><type pos:start="2731:13" pos:end="2731:28"><name pos:start="2731:13" pos:end="2731:28"><name pos:start="2731:13" pos:end="2731:18">struct</name> <name pos:start="2731:20" pos:end="2731:28">itimerval</name></name></type> <name pos:start="2731:30" pos:end="2731:34">value</name></decl>;</decl_stmt>



            <expr_stmt pos:start="2735:13" pos:end="2735:53"><expr pos:start="2735:13" pos:end="2735:52"><name pos:start="2735:13" pos:end="2735:15">ret</name> <operator pos:start="2735:17" pos:end="2735:17">=</operator> <call pos:start="2735:19" pos:end="2735:52"><name pos:start="2735:19" pos:end="2735:27">get_errno</name><argument_list pos:start="2735:28" pos:end="2735:52">(<argument pos:start="2735:29" pos:end="2735:51"><expr pos:start="2735:29" pos:end="2735:51"><call pos:start="2735:29" pos:end="2735:51"><name pos:start="2735:29" pos:end="2735:37">getitimer</name><argument_list pos:start="2735:38" pos:end="2735:51">(<argument pos:start="2735:39" pos:end="2735:42"><expr pos:start="2735:39" pos:end="2735:42"><name pos:start="2735:39" pos:end="2735:42">arg1</name></expr></argument>, <argument pos:start="2735:45" pos:end="2735:50"><expr pos:start="2735:45" pos:end="2735:50"><operator pos:start="2735:45" pos:end="2735:45">&amp;</operator><name pos:start="2735:46" pos:end="2735:50">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2737:13" pos:end="2749:13"><if pos:start="2737:13" pos:end="2749:13">if <condition pos:start="2737:16" pos:end="2737:39">(<expr pos:start="2737:17" pos:end="2737:38"><operator pos:start="2737:17" pos:end="2737:17">!</operator><call pos:start="2737:18" pos:end="2737:30"><name pos:start="2737:18" pos:end="2737:25">is_error</name><argument_list pos:start="2737:26" pos:end="2737:30">(<argument pos:start="2737:27" pos:end="2737:29"><expr pos:start="2737:27" pos:end="2737:29"><name pos:start="2737:27" pos:end="2737:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="2737:32" pos:end="2737:33">&amp;&amp;</operator> <name pos:start="2737:35" pos:end="2737:38">arg2</name></expr>)</condition> <block pos:start="2737:41" pos:end="2749:13">{<block_content pos:start="2739:17" pos:end="2747:32">

                <if_stmt pos:start="2739:17" pos:end="2747:32"><if pos:start="2739:17" pos:end="2747:32">if <condition pos:start="2739:20" pos:end="2745:61">(<expr pos:start="2739:21" pos:end="2745:60"><call pos:start="2739:21" pos:end="2741:60"><name pos:start="2739:21" pos:end="2739:40">copy_to_user_timeval</name><argument_list pos:start="2739:41" pos:end="2741:60">(<argument pos:start="2739:42" pos:end="2739:45"><expr pos:start="2739:42" pos:end="2739:45"><name pos:start="2739:42" pos:end="2739:45">arg2</name></expr></argument>,

                                         <argument pos:start="2741:42" pos:end="2741:59"><expr pos:start="2741:42" pos:end="2741:59"><operator pos:start="2741:42" pos:end="2741:42">&amp;</operator><name pos:start="2741:43" pos:end="2741:59"><name pos:start="2741:43" pos:end="2741:47">value</name><operator pos:start="2741:48" pos:end="2741:48">.</operator><name pos:start="2741:49" pos:end="2741:59">it_interval</name></name></expr></argument>)</argument_list></call>

                    <operator pos:start="2743:21" pos:end="2743:22">||</operator> <call pos:start="2743:24" pos:end="2745:60"><name pos:start="2743:24" pos:end="2743:43">copy_to_user_timeval</name><argument_list pos:start="2743:44" pos:end="2745:60">(<argument pos:start="2743:45" pos:end="2743:80"><expr pos:start="2743:45" pos:end="2743:80"><name pos:start="2743:45" pos:end="2743:48">arg2</name> <operator pos:start="2743:50" pos:end="2743:50">+</operator> <sizeof pos:start="2743:52" pos:end="2743:80">sizeof<argument_list pos:start="2743:58" pos:end="2743:80">(<argument pos:start="2743:59" pos:end="2743:79"><expr pos:start="2743:59" pos:end="2743:79">struct <name pos:start="2743:66" pos:end="2743:79">target_timeval</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                            <argument pos:start="2745:45" pos:end="2745:59"><expr pos:start="2745:45" pos:end="2745:59"><operator pos:start="2745:45" pos:end="2745:45">&amp;</operator><name pos:start="2745:46" pos:end="2745:59"><name pos:start="2745:46" pos:end="2745:50">value</name><operator pos:start="2745:51" pos:end="2745:51">.</operator><name pos:start="2745:52" pos:end="2745:59">it_value</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2747:21" pos:end="2747:32"><block_content pos:start="2747:21" pos:end="2747:32">

                    <goto pos:start="2747:21" pos:end="2747:32">goto <name pos:start="2747:26" pos:end="2747:31">efault</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="2753:9" pos:end="2753:14">break;</break>

    <case pos:start="2755:5" pos:end="2755:24">case <expr pos:start="2755:10" pos:end="2755:23"><name pos:start="2755:10" pos:end="2755:23">TARGET_NR_stat</name></expr>:</case>

        <if_stmt pos:start="2757:9" pos:end="2759:24"><if pos:start="2757:9" pos:end="2759:24">if <condition pos:start="2757:12" pos:end="2757:42">(<expr pos:start="2757:13" pos:end="2757:41"><operator pos:start="2757:13" pos:end="2757:13">!</operator><operator pos:start="2757:14" pos:end="2757:14">(</operator><name pos:start="2757:15" pos:end="2757:15">p</name> <operator pos:start="2757:17" pos:end="2757:17">=</operator> <call pos:start="2757:19" pos:end="2757:40"><name pos:start="2757:19" pos:end="2757:34">lock_user_string</name><argument_list pos:start="2757:35" pos:end="2757:40">(<argument pos:start="2757:36" pos:end="2757:39"><expr pos:start="2757:36" pos:end="2757:39"><name pos:start="2757:36" pos:end="2757:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="2757:41" pos:end="2757:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2759:13" pos:end="2759:24"><block_content pos:start="2759:13" pos:end="2759:24">

            <goto pos:start="2759:13" pos:end="2759:24">goto <name pos:start="2759:18" pos:end="2759:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="2761:9" pos:end="2761:44"><expr pos:start="2761:9" pos:end="2761:43"><name pos:start="2761:9" pos:end="2761:11">ret</name> <operator pos:start="2761:13" pos:end="2761:13">=</operator> <call pos:start="2761:15" pos:end="2761:43"><name pos:start="2761:15" pos:end="2761:23">get_errno</name><argument_list pos:start="2761:24" pos:end="2761:43">(<argument pos:start="2761:25" pos:end="2761:42"><expr pos:start="2761:25" pos:end="2761:42"><call pos:start="2761:25" pos:end="2761:42"><name pos:start="2761:25" pos:end="2761:28">stat</name><argument_list pos:start="2761:29" pos:end="2761:42">(<argument pos:start="2761:30" pos:end="2761:36"><expr pos:start="2761:30" pos:end="2761:36"><call pos:start="2761:30" pos:end="2761:36"><name pos:start="2761:30" pos:end="2761:33">path</name><argument_list pos:start="2761:34" pos:end="2761:36">(<argument pos:start="2761:35" pos:end="2761:35"><expr pos:start="2761:35" pos:end="2761:35"><name pos:start="2761:35" pos:end="2761:35">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2761:39" pos:end="2761:41"><expr pos:start="2761:39" pos:end="2761:41"><operator pos:start="2761:39" pos:end="2761:39">&amp;</operator><name pos:start="2761:40" pos:end="2761:41">st</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2763:9" pos:end="2763:32"><expr pos:start="2763:9" pos:end="2763:31"><call pos:start="2763:9" pos:end="2763:31"><name pos:start="2763:9" pos:end="2763:19">unlock_user</name><argument_list pos:start="2763:20" pos:end="2763:31">(<argument pos:start="2763:21" pos:end="2763:21"><expr pos:start="2763:21" pos:end="2763:21"><name pos:start="2763:21" pos:end="2763:21">p</name></expr></argument>, <argument pos:start="2763:24" pos:end="2763:27"><expr pos:start="2763:24" pos:end="2763:27"><name pos:start="2763:24" pos:end="2763:27">arg1</name></expr></argument>, <argument pos:start="2763:30" pos:end="2763:30"><expr pos:start="2763:30" pos:end="2763:30"><literal type="number" pos:start="2763:30" pos:end="2763:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="2765:9" pos:end="2765:21">goto <name pos:start="2765:14" pos:end="2765:20">do_stat</name>;</goto>

    <case pos:start="2767:5" pos:end="2767:25">case <expr pos:start="2767:10" pos:end="2767:24"><name pos:start="2767:10" pos:end="2767:24">TARGET_NR_lstat</name></expr>:</case>

        <if_stmt pos:start="2769:9" pos:end="2771:24"><if pos:start="2769:9" pos:end="2771:24">if <condition pos:start="2769:12" pos:end="2769:42">(<expr pos:start="2769:13" pos:end="2769:41"><operator pos:start="2769:13" pos:end="2769:13">!</operator><operator pos:start="2769:14" pos:end="2769:14">(</operator><name pos:start="2769:15" pos:end="2769:15">p</name> <operator pos:start="2769:17" pos:end="2769:17">=</operator> <call pos:start="2769:19" pos:end="2769:40"><name pos:start="2769:19" pos:end="2769:34">lock_user_string</name><argument_list pos:start="2769:35" pos:end="2769:40">(<argument pos:start="2769:36" pos:end="2769:39"><expr pos:start="2769:36" pos:end="2769:39"><name pos:start="2769:36" pos:end="2769:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="2769:41" pos:end="2769:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2771:13" pos:end="2771:24"><block_content pos:start="2771:13" pos:end="2771:24">

            <goto pos:start="2771:13" pos:end="2771:24">goto <name pos:start="2771:18" pos:end="2771:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="2773:9" pos:end="2773:45"><expr pos:start="2773:9" pos:end="2773:44"><name pos:start="2773:9" pos:end="2773:11">ret</name> <operator pos:start="2773:13" pos:end="2773:13">=</operator> <call pos:start="2773:15" pos:end="2773:44"><name pos:start="2773:15" pos:end="2773:23">get_errno</name><argument_list pos:start="2773:24" pos:end="2773:44">(<argument pos:start="2773:25" pos:end="2773:43"><expr pos:start="2773:25" pos:end="2773:43"><call pos:start="2773:25" pos:end="2773:43"><name pos:start="2773:25" pos:end="2773:29">lstat</name><argument_list pos:start="2773:30" pos:end="2773:43">(<argument pos:start="2773:31" pos:end="2773:37"><expr pos:start="2773:31" pos:end="2773:37"><call pos:start="2773:31" pos:end="2773:37"><name pos:start="2773:31" pos:end="2773:34">path</name><argument_list pos:start="2773:35" pos:end="2773:37">(<argument pos:start="2773:36" pos:end="2773:36"><expr pos:start="2773:36" pos:end="2773:36"><name pos:start="2773:36" pos:end="2773:36">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2773:40" pos:end="2773:42"><expr pos:start="2773:40" pos:end="2773:42"><operator pos:start="2773:40" pos:end="2773:40">&amp;</operator><name pos:start="2773:41" pos:end="2773:42">st</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2775:9" pos:end="2775:32"><expr pos:start="2775:9" pos:end="2775:31"><call pos:start="2775:9" pos:end="2775:31"><name pos:start="2775:9" pos:end="2775:19">unlock_user</name><argument_list pos:start="2775:20" pos:end="2775:31">(<argument pos:start="2775:21" pos:end="2775:21"><expr pos:start="2775:21" pos:end="2775:21"><name pos:start="2775:21" pos:end="2775:21">p</name></expr></argument>, <argument pos:start="2775:24" pos:end="2775:27"><expr pos:start="2775:24" pos:end="2775:27"><name pos:start="2775:24" pos:end="2775:27">arg1</name></expr></argument>, <argument pos:start="2775:30" pos:end="2775:30"><expr pos:start="2775:30" pos:end="2775:30"><literal type="number" pos:start="2775:30" pos:end="2775:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="2777:9" pos:end="2777:21">goto <name pos:start="2777:14" pos:end="2777:20">do_stat</name>;</goto>

    <case pos:start="2779:5" pos:end="2779:25">case <expr pos:start="2779:10" pos:end="2779:24"><name pos:start="2779:10" pos:end="2779:24">TARGET_NR_fstat</name></expr>:</case>

        <block pos:start="2781:9" pos:end="2828:9">{<block_content pos:start="2783:13" pos:end="2826:13">

            <expr_stmt pos:start="2783:13" pos:end="2783:46"><expr pos:start="2783:13" pos:end="2783:45"><name pos:start="2783:13" pos:end="2783:15">ret</name> <operator pos:start="2783:17" pos:end="2783:17">=</operator> <call pos:start="2783:19" pos:end="2783:45"><name pos:start="2783:19" pos:end="2783:27">get_errno</name><argument_list pos:start="2783:28" pos:end="2783:45">(<argument pos:start="2783:29" pos:end="2783:44"><expr pos:start="2783:29" pos:end="2783:44"><call pos:start="2783:29" pos:end="2783:44"><name pos:start="2783:29" pos:end="2783:33">fstat</name><argument_list pos:start="2783:34" pos:end="2783:44">(<argument pos:start="2783:35" pos:end="2783:38"><expr pos:start="2783:35" pos:end="2783:38"><name pos:start="2783:35" pos:end="2783:38">arg1</name></expr></argument>, <argument pos:start="2783:41" pos:end="2783:43"><expr pos:start="2783:41" pos:end="2783:43"><operator pos:start="2783:41" pos:end="2783:41">&amp;</operator><name pos:start="2783:42" pos:end="2783:43">st</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <label pos:start="2785:9" pos:end="2785:16"><name pos:start="2785:9" pos:end="2785:15">do_stat</name>:</label>

            <if_stmt pos:start="2787:13" pos:end="2826:13"><if pos:start="2787:13" pos:end="2826:13">if <condition pos:start="2787:16" pos:end="2787:31">(<expr pos:start="2787:17" pos:end="2787:30"><operator pos:start="2787:17" pos:end="2787:17">!</operator><call pos:start="2787:18" pos:end="2787:30"><name pos:start="2787:18" pos:end="2787:25">is_error</name><argument_list pos:start="2787:26" pos:end="2787:30">(<argument pos:start="2787:27" pos:end="2787:29"><expr pos:start="2787:27" pos:end="2787:29"><name pos:start="2787:27" pos:end="2787:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2787:33" pos:end="2826:13">{<block_content pos:start="2789:17" pos:end="2824:55">

                <decl_stmt pos:start="2789:17" pos:end="2789:46"><decl pos:start="2789:17" pos:end="2789:45"><type pos:start="2789:17" pos:end="2789:36"><name pos:start="2789:17" pos:end="2789:34"><name pos:start="2789:17" pos:end="2789:22">struct</name> <name pos:start="2789:24" pos:end="2789:34">target_stat</name></name> <modifier pos:start="2789:36" pos:end="2789:36">*</modifier></type><name pos:start="2789:37" pos:end="2789:45">target_st</name></decl>;</decl_stmt>



                <if_stmt pos:start="2793:17" pos:end="2795:32"><if pos:start="2793:17" pos:end="2795:32">if <condition pos:start="2793:20" pos:end="2793:72">(<expr pos:start="2793:21" pos:end="2793:71"><operator pos:start="2793:21" pos:end="2793:21">!</operator><call pos:start="2793:22" pos:end="2793:71"><name pos:start="2793:22" pos:end="2793:37">lock_user_struct</name><argument_list pos:start="2793:38" pos:end="2793:71">(<argument pos:start="2793:39" pos:end="2793:50"><expr pos:start="2793:39" pos:end="2793:50"><name pos:start="2793:39" pos:end="2793:50">VERIFY_WRITE</name></expr></argument>, <argument pos:start="2793:53" pos:end="2793:61"><expr pos:start="2793:53" pos:end="2793:61"><name pos:start="2793:53" pos:end="2793:61">target_st</name></expr></argument>, <argument pos:start="2793:64" pos:end="2793:67"><expr pos:start="2793:64" pos:end="2793:67"><name pos:start="2793:64" pos:end="2793:67">arg2</name></expr></argument>, <argument pos:start="2793:70" pos:end="2793:70"><expr pos:start="2793:70" pos:end="2793:70"><literal type="number" pos:start="2793:70" pos:end="2793:70">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2795:21" pos:end="2795:32"><block_content pos:start="2795:21" pos:end="2795:32">

                    <goto pos:start="2795:21" pos:end="2795:32">goto <name pos:start="2795:26" pos:end="2795:31">efault</name>;</goto></block_content></block></if></if_stmt>


                <expr_stmt pos:start="2798:17" pos:end="2798:58"><expr pos:start="2798:17" pos:end="2798:57"><call pos:start="2798:17" pos:end="2798:57"><name pos:start="2798:17" pos:end="2798:26">__put_user</name><argument_list pos:start="2798:27" pos:end="2798:57">(<argument pos:start="2798:28" pos:end="2798:36"><expr pos:start="2798:28" pos:end="2798:36"><name pos:start="2798:28" pos:end="2798:36"><name pos:start="2798:28" pos:end="2798:29">st</name><operator pos:start="2798:30" pos:end="2798:30">.</operator><name pos:start="2798:31" pos:end="2798:36">st_dev</name></name></expr></argument>, <argument pos:start="2798:39" pos:end="2798:56"><expr pos:start="2798:39" pos:end="2798:56"><operator pos:start="2798:39" pos:end="2798:39">&amp;</operator><name pos:start="2798:40" pos:end="2798:56"><name pos:start="2798:40" pos:end="2798:48">target_st</name><operator pos:start="2798:49" pos:end="2798:50">-&gt;</operator><name pos:start="2798:51" pos:end="2798:56">st_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2800:17" pos:end="2800:58"><expr pos:start="2800:17" pos:end="2800:57"><call pos:start="2800:17" pos:end="2800:57"><name pos:start="2800:17" pos:end="2800:26">__put_user</name><argument_list pos:start="2800:27" pos:end="2800:57">(<argument pos:start="2800:28" pos:end="2800:36"><expr pos:start="2800:28" pos:end="2800:36"><name pos:start="2800:28" pos:end="2800:36"><name pos:start="2800:28" pos:end="2800:29">st</name><operator pos:start="2800:30" pos:end="2800:30">.</operator><name pos:start="2800:31" pos:end="2800:36">st_ino</name></name></expr></argument>, <argument pos:start="2800:39" pos:end="2800:56"><expr pos:start="2800:39" pos:end="2800:56"><operator pos:start="2800:39" pos:end="2800:39">&amp;</operator><name pos:start="2800:40" pos:end="2800:56"><name pos:start="2800:40" pos:end="2800:48">target_st</name><operator pos:start="2800:49" pos:end="2800:50">-&gt;</operator><name pos:start="2800:51" pos:end="2800:56">st_ino</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2802:17" pos:end="2802:60"><expr pos:start="2802:17" pos:end="2802:59"><call pos:start="2802:17" pos:end="2802:59"><name pos:start="2802:17" pos:end="2802:26">__put_user</name><argument_list pos:start="2802:27" pos:end="2802:59">(<argument pos:start="2802:28" pos:end="2802:37"><expr pos:start="2802:28" pos:end="2802:37"><name pos:start="2802:28" pos:end="2802:37"><name pos:start="2802:28" pos:end="2802:29">st</name><operator pos:start="2802:30" pos:end="2802:30">.</operator><name pos:start="2802:31" pos:end="2802:37">st_mode</name></name></expr></argument>, <argument pos:start="2802:40" pos:end="2802:58"><expr pos:start="2802:40" pos:end="2802:58"><operator pos:start="2802:40" pos:end="2802:40">&amp;</operator><name pos:start="2802:41" pos:end="2802:58"><name pos:start="2802:41" pos:end="2802:49">target_st</name><operator pos:start="2802:50" pos:end="2802:51">-&gt;</operator><name pos:start="2802:52" pos:end="2802:58">st_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2804:17" pos:end="2804:58"><expr pos:start="2804:17" pos:end="2804:57"><call pos:start="2804:17" pos:end="2804:57"><name pos:start="2804:17" pos:end="2804:26">__put_user</name><argument_list pos:start="2804:27" pos:end="2804:57">(<argument pos:start="2804:28" pos:end="2804:36"><expr pos:start="2804:28" pos:end="2804:36"><name pos:start="2804:28" pos:end="2804:36"><name pos:start="2804:28" pos:end="2804:29">st</name><operator pos:start="2804:30" pos:end="2804:30">.</operator><name pos:start="2804:31" pos:end="2804:36">st_uid</name></name></expr></argument>, <argument pos:start="2804:39" pos:end="2804:56"><expr pos:start="2804:39" pos:end="2804:56"><operator pos:start="2804:39" pos:end="2804:39">&amp;</operator><name pos:start="2804:40" pos:end="2804:56"><name pos:start="2804:40" pos:end="2804:48">target_st</name><operator pos:start="2804:49" pos:end="2804:50">-&gt;</operator><name pos:start="2804:51" pos:end="2804:56">st_uid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2806:17" pos:end="2806:58"><expr pos:start="2806:17" pos:end="2806:57"><call pos:start="2806:17" pos:end="2806:57"><name pos:start="2806:17" pos:end="2806:26">__put_user</name><argument_list pos:start="2806:27" pos:end="2806:57">(<argument pos:start="2806:28" pos:end="2806:36"><expr pos:start="2806:28" pos:end="2806:36"><name pos:start="2806:28" pos:end="2806:36"><name pos:start="2806:28" pos:end="2806:29">st</name><operator pos:start="2806:30" pos:end="2806:30">.</operator><name pos:start="2806:31" pos:end="2806:36">st_gid</name></name></expr></argument>, <argument pos:start="2806:39" pos:end="2806:56"><expr pos:start="2806:39" pos:end="2806:56"><operator pos:start="2806:39" pos:end="2806:39">&amp;</operator><name pos:start="2806:40" pos:end="2806:56"><name pos:start="2806:40" pos:end="2806:48">target_st</name><operator pos:start="2806:49" pos:end="2806:50">-&gt;</operator><name pos:start="2806:51" pos:end="2806:56">st_gid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2808:17" pos:end="2808:62"><expr pos:start="2808:17" pos:end="2808:61"><call pos:start="2808:17" pos:end="2808:61"><name pos:start="2808:17" pos:end="2808:26">__put_user</name><argument_list pos:start="2808:27" pos:end="2808:61">(<argument pos:start="2808:28" pos:end="2808:38"><expr pos:start="2808:28" pos:end="2808:38"><name pos:start="2808:28" pos:end="2808:38"><name pos:start="2808:28" pos:end="2808:29">st</name><operator pos:start="2808:30" pos:end="2808:30">.</operator><name pos:start="2808:31" pos:end="2808:38">st_nlink</name></name></expr></argument>, <argument pos:start="2808:41" pos:end="2808:60"><expr pos:start="2808:41" pos:end="2808:60"><operator pos:start="2808:41" pos:end="2808:41">&amp;</operator><name pos:start="2808:42" pos:end="2808:60"><name pos:start="2808:42" pos:end="2808:50">target_st</name><operator pos:start="2808:51" pos:end="2808:52">-&gt;</operator><name pos:start="2808:53" pos:end="2808:60">st_nlink</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2810:17" pos:end="2810:60"><expr pos:start="2810:17" pos:end="2810:59"><call pos:start="2810:17" pos:end="2810:59"><name pos:start="2810:17" pos:end="2810:26">__put_user</name><argument_list pos:start="2810:27" pos:end="2810:59">(<argument pos:start="2810:28" pos:end="2810:37"><expr pos:start="2810:28" pos:end="2810:37"><name pos:start="2810:28" pos:end="2810:37"><name pos:start="2810:28" pos:end="2810:29">st</name><operator pos:start="2810:30" pos:end="2810:30">.</operator><name pos:start="2810:31" pos:end="2810:37">st_rdev</name></name></expr></argument>, <argument pos:start="2810:40" pos:end="2810:58"><expr pos:start="2810:40" pos:end="2810:58"><operator pos:start="2810:40" pos:end="2810:40">&amp;</operator><name pos:start="2810:41" pos:end="2810:58"><name pos:start="2810:41" pos:end="2810:49">target_st</name><operator pos:start="2810:50" pos:end="2810:51">-&gt;</operator><name pos:start="2810:52" pos:end="2810:58">st_rdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2812:17" pos:end="2812:60"><expr pos:start="2812:17" pos:end="2812:59"><call pos:start="2812:17" pos:end="2812:59"><name pos:start="2812:17" pos:end="2812:26">__put_user</name><argument_list pos:start="2812:27" pos:end="2812:59">(<argument pos:start="2812:28" pos:end="2812:37"><expr pos:start="2812:28" pos:end="2812:37"><name pos:start="2812:28" pos:end="2812:37"><name pos:start="2812:28" pos:end="2812:29">st</name><operator pos:start="2812:30" pos:end="2812:30">.</operator><name pos:start="2812:31" pos:end="2812:37">st_size</name></name></expr></argument>, <argument pos:start="2812:40" pos:end="2812:58"><expr pos:start="2812:40" pos:end="2812:58"><operator pos:start="2812:40" pos:end="2812:40">&amp;</operator><name pos:start="2812:41" pos:end="2812:58"><name pos:start="2812:41" pos:end="2812:49">target_st</name><operator pos:start="2812:50" pos:end="2812:51">-&gt;</operator><name pos:start="2812:52" pos:end="2812:58">st_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2814:17" pos:end="2814:66"><expr pos:start="2814:17" pos:end="2814:65"><call pos:start="2814:17" pos:end="2814:65"><name pos:start="2814:17" pos:end="2814:26">__put_user</name><argument_list pos:start="2814:27" pos:end="2814:65">(<argument pos:start="2814:28" pos:end="2814:40"><expr pos:start="2814:28" pos:end="2814:40"><name pos:start="2814:28" pos:end="2814:40"><name pos:start="2814:28" pos:end="2814:29">st</name><operator pos:start="2814:30" pos:end="2814:30">.</operator><name pos:start="2814:31" pos:end="2814:40">st_blksize</name></name></expr></argument>, <argument pos:start="2814:43" pos:end="2814:64"><expr pos:start="2814:43" pos:end="2814:64"><operator pos:start="2814:43" pos:end="2814:43">&amp;</operator><name pos:start="2814:44" pos:end="2814:64"><name pos:start="2814:44" pos:end="2814:52">target_st</name><operator pos:start="2814:53" pos:end="2814:54">-&gt;</operator><name pos:start="2814:55" pos:end="2814:64">st_blksize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2816:17" pos:end="2816:64"><expr pos:start="2816:17" pos:end="2816:63"><call pos:start="2816:17" pos:end="2816:63"><name pos:start="2816:17" pos:end="2816:26">__put_user</name><argument_list pos:start="2816:27" pos:end="2816:63">(<argument pos:start="2816:28" pos:end="2816:39"><expr pos:start="2816:28" pos:end="2816:39"><name pos:start="2816:28" pos:end="2816:39"><name pos:start="2816:28" pos:end="2816:29">st</name><operator pos:start="2816:30" pos:end="2816:30">.</operator><name pos:start="2816:31" pos:end="2816:39">st_blocks</name></name></expr></argument>, <argument pos:start="2816:42" pos:end="2816:62"><expr pos:start="2816:42" pos:end="2816:62"><operator pos:start="2816:42" pos:end="2816:42">&amp;</operator><name pos:start="2816:43" pos:end="2816:62"><name pos:start="2816:43" pos:end="2816:51">target_st</name><operator pos:start="2816:52" pos:end="2816:53">-&gt;</operator><name pos:start="2816:54" pos:end="2816:62">st_blocks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2818:17" pos:end="2818:69"><expr pos:start="2818:17" pos:end="2818:68"><call pos:start="2818:17" pos:end="2818:68"><name pos:start="2818:17" pos:end="2818:26">__put_user</name><argument_list pos:start="2818:27" pos:end="2818:68">(<argument pos:start="2818:28" pos:end="2818:38"><expr pos:start="2818:28" pos:end="2818:38"><name pos:start="2818:28" pos:end="2818:38"><name pos:start="2818:28" pos:end="2818:29">st</name><operator pos:start="2818:30" pos:end="2818:30">.</operator><name pos:start="2818:31" pos:end="2818:38">st_atime</name></name></expr></argument>, <argument pos:start="2818:41" pos:end="2818:67"><expr pos:start="2818:41" pos:end="2818:67"><operator pos:start="2818:41" pos:end="2818:41">&amp;</operator><name pos:start="2818:42" pos:end="2818:67"><name pos:start="2818:42" pos:end="2818:50">target_st</name><operator pos:start="2818:51" pos:end="2818:52">-&gt;</operator><name pos:start="2818:53" pos:end="2818:67">target_st_atime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2820:17" pos:end="2820:69"><expr pos:start="2820:17" pos:end="2820:68"><call pos:start="2820:17" pos:end="2820:68"><name pos:start="2820:17" pos:end="2820:26">__put_user</name><argument_list pos:start="2820:27" pos:end="2820:68">(<argument pos:start="2820:28" pos:end="2820:38"><expr pos:start="2820:28" pos:end="2820:38"><name pos:start="2820:28" pos:end="2820:38"><name pos:start="2820:28" pos:end="2820:29">st</name><operator pos:start="2820:30" pos:end="2820:30">.</operator><name pos:start="2820:31" pos:end="2820:38">st_mtime</name></name></expr></argument>, <argument pos:start="2820:41" pos:end="2820:67"><expr pos:start="2820:41" pos:end="2820:67"><operator pos:start="2820:41" pos:end="2820:41">&amp;</operator><name pos:start="2820:42" pos:end="2820:67"><name pos:start="2820:42" pos:end="2820:50">target_st</name><operator pos:start="2820:51" pos:end="2820:52">-&gt;</operator><name pos:start="2820:53" pos:end="2820:67">target_st_mtime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2822:17" pos:end="2822:69"><expr pos:start="2822:17" pos:end="2822:68"><call pos:start="2822:17" pos:end="2822:68"><name pos:start="2822:17" pos:end="2822:26">__put_user</name><argument_list pos:start="2822:27" pos:end="2822:68">(<argument pos:start="2822:28" pos:end="2822:38"><expr pos:start="2822:28" pos:end="2822:38"><name pos:start="2822:28" pos:end="2822:38"><name pos:start="2822:28" pos:end="2822:29">st</name><operator pos:start="2822:30" pos:end="2822:30">.</operator><name pos:start="2822:31" pos:end="2822:38">st_ctime</name></name></expr></argument>, <argument pos:start="2822:41" pos:end="2822:67"><expr pos:start="2822:41" pos:end="2822:67"><operator pos:start="2822:41" pos:end="2822:41">&amp;</operator><name pos:start="2822:42" pos:end="2822:67"><name pos:start="2822:42" pos:end="2822:50">target_st</name><operator pos:start="2822:51" pos:end="2822:52">-&gt;</operator><name pos:start="2822:53" pos:end="2822:67">target_st_ctime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2824:17" pos:end="2824:55"><expr pos:start="2824:17" pos:end="2824:54"><call pos:start="2824:17" pos:end="2824:54"><name pos:start="2824:17" pos:end="2824:34">unlock_user_struct</name><argument_list pos:start="2824:35" pos:end="2824:54">(<argument pos:start="2824:36" pos:end="2824:44"><expr pos:start="2824:36" pos:end="2824:44"><name pos:start="2824:36" pos:end="2824:44">target_st</name></expr></argument>, <argument pos:start="2824:47" pos:end="2824:50"><expr pos:start="2824:47" pos:end="2824:50"><name pos:start="2824:47" pos:end="2824:50">arg2</name></expr></argument>, <argument pos:start="2824:53" pos:end="2824:53"><expr pos:start="2824:53" pos:end="2824:53"><literal type="number" pos:start="2824:53" pos:end="2824:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="2830:9" pos:end="2833:0">break;</break>

<cpp:ifdef pos:start="2832:1" pos:end="2832:25">#<cpp:directive pos:start="2832:2" pos:end="2832:6">ifdef</cpp:directive> <name pos:start="2832:8" pos:end="2832:25">TARGET_NR_olduname</name></cpp:ifdef>

    <case pos:start="2834:5" pos:end="2834:28">case <expr pos:start="2834:10" pos:end="2834:27"><name pos:start="2834:10" pos:end="2834:27">TARGET_NR_olduname</name></expr>:</case>

        <goto pos:start="2836:9" pos:end="2841:0">goto <name pos:start="2836:14" pos:end="2836:26">unimplemented</name>;</goto>

<cpp:endif pos:start="2838:1" pos:end="2838:6">#<cpp:directive pos:start="2838:2" pos:end="2838:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2840:1" pos:end="2840:21">#<cpp:directive pos:start="2840:2" pos:end="2840:6">ifdef</cpp:directive> <name pos:start="2840:8" pos:end="2840:21">TARGET_NR_iopl</name></cpp:ifdef>

    <case pos:start="2842:5" pos:end="2842:24">case <expr pos:start="2842:10" pos:end="2842:23"><name pos:start="2842:10" pos:end="2842:23">TARGET_NR_iopl</name></expr>:</case>

        <goto pos:start="2844:9" pos:end="2847:0">goto <name pos:start="2844:14" pos:end="2844:26">unimplemented</name>;</goto>

<cpp:endif pos:start="2846:1" pos:end="2846:6">#<cpp:directive pos:start="2846:2" pos:end="2846:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2848:5" pos:end="2848:27">case <expr pos:start="2848:10" pos:end="2848:26"><name pos:start="2848:10" pos:end="2848:26">TARGET_NR_vhangup</name></expr>:</case>

        <expr_stmt pos:start="2850:9" pos:end="2850:35"><expr pos:start="2850:9" pos:end="2850:34"><name pos:start="2850:9" pos:end="2850:11">ret</name> <operator pos:start="2850:13" pos:end="2850:13">=</operator> <call pos:start="2850:15" pos:end="2850:34"><name pos:start="2850:15" pos:end="2850:23">get_errno</name><argument_list pos:start="2850:24" pos:end="2850:34">(<argument pos:start="2850:25" pos:end="2850:33"><expr pos:start="2850:25" pos:end="2850:33"><call pos:start="2850:25" pos:end="2850:33"><name pos:start="2850:25" pos:end="2850:31">vhangup</name><argument_list pos:start="2850:32" pos:end="2850:33">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2852:9" pos:end="2855:0">break;</break>

<cpp:ifdef pos:start="2854:1" pos:end="2854:21">#<cpp:directive pos:start="2854:2" pos:end="2854:6">ifdef</cpp:directive> <name pos:start="2854:8" pos:end="2854:21">TARGET_NR_idle</name></cpp:ifdef>

    <case pos:start="2856:5" pos:end="2856:24">case <expr pos:start="2856:10" pos:end="2856:23"><name pos:start="2856:10" pos:end="2856:23">TARGET_NR_idle</name></expr>:</case>

        <goto pos:start="2858:9" pos:end="2863:0">goto <name pos:start="2858:14" pos:end="2858:26">unimplemented</name>;</goto>

<cpp:endif pos:start="2860:1" pos:end="2860:6">#<cpp:directive pos:start="2860:2" pos:end="2860:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2862:1" pos:end="2862:24">#<cpp:directive pos:start="2862:2" pos:end="2862:6">ifdef</cpp:directive> <name pos:start="2862:8" pos:end="2862:24">TARGET_NR_syscall</name></cpp:ifdef>

    <case pos:start="2864:5" pos:end="2864:27">case <expr pos:start="2864:10" pos:end="2864:26"><name pos:start="2864:10" pos:end="2864:26">TARGET_NR_syscall</name></expr>:</case>

    	<expr_stmt pos:start="2866:9" pos:end="2866:75"><expr pos:start="2866:9" pos:end="2866:74"><name pos:start="2866:9" pos:end="2866:11">ret</name> <operator pos:start="2866:13" pos:end="2866:13">=</operator> <call pos:start="2866:15" pos:end="2866:74"><name pos:start="2866:15" pos:end="2866:24">do_syscall</name><argument_list pos:start="2866:25" pos:end="2866:74">(<argument pos:start="2866:26" pos:end="2866:32"><expr pos:start="2866:26" pos:end="2866:32"><name pos:start="2866:26" pos:end="2866:32">cpu_env</name></expr></argument>,<argument pos:start="2866:34" pos:end="2866:46"><expr pos:start="2866:34" pos:end="2866:46"><name pos:start="2866:34" pos:end="2866:37">arg1</name> <operator pos:start="2866:39" pos:end="2866:39">&amp;</operator> <literal type="number" pos:start="2866:41" pos:end="2866:46">0xffff</literal></expr></argument>,<argument pos:start="2866:48" pos:end="2866:51"><expr pos:start="2866:48" pos:end="2866:51"><name pos:start="2866:48" pos:end="2866:51">arg2</name></expr></argument>,<argument pos:start="2866:53" pos:end="2866:56"><expr pos:start="2866:53" pos:end="2866:56"><name pos:start="2866:53" pos:end="2866:56">arg3</name></expr></argument>,<argument pos:start="2866:58" pos:end="2866:61"><expr pos:start="2866:58" pos:end="2866:61"><name pos:start="2866:58" pos:end="2866:61">arg4</name></expr></argument>,<argument pos:start="2866:63" pos:end="2866:66"><expr pos:start="2866:63" pos:end="2866:66"><name pos:start="2866:63" pos:end="2866:66">arg5</name></expr></argument>,<argument pos:start="2866:68" pos:end="2866:71"><expr pos:start="2866:68" pos:end="2866:71"><name pos:start="2866:68" pos:end="2866:71">arg6</name></expr></argument>,<argument pos:start="2866:73" pos:end="2866:73"><expr pos:start="2866:73" pos:end="2866:73"><literal type="number" pos:start="2866:73" pos:end="2866:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    	<break pos:start="2868:9" pos:end="2871:0">break;</break>

<cpp:endif pos:start="2870:1" pos:end="2870:6">#<cpp:directive pos:start="2870:2" pos:end="2870:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2872:5" pos:end="2872:25">case <expr pos:start="2872:10" pos:end="2872:24"><name pos:start="2872:10" pos:end="2872:24">TARGET_NR_wait4</name></expr>:</case>

        <block pos:start="2874:9" pos:end="2912:9">{<block_content pos:start="2876:13" pos:end="2910:13">

            <decl_stmt pos:start="2876:13" pos:end="2876:23"><decl pos:start="2876:13" pos:end="2876:22"><type pos:start="2876:13" pos:end="2876:15"><name pos:start="2876:13" pos:end="2876:15">int</name></type> <name pos:start="2876:17" pos:end="2876:22">status</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2878:13" pos:end="2878:39"><decl pos:start="2878:13" pos:end="2878:38"><type pos:start="2878:13" pos:end="2878:20"><name pos:start="2878:13" pos:end="2878:20">abi_long</name></type> <name pos:start="2878:22" pos:end="2878:31">status_ptr</name> <init pos:start="2878:33" pos:end="2878:38">= <expr pos:start="2878:35" pos:end="2878:38"><name pos:start="2878:35" pos:end="2878:38">arg2</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="2880:13" pos:end="2880:46"><decl pos:start="2880:13" pos:end="2880:32"><type pos:start="2880:13" pos:end="2880:25"><name pos:start="2880:13" pos:end="2880:25"><name pos:start="2880:13" pos:end="2880:18">struct</name> <name pos:start="2880:20" pos:end="2880:25">rusage</name></name></type> <name pos:start="2880:27" pos:end="2880:32">rusage</name></decl>, <decl pos:start="2880:35" pos:end="2880:45"><type ref="prev" pos:start="2880:13" pos:end="2880:25"><modifier pos:start="2880:35" pos:end="2880:35">*</modifier></type><name pos:start="2880:36" pos:end="2880:45">rusage_ptr</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2882:13" pos:end="2882:43"><decl pos:start="2882:13" pos:end="2882:42"><type pos:start="2882:13" pos:end="2882:21"><name pos:start="2882:13" pos:end="2882:21">abi_ulong</name></type> <name pos:start="2882:23" pos:end="2882:35">target_rusage</name> <init pos:start="2882:37" pos:end="2882:42">= <expr pos:start="2882:39" pos:end="2882:42"><name pos:start="2882:39" pos:end="2882:42">arg4</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="2884:13" pos:end="2890:34"><if pos:start="2884:13" pos:end="2886:37">if <condition pos:start="2884:16" pos:end="2884:30">(<expr pos:start="2884:17" pos:end="2884:29"><name pos:start="2884:17" pos:end="2884:29">target_rusage</name></expr>)</condition><block type="pseudo" pos:start="2886:17" pos:end="2886:37"><block_content pos:start="2886:17" pos:end="2886:37">

                <expr_stmt pos:start="2886:17" pos:end="2886:37"><expr pos:start="2886:17" pos:end="2886:36"><name pos:start="2886:17" pos:end="2886:26">rusage_ptr</name> <operator pos:start="2886:28" pos:end="2886:28">=</operator> <operator pos:start="2886:30" pos:end="2886:30">&amp;</operator><name pos:start="2886:31" pos:end="2886:36">rusage</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="2888:13" pos:end="2890:34">else<block type="pseudo" pos:start="2890:17" pos:end="2890:34"><block_content pos:start="2890:17" pos:end="2890:34">

                <expr_stmt pos:start="2890:17" pos:end="2890:34"><expr pos:start="2890:17" pos:end="2890:33"><name pos:start="2890:17" pos:end="2890:26">rusage_ptr</name> <operator pos:start="2890:28" pos:end="2890:28">=</operator> <name pos:start="2890:30" pos:end="2890:33">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="2892:13" pos:end="2892:68"><expr pos:start="2892:13" pos:end="2892:67"><name pos:start="2892:13" pos:end="2892:15">ret</name> <operator pos:start="2892:17" pos:end="2892:17">=</operator> <call pos:start="2892:19" pos:end="2892:67"><name pos:start="2892:19" pos:end="2892:27">get_errno</name><argument_list pos:start="2892:28" pos:end="2892:67">(<argument pos:start="2892:29" pos:end="2892:66"><expr pos:start="2892:29" pos:end="2892:66"><call pos:start="2892:29" pos:end="2892:66"><name pos:start="2892:29" pos:end="2892:33">wait4</name><argument_list pos:start="2892:34" pos:end="2892:66">(<argument pos:start="2892:35" pos:end="2892:38"><expr pos:start="2892:35" pos:end="2892:38"><name pos:start="2892:35" pos:end="2892:38">arg1</name></expr></argument>, <argument pos:start="2892:41" pos:end="2892:47"><expr pos:start="2892:41" pos:end="2892:47"><operator pos:start="2892:41" pos:end="2892:41">&amp;</operator><name pos:start="2892:42" pos:end="2892:47">status</name></expr></argument>, <argument pos:start="2892:50" pos:end="2892:53"><expr pos:start="2892:50" pos:end="2892:53"><name pos:start="2892:50" pos:end="2892:53">arg3</name></expr></argument>, <argument pos:start="2892:56" pos:end="2892:65"><expr pos:start="2892:56" pos:end="2892:65"><name pos:start="2892:56" pos:end="2892:65">rusage_ptr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2894:13" pos:end="2910:13"><if pos:start="2894:13" pos:end="2910:13">if <condition pos:start="2894:16" pos:end="2894:31">(<expr pos:start="2894:17" pos:end="2894:30"><operator pos:start="2894:17" pos:end="2894:17">!</operator><call pos:start="2894:18" pos:end="2894:30"><name pos:start="2894:18" pos:end="2894:25">is_error</name><argument_list pos:start="2894:26" pos:end="2894:30">(<argument pos:start="2894:27" pos:end="2894:29"><expr pos:start="2894:27" pos:end="2894:29"><name pos:start="2894:27" pos:end="2894:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2894:33" pos:end="2910:13">{<block_content pos:start="2896:17" pos:end="2908:66">

                <if_stmt pos:start="2896:17" pos:end="2904:17"><if pos:start="2896:17" pos:end="2904:17">if <condition pos:start="2896:20" pos:end="2896:31">(<expr pos:start="2896:21" pos:end="2896:30"><name pos:start="2896:21" pos:end="2896:30">status_ptr</name></expr>)</condition> <block pos:start="2896:33" pos:end="2904:17">{<block_content pos:start="2898:21" pos:end="2902:36">

                    <expr_stmt pos:start="2898:21" pos:end="2898:63"><expr pos:start="2898:21" pos:end="2898:62"><name pos:start="2898:21" pos:end="2898:26">status</name> <operator pos:start="2898:28" pos:end="2898:28">=</operator> <call pos:start="2898:30" pos:end="2898:62"><name pos:start="2898:30" pos:end="2898:54">host_to_target_waitstatus</name><argument_list pos:start="2898:55" pos:end="2898:62">(<argument pos:start="2898:56" pos:end="2898:61"><expr pos:start="2898:56" pos:end="2898:61"><name pos:start="2898:56" pos:end="2898:61">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="2900:21" pos:end="2902:36"><if pos:start="2900:21" pos:end="2902:36">if <condition pos:start="2900:24" pos:end="2900:57">(<expr pos:start="2900:25" pos:end="2900:56"><call pos:start="2900:25" pos:end="2900:56"><name pos:start="2900:25" pos:end="2900:36">put_user_s32</name><argument_list pos:start="2900:37" pos:end="2900:56">(<argument pos:start="2900:38" pos:end="2900:43"><expr pos:start="2900:38" pos:end="2900:43"><name pos:start="2900:38" pos:end="2900:43">status</name></expr></argument>, <argument pos:start="2900:46" pos:end="2900:55"><expr pos:start="2900:46" pos:end="2900:55"><name pos:start="2900:46" pos:end="2900:55">status_ptr</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2902:25" pos:end="2902:36"><block_content pos:start="2902:25" pos:end="2902:36">

                        <goto pos:start="2902:25" pos:end="2902:36">goto <name pos:start="2902:30" pos:end="2902:35">efault</name>;</goto></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="2906:17" pos:end="2908:66"><if pos:start="2906:17" pos:end="2908:66">if <condition pos:start="2906:20" pos:end="2906:34">(<expr pos:start="2906:21" pos:end="2906:33"><name pos:start="2906:21" pos:end="2906:33">target_rusage</name></expr>)</condition><block type="pseudo" pos:start="2908:21" pos:end="2908:66"><block_content pos:start="2908:21" pos:end="2908:66">

                    <expr_stmt pos:start="2908:21" pos:end="2908:66"><expr pos:start="2908:21" pos:end="2908:65"><call pos:start="2908:21" pos:end="2908:65"><name pos:start="2908:21" pos:end="2908:41">host_to_target_rusage</name><argument_list pos:start="2908:42" pos:end="2908:65">(<argument pos:start="2908:43" pos:end="2908:55"><expr pos:start="2908:43" pos:end="2908:55"><name pos:start="2908:43" pos:end="2908:55">target_rusage</name></expr></argument>, <argument pos:start="2908:58" pos:end="2908:64"><expr pos:start="2908:58" pos:end="2908:64"><operator pos:start="2908:58" pos:end="2908:58">&amp;</operator><name pos:start="2908:59" pos:end="2908:64">rusage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="2914:9" pos:end="2917:0">break;</break>

<cpp:ifdef pos:start="2916:1" pos:end="2916:24">#<cpp:directive pos:start="2916:2" pos:end="2916:6">ifdef</cpp:directive> <name pos:start="2916:8" pos:end="2916:24">TARGET_NR_swapoff</name></cpp:ifdef>

    <case pos:start="2918:5" pos:end="2918:27">case <expr pos:start="2918:10" pos:end="2918:26"><name pos:start="2918:10" pos:end="2918:26">TARGET_NR_swapoff</name></expr>:</case>

        <if_stmt pos:start="2920:9" pos:end="2922:24"><if pos:start="2920:9" pos:end="2922:24">if <condition pos:start="2920:12" pos:end="2920:42">(<expr pos:start="2920:13" pos:end="2920:41"><operator pos:start="2920:13" pos:end="2920:13">!</operator><operator pos:start="2920:14" pos:end="2920:14">(</operator><name pos:start="2920:15" pos:end="2920:15">p</name> <operator pos:start="2920:17" pos:end="2920:17">=</operator> <call pos:start="2920:19" pos:end="2920:40"><name pos:start="2920:19" pos:end="2920:34">lock_user_string</name><argument_list pos:start="2920:35" pos:end="2920:40">(<argument pos:start="2920:36" pos:end="2920:39"><expr pos:start="2920:36" pos:end="2920:39"><name pos:start="2920:36" pos:end="2920:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="2920:41" pos:end="2920:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2922:13" pos:end="2922:24"><block_content pos:start="2922:13" pos:end="2922:24">

            <goto pos:start="2922:13" pos:end="2922:24">goto <name pos:start="2922:18" pos:end="2922:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="2924:9" pos:end="2924:36"><expr pos:start="2924:9" pos:end="2924:35"><name pos:start="2924:9" pos:end="2924:11">ret</name> <operator pos:start="2924:13" pos:end="2924:13">=</operator> <call pos:start="2924:15" pos:end="2924:35"><name pos:start="2924:15" pos:end="2924:23">get_errno</name><argument_list pos:start="2924:24" pos:end="2924:35">(<argument pos:start="2924:25" pos:end="2924:34"><expr pos:start="2924:25" pos:end="2924:34"><call pos:start="2924:25" pos:end="2924:34"><name pos:start="2924:25" pos:end="2924:31">swapoff</name><argument_list pos:start="2924:32" pos:end="2924:34">(<argument pos:start="2924:33" pos:end="2924:33"><expr pos:start="2924:33" pos:end="2924:33"><name pos:start="2924:33" pos:end="2924:33">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2926:9" pos:end="2926:32"><expr pos:start="2926:9" pos:end="2926:31"><call pos:start="2926:9" pos:end="2926:31"><name pos:start="2926:9" pos:end="2926:19">unlock_user</name><argument_list pos:start="2926:20" pos:end="2926:31">(<argument pos:start="2926:21" pos:end="2926:21"><expr pos:start="2926:21" pos:end="2926:21"><name pos:start="2926:21" pos:end="2926:21">p</name></expr></argument>, <argument pos:start="2926:24" pos:end="2926:27"><expr pos:start="2926:24" pos:end="2926:27"><name pos:start="2926:24" pos:end="2926:27">arg1</name></expr></argument>, <argument pos:start="2926:30" pos:end="2926:30"><expr pos:start="2926:30" pos:end="2926:30"><literal type="number" pos:start="2926:30" pos:end="2926:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2928:9" pos:end="2931:0">break;</break>

<cpp:endif pos:start="2930:1" pos:end="2930:6">#<cpp:directive pos:start="2930:2" pos:end="2930:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2932:5" pos:end="2932:27">case <expr pos:start="2932:10" pos:end="2932:26"><name pos:start="2932:10" pos:end="2932:26">TARGET_NR_sysinfo</name></expr>:</case>

        <block pos:start="2934:9" pos:end="2982:9">{<block_content pos:start="2936:13" pos:end="2980:13">

            <decl_stmt pos:start="2936:13" pos:end="2936:48"><decl pos:start="2936:13" pos:end="2936:47"><type pos:start="2936:13" pos:end="2936:35"><name pos:start="2936:13" pos:end="2936:33"><name pos:start="2936:13" pos:end="2936:18">struct</name> <name pos:start="2936:20" pos:end="2936:33">target_sysinfo</name></name> <modifier pos:start="2936:35" pos:end="2936:35">*</modifier></type><name pos:start="2936:36" pos:end="2936:47">target_value</name></decl>;</decl_stmt>

            <decl_stmt pos:start="2938:13" pos:end="2938:33"><decl pos:start="2938:13" pos:end="2938:32"><type pos:start="2938:13" pos:end="2938:26"><name pos:start="2938:13" pos:end="2938:26"><name pos:start="2938:13" pos:end="2938:18">struct</name> <name pos:start="2938:20" pos:end="2938:26">sysinfo</name></name></type> <name pos:start="2938:28" pos:end="2938:32">value</name></decl>;</decl_stmt>

            <expr_stmt pos:start="2940:13" pos:end="2940:45"><expr pos:start="2940:13" pos:end="2940:44"><name pos:start="2940:13" pos:end="2940:15">ret</name> <operator pos:start="2940:17" pos:end="2940:17">=</operator> <call pos:start="2940:19" pos:end="2940:44"><name pos:start="2940:19" pos:end="2940:27">get_errno</name><argument_list pos:start="2940:28" pos:end="2940:44">(<argument pos:start="2940:29" pos:end="2940:43"><expr pos:start="2940:29" pos:end="2940:43"><call pos:start="2940:29" pos:end="2940:43"><name pos:start="2940:29" pos:end="2940:35">sysinfo</name><argument_list pos:start="2940:36" pos:end="2940:43">(<argument pos:start="2940:37" pos:end="2940:42"><expr pos:start="2940:37" pos:end="2940:42"><operator pos:start="2940:37" pos:end="2940:37">&amp;</operator><name pos:start="2940:38" pos:end="2940:42">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2942:13" pos:end="2980:13"><if pos:start="2942:13" pos:end="2980:13">if <condition pos:start="2942:16" pos:end="2942:39">(<expr pos:start="2942:17" pos:end="2942:38"><operator pos:start="2942:17" pos:end="2942:17">!</operator><call pos:start="2942:18" pos:end="2942:30"><name pos:start="2942:18" pos:end="2942:25">is_error</name><argument_list pos:start="2942:26" pos:end="2942:30">(<argument pos:start="2942:27" pos:end="2942:29"><expr pos:start="2942:27" pos:end="2942:29"><name pos:start="2942:27" pos:end="2942:29">ret</name></expr></argument>)</argument_list></call> <operator pos:start="2942:32" pos:end="2942:33">&amp;&amp;</operator> <name pos:start="2942:35" pos:end="2942:38">arg1</name></expr>)</condition>

            <block pos:start="2944:13" pos:end="2980:13">{<block_content pos:start="2946:17" pos:end="2978:58">

                <if_stmt pos:start="2946:17" pos:end="2948:32"><if pos:start="2946:17" pos:end="2948:32">if <condition pos:start="2946:20" pos:end="2946:75">(<expr pos:start="2946:21" pos:end="2946:74"><operator pos:start="2946:21" pos:end="2946:21">!</operator><call pos:start="2946:22" pos:end="2946:74"><name pos:start="2946:22" pos:end="2946:37">lock_user_struct</name><argument_list pos:start="2946:38" pos:end="2946:74">(<argument pos:start="2946:39" pos:end="2946:50"><expr pos:start="2946:39" pos:end="2946:50"><name pos:start="2946:39" pos:end="2946:50">VERIFY_WRITE</name></expr></argument>, <argument pos:start="2946:53" pos:end="2946:64"><expr pos:start="2946:53" pos:end="2946:64"><name pos:start="2946:53" pos:end="2946:64">target_value</name></expr></argument>, <argument pos:start="2946:67" pos:end="2946:70"><expr pos:start="2946:67" pos:end="2946:70"><name pos:start="2946:67" pos:end="2946:70">arg1</name></expr></argument>, <argument pos:start="2946:73" pos:end="2946:73"><expr pos:start="2946:73" pos:end="2946:73"><literal type="number" pos:start="2946:73" pos:end="2946:73">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2948:21" pos:end="2948:32"><block_content pos:start="2948:21" pos:end="2948:32">

                    <goto pos:start="2948:21" pos:end="2948:32">goto <name pos:start="2948:26" pos:end="2948:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="2950:17" pos:end="2950:64"><expr pos:start="2950:17" pos:end="2950:63"><call pos:start="2950:17" pos:end="2950:63"><name pos:start="2950:17" pos:end="2950:26">__put_user</name><argument_list pos:start="2950:27" pos:end="2950:63">(<argument pos:start="2950:28" pos:end="2950:39"><expr pos:start="2950:28" pos:end="2950:39"><name pos:start="2950:28" pos:end="2950:39"><name pos:start="2950:28" pos:end="2950:32">value</name><operator pos:start="2950:33" pos:end="2950:33">.</operator><name pos:start="2950:34" pos:end="2950:39">uptime</name></name></expr></argument>, <argument pos:start="2950:42" pos:end="2950:62"><expr pos:start="2950:42" pos:end="2950:62"><operator pos:start="2950:42" pos:end="2950:42">&amp;</operator><name pos:start="2950:43" pos:end="2950:62"><name pos:start="2950:43" pos:end="2950:54">target_value</name><operator pos:start="2950:55" pos:end="2950:56">-&gt;</operator><name pos:start="2950:57" pos:end="2950:62">uptime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2952:17" pos:end="2952:68"><expr pos:start="2952:17" pos:end="2952:67"><call pos:start="2952:17" pos:end="2952:67"><name pos:start="2952:17" pos:end="2952:26">__put_user</name><argument_list pos:start="2952:27" pos:end="2952:67">(<argument pos:start="2952:28" pos:end="2952:41"><expr pos:start="2952:28" pos:end="2952:41"><name pos:start="2952:28" pos:end="2952:41"><name pos:start="2952:28" pos:end="2952:32">value</name><operator pos:start="2952:33" pos:end="2952:33">.</operator><name pos:start="2952:34" pos:end="2952:38">loads</name><index pos:start="2952:39" pos:end="2952:41">[<expr pos:start="2952:40" pos:end="2952:40"><literal type="number" pos:start="2952:40" pos:end="2952:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="2952:44" pos:end="2952:66"><expr pos:start="2952:44" pos:end="2952:66"><operator pos:start="2952:44" pos:end="2952:44">&amp;</operator><name pos:start="2952:45" pos:end="2952:66"><name pos:start="2952:45" pos:end="2952:56">target_value</name><operator pos:start="2952:57" pos:end="2952:58">-&gt;</operator><name pos:start="2952:59" pos:end="2952:63">loads</name><index pos:start="2952:64" pos:end="2952:66">[<expr pos:start="2952:65" pos:end="2952:65"><literal type="number" pos:start="2952:65" pos:end="2952:65">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2954:17" pos:end="2954:68"><expr pos:start="2954:17" pos:end="2954:67"><call pos:start="2954:17" pos:end="2954:67"><name pos:start="2954:17" pos:end="2954:26">__put_user</name><argument_list pos:start="2954:27" pos:end="2954:67">(<argument pos:start="2954:28" pos:end="2954:41"><expr pos:start="2954:28" pos:end="2954:41"><name pos:start="2954:28" pos:end="2954:41"><name pos:start="2954:28" pos:end="2954:32">value</name><operator pos:start="2954:33" pos:end="2954:33">.</operator><name pos:start="2954:34" pos:end="2954:38">loads</name><index pos:start="2954:39" pos:end="2954:41">[<expr pos:start="2954:40" pos:end="2954:40"><literal type="number" pos:start="2954:40" pos:end="2954:40">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="2954:44" pos:end="2954:66"><expr pos:start="2954:44" pos:end="2954:66"><operator pos:start="2954:44" pos:end="2954:44">&amp;</operator><name pos:start="2954:45" pos:end="2954:66"><name pos:start="2954:45" pos:end="2954:56">target_value</name><operator pos:start="2954:57" pos:end="2954:58">-&gt;</operator><name pos:start="2954:59" pos:end="2954:63">loads</name><index pos:start="2954:64" pos:end="2954:66">[<expr pos:start="2954:65" pos:end="2954:65"><literal type="number" pos:start="2954:65" pos:end="2954:65">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2956:17" pos:end="2956:68"><expr pos:start="2956:17" pos:end="2956:67"><call pos:start="2956:17" pos:end="2956:67"><name pos:start="2956:17" pos:end="2956:26">__put_user</name><argument_list pos:start="2956:27" pos:end="2956:67">(<argument pos:start="2956:28" pos:end="2956:41"><expr pos:start="2956:28" pos:end="2956:41"><name pos:start="2956:28" pos:end="2956:41"><name pos:start="2956:28" pos:end="2956:32">value</name><operator pos:start="2956:33" pos:end="2956:33">.</operator><name pos:start="2956:34" pos:end="2956:38">loads</name><index pos:start="2956:39" pos:end="2956:41">[<expr pos:start="2956:40" pos:end="2956:40"><literal type="number" pos:start="2956:40" pos:end="2956:40">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="2956:44" pos:end="2956:66"><expr pos:start="2956:44" pos:end="2956:66"><operator pos:start="2956:44" pos:end="2956:44">&amp;</operator><name pos:start="2956:45" pos:end="2956:66"><name pos:start="2956:45" pos:end="2956:56">target_value</name><operator pos:start="2956:57" pos:end="2956:58">-&gt;</operator><name pos:start="2956:59" pos:end="2956:63">loads</name><index pos:start="2956:64" pos:end="2956:66">[<expr pos:start="2956:65" pos:end="2956:65"><literal type="number" pos:start="2956:65" pos:end="2956:65">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2958:17" pos:end="2958:68"><expr pos:start="2958:17" pos:end="2958:67"><call pos:start="2958:17" pos:end="2958:67"><name pos:start="2958:17" pos:end="2958:26">__put_user</name><argument_list pos:start="2958:27" pos:end="2958:67">(<argument pos:start="2958:28" pos:end="2958:41"><expr pos:start="2958:28" pos:end="2958:41"><name pos:start="2958:28" pos:end="2958:41"><name pos:start="2958:28" pos:end="2958:32">value</name><operator pos:start="2958:33" pos:end="2958:33">.</operator><name pos:start="2958:34" pos:end="2958:41">totalram</name></name></expr></argument>, <argument pos:start="2958:44" pos:end="2958:66"><expr pos:start="2958:44" pos:end="2958:66"><operator pos:start="2958:44" pos:end="2958:44">&amp;</operator><name pos:start="2958:45" pos:end="2958:66"><name pos:start="2958:45" pos:end="2958:56">target_value</name><operator pos:start="2958:57" pos:end="2958:58">-&gt;</operator><name pos:start="2958:59" pos:end="2958:66">totalram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2960:17" pos:end="2960:66"><expr pos:start="2960:17" pos:end="2960:65"><call pos:start="2960:17" pos:end="2960:65"><name pos:start="2960:17" pos:end="2960:26">__put_user</name><argument_list pos:start="2960:27" pos:end="2960:65">(<argument pos:start="2960:28" pos:end="2960:40"><expr pos:start="2960:28" pos:end="2960:40"><name pos:start="2960:28" pos:end="2960:40"><name pos:start="2960:28" pos:end="2960:32">value</name><operator pos:start="2960:33" pos:end="2960:33">.</operator><name pos:start="2960:34" pos:end="2960:40">freeram</name></name></expr></argument>, <argument pos:start="2960:43" pos:end="2960:64"><expr pos:start="2960:43" pos:end="2960:64"><operator pos:start="2960:43" pos:end="2960:43">&amp;</operator><name pos:start="2960:44" pos:end="2960:64"><name pos:start="2960:44" pos:end="2960:55">target_value</name><operator pos:start="2960:56" pos:end="2960:57">-&gt;</operator><name pos:start="2960:58" pos:end="2960:64">freeram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2962:17" pos:end="2962:70"><expr pos:start="2962:17" pos:end="2962:69"><call pos:start="2962:17" pos:end="2962:69"><name pos:start="2962:17" pos:end="2962:26">__put_user</name><argument_list pos:start="2962:27" pos:end="2962:69">(<argument pos:start="2962:28" pos:end="2962:42"><expr pos:start="2962:28" pos:end="2962:42"><name pos:start="2962:28" pos:end="2962:42"><name pos:start="2962:28" pos:end="2962:32">value</name><operator pos:start="2962:33" pos:end="2962:33">.</operator><name pos:start="2962:34" pos:end="2962:42">sharedram</name></name></expr></argument>, <argument pos:start="2962:45" pos:end="2962:68"><expr pos:start="2962:45" pos:end="2962:68"><operator pos:start="2962:45" pos:end="2962:45">&amp;</operator><name pos:start="2962:46" pos:end="2962:68"><name pos:start="2962:46" pos:end="2962:57">target_value</name><operator pos:start="2962:58" pos:end="2962:59">-&gt;</operator><name pos:start="2962:60" pos:end="2962:68">sharedram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2964:17" pos:end="2964:70"><expr pos:start="2964:17" pos:end="2964:69"><call pos:start="2964:17" pos:end="2964:69"><name pos:start="2964:17" pos:end="2964:26">__put_user</name><argument_list pos:start="2964:27" pos:end="2964:69">(<argument pos:start="2964:28" pos:end="2964:42"><expr pos:start="2964:28" pos:end="2964:42"><name pos:start="2964:28" pos:end="2964:42"><name pos:start="2964:28" pos:end="2964:32">value</name><operator pos:start="2964:33" pos:end="2964:33">.</operator><name pos:start="2964:34" pos:end="2964:42">bufferram</name></name></expr></argument>, <argument pos:start="2964:45" pos:end="2964:68"><expr pos:start="2964:45" pos:end="2964:68"><operator pos:start="2964:45" pos:end="2964:45">&amp;</operator><name pos:start="2964:46" pos:end="2964:68"><name pos:start="2964:46" pos:end="2964:57">target_value</name><operator pos:start="2964:58" pos:end="2964:59">-&gt;</operator><name pos:start="2964:60" pos:end="2964:68">bufferram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2966:17" pos:end="2966:70"><expr pos:start="2966:17" pos:end="2966:69"><call pos:start="2966:17" pos:end="2966:69"><name pos:start="2966:17" pos:end="2966:26">__put_user</name><argument_list pos:start="2966:27" pos:end="2966:69">(<argument pos:start="2966:28" pos:end="2966:42"><expr pos:start="2966:28" pos:end="2966:42"><name pos:start="2966:28" pos:end="2966:42"><name pos:start="2966:28" pos:end="2966:32">value</name><operator pos:start="2966:33" pos:end="2966:33">.</operator><name pos:start="2966:34" pos:end="2966:42">totalswap</name></name></expr></argument>, <argument pos:start="2966:45" pos:end="2966:68"><expr pos:start="2966:45" pos:end="2966:68"><operator pos:start="2966:45" pos:end="2966:45">&amp;</operator><name pos:start="2966:46" pos:end="2966:68"><name pos:start="2966:46" pos:end="2966:57">target_value</name><operator pos:start="2966:58" pos:end="2966:59">-&gt;</operator><name pos:start="2966:60" pos:end="2966:68">totalswap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2968:17" pos:end="2968:68"><expr pos:start="2968:17" pos:end="2968:67"><call pos:start="2968:17" pos:end="2968:67"><name pos:start="2968:17" pos:end="2968:26">__put_user</name><argument_list pos:start="2968:27" pos:end="2968:67">(<argument pos:start="2968:28" pos:end="2968:41"><expr pos:start="2968:28" pos:end="2968:41"><name pos:start="2968:28" pos:end="2968:41"><name pos:start="2968:28" pos:end="2968:32">value</name><operator pos:start="2968:33" pos:end="2968:33">.</operator><name pos:start="2968:34" pos:end="2968:41">freeswap</name></name></expr></argument>, <argument pos:start="2968:44" pos:end="2968:66"><expr pos:start="2968:44" pos:end="2968:66"><operator pos:start="2968:44" pos:end="2968:44">&amp;</operator><name pos:start="2968:45" pos:end="2968:66"><name pos:start="2968:45" pos:end="2968:56">target_value</name><operator pos:start="2968:57" pos:end="2968:58">-&gt;</operator><name pos:start="2968:59" pos:end="2968:66">freeswap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2970:17" pos:end="2970:62"><expr pos:start="2970:17" pos:end="2970:61"><call pos:start="2970:17" pos:end="2970:61"><name pos:start="2970:17" pos:end="2970:26">__put_user</name><argument_list pos:start="2970:27" pos:end="2970:61">(<argument pos:start="2970:28" pos:end="2970:38"><expr pos:start="2970:28" pos:end="2970:38"><name pos:start="2970:28" pos:end="2970:38"><name pos:start="2970:28" pos:end="2970:32">value</name><operator pos:start="2970:33" pos:end="2970:33">.</operator><name pos:start="2970:34" pos:end="2970:38">procs</name></name></expr></argument>, <argument pos:start="2970:41" pos:end="2970:60"><expr pos:start="2970:41" pos:end="2970:60"><operator pos:start="2970:41" pos:end="2970:41">&amp;</operator><name pos:start="2970:42" pos:end="2970:60"><name pos:start="2970:42" pos:end="2970:53">target_value</name><operator pos:start="2970:54" pos:end="2970:55">-&gt;</operator><name pos:start="2970:56" pos:end="2970:60">procs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2972:17" pos:end="2972:70"><expr pos:start="2972:17" pos:end="2972:69"><call pos:start="2972:17" pos:end="2972:69"><name pos:start="2972:17" pos:end="2972:26">__put_user</name><argument_list pos:start="2972:27" pos:end="2972:69">(<argument pos:start="2972:28" pos:end="2972:42"><expr pos:start="2972:28" pos:end="2972:42"><name pos:start="2972:28" pos:end="2972:42"><name pos:start="2972:28" pos:end="2972:32">value</name><operator pos:start="2972:33" pos:end="2972:33">.</operator><name pos:start="2972:34" pos:end="2972:42">totalhigh</name></name></expr></argument>, <argument pos:start="2972:45" pos:end="2972:68"><expr pos:start="2972:45" pos:end="2972:68"><operator pos:start="2972:45" pos:end="2972:45">&amp;</operator><name pos:start="2972:46" pos:end="2972:68"><name pos:start="2972:46" pos:end="2972:57">target_value</name><operator pos:start="2972:58" pos:end="2972:59">-&gt;</operator><name pos:start="2972:60" pos:end="2972:68">totalhigh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2974:17" pos:end="2974:68"><expr pos:start="2974:17" pos:end="2974:67"><call pos:start="2974:17" pos:end="2974:67"><name pos:start="2974:17" pos:end="2974:26">__put_user</name><argument_list pos:start="2974:27" pos:end="2974:67">(<argument pos:start="2974:28" pos:end="2974:41"><expr pos:start="2974:28" pos:end="2974:41"><name pos:start="2974:28" pos:end="2974:41"><name pos:start="2974:28" pos:end="2974:32">value</name><operator pos:start="2974:33" pos:end="2974:33">.</operator><name pos:start="2974:34" pos:end="2974:41">freehigh</name></name></expr></argument>, <argument pos:start="2974:44" pos:end="2974:66"><expr pos:start="2974:44" pos:end="2974:66"><operator pos:start="2974:44" pos:end="2974:44">&amp;</operator><name pos:start="2974:45" pos:end="2974:66"><name pos:start="2974:45" pos:end="2974:56">target_value</name><operator pos:start="2974:57" pos:end="2974:58">-&gt;</operator><name pos:start="2974:59" pos:end="2974:66">freehigh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2976:17" pos:end="2976:68"><expr pos:start="2976:17" pos:end="2976:67"><call pos:start="2976:17" pos:end="2976:67"><name pos:start="2976:17" pos:end="2976:26">__put_user</name><argument_list pos:start="2976:27" pos:end="2976:67">(<argument pos:start="2976:28" pos:end="2976:41"><expr pos:start="2976:28" pos:end="2976:41"><name pos:start="2976:28" pos:end="2976:41"><name pos:start="2976:28" pos:end="2976:32">value</name><operator pos:start="2976:33" pos:end="2976:33">.</operator><name pos:start="2976:34" pos:end="2976:41">mem_unit</name></name></expr></argument>, <argument pos:start="2976:44" pos:end="2976:66"><expr pos:start="2976:44" pos:end="2976:66"><operator pos:start="2976:44" pos:end="2976:44">&amp;</operator><name pos:start="2976:45" pos:end="2976:66"><name pos:start="2976:45" pos:end="2976:56">target_value</name><operator pos:start="2976:57" pos:end="2976:58">-&gt;</operator><name pos:start="2976:59" pos:end="2976:66">mem_unit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2978:17" pos:end="2978:58"><expr pos:start="2978:17" pos:end="2978:57"><call pos:start="2978:17" pos:end="2978:57"><name pos:start="2978:17" pos:end="2978:34">unlock_user_struct</name><argument_list pos:start="2978:35" pos:end="2978:57">(<argument pos:start="2978:36" pos:end="2978:47"><expr pos:start="2978:36" pos:end="2978:47"><name pos:start="2978:36" pos:end="2978:47">target_value</name></expr></argument>, <argument pos:start="2978:50" pos:end="2978:53"><expr pos:start="2978:50" pos:end="2978:53"><name pos:start="2978:50" pos:end="2978:53">arg1</name></expr></argument>, <argument pos:start="2978:56" pos:end="2978:56"><expr pos:start="2978:56" pos:end="2978:56"><literal type="number" pos:start="2978:56" pos:end="2978:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="2984:9" pos:end="2987:0">break;</break>

<cpp:ifdef pos:start="2986:1" pos:end="2986:20">#<cpp:directive pos:start="2986:2" pos:end="2986:6">ifdef</cpp:directive> <name pos:start="2986:8" pos:end="2986:20">TARGET_NR_ipc</name></cpp:ifdef>

    <case pos:start="2988:5" pos:end="2988:23">case <expr pos:start="2988:10" pos:end="2988:22"><name pos:start="2988:10" pos:end="2988:22">TARGET_NR_ipc</name></expr>:</case>

	<expr_stmt pos:start="2990:9" pos:end="2990:57"><expr pos:start="2990:9" pos:end="2990:56"><name pos:start="2990:9" pos:end="2990:11">ret</name> <operator pos:start="2990:13" pos:end="2990:13">=</operator> <call pos:start="2990:15" pos:end="2990:56"><name pos:start="2990:15" pos:end="2990:20">do_ipc</name><argument_list pos:start="2990:21" pos:end="2990:56">(<argument pos:start="2990:22" pos:end="2990:25"><expr pos:start="2990:22" pos:end="2990:25"><name pos:start="2990:22" pos:end="2990:25">arg1</name></expr></argument>, <argument pos:start="2990:28" pos:end="2990:31"><expr pos:start="2990:28" pos:end="2990:31"><name pos:start="2990:28" pos:end="2990:31">arg2</name></expr></argument>, <argument pos:start="2990:34" pos:end="2990:37"><expr pos:start="2990:34" pos:end="2990:37"><name pos:start="2990:34" pos:end="2990:37">arg3</name></expr></argument>, <argument pos:start="2990:40" pos:end="2990:43"><expr pos:start="2990:40" pos:end="2990:43"><name pos:start="2990:40" pos:end="2990:43">arg4</name></expr></argument>, <argument pos:start="2990:46" pos:end="2990:49"><expr pos:start="2990:46" pos:end="2990:49"><name pos:start="2990:46" pos:end="2990:49">arg5</name></expr></argument>, <argument pos:start="2990:52" pos:end="2990:55"><expr pos:start="2990:52" pos:end="2990:55"><name pos:start="2990:52" pos:end="2990:55">arg6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="2992:9" pos:end="2997:0">break;</break>

<cpp:endif pos:start="2994:1" pos:end="2994:6">#<cpp:directive pos:start="2994:2" pos:end="2994:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="2996:1" pos:end="2996:23">#<cpp:directive pos:start="2996:2" pos:end="2996:6">ifdef</cpp:directive> <name pos:start="2996:8" pos:end="2996:23">TARGET_NR_semget</name></cpp:ifdef>

    <case pos:start="2998:5" pos:end="2998:26">case <expr pos:start="2998:10" pos:end="2998:25"><name pos:start="2998:10" pos:end="2998:25">TARGET_NR_semget</name></expr>:</case>

        <expr_stmt pos:start="3000:9" pos:end="3000:50"><expr pos:start="3000:9" pos:end="3000:49"><name pos:start="3000:9" pos:end="3000:11">ret</name> <operator pos:start="3000:13" pos:end="3000:13">=</operator> <call pos:start="3000:15" pos:end="3000:49"><name pos:start="3000:15" pos:end="3000:23">get_errno</name><argument_list pos:start="3000:24" pos:end="3000:49">(<argument pos:start="3000:25" pos:end="3000:48"><expr pos:start="3000:25" pos:end="3000:48"><call pos:start="3000:25" pos:end="3000:48"><name pos:start="3000:25" pos:end="3000:30">semget</name><argument_list pos:start="3000:31" pos:end="3000:48">(<argument pos:start="3000:32" pos:end="3000:35"><expr pos:start="3000:32" pos:end="3000:35"><name pos:start="3000:32" pos:end="3000:35">arg1</name></expr></argument>, <argument pos:start="3000:38" pos:end="3000:41"><expr pos:start="3000:38" pos:end="3000:41"><name pos:start="3000:38" pos:end="3000:41">arg2</name></expr></argument>, <argument pos:start="3000:44" pos:end="3000:47"><expr pos:start="3000:44" pos:end="3000:47"><name pos:start="3000:44" pos:end="3000:47">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3002:9" pos:end="3007:0">break;</break>

<cpp:endif pos:start="3004:1" pos:end="3004:6">#<cpp:directive pos:start="3004:2" pos:end="3004:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3006:1" pos:end="3006:22">#<cpp:directive pos:start="3006:2" pos:end="3006:6">ifdef</cpp:directive> <name pos:start="3006:8" pos:end="3006:22">TARGET_NR_semop</name></cpp:ifdef>

    <case pos:start="3008:5" pos:end="3008:25">case <expr pos:start="3008:10" pos:end="3008:24"><name pos:start="3008:10" pos:end="3008:24">TARGET_NR_semop</name></expr>:</case>

        <expr_stmt pos:start="3010:9" pos:end="3010:52"><expr pos:start="3010:9" pos:end="3010:51"><name pos:start="3010:9" pos:end="3010:11">ret</name> <operator pos:start="3010:13" pos:end="3010:13">=</operator> <call pos:start="3010:15" pos:end="3010:51"><name pos:start="3010:15" pos:end="3010:23">get_errno</name><argument_list pos:start="3010:24" pos:end="3010:51">(<argument pos:start="3010:25" pos:end="3010:50"><expr pos:start="3010:25" pos:end="3010:50"><call pos:start="3010:25" pos:end="3010:50"><name pos:start="3010:25" pos:end="3010:32">do_semop</name><argument_list pos:start="3010:33" pos:end="3010:50">(<argument pos:start="3010:34" pos:end="3010:37"><expr pos:start="3010:34" pos:end="3010:37"><name pos:start="3010:34" pos:end="3010:37">arg1</name></expr></argument>, <argument pos:start="3010:40" pos:end="3010:43"><expr pos:start="3010:40" pos:end="3010:43"><name pos:start="3010:40" pos:end="3010:43">arg2</name></expr></argument>, <argument pos:start="3010:46" pos:end="3010:49"><expr pos:start="3010:46" pos:end="3010:49"><name pos:start="3010:46" pos:end="3010:49">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3012:9" pos:end="3017:0">break;</break>

<cpp:endif pos:start="3014:1" pos:end="3014:6">#<cpp:directive pos:start="3014:2" pos:end="3014:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3016:1" pos:end="3016:23">#<cpp:directive pos:start="3016:2" pos:end="3016:6">ifdef</cpp:directive> <name pos:start="3016:8" pos:end="3016:23">TARGET_NR_semctl</name></cpp:ifdef>

    <case pos:start="3018:5" pos:end="3018:26">case <expr pos:start="3018:10" pos:end="3018:25"><name pos:start="3018:10" pos:end="3018:25">TARGET_NR_semctl</name></expr>:</case>

        <expr_stmt pos:start="3020:9" pos:end="3020:79"><expr pos:start="3020:9" pos:end="3020:78"><name pos:start="3020:9" pos:end="3020:11">ret</name> <operator pos:start="3020:13" pos:end="3020:13">=</operator> <call pos:start="3020:15" pos:end="3020:78"><name pos:start="3020:15" pos:end="3020:23">do_semctl</name><argument_list pos:start="3020:24" pos:end="3020:78">(<argument pos:start="3020:25" pos:end="3020:28"><expr pos:start="3020:25" pos:end="3020:28"><name pos:start="3020:25" pos:end="3020:28">arg1</name></expr></argument>, <argument pos:start="3020:31" pos:end="3020:34"><expr pos:start="3020:31" pos:end="3020:34"><name pos:start="3020:31" pos:end="3020:34">arg2</name></expr></argument>, <argument pos:start="3020:37" pos:end="3020:40"><expr pos:start="3020:37" pos:end="3020:40"><name pos:start="3020:37" pos:end="3020:40">arg3</name></expr></argument>, <argument pos:start="3020:43" pos:end="3020:77"><expr pos:start="3020:43" pos:end="3020:77"><operator pos:start="3020:43" pos:end="3020:43">(</operator>union <name pos:start="3020:50" pos:end="3020:61">target_semun</name><operator pos:start="3020:62" pos:end="3020:62">)</operator><operator pos:start="3020:63" pos:end="3020:63">(</operator><name pos:start="3020:64" pos:end="3020:72">abi_ulong</name><operator pos:start="3020:73" pos:end="3020:73">)</operator><name pos:start="3020:74" pos:end="3020:77">arg4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3022:9" pos:end="3027:0">break;</break>

<cpp:endif pos:start="3024:1" pos:end="3024:6">#<cpp:directive pos:start="3024:2" pos:end="3024:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3026:1" pos:end="3026:23">#<cpp:directive pos:start="3026:2" pos:end="3026:6">ifdef</cpp:directive> <name pos:start="3026:8" pos:end="3026:23">TARGET_NR_msgctl</name></cpp:ifdef>

    <case pos:start="3028:5" pos:end="3028:26">case <expr pos:start="3028:10" pos:end="3028:25"><name pos:start="3028:10" pos:end="3028:25">TARGET_NR_msgctl</name></expr>:</case>

        <expr_stmt pos:start="3030:9" pos:end="3030:42"><expr pos:start="3030:9" pos:end="3030:41"><name pos:start="3030:9" pos:end="3030:11">ret</name> <operator pos:start="3030:13" pos:end="3030:13">=</operator> <call pos:start="3030:15" pos:end="3030:41"><name pos:start="3030:15" pos:end="3030:23">do_msgctl</name><argument_list pos:start="3030:24" pos:end="3030:41">(<argument pos:start="3030:25" pos:end="3030:28"><expr pos:start="3030:25" pos:end="3030:28"><name pos:start="3030:25" pos:end="3030:28">arg1</name></expr></argument>, <argument pos:start="3030:31" pos:end="3030:34"><expr pos:start="3030:31" pos:end="3030:34"><name pos:start="3030:31" pos:end="3030:34">arg2</name></expr></argument>, <argument pos:start="3030:37" pos:end="3030:40"><expr pos:start="3030:37" pos:end="3030:40"><name pos:start="3030:37" pos:end="3030:40">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3032:9" pos:end="3037:0">break;</break>

<cpp:endif pos:start="3034:1" pos:end="3034:6">#<cpp:directive pos:start="3034:2" pos:end="3034:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3036:1" pos:end="3036:23">#<cpp:directive pos:start="3036:2" pos:end="3036:6">ifdef</cpp:directive> <name pos:start="3036:8" pos:end="3036:23">TARGET_NR_msgget</name></cpp:ifdef>

    <case pos:start="3038:5" pos:end="3038:26">case <expr pos:start="3038:10" pos:end="3038:25"><name pos:start="3038:10" pos:end="3038:25">TARGET_NR_msgget</name></expr>:</case>

        <expr_stmt pos:start="3040:9" pos:end="3040:44"><expr pos:start="3040:9" pos:end="3040:43"><name pos:start="3040:9" pos:end="3040:11">ret</name> <operator pos:start="3040:13" pos:end="3040:13">=</operator> <call pos:start="3040:15" pos:end="3040:43"><name pos:start="3040:15" pos:end="3040:23">get_errno</name><argument_list pos:start="3040:24" pos:end="3040:43">(<argument pos:start="3040:25" pos:end="3040:42"><expr pos:start="3040:25" pos:end="3040:42"><call pos:start="3040:25" pos:end="3040:42"><name pos:start="3040:25" pos:end="3040:30">msgget</name><argument_list pos:start="3040:31" pos:end="3040:42">(<argument pos:start="3040:32" pos:end="3040:35"><expr pos:start="3040:32" pos:end="3040:35"><name pos:start="3040:32" pos:end="3040:35">arg1</name></expr></argument>, <argument pos:start="3040:38" pos:end="3040:41"><expr pos:start="3040:38" pos:end="3040:41"><name pos:start="3040:38" pos:end="3040:41">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3042:9" pos:end="3047:0">break;</break>

<cpp:endif pos:start="3044:1" pos:end="3044:6">#<cpp:directive pos:start="3044:2" pos:end="3044:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3046:1" pos:end="3046:23">#<cpp:directive pos:start="3046:2" pos:end="3046:6">ifdef</cpp:directive> <name pos:start="3046:8" pos:end="3046:23">TARGET_NR_msgrcv</name></cpp:ifdef>

    <case pos:start="3048:5" pos:end="3048:26">case <expr pos:start="3048:10" pos:end="3048:25"><name pos:start="3048:10" pos:end="3048:25">TARGET_NR_msgrcv</name></expr>:</case>

        <expr_stmt pos:start="3050:9" pos:end="3050:54"><expr pos:start="3050:9" pos:end="3050:53"><name pos:start="3050:9" pos:end="3050:11">ret</name> <operator pos:start="3050:13" pos:end="3050:13">=</operator> <call pos:start="3050:15" pos:end="3050:53"><name pos:start="3050:15" pos:end="3050:23">do_msgrcv</name><argument_list pos:start="3050:24" pos:end="3050:53">(<argument pos:start="3050:25" pos:end="3050:28"><expr pos:start="3050:25" pos:end="3050:28"><name pos:start="3050:25" pos:end="3050:28">arg1</name></expr></argument>, <argument pos:start="3050:31" pos:end="3050:34"><expr pos:start="3050:31" pos:end="3050:34"><name pos:start="3050:31" pos:end="3050:34">arg2</name></expr></argument>, <argument pos:start="3050:37" pos:end="3050:40"><expr pos:start="3050:37" pos:end="3050:40"><name pos:start="3050:37" pos:end="3050:40">arg3</name></expr></argument>, <argument pos:start="3050:43" pos:end="3050:46"><expr pos:start="3050:43" pos:end="3050:46"><name pos:start="3050:43" pos:end="3050:46">arg4</name></expr></argument>, <argument pos:start="3050:49" pos:end="3050:52"><expr pos:start="3050:49" pos:end="3050:52"><name pos:start="3050:49" pos:end="3050:52">arg5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3052:9" pos:end="3057:0">break;</break>

<cpp:endif pos:start="3054:1" pos:end="3054:6">#<cpp:directive pos:start="3054:2" pos:end="3054:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3056:1" pos:end="3056:23">#<cpp:directive pos:start="3056:2" pos:end="3056:6">ifdef</cpp:directive> <name pos:start="3056:8" pos:end="3056:23">TARGET_NR_msgsnd</name></cpp:ifdef>

    <case pos:start="3058:5" pos:end="3058:26">case <expr pos:start="3058:10" pos:end="3058:25"><name pos:start="3058:10" pos:end="3058:25">TARGET_NR_msgsnd</name></expr>:</case>

        <expr_stmt pos:start="3060:9" pos:end="3060:48"><expr pos:start="3060:9" pos:end="3060:47"><name pos:start="3060:9" pos:end="3060:11">ret</name> <operator pos:start="3060:13" pos:end="3060:13">=</operator> <call pos:start="3060:15" pos:end="3060:47"><name pos:start="3060:15" pos:end="3060:23">do_msgsnd</name><argument_list pos:start="3060:24" pos:end="3060:47">(<argument pos:start="3060:25" pos:end="3060:28"><expr pos:start="3060:25" pos:end="3060:28"><name pos:start="3060:25" pos:end="3060:28">arg1</name></expr></argument>, <argument pos:start="3060:31" pos:end="3060:34"><expr pos:start="3060:31" pos:end="3060:34"><name pos:start="3060:31" pos:end="3060:34">arg2</name></expr></argument>, <argument pos:start="3060:37" pos:end="3060:40"><expr pos:start="3060:37" pos:end="3060:40"><name pos:start="3060:37" pos:end="3060:40">arg3</name></expr></argument>, <argument pos:start="3060:43" pos:end="3060:46"><expr pos:start="3060:43" pos:end="3060:46"><name pos:start="3060:43" pos:end="3060:46">arg4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3062:9" pos:end="3067:0">break;</break>

<cpp:endif pos:start="3064:1" pos:end="3064:6">#<cpp:directive pos:start="3064:2" pos:end="3064:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3066:1" pos:end="3066:23">#<cpp:directive pos:start="3066:2" pos:end="3066:6">ifdef</cpp:directive> <name pos:start="3066:8" pos:end="3066:23">TARGET_NR_shmget</name></cpp:ifdef>

    <case pos:start="3068:5" pos:end="3068:26">case <expr pos:start="3068:10" pos:end="3068:25"><name pos:start="3068:10" pos:end="3068:25">TARGET_NR_shmget</name></expr>:</case>

        <expr_stmt pos:start="3070:9" pos:end="3070:50"><expr pos:start="3070:9" pos:end="3070:49"><name pos:start="3070:9" pos:end="3070:11">ret</name> <operator pos:start="3070:13" pos:end="3070:13">=</operator> <call pos:start="3070:15" pos:end="3070:49"><name pos:start="3070:15" pos:end="3070:23">get_errno</name><argument_list pos:start="3070:24" pos:end="3070:49">(<argument pos:start="3070:25" pos:end="3070:48"><expr pos:start="3070:25" pos:end="3070:48"><call pos:start="3070:25" pos:end="3070:48"><name pos:start="3070:25" pos:end="3070:30">shmget</name><argument_list pos:start="3070:31" pos:end="3070:48">(<argument pos:start="3070:32" pos:end="3070:35"><expr pos:start="3070:32" pos:end="3070:35"><name pos:start="3070:32" pos:end="3070:35">arg1</name></expr></argument>, <argument pos:start="3070:38" pos:end="3070:41"><expr pos:start="3070:38" pos:end="3070:41"><name pos:start="3070:38" pos:end="3070:41">arg2</name></expr></argument>, <argument pos:start="3070:44" pos:end="3070:47"><expr pos:start="3070:44" pos:end="3070:47"><name pos:start="3070:44" pos:end="3070:47">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3072:9" pos:end="3077:0">break;</break>

<cpp:endif pos:start="3074:1" pos:end="3074:6">#<cpp:directive pos:start="3074:2" pos:end="3074:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3076:1" pos:end="3076:23">#<cpp:directive pos:start="3076:2" pos:end="3076:6">ifdef</cpp:directive> <name pos:start="3076:8" pos:end="3076:23">TARGET_NR_shmctl</name></cpp:ifdef>

    <case pos:start="3078:5" pos:end="3078:26">case <expr pos:start="3078:10" pos:end="3078:25"><name pos:start="3078:10" pos:end="3078:25">TARGET_NR_shmctl</name></expr>:</case>

        <expr_stmt pos:start="3080:9" pos:end="3080:42"><expr pos:start="3080:9" pos:end="3080:41"><name pos:start="3080:9" pos:end="3080:11">ret</name> <operator pos:start="3080:13" pos:end="3080:13">=</operator> <call pos:start="3080:15" pos:end="3080:41"><name pos:start="3080:15" pos:end="3080:23">do_shmctl</name><argument_list pos:start="3080:24" pos:end="3080:41">(<argument pos:start="3080:25" pos:end="3080:28"><expr pos:start="3080:25" pos:end="3080:28"><name pos:start="3080:25" pos:end="3080:28">arg1</name></expr></argument>, <argument pos:start="3080:31" pos:end="3080:34"><expr pos:start="3080:31" pos:end="3080:34"><name pos:start="3080:31" pos:end="3080:34">arg2</name></expr></argument>, <argument pos:start="3080:37" pos:end="3080:40"><expr pos:start="3080:37" pos:end="3080:40"><name pos:start="3080:37" pos:end="3080:40">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3082:9" pos:end="3087:0">break;</break>

<cpp:endif pos:start="3084:1" pos:end="3084:6">#<cpp:directive pos:start="3084:2" pos:end="3084:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3086:1" pos:end="3086:22">#<cpp:directive pos:start="3086:2" pos:end="3086:6">ifdef</cpp:directive> <name pos:start="3086:8" pos:end="3086:22">TARGET_NR_shmat</name></cpp:ifdef>

    <case pos:start="3088:5" pos:end="3088:25">case <expr pos:start="3088:10" pos:end="3088:24"><name pos:start="3088:10" pos:end="3088:24">TARGET_NR_shmat</name></expr>:</case>

        <expr_stmt pos:start="3090:9" pos:end="3090:41"><expr pos:start="3090:9" pos:end="3090:40"><name pos:start="3090:9" pos:end="3090:11">ret</name> <operator pos:start="3090:13" pos:end="3090:13">=</operator> <call pos:start="3090:15" pos:end="3090:40"><name pos:start="3090:15" pos:end="3090:22">do_shmat</name><argument_list pos:start="3090:23" pos:end="3090:40">(<argument pos:start="3090:24" pos:end="3090:27"><expr pos:start="3090:24" pos:end="3090:27"><name pos:start="3090:24" pos:end="3090:27">arg1</name></expr></argument>, <argument pos:start="3090:30" pos:end="3090:33"><expr pos:start="3090:30" pos:end="3090:33"><name pos:start="3090:30" pos:end="3090:33">arg2</name></expr></argument>, <argument pos:start="3090:36" pos:end="3090:39"><expr pos:start="3090:36" pos:end="3090:39"><name pos:start="3090:36" pos:end="3090:39">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3092:9" pos:end="3097:0">break;</break>

<cpp:endif pos:start="3094:1" pos:end="3094:6">#<cpp:directive pos:start="3094:2" pos:end="3094:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3096:1" pos:end="3096:22">#<cpp:directive pos:start="3096:2" pos:end="3096:6">ifdef</cpp:directive> <name pos:start="3096:8" pos:end="3096:22">TARGET_NR_shmdt</name></cpp:ifdef>

    <case pos:start="3098:5" pos:end="3098:25">case <expr pos:start="3098:10" pos:end="3098:24"><name pos:start="3098:10" pos:end="3098:24">TARGET_NR_shmdt</name></expr>:</case>

        <expr_stmt pos:start="3100:9" pos:end="3100:29"><expr pos:start="3100:9" pos:end="3100:28"><name pos:start="3100:9" pos:end="3100:11">ret</name> <operator pos:start="3100:13" pos:end="3100:13">=</operator> <call pos:start="3100:15" pos:end="3100:28"><name pos:start="3100:15" pos:end="3100:22">do_shmdt</name><argument_list pos:start="3100:23" pos:end="3100:28">(<argument pos:start="3100:24" pos:end="3100:27"><expr pos:start="3100:24" pos:end="3100:27"><name pos:start="3100:24" pos:end="3100:27">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3102:9" pos:end="3105:0">break;</break>

<cpp:endif pos:start="3104:1" pos:end="3104:6">#<cpp:directive pos:start="3104:2" pos:end="3104:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3106:5" pos:end="3106:25">case <expr pos:start="3106:10" pos:end="3106:24"><name pos:start="3106:10" pos:end="3106:24">TARGET_NR_fsync</name></expr>:</case>

        <expr_stmt pos:start="3108:9" pos:end="3108:37"><expr pos:start="3108:9" pos:end="3108:36"><name pos:start="3108:9" pos:end="3108:11">ret</name> <operator pos:start="3108:13" pos:end="3108:13">=</operator> <call pos:start="3108:15" pos:end="3108:36"><name pos:start="3108:15" pos:end="3108:23">get_errno</name><argument_list pos:start="3108:24" pos:end="3108:36">(<argument pos:start="3108:25" pos:end="3108:35"><expr pos:start="3108:25" pos:end="3108:35"><call pos:start="3108:25" pos:end="3108:35"><name pos:start="3108:25" pos:end="3108:29">fsync</name><argument_list pos:start="3108:30" pos:end="3108:35">(<argument pos:start="3108:31" pos:end="3108:34"><expr pos:start="3108:31" pos:end="3108:34"><name pos:start="3108:31" pos:end="3108:34">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3110:9" pos:end="3110:14">break;</break>

    <case pos:start="3112:5" pos:end="3115:0">case <expr pos:start="3112:10" pos:end="3112:24"><name pos:start="3112:10" pos:end="3112:24">TARGET_NR_clone</name></expr>:</case>

<cpp:if pos:start="3114:1" pos:end="3114:23">#<cpp:directive pos:start="3114:2" pos:end="3114:3">if</cpp:directive> <expr pos:start="3114:5" pos:end="3114:23"><call pos:start="3114:5" pos:end="3114:23"><name pos:start="3114:5" pos:end="3114:11">defined</name><argument_list pos:start="3114:12" pos:end="3114:23">(<argument pos:start="3114:13" pos:end="3114:22"><expr pos:start="3114:13" pos:end="3114:22"><name pos:start="3114:13" pos:end="3114:22">TARGET_SH4</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="3116:9" pos:end="3119:0"><expr pos:start="3116:9" pos:end="3116:71"><name pos:start="3116:9" pos:end="3116:11">ret</name> <operator pos:start="3116:13" pos:end="3116:13">=</operator> <call pos:start="3116:15" pos:end="3116:71"><name pos:start="3116:15" pos:end="3116:23">get_errno</name><argument_list pos:start="3116:24" pos:end="3116:71">(<argument pos:start="3116:25" pos:end="3116:70"><expr pos:start="3116:25" pos:end="3116:70"><call pos:start="3116:25" pos:end="3116:70"><name pos:start="3116:25" pos:end="3116:31">do_fork</name><argument_list pos:start="3116:32" pos:end="3116:70">(<argument pos:start="3116:33" pos:end="3116:39"><expr pos:start="3116:33" pos:end="3116:39"><name pos:start="3116:33" pos:end="3116:39">cpu_env</name></expr></argument>, <argument pos:start="3116:42" pos:end="3116:45"><expr pos:start="3116:42" pos:end="3116:45"><name pos:start="3116:42" pos:end="3116:45">arg1</name></expr></argument>, <argument pos:start="3116:48" pos:end="3116:51"><expr pos:start="3116:48" pos:end="3116:51"><name pos:start="3116:48" pos:end="3116:51">arg2</name></expr></argument>, <argument pos:start="3116:54" pos:end="3116:57"><expr pos:start="3116:54" pos:end="3116:57"><name pos:start="3116:54" pos:end="3116:57">arg3</name></expr></argument>, <argument pos:start="3116:60" pos:end="3116:63"><expr pos:start="3116:60" pos:end="3116:63"><name pos:start="3116:60" pos:end="3116:63">arg5</name></expr></argument>, <argument pos:start="3116:66" pos:end="3116:69"><expr pos:start="3116:66" pos:end="3116:69"><name pos:start="3116:66" pos:end="3116:69">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="3118:1" pos:end="3118:26">#<cpp:directive pos:start="3118:2" pos:end="3118:5">elif</cpp:directive> <expr pos:start="3118:7" pos:end="3118:26"><call pos:start="3118:7" pos:end="3118:26"><name pos:start="3118:7" pos:end="3118:13">defined</name><argument_list pos:start="3118:14" pos:end="3118:26">(<argument pos:start="3118:15" pos:end="3118:25"><expr pos:start="3118:15" pos:end="3118:25"><name pos:start="3118:15" pos:end="3118:25">TARGET_CRIS</name></expr></argument>)</argument_list></call></expr></cpp:elif>

        <expr_stmt pos:start="3120:9" pos:end="3123:0"><expr pos:start="3120:9" pos:end="3120:71"><name pos:start="3120:9" pos:end="3120:11">ret</name> <operator pos:start="3120:13" pos:end="3120:13">=</operator> <call pos:start="3120:15" pos:end="3120:71"><name pos:start="3120:15" pos:end="3120:23">get_errno</name><argument_list pos:start="3120:24" pos:end="3120:71">(<argument pos:start="3120:25" pos:end="3120:70"><expr pos:start="3120:25" pos:end="3120:70"><call pos:start="3120:25" pos:end="3120:70"><name pos:start="3120:25" pos:end="3120:31">do_fork</name><argument_list pos:start="3120:32" pos:end="3120:70">(<argument pos:start="3120:33" pos:end="3120:39"><expr pos:start="3120:33" pos:end="3120:39"><name pos:start="3120:33" pos:end="3120:39">cpu_env</name></expr></argument>, <argument pos:start="3120:42" pos:end="3120:45"><expr pos:start="3120:42" pos:end="3120:45"><name pos:start="3120:42" pos:end="3120:45">arg2</name></expr></argument>, <argument pos:start="3120:48" pos:end="3120:51"><expr pos:start="3120:48" pos:end="3120:51"><name pos:start="3120:48" pos:end="3120:51">arg1</name></expr></argument>, <argument pos:start="3120:54" pos:end="3120:57"><expr pos:start="3120:54" pos:end="3120:57"><name pos:start="3120:54" pos:end="3120:57">arg3</name></expr></argument>, <argument pos:start="3120:60" pos:end="3120:63"><expr pos:start="3120:60" pos:end="3120:63"><name pos:start="3120:60" pos:end="3120:63">arg4</name></expr></argument>, <argument pos:start="3120:66" pos:end="3120:69"><expr pos:start="3120:66" pos:end="3120:69"><name pos:start="3120:66" pos:end="3120:69">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="3122:1" pos:end="3122:5">#<cpp:directive pos:start="3122:2" pos:end="3122:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="3124:9" pos:end="3127:0"><expr pos:start="3124:9" pos:end="3124:71"><name pos:start="3124:9" pos:end="3124:11">ret</name> <operator pos:start="3124:13" pos:end="3124:13">=</operator> <call pos:start="3124:15" pos:end="3124:71"><name pos:start="3124:15" pos:end="3124:23">get_errno</name><argument_list pos:start="3124:24" pos:end="3124:71">(<argument pos:start="3124:25" pos:end="3124:70"><expr pos:start="3124:25" pos:end="3124:70"><call pos:start="3124:25" pos:end="3124:70"><name pos:start="3124:25" pos:end="3124:31">do_fork</name><argument_list pos:start="3124:32" pos:end="3124:70">(<argument pos:start="3124:33" pos:end="3124:39"><expr pos:start="3124:33" pos:end="3124:39"><name pos:start="3124:33" pos:end="3124:39">cpu_env</name></expr></argument>, <argument pos:start="3124:42" pos:end="3124:45"><expr pos:start="3124:42" pos:end="3124:45"><name pos:start="3124:42" pos:end="3124:45">arg1</name></expr></argument>, <argument pos:start="3124:48" pos:end="3124:51"><expr pos:start="3124:48" pos:end="3124:51"><name pos:start="3124:48" pos:end="3124:51">arg2</name></expr></argument>, <argument pos:start="3124:54" pos:end="3124:57"><expr pos:start="3124:54" pos:end="3124:57"><name pos:start="3124:54" pos:end="3124:57">arg3</name></expr></argument>, <argument pos:start="3124:60" pos:end="3124:63"><expr pos:start="3124:60" pos:end="3124:63"><name pos:start="3124:60" pos:end="3124:63">arg4</name></expr></argument>, <argument pos:start="3124:66" pos:end="3124:69"><expr pos:start="3124:66" pos:end="3124:69"><name pos:start="3124:66" pos:end="3124:69">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3126:1" pos:end="3126:6">#<cpp:directive pos:start="3126:2" pos:end="3126:6">endif</cpp:directive></cpp:endif>

        <break pos:start="3128:9" pos:end="3131:0">break;</break>

<cpp:ifdef pos:start="3130:1" pos:end="3130:22">#<cpp:directive pos:start="3130:2" pos:end="3130:6">ifdef</cpp:directive> <name pos:start="3130:8" pos:end="3130:22">__NR_exit_group</name></cpp:ifdef>

        <comment type="block" pos:start="3132:9" pos:end="3132:30">/* new thread calls */</comment>

    <case pos:start="3134:5" pos:end="3137:0">case <expr pos:start="3134:10" pos:end="3134:29"><name pos:start="3134:10" pos:end="3134:29">TARGET_NR_exit_group</name></expr>:</case>

<cpp:ifdef pos:start="3136:1" pos:end="3136:19">#<cpp:directive pos:start="3136:2" pos:end="3136:6">ifdef</cpp:directive> <name pos:start="3136:8" pos:end="3136:19">TARGET_GPROF</name></cpp:ifdef>

        <expr_stmt pos:start="3138:9" pos:end="3141:0"><expr pos:start="3138:9" pos:end="3138:19"><call pos:start="3138:9" pos:end="3138:19"><name pos:start="3138:9" pos:end="3138:17">_mcleanup</name><argument_list pos:start="3138:18" pos:end="3138:19">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="3140:1" pos:end="3140:6">#<cpp:directive pos:start="3140:2" pos:end="3140:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="3142:9" pos:end="3142:32"><expr pos:start="3142:9" pos:end="3142:31"><call pos:start="3142:9" pos:end="3142:31"><name pos:start="3142:9" pos:end="3142:16">gdb_exit</name><argument_list pos:start="3142:17" pos:end="3142:31">(<argument pos:start="3142:18" pos:end="3142:24"><expr pos:start="3142:18" pos:end="3142:24"><name pos:start="3142:18" pos:end="3142:24">cpu_env</name></expr></argument>, <argument pos:start="3142:27" pos:end="3142:30"><expr pos:start="3142:27" pos:end="3142:30"><name pos:start="3142:27" pos:end="3142:30">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3144:9" pos:end="3144:42"><expr pos:start="3144:9" pos:end="3144:41"><name pos:start="3144:9" pos:end="3144:11">ret</name> <operator pos:start="3144:13" pos:end="3144:13">=</operator> <call pos:start="3144:15" pos:end="3144:41"><name pos:start="3144:15" pos:end="3144:23">get_errno</name><argument_list pos:start="3144:24" pos:end="3144:41">(<argument pos:start="3144:25" pos:end="3144:40"><expr pos:start="3144:25" pos:end="3144:40"><call pos:start="3144:25" pos:end="3144:40"><name pos:start="3144:25" pos:end="3144:34">exit_group</name><argument_list pos:start="3144:35" pos:end="3144:40">(<argument pos:start="3144:36" pos:end="3144:39"><expr pos:start="3144:36" pos:end="3144:39"><name pos:start="3144:36" pos:end="3144:39">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3146:9" pos:end="3149:0">break;</break>

<cpp:endif pos:start="3148:1" pos:end="3148:6">#<cpp:directive pos:start="3148:2" pos:end="3148:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3150:5" pos:end="3150:33">case <expr pos:start="3150:10" pos:end="3150:32"><name pos:start="3150:10" pos:end="3150:32">TARGET_NR_setdomainname</name></expr>:</case>

        <if_stmt pos:start="3152:9" pos:end="3154:24"><if pos:start="3152:9" pos:end="3154:24">if <condition pos:start="3152:12" pos:end="3152:42">(<expr pos:start="3152:13" pos:end="3152:41"><operator pos:start="3152:13" pos:end="3152:13">!</operator><operator pos:start="3152:14" pos:end="3152:14">(</operator><name pos:start="3152:15" pos:end="3152:15">p</name> <operator pos:start="3152:17" pos:end="3152:17">=</operator> <call pos:start="3152:19" pos:end="3152:40"><name pos:start="3152:19" pos:end="3152:34">lock_user_string</name><argument_list pos:start="3152:35" pos:end="3152:40">(<argument pos:start="3152:36" pos:end="3152:39"><expr pos:start="3152:36" pos:end="3152:39"><name pos:start="3152:36" pos:end="3152:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="3152:41" pos:end="3152:41">)</operator></expr>)</condition><block type="pseudo" pos:start="3154:13" pos:end="3154:24"><block_content pos:start="3154:13" pos:end="3154:24">

            <goto pos:start="3154:13" pos:end="3154:24">goto <name pos:start="3154:18" pos:end="3154:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="3156:9" pos:end="3156:48"><expr pos:start="3156:9" pos:end="3156:47"><name pos:start="3156:9" pos:end="3156:11">ret</name> <operator pos:start="3156:13" pos:end="3156:13">=</operator> <call pos:start="3156:15" pos:end="3156:47"><name pos:start="3156:15" pos:end="3156:23">get_errno</name><argument_list pos:start="3156:24" pos:end="3156:47">(<argument pos:start="3156:25" pos:end="3156:46"><expr pos:start="3156:25" pos:end="3156:46"><call pos:start="3156:25" pos:end="3156:46"><name pos:start="3156:25" pos:end="3156:37">setdomainname</name><argument_list pos:start="3156:38" pos:end="3156:46">(<argument pos:start="3156:39" pos:end="3156:39"><expr pos:start="3156:39" pos:end="3156:39"><name pos:start="3156:39" pos:end="3156:39">p</name></expr></argument>, <argument pos:start="3156:42" pos:end="3156:45"><expr pos:start="3156:42" pos:end="3156:45"><name pos:start="3156:42" pos:end="3156:45">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3158:9" pos:end="3158:32"><expr pos:start="3158:9" pos:end="3158:31"><call pos:start="3158:9" pos:end="3158:31"><name pos:start="3158:9" pos:end="3158:19">unlock_user</name><argument_list pos:start="3158:20" pos:end="3158:31">(<argument pos:start="3158:21" pos:end="3158:21"><expr pos:start="3158:21" pos:end="3158:21"><name pos:start="3158:21" pos:end="3158:21">p</name></expr></argument>, <argument pos:start="3158:24" pos:end="3158:27"><expr pos:start="3158:24" pos:end="3158:27"><name pos:start="3158:24" pos:end="3158:27">arg1</name></expr></argument>, <argument pos:start="3158:30" pos:end="3158:30"><expr pos:start="3158:30" pos:end="3158:30"><literal type="number" pos:start="3158:30" pos:end="3158:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3160:9" pos:end="3160:14">break;</break>

    <case pos:start="3162:5" pos:end="3162:25">case <expr pos:start="3162:10" pos:end="3162:24"><name pos:start="3162:10" pos:end="3162:24">TARGET_NR_uname</name></expr>:</case>

        <comment type="block" pos:start="3164:9" pos:end="3164:67">/* no need to transcode because we use the linux syscall */</comment>

        <block pos:start="3166:9" pos:end="3196:9">{<block_content pos:start="3168:13" pos:end="3194:45">

            <decl_stmt pos:start="3168:13" pos:end="3168:37"><decl pos:start="3168:13" pos:end="3168:36"><type pos:start="3168:13" pos:end="3168:32"><name pos:start="3168:13" pos:end="3168:30"><name pos:start="3168:13" pos:end="3168:18">struct</name> <name pos:start="3168:20" pos:end="3168:30">new_utsname</name></name> <modifier pos:start="3168:32" pos:end="3168:32">*</modifier></type> <name pos:start="3168:34" pos:end="3168:36">buf</name></decl>;</decl_stmt>



            <if_stmt pos:start="3172:13" pos:end="3174:28"><if pos:start="3172:13" pos:end="3174:28">if <condition pos:start="3172:16" pos:end="3172:62">(<expr pos:start="3172:17" pos:end="3172:61"><operator pos:start="3172:17" pos:end="3172:17">!</operator><call pos:start="3172:18" pos:end="3172:61"><name pos:start="3172:18" pos:end="3172:33">lock_user_struct</name><argument_list pos:start="3172:34" pos:end="3172:61">(<argument pos:start="3172:35" pos:end="3172:46"><expr pos:start="3172:35" pos:end="3172:46"><name pos:start="3172:35" pos:end="3172:46">VERIFY_WRITE</name></expr></argument>, <argument pos:start="3172:49" pos:end="3172:51"><expr pos:start="3172:49" pos:end="3172:51"><name pos:start="3172:49" pos:end="3172:51">buf</name></expr></argument>, <argument pos:start="3172:54" pos:end="3172:57"><expr pos:start="3172:54" pos:end="3172:57"><name pos:start="3172:54" pos:end="3172:57">arg1</name></expr></argument>, <argument pos:start="3172:60" pos:end="3172:60"><expr pos:start="3172:60" pos:end="3172:60"><literal type="number" pos:start="3172:60" pos:end="3172:60">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3174:17" pos:end="3174:28"><block_content pos:start="3174:17" pos:end="3174:28">

                <goto pos:start="3174:17" pos:end="3174:28">goto <name pos:start="3174:22" pos:end="3174:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="3176:13" pos:end="3176:44"><expr pos:start="3176:13" pos:end="3176:43"><name pos:start="3176:13" pos:end="3176:15">ret</name> <operator pos:start="3176:17" pos:end="3176:17">=</operator> <call pos:start="3176:19" pos:end="3176:43"><name pos:start="3176:19" pos:end="3176:27">get_errno</name><argument_list pos:start="3176:28" pos:end="3176:43">(<argument pos:start="3176:29" pos:end="3176:42"><expr pos:start="3176:29" pos:end="3176:42"><call pos:start="3176:29" pos:end="3176:42"><name pos:start="3176:29" pos:end="3176:37">sys_uname</name><argument_list pos:start="3176:38" pos:end="3176:42">(<argument pos:start="3176:39" pos:end="3176:41"><expr pos:start="3176:39" pos:end="3176:41"><name pos:start="3176:39" pos:end="3176:41">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3178:13" pos:end="3192:13"><if pos:start="3178:13" pos:end="3192:13">if <condition pos:start="3178:16" pos:end="3178:31">(<expr pos:start="3178:17" pos:end="3178:30"><operator pos:start="3178:17" pos:end="3178:17">!</operator><call pos:start="3178:18" pos:end="3178:30"><name pos:start="3178:18" pos:end="3178:25">is_error</name><argument_list pos:start="3178:26" pos:end="3178:30">(<argument pos:start="3178:27" pos:end="3178:29"><expr pos:start="3178:27" pos:end="3178:29"><name pos:start="3178:27" pos:end="3178:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3178:33" pos:end="3192:13">{<block_content pos:start="3184:17" pos:end="3190:60">

                <comment type="block" pos:start="3180:17" pos:end="3182:31">/* Overrite the native machine name with whatever is being

                   emulated. */</comment>

                <expr_stmt pos:start="3184:17" pos:end="3184:53"><expr pos:start="3184:17" pos:end="3184:52"><call pos:start="3184:17" pos:end="3184:52"><name pos:start="3184:17" pos:end="3184:22">strcpy</name> <argument_list pos:start="3184:24" pos:end="3184:52">(<argument pos:start="3184:25" pos:end="3184:36"><expr pos:start="3184:25" pos:end="3184:36"><name pos:start="3184:25" pos:end="3184:36"><name pos:start="3184:25" pos:end="3184:27">buf</name><operator pos:start="3184:28" pos:end="3184:29">-&gt;</operator><name pos:start="3184:30" pos:end="3184:36">machine</name></name></expr></argument>, <argument pos:start="3184:39" pos:end="3184:51"><expr pos:start="3184:39" pos:end="3184:51"><name pos:start="3184:39" pos:end="3184:51">UNAME_MACHINE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="3186:17" pos:end="3186:71">/* Allow the user to override the reported release.  */</comment>

                <if_stmt pos:start="3188:17" pos:end="3190:60"><if pos:start="3188:17" pos:end="3190:60">if <condition pos:start="3188:20" pos:end="3188:62">(<expr pos:start="3188:21" pos:end="3188:61"><name pos:start="3188:21" pos:end="3188:38">qemu_uname_release</name> <operator pos:start="3188:40" pos:end="3188:41">&amp;&amp;</operator> <operator pos:start="3188:43" pos:end="3188:43">*</operator><name pos:start="3188:44" pos:end="3188:61">qemu_uname_release</name></expr>)</condition><block type="pseudo" pos:start="3190:19" pos:end="3190:60"><block_content pos:start="3190:19" pos:end="3190:60">

                  <expr_stmt pos:start="3190:19" pos:end="3190:60"><expr pos:start="3190:19" pos:end="3190:59"><call pos:start="3190:19" pos:end="3190:59"><name pos:start="3190:19" pos:end="3190:24">strcpy</name> <argument_list pos:start="3190:26" pos:end="3190:59">(<argument pos:start="3190:27" pos:end="3190:38"><expr pos:start="3190:27" pos:end="3190:38"><name pos:start="3190:27" pos:end="3190:38"><name pos:start="3190:27" pos:end="3190:29">buf</name><operator pos:start="3190:30" pos:end="3190:31">-&gt;</operator><name pos:start="3190:32" pos:end="3190:38">release</name></name></expr></argument>, <argument pos:start="3190:41" pos:end="3190:58"><expr pos:start="3190:41" pos:end="3190:58"><name pos:start="3190:41" pos:end="3190:58">qemu_uname_release</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="3194:13" pos:end="3194:45"><expr pos:start="3194:13" pos:end="3194:44"><call pos:start="3194:13" pos:end="3194:44"><name pos:start="3194:13" pos:end="3194:30">unlock_user_struct</name><argument_list pos:start="3194:31" pos:end="3194:44">(<argument pos:start="3194:32" pos:end="3194:34"><expr pos:start="3194:32" pos:end="3194:34"><name pos:start="3194:32" pos:end="3194:34">buf</name></expr></argument>, <argument pos:start="3194:37" pos:end="3194:40"><expr pos:start="3194:37" pos:end="3194:40"><name pos:start="3194:37" pos:end="3194:40">arg1</name></expr></argument>, <argument pos:start="3194:43" pos:end="3194:43"><expr pos:start="3194:43" pos:end="3194:43"><literal type="number" pos:start="3194:43" pos:end="3194:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="3198:9" pos:end="3201:0">break;</break>

<cpp:ifdef pos:start="3200:1" pos:end="3200:18">#<cpp:directive pos:start="3200:2" pos:end="3200:6">ifdef</cpp:directive> <name pos:start="3200:8" pos:end="3200:18">TARGET_I386</name></cpp:ifdef>

    <case pos:start="3202:5" pos:end="3202:30">case <expr pos:start="3202:10" pos:end="3202:29"><name pos:start="3202:10" pos:end="3202:29">TARGET_NR_modify_ldt</name></expr>:</case>

        <expr_stmt pos:start="3204:9" pos:end="3204:55"><expr pos:start="3204:9" pos:end="3204:54"><name pos:start="3204:9" pos:end="3204:11">ret</name> <operator pos:start="3204:13" pos:end="3204:13">=</operator> <call pos:start="3204:15" pos:end="3204:54"><name pos:start="3204:15" pos:end="3204:27">do_modify_ldt</name><argument_list pos:start="3204:28" pos:end="3204:54">(<argument pos:start="3204:29" pos:end="3204:35"><expr pos:start="3204:29" pos:end="3204:35"><name pos:start="3204:29" pos:end="3204:35">cpu_env</name></expr></argument>, <argument pos:start="3204:38" pos:end="3204:41"><expr pos:start="3204:38" pos:end="3204:41"><name pos:start="3204:38" pos:end="3204:41">arg1</name></expr></argument>, <argument pos:start="3204:44" pos:end="3204:47"><expr pos:start="3204:44" pos:end="3204:47"><name pos:start="3204:44" pos:end="3204:47">arg2</name></expr></argument>, <argument pos:start="3204:50" pos:end="3204:53"><expr pos:start="3204:50" pos:end="3204:53"><name pos:start="3204:50" pos:end="3204:53">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3206:9" pos:end="3209:0">break;</break>

<cpp:if pos:start="3208:1" pos:end="3208:27">#<cpp:directive pos:start="3208:2" pos:end="3208:3">if</cpp:directive> <expr pos:start="3208:5" pos:end="3208:27"><operator pos:start="3208:5" pos:end="3208:5">!</operator><call pos:start="3208:6" pos:end="3208:27"><name pos:start="3208:6" pos:end="3208:12">defined</name><argument_list pos:start="3208:13" pos:end="3208:27">(<argument pos:start="3208:14" pos:end="3208:26"><expr pos:start="3208:14" pos:end="3208:26"><name pos:start="3208:14" pos:end="3208:26">TARGET_X86_64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="3210:5" pos:end="3210:27">case <expr pos:start="3210:10" pos:end="3210:26"><name pos:start="3210:10" pos:end="3210:26">TARGET_NR_vm86old</name></expr>:</case>

        <goto pos:start="3212:9" pos:end="3212:27">goto <name pos:start="3212:14" pos:end="3212:26">unimplemented</name>;</goto>

    <case pos:start="3214:5" pos:end="3214:24">case <expr pos:start="3214:10" pos:end="3214:23"><name pos:start="3214:10" pos:end="3214:23">TARGET_NR_vm86</name></expr>:</case>

        <expr_stmt pos:start="3216:9" pos:end="3216:43"><expr pos:start="3216:9" pos:end="3216:42"><name pos:start="3216:9" pos:end="3216:11">ret</name> <operator pos:start="3216:13" pos:end="3216:13">=</operator> <call pos:start="3216:15" pos:end="3216:42"><name pos:start="3216:15" pos:end="3216:21">do_vm86</name><argument_list pos:start="3216:22" pos:end="3216:42">(<argument pos:start="3216:23" pos:end="3216:29"><expr pos:start="3216:23" pos:end="3216:29"><name pos:start="3216:23" pos:end="3216:29">cpu_env</name></expr></argument>, <argument pos:start="3216:32" pos:end="3216:35"><expr pos:start="3216:32" pos:end="3216:35"><name pos:start="3216:32" pos:end="3216:35">arg1</name></expr></argument>, <argument pos:start="3216:38" pos:end="3216:41"><expr pos:start="3216:38" pos:end="3216:41"><name pos:start="3216:38" pos:end="3216:41">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3218:9" pos:end="3223:0">break;</break>

<cpp:endif pos:start="3220:1" pos:end="3220:6">#<cpp:directive pos:start="3220:2" pos:end="3220:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="3222:1" pos:end="3222:6">#<cpp:directive pos:start="3222:2" pos:end="3222:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3224:5" pos:end="3224:28">case <expr pos:start="3224:10" pos:end="3224:27"><name pos:start="3224:10" pos:end="3224:27">TARGET_NR_adjtimex</name></expr>:</case>

        <goto pos:start="3226:9" pos:end="3229:0">goto <name pos:start="3226:14" pos:end="3226:26">unimplemented</name>;</goto>

<cpp:ifdef pos:start="3228:1" pos:end="3228:30">#<cpp:directive pos:start="3228:2" pos:end="3228:6">ifdef</cpp:directive> <name pos:start="3228:8" pos:end="3228:30">TARGET_NR_create_module</name></cpp:ifdef>

    <case pos:start="3230:5" pos:end="3233:0">case <expr pos:start="3230:10" pos:end="3230:32"><name pos:start="3230:10" pos:end="3230:32">TARGET_NR_create_module</name></expr>:</case>

<cpp:endif pos:start="3232:1" pos:end="3232:6">#<cpp:directive pos:start="3232:2" pos:end="3232:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3234:5" pos:end="3234:31">case <expr pos:start="3234:10" pos:end="3234:30"><name pos:start="3234:10" pos:end="3234:30">TARGET_NR_init_module</name></expr>:</case>

    <case pos:start="3236:5" pos:end="3239:0">case <expr pos:start="3236:10" pos:end="3236:32"><name pos:start="3236:10" pos:end="3236:32">TARGET_NR_delete_module</name></expr>:</case>

<cpp:ifdef pos:start="3238:1" pos:end="3238:32">#<cpp:directive pos:start="3238:2" pos:end="3238:6">ifdef</cpp:directive> <name pos:start="3238:8" pos:end="3238:32">TARGET_NR_get_kernel_syms</name></cpp:ifdef>

    <case pos:start="3240:5" pos:end="3243:0">case <expr pos:start="3240:10" pos:end="3240:34"><name pos:start="3240:10" pos:end="3240:34">TARGET_NR_get_kernel_syms</name></expr>:</case>

<cpp:endif pos:start="3242:1" pos:end="3242:6">#<cpp:directive pos:start="3242:2" pos:end="3242:6">endif</cpp:directive></cpp:endif>

        <goto pos:start="3244:9" pos:end="3244:27">goto <name pos:start="3244:14" pos:end="3244:26">unimplemented</name>;</goto>

    <case pos:start="3246:5" pos:end="3246:28">case <expr pos:start="3246:10" pos:end="3246:27"><name pos:start="3246:10" pos:end="3246:27">TARGET_NR_quotactl</name></expr>:</case>

        <goto pos:start="3248:9" pos:end="3248:27">goto <name pos:start="3248:14" pos:end="3248:26">unimplemented</name>;</goto>

    <case pos:start="3250:5" pos:end="3250:27">case <expr pos:start="3250:10" pos:end="3250:26"><name pos:start="3250:10" pos:end="3250:26">TARGET_NR_getpgid</name></expr>:</case>

        <expr_stmt pos:start="3252:9" pos:end="3252:39"><expr pos:start="3252:9" pos:end="3252:38"><name pos:start="3252:9" pos:end="3252:11">ret</name> <operator pos:start="3252:13" pos:end="3252:13">=</operator> <call pos:start="3252:15" pos:end="3252:38"><name pos:start="3252:15" pos:end="3252:23">get_errno</name><argument_list pos:start="3252:24" pos:end="3252:38">(<argument pos:start="3252:25" pos:end="3252:37"><expr pos:start="3252:25" pos:end="3252:37"><call pos:start="3252:25" pos:end="3252:37"><name pos:start="3252:25" pos:end="3252:31">getpgid</name><argument_list pos:start="3252:32" pos:end="3252:37">(<argument pos:start="3252:33" pos:end="3252:36"><expr pos:start="3252:33" pos:end="3252:36"><name pos:start="3252:33" pos:end="3252:36">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3254:9" pos:end="3254:14">break;</break>

    <case pos:start="3256:5" pos:end="3256:26">case <expr pos:start="3256:10" pos:end="3256:25"><name pos:start="3256:10" pos:end="3256:25">TARGET_NR_fchdir</name></expr>:</case>

        <expr_stmt pos:start="3258:9" pos:end="3258:38"><expr pos:start="3258:9" pos:end="3258:37"><name pos:start="3258:9" pos:end="3258:11">ret</name> <operator pos:start="3258:13" pos:end="3258:13">=</operator> <call pos:start="3258:15" pos:end="3258:37"><name pos:start="3258:15" pos:end="3258:23">get_errno</name><argument_list pos:start="3258:24" pos:end="3258:37">(<argument pos:start="3258:25" pos:end="3258:36"><expr pos:start="3258:25" pos:end="3258:36"><call pos:start="3258:25" pos:end="3258:36"><name pos:start="3258:25" pos:end="3258:30">fchdir</name><argument_list pos:start="3258:31" pos:end="3258:36">(<argument pos:start="3258:32" pos:end="3258:35"><expr pos:start="3258:32" pos:end="3258:35"><name pos:start="3258:32" pos:end="3258:35">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3260:9" pos:end="3263:0">break;</break>

<cpp:ifdef pos:start="3262:1" pos:end="3262:24">#<cpp:directive pos:start="3262:2" pos:end="3262:6">ifdef</cpp:directive> <name pos:start="3262:8" pos:end="3262:24">TARGET_NR_bdflush</name></cpp:ifdef> <comment type="block" pos:start="3262:26" pos:end="3262:44">/* not on x86_64 */</comment>

    <case pos:start="3264:5" pos:end="3264:27">case <expr pos:start="3264:10" pos:end="3264:26"><name pos:start="3264:10" pos:end="3264:26">TARGET_NR_bdflush</name></expr>:</case>

        <goto pos:start="3266:9" pos:end="3271:0">goto <name pos:start="3266:14" pos:end="3266:26">unimplemented</name>;</goto>

<cpp:endif pos:start="3268:1" pos:end="3268:6">#<cpp:directive pos:start="3268:2" pos:end="3268:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3270:1" pos:end="3270:22">#<cpp:directive pos:start="3270:2" pos:end="3270:6">ifdef</cpp:directive> <name pos:start="3270:8" pos:end="3270:22">TARGET_NR_sysfs</name></cpp:ifdef>

    <case pos:start="3272:5" pos:end="3272:25">case <expr pos:start="3272:10" pos:end="3272:24"><name pos:start="3272:10" pos:end="3272:24">TARGET_NR_sysfs</name></expr>:</case>

        <goto pos:start="3274:9" pos:end="3277:0">goto <name pos:start="3274:14" pos:end="3274:26">unimplemented</name>;</goto>

<cpp:endif pos:start="3276:1" pos:end="3276:6">#<cpp:directive pos:start="3276:2" pos:end="3276:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3278:5" pos:end="3278:31">case <expr pos:start="3278:10" pos:end="3278:30"><name pos:start="3278:10" pos:end="3278:30">TARGET_NR_personality</name></expr>:</case>

        <expr_stmt pos:start="3280:9" pos:end="3280:43"><expr pos:start="3280:9" pos:end="3280:42"><name pos:start="3280:9" pos:end="3280:11">ret</name> <operator pos:start="3280:13" pos:end="3280:13">=</operator> <call pos:start="3280:15" pos:end="3280:42"><name pos:start="3280:15" pos:end="3280:23">get_errno</name><argument_list pos:start="3280:24" pos:end="3280:42">(<argument pos:start="3280:25" pos:end="3280:41"><expr pos:start="3280:25" pos:end="3280:41"><call pos:start="3280:25" pos:end="3280:41"><name pos:start="3280:25" pos:end="3280:35">personality</name><argument_list pos:start="3280:36" pos:end="3280:41">(<argument pos:start="3280:37" pos:end="3280:40"><expr pos:start="3280:37" pos:end="3280:40"><name pos:start="3280:37" pos:end="3280:40">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3282:9" pos:end="3285:0">break;</break>

<cpp:ifdef pos:start="3284:1" pos:end="3284:28">#<cpp:directive pos:start="3284:2" pos:end="3284:6">ifdef</cpp:directive> <name pos:start="3284:8" pos:end="3284:28">TARGET_NR_afs_syscall</name></cpp:ifdef>

    <case pos:start="3286:5" pos:end="3286:31">case <expr pos:start="3286:10" pos:end="3286:30"><name pos:start="3286:10" pos:end="3286:30">TARGET_NR_afs_syscall</name></expr>:</case>

        <goto pos:start="3288:9" pos:end="3293:0">goto <name pos:start="3288:14" pos:end="3288:26">unimplemented</name>;</goto>

<cpp:endif pos:start="3290:1" pos:end="3290:6">#<cpp:directive pos:start="3290:2" pos:end="3290:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3292:1" pos:end="3292:24">#<cpp:directive pos:start="3292:2" pos:end="3292:6">ifdef</cpp:directive> <name pos:start="3292:8" pos:end="3292:24">TARGET_NR__llseek</name></cpp:ifdef> <comment type="block" pos:start="3292:26" pos:end="3292:43">/* Not on alpha */</comment>

    <case pos:start="3294:5" pos:end="3294:27">case <expr pos:start="3294:10" pos:end="3294:26"><name pos:start="3294:10" pos:end="3294:26">TARGET_NR__llseek</name></expr>:</case>

        <block pos:start="3296:9" pos:end="3318:9">{<block_content pos:start="3300:13" pos:end="3317:0">

<cpp:if pos:start="3298:1" pos:end="3298:24">#<cpp:directive pos:start="3298:2" pos:end="3298:3">if</cpp:directive> <expr pos:start="3298:5" pos:end="3298:24"><call pos:start="3298:5" pos:end="3298:24"><name pos:start="3298:5" pos:end="3298:11">defined</name> <argument_list pos:start="3298:13" pos:end="3298:24">(<argument pos:start="3298:14" pos:end="3298:23"><expr pos:start="3298:14" pos:end="3298:23"><name pos:start="3298:14" pos:end="3298:23">__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <expr_stmt pos:start="3300:13" pos:end="3300:79"><expr pos:start="3300:13" pos:end="3300:78"><name pos:start="3300:13" pos:end="3300:15">ret</name> <operator pos:start="3300:17" pos:end="3300:17">=</operator> <call pos:start="3300:19" pos:end="3300:78"><name pos:start="3300:19" pos:end="3300:27">get_errno</name><argument_list pos:start="3300:28" pos:end="3300:78">(<argument pos:start="3300:29" pos:end="3300:77"><expr pos:start="3300:29" pos:end="3300:77"><call pos:start="3300:29" pos:end="3300:77"><name pos:start="3300:29" pos:end="3300:33">lseek</name><argument_list pos:start="3300:34" pos:end="3300:77">(<argument pos:start="3300:35" pos:end="3300:38"><expr pos:start="3300:35" pos:end="3300:38"><name pos:start="3300:35" pos:end="3300:38">arg1</name></expr></argument>, <argument pos:start="3300:41" pos:end="3300:70"><expr pos:start="3300:41" pos:end="3300:70"><operator pos:start="3300:41" pos:end="3300:41">(</operator><operator pos:start="3300:42" pos:end="3300:42">(</operator><name pos:start="3300:43" pos:end="3300:50">uint64_t</name> <operator pos:start="3300:52" pos:end="3300:52">)</operator><name pos:start="3300:53" pos:end="3300:56">arg2</name> <operator pos:start="3300:58" pos:end="3300:59">&lt;&lt;</operator> <literal type="number" pos:start="3300:61" pos:end="3300:62">32</literal><operator pos:start="3300:63" pos:end="3300:63">)</operator> <operator pos:start="3300:65" pos:end="3300:65">|</operator> <name pos:start="3300:67" pos:end="3300:70">arg3</name></expr></argument>, <argument pos:start="3300:73" pos:end="3300:76"><expr pos:start="3300:73" pos:end="3300:76"><name pos:start="3300:73" pos:end="3300:76">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3302:13" pos:end="3307:0"><if pos:start="3302:13" pos:end="3307:0">if <condition pos:start="3302:16" pos:end="3302:40">(<expr pos:start="3302:17" pos:end="3302:39"><call pos:start="3302:17" pos:end="3302:39"><name pos:start="3302:17" pos:end="3302:28">put_user_s64</name><argument_list pos:start="3302:29" pos:end="3302:39">(<argument pos:start="3302:30" pos:end="3302:32"><expr pos:start="3302:30" pos:end="3302:32"><name pos:start="3302:30" pos:end="3302:32">ret</name></expr></argument>, <argument pos:start="3302:35" pos:end="3302:38"><expr pos:start="3302:35" pos:end="3302:38"><name pos:start="3302:35" pos:end="3302:38">arg4</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3304:17" pos:end="3307:0"><block_content pos:start="3304:17" pos:end="3307:0">

                <goto pos:start="3304:17" pos:end="3307:0">goto <name pos:start="3304:22" pos:end="3304:27">efault</name>;</goto></block_content></block></if></if_stmt>

<cpp:else pos:start="3306:1" pos:end="3306:5">#<cpp:directive pos:start="3306:2" pos:end="3306:5">else</cpp:directive></cpp:else>

            <decl_stmt pos:start="3308:13" pos:end="3308:24"><decl pos:start="3308:13" pos:end="3308:23"><type pos:start="3308:13" pos:end="3308:19"><name pos:start="3308:13" pos:end="3308:19">int64_t</name></type> <name pos:start="3308:21" pos:end="3308:23">res</name></decl>;</decl_stmt>

            <expr_stmt pos:start="3310:13" pos:end="3310:67"><expr pos:start="3310:13" pos:end="3310:66"><name pos:start="3310:13" pos:end="3310:15">ret</name> <operator pos:start="3310:17" pos:end="3310:17">=</operator> <call pos:start="3310:19" pos:end="3310:66"><name pos:start="3310:19" pos:end="3310:27">get_errno</name><argument_list pos:start="3310:28" pos:end="3310:66">(<argument pos:start="3310:29" pos:end="3310:65"><expr pos:start="3310:29" pos:end="3310:65"><call pos:start="3310:29" pos:end="3310:65"><name pos:start="3310:29" pos:end="3310:35">_llseek</name><argument_list pos:start="3310:36" pos:end="3310:65">(<argument pos:start="3310:37" pos:end="3310:40"><expr pos:start="3310:37" pos:end="3310:40"><name pos:start="3310:37" pos:end="3310:40">arg1</name></expr></argument>, <argument pos:start="3310:43" pos:end="3310:46"><expr pos:start="3310:43" pos:end="3310:46"><name pos:start="3310:43" pos:end="3310:46">arg2</name></expr></argument>, <argument pos:start="3310:49" pos:end="3310:52"><expr pos:start="3310:49" pos:end="3310:52"><name pos:start="3310:49" pos:end="3310:52">arg3</name></expr></argument>, <argument pos:start="3310:55" pos:end="3310:58"><expr pos:start="3310:55" pos:end="3310:58"><operator pos:start="3310:55" pos:end="3310:55">&amp;</operator><name pos:start="3310:56" pos:end="3310:58">res</name></expr></argument>, <argument pos:start="3310:61" pos:end="3310:64"><expr pos:start="3310:61" pos:end="3310:64"><name pos:start="3310:61" pos:end="3310:64">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3312:13" pos:end="3317:0"><if pos:start="3312:13" pos:end="3317:0">if <condition pos:start="3312:16" pos:end="3312:40">(<expr pos:start="3312:17" pos:end="3312:39"><call pos:start="3312:17" pos:end="3312:39"><name pos:start="3312:17" pos:end="3312:28">put_user_s64</name><argument_list pos:start="3312:29" pos:end="3312:39">(<argument pos:start="3312:30" pos:end="3312:32"><expr pos:start="3312:30" pos:end="3312:32"><name pos:start="3312:30" pos:end="3312:32">res</name></expr></argument>, <argument pos:start="3312:35" pos:end="3312:38"><expr pos:start="3312:35" pos:end="3312:38"><name pos:start="3312:35" pos:end="3312:38">arg4</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3314:17" pos:end="3317:0"><block_content pos:start="3314:17" pos:end="3317:0">

                <goto pos:start="3314:17" pos:end="3317:0">goto <name pos:start="3314:22" pos:end="3314:27">efault</name>;</goto></block_content></block></if></if_stmt>

<cpp:endif pos:start="3316:1" pos:end="3316:6">#<cpp:directive pos:start="3316:2" pos:end="3316:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block>

        <break pos:start="3320:9" pos:end="3323:0">break;</break>

<cpp:endif pos:start="3322:1" pos:end="3322:6">#<cpp:directive pos:start="3322:2" pos:end="3322:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3324:5" pos:end="3327:0">case <expr pos:start="3324:10" pos:end="3324:27"><name pos:start="3324:10" pos:end="3324:27">TARGET_NR_getdents</name></expr>:</case>

<cpp:if pos:start="3326:1" pos:end="3326:49">#<cpp:directive pos:start="3326:2" pos:end="3326:3">if</cpp:directive> <expr pos:start="3326:5" pos:end="3326:49"><name pos:start="3326:5" pos:end="3326:19">TARGET_ABI_BITS</name> <operator pos:start="3326:21" pos:end="3326:22">==</operator> <literal type="number" pos:start="3326:24" pos:end="3326:25">32</literal> <operator pos:start="3326:27" pos:end="3326:28">&amp;&amp;</operator> <name pos:start="3326:30" pos:end="3326:43">HOST_LONG_BITS</name> <operator pos:start="3326:45" pos:end="3326:46">==</operator> <literal type="number" pos:start="3326:48" pos:end="3326:49">64</literal></expr></cpp:if>

        <block pos:start="3328:9" pos:end="3419:0">{<block_content pos:start="3330:13" pos:end="3414:23">

            <decl_stmt pos:start="3330:13" pos:end="3330:46"><decl pos:start="3330:13" pos:end="3330:45"><type pos:start="3330:13" pos:end="3330:34"><name pos:start="3330:13" pos:end="3330:32"><name pos:start="3330:13" pos:end="3330:18">struct</name> <name pos:start="3330:20" pos:end="3330:32">target_dirent</name></name> <modifier pos:start="3330:34" pos:end="3330:34">*</modifier></type><name pos:start="3330:35" pos:end="3330:45">target_dirp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3332:13" pos:end="3332:38"><decl pos:start="3332:13" pos:end="3332:37"><type pos:start="3332:13" pos:end="3332:33"><name pos:start="3332:13" pos:end="3332:31"><name pos:start="3332:13" pos:end="3332:18">struct</name> <name pos:start="3332:20" pos:end="3332:31">linux_dirent</name></name> <modifier pos:start="3332:33" pos:end="3332:33">*</modifier></type><name pos:start="3332:34" pos:end="3332:37">dirp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3334:13" pos:end="3334:34"><decl pos:start="3334:13" pos:end="3334:33"><type pos:start="3334:13" pos:end="3334:20"><name pos:start="3334:13" pos:end="3334:20">abi_long</name></type> <name pos:start="3334:22" pos:end="3334:26">count</name> <init pos:start="3334:28" pos:end="3334:33">= <expr pos:start="3334:30" pos:end="3334:33"><name pos:start="3334:30" pos:end="3334:33">arg3</name></expr></init></decl>;</decl_stmt>



	    <expr_stmt pos:start="3338:13" pos:end="3338:33"><expr pos:start="3338:13" pos:end="3338:32"><name pos:start="3338:13" pos:end="3338:16">dirp</name> <operator pos:start="3338:18" pos:end="3338:18">=</operator> <call pos:start="3338:20" pos:end="3338:32"><name pos:start="3338:20" pos:end="3338:25">malloc</name><argument_list pos:start="3338:26" pos:end="3338:32">(<argument pos:start="3338:27" pos:end="3338:31"><expr pos:start="3338:27" pos:end="3338:31"><name pos:start="3338:27" pos:end="3338:31">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <if_stmt pos:start="3340:13" pos:end="3346:13"><if pos:start="3340:13" pos:end="3346:13">if <condition pos:start="3340:16" pos:end="3340:22">(<expr pos:start="3340:17" pos:end="3340:21"><operator pos:start="3340:17" pos:end="3340:17">!</operator><name pos:start="3340:18" pos:end="3340:21">dirp</name></expr>)</condition> <block pos:start="3340:24" pos:end="3346:13">{<block_content pos:start="3342:17" pos:end="3344:26">

                <expr_stmt pos:start="3342:17" pos:end="3342:37"><expr pos:start="3342:17" pos:end="3342:36"><name pos:start="3342:17" pos:end="3342:19">ret</name> <operator pos:start="3342:21" pos:end="3342:21">=</operator> <operator pos:start="3342:23" pos:end="3342:23">-</operator><name pos:start="3342:24" pos:end="3342:36">TARGET_ENOMEM</name></expr>;</expr_stmt>

                <goto pos:start="3344:17" pos:end="3344:26">goto <name pos:start="3344:22" pos:end="3344:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="3350:13" pos:end="3350:61"><expr pos:start="3350:13" pos:end="3350:60"><name pos:start="3350:13" pos:end="3350:15">ret</name> <operator pos:start="3350:17" pos:end="3350:17">=</operator> <call pos:start="3350:19" pos:end="3350:60"><name pos:start="3350:19" pos:end="3350:27">get_errno</name><argument_list pos:start="3350:28" pos:end="3350:60">(<argument pos:start="3350:29" pos:end="3350:59"><expr pos:start="3350:29" pos:end="3350:59"><call pos:start="3350:29" pos:end="3350:59"><name pos:start="3350:29" pos:end="3350:40">sys_getdents</name><argument_list pos:start="3350:41" pos:end="3350:59">(<argument pos:start="3350:42" pos:end="3350:45"><expr pos:start="3350:42" pos:end="3350:45"><name pos:start="3350:42" pos:end="3350:45">arg1</name></expr></argument>, <argument pos:start="3350:48" pos:end="3350:51"><expr pos:start="3350:48" pos:end="3350:51"><name pos:start="3350:48" pos:end="3350:51">dirp</name></expr></argument>, <argument pos:start="3350:54" pos:end="3350:58"><expr pos:start="3350:54" pos:end="3350:58"><name pos:start="3350:54" pos:end="3350:58">count</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3352:13" pos:end="3412:13"><if pos:start="3352:13" pos:end="3412:13">if <condition pos:start="3352:16" pos:end="3352:31">(<expr pos:start="3352:17" pos:end="3352:30"><operator pos:start="3352:17" pos:end="3352:17">!</operator><call pos:start="3352:18" pos:end="3352:30"><name pos:start="3352:18" pos:end="3352:25">is_error</name><argument_list pos:start="3352:26" pos:end="3352:30">(<argument pos:start="3352:27" pos:end="3352:29"><expr pos:start="3352:27" pos:end="3352:29"><name pos:start="3352:27" pos:end="3352:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3352:33" pos:end="3412:13">{<block_content pos:start="3354:17" pos:end="3410:52">

                <decl_stmt pos:start="3354:17" pos:end="3354:40"><decl pos:start="3354:17" pos:end="3354:39"><type pos:start="3354:17" pos:end="3354:37"><name pos:start="3354:17" pos:end="3354:35"><name pos:start="3354:17" pos:end="3354:22">struct</name> <name pos:start="3354:24" pos:end="3354:35">linux_dirent</name></name> <modifier pos:start="3354:37" pos:end="3354:37">*</modifier></type><name pos:start="3354:38" pos:end="3354:39">de</name></decl>;</decl_stmt>

		<decl_stmt pos:start="3356:17" pos:end="3356:42"><decl pos:start="3356:17" pos:end="3356:41"><type pos:start="3356:17" pos:end="3356:38"><name pos:start="3356:17" pos:end="3356:36"><name pos:start="3356:17" pos:end="3356:22">struct</name> <name pos:start="3356:24" pos:end="3356:36">target_dirent</name></name> <modifier pos:start="3356:38" pos:end="3356:38">*</modifier></type><name pos:start="3356:39" pos:end="3356:41">tde</name></decl>;</decl_stmt>

                <decl_stmt pos:start="3358:17" pos:end="3358:30"><decl pos:start="3358:17" pos:end="3358:29"><type pos:start="3358:17" pos:end="3358:19"><name pos:start="3358:17" pos:end="3358:19">int</name></type> <name pos:start="3358:21" pos:end="3358:23">len</name> <init pos:start="3358:25" pos:end="3358:29">= <expr pos:start="3358:27" pos:end="3358:29"><name pos:start="3358:27" pos:end="3358:29">ret</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="3360:17" pos:end="3360:36"><decl pos:start="3360:17" pos:end="3360:26"><type pos:start="3360:17" pos:end="3360:19"><name pos:start="3360:17" pos:end="3360:19">int</name></type> <name pos:start="3360:21" pos:end="3360:26">reclen</name></decl>, <decl pos:start="3360:29" pos:end="3360:35"><type ref="prev" pos:start="3360:17" pos:end="3360:19"/><name pos:start="3360:29" pos:end="3360:35">treclen</name></decl>;</decl_stmt>

		<decl_stmt pos:start="3362:17" pos:end="3362:37"><decl pos:start="3362:17" pos:end="3362:26"><type pos:start="3362:17" pos:end="3362:19"><name pos:start="3362:17" pos:end="3362:19">int</name></type> <name pos:start="3362:21" pos:end="3362:26">count1</name></decl>, <decl pos:start="3362:29" pos:end="3362:36"><type ref="prev" pos:start="3362:17" pos:end="3362:19"/><name pos:start="3362:29" pos:end="3362:36">tnamelen</name></decl>;</decl_stmt>



		<expr_stmt pos:start="3366:17" pos:end="3366:27"><expr pos:start="3366:17" pos:end="3366:26"><name pos:start="3366:17" pos:end="3366:22">count1</name> <operator pos:start="3366:24" pos:end="3366:24">=</operator> <literal type="number" pos:start="3366:26" pos:end="3366:26">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="3368:17" pos:end="3368:26"><expr pos:start="3368:17" pos:end="3368:25"><name pos:start="3368:17" pos:end="3368:18">de</name> <operator pos:start="3368:20" pos:end="3368:20">=</operator> <name pos:start="3368:22" pos:end="3368:25">dirp</name></expr>;</expr_stmt>

                <if_stmt pos:start="3370:17" pos:end="3372:32"><if pos:start="3370:17" pos:end="3372:32">if <condition pos:start="3370:20" pos:end="3370:77">(<expr pos:start="3370:21" pos:end="3370:76"><operator pos:start="3370:21" pos:end="3370:21">!</operator><operator pos:start="3370:22" pos:end="3370:22">(</operator><name pos:start="3370:23" pos:end="3370:33">target_dirp</name> <operator pos:start="3370:35" pos:end="3370:35">=</operator> <call pos:start="3370:37" pos:end="3370:75"><name pos:start="3370:37" pos:end="3370:45">lock_user</name><argument_list pos:start="3370:46" pos:end="3370:75">(<argument pos:start="3370:47" pos:end="3370:58"><expr pos:start="3370:47" pos:end="3370:58"><name pos:start="3370:47" pos:end="3370:58">VERIFY_WRITE</name></expr></argument>, <argument pos:start="3370:61" pos:end="3370:64"><expr pos:start="3370:61" pos:end="3370:64"><name pos:start="3370:61" pos:end="3370:64">arg2</name></expr></argument>, <argument pos:start="3370:67" pos:end="3370:71"><expr pos:start="3370:67" pos:end="3370:71"><name pos:start="3370:67" pos:end="3370:71">count</name></expr></argument>, <argument pos:start="3370:74" pos:end="3370:74"><expr pos:start="3370:74" pos:end="3370:74"><literal type="number" pos:start="3370:74" pos:end="3370:74">0</literal></expr></argument>)</argument_list></call><operator pos:start="3370:76" pos:end="3370:76">)</operator></expr>)</condition><block type="pseudo" pos:start="3372:21" pos:end="3372:32"><block_content pos:start="3372:21" pos:end="3372:32">

                    <goto pos:start="3372:21" pos:end="3372:32">goto <name pos:start="3372:26" pos:end="3372:31">efault</name>;</goto></block_content></block></if></if_stmt>

		<expr_stmt pos:start="3374:17" pos:end="3374:34"><expr pos:start="3374:17" pos:end="3374:33"><name pos:start="3374:17" pos:end="3374:19">tde</name> <operator pos:start="3374:21" pos:end="3374:21">=</operator> <name pos:start="3374:23" pos:end="3374:33">target_dirp</name></expr>;</expr_stmt>

                <while pos:start="3376:17" pos:end="3406:17">while <condition pos:start="3376:23" pos:end="3376:31">(<expr pos:start="3376:24" pos:end="3376:30"><name pos:start="3376:24" pos:end="3376:26">len</name> <operator pos:start="3376:28" pos:end="3376:28">&gt;</operator> <literal type="number" pos:start="3376:30" pos:end="3376:30">0</literal></expr>)</condition> <block pos:start="3376:33" pos:end="3406:17">{<block_content pos:start="3378:21" pos:end="3404:38">

                    <expr_stmt pos:start="3378:21" pos:end="3378:42"><expr pos:start="3378:21" pos:end="3378:41"><name pos:start="3378:21" pos:end="3378:26">reclen</name> <operator pos:start="3378:28" pos:end="3378:28">=</operator> <name pos:start="3378:30" pos:end="3378:41"><name pos:start="3378:30" pos:end="3378:31">de</name><operator pos:start="3378:32" pos:end="3378:33">-&gt;</operator><name pos:start="3378:34" pos:end="3378:41">d_reclen</name></name></expr>;</expr_stmt>

		    <expr_stmt pos:start="3380:21" pos:end="3380:79"><expr pos:start="3380:21" pos:end="3380:78"><name pos:start="3380:21" pos:end="3380:27">treclen</name> <operator pos:start="3380:29" pos:end="3380:29">=</operator> <name pos:start="3380:31" pos:end="3380:36">reclen</name> <operator pos:start="3380:38" pos:end="3380:38">-</operator> <operator pos:start="3380:40" pos:end="3380:40">(</operator><literal type="number" pos:start="3380:41" pos:end="3380:41">2</literal> <operator pos:start="3380:43" pos:end="3380:43">*</operator> <operator pos:start="3380:45" pos:end="3380:45">(</operator><sizeof pos:start="3380:46" pos:end="3380:57">sizeof<argument_list pos:start="3380:52" pos:end="3380:57">(<argument pos:start="3380:53" pos:end="3380:56"><expr pos:start="3380:53" pos:end="3380:56"><name pos:start="3380:53" pos:end="3380:56">long</name></expr></argument>)</argument_list></sizeof> <operator pos:start="3380:59" pos:end="3380:59">-</operator> <sizeof pos:start="3380:61" pos:end="3380:76">sizeof<argument_list pos:start="3380:67" pos:end="3380:76">(<argument pos:start="3380:68" pos:end="3380:75"><expr pos:start="3380:68" pos:end="3380:75"><name pos:start="3380:68" pos:end="3380:75">abi_long</name></expr></argument>)</argument_list></sizeof><operator pos:start="3380:77" pos:end="3380:77">)</operator><operator pos:start="3380:78" pos:end="3380:78">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="3382:21" pos:end="3382:53"><expr pos:start="3382:21" pos:end="3382:52"><name pos:start="3382:21" pos:end="3382:33"><name pos:start="3382:21" pos:end="3382:23">tde</name><operator pos:start="3382:24" pos:end="3382:25">-&gt;</operator><name pos:start="3382:26" pos:end="3382:33">d_reclen</name></name> <operator pos:start="3382:35" pos:end="3382:35">=</operator> <call pos:start="3382:37" pos:end="3382:52"><name pos:start="3382:37" pos:end="3382:43">tswap16</name><argument_list pos:start="3382:44" pos:end="3382:52">(<argument pos:start="3382:45" pos:end="3382:51"><expr pos:start="3382:45" pos:end="3382:51"><name pos:start="3382:45" pos:end="3382:51">treclen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3384:21" pos:end="3384:51"><expr pos:start="3384:21" pos:end="3384:50"><name pos:start="3384:21" pos:end="3384:30"><name pos:start="3384:21" pos:end="3384:23">tde</name><operator pos:start="3384:24" pos:end="3384:25">-&gt;</operator><name pos:start="3384:26" pos:end="3384:30">d_ino</name></name> <operator pos:start="3384:32" pos:end="3384:32">=</operator> <call pos:start="3384:34" pos:end="3384:50"><name pos:start="3384:34" pos:end="3384:39">tswapl</name><argument_list pos:start="3384:40" pos:end="3384:50">(<argument pos:start="3384:41" pos:end="3384:49"><expr pos:start="3384:41" pos:end="3384:49"><name pos:start="3384:41" pos:end="3384:49"><name pos:start="3384:41" pos:end="3384:42">de</name><operator pos:start="3384:43" pos:end="3384:44">-&gt;</operator><name pos:start="3384:45" pos:end="3384:49">d_ino</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3386:21" pos:end="3386:51"><expr pos:start="3386:21" pos:end="3386:50"><name pos:start="3386:21" pos:end="3386:30"><name pos:start="3386:21" pos:end="3386:23">tde</name><operator pos:start="3386:24" pos:end="3386:25">-&gt;</operator><name pos:start="3386:26" pos:end="3386:30">d_off</name></name> <operator pos:start="3386:32" pos:end="3386:32">=</operator> <call pos:start="3386:34" pos:end="3386:50"><name pos:start="3386:34" pos:end="3386:39">tswapl</name><argument_list pos:start="3386:40" pos:end="3386:50">(<argument pos:start="3386:41" pos:end="3386:49"><expr pos:start="3386:41" pos:end="3386:49"><name pos:start="3386:41" pos:end="3386:49"><name pos:start="3386:41" pos:end="3386:42">de</name><operator pos:start="3386:43" pos:end="3386:44">-&gt;</operator><name pos:start="3386:45" pos:end="3386:49">d_off</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="3388:21" pos:end="3388:68"><expr pos:start="3388:21" pos:end="3388:67"><name pos:start="3388:21" pos:end="3388:28">tnamelen</name> <operator pos:start="3388:30" pos:end="3388:30">=</operator> <name pos:start="3388:32" pos:end="3388:38">treclen</name> <operator pos:start="3388:40" pos:end="3388:40">-</operator> <operator pos:start="3388:42" pos:end="3388:42">(</operator><literal type="number" pos:start="3388:43" pos:end="3388:43">2</literal> <operator pos:start="3388:45" pos:end="3388:45">*</operator> <sizeof pos:start="3388:47" pos:end="3388:62">sizeof<argument_list pos:start="3388:53" pos:end="3388:62">(<argument pos:start="3388:54" pos:end="3388:61"><expr pos:start="3388:54" pos:end="3388:61"><name pos:start="3388:54" pos:end="3388:61">abi_long</name></expr></argument>)</argument_list></sizeof> <operator pos:start="3388:64" pos:end="3388:64">+</operator> <literal type="number" pos:start="3388:66" pos:end="3388:66">2</literal><operator pos:start="3388:67" pos:end="3388:67">)</operator></expr>;</expr_stmt>

		    <if_stmt pos:start="3390:21" pos:end="3392:39"><if pos:start="3390:21" pos:end="3392:39">if <condition pos:start="3390:24" pos:end="3390:39">(<expr pos:start="3390:25" pos:end="3390:38"><name pos:start="3390:25" pos:end="3390:32">tnamelen</name> <operator pos:start="3390:34" pos:end="3390:34">&gt;</operator> <literal type="number" pos:start="3390:36" pos:end="3390:38">256</literal></expr>)</condition><block type="pseudo" pos:start="3392:25" pos:end="3392:39"><block_content pos:start="3392:25" pos:end="3392:39">

                        <expr_stmt pos:start="3392:25" pos:end="3392:39"><expr pos:start="3392:25" pos:end="3392:38"><name pos:start="3392:25" pos:end="3392:32">tnamelen</name> <operator pos:start="3392:34" pos:end="3392:34">=</operator> <literal type="number" pos:start="3392:36" pos:end="3392:38">256</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <comment type="block" pos:start="3394:21" pos:end="3394:49">/* XXX: may not be correct */</comment>

                    <expr_stmt pos:start="3396:21" pos:end="3396:63"><expr pos:start="3396:21" pos:end="3396:62"><call pos:start="3396:21" pos:end="3396:62"><name pos:start="3396:21" pos:end="3396:27">pstrcpy</name><argument_list pos:start="3396:28" pos:end="3396:62">(<argument pos:start="3396:29" pos:end="3396:39"><expr pos:start="3396:29" pos:end="3396:39"><name pos:start="3396:29" pos:end="3396:39"><name pos:start="3396:29" pos:end="3396:31">tde</name><operator pos:start="3396:32" pos:end="3396:33">-&gt;</operator><name pos:start="3396:34" pos:end="3396:39">d_name</name></name></expr></argument>, <argument pos:start="3396:42" pos:end="3396:49"><expr pos:start="3396:42" pos:end="3396:49"><name pos:start="3396:42" pos:end="3396:49">tnamelen</name></expr></argument>, <argument pos:start="3396:52" pos:end="3396:61"><expr pos:start="3396:52" pos:end="3396:61"><name pos:start="3396:52" pos:end="3396:61"><name pos:start="3396:52" pos:end="3396:53">de</name><operator pos:start="3396:54" pos:end="3396:55">-&gt;</operator><name pos:start="3396:56" pos:end="3396:61">d_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3398:21" pos:end="3398:70"><expr pos:start="3398:21" pos:end="3398:69"><name pos:start="3398:21" pos:end="3398:22">de</name> <operator pos:start="3398:24" pos:end="3398:24">=</operator> <operator pos:start="3398:26" pos:end="3398:26">(</operator>struct <name pos:start="3398:34" pos:end="3398:45">linux_dirent</name> <operator pos:start="3398:47" pos:end="3398:47">*</operator><operator pos:start="3398:48" pos:end="3398:48">)</operator><operator pos:start="3398:49" pos:end="3398:49">(</operator><operator pos:start="3398:50" pos:end="3398:50">(</operator><name pos:start="3398:51" pos:end="3398:54">char</name> <operator pos:start="3398:56" pos:end="3398:56">*</operator><operator pos:start="3398:57" pos:end="3398:57">)</operator><name pos:start="3398:58" pos:end="3398:59">de</name> <operator pos:start="3398:61" pos:end="3398:61">+</operator> <name pos:start="3398:63" pos:end="3398:68">reclen</name><operator pos:start="3398:69" pos:end="3398:69">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="3400:21" pos:end="3400:34"><expr pos:start="3400:21" pos:end="3400:33"><name pos:start="3400:21" pos:end="3400:23">len</name> <operator pos:start="3400:25" pos:end="3400:26">-=</operator> <name pos:start="3400:28" pos:end="3400:33">reclen</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="3402:21" pos:end="3402:74"><expr pos:start="3402:21" pos:end="3402:73"><name pos:start="3402:21" pos:end="3402:23">tde</name> <operator pos:start="3402:25" pos:end="3402:25">=</operator> <operator pos:start="3402:27" pos:end="3402:27">(</operator>struct <name pos:start="3402:35" pos:end="3402:47">target_dirent</name> <operator pos:start="3402:49" pos:end="3402:49">*</operator><operator pos:start="3402:50" pos:end="3402:50">)</operator><operator pos:start="3402:51" pos:end="3402:51">(</operator><operator pos:start="3402:52" pos:end="3402:52">(</operator><name pos:start="3402:53" pos:end="3402:56">char</name> <operator pos:start="3402:58" pos:end="3402:58">*</operator><operator pos:start="3402:59" pos:end="3402:59">)</operator><name pos:start="3402:60" pos:end="3402:62">tde</name> <operator pos:start="3402:64" pos:end="3402:64">+</operator> <name pos:start="3402:66" pos:end="3402:72">treclen</name><operator pos:start="3402:73" pos:end="3402:73">)</operator></expr>;</expr_stmt>

		    <expr_stmt pos:start="3404:21" pos:end="3404:38"><expr pos:start="3404:21" pos:end="3404:37"><name pos:start="3404:21" pos:end="3404:26">count1</name> <operator pos:start="3404:28" pos:end="3404:29">+=</operator> <name pos:start="3404:31" pos:end="3404:37">treclen</name></expr>;</expr_stmt>

                </block_content>}</block></while>

		<expr_stmt pos:start="3408:17" pos:end="3408:29"><expr pos:start="3408:17" pos:end="3408:28"><name pos:start="3408:17" pos:end="3408:19">ret</name> <operator pos:start="3408:21" pos:end="3408:21">=</operator> <name pos:start="3408:23" pos:end="3408:28">count1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="3410:17" pos:end="3410:52"><expr pos:start="3410:17" pos:end="3410:51"><call pos:start="3410:17" pos:end="3410:51"><name pos:start="3410:17" pos:end="3410:27">unlock_user</name><argument_list pos:start="3410:28" pos:end="3410:51">(<argument pos:start="3410:29" pos:end="3410:39"><expr pos:start="3410:29" pos:end="3410:39"><name pos:start="3410:29" pos:end="3410:39">target_dirp</name></expr></argument>, <argument pos:start="3410:42" pos:end="3410:45"><expr pos:start="3410:42" pos:end="3410:45"><name pos:start="3410:42" pos:end="3410:45">arg2</name></expr></argument>, <argument pos:start="3410:48" pos:end="3410:50"><expr pos:start="3410:48" pos:end="3410:50"><name pos:start="3410:48" pos:end="3410:50">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

	    <expr_stmt pos:start="3414:13" pos:end="3414:23"><expr pos:start="3414:13" pos:end="3414:22"><call pos:start="3414:13" pos:end="3414:22"><name pos:start="3414:13" pos:end="3414:16">free</name><argument_list pos:start="3414:17" pos:end="3414:22">(<argument pos:start="3414:18" pos:end="3414:21"><expr pos:start="3414:18" pos:end="3414:21"><name pos:start="3414:18" pos:end="3414:21">dirp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

<cpp:else pos:start="3418:1" pos:end="3418:5">#<cpp:directive pos:start="3418:2" pos:end="3418:5">else</cpp:directive></cpp:else>

        <block pos:start="3420:9" pos:end="3471:0">{<block_content pos:start="3422:13" pos:end="3466:41">

            <decl_stmt pos:start="3422:13" pos:end="3422:38"><decl pos:start="3422:13" pos:end="3422:37"><type pos:start="3422:13" pos:end="3422:33"><name pos:start="3422:13" pos:end="3422:31"><name pos:start="3422:13" pos:end="3422:18">struct</name> <name pos:start="3422:20" pos:end="3422:31">linux_dirent</name></name> <modifier pos:start="3422:33" pos:end="3422:33">*</modifier></type><name pos:start="3422:34" pos:end="3422:37">dirp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3424:13" pos:end="3424:34"><decl pos:start="3424:13" pos:end="3424:33"><type pos:start="3424:13" pos:end="3424:20"><name pos:start="3424:13" pos:end="3424:20">abi_long</name></type> <name pos:start="3424:22" pos:end="3424:26">count</name> <init pos:start="3424:28" pos:end="3424:33">= <expr pos:start="3424:30" pos:end="3424:33"><name pos:start="3424:30" pos:end="3424:33">arg3</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="3428:13" pos:end="3430:28"><if pos:start="3428:13" pos:end="3430:28">if <condition pos:start="3428:16" pos:end="3428:66">(<expr pos:start="3428:17" pos:end="3428:65"><operator pos:start="3428:17" pos:end="3428:17">!</operator><operator pos:start="3428:18" pos:end="3428:18">(</operator><name pos:start="3428:19" pos:end="3428:22">dirp</name> <operator pos:start="3428:24" pos:end="3428:24">=</operator> <call pos:start="3428:26" pos:end="3428:64"><name pos:start="3428:26" pos:end="3428:34">lock_user</name><argument_list pos:start="3428:35" pos:end="3428:64">(<argument pos:start="3428:36" pos:end="3428:47"><expr pos:start="3428:36" pos:end="3428:47"><name pos:start="3428:36" pos:end="3428:47">VERIFY_WRITE</name></expr></argument>, <argument pos:start="3428:50" pos:end="3428:53"><expr pos:start="3428:50" pos:end="3428:53"><name pos:start="3428:50" pos:end="3428:53">arg2</name></expr></argument>, <argument pos:start="3428:56" pos:end="3428:60"><expr pos:start="3428:56" pos:end="3428:60"><name pos:start="3428:56" pos:end="3428:60">count</name></expr></argument>, <argument pos:start="3428:63" pos:end="3428:63"><expr pos:start="3428:63" pos:end="3428:63"><literal type="number" pos:start="3428:63" pos:end="3428:63">0</literal></expr></argument>)</argument_list></call><operator pos:start="3428:65" pos:end="3428:65">)</operator></expr>)</condition><block type="pseudo" pos:start="3430:17" pos:end="3430:28"><block_content pos:start="3430:17" pos:end="3430:28">

                <goto pos:start="3430:17" pos:end="3430:28">goto <name pos:start="3430:22" pos:end="3430:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="3432:13" pos:end="3432:61"><expr pos:start="3432:13" pos:end="3432:60"><name pos:start="3432:13" pos:end="3432:15">ret</name> <operator pos:start="3432:17" pos:end="3432:17">=</operator> <call pos:start="3432:19" pos:end="3432:60"><name pos:start="3432:19" pos:end="3432:27">get_errno</name><argument_list pos:start="3432:28" pos:end="3432:60">(<argument pos:start="3432:29" pos:end="3432:59"><expr pos:start="3432:29" pos:end="3432:59"><call pos:start="3432:29" pos:end="3432:59"><name pos:start="3432:29" pos:end="3432:40">sys_getdents</name><argument_list pos:start="3432:41" pos:end="3432:59">(<argument pos:start="3432:42" pos:end="3432:45"><expr pos:start="3432:42" pos:end="3432:45"><name pos:start="3432:42" pos:end="3432:45">arg1</name></expr></argument>, <argument pos:start="3432:48" pos:end="3432:51"><expr pos:start="3432:48" pos:end="3432:51"><name pos:start="3432:48" pos:end="3432:51">dirp</name></expr></argument>, <argument pos:start="3432:54" pos:end="3432:58"><expr pos:start="3432:54" pos:end="3432:58"><name pos:start="3432:54" pos:end="3432:58">count</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3434:13" pos:end="3464:13"><if pos:start="3434:13" pos:end="3464:13">if <condition pos:start="3434:16" pos:end="3434:31">(<expr pos:start="3434:17" pos:end="3434:30"><operator pos:start="3434:17" pos:end="3434:17">!</operator><call pos:start="3434:18" pos:end="3434:30"><name pos:start="3434:18" pos:end="3434:25">is_error</name><argument_list pos:start="3434:26" pos:end="3434:30">(<argument pos:start="3434:27" pos:end="3434:29"><expr pos:start="3434:27" pos:end="3434:29"><name pos:start="3434:27" pos:end="3434:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3434:33" pos:end="3464:13">{<block_content pos:start="3436:17" pos:end="3462:17">

                <decl_stmt pos:start="3436:17" pos:end="3436:40"><decl pos:start="3436:17" pos:end="3436:39"><type pos:start="3436:17" pos:end="3436:37"><name pos:start="3436:17" pos:end="3436:35"><name pos:start="3436:17" pos:end="3436:22">struct</name> <name pos:start="3436:24" pos:end="3436:35">linux_dirent</name></name> <modifier pos:start="3436:37" pos:end="3436:37">*</modifier></type><name pos:start="3436:38" pos:end="3436:39">de</name></decl>;</decl_stmt>

                <decl_stmt pos:start="3438:17" pos:end="3438:30"><decl pos:start="3438:17" pos:end="3438:29"><type pos:start="3438:17" pos:end="3438:19"><name pos:start="3438:17" pos:end="3438:19">int</name></type> <name pos:start="3438:21" pos:end="3438:23">len</name> <init pos:start="3438:25" pos:end="3438:29">= <expr pos:start="3438:27" pos:end="3438:29"><name pos:start="3438:27" pos:end="3438:29">ret</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="3440:17" pos:end="3440:27"><decl pos:start="3440:17" pos:end="3440:26"><type pos:start="3440:17" pos:end="3440:19"><name pos:start="3440:17" pos:end="3440:19">int</name></type> <name pos:start="3440:21" pos:end="3440:26">reclen</name></decl>;</decl_stmt>

                <expr_stmt pos:start="3442:17" pos:end="3442:26"><expr pos:start="3442:17" pos:end="3442:25"><name pos:start="3442:17" pos:end="3442:18">de</name> <operator pos:start="3442:20" pos:end="3442:20">=</operator> <name pos:start="3442:22" pos:end="3442:25">dirp</name></expr>;</expr_stmt>

                <while pos:start="3444:17" pos:end="3462:17">while <condition pos:start="3444:23" pos:end="3444:31">(<expr pos:start="3444:24" pos:end="3444:30"><name pos:start="3444:24" pos:end="3444:26">len</name> <operator pos:start="3444:28" pos:end="3444:28">&gt;</operator> <literal type="number" pos:start="3444:30" pos:end="3444:30">0</literal></expr>)</condition> <block pos:start="3444:33" pos:end="3462:17">{<block_content pos:start="3446:21" pos:end="3460:34">

                    <expr_stmt pos:start="3446:21" pos:end="3446:42"><expr pos:start="3446:21" pos:end="3446:41"><name pos:start="3446:21" pos:end="3446:26">reclen</name> <operator pos:start="3446:28" pos:end="3446:28">=</operator> <name pos:start="3446:30" pos:end="3446:41"><name pos:start="3446:30" pos:end="3446:31">de</name><operator pos:start="3446:32" pos:end="3446:33">-&gt;</operator><name pos:start="3446:34" pos:end="3446:41">d_reclen</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="3448:21" pos:end="3450:30"><if pos:start="3448:21" pos:end="3450:30">if <condition pos:start="3448:24" pos:end="3448:37">(<expr pos:start="3448:25" pos:end="3448:36"><name pos:start="3448:25" pos:end="3448:30">reclen</name> <operator pos:start="3448:32" pos:end="3448:32">&gt;</operator> <name pos:start="3448:34" pos:end="3448:36">len</name></expr>)</condition><block type="pseudo" pos:start="3450:25" pos:end="3450:30"><block_content pos:start="3450:25" pos:end="3450:30">

                        <break pos:start="3450:25" pos:end="3450:30">break;</break></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="3452:21" pos:end="3452:51"><expr pos:start="3452:21" pos:end="3452:50"><name pos:start="3452:21" pos:end="3452:32"><name pos:start="3452:21" pos:end="3452:22">de</name><operator pos:start="3452:23" pos:end="3452:24">-&gt;</operator><name pos:start="3452:25" pos:end="3452:32">d_reclen</name></name> <operator pos:start="3452:34" pos:end="3452:34">=</operator> <call pos:start="3452:36" pos:end="3452:50"><name pos:start="3452:36" pos:end="3452:42">tswap16</name><argument_list pos:start="3452:43" pos:end="3452:50">(<argument pos:start="3452:44" pos:end="3452:49"><expr pos:start="3452:44" pos:end="3452:49"><name pos:start="3452:44" pos:end="3452:49">reclen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3454:21" pos:end="3454:40"><expr pos:start="3454:21" pos:end="3454:39"><call pos:start="3454:21" pos:end="3454:39"><name pos:start="3454:21" pos:end="3454:27">tswapls</name><argument_list pos:start="3454:28" pos:end="3454:39">(<argument pos:start="3454:29" pos:end="3454:38"><expr pos:start="3454:29" pos:end="3454:38"><operator pos:start="3454:29" pos:end="3454:29">&amp;</operator><name pos:start="3454:30" pos:end="3454:38"><name pos:start="3454:30" pos:end="3454:31">de</name><operator pos:start="3454:32" pos:end="3454:33">-&gt;</operator><name pos:start="3454:34" pos:end="3454:38">d_ino</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3456:21" pos:end="3456:40"><expr pos:start="3456:21" pos:end="3456:39"><call pos:start="3456:21" pos:end="3456:39"><name pos:start="3456:21" pos:end="3456:27">tswapls</name><argument_list pos:start="3456:28" pos:end="3456:39">(<argument pos:start="3456:29" pos:end="3456:38"><expr pos:start="3456:29" pos:end="3456:38"><operator pos:start="3456:29" pos:end="3456:29">&amp;</operator><name pos:start="3456:30" pos:end="3456:38"><name pos:start="3456:30" pos:end="3456:31">de</name><operator pos:start="3456:32" pos:end="3456:33">-&gt;</operator><name pos:start="3456:34" pos:end="3456:38">d_off</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3458:21" pos:end="3458:70"><expr pos:start="3458:21" pos:end="3458:69"><name pos:start="3458:21" pos:end="3458:22">de</name> <operator pos:start="3458:24" pos:end="3458:24">=</operator> <operator pos:start="3458:26" pos:end="3458:26">(</operator>struct <name pos:start="3458:34" pos:end="3458:45">linux_dirent</name> <operator pos:start="3458:47" pos:end="3458:47">*</operator><operator pos:start="3458:48" pos:end="3458:48">)</operator><operator pos:start="3458:49" pos:end="3458:49">(</operator><operator pos:start="3458:50" pos:end="3458:50">(</operator><name pos:start="3458:51" pos:end="3458:54">char</name> <operator pos:start="3458:56" pos:end="3458:56">*</operator><operator pos:start="3458:57" pos:end="3458:57">)</operator><name pos:start="3458:58" pos:end="3458:59">de</name> <operator pos:start="3458:61" pos:end="3458:61">+</operator> <name pos:start="3458:63" pos:end="3458:68">reclen</name><operator pos:start="3458:69" pos:end="3458:69">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="3460:21" pos:end="3460:34"><expr pos:start="3460:21" pos:end="3460:33"><name pos:start="3460:21" pos:end="3460:23">len</name> <operator pos:start="3460:25" pos:end="3460:26">-=</operator> <name pos:start="3460:28" pos:end="3460:33">reclen</name></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="3466:13" pos:end="3466:41"><expr pos:start="3466:13" pos:end="3466:40"><call pos:start="3466:13" pos:end="3466:40"><name pos:start="3466:13" pos:end="3466:23">unlock_user</name><argument_list pos:start="3466:24" pos:end="3466:40">(<argument pos:start="3466:25" pos:end="3466:28"><expr pos:start="3466:25" pos:end="3466:28"><name pos:start="3466:25" pos:end="3466:28">dirp</name></expr></argument>, <argument pos:start="3466:31" pos:end="3466:34"><expr pos:start="3466:31" pos:end="3466:34"><name pos:start="3466:31" pos:end="3466:34">arg2</name></expr></argument>, <argument pos:start="3466:37" pos:end="3466:39"><expr pos:start="3466:37" pos:end="3466:39"><name pos:start="3466:37" pos:end="3466:39">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

<cpp:endif pos:start="3470:1" pos:end="3470:6">#<cpp:directive pos:start="3470:2" pos:end="3470:6">endif</cpp:directive></cpp:endif>

        <break pos:start="3472:9" pos:end="3475:0">break;</break>

<cpp:if pos:start="3474:1" pos:end="3474:61">#<cpp:directive pos:start="3474:2" pos:end="3474:3">if</cpp:directive> <expr pos:start="3474:5" pos:end="3474:61"><call pos:start="3474:5" pos:end="3474:33"><name pos:start="3474:5" pos:end="3474:11">defined</name><argument_list pos:start="3474:12" pos:end="3474:33">(<argument pos:start="3474:13" pos:end="3474:32"><expr pos:start="3474:13" pos:end="3474:32"><name pos:start="3474:13" pos:end="3474:32">TARGET_NR_getdents64</name></expr></argument>)</argument_list></call> <operator pos:start="3474:35" pos:end="3474:36">&amp;&amp;</operator> <call pos:start="3474:38" pos:end="3474:61"><name pos:start="3474:38" pos:end="3474:44">defined</name><argument_list pos:start="3474:45" pos:end="3474:61">(<argument pos:start="3474:46" pos:end="3474:60"><expr pos:start="3474:46" pos:end="3474:60"><name pos:start="3474:46" pos:end="3474:60">__NR_getdents64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="3476:5" pos:end="3476:30">case <expr pos:start="3476:10" pos:end="3476:29"><name pos:start="3476:10" pos:end="3476:29">TARGET_NR_getdents64</name></expr>:</case>

        <block pos:start="3478:9" pos:end="3524:9">{<block_content pos:start="3480:13" pos:end="3522:41">

            <decl_stmt pos:start="3480:13" pos:end="3480:40"><decl pos:start="3480:13" pos:end="3480:39"><type pos:start="3480:13" pos:end="3480:35"><name pos:start="3480:13" pos:end="3480:33"><name pos:start="3480:13" pos:end="3480:18">struct</name> <name pos:start="3480:20" pos:end="3480:33">linux_dirent64</name></name> <modifier pos:start="3480:35" pos:end="3480:35">*</modifier></type><name pos:start="3480:36" pos:end="3480:39">dirp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3482:13" pos:end="3482:34"><decl pos:start="3482:13" pos:end="3482:33"><type pos:start="3482:13" pos:end="3482:20"><name pos:start="3482:13" pos:end="3482:20">abi_long</name></type> <name pos:start="3482:22" pos:end="3482:26">count</name> <init pos:start="3482:28" pos:end="3482:33">= <expr pos:start="3482:30" pos:end="3482:33"><name pos:start="3482:30" pos:end="3482:33">arg3</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="3484:13" pos:end="3486:28"><if pos:start="3484:13" pos:end="3486:28">if <condition pos:start="3484:16" pos:end="3484:66">(<expr pos:start="3484:17" pos:end="3484:65"><operator pos:start="3484:17" pos:end="3484:17">!</operator><operator pos:start="3484:18" pos:end="3484:18">(</operator><name pos:start="3484:19" pos:end="3484:22">dirp</name> <operator pos:start="3484:24" pos:end="3484:24">=</operator> <call pos:start="3484:26" pos:end="3484:64"><name pos:start="3484:26" pos:end="3484:34">lock_user</name><argument_list pos:start="3484:35" pos:end="3484:64">(<argument pos:start="3484:36" pos:end="3484:47"><expr pos:start="3484:36" pos:end="3484:47"><name pos:start="3484:36" pos:end="3484:47">VERIFY_WRITE</name></expr></argument>, <argument pos:start="3484:50" pos:end="3484:53"><expr pos:start="3484:50" pos:end="3484:53"><name pos:start="3484:50" pos:end="3484:53">arg2</name></expr></argument>, <argument pos:start="3484:56" pos:end="3484:60"><expr pos:start="3484:56" pos:end="3484:60"><name pos:start="3484:56" pos:end="3484:60">count</name></expr></argument>, <argument pos:start="3484:63" pos:end="3484:63"><expr pos:start="3484:63" pos:end="3484:63"><literal type="number" pos:start="3484:63" pos:end="3484:63">0</literal></expr></argument>)</argument_list></call><operator pos:start="3484:65" pos:end="3484:65">)</operator></expr>)</condition><block type="pseudo" pos:start="3486:17" pos:end="3486:28"><block_content pos:start="3486:17" pos:end="3486:28">

                <goto pos:start="3486:17" pos:end="3486:28">goto <name pos:start="3486:22" pos:end="3486:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="3488:13" pos:end="3488:63"><expr pos:start="3488:13" pos:end="3488:62"><name pos:start="3488:13" pos:end="3488:15">ret</name> <operator pos:start="3488:17" pos:end="3488:17">=</operator> <call pos:start="3488:19" pos:end="3488:62"><name pos:start="3488:19" pos:end="3488:27">get_errno</name><argument_list pos:start="3488:28" pos:end="3488:62">(<argument pos:start="3488:29" pos:end="3488:61"><expr pos:start="3488:29" pos:end="3488:61"><call pos:start="3488:29" pos:end="3488:61"><name pos:start="3488:29" pos:end="3488:42">sys_getdents64</name><argument_list pos:start="3488:43" pos:end="3488:61">(<argument pos:start="3488:44" pos:end="3488:47"><expr pos:start="3488:44" pos:end="3488:47"><name pos:start="3488:44" pos:end="3488:47">arg1</name></expr></argument>, <argument pos:start="3488:50" pos:end="3488:53"><expr pos:start="3488:50" pos:end="3488:53"><name pos:start="3488:50" pos:end="3488:53">dirp</name></expr></argument>, <argument pos:start="3488:56" pos:end="3488:60"><expr pos:start="3488:56" pos:end="3488:60"><name pos:start="3488:56" pos:end="3488:60">count</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3490:13" pos:end="3520:13"><if pos:start="3490:13" pos:end="3520:13">if <condition pos:start="3490:16" pos:end="3490:31">(<expr pos:start="3490:17" pos:end="3490:30"><operator pos:start="3490:17" pos:end="3490:17">!</operator><call pos:start="3490:18" pos:end="3490:30"><name pos:start="3490:18" pos:end="3490:25">is_error</name><argument_list pos:start="3490:26" pos:end="3490:30">(<argument pos:start="3490:27" pos:end="3490:29"><expr pos:start="3490:27" pos:end="3490:29"><name pos:start="3490:27" pos:end="3490:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3490:33" pos:end="3520:13">{<block_content pos:start="3492:17" pos:end="3518:17">

                <decl_stmt pos:start="3492:17" pos:end="3492:42"><decl pos:start="3492:17" pos:end="3492:41"><type pos:start="3492:17" pos:end="3492:39"><name pos:start="3492:17" pos:end="3492:37"><name pos:start="3492:17" pos:end="3492:22">struct</name> <name pos:start="3492:24" pos:end="3492:37">linux_dirent64</name></name> <modifier pos:start="3492:39" pos:end="3492:39">*</modifier></type><name pos:start="3492:40" pos:end="3492:41">de</name></decl>;</decl_stmt>

                <decl_stmt pos:start="3494:17" pos:end="3494:30"><decl pos:start="3494:17" pos:end="3494:29"><type pos:start="3494:17" pos:end="3494:19"><name pos:start="3494:17" pos:end="3494:19">int</name></type> <name pos:start="3494:21" pos:end="3494:23">len</name> <init pos:start="3494:25" pos:end="3494:29">= <expr pos:start="3494:27" pos:end="3494:29"><name pos:start="3494:27" pos:end="3494:29">ret</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="3496:17" pos:end="3496:27"><decl pos:start="3496:17" pos:end="3496:26"><type pos:start="3496:17" pos:end="3496:19"><name pos:start="3496:17" pos:end="3496:19">int</name></type> <name pos:start="3496:21" pos:end="3496:26">reclen</name></decl>;</decl_stmt>

                <expr_stmt pos:start="3498:17" pos:end="3498:26"><expr pos:start="3498:17" pos:end="3498:25"><name pos:start="3498:17" pos:end="3498:18">de</name> <operator pos:start="3498:20" pos:end="3498:20">=</operator> <name pos:start="3498:22" pos:end="3498:25">dirp</name></expr>;</expr_stmt>

                <while pos:start="3500:17" pos:end="3518:17">while <condition pos:start="3500:23" pos:end="3500:31">(<expr pos:start="3500:24" pos:end="3500:30"><name pos:start="3500:24" pos:end="3500:26">len</name> <operator pos:start="3500:28" pos:end="3500:28">&gt;</operator> <literal type="number" pos:start="3500:30" pos:end="3500:30">0</literal></expr>)</condition> <block pos:start="3500:33" pos:end="3518:17">{<block_content pos:start="3502:21" pos:end="3516:34">

                    <expr_stmt pos:start="3502:21" pos:end="3502:42"><expr pos:start="3502:21" pos:end="3502:41"><name pos:start="3502:21" pos:end="3502:26">reclen</name> <operator pos:start="3502:28" pos:end="3502:28">=</operator> <name pos:start="3502:30" pos:end="3502:41"><name pos:start="3502:30" pos:end="3502:31">de</name><operator pos:start="3502:32" pos:end="3502:33">-&gt;</operator><name pos:start="3502:34" pos:end="3502:41">d_reclen</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="3504:21" pos:end="3506:30"><if pos:start="3504:21" pos:end="3506:30">if <condition pos:start="3504:24" pos:end="3504:37">(<expr pos:start="3504:25" pos:end="3504:36"><name pos:start="3504:25" pos:end="3504:30">reclen</name> <operator pos:start="3504:32" pos:end="3504:32">&gt;</operator> <name pos:start="3504:34" pos:end="3504:36">len</name></expr>)</condition><block type="pseudo" pos:start="3506:25" pos:end="3506:30"><block_content pos:start="3506:25" pos:end="3506:30">

                        <break pos:start="3506:25" pos:end="3506:30">break;</break></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="3508:21" pos:end="3508:51"><expr pos:start="3508:21" pos:end="3508:50"><name pos:start="3508:21" pos:end="3508:32"><name pos:start="3508:21" pos:end="3508:22">de</name><operator pos:start="3508:23" pos:end="3508:24">-&gt;</operator><name pos:start="3508:25" pos:end="3508:32">d_reclen</name></name> <operator pos:start="3508:34" pos:end="3508:34">=</operator> <call pos:start="3508:36" pos:end="3508:50"><name pos:start="3508:36" pos:end="3508:42">tswap16</name><argument_list pos:start="3508:43" pos:end="3508:50">(<argument pos:start="3508:44" pos:end="3508:49"><expr pos:start="3508:44" pos:end="3508:49"><name pos:start="3508:44" pos:end="3508:49">reclen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3510:21" pos:end="3510:53"><expr pos:start="3510:21" pos:end="3510:52"><call pos:start="3510:21" pos:end="3510:52"><name pos:start="3510:21" pos:end="3510:28">tswap64s</name><argument_list pos:start="3510:29" pos:end="3510:52">(<argument pos:start="3510:30" pos:end="3510:51"><expr pos:start="3510:30" pos:end="3510:51"><operator pos:start="3510:30" pos:end="3510:30">(</operator><name pos:start="3510:31" pos:end="3510:38">uint64_t</name> <operator pos:start="3510:40" pos:end="3510:40">*</operator><operator pos:start="3510:41" pos:end="3510:41">)</operator><operator pos:start="3510:42" pos:end="3510:42">&amp;</operator><name pos:start="3510:43" pos:end="3510:51"><name pos:start="3510:43" pos:end="3510:44">de</name><operator pos:start="3510:45" pos:end="3510:46">-&gt;</operator><name pos:start="3510:47" pos:end="3510:51">d_ino</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3512:21" pos:end="3512:53"><expr pos:start="3512:21" pos:end="3512:52"><call pos:start="3512:21" pos:end="3512:52"><name pos:start="3512:21" pos:end="3512:28">tswap64s</name><argument_list pos:start="3512:29" pos:end="3512:52">(<argument pos:start="3512:30" pos:end="3512:51"><expr pos:start="3512:30" pos:end="3512:51"><operator pos:start="3512:30" pos:end="3512:30">(</operator><name pos:start="3512:31" pos:end="3512:38">uint64_t</name> <operator pos:start="3512:40" pos:end="3512:40">*</operator><operator pos:start="3512:41" pos:end="3512:41">)</operator><operator pos:start="3512:42" pos:end="3512:42">&amp;</operator><name pos:start="3512:43" pos:end="3512:51"><name pos:start="3512:43" pos:end="3512:44">de</name><operator pos:start="3512:45" pos:end="3512:46">-&gt;</operator><name pos:start="3512:47" pos:end="3512:51">d_off</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="3514:21" pos:end="3514:72"><expr pos:start="3514:21" pos:end="3514:71"><name pos:start="3514:21" pos:end="3514:22">de</name> <operator pos:start="3514:24" pos:end="3514:24">=</operator> <operator pos:start="3514:26" pos:end="3514:26">(</operator>struct <name pos:start="3514:34" pos:end="3514:47">linux_dirent64</name> <operator pos:start="3514:49" pos:end="3514:49">*</operator><operator pos:start="3514:50" pos:end="3514:50">)</operator><operator pos:start="3514:51" pos:end="3514:51">(</operator><operator pos:start="3514:52" pos:end="3514:52">(</operator><name pos:start="3514:53" pos:end="3514:56">char</name> <operator pos:start="3514:58" pos:end="3514:58">*</operator><operator pos:start="3514:59" pos:end="3514:59">)</operator><name pos:start="3514:60" pos:end="3514:61">de</name> <operator pos:start="3514:63" pos:end="3514:63">+</operator> <name pos:start="3514:65" pos:end="3514:70">reclen</name><operator pos:start="3514:71" pos:end="3514:71">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="3516:21" pos:end="3516:34"><expr pos:start="3516:21" pos:end="3516:33"><name pos:start="3516:21" pos:end="3516:23">len</name> <operator pos:start="3516:25" pos:end="3516:26">-=</operator> <name pos:start="3516:28" pos:end="3516:33">reclen</name></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="3522:13" pos:end="3522:41"><expr pos:start="3522:13" pos:end="3522:40"><call pos:start="3522:13" pos:end="3522:40"><name pos:start="3522:13" pos:end="3522:23">unlock_user</name><argument_list pos:start="3522:24" pos:end="3522:40">(<argument pos:start="3522:25" pos:end="3522:28"><expr pos:start="3522:25" pos:end="3522:28"><name pos:start="3522:25" pos:end="3522:28">dirp</name></expr></argument>, <argument pos:start="3522:31" pos:end="3522:34"><expr pos:start="3522:31" pos:end="3522:34"><name pos:start="3522:31" pos:end="3522:34">arg2</name></expr></argument>, <argument pos:start="3522:37" pos:end="3522:39"><expr pos:start="3522:37" pos:end="3522:39"><name pos:start="3522:37" pos:end="3522:39">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="3526:9" pos:end="3531:0">break;</break>

<cpp:endif pos:start="3528:1" pos:end="3528:6">#<cpp:directive pos:start="3528:2" pos:end="3528:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="3528:8" pos:end="3528:33">/* TARGET_NR_getdents64 */</comment>

<cpp:ifdef pos:start="3530:1" pos:end="3530:27">#<cpp:directive pos:start="3530:2" pos:end="3530:6">ifdef</cpp:directive> <name pos:start="3530:8" pos:end="3530:27">TARGET_NR__newselect</name></cpp:ifdef>

    <case pos:start="3532:5" pos:end="3532:30">case <expr pos:start="3532:10" pos:end="3532:29"><name pos:start="3532:10" pos:end="3532:29">TARGET_NR__newselect</name></expr>:</case>

        <expr_stmt pos:start="3534:9" pos:end="3534:54"><expr pos:start="3534:9" pos:end="3534:53"><name pos:start="3534:9" pos:end="3534:11">ret</name> <operator pos:start="3534:13" pos:end="3534:13">=</operator> <call pos:start="3534:15" pos:end="3534:53"><name pos:start="3534:15" pos:end="3534:23">do_select</name><argument_list pos:start="3534:24" pos:end="3534:53">(<argument pos:start="3534:25" pos:end="3534:28"><expr pos:start="3534:25" pos:end="3534:28"><name pos:start="3534:25" pos:end="3534:28">arg1</name></expr></argument>, <argument pos:start="3534:31" pos:end="3534:34"><expr pos:start="3534:31" pos:end="3534:34"><name pos:start="3534:31" pos:end="3534:34">arg2</name></expr></argument>, <argument pos:start="3534:37" pos:end="3534:40"><expr pos:start="3534:37" pos:end="3534:40"><name pos:start="3534:37" pos:end="3534:40">arg3</name></expr></argument>, <argument pos:start="3534:43" pos:end="3534:46"><expr pos:start="3534:43" pos:end="3534:46"><name pos:start="3534:43" pos:end="3534:46">arg4</name></expr></argument>, <argument pos:start="3534:49" pos:end="3534:52"><expr pos:start="3534:49" pos:end="3534:52"><name pos:start="3534:49" pos:end="3534:52">arg5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3536:9" pos:end="3541:0">break;</break>

<cpp:endif pos:start="3538:1" pos:end="3538:6">#<cpp:directive pos:start="3538:2" pos:end="3538:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3540:1" pos:end="3540:21">#<cpp:directive pos:start="3540:2" pos:end="3540:6">ifdef</cpp:directive> <name pos:start="3540:8" pos:end="3540:21">TARGET_NR_poll</name></cpp:ifdef>

    <case pos:start="3542:5" pos:end="3542:24">case <expr pos:start="3542:10" pos:end="3542:23"><name pos:start="3542:10" pos:end="3542:23">TARGET_NR_poll</name></expr>:</case>

        <block pos:start="3544:9" pos:end="3592:9">{<block_content pos:start="3546:13" pos:end="3590:47">

            <decl_stmt pos:start="3546:13" pos:end="3546:45"><decl pos:start="3546:13" pos:end="3546:44"><type pos:start="3546:13" pos:end="3546:34"><name pos:start="3546:13" pos:end="3546:32"><name pos:start="3546:13" pos:end="3546:18">struct</name> <name pos:start="3546:20" pos:end="3546:32">target_pollfd</name></name> <modifier pos:start="3546:34" pos:end="3546:34">*</modifier></type><name pos:start="3546:35" pos:end="3546:44">target_pfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3548:13" pos:end="3548:37"><decl pos:start="3548:13" pos:end="3548:36"><type pos:start="3548:13" pos:end="3548:24"><name pos:start="3548:13" pos:end="3548:20">unsigned</name> <name pos:start="3548:22" pos:end="3548:24">int</name></type> <name pos:start="3548:26" pos:end="3548:29">nfds</name> <init pos:start="3548:31" pos:end="3548:36">= <expr pos:start="3548:33" pos:end="3548:36"><name pos:start="3548:33" pos:end="3548:36">arg2</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="3550:13" pos:end="3550:31"><decl pos:start="3550:13" pos:end="3550:30"><type pos:start="3550:13" pos:end="3550:15"><name pos:start="3550:13" pos:end="3550:15">int</name></type> <name pos:start="3550:17" pos:end="3550:23">timeout</name> <init pos:start="3550:25" pos:end="3550:30">= <expr pos:start="3550:27" pos:end="3550:30"><name pos:start="3550:27" pos:end="3550:30">arg3</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="3552:13" pos:end="3552:31"><decl pos:start="3552:13" pos:end="3552:30"><type pos:start="3552:13" pos:end="3552:27"><name pos:start="3552:13" pos:end="3552:25"><name pos:start="3552:13" pos:end="3552:18">struct</name> <name pos:start="3552:20" pos:end="3552:25">pollfd</name></name> <modifier pos:start="3552:27" pos:end="3552:27">*</modifier></type><name pos:start="3552:28" pos:end="3552:30">pfd</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3554:13" pos:end="3554:27"><decl pos:start="3554:13" pos:end="3554:26"><type pos:start="3554:13" pos:end="3554:24"><name pos:start="3554:13" pos:end="3554:20">unsigned</name> <name pos:start="3554:22" pos:end="3554:24">int</name></type> <name pos:start="3554:26" pos:end="3554:26">i</name></decl>;</decl_stmt>



            <expr_stmt pos:start="3558:13" pos:end="3558:95"><expr pos:start="3558:13" pos:end="3558:94"><name pos:start="3558:13" pos:end="3558:22">target_pfd</name> <operator pos:start="3558:24" pos:end="3558:24">=</operator> <call pos:start="3558:26" pos:end="3558:94"><name pos:start="3558:26" pos:end="3558:34">lock_user</name><argument_list pos:start="3558:35" pos:end="3558:94">(<argument pos:start="3558:36" pos:end="3558:47"><expr pos:start="3558:36" pos:end="3558:47"><name pos:start="3558:36" pos:end="3558:47">VERIFY_WRITE</name></expr></argument>, <argument pos:start="3558:50" pos:end="3558:53"><expr pos:start="3558:50" pos:end="3558:53"><name pos:start="3558:50" pos:end="3558:53">arg1</name></expr></argument>, <argument pos:start="3558:56" pos:end="3558:90"><expr pos:start="3558:56" pos:end="3558:90"><sizeof pos:start="3558:56" pos:end="3558:83">sizeof<argument_list pos:start="3558:62" pos:end="3558:83">(<argument pos:start="3558:63" pos:end="3558:82"><expr pos:start="3558:63" pos:end="3558:82">struct <name pos:start="3558:70" pos:end="3558:82">target_pollfd</name></expr></argument>)</argument_list></sizeof> <operator pos:start="3558:85" pos:end="3558:85">*</operator> <name pos:start="3558:87" pos:end="3558:90">nfds</name></expr></argument>, <argument pos:start="3558:93" pos:end="3558:93"><expr pos:start="3558:93" pos:end="3558:93"><literal type="number" pos:start="3558:93" pos:end="3558:93">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3560:13" pos:end="3562:28"><if pos:start="3560:13" pos:end="3562:28">if <condition pos:start="3560:16" pos:end="3560:28">(<expr pos:start="3560:17" pos:end="3560:27"><operator pos:start="3560:17" pos:end="3560:17">!</operator><name pos:start="3560:18" pos:end="3560:27">target_pfd</name></expr>)</condition><block type="pseudo" pos:start="3562:17" pos:end="3562:28"><block_content pos:start="3562:17" pos:end="3562:28">

                <goto pos:start="3562:17" pos:end="3562:28">goto <name pos:start="3562:22" pos:end="3562:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="3564:13" pos:end="3564:55"><expr pos:start="3564:13" pos:end="3564:54"><name pos:start="3564:13" pos:end="3564:15">pfd</name> <operator pos:start="3564:17" pos:end="3564:17">=</operator> <call pos:start="3564:19" pos:end="3564:54"><name pos:start="3564:19" pos:end="3564:24">alloca</name><argument_list pos:start="3564:25" pos:end="3564:54">(<argument pos:start="3564:26" pos:end="3564:53"><expr pos:start="3564:26" pos:end="3564:53"><sizeof pos:start="3564:26" pos:end="3564:46">sizeof<argument_list pos:start="3564:32" pos:end="3564:46">(<argument pos:start="3564:33" pos:end="3564:45"><expr pos:start="3564:33" pos:end="3564:45">struct <name pos:start="3564:40" pos:end="3564:45">pollfd</name></expr></argument>)</argument_list></sizeof> <operator pos:start="3564:48" pos:end="3564:48">*</operator> <name pos:start="3564:50" pos:end="3564:53">nfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="3566:13" pos:end="3572:13">for<control pos:start="3566:16" pos:end="3566:37">(<init pos:start="3566:17" pos:end="3566:22"><expr pos:start="3566:17" pos:end="3566:21"><name pos:start="3566:17" pos:end="3566:17">i</name> <operator pos:start="3566:19" pos:end="3566:19">=</operator> <literal type="number" pos:start="3566:21" pos:end="3566:21">0</literal></expr>;</init> <condition pos:start="3566:24" pos:end="3566:32"><expr pos:start="3566:24" pos:end="3566:31"><name pos:start="3566:24" pos:end="3566:24">i</name> <operator pos:start="3566:26" pos:end="3566:26">&lt;</operator> <name pos:start="3566:28" pos:end="3566:31">nfds</name></expr>;</condition> <incr pos:start="3566:34" pos:end="3566:36"><expr pos:start="3566:34" pos:end="3566:36"><name pos:start="3566:34" pos:end="3566:34">i</name><operator pos:start="3566:35" pos:end="3566:36">++</operator></expr></incr>)</control> <block pos:start="3566:39" pos:end="3572:13">{<block_content pos:start="3568:17" pos:end="3570:62">

                <expr_stmt pos:start="3568:17" pos:end="3568:54"><expr pos:start="3568:17" pos:end="3568:53"><name pos:start="3568:17" pos:end="3568:22"><name pos:start="3568:17" pos:end="3568:19">pfd</name><index pos:start="3568:20" pos:end="3568:22">[<expr pos:start="3568:21" pos:end="3568:21"><name pos:start="3568:21" pos:end="3568:21">i</name></expr>]</index></name><operator pos:start="3568:23" pos:end="3568:23">.</operator><name pos:start="3568:24" pos:end="3568:25">fd</name> <operator pos:start="3568:27" pos:end="3568:27">=</operator> <call pos:start="3568:29" pos:end="3568:53"><name pos:start="3568:29" pos:end="3568:35">tswap32</name><argument_list pos:start="3568:36" pos:end="3568:53">(<argument pos:start="3568:37" pos:end="3568:52"><expr pos:start="3568:37" pos:end="3568:52"><name pos:start="3568:37" pos:end="3568:49"><name pos:start="3568:37" pos:end="3568:46">target_pfd</name><index pos:start="3568:47" pos:end="3568:49">[<expr pos:start="3568:48" pos:end="3568:48"><name pos:start="3568:48" pos:end="3568:48">i</name></expr>]</index></name><operator pos:start="3568:50" pos:end="3568:50">.</operator><name pos:start="3568:51" pos:end="3568:52">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3570:17" pos:end="3570:62"><expr pos:start="3570:17" pos:end="3570:61"><name pos:start="3570:17" pos:end="3570:22"><name pos:start="3570:17" pos:end="3570:19">pfd</name><index pos:start="3570:20" pos:end="3570:22">[<expr pos:start="3570:21" pos:end="3570:21"><name pos:start="3570:21" pos:end="3570:21">i</name></expr>]</index></name><operator pos:start="3570:23" pos:end="3570:23">.</operator><name pos:start="3570:24" pos:end="3570:29">events</name> <operator pos:start="3570:31" pos:end="3570:31">=</operator> <call pos:start="3570:33" pos:end="3570:61"><name pos:start="3570:33" pos:end="3570:39">tswap16</name><argument_list pos:start="3570:40" pos:end="3570:61">(<argument pos:start="3570:41" pos:end="3570:60"><expr pos:start="3570:41" pos:end="3570:60"><name pos:start="3570:41" pos:end="3570:53"><name pos:start="3570:41" pos:end="3570:50">target_pfd</name><index pos:start="3570:51" pos:end="3570:53">[<expr pos:start="3570:52" pos:end="3570:52"><name pos:start="3570:52" pos:end="3570:52">i</name></expr>]</index></name><operator pos:start="3570:54" pos:end="3570:54">.</operator><name pos:start="3570:55" pos:end="3570:60">events</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="3574:13" pos:end="3574:54"><expr pos:start="3574:13" pos:end="3574:53"><name pos:start="3574:13" pos:end="3574:15">ret</name> <operator pos:start="3574:17" pos:end="3574:17">=</operator> <call pos:start="3574:19" pos:end="3574:53"><name pos:start="3574:19" pos:end="3574:27">get_errno</name><argument_list pos:start="3574:28" pos:end="3574:53">(<argument pos:start="3574:29" pos:end="3574:52"><expr pos:start="3574:29" pos:end="3574:52"><call pos:start="3574:29" pos:end="3574:52"><name pos:start="3574:29" pos:end="3574:32">poll</name><argument_list pos:start="3574:33" pos:end="3574:52">(<argument pos:start="3574:34" pos:end="3574:36"><expr pos:start="3574:34" pos:end="3574:36"><name pos:start="3574:34" pos:end="3574:36">pfd</name></expr></argument>, <argument pos:start="3574:39" pos:end="3574:42"><expr pos:start="3574:39" pos:end="3574:42"><name pos:start="3574:39" pos:end="3574:42">nfds</name></expr></argument>, <argument pos:start="3574:45" pos:end="3574:51"><expr pos:start="3574:45" pos:end="3574:51"><name pos:start="3574:45" pos:end="3574:51">timeout</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3576:13" pos:end="3588:13"><if pos:start="3576:13" pos:end="3588:13">if <condition pos:start="3576:16" pos:end="3576:31">(<expr pos:start="3576:17" pos:end="3576:30"><operator pos:start="3576:17" pos:end="3576:17">!</operator><call pos:start="3576:18" pos:end="3576:30"><name pos:start="3576:18" pos:end="3576:25">is_error</name><argument_list pos:start="3576:26" pos:end="3576:30">(<argument pos:start="3576:27" pos:end="3576:29"><expr pos:start="3576:27" pos:end="3576:29"><name pos:start="3576:27" pos:end="3576:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3576:33" pos:end="3588:13">{<block_content pos:start="3578:17" pos:end="3586:56">

                <for pos:start="3578:17" pos:end="3582:17">for<control pos:start="3578:20" pos:end="3578:41">(<init pos:start="3578:21" pos:end="3578:26"><expr pos:start="3578:21" pos:end="3578:25"><name pos:start="3578:21" pos:end="3578:21">i</name> <operator pos:start="3578:23" pos:end="3578:23">=</operator> <literal type="number" pos:start="3578:25" pos:end="3578:25">0</literal></expr>;</init> <condition pos:start="3578:28" pos:end="3578:36"><expr pos:start="3578:28" pos:end="3578:35"><name pos:start="3578:28" pos:end="3578:28">i</name> <operator pos:start="3578:30" pos:end="3578:30">&lt;</operator> <name pos:start="3578:32" pos:end="3578:35">nfds</name></expr>;</condition> <incr pos:start="3578:38" pos:end="3578:40"><expr pos:start="3578:38" pos:end="3578:40"><name pos:start="3578:38" pos:end="3578:38">i</name><operator pos:start="3578:39" pos:end="3578:40">++</operator></expr></incr>)</control> <block pos:start="3578:43" pos:end="3582:17">{<block_content pos:start="3580:21" pos:end="3580:68">

                    <expr_stmt pos:start="3580:21" pos:end="3580:68"><expr pos:start="3580:21" pos:end="3580:67"><name pos:start="3580:21" pos:end="3580:33"><name pos:start="3580:21" pos:end="3580:30">target_pfd</name><index pos:start="3580:31" pos:end="3580:33">[<expr pos:start="3580:32" pos:end="3580:32"><name pos:start="3580:32" pos:end="3580:32">i</name></expr>]</index></name><operator pos:start="3580:34" pos:end="3580:34">.</operator><name pos:start="3580:35" pos:end="3580:41">revents</name> <operator pos:start="3580:43" pos:end="3580:43">=</operator> <call pos:start="3580:45" pos:end="3580:67"><name pos:start="3580:45" pos:end="3580:51">tswap16</name><argument_list pos:start="3580:52" pos:end="3580:67">(<argument pos:start="3580:53" pos:end="3580:66"><expr pos:start="3580:53" pos:end="3580:66"><name pos:start="3580:53" pos:end="3580:58"><name pos:start="3580:53" pos:end="3580:55">pfd</name><index pos:start="3580:56" pos:end="3580:58">[<expr pos:start="3580:57" pos:end="3580:57"><name pos:start="3580:57" pos:end="3580:57">i</name></expr>]</index></name><operator pos:start="3580:59" pos:end="3580:59">.</operator><name pos:start="3580:60" pos:end="3580:66">revents</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="3584:17" pos:end="3586:56"><expr pos:start="3584:17" pos:end="3586:55"><name pos:start="3584:17" pos:end="3584:19">ret</name> <operator pos:start="3584:21" pos:end="3584:22">+=</operator> <name pos:start="3584:24" pos:end="3584:27">nfds</name> <operator pos:start="3584:29" pos:end="3584:29">*</operator> <operator pos:start="3584:31" pos:end="3584:31">(</operator><sizeof pos:start="3584:32" pos:end="3584:59">sizeof<argument_list pos:start="3584:38" pos:end="3584:59">(<argument pos:start="3584:39" pos:end="3584:58"><expr pos:start="3584:39" pos:end="3584:58">struct <name pos:start="3584:46" pos:end="3584:58">target_pollfd</name></expr></argument>)</argument_list></sizeof>

                               <operator pos:start="3586:32" pos:end="3586:32">-</operator> <sizeof pos:start="3586:34" pos:end="3586:54">sizeof<argument_list pos:start="3586:40" pos:end="3586:54">(<argument pos:start="3586:41" pos:end="3586:53"><expr pos:start="3586:41" pos:end="3586:53">struct <name pos:start="3586:48" pos:end="3586:53">pollfd</name></expr></argument>)</argument_list></sizeof><operator pos:start="3586:55" pos:end="3586:55">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="3590:13" pos:end="3590:47"><expr pos:start="3590:13" pos:end="3590:46"><call pos:start="3590:13" pos:end="3590:46"><name pos:start="3590:13" pos:end="3590:23">unlock_user</name><argument_list pos:start="3590:24" pos:end="3590:46">(<argument pos:start="3590:25" pos:end="3590:34"><expr pos:start="3590:25" pos:end="3590:34"><name pos:start="3590:25" pos:end="3590:34">target_pfd</name></expr></argument>, <argument pos:start="3590:37" pos:end="3590:40"><expr pos:start="3590:37" pos:end="3590:40"><name pos:start="3590:37" pos:end="3590:40">arg1</name></expr></argument>, <argument pos:start="3590:43" pos:end="3590:45"><expr pos:start="3590:43" pos:end="3590:45"><name pos:start="3590:43" pos:end="3590:45">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="3594:9" pos:end="3597:0">break;</break>

<cpp:endif pos:start="3596:1" pos:end="3596:6">#<cpp:directive pos:start="3596:2" pos:end="3596:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3598:5" pos:end="3598:25">case <expr pos:start="3598:10" pos:end="3598:24"><name pos:start="3598:10" pos:end="3598:24">TARGET_NR_flock</name></expr>:</case>

        <comment type="block" pos:start="3600:9" pos:end="3602:28">/* NOTE: the flock constant seems to be the same for every

           Linux platform */</comment>

        <expr_stmt pos:start="3604:9" pos:end="3604:43"><expr pos:start="3604:9" pos:end="3604:42"><name pos:start="3604:9" pos:end="3604:11">ret</name> <operator pos:start="3604:13" pos:end="3604:13">=</operator> <call pos:start="3604:15" pos:end="3604:42"><name pos:start="3604:15" pos:end="3604:23">get_errno</name><argument_list pos:start="3604:24" pos:end="3604:42">(<argument pos:start="3604:25" pos:end="3604:41"><expr pos:start="3604:25" pos:end="3604:41"><call pos:start="3604:25" pos:end="3604:41"><name pos:start="3604:25" pos:end="3604:29">flock</name><argument_list pos:start="3604:30" pos:end="3604:41">(<argument pos:start="3604:31" pos:end="3604:34"><expr pos:start="3604:31" pos:end="3604:34"><name pos:start="3604:31" pos:end="3604:34">arg1</name></expr></argument>, <argument pos:start="3604:37" pos:end="3604:40"><expr pos:start="3604:37" pos:end="3604:40"><name pos:start="3604:37" pos:end="3604:40">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3606:9" pos:end="3606:14">break;</break>

    <case pos:start="3608:5" pos:end="3608:25">case <expr pos:start="3608:10" pos:end="3608:24"><name pos:start="3608:10" pos:end="3608:24">TARGET_NR_readv</name></expr>:</case>

        <block pos:start="3610:9" pos:end="3628:9">{<block_content pos:start="3612:13" pos:end="3626:46">

            <decl_stmt pos:start="3612:13" pos:end="3612:29"><decl pos:start="3612:13" pos:end="3612:28"><type pos:start="3612:13" pos:end="3612:15"><name pos:start="3612:13" pos:end="3612:15">int</name></type> <name pos:start="3612:17" pos:end="3612:21">count</name> <init pos:start="3612:23" pos:end="3612:28">= <expr pos:start="3612:25" pos:end="3612:28"><name pos:start="3612:25" pos:end="3612:28">arg3</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="3614:13" pos:end="3614:30"><decl pos:start="3614:13" pos:end="3614:29"><type pos:start="3614:13" pos:end="3614:26"><name pos:start="3614:13" pos:end="3614:24"><name pos:start="3614:13" pos:end="3614:18">struct</name> <name pos:start="3614:20" pos:end="3614:24">iovec</name></name> <modifier pos:start="3614:26" pos:end="3614:26">*</modifier></type><name pos:start="3614:27" pos:end="3614:29">vec</name></decl>;</decl_stmt>



            <expr_stmt pos:start="3618:13" pos:end="3618:55"><expr pos:start="3618:13" pos:end="3618:54"><name pos:start="3618:13" pos:end="3618:15">vec</name> <operator pos:start="3618:17" pos:end="3618:17">=</operator> <call pos:start="3618:19" pos:end="3618:54"><name pos:start="3618:19" pos:end="3618:24">alloca</name><argument_list pos:start="3618:25" pos:end="3618:54">(<argument pos:start="3618:26" pos:end="3618:53"><expr pos:start="3618:26" pos:end="3618:53"><name pos:start="3618:26" pos:end="3618:30">count</name> <operator pos:start="3618:32" pos:end="3618:32">*</operator> <sizeof pos:start="3618:34" pos:end="3618:53">sizeof<argument_list pos:start="3618:40" pos:end="3618:53">(<argument pos:start="3618:41" pos:end="3618:52"><expr pos:start="3618:41" pos:end="3618:52">struct <name pos:start="3618:48" pos:end="3618:52">iovec</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3620:13" pos:end="3622:28"><if pos:start="3620:13" pos:end="3622:28">if <condition pos:start="3620:16" pos:end="3620:66">(<expr pos:start="3620:17" pos:end="3620:65"><call pos:start="3620:17" pos:end="3620:61"><name pos:start="3620:17" pos:end="3620:26">lock_iovec</name><argument_list pos:start="3620:27" pos:end="3620:61">(<argument pos:start="3620:28" pos:end="3620:39"><expr pos:start="3620:28" pos:end="3620:39"><name pos:start="3620:28" pos:end="3620:39">VERIFY_WRITE</name></expr></argument>, <argument pos:start="3620:42" pos:end="3620:44"><expr pos:start="3620:42" pos:end="3620:44"><name pos:start="3620:42" pos:end="3620:44">vec</name></expr></argument>, <argument pos:start="3620:47" pos:end="3620:50"><expr pos:start="3620:47" pos:end="3620:50"><name pos:start="3620:47" pos:end="3620:50">arg2</name></expr></argument>, <argument pos:start="3620:53" pos:end="3620:57"><expr pos:start="3620:53" pos:end="3620:57"><name pos:start="3620:53" pos:end="3620:57">count</name></expr></argument>, <argument pos:start="3620:60" pos:end="3620:60"><expr pos:start="3620:60" pos:end="3620:60"><literal type="number" pos:start="3620:60" pos:end="3620:60">0</literal></expr></argument>)</argument_list></call> <operator pos:start="3620:63" pos:end="3620:63">&lt;</operator> <literal type="number" pos:start="3620:65" pos:end="3620:65">0</literal></expr>)</condition><block type="pseudo" pos:start="3622:17" pos:end="3622:28"><block_content pos:start="3622:17" pos:end="3622:28">

                <goto pos:start="3622:17" pos:end="3622:28">goto <name pos:start="3622:22" pos:end="3622:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="3624:13" pos:end="3624:53"><expr pos:start="3624:13" pos:end="3624:52"><name pos:start="3624:13" pos:end="3624:15">ret</name> <operator pos:start="3624:17" pos:end="3624:17">=</operator> <call pos:start="3624:19" pos:end="3624:52"><name pos:start="3624:19" pos:end="3624:27">get_errno</name><argument_list pos:start="3624:28" pos:end="3624:52">(<argument pos:start="3624:29" pos:end="3624:51"><expr pos:start="3624:29" pos:end="3624:51"><call pos:start="3624:29" pos:end="3624:51"><name pos:start="3624:29" pos:end="3624:33">readv</name><argument_list pos:start="3624:34" pos:end="3624:51">(<argument pos:start="3624:35" pos:end="3624:38"><expr pos:start="3624:35" pos:end="3624:38"><name pos:start="3624:35" pos:end="3624:38">arg1</name></expr></argument>, <argument pos:start="3624:41" pos:end="3624:43"><expr pos:start="3624:41" pos:end="3624:43"><name pos:start="3624:41" pos:end="3624:43">vec</name></expr></argument>, <argument pos:start="3624:46" pos:end="3624:50"><expr pos:start="3624:46" pos:end="3624:50"><name pos:start="3624:46" pos:end="3624:50">count</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3626:13" pos:end="3626:46"><expr pos:start="3626:13" pos:end="3626:45"><call pos:start="3626:13" pos:end="3626:45"><name pos:start="3626:13" pos:end="3626:24">unlock_iovec</name><argument_list pos:start="3626:25" pos:end="3626:45">(<argument pos:start="3626:26" pos:end="3626:28"><expr pos:start="3626:26" pos:end="3626:28"><name pos:start="3626:26" pos:end="3626:28">vec</name></expr></argument>, <argument pos:start="3626:31" pos:end="3626:34"><expr pos:start="3626:31" pos:end="3626:34"><name pos:start="3626:31" pos:end="3626:34">arg2</name></expr></argument>, <argument pos:start="3626:37" pos:end="3626:41"><expr pos:start="3626:37" pos:end="3626:41"><name pos:start="3626:37" pos:end="3626:41">count</name></expr></argument>, <argument pos:start="3626:44" pos:end="3626:44"><expr pos:start="3626:44" pos:end="3626:44"><literal type="number" pos:start="3626:44" pos:end="3626:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="3630:9" pos:end="3630:14">break;</break>

    <case pos:start="3632:5" pos:end="3632:26">case <expr pos:start="3632:10" pos:end="3632:25"><name pos:start="3632:10" pos:end="3632:25">TARGET_NR_writev</name></expr>:</case>

        <block pos:start="3634:9" pos:end="3652:9">{<block_content pos:start="3636:13" pos:end="3650:46">

            <decl_stmt pos:start="3636:13" pos:end="3636:29"><decl pos:start="3636:13" pos:end="3636:28"><type pos:start="3636:13" pos:end="3636:15"><name pos:start="3636:13" pos:end="3636:15">int</name></type> <name pos:start="3636:17" pos:end="3636:21">count</name> <init pos:start="3636:23" pos:end="3636:28">= <expr pos:start="3636:25" pos:end="3636:28"><name pos:start="3636:25" pos:end="3636:28">arg3</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="3638:13" pos:end="3638:30"><decl pos:start="3638:13" pos:end="3638:29"><type pos:start="3638:13" pos:end="3638:26"><name pos:start="3638:13" pos:end="3638:24"><name pos:start="3638:13" pos:end="3638:18">struct</name> <name pos:start="3638:20" pos:end="3638:24">iovec</name></name> <modifier pos:start="3638:26" pos:end="3638:26">*</modifier></type><name pos:start="3638:27" pos:end="3638:29">vec</name></decl>;</decl_stmt>



            <expr_stmt pos:start="3642:13" pos:end="3642:55"><expr pos:start="3642:13" pos:end="3642:54"><name pos:start="3642:13" pos:end="3642:15">vec</name> <operator pos:start="3642:17" pos:end="3642:17">=</operator> <call pos:start="3642:19" pos:end="3642:54"><name pos:start="3642:19" pos:end="3642:24">alloca</name><argument_list pos:start="3642:25" pos:end="3642:54">(<argument pos:start="3642:26" pos:end="3642:53"><expr pos:start="3642:26" pos:end="3642:53"><name pos:start="3642:26" pos:end="3642:30">count</name> <operator pos:start="3642:32" pos:end="3642:32">*</operator> <sizeof pos:start="3642:34" pos:end="3642:53">sizeof<argument_list pos:start="3642:40" pos:end="3642:53">(<argument pos:start="3642:41" pos:end="3642:52"><expr pos:start="3642:41" pos:end="3642:52">struct <name pos:start="3642:48" pos:end="3642:52">iovec</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3644:13" pos:end="3646:28"><if pos:start="3644:13" pos:end="3646:28">if <condition pos:start="3644:16" pos:end="3644:65">(<expr pos:start="3644:17" pos:end="3644:64"><call pos:start="3644:17" pos:end="3644:60"><name pos:start="3644:17" pos:end="3644:26">lock_iovec</name><argument_list pos:start="3644:27" pos:end="3644:60">(<argument pos:start="3644:28" pos:end="3644:38"><expr pos:start="3644:28" pos:end="3644:38"><name pos:start="3644:28" pos:end="3644:38">VERIFY_READ</name></expr></argument>, <argument pos:start="3644:41" pos:end="3644:43"><expr pos:start="3644:41" pos:end="3644:43"><name pos:start="3644:41" pos:end="3644:43">vec</name></expr></argument>, <argument pos:start="3644:46" pos:end="3644:49"><expr pos:start="3644:46" pos:end="3644:49"><name pos:start="3644:46" pos:end="3644:49">arg2</name></expr></argument>, <argument pos:start="3644:52" pos:end="3644:56"><expr pos:start="3644:52" pos:end="3644:56"><name pos:start="3644:52" pos:end="3644:56">count</name></expr></argument>, <argument pos:start="3644:59" pos:end="3644:59"><expr pos:start="3644:59" pos:end="3644:59"><literal type="number" pos:start="3644:59" pos:end="3644:59">1</literal></expr></argument>)</argument_list></call> <operator pos:start="3644:62" pos:end="3644:62">&lt;</operator> <literal type="number" pos:start="3644:64" pos:end="3644:64">0</literal></expr>)</condition><block type="pseudo" pos:start="3646:17" pos:end="3646:28"><block_content pos:start="3646:17" pos:end="3646:28">

                <goto pos:start="3646:17" pos:end="3646:28">goto <name pos:start="3646:22" pos:end="3646:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="3648:13" pos:end="3648:54"><expr pos:start="3648:13" pos:end="3648:53"><name pos:start="3648:13" pos:end="3648:15">ret</name> <operator pos:start="3648:17" pos:end="3648:17">=</operator> <call pos:start="3648:19" pos:end="3648:53"><name pos:start="3648:19" pos:end="3648:27">get_errno</name><argument_list pos:start="3648:28" pos:end="3648:53">(<argument pos:start="3648:29" pos:end="3648:52"><expr pos:start="3648:29" pos:end="3648:52"><call pos:start="3648:29" pos:end="3648:52"><name pos:start="3648:29" pos:end="3648:34">writev</name><argument_list pos:start="3648:35" pos:end="3648:52">(<argument pos:start="3648:36" pos:end="3648:39"><expr pos:start="3648:36" pos:end="3648:39"><name pos:start="3648:36" pos:end="3648:39">arg1</name></expr></argument>, <argument pos:start="3648:42" pos:end="3648:44"><expr pos:start="3648:42" pos:end="3648:44"><name pos:start="3648:42" pos:end="3648:44">vec</name></expr></argument>, <argument pos:start="3648:47" pos:end="3648:51"><expr pos:start="3648:47" pos:end="3648:51"><name pos:start="3648:47" pos:end="3648:51">count</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3650:13" pos:end="3650:46"><expr pos:start="3650:13" pos:end="3650:45"><call pos:start="3650:13" pos:end="3650:45"><name pos:start="3650:13" pos:end="3650:24">unlock_iovec</name><argument_list pos:start="3650:25" pos:end="3650:45">(<argument pos:start="3650:26" pos:end="3650:28"><expr pos:start="3650:26" pos:end="3650:28"><name pos:start="3650:26" pos:end="3650:28">vec</name></expr></argument>, <argument pos:start="3650:31" pos:end="3650:34"><expr pos:start="3650:31" pos:end="3650:34"><name pos:start="3650:31" pos:end="3650:34">arg2</name></expr></argument>, <argument pos:start="3650:37" pos:end="3650:41"><expr pos:start="3650:37" pos:end="3650:41"><name pos:start="3650:37" pos:end="3650:41">count</name></expr></argument>, <argument pos:start="3650:44" pos:end="3650:44"><expr pos:start="3650:44" pos:end="3650:44"><literal type="number" pos:start="3650:44" pos:end="3650:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="3654:9" pos:end="3654:14">break;</break>

    <case pos:start="3656:5" pos:end="3656:26">case <expr pos:start="3656:10" pos:end="3656:25"><name pos:start="3656:10" pos:end="3656:25">TARGET_NR_getsid</name></expr>:</case>

        <expr_stmt pos:start="3658:9" pos:end="3658:38"><expr pos:start="3658:9" pos:end="3658:37"><name pos:start="3658:9" pos:end="3658:11">ret</name> <operator pos:start="3658:13" pos:end="3658:13">=</operator> <call pos:start="3658:15" pos:end="3658:37"><name pos:start="3658:15" pos:end="3658:23">get_errno</name><argument_list pos:start="3658:24" pos:end="3658:37">(<argument pos:start="3658:25" pos:end="3658:36"><expr pos:start="3658:25" pos:end="3658:36"><call pos:start="3658:25" pos:end="3658:36"><name pos:start="3658:25" pos:end="3658:30">getsid</name><argument_list pos:start="3658:31" pos:end="3658:36">(<argument pos:start="3658:32" pos:end="3658:35"><expr pos:start="3658:32" pos:end="3658:35"><name pos:start="3658:32" pos:end="3658:35">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3660:9" pos:end="3663:0">break;</break>

<cpp:if pos:start="3662:1" pos:end="3662:32">#<cpp:directive pos:start="3662:2" pos:end="3662:3">if</cpp:directive> <expr pos:start="3662:5" pos:end="3662:32"><call pos:start="3662:5" pos:end="3662:32"><name pos:start="3662:5" pos:end="3662:11">defined</name><argument_list pos:start="3662:12" pos:end="3662:32">(<argument pos:start="3662:13" pos:end="3662:31"><expr pos:start="3662:13" pos:end="3662:31"><name pos:start="3662:13" pos:end="3662:31">TARGET_NR_fdatasync</name></expr></argument>)</argument_list></call></expr></cpp:if> <comment type="block" pos:start="3662:34" pos:end="3662:68">/* Not on alpha (osf_datasync ?) */</comment>

    <case pos:start="3664:5" pos:end="3664:29">case <expr pos:start="3664:10" pos:end="3664:28"><name pos:start="3664:10" pos:end="3664:28">TARGET_NR_fdatasync</name></expr>:</case>

        <expr_stmt pos:start="3666:9" pos:end="3666:41"><expr pos:start="3666:9" pos:end="3666:40"><name pos:start="3666:9" pos:end="3666:11">ret</name> <operator pos:start="3666:13" pos:end="3666:13">=</operator> <call pos:start="3666:15" pos:end="3666:40"><name pos:start="3666:15" pos:end="3666:23">get_errno</name><argument_list pos:start="3666:24" pos:end="3666:40">(<argument pos:start="3666:25" pos:end="3666:39"><expr pos:start="3666:25" pos:end="3666:39"><call pos:start="3666:25" pos:end="3666:39"><name pos:start="3666:25" pos:end="3666:33">fdatasync</name><argument_list pos:start="3666:34" pos:end="3666:39">(<argument pos:start="3666:35" pos:end="3666:38"><expr pos:start="3666:35" pos:end="3666:38"><name pos:start="3666:35" pos:end="3666:38">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3668:9" pos:end="3671:0">break;</break>

<cpp:endif pos:start="3670:1" pos:end="3670:6">#<cpp:directive pos:start="3670:2" pos:end="3670:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3672:5" pos:end="3672:27">case <expr pos:start="3672:10" pos:end="3672:26"><name pos:start="3672:10" pos:end="3672:26">TARGET_NR__sysctl</name></expr>:</case>

        <comment type="block" pos:start="3674:9" pos:end="3676:27">/* We don't implement this, but ENOTDIR is always a safe

           return value. */</comment>

        <expr_stmt pos:start="3678:9" pos:end="3678:30"><expr pos:start="3678:9" pos:end="3678:29"><name pos:start="3678:9" pos:end="3678:11">ret</name> <operator pos:start="3678:13" pos:end="3678:13">=</operator> <operator pos:start="3678:15" pos:end="3678:15">-</operator><name pos:start="3678:16" pos:end="3678:29">TARGET_ENOTDIR</name></expr>;</expr_stmt>

        <break pos:start="3680:9" pos:end="3680:14">break;</break>

    <case pos:start="3682:5" pos:end="3682:34">case <expr pos:start="3682:10" pos:end="3682:33"><name pos:start="3682:10" pos:end="3682:33">TARGET_NR_sched_setparam</name></expr>:</case>

        <block pos:start="3684:9" pos:end="3702:9">{<block_content pos:start="3686:13" pos:end="3700:57">

            <decl_stmt pos:start="3686:13" pos:end="3686:44"><decl pos:start="3686:13" pos:end="3686:43"><type pos:start="3686:13" pos:end="3686:32"><name pos:start="3686:13" pos:end="3686:30"><name pos:start="3686:13" pos:end="3686:18">struct</name> <name pos:start="3686:20" pos:end="3686:30">sched_param</name></name> <modifier pos:start="3686:32" pos:end="3686:32">*</modifier></type><name pos:start="3686:33" pos:end="3686:43">target_schp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3688:13" pos:end="3688:36"><decl pos:start="3688:13" pos:end="3688:35"><type pos:start="3688:13" pos:end="3688:30"><name pos:start="3688:13" pos:end="3688:30"><name pos:start="3688:13" pos:end="3688:18">struct</name> <name pos:start="3688:20" pos:end="3688:30">sched_param</name></name></type> <name pos:start="3688:32" pos:end="3688:35">schp</name></decl>;</decl_stmt>



            <if_stmt pos:start="3692:13" pos:end="3694:28"><if pos:start="3692:13" pos:end="3694:28">if <condition pos:start="3692:16" pos:end="3692:69">(<expr pos:start="3692:17" pos:end="3692:68"><operator pos:start="3692:17" pos:end="3692:17">!</operator><call pos:start="3692:18" pos:end="3692:68"><name pos:start="3692:18" pos:end="3692:33">lock_user_struct</name><argument_list pos:start="3692:34" pos:end="3692:68">(<argument pos:start="3692:35" pos:end="3692:45"><expr pos:start="3692:35" pos:end="3692:45"><name pos:start="3692:35" pos:end="3692:45">VERIFY_READ</name></expr></argument>, <argument pos:start="3692:48" pos:end="3692:58"><expr pos:start="3692:48" pos:end="3692:58"><name pos:start="3692:48" pos:end="3692:58">target_schp</name></expr></argument>, <argument pos:start="3692:61" pos:end="3692:64"><expr pos:start="3692:61" pos:end="3692:64"><name pos:start="3692:61" pos:end="3692:64">arg2</name></expr></argument>, <argument pos:start="3692:67" pos:end="3692:67"><expr pos:start="3692:67" pos:end="3692:67"><literal type="number" pos:start="3692:67" pos:end="3692:67">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3694:17" pos:end="3694:28"><block_content pos:start="3694:17" pos:end="3694:28">

                <goto pos:start="3694:17" pos:end="3694:28">goto <name pos:start="3694:22" pos:end="3694:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="3696:13" pos:end="3696:71"><expr pos:start="3696:13" pos:end="3696:70"><name pos:start="3696:13" pos:end="3696:31"><name pos:start="3696:13" pos:end="3696:16">schp</name><operator pos:start="3696:17" pos:end="3696:17">.</operator><name pos:start="3696:18" pos:end="3696:31">sched_priority</name></name> <operator pos:start="3696:33" pos:end="3696:33">=</operator> <call pos:start="3696:35" pos:end="3696:70"><name pos:start="3696:35" pos:end="3696:41">tswap32</name><argument_list pos:start="3696:42" pos:end="3696:70">(<argument pos:start="3696:43" pos:end="3696:69"><expr pos:start="3696:43" pos:end="3696:69"><name pos:start="3696:43" pos:end="3696:69"><name pos:start="3696:43" pos:end="3696:53">target_schp</name><operator pos:start="3696:54" pos:end="3696:55">-&gt;</operator><name pos:start="3696:56" pos:end="3696:69">sched_priority</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3698:13" pos:end="3698:53"><expr pos:start="3698:13" pos:end="3698:52"><call pos:start="3698:13" pos:end="3698:52"><name pos:start="3698:13" pos:end="3698:30">unlock_user_struct</name><argument_list pos:start="3698:31" pos:end="3698:52">(<argument pos:start="3698:32" pos:end="3698:42"><expr pos:start="3698:32" pos:end="3698:42"><name pos:start="3698:32" pos:end="3698:42">target_schp</name></expr></argument>, <argument pos:start="3698:45" pos:end="3698:48"><expr pos:start="3698:45" pos:end="3698:48"><name pos:start="3698:45" pos:end="3698:48">arg2</name></expr></argument>, <argument pos:start="3698:51" pos:end="3698:51"><expr pos:start="3698:51" pos:end="3698:51"><literal type="number" pos:start="3698:51" pos:end="3698:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3700:13" pos:end="3700:57"><expr pos:start="3700:13" pos:end="3700:56"><name pos:start="3700:13" pos:end="3700:15">ret</name> <operator pos:start="3700:17" pos:end="3700:17">=</operator> <call pos:start="3700:19" pos:end="3700:56"><name pos:start="3700:19" pos:end="3700:27">get_errno</name><argument_list pos:start="3700:28" pos:end="3700:56">(<argument pos:start="3700:29" pos:end="3700:55"><expr pos:start="3700:29" pos:end="3700:55"><call pos:start="3700:29" pos:end="3700:55"><name pos:start="3700:29" pos:end="3700:42">sched_setparam</name><argument_list pos:start="3700:43" pos:end="3700:55">(<argument pos:start="3700:44" pos:end="3700:47"><expr pos:start="3700:44" pos:end="3700:47"><name pos:start="3700:44" pos:end="3700:47">arg1</name></expr></argument>, <argument pos:start="3700:50" pos:end="3700:54"><expr pos:start="3700:50" pos:end="3700:54"><operator pos:start="3700:50" pos:end="3700:50">&amp;</operator><name pos:start="3700:51" pos:end="3700:54">schp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="3704:9" pos:end="3704:14">break;</break>

    <case pos:start="3706:5" pos:end="3706:34">case <expr pos:start="3706:10" pos:end="3706:33"><name pos:start="3706:10" pos:end="3706:33">TARGET_NR_sched_getparam</name></expr>:</case>

        <block pos:start="3708:9" pos:end="3728:9">{<block_content pos:start="3710:13" pos:end="3726:13">

            <decl_stmt pos:start="3710:13" pos:end="3710:44"><decl pos:start="3710:13" pos:end="3710:43"><type pos:start="3710:13" pos:end="3710:32"><name pos:start="3710:13" pos:end="3710:30"><name pos:start="3710:13" pos:end="3710:18">struct</name> <name pos:start="3710:20" pos:end="3710:30">sched_param</name></name> <modifier pos:start="3710:32" pos:end="3710:32">*</modifier></type><name pos:start="3710:33" pos:end="3710:43">target_schp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3712:13" pos:end="3712:36"><decl pos:start="3712:13" pos:end="3712:35"><type pos:start="3712:13" pos:end="3712:30"><name pos:start="3712:13" pos:end="3712:30"><name pos:start="3712:13" pos:end="3712:18">struct</name> <name pos:start="3712:20" pos:end="3712:30">sched_param</name></name></type> <name pos:start="3712:32" pos:end="3712:35">schp</name></decl>;</decl_stmt>

            <expr_stmt pos:start="3714:13" pos:end="3714:57"><expr pos:start="3714:13" pos:end="3714:56"><name pos:start="3714:13" pos:end="3714:15">ret</name> <operator pos:start="3714:17" pos:end="3714:17">=</operator> <call pos:start="3714:19" pos:end="3714:56"><name pos:start="3714:19" pos:end="3714:27">get_errno</name><argument_list pos:start="3714:28" pos:end="3714:56">(<argument pos:start="3714:29" pos:end="3714:55"><expr pos:start="3714:29" pos:end="3714:55"><call pos:start="3714:29" pos:end="3714:55"><name pos:start="3714:29" pos:end="3714:42">sched_getparam</name><argument_list pos:start="3714:43" pos:end="3714:55">(<argument pos:start="3714:44" pos:end="3714:47"><expr pos:start="3714:44" pos:end="3714:47"><name pos:start="3714:44" pos:end="3714:47">arg1</name></expr></argument>, <argument pos:start="3714:50" pos:end="3714:54"><expr pos:start="3714:50" pos:end="3714:54"><operator pos:start="3714:50" pos:end="3714:50">&amp;</operator><name pos:start="3714:51" pos:end="3714:54">schp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3716:13" pos:end="3726:13"><if pos:start="3716:13" pos:end="3726:13">if <condition pos:start="3716:16" pos:end="3716:31">(<expr pos:start="3716:17" pos:end="3716:30"><operator pos:start="3716:17" pos:end="3716:17">!</operator><call pos:start="3716:18" pos:end="3716:30"><name pos:start="3716:18" pos:end="3716:25">is_error</name><argument_list pos:start="3716:26" pos:end="3716:30">(<argument pos:start="3716:27" pos:end="3716:29"><expr pos:start="3716:27" pos:end="3716:29"><name pos:start="3716:27" pos:end="3716:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3716:33" pos:end="3726:13">{<block_content pos:start="3718:17" pos:end="3724:57">

                <if_stmt pos:start="3718:17" pos:end="3720:32"><if pos:start="3718:17" pos:end="3720:32">if <condition pos:start="3718:20" pos:end="3718:74">(<expr pos:start="3718:21" pos:end="3718:73"><operator pos:start="3718:21" pos:end="3718:21">!</operator><call pos:start="3718:22" pos:end="3718:73"><name pos:start="3718:22" pos:end="3718:37">lock_user_struct</name><argument_list pos:start="3718:38" pos:end="3718:73">(<argument pos:start="3718:39" pos:end="3718:50"><expr pos:start="3718:39" pos:end="3718:50"><name pos:start="3718:39" pos:end="3718:50">VERIFY_WRITE</name></expr></argument>, <argument pos:start="3718:53" pos:end="3718:63"><expr pos:start="3718:53" pos:end="3718:63"><name pos:start="3718:53" pos:end="3718:63">target_schp</name></expr></argument>, <argument pos:start="3718:66" pos:end="3718:69"><expr pos:start="3718:66" pos:end="3718:69"><name pos:start="3718:66" pos:end="3718:69">arg2</name></expr></argument>, <argument pos:start="3718:72" pos:end="3718:72"><expr pos:start="3718:72" pos:end="3718:72"><literal type="number" pos:start="3718:72" pos:end="3718:72">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3720:21" pos:end="3720:32"><block_content pos:start="3720:21" pos:end="3720:32">

                    <goto pos:start="3720:21" pos:end="3720:32">goto <name pos:start="3720:26" pos:end="3720:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="3722:17" pos:end="3722:75"><expr pos:start="3722:17" pos:end="3722:74"><name pos:start="3722:17" pos:end="3722:43"><name pos:start="3722:17" pos:end="3722:27">target_schp</name><operator pos:start="3722:28" pos:end="3722:29">-&gt;</operator><name pos:start="3722:30" pos:end="3722:43">sched_priority</name></name> <operator pos:start="3722:45" pos:end="3722:45">=</operator> <call pos:start="3722:47" pos:end="3722:74"><name pos:start="3722:47" pos:end="3722:53">tswap32</name><argument_list pos:start="3722:54" pos:end="3722:74">(<argument pos:start="3722:55" pos:end="3722:73"><expr pos:start="3722:55" pos:end="3722:73"><name pos:start="3722:55" pos:end="3722:73"><name pos:start="3722:55" pos:end="3722:58">schp</name><operator pos:start="3722:59" pos:end="3722:59">.</operator><name pos:start="3722:60" pos:end="3722:73">sched_priority</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3724:17" pos:end="3724:57"><expr pos:start="3724:17" pos:end="3724:56"><call pos:start="3724:17" pos:end="3724:56"><name pos:start="3724:17" pos:end="3724:34">unlock_user_struct</name><argument_list pos:start="3724:35" pos:end="3724:56">(<argument pos:start="3724:36" pos:end="3724:46"><expr pos:start="3724:36" pos:end="3724:46"><name pos:start="3724:36" pos:end="3724:46">target_schp</name></expr></argument>, <argument pos:start="3724:49" pos:end="3724:52"><expr pos:start="3724:49" pos:end="3724:52"><name pos:start="3724:49" pos:end="3724:52">arg2</name></expr></argument>, <argument pos:start="3724:55" pos:end="3724:55"><expr pos:start="3724:55" pos:end="3724:55"><literal type="number" pos:start="3724:55" pos:end="3724:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="3730:9" pos:end="3730:14">break;</break>

    <case pos:start="3732:5" pos:end="3732:38">case <expr pos:start="3732:10" pos:end="3732:37"><name pos:start="3732:10" pos:end="3732:37">TARGET_NR_sched_setscheduler</name></expr>:</case>

        <block pos:start="3734:9" pos:end="3750:9">{<block_content pos:start="3736:13" pos:end="3748:67">

            <decl_stmt pos:start="3736:13" pos:end="3736:44"><decl pos:start="3736:13" pos:end="3736:43"><type pos:start="3736:13" pos:end="3736:32"><name pos:start="3736:13" pos:end="3736:30"><name pos:start="3736:13" pos:end="3736:18">struct</name> <name pos:start="3736:20" pos:end="3736:30">sched_param</name></name> <modifier pos:start="3736:32" pos:end="3736:32">*</modifier></type><name pos:start="3736:33" pos:end="3736:43">target_schp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="3738:13" pos:end="3738:36"><decl pos:start="3738:13" pos:end="3738:35"><type pos:start="3738:13" pos:end="3738:30"><name pos:start="3738:13" pos:end="3738:30"><name pos:start="3738:13" pos:end="3738:18">struct</name> <name pos:start="3738:20" pos:end="3738:30">sched_param</name></name></type> <name pos:start="3738:32" pos:end="3738:35">schp</name></decl>;</decl_stmt>

            <if_stmt pos:start="3740:13" pos:end="3742:28"><if pos:start="3740:13" pos:end="3742:28">if <condition pos:start="3740:16" pos:end="3740:69">(<expr pos:start="3740:17" pos:end="3740:68"><operator pos:start="3740:17" pos:end="3740:17">!</operator><call pos:start="3740:18" pos:end="3740:68"><name pos:start="3740:18" pos:end="3740:33">lock_user_struct</name><argument_list pos:start="3740:34" pos:end="3740:68">(<argument pos:start="3740:35" pos:end="3740:45"><expr pos:start="3740:35" pos:end="3740:45"><name pos:start="3740:35" pos:end="3740:45">VERIFY_READ</name></expr></argument>, <argument pos:start="3740:48" pos:end="3740:58"><expr pos:start="3740:48" pos:end="3740:58"><name pos:start="3740:48" pos:end="3740:58">target_schp</name></expr></argument>, <argument pos:start="3740:61" pos:end="3740:64"><expr pos:start="3740:61" pos:end="3740:64"><name pos:start="3740:61" pos:end="3740:64">arg3</name></expr></argument>, <argument pos:start="3740:67" pos:end="3740:67"><expr pos:start="3740:67" pos:end="3740:67"><literal type="number" pos:start="3740:67" pos:end="3740:67">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3742:17" pos:end="3742:28"><block_content pos:start="3742:17" pos:end="3742:28">

                <goto pos:start="3742:17" pos:end="3742:28">goto <name pos:start="3742:22" pos:end="3742:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="3744:13" pos:end="3744:71"><expr pos:start="3744:13" pos:end="3744:70"><name pos:start="3744:13" pos:end="3744:31"><name pos:start="3744:13" pos:end="3744:16">schp</name><operator pos:start="3744:17" pos:end="3744:17">.</operator><name pos:start="3744:18" pos:end="3744:31">sched_priority</name></name> <operator pos:start="3744:33" pos:end="3744:33">=</operator> <call pos:start="3744:35" pos:end="3744:70"><name pos:start="3744:35" pos:end="3744:41">tswap32</name><argument_list pos:start="3744:42" pos:end="3744:70">(<argument pos:start="3744:43" pos:end="3744:69"><expr pos:start="3744:43" pos:end="3744:69"><name pos:start="3744:43" pos:end="3744:69"><name pos:start="3744:43" pos:end="3744:53">target_schp</name><operator pos:start="3744:54" pos:end="3744:55">-&gt;</operator><name pos:start="3744:56" pos:end="3744:69">sched_priority</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3746:13" pos:end="3746:53"><expr pos:start="3746:13" pos:end="3746:52"><call pos:start="3746:13" pos:end="3746:52"><name pos:start="3746:13" pos:end="3746:30">unlock_user_struct</name><argument_list pos:start="3746:31" pos:end="3746:52">(<argument pos:start="3746:32" pos:end="3746:42"><expr pos:start="3746:32" pos:end="3746:42"><name pos:start="3746:32" pos:end="3746:42">target_schp</name></expr></argument>, <argument pos:start="3746:45" pos:end="3746:48"><expr pos:start="3746:45" pos:end="3746:48"><name pos:start="3746:45" pos:end="3746:48">arg3</name></expr></argument>, <argument pos:start="3746:51" pos:end="3746:51"><expr pos:start="3746:51" pos:end="3746:51"><literal type="number" pos:start="3746:51" pos:end="3746:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3748:13" pos:end="3748:67"><expr pos:start="3748:13" pos:end="3748:66"><name pos:start="3748:13" pos:end="3748:15">ret</name> <operator pos:start="3748:17" pos:end="3748:17">=</operator> <call pos:start="3748:19" pos:end="3748:66"><name pos:start="3748:19" pos:end="3748:27">get_errno</name><argument_list pos:start="3748:28" pos:end="3748:66">(<argument pos:start="3748:29" pos:end="3748:65"><expr pos:start="3748:29" pos:end="3748:65"><call pos:start="3748:29" pos:end="3748:65"><name pos:start="3748:29" pos:end="3748:46">sched_setscheduler</name><argument_list pos:start="3748:47" pos:end="3748:65">(<argument pos:start="3748:48" pos:end="3748:51"><expr pos:start="3748:48" pos:end="3748:51"><name pos:start="3748:48" pos:end="3748:51">arg1</name></expr></argument>, <argument pos:start="3748:54" pos:end="3748:57"><expr pos:start="3748:54" pos:end="3748:57"><name pos:start="3748:54" pos:end="3748:57">arg2</name></expr></argument>, <argument pos:start="3748:60" pos:end="3748:64"><expr pos:start="3748:60" pos:end="3748:64"><operator pos:start="3748:60" pos:end="3748:60">&amp;</operator><name pos:start="3748:61" pos:end="3748:64">schp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="3752:9" pos:end="3752:14">break;</break>

    <case pos:start="3754:5" pos:end="3754:38">case <expr pos:start="3754:10" pos:end="3754:37"><name pos:start="3754:10" pos:end="3754:37">TARGET_NR_sched_getscheduler</name></expr>:</case>

        <expr_stmt pos:start="3756:9" pos:end="3756:50"><expr pos:start="3756:9" pos:end="3756:49"><name pos:start="3756:9" pos:end="3756:11">ret</name> <operator pos:start="3756:13" pos:end="3756:13">=</operator> <call pos:start="3756:15" pos:end="3756:49"><name pos:start="3756:15" pos:end="3756:23">get_errno</name><argument_list pos:start="3756:24" pos:end="3756:49">(<argument pos:start="3756:25" pos:end="3756:48"><expr pos:start="3756:25" pos:end="3756:48"><call pos:start="3756:25" pos:end="3756:48"><name pos:start="3756:25" pos:end="3756:42">sched_getscheduler</name><argument_list pos:start="3756:43" pos:end="3756:48">(<argument pos:start="3756:44" pos:end="3756:47"><expr pos:start="3756:44" pos:end="3756:47"><name pos:start="3756:44" pos:end="3756:47">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3758:9" pos:end="3758:14">break;</break>

    <case pos:start="3760:5" pos:end="3760:31">case <expr pos:start="3760:10" pos:end="3760:30"><name pos:start="3760:10" pos:end="3760:30">TARGET_NR_sched_yield</name></expr>:</case>

        <expr_stmt pos:start="3762:9" pos:end="3762:39"><expr pos:start="3762:9" pos:end="3762:38"><name pos:start="3762:9" pos:end="3762:11">ret</name> <operator pos:start="3762:13" pos:end="3762:13">=</operator> <call pos:start="3762:15" pos:end="3762:38"><name pos:start="3762:15" pos:end="3762:23">get_errno</name><argument_list pos:start="3762:24" pos:end="3762:38">(<argument pos:start="3762:25" pos:end="3762:37"><expr pos:start="3762:25" pos:end="3762:37"><call pos:start="3762:25" pos:end="3762:37"><name pos:start="3762:25" pos:end="3762:35">sched_yield</name><argument_list pos:start="3762:36" pos:end="3762:37">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3764:9" pos:end="3764:14">break;</break>

    <case pos:start="3766:5" pos:end="3766:42">case <expr pos:start="3766:10" pos:end="3766:41"><name pos:start="3766:10" pos:end="3766:41">TARGET_NR_sched_get_priority_max</name></expr>:</case>

        <expr_stmt pos:start="3768:9" pos:end="3768:54"><expr pos:start="3768:9" pos:end="3768:53"><name pos:start="3768:9" pos:end="3768:11">ret</name> <operator pos:start="3768:13" pos:end="3768:13">=</operator> <call pos:start="3768:15" pos:end="3768:53"><name pos:start="3768:15" pos:end="3768:23">get_errno</name><argument_list pos:start="3768:24" pos:end="3768:53">(<argument pos:start="3768:25" pos:end="3768:52"><expr pos:start="3768:25" pos:end="3768:52"><call pos:start="3768:25" pos:end="3768:52"><name pos:start="3768:25" pos:end="3768:46">sched_get_priority_max</name><argument_list pos:start="3768:47" pos:end="3768:52">(<argument pos:start="3768:48" pos:end="3768:51"><expr pos:start="3768:48" pos:end="3768:51"><name pos:start="3768:48" pos:end="3768:51">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3770:9" pos:end="3770:14">break;</break>

    <case pos:start="3772:5" pos:end="3772:42">case <expr pos:start="3772:10" pos:end="3772:41"><name pos:start="3772:10" pos:end="3772:41">TARGET_NR_sched_get_priority_min</name></expr>:</case>

        <expr_stmt pos:start="3774:9" pos:end="3774:54"><expr pos:start="3774:9" pos:end="3774:53"><name pos:start="3774:9" pos:end="3774:11">ret</name> <operator pos:start="3774:13" pos:end="3774:13">=</operator> <call pos:start="3774:15" pos:end="3774:53"><name pos:start="3774:15" pos:end="3774:23">get_errno</name><argument_list pos:start="3774:24" pos:end="3774:53">(<argument pos:start="3774:25" pos:end="3774:52"><expr pos:start="3774:25" pos:end="3774:52"><call pos:start="3774:25" pos:end="3774:52"><name pos:start="3774:25" pos:end="3774:46">sched_get_priority_min</name><argument_list pos:start="3774:47" pos:end="3774:52">(<argument pos:start="3774:48" pos:end="3774:51"><expr pos:start="3774:48" pos:end="3774:51"><name pos:start="3774:48" pos:end="3774:51">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3776:9" pos:end="3776:14">break;</break>

    <case pos:start="3778:5" pos:end="3778:41">case <expr pos:start="3778:10" pos:end="3778:40"><name pos:start="3778:10" pos:end="3778:40">TARGET_NR_sched_rr_get_interval</name></expr>:</case>

        <block pos:start="3780:9" pos:end="3792:9">{<block_content pos:start="3782:13" pos:end="3790:13">

            <decl_stmt pos:start="3782:13" pos:end="3782:31"><decl pos:start="3782:13" pos:end="3782:30"><type pos:start="3782:13" pos:end="3782:27"><name pos:start="3782:13" pos:end="3782:27"><name pos:start="3782:13" pos:end="3782:18">struct</name> <name pos:start="3782:20" pos:end="3782:27">timespec</name></name></type> <name pos:start="3782:29" pos:end="3782:30">ts</name></decl>;</decl_stmt>

            <expr_stmt pos:start="3784:13" pos:end="3784:62"><expr pos:start="3784:13" pos:end="3784:61"><name pos:start="3784:13" pos:end="3784:15">ret</name> <operator pos:start="3784:17" pos:end="3784:17">=</operator> <call pos:start="3784:19" pos:end="3784:61"><name pos:start="3784:19" pos:end="3784:27">get_errno</name><argument_list pos:start="3784:28" pos:end="3784:61">(<argument pos:start="3784:29" pos:end="3784:60"><expr pos:start="3784:29" pos:end="3784:60"><call pos:start="3784:29" pos:end="3784:60"><name pos:start="3784:29" pos:end="3784:49">sched_rr_get_interval</name><argument_list pos:start="3784:50" pos:end="3784:60">(<argument pos:start="3784:51" pos:end="3784:54"><expr pos:start="3784:51" pos:end="3784:54"><name pos:start="3784:51" pos:end="3784:54">arg1</name></expr></argument>, <argument pos:start="3784:57" pos:end="3784:59"><expr pos:start="3784:57" pos:end="3784:59"><operator pos:start="3784:57" pos:end="3784:57">&amp;</operator><name pos:start="3784:58" pos:end="3784:59">ts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3786:13" pos:end="3790:13"><if pos:start="3786:13" pos:end="3790:13">if <condition pos:start="3786:16" pos:end="3786:31">(<expr pos:start="3786:17" pos:end="3786:30"><operator pos:start="3786:17" pos:end="3786:17">!</operator><call pos:start="3786:18" pos:end="3786:30"><name pos:start="3786:18" pos:end="3786:25">is_error</name><argument_list pos:start="3786:26" pos:end="3786:30">(<argument pos:start="3786:27" pos:end="3786:29"><expr pos:start="3786:27" pos:end="3786:29"><name pos:start="3786:27" pos:end="3786:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="3786:33" pos:end="3790:13">{<block_content pos:start="3788:17" pos:end="3788:51">

                <expr_stmt pos:start="3788:17" pos:end="3788:51"><expr pos:start="3788:17" pos:end="3788:50"><call pos:start="3788:17" pos:end="3788:50"><name pos:start="3788:17" pos:end="3788:39">host_to_target_timespec</name><argument_list pos:start="3788:40" pos:end="3788:50">(<argument pos:start="3788:41" pos:end="3788:44"><expr pos:start="3788:41" pos:end="3788:44"><name pos:start="3788:41" pos:end="3788:44">arg2</name></expr></argument>, <argument pos:start="3788:47" pos:end="3788:49"><expr pos:start="3788:47" pos:end="3788:49"><operator pos:start="3788:47" pos:end="3788:47">&amp;</operator><name pos:start="3788:48" pos:end="3788:49">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="3794:9" pos:end="3794:14">break;</break>

    <case pos:start="3796:5" pos:end="3796:29">case <expr pos:start="3796:10" pos:end="3796:28"><name pos:start="3796:10" pos:end="3796:28">TARGET_NR_nanosleep</name></expr>:</case>

        <block pos:start="3798:9" pos:end="3812:9">{<block_content pos:start="3800:13" pos:end="3810:13">

            <decl_stmt pos:start="3800:13" pos:end="3800:37"><decl pos:start="3800:13" pos:end="3800:31"><type pos:start="3800:13" pos:end="3800:27"><name pos:start="3800:13" pos:end="3800:27"><name pos:start="3800:13" pos:end="3800:18">struct</name> <name pos:start="3800:20" pos:end="3800:27">timespec</name></name></type> <name pos:start="3800:29" pos:end="3800:31">req</name></decl>, <decl pos:start="3800:34" pos:end="3800:36"><type ref="prev" pos:start="3800:13" pos:end="3800:27"/><name pos:start="3800:34" pos:end="3800:36">rem</name></decl>;</decl_stmt>

            <expr_stmt pos:start="3802:13" pos:end="3802:48"><expr pos:start="3802:13" pos:end="3802:47"><call pos:start="3802:13" pos:end="3802:47"><name pos:start="3802:13" pos:end="3802:35">target_to_host_timespec</name><argument_list pos:start="3802:36" pos:end="3802:47">(<argument pos:start="3802:37" pos:end="3802:40"><expr pos:start="3802:37" pos:end="3802:40"><operator pos:start="3802:37" pos:end="3802:37">&amp;</operator><name pos:start="3802:38" pos:end="3802:40">req</name></expr></argument>, <argument pos:start="3802:43" pos:end="3802:46"><expr pos:start="3802:43" pos:end="3802:46"><name pos:start="3802:43" pos:end="3802:46">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="3804:13" pos:end="3804:51"><expr pos:start="3804:13" pos:end="3804:50"><name pos:start="3804:13" pos:end="3804:15">ret</name> <operator pos:start="3804:17" pos:end="3804:17">=</operator> <call pos:start="3804:19" pos:end="3804:50"><name pos:start="3804:19" pos:end="3804:27">get_errno</name><argument_list pos:start="3804:28" pos:end="3804:50">(<argument pos:start="3804:29" pos:end="3804:49"><expr pos:start="3804:29" pos:end="3804:49"><call pos:start="3804:29" pos:end="3804:49"><name pos:start="3804:29" pos:end="3804:37">nanosleep</name><argument_list pos:start="3804:38" pos:end="3804:49">(<argument pos:start="3804:39" pos:end="3804:42"><expr pos:start="3804:39" pos:end="3804:42"><operator pos:start="3804:39" pos:end="3804:39">&amp;</operator><name pos:start="3804:40" pos:end="3804:42">req</name></expr></argument>, <argument pos:start="3804:45" pos:end="3804:48"><expr pos:start="3804:45" pos:end="3804:48"><operator pos:start="3804:45" pos:end="3804:45">&amp;</operator><name pos:start="3804:46" pos:end="3804:48">rem</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="3806:13" pos:end="3810:13"><if pos:start="3806:13" pos:end="3810:13">if <condition pos:start="3806:16" pos:end="3806:38">(<expr pos:start="3806:17" pos:end="3806:37"><call pos:start="3806:17" pos:end="3806:29"><name pos:start="3806:17" pos:end="3806:24">is_error</name><argument_list pos:start="3806:25" pos:end="3806:29">(<argument pos:start="3806:26" pos:end="3806:28"><expr pos:start="3806:26" pos:end="3806:28"><name pos:start="3806:26" pos:end="3806:28">ret</name></expr></argument>)</argument_list></call> <operator pos:start="3806:31" pos:end="3806:32">&amp;&amp;</operator> <name pos:start="3806:34" pos:end="3806:37">arg2</name></expr>)</condition> <block pos:start="3806:40" pos:end="3810:13">{<block_content pos:start="3808:17" pos:end="3808:52">

                <expr_stmt pos:start="3808:17" pos:end="3808:52"><expr pos:start="3808:17" pos:end="3808:51"><call pos:start="3808:17" pos:end="3808:51"><name pos:start="3808:17" pos:end="3808:39">host_to_target_timespec</name><argument_list pos:start="3808:40" pos:end="3808:51">(<argument pos:start="3808:41" pos:end="3808:44"><expr pos:start="3808:41" pos:end="3808:44"><name pos:start="3808:41" pos:end="3808:44">arg2</name></expr></argument>, <argument pos:start="3808:47" pos:end="3808:50"><expr pos:start="3808:47" pos:end="3808:50"><operator pos:start="3808:47" pos:end="3808:47">&amp;</operator><name pos:start="3808:48" pos:end="3808:50">rem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="3814:9" pos:end="3817:0">break;</break>

<cpp:ifdef pos:start="3816:1" pos:end="3816:29">#<cpp:directive pos:start="3816:2" pos:end="3816:6">ifdef</cpp:directive> <name pos:start="3816:8" pos:end="3816:29">TARGET_NR_query_module</name></cpp:ifdef>

    <case pos:start="3818:5" pos:end="3818:32">case <expr pos:start="3818:10" pos:end="3818:31"><name pos:start="3818:10" pos:end="3818:31">TARGET_NR_query_module</name></expr>:</case>

        <goto pos:start="3820:9" pos:end="3825:0">goto <name pos:start="3820:14" pos:end="3820:26">unimplemented</name>;</goto>

<cpp:endif pos:start="3822:1" pos:end="3822:6">#<cpp:directive pos:start="3822:2" pos:end="3822:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3824:1" pos:end="3824:27">#<cpp:directive pos:start="3824:2" pos:end="3824:6">ifdef</cpp:directive> <name pos:start="3824:8" pos:end="3824:27">TARGET_NR_nfsservctl</name></cpp:ifdef>

    <case pos:start="3826:5" pos:end="3826:30">case <expr pos:start="3826:10" pos:end="3826:29"><name pos:start="3826:10" pos:end="3826:29">TARGET_NR_nfsservctl</name></expr>:</case>

        <goto pos:start="3828:9" pos:end="3831:0">goto <name pos:start="3828:14" pos:end="3828:26">unimplemented</name>;</goto>

<cpp:endif pos:start="3830:1" pos:end="3830:6">#<cpp:directive pos:start="3830:2" pos:end="3830:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3832:5" pos:end="3832:25">case <expr pos:start="3832:10" pos:end="3832:24"><name pos:start="3832:10" pos:end="3832:24">TARGET_NR_prctl</name></expr>:</case>

        <switch pos:start="3834:9" pos:end="3862:13">switch <condition pos:start="3834:16" pos:end="3834:21">(<expr pos:start="3834:17" pos:end="3834:20"><name pos:start="3834:17" pos:end="3834:20">arg1</name></expr>)</condition>

            <block pos:start="3836:13" pos:end="3862:13">{<block_content pos:start="3838:13" pos:end="3860:22">

            <case pos:start="3838:13" pos:end="3838:34">case <expr pos:start="3838:18" pos:end="3838:33"><name pos:start="3838:18" pos:end="3838:33">PR_GET_PDEATHSIG</name></expr>:</case>

                <block pos:start="3840:17" pos:end="3852:17">{<block_content pos:start="3842:21" pos:end="3850:36">

                    <decl_stmt pos:start="3842:21" pos:end="3842:33"><decl pos:start="3842:21" pos:end="3842:32"><type pos:start="3842:21" pos:end="3842:23"><name pos:start="3842:21" pos:end="3842:23">int</name></type> <name pos:start="3842:25" pos:end="3842:32">deathsig</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="3844:21" pos:end="3844:78"><expr pos:start="3844:21" pos:end="3844:77"><name pos:start="3844:21" pos:end="3844:23">ret</name> <operator pos:start="3844:25" pos:end="3844:25">=</operator> <call pos:start="3844:27" pos:end="3844:77"><name pos:start="3844:27" pos:end="3844:35">get_errno</name><argument_list pos:start="3844:36" pos:end="3844:77">(<argument pos:start="3844:37" pos:end="3844:76"><expr pos:start="3844:37" pos:end="3844:76"><call pos:start="3844:37" pos:end="3844:76"><name pos:start="3844:37" pos:end="3844:41">prctl</name><argument_list pos:start="3844:42" pos:end="3844:76">(<argument pos:start="3844:43" pos:end="3844:46"><expr pos:start="3844:43" pos:end="3844:46"><name pos:start="3844:43" pos:end="3844:46">arg1</name></expr></argument>, <argument pos:start="3844:49" pos:end="3844:57"><expr pos:start="3844:49" pos:end="3844:57"><operator pos:start="3844:49" pos:end="3844:49">&amp;</operator><name pos:start="3844:50" pos:end="3844:57">deathsig</name></expr></argument>, <argument pos:start="3844:60" pos:end="3844:63"><expr pos:start="3844:60" pos:end="3844:63"><name pos:start="3844:60" pos:end="3844:63">arg3</name></expr></argument>, <argument pos:start="3844:66" pos:end="3844:69"><expr pos:start="3844:66" pos:end="3844:69"><name pos:start="3844:66" pos:end="3844:69">arg4</name></expr></argument>, <argument pos:start="3844:72" pos:end="3844:75"><expr pos:start="3844:72" pos:end="3844:75"><name pos:start="3844:72" pos:end="3844:75">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="3846:21" pos:end="3850:36"><if pos:start="3846:21" pos:end="3850:36">if <condition pos:start="3846:24" pos:end="3848:56">(<expr pos:start="3846:25" pos:end="3848:55"><operator pos:start="3846:25" pos:end="3846:25">!</operator><call pos:start="3846:26" pos:end="3846:38"><name pos:start="3846:26" pos:end="3846:33">is_error</name><argument_list pos:start="3846:34" pos:end="3846:38">(<argument pos:start="3846:35" pos:end="3846:37"><expr pos:start="3846:35" pos:end="3846:37"><name pos:start="3846:35" pos:end="3846:37">ret</name></expr></argument>)</argument_list></call> <operator pos:start="3846:40" pos:end="3846:41">&amp;&amp;</operator> <name pos:start="3846:43" pos:end="3846:46">arg2</name>

                        <operator pos:start="3848:25" pos:end="3848:26">&amp;&amp;</operator> <call pos:start="3848:28" pos:end="3848:55"><name pos:start="3848:28" pos:end="3848:39">put_user_ual</name><argument_list pos:start="3848:40" pos:end="3848:55">(<argument pos:start="3848:41" pos:end="3848:48"><expr pos:start="3848:41" pos:end="3848:48"><name pos:start="3848:41" pos:end="3848:48">deathsig</name></expr></argument>, <argument pos:start="3848:51" pos:end="3848:54"><expr pos:start="3848:51" pos:end="3848:54"><name pos:start="3848:51" pos:end="3848:54">arg2</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="3850:25" pos:end="3850:36"><block_content pos:start="3850:25" pos:end="3850:36">

                        <goto pos:start="3850:25" pos:end="3850:36">goto <name pos:start="3850:30" pos:end="3850:35">efault</name>;</goto></block_content></block></if></if_stmt>

                </block_content>}</block>

                <break pos:start="3854:17" pos:end="3854:22">break;</break>

            <default pos:start="3856:13" pos:end="3856:20">default:</default>

                <expr_stmt pos:start="3858:17" pos:end="3858:69"><expr pos:start="3858:17" pos:end="3858:68"><name pos:start="3858:17" pos:end="3858:19">ret</name> <operator pos:start="3858:21" pos:end="3858:21">=</operator> <call pos:start="3858:23" pos:end="3858:68"><name pos:start="3858:23" pos:end="3858:31">get_errno</name><argument_list pos:start="3858:32" pos:end="3858:68">(<argument pos:start="3858:33" pos:end="3858:67"><expr pos:start="3858:33" pos:end="3858:67"><call pos:start="3858:33" pos:end="3858:67"><name pos:start="3858:33" pos:end="3858:37">prctl</name><argument_list pos:start="3858:38" pos:end="3858:67">(<argument pos:start="3858:39" pos:end="3858:42"><expr pos:start="3858:39" pos:end="3858:42"><name pos:start="3858:39" pos:end="3858:42">arg1</name></expr></argument>, <argument pos:start="3858:45" pos:end="3858:48"><expr pos:start="3858:45" pos:end="3858:48"><name pos:start="3858:45" pos:end="3858:48">arg2</name></expr></argument>, <argument pos:start="3858:51" pos:end="3858:54"><expr pos:start="3858:51" pos:end="3858:54"><name pos:start="3858:51" pos:end="3858:54">arg3</name></expr></argument>, <argument pos:start="3858:57" pos:end="3858:60"><expr pos:start="3858:57" pos:end="3858:60"><name pos:start="3858:57" pos:end="3858:60">arg4</name></expr></argument>, <argument pos:start="3858:63" pos:end="3858:66"><expr pos:start="3858:63" pos:end="3858:66"><name pos:start="3858:63" pos:end="3858:66">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="3860:17" pos:end="3860:22">break;</break>

            </block_content>}</block></switch>

        <break pos:start="3864:9" pos:end="3867:0">break;</break>

<cpp:ifdef pos:start="3866:1" pos:end="3866:27">#<cpp:directive pos:start="3866:2" pos:end="3866:6">ifdef</cpp:directive> <name pos:start="3866:8" pos:end="3866:27">TARGET_NR_arch_prctl</name></cpp:ifdef>

    <case pos:start="3868:5" pos:end="3871:0">case <expr pos:start="3868:10" pos:end="3868:29"><name pos:start="3868:10" pos:end="3868:29">TARGET_NR_arch_prctl</name></expr>:</case>

<cpp:if pos:start="3870:1" pos:end="3870:50">#<cpp:directive pos:start="3870:2" pos:end="3870:3">if</cpp:directive> <expr pos:start="3870:5" pos:end="3870:50"><call pos:start="3870:5" pos:end="3870:24"><name pos:start="3870:5" pos:end="3870:11">defined</name><argument_list pos:start="3870:12" pos:end="3870:24">(<argument pos:start="3870:13" pos:end="3870:23"><expr pos:start="3870:13" pos:end="3870:23"><name pos:start="3870:13" pos:end="3870:23">TARGET_I386</name></expr></argument>)</argument_list></call> <operator pos:start="3870:26" pos:end="3870:27">&amp;&amp;</operator> <operator pos:start="3870:29" pos:end="3870:29">!</operator><call pos:start="3870:30" pos:end="3870:50"><name pos:start="3870:30" pos:end="3870:36">defined</name><argument_list pos:start="3870:37" pos:end="3870:50">(<argument pos:start="3870:38" pos:end="3870:49"><expr pos:start="3870:38" pos:end="3870:49"><name pos:start="3870:38" pos:end="3870:49">TARGET_ABI32</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="3872:9" pos:end="3872:49"><expr pos:start="3872:9" pos:end="3872:48"><name pos:start="3872:9" pos:end="3872:11">ret</name> <operator pos:start="3872:13" pos:end="3872:13">=</operator> <call pos:start="3872:15" pos:end="3872:48"><name pos:start="3872:15" pos:end="3872:27">do_arch_prctl</name><argument_list pos:start="3872:28" pos:end="3872:48">(<argument pos:start="3872:29" pos:end="3872:35"><expr pos:start="3872:29" pos:end="3872:35"><name pos:start="3872:29" pos:end="3872:35">cpu_env</name></expr></argument>, <argument pos:start="3872:38" pos:end="3872:41"><expr pos:start="3872:38" pos:end="3872:41"><name pos:start="3872:38" pos:end="3872:41">arg1</name></expr></argument>, <argument pos:start="3872:44" pos:end="3872:47"><expr pos:start="3872:44" pos:end="3872:47"><name pos:start="3872:44" pos:end="3872:47">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3874:9" pos:end="3877:0">break;</break>

<cpp:else pos:start="3876:1" pos:end="3876:5">#<cpp:directive pos:start="3876:2" pos:end="3876:5">else</cpp:directive></cpp:else>

        <goto pos:start="3878:9" pos:end="3885:0">goto <name pos:start="3878:14" pos:end="3878:26">unimplemented</name>;</goto>

<cpp:endif pos:start="3880:1" pos:end="3880:6">#<cpp:directive pos:start="3880:2" pos:end="3880:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="3882:1" pos:end="3882:6">#<cpp:directive pos:start="3882:2" pos:end="3882:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3884:1" pos:end="3884:22">#<cpp:directive pos:start="3884:2" pos:end="3884:6">ifdef</cpp:directive> <name pos:start="3884:8" pos:end="3884:22">TARGET_NR_pread</name></cpp:ifdef>

    <case pos:start="3886:5" pos:end="3889:0">case <expr pos:start="3886:10" pos:end="3886:24"><name pos:start="3886:10" pos:end="3886:24">TARGET_NR_pread</name></expr>:</case>

<cpp:ifdef pos:start="3888:1" pos:end="3888:17">#<cpp:directive pos:start="3888:2" pos:end="3888:6">ifdef</cpp:directive> <name pos:start="3888:8" pos:end="3888:17">TARGET_ARM</name></cpp:ifdef>

        <if_stmt pos:start="3890:9" pos:end="3895:0"><if pos:start="3890:9" pos:end="3895:0">if <condition pos:start="3890:12" pos:end="3890:43">(<expr pos:start="3890:13" pos:end="3890:42"><operator pos:start="3890:13" pos:end="3890:13">(</operator><operator pos:start="3890:14" pos:end="3890:14">(</operator><name pos:start="3890:15" pos:end="3890:25">CPUARMState</name> <operator pos:start="3890:27" pos:end="3890:27">*</operator><operator pos:start="3890:28" pos:end="3890:28">)</operator><name pos:start="3890:29" pos:end="3890:35">cpu_env</name><operator pos:start="3890:36" pos:end="3890:36">)</operator><operator pos:start="3890:37" pos:end="3890:38">-&gt;</operator><name pos:start="3890:39" pos:end="3890:42">eabi</name></expr>)</condition><block type="pseudo" pos:start="3892:13" pos:end="3895:0"><block_content pos:start="3892:13" pos:end="3895:0">

            <expr_stmt pos:start="3892:13" pos:end="3895:0"><expr pos:start="3892:13" pos:end="3892:23"><name pos:start="3892:13" pos:end="3892:16">arg4</name> <operator pos:start="3892:18" pos:end="3892:18">=</operator> <name pos:start="3892:20" pos:end="3892:23">arg5</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="3894:1" pos:end="3894:6">#<cpp:directive pos:start="3894:2" pos:end="3894:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="3896:9" pos:end="3898:24"><if pos:start="3896:9" pos:end="3898:24">if <condition pos:start="3896:12" pos:end="3896:58">(<expr pos:start="3896:13" pos:end="3896:57"><operator pos:start="3896:13" pos:end="3896:13">!</operator><operator pos:start="3896:14" pos:end="3896:14">(</operator><name pos:start="3896:15" pos:end="3896:15">p</name> <operator pos:start="3896:17" pos:end="3896:17">=</operator> <call pos:start="3896:19" pos:end="3896:56"><name pos:start="3896:19" pos:end="3896:27">lock_user</name><argument_list pos:start="3896:28" pos:end="3896:56">(<argument pos:start="3896:29" pos:end="3896:40"><expr pos:start="3896:29" pos:end="3896:40"><name pos:start="3896:29" pos:end="3896:40">VERIFY_WRITE</name></expr></argument>, <argument pos:start="3896:43" pos:end="3896:46"><expr pos:start="3896:43" pos:end="3896:46"><name pos:start="3896:43" pos:end="3896:46">arg2</name></expr></argument>, <argument pos:start="3896:49" pos:end="3896:52"><expr pos:start="3896:49" pos:end="3896:52"><name pos:start="3896:49" pos:end="3896:52">arg3</name></expr></argument>, <argument pos:start="3896:55" pos:end="3896:55"><expr pos:start="3896:55" pos:end="3896:55"><literal type="number" pos:start="3896:55" pos:end="3896:55">0</literal></expr></argument>)</argument_list></call><operator pos:start="3896:57" pos:end="3896:57">)</operator></expr>)</condition><block type="pseudo" pos:start="3898:13" pos:end="3898:24"><block_content pos:start="3898:13" pos:end="3898:24">

            <goto pos:start="3898:13" pos:end="3898:24">goto <name pos:start="3898:18" pos:end="3898:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="3900:9" pos:end="3900:52"><expr pos:start="3900:9" pos:end="3900:51"><name pos:start="3900:9" pos:end="3900:11">ret</name> <operator pos:start="3900:13" pos:end="3900:13">=</operator> <call pos:start="3900:15" pos:end="3900:51"><name pos:start="3900:15" pos:end="3900:23">get_errno</name><argument_list pos:start="3900:24" pos:end="3900:51">(<argument pos:start="3900:25" pos:end="3900:50"><expr pos:start="3900:25" pos:end="3900:50"><call pos:start="3900:25" pos:end="3900:50"><name pos:start="3900:25" pos:end="3900:29">pread</name><argument_list pos:start="3900:30" pos:end="3900:50">(<argument pos:start="3900:31" pos:end="3900:34"><expr pos:start="3900:31" pos:end="3900:34"><name pos:start="3900:31" pos:end="3900:34">arg1</name></expr></argument>, <argument pos:start="3900:37" pos:end="3900:37"><expr pos:start="3900:37" pos:end="3900:37"><name pos:start="3900:37" pos:end="3900:37">p</name></expr></argument>, <argument pos:start="3900:40" pos:end="3900:43"><expr pos:start="3900:40" pos:end="3900:43"><name pos:start="3900:40" pos:end="3900:43">arg3</name></expr></argument>, <argument pos:start="3900:46" pos:end="3900:49"><expr pos:start="3900:46" pos:end="3900:49"><name pos:start="3900:46" pos:end="3900:49">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3902:9" pos:end="3902:34"><expr pos:start="3902:9" pos:end="3902:33"><call pos:start="3902:9" pos:end="3902:33"><name pos:start="3902:9" pos:end="3902:19">unlock_user</name><argument_list pos:start="3902:20" pos:end="3902:33">(<argument pos:start="3902:21" pos:end="3902:21"><expr pos:start="3902:21" pos:end="3902:21"><name pos:start="3902:21" pos:end="3902:21">p</name></expr></argument>, <argument pos:start="3902:24" pos:end="3902:27"><expr pos:start="3902:24" pos:end="3902:27"><name pos:start="3902:24" pos:end="3902:27">arg2</name></expr></argument>, <argument pos:start="3902:30" pos:end="3902:32"><expr pos:start="3902:30" pos:end="3902:32"><name pos:start="3902:30" pos:end="3902:32">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3904:9" pos:end="3904:14">break;</break>

    <case pos:start="3906:5" pos:end="3909:0">case <expr pos:start="3906:10" pos:end="3906:25"><name pos:start="3906:10" pos:end="3906:25">TARGET_NR_pwrite</name></expr>:</case>

<cpp:ifdef pos:start="3908:1" pos:end="3908:17">#<cpp:directive pos:start="3908:2" pos:end="3908:6">ifdef</cpp:directive> <name pos:start="3908:8" pos:end="3908:17">TARGET_ARM</name></cpp:ifdef>

        <if_stmt pos:start="3910:9" pos:end="3915:0"><if pos:start="3910:9" pos:end="3915:0">if <condition pos:start="3910:12" pos:end="3910:43">(<expr pos:start="3910:13" pos:end="3910:42"><operator pos:start="3910:13" pos:end="3910:13">(</operator><operator pos:start="3910:14" pos:end="3910:14">(</operator><name pos:start="3910:15" pos:end="3910:25">CPUARMState</name> <operator pos:start="3910:27" pos:end="3910:27">*</operator><operator pos:start="3910:28" pos:end="3910:28">)</operator><name pos:start="3910:29" pos:end="3910:35">cpu_env</name><operator pos:start="3910:36" pos:end="3910:36">)</operator><operator pos:start="3910:37" pos:end="3910:38">-&gt;</operator><name pos:start="3910:39" pos:end="3910:42">eabi</name></expr>)</condition><block type="pseudo" pos:start="3912:13" pos:end="3915:0"><block_content pos:start="3912:13" pos:end="3915:0">

            <expr_stmt pos:start="3912:13" pos:end="3915:0"><expr pos:start="3912:13" pos:end="3912:23"><name pos:start="3912:13" pos:end="3912:16">arg4</name> <operator pos:start="3912:18" pos:end="3912:18">=</operator> <name pos:start="3912:20" pos:end="3912:23">arg5</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="3914:1" pos:end="3914:6">#<cpp:directive pos:start="3914:2" pos:end="3914:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="3916:9" pos:end="3918:24"><if pos:start="3916:9" pos:end="3918:24">if <condition pos:start="3916:12" pos:end="3916:57">(<expr pos:start="3916:13" pos:end="3916:56"><operator pos:start="3916:13" pos:end="3916:13">!</operator><operator pos:start="3916:14" pos:end="3916:14">(</operator><name pos:start="3916:15" pos:end="3916:15">p</name> <operator pos:start="3916:17" pos:end="3916:17">=</operator> <call pos:start="3916:19" pos:end="3916:55"><name pos:start="3916:19" pos:end="3916:27">lock_user</name><argument_list pos:start="3916:28" pos:end="3916:55">(<argument pos:start="3916:29" pos:end="3916:39"><expr pos:start="3916:29" pos:end="3916:39"><name pos:start="3916:29" pos:end="3916:39">VERIFY_READ</name></expr></argument>, <argument pos:start="3916:42" pos:end="3916:45"><expr pos:start="3916:42" pos:end="3916:45"><name pos:start="3916:42" pos:end="3916:45">arg2</name></expr></argument>, <argument pos:start="3916:48" pos:end="3916:51"><expr pos:start="3916:48" pos:end="3916:51"><name pos:start="3916:48" pos:end="3916:51">arg3</name></expr></argument>, <argument pos:start="3916:54" pos:end="3916:54"><expr pos:start="3916:54" pos:end="3916:54"><literal type="number" pos:start="3916:54" pos:end="3916:54">1</literal></expr></argument>)</argument_list></call><operator pos:start="3916:56" pos:end="3916:56">)</operator></expr>)</condition><block type="pseudo" pos:start="3918:13" pos:end="3918:24"><block_content pos:start="3918:13" pos:end="3918:24">

            <goto pos:start="3918:13" pos:end="3918:24">goto <name pos:start="3918:18" pos:end="3918:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="3920:9" pos:end="3920:53"><expr pos:start="3920:9" pos:end="3920:52"><name pos:start="3920:9" pos:end="3920:11">ret</name> <operator pos:start="3920:13" pos:end="3920:13">=</operator> <call pos:start="3920:15" pos:end="3920:52"><name pos:start="3920:15" pos:end="3920:23">get_errno</name><argument_list pos:start="3920:24" pos:end="3920:52">(<argument pos:start="3920:25" pos:end="3920:51"><expr pos:start="3920:25" pos:end="3920:51"><call pos:start="3920:25" pos:end="3920:51"><name pos:start="3920:25" pos:end="3920:30">pwrite</name><argument_list pos:start="3920:31" pos:end="3920:51">(<argument pos:start="3920:32" pos:end="3920:35"><expr pos:start="3920:32" pos:end="3920:35"><name pos:start="3920:32" pos:end="3920:35">arg1</name></expr></argument>, <argument pos:start="3920:38" pos:end="3920:38"><expr pos:start="3920:38" pos:end="3920:38"><name pos:start="3920:38" pos:end="3920:38">p</name></expr></argument>, <argument pos:start="3920:41" pos:end="3920:44"><expr pos:start="3920:41" pos:end="3920:44"><name pos:start="3920:41" pos:end="3920:44">arg3</name></expr></argument>, <argument pos:start="3920:47" pos:end="3920:50"><expr pos:start="3920:47" pos:end="3920:50"><name pos:start="3920:47" pos:end="3920:50">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3922:9" pos:end="3922:32"><expr pos:start="3922:9" pos:end="3922:31"><call pos:start="3922:9" pos:end="3922:31"><name pos:start="3922:9" pos:end="3922:19">unlock_user</name><argument_list pos:start="3922:20" pos:end="3922:31">(<argument pos:start="3922:21" pos:end="3922:21"><expr pos:start="3922:21" pos:end="3922:21"><name pos:start="3922:21" pos:end="3922:21">p</name></expr></argument>, <argument pos:start="3922:24" pos:end="3922:27"><expr pos:start="3922:24" pos:end="3922:27"><name pos:start="3922:24" pos:end="3922:27">arg2</name></expr></argument>, <argument pos:start="3922:30" pos:end="3922:30"><expr pos:start="3922:30" pos:end="3922:30"><literal type="number" pos:start="3922:30" pos:end="3922:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3924:9" pos:end="3929:0">break;</break>

<cpp:endif pos:start="3926:1" pos:end="3926:6">#<cpp:directive pos:start="3926:2" pos:end="3926:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="3928:1" pos:end="3928:24">#<cpp:directive pos:start="3928:2" pos:end="3928:6">ifdef</cpp:directive> <name pos:start="3928:8" pos:end="3928:24">TARGET_NR_pread64</name></cpp:ifdef>

    <case pos:start="3930:5" pos:end="3930:27">case <expr pos:start="3930:10" pos:end="3930:26"><name pos:start="3930:10" pos:end="3930:26">TARGET_NR_pread64</name></expr>:</case>

        <if_stmt pos:start="3932:9" pos:end="3934:24"><if pos:start="3932:9" pos:end="3934:24">if <condition pos:start="3932:12" pos:end="3932:58">(<expr pos:start="3932:13" pos:end="3932:57"><operator pos:start="3932:13" pos:end="3932:13">!</operator><operator pos:start="3932:14" pos:end="3932:14">(</operator><name pos:start="3932:15" pos:end="3932:15">p</name> <operator pos:start="3932:17" pos:end="3932:17">=</operator> <call pos:start="3932:19" pos:end="3932:56"><name pos:start="3932:19" pos:end="3932:27">lock_user</name><argument_list pos:start="3932:28" pos:end="3932:56">(<argument pos:start="3932:29" pos:end="3932:40"><expr pos:start="3932:29" pos:end="3932:40"><name pos:start="3932:29" pos:end="3932:40">VERIFY_WRITE</name></expr></argument>, <argument pos:start="3932:43" pos:end="3932:46"><expr pos:start="3932:43" pos:end="3932:46"><name pos:start="3932:43" pos:end="3932:46">arg2</name></expr></argument>, <argument pos:start="3932:49" pos:end="3932:52"><expr pos:start="3932:49" pos:end="3932:52"><name pos:start="3932:49" pos:end="3932:52">arg3</name></expr></argument>, <argument pos:start="3932:55" pos:end="3932:55"><expr pos:start="3932:55" pos:end="3932:55"><literal type="number" pos:start="3932:55" pos:end="3932:55">0</literal></expr></argument>)</argument_list></call><operator pos:start="3932:57" pos:end="3932:57">)</operator></expr>)</condition><block type="pseudo" pos:start="3934:13" pos:end="3934:24"><block_content pos:start="3934:13" pos:end="3934:24">

            <goto pos:start="3934:13" pos:end="3934:24">goto <name pos:start="3934:18" pos:end="3934:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="3936:9" pos:end="3936:77"><expr pos:start="3936:9" pos:end="3936:76"><name pos:start="3936:9" pos:end="3936:11">ret</name> <operator pos:start="3936:13" pos:end="3936:13">=</operator> <call pos:start="3936:15" pos:end="3936:76"><name pos:start="3936:15" pos:end="3936:23">get_errno</name><argument_list pos:start="3936:24" pos:end="3936:76">(<argument pos:start="3936:25" pos:end="3936:75"><expr pos:start="3936:25" pos:end="3936:75"><call pos:start="3936:25" pos:end="3936:75"><name pos:start="3936:25" pos:end="3936:31">pread64</name><argument_list pos:start="3936:32" pos:end="3936:75">(<argument pos:start="3936:33" pos:end="3936:36"><expr pos:start="3936:33" pos:end="3936:36"><name pos:start="3936:33" pos:end="3936:36">arg1</name></expr></argument>, <argument pos:start="3936:39" pos:end="3936:39"><expr pos:start="3936:39" pos:end="3936:39"><name pos:start="3936:39" pos:end="3936:39">p</name></expr></argument>, <argument pos:start="3936:42" pos:end="3936:45"><expr pos:start="3936:42" pos:end="3936:45"><name pos:start="3936:42" pos:end="3936:45">arg3</name></expr></argument>, <argument pos:start="3936:48" pos:end="3936:74"><expr pos:start="3936:48" pos:end="3936:74"><call pos:start="3936:48" pos:end="3936:74"><name pos:start="3936:48" pos:end="3936:62">target_offset64</name><argument_list pos:start="3936:63" pos:end="3936:74">(<argument pos:start="3936:64" pos:end="3936:67"><expr pos:start="3936:64" pos:end="3936:67"><name pos:start="3936:64" pos:end="3936:67">arg4</name></expr></argument>, <argument pos:start="3936:70" pos:end="3936:73"><expr pos:start="3936:70" pos:end="3936:73"><name pos:start="3936:70" pos:end="3936:73">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3938:9" pos:end="3938:34"><expr pos:start="3938:9" pos:end="3938:33"><call pos:start="3938:9" pos:end="3938:33"><name pos:start="3938:9" pos:end="3938:19">unlock_user</name><argument_list pos:start="3938:20" pos:end="3938:33">(<argument pos:start="3938:21" pos:end="3938:21"><expr pos:start="3938:21" pos:end="3938:21"><name pos:start="3938:21" pos:end="3938:21">p</name></expr></argument>, <argument pos:start="3938:24" pos:end="3938:27"><expr pos:start="3938:24" pos:end="3938:27"><name pos:start="3938:24" pos:end="3938:27">arg2</name></expr></argument>, <argument pos:start="3938:30" pos:end="3938:32"><expr pos:start="3938:30" pos:end="3938:32"><name pos:start="3938:30" pos:end="3938:32">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3940:9" pos:end="3940:14">break;</break>

    <case pos:start="3942:5" pos:end="3942:28">case <expr pos:start="3942:10" pos:end="3942:27"><name pos:start="3942:10" pos:end="3942:27">TARGET_NR_pwrite64</name></expr>:</case>

        <if_stmt pos:start="3944:9" pos:end="3946:24"><if pos:start="3944:9" pos:end="3946:24">if <condition pos:start="3944:12" pos:end="3944:57">(<expr pos:start="3944:13" pos:end="3944:56"><operator pos:start="3944:13" pos:end="3944:13">!</operator><operator pos:start="3944:14" pos:end="3944:14">(</operator><name pos:start="3944:15" pos:end="3944:15">p</name> <operator pos:start="3944:17" pos:end="3944:17">=</operator> <call pos:start="3944:19" pos:end="3944:55"><name pos:start="3944:19" pos:end="3944:27">lock_user</name><argument_list pos:start="3944:28" pos:end="3944:55">(<argument pos:start="3944:29" pos:end="3944:39"><expr pos:start="3944:29" pos:end="3944:39"><name pos:start="3944:29" pos:end="3944:39">VERIFY_READ</name></expr></argument>, <argument pos:start="3944:42" pos:end="3944:45"><expr pos:start="3944:42" pos:end="3944:45"><name pos:start="3944:42" pos:end="3944:45">arg2</name></expr></argument>, <argument pos:start="3944:48" pos:end="3944:51"><expr pos:start="3944:48" pos:end="3944:51"><name pos:start="3944:48" pos:end="3944:51">arg3</name></expr></argument>, <argument pos:start="3944:54" pos:end="3944:54"><expr pos:start="3944:54" pos:end="3944:54"><literal type="number" pos:start="3944:54" pos:end="3944:54">1</literal></expr></argument>)</argument_list></call><operator pos:start="3944:56" pos:end="3944:56">)</operator></expr>)</condition><block type="pseudo" pos:start="3946:13" pos:end="3946:24"><block_content pos:start="3946:13" pos:end="3946:24">

            <goto pos:start="3946:13" pos:end="3946:24">goto <name pos:start="3946:18" pos:end="3946:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="3948:9" pos:end="3948:78"><expr pos:start="3948:9" pos:end="3948:77"><name pos:start="3948:9" pos:end="3948:11">ret</name> <operator pos:start="3948:13" pos:end="3948:13">=</operator> <call pos:start="3948:15" pos:end="3948:77"><name pos:start="3948:15" pos:end="3948:23">get_errno</name><argument_list pos:start="3948:24" pos:end="3948:77">(<argument pos:start="3948:25" pos:end="3948:76"><expr pos:start="3948:25" pos:end="3948:76"><call pos:start="3948:25" pos:end="3948:76"><name pos:start="3948:25" pos:end="3948:32">pwrite64</name><argument_list pos:start="3948:33" pos:end="3948:76">(<argument pos:start="3948:34" pos:end="3948:37"><expr pos:start="3948:34" pos:end="3948:37"><name pos:start="3948:34" pos:end="3948:37">arg1</name></expr></argument>, <argument pos:start="3948:40" pos:end="3948:40"><expr pos:start="3948:40" pos:end="3948:40"><name pos:start="3948:40" pos:end="3948:40">p</name></expr></argument>, <argument pos:start="3948:43" pos:end="3948:46"><expr pos:start="3948:43" pos:end="3948:46"><name pos:start="3948:43" pos:end="3948:46">arg3</name></expr></argument>, <argument pos:start="3948:49" pos:end="3948:75"><expr pos:start="3948:49" pos:end="3948:75"><call pos:start="3948:49" pos:end="3948:75"><name pos:start="3948:49" pos:end="3948:63">target_offset64</name><argument_list pos:start="3948:64" pos:end="3948:75">(<argument pos:start="3948:65" pos:end="3948:68"><expr pos:start="3948:65" pos:end="3948:68"><name pos:start="3948:65" pos:end="3948:68">arg4</name></expr></argument>, <argument pos:start="3948:71" pos:end="3948:74"><expr pos:start="3948:71" pos:end="3948:74"><name pos:start="3948:71" pos:end="3948:74">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3950:9" pos:end="3950:32"><expr pos:start="3950:9" pos:end="3950:31"><call pos:start="3950:9" pos:end="3950:31"><name pos:start="3950:9" pos:end="3950:19">unlock_user</name><argument_list pos:start="3950:20" pos:end="3950:31">(<argument pos:start="3950:21" pos:end="3950:21"><expr pos:start="3950:21" pos:end="3950:21"><name pos:start="3950:21" pos:end="3950:21">p</name></expr></argument>, <argument pos:start="3950:24" pos:end="3950:27"><expr pos:start="3950:24" pos:end="3950:27"><name pos:start="3950:24" pos:end="3950:27">arg2</name></expr></argument>, <argument pos:start="3950:30" pos:end="3950:30"><expr pos:start="3950:30" pos:end="3950:30"><literal type="number" pos:start="3950:30" pos:end="3950:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3952:9" pos:end="3955:0">break;</break>

<cpp:endif pos:start="3954:1" pos:end="3954:6">#<cpp:directive pos:start="3954:2" pos:end="3954:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3956:5" pos:end="3956:26">case <expr pos:start="3956:10" pos:end="3956:25"><name pos:start="3956:10" pos:end="3956:25">TARGET_NR_getcwd</name></expr>:</case>

        <if_stmt pos:start="3958:9" pos:end="3960:24"><if pos:start="3958:9" pos:end="3960:24">if <condition pos:start="3958:12" pos:end="3958:58">(<expr pos:start="3958:13" pos:end="3958:57"><operator pos:start="3958:13" pos:end="3958:13">!</operator><operator pos:start="3958:14" pos:end="3958:14">(</operator><name pos:start="3958:15" pos:end="3958:15">p</name> <operator pos:start="3958:17" pos:end="3958:17">=</operator> <call pos:start="3958:19" pos:end="3958:56"><name pos:start="3958:19" pos:end="3958:27">lock_user</name><argument_list pos:start="3958:28" pos:end="3958:56">(<argument pos:start="3958:29" pos:end="3958:40"><expr pos:start="3958:29" pos:end="3958:40"><name pos:start="3958:29" pos:end="3958:40">VERIFY_WRITE</name></expr></argument>, <argument pos:start="3958:43" pos:end="3958:46"><expr pos:start="3958:43" pos:end="3958:46"><name pos:start="3958:43" pos:end="3958:46">arg1</name></expr></argument>, <argument pos:start="3958:49" pos:end="3958:52"><expr pos:start="3958:49" pos:end="3958:52"><name pos:start="3958:49" pos:end="3958:52">arg2</name></expr></argument>, <argument pos:start="3958:55" pos:end="3958:55"><expr pos:start="3958:55" pos:end="3958:55"><literal type="number" pos:start="3958:55" pos:end="3958:55">0</literal></expr></argument>)</argument_list></call><operator pos:start="3958:57" pos:end="3958:57">)</operator></expr>)</condition><block type="pseudo" pos:start="3960:13" pos:end="3960:24"><block_content pos:start="3960:13" pos:end="3960:24">

            <goto pos:start="3960:13" pos:end="3960:24">goto <name pos:start="3960:18" pos:end="3960:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="3962:9" pos:end="3962:46"><expr pos:start="3962:9" pos:end="3962:45"><name pos:start="3962:9" pos:end="3962:11">ret</name> <operator pos:start="3962:13" pos:end="3962:13">=</operator> <call pos:start="3962:15" pos:end="3962:45"><name pos:start="3962:15" pos:end="3962:23">get_errno</name><argument_list pos:start="3962:24" pos:end="3962:45">(<argument pos:start="3962:25" pos:end="3962:44"><expr pos:start="3962:25" pos:end="3962:44"><call pos:start="3962:25" pos:end="3962:44"><name pos:start="3962:25" pos:end="3962:35">sys_getcwd1</name><argument_list pos:start="3962:36" pos:end="3962:44">(<argument pos:start="3962:37" pos:end="3962:37"><expr pos:start="3962:37" pos:end="3962:37"><name pos:start="3962:37" pos:end="3962:37">p</name></expr></argument>, <argument pos:start="3962:40" pos:end="3962:43"><expr pos:start="3962:40" pos:end="3962:43"><name pos:start="3962:40" pos:end="3962:43">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3964:9" pos:end="3964:34"><expr pos:start="3964:9" pos:end="3964:33"><call pos:start="3964:9" pos:end="3964:33"><name pos:start="3964:9" pos:end="3964:19">unlock_user</name><argument_list pos:start="3964:20" pos:end="3964:33">(<argument pos:start="3964:21" pos:end="3964:21"><expr pos:start="3964:21" pos:end="3964:21"><name pos:start="3964:21" pos:end="3964:21">p</name></expr></argument>, <argument pos:start="3964:24" pos:end="3964:27"><expr pos:start="3964:24" pos:end="3964:27"><name pos:start="3964:24" pos:end="3964:27">arg1</name></expr></argument>, <argument pos:start="3964:30" pos:end="3964:32"><expr pos:start="3964:30" pos:end="3964:32"><name pos:start="3964:30" pos:end="3964:32">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3966:9" pos:end="3966:14">break;</break>

    <case pos:start="3968:5" pos:end="3968:26">case <expr pos:start="3968:10" pos:end="3968:25"><name pos:start="3968:10" pos:end="3968:25">TARGET_NR_capget</name></expr>:</case>

        <goto pos:start="3970:9" pos:end="3970:27">goto <name pos:start="3970:14" pos:end="3970:26">unimplemented</name>;</goto>

    <case pos:start="3972:5" pos:end="3972:26">case <expr pos:start="3972:10" pos:end="3972:25"><name pos:start="3972:10" pos:end="3972:25">TARGET_NR_capset</name></expr>:</case>

        <goto pos:start="3974:9" pos:end="3974:27">goto <name pos:start="3974:14" pos:end="3974:26">unimplemented</name>;</goto>

    <case pos:start="3976:5" pos:end="3983:0">case <expr pos:start="3976:10" pos:end="3976:30"><name pos:start="3976:10" pos:end="3976:30">TARGET_NR_sigaltstack</name></expr>:</case>

<cpp:if pos:start="3978:1" pos:end="3982:24">#<cpp:directive pos:start="3978:2" pos:end="3978:3">if</cpp:directive> <expr pos:start="3978:5" pos:end="3982:24"><call pos:start="3978:5" pos:end="3978:24"><name pos:start="3978:5" pos:end="3978:11">defined</name><argument_list pos:start="3978:12" pos:end="3978:24">(<argument pos:start="3978:13" pos:end="3978:23"><expr pos:start="3978:13" pos:end="3978:23"><name pos:start="3978:13" pos:end="3978:23">TARGET_I386</name></expr></argument>)</argument_list></call> <operator pos:start="3978:26" pos:end="3978:27">||</operator> <call pos:start="3978:29" pos:end="3978:47"><name pos:start="3978:29" pos:end="3978:35">defined</name><argument_list pos:start="3978:36" pos:end="3978:47">(<argument pos:start="3978:37" pos:end="3978:46"><expr pos:start="3978:37" pos:end="3978:46"><name pos:start="3978:37" pos:end="3978:46">TARGET_ARM</name></expr></argument>)</argument_list></call> <operator pos:start="3978:49" pos:end="3978:50">||</operator> <call pos:start="3978:52" pos:end="3978:71"><name pos:start="3978:52" pos:end="3978:58">defined</name><argument_list pos:start="3978:59" pos:end="3978:71">(<argument pos:start="3978:60" pos:end="3978:70"><expr pos:start="3978:60" pos:end="3978:70"><name pos:start="3978:60" pos:end="3978:70">TARGET_MIPS</name></expr></argument>)</argument_list></call> <operator pos:start="3978:73" pos:end="3978:74">||</operator> \

    <call pos:start="3980:5" pos:end="3980:25"><name pos:start="3980:5" pos:end="3980:11">defined</name><argument_list pos:start="3980:12" pos:end="3980:25">(<argument pos:start="3980:13" pos:end="3980:24"><expr pos:start="3980:13" pos:end="3980:24"><name pos:start="3980:13" pos:end="3980:24">TARGET_SPARC</name></expr></argument>)</argument_list></call> <operator pos:start="3980:27" pos:end="3980:28">||</operator> <call pos:start="3980:30" pos:end="3980:48"><name pos:start="3980:30" pos:end="3980:36">defined</name><argument_list pos:start="3980:37" pos:end="3980:48">(<argument pos:start="3980:38" pos:end="3980:47"><expr pos:start="3980:38" pos:end="3980:47"><name pos:start="3980:38" pos:end="3980:47">TARGET_PPC</name></expr></argument>)</argument_list></call> <operator pos:start="3980:50" pos:end="3980:51">||</operator> <call pos:start="3980:53" pos:end="3980:73"><name pos:start="3980:53" pos:end="3980:59">defined</name><argument_list pos:start="3980:60" pos:end="3980:73">(<argument pos:start="3980:61" pos:end="3980:72"><expr pos:start="3980:61" pos:end="3980:72"><name pos:start="3980:61" pos:end="3980:72">TARGET_ALPHA</name></expr></argument>)</argument_list></call> <operator pos:start="3980:75" pos:end="3980:76">||</operator> \

    <call pos:start="3982:5" pos:end="3982:24"><name pos:start="3982:5" pos:end="3982:11">defined</name><argument_list pos:start="3982:12" pos:end="3982:24">(<argument pos:start="3982:13" pos:end="3982:23"><expr pos:start="3982:13" pos:end="3982:23"><name pos:start="3982:13" pos:end="3982:23">TARGET_M68K</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="3984:9" pos:end="3984:84"><expr pos:start="3984:9" pos:end="3984:83"><name pos:start="3984:9" pos:end="3984:11">ret</name> <operator pos:start="3984:13" pos:end="3984:13">=</operator> <call pos:start="3984:15" pos:end="3984:83"><name pos:start="3984:15" pos:end="3984:28">do_sigaltstack</name><argument_list pos:start="3984:29" pos:end="3984:83">(<argument pos:start="3984:30" pos:end="3984:33"><expr pos:start="3984:30" pos:end="3984:33"><name pos:start="3984:30" pos:end="3984:33">arg1</name></expr></argument>, <argument pos:start="3984:36" pos:end="3984:39"><expr pos:start="3984:36" pos:end="3984:39"><name pos:start="3984:36" pos:end="3984:39">arg2</name></expr></argument>, <argument pos:start="3984:42" pos:end="3984:82"><expr pos:start="3984:42" pos:end="3984:82"><call pos:start="3984:42" pos:end="3984:82"><name pos:start="3984:42" pos:end="3984:61">get_sp_from_cpustate</name><argument_list pos:start="3984:62" pos:end="3984:82">(<argument pos:start="3984:63" pos:end="3984:81"><expr pos:start="3984:63" pos:end="3984:81"><operator pos:start="3984:63" pos:end="3984:63">(</operator><name pos:start="3984:64" pos:end="3984:71">CPUState</name> <operator pos:start="3984:73" pos:end="3984:73">*</operator><operator pos:start="3984:74" pos:end="3984:74">)</operator><name pos:start="3984:75" pos:end="3984:81">cpu_env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3986:9" pos:end="3989:0">break;</break>

<cpp:else pos:start="3988:1" pos:end="3988:5">#<cpp:directive pos:start="3988:2" pos:end="3988:5">else</cpp:directive></cpp:else>

        <goto pos:start="3990:9" pos:end="3993:0">goto <name pos:start="3990:14" pos:end="3990:26">unimplemented</name>;</goto>

<cpp:endif pos:start="3992:1" pos:end="3992:6">#<cpp:directive pos:start="3992:2" pos:end="3992:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3994:5" pos:end="3994:28">case <expr pos:start="3994:10" pos:end="3994:27"><name pos:start="3994:10" pos:end="3994:27">TARGET_NR_sendfile</name></expr>:</case>

        <goto pos:start="3996:9" pos:end="3999:0">goto <name pos:start="3996:14" pos:end="3996:26">unimplemented</name>;</goto>

<cpp:ifdef pos:start="3998:1" pos:end="3998:24">#<cpp:directive pos:start="3998:2" pos:end="3998:6">ifdef</cpp:directive> <name pos:start="3998:8" pos:end="3998:24">TARGET_NR_getpmsg</name></cpp:ifdef>

    <case pos:start="4000:5" pos:end="4000:27">case <expr pos:start="4000:10" pos:end="4000:26"><name pos:start="4000:10" pos:end="4000:26">TARGET_NR_getpmsg</name></expr>:</case>

        <goto pos:start="4002:9" pos:end="4007:0">goto <name pos:start="4002:14" pos:end="4002:26">unimplemented</name>;</goto>

<cpp:endif pos:start="4004:1" pos:end="4004:6">#<cpp:directive pos:start="4004:2" pos:end="4004:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4006:1" pos:end="4006:24">#<cpp:directive pos:start="4006:2" pos:end="4006:6">ifdef</cpp:directive> <name pos:start="4006:8" pos:end="4006:24">TARGET_NR_putpmsg</name></cpp:ifdef>

    <case pos:start="4008:5" pos:end="4008:27">case <expr pos:start="4008:10" pos:end="4008:26"><name pos:start="4008:10" pos:end="4008:26">TARGET_NR_putpmsg</name></expr>:</case>

        <goto pos:start="4010:9" pos:end="4015:0">goto <name pos:start="4010:14" pos:end="4010:26">unimplemented</name>;</goto>

<cpp:endif pos:start="4012:1" pos:end="4012:6">#<cpp:directive pos:start="4012:2" pos:end="4012:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4014:1" pos:end="4014:22">#<cpp:directive pos:start="4014:2" pos:end="4014:6">ifdef</cpp:directive> <name pos:start="4014:8" pos:end="4014:22">TARGET_NR_vfork</name></cpp:ifdef>

    <case pos:start="4016:5" pos:end="4016:25">case <expr pos:start="4016:10" pos:end="4016:24"><name pos:start="4016:10" pos:end="4016:24">TARGET_NR_vfork</name></expr>:</case>

        <expr_stmt pos:start="4018:9" pos:end="4020:37"><expr pos:start="4018:9" pos:end="4020:36"><name pos:start="4018:9" pos:end="4018:11">ret</name> <operator pos:start="4018:13" pos:end="4018:13">=</operator> <call pos:start="4018:15" pos:end="4020:36"><name pos:start="4018:15" pos:end="4018:23">get_errno</name><argument_list pos:start="4018:24" pos:end="4020:36">(<argument pos:start="4018:25" pos:end="4020:35"><expr pos:start="4018:25" pos:end="4020:35"><call pos:start="4018:25" pos:end="4020:35"><name pos:start="4018:25" pos:end="4018:31">do_fork</name><argument_list pos:start="4018:32" pos:end="4020:35">(<argument pos:start="4018:33" pos:end="4018:39"><expr pos:start="4018:33" pos:end="4018:39"><name pos:start="4018:33" pos:end="4018:39">cpu_env</name></expr></argument>, <argument pos:start="4018:42" pos:end="4018:73"><expr pos:start="4018:42" pos:end="4018:73"><name pos:start="4018:42" pos:end="4018:52">CLONE_VFORK</name> <operator pos:start="4018:54" pos:end="4018:54">|</operator> <name pos:start="4018:56" pos:end="4018:63">CLONE_VM</name> <operator pos:start="4018:65" pos:end="4018:65">|</operator> <name pos:start="4018:67" pos:end="4018:73">SIGCHLD</name></expr></argument>,

                        <argument pos:start="4020:25" pos:end="4020:25"><expr pos:start="4020:25" pos:end="4020:25"><literal type="number" pos:start="4020:25" pos:end="4020:25">0</literal></expr></argument>, <argument pos:start="4020:28" pos:end="4020:28"><expr pos:start="4020:28" pos:end="4020:28"><literal type="number" pos:start="4020:28" pos:end="4020:28">0</literal></expr></argument>, <argument pos:start="4020:31" pos:end="4020:31"><expr pos:start="4020:31" pos:end="4020:31"><literal type="number" pos:start="4020:31" pos:end="4020:31">0</literal></expr></argument>, <argument pos:start="4020:34" pos:end="4020:34"><expr pos:start="4020:34" pos:end="4020:34"><literal type="number" pos:start="4020:34" pos:end="4020:34">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4022:9" pos:end="4027:0">break;</break>

<cpp:endif pos:start="4024:1" pos:end="4024:6">#<cpp:directive pos:start="4024:2" pos:end="4024:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4026:1" pos:end="4026:27">#<cpp:directive pos:start="4026:2" pos:end="4026:6">ifdef</cpp:directive> <name pos:start="4026:8" pos:end="4026:27">TARGET_NR_ugetrlimit</name></cpp:ifdef>

    <case pos:start="4028:5" pos:end="4028:30">case <expr pos:start="4028:10" pos:end="4028:29"><name pos:start="4028:10" pos:end="4028:29">TARGET_NR_ugetrlimit</name></expr>:</case>

    <block pos:start="4030:5" pos:end="4059:0">{<block_content pos:start="4032:9" pos:end="4052:14">

	<decl_stmt pos:start="4032:9" pos:end="4032:27"><decl pos:start="4032:9" pos:end="4032:26"><type pos:start="4032:9" pos:end="4032:21"><name pos:start="4032:9" pos:end="4032:21"><name pos:start="4032:9" pos:end="4032:14">struct</name> <name pos:start="4032:16" pos:end="4032:21">rlimit</name></name></type> <name pos:start="4032:23" pos:end="4032:26">rlim</name></decl>;</decl_stmt>

	<expr_stmt pos:start="4034:9" pos:end="4034:48"><expr pos:start="4034:9" pos:end="4034:47"><name pos:start="4034:9" pos:end="4034:11">ret</name> <operator pos:start="4034:13" pos:end="4034:13">=</operator> <call pos:start="4034:15" pos:end="4034:47"><name pos:start="4034:15" pos:end="4034:23">get_errno</name><argument_list pos:start="4034:24" pos:end="4034:47">(<argument pos:start="4034:25" pos:end="4034:46"><expr pos:start="4034:25" pos:end="4034:46"><call pos:start="4034:25" pos:end="4034:46"><name pos:start="4034:25" pos:end="4034:33">getrlimit</name><argument_list pos:start="4034:34" pos:end="4034:46">(<argument pos:start="4034:35" pos:end="4034:38"><expr pos:start="4034:35" pos:end="4034:38"><name pos:start="4034:35" pos:end="4034:38">arg1</name></expr></argument>, <argument pos:start="4034:41" pos:end="4034:45"><expr pos:start="4034:41" pos:end="4034:45"><operator pos:start="4034:41" pos:end="4034:41">&amp;</operator><name pos:start="4034:42" pos:end="4034:45">rlim</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="4036:9" pos:end="4050:9"><if pos:start="4036:9" pos:end="4050:9">if <condition pos:start="4036:12" pos:end="4036:27">(<expr pos:start="4036:13" pos:end="4036:26"><operator pos:start="4036:13" pos:end="4036:13">!</operator><call pos:start="4036:14" pos:end="4036:26"><name pos:start="4036:14" pos:end="4036:21">is_error</name><argument_list pos:start="4036:22" pos:end="4036:26">(<argument pos:start="4036:23" pos:end="4036:25"><expr pos:start="4036:23" pos:end="4036:25"><name pos:start="4036:23" pos:end="4036:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="4036:29" pos:end="4050:9">{<block_content pos:start="4038:13" pos:end="4048:53">

	    <decl_stmt pos:start="4038:13" pos:end="4038:46"><decl pos:start="4038:13" pos:end="4038:45"><type pos:start="4038:13" pos:end="4038:34"><name pos:start="4038:13" pos:end="4038:32"><name pos:start="4038:13" pos:end="4038:18">struct</name> <name pos:start="4038:20" pos:end="4038:32">target_rlimit</name></name> <modifier pos:start="4038:34" pos:end="4038:34">*</modifier></type><name pos:start="4038:35" pos:end="4038:45">target_rlim</name></decl>;</decl_stmt>

            <if_stmt pos:start="4040:13" pos:end="4042:28"><if pos:start="4040:13" pos:end="4042:28">if <condition pos:start="4040:16" pos:end="4040:70">(<expr pos:start="4040:17" pos:end="4040:69"><operator pos:start="4040:17" pos:end="4040:17">!</operator><call pos:start="4040:18" pos:end="4040:69"><name pos:start="4040:18" pos:end="4040:33">lock_user_struct</name><argument_list pos:start="4040:34" pos:end="4040:69">(<argument pos:start="4040:35" pos:end="4040:46"><expr pos:start="4040:35" pos:end="4040:46"><name pos:start="4040:35" pos:end="4040:46">VERIFY_WRITE</name></expr></argument>, <argument pos:start="4040:49" pos:end="4040:59"><expr pos:start="4040:49" pos:end="4040:59"><name pos:start="4040:49" pos:end="4040:59">target_rlim</name></expr></argument>, <argument pos:start="4040:62" pos:end="4040:65"><expr pos:start="4040:62" pos:end="4040:65"><name pos:start="4040:62" pos:end="4040:65">arg2</name></expr></argument>, <argument pos:start="4040:68" pos:end="4040:68"><expr pos:start="4040:68" pos:end="4040:68"><literal type="number" pos:start="4040:68" pos:end="4040:68">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4042:17" pos:end="4042:28"><block_content pos:start="4042:17" pos:end="4042:28">

                <goto pos:start="4042:17" pos:end="4042:28">goto <name pos:start="4042:22" pos:end="4042:27">efault</name>;</goto></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="4044:13" pos:end="4044:58"><expr pos:start="4044:13" pos:end="4044:57"><name pos:start="4044:13" pos:end="4044:33"><name pos:start="4044:13" pos:end="4044:23">target_rlim</name><operator pos:start="4044:24" pos:end="4044:25">-&gt;</operator><name pos:start="4044:26" pos:end="4044:33">rlim_cur</name></name> <operator pos:start="4044:35" pos:end="4044:35">=</operator> <call pos:start="4044:37" pos:end="4044:57"><name pos:start="4044:37" pos:end="4044:42">tswapl</name><argument_list pos:start="4044:43" pos:end="4044:57">(<argument pos:start="4044:44" pos:end="4044:56"><expr pos:start="4044:44" pos:end="4044:56"><name pos:start="4044:44" pos:end="4044:56"><name pos:start="4044:44" pos:end="4044:47">rlim</name><operator pos:start="4044:48" pos:end="4044:48">.</operator><name pos:start="4044:49" pos:end="4044:56">rlim_cur</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="4046:13" pos:end="4046:58"><expr pos:start="4046:13" pos:end="4046:57"><name pos:start="4046:13" pos:end="4046:33"><name pos:start="4046:13" pos:end="4046:23">target_rlim</name><operator pos:start="4046:24" pos:end="4046:25">-&gt;</operator><name pos:start="4046:26" pos:end="4046:33">rlim_max</name></name> <operator pos:start="4046:35" pos:end="4046:35">=</operator> <call pos:start="4046:37" pos:end="4046:57"><name pos:start="4046:37" pos:end="4046:42">tswapl</name><argument_list pos:start="4046:43" pos:end="4046:57">(<argument pos:start="4046:44" pos:end="4046:56"><expr pos:start="4046:44" pos:end="4046:56"><name pos:start="4046:44" pos:end="4046:56"><name pos:start="4046:44" pos:end="4046:47">rlim</name><operator pos:start="4046:48" pos:end="4046:48">.</operator><name pos:start="4046:49" pos:end="4046:56">rlim_max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="4048:13" pos:end="4048:53"><expr pos:start="4048:13" pos:end="4048:52"><call pos:start="4048:13" pos:end="4048:52"><name pos:start="4048:13" pos:end="4048:30">unlock_user_struct</name><argument_list pos:start="4048:31" pos:end="4048:52">(<argument pos:start="4048:32" pos:end="4048:42"><expr pos:start="4048:32" pos:end="4048:42"><name pos:start="4048:32" pos:end="4048:42">target_rlim</name></expr></argument>, <argument pos:start="4048:45" pos:end="4048:48"><expr pos:start="4048:45" pos:end="4048:48"><name pos:start="4048:45" pos:end="4048:48">arg2</name></expr></argument>, <argument pos:start="4048:51" pos:end="4048:51"><expr pos:start="4048:51" pos:end="4048:51"><literal type="number" pos:start="4048:51" pos:end="4048:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

	<break pos:start="4052:9" pos:end="4052:14">break;</break>

    </block_content>}</block>

<cpp:endif pos:start="4056:1" pos:end="4056:6">#<cpp:directive pos:start="4056:2" pos:end="4056:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4058:1" pos:end="4058:27">#<cpp:directive pos:start="4058:2" pos:end="4058:6">ifdef</cpp:directive> <name pos:start="4058:8" pos:end="4058:27">TARGET_NR_truncate64</name></cpp:ifdef>

    <case pos:start="4060:5" pos:end="4060:30">case <expr pos:start="4060:10" pos:end="4060:29"><name pos:start="4060:10" pos:end="4060:29">TARGET_NR_truncate64</name></expr>:</case>

        <if_stmt pos:start="4062:9" pos:end="4064:24"><if pos:start="4062:9" pos:end="4064:24">if <condition pos:start="4062:12" pos:end="4062:42">(<expr pos:start="4062:13" pos:end="4062:41"><operator pos:start="4062:13" pos:end="4062:13">!</operator><operator pos:start="4062:14" pos:end="4062:14">(</operator><name pos:start="4062:15" pos:end="4062:15">p</name> <operator pos:start="4062:17" pos:end="4062:17">=</operator> <call pos:start="4062:19" pos:end="4062:40"><name pos:start="4062:19" pos:end="4062:34">lock_user_string</name><argument_list pos:start="4062:35" pos:end="4062:40">(<argument pos:start="4062:36" pos:end="4062:39"><expr pos:start="4062:36" pos:end="4062:39"><name pos:start="4062:36" pos:end="4062:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="4062:41" pos:end="4062:41">)</operator></expr>)</condition><block type="pseudo" pos:start="4064:13" pos:end="4064:24"><block_content pos:start="4064:13" pos:end="4064:24">

            <goto pos:start="4064:13" pos:end="4064:24">goto <name pos:start="4064:18" pos:end="4064:23">efault</name>;</goto></block_content></block></if></if_stmt>

	<expr_stmt pos:start="4066:9" pos:end="4066:62"><expr pos:start="4066:9" pos:end="4066:61"><name pos:start="4066:9" pos:end="4066:11">ret</name> <operator pos:start="4066:13" pos:end="4066:13">=</operator> <call pos:start="4066:15" pos:end="4066:61"><name pos:start="4066:15" pos:end="4066:31">target_truncate64</name><argument_list pos:start="4066:32" pos:end="4066:61">(<argument pos:start="4066:33" pos:end="4066:39"><expr pos:start="4066:33" pos:end="4066:39"><name pos:start="4066:33" pos:end="4066:39">cpu_env</name></expr></argument>, <argument pos:start="4066:42" pos:end="4066:42"><expr pos:start="4066:42" pos:end="4066:42"><name pos:start="4066:42" pos:end="4066:42">p</name></expr></argument>, <argument pos:start="4066:45" pos:end="4066:48"><expr pos:start="4066:45" pos:end="4066:48"><name pos:start="4066:45" pos:end="4066:48">arg2</name></expr></argument>, <argument pos:start="4066:51" pos:end="4066:54"><expr pos:start="4066:51" pos:end="4066:54"><name pos:start="4066:51" pos:end="4066:54">arg3</name></expr></argument>, <argument pos:start="4066:57" pos:end="4066:60"><expr pos:start="4066:57" pos:end="4066:60"><name pos:start="4066:57" pos:end="4066:60">arg4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="4068:9" pos:end="4068:32"><expr pos:start="4068:9" pos:end="4068:31"><call pos:start="4068:9" pos:end="4068:31"><name pos:start="4068:9" pos:end="4068:19">unlock_user</name><argument_list pos:start="4068:20" pos:end="4068:31">(<argument pos:start="4068:21" pos:end="4068:21"><expr pos:start="4068:21" pos:end="4068:21"><name pos:start="4068:21" pos:end="4068:21">p</name></expr></argument>, <argument pos:start="4068:24" pos:end="4068:27"><expr pos:start="4068:24" pos:end="4068:27"><name pos:start="4068:24" pos:end="4068:27">arg1</name></expr></argument>, <argument pos:start="4068:30" pos:end="4068:30"><expr pos:start="4068:30" pos:end="4068:30"><literal type="number" pos:start="4068:30" pos:end="4068:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="4070:9" pos:end="4075:0">break;</break>

<cpp:endif pos:start="4072:1" pos:end="4072:6">#<cpp:directive pos:start="4072:2" pos:end="4072:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4074:1" pos:end="4074:28">#<cpp:directive pos:start="4074:2" pos:end="4074:6">ifdef</cpp:directive> <name pos:start="4074:8" pos:end="4074:28">TARGET_NR_ftruncate64</name></cpp:ifdef>

    <case pos:start="4076:5" pos:end="4076:31">case <expr pos:start="4076:10" pos:end="4076:30"><name pos:start="4076:10" pos:end="4076:30">TARGET_NR_ftruncate64</name></expr>:</case>

	<expr_stmt pos:start="4078:9" pos:end="4078:66"><expr pos:start="4078:9" pos:end="4078:65"><name pos:start="4078:9" pos:end="4078:11">ret</name> <operator pos:start="4078:13" pos:end="4078:13">=</operator> <call pos:start="4078:15" pos:end="4078:65"><name pos:start="4078:15" pos:end="4078:32">target_ftruncate64</name><argument_list pos:start="4078:33" pos:end="4078:65">(<argument pos:start="4078:34" pos:end="4078:40"><expr pos:start="4078:34" pos:end="4078:40"><name pos:start="4078:34" pos:end="4078:40">cpu_env</name></expr></argument>, <argument pos:start="4078:43" pos:end="4078:46"><expr pos:start="4078:43" pos:end="4078:46"><name pos:start="4078:43" pos:end="4078:46">arg1</name></expr></argument>, <argument pos:start="4078:49" pos:end="4078:52"><expr pos:start="4078:49" pos:end="4078:52"><name pos:start="4078:49" pos:end="4078:52">arg2</name></expr></argument>, <argument pos:start="4078:55" pos:end="4078:58"><expr pos:start="4078:55" pos:end="4078:58"><name pos:start="4078:55" pos:end="4078:58">arg3</name></expr></argument>, <argument pos:start="4078:61" pos:end="4078:64"><expr pos:start="4078:61" pos:end="4078:64"><name pos:start="4078:61" pos:end="4078:64">arg4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="4080:9" pos:end="4085:0">break;</break>

<cpp:endif pos:start="4082:1" pos:end="4082:6">#<cpp:directive pos:start="4082:2" pos:end="4082:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4084:1" pos:end="4084:23">#<cpp:directive pos:start="4084:2" pos:end="4084:6">ifdef</cpp:directive> <name pos:start="4084:8" pos:end="4084:23">TARGET_NR_stat64</name></cpp:ifdef>

    <case pos:start="4086:5" pos:end="4086:26">case <expr pos:start="4086:10" pos:end="4086:25"><name pos:start="4086:10" pos:end="4086:25">TARGET_NR_stat64</name></expr>:</case>

        <if_stmt pos:start="4088:9" pos:end="4090:24"><if pos:start="4088:9" pos:end="4090:24">if <condition pos:start="4088:12" pos:end="4088:42">(<expr pos:start="4088:13" pos:end="4088:41"><operator pos:start="4088:13" pos:end="4088:13">!</operator><operator pos:start="4088:14" pos:end="4088:14">(</operator><name pos:start="4088:15" pos:end="4088:15">p</name> <operator pos:start="4088:17" pos:end="4088:17">=</operator> <call pos:start="4088:19" pos:end="4088:40"><name pos:start="4088:19" pos:end="4088:34">lock_user_string</name><argument_list pos:start="4088:35" pos:end="4088:40">(<argument pos:start="4088:36" pos:end="4088:39"><expr pos:start="4088:36" pos:end="4088:39"><name pos:start="4088:36" pos:end="4088:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="4088:41" pos:end="4088:41">)</operator></expr>)</condition><block type="pseudo" pos:start="4090:13" pos:end="4090:24"><block_content pos:start="4090:13" pos:end="4090:24">

            <goto pos:start="4090:13" pos:end="4090:24">goto <name pos:start="4090:18" pos:end="4090:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="4092:9" pos:end="4092:44"><expr pos:start="4092:9" pos:end="4092:43"><name pos:start="4092:9" pos:end="4092:11">ret</name> <operator pos:start="4092:13" pos:end="4092:13">=</operator> <call pos:start="4092:15" pos:end="4092:43"><name pos:start="4092:15" pos:end="4092:23">get_errno</name><argument_list pos:start="4092:24" pos:end="4092:43">(<argument pos:start="4092:25" pos:end="4092:42"><expr pos:start="4092:25" pos:end="4092:42"><call pos:start="4092:25" pos:end="4092:42"><name pos:start="4092:25" pos:end="4092:28">stat</name><argument_list pos:start="4092:29" pos:end="4092:42">(<argument pos:start="4092:30" pos:end="4092:36"><expr pos:start="4092:30" pos:end="4092:36"><call pos:start="4092:30" pos:end="4092:36"><name pos:start="4092:30" pos:end="4092:33">path</name><argument_list pos:start="4092:34" pos:end="4092:36">(<argument pos:start="4092:35" pos:end="4092:35"><expr pos:start="4092:35" pos:end="4092:35"><name pos:start="4092:35" pos:end="4092:35">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4092:39" pos:end="4092:41"><expr pos:start="4092:39" pos:end="4092:41"><operator pos:start="4092:39" pos:end="4092:39">&amp;</operator><name pos:start="4092:40" pos:end="4092:41">st</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="4094:9" pos:end="4094:32"><expr pos:start="4094:9" pos:end="4094:31"><call pos:start="4094:9" pos:end="4094:31"><name pos:start="4094:9" pos:end="4094:19">unlock_user</name><argument_list pos:start="4094:20" pos:end="4094:31">(<argument pos:start="4094:21" pos:end="4094:21"><expr pos:start="4094:21" pos:end="4094:21"><name pos:start="4094:21" pos:end="4094:21">p</name></expr></argument>, <argument pos:start="4094:24" pos:end="4094:27"><expr pos:start="4094:24" pos:end="4094:27"><name pos:start="4094:24" pos:end="4094:27">arg1</name></expr></argument>, <argument pos:start="4094:30" pos:end="4094:30"><expr pos:start="4094:30" pos:end="4094:30"><literal type="number" pos:start="4094:30" pos:end="4094:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="4096:9" pos:end="4098:60"><if pos:start="4096:9" pos:end="4098:60">if <condition pos:start="4096:12" pos:end="4096:27">(<expr pos:start="4096:13" pos:end="4096:26"><operator pos:start="4096:13" pos:end="4096:13">!</operator><call pos:start="4096:14" pos:end="4096:26"><name pos:start="4096:14" pos:end="4096:21">is_error</name><argument_list pos:start="4096:22" pos:end="4096:26">(<argument pos:start="4096:23" pos:end="4096:25"><expr pos:start="4096:23" pos:end="4096:25"><name pos:start="4096:23" pos:end="4096:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4098:13" pos:end="4098:60"><block_content pos:start="4098:13" pos:end="4098:60">

            <expr_stmt pos:start="4098:13" pos:end="4098:60"><expr pos:start="4098:13" pos:end="4098:59"><name pos:start="4098:13" pos:end="4098:15">ret</name> <operator pos:start="4098:17" pos:end="4098:17">=</operator> <call pos:start="4098:19" pos:end="4098:59"><name pos:start="4098:19" pos:end="4098:39">host_to_target_stat64</name><argument_list pos:start="4098:40" pos:end="4098:59">(<argument pos:start="4098:41" pos:end="4098:47"><expr pos:start="4098:41" pos:end="4098:47"><name pos:start="4098:41" pos:end="4098:47">cpu_env</name></expr></argument>, <argument pos:start="4098:50" pos:end="4098:53"><expr pos:start="4098:50" pos:end="4098:53"><name pos:start="4098:50" pos:end="4098:53">arg2</name></expr></argument>, <argument pos:start="4098:56" pos:end="4098:58"><expr pos:start="4098:56" pos:end="4098:58"><operator pos:start="4098:56" pos:end="4098:56">&amp;</operator><name pos:start="4098:57" pos:end="4098:58">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="4100:9" pos:end="4105:0">break;</break>

<cpp:endif pos:start="4102:1" pos:end="4102:6">#<cpp:directive pos:start="4102:2" pos:end="4102:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4104:1" pos:end="4104:24">#<cpp:directive pos:start="4104:2" pos:end="4104:6">ifdef</cpp:directive> <name pos:start="4104:8" pos:end="4104:24">TARGET_NR_lstat64</name></cpp:ifdef>

    <case pos:start="4106:5" pos:end="4106:27">case <expr pos:start="4106:10" pos:end="4106:26"><name pos:start="4106:10" pos:end="4106:26">TARGET_NR_lstat64</name></expr>:</case>

        <if_stmt pos:start="4108:9" pos:end="4110:24"><if pos:start="4108:9" pos:end="4110:24">if <condition pos:start="4108:12" pos:end="4108:42">(<expr pos:start="4108:13" pos:end="4108:41"><operator pos:start="4108:13" pos:end="4108:13">!</operator><operator pos:start="4108:14" pos:end="4108:14">(</operator><name pos:start="4108:15" pos:end="4108:15">p</name> <operator pos:start="4108:17" pos:end="4108:17">=</operator> <call pos:start="4108:19" pos:end="4108:40"><name pos:start="4108:19" pos:end="4108:34">lock_user_string</name><argument_list pos:start="4108:35" pos:end="4108:40">(<argument pos:start="4108:36" pos:end="4108:39"><expr pos:start="4108:36" pos:end="4108:39"><name pos:start="4108:36" pos:end="4108:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="4108:41" pos:end="4108:41">)</operator></expr>)</condition><block type="pseudo" pos:start="4110:13" pos:end="4110:24"><block_content pos:start="4110:13" pos:end="4110:24">

            <goto pos:start="4110:13" pos:end="4110:24">goto <name pos:start="4110:18" pos:end="4110:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="4112:9" pos:end="4112:45"><expr pos:start="4112:9" pos:end="4112:44"><name pos:start="4112:9" pos:end="4112:11">ret</name> <operator pos:start="4112:13" pos:end="4112:13">=</operator> <call pos:start="4112:15" pos:end="4112:44"><name pos:start="4112:15" pos:end="4112:23">get_errno</name><argument_list pos:start="4112:24" pos:end="4112:44">(<argument pos:start="4112:25" pos:end="4112:43"><expr pos:start="4112:25" pos:end="4112:43"><call pos:start="4112:25" pos:end="4112:43"><name pos:start="4112:25" pos:end="4112:29">lstat</name><argument_list pos:start="4112:30" pos:end="4112:43">(<argument pos:start="4112:31" pos:end="4112:37"><expr pos:start="4112:31" pos:end="4112:37"><call pos:start="4112:31" pos:end="4112:37"><name pos:start="4112:31" pos:end="4112:34">path</name><argument_list pos:start="4112:35" pos:end="4112:37">(<argument pos:start="4112:36" pos:end="4112:36"><expr pos:start="4112:36" pos:end="4112:36"><name pos:start="4112:36" pos:end="4112:36">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4112:40" pos:end="4112:42"><expr pos:start="4112:40" pos:end="4112:42"><operator pos:start="4112:40" pos:end="4112:40">&amp;</operator><name pos:start="4112:41" pos:end="4112:42">st</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="4114:9" pos:end="4114:32"><expr pos:start="4114:9" pos:end="4114:31"><call pos:start="4114:9" pos:end="4114:31"><name pos:start="4114:9" pos:end="4114:19">unlock_user</name><argument_list pos:start="4114:20" pos:end="4114:31">(<argument pos:start="4114:21" pos:end="4114:21"><expr pos:start="4114:21" pos:end="4114:21"><name pos:start="4114:21" pos:end="4114:21">p</name></expr></argument>, <argument pos:start="4114:24" pos:end="4114:27"><expr pos:start="4114:24" pos:end="4114:27"><name pos:start="4114:24" pos:end="4114:27">arg1</name></expr></argument>, <argument pos:start="4114:30" pos:end="4114:30"><expr pos:start="4114:30" pos:end="4114:30"><literal type="number" pos:start="4114:30" pos:end="4114:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="4116:9" pos:end="4118:60"><if pos:start="4116:9" pos:end="4118:60">if <condition pos:start="4116:12" pos:end="4116:27">(<expr pos:start="4116:13" pos:end="4116:26"><operator pos:start="4116:13" pos:end="4116:13">!</operator><call pos:start="4116:14" pos:end="4116:26"><name pos:start="4116:14" pos:end="4116:21">is_error</name><argument_list pos:start="4116:22" pos:end="4116:26">(<argument pos:start="4116:23" pos:end="4116:25"><expr pos:start="4116:23" pos:end="4116:25"><name pos:start="4116:23" pos:end="4116:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4118:13" pos:end="4118:60"><block_content pos:start="4118:13" pos:end="4118:60">

            <expr_stmt pos:start="4118:13" pos:end="4118:60"><expr pos:start="4118:13" pos:end="4118:59"><name pos:start="4118:13" pos:end="4118:15">ret</name> <operator pos:start="4118:17" pos:end="4118:17">=</operator> <call pos:start="4118:19" pos:end="4118:59"><name pos:start="4118:19" pos:end="4118:39">host_to_target_stat64</name><argument_list pos:start="4118:40" pos:end="4118:59">(<argument pos:start="4118:41" pos:end="4118:47"><expr pos:start="4118:41" pos:end="4118:47"><name pos:start="4118:41" pos:end="4118:47">cpu_env</name></expr></argument>, <argument pos:start="4118:50" pos:end="4118:53"><expr pos:start="4118:50" pos:end="4118:53"><name pos:start="4118:50" pos:end="4118:53">arg2</name></expr></argument>, <argument pos:start="4118:56" pos:end="4118:58"><expr pos:start="4118:56" pos:end="4118:58"><operator pos:start="4118:56" pos:end="4118:56">&amp;</operator><name pos:start="4118:57" pos:end="4118:58">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="4120:9" pos:end="4125:0">break;</break>

<cpp:endif pos:start="4122:1" pos:end="4122:6">#<cpp:directive pos:start="4122:2" pos:end="4122:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4124:1" pos:end="4124:24">#<cpp:directive pos:start="4124:2" pos:end="4124:6">ifdef</cpp:directive> <name pos:start="4124:8" pos:end="4124:24">TARGET_NR_fstat64</name></cpp:ifdef>

    <case pos:start="4126:5" pos:end="4126:27">case <expr pos:start="4126:10" pos:end="4126:26"><name pos:start="4126:10" pos:end="4126:26">TARGET_NR_fstat64</name></expr>:</case>

        <expr_stmt pos:start="4128:9" pos:end="4128:42"><expr pos:start="4128:9" pos:end="4128:41"><name pos:start="4128:9" pos:end="4128:11">ret</name> <operator pos:start="4128:13" pos:end="4128:13">=</operator> <call pos:start="4128:15" pos:end="4128:41"><name pos:start="4128:15" pos:end="4128:23">get_errno</name><argument_list pos:start="4128:24" pos:end="4128:41">(<argument pos:start="4128:25" pos:end="4128:40"><expr pos:start="4128:25" pos:end="4128:40"><call pos:start="4128:25" pos:end="4128:40"><name pos:start="4128:25" pos:end="4128:29">fstat</name><argument_list pos:start="4128:30" pos:end="4128:40">(<argument pos:start="4128:31" pos:end="4128:34"><expr pos:start="4128:31" pos:end="4128:34"><name pos:start="4128:31" pos:end="4128:34">arg1</name></expr></argument>, <argument pos:start="4128:37" pos:end="4128:39"><expr pos:start="4128:37" pos:end="4128:39"><operator pos:start="4128:37" pos:end="4128:37">&amp;</operator><name pos:start="4128:38" pos:end="4128:39">st</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="4130:9" pos:end="4132:60"><if pos:start="4130:9" pos:end="4132:60">if <condition pos:start="4130:12" pos:end="4130:27">(<expr pos:start="4130:13" pos:end="4130:26"><operator pos:start="4130:13" pos:end="4130:13">!</operator><call pos:start="4130:14" pos:end="4130:26"><name pos:start="4130:14" pos:end="4130:21">is_error</name><argument_list pos:start="4130:22" pos:end="4130:26">(<argument pos:start="4130:23" pos:end="4130:25"><expr pos:start="4130:23" pos:end="4130:25"><name pos:start="4130:23" pos:end="4130:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4132:13" pos:end="4132:60"><block_content pos:start="4132:13" pos:end="4132:60">

            <expr_stmt pos:start="4132:13" pos:end="4132:60"><expr pos:start="4132:13" pos:end="4132:59"><name pos:start="4132:13" pos:end="4132:15">ret</name> <operator pos:start="4132:17" pos:end="4132:17">=</operator> <call pos:start="4132:19" pos:end="4132:59"><name pos:start="4132:19" pos:end="4132:39">host_to_target_stat64</name><argument_list pos:start="4132:40" pos:end="4132:59">(<argument pos:start="4132:41" pos:end="4132:47"><expr pos:start="4132:41" pos:end="4132:47"><name pos:start="4132:41" pos:end="4132:47">cpu_env</name></expr></argument>, <argument pos:start="4132:50" pos:end="4132:53"><expr pos:start="4132:50" pos:end="4132:53"><name pos:start="4132:50" pos:end="4132:53">arg2</name></expr></argument>, <argument pos:start="4132:56" pos:end="4132:58"><expr pos:start="4132:56" pos:end="4132:58"><operator pos:start="4132:56" pos:end="4132:56">&amp;</operator><name pos:start="4132:57" pos:end="4132:58">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="4134:9" pos:end="4143:0">break;</break>

<cpp:endif pos:start="4136:1" pos:end="4136:6">#<cpp:directive pos:start="4136:2" pos:end="4136:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="4138:1" pos:end="4140:61">#<cpp:directive pos:start="4138:2" pos:end="4138:3">if</cpp:directive> <expr pos:start="4138:5" pos:end="4140:61"><operator pos:start="4138:5" pos:end="4138:5">(</operator><call pos:start="4138:6" pos:end="4138:33"><name pos:start="4138:6" pos:end="4138:12">defined</name><argument_list pos:start="4138:13" pos:end="4138:33">(<argument pos:start="4138:14" pos:end="4138:32"><expr pos:start="4138:14" pos:end="4138:32"><name pos:start="4138:14" pos:end="4138:32">TARGET_NR_fstatat64</name></expr></argument>)</argument_list></call> <operator pos:start="4138:35" pos:end="4138:36">||</operator> <call pos:start="4138:38" pos:end="4138:66"><name pos:start="4138:38" pos:end="4138:44">defined</name><argument_list pos:start="4138:45" pos:end="4138:66">(<argument pos:start="4138:46" pos:end="4138:65"><expr pos:start="4138:46" pos:end="4138:65"><name pos:start="4138:46" pos:end="4138:65">TARGET_NR_newfstatat</name></expr></argument>)</argument_list></call><operator pos:start="4138:67" pos:end="4138:67">)</operator> <operator pos:start="4138:69" pos:end="4138:70">&amp;&amp;</operator> \

        <operator pos:start="4140:9" pos:end="4140:9">(</operator><call pos:start="4140:10" pos:end="4140:32"><name pos:start="4140:10" pos:end="4140:16">defined</name><argument_list pos:start="4140:17" pos:end="4140:32">(<argument pos:start="4140:18" pos:end="4140:31"><expr pos:start="4140:18" pos:end="4140:31"><name pos:start="4140:18" pos:end="4140:31">__NR_fstatat64</name></expr></argument>)</argument_list></call> <operator pos:start="4140:34" pos:end="4140:35">||</operator> <call pos:start="4140:37" pos:end="4140:60"><name pos:start="4140:37" pos:end="4140:43">defined</name><argument_list pos:start="4140:44" pos:end="4140:60">(<argument pos:start="4140:45" pos:end="4140:59"><expr pos:start="4140:45" pos:end="4140:59"><name pos:start="4140:45" pos:end="4140:59">__NR_newfstatat</name></expr></argument>)</argument_list></call><operator pos:start="4140:61" pos:end="4140:61">)</operator></expr></cpp:if>

<cpp:ifdef pos:start="4142:1" pos:end="4142:26">#<cpp:directive pos:start="4142:2" pos:end="4142:6">ifdef</cpp:directive> <name pos:start="4142:8" pos:end="4142:26">TARGET_NR_fstatat64</name></cpp:ifdef>

    <case pos:start="4144:5" pos:end="4149:0">case <expr pos:start="4144:10" pos:end="4144:28"><name pos:start="4144:10" pos:end="4144:28">TARGET_NR_fstatat64</name></expr>:</case>

<cpp:endif pos:start="4146:1" pos:end="4146:6">#<cpp:directive pos:start="4146:2" pos:end="4146:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4148:1" pos:end="4148:27">#<cpp:directive pos:start="4148:2" pos:end="4148:6">ifdef</cpp:directive> <name pos:start="4148:8" pos:end="4148:27">TARGET_NR_newfstatat</name></cpp:ifdef>

    <case pos:start="4150:5" pos:end="4153:0">case <expr pos:start="4150:10" pos:end="4150:29"><name pos:start="4150:10" pos:end="4150:29">TARGET_NR_newfstatat</name></expr>:</case>

<cpp:endif pos:start="4152:1" pos:end="4152:6">#<cpp:directive pos:start="4152:2" pos:end="4152:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="4154:9" pos:end="4159:0"><if pos:start="4154:9" pos:end="4159:0">if <condition pos:start="4154:12" pos:end="4154:42">(<expr pos:start="4154:13" pos:end="4154:41"><operator pos:start="4154:13" pos:end="4154:13">!</operator><operator pos:start="4154:14" pos:end="4154:14">(</operator><name pos:start="4154:15" pos:end="4154:15">p</name> <operator pos:start="4154:17" pos:end="4154:17">=</operator> <call pos:start="4154:19" pos:end="4154:40"><name pos:start="4154:19" pos:end="4154:34">lock_user_string</name><argument_list pos:start="4154:35" pos:end="4154:40">(<argument pos:start="4154:36" pos:end="4154:39"><expr pos:start="4154:36" pos:end="4154:39"><name pos:start="4154:36" pos:end="4154:39">arg2</name></expr></argument>)</argument_list></call><operator pos:start="4154:41" pos:end="4154:41">)</operator></expr>)</condition><block type="pseudo" pos:start="4156:13" pos:end="4159:0"><block_content pos:start="4156:13" pos:end="4159:0">

            <goto pos:start="4156:13" pos:end="4159:0">goto <name pos:start="4156:18" pos:end="4156:23">efault</name>;</goto></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="4158:1" pos:end="4158:21">#<cpp:directive pos:start="4158:2" pos:end="4158:6">ifdef</cpp:directive> <name pos:start="4158:8" pos:end="4158:21">__NR_fstatat64</name></cpp:ifdef>

        <expr_stmt pos:start="4160:9" pos:end="4163:0"><expr pos:start="4160:9" pos:end="4160:64"><name pos:start="4160:9" pos:end="4160:11">ret</name> <operator pos:start="4160:13" pos:end="4160:13">=</operator> <call pos:start="4160:15" pos:end="4160:64"><name pos:start="4160:15" pos:end="4160:23">get_errno</name><argument_list pos:start="4160:24" pos:end="4160:64">(<argument pos:start="4160:25" pos:end="4160:63"><expr pos:start="4160:25" pos:end="4160:63"><call pos:start="4160:25" pos:end="4160:63"><name pos:start="4160:25" pos:end="4160:37">sys_fstatat64</name><argument_list pos:start="4160:38" pos:end="4160:63">(<argument pos:start="4160:39" pos:end="4160:42"><expr pos:start="4160:39" pos:end="4160:42"><name pos:start="4160:39" pos:end="4160:42">arg1</name></expr></argument>, <argument pos:start="4160:45" pos:end="4160:51"><expr pos:start="4160:45" pos:end="4160:51"><call pos:start="4160:45" pos:end="4160:51"><name pos:start="4160:45" pos:end="4160:48">path</name><argument_list pos:start="4160:49" pos:end="4160:51">(<argument pos:start="4160:50" pos:end="4160:50"><expr pos:start="4160:50" pos:end="4160:50"><name pos:start="4160:50" pos:end="4160:50">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4160:54" pos:end="4160:56"><expr pos:start="4160:54" pos:end="4160:56"><operator pos:start="4160:54" pos:end="4160:54">&amp;</operator><name pos:start="4160:55" pos:end="4160:56">st</name></expr></argument>, <argument pos:start="4160:59" pos:end="4160:62"><expr pos:start="4160:59" pos:end="4160:62"><name pos:start="4160:59" pos:end="4160:62">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="4162:1" pos:end="4162:5">#<cpp:directive pos:start="4162:2" pos:end="4162:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="4164:9" pos:end="4167:0"><expr pos:start="4164:9" pos:end="4164:65"><name pos:start="4164:9" pos:end="4164:11">ret</name> <operator pos:start="4164:13" pos:end="4164:13">=</operator> <call pos:start="4164:15" pos:end="4164:65"><name pos:start="4164:15" pos:end="4164:23">get_errno</name><argument_list pos:start="4164:24" pos:end="4164:65">(<argument pos:start="4164:25" pos:end="4164:64"><expr pos:start="4164:25" pos:end="4164:64"><call pos:start="4164:25" pos:end="4164:64"><name pos:start="4164:25" pos:end="4164:38">sys_newfstatat</name><argument_list pos:start="4164:39" pos:end="4164:64">(<argument pos:start="4164:40" pos:end="4164:43"><expr pos:start="4164:40" pos:end="4164:43"><name pos:start="4164:40" pos:end="4164:43">arg1</name></expr></argument>, <argument pos:start="4164:46" pos:end="4164:52"><expr pos:start="4164:46" pos:end="4164:52"><call pos:start="4164:46" pos:end="4164:52"><name pos:start="4164:46" pos:end="4164:49">path</name><argument_list pos:start="4164:50" pos:end="4164:52">(<argument pos:start="4164:51" pos:end="4164:51"><expr pos:start="4164:51" pos:end="4164:51"><name pos:start="4164:51" pos:end="4164:51">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4164:55" pos:end="4164:57"><expr pos:start="4164:55" pos:end="4164:57"><operator pos:start="4164:55" pos:end="4164:55">&amp;</operator><name pos:start="4164:56" pos:end="4164:57">st</name></expr></argument>, <argument pos:start="4164:60" pos:end="4164:63"><expr pos:start="4164:60" pos:end="4164:63"><name pos:start="4164:60" pos:end="4164:63">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="4166:1" pos:end="4166:6">#<cpp:directive pos:start="4166:2" pos:end="4166:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="4168:9" pos:end="4170:60"><if pos:start="4168:9" pos:end="4170:60">if <condition pos:start="4168:12" pos:end="4168:27">(<expr pos:start="4168:13" pos:end="4168:26"><operator pos:start="4168:13" pos:end="4168:13">!</operator><call pos:start="4168:14" pos:end="4168:26"><name pos:start="4168:14" pos:end="4168:21">is_error</name><argument_list pos:start="4168:22" pos:end="4168:26">(<argument pos:start="4168:23" pos:end="4168:25"><expr pos:start="4168:23" pos:end="4168:25"><name pos:start="4168:23" pos:end="4168:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4170:13" pos:end="4170:60"><block_content pos:start="4170:13" pos:end="4170:60">

            <expr_stmt pos:start="4170:13" pos:end="4170:60"><expr pos:start="4170:13" pos:end="4170:59"><name pos:start="4170:13" pos:end="4170:15">ret</name> <operator pos:start="4170:17" pos:end="4170:17">=</operator> <call pos:start="4170:19" pos:end="4170:59"><name pos:start="4170:19" pos:end="4170:39">host_to_target_stat64</name><argument_list pos:start="4170:40" pos:end="4170:59">(<argument pos:start="4170:41" pos:end="4170:47"><expr pos:start="4170:41" pos:end="4170:47"><name pos:start="4170:41" pos:end="4170:47">cpu_env</name></expr></argument>, <argument pos:start="4170:50" pos:end="4170:53"><expr pos:start="4170:50" pos:end="4170:53"><name pos:start="4170:50" pos:end="4170:53">arg3</name></expr></argument>, <argument pos:start="4170:56" pos:end="4170:58"><expr pos:start="4170:56" pos:end="4170:58"><operator pos:start="4170:56" pos:end="4170:56">&amp;</operator><name pos:start="4170:57" pos:end="4170:58">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="4172:9" pos:end="4177:0">break;</break>

<cpp:endif pos:start="4174:1" pos:end="4174:6">#<cpp:directive pos:start="4174:2" pos:end="4174:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4176:1" pos:end="4176:16">#<cpp:directive pos:start="4176:2" pos:end="4176:6">ifdef</cpp:directive> <name pos:start="4176:8" pos:end="4176:16">USE_UID16</name></cpp:ifdef>

    <case pos:start="4178:5" pos:end="4178:26">case <expr pos:start="4178:10" pos:end="4178:25"><name pos:start="4178:10" pos:end="4178:25">TARGET_NR_lchown</name></expr>:</case>

        <if_stmt pos:start="4180:9" pos:end="4182:24"><if pos:start="4180:9" pos:end="4182:24">if <condition pos:start="4180:12" pos:end="4180:42">(<expr pos:start="4180:13" pos:end="4180:41"><operator pos:start="4180:13" pos:end="4180:13">!</operator><operator pos:start="4180:14" pos:end="4180:14">(</operator><name pos:start="4180:15" pos:end="4180:15">p</name> <operator pos:start="4180:17" pos:end="4180:17">=</operator> <call pos:start="4180:19" pos:end="4180:40"><name pos:start="4180:19" pos:end="4180:34">lock_user_string</name><argument_list pos:start="4180:35" pos:end="4180:40">(<argument pos:start="4180:36" pos:end="4180:39"><expr pos:start="4180:36" pos:end="4180:39"><name pos:start="4180:36" pos:end="4180:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="4180:41" pos:end="4180:41">)</operator></expr>)</condition><block type="pseudo" pos:start="4182:13" pos:end="4182:24"><block_content pos:start="4182:13" pos:end="4182:24">

            <goto pos:start="4182:13" pos:end="4182:24">goto <name pos:start="4182:18" pos:end="4182:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="4184:9" pos:end="4184:73"><expr pos:start="4184:9" pos:end="4184:72"><name pos:start="4184:9" pos:end="4184:11">ret</name> <operator pos:start="4184:13" pos:end="4184:13">=</operator> <call pos:start="4184:15" pos:end="4184:72"><name pos:start="4184:15" pos:end="4184:23">get_errno</name><argument_list pos:start="4184:24" pos:end="4184:72">(<argument pos:start="4184:25" pos:end="4184:71"><expr pos:start="4184:25" pos:end="4184:71"><call pos:start="4184:25" pos:end="4184:71"><name pos:start="4184:25" pos:end="4184:30">lchown</name><argument_list pos:start="4184:31" pos:end="4184:71">(<argument pos:start="4184:32" pos:end="4184:32"><expr pos:start="4184:32" pos:end="4184:32"><name pos:start="4184:32" pos:end="4184:32">p</name></expr></argument>, <argument pos:start="4184:35" pos:end="4184:51"><expr pos:start="4184:35" pos:end="4184:51"><call pos:start="4184:35" pos:end="4184:51"><name pos:start="4184:35" pos:end="4184:45">low2highuid</name><argument_list pos:start="4184:46" pos:end="4184:51">(<argument pos:start="4184:47" pos:end="4184:50"><expr pos:start="4184:47" pos:end="4184:50"><name pos:start="4184:47" pos:end="4184:50">arg2</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4184:54" pos:end="4184:70"><expr pos:start="4184:54" pos:end="4184:70"><call pos:start="4184:54" pos:end="4184:70"><name pos:start="4184:54" pos:end="4184:64">low2highgid</name><argument_list pos:start="4184:65" pos:end="4184:70">(<argument pos:start="4184:66" pos:end="4184:69"><expr pos:start="4184:66" pos:end="4184:69"><name pos:start="4184:66" pos:end="4184:69">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="4186:9" pos:end="4186:32"><expr pos:start="4186:9" pos:end="4186:31"><call pos:start="4186:9" pos:end="4186:31"><name pos:start="4186:9" pos:end="4186:19">unlock_user</name><argument_list pos:start="4186:20" pos:end="4186:31">(<argument pos:start="4186:21" pos:end="4186:21"><expr pos:start="4186:21" pos:end="4186:21"><name pos:start="4186:21" pos:end="4186:21">p</name></expr></argument>, <argument pos:start="4186:24" pos:end="4186:27"><expr pos:start="4186:24" pos:end="4186:27"><name pos:start="4186:24" pos:end="4186:27">arg1</name></expr></argument>, <argument pos:start="4186:30" pos:end="4186:30"><expr pos:start="4186:30" pos:end="4186:30"><literal type="number" pos:start="4186:30" pos:end="4186:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4188:9" pos:end="4188:14">break;</break>

    <case pos:start="4190:5" pos:end="4190:26">case <expr pos:start="4190:10" pos:end="4190:25"><name pos:start="4190:10" pos:end="4190:25">TARGET_NR_getuid</name></expr>:</case>

        <expr_stmt pos:start="4192:9" pos:end="4192:47"><expr pos:start="4192:9" pos:end="4192:46"><name pos:start="4192:9" pos:end="4192:11">ret</name> <operator pos:start="4192:13" pos:end="4192:13">=</operator> <call pos:start="4192:15" pos:end="4192:46"><name pos:start="4192:15" pos:end="4192:23">get_errno</name><argument_list pos:start="4192:24" pos:end="4192:46">(<argument pos:start="4192:25" pos:end="4192:45"><expr pos:start="4192:25" pos:end="4192:45"><call pos:start="4192:25" pos:end="4192:45"><name pos:start="4192:25" pos:end="4192:35">high2lowuid</name><argument_list pos:start="4192:36" pos:end="4192:45">(<argument pos:start="4192:37" pos:end="4192:44"><expr pos:start="4192:37" pos:end="4192:44"><call pos:start="4192:37" pos:end="4192:44"><name pos:start="4192:37" pos:end="4192:42">getuid</name><argument_list pos:start="4192:43" pos:end="4192:44">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4194:9" pos:end="4194:14">break;</break>

    <case pos:start="4196:5" pos:end="4196:26">case <expr pos:start="4196:10" pos:end="4196:25"><name pos:start="4196:10" pos:end="4196:25">TARGET_NR_getgid</name></expr>:</case>

        <expr_stmt pos:start="4198:9" pos:end="4198:47"><expr pos:start="4198:9" pos:end="4198:46"><name pos:start="4198:9" pos:end="4198:11">ret</name> <operator pos:start="4198:13" pos:end="4198:13">=</operator> <call pos:start="4198:15" pos:end="4198:46"><name pos:start="4198:15" pos:end="4198:23">get_errno</name><argument_list pos:start="4198:24" pos:end="4198:46">(<argument pos:start="4198:25" pos:end="4198:45"><expr pos:start="4198:25" pos:end="4198:45"><call pos:start="4198:25" pos:end="4198:45"><name pos:start="4198:25" pos:end="4198:35">high2lowgid</name><argument_list pos:start="4198:36" pos:end="4198:45">(<argument pos:start="4198:37" pos:end="4198:44"><expr pos:start="4198:37" pos:end="4198:44"><call pos:start="4198:37" pos:end="4198:44"><name pos:start="4198:37" pos:end="4198:42">getgid</name><argument_list pos:start="4198:43" pos:end="4198:44">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4200:9" pos:end="4200:14">break;</break>

    <case pos:start="4202:5" pos:end="4202:27">case <expr pos:start="4202:10" pos:end="4202:26"><name pos:start="4202:10" pos:end="4202:26">TARGET_NR_geteuid</name></expr>:</case>

        <expr_stmt pos:start="4204:9" pos:end="4204:48"><expr pos:start="4204:9" pos:end="4204:47"><name pos:start="4204:9" pos:end="4204:11">ret</name> <operator pos:start="4204:13" pos:end="4204:13">=</operator> <call pos:start="4204:15" pos:end="4204:47"><name pos:start="4204:15" pos:end="4204:23">get_errno</name><argument_list pos:start="4204:24" pos:end="4204:47">(<argument pos:start="4204:25" pos:end="4204:46"><expr pos:start="4204:25" pos:end="4204:46"><call pos:start="4204:25" pos:end="4204:46"><name pos:start="4204:25" pos:end="4204:35">high2lowuid</name><argument_list pos:start="4204:36" pos:end="4204:46">(<argument pos:start="4204:37" pos:end="4204:45"><expr pos:start="4204:37" pos:end="4204:45"><call pos:start="4204:37" pos:end="4204:45"><name pos:start="4204:37" pos:end="4204:43">geteuid</name><argument_list pos:start="4204:44" pos:end="4204:45">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4206:9" pos:end="4206:14">break;</break>

    <case pos:start="4208:5" pos:end="4208:27">case <expr pos:start="4208:10" pos:end="4208:26"><name pos:start="4208:10" pos:end="4208:26">TARGET_NR_getegid</name></expr>:</case>

        <expr_stmt pos:start="4210:9" pos:end="4210:48"><expr pos:start="4210:9" pos:end="4210:47"><name pos:start="4210:9" pos:end="4210:11">ret</name> <operator pos:start="4210:13" pos:end="4210:13">=</operator> <call pos:start="4210:15" pos:end="4210:47"><name pos:start="4210:15" pos:end="4210:23">get_errno</name><argument_list pos:start="4210:24" pos:end="4210:47">(<argument pos:start="4210:25" pos:end="4210:46"><expr pos:start="4210:25" pos:end="4210:46"><call pos:start="4210:25" pos:end="4210:46"><name pos:start="4210:25" pos:end="4210:35">high2lowgid</name><argument_list pos:start="4210:36" pos:end="4210:46">(<argument pos:start="4210:37" pos:end="4210:45"><expr pos:start="4210:37" pos:end="4210:45"><call pos:start="4210:37" pos:end="4210:45"><name pos:start="4210:37" pos:end="4210:43">getegid</name><argument_list pos:start="4210:44" pos:end="4210:45">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4212:9" pos:end="4212:14">break;</break>

    <case pos:start="4214:5" pos:end="4214:28">case <expr pos:start="4214:10" pos:end="4214:27"><name pos:start="4214:10" pos:end="4214:27">TARGET_NR_setreuid</name></expr>:</case>

        <expr_stmt pos:start="4216:9" pos:end="4216:72"><expr pos:start="4216:9" pos:end="4216:71"><name pos:start="4216:9" pos:end="4216:11">ret</name> <operator pos:start="4216:13" pos:end="4216:13">=</operator> <call pos:start="4216:15" pos:end="4216:71"><name pos:start="4216:15" pos:end="4216:23">get_errno</name><argument_list pos:start="4216:24" pos:end="4216:71">(<argument pos:start="4216:25" pos:end="4216:70"><expr pos:start="4216:25" pos:end="4216:70"><call pos:start="4216:25" pos:end="4216:70"><name pos:start="4216:25" pos:end="4216:32">setreuid</name><argument_list pos:start="4216:33" pos:end="4216:70">(<argument pos:start="4216:34" pos:end="4216:50"><expr pos:start="4216:34" pos:end="4216:50"><call pos:start="4216:34" pos:end="4216:50"><name pos:start="4216:34" pos:end="4216:44">low2highuid</name><argument_list pos:start="4216:45" pos:end="4216:50">(<argument pos:start="4216:46" pos:end="4216:49"><expr pos:start="4216:46" pos:end="4216:49"><name pos:start="4216:46" pos:end="4216:49">arg1</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4216:53" pos:end="4216:69"><expr pos:start="4216:53" pos:end="4216:69"><call pos:start="4216:53" pos:end="4216:69"><name pos:start="4216:53" pos:end="4216:63">low2highuid</name><argument_list pos:start="4216:64" pos:end="4216:69">(<argument pos:start="4216:65" pos:end="4216:68"><expr pos:start="4216:65" pos:end="4216:68"><name pos:start="4216:65" pos:end="4216:68">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4218:9" pos:end="4218:14">break;</break>

    <case pos:start="4220:5" pos:end="4220:28">case <expr pos:start="4220:10" pos:end="4220:27"><name pos:start="4220:10" pos:end="4220:27">TARGET_NR_setregid</name></expr>:</case>

        <expr_stmt pos:start="4222:9" pos:end="4222:72"><expr pos:start="4222:9" pos:end="4222:71"><name pos:start="4222:9" pos:end="4222:11">ret</name> <operator pos:start="4222:13" pos:end="4222:13">=</operator> <call pos:start="4222:15" pos:end="4222:71"><name pos:start="4222:15" pos:end="4222:23">get_errno</name><argument_list pos:start="4222:24" pos:end="4222:71">(<argument pos:start="4222:25" pos:end="4222:70"><expr pos:start="4222:25" pos:end="4222:70"><call pos:start="4222:25" pos:end="4222:70"><name pos:start="4222:25" pos:end="4222:32">setregid</name><argument_list pos:start="4222:33" pos:end="4222:70">(<argument pos:start="4222:34" pos:end="4222:50"><expr pos:start="4222:34" pos:end="4222:50"><call pos:start="4222:34" pos:end="4222:50"><name pos:start="4222:34" pos:end="4222:44">low2highgid</name><argument_list pos:start="4222:45" pos:end="4222:50">(<argument pos:start="4222:46" pos:end="4222:49"><expr pos:start="4222:46" pos:end="4222:49"><name pos:start="4222:46" pos:end="4222:49">arg1</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4222:53" pos:end="4222:69"><expr pos:start="4222:53" pos:end="4222:69"><call pos:start="4222:53" pos:end="4222:69"><name pos:start="4222:53" pos:end="4222:63">low2highgid</name><argument_list pos:start="4222:64" pos:end="4222:69">(<argument pos:start="4222:65" pos:end="4222:68"><expr pos:start="4222:65" pos:end="4222:68"><name pos:start="4222:65" pos:end="4222:68">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4224:9" pos:end="4224:14">break;</break>

    <case pos:start="4226:5" pos:end="4226:29">case <expr pos:start="4226:10" pos:end="4226:28"><name pos:start="4226:10" pos:end="4226:28">TARGET_NR_getgroups</name></expr>:</case>

        <block pos:start="4228:9" pos:end="4264:9">{<block_content pos:start="4230:13" pos:end="4262:13">

            <decl_stmt pos:start="4230:13" pos:end="4230:34"><decl pos:start="4230:13" pos:end="4230:33"><type pos:start="4230:13" pos:end="4230:15"><name pos:start="4230:13" pos:end="4230:15">int</name></type> <name pos:start="4230:17" pos:end="4230:26">gidsetsize</name> <init pos:start="4230:28" pos:end="4230:33">= <expr pos:start="4230:30" pos:end="4230:33"><name pos:start="4230:30" pos:end="4230:33">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="4232:13" pos:end="4232:39"><decl pos:start="4232:13" pos:end="4232:38"><type pos:start="4232:13" pos:end="4232:22"><name pos:start="4232:13" pos:end="4232:20">uint16_t</name> <modifier pos:start="4232:22" pos:end="4232:22">*</modifier></type><name pos:start="4232:23" pos:end="4232:38">target_grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="4234:13" pos:end="4234:29"><decl pos:start="4234:13" pos:end="4234:28"><type pos:start="4234:13" pos:end="4234:19"><name pos:start="4234:13" pos:end="4234:17">gid_t</name> <modifier pos:start="4234:19" pos:end="4234:19">*</modifier></type><name pos:start="4234:20" pos:end="4234:28">grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="4236:13" pos:end="4236:18"><decl pos:start="4236:13" pos:end="4236:17"><type pos:start="4236:13" pos:end="4236:15"><name pos:start="4236:13" pos:end="4236:15">int</name></type> <name pos:start="4236:17" pos:end="4236:17">i</name></decl>;</decl_stmt>



            <expr_stmt pos:start="4240:13" pos:end="4240:59"><expr pos:start="4240:13" pos:end="4240:58"><name pos:start="4240:13" pos:end="4240:21">grouplist</name> <operator pos:start="4240:23" pos:end="4240:23">=</operator> <call pos:start="4240:25" pos:end="4240:58"><name pos:start="4240:25" pos:end="4240:30">alloca</name><argument_list pos:start="4240:31" pos:end="4240:58">(<argument pos:start="4240:32" pos:end="4240:57"><expr pos:start="4240:32" pos:end="4240:57"><name pos:start="4240:32" pos:end="4240:41">gidsetsize</name> <operator pos:start="4240:43" pos:end="4240:43">*</operator> <sizeof pos:start="4240:45" pos:end="4240:57">sizeof<argument_list pos:start="4240:51" pos:end="4240:57">(<argument pos:start="4240:52" pos:end="4240:56"><expr pos:start="4240:52" pos:end="4240:56"><name pos:start="4240:52" pos:end="4240:56">gid_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="4242:13" pos:end="4242:62"><expr pos:start="4242:13" pos:end="4242:61"><name pos:start="4242:13" pos:end="4242:15">ret</name> <operator pos:start="4242:17" pos:end="4242:17">=</operator> <call pos:start="4242:19" pos:end="4242:61"><name pos:start="4242:19" pos:end="4242:27">get_errno</name><argument_list pos:start="4242:28" pos:end="4242:61">(<argument pos:start="4242:29" pos:end="4242:60"><expr pos:start="4242:29" pos:end="4242:60"><call pos:start="4242:29" pos:end="4242:60"><name pos:start="4242:29" pos:end="4242:37">getgroups</name><argument_list pos:start="4242:38" pos:end="4242:60">(<argument pos:start="4242:39" pos:end="4242:48"><expr pos:start="4242:39" pos:end="4242:48"><name pos:start="4242:39" pos:end="4242:48">gidsetsize</name></expr></argument>, <argument pos:start="4242:51" pos:end="4242:59"><expr pos:start="4242:51" pos:end="4242:59"><name pos:start="4242:51" pos:end="4242:59">grouplist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="4244:13" pos:end="4246:22"><if pos:start="4244:13" pos:end="4246:22">if <condition pos:start="4244:16" pos:end="4244:32">(<expr pos:start="4244:17" pos:end="4244:31"><name pos:start="4244:17" pos:end="4244:26">gidsetsize</name> <operator pos:start="4244:28" pos:end="4244:29">==</operator> <literal type="number" pos:start="4244:31" pos:end="4244:31">0</literal></expr>)</condition><block type="pseudo" pos:start="4246:17" pos:end="4246:22"><block_content pos:start="4246:17" pos:end="4246:22">

                <break pos:start="4246:17" pos:end="4246:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="4248:13" pos:end="4262:13"><if pos:start="4248:13" pos:end="4262:13">if <condition pos:start="4248:16" pos:end="4248:31">(<expr pos:start="4248:17" pos:end="4248:30"><operator pos:start="4248:17" pos:end="4248:17">!</operator><call pos:start="4248:18" pos:end="4248:30"><name pos:start="4248:18" pos:end="4248:25">is_error</name><argument_list pos:start="4248:26" pos:end="4248:30">(<argument pos:start="4248:27" pos:end="4248:29"><expr pos:start="4248:27" pos:end="4248:29"><name pos:start="4248:27" pos:end="4248:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="4248:33" pos:end="4262:13">{<block_content pos:start="4250:17" pos:end="4260:68">

                <expr_stmt pos:start="4250:17" pos:end="4250:84"><expr pos:start="4250:17" pos:end="4250:83"><name pos:start="4250:17" pos:end="4250:32">target_grouplist</name> <operator pos:start="4250:34" pos:end="4250:34">=</operator> <call pos:start="4250:36" pos:end="4250:83"><name pos:start="4250:36" pos:end="4250:44">lock_user</name><argument_list pos:start="4250:45" pos:end="4250:83">(<argument pos:start="4250:46" pos:end="4250:57"><expr pos:start="4250:46" pos:end="4250:57"><name pos:start="4250:46" pos:end="4250:57">VERIFY_WRITE</name></expr></argument>, <argument pos:start="4250:60" pos:end="4250:63"><expr pos:start="4250:60" pos:end="4250:63"><name pos:start="4250:60" pos:end="4250:63">arg2</name></expr></argument>, <argument pos:start="4250:66" pos:end="4250:79"><expr pos:start="4250:66" pos:end="4250:79"><name pos:start="4250:66" pos:end="4250:75">gidsetsize</name> <operator pos:start="4250:77" pos:end="4250:77">*</operator> <literal type="number" pos:start="4250:79" pos:end="4250:79">2</literal></expr></argument>, <argument pos:start="4250:82" pos:end="4250:82"><expr pos:start="4250:82" pos:end="4250:82"><literal type="number" pos:start="4250:82" pos:end="4250:82">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="4252:17" pos:end="4254:32"><if pos:start="4252:17" pos:end="4254:32">if <condition pos:start="4252:20" pos:end="4252:38">(<expr pos:start="4252:21" pos:end="4252:37"><operator pos:start="4252:21" pos:end="4252:21">!</operator><name pos:start="4252:22" pos:end="4252:37">target_grouplist</name></expr>)</condition><block type="pseudo" pos:start="4254:21" pos:end="4254:32"><block_content pos:start="4254:21" pos:end="4254:32">

                    <goto pos:start="4254:21" pos:end="4254:32">goto <name pos:start="4254:26" pos:end="4254:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <for pos:start="4256:17" pos:end="4258:64">for<control pos:start="4256:20" pos:end="4256:39">(<init pos:start="4256:21" pos:end="4256:26"><expr pos:start="4256:21" pos:end="4256:25"><name pos:start="4256:21" pos:end="4256:21">i</name> <operator pos:start="4256:23" pos:end="4256:23">=</operator> <literal type="number" pos:start="4256:25" pos:end="4256:25">0</literal></expr>;</init><condition pos:start="4256:27" pos:end="4256:34"><expr pos:start="4256:27" pos:end="4256:33"><name pos:start="4256:27" pos:end="4256:27">i</name> <operator pos:start="4256:29" pos:end="4256:29">&lt;</operator> <name pos:start="4256:31" pos:end="4256:33">ret</name></expr>;</condition> <incr pos:start="4256:36" pos:end="4256:38"><expr pos:start="4256:36" pos:end="4256:38"><name pos:start="4256:36" pos:end="4256:36">i</name><operator pos:start="4256:37" pos:end="4256:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="4258:21" pos:end="4258:64"><block_content pos:start="4258:21" pos:end="4258:64">

                    <expr_stmt pos:start="4258:21" pos:end="4258:64"><expr pos:start="4258:21" pos:end="4258:63"><name pos:start="4258:21" pos:end="4258:39"><name pos:start="4258:21" pos:end="4258:36">target_grouplist</name><index pos:start="4258:37" pos:end="4258:39">[<expr pos:start="4258:38" pos:end="4258:38"><name pos:start="4258:38" pos:end="4258:38">i</name></expr>]</index></name> <operator pos:start="4258:41" pos:end="4258:41">=</operator> <call pos:start="4258:43" pos:end="4258:63"><name pos:start="4258:43" pos:end="4258:49">tswap16</name><argument_list pos:start="4258:50" pos:end="4258:63">(<argument pos:start="4258:51" pos:end="4258:62"><expr pos:start="4258:51" pos:end="4258:62"><name pos:start="4258:51" pos:end="4258:62"><name pos:start="4258:51" pos:end="4258:59">grouplist</name><index pos:start="4258:60" pos:end="4258:62">[<expr pos:start="4258:61" pos:end="4258:61"><name pos:start="4258:61" pos:end="4258:61">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="4260:17" pos:end="4260:68"><expr pos:start="4260:17" pos:end="4260:67"><call pos:start="4260:17" pos:end="4260:67"><name pos:start="4260:17" pos:end="4260:27">unlock_user</name><argument_list pos:start="4260:28" pos:end="4260:67">(<argument pos:start="4260:29" pos:end="4260:44"><expr pos:start="4260:29" pos:end="4260:44"><name pos:start="4260:29" pos:end="4260:44">target_grouplist</name></expr></argument>, <argument pos:start="4260:47" pos:end="4260:50"><expr pos:start="4260:47" pos:end="4260:50"><name pos:start="4260:47" pos:end="4260:50">arg2</name></expr></argument>, <argument pos:start="4260:53" pos:end="4260:66"><expr pos:start="4260:53" pos:end="4260:66"><name pos:start="4260:53" pos:end="4260:62">gidsetsize</name> <operator pos:start="4260:64" pos:end="4260:64">*</operator> <literal type="number" pos:start="4260:66" pos:end="4260:66">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="4266:9" pos:end="4266:14">break;</break>

    <case pos:start="4268:5" pos:end="4268:29">case <expr pos:start="4268:10" pos:end="4268:28"><name pos:start="4268:10" pos:end="4268:28">TARGET_NR_setgroups</name></expr>:</case>

        <block pos:start="4270:9" pos:end="4302:9">{<block_content pos:start="4272:13" pos:end="4300:62">

            <decl_stmt pos:start="4272:13" pos:end="4272:34"><decl pos:start="4272:13" pos:end="4272:33"><type pos:start="4272:13" pos:end="4272:15"><name pos:start="4272:13" pos:end="4272:15">int</name></type> <name pos:start="4272:17" pos:end="4272:26">gidsetsize</name> <init pos:start="4272:28" pos:end="4272:33">= <expr pos:start="4272:30" pos:end="4272:33"><name pos:start="4272:30" pos:end="4272:33">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="4274:13" pos:end="4274:39"><decl pos:start="4274:13" pos:end="4274:38"><type pos:start="4274:13" pos:end="4274:22"><name pos:start="4274:13" pos:end="4274:20">uint16_t</name> <modifier pos:start="4274:22" pos:end="4274:22">*</modifier></type><name pos:start="4274:23" pos:end="4274:38">target_grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="4276:13" pos:end="4276:29"><decl pos:start="4276:13" pos:end="4276:28"><type pos:start="4276:13" pos:end="4276:19"><name pos:start="4276:13" pos:end="4276:17">gid_t</name> <modifier pos:start="4276:19" pos:end="4276:19">*</modifier></type><name pos:start="4276:20" pos:end="4276:28">grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="4278:13" pos:end="4278:18"><decl pos:start="4278:13" pos:end="4278:17"><type pos:start="4278:13" pos:end="4278:15"><name pos:start="4278:13" pos:end="4278:15">int</name></type> <name pos:start="4278:17" pos:end="4278:17">i</name></decl>;</decl_stmt>



            <expr_stmt pos:start="4282:13" pos:end="4282:59"><expr pos:start="4282:13" pos:end="4282:58"><name pos:start="4282:13" pos:end="4282:21">grouplist</name> <operator pos:start="4282:23" pos:end="4282:23">=</operator> <call pos:start="4282:25" pos:end="4282:58"><name pos:start="4282:25" pos:end="4282:30">alloca</name><argument_list pos:start="4282:31" pos:end="4282:58">(<argument pos:start="4282:32" pos:end="4282:57"><expr pos:start="4282:32" pos:end="4282:57"><name pos:start="4282:32" pos:end="4282:41">gidsetsize</name> <operator pos:start="4282:43" pos:end="4282:43">*</operator> <sizeof pos:start="4282:45" pos:end="4282:57">sizeof<argument_list pos:start="4282:51" pos:end="4282:57">(<argument pos:start="4282:52" pos:end="4282:56"><expr pos:start="4282:52" pos:end="4282:56"><name pos:start="4282:52" pos:end="4282:56">gid_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="4284:13" pos:end="4284:79"><expr pos:start="4284:13" pos:end="4284:78"><name pos:start="4284:13" pos:end="4284:28">target_grouplist</name> <operator pos:start="4284:30" pos:end="4284:30">=</operator> <call pos:start="4284:32" pos:end="4284:78"><name pos:start="4284:32" pos:end="4284:40">lock_user</name><argument_list pos:start="4284:41" pos:end="4284:78">(<argument pos:start="4284:42" pos:end="4284:52"><expr pos:start="4284:42" pos:end="4284:52"><name pos:start="4284:42" pos:end="4284:52">VERIFY_READ</name></expr></argument>, <argument pos:start="4284:55" pos:end="4284:58"><expr pos:start="4284:55" pos:end="4284:58"><name pos:start="4284:55" pos:end="4284:58">arg2</name></expr></argument>, <argument pos:start="4284:61" pos:end="4284:74"><expr pos:start="4284:61" pos:end="4284:74"><name pos:start="4284:61" pos:end="4284:70">gidsetsize</name> <operator pos:start="4284:72" pos:end="4284:72">*</operator> <literal type="number" pos:start="4284:74" pos:end="4284:74">2</literal></expr></argument>, <argument pos:start="4284:77" pos:end="4284:77"><expr pos:start="4284:77" pos:end="4284:77"><literal type="number" pos:start="4284:77" pos:end="4284:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="4286:13" pos:end="4292:13"><if pos:start="4286:13" pos:end="4292:13">if <condition pos:start="4286:16" pos:end="4286:34">(<expr pos:start="4286:17" pos:end="4286:33"><operator pos:start="4286:17" pos:end="4286:17">!</operator><name pos:start="4286:18" pos:end="4286:33">target_grouplist</name></expr>)</condition> <block pos:start="4286:36" pos:end="4292:13">{<block_content pos:start="4288:17" pos:end="4290:26">

                <expr_stmt pos:start="4288:17" pos:end="4288:37"><expr pos:start="4288:17" pos:end="4288:36"><name pos:start="4288:17" pos:end="4288:19">ret</name> <operator pos:start="4288:21" pos:end="4288:21">=</operator> <operator pos:start="4288:23" pos:end="4288:23">-</operator><name pos:start="4288:24" pos:end="4288:36">TARGET_EFAULT</name></expr>;</expr_stmt>

                <goto pos:start="4290:17" pos:end="4290:26">goto <name pos:start="4290:22" pos:end="4290:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <for pos:start="4294:13" pos:end="4296:60">for<control pos:start="4294:16" pos:end="4294:42">(<init pos:start="4294:17" pos:end="4294:22"><expr pos:start="4294:17" pos:end="4294:21"><name pos:start="4294:17" pos:end="4294:17">i</name> <operator pos:start="4294:19" pos:end="4294:19">=</operator> <literal type="number" pos:start="4294:21" pos:end="4294:21">0</literal></expr>;</init><condition pos:start="4294:23" pos:end="4294:37"><expr pos:start="4294:23" pos:end="4294:36"><name pos:start="4294:23" pos:end="4294:23">i</name> <operator pos:start="4294:25" pos:end="4294:25">&lt;</operator> <name pos:start="4294:27" pos:end="4294:36">gidsetsize</name></expr>;</condition> <incr pos:start="4294:39" pos:end="4294:41"><expr pos:start="4294:39" pos:end="4294:41"><name pos:start="4294:39" pos:end="4294:39">i</name><operator pos:start="4294:40" pos:end="4294:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="4296:17" pos:end="4296:60"><block_content pos:start="4296:17" pos:end="4296:60">

                <expr_stmt pos:start="4296:17" pos:end="4296:60"><expr pos:start="4296:17" pos:end="4296:59"><name pos:start="4296:17" pos:end="4296:28"><name pos:start="4296:17" pos:end="4296:25">grouplist</name><index pos:start="4296:26" pos:end="4296:28">[<expr pos:start="4296:27" pos:end="4296:27"><name pos:start="4296:27" pos:end="4296:27">i</name></expr>]</index></name> <operator pos:start="4296:30" pos:end="4296:30">=</operator> <call pos:start="4296:32" pos:end="4296:59"><name pos:start="4296:32" pos:end="4296:38">tswap16</name><argument_list pos:start="4296:39" pos:end="4296:59">(<argument pos:start="4296:40" pos:end="4296:58"><expr pos:start="4296:40" pos:end="4296:58"><name pos:start="4296:40" pos:end="4296:58"><name pos:start="4296:40" pos:end="4296:55">target_grouplist</name><index pos:start="4296:56" pos:end="4296:58">[<expr pos:start="4296:57" pos:end="4296:57"><name pos:start="4296:57" pos:end="4296:57">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="4298:13" pos:end="4298:51"><expr pos:start="4298:13" pos:end="4298:50"><call pos:start="4298:13" pos:end="4298:50"><name pos:start="4298:13" pos:end="4298:23">unlock_user</name><argument_list pos:start="4298:24" pos:end="4298:50">(<argument pos:start="4298:25" pos:end="4298:40"><expr pos:start="4298:25" pos:end="4298:40"><name pos:start="4298:25" pos:end="4298:40">target_grouplist</name></expr></argument>, <argument pos:start="4298:43" pos:end="4298:46"><expr pos:start="4298:43" pos:end="4298:46"><name pos:start="4298:43" pos:end="4298:46">arg2</name></expr></argument>, <argument pos:start="4298:49" pos:end="4298:49"><expr pos:start="4298:49" pos:end="4298:49"><literal type="number" pos:start="4298:49" pos:end="4298:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="4300:13" pos:end="4300:62"><expr pos:start="4300:13" pos:end="4300:61"><name pos:start="4300:13" pos:end="4300:15">ret</name> <operator pos:start="4300:17" pos:end="4300:17">=</operator> <call pos:start="4300:19" pos:end="4300:61"><name pos:start="4300:19" pos:end="4300:27">get_errno</name><argument_list pos:start="4300:28" pos:end="4300:61">(<argument pos:start="4300:29" pos:end="4300:60"><expr pos:start="4300:29" pos:end="4300:60"><call pos:start="4300:29" pos:end="4300:60"><name pos:start="4300:29" pos:end="4300:37">setgroups</name><argument_list pos:start="4300:38" pos:end="4300:60">(<argument pos:start="4300:39" pos:end="4300:48"><expr pos:start="4300:39" pos:end="4300:48"><name pos:start="4300:39" pos:end="4300:48">gidsetsize</name></expr></argument>, <argument pos:start="4300:51" pos:end="4300:59"><expr pos:start="4300:51" pos:end="4300:59"><name pos:start="4300:51" pos:end="4300:59">grouplist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="4304:9" pos:end="4304:14">break;</break>

    <case pos:start="4306:5" pos:end="4306:26">case <expr pos:start="4306:10" pos:end="4306:25"><name pos:start="4306:10" pos:end="4306:25">TARGET_NR_fchown</name></expr>:</case>

        <expr_stmt pos:start="4308:9" pos:end="4308:76"><expr pos:start="4308:9" pos:end="4308:75"><name pos:start="4308:9" pos:end="4308:11">ret</name> <operator pos:start="4308:13" pos:end="4308:13">=</operator> <call pos:start="4308:15" pos:end="4308:75"><name pos:start="4308:15" pos:end="4308:23">get_errno</name><argument_list pos:start="4308:24" pos:end="4308:75">(<argument pos:start="4308:25" pos:end="4308:74"><expr pos:start="4308:25" pos:end="4308:74"><call pos:start="4308:25" pos:end="4308:74"><name pos:start="4308:25" pos:end="4308:30">fchown</name><argument_list pos:start="4308:31" pos:end="4308:74">(<argument pos:start="4308:32" pos:end="4308:35"><expr pos:start="4308:32" pos:end="4308:35"><name pos:start="4308:32" pos:end="4308:35">arg1</name></expr></argument>, <argument pos:start="4308:38" pos:end="4308:54"><expr pos:start="4308:38" pos:end="4308:54"><call pos:start="4308:38" pos:end="4308:54"><name pos:start="4308:38" pos:end="4308:48">low2highuid</name><argument_list pos:start="4308:49" pos:end="4308:54">(<argument pos:start="4308:50" pos:end="4308:53"><expr pos:start="4308:50" pos:end="4308:53"><name pos:start="4308:50" pos:end="4308:53">arg2</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4308:57" pos:end="4308:73"><expr pos:start="4308:57" pos:end="4308:73"><call pos:start="4308:57" pos:end="4308:73"><name pos:start="4308:57" pos:end="4308:67">low2highgid</name><argument_list pos:start="4308:68" pos:end="4308:73">(<argument pos:start="4308:69" pos:end="4308:72"><expr pos:start="4308:69" pos:end="4308:72"><name pos:start="4308:69" pos:end="4308:72">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4310:9" pos:end="4313:0">break;</break>

<cpp:if pos:start="4312:1" pos:end="4312:57">#<cpp:directive pos:start="4312:2" pos:end="4312:3">if</cpp:directive> <expr pos:start="4312:5" pos:end="4312:57"><call pos:start="4312:5" pos:end="4312:31"><name pos:start="4312:5" pos:end="4312:11">defined</name><argument_list pos:start="4312:12" pos:end="4312:31">(<argument pos:start="4312:13" pos:end="4312:30"><expr pos:start="4312:13" pos:end="4312:30"><name pos:start="4312:13" pos:end="4312:30">TARGET_NR_fchownat</name></expr></argument>)</argument_list></call> <operator pos:start="4312:33" pos:end="4312:34">&amp;&amp;</operator> <call pos:start="4312:36" pos:end="4312:57"><name pos:start="4312:36" pos:end="4312:42">defined</name><argument_list pos:start="4312:43" pos:end="4312:57">(<argument pos:start="4312:44" pos:end="4312:56"><expr pos:start="4312:44" pos:end="4312:56"><name pos:start="4312:44" pos:end="4312:56">__NR_fchownat</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="4314:5" pos:end="4314:28">case <expr pos:start="4314:10" pos:end="4314:27"><name pos:start="4314:10" pos:end="4314:27">TARGET_NR_fchownat</name></expr>:</case>

        <if_stmt pos:start="4316:9" pos:end="4318:24"><if pos:start="4316:9" pos:end="4318:24">if <condition pos:start="4316:12" pos:end="4316:42">(<expr pos:start="4316:13" pos:end="4316:41"><operator pos:start="4316:13" pos:end="4316:13">!</operator><operator pos:start="4316:14" pos:end="4316:14">(</operator><name pos:start="4316:15" pos:end="4316:15">p</name> <operator pos:start="4316:17" pos:end="4316:17">=</operator> <call pos:start="4316:19" pos:end="4316:40"><name pos:start="4316:19" pos:end="4316:34">lock_user_string</name><argument_list pos:start="4316:35" pos:end="4316:40">(<argument pos:start="4316:36" pos:end="4316:39"><expr pos:start="4316:36" pos:end="4316:39"><name pos:start="4316:36" pos:end="4316:39">arg2</name></expr></argument>)</argument_list></call><operator pos:start="4316:41" pos:end="4316:41">)</operator></expr>)</condition><block type="pseudo" pos:start="4318:13" pos:end="4318:24"><block_content pos:start="4318:13" pos:end="4318:24"> 

            <goto pos:start="4318:13" pos:end="4318:24">goto <name pos:start="4318:18" pos:end="4318:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="4320:9" pos:end="4320:91"><expr pos:start="4320:9" pos:end="4320:90"><name pos:start="4320:9" pos:end="4320:11">ret</name> <operator pos:start="4320:13" pos:end="4320:13">=</operator> <call pos:start="4320:15" pos:end="4320:90"><name pos:start="4320:15" pos:end="4320:23">get_errno</name><argument_list pos:start="4320:24" pos:end="4320:90">(<argument pos:start="4320:25" pos:end="4320:89"><expr pos:start="4320:25" pos:end="4320:89"><call pos:start="4320:25" pos:end="4320:89"><name pos:start="4320:25" pos:end="4320:36">sys_fchownat</name><argument_list pos:start="4320:37" pos:end="4320:89">(<argument pos:start="4320:38" pos:end="4320:41"><expr pos:start="4320:38" pos:end="4320:41"><name pos:start="4320:38" pos:end="4320:41">arg1</name></expr></argument>, <argument pos:start="4320:44" pos:end="4320:44"><expr pos:start="4320:44" pos:end="4320:44"><name pos:start="4320:44" pos:end="4320:44">p</name></expr></argument>, <argument pos:start="4320:47" pos:end="4320:63"><expr pos:start="4320:47" pos:end="4320:63"><call pos:start="4320:47" pos:end="4320:63"><name pos:start="4320:47" pos:end="4320:57">low2highuid</name><argument_list pos:start="4320:58" pos:end="4320:63">(<argument pos:start="4320:59" pos:end="4320:62"><expr pos:start="4320:59" pos:end="4320:62"><name pos:start="4320:59" pos:end="4320:62">arg3</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4320:66" pos:end="4320:82"><expr pos:start="4320:66" pos:end="4320:82"><call pos:start="4320:66" pos:end="4320:82"><name pos:start="4320:66" pos:end="4320:76">low2highgid</name><argument_list pos:start="4320:77" pos:end="4320:82">(<argument pos:start="4320:78" pos:end="4320:81"><expr pos:start="4320:78" pos:end="4320:81"><name pos:start="4320:78" pos:end="4320:81">arg4</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4320:85" pos:end="4320:88"><expr pos:start="4320:85" pos:end="4320:88"><name pos:start="4320:85" pos:end="4320:88">arg5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="4322:9" pos:end="4322:32"><expr pos:start="4322:9" pos:end="4322:31"><call pos:start="4322:9" pos:end="4322:31"><name pos:start="4322:9" pos:end="4322:19">unlock_user</name><argument_list pos:start="4322:20" pos:end="4322:31">(<argument pos:start="4322:21" pos:end="4322:21"><expr pos:start="4322:21" pos:end="4322:21"><name pos:start="4322:21" pos:end="4322:21">p</name></expr></argument>, <argument pos:start="4322:24" pos:end="4322:27"><expr pos:start="4322:24" pos:end="4322:27"><name pos:start="4322:24" pos:end="4322:27">arg2</name></expr></argument>, <argument pos:start="4322:30" pos:end="4322:30"><expr pos:start="4322:30" pos:end="4322:30"><literal type="number" pos:start="4322:30" pos:end="4322:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4324:9" pos:end="4329:0">break;</break>

<cpp:endif pos:start="4326:1" pos:end="4326:6">#<cpp:directive pos:start="4326:2" pos:end="4326:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4328:1" pos:end="4328:26">#<cpp:directive pos:start="4328:2" pos:end="4328:6">ifdef</cpp:directive> <name pos:start="4328:8" pos:end="4328:26">TARGET_NR_setresuid</name></cpp:ifdef>

    <case pos:start="4330:5" pos:end="4330:29">case <expr pos:start="4330:10" pos:end="4330:28"><name pos:start="4330:10" pos:end="4330:28">TARGET_NR_setresuid</name></expr>:</case>

        <expr_stmt pos:start="4332:9" pos:end="4336:54"><expr pos:start="4332:9" pos:end="4336:53"><name pos:start="4332:9" pos:end="4332:11">ret</name> <operator pos:start="4332:13" pos:end="4332:13">=</operator> <call pos:start="4332:15" pos:end="4336:53"><name pos:start="4332:15" pos:end="4332:23">get_errno</name><argument_list pos:start="4332:24" pos:end="4336:53">(<argument pos:start="4332:25" pos:end="4336:52"><expr pos:start="4332:25" pos:end="4336:52"><call pos:start="4332:25" pos:end="4336:52"><name pos:start="4332:25" pos:end="4332:33">setresuid</name><argument_list pos:start="4332:34" pos:end="4336:52">(<argument pos:start="4332:35" pos:end="4332:51"><expr pos:start="4332:35" pos:end="4332:51"><call pos:start="4332:35" pos:end="4332:51"><name pos:start="4332:35" pos:end="4332:45">low2highuid</name><argument_list pos:start="4332:46" pos:end="4332:51">(<argument pos:start="4332:47" pos:end="4332:50"><expr pos:start="4332:47" pos:end="4332:50"><name pos:start="4332:47" pos:end="4332:50">arg1</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="4334:35" pos:end="4334:51"><expr pos:start="4334:35" pos:end="4334:51"><call pos:start="4334:35" pos:end="4334:51"><name pos:start="4334:35" pos:end="4334:45">low2highuid</name><argument_list pos:start="4334:46" pos:end="4334:51">(<argument pos:start="4334:47" pos:end="4334:50"><expr pos:start="4334:47" pos:end="4334:50"><name pos:start="4334:47" pos:end="4334:50">arg2</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="4336:35" pos:end="4336:51"><expr pos:start="4336:35" pos:end="4336:51"><call pos:start="4336:35" pos:end="4336:51"><name pos:start="4336:35" pos:end="4336:45">low2highuid</name><argument_list pos:start="4336:46" pos:end="4336:51">(<argument pos:start="4336:47" pos:end="4336:50"><expr pos:start="4336:47" pos:end="4336:50"><name pos:start="4336:47" pos:end="4336:50">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4338:9" pos:end="4343:0">break;</break>

<cpp:endif pos:start="4340:1" pos:end="4340:6">#<cpp:directive pos:start="4340:2" pos:end="4340:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4342:1" pos:end="4342:26">#<cpp:directive pos:start="4342:2" pos:end="4342:6">ifdef</cpp:directive> <name pos:start="4342:8" pos:end="4342:26">TARGET_NR_getresuid</name></cpp:ifdef>

    <case pos:start="4344:5" pos:end="4344:29">case <expr pos:start="4344:10" pos:end="4344:28"><name pos:start="4344:10" pos:end="4344:28">TARGET_NR_getresuid</name></expr>:</case>

        <block pos:start="4346:9" pos:end="4364:9">{<block_content pos:start="4348:13" pos:end="4362:13">

            <decl_stmt pos:start="4348:13" pos:end="4348:35"><decl pos:start="4348:13" pos:end="4348:22"><type pos:start="4348:13" pos:end="4348:17"><name pos:start="4348:13" pos:end="4348:17">uid_t</name></type> <name pos:start="4348:19" pos:end="4348:22">ruid</name></decl>, <decl pos:start="4348:25" pos:end="4348:28"><type ref="prev" pos:start="4348:13" pos:end="4348:17"/><name pos:start="4348:25" pos:end="4348:28">euid</name></decl>, <decl pos:start="4348:31" pos:end="4348:34"><type ref="prev" pos:start="4348:13" pos:end="4348:17"/><name pos:start="4348:31" pos:end="4348:34">suid</name></decl>;</decl_stmt>

            <expr_stmt pos:start="4350:13" pos:end="4350:60"><expr pos:start="4350:13" pos:end="4350:59"><name pos:start="4350:13" pos:end="4350:15">ret</name> <operator pos:start="4350:17" pos:end="4350:17">=</operator> <call pos:start="4350:19" pos:end="4350:59"><name pos:start="4350:19" pos:end="4350:27">get_errno</name><argument_list pos:start="4350:28" pos:end="4350:59">(<argument pos:start="4350:29" pos:end="4350:58"><expr pos:start="4350:29" pos:end="4350:58"><call pos:start="4350:29" pos:end="4350:58"><name pos:start="4350:29" pos:end="4350:37">getresuid</name><argument_list pos:start="4350:38" pos:end="4350:58">(<argument pos:start="4350:39" pos:end="4350:43"><expr pos:start="4350:39" pos:end="4350:43"><operator pos:start="4350:39" pos:end="4350:39">&amp;</operator><name pos:start="4350:40" pos:end="4350:43">ruid</name></expr></argument>, <argument pos:start="4350:46" pos:end="4350:50"><expr pos:start="4350:46" pos:end="4350:50"><operator pos:start="4350:46" pos:end="4350:46">&amp;</operator><name pos:start="4350:47" pos:end="4350:50">euid</name></expr></argument>, <argument pos:start="4350:53" pos:end="4350:57"><expr pos:start="4350:53" pos:end="4350:57"><operator pos:start="4350:53" pos:end="4350:53">&amp;</operator><name pos:start="4350:54" pos:end="4350:57">suid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="4352:13" pos:end="4362:13"><if pos:start="4352:13" pos:end="4362:13">if <condition pos:start="4352:16" pos:end="4352:31">(<expr pos:start="4352:17" pos:end="4352:30"><operator pos:start="4352:17" pos:end="4352:17">!</operator><call pos:start="4352:18" pos:end="4352:30"><name pos:start="4352:18" pos:end="4352:25">is_error</name><argument_list pos:start="4352:26" pos:end="4352:30">(<argument pos:start="4352:27" pos:end="4352:29"><expr pos:start="4352:27" pos:end="4352:29"><name pos:start="4352:27" pos:end="4352:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="4352:33" pos:end="4362:13">{<block_content pos:start="4354:17" pos:end="4360:32">

                <if_stmt pos:start="4354:17" pos:end="4360:32"><if pos:start="4354:17" pos:end="4360:32">if <condition pos:start="4354:20" pos:end="4358:61">(<expr pos:start="4354:21" pos:end="4358:60"><call pos:start="4354:21" pos:end="4354:57"><name pos:start="4354:21" pos:end="4354:32">put_user_u16</name><argument_list pos:start="4354:33" pos:end="4354:57">(<argument pos:start="4354:34" pos:end="4354:50"><expr pos:start="4354:34" pos:end="4354:50"><call pos:start="4354:34" pos:end="4354:50"><name pos:start="4354:34" pos:end="4354:44">high2lowuid</name><argument_list pos:start="4354:45" pos:end="4354:50">(<argument pos:start="4354:46" pos:end="4354:49"><expr pos:start="4354:46" pos:end="4354:49"><name pos:start="4354:46" pos:end="4354:49">ruid</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4354:53" pos:end="4354:56"><expr pos:start="4354:53" pos:end="4354:56"><name pos:start="4354:53" pos:end="4354:56">arg1</name></expr></argument>)</argument_list></call>

                    <operator pos:start="4356:21" pos:end="4356:22">||</operator> <call pos:start="4356:24" pos:end="4356:60"><name pos:start="4356:24" pos:end="4356:35">put_user_u16</name><argument_list pos:start="4356:36" pos:end="4356:60">(<argument pos:start="4356:37" pos:end="4356:53"><expr pos:start="4356:37" pos:end="4356:53"><call pos:start="4356:37" pos:end="4356:53"><name pos:start="4356:37" pos:end="4356:47">high2lowuid</name><argument_list pos:start="4356:48" pos:end="4356:53">(<argument pos:start="4356:49" pos:end="4356:52"><expr pos:start="4356:49" pos:end="4356:52"><name pos:start="4356:49" pos:end="4356:52">euid</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4356:56" pos:end="4356:59"><expr pos:start="4356:56" pos:end="4356:59"><name pos:start="4356:56" pos:end="4356:59">arg2</name></expr></argument>)</argument_list></call>

                    <operator pos:start="4358:21" pos:end="4358:22">||</operator> <call pos:start="4358:24" pos:end="4358:60"><name pos:start="4358:24" pos:end="4358:35">put_user_u16</name><argument_list pos:start="4358:36" pos:end="4358:60">(<argument pos:start="4358:37" pos:end="4358:53"><expr pos:start="4358:37" pos:end="4358:53"><call pos:start="4358:37" pos:end="4358:53"><name pos:start="4358:37" pos:end="4358:47">high2lowuid</name><argument_list pos:start="4358:48" pos:end="4358:53">(<argument pos:start="4358:49" pos:end="4358:52"><expr pos:start="4358:49" pos:end="4358:52"><name pos:start="4358:49" pos:end="4358:52">suid</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4358:56" pos:end="4358:59"><expr pos:start="4358:56" pos:end="4358:59"><name pos:start="4358:56" pos:end="4358:59">arg3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4360:21" pos:end="4360:32"><block_content pos:start="4360:21" pos:end="4360:32">

                    <goto pos:start="4360:21" pos:end="4360:32">goto <name pos:start="4360:26" pos:end="4360:31">efault</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="4366:9" pos:end="4371:0">break;</break>

<cpp:endif pos:start="4368:1" pos:end="4368:6">#<cpp:directive pos:start="4368:2" pos:end="4368:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4370:1" pos:end="4370:26">#<cpp:directive pos:start="4370:2" pos:end="4370:6">ifdef</cpp:directive> <name pos:start="4370:8" pos:end="4370:26">TARGET_NR_getresgid</name></cpp:ifdef>

    <case pos:start="4372:5" pos:end="4372:29">case <expr pos:start="4372:10" pos:end="4372:28"><name pos:start="4372:10" pos:end="4372:28">TARGET_NR_setresgid</name></expr>:</case>

        <expr_stmt pos:start="4374:9" pos:end="4378:54"><expr pos:start="4374:9" pos:end="4378:53"><name pos:start="4374:9" pos:end="4374:11">ret</name> <operator pos:start="4374:13" pos:end="4374:13">=</operator> <call pos:start="4374:15" pos:end="4378:53"><name pos:start="4374:15" pos:end="4374:23">get_errno</name><argument_list pos:start="4374:24" pos:end="4378:53">(<argument pos:start="4374:25" pos:end="4378:52"><expr pos:start="4374:25" pos:end="4378:52"><call pos:start="4374:25" pos:end="4378:52"><name pos:start="4374:25" pos:end="4374:33">setresgid</name><argument_list pos:start="4374:34" pos:end="4378:52">(<argument pos:start="4374:35" pos:end="4374:51"><expr pos:start="4374:35" pos:end="4374:51"><call pos:start="4374:35" pos:end="4374:51"><name pos:start="4374:35" pos:end="4374:45">low2highgid</name><argument_list pos:start="4374:46" pos:end="4374:51">(<argument pos:start="4374:47" pos:end="4374:50"><expr pos:start="4374:47" pos:end="4374:50"><name pos:start="4374:47" pos:end="4374:50">arg1</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="4376:35" pos:end="4376:51"><expr pos:start="4376:35" pos:end="4376:51"><call pos:start="4376:35" pos:end="4376:51"><name pos:start="4376:35" pos:end="4376:45">low2highgid</name><argument_list pos:start="4376:46" pos:end="4376:51">(<argument pos:start="4376:47" pos:end="4376:50"><expr pos:start="4376:47" pos:end="4376:50"><name pos:start="4376:47" pos:end="4376:50">arg2</name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="4378:35" pos:end="4378:51"><expr pos:start="4378:35" pos:end="4378:51"><call pos:start="4378:35" pos:end="4378:51"><name pos:start="4378:35" pos:end="4378:45">low2highgid</name><argument_list pos:start="4378:46" pos:end="4378:51">(<argument pos:start="4378:47" pos:end="4378:50"><expr pos:start="4378:47" pos:end="4378:50"><name pos:start="4378:47" pos:end="4378:50">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4380:9" pos:end="4385:0">break;</break>

<cpp:endif pos:start="4382:1" pos:end="4382:6">#<cpp:directive pos:start="4382:2" pos:end="4382:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4384:1" pos:end="4384:26">#<cpp:directive pos:start="4384:2" pos:end="4384:6">ifdef</cpp:directive> <name pos:start="4384:8" pos:end="4384:26">TARGET_NR_getresgid</name></cpp:ifdef>

    <case pos:start="4386:5" pos:end="4386:29">case <expr pos:start="4386:10" pos:end="4386:28"><name pos:start="4386:10" pos:end="4386:28">TARGET_NR_getresgid</name></expr>:</case>

        <block pos:start="4388:9" pos:end="4406:9">{<block_content pos:start="4390:13" pos:end="4404:13">

            <decl_stmt pos:start="4390:13" pos:end="4390:35"><decl pos:start="4390:13" pos:end="4390:22"><type pos:start="4390:13" pos:end="4390:17"><name pos:start="4390:13" pos:end="4390:17">gid_t</name></type> <name pos:start="4390:19" pos:end="4390:22">rgid</name></decl>, <decl pos:start="4390:25" pos:end="4390:28"><type ref="prev" pos:start="4390:13" pos:end="4390:17"/><name pos:start="4390:25" pos:end="4390:28">egid</name></decl>, <decl pos:start="4390:31" pos:end="4390:34"><type ref="prev" pos:start="4390:13" pos:end="4390:17"/><name pos:start="4390:31" pos:end="4390:34">sgid</name></decl>;</decl_stmt>

            <expr_stmt pos:start="4392:13" pos:end="4392:60"><expr pos:start="4392:13" pos:end="4392:59"><name pos:start="4392:13" pos:end="4392:15">ret</name> <operator pos:start="4392:17" pos:end="4392:17">=</operator> <call pos:start="4392:19" pos:end="4392:59"><name pos:start="4392:19" pos:end="4392:27">get_errno</name><argument_list pos:start="4392:28" pos:end="4392:59">(<argument pos:start="4392:29" pos:end="4392:58"><expr pos:start="4392:29" pos:end="4392:58"><call pos:start="4392:29" pos:end="4392:58"><name pos:start="4392:29" pos:end="4392:37">getresgid</name><argument_list pos:start="4392:38" pos:end="4392:58">(<argument pos:start="4392:39" pos:end="4392:43"><expr pos:start="4392:39" pos:end="4392:43"><operator pos:start="4392:39" pos:end="4392:39">&amp;</operator><name pos:start="4392:40" pos:end="4392:43">rgid</name></expr></argument>, <argument pos:start="4392:46" pos:end="4392:50"><expr pos:start="4392:46" pos:end="4392:50"><operator pos:start="4392:46" pos:end="4392:46">&amp;</operator><name pos:start="4392:47" pos:end="4392:50">egid</name></expr></argument>, <argument pos:start="4392:53" pos:end="4392:57"><expr pos:start="4392:53" pos:end="4392:57"><operator pos:start="4392:53" pos:end="4392:53">&amp;</operator><name pos:start="4392:54" pos:end="4392:57">sgid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="4394:13" pos:end="4404:13"><if pos:start="4394:13" pos:end="4404:13">if <condition pos:start="4394:16" pos:end="4394:31">(<expr pos:start="4394:17" pos:end="4394:30"><operator pos:start="4394:17" pos:end="4394:17">!</operator><call pos:start="4394:18" pos:end="4394:30"><name pos:start="4394:18" pos:end="4394:25">is_error</name><argument_list pos:start="4394:26" pos:end="4394:30">(<argument pos:start="4394:27" pos:end="4394:29"><expr pos:start="4394:27" pos:end="4394:29"><name pos:start="4394:27" pos:end="4394:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="4394:33" pos:end="4404:13">{<block_content pos:start="4396:17" pos:end="4402:32">

                <if_stmt pos:start="4396:17" pos:end="4402:32"><if pos:start="4396:17" pos:end="4402:32">if <condition pos:start="4396:20" pos:end="4400:61">(<expr pos:start="4396:21" pos:end="4400:60"><call pos:start="4396:21" pos:end="4396:57"><name pos:start="4396:21" pos:end="4396:32">put_user_u16</name><argument_list pos:start="4396:33" pos:end="4396:57">(<argument pos:start="4396:34" pos:end="4396:50"><expr pos:start="4396:34" pos:end="4396:50"><call pos:start="4396:34" pos:end="4396:50"><name pos:start="4396:34" pos:end="4396:44">high2lowgid</name><argument_list pos:start="4396:45" pos:end="4396:50">(<argument pos:start="4396:46" pos:end="4396:49"><expr pos:start="4396:46" pos:end="4396:49"><name pos:start="4396:46" pos:end="4396:49">rgid</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4396:53" pos:end="4396:56"><expr pos:start="4396:53" pos:end="4396:56"><name pos:start="4396:53" pos:end="4396:56">arg1</name></expr></argument>)</argument_list></call>

                    <operator pos:start="4398:21" pos:end="4398:22">||</operator> <call pos:start="4398:24" pos:end="4398:60"><name pos:start="4398:24" pos:end="4398:35">put_user_u16</name><argument_list pos:start="4398:36" pos:end="4398:60">(<argument pos:start="4398:37" pos:end="4398:53"><expr pos:start="4398:37" pos:end="4398:53"><call pos:start="4398:37" pos:end="4398:53"><name pos:start="4398:37" pos:end="4398:47">high2lowgid</name><argument_list pos:start="4398:48" pos:end="4398:53">(<argument pos:start="4398:49" pos:end="4398:52"><expr pos:start="4398:49" pos:end="4398:52"><name pos:start="4398:49" pos:end="4398:52">egid</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4398:56" pos:end="4398:59"><expr pos:start="4398:56" pos:end="4398:59"><name pos:start="4398:56" pos:end="4398:59">arg2</name></expr></argument>)</argument_list></call>

                    <operator pos:start="4400:21" pos:end="4400:22">||</operator> <call pos:start="4400:24" pos:end="4400:60"><name pos:start="4400:24" pos:end="4400:35">put_user_u16</name><argument_list pos:start="4400:36" pos:end="4400:60">(<argument pos:start="4400:37" pos:end="4400:53"><expr pos:start="4400:37" pos:end="4400:53"><call pos:start="4400:37" pos:end="4400:53"><name pos:start="4400:37" pos:end="4400:47">high2lowgid</name><argument_list pos:start="4400:48" pos:end="4400:53">(<argument pos:start="4400:49" pos:end="4400:52"><expr pos:start="4400:49" pos:end="4400:52"><name pos:start="4400:49" pos:end="4400:52">sgid</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4400:56" pos:end="4400:59"><expr pos:start="4400:56" pos:end="4400:59"><name pos:start="4400:56" pos:end="4400:59">arg3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4402:21" pos:end="4402:32"><block_content pos:start="4402:21" pos:end="4402:32">

                    <goto pos:start="4402:21" pos:end="4402:32">goto <name pos:start="4402:26" pos:end="4402:31">efault</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="4408:9" pos:end="4411:0">break;</break>

<cpp:endif pos:start="4410:1" pos:end="4410:6">#<cpp:directive pos:start="4410:2" pos:end="4410:6">endif</cpp:directive></cpp:endif>

    <case pos:start="4412:5" pos:end="4412:25">case <expr pos:start="4412:10" pos:end="4412:24"><name pos:start="4412:10" pos:end="4412:24">TARGET_NR_chown</name></expr>:</case>

        <if_stmt pos:start="4414:9" pos:end="4416:24"><if pos:start="4414:9" pos:end="4416:24">if <condition pos:start="4414:12" pos:end="4414:42">(<expr pos:start="4414:13" pos:end="4414:41"><operator pos:start="4414:13" pos:end="4414:13">!</operator><operator pos:start="4414:14" pos:end="4414:14">(</operator><name pos:start="4414:15" pos:end="4414:15">p</name> <operator pos:start="4414:17" pos:end="4414:17">=</operator> <call pos:start="4414:19" pos:end="4414:40"><name pos:start="4414:19" pos:end="4414:34">lock_user_string</name><argument_list pos:start="4414:35" pos:end="4414:40">(<argument pos:start="4414:36" pos:end="4414:39"><expr pos:start="4414:36" pos:end="4414:39"><name pos:start="4414:36" pos:end="4414:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="4414:41" pos:end="4414:41">)</operator></expr>)</condition><block type="pseudo" pos:start="4416:13" pos:end="4416:24"><block_content pos:start="4416:13" pos:end="4416:24">

            <goto pos:start="4416:13" pos:end="4416:24">goto <name pos:start="4416:18" pos:end="4416:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="4418:9" pos:end="4418:72"><expr pos:start="4418:9" pos:end="4418:71"><name pos:start="4418:9" pos:end="4418:11">ret</name> <operator pos:start="4418:13" pos:end="4418:13">=</operator> <call pos:start="4418:15" pos:end="4418:71"><name pos:start="4418:15" pos:end="4418:23">get_errno</name><argument_list pos:start="4418:24" pos:end="4418:71">(<argument pos:start="4418:25" pos:end="4418:70"><expr pos:start="4418:25" pos:end="4418:70"><call pos:start="4418:25" pos:end="4418:70"><name pos:start="4418:25" pos:end="4418:29">chown</name><argument_list pos:start="4418:30" pos:end="4418:70">(<argument pos:start="4418:31" pos:end="4418:31"><expr pos:start="4418:31" pos:end="4418:31"><name pos:start="4418:31" pos:end="4418:31">p</name></expr></argument>, <argument pos:start="4418:34" pos:end="4418:50"><expr pos:start="4418:34" pos:end="4418:50"><call pos:start="4418:34" pos:end="4418:50"><name pos:start="4418:34" pos:end="4418:44">low2highuid</name><argument_list pos:start="4418:45" pos:end="4418:50">(<argument pos:start="4418:46" pos:end="4418:49"><expr pos:start="4418:46" pos:end="4418:49"><name pos:start="4418:46" pos:end="4418:49">arg2</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="4418:53" pos:end="4418:69"><expr pos:start="4418:53" pos:end="4418:69"><call pos:start="4418:53" pos:end="4418:69"><name pos:start="4418:53" pos:end="4418:63">low2highgid</name><argument_list pos:start="4418:64" pos:end="4418:69">(<argument pos:start="4418:65" pos:end="4418:68"><expr pos:start="4418:65" pos:end="4418:68"><name pos:start="4418:65" pos:end="4418:68">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="4420:9" pos:end="4420:32"><expr pos:start="4420:9" pos:end="4420:31"><call pos:start="4420:9" pos:end="4420:31"><name pos:start="4420:9" pos:end="4420:19">unlock_user</name><argument_list pos:start="4420:20" pos:end="4420:31">(<argument pos:start="4420:21" pos:end="4420:21"><expr pos:start="4420:21" pos:end="4420:21"><name pos:start="4420:21" pos:end="4420:21">p</name></expr></argument>, <argument pos:start="4420:24" pos:end="4420:27"><expr pos:start="4420:24" pos:end="4420:27"><name pos:start="4420:24" pos:end="4420:27">arg1</name></expr></argument>, <argument pos:start="4420:30" pos:end="4420:30"><expr pos:start="4420:30" pos:end="4420:30"><literal type="number" pos:start="4420:30" pos:end="4420:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4422:9" pos:end="4422:14">break;</break>

    <case pos:start="4424:5" pos:end="4424:26">case <expr pos:start="4424:10" pos:end="4424:25"><name pos:start="4424:10" pos:end="4424:25">TARGET_NR_setuid</name></expr>:</case>

        <expr_stmt pos:start="4426:9" pos:end="4426:51"><expr pos:start="4426:9" pos:end="4426:50"><name pos:start="4426:9" pos:end="4426:11">ret</name> <operator pos:start="4426:13" pos:end="4426:13">=</operator> <call pos:start="4426:15" pos:end="4426:50"><name pos:start="4426:15" pos:end="4426:23">get_errno</name><argument_list pos:start="4426:24" pos:end="4426:50">(<argument pos:start="4426:25" pos:end="4426:49"><expr pos:start="4426:25" pos:end="4426:49"><call pos:start="4426:25" pos:end="4426:49"><name pos:start="4426:25" pos:end="4426:30">setuid</name><argument_list pos:start="4426:31" pos:end="4426:49">(<argument pos:start="4426:32" pos:end="4426:48"><expr pos:start="4426:32" pos:end="4426:48"><call pos:start="4426:32" pos:end="4426:48"><name pos:start="4426:32" pos:end="4426:42">low2highuid</name><argument_list pos:start="4426:43" pos:end="4426:48">(<argument pos:start="4426:44" pos:end="4426:47"><expr pos:start="4426:44" pos:end="4426:47"><name pos:start="4426:44" pos:end="4426:47">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4428:9" pos:end="4428:14">break;</break>

    <case pos:start="4430:5" pos:end="4430:26">case <expr pos:start="4430:10" pos:end="4430:25"><name pos:start="4430:10" pos:end="4430:25">TARGET_NR_setgid</name></expr>:</case>

        <expr_stmt pos:start="4432:9" pos:end="4432:51"><expr pos:start="4432:9" pos:end="4432:50"><name pos:start="4432:9" pos:end="4432:11">ret</name> <operator pos:start="4432:13" pos:end="4432:13">=</operator> <call pos:start="4432:15" pos:end="4432:50"><name pos:start="4432:15" pos:end="4432:23">get_errno</name><argument_list pos:start="4432:24" pos:end="4432:50">(<argument pos:start="4432:25" pos:end="4432:49"><expr pos:start="4432:25" pos:end="4432:49"><call pos:start="4432:25" pos:end="4432:49"><name pos:start="4432:25" pos:end="4432:30">setgid</name><argument_list pos:start="4432:31" pos:end="4432:49">(<argument pos:start="4432:32" pos:end="4432:48"><expr pos:start="4432:32" pos:end="4432:48"><call pos:start="4432:32" pos:end="4432:48"><name pos:start="4432:32" pos:end="4432:42">low2highgid</name><argument_list pos:start="4432:43" pos:end="4432:48">(<argument pos:start="4432:44" pos:end="4432:47"><expr pos:start="4432:44" pos:end="4432:47"><name pos:start="4432:44" pos:end="4432:47">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4434:9" pos:end="4434:14">break;</break>

    <case pos:start="4436:5" pos:end="4436:28">case <expr pos:start="4436:10" pos:end="4436:27"><name pos:start="4436:10" pos:end="4436:27">TARGET_NR_setfsuid</name></expr>:</case>

        <expr_stmt pos:start="4438:9" pos:end="4438:40"><expr pos:start="4438:9" pos:end="4438:39"><name pos:start="4438:9" pos:end="4438:11">ret</name> <operator pos:start="4438:13" pos:end="4438:13">=</operator> <call pos:start="4438:15" pos:end="4438:39"><name pos:start="4438:15" pos:end="4438:23">get_errno</name><argument_list pos:start="4438:24" pos:end="4438:39">(<argument pos:start="4438:25" pos:end="4438:38"><expr pos:start="4438:25" pos:end="4438:38"><call pos:start="4438:25" pos:end="4438:38"><name pos:start="4438:25" pos:end="4438:32">setfsuid</name><argument_list pos:start="4438:33" pos:end="4438:38">(<argument pos:start="4438:34" pos:end="4438:37"><expr pos:start="4438:34" pos:end="4438:37"><name pos:start="4438:34" pos:end="4438:37">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4440:9" pos:end="4440:14">break;</break>

    <case pos:start="4442:5" pos:end="4442:28">case <expr pos:start="4442:10" pos:end="4442:27"><name pos:start="4442:10" pos:end="4442:27">TARGET_NR_setfsgid</name></expr>:</case>

        <expr_stmt pos:start="4444:9" pos:end="4444:40"><expr pos:start="4444:9" pos:end="4444:39"><name pos:start="4444:9" pos:end="4444:11">ret</name> <operator pos:start="4444:13" pos:end="4444:13">=</operator> <call pos:start="4444:15" pos:end="4444:39"><name pos:start="4444:15" pos:end="4444:23">get_errno</name><argument_list pos:start="4444:24" pos:end="4444:39">(<argument pos:start="4444:25" pos:end="4444:38"><expr pos:start="4444:25" pos:end="4444:38"><call pos:start="4444:25" pos:end="4444:38"><name pos:start="4444:25" pos:end="4444:32">setfsgid</name><argument_list pos:start="4444:33" pos:end="4444:38">(<argument pos:start="4444:34" pos:end="4444:37"><expr pos:start="4444:34" pos:end="4444:37"><name pos:start="4444:34" pos:end="4444:37">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4446:9" pos:end="4453:0">break;</break>

<cpp:endif pos:start="4448:1" pos:end="4448:6">#<cpp:directive pos:start="4448:2" pos:end="4448:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="4448:8" pos:end="4448:22">/* USE_UID16 */</comment>



<cpp:ifdef pos:start="4452:1" pos:end="4452:25">#<cpp:directive pos:start="4452:2" pos:end="4452:6">ifdef</cpp:directive> <name pos:start="4452:8" pos:end="4452:25">TARGET_NR_lchown32</name></cpp:ifdef>

    <case pos:start="4454:5" pos:end="4454:28">case <expr pos:start="4454:10" pos:end="4454:27"><name pos:start="4454:10" pos:end="4454:27">TARGET_NR_lchown32</name></expr>:</case>

        <if_stmt pos:start="4456:9" pos:end="4458:24"><if pos:start="4456:9" pos:end="4458:24">if <condition pos:start="4456:12" pos:end="4456:42">(<expr pos:start="4456:13" pos:end="4456:41"><operator pos:start="4456:13" pos:end="4456:13">!</operator><operator pos:start="4456:14" pos:end="4456:14">(</operator><name pos:start="4456:15" pos:end="4456:15">p</name> <operator pos:start="4456:17" pos:end="4456:17">=</operator> <call pos:start="4456:19" pos:end="4456:40"><name pos:start="4456:19" pos:end="4456:34">lock_user_string</name><argument_list pos:start="4456:35" pos:end="4456:40">(<argument pos:start="4456:36" pos:end="4456:39"><expr pos:start="4456:36" pos:end="4456:39"><name pos:start="4456:36" pos:end="4456:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="4456:41" pos:end="4456:41">)</operator></expr>)</condition><block type="pseudo" pos:start="4458:13" pos:end="4458:24"><block_content pos:start="4458:13" pos:end="4458:24">

            <goto pos:start="4458:13" pos:end="4458:24">goto <name pos:start="4458:18" pos:end="4458:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="4460:9" pos:end="4460:47"><expr pos:start="4460:9" pos:end="4460:46"><name pos:start="4460:9" pos:end="4460:11">ret</name> <operator pos:start="4460:13" pos:end="4460:13">=</operator> <call pos:start="4460:15" pos:end="4460:46"><name pos:start="4460:15" pos:end="4460:23">get_errno</name><argument_list pos:start="4460:24" pos:end="4460:46">(<argument pos:start="4460:25" pos:end="4460:45"><expr pos:start="4460:25" pos:end="4460:45"><call pos:start="4460:25" pos:end="4460:45"><name pos:start="4460:25" pos:end="4460:30">lchown</name><argument_list pos:start="4460:31" pos:end="4460:45">(<argument pos:start="4460:32" pos:end="4460:32"><expr pos:start="4460:32" pos:end="4460:32"><name pos:start="4460:32" pos:end="4460:32">p</name></expr></argument>, <argument pos:start="4460:35" pos:end="4460:38"><expr pos:start="4460:35" pos:end="4460:38"><name pos:start="4460:35" pos:end="4460:38">arg2</name></expr></argument>, <argument pos:start="4460:41" pos:end="4460:44"><expr pos:start="4460:41" pos:end="4460:44"><name pos:start="4460:41" pos:end="4460:44">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="4462:9" pos:end="4462:32"><expr pos:start="4462:9" pos:end="4462:31"><call pos:start="4462:9" pos:end="4462:31"><name pos:start="4462:9" pos:end="4462:19">unlock_user</name><argument_list pos:start="4462:20" pos:end="4462:31">(<argument pos:start="4462:21" pos:end="4462:21"><expr pos:start="4462:21" pos:end="4462:21"><name pos:start="4462:21" pos:end="4462:21">p</name></expr></argument>, <argument pos:start="4462:24" pos:end="4462:27"><expr pos:start="4462:24" pos:end="4462:27"><name pos:start="4462:24" pos:end="4462:27">arg1</name></expr></argument>, <argument pos:start="4462:30" pos:end="4462:30"><expr pos:start="4462:30" pos:end="4462:30"><literal type="number" pos:start="4462:30" pos:end="4462:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4464:9" pos:end="4469:0">break;</break>

<cpp:endif pos:start="4466:1" pos:end="4466:6">#<cpp:directive pos:start="4466:2" pos:end="4466:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4468:1" pos:end="4468:25">#<cpp:directive pos:start="4468:2" pos:end="4468:6">ifdef</cpp:directive> <name pos:start="4468:8" pos:end="4468:25">TARGET_NR_getuid32</name></cpp:ifdef>

    <case pos:start="4470:5" pos:end="4470:28">case <expr pos:start="4470:10" pos:end="4470:27"><name pos:start="4470:10" pos:end="4470:27">TARGET_NR_getuid32</name></expr>:</case>

        <expr_stmt pos:start="4472:9" pos:end="4472:34"><expr pos:start="4472:9" pos:end="4472:33"><name pos:start="4472:9" pos:end="4472:11">ret</name> <operator pos:start="4472:13" pos:end="4472:13">=</operator> <call pos:start="4472:15" pos:end="4472:33"><name pos:start="4472:15" pos:end="4472:23">get_errno</name><argument_list pos:start="4472:24" pos:end="4472:33">(<argument pos:start="4472:25" pos:end="4472:32"><expr pos:start="4472:25" pos:end="4472:32"><call pos:start="4472:25" pos:end="4472:32"><name pos:start="4472:25" pos:end="4472:30">getuid</name><argument_list pos:start="4472:31" pos:end="4472:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4474:9" pos:end="4481:0">break;</break>

<cpp:endif pos:start="4476:1" pos:end="4476:6">#<cpp:directive pos:start="4476:2" pos:end="4476:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="4480:1" pos:end="4480:55">#<cpp:directive pos:start="4480:2" pos:end="4480:3">if</cpp:directive> <expr pos:start="4480:5" pos:end="4480:55"><call pos:start="4480:5" pos:end="4480:30"><name pos:start="4480:5" pos:end="4480:11">defined</name><argument_list pos:start="4480:12" pos:end="4480:30">(<argument pos:start="4480:13" pos:end="4480:29"><expr pos:start="4480:13" pos:end="4480:29"><name pos:start="4480:13" pos:end="4480:29">TARGET_NR_getxuid</name></expr></argument>)</argument_list></call> <operator pos:start="4480:32" pos:end="4480:33">&amp;&amp;</operator> <call pos:start="4480:35" pos:end="4480:55"><name pos:start="4480:35" pos:end="4480:41">defined</name><argument_list pos:start="4480:42" pos:end="4480:55">(<argument pos:start="4480:43" pos:end="4480:54"><expr pos:start="4480:43" pos:end="4480:54"><name pos:start="4480:43" pos:end="4480:54">TARGET_ALPHA</name></expr></argument>)</argument_list></call></expr></cpp:if>

   <comment type="block" pos:start="4482:4" pos:end="4482:23">/* Alpha specific */</comment>

    <case pos:start="4484:5" pos:end="4484:27">case <expr pos:start="4484:10" pos:end="4484:26"><name pos:start="4484:10" pos:end="4484:26">TARGET_NR_getxuid</name></expr>:</case>

	 <block pos:start="4486:10" pos:end="4494:10">{<block_content pos:start="4488:13" pos:end="4492:55">

	    <decl_stmt pos:start="4488:13" pos:end="4488:23"><decl pos:start="4488:13" pos:end="4488:22"><type pos:start="4488:13" pos:end="4488:17"><name pos:start="4488:13" pos:end="4488:17">uid_t</name></type> <name pos:start="4488:19" pos:end="4488:22">euid</name></decl>;</decl_stmt>

	    <expr_stmt pos:start="4490:13" pos:end="4490:27"><expr pos:start="4490:13" pos:end="4490:26"><name pos:start="4490:13" pos:end="4490:16">euid</name><operator pos:start="4490:17" pos:end="4490:17">=</operator><call pos:start="4490:18" pos:end="4490:26"><name pos:start="4490:18" pos:end="4490:24">geteuid</name><argument_list pos:start="4490:25" pos:end="4490:26">()</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="4492:13" pos:end="4492:55"><expr pos:start="4492:13" pos:end="4492:54"><operator pos:start="4492:13" pos:end="4492:13">(</operator><operator pos:start="4492:14" pos:end="4492:14">(</operator><name pos:start="4492:15" pos:end="4492:27">CPUAlphaState</name> <operator pos:start="4492:29" pos:end="4492:29">*</operator><operator pos:start="4492:30" pos:end="4492:30">)</operator><name pos:start="4492:31" pos:end="4492:37">cpu_env</name><operator pos:start="4492:38" pos:end="4492:38">)</operator><operator pos:start="4492:39" pos:end="4492:40">-&gt;</operator><name pos:start="4492:41" pos:end="4492:49"><name pos:start="4492:41" pos:end="4492:42">ir</name><index pos:start="4492:43" pos:end="4492:49">[<expr pos:start="4492:44" pos:end="4492:48"><name pos:start="4492:44" pos:end="4492:48">IR_A4</name></expr>]</index></name><operator pos:start="4492:50" pos:end="4492:50">=</operator><name pos:start="4492:51" pos:end="4492:54">euid</name></expr>;</expr_stmt>

	 </block_content>}</block>

        <expr_stmt pos:start="4496:9" pos:end="4496:34"><expr pos:start="4496:9" pos:end="4496:33"><name pos:start="4496:9" pos:end="4496:11">ret</name> <operator pos:start="4496:13" pos:end="4496:13">=</operator> <call pos:start="4496:15" pos:end="4496:33"><name pos:start="4496:15" pos:end="4496:23">get_errno</name><argument_list pos:start="4496:24" pos:end="4496:33">(<argument pos:start="4496:25" pos:end="4496:32"><expr pos:start="4496:25" pos:end="4496:32"><call pos:start="4496:25" pos:end="4496:32"><name pos:start="4496:25" pos:end="4496:30">getuid</name><argument_list pos:start="4496:31" pos:end="4496:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4498:9" pos:end="4503:0">break;</break>

<cpp:endif pos:start="4500:1" pos:end="4500:6">#<cpp:directive pos:start="4500:2" pos:end="4500:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="4502:1" pos:end="4502:55">#<cpp:directive pos:start="4502:2" pos:end="4502:3">if</cpp:directive> <expr pos:start="4502:5" pos:end="4502:55"><call pos:start="4502:5" pos:end="4502:30"><name pos:start="4502:5" pos:end="4502:11">defined</name><argument_list pos:start="4502:12" pos:end="4502:30">(<argument pos:start="4502:13" pos:end="4502:29"><expr pos:start="4502:13" pos:end="4502:29"><name pos:start="4502:13" pos:end="4502:29">TARGET_NR_getxgid</name></expr></argument>)</argument_list></call> <operator pos:start="4502:32" pos:end="4502:33">&amp;&amp;</operator> <call pos:start="4502:35" pos:end="4502:55"><name pos:start="4502:35" pos:end="4502:41">defined</name><argument_list pos:start="4502:42" pos:end="4502:55">(<argument pos:start="4502:43" pos:end="4502:54"><expr pos:start="4502:43" pos:end="4502:54"><name pos:start="4502:43" pos:end="4502:54">TARGET_ALPHA</name></expr></argument>)</argument_list></call></expr></cpp:if>

   <comment type="block" pos:start="4504:4" pos:end="4504:23">/* Alpha specific */</comment>

    <case pos:start="4506:5" pos:end="4506:27">case <expr pos:start="4506:10" pos:end="4506:26"><name pos:start="4506:10" pos:end="4506:26">TARGET_NR_getxgid</name></expr>:</case>

	 <block pos:start="4508:10" pos:end="4516:10">{<block_content pos:start="4510:13" pos:end="4514:55">

	    <decl_stmt pos:start="4510:13" pos:end="4510:23"><decl pos:start="4510:13" pos:end="4510:22"><type pos:start="4510:13" pos:end="4510:17"><name pos:start="4510:13" pos:end="4510:17">uid_t</name></type> <name pos:start="4510:19" pos:end="4510:22">egid</name></decl>;</decl_stmt>

	    <expr_stmt pos:start="4512:13" pos:end="4512:27"><expr pos:start="4512:13" pos:end="4512:26"><name pos:start="4512:13" pos:end="4512:16">egid</name><operator pos:start="4512:17" pos:end="4512:17">=</operator><call pos:start="4512:18" pos:end="4512:26"><name pos:start="4512:18" pos:end="4512:24">getegid</name><argument_list pos:start="4512:25" pos:end="4512:26">()</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="4514:13" pos:end="4514:55"><expr pos:start="4514:13" pos:end="4514:54"><operator pos:start="4514:13" pos:end="4514:13">(</operator><operator pos:start="4514:14" pos:end="4514:14">(</operator><name pos:start="4514:15" pos:end="4514:27">CPUAlphaState</name> <operator pos:start="4514:29" pos:end="4514:29">*</operator><operator pos:start="4514:30" pos:end="4514:30">)</operator><name pos:start="4514:31" pos:end="4514:37">cpu_env</name><operator pos:start="4514:38" pos:end="4514:38">)</operator><operator pos:start="4514:39" pos:end="4514:40">-&gt;</operator><name pos:start="4514:41" pos:end="4514:49"><name pos:start="4514:41" pos:end="4514:42">ir</name><index pos:start="4514:43" pos:end="4514:49">[<expr pos:start="4514:44" pos:end="4514:48"><name pos:start="4514:44" pos:end="4514:48">IR_A4</name></expr>]</index></name><operator pos:start="4514:50" pos:end="4514:50">=</operator><name pos:start="4514:51" pos:end="4514:54">egid</name></expr>;</expr_stmt>

	 </block_content>}</block>

        <expr_stmt pos:start="4518:9" pos:end="4518:34"><expr pos:start="4518:9" pos:end="4518:33"><name pos:start="4518:9" pos:end="4518:11">ret</name> <operator pos:start="4518:13" pos:end="4518:13">=</operator> <call pos:start="4518:15" pos:end="4518:33"><name pos:start="4518:15" pos:end="4518:23">get_errno</name><argument_list pos:start="4518:24" pos:end="4518:33">(<argument pos:start="4518:25" pos:end="4518:32"><expr pos:start="4518:25" pos:end="4518:32"><call pos:start="4518:25" pos:end="4518:32"><name pos:start="4518:25" pos:end="4518:30">getgid</name><argument_list pos:start="4518:31" pos:end="4518:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4520:9" pos:end="4527:0">break;</break>

<cpp:endif pos:start="4522:1" pos:end="4522:6">#<cpp:directive pos:start="4522:2" pos:end="4522:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="4526:1" pos:end="4526:25">#<cpp:directive pos:start="4526:2" pos:end="4526:6">ifdef</cpp:directive> <name pos:start="4526:8" pos:end="4526:25">TARGET_NR_getgid32</name></cpp:ifdef>

    <case pos:start="4528:5" pos:end="4528:28">case <expr pos:start="4528:10" pos:end="4528:27"><name pos:start="4528:10" pos:end="4528:27">TARGET_NR_getgid32</name></expr>:</case>

        <expr_stmt pos:start="4530:9" pos:end="4530:34"><expr pos:start="4530:9" pos:end="4530:33"><name pos:start="4530:9" pos:end="4530:11">ret</name> <operator pos:start="4530:13" pos:end="4530:13">=</operator> <call pos:start="4530:15" pos:end="4530:33"><name pos:start="4530:15" pos:end="4530:23">get_errno</name><argument_list pos:start="4530:24" pos:end="4530:33">(<argument pos:start="4530:25" pos:end="4530:32"><expr pos:start="4530:25" pos:end="4530:32"><call pos:start="4530:25" pos:end="4530:32"><name pos:start="4530:25" pos:end="4530:30">getgid</name><argument_list pos:start="4530:31" pos:end="4530:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4532:9" pos:end="4537:0">break;</break>

<cpp:endif pos:start="4534:1" pos:end="4534:6">#<cpp:directive pos:start="4534:2" pos:end="4534:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4536:1" pos:end="4536:26">#<cpp:directive pos:start="4536:2" pos:end="4536:6">ifdef</cpp:directive> <name pos:start="4536:8" pos:end="4536:26">TARGET_NR_geteuid32</name></cpp:ifdef>

    <case pos:start="4538:5" pos:end="4538:29">case <expr pos:start="4538:10" pos:end="4538:28"><name pos:start="4538:10" pos:end="4538:28">TARGET_NR_geteuid32</name></expr>:</case>

        <expr_stmt pos:start="4540:9" pos:end="4540:35"><expr pos:start="4540:9" pos:end="4540:34"><name pos:start="4540:9" pos:end="4540:11">ret</name> <operator pos:start="4540:13" pos:end="4540:13">=</operator> <call pos:start="4540:15" pos:end="4540:34"><name pos:start="4540:15" pos:end="4540:23">get_errno</name><argument_list pos:start="4540:24" pos:end="4540:34">(<argument pos:start="4540:25" pos:end="4540:33"><expr pos:start="4540:25" pos:end="4540:33"><call pos:start="4540:25" pos:end="4540:33"><name pos:start="4540:25" pos:end="4540:31">geteuid</name><argument_list pos:start="4540:32" pos:end="4540:33">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4542:9" pos:end="4547:0">break;</break>

<cpp:endif pos:start="4544:1" pos:end="4544:6">#<cpp:directive pos:start="4544:2" pos:end="4544:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4546:1" pos:end="4546:26">#<cpp:directive pos:start="4546:2" pos:end="4546:6">ifdef</cpp:directive> <name pos:start="4546:8" pos:end="4546:26">TARGET_NR_getegid32</name></cpp:ifdef>

    <case pos:start="4548:5" pos:end="4548:29">case <expr pos:start="4548:10" pos:end="4548:28"><name pos:start="4548:10" pos:end="4548:28">TARGET_NR_getegid32</name></expr>:</case>

        <expr_stmt pos:start="4550:9" pos:end="4550:35"><expr pos:start="4550:9" pos:end="4550:34"><name pos:start="4550:9" pos:end="4550:11">ret</name> <operator pos:start="4550:13" pos:end="4550:13">=</operator> <call pos:start="4550:15" pos:end="4550:34"><name pos:start="4550:15" pos:end="4550:23">get_errno</name><argument_list pos:start="4550:24" pos:end="4550:34">(<argument pos:start="4550:25" pos:end="4550:33"><expr pos:start="4550:25" pos:end="4550:33"><call pos:start="4550:25" pos:end="4550:33"><name pos:start="4550:25" pos:end="4550:31">getegid</name><argument_list pos:start="4550:32" pos:end="4550:33">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4552:9" pos:end="4557:0">break;</break>

<cpp:endif pos:start="4554:1" pos:end="4554:6">#<cpp:directive pos:start="4554:2" pos:end="4554:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4556:1" pos:end="4556:27">#<cpp:directive pos:start="4556:2" pos:end="4556:6">ifdef</cpp:directive> <name pos:start="4556:8" pos:end="4556:27">TARGET_NR_setreuid32</name></cpp:ifdef>

    <case pos:start="4558:5" pos:end="4558:30">case <expr pos:start="4558:10" pos:end="4558:29"><name pos:start="4558:10" pos:end="4558:29">TARGET_NR_setreuid32</name></expr>:</case>

        <expr_stmt pos:start="4560:9" pos:end="4560:46"><expr pos:start="4560:9" pos:end="4560:45"><name pos:start="4560:9" pos:end="4560:11">ret</name> <operator pos:start="4560:13" pos:end="4560:13">=</operator> <call pos:start="4560:15" pos:end="4560:45"><name pos:start="4560:15" pos:end="4560:23">get_errno</name><argument_list pos:start="4560:24" pos:end="4560:45">(<argument pos:start="4560:25" pos:end="4560:44"><expr pos:start="4560:25" pos:end="4560:44"><call pos:start="4560:25" pos:end="4560:44"><name pos:start="4560:25" pos:end="4560:32">setreuid</name><argument_list pos:start="4560:33" pos:end="4560:44">(<argument pos:start="4560:34" pos:end="4560:37"><expr pos:start="4560:34" pos:end="4560:37"><name pos:start="4560:34" pos:end="4560:37">arg1</name></expr></argument>, <argument pos:start="4560:40" pos:end="4560:43"><expr pos:start="4560:40" pos:end="4560:43"><name pos:start="4560:40" pos:end="4560:43">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4562:9" pos:end="4567:0">break;</break>

<cpp:endif pos:start="4564:1" pos:end="4564:6">#<cpp:directive pos:start="4564:2" pos:end="4564:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4566:1" pos:end="4566:27">#<cpp:directive pos:start="4566:2" pos:end="4566:6">ifdef</cpp:directive> <name pos:start="4566:8" pos:end="4566:27">TARGET_NR_setregid32</name></cpp:ifdef>

    <case pos:start="4568:5" pos:end="4568:30">case <expr pos:start="4568:10" pos:end="4568:29"><name pos:start="4568:10" pos:end="4568:29">TARGET_NR_setregid32</name></expr>:</case>

        <expr_stmt pos:start="4570:9" pos:end="4570:46"><expr pos:start="4570:9" pos:end="4570:45"><name pos:start="4570:9" pos:end="4570:11">ret</name> <operator pos:start="4570:13" pos:end="4570:13">=</operator> <call pos:start="4570:15" pos:end="4570:45"><name pos:start="4570:15" pos:end="4570:23">get_errno</name><argument_list pos:start="4570:24" pos:end="4570:45">(<argument pos:start="4570:25" pos:end="4570:44"><expr pos:start="4570:25" pos:end="4570:44"><call pos:start="4570:25" pos:end="4570:44"><name pos:start="4570:25" pos:end="4570:32">setregid</name><argument_list pos:start="4570:33" pos:end="4570:44">(<argument pos:start="4570:34" pos:end="4570:37"><expr pos:start="4570:34" pos:end="4570:37"><name pos:start="4570:34" pos:end="4570:37">arg1</name></expr></argument>, <argument pos:start="4570:40" pos:end="4570:43"><expr pos:start="4570:40" pos:end="4570:43"><name pos:start="4570:40" pos:end="4570:43">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4572:9" pos:end="4577:0">break;</break>

<cpp:endif pos:start="4574:1" pos:end="4574:6">#<cpp:directive pos:start="4574:2" pos:end="4574:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4576:1" pos:end="4576:28">#<cpp:directive pos:start="4576:2" pos:end="4576:6">ifdef</cpp:directive> <name pos:start="4576:8" pos:end="4576:28">TARGET_NR_getgroups32</name></cpp:ifdef>

    <case pos:start="4578:5" pos:end="4578:31">case <expr pos:start="4578:10" pos:end="4578:30"><name pos:start="4578:10" pos:end="4578:30">TARGET_NR_getgroups32</name></expr>:</case>

        <block pos:start="4580:9" pos:end="4620:9">{<block_content pos:start="4582:13" pos:end="4618:13">

            <decl_stmt pos:start="4582:13" pos:end="4582:34"><decl pos:start="4582:13" pos:end="4582:33"><type pos:start="4582:13" pos:end="4582:15"><name pos:start="4582:13" pos:end="4582:15">int</name></type> <name pos:start="4582:17" pos:end="4582:26">gidsetsize</name> <init pos:start="4582:28" pos:end="4582:33">= <expr pos:start="4582:30" pos:end="4582:33"><name pos:start="4582:30" pos:end="4582:33">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="4584:13" pos:end="4584:39"><decl pos:start="4584:13" pos:end="4584:38"><type pos:start="4584:13" pos:end="4584:22"><name pos:start="4584:13" pos:end="4584:20">uint32_t</name> <modifier pos:start="4584:22" pos:end="4584:22">*</modifier></type><name pos:start="4584:23" pos:end="4584:38">target_grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="4586:13" pos:end="4586:29"><decl pos:start="4586:13" pos:end="4586:28"><type pos:start="4586:13" pos:end="4586:19"><name pos:start="4586:13" pos:end="4586:17">gid_t</name> <modifier pos:start="4586:19" pos:end="4586:19">*</modifier></type><name pos:start="4586:20" pos:end="4586:28">grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="4588:13" pos:end="4588:18"><decl pos:start="4588:13" pos:end="4588:17"><type pos:start="4588:13" pos:end="4588:15"><name pos:start="4588:13" pos:end="4588:15">int</name></type> <name pos:start="4588:17" pos:end="4588:17">i</name></decl>;</decl_stmt>



            <expr_stmt pos:start="4592:13" pos:end="4592:59"><expr pos:start="4592:13" pos:end="4592:58"><name pos:start="4592:13" pos:end="4592:21">grouplist</name> <operator pos:start="4592:23" pos:end="4592:23">=</operator> <call pos:start="4592:25" pos:end="4592:58"><name pos:start="4592:25" pos:end="4592:30">alloca</name><argument_list pos:start="4592:31" pos:end="4592:58">(<argument pos:start="4592:32" pos:end="4592:57"><expr pos:start="4592:32" pos:end="4592:57"><name pos:start="4592:32" pos:end="4592:41">gidsetsize</name> <operator pos:start="4592:43" pos:end="4592:43">*</operator> <sizeof pos:start="4592:45" pos:end="4592:57">sizeof<argument_list pos:start="4592:51" pos:end="4592:57">(<argument pos:start="4592:52" pos:end="4592:56"><expr pos:start="4592:52" pos:end="4592:56"><name pos:start="4592:52" pos:end="4592:56">gid_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="4594:13" pos:end="4594:62"><expr pos:start="4594:13" pos:end="4594:61"><name pos:start="4594:13" pos:end="4594:15">ret</name> <operator pos:start="4594:17" pos:end="4594:17">=</operator> <call pos:start="4594:19" pos:end="4594:61"><name pos:start="4594:19" pos:end="4594:27">get_errno</name><argument_list pos:start="4594:28" pos:end="4594:61">(<argument pos:start="4594:29" pos:end="4594:60"><expr pos:start="4594:29" pos:end="4594:60"><call pos:start="4594:29" pos:end="4594:60"><name pos:start="4594:29" pos:end="4594:37">getgroups</name><argument_list pos:start="4594:38" pos:end="4594:60">(<argument pos:start="4594:39" pos:end="4594:48"><expr pos:start="4594:39" pos:end="4594:48"><name pos:start="4594:39" pos:end="4594:48">gidsetsize</name></expr></argument>, <argument pos:start="4594:51" pos:end="4594:59"><expr pos:start="4594:51" pos:end="4594:59"><name pos:start="4594:51" pos:end="4594:59">grouplist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="4596:13" pos:end="4598:22"><if pos:start="4596:13" pos:end="4598:22">if <condition pos:start="4596:16" pos:end="4596:32">(<expr pos:start="4596:17" pos:end="4596:31"><name pos:start="4596:17" pos:end="4596:26">gidsetsize</name> <operator pos:start="4596:28" pos:end="4596:29">==</operator> <literal type="number" pos:start="4596:31" pos:end="4596:31">0</literal></expr>)</condition><block type="pseudo" pos:start="4598:17" pos:end="4598:22"><block_content pos:start="4598:17" pos:end="4598:22">

                <break pos:start="4598:17" pos:end="4598:22">break;</break></block_content></block></if></if_stmt>

            <if_stmt pos:start="4600:13" pos:end="4618:13"><if pos:start="4600:13" pos:end="4618:13">if <condition pos:start="4600:16" pos:end="4600:31">(<expr pos:start="4600:17" pos:end="4600:30"><operator pos:start="4600:17" pos:end="4600:17">!</operator><call pos:start="4600:18" pos:end="4600:30"><name pos:start="4600:18" pos:end="4600:25">is_error</name><argument_list pos:start="4600:26" pos:end="4600:30">(<argument pos:start="4600:27" pos:end="4600:29"><expr pos:start="4600:27" pos:end="4600:29"><name pos:start="4600:27" pos:end="4600:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="4600:33" pos:end="4618:13">{<block_content pos:start="4602:17" pos:end="4616:68">

                <expr_stmt pos:start="4602:17" pos:end="4602:84"><expr pos:start="4602:17" pos:end="4602:83"><name pos:start="4602:17" pos:end="4602:32">target_grouplist</name> <operator pos:start="4602:34" pos:end="4602:34">=</operator> <call pos:start="4602:36" pos:end="4602:83"><name pos:start="4602:36" pos:end="4602:44">lock_user</name><argument_list pos:start="4602:45" pos:end="4602:83">(<argument pos:start="4602:46" pos:end="4602:57"><expr pos:start="4602:46" pos:end="4602:57"><name pos:start="4602:46" pos:end="4602:57">VERIFY_WRITE</name></expr></argument>, <argument pos:start="4602:60" pos:end="4602:63"><expr pos:start="4602:60" pos:end="4602:63"><name pos:start="4602:60" pos:end="4602:63">arg2</name></expr></argument>, <argument pos:start="4602:66" pos:end="4602:79"><expr pos:start="4602:66" pos:end="4602:79"><name pos:start="4602:66" pos:end="4602:75">gidsetsize</name> <operator pos:start="4602:77" pos:end="4602:77">*</operator> <literal type="number" pos:start="4602:79" pos:end="4602:79">4</literal></expr></argument>, <argument pos:start="4602:82" pos:end="4602:82"><expr pos:start="4602:82" pos:end="4602:82"><literal type="number" pos:start="4602:82" pos:end="4602:82">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="4604:17" pos:end="4610:17"><if pos:start="4604:17" pos:end="4610:17">if <condition pos:start="4604:20" pos:end="4604:38">(<expr pos:start="4604:21" pos:end="4604:37"><operator pos:start="4604:21" pos:end="4604:21">!</operator><name pos:start="4604:22" pos:end="4604:37">target_grouplist</name></expr>)</condition> <block pos:start="4604:40" pos:end="4610:17">{<block_content pos:start="4606:21" pos:end="4608:30">

                    <expr_stmt pos:start="4606:21" pos:end="4606:41"><expr pos:start="4606:21" pos:end="4606:40"><name pos:start="4606:21" pos:end="4606:23">ret</name> <operator pos:start="4606:25" pos:end="4606:25">=</operator> <operator pos:start="4606:27" pos:end="4606:27">-</operator><name pos:start="4606:28" pos:end="4606:40">TARGET_EFAULT</name></expr>;</expr_stmt>

                    <goto pos:start="4608:21" pos:end="4608:30">goto <name pos:start="4608:26" pos:end="4608:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <for pos:start="4612:17" pos:end="4614:64">for<control pos:start="4612:20" pos:end="4612:39">(<init pos:start="4612:21" pos:end="4612:26"><expr pos:start="4612:21" pos:end="4612:25"><name pos:start="4612:21" pos:end="4612:21">i</name> <operator pos:start="4612:23" pos:end="4612:23">=</operator> <literal type="number" pos:start="4612:25" pos:end="4612:25">0</literal></expr>;</init><condition pos:start="4612:27" pos:end="4612:34"><expr pos:start="4612:27" pos:end="4612:33"><name pos:start="4612:27" pos:end="4612:27">i</name> <operator pos:start="4612:29" pos:end="4612:29">&lt;</operator> <name pos:start="4612:31" pos:end="4612:33">ret</name></expr>;</condition> <incr pos:start="4612:36" pos:end="4612:38"><expr pos:start="4612:36" pos:end="4612:38"><name pos:start="4612:36" pos:end="4612:36">i</name><operator pos:start="4612:37" pos:end="4612:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="4614:21" pos:end="4614:64"><block_content pos:start="4614:21" pos:end="4614:64">

                    <expr_stmt pos:start="4614:21" pos:end="4614:64"><expr pos:start="4614:21" pos:end="4614:63"><name pos:start="4614:21" pos:end="4614:39"><name pos:start="4614:21" pos:end="4614:36">target_grouplist</name><index pos:start="4614:37" pos:end="4614:39">[<expr pos:start="4614:38" pos:end="4614:38"><name pos:start="4614:38" pos:end="4614:38">i</name></expr>]</index></name> <operator pos:start="4614:41" pos:end="4614:41">=</operator> <call pos:start="4614:43" pos:end="4614:63"><name pos:start="4614:43" pos:end="4614:49">tswap32</name><argument_list pos:start="4614:50" pos:end="4614:63">(<argument pos:start="4614:51" pos:end="4614:62"><expr pos:start="4614:51" pos:end="4614:62"><name pos:start="4614:51" pos:end="4614:62"><name pos:start="4614:51" pos:end="4614:59">grouplist</name><index pos:start="4614:60" pos:end="4614:62">[<expr pos:start="4614:61" pos:end="4614:61"><name pos:start="4614:61" pos:end="4614:61">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="4616:17" pos:end="4616:68"><expr pos:start="4616:17" pos:end="4616:67"><call pos:start="4616:17" pos:end="4616:67"><name pos:start="4616:17" pos:end="4616:27">unlock_user</name><argument_list pos:start="4616:28" pos:end="4616:67">(<argument pos:start="4616:29" pos:end="4616:44"><expr pos:start="4616:29" pos:end="4616:44"><name pos:start="4616:29" pos:end="4616:44">target_grouplist</name></expr></argument>, <argument pos:start="4616:47" pos:end="4616:50"><expr pos:start="4616:47" pos:end="4616:50"><name pos:start="4616:47" pos:end="4616:50">arg2</name></expr></argument>, <argument pos:start="4616:53" pos:end="4616:66"><expr pos:start="4616:53" pos:end="4616:66"><name pos:start="4616:53" pos:end="4616:62">gidsetsize</name> <operator pos:start="4616:64" pos:end="4616:64">*</operator> <literal type="number" pos:start="4616:66" pos:end="4616:66">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="4622:9" pos:end="4627:0">break;</break>

<cpp:endif pos:start="4624:1" pos:end="4624:6">#<cpp:directive pos:start="4624:2" pos:end="4624:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4626:1" pos:end="4626:28">#<cpp:directive pos:start="4626:2" pos:end="4626:6">ifdef</cpp:directive> <name pos:start="4626:8" pos:end="4626:28">TARGET_NR_setgroups32</name></cpp:ifdef>

    <case pos:start="4628:5" pos:end="4628:31">case <expr pos:start="4628:10" pos:end="4628:30"><name pos:start="4628:10" pos:end="4628:30">TARGET_NR_setgroups32</name></expr>:</case>

        <block pos:start="4630:9" pos:end="4662:9">{<block_content pos:start="4632:13" pos:end="4660:62">

            <decl_stmt pos:start="4632:13" pos:end="4632:34"><decl pos:start="4632:13" pos:end="4632:33"><type pos:start="4632:13" pos:end="4632:15"><name pos:start="4632:13" pos:end="4632:15">int</name></type> <name pos:start="4632:17" pos:end="4632:26">gidsetsize</name> <init pos:start="4632:28" pos:end="4632:33">= <expr pos:start="4632:30" pos:end="4632:33"><name pos:start="4632:30" pos:end="4632:33">arg1</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="4634:13" pos:end="4634:39"><decl pos:start="4634:13" pos:end="4634:38"><type pos:start="4634:13" pos:end="4634:22"><name pos:start="4634:13" pos:end="4634:20">uint32_t</name> <modifier pos:start="4634:22" pos:end="4634:22">*</modifier></type><name pos:start="4634:23" pos:end="4634:38">target_grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="4636:13" pos:end="4636:29"><decl pos:start="4636:13" pos:end="4636:28"><type pos:start="4636:13" pos:end="4636:19"><name pos:start="4636:13" pos:end="4636:17">gid_t</name> <modifier pos:start="4636:19" pos:end="4636:19">*</modifier></type><name pos:start="4636:20" pos:end="4636:28">grouplist</name></decl>;</decl_stmt>

            <decl_stmt pos:start="4638:13" pos:end="4638:18"><decl pos:start="4638:13" pos:end="4638:17"><type pos:start="4638:13" pos:end="4638:15"><name pos:start="4638:13" pos:end="4638:15">int</name></type> <name pos:start="4638:17" pos:end="4638:17">i</name></decl>;</decl_stmt>



            <expr_stmt pos:start="4642:13" pos:end="4642:59"><expr pos:start="4642:13" pos:end="4642:58"><name pos:start="4642:13" pos:end="4642:21">grouplist</name> <operator pos:start="4642:23" pos:end="4642:23">=</operator> <call pos:start="4642:25" pos:end="4642:58"><name pos:start="4642:25" pos:end="4642:30">alloca</name><argument_list pos:start="4642:31" pos:end="4642:58">(<argument pos:start="4642:32" pos:end="4642:57"><expr pos:start="4642:32" pos:end="4642:57"><name pos:start="4642:32" pos:end="4642:41">gidsetsize</name> <operator pos:start="4642:43" pos:end="4642:43">*</operator> <sizeof pos:start="4642:45" pos:end="4642:57">sizeof<argument_list pos:start="4642:51" pos:end="4642:57">(<argument pos:start="4642:52" pos:end="4642:56"><expr pos:start="4642:52" pos:end="4642:56"><name pos:start="4642:52" pos:end="4642:56">gid_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="4644:13" pos:end="4644:79"><expr pos:start="4644:13" pos:end="4644:78"><name pos:start="4644:13" pos:end="4644:28">target_grouplist</name> <operator pos:start="4644:30" pos:end="4644:30">=</operator> <call pos:start="4644:32" pos:end="4644:78"><name pos:start="4644:32" pos:end="4644:40">lock_user</name><argument_list pos:start="4644:41" pos:end="4644:78">(<argument pos:start="4644:42" pos:end="4644:52"><expr pos:start="4644:42" pos:end="4644:52"><name pos:start="4644:42" pos:end="4644:52">VERIFY_READ</name></expr></argument>, <argument pos:start="4644:55" pos:end="4644:58"><expr pos:start="4644:55" pos:end="4644:58"><name pos:start="4644:55" pos:end="4644:58">arg2</name></expr></argument>, <argument pos:start="4644:61" pos:end="4644:74"><expr pos:start="4644:61" pos:end="4644:74"><name pos:start="4644:61" pos:end="4644:70">gidsetsize</name> <operator pos:start="4644:72" pos:end="4644:72">*</operator> <literal type="number" pos:start="4644:74" pos:end="4644:74">4</literal></expr></argument>, <argument pos:start="4644:77" pos:end="4644:77"><expr pos:start="4644:77" pos:end="4644:77"><literal type="number" pos:start="4644:77" pos:end="4644:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="4646:13" pos:end="4652:13"><if pos:start="4646:13" pos:end="4652:13">if <condition pos:start="4646:16" pos:end="4646:34">(<expr pos:start="4646:17" pos:end="4646:33"><operator pos:start="4646:17" pos:end="4646:17">!</operator><name pos:start="4646:18" pos:end="4646:33">target_grouplist</name></expr>)</condition> <block pos:start="4646:36" pos:end="4652:13">{<block_content pos:start="4648:17" pos:end="4650:26">

                <expr_stmt pos:start="4648:17" pos:end="4648:37"><expr pos:start="4648:17" pos:end="4648:36"><name pos:start="4648:17" pos:end="4648:19">ret</name> <operator pos:start="4648:21" pos:end="4648:21">=</operator> <operator pos:start="4648:23" pos:end="4648:23">-</operator><name pos:start="4648:24" pos:end="4648:36">TARGET_EFAULT</name></expr>;</expr_stmt>

                <goto pos:start="4650:17" pos:end="4650:26">goto <name pos:start="4650:22" pos:end="4650:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <for pos:start="4654:13" pos:end="4656:60">for<control pos:start="4654:16" pos:end="4654:42">(<init pos:start="4654:17" pos:end="4654:22"><expr pos:start="4654:17" pos:end="4654:21"><name pos:start="4654:17" pos:end="4654:17">i</name> <operator pos:start="4654:19" pos:end="4654:19">=</operator> <literal type="number" pos:start="4654:21" pos:end="4654:21">0</literal></expr>;</init><condition pos:start="4654:23" pos:end="4654:37"><expr pos:start="4654:23" pos:end="4654:36"><name pos:start="4654:23" pos:end="4654:23">i</name> <operator pos:start="4654:25" pos:end="4654:25">&lt;</operator> <name pos:start="4654:27" pos:end="4654:36">gidsetsize</name></expr>;</condition> <incr pos:start="4654:39" pos:end="4654:41"><expr pos:start="4654:39" pos:end="4654:41"><name pos:start="4654:39" pos:end="4654:39">i</name><operator pos:start="4654:40" pos:end="4654:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="4656:17" pos:end="4656:60"><block_content pos:start="4656:17" pos:end="4656:60">

                <expr_stmt pos:start="4656:17" pos:end="4656:60"><expr pos:start="4656:17" pos:end="4656:59"><name pos:start="4656:17" pos:end="4656:28"><name pos:start="4656:17" pos:end="4656:25">grouplist</name><index pos:start="4656:26" pos:end="4656:28">[<expr pos:start="4656:27" pos:end="4656:27"><name pos:start="4656:27" pos:end="4656:27">i</name></expr>]</index></name> <operator pos:start="4656:30" pos:end="4656:30">=</operator> <call pos:start="4656:32" pos:end="4656:59"><name pos:start="4656:32" pos:end="4656:38">tswap32</name><argument_list pos:start="4656:39" pos:end="4656:59">(<argument pos:start="4656:40" pos:end="4656:58"><expr pos:start="4656:40" pos:end="4656:58"><name pos:start="4656:40" pos:end="4656:58"><name pos:start="4656:40" pos:end="4656:55">target_grouplist</name><index pos:start="4656:56" pos:end="4656:58">[<expr pos:start="4656:57" pos:end="4656:57"><name pos:start="4656:57" pos:end="4656:57">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="4658:13" pos:end="4658:51"><expr pos:start="4658:13" pos:end="4658:50"><call pos:start="4658:13" pos:end="4658:50"><name pos:start="4658:13" pos:end="4658:23">unlock_user</name><argument_list pos:start="4658:24" pos:end="4658:50">(<argument pos:start="4658:25" pos:end="4658:40"><expr pos:start="4658:25" pos:end="4658:40"><name pos:start="4658:25" pos:end="4658:40">target_grouplist</name></expr></argument>, <argument pos:start="4658:43" pos:end="4658:46"><expr pos:start="4658:43" pos:end="4658:46"><name pos:start="4658:43" pos:end="4658:46">arg2</name></expr></argument>, <argument pos:start="4658:49" pos:end="4658:49"><expr pos:start="4658:49" pos:end="4658:49"><literal type="number" pos:start="4658:49" pos:end="4658:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="4660:13" pos:end="4660:62"><expr pos:start="4660:13" pos:end="4660:61"><name pos:start="4660:13" pos:end="4660:15">ret</name> <operator pos:start="4660:17" pos:end="4660:17">=</operator> <call pos:start="4660:19" pos:end="4660:61"><name pos:start="4660:19" pos:end="4660:27">get_errno</name><argument_list pos:start="4660:28" pos:end="4660:61">(<argument pos:start="4660:29" pos:end="4660:60"><expr pos:start="4660:29" pos:end="4660:60"><call pos:start="4660:29" pos:end="4660:60"><name pos:start="4660:29" pos:end="4660:37">setgroups</name><argument_list pos:start="4660:38" pos:end="4660:60">(<argument pos:start="4660:39" pos:end="4660:48"><expr pos:start="4660:39" pos:end="4660:48"><name pos:start="4660:39" pos:end="4660:48">gidsetsize</name></expr></argument>, <argument pos:start="4660:51" pos:end="4660:59"><expr pos:start="4660:51" pos:end="4660:59"><name pos:start="4660:51" pos:end="4660:59">grouplist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="4664:9" pos:end="4669:0">break;</break>

<cpp:endif pos:start="4666:1" pos:end="4666:6">#<cpp:directive pos:start="4666:2" pos:end="4666:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4668:1" pos:end="4668:25">#<cpp:directive pos:start="4668:2" pos:end="4668:6">ifdef</cpp:directive> <name pos:start="4668:8" pos:end="4668:25">TARGET_NR_fchown32</name></cpp:ifdef>

    <case pos:start="4670:5" pos:end="4670:28">case <expr pos:start="4670:10" pos:end="4670:27"><name pos:start="4670:10" pos:end="4670:27">TARGET_NR_fchown32</name></expr>:</case>

        <expr_stmt pos:start="4672:9" pos:end="4672:50"><expr pos:start="4672:9" pos:end="4672:49"><name pos:start="4672:9" pos:end="4672:11">ret</name> <operator pos:start="4672:13" pos:end="4672:13">=</operator> <call pos:start="4672:15" pos:end="4672:49"><name pos:start="4672:15" pos:end="4672:23">get_errno</name><argument_list pos:start="4672:24" pos:end="4672:49">(<argument pos:start="4672:25" pos:end="4672:48"><expr pos:start="4672:25" pos:end="4672:48"><call pos:start="4672:25" pos:end="4672:48"><name pos:start="4672:25" pos:end="4672:30">fchown</name><argument_list pos:start="4672:31" pos:end="4672:48">(<argument pos:start="4672:32" pos:end="4672:35"><expr pos:start="4672:32" pos:end="4672:35"><name pos:start="4672:32" pos:end="4672:35">arg1</name></expr></argument>, <argument pos:start="4672:38" pos:end="4672:41"><expr pos:start="4672:38" pos:end="4672:41"><name pos:start="4672:38" pos:end="4672:41">arg2</name></expr></argument>, <argument pos:start="4672:44" pos:end="4672:47"><expr pos:start="4672:44" pos:end="4672:47"><name pos:start="4672:44" pos:end="4672:47">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4674:9" pos:end="4679:0">break;</break>

<cpp:endif pos:start="4676:1" pos:end="4676:6">#<cpp:directive pos:start="4676:2" pos:end="4676:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4678:1" pos:end="4678:28">#<cpp:directive pos:start="4678:2" pos:end="4678:6">ifdef</cpp:directive> <name pos:start="4678:8" pos:end="4678:28">TARGET_NR_setresuid32</name></cpp:ifdef>

    <case pos:start="4680:5" pos:end="4680:31">case <expr pos:start="4680:10" pos:end="4680:30"><name pos:start="4680:10" pos:end="4680:30">TARGET_NR_setresuid32</name></expr>:</case>

        <expr_stmt pos:start="4682:9" pos:end="4682:53"><expr pos:start="4682:9" pos:end="4682:52"><name pos:start="4682:9" pos:end="4682:11">ret</name> <operator pos:start="4682:13" pos:end="4682:13">=</operator> <call pos:start="4682:15" pos:end="4682:52"><name pos:start="4682:15" pos:end="4682:23">get_errno</name><argument_list pos:start="4682:24" pos:end="4682:52">(<argument pos:start="4682:25" pos:end="4682:51"><expr pos:start="4682:25" pos:end="4682:51"><call pos:start="4682:25" pos:end="4682:51"><name pos:start="4682:25" pos:end="4682:33">setresuid</name><argument_list pos:start="4682:34" pos:end="4682:51">(<argument pos:start="4682:35" pos:end="4682:38"><expr pos:start="4682:35" pos:end="4682:38"><name pos:start="4682:35" pos:end="4682:38">arg1</name></expr></argument>, <argument pos:start="4682:41" pos:end="4682:44"><expr pos:start="4682:41" pos:end="4682:44"><name pos:start="4682:41" pos:end="4682:44">arg2</name></expr></argument>, <argument pos:start="4682:47" pos:end="4682:50"><expr pos:start="4682:47" pos:end="4682:50"><name pos:start="4682:47" pos:end="4682:50">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4684:9" pos:end="4689:0">break;</break>

<cpp:endif pos:start="4686:1" pos:end="4686:6">#<cpp:directive pos:start="4686:2" pos:end="4686:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4688:1" pos:end="4688:28">#<cpp:directive pos:start="4688:2" pos:end="4688:6">ifdef</cpp:directive> <name pos:start="4688:8" pos:end="4688:28">TARGET_NR_getresuid32</name></cpp:ifdef>

    <case pos:start="4690:5" pos:end="4690:31">case <expr pos:start="4690:10" pos:end="4690:30"><name pos:start="4690:10" pos:end="4690:30">TARGET_NR_getresuid32</name></expr>:</case>

        <block pos:start="4692:9" pos:end="4710:9">{<block_content pos:start="4694:13" pos:end="4708:13">

            <decl_stmt pos:start="4694:13" pos:end="4694:35"><decl pos:start="4694:13" pos:end="4694:22"><type pos:start="4694:13" pos:end="4694:17"><name pos:start="4694:13" pos:end="4694:17">uid_t</name></type> <name pos:start="4694:19" pos:end="4694:22">ruid</name></decl>, <decl pos:start="4694:25" pos:end="4694:28"><type ref="prev" pos:start="4694:13" pos:end="4694:17"/><name pos:start="4694:25" pos:end="4694:28">euid</name></decl>, <decl pos:start="4694:31" pos:end="4694:34"><type ref="prev" pos:start="4694:13" pos:end="4694:17"/><name pos:start="4694:31" pos:end="4694:34">suid</name></decl>;</decl_stmt>

            <expr_stmt pos:start="4696:13" pos:end="4696:60"><expr pos:start="4696:13" pos:end="4696:59"><name pos:start="4696:13" pos:end="4696:15">ret</name> <operator pos:start="4696:17" pos:end="4696:17">=</operator> <call pos:start="4696:19" pos:end="4696:59"><name pos:start="4696:19" pos:end="4696:27">get_errno</name><argument_list pos:start="4696:28" pos:end="4696:59">(<argument pos:start="4696:29" pos:end="4696:58"><expr pos:start="4696:29" pos:end="4696:58"><call pos:start="4696:29" pos:end="4696:58"><name pos:start="4696:29" pos:end="4696:37">getresuid</name><argument_list pos:start="4696:38" pos:end="4696:58">(<argument pos:start="4696:39" pos:end="4696:43"><expr pos:start="4696:39" pos:end="4696:43"><operator pos:start="4696:39" pos:end="4696:39">&amp;</operator><name pos:start="4696:40" pos:end="4696:43">ruid</name></expr></argument>, <argument pos:start="4696:46" pos:end="4696:50"><expr pos:start="4696:46" pos:end="4696:50"><operator pos:start="4696:46" pos:end="4696:46">&amp;</operator><name pos:start="4696:47" pos:end="4696:50">euid</name></expr></argument>, <argument pos:start="4696:53" pos:end="4696:57"><expr pos:start="4696:53" pos:end="4696:57"><operator pos:start="4696:53" pos:end="4696:53">&amp;</operator><name pos:start="4696:54" pos:end="4696:57">suid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="4698:13" pos:end="4708:13"><if pos:start="4698:13" pos:end="4708:13">if <condition pos:start="4698:16" pos:end="4698:31">(<expr pos:start="4698:17" pos:end="4698:30"><operator pos:start="4698:17" pos:end="4698:17">!</operator><call pos:start="4698:18" pos:end="4698:30"><name pos:start="4698:18" pos:end="4698:25">is_error</name><argument_list pos:start="4698:26" pos:end="4698:30">(<argument pos:start="4698:27" pos:end="4698:29"><expr pos:start="4698:27" pos:end="4698:29"><name pos:start="4698:27" pos:end="4698:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="4698:33" pos:end="4708:13">{<block_content pos:start="4700:17" pos:end="4706:32">

                <if_stmt pos:start="4700:17" pos:end="4706:32"><if pos:start="4700:17" pos:end="4706:32">if <condition pos:start="4700:20" pos:end="4704:48">(<expr pos:start="4700:21" pos:end="4704:47"><call pos:start="4700:21" pos:end="4700:44"><name pos:start="4700:21" pos:end="4700:32">put_user_u32</name><argument_list pos:start="4700:33" pos:end="4700:44">(<argument pos:start="4700:34" pos:end="4700:37"><expr pos:start="4700:34" pos:end="4700:37"><name pos:start="4700:34" pos:end="4700:37">ruid</name></expr></argument>, <argument pos:start="4700:40" pos:end="4700:43"><expr pos:start="4700:40" pos:end="4700:43"><name pos:start="4700:40" pos:end="4700:43">arg1</name></expr></argument>)</argument_list></call>

                    <operator pos:start="4702:21" pos:end="4702:22">||</operator> <call pos:start="4702:24" pos:end="4702:47"><name pos:start="4702:24" pos:end="4702:35">put_user_u32</name><argument_list pos:start="4702:36" pos:end="4702:47">(<argument pos:start="4702:37" pos:end="4702:40"><expr pos:start="4702:37" pos:end="4702:40"><name pos:start="4702:37" pos:end="4702:40">euid</name></expr></argument>, <argument pos:start="4702:43" pos:end="4702:46"><expr pos:start="4702:43" pos:end="4702:46"><name pos:start="4702:43" pos:end="4702:46">arg2</name></expr></argument>)</argument_list></call>

                    <operator pos:start="4704:21" pos:end="4704:22">||</operator> <call pos:start="4704:24" pos:end="4704:47"><name pos:start="4704:24" pos:end="4704:35">put_user_u32</name><argument_list pos:start="4704:36" pos:end="4704:47">(<argument pos:start="4704:37" pos:end="4704:40"><expr pos:start="4704:37" pos:end="4704:40"><name pos:start="4704:37" pos:end="4704:40">suid</name></expr></argument>, <argument pos:start="4704:43" pos:end="4704:46"><expr pos:start="4704:43" pos:end="4704:46"><name pos:start="4704:43" pos:end="4704:46">arg3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4706:21" pos:end="4706:32"><block_content pos:start="4706:21" pos:end="4706:32">

                    <goto pos:start="4706:21" pos:end="4706:32">goto <name pos:start="4706:26" pos:end="4706:31">efault</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="4712:9" pos:end="4717:0">break;</break>

<cpp:endif pos:start="4714:1" pos:end="4714:6">#<cpp:directive pos:start="4714:2" pos:end="4714:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4716:1" pos:end="4716:28">#<cpp:directive pos:start="4716:2" pos:end="4716:6">ifdef</cpp:directive> <name pos:start="4716:8" pos:end="4716:28">TARGET_NR_setresgid32</name></cpp:ifdef>

    <case pos:start="4718:5" pos:end="4718:31">case <expr pos:start="4718:10" pos:end="4718:30"><name pos:start="4718:10" pos:end="4718:30">TARGET_NR_setresgid32</name></expr>:</case>

        <expr_stmt pos:start="4720:9" pos:end="4720:53"><expr pos:start="4720:9" pos:end="4720:52"><name pos:start="4720:9" pos:end="4720:11">ret</name> <operator pos:start="4720:13" pos:end="4720:13">=</operator> <call pos:start="4720:15" pos:end="4720:52"><name pos:start="4720:15" pos:end="4720:23">get_errno</name><argument_list pos:start="4720:24" pos:end="4720:52">(<argument pos:start="4720:25" pos:end="4720:51"><expr pos:start="4720:25" pos:end="4720:51"><call pos:start="4720:25" pos:end="4720:51"><name pos:start="4720:25" pos:end="4720:33">setresgid</name><argument_list pos:start="4720:34" pos:end="4720:51">(<argument pos:start="4720:35" pos:end="4720:38"><expr pos:start="4720:35" pos:end="4720:38"><name pos:start="4720:35" pos:end="4720:38">arg1</name></expr></argument>, <argument pos:start="4720:41" pos:end="4720:44"><expr pos:start="4720:41" pos:end="4720:44"><name pos:start="4720:41" pos:end="4720:44">arg2</name></expr></argument>, <argument pos:start="4720:47" pos:end="4720:50"><expr pos:start="4720:47" pos:end="4720:50"><name pos:start="4720:47" pos:end="4720:50">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4722:9" pos:end="4727:0">break;</break>

<cpp:endif pos:start="4724:1" pos:end="4724:6">#<cpp:directive pos:start="4724:2" pos:end="4724:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4726:1" pos:end="4726:28">#<cpp:directive pos:start="4726:2" pos:end="4726:6">ifdef</cpp:directive> <name pos:start="4726:8" pos:end="4726:28">TARGET_NR_getresgid32</name></cpp:ifdef>

    <case pos:start="4728:5" pos:end="4728:31">case <expr pos:start="4728:10" pos:end="4728:30"><name pos:start="4728:10" pos:end="4728:30">TARGET_NR_getresgid32</name></expr>:</case>

        <block pos:start="4730:9" pos:end="4748:9">{<block_content pos:start="4732:13" pos:end="4746:13">

            <decl_stmt pos:start="4732:13" pos:end="4732:35"><decl pos:start="4732:13" pos:end="4732:22"><type pos:start="4732:13" pos:end="4732:17"><name pos:start="4732:13" pos:end="4732:17">gid_t</name></type> <name pos:start="4732:19" pos:end="4732:22">rgid</name></decl>, <decl pos:start="4732:25" pos:end="4732:28"><type ref="prev" pos:start="4732:13" pos:end="4732:17"/><name pos:start="4732:25" pos:end="4732:28">egid</name></decl>, <decl pos:start="4732:31" pos:end="4732:34"><type ref="prev" pos:start="4732:13" pos:end="4732:17"/><name pos:start="4732:31" pos:end="4732:34">sgid</name></decl>;</decl_stmt>

            <expr_stmt pos:start="4734:13" pos:end="4734:60"><expr pos:start="4734:13" pos:end="4734:59"><name pos:start="4734:13" pos:end="4734:15">ret</name> <operator pos:start="4734:17" pos:end="4734:17">=</operator> <call pos:start="4734:19" pos:end="4734:59"><name pos:start="4734:19" pos:end="4734:27">get_errno</name><argument_list pos:start="4734:28" pos:end="4734:59">(<argument pos:start="4734:29" pos:end="4734:58"><expr pos:start="4734:29" pos:end="4734:58"><call pos:start="4734:29" pos:end="4734:58"><name pos:start="4734:29" pos:end="4734:37">getresgid</name><argument_list pos:start="4734:38" pos:end="4734:58">(<argument pos:start="4734:39" pos:end="4734:43"><expr pos:start="4734:39" pos:end="4734:43"><operator pos:start="4734:39" pos:end="4734:39">&amp;</operator><name pos:start="4734:40" pos:end="4734:43">rgid</name></expr></argument>, <argument pos:start="4734:46" pos:end="4734:50"><expr pos:start="4734:46" pos:end="4734:50"><operator pos:start="4734:46" pos:end="4734:46">&amp;</operator><name pos:start="4734:47" pos:end="4734:50">egid</name></expr></argument>, <argument pos:start="4734:53" pos:end="4734:57"><expr pos:start="4734:53" pos:end="4734:57"><operator pos:start="4734:53" pos:end="4734:53">&amp;</operator><name pos:start="4734:54" pos:end="4734:57">sgid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="4736:13" pos:end="4746:13"><if pos:start="4736:13" pos:end="4746:13">if <condition pos:start="4736:16" pos:end="4736:31">(<expr pos:start="4736:17" pos:end="4736:30"><operator pos:start="4736:17" pos:end="4736:17">!</operator><call pos:start="4736:18" pos:end="4736:30"><name pos:start="4736:18" pos:end="4736:25">is_error</name><argument_list pos:start="4736:26" pos:end="4736:30">(<argument pos:start="4736:27" pos:end="4736:29"><expr pos:start="4736:27" pos:end="4736:29"><name pos:start="4736:27" pos:end="4736:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="4736:33" pos:end="4746:13">{<block_content pos:start="4738:17" pos:end="4744:32">

                <if_stmt pos:start="4738:17" pos:end="4744:32"><if pos:start="4738:17" pos:end="4744:32">if <condition pos:start="4738:20" pos:end="4742:48">(<expr pos:start="4738:21" pos:end="4742:47"><call pos:start="4738:21" pos:end="4738:44"><name pos:start="4738:21" pos:end="4738:32">put_user_u32</name><argument_list pos:start="4738:33" pos:end="4738:44">(<argument pos:start="4738:34" pos:end="4738:37"><expr pos:start="4738:34" pos:end="4738:37"><name pos:start="4738:34" pos:end="4738:37">rgid</name></expr></argument>, <argument pos:start="4738:40" pos:end="4738:43"><expr pos:start="4738:40" pos:end="4738:43"><name pos:start="4738:40" pos:end="4738:43">arg1</name></expr></argument>)</argument_list></call>

                    <operator pos:start="4740:21" pos:end="4740:22">||</operator> <call pos:start="4740:24" pos:end="4740:47"><name pos:start="4740:24" pos:end="4740:35">put_user_u32</name><argument_list pos:start="4740:36" pos:end="4740:47">(<argument pos:start="4740:37" pos:end="4740:40"><expr pos:start="4740:37" pos:end="4740:40"><name pos:start="4740:37" pos:end="4740:40">egid</name></expr></argument>, <argument pos:start="4740:43" pos:end="4740:46"><expr pos:start="4740:43" pos:end="4740:46"><name pos:start="4740:43" pos:end="4740:46">arg2</name></expr></argument>)</argument_list></call>

                    <operator pos:start="4742:21" pos:end="4742:22">||</operator> <call pos:start="4742:24" pos:end="4742:47"><name pos:start="4742:24" pos:end="4742:35">put_user_u32</name><argument_list pos:start="4742:36" pos:end="4742:47">(<argument pos:start="4742:37" pos:end="4742:40"><expr pos:start="4742:37" pos:end="4742:40"><name pos:start="4742:37" pos:end="4742:40">sgid</name></expr></argument>, <argument pos:start="4742:43" pos:end="4742:46"><expr pos:start="4742:43" pos:end="4742:46"><name pos:start="4742:43" pos:end="4742:46">arg3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4744:21" pos:end="4744:32"><block_content pos:start="4744:21" pos:end="4744:32">

                    <goto pos:start="4744:21" pos:end="4744:32">goto <name pos:start="4744:26" pos:end="4744:31">efault</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="4750:9" pos:end="4755:0">break;</break>

<cpp:endif pos:start="4752:1" pos:end="4752:6">#<cpp:directive pos:start="4752:2" pos:end="4752:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4754:1" pos:end="4754:24">#<cpp:directive pos:start="4754:2" pos:end="4754:6">ifdef</cpp:directive> <name pos:start="4754:8" pos:end="4754:24">TARGET_NR_chown32</name></cpp:ifdef>

    <case pos:start="4756:5" pos:end="4756:27">case <expr pos:start="4756:10" pos:end="4756:26"><name pos:start="4756:10" pos:end="4756:26">TARGET_NR_chown32</name></expr>:</case>

        <if_stmt pos:start="4758:9" pos:end="4760:24"><if pos:start="4758:9" pos:end="4760:24">if <condition pos:start="4758:12" pos:end="4758:42">(<expr pos:start="4758:13" pos:end="4758:41"><operator pos:start="4758:13" pos:end="4758:13">!</operator><operator pos:start="4758:14" pos:end="4758:14">(</operator><name pos:start="4758:15" pos:end="4758:15">p</name> <operator pos:start="4758:17" pos:end="4758:17">=</operator> <call pos:start="4758:19" pos:end="4758:40"><name pos:start="4758:19" pos:end="4758:34">lock_user_string</name><argument_list pos:start="4758:35" pos:end="4758:40">(<argument pos:start="4758:36" pos:end="4758:39"><expr pos:start="4758:36" pos:end="4758:39"><name pos:start="4758:36" pos:end="4758:39">arg1</name></expr></argument>)</argument_list></call><operator pos:start="4758:41" pos:end="4758:41">)</operator></expr>)</condition><block type="pseudo" pos:start="4760:13" pos:end="4760:24"><block_content pos:start="4760:13" pos:end="4760:24">

            <goto pos:start="4760:13" pos:end="4760:24">goto <name pos:start="4760:18" pos:end="4760:23">efault</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="4762:9" pos:end="4762:46"><expr pos:start="4762:9" pos:end="4762:45"><name pos:start="4762:9" pos:end="4762:11">ret</name> <operator pos:start="4762:13" pos:end="4762:13">=</operator> <call pos:start="4762:15" pos:end="4762:45"><name pos:start="4762:15" pos:end="4762:23">get_errno</name><argument_list pos:start="4762:24" pos:end="4762:45">(<argument pos:start="4762:25" pos:end="4762:44"><expr pos:start="4762:25" pos:end="4762:44"><call pos:start="4762:25" pos:end="4762:44"><name pos:start="4762:25" pos:end="4762:29">chown</name><argument_list pos:start="4762:30" pos:end="4762:44">(<argument pos:start="4762:31" pos:end="4762:31"><expr pos:start="4762:31" pos:end="4762:31"><name pos:start="4762:31" pos:end="4762:31">p</name></expr></argument>, <argument pos:start="4762:34" pos:end="4762:37"><expr pos:start="4762:34" pos:end="4762:37"><name pos:start="4762:34" pos:end="4762:37">arg2</name></expr></argument>, <argument pos:start="4762:40" pos:end="4762:43"><expr pos:start="4762:40" pos:end="4762:43"><name pos:start="4762:40" pos:end="4762:43">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="4764:9" pos:end="4764:32"><expr pos:start="4764:9" pos:end="4764:31"><call pos:start="4764:9" pos:end="4764:31"><name pos:start="4764:9" pos:end="4764:19">unlock_user</name><argument_list pos:start="4764:20" pos:end="4764:31">(<argument pos:start="4764:21" pos:end="4764:21"><expr pos:start="4764:21" pos:end="4764:21"><name pos:start="4764:21" pos:end="4764:21">p</name></expr></argument>, <argument pos:start="4764:24" pos:end="4764:27"><expr pos:start="4764:24" pos:end="4764:27"><name pos:start="4764:24" pos:end="4764:27">arg1</name></expr></argument>, <argument pos:start="4764:30" pos:end="4764:30"><expr pos:start="4764:30" pos:end="4764:30"><literal type="number" pos:start="4764:30" pos:end="4764:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4766:9" pos:end="4771:0">break;</break>

<cpp:endif pos:start="4768:1" pos:end="4768:6">#<cpp:directive pos:start="4768:2" pos:end="4768:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4770:1" pos:end="4770:25">#<cpp:directive pos:start="4770:2" pos:end="4770:6">ifdef</cpp:directive> <name pos:start="4770:8" pos:end="4770:25">TARGET_NR_setuid32</name></cpp:ifdef>

    <case pos:start="4772:5" pos:end="4772:28">case <expr pos:start="4772:10" pos:end="4772:27"><name pos:start="4772:10" pos:end="4772:27">TARGET_NR_setuid32</name></expr>:</case>

        <expr_stmt pos:start="4774:9" pos:end="4774:38"><expr pos:start="4774:9" pos:end="4774:37"><name pos:start="4774:9" pos:end="4774:11">ret</name> <operator pos:start="4774:13" pos:end="4774:13">=</operator> <call pos:start="4774:15" pos:end="4774:37"><name pos:start="4774:15" pos:end="4774:23">get_errno</name><argument_list pos:start="4774:24" pos:end="4774:37">(<argument pos:start="4774:25" pos:end="4774:36"><expr pos:start="4774:25" pos:end="4774:36"><call pos:start="4774:25" pos:end="4774:36"><name pos:start="4774:25" pos:end="4774:30">setuid</name><argument_list pos:start="4774:31" pos:end="4774:36">(<argument pos:start="4774:32" pos:end="4774:35"><expr pos:start="4774:32" pos:end="4774:35"><name pos:start="4774:32" pos:end="4774:35">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4776:9" pos:end="4781:0">break;</break>

<cpp:endif pos:start="4778:1" pos:end="4778:6">#<cpp:directive pos:start="4778:2" pos:end="4778:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4780:1" pos:end="4780:25">#<cpp:directive pos:start="4780:2" pos:end="4780:6">ifdef</cpp:directive> <name pos:start="4780:8" pos:end="4780:25">TARGET_NR_setgid32</name></cpp:ifdef>

    <case pos:start="4782:5" pos:end="4782:28">case <expr pos:start="4782:10" pos:end="4782:27"><name pos:start="4782:10" pos:end="4782:27">TARGET_NR_setgid32</name></expr>:</case>

        <expr_stmt pos:start="4784:9" pos:end="4784:38"><expr pos:start="4784:9" pos:end="4784:37"><name pos:start="4784:9" pos:end="4784:11">ret</name> <operator pos:start="4784:13" pos:end="4784:13">=</operator> <call pos:start="4784:15" pos:end="4784:37"><name pos:start="4784:15" pos:end="4784:23">get_errno</name><argument_list pos:start="4784:24" pos:end="4784:37">(<argument pos:start="4784:25" pos:end="4784:36"><expr pos:start="4784:25" pos:end="4784:36"><call pos:start="4784:25" pos:end="4784:36"><name pos:start="4784:25" pos:end="4784:30">setgid</name><argument_list pos:start="4784:31" pos:end="4784:36">(<argument pos:start="4784:32" pos:end="4784:35"><expr pos:start="4784:32" pos:end="4784:35"><name pos:start="4784:32" pos:end="4784:35">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4786:9" pos:end="4791:0">break;</break>

<cpp:endif pos:start="4788:1" pos:end="4788:6">#<cpp:directive pos:start="4788:2" pos:end="4788:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4790:1" pos:end="4790:27">#<cpp:directive pos:start="4790:2" pos:end="4790:6">ifdef</cpp:directive> <name pos:start="4790:8" pos:end="4790:27">TARGET_NR_setfsuid32</name></cpp:ifdef>

    <case pos:start="4792:5" pos:end="4792:30">case <expr pos:start="4792:10" pos:end="4792:29"><name pos:start="4792:10" pos:end="4792:29">TARGET_NR_setfsuid32</name></expr>:</case>

        <expr_stmt pos:start="4794:9" pos:end="4794:40"><expr pos:start="4794:9" pos:end="4794:39"><name pos:start="4794:9" pos:end="4794:11">ret</name> <operator pos:start="4794:13" pos:end="4794:13">=</operator> <call pos:start="4794:15" pos:end="4794:39"><name pos:start="4794:15" pos:end="4794:23">get_errno</name><argument_list pos:start="4794:24" pos:end="4794:39">(<argument pos:start="4794:25" pos:end="4794:38"><expr pos:start="4794:25" pos:end="4794:38"><call pos:start="4794:25" pos:end="4794:38"><name pos:start="4794:25" pos:end="4794:32">setfsuid</name><argument_list pos:start="4794:33" pos:end="4794:38">(<argument pos:start="4794:34" pos:end="4794:37"><expr pos:start="4794:34" pos:end="4794:37"><name pos:start="4794:34" pos:end="4794:37">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4796:9" pos:end="4801:0">break;</break>

<cpp:endif pos:start="4798:1" pos:end="4798:6">#<cpp:directive pos:start="4798:2" pos:end="4798:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4800:1" pos:end="4800:27">#<cpp:directive pos:start="4800:2" pos:end="4800:6">ifdef</cpp:directive> <name pos:start="4800:8" pos:end="4800:27">TARGET_NR_setfsgid32</name></cpp:ifdef>

    <case pos:start="4802:5" pos:end="4802:30">case <expr pos:start="4802:10" pos:end="4802:29"><name pos:start="4802:10" pos:end="4802:29">TARGET_NR_setfsgid32</name></expr>:</case>

        <expr_stmt pos:start="4804:9" pos:end="4804:40"><expr pos:start="4804:9" pos:end="4804:39"><name pos:start="4804:9" pos:end="4804:11">ret</name> <operator pos:start="4804:13" pos:end="4804:13">=</operator> <call pos:start="4804:15" pos:end="4804:39"><name pos:start="4804:15" pos:end="4804:23">get_errno</name><argument_list pos:start="4804:24" pos:end="4804:39">(<argument pos:start="4804:25" pos:end="4804:38"><expr pos:start="4804:25" pos:end="4804:38"><call pos:start="4804:25" pos:end="4804:38"><name pos:start="4804:25" pos:end="4804:32">setfsgid</name><argument_list pos:start="4804:33" pos:end="4804:38">(<argument pos:start="4804:34" pos:end="4804:37"><expr pos:start="4804:34" pos:end="4804:37"><name pos:start="4804:34" pos:end="4804:37">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4806:9" pos:end="4809:0">break;</break>

<cpp:endif pos:start="4808:1" pos:end="4808:6">#<cpp:directive pos:start="4808:2" pos:end="4808:6">endif</cpp:directive></cpp:endif>



    <case pos:start="4812:5" pos:end="4812:30">case <expr pos:start="4812:10" pos:end="4812:29"><name pos:start="4812:10" pos:end="4812:29">TARGET_NR_pivot_root</name></expr>:</case>

        <goto pos:start="4814:9" pos:end="4817:0">goto <name pos:start="4814:14" pos:end="4814:26">unimplemented</name>;</goto>

<cpp:ifdef pos:start="4816:1" pos:end="4816:24">#<cpp:directive pos:start="4816:2" pos:end="4816:6">ifdef</cpp:directive> <name pos:start="4816:8" pos:end="4816:24">TARGET_NR_mincore</name></cpp:ifdef>

    <case pos:start="4818:5" pos:end="4818:27">case <expr pos:start="4818:10" pos:end="4818:26"><name pos:start="4818:10" pos:end="4818:26">TARGET_NR_mincore</name></expr>:</case>

        <block pos:start="4820:9" pos:end="4842:9">{<block_content pos:start="4822:13" pos:end="4840:36">

            <decl_stmt pos:start="4822:13" pos:end="4822:20"><decl pos:start="4822:13" pos:end="4822:19"><type pos:start="4822:13" pos:end="4822:18"><name pos:start="4822:13" pos:end="4822:16">void</name> <modifier pos:start="4822:18" pos:end="4822:18">*</modifier></type><name pos:start="4822:19" pos:end="4822:19">a</name></decl>;</decl_stmt>

            <expr_stmt pos:start="4824:13" pos:end="4824:33"><expr pos:start="4824:13" pos:end="4824:32"><name pos:start="4824:13" pos:end="4824:15">ret</name> <operator pos:start="4824:17" pos:end="4824:17">=</operator> <operator pos:start="4824:19" pos:end="4824:19">-</operator><name pos:start="4824:20" pos:end="4824:32">TARGET_EFAULT</name></expr>;</expr_stmt>

            <if_stmt pos:start="4826:13" pos:end="4828:28"><if pos:start="4826:13" pos:end="4828:28">if <condition pos:start="4826:16" pos:end="4826:60">(<expr pos:start="4826:17" pos:end="4826:59"><operator pos:start="4826:17" pos:end="4826:17">!</operator><operator pos:start="4826:18" pos:end="4826:18">(</operator><name pos:start="4826:19" pos:end="4826:19">a</name> <operator pos:start="4826:21" pos:end="4826:21">=</operator> <call pos:start="4826:23" pos:end="4826:58"><name pos:start="4826:23" pos:end="4826:31">lock_user</name><argument_list pos:start="4826:32" pos:end="4826:58">(<argument pos:start="4826:33" pos:end="4826:43"><expr pos:start="4826:33" pos:end="4826:43"><name pos:start="4826:33" pos:end="4826:43">VERIFY_READ</name></expr></argument>, <argument pos:start="4826:46" pos:end="4826:49"><expr pos:start="4826:46" pos:end="4826:49"><name pos:start="4826:46" pos:end="4826:49">arg1</name></expr></argument>,<argument pos:start="4826:51" pos:end="4826:54"><expr pos:start="4826:51" pos:end="4826:54"><name pos:start="4826:51" pos:end="4826:54">arg2</name></expr></argument>, <argument pos:start="4826:57" pos:end="4826:57"><expr pos:start="4826:57" pos:end="4826:57"><literal type="number" pos:start="4826:57" pos:end="4826:57">0</literal></expr></argument>)</argument_list></call><operator pos:start="4826:59" pos:end="4826:59">)</operator></expr>)</condition><block type="pseudo" pos:start="4828:17" pos:end="4828:28"><block_content pos:start="4828:17" pos:end="4828:28">

                <goto pos:start="4828:17" pos:end="4828:28">goto <name pos:start="4828:22" pos:end="4828:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="4830:13" pos:end="4832:34"><if pos:start="4830:13" pos:end="4832:34">if <condition pos:start="4830:16" pos:end="4830:46">(<expr pos:start="4830:17" pos:end="4830:45"><operator pos:start="4830:17" pos:end="4830:17">!</operator><operator pos:start="4830:18" pos:end="4830:18">(</operator><name pos:start="4830:19" pos:end="4830:19">p</name> <operator pos:start="4830:21" pos:end="4830:21">=</operator> <call pos:start="4830:23" pos:end="4830:44"><name pos:start="4830:23" pos:end="4830:38">lock_user_string</name><argument_list pos:start="4830:39" pos:end="4830:44">(<argument pos:start="4830:40" pos:end="4830:43"><expr pos:start="4830:40" pos:end="4830:43"><name pos:start="4830:40" pos:end="4830:43">arg3</name></expr></argument>)</argument_list></call><operator pos:start="4830:45" pos:end="4830:45">)</operator></expr>)</condition><block type="pseudo" pos:start="4832:17" pos:end="4832:34"><block_content pos:start="4832:17" pos:end="4832:34">

                <goto pos:start="4832:17" pos:end="4832:34">goto <name pos:start="4832:22" pos:end="4832:33">mincore_fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="4834:13" pos:end="4834:49"><expr pos:start="4834:13" pos:end="4834:48"><name pos:start="4834:13" pos:end="4834:15">ret</name> <operator pos:start="4834:17" pos:end="4834:17">=</operator> <call pos:start="4834:19" pos:end="4834:48"><name pos:start="4834:19" pos:end="4834:27">get_errno</name><argument_list pos:start="4834:28" pos:end="4834:48">(<argument pos:start="4834:29" pos:end="4834:47"><expr pos:start="4834:29" pos:end="4834:47"><call pos:start="4834:29" pos:end="4834:47"><name pos:start="4834:29" pos:end="4834:35">mincore</name><argument_list pos:start="4834:36" pos:end="4834:47">(<argument pos:start="4834:37" pos:end="4834:37"><expr pos:start="4834:37" pos:end="4834:37"><name pos:start="4834:37" pos:end="4834:37">a</name></expr></argument>, <argument pos:start="4834:40" pos:end="4834:43"><expr pos:start="4834:40" pos:end="4834:43"><name pos:start="4834:40" pos:end="4834:43">arg2</name></expr></argument>, <argument pos:start="4834:46" pos:end="4834:46"><expr pos:start="4834:46" pos:end="4834:46"><name pos:start="4834:46" pos:end="4834:46">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="4836:13" pos:end="4836:38"><expr pos:start="4836:13" pos:end="4836:37"><call pos:start="4836:13" pos:end="4836:37"><name pos:start="4836:13" pos:end="4836:23">unlock_user</name><argument_list pos:start="4836:24" pos:end="4836:37">(<argument pos:start="4836:25" pos:end="4836:25"><expr pos:start="4836:25" pos:end="4836:25"><name pos:start="4836:25" pos:end="4836:25">p</name></expr></argument>, <argument pos:start="4836:28" pos:end="4836:31"><expr pos:start="4836:28" pos:end="4836:31"><name pos:start="4836:28" pos:end="4836:31">arg3</name></expr></argument>, <argument pos:start="4836:34" pos:end="4836:36"><expr pos:start="4836:34" pos:end="4836:36"><name pos:start="4836:34" pos:end="4836:36">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <label pos:start="4838:13" pos:end="4838:25"><name pos:start="4838:13" pos:end="4838:24">mincore_fail</name>:</label>

            <expr_stmt pos:start="4840:13" pos:end="4840:36"><expr pos:start="4840:13" pos:end="4840:35"><call pos:start="4840:13" pos:end="4840:35"><name pos:start="4840:13" pos:end="4840:23">unlock_user</name><argument_list pos:start="4840:24" pos:end="4840:35">(<argument pos:start="4840:25" pos:end="4840:25"><expr pos:start="4840:25" pos:end="4840:25"><name pos:start="4840:25" pos:end="4840:25">a</name></expr></argument>, <argument pos:start="4840:28" pos:end="4840:31"><expr pos:start="4840:28" pos:end="4840:31"><name pos:start="4840:28" pos:end="4840:31">arg1</name></expr></argument>, <argument pos:start="4840:34" pos:end="4840:34"><expr pos:start="4840:34" pos:end="4840:34"><literal type="number" pos:start="4840:34" pos:end="4840:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="4844:9" pos:end="4849:0">break;</break>

<cpp:endif pos:start="4846:1" pos:end="4846:6">#<cpp:directive pos:start="4846:2" pos:end="4846:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4848:1" pos:end="4848:33">#<cpp:directive pos:start="4848:2" pos:end="4848:6">ifdef</cpp:directive> <name pos:start="4848:8" pos:end="4848:33">TARGET_NR_arm_fadvise64_64</name></cpp:ifdef>

    <case pos:start="4850:5" pos:end="4850:36">case <expr pos:start="4850:10" pos:end="4850:35"><name pos:start="4850:10" pos:end="4850:35">TARGET_NR_arm_fadvise64_64</name></expr>:</case>

	<block pos:start="4852:9" pos:end="4877:0">{<block_content pos:start="4862:17" pos:end="4868:28">

		<comment type="block" pos:start="4854:17" pos:end="4860:19">/*

		 * arm_fadvise64_64 looks like fadvise64_64 but

		 * with different argument order

		 */</comment>

		<decl_stmt pos:start="4862:17" pos:end="4862:30"><decl pos:start="4862:17" pos:end="4862:29"><type pos:start="4862:17" pos:end="4862:24"><name pos:start="4862:17" pos:end="4862:24">abi_long</name></type> <name pos:start="4862:26" pos:end="4862:29">temp</name></decl>;</decl_stmt>

		<expr_stmt pos:start="4864:17" pos:end="4864:28"><expr pos:start="4864:17" pos:end="4864:27"><name pos:start="4864:17" pos:end="4864:20">temp</name> <operator pos:start="4864:22" pos:end="4864:22">=</operator> <name pos:start="4864:24" pos:end="4864:27">arg3</name></expr>;</expr_stmt>

		<expr_stmt pos:start="4866:17" pos:end="4866:28"><expr pos:start="4866:17" pos:end="4866:27"><name pos:start="4866:17" pos:end="4866:20">arg3</name> <operator pos:start="4866:22" pos:end="4866:22">=</operator> <name pos:start="4866:24" pos:end="4866:27">arg4</name></expr>;</expr_stmt>

		<expr_stmt pos:start="4868:17" pos:end="4868:28"><expr pos:start="4868:17" pos:end="4868:27"><name pos:start="4868:17" pos:end="4868:20">arg4</name> <operator pos:start="4868:22" pos:end="4868:22">=</operator> <name pos:start="4868:24" pos:end="4868:27">temp</name></expr>;</expr_stmt>

	</block_content>}</block>

<cpp:endif pos:start="4872:1" pos:end="4872:6">#<cpp:directive pos:start="4872:2" pos:end="4872:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="4874:1" pos:end="4874:106">#<cpp:directive pos:start="4874:2" pos:end="4874:3">if</cpp:directive> <expr pos:start="4874:5" pos:end="4874:106"><call pos:start="4874:5" pos:end="4874:35"><name pos:start="4874:5" pos:end="4874:11">defined</name><argument_list pos:start="4874:12" pos:end="4874:35">(<argument pos:start="4874:13" pos:end="4874:34"><expr pos:start="4874:13" pos:end="4874:34"><name pos:start="4874:13" pos:end="4874:34">TARGET_NR_fadvise64_64</name></expr></argument>)</argument_list></call> <operator pos:start="4874:37" pos:end="4874:38">||</operator> <call pos:start="4874:40" pos:end="4874:74"><name pos:start="4874:40" pos:end="4874:46">defined</name><argument_list pos:start="4874:47" pos:end="4874:74">(<argument pos:start="4874:48" pos:end="4874:73"><expr pos:start="4874:48" pos:end="4874:73"><name pos:start="4874:48" pos:end="4874:73">TARGET_NR_arm_fadvise64_64</name></expr></argument>)</argument_list></call> <operator pos:start="4874:76" pos:end="4874:77">||</operator> <call pos:start="4874:79" pos:end="4874:106"><name pos:start="4874:79" pos:end="4874:85">defined</name><argument_list pos:start="4874:86" pos:end="4874:106">(<argument pos:start="4874:87" pos:end="4874:105"><expr pos:start="4874:87" pos:end="4874:105"><name pos:start="4874:87" pos:end="4874:105">TARGET_NR_fadvise64</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:ifdef pos:start="4876:1" pos:end="4876:29">#<cpp:directive pos:start="4876:2" pos:end="4876:6">ifdef</cpp:directive> <name pos:start="4876:8" pos:end="4876:29">TARGET_NR_fadvise64_64</name></cpp:ifdef>

    <case pos:start="4878:5" pos:end="4883:0">case <expr pos:start="4878:10" pos:end="4878:31"><name pos:start="4878:10" pos:end="4878:31">TARGET_NR_fadvise64_64</name></expr>:</case>

<cpp:endif pos:start="4880:1" pos:end="4880:6">#<cpp:directive pos:start="4880:2" pos:end="4880:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4882:1" pos:end="4882:26">#<cpp:directive pos:start="4882:2" pos:end="4882:6">ifdef</cpp:directive> <name pos:start="4882:8" pos:end="4882:26">TARGET_NR_fadvise64</name></cpp:ifdef>

    <case pos:start="4884:5" pos:end="4889:0">case <expr pos:start="4884:10" pos:end="4884:28"><name pos:start="4884:10" pos:end="4884:28">TARGET_NR_fadvise64</name></expr>:</case>

<cpp:endif pos:start="4886:1" pos:end="4886:6">#<cpp:directive pos:start="4886:2" pos:end="4886:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4888:1" pos:end="4888:19">#<cpp:directive pos:start="4888:2" pos:end="4888:6">ifdef</cpp:directive> <name pos:start="4888:8" pos:end="4888:19">TARGET_S390X</name></cpp:ifdef>

        <switch pos:start="4890:9" pos:end="4905:0">switch <condition pos:start="4890:16" pos:end="4890:21">(<expr pos:start="4890:17" pos:end="4890:20"><name pos:start="4890:17" pos:end="4890:20">arg4</name></expr>)</condition> <block pos:start="4890:23" pos:end="4905:0">{<block_content pos:start="4892:9" pos:end="4900:23">

        <case pos:start="4892:9" pos:end="4892:15">case <expr pos:start="4892:14" pos:end="4892:14"><literal type="number" pos:start="4892:14" pos:end="4892:14">4</literal></expr>:</case> <expr_stmt pos:start="4892:17" pos:end="4892:46"><expr pos:start="4892:17" pos:end="4892:45"><name pos:start="4892:17" pos:end="4892:20">arg4</name> <operator pos:start="4892:22" pos:end="4892:22">=</operator> <name pos:start="4892:24" pos:end="4892:41">POSIX_FADV_NOREUSE</name> <operator pos:start="4892:43" pos:end="4892:43">+</operator> <literal type="number" pos:start="4892:45" pos:end="4892:45">1</literal></expr>;</expr_stmt> <break pos:start="4892:48" pos:end="4892:53">break;</break> <comment type="block" pos:start="4892:55" pos:end="4892:91">/* make sure it's an invalid value */</comment>

        <case pos:start="4894:9" pos:end="4894:15">case <expr pos:start="4894:14" pos:end="4894:14"><literal type="number" pos:start="4894:14" pos:end="4894:14">5</literal></expr>:</case> <expr_stmt pos:start="4894:17" pos:end="4894:46"><expr pos:start="4894:17" pos:end="4894:45"><name pos:start="4894:17" pos:end="4894:20">arg4</name> <operator pos:start="4894:22" pos:end="4894:22">=</operator> <name pos:start="4894:24" pos:end="4894:41">POSIX_FADV_NOREUSE</name> <operator pos:start="4894:43" pos:end="4894:43">+</operator> <literal type="number" pos:start="4894:45" pos:end="4894:45">2</literal></expr>;</expr_stmt> <break pos:start="4894:48" pos:end="4894:53">break;</break> <comment type="block" pos:start="4894:55" pos:end="4894:65">/* ditto */</comment>

        <case pos:start="4896:9" pos:end="4896:15">case <expr pos:start="4896:14" pos:end="4896:14"><literal type="number" pos:start="4896:14" pos:end="4896:14">6</literal></expr>:</case> <expr_stmt pos:start="4896:17" pos:end="4896:43"><expr pos:start="4896:17" pos:end="4896:42"><name pos:start="4896:17" pos:end="4896:20">arg4</name> <operator pos:start="4896:22" pos:end="4896:22">=</operator> <name pos:start="4896:24" pos:end="4896:42">POSIX_FADV_DONTNEED</name></expr>;</expr_stmt> <break pos:start="4896:45" pos:end="4896:50">break;</break>

        <case pos:start="4898:9" pos:end="4898:15">case <expr pos:start="4898:14" pos:end="4898:14"><literal type="number" pos:start="4898:14" pos:end="4898:14">7</literal></expr>:</case> <expr_stmt pos:start="4898:17" pos:end="4898:42"><expr pos:start="4898:17" pos:end="4898:41"><name pos:start="4898:17" pos:end="4898:20">arg4</name> <operator pos:start="4898:22" pos:end="4898:22">=</operator> <name pos:start="4898:24" pos:end="4898:41">POSIX_FADV_NOREUSE</name></expr>;</expr_stmt> <break pos:start="4898:44" pos:end="4898:49">break;</break>

        <default pos:start="4900:9" pos:end="4900:16">default:</default> <break pos:start="4900:18" pos:end="4900:23">break;</break>

        </block_content>}</block></switch>

<cpp:endif pos:start="4904:1" pos:end="4904:6">#<cpp:directive pos:start="4904:2" pos:end="4904:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="4906:9" pos:end="4906:53"><expr pos:start="4906:9" pos:end="4906:52"><name pos:start="4906:9" pos:end="4906:11">ret</name> <operator pos:start="4906:13" pos:end="4906:13">=</operator> <operator pos:start="4906:15" pos:end="4906:15">-</operator><call pos:start="4906:16" pos:end="4906:52"><name pos:start="4906:16" pos:end="4906:28">posix_fadvise</name><argument_list pos:start="4906:29" pos:end="4906:52">(<argument pos:start="4906:30" pos:end="4906:33"><expr pos:start="4906:30" pos:end="4906:33"><name pos:start="4906:30" pos:end="4906:33">arg1</name></expr></argument>, <argument pos:start="4906:36" pos:end="4906:39"><expr pos:start="4906:36" pos:end="4906:39"><name pos:start="4906:36" pos:end="4906:39">arg2</name></expr></argument>, <argument pos:start="4906:42" pos:end="4906:45"><expr pos:start="4906:42" pos:end="4906:45"><name pos:start="4906:42" pos:end="4906:45">arg3</name></expr></argument>, <argument pos:start="4906:48" pos:end="4906:51"><expr pos:start="4906:48" pos:end="4906:51"><name pos:start="4906:48" pos:end="4906:51">arg4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="4908:9" pos:end="4913:0">break;</break>

<cpp:endif pos:start="4910:1" pos:end="4910:6">#<cpp:directive pos:start="4910:2" pos:end="4910:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="4912:1" pos:end="4912:24">#<cpp:directive pos:start="4912:2" pos:end="4912:6">ifdef</cpp:directive> <name pos:start="4912:8" pos:end="4912:24">TARGET_NR_madvise</name></cpp:ifdef>

    <case pos:start="4914:5" pos:end="4914:27">case <expr pos:start="4914:10" pos:end="4914:26"><name pos:start="4914:10" pos:end="4914:26">TARGET_NR_madvise</name></expr>:</case>

        <comment type="block" pos:start="4916:9" pos:end="4922:71">/* A straight passthrough may not be safe because qemu sometimes

           turns private flie-backed mappings into anonymous mappings.

           This will break MADV_DONTNEED.

           This is a hint, so ignoring and returning success is ok.  */</comment>

        <expr_stmt pos:start="4924:9" pos:end="4924:27"><expr pos:start="4924:9" pos:end="4924:26"><name pos:start="4924:9" pos:end="4924:11">ret</name> <operator pos:start="4924:13" pos:end="4924:13">=</operator> <call pos:start="4924:15" pos:end="4924:26"><name pos:start="4924:15" pos:end="4924:23">get_errno</name><argument_list pos:start="4924:24" pos:end="4924:26">(<argument pos:start="4924:25" pos:end="4924:25"><expr pos:start="4924:25" pos:end="4924:25"><literal type="number" pos:start="4924:25" pos:end="4924:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="4926:9" pos:end="4931:0">break;</break>

<cpp:endif pos:start="4928:1" pos:end="4928:6">#<cpp:directive pos:start="4928:2" pos:end="4928:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="4930:1" pos:end="4930:25">#<cpp:directive pos:start="4930:2" pos:end="4930:3">if</cpp:directive> <expr pos:start="4930:5" pos:end="4930:25"><name pos:start="4930:5" pos:end="4930:19">TARGET_ABI_BITS</name> <operator pos:start="4930:21" pos:end="4930:22">==</operator> <literal type="number" pos:start="4930:24" pos:end="4930:25">32</literal></expr></cpp:if>

    <case pos:start="4932:5" pos:end="4932:27">case <expr pos:start="4932:10" pos:end="4932:26"><name pos:start="4932:10" pos:end="4932:26">TARGET_NR_fcntl64</name></expr>:</case>

    <block pos:start="4934:5" pos:end="5127:0">{<block_content pos:start="4936:9" pos:end="5120:14">

	<decl_stmt pos:start="4936:9" pos:end="4936:16"><decl pos:start="4936:9" pos:end="4936:15"><type pos:start="4936:9" pos:end="4936:11"><name pos:start="4936:9" pos:end="4936:11">int</name></type> <name pos:start="4936:13" pos:end="4936:15">cmd</name></decl>;</decl_stmt>

	<decl_stmt pos:start="4938:9" pos:end="4938:26"><decl pos:start="4938:9" pos:end="4938:25"><type pos:start="4938:9" pos:end="4938:22"><name pos:start="4938:9" pos:end="4938:22"><name pos:start="4938:9" pos:end="4938:14">struct</name> <name pos:start="4938:16" pos:end="4938:22">flock64</name></name></type> <name pos:start="4938:24" pos:end="4938:25">fl</name></decl>;</decl_stmt>

	<decl_stmt pos:start="4940:9" pos:end="4943:0"><decl pos:start="4940:9" pos:end="4940:40"><type pos:start="4940:9" pos:end="4940:31"><name pos:start="4940:9" pos:end="4940:29"><name pos:start="4940:9" pos:end="4940:14">struct</name> <name pos:start="4940:16" pos:end="4940:29">target_flock64</name></name> <modifier pos:start="4940:31" pos:end="4940:31">*</modifier></type><name pos:start="4940:32" pos:end="4940:40">target_fl</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="4942:1" pos:end="4942:17">#<cpp:directive pos:start="4942:2" pos:end="4942:6">ifdef</cpp:directive> <name pos:start="4942:8" pos:end="4942:17">TARGET_ARM</name></cpp:ifdef>

	<decl_stmt pos:start="4944:9" pos:end="4947:0"><decl pos:start="4944:9" pos:end="4944:46"><type pos:start="4944:9" pos:end="4944:36"><name pos:start="4944:9" pos:end="4944:34"><name pos:start="4944:9" pos:end="4944:14">struct</name> <name pos:start="4944:16" pos:end="4944:34">target_eabi_flock64</name></name> <modifier pos:start="4944:36" pos:end="4944:36">*</modifier></type><name pos:start="4944:37" pos:end="4944:46">target_efl</name></decl>;</decl_stmt>

<cpp:endif pos:start="4946:1" pos:end="4946:6">#<cpp:directive pos:start="4946:2" pos:end="4946:6">endif</cpp:directive></cpp:endif>



	<expr_stmt pos:start="4950:9" pos:end="4950:45"><expr pos:start="4950:9" pos:end="4950:44"><name pos:start="4950:9" pos:end="4950:11">cmd</name> <operator pos:start="4950:13" pos:end="4950:13">=</operator> <call pos:start="4950:15" pos:end="4950:44"><name pos:start="4950:15" pos:end="4950:38">target_to_host_fcntl_cmd</name><argument_list pos:start="4950:39" pos:end="4950:44">(<argument pos:start="4950:40" pos:end="4950:43"><expr pos:start="4950:40" pos:end="4950:43"><name pos:start="4950:40" pos:end="4950:43">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="4952:9" pos:end="4954:27"><if pos:start="4952:9" pos:end="4954:27">if <condition pos:start="4952:12" pos:end="4952:34">(<expr pos:start="4952:13" pos:end="4952:33"><name pos:start="4952:13" pos:end="4952:15">cmd</name> <operator pos:start="4952:17" pos:end="4952:18">==</operator> <operator pos:start="4952:20" pos:end="4952:20">-</operator><name pos:start="4952:21" pos:end="4952:33">TARGET_EINVAL</name></expr>)</condition><block type="pseudo" pos:start="4954:17" pos:end="4954:27"><block_content pos:start="4954:17" pos:end="4954:27">

		<return pos:start="4954:17" pos:end="4954:27">return <expr pos:start="4954:24" pos:end="4954:26"><name pos:start="4954:24" pos:end="4954:26">cmd</name></expr>;</return></block_content></block></if></if_stmt>



        <switch pos:start="4958:9" pos:end="5118:9">switch<condition pos:start="4958:15" pos:end="4958:20">(<expr pos:start="4958:16" pos:end="4958:19"><name pos:start="4958:16" pos:end="4958:19">arg2</name></expr>)</condition> <block pos:start="4958:22" pos:end="5118:9">{<block_content pos:start="4960:9" pos:end="5116:18">

        <case pos:start="4960:9" pos:end="4963:0">case <expr pos:start="4960:14" pos:end="4960:29"><name pos:start="4960:14" pos:end="4960:29">TARGET_F_GETLK64</name></expr>:</case>

<cpp:ifdef pos:start="4962:1" pos:end="4962:17">#<cpp:directive pos:start="4962:2" pos:end="4962:6">ifdef</cpp:directive> <name pos:start="4962:8" pos:end="4962:17">TARGET_ARM</name></cpp:ifdef>

            <if_stmt pos:start="4964:13" pos:end="5004:13"><if pos:start="4964:13" pos:end="4982:13">if <condition pos:start="4964:16" pos:end="4964:47">(<expr pos:start="4964:17" pos:end="4964:46"><operator pos:start="4964:17" pos:end="4964:17">(</operator><operator pos:start="4964:18" pos:end="4964:18">(</operator><name pos:start="4964:19" pos:end="4964:29">CPUARMState</name> <operator pos:start="4964:31" pos:end="4964:31">*</operator><operator pos:start="4964:32" pos:end="4964:32">)</operator><name pos:start="4964:33" pos:end="4964:39">cpu_env</name><operator pos:start="4964:40" pos:end="4964:40">)</operator><operator pos:start="4964:41" pos:end="4964:42">-&gt;</operator><name pos:start="4964:43" pos:end="4964:46">eabi</name></expr>)</condition> <block pos:start="4964:49" pos:end="4982:13">{<block_content pos:start="4966:17" pos:end="4980:56">

                <if_stmt pos:start="4966:17" pos:end="4968:32"><if pos:start="4966:17" pos:end="4968:32">if <condition pos:start="4966:20" pos:end="4966:72">(<expr pos:start="4966:21" pos:end="4966:71"><operator pos:start="4966:21" pos:end="4966:21">!</operator><call pos:start="4966:22" pos:end="4966:71"><name pos:start="4966:22" pos:end="4966:37">lock_user_struct</name><argument_list pos:start="4966:38" pos:end="4966:71">(<argument pos:start="4966:39" pos:end="4966:49"><expr pos:start="4966:39" pos:end="4966:49"><name pos:start="4966:39" pos:end="4966:49">VERIFY_READ</name></expr></argument>, <argument pos:start="4966:52" pos:end="4966:61"><expr pos:start="4966:52" pos:end="4966:61"><name pos:start="4966:52" pos:end="4966:61">target_efl</name></expr></argument>, <argument pos:start="4966:64" pos:end="4966:67"><expr pos:start="4966:64" pos:end="4966:67"><name pos:start="4966:64" pos:end="4966:67">arg3</name></expr></argument>, <argument pos:start="4966:70" pos:end="4966:70"><expr pos:start="4966:70" pos:end="4966:70"><literal type="number" pos:start="4966:70" pos:end="4966:70">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4968:21" pos:end="4968:32"><block_content pos:start="4968:21" pos:end="4968:32"> 

                    <goto pos:start="4968:21" pos:end="4968:32">goto <name pos:start="4968:26" pos:end="4968:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="4970:17" pos:end="4970:56"><expr pos:start="4970:17" pos:end="4970:55"><name pos:start="4970:17" pos:end="4970:25"><name pos:start="4970:17" pos:end="4970:18">fl</name><operator pos:start="4970:19" pos:end="4970:19">.</operator><name pos:start="4970:20" pos:end="4970:25">l_type</name></name> <operator pos:start="4970:27" pos:end="4970:27">=</operator> <call pos:start="4970:29" pos:end="4970:55"><name pos:start="4970:29" pos:end="4970:35">tswap16</name><argument_list pos:start="4970:36" pos:end="4970:55">(<argument pos:start="4970:37" pos:end="4970:54"><expr pos:start="4970:37" pos:end="4970:54"><name pos:start="4970:37" pos:end="4970:54"><name pos:start="4970:37" pos:end="4970:46">target_efl</name><operator pos:start="4970:47" pos:end="4970:48">-&gt;</operator><name pos:start="4970:49" pos:end="4970:54">l_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4972:17" pos:end="4972:60"><expr pos:start="4972:17" pos:end="4972:59"><name pos:start="4972:17" pos:end="4972:27"><name pos:start="4972:17" pos:end="4972:18">fl</name><operator pos:start="4972:19" pos:end="4972:19">.</operator><name pos:start="4972:20" pos:end="4972:27">l_whence</name></name> <operator pos:start="4972:29" pos:end="4972:29">=</operator> <call pos:start="4972:31" pos:end="4972:59"><name pos:start="4972:31" pos:end="4972:37">tswap16</name><argument_list pos:start="4972:38" pos:end="4972:59">(<argument pos:start="4972:39" pos:end="4972:58"><expr pos:start="4972:39" pos:end="4972:58"><name pos:start="4972:39" pos:end="4972:58"><name pos:start="4972:39" pos:end="4972:48">target_efl</name><operator pos:start="4972:49" pos:end="4972:50">-&gt;</operator><name pos:start="4972:51" pos:end="4972:58">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4974:17" pos:end="4974:58"><expr pos:start="4974:17" pos:end="4974:57"><name pos:start="4974:17" pos:end="4974:26"><name pos:start="4974:17" pos:end="4974:18">fl</name><operator pos:start="4974:19" pos:end="4974:19">.</operator><name pos:start="4974:20" pos:end="4974:26">l_start</name></name> <operator pos:start="4974:28" pos:end="4974:28">=</operator> <call pos:start="4974:30" pos:end="4974:57"><name pos:start="4974:30" pos:end="4974:36">tswap64</name><argument_list pos:start="4974:37" pos:end="4974:57">(<argument pos:start="4974:38" pos:end="4974:56"><expr pos:start="4974:38" pos:end="4974:56"><name pos:start="4974:38" pos:end="4974:56"><name pos:start="4974:38" pos:end="4974:47">target_efl</name><operator pos:start="4974:48" pos:end="4974:49">-&gt;</operator><name pos:start="4974:50" pos:end="4974:56">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4976:17" pos:end="4976:54"><expr pos:start="4976:17" pos:end="4976:53"><name pos:start="4976:17" pos:end="4976:24"><name pos:start="4976:17" pos:end="4976:18">fl</name><operator pos:start="4976:19" pos:end="4976:19">.</operator><name pos:start="4976:20" pos:end="4976:24">l_len</name></name> <operator pos:start="4976:26" pos:end="4976:26">=</operator> <call pos:start="4976:28" pos:end="4976:53"><name pos:start="4976:28" pos:end="4976:34">tswap64</name><argument_list pos:start="4976:35" pos:end="4976:53">(<argument pos:start="4976:36" pos:end="4976:52"><expr pos:start="4976:36" pos:end="4976:52"><name pos:start="4976:36" pos:end="4976:52"><name pos:start="4976:36" pos:end="4976:45">target_efl</name><operator pos:start="4976:46" pos:end="4976:47">-&gt;</operator><name pos:start="4976:48" pos:end="4976:52">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4978:17" pos:end="4978:54"><expr pos:start="4978:17" pos:end="4978:53"><name pos:start="4978:17" pos:end="4978:24"><name pos:start="4978:17" pos:end="4978:18">fl</name><operator pos:start="4978:19" pos:end="4978:19">.</operator><name pos:start="4978:20" pos:end="4978:24">l_pid</name></name> <operator pos:start="4978:26" pos:end="4978:26">=</operator> <call pos:start="4978:28" pos:end="4978:53"><name pos:start="4978:28" pos:end="4978:34">tswap32</name><argument_list pos:start="4978:35" pos:end="4978:53">(<argument pos:start="4978:36" pos:end="4978:52"><expr pos:start="4978:36" pos:end="4978:52"><name pos:start="4978:36" pos:end="4978:52"><name pos:start="4978:36" pos:end="4978:45">target_efl</name><operator pos:start="4978:46" pos:end="4978:47">-&gt;</operator><name pos:start="4978:48" pos:end="4978:52">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4980:17" pos:end="4980:56"><expr pos:start="4980:17" pos:end="4980:55"><call pos:start="4980:17" pos:end="4980:55"><name pos:start="4980:17" pos:end="4980:34">unlock_user_struct</name><argument_list pos:start="4980:35" pos:end="4980:55">(<argument pos:start="4980:36" pos:end="4980:45"><expr pos:start="4980:36" pos:end="4980:45"><name pos:start="4980:36" pos:end="4980:45">target_efl</name></expr></argument>, <argument pos:start="4980:48" pos:end="4980:51"><expr pos:start="4980:48" pos:end="4980:51"><name pos:start="4980:48" pos:end="4980:51">arg3</name></expr></argument>, <argument pos:start="4980:54" pos:end="4980:54"><expr pos:start="4980:54" pos:end="4980:54"><literal type="number" pos:start="4980:54" pos:end="4980:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="4982:15" pos:end="5004:13">else

<cpp:endif pos:start="4984:1" pos:end="4984:6">#<cpp:directive pos:start="4984:2" pos:end="4984:6">endif</cpp:directive></cpp:endif>

            <block pos:start="4986:13" pos:end="5004:13">{<block_content pos:start="4988:17" pos:end="5002:55">

                <if_stmt pos:start="4988:17" pos:end="4990:32"><if pos:start="4988:17" pos:end="4990:32">if <condition pos:start="4988:20" pos:end="4988:71">(<expr pos:start="4988:21" pos:end="4988:70"><operator pos:start="4988:21" pos:end="4988:21">!</operator><call pos:start="4988:22" pos:end="4988:70"><name pos:start="4988:22" pos:end="4988:37">lock_user_struct</name><argument_list pos:start="4988:38" pos:end="4988:70">(<argument pos:start="4988:39" pos:end="4988:49"><expr pos:start="4988:39" pos:end="4988:49"><name pos:start="4988:39" pos:end="4988:49">VERIFY_READ</name></expr></argument>, <argument pos:start="4988:52" pos:end="4988:60"><expr pos:start="4988:52" pos:end="4988:60"><name pos:start="4988:52" pos:end="4988:60">target_fl</name></expr></argument>, <argument pos:start="4988:63" pos:end="4988:66"><expr pos:start="4988:63" pos:end="4988:66"><name pos:start="4988:63" pos:end="4988:66">arg3</name></expr></argument>, <argument pos:start="4988:69" pos:end="4988:69"><expr pos:start="4988:69" pos:end="4988:69"><literal type="number" pos:start="4988:69" pos:end="4988:69">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="4990:21" pos:end="4990:32"><block_content pos:start="4990:21" pos:end="4990:32"> 

                    <goto pos:start="4990:21" pos:end="4990:32">goto <name pos:start="4990:26" pos:end="4990:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="4992:17" pos:end="4992:55"><expr pos:start="4992:17" pos:end="4992:54"><name pos:start="4992:17" pos:end="4992:25"><name pos:start="4992:17" pos:end="4992:18">fl</name><operator pos:start="4992:19" pos:end="4992:19">.</operator><name pos:start="4992:20" pos:end="4992:25">l_type</name></name> <operator pos:start="4992:27" pos:end="4992:27">=</operator> <call pos:start="4992:29" pos:end="4992:54"><name pos:start="4992:29" pos:end="4992:35">tswap16</name><argument_list pos:start="4992:36" pos:end="4992:54">(<argument pos:start="4992:37" pos:end="4992:53"><expr pos:start="4992:37" pos:end="4992:53"><name pos:start="4992:37" pos:end="4992:53"><name pos:start="4992:37" pos:end="4992:45">target_fl</name><operator pos:start="4992:46" pos:end="4992:47">-&gt;</operator><name pos:start="4992:48" pos:end="4992:53">l_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4994:17" pos:end="4994:59"><expr pos:start="4994:17" pos:end="4994:58"><name pos:start="4994:17" pos:end="4994:27"><name pos:start="4994:17" pos:end="4994:18">fl</name><operator pos:start="4994:19" pos:end="4994:19">.</operator><name pos:start="4994:20" pos:end="4994:27">l_whence</name></name> <operator pos:start="4994:29" pos:end="4994:29">=</operator> <call pos:start="4994:31" pos:end="4994:58"><name pos:start="4994:31" pos:end="4994:37">tswap16</name><argument_list pos:start="4994:38" pos:end="4994:58">(<argument pos:start="4994:39" pos:end="4994:57"><expr pos:start="4994:39" pos:end="4994:57"><name pos:start="4994:39" pos:end="4994:57"><name pos:start="4994:39" pos:end="4994:47">target_fl</name><operator pos:start="4994:48" pos:end="4994:49">-&gt;</operator><name pos:start="4994:50" pos:end="4994:57">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4996:17" pos:end="4996:57"><expr pos:start="4996:17" pos:end="4996:56"><name pos:start="4996:17" pos:end="4996:26"><name pos:start="4996:17" pos:end="4996:18">fl</name><operator pos:start="4996:19" pos:end="4996:19">.</operator><name pos:start="4996:20" pos:end="4996:26">l_start</name></name> <operator pos:start="4996:28" pos:end="4996:28">=</operator> <call pos:start="4996:30" pos:end="4996:56"><name pos:start="4996:30" pos:end="4996:36">tswap64</name><argument_list pos:start="4996:37" pos:end="4996:56">(<argument pos:start="4996:38" pos:end="4996:55"><expr pos:start="4996:38" pos:end="4996:55"><name pos:start="4996:38" pos:end="4996:55"><name pos:start="4996:38" pos:end="4996:46">target_fl</name><operator pos:start="4996:47" pos:end="4996:48">-&gt;</operator><name pos:start="4996:49" pos:end="4996:55">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="4998:17" pos:end="4998:53"><expr pos:start="4998:17" pos:end="4998:52"><name pos:start="4998:17" pos:end="4998:24"><name pos:start="4998:17" pos:end="4998:18">fl</name><operator pos:start="4998:19" pos:end="4998:19">.</operator><name pos:start="4998:20" pos:end="4998:24">l_len</name></name> <operator pos:start="4998:26" pos:end="4998:26">=</operator> <call pos:start="4998:28" pos:end="4998:52"><name pos:start="4998:28" pos:end="4998:34">tswap64</name><argument_list pos:start="4998:35" pos:end="4998:52">(<argument pos:start="4998:36" pos:end="4998:51"><expr pos:start="4998:36" pos:end="4998:51"><name pos:start="4998:36" pos:end="4998:51"><name pos:start="4998:36" pos:end="4998:44">target_fl</name><operator pos:start="4998:45" pos:end="4998:46">-&gt;</operator><name pos:start="4998:47" pos:end="4998:51">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5000:17" pos:end="5000:53"><expr pos:start="5000:17" pos:end="5000:52"><name pos:start="5000:17" pos:end="5000:24"><name pos:start="5000:17" pos:end="5000:18">fl</name><operator pos:start="5000:19" pos:end="5000:19">.</operator><name pos:start="5000:20" pos:end="5000:24">l_pid</name></name> <operator pos:start="5000:26" pos:end="5000:26">=</operator> <call pos:start="5000:28" pos:end="5000:52"><name pos:start="5000:28" pos:end="5000:34">tswap32</name><argument_list pos:start="5000:35" pos:end="5000:52">(<argument pos:start="5000:36" pos:end="5000:51"><expr pos:start="5000:36" pos:end="5000:51"><name pos:start="5000:36" pos:end="5000:51"><name pos:start="5000:36" pos:end="5000:44">target_fl</name><operator pos:start="5000:45" pos:end="5000:46">-&gt;</operator><name pos:start="5000:47" pos:end="5000:51">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5002:17" pos:end="5002:55"><expr pos:start="5002:17" pos:end="5002:54"><call pos:start="5002:17" pos:end="5002:54"><name pos:start="5002:17" pos:end="5002:34">unlock_user_struct</name><argument_list pos:start="5002:35" pos:end="5002:54">(<argument pos:start="5002:36" pos:end="5002:44"><expr pos:start="5002:36" pos:end="5002:44"><name pos:start="5002:36" pos:end="5002:44">target_fl</name></expr></argument>, <argument pos:start="5002:47" pos:end="5002:50"><expr pos:start="5002:47" pos:end="5002:50"><name pos:start="5002:47" pos:end="5002:50">arg3</name></expr></argument>, <argument pos:start="5002:53" pos:end="5002:53"><expr pos:start="5002:53" pos:end="5002:53"><literal type="number" pos:start="5002:53" pos:end="5002:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="5006:13" pos:end="5006:51"><expr pos:start="5006:13" pos:end="5006:50"><name pos:start="5006:13" pos:end="5006:15">ret</name> <operator pos:start="5006:17" pos:end="5006:17">=</operator> <call pos:start="5006:19" pos:end="5006:50"><name pos:start="5006:19" pos:end="5006:27">get_errno</name><argument_list pos:start="5006:28" pos:end="5006:50">(<argument pos:start="5006:29" pos:end="5006:49"><expr pos:start="5006:29" pos:end="5006:49"><call pos:start="5006:29" pos:end="5006:49"><name pos:start="5006:29" pos:end="5006:33">fcntl</name><argument_list pos:start="5006:34" pos:end="5006:49">(<argument pos:start="5006:35" pos:end="5006:38"><expr pos:start="5006:35" pos:end="5006:38"><name pos:start="5006:35" pos:end="5006:38">arg1</name></expr></argument>, <argument pos:start="5006:41" pos:end="5006:43"><expr pos:start="5006:41" pos:end="5006:43"><name pos:start="5006:41" pos:end="5006:43">cmd</name></expr></argument>, <argument pos:start="5006:46" pos:end="5006:48"><expr pos:start="5006:46" pos:end="5006:48"><operator pos:start="5006:46" pos:end="5006:46">&amp;</operator><name pos:start="5006:47" pos:end="5006:48">fl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <if_stmt pos:start="5008:13" pos:end="5054:13"><if pos:start="5008:13" pos:end="5054:13">if <condition pos:start="5008:16" pos:end="5008:25">(<expr pos:start="5008:17" pos:end="5008:24"><name pos:start="5008:17" pos:end="5008:19">ret</name> <operator pos:start="5008:21" pos:end="5008:22">==</operator> <literal type="number" pos:start="5008:24" pos:end="5008:24">0</literal></expr>)</condition> <block pos:start="5008:27" pos:end="5054:13">{<block_content pos:start="5012:17" pos:end="5052:17">

<cpp:ifdef pos:start="5010:1" pos:end="5010:17">#<cpp:directive pos:start="5010:2" pos:end="5010:6">ifdef</cpp:directive> <name pos:start="5010:8" pos:end="5010:17">TARGET_ARM</name></cpp:ifdef>

                <if_stmt pos:start="5012:17" pos:end="5052:17"><if pos:start="5012:17" pos:end="5030:17">if <condition pos:start="5012:20" pos:end="5012:51">(<expr pos:start="5012:21" pos:end="5012:50"><operator pos:start="5012:21" pos:end="5012:21">(</operator><operator pos:start="5012:22" pos:end="5012:22">(</operator><name pos:start="5012:23" pos:end="5012:33">CPUARMState</name> <operator pos:start="5012:35" pos:end="5012:35">*</operator><operator pos:start="5012:36" pos:end="5012:36">)</operator><name pos:start="5012:37" pos:end="5012:43">cpu_env</name><operator pos:start="5012:44" pos:end="5012:44">)</operator><operator pos:start="5012:45" pos:end="5012:46">-&gt;</operator><name pos:start="5012:47" pos:end="5012:50">eabi</name></expr>)</condition> <block pos:start="5012:53" pos:end="5030:17">{<block_content pos:start="5014:21" pos:end="5028:60">

                    <if_stmt pos:start="5014:21" pos:end="5016:36"><if pos:start="5014:21" pos:end="5016:36">if <condition pos:start="5014:24" pos:end="5014:77">(<expr pos:start="5014:25" pos:end="5014:76"><operator pos:start="5014:25" pos:end="5014:25">!</operator><call pos:start="5014:26" pos:end="5014:76"><name pos:start="5014:26" pos:end="5014:41">lock_user_struct</name><argument_list pos:start="5014:42" pos:end="5014:76">(<argument pos:start="5014:43" pos:end="5014:54"><expr pos:start="5014:43" pos:end="5014:54"><name pos:start="5014:43" pos:end="5014:54">VERIFY_WRITE</name></expr></argument>, <argument pos:start="5014:57" pos:end="5014:66"><expr pos:start="5014:57" pos:end="5014:66"><name pos:start="5014:57" pos:end="5014:66">target_efl</name></expr></argument>, <argument pos:start="5014:69" pos:end="5014:72"><expr pos:start="5014:69" pos:end="5014:72"><name pos:start="5014:69" pos:end="5014:72">arg3</name></expr></argument>, <argument pos:start="5014:75" pos:end="5014:75"><expr pos:start="5014:75" pos:end="5014:75"><literal type="number" pos:start="5014:75" pos:end="5014:75">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="5016:25" pos:end="5016:36"><block_content pos:start="5016:25" pos:end="5016:36"> 

                        <goto pos:start="5016:25" pos:end="5016:36">goto <name pos:start="5016:30" pos:end="5016:35">efault</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="5018:21" pos:end="5018:60"><expr pos:start="5018:21" pos:end="5018:59"><name pos:start="5018:21" pos:end="5018:38"><name pos:start="5018:21" pos:end="5018:30">target_efl</name><operator pos:start="5018:31" pos:end="5018:32">-&gt;</operator><name pos:start="5018:33" pos:end="5018:38">l_type</name></name> <operator pos:start="5018:40" pos:end="5018:40">=</operator> <call pos:start="5018:42" pos:end="5018:59"><name pos:start="5018:42" pos:end="5018:48">tswap16</name><argument_list pos:start="5018:49" pos:end="5018:59">(<argument pos:start="5018:50" pos:end="5018:58"><expr pos:start="5018:50" pos:end="5018:58"><name pos:start="5018:50" pos:end="5018:58"><name pos:start="5018:50" pos:end="5018:51">fl</name><operator pos:start="5018:52" pos:end="5018:52">.</operator><name pos:start="5018:53" pos:end="5018:58">l_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="5020:21" pos:end="5020:64"><expr pos:start="5020:21" pos:end="5020:63"><name pos:start="5020:21" pos:end="5020:40"><name pos:start="5020:21" pos:end="5020:30">target_efl</name><operator pos:start="5020:31" pos:end="5020:32">-&gt;</operator><name pos:start="5020:33" pos:end="5020:40">l_whence</name></name> <operator pos:start="5020:42" pos:end="5020:42">=</operator> <call pos:start="5020:44" pos:end="5020:63"><name pos:start="5020:44" pos:end="5020:50">tswap16</name><argument_list pos:start="5020:51" pos:end="5020:63">(<argument pos:start="5020:52" pos:end="5020:62"><expr pos:start="5020:52" pos:end="5020:62"><name pos:start="5020:52" pos:end="5020:62"><name pos:start="5020:52" pos:end="5020:53">fl</name><operator pos:start="5020:54" pos:end="5020:54">.</operator><name pos:start="5020:55" pos:end="5020:62">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="5022:21" pos:end="5022:62"><expr pos:start="5022:21" pos:end="5022:61"><name pos:start="5022:21" pos:end="5022:39"><name pos:start="5022:21" pos:end="5022:30">target_efl</name><operator pos:start="5022:31" pos:end="5022:32">-&gt;</operator><name pos:start="5022:33" pos:end="5022:39">l_start</name></name> <operator pos:start="5022:41" pos:end="5022:41">=</operator> <call pos:start="5022:43" pos:end="5022:61"><name pos:start="5022:43" pos:end="5022:49">tswap64</name><argument_list pos:start="5022:50" pos:end="5022:61">(<argument pos:start="5022:51" pos:end="5022:60"><expr pos:start="5022:51" pos:end="5022:60"><name pos:start="5022:51" pos:end="5022:60"><name pos:start="5022:51" pos:end="5022:52">fl</name><operator pos:start="5022:53" pos:end="5022:53">.</operator><name pos:start="5022:54" pos:end="5022:60">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="5024:21" pos:end="5024:58"><expr pos:start="5024:21" pos:end="5024:57"><name pos:start="5024:21" pos:end="5024:37"><name pos:start="5024:21" pos:end="5024:30">target_efl</name><operator pos:start="5024:31" pos:end="5024:32">-&gt;</operator><name pos:start="5024:33" pos:end="5024:37">l_len</name></name> <operator pos:start="5024:39" pos:end="5024:39">=</operator> <call pos:start="5024:41" pos:end="5024:57"><name pos:start="5024:41" pos:end="5024:47">tswap64</name><argument_list pos:start="5024:48" pos:end="5024:57">(<argument pos:start="5024:49" pos:end="5024:56"><expr pos:start="5024:49" pos:end="5024:56"><name pos:start="5024:49" pos:end="5024:56"><name pos:start="5024:49" pos:end="5024:50">fl</name><operator pos:start="5024:51" pos:end="5024:51">.</operator><name pos:start="5024:52" pos:end="5024:56">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="5026:21" pos:end="5026:58"><expr pos:start="5026:21" pos:end="5026:57"><name pos:start="5026:21" pos:end="5026:37"><name pos:start="5026:21" pos:end="5026:30">target_efl</name><operator pos:start="5026:31" pos:end="5026:32">-&gt;</operator><name pos:start="5026:33" pos:end="5026:37">l_pid</name></name> <operator pos:start="5026:39" pos:end="5026:39">=</operator> <call pos:start="5026:41" pos:end="5026:57"><name pos:start="5026:41" pos:end="5026:47">tswap32</name><argument_list pos:start="5026:48" pos:end="5026:57">(<argument pos:start="5026:49" pos:end="5026:56"><expr pos:start="5026:49" pos:end="5026:56"><name pos:start="5026:49" pos:end="5026:56"><name pos:start="5026:49" pos:end="5026:50">fl</name><operator pos:start="5026:51" pos:end="5026:51">.</operator><name pos:start="5026:52" pos:end="5026:56">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="5028:21" pos:end="5028:60"><expr pos:start="5028:21" pos:end="5028:59"><call pos:start="5028:21" pos:end="5028:59"><name pos:start="5028:21" pos:end="5028:38">unlock_user_struct</name><argument_list pos:start="5028:39" pos:end="5028:59">(<argument pos:start="5028:40" pos:end="5028:49"><expr pos:start="5028:40" pos:end="5028:49"><name pos:start="5028:40" pos:end="5028:49">target_efl</name></expr></argument>, <argument pos:start="5028:52" pos:end="5028:55"><expr pos:start="5028:52" pos:end="5028:55"><name pos:start="5028:52" pos:end="5028:55">arg3</name></expr></argument>, <argument pos:start="5028:58" pos:end="5028:58"><expr pos:start="5028:58" pos:end="5028:58"><literal type="number" pos:start="5028:58" pos:end="5028:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="5030:19" pos:end="5052:17">else

<cpp:endif pos:start="5032:1" pos:end="5032:6">#<cpp:directive pos:start="5032:2" pos:end="5032:6">endif</cpp:directive></cpp:endif>

                <block pos:start="5034:17" pos:end="5052:17">{<block_content pos:start="5036:21" pos:end="5050:59">

                    <if_stmt pos:start="5036:21" pos:end="5038:36"><if pos:start="5036:21" pos:end="5038:36">if <condition pos:start="5036:24" pos:end="5036:76">(<expr pos:start="5036:25" pos:end="5036:75"><operator pos:start="5036:25" pos:end="5036:25">!</operator><call pos:start="5036:26" pos:end="5036:75"><name pos:start="5036:26" pos:end="5036:41">lock_user_struct</name><argument_list pos:start="5036:42" pos:end="5036:75">(<argument pos:start="5036:43" pos:end="5036:54"><expr pos:start="5036:43" pos:end="5036:54"><name pos:start="5036:43" pos:end="5036:54">VERIFY_WRITE</name></expr></argument>, <argument pos:start="5036:57" pos:end="5036:65"><expr pos:start="5036:57" pos:end="5036:65"><name pos:start="5036:57" pos:end="5036:65">target_fl</name></expr></argument>, <argument pos:start="5036:68" pos:end="5036:71"><expr pos:start="5036:68" pos:end="5036:71"><name pos:start="5036:68" pos:end="5036:71">arg3</name></expr></argument>, <argument pos:start="5036:74" pos:end="5036:74"><expr pos:start="5036:74" pos:end="5036:74"><literal type="number" pos:start="5036:74" pos:end="5036:74">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="5038:25" pos:end="5038:36"><block_content pos:start="5038:25" pos:end="5038:36"> 

                        <goto pos:start="5038:25" pos:end="5038:36">goto <name pos:start="5038:30" pos:end="5038:35">efault</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="5040:21" pos:end="5040:59"><expr pos:start="5040:21" pos:end="5040:58"><name pos:start="5040:21" pos:end="5040:37"><name pos:start="5040:21" pos:end="5040:29">target_fl</name><operator pos:start="5040:30" pos:end="5040:31">-&gt;</operator><name pos:start="5040:32" pos:end="5040:37">l_type</name></name> <operator pos:start="5040:39" pos:end="5040:39">=</operator> <call pos:start="5040:41" pos:end="5040:58"><name pos:start="5040:41" pos:end="5040:47">tswap16</name><argument_list pos:start="5040:48" pos:end="5040:58">(<argument pos:start="5040:49" pos:end="5040:57"><expr pos:start="5040:49" pos:end="5040:57"><name pos:start="5040:49" pos:end="5040:57"><name pos:start="5040:49" pos:end="5040:50">fl</name><operator pos:start="5040:51" pos:end="5040:51">.</operator><name pos:start="5040:52" pos:end="5040:57">l_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="5042:21" pos:end="5042:63"><expr pos:start="5042:21" pos:end="5042:62"><name pos:start="5042:21" pos:end="5042:39"><name pos:start="5042:21" pos:end="5042:29">target_fl</name><operator pos:start="5042:30" pos:end="5042:31">-&gt;</operator><name pos:start="5042:32" pos:end="5042:39">l_whence</name></name> <operator pos:start="5042:41" pos:end="5042:41">=</operator> <call pos:start="5042:43" pos:end="5042:62"><name pos:start="5042:43" pos:end="5042:49">tswap16</name><argument_list pos:start="5042:50" pos:end="5042:62">(<argument pos:start="5042:51" pos:end="5042:61"><expr pos:start="5042:51" pos:end="5042:61"><name pos:start="5042:51" pos:end="5042:61"><name pos:start="5042:51" pos:end="5042:52">fl</name><operator pos:start="5042:53" pos:end="5042:53">.</operator><name pos:start="5042:54" pos:end="5042:61">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="5044:21" pos:end="5044:61"><expr pos:start="5044:21" pos:end="5044:60"><name pos:start="5044:21" pos:end="5044:38"><name pos:start="5044:21" pos:end="5044:29">target_fl</name><operator pos:start="5044:30" pos:end="5044:31">-&gt;</operator><name pos:start="5044:32" pos:end="5044:38">l_start</name></name> <operator pos:start="5044:40" pos:end="5044:40">=</operator> <call pos:start="5044:42" pos:end="5044:60"><name pos:start="5044:42" pos:end="5044:48">tswap64</name><argument_list pos:start="5044:49" pos:end="5044:60">(<argument pos:start="5044:50" pos:end="5044:59"><expr pos:start="5044:50" pos:end="5044:59"><name pos:start="5044:50" pos:end="5044:59"><name pos:start="5044:50" pos:end="5044:51">fl</name><operator pos:start="5044:52" pos:end="5044:52">.</operator><name pos:start="5044:53" pos:end="5044:59">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="5046:21" pos:end="5046:57"><expr pos:start="5046:21" pos:end="5046:56"><name pos:start="5046:21" pos:end="5046:36"><name pos:start="5046:21" pos:end="5046:29">target_fl</name><operator pos:start="5046:30" pos:end="5046:31">-&gt;</operator><name pos:start="5046:32" pos:end="5046:36">l_len</name></name> <operator pos:start="5046:38" pos:end="5046:38">=</operator> <call pos:start="5046:40" pos:end="5046:56"><name pos:start="5046:40" pos:end="5046:46">tswap64</name><argument_list pos:start="5046:47" pos:end="5046:56">(<argument pos:start="5046:48" pos:end="5046:55"><expr pos:start="5046:48" pos:end="5046:55"><name pos:start="5046:48" pos:end="5046:55"><name pos:start="5046:48" pos:end="5046:49">fl</name><operator pos:start="5046:50" pos:end="5046:50">.</operator><name pos:start="5046:51" pos:end="5046:55">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="5048:21" pos:end="5048:57"><expr pos:start="5048:21" pos:end="5048:56"><name pos:start="5048:21" pos:end="5048:36"><name pos:start="5048:21" pos:end="5048:29">target_fl</name><operator pos:start="5048:30" pos:end="5048:31">-&gt;</operator><name pos:start="5048:32" pos:end="5048:36">l_pid</name></name> <operator pos:start="5048:38" pos:end="5048:38">=</operator> <call pos:start="5048:40" pos:end="5048:56"><name pos:start="5048:40" pos:end="5048:46">tswap32</name><argument_list pos:start="5048:47" pos:end="5048:56">(<argument pos:start="5048:48" pos:end="5048:55"><expr pos:start="5048:48" pos:end="5048:55"><name pos:start="5048:48" pos:end="5048:55"><name pos:start="5048:48" pos:end="5048:49">fl</name><operator pos:start="5048:50" pos:end="5048:50">.</operator><name pos:start="5048:51" pos:end="5048:55">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="5050:21" pos:end="5050:59"><expr pos:start="5050:21" pos:end="5050:58"><call pos:start="5050:21" pos:end="5050:58"><name pos:start="5050:21" pos:end="5050:38">unlock_user_struct</name><argument_list pos:start="5050:39" pos:end="5050:58">(<argument pos:start="5050:40" pos:end="5050:48"><expr pos:start="5050:40" pos:end="5050:48"><name pos:start="5050:40" pos:end="5050:48">target_fl</name></expr></argument>, <argument pos:start="5050:51" pos:end="5050:54"><expr pos:start="5050:51" pos:end="5050:54"><name pos:start="5050:51" pos:end="5050:54">arg3</name></expr></argument>, <argument pos:start="5050:57" pos:end="5050:57"><expr pos:start="5050:57" pos:end="5050:57"><literal type="number" pos:start="5050:57" pos:end="5050:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

	    </block_content>}</block></if></if_stmt>

	    <break pos:start="5056:13" pos:end="5056:18">break;</break>



        <case pos:start="5060:9" pos:end="5060:30">case <expr pos:start="5060:14" pos:end="5060:29"><name pos:start="5060:14" pos:end="5060:29">TARGET_F_SETLK64</name></expr>:</case>

        <case pos:start="5062:9" pos:end="5065:0">case <expr pos:start="5062:14" pos:end="5062:30"><name pos:start="5062:14" pos:end="5062:30">TARGET_F_SETLKW64</name></expr>:</case>

<cpp:ifdef pos:start="5064:1" pos:end="5064:17">#<cpp:directive pos:start="5064:2" pos:end="5064:6">ifdef</cpp:directive> <name pos:start="5064:8" pos:end="5064:17">TARGET_ARM</name></cpp:ifdef>

            <if_stmt pos:start="5066:13" pos:end="5106:13"><if pos:start="5066:13" pos:end="5084:13">if <condition pos:start="5066:16" pos:end="5066:47">(<expr pos:start="5066:17" pos:end="5066:46"><operator pos:start="5066:17" pos:end="5066:17">(</operator><operator pos:start="5066:18" pos:end="5066:18">(</operator><name pos:start="5066:19" pos:end="5066:29">CPUARMState</name> <operator pos:start="5066:31" pos:end="5066:31">*</operator><operator pos:start="5066:32" pos:end="5066:32">)</operator><name pos:start="5066:33" pos:end="5066:39">cpu_env</name><operator pos:start="5066:40" pos:end="5066:40">)</operator><operator pos:start="5066:41" pos:end="5066:42">-&gt;</operator><name pos:start="5066:43" pos:end="5066:46">eabi</name></expr>)</condition> <block pos:start="5066:49" pos:end="5084:13">{<block_content pos:start="5068:17" pos:end="5082:56">

                <if_stmt pos:start="5068:17" pos:end="5070:32"><if pos:start="5068:17" pos:end="5070:32">if <condition pos:start="5068:20" pos:end="5068:72">(<expr pos:start="5068:21" pos:end="5068:71"><operator pos:start="5068:21" pos:end="5068:21">!</operator><call pos:start="5068:22" pos:end="5068:71"><name pos:start="5068:22" pos:end="5068:37">lock_user_struct</name><argument_list pos:start="5068:38" pos:end="5068:71">(<argument pos:start="5068:39" pos:end="5068:49"><expr pos:start="5068:39" pos:end="5068:49"><name pos:start="5068:39" pos:end="5068:49">VERIFY_READ</name></expr></argument>, <argument pos:start="5068:52" pos:end="5068:61"><expr pos:start="5068:52" pos:end="5068:61"><name pos:start="5068:52" pos:end="5068:61">target_efl</name></expr></argument>, <argument pos:start="5068:64" pos:end="5068:67"><expr pos:start="5068:64" pos:end="5068:67"><name pos:start="5068:64" pos:end="5068:67">arg3</name></expr></argument>, <argument pos:start="5068:70" pos:end="5068:70"><expr pos:start="5068:70" pos:end="5068:70"><literal type="number" pos:start="5068:70" pos:end="5068:70">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="5070:21" pos:end="5070:32"><block_content pos:start="5070:21" pos:end="5070:32"> 

                    <goto pos:start="5070:21" pos:end="5070:32">goto <name pos:start="5070:26" pos:end="5070:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="5072:17" pos:end="5072:56"><expr pos:start="5072:17" pos:end="5072:55"><name pos:start="5072:17" pos:end="5072:25"><name pos:start="5072:17" pos:end="5072:18">fl</name><operator pos:start="5072:19" pos:end="5072:19">.</operator><name pos:start="5072:20" pos:end="5072:25">l_type</name></name> <operator pos:start="5072:27" pos:end="5072:27">=</operator> <call pos:start="5072:29" pos:end="5072:55"><name pos:start="5072:29" pos:end="5072:35">tswap16</name><argument_list pos:start="5072:36" pos:end="5072:55">(<argument pos:start="5072:37" pos:end="5072:54"><expr pos:start="5072:37" pos:end="5072:54"><name pos:start="5072:37" pos:end="5072:54"><name pos:start="5072:37" pos:end="5072:46">target_efl</name><operator pos:start="5072:47" pos:end="5072:48">-&gt;</operator><name pos:start="5072:49" pos:end="5072:54">l_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5074:17" pos:end="5074:60"><expr pos:start="5074:17" pos:end="5074:59"><name pos:start="5074:17" pos:end="5074:27"><name pos:start="5074:17" pos:end="5074:18">fl</name><operator pos:start="5074:19" pos:end="5074:19">.</operator><name pos:start="5074:20" pos:end="5074:27">l_whence</name></name> <operator pos:start="5074:29" pos:end="5074:29">=</operator> <call pos:start="5074:31" pos:end="5074:59"><name pos:start="5074:31" pos:end="5074:37">tswap16</name><argument_list pos:start="5074:38" pos:end="5074:59">(<argument pos:start="5074:39" pos:end="5074:58"><expr pos:start="5074:39" pos:end="5074:58"><name pos:start="5074:39" pos:end="5074:58"><name pos:start="5074:39" pos:end="5074:48">target_efl</name><operator pos:start="5074:49" pos:end="5074:50">-&gt;</operator><name pos:start="5074:51" pos:end="5074:58">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5076:17" pos:end="5076:58"><expr pos:start="5076:17" pos:end="5076:57"><name pos:start="5076:17" pos:end="5076:26"><name pos:start="5076:17" pos:end="5076:18">fl</name><operator pos:start="5076:19" pos:end="5076:19">.</operator><name pos:start="5076:20" pos:end="5076:26">l_start</name></name> <operator pos:start="5076:28" pos:end="5076:28">=</operator> <call pos:start="5076:30" pos:end="5076:57"><name pos:start="5076:30" pos:end="5076:36">tswap64</name><argument_list pos:start="5076:37" pos:end="5076:57">(<argument pos:start="5076:38" pos:end="5076:56"><expr pos:start="5076:38" pos:end="5076:56"><name pos:start="5076:38" pos:end="5076:56"><name pos:start="5076:38" pos:end="5076:47">target_efl</name><operator pos:start="5076:48" pos:end="5076:49">-&gt;</operator><name pos:start="5076:50" pos:end="5076:56">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5078:17" pos:end="5078:54"><expr pos:start="5078:17" pos:end="5078:53"><name pos:start="5078:17" pos:end="5078:24"><name pos:start="5078:17" pos:end="5078:18">fl</name><operator pos:start="5078:19" pos:end="5078:19">.</operator><name pos:start="5078:20" pos:end="5078:24">l_len</name></name> <operator pos:start="5078:26" pos:end="5078:26">=</operator> <call pos:start="5078:28" pos:end="5078:53"><name pos:start="5078:28" pos:end="5078:34">tswap64</name><argument_list pos:start="5078:35" pos:end="5078:53">(<argument pos:start="5078:36" pos:end="5078:52"><expr pos:start="5078:36" pos:end="5078:52"><name pos:start="5078:36" pos:end="5078:52"><name pos:start="5078:36" pos:end="5078:45">target_efl</name><operator pos:start="5078:46" pos:end="5078:47">-&gt;</operator><name pos:start="5078:48" pos:end="5078:52">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5080:17" pos:end="5080:54"><expr pos:start="5080:17" pos:end="5080:53"><name pos:start="5080:17" pos:end="5080:24"><name pos:start="5080:17" pos:end="5080:18">fl</name><operator pos:start="5080:19" pos:end="5080:19">.</operator><name pos:start="5080:20" pos:end="5080:24">l_pid</name></name> <operator pos:start="5080:26" pos:end="5080:26">=</operator> <call pos:start="5080:28" pos:end="5080:53"><name pos:start="5080:28" pos:end="5080:34">tswap32</name><argument_list pos:start="5080:35" pos:end="5080:53">(<argument pos:start="5080:36" pos:end="5080:52"><expr pos:start="5080:36" pos:end="5080:52"><name pos:start="5080:36" pos:end="5080:52"><name pos:start="5080:36" pos:end="5080:45">target_efl</name><operator pos:start="5080:46" pos:end="5080:47">-&gt;</operator><name pos:start="5080:48" pos:end="5080:52">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5082:17" pos:end="5082:56"><expr pos:start="5082:17" pos:end="5082:55"><call pos:start="5082:17" pos:end="5082:55"><name pos:start="5082:17" pos:end="5082:34">unlock_user_struct</name><argument_list pos:start="5082:35" pos:end="5082:55">(<argument pos:start="5082:36" pos:end="5082:45"><expr pos:start="5082:36" pos:end="5082:45"><name pos:start="5082:36" pos:end="5082:45">target_efl</name></expr></argument>, <argument pos:start="5082:48" pos:end="5082:51"><expr pos:start="5082:48" pos:end="5082:51"><name pos:start="5082:48" pos:end="5082:51">arg3</name></expr></argument>, <argument pos:start="5082:54" pos:end="5082:54"><expr pos:start="5082:54" pos:end="5082:54"><literal type="number" pos:start="5082:54" pos:end="5082:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="5084:15" pos:end="5106:13">else

<cpp:endif pos:start="5086:1" pos:end="5086:6">#<cpp:directive pos:start="5086:2" pos:end="5086:6">endif</cpp:directive></cpp:endif>

            <block pos:start="5088:13" pos:end="5106:13">{<block_content pos:start="5090:17" pos:end="5104:55">

                <if_stmt pos:start="5090:17" pos:end="5092:32"><if pos:start="5090:17" pos:end="5092:32">if <condition pos:start="5090:20" pos:end="5090:71">(<expr pos:start="5090:21" pos:end="5090:70"><operator pos:start="5090:21" pos:end="5090:21">!</operator><call pos:start="5090:22" pos:end="5090:70"><name pos:start="5090:22" pos:end="5090:37">lock_user_struct</name><argument_list pos:start="5090:38" pos:end="5090:70">(<argument pos:start="5090:39" pos:end="5090:49"><expr pos:start="5090:39" pos:end="5090:49"><name pos:start="5090:39" pos:end="5090:49">VERIFY_READ</name></expr></argument>, <argument pos:start="5090:52" pos:end="5090:60"><expr pos:start="5090:52" pos:end="5090:60"><name pos:start="5090:52" pos:end="5090:60">target_fl</name></expr></argument>, <argument pos:start="5090:63" pos:end="5090:66"><expr pos:start="5090:63" pos:end="5090:66"><name pos:start="5090:63" pos:end="5090:66">arg3</name></expr></argument>, <argument pos:start="5090:69" pos:end="5090:69"><expr pos:start="5090:69" pos:end="5090:69"><literal type="number" pos:start="5090:69" pos:end="5090:69">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="5092:21" pos:end="5092:32"><block_content pos:start="5092:21" pos:end="5092:32"> 

                    <goto pos:start="5092:21" pos:end="5092:32">goto <name pos:start="5092:26" pos:end="5092:31">efault</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="5094:17" pos:end="5094:55"><expr pos:start="5094:17" pos:end="5094:54"><name pos:start="5094:17" pos:end="5094:25"><name pos:start="5094:17" pos:end="5094:18">fl</name><operator pos:start="5094:19" pos:end="5094:19">.</operator><name pos:start="5094:20" pos:end="5094:25">l_type</name></name> <operator pos:start="5094:27" pos:end="5094:27">=</operator> <call pos:start="5094:29" pos:end="5094:54"><name pos:start="5094:29" pos:end="5094:35">tswap16</name><argument_list pos:start="5094:36" pos:end="5094:54">(<argument pos:start="5094:37" pos:end="5094:53"><expr pos:start="5094:37" pos:end="5094:53"><name pos:start="5094:37" pos:end="5094:53"><name pos:start="5094:37" pos:end="5094:45">target_fl</name><operator pos:start="5094:46" pos:end="5094:47">-&gt;</operator><name pos:start="5094:48" pos:end="5094:53">l_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5096:17" pos:end="5096:59"><expr pos:start="5096:17" pos:end="5096:58"><name pos:start="5096:17" pos:end="5096:27"><name pos:start="5096:17" pos:end="5096:18">fl</name><operator pos:start="5096:19" pos:end="5096:19">.</operator><name pos:start="5096:20" pos:end="5096:27">l_whence</name></name> <operator pos:start="5096:29" pos:end="5096:29">=</operator> <call pos:start="5096:31" pos:end="5096:58"><name pos:start="5096:31" pos:end="5096:37">tswap16</name><argument_list pos:start="5096:38" pos:end="5096:58">(<argument pos:start="5096:39" pos:end="5096:57"><expr pos:start="5096:39" pos:end="5096:57"><name pos:start="5096:39" pos:end="5096:57"><name pos:start="5096:39" pos:end="5096:47">target_fl</name><operator pos:start="5096:48" pos:end="5096:49">-&gt;</operator><name pos:start="5096:50" pos:end="5096:57">l_whence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5098:17" pos:end="5098:57"><expr pos:start="5098:17" pos:end="5098:56"><name pos:start="5098:17" pos:end="5098:26"><name pos:start="5098:17" pos:end="5098:18">fl</name><operator pos:start="5098:19" pos:end="5098:19">.</operator><name pos:start="5098:20" pos:end="5098:26">l_start</name></name> <operator pos:start="5098:28" pos:end="5098:28">=</operator> <call pos:start="5098:30" pos:end="5098:56"><name pos:start="5098:30" pos:end="5098:36">tswap64</name><argument_list pos:start="5098:37" pos:end="5098:56">(<argument pos:start="5098:38" pos:end="5098:55"><expr pos:start="5098:38" pos:end="5098:55"><name pos:start="5098:38" pos:end="5098:55"><name pos:start="5098:38" pos:end="5098:46">target_fl</name><operator pos:start="5098:47" pos:end="5098:48">-&gt;</operator><name pos:start="5098:49" pos:end="5098:55">l_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5100:17" pos:end="5100:53"><expr pos:start="5100:17" pos:end="5100:52"><name pos:start="5100:17" pos:end="5100:24"><name pos:start="5100:17" pos:end="5100:18">fl</name><operator pos:start="5100:19" pos:end="5100:19">.</operator><name pos:start="5100:20" pos:end="5100:24">l_len</name></name> <operator pos:start="5100:26" pos:end="5100:26">=</operator> <call pos:start="5100:28" pos:end="5100:52"><name pos:start="5100:28" pos:end="5100:34">tswap64</name><argument_list pos:start="5100:35" pos:end="5100:52">(<argument pos:start="5100:36" pos:end="5100:51"><expr pos:start="5100:36" pos:end="5100:51"><name pos:start="5100:36" pos:end="5100:51"><name pos:start="5100:36" pos:end="5100:44">target_fl</name><operator pos:start="5100:45" pos:end="5100:46">-&gt;</operator><name pos:start="5100:47" pos:end="5100:51">l_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5102:17" pos:end="5102:53"><expr pos:start="5102:17" pos:end="5102:52"><name pos:start="5102:17" pos:end="5102:24"><name pos:start="5102:17" pos:end="5102:18">fl</name><operator pos:start="5102:19" pos:end="5102:19">.</operator><name pos:start="5102:20" pos:end="5102:24">l_pid</name></name> <operator pos:start="5102:26" pos:end="5102:26">=</operator> <call pos:start="5102:28" pos:end="5102:52"><name pos:start="5102:28" pos:end="5102:34">tswap32</name><argument_list pos:start="5102:35" pos:end="5102:52">(<argument pos:start="5102:36" pos:end="5102:51"><expr pos:start="5102:36" pos:end="5102:51"><name pos:start="5102:36" pos:end="5102:51"><name pos:start="5102:36" pos:end="5102:44">target_fl</name><operator pos:start="5102:45" pos:end="5102:46">-&gt;</operator><name pos:start="5102:47" pos:end="5102:51">l_pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5104:17" pos:end="5104:55"><expr pos:start="5104:17" pos:end="5104:54"><call pos:start="5104:17" pos:end="5104:54"><name pos:start="5104:17" pos:end="5104:34">unlock_user_struct</name><argument_list pos:start="5104:35" pos:end="5104:54">(<argument pos:start="5104:36" pos:end="5104:44"><expr pos:start="5104:36" pos:end="5104:44"><name pos:start="5104:36" pos:end="5104:44">target_fl</name></expr></argument>, <argument pos:start="5104:47" pos:end="5104:50"><expr pos:start="5104:47" pos:end="5104:50"><name pos:start="5104:47" pos:end="5104:50">arg3</name></expr></argument>, <argument pos:start="5104:53" pos:end="5104:53"><expr pos:start="5104:53" pos:end="5104:53"><literal type="number" pos:start="5104:53" pos:end="5104:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="5108:13" pos:end="5108:51"><expr pos:start="5108:13" pos:end="5108:50"><name pos:start="5108:13" pos:end="5108:15">ret</name> <operator pos:start="5108:17" pos:end="5108:17">=</operator> <call pos:start="5108:19" pos:end="5108:50"><name pos:start="5108:19" pos:end="5108:27">get_errno</name><argument_list pos:start="5108:28" pos:end="5108:50">(<argument pos:start="5108:29" pos:end="5108:49"><expr pos:start="5108:29" pos:end="5108:49"><call pos:start="5108:29" pos:end="5108:49"><name pos:start="5108:29" pos:end="5108:33">fcntl</name><argument_list pos:start="5108:34" pos:end="5108:49">(<argument pos:start="5108:35" pos:end="5108:38"><expr pos:start="5108:35" pos:end="5108:38"><name pos:start="5108:35" pos:end="5108:38">arg1</name></expr></argument>, <argument pos:start="5108:41" pos:end="5108:43"><expr pos:start="5108:41" pos:end="5108:43"><name pos:start="5108:41" pos:end="5108:43">cmd</name></expr></argument>, <argument pos:start="5108:46" pos:end="5108:48"><expr pos:start="5108:46" pos:end="5108:48"><operator pos:start="5108:46" pos:end="5108:46">&amp;</operator><name pos:start="5108:47" pos:end="5108:48">fl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <break pos:start="5110:13" pos:end="5110:18">break;</break>

        <default pos:start="5112:9" pos:end="5112:16">default:</default>

            <expr_stmt pos:start="5114:13" pos:end="5114:45"><expr pos:start="5114:13" pos:end="5114:44"><name pos:start="5114:13" pos:end="5114:15">ret</name> <operator pos:start="5114:17" pos:end="5114:17">=</operator> <call pos:start="5114:19" pos:end="5114:44"><name pos:start="5114:19" pos:end="5114:26">do_fcntl</name><argument_list pos:start="5114:27" pos:end="5114:44">(<argument pos:start="5114:28" pos:end="5114:31"><expr pos:start="5114:28" pos:end="5114:31"><name pos:start="5114:28" pos:end="5114:31">arg1</name></expr></argument>, <argument pos:start="5114:34" pos:end="5114:37"><expr pos:start="5114:34" pos:end="5114:37"><name pos:start="5114:34" pos:end="5114:37">arg2</name></expr></argument>, <argument pos:start="5114:40" pos:end="5114:43"><expr pos:start="5114:40" pos:end="5114:43"><name pos:start="5114:40" pos:end="5114:43">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="5116:13" pos:end="5116:18">break;</break>

        </block_content>}</block></switch>

	<break pos:start="5120:9" pos:end="5120:14">break;</break>

    </block_content>}</block>

<cpp:endif pos:start="5124:1" pos:end="5124:6">#<cpp:directive pos:start="5124:2" pos:end="5124:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="5126:1" pos:end="5126:27">#<cpp:directive pos:start="5126:2" pos:end="5126:6">ifdef</cpp:directive> <name pos:start="5126:8" pos:end="5126:27">TARGET_NR_cacheflush</name></cpp:ifdef>

    <case pos:start="5128:5" pos:end="5128:30">case <expr pos:start="5128:10" pos:end="5128:29"><name pos:start="5128:10" pos:end="5128:29">TARGET_NR_cacheflush</name></expr>:</case>

        <comment type="block" pos:start="5130:9" pos:end="5130:77">/* self-modifying code is handled automatically, so nothing needed */</comment>

        <expr_stmt pos:start="5132:9" pos:end="5132:16"><expr pos:start="5132:9" pos:end="5132:15"><name pos:start="5132:9" pos:end="5132:11">ret</name> <operator pos:start="5132:13" pos:end="5132:13">=</operator> <literal type="number" pos:start="5132:15" pos:end="5132:15">0</literal></expr>;</expr_stmt>

        <break pos:start="5134:9" pos:end="5139:0">break;</break>

<cpp:endif pos:start="5136:1" pos:end="5136:6">#<cpp:directive pos:start="5136:2" pos:end="5136:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="5138:1" pos:end="5138:25">#<cpp:directive pos:start="5138:2" pos:end="5138:6">ifdef</cpp:directive> <name pos:start="5138:8" pos:end="5138:25">TARGET_NR_security</name></cpp:ifdef>

    <case pos:start="5140:5" pos:end="5140:28">case <expr pos:start="5140:10" pos:end="5140:27"><name pos:start="5140:10" pos:end="5140:27">TARGET_NR_security</name></expr>:</case>

        <goto pos:start="5142:9" pos:end="5147:0">goto <name pos:start="5142:14" pos:end="5142:26">unimplemented</name>;</goto>

<cpp:endif pos:start="5144:1" pos:end="5144:6">#<cpp:directive pos:start="5144:2" pos:end="5144:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="5146:1" pos:end="5146:28">#<cpp:directive pos:start="5146:2" pos:end="5146:6">ifdef</cpp:directive> <name pos:start="5146:8" pos:end="5146:28">TARGET_NR_getpagesize</name></cpp:ifdef>

    <case pos:start="5148:5" pos:end="5148:31">case <expr pos:start="5148:10" pos:end="5148:30"><name pos:start="5148:10" pos:end="5148:30">TARGET_NR_getpagesize</name></expr>:</case>

        <expr_stmt pos:start="5150:9" pos:end="5150:31"><expr pos:start="5150:9" pos:end="5150:30"><name pos:start="5150:9" pos:end="5150:11">ret</name> <operator pos:start="5150:13" pos:end="5150:13">=</operator> <name pos:start="5150:15" pos:end="5150:30">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

        <break pos:start="5152:9" pos:end="5155:0">break;</break>

<cpp:endif pos:start="5154:1" pos:end="5154:6">#<cpp:directive pos:start="5154:2" pos:end="5154:6">endif</cpp:directive></cpp:endif>

    <case pos:start="5156:5" pos:end="5156:26">case <expr pos:start="5156:10" pos:end="5156:25"><name pos:start="5156:10" pos:end="5156:25">TARGET_NR_gettid</name></expr>:</case>

        <expr_stmt pos:start="5158:9" pos:end="5158:34"><expr pos:start="5158:9" pos:end="5158:33"><name pos:start="5158:9" pos:end="5158:11">ret</name> <operator pos:start="5158:13" pos:end="5158:13">=</operator> <call pos:start="5158:15" pos:end="5158:33"><name pos:start="5158:15" pos:end="5158:23">get_errno</name><argument_list pos:start="5158:24" pos:end="5158:33">(<argument pos:start="5158:25" pos:end="5158:32"><expr pos:start="5158:25" pos:end="5158:32"><call pos:start="5158:25" pos:end="5158:32"><name pos:start="5158:25" pos:end="5158:30">gettid</name><argument_list pos:start="5158:31" pos:end="5158:32">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="5160:9" pos:end="5163:0">break;</break>

<cpp:ifdef pos:start="5162:1" pos:end="5162:26">#<cpp:directive pos:start="5162:2" pos:end="5162:6">ifdef</cpp:directive> <name pos:start="5162:8" pos:end="5162:26">TARGET_NR_readahead</name></cpp:ifdef>

    <case pos:start="5164:5" pos:end="5169:0">case <expr pos:start="5164:10" pos:end="5164:28"><name pos:start="5164:10" pos:end="5164:28">TARGET_NR_readahead</name></expr>:</case>

<cpp:if pos:start="5166:1" pos:end="5166:25">#<cpp:directive pos:start="5166:2" pos:end="5166:3">if</cpp:directive> <expr pos:start="5166:5" pos:end="5166:25"><name pos:start="5166:5" pos:end="5166:19">TARGET_ABI_BITS</name> <operator pos:start="5166:21" pos:end="5166:22">==</operator> <literal type="number" pos:start="5166:24" pos:end="5166:25">32</literal></expr></cpp:if>

<cpp:ifdef pos:start="5168:1" pos:end="5168:17">#<cpp:directive pos:start="5168:2" pos:end="5168:6">ifdef</cpp:directive> <name pos:start="5168:8" pos:end="5168:17">TARGET_ARM</name></cpp:ifdef>

        <if_stmt pos:start="5170:9" pos:end="5183:0"><if pos:start="5170:9" pos:end="5183:0">if <condition pos:start="5170:12" pos:end="5170:43">(<expr pos:start="5170:13" pos:end="5170:42"><operator pos:start="5170:13" pos:end="5170:13">(</operator><operator pos:start="5170:14" pos:end="5170:14">(</operator><name pos:start="5170:15" pos:end="5170:25">CPUARMState</name> <operator pos:start="5170:27" pos:end="5170:27">*</operator><operator pos:start="5170:28" pos:end="5170:28">)</operator><name pos:start="5170:29" pos:end="5170:35">cpu_env</name><operator pos:start="5170:36" pos:end="5170:36">)</operator><operator pos:start="5170:37" pos:end="5170:38">-&gt;</operator><name pos:start="5170:39" pos:end="5170:42">eabi</name></expr>)</condition>

        <block pos:start="5172:9" pos:end="5183:0">{<block_content pos:start="5174:13" pos:end="5178:24">

            <expr_stmt pos:start="5174:13" pos:end="5174:24"><expr pos:start="5174:13" pos:end="5174:23"><name pos:start="5174:13" pos:end="5174:16">arg2</name> <operator pos:start="5174:18" pos:end="5174:18">=</operator> <name pos:start="5174:20" pos:end="5174:23">arg3</name></expr>;</expr_stmt>

            <expr_stmt pos:start="5176:13" pos:end="5176:24"><expr pos:start="5176:13" pos:end="5176:23"><name pos:start="5176:13" pos:end="5176:16">arg3</name> <operator pos:start="5176:18" pos:end="5176:18">=</operator> <name pos:start="5176:20" pos:end="5176:23">arg4</name></expr>;</expr_stmt>

            <expr_stmt pos:start="5178:13" pos:end="5178:24"><expr pos:start="5178:13" pos:end="5178:23"><name pos:start="5178:13" pos:end="5178:16">arg4</name> <operator pos:start="5178:18" pos:end="5178:18">=</operator> <name pos:start="5178:20" pos:end="5178:23">arg5</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="5182:1" pos:end="5182:6">#<cpp:directive pos:start="5182:2" pos:end="5182:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="5184:9" pos:end="5187:0"><expr pos:start="5184:9" pos:end="5184:76"><name pos:start="5184:9" pos:end="5184:11">ret</name> <operator pos:start="5184:13" pos:end="5184:13">=</operator> <call pos:start="5184:15" pos:end="5184:76"><name pos:start="5184:15" pos:end="5184:23">get_errno</name><argument_list pos:start="5184:24" pos:end="5184:76">(<argument pos:start="5184:25" pos:end="5184:75"><expr pos:start="5184:25" pos:end="5184:75"><call pos:start="5184:25" pos:end="5184:75"><name pos:start="5184:25" pos:end="5184:33">readahead</name><argument_list pos:start="5184:34" pos:end="5184:75">(<argument pos:start="5184:35" pos:end="5184:38"><expr pos:start="5184:35" pos:end="5184:38"><name pos:start="5184:35" pos:end="5184:38">arg1</name></expr></argument>, <argument pos:start="5184:41" pos:end="5184:68"><expr pos:start="5184:41" pos:end="5184:68"><operator pos:start="5184:41" pos:end="5184:41">(</operator><operator pos:start="5184:42" pos:end="5184:42">(</operator><name pos:start="5184:43" pos:end="5184:49">off64_t</name><operator pos:start="5184:50" pos:end="5184:50">)</operator><name pos:start="5184:51" pos:end="5184:54">arg3</name> <operator pos:start="5184:56" pos:end="5184:57">&lt;&lt;</operator> <literal type="number" pos:start="5184:59" pos:end="5184:60">32</literal><operator pos:start="5184:61" pos:end="5184:61">)</operator> <operator pos:start="5184:63" pos:end="5184:63">|</operator> <name pos:start="5184:65" pos:end="5184:68">arg2</name></expr></argument>, <argument pos:start="5184:71" pos:end="5184:74"><expr pos:start="5184:71" pos:end="5184:74"><name pos:start="5184:71" pos:end="5184:74">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="5186:1" pos:end="5186:5">#<cpp:directive pos:start="5186:2" pos:end="5186:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="5188:9" pos:end="5191:0"><expr pos:start="5188:9" pos:end="5188:52"><name pos:start="5188:9" pos:end="5188:11">ret</name> <operator pos:start="5188:13" pos:end="5188:13">=</operator> <call pos:start="5188:15" pos:end="5188:52"><name pos:start="5188:15" pos:end="5188:23">get_errno</name><argument_list pos:start="5188:24" pos:end="5188:52">(<argument pos:start="5188:25" pos:end="5188:51"><expr pos:start="5188:25" pos:end="5188:51"><call pos:start="5188:25" pos:end="5188:51"><name pos:start="5188:25" pos:end="5188:33">readahead</name><argument_list pos:start="5188:34" pos:end="5188:51">(<argument pos:start="5188:35" pos:end="5188:38"><expr pos:start="5188:35" pos:end="5188:38"><name pos:start="5188:35" pos:end="5188:38">arg1</name></expr></argument>, <argument pos:start="5188:41" pos:end="5188:44"><expr pos:start="5188:41" pos:end="5188:44"><name pos:start="5188:41" pos:end="5188:44">arg2</name></expr></argument>, <argument pos:start="5188:47" pos:end="5188:50"><expr pos:start="5188:47" pos:end="5188:50"><name pos:start="5188:47" pos:end="5188:50">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="5190:1" pos:end="5190:6">#<cpp:directive pos:start="5190:2" pos:end="5190:6">endif</cpp:directive></cpp:endif>

        <break pos:start="5192:9" pos:end="5197:0">break;</break>

<cpp:endif pos:start="5194:1" pos:end="5194:6">#<cpp:directive pos:start="5194:2" pos:end="5194:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="5196:1" pos:end="5196:25">#<cpp:directive pos:start="5196:2" pos:end="5196:6">ifdef</cpp:directive> <name pos:start="5196:8" pos:end="5196:25">TARGET_NR_setxattr</name></cpp:ifdef>

    <case pos:start="5198:5" pos:end="5198:28">case <expr pos:start="5198:10" pos:end="5198:27"><name pos:start="5198:10" pos:end="5198:27">TARGET_NR_setxattr</name></expr>:</case>

    <case pos:start="5200:5" pos:end="5200:29">case <expr pos:start="5200:10" pos:end="5200:28"><name pos:start="5200:10" pos:end="5200:28">TARGET_NR_lsetxattr</name></expr>:</case>

    <case pos:start="5202:5" pos:end="5202:29">case <expr pos:start="5202:10" pos:end="5202:28"><name pos:start="5202:10" pos:end="5202:28">TARGET_NR_fsetxattr</name></expr>:</case>

    <case pos:start="5204:5" pos:end="5204:28">case <expr pos:start="5204:10" pos:end="5204:27"><name pos:start="5204:10" pos:end="5204:27">TARGET_NR_getxattr</name></expr>:</case>

    <case pos:start="5206:5" pos:end="5206:29">case <expr pos:start="5206:10" pos:end="5206:28"><name pos:start="5206:10" pos:end="5206:28">TARGET_NR_lgetxattr</name></expr>:</case>

    <case pos:start="5208:5" pos:end="5208:29">case <expr pos:start="5208:10" pos:end="5208:28"><name pos:start="5208:10" pos:end="5208:28">TARGET_NR_fgetxattr</name></expr>:</case>

    <case pos:start="5210:5" pos:end="5210:29">case <expr pos:start="5210:10" pos:end="5210:28"><name pos:start="5210:10" pos:end="5210:28">TARGET_NR_listxattr</name></expr>:</case>

    <case pos:start="5212:5" pos:end="5212:30">case <expr pos:start="5212:10" pos:end="5212:29"><name pos:start="5212:10" pos:end="5212:29">TARGET_NR_llistxattr</name></expr>:</case>

    <case pos:start="5214:5" pos:end="5214:30">case <expr pos:start="5214:10" pos:end="5214:29"><name pos:start="5214:10" pos:end="5214:29">TARGET_NR_flistxattr</name></expr>:</case>

    <case pos:start="5216:5" pos:end="5216:31">case <expr pos:start="5216:10" pos:end="5216:30"><name pos:start="5216:10" pos:end="5216:30">TARGET_NR_removexattr</name></expr>:</case>

    <case pos:start="5218:5" pos:end="5218:32">case <expr pos:start="5218:10" pos:end="5218:31"><name pos:start="5218:10" pos:end="5218:31">TARGET_NR_lremovexattr</name></expr>:</case>

    <case pos:start="5220:5" pos:end="5220:32">case <expr pos:start="5220:10" pos:end="5220:31"><name pos:start="5220:10" pos:end="5220:31">TARGET_NR_fremovexattr</name></expr>:</case>

        <expr_stmt pos:start="5222:9" pos:end="5222:33"><expr pos:start="5222:9" pos:end="5222:32"><name pos:start="5222:9" pos:end="5222:11">ret</name> <operator pos:start="5222:13" pos:end="5222:13">=</operator> <operator pos:start="5222:15" pos:end="5222:15">-</operator><name pos:start="5222:16" pos:end="5222:32">TARGET_EOPNOTSUPP</name></expr>;</expr_stmt>

        <break pos:start="5224:9" pos:end="5229:0">break;</break>

<cpp:endif pos:start="5226:1" pos:end="5226:6">#<cpp:directive pos:start="5226:2" pos:end="5226:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="5228:1" pos:end="5228:32">#<cpp:directive pos:start="5228:2" pos:end="5228:6">ifdef</cpp:directive> <name pos:start="5228:8" pos:end="5228:32">TARGET_NR_set_thread_area</name></cpp:ifdef>

    <case pos:start="5230:5" pos:end="5233:0">case <expr pos:start="5230:10" pos:end="5230:34"><name pos:start="5230:10" pos:end="5230:34">TARGET_NR_set_thread_area</name></expr>:</case>

<cpp:if pos:start="5232:1" pos:end="5232:24">#<cpp:directive pos:start="5232:2" pos:end="5232:3">if</cpp:directive> <expr pos:start="5232:5" pos:end="5232:24"><call pos:start="5232:5" pos:end="5232:24"><name pos:start="5232:5" pos:end="5232:11">defined</name><argument_list pos:start="5232:12" pos:end="5232:24">(<argument pos:start="5232:13" pos:end="5232:23"><expr pos:start="5232:13" pos:end="5232:23"><name pos:start="5232:13" pos:end="5232:23">TARGET_MIPS</name></expr></argument>)</argument_list></call></expr></cpp:if>

      <expr_stmt pos:start="5234:7" pos:end="5234:51"><expr pos:start="5234:7" pos:end="5234:50"><operator pos:start="5234:7" pos:end="5234:7">(</operator><operator pos:start="5234:8" pos:end="5234:8">(</operator><name pos:start="5234:9" pos:end="5234:20">CPUMIPSState</name> <operator pos:start="5234:22" pos:end="5234:22">*</operator><operator pos:start="5234:23" pos:end="5234:23">)</operator> <name pos:start="5234:25" pos:end="5234:31">cpu_env</name><operator pos:start="5234:32" pos:end="5234:32">)</operator><operator pos:start="5234:33" pos:end="5234:34">-&gt;</operator><name pos:start="5234:35" pos:end="5234:43">tls_value</name> <operator pos:start="5234:45" pos:end="5234:45">=</operator> <name pos:start="5234:47" pos:end="5234:50">arg1</name></expr>;</expr_stmt>

      <expr_stmt pos:start="5236:7" pos:end="5236:14"><expr pos:start="5236:7" pos:end="5236:13"><name pos:start="5236:7" pos:end="5236:9">ret</name> <operator pos:start="5236:11" pos:end="5236:11">=</operator> <literal type="number" pos:start="5236:13" pos:end="5236:13">0</literal></expr>;</expr_stmt>

      <break pos:start="5238:7" pos:end="5241:0">break;</break>

<cpp:elif pos:start="5240:1" pos:end="5240:26">#<cpp:directive pos:start="5240:2" pos:end="5240:5">elif</cpp:directive> <expr pos:start="5240:7" pos:end="5240:26"><call pos:start="5240:7" pos:end="5240:26"><name pos:start="5240:7" pos:end="5240:13">defined</name><argument_list pos:start="5240:14" pos:end="5240:26">(<argument pos:start="5240:15" pos:end="5240:25"><expr pos:start="5240:15" pos:end="5240:25"><name pos:start="5240:15" pos:end="5240:25">TARGET_CRIS</name></expr></argument>)</argument_list></call></expr></cpp:elif>

      <if_stmt pos:start="5242:7" pos:end="5252:7"><if pos:start="5242:7" pos:end="5244:31">if <condition pos:start="5242:10" pos:end="5242:22">(<expr pos:start="5242:11" pos:end="5242:21"><name pos:start="5242:11" pos:end="5242:14">arg1</name> <operator pos:start="5242:16" pos:end="5242:16">&amp;</operator> <literal type="number" pos:start="5242:18" pos:end="5242:21">0xff</literal></expr>)</condition><block type="pseudo" pos:start="5244:11" pos:end="5244:31"><block_content pos:start="5244:11" pos:end="5244:31">

          <expr_stmt pos:start="5244:11" pos:end="5244:31"><expr pos:start="5244:11" pos:end="5244:30"><name pos:start="5244:11" pos:end="5244:13">ret</name> <operator pos:start="5244:15" pos:end="5244:15">=</operator> <operator pos:start="5244:17" pos:end="5244:17">-</operator><name pos:start="5244:18" pos:end="5244:30">TARGET_EINVAL</name></expr>;</expr_stmt></block_content></block></if>

      <else pos:start="5246:7" pos:end="5252:7">else <block pos:start="5246:12" pos:end="5252:7">{<block_content pos:start="5248:11" pos:end="5250:18">

          <expr_stmt pos:start="5248:11" pos:end="5248:59"><expr pos:start="5248:11" pos:end="5248:58"><operator pos:start="5248:11" pos:end="5248:11">(</operator><operator pos:start="5248:12" pos:end="5248:12">(</operator><name pos:start="5248:13" pos:end="5248:24">CPUCRISState</name> <operator pos:start="5248:26" pos:end="5248:26">*</operator><operator pos:start="5248:27" pos:end="5248:27">)</operator> <name pos:start="5248:29" pos:end="5248:35">cpu_env</name><operator pos:start="5248:36" pos:end="5248:36">)</operator><operator pos:start="5248:37" pos:end="5248:38">-&gt;</operator><name pos:start="5248:39" pos:end="5248:51"><name pos:start="5248:39" pos:end="5248:43">pregs</name><index pos:start="5248:44" pos:end="5248:51">[<expr pos:start="5248:45" pos:end="5248:50"><name pos:start="5248:45" pos:end="5248:50">PR_PID</name></expr>]</index></name> <operator pos:start="5248:53" pos:end="5248:53">=</operator> <name pos:start="5248:55" pos:end="5248:58">arg1</name></expr>;</expr_stmt>

          <expr_stmt pos:start="5250:11" pos:end="5250:18"><expr pos:start="5250:11" pos:end="5250:17"><name pos:start="5250:11" pos:end="5250:13">ret</name> <operator pos:start="5250:15" pos:end="5250:15">=</operator> <literal type="number" pos:start="5250:17" pos:end="5250:17">0</literal></expr>;</expr_stmt>

      </block_content>}</block></else></if_stmt>

      <break pos:start="5254:7" pos:end="5257:0">break;</break>

<cpp:elif pos:start="5256:1" pos:end="5256:51">#<cpp:directive pos:start="5256:2" pos:end="5256:5">elif</cpp:directive> <expr pos:start="5256:7" pos:end="5256:51"><call pos:start="5256:7" pos:end="5256:26"><name pos:start="5256:7" pos:end="5256:13">defined</name><argument_list pos:start="5256:14" pos:end="5256:26">(<argument pos:start="5256:15" pos:end="5256:25"><expr pos:start="5256:15" pos:end="5256:25"><name pos:start="5256:15" pos:end="5256:25">TARGET_I386</name></expr></argument>)</argument_list></call> <operator pos:start="5256:28" pos:end="5256:29">&amp;&amp;</operator> <call pos:start="5256:31" pos:end="5256:51"><name pos:start="5256:31" pos:end="5256:37">defined</name><argument_list pos:start="5256:38" pos:end="5256:51">(<argument pos:start="5256:39" pos:end="5256:50"><expr pos:start="5256:39" pos:end="5256:50"><name pos:start="5256:39" pos:end="5256:50">TARGET_ABI32</name></expr></argument>)</argument_list></call></expr></cpp:elif>

      <expr_stmt pos:start="5258:7" pos:end="5258:46"><expr pos:start="5258:7" pos:end="5258:45"><name pos:start="5258:7" pos:end="5258:9">ret</name> <operator pos:start="5258:11" pos:end="5258:11">=</operator> <call pos:start="5258:13" pos:end="5258:45"><name pos:start="5258:13" pos:end="5258:30">do_set_thread_area</name><argument_list pos:start="5258:31" pos:end="5258:45">(<argument pos:start="5258:32" pos:end="5258:38"><expr pos:start="5258:32" pos:end="5258:38"><name pos:start="5258:32" pos:end="5258:38">cpu_env</name></expr></argument>, <argument pos:start="5258:41" pos:end="5258:44"><expr pos:start="5258:41" pos:end="5258:44"><name pos:start="5258:41" pos:end="5258:44">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <break pos:start="5260:7" pos:end="5263:0">break;</break>

<cpp:else pos:start="5262:1" pos:end="5262:5">#<cpp:directive pos:start="5262:2" pos:end="5262:5">else</cpp:directive></cpp:else>

      <goto pos:start="5264:7" pos:end="5271:0">goto <name pos:start="5264:12" pos:end="5264:31">unimplemented_nowarn</name>;</goto>

<cpp:endif pos:start="5266:1" pos:end="5266:6">#<cpp:directive pos:start="5266:2" pos:end="5266:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="5268:1" pos:end="5268:6">#<cpp:directive pos:start="5268:2" pos:end="5268:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="5270:1" pos:end="5270:32">#<cpp:directive pos:start="5270:2" pos:end="5270:6">ifdef</cpp:directive> <name pos:start="5270:8" pos:end="5270:32">TARGET_NR_get_thread_area</name></cpp:ifdef>

    <case pos:start="5272:5" pos:end="5275:0">case <expr pos:start="5272:10" pos:end="5272:34"><name pos:start="5272:10" pos:end="5272:34">TARGET_NR_get_thread_area</name></expr>:</case>

<cpp:if pos:start="5274:1" pos:end="5274:49">#<cpp:directive pos:start="5274:2" pos:end="5274:3">if</cpp:directive> <expr pos:start="5274:5" pos:end="5274:49"><call pos:start="5274:5" pos:end="5274:24"><name pos:start="5274:5" pos:end="5274:11">defined</name><argument_list pos:start="5274:12" pos:end="5274:24">(<argument pos:start="5274:13" pos:end="5274:23"><expr pos:start="5274:13" pos:end="5274:23"><name pos:start="5274:13" pos:end="5274:23">TARGET_I386</name></expr></argument>)</argument_list></call> <operator pos:start="5274:26" pos:end="5274:27">&amp;&amp;</operator> <call pos:start="5274:29" pos:end="5274:49"><name pos:start="5274:29" pos:end="5274:35">defined</name><argument_list pos:start="5274:36" pos:end="5274:49">(<argument pos:start="5274:37" pos:end="5274:48"><expr pos:start="5274:37" pos:end="5274:48"><name pos:start="5274:37" pos:end="5274:48">TARGET_ABI32</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="5276:9" pos:end="5279:0"><expr pos:start="5276:9" pos:end="5276:47"><name pos:start="5276:9" pos:end="5276:11">ret</name> <operator pos:start="5276:13" pos:end="5276:13">=</operator> <call pos:start="5276:15" pos:end="5276:47"><name pos:start="5276:15" pos:end="5276:32">do_get_thread_area</name><argument_list pos:start="5276:33" pos:end="5276:47">(<argument pos:start="5276:34" pos:end="5276:40"><expr pos:start="5276:34" pos:end="5276:40"><name pos:start="5276:34" pos:end="5276:40">cpu_env</name></expr></argument>, <argument pos:start="5276:43" pos:end="5276:46"><expr pos:start="5276:43" pos:end="5276:46"><name pos:start="5276:43" pos:end="5276:46">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="5278:1" pos:end="5278:5">#<cpp:directive pos:start="5278:2" pos:end="5278:5">else</cpp:directive></cpp:else>

        <goto pos:start="5280:9" pos:end="5287:0">goto <name pos:start="5280:14" pos:end="5280:33">unimplemented_nowarn</name>;</goto>

<cpp:endif pos:start="5282:1" pos:end="5282:6">#<cpp:directive pos:start="5282:2" pos:end="5282:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="5284:1" pos:end="5284:6">#<cpp:directive pos:start="5284:2" pos:end="5284:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="5286:1" pos:end="5286:30">#<cpp:directive pos:start="5286:2" pos:end="5286:6">ifdef</cpp:directive> <name pos:start="5286:8" pos:end="5286:30">TARGET_NR_getdomainname</name></cpp:ifdef>

    <case pos:start="5288:5" pos:end="5288:33">case <expr pos:start="5288:10" pos:end="5288:32"><name pos:start="5288:10" pos:end="5288:32">TARGET_NR_getdomainname</name></expr>:</case>

        <goto pos:start="5290:9" pos:end="5297:0">goto <name pos:start="5290:14" pos:end="5290:33">unimplemented_nowarn</name>;</goto>

<cpp:endif pos:start="5292:1" pos:end="5292:6">#<cpp:directive pos:start="5292:2" pos:end="5292:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="5296:1" pos:end="5296:30">#<cpp:directive pos:start="5296:2" pos:end="5296:6">ifdef</cpp:directive> <name pos:start="5296:8" pos:end="5296:30">TARGET_NR_clock_gettime</name></cpp:ifdef>

    <case pos:start="5298:5" pos:end="5298:33">case <expr pos:start="5298:10" pos:end="5298:32"><name pos:start="5298:10" pos:end="5298:32">TARGET_NR_clock_gettime</name></expr>:</case>

    <block pos:start="5300:5" pos:end="5319:0">{<block_content pos:start="5302:9" pos:end="5312:14">

        <decl_stmt pos:start="5302:9" pos:end="5302:27"><decl pos:start="5302:9" pos:end="5302:26"><type pos:start="5302:9" pos:end="5302:23"><name pos:start="5302:9" pos:end="5302:23"><name pos:start="5302:9" pos:end="5302:14">struct</name> <name pos:start="5302:16" pos:end="5302:23">timespec</name></name></type> <name pos:start="5302:25" pos:end="5302:26">ts</name></decl>;</decl_stmt>

        <expr_stmt pos:start="5304:9" pos:end="5304:50"><expr pos:start="5304:9" pos:end="5304:49"><name pos:start="5304:9" pos:end="5304:11">ret</name> <operator pos:start="5304:13" pos:end="5304:13">=</operator> <call pos:start="5304:15" pos:end="5304:49"><name pos:start="5304:15" pos:end="5304:23">get_errno</name><argument_list pos:start="5304:24" pos:end="5304:49">(<argument pos:start="5304:25" pos:end="5304:48"><expr pos:start="5304:25" pos:end="5304:48"><call pos:start="5304:25" pos:end="5304:48"><name pos:start="5304:25" pos:end="5304:37">clock_gettime</name><argument_list pos:start="5304:38" pos:end="5304:48">(<argument pos:start="5304:39" pos:end="5304:42"><expr pos:start="5304:39" pos:end="5304:42"><name pos:start="5304:39" pos:end="5304:42">arg1</name></expr></argument>, <argument pos:start="5304:45" pos:end="5304:47"><expr pos:start="5304:45" pos:end="5304:47"><operator pos:start="5304:45" pos:end="5304:45">&amp;</operator><name pos:start="5304:46" pos:end="5304:47">ts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="5306:9" pos:end="5310:9"><if pos:start="5306:9" pos:end="5310:9">if <condition pos:start="5306:12" pos:end="5306:27">(<expr pos:start="5306:13" pos:end="5306:26"><operator pos:start="5306:13" pos:end="5306:13">!</operator><call pos:start="5306:14" pos:end="5306:26"><name pos:start="5306:14" pos:end="5306:21">is_error</name><argument_list pos:start="5306:22" pos:end="5306:26">(<argument pos:start="5306:23" pos:end="5306:25"><expr pos:start="5306:23" pos:end="5306:25"><name pos:start="5306:23" pos:end="5306:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5306:29" pos:end="5310:9">{<block_content pos:start="5308:13" pos:end="5308:47">

            <expr_stmt pos:start="5308:13" pos:end="5308:47"><expr pos:start="5308:13" pos:end="5308:46"><call pos:start="5308:13" pos:end="5308:46"><name pos:start="5308:13" pos:end="5308:35">host_to_target_timespec</name><argument_list pos:start="5308:36" pos:end="5308:46">(<argument pos:start="5308:37" pos:end="5308:40"><expr pos:start="5308:37" pos:end="5308:40"><name pos:start="5308:37" pos:end="5308:40">arg2</name></expr></argument>, <argument pos:start="5308:43" pos:end="5308:45"><expr pos:start="5308:43" pos:end="5308:45"><operator pos:start="5308:43" pos:end="5308:43">&amp;</operator><name pos:start="5308:44" pos:end="5308:45">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="5312:9" pos:end="5312:14">break;</break>

    </block_content>}</block>

<cpp:endif pos:start="5316:1" pos:end="5316:6">#<cpp:directive pos:start="5316:2" pos:end="5316:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="5318:1" pos:end="5318:29">#<cpp:directive pos:start="5318:2" pos:end="5318:6">ifdef</cpp:directive> <name pos:start="5318:8" pos:end="5318:29">TARGET_NR_clock_getres</name></cpp:ifdef>

    <case pos:start="5320:5" pos:end="5320:32">case <expr pos:start="5320:10" pos:end="5320:31"><name pos:start="5320:10" pos:end="5320:31">TARGET_NR_clock_getres</name></expr>:</case>

    <block pos:start="5322:5" pos:end="5341:0">{<block_content pos:start="5324:9" pos:end="5334:14">

        <decl_stmt pos:start="5324:9" pos:end="5324:27"><decl pos:start="5324:9" pos:end="5324:26"><type pos:start="5324:9" pos:end="5324:23"><name pos:start="5324:9" pos:end="5324:23"><name pos:start="5324:9" pos:end="5324:14">struct</name> <name pos:start="5324:16" pos:end="5324:23">timespec</name></name></type> <name pos:start="5324:25" pos:end="5324:26">ts</name></decl>;</decl_stmt>

        <expr_stmt pos:start="5326:9" pos:end="5326:49"><expr pos:start="5326:9" pos:end="5326:48"><name pos:start="5326:9" pos:end="5326:11">ret</name> <operator pos:start="5326:13" pos:end="5326:13">=</operator> <call pos:start="5326:15" pos:end="5326:48"><name pos:start="5326:15" pos:end="5326:23">get_errno</name><argument_list pos:start="5326:24" pos:end="5326:48">(<argument pos:start="5326:25" pos:end="5326:47"><expr pos:start="5326:25" pos:end="5326:47"><call pos:start="5326:25" pos:end="5326:47"><name pos:start="5326:25" pos:end="5326:36">clock_getres</name><argument_list pos:start="5326:37" pos:end="5326:47">(<argument pos:start="5326:38" pos:end="5326:41"><expr pos:start="5326:38" pos:end="5326:41"><name pos:start="5326:38" pos:end="5326:41">arg1</name></expr></argument>, <argument pos:start="5326:44" pos:end="5326:46"><expr pos:start="5326:44" pos:end="5326:46"><operator pos:start="5326:44" pos:end="5326:44">&amp;</operator><name pos:start="5326:45" pos:end="5326:46">ts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="5328:9" pos:end="5332:9"><if pos:start="5328:9" pos:end="5332:9">if <condition pos:start="5328:12" pos:end="5328:27">(<expr pos:start="5328:13" pos:end="5328:26"><operator pos:start="5328:13" pos:end="5328:13">!</operator><call pos:start="5328:14" pos:end="5328:26"><name pos:start="5328:14" pos:end="5328:21">is_error</name><argument_list pos:start="5328:22" pos:end="5328:26">(<argument pos:start="5328:23" pos:end="5328:25"><expr pos:start="5328:23" pos:end="5328:25"><name pos:start="5328:23" pos:end="5328:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5328:29" pos:end="5332:9">{<block_content pos:start="5330:13" pos:end="5330:47">

            <expr_stmt pos:start="5330:13" pos:end="5330:47"><expr pos:start="5330:13" pos:end="5330:46"><call pos:start="5330:13" pos:end="5330:46"><name pos:start="5330:13" pos:end="5330:35">host_to_target_timespec</name><argument_list pos:start="5330:36" pos:end="5330:46">(<argument pos:start="5330:37" pos:end="5330:40"><expr pos:start="5330:37" pos:end="5330:40"><name pos:start="5330:37" pos:end="5330:40">arg2</name></expr></argument>, <argument pos:start="5330:43" pos:end="5330:45"><expr pos:start="5330:43" pos:end="5330:45"><operator pos:start="5330:43" pos:end="5330:43">&amp;</operator><name pos:start="5330:44" pos:end="5330:45">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="5334:9" pos:end="5334:14">break;</break>

    </block_content>}</block>

<cpp:endif pos:start="5338:1" pos:end="5338:6">#<cpp:directive pos:start="5338:2" pos:end="5338:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="5340:1" pos:end="5340:32">#<cpp:directive pos:start="5340:2" pos:end="5340:6">ifdef</cpp:directive> <name pos:start="5340:8" pos:end="5340:32">TARGET_NR_clock_nanosleep</name></cpp:ifdef>

    <case pos:start="5342:5" pos:end="5342:35">case <expr pos:start="5342:10" pos:end="5342:34"><name pos:start="5342:10" pos:end="5342:34">TARGET_NR_clock_nanosleep</name></expr>:</case>

    <block pos:start="5344:5" pos:end="5365:0">{<block_content pos:start="5346:9" pos:end="5356:14">

        <decl_stmt pos:start="5346:9" pos:end="5346:27"><decl pos:start="5346:9" pos:end="5346:26"><type pos:start="5346:9" pos:end="5346:23"><name pos:start="5346:9" pos:end="5346:23"><name pos:start="5346:9" pos:end="5346:14">struct</name> <name pos:start="5346:16" pos:end="5346:23">timespec</name></name></type> <name pos:start="5346:25" pos:end="5346:26">ts</name></decl>;</decl_stmt>

        <expr_stmt pos:start="5348:9" pos:end="5348:43"><expr pos:start="5348:9" pos:end="5348:42"><call pos:start="5348:9" pos:end="5348:42"><name pos:start="5348:9" pos:end="5348:31">target_to_host_timespec</name><argument_list pos:start="5348:32" pos:end="5348:42">(<argument pos:start="5348:33" pos:end="5348:35"><expr pos:start="5348:33" pos:end="5348:35"><operator pos:start="5348:33" pos:end="5348:33">&amp;</operator><name pos:start="5348:34" pos:end="5348:35">ts</name></expr></argument>, <argument pos:start="5348:38" pos:end="5348:41"><expr pos:start="5348:38" pos:end="5348:41"><name pos:start="5348:38" pos:end="5348:41">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="5350:9" pos:end="5350:77"><expr pos:start="5350:9" pos:end="5350:76"><name pos:start="5350:9" pos:end="5350:11">ret</name> <operator pos:start="5350:13" pos:end="5350:13">=</operator> <call pos:start="5350:15" pos:end="5350:76"><name pos:start="5350:15" pos:end="5350:23">get_errno</name><argument_list pos:start="5350:24" pos:end="5350:76">(<argument pos:start="5350:25" pos:end="5350:75"><expr pos:start="5350:25" pos:end="5350:75"><call pos:start="5350:25" pos:end="5350:75"><name pos:start="5350:25" pos:end="5350:39">clock_nanosleep</name><argument_list pos:start="5350:40" pos:end="5350:75">(<argument pos:start="5350:41" pos:end="5350:44"><expr pos:start="5350:41" pos:end="5350:44"><name pos:start="5350:41" pos:end="5350:44">arg1</name></expr></argument>, <argument pos:start="5350:47" pos:end="5350:50"><expr pos:start="5350:47" pos:end="5350:50"><name pos:start="5350:47" pos:end="5350:50">arg2</name></expr></argument>, <argument pos:start="5350:53" pos:end="5350:55"><expr pos:start="5350:53" pos:end="5350:55"><operator pos:start="5350:53" pos:end="5350:53">&amp;</operator><name pos:start="5350:54" pos:end="5350:55">ts</name></expr></argument>, <argument pos:start="5350:58" pos:end="5350:74"><expr pos:start="5350:58" pos:end="5350:74"><ternary pos:start="5350:58" pos:end="5350:74"><condition pos:start="5350:58" pos:end="5350:63"><expr pos:start="5350:58" pos:end="5350:61"><name pos:start="5350:58" pos:end="5350:61">arg4</name></expr> ?</condition><then pos:start="5350:65" pos:end="5350:67"> <expr pos:start="5350:65" pos:end="5350:67"><operator pos:start="5350:65" pos:end="5350:65">&amp;</operator><name pos:start="5350:66" pos:end="5350:67">ts</name></expr> </then><else pos:start="5350:69" pos:end="5350:74">: <expr pos:start="5350:71" pos:end="5350:74"><name pos:start="5350:71" pos:end="5350:74">NULL</name></expr></else></ternary></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="5352:9" pos:end="5354:47"><if pos:start="5352:9" pos:end="5354:47">if <condition pos:start="5352:12" pos:end="5352:17">(<expr pos:start="5352:13" pos:end="5352:16"><name pos:start="5352:13" pos:end="5352:16">arg4</name></expr>)</condition><block type="pseudo" pos:start="5354:13" pos:end="5354:47"><block_content pos:start="5354:13" pos:end="5354:47">

            <expr_stmt pos:start="5354:13" pos:end="5354:47"><expr pos:start="5354:13" pos:end="5354:46"><call pos:start="5354:13" pos:end="5354:46"><name pos:start="5354:13" pos:end="5354:35">host_to_target_timespec</name><argument_list pos:start="5354:36" pos:end="5354:46">(<argument pos:start="5354:37" pos:end="5354:40"><expr pos:start="5354:37" pos:end="5354:40"><name pos:start="5354:37" pos:end="5354:40">arg4</name></expr></argument>, <argument pos:start="5354:43" pos:end="5354:45"><expr pos:start="5354:43" pos:end="5354:45"><operator pos:start="5354:43" pos:end="5354:43">&amp;</operator><name pos:start="5354:44" pos:end="5354:45">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="5356:9" pos:end="5356:14">break;</break>

    </block_content>}</block>

<cpp:endif pos:start="5360:1" pos:end="5360:6">#<cpp:directive pos:start="5360:2" pos:end="5360:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="5364:1" pos:end="5364:71">#<cpp:directive pos:start="5364:2" pos:end="5364:3">if</cpp:directive> <expr pos:start="5364:5" pos:end="5364:71"><call pos:start="5364:5" pos:end="5364:38"><name pos:start="5364:5" pos:end="5364:11">defined</name><argument_list pos:start="5364:12" pos:end="5364:38">(<argument pos:start="5364:13" pos:end="5364:37"><expr pos:start="5364:13" pos:end="5364:37"><name pos:start="5364:13" pos:end="5364:37">TARGET_NR_set_tid_address</name></expr></argument>)</argument_list></call> <operator pos:start="5364:40" pos:end="5364:41">&amp;&amp;</operator> <call pos:start="5364:43" pos:end="5364:71"><name pos:start="5364:43" pos:end="5364:49">defined</name><argument_list pos:start="5364:50" pos:end="5364:71">(<argument pos:start="5364:51" pos:end="5364:70"><expr pos:start="5364:51" pos:end="5364:70"><name pos:start="5364:51" pos:end="5364:70">__NR_set_tid_address</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="5366:5" pos:end="5366:35">case <expr pos:start="5366:10" pos:end="5366:34"><name pos:start="5366:10" pos:end="5366:34">TARGET_NR_set_tid_address</name></expr>:</case>

        <expr_stmt pos:start="5368:9" pos:end="5368:59"><expr pos:start="5368:9" pos:end="5368:58"><name pos:start="5368:9" pos:end="5368:11">ret</name> <operator pos:start="5368:13" pos:end="5368:13">=</operator> <call pos:start="5368:15" pos:end="5368:58"><name pos:start="5368:15" pos:end="5368:23">get_errno</name><argument_list pos:start="5368:24" pos:end="5368:58">(<argument pos:start="5368:25" pos:end="5368:57"><expr pos:start="5368:25" pos:end="5368:57"><call pos:start="5368:25" pos:end="5368:57"><name pos:start="5368:25" pos:end="5368:39">set_tid_address</name><argument_list pos:start="5368:40" pos:end="5368:57">(<argument pos:start="5368:41" pos:end="5368:56"><expr pos:start="5368:41" pos:end="5368:56"><operator pos:start="5368:41" pos:end="5368:41">(</operator><name pos:start="5368:42" pos:end="5368:44">int</name> <operator pos:start="5368:46" pos:end="5368:46">*</operator><operator pos:start="5368:47" pos:end="5368:47">)</operator><call pos:start="5368:48" pos:end="5368:56"><name pos:start="5368:48" pos:end="5368:50">g2h</name><argument_list pos:start="5368:51" pos:end="5368:56">(<argument pos:start="5368:52" pos:end="5368:55"><expr pos:start="5368:52" pos:end="5368:55"><name pos:start="5368:52" pos:end="5368:55">arg1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="5370:9" pos:end="5377:0">break;</break>

<cpp:endif pos:start="5372:1" pos:end="5372:6">#<cpp:directive pos:start="5372:2" pos:end="5372:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="5376:1" pos:end="5376:51">#<cpp:directive pos:start="5376:2" pos:end="5376:3">if</cpp:directive> <expr pos:start="5376:5" pos:end="5376:51"><call pos:start="5376:5" pos:end="5376:28"><name pos:start="5376:5" pos:end="5376:11">defined</name><argument_list pos:start="5376:12" pos:end="5376:28">(<argument pos:start="5376:13" pos:end="5376:27"><expr pos:start="5376:13" pos:end="5376:27"><name pos:start="5376:13" pos:end="5376:27">TARGET_NR_tkill</name></expr></argument>)</argument_list></call> <operator pos:start="5376:30" pos:end="5376:31">&amp;&amp;</operator> <call pos:start="5376:33" pos:end="5376:51"><name pos:start="5376:33" pos:end="5376:39">defined</name><argument_list pos:start="5376:40" pos:end="5376:51">(<argument pos:start="5376:41" pos:end="5376:50"><expr pos:start="5376:41" pos:end="5376:50"><name pos:start="5376:41" pos:end="5376:50">__NR_tkill</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="5378:5" pos:end="5378:25">case <expr pos:start="5378:10" pos:end="5378:24"><name pos:start="5378:10" pos:end="5378:24">TARGET_NR_tkill</name></expr>:</case>

        <expr_stmt pos:start="5380:9" pos:end="5380:75"><expr pos:start="5380:9" pos:end="5380:74"><name pos:start="5380:9" pos:end="5380:11">ret</name> <operator pos:start="5380:13" pos:end="5380:13">=</operator> <call pos:start="5380:15" pos:end="5380:74"><name pos:start="5380:15" pos:end="5380:23">get_errno</name><argument_list pos:start="5380:24" pos:end="5380:74">(<argument pos:start="5380:25" pos:end="5380:73"><expr pos:start="5380:25" pos:end="5380:73"><call pos:start="5380:25" pos:end="5380:73"><name pos:start="5380:25" pos:end="5380:33">sys_tkill</name><argument_list pos:start="5380:34" pos:end="5380:73">(<argument pos:start="5380:35" pos:end="5380:43"><expr pos:start="5380:35" pos:end="5380:43"><operator pos:start="5380:35" pos:end="5380:35">(</operator><name pos:start="5380:36" pos:end="5380:38">int</name><operator pos:start="5380:39" pos:end="5380:39">)</operator><name pos:start="5380:40" pos:end="5380:43">arg1</name></expr></argument>, <argument pos:start="5380:46" pos:end="5380:72"><expr pos:start="5380:46" pos:end="5380:72"><call pos:start="5380:46" pos:end="5380:72"><name pos:start="5380:46" pos:end="5380:66">target_to_host_signal</name><argument_list pos:start="5380:67" pos:end="5380:72">(<argument pos:start="5380:68" pos:end="5380:71"><expr pos:start="5380:68" pos:end="5380:71"><name pos:start="5380:68" pos:end="5380:71">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="5382:9" pos:end="5389:0">break;</break>

<cpp:endif pos:start="5384:1" pos:end="5384:6">#<cpp:directive pos:start="5384:2" pos:end="5384:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="5388:1" pos:end="5388:53">#<cpp:directive pos:start="5388:2" pos:end="5388:3">if</cpp:directive> <expr pos:start="5388:5" pos:end="5388:53"><call pos:start="5388:5" pos:end="5388:29"><name pos:start="5388:5" pos:end="5388:11">defined</name><argument_list pos:start="5388:12" pos:end="5388:29">(<argument pos:start="5388:13" pos:end="5388:28"><expr pos:start="5388:13" pos:end="5388:28"><name pos:start="5388:13" pos:end="5388:28">TARGET_NR_tgkill</name></expr></argument>)</argument_list></call> <operator pos:start="5388:31" pos:end="5388:32">&amp;&amp;</operator> <call pos:start="5388:34" pos:end="5388:53"><name pos:start="5388:34" pos:end="5388:40">defined</name><argument_list pos:start="5388:41" pos:end="5388:53">(<argument pos:start="5388:42" pos:end="5388:52"><expr pos:start="5388:42" pos:end="5388:52"><name pos:start="5388:42" pos:end="5388:52">__NR_tgkill</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="5390:5" pos:end="5390:26">case <expr pos:start="5390:10" pos:end="5390:25"><name pos:start="5390:10" pos:end="5390:25">TARGET_NR_tgkill</name></expr>:</case>

	<expr_stmt pos:start="5392:9" pos:end="5394:54"><expr pos:start="5392:9" pos:end="5394:53"><name pos:start="5392:9" pos:end="5392:11">ret</name> <operator pos:start="5392:13" pos:end="5392:13">=</operator> <call pos:start="5392:15" pos:end="5394:53"><name pos:start="5392:15" pos:end="5392:23">get_errno</name><argument_list pos:start="5392:24" pos:end="5394:53">(<argument pos:start="5392:25" pos:end="5394:52"><expr pos:start="5392:25" pos:end="5394:52"><call pos:start="5392:25" pos:end="5394:52"><name pos:start="5392:25" pos:end="5392:34">sys_tgkill</name><argument_list pos:start="5392:35" pos:end="5394:52">(<argument pos:start="5392:36" pos:end="5392:44"><expr pos:start="5392:36" pos:end="5392:44"><operator pos:start="5392:36" pos:end="5392:36">(</operator><name pos:start="5392:37" pos:end="5392:39">int</name><operator pos:start="5392:40" pos:end="5392:40">)</operator><name pos:start="5392:41" pos:end="5392:44">arg1</name></expr></argument>, <argument pos:start="5392:47" pos:end="5392:55"><expr pos:start="5392:47" pos:end="5392:55"><operator pos:start="5392:47" pos:end="5392:47">(</operator><name pos:start="5392:48" pos:end="5392:50">int</name><operator pos:start="5392:51" pos:end="5392:51">)</operator><name pos:start="5392:52" pos:end="5392:55">arg2</name></expr></argument>,

                        <argument pos:start="5394:25" pos:end="5394:51"><expr pos:start="5394:25" pos:end="5394:51"><call pos:start="5394:25" pos:end="5394:51"><name pos:start="5394:25" pos:end="5394:45">target_to_host_signal</name><argument_list pos:start="5394:46" pos:end="5394:51">(<argument pos:start="5394:47" pos:end="5394:50"><expr pos:start="5394:47" pos:end="5394:50"><name pos:start="5394:47" pos:end="5394:50">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="5396:9" pos:end="5403:0">break;</break>

<cpp:endif pos:start="5398:1" pos:end="5398:6">#<cpp:directive pos:start="5398:2" pos:end="5398:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="5402:1" pos:end="5402:32">#<cpp:directive pos:start="5402:2" pos:end="5402:6">ifdef</cpp:directive> <name pos:start="5402:8" pos:end="5402:32">TARGET_NR_set_robust_list</name></cpp:ifdef>

    <case pos:start="5404:5" pos:end="5404:35">case <expr pos:start="5404:10" pos:end="5404:34"><name pos:start="5404:10" pos:end="5404:34">TARGET_NR_set_robust_list</name></expr>:</case>

	<goto pos:start="5406:9" pos:end="5413:0">goto <name pos:start="5406:14" pos:end="5406:33">unimplemented_nowarn</name>;</goto>

<cpp:endif pos:start="5408:1" pos:end="5408:6">#<cpp:directive pos:start="5408:2" pos:end="5408:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="5412:1" pos:end="5412:59">#<cpp:directive pos:start="5412:2" pos:end="5412:3">if</cpp:directive> <expr pos:start="5412:5" pos:end="5412:59"><call pos:start="5412:5" pos:end="5412:32"><name pos:start="5412:5" pos:end="5412:11">defined</name><argument_list pos:start="5412:12" pos:end="5412:32">(<argument pos:start="5412:13" pos:end="5412:31"><expr pos:start="5412:13" pos:end="5412:31"><name pos:start="5412:13" pos:end="5412:31">TARGET_NR_utimensat</name></expr></argument>)</argument_list></call> <operator pos:start="5412:34" pos:end="5412:35">&amp;&amp;</operator> <call pos:start="5412:37" pos:end="5412:59"><name pos:start="5412:37" pos:end="5412:43">defined</name><argument_list pos:start="5412:44" pos:end="5412:59">(<argument pos:start="5412:45" pos:end="5412:58"><expr pos:start="5412:45" pos:end="5412:58"><name pos:start="5412:45" pos:end="5412:58">__NR_utimensat</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="5414:5" pos:end="5414:29">case <expr pos:start="5414:10" pos:end="5414:28"><name pos:start="5414:10" pos:end="5414:28">TARGET_NR_utimensat</name></expr>:</case>

        <block pos:start="5416:9" pos:end="5454:9">{<block_content pos:start="5418:13" pos:end="5452:13">

            <decl_stmt pos:start="5418:13" pos:end="5418:40"><decl pos:start="5418:13" pos:end="5418:32"><type pos:start="5418:13" pos:end="5418:29"><name pos:start="5418:13" pos:end="5418:27"><name pos:start="5418:13" pos:end="5418:18">struct</name> <name pos:start="5418:20" pos:end="5418:27">timespec</name></name> <modifier pos:start="5418:29" pos:end="5418:29">*</modifier></type><name pos:start="5418:30" pos:end="5418:32">tsp</name></decl>, <decl pos:start="5418:35" pos:end="5418:39"><type ref="prev" pos:start="5418:13" pos:end="5418:29"/><name pos:start="5418:35" pos:end="5418:39"><name pos:start="5418:35" pos:end="5418:36">ts</name><index pos:start="5418:37" pos:end="5418:39">[<expr pos:start="5418:38" pos:end="5418:38"><literal type="number" pos:start="5418:38" pos:end="5418:38">2</literal></expr>]</index></name></decl>;</decl_stmt>

            <if_stmt pos:start="5420:13" pos:end="5432:13"><if pos:start="5420:13" pos:end="5424:13">if <condition pos:start="5420:16" pos:end="5420:22">(<expr pos:start="5420:17" pos:end="5420:21"><operator pos:start="5420:17" pos:end="5420:17">!</operator><name pos:start="5420:18" pos:end="5420:21">arg3</name></expr>)</condition> <block pos:start="5420:24" pos:end="5424:13">{<block_content pos:start="5422:17" pos:end="5422:27">

                <expr_stmt pos:start="5422:17" pos:end="5422:27"><expr pos:start="5422:17" pos:end="5422:26"><name pos:start="5422:17" pos:end="5422:19">tsp</name> <operator pos:start="5422:21" pos:end="5422:21">=</operator> <name pos:start="5422:23" pos:end="5422:26">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="5424:15" pos:end="5432:13">else <block pos:start="5424:20" pos:end="5432:13">{<block_content pos:start="5426:17" pos:end="5430:25">

                <expr_stmt pos:start="5426:17" pos:end="5426:50"><expr pos:start="5426:17" pos:end="5426:49"><call pos:start="5426:17" pos:end="5426:49"><name pos:start="5426:17" pos:end="5426:39">target_to_host_timespec</name><argument_list pos:start="5426:40" pos:end="5426:49">(<argument pos:start="5426:41" pos:end="5426:42"><expr pos:start="5426:41" pos:end="5426:42"><name pos:start="5426:41" pos:end="5426:42">ts</name></expr></argument>, <argument pos:start="5426:45" pos:end="5426:48"><expr pos:start="5426:45" pos:end="5426:48"><name pos:start="5426:45" pos:end="5426:48">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5428:17" pos:end="5428:83"><expr pos:start="5428:17" pos:end="5428:82"><call pos:start="5428:17" pos:end="5428:82"><name pos:start="5428:17" pos:end="5428:39">target_to_host_timespec</name><argument_list pos:start="5428:40" pos:end="5428:82">(<argument pos:start="5428:41" pos:end="5428:44"><expr pos:start="5428:41" pos:end="5428:44"><name pos:start="5428:41" pos:end="5428:42">ts</name><operator pos:start="5428:43" pos:end="5428:43">+</operator><literal type="number" pos:start="5428:44" pos:end="5428:44">1</literal></expr></argument>, <argument pos:start="5428:47" pos:end="5428:81"><expr pos:start="5428:47" pos:end="5428:81"><name pos:start="5428:47" pos:end="5428:50">arg3</name><operator pos:start="5428:51" pos:end="5428:51">+</operator><sizeof pos:start="5428:52" pos:end="5428:81">sizeof<argument_list pos:start="5428:58" pos:end="5428:81">(<argument pos:start="5428:59" pos:end="5428:80"><expr pos:start="5428:59" pos:end="5428:80">struct <name pos:start="5428:66" pos:end="5428:80">target_timespec</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5430:17" pos:end="5430:25"><expr pos:start="5430:17" pos:end="5430:24"><name pos:start="5430:17" pos:end="5430:19">tsp</name> <operator pos:start="5430:21" pos:end="5430:21">=</operator> <name pos:start="5430:23" pos:end="5430:24">ts</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="5434:13" pos:end="5452:13"><if pos:start="5434:13" pos:end="5436:70">if <condition pos:start="5434:16" pos:end="5434:22">(<expr pos:start="5434:17" pos:end="5434:21"><operator pos:start="5434:17" pos:end="5434:17">!</operator><name pos:start="5434:18" pos:end="5434:21">arg2</name></expr>)</condition><block type="pseudo" pos:start="5436:17" pos:end="5436:70"><block_content pos:start="5436:17" pos:end="5436:70">

                <expr_stmt pos:start="5436:17" pos:end="5436:70"><expr pos:start="5436:17" pos:end="5436:69"><name pos:start="5436:17" pos:end="5436:19">ret</name> <operator pos:start="5436:21" pos:end="5436:21">=</operator> <call pos:start="5436:23" pos:end="5436:69"><name pos:start="5436:23" pos:end="5436:31">get_errno</name><argument_list pos:start="5436:32" pos:end="5436:69">(<argument pos:start="5436:33" pos:end="5436:68"><expr pos:start="5436:33" pos:end="5436:68"><call pos:start="5436:33" pos:end="5436:68"><name pos:start="5436:33" pos:end="5436:45">sys_utimensat</name><argument_list pos:start="5436:46" pos:end="5436:68">(<argument pos:start="5436:47" pos:end="5436:50"><expr pos:start="5436:47" pos:end="5436:50"><name pos:start="5436:47" pos:end="5436:50">arg1</name></expr></argument>, <argument pos:start="5436:53" pos:end="5436:56"><expr pos:start="5436:53" pos:end="5436:56"><name pos:start="5436:53" pos:end="5436:56">NULL</name></expr></argument>, <argument pos:start="5436:59" pos:end="5436:61"><expr pos:start="5436:59" pos:end="5436:61"><name pos:start="5436:59" pos:end="5436:61">tsp</name></expr></argument>, <argument pos:start="5436:64" pos:end="5436:67"><expr pos:start="5436:64" pos:end="5436:67"><name pos:start="5436:64" pos:end="5436:67">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="5438:13" pos:end="5452:13">else <block pos:start="5438:18" pos:end="5452:13">{<block_content pos:start="5440:17" pos:end="5450:40">

                <if_stmt pos:start="5440:17" pos:end="5446:17"><if pos:start="5440:17" pos:end="5446:17">if <condition pos:start="5440:20" pos:end="5440:50">(<expr pos:start="5440:21" pos:end="5440:49"><operator pos:start="5440:21" pos:end="5440:21">!</operator><operator pos:start="5440:22" pos:end="5440:22">(</operator><name pos:start="5440:23" pos:end="5440:23">p</name> <operator pos:start="5440:25" pos:end="5440:25">=</operator> <call pos:start="5440:27" pos:end="5440:48"><name pos:start="5440:27" pos:end="5440:42">lock_user_string</name><argument_list pos:start="5440:43" pos:end="5440:48">(<argument pos:start="5440:44" pos:end="5440:47"><expr pos:start="5440:44" pos:end="5440:47"><name pos:start="5440:44" pos:end="5440:47">arg2</name></expr></argument>)</argument_list></call><operator pos:start="5440:49" pos:end="5440:49">)</operator></expr>)</condition> <block pos:start="5440:52" pos:end="5446:17">{<block_content pos:start="5442:21" pos:end="5444:30">

                    <expr_stmt pos:start="5442:21" pos:end="5442:41"><expr pos:start="5442:21" pos:end="5442:40"><name pos:start="5442:21" pos:end="5442:23">ret</name> <operator pos:start="5442:25" pos:end="5442:25">=</operator> <operator pos:start="5442:27" pos:end="5442:27">-</operator><name pos:start="5442:28" pos:end="5442:40">TARGET_EFAULT</name></expr>;</expr_stmt>

                    <goto pos:start="5444:21" pos:end="5444:30">goto <name pos:start="5444:26" pos:end="5444:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="5448:17" pos:end="5448:73"><expr pos:start="5448:17" pos:end="5448:72"><name pos:start="5448:17" pos:end="5448:19">ret</name> <operator pos:start="5448:21" pos:end="5448:21">=</operator> <call pos:start="5448:23" pos:end="5448:72"><name pos:start="5448:23" pos:end="5448:31">get_errno</name><argument_list pos:start="5448:32" pos:end="5448:72">(<argument pos:start="5448:33" pos:end="5448:71"><expr pos:start="5448:33" pos:end="5448:71"><call pos:start="5448:33" pos:end="5448:71"><name pos:start="5448:33" pos:end="5448:45">sys_utimensat</name><argument_list pos:start="5448:46" pos:end="5448:71">(<argument pos:start="5448:47" pos:end="5448:50"><expr pos:start="5448:47" pos:end="5448:50"><name pos:start="5448:47" pos:end="5448:50">arg1</name></expr></argument>, <argument pos:start="5448:53" pos:end="5448:59"><expr pos:start="5448:53" pos:end="5448:59"><call pos:start="5448:53" pos:end="5448:59"><name pos:start="5448:53" pos:end="5448:56">path</name><argument_list pos:start="5448:57" pos:end="5448:59">(<argument pos:start="5448:58" pos:end="5448:58"><expr pos:start="5448:58" pos:end="5448:58"><name pos:start="5448:58" pos:end="5448:58">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="5448:62" pos:end="5448:64"><expr pos:start="5448:62" pos:end="5448:64"><name pos:start="5448:62" pos:end="5448:64">tsp</name></expr></argument>, <argument pos:start="5448:67" pos:end="5448:70"><expr pos:start="5448:67" pos:end="5448:70"><name pos:start="5448:67" pos:end="5448:70">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5450:17" pos:end="5450:40"><expr pos:start="5450:17" pos:end="5450:39"><call pos:start="5450:17" pos:end="5450:39"><name pos:start="5450:17" pos:end="5450:27">unlock_user</name><argument_list pos:start="5450:28" pos:end="5450:39">(<argument pos:start="5450:29" pos:end="5450:29"><expr pos:start="5450:29" pos:end="5450:29"><name pos:start="5450:29" pos:end="5450:29">p</name></expr></argument>, <argument pos:start="5450:32" pos:end="5450:35"><expr pos:start="5450:32" pos:end="5450:35"><name pos:start="5450:32" pos:end="5450:35">arg2</name></expr></argument>, <argument pos:start="5450:38" pos:end="5450:38"><expr pos:start="5450:38" pos:end="5450:38"><literal type="number" pos:start="5450:38" pos:end="5450:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block>

	<break pos:start="5456:9" pos:end="5461:0">break;</break>

<cpp:endif pos:start="5458:1" pos:end="5458:6">#<cpp:directive pos:start="5458:2" pos:end="5458:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="5460:1" pos:end="5460:28">#<cpp:directive pos:start="5460:2" pos:end="5460:3">if</cpp:directive> <expr pos:start="5460:5" pos:end="5460:28"><call pos:start="5460:5" pos:end="5460:28"><name pos:start="5460:5" pos:end="5460:11">defined</name><argument_list pos:start="5460:12" pos:end="5460:28">(<argument pos:start="5460:13" pos:end="5460:27"><expr pos:start="5460:13" pos:end="5460:27"><name pos:start="5460:13" pos:end="5460:27">CONFIG_USE_NPTL</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="5462:5" pos:end="5462:25">case <expr pos:start="5462:10" pos:end="5462:24"><name pos:start="5462:10" pos:end="5462:24">TARGET_NR_futex</name></expr>:</case>

        <expr_stmt pos:start="5464:9" pos:end="5464:59"><expr pos:start="5464:9" pos:end="5464:58"><name pos:start="5464:9" pos:end="5464:11">ret</name> <operator pos:start="5464:13" pos:end="5464:13">=</operator> <call pos:start="5464:15" pos:end="5464:58"><name pos:start="5464:15" pos:end="5464:22">do_futex</name><argument_list pos:start="5464:23" pos:end="5464:58">(<argument pos:start="5464:24" pos:end="5464:27"><expr pos:start="5464:24" pos:end="5464:27"><name pos:start="5464:24" pos:end="5464:27">arg1</name></expr></argument>, <argument pos:start="5464:30" pos:end="5464:33"><expr pos:start="5464:30" pos:end="5464:33"><name pos:start="5464:30" pos:end="5464:33">arg2</name></expr></argument>, <argument pos:start="5464:36" pos:end="5464:39"><expr pos:start="5464:36" pos:end="5464:39"><name pos:start="5464:36" pos:end="5464:39">arg3</name></expr></argument>, <argument pos:start="5464:42" pos:end="5464:45"><expr pos:start="5464:42" pos:end="5464:45"><name pos:start="5464:42" pos:end="5464:45">arg4</name></expr></argument>, <argument pos:start="5464:48" pos:end="5464:51"><expr pos:start="5464:48" pos:end="5464:51"><name pos:start="5464:48" pos:end="5464:51">arg5</name></expr></argument>, <argument pos:start="5464:54" pos:end="5464:57"><expr pos:start="5464:54" pos:end="5464:57"><name pos:start="5464:54" pos:end="5464:57">arg6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="5466:9" pos:end="5471:0">break;</break>

<cpp:endif pos:start="5468:1" pos:end="5468:6">#<cpp:directive pos:start="5468:2" pos:end="5468:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="5470:1" pos:end="5470:65">#<cpp:directive pos:start="5470:2" pos:end="5470:3">if</cpp:directive> <expr pos:start="5470:5" pos:end="5470:65"><call pos:start="5470:5" pos:end="5470:35"><name pos:start="5470:5" pos:end="5470:11">defined</name><argument_list pos:start="5470:12" pos:end="5470:35">(<argument pos:start="5470:13" pos:end="5470:34"><expr pos:start="5470:13" pos:end="5470:34"><name pos:start="5470:13" pos:end="5470:34">TARGET_NR_inotify_init</name></expr></argument>)</argument_list></call> <operator pos:start="5470:37" pos:end="5470:38">&amp;&amp;</operator> <call pos:start="5470:40" pos:end="5470:65"><name pos:start="5470:40" pos:end="5470:46">defined</name><argument_list pos:start="5470:47" pos:end="5470:65">(<argument pos:start="5470:48" pos:end="5470:64"><expr pos:start="5470:48" pos:end="5470:64"><name pos:start="5470:48" pos:end="5470:64">__NR_inotify_init</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="5472:5" pos:end="5472:32">case <expr pos:start="5472:10" pos:end="5472:31"><name pos:start="5472:10" pos:end="5472:31">TARGET_NR_inotify_init</name></expr>:</case>

        <expr_stmt pos:start="5474:9" pos:end="5474:44"><expr pos:start="5474:9" pos:end="5474:43"><name pos:start="5474:9" pos:end="5474:11">ret</name> <operator pos:start="5474:13" pos:end="5474:13">=</operator> <call pos:start="5474:15" pos:end="5474:43"><name pos:start="5474:15" pos:end="5474:23">get_errno</name><argument_list pos:start="5474:24" pos:end="5474:43">(<argument pos:start="5474:25" pos:end="5474:42"><expr pos:start="5474:25" pos:end="5474:42"><call pos:start="5474:25" pos:end="5474:42"><name pos:start="5474:25" pos:end="5474:40">sys_inotify_init</name><argument_list pos:start="5474:41" pos:end="5474:42">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="5476:9" pos:end="5481:0">break;</break>

<cpp:endif pos:start="5478:1" pos:end="5478:6">#<cpp:directive pos:start="5478:2" pos:end="5478:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="5480:1" pos:end="5480:75">#<cpp:directive pos:start="5480:2" pos:end="5480:3">if</cpp:directive> <expr pos:start="5480:5" pos:end="5480:75"><call pos:start="5480:5" pos:end="5480:40"><name pos:start="5480:5" pos:end="5480:11">defined</name><argument_list pos:start="5480:12" pos:end="5480:40">(<argument pos:start="5480:13" pos:end="5480:39"><expr pos:start="5480:13" pos:end="5480:39"><name pos:start="5480:13" pos:end="5480:39">TARGET_NR_inotify_add_watch</name></expr></argument>)</argument_list></call> <operator pos:start="5480:42" pos:end="5480:43">&amp;&amp;</operator> <call pos:start="5480:45" pos:end="5480:75"><name pos:start="5480:45" pos:end="5480:51">defined</name><argument_list pos:start="5480:52" pos:end="5480:75">(<argument pos:start="5480:53" pos:end="5480:74"><expr pos:start="5480:53" pos:end="5480:74"><name pos:start="5480:53" pos:end="5480:74">__NR_inotify_add_watch</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="5482:5" pos:end="5482:37">case <expr pos:start="5482:10" pos:end="5482:36"><name pos:start="5482:10" pos:end="5482:36">TARGET_NR_inotify_add_watch</name></expr>:</case>

        <expr_stmt pos:start="5484:9" pos:end="5484:35"><expr pos:start="5484:9" pos:end="5484:34"><name pos:start="5484:9" pos:end="5484:9">p</name> <operator pos:start="5484:11" pos:end="5484:11">=</operator> <call pos:start="5484:13" pos:end="5484:34"><name pos:start="5484:13" pos:end="5484:28">lock_user_string</name><argument_list pos:start="5484:29" pos:end="5484:34">(<argument pos:start="5484:30" pos:end="5484:33"><expr pos:start="5484:30" pos:end="5484:33"><name pos:start="5484:30" pos:end="5484:33">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="5486:9" pos:end="5486:68"><expr pos:start="5486:9" pos:end="5486:67"><name pos:start="5486:9" pos:end="5486:11">ret</name> <operator pos:start="5486:13" pos:end="5486:13">=</operator> <call pos:start="5486:15" pos:end="5486:67"><name pos:start="5486:15" pos:end="5486:23">get_errno</name><argument_list pos:start="5486:24" pos:end="5486:67">(<argument pos:start="5486:25" pos:end="5486:66"><expr pos:start="5486:25" pos:end="5486:66"><call pos:start="5486:25" pos:end="5486:66"><name pos:start="5486:25" pos:end="5486:45">sys_inotify_add_watch</name><argument_list pos:start="5486:46" pos:end="5486:66">(<argument pos:start="5486:47" pos:end="5486:50"><expr pos:start="5486:47" pos:end="5486:50"><name pos:start="5486:47" pos:end="5486:50">arg1</name></expr></argument>, <argument pos:start="5486:53" pos:end="5486:59"><expr pos:start="5486:53" pos:end="5486:59"><call pos:start="5486:53" pos:end="5486:59"><name pos:start="5486:53" pos:end="5486:56">path</name><argument_list pos:start="5486:57" pos:end="5486:59">(<argument pos:start="5486:58" pos:end="5486:58"><expr pos:start="5486:58" pos:end="5486:58"><name pos:start="5486:58" pos:end="5486:58">p</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="5486:62" pos:end="5486:65"><expr pos:start="5486:62" pos:end="5486:65"><name pos:start="5486:62" pos:end="5486:65">arg3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="5488:9" pos:end="5488:32"><expr pos:start="5488:9" pos:end="5488:31"><call pos:start="5488:9" pos:end="5488:31"><name pos:start="5488:9" pos:end="5488:19">unlock_user</name><argument_list pos:start="5488:20" pos:end="5488:31">(<argument pos:start="5488:21" pos:end="5488:21"><expr pos:start="5488:21" pos:end="5488:21"><name pos:start="5488:21" pos:end="5488:21">p</name></expr></argument>, <argument pos:start="5488:24" pos:end="5488:27"><expr pos:start="5488:24" pos:end="5488:27"><name pos:start="5488:24" pos:end="5488:27">arg2</name></expr></argument>, <argument pos:start="5488:30" pos:end="5488:30"><expr pos:start="5488:30" pos:end="5488:30"><literal type="number" pos:start="5488:30" pos:end="5488:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="5490:9" pos:end="5495:0">break;</break>

<cpp:endif pos:start="5492:1" pos:end="5492:6">#<cpp:directive pos:start="5492:2" pos:end="5492:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="5494:1" pos:end="5494:73">#<cpp:directive pos:start="5494:2" pos:end="5494:3">if</cpp:directive> <expr pos:start="5494:5" pos:end="5494:73"><call pos:start="5494:5" pos:end="5494:39"><name pos:start="5494:5" pos:end="5494:11">defined</name><argument_list pos:start="5494:12" pos:end="5494:39">(<argument pos:start="5494:13" pos:end="5494:38"><expr pos:start="5494:13" pos:end="5494:38"><name pos:start="5494:13" pos:end="5494:38">TARGET_NR_inotify_rm_watch</name></expr></argument>)</argument_list></call> <operator pos:start="5494:41" pos:end="5494:42">&amp;&amp;</operator> <call pos:start="5494:44" pos:end="5494:73"><name pos:start="5494:44" pos:end="5494:50">defined</name><argument_list pos:start="5494:51" pos:end="5494:73">(<argument pos:start="5494:52" pos:end="5494:72"><expr pos:start="5494:52" pos:end="5494:72"><name pos:start="5494:52" pos:end="5494:72">__NR_inotify_rm_watch</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="5496:5" pos:end="5496:36">case <expr pos:start="5496:10" pos:end="5496:35"><name pos:start="5496:10" pos:end="5496:35">TARGET_NR_inotify_rm_watch</name></expr>:</case>

        <expr_stmt pos:start="5498:9" pos:end="5498:58"><expr pos:start="5498:9" pos:end="5498:57"><name pos:start="5498:9" pos:end="5498:11">ret</name> <operator pos:start="5498:13" pos:end="5498:13">=</operator> <call pos:start="5498:15" pos:end="5498:57"><name pos:start="5498:15" pos:end="5498:23">get_errno</name><argument_list pos:start="5498:24" pos:end="5498:57">(<argument pos:start="5498:25" pos:end="5498:56"><expr pos:start="5498:25" pos:end="5498:56"><call pos:start="5498:25" pos:end="5498:56"><name pos:start="5498:25" pos:end="5498:44">sys_inotify_rm_watch</name><argument_list pos:start="5498:45" pos:end="5498:56">(<argument pos:start="5498:46" pos:end="5498:49"><expr pos:start="5498:46" pos:end="5498:49"><name pos:start="5498:46" pos:end="5498:49">arg1</name></expr></argument>, <argument pos:start="5498:52" pos:end="5498:55"><expr pos:start="5498:52" pos:end="5498:55"><name pos:start="5498:52" pos:end="5498:55">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="5500:9" pos:end="5507:0">break;</break>

<cpp:endif pos:start="5502:1" pos:end="5502:6">#<cpp:directive pos:start="5502:2" pos:end="5502:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="5506:1" pos:end="5506:55">#<cpp:directive pos:start="5506:2" pos:end="5506:3">if</cpp:directive> <expr pos:start="5506:5" pos:end="5506:55"><call pos:start="5506:5" pos:end="5506:30"><name pos:start="5506:5" pos:end="5506:11">defined</name><argument_list pos:start="5506:12" pos:end="5506:30">(<argument pos:start="5506:13" pos:end="5506:29"><expr pos:start="5506:13" pos:end="5506:29"><name pos:start="5506:13" pos:end="5506:29">TARGET_NR_mq_open</name></expr></argument>)</argument_list></call> <operator pos:start="5506:32" pos:end="5506:33">&amp;&amp;</operator> <call pos:start="5506:35" pos:end="5506:55"><name pos:start="5506:35" pos:end="5506:41">defined</name><argument_list pos:start="5506:42" pos:end="5506:55">(<argument pos:start="5506:43" pos:end="5506:54"><expr pos:start="5506:43" pos:end="5506:54"><name pos:start="5506:43" pos:end="5506:54">__NR_mq_open</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="5508:5" pos:end="5508:27">case <expr pos:start="5508:10" pos:end="5508:26"><name pos:start="5508:10" pos:end="5508:26">TARGET_NR_mq_open</name></expr>:</case>

        <block pos:start="5510:9" pos:end="5526:9">{<block_content pos:start="5512:13" pos:end="5524:37">

            <decl_stmt pos:start="5512:13" pos:end="5512:41"><decl pos:start="5512:13" pos:end="5512:40"><type pos:start="5512:13" pos:end="5512:26"><name pos:start="5512:13" pos:end="5512:26"><name pos:start="5512:13" pos:end="5512:18">struct</name> <name pos:start="5512:20" pos:end="5512:26">mq_attr</name></name></type> <name pos:start="5512:28" pos:end="5512:40">posix_mq_attr</name></decl>;</decl_stmt>



            <expr_stmt pos:start="5516:13" pos:end="5516:43"><expr pos:start="5516:13" pos:end="5516:42"><name pos:start="5516:13" pos:end="5516:13">p</name> <operator pos:start="5516:15" pos:end="5516:15">=</operator> <call pos:start="5516:17" pos:end="5516:42"><name pos:start="5516:17" pos:end="5516:32">lock_user_string</name><argument_list pos:start="5516:33" pos:end="5516:42">(<argument pos:start="5516:34" pos:end="5516:41"><expr pos:start="5516:34" pos:end="5516:41"><name pos:start="5516:34" pos:end="5516:37">arg1</name> <operator pos:start="5516:39" pos:end="5516:39">-</operator> <literal type="number" pos:start="5516:41" pos:end="5516:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="5518:13" pos:end="5520:62"><if pos:start="5518:13" pos:end="5520:62">if <condition pos:start="5518:16" pos:end="5518:26">(<expr pos:start="5518:17" pos:end="5518:25"><name pos:start="5518:17" pos:end="5518:20">arg4</name> <operator pos:start="5518:22" pos:end="5518:23">!=</operator> <literal type="number" pos:start="5518:25" pos:end="5518:25">0</literal></expr>)</condition><block type="pseudo" pos:start="5520:17" pos:end="5520:62"><block_content pos:start="5520:17" pos:end="5520:62">

                <expr_stmt pos:start="5520:17" pos:end="5520:62"><expr pos:start="5520:17" pos:end="5520:61"><call pos:start="5520:17" pos:end="5520:61"><name pos:start="5520:17" pos:end="5520:38">copy_from_user_mq_attr</name> <argument_list pos:start="5520:40" pos:end="5520:61">(<argument pos:start="5520:41" pos:end="5520:54"><expr pos:start="5520:41" pos:end="5520:54"><operator pos:start="5520:41" pos:end="5520:41">&amp;</operator><name pos:start="5520:42" pos:end="5520:54">posix_mq_attr</name></expr></argument>, <argument pos:start="5520:57" pos:end="5520:60"><expr pos:start="5520:57" pos:end="5520:60"><name pos:start="5520:57" pos:end="5520:60">arg4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="5522:13" pos:end="5522:68"><expr pos:start="5522:13" pos:end="5522:67"><name pos:start="5522:13" pos:end="5522:15">ret</name> <operator pos:start="5522:17" pos:end="5522:17">=</operator> <call pos:start="5522:19" pos:end="5522:67"><name pos:start="5522:19" pos:end="5522:27">get_errno</name><argument_list pos:start="5522:28" pos:end="5522:67">(<argument pos:start="5522:29" pos:end="5522:66"><expr pos:start="5522:29" pos:end="5522:66"><call pos:start="5522:29" pos:end="5522:66"><name pos:start="5522:29" pos:end="5522:35">mq_open</name><argument_list pos:start="5522:36" pos:end="5522:66">(<argument pos:start="5522:37" pos:end="5522:37"><expr pos:start="5522:37" pos:end="5522:37"><name pos:start="5522:37" pos:end="5522:37">p</name></expr></argument>, <argument pos:start="5522:40" pos:end="5522:43"><expr pos:start="5522:40" pos:end="5522:43"><name pos:start="5522:40" pos:end="5522:43">arg2</name></expr></argument>, <argument pos:start="5522:46" pos:end="5522:49"><expr pos:start="5522:46" pos:end="5522:49"><name pos:start="5522:46" pos:end="5522:49">arg3</name></expr></argument>, <argument pos:start="5522:52" pos:end="5522:65"><expr pos:start="5522:52" pos:end="5522:65"><operator pos:start="5522:52" pos:end="5522:52">&amp;</operator><name pos:start="5522:53" pos:end="5522:65">posix_mq_attr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="5524:13" pos:end="5524:37"><expr pos:start="5524:13" pos:end="5524:36"><call pos:start="5524:13" pos:end="5524:36"><name pos:start="5524:13" pos:end="5524:23">unlock_user</name> <argument_list pos:start="5524:25" pos:end="5524:36">(<argument pos:start="5524:26" pos:end="5524:26"><expr pos:start="5524:26" pos:end="5524:26"><name pos:start="5524:26" pos:end="5524:26">p</name></expr></argument>, <argument pos:start="5524:29" pos:end="5524:32"><expr pos:start="5524:29" pos:end="5524:32"><name pos:start="5524:29" pos:end="5524:32">arg1</name></expr></argument>, <argument pos:start="5524:35" pos:end="5524:35"><expr pos:start="5524:35" pos:end="5524:35"><literal type="number" pos:start="5524:35" pos:end="5524:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="5528:9" pos:end="5528:14">break;</break>



    <case pos:start="5532:5" pos:end="5532:29">case <expr pos:start="5532:10" pos:end="5532:28"><name pos:start="5532:10" pos:end="5532:28">TARGET_NR_mq_unlink</name></expr>:</case>

        <expr_stmt pos:start="5534:9" pos:end="5534:39"><expr pos:start="5534:9" pos:end="5534:38"><name pos:start="5534:9" pos:end="5534:9">p</name> <operator pos:start="5534:11" pos:end="5534:11">=</operator> <call pos:start="5534:13" pos:end="5534:38"><name pos:start="5534:13" pos:end="5534:28">lock_user_string</name><argument_list pos:start="5534:29" pos:end="5534:38">(<argument pos:start="5534:30" pos:end="5534:37"><expr pos:start="5534:30" pos:end="5534:37"><name pos:start="5534:30" pos:end="5534:33">arg1</name> <operator pos:start="5534:35" pos:end="5534:35">-</operator> <literal type="number" pos:start="5534:37" pos:end="5534:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="5536:9" pos:end="5536:38"><expr pos:start="5536:9" pos:end="5536:37"><name pos:start="5536:9" pos:end="5536:11">ret</name> <operator pos:start="5536:13" pos:end="5536:13">=</operator> <call pos:start="5536:15" pos:end="5536:37"><name pos:start="5536:15" pos:end="5536:23">get_errno</name><argument_list pos:start="5536:24" pos:end="5536:37">(<argument pos:start="5536:25" pos:end="5536:36"><expr pos:start="5536:25" pos:end="5536:36"><call pos:start="5536:25" pos:end="5536:36"><name pos:start="5536:25" pos:end="5536:33">mq_unlink</name><argument_list pos:start="5536:34" pos:end="5536:36">(<argument pos:start="5536:35" pos:end="5536:35"><expr pos:start="5536:35" pos:end="5536:35"><name pos:start="5536:35" pos:end="5536:35">p</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="5538:9" pos:end="5538:33"><expr pos:start="5538:9" pos:end="5538:32"><call pos:start="5538:9" pos:end="5538:32"><name pos:start="5538:9" pos:end="5538:19">unlock_user</name> <argument_list pos:start="5538:21" pos:end="5538:32">(<argument pos:start="5538:22" pos:end="5538:22"><expr pos:start="5538:22" pos:end="5538:22"><name pos:start="5538:22" pos:end="5538:22">p</name></expr></argument>, <argument pos:start="5538:25" pos:end="5538:28"><expr pos:start="5538:25" pos:end="5538:28"><name pos:start="5538:25" pos:end="5538:28">arg1</name></expr></argument>, <argument pos:start="5538:31" pos:end="5538:31"><expr pos:start="5538:31" pos:end="5538:31"><literal type="number" pos:start="5538:31" pos:end="5538:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="5540:9" pos:end="5540:14">break;</break>



    <case pos:start="5544:5" pos:end="5544:32">case <expr pos:start="5544:10" pos:end="5544:31"><name pos:start="5544:10" pos:end="5544:31">TARGET_NR_mq_timedsend</name></expr>:</case>

        <block pos:start="5546:9" pos:end="5570:9">{<block_content pos:start="5548:13" pos:end="5568:40">

            <decl_stmt pos:start="5548:13" pos:end="5548:31"><decl pos:start="5548:13" pos:end="5548:30"><type pos:start="5548:13" pos:end="5548:27"><name pos:start="5548:13" pos:end="5548:27"><name pos:start="5548:13" pos:end="5548:18">struct</name> <name pos:start="5548:20" pos:end="5548:27">timespec</name></name></type> <name pos:start="5548:29" pos:end="5548:30">ts</name></decl>;</decl_stmt>



            <expr_stmt pos:start="5552:13" pos:end="5552:55"><expr pos:start="5552:13" pos:end="5552:54"><name pos:start="5552:13" pos:end="5552:13">p</name> <operator pos:start="5552:15" pos:end="5552:15">=</operator> <call pos:start="5552:17" pos:end="5552:54"><name pos:start="5552:17" pos:end="5552:25">lock_user</name> <argument_list pos:start="5552:27" pos:end="5552:54">(<argument pos:start="5552:28" pos:end="5552:38"><expr pos:start="5552:28" pos:end="5552:38"><name pos:start="5552:28" pos:end="5552:38">VERIFY_READ</name></expr></argument>, <argument pos:start="5552:41" pos:end="5552:44"><expr pos:start="5552:41" pos:end="5552:44"><name pos:start="5552:41" pos:end="5552:44">arg2</name></expr></argument>, <argument pos:start="5552:47" pos:end="5552:50"><expr pos:start="5552:47" pos:end="5552:50"><name pos:start="5552:47" pos:end="5552:50">arg3</name></expr></argument>, <argument pos:start="5552:53" pos:end="5552:53"><expr pos:start="5552:53" pos:end="5552:53"><literal type="number" pos:start="5552:53" pos:end="5552:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="5554:13" pos:end="5566:62"><if pos:start="5554:13" pos:end="5562:13">if <condition pos:start="5554:16" pos:end="5554:26">(<expr pos:start="5554:17" pos:end="5554:25"><name pos:start="5554:17" pos:end="5554:20">arg5</name> <operator pos:start="5554:22" pos:end="5554:23">!=</operator> <literal type="number" pos:start="5554:25" pos:end="5554:25">0</literal></expr>)</condition> <block pos:start="5554:28" pos:end="5562:13">{<block_content pos:start="5556:17" pos:end="5560:51">

                <expr_stmt pos:start="5556:17" pos:end="5556:51"><expr pos:start="5556:17" pos:end="5556:50"><call pos:start="5556:17" pos:end="5556:50"><name pos:start="5556:17" pos:end="5556:39">target_to_host_timespec</name><argument_list pos:start="5556:40" pos:end="5556:50">(<argument pos:start="5556:41" pos:end="5556:43"><expr pos:start="5556:41" pos:end="5556:43"><operator pos:start="5556:41" pos:end="5556:41">&amp;</operator><name pos:start="5556:42" pos:end="5556:43">ts</name></expr></argument>, <argument pos:start="5556:46" pos:end="5556:49"><expr pos:start="5556:46" pos:end="5556:49"><name pos:start="5556:46" pos:end="5556:49">arg5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5558:17" pos:end="5558:72"><expr pos:start="5558:17" pos:end="5558:71"><name pos:start="5558:17" pos:end="5558:19">ret</name> <operator pos:start="5558:21" pos:end="5558:21">=</operator> <call pos:start="5558:23" pos:end="5558:71"><name pos:start="5558:23" pos:end="5558:31">get_errno</name><argument_list pos:start="5558:32" pos:end="5558:71">(<argument pos:start="5558:33" pos:end="5558:70"><expr pos:start="5558:33" pos:end="5558:70"><call pos:start="5558:33" pos:end="5558:70"><name pos:start="5558:33" pos:end="5558:44">mq_timedsend</name><argument_list pos:start="5558:45" pos:end="5558:70">(<argument pos:start="5558:46" pos:end="5558:49"><expr pos:start="5558:46" pos:end="5558:49"><name pos:start="5558:46" pos:end="5558:49">arg1</name></expr></argument>, <argument pos:start="5558:52" pos:end="5558:52"><expr pos:start="5558:52" pos:end="5558:52"><name pos:start="5558:52" pos:end="5558:52">p</name></expr></argument>, <argument pos:start="5558:55" pos:end="5558:58"><expr pos:start="5558:55" pos:end="5558:58"><name pos:start="5558:55" pos:end="5558:58">arg3</name></expr></argument>, <argument pos:start="5558:61" pos:end="5558:64"><expr pos:start="5558:61" pos:end="5558:64"><name pos:start="5558:61" pos:end="5558:64">arg4</name></expr></argument>, <argument pos:start="5558:67" pos:end="5558:69"><expr pos:start="5558:67" pos:end="5558:69"><operator pos:start="5558:67" pos:end="5558:67">&amp;</operator><name pos:start="5558:68" pos:end="5558:69">ts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5560:17" pos:end="5560:51"><expr pos:start="5560:17" pos:end="5560:50"><call pos:start="5560:17" pos:end="5560:50"><name pos:start="5560:17" pos:end="5560:39">host_to_target_timespec</name><argument_list pos:start="5560:40" pos:end="5560:50">(<argument pos:start="5560:41" pos:end="5560:44"><expr pos:start="5560:41" pos:end="5560:44"><name pos:start="5560:41" pos:end="5560:44">arg5</name></expr></argument>, <argument pos:start="5560:47" pos:end="5560:49"><expr pos:start="5560:47" pos:end="5560:49"><operator pos:start="5560:47" pos:end="5560:47">&amp;</operator><name pos:start="5560:48" pos:end="5560:49">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="5564:13" pos:end="5566:62">else<block type="pseudo" pos:start="5566:17" pos:end="5566:62"><block_content pos:start="5566:17" pos:end="5566:62">

                <expr_stmt pos:start="5566:17" pos:end="5566:62"><expr pos:start="5566:17" pos:end="5566:61"><name pos:start="5566:17" pos:end="5566:19">ret</name> <operator pos:start="5566:21" pos:end="5566:21">=</operator> <call pos:start="5566:23" pos:end="5566:61"><name pos:start="5566:23" pos:end="5566:31">get_errno</name><argument_list pos:start="5566:32" pos:end="5566:61">(<argument pos:start="5566:33" pos:end="5566:60"><expr pos:start="5566:33" pos:end="5566:60"><call pos:start="5566:33" pos:end="5566:60"><name pos:start="5566:33" pos:end="5566:39">mq_send</name><argument_list pos:start="5566:40" pos:end="5566:60">(<argument pos:start="5566:41" pos:end="5566:44"><expr pos:start="5566:41" pos:end="5566:44"><name pos:start="5566:41" pos:end="5566:44">arg1</name></expr></argument>, <argument pos:start="5566:47" pos:end="5566:47"><expr pos:start="5566:47" pos:end="5566:47"><name pos:start="5566:47" pos:end="5566:47">p</name></expr></argument>, <argument pos:start="5566:50" pos:end="5566:53"><expr pos:start="5566:50" pos:end="5566:53"><name pos:start="5566:50" pos:end="5566:53">arg3</name></expr></argument>, <argument pos:start="5566:56" pos:end="5566:59"><expr pos:start="5566:56" pos:end="5566:59"><name pos:start="5566:56" pos:end="5566:59">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="5568:13" pos:end="5568:40"><expr pos:start="5568:13" pos:end="5568:39"><call pos:start="5568:13" pos:end="5568:39"><name pos:start="5568:13" pos:end="5568:23">unlock_user</name> <argument_list pos:start="5568:25" pos:end="5568:39">(<argument pos:start="5568:26" pos:end="5568:26"><expr pos:start="5568:26" pos:end="5568:26"><name pos:start="5568:26" pos:end="5568:26">p</name></expr></argument>, <argument pos:start="5568:29" pos:end="5568:32"><expr pos:start="5568:29" pos:end="5568:32"><name pos:start="5568:29" pos:end="5568:32">arg2</name></expr></argument>, <argument pos:start="5568:35" pos:end="5568:38"><expr pos:start="5568:35" pos:end="5568:38"><name pos:start="5568:35" pos:end="5568:38">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="5572:9" pos:end="5572:14">break;</break>



    <case pos:start="5576:5" pos:end="5576:35">case <expr pos:start="5576:10" pos:end="5576:34"><name pos:start="5576:10" pos:end="5576:34">TARGET_NR_mq_timedreceive</name></expr>:</case>

        <block pos:start="5578:9" pos:end="5608:9">{<block_content pos:start="5580:13" pos:end="5606:41">

            <decl_stmt pos:start="5580:13" pos:end="5580:31"><decl pos:start="5580:13" pos:end="5580:30"><type pos:start="5580:13" pos:end="5580:27"><name pos:start="5580:13" pos:end="5580:27"><name pos:start="5580:13" pos:end="5580:18">struct</name> <name pos:start="5580:20" pos:end="5580:27">timespec</name></name></type> <name pos:start="5580:29" pos:end="5580:30">ts</name></decl>;</decl_stmt>

            <decl_stmt pos:start="5582:13" pos:end="5582:30"><decl pos:start="5582:13" pos:end="5582:29"><type pos:start="5582:13" pos:end="5582:24"><name pos:start="5582:13" pos:end="5582:20">unsigned</name> <name pos:start="5582:22" pos:end="5582:24">int</name></type> <name pos:start="5582:26" pos:end="5582:29">prio</name></decl>;</decl_stmt>



            <expr_stmt pos:start="5586:13" pos:end="5586:55"><expr pos:start="5586:13" pos:end="5586:54"><name pos:start="5586:13" pos:end="5586:13">p</name> <operator pos:start="5586:15" pos:end="5586:15">=</operator> <call pos:start="5586:17" pos:end="5586:54"><name pos:start="5586:17" pos:end="5586:25">lock_user</name> <argument_list pos:start="5586:27" pos:end="5586:54">(<argument pos:start="5586:28" pos:end="5586:38"><expr pos:start="5586:28" pos:end="5586:38"><name pos:start="5586:28" pos:end="5586:38">VERIFY_READ</name></expr></argument>, <argument pos:start="5586:41" pos:end="5586:44"><expr pos:start="5586:41" pos:end="5586:44"><name pos:start="5586:41" pos:end="5586:44">arg2</name></expr></argument>, <argument pos:start="5586:47" pos:end="5586:50"><expr pos:start="5586:47" pos:end="5586:50"><name pos:start="5586:47" pos:end="5586:50">arg3</name></expr></argument>, <argument pos:start="5586:53" pos:end="5586:53"><expr pos:start="5586:53" pos:end="5586:53"><literal type="number" pos:start="5586:53" pos:end="5586:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="5588:13" pos:end="5600:66"><if pos:start="5588:13" pos:end="5596:13">if <condition pos:start="5588:16" pos:end="5588:26">(<expr pos:start="5588:17" pos:end="5588:25"><name pos:start="5588:17" pos:end="5588:20">arg5</name> <operator pos:start="5588:22" pos:end="5588:23">!=</operator> <literal type="number" pos:start="5588:25" pos:end="5588:25">0</literal></expr>)</condition> <block pos:start="5588:28" pos:end="5596:13">{<block_content pos:start="5590:17" pos:end="5594:51">

                <expr_stmt pos:start="5590:17" pos:end="5590:51"><expr pos:start="5590:17" pos:end="5590:50"><call pos:start="5590:17" pos:end="5590:50"><name pos:start="5590:17" pos:end="5590:39">target_to_host_timespec</name><argument_list pos:start="5590:40" pos:end="5590:50">(<argument pos:start="5590:41" pos:end="5590:43"><expr pos:start="5590:41" pos:end="5590:43"><operator pos:start="5590:41" pos:end="5590:41">&amp;</operator><name pos:start="5590:42" pos:end="5590:43">ts</name></expr></argument>, <argument pos:start="5590:46" pos:end="5590:49"><expr pos:start="5590:46" pos:end="5590:49"><name pos:start="5590:46" pos:end="5590:49">arg5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5592:17" pos:end="5592:76"><expr pos:start="5592:17" pos:end="5592:75"><name pos:start="5592:17" pos:end="5592:19">ret</name> <operator pos:start="5592:21" pos:end="5592:21">=</operator> <call pos:start="5592:23" pos:end="5592:75"><name pos:start="5592:23" pos:end="5592:31">get_errno</name><argument_list pos:start="5592:32" pos:end="5592:75">(<argument pos:start="5592:33" pos:end="5592:74"><expr pos:start="5592:33" pos:end="5592:74"><call pos:start="5592:33" pos:end="5592:74"><name pos:start="5592:33" pos:end="5592:47">mq_timedreceive</name><argument_list pos:start="5592:48" pos:end="5592:74">(<argument pos:start="5592:49" pos:end="5592:52"><expr pos:start="5592:49" pos:end="5592:52"><name pos:start="5592:49" pos:end="5592:52">arg1</name></expr></argument>, <argument pos:start="5592:55" pos:end="5592:55"><expr pos:start="5592:55" pos:end="5592:55"><name pos:start="5592:55" pos:end="5592:55">p</name></expr></argument>, <argument pos:start="5592:58" pos:end="5592:61"><expr pos:start="5592:58" pos:end="5592:61"><name pos:start="5592:58" pos:end="5592:61">arg3</name></expr></argument>, <argument pos:start="5592:64" pos:end="5592:68"><expr pos:start="5592:64" pos:end="5592:68"><operator pos:start="5592:64" pos:end="5592:64">&amp;</operator><name pos:start="5592:65" pos:end="5592:68">prio</name></expr></argument>, <argument pos:start="5592:71" pos:end="5592:73"><expr pos:start="5592:71" pos:end="5592:73"><operator pos:start="5592:71" pos:end="5592:71">&amp;</operator><name pos:start="5592:72" pos:end="5592:73">ts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5594:17" pos:end="5594:51"><expr pos:start="5594:17" pos:end="5594:50"><call pos:start="5594:17" pos:end="5594:50"><name pos:start="5594:17" pos:end="5594:39">host_to_target_timespec</name><argument_list pos:start="5594:40" pos:end="5594:50">(<argument pos:start="5594:41" pos:end="5594:44"><expr pos:start="5594:41" pos:end="5594:44"><name pos:start="5594:41" pos:end="5594:44">arg5</name></expr></argument>, <argument pos:start="5594:47" pos:end="5594:49"><expr pos:start="5594:47" pos:end="5594:49"><operator pos:start="5594:47" pos:end="5594:47">&amp;</operator><name pos:start="5594:48" pos:end="5594:49">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="5598:13" pos:end="5600:66">else<block type="pseudo" pos:start="5600:17" pos:end="5600:66"><block_content pos:start="5600:17" pos:end="5600:66">

                <expr_stmt pos:start="5600:17" pos:end="5600:66"><expr pos:start="5600:17" pos:end="5600:65"><name pos:start="5600:17" pos:end="5600:19">ret</name> <operator pos:start="5600:21" pos:end="5600:21">=</operator> <call pos:start="5600:23" pos:end="5600:65"><name pos:start="5600:23" pos:end="5600:31">get_errno</name><argument_list pos:start="5600:32" pos:end="5600:65">(<argument pos:start="5600:33" pos:end="5600:64"><expr pos:start="5600:33" pos:end="5600:64"><call pos:start="5600:33" pos:end="5600:64"><name pos:start="5600:33" pos:end="5600:42">mq_receive</name><argument_list pos:start="5600:43" pos:end="5600:64">(<argument pos:start="5600:44" pos:end="5600:47"><expr pos:start="5600:44" pos:end="5600:47"><name pos:start="5600:44" pos:end="5600:47">arg1</name></expr></argument>, <argument pos:start="5600:50" pos:end="5600:50"><expr pos:start="5600:50" pos:end="5600:50"><name pos:start="5600:50" pos:end="5600:50">p</name></expr></argument>, <argument pos:start="5600:53" pos:end="5600:56"><expr pos:start="5600:53" pos:end="5600:56"><name pos:start="5600:53" pos:end="5600:56">arg3</name></expr></argument>, <argument pos:start="5600:59" pos:end="5600:63"><expr pos:start="5600:59" pos:end="5600:63"><operator pos:start="5600:59" pos:end="5600:59">&amp;</operator><name pos:start="5600:60" pos:end="5600:63">prio</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="5602:13" pos:end="5602:40"><expr pos:start="5602:13" pos:end="5602:39"><call pos:start="5602:13" pos:end="5602:39"><name pos:start="5602:13" pos:end="5602:23">unlock_user</name> <argument_list pos:start="5602:25" pos:end="5602:39">(<argument pos:start="5602:26" pos:end="5602:26"><expr pos:start="5602:26" pos:end="5602:26"><name pos:start="5602:26" pos:end="5602:26">p</name></expr></argument>, <argument pos:start="5602:29" pos:end="5602:32"><expr pos:start="5602:29" pos:end="5602:32"><name pos:start="5602:29" pos:end="5602:32">arg2</name></expr></argument>, <argument pos:start="5602:35" pos:end="5602:38"><expr pos:start="5602:35" pos:end="5602:38"><name pos:start="5602:35" pos:end="5602:38">arg3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="5604:13" pos:end="5606:41"><if pos:start="5604:13" pos:end="5606:41">if <condition pos:start="5604:16" pos:end="5604:26">(<expr pos:start="5604:17" pos:end="5604:25"><name pos:start="5604:17" pos:end="5604:20">arg4</name> <operator pos:start="5604:22" pos:end="5604:23">!=</operator> <literal type="number" pos:start="5604:25" pos:end="5604:25">0</literal></expr>)</condition><block type="pseudo" pos:start="5606:17" pos:end="5606:41"><block_content pos:start="5606:17" pos:end="5606:41">

                <expr_stmt pos:start="5606:17" pos:end="5606:41"><expr pos:start="5606:17" pos:end="5606:40"><call pos:start="5606:17" pos:end="5606:40"><name pos:start="5606:17" pos:end="5606:28">put_user_u32</name><argument_list pos:start="5606:29" pos:end="5606:40">(<argument pos:start="5606:30" pos:end="5606:33"><expr pos:start="5606:30" pos:end="5606:33"><name pos:start="5606:30" pos:end="5606:33">prio</name></expr></argument>, <argument pos:start="5606:36" pos:end="5606:39"><expr pos:start="5606:36" pos:end="5606:39"><name pos:start="5606:36" pos:end="5606:39">arg4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="5610:9" pos:end="5610:14">break;</break>



    <comment type="block" pos:start="5614:5" pos:end="5614:36">/* Not implemented for now... */</comment>

<comment type="block" pos:start="5616:1" pos:end="5616:35">/*     case TARGET_NR_mq_notify: */</comment>

<comment type="block" pos:start="5618:1" pos:end="5618:20">/*         break; */</comment>



    <case pos:start="5622:5" pos:end="5622:33">case <expr pos:start="5622:10" pos:end="5622:32"><name pos:start="5622:10" pos:end="5622:32">TARGET_NR_mq_getsetattr</name></expr>:</case>

        <block pos:start="5624:9" pos:end="5648:9">{<block_content pos:start="5626:13" pos:end="5644:13">

            <decl_stmt pos:start="5626:13" pos:end="5626:63"><decl pos:start="5626:13" pos:end="5626:43"><type pos:start="5626:13" pos:end="5626:26"><name pos:start="5626:13" pos:end="5626:26"><name pos:start="5626:13" pos:end="5626:18">struct</name> <name pos:start="5626:20" pos:end="5626:26">mq_attr</name></name></type> <name pos:start="5626:28" pos:end="5626:43">posix_mq_attr_in</name></decl>, <decl pos:start="5626:46" pos:end="5626:62"><type ref="prev" pos:start="5626:13" pos:end="5626:26"/><name pos:start="5626:46" pos:end="5626:62">posix_mq_attr_out</name></decl>;</decl_stmt>

            <expr_stmt pos:start="5628:13" pos:end="5628:20"><expr pos:start="5628:13" pos:end="5628:19"><name pos:start="5628:13" pos:end="5628:15">ret</name> <operator pos:start="5628:17" pos:end="5628:17">=</operator> <literal type="number" pos:start="5628:19" pos:end="5628:19">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="5630:13" pos:end="5636:13"><if pos:start="5630:13" pos:end="5636:13">if <condition pos:start="5630:16" pos:end="5630:26">(<expr pos:start="5630:17" pos:end="5630:25"><name pos:start="5630:17" pos:end="5630:20">arg3</name> <operator pos:start="5630:22" pos:end="5630:23">!=</operator> <literal type="number" pos:start="5630:25" pos:end="5630:25">0</literal></expr>)</condition> <block pos:start="5630:28" pos:end="5636:13">{<block_content pos:start="5632:17" pos:end="5634:63">

                <expr_stmt pos:start="5632:17" pos:end="5632:59"><expr pos:start="5632:17" pos:end="5632:58"><name pos:start="5632:17" pos:end="5632:19">ret</name> <operator pos:start="5632:21" pos:end="5632:21">=</operator> <call pos:start="5632:23" pos:end="5632:58"><name pos:start="5632:23" pos:end="5632:32">mq_getattr</name><argument_list pos:start="5632:33" pos:end="5632:58">(<argument pos:start="5632:34" pos:end="5632:37"><expr pos:start="5632:34" pos:end="5632:37"><name pos:start="5632:34" pos:end="5632:37">arg1</name></expr></argument>, <argument pos:start="5632:40" pos:end="5632:57"><expr pos:start="5632:40" pos:end="5632:57"><operator pos:start="5632:40" pos:end="5632:40">&amp;</operator><name pos:start="5632:41" pos:end="5632:57">posix_mq_attr_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5634:17" pos:end="5634:63"><expr pos:start="5634:17" pos:end="5634:62"><call pos:start="5634:17" pos:end="5634:62"><name pos:start="5634:17" pos:end="5634:36">copy_to_user_mq_attr</name><argument_list pos:start="5634:37" pos:end="5634:62">(<argument pos:start="5634:38" pos:end="5634:41"><expr pos:start="5634:38" pos:end="5634:41"><name pos:start="5634:38" pos:end="5634:41">arg3</name></expr></argument>, <argument pos:start="5634:44" pos:end="5634:61"><expr pos:start="5634:44" pos:end="5634:61"><operator pos:start="5634:44" pos:end="5634:44">&amp;</operator><name pos:start="5634:45" pos:end="5634:61">posix_mq_attr_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="5638:13" pos:end="5644:13"><if pos:start="5638:13" pos:end="5644:13">if <condition pos:start="5638:16" pos:end="5638:26">(<expr pos:start="5638:17" pos:end="5638:25"><name pos:start="5638:17" pos:end="5638:20">arg2</name> <operator pos:start="5638:22" pos:end="5638:23">!=</operator> <literal type="number" pos:start="5638:25" pos:end="5638:25">0</literal></expr>)</condition> <block pos:start="5638:28" pos:end="5644:13">{<block_content pos:start="5640:17" pos:end="5642:79">

                <expr_stmt pos:start="5640:17" pos:end="5640:64"><expr pos:start="5640:17" pos:end="5640:63"><call pos:start="5640:17" pos:end="5640:63"><name pos:start="5640:17" pos:end="5640:38">copy_from_user_mq_attr</name><argument_list pos:start="5640:39" pos:end="5640:63">(<argument pos:start="5640:40" pos:end="5640:56"><expr pos:start="5640:40" pos:end="5640:56"><operator pos:start="5640:40" pos:end="5640:40">&amp;</operator><name pos:start="5640:41" pos:end="5640:56">posix_mq_attr_in</name></expr></argument>, <argument pos:start="5640:59" pos:end="5640:62"><expr pos:start="5640:59" pos:end="5640:62"><name pos:start="5640:59" pos:end="5640:62">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5642:17" pos:end="5642:79"><expr pos:start="5642:17" pos:end="5642:78"><name pos:start="5642:17" pos:end="5642:19">ret</name> <operator pos:start="5642:21" pos:end="5642:22">|=</operator> <call pos:start="5642:24" pos:end="5642:78"><name pos:start="5642:24" pos:end="5642:33">mq_setattr</name><argument_list pos:start="5642:34" pos:end="5642:78">(<argument pos:start="5642:35" pos:end="5642:38"><expr pos:start="5642:35" pos:end="5642:38"><name pos:start="5642:35" pos:end="5642:38">arg1</name></expr></argument>, <argument pos:start="5642:41" pos:end="5642:57"><expr pos:start="5642:41" pos:end="5642:57"><operator pos:start="5642:41" pos:end="5642:41">&amp;</operator><name pos:start="5642:42" pos:end="5642:57">posix_mq_attr_in</name></expr></argument>, <argument pos:start="5642:60" pos:end="5642:77"><expr pos:start="5642:60" pos:end="5642:77"><operator pos:start="5642:60" pos:end="5642:60">&amp;</operator><name pos:start="5642:61" pos:end="5642:77">posix_mq_attr_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



        </block_content>}</block>

        <break pos:start="5650:9" pos:end="5659:0">break;</break>

<cpp:endif pos:start="5652:1" pos:end="5652:6">#<cpp:directive pos:start="5652:2" pos:end="5652:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="5656:1" pos:end="5656:20">#<cpp:directive pos:start="5656:2" pos:end="5656:6">ifdef</cpp:directive> <name pos:start="5656:8" pos:end="5656:20">CONFIG_SPLICE</name></cpp:ifdef>

<cpp:ifdef pos:start="5658:1" pos:end="5658:20">#<cpp:directive pos:start="5658:2" pos:end="5658:6">ifdef</cpp:directive> <name pos:start="5658:8" pos:end="5658:20">TARGET_NR_tee</name></cpp:ifdef>

    <case pos:start="5660:5" pos:end="5660:23">case <expr pos:start="5660:10" pos:end="5660:22"><name pos:start="5660:10" pos:end="5660:22">TARGET_NR_tee</name></expr>:</case>

        <block pos:start="5662:9" pos:end="5666:9">{<block_content pos:start="5664:13" pos:end="5664:54">

            <expr_stmt pos:start="5664:13" pos:end="5664:54"><expr pos:start="5664:13" pos:end="5664:53"><name pos:start="5664:13" pos:end="5664:15">ret</name> <operator pos:start="5664:17" pos:end="5664:17">=</operator> <call pos:start="5664:19" pos:end="5664:53"><name pos:start="5664:19" pos:end="5664:27">get_errno</name><argument_list pos:start="5664:28" pos:end="5664:53">(<argument pos:start="5664:29" pos:end="5664:52"><expr pos:start="5664:29" pos:end="5664:52"><call pos:start="5664:29" pos:end="5664:52"><name pos:start="5664:29" pos:end="5664:31">tee</name><argument_list pos:start="5664:32" pos:end="5664:52">(<argument pos:start="5664:33" pos:end="5664:36"><expr pos:start="5664:33" pos:end="5664:36"><name pos:start="5664:33" pos:end="5664:36">arg1</name></expr></argument>,<argument pos:start="5664:38" pos:end="5664:41"><expr pos:start="5664:38" pos:end="5664:41"><name pos:start="5664:38" pos:end="5664:41">arg2</name></expr></argument>,<argument pos:start="5664:43" pos:end="5664:46"><expr pos:start="5664:43" pos:end="5664:46"><name pos:start="5664:43" pos:end="5664:46">arg3</name></expr></argument>,<argument pos:start="5664:48" pos:end="5664:51"><expr pos:start="5664:48" pos:end="5664:51"><name pos:start="5664:48" pos:end="5664:51">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="5668:9" pos:end="5673:0">break;</break>

<cpp:endif pos:start="5670:1" pos:end="5670:6">#<cpp:directive pos:start="5670:2" pos:end="5670:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="5672:1" pos:end="5672:23">#<cpp:directive pos:start="5672:2" pos:end="5672:6">ifdef</cpp:directive> <name pos:start="5672:8" pos:end="5672:23">TARGET_NR_splice</name></cpp:ifdef>

    <case pos:start="5674:5" pos:end="5674:26">case <expr pos:start="5674:10" pos:end="5674:25"><name pos:start="5674:10" pos:end="5674:25">TARGET_NR_splice</name></expr>:</case>

        <block pos:start="5676:9" pos:end="5700:9">{<block_content pos:start="5678:13" pos:end="5698:81">

            <decl_stmt pos:start="5678:13" pos:end="5678:37"><decl pos:start="5678:13" pos:end="5678:26"><type pos:start="5678:13" pos:end="5678:18"><name pos:start="5678:13" pos:end="5678:18">loff_t</name></type> <name pos:start="5678:20" pos:end="5678:26">loff_in</name></decl>, <decl pos:start="5678:29" pos:end="5678:36"><type ref="prev" pos:start="5678:13" pos:end="5678:18"/><name pos:start="5678:29" pos:end="5678:36">loff_out</name></decl>;</decl_stmt>

            <decl_stmt pos:start="5680:13" pos:end="5680:55"><decl pos:start="5680:13" pos:end="5680:35"><type pos:start="5680:13" pos:end="5680:20"><name pos:start="5680:13" pos:end="5680:18">loff_t</name> <modifier pos:start="5680:20" pos:end="5680:20">*</modifier></type><name pos:start="5680:21" pos:end="5680:28">ploff_in</name> <init pos:start="5680:30" pos:end="5680:35">= <expr pos:start="5680:32" pos:end="5680:35"><name pos:start="5680:32" pos:end="5680:35">NULL</name></expr></init></decl>, <decl pos:start="5680:38" pos:end="5680:54"><type ref="prev" pos:start="5680:13" pos:end="5680:20"><modifier pos:start="5680:38" pos:end="5680:38">*</modifier></type><name pos:start="5680:39" pos:end="5680:47">ploff_out</name> <init pos:start="5680:49" pos:end="5680:54">= <expr pos:start="5680:51" pos:end="5680:54"><name pos:start="5680:51" pos:end="5680:54">NULL</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="5682:13" pos:end="5688:13"><if pos:start="5682:13" pos:end="5688:13">if<condition pos:start="5682:15" pos:end="5682:20">(<expr pos:start="5682:16" pos:end="5682:19"><name pos:start="5682:16" pos:end="5682:19">arg2</name></expr>)</condition> <block pos:start="5682:22" pos:end="5688:13">{<block_content pos:start="5684:17" pos:end="5686:36">

                <expr_stmt pos:start="5684:17" pos:end="5684:44"><expr pos:start="5684:17" pos:end="5684:43"><call pos:start="5684:17" pos:end="5684:43"><name pos:start="5684:17" pos:end="5684:28">get_user_u64</name><argument_list pos:start="5684:29" pos:end="5684:43">(<argument pos:start="5684:30" pos:end="5684:36"><expr pos:start="5684:30" pos:end="5684:36"><name pos:start="5684:30" pos:end="5684:36">loff_in</name></expr></argument>, <argument pos:start="5684:39" pos:end="5684:42"><expr pos:start="5684:39" pos:end="5684:42"><name pos:start="5684:39" pos:end="5684:42">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5686:17" pos:end="5686:36"><expr pos:start="5686:17" pos:end="5686:35"><name pos:start="5686:17" pos:end="5686:24">ploff_in</name> <operator pos:start="5686:26" pos:end="5686:26">=</operator> <operator pos:start="5686:28" pos:end="5686:28">&amp;</operator><name pos:start="5686:29" pos:end="5686:35">loff_in</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="5690:13" pos:end="5696:13"><if pos:start="5690:13" pos:end="5696:13">if<condition pos:start="5690:15" pos:end="5690:20">(<expr pos:start="5690:16" pos:end="5690:19"><name pos:start="5690:16" pos:end="5690:19">arg4</name></expr>)</condition> <block pos:start="5690:22" pos:end="5696:13">{<block_content pos:start="5692:17" pos:end="5694:38">

                <expr_stmt pos:start="5692:17" pos:end="5692:45"><expr pos:start="5692:17" pos:end="5692:44"><call pos:start="5692:17" pos:end="5692:44"><name pos:start="5692:17" pos:end="5692:28">get_user_u64</name><argument_list pos:start="5692:29" pos:end="5692:44">(<argument pos:start="5692:30" pos:end="5692:37"><expr pos:start="5692:30" pos:end="5692:37"><name pos:start="5692:30" pos:end="5692:37">loff_out</name></expr></argument>, <argument pos:start="5692:40" pos:end="5692:43"><expr pos:start="5692:40" pos:end="5692:43"><name pos:start="5692:40" pos:end="5692:43">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="5694:17" pos:end="5694:38"><expr pos:start="5694:17" pos:end="5694:37"><name pos:start="5694:17" pos:end="5694:25">ploff_out</name> <operator pos:start="5694:27" pos:end="5694:27">=</operator> <operator pos:start="5694:29" pos:end="5694:29">&amp;</operator><name pos:start="5694:30" pos:end="5694:37">loff_out</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="5698:13" pos:end="5698:81"><expr pos:start="5698:13" pos:end="5698:80"><name pos:start="5698:13" pos:end="5698:15">ret</name> <operator pos:start="5698:17" pos:end="5698:17">=</operator> <call pos:start="5698:19" pos:end="5698:80"><name pos:start="5698:19" pos:end="5698:27">get_errno</name><argument_list pos:start="5698:28" pos:end="5698:80">(<argument pos:start="5698:29" pos:end="5698:79"><expr pos:start="5698:29" pos:end="5698:79"><call pos:start="5698:29" pos:end="5698:79"><name pos:start="5698:29" pos:end="5698:34">splice</name><argument_list pos:start="5698:35" pos:end="5698:79">(<argument pos:start="5698:36" pos:end="5698:39"><expr pos:start="5698:36" pos:end="5698:39"><name pos:start="5698:36" pos:end="5698:39">arg1</name></expr></argument>, <argument pos:start="5698:42" pos:end="5698:49"><expr pos:start="5698:42" pos:end="5698:49"><name pos:start="5698:42" pos:end="5698:49">ploff_in</name></expr></argument>, <argument pos:start="5698:52" pos:end="5698:55"><expr pos:start="5698:52" pos:end="5698:55"><name pos:start="5698:52" pos:end="5698:55">arg3</name></expr></argument>, <argument pos:start="5698:58" pos:end="5698:66"><expr pos:start="5698:58" pos:end="5698:66"><name pos:start="5698:58" pos:end="5698:66">ploff_out</name></expr></argument>, <argument pos:start="5698:69" pos:end="5698:72"><expr pos:start="5698:69" pos:end="5698:72"><name pos:start="5698:69" pos:end="5698:72">arg5</name></expr></argument>, <argument pos:start="5698:75" pos:end="5698:78"><expr pos:start="5698:75" pos:end="5698:78"><name pos:start="5698:75" pos:end="5698:78">arg6</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="5702:9" pos:end="5707:0">break;</break>

<cpp:endif pos:start="5704:1" pos:end="5704:6">#<cpp:directive pos:start="5704:2" pos:end="5704:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="5706:1" pos:end="5706:25">#<cpp:directive pos:start="5706:2" pos:end="5706:6">ifdef</cpp:directive> <name pos:start="5706:8" pos:end="5706:25">TARGET_NR_vmsplice</name></cpp:ifdef>

	<case pos:start="5708:9" pos:end="5708:32">case <expr pos:start="5708:14" pos:end="5708:31"><name pos:start="5708:14" pos:end="5708:31">TARGET_NR_vmsplice</name></expr>:</case>

        <block pos:start="5710:9" pos:end="5728:9">{<block_content pos:start="5712:13" pos:end="5726:46">

            <decl_stmt pos:start="5712:13" pos:end="5712:29"><decl pos:start="5712:13" pos:end="5712:28"><type pos:start="5712:13" pos:end="5712:15"><name pos:start="5712:13" pos:end="5712:15">int</name></type> <name pos:start="5712:17" pos:end="5712:21">count</name> <init pos:start="5712:23" pos:end="5712:28">= <expr pos:start="5712:25" pos:end="5712:28"><name pos:start="5712:25" pos:end="5712:28">arg3</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="5714:13" pos:end="5714:30"><decl pos:start="5714:13" pos:end="5714:29"><type pos:start="5714:13" pos:end="5714:26"><name pos:start="5714:13" pos:end="5714:24"><name pos:start="5714:13" pos:end="5714:18">struct</name> <name pos:start="5714:20" pos:end="5714:24">iovec</name></name> <modifier pos:start="5714:26" pos:end="5714:26">*</modifier></type><name pos:start="5714:27" pos:end="5714:29">vec</name></decl>;</decl_stmt>



            <expr_stmt pos:start="5718:13" pos:end="5718:55"><expr pos:start="5718:13" pos:end="5718:54"><name pos:start="5718:13" pos:end="5718:15">vec</name> <operator pos:start="5718:17" pos:end="5718:17">=</operator> <call pos:start="5718:19" pos:end="5718:54"><name pos:start="5718:19" pos:end="5718:24">alloca</name><argument_list pos:start="5718:25" pos:end="5718:54">(<argument pos:start="5718:26" pos:end="5718:53"><expr pos:start="5718:26" pos:end="5718:53"><name pos:start="5718:26" pos:end="5718:30">count</name> <operator pos:start="5718:32" pos:end="5718:32">*</operator> <sizeof pos:start="5718:34" pos:end="5718:53">sizeof<argument_list pos:start="5718:40" pos:end="5718:53">(<argument pos:start="5718:41" pos:end="5718:52"><expr pos:start="5718:41" pos:end="5718:52">struct <name pos:start="5718:48" pos:end="5718:52">iovec</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="5720:13" pos:end="5722:28"><if pos:start="5720:13" pos:end="5722:28">if <condition pos:start="5720:16" pos:end="5720:65">(<expr pos:start="5720:17" pos:end="5720:64"><call pos:start="5720:17" pos:end="5720:60"><name pos:start="5720:17" pos:end="5720:26">lock_iovec</name><argument_list pos:start="5720:27" pos:end="5720:60">(<argument pos:start="5720:28" pos:end="5720:38"><expr pos:start="5720:28" pos:end="5720:38"><name pos:start="5720:28" pos:end="5720:38">VERIFY_READ</name></expr></argument>, <argument pos:start="5720:41" pos:end="5720:43"><expr pos:start="5720:41" pos:end="5720:43"><name pos:start="5720:41" pos:end="5720:43">vec</name></expr></argument>, <argument pos:start="5720:46" pos:end="5720:49"><expr pos:start="5720:46" pos:end="5720:49"><name pos:start="5720:46" pos:end="5720:49">arg2</name></expr></argument>, <argument pos:start="5720:52" pos:end="5720:56"><expr pos:start="5720:52" pos:end="5720:56"><name pos:start="5720:52" pos:end="5720:56">count</name></expr></argument>, <argument pos:start="5720:59" pos:end="5720:59"><expr pos:start="5720:59" pos:end="5720:59"><literal type="number" pos:start="5720:59" pos:end="5720:59">1</literal></expr></argument>)</argument_list></call> <operator pos:start="5720:62" pos:end="5720:62">&lt;</operator> <literal type="number" pos:start="5720:64" pos:end="5720:64">0</literal></expr>)</condition><block type="pseudo" pos:start="5722:17" pos:end="5722:28"><block_content pos:start="5722:17" pos:end="5722:28">

                <goto pos:start="5722:17" pos:end="5722:28">goto <name pos:start="5722:22" pos:end="5722:27">efault</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="5724:13" pos:end="5724:62"><expr pos:start="5724:13" pos:end="5724:61"><name pos:start="5724:13" pos:end="5724:15">ret</name> <operator pos:start="5724:17" pos:end="5724:17">=</operator> <call pos:start="5724:19" pos:end="5724:61"><name pos:start="5724:19" pos:end="5724:27">get_errno</name><argument_list pos:start="5724:28" pos:end="5724:61">(<argument pos:start="5724:29" pos:end="5724:60"><expr pos:start="5724:29" pos:end="5724:60"><call pos:start="5724:29" pos:end="5724:60"><name pos:start="5724:29" pos:end="5724:36">vmsplice</name><argument_list pos:start="5724:37" pos:end="5724:60">(<argument pos:start="5724:38" pos:end="5724:41"><expr pos:start="5724:38" pos:end="5724:41"><name pos:start="5724:38" pos:end="5724:41">arg1</name></expr></argument>, <argument pos:start="5724:44" pos:end="5724:46"><expr pos:start="5724:44" pos:end="5724:46"><name pos:start="5724:44" pos:end="5724:46">vec</name></expr></argument>, <argument pos:start="5724:49" pos:end="5724:53"><expr pos:start="5724:49" pos:end="5724:53"><name pos:start="5724:49" pos:end="5724:53">count</name></expr></argument>, <argument pos:start="5724:56" pos:end="5724:59"><expr pos:start="5724:56" pos:end="5724:59"><name pos:start="5724:56" pos:end="5724:59">arg4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="5726:13" pos:end="5726:46"><expr pos:start="5726:13" pos:end="5726:45"><call pos:start="5726:13" pos:end="5726:45"><name pos:start="5726:13" pos:end="5726:24">unlock_iovec</name><argument_list pos:start="5726:25" pos:end="5726:45">(<argument pos:start="5726:26" pos:end="5726:28"><expr pos:start="5726:26" pos:end="5726:28"><name pos:start="5726:26" pos:end="5726:28">vec</name></expr></argument>, <argument pos:start="5726:31" pos:end="5726:34"><expr pos:start="5726:31" pos:end="5726:34"><name pos:start="5726:31" pos:end="5726:34">arg2</name></expr></argument>, <argument pos:start="5726:37" pos:end="5726:41"><expr pos:start="5726:37" pos:end="5726:41"><name pos:start="5726:37" pos:end="5726:41">count</name></expr></argument>, <argument pos:start="5726:44" pos:end="5726:44"><expr pos:start="5726:44" pos:end="5726:44"><literal type="number" pos:start="5726:44" pos:end="5726:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="5730:9" pos:end="5739:0">break;</break>

<cpp:endif pos:start="5732:1" pos:end="5732:6">#<cpp:directive pos:start="5732:2" pos:end="5732:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="5734:1" pos:end="5734:6">#<cpp:directive pos:start="5734:2" pos:end="5734:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="5734:8" pos:end="5734:26">/* CONFIG_SPLICE */</comment>

<cpp:ifdef pos:start="5736:1" pos:end="5736:21">#<cpp:directive pos:start="5736:2" pos:end="5736:6">ifdef</cpp:directive> <name pos:start="5736:8" pos:end="5736:21">CONFIG_EVENTFD</name></cpp:ifdef>

<cpp:if pos:start="5738:1" pos:end="5738:30">#<cpp:directive pos:start="5738:2" pos:end="5738:3">if</cpp:directive> <expr pos:start="5738:5" pos:end="5738:30"><call pos:start="5738:5" pos:end="5738:30"><name pos:start="5738:5" pos:end="5738:11">defined</name><argument_list pos:start="5738:12" pos:end="5738:30">(<argument pos:start="5738:13" pos:end="5738:29"><expr pos:start="5738:13" pos:end="5738:29"><name pos:start="5738:13" pos:end="5738:29">TARGET_NR_eventfd</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="5740:5" pos:end="5740:27">case <expr pos:start="5740:10" pos:end="5740:26"><name pos:start="5740:10" pos:end="5740:26">TARGET_NR_eventfd</name></expr>:</case>

        <expr_stmt pos:start="5742:9" pos:end="5742:42"><expr pos:start="5742:9" pos:end="5742:41"><name pos:start="5742:9" pos:end="5742:11">ret</name> <operator pos:start="5742:13" pos:end="5742:13">=</operator> <call pos:start="5742:15" pos:end="5742:41"><name pos:start="5742:15" pos:end="5742:23">get_errno</name><argument_list pos:start="5742:24" pos:end="5742:41">(<argument pos:start="5742:25" pos:end="5742:40"><expr pos:start="5742:25" pos:end="5742:40"><call pos:start="5742:25" pos:end="5742:40"><name pos:start="5742:25" pos:end="5742:31">eventfd</name><argument_list pos:start="5742:32" pos:end="5742:40">(<argument pos:start="5742:33" pos:end="5742:36"><expr pos:start="5742:33" pos:end="5742:36"><name pos:start="5742:33" pos:end="5742:36">arg1</name></expr></argument>, <argument pos:start="5742:39" pos:end="5742:39"><expr pos:start="5742:39" pos:end="5742:39"><literal type="number" pos:start="5742:39" pos:end="5742:39">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="5744:9" pos:end="5749:0">break;</break>

<cpp:endif pos:start="5746:1" pos:end="5746:6">#<cpp:directive pos:start="5746:2" pos:end="5746:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="5748:1" pos:end="5748:31">#<cpp:directive pos:start="5748:2" pos:end="5748:3">if</cpp:directive> <expr pos:start="5748:5" pos:end="5748:31"><call pos:start="5748:5" pos:end="5748:31"><name pos:start="5748:5" pos:end="5748:11">defined</name><argument_list pos:start="5748:12" pos:end="5748:31">(<argument pos:start="5748:13" pos:end="5748:30"><expr pos:start="5748:13" pos:end="5748:30"><name pos:start="5748:13" pos:end="5748:30">TARGET_NR_eventfd2</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="5750:5" pos:end="5750:28">case <expr pos:start="5750:10" pos:end="5750:27"><name pos:start="5750:10" pos:end="5750:27">TARGET_NR_eventfd2</name></expr>:</case>

        <expr_stmt pos:start="5752:9" pos:end="5752:45"><expr pos:start="5752:9" pos:end="5752:44"><name pos:start="5752:9" pos:end="5752:11">ret</name> <operator pos:start="5752:13" pos:end="5752:13">=</operator> <call pos:start="5752:15" pos:end="5752:44"><name pos:start="5752:15" pos:end="5752:23">get_errno</name><argument_list pos:start="5752:24" pos:end="5752:44">(<argument pos:start="5752:25" pos:end="5752:43"><expr pos:start="5752:25" pos:end="5752:43"><call pos:start="5752:25" pos:end="5752:43"><name pos:start="5752:25" pos:end="5752:31">eventfd</name><argument_list pos:start="5752:32" pos:end="5752:43">(<argument pos:start="5752:33" pos:end="5752:36"><expr pos:start="5752:33" pos:end="5752:36"><name pos:start="5752:33" pos:end="5752:36">arg1</name></expr></argument>, <argument pos:start="5752:39" pos:end="5752:42"><expr pos:start="5752:39" pos:end="5752:42"><name pos:start="5752:39" pos:end="5752:42">arg2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="5754:9" pos:end="5759:0">break;</break>

<cpp:endif pos:start="5756:1" pos:end="5756:6">#<cpp:directive pos:start="5756:2" pos:end="5756:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="5758:1" pos:end="5758:6">#<cpp:directive pos:start="5758:2" pos:end="5758:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="5758:8" pos:end="5758:28">/* CONFIG_EVENTFD  */</comment>

    <default pos:start="5760:5" pos:end="5760:12">default:</default>

    <label pos:start="5762:5" pos:end="5762:18"><name pos:start="5762:5" pos:end="5762:17">unimplemented</name>:</label>

        <expr_stmt pos:start="5764:9" pos:end="5767:0"><expr pos:start="5764:9" pos:end="5764:56"><call pos:start="5764:9" pos:end="5764:56"><name pos:start="5764:9" pos:end="5764:16">gemu_log</name><argument_list pos:start="5764:17" pos:end="5764:56">(<argument pos:start="5764:18" pos:end="5764:50"><expr pos:start="5764:18" pos:end="5764:50"><literal type="string" pos:start="5764:18" pos:end="5764:50">"qemu: Unsupported syscall: %d\n"</literal></expr></argument>, <argument pos:start="5764:53" pos:end="5764:55"><expr pos:start="5764:53" pos:end="5764:55"><name pos:start="5764:53" pos:end="5764:55">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="5766:1" pos:end="5766:143">#<cpp:directive pos:start="5766:2" pos:end="5766:3">if</cpp:directive> <expr pos:start="5766:5" pos:end="5766:143"><call pos:start="5766:5" pos:end="5766:31"><name pos:start="5766:5" pos:end="5766:11">defined</name><argument_list pos:start="5766:12" pos:end="5766:31">(<argument pos:start="5766:13" pos:end="5766:30"><expr pos:start="5766:13" pos:end="5766:30"><name pos:start="5766:13" pos:end="5766:30">TARGET_NR_setxattr</name></expr></argument>)</argument_list></call> <operator pos:start="5766:33" pos:end="5766:34">||</operator> <call pos:start="5766:36" pos:end="5766:69"><name pos:start="5766:36" pos:end="5766:42">defined</name><argument_list pos:start="5766:43" pos:end="5766:69">(<argument pos:start="5766:44" pos:end="5766:68"><expr pos:start="5766:44" pos:end="5766:68"><name pos:start="5766:44" pos:end="5766:68">TARGET_NR_get_thread_area</name></expr></argument>)</argument_list></call> <operator pos:start="5766:71" pos:end="5766:72">||</operator> <call pos:start="5766:74" pos:end="5766:105"><name pos:start="5766:74" pos:end="5766:80">defined</name><argument_list pos:start="5766:81" pos:end="5766:105">(<argument pos:start="5766:82" pos:end="5766:104"><expr pos:start="5766:82" pos:end="5766:104"><name pos:start="5766:82" pos:end="5766:104">TARGET_NR_getdomainname</name></expr></argument>)</argument_list></call> <operator pos:start="5766:107" pos:end="5766:108">||</operator> <call pos:start="5766:110" pos:end="5766:143"><name pos:start="5766:110" pos:end="5766:116">defined</name><argument_list pos:start="5766:117" pos:end="5766:143">(<argument pos:start="5766:118" pos:end="5766:142"><expr pos:start="5766:118" pos:end="5766:142"><name pos:start="5766:118" pos:end="5766:142">TARGET_NR_set_robust_list</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <label pos:start="5768:5" pos:end="5771:0"><name pos:start="5768:5" pos:end="5768:24">unimplemented_nowarn</name>:</label>

<cpp:endif pos:start="5770:1" pos:end="5770:6">#<cpp:directive pos:start="5770:2" pos:end="5770:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="5772:9" pos:end="5772:29"><expr pos:start="5772:9" pos:end="5772:28"><name pos:start="5772:9" pos:end="5772:11">ret</name> <operator pos:start="5772:13" pos:end="5772:13">=</operator> <operator pos:start="5772:15" pos:end="5772:15">-</operator><name pos:start="5772:16" pos:end="5772:28">TARGET_ENOSYS</name></expr>;</expr_stmt>

        <break pos:start="5774:9" pos:end="5774:14">break;</break>

    </block_content>}</block></switch>

<label pos:start="5778:1" pos:end="5781:0"><name pos:start="5778:1" pos:end="5778:4">fail</name>:</label>

<cpp:ifdef pos:start="5780:1" pos:end="5780:12">#<cpp:directive pos:start="5780:2" pos:end="5780:6">ifdef</cpp:directive> <name pos:start="5780:8" pos:end="5780:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="5782:5" pos:end="5785:0"><expr pos:start="5782:5" pos:end="5782:47"><call pos:start="5782:5" pos:end="5782:47"><name pos:start="5782:5" pos:end="5782:12">gemu_log</name><argument_list pos:start="5782:13" pos:end="5782:47">(<argument pos:start="5782:14" pos:end="5782:41"><expr pos:start="5782:14" pos:end="5782:41"><literal type="string" pos:start="5782:14" pos:end="5782:18">" = "</literal> <name pos:start="5782:20" pos:end="5782:36">TARGET_ABI_FMT_ld</name> <literal type="string" pos:start="5782:38" pos:end="5782:41">"\n"</literal></expr></argument>, <argument pos:start="5782:44" pos:end="5782:46"><expr pos:start="5782:44" pos:end="5782:46"><name pos:start="5782:44" pos:end="5782:46">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="5784:1" pos:end="5784:6">#<cpp:directive pos:start="5784:2" pos:end="5784:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="5786:5" pos:end="5788:36"><if pos:start="5786:5" pos:end="5788:36">if<condition pos:start="5786:7" pos:end="5786:17">(<expr pos:start="5786:8" pos:end="5786:16"><name pos:start="5786:8" pos:end="5786:16">do_strace</name></expr>)</condition><block type="pseudo" pos:start="5788:9" pos:end="5788:36"><block_content pos:start="5788:9" pos:end="5788:36">

        <expr_stmt pos:start="5788:9" pos:end="5788:36"><expr pos:start="5788:9" pos:end="5788:35"><call pos:start="5788:9" pos:end="5788:35"><name pos:start="5788:9" pos:end="5788:25">print_syscall_ret</name><argument_list pos:start="5788:26" pos:end="5788:35">(<argument pos:start="5788:27" pos:end="5788:29"><expr pos:start="5788:27" pos:end="5788:29"><name pos:start="5788:27" pos:end="5788:29">num</name></expr></argument>, <argument pos:start="5788:32" pos:end="5788:34"><expr pos:start="5788:32" pos:end="5788:34"><name pos:start="5788:32" pos:end="5788:34">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="5790:5" pos:end="5790:15">return <expr pos:start="5790:12" pos:end="5790:14"><name pos:start="5790:12" pos:end="5790:14">ret</name></expr>;</return>

<label pos:start="5792:1" pos:end="5792:7"><name pos:start="5792:1" pos:end="5792:6">efault</name>:</label>

    <expr_stmt pos:start="5794:5" pos:end="5794:25"><expr pos:start="5794:5" pos:end="5794:24"><name pos:start="5794:5" pos:end="5794:7">ret</name> <operator pos:start="5794:9" pos:end="5794:9">=</operator> <operator pos:start="5794:11" pos:end="5794:11">-</operator><name pos:start="5794:12" pos:end="5794:24">TARGET_EFAULT</name></expr>;</expr_stmt>

    <goto pos:start="5796:5" pos:end="5796:14">goto <name pos:start="5796:10" pos:end="5796:13">fail</name>;</goto>

</block_content>}</block></function></unit>
