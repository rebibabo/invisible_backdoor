<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22972.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:42">apply_dependent_coupling_fixed</name><parameter_list pos:start="1:43" pos:end="5:68">(<parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:53">AACContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">ac</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:65"><decl pos:start="3:38" pos:end="3:65"><type pos:start="3:38" pos:end="3:65"><name pos:start="3:38" pos:end="3:57">SingleChannelElement</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:65">target</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:56"><decl pos:start="5:38" pos:end="5:56"><type pos:start="5:38" pos:end="5:56"><name pos:start="5:38" pos:end="5:51">ChannelElement</name> <modifier pos:start="5:53" pos:end="5:53">*</modifier></type><name pos:start="5:54" pos:end="5:56">cce</name></decl></parameter>, <parameter pos:start="5:59" pos:end="5:67"><decl pos:start="5:59" pos:end="5:67"><type pos:start="5:59" pos:end="5:67"><name pos:start="5:59" pos:end="5:61">int</name></type> <name pos:start="5:63" pos:end="5:67">index</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="115:1">{<block_content pos:start="9:5" pos:end="113:5">

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:27">IndividualChannelStream</name> <modifier pos:start="9:29" pos:end="9:29">*</modifier></type><name pos:start="9:30" pos:end="9:32">ics</name> <init pos:start="9:34" pos:end="9:50">= <expr pos:start="9:36" pos:end="9:50"><operator pos:start="9:36" pos:end="9:36">&amp;</operator><name pos:start="9:37" pos:end="9:46"><name pos:start="9:37" pos:end="9:39">cce</name><operator pos:start="9:40" pos:end="9:41">-&gt;</operator><name pos:start="9:42" pos:end="9:43">ch</name><index pos:start="9:44" pos:end="9:46">[<expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">0</literal></expr>]</index></name><operator pos:start="9:47" pos:end="9:47">.</operator><name pos:start="9:48" pos:end="9:50">ics</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:20"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">uint16_t</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:27">offsets</name> <init pos:start="11:29" pos:end="11:45">= <expr pos:start="11:31" pos:end="11:45"><name pos:start="11:31" pos:end="11:45"><name pos:start="11:31" pos:end="11:33">ics</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:45">swb_offset</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:7">int</name> <modifier pos:start="13:9" pos:end="13:9">*</modifier></type><name pos:start="13:10" pos:end="13:13">dest</name> <init pos:start="13:15" pos:end="13:30">= <expr pos:start="13:17" pos:end="13:30"><name pos:start="13:17" pos:end="13:30"><name pos:start="13:17" pos:end="13:22">target</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:30">coeffs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:38"><type pos:start="15:5" pos:end="15:15"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:18">src</name> <init pos:start="15:20" pos:end="15:38">= <expr pos:start="15:22" pos:end="15:38"><name pos:start="15:22" pos:end="15:31"><name pos:start="15:22" pos:end="15:24">cce</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:28">ch</name><index pos:start="15:29" pos:end="15:31">[<expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">0</literal></expr>]</index></name><operator pos:start="15:32" pos:end="15:32">.</operator><name pos:start="15:33" pos:end="15:38">coeffs</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">g</name></decl>, <decl pos:start="17:12" pos:end="17:12"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:12">i</name></decl>, <decl pos:start="17:15" pos:end="17:19"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:19">group</name></decl>, <decl pos:start="17:22" pos:end="17:22"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:22" pos:end="17:22">k</name></decl>, <decl pos:start="17:25" pos:end="17:31"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:25" pos:end="17:27">idx</name> <init pos:start="17:29" pos:end="17:31">= <expr pos:start="17:31" pos:end="17:31"><literal type="number" pos:start="17:31" pos:end="17:31">0</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:50">(<expr pos:start="19:9" pos:end="19:49"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:10">ac</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:14">oc</name><index pos:start="19:15" pos:end="19:17">[<expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">1</literal></expr>]</index></name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:34"><name pos:start="19:19" pos:end="19:22">m4ac</name><operator pos:start="19:23" pos:end="19:23">.</operator><name pos:start="19:24" pos:end="19:34">object_type</name></name> <operator pos:start="19:36" pos:end="19:37">==</operator> <name pos:start="19:39" pos:end="19:49">AOT_AAC_LTP</name></expr>)</condition> <block pos:start="19:52" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:15">

        <expr_stmt pos:start="21:9" pos:end="23:74"><expr pos:start="21:9" pos:end="23:73"><call pos:start="21:9" pos:end="23:73"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="23:73">(<argument pos:start="21:16" pos:end="21:24"><expr pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:24"><name pos:start="21:16" pos:end="21:17">ac</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:24">avctx</name></name></expr></argument>, <argument pos:start="21:27" pos:end="21:38"><expr pos:start="21:27" pos:end="21:38"><name pos:start="21:27" pos:end="21:38">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="23:16" pos:end="23:72"><expr pos:start="23:16" pos:end="23:72"><literal type="string" pos:start="23:16" pos:end="23:72">"Dependent coupling is not supported together with LTP\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="29:5" pos:end="113:5">for <control pos:start="29:9" pos:end="29:48">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">g</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:43"><expr pos:start="29:17" pos:end="29:42"><name pos:start="29:17" pos:end="29:17">g</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:42"><name pos:start="29:21" pos:end="29:23">ics</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:42">num_window_groups</name></name></expr>;</condition> <incr pos:start="29:45" pos:end="29:47"><expr pos:start="29:45" pos:end="29:47"><name pos:start="29:45" pos:end="29:45">g</name><operator pos:start="29:46" pos:end="29:47">++</operator></expr></incr>)</control> <block pos:start="29:50" pos:end="113:5">{<block_content pos:start="31:9" pos:end="111:40">

        <for pos:start="31:9" pos:end="107:9">for <control pos:start="31:13" pos:end="31:49">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">i</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:37"><expr pos:start="31:21" pos:end="31:36"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <name pos:start="31:25" pos:end="31:36"><name pos:start="31:25" pos:end="31:27">ics</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:36">max_sfb</name></name></expr>;</condition> <incr pos:start="31:39" pos:end="31:48"><expr pos:start="31:39" pos:end="31:41"><name pos:start="31:39" pos:end="31:39">i</name><operator pos:start="31:40" pos:end="31:41">++</operator></expr><operator pos:start="31:42" pos:end="31:42">,</operator> <expr pos:start="31:44" pos:end="31:48"><name pos:start="31:44" pos:end="31:46">idx</name><operator pos:start="31:47" pos:end="31:48">++</operator></expr></incr>)</control> <block pos:start="31:51" pos:end="107:9">{<block_content pos:start="33:13" pos:end="105:13">

            <if_stmt pos:start="33:13" pos:end="105:13"><if pos:start="33:13" pos:end="105:13">if <condition pos:start="33:16" pos:end="33:53">(<expr pos:start="33:17" pos:end="33:52"><name pos:start="33:17" pos:end="33:26"><name pos:start="33:17" pos:end="33:19">cce</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:23">ch</name><index pos:start="33:24" pos:end="33:26">[<expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">0</literal></expr>]</index></name><operator pos:start="33:27" pos:end="33:27">.</operator><name pos:start="33:28" pos:end="33:41"><name pos:start="33:28" pos:end="33:36">band_type</name><index pos:start="33:37" pos:end="33:41">[<expr pos:start="33:38" pos:end="33:40"><name pos:start="33:38" pos:end="33:40">idx</name></expr>]</index></name> <operator pos:start="33:43" pos:end="33:44">!=</operator> <name pos:start="33:46" pos:end="33:52">ZERO_BT</name></expr>)</condition> <block pos:start="33:55" pos:end="105:13">{<block_content pos:start="35:17" pos:end="103:17">

                <decl_stmt pos:start="35:17" pos:end="35:60"><decl pos:start="35:17" pos:end="35:59"><type pos:start="35:17" pos:end="35:25"><specifier pos:start="35:17" pos:end="35:21">const</specifier> <name pos:start="35:23" pos:end="35:25">int</name></type> <name pos:start="35:27" pos:end="35:30">gain</name> <init pos:start="35:32" pos:end="35:59">= <expr pos:start="35:34" pos:end="35:59"><name pos:start="35:34" pos:end="35:59"><name pos:start="35:34" pos:end="35:36">cce</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:42">coup</name><operator pos:start="35:43" pos:end="35:43">.</operator><name pos:start="35:44" pos:end="35:47">gain</name><index pos:start="35:48" pos:end="35:54">[<expr pos:start="35:49" pos:end="35:53"><name pos:start="35:49" pos:end="35:53">index</name></expr>]</index><index pos:start="35:55" pos:end="35:59">[<expr pos:start="35:56" pos:end="35:58"><name pos:start="35:56" pos:end="35:58">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="37:17" pos:end="37:41"><decl pos:start="37:17" pos:end="37:25"><type pos:start="37:17" pos:end="37:19"><name pos:start="37:17" pos:end="37:19">int</name></type> <name pos:start="37:21" pos:end="37:25">shift</name></decl>, <decl pos:start="37:28" pos:end="37:32"><type ref="prev" pos:start="37:17" pos:end="37:19"/><name pos:start="37:28" pos:end="37:32">round</name></decl>, <decl pos:start="37:35" pos:end="37:35"><type ref="prev" pos:start="37:17" pos:end="37:19"/><name pos:start="37:35" pos:end="37:35">c</name></decl>, <decl pos:start="37:38" pos:end="37:40"><type ref="prev" pos:start="37:17" pos:end="37:19"/><name pos:start="37:38" pos:end="37:40">tmp</name></decl>;</decl_stmt>



                <if_stmt pos:start="41:17" pos:end="55:17"><if pos:start="41:17" pos:end="47:17">if <condition pos:start="41:20" pos:end="41:29">(<expr pos:start="41:21" pos:end="41:28"><name pos:start="41:21" pos:end="41:24">gain</name> <operator pos:start="41:26" pos:end="41:26">&lt;</operator> <literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr>)</condition> <block pos:start="41:31" pos:end="47:17">{<block_content pos:start="43:21" pos:end="45:46">

                    <expr_stmt pos:start="43:21" pos:end="43:52"><expr pos:start="43:21" pos:end="43:51"><name pos:start="43:21" pos:end="43:21">c</name> <operator pos:start="43:23" pos:end="43:23">=</operator> <operator pos:start="43:25" pos:end="43:25">-</operator><name pos:start="43:26" pos:end="43:51"><name pos:start="43:26" pos:end="43:40">cce_scale_fixed</name><index pos:start="43:41" pos:end="43:51">[<expr pos:start="43:42" pos:end="43:50"><operator pos:start="43:42" pos:end="43:42">-</operator><name pos:start="43:43" pos:end="43:46">gain</name> <operator pos:start="43:48" pos:end="43:48">&amp;</operator> <literal type="number" pos:start="43:50" pos:end="43:50">7</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="45:21" pos:end="45:46"><expr pos:start="45:21" pos:end="45:45"><name pos:start="45:21" pos:end="45:25">shift</name> <operator pos:start="45:27" pos:end="45:27">=</operator> <operator pos:start="45:29" pos:end="45:29">(</operator><operator pos:start="45:30" pos:end="45:30">-</operator><name pos:start="45:31" pos:end="45:34">gain</name><operator pos:start="45:35" pos:end="45:35">-</operator><literal type="number" pos:start="45:36" pos:end="45:39">1024</literal><operator pos:start="45:40" pos:end="45:40">)</operator> <operator pos:start="45:42" pos:end="45:43">&gt;&gt;</operator> <literal type="number" pos:start="45:45" pos:end="45:45">3</literal></expr>;</expr_stmt>

                </block_content>}</block></if>

                <else pos:start="49:17" pos:end="55:17">else <block pos:start="49:22" pos:end="55:17">{<block_content pos:start="51:21" pos:end="53:45">

                    <expr_stmt pos:start="51:21" pos:end="51:50"><expr pos:start="51:21" pos:end="51:49"><name pos:start="51:21" pos:end="51:21">c</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:49"><name pos:start="51:25" pos:end="51:39">cce_scale_fixed</name><index pos:start="51:40" pos:end="51:49">[<expr pos:start="51:41" pos:end="51:48"><name pos:start="51:41" pos:end="51:44">gain</name> <operator pos:start="51:46" pos:end="51:46">&amp;</operator> <literal type="number" pos:start="51:48" pos:end="51:48">7</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="53:21" pos:end="53:45"><expr pos:start="53:21" pos:end="53:44"><name pos:start="53:21" pos:end="53:25">shift</name> <operator pos:start="53:27" pos:end="53:27">=</operator> <operator pos:start="53:29" pos:end="53:29">(</operator><name pos:start="53:30" pos:end="53:33">gain</name><operator pos:start="53:34" pos:end="53:34">-</operator><literal type="number" pos:start="53:35" pos:end="53:38">1024</literal><operator pos:start="53:39" pos:end="53:39">)</operator> <operator pos:start="53:41" pos:end="53:42">&gt;&gt;</operator> <literal type="number" pos:start="53:44" pos:end="53:44">3</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="59:17" pos:end="103:17"><if pos:start="59:17" pos:end="63:17">if <condition pos:start="59:20" pos:end="59:32">(<expr pos:start="59:21" pos:end="59:31"><name pos:start="59:21" pos:end="59:25">shift</name> <operator pos:start="59:27" pos:end="59:27">&lt;</operator> <operator pos:start="59:29" pos:end="59:29">-</operator><literal type="number" pos:start="59:30" pos:end="59:31">31</literal></expr>)</condition> <block pos:start="59:34" pos:end="63:17">{<block_content>

                    <comment type="line" pos:start="61:21" pos:end="61:36">// Nothing to do</comment>

                </block_content>}</block></if> <if type="elseif" pos:start="63:19" pos:end="85:17">else if <condition pos:start="63:27" pos:end="63:37">(<expr pos:start="63:28" pos:end="63:36"><name pos:start="63:28" pos:end="63:32">shift</name> <operator pos:start="63:34" pos:end="63:34">&lt;</operator> <literal type="number" pos:start="63:36" pos:end="63:36">0</literal></expr>)</condition> <block pos:start="63:39" pos:end="85:17">{<block_content pos:start="65:21" pos:end="83:21">

                    <expr_stmt pos:start="65:21" pos:end="65:35"><expr pos:start="65:21" pos:end="65:34"><name pos:start="65:21" pos:end="65:25">shift</name> <operator pos:start="65:27" pos:end="65:27">=</operator> <operator pos:start="65:29" pos:end="65:29">-</operator><name pos:start="65:30" pos:end="65:34">shift</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="67:21" pos:end="67:45"><expr pos:start="67:21" pos:end="67:44"><name pos:start="67:21" pos:end="67:25">round</name> <operator pos:start="67:27" pos:end="67:27">=</operator> <literal type="number" pos:start="67:29" pos:end="67:29">1</literal> <operator pos:start="67:31" pos:end="67:32">&lt;&lt;</operator> <operator pos:start="67:34" pos:end="67:34">(</operator><name pos:start="67:35" pos:end="67:39">shift</name> <operator pos:start="67:41" pos:end="67:41">-</operator> <literal type="number" pos:start="67:43" pos:end="67:43">1</literal><operator pos:start="67:44" pos:end="67:44">)</operator></expr>;</expr_stmt>



                    <for pos:start="71:21" pos:end="83:21">for <control pos:start="71:25" pos:end="71:71">(<init pos:start="71:26" pos:end="71:35"><expr pos:start="71:26" pos:end="71:34"><name pos:start="71:26" pos:end="71:30">group</name> <operator pos:start="71:32" pos:end="71:32">=</operator> <literal type="number" pos:start="71:34" pos:end="71:34">0</literal></expr>;</init> <condition pos:start="71:37" pos:end="71:62"><expr pos:start="71:37" pos:end="71:61"><name pos:start="71:37" pos:end="71:41">group</name> <operator pos:start="71:43" pos:end="71:43">&lt;</operator> <name pos:start="71:45" pos:end="71:61"><name pos:start="71:45" pos:end="71:47">ics</name><operator pos:start="71:48" pos:end="71:49">-&gt;</operator><name pos:start="71:50" pos:end="71:58">group_len</name><index pos:start="71:59" pos:end="71:61">[<expr pos:start="71:60" pos:end="71:60"><name pos:start="71:60" pos:end="71:60">g</name></expr>]</index></name></expr>;</condition> <incr pos:start="71:64" pos:end="71:70"><expr pos:start="71:64" pos:end="71:70"><name pos:start="71:64" pos:end="71:68">group</name><operator pos:start="71:69" pos:end="71:70">++</operator></expr></incr>)</control> <block pos:start="71:73" pos:end="83:21">{<block_content pos:start="73:25" pos:end="81:25">

                        <for pos:start="73:25" pos:end="81:25">for <control pos:start="73:29" pos:end="73:69">(<init pos:start="73:30" pos:end="73:44"><expr pos:start="73:30" pos:end="73:43"><name pos:start="73:30" pos:end="73:30">k</name> <operator pos:start="73:32" pos:end="73:32">=</operator> <name pos:start="73:34" pos:end="73:43"><name pos:start="73:34" pos:end="73:40">offsets</name><index pos:start="73:41" pos:end="73:43">[<expr pos:start="73:42" pos:end="73:42"><name pos:start="73:42" pos:end="73:42">i</name></expr>]</index></name></expr>;</init> <condition pos:start="73:46" pos:end="73:64"><expr pos:start="73:46" pos:end="73:63"><name pos:start="73:46" pos:end="73:46">k</name> <operator pos:start="73:48" pos:end="73:48">&lt;</operator> <name pos:start="73:50" pos:end="73:63"><name pos:start="73:50" pos:end="73:56">offsets</name><index pos:start="73:57" pos:end="73:63">[<expr pos:start="73:58" pos:end="73:62"><name pos:start="73:58" pos:end="73:58">i</name> <operator pos:start="73:60" pos:end="73:60">+</operator> <literal type="number" pos:start="73:62" pos:end="73:62">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="73:66" pos:end="73:68"><expr pos:start="73:66" pos:end="73:68"><name pos:start="73:66" pos:end="73:66">k</name><operator pos:start="73:67" pos:end="73:68">++</operator></expr></incr>)</control> <block pos:start="73:71" pos:end="81:25">{<block_content pos:start="75:29" pos:end="79:76">

                            <expr_stmt pos:start="75:29" pos:end="77:69"><expr pos:start="75:29" pos:end="77:68"><name pos:start="75:29" pos:end="75:31">tmp</name> <operator pos:start="75:33" pos:end="75:33">=</operator> <operator pos:start="75:35" pos:end="75:35">(</operator><name pos:start="75:36" pos:end="75:38">int</name><operator pos:start="75:39" pos:end="75:39">)</operator><operator pos:start="75:40" pos:end="75:40">(</operator><operator pos:start="75:41" pos:end="75:41">(</operator><operator pos:start="75:42" pos:end="75:42">(</operator><name pos:start="75:43" pos:end="75:49">int64_t</name><operator pos:start="75:50" pos:end="75:50">)</operator><name pos:start="75:51" pos:end="75:70"><name pos:start="75:51" pos:end="75:53">src</name><index pos:start="75:54" pos:end="75:70">[<expr pos:start="75:55" pos:end="75:69"><name pos:start="75:55" pos:end="75:59">group</name> <operator pos:start="75:61" pos:end="75:61">*</operator> <literal type="number" pos:start="75:63" pos:end="75:67">128</literal> <operator pos:start="75:67" pos:end="75:67">+</operator> <name pos:start="75:69" pos:end="75:69">k</name></expr>]</index></name> <operator pos:start="75:72" pos:end="75:72">*</operator> <name pos:start="75:74" pos:end="75:74">c</name> <operator pos:start="75:76" pos:end="75:76">+</operator> \

                                       <operator pos:start="77:40" pos:end="77:40">(</operator><name pos:start="77:41" pos:end="77:47">int64_t</name><operator pos:start="77:48" pos:end="77:48">)</operator><literal type="number" pos:start="77:49" pos:end="77:60">0x1000000000</literal><operator pos:start="77:61" pos:end="77:61">)</operator> <operator pos:start="77:63" pos:end="77:64">&gt;&gt;</operator> <literal type="number" pos:start="77:66" pos:end="77:67">37</literal><operator pos:start="77:68" pos:end="77:68">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="79:29" pos:end="79:76"><expr pos:start="79:29" pos:end="79:75"><name pos:start="79:29" pos:end="79:49"><name pos:start="79:29" pos:end="79:32">dest</name><index pos:start="79:33" pos:end="79:49">[<expr pos:start="79:34" pos:end="79:48"><name pos:start="79:34" pos:end="79:38">group</name> <operator pos:start="79:40" pos:end="79:40">*</operator> <literal type="number" pos:start="79:42" pos:end="79:44">128</literal> <operator pos:start="79:46" pos:end="79:46">+</operator> <name pos:start="79:48" pos:end="79:48">k</name></expr>]</index></name> <operator pos:start="79:51" pos:end="79:52">+=</operator> <operator pos:start="79:54" pos:end="79:54">(</operator><name pos:start="79:55" pos:end="79:57">tmp</name> <operator pos:start="79:59" pos:end="79:59">+</operator> <name pos:start="79:61" pos:end="79:65">round</name><operator pos:start="79:66" pos:end="79:66">)</operator> <operator pos:start="79:68" pos:end="79:69">&gt;&gt;</operator> <name pos:start="79:71" pos:end="79:75">shift</name></expr>;</expr_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></for>

                </block_content>}</block></if>

                <else pos:start="87:17" pos:end="103:17">else <block pos:start="87:22" pos:end="103:17">{<block_content pos:start="89:21" pos:end="101:21">

                    <for pos:start="89:21" pos:end="101:21">for <control pos:start="89:25" pos:end="89:71">(<init pos:start="89:26" pos:end="89:35"><expr pos:start="89:26" pos:end="89:34"><name pos:start="89:26" pos:end="89:30">group</name> <operator pos:start="89:32" pos:end="89:32">=</operator> <literal type="number" pos:start="89:34" pos:end="89:34">0</literal></expr>;</init> <condition pos:start="89:37" pos:end="89:62"><expr pos:start="89:37" pos:end="89:61"><name pos:start="89:37" pos:end="89:41">group</name> <operator pos:start="89:43" pos:end="89:43">&lt;</operator> <name pos:start="89:45" pos:end="89:61"><name pos:start="89:45" pos:end="89:47">ics</name><operator pos:start="89:48" pos:end="89:49">-&gt;</operator><name pos:start="89:50" pos:end="89:58">group_len</name><index pos:start="89:59" pos:end="89:61">[<expr pos:start="89:60" pos:end="89:60"><name pos:start="89:60" pos:end="89:60">g</name></expr>]</index></name></expr>;</condition> <incr pos:start="89:64" pos:end="89:70"><expr pos:start="89:64" pos:end="89:70"><name pos:start="89:64" pos:end="89:68">group</name><operator pos:start="89:69" pos:end="89:70">++</operator></expr></incr>)</control> <block pos:start="89:73" pos:end="101:21">{<block_content pos:start="91:25" pos:end="99:25">

                        <for pos:start="91:25" pos:end="99:25">for <control pos:start="91:29" pos:end="91:69">(<init pos:start="91:30" pos:end="91:44"><expr pos:start="91:30" pos:end="91:43"><name pos:start="91:30" pos:end="91:30">k</name> <operator pos:start="91:32" pos:end="91:32">=</operator> <name pos:start="91:34" pos:end="91:43"><name pos:start="91:34" pos:end="91:40">offsets</name><index pos:start="91:41" pos:end="91:43">[<expr pos:start="91:42" pos:end="91:42"><name pos:start="91:42" pos:end="91:42">i</name></expr>]</index></name></expr>;</init> <condition pos:start="91:46" pos:end="91:64"><expr pos:start="91:46" pos:end="91:63"><name pos:start="91:46" pos:end="91:46">k</name> <operator pos:start="91:48" pos:end="91:48">&lt;</operator> <name pos:start="91:50" pos:end="91:63"><name pos:start="91:50" pos:end="91:56">offsets</name><index pos:start="91:57" pos:end="91:63">[<expr pos:start="91:58" pos:end="91:62"><name pos:start="91:58" pos:end="91:58">i</name> <operator pos:start="91:60" pos:end="91:60">+</operator> <literal type="number" pos:start="91:62" pos:end="91:62">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="91:66" pos:end="91:68"><expr pos:start="91:66" pos:end="91:68"><name pos:start="91:66" pos:end="91:66">k</name><operator pos:start="91:67" pos:end="91:68">++</operator></expr></incr>)</control> <block pos:start="91:71" pos:end="99:25">{<block_content pos:start="93:29" pos:end="97:66">

                            <expr_stmt pos:start="93:29" pos:end="95:70"><expr pos:start="93:29" pos:end="95:69"><name pos:start="93:29" pos:end="93:31">tmp</name> <operator pos:start="93:33" pos:end="93:33">=</operator> <operator pos:start="93:35" pos:end="93:35">(</operator><name pos:start="93:36" pos:end="93:38">int</name><operator pos:start="93:39" pos:end="93:39">)</operator><operator pos:start="93:40" pos:end="93:40">(</operator><operator pos:start="93:41" pos:end="93:41">(</operator><operator pos:start="93:42" pos:end="93:42">(</operator><name pos:start="93:43" pos:end="93:49">int64_t</name><operator pos:start="93:50" pos:end="93:50">)</operator><name pos:start="93:51" pos:end="93:70"><name pos:start="93:51" pos:end="93:53">src</name><index pos:start="93:54" pos:end="93:70">[<expr pos:start="93:55" pos:end="93:69"><name pos:start="93:55" pos:end="93:59">group</name> <operator pos:start="93:61" pos:end="93:61">*</operator> <literal type="number" pos:start="93:63" pos:end="93:67">128</literal> <operator pos:start="93:67" pos:end="93:67">+</operator> <name pos:start="93:69" pos:end="93:69">k</name></expr>]</index></name> <operator pos:start="93:72" pos:end="93:72">*</operator> <name pos:start="93:74" pos:end="93:74">c</name> <operator pos:start="93:76" pos:end="93:76">+</operator> \

                                        <operator pos:start="95:41" pos:end="95:41">(</operator><name pos:start="95:42" pos:end="95:48">int64_t</name><operator pos:start="95:49" pos:end="95:49">)</operator><literal type="number" pos:start="95:50" pos:end="95:61">0x1000000000</literal><operator pos:start="95:62" pos:end="95:62">)</operator> <operator pos:start="95:64" pos:end="95:65">&gt;&gt;</operator> <literal type="number" pos:start="95:67" pos:end="95:68">37</literal><operator pos:start="95:69" pos:end="95:69">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="97:29" pos:end="97:66"><expr pos:start="97:29" pos:end="97:65"><name pos:start="97:29" pos:end="97:49"><name pos:start="97:29" pos:end="97:32">dest</name><index pos:start="97:33" pos:end="97:49">[<expr pos:start="97:34" pos:end="97:48"><name pos:start="97:34" pos:end="97:38">group</name> <operator pos:start="97:40" pos:end="97:40">*</operator> <literal type="number" pos:start="97:42" pos:end="97:44">128</literal> <operator pos:start="97:46" pos:end="97:46">+</operator> <name pos:start="97:48" pos:end="97:48">k</name></expr>]</index></name> <operator pos:start="97:51" pos:end="97:52">+=</operator> <name pos:start="97:54" pos:end="97:56">tmp</name> <operator pos:start="97:58" pos:end="97:59">&lt;&lt;</operator> <name pos:start="97:61" pos:end="97:65">shift</name></expr>;</expr_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="109:9" pos:end="109:40"><expr pos:start="109:9" pos:end="109:39"><name pos:start="109:9" pos:end="109:12">dest</name> <operator pos:start="109:14" pos:end="109:15">+=</operator> <name pos:start="109:17" pos:end="109:33"><name pos:start="109:17" pos:end="109:19">ics</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:30">group_len</name><index pos:start="109:31" pos:end="109:33">[<expr pos:start="109:32" pos:end="109:32"><name pos:start="109:32" pos:end="109:32">g</name></expr>]</index></name> <operator pos:start="109:35" pos:end="109:35">*</operator> <literal type="number" pos:start="109:37" pos:end="109:39">128</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:40"><expr pos:start="111:9" pos:end="111:39"><name pos:start="111:9" pos:end="111:11">src</name>  <operator pos:start="111:14" pos:end="111:15">+=</operator> <name pos:start="111:17" pos:end="111:33"><name pos:start="111:17" pos:end="111:19">ics</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:30">group_len</name><index pos:start="111:31" pos:end="111:33">[<expr pos:start="111:32" pos:end="111:32"><name pos:start="111:32" pos:end="111:32">g</name></expr>]</index></name> <operator pos:start="111:35" pos:end="111:35">*</operator> <literal type="number" pos:start="111:37" pos:end="111:39">128</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
