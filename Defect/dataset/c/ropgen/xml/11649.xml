<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11649.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:68"><name pos:start="1:1" pos:end="1:18">make_setup_request</name> <argument_list pos:start="1:20" pos:end="3:68">(<argument pos:start="1:21" pos:end="1:38">AVFormatContext *s</argument>, <argument pos:start="1:41" pos:end="1:56">const char *host</argument>, <argument pos:start="1:59" pos:end="1:66">int port</argument>,

                    <argument pos:start="3:21" pos:end="3:39">int lower_transport</argument>, <argument pos:start="3:42" pos:end="3:67">const char *real_challenge</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="323:1">{<block_content pos:start="7:5" pos:end="321:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">RTSPState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:17">rt</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">j</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">i</name></decl>, <decl pos:start="9:15" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:17">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">RTSPStream</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:23">rtsp_st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">RTSPHeader</name></type> <name pos:start="13:16" pos:end="13:21">reply1</name></decl>, <decl pos:start="13:24" pos:end="13:39"><type ref="prev" pos:start="13:5" pos:end="13:14"><modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:29">reply</name> <init pos:start="13:31" pos:end="13:39">= <expr pos:start="13:33" pos:end="13:39"><operator pos:start="13:33" pos:end="13:33">&amp;</operator><name pos:start="13:34" pos:end="13:39">reply1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:18"><name pos:start="15:10" pos:end="15:12">cmd</name><index pos:start="15:13" pos:end="15:18">[<expr pos:start="15:14" pos:end="15:17"><literal type="number" pos:start="15:14" pos:end="15:17">2048</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:26">trans_pref</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:31"><if pos:start="21:5" pos:end="23:32">if <condition pos:start="21:8" pos:end="21:44">(<expr pos:start="21:9" pos:end="21:43"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:10">rt</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:23">server_type</name></name> <operator pos:start="21:25" pos:end="21:26">==</operator> <name pos:start="21:28" pos:end="21:43">RTSP_SERVER_REAL</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:32"><block_content pos:start="23:9" pos:end="23:32">

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:18">trans_pref</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <literal type="string" pos:start="23:22" pos:end="23:31">"x-pn-tng"</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="25:5" pos:end="27:31">else<block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:18">trans_pref</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="string" pos:start="27:22" pos:end="27:30">"RTP/AVP"</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:49">/* for each stream, make the setup request */</comment>

    <comment type="block" pos:start="33:5" pos:end="35:21">/* XXX: we assume the same server is used for the control of each

       RTSP stream */</comment>



    <for pos:start="39:5" pos:end="293:5">for<control pos:start="39:8" pos:end="39:67">(<init pos:start="39:9" pos:end="39:37"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:9">j</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <name pos:start="39:13" pos:end="39:29">RTSP_RTP_PORT_MIN</name></expr><operator pos:start="39:30" pos:end="39:30">,</operator> <expr pos:start="39:32" pos:end="39:36"><name pos:start="39:32" pos:end="39:32">i</name> <operator pos:start="39:34" pos:end="39:34">=</operator> <literal type="number" pos:start="39:36" pos:end="39:36">0</literal></expr>;</init> <condition pos:start="39:39" pos:end="39:62"><expr pos:start="39:39" pos:end="39:61"><name pos:start="39:39" pos:end="39:39">i</name> <operator pos:start="39:41" pos:end="39:41">&lt;</operator> <name pos:start="39:43" pos:end="39:61"><name pos:start="39:43" pos:end="39:44">rt</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:61">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="39:64" pos:end="39:66"><expr pos:start="39:64" pos:end="39:66"><operator pos:start="39:64" pos:end="39:65">++</operator><name pos:start="39:66" pos:end="39:66">i</name></expr></incr>)</control> <block pos:start="39:69" pos:end="293:5">{<block_content pos:start="41:9" pos:end="291:22">

        <decl_stmt pos:start="41:9" pos:end="41:29"><decl pos:start="41:9" pos:end="41:28"><type pos:start="41:9" pos:end="41:12"><name pos:start="41:9" pos:end="41:12">char</name></type> <name pos:start="41:14" pos:end="41:28"><name pos:start="41:14" pos:end="41:22">transport</name><index pos:start="41:23" pos:end="41:28">[<expr pos:start="41:24" pos:end="41:27"><literal type="number" pos:start="41:24" pos:end="41:27">2048</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:38"><expr pos:start="45:9" pos:end="45:37"><name pos:start="45:9" pos:end="45:15">rtsp_st</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:37"><name pos:start="45:19" pos:end="45:20">rt</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:34">rtsp_streams</name><index pos:start="45:35" pos:end="45:37">[<expr pos:start="45:36" pos:end="45:36"><name pos:start="45:36" pos:end="45:36">i</name></expr>]</index></name></expr>;</expr_stmt>



        <comment type="block" pos:start="49:9" pos:end="49:21">/* RTP/UDP */</comment>

        <if_stmt pos:start="51:9" pos:end="129:9"><if pos:start="51:9" pos:end="107:9">if <condition pos:start="51:12" pos:end="51:56">(<expr pos:start="51:13" pos:end="51:55"><name pos:start="51:13" pos:end="51:27">lower_transport</name> <operator pos:start="51:29" pos:end="51:30">==</operator> <name pos:start="51:32" pos:end="51:55">RTSP_LOWER_TRANSPORT_UDP</name></expr>)</condition> <block pos:start="51:58" pos:end="107:9">{<block_content pos:start="53:13" pos:end="105:75">

            <decl_stmt pos:start="53:13" pos:end="53:26"><decl pos:start="53:13" pos:end="53:25"><type pos:start="53:13" pos:end="53:16"><name pos:start="53:13" pos:end="53:16">char</name></type> <name pos:start="53:18" pos:end="53:25"><name pos:start="53:18" pos:end="53:20">buf</name><index pos:start="53:21" pos:end="53:25">[<expr pos:start="53:22" pos:end="53:24"><literal type="number" pos:start="53:22" pos:end="53:24">256</literal></expr>]</index></name></decl>;</decl_stmt>



            <comment type="block" pos:start="57:13" pos:end="57:51">/* first try in specified port range */</comment>

            <if_stmt pos:start="59:13" pos:end="75:13"><if pos:start="59:13" pos:end="75:13">if <condition pos:start="59:16" pos:end="59:39">(<expr pos:start="59:17" pos:end="59:38"><name pos:start="59:17" pos:end="59:33">RTSP_RTP_PORT_MIN</name> <operator pos:start="59:35" pos:end="59:36">!=</operator> <literal type="number" pos:start="59:38" pos:end="59:38">0</literal></expr>)</condition> <block pos:start="59:41" pos:end="75:13">{<block_content pos:start="61:17" pos:end="73:17">

                <while pos:start="61:17" pos:end="73:17">while<condition pos:start="61:22" pos:end="61:45">(<expr pos:start="61:23" pos:end="61:44"><name pos:start="61:23" pos:end="61:23">j</name> <operator pos:start="61:25" pos:end="61:26">&lt;=</operator> <name pos:start="61:28" pos:end="61:44">RTSP_RTP_PORT_MAX</name></expr>)</condition> <block pos:start="61:47" pos:end="73:17">{<block_content pos:start="63:21" pos:end="71:21">

                    <expr_stmt pos:start="63:21" pos:end="63:81"><expr pos:start="63:21" pos:end="63:80"><call pos:start="63:21" pos:end="63:80"><name pos:start="63:21" pos:end="63:28">snprintf</name><argument_list pos:start="63:29" pos:end="63:80">(<argument pos:start="63:30" pos:end="63:32"><expr pos:start="63:30" pos:end="63:32"><name pos:start="63:30" pos:end="63:32">buf</name></expr></argument>, <argument pos:start="63:35" pos:end="63:45"><expr pos:start="63:35" pos:end="63:45"><sizeof pos:start="63:35" pos:end="63:45">sizeof<argument_list pos:start="63:41" pos:end="63:45">(<argument pos:start="63:42" pos:end="63:44"><expr pos:start="63:42" pos:end="63:44"><name pos:start="63:42" pos:end="63:44">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="63:48" pos:end="63:70"><expr pos:start="63:48" pos:end="63:70"><literal type="string" pos:start="63:48" pos:end="63:70">"rtp://%s?localport=%d"</literal></expr></argument>, <argument pos:start="63:73" pos:end="63:76"><expr pos:start="63:73" pos:end="63:76"><name pos:start="63:73" pos:end="63:76">host</name></expr></argument>, <argument pos:start="63:79" pos:end="63:79"><expr pos:start="63:79" pos:end="63:79"><name pos:start="63:79" pos:end="63:79">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:27"><expr pos:start="65:21" pos:end="65:26"><name pos:start="65:21" pos:end="65:21">j</name> <operator pos:start="65:23" pos:end="65:24">+=</operator> <literal type="number" pos:start="65:26" pos:end="65:26">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="65:29" pos:end="65:83">/* we will use two port by rtp stream (rtp and rtcp) */</comment>

                    <if_stmt pos:start="67:21" pos:end="71:21"><if pos:start="67:21" pos:end="71:21">if <condition pos:start="67:24" pos:end="67:75">(<expr pos:start="67:25" pos:end="67:74"><call pos:start="67:25" pos:end="67:69"><name pos:start="67:25" pos:end="67:32">url_open</name><argument_list pos:start="67:33" pos:end="67:69">(<argument pos:start="67:34" pos:end="67:53"><expr pos:start="67:34" pos:end="67:53"><operator pos:start="67:34" pos:end="67:34">&amp;</operator><name pos:start="67:35" pos:end="67:53"><name pos:start="67:35" pos:end="67:41">rtsp_st</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:53">rtp_handle</name></name></expr></argument>, <argument pos:start="67:56" pos:end="67:58"><expr pos:start="67:56" pos:end="67:58"><name pos:start="67:56" pos:end="67:58">buf</name></expr></argument>, <argument pos:start="67:61" pos:end="67:68"><expr pos:start="67:61" pos:end="67:68"><name pos:start="67:61" pos:end="67:68">URL_RDWR</name></expr></argument>)</argument_list></call> <operator pos:start="67:71" pos:end="67:72">==</operator> <literal type="number" pos:start="67:74" pos:end="67:74">0</literal></expr>)</condition> <block pos:start="67:77" pos:end="71:21">{<block_content pos:start="69:25" pos:end="69:40">

                        <goto pos:start="69:25" pos:end="69:40">goto <name pos:start="69:30" pos:end="69:39">rtp_opened</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>



<comment type="block" pos:start="79:1" pos:end="89:2">/*            then try on any port

**            if (url_open(&amp;rtsp_st-&gt;rtp_handle, "rtp://", URL_RDONLY) &lt; 0) {

**                err = AVERROR_INVALIDDATA;

**                goto fail;

**            }

*/</comment>



        <label pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:18">rtp_opened</name>:</label>

            <expr_stmt pos:start="95:13" pos:end="95:59"><expr pos:start="95:13" pos:end="95:58"><name pos:start="95:13" pos:end="95:16">port</name> <operator pos:start="95:18" pos:end="95:18">=</operator> <call pos:start="95:20" pos:end="95:58"><name pos:start="95:20" pos:end="95:37">rtp_get_local_port</name><argument_list pos:start="95:38" pos:end="95:58">(<argument pos:start="95:39" pos:end="95:57"><expr pos:start="95:39" pos:end="95:57"><name pos:start="95:39" pos:end="95:57"><name pos:start="95:39" pos:end="95:45">rtsp_st</name><operator pos:start="95:46" pos:end="95:47">-&gt;</operator><name pos:start="95:48" pos:end="95:57">rtp_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="101:39"><expr pos:start="97:13" pos:end="101:38"><call pos:start="97:13" pos:end="101:38"><name pos:start="97:13" pos:end="97:20">snprintf</name><argument_list pos:start="97:21" pos:end="101:38">(<argument pos:start="97:22" pos:end="97:30"><expr pos:start="97:22" pos:end="97:30"><name pos:start="97:22" pos:end="97:30">transport</name></expr></argument>, <argument pos:start="97:33" pos:end="97:53"><expr pos:start="97:33" pos:end="97:53"><sizeof pos:start="97:33" pos:end="97:49">sizeof<argument_list pos:start="97:39" pos:end="97:49">(<argument pos:start="97:40" pos:end="97:48"><expr pos:start="97:40" pos:end="97:48"><name pos:start="97:40" pos:end="97:48">transport</name></expr></argument>)</argument_list></sizeof> <operator pos:start="97:51" pos:end="97:51">-</operator> <literal type="number" pos:start="97:53" pos:end="97:53">1</literal></expr></argument>,

                     <argument pos:start="99:22" pos:end="99:52"><expr pos:start="99:22" pos:end="99:52"><literal type="string" pos:start="99:22" pos:end="99:52">"%s/UDP;unicast;client_port=%d"</literal></expr></argument>,

                     <argument pos:start="101:22" pos:end="101:31"><expr pos:start="101:22" pos:end="101:31"><name pos:start="101:22" pos:end="101:31">trans_pref</name></expr></argument>, <argument pos:start="101:34" pos:end="101:37"><expr pos:start="101:34" pos:end="101:37"><name pos:start="101:34" pos:end="101:37">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="105:75"><if pos:start="103:13" pos:end="105:75">if <condition pos:start="103:16" pos:end="103:51">(<expr pos:start="103:17" pos:end="103:50"><name pos:start="103:17" pos:end="103:31"><name pos:start="103:17" pos:end="103:18">rt</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:31">server_type</name></name> <operator pos:start="103:33" pos:end="103:34">==</operator> <name pos:start="103:36" pos:end="103:50">RTSP_SERVER_RTP</name></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:75"><block_content pos:start="105:17" pos:end="105:75">

                <expr_stmt pos:start="105:17" pos:end="105:75"><expr pos:start="105:17" pos:end="105:74"><call pos:start="105:17" pos:end="105:74"><name pos:start="105:17" pos:end="105:27">av_strlcatf</name><argument_list pos:start="105:28" pos:end="105:74">(<argument pos:start="105:29" pos:end="105:37"><expr pos:start="105:29" pos:end="105:37"><name pos:start="105:29" pos:end="105:37">transport</name></expr></argument>, <argument pos:start="105:40" pos:end="105:56"><expr pos:start="105:40" pos:end="105:56"><sizeof pos:start="105:40" pos:end="105:56">sizeof<argument_list pos:start="105:46" pos:end="105:56">(<argument pos:start="105:47" pos:end="105:55"><expr pos:start="105:47" pos:end="105:55"><name pos:start="105:47" pos:end="105:55">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="105:59" pos:end="105:63"><expr pos:start="105:59" pos:end="105:63"><literal type="string" pos:start="105:59" pos:end="105:63">"-%d"</literal></expr></argument>, <argument pos:start="105:66" pos:end="105:73"><expr pos:start="105:66" pos:end="105:73"><name pos:start="105:66" pos:end="105:69">port</name> <operator pos:start="105:71" pos:end="105:71">+</operator> <literal type="number" pos:start="105:73" pos:end="105:73">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if>



        <comment type="block" pos:start="111:9" pos:end="111:21">/* RTP/TCP */</comment>

        <if type="elseif" pos:start="113:9" pos:end="119:9">else if <condition pos:start="113:17" pos:end="113:61">(<expr pos:start="113:18" pos:end="113:60"><name pos:start="113:18" pos:end="113:32">lower_transport</name> <operator pos:start="113:34" pos:end="113:35">==</operator> <name pos:start="113:37" pos:end="113:60">RTSP_LOWER_TRANSPORT_TCP</name></expr>)</condition> <block pos:start="113:63" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:43">

            <expr_stmt pos:start="115:13" pos:end="117:43"><expr pos:start="115:13" pos:end="117:42"><call pos:start="115:13" pos:end="117:42"><name pos:start="115:13" pos:end="115:20">snprintf</name><argument_list pos:start="115:21" pos:end="117:42">(<argument pos:start="115:22" pos:end="115:30"><expr pos:start="115:22" pos:end="115:30"><name pos:start="115:22" pos:end="115:30">transport</name></expr></argument>, <argument pos:start="115:33" pos:end="115:53"><expr pos:start="115:33" pos:end="115:53"><sizeof pos:start="115:33" pos:end="115:49">sizeof<argument_list pos:start="115:39" pos:end="115:49">(<argument pos:start="115:40" pos:end="115:48"><expr pos:start="115:40" pos:end="115:48"><name pos:start="115:40" pos:end="115:48">transport</name></expr></argument>)</argument_list></sizeof> <operator pos:start="115:51" pos:end="115:51">-</operator> <literal type="number" pos:start="115:53" pos:end="115:53">1</literal></expr></argument>,

                     <argument pos:start="117:22" pos:end="117:29"><expr pos:start="117:22" pos:end="117:29"><literal type="string" pos:start="117:22" pos:end="117:29">"%s/TCP"</literal></expr></argument>, <argument pos:start="117:32" pos:end="117:41"><expr pos:start="117:32" pos:end="117:41"><name pos:start="117:32" pos:end="117:41">trans_pref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>



        <if type="elseif" pos:start="123:9" pos:end="129:9">else if <condition pos:start="123:17" pos:end="123:71">(<expr pos:start="123:18" pos:end="123:70"><name pos:start="123:18" pos:end="123:32">lower_transport</name> <operator pos:start="123:34" pos:end="123:35">==</operator> <name pos:start="123:37" pos:end="123:70">RTSP_LOWER_TRANSPORT_UDP_MULTICAST</name></expr>)</condition> <block pos:start="123:73" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:53">

            <expr_stmt pos:start="125:13" pos:end="127:53"><expr pos:start="125:13" pos:end="127:52"><call pos:start="125:13" pos:end="127:52"><name pos:start="125:13" pos:end="125:20">snprintf</name><argument_list pos:start="125:21" pos:end="127:52">(<argument pos:start="125:22" pos:end="125:30"><expr pos:start="125:22" pos:end="125:30"><name pos:start="125:22" pos:end="125:30">transport</name></expr></argument>, <argument pos:start="125:33" pos:end="125:53"><expr pos:start="125:33" pos:end="125:53"><sizeof pos:start="125:33" pos:end="125:49">sizeof<argument_list pos:start="125:39" pos:end="125:49">(<argument pos:start="125:40" pos:end="125:48"><expr pos:start="125:40" pos:end="125:48"><name pos:start="125:40" pos:end="125:48">transport</name></expr></argument>)</argument_list></sizeof> <operator pos:start="125:51" pos:end="125:51">-</operator> <literal type="number" pos:start="125:53" pos:end="125:53">1</literal></expr></argument>,

                     <argument pos:start="127:22" pos:end="127:39"><expr pos:start="127:22" pos:end="127:39"><literal type="string" pos:start="127:22" pos:end="127:39">"%s/UDP;multicast"</literal></expr></argument>, <argument pos:start="127:42" pos:end="127:51"><expr pos:start="127:42" pos:end="127:51"><name pos:start="127:42" pos:end="127:51">trans_pref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="131:9" pos:end="133:67"><if pos:start="131:9" pos:end="133:67">if <condition pos:start="131:12" pos:end="131:48">(<expr pos:start="131:13" pos:end="131:47"><name pos:start="131:13" pos:end="131:27"><name pos:start="131:13" pos:end="131:14">rt</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:27">server_type</name></name> <operator pos:start="131:29" pos:end="131:30">==</operator> <name pos:start="131:32" pos:end="131:47">RTSP_SERVER_REAL</name></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:67"><block_content pos:start="133:13" pos:end="133:67">

            <expr_stmt pos:start="133:13" pos:end="133:67"><expr pos:start="133:13" pos:end="133:66"><call pos:start="133:13" pos:end="133:66"><name pos:start="133:13" pos:end="133:22">av_strlcat</name><argument_list pos:start="133:23" pos:end="133:66">(<argument pos:start="133:24" pos:end="133:32"><expr pos:start="133:24" pos:end="133:32"><name pos:start="133:24" pos:end="133:32">transport</name></expr></argument>, <argument pos:start="133:35" pos:end="133:46"><expr pos:start="133:35" pos:end="133:46"><literal type="string" pos:start="133:35" pos:end="133:46">";mode=play"</literal></expr></argument>, <argument pos:start="133:49" pos:end="133:65"><expr pos:start="133:49" pos:end="133:65"><sizeof pos:start="133:49" pos:end="133:65">sizeof<argument_list pos:start="133:55" pos:end="133:65">(<argument pos:start="133:56" pos:end="133:64"><expr pos:start="133:56" pos:end="133:64"><name pos:start="133:56" pos:end="133:64">transport</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="141:50"><expr pos:start="135:9" pos:end="141:49"><call pos:start="135:9" pos:end="141:49"><name pos:start="135:9" pos:end="135:16">snprintf</name><argument_list pos:start="135:17" pos:end="141:49">(<argument pos:start="135:18" pos:end="135:20"><expr pos:start="135:18" pos:end="135:20"><name pos:start="135:18" pos:end="135:20">cmd</name></expr></argument>, <argument pos:start="135:23" pos:end="135:33"><expr pos:start="135:23" pos:end="135:33"><sizeof pos:start="135:23" pos:end="135:33">sizeof<argument_list pos:start="135:29" pos:end="135:33">(<argument pos:start="135:30" pos:end="135:32"><expr pos:start="135:30" pos:end="135:32"><name pos:start="135:30" pos:end="135:32">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                 <argument pos:start="137:18" pos:end="139:36"><expr pos:start="137:18" pos:end="139:36"><literal type="string" pos:start="137:18" pos:end="137:40">"SETUP %s RTSP/1.0\r\n"</literal>

                 <literal type="string" pos:start="139:18" pos:end="139:36">"Transport: %s\r\n"</literal></expr></argument>,

                 <argument pos:start="141:18" pos:end="141:37"><expr pos:start="141:18" pos:end="141:37"><name pos:start="141:18" pos:end="141:37"><name pos:start="141:18" pos:end="141:24">rtsp_st</name><operator pos:start="141:25" pos:end="141:26">-&gt;</operator><name pos:start="141:27" pos:end="141:37">control_url</name></name></expr></argument>, <argument pos:start="141:40" pos:end="141:48"><expr pos:start="141:40" pos:end="141:48"><name pos:start="141:40" pos:end="141:48">transport</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="143:9" pos:end="159:9"><if pos:start="143:9" pos:end="159:9">if <condition pos:start="143:12" pos:end="143:58">(<expr pos:start="143:13" pos:end="143:57"><name pos:start="143:13" pos:end="143:13">i</name> <operator pos:start="143:15" pos:end="143:16">==</operator> <literal type="number" pos:start="143:18" pos:end="143:18">0</literal> <operator pos:start="143:20" pos:end="143:21">&amp;&amp;</operator> <name pos:start="143:23" pos:end="143:37"><name pos:start="143:23" pos:end="143:24">rt</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:37">server_type</name></name> <operator pos:start="143:39" pos:end="143:40">==</operator> <name pos:start="143:42" pos:end="143:57">RTSP_SERVER_REAL</name></expr>)</condition> <block pos:start="143:60" pos:end="159:9">{<block_content pos:start="145:13" pos:end="157:61">

            <decl_stmt pos:start="145:13" pos:end="145:44"><decl pos:start="145:13" pos:end="145:29"><type pos:start="145:13" pos:end="145:16"><name pos:start="145:13" pos:end="145:16">char</name></type> <name pos:start="145:18" pos:end="145:29"><name pos:start="145:18" pos:end="145:25">real_res</name><index pos:start="145:26" pos:end="145:29">[<expr pos:start="145:27" pos:end="145:28"><literal type="number" pos:start="145:27" pos:end="145:28">41</literal></expr>]</index></name></decl>, <decl pos:start="145:32" pos:end="145:43"><type ref="prev" pos:start="145:13" pos:end="145:16"/><name pos:start="145:32" pos:end="145:43"><name pos:start="145:32" pos:end="145:40">real_csum</name><index pos:start="145:41" pos:end="145:43">[<expr pos:start="145:42" pos:end="145:42"><literal type="number" pos:start="145:42" pos:end="145:42">9</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="147:13" pos:end="149:62"><expr pos:start="147:13" pos:end="149:61"><call pos:start="147:13" pos:end="149:61"><name pos:start="147:13" pos:end="147:45">ff_rdt_calc_response_and_checksum</name><argument_list pos:start="147:46" pos:end="149:61">(<argument pos:start="147:47" pos:end="147:54"><expr pos:start="147:47" pos:end="147:54"><name pos:start="147:47" pos:end="147:54">real_res</name></expr></argument>, <argument pos:start="147:57" pos:end="147:65"><expr pos:start="147:57" pos:end="147:65"><name pos:start="147:57" pos:end="147:65">real_csum</name></expr></argument>,

                                              <argument pos:start="149:47" pos:end="149:60"><expr pos:start="149:47" pos:end="149:60"><name pos:start="149:47" pos:end="149:60">real_challenge</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="157:61"><expr pos:start="151:13" pos:end="157:60"><call pos:start="151:13" pos:end="157:60"><name pos:start="151:13" pos:end="151:23">av_strlcatf</name><argument_list pos:start="151:24" pos:end="157:60">(<argument pos:start="151:25" pos:end="151:27"><expr pos:start="151:25" pos:end="151:27"><name pos:start="151:25" pos:end="151:27">cmd</name></expr></argument>, <argument pos:start="151:30" pos:end="151:40"><expr pos:start="151:30" pos:end="151:40"><sizeof pos:start="151:30" pos:end="151:40">sizeof<argument_list pos:start="151:36" pos:end="151:40">(<argument pos:start="151:37" pos:end="151:39"><expr pos:start="151:37" pos:end="151:39"><name pos:start="151:37" pos:end="151:39">cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                        <argument pos:start="153:25" pos:end="155:55"><expr pos:start="153:25" pos:end="155:55"><literal type="string" pos:start="153:25" pos:end="153:42">"If-Match: %s\r\n"</literal>

                        <literal type="string" pos:start="155:25" pos:end="155:55">"RealChallenge2: %s, sd=%s\r\n"</literal></expr></argument>,

                        <argument pos:start="157:25" pos:end="157:38"><expr pos:start="157:25" pos:end="157:38"><name pos:start="157:25" pos:end="157:38"><name pos:start="157:25" pos:end="157:26">rt</name><operator pos:start="157:27" pos:end="157:28">-&gt;</operator><name pos:start="157:29" pos:end="157:38">session_id</name></name></expr></argument>, <argument pos:start="157:41" pos:end="157:48"><expr pos:start="157:41" pos:end="157:48"><name pos:start="157:41" pos:end="157:48">real_res</name></expr></argument>, <argument pos:start="157:51" pos:end="157:59"><expr pos:start="157:51" pos:end="157:59"><name pos:start="157:51" pos:end="157:59">real_csum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:43"><expr pos:start="161:9" pos:end="161:42"><call pos:start="161:9" pos:end="161:42"><name pos:start="161:9" pos:end="161:21">rtsp_send_cmd</name><argument_list pos:start="161:22" pos:end="161:42">(<argument pos:start="161:23" pos:end="161:23"><expr pos:start="161:23" pos:end="161:23"><name pos:start="161:23" pos:end="161:23">s</name></expr></argument>, <argument pos:start="161:26" pos:end="161:28"><expr pos:start="161:26" pos:end="161:28"><name pos:start="161:26" pos:end="161:28">cmd</name></expr></argument>, <argument pos:start="161:31" pos:end="161:35"><expr pos:start="161:31" pos:end="161:35"><name pos:start="161:31" pos:end="161:35">reply</name></expr></argument>, <argument pos:start="161:38" pos:end="161:41"><expr pos:start="161:38" pos:end="161:41"><name pos:start="161:38" pos:end="161:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="163:9" pos:end="177:9"><if pos:start="163:9" pos:end="169:9">if <condition pos:start="163:12" pos:end="163:75">(<expr pos:start="163:13" pos:end="163:74"><name pos:start="163:13" pos:end="163:30"><name pos:start="163:13" pos:end="163:17">reply</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:30">status_code</name></name> <operator pos:start="163:32" pos:end="163:33">==</operator> <literal type="number" pos:start="163:35" pos:end="163:37">461</literal> <comment type="block" pos:start="163:39" pos:end="163:64">/* Unsupported protocol */</comment> <operator pos:start="163:66" pos:end="163:67">&amp;&amp;</operator> <name pos:start="163:69" pos:end="163:69">i</name> <operator pos:start="163:71" pos:end="163:72">==</operator> <literal type="number" pos:start="163:74" pos:end="163:74">0</literal></expr>)</condition> <block pos:start="163:77" pos:end="169:9">{<block_content pos:start="165:13" pos:end="167:22">

            <expr_stmt pos:start="165:13" pos:end="165:20"><expr pos:start="165:13" pos:end="165:19"><name pos:start="165:13" pos:end="165:15">err</name> <operator pos:start="165:17" pos:end="165:17">=</operator> <literal type="number" pos:start="165:19" pos:end="165:19">1</literal></expr>;</expr_stmt>

            <goto pos:start="167:13" pos:end="167:22">goto <name pos:start="167:18" pos:end="167:21">fail</name>;</goto>

        </block_content>}</block></if> <if type="elseif" pos:start="169:11" pos:end="177:9">else if <condition pos:start="169:19" pos:end="171:45">(<expr pos:start="169:20" pos:end="171:44"><name pos:start="169:20" pos:end="169:37"><name pos:start="169:20" pos:end="169:24">reply</name><operator pos:start="169:25" pos:end="169:26">-&gt;</operator><name pos:start="169:27" pos:end="169:37">status_code</name></name> <operator pos:start="169:39" pos:end="169:40">!=</operator> <name pos:start="169:42" pos:end="169:55">RTSP_STATUS_OK</name> <operator pos:start="169:57" pos:end="169:58">||</operator>

                   <name pos:start="171:20" pos:end="171:39"><name pos:start="171:20" pos:end="171:24">reply</name><operator pos:start="171:25" pos:end="171:26">-&gt;</operator><name pos:start="171:27" pos:end="171:39">nb_transports</name></name> <operator pos:start="171:41" pos:end="171:42">!=</operator> <literal type="number" pos:start="171:44" pos:end="171:44">1</literal></expr>)</condition> <block pos:start="171:47" pos:end="177:9">{<block_content pos:start="173:13" pos:end="175:22">

            <expr_stmt pos:start="173:13" pos:end="173:38"><expr pos:start="173:13" pos:end="173:37"><name pos:start="173:13" pos:end="173:15">err</name> <operator pos:start="173:17" pos:end="173:17">=</operator> <name pos:start="173:19" pos:end="173:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="175:13" pos:end="175:22">goto <name pos:start="175:18" pos:end="175:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="181:9" pos:end="181:60">/* XXX: same protocol for all streams is required */</comment>

        <if_stmt pos:start="183:9" pos:end="197:9"><if pos:start="183:9" pos:end="193:9">if <condition pos:start="183:12" pos:end="183:18">(<expr pos:start="183:13" pos:end="183:17"><name pos:start="183:13" pos:end="183:13">i</name> <operator pos:start="183:15" pos:end="183:15">&gt;</operator> <literal type="number" pos:start="183:17" pos:end="183:17">0</literal></expr>)</condition> <block pos:start="183:20" pos:end="193:9">{<block_content pos:start="185:13" pos:end="191:13">

            <if_stmt pos:start="185:13" pos:end="191:13"><if pos:start="185:13" pos:end="191:13">if <condition pos:start="185:16" pos:end="185:76">(<expr pos:start="185:17" pos:end="185:75"><name pos:start="185:17" pos:end="185:36"><name pos:start="185:17" pos:end="185:21">reply</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:33">transports</name><index pos:start="185:34" pos:end="185:36">[<expr pos:start="185:35" pos:end="185:35"><literal type="number" pos:start="185:35" pos:end="185:35">0</literal></expr>]</index></name><operator pos:start="185:37" pos:end="185:37">.</operator><name pos:start="185:38" pos:end="185:52">lower_transport</name> <operator pos:start="185:54" pos:end="185:55">!=</operator> <name pos:start="185:57" pos:end="185:75"><name pos:start="185:57" pos:end="185:58">rt</name><operator pos:start="185:59" pos:end="185:60">-&gt;</operator><name pos:start="185:61" pos:end="185:75">lower_transport</name></name></expr>)</condition> <block pos:start="185:78" pos:end="191:13">{<block_content pos:start="187:17" pos:end="189:26">

                <expr_stmt pos:start="187:17" pos:end="187:42"><expr pos:start="187:17" pos:end="187:41"><name pos:start="187:17" pos:end="187:19">err</name> <operator pos:start="187:21" pos:end="187:21">=</operator> <name pos:start="187:23" pos:end="187:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="189:17" pos:end="189:26">goto <name pos:start="189:22" pos:end="189:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="193:11" pos:end="197:9">else <block pos:start="193:16" pos:end="197:9">{<block_content pos:start="195:13" pos:end="195:71">

            <expr_stmt pos:start="195:13" pos:end="195:71"><expr pos:start="195:13" pos:end="195:70"><name pos:start="195:13" pos:end="195:31"><name pos:start="195:13" pos:end="195:14">rt</name><operator pos:start="195:15" pos:end="195:16">-&gt;</operator><name pos:start="195:17" pos:end="195:31">lower_transport</name></name> <operator pos:start="195:33" pos:end="195:33">=</operator> <name pos:start="195:35" pos:end="195:54"><name pos:start="195:35" pos:end="195:39">reply</name><operator pos:start="195:40" pos:end="195:41">-&gt;</operator><name pos:start="195:42" pos:end="195:51">transports</name><index pos:start="195:52" pos:end="195:54">[<expr pos:start="195:53" pos:end="195:53"><literal type="number" pos:start="195:53" pos:end="195:53">0</literal></expr>]</index></name><operator pos:start="195:55" pos:end="195:55">.</operator><name pos:start="195:56" pos:end="195:70">lower_transport</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="201:9" pos:end="201:49">/* close RTP connection if not choosen */</comment>

        <if_stmt pos:start="203:9" pos:end="211:9"><if pos:start="203:9" pos:end="211:9">if <condition pos:start="203:12" pos:end="205:58">(<expr pos:start="203:13" pos:end="205:57"><name pos:start="203:13" pos:end="203:32"><name pos:start="203:13" pos:end="203:17">reply</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:29">transports</name><index pos:start="203:30" pos:end="203:32">[<expr pos:start="203:31" pos:end="203:31"><literal type="number" pos:start="203:31" pos:end="203:31">0</literal></expr>]</index></name><operator pos:start="203:33" pos:end="203:33">.</operator><name pos:start="203:34" pos:end="203:48">lower_transport</name> <operator pos:start="203:50" pos:end="203:51">!=</operator> <name pos:start="203:53" pos:end="203:76">RTSP_LOWER_TRANSPORT_UDP</name> <operator pos:start="203:78" pos:end="203:79">&amp;&amp;</operator>

            <operator pos:start="205:13" pos:end="205:13">(</operator><name pos:start="205:14" pos:end="205:28">lower_transport</name> <operator pos:start="205:30" pos:end="205:31">==</operator> <name pos:start="205:33" pos:end="205:56">RTSP_LOWER_TRANSPORT_UDP</name><operator pos:start="205:57" pos:end="205:57">)</operator></expr>)</condition> <block pos:start="205:60" pos:end="211:9">{<block_content pos:start="207:13" pos:end="209:39">

            <expr_stmt pos:start="207:13" pos:end="207:43"><expr pos:start="207:13" pos:end="207:42"><call pos:start="207:13" pos:end="207:42"><name pos:start="207:13" pos:end="207:21">url_close</name><argument_list pos:start="207:22" pos:end="207:42">(<argument pos:start="207:23" pos:end="207:41"><expr pos:start="207:23" pos:end="207:41"><name pos:start="207:23" pos:end="207:41"><name pos:start="207:23" pos:end="207:29">rtsp_st</name><operator pos:start="207:30" pos:end="207:31">-&gt;</operator><name pos:start="207:32" pos:end="207:41">rtp_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:39"><expr pos:start="209:13" pos:end="209:38"><name pos:start="209:13" pos:end="209:31"><name pos:start="209:13" pos:end="209:19">rtsp_st</name><operator pos:start="209:20" pos:end="209:21">-&gt;</operator><name pos:start="209:22" pos:end="209:31">rtp_handle</name></name> <operator pos:start="209:33" pos:end="209:33">=</operator> <name pos:start="209:35" pos:end="209:38">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="215:9" pos:end="285:9">switch<condition pos:start="215:15" pos:end="215:52">(<expr pos:start="215:16" pos:end="215:51"><name pos:start="215:16" pos:end="215:35"><name pos:start="215:16" pos:end="215:20">reply</name><operator pos:start="215:21" pos:end="215:22">-&gt;</operator><name pos:start="215:23" pos:end="215:32">transports</name><index pos:start="215:33" pos:end="215:35">[<expr pos:start="215:34" pos:end="215:34"><literal type="number" pos:start="215:34" pos:end="215:34">0</literal></expr>]</index></name><operator pos:start="215:36" pos:end="215:36">.</operator><name pos:start="215:37" pos:end="215:51">lower_transport</name></expr>)</condition> <block pos:start="215:54" pos:end="285:9">{<block_content pos:start="217:9" pos:end="283:18">

        <case pos:start="217:9" pos:end="217:38">case <expr pos:start="217:14" pos:end="217:37"><name pos:start="217:14" pos:end="217:37">RTSP_LOWER_TRANSPORT_TCP</name></expr>:</case>

            <expr_stmt pos:start="219:13" pos:end="219:76"><expr pos:start="219:13" pos:end="219:75"><name pos:start="219:13" pos:end="219:36"><name pos:start="219:13" pos:end="219:19">rtsp_st</name><operator pos:start="219:20" pos:end="219:21">-&gt;</operator><name pos:start="219:22" pos:end="219:36">interleaved_min</name></name> <operator pos:start="219:38" pos:end="219:38">=</operator> <name pos:start="219:40" pos:end="219:59"><name pos:start="219:40" pos:end="219:44">reply</name><operator pos:start="219:45" pos:end="219:46">-&gt;</operator><name pos:start="219:47" pos:end="219:56">transports</name><index pos:start="219:57" pos:end="219:59">[<expr pos:start="219:58" pos:end="219:58"><literal type="number" pos:start="219:58" pos:end="219:58">0</literal></expr>]</index></name><operator pos:start="219:60" pos:end="219:60">.</operator><name pos:start="219:61" pos:end="219:75">interleaved_min</name></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:76"><expr pos:start="221:13" pos:end="221:75"><name pos:start="221:13" pos:end="221:36"><name pos:start="221:13" pos:end="221:19">rtsp_st</name><operator pos:start="221:20" pos:end="221:21">-&gt;</operator><name pos:start="221:22" pos:end="221:36">interleaved_max</name></name> <operator pos:start="221:38" pos:end="221:38">=</operator> <name pos:start="221:40" pos:end="221:59"><name pos:start="221:40" pos:end="221:44">reply</name><operator pos:start="221:45" pos:end="221:46">-&gt;</operator><name pos:start="221:47" pos:end="221:56">transports</name><index pos:start="221:57" pos:end="221:59">[<expr pos:start="221:58" pos:end="221:58"><literal type="number" pos:start="221:58" pos:end="221:58">0</literal></expr>]</index></name><operator pos:start="221:60" pos:end="221:60">.</operator><name pos:start="221:61" pos:end="221:75">interleaved_max</name></expr>;</expr_stmt>

            <break pos:start="223:13" pos:end="223:18">break;</break>



        <case pos:start="227:9" pos:end="227:38">case <expr pos:start="227:14" pos:end="227:37"><name pos:start="227:14" pos:end="227:37">RTSP_LOWER_TRANSPORT_UDP</name></expr>:</case>

            <block pos:start="229:13" pos:end="249:13">{<block_content pos:start="231:17" pos:end="247:17">

                <decl_stmt pos:start="231:17" pos:end="231:31"><decl pos:start="231:17" pos:end="231:30"><type pos:start="231:17" pos:end="231:20"><name pos:start="231:17" pos:end="231:20">char</name></type> <name pos:start="231:22" pos:end="231:30"><name pos:start="231:22" pos:end="231:24">url</name><index pos:start="231:25" pos:end="231:30">[<expr pos:start="231:26" pos:end="231:29"><literal type="number" pos:start="231:26" pos:end="231:29">1024</literal></expr>]</index></name></decl>;</decl_stmt>



                <comment type="block" pos:start="235:17" pos:end="235:56">/* XXX: also use address if specified */</comment>

                <expr_stmt pos:start="237:17" pos:end="239:69"><expr pos:start="237:17" pos:end="239:68"><call pos:start="237:17" pos:end="239:68"><name pos:start="237:17" pos:end="237:24">snprintf</name><argument_list pos:start="237:25" pos:end="239:68">(<argument pos:start="237:26" pos:end="237:28"><expr pos:start="237:26" pos:end="237:28"><name pos:start="237:26" pos:end="237:28">url</name></expr></argument>, <argument pos:start="237:31" pos:end="237:41"><expr pos:start="237:31" pos:end="237:41"><sizeof pos:start="237:31" pos:end="237:41">sizeof<argument_list pos:start="237:37" pos:end="237:41">(<argument pos:start="237:38" pos:end="237:40"><expr pos:start="237:38" pos:end="237:40"><name pos:start="237:38" pos:end="237:40">url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="237:44" pos:end="237:56"><expr pos:start="237:44" pos:end="237:56"><literal type="string" pos:start="237:44" pos:end="237:56">"rtp://%s:%d"</literal></expr></argument>,

                         <argument pos:start="239:26" pos:end="239:29"><expr pos:start="239:26" pos:end="239:29"><name pos:start="239:26" pos:end="239:29">host</name></expr></argument>, <argument pos:start="239:32" pos:end="239:67"><expr pos:start="239:32" pos:end="239:67"><name pos:start="239:32" pos:end="239:51"><name pos:start="239:32" pos:end="239:36">reply</name><operator pos:start="239:37" pos:end="239:38">-&gt;</operator><name pos:start="239:39" pos:end="239:48">transports</name><index pos:start="239:49" pos:end="239:51">[<expr pos:start="239:50" pos:end="239:50"><literal type="number" pos:start="239:50" pos:end="239:50">0</literal></expr>]</index></name><operator pos:start="239:52" pos:end="239:52">.</operator><name pos:start="239:53" pos:end="239:67">server_port_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="241:17" pos:end="247:17"><if pos:start="241:17" pos:end="247:17">if <condition pos:start="241:20" pos:end="241:69">(<expr pos:start="241:21" pos:end="241:68"><call pos:start="241:21" pos:end="241:64"><name pos:start="241:21" pos:end="241:38">rtp_set_remote_url</name><argument_list pos:start="241:39" pos:end="241:64">(<argument pos:start="241:40" pos:end="241:58"><expr pos:start="241:40" pos:end="241:58"><name pos:start="241:40" pos:end="241:58"><name pos:start="241:40" pos:end="241:46">rtsp_st</name><operator pos:start="241:47" pos:end="241:48">-&gt;</operator><name pos:start="241:49" pos:end="241:58">rtp_handle</name></name></expr></argument>, <argument pos:start="241:61" pos:end="241:63"><expr pos:start="241:61" pos:end="241:63"><name pos:start="241:61" pos:end="241:63">url</name></expr></argument>)</argument_list></call> <operator pos:start="241:66" pos:end="241:66">&lt;</operator> <literal type="number" pos:start="241:68" pos:end="241:68">0</literal></expr>)</condition> <block pos:start="241:71" pos:end="247:17">{<block_content pos:start="243:21" pos:end="245:30">

                    <expr_stmt pos:start="243:21" pos:end="243:46"><expr pos:start="243:21" pos:end="243:45"><name pos:start="243:21" pos:end="243:23">err</name> <operator pos:start="243:25" pos:end="243:25">=</operator> <name pos:start="243:27" pos:end="243:45">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                    <goto pos:start="245:21" pos:end="245:30">goto <name pos:start="245:26" pos:end="245:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="251:13" pos:end="251:18">break;</break>

        <case pos:start="253:9" pos:end="253:48">case <expr pos:start="253:14" pos:end="253:47"><name pos:start="253:14" pos:end="253:47">RTSP_LOWER_TRANSPORT_UDP_MULTICAST</name></expr>:</case>

            <block pos:start="255:13" pos:end="281:13">{<block_content pos:start="257:17" pos:end="279:17">

                <decl_stmt pos:start="257:17" pos:end="257:31"><decl pos:start="257:17" pos:end="257:30"><type pos:start="257:17" pos:end="257:20"><name pos:start="257:17" pos:end="257:20">char</name></type> <name pos:start="257:22" pos:end="257:30"><name pos:start="257:22" pos:end="257:24">url</name><index pos:start="257:25" pos:end="257:30">[<expr pos:start="257:26" pos:end="257:29"><literal type="number" pos:start="257:26" pos:end="257:29">1024</literal></expr>]</index></name></decl>;</decl_stmt>

                <decl_stmt pos:start="259:17" pos:end="259:34"><decl pos:start="259:17" pos:end="259:33"><type pos:start="259:17" pos:end="259:30"><name pos:start="259:17" pos:end="259:30"><name pos:start="259:17" pos:end="259:22">struct</name> <name pos:start="259:24" pos:end="259:30">in_addr</name></name></type> <name pos:start="259:32" pos:end="259:33">in</name></decl>;</decl_stmt>



                <expr_stmt pos:start="263:17" pos:end="263:68"><expr pos:start="263:17" pos:end="263:67"><name pos:start="263:17" pos:end="263:25"><name pos:start="263:17" pos:end="263:18">in</name><operator pos:start="263:19" pos:end="263:19">.</operator><name pos:start="263:20" pos:end="263:25">s_addr</name></name> <operator pos:start="263:27" pos:end="263:27">=</operator> <call pos:start="263:29" pos:end="263:67"><name pos:start="263:29" pos:end="263:33">htonl</name><argument_list pos:start="263:34" pos:end="263:67">(<argument pos:start="263:35" pos:end="263:66"><expr pos:start="263:35" pos:end="263:66"><name pos:start="263:35" pos:end="263:54"><name pos:start="263:35" pos:end="263:39">reply</name><operator pos:start="263:40" pos:end="263:41">-&gt;</operator><name pos:start="263:42" pos:end="263:51">transports</name><index pos:start="263:52" pos:end="263:54">[<expr pos:start="263:53" pos:end="263:53"><literal type="number" pos:start="263:53" pos:end="263:53">0</literal></expr>]</index></name><operator pos:start="263:55" pos:end="263:55">.</operator><name pos:start="263:56" pos:end="263:66">destination</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="265:17" pos:end="271:51"><expr pos:start="265:17" pos:end="271:50"><call pos:start="265:17" pos:end="271:50"><name pos:start="265:17" pos:end="265:24">snprintf</name><argument_list pos:start="265:25" pos:end="271:50">(<argument pos:start="265:26" pos:end="265:28"><expr pos:start="265:26" pos:end="265:28"><name pos:start="265:26" pos:end="265:28">url</name></expr></argument>, <argument pos:start="265:31" pos:end="265:41"><expr pos:start="265:31" pos:end="265:41"><sizeof pos:start="265:31" pos:end="265:41">sizeof<argument_list pos:start="265:37" pos:end="265:41">(<argument pos:start="265:38" pos:end="265:40"><expr pos:start="265:38" pos:end="265:40"><name pos:start="265:38" pos:end="265:40">url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="265:44" pos:end="265:63"><expr pos:start="265:44" pos:end="265:63"><literal type="string" pos:start="265:44" pos:end="265:63">"rtp://%s:%d?ttl=%d"</literal></expr></argument>,

                         <argument pos:start="267:26" pos:end="267:38"><expr pos:start="267:26" pos:end="267:38"><call pos:start="267:26" pos:end="267:38"><name pos:start="267:26" pos:end="267:34">inet_ntoa</name><argument_list pos:start="267:35" pos:end="267:38">(<argument pos:start="267:36" pos:end="267:37"><expr pos:start="267:36" pos:end="267:37"><name pos:start="267:36" pos:end="267:37">in</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="269:26" pos:end="269:54"><expr pos:start="269:26" pos:end="269:54"><name pos:start="269:26" pos:end="269:45"><name pos:start="269:26" pos:end="269:30">reply</name><operator pos:start="269:31" pos:end="269:32">-&gt;</operator><name pos:start="269:33" pos:end="269:42">transports</name><index pos:start="269:43" pos:end="269:45">[<expr pos:start="269:44" pos:end="269:44"><literal type="number" pos:start="269:44" pos:end="269:44">0</literal></expr>]</index></name><operator pos:start="269:46" pos:end="269:46">.</operator><name pos:start="269:47" pos:end="269:54">port_min</name></expr></argument>,

                         <argument pos:start="271:26" pos:end="271:49"><expr pos:start="271:26" pos:end="271:49"><name pos:start="271:26" pos:end="271:45"><name pos:start="271:26" pos:end="271:30">reply</name><operator pos:start="271:31" pos:end="271:32">-&gt;</operator><name pos:start="271:33" pos:end="271:42">transports</name><index pos:start="271:43" pos:end="271:45">[<expr pos:start="271:44" pos:end="271:44"><literal type="number" pos:start="271:44" pos:end="271:44">0</literal></expr>]</index></name><operator pos:start="271:46" pos:end="271:46">.</operator><name pos:start="271:47" pos:end="271:49">ttl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="273:17" pos:end="279:17"><if pos:start="273:17" pos:end="279:17">if <condition pos:start="273:20" pos:end="273:70">(<expr pos:start="273:21" pos:end="273:69"><call pos:start="273:21" pos:end="273:65"><name pos:start="273:21" pos:end="273:28">url_open</name><argument_list pos:start="273:29" pos:end="273:65">(<argument pos:start="273:30" pos:end="273:49"><expr pos:start="273:30" pos:end="273:49"><operator pos:start="273:30" pos:end="273:30">&amp;</operator><name pos:start="273:31" pos:end="273:49"><name pos:start="273:31" pos:end="273:37">rtsp_st</name><operator pos:start="273:38" pos:end="273:39">-&gt;</operator><name pos:start="273:40" pos:end="273:49">rtp_handle</name></name></expr></argument>, <argument pos:start="273:52" pos:end="273:54"><expr pos:start="273:52" pos:end="273:54"><name pos:start="273:52" pos:end="273:54">url</name></expr></argument>, <argument pos:start="273:57" pos:end="273:64"><expr pos:start="273:57" pos:end="273:64"><name pos:start="273:57" pos:end="273:64">URL_RDWR</name></expr></argument>)</argument_list></call> <operator pos:start="273:67" pos:end="273:67">&lt;</operator> <literal type="number" pos:start="273:69" pos:end="273:69">0</literal></expr>)</condition> <block pos:start="273:72" pos:end="279:17">{<block_content pos:start="275:21" pos:end="277:30">

                    <expr_stmt pos:start="275:21" pos:end="275:46"><expr pos:start="275:21" pos:end="275:45"><name pos:start="275:21" pos:end="275:23">err</name> <operator pos:start="275:25" pos:end="275:25">=</operator> <name pos:start="275:27" pos:end="275:45">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                    <goto pos:start="277:21" pos:end="277:30">goto <name pos:start="277:26" pos:end="277:29">fail</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="283:13" pos:end="283:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="289:9" pos:end="291:22"><if pos:start="289:9" pos:end="291:22">if <condition pos:start="289:12" pos:end="289:56">(<expr pos:start="289:13" pos:end="289:55"><operator pos:start="289:13" pos:end="289:13">(</operator><name pos:start="289:14" pos:end="289:16">err</name> <operator pos:start="289:18" pos:end="289:18">=</operator> <call pos:start="289:20" pos:end="289:54"><name pos:start="289:20" pos:end="289:42">rtsp_open_transport_ctx</name><argument_list pos:start="289:43" pos:end="289:54">(<argument pos:start="289:44" pos:end="289:44"><expr pos:start="289:44" pos:end="289:44"><name pos:start="289:44" pos:end="289:44">s</name></expr></argument>, <argument pos:start="289:47" pos:end="289:53"><expr pos:start="289:47" pos:end="289:53"><name pos:start="289:47" pos:end="289:53">rtsp_st</name></expr></argument>)</argument_list></call><operator pos:start="289:55" pos:end="289:55">)</operator></expr>)</condition><block type="pseudo" pos:start="291:13" pos:end="291:22"><block_content pos:start="291:13" pos:end="291:22">

            <goto pos:start="291:13" pos:end="291:22">goto <name pos:start="291:18" pos:end="291:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="297:5" pos:end="299:34"><if pos:start="297:5" pos:end="299:34">if <condition pos:start="297:8" pos:end="297:44">(<expr pos:start="297:9" pos:end="297:43"><name pos:start="297:9" pos:end="297:23"><name pos:start="297:9" pos:end="297:10">rt</name><operator pos:start="297:11" pos:end="297:12">-&gt;</operator><name pos:start="297:13" pos:end="297:23">server_type</name></name> <operator pos:start="297:25" pos:end="297:26">==</operator> <name pos:start="297:28" pos:end="297:43">RTSP_SERVER_REAL</name></expr>)</condition><block type="pseudo" pos:start="299:9" pos:end="299:34"><block_content pos:start="299:9" pos:end="299:34">

        <expr_stmt pos:start="299:9" pos:end="299:34"><expr pos:start="299:9" pos:end="299:33"><name pos:start="299:9" pos:end="299:29"><name pos:start="299:9" pos:end="299:10">rt</name><operator pos:start="299:11" pos:end="299:12">-&gt;</operator><name pos:start="299:13" pos:end="299:29">need_subscription</name></name> <operator pos:start="299:31" pos:end="299:31">=</operator> <literal type="number" pos:start="299:33" pos:end="299:33">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="303:5" pos:end="303:13">return <expr pos:start="303:12" pos:end="303:12"><literal type="number" pos:start="303:12" pos:end="303:12">0</literal></expr>;</return>



<label pos:start="307:1" pos:end="307:5"><name pos:start="307:1" pos:end="307:4">fail</name>:</label>

    <for pos:start="309:5" pos:end="319:5">for <control pos:start="309:9" pos:end="309:41">(<init pos:start="309:10" pos:end="309:13"><expr pos:start="309:10" pos:end="309:12"><name pos:start="309:10" pos:end="309:10">i</name><operator pos:start="309:11" pos:end="309:11">=</operator><literal type="number" pos:start="309:12" pos:end="309:12">0</literal></expr>;</init> <condition pos:start="309:15" pos:end="309:36"><expr pos:start="309:15" pos:end="309:35"><name pos:start="309:15" pos:end="309:15">i</name><operator pos:start="309:16" pos:end="309:16">&lt;</operator><name pos:start="309:17" pos:end="309:35"><name pos:start="309:17" pos:end="309:18">rt</name><operator pos:start="309:19" pos:end="309:20">-&gt;</operator><name pos:start="309:21" pos:end="309:35">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="309:38" pos:end="309:40"><expr pos:start="309:38" pos:end="309:40"><name pos:start="309:38" pos:end="309:38">i</name><operator pos:start="309:39" pos:end="309:40">++</operator></expr></incr>)</control> <block pos:start="309:43" pos:end="319:5">{<block_content pos:start="311:9" pos:end="317:9">

        <if_stmt pos:start="311:9" pos:end="317:9"><if pos:start="311:9" pos:end="317:9">if <condition pos:start="311:12" pos:end="311:44">(<expr pos:start="311:13" pos:end="311:43"><name pos:start="311:13" pos:end="311:31"><name pos:start="311:13" pos:end="311:14">rt</name><operator pos:start="311:15" pos:end="311:16">-&gt;</operator><name pos:start="311:17" pos:end="311:28">rtsp_streams</name><index pos:start="311:29" pos:end="311:31">[<expr pos:start="311:30" pos:end="311:30"><name pos:start="311:30" pos:end="311:30">i</name></expr>]</index></name><operator pos:start="311:32" pos:end="311:33">-&gt;</operator><name pos:start="311:34" pos:end="311:43">rtp_handle</name></expr>)</condition> <block pos:start="311:46" pos:end="317:9">{<block_content pos:start="313:13" pos:end="315:51">

            <expr_stmt pos:start="313:13" pos:end="313:55"><expr pos:start="313:13" pos:end="313:54"><call pos:start="313:13" pos:end="313:54"><name pos:start="313:13" pos:end="313:21">url_close</name><argument_list pos:start="313:22" pos:end="313:54">(<argument pos:start="313:23" pos:end="313:53"><expr pos:start="313:23" pos:end="313:53"><name pos:start="313:23" pos:end="313:41"><name pos:start="313:23" pos:end="313:24">rt</name><operator pos:start="313:25" pos:end="313:26">-&gt;</operator><name pos:start="313:27" pos:end="313:38">rtsp_streams</name><index pos:start="313:39" pos:end="313:41">[<expr pos:start="313:40" pos:end="313:40"><name pos:start="313:40" pos:end="313:40">i</name></expr>]</index></name><operator pos:start="313:42" pos:end="313:43">-&gt;</operator><name pos:start="313:44" pos:end="313:53">rtp_handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:51"><expr pos:start="315:13" pos:end="315:50"><name pos:start="315:13" pos:end="315:31"><name pos:start="315:13" pos:end="315:14">rt</name><operator pos:start="315:15" pos:end="315:16">-&gt;</operator><name pos:start="315:17" pos:end="315:28">rtsp_streams</name><index pos:start="315:29" pos:end="315:31">[<expr pos:start="315:30" pos:end="315:30"><name pos:start="315:30" pos:end="315:30">i</name></expr>]</index></name><operator pos:start="315:32" pos:end="315:33">-&gt;</operator><name pos:start="315:34" pos:end="315:43">rtp_handle</name> <operator pos:start="315:45" pos:end="315:45">=</operator> <name pos:start="315:47" pos:end="315:50">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="321:5" pos:end="321:15">return <expr pos:start="321:12" pos:end="321:14"><name pos:start="321:12" pos:end="321:14">err</name></expr>;</return>

</block_content>}</block>
</unit>
