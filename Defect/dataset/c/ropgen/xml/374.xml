<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/374.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">CharDriverState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:41">qemu_chr_open_tty</name><parameter_list pos:start="1:42" pos:end="1:57">(<parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:52"><name pos:start="1:43" pos:end="1:50">QemuOpts</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">opts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:15">

    <decl_stmt pos:start="5:5" pos:end="5:54"><decl pos:start="5:5" pos:end="5:53"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:24">filename</name> <init pos:start="5:26" pos:end="5:53">= <expr pos:start="5:28" pos:end="5:53"><call pos:start="5:28" pos:end="5:53"><name pos:start="5:28" pos:end="5:39">qemu_opt_get</name><argument_list pos:start="5:40" pos:end="5:53">(<argument pos:start="5:41" pos:end="5:44"><expr pos:start="5:41" pos:end="5:44"><name pos:start="5:41" pos:end="5:44">opts</name></expr></argument>, <argument pos:start="5:47" pos:end="5:52"><expr pos:start="5:47" pos:end="5:52"><literal type="string" pos:start="5:47" pos:end="5:52">"path"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">CharDriverState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">chr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">fd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:50"><expr pos:start="13:5" pos:end="13:49"><call pos:start="13:5" pos:end="13:49"><name pos:start="13:5" pos:end="13:7">TFR</name><argument_list pos:start="13:8" pos:end="13:49">(<argument pos:start="13:9" pos:end="13:48"><expr pos:start="13:9" pos:end="13:48"><name pos:start="13:9" pos:end="13:10">fd</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:48"><name pos:start="13:14" pos:end="13:17">open</name><argument_list pos:start="13:18" pos:end="13:48">(<argument pos:start="13:19" pos:end="13:26"><expr pos:start="13:19" pos:end="13:26"><name pos:start="13:19" pos:end="13:26">filename</name></expr></argument>, <argument pos:start="13:29" pos:end="13:47"><expr pos:start="13:29" pos:end="13:47"><name pos:start="13:29" pos:end="13:34">O_RDWR</name> <operator pos:start="13:36" pos:end="13:36">|</operator> <name pos:start="13:38" pos:end="13:47">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:15">(<expr pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:10">fd</name> <operator pos:start="15:12" pos:end="15:12">&lt;</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>)</condition> <block pos:start="15:17" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:20">

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><call pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:19">tty_serial_init</name><argument_list pos:start="21:20" pos:end="21:42">(<argument pos:start="21:21" pos:end="21:22"><expr pos:start="21:21" pos:end="21:22"><name pos:start="21:21" pos:end="21:22">fd</name></expr></argument>, <argument pos:start="21:25" pos:end="21:30"><expr pos:start="21:25" pos:end="21:30"><literal type="number" pos:start="21:25" pos:end="21:30">115200</literal></expr></argument>, <argument pos:start="21:33" pos:end="21:35"><expr pos:start="21:33" pos:end="21:35"><literal type="char" pos:start="21:33" pos:end="21:35">'N'</literal></expr></argument>, <argument pos:start="21:38" pos:end="21:38"><expr pos:start="21:38" pos:end="21:38"><literal type="number" pos:start="21:38" pos:end="21:38">8</literal></expr></argument>, <argument pos:start="21:41" pos:end="21:41"><expr pos:start="21:41" pos:end="21:41"><literal type="number" pos:start="21:41" pos:end="21:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:7">chr</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:34"><name pos:start="23:11" pos:end="23:26">qemu_chr_open_fd</name><argument_list pos:start="23:27" pos:end="23:34">(<argument pos:start="23:28" pos:end="23:29"><expr pos:start="23:28" pos:end="23:29"><name pos:start="23:28" pos:end="23:29">fd</name></expr></argument>, <argument pos:start="23:32" pos:end="23:33"><expr pos:start="23:32" pos:end="23:33"><name pos:start="23:32" pos:end="23:33">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:13">(<expr pos:start="25:9" pos:end="25:12"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:12">chr</name></expr>)</condition> <block pos:start="25:15" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:20">

        <expr_stmt pos:start="27:9" pos:end="27:18"><expr pos:start="27:9" pos:end="27:17"><call pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:13">close</name><argument_list pos:start="27:14" pos:end="27:17">(<argument pos:start="27:15" pos:end="27:16"><expr pos:start="27:15" pos:end="27:16"><name pos:start="27:15" pos:end="27:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:20">return <expr pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:7">chr</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:18">chr_ioctl</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:37">tty_serial_ioctl</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:7">chr</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:18">chr_close</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:39">qemu_chr_close_tty</name></expr>;</expr_stmt>

    <return pos:start="37:5" pos:end="37:15">return <expr pos:start="37:12" pos:end="37:14"><name pos:start="37:12" pos:end="37:14">chr</name></expr>;</return>

</block_content>}</block></function>
</unit>
