<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26397.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:15"><name pos:start="1:1" pos:end="1:13">CPUSPARCState</name> <modifier pos:start="1:15" pos:end="1:15">*</modifier></type><name pos:start="1:16" pos:end="1:29">cpu_sparc_init</name><parameter_list pos:start="1:30" pos:end="1:52">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:42"><specifier pos:start="1:31" pos:end="1:35">const</specifier> <name pos:start="1:37" pos:end="1:40">char</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:51">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:15">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">SPARCCPU</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">CPUSPARCState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">env</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:48"><expr pos:start="11:5" pos:end="11:47"><name pos:start="11:5" pos:end="11:7">cpu</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:47"><name pos:start="11:11" pos:end="11:19">SPARC_CPU</name><argument_list pos:start="11:20" pos:end="11:47">(<argument pos:start="11:21" pos:end="11:46"><expr pos:start="11:21" pos:end="11:46"><call pos:start="11:21" pos:end="11:46"><name pos:start="11:21" pos:end="11:30">object_new</name><argument_list pos:start="11:31" pos:end="11:46">(<argument pos:start="11:32" pos:end="11:45"><expr pos:start="11:32" pos:end="11:45"><name pos:start="11:32" pos:end="11:45">TYPE_SPARC_CPU</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:7">env</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">&amp;</operator><name pos:start="13:12" pos:end="13:19"><name pos:start="13:12" pos:end="13:14">cpu</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:19">env</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><call pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:30">gen_intermediate_code_init</name><argument_list pos:start="17:31" pos:end="17:35">(<argument pos:start="17:32" pos:end="17:34"><expr pos:start="17:32" pos:end="17:34"><name pos:start="17:32" pos:end="17:34">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:47">(<expr pos:start="21:9" pos:end="21:46"><call pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:26">cpu_sparc_register</name><argument_list pos:start="21:27" pos:end="21:42">(<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">env</name></expr></argument>, <argument pos:start="21:33" pos:end="21:41"><expr pos:start="21:33" pos:end="21:41"><name pos:start="21:33" pos:end="21:41">cpu_model</name></expr></argument>)</argument_list></call> <operator pos:start="21:44" pos:end="21:44">&lt;</operator> <literal type="number" pos:start="21:46" pos:end="21:46">0</literal></expr>)</condition> <block pos:start="21:49" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:20">

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><call pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:21">object_delete</name><argument_list pos:start="23:22" pos:end="23:34">(<argument pos:start="23:23" pos:end="23:33"><expr pos:start="23:23" pos:end="23:33"><call pos:start="23:23" pos:end="23:33"><name pos:start="23:23" pos:end="23:28">OBJECT</name><argument_list pos:start="23:29" pos:end="23:33">(<argument pos:start="23:30" pos:end="23:32"><expr pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:32">cpu</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:20">return <expr pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><call pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:18">qemu_init_vcpu</name><argument_list pos:start="29:19" pos:end="29:23">(<argument pos:start="29:20" pos:end="29:22"><expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="33:5" pos:end="33:15">return <expr pos:start="33:12" pos:end="33:14"><name pos:start="33:12" pos:end="33:14">env</name></expr>;</return>

</block_content>}</block></function>
</unit>
