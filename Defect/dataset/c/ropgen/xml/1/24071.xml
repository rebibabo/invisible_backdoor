<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24071.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mjpeg_decode_scan</name><parameter_list pos:start="1:29" pos:end="3:81">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:47">MJpegDecodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:69">nb_components</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:77"><decl pos:start="1:72" pos:end="1:77"><type pos:start="1:72" pos:end="1:77"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:77">Ah</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:85"><decl pos:start="1:80" pos:end="1:85"><type pos:start="1:80" pos:end="1:85"><name pos:start="1:80" pos:end="1:82">int</name></type> <name pos:start="1:84" pos:end="1:85">Al</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:54"><decl pos:start="3:30" pos:end="3:54"><type pos:start="3:30" pos:end="3:54"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">uint8_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:54">mb_bitmask</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:80"><decl pos:start="3:57" pos:end="3:80"><type pos:start="3:57" pos:end="3:80"><specifier pos:start="3:57" pos:end="3:61">const</specifier> <name pos:start="3:63" pos:end="3:69">AVFrame</name> <modifier pos:start="3:71" pos:end="3:71">*</modifier></type><name pos:start="3:72" pos:end="3:80">reference</name></decl></parameter>)</parameter_list><block pos:start="3:82" pos:end="179:13">{<block_content pos:start="5:5" pos:end="179:13">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:15">mb_x</name></decl>, <decl pos:start="5:18" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:21">mb_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:11">uint8_t</name><modifier pos:start="7:12" pos:end="7:12">*</modifier></type> <name pos:start="7:14" pos:end="7:33"><name pos:start="7:14" pos:end="7:17">data</name><index pos:start="7:18" pos:end="7:33">[<expr pos:start="7:19" pos:end="7:32"><name pos:start="7:19" pos:end="7:32">MAX_COMPONENTS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:49"><name pos:start="9:20" pos:end="9:33">reference_data</name><index pos:start="9:34" pos:end="9:49">[<expr pos:start="9:35" pos:end="9:48"><name pos:start="9:35" pos:end="9:48">MAX_COMPONENTS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:32"><name pos:start="11:9" pos:end="11:16">linesize</name><index pos:start="11:17" pos:end="11:32">[<expr pos:start="11:18" pos:end="11:31"><name pos:start="11:18" pos:end="11:31">MAX_COMPONENTS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">GetBitContext</name></type> <name pos:start="13:19" pos:end="13:31">mb_bitmask_gb</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="179:13"><if pos:start="17:5" pos:end="179:13">if <condition pos:start="17:8" pos:end="17:19">(<expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:18">mb_bitmask</name></expr>)</condition> <block pos:start="17:21" pos:end="179:13">{<block_content pos:start="19:9" pos:end="179:13">

        <expr_stmt pos:start="19:9" pos:end="19:76"><expr pos:start="19:9" pos:end="19:75"><call pos:start="19:9" pos:end="19:75"><name pos:start="19:9" pos:end="19:21">init_get_bits</name><argument_list pos:start="19:22" pos:end="19:75">(<argument pos:start="19:23" pos:end="19:36"><expr pos:start="19:23" pos:end="19:36"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:36">mb_bitmask_gb</name></expr></argument>, <argument pos:start="19:39" pos:end="19:48"><expr pos:start="19:39" pos:end="19:48"><name pos:start="19:39" pos:end="19:48">mb_bitmask</name></expr></argument>, <argument pos:start="19:51" pos:end="19:74"><expr pos:start="19:51" pos:end="19:74"><name pos:start="19:51" pos:end="19:61"><name pos:start="19:51" pos:end="19:51">s</name><operator pos:start="19:52" pos:end="19:53">-&gt;</operator><name pos:start="19:54" pos:end="19:61">mb_width</name></name><operator pos:start="19:62" pos:end="19:62">*</operator><name pos:start="19:63" pos:end="19:74"><name pos:start="19:63" pos:end="19:63">s</name><operator pos:start="19:64" pos:end="19:65">-&gt;</operator><name pos:start="19:66" pos:end="19:74">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <if_stmt pos:start="24:5" pos:end="179:13"><if pos:start="24:5" pos:end="179:13">if<condition pos:start="24:7" pos:end="24:59">(<expr pos:start="24:8" pos:end="24:58"><name pos:start="24:8" pos:end="24:17"><name pos:start="24:8" pos:end="24:8">s</name><operator pos:start="24:9" pos:end="24:10">-&gt;</operator><name pos:start="24:11" pos:end="24:17">flipped</name></name> <operator pos:start="24:19" pos:end="24:20">&amp;&amp;</operator> <name pos:start="24:22" pos:end="24:36"><name pos:start="24:22" pos:end="24:22">s</name><operator pos:start="24:23" pos:end="24:24">-&gt;</operator><name pos:start="24:25" pos:end="24:29">avctx</name><operator pos:start="24:30" pos:end="24:31">-&gt;</operator><name pos:start="24:32" pos:end="24:36">flags</name></name> <operator pos:start="24:38" pos:end="24:38">&amp;</operator> <name pos:start="24:40" pos:end="24:58">CODEC_FLAG_EMU_EDGE</name></expr>)</condition> <block pos:start="24:61" pos:end="179:13">{<block_content pos:start="26:9" pos:end="179:13">

        <expr_stmt pos:start="26:9" pos:end="26:93"><expr pos:start="26:9" pos:end="26:92"><call pos:start="26:9" pos:end="26:92"><name pos:start="26:9" pos:end="26:14">av_log</name><argument_list pos:start="26:15" pos:end="26:92">(<argument pos:start="26:16" pos:end="26:23"><expr pos:start="26:16" pos:end="26:23"><name pos:start="26:16" pos:end="26:23"><name pos:start="26:16" pos:end="26:16">s</name><operator pos:start="26:17" pos:end="26:18">-&gt;</operator><name pos:start="26:19" pos:end="26:23">avctx</name></name></expr></argument>, <argument pos:start="26:26" pos:end="26:37"><expr pos:start="26:26" pos:end="26:37"><name pos:start="26:26" pos:end="26:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="26:40" pos:end="26:91"><expr pos:start="26:40" pos:end="26:91"><literal type="string" pos:start="26:40" pos:end="26:91">"Can not flip image with CODEC_FLAG_EMU_EDGE set!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="28:9" pos:end="28:23"><expr pos:start="28:9" pos:end="28:22"><name pos:start="28:9" pos:end="28:18"><name pos:start="28:9" pos:end="28:9">s</name><operator pos:start="28:10" pos:end="28:11">-&gt;</operator><name pos:start="28:12" pos:end="28:18">flipped</name></name> <operator pos:start="28:20" pos:end="28:20">=</operator> <literal type="number" pos:start="28:22" pos:end="28:22">0</literal></expr>;</expr_stmt>


    <for pos:start="31:5" pos:end="179:13">for<control pos:start="31:8" pos:end="31:36">(<init pos:start="31:9" pos:end="31:12"><expr pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:9">i</name><operator pos:start="31:10" pos:end="31:10">=</operator><literal type="number" pos:start="31:11" pos:end="31:11">0</literal></expr>;</init> <condition pos:start="31:14" pos:end="31:31"><expr pos:start="31:14" pos:end="31:30"><name pos:start="31:14" pos:end="31:14">i</name> <operator pos:start="31:16" pos:end="31:16">&lt;</operator> <name pos:start="31:18" pos:end="31:30">nb_components</name></expr>;</condition> <incr pos:start="31:33" pos:end="31:35"><expr pos:start="31:33" pos:end="31:35"><name pos:start="31:33" pos:end="31:33">i</name><operator pos:start="31:34" pos:end="31:35">++</operator></expr></incr>)</control> <block pos:start="31:38" pos:end="179:13">{<block_content pos:start="33:9" pos:end="179:13">

        <decl_stmt pos:start="33:9" pos:end="33:33"><decl pos:start="33:9" pos:end="33:32"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:13">c</name> <init pos:start="33:15" pos:end="33:32">= <expr pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:29">comp_index</name><index pos:start="33:30" pos:end="33:32">[<expr pos:start="33:31" pos:end="33:31"><name pos:start="33:31" pos:end="33:31">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:42"><expr pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:12">data</name><index pos:start="35:13" pos:end="35:15">[<expr pos:start="35:14" pos:end="35:14"><name pos:start="35:14" pos:end="35:14">c</name></expr>]</index></name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:41"><name pos:start="35:19" pos:end="35:19">s</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:32">picture_ptr</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:38">data</name><index pos:start="35:39" pos:end="35:41">[<expr pos:start="35:40" pos:end="35:40"><name pos:start="35:40" pos:end="35:40">c</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:66"><expr pos:start="37:9" pos:end="37:65"><name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:22">reference_data</name><index pos:start="37:23" pos:end="37:25">[<expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">c</name></expr>]</index></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <ternary pos:start="37:29" pos:end="37:65"><condition pos:start="37:29" pos:end="37:39"><expr pos:start="37:29" pos:end="37:37"><name pos:start="37:29" pos:end="37:37">reference</name></expr> ?</condition><then pos:start="37:41" pos:end="37:58"> <expr pos:start="37:41" pos:end="37:58"><name pos:start="37:41" pos:end="37:58"><name pos:start="37:41" pos:end="37:49">reference</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:55">data</name><index pos:start="37:56" pos:end="37:58">[<expr pos:start="37:57" pos:end="37:57"><name pos:start="37:57" pos:end="37:57">c</name></expr>]</index></name></expr> </then><else pos:start="37:60" pos:end="37:65">: <expr pos:start="37:62" pos:end="37:65"><name pos:start="37:62" pos:end="37:65">NULL</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:16">linesize</name><index pos:start="39:17" pos:end="39:19">[<expr pos:start="39:18" pos:end="39:18"><name pos:start="39:18" pos:end="39:18">c</name></expr>]</index></name><operator pos:start="39:20" pos:end="39:20">=</operator><name pos:start="39:21" pos:end="39:34"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:31">linesize</name><index pos:start="39:32" pos:end="39:34">[<expr pos:start="39:33" pos:end="39:33"><name pos:start="39:33" pos:end="39:33">c</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:25">coefs_finished</name><index pos:start="41:26" pos:end="41:28">[<expr pos:start="41:27" pos:end="41:27"><name pos:start="41:27" pos:end="41:27">c</name></expr>]</index></name> <operator pos:start="41:30" pos:end="41:31">|=</operator> <literal type="number" pos:start="41:33" pos:end="41:33">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="179:13"><if pos:start="43:9" pos:end="179:13">if<condition pos:start="43:11" pos:end="43:22">(<expr pos:start="43:12" pos:end="43:21"><name pos:start="43:12" pos:end="43:21"><name pos:start="43:12" pos:end="43:12">s</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:21">flipped</name></name></expr>)</condition> <block pos:start="43:24" pos:end="179:13">{<block_content pos:start="47:13" pos:end="179:13">

            <comment type="line" pos:start="45:13" pos:end="45:66">//picture should be flipped upside-down for this codec</comment>

            <decl_stmt pos:start="47:13" pos:end="47:110"><decl pos:start="47:13" pos:end="47:109"><type pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:15">int</name></type> <name pos:start="47:17" pos:end="47:22">offset</name> <init pos:start="47:24" pos:end="47:109">= <expr pos:start="47:26" pos:end="47:109"><operator pos:start="47:26" pos:end="47:26">(</operator><name pos:start="47:27" pos:end="47:37"><name pos:start="47:27" pos:end="47:34">linesize</name><index pos:start="47:35" pos:end="47:37">[<expr pos:start="47:36" pos:end="47:36"><name pos:start="47:36" pos:end="47:36">c</name></expr>]</index></name> <operator pos:start="47:39" pos:end="47:39">*</operator> <operator pos:start="47:41" pos:end="47:41">(</operator><name pos:start="47:42" pos:end="47:55"><name pos:start="47:42" pos:end="47:42">s</name><operator pos:start="47:43" pos:end="47:44">-&gt;</operator><name pos:start="47:45" pos:end="47:52">v_scount</name><index pos:start="47:53" pos:end="47:55">[<expr pos:start="47:54" pos:end="47:54"><name pos:start="47:54" pos:end="47:54">i</name></expr>]</index></name> <operator pos:start="47:57" pos:end="47:57">*</operator> <operator pos:start="47:59" pos:end="47:59">(</operator><literal type="number" pos:start="47:60" pos:end="47:60">8</literal> <operator pos:start="47:62" pos:end="47:62">*</operator> <name pos:start="47:64" pos:end="47:75"><name pos:start="47:64" pos:end="47:64">s</name><operator pos:start="47:65" pos:end="47:66">-&gt;</operator><name pos:start="47:67" pos:end="47:75">mb_height</name></name> <operator pos:start="47:77" pos:end="47:77">-</operator><operator pos:start="47:78" pos:end="47:78">(</operator><operator pos:start="47:79" pos:end="47:79">(</operator><name pos:start="47:80" pos:end="47:88"><name pos:start="47:80" pos:end="47:80">s</name><operator pos:start="47:81" pos:end="47:82">-&gt;</operator><name pos:start="47:83" pos:end="47:88">height</name></name><operator pos:start="47:89" pos:end="47:89">/</operator><name pos:start="47:90" pos:end="47:97"><name pos:start="47:90" pos:end="47:90">s</name><operator pos:start="47:91" pos:end="47:92">-&gt;</operator><name pos:start="47:93" pos:end="47:97">v_max</name></name><operator pos:start="47:98" pos:end="47:98">)</operator><operator pos:start="47:99" pos:end="47:99">&amp;</operator><literal type="number" pos:start="47:100" pos:end="47:100">7</literal><operator pos:start="47:101" pos:end="47:101">)</operator><operator pos:start="47:102" pos:end="47:102">)</operator> <operator pos:start="47:104" pos:end="47:104">-</operator> <literal type="number" pos:start="47:106" pos:end="47:106">1</literal> <operator pos:start="47:108" pos:end="47:108">)</operator><operator pos:start="47:109" pos:end="47:109">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:30"><expr pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:16">data</name><index pos:start="49:17" pos:end="49:19">[<expr pos:start="49:18" pos:end="49:18"><name pos:start="49:18" pos:end="49:18">c</name></expr>]</index></name> <operator pos:start="49:21" pos:end="49:22">+=</operator> <name pos:start="49:24" pos:end="49:29">offset</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:40"><expr pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:26">reference_data</name><index pos:start="51:27" pos:end="51:29">[<expr pos:start="51:28" pos:end="51:28"><name pos:start="51:28" pos:end="51:28">c</name></expr>]</index></name> <operator pos:start="51:31" pos:end="51:32">+=</operator> <name pos:start="51:34" pos:end="51:39">offset</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:30"><expr pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:20">linesize</name><index pos:start="53:21" pos:end="53:23">[<expr pos:start="53:22" pos:end="53:22"><name pos:start="53:22" pos:end="53:22">c</name></expr>]</index></name> <operator pos:start="53:25" pos:end="53:26">*=</operator> <operator pos:start="53:28" pos:end="53:28">-</operator><literal type="number" pos:start="53:29" pos:end="53:29">1</literal></expr>;</expr_stmt>





    <for pos:start="59:5" pos:end="179:13">for<control pos:start="59:8" pos:end="59:46">(<init pos:start="59:9" pos:end="59:17"><expr pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:12">mb_y</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <literal type="number" pos:start="59:16" pos:end="59:16">0</literal></expr>;</init> <condition pos:start="59:19" pos:end="59:38"><expr pos:start="59:19" pos:end="59:37"><name pos:start="59:19" pos:end="59:22">mb_y</name> <operator pos:start="59:24" pos:end="59:24">&lt;</operator> <name pos:start="59:26" pos:end="59:37"><name pos:start="59:26" pos:end="59:26">s</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:37">mb_height</name></name></expr>;</condition> <incr pos:start="59:40" pos:end="59:45"><expr pos:start="59:40" pos:end="59:45"><name pos:start="59:40" pos:end="59:43">mb_y</name><operator pos:start="59:44" pos:end="59:45">++</operator></expr></incr>)</control> <block pos:start="59:48" pos:end="179:13">{<block_content pos:start="61:9" pos:end="179:13">

        <for pos:start="61:9" pos:end="179:13">for<control pos:start="61:12" pos:end="61:49">(<init pos:start="61:13" pos:end="61:21"><expr pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:16">mb_x</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>;</init> <condition pos:start="61:23" pos:end="61:41"><expr pos:start="61:23" pos:end="61:40"><name pos:start="61:23" pos:end="61:26">mb_x</name> <operator pos:start="61:28" pos:end="61:28">&lt;</operator> <name pos:start="61:30" pos:end="61:40"><name pos:start="61:30" pos:end="61:30">s</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:40">mb_width</name></name></expr>;</condition> <incr pos:start="61:43" pos:end="61:48"><expr pos:start="61:43" pos:end="61:48"><name pos:start="61:43" pos:end="61:46">mb_x</name><operator pos:start="61:47" pos:end="61:48">++</operator></expr></incr>)</control> <block pos:start="61:51" pos:end="179:13">{<block_content pos:start="63:13" pos:end="179:13">

            <decl_stmt pos:start="63:13" pos:end="63:73"><decl pos:start="63:13" pos:end="63:72"><type pos:start="63:13" pos:end="63:21"><specifier pos:start="63:13" pos:end="63:17">const</specifier> <name pos:start="63:19" pos:end="63:21">int</name></type> <name pos:start="63:23" pos:end="63:29">copy_mb</name> <init pos:start="63:31" pos:end="63:72">= <expr pos:start="63:33" pos:end="63:72"><name pos:start="63:33" pos:end="63:42">mb_bitmask</name> <operator pos:start="63:44" pos:end="63:45">&amp;&amp;</operator> <operator pos:start="63:47" pos:end="63:47">!</operator><call pos:start="63:48" pos:end="63:72"><name pos:start="63:48" pos:end="63:56">get_bits1</name><argument_list pos:start="63:57" pos:end="63:72">(<argument pos:start="63:58" pos:end="63:71"><expr pos:start="63:58" pos:end="63:71"><operator pos:start="63:58" pos:end="63:58">&amp;</operator><name pos:start="63:59" pos:end="63:71">mb_bitmask_gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="67:13" pos:end="69:55"><if pos:start="67:13" pos:end="69:55">if <condition pos:start="67:16" pos:end="67:57">(<expr pos:start="67:17" pos:end="67:56"><name pos:start="67:17" pos:end="67:35"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:35">restart_interval</name></name> <operator pos:start="67:37" pos:end="67:38">&amp;&amp;</operator> <operator pos:start="67:40" pos:end="67:40">!</operator><name pos:start="67:41" pos:end="67:56"><name pos:start="67:41" pos:end="67:41">s</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:56">restart_count</name></name></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:55"><block_content pos:start="69:17" pos:end="69:55">

                <expr_stmt pos:start="69:17" pos:end="69:55"><expr pos:start="69:17" pos:end="69:54"><name pos:start="69:17" pos:end="69:32"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:32">restart_count</name></name> <operator pos:start="69:34" pos:end="69:34">=</operator> <name pos:start="69:36" pos:end="69:54"><name pos:start="69:36" pos:end="69:36">s</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:54">restart_interval</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>







            <for pos:start="77:13" pos:end="179:13">for<control pos:start="77:16" pos:end="77:40">(<init pos:start="77:17" pos:end="77:20"><expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:17">i</name><operator pos:start="77:18" pos:end="77:18">=</operator><literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>;</init><condition pos:start="77:21" pos:end="77:36"><expr pos:start="77:21" pos:end="77:35"><name pos:start="77:21" pos:end="77:21">i</name><operator pos:start="77:22" pos:end="77:22">&lt;</operator><name pos:start="77:23" pos:end="77:35">nb_components</name></expr>;</condition><incr pos:start="77:37" pos:end="77:39"><expr pos:start="77:37" pos:end="77:39"><name pos:start="77:37" pos:end="77:37">i</name><operator pos:start="77:38" pos:end="77:39">++</operator></expr></incr>)</control> <block pos:start="77:42" pos:end="179:13">{<block_content pos:start="79:17" pos:end="179:13">

                <decl_stmt pos:start="79:17" pos:end="79:29"><decl pos:start="79:17" pos:end="79:28"><type pos:start="79:17" pos:end="79:25"><name pos:start="79:17" pos:end="79:23">uint8_t</name> <modifier pos:start="79:25" pos:end="79:25">*</modifier></type><name pos:start="79:26" pos:end="79:28">ptr</name></decl>;</decl_stmt>

                <decl_stmt pos:start="81:17" pos:end="81:40"><decl pos:start="81:17" pos:end="81:21"><type pos:start="81:17" pos:end="81:19"><name pos:start="81:17" pos:end="81:19">int</name></type> <name pos:start="81:21" pos:end="81:21">n</name></decl>, <decl pos:start="81:24" pos:end="81:24"><type ref="prev" pos:start="81:17" pos:end="81:19"/><name pos:start="81:24" pos:end="81:24">h</name></decl>, <decl pos:start="81:27" pos:end="81:27"><type ref="prev" pos:start="81:17" pos:end="81:19"/><name pos:start="81:27" pos:end="81:27">v</name></decl>, <decl pos:start="81:30" pos:end="81:30"><type ref="prev" pos:start="81:17" pos:end="81:19"/><name pos:start="81:30" pos:end="81:30">x</name></decl>, <decl pos:start="81:33" pos:end="81:33"><type ref="prev" pos:start="81:17" pos:end="81:19"/><name pos:start="81:33" pos:end="81:33">y</name></decl>, <decl pos:start="81:36" pos:end="81:36"><type ref="prev" pos:start="81:17" pos:end="81:19"/><name pos:start="81:36" pos:end="81:36">c</name></decl>, <decl pos:start="81:39" pos:end="81:39"><type ref="prev" pos:start="81:17" pos:end="81:19"/><name pos:start="81:39" pos:end="81:39">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="83:17" pos:end="83:33"><decl pos:start="83:17" pos:end="83:32"><type pos:start="83:17" pos:end="83:19"><name pos:start="83:17" pos:end="83:19">int</name></type> <name pos:start="83:21" pos:end="83:32">block_offset</name></decl>;</decl_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:36"><expr pos:start="85:17" pos:end="85:35"><name pos:start="85:17" pos:end="85:17">n</name> <operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:35"><name pos:start="85:21" pos:end="85:21">s</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:32">nb_blocks</name><index pos:start="85:33" pos:end="85:35">[<expr pos:start="85:34" pos:end="85:34"><name pos:start="85:34" pos:end="85:34">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:37"><expr pos:start="87:17" pos:end="87:36"><name pos:start="87:17" pos:end="87:17">c</name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:36"><name pos:start="87:21" pos:end="87:21">s</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:33">comp_index</name><index pos:start="87:34" pos:end="87:36">[<expr pos:start="87:35" pos:end="87:35"><name pos:start="87:35" pos:end="87:35">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:35"><expr pos:start="89:17" pos:end="89:34"><name pos:start="89:17" pos:end="89:17">h</name> <operator pos:start="89:19" pos:end="89:19">=</operator> <name pos:start="89:21" pos:end="89:34"><name pos:start="89:21" pos:end="89:21">s</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:31">h_scount</name><index pos:start="89:32" pos:end="89:34">[<expr pos:start="89:33" pos:end="89:33"><name pos:start="89:33" pos:end="89:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:35"><expr pos:start="91:17" pos:end="91:34"><name pos:start="91:17" pos:end="91:17">v</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:34"><name pos:start="91:21" pos:end="91:21">s</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:31">v_scount</name><index pos:start="91:32" pos:end="91:34">[<expr pos:start="91:33" pos:end="91:33"><name pos:start="91:33" pos:end="91:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:22"><expr pos:start="93:17" pos:end="93:21"><name pos:start="93:17" pos:end="93:17">x</name> <operator pos:start="93:19" pos:end="93:19">=</operator> <literal type="number" pos:start="93:21" pos:end="93:21">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:22"><expr pos:start="95:17" pos:end="95:21"><name pos:start="95:17" pos:end="95:17">y</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <literal type="number" pos:start="95:21" pos:end="95:21">0</literal></expr>;</expr_stmt>

                <for pos:start="97:17" pos:end="179:13">for<control pos:start="97:20" pos:end="97:32">(<init pos:start="97:21" pos:end="97:24"><expr pos:start="97:21" pos:end="97:23"><name pos:start="97:21" pos:end="97:21">j</name><operator pos:start="97:22" pos:end="97:22">=</operator><literal type="number" pos:start="97:23" pos:end="97:23">0</literal></expr>;</init><condition pos:start="97:25" pos:end="97:28"><expr pos:start="97:25" pos:end="97:27"><name pos:start="97:25" pos:end="97:25">j</name><operator pos:start="97:26" pos:end="97:26">&lt;</operator><name pos:start="97:27" pos:end="97:27">n</name></expr>;</condition><incr pos:start="97:29" pos:end="97:31"><expr pos:start="97:29" pos:end="97:31"><name pos:start="97:29" pos:end="97:29">j</name><operator pos:start="97:30" pos:end="97:31">++</operator></expr></incr>)</control> <block pos:start="97:34" pos:end="179:13">{<block_content pos:start="99:21" pos:end="179:13">

                    <expr_stmt pos:start="99:21" pos:end="101:78"><expr pos:start="99:21" pos:end="101:77"><name pos:start="99:21" pos:end="99:32">block_offset</name> <operator pos:start="99:34" pos:end="99:34">=</operator> <operator pos:start="99:36" pos:end="99:36">(</operator><operator pos:start="99:37" pos:end="99:37">(</operator><operator pos:start="99:38" pos:end="99:38">(</operator><name pos:start="99:39" pos:end="99:49"><name pos:start="99:39" pos:end="99:46">linesize</name><index pos:start="99:47" pos:end="99:49">[<expr pos:start="99:48" pos:end="99:48"><name pos:start="99:48" pos:end="99:48">c</name></expr>]</index></name> <operator pos:start="99:51" pos:end="99:51">*</operator> <operator pos:start="99:53" pos:end="99:53">(</operator><name pos:start="99:54" pos:end="99:54">v</name> <operator pos:start="99:56" pos:end="99:56">*</operator> <name pos:start="99:58" pos:end="99:61">mb_y</name> <operator pos:start="99:63" pos:end="99:63">+</operator> <name pos:start="99:65" pos:end="99:65">y</name><operator pos:start="99:66" pos:end="99:66">)</operator> <operator pos:start="99:68" pos:end="99:68">*</operator> <literal type="number" pos:start="99:70" pos:end="99:70">8</literal><operator pos:start="99:71" pos:end="99:71">)</operator> <operator pos:start="99:73" pos:end="99:73">+</operator>

                                     <operator pos:start="101:38" pos:end="101:38">(</operator><name pos:start="101:39" pos:end="101:39">h</name> <operator pos:start="101:41" pos:end="101:41">*</operator> <name pos:start="101:43" pos:end="101:46">mb_x</name> <operator pos:start="101:48" pos:end="101:48">+</operator> <name pos:start="101:50" pos:end="101:50">x</name><operator pos:start="101:51" pos:end="101:51">)</operator> <operator pos:start="101:53" pos:end="101:53">*</operator> <literal type="number" pos:start="101:55" pos:end="101:55">8</literal><operator pos:start="101:56" pos:end="101:56">)</operator> <operator pos:start="101:58" pos:end="101:59">&gt;&gt;</operator> <name pos:start="101:61" pos:end="101:76"><name pos:start="101:61" pos:end="101:61">s</name><operator pos:start="101:62" pos:end="101:63">-&gt;</operator><name pos:start="101:64" pos:end="101:68">avctx</name><operator pos:start="101:69" pos:end="101:70">-&gt;</operator><name pos:start="101:71" pos:end="101:76">lowres</name></name><operator pos:start="101:77" pos:end="101:77">)</operator></expr>;</expr_stmt>



                    <if_stmt pos:start="105:21" pos:end="107:57"><if pos:start="105:21" pos:end="107:57">if<condition pos:start="105:23" pos:end="105:56">(<expr pos:start="105:24" pos:end="105:55"><name pos:start="105:24" pos:end="105:36"><name pos:start="105:24" pos:end="105:24">s</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:36">interlaced</name></name> <operator pos:start="105:38" pos:end="105:39">&amp;&amp;</operator> <name pos:start="105:41" pos:end="105:55"><name pos:start="105:41" pos:end="105:41">s</name><operator pos:start="105:42" pos:end="105:43">-&gt;</operator><name pos:start="105:44" pos:end="105:55">bottom_field</name></name></expr>)</condition><block type="pseudo" pos:start="107:25" pos:end="107:57"><block_content pos:start="107:25" pos:end="107:57">

                        <expr_stmt pos:start="107:25" pos:end="107:57"><expr pos:start="107:25" pos:end="107:56"><name pos:start="107:25" pos:end="107:36">block_offset</name> <operator pos:start="107:38" pos:end="107:39">+=</operator> <name pos:start="107:41" pos:end="107:51"><name pos:start="107:41" pos:end="107:48">linesize</name><index pos:start="107:49" pos:end="107:51">[<expr pos:start="107:50" pos:end="107:50"><name pos:start="107:50" pos:end="107:50">c</name></expr>]</index></name> <operator pos:start="107:53" pos:end="107:54">&gt;&gt;</operator> <literal type="number" pos:start="107:56" pos:end="107:56">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:49"><expr pos:start="109:21" pos:end="109:48"><name pos:start="109:21" pos:end="109:23">ptr</name> <operator pos:start="109:25" pos:end="109:25">=</operator> <name pos:start="109:27" pos:end="109:33"><name pos:start="109:27" pos:end="109:30">data</name><index pos:start="109:31" pos:end="109:33">[<expr pos:start="109:32" pos:end="109:32"><name pos:start="109:32" pos:end="109:32">c</name></expr>]</index></name> <operator pos:start="109:35" pos:end="109:35">+</operator> <name pos:start="109:37" pos:end="109:48">block_offset</name></expr>;</expr_stmt>

                    <if_stmt pos:start="111:21" pos:end="179:13"><if pos:start="111:21" pos:end="179:13">if<condition pos:start="111:23" pos:end="111:39">(<expr pos:start="111:24" pos:end="111:38"><operator pos:start="111:24" pos:end="111:24">!</operator><name pos:start="111:25" pos:end="111:38"><name pos:start="111:25" pos:end="111:25">s</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:38">progressive</name></name></expr>)</condition> <block pos:start="111:41" pos:end="179:13">{<block_content pos:start="113:25" pos:end="179:13">

                        <if_stmt pos:start="113:25" pos:end="179:13"><if pos:start="113:25" pos:end="117:25">if <condition pos:start="113:28" pos:end="113:36">(<expr pos:start="113:29" pos:end="113:35"><name pos:start="113:29" pos:end="113:35">copy_mb</name></expr>)</condition> <block pos:start="113:38" pos:end="117:25">{<block_content pos:start="115:29" pos:end="115:115">

                            <expr_stmt pos:start="115:29" pos:end="115:115"><expr pos:start="115:29" pos:end="115:114"><call pos:start="115:29" pos:end="115:114"><name pos:start="115:29" pos:end="115:44">mjpeg_copy_block</name><argument_list pos:start="115:45" pos:end="115:114">(<argument pos:start="115:46" pos:end="115:48"><expr pos:start="115:46" pos:end="115:48"><name pos:start="115:46" pos:end="115:48">ptr</name></expr></argument>, <argument pos:start="115:51" pos:end="115:82"><expr pos:start="115:51" pos:end="115:82"><name pos:start="115:51" pos:end="115:67"><name pos:start="115:51" pos:end="115:64">reference_data</name><index pos:start="115:65" pos:end="115:67">[<expr pos:start="115:66" pos:end="115:66"><name pos:start="115:66" pos:end="115:66">c</name></expr>]</index></name> <operator pos:start="115:69" pos:end="115:69">+</operator> <name pos:start="115:71" pos:end="115:82">block_offset</name></expr></argument>, <argument pos:start="115:85" pos:end="115:95"><expr pos:start="115:85" pos:end="115:95"><name pos:start="115:85" pos:end="115:95"><name pos:start="115:85" pos:end="115:92">linesize</name><index pos:start="115:93" pos:end="115:95">[<expr pos:start="115:94" pos:end="115:94"><name pos:start="115:94" pos:end="115:94">c</name></expr>]</index></name></expr></argument>, <argument pos:start="115:98" pos:end="115:113"><expr pos:start="115:98" pos:end="115:113"><name pos:start="115:98" pos:end="115:113"><name pos:start="115:98" pos:end="115:98">s</name><operator pos:start="115:99" pos:end="115:100">-&gt;</operator><name pos:start="115:101" pos:end="115:105">avctx</name><operator pos:start="115:106" pos:end="115:107">-&gt;</operator><name pos:start="115:108" pos:end="115:113">lowres</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="117:27" pos:end="179:13">else <block pos:start="117:32" pos:end="179:13">{<block_content pos:start="119:25" pos:end="179:13">

                        <expr_stmt pos:start="119:25" pos:end="119:53"><expr pos:start="119:25" pos:end="119:52"><call pos:start="119:25" pos:end="119:52"><name pos:start="119:25" pos:end="119:42"><name pos:start="119:25" pos:end="119:25">s</name><operator pos:start="119:26" pos:end="119:27">-&gt;</operator><name pos:start="119:28" pos:end="119:30">dsp</name><operator pos:start="119:31" pos:end="119:31">.</operator><name pos:start="119:32" pos:end="119:42">clear_block</name></name><argument_list pos:start="119:43" pos:end="119:52">(<argument pos:start="119:44" pos:end="119:51"><expr pos:start="119:44" pos:end="119:51"><name pos:start="119:44" pos:end="119:51"><name pos:start="119:44" pos:end="119:44">s</name><operator pos:start="119:45" pos:end="119:46">-&gt;</operator><name pos:start="119:47" pos:end="119:51">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="121:25" pos:end="179:13"><if pos:start="121:25" pos:end="134:21">if<condition pos:start="121:27" pos:end="125:81">(<expr pos:start="121:28" pos:end="125:80"><call pos:start="121:28" pos:end="125:76"><name pos:start="121:28" pos:end="121:39">decode_block</name><argument_list pos:start="121:40" pos:end="125:76">(<argument pos:start="121:41" pos:end="121:41"><expr pos:start="121:41" pos:end="121:41"><name pos:start="121:41" pos:end="121:41">s</name></expr></argument>, <argument pos:start="121:44" pos:end="121:51"><expr pos:start="121:44" pos:end="121:51"><name pos:start="121:44" pos:end="121:51"><name pos:start="121:44" pos:end="121:44">s</name><operator pos:start="121:45" pos:end="121:46">-&gt;</operator><name pos:start="121:47" pos:end="121:51">block</name></name></expr></argument>, <argument pos:start="121:54" pos:end="121:54"><expr pos:start="121:54" pos:end="121:54"><name pos:start="121:54" pos:end="121:54">i</name></expr></argument>,

                                     <argument pos:start="123:38" pos:end="123:51"><expr pos:start="123:38" pos:end="123:51"><name pos:start="123:38" pos:end="123:51"><name pos:start="123:38" pos:end="123:38">s</name><operator pos:start="123:39" pos:end="123:40">-&gt;</operator><name pos:start="123:41" pos:end="123:48">dc_index</name><index pos:start="123:49" pos:end="123:51">[<expr pos:start="123:50" pos:end="123:50"><name pos:start="123:50" pos:end="123:50">i</name></expr>]</index></name></expr></argument>, <argument pos:start="123:54" pos:end="123:67"><expr pos:start="123:54" pos:end="123:67"><name pos:start="123:54" pos:end="123:67"><name pos:start="123:54" pos:end="123:54">s</name><operator pos:start="123:55" pos:end="123:56">-&gt;</operator><name pos:start="123:57" pos:end="123:64">ac_index</name><index pos:start="123:65" pos:end="123:67">[<expr pos:start="123:66" pos:end="123:66"><name pos:start="123:66" pos:end="123:66">i</name></expr>]</index></name></expr></argument>,

                                     <argument pos:start="125:38" pos:end="125:75"><expr pos:start="125:38" pos:end="125:75"><name pos:start="125:38" pos:end="125:75"><name pos:start="125:38" pos:end="125:38">s</name><operator pos:start="125:39" pos:end="125:40">-&gt;</operator><name pos:start="125:41" pos:end="125:54">quant_matrixes</name><index pos:start="125:55" pos:end="125:75">[ <expr pos:start="125:57" pos:end="125:73"><name pos:start="125:57" pos:end="125:73"><name pos:start="125:57" pos:end="125:57">s</name><operator pos:start="125:58" pos:end="125:59">-&gt;</operator><name pos:start="125:60" pos:end="125:70">quant_index</name><index pos:start="125:71" pos:end="125:73">[<expr pos:start="125:72" pos:end="125:72"><name pos:start="125:72" pos:end="125:72">c</name></expr>]</index></name></expr> ]</index></name></expr></argument>)</argument_list></call> <operator pos:start="125:78" pos:end="125:78">&lt;</operator> <literal type="number" pos:start="125:80" pos:end="125:80">0</literal></expr>)</condition> <block pos:start="125:83" pos:end="134:21">{<block_content pos:start="127:29" pos:end="131:68">

                            <expr_stmt pos:start="127:29" pos:end="127:92"><expr pos:start="127:29" pos:end="127:91"><call pos:start="127:29" pos:end="127:91"><name pos:start="127:29" pos:end="127:34">av_log</name><argument_list pos:start="127:35" pos:end="127:91">(<argument pos:start="127:36" pos:end="127:43"><expr pos:start="127:36" pos:end="127:43"><name pos:start="127:36" pos:end="127:43"><name pos:start="127:36" pos:end="127:36">s</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:43">avctx</name></name></expr></argument>, <argument pos:start="127:46" pos:end="127:57"><expr pos:start="127:46" pos:end="127:57"><name pos:start="127:46" pos:end="127:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="127:60" pos:end="127:78"><expr pos:start="127:60" pos:end="127:78"><literal type="string" pos:start="127:60" pos:end="127:78">"error y=%d x=%d\n"</literal></expr></argument>, <argument pos:start="127:81" pos:end="127:84"><expr pos:start="127:81" pos:end="127:84"><name pos:start="127:81" pos:end="127:84">mb_y</name></expr></argument>, <argument pos:start="127:87" pos:end="127:90"><expr pos:start="127:87" pos:end="127:90"><name pos:start="127:87" pos:end="127:90">mb_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="131:25" pos:end="131:68"><expr pos:start="131:25" pos:end="131:67"><call pos:start="131:25" pos:end="131:67"><name pos:start="131:25" pos:end="131:39"><name pos:start="131:25" pos:end="131:25">s</name><operator pos:start="131:26" pos:end="131:27">-&gt;</operator><name pos:start="131:28" pos:end="131:30">dsp</name><operator pos:start="131:31" pos:end="131:31">.</operator><name pos:start="131:32" pos:end="131:39">idct_put</name></name><argument_list pos:start="131:40" pos:end="131:67">(<argument pos:start="131:41" pos:end="131:43"><expr pos:start="131:41" pos:end="131:43"><name pos:start="131:41" pos:end="131:43">ptr</name></expr></argument>, <argument pos:start="131:46" pos:end="131:56"><expr pos:start="131:46" pos:end="131:56"><name pos:start="131:46" pos:end="131:56"><name pos:start="131:46" pos:end="131:53">linesize</name><index pos:start="131:54" pos:end="131:56">[<expr pos:start="131:55" pos:end="131:55"><name pos:start="131:55" pos:end="131:55">c</name></expr>]</index></name></expr></argument>, <argument pos:start="131:59" pos:end="131:66"><expr pos:start="131:59" pos:end="131:66"><name pos:start="131:59" pos:end="131:66"><name pos:start="131:59" pos:end="131:59">s</name><operator pos:start="131:60" pos:end="131:61">-&gt;</operator><name pos:start="131:62" pos:end="131:66">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


                    </block_content>}</block></if> <else pos:start="134:23" pos:end="179:13">else <block pos:start="134:28" pos:end="179:13">{<block_content pos:start="136:25" pos:end="179:13">

                        <decl_stmt pos:start="136:25" pos:end="136:93"><decl pos:start="136:25" pos:end="136:92"><type pos:start="136:25" pos:end="136:27"><name pos:start="136:25" pos:end="136:27">int</name></type> <name pos:start="136:29" pos:end="136:37">block_idx</name> <init pos:start="136:39" pos:end="136:92">= <expr pos:start="136:41" pos:end="136:92"><name pos:start="136:41" pos:end="136:58"><name pos:start="136:41" pos:end="136:41">s</name><operator pos:start="136:42" pos:end="136:43">-&gt;</operator><name pos:start="136:44" pos:end="136:55">block_stride</name><index pos:start="136:56" pos:end="136:58">[<expr pos:start="136:57" pos:end="136:57"><name pos:start="136:57" pos:end="136:57">c</name></expr>]</index></name> <operator pos:start="136:60" pos:end="136:60">*</operator> <operator pos:start="136:62" pos:end="136:62">(</operator><name pos:start="136:63" pos:end="136:63">v</name> <operator pos:start="136:65" pos:end="136:65">*</operator> <name pos:start="136:67" pos:end="136:70">mb_y</name> <operator pos:start="136:72" pos:end="136:72">+</operator> <name pos:start="136:74" pos:end="136:74">y</name><operator pos:start="136:75" pos:end="136:75">)</operator> <operator pos:start="136:77" pos:end="136:77">+</operator> <operator pos:start="136:79" pos:end="136:79">(</operator><name pos:start="136:80" pos:end="136:80">h</name> <operator pos:start="136:82" pos:end="136:82">*</operator> <name pos:start="136:84" pos:end="136:87">mb_x</name> <operator pos:start="136:89" pos:end="136:89">+</operator> <name pos:start="136:91" pos:end="136:91">x</name><operator pos:start="136:92" pos:end="136:92">)</operator></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="138:25" pos:end="138:65"><decl pos:start="138:25" pos:end="138:64"><type pos:start="138:25" pos:end="138:33"><name pos:start="138:25" pos:end="138:31">DCTELEM</name> <modifier pos:start="138:33" pos:end="138:33">*</modifier></type><name pos:start="138:34" pos:end="138:38">block</name> <init pos:start="138:40" pos:end="138:64">= <expr pos:start="138:42" pos:end="138:64"><name pos:start="138:42" pos:end="138:64"><name pos:start="138:42" pos:end="138:42">s</name><operator pos:start="138:43" pos:end="138:44">-&gt;</operator><name pos:start="138:45" pos:end="138:50">blocks</name><index pos:start="138:51" pos:end="138:53">[<expr pos:start="138:52" pos:end="138:52"><name pos:start="138:52" pos:end="138:52">c</name></expr>]</index><index pos:start="138:54" pos:end="138:64">[<expr pos:start="138:55" pos:end="138:63"><name pos:start="138:55" pos:end="138:63">block_idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="140:25" pos:end="179:13"><if pos:start="140:25" pos:end="142:108">if<condition pos:start="140:27" pos:end="140:30">(<expr pos:start="140:28" pos:end="140:29"><name pos:start="140:28" pos:end="140:29">Ah</name></expr>)</condition><block type="pseudo" pos:start="142:29" pos:end="142:108"><block_content pos:start="142:29" pos:end="142:108">

                            <expr_stmt pos:start="142:29" pos:end="142:108"><expr pos:start="142:29" pos:end="142:107"><name pos:start="142:29" pos:end="142:36"><name pos:start="142:29" pos:end="142:33">block</name><index pos:start="142:34" pos:end="142:36">[<expr pos:start="142:35" pos:end="142:35"><literal type="number" pos:start="142:35" pos:end="142:35">0</literal></expr>]</index></name> <operator pos:start="142:38" pos:end="142:39">+=</operator> <call pos:start="142:41" pos:end="142:57"><name pos:start="142:41" pos:end="142:49">get_bits1</name><argument_list pos:start="142:50" pos:end="142:57">(<argument pos:start="142:51" pos:end="142:56"><expr pos:start="142:51" pos:end="142:56"><operator pos:start="142:51" pos:end="142:51">&amp;</operator><name pos:start="142:52" pos:end="142:56"><name pos:start="142:52" pos:end="142:52">s</name><operator pos:start="142:53" pos:end="142:54">-&gt;</operator><name pos:start="142:55" pos:end="142:56">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="142:59" pos:end="142:59">*</operator> <name pos:start="142:61" pos:end="142:101"><name pos:start="142:61" pos:end="142:61">s</name><operator pos:start="142:62" pos:end="142:63">-&gt;</operator><name pos:start="142:64" pos:end="142:77">quant_matrixes</name><index pos:start="142:78" pos:end="142:98">[ <expr pos:start="142:80" pos:end="142:96"><name pos:start="142:80" pos:end="142:96"><name pos:start="142:80" pos:end="142:80">s</name><operator pos:start="142:81" pos:end="142:82">-&gt;</operator><name pos:start="142:83" pos:end="142:93">quant_index</name><index pos:start="142:94" pos:end="142:96">[<expr pos:start="142:95" pos:end="142:95"><name pos:start="142:95" pos:end="142:95">c</name></expr>]</index></name></expr> ]</index><index pos:start="142:99" pos:end="142:101">[<expr pos:start="142:100" pos:end="142:100"><literal type="number" pos:start="142:100" pos:end="142:100">0</literal></expr>]</index></name> <operator pos:start="142:103" pos:end="142:104">&lt;&lt;</operator> <name pos:start="142:106" pos:end="142:107">Al</name></expr>;</expr_stmt></block_content></block></if>

                        <if type="elseif" pos:start="144:25" pos:end="179:13">else if<condition pos:start="144:32" pos:end="144:131">(<expr pos:start="144:33" pos:end="144:130"><call pos:start="144:33" pos:end="144:126"><name pos:start="144:33" pos:end="144:53">decode_dc_progressive</name><argument_list pos:start="144:54" pos:end="144:126">(<argument pos:start="144:55" pos:end="144:55"><expr pos:start="144:55" pos:end="144:55"><name pos:start="144:55" pos:end="144:55">s</name></expr></argument>, <argument pos:start="144:58" pos:end="144:62"><expr pos:start="144:58" pos:end="144:62"><name pos:start="144:58" pos:end="144:62">block</name></expr></argument>, <argument pos:start="144:65" pos:end="144:65"><expr pos:start="144:65" pos:end="144:65"><name pos:start="144:65" pos:end="144:65">i</name></expr></argument>, <argument pos:start="144:68" pos:end="144:81"><expr pos:start="144:68" pos:end="144:81"><name pos:start="144:68" pos:end="144:81"><name pos:start="144:68" pos:end="144:68">s</name><operator pos:start="144:69" pos:end="144:70">-&gt;</operator><name pos:start="144:71" pos:end="144:78">dc_index</name><index pos:start="144:79" pos:end="144:81">[<expr pos:start="144:80" pos:end="144:80"><name pos:start="144:80" pos:end="144:80">i</name></expr>]</index></name></expr></argument>, <argument pos:start="144:84" pos:end="144:121"><expr pos:start="144:84" pos:end="144:121"><name pos:start="144:84" pos:end="144:121"><name pos:start="144:84" pos:end="144:84">s</name><operator pos:start="144:85" pos:end="144:86">-&gt;</operator><name pos:start="144:87" pos:end="144:100">quant_matrixes</name><index pos:start="144:101" pos:end="144:121">[ <expr pos:start="144:103" pos:end="144:119"><name pos:start="144:103" pos:end="144:119"><name pos:start="144:103" pos:end="144:103">s</name><operator pos:start="144:104" pos:end="144:105">-&gt;</operator><name pos:start="144:106" pos:end="144:116">quant_index</name><index pos:start="144:117" pos:end="144:119">[<expr pos:start="144:118" pos:end="144:118"><name pos:start="144:118" pos:end="144:118">c</name></expr>]</index></name></expr> ]</index></name></expr></argument>, <argument pos:start="144:124" pos:end="144:125"><expr pos:start="144:124" pos:end="144:125"><name pos:start="144:124" pos:end="144:125">Al</name></expr></argument>)</argument_list></call> <operator pos:start="144:128" pos:end="144:128">&lt;</operator> <literal type="number" pos:start="144:130" pos:end="144:130">0</literal></expr>)</condition> <block pos:start="144:133" pos:end="179:13">{<block_content pos:start="146:29" pos:end="179:13">

                            <expr_stmt pos:start="146:29" pos:end="146:92"><expr pos:start="146:29" pos:end="146:91"><call pos:start="146:29" pos:end="146:91"><name pos:start="146:29" pos:end="146:34">av_log</name><argument_list pos:start="146:35" pos:end="146:91">(<argument pos:start="146:36" pos:end="146:43"><expr pos:start="146:36" pos:end="146:43"><name pos:start="146:36" pos:end="146:43"><name pos:start="146:36" pos:end="146:36">s</name><operator pos:start="146:37" pos:end="146:38">-&gt;</operator><name pos:start="146:39" pos:end="146:43">avctx</name></name></expr></argument>, <argument pos:start="146:46" pos:end="146:57"><expr pos:start="146:46" pos:end="146:57"><name pos:start="146:46" pos:end="146:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="146:60" pos:end="146:78"><expr pos:start="146:60" pos:end="146:78"><literal type="string" pos:start="146:60" pos:end="146:78">"error y=%d x=%d\n"</literal></expr></argument>, <argument pos:start="146:81" pos:end="146:84"><expr pos:start="146:81" pos:end="146:84"><name pos:start="146:81" pos:end="146:84">mb_y</name></expr></argument>, <argument pos:start="146:87" pos:end="146:90"><expr pos:start="146:87" pos:end="146:90"><name pos:start="146:87" pos:end="146:90">mb_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




<comment type="line" pos:start="151:1" pos:end="151:90">//                    av_log(s-&gt;avctx, AV_LOG_DEBUG, "mb: %d %d processed\n", mb_y, mb_x);</comment>

<comment type="line" pos:start="153:1" pos:end="153:137">//av_log(NULL, AV_LOG_DEBUG, "%d %d %d %d %d %d %d %d \n", mb_x, mb_y, x, y, c, s-&gt;bottom_field, (v * mb_y + y) * 8, (h * mb_x + x) * 8);</comment>

                    <if_stmt pos:start="155:21" pos:end="179:13"><if pos:start="155:21" pos:end="179:13">if <condition pos:start="155:24" pos:end="155:33">(<expr pos:start="155:25" pos:end="155:32"><operator pos:start="155:25" pos:end="155:26">++</operator><name pos:start="155:27" pos:end="155:27">x</name> <operator pos:start="155:29" pos:end="155:30">==</operator> <name pos:start="155:32" pos:end="155:32">h</name></expr>)</condition> <block pos:start="155:35" pos:end="179:13">{<block_content pos:start="157:25" pos:end="179:13">

                        <expr_stmt pos:start="157:25" pos:end="157:30"><expr pos:start="157:25" pos:end="157:29"><name pos:start="157:25" pos:end="157:25">x</name> <operator pos:start="157:27" pos:end="157:27">=</operator> <literal type="number" pos:start="157:29" pos:end="157:29">0</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="159:25" pos:end="159:28"><expr pos:start="159:25" pos:end="159:27"><name pos:start="159:25" pos:end="159:25">y</name><operator pos:start="159:26" pos:end="159:27">++</operator></expr>;</expr_stmt>






            <if_stmt pos:start="166:13" pos:end="179:13"><if pos:start="166:13" pos:end="179:13">if <condition pos:start="166:16" pos:end="166:59">(<expr pos:start="166:17" pos:end="166:58"><name pos:start="166:17" pos:end="166:35"><name pos:start="166:17" pos:end="166:17">s</name><operator pos:start="166:18" pos:end="166:19">-&gt;</operator><name pos:start="166:20" pos:end="166:35">restart_interval</name></name> <operator pos:start="166:37" pos:end="166:38">&amp;&amp;</operator> <operator pos:start="166:40" pos:end="166:40">!</operator><operator pos:start="166:41" pos:end="166:42">--</operator><name pos:start="166:43" pos:end="166:58"><name pos:start="166:43" pos:end="166:43">s</name><operator pos:start="166:44" pos:end="166:45">-&gt;</operator><name pos:start="166:46" pos:end="166:58">restart_count</name></name></expr>)</condition> <block pos:start="166:61" pos:end="179:13">{<block_content pos:start="168:17" pos:end="179:13">

                <expr_stmt pos:start="168:17" pos:end="168:39"><expr pos:start="168:17" pos:end="168:38"><call pos:start="168:17" pos:end="168:38"><name pos:start="168:17" pos:end="168:30">align_get_bits</name><argument_list pos:start="168:31" pos:end="168:38">(<argument pos:start="168:32" pos:end="168:37"><expr pos:start="168:32" pos:end="168:37"><operator pos:start="168:32" pos:end="168:32">&amp;</operator><name pos:start="168:33" pos:end="168:37"><name pos:start="168:33" pos:end="168:33">s</name><operator pos:start="168:34" pos:end="168:35">-&gt;</operator><name pos:start="168:36" pos:end="168:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="170:17" pos:end="170:38"><expr pos:start="170:17" pos:end="170:37"><call pos:start="170:17" pos:end="170:37"><name pos:start="170:17" pos:end="170:25">skip_bits</name><argument_list pos:start="170:26" pos:end="170:37">(<argument pos:start="170:27" pos:end="170:32"><expr pos:start="170:27" pos:end="170:32"><operator pos:start="170:27" pos:end="170:27">&amp;</operator><name pos:start="170:28" pos:end="170:32"><name pos:start="170:28" pos:end="170:28">s</name><operator pos:start="170:29" pos:end="170:30">-&gt;</operator><name pos:start="170:31" pos:end="170:32">gb</name></name></expr></argument>, <argument pos:start="170:35" pos:end="170:36"><expr pos:start="170:35" pos:end="170:36"><literal type="number" pos:start="170:35" pos:end="170:36">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="170:40" pos:end="170:54">/* skip RSTn */</comment>

                <for pos:start="172:17" pos:end="174:41">for <control pos:start="172:21" pos:end="172:47">(<init pos:start="172:22" pos:end="172:25"><expr pos:start="172:22" pos:end="172:24"><name pos:start="172:22" pos:end="172:22">i</name><operator pos:start="172:23" pos:end="172:23">=</operator><literal type="number" pos:start="172:24" pos:end="172:24">0</literal></expr>;</init> <condition pos:start="172:27" pos:end="172:42"><expr pos:start="172:27" pos:end="172:41"><name pos:start="172:27" pos:end="172:27">i</name><operator pos:start="172:28" pos:end="172:28">&lt;</operator><name pos:start="172:29" pos:end="172:41">nb_components</name></expr>;</condition> <incr pos:start="172:44" pos:end="172:46"><expr pos:start="172:44" pos:end="172:46"><name pos:start="172:44" pos:end="172:44">i</name><operator pos:start="172:45" pos:end="172:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="174:21" pos:end="174:41"><block_content pos:start="174:21" pos:end="174:41"> <comment type="block" pos:start="172:49" pos:end="172:62">/* reset dc */</comment>

                    <expr_stmt pos:start="174:21" pos:end="174:41"><expr pos:start="174:21" pos:end="174:40"><name pos:start="174:21" pos:end="174:33"><name pos:start="174:21" pos:end="174:21">s</name><operator pos:start="174:22" pos:end="174:23">-&gt;</operator><name pos:start="174:24" pos:end="174:30">last_dc</name><index pos:start="174:31" pos:end="174:33">[<expr pos:start="174:32" pos:end="174:32"><name pos:start="174:32" pos:end="174:32">i</name></expr>]</index></name> <operator pos:start="174:35" pos:end="174:35">=</operator> <literal type="number" pos:start="174:37" pos:end="174:40">1024</literal></expr>;</expr_stmt></block_content></block></for>




    <return pos:start="179:5" pos:end="179:13">return <expr pos:start="179:12" pos:end="179:12"><literal type="number" pos:start="179:12" pos:end="179:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
