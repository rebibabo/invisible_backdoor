<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5270.c" pos:tabs="8"><function pos:start="1:1" pos:end="15:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">json_print_int</name><parameter_list pos:start="1:27" pos:end="1:75">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:46"><name pos:start="1:28" pos:end="1:40">WriterContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">wctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">key</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:74"><decl pos:start="1:66" pos:end="1:74"><type pos:start="1:66" pos:end="1:74"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:74">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="15:1">{<block_content pos:start="5:5" pos:end="13:21">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:17">key_esc</name> <init pos:start="5:19" pos:end="5:40">= <expr pos:start="5:21" pos:end="5:40"><call pos:start="5:21" pos:end="5:40"><name pos:start="5:21" pos:end="5:35">json_escape_str</name><argument_list pos:start="5:36" pos:end="5:40">(<argument pos:start="5:37" pos:end="5:39"><expr pos:start="5:37" pos:end="5:39"><name pos:start="5:37" pos:end="5:39">key</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="9:37"><if pos:start="9:5" pos:end="9:37">if <condition pos:start="9:8" pos:end="9:22">(<expr pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:12">wctx</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:21">nb_item</name></name></expr>)</condition><block type="pseudo" pos:start="9:24" pos:end="9:37"><block_content pos:start="9:24" pos:end="9:37"> <expr_stmt pos:start="9:24" pos:end="9:37"><expr pos:start="9:24" pos:end="9:36"><call pos:start="9:24" pos:end="9:36"><name pos:start="9:24" pos:end="9:29">printf</name><argument_list pos:start="9:30" pos:end="9:36">(<argument pos:start="9:31" pos:end="9:35"><expr pos:start="9:31" pos:end="9:35"><literal type="string" pos:start="9:31" pos:end="9:35">",\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:63"><expr pos:start="11:5" pos:end="11:62"><call pos:start="11:5" pos:end="11:62"><name pos:start="11:5" pos:end="11:10">printf</name><argument_list pos:start="11:11" pos:end="11:62">(<argument pos:start="11:12" pos:end="11:30"><expr pos:start="11:12" pos:end="11:30"><name pos:start="11:12" pos:end="11:17">INDENT</name> <literal type="string" pos:start="11:19" pos:end="11:30">"\"%s\": %d"</literal></expr></argument>, <argument pos:start="11:33" pos:end="11:54"><expr pos:start="11:33" pos:end="11:54"><ternary pos:start="11:33" pos:end="11:54"><condition pos:start="11:33" pos:end="11:41"><expr pos:start="11:33" pos:end="11:39"><name pos:start="11:33" pos:end="11:39">key_esc</name></expr> ?</condition><then pos:start="11:43" pos:end="11:49"> <expr pos:start="11:43" pos:end="11:49"><name pos:start="11:43" pos:end="11:49">key_esc</name></expr> </then><else pos:start="11:51" pos:end="11:54">: <expr pos:start="11:53" pos:end="11:54"><literal type="string" pos:start="11:53" pos:end="11:54">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="11:57" pos:end="11:61"><expr pos:start="11:57" pos:end="11:61"><name pos:start="11:57" pos:end="11:61">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><call pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:11">av_free</name><argument_list pos:start="13:12" pos:end="13:20">(<argument pos:start="13:13" pos:end="13:19"><expr pos:start="13:13" pos:end="13:19"><name pos:start="13:13" pos:end="13:19">key_esc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
