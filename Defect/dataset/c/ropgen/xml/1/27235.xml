<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27235.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">xen_remove_from_physmap</name><parameter_list pos:start="1:35" pos:end="5:51">(<parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:45">XenIOState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">state</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:52"><decl pos:start="3:36" pos:end="3:52"><type pos:start="3:36" pos:end="3:52"><name pos:start="3:36" pos:end="3:41">hwaddr</name></type> <name pos:start="3:43" pos:end="3:52">start_addr</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:50"><decl pos:start="5:36" pos:end="5:50"><type pos:start="5:36" pos:end="5:50"><name pos:start="5:36" pos:end="5:45">ram_addr_t</name></type> <name pos:start="5:47" pos:end="5:50">size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="85:1">{<block_content pos:start="9:5" pos:end="83:13">

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">long</name></type> <name pos:start="9:19" pos:end="9:19">i</name> <init pos:start="9:21" pos:end="9:23">= <expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">rc</name> <init pos:start="11:12" pos:end="11:14">= <expr pos:start="11:14" pos:end="11:14"><literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">XenPhysmap</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:23">physmap</name> <init pos:start="13:25" pos:end="13:30">= <expr pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">hwaddr</name></type> <name pos:start="15:12" pos:end="15:22">phys_offset</name> <init pos:start="15:24" pos:end="15:26">= <expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:55"><expr pos:start="19:5" pos:end="19:54"><name pos:start="19:5" pos:end="19:11">physmap</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:54"><name pos:start="19:15" pos:end="19:29">get_physmapping</name><argument_list pos:start="19:30" pos:end="19:54">(<argument pos:start="19:31" pos:end="19:35"><expr pos:start="19:31" pos:end="19:35"><name pos:start="19:31" pos:end="19:35">state</name></expr></argument>, <argument pos:start="19:38" pos:end="19:47"><expr pos:start="19:38" pos:end="19:47"><name pos:start="19:38" pos:end="19:47">start_addr</name></expr></argument>, <argument pos:start="19:50" pos:end="19:53"><expr pos:start="19:50" pos:end="19:53"><name pos:start="19:50" pos:end="19:53">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:24">(<expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:15">physmap</name> <operator pos:start="21:17" pos:end="21:18">==</operator> <name pos:start="21:20" pos:end="21:23">NULL</name></expr>)</condition> <block pos:start="21:26" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:15">phys_offset</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:38"><name pos:start="29:19" pos:end="29:25">physmap</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:38">phys_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:25"><expr pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:8">size</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <name pos:start="31:12" pos:end="31:24"><name pos:start="31:12" pos:end="31:18">physmap</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:24">size</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="37:77"><expr pos:start="35:5" pos:end="37:76"><call pos:start="35:5" pos:end="37:76"><name pos:start="35:5" pos:end="35:11">DPRINTF</name><argument_list pos:start="35:12" pos:end="37:76">(<argument pos:start="35:13" pos:end="35:70"><expr pos:start="35:13" pos:end="35:70"><literal type="string" pos:start="35:13" pos:end="35:33">"unmapping vram to %"</literal><name pos:start="35:34" pos:end="35:44">HWADDR_PRIx</name><literal type="string" pos:start="35:45" pos:end="35:50">" - %"</literal><name pos:start="35:51" pos:end="35:61">HWADDR_PRIx</name><literal type="string" pos:start="35:62" pos:end="35:70">", from "</literal></expr></argument>,

            <argument pos:start="37:13" pos:end="37:30"><expr pos:start="37:13" pos:end="37:30"><literal type="string" pos:start="37:13" pos:end="37:15">"%"</literal><name pos:start="37:16" pos:end="37:26">HWADDR_PRIx</name><literal type="string" pos:start="37:27" pos:end="37:30">"\n"</literal></expr></argument>, <argument pos:start="37:33" pos:end="37:43"><expr pos:start="37:33" pos:end="37:43"><name pos:start="37:33" pos:end="37:43">phys_offset</name></expr></argument>, <argument pos:start="37:46" pos:end="37:63"><expr pos:start="37:46" pos:end="37:63"><name pos:start="37:46" pos:end="37:56">phys_offset</name> <operator pos:start="37:58" pos:end="37:58">+</operator> <name pos:start="37:60" pos:end="37:63">size</name></expr></argument>, <argument pos:start="37:66" pos:end="37:75"><expr pos:start="37:66" pos:end="37:75"><name pos:start="37:66" pos:end="37:75">start_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:8">size</name> <operator pos:start="41:10" pos:end="41:12">&gt;&gt;=</operator> <name pos:start="41:14" pos:end="41:29">TARGET_PAGE_BITS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:36"><expr pos:start="43:5" pos:end="43:35"><name pos:start="43:5" pos:end="43:14">start_addr</name> <operator pos:start="43:16" pos:end="43:18">&gt;&gt;=</operator> <name pos:start="43:20" pos:end="43:35">TARGET_PAGE_BITS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><name pos:start="45:5" pos:end="45:15">phys_offset</name> <operator pos:start="45:17" pos:end="45:19">&gt;&gt;=</operator> <name pos:start="45:21" pos:end="45:36">TARGET_PAGE_BITS</name></expr>;</expr_stmt>

    <for pos:start="47:5" pos:end="67:5">for <control pos:start="47:9" pos:end="47:30">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:25"><expr pos:start="47:17" pos:end="47:24"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:24">size</name></expr>;</condition> <incr pos:start="47:27" pos:end="47:29"><expr pos:start="47:27" pos:end="47:29"><name pos:start="47:27" pos:end="47:27">i</name><operator pos:start="47:28" pos:end="47:29">++</operator></expr></incr>)</control> <block pos:start="47:32" pos:end="67:5">{<block_content pos:start="49:9" pos:end="65:9">

        <decl_stmt pos:start="49:9" pos:end="49:43"><decl pos:start="49:9" pos:end="49:42"><type pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:16">unsigned</name> <name pos:start="49:18" pos:end="49:21">long</name></type> <name pos:start="49:23" pos:end="49:25">idx</name> <init pos:start="49:27" pos:end="49:42">= <expr pos:start="49:29" pos:end="49:42"><name pos:start="49:29" pos:end="49:38">start_addr</name> <operator pos:start="49:40" pos:end="49:40">+</operator> <name pos:start="49:42" pos:end="49:42">i</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:41"><decl pos:start="51:9" pos:end="51:40"><type pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:17">xen_pfn_t</name></type> <name pos:start="51:19" pos:end="51:22">gpfn</name> <init pos:start="51:24" pos:end="51:40">= <expr pos:start="51:26" pos:end="51:40"><name pos:start="51:26" pos:end="51:36">phys_offset</name> <operator pos:start="51:38" pos:end="51:38">+</operator> <name pos:start="51:40" pos:end="51:40">i</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:86"><expr pos:start="55:9" pos:end="55:85"><name pos:start="55:9" pos:end="55:10">rc</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <call pos:start="55:14" pos:end="55:85"><name pos:start="55:14" pos:end="55:37">xc_domain_add_to_physmap</name><argument_list pos:start="55:38" pos:end="55:85">(<argument pos:start="55:39" pos:end="55:44"><expr pos:start="55:39" pos:end="55:44"><name pos:start="55:39" pos:end="55:44">xen_xc</name></expr></argument>, <argument pos:start="55:47" pos:end="55:55"><expr pos:start="55:47" pos:end="55:55"><name pos:start="55:47" pos:end="55:55">xen_domid</name></expr></argument>, <argument pos:start="55:58" pos:end="55:73"><expr pos:start="55:58" pos:end="55:73"><name pos:start="55:58" pos:end="55:73">XENMAPSPACE_gmfn</name></expr></argument>, <argument pos:start="55:76" pos:end="55:78"><expr pos:start="55:76" pos:end="55:78"><name pos:start="55:76" pos:end="55:78">idx</name></expr></argument>, <argument pos:start="55:81" pos:end="55:84"><expr pos:start="55:81" pos:end="55:84"><name pos:start="55:81" pos:end="55:84">gpfn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="65:9"><if pos:start="57:9" pos:end="65:9">if <condition pos:start="57:12" pos:end="57:15">(<expr pos:start="57:13" pos:end="57:14"><name pos:start="57:13" pos:end="57:14">rc</name></expr>)</condition> <block pos:start="57:17" pos:end="65:9">{<block_content pos:start="59:13" pos:end="63:23">

            <expr_stmt pos:start="59:13" pos:end="61:63"><expr pos:start="59:13" pos:end="61:62"><call pos:start="59:13" pos:end="61:62"><name pos:start="59:13" pos:end="59:19">fprintf</name><argument_list pos:start="59:20" pos:end="61:62">(<argument pos:start="59:21" pos:end="59:26"><expr pos:start="59:21" pos:end="59:26"><name pos:start="59:21" pos:end="59:26">stderr</name></expr></argument>, <argument pos:start="59:29" pos:end="61:46"><expr pos:start="59:29" pos:end="61:46"><literal type="string" pos:start="59:29" pos:end="59:50">"add_to_physmap MFN %"</literal><name pos:start="59:51" pos:end="59:61">PRI_xen_pfn</name><literal type="string" pos:start="59:62" pos:end="59:72">" to PFN %"</literal>

                    <name pos:start="61:21" pos:end="61:31">PRI_xen_pfn</name><literal type="string" pos:start="61:32" pos:end="61:46">" failed: %d\n"</literal></expr></argument>, <argument pos:start="61:49" pos:end="61:51"><expr pos:start="61:49" pos:end="61:51"><name pos:start="61:49" pos:end="61:51">idx</name></expr></argument>, <argument pos:start="61:54" pos:end="61:57"><expr pos:start="61:54" pos:end="61:57"><name pos:start="61:54" pos:end="61:57">gpfn</name></expr></argument>, <argument pos:start="61:60" pos:end="61:61"><expr pos:start="61:60" pos:end="61:61"><name pos:start="61:60" pos:end="61:61">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="63:13" pos:end="63:23">return <expr pos:start="63:20" pos:end="63:22"><operator pos:start="63:20" pos:end="63:20">-</operator><name pos:start="63:21" pos:end="63:22">rc</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="71:5" pos:end="71:32"><expr pos:start="71:5" pos:end="71:31"><call pos:start="71:5" pos:end="71:31"><name pos:start="71:5" pos:end="71:16">QLIST_REMOVE</name><argument_list pos:start="71:17" pos:end="71:31">(<argument pos:start="71:18" pos:end="71:24"><expr pos:start="71:18" pos:end="71:24"><name pos:start="71:18" pos:end="71:24">physmap</name></expr></argument>, <argument pos:start="71:27" pos:end="71:30"><expr pos:start="71:27" pos:end="71:30"><name pos:start="71:27" pos:end="71:30">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:43">(<expr pos:start="73:9" pos:end="73:42"><name pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:13">state</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:31">log_for_dirtybit</name></name> <operator pos:start="73:33" pos:end="73:34">==</operator> <name pos:start="73:36" pos:end="73:42">physmap</name></expr>)</condition> <block pos:start="73:45" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:39">

        <expr_stmt pos:start="75:9" pos:end="75:39"><expr pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:13">state</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:31">log_for_dirtybit</name></name> <operator pos:start="75:33" pos:end="75:33">=</operator> <name pos:start="75:35" pos:end="75:38">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:18"><expr pos:start="79:5" pos:end="79:17"><call pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:8">free</name><argument_list pos:start="79:9" pos:end="79:17">(<argument pos:start="79:10" pos:end="79:16"><expr pos:start="79:10" pos:end="79:16"><name pos:start="79:10" pos:end="79:16">physmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
