<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23983.c" pos:tabs="8"><function pos:start="1:1" pos:end="247:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">smka_decode_frame</name><parameter_list pos:start="1:29" pos:end="1:107">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:78"><decl pos:start="1:65" pos:end="1:78"><type pos:start="1:65" pos:end="1:78"><name pos:start="1:65" pos:end="1:67">int</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:78">data_size</name></decl></parameter>, <parameter pos:start="1:81" pos:end="1:92"><decl pos:start="1:81" pos:end="1:92"><type pos:start="1:81" pos:end="1:92"><name pos:start="1:81" pos:end="1:87">uint8_t</name> <modifier pos:start="1:89" pos:end="1:89">*</modifier></type><name pos:start="1:90" pos:end="1:92">buf</name></decl></parameter>, <parameter pos:start="1:95" pos:end="1:106"><decl pos:start="1:95" pos:end="1:106"><type pos:start="1:95" pos:end="1:106"><name pos:start="1:95" pos:end="1:97">int</name></type> <name pos:start="1:99" pos:end="1:106">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="247:1">{<block_content pos:start="5:5" pos:end="245:20">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:17">GetBitContext</name></type> <name pos:start="5:19" pos:end="5:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15">HuffContext</name></type> <name pos:start="7:17" pos:end="7:20"><name pos:start="7:17" pos:end="7:17">h</name><index pos:start="7:18" pos:end="7:20">[<expr pos:start="7:19" pos:end="7:19"><literal type="number" pos:start="7:19" pos:end="7:19">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">VLC</name></type> <name pos:start="9:9" pos:end="9:14"><name pos:start="9:9" pos:end="9:11">vlc</name><index pos:start="9:12" pos:end="9:14">[<expr pos:start="9:13" pos:end="9:13"><literal type="number" pos:start="9:13" pos:end="9:13">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">int16_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:20">samples</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:14">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">unp_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:12"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:12">bits</name></decl>, <decl pos:start="19:15" pos:end="19:20"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:15" pos:end="19:20">stereo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:12">pred</name><index pos:start="21:13" pos:end="21:15">[<expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">2</literal></expr>]</index></name> <init pos:start="21:17" pos:end="21:24">= <expr pos:start="21:19" pos:end="21:24"><block pos:start="21:19" pos:end="21:24">{<expr pos:start="21:20" pos:end="21:20"><literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr>, <expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:12">unp_size</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:22">AV_RL32</name><argument_list pos:start="25:23" pos:end="25:27">(<argument pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:26">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:52"><expr pos:start="29:5" pos:end="29:51"><call pos:start="29:5" pos:end="29:51"><name pos:start="29:5" pos:end="29:17">init_get_bits</name><argument_list pos:start="29:18" pos:end="29:51">(<argument pos:start="29:19" pos:end="29:21"><expr pos:start="29:19" pos:end="29:21"><operator pos:start="29:19" pos:end="29:19">&amp;</operator><name pos:start="29:20" pos:end="29:21">gb</name></expr></argument>, <argument pos:start="29:24" pos:end="29:30"><expr pos:start="29:24" pos:end="29:30"><name pos:start="29:24" pos:end="29:26">buf</name> <operator pos:start="29:28" pos:end="29:28">+</operator> <literal type="number" pos:start="29:30" pos:end="29:30">4</literal></expr></argument>, <argument pos:start="29:33" pos:end="29:50"><expr pos:start="29:33" pos:end="29:50"><operator pos:start="29:33" pos:end="29:33">(</operator><name pos:start="29:34" pos:end="29:41">buf_size</name> <operator pos:start="29:43" pos:end="29:43">-</operator> <literal type="number" pos:start="29:45" pos:end="29:45">4</literal><operator pos:start="29:46" pos:end="29:46">)</operator> <operator pos:start="29:48" pos:end="29:48">*</operator> <literal type="number" pos:start="29:50" pos:end="29:50">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if<condition pos:start="33:7" pos:end="33:23">(<expr pos:start="33:8" pos:end="33:22"><operator pos:start="33:8" pos:end="33:8">!</operator><call pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:17">get_bits1</name><argument_list pos:start="33:18" pos:end="33:22">(<argument pos:start="33:19" pos:end="33:21"><expr pos:start="33:19" pos:end="33:21"><operator pos:start="33:19" pos:end="33:19">&amp;</operator><name pos:start="33:20" pos:end="33:21">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="33:24" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:17">

        <expr_stmt pos:start="35:9" pos:end="35:55"><expr pos:start="35:9" pos:end="35:54"><call pos:start="35:9" pos:end="35:54"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:54">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20">avctx</name></expr></argument>, <argument pos:start="35:23" pos:end="35:33"><expr pos:start="35:23" pos:end="35:33"><name pos:start="35:23" pos:end="35:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="35:36" pos:end="35:53"><expr pos:start="35:36" pos:end="35:53"><literal type="string" pos:start="35:36" pos:end="35:53">"Sound: no data\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><operator pos:start="37:9" pos:end="37:9">*</operator><name pos:start="37:10" pos:end="37:18">data_size</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:10">stereo</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:27"><name pos:start="43:14" pos:end="43:22">get_bits1</name><argument_list pos:start="43:23" pos:end="43:27">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><operator pos:start="43:24" pos:end="43:24">&amp;</operator><name pos:start="43:25" pos:end="43:26">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:26"><expr pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:8">bits</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <call pos:start="45:12" pos:end="45:25"><name pos:start="45:12" pos:end="45:20">get_bits1</name><argument_list pos:start="45:21" pos:end="45:25">(<argument pos:start="45:22" pos:end="45:24"><expr pos:start="45:22" pos:end="45:24"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:24">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:41">(<expr pos:start="47:9" pos:end="47:40"><operator pos:start="47:9" pos:end="47:9">(</operator><name pos:start="47:10" pos:end="47:17">unp_size</name> <operator pos:start="47:19" pos:end="47:20">&lt;&lt;</operator> <operator pos:start="47:22" pos:end="47:22">!</operator><name pos:start="47:23" pos:end="47:26">bits</name><operator pos:start="47:27" pos:end="47:27">)</operator> <operator pos:start="47:29" pos:end="47:29">&gt;</operator> <operator pos:start="47:31" pos:end="47:31">*</operator><name pos:start="47:32" pos:end="47:40">data_size</name></expr>)</condition> <block pos:start="47:43" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:18">

        <expr_stmt pos:start="49:9" pos:end="49:77"><expr pos:start="49:9" pos:end="49:76"><call pos:start="49:9" pos:end="49:76"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:76">(<argument pos:start="49:16" pos:end="49:20"><expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">avctx</name></expr></argument>, <argument pos:start="49:23" pos:end="49:34"><expr pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:37" pos:end="49:75"><expr pos:start="49:37" pos:end="49:75"><literal type="string" pos:start="49:37" pos:end="49:75">"Frame is too large to fit in buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:36"><expr pos:start="57:5" pos:end="57:35"><call pos:start="57:5" pos:end="57:35"><name pos:start="57:5" pos:end="57:10">memset</name><argument_list pos:start="57:11" pos:end="57:35">(<argument pos:start="57:12" pos:end="57:14"><expr pos:start="57:12" pos:end="57:14"><name pos:start="57:12" pos:end="57:14">vlc</name></expr></argument>, <argument pos:start="57:17" pos:end="57:17"><expr pos:start="57:17" pos:end="57:17"><literal type="number" pos:start="57:17" pos:end="57:17">0</literal></expr></argument>, <argument pos:start="57:20" pos:end="57:34"><expr pos:start="57:20" pos:end="57:34"><sizeof pos:start="57:20" pos:end="57:30">sizeof<argument_list pos:start="57:26" pos:end="57:30">(<argument pos:start="57:27" pos:end="57:29"><expr pos:start="57:27" pos:end="57:29"><name pos:start="57:27" pos:end="57:29">VLC</name></expr></argument>)</argument_list></sizeof> <operator pos:start="57:32" pos:end="57:32">*</operator> <literal type="number" pos:start="57:34" pos:end="57:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:42"><expr pos:start="59:5" pos:end="59:41"><call pos:start="59:5" pos:end="59:41"><name pos:start="59:5" pos:end="59:10">memset</name><argument_list pos:start="59:11" pos:end="59:41">(<argument pos:start="59:12" pos:end="59:12"><expr pos:start="59:12" pos:end="59:12"><name pos:start="59:12" pos:end="59:12">h</name></expr></argument>, <argument pos:start="59:15" pos:end="59:15"><expr pos:start="59:15" pos:end="59:15"><literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr></argument>, <argument pos:start="59:18" pos:end="59:40"><expr pos:start="59:18" pos:end="59:40"><sizeof pos:start="59:18" pos:end="59:36">sizeof<argument_list pos:start="59:24" pos:end="59:36">(<argument pos:start="59:25" pos:end="59:35"><expr pos:start="59:25" pos:end="59:35"><name pos:start="59:25" pos:end="59:35">HuffContext</name></expr></argument>)</argument_list></sizeof> <operator pos:start="59:38" pos:end="59:38">*</operator> <literal type="number" pos:start="59:40" pos:end="59:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="61:5" pos:end="61:17">// Initialize</comment>

    <for pos:start="63:5" pos:end="101:5">for<control pos:start="63:8" pos:end="63:47">(<init pos:start="63:9" pos:end="63:14"><expr pos:start="63:9" pos:end="63:13"><name pos:start="63:9" pos:end="63:9">i</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <literal type="number" pos:start="63:13" pos:end="63:13">0</literal></expr>;</init> <condition pos:start="63:16" pos:end="63:42"><expr pos:start="63:16" pos:end="63:41"><name pos:start="63:16" pos:end="63:16">i</name> <operator pos:start="63:18" pos:end="63:18">&lt;</operator> <operator pos:start="63:20" pos:end="63:20">(</operator><literal type="number" pos:start="63:21" pos:end="63:21">1</literal> <operator pos:start="63:23" pos:end="63:24">&lt;&lt;</operator> <operator pos:start="63:26" pos:end="63:26">(</operator><name pos:start="63:27" pos:end="63:30">bits</name> <operator pos:start="63:32" pos:end="63:32">+</operator> <name pos:start="63:34" pos:end="63:39">stereo</name><operator pos:start="63:40" pos:end="63:40">)</operator><operator pos:start="63:41" pos:end="63:41">)</operator></expr>;</condition> <incr pos:start="63:44" pos:end="63:46"><expr pos:start="63:44" pos:end="63:46"><name pos:start="63:44" pos:end="63:44">i</name><operator pos:start="63:45" pos:end="63:46">++</operator></expr></incr>)</control> <block pos:start="63:49" pos:end="101:5">{<block_content pos:start="65:9" pos:end="99:9">

        <expr_stmt pos:start="65:9" pos:end="65:26"><expr pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:12"><name pos:start="65:9" pos:end="65:9">h</name><index pos:start="65:10" pos:end="65:12">[<expr pos:start="65:11" pos:end="65:11"><name pos:start="65:11" pos:end="65:11">i</name></expr>]</index></name><operator pos:start="65:13" pos:end="65:13">.</operator><name pos:start="65:14" pos:end="65:19">length</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <literal type="number" pos:start="65:23" pos:end="65:25">256</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:27"><expr pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:12"><name pos:start="67:9" pos:end="67:9">h</name><index pos:start="67:10" pos:end="67:12">[<expr pos:start="67:11" pos:end="67:11"><name pos:start="67:11" pos:end="67:11">i</name></expr>]</index></name><operator pos:start="67:13" pos:end="67:13">.</operator><name pos:start="67:14" pos:end="67:22">maxlength</name> <operator pos:start="67:24" pos:end="67:24">=</operator> <literal type="number" pos:start="67:26" pos:end="67:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:25"><expr pos:start="69:9" pos:end="69:24"><name pos:start="69:9" pos:end="69:12"><name pos:start="69:9" pos:end="69:9">h</name><index pos:start="69:10" pos:end="69:12">[<expr pos:start="69:11" pos:end="69:11"><name pos:start="69:11" pos:end="69:11">i</name></expr>]</index></name><operator pos:start="69:13" pos:end="69:13">.</operator><name pos:start="69:14" pos:end="69:20">current</name> <operator pos:start="69:22" pos:end="69:22">=</operator> <literal type="number" pos:start="69:24" pos:end="69:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:40"><expr pos:start="71:9" pos:end="71:39"><name pos:start="71:9" pos:end="71:12"><name pos:start="71:9" pos:end="71:9">h</name><index pos:start="71:10" pos:end="71:12">[<expr pos:start="71:11" pos:end="71:11"><name pos:start="71:11" pos:end="71:11">i</name></expr>]</index></name><operator pos:start="71:13" pos:end="71:13">.</operator><name pos:start="71:14" pos:end="71:17">bits</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <call pos:start="71:21" pos:end="71:39"><name pos:start="71:21" pos:end="71:30">av_mallocz</name><argument_list pos:start="71:31" pos:end="71:39">(<argument pos:start="71:32" pos:end="71:38"><expr pos:start="71:32" pos:end="71:38"><literal type="number" pos:start="71:32" pos:end="71:34">256</literal> <operator pos:start="71:36" pos:end="71:36">*</operator> <literal type="number" pos:start="71:38" pos:end="71:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:53"><expr pos:start="73:9" pos:end="73:52"><name pos:start="73:9" pos:end="73:12"><name pos:start="73:9" pos:end="73:9">h</name><index pos:start="73:10" pos:end="73:12">[<expr pos:start="73:11" pos:end="73:11"><name pos:start="73:11" pos:end="73:11">i</name></expr>]</index></name><operator pos:start="73:13" pos:end="73:13">.</operator><name pos:start="73:14" pos:end="73:20">lengths</name> <operator pos:start="73:22" pos:end="73:22">=</operator> <call pos:start="73:24" pos:end="73:52"><name pos:start="73:24" pos:end="73:33">av_mallocz</name><argument_list pos:start="73:34" pos:end="73:52">(<argument pos:start="73:35" pos:end="73:51"><expr pos:start="73:35" pos:end="73:51"><literal type="number" pos:start="73:35" pos:end="73:37">256</literal> <operator pos:start="73:39" pos:end="73:39">*</operator> <sizeof pos:start="73:41" pos:end="73:51">sizeof<argument_list pos:start="73:47" pos:end="73:51">(<argument pos:start="73:48" pos:end="73:50"><expr pos:start="73:48" pos:end="73:50"><name pos:start="73:48" pos:end="73:50">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:52"><expr pos:start="75:9" pos:end="75:51"><name pos:start="75:9" pos:end="75:12"><name pos:start="75:9" pos:end="75:9">h</name><index pos:start="75:10" pos:end="75:12">[<expr pos:start="75:11" pos:end="75:11"><name pos:start="75:11" pos:end="75:11">i</name></expr>]</index></name><operator pos:start="75:13" pos:end="75:13">.</operator><name pos:start="75:14" pos:end="75:19">values</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <call pos:start="75:23" pos:end="75:51"><name pos:start="75:23" pos:end="75:32">av_mallocz</name><argument_list pos:start="75:33" pos:end="75:51">(<argument pos:start="75:34" pos:end="75:50"><expr pos:start="75:34" pos:end="75:50"><literal type="number" pos:start="75:34" pos:end="75:36">256</literal> <operator pos:start="75:38" pos:end="75:38">*</operator> <sizeof pos:start="75:40" pos:end="75:50">sizeof<argument_list pos:start="75:46" pos:end="75:50">(<argument pos:start="75:47" pos:end="75:49"><expr pos:start="75:47" pos:end="75:49"><name pos:start="75:47" pos:end="75:49">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:24"><expr pos:start="77:9" pos:end="77:23"><call pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:18">skip_bits1</name><argument_list pos:start="77:19" pos:end="77:23">(<argument pos:start="77:20" pos:end="77:22"><expr pos:start="77:20" pos:end="77:22"><operator pos:start="77:20" pos:end="77:20">&amp;</operator><name pos:start="77:21" pos:end="77:22">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:46"><expr pos:start="79:9" pos:end="79:45"><call pos:start="79:9" pos:end="79:45"><name pos:start="79:9" pos:end="79:27">smacker_decode_tree</name><argument_list pos:start="79:28" pos:end="79:45">(<argument pos:start="79:29" pos:end="79:31"><expr pos:start="79:29" pos:end="79:31"><operator pos:start="79:29" pos:end="79:29">&amp;</operator><name pos:start="79:30" pos:end="79:31">gb</name></expr></argument>, <argument pos:start="79:34" pos:end="79:38"><expr pos:start="79:34" pos:end="79:38"><operator pos:start="79:34" pos:end="79:34">&amp;</operator><name pos:start="79:35" pos:end="79:38"><name pos:start="79:35" pos:end="79:35">h</name><index pos:start="79:36" pos:end="79:38">[<expr pos:start="79:37" pos:end="79:37"><name pos:start="79:37" pos:end="79:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="79:41" pos:end="79:41"><expr pos:start="79:41" pos:end="79:41"><literal type="number" pos:start="79:41" pos:end="79:41">0</literal></expr></argument>, <argument pos:start="79:44" pos:end="79:44"><expr pos:start="79:44" pos:end="79:44"><literal type="number" pos:start="79:44" pos:end="79:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:24"><expr pos:start="81:9" pos:end="81:23"><call pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:18">skip_bits1</name><argument_list pos:start="81:19" pos:end="81:23">(<argument pos:start="81:20" pos:end="81:22"><expr pos:start="81:20" pos:end="81:22"><operator pos:start="81:20" pos:end="81:20">&amp;</operator><name pos:start="81:21" pos:end="81:22">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="99:9"><if pos:start="83:9" pos:end="99:9">if<condition pos:start="83:11" pos:end="83:28">(<expr pos:start="83:12" pos:end="83:27"><name pos:start="83:12" pos:end="83:15"><name pos:start="83:12" pos:end="83:12">h</name><index pos:start="83:13" pos:end="83:15">[<expr pos:start="83:14" pos:end="83:14"><name pos:start="83:14" pos:end="83:14">i</name></expr>]</index></name><operator pos:start="83:16" pos:end="83:16">.</operator><name pos:start="83:17" pos:end="83:23">current</name> <operator pos:start="83:25" pos:end="83:25">&gt;</operator> <literal type="number" pos:start="83:27" pos:end="83:27">1</literal></expr>)</condition> <block pos:start="83:30" pos:end="99:9">{<block_content pos:start="85:13" pos:end="97:13">

            <expr_stmt pos:start="85:13" pos:end="89:80"><expr pos:start="85:13" pos:end="89:79"><name pos:start="85:13" pos:end="85:15">res</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <call pos:start="85:19" pos:end="89:79"><name pos:start="85:19" pos:end="85:26">init_vlc</name><argument_list pos:start="85:27" pos:end="89:79">(<argument pos:start="85:28" pos:end="85:34"><expr pos:start="85:28" pos:end="85:34"><operator pos:start="85:28" pos:end="85:28">&amp;</operator><name pos:start="85:29" pos:end="85:34"><name pos:start="85:29" pos:end="85:31">vlc</name><index pos:start="85:32" pos:end="85:34">[<expr pos:start="85:33" pos:end="85:33"><name pos:start="85:33" pos:end="85:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="85:37" pos:end="85:48"><expr pos:start="85:37" pos:end="85:48"><name pos:start="85:37" pos:end="85:48">SMKTREE_BITS</name></expr></argument>, <argument pos:start="85:51" pos:end="85:61"><expr pos:start="85:51" pos:end="85:61"><name pos:start="85:51" pos:end="85:54"><name pos:start="85:51" pos:end="85:51">h</name><index pos:start="85:52" pos:end="85:54">[<expr pos:start="85:53" pos:end="85:53"><name pos:start="85:53" pos:end="85:53">i</name></expr>]</index></name><operator pos:start="85:55" pos:end="85:55">.</operator><name pos:start="85:56" pos:end="85:61">length</name></expr></argument>,

                    <argument pos:start="87:21" pos:end="87:32"><expr pos:start="87:21" pos:end="87:32"><name pos:start="87:21" pos:end="87:24"><name pos:start="87:21" pos:end="87:21">h</name><index pos:start="87:22" pos:end="87:24">[<expr pos:start="87:23" pos:end="87:23"><name pos:start="87:23" pos:end="87:23">i</name></expr>]</index></name><operator pos:start="87:25" pos:end="87:25">.</operator><name pos:start="87:26" pos:end="87:32">lengths</name></expr></argument>, <argument pos:start="87:35" pos:end="87:45"><expr pos:start="87:35" pos:end="87:45"><sizeof pos:start="87:35" pos:end="87:45">sizeof<argument_list pos:start="87:41" pos:end="87:45">(<argument pos:start="87:42" pos:end="87:44"><expr pos:start="87:42" pos:end="87:44"><name pos:start="87:42" pos:end="87:44">int</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="87:48" pos:end="87:58"><expr pos:start="87:48" pos:end="87:58"><sizeof pos:start="87:48" pos:end="87:58">sizeof<argument_list pos:start="87:54" pos:end="87:58">(<argument pos:start="87:55" pos:end="87:57"><expr pos:start="87:55" pos:end="87:57"><name pos:start="87:55" pos:end="87:57">int</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                    <argument pos:start="89:21" pos:end="89:29"><expr pos:start="89:21" pos:end="89:29"><name pos:start="89:21" pos:end="89:24"><name pos:start="89:21" pos:end="89:21">h</name><index pos:start="89:22" pos:end="89:24">[<expr pos:start="89:23" pos:end="89:23"><name pos:start="89:23" pos:end="89:23">i</name></expr>]</index></name><operator pos:start="89:25" pos:end="89:25">.</operator><name pos:start="89:26" pos:end="89:29">bits</name></expr></argument>, <argument pos:start="89:32" pos:end="89:47"><expr pos:start="89:32" pos:end="89:47"><sizeof pos:start="89:32" pos:end="89:47">sizeof<argument_list pos:start="89:38" pos:end="89:47">(<argument pos:start="89:39" pos:end="89:46"><expr pos:start="89:39" pos:end="89:46"><name pos:start="89:39" pos:end="89:46">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="89:50" pos:end="89:65"><expr pos:start="89:50" pos:end="89:65"><sizeof pos:start="89:50" pos:end="89:65">sizeof<argument_list pos:start="89:56" pos:end="89:65">(<argument pos:start="89:57" pos:end="89:64"><expr pos:start="89:57" pos:end="89:64"><name pos:start="89:57" pos:end="89:64">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="89:68" pos:end="89:78"><expr pos:start="89:68" pos:end="89:78"><name pos:start="89:68" pos:end="89:78">INIT_VLC_LE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="97:13"><if pos:start="91:13" pos:end="97:13">if<condition pos:start="91:15" pos:end="91:23">(<expr pos:start="91:16" pos:end="91:22"><name pos:start="91:16" pos:end="91:18">res</name> <operator pos:start="91:20" pos:end="91:20">&lt;</operator> <literal type="number" pos:start="91:22" pos:end="91:22">0</literal></expr>)</condition> <block pos:start="91:25" pos:end="97:13">{<block_content pos:start="93:17" pos:end="95:26">

                <expr_stmt pos:start="93:17" pos:end="93:72"><expr pos:start="93:17" pos:end="93:71"><call pos:start="93:17" pos:end="93:71"><name pos:start="93:17" pos:end="93:22">av_log</name><argument_list pos:start="93:23" pos:end="93:71">(<argument pos:start="93:24" pos:end="93:28"><expr pos:start="93:24" pos:end="93:28"><name pos:start="93:24" pos:end="93:28">avctx</name></expr></argument>, <argument pos:start="93:31" pos:end="93:42"><expr pos:start="93:31" pos:end="93:42"><name pos:start="93:31" pos:end="93:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:45" pos:end="93:70"><expr pos:start="93:45" pos:end="93:70"><literal type="string" pos:start="93:45" pos:end="93:70">"Cannot build VLC table\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="95:17" pos:end="95:26">return <expr pos:start="95:24" pos:end="95:25"><operator pos:start="95:24" pos:end="95:24">-</operator><literal type="number" pos:start="95:25" pos:end="95:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="103:5" pos:end="217:5"><if pos:start="103:5" pos:end="171:5">if<condition pos:start="103:7" pos:end="103:12">(<expr pos:start="103:8" pos:end="103:11"><name pos:start="103:8" pos:end="103:11">bits</name></expr>)</condition> <block pos:start="103:14" pos:end="171:5">{<block_content pos:start="105:9" pos:end="169:9"> <comment type="line" pos:start="103:16" pos:end="103:35">//decode 16-bit data</comment>

        <for pos:start="105:9" pos:end="107:50">for<control pos:start="105:12" pos:end="105:36">(<init pos:start="105:13" pos:end="105:23"><expr pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:13">i</name> <operator pos:start="105:15" pos:end="105:15">=</operator> <name pos:start="105:17" pos:end="105:22">stereo</name></expr>;</init> <condition pos:start="105:25" pos:end="105:31"><expr pos:start="105:25" pos:end="105:30"><name pos:start="105:25" pos:end="105:25">i</name> <operator pos:start="105:27" pos:end="105:28">&gt;=</operator> <literal type="number" pos:start="105:30" pos:end="105:30">0</literal></expr>;</condition> <incr pos:start="105:33" pos:end="105:35"><expr pos:start="105:33" pos:end="105:35"><name pos:start="105:33" pos:end="105:33">i</name><operator pos:start="105:34" pos:end="105:35">--</operator></expr></incr>)</control><block type="pseudo" pos:start="107:13" pos:end="107:50"><block_content pos:start="107:13" pos:end="107:50">

            <expr_stmt pos:start="107:13" pos:end="107:50"><expr pos:start="107:13" pos:end="107:49"><name pos:start="107:13" pos:end="107:19"><name pos:start="107:13" pos:end="107:16">pred</name><index pos:start="107:17" pos:end="107:19">[<expr pos:start="107:18" pos:end="107:18"><name pos:start="107:18" pos:end="107:18">i</name></expr>]</index></name> <operator pos:start="107:21" pos:end="107:21">=</operator> <call pos:start="107:23" pos:end="107:49"><name pos:start="107:23" pos:end="107:30">bswap_16</name><argument_list pos:start="107:31" pos:end="107:49">(<argument pos:start="107:32" pos:end="107:48"><expr pos:start="107:32" pos:end="107:48"><call pos:start="107:32" pos:end="107:48"><name pos:start="107:32" pos:end="107:39">get_bits</name><argument_list pos:start="107:40" pos:end="107:48">(<argument pos:start="107:41" pos:end="107:43"><expr pos:start="107:41" pos:end="107:43"><operator pos:start="107:41" pos:end="107:41">&amp;</operator><name pos:start="107:42" pos:end="107:43">gb</name></expr></argument>, <argument pos:start="107:46" pos:end="107:47"><expr pos:start="107:46" pos:end="107:47"><literal type="number" pos:start="107:46" pos:end="107:47">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="109:9" pos:end="111:33">for<control pos:start="109:12" pos:end="109:35">(<init pos:start="109:13" pos:end="109:18"><expr pos:start="109:13" pos:end="109:17"><name pos:start="109:13" pos:end="109:13">i</name> <operator pos:start="109:15" pos:end="109:15">=</operator> <literal type="number" pos:start="109:17" pos:end="109:17">0</literal></expr>;</init> <condition pos:start="109:20" pos:end="109:30"><expr pos:start="109:20" pos:end="109:29"><name pos:start="109:20" pos:end="109:20">i</name> <operator pos:start="109:22" pos:end="109:22">&lt;</operator> <name pos:start="109:24" pos:end="109:29">stereo</name></expr>;</condition> <incr pos:start="109:32" pos:end="109:34"><expr pos:start="109:32" pos:end="109:34"><name pos:start="109:32" pos:end="109:32">i</name><operator pos:start="109:33" pos:end="109:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="111:13" pos:end="111:33"><block_content pos:start="111:13" pos:end="111:33">

            <expr_stmt pos:start="111:13" pos:end="111:33"><expr pos:start="111:13" pos:end="111:32"><operator pos:start="111:13" pos:end="111:13">*</operator><name pos:start="111:14" pos:end="111:20">samples</name><operator pos:start="111:21" pos:end="111:22">++</operator> <operator pos:start="111:24" pos:end="111:24">=</operator> <name pos:start="111:26" pos:end="111:32"><name pos:start="111:26" pos:end="111:29">pred</name><index pos:start="111:30" pos:end="111:32">[<expr pos:start="111:31" pos:end="111:31"><name pos:start="111:31" pos:end="111:31">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="113:9" pos:end="169:9">for<control pos:start="113:12" pos:end="113:41">(<init pos:start="113:13" pos:end="113:18"><expr pos:start="113:13" pos:end="113:17"><name pos:start="113:13" pos:end="113:13">i</name> <operator pos:start="113:15" pos:end="113:15">=</operator> <literal type="number" pos:start="113:17" pos:end="113:17">0</literal></expr>;</init> <condition pos:start="113:20" pos:end="113:36"><expr pos:start="113:20" pos:end="113:35"><name pos:start="113:20" pos:end="113:20">i</name> <operator pos:start="113:22" pos:end="113:22">&lt;</operator> <name pos:start="113:24" pos:end="113:31">unp_size</name> <operator pos:start="113:33" pos:end="113:33">/</operator> <literal type="number" pos:start="113:35" pos:end="113:35">2</literal></expr>;</condition> <incr pos:start="113:38" pos:end="113:40"><expr pos:start="113:38" pos:end="113:40"><name pos:start="113:38" pos:end="113:38">i</name><operator pos:start="113:39" pos:end="113:40">++</operator></expr></incr>)</control> <block pos:start="113:43" pos:end="169:9">{<block_content pos:start="115:13" pos:end="167:13">

            <if_stmt pos:start="115:13" pos:end="167:13"><if pos:start="115:13" pos:end="141:13">if<condition pos:start="115:15" pos:end="115:26">(<expr pos:start="115:16" pos:end="115:25"><name pos:start="115:16" pos:end="115:16">i</name> <operator pos:start="115:18" pos:end="115:18">&amp;</operator> <name pos:start="115:20" pos:end="115:25">stereo</name></expr>)</condition> <block pos:start="115:28" pos:end="141:13">{<block_content pos:start="117:17" pos:end="139:37">

                <if_stmt pos:start="117:17" pos:end="123:28"><if pos:start="117:17" pos:end="119:71">if<condition pos:start="117:19" pos:end="117:32">(<expr pos:start="117:20" pos:end="117:31"><name pos:start="117:20" pos:end="117:25"><name pos:start="117:20" pos:end="117:22">vlc</name><index pos:start="117:23" pos:end="117:25">[<expr pos:start="117:24" pos:end="117:24"><literal type="number" pos:start="117:24" pos:end="117:24">2</literal></expr>]</index></name><operator pos:start="117:26" pos:end="117:26">.</operator><name pos:start="117:27" pos:end="117:31">table</name></expr>)</condition><block type="pseudo" pos:start="119:21" pos:end="119:71"><block_content pos:start="119:21" pos:end="119:71">

                    <expr_stmt pos:start="119:21" pos:end="119:71"><expr pos:start="119:21" pos:end="119:70"><name pos:start="119:21" pos:end="119:23">res</name> <operator pos:start="119:25" pos:end="119:25">=</operator> <call pos:start="119:27" pos:end="119:70"><name pos:start="119:27" pos:end="119:34">get_vlc2</name><argument_list pos:start="119:35" pos:end="119:70">(<argument pos:start="119:36" pos:end="119:38"><expr pos:start="119:36" pos:end="119:38"><operator pos:start="119:36" pos:end="119:36">&amp;</operator><name pos:start="119:37" pos:end="119:38">gb</name></expr></argument>, <argument pos:start="119:41" pos:end="119:52"><expr pos:start="119:41" pos:end="119:52"><name pos:start="119:41" pos:end="119:46"><name pos:start="119:41" pos:end="119:43">vlc</name><index pos:start="119:44" pos:end="119:46">[<expr pos:start="119:45" pos:end="119:45"><literal type="number" pos:start="119:45" pos:end="119:45">2</literal></expr>]</index></name><operator pos:start="119:47" pos:end="119:47">.</operator><name pos:start="119:48" pos:end="119:52">table</name></expr></argument>, <argument pos:start="119:55" pos:end="119:66"><expr pos:start="119:55" pos:end="119:66"><name pos:start="119:55" pos:end="119:66">SMKTREE_BITS</name></expr></argument>, <argument pos:start="119:69" pos:end="119:69"><expr pos:start="119:69" pos:end="119:69"><literal type="number" pos:start="119:69" pos:end="119:69">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="121:17" pos:end="123:28">else<block type="pseudo" pos:start="123:21" pos:end="123:28"><block_content pos:start="123:21" pos:end="123:28">

                    <expr_stmt pos:start="123:21" pos:end="123:28"><expr pos:start="123:21" pos:end="123:27"><name pos:start="123:21" pos:end="123:23">res</name> <operator pos:start="123:25" pos:end="123:25">=</operator> <literal type="number" pos:start="123:27" pos:end="123:27">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:40"><expr pos:start="125:17" pos:end="125:39"><name pos:start="125:17" pos:end="125:19">val</name>  <operator pos:start="125:22" pos:end="125:22">=</operator> <name pos:start="125:24" pos:end="125:27"><name pos:start="125:24" pos:end="125:24">h</name><index pos:start="125:25" pos:end="125:27">[<expr pos:start="125:26" pos:end="125:26"><literal type="number" pos:start="125:26" pos:end="125:26">2</literal></expr>]</index></name><operator pos:start="125:28" pos:end="125:28">.</operator><name pos:start="125:29" pos:end="125:39"><name pos:start="125:29" pos:end="125:34">values</name><index pos:start="125:35" pos:end="125:39">[<expr pos:start="125:36" pos:end="125:38"><name pos:start="125:36" pos:end="125:38">res</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="127:17" pos:end="133:28"><if pos:start="127:17" pos:end="129:71">if<condition pos:start="127:19" pos:end="127:32">(<expr pos:start="127:20" pos:end="127:31"><name pos:start="127:20" pos:end="127:25"><name pos:start="127:20" pos:end="127:22">vlc</name><index pos:start="127:23" pos:end="127:25">[<expr pos:start="127:24" pos:end="127:24"><literal type="number" pos:start="127:24" pos:end="127:24">3</literal></expr>]</index></name><operator pos:start="127:26" pos:end="127:26">.</operator><name pos:start="127:27" pos:end="127:31">table</name></expr>)</condition><block type="pseudo" pos:start="129:21" pos:end="129:71"><block_content pos:start="129:21" pos:end="129:71">

                    <expr_stmt pos:start="129:21" pos:end="129:71"><expr pos:start="129:21" pos:end="129:70"><name pos:start="129:21" pos:end="129:23">res</name> <operator pos:start="129:25" pos:end="129:25">=</operator> <call pos:start="129:27" pos:end="129:70"><name pos:start="129:27" pos:end="129:34">get_vlc2</name><argument_list pos:start="129:35" pos:end="129:70">(<argument pos:start="129:36" pos:end="129:38"><expr pos:start="129:36" pos:end="129:38"><operator pos:start="129:36" pos:end="129:36">&amp;</operator><name pos:start="129:37" pos:end="129:38">gb</name></expr></argument>, <argument pos:start="129:41" pos:end="129:52"><expr pos:start="129:41" pos:end="129:52"><name pos:start="129:41" pos:end="129:46"><name pos:start="129:41" pos:end="129:43">vlc</name><index pos:start="129:44" pos:end="129:46">[<expr pos:start="129:45" pos:end="129:45"><literal type="number" pos:start="129:45" pos:end="129:45">3</literal></expr>]</index></name><operator pos:start="129:47" pos:end="129:47">.</operator><name pos:start="129:48" pos:end="129:52">table</name></expr></argument>, <argument pos:start="129:55" pos:end="129:66"><expr pos:start="129:55" pos:end="129:66"><name pos:start="129:55" pos:end="129:66">SMKTREE_BITS</name></expr></argument>, <argument pos:start="129:69" pos:end="129:69"><expr pos:start="129:69" pos:end="129:69"><literal type="number" pos:start="129:69" pos:end="129:69">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="131:17" pos:end="133:28">else<block type="pseudo" pos:start="133:21" pos:end="133:28"><block_content pos:start="133:21" pos:end="133:28">

                    <expr_stmt pos:start="133:21" pos:end="133:28"><expr pos:start="133:21" pos:end="133:27"><name pos:start="133:21" pos:end="133:23">res</name> <operator pos:start="133:25" pos:end="133:25">=</operator> <literal type="number" pos:start="133:27" pos:end="133:27">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:45"><expr pos:start="135:17" pos:end="135:44"><name pos:start="135:17" pos:end="135:19">val</name> <operator pos:start="135:21" pos:end="135:22">|=</operator> <name pos:start="135:24" pos:end="135:27"><name pos:start="135:24" pos:end="135:24">h</name><index pos:start="135:25" pos:end="135:27">[<expr pos:start="135:26" pos:end="135:26"><literal type="number" pos:start="135:26" pos:end="135:26">3</literal></expr>]</index></name><operator pos:start="135:28" pos:end="135:28">.</operator><name pos:start="135:29" pos:end="135:39"><name pos:start="135:29" pos:end="135:34">values</name><index pos:start="135:35" pos:end="135:39">[<expr pos:start="135:36" pos:end="135:38"><name pos:start="135:36" pos:end="135:38">res</name></expr>]</index></name> <operator pos:start="135:41" pos:end="135:42">&lt;&lt;</operator> <literal type="number" pos:start="135:44" pos:end="135:44">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:40"><expr pos:start="137:17" pos:end="137:39"><name pos:start="137:17" pos:end="137:23"><name pos:start="137:17" pos:end="137:20">pred</name><index pos:start="137:21" pos:end="137:23">[<expr pos:start="137:22" pos:end="137:22"><literal type="number" pos:start="137:22" pos:end="137:22">1</literal></expr>]</index></name> <operator pos:start="137:25" pos:end="137:26">+=</operator> <operator pos:start="137:28" pos:end="137:28">(</operator><name pos:start="137:29" pos:end="137:35">int16_t</name><operator pos:start="137:36" pos:end="137:36">)</operator><name pos:start="137:37" pos:end="137:39">val</name></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:37"><expr pos:start="139:17" pos:end="139:36"><operator pos:start="139:17" pos:end="139:17">*</operator><name pos:start="139:18" pos:end="139:24">samples</name><operator pos:start="139:25" pos:end="139:26">++</operator> <operator pos:start="139:28" pos:end="139:28">=</operator> <name pos:start="139:30" pos:end="139:36"><name pos:start="139:30" pos:end="139:33">pred</name><index pos:start="139:34" pos:end="139:36">[<expr pos:start="139:35" pos:end="139:35"><literal type="number" pos:start="139:35" pos:end="139:35">1</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="141:15" pos:end="167:13">else <block pos:start="141:20" pos:end="167:13">{<block_content pos:start="143:17" pos:end="165:37">

                <if_stmt pos:start="143:17" pos:end="149:28"><if pos:start="143:17" pos:end="145:71">if<condition pos:start="143:19" pos:end="143:32">(<expr pos:start="143:20" pos:end="143:31"><name pos:start="143:20" pos:end="143:25"><name pos:start="143:20" pos:end="143:22">vlc</name><index pos:start="143:23" pos:end="143:25">[<expr pos:start="143:24" pos:end="143:24"><literal type="number" pos:start="143:24" pos:end="143:24">0</literal></expr>]</index></name><operator pos:start="143:26" pos:end="143:26">.</operator><name pos:start="143:27" pos:end="143:31">table</name></expr>)</condition><block type="pseudo" pos:start="145:21" pos:end="145:71"><block_content pos:start="145:21" pos:end="145:71">

                    <expr_stmt pos:start="145:21" pos:end="145:71"><expr pos:start="145:21" pos:end="145:70"><name pos:start="145:21" pos:end="145:23">res</name> <operator pos:start="145:25" pos:end="145:25">=</operator> <call pos:start="145:27" pos:end="145:70"><name pos:start="145:27" pos:end="145:34">get_vlc2</name><argument_list pos:start="145:35" pos:end="145:70">(<argument pos:start="145:36" pos:end="145:38"><expr pos:start="145:36" pos:end="145:38"><operator pos:start="145:36" pos:end="145:36">&amp;</operator><name pos:start="145:37" pos:end="145:38">gb</name></expr></argument>, <argument pos:start="145:41" pos:end="145:52"><expr pos:start="145:41" pos:end="145:52"><name pos:start="145:41" pos:end="145:46"><name pos:start="145:41" pos:end="145:43">vlc</name><index pos:start="145:44" pos:end="145:46">[<expr pos:start="145:45" pos:end="145:45"><literal type="number" pos:start="145:45" pos:end="145:45">0</literal></expr>]</index></name><operator pos:start="145:47" pos:end="145:47">.</operator><name pos:start="145:48" pos:end="145:52">table</name></expr></argument>, <argument pos:start="145:55" pos:end="145:66"><expr pos:start="145:55" pos:end="145:66"><name pos:start="145:55" pos:end="145:66">SMKTREE_BITS</name></expr></argument>, <argument pos:start="145:69" pos:end="145:69"><expr pos:start="145:69" pos:end="145:69"><literal type="number" pos:start="145:69" pos:end="145:69">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="147:17" pos:end="149:28">else<block type="pseudo" pos:start="149:21" pos:end="149:28"><block_content pos:start="149:21" pos:end="149:28">

                    <expr_stmt pos:start="149:21" pos:end="149:28"><expr pos:start="149:21" pos:end="149:27"><name pos:start="149:21" pos:end="149:23">res</name> <operator pos:start="149:25" pos:end="149:25">=</operator> <literal type="number" pos:start="149:27" pos:end="149:27">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:40"><expr pos:start="151:17" pos:end="151:39"><name pos:start="151:17" pos:end="151:19">val</name>  <operator pos:start="151:22" pos:end="151:22">=</operator> <name pos:start="151:24" pos:end="151:27"><name pos:start="151:24" pos:end="151:24">h</name><index pos:start="151:25" pos:end="151:27">[<expr pos:start="151:26" pos:end="151:26"><literal type="number" pos:start="151:26" pos:end="151:26">0</literal></expr>]</index></name><operator pos:start="151:28" pos:end="151:28">.</operator><name pos:start="151:29" pos:end="151:39"><name pos:start="151:29" pos:end="151:34">values</name><index pos:start="151:35" pos:end="151:39">[<expr pos:start="151:36" pos:end="151:38"><name pos:start="151:36" pos:end="151:38">res</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="153:17" pos:end="159:28"><if pos:start="153:17" pos:end="155:71">if<condition pos:start="153:19" pos:end="153:32">(<expr pos:start="153:20" pos:end="153:31"><name pos:start="153:20" pos:end="153:25"><name pos:start="153:20" pos:end="153:22">vlc</name><index pos:start="153:23" pos:end="153:25">[<expr pos:start="153:24" pos:end="153:24"><literal type="number" pos:start="153:24" pos:end="153:24">1</literal></expr>]</index></name><operator pos:start="153:26" pos:end="153:26">.</operator><name pos:start="153:27" pos:end="153:31">table</name></expr>)</condition><block type="pseudo" pos:start="155:21" pos:end="155:71"><block_content pos:start="155:21" pos:end="155:71">

                    <expr_stmt pos:start="155:21" pos:end="155:71"><expr pos:start="155:21" pos:end="155:70"><name pos:start="155:21" pos:end="155:23">res</name> <operator pos:start="155:25" pos:end="155:25">=</operator> <call pos:start="155:27" pos:end="155:70"><name pos:start="155:27" pos:end="155:34">get_vlc2</name><argument_list pos:start="155:35" pos:end="155:70">(<argument pos:start="155:36" pos:end="155:38"><expr pos:start="155:36" pos:end="155:38"><operator pos:start="155:36" pos:end="155:36">&amp;</operator><name pos:start="155:37" pos:end="155:38">gb</name></expr></argument>, <argument pos:start="155:41" pos:end="155:52"><expr pos:start="155:41" pos:end="155:52"><name pos:start="155:41" pos:end="155:46"><name pos:start="155:41" pos:end="155:43">vlc</name><index pos:start="155:44" pos:end="155:46">[<expr pos:start="155:45" pos:end="155:45"><literal type="number" pos:start="155:45" pos:end="155:45">1</literal></expr>]</index></name><operator pos:start="155:47" pos:end="155:47">.</operator><name pos:start="155:48" pos:end="155:52">table</name></expr></argument>, <argument pos:start="155:55" pos:end="155:66"><expr pos:start="155:55" pos:end="155:66"><name pos:start="155:55" pos:end="155:66">SMKTREE_BITS</name></expr></argument>, <argument pos:start="155:69" pos:end="155:69"><expr pos:start="155:69" pos:end="155:69"><literal type="number" pos:start="155:69" pos:end="155:69">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="157:17" pos:end="159:28">else<block type="pseudo" pos:start="159:21" pos:end="159:28"><block_content pos:start="159:21" pos:end="159:28">

                    <expr_stmt pos:start="159:21" pos:end="159:28"><expr pos:start="159:21" pos:end="159:27"><name pos:start="159:21" pos:end="159:23">res</name> <operator pos:start="159:25" pos:end="159:25">=</operator> <literal type="number" pos:start="159:27" pos:end="159:27">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:45"><expr pos:start="161:17" pos:end="161:44"><name pos:start="161:17" pos:end="161:19">val</name> <operator pos:start="161:21" pos:end="161:22">|=</operator> <name pos:start="161:24" pos:end="161:27"><name pos:start="161:24" pos:end="161:24">h</name><index pos:start="161:25" pos:end="161:27">[<expr pos:start="161:26" pos:end="161:26"><literal type="number" pos:start="161:26" pos:end="161:26">1</literal></expr>]</index></name><operator pos:start="161:28" pos:end="161:28">.</operator><name pos:start="161:29" pos:end="161:39"><name pos:start="161:29" pos:end="161:34">values</name><index pos:start="161:35" pos:end="161:39">[<expr pos:start="161:36" pos:end="161:38"><name pos:start="161:36" pos:end="161:38">res</name></expr>]</index></name> <operator pos:start="161:41" pos:end="161:42">&lt;&lt;</operator> <literal type="number" pos:start="161:44" pos:end="161:44">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:31"><expr pos:start="163:17" pos:end="163:30"><name pos:start="163:17" pos:end="163:23"><name pos:start="163:17" pos:end="163:20">pred</name><index pos:start="163:21" pos:end="163:23">[<expr pos:start="163:22" pos:end="163:22"><literal type="number" pos:start="163:22" pos:end="163:22">0</literal></expr>]</index></name> <operator pos:start="163:25" pos:end="163:26">+=</operator> <name pos:start="163:28" pos:end="163:30">val</name></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:37"><expr pos:start="165:17" pos:end="165:36"><operator pos:start="165:17" pos:end="165:17">*</operator><name pos:start="165:18" pos:end="165:24">samples</name><operator pos:start="165:25" pos:end="165:26">++</operator> <operator pos:start="165:28" pos:end="165:28">=</operator> <name pos:start="165:30" pos:end="165:36"><name pos:start="165:30" pos:end="165:33">pred</name><index pos:start="165:34" pos:end="165:36">[<expr pos:start="165:35" pos:end="165:35"><literal type="number" pos:start="165:35" pos:end="165:35">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="171:7" pos:end="217:5">else <block pos:start="171:12" pos:end="217:5">{<block_content pos:start="173:9" pos:end="215:22"> <comment type="line" pos:start="171:14" pos:end="171:25">//8-bit data</comment>

        <for pos:start="173:9" pos:end="175:39">for<control pos:start="173:12" pos:end="173:36">(<init pos:start="173:13" pos:end="173:23"><expr pos:start="173:13" pos:end="173:22"><name pos:start="173:13" pos:end="173:13">i</name> <operator pos:start="173:15" pos:end="173:15">=</operator> <name pos:start="173:17" pos:end="173:22">stereo</name></expr>;</init> <condition pos:start="173:25" pos:end="173:31"><expr pos:start="173:25" pos:end="173:30"><name pos:start="173:25" pos:end="173:25">i</name> <operator pos:start="173:27" pos:end="173:28">&gt;=</operator> <literal type="number" pos:start="173:30" pos:end="173:30">0</literal></expr>;</condition> <incr pos:start="173:33" pos:end="173:35"><expr pos:start="173:33" pos:end="173:35"><name pos:start="173:33" pos:end="173:33">i</name><operator pos:start="173:34" pos:end="173:35">--</operator></expr></incr>)</control><block type="pseudo" pos:start="175:13" pos:end="175:39"><block_content pos:start="175:13" pos:end="175:39">

            <expr_stmt pos:start="175:13" pos:end="175:39"><expr pos:start="175:13" pos:end="175:38"><name pos:start="175:13" pos:end="175:19"><name pos:start="175:13" pos:end="175:16">pred</name><index pos:start="175:17" pos:end="175:19">[<expr pos:start="175:18" pos:end="175:18"><name pos:start="175:18" pos:end="175:18">i</name></expr>]</index></name> <operator pos:start="175:21" pos:end="175:21">=</operator> <call pos:start="175:23" pos:end="175:38"><name pos:start="175:23" pos:end="175:30">get_bits</name><argument_list pos:start="175:31" pos:end="175:38">(<argument pos:start="175:32" pos:end="175:34"><expr pos:start="175:32" pos:end="175:34"><operator pos:start="175:32" pos:end="175:32">&amp;</operator><name pos:start="175:33" pos:end="175:34">gb</name></expr></argument>, <argument pos:start="175:37" pos:end="175:37"><expr pos:start="175:37" pos:end="175:37"><literal type="number" pos:start="175:37" pos:end="175:37">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="177:9" pos:end="179:47">for<control pos:start="177:12" pos:end="177:35">(<init pos:start="177:13" pos:end="177:18"><expr pos:start="177:13" pos:end="177:17"><name pos:start="177:13" pos:end="177:13">i</name> <operator pos:start="177:15" pos:end="177:15">=</operator> <literal type="number" pos:start="177:17" pos:end="177:17">0</literal></expr>;</init> <condition pos:start="177:20" pos:end="177:30"><expr pos:start="177:20" pos:end="177:29"><name pos:start="177:20" pos:end="177:20">i</name> <operator pos:start="177:22" pos:end="177:22">&lt;</operator> <name pos:start="177:24" pos:end="177:29">stereo</name></expr>;</condition> <incr pos:start="177:32" pos:end="177:34"><expr pos:start="177:32" pos:end="177:34"><name pos:start="177:32" pos:end="177:32">i</name><operator pos:start="177:33" pos:end="177:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="179:13" pos:end="179:47"><block_content pos:start="179:13" pos:end="179:47">

            <expr_stmt pos:start="179:13" pos:end="179:47"><expr pos:start="179:13" pos:end="179:46"><operator pos:start="179:13" pos:end="179:13">*</operator><name pos:start="179:14" pos:end="179:20">samples</name><operator pos:start="179:21" pos:end="179:22">++</operator> <operator pos:start="179:24" pos:end="179:24">=</operator> <operator pos:start="179:26" pos:end="179:26">(</operator><name pos:start="179:27" pos:end="179:33"><name pos:start="179:27" pos:end="179:30">pred</name><index pos:start="179:31" pos:end="179:33">[<expr pos:start="179:32" pos:end="179:32"><name pos:start="179:32" pos:end="179:32">i</name></expr>]</index></name> <operator pos:start="179:35" pos:end="179:35">-</operator> <literal type="number" pos:start="179:37" pos:end="179:40">0x80</literal><operator pos:start="179:41" pos:end="179:41">)</operator> <operator pos:start="179:43" pos:end="179:44">&lt;&lt;</operator> <literal type="number" pos:start="179:46" pos:end="179:46">8</literal></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="181:9" pos:end="213:9">for<control pos:start="181:12" pos:end="181:37">(<init pos:start="181:13" pos:end="181:18"><expr pos:start="181:13" pos:end="181:17"><name pos:start="181:13" pos:end="181:13">i</name> <operator pos:start="181:15" pos:end="181:15">=</operator> <literal type="number" pos:start="181:17" pos:end="181:17">0</literal></expr>;</init> <condition pos:start="181:20" pos:end="181:32"><expr pos:start="181:20" pos:end="181:31"><name pos:start="181:20" pos:end="181:20">i</name> <operator pos:start="181:22" pos:end="181:22">&lt;</operator> <name pos:start="181:24" pos:end="181:31">unp_size</name></expr>;</condition> <incr pos:start="181:34" pos:end="181:36"><expr pos:start="181:34" pos:end="181:36"><name pos:start="181:34" pos:end="181:34">i</name><operator pos:start="181:35" pos:end="181:36">++</operator></expr></incr>)</control> <block pos:start="181:39" pos:end="213:9">{<block_content pos:start="183:13" pos:end="211:13">

            <if_stmt pos:start="183:13" pos:end="211:13"><if pos:start="183:13" pos:end="197:13">if<condition pos:start="183:15" pos:end="183:26">(<expr pos:start="183:16" pos:end="183:25"><name pos:start="183:16" pos:end="183:16">i</name> <operator pos:start="183:18" pos:end="183:18">&amp;</operator> <name pos:start="183:20" pos:end="183:25">stereo</name></expr>)</condition><block pos:start="183:27" pos:end="197:13">{<block_content pos:start="185:17" pos:end="195:51">

                <if_stmt pos:start="185:17" pos:end="191:28"><if pos:start="185:17" pos:end="187:71">if<condition pos:start="185:19" pos:end="185:32">(<expr pos:start="185:20" pos:end="185:31"><name pos:start="185:20" pos:end="185:25"><name pos:start="185:20" pos:end="185:22">vlc</name><index pos:start="185:23" pos:end="185:25">[<expr pos:start="185:24" pos:end="185:24"><literal type="number" pos:start="185:24" pos:end="185:24">1</literal></expr>]</index></name><operator pos:start="185:26" pos:end="185:26">.</operator><name pos:start="185:27" pos:end="185:31">table</name></expr>)</condition><block type="pseudo" pos:start="187:21" pos:end="187:71"><block_content pos:start="187:21" pos:end="187:71">

                    <expr_stmt pos:start="187:21" pos:end="187:71"><expr pos:start="187:21" pos:end="187:70"><name pos:start="187:21" pos:end="187:23">res</name> <operator pos:start="187:25" pos:end="187:25">=</operator> <call pos:start="187:27" pos:end="187:70"><name pos:start="187:27" pos:end="187:34">get_vlc2</name><argument_list pos:start="187:35" pos:end="187:70">(<argument pos:start="187:36" pos:end="187:38"><expr pos:start="187:36" pos:end="187:38"><operator pos:start="187:36" pos:end="187:36">&amp;</operator><name pos:start="187:37" pos:end="187:38">gb</name></expr></argument>, <argument pos:start="187:41" pos:end="187:52"><expr pos:start="187:41" pos:end="187:52"><name pos:start="187:41" pos:end="187:46"><name pos:start="187:41" pos:end="187:43">vlc</name><index pos:start="187:44" pos:end="187:46">[<expr pos:start="187:45" pos:end="187:45"><literal type="number" pos:start="187:45" pos:end="187:45">1</literal></expr>]</index></name><operator pos:start="187:47" pos:end="187:47">.</operator><name pos:start="187:48" pos:end="187:52">table</name></expr></argument>, <argument pos:start="187:55" pos:end="187:66"><expr pos:start="187:55" pos:end="187:66"><name pos:start="187:55" pos:end="187:66">SMKTREE_BITS</name></expr></argument>, <argument pos:start="187:69" pos:end="187:69"><expr pos:start="187:69" pos:end="187:69"><literal type="number" pos:start="187:69" pos:end="187:69">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="189:17" pos:end="191:28">else<block type="pseudo" pos:start="191:21" pos:end="191:28"><block_content pos:start="191:21" pos:end="191:28">

                    <expr_stmt pos:start="191:21" pos:end="191:28"><expr pos:start="191:21" pos:end="191:27"><name pos:start="191:21" pos:end="191:23">res</name> <operator pos:start="191:25" pos:end="191:25">=</operator> <literal type="number" pos:start="191:27" pos:end="191:27">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:52"><expr pos:start="193:17" pos:end="193:51"><name pos:start="193:17" pos:end="193:23"><name pos:start="193:17" pos:end="193:20">pred</name><index pos:start="193:21" pos:end="193:23">[<expr pos:start="193:22" pos:end="193:22"><literal type="number" pos:start="193:22" pos:end="193:22">1</literal></expr>]</index></name> <operator pos:start="193:25" pos:end="193:26">+=</operator> <operator pos:start="193:28" pos:end="193:28">(</operator><name pos:start="193:29" pos:end="193:34">int8_t</name><operator pos:start="193:35" pos:end="193:35">)</operator><name pos:start="193:36" pos:end="193:39"><name pos:start="193:36" pos:end="193:36">h</name><index pos:start="193:37" pos:end="193:39">[<expr pos:start="193:38" pos:end="193:38"><literal type="number" pos:start="193:38" pos:end="193:38">1</literal></expr>]</index></name><operator pos:start="193:40" pos:end="193:40">.</operator><name pos:start="193:41" pos:end="193:51"><name pos:start="193:41" pos:end="193:46">values</name><index pos:start="193:47" pos:end="193:51">[<expr pos:start="193:48" pos:end="193:50"><name pos:start="193:48" pos:end="193:50">res</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:51"><expr pos:start="195:17" pos:end="195:50"><operator pos:start="195:17" pos:end="195:17">*</operator><name pos:start="195:18" pos:end="195:24">samples</name><operator pos:start="195:25" pos:end="195:26">++</operator> <operator pos:start="195:28" pos:end="195:28">=</operator> <operator pos:start="195:30" pos:end="195:30">(</operator><name pos:start="195:31" pos:end="195:37"><name pos:start="195:31" pos:end="195:34">pred</name><index pos:start="195:35" pos:end="195:37">[<expr pos:start="195:36" pos:end="195:36"><literal type="number" pos:start="195:36" pos:end="195:36">1</literal></expr>]</index></name> <operator pos:start="195:39" pos:end="195:39">-</operator> <literal type="number" pos:start="195:41" pos:end="195:44">0x80</literal><operator pos:start="195:45" pos:end="195:45">)</operator> <operator pos:start="195:47" pos:end="195:48">&lt;&lt;</operator> <literal type="number" pos:start="195:50" pos:end="195:50">8</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="197:15" pos:end="211:13">else <block pos:start="197:20" pos:end="211:13">{<block_content pos:start="199:17" pos:end="209:51">

                <if_stmt pos:start="199:17" pos:end="205:28"><if pos:start="199:17" pos:end="201:71">if<condition pos:start="199:19" pos:end="199:32">(<expr pos:start="199:20" pos:end="199:31"><name pos:start="199:20" pos:end="199:25"><name pos:start="199:20" pos:end="199:22">vlc</name><index pos:start="199:23" pos:end="199:25">[<expr pos:start="199:24" pos:end="199:24"><literal type="number" pos:start="199:24" pos:end="199:24">0</literal></expr>]</index></name><operator pos:start="199:26" pos:end="199:26">.</operator><name pos:start="199:27" pos:end="199:31">table</name></expr>)</condition><block type="pseudo" pos:start="201:21" pos:end="201:71"><block_content pos:start="201:21" pos:end="201:71">

                    <expr_stmt pos:start="201:21" pos:end="201:71"><expr pos:start="201:21" pos:end="201:70"><name pos:start="201:21" pos:end="201:23">res</name> <operator pos:start="201:25" pos:end="201:25">=</operator> <call pos:start="201:27" pos:end="201:70"><name pos:start="201:27" pos:end="201:34">get_vlc2</name><argument_list pos:start="201:35" pos:end="201:70">(<argument pos:start="201:36" pos:end="201:38"><expr pos:start="201:36" pos:end="201:38"><operator pos:start="201:36" pos:end="201:36">&amp;</operator><name pos:start="201:37" pos:end="201:38">gb</name></expr></argument>, <argument pos:start="201:41" pos:end="201:52"><expr pos:start="201:41" pos:end="201:52"><name pos:start="201:41" pos:end="201:46"><name pos:start="201:41" pos:end="201:43">vlc</name><index pos:start="201:44" pos:end="201:46">[<expr pos:start="201:45" pos:end="201:45"><literal type="number" pos:start="201:45" pos:end="201:45">0</literal></expr>]</index></name><operator pos:start="201:47" pos:end="201:47">.</operator><name pos:start="201:48" pos:end="201:52">table</name></expr></argument>, <argument pos:start="201:55" pos:end="201:66"><expr pos:start="201:55" pos:end="201:66"><name pos:start="201:55" pos:end="201:66">SMKTREE_BITS</name></expr></argument>, <argument pos:start="201:69" pos:end="201:69"><expr pos:start="201:69" pos:end="201:69"><literal type="number" pos:start="201:69" pos:end="201:69">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="203:17" pos:end="205:28">else<block type="pseudo" pos:start="205:21" pos:end="205:28"><block_content pos:start="205:21" pos:end="205:28">

                    <expr_stmt pos:start="205:21" pos:end="205:28"><expr pos:start="205:21" pos:end="205:27"><name pos:start="205:21" pos:end="205:23">res</name> <operator pos:start="205:25" pos:end="205:25">=</operator> <literal type="number" pos:start="205:27" pos:end="205:27">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:52"><expr pos:start="207:17" pos:end="207:51"><name pos:start="207:17" pos:end="207:23"><name pos:start="207:17" pos:end="207:20">pred</name><index pos:start="207:21" pos:end="207:23">[<expr pos:start="207:22" pos:end="207:22"><literal type="number" pos:start="207:22" pos:end="207:22">0</literal></expr>]</index></name> <operator pos:start="207:25" pos:end="207:26">+=</operator> <operator pos:start="207:28" pos:end="207:28">(</operator><name pos:start="207:29" pos:end="207:34">int8_t</name><operator pos:start="207:35" pos:end="207:35">)</operator><name pos:start="207:36" pos:end="207:39"><name pos:start="207:36" pos:end="207:36">h</name><index pos:start="207:37" pos:end="207:39">[<expr pos:start="207:38" pos:end="207:38"><literal type="number" pos:start="207:38" pos:end="207:38">0</literal></expr>]</index></name><operator pos:start="207:40" pos:end="207:40">.</operator><name pos:start="207:41" pos:end="207:51"><name pos:start="207:41" pos:end="207:46">values</name><index pos:start="207:47" pos:end="207:51">[<expr pos:start="207:48" pos:end="207:50"><name pos:start="207:48" pos:end="207:50">res</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:51"><expr pos:start="209:17" pos:end="209:50"><operator pos:start="209:17" pos:end="209:17">*</operator><name pos:start="209:18" pos:end="209:24">samples</name><operator pos:start="209:25" pos:end="209:26">++</operator> <operator pos:start="209:28" pos:end="209:28">=</operator> <operator pos:start="209:30" pos:end="209:30">(</operator><name pos:start="209:31" pos:end="209:37"><name pos:start="209:31" pos:end="209:34">pred</name><index pos:start="209:35" pos:end="209:37">[<expr pos:start="209:36" pos:end="209:36"><literal type="number" pos:start="209:36" pos:end="209:36">0</literal></expr>]</index></name> <operator pos:start="209:39" pos:end="209:39">-</operator> <literal type="number" pos:start="209:41" pos:end="209:44">0x80</literal><operator pos:start="209:45" pos:end="209:45">)</operator> <operator pos:start="209:47" pos:end="209:48">&lt;&lt;</operator> <literal type="number" pos:start="209:50" pos:end="209:50">8</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="215:9" pos:end="215:22"><expr pos:start="215:9" pos:end="215:21"><name pos:start="215:9" pos:end="215:16">unp_size</name> <operator pos:start="215:18" pos:end="215:19">*=</operator> <literal type="number" pos:start="215:21" pos:end="215:21">2</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="221:5" pos:end="239:5">for<control pos:start="221:8" pos:end="221:26">(<init pos:start="221:9" pos:end="221:14"><expr pos:start="221:9" pos:end="221:13"><name pos:start="221:9" pos:end="221:9">i</name> <operator pos:start="221:11" pos:end="221:11">=</operator> <literal type="number" pos:start="221:13" pos:end="221:13">0</literal></expr>;</init> <condition pos:start="221:16" pos:end="221:21"><expr pos:start="221:16" pos:end="221:20"><name pos:start="221:16" pos:end="221:16">i</name> <operator pos:start="221:18" pos:end="221:18">&lt;</operator> <literal type="number" pos:start="221:20" pos:end="221:20">4</literal></expr>;</condition> <incr pos:start="221:23" pos:end="221:25"><expr pos:start="221:23" pos:end="221:25"><name pos:start="221:23" pos:end="221:23">i</name><operator pos:start="221:24" pos:end="221:25">++</operator></expr></incr>)</control> <block pos:start="221:28" pos:end="239:5">{<block_content pos:start="223:9" pos:end="237:33">

        <if_stmt pos:start="223:9" pos:end="225:30"><if pos:start="223:9" pos:end="225:30">if<condition pos:start="223:11" pos:end="223:24">(<expr pos:start="223:12" pos:end="223:23"><name pos:start="223:12" pos:end="223:17"><name pos:start="223:12" pos:end="223:14">vlc</name><index pos:start="223:15" pos:end="223:17">[<expr pos:start="223:16" pos:end="223:16"><name pos:start="223:16" pos:end="223:16">i</name></expr>]</index></name><operator pos:start="223:18" pos:end="223:18">.</operator><name pos:start="223:19" pos:end="223:23">table</name></expr>)</condition><block type="pseudo" pos:start="225:13" pos:end="225:30"><block_content pos:start="225:13" pos:end="225:30">

            <expr_stmt pos:start="225:13" pos:end="225:30"><expr pos:start="225:13" pos:end="225:29"><call pos:start="225:13" pos:end="225:29"><name pos:start="225:13" pos:end="225:20">free_vlc</name><argument_list pos:start="225:21" pos:end="225:29">(<argument pos:start="225:22" pos:end="225:28"><expr pos:start="225:22" pos:end="225:28"><operator pos:start="225:22" pos:end="225:22">&amp;</operator><name pos:start="225:23" pos:end="225:28"><name pos:start="225:23" pos:end="225:25">vlc</name><index pos:start="225:26" pos:end="225:28">[<expr pos:start="225:27" pos:end="225:27"><name pos:start="225:27" pos:end="225:27">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="227:9" pos:end="229:31"><if pos:start="227:9" pos:end="229:31">if<condition pos:start="227:11" pos:end="227:21">(<expr pos:start="227:12" pos:end="227:20"><name pos:start="227:12" pos:end="227:15"><name pos:start="227:12" pos:end="227:12">h</name><index pos:start="227:13" pos:end="227:15">[<expr pos:start="227:14" pos:end="227:14"><name pos:start="227:14" pos:end="227:14">i</name></expr>]</index></name><operator pos:start="227:16" pos:end="227:16">.</operator><name pos:start="227:17" pos:end="227:20">bits</name></expr>)</condition><block type="pseudo" pos:start="229:13" pos:end="229:31"><block_content pos:start="229:13" pos:end="229:31">

            <expr_stmt pos:start="229:13" pos:end="229:31"><expr pos:start="229:13" pos:end="229:30"><call pos:start="229:13" pos:end="229:30"><name pos:start="229:13" pos:end="229:19">av_free</name><argument_list pos:start="229:20" pos:end="229:30">(<argument pos:start="229:21" pos:end="229:29"><expr pos:start="229:21" pos:end="229:29"><name pos:start="229:21" pos:end="229:24"><name pos:start="229:21" pos:end="229:21">h</name><index pos:start="229:22" pos:end="229:24">[<expr pos:start="229:23" pos:end="229:23"><name pos:start="229:23" pos:end="229:23">i</name></expr>]</index></name><operator pos:start="229:25" pos:end="229:25">.</operator><name pos:start="229:26" pos:end="229:29">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="231:9" pos:end="233:34"><if pos:start="231:9" pos:end="233:34">if<condition pos:start="231:11" pos:end="231:24">(<expr pos:start="231:12" pos:end="231:23"><name pos:start="231:12" pos:end="231:15"><name pos:start="231:12" pos:end="231:12">h</name><index pos:start="231:13" pos:end="231:15">[<expr pos:start="231:14" pos:end="231:14"><name pos:start="231:14" pos:end="231:14">i</name></expr>]</index></name><operator pos:start="231:16" pos:end="231:16">.</operator><name pos:start="231:17" pos:end="231:23">lengths</name></expr>)</condition><block type="pseudo" pos:start="233:13" pos:end="233:34"><block_content pos:start="233:13" pos:end="233:34">

            <expr_stmt pos:start="233:13" pos:end="233:34"><expr pos:start="233:13" pos:end="233:33"><call pos:start="233:13" pos:end="233:33"><name pos:start="233:13" pos:end="233:19">av_free</name><argument_list pos:start="233:20" pos:end="233:33">(<argument pos:start="233:21" pos:end="233:32"><expr pos:start="233:21" pos:end="233:32"><name pos:start="233:21" pos:end="233:24"><name pos:start="233:21" pos:end="233:21">h</name><index pos:start="233:22" pos:end="233:24">[<expr pos:start="233:23" pos:end="233:23"><name pos:start="233:23" pos:end="233:23">i</name></expr>]</index></name><operator pos:start="233:25" pos:end="233:25">.</operator><name pos:start="233:26" pos:end="233:32">lengths</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="235:9" pos:end="237:33"><if pos:start="235:9" pos:end="237:33">if<condition pos:start="235:11" pos:end="235:23">(<expr pos:start="235:12" pos:end="235:22"><name pos:start="235:12" pos:end="235:15"><name pos:start="235:12" pos:end="235:12">h</name><index pos:start="235:13" pos:end="235:15">[<expr pos:start="235:14" pos:end="235:14"><name pos:start="235:14" pos:end="235:14">i</name></expr>]</index></name><operator pos:start="235:16" pos:end="235:16">.</operator><name pos:start="235:17" pos:end="235:22">values</name></expr>)</condition><block type="pseudo" pos:start="237:13" pos:end="237:33"><block_content pos:start="237:13" pos:end="237:33">

            <expr_stmt pos:start="237:13" pos:end="237:33"><expr pos:start="237:13" pos:end="237:32"><call pos:start="237:13" pos:end="237:32"><name pos:start="237:13" pos:end="237:19">av_free</name><argument_list pos:start="237:20" pos:end="237:32">(<argument pos:start="237:21" pos:end="237:31"><expr pos:start="237:21" pos:end="237:31"><name pos:start="237:21" pos:end="237:24"><name pos:start="237:21" pos:end="237:21">h</name><index pos:start="237:22" pos:end="237:24">[<expr pos:start="237:23" pos:end="237:23"><name pos:start="237:23" pos:end="237:23">i</name></expr>]</index></name><operator pos:start="237:25" pos:end="237:25">.</operator><name pos:start="237:26" pos:end="237:31">values</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="243:5" pos:end="243:26"><expr pos:start="243:5" pos:end="243:25"><operator pos:start="243:5" pos:end="243:5">*</operator><name pos:start="243:6" pos:end="243:14">data_size</name> <operator pos:start="243:16" pos:end="243:16">=</operator> <name pos:start="243:18" pos:end="243:25">unp_size</name></expr>;</expr_stmt>

    <return pos:start="245:5" pos:end="245:20">return <expr pos:start="245:12" pos:end="245:19"><name pos:start="245:12" pos:end="245:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
