<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14769.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">residue_encode</name><parameter_list pos:start="1:27" pos:end="5:39">(<parameter pos:start="1:28" pos:end="1:51"><decl pos:start="1:28" pos:end="1:51"><type pos:start="1:28" pos:end="1:51"><name pos:start="1:28" pos:end="1:45">vorbis_enc_context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">venc</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:75"><decl pos:start="1:54" pos:end="1:75"><type pos:start="1:54" pos:end="1:75"><name pos:start="1:54" pos:end="1:71">vorbis_enc_residue</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:75">rc</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:44"><decl pos:start="3:28" pos:end="3:44"><type pos:start="3:28" pos:end="3:44"><name pos:start="3:28" pos:end="3:40">PutBitContext</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:44">pb</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:59"><decl pos:start="3:47" pos:end="3:59"><type pos:start="3:47" pos:end="3:59"><name pos:start="3:47" pos:end="3:51">float</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:59">coeffs</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:72"><decl pos:start="3:62" pos:end="3:72"><type pos:start="3:62" pos:end="3:72"><name pos:start="3:62" pos:end="3:64">int</name></type> <name pos:start="3:66" pos:end="3:72">samples</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:38"><decl pos:start="5:28" pos:end="5:38"><type pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:30">int</name></type> <name pos:start="5:32" pos:end="5:38">real_ch</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="175:1">{<block_content pos:start="9:5" pos:end="173:5">

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">pass</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">i</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">j</name></decl>, <decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:21">p</name></decl>, <decl pos:start="9:24" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:24" pos:end="9:24">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">psize</name>      <init pos:start="11:20" pos:end="11:39">= <expr pos:start="11:22" pos:end="11:39"><name pos:start="11:22" pos:end="11:39"><name pos:start="11:22" pos:end="11:23">rc</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:39">partition_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:50"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">partitions</name> <init pos:start="13:20" pos:end="13:50">= <expr pos:start="13:22" pos:end="13:50"><operator pos:start="13:22" pos:end="13:22">(</operator><name pos:start="13:23" pos:end="13:29"><name pos:start="13:23" pos:end="13:24">rc</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:29">end</name></name> <operator pos:start="13:31" pos:end="13:31">-</operator> <name pos:start="13:33" pos:end="13:41"><name pos:start="13:33" pos:end="13:34">rc</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:41">begin</name></name><operator pos:start="13:42" pos:end="13:42">)</operator> <operator pos:start="13:44" pos:end="13:44">/</operator> <name pos:start="13:46" pos:end="13:50">psize</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:51"><decl pos:start="15:5" pos:end="15:50"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">channels</name>   <init pos:start="15:20" pos:end="15:50">= <expr pos:start="15:22" pos:end="15:50"><ternary pos:start="15:22" pos:end="15:50"><condition pos:start="15:22" pos:end="15:38"><expr pos:start="15:22" pos:end="15:36"><operator pos:start="15:22" pos:end="15:22">(</operator><name pos:start="15:23" pos:end="15:30"><name pos:start="15:23" pos:end="15:24">rc</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:30">type</name></name> <operator pos:start="15:32" pos:end="15:33">==</operator> <literal type="number" pos:start="15:35" pos:end="15:35">2</literal><operator pos:start="15:36" pos:end="15:36">)</operator></expr> ?</condition><then pos:start="15:40" pos:end="15:40"> <expr pos:start="15:40" pos:end="15:40"><literal type="number" pos:start="15:40" pos:end="15:40">1</literal></expr> </then><else pos:start="15:42" pos:end="15:50">: <expr pos:start="15:44" pos:end="15:50"><name pos:start="15:44" pos:end="15:50">real_ch</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:54"><decl pos:start="17:5" pos:end="17:53"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:53"><name pos:start="17:9" pos:end="17:15">classes</name><index pos:start="17:16" pos:end="17:29">[<expr pos:start="17:17" pos:end="17:28"><name pos:start="17:17" pos:end="17:28">MAX_CHANNELS</name></expr>]</index><index pos:start="17:30" pos:end="17:53">[<expr pos:start="17:31" pos:end="17:52"><name pos:start="17:31" pos:end="17:52">NUM_RESIDUE_PARTITIONS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:64"><decl pos:start="19:5" pos:end="19:63"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">classwords</name> <init pos:start="19:20" pos:end="19:63">= <expr pos:start="19:22" pos:end="19:63"><name pos:start="19:22" pos:end="19:51"><name pos:start="19:22" pos:end="19:25">venc</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:36">codebooks</name><index pos:start="19:37" pos:end="19:51">[<expr pos:start="19:38" pos:end="19:50"><name pos:start="19:38" pos:end="19:50"><name pos:start="19:38" pos:end="19:39">rc</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:50">classbook</name></name></expr>]</index></name><operator pos:start="19:52" pos:end="19:52">.</operator><name pos:start="19:53" pos:end="19:63">ndimentions</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><call pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:10">assert</name><argument_list pos:start="23:11" pos:end="23:25">(<argument pos:start="23:12" pos:end="23:24"><expr pos:start="23:12" pos:end="23:24"><name pos:start="23:12" pos:end="23:19"><name pos:start="23:12" pos:end="23:13">rc</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:19">type</name></name> <operator pos:start="23:21" pos:end="23:22">==</operator> <literal type="number" pos:start="23:24" pos:end="23:24">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><call pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:10">assert</name><argument_list pos:start="25:11" pos:end="25:24">(<argument pos:start="25:12" pos:end="25:23"><expr pos:start="25:12" pos:end="25:23"><name pos:start="25:12" pos:end="25:18">real_ch</name> <operator pos:start="25:20" pos:end="25:21">==</operator> <literal type="number" pos:start="25:23" pos:end="25:23">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="27:5" pos:end="51:5">for <control pos:start="27:9" pos:end="27:36">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">p</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:31"><expr pos:start="27:17" pos:end="27:30"><name pos:start="27:17" pos:end="27:17">p</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:30">partitions</name></expr>;</condition> <incr pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:33">p</name><operator pos:start="27:34" pos:end="27:35">++</operator></expr></incr>)</control> <block pos:start="27:38" pos:end="51:5">{<block_content pos:start="29:9" pos:end="49:26">

        <decl_stmt pos:start="29:9" pos:end="29:35"><decl pos:start="29:9" pos:end="29:23"><type pos:start="29:9" pos:end="29:13"><name pos:start="29:9" pos:end="29:13">float</name></type> <name pos:start="29:15" pos:end="29:18">max1</name> <init pos:start="29:20" pos:end="29:23">= <expr pos:start="29:22" pos:end="29:23"><literal type="number" pos:start="29:22" pos:end="29:23">0.</literal></expr></init></decl>, <decl pos:start="29:26" pos:end="29:34"><type ref="prev" pos:start="29:9" pos:end="29:13"/><name pos:start="29:26" pos:end="29:29">max2</name> <init pos:start="29:31" pos:end="29:34">= <expr pos:start="29:33" pos:end="29:34"><literal type="number" pos:start="29:33" pos:end="29:34">0.</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:38"><decl pos:start="31:9" pos:end="31:37"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:13">s</name> <init pos:start="31:15" pos:end="31:37">= <expr pos:start="31:17" pos:end="31:37"><name pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:18">rc</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:25">begin</name></name> <operator pos:start="31:27" pos:end="31:27">+</operator> <name pos:start="31:29" pos:end="31:29">p</name> <operator pos:start="31:31" pos:end="31:31">*</operator> <name pos:start="31:33" pos:end="31:37">psize</name></expr></init></decl>;</decl_stmt>

        <for pos:start="33:9" pos:end="39:9">for <control pos:start="33:13" pos:end="33:42">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">k</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:18">s</name></expr>;</init> <condition pos:start="33:21" pos:end="33:34"><expr pos:start="33:21" pos:end="33:33"><name pos:start="33:21" pos:end="33:21">k</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <name pos:start="33:25" pos:end="33:25">s</name> <operator pos:start="33:27" pos:end="33:27">+</operator> <name pos:start="33:29" pos:end="33:33">psize</name></expr>;</condition> <incr pos:start="33:36" pos:end="33:41"><expr pos:start="33:36" pos:end="33:41"><name pos:start="33:36" pos:end="33:36">k</name> <operator pos:start="33:38" pos:end="33:39">+=</operator> <literal type="number" pos:start="33:41" pos:end="33:41">2</literal></expr></incr>)</control> <block pos:start="33:44" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:68">

            <expr_stmt pos:start="35:13" pos:end="35:68"><expr pos:start="35:13" pos:end="35:67"><name pos:start="35:13" pos:end="35:16">max1</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:67"><name pos:start="35:20" pos:end="35:24">FFMAX</name><argument_list pos:start="35:25" pos:end="35:67">(<argument pos:start="35:26" pos:end="35:29"><expr pos:start="35:26" pos:end="35:29"><name pos:start="35:26" pos:end="35:29">max1</name></expr></argument>, <argument pos:start="35:32" pos:end="35:66"><expr pos:start="35:32" pos:end="35:66"><call pos:start="35:32" pos:end="35:66"><name pos:start="35:32" pos:end="35:35">fabs</name><argument_list pos:start="35:36" pos:end="35:66">(<argument pos:start="35:37" pos:end="35:65"><expr pos:start="35:37" pos:end="35:65"><name pos:start="35:37" pos:end="35:65"><name pos:start="35:37" pos:end="35:42">coeffs</name><index pos:start="35:43" pos:end="35:65">[          <expr pos:start="35:54" pos:end="35:64"><name pos:start="35:54" pos:end="35:54">k</name> <operator pos:start="35:56" pos:end="35:56">/</operator> <name pos:start="35:58" pos:end="35:64">real_ch</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:68"><expr pos:start="37:13" pos:end="37:67"><name pos:start="37:13" pos:end="37:16">max2</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:67"><name pos:start="37:20" pos:end="37:24">FFMAX</name><argument_list pos:start="37:25" pos:end="37:67">(<argument pos:start="37:26" pos:end="37:29"><expr pos:start="37:26" pos:end="37:29"><name pos:start="37:26" pos:end="37:29">max2</name></expr></argument>, <argument pos:start="37:32" pos:end="37:66"><expr pos:start="37:32" pos:end="37:66"><call pos:start="37:32" pos:end="37:66"><name pos:start="37:32" pos:end="37:35">fabs</name><argument_list pos:start="37:36" pos:end="37:66">(<argument pos:start="37:37" pos:end="37:65"><expr pos:start="37:37" pos:end="37:65"><name pos:start="37:37" pos:end="37:65"><name pos:start="37:37" pos:end="37:42">coeffs</name><index pos:start="37:43" pos:end="37:65">[<expr pos:start="37:44" pos:end="37:64"><name pos:start="37:44" pos:end="37:50">samples</name> <operator pos:start="37:52" pos:end="37:52">+</operator> <name pos:start="37:54" pos:end="37:54">k</name> <operator pos:start="37:56" pos:end="37:56">/</operator> <name pos:start="37:58" pos:end="37:64">real_ch</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="43:9" pos:end="47:22">for <control pos:start="43:13" pos:end="43:53">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">i</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:48"><expr pos:start="43:21" pos:end="43:47"><name pos:start="43:21" pos:end="43:21">i</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <name pos:start="43:25" pos:end="43:43"><name pos:start="43:25" pos:end="43:26">rc</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:43">classifications</name></name> <operator pos:start="43:45" pos:end="43:45">-</operator> <literal type="number" pos:start="43:47" pos:end="43:47">1</literal></expr>;</condition> <incr pos:start="43:50" pos:end="43:52"><expr pos:start="43:50" pos:end="43:52"><name pos:start="43:50" pos:end="43:50">i</name><operator pos:start="43:51" pos:end="43:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:13" pos:end="47:22"><block_content pos:start="45:13" pos:end="47:22">

            <if_stmt pos:start="45:13" pos:end="47:22"><if pos:start="45:13" pos:end="47:22">if <condition pos:start="45:16" pos:end="45:65">(<expr pos:start="45:17" pos:end="45:64"><name pos:start="45:17" pos:end="45:20">max1</name> <operator pos:start="45:22" pos:end="45:22">&lt;</operator> <name pos:start="45:24" pos:end="45:38"><name pos:start="45:24" pos:end="45:25">rc</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:32">maxes</name><index pos:start="45:33" pos:end="45:35">[<expr pos:start="45:34" pos:end="45:34"><name pos:start="45:34" pos:end="45:34">i</name></expr>]</index><index pos:start="45:36" pos:end="45:38">[<expr pos:start="45:37" pos:end="45:37"><literal type="number" pos:start="45:37" pos:end="45:37">0</literal></expr>]</index></name> <operator pos:start="45:40" pos:end="45:41">&amp;&amp;</operator> <name pos:start="45:43" pos:end="45:46">max2</name> <operator pos:start="45:48" pos:end="45:48">&lt;</operator> <name pos:start="45:50" pos:end="45:64"><name pos:start="45:50" pos:end="45:51">rc</name><operator pos:start="45:52" pos:end="45:53">-&gt;</operator><name pos:start="45:54" pos:end="45:58">maxes</name><index pos:start="45:59" pos:end="45:61">[<expr pos:start="45:60" pos:end="45:60"><name pos:start="45:60" pos:end="45:60">i</name></expr>]</index><index pos:start="45:62" pos:end="45:64">[<expr pos:start="45:63" pos:end="45:63"><literal type="number" pos:start="45:63" pos:end="45:63">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:22"><block_content pos:start="47:17" pos:end="47:22">

                <break pos:start="47:17" pos:end="47:22">break;</break></block_content></block></if></if_stmt></block_content></block></for>

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:15">classes</name><index pos:start="49:16" pos:end="49:18">[<expr pos:start="49:17" pos:end="49:17"><literal type="number" pos:start="49:17" pos:end="49:17">0</literal></expr>]</index><index pos:start="49:19" pos:end="49:21">[<expr pos:start="49:20" pos:end="49:20"><name pos:start="49:20" pos:end="49:20">p</name></expr>]</index></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <name pos:start="49:25" pos:end="49:25">i</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="55:5" pos:end="173:5">for <control pos:start="55:9" pos:end="55:36">(<init pos:start="55:10" pos:end="55:18"><expr pos:start="55:10" pos:end="55:17"><name pos:start="55:10" pos:end="55:13">pass</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <literal type="number" pos:start="55:17" pos:end="55:17">0</literal></expr>;</init> <condition pos:start="55:20" pos:end="55:28"><expr pos:start="55:20" pos:end="55:27"><name pos:start="55:20" pos:end="55:23">pass</name> <operator pos:start="55:25" pos:end="55:25">&lt;</operator> <literal type="number" pos:start="55:27" pos:end="55:27">8</literal></expr>;</condition> <incr pos:start="55:30" pos:end="55:35"><expr pos:start="55:30" pos:end="55:35"><name pos:start="55:30" pos:end="55:33">pass</name><operator pos:start="55:34" pos:end="55:35">++</operator></expr></incr>)</control> <block pos:start="55:38" pos:end="173:5">{<block_content pos:start="57:9" pos:end="171:9">

        <expr_stmt pos:start="57:9" pos:end="57:14"><expr pos:start="57:9" pos:end="57:13"><name pos:start="57:9" pos:end="57:9">p</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <literal type="number" pos:start="57:13" pos:end="57:13">0</literal></expr>;</expr_stmt>

        <while pos:start="59:9" pos:end="171:9">while <condition pos:start="59:15" pos:end="59:30">(<expr pos:start="59:16" pos:end="59:29"><name pos:start="59:16" pos:end="59:16">p</name> <operator pos:start="59:18" pos:end="59:18">&lt;</operator> <name pos:start="59:20" pos:end="59:29">partitions</name></expr>)</condition> <block pos:start="59:32" pos:end="171:9">{<block_content pos:start="61:13" pos:end="169:13">

            <if_stmt pos:start="61:13" pos:end="79:17"><if pos:start="61:13" pos:end="79:17">if <condition pos:start="61:16" pos:end="61:26">(<expr pos:start="61:17" pos:end="61:25"><name pos:start="61:17" pos:end="61:20">pass</name> <operator pos:start="61:22" pos:end="61:23">==</operator> <literal type="number" pos:start="61:25" pos:end="61:25">0</literal></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="79:17"><block_content pos:start="63:17" pos:end="79:17">

                <for pos:start="63:17" pos:end="79:17">for <control pos:start="63:21" pos:end="63:46">(<init pos:start="63:22" pos:end="63:27"><expr pos:start="63:22" pos:end="63:26"><name pos:start="63:22" pos:end="63:22">j</name> <operator pos:start="63:24" pos:end="63:24">=</operator> <literal type="number" pos:start="63:26" pos:end="63:26">0</literal></expr>;</init> <condition pos:start="63:29" pos:end="63:41"><expr pos:start="63:29" pos:end="63:40"><name pos:start="63:29" pos:end="63:29">j</name> <operator pos:start="63:31" pos:end="63:31">&lt;</operator> <name pos:start="63:33" pos:end="63:40">channels</name></expr>;</condition> <incr pos:start="63:43" pos:end="63:45"><expr pos:start="63:43" pos:end="63:45"><name pos:start="63:43" pos:end="63:43">j</name><operator pos:start="63:44" pos:end="63:45">++</operator></expr></incr>)</control> <block pos:start="63:48" pos:end="79:17">{<block_content pos:start="65:21" pos:end="77:50">

                    <decl_stmt pos:start="65:21" pos:end="65:81"><decl pos:start="65:21" pos:end="65:80"><type pos:start="65:21" pos:end="65:41"><name pos:start="65:21" pos:end="65:39">vorbis_enc_codebook</name> <modifier pos:start="65:41" pos:end="65:41">*</modifier></type> <name pos:start="65:43" pos:end="65:46">book</name> <init pos:start="65:48" pos:end="65:80">= <expr pos:start="65:50" pos:end="65:80"><operator pos:start="65:50" pos:end="65:50">&amp;</operator><name pos:start="65:51" pos:end="65:80"><name pos:start="65:51" pos:end="65:54">venc</name><operator pos:start="65:55" pos:end="65:56">-&gt;</operator><name pos:start="65:57" pos:end="65:65">codebooks</name><index pos:start="65:66" pos:end="65:80">[<expr pos:start="65:67" pos:end="65:79"><name pos:start="65:67" pos:end="65:79"><name pos:start="65:67" pos:end="65:68">rc</name><operator pos:start="65:69" pos:end="65:70">-&gt;</operator><name pos:start="65:71" pos:end="65:79">classbook</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="67:21" pos:end="67:34"><decl pos:start="67:21" pos:end="67:33"><type pos:start="67:21" pos:end="67:23"><name pos:start="67:21" pos:end="67:23">int</name></type> <name pos:start="67:25" pos:end="67:29">entry</name> <init pos:start="67:31" pos:end="67:33">= <expr pos:start="67:33" pos:end="67:33"><literal type="number" pos:start="67:33" pos:end="67:33">0</literal></expr></init></decl>;</decl_stmt>

                    <for pos:start="69:21" pos:end="75:21">for <control pos:start="69:25" pos:end="69:52">(<init pos:start="69:26" pos:end="69:31"><expr pos:start="69:26" pos:end="69:30"><name pos:start="69:26" pos:end="69:26">i</name> <operator pos:start="69:28" pos:end="69:28">=</operator> <literal type="number" pos:start="69:30" pos:end="69:30">0</literal></expr>;</init> <condition pos:start="69:33" pos:end="69:47"><expr pos:start="69:33" pos:end="69:46"><name pos:start="69:33" pos:end="69:33">i</name> <operator pos:start="69:35" pos:end="69:35">&lt;</operator> <name pos:start="69:37" pos:end="69:46">classwords</name></expr>;</condition> <incr pos:start="69:49" pos:end="69:51"><expr pos:start="69:49" pos:end="69:51"><name pos:start="69:49" pos:end="69:49">i</name><operator pos:start="69:50" pos:end="69:51">++</operator></expr></incr>)</control> <block pos:start="69:54" pos:end="75:21">{<block_content pos:start="71:25" pos:end="73:51">

                        <expr_stmt pos:start="71:25" pos:end="71:53"><expr pos:start="71:25" pos:end="71:52"><name pos:start="71:25" pos:end="71:29">entry</name> <operator pos:start="71:31" pos:end="71:32">*=</operator> <name pos:start="71:34" pos:end="71:52"><name pos:start="71:34" pos:end="71:35">rc</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:52">classifications</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="73:25" pos:end="73:51"><expr pos:start="73:25" pos:end="73:50"><name pos:start="73:25" pos:end="73:29">entry</name> <operator pos:start="73:31" pos:end="73:32">+=</operator> <name pos:start="73:34" pos:end="73:50"><name pos:start="73:34" pos:end="73:40">classes</name><index pos:start="73:41" pos:end="73:43">[<expr pos:start="73:42" pos:end="73:42"><name pos:start="73:42" pos:end="73:42">j</name></expr>]</index><index pos:start="73:44" pos:end="73:50">[<expr pos:start="73:45" pos:end="73:49"><name pos:start="73:45" pos:end="73:45">p</name> <operator pos:start="73:47" pos:end="73:47">+</operator> <name pos:start="73:49" pos:end="73:49">i</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="77:21" pos:end="77:50"><expr pos:start="77:21" pos:end="77:49"><call pos:start="77:21" pos:end="77:49"><name pos:start="77:21" pos:end="77:32">put_codeword</name><argument_list pos:start="77:33" pos:end="77:49">(<argument pos:start="77:34" pos:end="77:35"><expr pos:start="77:34" pos:end="77:35"><name pos:start="77:34" pos:end="77:35">pb</name></expr></argument>, <argument pos:start="77:38" pos:end="77:41"><expr pos:start="77:38" pos:end="77:41"><name pos:start="77:38" pos:end="77:41">book</name></expr></argument>, <argument pos:start="77:44" pos:end="77:48"><expr pos:start="77:44" pos:end="77:48"><name pos:start="77:44" pos:end="77:48">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for></block_content></block></if></if_stmt>

            <for pos:start="81:13" pos:end="169:13">for <control pos:start="81:17" pos:end="81:67">(<init pos:start="81:18" pos:end="81:23"><expr pos:start="81:18" pos:end="81:22"><name pos:start="81:18" pos:end="81:18">i</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</init> <condition pos:start="81:25" pos:end="81:57"><expr pos:start="81:25" pos:end="81:56"><name pos:start="81:25" pos:end="81:25">i</name> <operator pos:start="81:27" pos:end="81:27">&lt;</operator> <name pos:start="81:29" pos:end="81:38">classwords</name> <operator pos:start="81:40" pos:end="81:41">&amp;&amp;</operator> <name pos:start="81:43" pos:end="81:43">p</name> <operator pos:start="81:45" pos:end="81:45">&lt;</operator> <name pos:start="81:47" pos:end="81:56">partitions</name></expr>;</condition> <incr pos:start="81:59" pos:end="81:66"><expr pos:start="81:59" pos:end="81:61"><name pos:start="81:59" pos:end="81:59">i</name><operator pos:start="81:60" pos:end="81:61">++</operator></expr><operator pos:start="81:62" pos:end="81:62">,</operator> <expr pos:start="81:64" pos:end="81:66"><name pos:start="81:64" pos:end="81:64">p</name><operator pos:start="81:65" pos:end="81:66">++</operator></expr></incr>)</control> <block pos:start="81:69" pos:end="169:13">{<block_content pos:start="83:17" pos:end="167:17">

                <for pos:start="83:17" pos:end="167:17">for <control pos:start="83:21" pos:end="83:46">(<init pos:start="83:22" pos:end="83:27"><expr pos:start="83:22" pos:end="83:26"><name pos:start="83:22" pos:end="83:22">j</name> <operator pos:start="83:24" pos:end="83:24">=</operator> <literal type="number" pos:start="83:26" pos:end="83:26">0</literal></expr>;</init> <condition pos:start="83:29" pos:end="83:41"><expr pos:start="83:29" pos:end="83:40"><name pos:start="83:29" pos:end="83:29">j</name> <operator pos:start="83:31" pos:end="83:31">&lt;</operator> <name pos:start="83:33" pos:end="83:40">channels</name></expr>;</condition> <incr pos:start="83:43" pos:end="83:45"><expr pos:start="83:43" pos:end="83:45"><name pos:start="83:43" pos:end="83:43">j</name><operator pos:start="83:44" pos:end="83:45">++</operator></expr></incr>)</control> <block pos:start="83:48" pos:end="167:17">{<block_content pos:start="85:21" pos:end="165:21">

                    <decl_stmt pos:start="85:21" pos:end="85:63"><decl pos:start="85:21" pos:end="85:62"><type pos:start="85:21" pos:end="85:23"><name pos:start="85:21" pos:end="85:23">int</name></type> <name pos:start="85:25" pos:end="85:29">nbook</name> <init pos:start="85:31" pos:end="85:62">= <expr pos:start="85:33" pos:end="85:62"><name pos:start="85:33" pos:end="85:62"><name pos:start="85:33" pos:end="85:34">rc</name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:41">books</name><index pos:start="85:42" pos:end="85:56">[<expr pos:start="85:43" pos:end="85:55"><name pos:start="85:43" pos:end="85:55"><name pos:start="85:43" pos:end="85:49">classes</name><index pos:start="85:50" pos:end="85:52">[<expr pos:start="85:51" pos:end="85:51"><name pos:start="85:51" pos:end="85:51">j</name></expr>]</index><index pos:start="85:53" pos:end="85:55">[<expr pos:start="85:54" pos:end="85:54"><name pos:start="85:54" pos:end="85:54">p</name></expr>]</index></name></expr>]</index><index pos:start="85:57" pos:end="85:62">[<expr pos:start="85:58" pos:end="85:61"><name pos:start="85:58" pos:end="85:61">pass</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="87:21" pos:end="87:73"><decl pos:start="87:21" pos:end="87:72"><type pos:start="87:21" pos:end="87:41"><name pos:start="87:21" pos:end="87:39">vorbis_enc_codebook</name> <modifier pos:start="87:41" pos:end="87:41">*</modifier></type> <name pos:start="87:43" pos:end="87:46">book</name> <init pos:start="87:48" pos:end="87:72">= <expr pos:start="87:50" pos:end="87:72"><operator pos:start="87:50" pos:end="87:50">&amp;</operator><name pos:start="87:51" pos:end="87:72"><name pos:start="87:51" pos:end="87:54">venc</name><operator pos:start="87:55" pos:end="87:56">-&gt;</operator><name pos:start="87:57" pos:end="87:65">codebooks</name><index pos:start="87:66" pos:end="87:72">[<expr pos:start="87:67" pos:end="87:71"><name pos:start="87:67" pos:end="87:71">nbook</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="89:21" pos:end="89:74"><decl pos:start="89:21" pos:end="89:73"><type pos:start="89:21" pos:end="89:27"><name pos:start="89:21" pos:end="89:25">float</name> <modifier pos:start="89:27" pos:end="89:27">*</modifier></type><name pos:start="89:28" pos:end="89:30">buf</name> <init pos:start="89:32" pos:end="89:73">= <expr pos:start="89:34" pos:end="89:73"><name pos:start="89:34" pos:end="89:39">coeffs</name> <operator pos:start="89:41" pos:end="89:41">+</operator> <name pos:start="89:43" pos:end="89:49">samples</name><operator pos:start="89:50" pos:end="89:50">*</operator><name pos:start="89:51" pos:end="89:51">j</name> <operator pos:start="89:53" pos:end="89:53">+</operator> <name pos:start="89:55" pos:end="89:63"><name pos:start="89:55" pos:end="89:56">rc</name><operator pos:start="89:57" pos:end="89:58">-&gt;</operator><name pos:start="89:59" pos:end="89:63">begin</name></name> <operator pos:start="89:65" pos:end="89:65">+</operator> <name pos:start="89:67" pos:end="89:67">p</name><operator pos:start="89:68" pos:end="89:68">*</operator><name pos:start="89:69" pos:end="89:73">psize</name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="91:21" pos:end="93:33"><if pos:start="91:21" pos:end="93:33">if <condition pos:start="91:24" pos:end="91:36">(<expr pos:start="91:25" pos:end="91:35"><name pos:start="91:25" pos:end="91:29">nbook</name> <operator pos:start="91:31" pos:end="91:32">==</operator> <operator pos:start="91:34" pos:end="91:34">-</operator><literal type="number" pos:start="91:35" pos:end="91:35">1</literal></expr>)</condition><block type="pseudo" pos:start="93:25" pos:end="93:33"><block_content pos:start="93:25" pos:end="93:33">

                        <continue pos:start="93:25" pos:end="93:33">continue;</continue></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="97:21" pos:end="97:59"><expr pos:start="97:21" pos:end="97:58"><call pos:start="97:21" pos:end="97:58"><name pos:start="97:21" pos:end="97:26">assert</name><argument_list pos:start="97:27" pos:end="97:58">(<argument pos:start="97:28" pos:end="97:57"><expr pos:start="97:28" pos:end="97:57"><name pos:start="97:28" pos:end="97:35"><name pos:start="97:28" pos:end="97:29">rc</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:35">type</name></name> <operator pos:start="97:37" pos:end="97:38">==</operator> <literal type="number" pos:start="97:40" pos:end="97:40">0</literal> <operator pos:start="97:42" pos:end="97:43">||</operator> <name pos:start="97:45" pos:end="97:52"><name pos:start="97:45" pos:end="97:46">rc</name><operator pos:start="97:47" pos:end="97:48">-&gt;</operator><name pos:start="97:49" pos:end="97:52">type</name></name> <operator pos:start="97:54" pos:end="97:55">==</operator> <literal type="number" pos:start="97:57" pos:end="97:57">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="99:57"><expr pos:start="99:21" pos:end="99:56"><call pos:start="99:21" pos:end="99:56"><name pos:start="99:21" pos:end="99:26">assert</name><argument_list pos:start="99:27" pos:end="99:56">(<argument pos:start="99:28" pos:end="99:55"><expr pos:start="99:28" pos:end="99:55"><operator pos:start="99:28" pos:end="99:28">!</operator><operator pos:start="99:29" pos:end="99:29">(</operator><name pos:start="99:30" pos:end="99:34">psize</name> <operator pos:start="99:36" pos:end="99:36">%</operator> <name pos:start="99:38" pos:end="99:54"><name pos:start="99:38" pos:end="99:41">book</name><operator pos:start="99:42" pos:end="99:43">-&gt;</operator><name pos:start="99:44" pos:end="99:54">ndimentions</name></name><operator pos:start="99:55" pos:end="99:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="103:21" pos:end="165:21"><if pos:start="103:21" pos:end="117:21">if <condition pos:start="103:24" pos:end="103:38">(<expr pos:start="103:25" pos:end="103:37"><name pos:start="103:25" pos:end="103:32"><name pos:start="103:25" pos:end="103:26">rc</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:32">type</name></name> <operator pos:start="103:34" pos:end="103:35">==</operator> <literal type="number" pos:start="103:37" pos:end="103:37">0</literal></expr>)</condition> <block pos:start="103:40" pos:end="117:21">{<block_content pos:start="105:25" pos:end="115:25">

                        <for pos:start="105:25" pos:end="115:25">for <control pos:start="105:29" pos:end="105:70">(<init pos:start="105:30" pos:end="105:35"><expr pos:start="105:30" pos:end="105:34"><name pos:start="105:30" pos:end="105:30">k</name> <operator pos:start="105:32" pos:end="105:32">=</operator> <literal type="number" pos:start="105:34" pos:end="105:34">0</literal></expr>;</init> <condition pos:start="105:37" pos:end="105:46"><expr pos:start="105:37" pos:end="105:45"><name pos:start="105:37" pos:end="105:37">k</name> <operator pos:start="105:39" pos:end="105:39">&lt;</operator> <name pos:start="105:41" pos:end="105:45">psize</name></expr>;</condition> <incr pos:start="105:48" pos:end="105:69"><expr pos:start="105:48" pos:end="105:69"><name pos:start="105:48" pos:end="105:48">k</name> <operator pos:start="105:50" pos:end="105:51">+=</operator> <name pos:start="105:53" pos:end="105:69"><name pos:start="105:53" pos:end="105:56">book</name><operator pos:start="105:57" pos:end="105:58">-&gt;</operator><name pos:start="105:59" pos:end="105:69">ndimentions</name></name></expr></incr>)</control> <block pos:start="105:72" pos:end="115:25">{<block_content pos:start="107:29" pos:end="113:51">

                            <decl_stmt pos:start="107:29" pos:end="107:69"><decl pos:start="107:29" pos:end="107:68"><type pos:start="107:29" pos:end="107:35"><name pos:start="107:29" pos:end="107:33">float</name> <modifier pos:start="107:35" pos:end="107:35">*</modifier></type><name pos:start="107:36" pos:end="107:36">a</name> <init pos:start="107:38" pos:end="107:68">= <expr pos:start="107:40" pos:end="107:68"><call pos:start="107:40" pos:end="107:68"><name pos:start="107:40" pos:end="107:49">put_vector</name><argument_list pos:start="107:50" pos:end="107:68">(<argument pos:start="107:51" pos:end="107:54"><expr pos:start="107:51" pos:end="107:54"><name pos:start="107:51" pos:end="107:54">book</name></expr></argument>, <argument pos:start="107:57" pos:end="107:58"><expr pos:start="107:57" pos:end="107:58"><name pos:start="107:57" pos:end="107:58">pb</name></expr></argument>, <argument pos:start="107:61" pos:end="107:67"><expr pos:start="107:61" pos:end="107:67"><operator pos:start="107:61" pos:end="107:61">&amp;</operator><name pos:start="107:62" pos:end="107:67"><name pos:start="107:62" pos:end="107:64">buf</name><index pos:start="107:65" pos:end="107:67">[<expr pos:start="107:66" pos:end="107:66"><name pos:start="107:66" pos:end="107:66">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="109:29" pos:end="109:34"><decl pos:start="109:29" pos:end="109:33"><type pos:start="109:29" pos:end="109:31"><name pos:start="109:29" pos:end="109:31">int</name></type> <name pos:start="109:33" pos:end="109:33">l</name></decl>;</decl_stmt>

                            <for pos:start="111:29" pos:end="113:51">for <control pos:start="111:33" pos:end="111:67">(<init pos:start="111:34" pos:end="111:39"><expr pos:start="111:34" pos:end="111:38"><name pos:start="111:34" pos:end="111:34">l</name> <operator pos:start="111:36" pos:end="111:36">=</operator> <literal type="number" pos:start="111:38" pos:end="111:38">0</literal></expr>;</init> <condition pos:start="111:41" pos:end="111:62"><expr pos:start="111:41" pos:end="111:61"><name pos:start="111:41" pos:end="111:41">l</name> <operator pos:start="111:43" pos:end="111:43">&lt;</operator> <name pos:start="111:45" pos:end="111:61"><name pos:start="111:45" pos:end="111:48">book</name><operator pos:start="111:49" pos:end="111:50">-&gt;</operator><name pos:start="111:51" pos:end="111:61">ndimentions</name></name></expr>;</condition> <incr pos:start="111:64" pos:end="111:66"><expr pos:start="111:64" pos:end="111:66"><name pos:start="111:64" pos:end="111:64">l</name><operator pos:start="111:65" pos:end="111:66">++</operator></expr></incr>)</control><block type="pseudo" pos:start="113:33" pos:end="113:51"><block_content pos:start="113:33" pos:end="113:51">

                                <expr_stmt pos:start="113:33" pos:end="113:51"><expr pos:start="113:33" pos:end="113:50"><name pos:start="113:33" pos:end="113:42"><name pos:start="113:33" pos:end="113:35">buf</name><index pos:start="113:36" pos:end="113:42">[<expr pos:start="113:37" pos:end="113:41"><name pos:start="113:37" pos:end="113:37">k</name> <operator pos:start="113:39" pos:end="113:39">+</operator> <name pos:start="113:41" pos:end="113:41">l</name></expr>]</index></name> <operator pos:start="113:44" pos:end="113:45">-=</operator> <name pos:start="113:47" pos:end="113:50"><name pos:start="113:47" pos:end="113:47">a</name><index pos:start="113:48" pos:end="113:50">[<expr pos:start="113:49" pos:end="113:49"><name pos:start="113:49" pos:end="113:49">l</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                        </block_content>}</block></for>

                    </block_content>}</block></if> <else pos:start="117:23" pos:end="165:21">else <block pos:start="117:28" pos:end="165:21">{<block_content pos:start="119:25" pos:end="163:25">

                        <decl_stmt pos:start="119:25" pos:end="119:62"><decl pos:start="119:25" pos:end="119:53"><type pos:start="119:25" pos:end="119:27"><name pos:start="119:25" pos:end="119:27">int</name></type> <name pos:start="119:29" pos:end="119:29">s</name> <init pos:start="119:31" pos:end="119:53">= <expr pos:start="119:33" pos:end="119:53"><name pos:start="119:33" pos:end="119:41"><name pos:start="119:33" pos:end="119:34">rc</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:41">begin</name></name> <operator pos:start="119:43" pos:end="119:43">+</operator> <name pos:start="119:45" pos:end="119:45">p</name> <operator pos:start="119:47" pos:end="119:47">*</operator> <name pos:start="119:49" pos:end="119:53">psize</name></expr></init></decl>, <decl pos:start="119:56" pos:end="119:57"><type ref="prev" pos:start="119:25" pos:end="119:27"/><name pos:start="119:56" pos:end="119:57">a1</name></decl>, <decl pos:start="119:60" pos:end="119:61"><type ref="prev" pos:start="119:25" pos:end="119:27"/><name pos:start="119:60" pos:end="119:61">b1</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="121:25" pos:end="121:53"><expr pos:start="121:25" pos:end="121:52"><name pos:start="121:25" pos:end="121:26">a1</name> <operator pos:start="121:28" pos:end="121:28">=</operator> <operator pos:start="121:30" pos:end="121:30">(</operator><name pos:start="121:31" pos:end="121:31">s</name> <operator pos:start="121:33" pos:end="121:33">%</operator> <name pos:start="121:35" pos:end="121:41">real_ch</name><operator pos:start="121:42" pos:end="121:42">)</operator> <operator pos:start="121:44" pos:end="121:44">*</operator> <name pos:start="121:46" pos:end="121:52">samples</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="123:25" pos:end="123:42"><expr pos:start="123:25" pos:end="123:41"><name pos:start="123:25" pos:end="123:26">b1</name> <operator pos:start="123:28" pos:end="123:28">=</operator>  <name pos:start="123:31" pos:end="123:31">s</name> <operator pos:start="123:33" pos:end="123:33">/</operator> <name pos:start="123:35" pos:end="123:41">real_ch</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="125:25" pos:end="125:47"><expr pos:start="125:25" pos:end="125:46"><name pos:start="125:25" pos:end="125:25">s</name>  <operator pos:start="125:28" pos:end="125:28">=</operator> <name pos:start="125:30" pos:end="125:36">real_ch</name> <operator pos:start="125:38" pos:end="125:38">*</operator> <name pos:start="125:40" pos:end="125:46">samples</name></expr>;</expr_stmt>

                        <for pos:start="127:25" pos:end="163:25">for <control pos:start="127:29" pos:end="127:70">(<init pos:start="127:30" pos:end="127:35"><expr pos:start="127:30" pos:end="127:34"><name pos:start="127:30" pos:end="127:30">k</name> <operator pos:start="127:32" pos:end="127:32">=</operator> <literal type="number" pos:start="127:34" pos:end="127:34">0</literal></expr>;</init> <condition pos:start="127:37" pos:end="127:46"><expr pos:start="127:37" pos:end="127:45"><name pos:start="127:37" pos:end="127:37">k</name> <operator pos:start="127:39" pos:end="127:39">&lt;</operator> <name pos:start="127:41" pos:end="127:45">psize</name></expr>;</condition> <incr pos:start="127:48" pos:end="127:69"><expr pos:start="127:48" pos:end="127:69"><name pos:start="127:48" pos:end="127:48">k</name> <operator pos:start="127:50" pos:end="127:51">+=</operator> <name pos:start="127:53" pos:end="127:69"><name pos:start="127:53" pos:end="127:56">book</name><operator pos:start="127:57" pos:end="127:58">-&gt;</operator><name pos:start="127:59" pos:end="127:69">ndimentions</name></name></expr></incr>)</control> <block pos:start="127:72" pos:end="163:25">{<block_content pos:start="129:29" pos:end="161:29">

                            <decl_stmt pos:start="129:29" pos:end="129:54"><decl pos:start="129:29" pos:end="129:35"><type pos:start="129:29" pos:end="129:31"><name pos:start="129:29" pos:end="129:31">int</name></type> <name pos:start="129:33" pos:end="129:35">dim</name></decl>, <decl pos:start="129:38" pos:end="129:44"><type ref="prev" pos:start="129:29" pos:end="129:31"/><name pos:start="129:38" pos:end="129:39">a2</name> <init pos:start="129:41" pos:end="129:44">= <expr pos:start="129:43" pos:end="129:44"><name pos:start="129:43" pos:end="129:44">a1</name></expr></init></decl>, <decl pos:start="129:47" pos:end="129:53"><type ref="prev" pos:start="129:29" pos:end="129:31"/><name pos:start="129:47" pos:end="129:48">b2</name> <init pos:start="129:50" pos:end="129:53">= <expr pos:start="129:52" pos:end="129:53"><name pos:start="129:52" pos:end="129:53">b1</name></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="131:29" pos:end="131:67"><decl pos:start="131:29" pos:end="131:55"><type pos:start="131:29" pos:end="131:33"><name pos:start="131:29" pos:end="131:33">float</name></type> <name pos:start="131:35" pos:end="131:55"><name pos:start="131:35" pos:end="131:37">vec</name><index pos:start="131:38" pos:end="131:55">[<expr pos:start="131:39" pos:end="131:54"><name pos:start="131:39" pos:end="131:54">MAX_CODEBOOK_DIM</name></expr>]</index></name></decl>, <decl pos:start="131:58" pos:end="131:66"><type ref="prev" pos:start="131:29" pos:end="131:33"><modifier pos:start="131:58" pos:end="131:58">*</modifier></type><name pos:start="131:59" pos:end="131:60">pv</name> <init pos:start="131:62" pos:end="131:66">= <expr pos:start="131:64" pos:end="131:66"><name pos:start="131:64" pos:end="131:66">vec</name></expr></init></decl>;</decl_stmt>

                            <for pos:start="133:29" pos:end="145:29">for <control pos:start="133:33" pos:end="133:66">(<init pos:start="133:34" pos:end="133:57"><expr pos:start="133:34" pos:end="133:56"><name pos:start="133:34" pos:end="133:36">dim</name> <operator pos:start="133:38" pos:end="133:38">=</operator> <name pos:start="133:40" pos:end="133:56"><name pos:start="133:40" pos:end="133:43">book</name><operator pos:start="133:44" pos:end="133:45">-&gt;</operator><name pos:start="133:46" pos:end="133:56">ndimentions</name></name></expr>;</init> <condition pos:start="133:59" pos:end="133:64"><expr pos:start="133:59" pos:end="133:63"><name pos:start="133:59" pos:end="133:61">dim</name><operator pos:start="133:62" pos:end="133:63">--</operator></expr>;</condition> <incr/>)</control> <block pos:start="133:68" pos:end="145:29">{<block_content pos:start="135:33" pos:end="143:33">

                                <expr_stmt pos:start="135:33" pos:end="135:56"><expr pos:start="135:33" pos:end="135:55"><operator pos:start="135:33" pos:end="135:33">*</operator><name pos:start="135:34" pos:end="135:35">pv</name><operator pos:start="135:36" pos:end="135:37">++</operator> <operator pos:start="135:39" pos:end="135:39">=</operator> <name pos:start="135:41" pos:end="135:55"><name pos:start="135:41" pos:end="135:46">coeffs</name><index pos:start="135:47" pos:end="135:55">[<expr pos:start="135:48" pos:end="135:54"><name pos:start="135:48" pos:end="135:49">a2</name> <operator pos:start="135:51" pos:end="135:51">+</operator> <name pos:start="135:53" pos:end="135:54">b2</name></expr>]</index></name></expr>;</expr_stmt>

                                <if_stmt pos:start="137:33" pos:end="143:33"><if pos:start="137:33" pos:end="143:33">if <condition pos:start="137:36" pos:end="137:57">(<expr pos:start="137:37" pos:end="137:56"><operator pos:start="137:37" pos:end="137:37">(</operator><name pos:start="137:38" pos:end="137:39">a2</name> <operator pos:start="137:41" pos:end="137:42">+=</operator> <name pos:start="137:44" pos:end="137:50">samples</name><operator pos:start="137:51" pos:end="137:51">)</operator> <operator pos:start="137:53" pos:end="137:54">==</operator> <name pos:start="137:56" pos:end="137:56">s</name></expr>)</condition> <block pos:start="137:59" pos:end="143:33">{<block_content pos:start="139:37" pos:end="141:41">

                                    <expr_stmt pos:start="139:37" pos:end="139:43"><expr pos:start="139:37" pos:end="139:42"><name pos:start="139:37" pos:end="139:38">a2</name> <operator pos:start="139:40" pos:end="139:40">=</operator> <literal type="number" pos:start="139:42" pos:end="139:42">0</literal></expr>;</expr_stmt>

                                    <expr_stmt pos:start="141:37" pos:end="141:41"><expr pos:start="141:37" pos:end="141:40"><name pos:start="141:37" pos:end="141:38">b2</name><operator pos:start="141:39" pos:end="141:40">++</operator></expr>;</expr_stmt>

                                </block_content>}</block></if></if_stmt>

                            </block_content>}</block></for>

                            <expr_stmt pos:start="147:29" pos:end="147:59"><expr pos:start="147:29" pos:end="147:58"><name pos:start="147:29" pos:end="147:30">pv</name> <operator pos:start="147:32" pos:end="147:32">=</operator> <call pos:start="147:34" pos:end="147:58"><name pos:start="147:34" pos:end="147:43">put_vector</name><argument_list pos:start="147:44" pos:end="147:58">(<argument pos:start="147:45" pos:end="147:48"><expr pos:start="147:45" pos:end="147:48"><name pos:start="147:45" pos:end="147:48">book</name></expr></argument>, <argument pos:start="147:51" pos:end="147:52"><expr pos:start="147:51" pos:end="147:52"><name pos:start="147:51" pos:end="147:52">pb</name></expr></argument>, <argument pos:start="147:55" pos:end="147:57"><expr pos:start="147:55" pos:end="147:57"><name pos:start="147:55" pos:end="147:57">vec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <for pos:start="149:29" pos:end="161:29">for <control pos:start="149:33" pos:end="149:66">(<init pos:start="149:34" pos:end="149:57"><expr pos:start="149:34" pos:end="149:56"><name pos:start="149:34" pos:end="149:36">dim</name> <operator pos:start="149:38" pos:end="149:38">=</operator> <name pos:start="149:40" pos:end="149:56"><name pos:start="149:40" pos:end="149:43">book</name><operator pos:start="149:44" pos:end="149:45">-&gt;</operator><name pos:start="149:46" pos:end="149:56">ndimentions</name></name></expr>;</init> <condition pos:start="149:59" pos:end="149:64"><expr pos:start="149:59" pos:end="149:63"><name pos:start="149:59" pos:end="149:61">dim</name><operator pos:start="149:62" pos:end="149:63">--</operator></expr>;</condition> <incr/>)</control> <block pos:start="149:68" pos:end="161:29">{<block_content pos:start="151:33" pos:end="159:33">

                                <expr_stmt pos:start="151:33" pos:end="151:57"><expr pos:start="151:33" pos:end="151:56"><name pos:start="151:33" pos:end="151:47"><name pos:start="151:33" pos:end="151:38">coeffs</name><index pos:start="151:39" pos:end="151:47">[<expr pos:start="151:40" pos:end="151:46"><name pos:start="151:40" pos:end="151:41">a1</name> <operator pos:start="151:43" pos:end="151:43">+</operator> <name pos:start="151:45" pos:end="151:46">b1</name></expr>]</index></name> <operator pos:start="151:49" pos:end="151:50">-=</operator> <operator pos:start="151:52" pos:end="151:52">*</operator><name pos:start="151:53" pos:end="151:54">pv</name><operator pos:start="151:55" pos:end="151:56">++</operator></expr>;</expr_stmt>

                                <if_stmt pos:start="153:33" pos:end="159:33"><if pos:start="153:33" pos:end="159:33">if <condition pos:start="153:36" pos:end="153:57">(<expr pos:start="153:37" pos:end="153:56"><operator pos:start="153:37" pos:end="153:37">(</operator><name pos:start="153:38" pos:end="153:39">a1</name> <operator pos:start="153:41" pos:end="153:42">+=</operator> <name pos:start="153:44" pos:end="153:50">samples</name><operator pos:start="153:51" pos:end="153:51">)</operator> <operator pos:start="153:53" pos:end="153:54">==</operator> <name pos:start="153:56" pos:end="153:56">s</name></expr>)</condition> <block pos:start="153:59" pos:end="159:33">{<block_content pos:start="155:37" pos:end="157:41">

                                    <expr_stmt pos:start="155:37" pos:end="155:43"><expr pos:start="155:37" pos:end="155:42"><name pos:start="155:37" pos:end="155:38">a1</name> <operator pos:start="155:40" pos:end="155:40">=</operator> <literal type="number" pos:start="155:42" pos:end="155:42">0</literal></expr>;</expr_stmt>

                                    <expr_stmt pos:start="157:37" pos:end="157:41"><expr pos:start="157:37" pos:end="157:40"><name pos:start="157:37" pos:end="157:38">b1</name><operator pos:start="157:39" pos:end="157:40">++</operator></expr>;</expr_stmt>

                                </block_content>}</block></if></if_stmt>

                            </block_content>}</block></for>

                        </block_content>}</block></for>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></while>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
