<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21005.c" pos:tabs="8"><function pos:start="1:1" pos:end="62:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:12">void</name></type> <name pos:start="1:14" pos:end="1:32">ff_pixblockdsp_init</name><parameter_list pos:start="1:33" pos:end="1:78">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:51">PixblockDSPContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">c</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:77"><decl pos:start="1:57" pos:end="1:77"><type pos:start="1:57" pos:end="1:77"><name pos:start="1:57" pos:end="1:70">AVCodecContext</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:77">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="62:1">{<block_content pos:start="5:5" pos:end="60:59">

    <decl_stmt pos:start="5:5" pos:end="5:67"><decl pos:start="5:5" pos:end="5:66"><type pos:start="5:5" pos:end="5:18"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:18">unsigned</name></type> <name pos:start="5:20" pos:end="5:33">high_bit_depth</name> <init pos:start="5:35" pos:end="5:66">= <expr pos:start="5:37" pos:end="5:66"><name pos:start="5:37" pos:end="5:62"><name pos:start="5:37" pos:end="5:41">avctx</name><operator pos:start="5:42" pos:end="5:43">-&gt;</operator><name pos:start="5:44" pos:end="5:62">bits_per_raw_sample</name></name> <operator pos:start="5:64" pos:end="5:64">&gt;</operator> <literal type="number" pos:start="5:66" pos:end="5:66">8</literal></expr></init></decl>;</decl_stmt>




    <expr_stmt pos:start="10:5" pos:end="10:35"><expr pos:start="10:5" pos:end="10:34"><name pos:start="10:5" pos:end="10:18"><name pos:start="10:5" pos:end="10:5">c</name><operator pos:start="10:6" pos:end="10:7">-&gt;</operator><name pos:start="10:8" pos:end="10:18">diff_pixels</name></name> <operator pos:start="10:20" pos:end="10:20">=</operator> <name pos:start="10:22" pos:end="10:34">diff_pixels_c</name></expr>;</expr_stmt>



    <switch pos:start="14:5" pos:end="38:5">switch <condition pos:start="14:12" pos:end="14:39">(<expr pos:start="14:13" pos:end="14:38"><name pos:start="14:13" pos:end="14:38"><name pos:start="14:13" pos:end="14:17">avctx</name><operator pos:start="14:18" pos:end="14:19">-&gt;</operator><name pos:start="14:20" pos:end="14:38">bits_per_raw_sample</name></name></expr>)</condition> <block pos:start="14:41" pos:end="38:5">{<block_content pos:start="16:5" pos:end="36:14">

    <case pos:start="16:5" pos:end="16:11">case <expr pos:start="16:10" pos:end="16:10"><literal type="number" pos:start="16:10" pos:end="16:10">9</literal></expr>:</case>

    <case pos:start="18:5" pos:end="18:12">case <expr pos:start="18:10" pos:end="18:11"><literal type="number" pos:start="18:10" pos:end="18:11">10</literal></expr>:</case>

    <case pos:start="20:5" pos:end="20:12">case <expr pos:start="20:10" pos:end="20:11"><literal type="number" pos:start="20:10" pos:end="20:11">12</literal></expr>:</case>

    <case pos:start="22:5" pos:end="22:12">case <expr pos:start="22:10" pos:end="22:11"><literal type="number" pos:start="22:10" pos:end="22:11">14</literal></expr>:</case>

        <expr_stmt pos:start="24:9" pos:end="24:40"><expr pos:start="24:9" pos:end="24:39"><name pos:start="24:9" pos:end="24:21"><name pos:start="24:9" pos:end="24:9">c</name><operator pos:start="24:10" pos:end="24:11">-&gt;</operator><name pos:start="24:12" pos:end="24:21">get_pixels</name></name> <operator pos:start="24:23" pos:end="24:23">=</operator> <name pos:start="24:25" pos:end="24:39">get_pixels_16_c</name></expr>;</expr_stmt>

        <break pos:start="26:9" pos:end="26:14">break;</break>

    <default pos:start="28:5" pos:end="28:12">default:</default>

        <if_stmt pos:start="30:9" pos:end="34:9"><if pos:start="30:9" pos:end="34:9">if <condition pos:start="30:12" pos:end="30:85">(<expr pos:start="30:13" pos:end="30:84"><name pos:start="30:13" pos:end="30:38"><name pos:start="30:13" pos:end="30:17">avctx</name><operator pos:start="30:18" pos:end="30:19">-&gt;</operator><name pos:start="30:20" pos:end="30:38">bits_per_raw_sample</name></name><operator pos:start="30:39" pos:end="30:40">&lt;=</operator><literal type="number" pos:start="30:41" pos:end="30:41">8</literal> <operator pos:start="30:43" pos:end="30:44">||</operator> <name pos:start="30:46" pos:end="30:62"><name pos:start="30:46" pos:end="30:50">avctx</name><operator pos:start="30:51" pos:end="30:52">-&gt;</operator><name pos:start="30:53" pos:end="30:62">codec_type</name></name> <operator pos:start="30:64" pos:end="30:65">!=</operator> <name pos:start="30:67" pos:end="30:84">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="30:87" pos:end="34:9">{<block_content pos:start="32:13" pos:end="32:43">

            <expr_stmt pos:start="32:13" pos:end="32:43"><expr pos:start="32:13" pos:end="32:42"><name pos:start="32:13" pos:end="32:25"><name pos:start="32:13" pos:end="32:13">c</name><operator pos:start="32:14" pos:end="32:15">-&gt;</operator><name pos:start="32:16" pos:end="32:25">get_pixels</name></name> <operator pos:start="32:27" pos:end="32:27">=</operator> <name pos:start="32:29" pos:end="32:42">get_pixels_8_c</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="36:9" pos:end="36:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="42:5" pos:end="44:60"><if pos:start="42:5" pos:end="44:60">if <condition pos:start="42:8" pos:end="42:19">(<expr pos:start="42:9" pos:end="42:18"><name pos:start="42:9" pos:end="42:18">ARCH_ALPHA</name></expr>)</condition><block type="pseudo" pos:start="44:9" pos:end="44:60"><block_content pos:start="44:9" pos:end="44:60">

        <expr_stmt pos:start="44:9" pos:end="44:60"><expr pos:start="44:9" pos:end="44:59"><call pos:start="44:9" pos:end="44:59"><name pos:start="44:9" pos:end="44:33">ff_pixblockdsp_init_alpha</name><argument_list pos:start="44:34" pos:end="44:59">(<argument pos:start="44:35" pos:end="44:35"><expr pos:start="44:35" pos:end="44:35"><name pos:start="44:35" pos:end="44:35">c</name></expr></argument>, <argument pos:start="44:38" pos:end="44:42"><expr pos:start="44:38" pos:end="44:42"><name pos:start="44:38" pos:end="44:42">avctx</name></expr></argument>, <argument pos:start="44:45" pos:end="44:58"><expr pos:start="44:45" pos:end="44:58"><name pos:start="44:45" pos:end="44:58">high_bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="46:5" pos:end="48:58"><if pos:start="46:5" pos:end="48:58">if <condition pos:start="46:8" pos:end="46:17">(<expr pos:start="46:9" pos:end="46:16"><name pos:start="46:9" pos:end="46:16">ARCH_ARM</name></expr>)</condition><block type="pseudo" pos:start="48:9" pos:end="48:58"><block_content pos:start="48:9" pos:end="48:58">

        <expr_stmt pos:start="48:9" pos:end="48:58"><expr pos:start="48:9" pos:end="48:57"><call pos:start="48:9" pos:end="48:57"><name pos:start="48:9" pos:end="48:31">ff_pixblockdsp_init_arm</name><argument_list pos:start="48:32" pos:end="48:57">(<argument pos:start="48:33" pos:end="48:33"><expr pos:start="48:33" pos:end="48:33"><name pos:start="48:33" pos:end="48:33">c</name></expr></argument>, <argument pos:start="48:36" pos:end="48:40"><expr pos:start="48:36" pos:end="48:40"><name pos:start="48:36" pos:end="48:40">avctx</name></expr></argument>, <argument pos:start="48:43" pos:end="48:56"><expr pos:start="48:43" pos:end="48:56"><name pos:start="48:43" pos:end="48:56">high_bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="50:5" pos:end="52:58"><if pos:start="50:5" pos:end="52:58">if <condition pos:start="50:8" pos:end="50:17">(<expr pos:start="50:9" pos:end="50:16"><name pos:start="50:9" pos:end="50:16">ARCH_PPC</name></expr>)</condition><block type="pseudo" pos:start="52:9" pos:end="52:58"><block_content pos:start="52:9" pos:end="52:58">

        <expr_stmt pos:start="52:9" pos:end="52:58"><expr pos:start="52:9" pos:end="52:57"><call pos:start="52:9" pos:end="52:57"><name pos:start="52:9" pos:end="52:31">ff_pixblockdsp_init_ppc</name><argument_list pos:start="52:32" pos:end="52:57">(<argument pos:start="52:33" pos:end="52:33"><expr pos:start="52:33" pos:end="52:33"><name pos:start="52:33" pos:end="52:33">c</name></expr></argument>, <argument pos:start="52:36" pos:end="52:40"><expr pos:start="52:36" pos:end="52:40"><name pos:start="52:36" pos:end="52:40">avctx</name></expr></argument>, <argument pos:start="52:43" pos:end="52:56"><expr pos:start="52:43" pos:end="52:56"><name pos:start="52:43" pos:end="52:56">high_bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="54:5" pos:end="56:58"><if pos:start="54:5" pos:end="56:58">if <condition pos:start="54:8" pos:end="54:17">(<expr pos:start="54:9" pos:end="54:16"><name pos:start="54:9" pos:end="54:16">ARCH_X86</name></expr>)</condition><block type="pseudo" pos:start="56:9" pos:end="56:58"><block_content pos:start="56:9" pos:end="56:58">

        <expr_stmt pos:start="56:9" pos:end="56:58"><expr pos:start="56:9" pos:end="56:57"><call pos:start="56:9" pos:end="56:57"><name pos:start="56:9" pos:end="56:31">ff_pixblockdsp_init_x86</name><argument_list pos:start="56:32" pos:end="56:57">(<argument pos:start="56:33" pos:end="56:33"><expr pos:start="56:33" pos:end="56:33"><name pos:start="56:33" pos:end="56:33">c</name></expr></argument>, <argument pos:start="56:36" pos:end="56:40"><expr pos:start="56:36" pos:end="56:40"><name pos:start="56:36" pos:end="56:40">avctx</name></expr></argument>, <argument pos:start="56:43" pos:end="56:56"><expr pos:start="56:43" pos:end="56:56"><name pos:start="56:43" pos:end="56:56">high_bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="58:5" pos:end="60:59"><if pos:start="58:5" pos:end="60:59">if <condition pos:start="58:8" pos:end="58:18">(<expr pos:start="58:9" pos:end="58:17"><name pos:start="58:9" pos:end="58:17">ARCH_MIPS</name></expr>)</condition><block type="pseudo" pos:start="60:9" pos:end="60:59"><block_content pos:start="60:9" pos:end="60:59">

        <expr_stmt pos:start="60:9" pos:end="60:59"><expr pos:start="60:9" pos:end="60:58"><call pos:start="60:9" pos:end="60:58"><name pos:start="60:9" pos:end="60:32">ff_pixblockdsp_init_mips</name><argument_list pos:start="60:33" pos:end="60:58">(<argument pos:start="60:34" pos:end="60:34"><expr pos:start="60:34" pos:end="60:34"><name pos:start="60:34" pos:end="60:34">c</name></expr></argument>, <argument pos:start="60:37" pos:end="60:41"><expr pos:start="60:37" pos:end="60:41"><name pos:start="60:37" pos:end="60:41">avctx</name></expr></argument>, <argument pos:start="60:44" pos:end="60:57"><expr pos:start="60:44" pos:end="60:57"><name pos:start="60:44" pos:end="60:57">high_bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function></unit>
