<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21942.c" pos:tabs="8"><function pos:start="1:1" pos:end="20:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:42">decode_init_thread_copy</name><parameter_list pos:start="1:43" pos:end="1:65">(<parameter pos:start="1:44" pos:end="1:64"><decl pos:start="1:44" pos:end="1:64"><type pos:start="1:44" pos:end="1:59"><name pos:start="1:44" pos:end="1:57">AVCodecContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:64">avctx</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="20:1">{<block_content pos:start="3:5" pos:end="19:13">
    <decl_stmt pos:start="3:5" pos:end="3:38"><decl pos:start="3:5" pos:end="3:37"><type pos:start="3:5" pos:end="3:17"><name pos:start="3:5" pos:end="3:15">HYuvContext</name> <modifier pos:start="3:17" pos:end="3:17">*</modifier></type><name pos:start="3:18" pos:end="3:18">s</name> <init pos:start="3:20" pos:end="3:37">= <expr pos:start="3:22" pos:end="3:37"><name pos:start="3:22" pos:end="3:37"><name pos:start="3:22" pos:end="3:26">avctx</name><operator pos:start="3:27" pos:end="3:28">-&gt;</operator><name pos:start="3:29" pos:end="3:37">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:15"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">i</name></decl>, <decl pos:start="4:12" pos:end="4:14"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:12" pos:end="4:14">ret</name></decl>;</decl_stmt>
    <if_stmt pos:start="5:5" pos:end="8:5"><if pos:start="5:5" pos:end="8:5">if <condition pos:start="5:8" pos:end="5:45">(<expr pos:start="5:9" pos:end="5:44"><operator pos:start="5:9" pos:end="5:9">(</operator><name pos:start="5:10" pos:end="5:12">ret</name> <operator pos:start="5:14" pos:end="5:14">=</operator> <call pos:start="5:16" pos:end="5:39"><name pos:start="5:16" pos:end="5:36">ff_huffyuv_alloc_temp</name><argument_list pos:start="5:37" pos:end="5:39">(<argument pos:start="5:38" pos:end="5:38"><expr pos:start="5:38" pos:end="5:38"><name pos:start="5:38" pos:end="5:38">s</name></expr></argument>)</argument_list></call><operator pos:start="5:40" pos:end="5:40">)</operator> <operator pos:start="5:42" pos:end="5:42">&lt;</operator> <literal type="number" pos:start="5:44" pos:end="5:44">0</literal></expr>)</condition> <block pos:start="5:47" pos:end="8:5">{<block_content pos:start="6:9" pos:end="7:19">
        <expr_stmt pos:start="6:9" pos:end="6:33"><expr pos:start="6:9" pos:end="6:32"><call pos:start="6:9" pos:end="6:32"><name pos:start="6:9" pos:end="6:29">ff_huffyuv_common_end</name><argument_list pos:start="6:30" pos:end="6:32">(<argument pos:start="6:31" pos:end="6:31"><expr pos:start="6:31" pos:end="6:31"><name pos:start="6:31" pos:end="6:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="7:9" pos:end="7:19">return <expr pos:start="7:16" pos:end="7:18"><name pos:start="7:16" pos:end="7:18">ret</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="9:5" pos:end="10:31">for <control pos:start="9:9" pos:end="9:27">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:22"><expr pos:start="9:17" pos:end="9:21"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <literal type="number" pos:start="9:21" pos:end="9:21">8</literal></expr>;</condition> <incr pos:start="9:24" pos:end="9:26"><expr pos:start="9:24" pos:end="9:26"><name pos:start="9:24" pos:end="9:24">i</name><operator pos:start="9:25" pos:end="9:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="10:9" pos:end="10:31"><block_content pos:start="10:9" pos:end="10:31">
        <expr_stmt pos:start="10:9" pos:end="10:31"><expr pos:start="10:9" pos:end="10:30"><name pos:start="10:9" pos:end="10:17"><name pos:start="10:9" pos:end="10:9">s</name><operator pos:start="10:10" pos:end="10:11">-&gt;</operator><name pos:start="10:12" pos:end="10:14">vlc</name><index pos:start="10:15" pos:end="10:17">[<expr pos:start="10:16" pos:end="10:16"><name pos:start="10:16" pos:end="10:16">i</name></expr>]</index></name><operator pos:start="10:18" pos:end="10:18">.</operator><name pos:start="10:19" pos:end="10:23">table</name> <operator pos:start="10:25" pos:end="10:25">=</operator> <name pos:start="10:27" pos:end="10:30">NULL</name></expr>;</expr_stmt></block_content></block></for>
    <if_stmt pos:start="11:5" pos:end="18:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:18">version</name></name> <operator pos:start="11:20" pos:end="11:21">&gt;=</operator> <literal type="number" pos:start="11:23" pos:end="11:23">2</literal></expr>)</condition> <block pos:start="11:26" pos:end="15:5">{<block_content pos:start="12:9" pos:end="14:23">
        <if_stmt pos:start="12:9" pos:end="14:23"><if pos:start="12:9" pos:end="14:23">if <condition pos:start="12:12" pos:end="13:67">(<expr pos:start="12:13" pos:end="13:66"><operator pos:start="12:13" pos:end="12:13">(</operator><name pos:start="12:14" pos:end="12:16">ret</name> <operator pos:start="12:18" pos:end="12:18">=</operator> <call pos:start="12:20" pos:end="13:61"><name pos:start="12:20" pos:end="12:38">read_huffman_tables</name><argument_list pos:start="12:39" pos:end="13:61">(<argument pos:start="12:40" pos:end="12:40"><expr pos:start="12:40" pos:end="12:40"><name pos:start="12:40" pos:end="12:40">s</name></expr></argument>, <argument pos:start="12:43" pos:end="12:62"><expr pos:start="12:43" pos:end="12:62"><name pos:start="12:43" pos:end="12:58"><name pos:start="12:43" pos:end="12:47">avctx</name><operator pos:start="12:48" pos:end="12:49">-&gt;</operator><name pos:start="12:50" pos:end="12:58">extradata</name></name> <operator pos:start="12:60" pos:end="12:60">+</operator> <literal type="number" pos:start="12:62" pos:end="12:62">4</literal></expr></argument>,
                                       <argument pos:start="13:40" pos:end="13:60"><expr pos:start="13:40" pos:end="13:60"><name pos:start="13:40" pos:end="13:60"><name pos:start="13:40" pos:end="13:44">avctx</name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:60">extradata_size</name></name></expr></argument>)</argument_list></call><operator pos:start="13:62" pos:end="13:62">)</operator> <operator pos:start="13:64" pos:end="13:64">&lt;</operator> <literal type="number" pos:start="13:66" pos:end="13:66">0</literal></expr>)</condition><block type="pseudo" pos:start="14:13" pos:end="14:23"><block_content pos:start="14:13" pos:end="14:23">
            <return pos:start="14:13" pos:end="14:23">return <expr pos:start="14:20" pos:end="14:22"><name pos:start="14:20" pos:end="14:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></if> <else pos:start="15:7" pos:end="18:5">else <block pos:start="15:12" pos:end="18:5">{<block_content pos:start="16:9" pos:end="17:23">
        <if_stmt pos:start="16:9" pos:end="17:23"><if pos:start="16:9" pos:end="17:23">if <condition pos:start="16:12" pos:end="16:51">(<expr pos:start="16:13" pos:end="16:50"><operator pos:start="16:13" pos:end="16:13">(</operator><name pos:start="16:14" pos:end="16:16">ret</name> <operator pos:start="16:18" pos:end="16:18">=</operator> <call pos:start="16:20" pos:end="16:45"><name pos:start="16:20" pos:end="16:42">read_old_huffman_tables</name><argument_list pos:start="16:43" pos:end="16:45">(<argument pos:start="16:44" pos:end="16:44"><expr pos:start="16:44" pos:end="16:44"><name pos:start="16:44" pos:end="16:44">s</name></expr></argument>)</argument_list></call><operator pos:start="16:46" pos:end="16:46">)</operator> <operator pos:start="16:48" pos:end="16:48">&lt;</operator> <literal type="number" pos:start="16:50" pos:end="16:50">0</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:23"><block_content pos:start="17:13" pos:end="17:23">
            <return pos:start="17:13" pos:end="17:23">return <expr pos:start="17:20" pos:end="17:22"><name pos:start="17:20" pos:end="17:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
    </block_content>}</block></else></if_stmt>
    <return pos:start="19:5" pos:end="19:13">return <expr pos:start="19:12" pos:end="19:12"><literal type="number" pos:start="19:12" pos:end="19:12">0</literal></expr>;</return>
</block_content>}</block></function></unit>
