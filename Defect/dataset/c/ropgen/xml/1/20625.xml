<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20625.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">put_codebook_header</name><parameter_list pos:start="1:32" pos:end="1:68">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:45">PutBitContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type> <name pos:start="1:49" pos:end="1:50">pb</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:62">codebook_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type> <name pos:start="1:66" pos:end="1:67">cb</name></decl></parameter>)</parameter_list> <block pos:start="1:70" pos:end="101:1">{<block_content pos:start="3:5" pos:end="99:5">

    <decl_stmt pos:start="3:5" pos:end="3:10"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">ordered</name> <init pos:start="5:17" pos:end="5:19">= <expr pos:start="5:19" pos:end="5:19"><literal type="number" pos:start="5:19" pos:end="5:19">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:31"><expr pos:start="9:5" pos:end="9:30"><call pos:start="9:5" pos:end="9:30"><name pos:start="9:5" pos:end="9:12">put_bits</name><argument_list pos:start="9:13" pos:end="9:30">(<argument pos:start="9:14" pos:end="9:15"><expr pos:start="9:14" pos:end="9:15"><name pos:start="9:14" pos:end="9:15">pb</name></expr></argument>, <argument pos:start="9:18" pos:end="9:19"><expr pos:start="9:18" pos:end="9:19"><literal type="number" pos:start="9:18" pos:end="9:19">24</literal></expr></argument>, <argument pos:start="9:22" pos:end="9:29"><expr pos:start="9:22" pos:end="9:29"><literal type="number" pos:start="9:22" pos:end="9:29">0x564342</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="9:33" pos:end="9:39">//magic</comment>

    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><call pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:12">put_bits</name><argument_list pos:start="11:13" pos:end="11:37">(<argument pos:start="11:14" pos:end="11:15"><expr pos:start="11:14" pos:end="11:15"><name pos:start="11:14" pos:end="11:15">pb</name></expr></argument>, <argument pos:start="11:18" pos:end="11:19"><expr pos:start="11:18" pos:end="11:19"><literal type="number" pos:start="11:18" pos:end="11:19">16</literal></expr></argument>, <argument pos:start="11:22" pos:end="11:36"><expr pos:start="11:22" pos:end="11:36"><name pos:start="11:22" pos:end="11:36"><name pos:start="11:22" pos:end="11:23">cb</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:36">ndimentions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><call pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:12">put_bits</name><argument_list pos:start="13:13" pos:end="13:34">(<argument pos:start="13:14" pos:end="13:15"><expr pos:start="13:14" pos:end="13:15"><name pos:start="13:14" pos:end="13:15">pb</name></expr></argument>, <argument pos:start="13:18" pos:end="13:19"><expr pos:start="13:18" pos:end="13:19"><literal type="number" pos:start="13:18" pos:end="13:19">24</literal></expr></argument>, <argument pos:start="13:22" pos:end="13:33"><expr pos:start="13:22" pos:end="13:33"><name pos:start="13:22" pos:end="13:33"><name pos:start="13:22" pos:end="13:23">cb</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:33">nentries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="17:5" pos:end="17:92">for <control pos:start="17:9" pos:end="17:38">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">1</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:33"><expr pos:start="17:17" pos:end="17:32"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:32"><name pos:start="17:21" pos:end="17:22">cb</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:32">nentries</name></name></expr>;</condition> <incr pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:35">i</name><operator pos:start="17:36" pos:end="17:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:40" pos:end="17:92"><block_content pos:start="17:40" pos:end="17:92"> <if_stmt pos:start="17:40" pos:end="17:92"><if pos:start="17:40" pos:end="17:92">if <condition pos:start="17:43" pos:end="17:85">(<expr pos:start="17:44" pos:end="17:84"><name pos:start="17:44" pos:end="17:57"><name pos:start="17:44" pos:end="17:45">cb</name><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:54">entries</name><index pos:start="17:55" pos:end="17:57">[<expr pos:start="17:56" pos:end="17:56"><name pos:start="17:56" pos:end="17:56">i</name></expr>]</index></name><operator pos:start="17:58" pos:end="17:58">.</operator><name pos:start="17:59" pos:end="17:61">len</name> <operator pos:start="17:63" pos:end="17:63">&lt;</operator> <name pos:start="17:65" pos:end="17:80"><name pos:start="17:65" pos:end="17:66">cb</name><operator pos:start="17:67" pos:end="17:68">-&gt;</operator><name pos:start="17:69" pos:end="17:75">entries</name><index pos:start="17:76" pos:end="17:80">[<expr pos:start="17:77" pos:end="17:79"><name pos:start="17:77" pos:end="17:77">i</name><operator pos:start="17:78" pos:end="17:78">-</operator><literal type="number" pos:start="17:79" pos:end="17:79">1</literal></expr>]</index></name><operator pos:start="17:81" pos:end="17:81">.</operator><name pos:start="17:82" pos:end="17:84">len</name></expr>)</condition><block type="pseudo" pos:start="17:87" pos:end="17:92"><block_content pos:start="17:87" pos:end="17:92"> <break pos:start="17:87" pos:end="17:92">break;</break></block_content></block></if></if_stmt></block_content></block></for>

    <if_stmt pos:start="19:5" pos:end="19:39"><if pos:start="19:5" pos:end="19:39">if <condition pos:start="19:8" pos:end="19:26">(<expr pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:9">i</name> <operator pos:start="19:11" pos:end="19:12">==</operator> <name pos:start="19:14" pos:end="19:25"><name pos:start="19:14" pos:end="19:15">cb</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:25">nentries</name></name></expr>)</condition><block type="pseudo" pos:start="19:28" pos:end="19:39"><block_content pos:start="19:28" pos:end="19:39"> <expr_stmt pos:start="19:28" pos:end="19:39"><expr pos:start="19:28" pos:end="19:38"><name pos:start="19:28" pos:end="19:34">ordered</name> <operator pos:start="19:36" pos:end="19:36">=</operator> <literal type="number" pos:start="19:38" pos:end="19:38">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><call pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:12">put_bits</name><argument_list pos:start="23:13" pos:end="23:28">(<argument pos:start="23:14" pos:end="23:15"><expr pos:start="23:14" pos:end="23:15"><name pos:start="23:14" pos:end="23:15">pb</name></expr></argument>, <argument pos:start="23:18" pos:end="23:18"><expr pos:start="23:18" pos:end="23:18"><literal type="number" pos:start="23:18" pos:end="23:18">1</literal></expr></argument>, <argument pos:start="23:21" pos:end="23:27"><expr pos:start="23:21" pos:end="23:27"><name pos:start="23:21" pos:end="23:27">ordered</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="67:5"><if pos:start="25:5" pos:end="47:5">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:15">ordered</name></expr>)</condition> <block pos:start="25:18" pos:end="47:5">{<block_content pos:start="27:9" pos:end="45:9">

        <decl_stmt pos:start="27:9" pos:end="27:37"><decl pos:start="27:9" pos:end="27:36"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:15">len</name> <init pos:start="27:17" pos:end="27:36">= <expr pos:start="27:19" pos:end="27:36"><name pos:start="27:19" pos:end="27:32"><name pos:start="27:19" pos:end="27:20">cb</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:29">entries</name><index pos:start="27:30" pos:end="27:32">[<expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">0</literal></expr>]</index></name><operator pos:start="27:33" pos:end="27:33">.</operator><name pos:start="27:34" pos:end="27:36">len</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><call pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:16">put_bits</name><argument_list pos:start="29:17" pos:end="29:28">(<argument pos:start="29:18" pos:end="29:19"><expr pos:start="29:18" pos:end="29:19"><name pos:start="29:18" pos:end="29:19">pb</name></expr></argument>, <argument pos:start="29:22" pos:end="29:22"><expr pos:start="29:22" pos:end="29:22"><literal type="number" pos:start="29:22" pos:end="29:22">5</literal></expr></argument>, <argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:14"><expr pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:9">i</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <literal type="number" pos:start="31:13" pos:end="31:13">0</literal></expr>;</expr_stmt>

        <while pos:start="33:9" pos:end="45:9">while <condition pos:start="33:15" pos:end="33:32">(<expr pos:start="33:16" pos:end="33:31"><name pos:start="33:16" pos:end="33:16">i</name> <operator pos:start="33:18" pos:end="33:18">&lt;</operator> <name pos:start="33:20" pos:end="33:31"><name pos:start="33:20" pos:end="33:21">cb</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:31">nentries</name></name></expr>)</condition> <block pos:start="33:34" pos:end="45:9">{<block_content pos:start="35:13" pos:end="43:18">

            <decl_stmt pos:start="35:13" pos:end="35:18"><decl pos:start="35:13" pos:end="35:17"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:17">j</name></decl>;</decl_stmt>

            <for pos:start="37:13" pos:end="37:88">for <control pos:start="37:17" pos:end="37:48">(<init pos:start="37:18" pos:end="37:23"><expr pos:start="37:18" pos:end="37:22"><name pos:start="37:18" pos:end="37:18">j</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>;</init> <condition pos:start="37:25" pos:end="37:43"><expr pos:start="37:25" pos:end="37:42"><name pos:start="37:25" pos:end="37:25">j</name><operator pos:start="37:26" pos:end="37:26">+</operator><name pos:start="37:27" pos:end="37:27">i</name> <operator pos:start="37:29" pos:end="37:29">&lt;</operator> <name pos:start="37:31" pos:end="37:42"><name pos:start="37:31" pos:end="37:32">cb</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:42">nentries</name></name></expr>;</condition> <incr pos:start="37:45" pos:end="37:47"><expr pos:start="37:45" pos:end="37:47"><name pos:start="37:45" pos:end="37:45">j</name><operator pos:start="37:46" pos:end="37:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:50" pos:end="37:88"><block_content pos:start="37:50" pos:end="37:88"> <if_stmt pos:start="37:50" pos:end="37:88"><if pos:start="37:50" pos:end="37:88">if <condition pos:start="37:53" pos:end="37:81">(<expr pos:start="37:54" pos:end="37:80"><name pos:start="37:54" pos:end="37:69"><name pos:start="37:54" pos:end="37:55">cb</name><operator pos:start="37:56" pos:end="37:57">-&gt;</operator><name pos:start="37:58" pos:end="37:64">entries</name><index pos:start="37:65" pos:end="37:69">[<expr pos:start="37:66" pos:end="37:68"><name pos:start="37:66" pos:end="37:66">j</name><operator pos:start="37:67" pos:end="37:67">+</operator><name pos:start="37:68" pos:end="37:68">i</name></expr>]</index></name><operator pos:start="37:70" pos:end="37:70">.</operator><name pos:start="37:71" pos:end="37:73">len</name> <operator pos:start="37:75" pos:end="37:76">!=</operator> <name pos:start="37:78" pos:end="37:80">len</name></expr>)</condition><block type="pseudo" pos:start="37:83" pos:end="37:88"><block_content pos:start="37:83" pos:end="37:88"> <break pos:start="37:83" pos:end="37:88">break;</break></block_content></block></if></if_stmt></block_content></block></for>

            <expr_stmt pos:start="39:13" pos:end="39:52"><expr pos:start="39:13" pos:end="39:51"><call pos:start="39:13" pos:end="39:51"><name pos:start="39:13" pos:end="39:20">put_bits</name><argument_list pos:start="39:21" pos:end="39:51">(<argument pos:start="39:22" pos:end="39:23"><expr pos:start="39:22" pos:end="39:23"><name pos:start="39:22" pos:end="39:23">pb</name></expr></argument>, <argument pos:start="39:26" pos:end="39:47"><expr pos:start="39:26" pos:end="39:47"><call pos:start="39:26" pos:end="39:47"><name pos:start="39:26" pos:end="39:29">ilog</name><argument_list pos:start="39:30" pos:end="39:47">(<argument pos:start="39:31" pos:end="39:46"><expr pos:start="39:31" pos:end="39:46"><name pos:start="39:31" pos:end="39:42"><name pos:start="39:31" pos:end="39:32">cb</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:42">nentries</name></name> <operator pos:start="39:44" pos:end="39:44">-</operator> <name pos:start="39:46" pos:end="39:46">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:50" pos:end="39:50"><expr pos:start="39:50" pos:end="39:50"><name pos:start="39:50" pos:end="39:50">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:19"><expr pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:13">i</name> <operator pos:start="41:15" pos:end="41:16">+=</operator> <name pos:start="41:18" pos:end="41:18">j</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:18"><expr pos:start="43:13" pos:end="43:17"><name pos:start="43:13" pos:end="43:15">len</name><operator pos:start="43:16" pos:end="43:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="67:5">else <block pos:start="47:12" pos:end="67:5">{<block_content pos:start="49:9" pos:end="65:9">

        <decl_stmt pos:start="49:9" pos:end="49:23"><decl pos:start="49:9" pos:end="49:22"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:18">sparse</name> <init pos:start="49:20" pos:end="49:22">= <expr pos:start="49:22" pos:end="49:22"><literal type="number" pos:start="49:22" pos:end="49:22">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="51:9" pos:end="51:74">for <control pos:start="51:13" pos:end="51:42">(<init pos:start="51:14" pos:end="51:19"><expr pos:start="51:14" pos:end="51:18"><name pos:start="51:14" pos:end="51:14">i</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>;</init> <condition pos:start="51:21" pos:end="51:37"><expr pos:start="51:21" pos:end="51:36"><name pos:start="51:21" pos:end="51:21">i</name> <operator pos:start="51:23" pos:end="51:23">&lt;</operator> <name pos:start="51:25" pos:end="51:36"><name pos:start="51:25" pos:end="51:26">cb</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:36">nentries</name></name></expr>;</condition> <incr pos:start="51:39" pos:end="51:41"><expr pos:start="51:39" pos:end="51:41"><name pos:start="51:39" pos:end="51:39">i</name><operator pos:start="51:40" pos:end="51:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="51:44" pos:end="51:74"><block_content pos:start="51:44" pos:end="51:74"> <if_stmt pos:start="51:44" pos:end="51:74"><if pos:start="51:44" pos:end="51:74">if <condition pos:start="51:47" pos:end="51:67">(<expr pos:start="51:48" pos:end="51:66"><operator pos:start="51:48" pos:end="51:48">!</operator><name pos:start="51:49" pos:end="51:62"><name pos:start="51:49" pos:end="51:50">cb</name><operator pos:start="51:51" pos:end="51:52">-&gt;</operator><name pos:start="51:53" pos:end="51:59">entries</name><index pos:start="51:60" pos:end="51:62">[<expr pos:start="51:61" pos:end="51:61"><name pos:start="51:61" pos:end="51:61">i</name></expr>]</index></name><operator pos:start="51:63" pos:end="51:63">.</operator><name pos:start="51:64" pos:end="51:66">len</name></expr>)</condition><block type="pseudo" pos:start="51:69" pos:end="51:74"><block_content pos:start="51:69" pos:end="51:74"> <break pos:start="51:69" pos:end="51:74">break;</break></block_content></block></if></if_stmt></block_content></block></for>

        <if_stmt pos:start="53:9" pos:end="53:42"><if pos:start="53:9" pos:end="53:42">if <condition pos:start="53:12" pos:end="53:30">(<expr pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:13">i</name> <operator pos:start="53:15" pos:end="53:16">!=</operator> <name pos:start="53:18" pos:end="53:29"><name pos:start="53:18" pos:end="53:19">cb</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:29">nentries</name></name></expr>)</condition><block type="pseudo" pos:start="53:32" pos:end="53:42"><block_content pos:start="53:32" pos:end="53:42"> <expr_stmt pos:start="53:32" pos:end="53:42"><expr pos:start="53:32" pos:end="53:41"><name pos:start="53:32" pos:end="53:37">sparse</name> <operator pos:start="53:39" pos:end="53:39">=</operator> <literal type="number" pos:start="53:41" pos:end="53:41">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><call pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:16">put_bits</name><argument_list pos:start="55:17" pos:end="55:31">(<argument pos:start="55:18" pos:end="55:19"><expr pos:start="55:18" pos:end="55:19"><name pos:start="55:18" pos:end="55:19">pb</name></expr></argument>, <argument pos:start="55:22" pos:end="55:22"><expr pos:start="55:22" pos:end="55:22"><literal type="number" pos:start="55:22" pos:end="55:22">1</literal></expr></argument>, <argument pos:start="55:25" pos:end="55:30"><expr pos:start="55:25" pos:end="55:30"><name pos:start="55:25" pos:end="55:30">sparse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="59:9" pos:end="65:9">for <control pos:start="59:13" pos:end="59:42">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">i</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:37"><expr pos:start="59:21" pos:end="59:36"><name pos:start="59:21" pos:end="59:21">i</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <name pos:start="59:25" pos:end="59:36"><name pos:start="59:25" pos:end="59:26">cb</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:36">nentries</name></name></expr>;</condition> <incr pos:start="59:39" pos:end="59:41"><expr pos:start="59:39" pos:end="59:41"><name pos:start="59:39" pos:end="59:39">i</name><operator pos:start="59:40" pos:end="59:41">++</operator></expr></incr>)</control> <block pos:start="59:44" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:76">

            <if_stmt pos:start="61:13" pos:end="61:62"><if pos:start="61:13" pos:end="61:62">if <condition pos:start="61:16" pos:end="61:23">(<expr pos:start="61:17" pos:end="61:22"><name pos:start="61:17" pos:end="61:22">sparse</name></expr>)</condition><block type="pseudo" pos:start="61:25" pos:end="61:62"><block_content pos:start="61:25" pos:end="61:62"> <expr_stmt pos:start="61:25" pos:end="61:62"><expr pos:start="61:25" pos:end="61:61"><call pos:start="61:25" pos:end="61:61"><name pos:start="61:25" pos:end="61:32">put_bits</name><argument_list pos:start="61:33" pos:end="61:61">(<argument pos:start="61:34" pos:end="61:35"><expr pos:start="61:34" pos:end="61:35"><name pos:start="61:34" pos:end="61:35">pb</name></expr></argument>, <argument pos:start="61:38" pos:end="61:38"><expr pos:start="61:38" pos:end="61:38"><literal type="number" pos:start="61:38" pos:end="61:38">1</literal></expr></argument>, <argument pos:start="61:41" pos:end="61:60"><expr pos:start="61:41" pos:end="61:60"><operator pos:start="61:41" pos:end="61:41">!</operator><operator pos:start="61:42" pos:end="61:42">!</operator><name pos:start="61:43" pos:end="61:56"><name pos:start="61:43" pos:end="61:44">cb</name><operator pos:start="61:45" pos:end="61:46">-&gt;</operator><name pos:start="61:47" pos:end="61:53">entries</name><index pos:start="61:54" pos:end="61:56">[<expr pos:start="61:55" pos:end="61:55"><name pos:start="61:55" pos:end="61:55">i</name></expr>]</index></name><operator pos:start="61:57" pos:end="61:57">.</operator><name pos:start="61:58" pos:end="61:60">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="63:13" pos:end="63:76"><if pos:start="63:13" pos:end="63:76">if <condition pos:start="63:16" pos:end="63:35">(<expr pos:start="63:17" pos:end="63:34"><name pos:start="63:17" pos:end="63:30"><name pos:start="63:17" pos:end="63:18">cb</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:27">entries</name><index pos:start="63:28" pos:end="63:30">[<expr pos:start="63:29" pos:end="63:29"><name pos:start="63:29" pos:end="63:29">i</name></expr>]</index></name><operator pos:start="63:31" pos:end="63:31">.</operator><name pos:start="63:32" pos:end="63:34">len</name></expr>)</condition><block type="pseudo" pos:start="63:37" pos:end="63:76"><block_content pos:start="63:37" pos:end="63:76"> <expr_stmt pos:start="63:37" pos:end="63:76"><expr pos:start="63:37" pos:end="63:75"><call pos:start="63:37" pos:end="63:75"><name pos:start="63:37" pos:end="63:44">put_bits</name><argument_list pos:start="63:45" pos:end="63:75">(<argument pos:start="63:46" pos:end="63:47"><expr pos:start="63:46" pos:end="63:47"><name pos:start="63:46" pos:end="63:47">pb</name></expr></argument>, <argument pos:start="63:50" pos:end="63:50"><expr pos:start="63:50" pos:end="63:50"><literal type="number" pos:start="63:50" pos:end="63:50">5</literal></expr></argument>, <argument pos:start="63:53" pos:end="63:74"><expr pos:start="63:53" pos:end="63:74"><name pos:start="63:53" pos:end="63:66"><name pos:start="63:53" pos:end="63:54">cb</name><operator pos:start="63:55" pos:end="63:56">-&gt;</operator><name pos:start="63:57" pos:end="63:63">entries</name><index pos:start="63:64" pos:end="63:66">[<expr pos:start="63:65" pos:end="63:65"><name pos:start="63:65" pos:end="63:65">i</name></expr>]</index></name><operator pos:start="63:67" pos:end="63:67">.</operator><name pos:start="63:68" pos:end="63:70">len</name> <operator pos:start="63:72" pos:end="63:72">-</operator> <literal type="number" pos:start="63:74" pos:end="63:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:32"><expr pos:start="71:5" pos:end="71:31"><call pos:start="71:5" pos:end="71:31"><name pos:start="71:5" pos:end="71:12">put_bits</name><argument_list pos:start="71:13" pos:end="71:31">(<argument pos:start="71:14" pos:end="71:15"><expr pos:start="71:14" pos:end="71:15"><name pos:start="71:14" pos:end="71:15">pb</name></expr></argument>, <argument pos:start="71:18" pos:end="71:18"><expr pos:start="71:18" pos:end="71:18"><literal type="number" pos:start="71:18" pos:end="71:18">4</literal></expr></argument>, <argument pos:start="71:21" pos:end="71:30"><expr pos:start="71:21" pos:end="71:30"><name pos:start="71:21" pos:end="71:30"><name pos:start="71:21" pos:end="71:22">cb</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:30">lookup</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="99:5"><if pos:start="73:5" pos:end="99:5">if <condition pos:start="73:8" pos:end="73:19">(<expr pos:start="73:9" pos:end="73:18"><name pos:start="73:9" pos:end="73:18"><name pos:start="73:9" pos:end="73:10">cb</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:18">lookup</name></name></expr>)</condition> <block pos:start="73:21" pos:end="99:5">{<block_content pos:start="75:9" pos:end="97:71">

        <decl_stmt pos:start="75:9" pos:end="75:76"><decl pos:start="75:9" pos:end="75:75"><type pos:start="75:9" pos:end="75:11"><name pos:start="75:9" pos:end="75:11">int</name></type> <name pos:start="75:13" pos:end="75:15">tmp</name> <init pos:start="75:17" pos:end="75:75">= <expr pos:start="75:19" pos:end="75:75"><call pos:start="75:19" pos:end="75:75"><name pos:start="75:19" pos:end="75:32">cb_lookup_vals</name><argument_list pos:start="75:33" pos:end="75:75">(<argument pos:start="75:34" pos:end="75:43"><expr pos:start="75:34" pos:end="75:43"><name pos:start="75:34" pos:end="75:43"><name pos:start="75:34" pos:end="75:35">cb</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:43">lookup</name></name></expr></argument>, <argument pos:start="75:46" pos:end="75:60"><expr pos:start="75:46" pos:end="75:60"><name pos:start="75:46" pos:end="75:60"><name pos:start="75:46" pos:end="75:47">cb</name><operator pos:start="75:48" pos:end="75:49">-&gt;</operator><name pos:start="75:50" pos:end="75:60">ndimentions</name></name></expr></argument>, <argument pos:start="75:63" pos:end="75:74"><expr pos:start="75:63" pos:end="75:74"><name pos:start="75:63" pos:end="75:74"><name pos:start="75:63" pos:end="75:64">cb</name><operator pos:start="75:65" pos:end="75:66">-&gt;</operator><name pos:start="75:67" pos:end="75:74">nentries</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="77:9" pos:end="77:42"><decl pos:start="77:9" pos:end="77:41"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:16">bits</name> <init pos:start="77:18" pos:end="77:41">= <expr pos:start="77:20" pos:end="77:41"><call pos:start="77:20" pos:end="77:41"><name pos:start="77:20" pos:end="77:23">ilog</name><argument_list pos:start="77:24" pos:end="77:41">(<argument pos:start="77:25" pos:end="77:40"><expr pos:start="77:25" pos:end="77:40"><name pos:start="77:25" pos:end="77:40"><name pos:start="77:25" pos:end="77:26">cb</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:37">quantlist</name><index pos:start="77:38" pos:end="77:40">[<expr pos:start="77:39" pos:end="77:39"><literal type="number" pos:start="77:39" pos:end="77:39">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <for pos:start="81:9" pos:end="81:77">for <control pos:start="81:13" pos:end="81:33">(<init pos:start="81:14" pos:end="81:19"><expr pos:start="81:14" pos:end="81:18"><name pos:start="81:14" pos:end="81:14">i</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">1</literal></expr>;</init> <condition pos:start="81:21" pos:end="81:28"><expr pos:start="81:21" pos:end="81:27"><name pos:start="81:21" pos:end="81:21">i</name> <operator pos:start="81:23" pos:end="81:23">&lt;</operator> <name pos:start="81:25" pos:end="81:27">tmp</name></expr>;</condition> <incr pos:start="81:30" pos:end="81:32"><expr pos:start="81:30" pos:end="81:32"><name pos:start="81:30" pos:end="81:30">i</name><operator pos:start="81:31" pos:end="81:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="81:35" pos:end="81:77"><block_content pos:start="81:35" pos:end="81:77"> <expr_stmt pos:start="81:35" pos:end="81:77"><expr pos:start="81:35" pos:end="81:76"><name pos:start="81:35" pos:end="81:38">bits</name> <operator pos:start="81:40" pos:end="81:40">=</operator> <call pos:start="81:42" pos:end="81:76"><name pos:start="81:42" pos:end="81:46">FFMAX</name><argument_list pos:start="81:47" pos:end="81:76">(<argument pos:start="81:48" pos:end="81:51"><expr pos:start="81:48" pos:end="81:51"><name pos:start="81:48" pos:end="81:51">bits</name></expr></argument>, <argument pos:start="81:54" pos:end="81:75"><expr pos:start="81:54" pos:end="81:75"><call pos:start="81:54" pos:end="81:75"><name pos:start="81:54" pos:end="81:57">ilog</name><argument_list pos:start="81:58" pos:end="81:75">(<argument pos:start="81:59" pos:end="81:74"><expr pos:start="81:59" pos:end="81:74"><name pos:start="81:59" pos:end="81:74"><name pos:start="81:59" pos:end="81:60">cb</name><operator pos:start="81:61" pos:end="81:62">-&gt;</operator><name pos:start="81:63" pos:end="81:71">quantlist</name><index pos:start="81:72" pos:end="81:74">[<expr pos:start="81:73" pos:end="81:73"><name pos:start="81:73" pos:end="81:73">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="85:9" pos:end="85:31"><expr pos:start="85:9" pos:end="85:30"><call pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:17">put_float</name><argument_list pos:start="85:18" pos:end="85:30">(<argument pos:start="85:19" pos:end="85:20"><expr pos:start="85:19" pos:end="85:20"><name pos:start="85:19" pos:end="85:20">pb</name></expr></argument>, <argument pos:start="85:23" pos:end="85:29"><expr pos:start="85:23" pos:end="85:29"><name pos:start="85:23" pos:end="85:29"><name pos:start="85:23" pos:end="85:24">cb</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:29">min</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:33"><expr pos:start="87:9" pos:end="87:32"><call pos:start="87:9" pos:end="87:32"><name pos:start="87:9" pos:end="87:17">put_float</name><argument_list pos:start="87:18" pos:end="87:32">(<argument pos:start="87:19" pos:end="87:20"><expr pos:start="87:19" pos:end="87:20"><name pos:start="87:19" pos:end="87:20">pb</name></expr></argument>, <argument pos:start="87:23" pos:end="87:31"><expr pos:start="87:23" pos:end="87:31"><name pos:start="87:23" pos:end="87:31"><name pos:start="87:23" pos:end="87:24">cb</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:31">delta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:34"><expr pos:start="91:9" pos:end="91:33"><call pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:16">put_bits</name><argument_list pos:start="91:17" pos:end="91:33">(<argument pos:start="91:18" pos:end="91:19"><expr pos:start="91:18" pos:end="91:19"><name pos:start="91:18" pos:end="91:19">pb</name></expr></argument>, <argument pos:start="91:22" pos:end="91:22"><expr pos:start="91:22" pos:end="91:22"><literal type="number" pos:start="91:22" pos:end="91:22">4</literal></expr></argument>, <argument pos:start="91:25" pos:end="91:32"><expr pos:start="91:25" pos:end="91:32"><name pos:start="91:25" pos:end="91:28">bits</name> <operator pos:start="91:30" pos:end="91:30">-</operator> <literal type="number" pos:start="91:32" pos:end="91:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:35"><expr pos:start="93:9" pos:end="93:34"><call pos:start="93:9" pos:end="93:34"><name pos:start="93:9" pos:end="93:16">put_bits</name><argument_list pos:start="93:17" pos:end="93:34">(<argument pos:start="93:18" pos:end="93:19"><expr pos:start="93:18" pos:end="93:19"><name pos:start="93:18" pos:end="93:19">pb</name></expr></argument>, <argument pos:start="93:22" pos:end="93:22"><expr pos:start="93:22" pos:end="93:22"><literal type="number" pos:start="93:22" pos:end="93:22">1</literal></expr></argument>, <argument pos:start="93:25" pos:end="93:33"><expr pos:start="93:25" pos:end="93:33"><name pos:start="93:25" pos:end="93:33"><name pos:start="93:25" pos:end="93:26">cb</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:33">seq_p</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="97:9" pos:end="97:71">for <control pos:start="97:13" pos:end="97:33">(<init pos:start="97:14" pos:end="97:19"><expr pos:start="97:14" pos:end="97:18"><name pos:start="97:14" pos:end="97:14">i</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <literal type="number" pos:start="97:18" pos:end="97:18">0</literal></expr>;</init> <condition pos:start="97:21" pos:end="97:28"><expr pos:start="97:21" pos:end="97:27"><name pos:start="97:21" pos:end="97:21">i</name> <operator pos:start="97:23" pos:end="97:23">&lt;</operator> <name pos:start="97:25" pos:end="97:27">tmp</name></expr>;</condition> <incr pos:start="97:30" pos:end="97:32"><expr pos:start="97:30" pos:end="97:32"><name pos:start="97:30" pos:end="97:30">i</name><operator pos:start="97:31" pos:end="97:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="97:35" pos:end="97:71"><block_content pos:start="97:35" pos:end="97:71"> <expr_stmt pos:start="97:35" pos:end="97:71"><expr pos:start="97:35" pos:end="97:70"><call pos:start="97:35" pos:end="97:70"><name pos:start="97:35" pos:end="97:42">put_bits</name><argument_list pos:start="97:43" pos:end="97:70">(<argument pos:start="97:44" pos:end="97:45"><expr pos:start="97:44" pos:end="97:45"><name pos:start="97:44" pos:end="97:45">pb</name></expr></argument>, <argument pos:start="97:48" pos:end="97:51"><expr pos:start="97:48" pos:end="97:51"><name pos:start="97:48" pos:end="97:51">bits</name></expr></argument>, <argument pos:start="97:54" pos:end="97:69"><expr pos:start="97:54" pos:end="97:69"><name pos:start="97:54" pos:end="97:69"><name pos:start="97:54" pos:end="97:55">cb</name><operator pos:start="97:56" pos:end="97:57">-&gt;</operator><name pos:start="97:58" pos:end="97:66">quantlist</name><index pos:start="97:67" pos:end="97:69">[<expr pos:start="97:68" pos:end="97:68"><name pos:start="97:68" pos:end="97:68">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
