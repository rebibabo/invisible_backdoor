<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21902.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">iothread_stop</name><parameter_list pos:start="1:25" pos:end="1:54">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:31">Object</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">object</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:45">void</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:53">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">IOThread</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:22">iothread</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:70"><expr pos:start="9:5" pos:end="9:69"><name pos:start="9:5" pos:end="9:12">iothread</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <operator pos:start="9:16" pos:end="9:16">(</operator><name pos:start="9:17" pos:end="9:24">IOThread</name> <operator pos:start="9:26" pos:end="9:26">*</operator><operator pos:start="9:27" pos:end="9:27">)</operator><call pos:start="9:28" pos:end="9:69"><name pos:start="9:28" pos:end="9:46">object_dynamic_cast</name><argument_list pos:start="9:47" pos:end="9:69">(<argument pos:start="9:48" pos:end="9:53"><expr pos:start="9:48" pos:end="9:53"><name pos:start="9:48" pos:end="9:53">object</name></expr></argument>, <argument pos:start="9:56" pos:end="9:68"><expr pos:start="9:56" pos:end="9:68"><name pos:start="9:56" pos:end="9:68">TYPE_IOTHREAD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:36">(<expr pos:start="11:9" pos:end="11:35"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:17">iothread</name> <operator pos:start="11:19" pos:end="11:20">||</operator> <operator pos:start="11:22" pos:end="11:22">!</operator><name pos:start="11:23" pos:end="11:35"><name pos:start="11:23" pos:end="11:30">iothread</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:35">ctx</name></name></expr>)</condition> <block pos:start="11:38" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:12">iothread</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:22">stopping</name></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <name pos:start="17:26" pos:end="17:29">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><call pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:14">aio_notify</name><argument_list pos:start="19:15" pos:end="19:29">(<argument pos:start="19:16" pos:end="19:28"><expr pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:23">iothread</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:28">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:42">(<expr pos:start="21:9" pos:end="21:41"><call pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:19">atomic_read</name><argument_list pos:start="21:20" pos:end="21:41">(<argument pos:start="21:21" pos:end="21:40"><expr pos:start="21:21" pos:end="21:40"><operator pos:start="21:21" pos:end="21:21">&amp;</operator><name pos:start="21:22" pos:end="21:40"><name pos:start="21:22" pos:end="21:29">iothread</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:40">main_loop</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:44" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:46">

        <expr_stmt pos:start="23:9" pos:end="23:46"><expr pos:start="23:9" pos:end="23:45"><call pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:24">g_main_loop_quit</name><argument_list pos:start="23:25" pos:end="23:45">(<argument pos:start="23:26" pos:end="23:44"><expr pos:start="23:26" pos:end="23:44"><name pos:start="23:26" pos:end="23:44"><name pos:start="23:26" pos:end="23:33">iothread</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:44">main_loop</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><call pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:20">qemu_thread_join</name><argument_list pos:start="27:21" pos:end="27:39">(<argument pos:start="27:22" pos:end="27:38"><expr pos:start="27:22" pos:end="27:38"><operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:38"><name pos:start="27:23" pos:end="27:30">iothread</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:38">thread</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
