<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10957.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:40"><name pos:start="1:1" pos:end="1:17">print_syscall_ret</name><argument_list pos:start="1:18" pos:end="1:40">(<argument pos:start="1:19" pos:end="1:25">int num</argument>, <argument pos:start="1:28" pos:end="1:39">abi_long ret</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:9">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="33:9">for<control pos:start="9:8" pos:end="9:28">(<init pos:start="9:9" pos:end="9:12"><expr pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:9">i</name><operator pos:start="9:10" pos:end="9:10">=</operator><literal type="number" pos:start="9:11" pos:end="9:11">0</literal></expr>;</init><condition pos:start="9:13" pos:end="9:24"><expr pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:13">i</name><operator pos:start="9:14" pos:end="9:14">&lt;</operator><name pos:start="9:15" pos:end="9:23">nsyscalls</name></expr>;</condition><incr pos:start="9:25" pos:end="9:27"><expr pos:start="9:25" pos:end="9:27"><name pos:start="9:25" pos:end="9:25">i</name><operator pos:start="9:26" pos:end="9:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="11:9" pos:end="33:9"><block_content pos:start="11:9" pos:end="33:9">

        <if_stmt pos:start="11:9" pos:end="33:9"><if pos:start="11:9" pos:end="33:9">if<condition pos:start="11:11" pos:end="11:34">( <expr pos:start="11:13" pos:end="11:32"><name pos:start="11:13" pos:end="11:22"><name pos:start="11:13" pos:end="11:19">scnames</name><index pos:start="11:20" pos:end="11:22">[<expr pos:start="11:21" pos:end="11:21"><name pos:start="11:21" pos:end="11:21">i</name></expr>]</index></name><operator pos:start="11:23" pos:end="11:23">.</operator><name pos:start="11:24" pos:end="11:25">nr</name> <operator pos:start="11:27" pos:end="11:28">==</operator> <name pos:start="11:30" pos:end="11:32">num</name></expr> )</condition> <block pos:start="11:36" pos:end="33:9">{<block_content pos:start="13:13" pos:end="31:18">

            <if_stmt pos:start="13:13" pos:end="29:13"><if pos:start="13:13" pos:end="17:13">if<condition pos:start="13:15" pos:end="13:43">( <expr pos:start="13:17" pos:end="13:41"><name pos:start="13:17" pos:end="13:26"><name pos:start="13:17" pos:end="13:23">scnames</name><index pos:start="13:24" pos:end="13:26">[<expr pos:start="13:25" pos:end="13:25"><name pos:start="13:25" pos:end="13:25">i</name></expr>]</index></name><operator pos:start="13:27" pos:end="13:27">.</operator><name pos:start="13:28" pos:end="13:33">result</name> <operator pos:start="13:35" pos:end="13:36">!=</operator> <name pos:start="13:38" pos:end="13:41">NULL</name></expr> )</condition> <block pos:start="13:45" pos:end="17:13">{<block_content pos:start="15:17" pos:end="15:51">

                <expr_stmt pos:start="15:17" pos:end="15:51"><expr pos:start="15:17" pos:end="15:50"><name pos:start="15:17" pos:end="15:26"><name pos:start="15:17" pos:end="15:23">scnames</name><index pos:start="15:24" pos:end="15:26">[<expr pos:start="15:25" pos:end="15:25"><name pos:start="15:25" pos:end="15:25">i</name></expr>]</index></name><operator pos:start="15:27" pos:end="15:27">.</operator><call pos:start="15:28" pos:end="15:50"><name pos:start="15:28" pos:end="15:33">result</name><argument_list pos:start="15:34" pos:end="15:50">(<argument pos:start="15:35" pos:end="15:45"><expr pos:start="15:35" pos:end="15:45"><operator pos:start="15:35" pos:end="15:35">&amp;</operator><name pos:start="15:36" pos:end="15:45"><name pos:start="15:36" pos:end="15:42">scnames</name><index pos:start="15:43" pos:end="15:45">[<expr pos:start="15:44" pos:end="15:44"><name pos:start="15:44" pos:end="15:44">i</name></expr>]</index></name></expr></argument>,<argument pos:start="15:47" pos:end="15:49"><expr pos:start="15:47" pos:end="15:49"><name pos:start="15:47" pos:end="15:49">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="17:15" pos:end="29:13">else <block pos:start="17:20" pos:end="29:13">{<block_content pos:start="19:17" pos:end="27:17">

                <if_stmt pos:start="19:17" pos:end="27:17"><if pos:start="19:17" pos:end="23:17">if<condition pos:start="19:19" pos:end="19:29">( <expr pos:start="19:21" pos:end="19:27"><name pos:start="19:21" pos:end="19:23">ret</name> <operator pos:start="19:25" pos:end="19:25">&lt;</operator> <literal type="number" pos:start="19:27" pos:end="19:27">0</literal></expr> )</condition> <block pos:start="19:31" pos:end="23:17">{<block_content pos:start="21:21" pos:end="21:102">

                    <expr_stmt pos:start="21:21" pos:end="21:102"><expr pos:start="21:21" pos:end="21:101"><call pos:start="21:21" pos:end="21:101"><name pos:start="21:21" pos:end="21:28">gemu_log</name><argument_list pos:start="21:29" pos:end="21:101">(<argument pos:start="21:30" pos:end="21:71"><expr pos:start="21:30" pos:end="21:71"><literal type="string" pos:start="21:30" pos:end="21:43">" = -1 errno="</literal> <name pos:start="21:45" pos:end="21:61">TARGET_ABI_FMT_ld</name> <literal type="string" pos:start="21:63" pos:end="21:71">" (%s)\n"</literal></expr></argument>, <argument pos:start="21:74" pos:end="21:77"><expr pos:start="21:74" pos:end="21:77"><operator pos:start="21:74" pos:end="21:74">-</operator><name pos:start="21:75" pos:end="21:77">ret</name></expr></argument>, <argument pos:start="21:80" pos:end="21:100"><expr pos:start="21:80" pos:end="21:100"><call pos:start="21:80" pos:end="21:100"><name pos:start="21:80" pos:end="21:94">target_strerror</name><argument_list pos:start="21:95" pos:end="21:100">(<argument pos:start="21:96" pos:end="21:99"><expr pos:start="21:96" pos:end="21:99"><operator pos:start="21:96" pos:end="21:96">-</operator><name pos:start="21:97" pos:end="21:99">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="23:19" pos:end="27:17">else <block pos:start="23:24" pos:end="27:17">{<block_content pos:start="25:21" pos:end="25:64">

                    <expr_stmt pos:start="25:21" pos:end="25:64"><expr pos:start="25:21" pos:end="25:63"><call pos:start="25:21" pos:end="25:63"><name pos:start="25:21" pos:end="25:28">gemu_log</name><argument_list pos:start="25:29" pos:end="25:63">(<argument pos:start="25:30" pos:end="25:57"><expr pos:start="25:30" pos:end="25:57"><literal type="string" pos:start="25:30" pos:end="25:34">" = "</literal> <name pos:start="25:36" pos:end="25:52">TARGET_ABI_FMT_ld</name> <literal type="string" pos:start="25:54" pos:end="25:57">"\n"</literal></expr></argument>, <argument pos:start="25:60" pos:end="25:62"><expr pos:start="25:60" pos:end="25:62"><name pos:start="25:60" pos:end="25:62">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></if></if_stmt></block_content></block></for>

</block_content>}</block>
</unit>
