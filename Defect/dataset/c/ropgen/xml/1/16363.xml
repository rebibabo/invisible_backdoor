<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16363.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">vfio_connect_container</name><parameter_list pos:start="1:34" pos:end="1:51">(<parameter pos:start="1:35" pos:end="1:50"><decl pos:start="1:35" pos:end="1:50"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:43">VFIOGroup</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">group</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:15">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">VFIOContainer</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:28">container</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:15">fd</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:25">(<expr pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:13">group</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:24">container</name></name></expr>)</condition> <block pos:start="11:27" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="19:5" pos:end="19:51"><name pos:start="19:5" pos:end="19:17">QLIST_FOREACH</name><argument_list pos:start="19:18" pos:end="19:51">(<argument pos:start="19:19" pos:end="19:27">container</argument>, <argument pos:start="19:30" pos:end="19:44">&amp;container_list</argument>, <argument pos:start="19:47" pos:end="19:50">next</argument>)</argument_list></macro> <block pos:start="19:53" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:9">

        <if_stmt pos:start="21:9" pos:end="29:9"><if pos:start="21:9" pos:end="29:9">if <condition pos:start="21:12" pos:end="21:72">(<expr pos:start="21:13" pos:end="21:71"><operator pos:start="21:13" pos:end="21:13">!</operator><call pos:start="21:14" pos:end="21:71"><name pos:start="21:14" pos:end="21:18">ioctl</name><argument_list pos:start="21:19" pos:end="21:71">(<argument pos:start="21:20" pos:end="21:28"><expr pos:start="21:20" pos:end="21:28"><name pos:start="21:20" pos:end="21:28"><name pos:start="21:20" pos:end="21:24">group</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:28">fd</name></name></expr></argument>, <argument pos:start="21:31" pos:end="21:54"><expr pos:start="21:31" pos:end="21:54"><name pos:start="21:31" pos:end="21:54">VFIO_GROUP_SET_CONTAINER</name></expr></argument>, <argument pos:start="21:57" pos:end="21:70"><expr pos:start="21:57" pos:end="21:70"><operator pos:start="21:57" pos:end="21:57">&amp;</operator><name pos:start="21:58" pos:end="21:70"><name pos:start="21:58" pos:end="21:66">container</name><operator pos:start="21:67" pos:end="21:68">-&gt;</operator><name pos:start="21:69" pos:end="21:70">fd</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:74" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:21">

            <expr_stmt pos:start="23:13" pos:end="23:41"><expr pos:start="23:13" pos:end="23:40"><name pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:17">group</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:28">container</name></name> <operator pos:start="23:30" pos:end="23:30">=</operator> <name pos:start="23:32" pos:end="23:40">container</name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:77"><expr pos:start="25:13" pos:end="25:76"><call pos:start="25:13" pos:end="25:76"><name pos:start="25:13" pos:end="25:29">QLIST_INSERT_HEAD</name><argument_list pos:start="25:30" pos:end="25:76">(<argument pos:start="25:31" pos:end="25:52"><expr pos:start="25:31" pos:end="25:52"><operator pos:start="25:31" pos:end="25:31">&amp;</operator><name pos:start="25:32" pos:end="25:52"><name pos:start="25:32" pos:end="25:40">container</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:52">group_list</name></name></expr></argument>, <argument pos:start="25:55" pos:end="25:59"><expr pos:start="25:55" pos:end="25:59"><name pos:start="25:55" pos:end="25:59">group</name></expr></argument>, <argument pos:start="25:62" pos:end="25:75"><expr pos:start="25:62" pos:end="25:75"><name pos:start="25:62" pos:end="25:75">container_next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:21">return <expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="35:5" pos:end="35:45"><expr pos:start="35:5" pos:end="35:44"><name pos:start="35:5" pos:end="35:6">fd</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:44"><name pos:start="35:10" pos:end="35:18">qemu_open</name><argument_list pos:start="35:19" pos:end="35:44">(<argument pos:start="35:20" pos:end="35:35"><expr pos:start="35:20" pos:end="35:35"><literal type="string" pos:start="35:20" pos:end="35:35">"/dev/vfio/vfio"</literal></expr></argument>, <argument pos:start="35:38" pos:end="35:43"><expr pos:start="35:38" pos:end="35:43"><name pos:start="35:38" pos:end="35:43">O_RDWR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:15">(<expr pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:10">fd</name> <operator pos:start="37:12" pos:end="37:12">&lt;</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>)</condition> <block pos:start="37:17" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:22">

        <expr_stmt pos:start="39:9" pos:end="39:64"><expr pos:start="39:9" pos:end="39:63"><call pos:start="39:9" pos:end="39:63"><name pos:start="39:9" pos:end="39:20">error_report</name><argument_list pos:start="39:21" pos:end="39:63">(<argument pos:start="39:22" pos:end="39:62"><expr pos:start="39:22" pos:end="39:62"><literal type="string" pos:start="39:22" pos:end="39:62">"vfio: failed to open /dev/vfio/vfio: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:22">return <expr pos:start="41:16" pos:end="41:21"><operator pos:start="41:16" pos:end="41:16">-</operator><name pos:start="41:17" pos:end="41:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:42"><expr pos:start="47:5" pos:end="47:41"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:41"><name pos:start="47:11" pos:end="47:15">ioctl</name><argument_list pos:start="47:16" pos:end="47:41">(<argument pos:start="47:17" pos:end="47:18"><expr pos:start="47:17" pos:end="47:18"><name pos:start="47:17" pos:end="47:18">fd</name></expr></argument>, <argument pos:start="47:21" pos:end="47:40"><expr pos:start="47:21" pos:end="47:40"><name pos:start="47:21" pos:end="47:40">VFIO_GET_API_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="59:5"><if pos:start="49:5" pos:end="59:5">if <condition pos:start="49:8" pos:end="49:32">(<expr pos:start="49:9" pos:end="49:31"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:14">!=</operator> <name pos:start="49:16" pos:end="49:31">VFIO_API_VERSION</name></expr>)</condition> <block pos:start="49:34" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:27">

        <expr_stmt pos:start="51:9" pos:end="53:68"><expr pos:start="51:9" pos:end="53:67"><call pos:start="51:9" pos:end="53:67"><name pos:start="51:9" pos:end="51:20">error_report</name><argument_list pos:start="51:21" pos:end="53:67">(<argument pos:start="51:22" pos:end="53:43"><expr pos:start="51:22" pos:end="53:43"><literal type="string" pos:start="51:22" pos:end="51:57">"vfio: supported vfio version: %d, "</literal>

                     <literal type="string" pos:start="53:22" pos:end="53:43">"reported version: %d"</literal></expr></argument>, <argument pos:start="53:46" pos:end="53:61"><expr pos:start="53:46" pos:end="53:61"><name pos:start="53:46" pos:end="53:61">VFIO_API_VERSION</name></expr></argument>, <argument pos:start="53:64" pos:end="53:66"><expr pos:start="53:64" pos:end="53:66"><name pos:start="53:64" pos:end="53:66">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <operator pos:start="55:15" pos:end="55:15">-</operator><name pos:start="55:16" pos:end="55:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:27">goto <name pos:start="57:14" pos:end="57:26">close_fd_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:46"><expr pos:start="63:5" pos:end="63:45"><name pos:start="63:5" pos:end="63:13">container</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <call pos:start="63:17" pos:end="63:45"><name pos:start="63:17" pos:end="63:25">g_malloc0</name><argument_list pos:start="63:26" pos:end="63:45">(<argument pos:start="63:27" pos:end="63:44"><expr pos:start="63:27" pos:end="63:44"><sizeof pos:start="63:27" pos:end="63:44">sizeof<argument_list pos:start="63:33" pos:end="63:44">(<argument pos:start="63:34" pos:end="63:43"><expr pos:start="63:34" pos:end="63:43"><operator pos:start="63:34" pos:end="63:34">*</operator><name pos:start="63:35" pos:end="63:43">container</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:23"><expr pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:13">container</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:17">fd</name></name> <operator pos:start="65:19" pos:end="65:19">=</operator> <name pos:start="65:21" pos:end="65:22">fd</name></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="135:5"><if pos:start="69:5" pos:end="127:5">if <condition pos:start="69:8" pos:end="69:58">(<expr pos:start="69:9" pos:end="69:57"><call pos:start="69:9" pos:end="69:57"><name pos:start="69:9" pos:end="69:13">ioctl</name><argument_list pos:start="69:14" pos:end="69:57">(<argument pos:start="69:15" pos:end="69:16"><expr pos:start="69:15" pos:end="69:16"><name pos:start="69:15" pos:end="69:16">fd</name></expr></argument>, <argument pos:start="69:19" pos:end="69:38"><expr pos:start="69:19" pos:end="69:38"><name pos:start="69:19" pos:end="69:38">VFIO_CHECK_EXTENSION</name></expr></argument>, <argument pos:start="69:41" pos:end="69:56"><expr pos:start="69:41" pos:end="69:56"><name pos:start="69:41" pos:end="69:56">VFIO_TYPE1_IOMMU</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:60" pos:end="127:5">{<block_content pos:start="71:9" pos:end="123:55">

        <expr_stmt pos:start="71:9" pos:end="71:62"><expr pos:start="71:9" pos:end="71:61"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:61"><name pos:start="71:15" pos:end="71:19">ioctl</name><argument_list pos:start="71:20" pos:end="71:61">(<argument pos:start="71:21" pos:end="71:29"><expr pos:start="71:21" pos:end="71:29"><name pos:start="71:21" pos:end="71:29"><name pos:start="71:21" pos:end="71:25">group</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:29">fd</name></name></expr></argument>, <argument pos:start="71:32" pos:end="71:55"><expr pos:start="71:32" pos:end="71:55"><name pos:start="71:32" pos:end="71:55">VFIO_GROUP_SET_CONTAINER</name></expr></argument>, <argument pos:start="71:58" pos:end="71:60"><expr pos:start="71:58" pos:end="71:60"><operator pos:start="71:58" pos:end="71:58">&amp;</operator><name pos:start="71:59" pos:end="71:60">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="81:9">if <condition pos:start="73:12" pos:end="73:16">(<expr pos:start="73:13" pos:end="73:15"><name pos:start="73:13" pos:end="73:15">ret</name></expr>)</condition> <block pos:start="73:18" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:37">

            <expr_stmt pos:start="75:13" pos:end="75:68"><expr pos:start="75:13" pos:end="75:67"><call pos:start="75:13" pos:end="75:67"><name pos:start="75:13" pos:end="75:24">error_report</name><argument_list pos:start="75:25" pos:end="75:67">(<argument pos:start="75:26" pos:end="75:66"><expr pos:start="75:26" pos:end="75:66"><literal type="string" pos:start="75:26" pos:end="75:66">"vfio: failed to set group container: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:25"><expr pos:start="77:13" pos:end="77:24"><name pos:start="77:13" pos:end="77:15">ret</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <operator pos:start="77:19" pos:end="77:19">-</operator><name pos:start="77:20" pos:end="77:24">errno</name></expr>;</expr_stmt>

            <goto pos:start="79:13" pos:end="79:37">goto <name pos:start="79:18" pos:end="79:36">free_container_exit</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:58"><expr pos:start="85:9" pos:end="85:57"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="85:57"><name pos:start="85:15" pos:end="85:19">ioctl</name><argument_list pos:start="85:20" pos:end="85:57">(<argument pos:start="85:21" pos:end="85:22"><expr pos:start="85:21" pos:end="85:22"><name pos:start="85:21" pos:end="85:22">fd</name></expr></argument>, <argument pos:start="85:25" pos:end="85:38"><expr pos:start="85:25" pos:end="85:38"><name pos:start="85:25" pos:end="85:38">VFIO_SET_IOMMU</name></expr></argument>, <argument pos:start="85:41" pos:end="85:56"><expr pos:start="85:41" pos:end="85:56"><name pos:start="85:41" pos:end="85:56">VFIO_TYPE1_IOMMU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="95:9"><if pos:start="87:9" pos:end="95:9">if <condition pos:start="87:12" pos:end="87:16">(<expr pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:15">ret</name></expr>)</condition> <block pos:start="87:18" pos:end="95:9">{<block_content pos:start="89:13" pos:end="93:37">

            <expr_stmt pos:start="89:13" pos:end="89:72"><expr pos:start="89:13" pos:end="89:71"><call pos:start="89:13" pos:end="89:71"><name pos:start="89:13" pos:end="89:24">error_report</name><argument_list pos:start="89:25" pos:end="89:71">(<argument pos:start="89:26" pos:end="89:70"><expr pos:start="89:26" pos:end="89:70"><literal type="string" pos:start="89:26" pos:end="89:70">"vfio: failed to set iommu for container: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:25"><expr pos:start="91:13" pos:end="91:24"><name pos:start="91:13" pos:end="91:15">ret</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <operator pos:start="91:19" pos:end="91:19">-</operator><name pos:start="91:20" pos:end="91:24">errno</name></expr>;</expr_stmt>

            <goto pos:start="93:13" pos:end="93:37">goto <name pos:start="93:18" pos:end="93:36">free_container_exit</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:68"><expr pos:start="99:9" pos:end="99:67"><name pos:start="99:9" pos:end="99:44"><name pos:start="99:9" pos:end="99:17">container</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:29">iommu_data</name><operator pos:start="99:30" pos:end="99:30">.</operator><name pos:start="99:31" pos:end="99:35">type1</name><operator pos:start="99:36" pos:end="99:36">.</operator><name pos:start="99:37" pos:end="99:44">listener</name></name> <operator pos:start="99:46" pos:end="99:46">=</operator> <name pos:start="99:48" pos:end="99:67">vfio_memory_listener</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:62"><expr pos:start="101:9" pos:end="101:61"><name pos:start="101:9" pos:end="101:37"><name pos:start="101:9" pos:end="101:17">container</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:29">iommu_data</name><operator pos:start="101:30" pos:end="101:30">.</operator><name pos:start="101:31" pos:end="101:37">release</name></name> <operator pos:start="101:39" pos:end="101:39">=</operator> <name pos:start="101:41" pos:end="101:61">vfio_listener_release</name></expr>;</expr_stmt>



        <expr_stmt pos:start="105:9" pos:end="107:56"><expr pos:start="105:9" pos:end="107:55"><call pos:start="105:9" pos:end="107:55"><name pos:start="105:9" pos:end="105:32">memory_listener_register</name><argument_list pos:start="105:33" pos:end="107:55">(<argument pos:start="105:34" pos:end="105:70"><expr pos:start="105:34" pos:end="105:70"><operator pos:start="105:34" pos:end="105:34">&amp;</operator><name pos:start="105:35" pos:end="105:70"><name pos:start="105:35" pos:end="105:43">container</name><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:55">iommu_data</name><operator pos:start="105:56" pos:end="105:56">.</operator><name pos:start="105:57" pos:end="105:61">type1</name><operator pos:start="105:62" pos:end="105:62">.</operator><name pos:start="105:63" pos:end="105:70">listener</name></name></expr></argument>,

                                 <argument pos:start="107:34" pos:end="107:54"><expr pos:start="107:34" pos:end="107:54"><operator pos:start="107:34" pos:end="107:34">&amp;</operator><name pos:start="107:35" pos:end="107:54">address_space_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="111:9" pos:end="119:9"><if pos:start="111:9" pos:end="119:9">if <condition pos:start="111:12" pos:end="111:46">(<expr pos:start="111:13" pos:end="111:45"><name pos:start="111:13" pos:end="111:45"><name pos:start="111:13" pos:end="111:21">container</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:33">iommu_data</name><operator pos:start="111:34" pos:end="111:34">.</operator><name pos:start="111:35" pos:end="111:39">type1</name><operator pos:start="111:40" pos:end="111:40">.</operator><name pos:start="111:41" pos:end="111:45">error</name></name></expr>)</condition> <block pos:start="111:48" pos:end="119:9">{<block_content pos:start="113:13" pos:end="117:39">

            <expr_stmt pos:start="113:13" pos:end="113:52"><expr pos:start="113:13" pos:end="113:51"><name pos:start="113:13" pos:end="113:15">ret</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <name pos:start="113:19" pos:end="113:51"><name pos:start="113:19" pos:end="113:27">container</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:39">iommu_data</name><operator pos:start="113:40" pos:end="113:40">.</operator><name pos:start="113:41" pos:end="113:45">type1</name><operator pos:start="113:46" pos:end="113:46">.</operator><name pos:start="113:47" pos:end="113:51">error</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:86"><expr pos:start="115:13" pos:end="115:85"><call pos:start="115:13" pos:end="115:85"><name pos:start="115:13" pos:end="115:24">error_report</name><argument_list pos:start="115:25" pos:end="115:85">(<argument pos:start="115:26" pos:end="115:84"><expr pos:start="115:26" pos:end="115:84"><literal type="string" pos:start="115:26" pos:end="115:84">"vfio: memory listener initialization failed for container"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="117:13" pos:end="117:39">goto <name pos:start="117:18" pos:end="117:38">listener_release_exit</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:55"><expr pos:start="123:9" pos:end="123:54"><name pos:start="123:9" pos:end="123:47"><name pos:start="123:9" pos:end="123:17">container</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:29">iommu_data</name><operator pos:start="123:30" pos:end="123:30">.</operator><name pos:start="123:31" pos:end="123:35">type1</name><operator pos:start="123:36" pos:end="123:36">.</operator><name pos:start="123:37" pos:end="123:47">initialized</name></name> <operator pos:start="123:49" pos:end="123:49">=</operator> <name pos:start="123:51" pos:end="123:54">true</name></expr>;</expr_stmt>



    </block_content>}</block></if> <else pos:start="127:7" pos:end="135:5">else <block pos:start="127:12" pos:end="135:5">{<block_content pos:start="129:9" pos:end="133:33">

        <expr_stmt pos:start="129:9" pos:end="129:56"><expr pos:start="129:9" pos:end="129:55"><call pos:start="129:9" pos:end="129:55"><name pos:start="129:9" pos:end="129:20">error_report</name><argument_list pos:start="129:21" pos:end="129:55">(<argument pos:start="129:22" pos:end="129:54"><expr pos:start="129:22" pos:end="129:54"><literal type="string" pos:start="129:22" pos:end="129:54">"vfio: No available IOMMU models"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:22"><expr pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:11">ret</name> <operator pos:start="131:13" pos:end="131:13">=</operator> <operator pos:start="131:15" pos:end="131:15">-</operator><name pos:start="131:16" pos:end="131:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="133:9" pos:end="133:33">goto <name pos:start="133:14" pos:end="133:32">free_container_exit</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:39"><expr pos:start="139:5" pos:end="139:38"><call pos:start="139:5" pos:end="139:38"><name pos:start="139:5" pos:end="139:14">QLIST_INIT</name><argument_list pos:start="139:15" pos:end="139:38">(<argument pos:start="139:16" pos:end="139:37"><expr pos:start="139:16" pos:end="139:37"><operator pos:start="139:16" pos:end="139:16">&amp;</operator><name pos:start="139:17" pos:end="139:37"><name pos:start="139:17" pos:end="139:25">container</name><operator pos:start="139:26" pos:end="139:27">-&gt;</operator><name pos:start="139:28" pos:end="139:37">group_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:56"><expr pos:start="141:5" pos:end="141:55"><call pos:start="141:5" pos:end="141:55"><name pos:start="141:5" pos:end="141:21">QLIST_INSERT_HEAD</name><argument_list pos:start="141:22" pos:end="141:55">(<argument pos:start="141:23" pos:end="141:37"><expr pos:start="141:23" pos:end="141:37"><operator pos:start="141:23" pos:end="141:23">&amp;</operator><name pos:start="141:24" pos:end="141:37">container_list</name></expr></argument>, <argument pos:start="141:40" pos:end="141:48"><expr pos:start="141:40" pos:end="141:48"><name pos:start="141:40" pos:end="141:48">container</name></expr></argument>, <argument pos:start="141:51" pos:end="141:54"><expr pos:start="141:51" pos:end="141:54"><name pos:start="141:51" pos:end="141:54">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:33"><expr pos:start="145:5" pos:end="145:32"><name pos:start="145:5" pos:end="145:20"><name pos:start="145:5" pos:end="145:9">group</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:20">container</name></name> <operator pos:start="145:22" pos:end="145:22">=</operator> <name pos:start="145:24" pos:end="145:32">container</name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:69"><expr pos:start="147:5" pos:end="147:68"><call pos:start="147:5" pos:end="147:68"><name pos:start="147:5" pos:end="147:21">QLIST_INSERT_HEAD</name><argument_list pos:start="147:22" pos:end="147:68">(<argument pos:start="147:23" pos:end="147:44"><expr pos:start="147:23" pos:end="147:44"><operator pos:start="147:23" pos:end="147:23">&amp;</operator><name pos:start="147:24" pos:end="147:44"><name pos:start="147:24" pos:end="147:32">container</name><operator pos:start="147:33" pos:end="147:34">-&gt;</operator><name pos:start="147:35" pos:end="147:44">group_list</name></name></expr></argument>, <argument pos:start="147:47" pos:end="147:51"><expr pos:start="147:47" pos:end="147:51"><name pos:start="147:47" pos:end="147:51">group</name></expr></argument>, <argument pos:start="147:54" pos:end="147:67"><expr pos:start="147:54" pos:end="147:67"><name pos:start="147:54" pos:end="147:67">container_next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="151:5" pos:end="151:13">return <expr pos:start="151:12" pos:end="151:12"><literal type="number" pos:start="151:12" pos:end="151:12">0</literal></expr>;</return>



<label pos:start="155:1" pos:end="155:22"><name pos:start="155:1" pos:end="155:21">listener_release_exit</name>:</label>

    <expr_stmt pos:start="157:5" pos:end="157:37"><expr pos:start="157:5" pos:end="157:36"><call pos:start="157:5" pos:end="157:36"><name pos:start="157:5" pos:end="157:25">vfio_listener_release</name><argument_list pos:start="157:26" pos:end="157:36">(<argument pos:start="157:27" pos:end="157:35"><expr pos:start="157:27" pos:end="157:35"><name pos:start="157:27" pos:end="157:35">container</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="161:1" pos:end="161:20"><name pos:start="161:1" pos:end="161:19">free_container_exit</name>:</label>

    <expr_stmt pos:start="163:5" pos:end="163:22"><expr pos:start="163:5" pos:end="163:21"><call pos:start="163:5" pos:end="163:21"><name pos:start="163:5" pos:end="163:10">g_free</name><argument_list pos:start="163:11" pos:end="163:21">(<argument pos:start="163:12" pos:end="163:20"><expr pos:start="163:12" pos:end="163:20"><name pos:start="163:12" pos:end="163:20">container</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="167:1" pos:end="167:14"><name pos:start="167:1" pos:end="167:13">close_fd_exit</name>:</label>

    <expr_stmt pos:start="169:5" pos:end="169:14"><expr pos:start="169:5" pos:end="169:13"><call pos:start="169:5" pos:end="169:13"><name pos:start="169:5" pos:end="169:9">close</name><argument_list pos:start="169:10" pos:end="169:13">(<argument pos:start="169:11" pos:end="169:12"><expr pos:start="169:11" pos:end="169:12"><name pos:start="169:11" pos:end="169:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="173:5" pos:end="173:15">return <expr pos:start="173:12" pos:end="173:14"><name pos:start="173:12" pos:end="173:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
