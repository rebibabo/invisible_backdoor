<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3948.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:35">strongarm_gpio_read</name><parameter_list pos:start="1:36" pos:end="3:50">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:56">hwaddr</name></type> <name pos:start="1:58" pos:end="1:63">offset</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:49"><decl pos:start="3:37" pos:end="3:49"><type pos:start="3:37" pos:end="3:49"><name pos:start="3:37" pos:end="3:44">unsigned</name></type> <name pos:start="3:46" pos:end="3:49">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="81:1">{<block_content pos:start="7:5" pos:end="79:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">StrongARMGPIOInfo</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:33">= <expr pos:start="7:28" pos:end="7:33"><name pos:start="7:28" pos:end="7:33">opaque</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="75:5">switch <condition pos:start="11:12" pos:end="11:19">(<expr pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:18">offset</name></expr>)</condition> <block pos:start="11:21" pos:end="75:5">{<block_content pos:start="13:5" pos:end="73:74">

    <case pos:start="13:5" pos:end="13:14">case <expr pos:start="13:10" pos:end="13:13"><name pos:start="13:10" pos:end="13:13">GPDR</name></expr>:</case>        <comment type="block" pos:start="13:23" pos:end="13:56">/* GPIO Pin-Direction registers */</comment>

        <return pos:start="15:9" pos:end="15:22">return <expr pos:start="15:16" pos:end="15:21"><name pos:start="15:16" pos:end="15:21"><name pos:start="15:16" pos:end="15:16">s</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:21">dir</name></name></expr>;</return>



    <case pos:start="19:5" pos:end="19:14">case <expr pos:start="19:10" pos:end="19:13"><name pos:start="19:10" pos:end="19:13">GPSR</name></expr>:</case>        <comment type="block" pos:start="19:23" pos:end="19:57">/* GPIO Pin-Output Set registers */</comment>

        <expr_stmt pos:start="21:9" pos:end="23:42"><expr pos:start="21:9" pos:end="23:41"><call pos:start="21:9" pos:end="23:41"><name pos:start="21:9" pos:end="21:15">DPRINTF</name><argument_list pos:start="21:16" pos:end="23:41">(<argument pos:start="21:17" pos:end="21:76"><expr pos:start="21:17" pos:end="21:76"><literal type="string" pos:start="21:17" pos:end="21:56">"%s: Read from a write-only register 0x"</literal> <name pos:start="21:58" pos:end="21:71">TARGET_FMT_plx</name> <literal type="string" pos:start="21:73" pos:end="21:76">"\n"</literal></expr></argument>,

                        <argument pos:start="23:25" pos:end="23:32"><expr pos:start="23:25" pos:end="23:32"><name pos:start="23:25" pos:end="23:32">__func__</name></expr></argument>, <argument pos:start="23:35" pos:end="23:40"><expr pos:start="23:35" pos:end="23:40"><name pos:start="23:35" pos:end="23:40">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:23">return <expr pos:start="25:16" pos:end="25:22"><name pos:start="25:16" pos:end="25:22"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:22">gpsr</name></name></expr>;</return>    <comment type="block" pos:start="25:28" pos:end="25:60">/* Return last written value.  */</comment>



    <case pos:start="29:5" pos:end="29:14">case <expr pos:start="29:10" pos:end="29:13"><name pos:start="29:10" pos:end="29:13">GPCR</name></expr>:</case>        <comment type="block" pos:start="29:23" pos:end="29:59">/* GPIO Pin-Output Clear registers */</comment>

        <expr_stmt pos:start="31:9" pos:end="33:42"><expr pos:start="31:9" pos:end="33:41"><call pos:start="31:9" pos:end="33:41"><name pos:start="31:9" pos:end="31:15">DPRINTF</name><argument_list pos:start="31:16" pos:end="33:41">(<argument pos:start="31:17" pos:end="31:76"><expr pos:start="31:17" pos:end="31:76"><literal type="string" pos:start="31:17" pos:end="31:56">"%s: Read from a write-only register 0x"</literal> <name pos:start="31:58" pos:end="31:71">TARGET_FMT_plx</name> <literal type="string" pos:start="31:73" pos:end="31:76">"\n"</literal></expr></argument>,

                        <argument pos:start="33:25" pos:end="33:32"><expr pos:start="33:25" pos:end="33:32"><name pos:start="33:25" pos:end="33:32">__func__</name></expr></argument>, <argument pos:start="33:35" pos:end="33:40"><expr pos:start="33:35" pos:end="33:40"><name pos:start="33:35" pos:end="33:40">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:21">return <expr pos:start="35:16" pos:end="35:20"><literal type="number" pos:start="35:16" pos:end="35:20">31337</literal></expr>;</return>        <comment type="block" pos:start="35:30" pos:end="35:75">/* Specified as unpredictable in the docs.  */</comment>



    <case pos:start="39:5" pos:end="39:14">case <expr pos:start="39:10" pos:end="39:13"><name pos:start="39:10" pos:end="39:13">GRER</name></expr>:</case>        <comment type="block" pos:start="39:23" pos:end="39:68">/* GPIO Rising-Edge Detect Enable registers */</comment>

        <return pos:start="41:9" pos:end="41:25">return <expr pos:start="41:16" pos:end="41:24"><name pos:start="41:16" pos:end="41:24"><name pos:start="41:16" pos:end="41:16">s</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:24">rising</name></name></expr>;</return>



    <case pos:start="45:5" pos:end="45:14">case <expr pos:start="45:10" pos:end="45:13"><name pos:start="45:10" pos:end="45:13">GFER</name></expr>:</case>        <comment type="block" pos:start="45:23" pos:end="45:69">/* GPIO Falling-Edge Detect Enable registers */</comment>

        <return pos:start="47:9" pos:end="47:26">return <expr pos:start="47:16" pos:end="47:25"><name pos:start="47:16" pos:end="47:25"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:25">falling</name></name></expr>;</return>



    <case pos:start="51:5" pos:end="51:14">case <expr pos:start="51:10" pos:end="51:13"><name pos:start="51:10" pos:end="51:13">GAFR</name></expr>:</case>        <comment type="block" pos:start="51:23" pos:end="51:61">/* GPIO Alternate Function registers */</comment>

        <return pos:start="53:9" pos:end="53:23">return <expr pos:start="53:16" pos:end="53:22"><name pos:start="53:16" pos:end="53:22"><name pos:start="53:16" pos:end="53:16">s</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:22">gafr</name></name></expr>;</return>



    <case pos:start="57:5" pos:end="57:14">case <expr pos:start="57:10" pos:end="57:13"><name pos:start="57:10" pos:end="57:13">GPLR</name></expr>:</case>        <comment type="block" pos:start="57:23" pos:end="57:52">/* GPIO Pin-Level registers */</comment>

        <return pos:start="59:9" pos:end="61:37">return <expr pos:start="59:16" pos:end="61:36"><operator pos:start="59:16" pos:end="59:16">(</operator><name pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:25">olevel</name></name> <operator pos:start="59:27" pos:end="59:27">&amp;</operator> <name pos:start="59:29" pos:end="59:34"><name pos:start="59:29" pos:end="59:29">s</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:34">dir</name></name><operator pos:start="59:35" pos:end="59:35">)</operator> <operator pos:start="59:37" pos:end="59:37">|</operator>

               <operator pos:start="61:16" pos:end="61:16">(</operator><name pos:start="61:17" pos:end="61:25"><name pos:start="61:17" pos:end="61:17">s</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:25">ilevel</name></name> <operator pos:start="61:27" pos:end="61:27">&amp;</operator> <operator pos:start="61:29" pos:end="61:29">~</operator><name pos:start="61:30" pos:end="61:35"><name pos:start="61:30" pos:end="61:30">s</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:35">dir</name></name><operator pos:start="61:36" pos:end="61:36">)</operator></expr>;</return>



    <case pos:start="65:5" pos:end="65:14">case <expr pos:start="65:10" pos:end="65:13"><name pos:start="65:10" pos:end="65:13">GEDR</name></expr>:</case>        <comment type="block" pos:start="65:23" pos:end="65:61">/* GPIO Edge Detect Status registers */</comment>

        <return pos:start="67:9" pos:end="67:25">return <expr pos:start="67:16" pos:end="67:24"><name pos:start="67:16" pos:end="67:24"><name pos:start="67:16" pos:end="67:16">s</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:24">status</name></name></expr>;</return>



    <default pos:start="71:5" pos:end="71:12">default:</default>

        <expr_stmt pos:start="73:9" pos:end="73:74"><expr pos:start="73:9" pos:end="73:73"><call pos:start="73:9" pos:end="73:73"><name pos:start="73:9" pos:end="73:14">printf</name><argument_list pos:start="73:15" pos:end="73:73">(<argument pos:start="73:16" pos:end="73:54"><expr pos:start="73:16" pos:end="73:54"><literal type="string" pos:start="73:16" pos:end="73:34">"%s: Bad offset 0x"</literal> <name pos:start="73:36" pos:end="73:49">TARGET_FMT_plx</name> <literal type="string" pos:start="73:51" pos:end="73:54">"\n"</literal></expr></argument>, <argument pos:start="73:57" pos:end="73:64"><expr pos:start="73:57" pos:end="73:64"><name pos:start="73:57" pos:end="73:64">__func__</name></expr></argument>, <argument pos:start="73:67" pos:end="73:72"><expr pos:start="73:67" pos:end="73:72"><name pos:start="73:67" pos:end="73:72">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
