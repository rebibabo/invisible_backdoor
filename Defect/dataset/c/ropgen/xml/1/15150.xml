<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15150.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">ff_h264_free_tables</name><parameter_list pos:start="1:25" pos:end="1:55">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:36">H264Context</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">h</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:54">free_rbsp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:37"><expr pos:start="9:5" pos:end="9:36"><call pos:start="9:5" pos:end="9:36"><name pos:start="9:5" pos:end="9:12">av_freep</name><argument_list pos:start="9:13" pos:end="9:36">(<argument pos:start="9:14" pos:end="9:35"><expr pos:start="9:14" pos:end="9:35"><operator pos:start="9:14" pos:end="9:14">&amp;</operator><name pos:start="9:15" pos:end="9:35"><name pos:start="9:15" pos:end="9:15">h</name><operator pos:start="9:16" pos:end="9:17">-&gt;</operator><name pos:start="9:18" pos:end="9:35">intra4x4_pred_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:41"><expr pos:start="11:5" pos:end="11:40"><call pos:start="11:5" pos:end="11:40"><name pos:start="11:5" pos:end="11:12">av_freep</name><argument_list pos:start="11:13" pos:end="11:40">(<argument pos:start="11:14" pos:end="11:39"><expr pos:start="11:14" pos:end="11:39"><operator pos:start="11:14" pos:end="11:14">&amp;</operator><name pos:start="11:15" pos:end="11:39"><name pos:start="11:15" pos:end="11:15">h</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:39">chroma_pred_mode_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:28"><expr pos:start="13:5" pos:end="13:27"><call pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:12">av_freep</name><argument_list pos:start="13:13" pos:end="13:27">(<argument pos:start="13:14" pos:end="13:26"><expr pos:start="13:14" pos:end="13:26"><operator pos:start="13:14" pos:end="13:14">&amp;</operator><name pos:start="13:15" pos:end="13:26"><name pos:start="13:15" pos:end="13:15">h</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:26">cbp_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><call pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:12">av_freep</name><argument_list pos:start="15:13" pos:end="15:30">(<argument pos:start="15:14" pos:end="15:29"><expr pos:start="15:14" pos:end="15:29"><operator pos:start="15:14" pos:end="15:14">&amp;</operator><name pos:start="15:15" pos:end="15:29"><name pos:start="15:15" pos:end="15:15">h</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:26">mvd_table</name><index pos:start="15:27" pos:end="15:29">[<expr pos:start="15:28" pos:end="15:28"><literal type="number" pos:start="15:28" pos:end="15:28">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><call pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:12">av_freep</name><argument_list pos:start="17:13" pos:end="17:30">(<argument pos:start="17:14" pos:end="17:29"><expr pos:start="17:14" pos:end="17:29"><operator pos:start="17:14" pos:end="17:14">&amp;</operator><name pos:start="17:15" pos:end="17:29"><name pos:start="17:15" pos:end="17:15">h</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:26">mvd_table</name><index pos:start="17:27" pos:end="17:29">[<expr pos:start="17:28" pos:end="17:28"><literal type="number" pos:start="17:28" pos:end="17:28">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><call pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:12">av_freep</name><argument_list pos:start="19:13" pos:end="19:30">(<argument pos:start="19:14" pos:end="19:29"><expr pos:start="19:14" pos:end="19:29"><operator pos:start="19:14" pos:end="19:14">&amp;</operator><name pos:start="19:15" pos:end="19:29"><name pos:start="19:15" pos:end="19:15">h</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:29">direct_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:12">av_freep</name><argument_list pos:start="21:13" pos:end="21:32">(<argument pos:start="21:14" pos:end="21:31"><expr pos:start="21:14" pos:end="21:31"><operator pos:start="21:14" pos:end="21:14">&amp;</operator><name pos:start="21:15" pos:end="21:31"><name pos:start="21:15" pos:end="21:15">h</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:31">non_zero_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><call pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:12">av_freep</name><argument_list pos:start="23:13" pos:end="23:34">(<argument pos:start="23:14" pos:end="23:33"><expr pos:start="23:14" pos:end="23:33"><operator pos:start="23:14" pos:end="23:14">&amp;</operator><name pos:start="23:15" pos:end="23:33"><name pos:start="23:15" pos:end="23:15">h</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:33">slice_table_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:5">h</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:18">slice_table</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><call pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:12">av_freep</name><argument_list pos:start="27:13" pos:end="27:29">(<argument pos:start="27:14" pos:end="27:28"><expr pos:start="27:14" pos:end="27:28"><operator pos:start="27:14" pos:end="27:14">&amp;</operator><name pos:start="27:15" pos:end="27:28"><name pos:start="27:15" pos:end="27:15">h</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:28">list_counts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><call pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:12">av_freep</name><argument_list pos:start="31:13" pos:end="31:25">(<argument pos:start="31:14" pos:end="31:24"><expr pos:start="31:14" pos:end="31:24"><operator pos:start="31:14" pos:end="31:14">&amp;</operator><name pos:start="31:15" pos:end="31:24"><name pos:start="31:15" pos:end="31:15">h</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:24">mb2b_xy</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><call pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:12">av_freep</name><argument_list pos:start="33:13" pos:end="33:26">(<argument pos:start="33:14" pos:end="33:25"><expr pos:start="33:14" pos:end="33:25"><operator pos:start="33:14" pos:end="33:14">&amp;</operator><name pos:start="33:15" pos:end="33:25"><name pos:start="33:15" pos:end="33:15">h</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:25">mb2br_xy</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:49"><expr pos:start="37:5" pos:end="37:48"><call pos:start="37:5" pos:end="37:48"><name pos:start="37:5" pos:end="37:25">av_buffer_pool_uninit</name><argument_list pos:start="37:26" pos:end="37:48">(<argument pos:start="37:27" pos:end="37:47"><expr pos:start="37:27" pos:end="37:47"><operator pos:start="37:27" pos:end="37:27">&amp;</operator><name pos:start="37:28" pos:end="37:47"><name pos:start="37:28" pos:end="37:28">h</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:47">qscale_table_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:44"><expr pos:start="39:5" pos:end="39:43"><call pos:start="39:5" pos:end="39:43"><name pos:start="39:5" pos:end="39:25">av_buffer_pool_uninit</name><argument_list pos:start="39:26" pos:end="39:43">(<argument pos:start="39:27" pos:end="39:42"><expr pos:start="39:27" pos:end="39:42"><operator pos:start="39:27" pos:end="39:27">&amp;</operator><name pos:start="39:28" pos:end="39:42"><name pos:start="39:28" pos:end="39:28">h</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:42">mb_type_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><call pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:25">av_buffer_pool_uninit</name><argument_list pos:start="41:26" pos:end="41:46">(<argument pos:start="41:27" pos:end="41:45"><expr pos:start="41:27" pos:end="41:45"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:45"><name pos:start="41:28" pos:end="41:28">h</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:45">motion_val_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:46"><expr pos:start="43:5" pos:end="43:45"><call pos:start="43:5" pos:end="43:45"><name pos:start="43:5" pos:end="43:25">av_buffer_pool_uninit</name><argument_list pos:start="43:26" pos:end="43:45">(<argument pos:start="43:27" pos:end="43:44"><expr pos:start="43:27" pos:end="43:44"><operator pos:start="43:27" pos:end="43:27">&amp;</operator><name pos:start="43:28" pos:end="43:44"><name pos:start="43:28" pos:end="43:28">h</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:44">ref_index_pool</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:28">(<expr pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:17">free_rbsp</name> <operator pos:start="47:19" pos:end="47:20">&amp;&amp;</operator> <name pos:start="47:22" pos:end="47:27"><name pos:start="47:22" pos:end="47:22">h</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:27">DPB</name></name></expr>)</condition> <block pos:start="47:30" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:26">

        <for pos:start="49:9" pos:end="51:49">for <control pos:start="49:13" pos:end="49:52">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">i</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:47"><expr pos:start="49:21" pos:end="49:46"><name pos:start="49:21" pos:end="49:21">i</name> <operator pos:start="49:23" pos:end="49:23">&lt;</operator> <name pos:start="49:25" pos:end="49:46">H264_MAX_PICTURE_COUNT</name></expr>;</condition> <incr pos:start="49:49" pos:end="49:51"><expr pos:start="49:49" pos:end="49:51"><name pos:start="49:49" pos:end="49:49">i</name><operator pos:start="49:50" pos:end="49:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="51:13" pos:end="51:49"><block_content pos:start="51:13" pos:end="51:49">

            <expr_stmt pos:start="51:13" pos:end="51:49"><expr pos:start="51:13" pos:end="51:48"><call pos:start="51:13" pos:end="51:48"><name pos:start="51:13" pos:end="51:33">ff_h264_unref_picture</name><argument_list pos:start="51:34" pos:end="51:48">(<argument pos:start="51:35" pos:end="51:35"><expr pos:start="51:35" pos:end="51:35"><name pos:start="51:35" pos:end="51:35">h</name></expr></argument>, <argument pos:start="51:38" pos:end="51:47"><expr pos:start="51:38" pos:end="51:47"><operator pos:start="51:38" pos:end="51:38">&amp;</operator><name pos:start="51:39" pos:end="51:47"><name pos:start="51:39" pos:end="51:39">h</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:44">DPB</name><index pos:start="51:45" pos:end="51:47">[<expr pos:start="51:46" pos:end="51:46"><name pos:start="51:46" pos:end="51:46">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="53:9" pos:end="53:26"><expr pos:start="53:9" pos:end="53:25"><call pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:16">av_freep</name><argument_list pos:start="53:17" pos:end="53:25">(<argument pos:start="53:18" pos:end="53:24"><expr pos:start="53:18" pos:end="53:24"><operator pos:start="53:18" pos:end="53:18">&amp;</operator><name pos:start="53:19" pos:end="53:24"><name pos:start="53:19" pos:end="53:19">h</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:24">DPB</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:26"><expr pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:5">h</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:18">cur_pic_ptr</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:25">NULL</name></expr>;</expr_stmt>



    <for pos:start="63:5" pos:end="107:5">for <control pos:start="63:9" pos:end="63:41">(<init pos:start="63:10" pos:end="63:15"><expr pos:start="63:10" pos:end="63:14"><name pos:start="63:10" pos:end="63:10">i</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>;</init> <condition pos:start="63:17" pos:end="63:36"><expr pos:start="63:17" pos:end="63:35"><name pos:start="63:17" pos:end="63:17">i</name> <operator pos:start="63:19" pos:end="63:19">&lt;</operator> <name pos:start="63:21" pos:end="63:35"><name pos:start="63:21" pos:end="63:21">h</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:35">nb_slice_ctx</name></name></expr>;</condition> <incr pos:start="63:38" pos:end="63:40"><expr pos:start="63:38" pos:end="63:40"><name pos:start="63:38" pos:end="63:38">i</name><operator pos:start="63:39" pos:end="63:40">++</operator></expr></incr>)</control> <block pos:start="63:43" pos:end="107:5">{<block_content pos:start="65:9" pos:end="105:9">

        <decl_stmt pos:start="65:9" pos:end="65:48"><decl pos:start="65:9" pos:end="65:47"><type pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:24">H264SliceContext</name> <modifier pos:start="65:26" pos:end="65:26">*</modifier></type><name pos:start="65:27" pos:end="65:28">sl</name> <init pos:start="65:30" pos:end="65:47">= <expr pos:start="65:32" pos:end="65:47"><operator pos:start="65:32" pos:end="65:32">&amp;</operator><name pos:start="65:33" pos:end="65:47"><name pos:start="65:33" pos:end="65:33">h</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:44">slice_ctx</name><index pos:start="65:45" pos:end="65:47">[<expr pos:start="65:46" pos:end="65:46"><name pos:start="65:46" pos:end="65:46">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:35"><expr pos:start="69:9" pos:end="69:34"><call pos:start="69:9" pos:end="69:34"><name pos:start="69:9" pos:end="69:16">av_freep</name><argument_list pos:start="69:17" pos:end="69:34">(<argument pos:start="69:18" pos:end="69:33"><expr pos:start="69:18" pos:end="69:33"><operator pos:start="69:18" pos:end="69:18">&amp;</operator><name pos:start="69:19" pos:end="69:33"><name pos:start="69:19" pos:end="69:20">sl</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:33">dc_val_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:38"><expr pos:start="71:9" pos:end="71:37"><call pos:start="71:9" pos:end="71:37"><name pos:start="71:9" pos:end="71:16">av_freep</name><argument_list pos:start="71:17" pos:end="71:37">(<argument pos:start="71:18" pos:end="71:36"><expr pos:start="71:18" pos:end="71:36"><operator pos:start="71:18" pos:end="71:18">&amp;</operator><name pos:start="71:19" pos:end="71:36"><name pos:start="71:19" pos:end="71:20">sl</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:24">er</name><operator pos:start="71:25" pos:end="71:25">.</operator><name pos:start="71:26" pos:end="71:36">mb_index2xy</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:45"><expr pos:start="73:9" pos:end="73:44"><call pos:start="73:9" pos:end="73:44"><name pos:start="73:9" pos:end="73:16">av_freep</name><argument_list pos:start="73:17" pos:end="73:44">(<argument pos:start="73:18" pos:end="73:43"><expr pos:start="73:18" pos:end="73:43"><operator pos:start="73:18" pos:end="73:18">&amp;</operator><name pos:start="73:19" pos:end="73:43"><name pos:start="73:19" pos:end="73:20">sl</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:24">er</name><operator pos:start="73:25" pos:end="73:25">.</operator><name pos:start="73:26" pos:end="73:43">error_status_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:41"><expr pos:start="75:9" pos:end="75:40"><call pos:start="75:9" pos:end="75:40"><name pos:start="75:9" pos:end="75:16">av_freep</name><argument_list pos:start="75:17" pos:end="75:40">(<argument pos:start="75:18" pos:end="75:39"><expr pos:start="75:18" pos:end="75:39"><operator pos:start="75:18" pos:end="75:18">&amp;</operator><name pos:start="75:19" pos:end="75:39"><name pos:start="75:19" pos:end="75:20">sl</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:24">er</name><operator pos:start="75:25" pos:end="75:25">.</operator><name pos:start="75:26" pos:end="75:39">er_temp_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:41"><expr pos:start="79:9" pos:end="79:40"><call pos:start="79:9" pos:end="79:40"><name pos:start="79:9" pos:end="79:16">av_freep</name><argument_list pos:start="79:17" pos:end="79:40">(<argument pos:start="79:18" pos:end="79:39"><expr pos:start="79:18" pos:end="79:39"><operator pos:start="79:18" pos:end="79:18">&amp;</operator><name pos:start="79:19" pos:end="79:39"><name pos:start="79:19" pos:end="79:20">sl</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:39">bipred_scratchpad</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:39"><expr pos:start="81:9" pos:end="81:38"><call pos:start="81:9" pos:end="81:38"><name pos:start="81:9" pos:end="81:16">av_freep</name><argument_list pos:start="81:17" pos:end="81:38">(<argument pos:start="81:18" pos:end="81:37"><expr pos:start="81:18" pos:end="81:37"><operator pos:start="81:18" pos:end="81:18">&amp;</operator><name pos:start="81:19" pos:end="81:37"><name pos:start="81:19" pos:end="81:20">sl</name><operator pos:start="81:21" pos:end="81:22">-&gt;</operator><name pos:start="81:23" pos:end="81:37">edge_emu_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:38"><expr pos:start="83:9" pos:end="83:37"><call pos:start="83:9" pos:end="83:37"><name pos:start="83:9" pos:end="83:16">av_freep</name><argument_list pos:start="83:17" pos:end="83:37">(<argument pos:start="83:18" pos:end="83:36"><expr pos:start="83:18" pos:end="83:36"><operator pos:start="83:18" pos:end="83:18">&amp;</operator><name pos:start="83:19" pos:end="83:36"><name pos:start="83:19" pos:end="83:20">sl</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:33">top_borders</name><index pos:start="83:34" pos:end="83:36">[<expr pos:start="83:35" pos:end="83:35"><literal type="number" pos:start="83:35" pos:end="83:35">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:38"><expr pos:start="85:9" pos:end="85:37"><call pos:start="85:9" pos:end="85:37"><name pos:start="85:9" pos:end="85:16">av_freep</name><argument_list pos:start="85:17" pos:end="85:37">(<argument pos:start="85:18" pos:end="85:36"><expr pos:start="85:18" pos:end="85:36"><operator pos:start="85:18" pos:end="85:18">&amp;</operator><name pos:start="85:19" pos:end="85:36"><name pos:start="85:19" pos:end="85:20">sl</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:33">top_borders</name><index pos:start="85:34" pos:end="85:36">[<expr pos:start="85:35" pos:end="85:35"><literal type="number" pos:start="85:35" pos:end="85:35">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:44"><expr pos:start="89:9" pos:end="89:43"><name pos:start="89:9" pos:end="89:39"><name pos:start="89:9" pos:end="89:10">sl</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:39">bipred_scratchpad_allocated</name></name> <operator pos:start="89:41" pos:end="89:41">=</operator> <literal type="number" pos:start="89:43" pos:end="89:43">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:44"><expr pos:start="91:9" pos:end="91:43"><name pos:start="91:9" pos:end="91:37"><name pos:start="91:9" pos:end="91:10">sl</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:37">edge_emu_buffer_allocated</name></name>   <operator pos:start="91:41" pos:end="91:41">=</operator> <literal type="number" pos:start="91:43" pos:end="91:43">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:44"><expr pos:start="93:9" pos:end="93:43"><name pos:start="93:9" pos:end="93:36"><name pos:start="93:9" pos:end="93:10">sl</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:33">top_borders_allocated</name><index pos:start="93:34" pos:end="93:36">[<expr pos:start="93:35" pos:end="93:35"><literal type="number" pos:start="93:35" pos:end="93:35">0</literal></expr>]</index></name>    <operator pos:start="93:41" pos:end="93:41">=</operator> <literal type="number" pos:start="93:43" pos:end="93:43">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:44"><expr pos:start="95:9" pos:end="95:43"><name pos:start="95:9" pos:end="95:36"><name pos:start="95:9" pos:end="95:10">sl</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:33">top_borders_allocated</name><index pos:start="95:34" pos:end="95:36">[<expr pos:start="95:35" pos:end="95:35"><literal type="number" pos:start="95:35" pos:end="95:35">1</literal></expr>]</index></name>    <operator pos:start="95:41" pos:end="95:41">=</operator> <literal type="number" pos:start="95:43" pos:end="95:43">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="99:9" pos:end="105:9"><if pos:start="99:9" pos:end="105:9">if <condition pos:start="99:12" pos:end="99:22">(<expr pos:start="99:13" pos:end="99:21"><name pos:start="99:13" pos:end="99:21">free_rbsp</name></expr>)</condition> <block pos:start="99:24" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:48">

            <expr_stmt pos:start="101:13" pos:end="101:39"><expr pos:start="101:13" pos:end="101:38"><call pos:start="101:13" pos:end="101:38"><name pos:start="101:13" pos:end="101:20">av_freep</name><argument_list pos:start="101:21" pos:end="101:38">(<argument pos:start="101:22" pos:end="101:37"><expr pos:start="101:22" pos:end="101:37"><operator pos:start="101:22" pos:end="101:22">&amp;</operator><name pos:start="101:23" pos:end="101:37"><name pos:start="101:23" pos:end="101:24">sl</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:37">rbsp_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:48"><expr pos:start="103:13" pos:end="103:47"><name pos:start="103:13" pos:end="103:32"><name pos:start="103:13" pos:end="103:14">sl</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:32">rbsp_buffer_size</name></name>            <operator pos:start="103:45" pos:end="103:45">=</operator> <literal type="number" pos:start="103:47" pos:end="103:47">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
