<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10100.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">rtp_parse_close</name><parameter_list pos:start="1:21" pos:end="1:40">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:36">RTPDemuxContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="9:5" pos:end="15:15">

    <comment type="line" pos:start="5:5" pos:end="5:62">// TODO: fold this into the protocol specific data fields.</comment>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:58">(<expr pos:start="9:9" pos:end="9:57"><operator pos:start="9:9" pos:end="9:9">!</operator><call pos:start="9:10" pos:end="9:57"><name pos:start="9:10" pos:end="9:15">strcmp</name><argument_list pos:start="9:16" pos:end="9:57">(<argument pos:start="9:17" pos:end="9:48"><expr pos:start="9:17" pos:end="9:48"><call pos:start="9:17" pos:end="9:48"><name pos:start="9:17" pos:end="9:31">ff_rtp_enc_name</name><argument_list pos:start="9:32" pos:end="9:48">(<argument pos:start="9:33" pos:end="9:47"><expr pos:start="9:33" pos:end="9:47"><name pos:start="9:33" pos:end="9:47"><name pos:start="9:33" pos:end="9:33">s</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:47">payload_type</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="9:51" pos:end="9:56"><expr pos:start="9:51" pos:end="9:56"><literal type="string" pos:start="9:51" pos:end="9:56">"MP2T"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:60" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:37">

        <expr_stmt pos:start="11:9" pos:end="11:37"><expr pos:start="11:9" pos:end="11:36"><call pos:start="11:9" pos:end="11:36"><name pos:start="11:9" pos:end="11:29">ff_mpegts_parse_close</name><argument_list pos:start="11:30" pos:end="11:36">(<argument pos:start="11:31" pos:end="11:35"><expr pos:start="11:31" pos:end="11:35"><name pos:start="11:31" pos:end="11:35"><name pos:start="11:31" pos:end="11:31">s</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:35">ts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:15"><expr pos:start="15:5" pos:end="15:14"><call pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:11">av_free</name><argument_list pos:start="15:12" pos:end="15:14">(<argument pos:start="15:13" pos:end="15:13"><expr pos:start="15:13" pos:end="15:13"><name pos:start="15:13" pos:end="15:13">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
