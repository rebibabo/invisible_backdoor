<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/243.c" pos:tabs="8"><macro pos:start="1:1" pos:end="9:61"><name pos:start="1:1" pos:end="1:25">yuv2rgb_full_2_c_template</name><argument_list pos:start="1:26" pos:end="9:61">(<argument pos:start="1:27" pos:end="1:39">SwsContext *c</argument>, <argument pos:start="1:42" pos:end="1:62">const int16_t *buf[<literal type="number" pos:start="1:61" pos:end="1:61">2</literal>]</argument>,

                     <argument pos:start="3:22" pos:end="3:43">const int16_t *ubuf[<literal type="number" pos:start="3:42" pos:end="3:42">2</literal>]</argument>, <argument pos:start="3:46" pos:end="3:67">const int16_t *vbuf[<literal type="number" pos:start="3:66" pos:end="3:66">2</literal>]</argument>,

                     <argument pos:start="5:22" pos:end="5:43">const int16_t *abuf[<literal type="number" pos:start="5:42" pos:end="5:42">2</literal>]</argument>, <argument pos:start="5:46" pos:end="5:58">uint8_t *dest</argument>, <argument pos:start="5:61" pos:end="5:68">int dstW</argument>,

                     <argument pos:start="7:22" pos:end="7:31">int yalpha</argument>, <argument pos:start="7:34" pos:end="7:44">int uvalpha</argument>, <argument pos:start="7:47" pos:end="7:51">int y</argument>,

                     <argument pos:start="9:22" pos:end="9:46">enum AVPixelFormat target</argument>, <argument pos:start="9:49" pos:end="9:60">int hasAlpha</argument>)</argument_list></macro>

<block pos:start="11:1" pos:end="79:1">{<block_content pos:start="13:5" pos:end="77:35">

    <decl_stmt pos:start="13:5" pos:end="21:53"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">int16_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:23">buf0</name>  <init pos:start="13:26" pos:end="13:33">= <expr pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:30">buf</name><index pos:start="13:31" pos:end="13:33">[<expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr>]</index></name></expr></init></decl>,  <decl pos:start="13:37" pos:end="13:51"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:37" pos:end="13:37">*</modifier></type><name pos:start="13:38" pos:end="13:41">buf1</name>  <init pos:start="13:44" pos:end="13:51">= <expr pos:start="13:46" pos:end="13:51"><name pos:start="13:46" pos:end="13:51"><name pos:start="13:46" pos:end="13:48">buf</name><index pos:start="13:49" pos:end="13:51">[<expr pos:start="13:50" pos:end="13:50"><literal type="number" pos:start="13:50" pos:end="13:50">1</literal></expr>]</index></name></expr></init></decl>,

                  <decl pos:start="15:19" pos:end="15:34"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:24">ubuf0</name> <init pos:start="15:26" pos:end="15:34">= <expr pos:start="15:28" pos:end="15:34"><name pos:start="15:28" pos:end="15:34"><name pos:start="15:28" pos:end="15:31">ubuf</name><index pos:start="15:32" pos:end="15:34">[<expr pos:start="15:33" pos:end="15:33"><literal type="number" pos:start="15:33" pos:end="15:33">0</literal></expr>]</index></name></expr></init></decl>, <decl pos:start="15:37" pos:end="15:52"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="15:37" pos:end="15:37">*</modifier></type><name pos:start="15:38" pos:end="15:42">ubuf1</name> <init pos:start="15:44" pos:end="15:52">= <expr pos:start="15:46" pos:end="15:52"><name pos:start="15:46" pos:end="15:52"><name pos:start="15:46" pos:end="15:49">ubuf</name><index pos:start="15:50" pos:end="15:52">[<expr pos:start="15:51" pos:end="15:51"><literal type="number" pos:start="15:51" pos:end="15:51">1</literal></expr>]</index></name></expr></init></decl>,

                  <decl pos:start="17:19" pos:end="17:34"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:24">vbuf0</name> <init pos:start="17:26" pos:end="17:34">= <expr pos:start="17:28" pos:end="17:34"><name pos:start="17:28" pos:end="17:34"><name pos:start="17:28" pos:end="17:31">vbuf</name><index pos:start="17:32" pos:end="17:34">[<expr pos:start="17:33" pos:end="17:33"><literal type="number" pos:start="17:33" pos:end="17:33">0</literal></expr>]</index></name></expr></init></decl>, <decl pos:start="17:37" pos:end="17:52"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="17:37" pos:end="17:37">*</modifier></type><name pos:start="17:38" pos:end="17:42">vbuf1</name> <init pos:start="17:44" pos:end="17:52">= <expr pos:start="17:46" pos:end="17:52"><name pos:start="17:46" pos:end="17:52"><name pos:start="17:46" pos:end="17:49">vbuf</name><index pos:start="17:50" pos:end="17:52">[<expr pos:start="17:51" pos:end="17:51"><literal type="number" pos:start="17:51" pos:end="17:51">1</literal></expr>]</index></name></expr></init></decl>,

                  <decl pos:start="19:19" pos:end="19:52"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:24">abuf0</name> <init pos:start="19:26" pos:end="19:52">= <expr pos:start="19:28" pos:end="19:52"><ternary pos:start="19:28" pos:end="19:52"><condition pos:start="19:28" pos:end="19:37"><expr pos:start="19:28" pos:end="19:35"><name pos:start="19:28" pos:end="19:35">hasAlpha</name></expr> ?</condition><then pos:start="19:39" pos:end="19:45"> <expr pos:start="19:39" pos:end="19:45"><name pos:start="19:39" pos:end="19:45"><name pos:start="19:39" pos:end="19:42">abuf</name><index pos:start="19:43" pos:end="19:45">[<expr pos:start="19:44" pos:end="19:44"><literal type="number" pos:start="19:44" pos:end="19:44">0</literal></expr>]</index></name></expr> </then><else pos:start="19:47" pos:end="19:52">: <expr pos:start="19:49" pos:end="19:52"><name pos:start="19:49" pos:end="19:52">NULL</name></expr></else></ternary></expr></init></decl>,

                  <decl pos:start="21:19" pos:end="21:52"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:24">abuf1</name> <init pos:start="21:26" pos:end="21:52">= <expr pos:start="21:28" pos:end="21:52"><ternary pos:start="21:28" pos:end="21:52"><condition pos:start="21:28" pos:end="21:37"><expr pos:start="21:28" pos:end="21:35"><name pos:start="21:28" pos:end="21:35">hasAlpha</name></expr> ?</condition><then pos:start="21:39" pos:end="21:45"> <expr pos:start="21:39" pos:end="21:45"><name pos:start="21:39" pos:end="21:45"><name pos:start="21:39" pos:end="21:42">abuf</name><index pos:start="21:43" pos:end="21:45">[<expr pos:start="21:44" pos:end="21:44"><literal type="number" pos:start="21:44" pos:end="21:44">1</literal></expr>]</index></name></expr> </then><else pos:start="21:47" pos:end="21:52">: <expr pos:start="21:49" pos:end="21:52"><name pos:start="21:49" pos:end="21:52">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:33"><decl pos:start="23:5" pos:end="23:32"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type>  <name pos:start="23:10" pos:end="23:16">yalpha1</name> <init pos:start="23:18" pos:end="23:32">= <expr pos:start="23:20" pos:end="23:32"><literal type="number" pos:start="23:20" pos:end="23:25">4096</literal> <operator pos:start="23:25" pos:end="23:25">-</operator> <name pos:start="23:27" pos:end="23:32">yalpha</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:34"><decl pos:start="25:5" pos:end="25:33"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:16">uvalpha1</name> <init pos:start="25:18" pos:end="25:33">= <expr pos:start="25:20" pos:end="25:33"><literal type="number" pos:start="25:20" pos:end="25:25">4096</literal> <operator pos:start="25:25" pos:end="25:25">-</operator> <name pos:start="25:27" pos:end="25:33">uvalpha</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:10"><decl pos:start="27:5" pos:end="27:9"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:82"><decl pos:start="29:5" pos:end="29:81"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:12">step</name> <init pos:start="29:14" pos:end="29:81">= <expr pos:start="29:16" pos:end="29:81"><ternary pos:start="29:16" pos:end="29:81"><condition pos:start="29:16" pos:end="29:75"><expr pos:start="29:16" pos:end="29:73"><operator pos:start="29:16" pos:end="29:16">(</operator><name pos:start="29:17" pos:end="29:22">target</name> <operator pos:start="29:24" pos:end="29:25">==</operator> <name pos:start="29:27" pos:end="29:42">AV_PIX_FMT_RGB24</name> <operator pos:start="29:44" pos:end="29:45">||</operator> <name pos:start="29:47" pos:end="29:52">target</name> <operator pos:start="29:54" pos:end="29:55">==</operator> <name pos:start="29:57" pos:end="29:72">AV_PIX_FMT_BGR24</name><operator pos:start="29:73" pos:end="29:73">)</operator></expr> ?</condition><then pos:start="29:77" pos:end="29:77"> <expr pos:start="29:77" pos:end="29:77"><literal type="number" pos:start="29:77" pos:end="29:77">3</literal></expr> </then><else pos:start="29:79" pos:end="29:81">: <expr pos:start="29:81" pos:end="29:81"><literal type="number" pos:start="29:81" pos:end="29:81">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:21"><decl pos:start="31:5" pos:end="31:20"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:11">err</name><index pos:start="31:12" pos:end="31:14">[<expr pos:start="31:13" pos:end="31:13"><literal type="number" pos:start="31:13" pos:end="31:13">4</literal></expr>]</index></name> <init pos:start="31:16" pos:end="31:20">= <expr pos:start="31:18" pos:end="31:20"><block pos:start="31:18" pos:end="31:20">{<expr pos:start="31:19" pos:end="31:19"><literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="39:17"><if pos:start="35:5" pos:end="39:17">if<condition pos:start="35:7" pos:end="37:70">(   <expr pos:start="35:11" pos:end="37:69"><name pos:start="35:11" pos:end="35:16">target</name> <operator pos:start="35:18" pos:end="35:19">==</operator> <name pos:start="35:21" pos:end="35:40">AV_PIX_FMT_BGR4_BYTE</name> <operator pos:start="35:42" pos:end="35:43">||</operator> <name pos:start="35:45" pos:end="35:50">target</name> <operator pos:start="35:52" pos:end="35:53">==</operator> <name pos:start="35:55" pos:end="35:74">AV_PIX_FMT_RGB4_BYTE</name>

       <operator pos:start="37:8" pos:end="37:9">||</operator> <name pos:start="37:11" pos:end="37:16">target</name> <operator pos:start="37:18" pos:end="37:19">==</operator> <name pos:start="37:21" pos:end="37:35">AV_PIX_FMT_BGR8</name>      <operator pos:start="37:42" pos:end="37:43">||</operator> <name pos:start="37:45" pos:end="37:50">target</name> <operator pos:start="37:52" pos:end="37:53">==</operator> <name pos:start="37:55" pos:end="37:69">AV_PIX_FMT_RGB8</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:17"><block_content pos:start="39:9" pos:end="39:17">

        <expr_stmt pos:start="39:9" pos:end="39:17"><expr pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:12">step</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <literal type="number" pos:start="39:16" pos:end="39:16">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="43:5" pos:end="71:5">for <control pos:start="43:9" pos:end="43:30">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:25"><expr pos:start="43:17" pos:end="43:24"><name pos:start="43:17" pos:end="43:17">i</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:24">dstW</name></expr>;</condition> <incr pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><name pos:start="43:27" pos:end="43:27">i</name><operator pos:start="43:28" pos:end="43:29">++</operator></expr></incr>)</control> <block pos:start="43:32" pos:end="71:5">{<block_content pos:start="45:9" pos:end="69:21">

        <decl_stmt pos:start="45:9" pos:end="45:77"><decl pos:start="45:9" pos:end="45:76"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:13">Y</name> <init pos:start="45:15" pos:end="45:76">= <expr pos:start="45:17" pos:end="45:76"><operator pos:start="45:17" pos:end="45:17">(</operator> <name pos:start="45:19" pos:end="45:25"><name pos:start="45:19" pos:end="45:22">buf0</name><index pos:start="45:23" pos:end="45:25">[<expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">i</name></expr>]</index></name> <operator pos:start="45:27" pos:end="45:27">*</operator> <name pos:start="45:29" pos:end="45:35">yalpha1</name>  <operator pos:start="45:38" pos:end="45:38">+</operator>  <name pos:start="45:41" pos:end="45:47"><name pos:start="45:41" pos:end="45:44">buf1</name><index pos:start="45:45" pos:end="45:47">[<expr pos:start="45:46" pos:end="45:46"><name pos:start="45:46" pos:end="45:46">i</name></expr>]</index></name> <operator pos:start="45:49" pos:end="45:49">*</operator> <name pos:start="45:51" pos:end="45:56">yalpha</name>             <operator pos:start="45:70" pos:end="45:70">)</operator> <operator pos:start="45:72" pos:end="45:73">&gt;&gt;</operator> <literal type="number" pos:start="45:75" pos:end="45:76">10</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="45:79" pos:end="45:94">//FIXME rounding</comment>

        <decl_stmt pos:start="47:9" pos:end="47:77"><decl pos:start="47:9" pos:end="47:76"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:13">U</name> <init pos:start="47:15" pos:end="47:76">= <expr pos:start="47:17" pos:end="47:76"><operator pos:start="47:17" pos:end="47:17">(</operator><name pos:start="47:18" pos:end="47:25"><name pos:start="47:18" pos:end="47:22">ubuf0</name><index pos:start="47:23" pos:end="47:25">[<expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">i</name></expr>]</index></name> <operator pos:start="47:27" pos:end="47:27">*</operator> <name pos:start="47:29" pos:end="47:36">uvalpha1</name> <operator pos:start="47:38" pos:end="47:38">+</operator> <name pos:start="47:40" pos:end="47:47"><name pos:start="47:40" pos:end="47:44">ubuf1</name><index pos:start="47:45" pos:end="47:47">[<expr pos:start="47:46" pos:end="47:46"><name pos:start="47:46" pos:end="47:46">i</name></expr>]</index></name> <operator pos:start="47:49" pos:end="47:49">*</operator> <name pos:start="47:51" pos:end="47:57">uvalpha</name><operator pos:start="47:58" pos:end="47:58">-</operator><operator pos:start="47:59" pos:end="47:59">(</operator><literal type="number" pos:start="47:60" pos:end="47:62">128</literal> <operator pos:start="47:64" pos:end="47:65">&lt;&lt;</operator> <literal type="number" pos:start="47:67" pos:end="47:68">19</literal><operator pos:start="47:69" pos:end="47:69">)</operator><operator pos:start="47:70" pos:end="47:70">)</operator> <operator pos:start="47:72" pos:end="47:73">&gt;&gt;</operator> <literal type="number" pos:start="47:75" pos:end="47:76">10</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:77"><decl pos:start="49:9" pos:end="49:76"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:13">V</name> <init pos:start="49:15" pos:end="49:76">= <expr pos:start="49:17" pos:end="49:76"><operator pos:start="49:17" pos:end="49:17">(</operator><name pos:start="49:18" pos:end="49:25"><name pos:start="49:18" pos:end="49:22">vbuf0</name><index pos:start="49:23" pos:end="49:25">[<expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">i</name></expr>]</index></name> <operator pos:start="49:27" pos:end="49:27">*</operator> <name pos:start="49:29" pos:end="49:36">uvalpha1</name> <operator pos:start="49:38" pos:end="49:38">+</operator> <name pos:start="49:40" pos:end="49:47"><name pos:start="49:40" pos:end="49:44">vbuf1</name><index pos:start="49:45" pos:end="49:47">[<expr pos:start="49:46" pos:end="49:46"><name pos:start="49:46" pos:end="49:46">i</name></expr>]</index></name> <operator pos:start="49:49" pos:end="49:49">*</operator> <name pos:start="49:51" pos:end="49:57">uvalpha</name><operator pos:start="49:58" pos:end="49:58">-</operator><operator pos:start="49:59" pos:end="49:59">(</operator><literal type="number" pos:start="49:60" pos:end="49:62">128</literal> <operator pos:start="49:64" pos:end="49:65">&lt;&lt;</operator> <literal type="number" pos:start="49:67" pos:end="49:68">19</literal><operator pos:start="49:69" pos:end="49:69">)</operator><operator pos:start="49:70" pos:end="49:70">)</operator> <operator pos:start="49:72" pos:end="49:73">&gt;&gt;</operator> <literal type="number" pos:start="49:75" pos:end="49:76">10</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:14"><decl pos:start="51:9" pos:end="51:13"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:13">A</name></decl>;</decl_stmt>



        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:21">(<expr pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:20">hasAlpha</name></expr>)</condition> <block pos:start="55:23" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:37">

            <expr_stmt pos:start="57:13" pos:end="57:73"><expr pos:start="57:13" pos:end="57:72"><name pos:start="57:13" pos:end="57:13">A</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <operator pos:start="57:17" pos:end="57:17">(</operator><name pos:start="57:18" pos:end="57:25"><name pos:start="57:18" pos:end="57:22">abuf0</name><index pos:start="57:23" pos:end="57:25">[<expr pos:start="57:24" pos:end="57:24"><name pos:start="57:24" pos:end="57:24">i</name></expr>]</index></name> <operator pos:start="57:27" pos:end="57:27">*</operator> <name pos:start="57:29" pos:end="57:35">yalpha1</name> <operator pos:start="57:37" pos:end="57:37">+</operator> <name pos:start="57:39" pos:end="57:46"><name pos:start="57:39" pos:end="57:43">abuf1</name><index pos:start="57:44" pos:end="57:46">[<expr pos:start="57:45" pos:end="57:45"><name pos:start="57:45" pos:end="57:45">i</name></expr>]</index></name> <operator pos:start="57:48" pos:end="57:48">*</operator> <name pos:start="57:50" pos:end="57:55">yalpha</name> <operator pos:start="57:57" pos:end="57:57">+</operator> <operator pos:start="57:59" pos:end="57:59">(</operator><literal type="number" pos:start="57:60" pos:end="57:60">1</literal><operator pos:start="57:61" pos:end="57:62">&lt;&lt;</operator><literal type="number" pos:start="57:63" pos:end="57:64">18</literal><operator pos:start="57:65" pos:end="57:65">)</operator><operator pos:start="57:66" pos:end="57:66">)</operator> <operator pos:start="57:68" pos:end="57:69">&gt;&gt;</operator> <literal type="number" pos:start="57:71" pos:end="57:72">19</literal></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="61:37"><if pos:start="59:13" pos:end="61:37">if <condition pos:start="59:16" pos:end="59:26">(<expr pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:17">A</name> <operator pos:start="59:19" pos:end="59:19">&amp;</operator> <literal type="number" pos:start="59:21" pos:end="59:25">0x100</literal></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:37"><block_content pos:start="61:17" pos:end="61:37">

                <expr_stmt pos:start="61:17" pos:end="61:37"><expr pos:start="61:17" pos:end="61:36"><name pos:start="61:17" pos:end="61:17">A</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="61:36"><name pos:start="61:21" pos:end="61:33">av_clip_uint8</name><argument_list pos:start="61:34" pos:end="61:36">(<argument pos:start="61:35" pos:end="61:35"><expr pos:start="61:35" pos:end="61:35"><name pos:start="61:35" pos:end="61:35">A</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:77"><expr pos:start="67:9" pos:end="67:76"><call pos:start="67:9" pos:end="67:76"><name pos:start="67:9" pos:end="67:26">yuv2rgb_write_full</name><argument_list pos:start="67:27" pos:end="67:76">(<argument pos:start="67:28" pos:end="67:28"><expr pos:start="67:28" pos:end="67:28"><name pos:start="67:28" pos:end="67:28">c</name></expr></argument>, <argument pos:start="67:31" pos:end="67:34"><expr pos:start="67:31" pos:end="67:34"><name pos:start="67:31" pos:end="67:34">dest</name></expr></argument>, <argument pos:start="67:37" pos:end="67:37"><expr pos:start="67:37" pos:end="67:37"><name pos:start="67:37" pos:end="67:37">i</name></expr></argument>, <argument pos:start="67:40" pos:end="67:40"><expr pos:start="67:40" pos:end="67:40"><name pos:start="67:40" pos:end="67:40">Y</name></expr></argument>, <argument pos:start="67:43" pos:end="67:43"><expr pos:start="67:43" pos:end="67:43"><name pos:start="67:43" pos:end="67:43">A</name></expr></argument>, <argument pos:start="67:46" pos:end="67:46"><expr pos:start="67:46" pos:end="67:46"><name pos:start="67:46" pos:end="67:46">U</name></expr></argument>, <argument pos:start="67:49" pos:end="67:49"><expr pos:start="67:49" pos:end="67:49"><name pos:start="67:49" pos:end="67:49">V</name></expr></argument>, <argument pos:start="67:52" pos:end="67:52"><expr pos:start="67:52" pos:end="67:52"><name pos:start="67:52" pos:end="67:52">y</name></expr></argument>, <argument pos:start="67:55" pos:end="67:60"><expr pos:start="67:55" pos:end="67:60"><name pos:start="67:55" pos:end="67:60">target</name></expr></argument>, <argument pos:start="67:63" pos:end="67:70"><expr pos:start="67:63" pos:end="67:70"><name pos:start="67:63" pos:end="67:70">hasAlpha</name></expr></argument>, <argument pos:start="67:73" pos:end="67:75"><expr pos:start="67:73" pos:end="67:75"><name pos:start="67:73" pos:end="67:75">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:21"><expr pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:12">dest</name> <operator pos:start="69:14" pos:end="69:15">+=</operator> <name pos:start="69:17" pos:end="69:20">step</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="73:5" pos:end="73:35"><expr pos:start="73:5" pos:end="73:34"><name pos:start="73:5" pos:end="73:25"><name pos:start="73:5" pos:end="73:5">c</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:19">dither_error</name><index pos:start="73:20" pos:end="73:22">[<expr pos:start="73:21" pos:end="73:21"><literal type="number" pos:start="73:21" pos:end="73:21">0</literal></expr>]</index><index pos:start="73:23" pos:end="73:25">[<expr pos:start="73:24" pos:end="73:24"><name pos:start="73:24" pos:end="73:24">i</name></expr>]</index></name> <operator pos:start="73:27" pos:end="73:27">=</operator> <name pos:start="73:29" pos:end="73:34"><name pos:start="73:29" pos:end="73:31">err</name><index pos:start="73:32" pos:end="73:34">[<expr pos:start="73:33" pos:end="73:33"><literal type="number" pos:start="73:33" pos:end="73:33">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:35"><expr pos:start="75:5" pos:end="75:34"><name pos:start="75:5" pos:end="75:25"><name pos:start="75:5" pos:end="75:5">c</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:19">dither_error</name><index pos:start="75:20" pos:end="75:22">[<expr pos:start="75:21" pos:end="75:21"><literal type="number" pos:start="75:21" pos:end="75:21">1</literal></expr>]</index><index pos:start="75:23" pos:end="75:25">[<expr pos:start="75:24" pos:end="75:24"><name pos:start="75:24" pos:end="75:24">i</name></expr>]</index></name> <operator pos:start="75:27" pos:end="75:27">=</operator> <name pos:start="75:29" pos:end="75:34"><name pos:start="75:29" pos:end="75:31">err</name><index pos:start="75:32" pos:end="75:34">[<expr pos:start="75:33" pos:end="75:33"><literal type="number" pos:start="75:33" pos:end="75:33">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:35"><expr pos:start="77:5" pos:end="77:34"><name pos:start="77:5" pos:end="77:25"><name pos:start="77:5" pos:end="77:5">c</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:19">dither_error</name><index pos:start="77:20" pos:end="77:22">[<expr pos:start="77:21" pos:end="77:21"><literal type="number" pos:start="77:21" pos:end="77:21">2</literal></expr>]</index><index pos:start="77:23" pos:end="77:25">[<expr pos:start="77:24" pos:end="77:24"><name pos:start="77:24" pos:end="77:24">i</name></expr>]</index></name> <operator pos:start="77:27" pos:end="77:27">=</operator> <name pos:start="77:29" pos:end="77:34"><name pos:start="77:29" pos:end="77:31">err</name><index pos:start="77:32" pos:end="77:34">[<expr pos:start="77:33" pos:end="77:33"><literal type="number" pos:start="77:33" pos:end="77:33">2</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block>
</unit>
