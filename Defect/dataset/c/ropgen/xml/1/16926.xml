<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16926.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">msi_uninit</name><parameter_list pos:start="1:16" pos:end="1:38">(<parameter pos:start="1:17" pos:end="1:37"><decl pos:start="1:17" pos:end="1:37"><type pos:start="1:17" pos:end="1:37"><name pos:start="1:17" pos:end="1:32"><name pos:start="1:17" pos:end="1:22">struct</name> <name pos:start="1:24" pos:end="1:32">PCIDevice</name></name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="13:1">{<block_content pos:start="5:5" pos:end="11:36">

    <decl_stmt pos:start="5:5" pos:end="5:68"><decl pos:start="5:5" pos:end="5:67"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint16_t</name></type> <name pos:start="5:14" pos:end="5:18">flags</name> <init pos:start="5:20" pos:end="5:67">= <expr pos:start="5:22" pos:end="5:67"><call pos:start="5:22" pos:end="5:67"><name pos:start="5:22" pos:end="5:33">pci_get_word</name><argument_list pos:start="5:34" pos:end="5:67">(<argument pos:start="5:35" pos:end="5:66"><expr pos:start="5:35" pos:end="5:66"><name pos:start="5:35" pos:end="5:45"><name pos:start="5:35" pos:end="5:37">dev</name><operator pos:start="5:38" pos:end="5:39">-&gt;</operator><name pos:start="5:40" pos:end="5:45">config</name></name> <operator pos:start="5:47" pos:end="5:47">+</operator> <call pos:start="5:49" pos:end="5:66"><name pos:start="5:49" pos:end="5:61">msi_flags_off</name><argument_list pos:start="5:62" pos:end="5:66">(<argument pos:start="5:63" pos:end="5:65"><expr pos:start="5:63" pos:end="5:65"><name pos:start="5:63" pos:end="5:65">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:20">cap_size</name> <init pos:start="7:22" pos:end="7:44">= <expr pos:start="7:24" pos:end="7:44"><call pos:start="7:24" pos:end="7:44"><name pos:start="7:24" pos:end="7:37">msi_cap_sizeof</name><argument_list pos:start="7:38" pos:end="7:44">(<argument pos:start="7:39" pos:end="7:43"><expr pos:start="7:39" pos:end="7:43"><name pos:start="7:39" pos:end="7:43">flags</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:55"><expr pos:start="9:5" pos:end="9:54"><call pos:start="9:5" pos:end="9:54"><name pos:start="9:5" pos:end="9:22">pci_del_capability</name><argument_list pos:start="9:23" pos:end="9:54">(<argument pos:start="9:24" pos:end="9:26"><expr pos:start="9:24" pos:end="9:26"><name pos:start="9:24" pos:end="9:26">dev</name></expr></argument>, <argument pos:start="9:29" pos:end="9:43"><expr pos:start="9:29" pos:end="9:43"><name pos:start="9:29" pos:end="9:43">PCI_CAP_ID_MSIX</name></expr></argument>, <argument pos:start="9:46" pos:end="9:53"><expr pos:start="9:46" pos:end="9:53"><name pos:start="9:46" pos:end="9:53">cap_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><call pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:18">MSI_DEV_PRINTF</name><argument_list pos:start="11:19" pos:end="11:35">(<argument pos:start="11:20" pos:end="11:22"><expr pos:start="11:20" pos:end="11:22"><name pos:start="11:20" pos:end="11:22">dev</name></expr></argument>, <argument pos:start="11:25" pos:end="11:34"><expr pos:start="11:25" pos:end="11:34"><literal type="string" pos:start="11:25" pos:end="11:34">"uninit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
