<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9832.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:25"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">dec_store</name><parameter_list pos:start="1:22" pos:end="1:39">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:36"><name pos:start="1:23" pos:end="1:34">DisasContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">dc</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="17:25">{<block_content pos:start="3:5" pos:end="17:25">
    <decl_stmt pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:10"><type pos:start="3:5" pos:end="3:8"><name pos:start="3:5" pos:end="3:8">TCGv</name></type> <name pos:start="3:10" pos:end="3:10">t</name></decl>, <decl pos:start="3:13" pos:end="3:17"><type ref="prev" pos:start="3:5" pos:end="3:8"><modifier pos:start="3:13" pos:end="3:13">*</modifier></type><name pos:start="3:14" pos:end="3:17">addr</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:22"><decl pos:start="4:5" pos:end="4:21"><type pos:start="4:5" pos:end="4:16"><name pos:start="4:5" pos:end="4:12">unsigned</name> <name pos:start="4:14" pos:end="4:16">int</name></type> <name pos:start="4:18" pos:end="4:21">size</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:33"><expr pos:start="5:5" pos:end="5:32"><name pos:start="5:5" pos:end="5:8">size</name> <operator pos:start="5:10" pos:end="5:10">=</operator> <literal type="number" pos:start="5:12" pos:end="5:12">1</literal> <operator pos:start="5:14" pos:end="5:15">&lt;&lt;</operator> <operator pos:start="5:17" pos:end="5:17">(</operator><name pos:start="5:18" pos:end="5:27"><name pos:start="5:18" pos:end="5:19">dc</name><operator pos:start="5:20" pos:end="5:21">-&gt;</operator><name pos:start="5:22" pos:end="5:27">opcode</name></name> <operator pos:start="5:29" pos:end="5:29">&amp;</operator> <literal type="number" pos:start="5:31" pos:end="5:31">3</literal><operator pos:start="5:32" pos:end="5:32">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:52"><expr pos:start="6:5" pos:end="6:51"><call pos:start="6:5" pos:end="6:51"><name pos:start="6:5" pos:end="6:11">LOG_DIS</name><argument_list pos:start="6:12" pos:end="6:51">(<argument pos:start="6:13" pos:end="6:21"><expr pos:start="6:13" pos:end="6:21"><literal type="string" pos:start="6:13" pos:end="6:21">"s%d%s\n"</literal></expr></argument>, <argument pos:start="6:24" pos:end="6:27"><expr pos:start="6:24" pos:end="6:27"><name pos:start="6:24" pos:end="6:27">size</name></expr></argument>, <argument pos:start="6:30" pos:end="6:50"><expr pos:start="6:30" pos:end="6:50"><ternary pos:start="6:30" pos:end="6:50"><condition pos:start="6:30" pos:end="6:41"><expr pos:start="6:30" pos:end="6:39"><name pos:start="6:30" pos:end="6:39"><name pos:start="6:30" pos:end="6:31">dc</name><operator pos:start="6:32" pos:end="6:33">-&gt;</operator><name pos:start="6:34" pos:end="6:39">type_b</name></name></expr> ?</condition><then pos:start="6:43" pos:end="6:45"> <expr pos:start="6:43" pos:end="6:45"><literal type="string" pos:start="6:43" pos:end="6:45">"i"</literal></expr> </then><else pos:start="6:47" pos:end="6:50">: <expr pos:start="6:49" pos:end="6:50"><literal type="string" pos:start="6:49" pos:end="6:50">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:21"><expr pos:start="7:5" pos:end="7:20"><call pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:16">t_sync_flags</name><argument_list pos:start="7:17" pos:end="7:20">(<argument pos:start="7:18" pos:end="7:19"><expr pos:start="7:18" pos:end="7:19"><name pos:start="7:18" pos:end="7:19">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="8:5" pos:end="8:72">/* If we get a fault on a dslot, the jmpstate better be in sync.  */</comment>
    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><call pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:17">sync_jmpstate</name><argument_list pos:start="9:18" pos:end="9:21">(<argument pos:start="9:19" pos:end="9:20"><expr pos:start="9:19" pos:end="9:20"><name pos:start="9:19" pos:end="9:20">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:37"><expr pos:start="10:5" pos:end="10:36"><name pos:start="10:5" pos:end="10:8">addr</name> <operator pos:start="10:10" pos:end="10:10">=</operator> <call pos:start="10:12" pos:end="10:36"><name pos:start="10:12" pos:end="10:28">compute_ldst_addr</name><argument_list pos:start="10:29" pos:end="10:36">(<argument pos:start="10:30" pos:end="10:31"><expr pos:start="10:30" pos:end="10:31"><name pos:start="10:30" pos:end="10:31">dc</name></expr></argument>, <argument pos:start="10:34" pos:end="10:35"><expr pos:start="10:34" pos:end="10:35"><operator pos:start="10:34" pos:end="10:34">&amp;</operator><name pos:start="10:35" pos:end="10:35">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="11:5" pos:end="11:38">/* Verify alignment if needed.  */</comment>
    <if_stmt pos:start="12:5" pos:end="17:25"><if pos:start="12:5" pos:end="17:25">if <condition pos:start="12:8" pos:end="12:69">(<expr pos:start="12:9" pos:end="12:68"><operator pos:start="12:9" pos:end="12:9">(</operator><name pos:start="12:10" pos:end="12:29"><name pos:start="12:10" pos:end="12:11">dc</name><operator pos:start="12:12" pos:end="12:13">-&gt;</operator><name pos:start="12:14" pos:end="12:16">env</name><operator pos:start="12:17" pos:end="12:18">-&gt;</operator><name pos:start="12:19" pos:end="12:21">pvr</name><operator pos:start="12:22" pos:end="12:22">.</operator><name pos:start="12:23" pos:end="12:26">regs</name><index pos:start="12:27" pos:end="12:29">[<expr pos:start="12:28" pos:end="12:28"><literal type="number" pos:start="12:28" pos:end="12:28">2</literal></expr>]</index></name> <operator pos:start="12:31" pos:end="12:31">&amp;</operator> <name pos:start="12:33" pos:end="12:55">PVR2_UNALIGNED_EXC_MASK</name><operator pos:start="12:56" pos:end="12:56">)</operator> <operator pos:start="12:58" pos:end="12:59">&amp;&amp;</operator> <name pos:start="12:61" pos:end="12:64">size</name> <operator pos:start="12:66" pos:end="12:66">&gt;</operator> <literal type="number" pos:start="12:68" pos:end="12:68">1</literal></expr>)</condition> <block pos:start="12:71" pos:end="17:25">{<block_content pos:start="13:9" pos:end="17:25">
        <expr_stmt pos:start="13:9" pos:end="14:69"><expr pos:start="13:9" pos:end="14:68"><call pos:start="13:9" pos:end="14:68"><name pos:start="13:9" pos:end="13:27">gen_helper_memalign</name><argument_list pos:start="13:28" pos:end="14:68">(<argument pos:start="13:29" pos:end="13:33"><expr pos:start="13:29" pos:end="13:33"><operator pos:start="13:29" pos:end="13:29">*</operator><name pos:start="13:30" pos:end="13:33">addr</name></expr></argument>, <argument pos:start="13:36" pos:end="13:55"><expr pos:start="13:36" pos:end="13:55"><call pos:start="13:36" pos:end="13:55"><name pos:start="13:36" pos:end="13:47">tcg_const_tl</name><argument_list pos:start="13:48" pos:end="13:55">(<argument pos:start="13:49" pos:end="13:54"><expr pos:start="13:49" pos:end="13:54"><name pos:start="13:49" pos:end="13:54"><name pos:start="13:49" pos:end="13:50">dc</name><operator pos:start="13:51" pos:end="13:52">-&gt;</operator><name pos:start="13:53" pos:end="13:54">rd</name></name></expr></argument>)</argument_list></call></expr></argument>,
                            <argument pos:start="14:29" pos:end="14:43"><expr pos:start="14:29" pos:end="14:43"><call pos:start="14:29" pos:end="14:43"><name pos:start="14:29" pos:end="14:40">tcg_const_tl</name><argument_list pos:start="14:41" pos:end="14:43">(<argument pos:start="14:42" pos:end="14:42"><expr pos:start="14:42" pos:end="14:42"><literal type="number" pos:start="14:42" pos:end="14:42">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="14:46" pos:end="14:67"><expr pos:start="14:46" pos:end="14:67"><call pos:start="14:46" pos:end="14:67"><name pos:start="14:46" pos:end="14:57">tcg_const_tl</name><argument_list pos:start="14:58" pos:end="14:67">(<argument pos:start="14:59" pos:end="14:66"><expr pos:start="14:59" pos:end="14:66"><name pos:start="14:59" pos:end="14:62">size</name> <operator pos:start="14:64" pos:end="14:64">-</operator> <literal type="number" pos:start="14:66" pos:end="14:66">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><call pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:13">gen_store</name><argument_list pos:start="15:14" pos:end="15:45">(<argument pos:start="15:15" pos:end="15:16"><expr pos:start="15:15" pos:end="15:16"><name pos:start="15:15" pos:end="15:16">dc</name></expr></argument>, <argument pos:start="15:19" pos:end="15:23"><expr pos:start="15:19" pos:end="15:23"><operator pos:start="15:19" pos:end="15:19">*</operator><name pos:start="15:20" pos:end="15:23">addr</name></expr></argument>, <argument pos:start="15:26" pos:end="15:38"><expr pos:start="15:26" pos:end="15:38"><name pos:start="15:26" pos:end="15:38"><name pos:start="15:26" pos:end="15:30">cpu_R</name><index pos:start="15:31" pos:end="15:38">[<expr pos:start="15:32" pos:end="15:37"><name pos:start="15:32" pos:end="15:37"><name pos:start="15:32" pos:end="15:33">dc</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:37">rd</name></name></expr>]</index></name></expr></argument>, <argument pos:start="15:41" pos:end="15:44"><expr pos:start="15:41" pos:end="15:44"><name pos:start="15:41" pos:end="15:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="16:5" pos:end="17:25"><if pos:start="16:5" pos:end="17:25">if <condition pos:start="16:8" pos:end="16:19">(<expr pos:start="16:9" pos:end="16:18"><name pos:start="16:9" pos:end="16:12">addr</name> <operator pos:start="16:14" pos:end="16:15">==</operator> <operator pos:start="16:17" pos:end="16:17">&amp;</operator><name pos:start="16:18" pos:end="16:18">t</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:25"><block_content pos:start="17:9" pos:end="17:25">
        <expr_stmt pos:start="17:9" pos:end="17:25"><expr pos:start="17:9" pos:end="17:24"><call pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:21">tcg_temp_free</name><argument_list pos:start="17:22" pos:end="17:24">(<argument pos:start="17:23" pos:end="17:23"><expr pos:start="17:23" pos:end="17:23"><name pos:start="17:23" pos:end="17:23">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
