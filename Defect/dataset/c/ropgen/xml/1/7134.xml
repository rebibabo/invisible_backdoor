<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7134.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">decode_residuals</name><parameter_list pos:start="1:28" pos:end="1:72">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:39">FLACContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:55">channel</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:71"><decl pos:start="1:58" pos:end="1:71"><type pos:start="1:58" pos:end="1:71"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:71">pred_order</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:13">{<block_content pos:start="5:5" pos:end="77:13">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">tmp</name></decl>, <decl pos:start="5:17" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:25">partition</name></decl>, <decl pos:start="5:28" pos:end="5:38"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:28" pos:end="5:38">method_type</name></decl>, <decl pos:start="5:41" pos:end="5:50"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:41" pos:end="5:50">rice_order</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">sample</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>, <decl pos:start="7:21" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:27">samples</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:15">method_type</name> <operator pos:start="11:17" pos:end="11:17">=</operator> <call pos:start="11:19" pos:end="11:37"><name pos:start="11:19" pos:end="11:26">get_bits</name><argument_list pos:start="11:27" pos:end="11:37">(<argument pos:start="11:28" pos:end="11:33"><expr pos:start="11:28" pos:end="11:33"><operator pos:start="11:28" pos:end="11:28">&amp;</operator><name pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:29">s</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:33">gb</name></name></expr></argument>, <argument pos:start="11:36" pos:end="11:36"><expr pos:start="11:36" pos:end="11:36"><literal type="number" pos:start="11:36" pos:end="11:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="77:13"><if pos:start="13:5" pos:end="77:13">if <condition pos:start="13:8" pos:end="13:25">(<expr pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:19">method_type</name> <operator pos:start="13:21" pos:end="13:22">!=</operator> <literal type="number" pos:start="13:24" pos:end="13:24">0</literal></expr>)</condition><block pos:start="13:26" pos:end="77:13">{<block_content pos:start="15:9" pos:end="77:13">

        <expr_stmt pos:start="15:9" pos:end="15:91"><expr pos:start="15:9" pos:end="15:90"><call pos:start="15:9" pos:end="15:90"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:90">(<argument pos:start="15:16" pos:end="15:23"><expr pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:16">s</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:23">avctx</name></name></expr></argument>, <argument pos:start="15:26" pos:end="15:37"><expr pos:start="15:26" pos:end="15:37"><name pos:start="15:26" pos:end="15:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="15:40" pos:end="15:76"><expr pos:start="15:40" pos:end="15:76"><literal type="string" pos:start="15:40" pos:end="15:76">"illegal residual coding method %d\n"</literal></expr></argument>, <argument pos:start="15:79" pos:end="15:89"><expr pos:start="15:79" pos:end="15:89"><name pos:start="15:79" pos:end="15:89">method_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:14">rice_order</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:36"><name pos:start="21:18" pos:end="21:25">get_bits</name><argument_list pos:start="21:26" pos:end="21:36">(<argument pos:start="21:27" pos:end="21:32"><expr pos:start="21:27" pos:end="21:32"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:32"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:32">gb</name></name></expr></argument>, <argument pos:start="21:35" pos:end="21:35"><expr pos:start="21:35" pos:end="21:35"><literal type="number" pos:start="21:35" pos:end="21:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:40"><expr pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:11">samples</name><operator pos:start="25:12" pos:end="25:12">=</operator> <name pos:start="25:14" pos:end="25:25"><name pos:start="25:14" pos:end="25:14">s</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:25">blocksize</name></name> <operator pos:start="25:27" pos:end="25:28">&gt;&gt;</operator> <name pos:start="25:30" pos:end="25:39">rice_order</name></expr>;</expr_stmt>







    <expr_stmt pos:start="33:5" pos:end="35:18"><expr pos:start="33:5" pos:end="35:17"><name pos:start="33:5" pos:end="33:10">sample</name><operator pos:start="33:11" pos:end="33:11">=</operator>

    <name pos:start="35:5" pos:end="35:5">i</name><operator pos:start="35:6" pos:end="35:6">=</operator> <name pos:start="35:8" pos:end="35:17">pred_order</name></expr>;</expr_stmt>

    <for pos:start="37:5" pos:end="77:13">for <control pos:start="37:9" pos:end="37:67">(<init pos:start="37:10" pos:end="37:23"><expr pos:start="37:10" pos:end="37:22"><name pos:start="37:10" pos:end="37:18">partition</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>;</init> <condition pos:start="37:25" pos:end="37:54"><expr pos:start="37:25" pos:end="37:53"><name pos:start="37:25" pos:end="37:33">partition</name> <operator pos:start="37:35" pos:end="37:35">&lt;</operator> <operator pos:start="37:37" pos:end="37:37">(</operator><literal type="number" pos:start="37:38" pos:end="37:38">1</literal> <operator pos:start="37:40" pos:end="37:41">&lt;&lt;</operator> <name pos:start="37:43" pos:end="37:52">rice_order</name><operator pos:start="37:53" pos:end="37:53">)</operator></expr>;</condition> <incr pos:start="37:56" pos:end="37:66"><expr pos:start="37:56" pos:end="37:66"><name pos:start="37:56" pos:end="37:64">partition</name><operator pos:start="37:65" pos:end="37:66">++</operator></expr></incr>)</control>

    <block pos:start="39:5" pos:end="77:13">{<block_content pos:start="41:9" pos:end="77:13">

        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:11">tmp</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:33"><name pos:start="41:15" pos:end="41:22">get_bits</name><argument_list pos:start="41:23" pos:end="41:33">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><operator pos:start="41:24" pos:end="41:24">&amp;</operator><name pos:start="41:25" pos:end="41:29"><name pos:start="41:25" pos:end="41:25">s</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:29">gb</name></name></expr></argument>, <argument pos:start="41:32" pos:end="41:32"><expr pos:start="41:32" pos:end="41:32"><literal type="number" pos:start="41:32" pos:end="41:32">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="77:13"><if pos:start="43:9" pos:end="77:13">if <condition pos:start="43:12" pos:end="43:22">(<expr pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:15">tmp</name> <operator pos:start="43:17" pos:end="43:18">==</operator> <literal type="number" pos:start="43:20" pos:end="43:21">15</literal></expr>)</condition>

        <block pos:start="45:9" pos:end="77:13">{<block_content pos:start="47:13" pos:end="77:13">

            <expr_stmt pos:start="47:13" pos:end="47:68"><expr pos:start="47:13" pos:end="47:67"><call pos:start="47:13" pos:end="47:67"><name pos:start="47:13" pos:end="47:18">av_log</name><argument_list pos:start="47:19" pos:end="47:67">(<argument pos:start="47:20" pos:end="47:27"><expr pos:start="47:20" pos:end="47:27"><name pos:start="47:20" pos:end="47:27"><name pos:start="47:20" pos:end="47:20">s</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:27">avctx</name></name></expr></argument>, <argument pos:start="47:30" pos:end="47:41"><expr pos:start="47:30" pos:end="47:41"><name pos:start="47:30" pos:end="47:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="47:44" pos:end="47:66"><expr pos:start="47:44" pos:end="47:66"><literal type="string" pos:start="47:44" pos:end="47:66">"fixed len partition\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:38"><expr pos:start="49:13" pos:end="49:37"><name pos:start="49:13" pos:end="49:15">tmp</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:37"><name pos:start="49:19" pos:end="49:26">get_bits</name><argument_list pos:start="49:27" pos:end="49:37">(<argument pos:start="49:28" pos:end="49:33"><expr pos:start="49:28" pos:end="49:33"><operator pos:start="49:28" pos:end="49:28">&amp;</operator><name pos:start="49:29" pos:end="49:33"><name pos:start="49:29" pos:end="49:29">s</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:33">gb</name></name></expr></argument>, <argument pos:start="49:36" pos:end="49:36"><expr pos:start="49:36" pos:end="49:36"><literal type="number" pos:start="49:36" pos:end="49:36">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="51:13" pos:end="53:69">for <control pos:start="51:17" pos:end="51:46">(<init pos:start="51:18" pos:end="51:18">;</init> <condition pos:start="51:20" pos:end="51:31"><expr pos:start="51:20" pos:end="51:30"><name pos:start="51:20" pos:end="51:20">i</name> <operator pos:start="51:22" pos:end="51:22">&lt;</operator> <name pos:start="51:24" pos:end="51:30">samples</name></expr>;</condition> <incr pos:start="51:33" pos:end="51:45"><expr pos:start="51:33" pos:end="51:35"><name pos:start="51:33" pos:end="51:33">i</name><operator pos:start="51:34" pos:end="51:35">++</operator></expr><operator pos:start="51:36" pos:end="51:36">,</operator> <expr pos:start="51:38" pos:end="51:45"><name pos:start="51:38" pos:end="51:43">sample</name><operator pos:start="51:44" pos:end="51:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:17" pos:end="53:69"><block_content pos:start="53:17" pos:end="53:69">

                <expr_stmt pos:start="53:17" pos:end="53:69"><expr pos:start="53:17" pos:end="53:68"><name pos:start="53:17" pos:end="53:43"><name pos:start="53:17" pos:end="53:17">s</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:26">decoded</name><index pos:start="53:27" pos:end="53:35">[<expr pos:start="53:28" pos:end="53:34"><name pos:start="53:28" pos:end="53:34">channel</name></expr>]</index><index pos:start="53:36" pos:end="53:43">[<expr pos:start="53:37" pos:end="53:42"><name pos:start="53:37" pos:end="53:42">sample</name></expr>]</index></name> <operator pos:start="53:45" pos:end="53:45">=</operator> <call pos:start="53:47" pos:end="53:68"><name pos:start="53:47" pos:end="53:55">get_sbits</name><argument_list pos:start="53:56" pos:end="53:68">(<argument pos:start="53:57" pos:end="53:62"><expr pos:start="53:57" pos:end="53:62"><operator pos:start="53:57" pos:end="53:57">&amp;</operator><name pos:start="53:58" pos:end="53:62"><name pos:start="53:58" pos:end="53:58">s</name><operator pos:start="53:59" pos:end="53:60">-&gt;</operator><name pos:start="53:61" pos:end="53:62">gb</name></name></expr></argument>, <argument pos:start="53:65" pos:end="53:67"><expr pos:start="53:65" pos:end="53:67"><name pos:start="53:65" pos:end="53:67">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>


        <if_stmt pos:start="56:9" pos:end="77:13"><else pos:start="56:9" pos:end="77:13">else

        <block pos:start="58:9" pos:end="77:13">{<block_content pos:start="62:13" pos:end="77:13">

<comment type="line" pos:start="60:1" pos:end="60:81">//            av_log(s-&gt;avctx, AV_LOG_DEBUG, "rice coded partition k=%d\n", tmp);</comment>

            <for pos:start="62:13" pos:end="77:13">for <control pos:start="62:17" pos:end="62:46">(<init pos:start="62:18" pos:end="62:18">;</init> <condition pos:start="62:20" pos:end="62:31"><expr pos:start="62:20" pos:end="62:30"><name pos:start="62:20" pos:end="62:20">i</name> <operator pos:start="62:22" pos:end="62:22">&lt;</operator> <name pos:start="62:24" pos:end="62:30">samples</name></expr>;</condition> <incr pos:start="62:33" pos:end="62:45"><expr pos:start="62:33" pos:end="62:35"><name pos:start="62:33" pos:end="62:33">i</name><operator pos:start="62:34" pos:end="62:35">++</operator></expr><operator pos:start="62:36" pos:end="62:36">,</operator> <expr pos:start="62:38" pos:end="62:45"><name pos:start="62:38" pos:end="62:43">sample</name><operator pos:start="62:44" pos:end="62:45">++</operator></expr></incr>)</control><block pos:start="62:47" pos:end="77:13">{<block_content pos:start="64:17" pos:end="77:13">

                <expr_stmt pos:start="64:17" pos:end="64:90"><expr pos:start="64:17" pos:end="64:89"><name pos:start="64:17" pos:end="64:43"><name pos:start="64:17" pos:end="64:17">s</name><operator pos:start="64:18" pos:end="64:19">-&gt;</operator><name pos:start="64:20" pos:end="64:26">decoded</name><index pos:start="64:27" pos:end="64:35">[<expr pos:start="64:28" pos:end="64:34"><name pos:start="64:28" pos:end="64:34">channel</name></expr>]</index><index pos:start="64:36" pos:end="64:43">[<expr pos:start="64:37" pos:end="64:42"><name pos:start="64:37" pos:end="64:42">sample</name></expr>]</index></name> <operator pos:start="64:45" pos:end="64:45">=</operator> <call pos:start="64:47" pos:end="64:89"><name pos:start="64:47" pos:end="64:64">get_sr_golomb_flac</name><argument_list pos:start="64:65" pos:end="64:89">(<argument pos:start="64:66" pos:end="64:71"><expr pos:start="64:66" pos:end="64:71"><operator pos:start="64:66" pos:end="64:66">&amp;</operator><name pos:start="64:67" pos:end="64:71"><name pos:start="64:67" pos:end="64:67">s</name><operator pos:start="64:68" pos:end="64:69">-&gt;</operator><name pos:start="64:70" pos:end="64:71">gb</name></name></expr></argument>, <argument pos:start="64:74" pos:end="64:76"><expr pos:start="64:74" pos:end="64:76"><name pos:start="64:74" pos:end="64:76">tmp</name></expr></argument>, <argument pos:start="64:79" pos:end="64:85"><expr pos:start="64:79" pos:end="64:85"><name pos:start="64:79" pos:end="64:85">INT_MAX</name></expr></argument>, <argument pos:start="64:88" pos:end="64:88"><expr pos:start="64:88" pos:end="64:88"><literal type="number" pos:start="64:88" pos:end="64:88">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="68:9" pos:end="68:13"><expr pos:start="68:9" pos:end="68:12"><name pos:start="68:9" pos:end="68:9">i</name><operator pos:start="68:10" pos:end="68:10">=</operator> <literal type="number" pos:start="68:12" pos:end="68:12">0</literal></expr>;</expr_stmt>




<comment type="line" pos:start="73:1" pos:end="73:95">//    av_log(s-&gt;avctx, AV_LOG_DEBUG, "partitions: %d, samples: %d\n", 1 &lt;&lt; rice_order, sample);</comment>



    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return></block_content></block></for></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function>
</unit>
