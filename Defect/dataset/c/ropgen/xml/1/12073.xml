<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12073.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">encode_superframe</name><parameter_list pos:start="1:29" pos:end="3:71">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:67">avpkt</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:49"><decl pos:start="3:30" pos:end="3:49"><type pos:start="3:30" pos:end="3:49"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">AVFrame</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:49">frame</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:70"><decl pos:start="3:52" pos:end="3:70"><type pos:start="3:52" pos:end="3:70"><name pos:start="3:52" pos:end="3:54">int</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:70">got_packet_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:13">{<block_content pos:start="7:5" pos:end="103:13">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">WMACodecContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name> <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:21">total_gain</name></decl>, <decl pos:start="9:24" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:24" pos:end="9:26">ret</name></decl>, <decl pos:start="9:29" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:33">error</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:41"><expr pos:start="13:5" pos:end="13:40"><name pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:21">block_len_bits</name></name><operator pos:start="13:22" pos:end="13:22">=</operator> <name pos:start="13:24" pos:end="13:40"><name pos:start="13:24" pos:end="13:24">s</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:40">frame_len_bits</name></name></expr>;</expr_stmt> <comment type="line" pos:start="13:43" pos:end="13:78">//required by non variable block len</comment>

    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:16">block_len</name></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <literal type="number" pos:start="15:20" pos:end="15:20">1</literal> <operator pos:start="15:22" pos:end="15:23">&lt;&lt;</operator> <name pos:start="15:25" pos:end="15:41"><name pos:start="15:25" pos:end="15:25">s</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:41">block_len_bits</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:40"><expr pos:start="19:5" pos:end="19:39"><call pos:start="19:5" pos:end="19:39"><name pos:start="19:5" pos:end="19:25">apply_window_and_mdct</name><argument_list pos:start="19:26" pos:end="19:39">(<argument pos:start="19:27" pos:end="19:31"><expr pos:start="19:27" pos:end="19:31"><name pos:start="19:27" pos:end="19:31">avctx</name></expr></argument>, <argument pos:start="19:34" pos:end="19:38"><expr pos:start="19:34" pos:end="19:38"><name pos:start="19:34" pos:end="19:38">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="103:13"><if pos:start="23:5" pos:end="103:13">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:20">ms_stereo</name></name></expr>)</condition> <block pos:start="23:23" pos:end="103:13">{<block_content pos:start="25:9" pos:end="103:13">

        <decl_stmt pos:start="25:9" pos:end="25:19"><decl pos:start="25:9" pos:end="25:15"><type pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:13">float</name></type> <name pos:start="25:15" pos:end="25:15">a</name></decl>, <decl pos:start="25:18" pos:end="25:18"><type ref="prev" pos:start="25:9" pos:end="25:13"/><name pos:start="25:18" pos:end="25:18">b</name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:14"><decl pos:start="27:9" pos:end="27:13"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:13">i</name></decl>;</decl_stmt>



        <for pos:start="31:9" pos:end="103:13">for<control pos:start="31:12" pos:end="31:41">(<init pos:start="31:13" pos:end="31:18"><expr pos:start="31:13" pos:end="31:17"><name pos:start="31:13" pos:end="31:13">i</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <literal type="number" pos:start="31:17" pos:end="31:17">0</literal></expr>;</init> <condition pos:start="31:20" pos:end="31:36"><expr pos:start="31:20" pos:end="31:35"><name pos:start="31:20" pos:end="31:20">i</name> <operator pos:start="31:22" pos:end="31:22">&lt;</operator> <name pos:start="31:24" pos:end="31:35"><name pos:start="31:24" pos:end="31:24">s</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:35">block_len</name></name></expr>;</condition> <incr pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><name pos:start="31:38" pos:end="31:38">i</name><operator pos:start="31:39" pos:end="31:40">++</operator></expr></incr>)</control> <block pos:start="31:43" pos:end="103:13">{<block_content pos:start="33:13" pos:end="103:13">

            <expr_stmt pos:start="33:13" pos:end="33:35"><expr pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:13">a</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:24">coefs</name><index pos:start="33:25" pos:end="33:27">[<expr pos:start="33:26" pos:end="33:26"><literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr>]</index><index pos:start="33:28" pos:end="33:30">[<expr pos:start="33:29" pos:end="33:29"><name pos:start="33:29" pos:end="33:29">i</name></expr>]</index></name><operator pos:start="33:31" pos:end="33:31">*</operator><literal type="number" pos:start="33:32" pos:end="33:34">0.5</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:35"><expr pos:start="35:13" pos:end="35:34"><name pos:start="35:13" pos:end="35:13">b</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:30"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:24">coefs</name><index pos:start="35:25" pos:end="35:27">[<expr pos:start="35:26" pos:end="35:26"><literal type="number" pos:start="35:26" pos:end="35:26">1</literal></expr>]</index><index pos:start="35:28" pos:end="35:30">[<expr pos:start="35:29" pos:end="35:29"><name pos:start="35:29" pos:end="35:29">i</name></expr>]</index></name><operator pos:start="35:31" pos:end="35:31">*</operator><literal type="number" pos:start="35:32" pos:end="35:34">0.5</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:35"><expr pos:start="37:13" pos:end="37:34"><name pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:20">coefs</name><index pos:start="37:21" pos:end="37:23">[<expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>]</index><index pos:start="37:24" pos:end="37:26">[<expr pos:start="37:25" pos:end="37:25"><name pos:start="37:25" pos:end="37:25">i</name></expr>]</index></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:30">a</name> <operator pos:start="37:32" pos:end="37:32">+</operator> <name pos:start="37:34" pos:end="37:34">b</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:35"><expr pos:start="39:13" pos:end="39:34"><name pos:start="39:13" pos:end="39:26"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:20">coefs</name><index pos:start="39:21" pos:end="39:23">[<expr pos:start="39:22" pos:end="39:22"><literal type="number" pos:start="39:22" pos:end="39:22">1</literal></expr>]</index><index pos:start="39:24" pos:end="39:26">[<expr pos:start="39:25" pos:end="39:25"><name pos:start="39:25" pos:end="39:25">i</name></expr>]</index></name> <operator pos:start="39:28" pos:end="39:28">=</operator> <name pos:start="39:30" pos:end="39:30">a</name> <operator pos:start="39:32" pos:end="39:32">-</operator> <name pos:start="39:34" pos:end="39:34">b</name></expr>;</expr_stmt>





    <if_stmt pos:start="45:5" pos:end="47:19"><if pos:start="45:5" pos:end="47:19">if <condition pos:start="45:8" pos:end="45:82">(<expr pos:start="45:9" pos:end="45:81"><operator pos:start="45:9" pos:end="45:9">(</operator><name pos:start="45:10" pos:end="45:12">ret</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <call pos:start="45:16" pos:end="45:76"><name pos:start="45:16" pos:end="45:31">ff_alloc_packet2</name><argument_list pos:start="45:32" pos:end="45:76">(<argument pos:start="45:33" pos:end="45:37"><expr pos:start="45:33" pos:end="45:37"><name pos:start="45:33" pos:end="45:37">avctx</name></expr></argument>, <argument pos:start="45:40" pos:end="45:44"><expr pos:start="45:40" pos:end="45:44"><name pos:start="45:40" pos:end="45:44">avpkt</name></expr></argument>, <argument pos:start="45:47" pos:end="45:75"><expr pos:start="45:47" pos:end="45:75"><literal type="number" pos:start="45:47" pos:end="45:47">2</literal> <operator pos:start="45:49" pos:end="45:49">*</operator> <name pos:start="45:51" pos:end="45:75">MAX_CODED_SUPERFRAME_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="45:77" pos:end="45:77">)</operator> <operator pos:start="45:79" pos:end="45:79">&lt;</operator> <literal type="number" pos:start="45:81" pos:end="45:81">0</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:19"><block_content pos:start="47:9" pos:end="47:19">

        <return pos:start="47:9" pos:end="47:19">return <expr pos:start="47:16" pos:end="47:18"><name pos:start="47:16" pos:end="47:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:14">total_gain</name><operator pos:start="51:15" pos:end="51:15">=</operator> <literal type="number" pos:start="51:17" pos:end="51:19">128</literal></expr>;</expr_stmt>

    <for pos:start="53:5" pos:end="103:13">for<control pos:start="53:8" pos:end="53:23">(<init pos:start="53:9" pos:end="53:13"><expr pos:start="53:9" pos:end="53:12"><name pos:start="53:9" pos:end="53:9">i</name><operator pos:start="53:10" pos:end="53:10">=</operator><literal type="number" pos:start="53:11" pos:end="53:12">64</literal></expr>;</init> <condition pos:start="53:15" pos:end="53:16"><expr pos:start="53:15" pos:end="53:15"><name pos:start="53:15" pos:end="53:15">i</name></expr>;</condition> <incr pos:start="53:18" pos:end="53:22"><expr pos:start="53:18" pos:end="53:22"><name pos:start="53:18" pos:end="53:18">i</name><operator pos:start="53:19" pos:end="53:21">&gt;&gt;=</operator><literal type="number" pos:start="53:22" pos:end="53:22">1</literal></expr></incr>)</control><block pos:start="53:24" pos:end="103:13">{<block_content pos:start="55:9" pos:end="103:13">

        <expr_stmt pos:start="55:9" pos:end="57:49"><expr pos:start="55:9" pos:end="57:48"><name pos:start="55:9" pos:end="55:13">error</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <call pos:start="55:17" pos:end="57:48"><name pos:start="55:17" pos:end="55:28">encode_frame</name><argument_list pos:start="55:29" pos:end="57:48">(<argument pos:start="55:30" pos:end="55:30"><expr pos:start="55:30" pos:end="55:30"><name pos:start="55:30" pos:end="55:30">s</name></expr></argument>, <argument pos:start="55:33" pos:end="55:40"><expr pos:start="55:33" pos:end="55:40"><name pos:start="55:33" pos:end="55:40"><name pos:start="55:33" pos:end="55:33">s</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:40">coefs</name></name></expr></argument>, <argument pos:start="55:43" pos:end="55:53"><expr pos:start="55:43" pos:end="55:53"><name pos:start="55:43" pos:end="55:53"><name pos:start="55:43" pos:end="55:47">avpkt</name><operator pos:start="55:48" pos:end="55:49">-&gt;</operator><name pos:start="55:50" pos:end="55:53">data</name></name></expr></argument>, <argument pos:start="55:56" pos:end="55:66"><expr pos:start="55:56" pos:end="55:66"><name pos:start="55:56" pos:end="55:66"><name pos:start="55:56" pos:end="55:60">avpkt</name><operator pos:start="55:61" pos:end="55:62">-&gt;</operator><name pos:start="55:63" pos:end="55:66">size</name></name></expr></argument>,

                                 <argument pos:start="57:34" pos:end="57:47"><expr pos:start="57:34" pos:end="57:47"><name pos:start="57:34" pos:end="57:43">total_gain</name> <operator pos:start="57:45" pos:end="57:45">-</operator> <name pos:start="57:47" pos:end="57:47">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:27"><if pos:start="59:9" pos:end="61:27">if<condition pos:start="59:11" pos:end="59:20">(<expr pos:start="59:12" pos:end="59:19"><name pos:start="59:12" pos:end="59:16">error</name><operator pos:start="59:17" pos:end="59:18">&lt;=</operator><literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:27"><block_content pos:start="61:13" pos:end="61:27">

            <expr_stmt pos:start="61:13" pos:end="61:27"><expr pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:22">total_gain</name><operator pos:start="61:23" pos:end="61:24">-=</operator> <name pos:start="61:26" pos:end="61:26">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>




    <while pos:start="66:5" pos:end="68:82">while<condition pos:start="66:10" pos:end="66:41">(<expr pos:start="66:11" pos:end="66:40"><name pos:start="66:11" pos:end="66:20">total_gain</name> <operator pos:start="66:22" pos:end="66:23">&lt;=</operator> <literal type="number" pos:start="66:25" pos:end="66:27">128</literal> <operator pos:start="66:29" pos:end="66:30">&amp;&amp;</operator> <name pos:start="66:32" pos:end="66:36">error</name> <operator pos:start="66:38" pos:end="66:38">&gt;</operator> <literal type="number" pos:start="66:40" pos:end="66:40">0</literal></expr>)</condition><block type="pseudo" pos:start="68:9" pos:end="68:82"><block_content pos:start="68:9" pos:end="68:82">

        <expr_stmt pos:start="68:9" pos:end="68:82"><expr pos:start="68:9" pos:end="68:81"><name pos:start="68:9" pos:end="68:13">error</name> <operator pos:start="68:15" pos:end="68:15">=</operator> <call pos:start="68:17" pos:end="68:81"><name pos:start="68:17" pos:end="68:28">encode_frame</name><argument_list pos:start="68:29" pos:end="68:81">(<argument pos:start="68:30" pos:end="68:30"><expr pos:start="68:30" pos:end="68:30"><name pos:start="68:30" pos:end="68:30">s</name></expr></argument>, <argument pos:start="68:33" pos:end="68:40"><expr pos:start="68:33" pos:end="68:40"><name pos:start="68:33" pos:end="68:40"><name pos:start="68:33" pos:end="68:33">s</name><operator pos:start="68:34" pos:end="68:35">-&gt;</operator><name pos:start="68:36" pos:end="68:40">coefs</name></name></expr></argument>, <argument pos:start="68:43" pos:end="68:53"><expr pos:start="68:43" pos:end="68:53"><name pos:start="68:43" pos:end="68:53"><name pos:start="68:43" pos:end="68:47">avpkt</name><operator pos:start="68:48" pos:end="68:49">-&gt;</operator><name pos:start="68:50" pos:end="68:53">data</name></name></expr></argument>, <argument pos:start="68:56" pos:end="68:66"><expr pos:start="68:56" pos:end="68:66"><name pos:start="68:56" pos:end="68:66"><name pos:start="68:56" pos:end="68:60">avpkt</name><operator pos:start="68:61" pos:end="68:62">-&gt;</operator><name pos:start="68:63" pos:end="68:66">size</name></name></expr></argument>, <argument pos:start="68:69" pos:end="68:80"><expr pos:start="68:69" pos:end="68:80"><name pos:start="68:69" pos:end="68:78">total_gain</name><operator pos:start="68:79" pos:end="68:80">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>






    <expr_stmt pos:start="75:5" pos:end="75:50"><expr pos:start="75:5" pos:end="75:49"><call pos:start="75:5" pos:end="75:49"><name pos:start="75:5" pos:end="75:14">av_assert0</name><argument_list pos:start="75:15" pos:end="75:49">(<argument pos:start="75:16" pos:end="75:48"><expr pos:start="75:16" pos:end="75:48"><operator pos:start="75:16" pos:end="75:16">(</operator><call pos:start="75:17" pos:end="75:38"><name pos:start="75:17" pos:end="75:30">put_bits_count</name><argument_list pos:start="75:31" pos:end="75:38">(<argument pos:start="75:32" pos:end="75:37"><expr pos:start="75:32" pos:end="75:37"><operator pos:start="75:32" pos:end="75:32">&amp;</operator><name pos:start="75:33" pos:end="75:37"><name pos:start="75:33" pos:end="75:33">s</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:37">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="75:40" pos:end="75:40">&amp;</operator> <literal type="number" pos:start="75:42" pos:end="75:42">7</literal><operator pos:start="75:43" pos:end="75:43">)</operator> <operator pos:start="75:45" pos:end="75:46">==</operator> <literal type="number" pos:start="75:48" pos:end="75:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:57"><expr pos:start="77:5" pos:end="77:56"><name pos:start="77:5" pos:end="77:5">i</name><operator pos:start="77:6" pos:end="77:6">=</operator> <name pos:start="77:8" pos:end="77:25"><name pos:start="77:8" pos:end="77:12">avctx</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:25">block_align</name></name> <operator pos:start="77:27" pos:end="77:27">-</operator> <operator pos:start="77:29" pos:end="77:29">(</operator><call pos:start="77:30" pos:end="77:51"><name pos:start="77:30" pos:end="77:43">put_bits_count</name><argument_list pos:start="77:44" pos:end="77:51">(<argument pos:start="77:45" pos:end="77:50"><expr pos:start="77:45" pos:end="77:50"><operator pos:start="77:45" pos:end="77:45">&amp;</operator><name pos:start="77:46" pos:end="77:50"><name pos:start="77:46" pos:end="77:46">s</name><operator pos:start="77:47" pos:end="77:48">-&gt;</operator><name pos:start="77:49" pos:end="77:50">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="77:52" pos:end="77:52">+</operator><literal type="number" pos:start="77:53" pos:end="77:53">7</literal><operator pos:start="77:54" pos:end="77:54">)</operator><operator pos:start="77:55" pos:end="77:55">/</operator><literal type="number" pos:start="77:56" pos:end="77:56">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:21"><expr pos:start="79:5" pos:end="79:20"><call pos:start="79:5" pos:end="79:20"><name pos:start="79:5" pos:end="79:14">av_assert0</name><argument_list pos:start="79:15" pos:end="79:20">(<argument pos:start="79:16" pos:end="79:19"><expr pos:start="79:16" pos:end="79:19"><name pos:start="79:16" pos:end="79:16">i</name><operator pos:start="79:17" pos:end="79:18">&gt;=</operator><literal type="number" pos:start="79:19" pos:end="79:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="81:5" pos:end="83:33">while<condition pos:start="81:10" pos:end="81:14">(<expr pos:start="81:11" pos:end="81:13"><name pos:start="81:11" pos:end="81:11">i</name><operator pos:start="81:12" pos:end="81:13">--</operator></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:33"><block_content pos:start="83:9" pos:end="83:33">

        <expr_stmt pos:start="83:9" pos:end="83:33"><expr pos:start="83:9" pos:end="83:32"><call pos:start="83:9" pos:end="83:32"><name pos:start="83:9" pos:end="83:16">put_bits</name><argument_list pos:start="83:17" pos:end="83:32">(<argument pos:start="83:18" pos:end="83:23"><expr pos:start="83:18" pos:end="83:23"><operator pos:start="83:18" pos:end="83:18">&amp;</operator><name pos:start="83:19" pos:end="83:23"><name pos:start="83:19" pos:end="83:19">s</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:23">pb</name></name></expr></argument>, <argument pos:start="83:26" pos:end="83:26"><expr pos:start="83:26" pos:end="83:26"><literal type="number" pos:start="83:26" pos:end="83:26">8</literal></expr></argument>, <argument pos:start="83:29" pos:end="83:31"><expr pos:start="83:29" pos:end="83:31"><literal type="char" pos:start="83:29" pos:end="83:31">'N'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <expr_stmt pos:start="87:5" pos:end="87:27"><expr pos:start="87:5" pos:end="87:26"><call pos:start="87:5" pos:end="87:26"><name pos:start="87:5" pos:end="87:18">flush_put_bits</name><argument_list pos:start="87:19" pos:end="87:26">(<argument pos:start="87:20" pos:end="87:25"><expr pos:start="87:20" pos:end="87:25"><operator pos:start="87:20" pos:end="87:20">&amp;</operator><name pos:start="87:21" pos:end="87:25"><name pos:start="87:21" pos:end="87:21">s</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:71"><expr pos:start="89:5" pos:end="89:70"><call pos:start="89:5" pos:end="89:70"><name pos:start="89:5" pos:end="89:14">av_assert0</name><argument_list pos:start="89:15" pos:end="89:70">(<argument pos:start="89:16" pos:end="89:69"><expr pos:start="89:16" pos:end="89:69"><call pos:start="89:16" pos:end="89:35"><name pos:start="89:16" pos:end="89:27">put_bits_ptr</name><argument_list pos:start="89:28" pos:end="89:35">(<argument pos:start="89:29" pos:end="89:34"><expr pos:start="89:29" pos:end="89:34"><operator pos:start="89:29" pos:end="89:29">&amp;</operator><name pos:start="89:30" pos:end="89:34"><name pos:start="89:30" pos:end="89:30">s</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:34">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="89:37" pos:end="89:37">-</operator> <name pos:start="89:39" pos:end="89:47"><name pos:start="89:39" pos:end="89:39">s</name><operator pos:start="89:40" pos:end="89:41">-&gt;</operator><name pos:start="89:42" pos:end="89:43">pb</name><operator pos:start="89:44" pos:end="89:44">.</operator><name pos:start="89:45" pos:end="89:47">buf</name></name> <operator pos:start="89:49" pos:end="89:50">==</operator> <name pos:start="89:52" pos:end="89:69"><name pos:start="89:52" pos:end="89:56">avctx</name><operator pos:start="89:57" pos:end="89:58">-&gt;</operator><name pos:start="89:59" pos:end="89:69">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="93:5" pos:end="95:79"><if pos:start="93:5" pos:end="95:79">if <condition pos:start="93:8" pos:end="93:37">(<expr pos:start="93:9" pos:end="93:36"><name pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:13">frame</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:18">pts</name></name> <operator pos:start="93:20" pos:end="93:21">!=</operator> <name pos:start="93:23" pos:end="93:36">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:79"><block_content pos:start="95:9" pos:end="95:79">

        <expr_stmt pos:start="95:9" pos:end="95:79"><expr pos:start="95:9" pos:end="95:78"><name pos:start="95:9" pos:end="95:18"><name pos:start="95:9" pos:end="95:13">avpkt</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:18">pts</name></name> <operator pos:start="95:20" pos:end="95:20">=</operator> <name pos:start="95:22" pos:end="95:31"><name pos:start="95:22" pos:end="95:26">frame</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:31">pts</name></name> <operator pos:start="95:33" pos:end="95:33">-</operator> <call pos:start="95:35" pos:end="95:78"><name pos:start="95:35" pos:end="95:57">ff_samples_to_time_base</name><argument_list pos:start="95:58" pos:end="95:78">(<argument pos:start="95:59" pos:end="95:63"><expr pos:start="95:59" pos:end="95:63"><name pos:start="95:59" pos:end="95:63">avctx</name></expr></argument>, <argument pos:start="95:66" pos:end="95:77"><expr pos:start="95:66" pos:end="95:77"><name pos:start="95:66" pos:end="95:77"><name pos:start="95:66" pos:end="95:70">avctx</name><operator pos:start="95:71" pos:end="95:72">-&gt;</operator><name pos:start="95:73" pos:end="95:77">delay</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:37"><expr pos:start="99:5" pos:end="99:36"><name pos:start="99:5" pos:end="99:15"><name pos:start="99:5" pos:end="99:9">avpkt</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:15">size</name></name> <operator pos:start="99:17" pos:end="99:17">=</operator> <name pos:start="99:19" pos:end="99:36"><name pos:start="99:19" pos:end="99:23">avctx</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:36">block_align</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:24"><expr pos:start="101:5" pos:end="101:23"><operator pos:start="101:5" pos:end="101:5">*</operator><name pos:start="101:6" pos:end="101:19">got_packet_ptr</name> <operator pos:start="101:21" pos:end="101:21">=</operator> <literal type="number" pos:start="101:23" pos:end="101:23">1</literal></expr>;</expr_stmt>

    <return pos:start="103:5" pos:end="103:13">return <expr pos:start="103:12" pos:end="103:12"><literal type="number" pos:start="103:12" pos:end="103:12">0</literal></expr>;</return></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function>
</unit>
