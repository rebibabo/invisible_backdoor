<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25305.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">av_log_default_callback</name><parameter_list pos:start="1:29" pos:end="1:79">(<parameter pos:start="1:30" pos:end="1:38"><decl pos:start="1:30" pos:end="1:38"><type pos:start="1:30" pos:end="1:38"><name pos:start="1:30" pos:end="1:33">void</name><modifier pos:start="1:34" pos:end="1:34">*</modifier></type> <name pos:start="1:36" pos:end="1:38">ptr</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:49"><decl pos:start="1:41" pos:end="1:49"><type pos:start="1:41" pos:end="1:49"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:49">level</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:61">char</name><modifier pos:start="1:62" pos:end="1:62">*</modifier></type> <name pos:start="1:64" pos:end="1:66">fmt</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:78"><decl pos:start="1:69" pos:end="1:78"><type pos:start="1:69" pos:end="1:78"><name pos:start="1:69" pos:end="1:75">va_list</name></type> <name pos:start="1:77" pos:end="1:78">vl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:23">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:27">print_prefix</name><init pos:start="5:28" pos:end="5:29">=<expr pos:start="5:29" pos:end="5:29"><literal type="number" pos:start="5:29" pos:end="5:29">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:14"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:20">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:15"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <name pos:start="9:12" pos:end="9:15">char</name></type> <name pos:start="9:17" pos:end="9:26"><name pos:start="9:17" pos:end="9:20">line</name><index pos:start="9:21" pos:end="9:26">[<expr pos:start="9:22" pos:end="9:25"><literal type="number" pos:start="9:22" pos:end="9:25">1024</literal></expr>]</index></name></decl>, <decl pos:start="9:29" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:15"/><name pos:start="9:29" pos:end="9:38"><name pos:start="9:29" pos:end="9:32">prev</name><index pos:start="9:33" pos:end="9:38">[<expr pos:start="9:34" pos:end="9:37"><literal type="number" pos:start="9:34" pos:end="9:37">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:14"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <name pos:start="11:12" pos:end="11:14">int</name></type> <name pos:start="11:16" pos:end="11:22">is_atty</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:11">AVClass</name><modifier pos:start="13:12" pos:end="13:12">*</modifier></type> <name pos:start="13:14" pos:end="13:16">avc</name><init pos:start="13:17" pos:end="13:46">= <expr pos:start="13:19" pos:end="13:46"><ternary pos:start="13:19" pos:end="13:46"><condition pos:start="13:19" pos:end="13:23"><expr pos:start="13:19" pos:end="13:21"><name pos:start="13:19" pos:end="13:21">ptr</name></expr> ?</condition><then pos:start="13:25" pos:end="13:39"> <expr pos:start="13:25" pos:end="13:39"><operator pos:start="13:25" pos:end="13:25">*</operator><operator pos:start="13:26" pos:end="13:26">(</operator><name pos:start="13:27" pos:end="13:33">AVClass</name><operator pos:start="13:34" pos:end="13:34">*</operator><operator pos:start="13:35" pos:end="13:35">*</operator><operator pos:start="13:36" pos:end="13:36">)</operator><name pos:start="13:37" pos:end="13:39">ptr</name></expr> </then><else pos:start="13:41" pos:end="13:46">: <expr pos:start="13:43" pos:end="13:46"><name pos:start="13:43" pos:end="13:46">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="15:5" pos:end="17:15"><if pos:start="15:5" pos:end="17:15">if<condition pos:start="15:7" pos:end="15:26">(<expr pos:start="15:8" pos:end="15:25"><name pos:start="15:8" pos:end="15:12">level</name><operator pos:start="15:13" pos:end="15:13">&gt;</operator><name pos:start="15:14" pos:end="15:25">av_log_level</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:15"><block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:8">line</name><index pos:start="19:9" pos:end="19:11">[<expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">0</literal></expr>]</index></name><operator pos:start="19:12" pos:end="19:12">=</operator><literal type="number" pos:start="19:13" pos:end="19:13">0</literal></expr>;</expr_stmt>

<cpp:undef pos:start="21:1" pos:end="21:14">#<cpp:directive pos:start="21:2" pos:end="21:6">undef</cpp:directive> <name pos:start="21:8" pos:end="21:14">fprintf</name></cpp:undef>

    <if_stmt pos:start="23:5" pos:end="39:5"><if pos:start="23:5" pos:end="39:5">if<condition pos:start="23:7" pos:end="23:27">(<expr pos:start="23:8" pos:end="23:26"><name pos:start="23:8" pos:end="23:19">print_prefix</name> <operator pos:start="23:21" pos:end="23:22">&amp;&amp;</operator> <name pos:start="23:24" pos:end="23:26">avc</name></expr>)</condition> <block pos:start="23:29" pos:end="39:5">{<block_content pos:start="25:9" pos:end="37:107">

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="35:9">if <condition pos:start="25:12" pos:end="25:43">(<expr pos:start="25:13" pos:end="25:42"><name pos:start="25:13" pos:end="25:42"><name pos:start="25:13" pos:end="25:15">avc</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:42">parent_log_context_offset</name></name></expr>)</condition> <block pos:start="25:45" pos:end="35:9">{<block_content pos:start="27:13" pos:end="33:13">

            <decl_stmt pos:start="27:13" pos:end="27:94"><decl pos:start="27:13" pos:end="27:93"><type pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:19">AVClass</name><modifier pos:start="27:20" pos:end="27:20">*</modifier><modifier pos:start="27:21" pos:end="27:21">*</modifier></type> <name pos:start="27:23" pos:end="27:28">parent</name><init pos:start="27:29" pos:end="27:93">= <expr pos:start="27:31" pos:end="27:93"><operator pos:start="27:31" pos:end="27:31">*</operator><operator pos:start="27:32" pos:end="27:32">(</operator><name pos:start="27:33" pos:end="27:39">AVClass</name><operator pos:start="27:40" pos:end="27:40">*</operator><operator pos:start="27:41" pos:end="27:41">*</operator><operator pos:start="27:42" pos:end="27:42">*</operator><operator pos:start="27:43" pos:end="27:43">)</operator><operator pos:start="27:44" pos:end="27:44">(</operator><operator pos:start="27:45" pos:end="27:45">(</operator><operator pos:start="27:46" pos:end="27:46">(</operator><name pos:start="27:47" pos:end="27:53">uint8_t</name><operator pos:start="27:54" pos:end="27:54">*</operator><operator pos:start="27:55" pos:end="27:55">)</operator><name pos:start="27:56" pos:end="27:58">ptr</name><operator pos:start="27:59" pos:end="27:59">)</operator> <operator pos:start="27:61" pos:end="27:61">+</operator> <name pos:start="27:63" pos:end="27:92"><name pos:start="27:63" pos:end="27:65">avc</name><operator pos:start="27:66" pos:end="27:67">-&gt;</operator><name pos:start="27:68" pos:end="27:92">parent_log_context_offset</name></name><operator pos:start="27:93" pos:end="27:93">)</operator></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="29:13" pos:end="33:13"><if pos:start="29:13" pos:end="33:13">if<condition pos:start="29:15" pos:end="29:33">(<expr pos:start="29:16" pos:end="29:32"><name pos:start="29:16" pos:end="29:21">parent</name> <operator pos:start="29:23" pos:end="29:24">&amp;&amp;</operator> <operator pos:start="29:26" pos:end="29:26">*</operator><name pos:start="29:27" pos:end="29:32">parent</name></expr>)</condition><block pos:start="29:34" pos:end="33:13">{<block_content pos:start="31:17" pos:end="31:97">

                <expr_stmt pos:start="31:17" pos:end="31:97"><expr pos:start="31:17" pos:end="31:96"><call pos:start="31:17" pos:end="31:96"><name pos:start="31:17" pos:end="31:24">snprintf</name><argument_list pos:start="31:25" pos:end="31:96">(<argument pos:start="31:26" pos:end="31:29"><expr pos:start="31:26" pos:end="31:29"><name pos:start="31:26" pos:end="31:29">line</name></expr></argument>, <argument pos:start="31:32" pos:end="31:43"><expr pos:start="31:32" pos:end="31:43"><sizeof pos:start="31:32" pos:end="31:43">sizeof<argument_list pos:start="31:38" pos:end="31:43">(<argument pos:start="31:39" pos:end="31:42"><expr pos:start="31:39" pos:end="31:42"><name pos:start="31:39" pos:end="31:42">line</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:46" pos:end="31:57"><expr pos:start="31:46" pos:end="31:57"><literal type="string" pos:start="31:46" pos:end="31:57">"[%s @ %p] "</literal></expr></argument>, <argument pos:start="31:60" pos:end="31:87"><expr pos:start="31:60" pos:end="31:87"><call pos:start="31:60" pos:end="31:87"><name pos:start="31:60" pos:end="31:79"><operator pos:start="31:60" pos:end="31:60">(</operator><operator pos:start="31:61" pos:end="31:61">*</operator><name pos:start="31:62" pos:end="31:67">parent</name><operator pos:start="31:68" pos:end="31:68">)</operator><operator pos:start="31:69" pos:end="31:70">-&gt;</operator><name pos:start="31:71" pos:end="31:79">item_name</name></name><argument_list pos:start="31:80" pos:end="31:87">(<argument pos:start="31:81" pos:end="31:86"><expr pos:start="31:81" pos:end="31:86"><name pos:start="31:81" pos:end="31:86">parent</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:90" pos:end="31:95"><expr pos:start="31:90" pos:end="31:95"><name pos:start="31:90" pos:end="31:95">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:107"><expr pos:start="37:9" pos:end="37:106"><call pos:start="37:9" pos:end="37:106"><name pos:start="37:9" pos:end="37:16">snprintf</name><argument_list pos:start="37:17" pos:end="37:106">(<argument pos:start="37:18" pos:end="37:36"><expr pos:start="37:18" pos:end="37:36"><name pos:start="37:18" pos:end="37:21">line</name> <operator pos:start="37:23" pos:end="37:23">+</operator> <call pos:start="37:25" pos:end="37:36"><name pos:start="37:25" pos:end="37:30">strlen</name><argument_list pos:start="37:31" pos:end="37:36">(<argument pos:start="37:32" pos:end="37:35"><expr pos:start="37:32" pos:end="37:35"><name pos:start="37:32" pos:end="37:35">line</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:39" pos:end="37:65"><expr pos:start="37:39" pos:end="37:65"><sizeof pos:start="37:39" pos:end="37:50">sizeof<argument_list pos:start="37:45" pos:end="37:50">(<argument pos:start="37:46" pos:end="37:49"><expr pos:start="37:46" pos:end="37:49"><name pos:start="37:46" pos:end="37:49">line</name></expr></argument>)</argument_list></sizeof> <operator pos:start="37:52" pos:end="37:52">-</operator> <call pos:start="37:54" pos:end="37:65"><name pos:start="37:54" pos:end="37:59">strlen</name><argument_list pos:start="37:60" pos:end="37:65">(<argument pos:start="37:61" pos:end="37:64"><expr pos:start="37:61" pos:end="37:64"><name pos:start="37:61" pos:end="37:64">line</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:68" pos:end="37:79"><expr pos:start="37:68" pos:end="37:79"><literal type="string" pos:start="37:68" pos:end="37:79">"[%s @ %p] "</literal></expr></argument>, <argument pos:start="37:82" pos:end="37:100"><expr pos:start="37:82" pos:end="37:100"><call pos:start="37:82" pos:end="37:100"><name pos:start="37:82" pos:end="37:95"><name pos:start="37:82" pos:end="37:84">avc</name><operator pos:start="37:85" pos:end="37:86">-&gt;</operator><name pos:start="37:87" pos:end="37:95">item_name</name></name><argument_list pos:start="37:96" pos:end="37:100">(<argument pos:start="37:97" pos:end="37:99"><expr pos:start="37:97" pos:end="37:99"><name pos:start="37:97" pos:end="37:99">ptr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:103" pos:end="37:105"><expr pos:start="37:103" pos:end="37:105"><name pos:start="37:103" pos:end="37:105">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:73"><expr pos:start="43:5" pos:end="43:72"><call pos:start="43:5" pos:end="43:72"><name pos:start="43:5" pos:end="43:13">vsnprintf</name><argument_list pos:start="43:14" pos:end="43:72">(<argument pos:start="43:15" pos:end="43:33"><expr pos:start="43:15" pos:end="43:33"><name pos:start="43:15" pos:end="43:18">line</name> <operator pos:start="43:20" pos:end="43:20">+</operator> <call pos:start="43:22" pos:end="43:33"><name pos:start="43:22" pos:end="43:27">strlen</name><argument_list pos:start="43:28" pos:end="43:33">(<argument pos:start="43:29" pos:end="43:32"><expr pos:start="43:29" pos:end="43:32"><name pos:start="43:29" pos:end="43:32">line</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:36" pos:end="43:62"><expr pos:start="43:36" pos:end="43:62"><sizeof pos:start="43:36" pos:end="43:47">sizeof<argument_list pos:start="43:42" pos:end="43:47">(<argument pos:start="43:43" pos:end="43:46"><expr pos:start="43:43" pos:end="43:46"><name pos:start="43:43" pos:end="43:46">line</name></expr></argument>)</argument_list></sizeof> <operator pos:start="43:49" pos:end="43:49">-</operator> <call pos:start="43:51" pos:end="43:62"><name pos:start="43:51" pos:end="43:56">strlen</name><argument_list pos:start="43:57" pos:end="43:62">(<argument pos:start="43:58" pos:end="43:61"><expr pos:start="43:58" pos:end="43:61"><name pos:start="43:58" pos:end="43:61">line</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:65" pos:end="43:67"><expr pos:start="43:65" pos:end="43:67"><name pos:start="43:65" pos:end="43:67">fmt</name></expr></argument>, <argument pos:start="43:70" pos:end="43:71"><expr pos:start="43:70" pos:end="43:71"><name pos:start="43:70" pos:end="43:71">vl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="52:0"><expr pos:start="47:5" pos:end="47:46"><name pos:start="47:5" pos:end="47:16">print_prefix</name><operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:38"><name pos:start="47:19" pos:end="47:22">line</name><index pos:start="47:23" pos:end="47:38">[<expr pos:start="47:24" pos:end="47:37"><call pos:start="47:24" pos:end="47:35"><name pos:start="47:24" pos:end="47:29">strlen</name><argument_list pos:start="47:30" pos:end="47:35">(<argument pos:start="47:31" pos:end="47:34"><expr pos:start="47:31" pos:end="47:34"><name pos:start="47:31" pos:end="47:34">line</name></expr></argument>)</argument_list></call><operator pos:start="47:36" pos:end="47:36">-</operator><literal type="number" pos:start="47:37" pos:end="47:37">1</literal></expr>]</index></name> <operator pos:start="47:40" pos:end="47:41">==</operator> <literal type="char" pos:start="47:43" pos:end="47:46">'\n'</literal></expr>;</expr_stmt>



<cpp:if pos:start="51:1" pos:end="51:15">#<cpp:directive pos:start="51:2" pos:end="51:3">if</cpp:directive> <expr pos:start="51:5" pos:end="51:15"><name pos:start="51:5" pos:end="51:15">HAVE_ISATTY</name></expr></cpp:if>

    <if_stmt pos:start="53:5" pos:end="56:0"><if pos:start="53:5" pos:end="56:0">if<condition pos:start="53:7" pos:end="53:16">(<expr pos:start="53:8" pos:end="53:15"><operator pos:start="53:8" pos:end="53:8">!</operator><name pos:start="53:9" pos:end="53:15">is_atty</name></expr>)</condition><block type="pseudo" pos:start="53:18" pos:end="56:0"><block_content pos:start="53:18" pos:end="56:0"> <expr_stmt pos:start="53:18" pos:end="56:0"><expr pos:start="53:18" pos:end="53:44"><name pos:start="53:18" pos:end="53:24">is_atty</name><operator pos:start="53:25" pos:end="53:25">=</operator> <ternary pos:start="53:27" pos:end="53:44"><condition pos:start="53:27" pos:end="53:37"><expr pos:start="53:27" pos:end="53:35"><call pos:start="53:27" pos:end="53:35"><name pos:start="53:27" pos:end="53:32">isatty</name><argument_list pos:start="53:33" pos:end="53:35">(<argument pos:start="53:34" pos:end="53:34"><expr pos:start="53:34" pos:end="53:34"><literal type="number" pos:start="53:34" pos:end="53:34">2</literal></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="53:39" pos:end="53:39"> <expr pos:start="53:39" pos:end="53:39"><literal type="number" pos:start="53:39" pos:end="53:39">1</literal></expr> </then><else pos:start="53:41" pos:end="53:44">: <expr pos:start="53:43" pos:end="53:44"><operator pos:start="53:43" pos:end="53:43">-</operator><literal type="number" pos:start="53:44" pos:end="53:44">1</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="59:5" pos:end="69:5"><if pos:start="59:5" pos:end="69:5">if<condition pos:start="59:7" pos:end="59:77">(<expr pos:start="59:8" pos:end="59:76"><name pos:start="59:8" pos:end="59:19">print_prefix</name> <operator pos:start="59:21" pos:end="59:22">&amp;&amp;</operator> <operator pos:start="59:24" pos:end="59:24">(</operator><name pos:start="59:25" pos:end="59:29">flags</name> <operator pos:start="59:31" pos:end="59:31">&amp;</operator> <name pos:start="59:33" pos:end="59:52">AV_LOG_SKIP_REPEATED</name><operator pos:start="59:53" pos:end="59:53">)</operator> <operator pos:start="59:55" pos:end="59:56">&amp;&amp;</operator> <operator pos:start="59:58" pos:end="59:58">!</operator><call pos:start="59:59" pos:end="59:76"><name pos:start="59:59" pos:end="59:64">strcmp</name><argument_list pos:start="59:65" pos:end="59:76">(<argument pos:start="59:66" pos:end="59:69"><expr pos:start="59:66" pos:end="59:69"><name pos:start="59:66" pos:end="59:69">line</name></expr></argument>, <argument pos:start="59:72" pos:end="59:75"><expr pos:start="59:72" pos:end="59:75"><name pos:start="59:72" pos:end="59:75">prev</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="59:78" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:15">

        <expr_stmt pos:start="61:9" pos:end="61:16"><expr pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:13">count</name><operator pos:start="61:14" pos:end="61:15">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:75"><if pos:start="63:9" pos:end="65:75">if<condition pos:start="63:11" pos:end="63:22">(<expr pos:start="63:12" pos:end="63:21"><name pos:start="63:12" pos:end="63:18">is_atty</name><operator pos:start="63:19" pos:end="63:20">==</operator><literal type="number" pos:start="63:21" pos:end="63:21">1</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:75"><block_content pos:start="65:13" pos:end="65:75">

            <expr_stmt pos:start="65:13" pos:end="65:75"><expr pos:start="65:13" pos:end="65:74"><call pos:start="65:13" pos:end="65:74"><name pos:start="65:13" pos:end="65:19">fprintf</name><argument_list pos:start="65:20" pos:end="65:74">(<argument pos:start="65:21" pos:end="65:26"><expr pos:start="65:21" pos:end="65:26"><name pos:start="65:21" pos:end="65:26">stderr</name></expr></argument>, <argument pos:start="65:29" pos:end="65:66"><expr pos:start="65:29" pos:end="65:66"><literal type="string" pos:start="65:29" pos:end="65:66">"    Last message repeated %d times\r"</literal></expr></argument>, <argument pos:start="65:69" pos:end="65:73"><expr pos:start="65:69" pos:end="65:73"><name pos:start="65:69" pos:end="65:73">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="67:9" pos:end="67:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if<condition pos:start="71:7" pos:end="71:15">(<expr pos:start="71:8" pos:end="71:14"><name pos:start="71:8" pos:end="71:12">count</name><operator pos:start="71:13" pos:end="71:13">&gt;</operator><literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>)</condition><block pos:start="71:16" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:16">

        <expr_stmt pos:start="73:9" pos:end="73:71"><expr pos:start="73:9" pos:end="73:70"><call pos:start="73:9" pos:end="73:70"><name pos:start="73:9" pos:end="73:15">fprintf</name><argument_list pos:start="73:16" pos:end="73:70">(<argument pos:start="73:17" pos:end="73:22"><expr pos:start="73:17" pos:end="73:22"><name pos:start="73:17" pos:end="73:22">stderr</name></expr></argument>, <argument pos:start="73:25" pos:end="73:62"><expr pos:start="73:25" pos:end="73:62"><literal type="string" pos:start="73:25" pos:end="73:62">"    Last message repeated %d times\n"</literal></expr></argument>, <argument pos:start="73:65" pos:end="73:69"><expr pos:start="73:65" pos:end="73:69"><name pos:start="73:65" pos:end="73:69">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:16"><expr pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:13">count</name><operator pos:start="75:14" pos:end="75:14">=</operator><literal type="number" pos:start="75:15" pos:end="75:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:49"><expr pos:start="79:5" pos:end="79:48"><call pos:start="79:5" pos:end="79:48"><name pos:start="79:5" pos:end="79:17">colored_fputs</name><argument_list pos:start="79:18" pos:end="79:48">(<argument pos:start="79:19" pos:end="79:41"><expr pos:start="79:19" pos:end="79:41"><call pos:start="79:19" pos:end="79:41"><name pos:start="79:19" pos:end="79:25">av_clip</name><argument_list pos:start="79:26" pos:end="79:41">(<argument pos:start="79:27" pos:end="79:34"><expr pos:start="79:27" pos:end="79:34"><name pos:start="79:27" pos:end="79:31">level</name><operator pos:start="79:32" pos:end="79:33">&gt;&gt;</operator><literal type="number" pos:start="79:34" pos:end="79:34">3</literal></expr></argument>, <argument pos:start="79:37" pos:end="79:37"><expr pos:start="79:37" pos:end="79:37"><literal type="number" pos:start="79:37" pos:end="79:37">0</literal></expr></argument>, <argument pos:start="79:40" pos:end="79:40"><expr pos:start="79:40" pos:end="79:40"><literal type="number" pos:start="79:40" pos:end="79:40">6</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:44" pos:end="79:47"><expr pos:start="79:44" pos:end="79:47"><name pos:start="79:44" pos:end="79:47">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:23"><expr pos:start="81:5" pos:end="81:22"><call pos:start="81:5" pos:end="81:22"><name pos:start="81:5" pos:end="81:10">strcpy</name><argument_list pos:start="81:11" pos:end="81:22">(<argument pos:start="81:12" pos:end="81:15"><expr pos:start="81:12" pos:end="81:15"><name pos:start="81:12" pos:end="81:15">prev</name></expr></argument>, <argument pos:start="81:18" pos:end="81:21"><expr pos:start="81:18" pos:end="81:21"><name pos:start="81:18" pos:end="81:21">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
