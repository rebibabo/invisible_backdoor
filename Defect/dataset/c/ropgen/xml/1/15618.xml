<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15618.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">do_interrupt_v7m</name><parameter_list pos:start="1:29" pos:end="1:46">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">CPUARMState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:26">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">xpsr</name> <init pos:start="5:19" pos:end="5:34">= <expr pos:start="5:21" pos:end="5:34"><call pos:start="5:21" pos:end="5:34"><name pos:start="5:21" pos:end="5:29">xpsr_read</name><argument_list pos:start="5:30" pos:end="5:34">(<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:15">lr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">addr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:6">lr</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <literal type="number" pos:start="13:10" pos:end="13:19">0xfffffff1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:16"><if pos:start="15:5" pos:end="17:16">if <condition pos:start="15:8" pos:end="15:28">(<expr pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:11">env</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:16">v7m</name><operator pos:start="15:17" pos:end="15:17">.</operator><name pos:start="15:18" pos:end="15:27">current_sp</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:16"><block_content pos:start="17:9" pos:end="17:16">

        <expr_stmt pos:start="17:9" pos:end="17:16"><expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:10">lr</name> <operator pos:start="17:12" pos:end="17:13">|=</operator> <literal type="number" pos:start="17:15" pos:end="17:15">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:16"><if pos:start="19:5" pos:end="21:16">if <condition pos:start="19:8" pos:end="19:32">(<expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:11">env</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:16">v7m</name><operator pos:start="19:17" pos:end="19:17">.</operator><name pos:start="19:18" pos:end="19:26">exception</name></name> <operator pos:start="19:28" pos:end="19:29">==</operator> <literal type="number" pos:start="19:31" pos:end="19:31">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:16"><block_content pos:start="21:9" pos:end="21:16">

        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:10">lr</name> <operator pos:start="21:12" pos:end="21:13">|=</operator> <literal type="number" pos:start="21:15" pos:end="21:15">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="27:21">/* For exceptions we just mark as pending on the NVIC, and let that

       handle it.  */</comment>

    <comment type="block" pos:start="29:5" pos:end="31:29">/* TODO: Need to escalate if the current priority is higher than the

       one we're raising.  */</comment>

    <switch pos:start="33:5" pos:end="99:5">switch <condition pos:start="33:12" pos:end="33:33">(<expr pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:15">env</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:32">exception_index</name></name></expr>)</condition> <block pos:start="33:35" pos:end="99:5">{<block_content pos:start="35:5" pos:end="97:15">

    <case pos:start="35:5" pos:end="35:19">case <expr pos:start="35:10" pos:end="35:18"><name pos:start="35:10" pos:end="35:18">EXCP_UDEF</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:62"><expr pos:start="37:9" pos:end="37:61"><call pos:start="37:9" pos:end="37:61"><name pos:start="37:9" pos:end="37:31">armv7m_nvic_set_pending</name><argument_list pos:start="37:32" pos:end="37:61">(<argument pos:start="37:33" pos:end="37:41"><expr pos:start="37:33" pos:end="37:41"><name pos:start="37:33" pos:end="37:41"><name pos:start="37:33" pos:end="37:35">env</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:41">nvic</name></name></expr></argument>, <argument pos:start="37:44" pos:end="37:60"><expr pos:start="37:44" pos:end="37:60"><name pos:start="37:44" pos:end="37:60">ARMV7M_EXCP_USAGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    <case pos:start="41:5" pos:end="41:18">case <expr pos:start="41:10" pos:end="41:17"><name pos:start="41:10" pos:end="41:17">EXCP_SWI</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:27"><expr pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:11">env</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:17">regs</name><index pos:start="43:18" pos:end="43:21">[<expr pos:start="43:19" pos:end="43:20"><literal type="number" pos:start="43:19" pos:end="43:20">15</literal></expr>]</index></name> <operator pos:start="43:23" pos:end="43:24">+=</operator> <literal type="number" pos:start="43:26" pos:end="43:26">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:60"><expr pos:start="45:9" pos:end="45:59"><call pos:start="45:9" pos:end="45:59"><name pos:start="45:9" pos:end="45:31">armv7m_nvic_set_pending</name><argument_list pos:start="45:32" pos:end="45:59">(<argument pos:start="45:33" pos:end="45:41"><expr pos:start="45:33" pos:end="45:41"><name pos:start="45:33" pos:end="45:41"><name pos:start="45:33" pos:end="45:35">env</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:41">nvic</name></name></expr></argument>, <argument pos:start="45:44" pos:end="45:58"><expr pos:start="45:44" pos:end="45:58"><name pos:start="45:44" pos:end="45:58">ARMV7M_EXCP_SVC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:15">return;</return>

    <case pos:start="49:5" pos:end="49:29">case <expr pos:start="49:10" pos:end="49:28"><name pos:start="49:10" pos:end="49:28">EXCP_PREFETCH_ABORT</name></expr>:</case>

    <case pos:start="51:5" pos:end="51:25">case <expr pos:start="51:10" pos:end="51:24"><name pos:start="51:10" pos:end="51:24">EXCP_DATA_ABORT</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:60"><expr pos:start="53:9" pos:end="53:59"><call pos:start="53:9" pos:end="53:59"><name pos:start="53:9" pos:end="53:31">armv7m_nvic_set_pending</name><argument_list pos:start="53:32" pos:end="53:59">(<argument pos:start="53:33" pos:end="53:41"><expr pos:start="53:33" pos:end="53:41"><name pos:start="53:33" pos:end="53:41"><name pos:start="53:33" pos:end="53:35">env</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:41">nvic</name></name></expr></argument>, <argument pos:start="53:44" pos:end="53:58"><expr pos:start="53:44" pos:end="53:58"><name pos:start="53:44" pos:end="53:58">ARMV7M_EXCP_MEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:15">return;</return>

    <case pos:start="57:5" pos:end="57:19">case <expr pos:start="57:10" pos:end="57:18"><name pos:start="57:10" pos:end="57:18">EXCP_BKPT</name></expr>:</case>

        <if_stmt pos:start="59:9" pos:end="75:9"><if pos:start="59:9" pos:end="75:9">if <condition pos:start="59:12" pos:end="59:32">(<expr pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:31">semihosting_enabled</name></expr>)</condition> <block pos:start="59:34" pos:end="75:9">{<block_content pos:start="61:13" pos:end="73:13">

            <decl_stmt pos:start="61:13" pos:end="61:19"><decl pos:start="61:13" pos:end="61:18"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:18">nr</name></decl>;</decl_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:49"><expr pos:start="63:13" pos:end="63:48"><name pos:start="63:13" pos:end="63:14">nr</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:41"><name pos:start="63:18" pos:end="63:26">lduw_code</name><argument_list pos:start="63:27" pos:end="63:41">(<argument pos:start="63:28" pos:end="63:40"><expr pos:start="63:28" pos:end="63:40"><name pos:start="63:28" pos:end="63:40"><name pos:start="63:28" pos:end="63:30">env</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:36">regs</name><index pos:start="63:37" pos:end="63:40">[<expr pos:start="63:38" pos:end="63:39"><literal type="number" pos:start="63:38" pos:end="63:39">15</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="63:43" pos:end="63:43">&amp;</operator> <literal type="number" pos:start="63:45" pos:end="63:48">0xff</literal></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="73:13"><if pos:start="65:13" pos:end="73:13">if <condition pos:start="65:16" pos:end="65:27">(<expr pos:start="65:17" pos:end="65:26"><name pos:start="65:17" pos:end="65:18">nr</name> <operator pos:start="65:20" pos:end="65:21">==</operator> <literal type="number" pos:start="65:23" pos:end="65:26">0xab</literal></expr>)</condition> <block pos:start="65:29" pos:end="73:13">{<block_content pos:start="67:17" pos:end="71:23">

                <expr_stmt pos:start="67:17" pos:end="67:35"><expr pos:start="67:17" pos:end="67:34"><name pos:start="67:17" pos:end="67:29"><name pos:start="67:17" pos:end="67:19">env</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:25">regs</name><index pos:start="67:26" pos:end="67:29">[<expr pos:start="67:27" pos:end="67:28"><literal type="number" pos:start="67:27" pos:end="67:28">15</literal></expr>]</index></name> <operator pos:start="67:31" pos:end="67:32">+=</operator> <literal type="number" pos:start="67:34" pos:end="67:34">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:55"><expr pos:start="69:17" pos:end="69:54"><name pos:start="69:17" pos:end="69:28"><name pos:start="69:17" pos:end="69:19">env</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:25">regs</name><index pos:start="69:26" pos:end="69:28">[<expr pos:start="69:27" pos:end="69:27"><literal type="number" pos:start="69:27" pos:end="69:27">0</literal></expr>]</index></name> <operator pos:start="69:30" pos:end="69:30">=</operator> <call pos:start="69:32" pos:end="69:54"><name pos:start="69:32" pos:end="69:49">do_arm_semihosting</name><argument_list pos:start="69:50" pos:end="69:54">(<argument pos:start="69:51" pos:end="69:53"><expr pos:start="69:51" pos:end="69:53"><name pos:start="69:51" pos:end="69:53">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="71:17" pos:end="71:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:62"><expr pos:start="77:9" pos:end="77:61"><call pos:start="77:9" pos:end="77:61"><name pos:start="77:9" pos:end="77:31">armv7m_nvic_set_pending</name><argument_list pos:start="77:32" pos:end="77:61">(<argument pos:start="77:33" pos:end="77:41"><expr pos:start="77:33" pos:end="77:41"><name pos:start="77:33" pos:end="77:41"><name pos:start="77:33" pos:end="77:35">env</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:41">nvic</name></name></expr></argument>, <argument pos:start="77:44" pos:end="77:60"><expr pos:start="77:44" pos:end="77:60"><name pos:start="77:44" pos:end="77:60">ARMV7M_EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:15">return;</return>

    <case pos:start="81:5" pos:end="81:18">case <expr pos:start="81:10" pos:end="81:17"><name pos:start="81:10" pos:end="81:17">EXCP_IRQ</name></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:68"><expr pos:start="83:9" pos:end="83:67"><name pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:11">env</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:16">v7m</name><operator pos:start="83:17" pos:end="83:17">.</operator><name pos:start="83:18" pos:end="83:26">exception</name></name> <operator pos:start="83:28" pos:end="83:28">=</operator> <call pos:start="83:30" pos:end="83:67"><name pos:start="83:30" pos:end="83:56">armv7m_nvic_acknowledge_irq</name><argument_list pos:start="83:57" pos:end="83:67">(<argument pos:start="83:58" pos:end="83:66"><expr pos:start="83:58" pos:end="83:66"><name pos:start="83:58" pos:end="83:66"><name pos:start="83:58" pos:end="83:60">env</name><operator pos:start="83:61" pos:end="83:62">-&gt;</operator><name pos:start="83:63" pos:end="83:66">nvic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:29">case <expr pos:start="87:10" pos:end="87:28"><name pos:start="87:10" pos:end="87:28">EXCP_EXCEPTION_EXIT</name></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:35"><expr pos:start="89:9" pos:end="89:34"><call pos:start="89:9" pos:end="89:34"><name pos:start="89:9" pos:end="89:29">do_v7m_exception_exit</name><argument_list pos:start="89:30" pos:end="89:34">(<argument pos:start="89:31" pos:end="89:33"><expr pos:start="89:31" pos:end="89:33"><name pos:start="89:31" pos:end="89:33">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="91:9" pos:end="91:15">return;</return>

    <default pos:start="93:5" pos:end="93:12">default:</default>

        <expr_stmt pos:start="95:9" pos:end="95:75"><expr pos:start="95:9" pos:end="95:74"><call pos:start="95:9" pos:end="95:74"><name pos:start="95:9" pos:end="95:17">cpu_abort</name><argument_list pos:start="95:18" pos:end="95:74">(<argument pos:start="95:19" pos:end="95:21"><expr pos:start="95:19" pos:end="95:21"><name pos:start="95:19" pos:end="95:21">env</name></expr></argument>, <argument pos:start="95:24" pos:end="95:51"><expr pos:start="95:24" pos:end="95:51"><literal type="string" pos:start="95:24" pos:end="95:51">"Unhandled exception 0x%x\n"</literal></expr></argument>, <argument pos:start="95:54" pos:end="95:73"><expr pos:start="95:54" pos:end="95:73"><name pos:start="95:54" pos:end="95:73"><name pos:start="95:54" pos:end="95:56">env</name><operator pos:start="95:57" pos:end="95:58">-&gt;</operator><name pos:start="95:59" pos:end="95:73">exception_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="97:9" pos:end="97:15">return;</return> <comment type="block" pos:start="97:17" pos:end="97:59">/* Never happens.  Keep compiler happy.  */</comment>

    </block_content>}</block></switch>



    <comment type="block" pos:start="103:5" pos:end="103:31">/* Align stack pointer.  */</comment>

    <comment type="block" pos:start="105:5" pos:end="107:33">/* ??? Should only do this if Configuration Control Register

       STACKALIGN bit is set.  */</comment>

    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:26">(<expr pos:start="109:9" pos:end="109:25"><name pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:11">env</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:17">regs</name><index pos:start="109:18" pos:end="109:21">[<expr pos:start="109:19" pos:end="109:20"><literal type="number" pos:start="109:19" pos:end="109:20">13</literal></expr>]</index></name> <operator pos:start="109:23" pos:end="109:23">&amp;</operator> <literal type="number" pos:start="109:25" pos:end="109:25">4</literal></expr>)</condition> <block pos:start="109:28" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:22">

        <expr_stmt pos:start="111:9" pos:end="111:27"><expr pos:start="111:9" pos:end="111:26"><name pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:11">env</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:17">regs</name><index pos:start="111:18" pos:end="111:21">[<expr pos:start="111:19" pos:end="111:20"><literal type="number" pos:start="111:19" pos:end="111:20">13</literal></expr>]</index></name> <operator pos:start="111:23" pos:end="111:24">-=</operator> <literal type="number" pos:start="111:26" pos:end="111:26">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:22"><expr pos:start="113:9" pos:end="113:21"><name pos:start="113:9" pos:end="113:12">xpsr</name> <operator pos:start="113:14" pos:end="113:15">|=</operator> <literal type="number" pos:start="113:17" pos:end="113:21">0x200</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="117:5" pos:end="117:38">/* Switch to the handler mode.  */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:24"><expr pos:start="119:5" pos:end="119:23"><call pos:start="119:5" pos:end="119:23"><name pos:start="119:5" pos:end="119:12">v7m_push</name><argument_list pos:start="119:13" pos:end="119:23">(<argument pos:start="119:14" pos:end="119:16"><expr pos:start="119:14" pos:end="119:16"><name pos:start="119:14" pos:end="119:16">env</name></expr></argument>, <argument pos:start="119:19" pos:end="119:22"><expr pos:start="119:19" pos:end="119:22"><name pos:start="119:19" pos:end="119:22">xpsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:33"><expr pos:start="121:5" pos:end="121:32"><call pos:start="121:5" pos:end="121:32"><name pos:start="121:5" pos:end="121:12">v7m_push</name><argument_list pos:start="121:13" pos:end="121:32">(<argument pos:start="121:14" pos:end="121:16"><expr pos:start="121:14" pos:end="121:16"><name pos:start="121:14" pos:end="121:16">env</name></expr></argument>, <argument pos:start="121:19" pos:end="121:31"><expr pos:start="121:19" pos:end="121:31"><name pos:start="121:19" pos:end="121:31"><name pos:start="121:19" pos:end="121:21">env</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:27">regs</name><index pos:start="121:28" pos:end="121:31">[<expr pos:start="121:29" pos:end="121:30"><literal type="number" pos:start="121:29" pos:end="121:30">15</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:33"><expr pos:start="123:5" pos:end="123:32"><call pos:start="123:5" pos:end="123:32"><name pos:start="123:5" pos:end="123:12">v7m_push</name><argument_list pos:start="123:13" pos:end="123:32">(<argument pos:start="123:14" pos:end="123:16"><expr pos:start="123:14" pos:end="123:16"><name pos:start="123:14" pos:end="123:16">env</name></expr></argument>, <argument pos:start="123:19" pos:end="123:31"><expr pos:start="123:19" pos:end="123:31"><name pos:start="123:19" pos:end="123:31"><name pos:start="123:19" pos:end="123:21">env</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:27">regs</name><index pos:start="123:28" pos:end="123:31">[<expr pos:start="123:29" pos:end="123:30"><literal type="number" pos:start="123:29" pos:end="123:30">14</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:33"><expr pos:start="125:5" pos:end="125:32"><call pos:start="125:5" pos:end="125:32"><name pos:start="125:5" pos:end="125:12">v7m_push</name><argument_list pos:start="125:13" pos:end="125:32">(<argument pos:start="125:14" pos:end="125:16"><expr pos:start="125:14" pos:end="125:16"><name pos:start="125:14" pos:end="125:16">env</name></expr></argument>, <argument pos:start="125:19" pos:end="125:31"><expr pos:start="125:19" pos:end="125:31"><name pos:start="125:19" pos:end="125:31"><name pos:start="125:19" pos:end="125:21">env</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:27">regs</name><index pos:start="125:28" pos:end="125:31">[<expr pos:start="125:29" pos:end="125:30"><literal type="number" pos:start="125:29" pos:end="125:30">12</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:32"><expr pos:start="127:5" pos:end="127:31"><call pos:start="127:5" pos:end="127:31"><name pos:start="127:5" pos:end="127:12">v7m_push</name><argument_list pos:start="127:13" pos:end="127:31">(<argument pos:start="127:14" pos:end="127:16"><expr pos:start="127:14" pos:end="127:16"><name pos:start="127:14" pos:end="127:16">env</name></expr></argument>, <argument pos:start="127:19" pos:end="127:30"><expr pos:start="127:19" pos:end="127:30"><name pos:start="127:19" pos:end="127:30"><name pos:start="127:19" pos:end="127:21">env</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:27">regs</name><index pos:start="127:28" pos:end="127:30">[<expr pos:start="127:29" pos:end="127:29"><literal type="number" pos:start="127:29" pos:end="127:29">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:32"><expr pos:start="129:5" pos:end="129:31"><call pos:start="129:5" pos:end="129:31"><name pos:start="129:5" pos:end="129:12">v7m_push</name><argument_list pos:start="129:13" pos:end="129:31">(<argument pos:start="129:14" pos:end="129:16"><expr pos:start="129:14" pos:end="129:16"><name pos:start="129:14" pos:end="129:16">env</name></expr></argument>, <argument pos:start="129:19" pos:end="129:30"><expr pos:start="129:19" pos:end="129:30"><name pos:start="129:19" pos:end="129:30"><name pos:start="129:19" pos:end="129:21">env</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:27">regs</name><index pos:start="129:28" pos:end="129:30">[<expr pos:start="129:29" pos:end="129:29"><literal type="number" pos:start="129:29" pos:end="129:29">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:32"><expr pos:start="131:5" pos:end="131:31"><call pos:start="131:5" pos:end="131:31"><name pos:start="131:5" pos:end="131:12">v7m_push</name><argument_list pos:start="131:13" pos:end="131:31">(<argument pos:start="131:14" pos:end="131:16"><expr pos:start="131:14" pos:end="131:16"><name pos:start="131:14" pos:end="131:16">env</name></expr></argument>, <argument pos:start="131:19" pos:end="131:30"><expr pos:start="131:19" pos:end="131:30"><name pos:start="131:19" pos:end="131:30"><name pos:start="131:19" pos:end="131:21">env</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:27">regs</name><index pos:start="131:28" pos:end="131:30">[<expr pos:start="131:29" pos:end="131:29"><literal type="number" pos:start="131:29" pos:end="131:29">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:32"><expr pos:start="133:5" pos:end="133:31"><call pos:start="133:5" pos:end="133:31"><name pos:start="133:5" pos:end="133:12">v7m_push</name><argument_list pos:start="133:13" pos:end="133:31">(<argument pos:start="133:14" pos:end="133:16"><expr pos:start="133:14" pos:end="133:16"><name pos:start="133:14" pos:end="133:16">env</name></expr></argument>, <argument pos:start="133:19" pos:end="133:30"><expr pos:start="133:19" pos:end="133:30"><name pos:start="133:19" pos:end="133:30"><name pos:start="133:19" pos:end="133:21">env</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:27">regs</name><index pos:start="133:28" pos:end="133:30">[<expr pos:start="133:29" pos:end="133:29"><literal type="number" pos:start="133:29" pos:end="133:29">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:26"><expr pos:start="135:5" pos:end="135:25"><call pos:start="135:5" pos:end="135:25"><name pos:start="135:5" pos:end="135:17">switch_v7m_sp</name><argument_list pos:start="135:18" pos:end="135:25">(<argument pos:start="135:19" pos:end="135:21"><expr pos:start="135:19" pos:end="135:21"><name pos:start="135:19" pos:end="135:21">env</name></expr></argument>, <argument pos:start="135:24" pos:end="135:24"><expr pos:start="135:24" pos:end="135:24"><literal type="number" pos:start="135:24" pos:end="135:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="137:5" pos:end="137:23">/* Clear IT bits */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:27"><expr pos:start="139:5" pos:end="139:26"><name pos:start="139:5" pos:end="139:22"><name pos:start="139:5" pos:end="139:7">env</name><operator pos:start="139:8" pos:end="139:9">-&gt;</operator><name pos:start="139:10" pos:end="139:22">condexec_bits</name></name> <operator pos:start="139:24" pos:end="139:24">=</operator> <literal type="number" pos:start="139:26" pos:end="139:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:23"><expr pos:start="141:5" pos:end="141:22"><name pos:start="141:5" pos:end="141:17"><name pos:start="141:5" pos:end="141:7">env</name><operator pos:start="141:8" pos:end="141:9">-&gt;</operator><name pos:start="141:10" pos:end="141:13">regs</name><index pos:start="141:14" pos:end="141:17">[<expr pos:start="141:15" pos:end="141:16"><literal type="number" pos:start="141:15" pos:end="141:16">14</literal></expr>]</index></name> <operator pos:start="141:19" pos:end="141:19">=</operator> <name pos:start="141:21" pos:end="141:22">lr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:63"><expr pos:start="143:5" pos:end="143:62"><name pos:start="143:5" pos:end="143:8">addr</name> <operator pos:start="143:10" pos:end="143:10">=</operator> <call pos:start="143:12" pos:end="143:62"><name pos:start="143:12" pos:end="143:19">ldl_phys</name><argument_list pos:start="143:20" pos:end="143:62">(<argument pos:start="143:21" pos:end="143:61"><expr pos:start="143:21" pos:end="143:61"><name pos:start="143:21" pos:end="143:36"><name pos:start="143:21" pos:end="143:23">env</name><operator pos:start="143:24" pos:end="143:25">-&gt;</operator><name pos:start="143:26" pos:end="143:28">v7m</name><operator pos:start="143:29" pos:end="143:29">.</operator><name pos:start="143:30" pos:end="143:36">vecbase</name></name> <operator pos:start="143:38" pos:end="143:38">+</operator> <name pos:start="143:40" pos:end="143:57"><name pos:start="143:40" pos:end="143:42">env</name><operator pos:start="143:43" pos:end="143:44">-&gt;</operator><name pos:start="143:45" pos:end="143:47">v7m</name><operator pos:start="143:48" pos:end="143:48">.</operator><name pos:start="143:49" pos:end="143:57">exception</name></name> <operator pos:start="143:59" pos:end="143:59">*</operator> <literal type="number" pos:start="143:61" pos:end="143:61">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:38"><expr pos:start="145:5" pos:end="145:37"><name pos:start="145:5" pos:end="145:17"><name pos:start="145:5" pos:end="145:7">env</name><operator pos:start="145:8" pos:end="145:9">-&gt;</operator><name pos:start="145:10" pos:end="145:13">regs</name><index pos:start="145:14" pos:end="145:17">[<expr pos:start="145:15" pos:end="145:16"><literal type="number" pos:start="145:15" pos:end="145:16">15</literal></expr>]</index></name> <operator pos:start="145:19" pos:end="145:19">=</operator> <name pos:start="145:21" pos:end="145:24">addr</name> <operator pos:start="145:26" pos:end="145:26">&amp;</operator> <literal type="number" pos:start="145:28" pos:end="145:37">0xfffffffe</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:26"><expr pos:start="147:5" pos:end="147:25"><name pos:start="147:5" pos:end="147:14"><name pos:start="147:5" pos:end="147:7">env</name><operator pos:start="147:8" pos:end="147:9">-&gt;</operator><name pos:start="147:10" pos:end="147:14">thumb</name></name> <operator pos:start="147:16" pos:end="147:16">=</operator> <name pos:start="147:18" pos:end="147:21">addr</name> <operator pos:start="147:23" pos:end="147:23">&amp;</operator> <literal type="number" pos:start="147:25" pos:end="147:25">1</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
