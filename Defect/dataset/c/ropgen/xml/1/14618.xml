<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14618.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">CPUState</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:23">ppc440ep_init</name><parameter_list pos:start="1:24" pos:end="5:46">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:34">ram_addr_t</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:44">ram_size</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:52">PCIBus</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier><modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">pcip</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:57"><decl pos:start="3:25" pos:end="3:57"><type pos:start="3:25" pos:end="3:54"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:38">unsigned</name> <name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:54">pci_irq_nrs</name><index pos:start="3:55" pos:end="3:57">[<expr pos:start="3:56" pos:end="3:56"><literal type="number" pos:start="3:56" pos:end="3:56">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:70"><decl pos:start="3:60" pos:end="3:70"><type pos:start="3:60" pos:end="3:70"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:70">do_init</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:45"><decl pos:start="5:25" pos:end="5:45"><type pos:start="5:25" pos:end="5:45"><specifier pos:start="5:25" pos:end="5:29">const</specifier> <name pos:start="5:31" pos:end="5:34">char</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:45">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="127:1">{<block_content pos:start="9:5" pos:end="125:15">

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:57"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22">target_phys_addr_t</name></type> <name pos:start="9:24" pos:end="9:57"><name pos:start="9:24" pos:end="9:32">ram_bases</name><index pos:start="9:33" pos:end="9:57">[<expr pos:start="9:34" pos:end="9:56"><name pos:start="9:34" pos:end="9:56">PPC440EP_SDRAM_NR_BANKS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:58"><decl pos:start="11:5" pos:end="11:57"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22">target_phys_addr_t</name></type> <name pos:start="11:24" pos:end="11:57"><name pos:start="11:24" pos:end="11:32">ram_sizes</name><index pos:start="11:33" pos:end="11:57">[<expr pos:start="11:34" pos:end="11:56"><name pos:start="11:34" pos:end="11:56">PPC440EP_SDRAM_NR_BANKS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">CPUState</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:17">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">qemu_irq</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:17">pic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">qemu_irq</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:18">irqs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">qemu_irq</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:22">pci_irqs</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:26"><if pos:start="23:5" pos:end="25:26">if <condition pos:start="23:8" pos:end="23:26">(<expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:17">cpu_model</name> <operator pos:start="23:19" pos:end="23:20">==</operator> <name pos:start="23:22" pos:end="23:25">NULL</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:26"><block_content pos:start="25:9" pos:end="25:26">

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:17">cpu_model</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <literal type="string" pos:start="25:21" pos:end="25:25">"405"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="25:28" pos:end="25:50">// XXX: should be 440EP</comment>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:7">env</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:29"><name pos:start="27:11" pos:end="27:18">cpu_init</name><argument_list pos:start="27:19" pos:end="27:29">(<argument pos:start="27:20" pos:end="27:28"><expr pos:start="27:20" pos:end="27:28"><name pos:start="27:20" pos:end="27:28">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:13">(<expr pos:start="29:9" pos:end="29:12"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:12">env</name></expr>)</condition> <block pos:start="29:15" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:16">

        <expr_stmt pos:start="31:9" pos:end="31:55"><expr pos:start="31:9" pos:end="31:54"><call pos:start="31:9" pos:end="31:54"><name pos:start="31:9" pos:end="31:15">fprintf</name><argument_list pos:start="31:16" pos:end="31:54">(<argument pos:start="31:17" pos:end="31:22"><expr pos:start="31:17" pos:end="31:22"><name pos:start="31:17" pos:end="31:22">stderr</name></expr></argument>, <argument pos:start="31:25" pos:end="31:53"><expr pos:start="31:25" pos:end="31:53"><literal type="string" pos:start="31:25" pos:end="31:53">"Unable to initialize CPU!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:16"><expr pos:start="33:9" pos:end="33:15"><call pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:12">exit</name><argument_list pos:start="33:13" pos:end="33:15">(<argument pos:start="33:14" pos:end="33:14"><expr pos:start="33:14" pos:end="33:14"><literal type="number" pos:start="33:14" pos:end="33:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:34"><expr pos:start="39:5" pos:end="39:33"><call pos:start="39:5" pos:end="39:33"><name pos:start="39:5" pos:end="39:16">ppc_dcr_init</name><argument_list pos:start="39:17" pos:end="39:33">(<argument pos:start="39:18" pos:end="39:20"><expr pos:start="39:18" pos:end="39:20"><name pos:start="39:18" pos:end="39:20">env</name></expr></argument>, <argument pos:start="39:23" pos:end="39:26"><expr pos:start="39:23" pos:end="39:26"><name pos:start="39:23" pos:end="39:26">NULL</name></expr></argument>, <argument pos:start="39:29" pos:end="39:32"><expr pos:start="39:29" pos:end="39:32"><name pos:start="39:29" pos:end="39:32">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:30">/* interrupt controller */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:61"><expr pos:start="45:5" pos:end="45:60"><name pos:start="45:5" pos:end="45:8">irqs</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <call pos:start="45:12" pos:end="45:60"><name pos:start="45:12" pos:end="45:23">qemu_mallocz</name><argument_list pos:start="45:24" pos:end="45:60">(<argument pos:start="45:25" pos:end="45:59"><expr pos:start="45:25" pos:end="45:59"><sizeof pos:start="45:25" pos:end="45:40">sizeof<argument_list pos:start="45:31" pos:end="45:40">(<argument pos:start="45:32" pos:end="45:39"><expr pos:start="45:32" pos:end="45:39"><name pos:start="45:32" pos:end="45:39">qemu_irq</name></expr></argument>)</argument_list></sizeof> <operator pos:start="45:42" pos:end="45:42">*</operator> <name pos:start="45:44" pos:end="45:59">PPCUIC_OUTPUT_NB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:78"><expr pos:start="47:5" pos:end="47:77"><name pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:8">irqs</name><index pos:start="47:9" pos:end="47:27">[<expr pos:start="47:10" pos:end="47:26"><name pos:start="47:10" pos:end="47:26">PPCUIC_OUTPUT_INT</name></expr>]</index></name> <operator pos:start="47:29" pos:end="47:29">=</operator> <operator pos:start="47:31" pos:end="47:31">(</operator><operator pos:start="47:32" pos:end="47:32">(</operator><name pos:start="47:33" pos:end="47:40">qemu_irq</name> <operator pos:start="47:42" pos:end="47:42">*</operator><operator pos:start="47:43" pos:end="47:43">)</operator><name pos:start="47:44" pos:end="47:58"><name pos:start="47:44" pos:end="47:46">env</name><operator pos:start="47:47" pos:end="47:48">-&gt;</operator><name pos:start="47:49" pos:end="47:58">irq_inputs</name></name><operator pos:start="47:59" pos:end="47:59">)</operator><index pos:start="47:60" pos:end="47:77">[<expr pos:start="47:61" pos:end="47:76"><name pos:start="47:61" pos:end="47:76">PPC40x_INPUT_INT</name></expr>]</index></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:80"><expr pos:start="49:5" pos:end="49:79"><name pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:8">irqs</name><index pos:start="49:9" pos:end="49:28">[<expr pos:start="49:10" pos:end="49:27"><name pos:start="49:10" pos:end="49:27">PPCUIC_OUTPUT_CINT</name></expr>]</index></name> <operator pos:start="49:30" pos:end="49:30">=</operator> <operator pos:start="49:32" pos:end="49:32">(</operator><operator pos:start="49:33" pos:end="49:33">(</operator><name pos:start="49:34" pos:end="49:41">qemu_irq</name> <operator pos:start="49:43" pos:end="49:43">*</operator><operator pos:start="49:44" pos:end="49:44">)</operator><name pos:start="49:45" pos:end="49:59"><name pos:start="49:45" pos:end="49:47">env</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:59">irq_inputs</name></name><operator pos:start="49:60" pos:end="49:60">)</operator><index pos:start="49:61" pos:end="49:79">[<expr pos:start="49:62" pos:end="49:78"><name pos:start="49:62" pos:end="49:78">PPC40x_INPUT_CINT</name></expr>]</index></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:7">pic</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:45"><name pos:start="51:11" pos:end="51:21">ppcuic_init</name><argument_list pos:start="51:22" pos:end="51:45">(<argument pos:start="51:23" pos:end="51:25"><expr pos:start="51:23" pos:end="51:25"><name pos:start="51:23" pos:end="51:25">env</name></expr></argument>, <argument pos:start="51:28" pos:end="51:31"><expr pos:start="51:28" pos:end="51:31"><name pos:start="51:28" pos:end="51:31">irqs</name></expr></argument>, <argument pos:start="51:34" pos:end="51:38"><expr pos:start="51:34" pos:end="51:38"><literal type="number" pos:start="51:34" pos:end="51:38">0x0C0</literal></expr></argument>, <argument pos:start="51:41" pos:end="51:41"><expr pos:start="51:41" pos:end="51:41"><literal type="number" pos:start="51:41" pos:end="51:41">0</literal></expr></argument>, <argument pos:start="51:44" pos:end="51:44"><expr pos:start="51:44" pos:end="51:44"><literal type="number" pos:start="51:44" pos:end="51:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:26">/* SDRAM controller */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:44"><expr pos:start="57:5" pos:end="57:43"><call pos:start="57:5" pos:end="57:43"><name pos:start="57:5" pos:end="57:10">memset</name><argument_list pos:start="57:11" pos:end="57:43">(<argument pos:start="57:12" pos:end="57:20"><expr pos:start="57:12" pos:end="57:20"><name pos:start="57:12" pos:end="57:20">ram_bases</name></expr></argument>, <argument pos:start="57:23" pos:end="57:23"><expr pos:start="57:23" pos:end="57:23"><literal type="number" pos:start="57:23" pos:end="57:23">0</literal></expr></argument>, <argument pos:start="57:26" pos:end="57:42"><expr pos:start="57:26" pos:end="57:42"><sizeof pos:start="57:26" pos:end="57:42">sizeof<argument_list pos:start="57:32" pos:end="57:42">(<argument pos:start="57:33" pos:end="57:41"><expr pos:start="57:33" pos:end="57:41"><name pos:start="57:33" pos:end="57:41">ram_bases</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:44"><expr pos:start="59:5" pos:end="59:43"><call pos:start="59:5" pos:end="59:43"><name pos:start="59:5" pos:end="59:10">memset</name><argument_list pos:start="59:11" pos:end="59:43">(<argument pos:start="59:12" pos:end="59:20"><expr pos:start="59:12" pos:end="59:20"><name pos:start="59:12" pos:end="59:20">ram_sizes</name></expr></argument>, <argument pos:start="59:23" pos:end="59:23"><expr pos:start="59:23" pos:end="59:23"><literal type="number" pos:start="59:23" pos:end="59:23">0</literal></expr></argument>, <argument pos:start="59:26" pos:end="59:42"><expr pos:start="59:26" pos:end="59:42"><sizeof pos:start="59:26" pos:end="59:42">sizeof<argument_list pos:start="59:32" pos:end="59:42">(<argument pos:start="59:33" pos:end="59:41"><expr pos:start="59:33" pos:end="59:41"><name pos:start="59:33" pos:end="59:41">ram_sizes</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="65:63"><expr pos:start="61:5" pos:end="65:62"><operator pos:start="61:5" pos:end="61:5">*</operator><name pos:start="61:6" pos:end="61:13">ram_size</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <call pos:start="61:17" pos:end="65:62"><name pos:start="61:17" pos:end="61:35">ppc4xx_sdram_adjust</name><argument_list pos:start="61:36" pos:end="65:62">(<argument pos:start="61:37" pos:end="61:45"><expr pos:start="61:37" pos:end="61:45"><operator pos:start="61:37" pos:end="61:37">*</operator><name pos:start="61:38" pos:end="61:45">ram_size</name></expr></argument>, <argument pos:start="61:48" pos:end="61:70"><expr pos:start="61:48" pos:end="61:70"><name pos:start="61:48" pos:end="61:70">PPC440EP_SDRAM_NR_BANKS</name></expr></argument>,

                                    <argument pos:start="63:37" pos:end="63:45"><expr pos:start="63:37" pos:end="63:45"><name pos:start="63:37" pos:end="63:45">ram_bases</name></expr></argument>, <argument pos:start="63:48" pos:end="63:56"><expr pos:start="63:48" pos:end="63:56"><name pos:start="63:48" pos:end="63:56">ram_sizes</name></expr></argument>,

                                    <argument pos:start="65:37" pos:end="65:61"><expr pos:start="65:37" pos:end="65:61"><name pos:start="65:37" pos:end="65:61">ppc440ep_sdram_bank_sizes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="67:5" pos:end="67:78">/* XXX 440EP's ECC interrupts are on UIC1, but we've only created UIC0. */</comment>

    <expr_stmt pos:start="69:5" pos:end="71:42"><expr pos:start="69:5" pos:end="71:41"><call pos:start="69:5" pos:end="71:41"><name pos:start="69:5" pos:end="69:21">ppc4xx_sdram_init</name><argument_list pos:start="69:22" pos:end="71:41">(<argument pos:start="69:23" pos:end="69:25"><expr pos:start="69:23" pos:end="69:25"><name pos:start="69:23" pos:end="69:25">env</name></expr></argument>, <argument pos:start="69:28" pos:end="69:34"><expr pos:start="69:28" pos:end="69:34"><name pos:start="69:28" pos:end="69:34"><name pos:start="69:28" pos:end="69:30">pic</name><index pos:start="69:31" pos:end="69:34">[<expr pos:start="69:32" pos:end="69:33"><literal type="number" pos:start="69:32" pos:end="69:33">14</literal></expr>]</index></name></expr></argument>, <argument pos:start="69:37" pos:end="69:59"><expr pos:start="69:37" pos:end="69:59"><name pos:start="69:37" pos:end="69:59">PPC440EP_SDRAM_NR_BANKS</name></expr></argument>, <argument pos:start="69:62" pos:end="69:70"><expr pos:start="69:62" pos:end="69:70"><name pos:start="69:62" pos:end="69:70">ram_bases</name></expr></argument>,

                      <argument pos:start="71:23" pos:end="71:31"><expr pos:start="71:23" pos:end="71:31"><name pos:start="71:23" pos:end="71:31">ram_sizes</name></expr></argument>, <argument pos:start="71:34" pos:end="71:40"><expr pos:start="71:34" pos:end="71:40"><name pos:start="71:34" pos:end="71:40">do_init</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:13">/* PCI */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:49"><expr pos:start="77:5" pos:end="77:48"><name pos:start="77:5" pos:end="77:12">pci_irqs</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <call pos:start="77:16" pos:end="77:48"><name pos:start="77:16" pos:end="77:26">qemu_malloc</name><argument_list pos:start="77:27" pos:end="77:48">(<argument pos:start="77:28" pos:end="77:47"><expr pos:start="77:28" pos:end="77:47"><sizeof pos:start="77:28" pos:end="77:43">sizeof<argument_list pos:start="77:34" pos:end="77:43">(<argument pos:start="77:35" pos:end="77:42"><expr pos:start="77:35" pos:end="77:42"><name pos:start="77:35" pos:end="77:42">qemu_irq</name></expr></argument>)</argument_list></sizeof> <operator pos:start="77:45" pos:end="77:45">*</operator> <literal type="number" pos:start="77:47" pos:end="77:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:38"><expr pos:start="79:5" pos:end="79:37"><name pos:start="79:5" pos:end="79:15"><name pos:start="79:5" pos:end="79:12">pci_irqs</name><index pos:start="79:13" pos:end="79:15">[<expr pos:start="79:14" pos:end="79:14"><literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr>]</index></name> <operator pos:start="79:17" pos:end="79:17">=</operator> <name pos:start="79:19" pos:end="79:37"><name pos:start="79:19" pos:end="79:21">pic</name><index pos:start="79:22" pos:end="79:37">[<expr pos:start="79:23" pos:end="79:36"><name pos:start="79:23" pos:end="79:36"><name pos:start="79:23" pos:end="79:33">pci_irq_nrs</name><index pos:start="79:34" pos:end="79:36">[<expr pos:start="79:35" pos:end="79:35"><literal type="number" pos:start="79:35" pos:end="79:35">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:38"><expr pos:start="81:5" pos:end="81:37"><name pos:start="81:5" pos:end="81:15"><name pos:start="81:5" pos:end="81:12">pci_irqs</name><index pos:start="81:13" pos:end="81:15">[<expr pos:start="81:14" pos:end="81:14"><literal type="number" pos:start="81:14" pos:end="81:14">1</literal></expr>]</index></name> <operator pos:start="81:17" pos:end="81:17">=</operator> <name pos:start="81:19" pos:end="81:37"><name pos:start="81:19" pos:end="81:21">pic</name><index pos:start="81:22" pos:end="81:37">[<expr pos:start="81:23" pos:end="81:36"><name pos:start="81:23" pos:end="81:36"><name pos:start="81:23" pos:end="81:33">pci_irq_nrs</name><index pos:start="81:34" pos:end="81:36">[<expr pos:start="81:35" pos:end="81:35"><literal type="number" pos:start="81:35" pos:end="81:35">1</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:38"><expr pos:start="83:5" pos:end="83:37"><name pos:start="83:5" pos:end="83:15"><name pos:start="83:5" pos:end="83:12">pci_irqs</name><index pos:start="83:13" pos:end="83:15">[<expr pos:start="83:14" pos:end="83:14"><literal type="number" pos:start="83:14" pos:end="83:14">2</literal></expr>]</index></name> <operator pos:start="83:17" pos:end="83:17">=</operator> <name pos:start="83:19" pos:end="83:37"><name pos:start="83:19" pos:end="83:21">pic</name><index pos:start="83:22" pos:end="83:37">[<expr pos:start="83:23" pos:end="83:36"><name pos:start="83:23" pos:end="83:36"><name pos:start="83:23" pos:end="83:33">pci_irq_nrs</name><index pos:start="83:34" pos:end="83:36">[<expr pos:start="83:35" pos:end="83:35"><literal type="number" pos:start="83:35" pos:end="83:35">2</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:38"><expr pos:start="85:5" pos:end="85:37"><name pos:start="85:5" pos:end="85:15"><name pos:start="85:5" pos:end="85:12">pci_irqs</name><index pos:start="85:13" pos:end="85:15">[<expr pos:start="85:14" pos:end="85:14"><literal type="number" pos:start="85:14" pos:end="85:14">3</literal></expr>]</index></name> <operator pos:start="85:17" pos:end="85:17">=</operator> <name pos:start="85:19" pos:end="85:37"><name pos:start="85:19" pos:end="85:21">pic</name><index pos:start="85:22" pos:end="85:37">[<expr pos:start="85:23" pos:end="85:36"><name pos:start="85:23" pos:end="85:36"><name pos:start="85:23" pos:end="85:33">pci_irq_nrs</name><index pos:start="85:34" pos:end="85:36">[<expr pos:start="85:35" pos:end="85:35"><literal type="number" pos:start="85:35" pos:end="85:35">3</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="95:47"><expr pos:start="87:5" pos:end="95:46"><operator pos:start="87:5" pos:end="87:5">*</operator><name pos:start="87:6" pos:end="87:9">pcip</name> <operator pos:start="87:11" pos:end="87:11">=</operator> <call pos:start="87:13" pos:end="95:46"><name pos:start="87:13" pos:end="87:27">ppc4xx_pci_init</name><argument_list pos:start="87:28" pos:end="95:46">(<argument pos:start="87:29" pos:end="87:31"><expr pos:start="87:29" pos:end="87:31"><name pos:start="87:29" pos:end="87:31">env</name></expr></argument>, <argument pos:start="87:34" pos:end="87:41"><expr pos:start="87:34" pos:end="87:41"><name pos:start="87:34" pos:end="87:41">pci_irqs</name></expr></argument>,

                            <argument pos:start="89:29" pos:end="89:47"><expr pos:start="89:29" pos:end="89:47"><name pos:start="89:29" pos:end="89:47">PPC440EP_PCI_CONFIG</name></expr></argument>,

                            <argument pos:start="91:29" pos:end="91:47"><expr pos:start="91:29" pos:end="91:47"><name pos:start="91:29" pos:end="91:47">PPC440EP_PCI_INTACK</name></expr></argument>,

                            <argument pos:start="93:29" pos:end="93:48"><expr pos:start="93:29" pos:end="93:48"><name pos:start="93:29" pos:end="93:48">PPC440EP_PCI_SPECIAL</name></expr></argument>,

                            <argument pos:start="95:29" pos:end="95:45"><expr pos:start="95:29" pos:end="95:45"><name pos:start="95:29" pos:end="95:45">PPC440EP_PCI_REGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="99:52"><if pos:start="97:5" pos:end="99:52">if <condition pos:start="97:8" pos:end="97:15">(<expr pos:start="97:9" pos:end="97:14"><operator pos:start="97:9" pos:end="97:9">!</operator><operator pos:start="97:10" pos:end="97:10">*</operator><name pos:start="97:11" pos:end="97:14">pcip</name></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:52"><block_content pos:start="99:9" pos:end="99:52">

        <expr_stmt pos:start="99:9" pos:end="99:52"><expr pos:start="99:9" pos:end="99:51"><call pos:start="99:9" pos:end="99:51"><name pos:start="99:9" pos:end="99:14">printf</name><argument_list pos:start="99:15" pos:end="99:51">(<argument pos:start="99:16" pos:end="99:50"><expr pos:start="99:16" pos:end="99:50"><literal type="string" pos:start="99:16" pos:end="99:50">"couldn't create PCI controller!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:55"><expr pos:start="103:5" pos:end="103:54"><call pos:start="103:5" pos:end="103:54"><name pos:start="103:5" pos:end="103:17">isa_mmio_init</name><argument_list pos:start="103:18" pos:end="103:54">(<argument pos:start="103:19" pos:end="103:33"><expr pos:start="103:19" pos:end="103:33"><name pos:start="103:19" pos:end="103:33">PPC440EP_PCI_IO</name></expr></argument>, <argument pos:start="103:36" pos:end="103:53"><expr pos:start="103:36" pos:end="103:53"><name pos:start="103:36" pos:end="103:53">PPC440EP_PCI_IOLEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="107:5" pos:end="113:5"><if pos:start="107:5" pos:end="113:5">if <condition pos:start="107:8" pos:end="107:30">(<expr pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:21"><name pos:start="107:9" pos:end="107:18">serial_hds</name><index pos:start="107:19" pos:end="107:21">[<expr pos:start="107:20" pos:end="107:20"><literal type="number" pos:start="107:20" pos:end="107:20">0</literal></expr>]</index></name> <operator pos:start="107:23" pos:end="107:24">!=</operator> <name pos:start="107:26" pos:end="107:29">NULL</name></expr>)</condition> <block pos:start="107:32" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:44">

        <expr_stmt pos:start="109:9" pos:end="111:44"><expr pos:start="109:9" pos:end="111:43"><call pos:start="109:9" pos:end="111:43"><name pos:start="109:9" pos:end="109:22">serial_mm_init</name><argument_list pos:start="109:23" pos:end="111:43">(<argument pos:start="109:24" pos:end="109:33"><expr pos:start="109:24" pos:end="109:33"><literal type="number" pos:start="109:24" pos:end="109:33">0xef600300</literal></expr></argument>, <argument pos:start="109:36" pos:end="109:36"><expr pos:start="109:36" pos:end="109:36"><literal type="number" pos:start="109:36" pos:end="109:36">0</literal></expr></argument>, <argument pos:start="109:39" pos:end="109:44"><expr pos:start="109:39" pos:end="109:44"><name pos:start="109:39" pos:end="109:44"><name pos:start="109:39" pos:end="109:41">pic</name><index pos:start="109:42" pos:end="109:44">[<expr pos:start="109:43" pos:end="109:43"><literal type="number" pos:start="109:43" pos:end="109:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="109:47" pos:end="109:68"><expr pos:start="109:47" pos:end="109:68"><name pos:start="109:47" pos:end="109:68">PPC_SERIAL_MM_BAUDBASE</name></expr></argument>,

                       <argument pos:start="111:24" pos:end="111:36"><expr pos:start="111:24" pos:end="111:36"><name pos:start="111:24" pos:end="111:36"><name pos:start="111:24" pos:end="111:33">serial_hds</name><index pos:start="111:34" pos:end="111:36">[<expr pos:start="111:35" pos:end="111:35"><literal type="number" pos:start="111:35" pos:end="111:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="111:39" pos:end="111:39"><expr pos:start="111:39" pos:end="111:39"><literal type="number" pos:start="111:39" pos:end="111:39">1</literal></expr></argument>, <argument pos:start="111:42" pos:end="111:42"><expr pos:start="111:42" pos:end="111:42"><literal type="number" pos:start="111:42" pos:end="111:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:30">(<expr pos:start="115:9" pos:end="115:29"><name pos:start="115:9" pos:end="115:21"><name pos:start="115:9" pos:end="115:18">serial_hds</name><index pos:start="115:19" pos:end="115:21">[<expr pos:start="115:20" pos:end="115:20"><literal type="number" pos:start="115:20" pos:end="115:20">1</literal></expr>]</index></name> <operator pos:start="115:23" pos:end="115:24">!=</operator> <name pos:start="115:26" pos:end="115:29">NULL</name></expr>)</condition> <block pos:start="115:32" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:44">

        <expr_stmt pos:start="117:9" pos:end="119:44"><expr pos:start="117:9" pos:end="119:43"><call pos:start="117:9" pos:end="119:43"><name pos:start="117:9" pos:end="117:22">serial_mm_init</name><argument_list pos:start="117:23" pos:end="119:43">(<argument pos:start="117:24" pos:end="117:33"><expr pos:start="117:24" pos:end="117:33"><literal type="number" pos:start="117:24" pos:end="117:33">0xef600400</literal></expr></argument>, <argument pos:start="117:36" pos:end="117:36"><expr pos:start="117:36" pos:end="117:36"><literal type="number" pos:start="117:36" pos:end="117:36">0</literal></expr></argument>, <argument pos:start="117:39" pos:end="117:44"><expr pos:start="117:39" pos:end="117:44"><name pos:start="117:39" pos:end="117:44"><name pos:start="117:39" pos:end="117:41">pic</name><index pos:start="117:42" pos:end="117:44">[<expr pos:start="117:43" pos:end="117:43"><literal type="number" pos:start="117:43" pos:end="117:43">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="117:47" pos:end="117:68"><expr pos:start="117:47" pos:end="117:68"><name pos:start="117:47" pos:end="117:68">PPC_SERIAL_MM_BAUDBASE</name></expr></argument>,

                       <argument pos:start="119:24" pos:end="119:36"><expr pos:start="119:24" pos:end="119:36"><name pos:start="119:24" pos:end="119:36"><name pos:start="119:24" pos:end="119:33">serial_hds</name><index pos:start="119:34" pos:end="119:36">[<expr pos:start="119:35" pos:end="119:35"><literal type="number" pos:start="119:35" pos:end="119:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:39" pos:end="119:39"><expr pos:start="119:39" pos:end="119:39"><literal type="number" pos:start="119:39" pos:end="119:39">1</literal></expr></argument>, <argument pos:start="119:42" pos:end="119:42"><expr pos:start="119:42" pos:end="119:42"><literal type="number" pos:start="119:42" pos:end="119:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="125:5" pos:end="125:15">return <expr pos:start="125:12" pos:end="125:14"><name pos:start="125:12" pos:end="125:14">env</name></expr>;</return>

</block_content>}</block></function>
</unit>
