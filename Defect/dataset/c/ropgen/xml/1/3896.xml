<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3896.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">xenstore_scan</name><parameter_list pos:start="1:25" pos:end="1:74">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><specifier pos:start="1:26" pos:end="1:30">const</specifier> <name pos:start="1:32" pos:end="1:35">char</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">type</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:50"><decl pos:start="1:44" pos:end="1:50"><type pos:start="1:44" pos:end="1:50"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:50">dom</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:73"><decl pos:start="1:53" pos:end="1:73"><type pos:start="1:53" pos:end="1:73"><name pos:start="1:53" pos:end="1:68"><name pos:start="1:53" pos:end="1:58">struct</name> <name pos:start="1:60" pos:end="1:68">XenDevOps</name></name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">ops</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">XenDevice</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">xendev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:26"><name pos:start="7:10" pos:end="7:13">path</name><index pos:start="7:14" pos:end="7:26">[<expr pos:start="7:15" pos:end="7:25"><name pos:start="7:15" pos:end="7:25">XEN_BUFSIZE</name></expr>]</index></name></decl>, <decl pos:start="7:29" pos:end="7:46"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:29" pos:end="7:46"><name pos:start="7:29" pos:end="7:33">token</name><index pos:start="7:34" pos:end="7:46">[<expr pos:start="7:35" pos:end="7:45"><name pos:start="7:35" pos:end="7:45">XEN_BUFSIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier><modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">dev</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>, <decl pos:start="9:24" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:11"><modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:28">dom0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:21">cdev</name></decl>, <decl pos:start="11:24" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:24" pos:end="11:24">j</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:21">/* setup watch */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:43"><expr pos:start="17:5" pos:end="17:42"><name pos:start="17:5" pos:end="17:8">dom0</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:42"><name pos:start="17:12" pos:end="17:29">xs_get_domain_path</name><argument_list pos:start="17:30" pos:end="17:42">(<argument pos:start="17:31" pos:end="17:38"><expr pos:start="17:31" pos:end="17:38"><name pos:start="17:31" pos:end="17:38">xenstore</name></expr></argument>, <argument pos:start="17:41" pos:end="17:41"><expr pos:start="17:41" pos:end="17:41"><literal type="number" pos:start="17:41" pos:end="17:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:66"><expr pos:start="19:5" pos:end="19:65"><call pos:start="19:5" pos:end="19:65"><name pos:start="19:5" pos:end="19:12">snprintf</name><argument_list pos:start="19:13" pos:end="19:65">(<argument pos:start="19:14" pos:end="19:18"><expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:18">token</name></expr></argument>, <argument pos:start="19:21" pos:end="19:33"><expr pos:start="19:21" pos:end="19:33"><sizeof pos:start="19:21" pos:end="19:33">sizeof<argument_list pos:start="19:27" pos:end="19:33">(<argument pos:start="19:28" pos:end="19:32"><expr pos:start="19:28" pos:end="19:32"><name pos:start="19:28" pos:end="19:32">token</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="19:36" pos:end="19:48"><expr pos:start="19:36" pos:end="19:48"><literal type="string" pos:start="19:36" pos:end="19:48">"be:%p:%d:%p"</literal></expr></argument>, <argument pos:start="19:51" pos:end="19:54"><expr pos:start="19:51" pos:end="19:54"><name pos:start="19:51" pos:end="19:54">type</name></expr></argument>, <argument pos:start="19:57" pos:end="19:59"><expr pos:start="19:57" pos:end="19:59"><name pos:start="19:57" pos:end="19:59">dom</name></expr></argument>, <argument pos:start="19:62" pos:end="19:64"><expr pos:start="19:62" pos:end="19:64"><name pos:start="19:62" pos:end="19:64">ops</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:70"><expr pos:start="21:5" pos:end="21:69"><call pos:start="21:5" pos:end="21:69"><name pos:start="21:5" pos:end="21:12">snprintf</name><argument_list pos:start="21:13" pos:end="21:69">(<argument pos:start="21:14" pos:end="21:17"><expr pos:start="21:14" pos:end="21:17"><name pos:start="21:14" pos:end="21:17">path</name></expr></argument>, <argument pos:start="21:20" pos:end="21:31"><expr pos:start="21:20" pos:end="21:31"><sizeof pos:start="21:20" pos:end="21:31">sizeof<argument_list pos:start="21:26" pos:end="21:31">(<argument pos:start="21:27" pos:end="21:30"><expr pos:start="21:27" pos:end="21:30"><name pos:start="21:27" pos:end="21:30">path</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="21:34" pos:end="21:51"><expr pos:start="21:34" pos:end="21:51"><literal type="string" pos:start="21:34" pos:end="21:51">"%s/backend/%s/%d"</literal></expr></argument>, <argument pos:start="21:54" pos:end="21:57"><expr pos:start="21:54" pos:end="21:57"><name pos:start="21:54" pos:end="21:57">dom0</name></expr></argument>, <argument pos:start="21:60" pos:end="21:63"><expr pos:start="21:60" pos:end="21:63"><name pos:start="21:60" pos:end="21:63">type</name></expr></argument>, <argument pos:start="21:66" pos:end="21:68"><expr pos:start="21:66" pos:end="21:68"><name pos:start="21:66" pos:end="21:68">dom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:15"><expr pos:start="23:5" pos:end="23:14"><call pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:8">free</name><argument_list pos:start="23:9" pos:end="23:14">(<argument pos:start="23:10" pos:end="23:13"><expr pos:start="23:10" pos:end="23:13"><name pos:start="23:10" pos:end="23:13">dom0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:41">(<expr pos:start="25:9" pos:end="25:40"><operator pos:start="25:9" pos:end="25:9">!</operator><call pos:start="25:10" pos:end="25:40"><name pos:start="25:10" pos:end="25:17">xs_watch</name><argument_list pos:start="25:18" pos:end="25:40">(<argument pos:start="25:19" pos:end="25:26"><expr pos:start="25:19" pos:end="25:26"><name pos:start="25:19" pos:end="25:26">xenstore</name></expr></argument>, <argument pos:start="25:29" pos:end="25:32"><expr pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:32">path</name></expr></argument>, <argument pos:start="25:35" pos:end="25:39"><expr pos:start="25:35" pos:end="25:39"><name pos:start="25:35" pos:end="25:39">token</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:43" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:84"><expr pos:start="27:9" pos:end="27:83"><call pos:start="27:9" pos:end="27:83"><name pos:start="27:9" pos:end="27:21">xen_be_printf</name><argument_list pos:start="27:22" pos:end="27:83">(<argument pos:start="27:23" pos:end="27:26"><expr pos:start="27:23" pos:end="27:26"><name pos:start="27:23" pos:end="27:26">NULL</name></expr></argument>, <argument pos:start="27:29" pos:end="27:29"><expr pos:start="27:29" pos:end="27:29"><literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr></argument>, <argument pos:start="27:32" pos:end="27:76"><expr pos:start="27:32" pos:end="27:76"><literal type="string" pos:start="27:32" pos:end="27:76">"xen be: watching backend path (%s) failed\n"</literal></expr></argument>, <argument pos:start="27:79" pos:end="27:82"><expr pos:start="27:79" pos:end="27:82"><name pos:start="27:79" pos:end="27:82">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:27">/* look for backends */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:49"><expr pos:start="37:5" pos:end="37:48"><name pos:start="37:5" pos:end="37:7">dev</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:48"><name pos:start="37:11" pos:end="37:22">xs_directory</name><argument_list pos:start="37:23" pos:end="37:48">(<argument pos:start="37:24" pos:end="37:31"><expr pos:start="37:24" pos:end="37:31"><name pos:start="37:24" pos:end="37:31">xenstore</name></expr></argument>, <argument pos:start="37:34" pos:end="37:34"><expr pos:start="37:34" pos:end="37:34"><literal type="number" pos:start="37:34" pos:end="37:34">0</literal></expr></argument>, <argument pos:start="37:37" pos:end="37:40"><expr pos:start="37:37" pos:end="37:40"><name pos:start="37:37" pos:end="37:40">path</name></expr></argument>, <argument pos:start="37:43" pos:end="37:47"><expr pos:start="37:43" pos:end="37:47"><operator pos:start="37:43" pos:end="37:43">&amp;</operator><name pos:start="37:44" pos:end="37:47">cdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:13">(<expr pos:start="39:9" pos:end="39:12"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:12">dev</name></expr>)</condition> <block pos:start="39:15" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:17">

        <return pos:start="41:9" pos:end="41:17">return <expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="45:5" pos:end="57:5">for <control pos:start="45:9" pos:end="45:30">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">j</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:25"><expr pos:start="45:17" pos:end="45:24"><name pos:start="45:17" pos:end="45:17">j</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:24">cdev</name></expr>;</condition> <incr pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:27">j</name><operator pos:start="45:28" pos:end="45:29">++</operator></expr></incr>)</control> <block pos:start="45:32" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:35">

        <expr_stmt pos:start="47:9" pos:end="47:65"><expr pos:start="47:9" pos:end="47:64"><name pos:start="47:9" pos:end="47:14">xendev</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <call pos:start="47:18" pos:end="47:64"><name pos:start="47:18" pos:end="47:34">xen_be_get_xendev</name><argument_list pos:start="47:35" pos:end="47:64">(<argument pos:start="47:36" pos:end="47:39"><expr pos:start="47:36" pos:end="47:39"><name pos:start="47:36" pos:end="47:39">type</name></expr></argument>, <argument pos:start="47:42" pos:end="47:44"><expr pos:start="47:42" pos:end="47:44"><name pos:start="47:42" pos:end="47:44">dom</name></expr></argument>, <argument pos:start="47:47" pos:end="47:58"><expr pos:start="47:47" pos:end="47:58"><call pos:start="47:47" pos:end="47:58"><name pos:start="47:47" pos:end="47:50">atoi</name><argument_list pos:start="47:51" pos:end="47:58">(<argument pos:start="47:52" pos:end="47:57"><expr pos:start="47:52" pos:end="47:57"><name pos:start="47:52" pos:end="47:57"><name pos:start="47:52" pos:end="47:54">dev</name><index pos:start="47:55" pos:end="47:57">[<expr pos:start="47:56" pos:end="47:56"><name pos:start="47:56" pos:end="47:56">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:61" pos:end="47:63"><expr pos:start="47:61" pos:end="47:63"><name pos:start="47:61" pos:end="47:63">ops</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:27">(<expr pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:18">xendev</name> <operator pos:start="49:20" pos:end="49:21">==</operator> <name pos:start="49:23" pos:end="49:26">NULL</name></expr>)</condition> <block pos:start="49:29" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:21">

            <continue pos:start="51:13" pos:end="51:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:35"><expr pos:start="55:9" pos:end="55:34"><call pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:26">xen_be_check_state</name><argument_list pos:start="55:27" pos:end="55:34">(<argument pos:start="55:28" pos:end="55:33"><expr pos:start="55:28" pos:end="55:33"><name pos:start="55:28" pos:end="55:33">xendev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="59:5" pos:end="59:14"><expr pos:start="59:5" pos:end="59:13"><call pos:start="59:5" pos:end="59:13"><name pos:start="59:5" pos:end="59:8">free</name><argument_list pos:start="59:9" pos:end="59:13">(<argument pos:start="59:10" pos:end="59:12"><expr pos:start="59:10" pos:end="59:12"><name pos:start="59:10" pos:end="59:12">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
