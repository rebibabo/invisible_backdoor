<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12516.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">exynos4210_fimd_update</name><parameter_list pos:start="1:35" pos:end="1:48">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:41"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:34">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">Exynos4210fimdState</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:26">s</name> <init pos:start="5:28" pos:end="5:58">= <expr pos:start="5:30" pos:end="5:58"><operator pos:start="5:30" pos:end="5:30">(</operator><name pos:start="5:31" pos:end="5:49">Exynos4210fimdState</name> <operator pos:start="5:51" pos:end="5:51">*</operator><operator pos:start="5:52" pos:end="5:52">)</operator><name pos:start="5:53" pos:end="5:58">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:63"><decl pos:start="7:5" pos:end="7:62"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">DisplaySurface</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:27">surface</name> <init pos:start="7:29" pos:end="7:62">= <expr pos:start="7:31" pos:end="7:62"><call pos:start="7:31" pos:end="7:62"><name pos:start="7:31" pos:end="7:50">qemu_console_surface</name><argument_list pos:start="7:51" pos:end="7:62">(<argument pos:start="7:52" pos:end="7:61"><expr pos:start="7:52" pos:end="7:61"><name pos:start="7:52" pos:end="7:61"><name pos:start="7:52" pos:end="7:52">s</name><operator pos:start="7:53" pos:end="7:54">-&gt;</operator><name pos:start="7:55" pos:end="7:61">console</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:24">Exynos4210fimdWindow</name> <modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:27">w</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:15">line</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">hwaddr</name></type> <name pos:start="13:12" pos:end="13:23">fb_line_addr</name></decl>, <decl pos:start="13:26" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:10"/><name pos:start="13:26" pos:end="13:33">inc_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">scrn_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:52"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:18">first_line</name> <init pos:start="17:20" pos:end="17:23">= <expr pos:start="17:22" pos:end="17:23"><operator pos:start="17:22" pos:end="17:22">-</operator><literal type="number" pos:start="17:23" pos:end="17:23">1</literal></expr></init></decl>, <decl pos:start="17:26" pos:end="17:39"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:26" pos:end="17:34">last_line</name> <init pos:start="17:36" pos:end="17:39">= <expr pos:start="17:38" pos:end="17:39"><operator pos:start="17:38" pos:end="17:38">-</operator><literal type="number" pos:start="17:39" pos:end="17:39">1</literal></expr></init></decl>, <decl pos:start="17:42" pos:end="17:51"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:42" pos:end="17:51">scrn_width</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">bool</name></type> <name pos:start="19:10" pos:end="19:14">blend</name> <init pos:start="19:16" pos:end="19:22">= <expr pos:start="19:18" pos:end="19:22"><name pos:start="19:18" pos:end="19:22">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:25">host_fb_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:26"><decl pos:start="23:5" pos:end="23:25"><type pos:start="23:5" pos:end="23:8"><name pos:start="23:5" pos:end="23:8">bool</name></type> <name pos:start="23:10" pos:end="23:17">is_dirty</name> <init pos:start="23:19" pos:end="23:25">= <expr pos:start="23:21" pos:end="23:25"><name pos:start="23:21" pos:end="23:25">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:75"><decl pos:start="25:5" pos:end="25:74"><type pos:start="25:5" pos:end="25:13"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:13">int</name></type> <name pos:start="25:15" pos:end="25:26">global_width</name> <init pos:start="25:28" pos:end="25:74">= <expr pos:start="25:30" pos:end="25:74"><operator pos:start="25:30" pos:end="25:30">(</operator><name pos:start="25:31" pos:end="25:43"><name pos:start="25:31" pos:end="25:31">s</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:40">vidtcon</name><index pos:start="25:41" pos:end="25:43">[<expr pos:start="25:42" pos:end="25:42"><literal type="number" pos:start="25:42" pos:end="25:42">2</literal></expr>]</index></name> <operator pos:start="25:45" pos:end="25:45">&amp;</operator> <name pos:start="25:47" pos:end="25:69">FIMD_VIDTCON2_SIZE_MASK</name><operator pos:start="25:70" pos:end="25:70">)</operator> <operator pos:start="25:72" pos:end="25:72">+</operator> <literal type="number" pos:start="25:74" pos:end="25:74">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="29:41"><decl pos:start="27:5" pos:end="29:40"><type pos:start="27:5" pos:end="27:13"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:13">int</name></type> <name pos:start="27:15" pos:end="27:27">global_height</name> <init pos:start="27:29" pos:end="29:40">= <expr pos:start="27:31" pos:end="29:40"><operator pos:start="27:31" pos:end="27:31">(</operator><operator pos:start="27:32" pos:end="27:32">(</operator><name pos:start="27:33" pos:end="27:45"><name pos:start="27:33" pos:end="27:33">s</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:42">vidtcon</name><index pos:start="27:43" pos:end="27:45">[<expr pos:start="27:44" pos:end="27:44"><literal type="number" pos:start="27:44" pos:end="27:44">2</literal></expr>]</index></name> <operator pos:start="27:47" pos:end="27:48">&gt;&gt;</operator> <name pos:start="27:50" pos:end="27:72">FIMD_VIDTCON2_VER_SHIFT</name><operator pos:start="27:73" pos:end="27:73">)</operator> <operator pos:start="27:75" pos:end="27:75">&amp;</operator>

            <name pos:start="29:13" pos:end="29:35">FIMD_VIDTCON2_SIZE_MASK</name><operator pos:start="29:36" pos:end="29:36">)</operator> <operator pos:start="29:38" pos:end="29:38">+</operator> <literal type="number" pos:start="29:40" pos:end="29:40">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="35:24">(<expr pos:start="33:9" pos:end="35:23"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:10">s</name> <operator pos:start="33:12" pos:end="33:13">||</operator> <operator pos:start="33:15" pos:end="33:15">!</operator><name pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:25">console</name></name> <operator pos:start="33:27" pos:end="33:28">||</operator> <operator pos:start="33:30" pos:end="33:30">!</operator><call pos:start="33:31" pos:end="33:61"><name pos:start="33:31" pos:end="33:52">surface_bits_per_pixel</name><argument_list pos:start="33:53" pos:end="33:61">(<argument pos:start="33:54" pos:end="33:60"><expr pos:start="33:54" pos:end="33:60"><name pos:start="33:54" pos:end="33:60">surface</name></expr></argument>)</argument_list></call> <operator pos:start="33:63" pos:end="33:64">||</operator>

            <operator pos:start="35:13" pos:end="35:13">!</operator><name pos:start="35:14" pos:end="35:23"><name pos:start="35:14" pos:end="35:14">s</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:23">enabled</name></name></expr>)</condition> <block pos:start="35:26" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:15">

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:36"><expr pos:start="41:5" pos:end="41:35"><call pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:32">exynos4210_update_resolution</name><argument_list pos:start="41:33" pos:end="41:35">(<argument pos:start="41:34" pos:end="41:34"><expr pos:start="41:34" pos:end="41:34"><name pos:start="41:34" pos:end="41:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="45:5" pos:end="111:5">for <control pos:start="45:9" pos:end="45:40">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:35"><expr pos:start="45:17" pos:end="45:34"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:34">NUM_OF_WINDOWS</name></expr>;</condition> <incr pos:start="45:37" pos:end="45:39"><expr pos:start="45:37" pos:end="45:39"><name pos:start="45:37" pos:end="45:37">i</name><operator pos:start="45:38" pos:end="45:39">++</operator></expr></incr>)</control> <block pos:start="45:42" pos:end="111:5">{<block_content pos:start="47:9" pos:end="109:9">

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:9">w</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <operator pos:start="47:13" pos:end="47:13">&amp;</operator><name pos:start="47:14" pos:end="47:25"><name pos:start="47:14" pos:end="47:14">s</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:22">window</name><index pos:start="47:23" pos:end="47:25">[<expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="109:9"><if pos:start="49:9" pos:end="109:9">if <condition pos:start="49:12" pos:end="49:63">(<expr pos:start="49:13" pos:end="49:62"><operator pos:start="49:13" pos:end="49:13">(</operator><name pos:start="49:14" pos:end="49:22"><name pos:start="49:14" pos:end="49:14">w</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:22">wincon</name></name> <operator pos:start="49:24" pos:end="49:24">&amp;</operator> <name pos:start="49:26" pos:end="49:42">FIMD_WINCON_ENWIN</name><operator pos:start="49:43" pos:end="49:43">)</operator> <operator pos:start="49:45" pos:end="49:46">&amp;&amp;</operator> <name pos:start="49:48" pos:end="49:62"><name pos:start="49:48" pos:end="49:48">w</name><operator pos:start="49:49" pos:end="49:50">-&gt;</operator><name pos:start="49:51" pos:end="49:62">host_fb_addr</name></name></expr>)</condition> <block pos:start="49:65" pos:end="109:9">{<block_content pos:start="51:13" pos:end="107:25">

            <expr_stmt pos:start="51:13" pos:end="51:59"><expr pos:start="51:13" pos:end="51:58"><name pos:start="51:13" pos:end="51:23">scrn_height</name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:39"><name pos:start="51:27" pos:end="51:27">w</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:39">rightbot_y</name></name> <operator pos:start="51:41" pos:end="51:41">-</operator> <name pos:start="51:43" pos:end="51:54"><name pos:start="51:43" pos:end="51:43">w</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:54">lefttop_y</name></name> <operator pos:start="51:56" pos:end="51:56">+</operator> <literal type="number" pos:start="51:58" pos:end="51:58">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:43"><expr pos:start="53:13" pos:end="53:42"><name pos:start="53:13" pos:end="53:22">scrn_width</name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:42"><name pos:start="53:26" pos:end="53:26">w</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:42">virtpage_width</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="55:13" pos:end="55:61">/* Total width of virtual screen page in bytes */</comment>

            <expr_stmt pos:start="57:13" pos:end="57:56"><expr pos:start="57:13" pos:end="57:55"><name pos:start="57:13" pos:end="57:20">inc_size</name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:33">scrn_width</name> <operator pos:start="57:35" pos:end="57:35">+</operator> <name pos:start="57:37" pos:end="57:55"><name pos:start="57:37" pos:end="57:37">w</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:55">virtpage_offsize</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:63"><expr pos:start="59:13" pos:end="59:62"><call pos:start="59:13" pos:end="59:62"><name pos:start="59:13" pos:end="59:43">memory_region_sync_dirty_bitmap</name><argument_list pos:start="59:44" pos:end="59:62">(<argument pos:start="59:45" pos:end="59:61"><expr pos:start="59:45" pos:end="59:61"><name pos:start="59:45" pos:end="59:61"><name pos:start="59:45" pos:end="59:45">w</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:58">mem_section</name><operator pos:start="59:59" pos:end="59:59">.</operator><name pos:start="59:60" pos:end="59:61">mr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:43"><expr pos:start="61:13" pos:end="61:42"><name pos:start="61:13" pos:end="61:24">host_fb_addr</name> <operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:42"><name pos:start="61:28" pos:end="61:28">w</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:42">host_fb_addr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:63"><expr pos:start="63:13" pos:end="63:62"><name pos:start="63:13" pos:end="63:24">fb_line_addr</name> <operator pos:start="63:26" pos:end="63:26">=</operator> <name pos:start="63:28" pos:end="63:62"><name pos:start="63:28" pos:end="63:28">w</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:41">mem_section</name><operator pos:start="63:42" pos:end="63:42">.</operator><name pos:start="63:43" pos:end="63:62">offset_within_region</name></name></expr>;</expr_stmt>



            <for pos:start="67:13" pos:end="99:13">for <control pos:start="67:17" pos:end="67:54">(<init pos:start="67:18" pos:end="67:26"><expr pos:start="67:18" pos:end="67:25"><name pos:start="67:18" pos:end="67:21">line</name> <operator pos:start="67:23" pos:end="67:23">=</operator> <literal type="number" pos:start="67:25" pos:end="67:25">0</literal></expr>;</init> <condition pos:start="67:28" pos:end="67:46"><expr pos:start="67:28" pos:end="67:45"><name pos:start="67:28" pos:end="67:31">line</name> <operator pos:start="67:33" pos:end="67:33">&lt;</operator> <name pos:start="67:35" pos:end="67:45">scrn_height</name></expr>;</condition> <incr pos:start="67:48" pos:end="67:53"><expr pos:start="67:48" pos:end="67:53"><name pos:start="67:48" pos:end="67:51">line</name><operator pos:start="67:52" pos:end="67:53">++</operator></expr></incr>)</control> <block pos:start="67:56" pos:end="99:13">{<block_content pos:start="69:17" pos:end="97:33">

                <expr_stmt pos:start="69:17" pos:end="71:72"><expr pos:start="69:17" pos:end="71:71"><name pos:start="69:17" pos:end="69:24">is_dirty</name> <operator pos:start="69:26" pos:end="69:26">=</operator> <call pos:start="69:28" pos:end="71:71"><name pos:start="69:28" pos:end="69:50">memory_region_get_dirty</name><argument_list pos:start="69:51" pos:end="71:71">(<argument pos:start="69:52" pos:end="69:68"><expr pos:start="69:52" pos:end="69:68"><name pos:start="69:52" pos:end="69:68"><name pos:start="69:52" pos:end="69:52">w</name><operator pos:start="69:53" pos:end="69:54">-&gt;</operator><name pos:start="69:55" pos:end="69:65">mem_section</name><operator pos:start="69:66" pos:end="69:66">.</operator><name pos:start="69:67" pos:end="69:68">mr</name></name></expr></argument>,

                            <argument pos:start="71:29" pos:end="71:40"><expr pos:start="71:29" pos:end="71:40"><name pos:start="71:29" pos:end="71:40">fb_line_addr</name></expr></argument>, <argument pos:start="71:43" pos:end="71:52"><expr pos:start="71:43" pos:end="71:52"><name pos:start="71:43" pos:end="71:52">scrn_width</name></expr></argument>, <argument pos:start="71:55" pos:end="71:70"><expr pos:start="71:55" pos:end="71:70"><name pos:start="71:55" pos:end="71:70">DIRTY_MEMORY_VGA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="75:17" pos:end="91:17"><if pos:start="75:17" pos:end="91:17">if <condition pos:start="75:20" pos:end="75:46">(<expr pos:start="75:21" pos:end="75:45"><name pos:start="75:21" pos:end="75:33"><name pos:start="75:21" pos:end="75:21">s</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:33">invalidate</name></name> <operator pos:start="75:35" pos:end="75:36">||</operator> <name pos:start="75:38" pos:end="75:45">is_dirty</name></expr>)</condition> <block pos:start="75:48" pos:end="91:17">{<block_content pos:start="77:21" pos:end="89:57">

                    <if_stmt pos:start="77:21" pos:end="81:21"><if pos:start="77:21" pos:end="81:21">if <condition pos:start="77:24" pos:end="77:41">(<expr pos:start="77:25" pos:end="77:40"><name pos:start="77:25" pos:end="77:34">first_line</name> <operator pos:start="77:36" pos:end="77:37">==</operator> <operator pos:start="77:39" pos:end="77:39">-</operator><literal type="number" pos:start="77:40" pos:end="77:40">1</literal></expr>)</condition> <block pos:start="77:43" pos:end="81:21">{<block_content pos:start="79:25" pos:end="79:42">

                        <expr_stmt pos:start="79:25" pos:end="79:42"><expr pos:start="79:25" pos:end="79:41"><name pos:start="79:25" pos:end="79:34">first_line</name> <operator pos:start="79:36" pos:end="79:36">=</operator> <name pos:start="79:38" pos:end="79:41">line</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:37"><expr pos:start="83:21" pos:end="83:36"><name pos:start="83:21" pos:end="83:29">last_line</name> <operator pos:start="83:31" pos:end="83:31">=</operator> <name pos:start="83:33" pos:end="83:36">line</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="89:57"><expr pos:start="85:21" pos:end="89:56"><call pos:start="85:21" pos:end="89:56"><name pos:start="85:21" pos:end="85:32"><name pos:start="85:21" pos:end="85:21">w</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:32">draw_line</name></name><argument_list pos:start="85:33" pos:end="89:56">(<argument pos:start="85:34" pos:end="85:34"><expr pos:start="85:34" pos:end="85:34"><name pos:start="85:34" pos:end="85:34">w</name></expr></argument>, <argument pos:start="85:37" pos:end="85:48"><expr pos:start="85:37" pos:end="85:48"><name pos:start="85:37" pos:end="85:48">host_fb_addr</name></expr></argument>, <argument pos:start="85:51" pos:end="89:48"><expr pos:start="85:51" pos:end="89:48"><name pos:start="85:51" pos:end="85:56"><name pos:start="85:51" pos:end="85:51">s</name><operator pos:start="85:52" pos:end="85:53">-&gt;</operator><name pos:start="85:54" pos:end="85:56">ifb</name></name> <operator pos:start="85:58" pos:end="85:58">+</operator>

                        <name pos:start="87:25" pos:end="87:36"><name pos:start="87:25" pos:end="87:25">w</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:36">lefttop_x</name></name> <operator pos:start="87:38" pos:end="87:38">*</operator> <name pos:start="87:40" pos:end="87:48">RGBA_SIZE</name> <operator pos:start="87:50" pos:end="87:50">+</operator> <operator pos:start="87:52" pos:end="87:52">(</operator><name pos:start="87:53" pos:end="87:64"><name pos:start="87:53" pos:end="87:53">w</name><operator pos:start="87:54" pos:end="87:55">-&gt;</operator><name pos:start="87:56" pos:end="87:64">lefttop_y</name></name> <operator pos:start="87:66" pos:end="87:66">+</operator> <name pos:start="87:68" pos:end="87:71">line</name><operator pos:start="87:72" pos:end="87:72">)</operator> <operator pos:start="87:74" pos:end="87:74">*</operator>

                        <name pos:start="89:25" pos:end="89:36">global_width</name> <operator pos:start="89:38" pos:end="89:38">*</operator> <name pos:start="89:40" pos:end="89:48">RGBA_SIZE</name></expr></argument>, <argument pos:start="89:51" pos:end="89:55"><expr pos:start="89:51" pos:end="89:55"><name pos:start="89:51" pos:end="89:55">blend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:41"><expr pos:start="93:17" pos:end="93:40"><name pos:start="93:17" pos:end="93:28">host_fb_addr</name> <operator pos:start="93:30" pos:end="93:31">+=</operator> <name pos:start="93:33" pos:end="93:40">inc_size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:41"><expr pos:start="95:17" pos:end="95:40"><name pos:start="95:17" pos:end="95:28">fb_line_addr</name> <operator pos:start="95:30" pos:end="95:31">+=</operator> <name pos:start="95:33" pos:end="95:40">inc_size</name></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:33"><expr pos:start="97:17" pos:end="97:32"><name pos:start="97:17" pos:end="97:24">is_dirty</name> <operator pos:start="97:26" pos:end="97:26">=</operator> <name pos:start="97:28" pos:end="97:32">false</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="101:13" pos:end="105:45"><expr pos:start="101:13" pos:end="105:44"><call pos:start="101:13" pos:end="105:44"><name pos:start="101:13" pos:end="101:37">memory_region_reset_dirty</name><argument_list pos:start="101:38" pos:end="105:44">(<argument pos:start="101:39" pos:end="101:55"><expr pos:start="101:39" pos:end="101:55"><name pos:start="101:39" pos:end="101:55"><name pos:start="101:39" pos:end="101:39">w</name><operator pos:start="101:40" pos:end="101:41">-&gt;</operator><name pos:start="101:42" pos:end="101:52">mem_section</name><operator pos:start="101:53" pos:end="101:53">.</operator><name pos:start="101:54" pos:end="101:55">mr</name></name></expr></argument>,

                <argument pos:start="103:17" pos:end="103:51"><expr pos:start="103:17" pos:end="103:51"><name pos:start="103:17" pos:end="103:51"><name pos:start="103:17" pos:end="103:17">w</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:30">mem_section</name><operator pos:start="103:31" pos:end="103:31">.</operator><name pos:start="103:32" pos:end="103:51">offset_within_region</name></name></expr></argument>,

                <argument pos:start="105:17" pos:end="105:25"><expr pos:start="105:17" pos:end="105:25"><name pos:start="105:17" pos:end="105:25"><name pos:start="105:17" pos:end="105:17">w</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:25">fb_len</name></name></expr></argument>, <argument pos:start="105:28" pos:end="105:43"><expr pos:start="105:28" pos:end="105:43"><name pos:start="105:28" pos:end="105:43">DIRTY_MEMORY_VGA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:25"><expr pos:start="107:13" pos:end="107:24"><name pos:start="107:13" pos:end="107:17">blend</name> <operator pos:start="107:19" pos:end="107:19">=</operator> <name pos:start="107:21" pos:end="107:24">true</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="115:5" pos:end="115:47">/* Copy resulting image to QEMU_CONSOLE. */</comment>

    <if_stmt pos:start="117:5" pos:end="143:5"><if pos:start="117:5" pos:end="143:5">if <condition pos:start="117:8" pos:end="117:24">(<expr pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:18">first_line</name> <operator pos:start="117:20" pos:end="117:21">&gt;=</operator> <literal type="number" pos:start="117:23" pos:end="117:23">0</literal></expr>)</condition> <block pos:start="117:26" pos:end="143:5">{<block_content pos:start="119:9" pos:end="141:70">

        <decl_stmt pos:start="119:9" pos:end="119:19"><decl pos:start="119:9" pos:end="119:18"><type pos:start="119:9" pos:end="119:17"><name pos:start="119:9" pos:end="119:15">uint8_t</name> <modifier pos:start="119:17" pos:end="119:17">*</modifier></type><name pos:start="119:18" pos:end="119:18">d</name></decl>;</decl_stmt>

        <decl_stmt pos:start="121:9" pos:end="121:16"><decl pos:start="121:9" pos:end="121:15"><type pos:start="121:9" pos:end="121:11"><name pos:start="121:9" pos:end="121:11">int</name></type> <name pos:start="121:13" pos:end="121:15">bpp</name></decl>;</decl_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:46"><expr pos:start="125:9" pos:end="125:45"><name pos:start="125:9" pos:end="125:11">bpp</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <call pos:start="125:15" pos:end="125:45"><name pos:start="125:15" pos:end="125:36">surface_bits_per_pixel</name><argument_list pos:start="125:37" pos:end="125:45">(<argument pos:start="125:38" pos:end="125:44"><expr pos:start="125:38" pos:end="125:44"><name pos:start="125:38" pos:end="125:44">surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:37"><expr pos:start="127:9" pos:end="127:36"><call pos:start="127:9" pos:end="127:36"><name pos:start="127:9" pos:end="127:31">fimd_update_putpix_qemu</name><argument_list pos:start="127:32" pos:end="127:36">(<argument pos:start="127:33" pos:end="127:35"><expr pos:start="127:33" pos:end="127:35"><name pos:start="127:33" pos:end="127:35">bpp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:29"><expr pos:start="129:9" pos:end="129:28"><name pos:start="129:9" pos:end="129:11">bpp</name> <operator pos:start="129:13" pos:end="129:13">=</operator> <operator pos:start="129:15" pos:end="129:15">(</operator><name pos:start="129:16" pos:end="129:18">bpp</name> <operator pos:start="129:20" pos:end="129:20">+</operator> <literal type="number" pos:start="129:22" pos:end="129:22">1</literal><operator pos:start="129:23" pos:end="129:23">)</operator> <operator pos:start="129:25" pos:end="129:26">&gt;&gt;</operator> <literal type="number" pos:start="129:28" pos:end="129:28">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:34"><expr pos:start="131:9" pos:end="131:33"><name pos:start="131:9" pos:end="131:9">d</name> <operator pos:start="131:11" pos:end="131:11">=</operator> <call pos:start="131:13" pos:end="131:33"><name pos:start="131:13" pos:end="131:24">surface_data</name><argument_list pos:start="131:25" pos:end="131:33">(<argument pos:start="131:26" pos:end="131:32"><expr pos:start="131:26" pos:end="131:32"><name pos:start="131:26" pos:end="131:32">surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="133:9" pos:end="139:9">for <control pos:start="133:13" pos:end="133:58">(<init pos:start="133:14" pos:end="133:31"><expr pos:start="133:14" pos:end="133:30"><name pos:start="133:14" pos:end="133:17">line</name> <operator pos:start="133:19" pos:end="133:19">=</operator> <name pos:start="133:21" pos:end="133:30">first_line</name></expr>;</init> <condition pos:start="133:33" pos:end="133:50"><expr pos:start="133:33" pos:end="133:49"><name pos:start="133:33" pos:end="133:36">line</name> <operator pos:start="133:38" pos:end="133:39">&lt;=</operator> <name pos:start="133:41" pos:end="133:49">last_line</name></expr>;</condition> <incr pos:start="133:52" pos:end="133:57"><expr pos:start="133:52" pos:end="133:57"><name pos:start="133:52" pos:end="133:55">line</name><operator pos:start="133:56" pos:end="133:57">++</operator></expr></incr>)</control> <block pos:start="133:60" pos:end="139:9">{<block_content pos:start="135:13" pos:end="137:62">

            <expr_stmt pos:start="135:13" pos:end="137:62"><expr pos:start="135:13" pos:end="137:61"><call pos:start="135:13" pos:end="137:61"><name pos:start="135:13" pos:end="135:33">fimd_copy_line_toqemu</name><argument_list pos:start="135:34" pos:end="137:61">(<argument pos:start="135:35" pos:end="135:46"><expr pos:start="135:35" pos:end="135:46"><name pos:start="135:35" pos:end="135:46">global_width</name></expr></argument>, <argument pos:start="135:49" pos:end="137:29"><expr pos:start="135:49" pos:end="137:29"><name pos:start="135:49" pos:end="135:54"><name pos:start="135:49" pos:end="135:49">s</name><operator pos:start="135:50" pos:end="135:51">-&gt;</operator><name pos:start="135:52" pos:end="135:54">ifb</name></name> <operator pos:start="135:56" pos:end="135:56">+</operator> <name pos:start="135:58" pos:end="135:69">global_width</name> <operator pos:start="135:71" pos:end="135:71">*</operator> <name pos:start="135:73" pos:end="135:76">line</name> <operator pos:start="135:78" pos:end="135:78">*</operator>

                    <name pos:start="137:21" pos:end="137:29">RGBA_SIZE</name></expr></argument>, <argument pos:start="137:32" pos:end="137:60"><expr pos:start="137:32" pos:end="137:60"><name pos:start="137:32" pos:end="137:32">d</name> <operator pos:start="137:34" pos:end="137:34">+</operator> <name pos:start="137:36" pos:end="137:47">global_width</name> <operator pos:start="137:49" pos:end="137:49">*</operator> <name pos:start="137:51" pos:end="137:54">line</name> <operator pos:start="137:56" pos:end="137:56">*</operator> <name pos:start="137:58" pos:end="137:60">bpp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="141:9" pos:end="141:70"><expr pos:start="141:9" pos:end="141:69"><call pos:start="141:9" pos:end="141:69"><name pos:start="141:9" pos:end="141:22">dpy_gfx_update</name><argument_list pos:start="141:23" pos:end="141:69">(<argument pos:start="141:24" pos:end="141:33"><expr pos:start="141:24" pos:end="141:33"><name pos:start="141:24" pos:end="141:33"><name pos:start="141:24" pos:end="141:24">s</name><operator pos:start="141:25" pos:end="141:26">-&gt;</operator><name pos:start="141:27" pos:end="141:33">console</name></name></expr></argument>, <argument pos:start="141:36" pos:end="141:36"><expr pos:start="141:36" pos:end="141:36"><literal type="number" pos:start="141:36" pos:end="141:36">0</literal></expr></argument>, <argument pos:start="141:39" pos:end="141:39"><expr pos:start="141:39" pos:end="141:39"><literal type="number" pos:start="141:39" pos:end="141:39">0</literal></expr></argument>, <argument pos:start="141:42" pos:end="141:53"><expr pos:start="141:42" pos:end="141:53"><name pos:start="141:42" pos:end="141:53">global_width</name></expr></argument>, <argument pos:start="141:56" pos:end="141:68"><expr pos:start="141:56" pos:end="141:68"><name pos:start="141:56" pos:end="141:68">global_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:26"><expr pos:start="145:5" pos:end="145:25"><name pos:start="145:5" pos:end="145:17"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:17">invalidate</name></name> <operator pos:start="145:19" pos:end="145:19">=</operator> <name pos:start="145:21" pos:end="145:25">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:46"><expr pos:start="147:5" pos:end="147:45"><name pos:start="147:5" pos:end="147:19"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:16">vidintcon</name><index pos:start="147:17" pos:end="147:19">[<expr pos:start="147:18" pos:end="147:18"><literal type="number" pos:start="147:18" pos:end="147:18">1</literal></expr>]</index></name> <operator pos:start="147:21" pos:end="147:22">|=</operator> <name pos:start="147:24" pos:end="147:45">FIMD_VIDINT_INTFRMPEND</name></expr>;</expr_stmt>

    <if_stmt pos:start="149:5" pos:end="153:5"><if pos:start="149:5" pos:end="153:5">if <condition pos:start="149:8" pos:end="149:51">(<expr pos:start="149:9" pos:end="149:50"><operator pos:start="149:9" pos:end="149:9">(</operator><name pos:start="149:10" pos:end="149:21"><name pos:start="149:10" pos:end="149:10">s</name><operator pos:start="149:11" pos:end="149:12">-&gt;</operator><name pos:start="149:13" pos:end="149:18">vidcon</name><index pos:start="149:19" pos:end="149:21">[<expr pos:start="149:20" pos:end="149:20"><literal type="number" pos:start="149:20" pos:end="149:20">0</literal></expr>]</index></name> <operator pos:start="149:23" pos:end="149:23">&amp;</operator> <name pos:start="149:25" pos:end="149:44">FIMD_VIDCON0_ENVID_F</name><operator pos:start="149:45" pos:end="149:45">)</operator> <operator pos:start="149:47" pos:end="149:48">==</operator> <literal type="number" pos:start="149:50" pos:end="149:50">0</literal></expr>)</condition> <block pos:start="149:53" pos:end="153:5">{<block_content pos:start="151:9" pos:end="151:41">

        <expr_stmt pos:start="151:9" pos:end="151:41"><expr pos:start="151:9" pos:end="151:40"><call pos:start="151:9" pos:end="151:40"><name pos:start="151:9" pos:end="151:30">exynos4210_fimd_enable</name><argument_list pos:start="151:31" pos:end="151:40">(<argument pos:start="151:32" pos:end="151:32"><expr pos:start="151:32" pos:end="151:32"><name pos:start="151:32" pos:end="151:32">s</name></expr></argument>, <argument pos:start="151:35" pos:end="151:39"><expr pos:start="151:35" pos:end="151:39"><name pos:start="151:35" pos:end="151:39">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:34"><expr pos:start="155:5" pos:end="155:33"><call pos:start="155:5" pos:end="155:33"><name pos:start="155:5" pos:end="155:30">exynos4210_fimd_update_irq</name><argument_list pos:start="155:31" pos:end="155:33">(<argument pos:start="155:32" pos:end="155:32"><expr pos:start="155:32" pos:end="155:32"><name pos:start="155:32" pos:end="155:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
