<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8495.c" pos:tabs="8"><function pos:start="1:1" pos:end="14:16"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:22">cpu_restore_state</name><parameter_list pos:start="1:23" pos:end="1:56">(<parameter pos:start="1:24" pos:end="1:36"><decl pos:start="1:24" pos:end="1:36"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:31">CPUState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">cpu</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:55"><decl pos:start="1:39" pos:end="1:55"><type pos:start="1:39" pos:end="1:55"><name pos:start="1:39" pos:end="1:47">uintptr_t</name></type> <name pos:start="1:49" pos:end="1:55">retaddr</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="14:16">{<block_content pos:start="3:5" pos:end="14:16">
    <decl_stmt pos:start="3:5" pos:end="3:25"><decl pos:start="3:5" pos:end="3:24"><type pos:start="3:5" pos:end="3:22"><name pos:start="3:5" pos:end="3:20">TranslationBlock</name> <modifier pos:start="3:22" pos:end="3:22">*</modifier></type><name pos:start="3:23" pos:end="3:24">tb</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:19"><decl pos:start="4:5" pos:end="4:18"><type pos:start="4:5" pos:end="4:8"><name pos:start="4:5" pos:end="4:8">bool</name></type> <name pos:start="4:10" pos:end="4:10">r</name> <init pos:start="4:12" pos:end="4:18">= <expr pos:start="4:14" pos:end="4:18"><name pos:start="4:14" pos:end="4:18">false</name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:14"><expr pos:start="5:5" pos:end="5:13"><call pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">tb_lock</name><argument_list pos:start="5:12" pos:end="5:13">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:29"><expr pos:start="6:5" pos:end="6:28"><name pos:start="6:5" pos:end="6:6">tb</name> <operator pos:start="6:8" pos:end="6:8">=</operator> <call pos:start="6:10" pos:end="6:28"><name pos:start="6:10" pos:end="6:19">tb_find_pc</name><argument_list pos:start="6:20" pos:end="6:28">(<argument pos:start="6:21" pos:end="6:27"><expr pos:start="6:21" pos:end="6:27"><name pos:start="6:21" pos:end="6:27">retaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="7:5" pos:end="14:16"><if pos:start="7:5" pos:end="14:16">if <condition pos:start="7:8" pos:end="7:11">(<expr pos:start="7:9" pos:end="7:10"><name pos:start="7:9" pos:end="7:10">tb</name></expr>)</condition> <block pos:start="7:13" pos:end="14:16">{<block_content pos:start="8:9" pos:end="14:16">
        <expr_stmt pos:start="8:9" pos:end="8:52"><expr pos:start="8:9" pos:end="8:51"><call pos:start="8:9" pos:end="8:51"><name pos:start="8:9" pos:end="8:33">cpu_restore_state_from_tb</name><argument_list pos:start="8:34" pos:end="8:51">(<argument pos:start="8:35" pos:end="8:37"><expr pos:start="8:35" pos:end="8:37"><name pos:start="8:35" pos:end="8:37">cpu</name></expr></argument>, <argument pos:start="8:40" pos:end="8:41"><expr pos:start="8:40" pos:end="8:41"><name pos:start="8:40" pos:end="8:41">tb</name></expr></argument>, <argument pos:start="8:44" pos:end="8:50"><expr pos:start="8:44" pos:end="8:50"><name pos:start="8:44" pos:end="8:50">retaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="9:9" pos:end="14:16"><if pos:start="9:9" pos:end="14:16">if <condition pos:start="9:12" pos:end="9:36">(<expr pos:start="9:13" pos:end="9:35"><name pos:start="9:13" pos:end="9:22"><name pos:start="9:13" pos:end="9:14">tb</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:22">cflags</name></name> <operator pos:start="9:24" pos:end="9:24">&amp;</operator> <name pos:start="9:26" pos:end="9:35">CF_NOCACHE</name></expr>)</condition> <block pos:start="9:38" pos:end="14:16">{<block_content pos:start="11:13" pos:end="14:16">
            <comment type="block" pos:start="10:13" pos:end="10:65">/* one-shot translation, invalidate it immediately */</comment>
            <expr_stmt pos:start="11:13" pos:end="11:39"><expr pos:start="11:13" pos:end="11:38"><call pos:start="11:13" pos:end="11:38"><name pos:start="11:13" pos:end="11:30">tb_phys_invalidate</name><argument_list pos:start="11:31" pos:end="11:38">(<argument pos:start="11:32" pos:end="11:33"><expr pos:start="11:32" pos:end="11:33"><name pos:start="11:32" pos:end="11:33">tb</name></expr></argument>, <argument pos:start="11:36" pos:end="11:37"><expr pos:start="11:36" pos:end="11:37"><operator pos:start="11:36" pos:end="11:36">-</operator><literal type="number" pos:start="11:37" pos:end="11:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="12:13" pos:end="12:24"><expr pos:start="12:13" pos:end="12:23"><call pos:start="12:13" pos:end="12:23"><name pos:start="12:13" pos:end="12:19">tb_free</name><argument_list pos:start="12:20" pos:end="12:23">(<argument pos:start="12:21" pos:end="12:22"><expr pos:start="12:21" pos:end="12:22"><name pos:start="12:21" pos:end="12:22">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:17"><expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:9">r</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <name pos:start="13:13" pos:end="13:16">true</name></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:16"><expr pos:start="14:5" pos:end="14:15"><call pos:start="14:5" pos:end="14:15"><name pos:start="14:5" pos:end="14:13">tb_unlock</name><argument_list pos:start="14:14" pos:end="14:15">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
