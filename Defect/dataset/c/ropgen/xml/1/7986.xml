<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7986.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:17"><name pos:start="1:1" pos:end="1:15">CharDriverState</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:39">qemu_chr_new_from_opts</name><parameter_list pos:start="1:40" pos:end="3:76">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:48">QemuOpts</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">opts</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:75"><function_decl pos:start="3:37" pos:end="3:75"><type pos:start="3:37" pos:end="3:40"><name pos:start="3:37" pos:end="3:40">void</name></type> (<modifier pos:start="3:43" pos:end="3:43">*</modifier><name pos:start="3:44" pos:end="3:47">init</name>)<parameter_list pos:start="3:49" pos:end="3:75">(<parameter pos:start="3:50" pos:end="3:74"><decl pos:start="3:50" pos:end="3:74"><type pos:start="3:50" pos:end="3:74"><name pos:start="3:50" pos:end="3:71"><name pos:start="3:50" pos:end="3:55">struct</name> <name pos:start="3:57" pos:end="3:71">CharDriverState</name></name> <modifier pos:start="3:73" pos:end="3:73">*</modifier></type><name pos:start="3:74" pos:end="3:74">s</name></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:1">{<block_content pos:start="7:5" pos:end="105:15">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">CharDriverState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">chr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:35">(<expr pos:start="15:9" pos:end="15:34"><call pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:20">qemu_opts_id</name><argument_list pos:start="15:21" pos:end="15:26">(<argument pos:start="15:22" pos:end="15:25"><expr pos:start="15:22" pos:end="15:25"><name pos:start="15:22" pos:end="15:25">opts</name></expr></argument>)</argument_list></call> <operator pos:start="15:28" pos:end="15:29">==</operator> <name pos:start="15:31" pos:end="15:34">NULL</name></expr>)</condition> <block pos:start="15:37" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:20">

        <expr_stmt pos:start="17:9" pos:end="17:54"><expr pos:start="17:9" pos:end="17:53"><call pos:start="17:9" pos:end="17:53"><name pos:start="17:9" pos:end="17:15">fprintf</name><argument_list pos:start="17:16" pos:end="17:53">(<argument pos:start="17:17" pos:end="17:22"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22">stderr</name></expr></argument>, <argument pos:start="17:25" pos:end="17:52"><expr pos:start="17:25" pos:end="17:52"><literal type="string" pos:start="17:25" pos:end="17:52">"chardev: no id specified\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:20">return <expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:46">(<expr pos:start="25:9" pos:end="25:45"><call pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:20">qemu_opt_get</name><argument_list pos:start="25:21" pos:end="25:37">(<argument pos:start="25:22" pos:end="25:25"><expr pos:start="25:22" pos:end="25:25"><name pos:start="25:22" pos:end="25:25">opts</name></expr></argument>, <argument pos:start="25:28" pos:end="25:36"><expr pos:start="25:28" pos:end="25:36"><literal type="string" pos:start="25:28" pos:end="25:36">"backend"</literal></expr></argument>)</argument_list></call> <operator pos:start="25:39" pos:end="25:40">==</operator> <name pos:start="25:42" pos:end="25:45">NULL</name></expr>)</condition> <block pos:start="25:48" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:20">

        <expr_stmt pos:start="27:9" pos:end="29:36"><expr pos:start="27:9" pos:end="29:35"><call pos:start="27:9" pos:end="29:35"><name pos:start="27:9" pos:end="27:15">fprintf</name><argument_list pos:start="27:16" pos:end="29:35">(<argument pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:22">stderr</name></expr></argument>, <argument pos:start="27:25" pos:end="27:59"><expr pos:start="27:25" pos:end="27:59"><literal type="string" pos:start="27:25" pos:end="27:59">"chardev: \"%s\" missing backend\n"</literal></expr></argument>,

                <argument pos:start="29:17" pos:end="29:34"><expr pos:start="29:17" pos:end="29:34"><call pos:start="29:17" pos:end="29:34"><name pos:start="29:17" pos:end="29:28">qemu_opts_id</name><argument_list pos:start="29:29" pos:end="29:34">(<argument pos:start="29:30" pos:end="29:33"><expr pos:start="29:30" pos:end="29:33"><name pos:start="29:30" pos:end="29:33">opts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:20">return <expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="35:5" pos:end="41:5">for <control pos:start="35:9" pos:end="35:51">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:46"><expr pos:start="35:17" pos:end="35:45"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <call pos:start="35:21" pos:end="35:45"><name pos:start="35:21" pos:end="35:30">ARRAY_SIZE</name><argument_list pos:start="35:31" pos:end="35:45">(<argument pos:start="35:32" pos:end="35:44"><expr pos:start="35:32" pos:end="35:44"><name pos:start="35:32" pos:end="35:44">backend_table</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="35:48" pos:end="35:50"><expr pos:start="35:48" pos:end="35:50"><name pos:start="35:48" pos:end="35:48">i</name><operator pos:start="35:49" pos:end="35:50">++</operator></expr></incr>)</control> <block pos:start="35:53" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <if_stmt pos:start="37:9" pos:end="39:18"><if pos:start="37:9" pos:end="39:18">if <condition pos:start="37:12" pos:end="37:78">(<expr pos:start="37:13" pos:end="37:77"><call pos:start="37:13" pos:end="37:72"><name pos:start="37:13" pos:end="37:18">strcmp</name><argument_list pos:start="37:19" pos:end="37:72">(<argument pos:start="37:20" pos:end="37:40"><expr pos:start="37:20" pos:end="37:40"><name pos:start="37:20" pos:end="37:35"><name pos:start="37:20" pos:end="37:32">backend_table</name><index pos:start="37:33" pos:end="37:35">[<expr pos:start="37:34" pos:end="37:34"><name pos:start="37:34" pos:end="37:34">i</name></expr>]</index></name><operator pos:start="37:36" pos:end="37:36">.</operator><name pos:start="37:37" pos:end="37:40">name</name></expr></argument>, <argument pos:start="37:43" pos:end="37:71"><expr pos:start="37:43" pos:end="37:71"><call pos:start="37:43" pos:end="37:71"><name pos:start="37:43" pos:end="37:54">qemu_opt_get</name><argument_list pos:start="37:55" pos:end="37:71">(<argument pos:start="37:56" pos:end="37:59"><expr pos:start="37:56" pos:end="37:59"><name pos:start="37:56" pos:end="37:59">opts</name></expr></argument>, <argument pos:start="37:62" pos:end="37:70"><expr pos:start="37:62" pos:end="37:70"><literal type="string" pos:start="37:62" pos:end="37:70">"backend"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="37:74" pos:end="37:75">==</operator> <literal type="number" pos:start="37:77" pos:end="37:77">0</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:18"><block_content pos:start="39:13" pos:end="39:18">

            <break pos:start="39:13" pos:end="39:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:39">(<expr pos:start="43:9" pos:end="43:38"><name pos:start="43:9" pos:end="43:9">i</name> <operator pos:start="43:11" pos:end="43:12">==</operator> <call pos:start="43:14" pos:end="43:38"><name pos:start="43:14" pos:end="43:23">ARRAY_SIZE</name><argument_list pos:start="43:24" pos:end="43:38">(<argument pos:start="43:25" pos:end="43:37"><expr pos:start="43:25" pos:end="43:37"><name pos:start="43:25" pos:end="43:37">backend_table</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:41" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:20">

        <expr_stmt pos:start="45:9" pos:end="47:47"><expr pos:start="45:9" pos:end="47:46"><call pos:start="45:9" pos:end="47:46"><name pos:start="45:9" pos:end="45:15">fprintf</name><argument_list pos:start="45:16" pos:end="47:46">(<argument pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:22">stderr</name></expr></argument>, <argument pos:start="45:25" pos:end="45:61"><expr pos:start="45:25" pos:end="45:61"><literal type="string" pos:start="45:25" pos:end="45:61">"chardev: backend \"%s\" not found\n"</literal></expr></argument>,

                <argument pos:start="47:17" pos:end="47:45"><expr pos:start="47:17" pos:end="47:45"><call pos:start="47:17" pos:end="47:45"><name pos:start="47:17" pos:end="47:28">qemu_opt_get</name><argument_list pos:start="47:29" pos:end="47:45">(<argument pos:start="47:30" pos:end="47:33"><expr pos:start="47:30" pos:end="47:33"><name pos:start="47:30" pos:end="47:33">opts</name></expr></argument>, <argument pos:start="47:36" pos:end="47:44"><expr pos:start="47:36" pos:end="47:44"><literal type="string" pos:start="47:36" pos:end="47:44">"backend"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:20">return <expr pos:start="49:16" pos:end="49:19"><name pos:start="49:16" pos:end="49:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:44"><expr pos:start="55:5" pos:end="55:43"><name pos:start="55:5" pos:end="55:7">ret</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <name pos:start="55:11" pos:end="55:26"><name pos:start="55:11" pos:end="55:23">backend_table</name><index pos:start="55:24" pos:end="55:26">[<expr pos:start="55:25" pos:end="55:25"><name pos:start="55:25" pos:end="55:25">i</name></expr>]</index></name><operator pos:start="55:27" pos:end="55:27">.</operator><call pos:start="55:28" pos:end="55:43"><name pos:start="55:28" pos:end="55:31">open</name><argument_list pos:start="55:32" pos:end="55:43">(<argument pos:start="55:33" pos:end="55:36"><expr pos:start="55:33" pos:end="55:36"><name pos:start="55:33" pos:end="55:36">opts</name></expr></argument>, <argument pos:start="55:39" pos:end="55:42"><expr pos:start="55:39" pos:end="55:42"><operator pos:start="55:39" pos:end="55:39">&amp;</operator><name pos:start="55:40" pos:end="55:42">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="65:5"><if pos:start="57:5" pos:end="65:5">if <condition pos:start="57:8" pos:end="57:16">(<expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">&lt;</operator> <literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>)</condition> <block pos:start="57:18" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:20">

        <expr_stmt pos:start="59:9" pos:end="61:63"><expr pos:start="59:9" pos:end="61:62"><call pos:start="59:9" pos:end="61:62"><name pos:start="59:9" pos:end="59:15">fprintf</name><argument_list pos:start="59:16" pos:end="61:62">(<argument pos:start="59:17" pos:end="59:22"><expr pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:22">stderr</name></expr></argument>, <argument pos:start="59:25" pos:end="59:70"><expr pos:start="59:25" pos:end="59:70"><literal type="string" pos:start="59:25" pos:end="59:70">"chardev: opening backend \"%s\" failed: %s\n"</literal></expr></argument>,

                <argument pos:start="61:17" pos:end="61:45"><expr pos:start="61:17" pos:end="61:45"><call pos:start="61:17" pos:end="61:45"><name pos:start="61:17" pos:end="61:28">qemu_opt_get</name><argument_list pos:start="61:29" pos:end="61:45">(<argument pos:start="61:30" pos:end="61:33"><expr pos:start="61:30" pos:end="61:33"><name pos:start="61:30" pos:end="61:33">opts</name></expr></argument>, <argument pos:start="61:36" pos:end="61:44"><expr pos:start="61:36" pos:end="61:44"><literal type="string" pos:start="61:36" pos:end="61:44">"backend"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:48" pos:end="61:61"><expr pos:start="61:48" pos:end="61:61"><call pos:start="61:48" pos:end="61:61"><name pos:start="61:48" pos:end="61:55">strerror</name><argument_list pos:start="61:56" pos:end="61:61">(<argument pos:start="61:57" pos:end="61:60"><expr pos:start="61:57" pos:end="61:60"><operator pos:start="61:57" pos:end="61:57">-</operator><name pos:start="61:58" pos:end="61:60">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:20">return <expr pos:start="63:16" pos:end="63:19"><name pos:start="63:16" pos:end="63:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="71:64"><if pos:start="69:5" pos:end="71:64">if <condition pos:start="69:8" pos:end="69:23">(<expr pos:start="69:9" pos:end="69:22"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:22"><name pos:start="69:10" pos:end="69:12">chr</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:22">filename</name></name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:64"><block_content pos:start="71:9" pos:end="71:64">

        <expr_stmt pos:start="71:9" pos:end="71:64"><expr pos:start="71:9" pos:end="71:63"><name pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:11">chr</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:21">filename</name></name> <operator pos:start="71:23" pos:end="71:23">=</operator> <call pos:start="71:25" pos:end="71:63"><name pos:start="71:25" pos:end="71:32">g_strdup</name><argument_list pos:start="71:33" pos:end="71:63">(<argument pos:start="71:34" pos:end="71:62"><expr pos:start="71:34" pos:end="71:62"><call pos:start="71:34" pos:end="71:62"><name pos:start="71:34" pos:end="71:45">qemu_opt_get</name><argument_list pos:start="71:46" pos:end="71:62">(<argument pos:start="71:47" pos:end="71:50"><expr pos:start="71:47" pos:end="71:50"><name pos:start="71:47" pos:end="71:50">opts</name></expr></argument>, <argument pos:start="71:53" pos:end="71:61"><expr pos:start="71:53" pos:end="71:61"><literal type="string" pos:start="71:53" pos:end="71:61">"backend"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:21"><expr pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:13"><name pos:start="73:5" pos:end="73:7">chr</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:13">init</name></name> <operator pos:start="73:15" pos:end="73:15">=</operator> <name pos:start="73:17" pos:end="73:20">init</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:45"><expr pos:start="75:5" pos:end="75:44"><call pos:start="75:5" pos:end="75:44"><name pos:start="75:5" pos:end="75:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="75:23" pos:end="75:44">(<argument pos:start="75:24" pos:end="75:32"><expr pos:start="75:24" pos:end="75:32"><operator pos:start="75:24" pos:end="75:24">&amp;</operator><name pos:start="75:25" pos:end="75:32">chardevs</name></expr></argument>, <argument pos:start="75:35" pos:end="75:37"><expr pos:start="75:35" pos:end="75:37"><name pos:start="75:35" pos:end="75:37">chr</name></expr></argument>, <argument pos:start="75:40" pos:end="75:43"><expr pos:start="75:40" pos:end="75:43"><name pos:start="75:40" pos:end="75:43">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="101:5"><if pos:start="79:5" pos:end="97:5">if <condition pos:start="79:8" pos:end="79:42">(<expr pos:start="79:9" pos:end="79:41"><call pos:start="79:9" pos:end="79:41"><name pos:start="79:9" pos:end="79:25">qemu_opt_get_bool</name><argument_list pos:start="79:26" pos:end="79:41">(<argument pos:start="79:27" pos:end="79:30"><expr pos:start="79:27" pos:end="79:30"><name pos:start="79:27" pos:end="79:30">opts</name></expr></argument>, <argument pos:start="79:33" pos:end="79:37"><expr pos:start="79:33" pos:end="79:37"><literal type="string" pos:start="79:33" pos:end="79:37">"mux"</literal></expr></argument>, <argument pos:start="79:40" pos:end="79:40"><expr pos:start="79:40" pos:end="79:40"><literal type="number" pos:start="79:40" pos:end="79:40">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:44" pos:end="97:5">{<block_content pos:start="81:9" pos:end="95:49">

        <decl_stmt pos:start="81:9" pos:end="81:36"><decl pos:start="81:9" pos:end="81:35"><type pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:23">CharDriverState</name> <modifier pos:start="81:25" pos:end="81:25">*</modifier></type><name pos:start="81:26" pos:end="81:29">base</name> <init pos:start="81:31" pos:end="81:35">= <expr pos:start="81:33" pos:end="81:35"><name pos:start="81:33" pos:end="81:35">chr</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="83:9" pos:end="83:49"><decl pos:start="83:9" pos:end="83:48"><type pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">int</name></type> <name pos:start="83:13" pos:end="83:15">len</name> <init pos:start="83:17" pos:end="83:48">= <expr pos:start="83:19" pos:end="83:48"><call pos:start="83:19" pos:end="83:44"><name pos:start="83:19" pos:end="83:24">strlen</name><argument_list pos:start="83:25" pos:end="83:44">(<argument pos:start="83:26" pos:end="83:43"><expr pos:start="83:26" pos:end="83:43"><call pos:start="83:26" pos:end="83:43"><name pos:start="83:26" pos:end="83:37">qemu_opts_id</name><argument_list pos:start="83:38" pos:end="83:43">(<argument pos:start="83:39" pos:end="83:42"><expr pos:start="83:39" pos:end="83:42"><name pos:start="83:39" pos:end="83:42">opts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="83:46" pos:end="83:46">+</operator> <literal type="number" pos:start="83:48" pos:end="83:48">6</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:36"><expr pos:start="85:9" pos:end="85:35"><name pos:start="85:9" pos:end="85:19"><name pos:start="85:9" pos:end="85:12">base</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:19">label</name></name> <operator pos:start="85:21" pos:end="85:21">=</operator> <call pos:start="85:23" pos:end="85:35"><name pos:start="85:23" pos:end="85:30">g_malloc</name><argument_list pos:start="85:31" pos:end="85:35">(<argument pos:start="85:32" pos:end="85:34"><expr pos:start="85:32" pos:end="85:34"><name pos:start="85:32" pos:end="85:34">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:66"><expr pos:start="87:9" pos:end="87:65"><call pos:start="87:9" pos:end="87:65"><name pos:start="87:9" pos:end="87:16">snprintf</name><argument_list pos:start="87:17" pos:end="87:65">(<argument pos:start="87:18" pos:end="87:28"><expr pos:start="87:18" pos:end="87:28"><name pos:start="87:18" pos:end="87:28"><name pos:start="87:18" pos:end="87:21">base</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:28">label</name></name></expr></argument>, <argument pos:start="87:31" pos:end="87:33"><expr pos:start="87:31" pos:end="87:33"><name pos:start="87:31" pos:end="87:33">len</name></expr></argument>, <argument pos:start="87:36" pos:end="87:44"><expr pos:start="87:36" pos:end="87:44"><literal type="string" pos:start="87:36" pos:end="87:44">"%s-base"</literal></expr></argument>, <argument pos:start="87:47" pos:end="87:64"><expr pos:start="87:47" pos:end="87:64"><call pos:start="87:47" pos:end="87:64"><name pos:start="87:47" pos:end="87:58">qemu_opts_id</name><argument_list pos:start="87:59" pos:end="87:64">(<argument pos:start="87:60" pos:end="87:63"><expr pos:start="87:60" pos:end="87:63"><name pos:start="87:60" pos:end="87:63">opts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:38"><expr pos:start="89:9" pos:end="89:37"><name pos:start="89:9" pos:end="89:11">chr</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:37"><name pos:start="89:15" pos:end="89:31">qemu_chr_open_mux</name><argument_list pos:start="89:32" pos:end="89:37">(<argument pos:start="89:33" pos:end="89:36"><expr pos:start="89:33" pos:end="89:36"><name pos:start="89:33" pos:end="89:36">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:39"><expr pos:start="91:9" pos:end="91:38"><name pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:11">chr</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:21">filename</name></name> <operator pos:start="91:23" pos:end="91:23">=</operator> <name pos:start="91:25" pos:end="91:38"><name pos:start="91:25" pos:end="91:28">base</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:38">filename</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:41"><expr pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:30"><name pos:start="93:9" pos:end="93:11">chr</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:30">avail_connections</name></name> <operator pos:start="93:32" pos:end="93:32">=</operator> <name pos:start="93:34" pos:end="93:40">MAX_MUX</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:49"><expr pos:start="95:9" pos:end="95:48"><call pos:start="95:9" pos:end="95:48"><name pos:start="95:9" pos:end="95:26">QTAILQ_INSERT_TAIL</name><argument_list pos:start="95:27" pos:end="95:48">(<argument pos:start="95:28" pos:end="95:36"><expr pos:start="95:28" pos:end="95:36"><operator pos:start="95:28" pos:end="95:28">&amp;</operator><name pos:start="95:29" pos:end="95:36">chardevs</name></expr></argument>, <argument pos:start="95:39" pos:end="95:41"><expr pos:start="95:39" pos:end="95:41"><name pos:start="95:39" pos:end="95:41">chr</name></expr></argument>, <argument pos:start="95:44" pos:end="95:47"><expr pos:start="95:44" pos:end="95:47"><name pos:start="95:44" pos:end="95:47">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="101:5">else <block pos:start="97:12" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:35">

        <expr_stmt pos:start="99:9" pos:end="99:35"><expr pos:start="99:9" pos:end="99:34"><name pos:start="99:9" pos:end="99:30"><name pos:start="99:9" pos:end="99:11">chr</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:30">avail_connections</name></name> <operator pos:start="99:32" pos:end="99:32">=</operator> <literal type="number" pos:start="99:34" pos:end="99:34">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:46"><expr pos:start="103:5" pos:end="103:45"><name pos:start="103:5" pos:end="103:14"><name pos:start="103:5" pos:end="103:7">chr</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:14">label</name></name> <operator pos:start="103:16" pos:end="103:16">=</operator> <call pos:start="103:18" pos:end="103:45"><name pos:start="103:18" pos:end="103:25">g_strdup</name><argument_list pos:start="103:26" pos:end="103:45">(<argument pos:start="103:27" pos:end="103:44"><expr pos:start="103:27" pos:end="103:44"><call pos:start="103:27" pos:end="103:44"><name pos:start="103:27" pos:end="103:38">qemu_opts_id</name><argument_list pos:start="103:39" pos:end="103:44">(<argument pos:start="103:40" pos:end="103:43"><expr pos:start="103:40" pos:end="103:43"><name pos:start="103:40" pos:end="103:43">opts</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="105:5" pos:end="105:15">return <expr pos:start="105:12" pos:end="105:14"><name pos:start="105:12" pos:end="105:14">chr</name></expr>;</return>

</block_content>}</block></function>
</unit>
