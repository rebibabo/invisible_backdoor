<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11733.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:38"><name pos:start="1:1" pos:end="1:9">MKSCALE16</name><argument_list pos:start="1:10" pos:end="1:38">(<argument pos:start="1:11" pos:end="1:19">scale16be</argument>, <argument pos:start="1:22" pos:end="1:28">AV_RB16</argument>, <argument pos:start="1:31" pos:end="1:37">AV_WB16</argument>)</argument_list></macro>

<macro pos:start="3:1" pos:end="3:38"><name pos:start="3:1" pos:end="3:9">MKSCALE16</name><argument_list pos:start="3:10" pos:end="3:38">(<argument pos:start="3:11" pos:end="3:19">scale16le</argument>, <argument pos:start="3:22" pos:end="3:28">AV_RL16</argument>, <argument pos:start="3:31" pos:end="3:37">AV_WL16</argument>)</argument_list></macro>



<function pos:start="7:1" pos:end="499:1"><type pos:start="7:1" pos:end="7:10"><specifier pos:start="7:1" pos:end="7:6">static</specifier> <name pos:start="7:8" pos:end="7:10">int</name></type> <name pos:start="7:12" pos:end="7:21">raw_decode</name><parameter_list pos:start="7:22" pos:end="9:38">(<parameter pos:start="7:23" pos:end="7:43"><decl pos:start="7:23" pos:end="7:43"><type pos:start="7:23" pos:end="7:43"><name pos:start="7:23" pos:end="7:36">AVCodecContext</name> <modifier pos:start="7:38" pos:end="7:38">*</modifier></type><name pos:start="7:39" pos:end="7:43">avctx</name></decl></parameter>, <parameter pos:start="7:46" pos:end="7:55"><decl pos:start="7:46" pos:end="7:55"><type pos:start="7:46" pos:end="7:55"><name pos:start="7:46" pos:end="7:49">void</name> <modifier pos:start="7:51" pos:end="7:51">*</modifier></type><name pos:start="7:52" pos:end="7:55">data</name></decl></parameter>, <parameter pos:start="7:58" pos:end="7:71"><decl pos:start="7:58" pos:end="7:71"><type pos:start="7:58" pos:end="7:71"><name pos:start="7:58" pos:end="7:60">int</name> <modifier pos:start="7:62" pos:end="7:62">*</modifier></type><name pos:start="7:63" pos:end="7:71">got_frame</name></decl></parameter>,

                      <parameter pos:start="9:23" pos:end="9:37"><decl pos:start="9:23" pos:end="9:37"><type pos:start="9:23" pos:end="9:37"><name pos:start="9:23" pos:end="9:30">AVPacket</name> <modifier pos:start="9:32" pos:end="9:32">*</modifier></type><name pos:start="9:33" pos:end="9:37">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="499:1">{<block_content pos:start="13:5" pos:end="497:20">

    <decl_stmt pos:start="13:5" pos:end="13:73"><decl pos:start="13:5" pos:end="13:72"><type pos:start="13:5" pos:end="13:30"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:28">AVPixFmtDescriptor</name> <modifier pos:start="13:30" pos:end="13:30">*</modifier></type><name pos:start="13:31" pos:end="13:34">desc</name> <init pos:start="13:36" pos:end="13:72">= <expr pos:start="13:38" pos:end="13:72"><call pos:start="13:38" pos:end="13:72"><name pos:start="13:38" pos:end="13:56">av_pix_fmt_desc_get</name><argument_list pos:start="13:57" pos:end="13:72">(<argument pos:start="13:58" pos:end="13:71"><expr pos:start="13:58" pos:end="13:71"><name pos:start="13:58" pos:end="13:71"><name pos:start="13:58" pos:end="13:62">avctx</name><operator pos:start="13:63" pos:end="13:64">-&gt;</operator><name pos:start="13:65" pos:end="13:71">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:54"><decl pos:start="15:5" pos:end="15:53"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:19">RawVideoContext</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:28">context</name>       <init pos:start="15:36" pos:end="15:53">= <expr pos:start="15:38" pos:end="15:53"><name pos:start="15:38" pos:end="15:53"><name pos:start="15:38" pos:end="15:42">avctx</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:53">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:49"><decl pos:start="17:5" pos:end="17:48"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:22">buf</name>             <init pos:start="17:36" pos:end="17:48">= <expr pos:start="17:38" pos:end="17:48"><name pos:start="17:38" pos:end="17:48"><name pos:start="17:38" pos:end="17:42">avpkt</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:48">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:49"><decl pos:start="19:5" pos:end="19:48"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">buf_size</name>                   <init pos:start="19:36" pos:end="19:48">= <expr pos:start="19:38" pos:end="19:48"><name pos:start="19:38" pos:end="19:48"><name pos:start="19:38" pos:end="19:42">avpkt</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:48">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:65"><decl pos:start="21:5" pos:end="21:64"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:20">avpkt_stride</name>               <init pos:start="21:36" pos:end="21:64">= <expr pos:start="21:38" pos:end="21:64"><name pos:start="21:38" pos:end="21:48"><name pos:start="21:38" pos:end="21:42">avpkt</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:48">size</name></name> <operator pos:start="21:50" pos:end="21:50">/</operator> <name pos:start="21:52" pos:end="21:64"><name pos:start="21:52" pos:end="21:56">avctx</name><operator pos:start="21:57" pos:end="21:58">-&gt;</operator><name pos:start="21:59" pos:end="21:64">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:39"><decl pos:start="23:5" pos:end="23:38"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:22">linesize_align</name>             <init pos:start="23:36" pos:end="23:38">= <expr pos:start="23:38" pos:end="23:38"><literal type="number" pos:start="23:38" pos:end="23:38">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:11"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">res</name></decl>, <decl pos:start="25:14" pos:end="25:16"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:14" pos:end="25:16">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:18"><decl pos:start="27:5" pos:end="27:17"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:17">need_copy</name></decl>;</decl_stmt>



    <decl_stmt pos:start="31:5" pos:end="31:30"><decl pos:start="31:5" pos:end="31:29"><type pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:11">AVFrame</name>   <modifier pos:start="31:15" pos:end="31:15">*</modifier></type><name pos:start="31:16" pos:end="31:20">frame</name>   <init pos:start="31:24" pos:end="31:29">= <expr pos:start="31:26" pos:end="31:29"><name pos:start="31:26" pos:end="31:29">data</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="59:5"><if pos:start="35:5" pos:end="51:5">if <condition pos:start="35:8" pos:end="41:73">(<expr pos:start="35:9" pos:end="41:72"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:37"><name pos:start="35:10" pos:end="35:14">avctx</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:37">bits_per_coded_sample</name></name> <operator pos:start="35:39" pos:end="35:40">==</operator> <literal type="number" pos:start="35:42" pos:end="35:42">8</literal> <operator pos:start="35:44" pos:end="35:45">||</operator> <name pos:start="35:47" pos:end="35:74"><name pos:start="35:47" pos:end="35:51">avctx</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:74">bits_per_coded_sample</name></name> <operator pos:start="35:76" pos:end="35:77">==</operator> <literal type="number" pos:start="35:79" pos:end="35:79">4</literal>

            <operator pos:start="37:13" pos:end="37:14">||</operator> <name pos:start="37:16" pos:end="37:43"><name pos:start="37:16" pos:end="37:20">avctx</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:43">bits_per_coded_sample</name></name> <operator pos:start="37:45" pos:end="37:46">==</operator> <literal type="number" pos:start="37:48" pos:end="37:48">2</literal> <operator pos:start="37:50" pos:end="37:51">||</operator> <name pos:start="37:53" pos:end="37:80"><name pos:start="37:53" pos:end="37:57">avctx</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:80">bits_per_coded_sample</name></name> <operator pos:start="37:82" pos:end="37:83">==</operator> <literal type="number" pos:start="37:85" pos:end="37:85">1</literal><operator pos:start="37:86" pos:end="37:86">)</operator> <operator pos:start="37:88" pos:end="37:89">&amp;&amp;</operator>

        <name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:13">avctx</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:22">pix_fmt</name></name> <operator pos:start="39:24" pos:end="39:25">==</operator> <name pos:start="39:27" pos:end="39:41">AV_PIX_FMT_PAL8</name> <operator pos:start="39:43" pos:end="39:44">&amp;&amp;</operator>

       <operator pos:start="41:8" pos:end="41:8">(</operator><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:25"><name pos:start="41:10" pos:end="41:14">avctx</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:25">codec_tag</name></name> <operator pos:start="41:27" pos:end="41:28">||</operator> <name pos:start="41:30" pos:end="41:45"><name pos:start="41:30" pos:end="41:34">avctx</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:45">codec_tag</name></name> <operator pos:start="41:47" pos:end="41:48">==</operator> <call pos:start="41:50" pos:end="41:71"><name pos:start="41:50" pos:end="41:54">MKTAG</name><argument_list pos:start="41:55" pos:end="41:71">(<argument pos:start="41:56" pos:end="41:58"><expr pos:start="41:56" pos:end="41:58"><literal type="char" pos:start="41:56" pos:end="41:58">'r'</literal></expr></argument>,<argument pos:start="41:60" pos:end="41:62"><expr pos:start="41:60" pos:end="41:62"><literal type="char" pos:start="41:60" pos:end="41:62">'a'</literal></expr></argument>,<argument pos:start="41:64" pos:end="41:66"><expr pos:start="41:64" pos:end="41:66"><literal type="char" pos:start="41:64" pos:end="41:66">'w'</literal></expr></argument>,<argument pos:start="41:68" pos:end="41:70"><expr pos:start="41:68" pos:end="41:70"><literal type="char" pos:start="41:68" pos:end="41:70">' '</literal></expr></argument>)</argument_list></call><operator pos:start="41:72" pos:end="41:72">)</operator></expr>)</condition> <block pos:start="41:75" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:73">

        <expr_stmt pos:start="43:9" pos:end="43:36"><expr pos:start="43:9" pos:end="43:35"><name pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:15">context</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:31">is_1_2_4_8_bpp</name></name> <operator pos:start="43:33" pos:end="43:33">=</operator> <literal type="number" pos:start="43:35" pos:end="43:35">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="49:73"><expr pos:start="45:9" pos:end="49:72"><name pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:15">context</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:27">frame_size</name></name> <operator pos:start="45:29" pos:end="45:29">=</operator> <call pos:start="45:31" pos:end="49:72"><name pos:start="45:31" pos:end="45:54">av_image_get_buffer_size</name><argument_list pos:start="45:55" pos:end="49:72">(<argument pos:start="45:56" pos:end="45:69"><expr pos:start="45:56" pos:end="45:69"><name pos:start="45:56" pos:end="45:69"><name pos:start="45:56" pos:end="45:60">avctx</name><operator pos:start="45:61" pos:end="45:62">-&gt;</operator><name pos:start="45:63" pos:end="45:69">pix_fmt</name></name></expr></argument>,

                                                       <argument pos:start="47:56" pos:end="47:80"><expr pos:start="47:56" pos:end="47:80"><call pos:start="47:56" pos:end="47:80"><name pos:start="47:56" pos:end="47:62">FFALIGN</name><argument_list pos:start="47:63" pos:end="47:80">(<argument pos:start="47:64" pos:end="47:75"><expr pos:start="47:64" pos:end="47:75"><name pos:start="47:64" pos:end="47:75"><name pos:start="47:64" pos:end="47:68">avctx</name><operator pos:start="47:69" pos:end="47:70">-&gt;</operator><name pos:start="47:71" pos:end="47:75">width</name></name></expr></argument>, <argument pos:start="47:78" pos:end="47:79"><expr pos:start="47:78" pos:end="47:79"><literal type="number" pos:start="47:78" pos:end="47:79">16</literal></expr></argument>)</argument_list></call></expr></argument>,

                                                       <argument pos:start="49:56" pos:end="49:68"><expr pos:start="49:56" pos:end="49:68"><name pos:start="49:56" pos:end="49:68"><name pos:start="49:56" pos:end="49:60">avctx</name><operator pos:start="49:61" pos:end="49:62">-&gt;</operator><name pos:start="49:63" pos:end="49:68">height</name></name></expr></argument>, <argument pos:start="49:71" pos:end="49:71"><expr pos:start="49:71" pos:end="49:71"><literal type="number" pos:start="49:71" pos:end="49:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="59:5">else <block pos:start="51:12" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:73">

        <expr_stmt pos:start="53:9" pos:end="53:134"><expr pos:start="53:9" pos:end="53:133"><name pos:start="53:9" pos:end="53:28"><name pos:start="53:9" pos:end="53:15">context</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:28">is_lt_16bpp</name></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <call pos:start="53:32" pos:end="53:58"><name pos:start="53:32" pos:end="53:52">av_get_bits_per_pixel</name><argument_list pos:start="53:53" pos:end="53:58">(<argument pos:start="53:54" pos:end="53:57"><expr pos:start="53:54" pos:end="53:57"><name pos:start="53:54" pos:end="53:57">desc</name></expr></argument>)</argument_list></call> <operator pos:start="53:60" pos:end="53:61">==</operator> <literal type="number" pos:start="53:63" pos:end="53:64">16</literal> <operator pos:start="53:66" pos:end="53:67">&amp;&amp;</operator> <name pos:start="53:69" pos:end="53:96"><name pos:start="53:69" pos:end="53:73">avctx</name><operator pos:start="53:74" pos:end="53:75">-&gt;</operator><name pos:start="53:76" pos:end="53:96">bits_per_coded_sample</name></name> <operator pos:start="53:98" pos:end="53:99">&amp;&amp;</operator> <name pos:start="53:101" pos:end="53:128"><name pos:start="53:101" pos:end="53:105">avctx</name><operator pos:start="53:106" pos:end="53:107">-&gt;</operator><name pos:start="53:108" pos:end="53:128">bits_per_coded_sample</name></name> <operator pos:start="53:130" pos:end="53:130">&lt;</operator> <literal type="number" pos:start="53:132" pos:end="53:133">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="57:73"><expr pos:start="55:9" pos:end="57:72"><name pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:15">context</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:27">frame_size</name></name> <operator pos:start="55:29" pos:end="55:29">=</operator> <call pos:start="55:31" pos:end="57:72"><name pos:start="55:31" pos:end="55:54">av_image_get_buffer_size</name><argument_list pos:start="55:55" pos:end="57:72">(<argument pos:start="55:56" pos:end="55:69"><expr pos:start="55:56" pos:end="55:69"><name pos:start="55:56" pos:end="55:69"><name pos:start="55:56" pos:end="55:60">avctx</name><operator pos:start="55:61" pos:end="55:62">-&gt;</operator><name pos:start="55:63" pos:end="55:69">pix_fmt</name></name></expr></argument>, <argument pos:start="55:72" pos:end="55:83"><expr pos:start="55:72" pos:end="55:83"><name pos:start="55:72" pos:end="55:83"><name pos:start="55:72" pos:end="55:76">avctx</name><operator pos:start="55:77" pos:end="55:78">-&gt;</operator><name pos:start="55:79" pos:end="55:83">width</name></name></expr></argument>,

                                                       <argument pos:start="57:56" pos:end="57:68"><expr pos:start="57:56" pos:end="57:68"><name pos:start="57:56" pos:end="57:68"><name pos:start="57:56" pos:end="57:60">avctx</name><operator pos:start="57:61" pos:end="57:62">-&gt;</operator><name pos:start="57:63" pos:end="57:68">height</name></name></expr></argument>, <argument pos:start="57:71" pos:end="57:71"><expr pos:start="57:71" pos:end="57:71"><literal type="number" pos:start="57:71" pos:end="57:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="61:5" pos:end="63:35"><if pos:start="61:5" pos:end="63:35">if <condition pos:start="61:8" pos:end="61:32">(<expr pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:15">context</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:27">frame_size</name></name> <operator pos:start="61:29" pos:end="61:29">&lt;</operator> <literal type="number" pos:start="61:31" pos:end="61:31">0</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:35"><block_content pos:start="63:9" pos:end="63:35">

        <return pos:start="63:9" pos:end="63:35">return <expr pos:start="63:16" pos:end="63:34"><name pos:start="63:16" pos:end="63:34"><name pos:start="63:16" pos:end="63:22">context</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:34">frame_size</name></name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:99"><expr pos:start="67:5" pos:end="67:98"><name pos:start="67:5" pos:end="67:13">need_copy</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <operator pos:start="67:17" pos:end="67:17">!</operator><name pos:start="67:18" pos:end="67:27"><name pos:start="67:18" pos:end="67:22">avpkt</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:27">buf</name></name> <operator pos:start="67:29" pos:end="67:30">||</operator> <name pos:start="67:32" pos:end="67:54"><name pos:start="67:32" pos:end="67:38">context</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:54">is_1_2_4_8_bpp</name></name> <operator pos:start="67:56" pos:end="67:57">||</operator> <name pos:start="67:59" pos:end="67:74"><name pos:start="67:59" pos:end="67:65">context</name><operator pos:start="67:66" pos:end="67:67">-&gt;</operator><name pos:start="67:68" pos:end="67:74">is_yuv2</name></name> <operator pos:start="67:76" pos:end="67:77">||</operator> <name pos:start="67:79" pos:end="67:98"><name pos:start="67:79" pos:end="67:85">context</name><operator pos:start="67:86" pos:end="67:87">-&gt;</operator><name pos:start="67:88" pos:end="67:98">is_lt_16bpp</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:48"><expr pos:start="71:5" pos:end="71:47"><name pos:start="71:5" pos:end="71:20"><name pos:start="71:5" pos:end="71:9">frame</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:20">pict_type</name></name>        <operator pos:start="71:29" pos:end="71:29">=</operator> <name pos:start="71:31" pos:end="71:47">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:32"><expr pos:start="73:5" pos:end="73:31"><name pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:9">frame</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:20">key_frame</name></name>        <operator pos:start="73:29" pos:end="73:29">=</operator> <literal type="number" pos:start="73:31" pos:end="73:31">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:46"><expr pos:start="77:5" pos:end="77:45"><name pos:start="77:5" pos:end="77:7">res</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="77:45"><name pos:start="77:11" pos:end="77:31">ff_decode_frame_props</name><argument_list pos:start="77:32" pos:end="77:45">(<argument pos:start="77:33" pos:end="77:37"><expr pos:start="77:33" pos:end="77:37"><name pos:start="77:33" pos:end="77:37">avctx</name></expr></argument>, <argument pos:start="77:40" pos:end="77:44"><expr pos:start="77:40" pos:end="77:44"><name pos:start="77:40" pos:end="77:44">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="81:19"><if pos:start="79:5" pos:end="81:19">if <condition pos:start="79:8" pos:end="79:16">(<expr pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:11">res</name> <operator pos:start="79:13" pos:end="79:13">&lt;</operator> <literal type="number" pos:start="79:15" pos:end="79:15">0</literal></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:19"><block_content pos:start="81:9" pos:end="81:19">

        <return pos:start="81:9" pos:end="81:19">return <expr pos:start="81:16" pos:end="81:18"><name pos:start="81:16" pos:end="81:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:64"><expr pos:start="85:5" pos:end="85:63"><call pos:start="85:5" pos:end="85:63"><name pos:start="85:5" pos:end="85:24">av_frame_set_pkt_pos</name>     <argument_list pos:start="85:30" pos:end="85:63">(<argument pos:start="85:31" pos:end="85:35"><expr pos:start="85:31" pos:end="85:35"><name pos:start="85:31" pos:end="85:35">frame</name></expr></argument>, <argument pos:start="85:38" pos:end="85:62"><expr pos:start="85:38" pos:end="85:62"><name pos:start="85:38" pos:end="85:62"><name pos:start="85:38" pos:end="85:42">avctx</name><operator pos:start="85:43" pos:end="85:44">-&gt;</operator><name pos:start="85:45" pos:end="85:52">internal</name><operator pos:start="85:53" pos:end="85:54">-&gt;</operator><name pos:start="85:55" pos:end="85:57">pkt</name><operator pos:start="85:58" pos:end="85:59">-&gt;</operator><name pos:start="85:60" pos:end="85:62">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:69"><expr pos:start="87:5" pos:end="87:68"><call pos:start="87:5" pos:end="87:68"><name pos:start="87:5" pos:end="87:29">av_frame_set_pkt_duration</name><argument_list pos:start="87:30" pos:end="87:68">(<argument pos:start="87:31" pos:end="87:35"><expr pos:start="87:31" pos:end="87:35"><name pos:start="87:31" pos:end="87:35">frame</name></expr></argument>, <argument pos:start="87:38" pos:end="87:67"><expr pos:start="87:38" pos:end="87:67"><name pos:start="87:38" pos:end="87:67"><name pos:start="87:38" pos:end="87:42">avctx</name><operator pos:start="87:43" pos:end="87:44">-&gt;</operator><name pos:start="87:45" pos:end="87:52">internal</name><operator pos:start="87:53" pos:end="87:54">-&gt;</operator><name pos:start="87:55" pos:end="87:57">pkt</name><operator pos:start="87:58" pos:end="87:59">-&gt;</operator><name pos:start="87:60" pos:end="87:67">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:26">(<expr pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:15">context</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:20">tff</name></name> <operator pos:start="91:22" pos:end="91:23">&gt;=</operator> <literal type="number" pos:start="91:25" pos:end="91:25">0</literal></expr>)</condition> <block pos:start="91:28" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:47">

        <expr_stmt pos:start="93:9" pos:end="93:36"><expr pos:start="93:9" pos:end="93:35"><name pos:start="93:9" pos:end="93:31"><name pos:start="93:9" pos:end="93:13">frame</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:31">interlaced_frame</name></name> <operator pos:start="93:33" pos:end="93:33">=</operator> <literal type="number" pos:start="93:35" pos:end="93:35">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:47"><expr pos:start="95:9" pos:end="95:46"><name pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:13">frame</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:30">top_field_first</name></name>  <operator pos:start="95:33" pos:end="95:33">=</operator> <name pos:start="95:35" pos:end="95:46"><name pos:start="95:35" pos:end="95:41">context</name><operator pos:start="95:42" pos:end="95:43">-&gt;</operator><name pos:start="95:44" pos:end="95:46">tff</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="103:19"><if pos:start="101:5" pos:end="103:19">if <condition pos:start="101:8" pos:end="101:79">(<expr pos:start="101:9" pos:end="101:78"><operator pos:start="101:9" pos:end="101:9">(</operator><name pos:start="101:10" pos:end="101:12">res</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <call pos:start="101:16" pos:end="101:73"><name pos:start="101:16" pos:end="101:34">av_image_check_size</name><argument_list pos:start="101:35" pos:end="101:73">(<argument pos:start="101:36" pos:end="101:47"><expr pos:start="101:36" pos:end="101:47"><name pos:start="101:36" pos:end="101:47"><name pos:start="101:36" pos:end="101:40">avctx</name><operator pos:start="101:41" pos:end="101:42">-&gt;</operator><name pos:start="101:43" pos:end="101:47">width</name></name></expr></argument>, <argument pos:start="101:50" pos:end="101:62"><expr pos:start="101:50" pos:end="101:62"><name pos:start="101:50" pos:end="101:62"><name pos:start="101:50" pos:end="101:54">avctx</name><operator pos:start="101:55" pos:end="101:56">-&gt;</operator><name pos:start="101:57" pos:end="101:62">height</name></name></expr></argument>, <argument pos:start="101:65" pos:end="101:65"><expr pos:start="101:65" pos:end="101:65"><literal type="number" pos:start="101:65" pos:end="101:65">0</literal></expr></argument>, <argument pos:start="101:68" pos:end="101:72"><expr pos:start="101:68" pos:end="101:72"><name pos:start="101:68" pos:end="101:72">avctx</name></expr></argument>)</argument_list></call><operator pos:start="101:74" pos:end="101:74">)</operator> <operator pos:start="101:76" pos:end="101:76">&lt;</operator> <literal type="number" pos:start="101:78" pos:end="101:78">0</literal></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:19"><block_content pos:start="103:9" pos:end="103:19">

        <return pos:start="103:9" pos:end="103:19">return <expr pos:start="103:16" pos:end="103:18"><name pos:start="103:16" pos:end="103:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="113:50"><if pos:start="107:5" pos:end="109:78">if <condition pos:start="107:8" pos:end="107:18">(<expr pos:start="107:9" pos:end="107:17"><name pos:start="107:9" pos:end="107:17">need_copy</name></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:78"><block_content pos:start="109:9" pos:end="109:78">

        <expr_stmt pos:start="109:9" pos:end="109:78"><expr pos:start="109:9" pos:end="109:77"><name pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:13">frame</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:18">buf</name><index pos:start="109:19" pos:end="109:21">[<expr pos:start="109:20" pos:end="109:20"><literal type="number" pos:start="109:20" pos:end="109:20">0</literal></expr>]</index></name> <operator pos:start="109:23" pos:end="109:23">=</operator> <call pos:start="109:25" pos:end="109:77"><name pos:start="109:25" pos:end="109:39">av_buffer_alloc</name><argument_list pos:start="109:40" pos:end="109:77">(<argument pos:start="109:41" pos:end="109:76"><expr pos:start="109:41" pos:end="109:76"><call pos:start="109:41" pos:end="109:76"><name pos:start="109:41" pos:end="109:45">FFMAX</name><argument_list pos:start="109:46" pos:end="109:76">(<argument pos:start="109:47" pos:end="109:65"><expr pos:start="109:47" pos:end="109:65"><name pos:start="109:47" pos:end="109:65"><name pos:start="109:47" pos:end="109:53">context</name><operator pos:start="109:54" pos:end="109:55">-&gt;</operator><name pos:start="109:56" pos:end="109:65">frame_size</name></name></expr></argument>, <argument pos:start="109:68" pos:end="109:75"><expr pos:start="109:68" pos:end="109:75"><name pos:start="109:68" pos:end="109:75">buf_size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="111:5" pos:end="113:50">else<block type="pseudo" pos:start="113:9" pos:end="113:50"><block_content pos:start="113:9" pos:end="113:50">

        <expr_stmt pos:start="113:9" pos:end="113:50"><expr pos:start="113:9" pos:end="113:49"><name pos:start="113:9" pos:end="113:21"><name pos:start="113:9" pos:end="113:13">frame</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:18">buf</name><index pos:start="113:19" pos:end="113:21">[<expr pos:start="113:20" pos:end="113:20"><literal type="number" pos:start="113:20" pos:end="113:20">0</literal></expr>]</index></name> <operator pos:start="113:23" pos:end="113:23">=</operator> <call pos:start="113:25" pos:end="113:49"><name pos:start="113:25" pos:end="113:37">av_buffer_ref</name><argument_list pos:start="113:38" pos:end="113:49">(<argument pos:start="113:39" pos:end="113:48"><expr pos:start="113:39" pos:end="113:48"><name pos:start="113:39" pos:end="113:48"><name pos:start="113:39" pos:end="113:43">avpkt</name><operator pos:start="113:44" pos:end="113:45">-&gt;</operator><name pos:start="113:46" pos:end="113:48">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="115:5" pos:end="117:31"><if pos:start="115:5" pos:end="117:31">if <condition pos:start="115:8" pos:end="115:23">(<expr pos:start="115:9" pos:end="115:22"><operator pos:start="115:9" pos:end="115:9">!</operator><name pos:start="115:10" pos:end="115:22"><name pos:start="115:10" pos:end="115:14">frame</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:19">buf</name><index pos:start="115:20" pos:end="115:22">[<expr pos:start="115:21" pos:end="115:21"><literal type="number" pos:start="115:21" pos:end="115:21">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:31"><block_content pos:start="117:9" pos:end="117:31">

        <return pos:start="117:9" pos:end="117:31">return <expr pos:start="117:16" pos:end="117:30"><call pos:start="117:16" pos:end="117:30"><name pos:start="117:16" pos:end="117:22">AVERROR</name><argument_list pos:start="117:23" pos:end="117:30">(<argument pos:start="117:24" pos:end="117:29"><expr pos:start="117:24" pos:end="117:29"><name pos:start="117:24" pos:end="117:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="121:5" pos:end="121:50">// 1 bpp in mov, and 2, 4 and 8 bpp in avi/mov</comment>

    <if_stmt pos:start="123:5" pos:end="295:5"><if pos:start="123:5" pos:end="241:5">if <condition pos:start="123:8" pos:end="123:32">(<expr pos:start="123:9" pos:end="123:31"><name pos:start="123:9" pos:end="123:31"><name pos:start="123:9" pos:end="123:15">context</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:31">is_1_2_4_8_bpp</name></name></expr>)</condition> <block pos:start="123:34" pos:end="241:5">{<block_content pos:start="125:9" pos:end="239:18">

        <decl_stmt pos:start="125:9" pos:end="125:30"><decl pos:start="125:9" pos:end="125:13"><type pos:start="125:9" pos:end="125:11"><name pos:start="125:9" pos:end="125:11">int</name></type> <name pos:start="125:13" pos:end="125:13">i</name></decl>, <decl pos:start="125:16" pos:end="125:16"><type ref="prev" pos:start="125:9" pos:end="125:11"/><name pos:start="125:16" pos:end="125:16">j</name></decl>, <decl pos:start="125:19" pos:end="125:29"><type ref="prev" pos:start="125:9" pos:end="125:11"/><name pos:start="125:19" pos:end="125:25">row_pix</name> <init pos:start="125:27" pos:end="125:29">= <expr pos:start="125:29" pos:end="125:29"><literal type="number" pos:start="125:29" pos:end="125:29">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="127:9" pos:end="127:43"><decl pos:start="127:9" pos:end="127:42"><type pos:start="127:9" pos:end="127:17"><name pos:start="127:9" pos:end="127:15">uint8_t</name> <modifier pos:start="127:17" pos:end="127:17">*</modifier></type><name pos:start="127:18" pos:end="127:20">dst</name> <init pos:start="127:22" pos:end="127:42">= <expr pos:start="127:24" pos:end="127:42"><name pos:start="127:24" pos:end="127:36"><name pos:start="127:24" pos:end="127:28">frame</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:33">buf</name><index pos:start="127:34" pos:end="127:36">[<expr pos:start="127:35" pos:end="127:35"><literal type="number" pos:start="127:35" pos:end="127:35">0</literal></expr>]</index></name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:42">data</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:56"><expr pos:start="129:9" pos:end="129:55"><name pos:start="129:9" pos:end="129:16">buf_size</name> <operator pos:start="129:18" pos:end="129:18">=</operator> <name pos:start="129:20" pos:end="129:38"><name pos:start="129:20" pos:end="129:26">context</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:38">frame_size</name></name> <operator pos:start="129:40" pos:end="129:40">-</operator> <name pos:start="129:42" pos:end="129:55">AVPALETTE_SIZE</name></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="235:9"><if pos:start="131:9" pos:end="151:9">if <condition pos:start="131:12" pos:end="131:46">(<expr pos:start="131:13" pos:end="131:45"><name pos:start="131:13" pos:end="131:40"><name pos:start="131:13" pos:end="131:17">avctx</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:40">bits_per_coded_sample</name></name> <operator pos:start="131:42" pos:end="131:43">==</operator> <literal type="number" pos:start="131:45" pos:end="131:45">8</literal></expr>)</condition> <block pos:start="131:48" pos:end="151:9">{<block_content pos:start="133:13" pos:end="149:13">

            <for pos:start="133:13" pos:end="149:13">for <control pos:start="133:17" pos:end="133:71">(<init pos:start="133:18" pos:end="133:30"><expr pos:start="133:18" pos:end="133:22"><name pos:start="133:18" pos:end="133:18">i</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <literal type="number" pos:start="133:22" pos:end="133:22">0</literal></expr><operator pos:start="133:23" pos:end="133:23">,</operator> <expr pos:start="133:25" pos:end="133:29"><name pos:start="133:25" pos:end="133:25">j</name> <operator pos:start="133:27" pos:end="133:27">=</operator> <literal type="number" pos:start="133:29" pos:end="133:29">0</literal></expr>;</init> <condition pos:start="133:32" pos:end="133:61"><expr pos:start="133:32" pos:end="133:60"><name pos:start="133:32" pos:end="133:32">j</name> <operator pos:start="133:34" pos:end="133:34">&lt;</operator> <name pos:start="133:36" pos:end="133:43">buf_size</name> <operator pos:start="133:45" pos:end="133:46">&amp;&amp;</operator> <name pos:start="133:48" pos:end="133:48">i</name><operator pos:start="133:49" pos:end="133:49">&lt;</operator><name pos:start="133:50" pos:end="133:60"><name pos:start="133:50" pos:end="133:54">avpkt</name><operator pos:start="133:55" pos:end="133:56">-&gt;</operator><name pos:start="133:57" pos:end="133:60">size</name></name></expr>;</condition> <incr pos:start="133:63" pos:end="133:70"><expr pos:start="133:63" pos:end="133:65"><name pos:start="133:63" pos:end="133:63">i</name><operator pos:start="133:64" pos:end="133:65">++</operator></expr><operator pos:start="133:66" pos:end="133:66">,</operator> <expr pos:start="133:68" pos:end="133:70"><name pos:start="133:68" pos:end="133:68">j</name><operator pos:start="133:69" pos:end="133:70">++</operator></expr></incr>)</control> <block pos:start="133:73" pos:end="149:13">{<block_content pos:start="135:17" pos:end="147:17">

                <expr_stmt pos:start="135:17" pos:end="135:32"><expr pos:start="135:17" pos:end="135:31"><name pos:start="135:17" pos:end="135:22"><name pos:start="135:17" pos:end="135:19">dst</name><index pos:start="135:20" pos:end="135:22">[<expr pos:start="135:21" pos:end="135:21"><name pos:start="135:21" pos:end="135:21">j</name></expr>]</index></name> <operator pos:start="135:24" pos:end="135:24">=</operator> <name pos:start="135:26" pos:end="135:31"><name pos:start="135:26" pos:end="135:28">buf</name><index pos:start="135:29" pos:end="135:31">[<expr pos:start="135:30" pos:end="135:30"><name pos:start="135:30" pos:end="135:30">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:26"><expr pos:start="137:17" pos:end="137:25"><name pos:start="137:17" pos:end="137:23">row_pix</name><operator pos:start="137:24" pos:end="137:25">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="139:17" pos:end="147:17"><if pos:start="139:17" pos:end="147:17">if <condition pos:start="139:20" pos:end="139:44">(<expr pos:start="139:21" pos:end="139:43"><name pos:start="139:21" pos:end="139:27">row_pix</name> <operator pos:start="139:29" pos:end="139:30">==</operator> <name pos:start="139:32" pos:end="139:43"><name pos:start="139:32" pos:end="139:36">avctx</name><operator pos:start="139:37" pos:end="139:38">-&gt;</operator><name pos:start="139:39" pos:end="139:43">width</name></name></expr>)</condition> <block pos:start="139:46" pos:end="147:17">{<block_content pos:start="141:21" pos:end="145:32">

                    <expr_stmt pos:start="141:21" pos:end="141:63"><expr pos:start="141:21" pos:end="141:62"><name pos:start="141:21" pos:end="141:21">i</name> <operator pos:start="141:23" pos:end="141:24">+=</operator> <name pos:start="141:26" pos:end="141:37">avpkt_stride</name> <operator pos:start="141:39" pos:end="141:39">-</operator> <operator pos:start="141:41" pos:end="141:41">(</operator><name pos:start="141:42" pos:end="141:42">i</name> <operator pos:start="141:44" pos:end="141:44">%</operator> <name pos:start="141:46" pos:end="141:57">avpkt_stride</name><operator pos:start="141:58" pos:end="141:58">)</operator> <operator pos:start="141:60" pos:end="141:60">-</operator> <literal type="number" pos:start="141:62" pos:end="141:62">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:43"><expr pos:start="143:21" pos:end="143:42"><name pos:start="143:21" pos:end="143:21">j</name> <operator pos:start="143:23" pos:end="143:24">+=</operator> <literal type="number" pos:start="143:26" pos:end="143:29">16</literal> <operator pos:start="143:29" pos:end="143:29">-</operator> <operator pos:start="143:31" pos:end="143:31">(</operator><name pos:start="143:32" pos:end="143:32">j</name> <operator pos:start="143:34" pos:end="143:34">%</operator> <literal type="number" pos:start="143:36" pos:end="143:37">16</literal><operator pos:start="143:38" pos:end="143:38">)</operator> <operator pos:start="143:40" pos:end="143:40">-</operator> <literal type="number" pos:start="143:42" pos:end="143:42">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="145:21" pos:end="145:32"><expr pos:start="145:21" pos:end="145:31"><name pos:start="145:21" pos:end="145:27">row_pix</name> <operator pos:start="145:29" pos:end="145:29">=</operator> <literal type="number" pos:start="145:31" pos:end="145:31">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="151:11" pos:end="173:9">else if <condition pos:start="151:19" pos:end="151:53">(<expr pos:start="151:20" pos:end="151:52"><name pos:start="151:20" pos:end="151:47"><name pos:start="151:20" pos:end="151:24">avctx</name><operator pos:start="151:25" pos:end="151:26">-&gt;</operator><name pos:start="151:27" pos:end="151:47">bits_per_coded_sample</name></name> <operator pos:start="151:49" pos:end="151:50">==</operator> <literal type="number" pos:start="151:52" pos:end="151:52">4</literal></expr>)</condition> <block pos:start="151:55" pos:end="173:9">{<block_content pos:start="153:13" pos:end="171:13">

            <for pos:start="153:13" pos:end="171:13">for <control pos:start="153:17" pos:end="153:79">(<init pos:start="153:18" pos:end="153:30"><expr pos:start="153:18" pos:end="153:22"><name pos:start="153:18" pos:end="153:18">i</name> <operator pos:start="153:20" pos:end="153:20">=</operator> <literal type="number" pos:start="153:22" pos:end="153:22">0</literal></expr><operator pos:start="153:23" pos:end="153:23">,</operator> <expr pos:start="153:25" pos:end="153:29"><name pos:start="153:25" pos:end="153:25">j</name> <operator pos:start="153:27" pos:end="153:27">=</operator> <literal type="number" pos:start="153:29" pos:end="153:29">0</literal></expr>;</init> <condition pos:start="153:32" pos:end="153:69"><expr pos:start="153:32" pos:end="153:68"><literal type="number" pos:start="153:32" pos:end="153:32">2</literal> <operator pos:start="153:34" pos:end="153:34">*</operator> <name pos:start="153:36" pos:end="153:36">j</name> <operator pos:start="153:38" pos:end="153:38">+</operator> <literal type="number" pos:start="153:40" pos:end="153:40">1</literal> <operator pos:start="153:42" pos:end="153:42">&lt;</operator> <name pos:start="153:44" pos:end="153:51">buf_size</name> <operator pos:start="153:53" pos:end="153:54">&amp;&amp;</operator> <name pos:start="153:56" pos:end="153:56">i</name><operator pos:start="153:57" pos:end="153:57">&lt;</operator><name pos:start="153:58" pos:end="153:68"><name pos:start="153:58" pos:end="153:62">avpkt</name><operator pos:start="153:63" pos:end="153:64">-&gt;</operator><name pos:start="153:65" pos:end="153:68">size</name></name></expr>;</condition> <incr pos:start="153:71" pos:end="153:78"><expr pos:start="153:71" pos:end="153:73"><name pos:start="153:71" pos:end="153:71">i</name><operator pos:start="153:72" pos:end="153:73">++</operator></expr><operator pos:start="153:74" pos:end="153:74">,</operator> <expr pos:start="153:76" pos:end="153:78"><name pos:start="153:76" pos:end="153:76">j</name><operator pos:start="153:77" pos:end="153:78">++</operator></expr></incr>)</control> <block pos:start="153:81" pos:end="171:13">{<block_content pos:start="155:17" pos:end="169:17">

                <expr_stmt pos:start="155:17" pos:end="155:45"><expr pos:start="155:17" pos:end="155:44"><name pos:start="155:17" pos:end="155:30"><name pos:start="155:17" pos:end="155:19">dst</name><index pos:start="155:20" pos:end="155:30">[<expr pos:start="155:21" pos:end="155:29"><literal type="number" pos:start="155:21" pos:end="155:21">2</literal> <operator pos:start="155:23" pos:end="155:23">*</operator> <name pos:start="155:25" pos:end="155:25">j</name> <operator pos:start="155:27" pos:end="155:27">+</operator> <literal type="number" pos:start="155:29" pos:end="155:29">0</literal></expr>]</index></name> <operator pos:start="155:32" pos:end="155:32">=</operator> <name pos:start="155:34" pos:end="155:39"><name pos:start="155:34" pos:end="155:36">buf</name><index pos:start="155:37" pos:end="155:39">[<expr pos:start="155:38" pos:end="155:38"><name pos:start="155:38" pos:end="155:38">i</name></expr>]</index></name> <operator pos:start="155:41" pos:end="155:42">&gt;&gt;</operator> <literal type="number" pos:start="155:44" pos:end="155:44">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:45"><expr pos:start="157:17" pos:end="157:44"><name pos:start="157:17" pos:end="157:30"><name pos:start="157:17" pos:end="157:19">dst</name><index pos:start="157:20" pos:end="157:30">[<expr pos:start="157:21" pos:end="157:29"><literal type="number" pos:start="157:21" pos:end="157:21">2</literal> <operator pos:start="157:23" pos:end="157:23">*</operator> <name pos:start="157:25" pos:end="157:25">j</name> <operator pos:start="157:27" pos:end="157:27">+</operator> <literal type="number" pos:start="157:29" pos:end="157:29">1</literal></expr>]</index></name> <operator pos:start="157:32" pos:end="157:32">=</operator> <name pos:start="157:34" pos:end="157:39"><name pos:start="157:34" pos:end="157:36">buf</name><index pos:start="157:37" pos:end="157:39">[<expr pos:start="157:38" pos:end="157:38"><name pos:start="157:38" pos:end="157:38">i</name></expr>]</index></name> <operator pos:start="157:41" pos:end="157:41">&amp;</operator> <literal type="number" pos:start="157:43" pos:end="157:44">15</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:29"><expr pos:start="159:17" pos:end="159:28"><name pos:start="159:17" pos:end="159:23">row_pix</name> <operator pos:start="159:25" pos:end="159:26">+=</operator> <literal type="number" pos:start="159:28" pos:end="159:28">2</literal></expr>;</expr_stmt>

                <if_stmt pos:start="161:17" pos:end="169:17"><if pos:start="161:17" pos:end="169:17">if <condition pos:start="161:20" pos:end="161:44">(<expr pos:start="161:21" pos:end="161:43"><name pos:start="161:21" pos:end="161:27">row_pix</name> <operator pos:start="161:29" pos:end="161:30">&gt;=</operator> <name pos:start="161:32" pos:end="161:43"><name pos:start="161:32" pos:end="161:36">avctx</name><operator pos:start="161:37" pos:end="161:38">-&gt;</operator><name pos:start="161:39" pos:end="161:43">width</name></name></expr>)</condition> <block pos:start="161:46" pos:end="169:17">{<block_content pos:start="163:21" pos:end="167:32">

                    <expr_stmt pos:start="163:21" pos:end="163:63"><expr pos:start="163:21" pos:end="163:62"><name pos:start="163:21" pos:end="163:21">i</name> <operator pos:start="163:23" pos:end="163:24">+=</operator> <name pos:start="163:26" pos:end="163:37">avpkt_stride</name> <operator pos:start="163:39" pos:end="163:39">-</operator> <operator pos:start="163:41" pos:end="163:41">(</operator><name pos:start="163:42" pos:end="163:42">i</name> <operator pos:start="163:44" pos:end="163:44">%</operator> <name pos:start="163:46" pos:end="163:57">avpkt_stride</name><operator pos:start="163:58" pos:end="163:58">)</operator> <operator pos:start="163:60" pos:end="163:60">-</operator> <literal type="number" pos:start="163:62" pos:end="163:62">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:41"><expr pos:start="165:21" pos:end="165:40"><name pos:start="165:21" pos:end="165:21">j</name> <operator pos:start="165:23" pos:end="165:24">+=</operator> <literal type="number" pos:start="165:26" pos:end="165:28">8</literal> <operator pos:start="165:28" pos:end="165:28">-</operator> <operator pos:start="165:30" pos:end="165:30">(</operator><name pos:start="165:31" pos:end="165:31">j</name> <operator pos:start="165:33" pos:end="165:33">%</operator> <literal type="number" pos:start="165:35" pos:end="165:35">8</literal><operator pos:start="165:36" pos:end="165:36">)</operator> <operator pos:start="165:38" pos:end="165:38">-</operator> <literal type="number" pos:start="165:40" pos:end="165:40">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="167:21" pos:end="167:32"><expr pos:start="167:21" pos:end="167:31"><name pos:start="167:21" pos:end="167:27">row_pix</name> <operator pos:start="167:29" pos:end="167:29">=</operator> <literal type="number" pos:start="167:31" pos:end="167:31">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="173:11" pos:end="199:9">else if <condition pos:start="173:19" pos:end="173:53">(<expr pos:start="173:20" pos:end="173:52"><name pos:start="173:20" pos:end="173:47"><name pos:start="173:20" pos:end="173:24">avctx</name><operator pos:start="173:25" pos:end="173:26">-&gt;</operator><name pos:start="173:27" pos:end="173:47">bits_per_coded_sample</name></name> <operator pos:start="173:49" pos:end="173:50">==</operator> <literal type="number" pos:start="173:52" pos:end="173:52">2</literal></expr>)</condition> <block pos:start="173:55" pos:end="199:9">{<block_content pos:start="175:13" pos:end="197:13">

            <for pos:start="175:13" pos:end="197:13">for <control pos:start="175:17" pos:end="175:79">(<init pos:start="175:18" pos:end="175:30"><expr pos:start="175:18" pos:end="175:22"><name pos:start="175:18" pos:end="175:18">i</name> <operator pos:start="175:20" pos:end="175:20">=</operator> <literal type="number" pos:start="175:22" pos:end="175:22">0</literal></expr><operator pos:start="175:23" pos:end="175:23">,</operator> <expr pos:start="175:25" pos:end="175:29"><name pos:start="175:25" pos:end="175:25">j</name> <operator pos:start="175:27" pos:end="175:27">=</operator> <literal type="number" pos:start="175:29" pos:end="175:29">0</literal></expr>;</init> <condition pos:start="175:32" pos:end="175:69"><expr pos:start="175:32" pos:end="175:68"><literal type="number" pos:start="175:32" pos:end="175:32">4</literal> <operator pos:start="175:34" pos:end="175:34">*</operator> <name pos:start="175:36" pos:end="175:36">j</name> <operator pos:start="175:38" pos:end="175:38">+</operator> <literal type="number" pos:start="175:40" pos:end="175:40">3</literal> <operator pos:start="175:42" pos:end="175:42">&lt;</operator> <name pos:start="175:44" pos:end="175:51">buf_size</name> <operator pos:start="175:53" pos:end="175:54">&amp;&amp;</operator> <name pos:start="175:56" pos:end="175:56">i</name><operator pos:start="175:57" pos:end="175:57">&lt;</operator><name pos:start="175:58" pos:end="175:68"><name pos:start="175:58" pos:end="175:62">avpkt</name><operator pos:start="175:63" pos:end="175:64">-&gt;</operator><name pos:start="175:65" pos:end="175:68">size</name></name></expr>;</condition> <incr pos:start="175:71" pos:end="175:78"><expr pos:start="175:71" pos:end="175:73"><name pos:start="175:71" pos:end="175:71">i</name><operator pos:start="175:72" pos:end="175:73">++</operator></expr><operator pos:start="175:74" pos:end="175:74">,</operator> <expr pos:start="175:76" pos:end="175:78"><name pos:start="175:76" pos:end="175:76">j</name><operator pos:start="175:77" pos:end="175:78">++</operator></expr></incr>)</control> <block pos:start="175:81" pos:end="197:13">{<block_content pos:start="177:17" pos:end="195:17">

                <expr_stmt pos:start="177:17" pos:end="177:45"><expr pos:start="177:17" pos:end="177:44"><name pos:start="177:17" pos:end="177:30"><name pos:start="177:17" pos:end="177:19">dst</name><index pos:start="177:20" pos:end="177:30">[<expr pos:start="177:21" pos:end="177:29"><literal type="number" pos:start="177:21" pos:end="177:21">4</literal> <operator pos:start="177:23" pos:end="177:23">*</operator> <name pos:start="177:25" pos:end="177:25">j</name> <operator pos:start="177:27" pos:end="177:27">+</operator> <literal type="number" pos:start="177:29" pos:end="177:29">0</literal></expr>]</index></name> <operator pos:start="177:32" pos:end="177:32">=</operator> <name pos:start="177:34" pos:end="177:39"><name pos:start="177:34" pos:end="177:36">buf</name><index pos:start="177:37" pos:end="177:39">[<expr pos:start="177:38" pos:end="177:38"><name pos:start="177:38" pos:end="177:38">i</name></expr>]</index></name> <operator pos:start="177:41" pos:end="177:42">&gt;&gt;</operator> <literal type="number" pos:start="177:44" pos:end="177:44">6</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:49"><expr pos:start="179:17" pos:end="179:48"><name pos:start="179:17" pos:end="179:30"><name pos:start="179:17" pos:end="179:19">dst</name><index pos:start="179:20" pos:end="179:30">[<expr pos:start="179:21" pos:end="179:29"><literal type="number" pos:start="179:21" pos:end="179:21">4</literal> <operator pos:start="179:23" pos:end="179:23">*</operator> <name pos:start="179:25" pos:end="179:25">j</name> <operator pos:start="179:27" pos:end="179:27">+</operator> <literal type="number" pos:start="179:29" pos:end="179:29">1</literal></expr>]</index></name> <operator pos:start="179:32" pos:end="179:32">=</operator> <name pos:start="179:34" pos:end="179:39"><name pos:start="179:34" pos:end="179:36">buf</name><index pos:start="179:37" pos:end="179:39">[<expr pos:start="179:38" pos:end="179:38"><name pos:start="179:38" pos:end="179:38">i</name></expr>]</index></name> <operator pos:start="179:41" pos:end="179:42">&gt;&gt;</operator> <literal type="number" pos:start="179:44" pos:end="179:44">4</literal> <operator pos:start="179:46" pos:end="179:46">&amp;</operator> <literal type="number" pos:start="179:48" pos:end="179:48">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:49"><expr pos:start="181:17" pos:end="181:48"><name pos:start="181:17" pos:end="181:30"><name pos:start="181:17" pos:end="181:19">dst</name><index pos:start="181:20" pos:end="181:30">[<expr pos:start="181:21" pos:end="181:29"><literal type="number" pos:start="181:21" pos:end="181:21">4</literal> <operator pos:start="181:23" pos:end="181:23">*</operator> <name pos:start="181:25" pos:end="181:25">j</name> <operator pos:start="181:27" pos:end="181:27">+</operator> <literal type="number" pos:start="181:29" pos:end="181:29">2</literal></expr>]</index></name> <operator pos:start="181:32" pos:end="181:32">=</operator> <name pos:start="181:34" pos:end="181:39"><name pos:start="181:34" pos:end="181:36">buf</name><index pos:start="181:37" pos:end="181:39">[<expr pos:start="181:38" pos:end="181:38"><name pos:start="181:38" pos:end="181:38">i</name></expr>]</index></name> <operator pos:start="181:41" pos:end="181:42">&gt;&gt;</operator> <literal type="number" pos:start="181:44" pos:end="181:44">2</literal> <operator pos:start="181:46" pos:end="181:46">&amp;</operator> <literal type="number" pos:start="181:48" pos:end="181:48">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:49"><expr pos:start="183:17" pos:end="183:48"><name pos:start="183:17" pos:end="183:30"><name pos:start="183:17" pos:end="183:19">dst</name><index pos:start="183:20" pos:end="183:30">[<expr pos:start="183:21" pos:end="183:29"><literal type="number" pos:start="183:21" pos:end="183:21">4</literal> <operator pos:start="183:23" pos:end="183:23">*</operator> <name pos:start="183:25" pos:end="183:25">j</name> <operator pos:start="183:27" pos:end="183:27">+</operator> <literal type="number" pos:start="183:29" pos:end="183:29">3</literal></expr>]</index></name> <operator pos:start="183:32" pos:end="183:32">=</operator> <name pos:start="183:34" pos:end="183:39"><name pos:start="183:34" pos:end="183:36">buf</name><index pos:start="183:37" pos:end="183:39">[<expr pos:start="183:38" pos:end="183:38"><name pos:start="183:38" pos:end="183:38">i</name></expr>]</index></name>      <operator pos:start="183:46" pos:end="183:46">&amp;</operator> <literal type="number" pos:start="183:48" pos:end="183:48">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:29"><expr pos:start="185:17" pos:end="185:28"><name pos:start="185:17" pos:end="185:23">row_pix</name> <operator pos:start="185:25" pos:end="185:26">+=</operator> <literal type="number" pos:start="185:28" pos:end="185:28">4</literal></expr>;</expr_stmt>

                <if_stmt pos:start="187:17" pos:end="195:17"><if pos:start="187:17" pos:end="195:17">if <condition pos:start="187:20" pos:end="187:44">(<expr pos:start="187:21" pos:end="187:43"><name pos:start="187:21" pos:end="187:27">row_pix</name> <operator pos:start="187:29" pos:end="187:30">&gt;=</operator> <name pos:start="187:32" pos:end="187:43"><name pos:start="187:32" pos:end="187:36">avctx</name><operator pos:start="187:37" pos:end="187:38">-&gt;</operator><name pos:start="187:39" pos:end="187:43">width</name></name></expr>)</condition> <block pos:start="187:46" pos:end="195:17">{<block_content pos:start="189:21" pos:end="193:32">

                    <expr_stmt pos:start="189:21" pos:end="189:63"><expr pos:start="189:21" pos:end="189:62"><name pos:start="189:21" pos:end="189:21">i</name> <operator pos:start="189:23" pos:end="189:24">+=</operator> <name pos:start="189:26" pos:end="189:37">avpkt_stride</name> <operator pos:start="189:39" pos:end="189:39">-</operator> <operator pos:start="189:41" pos:end="189:41">(</operator><name pos:start="189:42" pos:end="189:42">i</name> <operator pos:start="189:44" pos:end="189:44">%</operator> <name pos:start="189:46" pos:end="189:57">avpkt_stride</name><operator pos:start="189:58" pos:end="189:58">)</operator> <operator pos:start="189:60" pos:end="189:60">-</operator> <literal type="number" pos:start="189:62" pos:end="189:62">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:41"><expr pos:start="191:21" pos:end="191:40"><name pos:start="191:21" pos:end="191:21">j</name> <operator pos:start="191:23" pos:end="191:24">+=</operator> <literal type="number" pos:start="191:26" pos:end="191:28">4</literal> <operator pos:start="191:28" pos:end="191:28">-</operator> <operator pos:start="191:30" pos:end="191:30">(</operator><name pos:start="191:31" pos:end="191:31">j</name> <operator pos:start="191:33" pos:end="191:33">%</operator> <literal type="number" pos:start="191:35" pos:end="191:35">4</literal><operator pos:start="191:36" pos:end="191:36">)</operator> <operator pos:start="191:38" pos:end="191:38">-</operator> <literal type="number" pos:start="191:40" pos:end="191:40">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:32"><expr pos:start="193:21" pos:end="193:31"><name pos:start="193:21" pos:end="193:27">row_pix</name> <operator pos:start="193:29" pos:end="193:29">=</operator> <literal type="number" pos:start="193:31" pos:end="193:31">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="199:11" pos:end="235:9">else <block pos:start="199:16" pos:end="235:9">{<block_content pos:start="201:13" pos:end="233:13">

            <expr_stmt pos:start="201:13" pos:end="201:58"><expr pos:start="201:13" pos:end="201:57"><call pos:start="201:13" pos:end="201:57"><name pos:start="201:13" pos:end="201:22">av_assert0</name><argument_list pos:start="201:23" pos:end="201:57">(<argument pos:start="201:24" pos:end="201:56"><expr pos:start="201:24" pos:end="201:56"><name pos:start="201:24" pos:end="201:51"><name pos:start="201:24" pos:end="201:28">avctx</name><operator pos:start="201:29" pos:end="201:30">-&gt;</operator><name pos:start="201:31" pos:end="201:51">bits_per_coded_sample</name></name> <operator pos:start="201:53" pos:end="201:54">==</operator> <literal type="number" pos:start="201:56" pos:end="201:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="203:13" pos:end="233:13">for <control pos:start="203:17" pos:end="203:79">(<init pos:start="203:18" pos:end="203:30"><expr pos:start="203:18" pos:end="203:22"><name pos:start="203:18" pos:end="203:18">i</name> <operator pos:start="203:20" pos:end="203:20">=</operator> <literal type="number" pos:start="203:22" pos:end="203:22">0</literal></expr><operator pos:start="203:23" pos:end="203:23">,</operator> <expr pos:start="203:25" pos:end="203:29"><name pos:start="203:25" pos:end="203:25">j</name> <operator pos:start="203:27" pos:end="203:27">=</operator> <literal type="number" pos:start="203:29" pos:end="203:29">0</literal></expr>;</init> <condition pos:start="203:32" pos:end="203:69"><expr pos:start="203:32" pos:end="203:68"><literal type="number" pos:start="203:32" pos:end="203:32">8</literal> <operator pos:start="203:34" pos:end="203:34">*</operator> <name pos:start="203:36" pos:end="203:36">j</name> <operator pos:start="203:38" pos:end="203:38">+</operator> <literal type="number" pos:start="203:40" pos:end="203:40">7</literal> <operator pos:start="203:42" pos:end="203:42">&lt;</operator> <name pos:start="203:44" pos:end="203:51">buf_size</name> <operator pos:start="203:53" pos:end="203:54">&amp;&amp;</operator> <name pos:start="203:56" pos:end="203:56">i</name><operator pos:start="203:57" pos:end="203:57">&lt;</operator><name pos:start="203:58" pos:end="203:68"><name pos:start="203:58" pos:end="203:62">avpkt</name><operator pos:start="203:63" pos:end="203:64">-&gt;</operator><name pos:start="203:65" pos:end="203:68">size</name></name></expr>;</condition> <incr pos:start="203:71" pos:end="203:78"><expr pos:start="203:71" pos:end="203:73"><name pos:start="203:71" pos:end="203:71">i</name><operator pos:start="203:72" pos:end="203:73">++</operator></expr><operator pos:start="203:74" pos:end="203:74">,</operator> <expr pos:start="203:76" pos:end="203:78"><name pos:start="203:76" pos:end="203:76">j</name><operator pos:start="203:77" pos:end="203:78">++</operator></expr></incr>)</control> <block pos:start="203:81" pos:end="233:13">{<block_content pos:start="205:17" pos:end="231:17">

                <expr_stmt pos:start="205:17" pos:end="205:45"><expr pos:start="205:17" pos:end="205:44"><name pos:start="205:17" pos:end="205:30"><name pos:start="205:17" pos:end="205:19">dst</name><index pos:start="205:20" pos:end="205:30">[<expr pos:start="205:21" pos:end="205:29"><literal type="number" pos:start="205:21" pos:end="205:21">8</literal> <operator pos:start="205:23" pos:end="205:23">*</operator> <name pos:start="205:25" pos:end="205:25">j</name> <operator pos:start="205:27" pos:end="205:27">+</operator> <literal type="number" pos:start="205:29" pos:end="205:29">0</literal></expr>]</index></name> <operator pos:start="205:32" pos:end="205:32">=</operator> <name pos:start="205:34" pos:end="205:39"><name pos:start="205:34" pos:end="205:36">buf</name><index pos:start="205:37" pos:end="205:39">[<expr pos:start="205:38" pos:end="205:38"><name pos:start="205:38" pos:end="205:38">i</name></expr>]</index></name> <operator pos:start="205:41" pos:end="205:42">&gt;&gt;</operator> <literal type="number" pos:start="205:44" pos:end="205:44">7</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:49"><expr pos:start="207:17" pos:end="207:48"><name pos:start="207:17" pos:end="207:30"><name pos:start="207:17" pos:end="207:19">dst</name><index pos:start="207:20" pos:end="207:30">[<expr pos:start="207:21" pos:end="207:29"><literal type="number" pos:start="207:21" pos:end="207:21">8</literal> <operator pos:start="207:23" pos:end="207:23">*</operator> <name pos:start="207:25" pos:end="207:25">j</name> <operator pos:start="207:27" pos:end="207:27">+</operator> <literal type="number" pos:start="207:29" pos:end="207:29">1</literal></expr>]</index></name> <operator pos:start="207:32" pos:end="207:32">=</operator> <name pos:start="207:34" pos:end="207:39"><name pos:start="207:34" pos:end="207:36">buf</name><index pos:start="207:37" pos:end="207:39">[<expr pos:start="207:38" pos:end="207:38"><name pos:start="207:38" pos:end="207:38">i</name></expr>]</index></name> <operator pos:start="207:41" pos:end="207:42">&gt;&gt;</operator> <literal type="number" pos:start="207:44" pos:end="207:44">6</literal> <operator pos:start="207:46" pos:end="207:46">&amp;</operator> <literal type="number" pos:start="207:48" pos:end="207:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:49"><expr pos:start="209:17" pos:end="209:48"><name pos:start="209:17" pos:end="209:30"><name pos:start="209:17" pos:end="209:19">dst</name><index pos:start="209:20" pos:end="209:30">[<expr pos:start="209:21" pos:end="209:29"><literal type="number" pos:start="209:21" pos:end="209:21">8</literal> <operator pos:start="209:23" pos:end="209:23">*</operator> <name pos:start="209:25" pos:end="209:25">j</name> <operator pos:start="209:27" pos:end="209:27">+</operator> <literal type="number" pos:start="209:29" pos:end="209:29">2</literal></expr>]</index></name> <operator pos:start="209:32" pos:end="209:32">=</operator> <name pos:start="209:34" pos:end="209:39"><name pos:start="209:34" pos:end="209:36">buf</name><index pos:start="209:37" pos:end="209:39">[<expr pos:start="209:38" pos:end="209:38"><name pos:start="209:38" pos:end="209:38">i</name></expr>]</index></name> <operator pos:start="209:41" pos:end="209:42">&gt;&gt;</operator> <literal type="number" pos:start="209:44" pos:end="209:44">5</literal> <operator pos:start="209:46" pos:end="209:46">&amp;</operator> <literal type="number" pos:start="209:48" pos:end="209:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="211:17" pos:end="211:49"><expr pos:start="211:17" pos:end="211:48"><name pos:start="211:17" pos:end="211:30"><name pos:start="211:17" pos:end="211:19">dst</name><index pos:start="211:20" pos:end="211:30">[<expr pos:start="211:21" pos:end="211:29"><literal type="number" pos:start="211:21" pos:end="211:21">8</literal> <operator pos:start="211:23" pos:end="211:23">*</operator> <name pos:start="211:25" pos:end="211:25">j</name> <operator pos:start="211:27" pos:end="211:27">+</operator> <literal type="number" pos:start="211:29" pos:end="211:29">3</literal></expr>]</index></name> <operator pos:start="211:32" pos:end="211:32">=</operator> <name pos:start="211:34" pos:end="211:39"><name pos:start="211:34" pos:end="211:36">buf</name><index pos:start="211:37" pos:end="211:39">[<expr pos:start="211:38" pos:end="211:38"><name pos:start="211:38" pos:end="211:38">i</name></expr>]</index></name> <operator pos:start="211:41" pos:end="211:42">&gt;&gt;</operator> <literal type="number" pos:start="211:44" pos:end="211:44">4</literal> <operator pos:start="211:46" pos:end="211:46">&amp;</operator> <literal type="number" pos:start="211:48" pos:end="211:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:49"><expr pos:start="213:17" pos:end="213:48"><name pos:start="213:17" pos:end="213:30"><name pos:start="213:17" pos:end="213:19">dst</name><index pos:start="213:20" pos:end="213:30">[<expr pos:start="213:21" pos:end="213:29"><literal type="number" pos:start="213:21" pos:end="213:21">8</literal> <operator pos:start="213:23" pos:end="213:23">*</operator> <name pos:start="213:25" pos:end="213:25">j</name> <operator pos:start="213:27" pos:end="213:27">+</operator> <literal type="number" pos:start="213:29" pos:end="213:29">4</literal></expr>]</index></name> <operator pos:start="213:32" pos:end="213:32">=</operator> <name pos:start="213:34" pos:end="213:39"><name pos:start="213:34" pos:end="213:36">buf</name><index pos:start="213:37" pos:end="213:39">[<expr pos:start="213:38" pos:end="213:38"><name pos:start="213:38" pos:end="213:38">i</name></expr>]</index></name> <operator pos:start="213:41" pos:end="213:42">&gt;&gt;</operator> <literal type="number" pos:start="213:44" pos:end="213:44">3</literal> <operator pos:start="213:46" pos:end="213:46">&amp;</operator> <literal type="number" pos:start="213:48" pos:end="213:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:49"><expr pos:start="215:17" pos:end="215:48"><name pos:start="215:17" pos:end="215:30"><name pos:start="215:17" pos:end="215:19">dst</name><index pos:start="215:20" pos:end="215:30">[<expr pos:start="215:21" pos:end="215:29"><literal type="number" pos:start="215:21" pos:end="215:21">8</literal> <operator pos:start="215:23" pos:end="215:23">*</operator> <name pos:start="215:25" pos:end="215:25">j</name> <operator pos:start="215:27" pos:end="215:27">+</operator> <literal type="number" pos:start="215:29" pos:end="215:29">5</literal></expr>]</index></name> <operator pos:start="215:32" pos:end="215:32">=</operator> <name pos:start="215:34" pos:end="215:39"><name pos:start="215:34" pos:end="215:36">buf</name><index pos:start="215:37" pos:end="215:39">[<expr pos:start="215:38" pos:end="215:38"><name pos:start="215:38" pos:end="215:38">i</name></expr>]</index></name> <operator pos:start="215:41" pos:end="215:42">&gt;&gt;</operator> <literal type="number" pos:start="215:44" pos:end="215:44">2</literal> <operator pos:start="215:46" pos:end="215:46">&amp;</operator> <literal type="number" pos:start="215:48" pos:end="215:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:49"><expr pos:start="217:17" pos:end="217:48"><name pos:start="217:17" pos:end="217:30"><name pos:start="217:17" pos:end="217:19">dst</name><index pos:start="217:20" pos:end="217:30">[<expr pos:start="217:21" pos:end="217:29"><literal type="number" pos:start="217:21" pos:end="217:21">8</literal> <operator pos:start="217:23" pos:end="217:23">*</operator> <name pos:start="217:25" pos:end="217:25">j</name> <operator pos:start="217:27" pos:end="217:27">+</operator> <literal type="number" pos:start="217:29" pos:end="217:29">6</literal></expr>]</index></name> <operator pos:start="217:32" pos:end="217:32">=</operator> <name pos:start="217:34" pos:end="217:39"><name pos:start="217:34" pos:end="217:36">buf</name><index pos:start="217:37" pos:end="217:39">[<expr pos:start="217:38" pos:end="217:38"><name pos:start="217:38" pos:end="217:38">i</name></expr>]</index></name> <operator pos:start="217:41" pos:end="217:42">&gt;&gt;</operator> <literal type="number" pos:start="217:44" pos:end="217:44">1</literal> <operator pos:start="217:46" pos:end="217:46">&amp;</operator> <literal type="number" pos:start="217:48" pos:end="217:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:49"><expr pos:start="219:17" pos:end="219:48"><name pos:start="219:17" pos:end="219:30"><name pos:start="219:17" pos:end="219:19">dst</name><index pos:start="219:20" pos:end="219:30">[<expr pos:start="219:21" pos:end="219:29"><literal type="number" pos:start="219:21" pos:end="219:21">8</literal> <operator pos:start="219:23" pos:end="219:23">*</operator> <name pos:start="219:25" pos:end="219:25">j</name> <operator pos:start="219:27" pos:end="219:27">+</operator> <literal type="number" pos:start="219:29" pos:end="219:29">7</literal></expr>]</index></name> <operator pos:start="219:32" pos:end="219:32">=</operator> <name pos:start="219:34" pos:end="219:39"><name pos:start="219:34" pos:end="219:36">buf</name><index pos:start="219:37" pos:end="219:39">[<expr pos:start="219:38" pos:end="219:38"><name pos:start="219:38" pos:end="219:38">i</name></expr>]</index></name>      <operator pos:start="219:46" pos:end="219:46">&amp;</operator> <literal type="number" pos:start="219:48" pos:end="219:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:29"><expr pos:start="221:17" pos:end="221:28"><name pos:start="221:17" pos:end="221:23">row_pix</name> <operator pos:start="221:25" pos:end="221:26">+=</operator> <literal type="number" pos:start="221:28" pos:end="221:28">8</literal></expr>;</expr_stmt>

                <if_stmt pos:start="223:17" pos:end="231:17"><if pos:start="223:17" pos:end="231:17">if <condition pos:start="223:20" pos:end="223:44">(<expr pos:start="223:21" pos:end="223:43"><name pos:start="223:21" pos:end="223:27">row_pix</name> <operator pos:start="223:29" pos:end="223:30">&gt;=</operator> <name pos:start="223:32" pos:end="223:43"><name pos:start="223:32" pos:end="223:36">avctx</name><operator pos:start="223:37" pos:end="223:38">-&gt;</operator><name pos:start="223:39" pos:end="223:43">width</name></name></expr>)</condition> <block pos:start="223:46" pos:end="231:17">{<block_content pos:start="225:21" pos:end="229:32">

                    <expr_stmt pos:start="225:21" pos:end="225:63"><expr pos:start="225:21" pos:end="225:62"><name pos:start="225:21" pos:end="225:21">i</name> <operator pos:start="225:23" pos:end="225:24">+=</operator> <name pos:start="225:26" pos:end="225:37">avpkt_stride</name> <operator pos:start="225:39" pos:end="225:39">-</operator> <operator pos:start="225:41" pos:end="225:41">(</operator><name pos:start="225:42" pos:end="225:42">i</name> <operator pos:start="225:44" pos:end="225:44">%</operator> <name pos:start="225:46" pos:end="225:57">avpkt_stride</name><operator pos:start="225:58" pos:end="225:58">)</operator> <operator pos:start="225:60" pos:end="225:60">-</operator> <literal type="number" pos:start="225:62" pos:end="225:62">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="227:21" pos:end="227:41"><expr pos:start="227:21" pos:end="227:40"><name pos:start="227:21" pos:end="227:21">j</name> <operator pos:start="227:23" pos:end="227:24">+=</operator> <literal type="number" pos:start="227:26" pos:end="227:28">2</literal> <operator pos:start="227:28" pos:end="227:28">-</operator> <operator pos:start="227:30" pos:end="227:30">(</operator><name pos:start="227:31" pos:end="227:31">j</name> <operator pos:start="227:33" pos:end="227:33">%</operator> <literal type="number" pos:start="227:35" pos:end="227:35">2</literal><operator pos:start="227:36" pos:end="227:36">)</operator> <operator pos:start="227:38" pos:end="227:38">-</operator> <literal type="number" pos:start="227:40" pos:end="227:40">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="229:21" pos:end="229:32"><expr pos:start="229:21" pos:end="229:31"><name pos:start="229:21" pos:end="229:27">row_pix</name> <operator pos:start="229:29" pos:end="229:29">=</operator> <literal type="number" pos:start="229:31" pos:end="229:31">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:28"><expr pos:start="237:9" pos:end="237:27"><name pos:start="237:9" pos:end="237:22">linesize_align</name> <operator pos:start="237:24" pos:end="237:24">=</operator> <literal type="number" pos:start="237:26" pos:end="237:27">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:18"><expr pos:start="239:9" pos:end="239:17"><name pos:start="239:9" pos:end="239:11">buf</name> <operator pos:start="239:13" pos:end="239:13">=</operator> <name pos:start="239:15" pos:end="239:17">dst</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="241:7" pos:end="289:5">else if <condition pos:start="241:15" pos:end="241:36">(<expr pos:start="241:16" pos:end="241:35"><name pos:start="241:16" pos:end="241:35"><name pos:start="241:16" pos:end="241:22">context</name><operator pos:start="241:23" pos:end="241:24">-&gt;</operator><name pos:start="241:25" pos:end="241:35">is_lt_16bpp</name></name></expr>)</condition> <block pos:start="241:38" pos:end="289:5">{<block_content pos:start="243:9" pos:end="287:18">

        <decl_stmt pos:start="243:9" pos:end="243:43"><decl pos:start="243:9" pos:end="243:42"><type pos:start="243:9" pos:end="243:17"><name pos:start="243:9" pos:end="243:15">uint8_t</name> <modifier pos:start="243:17" pos:end="243:17">*</modifier></type><name pos:start="243:18" pos:end="243:20">dst</name> <init pos:start="243:22" pos:end="243:42">= <expr pos:start="243:24" pos:end="243:42"><name pos:start="243:24" pos:end="243:36"><name pos:start="243:24" pos:end="243:28">frame</name><operator pos:start="243:29" pos:end="243:30">-&gt;</operator><name pos:start="243:31" pos:end="243:33">buf</name><index pos:start="243:34" pos:end="243:36">[<expr pos:start="243:35" pos:end="243:35"><literal type="number" pos:start="243:35" pos:end="243:35">0</literal></expr>]</index></name><operator pos:start="243:37" pos:end="243:38">-&gt;</operator><name pos:start="243:39" pos:end="243:42">data</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="245:9" pos:end="245:76"><decl pos:start="245:9" pos:end="245:75"><type pos:start="245:9" pos:end="245:11"><name pos:start="245:9" pos:end="245:11">int</name></type> <name pos:start="245:13" pos:end="245:18">packed</name> <init pos:start="245:20" pos:end="245:75">= <expr pos:start="245:22" pos:end="245:75"><operator pos:start="245:22" pos:end="245:22">(</operator><name pos:start="245:23" pos:end="245:38"><name pos:start="245:23" pos:end="245:27">avctx</name><operator pos:start="245:28" pos:end="245:29">-&gt;</operator><name pos:start="245:30" pos:end="245:38">codec_tag</name></name> <operator pos:start="245:40" pos:end="245:40">&amp;</operator> <literal type="number" pos:start="245:42" pos:end="245:49">0xFFFFFF</literal><operator pos:start="245:50" pos:end="245:50">)</operator> <operator pos:start="245:52" pos:end="245:53">==</operator> <call pos:start="245:55" pos:end="245:75"><name pos:start="245:55" pos:end="245:59">MKTAG</name><argument_list pos:start="245:60" pos:end="245:75">(<argument pos:start="245:61" pos:end="245:63"><expr pos:start="245:61" pos:end="245:63"><literal type="char" pos:start="245:61" pos:end="245:63">'B'</literal></expr></argument>,<argument pos:start="245:65" pos:end="245:67"><expr pos:start="245:65" pos:end="245:67"><literal type="char" pos:start="245:65" pos:end="245:67">'I'</literal></expr></argument>,<argument pos:start="245:69" pos:end="245:71"><expr pos:start="245:69" pos:end="245:71"><literal type="char" pos:start="245:69" pos:end="245:71">'T'</literal></expr></argument>, <argument pos:start="245:74" pos:end="245:74"><expr pos:start="245:74" pos:end="245:74"><literal type="number" pos:start="245:74" pos:end="245:74">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="247:9" pos:end="247:45"><decl pos:start="247:9" pos:end="247:44"><type pos:start="247:9" pos:end="247:11"><name pos:start="247:9" pos:end="247:11">int</name></type> <name pos:start="247:13" pos:end="247:16">swap</name>   <init pos:start="247:20" pos:end="247:44">=  <expr pos:start="247:23" pos:end="247:44"><name pos:start="247:23" pos:end="247:38"><name pos:start="247:23" pos:end="247:27">avctx</name><operator pos:start="247:28" pos:end="247:29">-&gt;</operator><name pos:start="247:30" pos:end="247:38">codec_tag</name></name> <operator pos:start="247:40" pos:end="247:41">&gt;&gt;</operator> <literal type="number" pos:start="247:43" pos:end="247:44">24</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="251:9" pos:end="273:9"><if pos:start="251:9" pos:end="273:9">if <condition pos:start="251:12" pos:end="251:27">(<expr pos:start="251:13" pos:end="251:26"><name pos:start="251:13" pos:end="251:18">packed</name> <operator pos:start="251:20" pos:end="251:21">&amp;&amp;</operator> <name pos:start="251:23" pos:end="251:26">swap</name></expr>)</condition> <block pos:start="251:29" pos:end="273:9">{<block_content pos:start="253:13" pos:end="271:41">

            <expr_stmt pos:start="253:13" pos:end="253:99"><expr pos:start="253:13" pos:end="253:98"><call pos:start="253:13" pos:end="253:98"><name pos:start="253:13" pos:end="253:33">av_fast_padded_malloc</name><argument_list pos:start="253:34" pos:end="253:98">(<argument pos:start="253:35" pos:end="253:57"><expr pos:start="253:35" pos:end="253:57"><operator pos:start="253:35" pos:end="253:35">&amp;</operator><name pos:start="253:36" pos:end="253:57"><name pos:start="253:36" pos:end="253:42">context</name><operator pos:start="253:43" pos:end="253:44">-&gt;</operator><name pos:start="253:45" pos:end="253:57">bitstream_buf</name></name></expr></argument>, <argument pos:start="253:60" pos:end="253:87"><expr pos:start="253:60" pos:end="253:87"><operator pos:start="253:60" pos:end="253:60">&amp;</operator><name pos:start="253:61" pos:end="253:87"><name pos:start="253:61" pos:end="253:67">context</name><operator pos:start="253:68" pos:end="253:69">-&gt;</operator><name pos:start="253:70" pos:end="253:87">bitstream_buf_size</name></name></expr></argument>, <argument pos:start="253:90" pos:end="253:97"><expr pos:start="253:90" pos:end="253:97"><name pos:start="253:90" pos:end="253:97">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="255:13" pos:end="257:39"><if pos:start="255:13" pos:end="257:39">if <condition pos:start="255:16" pos:end="255:40">(<expr pos:start="255:17" pos:end="255:39"><operator pos:start="255:17" pos:end="255:17">!</operator><name pos:start="255:18" pos:end="255:39"><name pos:start="255:18" pos:end="255:24">context</name><operator pos:start="255:25" pos:end="255:26">-&gt;</operator><name pos:start="255:27" pos:end="255:39">bitstream_buf</name></name></expr>)</condition><block type="pseudo" pos:start="257:17" pos:end="257:39"><block_content pos:start="257:17" pos:end="257:39">

                <return pos:start="257:17" pos:end="257:39">return <expr pos:start="257:24" pos:end="257:38"><call pos:start="257:24" pos:end="257:38"><name pos:start="257:24" pos:end="257:30">AVERROR</name><argument_list pos:start="257:31" pos:end="257:38">(<argument pos:start="257:32" pos:end="257:37"><expr pos:start="257:32" pos:end="257:37"><name pos:start="257:32" pos:end="257:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="259:13" pos:end="269:43"><if pos:start="259:13" pos:end="261:103">if <condition pos:start="259:16" pos:end="259:27">(<expr pos:start="259:17" pos:end="259:26"><name pos:start="259:17" pos:end="259:20">swap</name> <operator pos:start="259:22" pos:end="259:23">==</operator> <literal type="number" pos:start="259:25" pos:end="259:26">16</literal></expr>)</condition><block type="pseudo" pos:start="261:17" pos:end="261:103"><block_content pos:start="261:17" pos:end="261:103">

                <expr_stmt pos:start="261:17" pos:end="261:103"><expr pos:start="261:17" pos:end="261:102"><call pos:start="261:17" pos:end="261:102"><name pos:start="261:17" pos:end="261:42"><name pos:start="261:17" pos:end="261:23">context</name><operator pos:start="261:24" pos:end="261:25">-&gt;</operator><name pos:start="261:26" pos:end="261:30">bbdsp</name><operator pos:start="261:31" pos:end="261:31">.</operator><name pos:start="261:32" pos:end="261:42">bswap16_buf</name></name><argument_list pos:start="261:43" pos:end="261:102">(<argument pos:start="261:44" pos:end="261:65"><expr pos:start="261:44" pos:end="261:65"><name pos:start="261:44" pos:end="261:65"><name pos:start="261:44" pos:end="261:50">context</name><operator pos:start="261:51" pos:end="261:52">-&gt;</operator><name pos:start="261:53" pos:end="261:65">bitstream_buf</name></name></expr></argument>, <argument pos:start="261:68" pos:end="261:87"><expr pos:start="261:68" pos:end="261:87"><operator pos:start="261:68" pos:end="261:68">(</operator><specifier pos:start="261:69" pos:end="261:73">const</specifier> <name pos:start="261:75" pos:end="261:82">uint16_t</name><operator pos:start="261:83" pos:end="261:83">*</operator><operator pos:start="261:84" pos:end="261:84">)</operator><name pos:start="261:85" pos:end="261:87">buf</name></expr></argument>, <argument pos:start="261:90" pos:end="261:101"><expr pos:start="261:90" pos:end="261:101"><name pos:start="261:90" pos:end="261:97">buf_size</name> <operator pos:start="261:99" pos:end="261:99">/</operator> <literal type="number" pos:start="261:101" pos:end="261:101">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="263:13" pos:end="265:101">else if <condition pos:start="263:21" pos:end="263:32">(<expr pos:start="263:22" pos:end="263:31"><name pos:start="263:22" pos:end="263:25">swap</name> <operator pos:start="263:27" pos:end="263:28">==</operator> <literal type="number" pos:start="263:30" pos:end="263:31">32</literal></expr>)</condition><block type="pseudo" pos:start="265:17" pos:end="265:101"><block_content pos:start="265:17" pos:end="265:101">

                <expr_stmt pos:start="265:17" pos:end="265:101"><expr pos:start="265:17" pos:end="265:100"><call pos:start="265:17" pos:end="265:100"><name pos:start="265:17" pos:end="265:40"><name pos:start="265:17" pos:end="265:23">context</name><operator pos:start="265:24" pos:end="265:25">-&gt;</operator><name pos:start="265:26" pos:end="265:30">bbdsp</name><operator pos:start="265:31" pos:end="265:31">.</operator><name pos:start="265:32" pos:end="265:40">bswap_buf</name></name><argument_list pos:start="265:41" pos:end="265:100">(<argument pos:start="265:42" pos:end="265:63"><expr pos:start="265:42" pos:end="265:63"><name pos:start="265:42" pos:end="265:63"><name pos:start="265:42" pos:end="265:48">context</name><operator pos:start="265:49" pos:end="265:50">-&gt;</operator><name pos:start="265:51" pos:end="265:63">bitstream_buf</name></name></expr></argument>, <argument pos:start="265:66" pos:end="265:85"><expr pos:start="265:66" pos:end="265:85"><operator pos:start="265:66" pos:end="265:66">(</operator><specifier pos:start="265:67" pos:end="265:71">const</specifier> <name pos:start="265:73" pos:end="265:80">uint32_t</name><operator pos:start="265:81" pos:end="265:81">*</operator><operator pos:start="265:82" pos:end="265:82">)</operator><name pos:start="265:83" pos:end="265:85">buf</name></expr></argument>, <argument pos:start="265:88" pos:end="265:99"><expr pos:start="265:88" pos:end="265:99"><name pos:start="265:88" pos:end="265:95">buf_size</name> <operator pos:start="265:97" pos:end="265:97">/</operator> <literal type="number" pos:start="265:99" pos:end="265:99">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="267:13" pos:end="269:43">else<block type="pseudo" pos:start="269:17" pos:end="269:43"><block_content pos:start="269:17" pos:end="269:43">

                <return pos:start="269:17" pos:end="269:43">return <expr pos:start="269:24" pos:end="269:42"><name pos:start="269:24" pos:end="269:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></else></if_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:41"><expr pos:start="271:13" pos:end="271:40"><name pos:start="271:13" pos:end="271:15">buf</name> <operator pos:start="271:17" pos:end="271:17">=</operator> <name pos:start="271:19" pos:end="271:40"><name pos:start="271:19" pos:end="271:25">context</name><operator pos:start="271:26" pos:end="271:27">-&gt;</operator><name pos:start="271:28" pos:end="271:40">bitstream_buf</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="277:9" pos:end="283:57"><if pos:start="277:9" pos:end="279:57">if <condition pos:start="277:12" pos:end="277:45">(<expr pos:start="277:13" pos:end="277:44"><name pos:start="277:13" pos:end="277:23"><name pos:start="277:13" pos:end="277:16">desc</name><operator pos:start="277:17" pos:end="277:18">-&gt;</operator><name pos:start="277:19" pos:end="277:23">flags</name></name> <operator pos:start="277:25" pos:end="277:25">&amp;</operator> <name pos:start="277:27" pos:end="277:44">AV_PIX_FMT_FLAG_BE</name></expr>)</condition><block type="pseudo" pos:start="279:13" pos:end="279:57"><block_content pos:start="279:13" pos:end="279:57">

            <expr_stmt pos:start="279:13" pos:end="279:57"><expr pos:start="279:13" pos:end="279:56"><call pos:start="279:13" pos:end="279:56"><name pos:start="279:13" pos:end="279:21">scale16be</name><argument_list pos:start="279:22" pos:end="279:56">(<argument pos:start="279:23" pos:end="279:27"><expr pos:start="279:23" pos:end="279:27"><name pos:start="279:23" pos:end="279:27">avctx</name></expr></argument>, <argument pos:start="279:30" pos:end="279:32"><expr pos:start="279:30" pos:end="279:32"><name pos:start="279:30" pos:end="279:32">dst</name></expr></argument>, <argument pos:start="279:35" pos:end="279:37"><expr pos:start="279:35" pos:end="279:37"><name pos:start="279:35" pos:end="279:37">buf</name></expr></argument>, <argument pos:start="279:40" pos:end="279:47"><expr pos:start="279:40" pos:end="279:47"><name pos:start="279:40" pos:end="279:47">buf_size</name></expr></argument>, <argument pos:start="279:50" pos:end="279:55"><expr pos:start="279:50" pos:end="279:55"><name pos:start="279:50" pos:end="279:55">packed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="281:9" pos:end="283:57">else<block type="pseudo" pos:start="283:13" pos:end="283:57"><block_content pos:start="283:13" pos:end="283:57">

            <expr_stmt pos:start="283:13" pos:end="283:57"><expr pos:start="283:13" pos:end="283:56"><call pos:start="283:13" pos:end="283:56"><name pos:start="283:13" pos:end="283:21">scale16le</name><argument_list pos:start="283:22" pos:end="283:56">(<argument pos:start="283:23" pos:end="283:27"><expr pos:start="283:23" pos:end="283:27"><name pos:start="283:23" pos:end="283:27">avctx</name></expr></argument>, <argument pos:start="283:30" pos:end="283:32"><expr pos:start="283:30" pos:end="283:32"><name pos:start="283:30" pos:end="283:32">dst</name></expr></argument>, <argument pos:start="283:35" pos:end="283:37"><expr pos:start="283:35" pos:end="283:37"><name pos:start="283:35" pos:end="283:37">buf</name></expr></argument>, <argument pos:start="283:40" pos:end="283:47"><expr pos:start="283:40" pos:end="283:47"><name pos:start="283:40" pos:end="283:47">buf_size</name></expr></argument>, <argument pos:start="283:50" pos:end="283:55"><expr pos:start="283:50" pos:end="283:55"><name pos:start="283:50" pos:end="283:55">packed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="287:9" pos:end="287:18"><expr pos:start="287:9" pos:end="287:17"><name pos:start="287:9" pos:end="287:11">buf</name> <operator pos:start="287:13" pos:end="287:13">=</operator> <name pos:start="287:15" pos:end="287:17">dst</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="289:7" pos:end="295:5">else if <condition pos:start="289:15" pos:end="289:25">(<expr pos:start="289:16" pos:end="289:24"><name pos:start="289:16" pos:end="289:24">need_copy</name></expr>)</condition> <block pos:start="289:27" pos:end="295:5">{<block_content pos:start="291:9" pos:end="293:34">

        <expr_stmt pos:start="291:9" pos:end="291:51"><expr pos:start="291:9" pos:end="291:50"><call pos:start="291:9" pos:end="291:50"><name pos:start="291:9" pos:end="291:14">memcpy</name><argument_list pos:start="291:15" pos:end="291:50">(<argument pos:start="291:16" pos:end="291:34"><expr pos:start="291:16" pos:end="291:34"><name pos:start="291:16" pos:end="291:28"><name pos:start="291:16" pos:end="291:20">frame</name><operator pos:start="291:21" pos:end="291:22">-&gt;</operator><name pos:start="291:23" pos:end="291:25">buf</name><index pos:start="291:26" pos:end="291:28">[<expr pos:start="291:27" pos:end="291:27"><literal type="number" pos:start="291:27" pos:end="291:27">0</literal></expr>]</index></name><operator pos:start="291:29" pos:end="291:30">-&gt;</operator><name pos:start="291:31" pos:end="291:34">data</name></expr></argument>, <argument pos:start="291:37" pos:end="291:39"><expr pos:start="291:37" pos:end="291:39"><name pos:start="291:37" pos:end="291:39">buf</name></expr></argument>, <argument pos:start="291:42" pos:end="291:49"><expr pos:start="291:42" pos:end="291:49"><name pos:start="291:42" pos:end="291:49">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:34"><expr pos:start="293:9" pos:end="293:33"><name pos:start="293:9" pos:end="293:11">buf</name> <operator pos:start="293:13" pos:end="293:13">=</operator> <name pos:start="293:15" pos:end="293:27"><name pos:start="293:15" pos:end="293:19">frame</name><operator pos:start="293:20" pos:end="293:21">-&gt;</operator><name pos:start="293:22" pos:end="293:24">buf</name><index pos:start="293:25" pos:end="293:27">[<expr pos:start="293:26" pos:end="293:26"><literal type="number" pos:start="293:26" pos:end="293:26">0</literal></expr>]</index></name><operator pos:start="293:28" pos:end="293:29">-&gt;</operator><name pos:start="293:30" pos:end="293:33">data</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="299:5" pos:end="303:46"><if pos:start="299:5" pos:end="303:46">if <condition pos:start="299:8" pos:end="301:54">(<expr pos:start="299:9" pos:end="301:53"><name pos:start="299:9" pos:end="299:24"><name pos:start="299:9" pos:end="299:13">avctx</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:24">codec_tag</name></name> <operator pos:start="299:26" pos:end="299:27">==</operator> <call pos:start="299:29" pos:end="299:53"><name pos:start="299:29" pos:end="299:33">MKTAG</name><argument_list pos:start="299:34" pos:end="299:53">(<argument pos:start="299:35" pos:end="299:37"><expr pos:start="299:35" pos:end="299:37"><literal type="char" pos:start="299:35" pos:end="299:37">'A'</literal></expr></argument>, <argument pos:start="299:40" pos:end="299:42"><expr pos:start="299:40" pos:end="299:42"><literal type="char" pos:start="299:40" pos:end="299:42">'V'</literal></expr></argument>, <argument pos:start="299:45" pos:end="299:47"><expr pos:start="299:45" pos:end="299:47"><literal type="char" pos:start="299:45" pos:end="299:47">'1'</literal></expr></argument>, <argument pos:start="299:50" pos:end="299:52"><expr pos:start="299:50" pos:end="299:52"><literal type="char" pos:start="299:50" pos:end="299:52">'x'</literal></expr></argument>)</argument_list></call> <operator pos:start="299:55" pos:end="299:56">||</operator>

        <name pos:start="301:9" pos:end="301:24"><name pos:start="301:9" pos:end="301:13">avctx</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:24">codec_tag</name></name> <operator pos:start="301:26" pos:end="301:27">==</operator> <call pos:start="301:29" pos:end="301:53"><name pos:start="301:29" pos:end="301:33">MKTAG</name><argument_list pos:start="301:34" pos:end="301:53">(<argument pos:start="301:35" pos:end="301:37"><expr pos:start="301:35" pos:end="301:37"><literal type="char" pos:start="301:35" pos:end="301:37">'A'</literal></expr></argument>, <argument pos:start="301:40" pos:end="301:42"><expr pos:start="301:40" pos:end="301:42"><literal type="char" pos:start="301:40" pos:end="301:42">'V'</literal></expr></argument>, <argument pos:start="301:45" pos:end="301:47"><expr pos:start="301:45" pos:end="301:47"><literal type="char" pos:start="301:45" pos:end="301:47">'u'</literal></expr></argument>, <argument pos:start="301:50" pos:end="301:52"><expr pos:start="301:50" pos:end="301:52"><literal type="char" pos:start="301:50" pos:end="301:52">'p'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="303:9" pos:end="303:46"><block_content pos:start="303:9" pos:end="303:46">

        <expr_stmt pos:start="303:9" pos:end="303:46"><expr pos:start="303:9" pos:end="303:45"><name pos:start="303:9" pos:end="303:11">buf</name> <operator pos:start="303:13" pos:end="303:14">+=</operator> <name pos:start="303:16" pos:end="303:23">buf_size</name> <operator pos:start="303:25" pos:end="303:25">-</operator> <name pos:start="303:27" pos:end="303:45"><name pos:start="303:27" pos:end="303:33">context</name><operator pos:start="303:34" pos:end="303:35">-&gt;</operator><name pos:start="303:36" pos:end="303:45">frame_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="307:5" pos:end="307:87"><expr pos:start="307:5" pos:end="307:86"><name pos:start="307:5" pos:end="307:7">len</name> <operator pos:start="307:9" pos:end="307:9">=</operator> <name pos:start="307:11" pos:end="307:29"><name pos:start="307:11" pos:end="307:17">context</name><operator pos:start="307:18" pos:end="307:19">-&gt;</operator><name pos:start="307:20" pos:end="307:29">frame_size</name></name> <operator pos:start="307:31" pos:end="307:31">-</operator> <operator pos:start="307:33" pos:end="307:33">(</operator><ternary pos:start="307:34" pos:end="307:85"><condition pos:start="307:34" pos:end="307:66"><expr pos:start="307:34" pos:end="307:64"><name pos:start="307:34" pos:end="307:47"><name pos:start="307:34" pos:end="307:38">avctx</name><operator pos:start="307:39" pos:end="307:40">-&gt;</operator><name pos:start="307:41" pos:end="307:47">pix_fmt</name></name><operator pos:start="307:48" pos:end="307:49">==</operator><name pos:start="307:50" pos:end="307:64">AV_PIX_FMT_PAL8</name></expr> ?</condition><then pos:start="307:68" pos:end="307:81"> <expr pos:start="307:68" pos:end="307:81"><name pos:start="307:68" pos:end="307:81">AVPALETTE_SIZE</name></expr> </then><else pos:start="307:83" pos:end="307:85">: <expr pos:start="307:85" pos:end="307:85"><literal type="number" pos:start="307:85" pos:end="307:85">0</literal></expr></else></ternary><operator pos:start="307:86" pos:end="307:86">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="309:5" pos:end="317:5"><if pos:start="309:5" pos:end="317:5">if <condition pos:start="309:8" pos:end="309:97">(<expr pos:start="309:9" pos:end="309:96"><name pos:start="309:9" pos:end="309:16">buf_size</name> <operator pos:start="309:18" pos:end="309:18">&lt;</operator> <name pos:start="309:20" pos:end="309:22">len</name> <operator pos:start="309:24" pos:end="309:25">&amp;&amp;</operator> <operator pos:start="309:27" pos:end="309:27">(</operator><operator pos:start="309:28" pos:end="309:28">(</operator><name pos:start="309:29" pos:end="309:44"><name pos:start="309:29" pos:end="309:33">avctx</name><operator pos:start="309:34" pos:end="309:35">-&gt;</operator><name pos:start="309:36" pos:end="309:44">codec_tag</name></name> <operator pos:start="309:46" pos:end="309:46">&amp;</operator> <literal type="number" pos:start="309:48" pos:end="309:55">0xFFFFFF</literal><operator pos:start="309:56" pos:end="309:56">)</operator> <operator pos:start="309:58" pos:end="309:59">!=</operator> <call pos:start="309:61" pos:end="309:81"><name pos:start="309:61" pos:end="309:65">MKTAG</name><argument_list pos:start="309:66" pos:end="309:81">(<argument pos:start="309:67" pos:end="309:69"><expr pos:start="309:67" pos:end="309:69"><literal type="char" pos:start="309:67" pos:end="309:69">'B'</literal></expr></argument>,<argument pos:start="309:71" pos:end="309:73"><expr pos:start="309:71" pos:end="309:73"><literal type="char" pos:start="309:71" pos:end="309:73">'I'</literal></expr></argument>,<argument pos:start="309:75" pos:end="309:77"><expr pos:start="309:75" pos:end="309:77"><literal type="char" pos:start="309:75" pos:end="309:77">'T'</literal></expr></argument>, <argument pos:start="309:80" pos:end="309:80"><expr pos:start="309:80" pos:end="309:80"><literal type="number" pos:start="309:80" pos:end="309:80">0</literal></expr></argument>)</argument_list></call> <operator pos:start="309:83" pos:end="309:84">||</operator> <operator pos:start="309:86" pos:end="309:86">!</operator><name pos:start="309:87" pos:end="309:95">need_copy</name><operator pos:start="309:96" pos:end="309:96">)</operator></expr>)</condition> <block pos:start="309:99" pos:end="317:5">{<block_content pos:start="311:9" pos:end="315:31">

        <expr_stmt pos:start="311:9" pos:end="311:117"><expr pos:start="311:9" pos:end="311:116"><call pos:start="311:9" pos:end="311:116"><name pos:start="311:9" pos:end="311:14">av_log</name><argument_list pos:start="311:15" pos:end="311:116">(<argument pos:start="311:16" pos:end="311:20"><expr pos:start="311:16" pos:end="311:20"><name pos:start="311:16" pos:end="311:20">avctx</name></expr></argument>, <argument pos:start="311:23" pos:end="311:34"><expr pos:start="311:23" pos:end="311:34"><name pos:start="311:23" pos:end="311:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="311:37" pos:end="311:100"><expr pos:start="311:37" pos:end="311:100"><literal type="string" pos:start="311:37" pos:end="311:100">"Invalid buffer size, packet size %d &lt; expected frame_size %d\n"</literal></expr></argument>, <argument pos:start="311:103" pos:end="311:110"><expr pos:start="311:103" pos:end="311:110"><name pos:start="311:103" pos:end="311:110">buf_size</name></expr></argument>, <argument pos:start="311:113" pos:end="311:115"><expr pos:start="311:113" pos:end="311:115"><name pos:start="311:113" pos:end="311:115">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:40"><expr pos:start="313:9" pos:end="313:39"><call pos:start="313:9" pos:end="313:39"><name pos:start="313:9" pos:end="313:23">av_buffer_unref</name><argument_list pos:start="313:24" pos:end="313:39">(<argument pos:start="313:25" pos:end="313:38"><expr pos:start="313:25" pos:end="313:38"><operator pos:start="313:25" pos:end="313:25">&amp;</operator><name pos:start="313:26" pos:end="313:38"><name pos:start="313:26" pos:end="313:30">frame</name><operator pos:start="313:31" pos:end="313:32">-&gt;</operator><name pos:start="313:33" pos:end="313:35">buf</name><index pos:start="313:36" pos:end="313:38">[<expr pos:start="313:37" pos:end="313:37"><literal type="number" pos:start="313:37" pos:end="313:37">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="315:9" pos:end="315:31">return <expr pos:start="315:16" pos:end="315:30"><call pos:start="315:16" pos:end="315:30"><name pos:start="315:16" pos:end="315:22">AVERROR</name><argument_list pos:start="315:23" pos:end="315:30">(<argument pos:start="315:24" pos:end="315:29"><expr pos:start="315:24" pos:end="315:29"><name pos:start="315:24" pos:end="315:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="321:5" pos:end="331:5"><if pos:start="321:5" pos:end="331:5">if <condition pos:start="321:8" pos:end="325:73">(<expr pos:start="321:9" pos:end="325:72"><operator pos:start="321:9" pos:end="321:9">(</operator><name pos:start="321:10" pos:end="321:12">res</name> <operator pos:start="321:14" pos:end="321:14">=</operator> <call pos:start="321:16" pos:end="325:67"><name pos:start="321:16" pos:end="321:35">av_image_fill_arrays</name><argument_list pos:start="321:36" pos:end="325:67">(<argument pos:start="321:37" pos:end="321:47"><expr pos:start="321:37" pos:end="321:47"><name pos:start="321:37" pos:end="321:47"><name pos:start="321:37" pos:end="321:41">frame</name><operator pos:start="321:42" pos:end="321:43">-&gt;</operator><name pos:start="321:44" pos:end="321:47">data</name></name></expr></argument>, <argument pos:start="321:50" pos:end="321:64"><expr pos:start="321:50" pos:end="321:64"><name pos:start="321:50" pos:end="321:64"><name pos:start="321:50" pos:end="321:54">frame</name><operator pos:start="321:55" pos:end="321:56">-&gt;</operator><name pos:start="321:57" pos:end="321:64">linesize</name></name></expr></argument>,

                                    <argument pos:start="323:37" pos:end="323:39"><expr pos:start="323:37" pos:end="323:39"><name pos:start="323:37" pos:end="323:39">buf</name></expr></argument>, <argument pos:start="323:42" pos:end="323:55"><expr pos:start="323:42" pos:end="323:55"><name pos:start="323:42" pos:end="323:55"><name pos:start="323:42" pos:end="323:46">avctx</name><operator pos:start="323:47" pos:end="323:48">-&gt;</operator><name pos:start="323:49" pos:end="323:55">pix_fmt</name></name></expr></argument>,

                                    <argument pos:start="325:37" pos:end="325:48"><expr pos:start="325:37" pos:end="325:48"><name pos:start="325:37" pos:end="325:48"><name pos:start="325:37" pos:end="325:41">avctx</name><operator pos:start="325:42" pos:end="325:43">-&gt;</operator><name pos:start="325:44" pos:end="325:48">width</name></name></expr></argument>, <argument pos:start="325:51" pos:end="325:63"><expr pos:start="325:51" pos:end="325:63"><name pos:start="325:51" pos:end="325:63"><name pos:start="325:51" pos:end="325:55">avctx</name><operator pos:start="325:56" pos:end="325:57">-&gt;</operator><name pos:start="325:58" pos:end="325:63">height</name></name></expr></argument>, <argument pos:start="325:66" pos:end="325:66"><expr pos:start="325:66" pos:end="325:66"><literal type="number" pos:start="325:66" pos:end="325:66">1</literal></expr></argument>)</argument_list></call><operator pos:start="325:68" pos:end="325:68">)</operator> <operator pos:start="325:70" pos:end="325:70">&lt;</operator> <literal type="number" pos:start="325:72" pos:end="325:72">0</literal></expr>)</condition> <block pos:start="325:75" pos:end="331:5">{<block_content pos:start="327:9" pos:end="329:19">

        <expr_stmt pos:start="327:9" pos:end="327:40"><expr pos:start="327:9" pos:end="327:39"><call pos:start="327:9" pos:end="327:39"><name pos:start="327:9" pos:end="327:23">av_buffer_unref</name><argument_list pos:start="327:24" pos:end="327:39">(<argument pos:start="327:25" pos:end="327:38"><expr pos:start="327:25" pos:end="327:38"><operator pos:start="327:25" pos:end="327:25">&amp;</operator><name pos:start="327:26" pos:end="327:38"><name pos:start="327:26" pos:end="327:30">frame</name><operator pos:start="327:31" pos:end="327:32">-&gt;</operator><name pos:start="327:33" pos:end="327:35">buf</name><index pos:start="327:36" pos:end="327:38">[<expr pos:start="327:37" pos:end="327:37"><literal type="number" pos:start="327:37" pos:end="327:37">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="329:9" pos:end="329:19">return <expr pos:start="329:16" pos:end="329:18"><name pos:start="329:16" pos:end="329:18">res</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="335:5" pos:end="363:5"><if pos:start="335:5" pos:end="363:5">if <condition pos:start="335:8" pos:end="335:42">(<expr pos:start="335:9" pos:end="335:41"><name pos:start="335:9" pos:end="335:22"><name pos:start="335:9" pos:end="335:13">avctx</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:22">pix_fmt</name></name> <operator pos:start="335:24" pos:end="335:25">==</operator> <name pos:start="335:27" pos:end="335:41">AV_PIX_FMT_PAL8</name></expr>)</condition> <block pos:start="335:44" pos:end="363:5">{<block_content pos:start="337:9" pos:end="361:9">

        <decl_stmt pos:start="337:9" pos:end="339:59"><decl pos:start="337:9" pos:end="339:58"><type pos:start="337:9" pos:end="337:23"><specifier pos:start="337:9" pos:end="337:13">const</specifier> <name pos:start="337:15" pos:end="337:21">uint8_t</name> <modifier pos:start="337:23" pos:end="337:23">*</modifier></type><name pos:start="337:24" pos:end="337:26">pal</name> <init pos:start="337:28" pos:end="339:58">= <expr pos:start="337:30" pos:end="339:58"><call pos:start="337:30" pos:end="339:58"><name pos:start="337:30" pos:end="337:52">av_packet_get_side_data</name><argument_list pos:start="337:53" pos:end="339:58">(<argument pos:start="337:54" pos:end="337:58"><expr pos:start="337:54" pos:end="337:58"><name pos:start="337:54" pos:end="337:58">avpkt</name></expr></argument>, <argument pos:start="337:61" pos:end="337:79"><expr pos:start="337:61" pos:end="337:79"><name pos:start="337:61" pos:end="337:79">AV_PKT_DATA_PALETTE</name></expr></argument>,

                                                     <argument pos:start="339:54" pos:end="339:57"><expr pos:start="339:54" pos:end="339:57"><name pos:start="339:54" pos:end="339:57">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="343:9" pos:end="361:9"><if pos:start="343:9" pos:end="361:9">if <condition pos:start="343:12" pos:end="343:16">(<expr pos:start="343:13" pos:end="343:15"><name pos:start="343:13" pos:end="343:15">pal</name></expr>)</condition> <block pos:start="343:18" pos:end="361:9">{<block_content pos:start="345:13" pos:end="359:43">

            <expr_stmt pos:start="345:13" pos:end="345:47"><expr pos:start="345:13" pos:end="345:46"><call pos:start="345:13" pos:end="345:46"><name pos:start="345:13" pos:end="345:27">av_buffer_unref</name><argument_list pos:start="345:28" pos:end="345:46">(<argument pos:start="345:29" pos:end="345:45"><expr pos:start="345:29" pos:end="345:45"><operator pos:start="345:29" pos:end="345:29">&amp;</operator><name pos:start="345:30" pos:end="345:45"><name pos:start="345:30" pos:end="345:36">context</name><operator pos:start="345:37" pos:end="345:38">-&gt;</operator><name pos:start="345:39" pos:end="345:45">palette</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="347:63"><expr pos:start="347:13" pos:end="347:62"><name pos:start="347:13" pos:end="347:28"><name pos:start="347:13" pos:end="347:19">context</name><operator pos:start="347:20" pos:end="347:21">-&gt;</operator><name pos:start="347:22" pos:end="347:28">palette</name></name> <operator pos:start="347:30" pos:end="347:30">=</operator> <call pos:start="347:32" pos:end="347:62"><name pos:start="347:32" pos:end="347:46">av_buffer_alloc</name><argument_list pos:start="347:47" pos:end="347:62">(<argument pos:start="347:48" pos:end="347:61"><expr pos:start="347:48" pos:end="347:61"><name pos:start="347:48" pos:end="347:61">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="349:13" pos:end="355:13"><if pos:start="349:13" pos:end="355:13">if <condition pos:start="349:16" pos:end="349:34">(<expr pos:start="349:17" pos:end="349:33"><operator pos:start="349:17" pos:end="349:17">!</operator><name pos:start="349:18" pos:end="349:33"><name pos:start="349:18" pos:end="349:24">context</name><operator pos:start="349:25" pos:end="349:26">-&gt;</operator><name pos:start="349:27" pos:end="349:33">palette</name></name></expr>)</condition> <block pos:start="349:36" pos:end="355:13">{<block_content pos:start="351:17" pos:end="353:39">

                <expr_stmt pos:start="351:17" pos:end="351:48"><expr pos:start="351:17" pos:end="351:47"><call pos:start="351:17" pos:end="351:47"><name pos:start="351:17" pos:end="351:31">av_buffer_unref</name><argument_list pos:start="351:32" pos:end="351:47">(<argument pos:start="351:33" pos:end="351:46"><expr pos:start="351:33" pos:end="351:46"><operator pos:start="351:33" pos:end="351:33">&amp;</operator><name pos:start="351:34" pos:end="351:46"><name pos:start="351:34" pos:end="351:38">frame</name><operator pos:start="351:39" pos:end="351:40">-&gt;</operator><name pos:start="351:41" pos:end="351:43">buf</name><index pos:start="351:44" pos:end="351:46">[<expr pos:start="351:45" pos:end="351:45"><literal type="number" pos:start="351:45" pos:end="351:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="353:17" pos:end="353:39">return <expr pos:start="353:24" pos:end="353:38"><call pos:start="353:24" pos:end="353:38"><name pos:start="353:24" pos:end="353:30">AVERROR</name><argument_list pos:start="353:31" pos:end="353:38">(<argument pos:start="353:32" pos:end="353:37"><expr pos:start="353:32" pos:end="353:37"><name pos:start="353:32" pos:end="353:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="357:13" pos:end="357:64"><expr pos:start="357:13" pos:end="357:63"><call pos:start="357:13" pos:end="357:63"><name pos:start="357:13" pos:end="357:18">memcpy</name><argument_list pos:start="357:19" pos:end="357:63">(<argument pos:start="357:20" pos:end="357:41"><expr pos:start="357:20" pos:end="357:41"><name pos:start="357:20" pos:end="357:41"><name pos:start="357:20" pos:end="357:26">context</name><operator pos:start="357:27" pos:end="357:28">-&gt;</operator><name pos:start="357:29" pos:end="357:35">palette</name><operator pos:start="357:36" pos:end="357:37">-&gt;</operator><name pos:start="357:38" pos:end="357:41">data</name></name></expr></argument>, <argument pos:start="357:44" pos:end="357:46"><expr pos:start="357:44" pos:end="357:46"><name pos:start="357:44" pos:end="357:46">pal</name></expr></argument>, <argument pos:start="357:49" pos:end="357:62"><expr pos:start="357:49" pos:end="357:62"><name pos:start="357:49" pos:end="357:62">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:43"><expr pos:start="359:13" pos:end="359:42"><name pos:start="359:13" pos:end="359:38"><name pos:start="359:13" pos:end="359:17">frame</name><operator pos:start="359:18" pos:end="359:19">-&gt;</operator><name pos:start="359:20" pos:end="359:38">palette_has_changed</name></name> <operator pos:start="359:40" pos:end="359:40">=</operator> <literal type="number" pos:start="359:42" pos:end="359:42">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="367:5" pos:end="383:73"><if pos:start="367:5" pos:end="383:73">if <condition pos:start="367:8" pos:end="381:80">(<expr pos:start="367:9" pos:end="381:79"><operator pos:start="367:9" pos:end="367:9">(</operator><name pos:start="367:10" pos:end="367:23"><name pos:start="367:10" pos:end="367:14">avctx</name><operator pos:start="367:15" pos:end="367:16">-&gt;</operator><name pos:start="367:17" pos:end="367:23">pix_fmt</name></name><operator pos:start="367:24" pos:end="367:25">==</operator><name pos:start="367:26" pos:end="367:41">AV_PIX_FMT_BGR24</name>    <operator pos:start="367:46" pos:end="367:47">||</operator>

        <name pos:start="369:9" pos:end="369:22"><name pos:start="369:9" pos:end="369:13">avctx</name><operator pos:start="369:14" pos:end="369:15">-&gt;</operator><name pos:start="369:16" pos:end="369:22">pix_fmt</name></name><operator pos:start="369:23" pos:end="369:24">==</operator><name pos:start="369:25" pos:end="369:40">AV_PIX_FMT_GRAY8</name>    <operator pos:start="369:45" pos:end="369:46">||</operator>

        <name pos:start="371:9" pos:end="371:22"><name pos:start="371:9" pos:end="371:13">avctx</name><operator pos:start="371:14" pos:end="371:15">-&gt;</operator><name pos:start="371:16" pos:end="371:22">pix_fmt</name></name><operator pos:start="371:23" pos:end="371:24">==</operator><name pos:start="371:25" pos:end="371:43">AV_PIX_FMT_RGB555LE</name> <operator pos:start="371:45" pos:end="371:46">||</operator>

        <name pos:start="373:9" pos:end="373:22"><name pos:start="373:9" pos:end="373:13">avctx</name><operator pos:start="373:14" pos:end="373:15">-&gt;</operator><name pos:start="373:16" pos:end="373:22">pix_fmt</name></name><operator pos:start="373:23" pos:end="373:24">==</operator><name pos:start="373:25" pos:end="373:43">AV_PIX_FMT_RGB555BE</name> <operator pos:start="373:45" pos:end="373:46">||</operator>

        <name pos:start="375:9" pos:end="375:22"><name pos:start="375:9" pos:end="375:13">avctx</name><operator pos:start="375:14" pos:end="375:15">-&gt;</operator><name pos:start="375:16" pos:end="375:22">pix_fmt</name></name><operator pos:start="375:23" pos:end="375:24">==</operator><name pos:start="375:25" pos:end="375:43">AV_PIX_FMT_RGB565LE</name> <operator pos:start="375:45" pos:end="375:46">||</operator>

        <name pos:start="377:9" pos:end="377:22"><name pos:start="377:9" pos:end="377:13">avctx</name><operator pos:start="377:14" pos:end="377:15">-&gt;</operator><name pos:start="377:16" pos:end="377:22">pix_fmt</name></name><operator pos:start="377:23" pos:end="377:24">==</operator><name pos:start="377:25" pos:end="377:44">AV_PIX_FMT_MONOWHITE</name> <operator pos:start="377:46" pos:end="377:47">||</operator>

        <name pos:start="379:9" pos:end="379:22"><name pos:start="379:9" pos:end="379:13">avctx</name><operator pos:start="379:14" pos:end="379:15">-&gt;</operator><name pos:start="379:16" pos:end="379:22">pix_fmt</name></name><operator pos:start="379:23" pos:end="379:24">==</operator><name pos:start="379:25" pos:end="379:39">AV_PIX_FMT_PAL8</name><operator pos:start="379:40" pos:end="379:40">)</operator> <operator pos:start="379:42" pos:end="379:43">&amp;&amp;</operator>

        <call pos:start="381:9" pos:end="381:51"><name pos:start="381:9" pos:end="381:15">FFALIGN</name><argument_list pos:start="381:16" pos:end="381:51">(<argument pos:start="381:17" pos:end="381:34"><expr pos:start="381:17" pos:end="381:34"><name pos:start="381:17" pos:end="381:34"><name pos:start="381:17" pos:end="381:21">frame</name><operator pos:start="381:22" pos:end="381:23">-&gt;</operator><name pos:start="381:24" pos:end="381:31">linesize</name><index pos:start="381:32" pos:end="381:34">[<expr pos:start="381:33" pos:end="381:33"><literal type="number" pos:start="381:33" pos:end="381:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="381:37" pos:end="381:50"><expr pos:start="381:37" pos:end="381:50"><name pos:start="381:37" pos:end="381:50">linesize_align</name></expr></argument>)</argument_list></call> <operator pos:start="381:53" pos:end="381:53">*</operator> <name pos:start="381:55" pos:end="381:67"><name pos:start="381:55" pos:end="381:59">avctx</name><operator pos:start="381:60" pos:end="381:61">-&gt;</operator><name pos:start="381:62" pos:end="381:67">height</name></name> <operator pos:start="381:69" pos:end="381:70">&lt;=</operator> <name pos:start="381:72" pos:end="381:79">buf_size</name></expr>)</condition><block type="pseudo" pos:start="383:9" pos:end="383:73"><block_content pos:start="383:9" pos:end="383:73">

        <expr_stmt pos:start="383:9" pos:end="383:73"><expr pos:start="383:9" pos:end="383:72"><name pos:start="383:9" pos:end="383:26"><name pos:start="383:9" pos:end="383:13">frame</name><operator pos:start="383:14" pos:end="383:15">-&gt;</operator><name pos:start="383:16" pos:end="383:23">linesize</name><index pos:start="383:24" pos:end="383:26">[<expr pos:start="383:25" pos:end="383:25"><literal type="number" pos:start="383:25" pos:end="383:25">0</literal></expr>]</index></name> <operator pos:start="383:28" pos:end="383:28">=</operator> <call pos:start="383:30" pos:end="383:72"><name pos:start="383:30" pos:end="383:36">FFALIGN</name><argument_list pos:start="383:37" pos:end="383:72">(<argument pos:start="383:38" pos:end="383:55"><expr pos:start="383:38" pos:end="383:55"><name pos:start="383:38" pos:end="383:55"><name pos:start="383:38" pos:end="383:42">frame</name><operator pos:start="383:43" pos:end="383:44">-&gt;</operator><name pos:start="383:45" pos:end="383:52">linesize</name><index pos:start="383:53" pos:end="383:55">[<expr pos:start="383:54" pos:end="383:54"><literal type="number" pos:start="383:54" pos:end="383:54">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="383:58" pos:end="383:71"><expr pos:start="383:58" pos:end="383:71"><name pos:start="383:58" pos:end="383:71">linesize_align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="387:5" pos:end="401:5"><if pos:start="387:5" pos:end="401:5">if <condition pos:start="387:8" pos:end="391:92">(<expr pos:start="387:9" pos:end="391:91"><name pos:start="387:9" pos:end="387:22"><name pos:start="387:9" pos:end="387:13">avctx</name><operator pos:start="387:14" pos:end="387:15">-&gt;</operator><name pos:start="387:16" pos:end="387:22">pix_fmt</name></name> <operator pos:start="387:24" pos:end="387:25">==</operator> <name pos:start="387:27" pos:end="387:41">AV_PIX_FMT_NV12</name> <operator pos:start="387:43" pos:end="387:44">&amp;&amp;</operator> <name pos:start="387:46" pos:end="387:61"><name pos:start="387:46" pos:end="387:50">avctx</name><operator pos:start="387:51" pos:end="387:52">-&gt;</operator><name pos:start="387:53" pos:end="387:61">codec_tag</name></name> <operator pos:start="387:63" pos:end="387:64">==</operator> <call pos:start="387:66" pos:end="387:90"><name pos:start="387:66" pos:end="387:70">MKTAG</name><argument_list pos:start="387:71" pos:end="387:90">(<argument pos:start="387:72" pos:end="387:74"><expr pos:start="387:72" pos:end="387:74"><literal type="char" pos:start="387:72" pos:end="387:74">'N'</literal></expr></argument>, <argument pos:start="387:77" pos:end="387:79"><expr pos:start="387:77" pos:end="387:79"><literal type="char" pos:start="387:77" pos:end="387:79">'V'</literal></expr></argument>, <argument pos:start="387:82" pos:end="387:84"><expr pos:start="387:82" pos:end="387:84"><literal type="char" pos:start="387:82" pos:end="387:84">'1'</literal></expr></argument>, <argument pos:start="387:87" pos:end="387:89"><expr pos:start="387:87" pos:end="387:89"><literal type="char" pos:start="387:87" pos:end="387:89">'2'</literal></expr></argument>)</argument_list></call> <operator pos:start="387:92" pos:end="387:93">&amp;&amp;</operator>

        <call pos:start="389:9" pos:end="389:51"><name pos:start="389:9" pos:end="389:15">FFALIGN</name><argument_list pos:start="389:16" pos:end="389:51">(<argument pos:start="389:17" pos:end="389:34"><expr pos:start="389:17" pos:end="389:34"><name pos:start="389:17" pos:end="389:34"><name pos:start="389:17" pos:end="389:21">frame</name><operator pos:start="389:22" pos:end="389:23">-&gt;</operator><name pos:start="389:24" pos:end="389:31">linesize</name><index pos:start="389:32" pos:end="389:34">[<expr pos:start="389:33" pos:end="389:33"><literal type="number" pos:start="389:33" pos:end="389:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="389:37" pos:end="389:50"><expr pos:start="389:37" pos:end="389:50"><name pos:start="389:37" pos:end="389:50">linesize_align</name></expr></argument>)</argument_list></call> <operator pos:start="389:53" pos:end="389:53">*</operator> <name pos:start="389:55" pos:end="389:67"><name pos:start="389:55" pos:end="389:59">avctx</name><operator pos:start="389:60" pos:end="389:61">-&gt;</operator><name pos:start="389:62" pos:end="389:67">height</name></name> <operator pos:start="389:69" pos:end="389:69">+</operator>

        <call pos:start="391:9" pos:end="391:51"><name pos:start="391:9" pos:end="391:15">FFALIGN</name><argument_list pos:start="391:16" pos:end="391:51">(<argument pos:start="391:17" pos:end="391:34"><expr pos:start="391:17" pos:end="391:34"><name pos:start="391:17" pos:end="391:34"><name pos:start="391:17" pos:end="391:21">frame</name><operator pos:start="391:22" pos:end="391:23">-&gt;</operator><name pos:start="391:24" pos:end="391:31">linesize</name><index pos:start="391:32" pos:end="391:34">[<expr pos:start="391:33" pos:end="391:33"><literal type="number" pos:start="391:33" pos:end="391:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="391:37" pos:end="391:50"><expr pos:start="391:37" pos:end="391:50"><name pos:start="391:37" pos:end="391:50">linesize_align</name></expr></argument>)</argument_list></call> <operator pos:start="391:53" pos:end="391:53">*</operator> <operator pos:start="391:55" pos:end="391:55">(</operator><operator pos:start="391:56" pos:end="391:56">(</operator><name pos:start="391:57" pos:end="391:69"><name pos:start="391:57" pos:end="391:61">avctx</name><operator pos:start="391:62" pos:end="391:63">-&gt;</operator><name pos:start="391:64" pos:end="391:69">height</name></name> <operator pos:start="391:71" pos:end="391:71">+</operator> <literal type="number" pos:start="391:73" pos:end="391:73">1</literal><operator pos:start="391:74" pos:end="391:74">)</operator> <operator pos:start="391:76" pos:end="391:76">/</operator> <literal type="number" pos:start="391:78" pos:end="391:78">2</literal><operator pos:start="391:79" pos:end="391:79">)</operator> <operator pos:start="391:81" pos:end="391:82">&lt;=</operator> <name pos:start="391:84" pos:end="391:91">buf_size</name></expr>)</condition> <block pos:start="391:94" pos:end="401:5">{<block_content pos:start="393:9" pos:end="399:73">

        <decl_stmt pos:start="393:9" pos:end="393:62"><decl pos:start="393:9" pos:end="393:61"><type pos:start="393:9" pos:end="393:11"><name pos:start="393:9" pos:end="393:11">int</name></type> <name pos:start="393:13" pos:end="393:15">la0</name> <init pos:start="393:17" pos:end="393:61">= <expr pos:start="393:19" pos:end="393:61"><call pos:start="393:19" pos:end="393:61"><name pos:start="393:19" pos:end="393:25">FFALIGN</name><argument_list pos:start="393:26" pos:end="393:61">(<argument pos:start="393:27" pos:end="393:44"><expr pos:start="393:27" pos:end="393:44"><name pos:start="393:27" pos:end="393:44"><name pos:start="393:27" pos:end="393:31">frame</name><operator pos:start="393:32" pos:end="393:33">-&gt;</operator><name pos:start="393:34" pos:end="393:41">linesize</name><index pos:start="393:42" pos:end="393:44">[<expr pos:start="393:43" pos:end="393:43"><literal type="number" pos:start="393:43" pos:end="393:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="393:47" pos:end="393:60"><expr pos:start="393:47" pos:end="393:60"><name pos:start="393:47" pos:end="393:60">linesize_align</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="395:9" pos:end="395:69"><expr pos:start="395:9" pos:end="395:68"><name pos:start="395:9" pos:end="395:22"><name pos:start="395:9" pos:end="395:13">frame</name><operator pos:start="395:14" pos:end="395:15">-&gt;</operator><name pos:start="395:16" pos:end="395:19">data</name><index pos:start="395:20" pos:end="395:22">[<expr pos:start="395:21" pos:end="395:21"><literal type="number" pos:start="395:21" pos:end="395:21">1</literal></expr>]</index></name> <operator pos:start="395:24" pos:end="395:25">+=</operator> <operator pos:start="395:27" pos:end="395:27">(</operator><name pos:start="395:28" pos:end="395:30">la0</name> <operator pos:start="395:32" pos:end="395:32">-</operator> <name pos:start="395:34" pos:end="395:51"><name pos:start="395:34" pos:end="395:38">frame</name><operator pos:start="395:39" pos:end="395:40">-&gt;</operator><name pos:start="395:41" pos:end="395:48">linesize</name><index pos:start="395:49" pos:end="395:51">[<expr pos:start="395:50" pos:end="395:50"><literal type="number" pos:start="395:50" pos:end="395:50">0</literal></expr>]</index></name><operator pos:start="395:52" pos:end="395:52">)</operator> <operator pos:start="395:54" pos:end="395:54">*</operator> <name pos:start="395:56" pos:end="395:68"><name pos:start="395:56" pos:end="395:60">avctx</name><operator pos:start="395:61" pos:end="395:62">-&gt;</operator><name pos:start="395:63" pos:end="395:68">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="397:9" pos:end="397:33"><expr pos:start="397:9" pos:end="397:32"><name pos:start="397:9" pos:end="397:26"><name pos:start="397:9" pos:end="397:13">frame</name><operator pos:start="397:14" pos:end="397:15">-&gt;</operator><name pos:start="397:16" pos:end="397:23">linesize</name><index pos:start="397:24" pos:end="397:26">[<expr pos:start="397:25" pos:end="397:25"><literal type="number" pos:start="397:25" pos:end="397:25">0</literal></expr>]</index></name> <operator pos:start="397:28" pos:end="397:28">=</operator> <name pos:start="397:30" pos:end="397:32">la0</name></expr>;</expr_stmt>

        <expr_stmt pos:start="399:9" pos:end="399:73"><expr pos:start="399:9" pos:end="399:72"><name pos:start="399:9" pos:end="399:26"><name pos:start="399:9" pos:end="399:13">frame</name><operator pos:start="399:14" pos:end="399:15">-&gt;</operator><name pos:start="399:16" pos:end="399:23">linesize</name><index pos:start="399:24" pos:end="399:26">[<expr pos:start="399:25" pos:end="399:25"><literal type="number" pos:start="399:25" pos:end="399:25">1</literal></expr>]</index></name> <operator pos:start="399:28" pos:end="399:28">=</operator> <call pos:start="399:30" pos:end="399:72"><name pos:start="399:30" pos:end="399:36">FFALIGN</name><argument_list pos:start="399:37" pos:end="399:72">(<argument pos:start="399:38" pos:end="399:55"><expr pos:start="399:38" pos:end="399:55"><name pos:start="399:38" pos:end="399:55"><name pos:start="399:38" pos:end="399:42">frame</name><operator pos:start="399:43" pos:end="399:44">-&gt;</operator><name pos:start="399:45" pos:end="399:52">linesize</name><index pos:start="399:53" pos:end="399:55">[<expr pos:start="399:54" pos:end="399:54"><literal type="number" pos:start="399:54" pos:end="399:54">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="399:58" pos:end="399:71"><expr pos:start="399:58" pos:end="399:71"><name pos:start="399:58" pos:end="399:71">linesize_align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="405:5" pos:end="421:5"><if pos:start="405:5" pos:end="421:5">if <condition pos:start="405:8" pos:end="407:50">(<expr pos:start="405:9" pos:end="407:49"><operator pos:start="405:9" pos:end="405:9">(</operator><name pos:start="405:10" pos:end="405:23"><name pos:start="405:10" pos:end="405:14">avctx</name><operator pos:start="405:15" pos:end="405:16">-&gt;</operator><name pos:start="405:17" pos:end="405:23">pix_fmt</name></name> <operator pos:start="405:25" pos:end="405:26">==</operator> <name pos:start="405:28" pos:end="405:42">AV_PIX_FMT_PAL8</name> <operator pos:start="405:44" pos:end="405:45">&amp;&amp;</operator> <name pos:start="405:47" pos:end="405:54">buf_size</name> <operator pos:start="405:56" pos:end="405:56">&lt;</operator> <name pos:start="405:58" pos:end="405:76"><name pos:start="405:58" pos:end="405:64">context</name><operator pos:start="405:65" pos:end="405:66">-&gt;</operator><name pos:start="405:67" pos:end="405:76">frame_size</name></name><operator pos:start="405:77" pos:end="405:77">)</operator> <operator pos:start="405:79" pos:end="405:80">||</operator>

        <operator pos:start="407:9" pos:end="407:9">(</operator><name pos:start="407:10" pos:end="407:20"><name pos:start="407:10" pos:end="407:13">desc</name><operator pos:start="407:14" pos:end="407:15">-&gt;</operator><name pos:start="407:16" pos:end="407:20">flags</name></name> <operator pos:start="407:22" pos:end="407:22">&amp;</operator> <name pos:start="407:24" pos:end="407:48">AV_PIX_FMT_FLAG_PSEUDOPAL</name><operator pos:start="407:49" pos:end="407:49">)</operator></expr>)</condition> <block pos:start="407:52" pos:end="421:5">{<block_content pos:start="409:9" pos:end="419:45">

        <expr_stmt pos:start="409:9" pos:end="409:57"><expr pos:start="409:9" pos:end="409:56"><name pos:start="409:9" pos:end="409:21"><name pos:start="409:9" pos:end="409:13">frame</name><operator pos:start="409:14" pos:end="409:15">-&gt;</operator><name pos:start="409:16" pos:end="409:18">buf</name><index pos:start="409:19" pos:end="409:21">[<expr pos:start="409:20" pos:end="409:20"><literal type="number" pos:start="409:20" pos:end="409:20">1</literal></expr>]</index></name>  <operator pos:start="409:24" pos:end="409:24">=</operator> <call pos:start="409:26" pos:end="409:56"><name pos:start="409:26" pos:end="409:38">av_buffer_ref</name><argument_list pos:start="409:39" pos:end="409:56">(<argument pos:start="409:40" pos:end="409:55"><expr pos:start="409:40" pos:end="409:55"><name pos:start="409:40" pos:end="409:55"><name pos:start="409:40" pos:end="409:46">context</name><operator pos:start="409:47" pos:end="409:48">-&gt;</operator><name pos:start="409:49" pos:end="409:55">palette</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="411:9" pos:end="417:9"><if pos:start="411:9" pos:end="417:9">if <condition pos:start="411:12" pos:end="411:27">(<expr pos:start="411:13" pos:end="411:26"><operator pos:start="411:13" pos:end="411:13">!</operator><name pos:start="411:14" pos:end="411:26"><name pos:start="411:14" pos:end="411:18">frame</name><operator pos:start="411:19" pos:end="411:20">-&gt;</operator><name pos:start="411:21" pos:end="411:23">buf</name><index pos:start="411:24" pos:end="411:26">[<expr pos:start="411:25" pos:end="411:25"><literal type="number" pos:start="411:25" pos:end="411:25">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="411:29" pos:end="417:9">{<block_content pos:start="413:13" pos:end="415:35">

            <expr_stmt pos:start="413:13" pos:end="413:44"><expr pos:start="413:13" pos:end="413:43"><call pos:start="413:13" pos:end="413:43"><name pos:start="413:13" pos:end="413:27">av_buffer_unref</name><argument_list pos:start="413:28" pos:end="413:43">(<argument pos:start="413:29" pos:end="413:42"><expr pos:start="413:29" pos:end="413:42"><operator pos:start="413:29" pos:end="413:29">&amp;</operator><name pos:start="413:30" pos:end="413:42"><name pos:start="413:30" pos:end="413:34">frame</name><operator pos:start="413:35" pos:end="413:36">-&gt;</operator><name pos:start="413:37" pos:end="413:39">buf</name><index pos:start="413:40" pos:end="413:42">[<expr pos:start="413:41" pos:end="413:41"><literal type="number" pos:start="413:41" pos:end="413:41">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="415:13" pos:end="415:35">return <expr pos:start="415:20" pos:end="415:34"><call pos:start="415:20" pos:end="415:34"><name pos:start="415:20" pos:end="415:26">AVERROR</name><argument_list pos:start="415:27" pos:end="415:34">(<argument pos:start="415:28" pos:end="415:33"><expr pos:start="415:28" pos:end="415:33"><name pos:start="415:28" pos:end="415:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="419:9" pos:end="419:45"><expr pos:start="419:9" pos:end="419:44"><name pos:start="419:9" pos:end="419:22"><name pos:start="419:9" pos:end="419:13">frame</name><operator pos:start="419:14" pos:end="419:15">-&gt;</operator><name pos:start="419:16" pos:end="419:19">data</name><index pos:start="419:20" pos:end="419:22">[<expr pos:start="419:21" pos:end="419:21"><literal type="number" pos:start="419:21" pos:end="419:21">1</literal></expr>]</index></name> <operator pos:start="419:24" pos:end="419:24">=</operator> <name pos:start="419:26" pos:end="419:38"><name pos:start="419:26" pos:end="419:30">frame</name><operator pos:start="419:31" pos:end="419:32">-&gt;</operator><name pos:start="419:33" pos:end="419:35">buf</name><index pos:start="419:36" pos:end="419:38">[<expr pos:start="419:37" pos:end="419:37"><literal type="number" pos:start="419:37" pos:end="419:37">1</literal></expr>]</index></name><operator pos:start="419:39" pos:end="419:40">-&gt;</operator><name pos:start="419:41" pos:end="419:44">data</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="425:5" pos:end="429:59"><if pos:start="425:5" pos:end="429:59">if <condition pos:start="425:8" pos:end="427:68">(<expr pos:start="425:9" pos:end="427:67"><name pos:start="425:9" pos:end="425:22"><name pos:start="425:9" pos:end="425:13">avctx</name><operator pos:start="425:14" pos:end="425:15">-&gt;</operator><name pos:start="425:16" pos:end="425:22">pix_fmt</name></name> <operator pos:start="425:24" pos:end="425:25">==</operator> <name pos:start="425:27" pos:end="425:42">AV_PIX_FMT_BGR24</name> <operator pos:start="425:44" pos:end="425:45">&amp;&amp;</operator>

        <operator pos:start="427:9" pos:end="427:9">(</operator><operator pos:start="427:10" pos:end="427:10">(</operator><name pos:start="427:11" pos:end="427:28"><name pos:start="427:11" pos:end="427:15">frame</name><operator pos:start="427:16" pos:end="427:17">-&gt;</operator><name pos:start="427:18" pos:end="427:25">linesize</name><index pos:start="427:26" pos:end="427:28">[<expr pos:start="427:27" pos:end="427:27"><literal type="number" pos:start="427:27" pos:end="427:27">0</literal></expr>]</index></name> <operator pos:start="427:30" pos:end="427:30">+</operator> <literal type="number" pos:start="427:32" pos:end="427:32">3</literal><operator pos:start="427:33" pos:end="427:33">)</operator> <operator pos:start="427:35" pos:end="427:35">&amp;</operator> <operator pos:start="427:37" pos:end="427:37">~</operator><literal type="number" pos:start="427:38" pos:end="427:38">3</literal><operator pos:start="427:39" pos:end="427:39">)</operator> <operator pos:start="427:41" pos:end="427:41">*</operator> <name pos:start="427:43" pos:end="427:55"><name pos:start="427:43" pos:end="427:47">avctx</name><operator pos:start="427:48" pos:end="427:49">-&gt;</operator><name pos:start="427:50" pos:end="427:55">height</name></name> <operator pos:start="427:57" pos:end="427:58">&lt;=</operator> <name pos:start="427:60" pos:end="427:67">buf_size</name></expr>)</condition><block type="pseudo" pos:start="429:9" pos:end="429:59"><block_content pos:start="429:9" pos:end="429:59">

        <expr_stmt pos:start="429:9" pos:end="429:59"><expr pos:start="429:9" pos:end="429:58"><name pos:start="429:9" pos:end="429:26"><name pos:start="429:9" pos:end="429:13">frame</name><operator pos:start="429:14" pos:end="429:15">-&gt;</operator><name pos:start="429:16" pos:end="429:23">linesize</name><index pos:start="429:24" pos:end="429:26">[<expr pos:start="429:25" pos:end="429:25"><literal type="number" pos:start="429:25" pos:end="429:25">0</literal></expr>]</index></name> <operator pos:start="429:28" pos:end="429:28">=</operator> <operator pos:start="429:30" pos:end="429:30">(</operator><name pos:start="429:31" pos:end="429:48"><name pos:start="429:31" pos:end="429:35">frame</name><operator pos:start="429:36" pos:end="429:37">-&gt;</operator><name pos:start="429:38" pos:end="429:45">linesize</name><index pos:start="429:46" pos:end="429:48">[<expr pos:start="429:47" pos:end="429:47"><literal type="number" pos:start="429:47" pos:end="429:47">0</literal></expr>]</index></name> <operator pos:start="429:50" pos:end="429:50">+</operator> <literal type="number" pos:start="429:52" pos:end="429:52">3</literal><operator pos:start="429:53" pos:end="429:53">)</operator> <operator pos:start="429:55" pos:end="429:55">&amp;</operator> <operator pos:start="429:57" pos:end="429:57">~</operator><literal type="number" pos:start="429:58" pos:end="429:58">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="433:5" pos:end="435:27"><if pos:start="433:5" pos:end="435:27">if <condition pos:start="433:8" pos:end="433:22">(<expr pos:start="433:9" pos:end="433:21"><name pos:start="433:9" pos:end="433:21"><name pos:start="433:9" pos:end="433:15">context</name><operator pos:start="433:16" pos:end="433:17">-&gt;</operator><name pos:start="433:18" pos:end="433:21">flip</name></name></expr>)</condition><block type="pseudo" pos:start="435:9" pos:end="435:27"><block_content pos:start="435:9" pos:end="435:27">

        <expr_stmt pos:start="435:9" pos:end="435:27"><expr pos:start="435:9" pos:end="435:26"><call pos:start="435:9" pos:end="435:26"><name pos:start="435:9" pos:end="435:12">flip</name><argument_list pos:start="435:13" pos:end="435:26">(<argument pos:start="435:14" pos:end="435:18"><expr pos:start="435:14" pos:end="435:18"><name pos:start="435:14" pos:end="435:18">avctx</name></expr></argument>, <argument pos:start="435:21" pos:end="435:25"><expr pos:start="435:21" pos:end="435:25"><name pos:start="435:21" pos:end="435:25">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="439:5" pos:end="447:58"><if pos:start="439:5" pos:end="447:58">if <condition pos:start="439:8" pos:end="445:54">(<expr pos:start="439:9" pos:end="445:53"><name pos:start="439:9" pos:end="439:24"><name pos:start="439:9" pos:end="439:13">avctx</name><operator pos:start="439:14" pos:end="439:15">-&gt;</operator><name pos:start="439:16" pos:end="439:24">codec_tag</name></name> <operator pos:start="439:26" pos:end="439:27">==</operator> <call pos:start="439:29" pos:end="439:53"><name pos:start="439:29" pos:end="439:33">MKTAG</name><argument_list pos:start="439:34" pos:end="439:53">(<argument pos:start="439:35" pos:end="439:37"><expr pos:start="439:35" pos:end="439:37"><literal type="char" pos:start="439:35" pos:end="439:37">'Y'</literal></expr></argument>, <argument pos:start="439:40" pos:end="439:42"><expr pos:start="439:40" pos:end="439:42"><literal type="char" pos:start="439:40" pos:end="439:42">'V'</literal></expr></argument>, <argument pos:start="439:45" pos:end="439:47"><expr pos:start="439:45" pos:end="439:47"><literal type="char" pos:start="439:45" pos:end="439:47">'1'</literal></expr></argument>, <argument pos:start="439:50" pos:end="439:52"><expr pos:start="439:50" pos:end="439:52"><literal type="char" pos:start="439:50" pos:end="439:52">'2'</literal></expr></argument>)</argument_list></call> <operator pos:start="439:55" pos:end="439:56">||</operator>

        <name pos:start="441:9" pos:end="441:24"><name pos:start="441:9" pos:end="441:13">avctx</name><operator pos:start="441:14" pos:end="441:15">-&gt;</operator><name pos:start="441:16" pos:end="441:24">codec_tag</name></name> <operator pos:start="441:26" pos:end="441:27">==</operator> <call pos:start="441:29" pos:end="441:53"><name pos:start="441:29" pos:end="441:33">MKTAG</name><argument_list pos:start="441:34" pos:end="441:53">(<argument pos:start="441:35" pos:end="441:37"><expr pos:start="441:35" pos:end="441:37"><literal type="char" pos:start="441:35" pos:end="441:37">'Y'</literal></expr></argument>, <argument pos:start="441:40" pos:end="441:42"><expr pos:start="441:40" pos:end="441:42"><literal type="char" pos:start="441:40" pos:end="441:42">'V'</literal></expr></argument>, <argument pos:start="441:45" pos:end="441:47"><expr pos:start="441:45" pos:end="441:47"><literal type="char" pos:start="441:45" pos:end="441:47">'1'</literal></expr></argument>, <argument pos:start="441:50" pos:end="441:52"><expr pos:start="441:50" pos:end="441:52"><literal type="char" pos:start="441:50" pos:end="441:52">'6'</literal></expr></argument>)</argument_list></call> <operator pos:start="441:55" pos:end="441:56">||</operator>

        <name pos:start="443:9" pos:end="443:24"><name pos:start="443:9" pos:end="443:13">avctx</name><operator pos:start="443:14" pos:end="443:15">-&gt;</operator><name pos:start="443:16" pos:end="443:24">codec_tag</name></name> <operator pos:start="443:26" pos:end="443:27">==</operator> <call pos:start="443:29" pos:end="443:53"><name pos:start="443:29" pos:end="443:33">MKTAG</name><argument_list pos:start="443:34" pos:end="443:53">(<argument pos:start="443:35" pos:end="443:37"><expr pos:start="443:35" pos:end="443:37"><literal type="char" pos:start="443:35" pos:end="443:37">'Y'</literal></expr></argument>, <argument pos:start="443:40" pos:end="443:42"><expr pos:start="443:40" pos:end="443:42"><literal type="char" pos:start="443:40" pos:end="443:42">'V'</literal></expr></argument>, <argument pos:start="443:45" pos:end="443:47"><expr pos:start="443:45" pos:end="443:47"><literal type="char" pos:start="443:45" pos:end="443:47">'2'</literal></expr></argument>, <argument pos:start="443:50" pos:end="443:52"><expr pos:start="443:50" pos:end="443:52"><literal type="char" pos:start="443:50" pos:end="443:52">'4'</literal></expr></argument>)</argument_list></call> <operator pos:start="443:55" pos:end="443:56">||</operator>

        <name pos:start="445:9" pos:end="445:24"><name pos:start="445:9" pos:end="445:13">avctx</name><operator pos:start="445:14" pos:end="445:15">-&gt;</operator><name pos:start="445:16" pos:end="445:24">codec_tag</name></name> <operator pos:start="445:26" pos:end="445:27">==</operator> <call pos:start="445:29" pos:end="445:53"><name pos:start="445:29" pos:end="445:33">MKTAG</name><argument_list pos:start="445:34" pos:end="445:53">(<argument pos:start="445:35" pos:end="445:37"><expr pos:start="445:35" pos:end="445:37"><literal type="char" pos:start="445:35" pos:end="445:37">'Y'</literal></expr></argument>, <argument pos:start="445:40" pos:end="445:42"><expr pos:start="445:40" pos:end="445:42"><literal type="char" pos:start="445:40" pos:end="445:42">'V'</literal></expr></argument>, <argument pos:start="445:45" pos:end="445:47"><expr pos:start="445:45" pos:end="445:47"><literal type="char" pos:start="445:45" pos:end="445:47">'U'</literal></expr></argument>, <argument pos:start="445:50" pos:end="445:52"><expr pos:start="445:50" pos:end="445:52"><literal type="char" pos:start="445:50" pos:end="445:52">'9'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="447:9" pos:end="447:58"><block_content pos:start="447:9" pos:end="447:58">

        <expr_stmt pos:start="447:9" pos:end="447:58"><expr pos:start="447:9" pos:end="447:57"><call pos:start="447:9" pos:end="447:57"><name pos:start="447:9" pos:end="447:14">FFSWAP</name><argument_list pos:start="447:15" pos:end="447:57">(<argument pos:start="447:16" pos:end="447:24"><expr pos:start="447:16" pos:end="447:24"><name pos:start="447:16" pos:end="447:22">uint8_t</name> <operator pos:start="447:24" pos:end="447:24">*</operator></expr></argument>, <argument pos:start="447:27" pos:end="447:40"><expr pos:start="447:27" pos:end="447:40"><name pos:start="447:27" pos:end="447:40"><name pos:start="447:27" pos:end="447:31">frame</name><operator pos:start="447:32" pos:end="447:33">-&gt;</operator><name pos:start="447:34" pos:end="447:37">data</name><index pos:start="447:38" pos:end="447:40">[<expr pos:start="447:39" pos:end="447:39"><literal type="number" pos:start="447:39" pos:end="447:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="447:43" pos:end="447:56"><expr pos:start="447:43" pos:end="447:56"><name pos:start="447:43" pos:end="447:56"><name pos:start="447:43" pos:end="447:47">frame</name><operator pos:start="447:48" pos:end="447:49">-&gt;</operator><name pos:start="447:50" pos:end="447:53">data</name><index pos:start="447:54" pos:end="447:56">[<expr pos:start="447:55" pos:end="447:55"><literal type="number" pos:start="447:55" pos:end="447:55">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="451:5" pos:end="457:5"><if pos:start="451:5" pos:end="457:5">if <condition pos:start="451:8" pos:end="451:100">(<expr pos:start="451:9" pos:end="451:99"><name pos:start="451:9" pos:end="451:24"><name pos:start="451:9" pos:end="451:13">avctx</name><operator pos:start="451:14" pos:end="451:15">-&gt;</operator><name pos:start="451:16" pos:end="451:24">codec_tag</name></name> <operator pos:start="451:26" pos:end="451:27">==</operator> <call pos:start="451:29" pos:end="451:43"><name pos:start="451:29" pos:end="451:35">AV_RL32</name><argument_list pos:start="451:36" pos:end="451:43">(<argument pos:start="451:37" pos:end="451:42"><expr pos:start="451:37" pos:end="451:42"><literal type="string" pos:start="451:37" pos:end="451:42">"I420"</literal></expr></argument>)</argument_list></call> <operator pos:start="451:45" pos:end="451:46">&amp;&amp;</operator> <operator pos:start="451:48" pos:end="451:48">(</operator><name pos:start="451:49" pos:end="451:60"><name pos:start="451:49" pos:end="451:53">avctx</name><operator pos:start="451:54" pos:end="451:55">-&gt;</operator><name pos:start="451:56" pos:end="451:60">width</name></name><operator pos:start="451:61" pos:end="451:61">+</operator><literal type="number" pos:start="451:62" pos:end="451:62">1</literal><operator pos:start="451:63" pos:end="451:63">)</operator><operator pos:start="451:64" pos:end="451:64">*</operator><operator pos:start="451:65" pos:end="451:65">(</operator><name pos:start="451:66" pos:end="451:78"><name pos:start="451:66" pos:end="451:70">avctx</name><operator pos:start="451:71" pos:end="451:72">-&gt;</operator><name pos:start="451:73" pos:end="451:78">height</name></name><operator pos:start="451:79" pos:end="451:79">+</operator><literal type="number" pos:start="451:80" pos:end="451:80">1</literal><operator pos:start="451:81" pos:end="451:81">)</operator> <operator pos:start="451:83" pos:end="451:83">*</operator> <literal type="number" pos:start="451:85" pos:end="451:85">3</literal><operator pos:start="451:86" pos:end="451:86">/</operator><literal type="number" pos:start="451:87" pos:end="451:87">2</literal> <operator pos:start="451:89" pos:end="451:90">==</operator> <name pos:start="451:92" pos:end="451:99">buf_size</name></expr>)</condition> <block pos:start="451:102" pos:end="457:5">{<block_content pos:start="453:9" pos:end="455:111">

        <expr_stmt pos:start="453:9" pos:end="453:106"><expr pos:start="453:9" pos:end="453:105"><name pos:start="453:9" pos:end="453:22"><name pos:start="453:9" pos:end="453:13">frame</name><operator pos:start="453:14" pos:end="453:15">-&gt;</operator><name pos:start="453:16" pos:end="453:19">data</name><index pos:start="453:20" pos:end="453:22">[<expr pos:start="453:21" pos:end="453:21"><literal type="number" pos:start="453:21" pos:end="453:21">1</literal></expr>]</index></name> <operator pos:start="453:24" pos:end="453:24">=</operator> <name pos:start="453:26" pos:end="453:39"><name pos:start="453:26" pos:end="453:30">frame</name><operator pos:start="453:31" pos:end="453:32">-&gt;</operator><name pos:start="453:33" pos:end="453:36">data</name><index pos:start="453:37" pos:end="453:39">[<expr pos:start="453:38" pos:end="453:38"><literal type="number" pos:start="453:38" pos:end="453:38">1</literal></expr>]</index></name> <operator pos:start="453:41" pos:end="453:41">+</operator>  <operator pos:start="453:44" pos:end="453:44">(</operator><name pos:start="453:45" pos:end="453:56"><name pos:start="453:45" pos:end="453:49">avctx</name><operator pos:start="453:50" pos:end="453:51">-&gt;</operator><name pos:start="453:52" pos:end="453:56">width</name></name><operator pos:start="453:57" pos:end="453:57">+</operator><literal type="number" pos:start="453:58" pos:end="453:58">1</literal><operator pos:start="453:59" pos:end="453:59">)</operator><operator pos:start="453:60" pos:end="453:60">*</operator><operator pos:start="453:61" pos:end="453:61">(</operator><name pos:start="453:62" pos:end="453:74"><name pos:start="453:62" pos:end="453:66">avctx</name><operator pos:start="453:67" pos:end="453:68">-&gt;</operator><name pos:start="453:69" pos:end="453:74">height</name></name><operator pos:start="453:75" pos:end="453:75">+</operator><literal type="number" pos:start="453:76" pos:end="453:76">1</literal><operator pos:start="453:77" pos:end="453:77">)</operator> <operator pos:start="453:79" pos:end="453:79">-</operator><name pos:start="453:80" pos:end="453:91"><name pos:start="453:80" pos:end="453:84">avctx</name><operator pos:start="453:85" pos:end="453:86">-&gt;</operator><name pos:start="453:87" pos:end="453:91">width</name></name><operator pos:start="453:92" pos:end="453:92">*</operator><name pos:start="453:93" pos:end="453:105"><name pos:start="453:93" pos:end="453:97">avctx</name><operator pos:start="453:98" pos:end="453:99">-&gt;</operator><name pos:start="453:100" pos:end="453:105">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="455:9" pos:end="455:111"><expr pos:start="455:9" pos:end="455:110"><name pos:start="455:9" pos:end="455:22"><name pos:start="455:9" pos:end="455:13">frame</name><operator pos:start="455:14" pos:end="455:15">-&gt;</operator><name pos:start="455:16" pos:end="455:19">data</name><index pos:start="455:20" pos:end="455:22">[<expr pos:start="455:21" pos:end="455:21"><literal type="number" pos:start="455:21" pos:end="455:21">2</literal></expr>]</index></name> <operator pos:start="455:24" pos:end="455:24">=</operator> <name pos:start="455:26" pos:end="455:39"><name pos:start="455:26" pos:end="455:30">frame</name><operator pos:start="455:31" pos:end="455:32">-&gt;</operator><name pos:start="455:33" pos:end="455:36">data</name><index pos:start="455:37" pos:end="455:39">[<expr pos:start="455:38" pos:end="455:38"><literal type="number" pos:start="455:38" pos:end="455:38">2</literal></expr>]</index></name> <operator pos:start="455:41" pos:end="455:41">+</operator> <operator pos:start="455:43" pos:end="455:43">(</operator><operator pos:start="455:44" pos:end="455:44">(</operator><name pos:start="455:45" pos:end="455:56"><name pos:start="455:45" pos:end="455:49">avctx</name><operator pos:start="455:50" pos:end="455:51">-&gt;</operator><name pos:start="455:52" pos:end="455:56">width</name></name><operator pos:start="455:57" pos:end="455:57">+</operator><literal type="number" pos:start="455:58" pos:end="455:58">1</literal><operator pos:start="455:59" pos:end="455:59">)</operator><operator pos:start="455:60" pos:end="455:60">*</operator><operator pos:start="455:61" pos:end="455:61">(</operator><name pos:start="455:62" pos:end="455:74"><name pos:start="455:62" pos:end="455:66">avctx</name><operator pos:start="455:67" pos:end="455:68">-&gt;</operator><name pos:start="455:69" pos:end="455:74">height</name></name><operator pos:start="455:75" pos:end="455:75">+</operator><literal type="number" pos:start="455:76" pos:end="455:76">1</literal><operator pos:start="455:77" pos:end="455:77">)</operator> <operator pos:start="455:79" pos:end="455:79">-</operator><name pos:start="455:80" pos:end="455:91"><name pos:start="455:80" pos:end="455:84">avctx</name><operator pos:start="455:85" pos:end="455:86">-&gt;</operator><name pos:start="455:87" pos:end="455:91">width</name></name><operator pos:start="455:92" pos:end="455:92">*</operator><name pos:start="455:93" pos:end="455:105"><name pos:start="455:93" pos:end="455:97">avctx</name><operator pos:start="455:98" pos:end="455:99">-&gt;</operator><name pos:start="455:100" pos:end="455:105">height</name></name><operator pos:start="455:106" pos:end="455:106">)</operator><operator pos:start="455:107" pos:end="455:107">*</operator><literal type="number" pos:start="455:108" pos:end="455:108">5</literal><operator pos:start="455:109" pos:end="455:109">/</operator><literal type="number" pos:start="455:110" pos:end="455:110">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="461:5" pos:end="479:5"><if pos:start="461:5" pos:end="479:5">if <condition pos:start="461:8" pos:end="463:47">(<expr pos:start="461:9" pos:end="463:46"><name pos:start="461:9" pos:end="461:24"><name pos:start="461:9" pos:end="461:13">avctx</name><operator pos:start="461:14" pos:end="461:15">-&gt;</operator><name pos:start="461:16" pos:end="461:24">codec_tag</name></name> <operator pos:start="461:26" pos:end="461:27">==</operator> <call pos:start="461:29" pos:end="461:43"><name pos:start="461:29" pos:end="461:35">AV_RL32</name><argument_list pos:start="461:36" pos:end="461:43">(<argument pos:start="461:37" pos:end="461:42"><expr pos:start="461:37" pos:end="461:42"><literal type="string" pos:start="461:37" pos:end="461:42">"yuv2"</literal></expr></argument>)</argument_list></call> <operator pos:start="461:45" pos:end="461:46">&amp;&amp;</operator>

        <name pos:start="463:9" pos:end="463:22"><name pos:start="463:9" pos:end="463:13">avctx</name><operator pos:start="463:14" pos:end="463:15">-&gt;</operator><name pos:start="463:16" pos:end="463:22">pix_fmt</name></name>   <operator pos:start="463:26" pos:end="463:27">==</operator> <name pos:start="463:29" pos:end="463:46">AV_PIX_FMT_YUYV422</name></expr>)</condition> <block pos:start="463:49" pos:end="479:5">{<block_content pos:start="465:9" pos:end="477:9">

        <decl_stmt pos:start="465:9" pos:end="465:17"><decl pos:start="465:9" pos:end="465:13"><type pos:start="465:9" pos:end="465:11"><name pos:start="465:9" pos:end="465:11">int</name></type> <name pos:start="465:13" pos:end="465:13">x</name></decl>, <decl pos:start="465:16" pos:end="465:16"><type ref="prev" pos:start="465:9" pos:end="465:11"/><name pos:start="465:16" pos:end="465:16">y</name></decl>;</decl_stmt>

        <decl_stmt pos:start="467:9" pos:end="467:39"><decl pos:start="467:9" pos:end="467:38"><type pos:start="467:9" pos:end="467:17"><name pos:start="467:9" pos:end="467:15">uint8_t</name> <modifier pos:start="467:17" pos:end="467:17">*</modifier></type><name pos:start="467:18" pos:end="467:21">line</name> <init pos:start="467:23" pos:end="467:38">= <expr pos:start="467:25" pos:end="467:38"><name pos:start="467:25" pos:end="467:38"><name pos:start="467:25" pos:end="467:29">frame</name><operator pos:start="467:30" pos:end="467:31">-&gt;</operator><name pos:start="467:32" pos:end="467:35">data</name><index pos:start="467:36" pos:end="467:38">[<expr pos:start="467:37" pos:end="467:37"><literal type="number" pos:start="467:37" pos:end="467:37">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="469:9" pos:end="477:9">for <control pos:start="469:13" pos:end="469:43">(<init pos:start="469:14" pos:end="469:19"><expr pos:start="469:14" pos:end="469:18"><name pos:start="469:14" pos:end="469:14">y</name> <operator pos:start="469:16" pos:end="469:16">=</operator> <literal type="number" pos:start="469:18" pos:end="469:18">0</literal></expr>;</init> <condition pos:start="469:21" pos:end="469:38"><expr pos:start="469:21" pos:end="469:37"><name pos:start="469:21" pos:end="469:21">y</name> <operator pos:start="469:23" pos:end="469:23">&lt;</operator> <name pos:start="469:25" pos:end="469:37"><name pos:start="469:25" pos:end="469:29">avctx</name><operator pos:start="469:30" pos:end="469:31">-&gt;</operator><name pos:start="469:32" pos:end="469:37">height</name></name></expr>;</condition> <incr pos:start="469:40" pos:end="469:42"><expr pos:start="469:40" pos:end="469:42"><name pos:start="469:40" pos:end="469:40">y</name><operator pos:start="469:41" pos:end="469:42">++</operator></expr></incr>)</control> <block pos:start="469:45" pos:end="477:9">{<block_content pos:start="471:13" pos:end="475:39">

            <for pos:start="471:13" pos:end="473:40">for <control pos:start="471:17" pos:end="471:46">(<init pos:start="471:18" pos:end="471:23"><expr pos:start="471:18" pos:end="471:22"><name pos:start="471:18" pos:end="471:18">x</name> <operator pos:start="471:20" pos:end="471:20">=</operator> <literal type="number" pos:start="471:22" pos:end="471:22">0</literal></expr>;</init> <condition pos:start="471:25" pos:end="471:41"><expr pos:start="471:25" pos:end="471:40"><name pos:start="471:25" pos:end="471:25">x</name> <operator pos:start="471:27" pos:end="471:27">&lt;</operator> <name pos:start="471:29" pos:end="471:40"><name pos:start="471:29" pos:end="471:33">avctx</name><operator pos:start="471:34" pos:end="471:35">-&gt;</operator><name pos:start="471:36" pos:end="471:40">width</name></name></expr>;</condition> <incr pos:start="471:43" pos:end="471:45"><expr pos:start="471:43" pos:end="471:45"><name pos:start="471:43" pos:end="471:43">x</name><operator pos:start="471:44" pos:end="471:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="473:17" pos:end="473:40"><block_content pos:start="473:17" pos:end="473:40">

                <expr_stmt pos:start="473:17" pos:end="473:40"><expr pos:start="473:17" pos:end="473:39"><name pos:start="473:17" pos:end="473:31"><name pos:start="473:17" pos:end="473:20">line</name><index pos:start="473:21" pos:end="473:31">[<expr pos:start="473:22" pos:end="473:30"><literal type="number" pos:start="473:22" pos:end="473:22">2</literal> <operator pos:start="473:24" pos:end="473:24">*</operator> <name pos:start="473:26" pos:end="473:26">x</name> <operator pos:start="473:28" pos:end="473:28">+</operator> <literal type="number" pos:start="473:30" pos:end="473:30">1</literal></expr>]</index></name> <operator pos:start="473:33" pos:end="473:34">^=</operator> <literal type="number" pos:start="473:36" pos:end="473:39">0x80</literal></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="475:13" pos:end="475:39"><expr pos:start="475:13" pos:end="475:38"><name pos:start="475:13" pos:end="475:16">line</name> <operator pos:start="475:18" pos:end="475:19">+=</operator> <name pos:start="475:21" pos:end="475:38"><name pos:start="475:21" pos:end="475:25">frame</name><operator pos:start="475:26" pos:end="475:27">-&gt;</operator><name pos:start="475:28" pos:end="475:35">linesize</name><index pos:start="475:36" pos:end="475:38">[<expr pos:start="475:37" pos:end="475:37"><literal type="number" pos:start="475:37" pos:end="475:37">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="483:5" pos:end="491:5"><if pos:start="483:5" pos:end="491:5">if <condition pos:start="483:8" pos:end="483:50">(<expr pos:start="483:9" pos:end="483:49"><name pos:start="483:9" pos:end="483:26"><name pos:start="483:9" pos:end="483:13">avctx</name><operator pos:start="483:14" pos:end="483:15">-&gt;</operator><name pos:start="483:16" pos:end="483:26">field_order</name></name> <operator pos:start="483:28" pos:end="483:28">&gt;</operator> <name pos:start="483:30" pos:end="483:49">AV_FIELD_PROGRESSIVE</name></expr>)</condition> <block pos:start="483:52" pos:end="491:5">{<block_content pos:start="485:9" pos:end="489:39"> <comment type="block" pos:start="483:54" pos:end="483:107">/* we have interlaced material flagged in container */</comment>

        <expr_stmt pos:start="485:9" pos:end="485:36"><expr pos:start="485:9" pos:end="485:35"><name pos:start="485:9" pos:end="485:31"><name pos:start="485:9" pos:end="485:13">frame</name><operator pos:start="485:14" pos:end="485:15">-&gt;</operator><name pos:start="485:16" pos:end="485:31">interlaced_frame</name></name> <operator pos:start="485:33" pos:end="485:33">=</operator> <literal type="number" pos:start="485:35" pos:end="485:35">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="487:9" pos:end="489:39"><if pos:start="487:9" pos:end="489:39">if <condition pos:start="487:12" pos:end="487:83">(<expr pos:start="487:13" pos:end="487:82"><name pos:start="487:13" pos:end="487:30"><name pos:start="487:13" pos:end="487:17">avctx</name><operator pos:start="487:18" pos:end="487:19">-&gt;</operator><name pos:start="487:20" pos:end="487:30">field_order</name></name> <operator pos:start="487:32" pos:end="487:33">==</operator> <name pos:start="487:35" pos:end="487:45">AV_FIELD_TT</name> <operator pos:start="487:47" pos:end="487:48">||</operator> <name pos:start="487:50" pos:end="487:67"><name pos:start="487:50" pos:end="487:54">avctx</name><operator pos:start="487:55" pos:end="487:56">-&gt;</operator><name pos:start="487:57" pos:end="487:67">field_order</name></name> <operator pos:start="487:69" pos:end="487:70">==</operator> <name pos:start="487:72" pos:end="487:82">AV_FIELD_TB</name></expr>)</condition><block type="pseudo" pos:start="489:13" pos:end="489:39"><block_content pos:start="489:13" pos:end="489:39">

            <expr_stmt pos:start="489:13" pos:end="489:39"><expr pos:start="489:13" pos:end="489:38"><name pos:start="489:13" pos:end="489:34"><name pos:start="489:13" pos:end="489:17">frame</name><operator pos:start="489:18" pos:end="489:19">-&gt;</operator><name pos:start="489:20" pos:end="489:34">top_field_first</name></name> <operator pos:start="489:36" pos:end="489:36">=</operator> <literal type="number" pos:start="489:38" pos:end="489:38">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="495:5" pos:end="495:19"><expr pos:start="495:5" pos:end="495:18"><operator pos:start="495:5" pos:end="495:5">*</operator><name pos:start="495:6" pos:end="495:14">got_frame</name> <operator pos:start="495:16" pos:end="495:16">=</operator> <literal type="number" pos:start="495:18" pos:end="495:18">1</literal></expr>;</expr_stmt>

    <return pos:start="497:5" pos:end="497:20">return <expr pos:start="497:12" pos:end="497:19"><name pos:start="497:12" pos:end="497:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
