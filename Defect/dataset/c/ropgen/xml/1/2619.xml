<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2619.c" pos:tabs="8"><function pos:start="1:1" pos:end="90:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">ogg_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="90:1">{<block_content pos:start="5:5" pos:end="88:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:14">ogg</name></name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ogg</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:7">ogg</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:15">curidx</name></name> <operator pos:start="11:17" pos:end="11:17">=</operator> <operator pos:start="11:19" pos:end="11:19">-</operator><literal type="number" pos:start="11:20" pos:end="11:20">1</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="15:5" pos:end="15:36">//linear headers seek from start</comment>

    <do pos:start="17:5" pos:end="29:28">do <block pos:start="17:8" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:9">

        <expr_stmt pos:start="19:9" pos:end="19:52"><expr pos:start="19:9" pos:end="19:51"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:51"><name pos:start="19:15" pos:end="19:24">ogg_packet</name><argument_list pos:start="19:25" pos:end="19:51">(<argument pos:start="19:26" pos:end="19:26"><expr pos:start="19:26" pos:end="19:26"><name pos:start="19:26" pos:end="19:26">s</name></expr></argument>, <argument pos:start="19:29" pos:end="19:32"><expr pos:start="19:29" pos:end="19:32"><name pos:start="19:29" pos:end="19:32">NULL</name></expr></argument>, <argument pos:start="19:35" pos:end="19:38"><expr pos:start="19:35" pos:end="19:38"><name pos:start="19:35" pos:end="19:38">NULL</name></expr></argument>, <argument pos:start="19:41" pos:end="19:44"><expr pos:start="19:41" pos:end="19:44"><name pos:start="19:41" pos:end="19:44">NULL</name></expr></argument>, <argument pos:start="19:47" pos:end="19:50"><expr pos:start="19:47" pos:end="19:50"><name pos:start="19:47" pos:end="19:50">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:20">(<expr pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:15">ret</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>)</condition> <block pos:start="21:22" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:23">

            <expr_stmt pos:start="23:13" pos:end="23:30"><expr pos:start="23:13" pos:end="23:29"><call pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:26">ogg_read_close</name><argument_list pos:start="23:27" pos:end="23:29">(<argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="25:13" pos:end="25:23">return <expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="29:13" pos:end="29:27">(<expr pos:start="29:14" pos:end="29:26"><operator pos:start="29:14" pos:end="29:14">!</operator><name pos:start="29:15" pos:end="29:26"><name pos:start="29:15" pos:end="29:17">ogg</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:26">headers</name></name></expr>)</condition>;</do>

    <expr_stmt pos:start="31:5" pos:end="31:47"><expr pos:start="31:5" pos:end="31:46"><call pos:start="31:5" pos:end="31:46"><name pos:start="31:5" pos:end="31:10">av_log</name><argument_list pos:start="31:11" pos:end="31:46">(<argument pos:start="31:12" pos:end="31:12"><expr pos:start="31:12" pos:end="31:12"><name pos:start="31:12" pos:end="31:12">s</name></expr></argument>, <argument pos:start="31:15" pos:end="31:26"><expr pos:start="31:15" pos:end="31:26"><name pos:start="31:15" pos:end="31:26">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="31:29" pos:end="31:45"><expr pos:start="31:29" pos:end="31:45"><literal type="string" pos:start="31:29" pos:end="31:45">"found headers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="35:5" pos:end="70:5">for <control pos:start="35:9" pos:end="35:39">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:34"><expr pos:start="35:17" pos:end="35:33"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:33"><name pos:start="35:21" pos:end="35:23">ogg</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:33">nstreams</name></name></expr>;</condition> <incr pos:start="35:36" pos:end="35:38"><expr pos:start="35:36" pos:end="35:38"><name pos:start="35:36" pos:end="35:36">i</name><operator pos:start="35:37" pos:end="35:38">++</operator></expr></incr>)</control> <block pos:start="35:41" pos:end="70:5">{<block_content pos:start="37:9" pos:end="68:59">

        <decl_stmt pos:start="37:9" pos:end="37:49"><decl pos:start="37:9" pos:end="37:48"><type pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:14">struct</name> <name pos:start="37:16" pos:end="37:25">ogg_stream</name></name> <modifier pos:start="37:27" pos:end="37:27">*</modifier></type><name pos:start="37:28" pos:end="37:29">os</name> <init pos:start="37:31" pos:end="37:48">= <expr pos:start="37:33" pos:end="37:48"><name pos:start="37:33" pos:end="37:44"><name pos:start="37:33" pos:end="37:35">ogg</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:44">streams</name></name> <operator pos:start="37:46" pos:end="37:46">+</operator> <name pos:start="37:48" pos:end="37:48">i</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="41:9" pos:end="62:9"><if pos:start="41:9" pos:end="48:9">if <condition pos:start="41:12" pos:end="41:39">(<expr pos:start="41:13" pos:end="41:38"><name pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:15">ogg</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:24">streams</name><index pos:start="41:25" pos:end="41:27">[<expr pos:start="41:26" pos:end="41:26"><name pos:start="41:26" pos:end="41:26">i</name></expr>]</index></name><operator pos:start="41:28" pos:end="41:28">.</operator><name pos:start="41:29" pos:end="41:34">header</name> <operator pos:start="41:36" pos:end="41:36">&lt;</operator> <literal type="number" pos:start="41:38" pos:end="41:38">0</literal></expr>)</condition> <block pos:start="41:41" pos:end="48:9">{<block_content pos:start="43:13" pos:end="45:41">

            <expr_stmt pos:start="43:13" pos:end="43:80"><expr pos:start="43:13" pos:end="43:79"><call pos:start="43:13" pos:end="43:79"><name pos:start="43:13" pos:end="43:18">av_log</name><argument_list pos:start="43:19" pos:end="43:79">(<argument pos:start="43:20" pos:end="43:20"><expr pos:start="43:20" pos:end="43:20"><name pos:start="43:20" pos:end="43:20">s</name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:37" pos:end="43:75"><expr pos:start="43:37" pos:end="43:75"><literal type="string" pos:start="43:37" pos:end="43:75">"Header parsing failed for stream %d\n"</literal></expr></argument>, <argument pos:start="43:78" pos:end="43:78"><expr pos:start="43:78" pos:end="43:78"><name pos:start="43:78" pos:end="43:78">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:41"><expr pos:start="45:13" pos:end="45:40"><name pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:15">ogg</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:24">streams</name><index pos:start="45:25" pos:end="45:27">[<expr pos:start="45:26" pos:end="45:26"><name pos:start="45:26" pos:end="45:26">i</name></expr>]</index></name><operator pos:start="45:28" pos:end="45:28">.</operator><name pos:start="45:29" pos:end="45:33">codec</name> <operator pos:start="45:35" pos:end="45:35">=</operator> <name pos:start="45:37" pos:end="45:40">NULL</name></expr>;</expr_stmt>


        </block_content>}</block></if> <if type="elseif" pos:start="48:11" pos:end="62:9">else if <condition pos:start="48:19" pos:end="48:69">(<expr pos:start="48:20" pos:end="48:68"><name pos:start="48:20" pos:end="48:28"><name pos:start="48:20" pos:end="48:21">os</name><operator pos:start="48:22" pos:end="48:23">-&gt;</operator><name pos:start="48:24" pos:end="48:28">codec</name></name> <operator pos:start="48:30" pos:end="48:31">&amp;&amp;</operator> <name pos:start="48:33" pos:end="48:45"><name pos:start="48:33" pos:end="48:34">os</name><operator pos:start="48:35" pos:end="48:36">-&gt;</operator><name pos:start="48:37" pos:end="48:45">nb_header</name></name> <operator pos:start="48:47" pos:end="48:47">&lt;</operator> <name pos:start="48:49" pos:end="48:68"><name pos:start="48:49" pos:end="48:50">os</name><operator pos:start="48:51" pos:end="48:52">-&gt;</operator><name pos:start="48:53" pos:end="48:57">codec</name><operator pos:start="48:58" pos:end="48:59">-&gt;</operator><name pos:start="48:60" pos:end="48:68">nb_header</name></name></expr>)</condition> <block pos:start="48:71" pos:end="62:9">{<block_content pos:start="50:13" pos:end="60:43">

            <expr_stmt pos:start="50:13" pos:end="56:59"><expr pos:start="50:13" pos:end="56:58"><call pos:start="50:13" pos:end="56:58"><name pos:start="50:13" pos:end="50:18">av_log</name><argument_list pos:start="50:19" pos:end="56:58">(<argument pos:start="50:20" pos:end="50:20"><expr pos:start="50:20" pos:end="50:20"><name pos:start="50:20" pos:end="50:20">s</name></expr></argument>, <argument pos:start="50:23" pos:end="50:36"><expr pos:start="50:23" pos:end="50:36"><name pos:start="50:23" pos:end="50:36">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="52:20" pos:end="54:47"><expr pos:start="52:20" pos:end="54:47"><literal type="string" pos:start="52:20" pos:end="52:53">"Headers mismatch for stream %d: "</literal>

                   <literal type="string" pos:start="54:20" pos:end="54:47">"expected %d received %d.\n"</literal></expr></argument>,

                   <argument pos:start="56:20" pos:end="56:20"><expr pos:start="56:20" pos:end="56:20"><name pos:start="56:20" pos:end="56:20">i</name></expr></argument>, <argument pos:start="56:23" pos:end="56:42"><expr pos:start="56:23" pos:end="56:42"><name pos:start="56:23" pos:end="56:42"><name pos:start="56:23" pos:end="56:24">os</name><operator pos:start="56:25" pos:end="56:26">-&gt;</operator><name pos:start="56:27" pos:end="56:31">codec</name><operator pos:start="56:32" pos:end="56:33">-&gt;</operator><name pos:start="56:34" pos:end="56:42">nb_header</name></name></expr></argument>, <argument pos:start="56:45" pos:end="56:57"><expr pos:start="56:45" pos:end="56:57"><name pos:start="56:45" pos:end="56:57"><name pos:start="56:45" pos:end="56:46">os</name><operator pos:start="56:47" pos:end="56:48">-&gt;</operator><name pos:start="56:49" pos:end="56:57">nb_header</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="58:13" pos:end="60:43"><if pos:start="58:13" pos:end="60:43">if <condition pos:start="58:16" pos:end="58:53">(<expr pos:start="58:17" pos:end="58:52"><name pos:start="58:17" pos:end="58:36"><name pos:start="58:17" pos:end="58:17">s</name><operator pos:start="58:18" pos:end="58:19">-&gt;</operator><name pos:start="58:20" pos:end="58:36">error_recognition</name></name> <operator pos:start="58:38" pos:end="58:38">&amp;</operator> <name pos:start="58:40" pos:end="58:52">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="60:17" pos:end="60:43"><block_content pos:start="60:17" pos:end="60:43">

                <return pos:start="60:17" pos:end="60:43">return <expr pos:start="60:24" pos:end="60:42"><name pos:start="60:24" pos:end="60:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="64:9" pos:end="68:59"><if pos:start="64:9" pos:end="68:59">if <condition pos:start="64:12" pos:end="64:53">(<expr pos:start="64:13" pos:end="64:52"><name pos:start="64:13" pos:end="64:29"><name pos:start="64:13" pos:end="64:14">os</name><operator pos:start="64:15" pos:end="64:16">-&gt;</operator><name pos:start="64:17" pos:end="64:29">start_granule</name></name> <operator pos:start="64:31" pos:end="64:32">!=</operator> <name pos:start="64:34" pos:end="64:52">OGG_NOGRANULE_VALUE</name></expr>)</condition><block type="pseudo" pos:start="66:13" pos:end="68:59"><block_content pos:start="66:13" pos:end="68:59">

            <expr_stmt pos:start="66:13" pos:end="68:59"><expr pos:start="66:13" pos:end="68:58"><name pos:start="66:13" pos:end="66:23"><name pos:start="66:13" pos:end="66:14">os</name><operator pos:start="66:15" pos:end="66:16">-&gt;</operator><name pos:start="66:17" pos:end="66:23">lastpts</name></name> <operator pos:start="66:25" pos:end="66:25">=</operator> <name pos:start="66:27" pos:end="66:39"><name pos:start="66:27" pos:end="66:27">s</name><operator pos:start="66:28" pos:end="66:29">-&gt;</operator><name pos:start="66:30" pos:end="66:36">streams</name><index pos:start="66:37" pos:end="66:39">[<expr pos:start="66:38" pos:end="66:38"><name pos:start="66:38" pos:end="66:38">i</name></expr>]</index></name><operator pos:start="66:40" pos:end="66:41">-&gt;</operator><name pos:start="66:42" pos:end="66:51">start_time</name> <operator pos:start="66:53" pos:end="66:53">=</operator>

                <call pos:start="68:17" pos:end="68:58"><name pos:start="68:17" pos:end="68:27">ogg_gptopts</name><argument_list pos:start="68:28" pos:end="68:58">(<argument pos:start="68:29" pos:end="68:29"><expr pos:start="68:29" pos:end="68:29"><name pos:start="68:29" pos:end="68:29">s</name></expr></argument>, <argument pos:start="68:32" pos:end="68:32"><expr pos:start="68:32" pos:end="68:32"><name pos:start="68:32" pos:end="68:32">i</name></expr></argument>, <argument pos:start="68:35" pos:end="68:51"><expr pos:start="68:35" pos:end="68:51"><name pos:start="68:35" pos:end="68:51"><name pos:start="68:35" pos:end="68:36">os</name><operator pos:start="68:37" pos:end="68:38">-&gt;</operator><name pos:start="68:39" pos:end="68:51">start_granule</name></name></expr></argument>, <argument pos:start="68:54" pos:end="68:57"><expr pos:start="68:54" pos:end="68:57"><name pos:start="68:54" pos:end="68:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="74:5" pos:end="74:37">//linear granulepos seek from end</comment>

    <expr_stmt pos:start="76:5" pos:end="76:28"><expr pos:start="76:5" pos:end="76:27"><name pos:start="76:5" pos:end="76:7">ret</name> <operator pos:start="76:9" pos:end="76:9">=</operator> <call pos:start="76:11" pos:end="76:27"><name pos:start="76:11" pos:end="76:24">ogg_get_length</name><argument_list pos:start="76:25" pos:end="76:27">(<argument pos:start="76:26" pos:end="76:26"><expr pos:start="76:26" pos:end="76:26"><name pos:start="76:26" pos:end="76:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="78:5" pos:end="84:5"><if pos:start="78:5" pos:end="84:5">if <condition pos:start="78:8" pos:end="78:16">(<expr pos:start="78:9" pos:end="78:15"><name pos:start="78:9" pos:end="78:11">ret</name> <operator pos:start="78:13" pos:end="78:13">&lt;</operator> <literal type="number" pos:start="78:15" pos:end="78:15">0</literal></expr>)</condition> <block pos:start="78:18" pos:end="84:5">{<block_content pos:start="80:9" pos:end="82:19">

        <expr_stmt pos:start="80:9" pos:end="80:26"><expr pos:start="80:9" pos:end="80:25"><call pos:start="80:9" pos:end="80:25"><name pos:start="80:9" pos:end="80:22">ogg_read_close</name><argument_list pos:start="80:23" pos:end="80:25">(<argument pos:start="80:24" pos:end="80:24"><expr pos:start="80:24" pos:end="80:24"><name pos:start="80:24" pos:end="80:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="82:9" pos:end="82:19">return <expr pos:start="82:16" pos:end="82:18"><name pos:start="82:16" pos:end="82:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="88:5" pos:end="88:13">return <expr pos:start="88:12" pos:end="88:12"><literal type="number" pos:start="88:12" pos:end="88:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
