<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/431.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:17">QPCIDevice</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:34">get_ahci_device</name><parameter_list pos:start="1:35" pos:end="1:57">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:45"><name pos:start="1:36" pos:end="1:43">uint32_t</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:56">fingerprint</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:16">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">QPCIDevice</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">ahci</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:29">ahci_fingerprint</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">QPCIBus</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:19">pcibus</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:28"><expr pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:10">pcibus</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:27"><name pos:start="13:14" pos:end="13:25">qpci_init_pc</name><argument_list pos:start="13:26" pos:end="13:27">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:65">/* Find the AHCI PCI device and verify it's the right one. */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:60"><expr pos:start="19:5" pos:end="19:59"><name pos:start="19:5" pos:end="19:8">ahci</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:59"><name pos:start="19:12" pos:end="19:27">qpci_device_find</name><argument_list pos:start="19:28" pos:end="19:59">(<argument pos:start="19:29" pos:end="19:34"><expr pos:start="19:29" pos:end="19:34"><name pos:start="19:29" pos:end="19:34">pcibus</name></expr></argument>, <argument pos:start="19:37" pos:end="19:58"><expr pos:start="19:37" pos:end="19:58"><call pos:start="19:37" pos:end="19:58"><name pos:start="19:37" pos:end="19:46">QPCI_DEVFN</name><argument_list pos:start="19:47" pos:end="19:58">(<argument pos:start="19:48" pos:end="19:51"><expr pos:start="19:48" pos:end="19:51"><literal type="number" pos:start="19:48" pos:end="19:51">0x1F</literal></expr></argument>, <argument pos:start="19:54" pos:end="19:57"><expr pos:start="19:54" pos:end="19:57"><literal type="number" pos:start="19:54" pos:end="19:57">0x02</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><call pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:12">g_assert</name><argument_list pos:start="21:13" pos:end="21:26">(<argument pos:start="21:14" pos:end="21:25"><expr pos:start="21:14" pos:end="21:25"><name pos:start="21:14" pos:end="21:17">ahci</name> <operator pos:start="21:19" pos:end="21:20">!=</operator> <name pos:start="21:22" pos:end="21:25">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:62"><expr pos:start="25:5" pos:end="25:61"><name pos:start="25:5" pos:end="25:20">ahci_fingerprint</name> <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="25:61"><name pos:start="25:24" pos:end="25:40">qpci_config_readl</name><argument_list pos:start="25:41" pos:end="25:61">(<argument pos:start="25:42" pos:end="25:45"><expr pos:start="25:42" pos:end="25:45"><name pos:start="25:42" pos:end="25:45">ahci</name></expr></argument>, <argument pos:start="25:48" pos:end="25:60"><expr pos:start="25:48" pos:end="25:60"><name pos:start="25:48" pos:end="25:60">PCI_VENDOR_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="29:5" pos:end="41:5">switch <condition pos:start="29:12" pos:end="29:29">(<expr pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:28">ahci_fingerprint</name></expr>)</condition> <block pos:start="29:31" pos:end="41:5">{<block_content pos:start="31:5" pos:end="39:31">

    <case pos:start="31:5" pos:end="31:25">case <expr pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:24">AHCI_INTEL_ICH9</name></expr>:</case>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <default pos:start="35:5" pos:end="35:12">default:</default>

        <comment type="block" pos:start="37:9" pos:end="37:29">/* Unknown device. */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><call pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:28">g_assert_not_reached</name><argument_list pos:start="39:29" pos:end="39:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:20">(<expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:19">fingerprint</name></expr>)</condition> <block pos:start="45:22" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:40">

        <expr_stmt pos:start="47:9" pos:end="47:40"><expr pos:start="47:9" pos:end="47:39"><operator pos:start="47:9" pos:end="47:9">*</operator><name pos:start="47:10" pos:end="47:20">fingerprint</name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:39">ahci_fingerprint</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="51:5" pos:end="51:16">return <expr pos:start="51:12" pos:end="51:15"><name pos:start="51:12" pos:end="51:15">ahci</name></expr>;</return>

</block_content>}</block></function>
</unit>
