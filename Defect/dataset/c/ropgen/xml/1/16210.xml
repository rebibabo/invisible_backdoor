<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16210.c" pos:tabs="8"><function pos:start="1:1" pos:end="379:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:39">ff_snow_horizontal_compose97i_sse2</name><parameter_list pos:start="1:40" pos:end="1:63">(<parameter pos:start="1:41" pos:end="1:51"><decl pos:start="1:41" pos:end="1:51"><type pos:start="1:41" pos:end="1:51"><name pos:start="1:41" pos:end="1:48">IDWTELEM</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">b</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:62"><decl pos:start="1:54" pos:end="1:62"><type pos:start="1:54" pos:end="1:62"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:62">width</name></decl></parameter>)</parameter_list><block pos:start="1:64" pos:end="379:1">{<block_content pos:start="3:5" pos:end="377:5">

    <decl_stmt pos:start="3:5" pos:end="3:31"><decl pos:start="3:5" pos:end="3:30"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:16">w2</name><init pos:start="3:17" pos:end="3:30">= <expr pos:start="3:19" pos:end="3:30"><operator pos:start="3:19" pos:end="3:19">(</operator><name pos:start="3:20" pos:end="3:24">width</name><operator pos:start="3:25" pos:end="3:25">+</operator><literal type="number" pos:start="3:26" pos:end="3:26">1</literal><operator pos:start="3:27" pos:end="3:27">)</operator><operator pos:start="3:28" pos:end="3:29">&gt;&gt;</operator><literal type="number" pos:start="3:30" pos:end="3:30">1</literal></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:start="5:5" pos:end="5:73">// SSE2 code runs faster with pointers aligned on a 32-byte boundary.</comment>

    <expr_stmt pos:start="7:5" pos:end="7:38"><expr pos:start="7:5" pos:end="7:37"><name pos:start="7:5" pos:end="7:12">IDWTELEM</name> <name pos:start="7:14" pos:end="7:37"><name pos:start="7:14" pos:end="7:21">temp_buf</name><index pos:start="7:22" pos:end="7:37">[<expr pos:start="7:23" pos:end="7:36"><operator pos:start="7:23" pos:end="7:23">(</operator><name pos:start="7:24" pos:end="7:28">width</name><operator pos:start="7:29" pos:end="7:30">&gt;&gt;</operator><literal type="number" pos:start="7:31" pos:end="7:31">1</literal><operator pos:start="7:32" pos:end="7:32">)</operator> <operator pos:start="7:34" pos:end="7:34">+</operator> <literal type="number" pos:start="7:36" pos:end="7:36">4</literal></expr>]</index></name></expr>;</expr_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:72"><decl pos:start="9:5" pos:end="9:71"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:12">IDWTELEM</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier> <specifier pos:start="9:16" pos:end="9:20">const</specifier></type> <name pos:start="9:22" pos:end="9:25">temp</name> <init pos:start="9:27" pos:end="9:71">= <expr pos:start="9:29" pos:end="9:71"><name pos:start="9:29" pos:end="9:36">temp_buf</name> <operator pos:start="9:38" pos:end="9:38">+</operator> <literal type="number" pos:start="9:40" pos:end="9:42">4</literal> <operator pos:start="9:42" pos:end="9:42">-</operator> <operator pos:start="9:44" pos:end="9:44">(</operator><operator pos:start="9:45" pos:end="9:45">(</operator><operator pos:start="9:46" pos:end="9:46">(</operator><name pos:start="9:47" pos:end="9:49">int</name><operator pos:start="9:50" pos:end="9:50">)</operator><name pos:start="9:51" pos:end="9:58">temp_buf</name> <operator pos:start="9:60" pos:end="9:60">&amp;</operator> <literal type="number" pos:start="9:62" pos:end="9:64">0xF</literal><operator pos:start="9:65" pos:end="9:65">)</operator> <operator pos:start="9:67" pos:end="9:68">&gt;&gt;</operator> <literal type="number" pos:start="9:70" pos:end="9:70">2</literal><operator pos:start="9:71" pos:end="9:71">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:17">w_l</name><init pos:start="11:18" pos:end="11:29">= <expr pos:start="11:20" pos:end="11:29"><operator pos:start="11:20" pos:end="11:20">(</operator><name pos:start="11:21" pos:end="11:25">width</name><operator pos:start="11:26" pos:end="11:27">&gt;&gt;</operator><literal type="number" pos:start="11:28" pos:end="11:28">1</literal><operator pos:start="11:29" pos:end="11:29">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:17">w_r</name><init pos:start="13:18" pos:end="13:25">= <expr pos:start="13:20" pos:end="13:25"><name pos:start="13:20" pos:end="13:21">w2</name> <operator pos:start="13:23" pos:end="13:23">-</operator> <literal type="number" pos:start="13:25" pos:end="13:25">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <block pos:start="19:5" pos:end="93:5">{<block_content pos:start="21:9" pos:end="91:54"> <comment type="line" pos:start="19:7" pos:end="19:15">// Lift 0</comment>

        <decl_stmt pos:start="21:9" pos:end="21:42"><decl pos:start="21:9" pos:end="21:41"><type pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:16">IDWTELEM</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier> <specifier pos:start="21:20" pos:end="21:24">const</specifier></type> <name pos:start="21:26" pos:end="21:28">ref</name> <init pos:start="21:30" pos:end="21:41">= <expr pos:start="21:32" pos:end="21:41"><name pos:start="21:32" pos:end="21:32">b</name> <operator pos:start="21:34" pos:end="21:34">+</operator> <name pos:start="21:36" pos:end="21:37">w2</name> <operator pos:start="21:39" pos:end="21:39">-</operator> <literal type="number" pos:start="21:41" pos:end="21:41">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:28"><decl pos:start="23:9" pos:end="23:27"><type pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16">IDWTELEM</name></type> <name pos:start="23:18" pos:end="23:20">b_0</name> <init pos:start="23:22" pos:end="23:27">= <expr pos:start="23:24" pos:end="23:27"><name pos:start="23:24" pos:end="23:27"><name pos:start="23:24" pos:end="23:24">b</name><index pos:start="23:25" pos:end="23:27">[<expr pos:start="23:26" pos:end="23:26"><literal type="number" pos:start="23:26" pos:end="23:26">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="23:30" pos:end="23:89">//By allowing the first entry in b[0] to be calculated twice</comment>

        <comment type="line" pos:start="25:9" pos:end="25:85">// (the first time erroneously), we allow the SSE2 code to run an extra pass.</comment>

        <comment type="line" pos:start="27:9" pos:end="27:85">// The savings in code and time are well worth having to store this value and</comment>

        <comment type="line" pos:start="29:9" pos:end="29:47">// calculate b[0] correctly afterwards.</comment>



        <expr_stmt pos:start="33:9" pos:end="33:14"><expr pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:9">i</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <literal type="number" pos:start="33:13" pos:end="33:13">0</literal></expr>;</expr_stmt>

        <asm pos:start="35:9" pos:end="47:12">asm <specifier pos:start="35:13" pos:end="35:20">volatile</specifier>(

            "pcmpeqd   %%xmm7, %%xmm7         \n\t"

            "pcmpeqd   %%xmm3, %%xmm3         \n\t"

            "psllw         $1, %%xmm3         \n\t"

            "paddw     %%xmm7, %%xmm3         \n\t"

            "psllw        $13, %%xmm3         \n\t"

        ::);</asm>

        <for pos:start="49:9" pos:end="87:9">for<control pos:start="49:12" pos:end="49:30">(<init pos:start="49:13" pos:end="49:13">;</init> <condition pos:start="49:15" pos:end="49:23"><expr pos:start="49:15" pos:end="49:22"><name pos:start="49:15" pos:end="49:15">i</name><operator pos:start="49:16" pos:end="49:16">&lt;</operator><name pos:start="49:17" pos:end="49:19">w_l</name><operator pos:start="49:20" pos:end="49:20">-</operator><literal type="number" pos:start="49:21" pos:end="49:22">15</literal></expr>;</condition> <incr pos:start="49:25" pos:end="49:29"><expr pos:start="49:25" pos:end="49:29"><name pos:start="49:25" pos:end="49:25">i</name><operator pos:start="49:26" pos:end="49:27">+=</operator><literal type="number" pos:start="49:28" pos:end="49:29">16</literal></expr></incr>)</control><block pos:start="49:31" pos:end="87:9">{<block_content pos:start="51:13" pos:end="85:14">

            <asm pos:start="51:13" pos:end="85:14">asm <specifier pos:start="51:17" pos:end="51:24">volatile</specifier>(

                "movdqu   (%1), %%xmm1        \n\t"

                "movdqu 16(%1), %%xmm5        \n\t"

                "movdqu  2(%1), %%xmm2        \n\t"

                "movdqu 18(%1), %%xmm6        \n\t"

                "paddw  %%xmm1, %%xmm2        \n\t"

                "paddw  %%xmm5, %%xmm6        \n\t"

                "paddw  %%xmm7, %%xmm2        \n\t"

                "paddw  %%xmm7, %%xmm6        \n\t"

                "pmulhw %%xmm3, %%xmm2        \n\t"

                "pmulhw %%xmm3, %%xmm6        \n\t"

                "paddw    (%0), %%xmm2        \n\t"

                "paddw  16(%0), %%xmm6        \n\t"

                "movdqa %%xmm2, (%0)          \n\t"

                "movdqa %%xmm6, 16(%0)        \n\t"

                :: "r"(&amp;b[i]), "r"(&amp;ref[i])

                : "memory"

            );</asm>

        </block_content>}</block></for>

        <expr_stmt pos:start="89:9" pos:end="89:93"><expr pos:start="89:9" pos:end="89:92"><call pos:start="89:9" pos:end="89:92"><name pos:start="89:9" pos:end="89:45">snow_horizontal_compose_lift_lead_out</name><argument_list pos:start="89:46" pos:end="89:92">(<argument pos:start="89:47" pos:end="89:47"><expr pos:start="89:47" pos:end="89:47"><name pos:start="89:47" pos:end="89:47">i</name></expr></argument>, <argument pos:start="89:50" pos:end="89:50"><expr pos:start="89:50" pos:end="89:50"><name pos:start="89:50" pos:end="89:50">b</name></expr></argument>, <argument pos:start="89:53" pos:end="89:53"><expr pos:start="89:53" pos:end="89:53"><name pos:start="89:53" pos:end="89:53">b</name></expr></argument>, <argument pos:start="89:56" pos:end="89:58"><expr pos:start="89:56" pos:end="89:58"><name pos:start="89:56" pos:end="89:58">ref</name></expr></argument>, <argument pos:start="89:61" pos:end="89:65"><expr pos:start="89:61" pos:end="89:65"><name pos:start="89:61" pos:end="89:65">width</name></expr></argument>, <argument pos:start="89:68" pos:end="89:70"><expr pos:start="89:68" pos:end="89:70"><name pos:start="89:68" pos:end="89:70">w_l</name></expr></argument>, <argument pos:start="89:73" pos:end="89:73"><expr pos:start="89:73" pos:end="89:73"><literal type="number" pos:start="89:73" pos:end="89:73">0</literal></expr></argument>, <argument pos:start="89:76" pos:end="89:79"><expr pos:start="89:76" pos:end="89:79"><name pos:start="89:76" pos:end="89:79">W_DM</name></expr></argument>, <argument pos:start="89:82" pos:end="89:85"><expr pos:start="89:82" pos:end="89:85"><name pos:start="89:82" pos:end="89:85">W_DO</name></expr></argument>, <argument pos:start="89:88" pos:end="89:91"><expr pos:start="89:88" pos:end="89:91"><name pos:start="89:88" pos:end="89:91">W_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:54"><expr pos:start="91:9" pos:end="91:53"><name pos:start="91:9" pos:end="91:12"><name pos:start="91:9" pos:end="91:9">b</name><index pos:start="91:10" pos:end="91:12">[<expr pos:start="91:11" pos:end="91:11"><literal type="number" pos:start="91:11" pos:end="91:11">0</literal></expr>]</index></name> <operator pos:start="91:14" pos:end="91:14">=</operator> <name pos:start="91:16" pos:end="91:18">b_0</name> <operator pos:start="91:20" pos:end="91:20">-</operator> <operator pos:start="91:22" pos:end="91:22">(</operator><operator pos:start="91:23" pos:end="91:23">(</operator><name pos:start="91:24" pos:end="91:27">W_DM</name> <operator pos:start="91:29" pos:end="91:29">*</operator> <literal type="number" pos:start="91:31" pos:end="91:31">2</literal> <operator pos:start="91:33" pos:end="91:33">*</operator> <name pos:start="91:35" pos:end="91:40"><name pos:start="91:35" pos:end="91:37">ref</name><index pos:start="91:38" pos:end="91:40">[<expr pos:start="91:39" pos:end="91:39"><literal type="number" pos:start="91:39" pos:end="91:39">1</literal></expr>]</index></name><operator pos:start="91:41" pos:end="91:41">+</operator><name pos:start="91:42" pos:end="91:45">W_DO</name><operator pos:start="91:46" pos:end="91:46">)</operator><operator pos:start="91:47" pos:end="91:48">&gt;&gt;</operator><name pos:start="91:49" pos:end="91:52">W_DS</name><operator pos:start="91:53" pos:end="91:53">)</operator></expr>;</expr_stmt>

    </block_content>}</block>



    <block pos:start="97:5" pos:end="149:5">{<block_content pos:start="99:9" pos:end="147:95"> <comment type="line" pos:start="97:7" pos:end="97:15">// Lift 1</comment>

        <decl_stmt pos:start="99:9" pos:end="99:36"><decl pos:start="99:9" pos:end="99:35"><type pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:16">IDWTELEM</name> <modifier pos:start="99:18" pos:end="99:18">*</modifier> <specifier pos:start="99:20" pos:end="99:24">const</specifier></type> <name pos:start="99:26" pos:end="99:28">dst</name> <init pos:start="99:30" pos:end="99:35">= <expr pos:start="99:32" pos:end="99:35"><name pos:start="99:32" pos:end="99:32">b</name><operator pos:start="99:33" pos:end="99:33">+</operator><name pos:start="99:34" pos:end="99:35">w2</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:14"><expr pos:start="103:9" pos:end="103:13"><name pos:start="103:9" pos:end="103:9">i</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <literal type="number" pos:start="103:13" pos:end="103:13">0</literal></expr>;</expr_stmt>

        <for pos:start="105:9" pos:end="109:9">for<control pos:start="105:12" pos:end="105:53">(<init pos:start="105:13" pos:end="105:13">;</init> <condition pos:start="105:15" pos:end="105:48"><expr pos:start="105:15" pos:end="105:47"><operator pos:start="105:15" pos:end="105:15">(</operator><operator pos:start="105:16" pos:end="105:16">(</operator><operator pos:start="105:17" pos:end="105:17">(</operator><name pos:start="105:18" pos:end="105:21">long</name><operator pos:start="105:22" pos:end="105:22">)</operator><operator pos:start="105:23" pos:end="105:23">&amp;</operator><name pos:start="105:24" pos:end="105:29"><name pos:start="105:24" pos:end="105:26">dst</name><index pos:start="105:27" pos:end="105:29">[<expr pos:start="105:28" pos:end="105:28"><name pos:start="105:28" pos:end="105:28">i</name></expr>]</index></name><operator pos:start="105:30" pos:end="105:30">)</operator> <operator pos:start="105:32" pos:end="105:32">&amp;</operator> <literal type="number" pos:start="105:34" pos:end="105:37">0x1F</literal><operator pos:start="105:38" pos:end="105:38">)</operator> <operator pos:start="105:40" pos:end="105:41">&amp;&amp;</operator> <name pos:start="105:43" pos:end="105:43">i</name><operator pos:start="105:44" pos:end="105:44">&lt;</operator><name pos:start="105:45" pos:end="105:47">w_r</name></expr>;</condition> <incr pos:start="105:50" pos:end="105:52"><expr pos:start="105:50" pos:end="105:52"><name pos:start="105:50" pos:end="105:50">i</name><operator pos:start="105:51" pos:end="105:52">++</operator></expr></incr>)</control><block pos:start="105:54" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:48">

            <expr_stmt pos:start="107:13" pos:end="107:48"><expr pos:start="107:13" pos:end="107:47"><name pos:start="107:13" pos:end="107:18"><name pos:start="107:13" pos:end="107:15">dst</name><index pos:start="107:16" pos:end="107:18">[<expr pos:start="107:17" pos:end="107:17"><name pos:start="107:17" pos:end="107:17">i</name></expr>]</index></name> <operator pos:start="107:20" pos:end="107:20">=</operator> <name pos:start="107:22" pos:end="107:27"><name pos:start="107:22" pos:end="107:24">dst</name><index pos:start="107:25" pos:end="107:27">[<expr pos:start="107:26" pos:end="107:26"><name pos:start="107:26" pos:end="107:26">i</name></expr>]</index></name> <operator pos:start="107:29" pos:end="107:29">-</operator> <operator pos:start="107:31" pos:end="107:31">(</operator><name pos:start="107:32" pos:end="107:35"><name pos:start="107:32" pos:end="107:32">b</name><index pos:start="107:33" pos:end="107:35">[<expr pos:start="107:34" pos:end="107:34"><name pos:start="107:34" pos:end="107:34">i</name></expr>]</index></name> <operator pos:start="107:37" pos:end="107:37">+</operator> <name pos:start="107:39" pos:end="107:46"><name pos:start="107:39" pos:end="107:39">b</name><index pos:start="107:40" pos:end="107:46">[<expr pos:start="107:41" pos:end="107:45"><name pos:start="107:41" pos:end="107:41">i</name> <operator pos:start="107:43" pos:end="107:43">+</operator> <literal type="number" pos:start="107:45" pos:end="107:45">1</literal></expr>]</index></name><operator pos:start="107:47" pos:end="107:47">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="111:9" pos:end="145:9">for<control pos:start="111:12" pos:end="111:30">(<init pos:start="111:13" pos:end="111:13">;</init> <condition pos:start="111:15" pos:end="111:23"><expr pos:start="111:15" pos:end="111:22"><name pos:start="111:15" pos:end="111:15">i</name><operator pos:start="111:16" pos:end="111:16">&lt;</operator><name pos:start="111:17" pos:end="111:19">w_r</name><operator pos:start="111:20" pos:end="111:20">-</operator><literal type="number" pos:start="111:21" pos:end="111:22">15</literal></expr>;</condition> <incr pos:start="111:25" pos:end="111:29"><expr pos:start="111:25" pos:end="111:29"><name pos:start="111:25" pos:end="111:25">i</name><operator pos:start="111:26" pos:end="111:27">+=</operator><literal type="number" pos:start="111:28" pos:end="111:29">16</literal></expr></incr>)</control><block pos:start="111:31" pos:end="145:9">{<block_content pos:start="113:13" pos:end="143:14">

            <asm pos:start="113:13" pos:end="143:14">asm <specifier pos:start="113:17" pos:end="113:24">volatile</specifier>(

                "movdqu   (%1), %%xmm1        \n\t"

                "movdqu 16(%1), %%xmm5        \n\t"

                "movdqu  2(%1), %%xmm2        \n\t"

                "movdqu 18(%1), %%xmm6        \n\t"

                "paddw  %%xmm1, %%xmm2        \n\t"

                "paddw  %%xmm5, %%xmm6        \n\t"

                "movdqa   (%0), %%xmm0        \n\t"

                "movdqa 16(%0), %%xmm4        \n\t"

                "psubw  %%xmm2, %%xmm0        \n\t"

                "psubw  %%xmm6, %%xmm4        \n\t"

                "movdqa %%xmm0, (%0)          \n\t"

                "movdqa %%xmm4, 16(%0)        \n\t"

                :: "r"(&amp;dst[i]), "r"(&amp;b[i])

                : "memory"

            );</asm>

        </block_content>}</block></for>

        <expr_stmt pos:start="147:9" pos:end="147:95"><expr pos:start="147:9" pos:end="147:94"><call pos:start="147:9" pos:end="147:94"><name pos:start="147:9" pos:end="147:45">snow_horizontal_compose_lift_lead_out</name><argument_list pos:start="147:46" pos:end="147:94">(<argument pos:start="147:47" pos:end="147:47"><expr pos:start="147:47" pos:end="147:47"><name pos:start="147:47" pos:end="147:47">i</name></expr></argument>, <argument pos:start="147:50" pos:end="147:52"><expr pos:start="147:50" pos:end="147:52"><name pos:start="147:50" pos:end="147:52">dst</name></expr></argument>, <argument pos:start="147:55" pos:end="147:57"><expr pos:start="147:55" pos:end="147:57"><name pos:start="147:55" pos:end="147:57">dst</name></expr></argument>, <argument pos:start="147:60" pos:end="147:60"><expr pos:start="147:60" pos:end="147:60"><name pos:start="147:60" pos:end="147:60">b</name></expr></argument>, <argument pos:start="147:63" pos:end="147:67"><expr pos:start="147:63" pos:end="147:67"><name pos:start="147:63" pos:end="147:67">width</name></expr></argument>, <argument pos:start="147:70" pos:end="147:72"><expr pos:start="147:70" pos:end="147:72"><name pos:start="147:70" pos:end="147:72">w_r</name></expr></argument>, <argument pos:start="147:75" pos:end="147:75"><expr pos:start="147:75" pos:end="147:75"><literal type="number" pos:start="147:75" pos:end="147:75">1</literal></expr></argument>, <argument pos:start="147:78" pos:end="147:81"><expr pos:start="147:78" pos:end="147:81"><name pos:start="147:78" pos:end="147:81">W_CM</name></expr></argument>, <argument pos:start="147:84" pos:end="147:87"><expr pos:start="147:84" pos:end="147:87"><name pos:start="147:84" pos:end="147:87">W_CO</name></expr></argument>, <argument pos:start="147:90" pos:end="147:93"><expr pos:start="147:90" pos:end="147:93"><name pos:start="147:90" pos:end="147:93">W_CS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <block pos:start="153:5" pos:end="239:5">{<block_content pos:start="155:9" pos:end="237:63"> <comment type="line" pos:start="153:7" pos:end="153:15">// Lift 2</comment>

        <decl_stmt pos:start="155:9" pos:end="155:40"><decl pos:start="155:9" pos:end="155:39"><type pos:start="155:9" pos:end="155:24"><name pos:start="155:9" pos:end="155:16">IDWTELEM</name> <modifier pos:start="155:18" pos:end="155:18">*</modifier> <specifier pos:start="155:20" pos:end="155:24">const</specifier></type> <name pos:start="155:26" pos:end="155:28">ref</name> <init pos:start="155:30" pos:end="155:39">= <expr pos:start="155:32" pos:end="155:39"><name pos:start="155:32" pos:end="155:32">b</name><operator pos:start="155:33" pos:end="155:33">+</operator><name pos:start="155:34" pos:end="155:35">w2</name> <operator pos:start="155:37" pos:end="155:37">-</operator> <literal type="number" pos:start="155:39" pos:end="155:39">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="157:9" pos:end="157:28"><decl pos:start="157:9" pos:end="157:27"><type pos:start="157:9" pos:end="157:16"><name pos:start="157:9" pos:end="157:16">IDWTELEM</name></type> <name pos:start="157:18" pos:end="157:20">b_0</name> <init pos:start="157:22" pos:end="157:27">= <expr pos:start="157:24" pos:end="157:27"><name pos:start="157:24" pos:end="157:27"><name pos:start="157:24" pos:end="157:24">b</name><index pos:start="157:25" pos:end="157:27">[<expr pos:start="157:26" pos:end="157:26"><literal type="number" pos:start="157:26" pos:end="157:26">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:14"><expr pos:start="161:9" pos:end="161:13"><name pos:start="161:9" pos:end="161:9">i</name> <operator pos:start="161:11" pos:end="161:11">=</operator> <literal type="number" pos:start="161:13" pos:end="161:13">0</literal></expr>;</expr_stmt>

        <asm pos:start="163:9" pos:end="173:12">asm <specifier pos:start="163:13" pos:end="163:20">volatile</specifier>(

            "psllw         $15, %%xmm7        \n\t"

            "pcmpeqw    %%xmm6, %%xmm6        \n\t"

            "psrlw         $13, %%xmm6        \n\t"

            "paddw      %%xmm7, %%xmm6        \n\t"

        ::);</asm>

        <for pos:start="175:9" pos:end="233:9">for<control pos:start="175:12" pos:end="175:30">(<init pos:start="175:13" pos:end="175:13">;</init> <condition pos:start="175:15" pos:end="175:23"><expr pos:start="175:15" pos:end="175:22"><name pos:start="175:15" pos:end="175:15">i</name><operator pos:start="175:16" pos:end="175:16">&lt;</operator><name pos:start="175:17" pos:end="175:19">w_l</name><operator pos:start="175:20" pos:end="175:20">-</operator><literal type="number" pos:start="175:21" pos:end="175:22">15</literal></expr>;</condition> <incr pos:start="175:25" pos:end="175:29"><expr pos:start="175:25" pos:end="175:29"><name pos:start="175:25" pos:end="175:25">i</name><operator pos:start="175:26" pos:end="175:27">+=</operator><literal type="number" pos:start="175:28" pos:end="175:29">16</literal></expr></incr>)</control><block pos:start="175:31" pos:end="233:9">{<block_content pos:start="177:13" pos:end="231:14">

            <asm pos:start="177:13" pos:end="231:14">asm <specifier pos:start="177:17" pos:end="177:24">volatile</specifier>(

                "movdqu   (%1), %%xmm0        \n\t"

                "movdqu 16(%1), %%xmm4        \n\t"

                "movdqu  2(%1), %%xmm1        \n\t"

                "movdqu 18(%1), %%xmm5        \n\t" <comment type="line" pos:start="185:53" pos:end="185:88">//FIXME try aligned reads and shifts</comment>

                "paddw  %%xmm6, %%xmm0        \n\t"

                "paddw  %%xmm6, %%xmm4        \n\t"

                "paddw  %%xmm7, %%xmm1        \n\t"

                "paddw  %%xmm7, %%xmm5        \n\t"

                "pavgw  %%xmm1, %%xmm0        \n\t"

                "pavgw  %%xmm5, %%xmm4        \n\t"

                "psubw  %%xmm7, %%xmm0        \n\t"

                "psubw  %%xmm7, %%xmm4        \n\t"

                "psraw      $1, %%xmm0        \n\t"

                "psraw      $1, %%xmm4        \n\t"

                "movdqa   (%0), %%xmm1        \n\t"

                "movdqa 16(%0), %%xmm5        \n\t"

                "paddw  %%xmm1, %%xmm0        \n\t"

                "paddw  %%xmm5, %%xmm4        \n\t"

                "psraw      $2, %%xmm0        \n\t"

                "psraw      $2, %%xmm4        \n\t"

                "paddw  %%xmm1, %%xmm0        \n\t"

                "paddw  %%xmm5, %%xmm4        \n\t"

                "movdqa %%xmm0, (%0)          \n\t"

                "movdqa %%xmm4, 16(%0)        \n\t"

                :: "r"(&amp;b[i]), "r"(&amp;ref[i])

                : "memory"

            );</asm>

        </block_content>}</block></for>

        <expr_stmt pos:start="235:9" pos:end="235:73"><expr pos:start="235:9" pos:end="235:72"><call pos:start="235:9" pos:end="235:72"><name pos:start="235:9" pos:end="235:46">snow_horizontal_compose_liftS_lead_out</name><argument_list pos:start="235:47" pos:end="235:72">(<argument pos:start="235:48" pos:end="235:48"><expr pos:start="235:48" pos:end="235:48"><name pos:start="235:48" pos:end="235:48">i</name></expr></argument>, <argument pos:start="235:51" pos:end="235:51"><expr pos:start="235:51" pos:end="235:51"><name pos:start="235:51" pos:end="235:51">b</name></expr></argument>, <argument pos:start="235:54" pos:end="235:54"><expr pos:start="235:54" pos:end="235:54"><name pos:start="235:54" pos:end="235:54">b</name></expr></argument>, <argument pos:start="235:57" pos:end="235:59"><expr pos:start="235:57" pos:end="235:59"><name pos:start="235:57" pos:end="235:59">ref</name></expr></argument>, <argument pos:start="235:62" pos:end="235:66"><expr pos:start="235:62" pos:end="235:66"><name pos:start="235:62" pos:end="235:66">width</name></expr></argument>, <argument pos:start="235:69" pos:end="235:71"><expr pos:start="235:69" pos:end="235:71"><name pos:start="235:69" pos:end="235:71">w_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:63"><expr pos:start="237:9" pos:end="237:62"><name pos:start="237:9" pos:end="237:12"><name pos:start="237:9" pos:end="237:9">b</name><index pos:start="237:10" pos:end="237:12">[<expr pos:start="237:11" pos:end="237:11"><literal type="number" pos:start="237:11" pos:end="237:11">0</literal></expr>]</index></name> <operator pos:start="237:14" pos:end="237:14">=</operator> <name pos:start="237:16" pos:end="237:18">b_0</name> <operator pos:start="237:20" pos:end="237:20">+</operator> <operator pos:start="237:22" pos:end="237:22">(</operator><operator pos:start="237:23" pos:end="237:23">(</operator><literal type="number" pos:start="237:24" pos:end="237:24">2</literal> <operator pos:start="237:26" pos:end="237:26">*</operator> <name pos:start="237:28" pos:end="237:33"><name pos:start="237:28" pos:end="237:30">ref</name><index pos:start="237:31" pos:end="237:33">[<expr pos:start="237:32" pos:end="237:32"><literal type="number" pos:start="237:32" pos:end="237:32">1</literal></expr>]</index></name> <operator pos:start="237:35" pos:end="237:35">+</operator> <name pos:start="237:37" pos:end="237:40">W_BO</name><operator pos:start="237:41" pos:end="237:41">-</operator><literal type="number" pos:start="237:42" pos:end="237:44">1</literal> <operator pos:start="237:44" pos:end="237:44">+</operator> <literal type="number" pos:start="237:46" pos:end="237:46">4</literal> <operator pos:start="237:48" pos:end="237:48">*</operator> <name pos:start="237:50" pos:end="237:52">b_0</name><operator pos:start="237:53" pos:end="237:53">)</operator> <operator pos:start="237:55" pos:end="237:56">&gt;&gt;</operator> <name pos:start="237:58" pos:end="237:61">W_BS</name><operator pos:start="237:62" pos:end="237:62">)</operator></expr>;</expr_stmt>

    </block_content>}</block>



    <block pos:start="243:5" pos:end="299:5">{<block_content pos:start="245:9" pos:end="297:99"> <comment type="line" pos:start="243:7" pos:end="243:15">// Lift 3</comment>

        <decl_stmt pos:start="245:9" pos:end="245:36"><decl pos:start="245:9" pos:end="245:35"><type pos:start="245:9" pos:end="245:24"><name pos:start="245:9" pos:end="245:16">IDWTELEM</name> <modifier pos:start="245:18" pos:end="245:18">*</modifier> <specifier pos:start="245:20" pos:end="245:24">const</specifier></type> <name pos:start="245:26" pos:end="245:28">src</name> <init pos:start="245:30" pos:end="245:35">= <expr pos:start="245:32" pos:end="245:35"><name pos:start="245:32" pos:end="245:32">b</name><operator pos:start="245:33" pos:end="245:33">+</operator><name pos:start="245:34" pos:end="245:35">w2</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="249:9" pos:end="249:14"><expr pos:start="249:9" pos:end="249:13"><name pos:start="249:9" pos:end="249:9">i</name> <operator pos:start="249:11" pos:end="249:11">=</operator> <literal type="number" pos:start="249:13" pos:end="249:13">0</literal></expr>;</expr_stmt>

        <for pos:start="251:9" pos:end="255:9">for<control pos:start="251:12" pos:end="251:54">(<init pos:start="251:13" pos:end="251:13">;</init> <condition pos:start="251:15" pos:end="251:49"><expr pos:start="251:15" pos:end="251:48"><operator pos:start="251:15" pos:end="251:15">(</operator><operator pos:start="251:16" pos:end="251:16">(</operator><operator pos:start="251:17" pos:end="251:17">(</operator><name pos:start="251:18" pos:end="251:21">long</name><operator pos:start="251:22" pos:end="251:22">)</operator><operator pos:start="251:23" pos:end="251:23">&amp;</operator><name pos:start="251:24" pos:end="251:30"><name pos:start="251:24" pos:end="251:27">temp</name><index pos:start="251:28" pos:end="251:30">[<expr pos:start="251:29" pos:end="251:29"><name pos:start="251:29" pos:end="251:29">i</name></expr>]</index></name><operator pos:start="251:31" pos:end="251:31">)</operator> <operator pos:start="251:33" pos:end="251:33">&amp;</operator> <literal type="number" pos:start="251:35" pos:end="251:38">0x1F</literal><operator pos:start="251:39" pos:end="251:39">)</operator> <operator pos:start="251:41" pos:end="251:42">&amp;&amp;</operator> <name pos:start="251:44" pos:end="251:44">i</name><operator pos:start="251:45" pos:end="251:45">&lt;</operator><name pos:start="251:46" pos:end="251:48">w_r</name></expr>;</condition> <incr pos:start="251:51" pos:end="251:53"><expr pos:start="251:51" pos:end="251:53"><name pos:start="251:51" pos:end="251:51">i</name><operator pos:start="251:52" pos:end="251:53">++</operator></expr></incr>)</control><block pos:start="251:55" pos:end="255:9">{<block_content pos:start="253:13" pos:end="253:63">

            <expr_stmt pos:start="253:13" pos:end="253:63"><expr pos:start="253:13" pos:end="253:62"><name pos:start="253:13" pos:end="253:19"><name pos:start="253:13" pos:end="253:16">temp</name><index pos:start="253:17" pos:end="253:19">[<expr pos:start="253:18" pos:end="253:18"><name pos:start="253:18" pos:end="253:18">i</name></expr>]</index></name> <operator pos:start="253:21" pos:end="253:21">=</operator> <name pos:start="253:23" pos:end="253:28"><name pos:start="253:23" pos:end="253:25">src</name><index pos:start="253:26" pos:end="253:28">[<expr pos:start="253:27" pos:end="253:27"><name pos:start="253:27" pos:end="253:27">i</name></expr>]</index></name> <operator pos:start="253:30" pos:end="253:30">-</operator> <operator pos:start="253:32" pos:end="253:32">(</operator><operator pos:start="253:33" pos:end="253:33">(</operator><operator pos:start="253:34" pos:end="253:34">-</operator><name pos:start="253:35" pos:end="253:38">W_AM</name><operator pos:start="253:39" pos:end="253:39">*</operator><operator pos:start="253:40" pos:end="253:40">(</operator><name pos:start="253:41" pos:end="253:44"><name pos:start="253:41" pos:end="253:41">b</name><index pos:start="253:42" pos:end="253:44">[<expr pos:start="253:43" pos:end="253:43"><name pos:start="253:43" pos:end="253:43">i</name></expr>]</index></name> <operator pos:start="253:46" pos:end="253:46">+</operator> <name pos:start="253:48" pos:end="253:53"><name pos:start="253:48" pos:end="253:48">b</name><index pos:start="253:49" pos:end="253:53">[<expr pos:start="253:50" pos:end="253:52"><name pos:start="253:50" pos:end="253:50">i</name><operator pos:start="253:51" pos:end="253:51">+</operator><literal type="number" pos:start="253:52" pos:end="253:52">1</literal></expr>]</index></name><operator pos:start="253:54" pos:end="253:54">)</operator><operator pos:start="253:55" pos:end="253:55">)</operator><operator pos:start="253:56" pos:end="253:57">&gt;&gt;</operator><name pos:start="253:58" pos:end="253:61">W_AS</name><operator pos:start="253:62" pos:end="253:62">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="257:9" pos:end="295:9">for<control pos:start="257:12" pos:end="257:28">(<init pos:start="257:13" pos:end="257:13">;</init> <condition pos:start="257:15" pos:end="257:22"><expr pos:start="257:15" pos:end="257:21"><name pos:start="257:15" pos:end="257:15">i</name><operator pos:start="257:16" pos:end="257:16">&lt;</operator><name pos:start="257:17" pos:end="257:19">w_r</name><operator pos:start="257:20" pos:end="257:20">-</operator><literal type="number" pos:start="257:21" pos:end="257:21">7</literal></expr>;</condition> <incr pos:start="257:24" pos:end="257:27"><expr pos:start="257:24" pos:end="257:27"><name pos:start="257:24" pos:end="257:24">i</name><operator pos:start="257:25" pos:end="257:26">+=</operator><literal type="number" pos:start="257:27" pos:end="257:27">8</literal></expr></incr>)</control><block pos:start="257:29" pos:end="295:9">{<block_content pos:start="259:13" pos:end="293:17">

            <asm pos:start="259:13" pos:end="293:17">asm <specifier pos:start="259:17" pos:end="259:24">volatile</specifier>(

                "movdqu  2(%1), %%xmm2        \n\t"

                "movdqu 18(%1), %%xmm6        \n\t"

                "paddw    (%1), %%xmm2        \n\t"

                "paddw  16(%1), %%xmm6        \n\t"

                "movdqu   (%0), %%xmm0        \n\t"

                "movdqu 16(%0), %%xmm4        \n\t"

                "paddw  %%xmm2, %%xmm0        \n\t"

                "paddw  %%xmm6, %%xmm4        \n\t"

                "psraw      $1, %%xmm2        \n\t"

                "psraw      $1, %%xmm6        \n\t"

                "paddw  %%xmm0, %%xmm2        \n\t"

                "paddw  %%xmm4, %%xmm6        \n\t"

                "movdqa %%xmm2, (%2)          \n\t"

                "movdqa %%xmm6, 16(%2)        \n\t"

                :: "r"(&amp;src[i]), "r"(&amp;b[i]), "r"(&amp;temp[i])

                 : "memory"

               );</asm>

        </block_content>}</block></for>

        <expr_stmt pos:start="297:9" pos:end="297:99"><expr pos:start="297:9" pos:end="297:98"><call pos:start="297:9" pos:end="297:98"><name pos:start="297:9" pos:end="297:45">snow_horizontal_compose_lift_lead_out</name><argument_list pos:start="297:46" pos:end="297:98">(<argument pos:start="297:47" pos:end="297:47"><expr pos:start="297:47" pos:end="297:47"><name pos:start="297:47" pos:end="297:47">i</name></expr></argument>, <argument pos:start="297:50" pos:end="297:53"><expr pos:start="297:50" pos:end="297:53"><name pos:start="297:50" pos:end="297:53">temp</name></expr></argument>, <argument pos:start="297:56" pos:end="297:58"><expr pos:start="297:56" pos:end="297:58"><name pos:start="297:56" pos:end="297:58">src</name></expr></argument>, <argument pos:start="297:61" pos:end="297:61"><expr pos:start="297:61" pos:end="297:61"><name pos:start="297:61" pos:end="297:61">b</name></expr></argument>, <argument pos:start="297:64" pos:end="297:68"><expr pos:start="297:64" pos:end="297:68"><name pos:start="297:64" pos:end="297:68">width</name></expr></argument>, <argument pos:start="297:71" pos:end="297:73"><expr pos:start="297:71" pos:end="297:73"><name pos:start="297:71" pos:end="297:73">w_r</name></expr></argument>, <argument pos:start="297:76" pos:end="297:76"><expr pos:start="297:76" pos:end="297:76"><literal type="number" pos:start="297:76" pos:end="297:76">1</literal></expr></argument>, <argument pos:start="297:79" pos:end="297:83"><expr pos:start="297:79" pos:end="297:83"><operator pos:start="297:79" pos:end="297:79">-</operator><name pos:start="297:80" pos:end="297:83">W_AM</name></expr></argument>, <argument pos:start="297:86" pos:end="297:91"><expr pos:start="297:86" pos:end="297:91"><name pos:start="297:86" pos:end="297:89">W_AO</name><operator pos:start="297:90" pos:end="297:90">+</operator><literal type="number" pos:start="297:91" pos:end="297:91">1</literal></expr></argument>, <argument pos:start="297:94" pos:end="297:97"><expr pos:start="297:94" pos:end="297:97"><name pos:start="297:94" pos:end="297:97">W_AS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <block pos:start="303:5" pos:end="377:5">{<block_content pos:start="305:9" pos:end="375:9">

        <expr_stmt pos:start="305:9" pos:end="305:56"><expr pos:start="305:9" pos:end="305:55"><call pos:start="305:9" pos:end="305:55"><name pos:start="305:9" pos:end="305:35">snow_interleave_line_header</name><argument_list pos:start="305:36" pos:end="305:55">(<argument pos:start="305:37" pos:end="305:38"><expr pos:start="305:37" pos:end="305:38"><operator pos:start="305:37" pos:end="305:37">&amp;</operator><name pos:start="305:38" pos:end="305:38">i</name></expr></argument>, <argument pos:start="305:41" pos:end="305:45"><expr pos:start="305:41" pos:end="305:45"><name pos:start="305:41" pos:end="305:45">width</name></expr></argument>, <argument pos:start="305:48" pos:end="305:48"><expr pos:start="305:48" pos:end="305:48"><name pos:start="305:48" pos:end="305:48">b</name></expr></argument>, <argument pos:start="305:51" pos:end="305:54"><expr pos:start="305:51" pos:end="305:54"><name pos:start="305:51" pos:end="305:54">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="309:9" pos:end="315:9">for <control pos:start="309:13" pos:end="309:40">(<init pos:start="309:14" pos:end="309:14">;</init> <condition pos:start="309:16" pos:end="309:34"><expr pos:start="309:16" pos:end="309:33"><operator pos:start="309:16" pos:end="309:16">(</operator><name pos:start="309:17" pos:end="309:17">i</name> <operator pos:start="309:19" pos:end="309:19">&amp;</operator> <literal type="number" pos:start="309:21" pos:end="309:24">0x3E</literal><operator pos:start="309:25" pos:end="309:25">)</operator> <operator pos:start="309:27" pos:end="309:28">!=</operator> <literal type="number" pos:start="309:30" pos:end="309:33">0x3E</literal></expr>;</condition> <incr pos:start="309:36" pos:end="309:39"><expr pos:start="309:36" pos:end="309:39"><name pos:start="309:36" pos:end="309:36">i</name><operator pos:start="309:37" pos:end="309:38">-=</operator><literal type="number" pos:start="309:39" pos:end="309:39">2</literal></expr></incr>)</control><block pos:start="309:41" pos:end="315:9">{<block_content pos:start="311:13" pos:end="313:27">

            <expr_stmt pos:start="311:13" pos:end="311:32"><expr pos:start="311:13" pos:end="311:31"><name pos:start="311:13" pos:end="311:18"><name pos:start="311:13" pos:end="311:13">b</name><index pos:start="311:14" pos:end="311:18">[<expr pos:start="311:15" pos:end="311:17"><name pos:start="311:15" pos:end="311:15">i</name><operator pos:start="311:16" pos:end="311:16">+</operator><literal type="number" pos:start="311:17" pos:end="311:17">1</literal></expr>]</index></name> <operator pos:start="311:20" pos:end="311:20">=</operator> <name pos:start="311:22" pos:end="311:31"><name pos:start="311:22" pos:end="311:25">temp</name><index pos:start="311:26" pos:end="311:31">[<expr pos:start="311:27" pos:end="311:30"><name pos:start="311:27" pos:end="311:27">i</name><operator pos:start="311:28" pos:end="311:29">&gt;&gt;</operator><literal type="number" pos:start="311:30" pos:end="311:30">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:27"><expr pos:start="313:13" pos:end="313:26"><name pos:start="313:13" pos:end="313:16"><name pos:start="313:13" pos:end="313:13">b</name><index pos:start="313:14" pos:end="313:16">[<expr pos:start="313:15" pos:end="313:15"><name pos:start="313:15" pos:end="313:15">i</name></expr>]</index></name> <operator pos:start="313:18" pos:end="313:18">=</operator> <name pos:start="313:20" pos:end="313:26"><name pos:start="313:20" pos:end="313:20">b</name><index pos:start="313:21" pos:end="313:26">[<expr pos:start="313:22" pos:end="313:25"><name pos:start="313:22" pos:end="313:22">i</name><operator pos:start="313:23" pos:end="313:24">&gt;&gt;</operator><literal type="number" pos:start="313:25" pos:end="313:25">1</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="317:9" pos:end="375:9">for <control pos:start="317:13" pos:end="317:32">(<init pos:start="317:14" pos:end="317:19"><expr pos:start="317:14" pos:end="317:18"><name pos:start="317:14" pos:end="317:14">i</name><operator pos:start="317:15" pos:end="317:16">-=</operator><literal type="number" pos:start="317:17" pos:end="317:18">62</literal></expr>;</init> <condition pos:start="317:21" pos:end="317:25"><expr pos:start="317:21" pos:end="317:24"><name pos:start="317:21" pos:end="317:21">i</name><operator pos:start="317:22" pos:end="317:23">&gt;=</operator><literal type="number" pos:start="317:24" pos:end="317:24">0</literal></expr>;</condition> <incr pos:start="317:27" pos:end="317:31"><expr pos:start="317:27" pos:end="317:31"><name pos:start="317:27" pos:end="317:27">i</name><operator pos:start="317:28" pos:end="317:29">-=</operator><literal type="number" pos:start="317:30" pos:end="317:31">64</literal></expr></incr>)</control><block pos:start="317:33" pos:end="375:9">{<block_content pos:start="319:13" pos:end="373:17">

            <asm pos:start="319:13" pos:end="373:17">asm <specifier pos:start="319:17" pos:end="319:24">volatile</specifier>(

                "movdqa      (%1), %%xmm0       \n\t"

                "movdqa    16(%1), %%xmm2       \n\t"

                "movdqa    32(%1), %%xmm4       \n\t"

                "movdqa    48(%1), %%xmm6       \n\t"

                "movdqa      (%1), %%xmm1       \n\t"

                "movdqa    16(%1), %%xmm3       \n\t"

                "movdqa    32(%1), %%xmm5       \n\t"

                "movdqa    48(%1), %%xmm7       \n\t"

                "punpcklwd   (%2), %%xmm0       \n\t"

                "punpcklwd 16(%2), %%xmm2       \n\t"

                "punpcklwd 32(%2), %%xmm4       \n\t"

                "punpcklwd 48(%2), %%xmm6       \n\t"

                "movdqa    %%xmm0, (%0)         \n\t"

                "movdqa    %%xmm2, 32(%0)       \n\t"

                "movdqa    %%xmm4, 64(%0)       \n\t"

                "movdqa    %%xmm6, 96(%0)       \n\t"

                "punpckhwd   (%2), %%xmm1       \n\t"

                "punpckhwd 16(%2), %%xmm3       \n\t"

                "punpckhwd 32(%2), %%xmm5       \n\t"

                "punpckhwd 48(%2), %%xmm7       \n\t"

                "movdqa    %%xmm1, 16(%0)       \n\t"

                "movdqa    %%xmm3, 48(%0)       \n\t"

                "movdqa    %%xmm5, 80(%0)       \n\t"

                "movdqa    %%xmm7, 112(%0)      \n\t"

                :: "r"(&amp;(b)[i]), "r"(&amp;(b)[i&gt;&gt;1]), "r"(&amp;(temp)[i&gt;&gt;1])

                 : "memory"

               );</asm>

        </block_content>}</block></for>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
