<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7053.c" pos:tabs="8"><function pos:start="1:1" pos:end="299:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">opt_output_file</name><parameter_list pos:start="1:28" pos:end="1:49">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:40"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:38">char</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:48">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="299:1">{<block_content pos:start="5:5" pos:end="297:24">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">oc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name></decl>, <decl pos:start="7:14" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:22">use_video</name></decl>, <decl pos:start="7:25" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:33">use_audio</name></decl>, <decl pos:start="7:36" pos:end="7:47"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:36" pos:end="7:47">use_subtitle</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:61"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:23">input_has_video</name></decl>, <decl pos:start="9:26" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:40">input_has_audio</name></decl>, <decl pos:start="9:43" pos:end="9:60"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:43" pos:end="9:60">input_has_subtitle</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22">AVFormatParameters</name></type> <name pos:start="11:24" pos:end="11:29">params</name></decl>, <decl pos:start="11:32" pos:end="11:44"><type ref="prev" pos:start="11:5" pos:end="11:22"><modifier pos:start="11:32" pos:end="11:32">*</modifier></type><name pos:start="11:33" pos:end="11:34">ap</name> <init pos:start="11:36" pos:end="11:44">= <expr pos:start="11:38" pos:end="11:44"><operator pos:start="11:38" pos:end="11:38">&amp;</operator><name pos:start="11:39" pos:end="11:44">params</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">AVOutputFormat</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:32">file_oformat</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:27"><if pos:start="17:5" pos:end="19:27">if <condition pos:start="17:8" pos:end="17:31">(<expr pos:start="17:9" pos:end="17:30"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:30"><name pos:start="17:10" pos:end="17:15">strcmp</name><argument_list pos:start="17:16" pos:end="17:30">(<argument pos:start="17:17" pos:end="17:24"><expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:24">filename</name></expr></argument>, <argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><literal type="string" pos:start="17:27" pos:end="17:29">"-"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:27"><block_content pos:start="19:9" pos:end="19:27">

        <expr_stmt pos:start="19:9" pos:end="19:27"><expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:16">filename</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <literal type="string" pos:start="19:20" pos:end="19:26">"pipe:"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:6">oc</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <call pos:start="23:10" pos:end="23:33"><name pos:start="23:10" pos:end="23:31">avformat_alloc_context</name><argument_list pos:start="23:32" pos:end="23:33">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:11">oc</name></expr>)</condition> <block pos:start="25:14" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:23">

        <expr_stmt pos:start="27:9" pos:end="27:47"><expr pos:start="27:9" pos:end="27:46"><call pos:start="27:9" pos:end="27:46"><name pos:start="27:9" pos:end="27:19">print_error</name><argument_list pos:start="27:20" pos:end="27:46">(<argument pos:start="27:21" pos:end="27:28"><expr pos:start="27:21" pos:end="27:28"><name pos:start="27:21" pos:end="27:28">filename</name></expr></argument>, <argument pos:start="27:31" pos:end="27:45"><expr pos:start="27:31" pos:end="27:45"><call pos:start="27:31" pos:end="27:45"><name pos:start="27:31" pos:end="27:37">AVERROR</name><argument_list pos:start="27:38" pos:end="27:45">(<argument pos:start="27:39" pos:end="27:44"><expr pos:start="27:39" pos:end="27:44"><name pos:start="27:39" pos:end="27:44">ENOMEM</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:23"><expr pos:start="29:9" pos:end="29:22"><call pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:19">ffmpeg_exit</name><argument_list pos:start="29:20" pos:end="29:22">(<argument pos:start="29:21" pos:end="29:21"><expr pos:start="29:21" pos:end="29:21"><literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="63:5"><if pos:start="35:5" pos:end="49:5">if <condition pos:start="35:8" pos:end="35:26">(<expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:25">last_asked_format</name></expr>)</condition> <block pos:start="35:28" pos:end="49:5">{<block_content pos:start="37:9" pos:end="47:33">

        <expr_stmt pos:start="37:9" pos:end="37:70"><expr pos:start="37:9" pos:end="37:69"><name pos:start="37:9" pos:end="37:20">file_oformat</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <call pos:start="37:24" pos:end="37:69"><name pos:start="37:24" pos:end="37:38">av_guess_format</name><argument_list pos:start="37:39" pos:end="37:69">(<argument pos:start="37:40" pos:end="37:56"><expr pos:start="37:40" pos:end="37:56"><name pos:start="37:40" pos:end="37:56">last_asked_format</name></expr></argument>, <argument pos:start="37:59" pos:end="37:62"><expr pos:start="37:59" pos:end="37:62"><name pos:start="37:59" pos:end="37:62">NULL</name></expr></argument>, <argument pos:start="37:65" pos:end="37:68"><expr pos:start="37:65" pos:end="37:68"><name pos:start="37:65" pos:end="37:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:26">(<expr pos:start="39:13" pos:end="39:25"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:25">file_oformat</name></expr>)</condition> <block pos:start="39:28" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:27">

            <expr_stmt pos:start="41:13" pos:end="41:113"><expr pos:start="41:13" pos:end="41:112"><call pos:start="41:13" pos:end="41:112"><name pos:start="41:13" pos:end="41:19">fprintf</name><argument_list pos:start="41:20" pos:end="41:112">(<argument pos:start="41:21" pos:end="41:26"><expr pos:start="41:21" pos:end="41:26"><name pos:start="41:21" pos:end="41:26">stderr</name></expr></argument>, <argument pos:start="41:29" pos:end="41:92"><expr pos:start="41:29" pos:end="41:92"><literal type="string" pos:start="41:29" pos:end="41:92">"Requested output format '%s' is not a suitable output format\n"</literal></expr></argument>, <argument pos:start="41:95" pos:end="41:111"><expr pos:start="41:95" pos:end="41:111"><name pos:start="41:95" pos:end="41:111">last_asked_format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:27"><expr pos:start="43:13" pos:end="43:26"><call pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:23">ffmpeg_exit</name><argument_list pos:start="43:24" pos:end="43:26">(<argument pos:start="43:25" pos:end="43:25"><expr pos:start="43:25" pos:end="43:25"><literal type="number" pos:start="43:25" pos:end="43:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:33"><expr pos:start="47:9" pos:end="47:32"><name pos:start="47:9" pos:end="47:25">last_asked_format</name> <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:32">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="63:5">else <block pos:start="49:12" pos:end="63:5">{<block_content pos:start="51:9" pos:end="61:9">

        <expr_stmt pos:start="51:9" pos:end="51:61"><expr pos:start="51:9" pos:end="51:60"><name pos:start="51:9" pos:end="51:20">file_oformat</name> <operator pos:start="51:22" pos:end="51:22">=</operator> <call pos:start="51:24" pos:end="51:60"><name pos:start="51:24" pos:end="51:38">av_guess_format</name><argument_list pos:start="51:39" pos:end="51:60">(<argument pos:start="51:40" pos:end="51:43"><expr pos:start="51:40" pos:end="51:43"><name pos:start="51:40" pos:end="51:43">NULL</name></expr></argument>, <argument pos:start="51:46" pos:end="51:53"><expr pos:start="51:46" pos:end="51:53"><name pos:start="51:46" pos:end="51:53">filename</name></expr></argument>, <argument pos:start="51:56" pos:end="51:59"><expr pos:start="51:56" pos:end="51:59"><name pos:start="51:56" pos:end="51:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:26">(<expr pos:start="53:13" pos:end="53:25"><operator pos:start="53:13" pos:end="53:13">!</operator><name pos:start="53:14" pos:end="53:25">file_oformat</name></expr>)</condition> <block pos:start="53:28" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:27">

            <expr_stmt pos:start="55:13" pos:end="57:30"><expr pos:start="55:13" pos:end="57:29"><call pos:start="55:13" pos:end="57:29"><name pos:start="55:13" pos:end="55:19">fprintf</name><argument_list pos:start="55:20" pos:end="57:29">(<argument pos:start="55:21" pos:end="55:26"><expr pos:start="55:21" pos:end="55:26"><name pos:start="55:21" pos:end="55:26">stderr</name></expr></argument>, <argument pos:start="55:29" pos:end="55:80"><expr pos:start="55:29" pos:end="55:80"><literal type="string" pos:start="55:29" pos:end="55:80">"Unable to find a suitable output format for '%s'\n"</literal></expr></argument>,

                    <argument pos:start="57:21" pos:end="57:28"><expr pos:start="57:21" pos:end="57:28"><name pos:start="57:21" pos:end="57:28">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:27"><expr pos:start="59:13" pos:end="59:26"><call pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:23">ffmpeg_exit</name><argument_list pos:start="59:24" pos:end="59:26">(<argument pos:start="59:25" pos:end="59:25"><expr pos:start="59:25" pos:end="59:25"><literal type="number" pos:start="59:25" pos:end="59:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:31"><expr pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:6">oc</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:15">oformat</name></name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:30">file_oformat</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:61"><expr pos:start="69:5" pos:end="69:60"><call pos:start="69:5" pos:end="69:60"><name pos:start="69:5" pos:end="69:14">av_strlcpy</name><argument_list pos:start="69:15" pos:end="69:60">(<argument pos:start="69:16" pos:end="69:27"><expr pos:start="69:16" pos:end="69:27"><name pos:start="69:16" pos:end="69:27"><name pos:start="69:16" pos:end="69:17">oc</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:27">filename</name></name></expr></argument>, <argument pos:start="69:30" pos:end="69:37"><expr pos:start="69:30" pos:end="69:37"><name pos:start="69:30" pos:end="69:37">filename</name></expr></argument>, <argument pos:start="69:40" pos:end="69:59"><expr pos:start="69:40" pos:end="69:59"><sizeof pos:start="69:40" pos:end="69:59">sizeof<argument_list pos:start="69:46" pos:end="69:59">(<argument pos:start="69:47" pos:end="69:58"><expr pos:start="69:47" pos:end="69:58"><name pos:start="69:47" pos:end="69:58"><name pos:start="69:47" pos:end="69:48">oc</name><operator pos:start="69:49" pos:end="69:50">-&gt;</operator><name pos:start="69:51" pos:end="69:58">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="187:5"><if pos:start="73:5" pos:end="91:5">if <condition pos:start="73:8" pos:end="75:45">(<expr pos:start="73:9" pos:end="75:44"><operator pos:start="73:9" pos:end="73:9">!</operator><call pos:start="73:10" pos:end="73:42"><name pos:start="73:10" pos:end="73:15">strcmp</name><argument_list pos:start="73:16" pos:end="73:42">(<argument pos:start="73:17" pos:end="73:34"><expr pos:start="73:17" pos:end="73:34"><name pos:start="73:17" pos:end="73:34"><name pos:start="73:17" pos:end="73:28">file_oformat</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:34">name</name></name></expr></argument>, <argument pos:start="73:37" pos:end="73:41"><expr pos:start="73:37" pos:end="73:41"><literal type="string" pos:start="73:37" pos:end="73:41">"ffm"</literal></expr></argument>)</argument_list></call> <operator pos:start="73:44" pos:end="73:45">&amp;&amp;</operator>

        <call pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:19">av_strstart</name><argument_list pos:start="75:20" pos:end="75:44">(<argument pos:start="75:21" pos:end="75:28"><expr pos:start="75:21" pos:end="75:28"><name pos:start="75:21" pos:end="75:28">filename</name></expr></argument>, <argument pos:start="75:31" pos:end="75:37"><expr pos:start="75:31" pos:end="75:37"><literal type="string" pos:start="75:31" pos:end="75:37">"http:"</literal></expr></argument>, <argument pos:start="75:40" pos:end="75:43"><expr pos:start="75:40" pos:end="75:43"><name pos:start="75:40" pos:end="75:43">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:47" pos:end="91:5">{<block_content pos:start="81:9" pos:end="89:9">

        <comment type="block" pos:start="77:9" pos:end="79:38">/* special case for files sent to ffserver: we get the stream

           parameters from ffserver */</comment>

        <decl_stmt pos:start="81:9" pos:end="81:54"><decl pos:start="81:9" pos:end="81:53"><type pos:start="81:9" pos:end="81:11"><name pos:start="81:9" pos:end="81:11">int</name></type> <name pos:start="81:13" pos:end="81:15">err</name> <init pos:start="81:17" pos:end="81:53">= <expr pos:start="81:19" pos:end="81:53"><call pos:start="81:19" pos:end="81:53"><name pos:start="81:19" pos:end="81:39">read_ffserver_streams</name><argument_list pos:start="81:40" pos:end="81:53">(<argument pos:start="81:41" pos:end="81:42"><expr pos:start="81:41" pos:end="81:42"><name pos:start="81:41" pos:end="81:42">oc</name></expr></argument>, <argument pos:start="81:45" pos:end="81:52"><expr pos:start="81:45" pos:end="81:52"><name pos:start="81:45" pos:end="81:52">filename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="83:9" pos:end="89:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:20">(<expr pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:15">err</name> <operator pos:start="83:17" pos:end="83:17">&lt;</operator> <literal type="number" pos:start="83:19" pos:end="83:19">0</literal></expr>)</condition> <block pos:start="83:22" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:27">

            <expr_stmt pos:start="85:13" pos:end="85:39"><expr pos:start="85:13" pos:end="85:38"><call pos:start="85:13" pos:end="85:38"><name pos:start="85:13" pos:end="85:23">print_error</name><argument_list pos:start="85:24" pos:end="85:38">(<argument pos:start="85:25" pos:end="85:32"><expr pos:start="85:25" pos:end="85:32"><name pos:start="85:25" pos:end="85:32">filename</name></expr></argument>, <argument pos:start="85:35" pos:end="85:37"><expr pos:start="85:35" pos:end="85:37"><name pos:start="85:35" pos:end="85:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:27"><expr pos:start="87:13" pos:end="87:26"><call pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:23">ffmpeg_exit</name><argument_list pos:start="87:24" pos:end="87:26">(<argument pos:start="87:25" pos:end="87:25"><expr pos:start="87:25" pos:end="87:25"><literal type="number" pos:start="87:25" pos:end="87:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="187:5">else <block pos:start="91:12" pos:end="187:5">{<block_content pos:start="93:9" pos:end="185:63">

        <expr_stmt pos:start="93:9" pos:end="93:104"><expr pos:start="93:9" pos:end="93:103"><name pos:start="93:9" pos:end="93:17">use_video</name> <operator pos:start="93:19" pos:end="93:19">=</operator> <name pos:start="93:21" pos:end="93:45"><name pos:start="93:21" pos:end="93:32">file_oformat</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:45">video_codec</name></name> <operator pos:start="93:47" pos:end="93:48">!=</operator> <name pos:start="93:50" pos:end="93:62">CODEC_ID_NONE</name> <operator pos:start="93:64" pos:end="93:65">||</operator> <name pos:start="93:67" pos:end="93:83">video_stream_copy</name> <operator pos:start="93:85" pos:end="93:86">||</operator> <name pos:start="93:88" pos:end="93:103">video_codec_name</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:104"><expr pos:start="95:9" pos:end="95:103"><name pos:start="95:9" pos:end="95:17">use_audio</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:45"><name pos:start="95:21" pos:end="95:32">file_oformat</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:45">audio_codec</name></name> <operator pos:start="95:47" pos:end="95:48">!=</operator> <name pos:start="95:50" pos:end="95:62">CODEC_ID_NONE</name> <operator pos:start="95:64" pos:end="95:65">||</operator> <name pos:start="95:67" pos:end="95:83">audio_stream_copy</name> <operator pos:start="95:85" pos:end="95:86">||</operator> <name pos:start="95:88" pos:end="95:103">audio_codec_name</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:116"><expr pos:start="97:9" pos:end="97:115"><name pos:start="97:9" pos:end="97:20">use_subtitle</name> <operator pos:start="97:22" pos:end="97:22">=</operator> <name pos:start="97:24" pos:end="97:51"><name pos:start="97:24" pos:end="97:35">file_oformat</name><operator pos:start="97:36" pos:end="97:37">-&gt;</operator><name pos:start="97:38" pos:end="97:51">subtitle_codec</name></name> <operator pos:start="97:53" pos:end="97:54">!=</operator> <name pos:start="97:56" pos:end="97:68">CODEC_ID_NONE</name> <operator pos:start="97:70" pos:end="97:71">||</operator> <name pos:start="97:73" pos:end="97:92">subtitle_stream_copy</name> <operator pos:start="97:94" pos:end="97:95">||</operator> <name pos:start="97:97" pos:end="97:115">subtitle_codec_name</name></expr>;</expr_stmt>



        <comment type="block" pos:start="101:9" pos:end="103:24">/* disable if no corresponding type found and at least one

           input file */</comment>

        <if_stmt pos:start="105:9" pos:end="123:9"><if pos:start="105:9" pos:end="123:9">if <condition pos:start="105:12" pos:end="105:31">(<expr pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:26">nb_input_files</name> <operator pos:start="105:28" pos:end="105:28">&gt;</operator> <literal type="number" pos:start="105:30" pos:end="105:30">0</literal></expr>)</condition> <block pos:start="105:33" pos:end="123:9">{<block_content pos:start="107:13" pos:end="121:33">

            <expr_stmt pos:start="107:13" pos:end="109:62"><expr pos:start="107:13" pos:end="109:61"><call pos:start="107:13" pos:end="109:61"><name pos:start="107:13" pos:end="107:40">check_audio_video_sub_inputs</name><argument_list pos:start="107:41" pos:end="109:61">(<argument pos:start="107:42" pos:end="107:57"><expr pos:start="107:42" pos:end="107:57"><operator pos:start="107:42" pos:end="107:42">&amp;</operator><name pos:start="107:43" pos:end="107:57">input_has_video</name></expr></argument>, <argument pos:start="107:60" pos:end="107:75"><expr pos:start="107:60" pos:end="107:75"><operator pos:start="107:60" pos:end="107:60">&amp;</operator><name pos:start="107:61" pos:end="107:75">input_has_audio</name></expr></argument>,

                                         <argument pos:start="109:42" pos:end="109:60"><expr pos:start="109:42" pos:end="109:60"><operator pos:start="109:42" pos:end="109:42">&amp;</operator><name pos:start="109:43" pos:end="109:60">input_has_subtitle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="113:30"><if pos:start="111:13" pos:end="113:30">if <condition pos:start="111:16" pos:end="111:33">(<expr pos:start="111:17" pos:end="111:32"><operator pos:start="111:17" pos:end="111:17">!</operator><name pos:start="111:18" pos:end="111:32">input_has_video</name></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:30"><block_content pos:start="113:17" pos:end="113:30">

                <expr_stmt pos:start="113:17" pos:end="113:30"><expr pos:start="113:17" pos:end="113:29"><name pos:start="113:17" pos:end="113:25">use_video</name> <operator pos:start="113:27" pos:end="113:27">=</operator> <literal type="number" pos:start="113:29" pos:end="113:29">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="115:13" pos:end="117:30"><if pos:start="115:13" pos:end="117:30">if <condition pos:start="115:16" pos:end="115:33">(<expr pos:start="115:17" pos:end="115:32"><operator pos:start="115:17" pos:end="115:17">!</operator><name pos:start="115:18" pos:end="115:32">input_has_audio</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:30"><block_content pos:start="117:17" pos:end="117:30">

                <expr_stmt pos:start="117:17" pos:end="117:30"><expr pos:start="117:17" pos:end="117:29"><name pos:start="117:17" pos:end="117:25">use_audio</name> <operator pos:start="117:27" pos:end="117:27">=</operator> <literal type="number" pos:start="117:29" pos:end="117:29">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="119:13" pos:end="121:33"><if pos:start="119:13" pos:end="121:33">if <condition pos:start="119:16" pos:end="119:36">(<expr pos:start="119:17" pos:end="119:35"><operator pos:start="119:17" pos:end="119:17">!</operator><name pos:start="119:18" pos:end="119:35">input_has_subtitle</name></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:33"><block_content pos:start="121:17" pos:end="121:33">

                <expr_stmt pos:start="121:17" pos:end="121:33"><expr pos:start="121:17" pos:end="121:32"><name pos:start="121:17" pos:end="121:28">use_subtitle</name> <operator pos:start="121:30" pos:end="121:30">=</operator> <literal type="number" pos:start="121:32" pos:end="121:32">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="127:9" pos:end="127:28">/* manual disable */</comment>

        <if_stmt pos:start="129:9" pos:end="133:9"><if pos:start="129:9" pos:end="133:9">if <condition pos:start="129:12" pos:end="129:26">(<expr pos:start="129:13" pos:end="129:25"><name pos:start="129:13" pos:end="129:25">audio_disable</name></expr>)</condition> <block pos:start="129:28" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:26">

            <expr_stmt pos:start="131:13" pos:end="131:26"><expr pos:start="131:13" pos:end="131:25"><name pos:start="131:13" pos:end="131:21">use_audio</name> <operator pos:start="131:23" pos:end="131:23">=</operator> <literal type="number" pos:start="131:25" pos:end="131:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="135:9" pos:end="139:9"><if pos:start="135:9" pos:end="139:9">if <condition pos:start="135:12" pos:end="135:26">(<expr pos:start="135:13" pos:end="135:25"><name pos:start="135:13" pos:end="135:25">video_disable</name></expr>)</condition> <block pos:start="135:28" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:26">

            <expr_stmt pos:start="137:13" pos:end="137:26"><expr pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:21">use_video</name> <operator pos:start="137:23" pos:end="137:23">=</operator> <literal type="number" pos:start="137:25" pos:end="137:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="141:9" pos:end="145:9"><if pos:start="141:9" pos:end="145:9">if <condition pos:start="141:12" pos:end="141:29">(<expr pos:start="141:13" pos:end="141:28"><name pos:start="141:13" pos:end="141:28">subtitle_disable</name></expr>)</condition> <block pos:start="141:31" pos:end="145:9">{<block_content pos:start="143:13" pos:end="143:29">

            <expr_stmt pos:start="143:13" pos:end="143:29"><expr pos:start="143:13" pos:end="143:28"><name pos:start="143:13" pos:end="143:24">use_subtitle</name> <operator pos:start="143:26" pos:end="143:26">=</operator> <literal type="number" pos:start="143:28" pos:end="143:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="149:9" pos:end="153:9"><if pos:start="149:9" pos:end="153:9">if <condition pos:start="149:12" pos:end="149:22">(<expr pos:start="149:13" pos:end="149:21"><name pos:start="149:13" pos:end="149:21">use_video</name></expr>)</condition> <block pos:start="149:24" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:33">

            <expr_stmt pos:start="151:13" pos:end="151:33"><expr pos:start="151:13" pos:end="151:32"><call pos:start="151:13" pos:end="151:32"><name pos:start="151:13" pos:end="151:28">new_video_stream</name><argument_list pos:start="151:29" pos:end="151:32">(<argument pos:start="151:30" pos:end="151:31"><expr pos:start="151:30" pos:end="151:31"><name pos:start="151:30" pos:end="151:31">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="157:9" pos:end="161:9"><if pos:start="157:9" pos:end="161:9">if <condition pos:start="157:12" pos:end="157:22">(<expr pos:start="157:13" pos:end="157:21"><name pos:start="157:13" pos:end="157:21">use_audio</name></expr>)</condition> <block pos:start="157:24" pos:end="161:9">{<block_content pos:start="159:13" pos:end="159:33">

            <expr_stmt pos:start="159:13" pos:end="159:33"><expr pos:start="159:13" pos:end="159:32"><call pos:start="159:13" pos:end="159:32"><name pos:start="159:13" pos:end="159:28">new_audio_stream</name><argument_list pos:start="159:29" pos:end="159:32">(<argument pos:start="159:30" pos:end="159:31"><expr pos:start="159:30" pos:end="159:31"><name pos:start="159:30" pos:end="159:31">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="165:9" pos:end="169:9"><if pos:start="165:9" pos:end="169:9">if <condition pos:start="165:12" pos:end="165:25">(<expr pos:start="165:13" pos:end="165:24"><name pos:start="165:13" pos:end="165:24">use_subtitle</name></expr>)</condition> <block pos:start="165:27" pos:end="169:9">{<block_content pos:start="167:13" pos:end="167:36">

            <expr_stmt pos:start="167:13" pos:end="167:36"><expr pos:start="167:13" pos:end="167:35"><call pos:start="167:13" pos:end="167:35"><name pos:start="167:13" pos:end="167:31">new_subtitle_stream</name><argument_list pos:start="167:32" pos:end="167:35">(<argument pos:start="167:33" pos:end="167:34"><expr pos:start="167:33" pos:end="167:34"><name pos:start="167:33" pos:end="167:34">oc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="173:9" pos:end="173:44"><expr pos:start="173:9" pos:end="173:43"><name pos:start="173:9" pos:end="173:21"><name pos:start="173:9" pos:end="173:10">oc</name><operator pos:start="173:11" pos:end="173:12">-&gt;</operator><name pos:start="173:13" pos:end="173:21">timestamp</name></name> <operator pos:start="173:23" pos:end="173:23">=</operator> <name pos:start="173:25" pos:end="173:43">recording_timestamp</name></expr>;</expr_stmt>



        <for pos:start="177:9" pos:end="183:9">for<control pos:start="177:12" pos:end="177:49">(<init pos:start="177:13" pos:end="177:13">;</init> <condition pos:start="177:15" pos:end="177:31"><expr pos:start="177:15" pos:end="177:30"><name pos:start="177:15" pos:end="177:28">metadata_count</name><operator pos:start="177:29" pos:end="177:29">&gt;</operator><literal type="number" pos:start="177:30" pos:end="177:30">0</literal></expr>;</condition> <incr pos:start="177:33" pos:end="177:48"><expr pos:start="177:33" pos:end="177:48"><name pos:start="177:33" pos:end="177:46">metadata_count</name><operator pos:start="177:47" pos:end="177:48">--</operator></expr></incr>)</control><block pos:start="177:50" pos:end="183:9">{<block_content pos:start="179:13" pos:end="181:81">

            <expr_stmt pos:start="179:13" pos:end="181:81"><expr pos:start="179:13" pos:end="181:80"><call pos:start="179:13" pos:end="181:80"><name pos:start="179:13" pos:end="179:28">av_metadata_set2</name><argument_list pos:start="179:29" pos:end="181:80">(<argument pos:start="179:30" pos:end="179:42"><expr pos:start="179:30" pos:end="179:42"><operator pos:start="179:30" pos:end="179:30">&amp;</operator><name pos:start="179:31" pos:end="179:42"><name pos:start="179:31" pos:end="179:32">oc</name><operator pos:start="179:33" pos:end="179:34">-&gt;</operator><name pos:start="179:35" pos:end="179:42">metadata</name></name></expr></argument>, <argument pos:start="179:45" pos:end="179:74"><expr pos:start="179:45" pos:end="179:74"><name pos:start="179:45" pos:end="179:70"><name pos:start="179:45" pos:end="179:52">metadata</name><index pos:start="179:53" pos:end="179:70">[<expr pos:start="179:54" pos:end="179:69"><name pos:start="179:54" pos:end="179:67">metadata_count</name><operator pos:start="179:68" pos:end="179:68">-</operator><literal type="number" pos:start="179:69" pos:end="179:69">1</literal></expr>]</index></name><operator pos:start="179:71" pos:end="179:71">.</operator><name pos:start="179:72" pos:end="179:74">key</name></expr></argument>,

                                            <argument pos:start="181:45" pos:end="181:76"><expr pos:start="181:45" pos:end="181:76"><name pos:start="181:45" pos:end="181:70"><name pos:start="181:45" pos:end="181:52">metadata</name><index pos:start="181:53" pos:end="181:70">[<expr pos:start="181:54" pos:end="181:69"><name pos:start="181:54" pos:end="181:67">metadata_count</name><operator pos:start="181:68" pos:end="181:68">-</operator><literal type="number" pos:start="181:69" pos:end="181:69">1</literal></expr>]</index></name><operator pos:start="181:71" pos:end="181:71">.</operator><name pos:start="181:72" pos:end="181:76">value</name></expr></argument>, <argument pos:start="181:79" pos:end="181:79"><expr pos:start="181:79" pos:end="181:79"><literal type="number" pos:start="181:79" pos:end="181:79">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="185:9" pos:end="185:63"><expr pos:start="185:9" pos:end="185:62"><call pos:start="185:9" pos:end="185:62"><name pos:start="185:9" pos:end="185:24">av_metadata_conv</name><argument_list pos:start="185:25" pos:end="185:62">(<argument pos:start="185:26" pos:end="185:27"><expr pos:start="185:26" pos:end="185:27"><name pos:start="185:26" pos:end="185:27">oc</name></expr></argument>, <argument pos:start="185:30" pos:end="185:55"><expr pos:start="185:30" pos:end="185:55"><name pos:start="185:30" pos:end="185:55"><name pos:start="185:30" pos:end="185:31">oc</name><operator pos:start="185:32" pos:end="185:33">-&gt;</operator><name pos:start="185:34" pos:end="185:40">oformat</name><operator pos:start="185:41" pos:end="185:42">-&gt;</operator><name pos:start="185:43" pos:end="185:55">metadata_conv</name></name></expr></argument>, <argument pos:start="185:58" pos:end="185:61"><expr pos:start="185:58" pos:end="185:61"><name pos:start="185:58" pos:end="185:61">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:41"><expr pos:start="191:5" pos:end="191:40"><name pos:start="191:5" pos:end="191:35"><name pos:start="191:5" pos:end="191:16">output_files</name><index pos:start="191:17" pos:end="191:35">[<expr pos:start="191:18" pos:end="191:34"><name pos:start="191:18" pos:end="191:32">nb_output_files</name><operator pos:start="191:33" pos:end="191:34">++</operator></expr>]</index></name> <operator pos:start="191:37" pos:end="191:37">=</operator> <name pos:start="191:39" pos:end="191:40">oc</name></expr>;</expr_stmt>



    <comment type="block" pos:start="195:5" pos:end="195:63">/* check filename in case of an image number is expected */</comment>

    <if_stmt pos:start="197:5" pos:end="207:5"><if pos:start="197:5" pos:end="207:5">if <condition pos:start="197:8" pos:end="197:46">(<expr pos:start="197:9" pos:end="197:45"><name pos:start="197:9" pos:end="197:26"><name pos:start="197:9" pos:end="197:10">oc</name><operator pos:start="197:11" pos:end="197:12">-&gt;</operator><name pos:start="197:13" pos:end="197:19">oformat</name><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:26">flags</name></name> <operator pos:start="197:28" pos:end="197:28">&amp;</operator> <name pos:start="197:30" pos:end="197:45">AVFMT_NEEDNUMBER</name></expr>)</condition> <block pos:start="197:48" pos:end="207:5">{<block_content pos:start="199:9" pos:end="205:9">

        <if_stmt pos:start="199:9" pos:end="205:9"><if pos:start="199:9" pos:end="205:9">if <condition pos:start="199:12" pos:end="199:51">(<expr pos:start="199:13" pos:end="199:50"><operator pos:start="199:13" pos:end="199:13">!</operator><call pos:start="199:14" pos:end="199:50"><name pos:start="199:14" pos:end="199:36">av_filename_number_test</name><argument_list pos:start="199:37" pos:end="199:50">(<argument pos:start="199:38" pos:end="199:49"><expr pos:start="199:38" pos:end="199:49"><name pos:start="199:38" pos:end="199:49"><name pos:start="199:38" pos:end="199:39">oc</name><operator pos:start="199:40" pos:end="199:41">-&gt;</operator><name pos:start="199:42" pos:end="199:49">filename</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="199:53" pos:end="205:9">{<block_content pos:start="201:13" pos:end="203:27">

            <expr_stmt pos:start="201:13" pos:end="201:59"><expr pos:start="201:13" pos:end="201:58"><call pos:start="201:13" pos:end="201:58"><name pos:start="201:13" pos:end="201:23">print_error</name><argument_list pos:start="201:24" pos:end="201:58">(<argument pos:start="201:25" pos:end="201:36"><expr pos:start="201:25" pos:end="201:36"><name pos:start="201:25" pos:end="201:36"><name pos:start="201:25" pos:end="201:26">oc</name><operator pos:start="201:27" pos:end="201:28">-&gt;</operator><name pos:start="201:29" pos:end="201:36">filename</name></name></expr></argument>, <argument pos:start="201:39" pos:end="201:57"><expr pos:start="201:39" pos:end="201:57"><name pos:start="201:39" pos:end="201:57">AVERROR_NUMEXPECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:27"><expr pos:start="203:13" pos:end="203:26"><call pos:start="203:13" pos:end="203:26"><name pos:start="203:13" pos:end="203:23">ffmpeg_exit</name><argument_list pos:start="203:24" pos:end="203:26">(<argument pos:start="203:25" pos:end="203:25"><expr pos:start="203:25" pos:end="203:25"><literal type="number" pos:start="203:25" pos:end="203:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="211:5" pos:end="265:5"><if pos:start="211:5" pos:end="265:5">if <condition pos:start="211:8" pos:end="211:45">(<expr pos:start="211:9" pos:end="211:44"><operator pos:start="211:9" pos:end="211:9">!</operator><operator pos:start="211:10" pos:end="211:10">(</operator><name pos:start="211:11" pos:end="211:28"><name pos:start="211:11" pos:end="211:12">oc</name><operator pos:start="211:13" pos:end="211:14">-&gt;</operator><name pos:start="211:15" pos:end="211:21">oformat</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:28">flags</name></name> <operator pos:start="211:30" pos:end="211:30">&amp;</operator> <name pos:start="211:32" pos:end="211:43">AVFMT_NOFILE</name><operator pos:start="211:44" pos:end="211:44">)</operator></expr>)</condition> <block pos:start="211:47" pos:end="265:5">{<block_content pos:start="215:9" pos:end="263:9">

        <comment type="block" pos:start="213:9" pos:end="213:71">/* test if it already exists to avoid loosing precious files */</comment>

        <if_stmt pos:start="215:9" pos:end="251:9"><if pos:start="215:9" pos:end="251:9">if <condition pos:start="215:12" pos:end="221:51">(<expr pos:start="215:13" pos:end="221:50"><operator pos:start="215:13" pos:end="215:13">!</operator><name pos:start="215:14" pos:end="215:27">file_overwrite</name> <operator pos:start="215:29" pos:end="215:30">&amp;&amp;</operator>

            <operator pos:start="217:13" pos:end="217:13">(</operator><call pos:start="217:14" pos:end="217:34"><name pos:start="217:14" pos:end="217:19">strchr</name><argument_list pos:start="217:20" pos:end="217:34">(<argument pos:start="217:21" pos:end="217:28"><expr pos:start="217:21" pos:end="217:28"><name pos:start="217:21" pos:end="217:28">filename</name></expr></argument>, <argument pos:start="217:31" pos:end="217:33"><expr pos:start="217:31" pos:end="217:33"><literal type="char" pos:start="217:31" pos:end="217:33">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="217:36" pos:end="217:37">==</operator> <name pos:start="217:39" pos:end="217:42">NULL</name> <operator pos:start="217:44" pos:end="217:45">||</operator>

             <name pos:start="219:14" pos:end="219:24"><name pos:start="219:14" pos:end="219:21">filename</name><index pos:start="219:22" pos:end="219:24">[<expr pos:start="219:23" pos:end="219:23"><literal type="number" pos:start="219:23" pos:end="219:23">1</literal></expr>]</index></name> <operator pos:start="219:26" pos:end="219:27">==</operator> <literal type="char" pos:start="219:29" pos:end="219:31">':'</literal> <operator pos:start="219:33" pos:end="219:34">||</operator>

             <call pos:start="221:14" pos:end="221:49"><name pos:start="221:14" pos:end="221:24">av_strstart</name><argument_list pos:start="221:25" pos:end="221:49">(<argument pos:start="221:26" pos:end="221:33"><expr pos:start="221:26" pos:end="221:33"><name pos:start="221:26" pos:end="221:33">filename</name></expr></argument>, <argument pos:start="221:36" pos:end="221:42"><expr pos:start="221:36" pos:end="221:42"><literal type="string" pos:start="221:36" pos:end="221:42">"file:"</literal></expr></argument>, <argument pos:start="221:45" pos:end="221:48"><expr pos:start="221:45" pos:end="221:48"><name pos:start="221:45" pos:end="221:48">NULL</name></expr></argument>)</argument_list></call><operator pos:start="221:50" pos:end="221:50">)</operator></expr>)</condition> <block pos:start="221:53" pos:end="251:9">{<block_content pos:start="223:13" pos:end="249:13">

            <if_stmt pos:start="223:13" pos:end="249:13"><if pos:start="223:13" pos:end="249:13">if <condition pos:start="223:16" pos:end="223:36">(<expr pos:start="223:17" pos:end="223:35"><call pos:start="223:17" pos:end="223:35"><name pos:start="223:17" pos:end="223:25">url_exist</name><argument_list pos:start="223:26" pos:end="223:35">(<argument pos:start="223:27" pos:end="223:34"><expr pos:start="223:27" pos:end="223:34"><name pos:start="223:27" pos:end="223:34">filename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="223:38" pos:end="249:13">{<block_content pos:start="225:17" pos:end="247:17">

                <if_stmt pos:start="225:17" pos:end="247:17"><if pos:start="225:17" pos:end="239:17">if <condition pos:start="225:20" pos:end="225:33">(<expr pos:start="225:21" pos:end="225:32"><operator pos:start="225:21" pos:end="225:21">!</operator><name pos:start="225:22" pos:end="225:32">using_stdin</name></expr>)</condition> <block pos:start="225:35" pos:end="239:17">{<block_content pos:start="227:21" pos:end="237:21">

                    <expr_stmt pos:start="227:21" pos:end="227:93"><expr pos:start="227:21" pos:end="227:92"><call pos:start="227:21" pos:end="227:92"><name pos:start="227:21" pos:end="227:27">fprintf</name><argument_list pos:start="227:28" pos:end="227:92">(<argument pos:start="227:29" pos:end="227:34"><expr pos:start="227:29" pos:end="227:34"><name pos:start="227:29" pos:end="227:34">stderr</name></expr></argument>,<argument pos:start="227:36" pos:end="227:81"><expr pos:start="227:36" pos:end="227:81"><literal type="string" pos:start="227:36" pos:end="227:81">"File '%s' already exists. Overwrite ? [y/N] "</literal></expr></argument>, <argument pos:start="227:84" pos:end="227:91"><expr pos:start="227:84" pos:end="227:91"><name pos:start="227:84" pos:end="227:91">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="229:21" pos:end="229:35"><expr pos:start="229:21" pos:end="229:34"><call pos:start="229:21" pos:end="229:34"><name pos:start="229:21" pos:end="229:26">fflush</name><argument_list pos:start="229:27" pos:end="229:34">(<argument pos:start="229:28" pos:end="229:33"><expr pos:start="229:28" pos:end="229:33"><name pos:start="229:28" pos:end="229:33">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="231:21" pos:end="237:21"><if pos:start="231:21" pos:end="237:21">if <condition pos:start="231:24" pos:end="231:38">(<expr pos:start="231:25" pos:end="231:37"><operator pos:start="231:25" pos:end="231:25">!</operator><call pos:start="231:26" pos:end="231:37"><name pos:start="231:26" pos:end="231:35">read_yesno</name><argument_list pos:start="231:36" pos:end="231:37">()</argument_list></call></expr>)</condition> <block pos:start="231:40" pos:end="237:21">{<block_content pos:start="233:25" pos:end="235:39">

                        <expr_stmt pos:start="233:25" pos:end="233:71"><expr pos:start="233:25" pos:end="233:70"><call pos:start="233:25" pos:end="233:70"><name pos:start="233:25" pos:end="233:31">fprintf</name><argument_list pos:start="233:32" pos:end="233:70">(<argument pos:start="233:33" pos:end="233:38"><expr pos:start="233:33" pos:end="233:38"><name pos:start="233:33" pos:end="233:38">stderr</name></expr></argument>, <argument pos:start="233:41" pos:end="233:69"><expr pos:start="233:41" pos:end="233:69"><literal type="string" pos:start="233:41" pos:end="233:69">"Not overwriting - exiting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="235:25" pos:end="235:39"><expr pos:start="235:25" pos:end="235:38"><call pos:start="235:25" pos:end="235:38"><name pos:start="235:25" pos:end="235:35">ffmpeg_exit</name><argument_list pos:start="235:36" pos:end="235:38">(<argument pos:start="235:37" pos:end="235:37"><expr pos:start="235:37" pos:end="235:37"><literal type="number" pos:start="235:37" pos:end="235:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if>

                <else pos:start="241:17" pos:end="247:17">else <block pos:start="241:22" pos:end="247:17">{<block_content pos:start="243:21" pos:end="245:35">

                    <expr_stmt pos:start="243:21" pos:end="243:85"><expr pos:start="243:21" pos:end="243:84"><call pos:start="243:21" pos:end="243:84"><name pos:start="243:21" pos:end="243:27">fprintf</name><argument_list pos:start="243:28" pos:end="243:84">(<argument pos:start="243:29" pos:end="243:34"><expr pos:start="243:29" pos:end="243:34"><name pos:start="243:29" pos:end="243:34">stderr</name></expr></argument>,<argument pos:start="243:36" pos:end="243:73"><expr pos:start="243:36" pos:end="243:73"><literal type="string" pos:start="243:36" pos:end="243:73">"File '%s' already exists. Exiting.\n"</literal></expr></argument>, <argument pos:start="243:76" pos:end="243:83"><expr pos:start="243:76" pos:end="243:83"><name pos:start="243:76" pos:end="243:83">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="245:21" pos:end="245:35"><expr pos:start="245:21" pos:end="245:34"><call pos:start="245:21" pos:end="245:34"><name pos:start="245:21" pos:end="245:31">ffmpeg_exit</name><argument_list pos:start="245:32" pos:end="245:34">(<argument pos:start="245:33" pos:end="245:33"><expr pos:start="245:33" pos:end="245:33"><literal type="number" pos:start="245:33" pos:end="245:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="255:9" pos:end="255:27">/* open the file */</comment>

        <if_stmt pos:start="257:9" pos:end="263:9"><if pos:start="257:9" pos:end="263:9">if <condition pos:start="257:12" pos:end="257:65">(<expr pos:start="257:13" pos:end="257:64"><operator pos:start="257:13" pos:end="257:13">(</operator><name pos:start="257:14" pos:end="257:16">err</name> <operator pos:start="257:18" pos:end="257:18">=</operator> <call pos:start="257:20" pos:end="257:59"><name pos:start="257:20" pos:end="257:28">url_fopen</name><argument_list pos:start="257:29" pos:end="257:59">(<argument pos:start="257:30" pos:end="257:36"><expr pos:start="257:30" pos:end="257:36"><operator pos:start="257:30" pos:end="257:30">&amp;</operator><name pos:start="257:31" pos:end="257:36"><name pos:start="257:31" pos:end="257:32">oc</name><operator pos:start="257:33" pos:end="257:34">-&gt;</operator><name pos:start="257:35" pos:end="257:36">pb</name></name></expr></argument>, <argument pos:start="257:39" pos:end="257:46"><expr pos:start="257:39" pos:end="257:46"><name pos:start="257:39" pos:end="257:46">filename</name></expr></argument>, <argument pos:start="257:49" pos:end="257:58"><expr pos:start="257:49" pos:end="257:58"><name pos:start="257:49" pos:end="257:58">URL_WRONLY</name></expr></argument>)</argument_list></call><operator pos:start="257:60" pos:end="257:60">)</operator> <operator pos:start="257:62" pos:end="257:62">&lt;</operator> <literal type="number" pos:start="257:64" pos:end="257:64">0</literal></expr>)</condition> <block pos:start="257:67" pos:end="263:9">{<block_content pos:start="259:13" pos:end="261:27">

            <expr_stmt pos:start="259:13" pos:end="259:39"><expr pos:start="259:13" pos:end="259:38"><call pos:start="259:13" pos:end="259:38"><name pos:start="259:13" pos:end="259:23">print_error</name><argument_list pos:start="259:24" pos:end="259:38">(<argument pos:start="259:25" pos:end="259:32"><expr pos:start="259:25" pos:end="259:32"><name pos:start="259:25" pos:end="259:32">filename</name></expr></argument>, <argument pos:start="259:35" pos:end="259:37"><expr pos:start="259:35" pos:end="259:37"><name pos:start="259:35" pos:end="259:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:27"><expr pos:start="261:13" pos:end="261:26"><call pos:start="261:13" pos:end="261:26"><name pos:start="261:13" pos:end="261:23">ffmpeg_exit</name><argument_list pos:start="261:24" pos:end="261:26">(<argument pos:start="261:25" pos:end="261:25"><expr pos:start="261:25" pos:end="261:25"><literal type="number" pos:start="261:25" pos:end="261:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="269:5" pos:end="269:31"><expr pos:start="269:5" pos:end="269:30"><call pos:start="269:5" pos:end="269:30"><name pos:start="269:5" pos:end="269:10">memset</name><argument_list pos:start="269:11" pos:end="269:30">(<argument pos:start="269:12" pos:end="269:13"><expr pos:start="269:12" pos:end="269:13"><name pos:start="269:12" pos:end="269:13">ap</name></expr></argument>, <argument pos:start="269:16" pos:end="269:16"><expr pos:start="269:16" pos:end="269:16"><literal type="number" pos:start="269:16" pos:end="269:16">0</literal></expr></argument>, <argument pos:start="269:19" pos:end="269:29"><expr pos:start="269:19" pos:end="269:29"><sizeof pos:start="269:19" pos:end="269:29">sizeof<argument_list pos:start="269:25" pos:end="269:29">(<argument pos:start="269:26" pos:end="269:28"><expr pos:start="269:26" pos:end="269:28"><operator pos:start="269:26" pos:end="269:26">*</operator><name pos:start="269:27" pos:end="269:28">ap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="271:5" pos:end="279:5"><if pos:start="271:5" pos:end="279:5">if <condition pos:start="271:8" pos:end="271:38">(<expr pos:start="271:9" pos:end="271:37"><call pos:start="271:9" pos:end="271:33"><name pos:start="271:9" pos:end="271:25">av_set_parameters</name><argument_list pos:start="271:26" pos:end="271:33">(<argument pos:start="271:27" pos:end="271:28"><expr pos:start="271:27" pos:end="271:28"><name pos:start="271:27" pos:end="271:28">oc</name></expr></argument>, <argument pos:start="271:31" pos:end="271:32"><expr pos:start="271:31" pos:end="271:32"><name pos:start="271:31" pos:end="271:32">ap</name></expr></argument>)</argument_list></call> <operator pos:start="271:35" pos:end="271:35">&lt;</operator> <literal type="number" pos:start="271:37" pos:end="271:37">0</literal></expr>)</condition> <block pos:start="271:40" pos:end="279:5">{<block_content pos:start="273:9" pos:end="277:23">

        <expr_stmt pos:start="273:9" pos:end="275:30"><expr pos:start="273:9" pos:end="275:29"><call pos:start="273:9" pos:end="275:29"><name pos:start="273:9" pos:end="273:15">fprintf</name><argument_list pos:start="273:16" pos:end="275:29">(<argument pos:start="273:17" pos:end="273:22"><expr pos:start="273:17" pos:end="273:22"><name pos:start="273:17" pos:end="273:22">stderr</name></expr></argument>, <argument pos:start="273:25" pos:end="273:59"><expr pos:start="273:25" pos:end="273:59"><literal type="string" pos:start="273:25" pos:end="273:59">"%s: Invalid encoding parameters\n"</literal></expr></argument>,

                <argument pos:start="275:17" pos:end="275:28"><expr pos:start="275:17" pos:end="275:28"><name pos:start="275:17" pos:end="275:28"><name pos:start="275:17" pos:end="275:18">oc</name><operator pos:start="275:19" pos:end="275:20">-&gt;</operator><name pos:start="275:21" pos:end="275:28">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:23"><expr pos:start="277:9" pos:end="277:22"><call pos:start="277:9" pos:end="277:22"><name pos:start="277:9" pos:end="277:19">ffmpeg_exit</name><argument_list pos:start="277:20" pos:end="277:22">(<argument pos:start="277:21" pos:end="277:21"><expr pos:start="277:21" pos:end="277:21"><literal type="number" pos:start="277:21" pos:end="277:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="283:5" pos:end="283:49"><expr pos:start="283:5" pos:end="283:48"><name pos:start="283:5" pos:end="283:15"><name pos:start="283:5" pos:end="283:6">oc</name><operator pos:start="283:7" pos:end="283:8">-&gt;</operator><name pos:start="283:9" pos:end="283:15">preload</name></name><operator pos:start="283:16" pos:end="283:16">=</operator> <operator pos:start="283:18" pos:end="283:18">(</operator><name pos:start="283:19" pos:end="283:21">int</name><operator pos:start="283:22" pos:end="283:22">)</operator><operator pos:start="283:23" pos:end="283:23">(</operator><name pos:start="283:24" pos:end="283:34">mux_preload</name><operator pos:start="283:35" pos:end="283:35">*</operator><name pos:start="283:36" pos:end="283:47">AV_TIME_BASE</name><operator pos:start="283:48" pos:end="283:48">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:53"><expr pos:start="285:5" pos:end="285:52"><name pos:start="285:5" pos:end="285:17"><name pos:start="285:5" pos:end="285:6">oc</name><operator pos:start="285:7" pos:end="285:8">-&gt;</operator><name pos:start="285:9" pos:end="285:17">max_delay</name></name><operator pos:start="285:18" pos:end="285:18">=</operator> <operator pos:start="285:20" pos:end="285:20">(</operator><name pos:start="285:21" pos:end="285:23">int</name><operator pos:start="285:24" pos:end="285:24">)</operator><operator pos:start="285:25" pos:end="285:25">(</operator><name pos:start="285:26" pos:end="285:38">mux_max_delay</name><operator pos:start="285:39" pos:end="285:39">*</operator><name pos:start="285:40" pos:end="285:51">AV_TIME_BASE</name><operator pos:start="285:52" pos:end="285:52">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:34"><expr pos:start="287:5" pos:end="287:33"><name pos:start="287:5" pos:end="287:19"><name pos:start="287:5" pos:end="287:6">oc</name><operator pos:start="287:7" pos:end="287:8">-&gt;</operator><name pos:start="287:9" pos:end="287:19">loop_output</name></name> <operator pos:start="287:21" pos:end="287:21">=</operator> <name pos:start="287:23" pos:end="287:33">loop_output</name></expr>;</expr_stmt>

    <expr_stmt pos:start="289:5" pos:end="289:37"><expr pos:start="289:5" pos:end="289:36"><name pos:start="289:5" pos:end="289:13"><name pos:start="289:5" pos:end="289:6">oc</name><operator pos:start="289:7" pos:end="289:8">-&gt;</operator><name pos:start="289:9" pos:end="289:13">flags</name></name> <operator pos:start="289:15" pos:end="289:16">|=</operator> <name pos:start="289:18" pos:end="289:36">AVFMT_FLAG_NONBLOCK</name></expr>;</expr_stmt>



    <expr_stmt pos:start="293:5" pos:end="293:74"><expr pos:start="293:5" pos:end="293:73"><call pos:start="293:5" pos:end="293:73"><name pos:start="293:5" pos:end="293:20">set_context_opts</name><argument_list pos:start="293:21" pos:end="293:73">(<argument pos:start="293:22" pos:end="293:23"><expr pos:start="293:22" pos:end="293:23"><name pos:start="293:22" pos:end="293:23">oc</name></expr></argument>, <argument pos:start="293:26" pos:end="293:38"><expr pos:start="293:26" pos:end="293:38"><name pos:start="293:26" pos:end="293:38">avformat_opts</name></expr></argument>, <argument pos:start="293:41" pos:end="293:66"><expr pos:start="293:41" pos:end="293:66"><name pos:start="293:41" pos:end="293:66">AV_OPT_FLAG_ENCODING_PARAM</name></expr></argument>, <argument pos:start="293:69" pos:end="293:72"><expr pos:start="293:69" pos:end="293:72"><name pos:start="293:69" pos:end="293:72">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="297:5" pos:end="297:24"><expr pos:start="297:5" pos:end="297:23"><name pos:start="297:5" pos:end="297:19">nb_streamid_map</name> <operator pos:start="297:21" pos:end="297:21">=</operator> <literal type="number" pos:start="297:23" pos:end="297:23">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
