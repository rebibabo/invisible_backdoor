<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/711.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">kvm_arch_remove_sw_breakpoint</name><parameter_list pos:start="1:34" pos:end="1:77">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:42">CPUState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">cs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:76"><decl pos:start="1:49" pos:end="1:76"><type pos:start="1:49" pos:end="1:76"><name pos:start="1:49" pos:end="1:72"><name pos:start="1:49" pos:end="1:54">struct</name> <name pos:start="1:56" pos:end="1:72">kvm_sw_breakpoint</name></name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:76">bp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:31"><name pos:start="5:13" pos:end="5:13">t</name><index pos:start="5:14" pos:end="5:31">[<expr pos:start="5:15" pos:end="5:30"><sizeof pos:start="5:15" pos:end="5:30">sizeof<argument_list pos:start="5:21" pos:end="5:30">(<argument pos:start="5:22" pos:end="5:29"><expr pos:start="5:22" pos:end="5:29"><name pos:start="5:22" pos:end="5:29">diag_501</name></expr></argument>)</argument_list></sizeof></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="23:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:64">(<expr pos:start="9:9" pos:end="9:63"><call pos:start="9:9" pos:end="9:63"><name pos:start="9:9" pos:end="9:27">cpu_memory_rw_debug</name><argument_list pos:start="9:28" pos:end="9:63">(<argument pos:start="9:29" pos:end="9:30"><expr pos:start="9:29" pos:end="9:30"><name pos:start="9:29" pos:end="9:30">cs</name></expr></argument>, <argument pos:start="9:33" pos:end="9:38"><expr pos:start="9:33" pos:end="9:38"><name pos:start="9:33" pos:end="9:38"><name pos:start="9:33" pos:end="9:34">bp</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:38">pc</name></name></expr></argument>, <argument pos:start="9:41" pos:end="9:41"><expr pos:start="9:41" pos:end="9:41"><name pos:start="9:41" pos:end="9:41">t</name></expr></argument>, <argument pos:start="9:44" pos:end="9:59"><expr pos:start="9:44" pos:end="9:59"><sizeof pos:start="9:44" pos:end="9:59">sizeof<argument_list pos:start="9:50" pos:end="9:59">(<argument pos:start="9:51" pos:end="9:58"><expr pos:start="9:51" pos:end="9:58"><name pos:start="9:51" pos:end="9:58">diag_501</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="9:62" pos:end="9:62"><expr pos:start="9:62" pos:end="9:62"><literal type="number" pos:start="9:62" pos:end="9:62">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:66" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:23">

        <return pos:start="11:9" pos:end="11:23">return <expr pos:start="11:16" pos:end="11:22"><operator pos:start="11:16" pos:end="11:16">-</operator><name pos:start="11:17" pos:end="11:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="13:7" pos:end="17:5">else if <condition pos:start="13:15" pos:end="13:53">(<expr pos:start="13:16" pos:end="13:52"><call pos:start="13:16" pos:end="13:52"><name pos:start="13:16" pos:end="13:21">memcmp</name><argument_list pos:start="13:22" pos:end="13:52">(<argument pos:start="13:23" pos:end="13:23"><expr pos:start="13:23" pos:end="13:23"><name pos:start="13:23" pos:end="13:23">t</name></expr></argument>, <argument pos:start="13:26" pos:end="13:33"><expr pos:start="13:26" pos:end="13:33"><name pos:start="13:26" pos:end="13:33">diag_501</name></expr></argument>, <argument pos:start="13:36" pos:end="13:51"><expr pos:start="13:36" pos:end="13:51"><sizeof pos:start="13:36" pos:end="13:51">sizeof<argument_list pos:start="13:42" pos:end="13:51">(<argument pos:start="13:43" pos:end="13:50"><expr pos:start="13:43" pos:end="13:50"><name pos:start="13:43" pos:end="13:50">diag_501</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:55" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:23">

        <return pos:start="15:9" pos:end="15:23">return <expr pos:start="15:16" pos:end="15:22"><operator pos:start="15:16" pos:end="15:16">-</operator><name pos:start="15:17" pos:end="15:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="23:5">else if <condition pos:start="17:15" pos:end="19:56">(<expr pos:start="17:16" pos:end="19:55"><call pos:start="17:16" pos:end="19:55"><name pos:start="17:16" pos:end="17:34">cpu_memory_rw_debug</name><argument_list pos:start="17:35" pos:end="19:55">(<argument pos:start="17:36" pos:end="17:37"><expr pos:start="17:36" pos:end="17:37"><name pos:start="17:36" pos:end="17:37">cs</name></expr></argument>, <argument pos:start="17:40" pos:end="17:45"><expr pos:start="17:40" pos:end="17:45"><name pos:start="17:40" pos:end="17:45"><name pos:start="17:40" pos:end="17:41">bp</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:45">pc</name></name></expr></argument>, <argument pos:start="17:48" pos:end="17:73"><expr pos:start="17:48" pos:end="17:73"><operator pos:start="17:48" pos:end="17:48">(</operator><name pos:start="17:49" pos:end="17:55">uint8_t</name> <operator pos:start="17:57" pos:end="17:57">*</operator><operator pos:start="17:58" pos:end="17:58">)</operator><operator pos:start="17:59" pos:end="17:59">&amp;</operator><name pos:start="17:60" pos:end="17:73"><name pos:start="17:60" pos:end="17:61">bp</name><operator pos:start="17:62" pos:end="17:63">-&gt;</operator><name pos:start="17:64" pos:end="17:73">saved_insn</name></name></expr></argument>,

                                   <argument pos:start="19:36" pos:end="19:51"><expr pos:start="19:36" pos:end="19:51"><sizeof pos:start="19:36" pos:end="19:51">sizeof<argument_list pos:start="19:42" pos:end="19:51">(<argument pos:start="19:43" pos:end="19:50"><expr pos:start="19:43" pos:end="19:50"><name pos:start="19:43" pos:end="19:50">diag_501</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="19:54" pos:end="19:54"><expr pos:start="19:54" pos:end="19:54"><literal type="number" pos:start="19:54" pos:end="19:54">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:58" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:23">

        <return pos:start="21:9" pos:end="21:23">return <expr pos:start="21:16" pos:end="21:22"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
