<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7667.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:46">mpeg2_decode_block_non_intra</name><parameter_list pos:start="1:47" pos:end="1:88">(<parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:61">MpegEncContext</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:64">s</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:80"><decl pos:start="1:67" pos:end="1:80"><type pos:start="1:67" pos:end="1:80"><name pos:start="1:67" pos:end="1:73">int16_t</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:80">block</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:87"><decl pos:start="1:83" pos:end="1:87"><type pos:start="1:83" pos:end="1:87"><name pos:start="1:83" pos:end="1:85">int</name></type> <name pos:start="1:87" pos:end="1:87">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:13">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">level</name></decl>, <decl pos:start="5:16" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:16">i</name></decl>, <decl pos:start="5:19" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:19">j</name></decl>, <decl pos:start="5:22" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:22" pos:end="5:24">run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">RLTable</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:15">rl</name> <init pos:start="7:17" pos:end="7:30">= <expr pos:start="7:19" pos:end="7:30"><operator pos:start="7:19" pos:end="7:19">&amp;</operator><name pos:start="7:20" pos:end="7:30">ff_rl_mpeg1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:62"><decl pos:start="9:5" pos:end="9:61"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier> <specifier pos:start="9:15" pos:end="9:19">const</specifier></type> <name pos:start="9:21" pos:end="9:29">scantable</name> <init pos:start="9:31" pos:end="9:61">= <expr pos:start="9:33" pos:end="9:61"><name pos:start="9:33" pos:end="9:61"><name pos:start="9:33" pos:end="9:33">s</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:50">intra_scantable</name><operator pos:start="9:51" pos:end="9:51">.</operator><name pos:start="9:52" pos:end="9:61">permutated</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:20"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">uint16_t</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:32">quant_matrix</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:20">qscale</name> <init pos:start="13:22" pos:end="13:32">= <expr pos:start="13:24" pos:end="13:32"><name pos:start="13:24" pos:end="13:32"><name pos:start="13:24" pos:end="13:24">s</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:32">qscale</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">mismatch</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12">mismatch</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <literal type="number" pos:start="19:16" pos:end="19:16">1</literal></expr>;</expr_stmt>



    <block pos:start="23:5" pos:end="145:5">{<block_content pos:start="25:9" pos:end="143:33">

        <expr_stmt pos:start="25:9" pos:end="25:32"><expr pos:start="25:9" pos:end="25:31"><call pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:19">OPEN_READER</name><argument_list pos:start="25:20" pos:end="25:31">(<argument pos:start="25:21" pos:end="25:22"><expr pos:start="25:21" pos:end="25:22"><name pos:start="25:21" pos:end="25:22">re</name></expr></argument>, <argument pos:start="25:25" pos:end="25:30"><expr pos:start="25:25" pos:end="25:30"><operator pos:start="25:25" pos:end="25:25">&amp;</operator><name pos:start="25:26" pos:end="25:30"><name pos:start="25:26" pos:end="25:26">s</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:30">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:15"><expr pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:9">i</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <operator pos:start="27:13" pos:end="27:13">-</operator><literal type="number" pos:start="27:14" pos:end="27:14">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:50"><if pos:start="29:9" pos:end="31:43">if <condition pos:start="29:12" pos:end="29:18">(<expr pos:start="29:13" pos:end="29:17"><name pos:start="29:13" pos:end="29:13">n</name> <operator pos:start="29:15" pos:end="29:15">&lt;</operator> <literal type="number" pos:start="29:17" pos:end="29:17">4</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:43"><block_content pos:start="31:13" pos:end="31:43">

            <expr_stmt pos:start="31:13" pos:end="31:43"><expr pos:start="31:13" pos:end="31:42"><name pos:start="31:13" pos:end="31:24">quant_matrix</name> <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:42"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:42">inter_matrix</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="33:9" pos:end="35:50">else<block type="pseudo" pos:start="35:13" pos:end="35:50"><block_content pos:start="35:13" pos:end="35:50">

            <expr_stmt pos:start="35:13" pos:end="35:50"><expr pos:start="35:13" pos:end="35:49"><name pos:start="35:13" pos:end="35:24">quant_matrix</name> <operator pos:start="35:26" pos:end="35:26">=</operator> <name pos:start="35:28" pos:end="35:49"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:49">chroma_inter_matrix</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <comment type="line" pos:start="39:9" pos:end="39:78">// special case for first coefficient, no need to add second VLC table</comment>

        <expr_stmt pos:start="41:9" pos:end="41:33"><expr pos:start="41:9" pos:end="41:32"><call pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:20">UPDATE_CACHE</name><argument_list pos:start="41:21" pos:end="41:32">(<argument pos:start="41:22" pos:end="41:23"><expr pos:start="41:22" pos:end="41:23"><name pos:start="41:22" pos:end="41:23">re</name></expr></argument>, <argument pos:start="41:26" pos:end="41:31"><expr pos:start="41:26" pos:end="41:31"><operator pos:start="41:26" pos:end="41:26">&amp;</operator><name pos:start="41:27" pos:end="41:31"><name pos:start="41:27" pos:end="41:27">s</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="63:9"><if pos:start="43:9" pos:end="63:9">if <condition pos:start="43:12" pos:end="43:49">(<expr pos:start="43:13" pos:end="43:48"><operator pos:start="43:13" pos:end="43:13">(</operator><operator pos:start="43:14" pos:end="43:14">(</operator><name pos:start="43:15" pos:end="43:21">int32_t</name><operator pos:start="43:22" pos:end="43:22">)</operator><call pos:start="43:23" pos:end="43:43"><name pos:start="43:23" pos:end="43:31">GET_CACHE</name><argument_list pos:start="43:32" pos:end="43:43">(<argument pos:start="43:33" pos:end="43:34"><expr pos:start="43:33" pos:end="43:34"><name pos:start="43:33" pos:end="43:34">re</name></expr></argument>, <argument pos:start="43:37" pos:end="43:42"><expr pos:start="43:37" pos:end="43:42"><operator pos:start="43:37" pos:end="43:37">&amp;</operator><name pos:start="43:38" pos:end="43:42"><name pos:start="43:38" pos:end="43:38">s</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:42">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="43:44" pos:end="43:44">)</operator> <operator pos:start="43:46" pos:end="43:46">&lt;</operator> <literal type="number" pos:start="43:48" pos:end="43:48">0</literal></expr>)</condition> <block pos:start="43:51" pos:end="63:9">{<block_content pos:start="45:13" pos:end="61:25">

            <expr_stmt pos:start="45:13" pos:end="45:55"><expr pos:start="45:13" pos:end="45:54"><name pos:start="45:13" pos:end="45:17">level</name><operator pos:start="45:18" pos:end="45:18">=</operator> <operator pos:start="45:20" pos:end="45:20">(</operator><literal type="number" pos:start="45:21" pos:end="45:21">3</literal> <operator pos:start="45:23" pos:end="45:23">*</operator> <name pos:start="45:25" pos:end="45:30">qscale</name> <operator pos:start="45:32" pos:end="45:32">*</operator> <name pos:start="45:34" pos:end="45:48"><name pos:start="45:34" pos:end="45:45">quant_matrix</name><index pos:start="45:46" pos:end="45:48">[<expr pos:start="45:47" pos:end="45:47"><literal type="number" pos:start="45:47" pos:end="45:47">0</literal></expr>]</index></name><operator pos:start="45:49" pos:end="45:49">)</operator> <operator pos:start="45:51" pos:end="45:52">&gt;&gt;</operator> <literal type="number" pos:start="45:54" pos:end="45:54">5</literal></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="49:31"><if pos:start="47:13" pos:end="49:31">if <condition pos:start="47:16" pos:end="47:51">(<expr pos:start="47:17" pos:end="47:50"><call pos:start="47:17" pos:end="47:37"><name pos:start="47:17" pos:end="47:25">GET_CACHE</name><argument_list pos:start="47:26" pos:end="47:37">(<argument pos:start="47:27" pos:end="47:28"><expr pos:start="47:27" pos:end="47:28"><name pos:start="47:27" pos:end="47:28">re</name></expr></argument>, <argument pos:start="47:31" pos:end="47:36"><expr pos:start="47:31" pos:end="47:36"><operator pos:start="47:31" pos:end="47:31">&amp;</operator><name pos:start="47:32" pos:end="47:36"><name pos:start="47:32" pos:end="47:32">s</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:36">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="47:39" pos:end="47:39">&amp;</operator> <literal type="number" pos:start="47:41" pos:end="47:50">0x40000000</literal></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:31"><block_content pos:start="49:17" pos:end="49:31">

                <expr_stmt pos:start="49:17" pos:end="49:31"><expr pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:21">level</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <operator pos:start="49:25" pos:end="49:25">-</operator><name pos:start="49:26" pos:end="49:30">level</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:30"><expr pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:17">block</name><index pos:start="51:18" pos:end="51:20">[<expr pos:start="51:19" pos:end="51:19"><literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>]</index></name>  <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:29">level</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:30"><expr pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:20">mismatch</name> <operator pos:start="53:22" pos:end="53:23">^=</operator> <name pos:start="53:25" pos:end="53:29">level</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:16"><expr pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:13">i</name><operator pos:start="55:14" pos:end="55:15">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:37"><expr pos:start="57:13" pos:end="57:36"><call pos:start="57:13" pos:end="57:36"><name pos:start="57:13" pos:end="57:21">SKIP_BITS</name><argument_list pos:start="57:22" pos:end="57:36">(<argument pos:start="57:23" pos:end="57:24"><expr pos:start="57:23" pos:end="57:24"><name pos:start="57:23" pos:end="57:24">re</name></expr></argument>, <argument pos:start="57:27" pos:end="57:32"><expr pos:start="57:27" pos:end="57:32"><operator pos:start="57:27" pos:end="57:27">&amp;</operator><name pos:start="57:28" pos:end="57:32"><name pos:start="57:28" pos:end="57:28">s</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:32">gb</name></name></expr></argument>, <argument pos:start="57:35" pos:end="57:35"><expr pos:start="57:35" pos:end="57:35"><literal type="number" pos:start="57:35" pos:end="57:35">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="61:25"><if pos:start="59:13" pos:end="61:25">if <condition pos:start="59:16" pos:end="59:72">(<expr pos:start="59:17" pos:end="59:71"><operator pos:start="59:17" pos:end="59:17">(</operator><operator pos:start="59:18" pos:end="59:18">(</operator><name pos:start="59:19" pos:end="59:25">int32_t</name><operator pos:start="59:26" pos:end="59:26">)</operator><call pos:start="59:27" pos:end="59:47"><name pos:start="59:27" pos:end="59:35">GET_CACHE</name><argument_list pos:start="59:36" pos:end="59:47">(<argument pos:start="59:37" pos:end="59:38"><expr pos:start="59:37" pos:end="59:38"><name pos:start="59:37" pos:end="59:38">re</name></expr></argument>, <argument pos:start="59:41" pos:end="59:46"><expr pos:start="59:41" pos:end="59:46"><operator pos:start="59:41" pos:end="59:41">&amp;</operator><name pos:start="59:42" pos:end="59:46"><name pos:start="59:42" pos:end="59:42">s</name><operator pos:start="59:43" pos:end="59:44">-&gt;</operator><name pos:start="59:45" pos:end="59:46">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="59:48" pos:end="59:48">)</operator> <operator pos:start="59:50" pos:end="59:51">&lt;=</operator> <operator pos:start="59:53" pos:end="59:53">(</operator><name pos:start="59:54" pos:end="59:60">int32_t</name><operator pos:start="59:61" pos:end="59:61">)</operator><literal type="number" pos:start="59:62" pos:end="59:71">0xBFFFFFFF</literal></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:25"><block_content pos:start="61:17" pos:end="61:25">

                <goto pos:start="61:17" pos:end="61:25">goto <name pos:start="61:22" pos:end="61:24">end</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="67:9" pos:end="67:51">/* now quantify &amp; encode AC coefficients */</comment>

        <for pos:start="69:9" pos:end="137:9">for <control pos:start="69:13" pos:end="69:16">(<init pos:start="69:14" pos:end="69:14">;</init><condition pos:start="69:15" pos:end="69:15">;</condition><incr/>)</control> <block pos:start="69:18" pos:end="137:9">{<block_content pos:start="71:13" pos:end="135:37">

            <expr_stmt pos:start="71:13" pos:end="71:82"><expr pos:start="71:13" pos:end="71:81"><call pos:start="71:13" pos:end="71:81"><name pos:start="71:13" pos:end="71:22">GET_RL_VLC</name><argument_list pos:start="71:23" pos:end="71:81">(<argument pos:start="71:24" pos:end="71:28"><expr pos:start="71:24" pos:end="71:28"><name pos:start="71:24" pos:end="71:28">level</name></expr></argument>, <argument pos:start="71:31" pos:end="71:33"><expr pos:start="71:31" pos:end="71:33"><name pos:start="71:31" pos:end="71:33">run</name></expr></argument>, <argument pos:start="71:36" pos:end="71:37"><expr pos:start="71:36" pos:end="71:37"><name pos:start="71:36" pos:end="71:37">re</name></expr></argument>, <argument pos:start="71:40" pos:end="71:45"><expr pos:start="71:40" pos:end="71:45"><operator pos:start="71:40" pos:end="71:40">&amp;</operator><name pos:start="71:41" pos:end="71:45"><name pos:start="71:41" pos:end="71:41">s</name><operator pos:start="71:42" pos:end="71:43">-&gt;</operator><name pos:start="71:44" pos:end="71:45">gb</name></name></expr></argument>, <argument pos:start="71:48" pos:end="71:60"><expr pos:start="71:48" pos:end="71:60"><name pos:start="71:48" pos:end="71:60"><name pos:start="71:48" pos:end="71:49">rl</name><operator pos:start="71:50" pos:end="71:51">-&gt;</operator><name pos:start="71:52" pos:end="71:57">rl_vlc</name><index pos:start="71:58" pos:end="71:60">[<expr pos:start="71:59" pos:end="71:59"><literal type="number" pos:start="71:59" pos:end="71:59">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="71:63" pos:end="71:74"><expr pos:start="71:63" pos:end="71:74"><name pos:start="71:63" pos:end="71:74">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="71:77" pos:end="71:77"><expr pos:start="71:77" pos:end="71:77"><literal type="number" pos:start="71:77" pos:end="71:77">2</literal></expr></argument>, <argument pos:start="71:80" pos:end="71:80"><expr pos:start="71:80" pos:end="71:80"><literal type="number" pos:start="71:80" pos:end="71:80">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="75:13" pos:end="115:13"><if pos:start="75:13" pos:end="87:13">if <condition pos:start="75:16" pos:end="75:27">(<expr pos:start="75:17" pos:end="75:26"><name pos:start="75:17" pos:end="75:21">level</name> <operator pos:start="75:23" pos:end="75:24">!=</operator> <literal type="number" pos:start="75:26" pos:end="75:26">0</literal></expr>)</condition> <block pos:start="75:29" pos:end="87:13">{<block_content pos:start="77:17" pos:end="85:41">

                <expr_stmt pos:start="77:17" pos:end="77:25"><expr pos:start="77:17" pos:end="77:24"><name pos:start="77:17" pos:end="77:17">i</name> <operator pos:start="77:19" pos:end="77:20">+=</operator> <name pos:start="77:22" pos:end="77:24">run</name></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:33"><expr pos:start="79:17" pos:end="79:32"><name pos:start="79:17" pos:end="79:17">j</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <name pos:start="79:21" pos:end="79:32"><name pos:start="79:21" pos:end="79:29">scantable</name><index pos:start="79:30" pos:end="79:32">[<expr pos:start="79:31" pos:end="79:31"><name pos:start="79:31" pos:end="79:31">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:74"><expr pos:start="81:17" pos:end="81:73"><name pos:start="81:17" pos:end="81:21">level</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <operator pos:start="81:25" pos:end="81:25">(</operator><operator pos:start="81:26" pos:end="81:26">(</operator><name pos:start="81:27" pos:end="81:31">level</name> <operator pos:start="81:33" pos:end="81:33">*</operator> <literal type="number" pos:start="81:35" pos:end="81:37">2</literal> <operator pos:start="81:37" pos:end="81:37">+</operator> <literal type="number" pos:start="81:39" pos:end="81:39">1</literal><operator pos:start="81:40" pos:end="81:40">)</operator> <operator pos:start="81:42" pos:end="81:42">*</operator> <name pos:start="81:44" pos:end="81:49">qscale</name> <operator pos:start="81:51" pos:end="81:51">*</operator> <name pos:start="81:53" pos:end="81:67"><name pos:start="81:53" pos:end="81:64">quant_matrix</name><index pos:start="81:65" pos:end="81:67">[<expr pos:start="81:66" pos:end="81:66"><name pos:start="81:66" pos:end="81:66">j</name></expr>]</index></name><operator pos:start="81:68" pos:end="81:68">)</operator> <operator pos:start="81:70" pos:end="81:71">&gt;&gt;</operator> <literal type="number" pos:start="81:73" pos:end="81:73">5</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:88"><expr pos:start="83:17" pos:end="83:87"><name pos:start="83:17" pos:end="83:21">level</name> <operator pos:start="83:23" pos:end="83:23">=</operator> <operator pos:start="83:25" pos:end="83:25">(</operator><name pos:start="83:26" pos:end="83:30">level</name> <operator pos:start="83:32" pos:end="83:32">^</operator> <call pos:start="83:34" pos:end="83:58"><name pos:start="83:34" pos:end="83:43">SHOW_SBITS</name><argument_list pos:start="83:44" pos:end="83:58">(<argument pos:start="83:45" pos:end="83:46"><expr pos:start="83:45" pos:end="83:46"><name pos:start="83:45" pos:end="83:46">re</name></expr></argument>, <argument pos:start="83:49" pos:end="83:54"><expr pos:start="83:49" pos:end="83:54"><operator pos:start="83:49" pos:end="83:49">&amp;</operator><name pos:start="83:50" pos:end="83:54"><name pos:start="83:50" pos:end="83:50">s</name><operator pos:start="83:51" pos:end="83:52">-&gt;</operator><name pos:start="83:53" pos:end="83:54">gb</name></name></expr></argument>, <argument pos:start="83:57" pos:end="83:57"><expr pos:start="83:57" pos:end="83:57"><literal type="number" pos:start="83:57" pos:end="83:57">1</literal></expr></argument>)</argument_list></call><operator pos:start="83:59" pos:end="83:59">)</operator> <operator pos:start="83:61" pos:end="83:61">-</operator> <call pos:start="83:63" pos:end="83:87"><name pos:start="83:63" pos:end="83:72">SHOW_SBITS</name><argument_list pos:start="83:73" pos:end="83:87">(<argument pos:start="83:74" pos:end="83:75"><expr pos:start="83:74" pos:end="83:75"><name pos:start="83:74" pos:end="83:75">re</name></expr></argument>, <argument pos:start="83:78" pos:end="83:83"><expr pos:start="83:78" pos:end="83:83"><operator pos:start="83:78" pos:end="83:78">&amp;</operator><name pos:start="83:79" pos:end="83:83"><name pos:start="83:79" pos:end="83:79">s</name><operator pos:start="83:80" pos:end="83:81">-&gt;</operator><name pos:start="83:82" pos:end="83:83">gb</name></name></expr></argument>, <argument pos:start="83:86" pos:end="83:86"><expr pos:start="83:86" pos:end="83:86"><literal type="number" pos:start="83:86" pos:end="83:86">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:41"><expr pos:start="85:17" pos:end="85:40"><call pos:start="85:17" pos:end="85:40"><name pos:start="85:17" pos:end="85:25">SKIP_BITS</name><argument_list pos:start="85:26" pos:end="85:40">(<argument pos:start="85:27" pos:end="85:28"><expr pos:start="85:27" pos:end="85:28"><name pos:start="85:27" pos:end="85:28">re</name></expr></argument>, <argument pos:start="85:31" pos:end="85:36"><expr pos:start="85:31" pos:end="85:36"><operator pos:start="85:31" pos:end="85:31">&amp;</operator><name pos:start="85:32" pos:end="85:36"><name pos:start="85:32" pos:end="85:32">s</name><operator pos:start="85:33" pos:end="85:34">-&gt;</operator><name pos:start="85:35" pos:end="85:36">gb</name></name></expr></argument>, <argument pos:start="85:39" pos:end="85:39"><expr pos:start="85:39" pos:end="85:39"><literal type="number" pos:start="85:39" pos:end="85:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="87:15" pos:end="115:13">else <block pos:start="87:20" pos:end="115:13">{<block_content pos:start="91:17" pos:end="113:17">

                <comment type="block" pos:start="89:17" pos:end="89:28">/* escape */</comment>

                <expr_stmt pos:start="91:17" pos:end="91:52"><expr pos:start="91:17" pos:end="91:51"><name pos:start="91:17" pos:end="91:19">run</name> <operator pos:start="91:21" pos:end="91:21">=</operator> <call pos:start="91:23" pos:end="91:47"><name pos:start="91:23" pos:end="91:32">SHOW_UBITS</name><argument_list pos:start="91:33" pos:end="91:47">(<argument pos:start="91:34" pos:end="91:35"><expr pos:start="91:34" pos:end="91:35"><name pos:start="91:34" pos:end="91:35">re</name></expr></argument>, <argument pos:start="91:38" pos:end="91:43"><expr pos:start="91:38" pos:end="91:43"><operator pos:start="91:38" pos:end="91:38">&amp;</operator><name pos:start="91:39" pos:end="91:43"><name pos:start="91:39" pos:end="91:39">s</name><operator pos:start="91:40" pos:end="91:41">-&gt;</operator><name pos:start="91:42" pos:end="91:43">gb</name></name></expr></argument>, <argument pos:start="91:46" pos:end="91:46"><expr pos:start="91:46" pos:end="91:46"><literal type="number" pos:start="91:46" pos:end="91:46">6</literal></expr></argument>)</argument_list></call> <operator pos:start="91:49" pos:end="91:49">+</operator> <literal type="number" pos:start="91:51" pos:end="91:51">1</literal></expr>;</expr_stmt> <expr_stmt pos:start="91:54" pos:end="91:83"><expr pos:start="91:54" pos:end="91:82"><call pos:start="91:54" pos:end="91:82"><name pos:start="91:54" pos:end="91:67">LAST_SKIP_BITS</name><argument_list pos:start="91:68" pos:end="91:82">(<argument pos:start="91:69" pos:end="91:70"><expr pos:start="91:69" pos:end="91:70"><name pos:start="91:69" pos:end="91:70">re</name></expr></argument>, <argument pos:start="91:73" pos:end="91:78"><expr pos:start="91:73" pos:end="91:78"><operator pos:start="91:73" pos:end="91:73">&amp;</operator><name pos:start="91:74" pos:end="91:78"><name pos:start="91:74" pos:end="91:74">s</name><operator pos:start="91:75" pos:end="91:76">-&gt;</operator><name pos:start="91:77" pos:end="91:78">gb</name></name></expr></argument>, <argument pos:start="91:81" pos:end="91:81"><expr pos:start="91:81" pos:end="91:81"><literal type="number" pos:start="91:81" pos:end="91:81">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:41"><expr pos:start="93:17" pos:end="93:40"><call pos:start="93:17" pos:end="93:40"><name pos:start="93:17" pos:end="93:28">UPDATE_CACHE</name><argument_list pos:start="93:29" pos:end="93:40">(<argument pos:start="93:30" pos:end="93:31"><expr pos:start="93:30" pos:end="93:31"><name pos:start="93:30" pos:end="93:31">re</name></expr></argument>, <argument pos:start="93:34" pos:end="93:39"><expr pos:start="93:34" pos:end="93:39"><operator pos:start="93:34" pos:end="93:34">&amp;</operator><name pos:start="93:35" pos:end="93:39"><name pos:start="93:35" pos:end="93:35">s</name><operator pos:start="93:36" pos:end="93:37">-&gt;</operator><name pos:start="93:38" pos:end="93:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:51"><expr pos:start="95:17" pos:end="95:50"><name pos:start="95:17" pos:end="95:21">level</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <call pos:start="95:25" pos:end="95:50"><name pos:start="95:25" pos:end="95:34">SHOW_SBITS</name><argument_list pos:start="95:35" pos:end="95:50">(<argument pos:start="95:36" pos:end="95:37"><expr pos:start="95:36" pos:end="95:37"><name pos:start="95:36" pos:end="95:37">re</name></expr></argument>, <argument pos:start="95:40" pos:end="95:45"><expr pos:start="95:40" pos:end="95:45"><operator pos:start="95:40" pos:end="95:40">&amp;</operator><name pos:start="95:41" pos:end="95:45"><name pos:start="95:41" pos:end="95:41">s</name><operator pos:start="95:42" pos:end="95:43">-&gt;</operator><name pos:start="95:44" pos:end="95:45">gb</name></name></expr></argument>, <argument pos:start="95:48" pos:end="95:49"><expr pos:start="95:48" pos:end="95:49"><literal type="number" pos:start="95:48" pos:end="95:49">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="95:53" pos:end="95:78"><expr pos:start="95:53" pos:end="95:77"><call pos:start="95:53" pos:end="95:77"><name pos:start="95:53" pos:end="95:61">SKIP_BITS</name><argument_list pos:start="95:62" pos:end="95:77">(<argument pos:start="95:63" pos:end="95:64"><expr pos:start="95:63" pos:end="95:64"><name pos:start="95:63" pos:end="95:64">re</name></expr></argument>, <argument pos:start="95:67" pos:end="95:72"><expr pos:start="95:67" pos:end="95:72"><operator pos:start="95:67" pos:end="95:67">&amp;</operator><name pos:start="95:68" pos:end="95:72"><name pos:start="95:68" pos:end="95:68">s</name><operator pos:start="95:69" pos:end="95:70">-&gt;</operator><name pos:start="95:71" pos:end="95:72">gb</name></name></expr></argument>, <argument pos:start="95:75" pos:end="95:76"><expr pos:start="95:75" pos:end="95:76"><literal type="number" pos:start="95:75" pos:end="95:76">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="99:17" pos:end="99:25"><expr pos:start="99:17" pos:end="99:24"><name pos:start="99:17" pos:end="99:17">i</name> <operator pos:start="99:19" pos:end="99:20">+=</operator> <name pos:start="99:22" pos:end="99:24">run</name></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:33"><expr pos:start="101:17" pos:end="101:32"><name pos:start="101:17" pos:end="101:17">j</name> <operator pos:start="101:19" pos:end="101:19">=</operator> <name pos:start="101:21" pos:end="101:32"><name pos:start="101:21" pos:end="101:29">scantable</name><index pos:start="101:30" pos:end="101:32">[<expr pos:start="101:31" pos:end="101:31"><name pos:start="101:31" pos:end="101:31">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="103:17" pos:end="113:17"><if pos:start="103:17" pos:end="109:17">if <condition pos:start="103:20" pos:end="103:30">(<expr pos:start="103:21" pos:end="103:29"><name pos:start="103:21" pos:end="103:25">level</name> <operator pos:start="103:27" pos:end="103:27">&lt;</operator> <literal type="number" pos:start="103:29" pos:end="103:29">0</literal></expr>)</condition> <block pos:start="103:32" pos:end="109:17">{<block_content pos:start="105:21" pos:end="107:35">

                    <expr_stmt pos:start="105:21" pos:end="105:79"><expr pos:start="105:21" pos:end="105:78"><name pos:start="105:21" pos:end="105:25">level</name> <operator pos:start="105:27" pos:end="105:27">=</operator> <operator pos:start="105:29" pos:end="105:29">(</operator><operator pos:start="105:30" pos:end="105:30">(</operator><operator pos:start="105:31" pos:end="105:31">-</operator><name pos:start="105:32" pos:end="105:36">level</name> <operator pos:start="105:38" pos:end="105:38">*</operator> <literal type="number" pos:start="105:40" pos:end="105:42">2</literal> <operator pos:start="105:42" pos:end="105:42">+</operator> <literal type="number" pos:start="105:44" pos:end="105:44">1</literal><operator pos:start="105:45" pos:end="105:45">)</operator> <operator pos:start="105:47" pos:end="105:47">*</operator> <name pos:start="105:49" pos:end="105:54">qscale</name> <operator pos:start="105:56" pos:end="105:56">*</operator> <name pos:start="105:58" pos:end="105:72"><name pos:start="105:58" pos:end="105:69">quant_matrix</name><index pos:start="105:70" pos:end="105:72">[<expr pos:start="105:71" pos:end="105:71"><name pos:start="105:71" pos:end="105:71">j</name></expr>]</index></name><operator pos:start="105:73" pos:end="105:73">)</operator> <operator pos:start="105:75" pos:end="105:76">&gt;&gt;</operator> <literal type="number" pos:start="105:78" pos:end="105:78">5</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="107:21" pos:end="107:35"><expr pos:start="107:21" pos:end="107:34"><name pos:start="107:21" pos:end="107:25">level</name> <operator pos:start="107:27" pos:end="107:27">=</operator> <operator pos:start="107:29" pos:end="107:29">-</operator><name pos:start="107:30" pos:end="107:34">level</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="109:19" pos:end="113:17">else <block pos:start="109:24" pos:end="113:17">{<block_content pos:start="111:21" pos:end="111:78">

                    <expr_stmt pos:start="111:21" pos:end="111:78"><expr pos:start="111:21" pos:end="111:77"><name pos:start="111:21" pos:end="111:25">level</name> <operator pos:start="111:27" pos:end="111:27">=</operator> <operator pos:start="111:29" pos:end="111:29">(</operator><operator pos:start="111:30" pos:end="111:30">(</operator><name pos:start="111:31" pos:end="111:35">level</name> <operator pos:start="111:37" pos:end="111:37">*</operator> <literal type="number" pos:start="111:39" pos:end="111:41">2</literal> <operator pos:start="111:41" pos:end="111:41">+</operator> <literal type="number" pos:start="111:43" pos:end="111:43">1</literal><operator pos:start="111:44" pos:end="111:44">)</operator> <operator pos:start="111:46" pos:end="111:46">*</operator> <name pos:start="111:48" pos:end="111:53">qscale</name> <operator pos:start="111:55" pos:end="111:55">*</operator> <name pos:start="111:57" pos:end="111:71"><name pos:start="111:57" pos:end="111:68">quant_matrix</name><index pos:start="111:69" pos:end="111:71">[<expr pos:start="111:70" pos:end="111:70"><name pos:start="111:70" pos:end="111:70">j</name></expr>]</index></name><operator pos:start="111:72" pos:end="111:72">)</operator> <operator pos:start="111:74" pos:end="111:75">&gt;&gt;</operator> <literal type="number" pos:start="111:77" pos:end="111:77">5</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="117:13" pos:end="123:13"><if pos:start="117:13" pos:end="123:13">if <condition pos:start="117:16" pos:end="117:23">(<expr pos:start="117:17" pos:end="117:22"><name pos:start="117:17" pos:end="117:17">i</name> <operator pos:start="117:19" pos:end="117:19">&gt;</operator> <literal type="number" pos:start="117:21" pos:end="117:22">63</literal></expr>)</condition> <block pos:start="117:25" pos:end="123:13">{<block_content pos:start="119:17" pos:end="121:26">

                <expr_stmt pos:start="119:17" pos:end="119:94"><expr pos:start="119:17" pos:end="119:93"><call pos:start="119:17" pos:end="119:93"><name pos:start="119:17" pos:end="119:22">av_log</name><argument_list pos:start="119:23" pos:end="119:93">(<argument pos:start="119:24" pos:end="119:31"><expr pos:start="119:24" pos:end="119:31"><name pos:start="119:24" pos:end="119:31"><name pos:start="119:24" pos:end="119:24">s</name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:31">avctx</name></name></expr></argument>, <argument pos:start="119:34" pos:end="119:45"><expr pos:start="119:34" pos:end="119:45"><name pos:start="119:34" pos:end="119:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:48" pos:end="119:74"><expr pos:start="119:48" pos:end="119:74"><literal type="string" pos:start="119:48" pos:end="119:74">"ac-tex damaged at %d %d\n"</literal></expr></argument>, <argument pos:start="119:77" pos:end="119:83"><expr pos:start="119:77" pos:end="119:83"><name pos:start="119:77" pos:end="119:83"><name pos:start="119:77" pos:end="119:77">s</name><operator pos:start="119:78" pos:end="119:79">-&gt;</operator><name pos:start="119:80" pos:end="119:83">mb_x</name></name></expr></argument>, <argument pos:start="119:86" pos:end="119:92"><expr pos:start="119:86" pos:end="119:92"><name pos:start="119:86" pos:end="119:92"><name pos:start="119:86" pos:end="119:86">s</name><operator pos:start="119:87" pos:end="119:88">-&gt;</operator><name pos:start="119:89" pos:end="119:92">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="121:17" pos:end="121:26">return <expr pos:start="121:24" pos:end="121:25"><operator pos:start="121:24" pos:end="121:24">-</operator><literal type="number" pos:start="121:25" pos:end="121:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="127:13" pos:end="127:30"><expr pos:start="127:13" pos:end="127:29"><name pos:start="127:13" pos:end="127:20">mismatch</name> <operator pos:start="127:22" pos:end="127:23">^=</operator> <name pos:start="127:25" pos:end="127:29">level</name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:30"><expr pos:start="129:13" pos:end="129:29"><name pos:start="129:13" pos:end="129:20"><name pos:start="129:13" pos:end="129:17">block</name><index pos:start="129:18" pos:end="129:20">[<expr pos:start="129:19" pos:end="129:19"><name pos:start="129:19" pos:end="129:19">j</name></expr>]</index></name>  <operator pos:start="129:23" pos:end="129:23">=</operator> <name pos:start="129:25" pos:end="129:29">level</name></expr>;</expr_stmt>

            <if_stmt pos:start="131:13" pos:end="133:22"><if pos:start="131:13" pos:end="133:22">if <condition pos:start="131:16" pos:end="131:72">(<expr pos:start="131:17" pos:end="131:71"><operator pos:start="131:17" pos:end="131:17">(</operator><operator pos:start="131:18" pos:end="131:18">(</operator><name pos:start="131:19" pos:end="131:25">int32_t</name><operator pos:start="131:26" pos:end="131:26">)</operator><call pos:start="131:27" pos:end="131:47"><name pos:start="131:27" pos:end="131:35">GET_CACHE</name><argument_list pos:start="131:36" pos:end="131:47">(<argument pos:start="131:37" pos:end="131:38"><expr pos:start="131:37" pos:end="131:38"><name pos:start="131:37" pos:end="131:38">re</name></expr></argument>, <argument pos:start="131:41" pos:end="131:46"><expr pos:start="131:41" pos:end="131:46"><operator pos:start="131:41" pos:end="131:41">&amp;</operator><name pos:start="131:42" pos:end="131:46"><name pos:start="131:42" pos:end="131:42">s</name><operator pos:start="131:43" pos:end="131:44">-&gt;</operator><name pos:start="131:45" pos:end="131:46">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="131:48" pos:end="131:48">)</operator> <operator pos:start="131:50" pos:end="131:51">&lt;=</operator> <operator pos:start="131:53" pos:end="131:53">(</operator><name pos:start="131:54" pos:end="131:60">int32_t</name><operator pos:start="131:61" pos:end="131:61">)</operator><literal type="number" pos:start="131:62" pos:end="131:71">0xBFFFFFFF</literal></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:22"><block_content pos:start="133:17" pos:end="133:22">

                <break pos:start="133:17" pos:end="133:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:37"><expr pos:start="135:13" pos:end="135:36"><call pos:start="135:13" pos:end="135:36"><name pos:start="135:13" pos:end="135:24">UPDATE_CACHE</name><argument_list pos:start="135:25" pos:end="135:36">(<argument pos:start="135:26" pos:end="135:27"><expr pos:start="135:26" pos:end="135:27"><name pos:start="135:26" pos:end="135:27">re</name></expr></argument>, <argument pos:start="135:30" pos:end="135:35"><expr pos:start="135:30" pos:end="135:35"><operator pos:start="135:30" pos:end="135:30">&amp;</operator><name pos:start="135:31" pos:end="135:35"><name pos:start="135:31" pos:end="135:31">s</name><operator pos:start="135:32" pos:end="135:33">-&gt;</operator><name pos:start="135:34" pos:end="135:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

<label pos:start="139:1" pos:end="139:4"><name pos:start="139:1" pos:end="139:3">end</name>:</label>

        <expr_stmt pos:start="141:9" pos:end="141:38"><expr pos:start="141:9" pos:end="141:37"><call pos:start="141:9" pos:end="141:37"><name pos:start="141:9" pos:end="141:22">LAST_SKIP_BITS</name><argument_list pos:start="141:23" pos:end="141:37">(<argument pos:start="141:24" pos:end="141:25"><expr pos:start="141:24" pos:end="141:25"><name pos:start="141:24" pos:end="141:25">re</name></expr></argument>, <argument pos:start="141:28" pos:end="141:33"><expr pos:start="141:28" pos:end="141:33"><operator pos:start="141:28" pos:end="141:28">&amp;</operator><name pos:start="141:29" pos:end="141:33"><name pos:start="141:29" pos:end="141:29">s</name><operator pos:start="141:30" pos:end="141:31">-&gt;</operator><name pos:start="141:32" pos:end="141:33">gb</name></name></expr></argument>, <argument pos:start="141:36" pos:end="141:36"><expr pos:start="141:36" pos:end="141:36"><literal type="number" pos:start="141:36" pos:end="141:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:33"><expr pos:start="143:9" pos:end="143:32"><call pos:start="143:9" pos:end="143:32"><name pos:start="143:9" pos:end="143:20">CLOSE_READER</name><argument_list pos:start="143:21" pos:end="143:32">(<argument pos:start="143:22" pos:end="143:23"><expr pos:start="143:22" pos:end="143:23"><name pos:start="143:22" pos:end="143:23">re</name></expr></argument>, <argument pos:start="143:26" pos:end="143:31"><expr pos:start="143:26" pos:end="143:31"><operator pos:start="143:26" pos:end="143:26">&amp;</operator><name pos:start="143:27" pos:end="143:31"><name pos:start="143:27" pos:end="143:27">s</name><operator pos:start="143:28" pos:end="143:29">-&gt;</operator><name pos:start="143:30" pos:end="143:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="147:5" pos:end="147:32"><expr pos:start="147:5" pos:end="147:31"><name pos:start="147:5" pos:end="147:13"><name pos:start="147:5" pos:end="147:9">block</name><index pos:start="147:10" pos:end="147:13">[<expr pos:start="147:11" pos:end="147:12"><literal type="number" pos:start="147:11" pos:end="147:12">63</literal></expr>]</index></name> <operator pos:start="147:15" pos:end="147:16">^=</operator> <operator pos:start="147:18" pos:end="147:18">(</operator><name pos:start="147:19" pos:end="147:26">mismatch</name> <operator pos:start="147:28" pos:end="147:28">&amp;</operator> <literal type="number" pos:start="147:30" pos:end="147:30">1</literal><operator pos:start="147:31" pos:end="147:31">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:31"><expr pos:start="151:5" pos:end="151:30"><name pos:start="151:5" pos:end="151:26"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:23">block_last_index</name><index pos:start="151:24" pos:end="151:26">[<expr pos:start="151:25" pos:end="151:25"><name pos:start="151:25" pos:end="151:25">n</name></expr>]</index></name> <operator pos:start="151:28" pos:end="151:28">=</operator> <name pos:start="151:30" pos:end="151:30">i</name></expr>;</expr_stmt>

    <return pos:start="153:5" pos:end="153:13">return <expr pos:start="153:12" pos:end="153:12"><literal type="number" pos:start="153:12" pos:end="153:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
