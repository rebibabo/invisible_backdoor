<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26213.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">vfio_listener_region_del</name><parameter_list pos:start="1:37" pos:end="3:66">(<parameter pos:start="1:38" pos:end="1:61"><decl pos:start="1:38" pos:end="1:61"><type pos:start="1:38" pos:end="1:61"><name pos:start="1:38" pos:end="1:51">MemoryListener</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:61">listener</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:65"><decl pos:start="3:38" pos:end="3:65"><type pos:start="3:38" pos:end="3:65"><name pos:start="3:38" pos:end="3:56">MemoryRegionSection</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:65">section</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="79:1">{<block_content pos:start="7:5" pos:end="77:5">

    <decl_stmt pos:start="7:5" pos:end="9:65"><decl pos:start="7:5" pos:end="9:64"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">VFIOContainer</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:28">container</name> <init pos:start="7:30" pos:end="9:64">= <expr pos:start="7:32" pos:end="9:64"><call pos:start="7:32" pos:end="9:64"><name pos:start="7:32" pos:end="7:43">container_of</name><argument_list pos:start="7:44" pos:end="9:64">(<argument pos:start="7:45" pos:end="7:52"><expr pos:start="7:45" pos:end="7:52"><name pos:start="7:45" pos:end="7:52">listener</name></expr></argument>, <argument pos:start="7:55" pos:end="7:67"><expr pos:start="7:55" pos:end="7:67"><name pos:start="7:55" pos:end="7:67">VFIOContainer</name></expr></argument>,

                                            <argument pos:start="9:45" pos:end="9:63"><expr pos:start="9:45" pos:end="9:63"><name pos:start="9:45" pos:end="9:63"><name pos:start="9:45" pos:end="9:54">iommu_data</name><operator pos:start="9:55" pos:end="9:55">.</operator><name pos:start="9:56" pos:end="9:63">listener</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">hwaddr</name></type> <name pos:start="11:12" pos:end="11:15">iova</name></decl>, <decl pos:start="11:18" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:10"/><name pos:start="11:18" pos:end="11:20">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="17:47">(<expr pos:start="17:9" pos:end="17:46"><call pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:37">vfio_listener_skipped_section</name><argument_list pos:start="17:38" pos:end="17:46">(<argument pos:start="17:39" pos:end="17:45"><expr pos:start="17:39" pos:end="17:45"><name pos:start="17:39" pos:end="17:45">section</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:49" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:15">

        <expr_stmt pos:start="19:9" pos:end="23:74"><expr pos:start="19:9" pos:end="23:73"><call pos:start="19:9" pos:end="23:73"><name pos:start="19:9" pos:end="19:15">DPRINTF</name><argument_list pos:start="19:16" pos:end="23:73">(<argument pos:start="19:17" pos:end="19:66"><expr pos:start="19:17" pos:end="19:66"><literal type="string" pos:start="19:17" pos:end="19:39">"SKIPPING region_del %"</literal><name pos:start="19:40" pos:end="19:50">HWADDR_PRIx</name><literal type="string" pos:start="19:51" pos:end="19:56">" - %"</literal><name pos:start="19:57" pos:end="19:62">PRIx64</name><literal type="string" pos:start="19:63" pos:end="19:66">"\n"</literal></expr></argument>,

                <argument pos:start="21:17" pos:end="21:52"><expr pos:start="21:17" pos:end="21:52"><name pos:start="21:17" pos:end="21:52"><name pos:start="21:17" pos:end="21:23">section</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:52">offset_within_address_space</name></name></expr></argument>,

                <argument pos:start="23:17" pos:end="23:72"><expr pos:start="23:17" pos:end="23:72"><name pos:start="23:17" pos:end="23:52"><name pos:start="23:17" pos:end="23:23">section</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:52">offset_within_address_space</name></name> <operator pos:start="23:54" pos:end="23:54">+</operator> <name pos:start="23:56" pos:end="23:68"><name pos:start="23:56" pos:end="23:62">section</name><operator pos:start="23:63" pos:end="23:64">-&gt;</operator><name pos:start="23:65" pos:end="23:68">size</name></name> <operator pos:start="23:70" pos:end="23:70">-</operator> <literal type="number" pos:start="23:72" pos:end="23:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="33:70">(<expr pos:start="31:9" pos:end="33:69"><call pos:start="31:9" pos:end="33:69"><name pos:start="31:9" pos:end="31:16">unlikely</name><argument_list pos:start="31:17" pos:end="33:69">(<argument pos:start="31:18" pos:end="33:68"><expr pos:start="31:18" pos:end="33:68"><operator pos:start="31:18" pos:end="31:18">(</operator><name pos:start="31:19" pos:end="31:54"><name pos:start="31:19" pos:end="31:25">section</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:54">offset_within_address_space</name></name> <operator pos:start="31:56" pos:end="31:56">&amp;</operator> <operator pos:start="31:58" pos:end="31:58">~</operator><name pos:start="31:59" pos:end="31:74">TARGET_PAGE_MASK</name><operator pos:start="31:75" pos:end="31:75">)</operator> <operator pos:start="31:77" pos:end="31:78">!=</operator>

                 <operator pos:start="33:18" pos:end="33:18">(</operator><name pos:start="33:19" pos:end="33:47"><name pos:start="33:19" pos:end="33:25">section</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:47">offset_within_region</name></name> <operator pos:start="33:49" pos:end="33:49">&amp;</operator> <operator pos:start="33:51" pos:end="33:51">~</operator><name pos:start="33:52" pos:end="33:67">TARGET_PAGE_MASK</name><operator pos:start="33:68" pos:end="33:68">)</operator></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:72" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:15">

        <expr_stmt pos:start="35:9" pos:end="35:63"><expr pos:start="35:9" pos:end="35:62"><call pos:start="35:9" pos:end="35:62"><name pos:start="35:9" pos:end="35:20">error_report</name><argument_list pos:start="35:21" pos:end="35:62">(<argument pos:start="35:22" pos:end="35:51"><expr pos:start="35:22" pos:end="35:51"><literal type="string" pos:start="35:22" pos:end="35:51">"%s received unaligned region"</literal></expr></argument>, <argument pos:start="35:54" pos:end="35:61"><expr pos:start="35:54" pos:end="35:61"><name pos:start="35:54" pos:end="35:61">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:67"><expr pos:start="43:5" pos:end="43:66"><name pos:start="43:5" pos:end="43:8">iova</name> <operator pos:start="43:10" pos:end="43:10">=</operator> <call pos:start="43:12" pos:end="43:66"><name pos:start="43:12" pos:end="43:28">TARGET_PAGE_ALIGN</name><argument_list pos:start="43:29" pos:end="43:66">(<argument pos:start="43:30" pos:end="43:65"><expr pos:start="43:30" pos:end="43:65"><name pos:start="43:30" pos:end="43:65"><name pos:start="43:30" pos:end="43:36">section</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:65">offset_within_address_space</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:27"><expr pos:start="45:5" pos:end="47:26"><name pos:start="45:5" pos:end="45:7">end</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <operator pos:start="45:11" pos:end="45:11">(</operator><name pos:start="45:12" pos:end="45:47"><name pos:start="45:12" pos:end="45:18">section</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:47">offset_within_address_space</name></name> <operator pos:start="45:49" pos:end="45:49">+</operator> <call pos:start="45:51" pos:end="45:77"><name pos:start="45:51" pos:end="45:62">int128_get64</name><argument_list pos:start="45:63" pos:end="45:77">(<argument pos:start="45:64" pos:end="45:76"><expr pos:start="45:64" pos:end="45:76"><name pos:start="45:64" pos:end="45:76"><name pos:start="45:64" pos:end="45:70">section</name><operator pos:start="45:71" pos:end="45:72">-&gt;</operator><name pos:start="45:73" pos:end="45:76">size</name></name></expr></argument>)</argument_list></call><operator pos:start="45:78" pos:end="45:78">)</operator> <operator pos:start="45:80" pos:end="45:80">&amp;</operator>

          <name pos:start="47:11" pos:end="47:26">TARGET_PAGE_MASK</name></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:20">(<expr pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:12">iova</name> <operator pos:start="51:14" pos:end="51:15">&gt;=</operator> <name pos:start="51:17" pos:end="51:19">end</name></expr>)</condition> <block pos:start="51:22" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:15">

        <return pos:start="53:9" pos:end="53:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="61:27"><expr pos:start="59:5" pos:end="61:26"><call pos:start="59:5" pos:end="61:26"><name pos:start="59:5" pos:end="59:11">DPRINTF</name><argument_list pos:start="59:12" pos:end="61:26">(<argument pos:start="59:13" pos:end="59:58"><expr pos:start="59:13" pos:end="59:58"><literal type="string" pos:start="59:13" pos:end="59:26">"region_del %"</literal><name pos:start="59:27" pos:end="59:37">HWADDR_PRIx</name><literal type="string" pos:start="59:38" pos:end="59:43">" - %"</literal><name pos:start="59:44" pos:end="59:54">HWADDR_PRIx</name><literal type="string" pos:start="59:55" pos:end="59:58">"\n"</literal></expr></argument>,

            <argument pos:start="61:13" pos:end="61:16"><expr pos:start="61:13" pos:end="61:16"><name pos:start="61:13" pos:end="61:16">iova</name></expr></argument>, <argument pos:start="61:19" pos:end="61:25"><expr pos:start="61:19" pos:end="61:25"><name pos:start="61:19" pos:end="61:21">end</name> <operator pos:start="61:23" pos:end="61:23">-</operator> <literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:54"><expr pos:start="65:5" pos:end="65:53"><name pos:start="65:5" pos:end="65:7">ret</name> <operator pos:start="65:9" pos:end="65:9">=</operator> <call pos:start="65:11" pos:end="65:53"><name pos:start="65:11" pos:end="65:24">vfio_dma_unmap</name><argument_list pos:start="65:25" pos:end="65:53">(<argument pos:start="65:26" pos:end="65:34"><expr pos:start="65:26" pos:end="65:34"><name pos:start="65:26" pos:end="65:34">container</name></expr></argument>, <argument pos:start="65:37" pos:end="65:40"><expr pos:start="65:37" pos:end="65:40"><name pos:start="65:37" pos:end="65:40">iova</name></expr></argument>, <argument pos:start="65:43" pos:end="65:52"><expr pos:start="65:43" pos:end="65:52"><name pos:start="65:43" pos:end="65:45">end</name> <operator pos:start="65:47" pos:end="65:47">-</operator> <name pos:start="65:49" pos:end="65:52">iova</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:37"><expr pos:start="67:5" pos:end="67:36"><call pos:start="67:5" pos:end="67:36"><name pos:start="67:5" pos:end="67:23">memory_region_unref</name><argument_list pos:start="67:24" pos:end="67:36">(<argument pos:start="67:25" pos:end="67:35"><expr pos:start="67:25" pos:end="67:35"><name pos:start="67:25" pos:end="67:35"><name pos:start="67:25" pos:end="67:31">section</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:35">mr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="69:12">(<expr pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">ret</name></expr>)</condition> <block pos:start="69:14" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:55">

        <expr_stmt pos:start="71:9" pos:end="75:55"><expr pos:start="71:9" pos:end="75:54"><call pos:start="71:9" pos:end="75:54"><name pos:start="71:9" pos:end="71:20">error_report</name><argument_list pos:start="71:21" pos:end="75:54">(<argument pos:start="71:22" pos:end="73:50"><expr pos:start="71:22" pos:end="73:50"><literal type="string" pos:start="71:22" pos:end="71:45">"vfio_dma_unmap(%p, 0x%"</literal><name pos:start="71:46" pos:end="71:56">HWADDR_PRIx</name><literal type="string" pos:start="71:57" pos:end="71:60">", "</literal>

                     <literal type="string" pos:start="73:22" pos:end="73:26">"0x%"</literal><name pos:start="73:27" pos:end="73:37">HWADDR_PRIx</name><literal type="string" pos:start="73:38" pos:end="73:50">") = %d (%m)"</literal></expr></argument>,

                     <argument pos:start="75:22" pos:end="75:30"><expr pos:start="75:22" pos:end="75:30"><name pos:start="75:22" pos:end="75:30">container</name></expr></argument>, <argument pos:start="75:33" pos:end="75:36"><expr pos:start="75:33" pos:end="75:36"><name pos:start="75:33" pos:end="75:36">iova</name></expr></argument>, <argument pos:start="75:39" pos:end="75:48"><expr pos:start="75:39" pos:end="75:48"><name pos:start="75:39" pos:end="75:41">end</name> <operator pos:start="75:43" pos:end="75:43">-</operator> <name pos:start="75:45" pos:end="75:48">iova</name></expr></argument>, <argument pos:start="75:51" pos:end="75:53"><expr pos:start="75:51" pos:end="75:53"><name pos:start="75:51" pos:end="75:53">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
