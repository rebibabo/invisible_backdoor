<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27147.c" pos:tabs="8"><function pos:start="1:1" pos:end="271:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">decode_frame_header</name><parameter_list pos:start="1:31" pos:end="1:79">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:41">VP8Context</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:59">uint8_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">buf</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:78"><decl pos:start="1:67" pos:end="1:78"><type pos:start="1:67" pos:end="1:78"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:78">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="271:1">{<block_content pos:start="5:5" pos:end="269:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VP56RangeCoder</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">c</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">c</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">header_size</name></decl>, <decl pos:start="7:22" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:27">hscale</name></decl>, <decl pos:start="7:30" pos:end="7:35"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:30" pos:end="7:35">vscale</name></decl>, <decl pos:start="7:38" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:38" pos:end="7:38">i</name></decl>, <decl pos:start="7:41" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:41" pos:end="7:41">j</name></decl>, <decl pos:start="7:44" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:44" pos:end="7:44">k</name></decl>, <decl pos:start="7:47" pos:end="7:47"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:47" pos:end="7:47">l</name></decl>, <decl pos:start="7:50" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:50" pos:end="7:50">m</name></decl>, <decl pos:start="7:53" pos:end="7:55"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:53" pos:end="7:55">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">width</name>  <init pos:start="9:16" pos:end="9:32">= <expr pos:start="9:18" pos:end="9:32"><name pos:start="9:18" pos:end="9:32"><name pos:start="9:18" pos:end="9:18">s</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:25">avctx</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:32">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">height</name> <init pos:start="11:16" pos:end="11:33">= <expr pos:start="11:18" pos:end="11:33"><name pos:start="11:18" pos:end="11:33"><name pos:start="11:18" pos:end="11:18">s</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:25">avctx</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:33">height</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:15">keyframe</name></name>  <operator pos:start="15:18" pos:end="15:18">=</operator> <operator pos:start="15:20" pos:end="15:20">!</operator><operator pos:start="15:21" pos:end="15:21">(</operator><name pos:start="15:22" pos:end="15:27"><name pos:start="15:22" pos:end="15:24">buf</name><index pos:start="15:25" pos:end="15:27">[<expr pos:start="15:26" pos:end="15:26"><literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr>]</index></name> <operator pos:start="15:29" pos:end="15:29">&amp;</operator> <literal type="number" pos:start="15:31" pos:end="15:31">1</literal><operator pos:start="15:32" pos:end="15:32">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:14">profile</name></name>   <operator pos:start="17:18" pos:end="17:18">=</operator>  <operator pos:start="17:21" pos:end="17:21">(</operator><name pos:start="17:22" pos:end="17:27"><name pos:start="17:22" pos:end="17:24">buf</name><index pos:start="17:25" pos:end="17:27">[<expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>]</index></name><operator pos:start="17:28" pos:end="17:29">&gt;&gt;</operator><literal type="number" pos:start="17:30" pos:end="17:30">1</literal><operator pos:start="17:31" pos:end="17:31">)</operator> <operator pos:start="17:33" pos:end="17:33">&amp;</operator> <literal type="number" pos:start="17:35" pos:end="17:35">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:16">invisible</name></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <operator pos:start="19:20" pos:end="19:20">!</operator><operator pos:start="19:21" pos:end="19:21">(</operator><name pos:start="19:22" pos:end="19:27"><name pos:start="19:22" pos:end="19:24">buf</name><index pos:start="19:25" pos:end="19:27">[<expr pos:start="19:26" pos:end="19:26"><literal type="number" pos:start="19:26" pos:end="19:26">0</literal></expr>]</index></name> <operator pos:start="19:29" pos:end="19:29">&amp;</operator> <literal type="number" pos:start="19:31" pos:end="19:34">0x10</literal><operator pos:start="19:35" pos:end="19:35">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:15">header_size</name>  <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:31"><name pos:start="21:20" pos:end="21:26">AV_RL24</name><argument_list pos:start="21:27" pos:end="21:31">(<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">buf</name></expr></argument>)</argument_list></call> <operator pos:start="21:33" pos:end="21:34">&gt;&gt;</operator> <literal type="number" pos:start="21:36" pos:end="21:36">5</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:7">buf</name>      <operator pos:start="23:14" pos:end="23:15">+=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:18"><expr pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:12">buf_size</name> <operator pos:start="25:14" pos:end="25:15">-=</operator> <literal type="number" pos:start="25:17" pos:end="25:17">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="31:77"><if pos:start="29:5" pos:end="31:77">if <condition pos:start="29:8" pos:end="29:23">(<expr pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:18">profile</name></name> <operator pos:start="29:20" pos:end="29:20">&gt;</operator> <literal type="number" pos:start="29:22" pos:end="29:22">3</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:77"><block_content pos:start="31:9" pos:end="31:77">

        <expr_stmt pos:start="31:9" pos:end="31:77"><expr pos:start="31:9" pos:end="31:76"><call pos:start="31:9" pos:end="31:76"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:76">(<argument pos:start="31:16" pos:end="31:23"><expr pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">avctx</name></name></expr></argument>, <argument pos:start="31:26" pos:end="31:39"><expr pos:start="31:26" pos:end="31:39"><name pos:start="31:26" pos:end="31:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="31:42" pos:end="31:63"><expr pos:start="31:42" pos:end="31:63"><literal type="string" pos:start="31:42" pos:end="31:63">"Unknown profile %d\n"</literal></expr></argument>, <argument pos:start="31:66" pos:end="31:75"><expr pos:start="31:66" pos:end="31:75"><name pos:start="31:66" pos:end="31:75"><name pos:start="31:66" pos:end="31:66">s</name><operator pos:start="31:67" pos:end="31:68">-&gt;</operator><name pos:start="31:69" pos:end="31:75">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="41:100"><if pos:start="35:5" pos:end="37:96">if <condition pos:start="35:8" pos:end="35:20">(<expr pos:start="35:9" pos:end="35:19"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:19"><name pos:start="35:10" pos:end="35:10">s</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:19">profile</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:96"><block_content pos:start="37:9" pos:end="37:96">

        <expr_stmt pos:start="37:9" pos:end="37:96"><expr pos:start="37:9" pos:end="37:95"><call pos:start="37:9" pos:end="37:95"><name pos:start="37:9" pos:end="37:14">memcpy</name><argument_list pos:start="37:15" pos:end="37:95">(<argument pos:start="37:16" pos:end="37:32"><expr pos:start="37:16" pos:end="37:32"><name pos:start="37:16" pos:end="37:32"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:32">put_pixels_tab</name></name></expr></argument>, <argument pos:start="37:35" pos:end="37:67"><expr pos:start="37:35" pos:end="37:67"><name pos:start="37:35" pos:end="37:67"><name pos:start="37:35" pos:end="37:35">s</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:43">vp8dsp</name><operator pos:start="37:44" pos:end="37:44">.</operator><name pos:start="37:45" pos:end="37:67">put_vp8_epel_pixels_tab</name></name></expr></argument>, <argument pos:start="37:70" pos:end="37:94"><expr pos:start="37:70" pos:end="37:94"><sizeof pos:start="37:70" pos:end="37:94">sizeof<argument_list pos:start="37:76" pos:end="37:94">(<argument pos:start="37:77" pos:end="37:93"><expr pos:start="37:77" pos:end="37:93"><name pos:start="37:77" pos:end="37:93"><name pos:start="37:77" pos:end="37:77">s</name><operator pos:start="37:78" pos:end="37:79">-&gt;</operator><name pos:start="37:80" pos:end="37:93">put_pixels_tab</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="39:5" pos:end="41:100">else<block type="pseudo" pos:start="41:9" pos:end="41:100"><block_content pos:start="41:9" pos:end="41:100">    <comment type="line" pos:start="39:13" pos:end="39:70">// profile 1-3 use bilinear, 4+ aren't defined so whatever</comment>

        <expr_stmt pos:start="41:9" pos:end="41:100"><expr pos:start="41:9" pos:end="41:99"><call pos:start="41:9" pos:end="41:99"><name pos:start="41:9" pos:end="41:14">memcpy</name><argument_list pos:start="41:15" pos:end="41:99">(<argument pos:start="41:16" pos:end="41:32"><expr pos:start="41:16" pos:end="41:32"><name pos:start="41:16" pos:end="41:32"><name pos:start="41:16" pos:end="41:16">s</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:32">put_pixels_tab</name></name></expr></argument>, <argument pos:start="41:35" pos:end="41:71"><expr pos:start="41:35" pos:end="41:71"><name pos:start="41:35" pos:end="41:71"><name pos:start="41:35" pos:end="41:35">s</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:43">vp8dsp</name><operator pos:start="41:44" pos:end="41:44">.</operator><name pos:start="41:45" pos:end="41:71">put_vp8_bilinear_pixels_tab</name></name></expr></argument>, <argument pos:start="41:74" pos:end="41:98"><expr pos:start="41:74" pos:end="41:98"><sizeof pos:start="41:74" pos:end="41:98">sizeof<argument_list pos:start="41:80" pos:end="41:98">(<argument pos:start="41:81" pos:end="41:97"><expr pos:start="41:81" pos:end="41:97"><name pos:start="41:81" pos:end="41:97"><name pos:start="41:81" pos:end="41:81">s</name><operator pos:start="41:82" pos:end="41:83">-&gt;</operator><name pos:start="41:84" pos:end="41:97">put_pixels_tab</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:47">(<expr pos:start="45:9" pos:end="45:46"><name pos:start="45:9" pos:end="45:19">header_size</name> <operator pos:start="45:21" pos:end="45:21">&gt;</operator> <name pos:start="45:23" pos:end="45:30">buf_size</name> <operator pos:start="45:32" pos:end="45:32">-</operator> <literal type="number" pos:start="45:34" pos:end="45:34">7</literal><operator pos:start="45:35" pos:end="45:35">*</operator><name pos:start="45:36" pos:end="45:46"><name pos:start="45:36" pos:end="45:36">s</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:46">keyframe</name></name></expr>)</condition> <block pos:start="45:49" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:35">

        <expr_stmt pos:start="47:9" pos:end="47:82"><expr pos:start="47:9" pos:end="47:81"><call pos:start="47:9" pos:end="47:81"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:81">(<argument pos:start="47:16" pos:end="47:23"><expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:23">avctx</name></name></expr></argument>, <argument pos:start="47:26" pos:end="47:37"><expr pos:start="47:26" pos:end="47:37"><name pos:start="47:26" pos:end="47:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:40" pos:end="47:80"><expr pos:start="47:40" pos:end="47:80"><literal type="string" pos:start="47:40" pos:end="47:80">"Header size larger than data provided\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:35">return <expr pos:start="49:16" pos:end="49:34"><name pos:start="49:16" pos:end="49:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="103:5"><if pos:start="55:5" pos:end="103:5">if <condition pos:start="55:8" pos:end="55:20">(<expr pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:19">keyframe</name></name></expr>)</condition> <block pos:start="55:22" pos:end="103:5">{<block_content pos:start="57:9" pos:end="101:61">

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:37">(<expr pos:start="57:13" pos:end="57:36"><call pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:19">AV_RL24</name><argument_list pos:start="57:20" pos:end="57:24">(<argument pos:start="57:21" pos:end="57:23"><expr pos:start="57:21" pos:end="57:23"><name pos:start="57:21" pos:end="57:23">buf</name></expr></argument>)</argument_list></call> <operator pos:start="57:26" pos:end="57:27">!=</operator> <literal type="number" pos:start="57:29" pos:end="57:36">0x2a019d</literal></expr>)</condition> <block pos:start="57:39" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:39">

            <expr_stmt pos:start="59:13" pos:end="59:86"><expr pos:start="59:13" pos:end="59:85"><call pos:start="59:13" pos:end="59:85"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="59:85">(<argument pos:start="59:20" pos:end="59:27"><expr pos:start="59:20" pos:end="59:27"><name pos:start="59:20" pos:end="59:27"><name pos:start="59:20" pos:end="59:20">s</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:27">avctx</name></name></expr></argument>, <argument pos:start="59:30" pos:end="59:41"><expr pos:start="59:30" pos:end="59:41"><name pos:start="59:30" pos:end="59:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:44" pos:end="59:70"><expr pos:start="59:44" pos:end="59:70"><literal type="string" pos:start="59:44" pos:end="59:70">"Invalid start code 0x%x\n"</literal></expr></argument>, <argument pos:start="59:73" pos:end="59:84"><expr pos:start="59:73" pos:end="59:84"><call pos:start="59:73" pos:end="59:84"><name pos:start="59:73" pos:end="59:79">AV_RL24</name><argument_list pos:start="59:80" pos:end="59:84">(<argument pos:start="59:81" pos:end="59:83"><expr pos:start="59:81" pos:end="59:83"><name pos:start="59:81" pos:end="59:83">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:39">return <expr pos:start="61:20" pos:end="61:38"><name pos:start="61:20" pos:end="61:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:41"><expr pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:13">width</name>  <operator pos:start="65:16" pos:end="65:16">=</operator> <call pos:start="65:18" pos:end="65:31"><name pos:start="65:18" pos:end="65:24">AV_RL16</name><argument_list pos:start="65:25" pos:end="65:31">(<argument pos:start="65:26" pos:end="65:30"><expr pos:start="65:26" pos:end="65:30"><name pos:start="65:26" pos:end="65:28">buf</name><operator pos:start="65:29" pos:end="65:29">+</operator><literal type="number" pos:start="65:30" pos:end="65:30">3</literal></expr></argument>)</argument_list></call> <operator pos:start="65:33" pos:end="65:33">&amp;</operator> <literal type="number" pos:start="65:35" pos:end="65:40">0x3fff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:41"><expr pos:start="67:9" pos:end="67:40"><name pos:start="67:9" pos:end="67:14">height</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <call pos:start="67:18" pos:end="67:31"><name pos:start="67:18" pos:end="67:24">AV_RL16</name><argument_list pos:start="67:25" pos:end="67:31">(<argument pos:start="67:26" pos:end="67:30"><expr pos:start="67:26" pos:end="67:30"><name pos:start="67:26" pos:end="67:28">buf</name><operator pos:start="67:29" pos:end="67:29">+</operator><literal type="number" pos:start="67:30" pos:end="67:30">5</literal></expr></argument>)</argument_list></call> <operator pos:start="67:33" pos:end="67:33">&amp;</operator> <literal type="number" pos:start="67:35" pos:end="67:40">0x3fff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:29"><expr pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:14">hscale</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <name pos:start="69:18" pos:end="69:23"><name pos:start="69:18" pos:end="69:20">buf</name><index pos:start="69:21" pos:end="69:23">[<expr pos:start="69:22" pos:end="69:22"><literal type="number" pos:start="69:22" pos:end="69:22">4</literal></expr>]</index></name> <operator pos:start="69:25" pos:end="69:26">&gt;&gt;</operator> <literal type="number" pos:start="69:28" pos:end="69:28">6</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:29"><expr pos:start="71:9" pos:end="71:28"><name pos:start="71:9" pos:end="71:14">vscale</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:23"><name pos:start="71:18" pos:end="71:20">buf</name><index pos:start="71:21" pos:end="71:23">[<expr pos:start="71:22" pos:end="71:22"><literal type="number" pos:start="71:22" pos:end="71:22">6</literal></expr>]</index></name> <operator pos:start="71:25" pos:end="71:26">&gt;&gt;</operator> <literal type="number" pos:start="71:28" pos:end="71:28">6</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:22"><expr pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:11">buf</name>      <operator pos:start="73:18" pos:end="73:19">+=</operator> <literal type="number" pos:start="73:21" pos:end="73:21">7</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:22"><expr pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:16">buf_size</name> <operator pos:start="75:18" pos:end="75:19">-=</operator> <literal type="number" pos:start="75:21" pos:end="75:21">7</literal></expr>;</expr_stmt>



        <if_stmt pos:start="79:9" pos:end="81:61"><if pos:start="79:9" pos:end="81:61">if <condition pos:start="79:12" pos:end="79:29">(<expr pos:start="79:13" pos:end="79:28"><name pos:start="79:13" pos:end="79:18">hscale</name> <operator pos:start="79:20" pos:end="79:21">||</operator> <name pos:start="79:23" pos:end="79:28">vscale</name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:61"><block_content pos:start="81:13" pos:end="81:61">

            <expr_stmt pos:start="81:13" pos:end="81:61"><expr pos:start="81:13" pos:end="81:60"><call pos:start="81:13" pos:end="81:60"><name pos:start="81:13" pos:end="81:34">av_log_missing_feature</name><argument_list pos:start="81:35" pos:end="81:60">(<argument pos:start="81:36" pos:end="81:43"><expr pos:start="81:36" pos:end="81:43"><name pos:start="81:36" pos:end="81:43"><name pos:start="81:36" pos:end="81:36">s</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:43">avctx</name></name></expr></argument>, <argument pos:start="81:46" pos:end="81:56"><expr pos:start="81:46" pos:end="81:56"><literal type="string" pos:start="81:46" pos:end="81:56">"Upscaling"</literal></expr></argument>, <argument pos:start="81:59" pos:end="81:59"><expr pos:start="81:59" pos:end="81:59"><literal type="number" pos:start="81:59" pos:end="81:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:65"><expr pos:start="85:9" pos:end="85:64"><name pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:24">update_golden</name></name> <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:43"><name pos:start="85:28" pos:end="85:28">s</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:43">update_altref</name></name> <operator pos:start="85:45" pos:end="85:45">=</operator> <name pos:start="85:47" pos:end="85:64">VP56_FRAME_CURRENT</name></expr>;</expr_stmt>

        <for pos:start="87:9" pos:end="93:53">for <control pos:start="87:13" pos:end="87:31">(<init pos:start="87:14" pos:end="87:19"><expr pos:start="87:14" pos:end="87:18"><name pos:start="87:14" pos:end="87:14">i</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="number" pos:start="87:18" pos:end="87:18">0</literal></expr>;</init> <condition pos:start="87:21" pos:end="87:26"><expr pos:start="87:21" pos:end="87:25"><name pos:start="87:21" pos:end="87:21">i</name> <operator pos:start="87:23" pos:end="87:23">&lt;</operator> <literal type="number" pos:start="87:25" pos:end="87:25">4</literal></expr>;</condition> <incr pos:start="87:28" pos:end="87:30"><expr pos:start="87:28" pos:end="87:30"><name pos:start="87:28" pos:end="87:28">i</name><operator pos:start="87:29" pos:end="87:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="89:13" pos:end="93:53"><block_content pos:start="89:13" pos:end="93:53">

            <for pos:start="89:13" pos:end="93:53">for <control pos:start="89:17" pos:end="89:36">(<init pos:start="89:18" pos:end="89:23"><expr pos:start="89:18" pos:end="89:22"><name pos:start="89:18" pos:end="89:18">j</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <literal type="number" pos:start="89:22" pos:end="89:22">0</literal></expr>;</init> <condition pos:start="89:25" pos:end="89:31"><expr pos:start="89:25" pos:end="89:30"><name pos:start="89:25" pos:end="89:25">j</name> <operator pos:start="89:27" pos:end="89:27">&lt;</operator> <literal type="number" pos:start="89:29" pos:end="89:30">16</literal></expr>;</condition> <incr pos:start="89:33" pos:end="89:35"><expr pos:start="89:33" pos:end="89:35"><name pos:start="89:33" pos:end="89:33">j</name><operator pos:start="89:34" pos:end="89:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="91:17" pos:end="93:53"><block_content pos:start="91:17" pos:end="93:53">

                <expr_stmt pos:start="91:17" pos:end="93:53"><expr pos:start="91:17" pos:end="93:52"><call pos:start="91:17" pos:end="93:52"><name pos:start="91:17" pos:end="91:22">memcpy</name><argument_list pos:start="91:23" pos:end="93:52">(<argument pos:start="91:24" pos:end="91:43"><expr pos:start="91:24" pos:end="91:43"><name pos:start="91:24" pos:end="91:43"><name pos:start="91:24" pos:end="91:24">s</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:30">prob</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:37">token</name><index pos:start="91:38" pos:end="91:40">[<expr pos:start="91:39" pos:end="91:39"><name pos:start="91:39" pos:end="91:39">i</name></expr>]</index><index pos:start="91:41" pos:end="91:43">[<expr pos:start="91:42" pos:end="91:42"><name pos:start="91:42" pos:end="91:42">j</name></expr>]</index></name></expr></argument>, <argument pos:start="91:46" pos:end="91:90"><expr pos:start="91:46" pos:end="91:90"><name pos:start="91:46" pos:end="91:90"><name pos:start="91:46" pos:end="91:68">vp8_token_default_probs</name><index pos:start="91:69" pos:end="91:71">[<expr pos:start="91:70" pos:end="91:70"><name pos:start="91:70" pos:end="91:70">i</name></expr>]</index><index pos:start="91:72" pos:end="91:90">[<expr pos:start="91:73" pos:end="91:89"><name pos:start="91:73" pos:end="91:89"><name pos:start="91:73" pos:end="91:86">vp8_coeff_band</name><index pos:start="91:87" pos:end="91:89">[<expr pos:start="91:88" pos:end="91:88"><name pos:start="91:88" pos:end="91:88">j</name></expr>]</index></name></expr>]</index></name></expr></argument>,

                       <argument pos:start="93:24" pos:end="93:51"><expr pos:start="93:24" pos:end="93:51"><sizeof pos:start="93:24" pos:end="93:51">sizeof<argument_list pos:start="93:30" pos:end="93:51">(<argument pos:start="93:31" pos:end="93:50"><expr pos:start="93:31" pos:end="93:50"><name pos:start="93:31" pos:end="93:50"><name pos:start="93:31" pos:end="93:31">s</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:37">prob</name><operator pos:start="93:38" pos:end="93:39">-&gt;</operator><name pos:start="93:40" pos:end="93:44">token</name><index pos:start="93:45" pos:end="93:47">[<expr pos:start="93:46" pos:end="93:46"><name pos:start="93:46" pos:end="93:46">i</name></expr>]</index><index pos:start="93:48" pos:end="93:50">[<expr pos:start="93:49" pos:end="93:49"><name pos:start="93:49" pos:end="93:49">j</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        <expr_stmt pos:start="95:9" pos:end="95:89"><expr pos:start="95:9" pos:end="95:88"><call pos:start="95:9" pos:end="95:88"><name pos:start="95:9" pos:end="95:14">memcpy</name><argument_list pos:start="95:15" pos:end="95:88">(<argument pos:start="95:16" pos:end="95:33"><expr pos:start="95:16" pos:end="95:33"><name pos:start="95:16" pos:end="95:33"><name pos:start="95:16" pos:end="95:16">s</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:22">prob</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:33">pred16x16</name></name></expr></argument>, <argument pos:start="95:36" pos:end="95:59"><expr pos:start="95:36" pos:end="95:59"><name pos:start="95:36" pos:end="95:59">vp8_pred16x16_prob_inter</name></expr></argument>, <argument pos:start="95:62" pos:end="95:87"><expr pos:start="95:62" pos:end="95:87"><sizeof pos:start="95:62" pos:end="95:87">sizeof<argument_list pos:start="95:68" pos:end="95:87">(<argument pos:start="95:69" pos:end="95:86"><expr pos:start="95:69" pos:end="95:86"><name pos:start="95:69" pos:end="95:86"><name pos:start="95:69" pos:end="95:69">s</name><operator pos:start="95:70" pos:end="95:71">-&gt;</operator><name pos:start="95:72" pos:end="95:75">prob</name><operator pos:start="95:76" pos:end="95:77">-&gt;</operator><name pos:start="95:78" pos:end="95:86">pred16x16</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:88"><expr pos:start="97:9" pos:end="97:87"><call pos:start="97:9" pos:end="97:87"><name pos:start="97:9" pos:end="97:14">memcpy</name><argument_list pos:start="97:15" pos:end="97:87">(<argument pos:start="97:16" pos:end="97:32"><expr pos:start="97:16" pos:end="97:32"><name pos:start="97:16" pos:end="97:32"><name pos:start="97:16" pos:end="97:16">s</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:22">prob</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:32">pred8x8c</name></name></expr></argument> , <argument pos:start="97:36" pos:end="97:58"><expr pos:start="97:36" pos:end="97:58"><name pos:start="97:36" pos:end="97:58">vp8_pred8x8c_prob_inter</name></expr></argument> , <argument pos:start="97:62" pos:end="97:86"><expr pos:start="97:62" pos:end="97:86"><sizeof pos:start="97:62" pos:end="97:86">sizeof<argument_list pos:start="97:68" pos:end="97:86">(<argument pos:start="97:69" pos:end="97:85"><expr pos:start="97:69" pos:end="97:85"><name pos:start="97:69" pos:end="97:85"><name pos:start="97:69" pos:end="97:69">s</name><operator pos:start="97:70" pos:end="97:71">-&gt;</operator><name pos:start="97:72" pos:end="97:75">prob</name><operator pos:start="97:76" pos:end="97:77">-&gt;</operator><name pos:start="97:78" pos:end="97:85">pred8x8c</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:83"><expr pos:start="99:9" pos:end="99:82"><call pos:start="99:9" pos:end="99:82"><name pos:start="99:9" pos:end="99:14">memcpy</name><argument_list pos:start="99:15" pos:end="99:82">(<argument pos:start="99:16" pos:end="99:27"><expr pos:start="99:16" pos:end="99:27"><name pos:start="99:16" pos:end="99:27"><name pos:start="99:16" pos:end="99:16">s</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:22">prob</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:27">mvc</name></name></expr></argument>      , <argument pos:start="99:36" pos:end="99:54"><expr pos:start="99:36" pos:end="99:54"><name pos:start="99:36" pos:end="99:54">vp8_mv_default_prob</name></expr></argument>     , <argument pos:start="99:62" pos:end="99:81"><expr pos:start="99:62" pos:end="99:81"><sizeof pos:start="99:62" pos:end="99:81">sizeof<argument_list pos:start="99:68" pos:end="99:81">(<argument pos:start="99:69" pos:end="99:80"><expr pos:start="99:69" pos:end="99:80"><name pos:start="99:69" pos:end="99:80"><name pos:start="99:69" pos:end="99:69">s</name><operator pos:start="99:70" pos:end="99:71">-&gt;</operator><name pos:start="99:72" pos:end="99:75">prob</name><operator pos:start="99:76" pos:end="99:77">-&gt;</operator><name pos:start="99:78" pos:end="99:80">mvc</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:61"><expr pos:start="101:9" pos:end="101:60"><call pos:start="101:9" pos:end="101:60"><name pos:start="101:9" pos:end="101:14">memset</name><argument_list pos:start="101:15" pos:end="101:60">(<argument pos:start="101:16" pos:end="101:31"><expr pos:start="101:16" pos:end="101:31"><operator pos:start="101:16" pos:end="101:16">&amp;</operator><name pos:start="101:17" pos:end="101:31"><name pos:start="101:17" pos:end="101:17">s</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:31">segmentation</name></name></expr></argument>, <argument pos:start="101:34" pos:end="101:34"><expr pos:start="101:34" pos:end="101:34"><literal type="number" pos:start="101:34" pos:end="101:34">0</literal></expr></argument>, <argument pos:start="101:37" pos:end="101:59"><expr pos:start="101:37" pos:end="101:59"><sizeof pos:start="101:37" pos:end="101:59">sizeof<argument_list pos:start="101:43" pos:end="101:59">(<argument pos:start="101:44" pos:end="101:58"><expr pos:start="101:44" pos:end="101:58"><name pos:start="101:44" pos:end="101:58"><name pos:start="101:44" pos:end="101:44">s</name><operator pos:start="101:45" pos:end="101:46">-&gt;</operator><name pos:start="101:47" pos:end="101:58">segmentation</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="115:5"><if pos:start="107:5" pos:end="115:5">if <condition pos:start="107:8" pos:end="109:63">(<expr pos:start="107:9" pos:end="109:62"><operator pos:start="107:9" pos:end="107:9">!</operator><name pos:start="107:10" pos:end="107:28"><name pos:start="107:10" pos:end="107:10">s</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:28">macroblocks_base</name></name> <operator pos:start="107:30" pos:end="107:31">||</operator> <comment type="block" pos:start="107:33" pos:end="107:49">/* first frame */</comment>

        <name pos:start="109:9" pos:end="109:13">width</name> <operator pos:start="109:15" pos:end="109:16">!=</operator> <name pos:start="109:18" pos:end="109:32"><name pos:start="109:18" pos:end="109:18">s</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:25">avctx</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:32">width</name></name> <operator pos:start="109:34" pos:end="109:35">||</operator> <name pos:start="109:37" pos:end="109:42">height</name> <operator pos:start="109:44" pos:end="109:45">!=</operator> <name pos:start="109:47" pos:end="109:62"><name pos:start="109:47" pos:end="109:47">s</name><operator pos:start="109:48" pos:end="109:49">-&gt;</operator><name pos:start="109:50" pos:end="109:54">avctx</name><operator pos:start="109:55" pos:end="109:56">-&gt;</operator><name pos:start="109:57" pos:end="109:62">height</name></name></expr>)</condition> <block pos:start="109:65" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:23">

        <if_stmt pos:start="111:9" pos:end="113:23"><if pos:start="111:9" pos:end="113:23">if <condition pos:start="111:12" pos:end="111:60">(<expr pos:start="111:13" pos:end="111:59"><operator pos:start="111:13" pos:end="111:13">(</operator><name pos:start="111:14" pos:end="111:16">ret</name> <operator pos:start="111:18" pos:end="111:18">=</operator> <call pos:start="111:20" pos:end="111:54"><name pos:start="111:20" pos:end="111:36">update_dimensions</name><argument_list pos:start="111:37" pos:end="111:54">(<argument pos:start="111:38" pos:end="111:38"><expr pos:start="111:38" pos:end="111:38"><name pos:start="111:38" pos:end="111:38">s</name></expr></argument>, <argument pos:start="111:41" pos:end="111:45"><expr pos:start="111:41" pos:end="111:45"><name pos:start="111:41" pos:end="111:45">width</name></expr></argument>, <argument pos:start="111:48" pos:end="111:53"><expr pos:start="111:48" pos:end="111:53"><name pos:start="111:48" pos:end="111:53">height</name></expr></argument>)</argument_list></call><operator pos:start="111:55" pos:end="111:55">)</operator> <operator pos:start="111:57" pos:end="111:57">&lt;</operator> <literal type="number" pos:start="111:59" pos:end="111:59">0</literal></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:23"><block_content pos:start="113:13" pos:end="113:23">

            <return pos:start="113:13" pos:end="113:23">return <expr pos:start="113:20" pos:end="113:22"><name pos:start="113:20" pos:end="113:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:52"><expr pos:start="119:5" pos:end="119:51"><call pos:start="119:5" pos:end="119:51"><name pos:start="119:5" pos:end="119:30">ff_vp56_init_range_decoder</name><argument_list pos:start="119:31" pos:end="119:51">(<argument pos:start="119:32" pos:end="119:32"><expr pos:start="119:32" pos:end="119:32"><name pos:start="119:32" pos:end="119:32">c</name></expr></argument>, <argument pos:start="119:35" pos:end="119:37"><expr pos:start="119:35" pos:end="119:37"><name pos:start="119:35" pos:end="119:37">buf</name></expr></argument>, <argument pos:start="119:40" pos:end="119:50"><expr pos:start="119:40" pos:end="119:50"><name pos:start="119:40" pos:end="119:50">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:28"><expr pos:start="121:5" pos:end="121:27"><name pos:start="121:5" pos:end="121:7">buf</name>      <operator pos:start="121:14" pos:end="121:15">+=</operator> <name pos:start="121:17" pos:end="121:27">header_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:28"><expr pos:start="123:5" pos:end="123:27"><name pos:start="123:5" pos:end="123:12">buf_size</name> <operator pos:start="123:14" pos:end="123:15">-=</operator> <name pos:start="123:17" pos:end="123:27">header_size</name></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="135:5"><if pos:start="127:5" pos:end="135:5">if <condition pos:start="127:8" pos:end="127:20">(<expr pos:start="127:9" pos:end="127:19"><name pos:start="127:9" pos:end="127:19"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:19">keyframe</name></name></expr>)</condition> <block pos:start="127:22" pos:end="135:5">{<block_content pos:start="129:9" pos:end="133:23">

        <if_stmt pos:start="129:9" pos:end="131:73"><if pos:start="129:9" pos:end="131:73">if <condition pos:start="129:12" pos:end="129:27">(<expr pos:start="129:13" pos:end="129:26"><call pos:start="129:13" pos:end="129:26"><name pos:start="129:13" pos:end="129:23">vp8_rac_get</name><argument_list pos:start="129:24" pos:end="129:26">(<argument pos:start="129:25" pos:end="129:25"><expr pos:start="129:25" pos:end="129:25"><name pos:start="129:25" pos:end="129:25">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:73"><block_content pos:start="131:13" pos:end="131:73">

            <expr_stmt pos:start="131:13" pos:end="131:73"><expr pos:start="131:13" pos:end="131:72"><call pos:start="131:13" pos:end="131:72"><name pos:start="131:13" pos:end="131:18">av_log</name><argument_list pos:start="131:19" pos:end="131:72">(<argument pos:start="131:20" pos:end="131:27"><expr pos:start="131:20" pos:end="131:27"><name pos:start="131:20" pos:end="131:27"><name pos:start="131:20" pos:end="131:20">s</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:27">avctx</name></name></expr></argument>, <argument pos:start="131:30" pos:end="131:43"><expr pos:start="131:30" pos:end="131:43"><name pos:start="131:30" pos:end="131:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="131:46" pos:end="131:71"><expr pos:start="131:46" pos:end="131:71"><literal type="string" pos:start="131:46" pos:end="131:71">"Unspecified colorspace\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:23"><expr pos:start="133:9" pos:end="133:22"><call pos:start="133:9" pos:end="133:22"><name pos:start="133:9" pos:end="133:19">vp8_rac_get</name><argument_list pos:start="133:20" pos:end="133:22">(<argument pos:start="133:21" pos:end="133:21"><expr pos:start="133:21" pos:end="133:21"><name pos:start="133:21" pos:end="133:21">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="133:25" pos:end="133:72">// whether we can skip clamping in dsp functions</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="139:5" pos:end="145:39"><if pos:start="139:5" pos:end="141:30">if <condition pos:start="139:8" pos:end="139:51">(<expr pos:start="139:9" pos:end="139:50"><operator pos:start="139:9" pos:end="139:9">(</operator><name pos:start="139:10" pos:end="139:32"><name pos:start="139:10" pos:end="139:10">s</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:24">segmentation</name><operator pos:start="139:25" pos:end="139:25">.</operator><name pos:start="139:26" pos:end="139:32">enabled</name></name> <operator pos:start="139:34" pos:end="139:34">=</operator> <call pos:start="139:36" pos:end="139:49"><name pos:start="139:36" pos:end="139:46">vp8_rac_get</name><argument_list pos:start="139:47" pos:end="139:49">(<argument pos:start="139:48" pos:end="139:48"><expr pos:start="139:48" pos:end="139:48"><name pos:start="139:48" pos:end="139:48">c</name></expr></argument>)</argument_list></call><operator pos:start="139:50" pos:end="139:50">)</operator></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:30"><block_content pos:start="141:9" pos:end="141:30">

        <expr_stmt pos:start="141:9" pos:end="141:30"><expr pos:start="141:9" pos:end="141:29"><call pos:start="141:9" pos:end="141:29"><name pos:start="141:9" pos:end="141:26">parse_segment_info</name><argument_list pos:start="141:27" pos:end="141:29">(<argument pos:start="141:28" pos:end="141:28"><expr pos:start="141:28" pos:end="141:28"><name pos:start="141:28" pos:end="141:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="143:5" pos:end="145:39">else<block type="pseudo" pos:start="145:9" pos:end="145:39"><block_content pos:start="145:9" pos:end="145:39">

        <expr_stmt pos:start="145:9" pos:end="145:39"><expr pos:start="145:9" pos:end="145:38"><name pos:start="145:9" pos:end="145:34"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:23">segmentation</name><operator pos:start="145:24" pos:end="145:24">.</operator><name pos:start="145:25" pos:end="145:34">update_map</name></name> <operator pos:start="145:36" pos:end="145:36">=</operator> <literal type="number" pos:start="145:38" pos:end="145:38">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="145:41" pos:end="145:82">// FIXME: move this to some init function?</comment>



    <expr_stmt pos:start="149:5" pos:end="149:41"><expr pos:start="149:5" pos:end="149:40"><name pos:start="149:5" pos:end="149:20"><name pos:start="149:5" pos:end="149:5">s</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:13">filter</name><operator pos:start="149:14" pos:end="149:14">.</operator><name pos:start="149:15" pos:end="149:20">simple</name></name>    <operator pos:start="149:25" pos:end="149:25">=</operator> <call pos:start="149:27" pos:end="149:40"><name pos:start="149:27" pos:end="149:37">vp8_rac_get</name><argument_list pos:start="149:38" pos:end="149:40">(<argument pos:start="149:39" pos:end="149:39"><expr pos:start="149:39" pos:end="149:39"><name pos:start="149:39" pos:end="149:39">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:49"><expr pos:start="151:5" pos:end="151:48"><name pos:start="151:5" pos:end="151:19"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:13">filter</name><operator pos:start="151:14" pos:end="151:14">.</operator><name pos:start="151:15" pos:end="151:19">level</name></name>     <operator pos:start="151:25" pos:end="151:25">=</operator> <call pos:start="151:27" pos:end="151:48"><name pos:start="151:27" pos:end="151:42">vp8_rac_get_uint</name><argument_list pos:start="151:43" pos:end="151:48">(<argument pos:start="151:44" pos:end="151:44"><expr pos:start="151:44" pos:end="151:44"><name pos:start="151:44" pos:end="151:44">c</name></expr></argument>, <argument pos:start="151:47" pos:end="151:47"><expr pos:start="151:47" pos:end="151:47"><literal type="number" pos:start="151:47" pos:end="151:47">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:49"><expr pos:start="153:5" pos:end="153:48"><name pos:start="153:5" pos:end="153:23"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:13">filter</name><operator pos:start="153:14" pos:end="153:14">.</operator><name pos:start="153:15" pos:end="153:23">sharpness</name></name> <operator pos:start="153:25" pos:end="153:25">=</operator> <call pos:start="153:27" pos:end="153:48"><name pos:start="153:27" pos:end="153:42">vp8_rac_get_uint</name><argument_list pos:start="153:43" pos:end="153:48">(<argument pos:start="153:44" pos:end="153:44"><expr pos:start="153:44" pos:end="153:44"><name pos:start="153:44" pos:end="153:44">c</name></expr></argument>, <argument pos:start="153:47" pos:end="153:47"><expr pos:start="153:47" pos:end="153:47"><literal type="number" pos:start="153:47" pos:end="153:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="157:5" pos:end="161:32"><if pos:start="157:5" pos:end="161:32">if <condition pos:start="157:8" pos:end="157:47">(<expr pos:start="157:9" pos:end="157:46"><operator pos:start="157:9" pos:end="157:9">(</operator><name pos:start="157:10" pos:end="157:28"><name pos:start="157:10" pos:end="157:10">s</name><operator pos:start="157:11" pos:end="157:12">-&gt;</operator><name pos:start="157:13" pos:end="157:20">lf_delta</name><operator pos:start="157:21" pos:end="157:21">.</operator><name pos:start="157:22" pos:end="157:28">enabled</name></name> <operator pos:start="157:30" pos:end="157:30">=</operator> <call pos:start="157:32" pos:end="157:45"><name pos:start="157:32" pos:end="157:42">vp8_rac_get</name><argument_list pos:start="157:43" pos:end="157:45">(<argument pos:start="157:44" pos:end="157:44"><expr pos:start="157:44" pos:end="157:44"><name pos:start="157:44" pos:end="157:44">c</name></expr></argument>)</argument_list></call><operator pos:start="157:46" pos:end="157:46">)</operator></expr>)</condition><block type="pseudo" pos:start="159:9" pos:end="161:32"><block_content pos:start="159:9" pos:end="161:32">

        <if_stmt pos:start="159:9" pos:end="161:32"><if pos:start="159:9" pos:end="161:32">if <condition pos:start="159:12" pos:end="159:27">(<expr pos:start="159:13" pos:end="159:26"><call pos:start="159:13" pos:end="159:26"><name pos:start="159:13" pos:end="159:23">vp8_rac_get</name><argument_list pos:start="159:24" pos:end="159:26">(<argument pos:start="159:25" pos:end="159:25"><expr pos:start="159:25" pos:end="159:25"><name pos:start="159:25" pos:end="159:25">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:32"><block_content pos:start="161:13" pos:end="161:32">

            <expr_stmt pos:start="161:13" pos:end="161:32"><expr pos:start="161:13" pos:end="161:31"><call pos:start="161:13" pos:end="161:31"><name pos:start="161:13" pos:end="161:28">update_lf_deltas</name><argument_list pos:start="161:29" pos:end="161:31">(<argument pos:start="161:30" pos:end="161:30"><expr pos:start="161:30" pos:end="161:30"><name pos:start="161:30" pos:end="161:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="165:5" pos:end="171:5"><if pos:start="165:5" pos:end="171:5">if <condition pos:start="165:8" pos:end="165:43">(<expr pos:start="165:9" pos:end="165:42"><call pos:start="165:9" pos:end="165:42"><name pos:start="165:9" pos:end="165:24">setup_partitions</name><argument_list pos:start="165:25" pos:end="165:42">(<argument pos:start="165:26" pos:end="165:26"><expr pos:start="165:26" pos:end="165:26"><name pos:start="165:26" pos:end="165:26">s</name></expr></argument>, <argument pos:start="165:29" pos:end="165:31"><expr pos:start="165:29" pos:end="165:31"><name pos:start="165:29" pos:end="165:31">buf</name></expr></argument>, <argument pos:start="165:34" pos:end="165:41"><expr pos:start="165:34" pos:end="165:41"><name pos:start="165:34" pos:end="165:41">buf_size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="165:45" pos:end="171:5">{<block_content pos:start="167:9" pos:end="169:35">

        <expr_stmt pos:start="167:9" pos:end="167:63"><expr pos:start="167:9" pos:end="167:62"><call pos:start="167:9" pos:end="167:62"><name pos:start="167:9" pos:end="167:14">av_log</name><argument_list pos:start="167:15" pos:end="167:62">(<argument pos:start="167:16" pos:end="167:23"><expr pos:start="167:16" pos:end="167:23"><name pos:start="167:16" pos:end="167:23"><name pos:start="167:16" pos:end="167:16">s</name><operator pos:start="167:17" pos:end="167:18">-&gt;</operator><name pos:start="167:19" pos:end="167:23">avctx</name></name></expr></argument>, <argument pos:start="167:26" pos:end="167:37"><expr pos:start="167:26" pos:end="167:37"><name pos:start="167:26" pos:end="167:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="167:40" pos:end="167:61"><expr pos:start="167:40" pos:end="167:61"><literal type="string" pos:start="167:40" pos:end="167:61">"Invalid partitions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="169:9" pos:end="169:35">return <expr pos:start="169:16" pos:end="169:34"><name pos:start="169:16" pos:end="169:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:18"><expr pos:start="175:5" pos:end="175:17"><call pos:start="175:5" pos:end="175:17"><name pos:start="175:5" pos:end="175:14">get_quants</name><argument_list pos:start="175:15" pos:end="175:17">(<argument pos:start="175:16" pos:end="175:16"><expr pos:start="175:16" pos:end="175:16"><name pos:start="175:16" pos:end="175:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="179:5" pos:end="187:5"><if pos:start="179:5" pos:end="187:5">if <condition pos:start="179:8" pos:end="179:21">(<expr pos:start="179:9" pos:end="179:20"><operator pos:start="179:9" pos:end="179:9">!</operator><name pos:start="179:10" pos:end="179:20"><name pos:start="179:10" pos:end="179:10">s</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:20">keyframe</name></name></expr>)</condition> <block pos:start="179:23" pos:end="187:5">{<block_content pos:start="181:9" pos:end="185:71">

        <expr_stmt pos:start="181:9" pos:end="181:23"><expr pos:start="181:9" pos:end="181:22"><call pos:start="181:9" pos:end="181:22"><name pos:start="181:9" pos:end="181:19">update_refs</name><argument_list pos:start="181:20" pos:end="181:22">(<argument pos:start="181:21" pos:end="181:21"><expr pos:start="181:21" pos:end="181:21"><name pos:start="181:21" pos:end="181:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:71"><expr pos:start="183:9" pos:end="183:70"><name pos:start="183:9" pos:end="183:39"><name pos:start="183:9" pos:end="183:9">s</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:20">sign_bias</name><index pos:start="183:21" pos:end="183:39">[<expr pos:start="183:22" pos:end="183:38"><name pos:start="183:22" pos:end="183:38">VP56_FRAME_GOLDEN</name></expr>]</index></name>               <operator pos:start="183:55" pos:end="183:55">=</operator> <call pos:start="183:57" pos:end="183:70"><name pos:start="183:57" pos:end="183:67">vp8_rac_get</name><argument_list pos:start="183:68" pos:end="183:70">(<argument pos:start="183:69" pos:end="183:69"><expr pos:start="183:69" pos:end="183:69"><name pos:start="183:69" pos:end="183:69">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:71"><expr pos:start="185:9" pos:end="185:70"><name pos:start="185:9" pos:end="185:53"><name pos:start="185:9" pos:end="185:9">s</name><operator pos:start="185:10" pos:end="185:11">-&gt;</operator><name pos:start="185:12" pos:end="185:20">sign_bias</name><index pos:start="185:21" pos:end="185:53">[<expr pos:start="185:22" pos:end="185:39"><name pos:start="185:22" pos:end="185:39">VP56_FRAME_GOLDEN2</name></expr> <comment type="block" pos:start="185:41" pos:end="185:52">/* altref */</comment>]</index></name> <operator pos:start="185:55" pos:end="185:55">=</operator> <call pos:start="185:57" pos:end="185:70"><name pos:start="185:57" pos:end="185:67">vp8_rac_get</name><argument_list pos:start="185:68" pos:end="185:70">(<argument pos:start="185:69" pos:end="185:69"><expr pos:start="185:69" pos:end="185:69"><name pos:start="185:69" pos:end="185:69">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="191:5" pos:end="191:72">// if we aren't saving this frame's probabilities for future frames,</comment>

    <comment type="line" pos:start="193:5" pos:end="193:47">// make a copy of the current probabilities</comment>

    <if_stmt pos:start="195:5" pos:end="197:32"><if pos:start="195:5" pos:end="197:32">if <condition pos:start="195:8" pos:end="195:52">(<expr pos:start="195:9" pos:end="195:51"><operator pos:start="195:9" pos:end="195:9">!</operator><operator pos:start="195:10" pos:end="195:10">(</operator><name pos:start="195:11" pos:end="195:33"><name pos:start="195:11" pos:end="195:11">s</name><operator pos:start="195:12" pos:end="195:13">-&gt;</operator><name pos:start="195:14" pos:end="195:33">update_probabilities</name></name> <operator pos:start="195:35" pos:end="195:35">=</operator> <call pos:start="195:37" pos:end="195:50"><name pos:start="195:37" pos:end="195:47">vp8_rac_get</name><argument_list pos:start="195:48" pos:end="195:50">(<argument pos:start="195:49" pos:end="195:49"><expr pos:start="195:49" pos:end="195:49"><name pos:start="195:49" pos:end="195:49">c</name></expr></argument>)</argument_list></call><operator pos:start="195:51" pos:end="195:51">)</operator></expr>)</condition><block type="pseudo" pos:start="197:9" pos:end="197:32"><block_content pos:start="197:9" pos:end="197:32">

        <expr_stmt pos:start="197:9" pos:end="197:32"><expr pos:start="197:9" pos:end="197:31"><name pos:start="197:9" pos:end="197:18"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:15">prob</name><index pos:start="197:16" pos:end="197:18">[<expr pos:start="197:17" pos:end="197:17"><literal type="number" pos:start="197:17" pos:end="197:17">1</literal></expr>]</index></name> <operator pos:start="197:20" pos:end="197:20">=</operator> <name pos:start="197:22" pos:end="197:31"><name pos:start="197:22" pos:end="197:22">s</name><operator pos:start="197:23" pos:end="197:24">-&gt;</operator><name pos:start="197:25" pos:end="197:28">prob</name><index pos:start="197:29" pos:end="197:31">[<expr pos:start="197:30" pos:end="197:30"><literal type="number" pos:start="197:30" pos:end="197:30">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="201:5" pos:end="201:51"><expr pos:start="201:5" pos:end="201:50"><name pos:start="201:5" pos:end="201:18"><name pos:start="201:5" pos:end="201:5">s</name><operator pos:start="201:6" pos:end="201:7">-&gt;</operator><name pos:start="201:8" pos:end="201:18">update_last</name></name> <operator pos:start="201:20" pos:end="201:20">=</operator> <name pos:start="201:22" pos:end="201:32"><name pos:start="201:22" pos:end="201:22">s</name><operator pos:start="201:23" pos:end="201:24">-&gt;</operator><name pos:start="201:25" pos:end="201:32">keyframe</name></name> <operator pos:start="201:34" pos:end="201:35">||</operator> <call pos:start="201:37" pos:end="201:50"><name pos:start="201:37" pos:end="201:47">vp8_rac_get</name><argument_list pos:start="201:48" pos:end="201:50">(<argument pos:start="201:49" pos:end="201:49"><expr pos:start="201:49" pos:end="201:49"><name pos:start="201:49" pos:end="201:49">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="205:5" pos:end="221:21">for <control pos:start="205:9" pos:end="205:27">(<init pos:start="205:10" pos:end="205:15"><expr pos:start="205:10" pos:end="205:14"><name pos:start="205:10" pos:end="205:10">i</name> <operator pos:start="205:12" pos:end="205:12">=</operator> <literal type="number" pos:start="205:14" pos:end="205:14">0</literal></expr>;</init> <condition pos:start="205:17" pos:end="205:22"><expr pos:start="205:17" pos:end="205:21"><name pos:start="205:17" pos:end="205:17">i</name> <operator pos:start="205:19" pos:end="205:19">&lt;</operator> <literal type="number" pos:start="205:21" pos:end="205:21">4</literal></expr>;</condition> <incr pos:start="205:24" pos:end="205:26"><expr pos:start="205:24" pos:end="205:26"><name pos:start="205:24" pos:end="205:24">i</name><operator pos:start="205:25" pos:end="205:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="207:9" pos:end="221:21"><block_content pos:start="207:9" pos:end="221:21">

        <for pos:start="207:9" pos:end="221:21">for <control pos:start="207:13" pos:end="207:31">(<init pos:start="207:14" pos:end="207:19"><expr pos:start="207:14" pos:end="207:18"><name pos:start="207:14" pos:end="207:14">j</name> <operator pos:start="207:16" pos:end="207:16">=</operator> <literal type="number" pos:start="207:18" pos:end="207:18">0</literal></expr>;</init> <condition pos:start="207:21" pos:end="207:26"><expr pos:start="207:21" pos:end="207:25"><name pos:start="207:21" pos:end="207:21">j</name> <operator pos:start="207:23" pos:end="207:23">&lt;</operator> <literal type="number" pos:start="207:25" pos:end="207:25">8</literal></expr>;</condition> <incr pos:start="207:28" pos:end="207:30"><expr pos:start="207:28" pos:end="207:30"><name pos:start="207:28" pos:end="207:28">j</name><operator pos:start="207:29" pos:end="207:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="209:13" pos:end="221:21"><block_content pos:start="209:13" pos:end="221:21">

            <for pos:start="209:13" pos:end="221:21">for <control pos:start="209:17" pos:end="209:35">(<init pos:start="209:18" pos:end="209:23"><expr pos:start="209:18" pos:end="209:22"><name pos:start="209:18" pos:end="209:18">k</name> <operator pos:start="209:20" pos:end="209:20">=</operator> <literal type="number" pos:start="209:22" pos:end="209:22">0</literal></expr>;</init> <condition pos:start="209:25" pos:end="209:30"><expr pos:start="209:25" pos:end="209:29"><name pos:start="209:25" pos:end="209:25">k</name> <operator pos:start="209:27" pos:end="209:27">&lt;</operator> <literal type="number" pos:start="209:29" pos:end="209:29">3</literal></expr>;</condition> <incr pos:start="209:32" pos:end="209:34"><expr pos:start="209:32" pos:end="209:34"><name pos:start="209:32" pos:end="209:32">k</name><operator pos:start="209:33" pos:end="209:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="211:17" pos:end="221:21"><block_content pos:start="211:17" pos:end="221:21">

                <for pos:start="211:17" pos:end="221:21">for <control pos:start="211:21" pos:end="211:54">(<init pos:start="211:22" pos:end="211:27"><expr pos:start="211:22" pos:end="211:26"><name pos:start="211:22" pos:end="211:22">l</name> <operator pos:start="211:24" pos:end="211:24">=</operator> <literal type="number" pos:start="211:26" pos:end="211:26">0</literal></expr>;</init> <condition pos:start="211:29" pos:end="211:49"><expr pos:start="211:29" pos:end="211:48"><name pos:start="211:29" pos:end="211:29">l</name> <operator pos:start="211:31" pos:end="211:31">&lt;</operator> <name pos:start="211:33" pos:end="211:46">NUM_DCT_TOKENS</name><operator pos:start="211:47" pos:end="211:47">-</operator><literal type="number" pos:start="211:48" pos:end="211:48">1</literal></expr>;</condition> <incr pos:start="211:51" pos:end="211:53"><expr pos:start="211:51" pos:end="211:53"><name pos:start="211:51" pos:end="211:51">l</name><operator pos:start="211:52" pos:end="211:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="213:21" pos:end="221:21"><block_content pos:start="213:21" pos:end="221:21">

                    <if_stmt pos:start="213:21" pos:end="221:21"><if pos:start="213:21" pos:end="221:21">if <condition pos:start="213:24" pos:end="213:89">(<expr pos:start="213:25" pos:end="213:88"><call pos:start="213:25" pos:end="213:88"><name pos:start="213:25" pos:end="213:49">vp56_rac_get_prob_branchy</name><argument_list pos:start="213:50" pos:end="213:88">(<argument pos:start="213:51" pos:end="213:51"><expr pos:start="213:51" pos:end="213:51"><name pos:start="213:51" pos:end="213:51">c</name></expr></argument>, <argument pos:start="213:54" pos:end="213:87"><expr pos:start="213:54" pos:end="213:87"><name pos:start="213:54" pos:end="213:87"><name pos:start="213:54" pos:end="213:75">vp8_token_update_probs</name><index pos:start="213:76" pos:end="213:78">[<expr pos:start="213:77" pos:end="213:77"><name pos:start="213:77" pos:end="213:77">i</name></expr>]</index><index pos:start="213:79" pos:end="213:81">[<expr pos:start="213:80" pos:end="213:80"><name pos:start="213:80" pos:end="213:80">j</name></expr>]</index><index pos:start="213:82" pos:end="213:84">[<expr pos:start="213:83" pos:end="213:83"><name pos:start="213:83" pos:end="213:83">k</name></expr>]</index><index pos:start="213:85" pos:end="213:87">[<expr pos:start="213:86" pos:end="213:86"><name pos:start="213:86" pos:end="213:86">l</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="213:91" pos:end="221:21">{<block_content pos:start="215:25" pos:end="219:89">

                        <decl_stmt pos:start="215:25" pos:end="215:58"><decl pos:start="215:25" pos:end="215:57"><type pos:start="215:25" pos:end="215:27"><name pos:start="215:25" pos:end="215:27">int</name></type> <name pos:start="215:29" pos:end="215:32">prob</name> <init pos:start="215:34" pos:end="215:57">= <expr pos:start="215:36" pos:end="215:57"><call pos:start="215:36" pos:end="215:57"><name pos:start="215:36" pos:end="215:51">vp8_rac_get_uint</name><argument_list pos:start="215:52" pos:end="215:57">(<argument pos:start="215:53" pos:end="215:53"><expr pos:start="215:53" pos:end="215:53"><name pos:start="215:53" pos:end="215:53">c</name></expr></argument>, <argument pos:start="215:56" pos:end="215:56"><expr pos:start="215:56" pos:end="215:56"><literal type="number" pos:start="215:56" pos:end="215:56">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <for pos:start="217:25" pos:end="219:89">for <control pos:start="217:29" pos:end="217:75">(<init pos:start="217:30" pos:end="217:35"><expr pos:start="217:30" pos:end="217:34"><name pos:start="217:30" pos:end="217:30">m</name> <operator pos:start="217:32" pos:end="217:32">=</operator> <literal type="number" pos:start="217:34" pos:end="217:34">0</literal></expr>;</init> <condition pos:start="217:37" pos:end="217:70"><expr pos:start="217:37" pos:end="217:69"><name pos:start="217:37" pos:end="217:64"><name pos:start="217:37" pos:end="217:58">vp8_coeff_band_indexes</name><index pos:start="217:59" pos:end="217:61">[<expr pos:start="217:60" pos:end="217:60"><name pos:start="217:60" pos:end="217:60">j</name></expr>]</index><index pos:start="217:62" pos:end="217:64">[<expr pos:start="217:63" pos:end="217:63"><name pos:start="217:63" pos:end="217:63">m</name></expr>]</index></name> <operator pos:start="217:66" pos:end="217:67">&gt;=</operator> <literal type="number" pos:start="217:69" pos:end="217:69">0</literal></expr>;</condition> <incr pos:start="217:72" pos:end="217:74"><expr pos:start="217:72" pos:end="217:74"><name pos:start="217:72" pos:end="217:72">m</name><operator pos:start="217:73" pos:end="217:74">++</operator></expr></incr>)</control><block type="pseudo" pos:start="219:29" pos:end="219:89"><block_content pos:start="219:29" pos:end="219:89">

                            <expr_stmt pos:start="219:29" pos:end="219:89"><expr pos:start="219:29" pos:end="219:88"><name pos:start="219:29" pos:end="219:81"><name pos:start="219:29" pos:end="219:29">s</name><operator pos:start="219:30" pos:end="219:31">-&gt;</operator><name pos:start="219:32" pos:end="219:35">prob</name><operator pos:start="219:36" pos:end="219:37">-&gt;</operator><name pos:start="219:38" pos:end="219:42">token</name><index pos:start="219:43" pos:end="219:45">[<expr pos:start="219:44" pos:end="219:44"><name pos:start="219:44" pos:end="219:44">i</name></expr>]</index><index pos:start="219:46" pos:end="219:75">[<expr pos:start="219:47" pos:end="219:74"><name pos:start="219:47" pos:end="219:74"><name pos:start="219:47" pos:end="219:68">vp8_coeff_band_indexes</name><index pos:start="219:69" pos:end="219:71">[<expr pos:start="219:70" pos:end="219:70"><name pos:start="219:70" pos:end="219:70">j</name></expr>]</index><index pos:start="219:72" pos:end="219:74">[<expr pos:start="219:73" pos:end="219:73"><name pos:start="219:73" pos:end="219:73">m</name></expr>]</index></name></expr>]</index><index pos:start="219:76" pos:end="219:78">[<expr pos:start="219:77" pos:end="219:77"><name pos:start="219:77" pos:end="219:77">k</name></expr>]</index><index pos:start="219:79" pos:end="219:81">[<expr pos:start="219:80" pos:end="219:80"><name pos:start="219:80" pos:end="219:80">l</name></expr>]</index></name> <operator pos:start="219:83" pos:end="219:83">=</operator> <name pos:start="219:85" pos:end="219:88">prob</name></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></for>



    <if_stmt pos:start="225:5" pos:end="227:49"><if pos:start="225:5" pos:end="227:49">if <condition pos:start="225:8" pos:end="225:45">(<expr pos:start="225:9" pos:end="225:44"><operator pos:start="225:9" pos:end="225:9">(</operator><name pos:start="225:10" pos:end="225:26"><name pos:start="225:10" pos:end="225:10">s</name><operator pos:start="225:11" pos:end="225:12">-&gt;</operator><name pos:start="225:13" pos:end="225:26">mbskip_enabled</name></name> <operator pos:start="225:28" pos:end="225:28">=</operator> <call pos:start="225:30" pos:end="225:43"><name pos:start="225:30" pos:end="225:40">vp8_rac_get</name><argument_list pos:start="225:41" pos:end="225:43">(<argument pos:start="225:42" pos:end="225:42"><expr pos:start="225:42" pos:end="225:42"><name pos:start="225:42" pos:end="225:42">c</name></expr></argument>)</argument_list></call><operator pos:start="225:44" pos:end="225:44">)</operator></expr>)</condition><block type="pseudo" pos:start="227:9" pos:end="227:49"><block_content pos:start="227:9" pos:end="227:49">

        <expr_stmt pos:start="227:9" pos:end="227:49"><expr pos:start="227:9" pos:end="227:48"><name pos:start="227:9" pos:end="227:23"><name pos:start="227:9" pos:end="227:9">s</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:15">prob</name><operator pos:start="227:16" pos:end="227:17">-&gt;</operator><name pos:start="227:18" pos:end="227:23">mbskip</name></name> <operator pos:start="227:25" pos:end="227:25">=</operator> <call pos:start="227:27" pos:end="227:48"><name pos:start="227:27" pos:end="227:42">vp8_rac_get_uint</name><argument_list pos:start="227:43" pos:end="227:48">(<argument pos:start="227:44" pos:end="227:44"><expr pos:start="227:44" pos:end="227:44"><name pos:start="227:44" pos:end="227:44">c</name></expr></argument>, <argument pos:start="227:47" pos:end="227:47"><expr pos:start="227:47" pos:end="227:47"><literal type="number" pos:start="227:47" pos:end="227:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="231:5" pos:end="265:5"><if pos:start="231:5" pos:end="265:5">if <condition pos:start="231:8" pos:end="231:21">(<expr pos:start="231:9" pos:end="231:20"><operator pos:start="231:9" pos:end="231:9">!</operator><name pos:start="231:10" pos:end="231:20"><name pos:start="231:10" pos:end="231:10">s</name><operator pos:start="231:11" pos:end="231:12">-&gt;</operator><name pos:start="231:13" pos:end="231:20">keyframe</name></name></expr>)</condition> <block pos:start="231:23" pos:end="265:5">{<block_content pos:start="233:9" pos:end="263:59">

        <expr_stmt pos:start="233:9" pos:end="233:49"><expr pos:start="233:9" pos:end="233:48"><name pos:start="233:9" pos:end="233:22"><name pos:start="233:9" pos:end="233:9">s</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:15">prob</name><operator pos:start="233:16" pos:end="233:17">-&gt;</operator><name pos:start="233:18" pos:end="233:22">intra</name></name>  <operator pos:start="233:25" pos:end="233:25">=</operator> <call pos:start="233:27" pos:end="233:48"><name pos:start="233:27" pos:end="233:42">vp8_rac_get_uint</name><argument_list pos:start="233:43" pos:end="233:48">(<argument pos:start="233:44" pos:end="233:44"><expr pos:start="233:44" pos:end="233:44"><name pos:start="233:44" pos:end="233:44">c</name></expr></argument>, <argument pos:start="233:47" pos:end="233:47"><expr pos:start="233:47" pos:end="233:47"><literal type="number" pos:start="233:47" pos:end="233:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:49"><expr pos:start="235:9" pos:end="235:48"><name pos:start="235:9" pos:end="235:21"><name pos:start="235:9" pos:end="235:9">s</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:15">prob</name><operator pos:start="235:16" pos:end="235:17">-&gt;</operator><name pos:start="235:18" pos:end="235:21">last</name></name>   <operator pos:start="235:25" pos:end="235:25">=</operator> <call pos:start="235:27" pos:end="235:48"><name pos:start="235:27" pos:end="235:42">vp8_rac_get_uint</name><argument_list pos:start="235:43" pos:end="235:48">(<argument pos:start="235:44" pos:end="235:44"><expr pos:start="235:44" pos:end="235:44"><name pos:start="235:44" pos:end="235:44">c</name></expr></argument>, <argument pos:start="235:47" pos:end="235:47"><expr pos:start="235:47" pos:end="235:47"><literal type="number" pos:start="235:47" pos:end="235:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:49"><expr pos:start="237:9" pos:end="237:48"><name pos:start="237:9" pos:end="237:23"><name pos:start="237:9" pos:end="237:9">s</name><operator pos:start="237:10" pos:end="237:11">-&gt;</operator><name pos:start="237:12" pos:end="237:15">prob</name><operator pos:start="237:16" pos:end="237:17">-&gt;</operator><name pos:start="237:18" pos:end="237:23">golden</name></name> <operator pos:start="237:25" pos:end="237:25">=</operator> <call pos:start="237:27" pos:end="237:48"><name pos:start="237:27" pos:end="237:42">vp8_rac_get_uint</name><argument_list pos:start="237:43" pos:end="237:48">(<argument pos:start="237:44" pos:end="237:44"><expr pos:start="237:44" pos:end="237:44"><name pos:start="237:44" pos:end="237:44">c</name></expr></argument>, <argument pos:start="237:47" pos:end="237:47"><expr pos:start="237:47" pos:end="237:47"><literal type="number" pos:start="237:47" pos:end="237:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="241:9" pos:end="245:63"><if pos:start="241:9" pos:end="245:63">if <condition pos:start="241:12" pos:end="241:27">(<expr pos:start="241:13" pos:end="241:26"><call pos:start="241:13" pos:end="241:26"><name pos:start="241:13" pos:end="241:23">vp8_rac_get</name><argument_list pos:start="241:24" pos:end="241:26">(<argument pos:start="241:25" pos:end="241:25"><expr pos:start="241:25" pos:end="241:25"><name pos:start="241:25" pos:end="241:25">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="243:13" pos:end="245:63"><block_content pos:start="243:13" pos:end="245:63">

            <for pos:start="243:13" pos:end="245:63">for <control pos:start="243:17" pos:end="243:35">(<init pos:start="243:18" pos:end="243:23"><expr pos:start="243:18" pos:end="243:22"><name pos:start="243:18" pos:end="243:18">i</name> <operator pos:start="243:20" pos:end="243:20">=</operator> <literal type="number" pos:start="243:22" pos:end="243:22">0</literal></expr>;</init> <condition pos:start="243:25" pos:end="243:30"><expr pos:start="243:25" pos:end="243:29"><name pos:start="243:25" pos:end="243:25">i</name> <operator pos:start="243:27" pos:end="243:27">&lt;</operator> <literal type="number" pos:start="243:29" pos:end="243:29">4</literal></expr>;</condition> <incr pos:start="243:32" pos:end="243:34"><expr pos:start="243:32" pos:end="243:34"><name pos:start="243:32" pos:end="243:32">i</name><operator pos:start="243:33" pos:end="243:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="245:17" pos:end="245:63"><block_content pos:start="245:17" pos:end="245:63">

                <expr_stmt pos:start="245:17" pos:end="245:63"><expr pos:start="245:17" pos:end="245:62"><name pos:start="245:17" pos:end="245:37"><name pos:start="245:17" pos:end="245:17">s</name><operator pos:start="245:18" pos:end="245:19">-&gt;</operator><name pos:start="245:20" pos:end="245:23">prob</name><operator pos:start="245:24" pos:end="245:25">-&gt;</operator><name pos:start="245:26" pos:end="245:34">pred16x16</name><index pos:start="245:35" pos:end="245:37">[<expr pos:start="245:36" pos:end="245:36"><name pos:start="245:36" pos:end="245:36">i</name></expr>]</index></name> <operator pos:start="245:39" pos:end="245:39">=</operator> <call pos:start="245:41" pos:end="245:62"><name pos:start="245:41" pos:end="245:56">vp8_rac_get_uint</name><argument_list pos:start="245:57" pos:end="245:62">(<argument pos:start="245:58" pos:end="245:58"><expr pos:start="245:58" pos:end="245:58"><name pos:start="245:58" pos:end="245:58">c</name></expr></argument>, <argument pos:start="245:61" pos:end="245:61"><expr pos:start="245:61" pos:end="245:61"><literal type="number" pos:start="245:61" pos:end="245:61">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

        <if_stmt pos:start="247:9" pos:end="251:63"><if pos:start="247:9" pos:end="251:63">if <condition pos:start="247:12" pos:end="247:27">(<expr pos:start="247:13" pos:end="247:26"><call pos:start="247:13" pos:end="247:26"><name pos:start="247:13" pos:end="247:23">vp8_rac_get</name><argument_list pos:start="247:24" pos:end="247:26">(<argument pos:start="247:25" pos:end="247:25"><expr pos:start="247:25" pos:end="247:25"><name pos:start="247:25" pos:end="247:25">c</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="249:13" pos:end="251:63"><block_content pos:start="249:13" pos:end="251:63">

            <for pos:start="249:13" pos:end="251:63">for <control pos:start="249:17" pos:end="249:35">(<init pos:start="249:18" pos:end="249:23"><expr pos:start="249:18" pos:end="249:22"><name pos:start="249:18" pos:end="249:18">i</name> <operator pos:start="249:20" pos:end="249:20">=</operator> <literal type="number" pos:start="249:22" pos:end="249:22">0</literal></expr>;</init> <condition pos:start="249:25" pos:end="249:30"><expr pos:start="249:25" pos:end="249:29"><name pos:start="249:25" pos:end="249:25">i</name> <operator pos:start="249:27" pos:end="249:27">&lt;</operator> <literal type="number" pos:start="249:29" pos:end="249:29">3</literal></expr>;</condition> <incr pos:start="249:32" pos:end="249:34"><expr pos:start="249:32" pos:end="249:34"><name pos:start="249:32" pos:end="249:32">i</name><operator pos:start="249:33" pos:end="249:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="251:17" pos:end="251:63"><block_content pos:start="251:17" pos:end="251:63">

                <expr_stmt pos:start="251:17" pos:end="251:63"><expr pos:start="251:17" pos:end="251:62"><name pos:start="251:17" pos:end="251:36"><name pos:start="251:17" pos:end="251:17">s</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:23">prob</name><operator pos:start="251:24" pos:end="251:25">-&gt;</operator><name pos:start="251:26" pos:end="251:33">pred8x8c</name><index pos:start="251:34" pos:end="251:36">[<expr pos:start="251:35" pos:end="251:35"><name pos:start="251:35" pos:end="251:35">i</name></expr>]</index></name>  <operator pos:start="251:39" pos:end="251:39">=</operator> <call pos:start="251:41" pos:end="251:62"><name pos:start="251:41" pos:end="251:56">vp8_rac_get_uint</name><argument_list pos:start="251:57" pos:end="251:62">(<argument pos:start="251:58" pos:end="251:58"><expr pos:start="251:58" pos:end="251:58"><name pos:start="251:58" pos:end="251:58">c</name></expr></argument>, <argument pos:start="251:61" pos:end="251:61"><expr pos:start="251:61" pos:end="251:61"><literal type="number" pos:start="251:61" pos:end="251:61">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>



        <comment type="line" pos:start="255:9" pos:end="255:37">// 17.2 MV probability update</comment>

        <for pos:start="257:9" pos:end="263:59">for <control pos:start="257:13" pos:end="257:31">(<init pos:start="257:14" pos:end="257:19"><expr pos:start="257:14" pos:end="257:18"><name pos:start="257:14" pos:end="257:14">i</name> <operator pos:start="257:16" pos:end="257:16">=</operator> <literal type="number" pos:start="257:18" pos:end="257:18">0</literal></expr>;</init> <condition pos:start="257:21" pos:end="257:26"><expr pos:start="257:21" pos:end="257:25"><name pos:start="257:21" pos:end="257:21">i</name> <operator pos:start="257:23" pos:end="257:23">&lt;</operator> <literal type="number" pos:start="257:25" pos:end="257:25">2</literal></expr>;</condition> <incr pos:start="257:28" pos:end="257:30"><expr pos:start="257:28" pos:end="257:30"><name pos:start="257:28" pos:end="257:28">i</name><operator pos:start="257:29" pos:end="257:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="259:13" pos:end="263:59"><block_content pos:start="259:13" pos:end="263:59">

            <for pos:start="259:13" pos:end="263:59">for <control pos:start="259:17" pos:end="259:36">(<init pos:start="259:18" pos:end="259:23"><expr pos:start="259:18" pos:end="259:22"><name pos:start="259:18" pos:end="259:18">j</name> <operator pos:start="259:20" pos:end="259:20">=</operator> <literal type="number" pos:start="259:22" pos:end="259:22">0</literal></expr>;</init> <condition pos:start="259:25" pos:end="259:31"><expr pos:start="259:25" pos:end="259:30"><name pos:start="259:25" pos:end="259:25">j</name> <operator pos:start="259:27" pos:end="259:27">&lt;</operator> <literal type="number" pos:start="259:29" pos:end="259:30">19</literal></expr>;</condition> <incr pos:start="259:33" pos:end="259:35"><expr pos:start="259:33" pos:end="259:35"><name pos:start="259:33" pos:end="259:33">j</name><operator pos:start="259:34" pos:end="259:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="261:17" pos:end="263:59"><block_content pos:start="261:17" pos:end="263:59">

                <if_stmt pos:start="261:17" pos:end="263:59"><if pos:start="261:17" pos:end="263:59">if <condition pos:start="261:20" pos:end="261:75">(<expr pos:start="261:21" pos:end="261:74"><call pos:start="261:21" pos:end="261:74"><name pos:start="261:21" pos:end="261:45">vp56_rac_get_prob_branchy</name><argument_list pos:start="261:46" pos:end="261:74">(<argument pos:start="261:47" pos:end="261:47"><expr pos:start="261:47" pos:end="261:47"><name pos:start="261:47" pos:end="261:47">c</name></expr></argument>, <argument pos:start="261:50" pos:end="261:73"><expr pos:start="261:50" pos:end="261:73"><name pos:start="261:50" pos:end="261:73"><name pos:start="261:50" pos:end="261:67">vp8_mv_update_prob</name><index pos:start="261:68" pos:end="261:70">[<expr pos:start="261:69" pos:end="261:69"><name pos:start="261:69" pos:end="261:69">i</name></expr>]</index><index pos:start="261:71" pos:end="261:73">[<expr pos:start="261:72" pos:end="261:72"><name pos:start="261:72" pos:end="261:72">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="263:21" pos:end="263:59"><block_content pos:start="263:21" pos:end="263:59">

                    <expr_stmt pos:start="263:21" pos:end="263:59"><expr pos:start="263:21" pos:end="263:58"><name pos:start="263:21" pos:end="263:38"><name pos:start="263:21" pos:end="263:21">s</name><operator pos:start="263:22" pos:end="263:23">-&gt;</operator><name pos:start="263:24" pos:end="263:27">prob</name><operator pos:start="263:28" pos:end="263:29">-&gt;</operator><name pos:start="263:30" pos:end="263:32">mvc</name><index pos:start="263:33" pos:end="263:35">[<expr pos:start="263:34" pos:end="263:34"><name pos:start="263:34" pos:end="263:34">i</name></expr>]</index><index pos:start="263:36" pos:end="263:38">[<expr pos:start="263:37" pos:end="263:37"><name pos:start="263:37" pos:end="263:37">j</name></expr>]</index></name> <operator pos:start="263:40" pos:end="263:40">=</operator> <call pos:start="263:42" pos:end="263:58"><name pos:start="263:42" pos:end="263:55">vp8_rac_get_nn</name><argument_list pos:start="263:56" pos:end="263:58">(<argument pos:start="263:57" pos:end="263:57"><expr pos:start="263:57" pos:end="263:57"><name pos:start="263:57" pos:end="263:57">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="269:5" pos:end="269:13">return <expr pos:start="269:12" pos:end="269:12"><literal type="number" pos:start="269:12" pos:end="269:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
