<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4470.c" pos:tabs="8"><function pos:start="1:1" pos:end="277:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">img_amend</name><parameter_list pos:start="1:21" pos:end="1:43">(<parameter pos:start="1:22" pos:end="1:29"><decl pos:start="1:22" pos:end="1:29"><type pos:start="1:22" pos:end="1:29"><name pos:start="1:22" pos:end="1:24">int</name></type> <name pos:start="1:26" pos:end="1:29">argc</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:35">char</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier><modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">argv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="277:1">{<block_content pos:start="5:5" pos:end="275:13">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">err</name> <init pos:start="5:16" pos:end="5:21">= <expr pos:start="5:18" pos:end="5:21"><name pos:start="5:18" pos:end="5:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">c</name></decl>, <decl pos:start="7:12" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:17">options</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">QemuOptsList</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:29">create_opts</name> <init pos:start="11:31" pos:end="11:36">= <expr pos:start="11:33" pos:end="11:36"><name pos:start="11:33" pos:end="11:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">QemuOpts</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:18">opts</name> <init pos:start="13:20" pos:end="13:25">= <expr pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:46"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:19">fmt</name> <init pos:start="15:21" pos:end="15:26">= <expr pos:start="15:23" pos:end="15:26"><name pos:start="15:23" pos:end="15:26">NULL</name></expr></init></decl>, <decl pos:start="15:29" pos:end="15:37"><type ref="prev" pos:start="15:5" pos:end="15:16"><modifier pos:start="15:29" pos:end="15:29">*</modifier></type><name pos:start="15:30" pos:end="15:37">filename</name></decl>, <decl pos:start="15:40" pos:end="15:45"><type ref="prev" pos:start="15:5" pos:end="15:16"><modifier pos:start="15:40" pos:end="15:40">*</modifier></type><name pos:start="15:41" pos:end="15:45">cache</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:41"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">bool</name></type> <name pos:start="19:10" pos:end="19:14">quiet</name> <init pos:start="19:16" pos:end="19:22">= <expr pos:start="19:18" pos:end="19:22"><name pos:start="19:18" pos:end="19:22">false</name></expr></init></decl>, <decl pos:start="19:25" pos:end="19:40"><type ref="prev" pos:start="19:5" pos:end="19:8"/><name pos:start="19:25" pos:end="19:32">progress</name> <init pos:start="19:34" pos:end="19:40">= <expr pos:start="19:36" pos:end="19:40"><name pos:start="19:36" pos:end="19:40">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:28"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:16">BlockBackend</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:21">blk</name> <init pos:start="21:23" pos:end="21:28">= <expr pos:start="21:25" pos:end="21:28"><name pos:start="21:25" pos:end="21:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:32"><decl pos:start="23:5" pos:end="23:31"><type pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:20">BlockDriverState</name> <modifier pos:start="23:22" pos:end="23:22">*</modifier></type><name pos:start="23:23" pos:end="23:24">bs</name> <init pos:start="23:26" pos:end="23:31">= <expr pos:start="23:28" pos:end="23:31"><name pos:start="23:28" pos:end="23:31">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:31"><expr pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:9">cache</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <name pos:start="27:13" pos:end="27:30">BDRV_DEFAULT_CACHE</name></expr>;</expr_stmt>

    <for pos:start="29:5" pos:end="105:5">for <control pos:start="29:9" pos:end="29:12">(<init pos:start="29:10" pos:end="29:10">;</init><condition pos:start="29:11" pos:end="29:11">;</condition><incr/>)</control> <block pos:start="29:14" pos:end="105:5">{<block_content pos:start="31:9" pos:end="103:9">

        <expr_stmt pos:start="31:9" pos:end="31:44"><expr pos:start="31:9" pos:end="31:43"><name pos:start="31:9" pos:end="31:9">c</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <call pos:start="31:13" pos:end="31:43"><name pos:start="31:13" pos:end="31:18">getopt</name><argument_list pos:start="31:19" pos:end="31:43">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">argc</name></expr></argument>, <argument pos:start="31:26" pos:end="31:29"><expr pos:start="31:26" pos:end="31:29"><name pos:start="31:26" pos:end="31:29">argv</name></expr></argument>, <argument pos:start="31:32" pos:end="31:42"><expr pos:start="31:32" pos:end="31:42"><literal type="string" pos:start="31:32" pos:end="31:42">"ho:f:t:pq"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:20">(<expr pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:13">c</name> <operator pos:start="33:15" pos:end="33:16">==</operator> <operator pos:start="33:18" pos:end="33:18">-</operator><literal type="number" pos:start="33:19" pos:end="33:19">1</literal></expr>)</condition> <block pos:start="33:22" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:18">

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="41:9" pos:end="103:9">switch <condition pos:start="41:16" pos:end="41:18">(<expr pos:start="41:17" pos:end="41:17"><name pos:start="41:17" pos:end="41:17">c</name></expr>)</condition> <block pos:start="41:20" pos:end="103:9">{<block_content pos:start="43:13" pos:end="101:22">

            <case pos:start="43:13" pos:end="43:21">case <expr pos:start="43:18" pos:end="43:20"><literal type="char" pos:start="43:18" pos:end="43:20">'h'</literal></expr>:</case>

            <case pos:start="45:13" pos:end="45:21">case <expr pos:start="45:18" pos:end="45:20"><literal type="char" pos:start="45:18" pos:end="45:20">'?'</literal></expr>:</case>

                <expr_stmt pos:start="47:17" pos:end="47:23"><expr pos:start="47:17" pos:end="47:22"><call pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:20">help</name><argument_list pos:start="47:21" pos:end="47:22">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="49:17" pos:end="49:22">break;</break>

            <case pos:start="51:13" pos:end="51:21">case <expr pos:start="51:18" pos:end="51:20"><literal type="char" pos:start="51:18" pos:end="51:20">'o'</literal></expr>:</case>

                <if_stmt pos:start="53:17" pos:end="61:17"><if pos:start="53:17" pos:end="61:17">if <condition pos:start="53:20" pos:end="53:50">(<expr pos:start="53:21" pos:end="53:49"><operator pos:start="53:21" pos:end="53:21">!</operator><call pos:start="53:22" pos:end="53:49"><name pos:start="53:22" pos:end="53:41">is_valid_option_list</name><argument_list pos:start="53:42" pos:end="53:49">(<argument pos:start="53:43" pos:end="53:48"><expr pos:start="53:43" pos:end="53:48"><name pos:start="53:43" pos:end="53:48">optarg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:52" pos:end="61:17">{<block_content pos:start="55:21" pos:end="59:29">

                    <expr_stmt pos:start="55:21" pos:end="55:68"><expr pos:start="55:21" pos:end="55:67"><call pos:start="55:21" pos:end="55:67"><name pos:start="55:21" pos:end="55:32">error_report</name><argument_list pos:start="55:33" pos:end="55:67">(<argument pos:start="55:34" pos:end="55:58"><expr pos:start="55:34" pos:end="55:58"><literal type="string" pos:start="55:34" pos:end="55:58">"Invalid option list: %s"</literal></expr></argument>, <argument pos:start="55:61" pos:end="55:66"><expr pos:start="55:61" pos:end="55:66"><name pos:start="55:61" pos:end="55:66">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:29"><expr pos:start="57:21" pos:end="57:28"><name pos:start="57:21" pos:end="57:23">ret</name> <operator pos:start="57:25" pos:end="57:25">=</operator> <operator pos:start="57:27" pos:end="57:27">-</operator><literal type="number" pos:start="57:28" pos:end="57:28">1</literal></expr>;</expr_stmt>

                    <goto pos:start="59:21" pos:end="59:29">goto <name pos:start="59:26" pos:end="59:28">out</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="63:17" pos:end="75:17"><if pos:start="63:17" pos:end="67:17">if <condition pos:start="63:20" pos:end="63:29">(<expr pos:start="63:21" pos:end="63:28"><operator pos:start="63:21" pos:end="63:21">!</operator><name pos:start="63:22" pos:end="63:28">options</name></expr>)</condition> <block pos:start="63:31" pos:end="67:17">{<block_content pos:start="65:21" pos:end="65:47">

                    <expr_stmt pos:start="65:21" pos:end="65:47"><expr pos:start="65:21" pos:end="65:46"><name pos:start="65:21" pos:end="65:27">options</name> <operator pos:start="65:29" pos:end="65:29">=</operator> <call pos:start="65:31" pos:end="65:46"><name pos:start="65:31" pos:end="65:38">g_strdup</name><argument_list pos:start="65:39" pos:end="65:46">(<argument pos:start="65:40" pos:end="65:45"><expr pos:start="65:40" pos:end="65:45"><name pos:start="65:40" pos:end="65:45">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="67:19" pos:end="75:17">else <block pos:start="67:24" pos:end="75:17">{<block_content pos:start="69:21" pos:end="73:40">

                    <decl_stmt pos:start="69:21" pos:end="69:48"><decl pos:start="69:21" pos:end="69:47"><type pos:start="69:21" pos:end="69:26"><name pos:start="69:21" pos:end="69:24">char</name> <modifier pos:start="69:26" pos:end="69:26">*</modifier></type><name pos:start="69:27" pos:end="69:37">old_options</name> <init pos:start="69:39" pos:end="69:47">= <expr pos:start="69:41" pos:end="69:47"><name pos:start="69:41" pos:end="69:47">options</name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:72"><expr pos:start="71:21" pos:end="71:71"><name pos:start="71:21" pos:end="71:27">options</name> <operator pos:start="71:29" pos:end="71:29">=</operator> <call pos:start="71:31" pos:end="71:71"><name pos:start="71:31" pos:end="71:45">g_strdup_printf</name><argument_list pos:start="71:46" pos:end="71:71">(<argument pos:start="71:47" pos:end="71:53"><expr pos:start="71:47" pos:end="71:53"><literal type="string" pos:start="71:47" pos:end="71:53">"%s,%s"</literal></expr></argument>, <argument pos:start="71:56" pos:end="71:62"><expr pos:start="71:56" pos:end="71:62"><name pos:start="71:56" pos:end="71:62">options</name></expr></argument>, <argument pos:start="71:65" pos:end="71:70"><expr pos:start="71:65" pos:end="71:70"><name pos:start="71:65" pos:end="71:70">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:40"><expr pos:start="73:21" pos:end="73:39"><call pos:start="73:21" pos:end="73:39"><name pos:start="73:21" pos:end="73:26">g_free</name><argument_list pos:start="73:27" pos:end="73:39">(<argument pos:start="73:28" pos:end="73:38"><expr pos:start="73:28" pos:end="73:38"><name pos:start="73:28" pos:end="73:38">old_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="77:17" pos:end="77:22">break;</break>

            <case pos:start="79:13" pos:end="79:21">case <expr pos:start="79:18" pos:end="79:20"><literal type="char" pos:start="79:18" pos:end="79:20">'f'</literal></expr>:</case>

                <expr_stmt pos:start="81:17" pos:end="81:29"><expr pos:start="81:17" pos:end="81:28"><name pos:start="81:17" pos:end="81:19">fmt</name> <operator pos:start="81:21" pos:end="81:21">=</operator> <name pos:start="81:23" pos:end="81:28">optarg</name></expr>;</expr_stmt>

                <break pos:start="83:17" pos:end="83:22">break;</break>

            <case pos:start="85:13" pos:end="85:21">case <expr pos:start="85:18" pos:end="85:20"><literal type="char" pos:start="85:18" pos:end="85:20">'t'</literal></expr>:</case>

                <expr_stmt pos:start="87:17" pos:end="87:31"><expr pos:start="87:17" pos:end="87:30"><name pos:start="87:17" pos:end="87:21">cache</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:30">optarg</name></expr>;</expr_stmt>

                <break pos:start="89:17" pos:end="89:22">break;</break>

            <case pos:start="91:13" pos:end="91:21">case <expr pos:start="91:18" pos:end="91:20"><literal type="char" pos:start="91:18" pos:end="91:20">'p'</literal></expr>:</case>

                <expr_stmt pos:start="93:17" pos:end="93:32"><expr pos:start="93:17" pos:end="93:31"><name pos:start="93:17" pos:end="93:24">progress</name> <operator pos:start="93:26" pos:end="93:26">=</operator> <name pos:start="93:28" pos:end="93:31">true</name></expr>;</expr_stmt>

                <break pos:start="95:17" pos:end="95:22">break;</break>

            <case pos:start="97:13" pos:end="97:21">case <expr pos:start="97:18" pos:end="97:20"><literal type="char" pos:start="97:18" pos:end="97:20">'q'</literal></expr>:</case>

                <expr_stmt pos:start="99:17" pos:end="99:29"><expr pos:start="99:17" pos:end="99:28"><name pos:start="99:17" pos:end="99:21">quiet</name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:28">true</name></expr>;</expr_stmt>

                <break pos:start="101:17" pos:end="101:22">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <if_stmt pos:start="109:5" pos:end="113:5"><if pos:start="109:5" pos:end="113:5">if <condition pos:start="109:8" pos:end="109:17">(<expr pos:start="109:9" pos:end="109:16"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:16">options</name></expr>)</condition> <block pos:start="109:19" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:48">

        <expr_stmt pos:start="111:9" pos:end="111:48"><expr pos:start="111:9" pos:end="111:47"><call pos:start="111:9" pos:end="111:47"><name pos:start="111:9" pos:end="111:18">error_exit</name><argument_list pos:start="111:19" pos:end="111:47">(<argument pos:start="111:20" pos:end="111:46"><expr pos:start="111:20" pos:end="111:46"><literal type="string" pos:start="111:20" pos:end="111:46">"Must specify options (-o)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="117:5" pos:end="121:5"><if pos:start="117:5" pos:end="121:5">if <condition pos:start="117:8" pos:end="117:14">(<expr pos:start="117:9" pos:end="117:13"><name pos:start="117:9" pos:end="117:13">quiet</name></expr>)</condition> <block pos:start="117:16" pos:end="121:5">{<block_content pos:start="119:9" pos:end="119:25">

        <expr_stmt pos:start="119:9" pos:end="119:25"><expr pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:16">progress</name> <operator pos:start="119:18" pos:end="119:18">=</operator> <name pos:start="119:20" pos:end="119:24">false</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:38"><expr pos:start="123:5" pos:end="123:37"><call pos:start="123:5" pos:end="123:37"><name pos:start="123:5" pos:end="123:22">qemu_progress_init</name><argument_list pos:start="123:23" pos:end="123:37">(<argument pos:start="123:24" pos:end="123:31"><expr pos:start="123:24" pos:end="123:31"><name pos:start="123:24" pos:end="123:31">progress</name></expr></argument>, <argument pos:start="123:34" pos:end="123:36"><expr pos:start="123:34" pos:end="123:36"><literal type="number" pos:start="123:34" pos:end="123:36">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:60"><expr pos:start="127:5" pos:end="127:59"><name pos:start="127:5" pos:end="127:12">filename</name> <operator pos:start="127:14" pos:end="127:14">=</operator> <ternary pos:start="127:16" pos:end="127:59"><condition pos:start="127:16" pos:end="127:37"><expr pos:start="127:16" pos:end="127:35"><operator pos:start="127:16" pos:end="127:16">(</operator><name pos:start="127:17" pos:end="127:22">optind</name> <operator pos:start="127:24" pos:end="127:25">==</operator> <name pos:start="127:27" pos:end="127:30">argc</name> <operator pos:start="127:32" pos:end="127:32">-</operator> <literal type="number" pos:start="127:34" pos:end="127:34">1</literal><operator pos:start="127:35" pos:end="127:35">)</operator></expr> ?</condition><then pos:start="127:39" pos:end="127:52"> <expr pos:start="127:39" pos:end="127:52"><name pos:start="127:39" pos:end="127:52"><name pos:start="127:39" pos:end="127:42">argv</name><index pos:start="127:43" pos:end="127:52">[<expr pos:start="127:44" pos:end="127:51"><name pos:start="127:44" pos:end="127:47">argc</name> <operator pos:start="127:49" pos:end="127:49">-</operator> <literal type="number" pos:start="127:51" pos:end="127:51">1</literal></expr>]</index></name></expr> </then><else pos:start="127:54" pos:end="127:59">: <expr pos:start="127:56" pos:end="127:59"><name pos:start="127:56" pos:end="127:59">NULL</name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="139:5"><if pos:start="129:5" pos:end="139:5">if <condition pos:start="129:8" pos:end="129:40">(<expr pos:start="129:9" pos:end="129:39"><name pos:start="129:9" pos:end="129:11">fmt</name> <operator pos:start="129:13" pos:end="129:14">&amp;&amp;</operator> <call pos:start="129:16" pos:end="129:39"><name pos:start="129:16" pos:end="129:30">has_help_option</name><argument_list pos:start="129:31" pos:end="129:39">(<argument pos:start="129:32" pos:end="129:38"><expr pos:start="129:32" pos:end="129:38"><name pos:start="129:32" pos:end="129:38">options</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:42" pos:end="139:5">{<block_content pos:start="135:9" pos:end="137:17">

        <comment type="block" pos:start="131:9" pos:end="133:44">/* If a format is explicitly specified (and possibly no filename is

         * given), print option help here */</comment>

        <expr_stmt pos:start="135:9" pos:end="135:53"><expr pos:start="135:9" pos:end="135:52"><name pos:start="135:9" pos:end="135:11">ret</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <call pos:start="135:15" pos:end="135:52"><name pos:start="135:15" pos:end="135:37">print_block_option_help</name><argument_list pos:start="135:38" pos:end="135:52">(<argument pos:start="135:39" pos:end="135:46"><expr pos:start="135:39" pos:end="135:46"><name pos:start="135:39" pos:end="135:46">filename</name></expr></argument>, <argument pos:start="135:49" pos:end="135:51"><expr pos:start="135:49" pos:end="135:51"><name pos:start="135:49" pos:end="135:51">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="137:9" pos:end="137:17">goto <name pos:start="137:14" pos:end="137:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="143:5" pos:end="151:5"><if pos:start="143:5" pos:end="151:5">if <condition pos:start="143:8" pos:end="143:27">(<expr pos:start="143:9" pos:end="143:26"><name pos:start="143:9" pos:end="143:14">optind</name> <operator pos:start="143:16" pos:end="143:17">!=</operator> <name pos:start="143:19" pos:end="143:22">argc</name> <operator pos:start="143:24" pos:end="143:24">-</operator> <literal type="number" pos:start="143:26" pos:end="143:26">1</literal></expr>)</condition> <block pos:start="143:29" pos:end="151:5">{<block_content pos:start="145:9" pos:end="149:17">

        <expr_stmt pos:start="145:9" pos:end="145:54"><expr pos:start="145:9" pos:end="145:53"><call pos:start="145:9" pos:end="145:53"><name pos:start="145:9" pos:end="145:20">error_report</name><argument_list pos:start="145:21" pos:end="145:53">(<argument pos:start="145:22" pos:end="145:52"><expr pos:start="145:22" pos:end="145:52"><literal type="string" pos:start="145:22" pos:end="145:52">"Expecting one image file name"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:17"><expr pos:start="147:9" pos:end="147:16"><name pos:start="147:9" pos:end="147:11">ret</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <operator pos:start="147:15" pos:end="147:15">-</operator><literal type="number" pos:start="147:16" pos:end="147:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="149:9" pos:end="149:17">goto <name pos:start="149:14" pos:end="149:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="155:5" pos:end="155:39"><expr pos:start="155:5" pos:end="155:38"><name pos:start="155:5" pos:end="155:9">flags</name> <operator pos:start="155:11" pos:end="155:11">=</operator> <name pos:start="155:13" pos:end="155:24">BDRV_O_FLAGS</name> <operator pos:start="155:26" pos:end="155:26">|</operator> <name pos:start="155:28" pos:end="155:38">BDRV_O_RDWR</name></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:48"><expr pos:start="157:5" pos:end="157:47"><name pos:start="157:5" pos:end="157:7">ret</name> <operator pos:start="157:9" pos:end="157:9">=</operator> <call pos:start="157:11" pos:end="157:47"><name pos:start="157:11" pos:end="157:32">bdrv_parse_cache_flags</name><argument_list pos:start="157:33" pos:end="157:47">(<argument pos:start="157:34" pos:end="157:38"><expr pos:start="157:34" pos:end="157:38"><name pos:start="157:34" pos:end="157:38">cache</name></expr></argument>, <argument pos:start="157:41" pos:end="157:46"><expr pos:start="157:41" pos:end="157:46"><operator pos:start="157:41" pos:end="157:41">&amp;</operator><name pos:start="157:42" pos:end="157:46">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="159:5" pos:end="165:5"><if pos:start="159:5" pos:end="165:5">if <condition pos:start="159:8" pos:end="159:16">(<expr pos:start="159:9" pos:end="159:15"><name pos:start="159:9" pos:end="159:11">ret</name> <operator pos:start="159:13" pos:end="159:13">&lt;</operator> <literal type="number" pos:start="159:15" pos:end="159:15">0</literal></expr>)</condition> <block pos:start="159:18" pos:end="165:5">{<block_content pos:start="161:9" pos:end="163:17">

        <expr_stmt pos:start="161:9" pos:end="161:56"><expr pos:start="161:9" pos:end="161:55"><call pos:start="161:9" pos:end="161:55"><name pos:start="161:9" pos:end="161:20">error_report</name><argument_list pos:start="161:21" pos:end="161:55">(<argument pos:start="161:22" pos:end="161:47"><expr pos:start="161:22" pos:end="161:47"><literal type="string" pos:start="161:22" pos:end="161:47">"Invalid cache option: %s"</literal></expr></argument>, <argument pos:start="161:50" pos:end="161:54"><expr pos:start="161:50" pos:end="161:54"><name pos:start="161:50" pos:end="161:54">cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="163:9" pos:end="163:17">goto <name pos:start="163:14" pos:end="163:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="169:5" pos:end="169:63"><expr pos:start="169:5" pos:end="169:62"><name pos:start="169:5" pos:end="169:7">blk</name> <operator pos:start="169:9" pos:end="169:9">=</operator> <call pos:start="169:11" pos:end="169:62"><name pos:start="169:11" pos:end="169:18">img_open</name><argument_list pos:start="169:19" pos:end="169:62">(<argument pos:start="169:20" pos:end="169:26"><expr pos:start="169:20" pos:end="169:26"><literal type="string" pos:start="169:20" pos:end="169:26">"image"</literal></expr></argument>, <argument pos:start="169:29" pos:end="169:36"><expr pos:start="169:29" pos:end="169:36"><name pos:start="169:29" pos:end="169:36">filename</name></expr></argument>, <argument pos:start="169:39" pos:end="169:41"><expr pos:start="169:39" pos:end="169:41"><name pos:start="169:39" pos:end="169:41">fmt</name></expr></argument>, <argument pos:start="169:44" pos:end="169:48"><expr pos:start="169:44" pos:end="169:48"><name pos:start="169:44" pos:end="169:48">flags</name></expr></argument>, <argument pos:start="169:51" pos:end="169:54"><expr pos:start="169:51" pos:end="169:54"><name pos:start="169:51" pos:end="169:54">true</name></expr></argument>, <argument pos:start="169:57" pos:end="169:61"><expr pos:start="169:57" pos:end="169:61"><name pos:start="169:57" pos:end="169:61">quiet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="171:5" pos:end="177:5"><if pos:start="171:5" pos:end="177:5">if <condition pos:start="171:8" pos:end="171:13">(<expr pos:start="171:9" pos:end="171:12"><operator pos:start="171:9" pos:end="171:9">!</operator><name pos:start="171:10" pos:end="171:12">blk</name></expr>)</condition> <block pos:start="171:15" pos:end="177:5">{<block_content pos:start="173:9" pos:end="175:17">

        <expr_stmt pos:start="173:9" pos:end="173:17"><expr pos:start="173:9" pos:end="173:16"><name pos:start="173:9" pos:end="173:11">ret</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <operator pos:start="173:15" pos:end="173:15">-</operator><literal type="number" pos:start="173:16" pos:end="173:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="175:9" pos:end="175:17">goto <name pos:start="175:14" pos:end="175:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:21"><expr pos:start="179:5" pos:end="179:20"><name pos:start="179:5" pos:end="179:6">bs</name> <operator pos:start="179:8" pos:end="179:8">=</operator> <call pos:start="179:10" pos:end="179:20"><name pos:start="179:10" pos:end="179:15">blk_bs</name><argument_list pos:start="179:16" pos:end="179:20">(<argument pos:start="179:17" pos:end="179:19"><expr pos:start="179:17" pos:end="179:19"><name pos:start="179:17" pos:end="179:19">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:31"><expr pos:start="183:5" pos:end="183:30"><name pos:start="183:5" pos:end="183:7">fmt</name> <operator pos:start="183:9" pos:end="183:9">=</operator> <name pos:start="183:11" pos:end="183:30"><name pos:start="183:11" pos:end="183:12">bs</name><operator pos:start="183:13" pos:end="183:14">-&gt;</operator><name pos:start="183:15" pos:end="183:17">drv</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:30">format_name</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="187:5" pos:end="195:5"><if pos:start="187:5" pos:end="195:5">if <condition pos:start="187:8" pos:end="187:33">(<expr pos:start="187:9" pos:end="187:32"><call pos:start="187:9" pos:end="187:32"><name pos:start="187:9" pos:end="187:23">has_help_option</name><argument_list pos:start="187:24" pos:end="187:32">(<argument pos:start="187:25" pos:end="187:31"><expr pos:start="187:25" pos:end="187:31"><name pos:start="187:25" pos:end="187:31">options</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="187:35" pos:end="195:5">{<block_content pos:start="191:9" pos:end="193:17">

        <comment type="block" pos:start="189:9" pos:end="189:69">/* If the format was auto-detected, print option help here */</comment>

        <expr_stmt pos:start="191:9" pos:end="191:53"><expr pos:start="191:9" pos:end="191:52"><name pos:start="191:9" pos:end="191:11">ret</name> <operator pos:start="191:13" pos:end="191:13">=</operator> <call pos:start="191:15" pos:end="191:52"><name pos:start="191:15" pos:end="191:37">print_block_option_help</name><argument_list pos:start="191:38" pos:end="191:52">(<argument pos:start="191:39" pos:end="191:46"><expr pos:start="191:39" pos:end="191:46"><name pos:start="191:39" pos:end="191:46">filename</name></expr></argument>, <argument pos:start="191:49" pos:end="191:51"><expr pos:start="191:49" pos:end="191:51"><name pos:start="191:49" pos:end="191:51">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="193:9" pos:end="193:17">goto <name pos:start="193:14" pos:end="193:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="199:5" pos:end="209:5"><if pos:start="199:5" pos:end="209:5">if <condition pos:start="199:8" pos:end="199:30">(<expr pos:start="199:9" pos:end="199:29"><operator pos:start="199:9" pos:end="199:9">!</operator><name pos:start="199:10" pos:end="199:29"><name pos:start="199:10" pos:end="199:11">bs</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:16">drv</name><operator pos:start="199:17" pos:end="199:18">-&gt;</operator><name pos:start="199:19" pos:end="199:29">create_opts</name></name></expr>)</condition> <block pos:start="199:32" pos:end="209:5">{<block_content pos:start="201:9" pos:end="207:17">

        <expr_stmt pos:start="201:9" pos:end="203:26"><expr pos:start="201:9" pos:end="203:25"><call pos:start="201:9" pos:end="203:25"><name pos:start="201:9" pos:end="201:20">error_report</name><argument_list pos:start="201:21" pos:end="203:25">(<argument pos:start="201:22" pos:end="201:79"><expr pos:start="201:22" pos:end="201:79"><literal type="string" pos:start="201:22" pos:end="201:79">"Format driver '%s' does not support any options to amend"</literal></expr></argument>,

                     <argument pos:start="203:22" pos:end="203:24"><expr pos:start="203:22" pos:end="203:24"><name pos:start="203:22" pos:end="203:24">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:17"><expr pos:start="205:9" pos:end="205:16"><name pos:start="205:9" pos:end="205:11">ret</name> <operator pos:start="205:13" pos:end="205:13">=</operator> <operator pos:start="205:15" pos:end="205:15">-</operator><literal type="number" pos:start="205:16" pos:end="205:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="207:9" pos:end="207:17">goto <name pos:start="207:14" pos:end="207:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="213:5" pos:end="213:70"><expr pos:start="213:5" pos:end="213:69"><name pos:start="213:5" pos:end="213:15">create_opts</name> <operator pos:start="213:17" pos:end="213:17">=</operator> <call pos:start="213:19" pos:end="213:69"><name pos:start="213:19" pos:end="213:34">qemu_opts_append</name><argument_list pos:start="213:35" pos:end="213:69">(<argument pos:start="213:36" pos:end="213:46"><expr pos:start="213:36" pos:end="213:46"><name pos:start="213:36" pos:end="213:46">create_opts</name></expr></argument>, <argument pos:start="213:49" pos:end="213:68"><expr pos:start="213:49" pos:end="213:68"><name pos:start="213:49" pos:end="213:68"><name pos:start="213:49" pos:end="213:50">bs</name><operator pos:start="213:51" pos:end="213:52">-&gt;</operator><name pos:start="213:53" pos:end="213:55">drv</name><operator pos:start="213:56" pos:end="213:57">-&gt;</operator><name pos:start="213:58" pos:end="213:68">create_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:64"><expr pos:start="215:5" pos:end="215:63"><name pos:start="215:5" pos:end="215:8">opts</name> <operator pos:start="215:10" pos:end="215:10">=</operator> <call pos:start="215:12" pos:end="215:63"><name pos:start="215:12" pos:end="215:27">qemu_opts_create</name><argument_list pos:start="215:28" pos:end="215:63">(<argument pos:start="215:29" pos:end="215:39"><expr pos:start="215:29" pos:end="215:39"><name pos:start="215:29" pos:end="215:39">create_opts</name></expr></argument>, <argument pos:start="215:42" pos:end="215:45"><expr pos:start="215:42" pos:end="215:45"><name pos:start="215:42" pos:end="215:45">NULL</name></expr></argument>, <argument pos:start="215:48" pos:end="215:48"><expr pos:start="215:48" pos:end="215:48"><literal type="number" pos:start="215:48" pos:end="215:48">0</literal></expr></argument>, <argument pos:start="215:51" pos:end="215:62"><expr pos:start="215:51" pos:end="215:62"><operator pos:start="215:51" pos:end="215:51">&amp;</operator><name pos:start="215:52" pos:end="215:62">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="217:5" pos:end="231:5"><if pos:start="217:5" pos:end="231:5">if <condition pos:start="217:8" pos:end="217:16">(<expr pos:start="217:9" pos:end="217:15"><name pos:start="217:9" pos:end="217:15">options</name></expr>)</condition> <block pos:start="217:18" pos:end="231:5">{<block_content pos:start="219:9" pos:end="229:9">

        <expr_stmt pos:start="219:9" pos:end="219:54"><expr pos:start="219:9" pos:end="219:53"><call pos:start="219:9" pos:end="219:53"><name pos:start="219:9" pos:end="219:26">qemu_opts_do_parse</name><argument_list pos:start="219:27" pos:end="219:53">(<argument pos:start="219:28" pos:end="219:31"><expr pos:start="219:28" pos:end="219:31"><name pos:start="219:28" pos:end="219:31">opts</name></expr></argument>, <argument pos:start="219:34" pos:end="219:40"><expr pos:start="219:34" pos:end="219:40"><name pos:start="219:34" pos:end="219:40">options</name></expr></argument>, <argument pos:start="219:43" pos:end="219:46"><expr pos:start="219:43" pos:end="219:46"><name pos:start="219:43" pos:end="219:46">NULL</name></expr></argument>, <argument pos:start="219:49" pos:end="219:52"><expr pos:start="219:49" pos:end="219:52"><operator pos:start="219:49" pos:end="219:49">&amp;</operator><name pos:start="219:50" pos:end="219:52">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="221:9" pos:end="229:9"><if pos:start="221:9" pos:end="229:9">if <condition pos:start="221:12" pos:end="221:16">(<expr pos:start="221:13" pos:end="221:15"><name pos:start="221:13" pos:end="221:15">err</name></expr>)</condition> <block pos:start="221:18" pos:end="229:9">{<block_content pos:start="223:13" pos:end="227:21">

            <expr_stmt pos:start="223:13" pos:end="223:34"><expr pos:start="223:13" pos:end="223:33"><call pos:start="223:13" pos:end="223:33"><name pos:start="223:13" pos:end="223:28">error_report_err</name><argument_list pos:start="223:29" pos:end="223:33">(<argument pos:start="223:30" pos:end="223:32"><expr pos:start="223:30" pos:end="223:32"><name pos:start="223:30" pos:end="223:32">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:21"><expr pos:start="225:13" pos:end="225:20"><name pos:start="225:13" pos:end="225:15">ret</name> <operator pos:start="225:17" pos:end="225:17">=</operator> <operator pos:start="225:19" pos:end="225:19">-</operator><literal type="number" pos:start="225:20" pos:end="225:20">1</literal></expr>;</expr_stmt>

            <goto pos:start="227:13" pos:end="227:21">goto <name pos:start="227:18" pos:end="227:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="235:5" pos:end="235:60">/* In case the driver does not call amend_status_cb() */</comment>

    <expr_stmt pos:start="237:5" pos:end="237:32"><expr pos:start="237:5" pos:end="237:31"><call pos:start="237:5" pos:end="237:31"><name pos:start="237:5" pos:end="237:23">qemu_progress_print</name><argument_list pos:start="237:24" pos:end="237:31">(<argument pos:start="237:25" pos:end="237:27"><expr pos:start="237:25" pos:end="237:27"><literal type="number" pos:start="237:25" pos:end="237:27">0.f</literal></expr></argument>, <argument pos:start="237:30" pos:end="237:30"><expr pos:start="237:30" pos:end="237:30"><literal type="number" pos:start="237:30" pos:end="237:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:57"><expr pos:start="239:5" pos:end="239:56"><name pos:start="239:5" pos:end="239:7">ret</name> <operator pos:start="239:9" pos:end="239:9">=</operator> <call pos:start="239:11" pos:end="239:56"><name pos:start="239:11" pos:end="239:28">bdrv_amend_options</name><argument_list pos:start="239:29" pos:end="239:56">(<argument pos:start="239:30" pos:end="239:31"><expr pos:start="239:30" pos:end="239:31"><name pos:start="239:30" pos:end="239:31">bs</name></expr></argument>, <argument pos:start="239:34" pos:end="239:37"><expr pos:start="239:34" pos:end="239:37"><name pos:start="239:34" pos:end="239:37">opts</name></expr></argument>, <argument pos:start="239:40" pos:end="239:55"><expr pos:start="239:40" pos:end="239:55"><operator pos:start="239:40" pos:end="239:40">&amp;</operator><name pos:start="239:41" pos:end="239:55">amend_status_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:34"><expr pos:start="241:5" pos:end="241:33"><call pos:start="241:5" pos:end="241:33"><name pos:start="241:5" pos:end="241:23">qemu_progress_print</name><argument_list pos:start="241:24" pos:end="241:33">(<argument pos:start="241:25" pos:end="241:29"><expr pos:start="241:25" pos:end="241:29"><literal type="number" pos:start="241:25" pos:end="241:29">100.f</literal></expr></argument>, <argument pos:start="241:32" pos:end="241:32"><expr pos:start="241:32" pos:end="241:32"><literal type="number" pos:start="241:32" pos:end="241:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="243:5" pos:end="249:5"><if pos:start="243:5" pos:end="249:5">if <condition pos:start="243:8" pos:end="243:16">(<expr pos:start="243:9" pos:end="243:15"><name pos:start="243:9" pos:end="243:11">ret</name> <operator pos:start="243:13" pos:end="243:13">&lt;</operator> <literal type="number" pos:start="243:15" pos:end="243:15">0</literal></expr>)</condition> <block pos:start="243:18" pos:end="249:5">{<block_content pos:start="245:9" pos:end="247:17">

        <expr_stmt pos:start="245:9" pos:end="245:73"><expr pos:start="245:9" pos:end="245:72"><call pos:start="245:9" pos:end="245:72"><name pos:start="245:9" pos:end="245:20">error_report</name><argument_list pos:start="245:21" pos:end="245:72">(<argument pos:start="245:22" pos:end="245:55"><expr pos:start="245:22" pos:end="245:55"><literal type="string" pos:start="245:22" pos:end="245:55">"Error while amending options: %s"</literal></expr></argument>, <argument pos:start="245:58" pos:end="245:71"><expr pos:start="245:58" pos:end="245:71"><call pos:start="245:58" pos:end="245:71"><name pos:start="245:58" pos:end="245:65">strerror</name><argument_list pos:start="245:66" pos:end="245:71">(<argument pos:start="245:67" pos:end="245:70"><expr pos:start="245:67" pos:end="245:70"><operator pos:start="245:67" pos:end="245:67">-</operator><name pos:start="245:68" pos:end="245:70">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="247:9" pos:end="247:17">goto <name pos:start="247:14" pos:end="247:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



<label pos:start="253:1" pos:end="253:4"><name pos:start="253:1" pos:end="253:3">out</name>:</label>

    <expr_stmt pos:start="255:5" pos:end="255:24"><expr pos:start="255:5" pos:end="255:23"><call pos:start="255:5" pos:end="255:23"><name pos:start="255:5" pos:end="255:21">qemu_progress_end</name><argument_list pos:start="255:22" pos:end="255:23">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="259:5" pos:end="259:19"><expr pos:start="259:5" pos:end="259:18"><call pos:start="259:5" pos:end="259:18"><name pos:start="259:5" pos:end="259:13">blk_unref</name><argument_list pos:start="259:14" pos:end="259:18">(<argument pos:start="259:15" pos:end="259:17"><expr pos:start="259:15" pos:end="259:17"><name pos:start="259:15" pos:end="259:17">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:24"><expr pos:start="261:5" pos:end="261:23"><call pos:start="261:5" pos:end="261:23"><name pos:start="261:5" pos:end="261:17">qemu_opts_del</name><argument_list pos:start="261:18" pos:end="261:23">(<argument pos:start="261:19" pos:end="261:22"><expr pos:start="261:19" pos:end="261:22"><name pos:start="261:19" pos:end="261:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:32"><expr pos:start="263:5" pos:end="263:31"><call pos:start="263:5" pos:end="263:31"><name pos:start="263:5" pos:end="263:18">qemu_opts_free</name><argument_list pos:start="263:19" pos:end="263:31">(<argument pos:start="263:20" pos:end="263:30"><expr pos:start="263:20" pos:end="263:30"><name pos:start="263:20" pos:end="263:30">create_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:20"><expr pos:start="265:5" pos:end="265:19"><call pos:start="265:5" pos:end="265:19"><name pos:start="265:5" pos:end="265:10">g_free</name><argument_list pos:start="265:11" pos:end="265:19">(<argument pos:start="265:12" pos:end="265:18"><expr pos:start="265:12" pos:end="265:18"><name pos:start="265:12" pos:end="265:18">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="269:5" pos:end="273:5"><if pos:start="269:5" pos:end="273:5">if <condition pos:start="269:8" pos:end="269:12">(<expr pos:start="269:9" pos:end="269:11"><name pos:start="269:9" pos:end="269:11">ret</name></expr>)</condition> <block pos:start="269:14" pos:end="273:5">{<block_content pos:start="271:9" pos:end="271:17">

        <return pos:start="271:9" pos:end="271:17">return <expr pos:start="271:16" pos:end="271:16"><literal type="number" pos:start="271:16" pos:end="271:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="275:5" pos:end="275:13">return <expr pos:start="275:12" pos:end="275:12"><literal type="number" pos:start="275:12" pos:end="275:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
