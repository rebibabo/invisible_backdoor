<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27134.c" pos:tabs="8"><function pos:start="1:1" pos:end="341:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_vdpau_common_init</name><parameter_list pos:start="1:25" pos:end="3:35">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:73"><decl pos:start="1:49" pos:end="1:73"><type pos:start="1:49" pos:end="1:73"><name pos:start="1:49" pos:end="1:65">VdpDecoderProfile</name></type> <name pos:start="1:67" pos:end="1:73">profile</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:34"><decl pos:start="3:26" pos:end="3:34"><type pos:start="3:26" pos:end="3:34"><name pos:start="3:26" pos:end="3:28">int</name></type> <name pos:start="3:30" pos:end="3:34">level</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="341:1">{<block_content pos:start="7:5" pos:end="339:31">

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VDPAUHWContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">hwctx</name> <init pos:start="7:27" pos:end="7:50">= <expr pos:start="7:29" pos:end="7:50"><name pos:start="7:29" pos:end="7:50"><name pos:start="7:29" pos:end="7:33">avctx</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:50">hwaccel_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:61"><decl pos:start="9:5" pos:end="9:60"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">VDPAUContext</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:23">vdctx</name> <init pos:start="9:25" pos:end="9:60">= <expr pos:start="9:27" pos:end="9:60"><name pos:start="9:27" pos:end="9:60"><name pos:start="9:27" pos:end="9:31">avctx</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:41">internal</name><operator pos:start="9:42" pos:end="9:43">-&gt;</operator><name pos:start="9:44" pos:end="9:60">hwaccel_priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:57"><decl pos:start="11:5" pos:end="11:56"><type pos:start="11:5" pos:end="11:38"><name pos:start="11:5" pos:end="11:36">VdpVideoSurfaceQueryCapabilities</name> <modifier pos:start="11:38" pos:end="11:38">*</modifier></type><name pos:start="11:39" pos:end="11:56">surface_query_caps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:51"><type pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:31">VdpDecoderQueryCapabilities</name> <modifier pos:start="13:33" pos:end="13:33">*</modifier></type><name pos:start="13:34" pos:end="13:51">decoder_query_caps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:20">VdpDecoderCreate</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:28">create</name></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:8">void</name> <modifier pos:start="19:10" pos:end="19:10">*</modifier></type><name pos:start="19:11" pos:end="19:14">func</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:13">VdpStatus</name></type> <name pos:start="21:15" pos:end="21:20">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:22"><decl pos:start="23:5" pos:end="23:21"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">VdpBool</name></type> <name pos:start="23:13" pos:end="23:21">supported</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:54"><decl pos:start="25:5" pos:end="25:22"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint32_t</name></type> <name pos:start="25:14" pos:end="25:22">max_level</name></decl>, <decl pos:start="25:25" pos:end="25:30"><type ref="prev" pos:start="25:5" pos:end="25:12"/><name pos:start="25:25" pos:end="25:30">max_mb</name></decl>, <decl pos:start="25:33" pos:end="25:41"><type ref="prev" pos:start="25:5" pos:end="25:12"/><name pos:start="25:33" pos:end="25:41">max_width</name></decl>, <decl pos:start="25:44" pos:end="25:53"><type ref="prev" pos:start="25:5" pos:end="25:12"/><name pos:start="25:44" pos:end="25:53">max_height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:23"><decl pos:start="27:5" pos:end="27:22"><type pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:17">VdpChromaType</name></type> <name pos:start="27:19" pos:end="27:22">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:19"><decl pos:start="29:5" pos:end="29:18"><type pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:12">uint32_t</name></type> <name pos:start="29:14" pos:end="29:18">width</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:20"><decl pos:start="31:5" pos:end="31:19"><type pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:12">uint32_t</name></type> <name pos:start="31:14" pos:end="31:19">height</name></decl>;</decl_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:9">vdctx</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:16">width</name></name>            <operator pos:start="35:29" pos:end="35:29">=</operator> <name pos:start="35:31" pos:end="35:40">UINT32_MAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:9">vdctx</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:17">height</name></name>           <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:40">UINT32_MAX</name></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="43:31"><if pos:start="41:5" pos:end="43:31">if <condition pos:start="41:8" pos:end="41:71">(<expr pos:start="41:9" pos:end="41:70"><call pos:start="41:9" pos:end="41:70"><name pos:start="41:9" pos:end="41:39">av_vdpau_get_surface_parameters</name><argument_list pos:start="41:40" pos:end="41:70">(<argument pos:start="41:41" pos:end="41:45"><expr pos:start="41:41" pos:end="41:45"><name pos:start="41:41" pos:end="41:45">avctx</name></expr></argument>, <argument pos:start="41:48" pos:end="41:52"><expr pos:start="41:48" pos:end="41:52"><operator pos:start="41:48" pos:end="41:48">&amp;</operator><name pos:start="41:49" pos:end="41:52">type</name></expr></argument>, <argument pos:start="41:55" pos:end="41:60"><expr pos:start="41:55" pos:end="41:60"><operator pos:start="41:55" pos:end="41:55">&amp;</operator><name pos:start="41:56" pos:end="41:60">width</name></expr></argument>, <argument pos:start="41:63" pos:end="41:69"><expr pos:start="41:63" pos:end="41:69"><operator pos:start="41:63" pos:end="41:63">&amp;</operator><name pos:start="41:64" pos:end="41:69">height</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:31"><block_content pos:start="43:9" pos:end="43:31">

        <return pos:start="43:9" pos:end="43:31">return <expr pos:start="43:16" pos:end="43:30"><call pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:22">AVERROR</name><argument_list pos:start="43:23" pos:end="43:30">(<argument pos:start="43:24" pos:end="43:29"><expr pos:start="43:24" pos:end="43:29"><name pos:start="43:24" pos:end="43:29">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="171:5"><if pos:start="47:5" pos:end="85:5">if <condition pos:start="47:8" pos:end="47:14">(<expr pos:start="47:9" pos:end="47:13"><name pos:start="47:9" pos:end="47:13">hwctx</name></expr>)</condition> <block pos:start="47:16" pos:end="85:5">{<block_content pos:start="49:9" pos:end="83:35">

        <expr_stmt pos:start="49:9" pos:end="49:36"><expr pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:13">hwctx</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:20">reset</name></name>            <operator pos:start="49:33" pos:end="49:33">=</operator> <literal type="number" pos:start="49:35" pos:end="49:35">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="53:9" pos:end="63:9"><if pos:start="53:9" pos:end="63:9">if <condition pos:start="53:12" pos:end="53:57">(<expr pos:start="53:13" pos:end="53:56"><name pos:start="53:13" pos:end="53:34"><name pos:start="53:13" pos:end="53:17">hwctx</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:26">context</name><operator pos:start="53:27" pos:end="53:27">.</operator><name pos:start="53:28" pos:end="53:34">decoder</name></name> <operator pos:start="53:36" pos:end="53:37">!=</operator> <name pos:start="53:39" pos:end="53:56">VDP_INVALID_HANDLE</name></expr>)</condition> <block pos:start="53:59" pos:end="63:9">{<block_content pos:start="55:13" pos:end="61:21">

            <expr_stmt pos:start="55:13" pos:end="55:52"><expr pos:start="55:13" pos:end="55:51"><name pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:17">vdctx</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:26">decoder</name></name> <operator pos:start="55:28" pos:end="55:28">=</operator> <name pos:start="55:30" pos:end="55:51"><name pos:start="55:30" pos:end="55:34">hwctx</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:43">context</name><operator pos:start="55:44" pos:end="55:44">.</operator><name pos:start="55:45" pos:end="55:51">decoder</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:51"><expr pos:start="57:13" pos:end="57:50"><name pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:17">vdctx</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:25">render</name></name>  <operator pos:start="57:28" pos:end="57:28">=</operator> <name pos:start="57:30" pos:end="57:50"><name pos:start="57:30" pos:end="57:34">hwctx</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:43">context</name><operator pos:start="57:44" pos:end="57:44">.</operator><name pos:start="57:45" pos:end="57:50">render</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:48"><expr pos:start="59:13" pos:end="59:47"><name pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:17">vdctx</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:25">device</name></name>  <operator pos:start="59:28" pos:end="59:28">=</operator> <name pos:start="59:30" pos:end="59:47">VDP_INVALID_HANDLE</name></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:21">return <expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>;</return> <comment type="block" pos:start="61:23" pos:end="61:51">/* Decoder created by user */</comment>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:48"><expr pos:start="67:9" pos:end="67:47"><name pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:13">vdctx</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:21">device</name></name>           <operator pos:start="67:33" pos:end="67:33">=</operator> <name pos:start="67:35" pos:end="67:47"><name pos:start="67:35" pos:end="67:39">hwctx</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:47">device</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:58"><expr pos:start="69:9" pos:end="69:57"><name pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:13">vdctx</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:31">get_proc_address</name></name> <operator pos:start="69:33" pos:end="69:33">=</operator> <name pos:start="69:35" pos:end="69:57"><name pos:start="69:35" pos:end="69:39">hwctx</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:57">get_proc_address</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="73:9" pos:end="75:22"><if pos:start="73:9" pos:end="75:22">if <condition pos:start="73:12" pos:end="73:56">(<expr pos:start="73:13" pos:end="73:55"><name pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:17">hwctx</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:24">flags</name></name> <operator pos:start="73:26" pos:end="73:26">&amp;</operator> <name pos:start="73:28" pos:end="73:55">AV_HWACCEL_FLAG_IGNORE_LEVEL</name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:22"><block_content pos:start="75:13" pos:end="75:22">

            <expr_stmt pos:start="75:13" pos:end="75:22"><expr pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:17">level</name> <operator pos:start="75:19" pos:end="75:19">=</operator> <literal type="number" pos:start="75:21" pos:end="75:21">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="79:9" pos:end="83:35"><if pos:start="79:9" pos:end="83:35">if <condition pos:start="79:12" pos:end="81:40">(<expr pos:start="79:13" pos:end="81:39"><operator pos:start="79:13" pos:end="79:13">!</operator><operator pos:start="79:14" pos:end="79:14">(</operator><name pos:start="79:15" pos:end="79:26"><name pos:start="79:15" pos:end="79:19">hwctx</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:26">flags</name></name> <operator pos:start="79:28" pos:end="79:28">&amp;</operator> <name pos:start="79:30" pos:end="79:61">AV_HWACCEL_FLAG_ALLOW_HIGH_DEPTH</name><operator pos:start="79:62" pos:end="79:62">)</operator> <operator pos:start="79:64" pos:end="79:65">&amp;&amp;</operator>

            <name pos:start="81:13" pos:end="81:16">type</name> <operator pos:start="81:18" pos:end="81:19">!=</operator> <name pos:start="81:21" pos:end="81:39">VDP_CHROMA_TYPE_420</name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:35"><block_content pos:start="83:13" pos:end="83:35">

            <return pos:start="83:13" pos:end="83:35">return <expr pos:start="83:20" pos:end="83:34"><call pos:start="83:20" pos:end="83:34"><name pos:start="83:20" pos:end="83:26">AVERROR</name><argument_list pos:start="83:27" pos:end="83:34">(<argument pos:start="83:28" pos:end="83:33"><expr pos:start="83:28" pos:end="83:33"><name pos:start="83:28" pos:end="83:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="85:7" pos:end="171:5">else <block pos:start="85:12" pos:end="171:5">{<block_content pos:start="87:9" pos:end="169:22">

        <decl_stmt pos:start="87:9" pos:end="87:45"><decl pos:start="87:9" pos:end="87:44"><type pos:start="87:9" pos:end="87:27"><name pos:start="87:9" pos:end="87:25">AVHWFramesContext</name> <modifier pos:start="87:27" pos:end="87:27">*</modifier></type><name pos:start="87:28" pos:end="87:37">frames_ctx</name> <init pos:start="87:39" pos:end="87:44">= <expr pos:start="87:41" pos:end="87:44"><name pos:start="87:41" pos:end="87:44">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="89:9" pos:end="89:38"><decl pos:start="89:9" pos:end="89:37"><type pos:start="89:9" pos:end="89:30"><name pos:start="89:9" pos:end="89:28">AVVDPAUDeviceContext</name> <modifier pos:start="89:30" pos:end="89:30">*</modifier></type><name pos:start="89:31" pos:end="89:37">dev_ctx</name></decl>;</decl_stmt>



        <comment type="line" pos:start="93:9" pos:end="93:83">// We assume the hw_frames_ctx always survives until ff_vdpau_common_uninit</comment>

        <comment type="line" pos:start="95:9" pos:end="95:73">// is called. This holds true as the user is not allowed to touch</comment>

        <comment type="line" pos:start="97:9" pos:end="97:78">// hw_device_ctx, or hw_frames_ctx after get_format (and ff_get_format</comment>

        <comment type="line" pos:start="99:9" pos:end="99:63">// itself also uninits before unreffing hw_frames_ctx).</comment>

        <if_stmt pos:start="101:9" pos:end="141:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:33">(<expr pos:start="101:13" pos:end="101:32"><name pos:start="101:13" pos:end="101:32"><name pos:start="101:13" pos:end="101:17">avctx</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:32">hw_frames_ctx</name></name></expr>)</condition> <block pos:start="101:35" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:72">

            <expr_stmt pos:start="103:13" pos:end="103:72"><expr pos:start="103:13" pos:end="103:71"><name pos:start="103:13" pos:end="103:22">frames_ctx</name> <operator pos:start="103:24" pos:end="103:24">=</operator> <operator pos:start="103:26" pos:end="103:26">(</operator><name pos:start="103:27" pos:end="103:43">AVHWFramesContext</name><operator pos:start="103:44" pos:end="103:44">*</operator><operator pos:start="103:45" pos:end="103:45">)</operator><name pos:start="103:46" pos:end="103:71"><name pos:start="103:46" pos:end="103:50">avctx</name><operator pos:start="103:51" pos:end="103:52">-&gt;</operator><name pos:start="103:53" pos:end="103:65">hw_frames_ctx</name><operator pos:start="103:66" pos:end="103:67">-&gt;</operator><name pos:start="103:68" pos:end="103:71">data</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="105:11" pos:end="141:9">else if <condition pos:start="105:19" pos:end="105:40">(<expr pos:start="105:20" pos:end="105:39"><name pos:start="105:20" pos:end="105:39"><name pos:start="105:20" pos:end="105:24">avctx</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:39">hw_device_ctx</name></name></expr>)</condition> <block pos:start="105:42" pos:end="141:9">{<block_content pos:start="107:13" pos:end="139:13">

            <decl_stmt pos:start="107:13" pos:end="107:20"><decl pos:start="107:13" pos:end="107:19"><type pos:start="107:13" pos:end="107:15"><name pos:start="107:13" pos:end="107:15">int</name></type> <name pos:start="107:17" pos:end="107:19">ret</name></decl>;</decl_stmt>



            <expr_stmt pos:start="111:13" pos:end="111:78"><expr pos:start="111:13" pos:end="111:77"><name pos:start="111:13" pos:end="111:32"><name pos:start="111:13" pos:end="111:17">avctx</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:32">hw_frames_ctx</name></name> <operator pos:start="111:34" pos:end="111:34">=</operator> <call pos:start="111:36" pos:end="111:77"><name pos:start="111:36" pos:end="111:55">av_hwframe_ctx_alloc</name><argument_list pos:start="111:56" pos:end="111:77">(<argument pos:start="111:57" pos:end="111:76"><expr pos:start="111:57" pos:end="111:76"><name pos:start="111:57" pos:end="111:76"><name pos:start="111:57" pos:end="111:61">avctx</name><operator pos:start="111:62" pos:end="111:63">-&gt;</operator><name pos:start="111:64" pos:end="111:76">hw_device_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="113:13" pos:end="115:39"><if pos:start="113:13" pos:end="115:39">if <condition pos:start="113:16" pos:end="113:38">(<expr pos:start="113:17" pos:end="113:37"><operator pos:start="113:17" pos:end="113:17">!</operator><name pos:start="113:18" pos:end="113:37"><name pos:start="113:18" pos:end="113:22">avctx</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:37">hw_frames_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="115:17" pos:end="115:39"><block_content pos:start="115:17" pos:end="115:39">

                <return pos:start="115:17" pos:end="115:39">return <expr pos:start="115:24" pos:end="115:38"><call pos:start="115:24" pos:end="115:38"><name pos:start="115:24" pos:end="115:30">AVERROR</name><argument_list pos:start="115:31" pos:end="115:38">(<argument pos:start="115:32" pos:end="115:37"><expr pos:start="115:32" pos:end="115:37"><name pos:start="115:32" pos:end="115:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="119:13" pos:end="119:83"><expr pos:start="119:13" pos:end="119:82"><name pos:start="119:13" pos:end="119:22">frames_ctx</name>            <operator pos:start="119:35" pos:end="119:35">=</operator> <operator pos:start="119:37" pos:end="119:37">(</operator><name pos:start="119:38" pos:end="119:54">AVHWFramesContext</name><operator pos:start="119:55" pos:end="119:55">*</operator><operator pos:start="119:56" pos:end="119:56">)</operator><name pos:start="119:57" pos:end="119:82"><name pos:start="119:57" pos:end="119:61">avctx</name><operator pos:start="119:62" pos:end="119:63">-&gt;</operator><name pos:start="119:64" pos:end="119:76">hw_frames_ctx</name><operator pos:start="119:77" pos:end="119:78">-&gt;</operator><name pos:start="119:79" pos:end="119:82">data</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:53"><expr pos:start="121:13" pos:end="121:52"><name pos:start="121:13" pos:end="121:30"><name pos:start="121:13" pos:end="121:22">frames_ctx</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:30">format</name></name>    <operator pos:start="121:35" pos:end="121:35">=</operator> <name pos:start="121:37" pos:end="121:52">AV_PIX_FMT_VDPAU</name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:54"><expr pos:start="123:13" pos:end="123:53"><name pos:start="123:13" pos:end="123:33"><name pos:start="123:13" pos:end="123:22">frames_ctx</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:33">sw_format</name></name> <operator pos:start="123:35" pos:end="123:35">=</operator> <name pos:start="123:37" pos:end="123:53"><name pos:start="123:37" pos:end="123:41">avctx</name><operator pos:start="123:42" pos:end="123:43">-&gt;</operator><name pos:start="123:44" pos:end="123:53">sw_pix_fmt</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:55"><expr pos:start="125:13" pos:end="125:54"><name pos:start="125:13" pos:end="125:29"><name pos:start="125:13" pos:end="125:22">frames_ctx</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:29">width</name></name>     <operator pos:start="125:35" pos:end="125:35">=</operator> <name pos:start="125:37" pos:end="125:54"><name pos:start="125:37" pos:end="125:41">avctx</name><operator pos:start="125:42" pos:end="125:43">-&gt;</operator><name pos:start="125:44" pos:end="125:54">coded_width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:56"><expr pos:start="127:13" pos:end="127:55"><name pos:start="127:13" pos:end="127:30"><name pos:start="127:13" pos:end="127:22">frames_ctx</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:30">height</name></name>    <operator pos:start="127:35" pos:end="127:35">=</operator> <name pos:start="127:37" pos:end="127:55"><name pos:start="127:37" pos:end="127:41">avctx</name><operator pos:start="127:42" pos:end="127:43">-&gt;</operator><name pos:start="127:44" pos:end="127:55">coded_height</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="131:13" pos:end="131:60"><expr pos:start="131:13" pos:end="131:59"><name pos:start="131:13" pos:end="131:15">ret</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <call pos:start="131:19" pos:end="131:59"><name pos:start="131:19" pos:end="131:37">av_hwframe_ctx_init</name><argument_list pos:start="131:38" pos:end="131:59">(<argument pos:start="131:39" pos:end="131:58"><expr pos:start="131:39" pos:end="131:58"><name pos:start="131:39" pos:end="131:58"><name pos:start="131:39" pos:end="131:43">avctx</name><operator pos:start="131:44" pos:end="131:45">-&gt;</operator><name pos:start="131:46" pos:end="131:58">hw_frames_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="133:13" pos:end="139:13"><if pos:start="133:13" pos:end="139:13">if <condition pos:start="133:16" pos:end="133:24">(<expr pos:start="133:17" pos:end="133:23"><name pos:start="133:17" pos:end="133:19">ret</name> <operator pos:start="133:21" pos:end="133:21">&lt;</operator> <literal type="number" pos:start="133:23" pos:end="133:23">0</literal></expr>)</condition> <block pos:start="133:26" pos:end="139:13">{<block_content pos:start="135:17" pos:end="137:27">

                <expr_stmt pos:start="135:17" pos:end="135:55"><expr pos:start="135:17" pos:end="135:54"><call pos:start="135:17" pos:end="135:54"><name pos:start="135:17" pos:end="135:31">av_buffer_unref</name><argument_list pos:start="135:32" pos:end="135:54">(<argument pos:start="135:33" pos:end="135:53"><expr pos:start="135:33" pos:end="135:53"><operator pos:start="135:33" pos:end="135:33">&amp;</operator><name pos:start="135:34" pos:end="135:53"><name pos:start="135:34" pos:end="135:38">avctx</name><operator pos:start="135:39" pos:end="135:40">-&gt;</operator><name pos:start="135:41" pos:end="135:53">hw_frames_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="137:17" pos:end="137:27">return <expr pos:start="137:24" pos:end="137:26"><name pos:start="137:24" pos:end="137:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="145:9" pos:end="153:9"><if pos:start="145:9" pos:end="153:9">if <condition pos:start="145:12" pos:end="145:24">(<expr pos:start="145:13" pos:end="145:23"><operator pos:start="145:13" pos:end="145:13">!</operator><name pos:start="145:14" pos:end="145:23">frames_ctx</name></expr>)</condition> <block pos:start="145:26" pos:end="153:9">{<block_content pos:start="147:13" pos:end="151:35">

            <expr_stmt pos:start="147:13" pos:end="149:53"><expr pos:start="147:13" pos:end="149:52"><call pos:start="147:13" pos:end="149:52"><name pos:start="147:13" pos:end="147:18">av_log</name><argument_list pos:start="147:19" pos:end="149:52">(<argument pos:start="147:20" pos:end="147:24"><expr pos:start="147:20" pos:end="147:24"><name pos:start="147:20" pos:end="147:24">avctx</name></expr></argument>, <argument pos:start="147:27" pos:end="147:38"><expr pos:start="147:27" pos:end="147:38"><name pos:start="147:27" pos:end="147:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="147:41" pos:end="149:51"><expr pos:start="147:41" pos:end="149:51"><literal type="string" pos:start="147:41" pos:end="147:71">"A hardware frames context is "</literal>

                   <literal type="string" pos:start="149:20" pos:end="149:51">"required for VDPAU decoding.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="151:13" pos:end="151:35">return <expr pos:start="151:20" pos:end="151:34"><call pos:start="151:20" pos:end="151:34"><name pos:start="151:20" pos:end="151:26">AVERROR</name><argument_list pos:start="151:27" pos:end="151:34">(<argument pos:start="151:28" pos:end="151:33"><expr pos:start="151:28" pos:end="151:33"><name pos:start="151:28" pos:end="151:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:48"><expr pos:start="157:9" pos:end="157:47"><name pos:start="157:9" pos:end="157:15">dev_ctx</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <name pos:start="157:19" pos:end="157:47"><name pos:start="157:19" pos:end="157:28">frames_ctx</name><operator pos:start="157:29" pos:end="157:30">-&gt;</operator><name pos:start="157:31" pos:end="157:40">device_ctx</name><operator pos:start="157:41" pos:end="157:42">-&gt;</operator><name pos:start="157:43" pos:end="157:47">hwctx</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:50"><expr pos:start="161:9" pos:end="161:49"><name pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:13">vdctx</name><operator pos:start="161:14" pos:end="161:15">-&gt;</operator><name pos:start="161:16" pos:end="161:21">device</name></name>           <operator pos:start="161:33" pos:end="161:33">=</operator> <name pos:start="161:35" pos:end="161:49"><name pos:start="161:35" pos:end="161:41">dev_ctx</name><operator pos:start="161:42" pos:end="161:43">-&gt;</operator><name pos:start="161:44" pos:end="161:49">device</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:60"><expr pos:start="163:9" pos:end="163:59"><name pos:start="163:9" pos:end="163:31"><name pos:start="163:9" pos:end="163:13">vdctx</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:31">get_proc_address</name></name> <operator pos:start="163:33" pos:end="163:33">=</operator> <name pos:start="163:35" pos:end="163:59"><name pos:start="163:35" pos:end="163:41">dev_ctx</name><operator pos:start="163:42" pos:end="163:43">-&gt;</operator><name pos:start="163:44" pos:end="163:59">get_proc_address</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="167:9" pos:end="169:22"><if pos:start="167:9" pos:end="169:22">if <condition pos:start="167:12" pos:end="167:64">(<expr pos:start="167:13" pos:end="167:63"><name pos:start="167:13" pos:end="167:32"><name pos:start="167:13" pos:end="167:17">avctx</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:32">hwaccel_flags</name></name> <operator pos:start="167:34" pos:end="167:34">&amp;</operator> <name pos:start="167:36" pos:end="167:63">AV_HWACCEL_FLAG_IGNORE_LEVEL</name></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:22"><block_content pos:start="169:13" pos:end="169:22">

            <expr_stmt pos:start="169:13" pos:end="169:22"><expr pos:start="169:13" pos:end="169:21"><name pos:start="169:13" pos:end="169:17">level</name> <operator pos:start="169:19" pos:end="169:19">=</operator> <literal type="number" pos:start="169:21" pos:end="169:21">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="175:5" pos:end="177:32"><if pos:start="175:5" pos:end="177:32">if <condition pos:start="175:8" pos:end="175:18">(<expr pos:start="175:9" pos:end="175:17"><name pos:start="175:9" pos:end="175:13">level</name> <operator pos:start="175:15" pos:end="175:15">&lt;</operator> <literal type="number" pos:start="175:17" pos:end="175:17">0</literal></expr>)</condition><block type="pseudo" pos:start="177:9" pos:end="177:32"><block_content pos:start="177:9" pos:end="177:32">

        <return pos:start="177:9" pos:end="177:32">return <expr pos:start="177:16" pos:end="177:31"><call pos:start="177:16" pos:end="177:31"><name pos:start="177:16" pos:end="177:22">AVERROR</name><argument_list pos:start="177:23" pos:end="177:31">(<argument pos:start="177:24" pos:end="177:30"><expr pos:start="177:24" pos:end="177:30"><name pos:start="177:24" pos:end="177:30">ENOTSUP</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="181:5" pos:end="185:44"><expr pos:start="181:5" pos:end="185:43"><name pos:start="181:5" pos:end="181:10">status</name> <operator pos:start="181:12" pos:end="181:12">=</operator> <call pos:start="181:14" pos:end="185:43"><name pos:start="181:14" pos:end="181:36"><name pos:start="181:14" pos:end="181:18">vdctx</name><operator pos:start="181:19" pos:end="181:20">-&gt;</operator><name pos:start="181:21" pos:end="181:36">get_proc_address</name></name><argument_list pos:start="181:37" pos:end="185:43">(<argument pos:start="181:38" pos:end="181:50"><expr pos:start="181:38" pos:end="181:50"><name pos:start="181:38" pos:end="181:50"><name pos:start="181:38" pos:end="181:42">vdctx</name><operator pos:start="181:43" pos:end="181:44">-&gt;</operator><name pos:start="181:45" pos:end="181:50">device</name></name></expr></argument>,

                                     <argument pos:start="183:38" pos:end="183:71"><expr pos:start="183:38" pos:end="183:71"><name pos:start="183:38" pos:end="183:71">VDP_FUNC_ID_GET_INFORMATION_STRING</name></expr></argument>,

                                     <argument pos:start="185:38" pos:end="185:42"><expr pos:start="185:38" pos:end="185:42"><operator pos:start="185:38" pos:end="185:38">&amp;</operator><name pos:start="185:39" pos:end="185:42">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="187:5" pos:end="193:20"><if pos:start="187:5" pos:end="189:35">if <condition pos:start="187:8" pos:end="187:32">(<expr pos:start="187:9" pos:end="187:31"><name pos:start="187:9" pos:end="187:14">status</name> <operator pos:start="187:16" pos:end="187:17">!=</operator> <name pos:start="187:19" pos:end="187:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="189:9" pos:end="189:35"><block_content pos:start="189:9" pos:end="189:35">

        <return pos:start="189:9" pos:end="189:35">return <expr pos:start="189:16" pos:end="189:34"><call pos:start="189:16" pos:end="189:34"><name pos:start="189:16" pos:end="189:26">vdpau_error</name><argument_list pos:start="189:27" pos:end="189:34">(<argument pos:start="189:28" pos:end="189:33"><expr pos:start="189:28" pos:end="189:33"><name pos:start="189:28" pos:end="189:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

    <else pos:start="191:5" pos:end="193:20">else<block type="pseudo" pos:start="193:9" pos:end="193:20"><block_content pos:start="193:9" pos:end="193:20">

        <expr_stmt pos:start="193:9" pos:end="193:20"><expr pos:start="193:9" pos:end="193:19"><name pos:start="193:9" pos:end="193:12">info</name> <operator pos:start="193:14" pos:end="193:14">=</operator> <name pos:start="193:16" pos:end="193:19">func</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:32"><expr pos:start="197:5" pos:end="197:31"><name pos:start="197:5" pos:end="197:10">status</name> <operator pos:start="197:12" pos:end="197:12">=</operator> <call pos:start="197:14" pos:end="197:31"><name pos:start="197:14" pos:end="197:17">info</name><argument_list pos:start="197:18" pos:end="197:31">(<argument pos:start="197:19" pos:end="197:30"><expr pos:start="197:19" pos:end="197:30"><operator pos:start="197:19" pos:end="197:19">&amp;</operator><name pos:start="197:20" pos:end="197:30">info_string</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="199:5" pos:end="201:35"><if pos:start="199:5" pos:end="201:35">if <condition pos:start="199:8" pos:end="199:32">(<expr pos:start="199:9" pos:end="199:31"><name pos:start="199:9" pos:end="199:14">status</name> <operator pos:start="199:16" pos:end="199:17">!=</operator> <name pos:start="199:19" pos:end="199:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="201:9" pos:end="201:35"><block_content pos:start="201:9" pos:end="201:35">

        <return pos:start="201:9" pos:end="201:35">return <expr pos:start="201:16" pos:end="201:34"><call pos:start="201:16" pos:end="201:34"><name pos:start="201:16" pos:end="201:26">vdpau_error</name><argument_list pos:start="201:27" pos:end="201:34">(<argument pos:start="201:28" pos:end="201:33"><expr pos:start="201:28" pos:end="201:33"><name pos:start="201:28" pos:end="201:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="203:5" pos:end="211:5"><if pos:start="203:5" pos:end="211:5">if <condition pos:start="203:8" pos:end="205:73">(<expr pos:start="203:9" pos:end="205:72"><name pos:start="203:9" pos:end="203:23"><name pos:start="203:9" pos:end="203:13">avctx</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:23">codec_id</name></name> <operator pos:start="203:25" pos:end="203:26">==</operator> <name pos:start="203:28" pos:end="203:43">AV_CODEC_ID_HEVC</name> <operator pos:start="203:45" pos:end="203:46">&amp;&amp;</operator> <call pos:start="203:48" pos:end="203:81"><name pos:start="203:48" pos:end="203:54">strncmp</name><argument_list pos:start="203:55" pos:end="203:81">(<argument pos:start="203:56" pos:end="203:66"><expr pos:start="203:56" pos:end="203:66"><name pos:start="203:56" pos:end="203:66">info_string</name></expr></argument>, <argument pos:start="203:69" pos:end="203:77"><expr pos:start="203:69" pos:end="203:77"><literal type="string" pos:start="203:69" pos:end="203:77">"NVIDIA "</literal></expr></argument>, <argument pos:start="203:80" pos:end="203:80"><expr pos:start="203:80" pos:end="203:80"><literal type="number" pos:start="203:80" pos:end="203:80">7</literal></expr></argument>)</argument_list></call> <operator pos:start="203:83" pos:end="203:84">==</operator> <literal type="number" pos:start="203:86" pos:end="203:86">0</literal> <operator pos:start="203:88" pos:end="203:89">&amp;&amp;</operator>

        <operator pos:start="205:9" pos:end="205:9">!</operator><operator pos:start="205:10" pos:end="205:10">(</operator><name pos:start="205:11" pos:end="205:30"><name pos:start="205:11" pos:end="205:15">avctx</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:30">hwaccel_flags</name></name> <operator pos:start="205:32" pos:end="205:32">&amp;</operator> <name pos:start="205:34" pos:end="205:71">AV_HWACCEL_FLAG_ALLOW_PROFILE_MISMATCH</name><operator pos:start="205:72" pos:end="205:72">)</operator></expr>)</condition> <block pos:start="205:75" pos:end="211:5">{<block_content pos:start="207:9" pos:end="209:32">

        <expr_stmt pos:start="207:9" pos:end="207:94"><expr pos:start="207:9" pos:end="207:93"><call pos:start="207:9" pos:end="207:93"><name pos:start="207:9" pos:end="207:14">av_log</name><argument_list pos:start="207:15" pos:end="207:93">(<argument pos:start="207:16" pos:end="207:20"><expr pos:start="207:16" pos:end="207:20"><name pos:start="207:16" pos:end="207:20">avctx</name></expr></argument>, <argument pos:start="207:23" pos:end="207:36"><expr pos:start="207:23" pos:end="207:36"><name pos:start="207:23" pos:end="207:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="207:39" pos:end="207:92"><expr pos:start="207:39" pos:end="207:92"><literal type="string" pos:start="207:39" pos:end="207:92">"HEVC with NVIDIA VDPAU drivers is buggy, skipping.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="209:9" pos:end="209:32">return <expr pos:start="209:16" pos:end="209:31"><call pos:start="209:16" pos:end="209:31"><name pos:start="209:16" pos:end="209:22">AVERROR</name><argument_list pos:start="209:23" pos:end="209:31">(<argument pos:start="209:24" pos:end="209:30"><expr pos:start="209:24" pos:end="209:30"><name pos:start="209:24" pos:end="209:30">ENOTSUP</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="215:5" pos:end="219:44"><expr pos:start="215:5" pos:end="219:43"><name pos:start="215:5" pos:end="215:10">status</name> <operator pos:start="215:12" pos:end="215:12">=</operator> <call pos:start="215:14" pos:end="219:43"><name pos:start="215:14" pos:end="215:36"><name pos:start="215:14" pos:end="215:18">vdctx</name><operator pos:start="215:19" pos:end="215:20">-&gt;</operator><name pos:start="215:21" pos:end="215:36">get_proc_address</name></name><argument_list pos:start="215:37" pos:end="219:43">(<argument pos:start="215:38" pos:end="215:50"><expr pos:start="215:38" pos:end="215:50"><name pos:start="215:38" pos:end="215:50"><name pos:start="215:38" pos:end="215:42">vdctx</name><operator pos:start="215:43" pos:end="215:44">-&gt;</operator><name pos:start="215:45" pos:end="215:50">device</name></name></expr></argument>,

                                     <argument pos:start="217:38" pos:end="217:81"><expr pos:start="217:38" pos:end="217:81"><name pos:start="217:38" pos:end="217:81">VDP_FUNC_ID_VIDEO_SURFACE_QUERY_CAPABILITIES</name></expr></argument>,

                                     <argument pos:start="219:38" pos:end="219:42"><expr pos:start="219:38" pos:end="219:42"><operator pos:start="219:38" pos:end="219:38">&amp;</operator><name pos:start="219:39" pos:end="219:42">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="221:5" pos:end="227:34"><if pos:start="221:5" pos:end="223:35">if <condition pos:start="221:8" pos:end="221:32">(<expr pos:start="221:9" pos:end="221:31"><name pos:start="221:9" pos:end="221:14">status</name> <operator pos:start="221:16" pos:end="221:17">!=</operator> <name pos:start="221:19" pos:end="221:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="223:9" pos:end="223:35"><block_content pos:start="223:9" pos:end="223:35">

        <return pos:start="223:9" pos:end="223:35">return <expr pos:start="223:16" pos:end="223:34"><call pos:start="223:16" pos:end="223:34"><name pos:start="223:16" pos:end="223:26">vdpau_error</name><argument_list pos:start="223:27" pos:end="223:34">(<argument pos:start="223:28" pos:end="223:33"><expr pos:start="223:28" pos:end="223:33"><name pos:start="223:28" pos:end="223:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

    <else pos:start="225:5" pos:end="227:34">else<block type="pseudo" pos:start="227:9" pos:end="227:34"><block_content pos:start="227:9" pos:end="227:34">

        <expr_stmt pos:start="227:9" pos:end="227:34"><expr pos:start="227:9" pos:end="227:33"><name pos:start="227:9" pos:end="227:26">surface_query_caps</name> <operator pos:start="227:28" pos:end="227:28">=</operator> <name pos:start="227:30" pos:end="227:33">func</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="231:5" pos:end="233:57"><expr pos:start="231:5" pos:end="233:56"><name pos:start="231:5" pos:end="231:10">status</name> <operator pos:start="231:12" pos:end="231:12">=</operator> <call pos:start="231:14" pos:end="233:56"><name pos:start="231:14" pos:end="231:31">surface_query_caps</name><argument_list pos:start="231:32" pos:end="233:56">(<argument pos:start="231:33" pos:end="231:45"><expr pos:start="231:33" pos:end="231:45"><name pos:start="231:33" pos:end="231:45"><name pos:start="231:33" pos:end="231:37">vdctx</name><operator pos:start="231:38" pos:end="231:39">-&gt;</operator><name pos:start="231:40" pos:end="231:45">device</name></name></expr></argument>, <argument pos:start="231:48" pos:end="231:51"><expr pos:start="231:48" pos:end="231:51"><name pos:start="231:48" pos:end="231:51">type</name></expr></argument>, <argument pos:start="231:54" pos:end="231:63"><expr pos:start="231:54" pos:end="231:63"><operator pos:start="231:54" pos:end="231:54">&amp;</operator><name pos:start="231:55" pos:end="231:63">supported</name></expr></argument>,

                                <argument pos:start="233:33" pos:end="233:42"><expr pos:start="233:33" pos:end="233:42"><operator pos:start="233:33" pos:end="233:33">&amp;</operator><name pos:start="233:34" pos:end="233:42">max_width</name></expr></argument>, <argument pos:start="233:45" pos:end="233:55"><expr pos:start="233:45" pos:end="233:55"><operator pos:start="233:45" pos:end="233:45">&amp;</operator><name pos:start="233:46" pos:end="233:55">max_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="235:5" pos:end="237:35"><if pos:start="235:5" pos:end="237:35">if <condition pos:start="235:8" pos:end="235:32">(<expr pos:start="235:9" pos:end="235:31"><name pos:start="235:9" pos:end="235:14">status</name> <operator pos:start="235:16" pos:end="235:17">!=</operator> <name pos:start="235:19" pos:end="235:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="237:9" pos:end="237:35"><block_content pos:start="237:9" pos:end="237:35">

        <return pos:start="237:9" pos:end="237:35">return <expr pos:start="237:16" pos:end="237:34"><call pos:start="237:16" pos:end="237:34"><name pos:start="237:16" pos:end="237:26">vdpau_error</name><argument_list pos:start="237:27" pos:end="237:34">(<argument pos:start="237:28" pos:end="237:33"><expr pos:start="237:28" pos:end="237:33"><name pos:start="237:28" pos:end="237:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="239:5" pos:end="243:32"><if pos:start="239:5" pos:end="243:32">if <condition pos:start="239:8" pos:end="241:49">(<expr pos:start="239:9" pos:end="241:48"><name pos:start="239:9" pos:end="239:17">supported</name> <operator pos:start="239:19" pos:end="239:20">!=</operator> <name pos:start="239:22" pos:end="239:29">VDP_TRUE</name> <operator pos:start="239:31" pos:end="239:32">||</operator>

        <name pos:start="241:9" pos:end="241:17">max_width</name> <operator pos:start="241:19" pos:end="241:19">&lt;</operator> <name pos:start="241:21" pos:end="241:25">width</name> <operator pos:start="241:27" pos:end="241:28">||</operator> <name pos:start="241:30" pos:end="241:39">max_height</name> <operator pos:start="241:41" pos:end="241:41">&lt;</operator> <name pos:start="241:43" pos:end="241:48">height</name></expr>)</condition><block type="pseudo" pos:start="243:9" pos:end="243:32"><block_content pos:start="243:9" pos:end="243:32">

        <return pos:start="243:9" pos:end="243:32">return <expr pos:start="243:16" pos:end="243:31"><call pos:start="243:16" pos:end="243:31"><name pos:start="243:16" pos:end="243:22">AVERROR</name><argument_list pos:start="243:23" pos:end="243:31">(<argument pos:start="243:24" pos:end="243:30"><expr pos:start="243:24" pos:end="243:30"><name pos:start="243:24" pos:end="243:30">ENOTSUP</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="247:5" pos:end="251:44"><expr pos:start="247:5" pos:end="251:43"><name pos:start="247:5" pos:end="247:10">status</name> <operator pos:start="247:12" pos:end="247:12">=</operator> <call pos:start="247:14" pos:end="251:43"><name pos:start="247:14" pos:end="247:36"><name pos:start="247:14" pos:end="247:18">vdctx</name><operator pos:start="247:19" pos:end="247:20">-&gt;</operator><name pos:start="247:21" pos:end="247:36">get_proc_address</name></name><argument_list pos:start="247:37" pos:end="251:43">(<argument pos:start="247:38" pos:end="247:50"><expr pos:start="247:38" pos:end="247:50"><name pos:start="247:38" pos:end="247:50"><name pos:start="247:38" pos:end="247:42">vdctx</name><operator pos:start="247:43" pos:end="247:44">-&gt;</operator><name pos:start="247:45" pos:end="247:50">device</name></name></expr></argument>,

                                     <argument pos:start="249:38" pos:end="249:75"><expr pos:start="249:38" pos:end="249:75"><name pos:start="249:38" pos:end="249:75">VDP_FUNC_ID_DECODER_QUERY_CAPABILITIES</name></expr></argument>,

                                     <argument pos:start="251:38" pos:end="251:42"><expr pos:start="251:38" pos:end="251:42"><operator pos:start="251:38" pos:end="251:38">&amp;</operator><name pos:start="251:39" pos:end="251:42">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="253:5" pos:end="259:34"><if pos:start="253:5" pos:end="255:35">if <condition pos:start="253:8" pos:end="253:32">(<expr pos:start="253:9" pos:end="253:31"><name pos:start="253:9" pos:end="253:14">status</name> <operator pos:start="253:16" pos:end="253:17">!=</operator> <name pos:start="253:19" pos:end="253:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="255:9" pos:end="255:35"><block_content pos:start="255:9" pos:end="255:35">

        <return pos:start="255:9" pos:end="255:35">return <expr pos:start="255:16" pos:end="255:34"><call pos:start="255:16" pos:end="255:34"><name pos:start="255:16" pos:end="255:26">vdpau_error</name><argument_list pos:start="255:27" pos:end="255:34">(<argument pos:start="255:28" pos:end="255:33"><expr pos:start="255:28" pos:end="255:33"><name pos:start="255:28" pos:end="255:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

    <else pos:start="257:5" pos:end="259:34">else<block type="pseudo" pos:start="259:9" pos:end="259:34"><block_content pos:start="259:9" pos:end="259:34">

        <expr_stmt pos:start="259:9" pos:end="259:34"><expr pos:start="259:9" pos:end="259:33"><name pos:start="259:9" pos:end="259:26">decoder_query_caps</name> <operator pos:start="259:28" pos:end="259:28">=</operator> <name pos:start="259:30" pos:end="259:33">func</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="263:5" pos:end="268:0"><expr pos:start="263:5" pos:end="265:65"><name pos:start="263:5" pos:end="263:10">status</name> <operator pos:start="263:12" pos:end="263:12">=</operator> <call pos:start="263:14" pos:end="265:65"><name pos:start="263:14" pos:end="263:31">decoder_query_caps</name><argument_list pos:start="263:32" pos:end="265:65">(<argument pos:start="263:33" pos:end="263:45"><expr pos:start="263:33" pos:end="263:45"><name pos:start="263:33" pos:end="263:45"><name pos:start="263:33" pos:end="263:37">vdctx</name><operator pos:start="263:38" pos:end="263:39">-&gt;</operator><name pos:start="263:40" pos:end="263:45">device</name></name></expr></argument>, <argument pos:start="263:48" pos:end="263:54"><expr pos:start="263:48" pos:end="263:54"><name pos:start="263:48" pos:end="263:54">profile</name></expr></argument>, <argument pos:start="263:57" pos:end="263:66"><expr pos:start="263:57" pos:end="263:66"><operator pos:start="263:57" pos:end="263:57">&amp;</operator><name pos:start="263:58" pos:end="263:66">supported</name></expr></argument>, <argument pos:start="263:69" pos:end="263:78"><expr pos:start="263:69" pos:end="263:78"><operator pos:start="263:69" pos:end="263:69">&amp;</operator><name pos:start="263:70" pos:end="263:78">max_level</name></expr></argument>,

                                <argument pos:start="265:33" pos:end="265:39"><expr pos:start="265:33" pos:end="265:39"><operator pos:start="265:33" pos:end="265:33">&amp;</operator><name pos:start="265:34" pos:end="265:39">max_mb</name></expr></argument>, <argument pos:start="265:42" pos:end="265:51"><expr pos:start="265:42" pos:end="265:51"><operator pos:start="265:42" pos:end="265:42">&amp;</operator><name pos:start="265:43" pos:end="265:51">max_width</name></expr></argument>, <argument pos:start="265:54" pos:end="265:64"><expr pos:start="265:54" pos:end="265:64"><operator pos:start="265:54" pos:end="265:54">&amp;</operator><name pos:start="265:55" pos:end="265:64">max_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="267:1" pos:end="267:52">#<cpp:directive pos:start="267:2" pos:end="267:6">ifdef</cpp:directive> <name pos:start="267:8" pos:end="267:52">VDP_DECODER_PROFILE_H264_CONSTRAINED_BASELINE</name></cpp:ifdef>

    <if_stmt pos:start="269:5" pos:end="282:0"><if pos:start="269:5" pos:end="282:0">if <condition pos:start="269:8" pos:end="269:119">(<expr pos:start="269:9" pos:end="269:118"><operator pos:start="269:9" pos:end="269:9">(</operator><name pos:start="269:10" pos:end="269:15">status</name> <operator pos:start="269:17" pos:end="269:18">!=</operator> <name pos:start="269:20" pos:end="269:32">VDP_STATUS_OK</name> <operator pos:start="269:34" pos:end="269:35">||</operator> <name pos:start="269:37" pos:end="269:45">supported</name> <operator pos:start="269:47" pos:end="269:48">!=</operator> <name pos:start="269:50" pos:end="269:57">VDP_TRUE</name><operator pos:start="269:58" pos:end="269:58">)</operator> <operator pos:start="269:60" pos:end="269:61">&amp;&amp;</operator> <name pos:start="269:63" pos:end="269:69">profile</name> <operator pos:start="269:71" pos:end="269:72">==</operator> <name pos:start="269:74" pos:end="269:118">VDP_DECODER_PROFILE_H264_CONSTRAINED_BASELINE</name></expr>)</condition> <block pos:start="269:121" pos:end="282:0">{<block_content pos:start="271:9" pos:end="277:61">

        <expr_stmt pos:start="271:9" pos:end="271:48"><expr pos:start="271:9" pos:end="271:47"><name pos:start="271:9" pos:end="271:15">profile</name> <operator pos:start="271:17" pos:end="271:17">=</operator> <name pos:start="271:19" pos:end="271:47">VDP_DECODER_PROFILE_H264_MAIN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="277:61"><expr pos:start="273:9" pos:end="277:60"><name pos:start="273:9" pos:end="273:14">status</name> <operator pos:start="273:16" pos:end="273:16">=</operator> <call pos:start="273:18" pos:end="277:60"><name pos:start="273:18" pos:end="273:35">decoder_query_caps</name><argument_list pos:start="273:36" pos:end="277:60">(<argument pos:start="273:37" pos:end="273:49"><expr pos:start="273:37" pos:end="273:49"><name pos:start="273:37" pos:end="273:49"><name pos:start="273:37" pos:end="273:41">vdctx</name><operator pos:start="273:42" pos:end="273:43">-&gt;</operator><name pos:start="273:44" pos:end="273:49">device</name></name></expr></argument>, <argument pos:start="273:52" pos:end="273:58"><expr pos:start="273:52" pos:end="273:58"><name pos:start="273:52" pos:end="273:58">profile</name></expr></argument>, <argument pos:start="273:61" pos:end="273:70"><expr pos:start="273:61" pos:end="273:70"><operator pos:start="273:61" pos:end="273:61">&amp;</operator><name pos:start="273:62" pos:end="273:70">supported</name></expr></argument>,

                                    <argument pos:start="275:37" pos:end="275:46"><expr pos:start="275:37" pos:end="275:46"><operator pos:start="275:37" pos:end="275:37">&amp;</operator><name pos:start="275:38" pos:end="275:46">max_level</name></expr></argument>, <argument pos:start="275:49" pos:end="275:55"><expr pos:start="275:49" pos:end="275:55"><operator pos:start="275:49" pos:end="275:49">&amp;</operator><name pos:start="275:50" pos:end="275:55">max_mb</name></expr></argument>,

                                    <argument pos:start="277:37" pos:end="277:46"><expr pos:start="277:37" pos:end="277:46"><operator pos:start="277:37" pos:end="277:37">&amp;</operator><name pos:start="277:38" pos:end="277:46">max_width</name></expr></argument>, <argument pos:start="277:49" pos:end="277:59"><expr pos:start="277:49" pos:end="277:59"><operator pos:start="277:49" pos:end="277:49">&amp;</operator><name pos:start="277:50" pos:end="277:59">max_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="281:1" pos:end="281:6">#<cpp:directive pos:start="281:2" pos:end="281:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="283:5" pos:end="285:35"><if pos:start="283:5" pos:end="285:35">if <condition pos:start="283:8" pos:end="283:32">(<expr pos:start="283:9" pos:end="283:31"><name pos:start="283:9" pos:end="283:14">status</name> <operator pos:start="283:16" pos:end="283:17">!=</operator> <name pos:start="283:19" pos:end="283:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="285:9" pos:end="285:35"><block_content pos:start="285:9" pos:end="285:35">

        <return pos:start="285:9" pos:end="285:35">return <expr pos:start="285:16" pos:end="285:34"><call pos:start="285:16" pos:end="285:34"><name pos:start="285:16" pos:end="285:26">vdpau_error</name><argument_list pos:start="285:27" pos:end="285:34">(<argument pos:start="285:28" pos:end="285:33"><expr pos:start="285:28" pos:end="285:33"><name pos:start="285:28" pos:end="285:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="289:5" pos:end="293:32"><if pos:start="289:5" pos:end="293:32">if <condition pos:start="289:8" pos:end="291:49">(<expr pos:start="289:9" pos:end="291:48"><name pos:start="289:9" pos:end="289:17">supported</name> <operator pos:start="289:19" pos:end="289:20">!=</operator> <name pos:start="289:22" pos:end="289:29">VDP_TRUE</name> <operator pos:start="289:31" pos:end="289:32">||</operator> <name pos:start="289:34" pos:end="289:42">max_level</name> <operator pos:start="289:44" pos:end="289:44">&lt;</operator> <name pos:start="289:46" pos:end="289:50">level</name> <operator pos:start="289:52" pos:end="289:53">||</operator>

        <name pos:start="291:9" pos:end="291:17">max_width</name> <operator pos:start="291:19" pos:end="291:19">&lt;</operator> <name pos:start="291:21" pos:end="291:25">width</name> <operator pos:start="291:27" pos:end="291:28">||</operator> <name pos:start="291:30" pos:end="291:39">max_height</name> <operator pos:start="291:41" pos:end="291:41">&lt;</operator> <name pos:start="291:43" pos:end="291:48">height</name></expr>)</condition><block type="pseudo" pos:start="293:9" pos:end="293:32"><block_content pos:start="293:9" pos:end="293:32">

        <return pos:start="293:9" pos:end="293:32">return <expr pos:start="293:16" pos:end="293:31"><call pos:start="293:16" pos:end="293:31"><name pos:start="293:16" pos:end="293:22">AVERROR</name><argument_list pos:start="293:23" pos:end="293:31">(<argument pos:start="293:24" pos:end="293:30"><expr pos:start="293:24" pos:end="293:30"><name pos:start="293:24" pos:end="293:30">ENOTSUP</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="297:5" pos:end="299:44"><expr pos:start="297:5" pos:end="299:43"><name pos:start="297:5" pos:end="297:10">status</name> <operator pos:start="297:12" pos:end="297:12">=</operator> <call pos:start="297:14" pos:end="299:43"><name pos:start="297:14" pos:end="297:36"><name pos:start="297:14" pos:end="297:18">vdctx</name><operator pos:start="297:19" pos:end="297:20">-&gt;</operator><name pos:start="297:21" pos:end="297:36">get_proc_address</name></name><argument_list pos:start="297:37" pos:end="299:43">(<argument pos:start="297:38" pos:end="297:50"><expr pos:start="297:38" pos:end="297:50"><name pos:start="297:38" pos:end="297:50"><name pos:start="297:38" pos:end="297:42">vdctx</name><operator pos:start="297:43" pos:end="297:44">-&gt;</operator><name pos:start="297:45" pos:end="297:50">device</name></name></expr></argument>, <argument pos:start="297:53" pos:end="297:78"><expr pos:start="297:53" pos:end="297:78"><name pos:start="297:53" pos:end="297:78">VDP_FUNC_ID_DECODER_CREATE</name></expr></argument>,

                                     <argument pos:start="299:38" pos:end="299:42"><expr pos:start="299:38" pos:end="299:42"><operator pos:start="299:38" pos:end="299:38">&amp;</operator><name pos:start="299:39" pos:end="299:42">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="301:5" pos:end="307:22"><if pos:start="301:5" pos:end="303:35">if <condition pos:start="301:8" pos:end="301:32">(<expr pos:start="301:9" pos:end="301:31"><name pos:start="301:9" pos:end="301:14">status</name> <operator pos:start="301:16" pos:end="301:17">!=</operator> <name pos:start="301:19" pos:end="301:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="303:9" pos:end="303:35"><block_content pos:start="303:9" pos:end="303:35">

        <return pos:start="303:9" pos:end="303:35">return <expr pos:start="303:16" pos:end="303:34"><call pos:start="303:16" pos:end="303:34"><name pos:start="303:16" pos:end="303:26">vdpau_error</name><argument_list pos:start="303:27" pos:end="303:34">(<argument pos:start="303:28" pos:end="303:33"><expr pos:start="303:28" pos:end="303:33"><name pos:start="303:28" pos:end="303:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

    <else pos:start="305:5" pos:end="307:22">else<block type="pseudo" pos:start="307:9" pos:end="307:22"><block_content pos:start="307:9" pos:end="307:22">

        <expr_stmt pos:start="307:9" pos:end="307:22"><expr pos:start="307:9" pos:end="307:21"><name pos:start="307:9" pos:end="307:14">create</name> <operator pos:start="307:16" pos:end="307:16">=</operator> <name pos:start="307:18" pos:end="307:21">func</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="311:5" pos:end="313:44"><expr pos:start="311:5" pos:end="313:43"><name pos:start="311:5" pos:end="311:10">status</name> <operator pos:start="311:12" pos:end="311:12">=</operator> <call pos:start="311:14" pos:end="313:43"><name pos:start="311:14" pos:end="311:36"><name pos:start="311:14" pos:end="311:18">vdctx</name><operator pos:start="311:19" pos:end="311:20">-&gt;</operator><name pos:start="311:21" pos:end="311:36">get_proc_address</name></name><argument_list pos:start="311:37" pos:end="313:43">(<argument pos:start="311:38" pos:end="311:50"><expr pos:start="311:38" pos:end="311:50"><name pos:start="311:38" pos:end="311:50"><name pos:start="311:38" pos:end="311:42">vdctx</name><operator pos:start="311:43" pos:end="311:44">-&gt;</operator><name pos:start="311:45" pos:end="311:50">device</name></name></expr></argument>, <argument pos:start="311:53" pos:end="311:78"><expr pos:start="311:53" pos:end="311:78"><name pos:start="311:53" pos:end="311:78">VDP_FUNC_ID_DECODER_RENDER</name></expr></argument>,

                                     <argument pos:start="313:38" pos:end="313:42"><expr pos:start="313:38" pos:end="313:42"><operator pos:start="313:38" pos:end="313:38">&amp;</operator><name pos:start="313:39" pos:end="313:42">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="315:5" pos:end="321:29"><if pos:start="315:5" pos:end="317:35">if <condition pos:start="315:8" pos:end="315:32">(<expr pos:start="315:9" pos:end="315:31"><name pos:start="315:9" pos:end="315:14">status</name> <operator pos:start="315:16" pos:end="315:17">!=</operator> <name pos:start="315:19" pos:end="315:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="317:9" pos:end="317:35"><block_content pos:start="317:9" pos:end="317:35">

        <return pos:start="317:9" pos:end="317:35">return <expr pos:start="317:16" pos:end="317:34"><call pos:start="317:16" pos:end="317:34"><name pos:start="317:16" pos:end="317:26">vdpau_error</name><argument_list pos:start="317:27" pos:end="317:34">(<argument pos:start="317:28" pos:end="317:33"><expr pos:start="317:28" pos:end="317:33"><name pos:start="317:28" pos:end="317:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

    <else pos:start="319:5" pos:end="321:29">else<block type="pseudo" pos:start="321:9" pos:end="321:29"><block_content pos:start="321:9" pos:end="321:29">

        <expr_stmt pos:start="321:9" pos:end="321:29"><expr pos:start="321:9" pos:end="321:28"><name pos:start="321:9" pos:end="321:21"><name pos:start="321:9" pos:end="321:13">vdctx</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:21">render</name></name> <operator pos:start="321:23" pos:end="321:23">=</operator> <name pos:start="321:25" pos:end="321:28">func</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="325:5" pos:end="327:37"><expr pos:start="325:5" pos:end="327:36"><name pos:start="325:5" pos:end="325:10">status</name> <operator pos:start="325:12" pos:end="325:12">=</operator> <call pos:start="325:14" pos:end="327:36"><name pos:start="325:14" pos:end="325:19">create</name><argument_list pos:start="325:20" pos:end="327:36">(<argument pos:start="325:21" pos:end="325:33"><expr pos:start="325:21" pos:end="325:33"><name pos:start="325:21" pos:end="325:33"><name pos:start="325:21" pos:end="325:25">vdctx</name><operator pos:start="325:26" pos:end="325:27">-&gt;</operator><name pos:start="325:28" pos:end="325:33">device</name></name></expr></argument>, <argument pos:start="325:36" pos:end="325:42"><expr pos:start="325:36" pos:end="325:42"><name pos:start="325:36" pos:end="325:42">profile</name></expr></argument>, <argument pos:start="325:45" pos:end="325:49"><expr pos:start="325:45" pos:end="325:49"><name pos:start="325:45" pos:end="325:49">width</name></expr></argument>, <argument pos:start="325:52" pos:end="325:57"><expr pos:start="325:52" pos:end="325:57"><name pos:start="325:52" pos:end="325:57">height</name></expr></argument>, <argument pos:start="325:60" pos:end="325:70"><expr pos:start="325:60" pos:end="325:70"><name pos:start="325:60" pos:end="325:70"><name pos:start="325:60" pos:end="325:64">avctx</name><operator pos:start="325:65" pos:end="325:66">-&gt;</operator><name pos:start="325:67" pos:end="325:70">refs</name></name></expr></argument>,

                    <argument pos:start="327:21" pos:end="327:35"><expr pos:start="327:21" pos:end="327:35"><operator pos:start="327:21" pos:end="327:21">&amp;</operator><name pos:start="327:22" pos:end="327:35"><name pos:start="327:22" pos:end="327:26">vdctx</name><operator pos:start="327:27" pos:end="327:28">-&gt;</operator><name pos:start="327:29" pos:end="327:35">decoder</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="329:5" pos:end="335:5"><if pos:start="329:5" pos:end="335:5">if <condition pos:start="329:8" pos:end="329:32">(<expr pos:start="329:9" pos:end="329:31"><name pos:start="329:9" pos:end="329:14">status</name> <operator pos:start="329:16" pos:end="329:17">==</operator> <name pos:start="329:19" pos:end="329:31">VDP_STATUS_OK</name></expr>)</condition> <block pos:start="329:34" pos:end="335:5">{<block_content pos:start="331:9" pos:end="333:44">

        <expr_stmt pos:start="331:9" pos:end="331:43"><expr pos:start="331:9" pos:end="331:42"><name pos:start="331:9" pos:end="331:20"><name pos:start="331:9" pos:end="331:13">vdctx</name><operator pos:start="331:14" pos:end="331:15">-&gt;</operator><name pos:start="331:16" pos:end="331:20">width</name></name>  <operator pos:start="331:23" pos:end="331:23">=</operator> <name pos:start="331:25" pos:end="331:42"><name pos:start="331:25" pos:end="331:29">avctx</name><operator pos:start="331:30" pos:end="331:31">-&gt;</operator><name pos:start="331:32" pos:end="331:42">coded_width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:44"><expr pos:start="333:9" pos:end="333:43"><name pos:start="333:9" pos:end="333:21"><name pos:start="333:9" pos:end="333:13">vdctx</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:21">height</name></name> <operator pos:start="333:23" pos:end="333:23">=</operator> <name pos:start="333:25" pos:end="333:43"><name pos:start="333:25" pos:end="333:29">avctx</name><operator pos:start="333:30" pos:end="333:31">-&gt;</operator><name pos:start="333:32" pos:end="333:43">coded_height</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="339:5" pos:end="339:31">return <expr pos:start="339:12" pos:end="339:30"><call pos:start="339:12" pos:end="339:30"><name pos:start="339:12" pos:end="339:22">vdpau_error</name><argument_list pos:start="339:23" pos:end="339:30">(<argument pos:start="339:24" pos:end="339:29"><expr pos:start="339:24" pos:end="339:29"><name pos:start="339:24" pos:end="339:29">status</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function></unit>
