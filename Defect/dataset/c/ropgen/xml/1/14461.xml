<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14461.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">uint8_t</name></type> <name pos:start="1:16" pos:end="1:29">eepro100_read1</name><parameter_list pos:start="1:30" pos:end="1:63">(<parameter pos:start="1:31" pos:end="1:47"><decl pos:start="1:31" pos:end="1:47"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:43">EEPRO100State</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type> <name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:57">uint32_t</name></type> <name pos:start="1:59" pos:end="1:62">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:15">val</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="11:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:45">(<expr pos:start="7:9" pos:end="7:44"><name pos:start="7:9" pos:end="7:12">addr</name> <operator pos:start="7:14" pos:end="7:15">&lt;=</operator> <sizeof pos:start="7:17" pos:end="7:30">sizeof<argument_list pos:start="7:23" pos:end="7:30">(<argument pos:start="7:24" pos:end="7:29"><expr pos:start="7:24" pos:end="7:29"><name pos:start="7:24" pos:end="7:29"><name pos:start="7:24" pos:end="7:24">s</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:29">mem</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="7:32" pos:end="7:32">-</operator> <sizeof pos:start="7:34" pos:end="7:44">sizeof<argument_list pos:start="7:40" pos:end="7:44">(<argument pos:start="7:41" pos:end="7:43"><expr pos:start="7:41" pos:end="7:43"><name pos:start="7:41" pos:end="7:43">val</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="7:47" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:49">

        <expr_stmt pos:start="9:9" pos:end="9:49"><expr pos:start="9:9" pos:end="9:48"><call pos:start="9:9" pos:end="9:48"><name pos:start="9:9" pos:end="9:14">memcpy</name><argument_list pos:start="9:15" pos:end="9:48">(<argument pos:start="9:16" pos:end="9:19"><expr pos:start="9:16" pos:end="9:19"><operator pos:start="9:16" pos:end="9:16">&amp;</operator><name pos:start="9:17" pos:end="9:19">val</name></expr></argument>, <argument pos:start="9:22" pos:end="9:34"><expr pos:start="9:22" pos:end="9:34"><operator pos:start="9:22" pos:end="9:22">&amp;</operator><name pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:28">mem</name><index pos:start="9:29" pos:end="9:34">[<expr pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:33">addr</name></expr>]</index></name></expr></argument>, <argument pos:start="9:37" pos:end="9:47"><expr pos:start="9:37" pos:end="9:47"><sizeof pos:start="9:37" pos:end="9:47">sizeof<argument_list pos:start="9:43" pos:end="9:47">(<argument pos:start="9:44" pos:end="9:46"><expr pos:start="9:44" pos:end="9:46"><name pos:start="9:44" pos:end="9:46">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="15:5" pos:end="79:5">switch <condition pos:start="15:12" pos:end="15:17">(<expr pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:16">addr</name></expr>)</condition> <block pos:start="15:19" pos:end="79:5">{<block_content pos:start="17:5" pos:end="77:37">

    <case pos:start="17:5" pos:end="17:19">case <expr pos:start="17:10" pos:end="17:18"><name pos:start="17:10" pos:end="17:18">SCBStatus</name></expr>:</case>

    <case pos:start="19:5" pos:end="19:16">case <expr pos:start="19:10" pos:end="19:15"><name pos:start="19:10" pos:end="19:15">SCBAck</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:73"><expr pos:start="21:9" pos:end="21:72"><call pos:start="21:9" pos:end="21:72"><name pos:start="21:9" pos:end="21:13">TRACE</name><argument_list pos:start="21:14" pos:end="21:72">(<argument pos:start="21:15" pos:end="21:19"><expr pos:start="21:15" pos:end="21:19"><name pos:start="21:15" pos:end="21:19">OTHER</name></expr></argument>, <argument pos:start="21:22" pos:end="21:71"><expr pos:start="21:22" pos:end="21:71"><call pos:start="21:22" pos:end="21:71"><name pos:start="21:22" pos:end="21:27">logout</name><argument_list pos:start="21:28" pos:end="21:71">(<argument pos:start="21:29" pos:end="21:50"><expr pos:start="21:29" pos:end="21:50"><literal type="string" pos:start="21:29" pos:end="21:50">"addr=%s val=0x%02x\n"</literal></expr></argument>, <argument pos:start="21:53" pos:end="21:65"><expr pos:start="21:53" pos:end="21:65"><call pos:start="21:53" pos:end="21:65"><name pos:start="21:53" pos:end="21:59">regname</name><argument_list pos:start="21:60" pos:end="21:65">(<argument pos:start="21:61" pos:end="21:64"><expr pos:start="21:61" pos:end="21:64"><name pos:start="21:61" pos:end="21:64">addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:68" pos:end="21:70"><expr pos:start="21:68" pos:end="21:70"><name pos:start="21:68" pos:end="21:70">val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:16">case <expr pos:start="25:10" pos:end="25:15"><name pos:start="25:10" pos:end="25:15">SCBCmd</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="34:0"><expr pos:start="27:9" pos:end="27:72"><call pos:start="27:9" pos:end="27:72"><name pos:start="27:9" pos:end="27:13">TRACE</name><argument_list pos:start="27:14" pos:end="27:72">(<argument pos:start="27:15" pos:end="27:19"><expr pos:start="27:15" pos:end="27:19"><name pos:start="27:15" pos:end="27:19">OTHER</name></expr></argument>, <argument pos:start="27:22" pos:end="27:71"><expr pos:start="27:22" pos:end="27:71"><call pos:start="27:22" pos:end="27:71"><name pos:start="27:22" pos:end="27:27">logout</name><argument_list pos:start="27:28" pos:end="27:71">(<argument pos:start="27:29" pos:end="27:50"><expr pos:start="27:29" pos:end="27:50"><literal type="string" pos:start="27:29" pos:end="27:50">"addr=%s val=0x%02x\n"</literal></expr></argument>, <argument pos:start="27:53" pos:end="27:65"><expr pos:start="27:53" pos:end="27:65"><call pos:start="27:53" pos:end="27:65"><name pos:start="27:53" pos:end="27:59">regname</name><argument_list pos:start="27:60" pos:end="27:65">(<argument pos:start="27:61" pos:end="27:64"><expr pos:start="27:61" pos:end="27:64"><name pos:start="27:61" pos:end="27:64">addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:68" pos:end="27:70"><expr pos:start="27:68" pos:end="27:70"><name pos:start="27:68" pos:end="27:70">val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="29:1" pos:end="29:5">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:5"><literal type="number" pos:start="29:5" pos:end="29:5">0</literal></expr></cpp:if>

        val = eepro100_read_command(s);

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:20">case <expr pos:start="37:10" pos:end="37:19"><name pos:start="37:10" pos:end="37:19">SCBIntmask</name></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:73"><expr pos:start="39:9" pos:end="39:72"><call pos:start="39:9" pos:end="39:72"><name pos:start="39:9" pos:end="39:13">TRACE</name><argument_list pos:start="39:14" pos:end="39:72">(<argument pos:start="39:15" pos:end="39:19"><expr pos:start="39:15" pos:end="39:19"><name pos:start="39:15" pos:end="39:19">OTHER</name></expr></argument>, <argument pos:start="39:22" pos:end="39:71"><expr pos:start="39:22" pos:end="39:71"><call pos:start="39:22" pos:end="39:71"><name pos:start="39:22" pos:end="39:27">logout</name><argument_list pos:start="39:28" pos:end="39:71">(<argument pos:start="39:29" pos:end="39:50"><expr pos:start="39:29" pos:end="39:50"><literal type="string" pos:start="39:29" pos:end="39:50">"addr=%s val=0x%02x\n"</literal></expr></argument>, <argument pos:start="39:53" pos:end="39:65"><expr pos:start="39:53" pos:end="39:65"><call pos:start="39:53" pos:end="39:65"><name pos:start="39:53" pos:end="39:59">regname</name><argument_list pos:start="39:60" pos:end="39:65">(<argument pos:start="39:61" pos:end="39:64"><expr pos:start="39:61" pos:end="39:64"><name pos:start="39:61" pos:end="39:64">addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:68" pos:end="39:70"><expr pos:start="39:68" pos:end="39:70"><name pos:start="39:68" pos:end="39:70">val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:21">case <expr pos:start="43:10" pos:end="43:20"><name pos:start="43:10" pos:end="43:16">SCBPort</name> <operator pos:start="43:18" pos:end="43:18">+</operator> <literal type="number" pos:start="43:20" pos:end="43:20">3</literal></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:73"><expr pos:start="45:9" pos:end="45:72"><call pos:start="45:9" pos:end="45:72"><name pos:start="45:9" pos:end="45:13">TRACE</name><argument_list pos:start="45:14" pos:end="45:72">(<argument pos:start="45:15" pos:end="45:19"><expr pos:start="45:15" pos:end="45:19"><name pos:start="45:15" pos:end="45:19">OTHER</name></expr></argument>, <argument pos:start="45:22" pos:end="45:71"><expr pos:start="45:22" pos:end="45:71"><call pos:start="45:22" pos:end="45:71"><name pos:start="45:22" pos:end="45:27">logout</name><argument_list pos:start="45:28" pos:end="45:71">(<argument pos:start="45:29" pos:end="45:50"><expr pos:start="45:29" pos:end="45:50"><literal type="string" pos:start="45:29" pos:end="45:50">"addr=%s val=0x%02x\n"</literal></expr></argument>, <argument pos:start="45:53" pos:end="45:65"><expr pos:start="45:53" pos:end="45:65"><call pos:start="45:53" pos:end="45:65"><name pos:start="45:53" pos:end="45:59">regname</name><argument_list pos:start="45:60" pos:end="45:65">(<argument pos:start="45:61" pos:end="45:64"><expr pos:start="45:61" pos:end="45:64"><name pos:start="45:61" pos:end="45:64">addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:68" pos:end="45:70"><expr pos:start="45:68" pos:end="45:70"><name pos:start="45:68" pos:end="45:70">val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:19">case <expr pos:start="49:10" pos:end="49:18"><name pos:start="49:10" pos:end="49:18">SCBeeprom</name></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:38"><expr pos:start="51:9" pos:end="51:37"><name pos:start="51:9" pos:end="51:11">val</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:37"><name pos:start="51:15" pos:end="51:34">eepro100_read_eeprom</name><argument_list pos:start="51:35" pos:end="51:37">(<argument pos:start="51:36" pos:end="51:36"><expr pos:start="51:36" pos:end="51:36"><name pos:start="51:36" pos:end="51:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:17">case <expr pos:start="55:10" pos:end="55:16"><name pos:start="55:10" pos:end="55:16">SCBpmdr</name></expr>:</case>       <comment type="block" pos:start="55:25" pos:end="55:62">/* Power Management Driver Register */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:16"><expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:11">val</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:73"><expr pos:start="59:9" pos:end="59:72"><call pos:start="59:9" pos:end="59:72"><name pos:start="59:9" pos:end="59:13">TRACE</name><argument_list pos:start="59:14" pos:end="59:72">(<argument pos:start="59:15" pos:end="59:19"><expr pos:start="59:15" pos:end="59:19"><name pos:start="59:15" pos:end="59:19">OTHER</name></expr></argument>, <argument pos:start="59:22" pos:end="59:71"><expr pos:start="59:22" pos:end="59:71"><call pos:start="59:22" pos:end="59:71"><name pos:start="59:22" pos:end="59:27">logout</name><argument_list pos:start="59:28" pos:end="59:71">(<argument pos:start="59:29" pos:end="59:50"><expr pos:start="59:29" pos:end="59:50"><literal type="string" pos:start="59:29" pos:end="59:50">"addr=%s val=0x%02x\n"</literal></expr></argument>, <argument pos:start="59:53" pos:end="59:65"><expr pos:start="59:53" pos:end="59:65"><call pos:start="59:53" pos:end="59:65"><name pos:start="59:53" pos:end="59:59">regname</name><argument_list pos:start="59:60" pos:end="59:65">(<argument pos:start="59:61" pos:end="59:64"><expr pos:start="59:61" pos:end="59:64"><name pos:start="59:61" pos:end="59:64">addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:68" pos:end="59:70"><expr pos:start="59:68" pos:end="59:70"><name pos:start="59:68" pos:end="59:70">val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:18">case <expr pos:start="63:10" pos:end="63:17"><name pos:start="63:10" pos:end="63:17">SCBgstat</name></expr>:</case>      <comment type="block" pos:start="63:25" pos:end="63:53">/* General Status Register */</comment>

        <comment type="block" pos:start="65:9" pos:end="65:46">/* 100 Mbps full duplex, valid link */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:19"><expr pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:11">val</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <literal type="number" pos:start="67:15" pos:end="67:18">0x07</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:68"><expr pos:start="69:9" pos:end="69:67"><call pos:start="69:9" pos:end="69:67"><name pos:start="69:9" pos:end="69:13">TRACE</name><argument_list pos:start="69:14" pos:end="69:67">(<argument pos:start="69:15" pos:end="69:19"><expr pos:start="69:15" pos:end="69:19"><name pos:start="69:15" pos:end="69:19">OTHER</name></expr></argument>, <argument pos:start="69:22" pos:end="69:66"><expr pos:start="69:22" pos:end="69:66"><call pos:start="69:22" pos:end="69:66"><name pos:start="69:22" pos:end="69:27">logout</name><argument_list pos:start="69:28" pos:end="69:66">(<argument pos:start="69:29" pos:end="69:60"><expr pos:start="69:29" pos:end="69:60"><literal type="string" pos:start="69:29" pos:end="69:60">"addr=General Status val=%02x\n"</literal></expr></argument>, <argument pos:start="69:63" pos:end="69:65"><expr pos:start="69:63" pos:end="69:65"><name pos:start="69:63" pos:end="69:65">val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <default pos:start="73:5" pos:end="73:12">default:</default>

        <expr_stmt pos:start="75:9" pos:end="75:59"><expr pos:start="75:9" pos:end="75:58"><call pos:start="75:9" pos:end="75:58"><name pos:start="75:9" pos:end="75:14">logout</name><argument_list pos:start="75:15" pos:end="75:58">(<argument pos:start="75:16" pos:end="75:37"><expr pos:start="75:16" pos:end="75:37"><literal type="string" pos:start="75:16" pos:end="75:37">"addr=%s val=0x%02x\n"</literal></expr></argument>, <argument pos:start="75:40" pos:end="75:52"><expr pos:start="75:40" pos:end="75:52"><call pos:start="75:40" pos:end="75:52"><name pos:start="75:40" pos:end="75:46">regname</name><argument_list pos:start="75:47" pos:end="75:52">(<argument pos:start="75:48" pos:end="75:51"><expr pos:start="75:48" pos:end="75:51"><name pos:start="75:48" pos:end="75:51">addr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:55" pos:end="75:57"><expr pos:start="75:55" pos:end="75:57"><name pos:start="75:55" pos:end="75:57">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:37"><expr pos:start="77:9" pos:end="77:36"><call pos:start="77:9" pos:end="77:36"><name pos:start="77:9" pos:end="77:15">missing</name><argument_list pos:start="77:16" pos:end="77:36">(<argument pos:start="77:17" pos:end="77:35"><expr pos:start="77:17" pos:end="77:35"><literal type="string" pos:start="77:17" pos:end="77:35">"unknown byte read"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <return pos:start="81:5" pos:end="81:15">return <expr pos:start="81:12" pos:end="81:14"><name pos:start="81:12" pos:end="81:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
