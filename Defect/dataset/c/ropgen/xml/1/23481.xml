<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23481.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">qemu_event_init</name><parameter_list pos:start="1:27" pos:end="1:32">(<parameter pos:start="1:28" pos:end="1:31"><decl pos:start="1:28" pos:end="1:31"><type pos:start="1:28" pos:end="1:31"><name pos:start="1:28" pos:end="1:31">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14"><name pos:start="7:9" pos:end="7:11">fds</name><index pos:start="7:12" pos:end="7:14">[<expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">2</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:20"><expr pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:7">err</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:19"><name pos:start="11:11" pos:end="11:14">pipe</name><argument_list pos:start="11:15" pos:end="11:19">(<argument pos:start="11:16" pos:end="11:18"><expr pos:start="11:16" pos:end="11:18"><name pos:start="11:16" pos:end="11:18">fds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:22"><if pos:start="13:5" pos:end="15:22">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:11">err</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:22"><block_content pos:start="15:9" pos:end="15:22">

        <return pos:start="15:9" pos:end="15:22">return <expr pos:start="15:16" pos:end="15:21"><operator pos:start="15:16" pos:end="15:16">-</operator><name pos:start="15:17" pos:end="15:21">errno</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:7">err</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:41"><name pos:start="19:11" pos:end="19:21">fcntl_setfl</name><argument_list pos:start="19:22" pos:end="19:41">(<argument pos:start="19:23" pos:end="19:28"><expr pos:start="19:23" pos:end="19:28"><name pos:start="19:23" pos:end="19:28"><name pos:start="19:23" pos:end="19:25">fds</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><literal type="number" pos:start="19:27" pos:end="19:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="19:31" pos:end="19:40"><expr pos:start="19:31" pos:end="19:40"><name pos:start="19:31" pos:end="19:40">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">err</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <goto pos:start="23:9" pos:end="23:18">goto <name pos:start="23:14" pos:end="23:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:42"><expr pos:start="27:5" pos:end="27:41"><name pos:start="27:5" pos:end="27:7">err</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:41"><name pos:start="27:11" pos:end="27:21">fcntl_setfl</name><argument_list pos:start="27:22" pos:end="27:41">(<argument pos:start="27:23" pos:end="27:28"><expr pos:start="27:23" pos:end="27:28"><name pos:start="27:23" pos:end="27:28"><name pos:start="27:23" pos:end="27:25">fds</name><index pos:start="27:26" pos:end="27:28">[<expr pos:start="27:27" pos:end="27:27"><literal type="number" pos:start="27:27" pos:end="27:27">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:31" pos:end="27:40"><expr pos:start="27:31" pos:end="27:40"><name pos:start="27:31" pos:end="27:40">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if <condition pos:start="29:8" pos:end="29:16">(<expr pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:11">err</name> <operator pos:start="29:13" pos:end="29:13">&lt;</operator> <literal type="number" pos:start="29:15" pos:end="29:15">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="37:56"><expr pos:start="35:5" pos:end="37:55"><call pos:start="35:5" pos:end="37:55"><name pos:start="35:5" pos:end="35:24">qemu_set_fd_handler2</name><argument_list pos:start="35:25" pos:end="37:55">(<argument pos:start="35:26" pos:end="35:31"><expr pos:start="35:26" pos:end="35:31"><name pos:start="35:26" pos:end="35:31"><name pos:start="35:26" pos:end="35:28">fds</name><index pos:start="35:29" pos:end="35:31">[<expr pos:start="35:30" pos:end="35:30"><literal type="number" pos:start="35:30" pos:end="35:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="35:34" pos:end="35:37"><expr pos:start="35:34" pos:end="35:37"><name pos:start="35:34" pos:end="35:37">NULL</name></expr></argument>, <argument pos:start="35:40" pos:end="35:54"><expr pos:start="35:40" pos:end="35:54"><name pos:start="35:40" pos:end="35:54">qemu_event_read</name></expr></argument>, <argument pos:start="35:57" pos:end="35:60"><expr pos:start="35:57" pos:end="35:60"><name pos:start="35:57" pos:end="35:60">NULL</name></expr></argument>,

                         <argument pos:start="37:26" pos:end="37:54"><expr pos:start="37:26" pos:end="37:54"><operator pos:start="37:26" pos:end="37:26">(</operator><name pos:start="37:27" pos:end="37:30">void</name> <operator pos:start="37:32" pos:end="37:32">*</operator><operator pos:start="37:33" pos:end="37:33">)</operator><operator pos:start="37:34" pos:end="37:34">(</operator><name pos:start="37:35" pos:end="37:42">unsigned</name> <name pos:start="37:44" pos:end="37:47">long</name><operator pos:start="37:48" pos:end="37:48">)</operator><name pos:start="37:49" pos:end="37:54"><name pos:start="37:49" pos:end="37:51">fds</name><index pos:start="37:52" pos:end="37:54">[<expr pos:start="37:53" pos:end="37:53"><literal type="number" pos:start="37:53" pos:end="37:53">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:26"><expr pos:start="41:5" pos:end="41:25"><name pos:start="41:5" pos:end="41:16">io_thread_fd</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <name pos:start="41:20" pos:end="41:25"><name pos:start="41:20" pos:end="41:22">fds</name><index pos:start="41:23" pos:end="41:25">[<expr pos:start="41:24" pos:end="41:24"><literal type="number" pos:start="41:24" pos:end="41:24">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>



<label pos:start="47:1" pos:end="47:5"><name pos:start="47:1" pos:end="47:4">fail</name>:</label>

    <expr_stmt pos:start="49:5" pos:end="49:18"><expr pos:start="49:5" pos:end="49:17"><call pos:start="49:5" pos:end="49:17"><name pos:start="49:5" pos:end="49:9">close</name><argument_list pos:start="49:10" pos:end="49:17">(<argument pos:start="49:11" pos:end="49:16"><expr pos:start="49:11" pos:end="49:16"><name pos:start="49:11" pos:end="49:16"><name pos:start="49:11" pos:end="49:13">fds</name><index pos:start="49:14" pos:end="49:16">[<expr pos:start="49:15" pos:end="49:15"><literal type="number" pos:start="49:15" pos:end="49:15">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:18"><expr pos:start="51:5" pos:end="51:17"><call pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:9">close</name><argument_list pos:start="51:10" pos:end="51:17">(<argument pos:start="51:11" pos:end="51:16"><expr pos:start="51:11" pos:end="51:16"><name pos:start="51:11" pos:end="51:16"><name pos:start="51:11" pos:end="51:13">fds</name><index pos:start="51:14" pos:end="51:16">[<expr pos:start="51:15" pos:end="51:15"><literal type="number" pos:start="51:15" pos:end="51:15">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:15">return <expr pos:start="53:12" pos:end="53:14"><name pos:start="53:12" pos:end="53:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
