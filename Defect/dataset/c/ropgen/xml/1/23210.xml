<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23210.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:61"><name pos:start="1:1" pos:end="1:16">avs_decode_frame</name><argument_list pos:start="1:17" pos:end="3:61">(<argument pos:start="1:18" pos:end="1:39">AVCodecContext * avctx</argument>,

                 <argument pos:start="3:18" pos:end="3:27">void *data</argument>, <argument pos:start="3:30" pos:end="3:43">int *got_frame</argument>, <argument pos:start="3:46" pos:end="3:60">AVPacket *avpkt</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="225:1">{<block_content pos:start="7:5" pos:end="223:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:54"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:26">buf_end</name> <init pos:start="9:28" pos:end="9:54">= <expr pos:start="9:30" pos:end="9:54"><name pos:start="9:30" pos:end="9:40"><name pos:start="9:30" pos:end="9:34">avpkt</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:40">data</name></name> <operator pos:start="9:42" pos:end="9:42">+</operator> <name pos:start="9:44" pos:end="9:54"><name pos:start="9:44" pos:end="9:48">avpkt</name><operator pos:start="9:49" pos:end="9:50">-&gt;</operator><name pos:start="9:51" pos:end="9:54">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:45"><decl pos:start="13:5" pos:end="13:44"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:14">AvsContext</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier><specifier pos:start="13:17" pos:end="13:21">const</specifier></type> <name pos:start="13:23" pos:end="13:25">avs</name> <init pos:start="13:27" pos:end="13:44">= <expr pos:start="13:29" pos:end="13:44"><name pos:start="13:29" pos:end="13:44"><name pos:start="13:29" pos:end="13:33">avctx</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">picture</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:38"><decl pos:start="17:5" pos:end="17:37"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier><specifier pos:start="17:14" pos:end="17:18">const</specifier></type> <name pos:start="17:20" pos:end="17:20">p</name> <init pos:start="17:22" pos:end="17:37">=  <expr pos:start="17:25" pos:end="17:37"><operator pos:start="17:25" pos:end="17:25">&amp;</operator><name pos:start="17:26" pos:end="17:37"><name pos:start="17:26" pos:end="17:28">avs</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:37">picture</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:17">uint8_t</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:24">table</name></decl>, <decl pos:start="19:27" pos:end="19:31"><type ref="prev" pos:start="19:5" pos:end="19:19"><modifier pos:start="19:27" pos:end="19:27">*</modifier></type><name pos:start="19:28" pos:end="19:31">vect</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:16">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:51"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>, <decl pos:start="23:12" pos:end="23:12"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:12">j</name></decl>, <decl pos:start="23:15" pos:end="23:15"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:15" pos:end="23:15">x</name></decl>, <decl pos:start="23:18" pos:end="23:18"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:18" pos:end="23:18">y</name></decl>, <decl pos:start="23:21" pos:end="23:26"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:21" pos:end="23:26">stride</name></decl>, <decl pos:start="23:29" pos:end="23:38"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:29" pos:end="23:34">vect_w</name> <init pos:start="23:36" pos:end="23:38">= <expr pos:start="23:38" pos:end="23:38"><literal type="number" pos:start="23:38" pos:end="23:38">3</literal></expr></init></decl>, <decl pos:start="23:41" pos:end="23:50"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:41" pos:end="23:46">vect_h</name> <init pos:start="23:48" pos:end="23:50">= <expr pos:start="23:50" pos:end="23:50"><literal type="number" pos:start="23:50" pos:end="23:50">3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:29"><decl pos:start="25:5" pos:end="25:28"><type pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:19">AvsVideoSubType</name></type> <name pos:start="25:21" pos:end="25:28">sub_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:22"><decl pos:start="27:5" pos:end="27:21"><type pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:16">AvsBlockType</name></type> <name pos:start="27:18" pos:end="27:21">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:29"><decl pos:start="29:5" pos:end="29:28"><type pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:17">GetBitContext</name></type> <name pos:start="29:19" pos:end="29:28">change_map</name></decl>;</decl_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:38">(<expr pos:start="33:9" pos:end="33:37"><call pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:27">reget_buffer</name></name><argument_list pos:start="33:28" pos:end="33:37">(<argument pos:start="33:29" pos:end="33:33"><expr pos:start="33:29" pos:end="33:33"><name pos:start="33:29" pos:end="33:33">avctx</name></expr></argument>, <argument pos:start="33:36" pos:end="33:36"><expr pos:start="33:36" pos:end="33:36"><name pos:start="33:36" pos:end="33:36">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:40" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:63"><expr pos:start="35:9" pos:end="35:62"><call pos:start="35:9" pos:end="35:62"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:62">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20">avctx</name></expr></argument>, <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:37" pos:end="35:61"><expr pos:start="35:37" pos:end="35:61"><literal type="string" pos:start="35:37" pos:end="35:61">"reget_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:21"><expr pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:5">p</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:16">reference</name></name> <operator pos:start="41:18" pos:end="41:18">=</operator> <literal type="number" pos:start="41:20" pos:end="41:20">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:37"><expr pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:5">p</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:16">pict_type</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:36">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:21"><expr pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:5">p</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:16">key_frame</name></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:31"><expr pos:start="49:5" pos:end="49:30"><name pos:start="49:5" pos:end="49:7">out</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <name pos:start="49:11" pos:end="49:30"><name pos:start="49:11" pos:end="49:13">avs</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:22">picture</name><operator pos:start="49:23" pos:end="49:23">.</operator><name pos:start="49:24" pos:end="49:27">data</name><index pos:start="49:28" pos:end="49:30">[<expr pos:start="49:29" pos:end="49:29"><literal type="number" pos:start="49:29" pos:end="49:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:38"><expr pos:start="51:5" pos:end="51:37"><name pos:start="51:5" pos:end="51:10">stride</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <name pos:start="51:14" pos:end="51:37"><name pos:start="51:14" pos:end="51:16">avs</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:25">picture</name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:34">linesize</name><index pos:start="51:35" pos:end="51:37">[<expr pos:start="51:36" pos:end="51:36"><literal type="number" pos:start="51:36" pos:end="51:36">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="57:35"><if pos:start="55:5" pos:end="57:35">if <condition pos:start="55:8" pos:end="55:26">(<expr pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:15">buf_end</name> <operator pos:start="55:17" pos:end="55:17">-</operator> <name pos:start="55:19" pos:end="55:21">buf</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <literal type="number" pos:start="55:25" pos:end="55:25">4</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:35"><block_content pos:start="57:9" pos:end="57:35">

        <return pos:start="57:9" pos:end="57:35">return <expr pos:start="57:16" pos:end="57:34"><name pos:start="57:16" pos:end="57:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:22"><expr pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:12">sub_type</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:21"><name pos:start="59:16" pos:end="59:18">buf</name><index pos:start="59:19" pos:end="59:21">[<expr pos:start="59:20" pos:end="59:20"><literal type="number" pos:start="59:20" pos:end="59:20">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:18"><expr pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:8">type</name> <operator pos:start="61:10" pos:end="61:10">=</operator> <name pos:start="61:12" pos:end="61:17"><name pos:start="61:12" pos:end="61:14">buf</name><index pos:start="61:15" pos:end="61:17">[<expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:13"><expr pos:start="63:5" pos:end="63:12"><name pos:start="63:5" pos:end="63:7">buf</name> <operator pos:start="63:9" pos:end="63:10">+=</operator> <literal type="number" pos:start="63:12" pos:end="63:12">4</literal></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="101:5"><if pos:start="67:5" pos:end="101:5">if <condition pos:start="67:8" pos:end="67:28">(<expr pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:12">type</name> <operator pos:start="67:14" pos:end="67:15">==</operator> <name pos:start="67:17" pos:end="67:27">AVS_PALETTE</name></expr>)</condition> <block pos:start="67:30" pos:end="101:5">{<block_content pos:start="69:9" pos:end="99:17">

        <decl_stmt pos:start="69:9" pos:end="69:24"><decl pos:start="69:9" pos:end="69:17"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:17">first</name></decl>, <decl pos:start="69:20" pos:end="69:23"><type ref="prev" pos:start="69:9" pos:end="69:11"/><name pos:start="69:20" pos:end="69:23">last</name></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:58"><decl pos:start="71:9" pos:end="71:57"><type pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:16">uint32_t</name> <modifier pos:start="71:18" pos:end="71:18">*</modifier></type><name pos:start="71:19" pos:end="71:21">pal</name> <init pos:start="71:23" pos:end="71:57">= <expr pos:start="71:25" pos:end="71:57"><operator pos:start="71:25" pos:end="71:25">(</operator><name pos:start="71:26" pos:end="71:33">uint32_t</name> <operator pos:start="71:35" pos:end="71:35">*</operator><operator pos:start="71:36" pos:end="71:36">)</operator> <name pos:start="71:38" pos:end="71:57"><name pos:start="71:38" pos:end="71:40">avs</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:49">picture</name><operator pos:start="71:50" pos:end="71:50">.</operator><name pos:start="71:51" pos:end="71:54">data</name><index pos:start="71:55" pos:end="71:57">[<expr pos:start="71:56" pos:end="71:56"><literal type="number" pos:start="71:56" pos:end="71:56">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:29"><expr pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:13">first</name> <operator pos:start="75:15" pos:end="75:15">=</operator> <call pos:start="75:17" pos:end="75:28"><name pos:start="75:17" pos:end="75:23">AV_RL16</name><argument_list pos:start="75:24" pos:end="75:28">(<argument pos:start="75:25" pos:end="75:27"><expr pos:start="75:25" pos:end="75:27"><name pos:start="75:25" pos:end="75:27">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:40"><expr pos:start="77:9" pos:end="77:39"><name pos:start="77:9" pos:end="77:12">last</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <name pos:start="77:16" pos:end="77:20">first</name> <operator pos:start="77:22" pos:end="77:22">+</operator> <call pos:start="77:24" pos:end="77:39"><name pos:start="77:24" pos:end="77:30">AV_RL16</name><argument_list pos:start="77:31" pos:end="77:39">(<argument pos:start="77:32" pos:end="77:38"><expr pos:start="77:32" pos:end="77:38"><name pos:start="77:32" pos:end="77:34">buf</name> <operator pos:start="77:36" pos:end="77:36">+</operator> <literal type="number" pos:start="77:38" pos:end="77:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="81:39"><if pos:start="79:9" pos:end="81:39">if <condition pos:start="79:12" pos:end="79:85">(<expr pos:start="79:13" pos:end="79:84"><name pos:start="79:13" pos:end="79:17">first</name> <operator pos:start="79:19" pos:end="79:20">&gt;=</operator> <literal type="number" pos:start="79:22" pos:end="79:24">256</literal> <operator pos:start="79:26" pos:end="79:27">||</operator> <name pos:start="79:29" pos:end="79:32">last</name> <operator pos:start="79:34" pos:end="79:34">&gt;</operator> <literal type="number" pos:start="79:36" pos:end="79:38">256</literal> <operator pos:start="79:40" pos:end="79:41">||</operator> <name pos:start="79:43" pos:end="79:49">buf_end</name> <operator pos:start="79:51" pos:end="79:51">-</operator> <name pos:start="79:53" pos:end="79:55">buf</name> <operator pos:start="79:57" pos:end="79:57">&lt;</operator> <literal type="number" pos:start="79:59" pos:end="79:61">4</literal> <operator pos:start="79:61" pos:end="79:61">+</operator> <literal type="number" pos:start="79:63" pos:end="79:65">4</literal> <operator pos:start="79:65" pos:end="79:65">+</operator> <literal type="number" pos:start="79:67" pos:end="79:67">3</literal> <operator pos:start="79:69" pos:end="79:69">*</operator> <operator pos:start="79:71" pos:end="79:71">(</operator><name pos:start="79:72" pos:end="79:75">last</name> <operator pos:start="79:77" pos:end="79:77">-</operator> <name pos:start="79:79" pos:end="79:83">first</name><operator pos:start="79:84" pos:end="79:84">)</operator></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:39"><block_content pos:start="81:13" pos:end="81:39">

            <return pos:start="81:13" pos:end="81:39">return <expr pos:start="81:20" pos:end="81:38"><name pos:start="81:20" pos:end="81:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:17"><expr pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:11">buf</name> <operator pos:start="83:13" pos:end="83:14">+=</operator> <literal type="number" pos:start="83:16" pos:end="83:16">4</literal></expr>;</expr_stmt>

        <for pos:start="85:9" pos:end="91:9">for <control pos:start="85:13" pos:end="85:42">(<init pos:start="85:14" pos:end="85:21"><expr pos:start="85:14" pos:end="85:20"><name pos:start="85:14" pos:end="85:14">i</name><operator pos:start="85:15" pos:end="85:15">=</operator><name pos:start="85:16" pos:end="85:20">first</name></expr>;</init> <condition pos:start="85:23" pos:end="85:29"><expr pos:start="85:23" pos:end="85:28"><name pos:start="85:23" pos:end="85:23">i</name><operator pos:start="85:24" pos:end="85:24">&lt;</operator><name pos:start="85:25" pos:end="85:28">last</name></expr>;</condition> <incr pos:start="85:31" pos:end="85:41"><expr pos:start="85:31" pos:end="85:33"><name pos:start="85:31" pos:end="85:31">i</name><operator pos:start="85:32" pos:end="85:33">++</operator></expr><operator pos:start="85:34" pos:end="85:34">,</operator> <expr pos:start="85:36" pos:end="85:41"><name pos:start="85:36" pos:end="85:38">buf</name><operator pos:start="85:39" pos:end="85:40">+=</operator><literal type="number" pos:start="85:41" pos:end="85:41">3</literal></expr></incr>)</control> <block pos:start="85:44" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:60">

            <expr_stmt pos:start="87:13" pos:end="87:69"><expr pos:start="87:13" pos:end="87:68"><name pos:start="87:13" pos:end="87:18"><name pos:start="87:13" pos:end="87:15">pal</name><index pos:start="87:16" pos:end="87:18">[<expr pos:start="87:17" pos:end="87:17"><name pos:start="87:17" pos:end="87:17">i</name></expr>]</index></name> <operator pos:start="87:20" pos:end="87:20">=</operator> <operator pos:start="87:22" pos:end="87:22">(</operator><name pos:start="87:23" pos:end="87:28"><name pos:start="87:23" pos:end="87:25">buf</name><index pos:start="87:26" pos:end="87:28">[<expr pos:start="87:27" pos:end="87:27"><literal type="number" pos:start="87:27" pos:end="87:27">0</literal></expr>]</index></name> <operator pos:start="87:30" pos:end="87:31">&lt;&lt;</operator> <literal type="number" pos:start="87:33" pos:end="87:34">18</literal><operator pos:start="87:35" pos:end="87:35">)</operator> <operator pos:start="87:37" pos:end="87:37">|</operator> <operator pos:start="87:39" pos:end="87:39">(</operator><name pos:start="87:40" pos:end="87:45"><name pos:start="87:40" pos:end="87:42">buf</name><index pos:start="87:43" pos:end="87:45">[<expr pos:start="87:44" pos:end="87:44"><literal type="number" pos:start="87:44" pos:end="87:44">1</literal></expr>]</index></name> <operator pos:start="87:47" pos:end="87:48">&lt;&lt;</operator> <literal type="number" pos:start="87:50" pos:end="87:51">10</literal><operator pos:start="87:52" pos:end="87:52">)</operator> <operator pos:start="87:54" pos:end="87:54">|</operator> <operator pos:start="87:56" pos:end="87:56">(</operator><name pos:start="87:57" pos:end="87:62"><name pos:start="87:57" pos:end="87:59">buf</name><index pos:start="87:60" pos:end="87:62">[<expr pos:start="87:61" pos:end="87:61"><literal type="number" pos:start="87:61" pos:end="87:61">2</literal></expr>]</index></name> <operator pos:start="87:64" pos:end="87:65">&lt;&lt;</operator> <literal type="number" pos:start="87:67" pos:end="87:67">2</literal><operator pos:start="87:68" pos:end="87:68">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:60"><expr pos:start="89:13" pos:end="89:59"><name pos:start="89:13" pos:end="89:18"><name pos:start="89:13" pos:end="89:15">pal</name><index pos:start="89:16" pos:end="89:18">[<expr pos:start="89:17" pos:end="89:17"><name pos:start="89:17" pos:end="89:17">i</name></expr>]</index></name> <operator pos:start="89:20" pos:end="89:21">|=</operator> <literal type="number" pos:start="89:23" pos:end="89:27">0xFFU</literal> <operator pos:start="89:29" pos:end="89:30">&lt;&lt;</operator> <literal type="number" pos:start="89:32" pos:end="89:33">24</literal> <operator pos:start="89:35" pos:end="89:35">|</operator> <operator pos:start="89:37" pos:end="89:37">(</operator><name pos:start="89:38" pos:end="89:43"><name pos:start="89:38" pos:end="89:40">pal</name><index pos:start="89:41" pos:end="89:43">[<expr pos:start="89:42" pos:end="89:42"><name pos:start="89:42" pos:end="89:42">i</name></expr>]</index></name> <operator pos:start="89:45" pos:end="89:46">&gt;&gt;</operator> <literal type="number" pos:start="89:48" pos:end="89:48">6</literal><operator pos:start="89:49" pos:end="89:49">)</operator> <operator pos:start="89:51" pos:end="89:51">&amp;</operator> <literal type="number" pos:start="89:53" pos:end="89:59">0x30303</literal></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="95:9" pos:end="95:26"><expr pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:16">sub_type</name> <operator pos:start="95:18" pos:end="95:18">=</operator> <name pos:start="95:20" pos:end="95:25"><name pos:start="95:20" pos:end="95:22">buf</name><index pos:start="95:23" pos:end="95:25">[<expr pos:start="95:24" pos:end="95:24"><literal type="number" pos:start="95:24" pos:end="95:24">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:22"><expr pos:start="97:9" pos:end="97:21"><name pos:start="97:9" pos:end="97:12">type</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <name pos:start="97:16" pos:end="97:21"><name pos:start="97:16" pos:end="97:18">buf</name><index pos:start="97:19" pos:end="97:21">[<expr pos:start="97:20" pos:end="97:20"><literal type="number" pos:start="97:20" pos:end="97:20">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:17"><expr pos:start="99:9" pos:end="99:16"><name pos:start="99:9" pos:end="99:11">buf</name> <operator pos:start="99:13" pos:end="99:14">+=</operator> <literal type="number" pos:start="99:16" pos:end="99:16">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="105:5" pos:end="107:18"><if pos:start="105:5" pos:end="107:18">if <condition pos:start="105:8" pos:end="105:26">(<expr pos:start="105:9" pos:end="105:25"><name pos:start="105:9" pos:end="105:12">type</name> <operator pos:start="105:14" pos:end="105:15">!=</operator> <name pos:start="105:17" pos:end="105:25">AVS_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:18"><block_content pos:start="107:9" pos:end="107:18">

        <return pos:start="107:9" pos:end="107:18">return <expr pos:start="107:16" pos:end="107:17"><operator pos:start="107:16" pos:end="107:16">-</operator><literal type="number" pos:start="107:17" pos:end="107:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <switch pos:start="111:5" pos:end="153:5">switch <condition pos:start="111:12" pos:end="111:21">(<expr pos:start="111:13" pos:end="111:20"><name pos:start="111:13" pos:end="111:20">sub_type</name></expr>)</condition> <block pos:start="111:23" pos:end="153:5">{<block_content pos:start="113:5" pos:end="151:16">

    <case pos:start="113:5" pos:end="113:21">case <expr pos:start="113:10" pos:end="113:20"><name pos:start="113:10" pos:end="113:20">AVS_I_FRAME</name></expr>:</case>

        <expr_stmt pos:start="115:9" pos:end="115:41"><expr pos:start="115:9" pos:end="115:40"><name pos:start="115:9" pos:end="115:20"><name pos:start="115:9" pos:end="115:9">p</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:20">pict_type</name></name> <operator pos:start="115:22" pos:end="115:22">=</operator> <name pos:start="115:24" pos:end="115:40">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:25"><expr pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:20"><name pos:start="117:9" pos:end="117:9">p</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:20">key_frame</name></name> <operator pos:start="117:22" pos:end="117:22">=</operator> <literal type="number" pos:start="117:24" pos:end="117:24">1</literal></expr>;</expr_stmt>

    <case pos:start="119:5" pos:end="119:25">case <expr pos:start="119:10" pos:end="119:24"><name pos:start="119:10" pos:end="119:24">AVS_P_FRAME_3X3</name></expr>:</case>

        <expr_stmt pos:start="121:9" pos:end="121:19"><expr pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:14">vect_w</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <literal type="number" pos:start="121:18" pos:end="121:18">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:19"><expr pos:start="123:9" pos:end="123:18"><name pos:start="123:9" pos:end="123:14">vect_h</name> <operator pos:start="123:16" pos:end="123:16">=</operator> <literal type="number" pos:start="123:18" pos:end="123:18">3</literal></expr>;</expr_stmt>

        <break pos:start="125:9" pos:end="125:14">break;</break>



    <case pos:start="129:5" pos:end="129:25">case <expr pos:start="129:10" pos:end="129:24"><name pos:start="129:10" pos:end="129:24">AVS_P_FRAME_2X2</name></expr>:</case>

        <expr_stmt pos:start="131:9" pos:end="131:19"><expr pos:start="131:9" pos:end="131:18"><name pos:start="131:9" pos:end="131:14">vect_w</name> <operator pos:start="131:16" pos:end="131:16">=</operator> <literal type="number" pos:start="131:18" pos:end="131:18">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:19"><expr pos:start="133:9" pos:end="133:18"><name pos:start="133:9" pos:end="133:14">vect_h</name> <operator pos:start="133:16" pos:end="133:16">=</operator> <literal type="number" pos:start="133:18" pos:end="133:18">2</literal></expr>;</expr_stmt>

        <break pos:start="135:9" pos:end="135:14">break;</break>



    <case pos:start="139:5" pos:end="139:25">case <expr pos:start="139:10" pos:end="139:24"><name pos:start="139:10" pos:end="139:24">AVS_P_FRAME_2X3</name></expr>:</case>

        <expr_stmt pos:start="141:9" pos:end="141:19"><expr pos:start="141:9" pos:end="141:18"><name pos:start="141:9" pos:end="141:14">vect_w</name> <operator pos:start="141:16" pos:end="141:16">=</operator> <literal type="number" pos:start="141:18" pos:end="141:18">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:19"><expr pos:start="143:9" pos:end="143:18"><name pos:start="143:9" pos:end="143:14">vect_h</name> <operator pos:start="143:16" pos:end="143:16">=</operator> <literal type="number" pos:start="143:18" pos:end="143:18">3</literal></expr>;</expr_stmt>

        <break pos:start="145:9" pos:end="145:14">break;</break>



    <default pos:start="149:5" pos:end="149:12">default:</default>

      <return pos:start="151:7" pos:end="151:16">return <expr pos:start="151:14" pos:end="151:15"><operator pos:start="151:14" pos:end="151:14">-</operator><literal type="number" pos:start="151:15" pos:end="151:15">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="157:5" pos:end="159:35"><if pos:start="157:5" pos:end="159:35">if <condition pos:start="157:8" pos:end="157:46">(<expr pos:start="157:9" pos:end="157:45"><name pos:start="157:9" pos:end="157:15">buf_end</name> <operator pos:start="157:17" pos:end="157:17">-</operator> <name pos:start="157:19" pos:end="157:21">buf</name> <operator pos:start="157:23" pos:end="157:23">&lt;</operator> <literal type="number" pos:start="157:25" pos:end="157:27">256</literal> <operator pos:start="157:29" pos:end="157:29">*</operator> <name pos:start="157:31" pos:end="157:36">vect_w</name> <operator pos:start="157:38" pos:end="157:38">*</operator> <name pos:start="157:40" pos:end="157:45">vect_h</name></expr>)</condition><block type="pseudo" pos:start="159:9" pos:end="159:35"><block_content pos:start="159:9" pos:end="159:35">

        <return pos:start="159:9" pos:end="159:35">return <expr pos:start="159:16" pos:end="159:34"><name pos:start="159:16" pos:end="159:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:42"><expr pos:start="161:5" pos:end="161:41"><name pos:start="161:5" pos:end="161:9">table</name> <operator pos:start="161:11" pos:end="161:11">=</operator> <name pos:start="161:13" pos:end="161:15">buf</name> <operator pos:start="161:17" pos:end="161:17">+</operator> <operator pos:start="161:19" pos:end="161:19">(</operator><literal type="number" pos:start="161:20" pos:end="161:22">256</literal> <operator pos:start="161:24" pos:end="161:24">*</operator> <name pos:start="161:26" pos:end="161:31">vect_w</name> <operator pos:start="161:33" pos:end="161:33">*</operator> <name pos:start="161:35" pos:end="161:40">vect_h</name><operator pos:start="161:41" pos:end="161:41">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="163:5" pos:end="175:5"><if pos:start="163:5" pos:end="175:5">if <condition pos:start="163:8" pos:end="163:32">(<expr pos:start="163:9" pos:end="163:31"><name pos:start="163:9" pos:end="163:16">sub_type</name> <operator pos:start="163:18" pos:end="163:19">!=</operator> <name pos:start="163:21" pos:end="163:31">AVS_I_FRAME</name></expr>)</condition> <block pos:start="163:34" pos:end="175:5">{<block_content pos:start="165:9" pos:end="173:26">

        <decl_stmt pos:start="165:9" pos:end="165:65"><decl pos:start="165:9" pos:end="165:64"><type pos:start="165:9" pos:end="165:11"><name pos:start="165:9" pos:end="165:11">int</name></type> <name pos:start="165:13" pos:end="165:20">map_size</name> <init pos:start="165:22" pos:end="165:64">= <expr pos:start="165:24" pos:end="165:64"><operator pos:start="165:24" pos:end="165:24">(</operator><operator pos:start="165:25" pos:end="165:25">(</operator><literal type="number" pos:start="165:26" pos:end="165:28">318</literal> <operator pos:start="165:30" pos:end="165:30">/</operator> <name pos:start="165:32" pos:end="165:37">vect_w</name> <operator pos:start="165:39" pos:end="165:39">+</operator> <literal type="number" pos:start="165:41" pos:end="165:41">7</literal><operator pos:start="165:42" pos:end="165:42">)</operator> <operator pos:start="165:44" pos:end="165:44">/</operator> <literal type="number" pos:start="165:46" pos:end="165:46">8</literal><operator pos:start="165:47" pos:end="165:47">)</operator> <operator pos:start="165:49" pos:end="165:49">*</operator> <operator pos:start="165:51" pos:end="165:51">(</operator><literal type="number" pos:start="165:52" pos:end="165:54">198</literal> <operator pos:start="165:56" pos:end="165:56">/</operator> <name pos:start="165:58" pos:end="165:63">vect_h</name><operator pos:start="165:64" pos:end="165:64">)</operator></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="167:9" pos:end="169:39"><if pos:start="167:9" pos:end="169:39">if <condition pos:start="167:12" pos:end="167:39">(<expr pos:start="167:13" pos:end="167:38"><name pos:start="167:13" pos:end="167:19">buf_end</name> <operator pos:start="167:21" pos:end="167:21">-</operator> <name pos:start="167:23" pos:end="167:27">table</name> <operator pos:start="167:29" pos:end="167:29">&lt;</operator> <name pos:start="167:31" pos:end="167:38">map_size</name></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:39"><block_content pos:start="169:13" pos:end="169:39">

            <return pos:start="169:13" pos:end="169:39">return <expr pos:start="169:20" pos:end="169:38"><name pos:start="169:20" pos:end="169:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:56"><expr pos:start="171:9" pos:end="171:55"><call pos:start="171:9" pos:end="171:55"><name pos:start="171:9" pos:end="171:21">init_get_bits</name><argument_list pos:start="171:22" pos:end="171:55">(<argument pos:start="171:23" pos:end="171:33"><expr pos:start="171:23" pos:end="171:33"><operator pos:start="171:23" pos:end="171:23">&amp;</operator><name pos:start="171:24" pos:end="171:33">change_map</name></expr></argument>, <argument pos:start="171:36" pos:end="171:40"><expr pos:start="171:36" pos:end="171:40"><name pos:start="171:36" pos:end="171:40">table</name></expr></argument>, <argument pos:start="171:43" pos:end="171:54"><expr pos:start="171:43" pos:end="171:54"><name pos:start="171:43" pos:end="171:50">map_size</name> <operator pos:start="171:52" pos:end="171:52">*</operator> <literal type="number" pos:start="171:54" pos:end="171:54">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:26"><expr pos:start="173:9" pos:end="173:25"><name pos:start="173:9" pos:end="173:13">table</name> <operator pos:start="173:15" pos:end="173:16">+=</operator> <name pos:start="173:18" pos:end="173:25">map_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="179:5" pos:end="213:5">for <control pos:start="179:9" pos:end="179:31">(<init pos:start="179:10" pos:end="179:13"><expr pos:start="179:10" pos:end="179:12"><name pos:start="179:10" pos:end="179:10">y</name><operator pos:start="179:11" pos:end="179:11">=</operator><literal type="number" pos:start="179:12" pos:end="179:12">0</literal></expr>;</init> <condition pos:start="179:15" pos:end="179:20"><expr pos:start="179:15" pos:end="179:19"><name pos:start="179:15" pos:end="179:15">y</name><operator pos:start="179:16" pos:end="179:16">&lt;</operator><literal type="number" pos:start="179:17" pos:end="179:19">198</literal></expr>;</condition> <incr pos:start="179:22" pos:end="179:30"><expr pos:start="179:22" pos:end="179:30"><name pos:start="179:22" pos:end="179:22">y</name><operator pos:start="179:23" pos:end="179:24">+=</operator><name pos:start="179:25" pos:end="179:30">vect_h</name></expr></incr>)</control> <block pos:start="179:33" pos:end="213:5">{<block_content pos:start="181:9" pos:end="211:40">

        <for pos:start="181:9" pos:end="207:9">for <control pos:start="181:13" pos:end="181:35">(<init pos:start="181:14" pos:end="181:17"><expr pos:start="181:14" pos:end="181:16"><name pos:start="181:14" pos:end="181:14">x</name><operator pos:start="181:15" pos:end="181:15">=</operator><literal type="number" pos:start="181:16" pos:end="181:16">0</literal></expr>;</init> <condition pos:start="181:19" pos:end="181:24"><expr pos:start="181:19" pos:end="181:23"><name pos:start="181:19" pos:end="181:19">x</name><operator pos:start="181:20" pos:end="181:20">&lt;</operator><literal type="number" pos:start="181:21" pos:end="181:23">318</literal></expr>;</condition> <incr pos:start="181:26" pos:end="181:34"><expr pos:start="181:26" pos:end="181:34"><name pos:start="181:26" pos:end="181:26">x</name><operator pos:start="181:27" pos:end="181:28">+=</operator><name pos:start="181:29" pos:end="181:34">vect_w</name></expr></incr>)</control> <block pos:start="181:37" pos:end="207:9">{<block_content pos:start="183:13" pos:end="205:13">

            <if_stmt pos:start="183:13" pos:end="205:13"><if pos:start="183:13" pos:end="205:13">if <condition pos:start="183:16" pos:end="183:66">(<expr pos:start="183:17" pos:end="183:65"><name pos:start="183:17" pos:end="183:24">sub_type</name> <operator pos:start="183:26" pos:end="183:27">==</operator> <name pos:start="183:29" pos:end="183:39">AVS_I_FRAME</name> <operator pos:start="183:41" pos:end="183:42">||</operator> <call pos:start="183:44" pos:end="183:65"><name pos:start="183:44" pos:end="183:52">get_bits1</name><argument_list pos:start="183:53" pos:end="183:65">(<argument pos:start="183:54" pos:end="183:64"><expr pos:start="183:54" pos:end="183:64"><operator pos:start="183:54" pos:end="183:54">&amp;</operator><name pos:start="183:55" pos:end="183:64">change_map</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="183:68" pos:end="205:13">{<block_content pos:start="185:17" pos:end="203:17">

                <if_stmt pos:start="185:17" pos:end="187:47"><if pos:start="185:17" pos:end="187:47">if <condition pos:start="185:20" pos:end="185:40">(<expr pos:start="185:21" pos:end="185:39"><name pos:start="185:21" pos:end="185:27">buf_end</name> <operator pos:start="185:29" pos:end="185:29">-</operator> <name pos:start="185:31" pos:end="185:35">table</name> <operator pos:start="185:37" pos:end="185:37">&lt;</operator> <literal type="number" pos:start="185:39" pos:end="185:39">1</literal></expr>)</condition><block type="pseudo" pos:start="187:21" pos:end="187:47"><block_content pos:start="187:21" pos:end="187:47">

                    <return pos:start="187:21" pos:end="187:47">return <expr pos:start="187:28" pos:end="187:46"><name pos:start="187:28" pos:end="187:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:58"><expr pos:start="189:17" pos:end="189:57"><name pos:start="189:17" pos:end="189:20">vect</name> <operator pos:start="189:22" pos:end="189:22">=</operator> <operator pos:start="189:24" pos:end="189:24">&amp;</operator><name pos:start="189:25" pos:end="189:57"><name pos:start="189:25" pos:end="189:27">buf</name><index pos:start="189:28" pos:end="189:57">[<expr pos:start="189:29" pos:end="189:56"><operator pos:start="189:29" pos:end="189:29">*</operator><name pos:start="189:30" pos:end="189:34">table</name><operator pos:start="189:35" pos:end="189:36">++</operator> <operator pos:start="189:38" pos:end="189:38">*</operator> <operator pos:start="189:40" pos:end="189:40">(</operator><name pos:start="189:41" pos:end="189:46">vect_w</name> <operator pos:start="189:48" pos:end="189:48">*</operator> <name pos:start="189:50" pos:end="189:55">vect_h</name><operator pos:start="189:56" pos:end="189:56">)</operator></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="191:17" pos:end="203:17">for <control pos:start="191:21" pos:end="191:40">(<init pos:start="191:22" pos:end="191:25"><expr pos:start="191:22" pos:end="191:24"><name pos:start="191:22" pos:end="191:22">j</name><operator pos:start="191:23" pos:end="191:23">=</operator><literal type="number" pos:start="191:24" pos:end="191:24">0</literal></expr>;</init> <condition pos:start="191:27" pos:end="191:35"><expr pos:start="191:27" pos:end="191:34"><name pos:start="191:27" pos:end="191:27">j</name><operator pos:start="191:28" pos:end="191:28">&lt;</operator><name pos:start="191:29" pos:end="191:34">vect_w</name></expr>;</condition> <incr pos:start="191:37" pos:end="191:39"><expr pos:start="191:37" pos:end="191:39"><name pos:start="191:37" pos:end="191:37">j</name><operator pos:start="191:38" pos:end="191:39">++</operator></expr></incr>)</control> <block pos:start="191:42" pos:end="203:17">{<block_content pos:start="193:21" pos:end="201:51">

                    <expr_stmt pos:start="193:21" pos:end="193:75"><expr pos:start="193:21" pos:end="193:74"><name pos:start="193:21" pos:end="193:49"><name pos:start="193:21" pos:end="193:23">out</name><index pos:start="193:24" pos:end="193:49">[<expr pos:start="193:25" pos:end="193:48"><operator pos:start="193:25" pos:end="193:25">(</operator><name pos:start="193:26" pos:end="193:26">y</name> <operator pos:start="193:28" pos:end="193:28">+</operator> <literal type="number" pos:start="193:30" pos:end="193:30">0</literal><operator pos:start="193:31" pos:end="193:31">)</operator> <operator pos:start="193:33" pos:end="193:33">*</operator> <name pos:start="193:35" pos:end="193:40">stride</name> <operator pos:start="193:42" pos:end="193:42">+</operator> <name pos:start="193:44" pos:end="193:44">x</name> <operator pos:start="193:46" pos:end="193:46">+</operator> <name pos:start="193:48" pos:end="193:48">j</name></expr>]</index></name> <operator pos:start="193:51" pos:end="193:51">=</operator> <name pos:start="193:53" pos:end="193:74"><name pos:start="193:53" pos:end="193:56">vect</name><index pos:start="193:57" pos:end="193:74">[<expr pos:start="193:58" pos:end="193:73"><operator pos:start="193:58" pos:end="193:58">(</operator><literal type="number" pos:start="193:59" pos:end="193:59">0</literal> <operator pos:start="193:61" pos:end="193:61">*</operator> <name pos:start="193:63" pos:end="193:68">vect_w</name><operator pos:start="193:69" pos:end="193:69">)</operator> <operator pos:start="193:71" pos:end="193:71">+</operator> <name pos:start="193:73" pos:end="193:73">j</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:75"><expr pos:start="195:21" pos:end="195:74"><name pos:start="195:21" pos:end="195:49"><name pos:start="195:21" pos:end="195:23">out</name><index pos:start="195:24" pos:end="195:49">[<expr pos:start="195:25" pos:end="195:48"><operator pos:start="195:25" pos:end="195:25">(</operator><name pos:start="195:26" pos:end="195:26">y</name> <operator pos:start="195:28" pos:end="195:28">+</operator> <literal type="number" pos:start="195:30" pos:end="195:30">1</literal><operator pos:start="195:31" pos:end="195:31">)</operator> <operator pos:start="195:33" pos:end="195:33">*</operator> <name pos:start="195:35" pos:end="195:40">stride</name> <operator pos:start="195:42" pos:end="195:42">+</operator> <name pos:start="195:44" pos:end="195:44">x</name> <operator pos:start="195:46" pos:end="195:46">+</operator> <name pos:start="195:48" pos:end="195:48">j</name></expr>]</index></name> <operator pos:start="195:51" pos:end="195:51">=</operator> <name pos:start="195:53" pos:end="195:74"><name pos:start="195:53" pos:end="195:56">vect</name><index pos:start="195:57" pos:end="195:74">[<expr pos:start="195:58" pos:end="195:73"><operator pos:start="195:58" pos:end="195:58">(</operator><literal type="number" pos:start="195:59" pos:end="195:59">1</literal> <operator pos:start="195:61" pos:end="195:61">*</operator> <name pos:start="195:63" pos:end="195:68">vect_w</name><operator pos:start="195:69" pos:end="195:69">)</operator> <operator pos:start="195:71" pos:end="195:71">+</operator> <name pos:start="195:73" pos:end="195:73">j</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="197:21" pos:end="201:51"><if pos:start="197:21" pos:end="201:51">if <condition pos:start="197:24" pos:end="197:36">(<expr pos:start="197:25" pos:end="197:35"><name pos:start="197:25" pos:end="197:30">vect_h</name> <operator pos:start="197:32" pos:end="197:33">==</operator> <literal type="number" pos:start="197:35" pos:end="197:35">3</literal></expr>)</condition><block type="pseudo" pos:start="199:25" pos:end="201:51"><block_content pos:start="199:25" pos:end="201:51">

                        <expr_stmt pos:start="199:25" pos:end="201:51"><expr pos:start="199:25" pos:end="201:50"><name pos:start="199:25" pos:end="199:53"><name pos:start="199:25" pos:end="199:27">out</name><index pos:start="199:28" pos:end="199:53">[<expr pos:start="199:29" pos:end="199:52"><operator pos:start="199:29" pos:end="199:29">(</operator><name pos:start="199:30" pos:end="199:30">y</name> <operator pos:start="199:32" pos:end="199:32">+</operator> <literal type="number" pos:start="199:34" pos:end="199:34">2</literal><operator pos:start="199:35" pos:end="199:35">)</operator> <operator pos:start="199:37" pos:end="199:37">*</operator> <name pos:start="199:39" pos:end="199:44">stride</name> <operator pos:start="199:46" pos:end="199:46">+</operator> <name pos:start="199:48" pos:end="199:48">x</name> <operator pos:start="199:50" pos:end="199:50">+</operator> <name pos:start="199:52" pos:end="199:52">j</name></expr>]</index></name> <operator pos:start="199:55" pos:end="199:55">=</operator>

                            <name pos:start="201:29" pos:end="201:50"><name pos:start="201:29" pos:end="201:32">vect</name><index pos:start="201:33" pos:end="201:50">[<expr pos:start="201:34" pos:end="201:49"><operator pos:start="201:34" pos:end="201:34">(</operator><literal type="number" pos:start="201:35" pos:end="201:35">2</literal> <operator pos:start="201:37" pos:end="201:37">*</operator> <name pos:start="201:39" pos:end="201:44">vect_w</name><operator pos:start="201:45" pos:end="201:45">)</operator> <operator pos:start="201:47" pos:end="201:47">+</operator> <name pos:start="201:49" pos:end="201:49">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="209:9" pos:end="211:40"><if pos:start="209:9" pos:end="211:40">if <condition pos:start="209:12" pos:end="209:36">(<expr pos:start="209:13" pos:end="209:35"><name pos:start="209:13" pos:end="209:20">sub_type</name> <operator pos:start="209:22" pos:end="209:23">!=</operator> <name pos:start="209:25" pos:end="209:35">AVS_I_FRAME</name></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="211:40"><block_content pos:start="211:13" pos:end="211:40">

            <expr_stmt pos:start="211:13" pos:end="211:40"><expr pos:start="211:13" pos:end="211:39"><call pos:start="211:13" pos:end="211:39"><name pos:start="211:13" pos:end="211:26">align_get_bits</name><argument_list pos:start="211:27" pos:end="211:39">(<argument pos:start="211:28" pos:end="211:38"><expr pos:start="211:28" pos:end="211:38"><operator pos:start="211:28" pos:end="211:28">&amp;</operator><name pos:start="211:29" pos:end="211:38">change_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="217:5" pos:end="217:30"><expr pos:start="217:5" pos:end="217:29"><operator pos:start="217:5" pos:end="217:5">*</operator><name pos:start="217:6" pos:end="217:12">picture</name>   <operator pos:start="217:16" pos:end="217:16">=</operator> <name pos:start="217:18" pos:end="217:29"><name pos:start="217:18" pos:end="217:20">avs</name><operator pos:start="217:21" pos:end="217:22">-&gt;</operator><name pos:start="217:23" pos:end="217:29">picture</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:19"><expr pos:start="219:5" pos:end="219:18"><operator pos:start="219:5" pos:end="219:5">*</operator><name pos:start="219:6" pos:end="219:14">got_frame</name> <operator pos:start="219:16" pos:end="219:16">=</operator> <literal type="number" pos:start="219:18" pos:end="219:18">1</literal></expr>;</expr_stmt>



    <return pos:start="223:5" pos:end="223:20">return <expr pos:start="223:12" pos:end="223:19"><name pos:start="223:12" pos:end="223:19">buf_size</name></expr>;</return>

</block_content>}</block>
</unit>
