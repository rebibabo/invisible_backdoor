<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15210.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:29">ff_interleave_add_packet</name><parameter_list pos:start="1:30" pos:end="3:88">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">AVPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pkt</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:87"><function_decl pos:start="3:31" pos:end="3:87"><type pos:start="3:31" pos:end="3:33"><name pos:start="3:31" pos:end="3:33">int</name></type> (<modifier pos:start="3:36" pos:end="3:36">*</modifier><name pos:start="3:37" pos:end="3:43">compare</name>)<parameter_list pos:start="3:45" pos:end="3:87">(<parameter pos:start="3:46" pos:end="3:62"><decl pos:start="3:46" pos:end="3:62"><type pos:start="3:46" pos:end="3:62"><name pos:start="3:46" pos:end="3:60">AVFormatContext</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type></decl></parameter>, <parameter pos:start="3:65" pos:end="3:74"><decl pos:start="3:65" pos:end="3:74"><type pos:start="3:65" pos:end="3:74"><name pos:start="3:65" pos:end="3:72">AVPacket</name> <modifier pos:start="3:74" pos:end="3:74">*</modifier></type></decl></parameter>, <parameter pos:start="3:77" pos:end="3:86"><decl pos:start="3:77" pos:end="3:86"><type pos:start="3:77" pos:end="3:86"><name pos:start="3:77" pos:end="3:84">AVPacket</name> <modifier pos:start="3:86" pos:end="3:86">*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:27">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:16">AVPacketList</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier><modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:29">next_point</name></decl>, <decl pos:start="7:32" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:19"><modifier pos:start="7:32" pos:end="7:32">*</modifier></type><name pos:start="7:33" pos:end="7:41">this_pktl</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:49"><expr pos:start="11:5" pos:end="11:48"><name pos:start="11:5" pos:end="11:13">this_pktl</name> <operator pos:start="11:15" pos:end="11:15">=</operator> <call pos:start="11:17" pos:end="11:48"><name pos:start="11:17" pos:end="11:26">av_mallocz</name><argument_list pos:start="11:27" pos:end="11:48">(<argument pos:start="11:28" pos:end="11:47"><expr pos:start="11:28" pos:end="11:47"><sizeof pos:start="11:28" pos:end="11:47">sizeof<argument_list pos:start="11:34" pos:end="11:47">(<argument pos:start="11:35" pos:end="11:46"><expr pos:start="11:35" pos:end="11:46"><name pos:start="11:35" pos:end="11:46">AVPacketList</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:13">this_pktl</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:18">pkt</name></name><operator pos:start="13:19" pos:end="13:19">=</operator> <operator pos:start="13:21" pos:end="13:21">*</operator><name pos:start="13:22" pos:end="13:24">pkt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:7">pkt</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:17">destruct</name></name><operator pos:start="15:18" pos:end="15:18">=</operator> <name pos:start="15:20" pos:end="15:23">NULL</name></expr>;</expr_stmt>             <comment type="line" pos:start="15:38" pos:end="15:78">// do not free original but only the copy</comment>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><call pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:17">av_dup_packet</name><argument_list pos:start="17:18" pos:end="17:34">(<argument pos:start="17:19" pos:end="17:33"><expr pos:start="17:19" pos:end="17:33"><operator pos:start="17:19" pos:end="17:19">&amp;</operator><name pos:start="17:20" pos:end="17:33"><name pos:start="17:20" pos:end="17:28">this_pktl</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:33">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="17:38" pos:end="17:90">// duplicate the packet if it uses non-alloced memory</comment>



    <if_stmt pos:start="21:5" pos:end="27:39"><if pos:start="21:5" pos:end="25:5">if<condition pos:start="21:7" pos:end="21:60">(<expr pos:start="21:8" pos:end="21:59"><name pos:start="21:8" pos:end="21:36"><name pos:start="21:8" pos:end="21:8">s</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:17">streams</name><index pos:start="21:18" pos:end="21:36">[<expr pos:start="21:19" pos:end="21:35"><name pos:start="21:19" pos:end="21:35"><name pos:start="21:19" pos:end="21:21">pkt</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:35">stream_index</name></name></expr>]</index></name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:59">last_in_packet_buffer</name></expr>)</condition><block pos:start="21:61" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:83">

        <expr_stmt pos:start="23:9" pos:end="23:83"><expr pos:start="23:9" pos:end="23:82"><name pos:start="23:9" pos:end="23:18">next_point</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <operator pos:start="23:22" pos:end="23:22">&amp;</operator><operator pos:start="23:23" pos:end="23:23">(</operator><name pos:start="23:24" pos:end="23:52"><name pos:start="23:24" pos:end="23:24">s</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:33">streams</name><index pos:start="23:34" pos:end="23:52">[<expr pos:start="23:35" pos:end="23:51"><name pos:start="23:35" pos:end="23:51"><name pos:start="23:35" pos:end="23:37">pkt</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:51">stream_index</name></name></expr>]</index></name><operator pos:start="23:53" pos:end="23:54">-&gt;</operator><name pos:start="23:55" pos:end="23:81"><name pos:start="23:55" pos:end="23:75">last_in_packet_buffer</name><operator pos:start="23:76" pos:end="23:77">-&gt;</operator><name pos:start="23:78" pos:end="23:81">next</name></name><operator pos:start="23:82" pos:end="23:82">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="25:6" pos:end="27:39">else<block type="pseudo" pos:start="27:9" pos:end="27:39"><block_content pos:start="27:9" pos:end="27:39">

        <expr_stmt pos:start="27:9" pos:end="27:39"><expr pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:18">next_point</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <operator pos:start="27:22" pos:end="27:22">&amp;</operator><name pos:start="27:23" pos:end="27:38"><name pos:start="27:23" pos:end="27:23">s</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:38">packet_buffer</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="31:5" pos:end="49:5"><if pos:start="31:5" pos:end="49:5">if<condition pos:start="31:7" pos:end="31:19">(<expr pos:start="31:8" pos:end="31:18"><operator pos:start="31:8" pos:end="31:8">*</operator><name pos:start="31:9" pos:end="31:18">next_point</name></expr>)</condition><block pos:start="31:20" pos:end="49:5">{<block_content pos:start="33:9" pos:end="47:9">

        <if_stmt pos:start="33:9" pos:end="47:9"><if pos:start="33:9" pos:end="43:9">if<condition pos:start="33:11" pos:end="33:55">(<expr pos:start="33:12" pos:end="33:54"><call pos:start="33:12" pos:end="33:54"><name pos:start="33:12" pos:end="33:18">compare</name><argument_list pos:start="33:19" pos:end="33:54">(<argument pos:start="33:20" pos:end="33:20"><expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">s</name></expr></argument>, <argument pos:start="33:23" pos:end="33:48"><expr pos:start="33:23" pos:end="33:48"><operator pos:start="33:23" pos:end="33:23">&amp;</operator><name pos:start="33:24" pos:end="33:48"><name pos:start="33:24" pos:end="33:24">s</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:43">packet_buffer_end</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:48">pkt</name></name></expr></argument>, <argument pos:start="33:51" pos:end="33:53"><expr pos:start="33:51" pos:end="33:53"><name pos:start="33:51" pos:end="33:53">pkt</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="33:56" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:31">

            <while pos:start="35:13" pos:end="39:13">while<condition pos:start="35:18" pos:end="35:56">(<expr pos:start="35:19" pos:end="35:55"><operator pos:start="35:19" pos:end="35:19">!</operator><call pos:start="35:20" pos:end="35:55"><name pos:start="35:20" pos:end="35:26">compare</name><argument_list pos:start="35:27" pos:end="35:55">(<argument pos:start="35:28" pos:end="35:28"><expr pos:start="35:28" pos:end="35:28"><name pos:start="35:28" pos:end="35:28">s</name></expr></argument>, <argument pos:start="35:31" pos:end="35:49"><expr pos:start="35:31" pos:end="35:49"><operator pos:start="35:31" pos:end="35:31">&amp;</operator><name pos:start="35:32" pos:end="35:49"><operator pos:start="35:32" pos:end="35:32">(</operator><operator pos:start="35:33" pos:end="35:33">*</operator><name pos:start="35:34" pos:end="35:43">next_point</name><operator pos:start="35:44" pos:end="35:44">)</operator><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:49">pkt</name></name></expr></argument>, <argument pos:start="35:52" pos:end="35:54"><expr pos:start="35:52" pos:end="35:54"><name pos:start="35:52" pos:end="35:54">pkt</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="35:57" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:49">

                <expr_stmt pos:start="37:17" pos:end="37:49"><expr pos:start="37:17" pos:end="37:48"><name pos:start="37:17" pos:end="37:26">next_point</name><operator pos:start="37:27" pos:end="37:27">=</operator> <operator pos:start="37:29" pos:end="37:29">&amp;</operator><name pos:start="37:30" pos:end="37:48"><operator pos:start="37:30" pos:end="37:30">(</operator><operator pos:start="37:31" pos:end="37:31">*</operator><name pos:start="37:32" pos:end="37:41">next_point</name><operator pos:start="37:42" pos:end="37:42">)</operator><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:48">next</name></name></expr>;</expr_stmt>

            </block_content>}</block></while>

            <goto pos:start="41:13" pos:end="41:31">goto <name pos:start="41:18" pos:end="41:30">next_non_null</name>;</goto>

        </block_content>}</block></if><else pos:start="43:10" pos:end="47:9">else<block pos:start="43:14" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:55">

            <expr_stmt pos:start="45:13" pos:end="45:55"><expr pos:start="45:13" pos:end="45:54"><name pos:start="45:13" pos:end="45:22">next_point</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <operator pos:start="45:26" pos:end="45:26">&amp;</operator><operator pos:start="45:27" pos:end="45:27">(</operator><name pos:start="45:28" pos:end="45:53"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:47">packet_buffer_end</name><operator pos:start="45:48" pos:end="45:49">-&gt;</operator><name pos:start="45:50" pos:end="45:53">next</name></name><operator pos:start="45:54" pos:end="45:54">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:25"><expr pos:start="51:5" pos:end="51:24"><call pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:10">assert</name><argument_list pos:start="51:11" pos:end="51:24">(<argument pos:start="51:12" pos:end="51:23"><expr pos:start="51:12" pos:end="51:23"><operator pos:start="51:12" pos:end="51:12">!</operator><operator pos:start="51:13" pos:end="51:13">*</operator><name pos:start="51:14" pos:end="51:23">next_point</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:36"><expr pos:start="55:5" pos:end="55:35"><name pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:24">packet_buffer_end</name></name><operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:35">this_pktl</name></expr>;</expr_stmt>

<label pos:start="57:1" pos:end="57:14"><name pos:start="57:1" pos:end="57:13">next_non_null</name>:</label>



    <expr_stmt pos:start="61:5" pos:end="61:33"><expr pos:start="61:5" pos:end="61:32"><name pos:start="61:5" pos:end="61:19"><name pos:start="61:5" pos:end="61:13">this_pktl</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:19">next</name></name><operator pos:start="61:20" pos:end="61:20">=</operator> <operator pos:start="61:22" pos:end="61:22">*</operator><name pos:start="61:23" pos:end="61:32">next_point</name></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="67:27"><expr pos:start="65:5" pos:end="67:26"><name pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:14">streams</name><index pos:start="65:15" pos:end="65:33">[<expr pos:start="65:16" pos:end="65:32"><name pos:start="65:16" pos:end="65:32"><name pos:start="65:16" pos:end="65:18">pkt</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:32">stream_index</name></name></expr>]</index></name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:56">last_in_packet_buffer</name><operator pos:start="65:57" pos:end="65:57">=</operator>

    <operator pos:start="67:5" pos:end="67:5">*</operator><name pos:start="67:6" pos:end="67:15">next_point</name><operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:26">this_pktl</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
