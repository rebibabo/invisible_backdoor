<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13787.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">nbd_send_request</name><parameter_list pos:start="1:21" pos:end="1:60">(<parameter pos:start="1:22" pos:end="1:30"><decl pos:start="1:22" pos:end="1:30"><type pos:start="1:22" pos:end="1:30"><name pos:start="1:22" pos:end="1:24">int</name></type> <name pos:start="1:26" pos:end="1:30">csock</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:59"><decl pos:start="1:33" pos:end="1:59"><type pos:start="1:33" pos:end="1:59"><name pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:38">struct</name> <name pos:start="1:40" pos:end="1:50">nbd_request</name></name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:59">request</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:34"><name pos:start="5:13" pos:end="5:15">buf</name><index pos:start="5:16" pos:end="5:34">[<expr pos:start="5:17" pos:end="5:33"><literal type="number" pos:start="5:17" pos:end="5:19">4</literal> <operator pos:start="5:19" pos:end="5:19">+</operator> <literal type="number" pos:start="5:21" pos:end="5:23">4</literal> <operator pos:start="5:23" pos:end="5:23">+</operator> <literal type="number" pos:start="5:25" pos:end="5:27">8</literal> <operator pos:start="5:27" pos:end="5:27">+</operator> <literal type="number" pos:start="5:29" pos:end="5:31">8</literal> <operator pos:start="5:31" pos:end="5:31">+</operator> <literal type="number" pos:start="5:33" pos:end="5:33">4</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:52"><expr pos:start="9:5" pos:end="9:51"><call pos:start="9:5" pos:end="9:51"><name pos:start="9:5" pos:end="9:16">cpu_to_be32w</name><argument_list pos:start="9:17" pos:end="9:51">(<argument pos:start="9:18" pos:end="9:31"><expr pos:start="9:18" pos:end="9:31"><operator pos:start="9:18" pos:end="9:18">(</operator><name pos:start="9:19" pos:end="9:26">uint32_t</name><operator pos:start="9:27" pos:end="9:27">*</operator><operator pos:start="9:28" pos:end="9:28">)</operator><name pos:start="9:29" pos:end="9:31">buf</name></expr></argument>, <argument pos:start="9:34" pos:end="9:50"><expr pos:start="9:34" pos:end="9:50"><name pos:start="9:34" pos:end="9:50">NBD_REQUEST_MAGIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:54"><expr pos:start="11:5" pos:end="11:53"><call pos:start="11:5" pos:end="11:53"><name pos:start="11:5" pos:end="11:16">cpu_to_be32w</name><argument_list pos:start="11:17" pos:end="11:53">(<argument pos:start="11:18" pos:end="11:37"><expr pos:start="11:18" pos:end="11:37"><operator pos:start="11:18" pos:end="11:18">(</operator><name pos:start="11:19" pos:end="11:26">uint32_t</name><operator pos:start="11:27" pos:end="11:27">*</operator><operator pos:start="11:28" pos:end="11:28">)</operator><operator pos:start="11:29" pos:end="11:29">(</operator><name pos:start="11:30" pos:end="11:32">buf</name> <operator pos:start="11:34" pos:end="11:34">+</operator> <literal type="number" pos:start="11:36" pos:end="11:36">4</literal><operator pos:start="11:37" pos:end="11:37">)</operator></expr></argument>, <argument pos:start="11:40" pos:end="11:52"><expr pos:start="11:40" pos:end="11:52"><name pos:start="11:40" pos:end="11:52"><name pos:start="11:40" pos:end="11:46">request</name><operator pos:start="11:47" pos:end="11:48">-&gt;</operator><name pos:start="11:49" pos:end="11:52">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:56"><expr pos:start="13:5" pos:end="13:55"><call pos:start="13:5" pos:end="13:55"><name pos:start="13:5" pos:end="13:16">cpu_to_be64w</name><argument_list pos:start="13:17" pos:end="13:55">(<argument pos:start="13:18" pos:end="13:37"><expr pos:start="13:18" pos:end="13:37"><operator pos:start="13:18" pos:end="13:18">(</operator><name pos:start="13:19" pos:end="13:26">uint64_t</name><operator pos:start="13:27" pos:end="13:27">*</operator><operator pos:start="13:28" pos:end="13:28">)</operator><operator pos:start="13:29" pos:end="13:29">(</operator><name pos:start="13:30" pos:end="13:32">buf</name> <operator pos:start="13:34" pos:end="13:34">+</operator> <literal type="number" pos:start="13:36" pos:end="13:36">8</literal><operator pos:start="13:37" pos:end="13:37">)</operator></expr></argument>, <argument pos:start="13:40" pos:end="13:54"><expr pos:start="13:40" pos:end="13:54"><name pos:start="13:40" pos:end="13:54"><name pos:start="13:40" pos:end="13:46">request</name><operator pos:start="13:47" pos:end="13:48">-&gt;</operator><name pos:start="13:49" pos:end="13:54">handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:55"><expr pos:start="15:5" pos:end="15:54"><call pos:start="15:5" pos:end="15:54"><name pos:start="15:5" pos:end="15:16">cpu_to_be64w</name><argument_list pos:start="15:17" pos:end="15:54">(<argument pos:start="15:18" pos:end="15:38"><expr pos:start="15:18" pos:end="15:38"><operator pos:start="15:18" pos:end="15:18">(</operator><name pos:start="15:19" pos:end="15:26">uint64_t</name><operator pos:start="15:27" pos:end="15:27">*</operator><operator pos:start="15:28" pos:end="15:28">)</operator><operator pos:start="15:29" pos:end="15:29">(</operator><name pos:start="15:30" pos:end="15:32">buf</name> <operator pos:start="15:34" pos:end="15:34">+</operator> <literal type="number" pos:start="15:36" pos:end="15:37">16</literal><operator pos:start="15:38" pos:end="15:38">)</operator></expr></argument>, <argument pos:start="15:41" pos:end="15:53"><expr pos:start="15:41" pos:end="15:53"><name pos:start="15:41" pos:end="15:53"><name pos:start="15:41" pos:end="15:47">request</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:53">from</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><call pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:16">cpu_to_be32w</name><argument_list pos:start="17:17" pos:end="17:53">(<argument pos:start="17:18" pos:end="17:38"><expr pos:start="17:18" pos:end="17:38"><operator pos:start="17:18" pos:end="17:18">(</operator><name pos:start="17:19" pos:end="17:26">uint32_t</name><operator pos:start="17:27" pos:end="17:27">*</operator><operator pos:start="17:28" pos:end="17:28">)</operator><operator pos:start="17:29" pos:end="17:29">(</operator><name pos:start="17:30" pos:end="17:32">buf</name> <operator pos:start="17:34" pos:end="17:34">+</operator> <literal type="number" pos:start="17:36" pos:end="17:37">24</literal><operator pos:start="17:38" pos:end="17:38">)</operator></expr></argument>, <argument pos:start="17:41" pos:end="17:52"><expr pos:start="17:41" pos:end="17:52"><name pos:start="17:41" pos:end="17:52"><name pos:start="17:41" pos:end="17:47">request</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:52">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="25:71"><expr pos:start="21:5" pos:end="25:70"><call pos:start="21:5" pos:end="25:70"><name pos:start="21:5" pos:end="21:9">TRACE</name><argument_list pos:start="21:10" pos:end="25:70">(<argument pos:start="21:11" pos:end="23:76"><expr pos:start="21:11" pos:end="23:76"><literal type="string" pos:start="21:11" pos:end="21:39">"Sending request to client: "</literal>

          <literal type="string" pos:start="23:11" pos:end="23:23">"{ .from = %"</literal> <name pos:start="23:25" pos:end="23:30">PRIu64</name><literal type="string" pos:start="23:31" pos:end="23:56">", .len = %u, .handle = %"</literal> <name pos:start="23:58" pos:end="23:63">PRIu64</name><literal type="string" pos:start="23:64" pos:end="23:76">", .type=%i}"</literal></expr></argument>,

          <argument pos:start="25:11" pos:end="25:23"><expr pos:start="25:11" pos:end="25:23"><name pos:start="25:11" pos:end="25:23"><name pos:start="25:11" pos:end="25:17">request</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:23">from</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:37"><expr pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:32">request</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:37">len</name></name></expr></argument>, <argument pos:start="25:40" pos:end="25:54"><expr pos:start="25:40" pos:end="25:54"><name pos:start="25:40" pos:end="25:54"><name pos:start="25:40" pos:end="25:46">request</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:54">handle</name></name></expr></argument>, <argument pos:start="25:57" pos:end="25:69"><expr pos:start="25:57" pos:end="25:69"><name pos:start="25:57" pos:end="25:69"><name pos:start="25:57" pos:end="25:63">request</name><operator pos:start="25:64" pos:end="25:65">-&gt;</operator><name pos:start="25:66" pos:end="25:69">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:59">(<expr pos:start="29:9" pos:end="29:58"><call pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:18">write_sync</name><argument_list pos:start="29:19" pos:end="29:43">(<argument pos:start="29:20" pos:end="29:24"><expr pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:24">csock</name></expr></argument>, <argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:29">buf</name></expr></argument>, <argument pos:start="29:32" pos:end="29:42"><expr pos:start="29:32" pos:end="29:42"><sizeof pos:start="29:32" pos:end="29:42">sizeof<argument_list pos:start="29:38" pos:end="29:42">(<argument pos:start="29:39" pos:end="29:41"><expr pos:start="29:39" pos:end="29:41"><name pos:start="29:39" pos:end="29:41">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="29:45" pos:end="29:46">!=</operator> <sizeof pos:start="29:48" pos:end="29:58">sizeof<argument_list pos:start="29:54" pos:end="29:58">(<argument pos:start="29:55" pos:end="29:57"><expr pos:start="29:55" pos:end="29:57"><name pos:start="29:55" pos:end="29:57">buf</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="29:61" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:18">

        <expr_stmt pos:start="31:9" pos:end="31:40"><expr pos:start="31:9" pos:end="31:39"><call pos:start="31:9" pos:end="31:39"><name pos:start="31:9" pos:end="31:11">LOG</name><argument_list pos:start="31:12" pos:end="31:39">(<argument pos:start="31:13" pos:end="31:38"><expr pos:start="31:13" pos:end="31:38"><literal type="string" pos:start="31:13" pos:end="31:38">"writing to socket failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:23"><expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:13">errno</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:22">EINVAL</name></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="39:5" pos:end="39:13">return <expr pos:start="39:12" pos:end="39:12"><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
