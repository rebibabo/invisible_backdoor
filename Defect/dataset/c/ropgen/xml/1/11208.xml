<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11208.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">booke_update_fixed_timer</name><parameter_list pos:start="1:37" pos:end="7:61">(<parameter pos:start="1:38" pos:end="1:61"><decl pos:start="1:38" pos:end="1:61"><type pos:start="1:38" pos:end="1:61"><name pos:start="1:38" pos:end="1:48">CPUPPCState</name>         <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">env</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:65"><decl pos:start="3:38" pos:end="3:65"><type pos:start="3:38" pos:end="3:65"><name pos:start="3:38" pos:end="3:44">uint8_t</name></type>           <name pos:start="3:56" pos:end="3:65">target_bit</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:60"><decl pos:start="5:38" pos:end="5:60"><type pos:start="5:38" pos:end="5:60"><name pos:start="5:38" pos:end="5:45">uint64_t</name>          <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:60">next</name></decl></parameter>,

                                     <parameter pos:start="7:38" pos:end="7:60"><decl pos:start="7:38" pos:end="7:60"><type pos:start="7:38" pos:end="7:60"><name pos:start="7:38" pos:end="7:53"><name pos:start="7:38" pos:end="7:43">struct</name> <name pos:start="7:45" pos:end="7:53">QEMUTimer</name></name> <modifier pos:start="7:55" pos:end="7:55">*</modifier></type><name pos:start="7:56" pos:end="7:60">timer</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="55:1">{<block_content pos:start="11:5" pos:end="53:33">

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">ppc_tb_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:20">tb_env</name> <init pos:start="11:22" pos:end="11:34">= <expr pos:start="11:24" pos:end="11:34"><name pos:start="11:24" pos:end="11:34"><name pos:start="11:24" pos:end="11:26">env</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:34">tb_env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:18">lapse</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:15">tb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:44"><decl pos:start="17:5" pos:end="17:43"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:19">period</name> <init pos:start="17:21" pos:end="17:43">= <expr pos:start="17:23" pos:end="17:43"><literal type="number" pos:start="17:23" pos:end="17:23">1</literal> <operator pos:start="17:25" pos:end="17:26">&lt;&lt;</operator> <operator pos:start="17:28" pos:end="17:28">(</operator><name pos:start="17:29" pos:end="17:38">target_bit</name> <operator pos:start="17:40" pos:end="17:40">+</operator> <literal type="number" pos:start="17:42" pos:end="17:42">1</literal><operator pos:start="17:43" pos:end="17:43">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:16">now</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:7">now</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:37"><name pos:start="23:11" pos:end="23:27">qemu_get_clock_ns</name><argument_list pos:start="23:28" pos:end="23:37">(<argument pos:start="23:29" pos:end="23:36"><expr pos:start="23:29" pos:end="23:36"><name pos:start="23:29" pos:end="23:36">vm_clock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:57"><expr pos:start="25:5" pos:end="25:56"><name pos:start="25:5" pos:end="25:6">tb</name>  <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:56"><name pos:start="25:11" pos:end="25:24">cpu_ppc_get_tb</name><argument_list pos:start="25:25" pos:end="25:56">(<argument pos:start="25:26" pos:end="25:31"><expr pos:start="25:26" pos:end="25:31"><name pos:start="25:26" pos:end="25:31">tb_env</name></expr></argument>, <argument pos:start="25:34" pos:end="25:36"><expr pos:start="25:34" pos:end="25:36"><name pos:start="25:34" pos:end="25:36">now</name></expr></argument>, <argument pos:start="25:39" pos:end="25:55"><expr pos:start="25:39" pos:end="25:55"><name pos:start="25:39" pos:end="25:55"><name pos:start="25:39" pos:end="25:44">tb_env</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:55">tb_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:63"><expr pos:start="29:5" pos:end="29:62"><name pos:start="29:5" pos:end="29:9">lapse</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <name pos:start="29:13" pos:end="29:18">period</name> <operator pos:start="29:20" pos:end="29:20">-</operator> <operator pos:start="29:22" pos:end="29:22">(</operator><operator pos:start="29:23" pos:end="29:23">(</operator><name pos:start="29:24" pos:end="29:25">tb</name> <operator pos:start="29:27" pos:end="29:27">-</operator> <operator pos:start="29:29" pos:end="29:29">(</operator><literal type="number" pos:start="29:30" pos:end="29:30">1</literal> <operator pos:start="29:32" pos:end="29:33">&lt;&lt;</operator> <name pos:start="29:35" pos:end="29:44">target_bit</name><operator pos:start="29:45" pos:end="29:45">)</operator><operator pos:start="29:46" pos:end="29:46">)</operator> <operator pos:start="29:48" pos:end="29:48">&amp;</operator> <operator pos:start="29:50" pos:end="29:50">(</operator><name pos:start="29:51" pos:end="29:56">period</name> <operator pos:start="29:58" pos:end="29:58">-</operator> <literal type="number" pos:start="29:60" pos:end="29:60">1</literal><operator pos:start="29:61" pos:end="29:61">)</operator><operator pos:start="29:62" pos:end="29:62">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:72"><expr pos:start="33:5" pos:end="33:71"><operator pos:start="33:5" pos:end="33:5">*</operator><name pos:start="33:6" pos:end="33:9">next</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <name pos:start="33:13" pos:end="33:15">now</name> <operator pos:start="33:17" pos:end="33:17">+</operator> <call pos:start="33:19" pos:end="33:71"><name pos:start="33:19" pos:end="33:26">muldiv64</name><argument_list pos:start="33:27" pos:end="33:71">(<argument pos:start="33:28" pos:end="33:32"><expr pos:start="33:28" pos:end="33:32"><name pos:start="33:28" pos:end="33:32">lapse</name></expr></argument>, <argument pos:start="33:35" pos:end="33:53"><expr pos:start="33:35" pos:end="33:53"><call pos:start="33:35" pos:end="33:53"><name pos:start="33:35" pos:end="33:51">get_ticks_per_sec</name><argument_list pos:start="33:52" pos:end="33:53">()</argument_list></call></expr></argument>, <argument pos:start="33:56" pos:end="33:70"><expr pos:start="33:56" pos:end="33:70"><name pos:start="33:56" pos:end="33:70"><name pos:start="33:56" pos:end="33:61">tb_env</name><operator pos:start="33:62" pos:end="33:63">-&gt;</operator><name pos:start="33:64" pos:end="33:70">tb_freq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="41:7">/* XXX: If expire time is now. We can't run the callback because we don't

     * have access to it. So we just set the timer one nanosecond later.

     */</comment>



    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:21">(<expr pos:start="45:9" pos:end="45:20"><operator pos:start="45:9" pos:end="45:9">*</operator><name pos:start="45:10" pos:end="45:13">next</name> <operator pos:start="45:15" pos:end="45:16">==</operator> <name pos:start="45:18" pos:end="45:20">now</name></expr>)</condition> <block pos:start="45:23" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:18">

        <expr_stmt pos:start="47:9" pos:end="47:18"><expr pos:start="47:9" pos:end="47:17"><operator pos:start="47:9" pos:end="47:9">(</operator><operator pos:start="47:10" pos:end="47:10">*</operator><name pos:start="47:11" pos:end="47:14">next</name><operator pos:start="47:15" pos:end="47:15">)</operator><operator pos:start="47:16" pos:end="47:17">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:33"><expr pos:start="53:5" pos:end="53:32"><call pos:start="53:5" pos:end="53:32"><name pos:start="53:5" pos:end="53:18">qemu_mod_timer</name><argument_list pos:start="53:19" pos:end="53:32">(<argument pos:start="53:20" pos:end="53:24"><expr pos:start="53:20" pos:end="53:24"><name pos:start="53:20" pos:end="53:24">timer</name></expr></argument>, <argument pos:start="53:27" pos:end="53:31"><expr pos:start="53:27" pos:end="53:31"><operator pos:start="53:27" pos:end="53:27">*</operator><name pos:start="53:28" pos:end="53:31">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
