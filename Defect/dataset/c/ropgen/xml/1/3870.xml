<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3870.c" pos:tabs="8"><function pos:start="1:1" pos:end="40:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:17">gen_b</name><parameter_list pos:start="1:18" pos:end="1:36">(<parameter pos:start="1:19" pos:end="1:35"><decl pos:start="1:19" pos:end="1:35"><type pos:start="1:19" pos:end="1:32"><name pos:start="1:19" pos:end="1:30">DisasContext</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="40:1">{<block_content pos:start="5:5" pos:end="38:32">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:16">target_ulong</name></type> <name pos:start="5:18" pos:end="5:19">li</name></decl>, <decl pos:start="5:22" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:22" pos:end="5:27">target</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="14:0"><expr pos:start="9:5" pos:end="9:40"><name pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:7">ctx</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:18">exception</name></name> <operator pos:start="9:20" pos:end="9:20">=</operator> <name pos:start="9:22" pos:end="9:40">POWERPC_EXCP_BRANCH</name></expr>;</expr_stmt>

    <comment type="block" pos:start="11:5" pos:end="11:24">/* sign extend LI */</comment>

<cpp:if pos:start="13:1" pos:end="13:25">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:25"><call pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:11">defined</name><argument_list pos:start="13:12" pos:end="13:25">(<argument pos:start="13:13" pos:end="13:24"><expr pos:start="13:13" pos:end="13:24"><name pos:start="13:13" pos:end="13:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="15:5" pos:end="23:50"><if pos:start="15:5" pos:end="17:52">if <condition pos:start="15:8" pos:end="15:21">(<expr pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:11">ctx</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:20">sf_mode</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:52"><block_content pos:start="17:9" pos:end="17:52">

        <expr_stmt pos:start="17:9" pos:end="17:52"><expr pos:start="17:9" pos:end="17:51"><name pos:start="17:9" pos:end="17:10">li</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <operator pos:start="17:14" pos:end="17:14">(</operator><operator pos:start="17:15" pos:end="17:15">(</operator><name pos:start="17:16" pos:end="17:22">int64_t</name><operator pos:start="17:23" pos:end="17:23">)</operator><call pos:start="17:24" pos:end="17:38"><name pos:start="17:24" pos:end="17:25">LI</name><argument_list pos:start="17:26" pos:end="17:38">(<argument pos:start="17:27" pos:end="17:37"><expr pos:start="17:27" pos:end="17:37"><name pos:start="17:27" pos:end="17:37"><name pos:start="17:27" pos:end="17:29">ctx</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:37">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:40" pos:end="17:41">&lt;&lt;</operator> <literal type="number" pos:start="17:43" pos:end="17:44">38</literal><operator pos:start="17:45" pos:end="17:45">)</operator> <operator pos:start="17:47" pos:end="17:48">&gt;&gt;</operator> <literal type="number" pos:start="17:50" pos:end="17:51">38</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="19:5" pos:end="23:50">else<block type="pseudo" pos:start="23:9" pos:end="23:50"><block_content pos:start="23:9" pos:end="23:50">

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="23:9" pos:end="23:50"><expr pos:start="23:9" pos:end="23:49"><name pos:start="23:9" pos:end="23:10">li</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <operator pos:start="23:14" pos:end="23:14">(</operator><operator pos:start="23:15" pos:end="23:15">(</operator><name pos:start="23:16" pos:end="23:22">int32_t</name><operator pos:start="23:23" pos:end="23:23">)</operator><call pos:start="23:24" pos:end="23:38"><name pos:start="23:24" pos:end="23:25">LI</name><argument_list pos:start="23:26" pos:end="23:38">(<argument pos:start="23:27" pos:end="23:37"><expr pos:start="23:27" pos:end="23:37"><name pos:start="23:27" pos:end="23:37"><name pos:start="23:27" pos:end="23:29">ctx</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:37">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:40" pos:end="23:41">&lt;&lt;</operator> <literal type="number" pos:start="23:43" pos:end="23:43">6</literal><operator pos:start="23:44" pos:end="23:44">)</operator> <operator pos:start="23:46" pos:end="23:47">&gt;&gt;</operator> <literal type="number" pos:start="23:49" pos:end="23:49">6</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="25:5" pos:end="31:20"><if pos:start="25:5" pos:end="27:35">if <condition pos:start="25:8" pos:end="25:37">(<expr pos:start="25:9" pos:end="25:36"><call pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:14">likely</name><argument_list pos:start="25:15" pos:end="25:36">(<argument pos:start="25:16" pos:end="25:35"><expr pos:start="25:16" pos:end="25:35"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:17">AA</name><argument_list pos:start="25:18" pos:end="25:30">(<argument pos:start="25:19" pos:end="25:29"><expr pos:start="25:19" pos:end="25:29"><name pos:start="25:19" pos:end="25:29"><name pos:start="25:19" pos:end="25:21">ctx</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:29">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:32" pos:end="25:33">==</operator> <literal type="number" pos:start="25:35" pos:end="25:35">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:35"><block_content pos:start="27:9" pos:end="27:35">

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:14">target</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:25"><name pos:start="27:18" pos:end="27:20">ctx</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:25">nip</name></name> <operator pos:start="27:27" pos:end="27:27">+</operator> <name pos:start="27:29" pos:end="27:30">li</name> <operator pos:start="27:32" pos:end="27:32">-</operator> <literal type="number" pos:start="27:34" pos:end="27:34">4</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="29:5" pos:end="31:20">else<block type="pseudo" pos:start="31:9" pos:end="31:20"><block_content pos:start="31:9" pos:end="31:20">

        <expr_stmt pos:start="31:9" pos:end="31:20"><expr pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:14">target</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:19">li</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="33:5" pos:end="35:33"><if pos:start="33:5" pos:end="35:33">if <condition pos:start="33:8" pos:end="33:24">(<expr pos:start="33:9" pos:end="33:23"><call pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:10">LK</name><argument_list pos:start="33:11" pos:end="33:23">(<argument pos:start="33:12" pos:end="33:22"><expr pos:start="33:12" pos:end="33:22"><name pos:start="33:12" pos:end="33:22"><name pos:start="33:12" pos:end="33:14">ctx</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:22">opcode</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:33"><block_content pos:start="35:9" pos:end="35:33">

        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><call pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:17">gen_setlr</name><argument_list pos:start="35:18" pos:end="35:32">(<argument pos:start="35:19" pos:end="35:21"><expr pos:start="35:19" pos:end="35:21"><name pos:start="35:19" pos:end="35:21">ctx</name></expr></argument>, <argument pos:start="35:24" pos:end="35:31"><expr pos:start="35:24" pos:end="35:31"><name pos:start="35:24" pos:end="35:31"><name pos:start="35:24" pos:end="35:26">ctx</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:31">nip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>


    <expr_stmt pos:start="38:5" pos:end="38:32"><expr pos:start="38:5" pos:end="38:31"><call pos:start="38:5" pos:end="38:31"><name pos:start="38:5" pos:end="38:15">gen_goto_tb</name><argument_list pos:start="38:16" pos:end="38:31">(<argument pos:start="38:17" pos:end="38:19"><expr pos:start="38:17" pos:end="38:19"><name pos:start="38:17" pos:end="38:19">ctx</name></expr></argument>, <argument pos:start="38:22" pos:end="38:22"><expr pos:start="38:22" pos:end="38:22"><literal type="number" pos:start="38:22" pos:end="38:22">0</literal></expr></argument>, <argument pos:start="38:25" pos:end="38:30"><expr pos:start="38:25" pos:end="38:30"><name pos:start="38:25" pos:end="38:30">target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
