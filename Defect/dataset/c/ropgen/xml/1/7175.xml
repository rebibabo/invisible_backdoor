<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7175.c" pos:tabs="8"><function pos:start="1:1" pos:end="315:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">tcg_dump_ops</name><parameter_list pos:start="1:18" pos:end="1:32">(<parameter pos:start="1:19" pos:end="1:31"><decl pos:start="1:19" pos:end="1:31"><type pos:start="1:19" pos:end="1:30"><name pos:start="1:19" pos:end="1:28">TCGContext</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:31">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="315:1">{<block_content pos:start="5:5" pos:end="313:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:17"><name pos:start="5:10" pos:end="5:12">buf</name><index pos:start="5:13" pos:end="5:17">[<expr pos:start="5:14" pos:end="5:16"><literal type="number" pos:start="5:14" pos:end="5:16">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">TCGOp</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:13">op</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">oi</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="313:5">for <control pos:start="13:9" pos:end="13:60">(<init pos:start="13:10" pos:end="13:36"><expr pos:start="13:10" pos:end="13:35"><name pos:start="13:10" pos:end="13:11">oi</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <name pos:start="13:15" pos:end="13:30"><name pos:start="13:15" pos:end="13:15">s</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:27">gen_op_buf</name><index pos:start="13:28" pos:end="13:30">[<expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">0</literal></expr>]</index></name><operator pos:start="13:31" pos:end="13:31">.</operator><name pos:start="13:32" pos:end="13:35">next</name></expr>;</init> <condition pos:start="13:38" pos:end="13:45"><expr pos:start="13:38" pos:end="13:44"><name pos:start="13:38" pos:end="13:39">oi</name> <operator pos:start="13:41" pos:end="13:42">!=</operator> <literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr>;</condition> <incr pos:start="13:47" pos:end="13:59"><expr pos:start="13:47" pos:end="13:59"><name pos:start="13:47" pos:end="13:48">oi</name> <operator pos:start="13:50" pos:end="13:50">=</operator> <name pos:start="13:52" pos:end="13:59"><name pos:start="13:52" pos:end="13:53">op</name><operator pos:start="13:54" pos:end="13:55">-&gt;</operator><name pos:start="13:56" pos:end="13:59">next</name></name></expr></incr>)</control> <block pos:start="13:62" pos:end="313:5">{<block_content pos:start="15:9" pos:end="311:23">

        <decl_stmt pos:start="15:9" pos:end="15:47"><decl pos:start="15:9" pos:end="15:13"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:13">i</name></decl>, <decl pos:start="15:16" pos:end="15:16"><type ref="prev" pos:start="15:9" pos:end="15:11"/><name pos:start="15:16" pos:end="15:16">k</name></decl>, <decl pos:start="15:19" pos:end="15:26"><type ref="prev" pos:start="15:9" pos:end="15:11"/><name pos:start="15:19" pos:end="15:26">nb_oargs</name></decl>, <decl pos:start="15:29" pos:end="15:36"><type ref="prev" pos:start="15:9" pos:end="15:11"/><name pos:start="15:29" pos:end="15:36">nb_iargs</name></decl>, <decl pos:start="15:39" pos:end="15:46"><type ref="prev" pos:start="15:9" pos:end="15:11"/><name pos:start="15:39" pos:end="15:46">nb_cargs</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:28"><decl pos:start="17:9" pos:end="17:27"><type pos:start="17:9" pos:end="17:24"><specifier pos:start="17:9" pos:end="17:13">const</specifier> <name pos:start="17:15" pos:end="17:22">TCGOpDef</name> <modifier pos:start="17:24" pos:end="17:24">*</modifier></type><name pos:start="17:25" pos:end="17:27">def</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:20"><decl pos:start="19:9" pos:end="19:19"><type pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:17">TCGOpcode</name></type> <name pos:start="19:19" pos:end="19:19">c</name></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:20"><decl pos:start="21:9" pos:end="21:19"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:15">col</name> <init pos:start="21:17" pos:end="21:19">= <expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:32"><expr pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:10">op</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <operator pos:start="25:14" pos:end="25:14">&amp;</operator><name pos:start="25:15" pos:end="25:31"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:27">gen_op_buf</name><index pos:start="25:28" pos:end="25:31">[<expr pos:start="25:29" pos:end="25:30"><name pos:start="25:29" pos:end="25:30">oi</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:20"><expr pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:9">c</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <name pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:14">op</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:19">opc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:30"><expr pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:11">def</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <operator pos:start="29:15" pos:end="29:15">&amp;</operator><name pos:start="29:16" pos:end="29:29"><name pos:start="29:16" pos:end="29:26">tcg_op_defs</name><index pos:start="29:27" pos:end="29:29">[<expr pos:start="29:28" pos:end="29:28"><name pos:start="29:28" pos:end="29:28">c</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="259:9"><if pos:start="33:9" pos:end="57:9">if <condition pos:start="33:12" pos:end="33:37">(<expr pos:start="33:13" pos:end="33:36"><name pos:start="33:13" pos:end="33:13">c</name> <operator pos:start="33:15" pos:end="33:16">==</operator> <name pos:start="33:18" pos:end="33:36">INDEX_op_insn_start</name></expr>)</condition> <block pos:start="33:39" pos:end="57:9">{<block_content pos:start="35:13" pos:end="55:13">

            <expr_stmt pos:start="35:13" pos:end="35:80"><expr pos:start="35:13" pos:end="35:79"><name pos:start="35:13" pos:end="35:15">col</name> <operator pos:start="35:17" pos:end="35:18">+=</operator> <call pos:start="35:20" pos:end="35:79"><name pos:start="35:20" pos:end="35:27">qemu_log</name><argument_list pos:start="35:28" pos:end="35:79">(<argument pos:start="35:29" pos:end="35:37"><expr pos:start="35:29" pos:end="35:37"><literal type="string" pos:start="35:29" pos:end="35:37">"%s ----"</literal></expr></argument>, <argument pos:start="35:40" pos:end="35:78"><expr pos:start="35:40" pos:end="35:78"><ternary pos:start="35:40" pos:end="35:78"><condition pos:start="35:40" pos:end="35:68"><expr pos:start="35:40" pos:end="35:66"><name pos:start="35:40" pos:end="35:41">oi</name> <operator pos:start="35:43" pos:end="35:44">!=</operator> <name pos:start="35:46" pos:end="35:61"><name pos:start="35:46" pos:end="35:46">s</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:58">gen_op_buf</name><index pos:start="35:59" pos:end="35:61">[<expr pos:start="35:60" pos:end="35:60"><literal type="number" pos:start="35:60" pos:end="35:60">0</literal></expr>]</index></name><operator pos:start="35:62" pos:end="35:62">.</operator><name pos:start="35:63" pos:end="35:66">next</name></expr> ?</condition><then pos:start="35:70" pos:end="35:73"> <expr pos:start="35:70" pos:end="35:73"><literal type="string" pos:start="35:70" pos:end="35:73">"\n"</literal></expr> </then><else pos:start="35:75" pos:end="35:78">: <expr pos:start="35:77" pos:end="35:78"><literal type="string" pos:start="35:77" pos:end="35:78">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="39:13" pos:end="55:13">for <control pos:start="39:17" pos:end="39:57">(<init pos:start="39:18" pos:end="39:23"><expr pos:start="39:18" pos:end="39:22"><name pos:start="39:18" pos:end="39:18">i</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr>;</init> <condition pos:start="39:25" pos:end="39:52"><expr pos:start="39:25" pos:end="39:51"><name pos:start="39:25" pos:end="39:25">i</name> <operator pos:start="39:27" pos:end="39:27">&lt;</operator> <name pos:start="39:29" pos:end="39:51">TARGET_INSN_START_WORDS</name></expr>;</condition> <incr pos:start="39:54" pos:end="39:56"><expr pos:start="39:54" pos:end="39:56"><operator pos:start="39:54" pos:end="39:55">++</operator><name pos:start="39:56" pos:end="39:56">i</name></expr></incr>)</control> <block pos:start="39:59" pos:end="55:13">{<block_content pos:start="41:17" pos:end="53:54">

                <decl_stmt pos:start="41:17" pos:end="44:0"><decl pos:start="41:17" pos:end="41:30"><type pos:start="41:17" pos:end="41:28"><name pos:start="41:17" pos:end="41:28">target_ulong</name></type> <name pos:start="41:30" pos:end="41:30">a</name></decl>;</decl_stmt>

<cpp:if pos:start="43:1" pos:end="43:42">#<cpp:directive pos:start="43:2" pos:end="43:3">if</cpp:directive> <expr pos:start="43:5" pos:end="43:42"><name pos:start="43:5" pos:end="43:20">TARGET_LONG_BITS</name> <operator pos:start="43:22" pos:end="43:22">&gt;</operator> <name pos:start="43:24" pos:end="43:42">TCG_TARGET_REG_BITS</name></expr></cpp:if>

                <expr_stmt pos:start="45:17" pos:end="48:0"><expr pos:start="45:17" pos:end="45:75"><name pos:start="45:17" pos:end="45:17">a</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <call pos:start="45:21" pos:end="45:75"><name pos:start="45:21" pos:end="45:29">deposit64</name><argument_list pos:start="45:30" pos:end="45:75">(<argument pos:start="45:31" pos:end="45:45"><expr pos:start="45:31" pos:end="45:45"><name pos:start="45:31" pos:end="45:45"><name pos:start="45:31" pos:end="45:32">op</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:38">args</name><index pos:start="45:39" pos:end="45:45">[<expr pos:start="45:40" pos:end="45:44"><name pos:start="45:40" pos:end="45:40">i</name> <operator pos:start="45:42" pos:end="45:42">*</operator> <literal type="number" pos:start="45:44" pos:end="45:44">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:48" pos:end="45:49"><expr pos:start="45:48" pos:end="45:49"><literal type="number" pos:start="45:48" pos:end="45:49">32</literal></expr></argument>, <argument pos:start="45:52" pos:end="45:53"><expr pos:start="45:52" pos:end="45:53"><literal type="number" pos:start="45:52" pos:end="45:53">32</literal></expr></argument>, <argument pos:start="45:56" pos:end="45:74"><expr pos:start="45:56" pos:end="45:74"><name pos:start="45:56" pos:end="45:74"><name pos:start="45:56" pos:end="45:57">op</name><operator pos:start="45:58" pos:end="45:59">-&gt;</operator><name pos:start="45:60" pos:end="45:63">args</name><index pos:start="45:64" pos:end="45:74">[<expr pos:start="45:65" pos:end="45:73"><name pos:start="45:65" pos:end="45:65">i</name> <operator pos:start="45:67" pos:end="45:67">*</operator> <literal type="number" pos:start="45:69" pos:end="45:71">2</literal> <operator pos:start="45:71" pos:end="45:71">+</operator> <literal type="number" pos:start="45:73" pos:end="45:73">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="47:1" pos:end="47:5">#<cpp:directive pos:start="47:2" pos:end="47:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="49:17" pos:end="52:0"><expr pos:start="49:17" pos:end="49:31"><name pos:start="49:17" pos:end="49:17">a</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:31"><name pos:start="49:21" pos:end="49:22">op</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:28">args</name><index pos:start="49:29" pos:end="49:31">[<expr pos:start="49:30" pos:end="49:30"><name pos:start="49:30" pos:end="49:30">i</name></expr>]</index></name></expr>;</expr_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="53:17" pos:end="53:54"><expr pos:start="53:17" pos:end="53:53"><name pos:start="53:17" pos:end="53:19">col</name> <operator pos:start="53:21" pos:end="53:22">+=</operator> <call pos:start="53:24" pos:end="53:53"><name pos:start="53:24" pos:end="53:31">qemu_log</name><argument_list pos:start="53:32" pos:end="53:53">(<argument pos:start="53:33" pos:end="53:49"><expr pos:start="53:33" pos:end="53:49"><literal type="string" pos:start="53:33" pos:end="53:35">" "</literal> <name pos:start="53:37" pos:end="53:49">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="53:52" pos:end="53:52"><expr pos:start="53:52" pos:end="53:52"><name pos:start="53:52" pos:end="53:52">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="57:11" pos:end="101:9">else if <condition pos:start="57:19" pos:end="57:38">(<expr pos:start="57:20" pos:end="57:37"><name pos:start="57:20" pos:end="57:20">c</name> <operator pos:start="57:22" pos:end="57:23">==</operator> <name pos:start="57:25" pos:end="57:37">INDEX_op_call</name></expr>)</condition> <block pos:start="57:40" pos:end="101:9">{<block_content pos:start="61:13" pos:end="99:13">

            <comment type="block" pos:start="59:13" pos:end="59:46">/* variable number of arguments */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:33"><expr pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:20">nb_oargs</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:32"><name pos:start="61:24" pos:end="61:25">op</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:32">callo</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:33"><expr pos:start="63:13" pos:end="63:32"><name pos:start="63:13" pos:end="63:20">nb_iargs</name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:32"><name pos:start="63:24" pos:end="63:25">op</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:32">calli</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:37"><expr pos:start="65:13" pos:end="65:36"><name pos:start="65:13" pos:end="65:20">nb_cargs</name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:36"><name pos:start="65:24" pos:end="65:26">def</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:36">nb_cargs</name></name></expr>;</expr_stmt>



            <comment type="block" pos:start="69:13" pos:end="69:48">/* function name, flags, out args */</comment>

            <expr_stmt pos:start="71:13" pos:end="75:73"><expr pos:start="71:13" pos:end="75:72"><name pos:start="71:13" pos:end="71:15">col</name> <operator pos:start="71:17" pos:end="71:18">+=</operator> <call pos:start="71:20" pos:end="75:72"><name pos:start="71:20" pos:end="71:27">qemu_log</name><argument_list pos:start="71:28" pos:end="75:72">(<argument pos:start="71:29" pos:end="71:58"><expr pos:start="71:29" pos:end="71:58"><literal type="string" pos:start="71:29" pos:end="71:41">" %s %s,$0x%"</literal> <name pos:start="71:43" pos:end="71:51">TCG_PRIlx</name> <literal type="string" pos:start="71:53" pos:end="71:58">",$%d"</literal></expr></argument>, <argument pos:start="71:61" pos:end="71:69"><expr pos:start="71:61" pos:end="71:69"><name pos:start="71:61" pos:end="71:69"><name pos:start="71:61" pos:end="71:63">def</name><operator pos:start="71:64" pos:end="71:65">-&gt;</operator><name pos:start="71:66" pos:end="71:69">name</name></name></expr></argument>,

                            <argument pos:start="73:29" pos:end="73:77"><expr pos:start="73:29" pos:end="73:77"><call pos:start="73:29" pos:end="73:77"><name pos:start="73:29" pos:end="73:43">tcg_find_helper</name><argument_list pos:start="73:44" pos:end="73:77">(<argument pos:start="73:45" pos:end="73:45"><expr pos:start="73:45" pos:end="73:45"><name pos:start="73:45" pos:end="73:45">s</name></expr></argument>, <argument pos:start="73:48" pos:end="73:76"><expr pos:start="73:48" pos:end="73:76"><name pos:start="73:48" pos:end="73:76"><name pos:start="73:48" pos:end="73:49">op</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:55">args</name><index pos:start="73:56" pos:end="73:76">[<expr pos:start="73:57" pos:end="73:75"><name pos:start="73:57" pos:end="73:64">nb_oargs</name> <operator pos:start="73:66" pos:end="73:66">+</operator> <name pos:start="73:68" pos:end="73:75">nb_iargs</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="75:29" pos:end="75:61"><expr pos:start="75:29" pos:end="75:61"><name pos:start="75:29" pos:end="75:61"><name pos:start="75:29" pos:end="75:30">op</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:36">args</name><index pos:start="75:37" pos:end="75:61">[<expr pos:start="75:38" pos:end="75:60"><name pos:start="75:38" pos:end="75:45">nb_oargs</name> <operator pos:start="75:47" pos:end="75:47">+</operator> <name pos:start="75:49" pos:end="75:56">nb_iargs</name> <operator pos:start="75:58" pos:end="75:58">+</operator> <literal type="number" pos:start="75:60" pos:end="75:60">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:64" pos:end="75:71"><expr pos:start="75:64" pos:end="75:71"><name pos:start="75:64" pos:end="75:71">nb_oargs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="77:13" pos:end="83:13">for <control pos:start="77:17" pos:end="77:42">(<init pos:start="77:18" pos:end="77:23"><expr pos:start="77:18" pos:end="77:22"><name pos:start="77:18" pos:end="77:18">i</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <literal type="number" pos:start="77:22" pos:end="77:22">0</literal></expr>;</init> <condition pos:start="77:25" pos:end="77:37"><expr pos:start="77:25" pos:end="77:36"><name pos:start="77:25" pos:end="77:25">i</name> <operator pos:start="77:27" pos:end="77:27">&lt;</operator> <name pos:start="77:29" pos:end="77:36">nb_oargs</name></expr>;</condition> <incr pos:start="77:39" pos:end="77:41"><expr pos:start="77:39" pos:end="77:41"><name pos:start="77:39" pos:end="77:39">i</name><operator pos:start="77:40" pos:end="77:41">++</operator></expr></incr>)</control> <block pos:start="77:44" pos:end="83:13">{<block_content pos:start="79:17" pos:end="81:69">

                <expr_stmt pos:start="79:17" pos:end="81:69"><expr pos:start="79:17" pos:end="81:68"><name pos:start="79:17" pos:end="79:19">col</name> <operator pos:start="79:21" pos:end="79:22">+=</operator> <call pos:start="79:24" pos:end="81:68"><name pos:start="79:24" pos:end="79:31">qemu_log</name><argument_list pos:start="79:32" pos:end="81:68">(<argument pos:start="79:33" pos:end="79:37"><expr pos:start="79:33" pos:end="79:37"><literal type="string" pos:start="79:33" pos:end="79:37">",%s"</literal></expr></argument>, <argument pos:start="79:40" pos:end="81:67"><expr pos:start="79:40" pos:end="81:67"><call pos:start="79:40" pos:end="81:67"><name pos:start="79:40" pos:end="79:54">tcg_get_arg_str</name><argument_list pos:start="79:55" pos:end="81:67">(<argument pos:start="79:56" pos:end="79:56"><expr pos:start="79:56" pos:end="79:56"><name pos:start="79:56" pos:end="79:56">s</name></expr></argument>, <argument pos:start="79:59" pos:end="79:61"><expr pos:start="79:59" pos:end="79:61"><name pos:start="79:59" pos:end="79:61">buf</name></expr></argument>, <argument pos:start="79:64" pos:end="79:74"><expr pos:start="79:64" pos:end="79:74"><sizeof pos:start="79:64" pos:end="79:74">sizeof<argument_list pos:start="79:70" pos:end="79:74">(<argument pos:start="79:71" pos:end="79:73"><expr pos:start="79:71" pos:end="79:73"><name pos:start="79:71" pos:end="79:73">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                                       <argument pos:start="81:56" pos:end="81:66"><expr pos:start="81:56" pos:end="81:66"><name pos:start="81:56" pos:end="81:66"><name pos:start="81:56" pos:end="81:57">op</name><operator pos:start="81:58" pos:end="81:59">-&gt;</operator><name pos:start="81:60" pos:end="81:63">args</name><index pos:start="81:64" pos:end="81:66">[<expr pos:start="81:65" pos:end="81:65"><name pos:start="81:65" pos:end="81:65">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="85:13" pos:end="99:13">for <control pos:start="85:17" pos:end="85:42">(<init pos:start="85:18" pos:end="85:23"><expr pos:start="85:18" pos:end="85:22"><name pos:start="85:18" pos:end="85:18">i</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <literal type="number" pos:start="85:22" pos:end="85:22">0</literal></expr>;</init> <condition pos:start="85:25" pos:end="85:37"><expr pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:25">i</name> <operator pos:start="85:27" pos:end="85:27">&lt;</operator> <name pos:start="85:29" pos:end="85:36">nb_iargs</name></expr>;</condition> <incr pos:start="85:39" pos:end="85:41"><expr pos:start="85:39" pos:end="85:41"><name pos:start="85:39" pos:end="85:39">i</name><operator pos:start="85:40" pos:end="85:41">++</operator></expr></incr>)</control> <block pos:start="85:44" pos:end="99:13">{<block_content pos:start="87:17" pos:end="97:42">

                <decl_stmt pos:start="87:17" pos:end="87:52"><decl pos:start="87:17" pos:end="87:51"><type pos:start="87:17" pos:end="87:22"><name pos:start="87:17" pos:end="87:22">TCGArg</name></type> <name pos:start="87:24" pos:end="87:26">arg</name> <init pos:start="87:28" pos:end="87:51">= <expr pos:start="87:30" pos:end="87:51"><name pos:start="87:30" pos:end="87:51"><name pos:start="87:30" pos:end="87:31">op</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:37">args</name><index pos:start="87:38" pos:end="87:51">[<expr pos:start="87:39" pos:end="87:50"><name pos:start="87:39" pos:end="87:46">nb_oargs</name> <operator pos:start="87:48" pos:end="87:48">+</operator> <name pos:start="87:50" pos:end="87:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="89:17" pos:end="89:42"><decl pos:start="89:17" pos:end="89:41"><type pos:start="89:17" pos:end="89:28"><specifier pos:start="89:17" pos:end="89:21">const</specifier> <name pos:start="89:23" pos:end="89:26">char</name> <modifier pos:start="89:28" pos:end="89:28">*</modifier></type><name pos:start="89:29" pos:end="89:29">t</name> <init pos:start="89:31" pos:end="89:41">= <expr pos:start="89:33" pos:end="89:41"><literal type="string" pos:start="89:33" pos:end="89:41">"&lt;dummy&gt;"</literal></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="91:17" pos:end="95:17"><if pos:start="91:17" pos:end="95:17">if <condition pos:start="91:20" pos:end="91:46">(<expr pos:start="91:21" pos:end="91:45"><name pos:start="91:21" pos:end="91:23">arg</name> <operator pos:start="91:25" pos:end="91:26">!=</operator> <name pos:start="91:28" pos:end="91:45">TCG_CALL_DUMMY_ARG</name></expr>)</condition> <block pos:start="91:48" pos:end="95:17">{<block_content pos:start="93:21" pos:end="93:66">

                    <expr_stmt pos:start="93:21" pos:end="93:66"><expr pos:start="93:21" pos:end="93:65"><name pos:start="93:21" pos:end="93:21">t</name> <operator pos:start="93:23" pos:end="93:23">=</operator> <call pos:start="93:25" pos:end="93:65"><name pos:start="93:25" pos:end="93:39">tcg_get_arg_str</name><argument_list pos:start="93:40" pos:end="93:65">(<argument pos:start="93:41" pos:end="93:41"><expr pos:start="93:41" pos:end="93:41"><name pos:start="93:41" pos:end="93:41">s</name></expr></argument>, <argument pos:start="93:44" pos:end="93:46"><expr pos:start="93:44" pos:end="93:46"><name pos:start="93:44" pos:end="93:46">buf</name></expr></argument>, <argument pos:start="93:49" pos:end="93:59"><expr pos:start="93:49" pos:end="93:59"><sizeof pos:start="93:49" pos:end="93:59">sizeof<argument_list pos:start="93:55" pos:end="93:59">(<argument pos:start="93:56" pos:end="93:58"><expr pos:start="93:56" pos:end="93:58"><name pos:start="93:56" pos:end="93:58">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="93:62" pos:end="93:64"><expr pos:start="93:62" pos:end="93:64"><name pos:start="93:62" pos:end="93:64">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:42"><expr pos:start="97:17" pos:end="97:41"><name pos:start="97:17" pos:end="97:19">col</name> <operator pos:start="97:21" pos:end="97:22">+=</operator> <call pos:start="97:24" pos:end="97:41"><name pos:start="97:24" pos:end="97:31">qemu_log</name><argument_list pos:start="97:32" pos:end="97:41">(<argument pos:start="97:33" pos:end="97:37"><expr pos:start="97:33" pos:end="97:37"><literal type="string" pos:start="97:33" pos:end="97:37">",%s"</literal></expr></argument>, <argument pos:start="97:40" pos:end="97:40"><expr pos:start="97:40" pos:end="97:40"><name pos:start="97:40" pos:end="97:40">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="101:11" pos:end="259:9">else <block pos:start="101:16" pos:end="259:9">{<block_content pos:start="103:13" pos:end="257:13">

            <expr_stmt pos:start="103:13" pos:end="103:47"><expr pos:start="103:13" pos:end="103:46"><name pos:start="103:13" pos:end="103:15">col</name> <operator pos:start="103:17" pos:end="103:18">+=</operator> <call pos:start="103:20" pos:end="103:46"><name pos:start="103:20" pos:end="103:27">qemu_log</name><argument_list pos:start="103:28" pos:end="103:46">(<argument pos:start="103:29" pos:end="103:34"><expr pos:start="103:29" pos:end="103:34"><literal type="string" pos:start="103:29" pos:end="103:34">" %s "</literal></expr></argument>, <argument pos:start="103:37" pos:end="103:45"><expr pos:start="103:37" pos:end="103:45"><name pos:start="103:37" pos:end="103:45"><name pos:start="103:37" pos:end="103:39">def</name><operator pos:start="103:40" pos:end="103:41">-&gt;</operator><name pos:start="103:42" pos:end="103:45">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="107:13" pos:end="107:37"><expr pos:start="107:13" pos:end="107:36"><name pos:start="107:13" pos:end="107:20">nb_oargs</name> <operator pos:start="107:22" pos:end="107:22">=</operator> <name pos:start="107:24" pos:end="107:36"><name pos:start="107:24" pos:end="107:26">def</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:36">nb_oargs</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:37"><expr pos:start="109:13" pos:end="109:36"><name pos:start="109:13" pos:end="109:20">nb_iargs</name> <operator pos:start="109:22" pos:end="109:22">=</operator> <name pos:start="109:24" pos:end="109:36"><name pos:start="109:24" pos:end="109:26">def</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:36">nb_iargs</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:37"><expr pos:start="111:13" pos:end="111:36"><name pos:start="111:13" pos:end="111:20">nb_cargs</name> <operator pos:start="111:22" pos:end="111:22">=</operator> <name pos:start="111:24" pos:end="111:36"><name pos:start="111:24" pos:end="111:26">def</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:36">nb_cargs</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:18"><expr pos:start="115:13" pos:end="115:17"><name pos:start="115:13" pos:end="115:13">k</name> <operator pos:start="115:15" pos:end="115:15">=</operator> <literal type="number" pos:start="115:17" pos:end="115:17">0</literal></expr>;</expr_stmt>

            <for pos:start="117:13" pos:end="129:13">for <control pos:start="117:17" pos:end="117:42">(<init pos:start="117:18" pos:end="117:23"><expr pos:start="117:18" pos:end="117:22"><name pos:start="117:18" pos:end="117:18">i</name> <operator pos:start="117:20" pos:end="117:20">=</operator> <literal type="number" pos:start="117:22" pos:end="117:22">0</literal></expr>;</init> <condition pos:start="117:25" pos:end="117:37"><expr pos:start="117:25" pos:end="117:36"><name pos:start="117:25" pos:end="117:25">i</name> <operator pos:start="117:27" pos:end="117:27">&lt;</operator> <name pos:start="117:29" pos:end="117:36">nb_oargs</name></expr>;</condition> <incr pos:start="117:39" pos:end="117:41"><expr pos:start="117:39" pos:end="117:41"><name pos:start="117:39" pos:end="117:39">i</name><operator pos:start="117:40" pos:end="117:41">++</operator></expr></incr>)</control> <block pos:start="117:44" pos:end="129:13">{<block_content pos:start="119:17" pos:end="127:70">

                <if_stmt pos:start="119:17" pos:end="123:17"><if pos:start="119:17" pos:end="123:17">if <condition pos:start="119:20" pos:end="119:27">(<expr pos:start="119:21" pos:end="119:26"><name pos:start="119:21" pos:end="119:21">k</name> <operator pos:start="119:23" pos:end="119:24">!=</operator> <literal type="number" pos:start="119:26" pos:end="119:26">0</literal></expr>)</condition> <block pos:start="119:29" pos:end="123:17">{<block_content pos:start="121:21" pos:end="121:41">

                    <expr_stmt pos:start="121:21" pos:end="121:41"><expr pos:start="121:21" pos:end="121:40"><name pos:start="121:21" pos:end="121:23">col</name> <operator pos:start="121:25" pos:end="121:26">+=</operator> <call pos:start="121:28" pos:end="121:40"><name pos:start="121:28" pos:end="121:35">qemu_log</name><argument_list pos:start="121:36" pos:end="121:40">(<argument pos:start="121:37" pos:end="121:39"><expr pos:start="121:37" pos:end="121:39"><literal type="string" pos:start="121:37" pos:end="121:39">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="125:17" pos:end="127:70"><expr pos:start="125:17" pos:end="127:69"><name pos:start="125:17" pos:end="125:19">col</name> <operator pos:start="125:21" pos:end="125:22">+=</operator> <call pos:start="125:24" pos:end="127:69"><name pos:start="125:24" pos:end="125:31">qemu_log</name><argument_list pos:start="125:32" pos:end="127:69">(<argument pos:start="125:33" pos:end="125:36"><expr pos:start="125:33" pos:end="125:36"><literal type="string" pos:start="125:33" pos:end="125:36">"%s"</literal></expr></argument>, <argument pos:start="125:39" pos:end="127:68"><expr pos:start="125:39" pos:end="127:68"><call pos:start="125:39" pos:end="127:68"><name pos:start="125:39" pos:end="125:53">tcg_get_arg_str</name><argument_list pos:start="125:54" pos:end="127:68">(<argument pos:start="125:55" pos:end="125:55"><expr pos:start="125:55" pos:end="125:55"><name pos:start="125:55" pos:end="125:55">s</name></expr></argument>, <argument pos:start="125:58" pos:end="125:60"><expr pos:start="125:58" pos:end="125:60"><name pos:start="125:58" pos:end="125:60">buf</name></expr></argument>, <argument pos:start="125:63" pos:end="125:73"><expr pos:start="125:63" pos:end="125:73"><sizeof pos:start="125:63" pos:end="125:73">sizeof<argument_list pos:start="125:69" pos:end="125:73">(<argument pos:start="125:70" pos:end="125:72"><expr pos:start="125:70" pos:end="125:72"><name pos:start="125:70" pos:end="125:72">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                                      <argument pos:start="127:55" pos:end="127:67"><expr pos:start="127:55" pos:end="127:67"><name pos:start="127:55" pos:end="127:67"><name pos:start="127:55" pos:end="127:56">op</name><operator pos:start="127:57" pos:end="127:58">-&gt;</operator><name pos:start="127:59" pos:end="127:62">args</name><index pos:start="127:63" pos:end="127:67">[<expr pos:start="127:64" pos:end="127:66"><name pos:start="127:64" pos:end="127:64">k</name><operator pos:start="127:65" pos:end="127:66">++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="131:13" pos:end="143:13">for <control pos:start="131:17" pos:end="131:42">(<init pos:start="131:18" pos:end="131:23"><expr pos:start="131:18" pos:end="131:22"><name pos:start="131:18" pos:end="131:18">i</name> <operator pos:start="131:20" pos:end="131:20">=</operator> <literal type="number" pos:start="131:22" pos:end="131:22">0</literal></expr>;</init> <condition pos:start="131:25" pos:end="131:37"><expr pos:start="131:25" pos:end="131:36"><name pos:start="131:25" pos:end="131:25">i</name> <operator pos:start="131:27" pos:end="131:27">&lt;</operator> <name pos:start="131:29" pos:end="131:36">nb_iargs</name></expr>;</condition> <incr pos:start="131:39" pos:end="131:41"><expr pos:start="131:39" pos:end="131:41"><name pos:start="131:39" pos:end="131:39">i</name><operator pos:start="131:40" pos:end="131:41">++</operator></expr></incr>)</control> <block pos:start="131:44" pos:end="143:13">{<block_content pos:start="133:17" pos:end="141:70">

                <if_stmt pos:start="133:17" pos:end="137:17"><if pos:start="133:17" pos:end="137:17">if <condition pos:start="133:20" pos:end="133:27">(<expr pos:start="133:21" pos:end="133:26"><name pos:start="133:21" pos:end="133:21">k</name> <operator pos:start="133:23" pos:end="133:24">!=</operator> <literal type="number" pos:start="133:26" pos:end="133:26">0</literal></expr>)</condition> <block pos:start="133:29" pos:end="137:17">{<block_content pos:start="135:21" pos:end="135:41">

                    <expr_stmt pos:start="135:21" pos:end="135:41"><expr pos:start="135:21" pos:end="135:40"><name pos:start="135:21" pos:end="135:23">col</name> <operator pos:start="135:25" pos:end="135:26">+=</operator> <call pos:start="135:28" pos:end="135:40"><name pos:start="135:28" pos:end="135:35">qemu_log</name><argument_list pos:start="135:36" pos:end="135:40">(<argument pos:start="135:37" pos:end="135:39"><expr pos:start="135:37" pos:end="135:39"><literal type="string" pos:start="135:37" pos:end="135:39">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="139:17" pos:end="141:70"><expr pos:start="139:17" pos:end="141:69"><name pos:start="139:17" pos:end="139:19">col</name> <operator pos:start="139:21" pos:end="139:22">+=</operator> <call pos:start="139:24" pos:end="141:69"><name pos:start="139:24" pos:end="139:31">qemu_log</name><argument_list pos:start="139:32" pos:end="141:69">(<argument pos:start="139:33" pos:end="139:36"><expr pos:start="139:33" pos:end="139:36"><literal type="string" pos:start="139:33" pos:end="139:36">"%s"</literal></expr></argument>, <argument pos:start="139:39" pos:end="141:68"><expr pos:start="139:39" pos:end="141:68"><call pos:start="139:39" pos:end="141:68"><name pos:start="139:39" pos:end="139:53">tcg_get_arg_str</name><argument_list pos:start="139:54" pos:end="141:68">(<argument pos:start="139:55" pos:end="139:55"><expr pos:start="139:55" pos:end="139:55"><name pos:start="139:55" pos:end="139:55">s</name></expr></argument>, <argument pos:start="139:58" pos:end="139:60"><expr pos:start="139:58" pos:end="139:60"><name pos:start="139:58" pos:end="139:60">buf</name></expr></argument>, <argument pos:start="139:63" pos:end="139:73"><expr pos:start="139:63" pos:end="139:73"><sizeof pos:start="139:63" pos:end="139:73">sizeof<argument_list pos:start="139:69" pos:end="139:73">(<argument pos:start="139:70" pos:end="139:72"><expr pos:start="139:70" pos:end="139:72"><name pos:start="139:70" pos:end="139:72">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                                      <argument pos:start="141:55" pos:end="141:67"><expr pos:start="141:55" pos:end="141:67"><name pos:start="141:55" pos:end="141:67"><name pos:start="141:55" pos:end="141:56">op</name><operator pos:start="141:57" pos:end="141:58">-&gt;</operator><name pos:start="141:59" pos:end="141:62">args</name><index pos:start="141:63" pos:end="141:67">[<expr pos:start="141:64" pos:end="141:66"><name pos:start="141:64" pos:end="141:64">k</name><operator pos:start="141:65" pos:end="141:66">++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <switch pos:start="145:13" pos:end="225:13">switch <condition pos:start="145:20" pos:end="145:22">(<expr pos:start="145:21" pos:end="145:21"><name pos:start="145:21" pos:end="145:21">c</name></expr>)</condition> <block pos:start="145:24" pos:end="225:13">{<block_content pos:start="147:13" pos:end="223:22">

            <case pos:start="147:13" pos:end="147:37">case <expr pos:start="147:18" pos:end="147:36"><name pos:start="147:18" pos:end="147:36">INDEX_op_brcond_i32</name></expr>:</case>

            <case pos:start="149:13" pos:end="149:38">case <expr pos:start="149:18" pos:end="149:37"><name pos:start="149:18" pos:end="149:37">INDEX_op_setcond_i32</name></expr>:</case>

            <case pos:start="151:13" pos:end="151:38">case <expr pos:start="151:18" pos:end="151:37"><name pos:start="151:18" pos:end="151:37">INDEX_op_movcond_i32</name></expr>:</case>

            <case pos:start="153:13" pos:end="153:38">case <expr pos:start="153:18" pos:end="153:37"><name pos:start="153:18" pos:end="153:37">INDEX_op_brcond2_i32</name></expr>:</case>

            <case pos:start="155:13" pos:end="155:39">case <expr pos:start="155:18" pos:end="155:38"><name pos:start="155:18" pos:end="155:38">INDEX_op_setcond2_i32</name></expr>:</case>

            <case pos:start="157:13" pos:end="157:37">case <expr pos:start="157:18" pos:end="157:36"><name pos:start="157:18" pos:end="157:36">INDEX_op_brcond_i64</name></expr>:</case>

            <case pos:start="159:13" pos:end="159:38">case <expr pos:start="159:18" pos:end="159:37"><name pos:start="159:18" pos:end="159:37">INDEX_op_setcond_i64</name></expr>:</case>

            <case pos:start="161:13" pos:end="161:38">case <expr pos:start="161:18" pos:end="161:37"><name pos:start="161:18" pos:end="161:37">INDEX_op_movcond_i64</name></expr>:</case>

                <if_stmt pos:start="163:17" pos:end="173:17"><if pos:start="163:17" pos:end="169:17">if <condition pos:start="163:20" pos:end="165:46">(<expr pos:start="163:21" pos:end="165:45"><name pos:start="163:21" pos:end="163:31"><name pos:start="163:21" pos:end="163:22">op</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:28">args</name><index pos:start="163:29" pos:end="163:31">[<expr pos:start="163:30" pos:end="163:30"><name pos:start="163:30" pos:end="163:30">k</name></expr>]</index></name> <operator pos:start="163:33" pos:end="163:33">&lt;</operator> <call pos:start="163:35" pos:end="163:55"><name pos:start="163:35" pos:end="163:44">ARRAY_SIZE</name><argument_list pos:start="163:45" pos:end="163:55">(<argument pos:start="163:46" pos:end="163:54"><expr pos:start="163:46" pos:end="163:54"><name pos:start="163:46" pos:end="163:54">cond_name</name></expr></argument>)</argument_list></call>

                    <operator pos:start="165:21" pos:end="165:22">&amp;&amp;</operator> <name pos:start="165:24" pos:end="165:45"><name pos:start="165:24" pos:end="165:32">cond_name</name><index pos:start="165:33" pos:end="165:45">[<expr pos:start="165:34" pos:end="165:44"><name pos:start="165:34" pos:end="165:44"><name pos:start="165:34" pos:end="165:35">op</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:41">args</name><index pos:start="165:42" pos:end="165:44">[<expr pos:start="165:43" pos:end="165:43"><name pos:start="165:43" pos:end="165:43">k</name></expr>]</index></name></expr>]</index></name></expr>)</condition> <block pos:start="165:48" pos:end="169:17">{<block_content pos:start="167:21" pos:end="167:69">

                    <expr_stmt pos:start="167:21" pos:end="167:69"><expr pos:start="167:21" pos:end="167:68"><name pos:start="167:21" pos:end="167:23">col</name> <operator pos:start="167:25" pos:end="167:26">+=</operator> <call pos:start="167:28" pos:end="167:68"><name pos:start="167:28" pos:end="167:35">qemu_log</name><argument_list pos:start="167:36" pos:end="167:68">(<argument pos:start="167:37" pos:end="167:41"><expr pos:start="167:37" pos:end="167:41"><literal type="string" pos:start="167:37" pos:end="167:41">",%s"</literal></expr></argument>, <argument pos:start="167:44" pos:end="167:67"><expr pos:start="167:44" pos:end="167:67"><name pos:start="167:44" pos:end="167:67"><name pos:start="167:44" pos:end="167:52">cond_name</name><index pos:start="167:53" pos:end="167:67">[<expr pos:start="167:54" pos:end="167:66"><name pos:start="167:54" pos:end="167:66"><name pos:start="167:54" pos:end="167:55">op</name><operator pos:start="167:56" pos:end="167:57">-&gt;</operator><name pos:start="167:58" pos:end="167:61">args</name><index pos:start="167:62" pos:end="167:66">[<expr pos:start="167:63" pos:end="167:65"><name pos:start="167:63" pos:end="167:63">k</name><operator pos:start="167:64" pos:end="167:65">++</operator></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="169:19" pos:end="173:17">else <block pos:start="169:24" pos:end="173:17">{<block_content pos:start="171:21" pos:end="171:70">

                    <expr_stmt pos:start="171:21" pos:end="171:70"><expr pos:start="171:21" pos:end="171:69"><name pos:start="171:21" pos:end="171:23">col</name> <operator pos:start="171:25" pos:end="171:26">+=</operator> <call pos:start="171:28" pos:end="171:69"><name pos:start="171:28" pos:end="171:35">qemu_log</name><argument_list pos:start="171:36" pos:end="171:69">(<argument pos:start="171:37" pos:end="171:53"><expr pos:start="171:37" pos:end="171:53"><literal type="string" pos:start="171:37" pos:end="171:43">",$0x%"</literal> <name pos:start="171:45" pos:end="171:53">TCG_PRIlx</name></expr></argument>, <argument pos:start="171:56" pos:end="171:68"><expr pos:start="171:56" pos:end="171:68"><name pos:start="171:56" pos:end="171:68"><name pos:start="171:56" pos:end="171:57">op</name><operator pos:start="171:58" pos:end="171:59">-&gt;</operator><name pos:start="171:60" pos:end="171:63">args</name><index pos:start="171:64" pos:end="171:68">[<expr pos:start="171:65" pos:end="171:67"><name pos:start="171:65" pos:end="171:65">k</name><operator pos:start="171:66" pos:end="171:67">++</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:22"><expr pos:start="175:17" pos:end="175:21"><name pos:start="175:17" pos:end="175:17">i</name> <operator pos:start="175:19" pos:end="175:19">=</operator> <literal type="number" pos:start="175:21" pos:end="175:21">1</literal></expr>;</expr_stmt>

                <break pos:start="177:17" pos:end="177:22">break;</break>

            <case pos:start="179:13" pos:end="179:38">case <expr pos:start="179:18" pos:end="179:37"><name pos:start="179:18" pos:end="179:37">INDEX_op_qemu_ld_i32</name></expr>:</case>

            <case pos:start="181:13" pos:end="181:38">case <expr pos:start="181:18" pos:end="181:37"><name pos:start="181:18" pos:end="181:37">INDEX_op_qemu_st_i32</name></expr>:</case>

            <case pos:start="183:13" pos:end="183:38">case <expr pos:start="183:18" pos:end="183:37"><name pos:start="183:18" pos:end="183:37">INDEX_op_qemu_ld_i64</name></expr>:</case>

            <case pos:start="185:13" pos:end="185:38">case <expr pos:start="185:18" pos:end="185:37"><name pos:start="185:18" pos:end="185:37">INDEX_op_qemu_st_i64</name></expr>:</case>

                <block pos:start="187:17" pos:end="215:17">{<block_content pos:start="189:21" pos:end="213:26">

                    <decl_stmt pos:start="189:21" pos:end="189:51"><decl pos:start="189:21" pos:end="189:50"><type pos:start="189:21" pos:end="189:31"><name pos:start="189:21" pos:end="189:31">TCGMemOpIdx</name></type> <name pos:start="189:33" pos:end="189:34">oi</name> <init pos:start="189:36" pos:end="189:50">= <expr pos:start="189:38" pos:end="189:50"><name pos:start="189:38" pos:end="189:50"><name pos:start="189:38" pos:end="189:39">op</name><operator pos:start="189:40" pos:end="189:41">-&gt;</operator><name pos:start="189:42" pos:end="189:45">args</name><index pos:start="189:46" pos:end="189:50">[<expr pos:start="189:47" pos:end="189:49"><name pos:start="189:47" pos:end="189:47">k</name><operator pos:start="189:48" pos:end="189:49">++</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="191:21" pos:end="191:48"><decl pos:start="191:21" pos:end="191:47"><type pos:start="191:21" pos:end="191:28"><name pos:start="191:21" pos:end="191:28">TCGMemOp</name></type> <name pos:start="191:30" pos:end="191:31">op</name> <init pos:start="191:33" pos:end="191:47">= <expr pos:start="191:35" pos:end="191:47"><call pos:start="191:35" pos:end="191:47"><name pos:start="191:35" pos:end="191:43">get_memop</name><argument_list pos:start="191:44" pos:end="191:47">(<argument pos:start="191:45" pos:end="191:46"><expr pos:start="191:45" pos:end="191:46"><name pos:start="191:45" pos:end="191:46">oi</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="193:21" pos:end="193:49"><decl pos:start="193:21" pos:end="193:48"><type pos:start="193:21" pos:end="193:28"><name pos:start="193:21" pos:end="193:28">unsigned</name></type> <name pos:start="193:30" pos:end="193:31">ix</name> <init pos:start="193:33" pos:end="193:48">= <expr pos:start="193:35" pos:end="193:48"><call pos:start="193:35" pos:end="193:48"><name pos:start="193:35" pos:end="193:44">get_mmuidx</name><argument_list pos:start="193:45" pos:end="193:48">(<argument pos:start="193:46" pos:end="193:47"><expr pos:start="193:46" pos:end="193:47"><name pos:start="193:46" pos:end="193:47">oi</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="197:21" pos:end="211:21"><if pos:start="197:21" pos:end="201:21">if <condition pos:start="197:24" pos:end="197:63">(<expr pos:start="197:25" pos:end="197:62"><name pos:start="197:25" pos:end="197:26">op</name> <operator pos:start="197:28" pos:end="197:28">&amp;</operator> <operator pos:start="197:30" pos:end="197:30">~</operator><operator pos:start="197:31" pos:end="197:31">(</operator><name pos:start="197:32" pos:end="197:39">MO_AMASK</name> <operator pos:start="197:41" pos:end="197:41">|</operator> <name pos:start="197:43" pos:end="197:50">MO_BSWAP</name> <operator pos:start="197:52" pos:end="197:52">|</operator> <name pos:start="197:54" pos:end="197:61">MO_SSIZE</name><operator pos:start="197:62" pos:end="197:62">)</operator></expr>)</condition> <block pos:start="197:65" pos:end="201:21">{<block_content pos:start="199:25" pos:end="199:61">

                        <expr_stmt pos:start="199:25" pos:end="199:61"><expr pos:start="199:25" pos:end="199:60"><name pos:start="199:25" pos:end="199:27">col</name> <operator pos:start="199:29" pos:end="199:30">+=</operator> <call pos:start="199:32" pos:end="199:60"><name pos:start="199:32" pos:end="199:39">qemu_log</name><argument_list pos:start="199:40" pos:end="199:60">(<argument pos:start="199:41" pos:end="199:51"><expr pos:start="199:41" pos:end="199:51"><literal type="string" pos:start="199:41" pos:end="199:51">",$0x%x,%u"</literal></expr></argument>, <argument pos:start="199:54" pos:end="199:55"><expr pos:start="199:54" pos:end="199:55"><name pos:start="199:54" pos:end="199:55">op</name></expr></argument>, <argument pos:start="199:58" pos:end="199:59"><expr pos:start="199:58" pos:end="199:59"><name pos:start="199:58" pos:end="199:59">ix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="201:23" pos:end="211:21">else <block pos:start="201:28" pos:end="211:21">{<block_content pos:start="203:25" pos:end="209:68">

                        <decl_stmt pos:start="203:25" pos:end="203:48"><decl pos:start="203:25" pos:end="203:40"><type pos:start="203:25" pos:end="203:36"><specifier pos:start="203:25" pos:end="203:29">const</specifier> <name pos:start="203:31" pos:end="203:34">char</name> <modifier pos:start="203:36" pos:end="203:36">*</modifier></type><name pos:start="203:37" pos:end="203:40">s_al</name></decl>, <decl pos:start="203:43" pos:end="203:47"><type ref="prev" pos:start="203:25" pos:end="203:36"><modifier pos:start="203:43" pos:end="203:43">*</modifier></type><name pos:start="203:44" pos:end="203:47">s_op</name></decl>;</decl_stmt>

                        <expr_stmt pos:start="205:25" pos:end="205:76"><expr pos:start="205:25" pos:end="205:75"><name pos:start="205:25" pos:end="205:28">s_al</name> <operator pos:start="205:30" pos:end="205:30">=</operator> <name pos:start="205:32" pos:end="205:75"><name pos:start="205:32" pos:end="205:45">alignment_name</name><index pos:start="205:46" pos:end="205:75">[<expr pos:start="205:47" pos:end="205:74"><operator pos:start="205:47" pos:end="205:47">(</operator><name pos:start="205:48" pos:end="205:49">op</name> <operator pos:start="205:51" pos:end="205:51">&amp;</operator> <name pos:start="205:53" pos:end="205:60">MO_AMASK</name><operator pos:start="205:61" pos:end="205:61">)</operator> <operator pos:start="205:63" pos:end="205:64">&gt;&gt;</operator> <name pos:start="205:66" pos:end="205:74">MO_ASHIFT</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="207:25" pos:end="207:69"><expr pos:start="207:25" pos:end="207:68"><name pos:start="207:25" pos:end="207:28">s_op</name> <operator pos:start="207:30" pos:end="207:30">=</operator> <name pos:start="207:32" pos:end="207:68"><name pos:start="207:32" pos:end="207:40">ldst_name</name><index pos:start="207:41" pos:end="207:68">[<expr pos:start="207:42" pos:end="207:67"><name pos:start="207:42" pos:end="207:43">op</name> <operator pos:start="207:45" pos:end="207:45">&amp;</operator> <operator pos:start="207:47" pos:end="207:47">(</operator><name pos:start="207:48" pos:end="207:55">MO_BSWAP</name> <operator pos:start="207:57" pos:end="207:57">|</operator> <name pos:start="207:59" pos:end="207:66">MO_SSIZE</name><operator pos:start="207:67" pos:end="207:67">)</operator></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="209:25" pos:end="209:68"><expr pos:start="209:25" pos:end="209:67"><name pos:start="209:25" pos:end="209:27">col</name> <operator pos:start="209:29" pos:end="209:30">+=</operator> <call pos:start="209:32" pos:end="209:67"><name pos:start="209:32" pos:end="209:39">qemu_log</name><argument_list pos:start="209:40" pos:end="209:67">(<argument pos:start="209:41" pos:end="209:50"><expr pos:start="209:41" pos:end="209:50"><literal type="string" pos:start="209:41" pos:end="209:50">",%s%s,%u"</literal></expr></argument>, <argument pos:start="209:53" pos:end="209:56"><expr pos:start="209:53" pos:end="209:56"><name pos:start="209:53" pos:end="209:56">s_al</name></expr></argument>, <argument pos:start="209:59" pos:end="209:62"><expr pos:start="209:59" pos:end="209:62"><name pos:start="209:59" pos:end="209:62">s_op</name></expr></argument>, <argument pos:start="209:65" pos:end="209:66"><expr pos:start="209:65" pos:end="209:66"><name pos:start="209:65" pos:end="209:66">ix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="213:21" pos:end="213:26"><expr pos:start="213:21" pos:end="213:25"><name pos:start="213:21" pos:end="213:21">i</name> <operator pos:start="213:23" pos:end="213:23">=</operator> <literal type="number" pos:start="213:25" pos:end="213:25">1</literal></expr>;</expr_stmt>

                </block_content>}</block>

                <break pos:start="217:17" pos:end="217:22">break;</break>

            <default pos:start="219:13" pos:end="219:20">default:</default>

                <expr_stmt pos:start="221:17" pos:end="221:22"><expr pos:start="221:17" pos:end="221:21"><name pos:start="221:17" pos:end="221:17">i</name> <operator pos:start="221:19" pos:end="221:19">=</operator> <literal type="number" pos:start="221:21" pos:end="221:21">0</literal></expr>;</expr_stmt>

                <break pos:start="223:17" pos:end="223:22">break;</break>

            </block_content>}</block></switch>

            <switch pos:start="227:13" pos:end="251:13">switch <condition pos:start="227:20" pos:end="227:22">(<expr pos:start="227:21" pos:end="227:21"><name pos:start="227:21" pos:end="227:21">c</name></expr>)</condition> <block pos:start="227:24" pos:end="251:13">{<block_content pos:start="229:13" pos:end="249:22">

            <case pos:start="229:13" pos:end="229:36">case <expr pos:start="229:18" pos:end="229:35"><name pos:start="229:18" pos:end="229:35">INDEX_op_set_label</name></expr>:</case>

            <case pos:start="231:13" pos:end="231:29">case <expr pos:start="231:18" pos:end="231:28"><name pos:start="231:18" pos:end="231:28">INDEX_op_br</name></expr>:</case>

            <case pos:start="233:13" pos:end="233:37">case <expr pos:start="233:18" pos:end="233:36"><name pos:start="233:18" pos:end="233:36">INDEX_op_brcond_i32</name></expr>:</case>

            <case pos:start="235:13" pos:end="235:37">case <expr pos:start="235:18" pos:end="235:36"><name pos:start="235:18" pos:end="235:36">INDEX_op_brcond_i64</name></expr>:</case>

            <case pos:start="237:13" pos:end="237:38">case <expr pos:start="237:18" pos:end="237:37"><name pos:start="237:18" pos:end="237:37">INDEX_op_brcond2_i32</name></expr>:</case>

                <expr_stmt pos:start="239:17" pos:end="241:60"><expr pos:start="239:17" pos:end="241:59"><name pos:start="239:17" pos:end="239:19">col</name> <operator pos:start="239:21" pos:end="239:22">+=</operator> <call pos:start="239:24" pos:end="241:59"><name pos:start="239:24" pos:end="239:31">qemu_log</name><argument_list pos:start="239:32" pos:end="241:59">(<argument pos:start="239:33" pos:end="239:40"><expr pos:start="239:33" pos:end="239:40"><literal type="string" pos:start="239:33" pos:end="239:40">"%s$L%d"</literal></expr></argument>, <argument pos:start="239:43" pos:end="239:54"><expr pos:start="239:43" pos:end="239:54"><ternary pos:start="239:43" pos:end="239:54"><condition pos:start="239:43" pos:end="239:45"><expr pos:start="239:43" pos:end="239:43"><name pos:start="239:43" pos:end="239:43">k</name></expr> ?</condition><then pos:start="239:47" pos:end="239:49"> <expr pos:start="239:47" pos:end="239:49"><literal type="string" pos:start="239:47" pos:end="239:49">","</literal></expr> </then><else pos:start="239:51" pos:end="239:54">: <expr pos:start="239:53" pos:end="239:54"><literal type="string" pos:start="239:53" pos:end="239:54">""</literal></expr></else></ternary></expr></argument>,

                                <argument pos:start="241:33" pos:end="241:58"><expr pos:start="241:33" pos:end="241:58"><call pos:start="241:33" pos:end="241:54"><name pos:start="241:33" pos:end="241:41">arg_label</name><argument_list pos:start="241:42" pos:end="241:54">(<argument pos:start="241:43" pos:end="241:53"><expr pos:start="241:43" pos:end="241:53"><name pos:start="241:43" pos:end="241:53"><name pos:start="241:43" pos:end="241:44">op</name><operator pos:start="241:45" pos:end="241:46">-&gt;</operator><name pos:start="241:47" pos:end="241:50">args</name><index pos:start="241:51" pos:end="241:53">[<expr pos:start="241:52" pos:end="241:52"><name pos:start="241:52" pos:end="241:52">k</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="241:55" pos:end="241:56">-&gt;</operator><name pos:start="241:57" pos:end="241:58">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="243:17" pos:end="243:25"><expr pos:start="243:17" pos:end="243:19"><name pos:start="243:17" pos:end="243:17">i</name><operator pos:start="243:18" pos:end="243:19">++</operator></expr><operator pos:start="243:20" pos:end="243:20">,</operator> <expr pos:start="243:22" pos:end="243:24"><name pos:start="243:22" pos:end="243:22">k</name><operator pos:start="243:23" pos:end="243:24">++</operator></expr>;</expr_stmt>

                <break pos:start="245:17" pos:end="245:22">break;</break>

            <default pos:start="247:13" pos:end="247:20">default:</default>

                <break pos:start="249:17" pos:end="249:22">break;</break>

            </block_content>}</block></switch>

            <for pos:start="253:13" pos:end="257:13">for <control pos:start="253:17" pos:end="253:42">(<init pos:start="253:18" pos:end="253:18">;</init> <condition pos:start="253:20" pos:end="253:32"><expr pos:start="253:20" pos:end="253:31"><name pos:start="253:20" pos:end="253:20">i</name> <operator pos:start="253:22" pos:end="253:22">&lt;</operator> <name pos:start="253:24" pos:end="253:31">nb_cargs</name></expr>;</condition> <incr pos:start="253:34" pos:end="253:41"><expr pos:start="253:34" pos:end="253:36"><name pos:start="253:34" pos:end="253:34">i</name><operator pos:start="253:35" pos:end="253:36">++</operator></expr><operator pos:start="253:37" pos:end="253:37">,</operator> <expr pos:start="253:39" pos:end="253:41"><name pos:start="253:39" pos:end="253:39">k</name><operator pos:start="253:40" pos:end="253:41">++</operator></expr></incr>)</control> <block pos:start="253:44" pos:end="257:13">{<block_content pos:start="255:17" pos:end="255:79">

                <expr_stmt pos:start="255:17" pos:end="255:79"><expr pos:start="255:17" pos:end="255:78"><name pos:start="255:17" pos:end="255:19">col</name> <operator pos:start="255:21" pos:end="255:22">+=</operator> <call pos:start="255:24" pos:end="255:78"><name pos:start="255:24" pos:end="255:31">qemu_log</name><argument_list pos:start="255:32" pos:end="255:78">(<argument pos:start="255:33" pos:end="255:50"><expr pos:start="255:33" pos:end="255:50"><literal type="string" pos:start="255:33" pos:end="255:40">"%s$0x%"</literal> <name pos:start="255:42" pos:end="255:50">TCG_PRIlx</name></expr></argument>, <argument pos:start="255:53" pos:end="255:64"><expr pos:start="255:53" pos:end="255:64"><ternary pos:start="255:53" pos:end="255:64"><condition pos:start="255:53" pos:end="255:55"><expr pos:start="255:53" pos:end="255:53"><name pos:start="255:53" pos:end="255:53">k</name></expr> ?</condition><then pos:start="255:57" pos:end="255:59"> <expr pos:start="255:57" pos:end="255:59"><literal type="string" pos:start="255:57" pos:end="255:59">","</literal></expr> </then><else pos:start="255:61" pos:end="255:64">: <expr pos:start="255:63" pos:end="255:64"><literal type="string" pos:start="255:63" pos:end="255:64">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="255:67" pos:end="255:77"><expr pos:start="255:67" pos:end="255:77"><name pos:start="255:67" pos:end="255:77"><name pos:start="255:67" pos:end="255:68">op</name><operator pos:start="255:69" pos:end="255:70">-&gt;</operator><name pos:start="255:71" pos:end="255:74">args</name><index pos:start="255:75" pos:end="255:77">[<expr pos:start="255:76" pos:end="255:76"><name pos:start="255:76" pos:end="255:76">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="261:9" pos:end="309:9"><if pos:start="261:9" pos:end="309:9">if <condition pos:start="261:12" pos:end="261:21">(<expr pos:start="261:13" pos:end="261:20"><name pos:start="261:13" pos:end="261:20"><name pos:start="261:13" pos:end="261:14">op</name><operator pos:start="261:15" pos:end="261:16">-&gt;</operator><name pos:start="261:17" pos:end="261:20">life</name></name></expr>)</condition> <block pos:start="261:23" pos:end="309:9">{<block_content pos:start="263:13" pos:end="307:13">

            <decl_stmt pos:start="263:13" pos:end="263:37"><decl pos:start="263:13" pos:end="263:36"><type pos:start="263:13" pos:end="263:20"><name pos:start="263:13" pos:end="263:20">unsigned</name></type> <name pos:start="263:22" pos:end="263:25">life</name> <init pos:start="263:27" pos:end="263:36">= <expr pos:start="263:29" pos:end="263:36"><name pos:start="263:29" pos:end="263:36"><name pos:start="263:29" pos:end="263:30">op</name><operator pos:start="263:31" pos:end="263:32">-&gt;</operator><name pos:start="263:33" pos:end="263:36">life</name></name></expr></init></decl>;</decl_stmt>



            <for pos:start="267:13" pos:end="271:13">for <control pos:start="267:17" pos:end="267:35">(<init pos:start="267:18" pos:end="267:18">;</init> <condition pos:start="267:20" pos:end="267:28"><expr pos:start="267:20" pos:end="267:27"><name pos:start="267:20" pos:end="267:22">col</name> <operator pos:start="267:24" pos:end="267:24">&lt;</operator> <literal type="number" pos:start="267:26" pos:end="267:27">48</literal></expr>;</condition> <incr pos:start="267:30" pos:end="267:34"><expr pos:start="267:30" pos:end="267:34"><operator pos:start="267:30" pos:end="267:31">++</operator><name pos:start="267:32" pos:end="267:34">col</name></expr></incr>)</control> <block pos:start="267:37" pos:end="271:13">{<block_content pos:start="269:17" pos:end="269:40">

                <expr_stmt pos:start="269:17" pos:end="269:40"><expr pos:start="269:17" pos:end="269:39"><call pos:start="269:17" pos:end="269:39"><name pos:start="269:17" pos:end="269:20">putc</name><argument_list pos:start="269:21" pos:end="269:39">(<argument pos:start="269:22" pos:end="269:24"><expr pos:start="269:22" pos:end="269:24"><literal type="char" pos:start="269:22" pos:end="269:24">' '</literal></expr></argument>, <argument pos:start="269:27" pos:end="269:38"><expr pos:start="269:27" pos:end="269:38"><name pos:start="269:27" pos:end="269:38">qemu_logfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>



            <if_stmt pos:start="275:13" pos:end="289:13"><if pos:start="275:13" pos:end="289:13">if <condition pos:start="275:16" pos:end="275:38">(<expr pos:start="275:17" pos:end="275:37"><name pos:start="275:17" pos:end="275:20">life</name> <operator pos:start="275:22" pos:end="275:22">&amp;</operator> <operator pos:start="275:24" pos:end="275:24">(</operator><name pos:start="275:25" pos:end="275:32">SYNC_ARG</name> <operator pos:start="275:34" pos:end="275:34">*</operator> <literal type="number" pos:start="275:36" pos:end="275:36">3</literal><operator pos:start="275:37" pos:end="275:37">)</operator></expr>)</condition> <block pos:start="275:40" pos:end="289:13">{<block_content pos:start="277:17" pos:end="287:17">

                <expr_stmt pos:start="277:17" pos:end="277:36"><expr pos:start="277:17" pos:end="277:35"><call pos:start="277:17" pos:end="277:35"><name pos:start="277:17" pos:end="277:24">qemu_log</name><argument_list pos:start="277:25" pos:end="277:35">(<argument pos:start="277:26" pos:end="277:34"><expr pos:start="277:26" pos:end="277:34"><literal type="string" pos:start="277:26" pos:end="277:34">"  sync:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="279:17" pos:end="287:17">for <control pos:start="279:21" pos:end="279:39">(<init pos:start="279:22" pos:end="279:27"><expr pos:start="279:22" pos:end="279:26"><name pos:start="279:22" pos:end="279:22">i</name> <operator pos:start="279:24" pos:end="279:24">=</operator> <literal type="number" pos:start="279:26" pos:end="279:26">0</literal></expr>;</init> <condition pos:start="279:29" pos:end="279:34"><expr pos:start="279:29" pos:end="279:33"><name pos:start="279:29" pos:end="279:29">i</name> <operator pos:start="279:31" pos:end="279:31">&lt;</operator> <literal type="number" pos:start="279:33" pos:end="279:33">2</literal></expr>;</condition> <incr pos:start="279:36" pos:end="279:38"><expr pos:start="279:36" pos:end="279:38"><operator pos:start="279:36" pos:end="279:37">++</operator><name pos:start="279:38" pos:end="279:38">i</name></expr></incr>)</control> <block pos:start="279:41" pos:end="287:17">{<block_content pos:start="281:21" pos:end="285:21">

                    <if_stmt pos:start="281:21" pos:end="285:21"><if pos:start="281:21" pos:end="285:21">if <condition pos:start="281:24" pos:end="281:47">(<expr pos:start="281:25" pos:end="281:46"><name pos:start="281:25" pos:end="281:28">life</name> <operator pos:start="281:30" pos:end="281:30">&amp;</operator> <operator pos:start="281:32" pos:end="281:32">(</operator><name pos:start="281:33" pos:end="281:40">SYNC_ARG</name> <operator pos:start="281:42" pos:end="281:43">&lt;&lt;</operator> <name pos:start="281:45" pos:end="281:45">i</name><operator pos:start="281:46" pos:end="281:46">)</operator></expr>)</condition> <block pos:start="281:49" pos:end="285:21">{<block_content pos:start="283:25" pos:end="283:43">

                        <expr_stmt pos:start="283:25" pos:end="283:43"><expr pos:start="283:25" pos:end="283:42"><call pos:start="283:25" pos:end="283:42"><name pos:start="283:25" pos:end="283:32">qemu_log</name><argument_list pos:start="283:33" pos:end="283:42">(<argument pos:start="283:34" pos:end="283:38"><expr pos:start="283:34" pos:end="283:38"><literal type="string" pos:start="283:34" pos:end="283:38">" %d"</literal></expr></argument>, <argument pos:start="283:41" pos:end="283:41"><expr pos:start="283:41" pos:end="283:41"><name pos:start="283:41" pos:end="283:41">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:29"><expr pos:start="291:13" pos:end="291:28"><name pos:start="291:13" pos:end="291:16">life</name> <operator pos:start="291:18" pos:end="291:19">/=</operator> <name pos:start="291:21" pos:end="291:28">DEAD_ARG</name></expr>;</expr_stmt>

            <if_stmt pos:start="293:13" pos:end="307:13"><if pos:start="293:13" pos:end="307:13">if <condition pos:start="293:16" pos:end="293:21">(<expr pos:start="293:17" pos:end="293:20"><name pos:start="293:17" pos:end="293:20">life</name></expr>)</condition> <block pos:start="293:23" pos:end="307:13">{<block_content pos:start="295:17" pos:end="305:17">

                <expr_stmt pos:start="295:17" pos:end="295:36"><expr pos:start="295:17" pos:end="295:35"><call pos:start="295:17" pos:end="295:35"><name pos:start="295:17" pos:end="295:24">qemu_log</name><argument_list pos:start="295:25" pos:end="295:35">(<argument pos:start="295:26" pos:end="295:34"><expr pos:start="295:26" pos:end="295:34"><literal type="string" pos:start="295:26" pos:end="295:34">"  dead:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="297:17" pos:end="305:17">for <control pos:start="297:21" pos:end="297:50">(<init pos:start="297:22" pos:end="297:27"><expr pos:start="297:22" pos:end="297:26"><name pos:start="297:22" pos:end="297:22">i</name> <operator pos:start="297:24" pos:end="297:24">=</operator> <literal type="number" pos:start="297:26" pos:end="297:26">0</literal></expr>;</init> <condition pos:start="297:29" pos:end="297:33"><expr pos:start="297:29" pos:end="297:32"><name pos:start="297:29" pos:end="297:32">life</name></expr>;</condition> <incr pos:start="297:35" pos:end="297:49"><expr pos:start="297:35" pos:end="297:37"><operator pos:start="297:35" pos:end="297:36">++</operator><name pos:start="297:37" pos:end="297:37">i</name></expr><operator pos:start="297:38" pos:end="297:38">,</operator> <expr pos:start="297:40" pos:end="297:49"><name pos:start="297:40" pos:end="297:43">life</name> <operator pos:start="297:45" pos:end="297:47">&gt;&gt;=</operator> <literal type="number" pos:start="297:49" pos:end="297:49">1</literal></expr></incr>)</control> <block pos:start="297:52" pos:end="305:17">{<block_content pos:start="299:21" pos:end="303:21">

                    <if_stmt pos:start="299:21" pos:end="303:21"><if pos:start="299:21" pos:end="303:21">if <condition pos:start="299:24" pos:end="299:33">(<expr pos:start="299:25" pos:end="299:32"><name pos:start="299:25" pos:end="299:28">life</name> <operator pos:start="299:30" pos:end="299:30">&amp;</operator> <literal type="number" pos:start="299:32" pos:end="299:32">1</literal></expr>)</condition> <block pos:start="299:35" pos:end="303:21">{<block_content pos:start="301:25" pos:end="301:43">

                        <expr_stmt pos:start="301:25" pos:end="301:43"><expr pos:start="301:25" pos:end="301:42"><call pos:start="301:25" pos:end="301:42"><name pos:start="301:25" pos:end="301:32">qemu_log</name><argument_list pos:start="301:33" pos:end="301:42">(<argument pos:start="301:34" pos:end="301:38"><expr pos:start="301:34" pos:end="301:38"><literal type="string" pos:start="301:34" pos:end="301:38">" %d"</literal></expr></argument>, <argument pos:start="301:41" pos:end="301:41"><expr pos:start="301:41" pos:end="301:41"><name pos:start="301:41" pos:end="301:41">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:23"><expr pos:start="311:9" pos:end="311:22"><call pos:start="311:9" pos:end="311:22"><name pos:start="311:9" pos:end="311:16">qemu_log</name><argument_list pos:start="311:17" pos:end="311:22">(<argument pos:start="311:18" pos:end="311:21"><expr pos:start="311:18" pos:end="311:21"><literal type="string" pos:start="311:18" pos:end="311:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
