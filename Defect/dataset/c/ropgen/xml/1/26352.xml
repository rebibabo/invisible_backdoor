<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26352.c" pos:tabs="8"><function pos:start="1:1" pos:end="168:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">matroska_parse_frame</name><parameter_list pos:start="1:32" pos:end="9:61">(<parameter pos:start="1:33" pos:end="1:62"><decl pos:start="1:33" pos:end="1:62"><type pos:start="1:33" pos:end="1:62"><name pos:start="1:33" pos:end="1:52">MatroskaDemuxContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:62">matroska</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:52"><decl pos:start="3:33" pos:end="3:52"><type pos:start="3:33" pos:end="3:52"><name pos:start="3:33" pos:end="3:45">MatroskaTrack</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:52">track</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:66"><decl pos:start="3:55" pos:end="3:66"><type pos:start="3:55" pos:end="3:66"><name pos:start="3:55" pos:end="3:62">AVStream</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:66">st</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:45"><decl pos:start="5:33" pos:end="5:45"><type pos:start="5:33" pos:end="5:45"><name pos:start="5:33" pos:end="5:39">uint8_t</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:45">data</name></decl></parameter>, <parameter pos:start="5:48" pos:end="5:59"><decl pos:start="5:48" pos:end="5:59"><type pos:start="5:48" pos:end="5:59"><name pos:start="5:48" pos:end="5:50">int</name></type> <name pos:start="5:52" pos:end="5:59">pkt_size</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:49"><decl pos:start="7:33" pos:end="7:49"><type pos:start="7:33" pos:end="7:49"><name pos:start="7:33" pos:end="7:40">uint64_t</name></type> <name pos:start="7:42" pos:end="7:49">timecode</name></decl></parameter>, <parameter pos:start="7:52" pos:end="7:68"><decl pos:start="7:52" pos:end="7:68"><type pos:start="7:52" pos:end="7:68"><name pos:start="7:52" pos:end="7:59">uint64_t</name></type> <name pos:start="7:61" pos:end="7:68">duration</name></decl></parameter>,

                                <parameter pos:start="9:33" pos:end="9:43"><decl pos:start="9:33" pos:end="9:43"><type pos:start="9:33" pos:end="9:43"><name pos:start="9:33" pos:end="9:39">int64_t</name></type> <name pos:start="9:41" pos:end="9:43">pos</name></decl></parameter>, <parameter pos:start="9:46" pos:end="9:60"><decl pos:start="9:46" pos:end="9:60"><type pos:start="9:46" pos:end="9:60"><name pos:start="9:46" pos:end="9:48">int</name></type> <name pos:start="9:50" pos:end="9:60">is_keyframe</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="168:1">{<block_content pos:start="13:5" pos:end="166:15">

    <decl_stmt pos:start="13:5" pos:end="13:61"><decl pos:start="13:5" pos:end="13:60"><type pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:25">MatroskaTrackEncoding</name> <modifier pos:start="13:27" pos:end="13:27">*</modifier></type><name pos:start="13:28" pos:end="13:36">encodings</name> <init pos:start="13:38" pos:end="13:60">= <expr pos:start="13:40" pos:end="13:60"><name pos:start="13:40" pos:end="13:60"><name pos:start="13:40" pos:end="13:44">track</name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:55">encodings</name><operator pos:start="13:56" pos:end="13:56">.</operator><name pos:start="13:57" pos:end="13:60">elem</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:21">pkt_data</name> <init pos:start="15:23" pos:end="15:28">= <expr pos:start="15:25" pos:end="15:28"><name pos:start="15:25" pos:end="15:28">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">offset</name> <init pos:start="17:16" pos:end="17:18">= <expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr></init></decl>, <decl pos:start="17:21" pos:end="17:23"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:21" pos:end="17:23">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">AVPacket</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:17">pkt</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:42">(<expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:17">encodings</name> <operator pos:start="23:19" pos:end="23:20">&amp;&amp;</operator> <name pos:start="23:22" pos:end="23:37"><name pos:start="23:22" pos:end="23:30">encodings</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:37">scope</name></name> <operator pos:start="23:39" pos:end="23:39">&amp;</operator> <literal type="number" pos:start="23:41" pos:end="23:41">1</literal></expr>)</condition> <block pos:start="23:44" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:23">

        <expr_stmt pos:start="25:9" pos:end="25:66"><expr pos:start="25:9" pos:end="25:65"><name pos:start="25:9" pos:end="25:11">res</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:65"><name pos:start="25:15" pos:end="25:36">matroska_decode_buffer</name><argument_list pos:start="25:37" pos:end="25:65">(<argument pos:start="25:38" pos:end="25:46"><expr pos:start="25:38" pos:end="25:46"><operator pos:start="25:38" pos:end="25:38">&amp;</operator><name pos:start="25:39" pos:end="25:46">pkt_data</name></expr></argument>, <argument pos:start="25:49" pos:end="25:57"><expr pos:start="25:49" pos:end="25:57"><operator pos:start="25:49" pos:end="25:49">&amp;</operator><name pos:start="25:50" pos:end="25:57">pkt_size</name></expr></argument>, <argument pos:start="25:60" pos:end="25:64"><expr pos:start="25:60" pos:end="25:64"><name pos:start="25:60" pos:end="25:64">track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:23"><if pos:start="27:9" pos:end="29:23">if <condition pos:start="27:12" pos:end="27:20">(<expr pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:15">res</name> <operator pos:start="27:17" pos:end="27:17">&lt;</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:23"><block_content pos:start="29:13" pos:end="29:23">

            <return pos:start="29:13" pos:end="29:23">return <expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">res</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="56:5"><if pos:start="35:5" pos:end="56:5">if <condition pos:start="35:8" pos:end="35:51">(<expr pos:start="35:9" pos:end="35:50"><name pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:10">st</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:17">codec</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:27">codec_id</name></name> <operator pos:start="35:29" pos:end="35:30">==</operator> <name pos:start="35:32" pos:end="35:50">AV_CODEC_ID_WAVPACK</name></expr>)</condition> <block pos:start="35:53" pos:end="56:5">{<block_content pos:start="37:9" pos:end="54:27">

        <decl_stmt pos:start="37:9" pos:end="37:25"><decl pos:start="37:9" pos:end="37:24"><type pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:15">uint8_t</name> <modifier pos:start="37:17" pos:end="37:17">*</modifier></type><name pos:start="37:18" pos:end="37:24">wv_data</name></decl>;</decl_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:75"><expr pos:start="39:9" pos:end="39:74"><name pos:start="39:9" pos:end="39:11">res</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:74"><name pos:start="39:15" pos:end="39:36">matroska_parse_wavpack</name><argument_list pos:start="39:37" pos:end="39:74">(<argument pos:start="39:38" pos:end="39:42"><expr pos:start="39:38" pos:end="39:42"><name pos:start="39:38" pos:end="39:42">track</name></expr></argument>, <argument pos:start="39:45" pos:end="39:52"><expr pos:start="39:45" pos:end="39:52"><name pos:start="39:45" pos:end="39:52">pkt_data</name></expr></argument>, <argument pos:start="39:55" pos:end="39:62"><expr pos:start="39:55" pos:end="39:62"><operator pos:start="39:55" pos:end="39:55">&amp;</operator><name pos:start="39:56" pos:end="39:62">wv_data</name></expr></argument>, <argument pos:start="39:65" pos:end="39:73"><expr pos:start="39:65" pos:end="39:73"><operator pos:start="39:65" pos:end="39:65">&amp;</operator><name pos:start="39:66" pos:end="39:73">pkt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="49:9"><if pos:start="41:9" pos:end="49:9">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:15">res</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition> <block pos:start="41:22" pos:end="49:9">{<block_content pos:start="43:13" pos:end="47:22">

            <expr_stmt pos:start="43:13" pos:end="45:55"><expr pos:start="43:13" pos:end="45:54"><call pos:start="43:13" pos:end="45:54"><name pos:start="43:13" pos:end="43:18">av_log</name><argument_list pos:start="43:19" pos:end="45:54">(<argument pos:start="43:20" pos:end="43:32"><expr pos:start="43:20" pos:end="43:32"><name pos:start="43:20" pos:end="43:32"><name pos:start="43:20" pos:end="43:27">matroska</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:32">ctx</name></name></expr></argument>, <argument pos:start="43:35" pos:end="43:46"><expr pos:start="43:35" pos:end="43:46"><name pos:start="43:35" pos:end="43:46">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="45:20" pos:end="45:53"><expr pos:start="45:20" pos:end="45:53"><literal type="string" pos:start="45:20" pos:end="45:53">"Error parsing a wavpack block.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="47:13" pos:end="47:22">goto <name pos:start="47:18" pos:end="47:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="51:9" pos:end="54:27"><if pos:start="51:9" pos:end="54:27">if <condition pos:start="51:12" pos:end="51:29">(<expr pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:20">pkt_data</name> <operator pos:start="51:22" pos:end="51:23">!=</operator> <name pos:start="51:25" pos:end="51:28">data</name></expr>)</condition><block type="pseudo" pos:start="54:9" pos:end="54:27"><block_content pos:start="54:9" pos:end="54:27">


        <expr_stmt pos:start="54:9" pos:end="54:27"><expr pos:start="54:9" pos:end="54:26"><name pos:start="54:9" pos:end="54:16">pkt_data</name> <operator pos:start="54:18" pos:end="54:18">=</operator> <name pos:start="54:20" pos:end="54:26">wv_data</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="60:5" pos:end="62:19"><if pos:start="60:5" pos:end="62:19">if <condition pos:start="60:8" pos:end="60:50">(<expr pos:start="60:9" pos:end="60:49"><name pos:start="60:9" pos:end="60:27"><name pos:start="60:9" pos:end="60:10">st</name><operator pos:start="60:11" pos:end="60:12">-&gt;</operator><name pos:start="60:13" pos:end="60:17">codec</name><operator pos:start="60:18" pos:end="60:19">-&gt;</operator><name pos:start="60:20" pos:end="60:27">codec_id</name></name> <operator pos:start="60:29" pos:end="60:30">==</operator> <name pos:start="60:32" pos:end="60:49">AV_CODEC_ID_PRORES</name></expr>)</condition><block type="pseudo" pos:start="62:9" pos:end="62:19"><block_content pos:start="62:9" pos:end="62:19">

        <expr_stmt pos:start="62:9" pos:end="62:19"><expr pos:start="62:9" pos:end="62:18"><name pos:start="62:9" pos:end="62:14">offset</name> <operator pos:start="62:16" pos:end="62:16">=</operator> <literal type="number" pos:start="62:18" pos:end="62:18">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="66:5" pos:end="66:39"><expr pos:start="66:5" pos:end="66:38"><name pos:start="66:5" pos:end="66:7">pkt</name> <operator pos:start="66:9" pos:end="66:9">=</operator> <call pos:start="66:11" pos:end="66:38"><name pos:start="66:11" pos:end="66:20">av_mallocz</name><argument_list pos:start="66:21" pos:end="66:38">(<argument pos:start="66:22" pos:end="66:37"><expr pos:start="66:22" pos:end="66:37"><sizeof pos:start="66:22" pos:end="66:37">sizeof<argument_list pos:start="66:28" pos:end="66:37">(<argument pos:start="66:29" pos:end="66:36"><expr pos:start="66:29" pos:end="66:36"><name pos:start="66:29" pos:end="66:36">AVPacket</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="68:5" pos:end="68:35">/* XXX: prevent data copy... */</comment>

    <if_stmt pos:start="70:5" pos:end="77:5"><if pos:start="70:5" pos:end="77:5">if <condition pos:start="70:8" pos:end="70:50">(<expr pos:start="70:9" pos:end="70:49"><call pos:start="70:9" pos:end="70:45"><name pos:start="70:9" pos:end="70:21">av_new_packet</name><argument_list pos:start="70:22" pos:end="70:45">(<argument pos:start="70:23" pos:end="70:25"><expr pos:start="70:23" pos:end="70:25"><name pos:start="70:23" pos:end="70:25">pkt</name></expr></argument>, <argument pos:start="70:28" pos:end="70:44"><expr pos:start="70:28" pos:end="70:44"><name pos:start="70:28" pos:end="70:35">pkt_size</name> <operator pos:start="70:37" pos:end="70:37">+</operator> <name pos:start="70:39" pos:end="70:44">offset</name></expr></argument>)</argument_list></call> <operator pos:start="70:47" pos:end="70:47">&lt;</operator> <literal type="number" pos:start="70:49" pos:end="70:49">0</literal></expr>)</condition> <block pos:start="70:52" pos:end="77:5">{<block_content pos:start="72:9" pos:end="75:31">

        <expr_stmt pos:start="72:9" pos:end="72:21"><expr pos:start="72:9" pos:end="72:20"><call pos:start="72:9" pos:end="72:20"><name pos:start="72:9" pos:end="72:15">av_free</name><argument_list pos:start="72:16" pos:end="72:20">(<argument pos:start="72:17" pos:end="72:19"><expr pos:start="72:17" pos:end="72:19"><name pos:start="72:17" pos:end="72:19">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <return pos:start="75:9" pos:end="75:31">return <expr pos:start="75:16" pos:end="75:30"><call pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:22">AVERROR</name><argument_list pos:start="75:23" pos:end="75:30">(<argument pos:start="75:24" pos:end="75:29"><expr pos:start="75:24" pos:end="75:29"><name pos:start="75:24" pos:end="75:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="89:5"><if pos:start="81:5" pos:end="89:5">if <condition pos:start="81:8" pos:end="81:50">(<expr pos:start="81:9" pos:end="81:49"><name pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:10">st</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:17">codec</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:27">codec_id</name></name> <operator pos:start="81:29" pos:end="81:30">==</operator> <name pos:start="81:32" pos:end="81:49">AV_CODEC_ID_PRORES</name></expr>)</condition> <block pos:start="81:52" pos:end="89:5">{<block_content pos:start="83:9" pos:end="87:63">

        <decl_stmt pos:start="83:9" pos:end="83:33"><decl pos:start="83:9" pos:end="83:32"><type pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:15">uint8_t</name> <modifier pos:start="83:17" pos:end="83:17">*</modifier></type><name pos:start="83:18" pos:end="83:20">buf</name> <init pos:start="83:22" pos:end="83:32">= <expr pos:start="83:24" pos:end="83:32"><name pos:start="83:24" pos:end="83:32"><name pos:start="83:24" pos:end="83:26">pkt</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:32">data</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:44"><expr pos:start="85:9" pos:end="85:43"><call pos:start="85:9" pos:end="85:43"><name pos:start="85:9" pos:end="85:27">bytestream_put_be32</name><argument_list pos:start="85:28" pos:end="85:43">(<argument pos:start="85:29" pos:end="85:32"><expr pos:start="85:29" pos:end="85:32"><operator pos:start="85:29" pos:end="85:29">&amp;</operator><name pos:start="85:30" pos:end="85:32">buf</name></expr></argument>, <argument pos:start="85:35" pos:end="85:42"><expr pos:start="85:35" pos:end="85:42"><name pos:start="85:35" pos:end="85:42">pkt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:63"><expr pos:start="87:9" pos:end="87:62"><call pos:start="87:9" pos:end="87:62"><name pos:start="87:9" pos:end="87:27">bytestream_put_be32</name><argument_list pos:start="87:28" pos:end="87:62">(<argument pos:start="87:29" pos:end="87:32"><expr pos:start="87:29" pos:end="87:32"><operator pos:start="87:29" pos:end="87:29">&amp;</operator><name pos:start="87:30" pos:end="87:32">buf</name></expr></argument>, <argument pos:start="87:35" pos:end="87:61"><expr pos:start="87:35" pos:end="87:61"><call pos:start="87:35" pos:end="87:61"><name pos:start="87:35" pos:end="87:41">MKBETAG</name><argument_list pos:start="87:42" pos:end="87:61">(<argument pos:start="87:43" pos:end="87:45"><expr pos:start="87:43" pos:end="87:45"><literal type="char" pos:start="87:43" pos:end="87:45">'i'</literal></expr></argument>, <argument pos:start="87:48" pos:end="87:50"><expr pos:start="87:48" pos:end="87:50"><literal type="char" pos:start="87:48" pos:end="87:50">'c'</literal></expr></argument>, <argument pos:start="87:53" pos:end="87:55"><expr pos:start="87:53" pos:end="87:55"><literal type="char" pos:start="87:53" pos:end="87:55">'p'</literal></expr></argument>, <argument pos:start="87:58" pos:end="87:60"><expr pos:start="87:58" pos:end="87:60"><literal type="char" pos:start="87:58" pos:end="87:60">'f'</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:51"><expr pos:start="93:5" pos:end="93:50"><call pos:start="93:5" pos:end="93:50"><name pos:start="93:5" pos:end="93:10">memcpy</name><argument_list pos:start="93:11" pos:end="93:50">(<argument pos:start="93:12" pos:end="93:29"><expr pos:start="93:12" pos:end="93:29"><name pos:start="93:12" pos:end="93:20"><name pos:start="93:12" pos:end="93:14">pkt</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:20">data</name></name> <operator pos:start="93:22" pos:end="93:22">+</operator> <name pos:start="93:24" pos:end="93:29">offset</name></expr></argument>, <argument pos:start="93:32" pos:end="93:39"><expr pos:start="93:32" pos:end="93:39"><name pos:start="93:32" pos:end="93:39">pkt_data</name></expr></argument>, <argument pos:start="93:42" pos:end="93:49"><expr pos:start="93:42" pos:end="93:49"><name pos:start="93:42" pos:end="93:49">pkt_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="97:5" pos:end="99:26"><if pos:start="97:5" pos:end="99:26">if <condition pos:start="97:8" pos:end="97:25">(<expr pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:16">pkt_data</name> <operator pos:start="97:18" pos:end="97:19">!=</operator> <name pos:start="97:21" pos:end="97:24">data</name></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:26"><block_content pos:start="99:9" pos:end="99:26">

        <expr_stmt pos:start="99:9" pos:end="99:26"><expr pos:start="99:9" pos:end="99:25"><call pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:15">av_free</name><argument_list pos:start="99:16" pos:end="99:25">(<argument pos:start="99:17" pos:end="99:24"><expr pos:start="99:17" pos:end="99:24"><name pos:start="99:17" pos:end="99:24">pkt_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:36"><expr pos:start="103:5" pos:end="103:35"><name pos:start="103:5" pos:end="103:14"><name pos:start="103:5" pos:end="103:7">pkt</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:14">flags</name></name>        <operator pos:start="103:23" pos:end="103:23">=</operator> <name pos:start="103:25" pos:end="103:35">is_keyframe</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:34"><expr pos:start="105:5" pos:end="105:33"><name pos:start="105:5" pos:end="105:21"><name pos:start="105:5" pos:end="105:7">pkt</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:21">stream_index</name></name> <operator pos:start="105:23" pos:end="105:23">=</operator> <name pos:start="105:25" pos:end="105:33"><name pos:start="105:25" pos:end="105:26">st</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:33">index</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="115:28"><if pos:start="109:5" pos:end="111:28">if <condition pos:start="109:8" pos:end="109:25">(<expr pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:13">track</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:24">ms_compat</name></name></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:28"><block_content pos:start="111:9" pos:end="111:28">

        <expr_stmt pos:start="111:9" pos:end="111:28"><expr pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:16"><name pos:start="111:9" pos:end="111:11">pkt</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:16">dts</name></name> <operator pos:start="111:18" pos:end="111:18">=</operator> <name pos:start="111:20" pos:end="111:27">timecode</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="113:5" pos:end="115:28">else<block type="pseudo" pos:start="115:9" pos:end="115:28"><block_content pos:start="115:9" pos:end="115:28">

        <expr_stmt pos:start="115:9" pos:end="115:28"><expr pos:start="115:9" pos:end="115:27"><name pos:start="115:9" pos:end="115:16"><name pos:start="115:9" pos:end="115:11">pkt</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:16">pts</name></name> <operator pos:start="115:18" pos:end="115:18">=</operator> <name pos:start="115:20" pos:end="115:27">timecode</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:19"><expr pos:start="117:5" pos:end="117:18"><name pos:start="117:5" pos:end="117:12"><name pos:start="117:5" pos:end="117:7">pkt</name><operator pos:start="117:8" pos:end="117:9">-&gt;</operator><name pos:start="117:10" pos:end="117:12">pos</name></name> <operator pos:start="117:14" pos:end="117:14">=</operator> <name pos:start="117:16" pos:end="117:18">pos</name></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="125:33"><if pos:start="119:5" pos:end="121:45">if <condition pos:start="119:8" pos:end="119:48">(<expr pos:start="119:9" pos:end="119:47"><name pos:start="119:9" pos:end="119:27"><name pos:start="119:9" pos:end="119:10">st</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:17">codec</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:27">codec_id</name></name> <operator pos:start="119:29" pos:end="119:30">==</operator> <name pos:start="119:32" pos:end="119:47">AV_CODEC_ID_TEXT</name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:45"><block_content pos:start="121:9" pos:end="121:45">

        <expr_stmt pos:start="121:9" pos:end="121:45"><expr pos:start="121:9" pos:end="121:44"><name pos:start="121:9" pos:end="121:33"><name pos:start="121:9" pos:end="121:11">pkt</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:33">convergence_duration</name></name> <operator pos:start="121:35" pos:end="121:35">=</operator> <name pos:start="121:37" pos:end="121:44">duration</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="123:5" pos:end="125:33">else if <condition pos:start="123:13" pos:end="123:57">(<expr pos:start="123:14" pos:end="123:56"><name pos:start="123:14" pos:end="123:24"><name pos:start="123:14" pos:end="123:18">track</name><operator pos:start="123:19" pos:end="123:20">-&gt;</operator><name pos:start="123:21" pos:end="123:24">type</name></name> <operator pos:start="123:26" pos:end="123:27">!=</operator> <name pos:start="123:29" pos:end="123:56">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:33"><block_content pos:start="125:9" pos:end="125:33">

        <expr_stmt pos:start="125:9" pos:end="125:33"><expr pos:start="125:9" pos:end="125:32"><name pos:start="125:9" pos:end="125:21"><name pos:start="125:9" pos:end="125:11">pkt</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:21">duration</name></name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:32">duration</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="129:5" pos:end="131:57"><if pos:start="129:5" pos:end="131:57">if <condition pos:start="129:8" pos:end="129:47">(<expr pos:start="129:9" pos:end="129:46"><name pos:start="129:9" pos:end="129:27"><name pos:start="129:9" pos:end="129:10">st</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:17">codec</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:27">codec_id</name></name> <operator pos:start="129:29" pos:end="129:30">==</operator> <name pos:start="129:32" pos:end="129:46">AV_CODEC_ID_SSA</name></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:57"><block_content pos:start="131:9" pos:end="131:57">

        <expr_stmt pos:start="131:9" pos:end="131:57"><expr pos:start="131:9" pos:end="131:56"><call pos:start="131:9" pos:end="131:56"><name pos:start="131:9" pos:end="131:31">matroska_fix_ass_packet</name><argument_list pos:start="131:32" pos:end="131:56">(<argument pos:start="131:33" pos:end="131:40"><expr pos:start="131:33" pos:end="131:40"><name pos:start="131:33" pos:end="131:40">matroska</name></expr></argument>, <argument pos:start="131:43" pos:end="131:45"><expr pos:start="131:43" pos:end="131:45"><name pos:start="131:43" pos:end="131:45">pkt</name></expr></argument>, <argument pos:start="131:48" pos:end="131:55"><expr pos:start="131:48" pos:end="131:55"><name pos:start="131:48" pos:end="131:55">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="135:5" pos:end="153:5"><if pos:start="135:5" pos:end="145:56">if <condition pos:start="135:8" pos:end="143:47">(<expr pos:start="135:9" pos:end="143:46"><name pos:start="135:9" pos:end="135:26"><name pos:start="135:9" pos:end="135:16">matroska</name><operator pos:start="135:17" pos:end="135:18">-&gt;</operator><name pos:start="135:19" pos:end="135:26">prev_pkt</name></name>                                 <operator pos:start="135:60" pos:end="135:61">&amp;&amp;</operator>

        <name pos:start="137:9" pos:end="137:16">timecode</name>                         <operator pos:start="137:42" pos:end="137:43">!=</operator> <name pos:start="137:45" pos:end="137:58">AV_NOPTS_VALUE</name> <operator pos:start="137:60" pos:end="137:61">&amp;&amp;</operator>

        <name pos:start="139:9" pos:end="139:31"><name pos:start="139:9" pos:end="139:16">matroska</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:26">prev_pkt</name><operator pos:start="139:27" pos:end="139:28">-&gt;</operator><name pos:start="139:29" pos:end="139:31">pts</name></name>          <operator pos:start="139:42" pos:end="139:43">==</operator> <name pos:start="139:45" pos:end="139:52">timecode</name>       <operator pos:start="139:60" pos:end="139:61">&amp;&amp;</operator>

        <name pos:start="141:9" pos:end="141:40"><name pos:start="141:9" pos:end="141:16">matroska</name><operator pos:start="141:17" pos:end="141:18">-&gt;</operator><name pos:start="141:19" pos:end="141:26">prev_pkt</name><operator pos:start="141:27" pos:end="141:28">-&gt;</operator><name pos:start="141:29" pos:end="141:40">stream_index</name></name> <operator pos:start="141:42" pos:end="141:43">==</operator> <name pos:start="141:45" pos:end="141:53"><name pos:start="141:45" pos:end="141:46">st</name><operator pos:start="141:47" pos:end="141:48">-&gt;</operator><name pos:start="141:49" pos:end="141:53">index</name></name>      <operator pos:start="141:60" pos:end="141:61">&amp;&amp;</operator>

        <name pos:start="143:9" pos:end="143:27"><name pos:start="143:9" pos:end="143:10">st</name><operator pos:start="143:11" pos:end="143:12">-&gt;</operator><name pos:start="143:13" pos:end="143:17">codec</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:27">codec_id</name></name> <operator pos:start="143:29" pos:end="143:30">==</operator> <name pos:start="143:32" pos:end="143:46">AV_CODEC_ID_SSA</name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:56"><block_content pos:start="145:9" pos:end="145:56">

        <expr_stmt pos:start="145:9" pos:end="145:56"><expr pos:start="145:9" pos:end="145:55"><call pos:start="145:9" pos:end="145:55"><name pos:start="145:9" pos:end="145:30">matroska_merge_packets</name><argument_list pos:start="145:31" pos:end="145:55">(<argument pos:start="145:32" pos:end="145:49"><expr pos:start="145:32" pos:end="145:49"><name pos:start="145:32" pos:end="145:49"><name pos:start="145:32" pos:end="145:39">matroska</name><operator pos:start="145:40" pos:end="145:41">-&gt;</operator><name pos:start="145:42" pos:end="145:49">prev_pkt</name></name></expr></argument>, <argument pos:start="145:52" pos:end="145:54"><expr pos:start="145:52" pos:end="145:54"><name pos:start="145:52" pos:end="145:54">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="147:5" pos:end="153:5">else <block pos:start="147:10" pos:end="153:5">{<block_content pos:start="149:9" pos:end="151:33">

        <expr_stmt pos:start="149:9" pos:end="149:70"><expr pos:start="149:9" pos:end="149:69"><call pos:start="149:9" pos:end="149:69"><name pos:start="149:9" pos:end="149:20">dynarray_add</name><argument_list pos:start="149:21" pos:end="149:69">(<argument pos:start="149:22" pos:end="149:39"><expr pos:start="149:22" pos:end="149:39"><operator pos:start="149:22" pos:end="149:22">&amp;</operator><name pos:start="149:23" pos:end="149:39"><name pos:start="149:23" pos:end="149:30">matroska</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:39">packets</name></name></expr></argument>, <argument pos:start="149:42" pos:end="149:63"><expr pos:start="149:42" pos:end="149:63"><operator pos:start="149:42" pos:end="149:42">&amp;</operator><name pos:start="149:43" pos:end="149:63"><name pos:start="149:43" pos:end="149:50">matroska</name><operator pos:start="149:51" pos:end="149:52">-&gt;</operator><name pos:start="149:53" pos:end="149:63">num_packets</name></name></expr></argument>, <argument pos:start="149:66" pos:end="149:68"><expr pos:start="149:66" pos:end="149:68"><name pos:start="149:66" pos:end="149:68">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:33"><expr pos:start="151:9" pos:end="151:32"><name pos:start="151:9" pos:end="151:26"><name pos:start="151:9" pos:end="151:16">matroska</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:26">prev_pkt</name></name> <operator pos:start="151:28" pos:end="151:28">=</operator> <name pos:start="151:30" pos:end="151:32">pkt</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="157:5" pos:end="157:13">return <expr pos:start="157:12" pos:end="157:12"><literal type="number" pos:start="157:12" pos:end="157:12">0</literal></expr>;</return>



<label pos:start="161:1" pos:end="161:5"><name pos:start="161:1" pos:end="161:4">fail</name>:</label>

    <if_stmt pos:start="163:5" pos:end="166:15"><if pos:start="163:5" pos:end="166:15">if <condition pos:start="163:8" pos:end="163:25">(<expr pos:start="163:9" pos:end="163:24"><name pos:start="163:9" pos:end="163:16">pkt_data</name> <operator pos:start="163:18" pos:end="163:19">!=</operator> <name pos:start="163:21" pos:end="163:24">data</name></expr>)</condition><block type="pseudo" pos:start="166:5" pos:end="166:15"><block_content pos:start="166:5" pos:end="166:15">


    <return pos:start="166:5" pos:end="166:15">return <expr pos:start="166:12" pos:end="166:14"><name pos:start="166:12" pos:end="166:14">res</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></function></unit>
