<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/618.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:15"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">av_image_alloc</name><parameter_list pos:start="1:19" pos:end="2:71">(<parameter pos:start="1:20" pos:end="1:39"><decl pos:start="1:20" pos:end="1:39"><type pos:start="1:20" pos:end="1:36"><name pos:start="1:20" pos:end="1:26">uint8_t</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:36">pointers</name><index pos:start="1:37" pos:end="1:39">[<expr pos:start="1:38" pos:end="1:38"><literal type="number" pos:start="1:38" pos:end="1:38">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:57"><decl pos:start="1:42" pos:end="1:57"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:54">linesizes</name><index pos:start="1:55" pos:end="1:57">[<expr pos:start="1:56" pos:end="1:56"><literal type="number" pos:start="1:56" pos:end="1:56">4</literal></expr>]</index></name></decl></parameter>,
                   <parameter pos:start="2:20" pos:end="2:24"><decl pos:start="2:20" pos:end="2:24"><type pos:start="2:20" pos:end="2:24"><name pos:start="2:20" pos:end="2:22">int</name></type> <name pos:start="2:24" pos:end="2:24">w</name></decl></parameter>, <parameter pos:start="2:27" pos:end="2:31"><decl pos:start="2:27" pos:end="2:31"><type pos:start="2:27" pos:end="2:31"><name pos:start="2:27" pos:end="2:29">int</name></type> <name pos:start="2:31" pos:end="2:31">h</name></decl></parameter>, <parameter pos:start="2:34" pos:end="2:59"><decl pos:start="2:34" pos:end="2:59"><type pos:start="2:34" pos:end="2:59"><name pos:start="2:34" pos:end="2:51"><name pos:start="2:34" pos:end="2:37">enum</name> <name pos:start="2:39" pos:end="2:51">AVPixelFormat</name></name></type> <name pos:start="2:53" pos:end="2:59">pix_fmt</name></decl></parameter>, <parameter pos:start="2:62" pos:end="2:70"><decl pos:start="2:62" pos:end="2:70"><type pos:start="2:62" pos:end="2:70"><name pos:start="2:62" pos:end="2:64">int</name></type> <name pos:start="2:66" pos:end="2:70">align</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="25:15">{<block_content pos:start="4:5" pos:end="25:15">
    <decl_stmt pos:start="4:5" pos:end="4:66"><decl pos:start="4:5" pos:end="4:65"><type pos:start="4:5" pos:end="4:30"><specifier pos:start="4:5" pos:end="4:9">const</specifier> <name pos:start="4:11" pos:end="4:28">AVPixFmtDescriptor</name> <modifier pos:start="4:30" pos:end="4:30">*</modifier></type><name pos:start="4:31" pos:end="4:34">desc</name> <init pos:start="4:36" pos:end="4:65">= <expr pos:start="4:38" pos:end="4:65"><call pos:start="4:38" pos:end="4:65"><name pos:start="4:38" pos:end="4:56">av_pix_fmt_desc_get</name><argument_list pos:start="4:57" pos:end="4:65">(<argument pos:start="4:58" pos:end="4:64"><expr pos:start="4:58" pos:end="4:64"><name pos:start="4:58" pos:end="4:64">pix_fmt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:17"><decl pos:start="6:5" pos:end="6:16"><type pos:start="6:5" pos:end="6:13"><name pos:start="6:5" pos:end="6:11">uint8_t</name> <modifier pos:start="6:13" pos:end="6:13">*</modifier></type><name pos:start="6:14" pos:end="6:16">buf</name></decl>;</decl_stmt>
    <if_stmt pos:start="7:5" pos:end="8:31"><if pos:start="7:5" pos:end="8:31">if <condition pos:start="7:8" pos:end="7:14">(<expr pos:start="7:9" pos:end="7:13"><operator pos:start="7:9" pos:end="7:9">!</operator><name pos:start="7:10" pos:end="7:13">desc</name></expr>)</condition><block type="pseudo" pos:start="8:9" pos:end="8:31"><block_content pos:start="8:9" pos:end="8:31">
        <return pos:start="8:9" pos:end="8:31">return <expr pos:start="8:16" pos:end="8:30"><call pos:start="8:16" pos:end="8:30"><name pos:start="8:16" pos:end="8:22">AVERROR</name><argument_list pos:start="8:23" pos:end="8:30">(<argument pos:start="8:24" pos:end="8:29"><expr pos:start="8:24" pos:end="8:29"><name pos:start="8:24" pos:end="8:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="9:5" pos:end="10:19"><if pos:start="9:5" pos:end="10:19">if <condition pos:start="9:8" pos:end="9:55">(<expr pos:start="9:9" pos:end="9:54"><operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:12">ret</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <call pos:start="9:16" pos:end="9:49"><name pos:start="9:16" pos:end="9:34">av_image_check_size</name><argument_list pos:start="9:35" pos:end="9:49">(<argument pos:start="9:36" pos:end="9:36"><expr pos:start="9:36" pos:end="9:36"><name pos:start="9:36" pos:end="9:36">w</name></expr></argument>, <argument pos:start="9:39" pos:end="9:39"><expr pos:start="9:39" pos:end="9:39"><name pos:start="9:39" pos:end="9:39">h</name></expr></argument>, <argument pos:start="9:42" pos:end="9:42"><expr pos:start="9:42" pos:end="9:42"><literal type="number" pos:start="9:42" pos:end="9:42">0</literal></expr></argument>, <argument pos:start="9:45" pos:end="9:48"><expr pos:start="9:45" pos:end="9:48"><name pos:start="9:45" pos:end="9:48">NULL</name></expr></argument>)</argument_list></call><operator pos:start="9:50" pos:end="9:50">)</operator> <operator pos:start="9:52" pos:end="9:52">&lt;</operator> <literal type="number" pos:start="9:54" pos:end="9:54">0</literal></expr>)</condition><block type="pseudo" pos:start="10:9" pos:end="10:19"><block_content pos:start="10:9" pos:end="10:19">
        <return pos:start="10:9" pos:end="10:19">return <expr pos:start="10:16" pos:end="10:18"><name pos:start="10:16" pos:end="10:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="11:5" pos:end="12:19"><if pos:start="11:5" pos:end="12:19">if <condition pos:start="11:8" pos:end="11:93">(<expr pos:start="11:9" pos:end="11:92"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:12">ret</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <call pos:start="11:16" pos:end="11:87"><name pos:start="11:16" pos:end="11:38">av_image_fill_linesizes</name><argument_list pos:start="11:39" pos:end="11:87">(<argument pos:start="11:40" pos:end="11:48"><expr pos:start="11:40" pos:end="11:48"><name pos:start="11:40" pos:end="11:48">linesizes</name></expr></argument>, <argument pos:start="11:51" pos:end="11:57"><expr pos:start="11:51" pos:end="11:57"><name pos:start="11:51" pos:end="11:57">pix_fmt</name></expr></argument>, <argument pos:start="11:60" pos:end="11:86"><expr pos:start="11:60" pos:end="11:86"><ternary pos:start="11:60" pos:end="11:86"><condition pos:start="11:60" pos:end="11:68"><expr pos:start="11:60" pos:end="11:66"><name pos:start="11:60" pos:end="11:64">align</name><operator pos:start="11:65" pos:end="11:65">&gt;</operator><literal type="number" pos:start="11:66" pos:end="11:66">7</literal></expr> ?</condition><then pos:start="11:70" pos:end="11:82"> <expr pos:start="11:70" pos:end="11:82"><call pos:start="11:70" pos:end="11:82"><name pos:start="11:70" pos:end="11:76">FFALIGN</name><argument_list pos:start="11:77" pos:end="11:82">(<argument pos:start="11:78" pos:end="11:78"><expr pos:start="11:78" pos:end="11:78"><name pos:start="11:78" pos:end="11:78">w</name></expr></argument>, <argument pos:start="11:81" pos:end="11:81"><expr pos:start="11:81" pos:end="11:81"><literal type="number" pos:start="11:81" pos:end="11:81">8</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="11:84" pos:end="11:86">: <expr pos:start="11:86" pos:end="11:86"><name pos:start="11:86" pos:end="11:86">w</name></expr></else></ternary></expr></argument>)</argument_list></call><operator pos:start="11:88" pos:end="11:88">)</operator> <operator pos:start="11:90" pos:end="11:90">&lt;</operator> <literal type="number" pos:start="11:92" pos:end="11:92">0</literal></expr>)</condition><block type="pseudo" pos:start="12:9" pos:end="12:19"><block_content pos:start="12:9" pos:end="12:19">
        <return pos:start="12:9" pos:end="12:19">return <expr pos:start="12:16" pos:end="12:18"><name pos:start="12:16" pos:end="12:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <for pos:start="13:5" pos:end="14:52">for <control pos:start="13:9" pos:end="13:27">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:22"><expr pos:start="13:17" pos:end="13:21"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <literal type="number" pos:start="13:21" pos:end="13:21">4</literal></expr>;</condition> <incr pos:start="13:24" pos:end="13:26"><expr pos:start="13:24" pos:end="13:26"><name pos:start="13:24" pos:end="13:24">i</name><operator pos:start="13:25" pos:end="13:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="14:9" pos:end="14:52"><block_content pos:start="14:9" pos:end="14:52">
        <expr_stmt pos:start="14:9" pos:end="14:52"><expr pos:start="14:9" pos:end="14:51"><name pos:start="14:9" pos:end="14:20"><name pos:start="14:9" pos:end="14:17">linesizes</name><index pos:start="14:18" pos:end="14:20">[<expr pos:start="14:19" pos:end="14:19"><name pos:start="14:19" pos:end="14:19">i</name></expr>]</index></name> <operator pos:start="14:22" pos:end="14:22">=</operator> <call pos:start="14:24" pos:end="14:51"><name pos:start="14:24" pos:end="14:30">FFALIGN</name><argument_list pos:start="14:31" pos:end="14:51">(<argument pos:start="14:32" pos:end="14:43"><expr pos:start="14:32" pos:end="14:43"><name pos:start="14:32" pos:end="14:43"><name pos:start="14:32" pos:end="14:40">linesizes</name><index pos:start="14:41" pos:end="14:43">[<expr pos:start="14:42" pos:end="14:42"><name pos:start="14:42" pos:end="14:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="14:46" pos:end="14:50"><expr pos:start="14:46" pos:end="14:50"><name pos:start="14:46" pos:end="14:50">align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <if_stmt pos:start="15:5" pos:end="16:19"><if pos:start="15:5" pos:end="16:19">if <condition pos:start="15:8" pos:end="15:82">(<expr pos:start="15:9" pos:end="15:81"><operator pos:start="15:9" pos:end="15:9">(</operator><name pos:start="15:10" pos:end="15:12">ret</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <call pos:start="15:16" pos:end="15:76"><name pos:start="15:16" pos:end="15:37">av_image_fill_pointers</name><argument_list pos:start="15:38" pos:end="15:76">(<argument pos:start="15:39" pos:end="15:46"><expr pos:start="15:39" pos:end="15:46"><name pos:start="15:39" pos:end="15:46">pointers</name></expr></argument>, <argument pos:start="15:49" pos:end="15:55"><expr pos:start="15:49" pos:end="15:55"><name pos:start="15:49" pos:end="15:55">pix_fmt</name></expr></argument>, <argument pos:start="15:58" pos:end="15:58"><expr pos:start="15:58" pos:end="15:58"><name pos:start="15:58" pos:end="15:58">h</name></expr></argument>, <argument pos:start="15:61" pos:end="15:64"><expr pos:start="15:61" pos:end="15:64"><name pos:start="15:61" pos:end="15:64">NULL</name></expr></argument>, <argument pos:start="15:67" pos:end="15:75"><expr pos:start="15:67" pos:end="15:75"><name pos:start="15:67" pos:end="15:75">linesizes</name></expr></argument>)</argument_list></call><operator pos:start="15:77" pos:end="15:77">)</operator> <operator pos:start="15:79" pos:end="15:79">&lt;</operator> <literal type="number" pos:start="15:81" pos:end="15:81">0</literal></expr>)</condition><block type="pseudo" pos:start="16:9" pos:end="16:19"><block_content pos:start="16:9" pos:end="16:19">
        <return pos:start="16:9" pos:end="16:19">return <expr pos:start="16:16" pos:end="16:18"><name pos:start="16:16" pos:end="16:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:7">buf</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:32"><name pos:start="17:11" pos:end="17:19">av_malloc</name><argument_list pos:start="17:20" pos:end="17:32">(<argument pos:start="17:21" pos:end="17:31"><expr pos:start="17:21" pos:end="17:31"><name pos:start="17:21" pos:end="17:23">ret</name> <operator pos:start="17:25" pos:end="17:25">+</operator> <name pos:start="17:27" pos:end="17:31">align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="18:5" pos:end="19:31"><if pos:start="18:5" pos:end="19:31">if <condition pos:start="18:8" pos:end="18:13">(<expr pos:start="18:9" pos:end="18:12"><operator pos:start="18:9" pos:end="18:9">!</operator><name pos:start="18:10" pos:end="18:12">buf</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:31"><block_content pos:start="19:9" pos:end="19:31">
        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="20:5" pos:end="25:15"><if pos:start="20:5" pos:end="25:15">if <condition pos:start="20:8" pos:end="20:81">(<expr pos:start="20:9" pos:end="20:80"><operator pos:start="20:9" pos:end="20:9">(</operator><name pos:start="20:10" pos:end="20:12">ret</name> <operator pos:start="20:14" pos:end="20:14">=</operator> <call pos:start="20:16" pos:end="20:75"><name pos:start="20:16" pos:end="20:37">av_image_fill_pointers</name><argument_list pos:start="20:38" pos:end="20:75">(<argument pos:start="20:39" pos:end="20:46"><expr pos:start="20:39" pos:end="20:46"><name pos:start="20:39" pos:end="20:46">pointers</name></expr></argument>, <argument pos:start="20:49" pos:end="20:55"><expr pos:start="20:49" pos:end="20:55"><name pos:start="20:49" pos:end="20:55">pix_fmt</name></expr></argument>, <argument pos:start="20:58" pos:end="20:58"><expr pos:start="20:58" pos:end="20:58"><name pos:start="20:58" pos:end="20:58">h</name></expr></argument>, <argument pos:start="20:61" pos:end="20:63"><expr pos:start="20:61" pos:end="20:63"><name pos:start="20:61" pos:end="20:63">buf</name></expr></argument>, <argument pos:start="20:66" pos:end="20:74"><expr pos:start="20:66" pos:end="20:74"><name pos:start="20:66" pos:end="20:74">linesizes</name></expr></argument>)</argument_list></call><operator pos:start="20:76" pos:end="20:76">)</operator> <operator pos:start="20:78" pos:end="20:78">&lt;</operator> <literal type="number" pos:start="20:80" pos:end="20:80">0</literal></expr>)</condition> <block pos:start="20:83" pos:end="25:15">{<block_content pos:start="21:9" pos:end="25:15">
        <expr_stmt pos:start="21:9" pos:end="21:21"><expr pos:start="21:9" pos:end="21:20"><call pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:15">av_free</name><argument_list pos:start="21:16" pos:end="21:20">(<argument pos:start="21:17" pos:end="21:19"><expr pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:19">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="22:9" pos:end="22:19">return <expr pos:start="22:16" pos:end="22:18"><name pos:start="22:16" pos:end="22:18">ret</name></expr>;</return>
    <if_stmt pos:start="23:5" pos:end="24:68"><if pos:start="23:5" pos:end="24:68">if <condition pos:start="23:8" pos:end="23:85">(<expr pos:start="23:9" pos:end="23:84"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:12">desc</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:19">flags</name></name> <operator pos:start="23:21" pos:end="23:21">&amp;</operator> <name pos:start="23:23" pos:end="23:41">AV_PIX_FMT_FLAG_PAL</name> <operator pos:start="23:43" pos:end="23:44">||</operator> <name pos:start="23:46" pos:end="23:56"><name pos:start="23:46" pos:end="23:49">desc</name><operator pos:start="23:50" pos:end="23:51">-&gt;</operator><name pos:start="23:52" pos:end="23:56">flags</name></name> <operator pos:start="23:58" pos:end="23:58">&amp;</operator> <name pos:start="23:60" pos:end="23:84">AV_PIX_FMT_FLAG_PSEUDOPAL</name></expr>)</condition><block type="pseudo" pos:start="24:9" pos:end="24:68"><block_content pos:start="24:9" pos:end="24:68">
        <expr_stmt pos:start="24:9" pos:end="24:68"><expr pos:start="24:9" pos:end="24:67"><call pos:start="24:9" pos:end="24:67"><name pos:start="24:9" pos:end="24:34">avpriv_set_systematic_pal2</name><argument_list pos:start="24:35" pos:end="24:67">(<argument pos:start="24:36" pos:end="24:57"><expr pos:start="24:36" pos:end="24:57"><operator pos:start="24:36" pos:end="24:36">(</operator><name pos:start="24:37" pos:end="24:44">uint32_t</name><operator pos:start="24:45" pos:end="24:45">*</operator><operator pos:start="24:46" pos:end="24:46">)</operator><name pos:start="24:47" pos:end="24:57"><name pos:start="24:47" pos:end="24:54">pointers</name><index pos:start="24:55" pos:end="24:57">[<expr pos:start="24:56" pos:end="24:56"><literal type="number" pos:start="24:56" pos:end="24:56">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="24:60" pos:end="24:66"><expr pos:start="24:60" pos:end="24:66"><name pos:start="24:60" pos:end="24:66">pix_fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <return pos:start="25:5" pos:end="25:15">return <expr pos:start="25:12" pos:end="25:14"><name pos:start="25:12" pos:end="25:14">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></function></unit>
