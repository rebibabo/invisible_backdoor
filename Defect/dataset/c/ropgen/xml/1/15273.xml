<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15273.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23"><name pos:start="1:8" pos:end="1:13">struct</name> <name pos:start="1:15" pos:end="1:23">XenDevice</name></name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:42">xen_be_get_xendev</name><parameter_list pos:start="1:43" pos:end="3:65">(<parameter pos:start="1:44" pos:end="1:59"><decl pos:start="1:44" pos:end="1:59"><type pos:start="1:44" pos:end="1:59"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">type</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:68"><decl pos:start="1:62" pos:end="1:68"><type pos:start="1:62" pos:end="1:68"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:68">dom</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:77"><decl pos:start="1:71" pos:end="1:77"><type pos:start="1:71" pos:end="1:77"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:77">dev</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:64"><decl pos:start="3:44" pos:end="3:64"><type pos:start="3:44" pos:end="3:64"><name pos:start="3:44" pos:end="3:59"><name pos:start="3:44" pos:end="3:49">struct</name> <name pos:start="3:51" pos:end="3:59">XenDevOps</name></name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:64">ops</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="111:1">{<block_content pos:start="7:5" pos:end="109:18">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:20">XenDevice</name></name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:28">xendev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:14">dom0</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:48"><expr pos:start="13:5" pos:end="13:47"><name pos:start="13:5" pos:end="13:10">xendev</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:47"><name pos:start="13:14" pos:end="13:31">xen_be_find_xendev</name><argument_list pos:start="13:32" pos:end="13:47">(<argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><name pos:start="13:33" pos:end="13:36">type</name></expr></argument>, <argument pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><name pos:start="13:39" pos:end="13:41">dom</name></expr></argument>, <argument pos:start="13:44" pos:end="13:46"><expr pos:start="13:44" pos:end="13:46"><name pos:start="13:44" pos:end="13:46">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:15">(<expr pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:14">xendev</name></expr>)</condition> <block pos:start="15:17" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:22">

        <return pos:start="17:9" pos:end="17:22">return <expr pos:start="17:16" pos:end="17:21"><name pos:start="17:16" pos:end="17:21">xendev</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:25">/* init new xendev */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:34"><expr pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:10">xendev</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:33"><name pos:start="25:14" pos:end="25:22">g_malloc0</name><argument_list pos:start="25:23" pos:end="25:33">(<argument pos:start="25:24" pos:end="25:32"><expr pos:start="25:24" pos:end="25:32"><name pos:start="25:24" pos:end="25:32"><name pos:start="25:24" pos:end="25:26">ops</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:32">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:25"><expr pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:10">xendev</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:16">type</name></name>  <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:24">type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:10">xendev</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:15">dom</name></name>   <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:23">dom</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:10">xendev</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:15">dev</name></name>   <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:23">dev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:10">xendev</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:15">ops</name></name>   <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:23">ops</name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:43"><expr pos:start="37:5" pos:end="37:42"><name pos:start="37:5" pos:end="37:8">dom0</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:42"><name pos:start="37:12" pos:end="37:29">xs_get_domain_path</name><argument_list pos:start="37:30" pos:end="37:42">(<argument pos:start="37:31" pos:end="37:38"><expr pos:start="37:31" pos:end="37:38"><name pos:start="37:31" pos:end="37:38">xenstore</name></expr></argument>, <argument pos:start="37:41" pos:end="37:41"><expr pos:start="37:41" pos:end="37:41"><literal type="number" pos:start="37:41" pos:end="37:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:59"><expr pos:start="39:5" pos:end="41:58"><call pos:start="39:5" pos:end="41:58"><name pos:start="39:5" pos:end="39:12">snprintf</name><argument_list pos:start="39:13" pos:end="41:58">(<argument pos:start="39:14" pos:end="39:23"><expr pos:start="39:14" pos:end="39:23"><name pos:start="39:14" pos:end="39:23"><name pos:start="39:14" pos:end="39:19">xendev</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:23">be</name></name></expr></argument>, <argument pos:start="39:26" pos:end="39:43"><expr pos:start="39:26" pos:end="39:43"><sizeof pos:start="39:26" pos:end="39:43">sizeof<argument_list pos:start="39:32" pos:end="39:43">(<argument pos:start="39:33" pos:end="39:42"><expr pos:start="39:33" pos:end="39:42"><name pos:start="39:33" pos:end="39:42"><name pos:start="39:33" pos:end="39:38">xendev</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:42">be</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:46" pos:end="39:66"><expr pos:start="39:46" pos:end="39:66"><literal type="string" pos:start="39:46" pos:end="39:66">"%s/backend/%s/%d/%d"</literal></expr></argument>,

             <argument pos:start="41:14" pos:end="41:17"><expr pos:start="41:14" pos:end="41:17"><name pos:start="41:14" pos:end="41:17">dom0</name></expr></argument>, <argument pos:start="41:20" pos:end="41:31"><expr pos:start="41:20" pos:end="41:31"><name pos:start="41:20" pos:end="41:31"><name pos:start="41:20" pos:end="41:25">xendev</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:31">type</name></name></expr></argument>, <argument pos:start="41:34" pos:end="41:44"><expr pos:start="41:34" pos:end="41:44"><name pos:start="41:34" pos:end="41:44"><name pos:start="41:34" pos:end="41:39">xendev</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:44">dom</name></name></expr></argument>, <argument pos:start="41:47" pos:end="41:57"><expr pos:start="41:47" pos:end="41:57"><name pos:start="41:47" pos:end="41:57"><name pos:start="41:47" pos:end="41:52">xendev</name><operator pos:start="41:53" pos:end="41:54">-&gt;</operator><name pos:start="41:55" pos:end="41:57">dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:40"><expr pos:start="43:5" pos:end="45:39"><call pos:start="43:5" pos:end="45:39"><name pos:start="43:5" pos:end="43:12">snprintf</name><argument_list pos:start="43:13" pos:end="45:39">(<argument pos:start="43:14" pos:end="43:25"><expr pos:start="43:14" pos:end="43:25"><name pos:start="43:14" pos:end="43:25"><name pos:start="43:14" pos:end="43:19">xendev</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:25">name</name></name></expr></argument>, <argument pos:start="43:28" pos:end="43:47"><expr pos:start="43:28" pos:end="43:47"><sizeof pos:start="43:28" pos:end="43:47">sizeof<argument_list pos:start="43:34" pos:end="43:47">(<argument pos:start="43:35" pos:end="43:46"><expr pos:start="43:35" pos:end="43:46"><name pos:start="43:35" pos:end="43:46"><name pos:start="43:35" pos:end="43:40">xendev</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:46">name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="43:50" pos:end="43:56"><expr pos:start="43:50" pos:end="43:56"><literal type="string" pos:start="43:50" pos:end="43:56">"%s-%d"</literal></expr></argument>,

             <argument pos:start="45:14" pos:end="45:25"><expr pos:start="45:14" pos:end="45:25"><name pos:start="45:14" pos:end="45:25"><name pos:start="45:14" pos:end="45:19">xendev</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:25">type</name></name></expr></argument>, <argument pos:start="45:28" pos:end="45:38"><expr pos:start="45:28" pos:end="45:38"><name pos:start="45:28" pos:end="45:38"><name pos:start="45:28" pos:end="45:33">xendev</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:38">dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:15"><expr pos:start="47:5" pos:end="47:14"><call pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:8">free</name><argument_list pos:start="47:9" pos:end="47:14">(<argument pos:start="47:10" pos:end="47:13"><expr pos:start="47:10" pos:end="47:13"><name pos:start="47:10" pos:end="47:13">dom0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:10">xendev</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:17">debug</name></name>      <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:30">debug</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:28"><expr pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:10">xendev</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:22">local_port</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <operator pos:start="53:26" pos:end="53:26">-</operator><literal type="number" pos:start="53:27" pos:end="53:27">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:52"><expr pos:start="57:5" pos:end="57:51"><name pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:10">xendev</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:21">evtchndev</name></name> <operator pos:start="57:23" pos:end="57:23">=</operator> <call pos:start="57:25" pos:end="57:51"><name pos:start="57:25" pos:end="57:42">xen_xc_evtchn_open</name><argument_list pos:start="57:43" pos:end="57:51">(<argument pos:start="57:44" pos:end="57:47"><expr pos:start="57:44" pos:end="57:47"><name pos:start="57:44" pos:end="57:47">NULL</name></expr></argument>, <argument pos:start="57:50" pos:end="57:50"><expr pos:start="57:50" pos:end="57:50"><literal type="number" pos:start="57:50" pos:end="57:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:54">(<expr pos:start="59:9" pos:end="59:53"><name pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:14">xendev</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:25">evtchndev</name></name> <operator pos:start="59:27" pos:end="59:28">==</operator> <name pos:start="59:30" pos:end="59:53">XC_HANDLER_INITIAL_VALUE</name></expr>)</condition> <block pos:start="59:56" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:20">

        <expr_stmt pos:start="61:9" pos:end="61:61"><expr pos:start="61:9" pos:end="61:60"><call pos:start="61:9" pos:end="61:60"><name pos:start="61:9" pos:end="61:21">xen_be_printf</name><argument_list pos:start="61:22" pos:end="61:60">(<argument pos:start="61:23" pos:end="61:26"><expr pos:start="61:23" pos:end="61:26"><name pos:start="61:23" pos:end="61:26">NULL</name></expr></argument>, <argument pos:start="61:29" pos:end="61:29"><expr pos:start="61:29" pos:end="61:29"><literal type="number" pos:start="61:29" pos:end="61:29">0</literal></expr></argument>, <argument pos:start="61:32" pos:end="61:59"><expr pos:start="61:32" pos:end="61:59"><literal type="string" pos:start="61:32" pos:end="61:59">"can't open evtchn device\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:23"><expr pos:start="63:9" pos:end="63:22"><call pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:14">g_free</name><argument_list pos:start="63:15" pos:end="63:22">(<argument pos:start="63:16" pos:end="63:21"><expr pos:start="63:16" pos:end="63:21"><name pos:start="63:16" pos:end="63:21">xendev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:20">return <expr pos:start="65:16" pos:end="65:19"><name pos:start="65:16" pos:end="65:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:64"><expr pos:start="69:5" pos:end="69:63"><call pos:start="69:5" pos:end="69:63"><name pos:start="69:5" pos:end="69:9">fcntl</name><argument_list pos:start="69:10" pos:end="69:63">(<argument pos:start="69:11" pos:end="69:41"><expr pos:start="69:11" pos:end="69:41"><call pos:start="69:11" pos:end="69:41"><name pos:start="69:11" pos:end="69:22">xc_evtchn_fd</name><argument_list pos:start="69:23" pos:end="69:41">(<argument pos:start="69:24" pos:end="69:40"><expr pos:start="69:24" pos:end="69:40"><name pos:start="69:24" pos:end="69:40"><name pos:start="69:24" pos:end="69:29">xendev</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:40">evtchndev</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:44" pos:end="69:50"><expr pos:start="69:44" pos:end="69:50"><name pos:start="69:44" pos:end="69:50">F_SETFD</name></expr></argument>, <argument pos:start="69:53" pos:end="69:62"><expr pos:start="69:53" pos:end="69:62"><name pos:start="69:53" pos:end="69:62">FD_CLOEXEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="93:5"><if pos:start="73:5" pos:end="89:5">if <condition pos:start="73:8" pos:end="73:45">(<expr pos:start="73:9" pos:end="73:44"><name pos:start="73:9" pos:end="73:18"><name pos:start="73:9" pos:end="73:11">ops</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:18">flags</name></name> <operator pos:start="73:20" pos:end="73:20">&amp;</operator> <name pos:start="73:22" pos:end="73:44">DEVOPS_FLAG_NEED_GNTDEV</name></expr>)</condition> <block pos:start="73:47" pos:end="89:5">{<block_content pos:start="75:9" pos:end="87:9">

        <expr_stmt pos:start="75:9" pos:end="75:56"><expr pos:start="75:9" pos:end="75:55"><name pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:14">xendev</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:25">gnttabdev</name></name> <operator pos:start="75:27" pos:end="75:27">=</operator> <call pos:start="75:29" pos:end="75:55"><name pos:start="75:29" pos:end="75:46">xen_xc_gnttab_open</name><argument_list pos:start="75:47" pos:end="75:55">(<argument pos:start="75:48" pos:end="75:51"><expr pos:start="75:48" pos:end="75:51"><name pos:start="75:48" pos:end="75:51">NULL</name></expr></argument>, <argument pos:start="75:54" pos:end="75:54"><expr pos:start="75:54" pos:end="75:54"><literal type="number" pos:start="75:54" pos:end="75:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="87:9"><if pos:start="77:9" pos:end="87:9">if <condition pos:start="77:12" pos:end="77:58">(<expr pos:start="77:13" pos:end="77:57"><name pos:start="77:13" pos:end="77:29"><name pos:start="77:13" pos:end="77:18">xendev</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:29">gnttabdev</name></name> <operator pos:start="77:31" pos:end="77:32">==</operator> <name pos:start="77:34" pos:end="77:57">XC_HANDLER_INITIAL_VALUE</name></expr>)</condition> <block pos:start="77:60" pos:end="87:9">{<block_content pos:start="79:13" pos:end="85:24">

            <expr_stmt pos:start="79:13" pos:end="79:65"><expr pos:start="79:13" pos:end="79:64"><call pos:start="79:13" pos:end="79:64"><name pos:start="79:13" pos:end="79:25">xen_be_printf</name><argument_list pos:start="79:26" pos:end="79:64">(<argument pos:start="79:27" pos:end="79:30"><expr pos:start="79:27" pos:end="79:30"><name pos:start="79:27" pos:end="79:30">NULL</name></expr></argument>, <argument pos:start="79:33" pos:end="79:33"><expr pos:start="79:33" pos:end="79:33"><literal type="number" pos:start="79:33" pos:end="79:33">0</literal></expr></argument>, <argument pos:start="79:36" pos:end="79:63"><expr pos:start="79:36" pos:end="79:63"><literal type="string" pos:start="79:36" pos:end="79:63">"can't open gnttab device\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:47"><expr pos:start="81:13" pos:end="81:46"><call pos:start="81:13" pos:end="81:46"><name pos:start="81:13" pos:end="81:27">xc_evtchn_close</name><argument_list pos:start="81:28" pos:end="81:46">(<argument pos:start="81:29" pos:end="81:45"><expr pos:start="81:29" pos:end="81:45"><name pos:start="81:29" pos:end="81:45"><name pos:start="81:29" pos:end="81:34">xendev</name><operator pos:start="81:35" pos:end="81:36">-&gt;</operator><name pos:start="81:37" pos:end="81:45">evtchndev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:27"><expr pos:start="83:13" pos:end="83:26"><call pos:start="83:13" pos:end="83:26"><name pos:start="83:13" pos:end="83:18">g_free</name><argument_list pos:start="83:19" pos:end="83:26">(<argument pos:start="83:20" pos:end="83:25"><expr pos:start="83:20" pos:end="83:25"><name pos:start="83:20" pos:end="83:25">xendev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="85:13" pos:end="85:24">return <expr pos:start="85:20" pos:end="85:23"><name pos:start="85:20" pos:end="85:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="93:5">else <block pos:start="89:12" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:53">

        <expr_stmt pos:start="91:9" pos:end="91:53"><expr pos:start="91:9" pos:end="91:52"><name pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:14">xendev</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:25">gnttabdev</name></name> <operator pos:start="91:27" pos:end="91:27">=</operator> <name pos:start="91:29" pos:end="91:52">XC_HANDLER_INITIAL_VALUE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:47"><expr pos:start="97:5" pos:end="97:46"><call pos:start="97:5" pos:end="97:46"><name pos:start="97:5" pos:end="97:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="97:23" pos:end="97:46">(<argument pos:start="97:24" pos:end="97:31"><expr pos:start="97:24" pos:end="97:31"><operator pos:start="97:24" pos:end="97:24">&amp;</operator><name pos:start="97:25" pos:end="97:31">xendevs</name></expr></argument>, <argument pos:start="97:34" pos:end="97:39"><expr pos:start="97:34" pos:end="97:39"><name pos:start="97:34" pos:end="97:39">xendev</name></expr></argument>, <argument pos:start="97:42" pos:end="97:45"><expr pos:start="97:42" pos:end="97:45"><name pos:start="97:42" pos:end="97:45">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="101:5" pos:end="105:5"><if pos:start="101:5" pos:end="105:5">if <condition pos:start="101:8" pos:end="101:27">(<expr pos:start="101:9" pos:end="101:26"><name pos:start="101:9" pos:end="101:26"><name pos:start="101:9" pos:end="101:14">xendev</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:19">ops</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:26">alloc</name></name></expr>)</condition> <block pos:start="101:29" pos:end="105:5">{<block_content pos:start="103:9" pos:end="103:35">

        <expr_stmt pos:start="103:9" pos:end="103:35"><expr pos:start="103:9" pos:end="103:34"><call pos:start="103:9" pos:end="103:34"><name pos:start="103:9" pos:end="103:26"><name pos:start="103:9" pos:end="103:14">xendev</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:19">ops</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:26">alloc</name></name><argument_list pos:start="103:27" pos:end="103:34">(<argument pos:start="103:28" pos:end="103:33"><expr pos:start="103:28" pos:end="103:33"><name pos:start="103:28" pos:end="103:33">xendev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="109:5" pos:end="109:18">return <expr pos:start="109:12" pos:end="109:17"><name pos:start="109:12" pos:end="109:17">xendev</name></expr>;</return>

</block_content>}</block></function>
</unit>
