<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23967.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">rm_assemble_video_frame</name><parameter_list pos:start="1:35" pos:end="7:54">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:70"><decl pos:start="1:56" pos:end="1:70"><type pos:start="1:56" pos:end="1:70"><name pos:start="1:56" pos:end="1:66">AVIOContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:70">pb</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:53"><decl pos:start="3:36" pos:end="3:53"><type pos:start="3:36" pos:end="3:53"><name pos:start="3:36" pos:end="3:49">RMDemuxContext</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:53">rm</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:68"><decl pos:start="3:56" pos:end="3:68"><type pos:start="3:56" pos:end="3:68"><name pos:start="3:56" pos:end="3:63">RMStream</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:68">vst</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:48"><decl pos:start="5:36" pos:end="5:48"><type pos:start="5:36" pos:end="5:48"><name pos:start="5:36" pos:end="5:43">AVPacket</name> <modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:48">pkt</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:57"><decl pos:start="5:51" pos:end="5:57"><type pos:start="5:51" pos:end="5:57"><name pos:start="5:51" pos:end="5:53">int</name></type> <name pos:start="5:55" pos:end="5:57">len</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:68"><decl pos:start="5:60" pos:end="5:68"><type pos:start="5:60" pos:end="5:68"><name pos:start="5:60" pos:end="5:62">int</name> <modifier pos:start="5:64" pos:end="5:64">*</modifier></type><name pos:start="5:65" pos:end="5:68">pseq</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:53"><decl pos:start="7:36" pos:end="7:53"><type pos:start="7:36" pos:end="7:53"><name pos:start="7:36" pos:end="7:42">int64_t</name> <modifier pos:start="7:44" pos:end="7:44">*</modifier></type><name pos:start="7:45" pos:end="7:53">timestamp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="165:1">{<block_content pos:start="11:5" pos:end="163:13">

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">hdr</name></decl>, <decl pos:start="11:14" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:16">seq</name></decl>, <decl pos:start="11:19" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:25">pic_num</name></decl>, <decl pos:start="11:28" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:28" pos:end="11:31">len2</name></decl>, <decl pos:start="11:34" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:34" pos:end="11:36">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">type</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:7">hdr</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:21"><name pos:start="17:11" pos:end="17:17">avio_r8</name><argument_list pos:start="17:18" pos:end="17:21">(<argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><name pos:start="17:19" pos:end="17:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:28"><name pos:start="17:24" pos:end="17:26">len</name><operator pos:start="17:27" pos:end="17:28">--</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:20"><expr pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:8">type</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <name pos:start="19:12" pos:end="19:14">hdr</name> <operator pos:start="19:16" pos:end="19:17">&gt;&gt;</operator> <literal type="number" pos:start="19:19" pos:end="19:19">6</literal></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if<condition pos:start="23:7" pos:end="23:17">(<expr pos:start="23:8" pos:end="23:16"><name pos:start="23:8" pos:end="23:11">type</name> <operator pos:start="23:13" pos:end="23:14">!=</operator> <literal type="number" pos:start="23:16" pos:end="23:16">3</literal></expr>)</condition><block pos:start="23:18" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:33">  <comment type="line" pos:start="23:21" pos:end="23:52">// not frame as a part of packet</comment>

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:11">seq</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:25"><name pos:start="25:15" pos:end="25:21">avio_r8</name><argument_list pos:start="25:22" pos:end="25:25">(<argument pos:start="25:23" pos:end="25:24"><expr pos:start="25:23" pos:end="25:24"><name pos:start="25:23" pos:end="25:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="25:28" pos:end="25:33"><expr pos:start="25:28" pos:end="25:32"><name pos:start="25:28" pos:end="25:30">len</name><operator pos:start="25:31" pos:end="25:32">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if<condition pos:start="29:7" pos:end="29:17">(<expr pos:start="29:8" pos:end="29:16"><name pos:start="29:8" pos:end="29:11">type</name> <operator pos:start="29:13" pos:end="29:14">!=</operator> <literal type="number" pos:start="29:16" pos:end="29:16">1</literal></expr>)</condition><block pos:start="29:18" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:37">  <comment type="line" pos:start="29:21" pos:end="29:38">// not whole frame</comment>

        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:12">len2</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:32"><name pos:start="31:16" pos:end="31:22">get_num</name><argument_list pos:start="31:23" pos:end="31:32">(<argument pos:start="31:24" pos:end="31:25"><expr pos:start="31:24" pos:end="31:25"><name pos:start="31:24" pos:end="31:25">pb</name></expr></argument>, <argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:33"><expr pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:11">pos</name>  <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:32"><name pos:start="33:16" pos:end="33:22">get_num</name><argument_list pos:start="33:23" pos:end="33:32">(<argument pos:start="33:24" pos:end="33:25"><expr pos:start="33:24" pos:end="33:25"><name pos:start="33:24" pos:end="33:25">pb</name></expr></argument>, <argument pos:start="33:28" pos:end="33:31"><expr pos:start="33:28" pos:end="33:31"><operator pos:start="33:28" pos:end="33:28">&amp;</operator><name pos:start="33:29" pos:end="33:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:30"><expr pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:15">pic_num</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:29"><name pos:start="35:19" pos:end="35:25">avio_r8</name><argument_list pos:start="35:26" pos:end="35:29">(<argument pos:start="35:27" pos:end="35:28"><expr pos:start="35:27" pos:end="35:28"><name pos:start="35:27" pos:end="35:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="35:32" pos:end="35:37"><expr pos:start="35:32" pos:end="35:36"><name pos:start="35:32" pos:end="35:34">len</name><operator pos:start="35:35" pos:end="35:36">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:18"><if pos:start="39:5" pos:end="41:18">if<condition pos:start="39:7" pos:end="39:13">(<expr pos:start="39:8" pos:end="39:12"><name pos:start="39:8" pos:end="39:10">len</name><operator pos:start="39:11" pos:end="39:11">&lt;</operator><literal type="number" pos:start="39:12" pos:end="39:12">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:21"><name pos:start="43:5" pos:end="43:6">rm</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:21">remaining_len</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:27">len</name></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="75:5"><if pos:start="45:5" pos:end="75:5">if<condition pos:start="45:7" pos:end="45:14">(<expr pos:start="45:8" pos:end="45:13"><name pos:start="45:8" pos:end="45:11">type</name><operator pos:start="45:12" pos:end="45:12">&amp;</operator><literal type="number" pos:start="45:13" pos:end="45:13">1</literal></expr>)</condition><block pos:start="45:15" pos:end="75:5">{<block_content pos:start="47:9" pos:end="73:17">     <comment type="line" pos:start="45:21" pos:end="45:39">// frame, not slice</comment>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if<condition pos:start="47:11" pos:end="47:21">(<expr pos:start="47:12" pos:end="47:20"><name pos:start="47:12" pos:end="47:15">type</name> <operator pos:start="47:17" pos:end="47:18">==</operator> <literal type="number" pos:start="47:20" pos:end="47:20">3</literal></expr>)</condition><block pos:start="47:22" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:29">  <comment type="line" pos:start="47:25" pos:end="47:52">// frame as a part of packet</comment>

            <expr_stmt pos:start="49:13" pos:end="49:22"><expr pos:start="49:13" pos:end="49:21"><name pos:start="49:13" pos:end="49:15">len</name><operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:21">len2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:29"><expr pos:start="51:13" pos:end="51:28"><operator pos:start="51:13" pos:end="51:13">*</operator><name pos:start="51:14" pos:end="51:22">timestamp</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:28">pos</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="55:9" pos:end="57:22"><if pos:start="55:9" pos:end="57:22">if<condition pos:start="55:11" pos:end="55:35">(<expr pos:start="55:12" pos:end="55:34"><name pos:start="55:12" pos:end="55:28"><name pos:start="55:12" pos:end="55:13">rm</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:28">remaining_len</name></name> <operator pos:start="55:30" pos:end="55:30">&lt;</operator> <name pos:start="55:32" pos:end="55:34">len</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:22"><block_content pos:start="57:13" pos:end="57:22">

            <return pos:start="57:13" pos:end="57:22">return <expr pos:start="57:20" pos:end="57:21"><operator pos:start="57:20" pos:end="57:20">-</operator><literal type="number" pos:start="57:21" pos:end="57:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:33"><expr pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:10">rm</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:25">remaining_len</name></name> <operator pos:start="59:27" pos:end="59:28">-=</operator> <name pos:start="59:30" pos:end="59:32">len</name></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="63:32"><if pos:start="61:9" pos:end="63:32">if<condition pos:start="61:11" pos:end="61:43">(<expr pos:start="61:12" pos:end="61:42"><call pos:start="61:12" pos:end="61:38"><name pos:start="61:12" pos:end="61:24">av_new_packet</name><argument_list pos:start="61:25" pos:end="61:38">(<argument pos:start="61:26" pos:end="61:28"><expr pos:start="61:26" pos:end="61:28"><name pos:start="61:26" pos:end="61:28">pkt</name></expr></argument>, <argument pos:start="61:31" pos:end="61:37"><expr pos:start="61:31" pos:end="61:37"><name pos:start="61:31" pos:end="61:33">len</name> <operator pos:start="61:35" pos:end="61:35">+</operator> <literal type="number" pos:start="61:37" pos:end="61:37">9</literal></expr></argument>)</argument_list></call> <operator pos:start="61:40" pos:end="61:40">&lt;</operator> <literal type="number" pos:start="61:42" pos:end="61:42">0</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:32"><block_content pos:start="63:13" pos:end="63:32">

            <return pos:start="63:13" pos:end="63:32">return <expr pos:start="63:20" pos:end="63:31"><call pos:start="63:20" pos:end="63:31"><name pos:start="63:20" pos:end="63:26">AVERROR</name><argument_list pos:start="63:27" pos:end="63:31">(<argument pos:start="63:28" pos:end="63:30"><expr pos:start="63:28" pos:end="63:30"><name pos:start="63:28" pos:end="63:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:25"><expr pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:11">pkt</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:17">data</name><index pos:start="65:18" pos:end="65:20">[<expr pos:start="65:19" pos:end="65:19"><literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr>]</index></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <literal type="number" pos:start="65:24" pos:end="65:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:34"><expr pos:start="67:9" pos:end="67:33"><call pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:15">AV_WL32</name><argument_list pos:start="67:16" pos:end="67:33">(<argument pos:start="67:17" pos:end="67:29"><expr pos:start="67:17" pos:end="67:29"><name pos:start="67:17" pos:end="67:25"><name pos:start="67:17" pos:end="67:19">pkt</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:25">data</name></name> <operator pos:start="67:27" pos:end="67:27">+</operator> <literal type="number" pos:start="67:29" pos:end="67:29">1</literal></expr></argument>, <argument pos:start="67:32" pos:end="67:32"><expr pos:start="67:32" pos:end="67:32"><literal type="number" pos:start="67:32" pos:end="67:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:34"><expr pos:start="69:9" pos:end="69:33"><call pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:15">AV_WL32</name><argument_list pos:start="69:16" pos:end="69:33">(<argument pos:start="69:17" pos:end="69:29"><expr pos:start="69:17" pos:end="69:29"><name pos:start="69:17" pos:end="69:25"><name pos:start="69:17" pos:end="69:19">pkt</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:25">data</name></name> <operator pos:start="69:27" pos:end="69:27">+</operator> <literal type="number" pos:start="69:29" pos:end="69:29">5</literal></expr></argument>, <argument pos:start="69:32" pos:end="69:32"><expr pos:start="69:32" pos:end="69:32"><literal type="number" pos:start="69:32" pos:end="69:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:42"><expr pos:start="71:9" pos:end="71:41"><call pos:start="71:9" pos:end="71:41"><name pos:start="71:9" pos:end="71:17">avio_read</name><argument_list pos:start="71:18" pos:end="71:41">(<argument pos:start="71:19" pos:end="71:20"><expr pos:start="71:19" pos:end="71:20"><name pos:start="71:19" pos:end="71:20">pb</name></expr></argument>, <argument pos:start="71:23" pos:end="71:35"><expr pos:start="71:23" pos:end="71:35"><name pos:start="71:23" pos:end="71:31"><name pos:start="71:23" pos:end="71:25">pkt</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:31">data</name></name> <operator pos:start="71:33" pos:end="71:33">+</operator> <literal type="number" pos:start="71:35" pos:end="71:35">9</literal></expr></argument>, <argument pos:start="71:38" pos:end="71:40"><expr pos:start="71:38" pos:end="71:40"><name pos:start="71:38" pos:end="71:40">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:17">return <expr pos:start="73:16" pos:end="73:16"><literal type="number" pos:start="73:16" pos:end="73:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="77:5" pos:end="77:43">//now we have to deal with single slice</comment>



    <expr_stmt pos:start="81:5" pos:end="81:16"><expr pos:start="81:5" pos:end="81:15"><operator pos:start="81:5" pos:end="81:5">*</operator><name pos:start="81:6" pos:end="81:9">pseq</name> <operator pos:start="81:11" pos:end="81:11">=</operator> <name pos:start="81:13" pos:end="81:15">seq</name></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="103:5"><if pos:start="83:5" pos:end="103:5">if<condition pos:start="83:7" pos:end="83:55">(<expr pos:start="83:8" pos:end="83:54"><operator pos:start="83:8" pos:end="83:8">(</operator><name pos:start="83:9" pos:end="83:11">seq</name> <operator pos:start="83:13" pos:end="83:13">&amp;</operator> <literal type="number" pos:start="83:15" pos:end="83:18">0x7F</literal><operator pos:start="83:19" pos:end="83:19">)</operator> <operator pos:start="83:21" pos:end="83:22">==</operator> <literal type="number" pos:start="83:24" pos:end="83:24">1</literal> <operator pos:start="83:26" pos:end="83:27">||</operator> <name pos:start="83:29" pos:end="83:43"><name pos:start="83:29" pos:end="83:31">vst</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:43">curpic_num</name></name> <operator pos:start="83:45" pos:end="83:46">!=</operator> <name pos:start="83:48" pos:end="83:54">pic_num</name></expr>)</condition><block pos:start="83:56" pos:end="103:5">{<block_content pos:start="85:9" pos:end="101:36">

        <expr_stmt pos:start="85:9" pos:end="85:46"><expr pos:start="85:9" pos:end="85:45"><name pos:start="85:9" pos:end="85:19"><name pos:start="85:9" pos:end="85:11">vst</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:19">slices</name></name> <operator pos:start="85:21" pos:end="85:21">=</operator> <operator pos:start="85:23" pos:end="85:23">(</operator><operator pos:start="85:24" pos:end="85:24">(</operator><name pos:start="85:25" pos:end="85:27">hdr</name> <operator pos:start="85:29" pos:end="85:29">&amp;</operator> <literal type="number" pos:start="85:31" pos:end="85:34">0x3F</literal><operator pos:start="85:35" pos:end="85:35">)</operator> <operator pos:start="85:37" pos:end="85:38">&lt;&lt;</operator> <literal type="number" pos:start="85:40" pos:end="85:40">1</literal><operator pos:start="85:41" pos:end="85:41">)</operator> <operator pos:start="85:43" pos:end="85:43">+</operator> <literal type="number" pos:start="85:45" pos:end="85:45">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:53"><expr pos:start="87:9" pos:end="87:52"><name pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:11">vst</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:25">videobufsize</name></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <name pos:start="87:29" pos:end="87:32">len2</name> <operator pos:start="87:34" pos:end="87:34">+</operator> <literal type="number" pos:start="87:36" pos:end="87:36">8</literal><operator pos:start="87:37" pos:end="87:37">*</operator><name pos:start="87:38" pos:end="87:48"><name pos:start="87:38" pos:end="87:40">vst</name><operator pos:start="87:41" pos:end="87:42">-&gt;</operator><name pos:start="87:43" pos:end="87:48">slices</name></name> <operator pos:start="87:50" pos:end="87:50">+</operator> <literal type="number" pos:start="87:52" pos:end="87:52">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:34"><expr pos:start="89:9" pos:end="89:33"><call pos:start="89:9" pos:end="89:33"><name pos:start="89:9" pos:end="89:22">av_free_packet</name><argument_list pos:start="89:23" pos:end="89:33">(<argument pos:start="89:24" pos:end="89:32"><expr pos:start="89:24" pos:end="89:32"><operator pos:start="89:24" pos:end="89:24">&amp;</operator><name pos:start="89:25" pos:end="89:32"><name pos:start="89:25" pos:end="89:27">vst</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:32">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="89:36" pos:end="89:65">//FIXME this should be output.</comment>

        <if_stmt pos:start="91:9" pos:end="93:35"><if pos:start="91:9" pos:end="93:35">if<condition pos:start="91:11" pos:end="91:59">(<expr pos:start="91:12" pos:end="91:58"><call pos:start="91:12" pos:end="91:54"><name pos:start="91:12" pos:end="91:24">av_new_packet</name><argument_list pos:start="91:25" pos:end="91:54">(<argument pos:start="91:26" pos:end="91:34"><expr pos:start="91:26" pos:end="91:34"><operator pos:start="91:26" pos:end="91:26">&amp;</operator><name pos:start="91:27" pos:end="91:34"><name pos:start="91:27" pos:end="91:29">vst</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:34">pkt</name></name></expr></argument>, <argument pos:start="91:37" pos:end="91:53"><expr pos:start="91:37" pos:end="91:53"><name pos:start="91:37" pos:end="91:53"><name pos:start="91:37" pos:end="91:39">vst</name><operator pos:start="91:40" pos:end="91:41">-&gt;</operator><name pos:start="91:42" pos:end="91:53">videobufsize</name></name></expr></argument>)</argument_list></call> <operator pos:start="91:56" pos:end="91:56">&lt;</operator> <literal type="number" pos:start="91:58" pos:end="91:58">0</literal></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:35"><block_content pos:start="93:13" pos:end="93:35">

            <return pos:start="93:13" pos:end="93:35">return <expr pos:start="93:20" pos:end="93:34"><call pos:start="93:20" pos:end="93:34"><name pos:start="93:20" pos:end="93:26">AVERROR</name><argument_list pos:start="93:27" pos:end="93:34">(<argument pos:start="93:28" pos:end="93:33"><expr pos:start="93:28" pos:end="93:33"><name pos:start="93:28" pos:end="93:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:45"><expr pos:start="95:9" pos:end="95:44"><name pos:start="95:9" pos:end="95:24"><name pos:start="95:9" pos:end="95:11">vst</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:24">videobufpos</name></name> <operator pos:start="95:26" pos:end="95:26">=</operator> <literal type="number" pos:start="95:28" pos:end="95:28">8</literal><operator pos:start="95:29" pos:end="95:29">*</operator><name pos:start="95:30" pos:end="95:40"><name pos:start="95:30" pos:end="95:32">vst</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:40">slices</name></name> <operator pos:start="95:42" pos:end="95:42">+</operator> <literal type="number" pos:start="95:44" pos:end="95:44">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:27"><expr pos:start="97:9" pos:end="97:26"><name pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:11">vst</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:22">cur_slice</name></name> <operator pos:start="97:24" pos:end="97:24">=</operator> <literal type="number" pos:start="97:26" pos:end="97:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:34"><expr pos:start="99:9" pos:end="99:33"><name pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:11">vst</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:23">curpic_num</name></name> <operator pos:start="99:25" pos:end="99:25">=</operator> <name pos:start="99:27" pos:end="99:33">pic_num</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:36"><expr pos:start="101:9" pos:end="101:35"><name pos:start="101:9" pos:end="101:19"><name pos:start="101:9" pos:end="101:11">vst</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:19">pktpos</name></name> <operator pos:start="101:21" pos:end="101:21">=</operator> <call pos:start="101:23" pos:end="101:35"><name pos:start="101:23" pos:end="101:31">avio_tell</name><argument_list pos:start="101:32" pos:end="101:35">(<argument pos:start="101:33" pos:end="101:34"><expr pos:start="101:33" pos:end="101:34"><name pos:start="101:33" pos:end="101:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="105:5" pos:end="107:30"><if pos:start="105:5" pos:end="107:30">if<condition pos:start="105:7" pos:end="105:17">(<expr pos:start="105:8" pos:end="105:16"><name pos:start="105:8" pos:end="105:11">type</name> <operator pos:start="105:13" pos:end="105:14">==</operator> <literal type="number" pos:start="105:16" pos:end="105:16">2</literal></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:30"><block_content pos:start="107:9" pos:end="107:30">

        <expr_stmt pos:start="107:9" pos:end="107:30"><expr pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:11">len</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:29"><name pos:start="107:15" pos:end="107:19">FFMIN</name><argument_list pos:start="107:20" pos:end="107:29">(<argument pos:start="107:21" pos:end="107:23"><expr pos:start="107:21" pos:end="107:23"><name pos:start="107:21" pos:end="107:23">len</name></expr></argument>, <argument pos:start="107:26" pos:end="107:28"><expr pos:start="107:26" pos:end="107:28"><name pos:start="107:26" pos:end="107:28">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="113:17"><if pos:start="111:5" pos:end="113:17">if<condition pos:start="111:7" pos:end="111:38">(<expr pos:start="111:8" pos:end="111:37"><operator pos:start="111:8" pos:end="111:9">++</operator><name pos:start="111:10" pos:end="111:23"><name pos:start="111:10" pos:end="111:12">vst</name><operator pos:start="111:13" pos:end="111:14">-&gt;</operator><name pos:start="111:15" pos:end="111:23">cur_slice</name></name> <operator pos:start="111:25" pos:end="111:25">&gt;</operator> <name pos:start="111:27" pos:end="111:37"><name pos:start="111:27" pos:end="111:29">vst</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:37">slices</name></name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:17"><block_content pos:start="113:9" pos:end="113:17">

        <return pos:start="113:9" pos:end="113:17">return <expr pos:start="113:16" pos:end="113:16"><literal type="number" pos:start="113:16" pos:end="113:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:53"><expr pos:start="115:5" pos:end="115:52"><call pos:start="115:5" pos:end="115:52"><name pos:start="115:5" pos:end="115:11">AV_WL32</name><argument_list pos:start="115:12" pos:end="115:52">(<argument pos:start="115:13" pos:end="115:48"><expr pos:start="115:13" pos:end="115:48"><name pos:start="115:13" pos:end="115:25"><name pos:start="115:13" pos:end="115:15">vst</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:20">pkt</name><operator pos:start="115:21" pos:end="115:21">.</operator><name pos:start="115:22" pos:end="115:25">data</name></name> <operator pos:start="115:27" pos:end="115:27">-</operator> <literal type="number" pos:start="115:29" pos:end="115:31">7</literal> <operator pos:start="115:31" pos:end="115:31">+</operator> <literal type="number" pos:start="115:33" pos:end="115:33">8</literal><operator pos:start="115:34" pos:end="115:34">*</operator><name pos:start="115:35" pos:end="115:48"><name pos:start="115:35" pos:end="115:37">vst</name><operator pos:start="115:38" pos:end="115:39">-&gt;</operator><name pos:start="115:40" pos:end="115:48">cur_slice</name></name></expr></argument>, <argument pos:start="115:51" pos:end="115:51"><expr pos:start="115:51" pos:end="115:51"><literal type="number" pos:start="115:51" pos:end="115:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:88"><expr pos:start="117:5" pos:end="117:87"><call pos:start="117:5" pos:end="117:87"><name pos:start="117:5" pos:end="117:11">AV_WL32</name><argument_list pos:start="117:12" pos:end="117:87">(<argument pos:start="117:13" pos:end="117:48"><expr pos:start="117:13" pos:end="117:48"><name pos:start="117:13" pos:end="117:25"><name pos:start="117:13" pos:end="117:15">vst</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:20">pkt</name><operator pos:start="117:21" pos:end="117:21">.</operator><name pos:start="117:22" pos:end="117:25">data</name></name> <operator pos:start="117:27" pos:end="117:27">-</operator> <literal type="number" pos:start="117:29" pos:end="117:31">3</literal> <operator pos:start="117:31" pos:end="117:31">+</operator> <literal type="number" pos:start="117:33" pos:end="117:33">8</literal><operator pos:start="117:34" pos:end="117:34">*</operator><name pos:start="117:35" pos:end="117:48"><name pos:start="117:35" pos:end="117:37">vst</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:48">cur_slice</name></name></expr></argument>, <argument pos:start="117:51" pos:end="117:86"><expr pos:start="117:51" pos:end="117:86"><name pos:start="117:51" pos:end="117:66"><name pos:start="117:51" pos:end="117:53">vst</name><operator pos:start="117:54" pos:end="117:55">-&gt;</operator><name pos:start="117:56" pos:end="117:66">videobufpos</name></name> <operator pos:start="117:68" pos:end="117:68">-</operator> <literal type="number" pos:start="117:70" pos:end="117:70">8</literal><operator pos:start="117:71" pos:end="117:71">*</operator><name pos:start="117:72" pos:end="117:82"><name pos:start="117:72" pos:end="117:74">vst</name><operator pos:start="117:75" pos:end="117:76">-&gt;</operator><name pos:start="117:77" pos:end="117:82">slices</name></name> <operator pos:start="117:84" pos:end="117:84">-</operator> <literal type="number" pos:start="117:86" pos:end="117:86">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="121:17"><if pos:start="119:5" pos:end="121:17">if<condition pos:start="119:7" pos:end="119:50">(<expr pos:start="119:8" pos:end="119:49"><name pos:start="119:8" pos:end="119:23"><name pos:start="119:8" pos:end="119:10">vst</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:23">videobufpos</name></name> <operator pos:start="119:25" pos:end="119:25">+</operator> <name pos:start="119:27" pos:end="119:29">len</name> <operator pos:start="119:31" pos:end="119:31">&gt;</operator> <name pos:start="119:33" pos:end="119:49"><name pos:start="119:33" pos:end="119:35">vst</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:49">videobufsize</name></name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:17"><block_content pos:start="121:9" pos:end="121:17">

        <return pos:start="121:9" pos:end="121:17">return <expr pos:start="121:16" pos:end="121:16"><literal type="number" pos:start="121:16" pos:end="121:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="123:5" pos:end="125:28"><if pos:start="123:5" pos:end="125:28">if <condition pos:start="123:8" pos:end="123:68">(<expr pos:start="123:9" pos:end="123:67"><call pos:start="123:9" pos:end="123:60"><name pos:start="123:9" pos:end="123:17">avio_read</name><argument_list pos:start="123:18" pos:end="123:60">(<argument pos:start="123:19" pos:end="123:20"><expr pos:start="123:19" pos:end="123:20"><name pos:start="123:19" pos:end="123:20">pb</name></expr></argument>, <argument pos:start="123:23" pos:end="123:54"><expr pos:start="123:23" pos:end="123:54"><name pos:start="123:23" pos:end="123:35"><name pos:start="123:23" pos:end="123:25">vst</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:30">pkt</name><operator pos:start="123:31" pos:end="123:31">.</operator><name pos:start="123:32" pos:end="123:35">data</name></name> <operator pos:start="123:37" pos:end="123:37">+</operator> <name pos:start="123:39" pos:end="123:54"><name pos:start="123:39" pos:end="123:41">vst</name><operator pos:start="123:42" pos:end="123:43">-&gt;</operator><name pos:start="123:44" pos:end="123:54">videobufpos</name></name></expr></argument>, <argument pos:start="123:57" pos:end="123:59"><expr pos:start="123:57" pos:end="123:59"><name pos:start="123:57" pos:end="123:59">len</name></expr></argument>)</argument_list></call> <operator pos:start="123:62" pos:end="123:63">!=</operator> <name pos:start="123:65" pos:end="123:67">len</name></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="125:28"><block_content pos:start="125:9" pos:end="125:28">

        <return pos:start="125:9" pos:end="125:28">return <expr pos:start="125:16" pos:end="125:27"><call pos:start="125:16" pos:end="125:27"><name pos:start="125:16" pos:end="125:22">AVERROR</name><argument_list pos:start="125:23" pos:end="125:27">(<argument pos:start="125:24" pos:end="125:26"><expr pos:start="125:24" pos:end="125:26"><name pos:start="125:24" pos:end="125:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:28"><expr pos:start="127:5" pos:end="127:27"><name pos:start="127:5" pos:end="127:20"><name pos:start="127:5" pos:end="127:7">vst</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:20">videobufpos</name></name> <operator pos:start="127:22" pos:end="127:23">+=</operator> <name pos:start="127:25" pos:end="127:27">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:28"><expr pos:start="129:5" pos:end="129:27"><name pos:start="129:5" pos:end="129:21"><name pos:start="129:5" pos:end="129:6">rm</name><operator pos:start="129:7" pos:end="129:8">-&gt;</operator><name pos:start="129:9" pos:end="129:21">remaining_len</name></name><operator pos:start="129:22" pos:end="129:23">-=</operator> <name pos:start="129:25" pos:end="129:27">len</name></expr>;</expr_stmt>



    <if_stmt pos:start="133:5" pos:end="159:5"><if pos:start="133:5" pos:end="159:5">if <condition pos:start="133:8" pos:end="133:59">(<expr pos:start="133:9" pos:end="133:58"><name pos:start="133:9" pos:end="133:12">type</name> <operator pos:start="133:14" pos:end="133:15">==</operator> <literal type="number" pos:start="133:17" pos:end="133:17">2</literal> <operator pos:start="133:19" pos:end="133:20">||</operator> <name pos:start="133:22" pos:end="133:37"><name pos:start="133:22" pos:end="133:24">vst</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:37">videobufpos</name></name> <operator pos:start="133:39" pos:end="133:40">==</operator> <name pos:start="133:42" pos:end="133:58"><name pos:start="133:42" pos:end="133:44">vst</name><operator pos:start="133:45" pos:end="133:46">-&gt;</operator><name pos:start="133:47" pos:end="133:58">videobufsize</name></name></expr>)</condition> <block pos:start="133:61" pos:end="159:5">{<block_content pos:start="135:9" pos:end="157:17">

        <expr_stmt pos:start="135:9" pos:end="135:44"><expr pos:start="135:9" pos:end="135:43"><name pos:start="135:9" pos:end="135:24"><name pos:start="135:9" pos:end="135:11">vst</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:16">pkt</name><operator pos:start="135:17" pos:end="135:17">.</operator><name pos:start="135:18" pos:end="135:21">data</name><index pos:start="135:22" pos:end="135:24">[<expr pos:start="135:23" pos:end="135:23"><literal type="number" pos:start="135:23" pos:end="135:23">0</literal></expr>]</index></name> <operator pos:start="135:26" pos:end="135:26">=</operator> <name pos:start="135:28" pos:end="135:41"><name pos:start="135:28" pos:end="135:30">vst</name><operator pos:start="135:31" pos:end="135:32">-&gt;</operator><name pos:start="135:33" pos:end="135:41">cur_slice</name></name><operator pos:start="135:42" pos:end="135:42">-</operator><literal type="number" pos:start="135:43" pos:end="135:43">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:23"><expr pos:start="137:9" pos:end="137:22"><operator pos:start="137:9" pos:end="137:9">*</operator><name pos:start="137:10" pos:end="137:12">pkt</name><operator pos:start="137:13" pos:end="137:13">=</operator> <name pos:start="137:15" pos:end="137:22"><name pos:start="137:15" pos:end="137:17">vst</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:22">pkt</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:28"><expr pos:start="139:9" pos:end="139:27"><name pos:start="139:9" pos:end="139:21"><name pos:start="139:9" pos:end="139:11">vst</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:16">pkt</name><operator pos:start="139:17" pos:end="139:17">.</operator><name pos:start="139:18" pos:end="139:21">data</name></name><operator pos:start="139:22" pos:end="139:22">=</operator> <name pos:start="139:24" pos:end="139:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:25"><expr pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:11">vst</name><operator pos:start="141:12" pos:end="141:13">-&gt;</operator><name pos:start="141:14" pos:end="141:16">pkt</name><operator pos:start="141:17" pos:end="141:17">.</operator><name pos:start="141:18" pos:end="141:21">size</name></name><operator pos:start="141:22" pos:end="141:22">=</operator> <literal type="number" pos:start="141:24" pos:end="141:24">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="143:9" pos:end="147:54"><if pos:start="143:9" pos:end="147:54">if<condition pos:start="143:11" pos:end="143:41">(<expr pos:start="143:12" pos:end="143:40"><name pos:start="143:12" pos:end="143:22"><name pos:start="143:12" pos:end="143:14">vst</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:22">slices</name></name> <operator pos:start="143:24" pos:end="143:25">!=</operator> <name pos:start="143:27" pos:end="143:40"><name pos:start="143:27" pos:end="143:29">vst</name><operator pos:start="143:30" pos:end="143:31">-&gt;</operator><name pos:start="143:32" pos:end="143:40">cur_slice</name></name></expr>)</condition><block type="pseudo" pos:start="145:13" pos:end="147:54"><block_content pos:start="145:13" pos:end="147:54"> <comment type="line" pos:start="143:43" pos:end="143:99">//FIXME find out how to set slices correct from the begin</comment>

            <expr_stmt pos:start="145:13" pos:end="147:54"><expr pos:start="145:13" pos:end="147:53"><call pos:start="145:13" pos:end="147:53"><name pos:start="145:13" pos:end="145:19">memmove</name><argument_list pos:start="145:20" pos:end="147:53">(<argument pos:start="145:21" pos:end="145:52"><expr pos:start="145:21" pos:end="145:52"><name pos:start="145:21" pos:end="145:29"><name pos:start="145:21" pos:end="145:23">pkt</name><operator pos:start="145:24" pos:end="145:25">-&gt;</operator><name pos:start="145:26" pos:end="145:29">data</name></name> <operator pos:start="145:31" pos:end="145:31">+</operator> <literal type="number" pos:start="145:33" pos:end="145:35">1</literal> <operator pos:start="145:35" pos:end="145:35">+</operator> <literal type="number" pos:start="145:37" pos:end="145:37">8</literal><operator pos:start="145:38" pos:end="145:38">*</operator><name pos:start="145:39" pos:end="145:52"><name pos:start="145:39" pos:end="145:41">vst</name><operator pos:start="145:42" pos:end="145:43">-&gt;</operator><name pos:start="145:44" pos:end="145:52">cur_slice</name></name></expr></argument>, <argument pos:start="145:55" pos:end="145:83"><expr pos:start="145:55" pos:end="145:83"><name pos:start="145:55" pos:end="145:63"><name pos:start="145:55" pos:end="145:57">pkt</name><operator pos:start="145:58" pos:end="145:59">-&gt;</operator><name pos:start="145:60" pos:end="145:63">data</name></name> <operator pos:start="145:65" pos:end="145:65">+</operator> <literal type="number" pos:start="145:67" pos:end="145:69">1</literal> <operator pos:start="145:69" pos:end="145:69">+</operator> <literal type="number" pos:start="145:71" pos:end="145:71">8</literal><operator pos:start="145:72" pos:end="145:72">*</operator><name pos:start="145:73" pos:end="145:83"><name pos:start="145:73" pos:end="145:75">vst</name><operator pos:start="145:76" pos:end="145:77">-&gt;</operator><name pos:start="145:78" pos:end="145:83">slices</name></name></expr></argument>,

                <argument pos:start="147:17" pos:end="147:52"><expr pos:start="147:17" pos:end="147:52"><name pos:start="147:17" pos:end="147:32"><name pos:start="147:17" pos:end="147:19">vst</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:32">videobufpos</name></name> <operator pos:start="147:34" pos:end="147:34">-</operator> <literal type="number" pos:start="147:36" pos:end="147:38">1</literal> <operator pos:start="147:38" pos:end="147:38">-</operator> <literal type="number" pos:start="147:40" pos:end="147:40">8</literal><operator pos:start="147:41" pos:end="147:41">*</operator><name pos:start="147:42" pos:end="147:52"><name pos:start="147:42" pos:end="147:44">vst</name><operator pos:start="147:45" pos:end="147:46">-&gt;</operator><name pos:start="147:47" pos:end="147:52">slices</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:72"><expr pos:start="149:9" pos:end="149:71"><name pos:start="149:9" pos:end="149:17"><name pos:start="149:9" pos:end="149:11">pkt</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:17">size</name></name> <operator pos:start="149:19" pos:end="149:19">=</operator> <name pos:start="149:21" pos:end="149:36"><name pos:start="149:21" pos:end="149:23">vst</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:36">videobufpos</name></name> <operator pos:start="149:38" pos:end="149:38">+</operator> <literal type="number" pos:start="149:40" pos:end="149:40">8</literal><operator pos:start="149:41" pos:end="149:41">*</operator><operator pos:start="149:42" pos:end="149:42">(</operator><name pos:start="149:43" pos:end="149:56"><name pos:start="149:43" pos:end="149:45">vst</name><operator pos:start="149:46" pos:end="149:47">-&gt;</operator><name pos:start="149:48" pos:end="149:56">cur_slice</name></name> <operator pos:start="149:58" pos:end="149:58">-</operator> <name pos:start="149:60" pos:end="149:70"><name pos:start="149:60" pos:end="149:62">vst</name><operator pos:start="149:63" pos:end="149:64">-&gt;</operator><name pos:start="149:65" pos:end="149:70">slices</name></name><operator pos:start="149:71" pos:end="149:71">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:34"><expr pos:start="151:9" pos:end="151:33"><name pos:start="151:9" pos:end="151:16"><name pos:start="151:9" pos:end="151:11">pkt</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:16">pts</name></name> <operator pos:start="151:18" pos:end="151:18">=</operator> <name pos:start="151:20" pos:end="151:33">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:31"><expr pos:start="153:9" pos:end="153:30"><name pos:start="153:9" pos:end="153:16"><name pos:start="153:9" pos:end="153:11">pkt</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:16">pos</name></name> <operator pos:start="153:18" pos:end="153:18">=</operator> <name pos:start="153:20" pos:end="153:30"><name pos:start="153:20" pos:end="153:22">vst</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:30">pktpos</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:24"><expr pos:start="155:9" pos:end="155:23"><name pos:start="155:9" pos:end="155:19"><name pos:start="155:9" pos:end="155:11">vst</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:19">slices</name></name> <operator pos:start="155:21" pos:end="155:21">=</operator> <literal type="number" pos:start="155:23" pos:end="155:23">0</literal></expr>;</expr_stmt>

        <return pos:start="157:9" pos:end="157:17">return <expr pos:start="157:16" pos:end="157:16"><literal type="number" pos:start="157:16" pos:end="157:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="163:5" pos:end="163:13">return <expr pos:start="163:12" pos:end="163:12"><literal type="number" pos:start="163:12" pos:end="163:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
