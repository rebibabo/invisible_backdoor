<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4369.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">av_dynarray_add</name><parameter_list pos:start="1:21" pos:end="1:60">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:25">void</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:34">tab_ptr</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:47"><decl pos:start="1:37" pos:end="1:47"><type pos:start="1:37" pos:end="1:47"><name pos:start="1:37" pos:end="1:39">int</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">nb_ptr</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:59"><decl pos:start="1:50" pos:end="1:59"><type pos:start="1:50" pos:end="1:59"><name pos:start="1:50" pos:end="1:53">void</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">elem</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:17">

    <comment type="block" pos:start="5:5" pos:end="5:43">/* see similar ffmpeg.c:grow_array() */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">nb</name></decl>, <decl pos:start="7:13" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:20">nb_alloc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">intptr_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">tab</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:6">nb</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <operator pos:start="13:10" pos:end="13:10">*</operator><name pos:start="13:11" pos:end="13:16">nb_ptr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:7">tab</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <operator pos:start="15:11" pos:end="15:11">*</operator><operator pos:start="15:12" pos:end="15:12">(</operator><name pos:start="15:13" pos:end="15:20">intptr_t</name><operator pos:start="15:21" pos:end="15:21">*</operator><operator pos:start="15:22" pos:end="15:22">*</operator><operator pos:start="15:23" pos:end="15:23">)</operator><name pos:start="15:24" pos:end="15:30">tab_ptr</name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="31:5"><if pos:start="17:5" pos:end="31:5">if <condition pos:start="17:8" pos:end="17:29">(<expr pos:start="17:9" pos:end="17:28"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:11">nb</name> <operator pos:start="17:13" pos:end="17:13">&amp;</operator> <operator pos:start="17:15" pos:end="17:15">(</operator><name pos:start="17:16" pos:end="17:17">nb</name> <operator pos:start="17:19" pos:end="17:19">-</operator> <literal type="number" pos:start="17:21" pos:end="17:21">1</literal><operator pos:start="17:22" pos:end="17:22">)</operator><operator pos:start="17:23" pos:end="17:23">)</operator> <operator pos:start="17:25" pos:end="17:26">==</operator> <literal type="number" pos:start="17:28" pos:end="17:28">0</literal></expr>)</condition> <block pos:start="17:31" pos:end="31:5">{<block_content pos:start="19:9" pos:end="29:35">

        <if_stmt pos:start="19:9" pos:end="25:30"><if pos:start="19:9" pos:end="21:25">if <condition pos:start="19:12" pos:end="19:20">(<expr pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:14">nb</name> <operator pos:start="19:16" pos:end="19:17">==</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:25"><block_content pos:start="21:13" pos:end="21:25">

            <expr_stmt pos:start="21:13" pos:end="21:25"><expr pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:20">nb_alloc</name> <operator pos:start="21:22" pos:end="21:22">=</operator> <literal type="number" pos:start="21:24" pos:end="21:24">1</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="23:9" pos:end="25:30">else<block type="pseudo" pos:start="25:13" pos:end="25:30"><block_content pos:start="25:13" pos:end="25:30">

            <expr_stmt pos:start="25:13" pos:end="25:30"><expr pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:20">nb_alloc</name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:25">nb</name> <operator pos:start="25:27" pos:end="25:27">*</operator> <literal type="number" pos:start="25:29" pos:end="25:29">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:59"><expr pos:start="27:9" pos:end="27:58"><name pos:start="27:9" pos:end="27:11">tab</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:58"><name pos:start="27:15" pos:end="27:24">av_realloc</name><argument_list pos:start="27:25" pos:end="27:58">(<argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">tab</name></expr></argument>, <argument pos:start="27:31" pos:end="27:57"><expr pos:start="27:31" pos:end="27:57"><name pos:start="27:31" pos:end="27:38">nb_alloc</name> <operator pos:start="27:40" pos:end="27:40">*</operator> <sizeof pos:start="27:42" pos:end="27:57">sizeof<argument_list pos:start="27:48" pos:end="27:57">(<argument pos:start="27:49" pos:end="27:56"><expr pos:start="27:49" pos:end="27:56"><name pos:start="27:49" pos:end="27:56">intptr_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><operator pos:start="29:9" pos:end="29:9">*</operator><operator pos:start="29:10" pos:end="29:10">(</operator><name pos:start="29:11" pos:end="29:18">intptr_t</name><operator pos:start="29:19" pos:end="29:19">*</operator><operator pos:start="29:20" pos:end="29:20">*</operator><operator pos:start="29:21" pos:end="29:21">)</operator><name pos:start="29:22" pos:end="29:28">tab_ptr</name> <operator pos:start="29:30" pos:end="29:30">=</operator> <name pos:start="29:32" pos:end="29:34">tab</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:7">tab</name><index pos:start="33:8" pos:end="33:13">[<expr pos:start="33:9" pos:end="33:12"><name pos:start="33:9" pos:end="33:10">nb</name><operator pos:start="33:11" pos:end="33:12">++</operator></expr>]</index></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:25">intptr_t</name><operator pos:start="33:26" pos:end="33:26">)</operator><name pos:start="33:27" pos:end="33:30">elem</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:17"><expr pos:start="35:5" pos:end="35:16"><operator pos:start="35:5" pos:end="35:5">*</operator><name pos:start="35:6" pos:end="35:11">nb_ptr</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:16">nb</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
