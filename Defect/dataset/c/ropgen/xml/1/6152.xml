<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6152.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">qpa_init_out</name> <parameter_list pos:start="1:25" pos:end="1:64">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:35">HWVoiceOut</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">hw</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:63"><decl pos:start="1:42" pos:end="1:63"><type pos:start="1:42" pos:end="1:63"><name pos:start="1:42" pos:end="1:59"><name pos:start="1:42" pos:end="1:47">struct</name> <name pos:start="1:49" pos:end="1:59">audsettings</name></name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">as</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:14">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">error</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:25"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <name pos:start="7:12" pos:end="7:25">pa_sample_spec</name></type> <name pos:start="7:27" pos:end="7:28">ss</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:25"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <name pos:start="9:12" pos:end="9:25">pa_buffer_attr</name></type> <name pos:start="9:27" pos:end="9:28">ba</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:22">audsettings</name></name></type> <name pos:start="11:24" pos:end="11:29">obt_as</name> <init pos:start="11:31" pos:end="11:35">= <expr pos:start="11:33" pos:end="11:35"><operator pos:start="11:33" pos:end="11:33">*</operator><name pos:start="11:34" pos:end="11:35">as</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">PAVoiceOut</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:18">pa</name> <init pos:start="13:20" pos:end="13:38">= <expr pos:start="13:22" pos:end="13:38"><operator pos:start="13:22" pos:end="13:22">(</operator><name pos:start="13:23" pos:end="13:32">PAVoiceOut</name> <operator pos:start="13:34" pos:end="13:34">*</operator><operator pos:start="13:35" pos:end="13:35">)</operator> <name pos:start="13:37" pos:end="13:38">hw</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:55"><expr pos:start="17:5" pos:end="17:54"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:6">ss</name><operator pos:start="17:7" pos:end="17:7">.</operator><name pos:start="17:8" pos:end="17:13">format</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:54"><name pos:start="17:17" pos:end="17:28">audfmt_to_pa</name> <argument_list pos:start="17:30" pos:end="17:54">(<argument pos:start="17:31" pos:end="17:37"><expr pos:start="17:31" pos:end="17:37"><name pos:start="17:31" pos:end="17:37"><name pos:start="17:31" pos:end="17:32">as</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:37">fmt</name></name></expr></argument>, <argument pos:start="17:40" pos:end="17:53"><expr pos:start="17:40" pos:end="17:53"><name pos:start="17:40" pos:end="17:53"><name pos:start="17:40" pos:end="17:41">as</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:53">endianness</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:6">ss</name><operator pos:start="19:7" pos:end="19:7">.</operator><name pos:start="19:8" pos:end="19:15">channels</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:31"><name pos:start="19:19" pos:end="19:20">as</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:31">nchannels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:6">ss</name><operator pos:start="21:7" pos:end="21:7">.</operator><name pos:start="21:8" pos:end="21:11">rate</name></name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:22"><name pos:start="21:15" pos:end="21:16">as</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:22">freq</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="31:7">/*

     * qemu audio tick runs at 250 Hz (by default), so processing

     * data chunks worth 4 ms of sound should be a good fit.

     */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:50"><expr pos:start="33:5" pos:end="33:49"><name pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:6">ba</name><operator pos:start="33:7" pos:end="33:7">.</operator><name pos:start="33:8" pos:end="33:14">tlength</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:49"><name pos:start="33:18" pos:end="33:33">pa_usec_to_bytes</name> <argument_list pos:start="33:35" pos:end="33:49">(<argument pos:start="33:36" pos:end="33:43"><expr pos:start="33:36" pos:end="33:43"><literal type="number" pos:start="33:36" pos:end="33:36">4</literal> <operator pos:start="33:38" pos:end="33:38">*</operator> <literal type="number" pos:start="33:40" pos:end="33:43">1000</literal></expr></argument>, <argument pos:start="33:46" pos:end="33:48"><expr pos:start="33:46" pos:end="33:48"><operator pos:start="33:46" pos:end="33:46">&amp;</operator><name pos:start="33:47" pos:end="33:48">ss</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:49"><expr pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:6">ba</name><operator pos:start="35:7" pos:end="35:7">.</operator><name pos:start="35:8" pos:end="35:13">minreq</name></name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:48"><name pos:start="35:17" pos:end="35:32">pa_usec_to_bytes</name> <argument_list pos:start="35:34" pos:end="35:48">(<argument pos:start="35:35" pos:end="35:42"><expr pos:start="35:35" pos:end="35:42"><literal type="number" pos:start="35:35" pos:end="35:35">2</literal> <operator pos:start="35:37" pos:end="35:37">*</operator> <literal type="number" pos:start="35:39" pos:end="35:42">1000</literal></expr></argument>, <argument pos:start="35:45" pos:end="35:47"><expr pos:start="35:45" pos:end="35:47"><operator pos:start="35:45" pos:end="35:45">&amp;</operator><name pos:start="35:46" pos:end="35:47">ss</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:22"><expr pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:6">ba</name><operator pos:start="37:7" pos:end="37:7">.</operator><name pos:start="37:8" pos:end="37:16">maxlength</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <operator pos:start="37:20" pos:end="37:20">-</operator><literal type="number" pos:start="37:21" pos:end="37:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:19"><expr pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:6">ba</name><operator pos:start="39:7" pos:end="39:7">.</operator><name pos:start="39:8" pos:end="39:13">prebuf</name></name> <operator pos:start="39:15" pos:end="39:15">=</operator> <operator pos:start="39:17" pos:end="39:17">-</operator><literal type="number" pos:start="39:18" pos:end="39:18">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:62"><expr pos:start="43:5" pos:end="43:61"><name pos:start="43:5" pos:end="43:14"><name pos:start="43:5" pos:end="43:10">obt_as</name><operator pos:start="43:11" pos:end="43:11">.</operator><name pos:start="43:12" pos:end="43:14">fmt</name></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <call pos:start="43:18" pos:end="43:61"><name pos:start="43:18" pos:end="43:29">pa_to_audfmt</name> <argument_list pos:start="43:31" pos:end="43:61">(<argument pos:start="43:32" pos:end="43:40"><expr pos:start="43:32" pos:end="43:40"><name pos:start="43:32" pos:end="43:40"><name pos:start="43:32" pos:end="43:33">ss</name><operator pos:start="43:34" pos:end="43:34">.</operator><name pos:start="43:35" pos:end="43:40">format</name></name></expr></argument>, <argument pos:start="43:43" pos:end="43:60"><expr pos:start="43:43" pos:end="43:60"><operator pos:start="43:43" pos:end="43:43">&amp;</operator><name pos:start="43:44" pos:end="43:60"><name pos:start="43:44" pos:end="43:49">obt_as</name><operator pos:start="43:50" pos:end="43:50">.</operator><name pos:start="43:51" pos:end="43:60">endianness</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="67:10"><expr pos:start="47:5" pos:end="67:9"><name pos:start="47:5" pos:end="47:9"><name pos:start="47:5" pos:end="47:6">pa</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:9">s</name></name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="67:9"><name pos:start="47:13" pos:end="47:25">pa_simple_new</name> <argument_list pos:start="47:27" pos:end="67:9">(

        <argument pos:start="49:9" pos:end="49:19"><expr pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:12">conf</name><operator pos:start="49:13" pos:end="49:13">.</operator><name pos:start="49:14" pos:end="49:19">server</name></name></expr></argument>,

        <argument pos:start="51:9" pos:end="51:14"><expr pos:start="51:9" pos:end="51:14"><literal type="string" pos:start="51:9" pos:end="51:14">"qemu"</literal></expr></argument>,

        <argument pos:start="53:9" pos:end="53:26"><expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:26">PA_STREAM_PLAYBACK</name></expr></argument>,

        <argument pos:start="55:9" pos:end="55:17"><expr pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:12">conf</name><operator pos:start="55:13" pos:end="55:13">.</operator><name pos:start="55:14" pos:end="55:17">sink</name></name></expr></argument>,

        <argument pos:start="57:9" pos:end="57:22"><expr pos:start="57:9" pos:end="57:22"><literal type="string" pos:start="57:9" pos:end="57:22">"pcm.playback"</literal></expr></argument>,

        <argument pos:start="59:9" pos:end="59:11"><expr pos:start="59:9" pos:end="59:11"><operator pos:start="59:9" pos:end="59:9">&amp;</operator><name pos:start="59:10" pos:end="59:11">ss</name></expr></argument>,

        <argument pos:start="61:9" pos:end="61:12"><expr pos:start="61:9" pos:end="61:12"><name pos:start="61:9" pos:end="61:12">NULL</name></expr></argument>,                   <comment type="block" pos:start="61:33" pos:end="61:49">/* channel map */</comment>

        <argument pos:start="63:9" pos:end="63:11"><expr pos:start="63:9" pos:end="63:11"><operator pos:start="63:9" pos:end="63:9">&amp;</operator><name pos:start="63:10" pos:end="63:11">ba</name></expr></argument>,                    <comment type="block" pos:start="63:33" pos:end="63:58">/* buffering attributes */</comment>

        <argument pos:start="65:9" pos:end="65:14"><expr pos:start="65:9" pos:end="65:14"><operator pos:start="65:9" pos:end="65:9">&amp;</operator><name pos:start="65:10" pos:end="65:14">error</name></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:15">(<expr pos:start="69:9" pos:end="69:14"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:14"><name pos:start="69:10" pos:end="69:11">pa</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:14">s</name></name></expr>)</condition> <block pos:start="69:17" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:19">

        <expr_stmt pos:start="71:9" pos:end="71:66"><expr pos:start="71:9" pos:end="71:65"><call pos:start="71:9" pos:end="71:65"><name pos:start="71:9" pos:end="71:18">qpa_logerr</name> <argument_list pos:start="71:20" pos:end="71:65">(<argument pos:start="71:21" pos:end="71:25"><expr pos:start="71:21" pos:end="71:25"><name pos:start="71:21" pos:end="71:25">error</name></expr></argument>, <argument pos:start="71:28" pos:end="71:64"><expr pos:start="71:28" pos:end="71:64"><literal type="string" pos:start="71:28" pos:end="71:64">"pa_simple_new for playback failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:19">goto <name pos:start="73:14" pos:end="73:18">fail1</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:45"><expr pos:start="79:5" pos:end="79:44"><call pos:start="79:5" pos:end="79:44"><name pos:start="79:5" pos:end="79:23">audio_pcm_init_info</name> <argument_list pos:start="79:25" pos:end="79:44">(<argument pos:start="79:26" pos:end="79:34"><expr pos:start="79:26" pos:end="79:34"><operator pos:start="79:26" pos:end="79:26">&amp;</operator><name pos:start="79:27" pos:end="79:34"><name pos:start="79:27" pos:end="79:28">hw</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:34">info</name></name></expr></argument>, <argument pos:start="79:37" pos:end="79:43"><expr pos:start="79:37" pos:end="79:43"><operator pos:start="79:37" pos:end="79:37">&amp;</operator><name pos:start="79:38" pos:end="79:43">obt_as</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:31"><expr pos:start="81:5" pos:end="81:30"><name pos:start="81:5" pos:end="81:15"><name pos:start="81:5" pos:end="81:6">hw</name><operator pos:start="81:7" pos:end="81:8">-&gt;</operator><name pos:start="81:9" pos:end="81:15">samples</name></name> <operator pos:start="81:17" pos:end="81:17">=</operator> <name pos:start="81:19" pos:end="81:30"><name pos:start="81:19" pos:end="81:22">conf</name><operator pos:start="81:23" pos:end="81:23">.</operator><name pos:start="81:24" pos:end="81:30">samples</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:78"><expr pos:start="83:5" pos:end="83:77"><name pos:start="83:5" pos:end="83:15"><name pos:start="83:5" pos:end="83:6">pa</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:15">pcm_buf</name></name> <operator pos:start="83:17" pos:end="83:17">=</operator> <call pos:start="83:19" pos:end="83:77"><name pos:start="83:19" pos:end="83:30">audio_calloc</name> <argument_list pos:start="83:32" pos:end="83:77">(<argument pos:start="83:33" pos:end="83:42"><expr pos:start="83:33" pos:end="83:42"><name pos:start="83:33" pos:end="83:42">AUDIO_FUNC</name></expr></argument>, <argument pos:start="83:45" pos:end="83:55"><expr pos:start="83:45" pos:end="83:55"><name pos:start="83:45" pos:end="83:55"><name pos:start="83:45" pos:end="83:46">hw</name><operator pos:start="83:47" pos:end="83:48">-&gt;</operator><name pos:start="83:49" pos:end="83:55">samples</name></name></expr></argument>, <argument pos:start="83:58" pos:end="83:76"><expr pos:start="83:58" pos:end="83:76"><literal type="number" pos:start="83:58" pos:end="83:58">1</literal> <operator pos:start="83:60" pos:end="83:61">&lt;&lt;</operator> <name pos:start="83:63" pos:end="83:76"><name pos:start="83:63" pos:end="83:64">hw</name><operator pos:start="83:65" pos:end="83:66">-&gt;</operator><name pos:start="83:67" pos:end="83:70">info</name><operator pos:start="83:71" pos:end="83:71">.</operator><name pos:start="83:72" pos:end="83:76">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:24"><expr pos:start="85:5" pos:end="85:23"><name pos:start="85:5" pos:end="85:12"><name pos:start="85:5" pos:end="85:6">pa</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:12">rpos</name></name> <operator pos:start="85:14" pos:end="85:14">=</operator> <name pos:start="85:16" pos:end="85:23"><name pos:start="85:16" pos:end="85:17">hw</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:23">rpos</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:21">(<expr pos:start="87:9" pos:end="87:20"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:20"><name pos:start="87:10" pos:end="87:11">pa</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:20">pcm_buf</name></name></expr>)</condition> <block pos:start="87:23" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:19">

        <expr_stmt pos:start="89:9" pos:end="91:46"><expr pos:start="89:9" pos:end="91:45"><call pos:start="89:9" pos:end="91:45"><name pos:start="89:9" pos:end="89:13">dolog</name> <argument_list pos:start="89:15" pos:end="91:45">(<argument pos:start="89:16" pos:end="89:55"><expr pos:start="89:16" pos:end="89:55"><literal type="string" pos:start="89:16" pos:end="89:55">"Could not allocate buffer (%d bytes)\n"</literal></expr></argument>,

               <argument pos:start="91:16" pos:end="91:44"><expr pos:start="91:16" pos:end="91:44"><name pos:start="91:16" pos:end="91:26"><name pos:start="91:16" pos:end="91:17">hw</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:26">samples</name></name> <operator pos:start="91:28" pos:end="91:29">&lt;&lt;</operator> <name pos:start="91:31" pos:end="91:44"><name pos:start="91:31" pos:end="91:32">hw</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:38">info</name><operator pos:start="91:39" pos:end="91:39">.</operator><name pos:start="91:40" pos:end="91:44">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="93:9" pos:end="93:19">goto <name pos:start="93:14" pos:end="93:18">fail2</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="103:5"><if pos:start="99:5" pos:end="103:5">if <condition pos:start="99:8" pos:end="99:75">(<expr pos:start="99:9" pos:end="99:74"><call pos:start="99:9" pos:end="99:74"><name pos:start="99:9" pos:end="99:21">audio_pt_init</name> <argument_list pos:start="99:23" pos:end="99:74">(<argument pos:start="99:24" pos:end="99:30"><expr pos:start="99:24" pos:end="99:30"><operator pos:start="99:24" pos:end="99:24">&amp;</operator><name pos:start="99:25" pos:end="99:30"><name pos:start="99:25" pos:end="99:26">pa</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:30">pt</name></name></expr></argument>, <argument pos:start="99:33" pos:end="99:46"><expr pos:start="99:33" pos:end="99:46"><name pos:start="99:33" pos:end="99:46">qpa_thread_out</name></expr></argument>, <argument pos:start="99:49" pos:end="99:50"><expr pos:start="99:49" pos:end="99:50"><name pos:start="99:49" pos:end="99:50">hw</name></expr></argument>, <argument pos:start="99:53" pos:end="99:61"><expr pos:start="99:53" pos:end="99:61"><name pos:start="99:53" pos:end="99:61">AUDIO_CAP</name></expr></argument>, <argument pos:start="99:64" pos:end="99:73"><expr pos:start="99:64" pos:end="99:73"><name pos:start="99:64" pos:end="99:73">AUDIO_FUNC</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:77" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:19">

        <goto pos:start="101:9" pos:end="101:19">goto <name pos:start="101:14" pos:end="101:18">fail3</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>



 <label pos:start="111:2" pos:end="111:7"><name pos:start="111:2" pos:end="111:6">fail3</name>:</label>

    <expr_stmt pos:start="113:5" pos:end="113:25"><expr pos:start="113:5" pos:end="113:24"><call pos:start="113:5" pos:end="113:24"><name pos:start="113:5" pos:end="113:10">g_free</name> <argument_list pos:start="113:12" pos:end="113:24">(<argument pos:start="113:13" pos:end="113:23"><expr pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:14">pa</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:23">pcm_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:23"><expr pos:start="115:5" pos:end="115:22"><name pos:start="115:5" pos:end="115:15"><name pos:start="115:5" pos:end="115:6">pa</name><operator pos:start="115:7" pos:end="115:8">-&gt;</operator><name pos:start="115:9" pos:end="115:15">pcm_buf</name></name> <operator pos:start="115:17" pos:end="115:17">=</operator> <name pos:start="115:19" pos:end="115:22">NULL</name></expr>;</expr_stmt>

 <label pos:start="117:2" pos:end="117:7"><name pos:start="117:2" pos:end="117:6">fail2</name>:</label>

    <expr_stmt pos:start="119:5" pos:end="119:27"><expr pos:start="119:5" pos:end="119:26"><call pos:start="119:5" pos:end="119:26"><name pos:start="119:5" pos:end="119:18">pa_simple_free</name> <argument_list pos:start="119:20" pos:end="119:26">(<argument pos:start="119:21" pos:end="119:25"><expr pos:start="119:21" pos:end="119:25"><name pos:start="119:21" pos:end="119:25"><name pos:start="119:21" pos:end="119:22">pa</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:25">s</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:17"><expr pos:start="121:5" pos:end="121:16"><name pos:start="121:5" pos:end="121:9"><name pos:start="121:5" pos:end="121:6">pa</name><operator pos:start="121:7" pos:end="121:8">-&gt;</operator><name pos:start="121:9" pos:end="121:9">s</name></name> <operator pos:start="121:11" pos:end="121:11">=</operator> <name pos:start="121:13" pos:end="121:16">NULL</name></expr>;</expr_stmt>

 <label pos:start="123:2" pos:end="123:7"><name pos:start="123:2" pos:end="123:6">fail1</name>:</label>

    <return pos:start="125:5" pos:end="125:14">return <expr pos:start="125:12" pos:end="125:13"><operator pos:start="125:12" pos:end="125:12">-</operator><literal type="number" pos:start="125:13" pos:end="125:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
