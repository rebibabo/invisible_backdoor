<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10431.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:21"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">kbd_layout_t</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:42">parse_keyboard_layout</name><parameter_list pos:start="1:43" pos:end="5:59">(<parameter pos:start="1:44" pos:end="1:69"><decl pos:start="1:44" pos:end="1:69"><type pos:start="1:44" pos:end="1:69"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:62">name2keysym_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">table</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:63"><decl pos:start="3:44" pos:end="3:63"><type pos:start="3:44" pos:end="3:63"><specifier pos:start="3:44" pos:end="3:48">const</specifier> <name pos:start="3:50" pos:end="3:53">char</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:63">language</name></decl></parameter>,

                                           <parameter pos:start="5:44" pos:end="5:58"><decl pos:start="5:44" pos:end="5:58"><type pos:start="5:44" pos:end="5:58"><name pos:start="5:44" pos:end="5:55">kbd_layout_t</name> <modifier pos:start="5:57" pos:end="5:57">*</modifier></type><name pos:start="5:58" pos:end="5:58">k</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="177:1">{<block_content pos:start="9:5" pos:end="175:13">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">FILE</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:11">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type> <name pos:start="11:12" pos:end="11:19">filename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:19"><name pos:start="13:10" pos:end="13:13">line</name><index pos:start="13:14" pos:end="13:19">[<expr pos:start="13:15" pos:end="13:18"><literal type="number" pos:start="13:15" pos:end="13:18">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:63"><expr pos:start="19:5" pos:end="19:62"><name pos:start="19:5" pos:end="19:12">filename</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:62"><name pos:start="19:16" pos:end="19:29">qemu_find_file</name><argument_list pos:start="19:30" pos:end="19:62">(<argument pos:start="19:31" pos:end="19:51"><expr pos:start="19:31" pos:end="19:51"><name pos:start="19:31" pos:end="19:51">QEMU_FILE_TYPE_KEYMAP</name></expr></argument>, <argument pos:start="19:54" pos:end="19:61"><expr pos:start="19:54" pos:end="19:61"><name pos:start="19:54" pos:end="19:61">language</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:47"><expr pos:start="21:5" pos:end="21:46"><name pos:start="21:5" pos:end="21:5">f</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <ternary pos:start="21:9" pos:end="21:46"><condition pos:start="21:9" pos:end="21:18"><expr pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:16">filename</name></expr> ?</condition><then pos:start="21:20" pos:end="21:39"> <expr pos:start="21:20" pos:end="21:39"><call pos:start="21:20" pos:end="21:39"><name pos:start="21:20" pos:end="21:24">fopen</name><argument_list pos:start="21:25" pos:end="21:39">(<argument pos:start="21:26" pos:end="21:33"><expr pos:start="21:26" pos:end="21:33"><name pos:start="21:26" pos:end="21:33">filename</name></expr></argument>, <argument pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><literal type="string" pos:start="21:36" pos:end="21:38">"r"</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="21:41" pos:end="21:46">: <expr pos:start="21:43" pos:end="21:46"><name pos:start="21:43" pos:end="21:46">NULL</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><call pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:10">g_free</name><argument_list pos:start="23:11" pos:end="23:20">(<argument pos:start="23:12" pos:end="23:19"><expr pos:start="23:12" pos:end="23:19"><name pos:start="23:12" pos:end="23:19">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:11">(<expr pos:start="25:9" pos:end="25:10"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:10">f</name></expr>)</condition> <block pos:start="25:13" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:20">

        <expr_stmt pos:start="27:9" pos:end="27:72"><expr pos:start="27:9" pos:end="27:71"><call pos:start="27:9" pos:end="27:71"><name pos:start="27:9" pos:end="27:15">fprintf</name><argument_list pos:start="27:16" pos:end="27:71">(<argument pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:22">stderr</name></expr></argument>, <argument pos:start="27:25" pos:end="27:60"><expr pos:start="27:25" pos:end="27:60"><literal type="string" pos:start="27:25" pos:end="27:60">"Could not read keymap file: '%s'\n"</literal></expr></argument>, <argument pos:start="27:63" pos:end="27:70"><expr pos:start="27:63" pos:end="27:70"><name pos:start="27:63" pos:end="27:70">language</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:20">return <expr pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:11">(<expr pos:start="35:9" pos:end="35:10"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:10">k</name></expr>)</condition> <block pos:start="35:13" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:44">

        <expr_stmt pos:start="37:9" pos:end="37:44"><expr pos:start="37:9" pos:end="37:43"><name pos:start="37:9" pos:end="37:9">k</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <call pos:start="37:13" pos:end="37:43"><name pos:start="37:13" pos:end="37:21">g_malloc0</name><argument_list pos:start="37:22" pos:end="37:43">(<argument pos:start="37:23" pos:end="37:42"><expr pos:start="37:23" pos:end="37:42"><sizeof pos:start="37:23" pos:end="37:42">sizeof<argument_list pos:start="37:29" pos:end="37:42">(<argument pos:start="37:30" pos:end="37:41"><expr pos:start="37:30" pos:end="37:41"><name pos:start="37:30" pos:end="37:41">kbd_layout_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="43:5" pos:end="171:5">for<control pos:start="43:8" pos:end="43:11">(<init pos:start="43:9" pos:end="43:9">;</init><condition pos:start="43:10" pos:end="43:10">;</condition><incr/>)</control> <block pos:start="43:13" pos:end="171:5">{<block_content pos:start="45:9" pos:end="169:9">

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:41">(<expr pos:start="45:13" pos:end="45:40"><call pos:start="45:13" pos:end="45:32"><name pos:start="45:13" pos:end="45:17">fgets</name><argument_list pos:start="45:18" pos:end="45:32">(<argument pos:start="45:19" pos:end="45:22"><expr pos:start="45:19" pos:end="45:22"><name pos:start="45:19" pos:end="45:22">line</name></expr></argument>, <argument pos:start="45:25" pos:end="45:28"><expr pos:start="45:25" pos:end="45:28"><literal type="number" pos:start="45:25" pos:end="45:28">1024</literal></expr></argument>, <argument pos:start="45:31" pos:end="45:31"><expr pos:start="45:31" pos:end="45:31"><name pos:start="45:31" pos:end="45:31">f</name></expr></argument>)</argument_list></call> <operator pos:start="45:34" pos:end="45:35">==</operator> <name pos:start="45:37" pos:end="45:40">NULL</name></expr>)</condition> <block pos:start="45:43" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:18">

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:11">len</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:26"><name pos:start="51:15" pos:end="51:20">strlen</name><argument_list pos:start="51:21" pos:end="51:26">(<argument pos:start="51:22" pos:end="51:25"><expr pos:start="51:22" pos:end="51:25"><name pos:start="51:22" pos:end="51:25">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:45">(<expr pos:start="53:13" pos:end="53:44"><name pos:start="53:13" pos:end="53:15">len</name> <operator pos:start="53:17" pos:end="53:17">&gt;</operator> <literal type="number" pos:start="53:19" pos:end="53:19">0</literal> <operator pos:start="53:21" pos:end="53:22">&amp;&amp;</operator> <name pos:start="53:24" pos:end="53:36"><name pos:start="53:24" pos:end="53:27">line</name><index pos:start="53:28" pos:end="53:36">[<expr pos:start="53:29" pos:end="53:35"><name pos:start="53:29" pos:end="53:31">len</name> <operator pos:start="53:33" pos:end="53:33">-</operator> <literal type="number" pos:start="53:35" pos:end="53:35">1</literal></expr>]</index></name> <operator pos:start="53:38" pos:end="53:39">==</operator> <literal type="char" pos:start="53:41" pos:end="53:44">'\n'</literal></expr>)</condition> <block pos:start="53:47" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:33">

            <expr_stmt pos:start="55:13" pos:end="55:33"><expr pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:16">line</name><index pos:start="55:17" pos:end="55:25">[<expr pos:start="55:18" pos:end="55:24"><name pos:start="55:18" pos:end="55:20">len</name> <operator pos:start="55:22" pos:end="55:22">-</operator> <literal type="number" pos:start="55:24" pos:end="55:24">1</literal></expr>]</index></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <literal type="char" pos:start="55:29" pos:end="55:32">'\0'</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:27">(<expr pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:16">line</name><index pos:start="59:17" pos:end="59:19">[<expr pos:start="59:18" pos:end="59:18"><literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>]</index></name> <operator pos:start="59:21" pos:end="59:22">==</operator> <literal type="char" pos:start="59:24" pos:end="59:26">'#'</literal></expr>)</condition> <block pos:start="59:29" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:21">

            <continue pos:start="61:13" pos:end="61:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="69:9"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="65:38">(<expr pos:start="65:13" pos:end="65:37"><operator pos:start="65:13" pos:end="65:13">!</operator><call pos:start="65:14" pos:end="65:37"><name pos:start="65:14" pos:end="65:20">strncmp</name><argument_list pos:start="65:21" pos:end="65:37">(<argument pos:start="65:22" pos:end="65:25"><expr pos:start="65:22" pos:end="65:25"><name pos:start="65:22" pos:end="65:25">line</name></expr></argument>, <argument pos:start="65:28" pos:end="65:33"><expr pos:start="65:28" pos:end="65:33"><literal type="string" pos:start="65:28" pos:end="65:33">"map "</literal></expr></argument>, <argument pos:start="65:36" pos:end="65:36"><expr pos:start="65:36" pos:end="65:36"><literal type="number" pos:start="65:36" pos:end="65:36">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:40" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:21">

            <continue pos:start="67:13" pos:end="67:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="71:9" pos:end="169:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:42">(<expr pos:start="71:13" pos:end="71:41"><operator pos:start="71:13" pos:end="71:13">!</operator><call pos:start="71:14" pos:end="71:41"><name pos:start="71:14" pos:end="71:20">strncmp</name><argument_list pos:start="71:21" pos:end="71:41">(<argument pos:start="71:22" pos:end="71:25"><expr pos:start="71:22" pos:end="71:25"><name pos:start="71:22" pos:end="71:25">line</name></expr></argument>, <argument pos:start="71:28" pos:end="71:37"><expr pos:start="71:28" pos:end="71:37"><literal type="string" pos:start="71:28" pos:end="71:37">"include "</literal></expr></argument>, <argument pos:start="71:40" pos:end="71:40"><expr pos:start="71:40" pos:end="71:40"><literal type="number" pos:start="71:40" pos:end="71:40">8</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:44" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:54">

            <expr_stmt pos:start="73:13" pos:end="73:54"><expr pos:start="73:13" pos:end="73:53"><call pos:start="73:13" pos:end="73:53"><name pos:start="73:13" pos:end="73:33">parse_keyboard_layout</name><argument_list pos:start="73:34" pos:end="73:53">(<argument pos:start="73:35" pos:end="73:39"><expr pos:start="73:35" pos:end="73:39"><name pos:start="73:35" pos:end="73:39">table</name></expr></argument>, <argument pos:start="73:42" pos:end="73:49"><expr pos:start="73:42" pos:end="73:49"><name pos:start="73:42" pos:end="73:45">line</name> <operator pos:start="73:47" pos:end="73:47">+</operator> <literal type="number" pos:start="73:49" pos:end="73:49">8</literal></expr></argument>, <argument pos:start="73:52" pos:end="73:52"><expr pos:start="73:52" pos:end="73:52"><name pos:start="73:52" pos:end="73:52">k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="169:9">else <block pos:start="75:16" pos:end="169:9">{<block_content pos:start="77:13" pos:end="167:13">

            <decl_stmt pos:start="77:13" pos:end="77:39"><decl pos:start="77:13" pos:end="77:38"><type pos:start="77:13" pos:end="77:18"><name pos:start="77:13" pos:end="77:16">char</name> <modifier pos:start="77:18" pos:end="77:18">*</modifier></type><name pos:start="77:19" pos:end="77:31">end_of_keysym</name> <init pos:start="77:33" pos:end="77:38">= <expr pos:start="77:35" pos:end="77:38"><name pos:start="77:35" pos:end="77:38">line</name></expr></init></decl>;</decl_stmt>

            <while pos:start="79:13" pos:end="83:13">while <condition pos:start="79:19" pos:end="79:64">(<expr pos:start="79:20" pos:end="79:63"><operator pos:start="79:20" pos:end="79:20">*</operator><name pos:start="79:21" pos:end="79:33">end_of_keysym</name> <operator pos:start="79:35" pos:end="79:36">!=</operator> <literal type="number" pos:start="79:38" pos:end="79:38">0</literal> <operator pos:start="79:40" pos:end="79:41">&amp;&amp;</operator> <operator pos:start="79:43" pos:end="79:43">*</operator><name pos:start="79:44" pos:end="79:56">end_of_keysym</name> <operator pos:start="79:58" pos:end="79:59">!=</operator> <literal type="char" pos:start="79:61" pos:end="79:63">' '</literal></expr>)</condition> <block pos:start="79:66" pos:end="83:13">{<block_content pos:start="81:17" pos:end="81:32">

                <expr_stmt pos:start="81:17" pos:end="81:32"><expr pos:start="81:17" pos:end="81:31"><name pos:start="81:17" pos:end="81:29">end_of_keysym</name><operator pos:start="81:30" pos:end="81:31">++</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

            <if_stmt pos:start="85:13" pos:end="167:13"><if pos:start="85:13" pos:end="167:13">if <condition pos:start="85:16" pos:end="85:31">(<expr pos:start="85:17" pos:end="85:30"><operator pos:start="85:17" pos:end="85:17">*</operator><name pos:start="85:18" pos:end="85:30">end_of_keysym</name></expr>)</condition> <block pos:start="85:33" pos:end="167:13">{<block_content pos:start="87:17" pos:end="165:17">

                <decl_stmt pos:start="87:17" pos:end="87:27"><decl pos:start="87:17" pos:end="87:26"><type pos:start="87:17" pos:end="87:19"><name pos:start="87:17" pos:end="87:19">int</name></type> <name pos:start="87:21" pos:end="87:26">keysym</name></decl>;</decl_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:35"><expr pos:start="89:17" pos:end="89:34"><operator pos:start="89:17" pos:end="89:17">*</operator><name pos:start="89:18" pos:end="89:30">end_of_keysym</name> <operator pos:start="89:32" pos:end="89:32">=</operator> <literal type="number" pos:start="89:34" pos:end="89:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:49"><expr pos:start="91:17" pos:end="91:48"><name pos:start="91:17" pos:end="91:22">keysym</name> <operator pos:start="91:24" pos:end="91:24">=</operator> <call pos:start="91:26" pos:end="91:48"><name pos:start="91:26" pos:end="91:35">get_keysym</name><argument_list pos:start="91:36" pos:end="91:48">(<argument pos:start="91:37" pos:end="91:41"><expr pos:start="91:37" pos:end="91:41"><name pos:start="91:37" pos:end="91:41">table</name></expr></argument>, <argument pos:start="91:44" pos:end="91:47"><expr pos:start="91:44" pos:end="91:47"><name pos:start="91:44" pos:end="91:47">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="93:17" pos:end="165:17"><if pos:start="93:17" pos:end="97:17">if <condition pos:start="93:20" pos:end="93:32">(<expr pos:start="93:21" pos:end="93:31"><name pos:start="93:21" pos:end="93:26">keysym</name> <operator pos:start="93:28" pos:end="93:29">==</operator> <literal type="number" pos:start="93:31" pos:end="93:31">0</literal></expr>)</condition> <block pos:start="93:34" pos:end="97:17">{<block_content>

                    <comment type="block" pos:start="95:21" pos:end="95:79">/* fprintf(stderr, "Warning: unknown keysym %s\n", line);*/</comment>

                </block_content>}</block></if> <else pos:start="97:19" pos:end="165:17">else <block pos:start="97:24" pos:end="165:17">{<block_content pos:start="99:21" pos:end="163:21">

                    <decl_stmt pos:start="99:21" pos:end="99:57"><decl pos:start="99:21" pos:end="99:56"><type pos:start="99:21" pos:end="99:32"><specifier pos:start="99:21" pos:end="99:25">const</specifier> <name pos:start="99:27" pos:end="99:30">char</name> <modifier pos:start="99:32" pos:end="99:32">*</modifier></type><name pos:start="99:33" pos:end="99:36">rest</name> <init pos:start="99:38" pos:end="99:56">= <expr pos:start="99:40" pos:end="99:56"><name pos:start="99:40" pos:end="99:52">end_of_keysym</name> <operator pos:start="99:54" pos:end="99:54">+</operator> <literal type="number" pos:start="99:56" pos:end="99:56">1</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="101:21" pos:end="101:56"><decl pos:start="101:21" pos:end="101:55"><type pos:start="101:21" pos:end="101:23"><name pos:start="101:21" pos:end="101:23">int</name></type> <name pos:start="101:25" pos:end="101:31">keycode</name> <init pos:start="101:33" pos:end="101:55">= <expr pos:start="101:35" pos:end="101:55"><call pos:start="101:35" pos:end="101:55"><name pos:start="101:35" pos:end="101:40">strtol</name><argument_list pos:start="101:41" pos:end="101:55">(<argument pos:start="101:42" pos:end="101:45"><expr pos:start="101:42" pos:end="101:45"><name pos:start="101:42" pos:end="101:45">rest</name></expr></argument>, <argument pos:start="101:48" pos:end="101:51"><expr pos:start="101:48" pos:end="101:51"><name pos:start="101:48" pos:end="101:51">NULL</name></expr></argument>, <argument pos:start="101:54" pos:end="101:54"><expr pos:start="101:54" pos:end="101:54"><literal type="number" pos:start="101:54" pos:end="101:54">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="105:21" pos:end="115:21"><if pos:start="105:21" pos:end="115:21">if <condition pos:start="105:24" pos:end="105:48">(<expr pos:start="105:25" pos:end="105:47"><call pos:start="105:25" pos:end="105:47"><name pos:start="105:25" pos:end="105:30">strstr</name><argument_list pos:start="105:31" pos:end="105:47">(<argument pos:start="105:32" pos:end="105:35"><expr pos:start="105:32" pos:end="105:35"><name pos:start="105:32" pos:end="105:35">rest</name></expr></argument>, <argument pos:start="105:38" pos:end="105:46"><expr pos:start="105:38" pos:end="105:46"><literal type="string" pos:start="105:38" pos:end="105:46">"numlock"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="105:50" pos:end="115:21">{<block_content pos:start="107:25" pos:end="109:68">

                        <expr_stmt pos:start="107:25" pos:end="107:68"><expr pos:start="107:25" pos:end="107:67"><call pos:start="107:25" pos:end="107:67"><name pos:start="107:25" pos:end="107:40">add_to_key_range</name><argument_list pos:start="107:41" pos:end="107:67">(<argument pos:start="107:42" pos:end="107:57"><expr pos:start="107:42" pos:end="107:57"><operator pos:start="107:42" pos:end="107:42">&amp;</operator><name pos:start="107:43" pos:end="107:57"><name pos:start="107:43" pos:end="107:43">k</name><operator pos:start="107:44" pos:end="107:45">-&gt;</operator><name pos:start="107:46" pos:end="107:57">keypad_range</name></name></expr></argument>, <argument pos:start="107:60" pos:end="107:66"><expr pos:start="107:60" pos:end="107:66"><name pos:start="107:60" pos:end="107:66">keycode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="109:25" pos:end="109:68"><expr pos:start="109:25" pos:end="109:67"><call pos:start="109:25" pos:end="109:67"><name pos:start="109:25" pos:end="109:40">add_to_key_range</name><argument_list pos:start="109:41" pos:end="109:67">(<argument pos:start="109:42" pos:end="109:58"><expr pos:start="109:42" pos:end="109:58"><operator pos:start="109:42" pos:end="109:42">&amp;</operator><name pos:start="109:43" pos:end="109:58"><name pos:start="109:43" pos:end="109:43">k</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:58">numlock_range</name></name></expr></argument>, <argument pos:start="109:61" pos:end="109:66"><expr pos:start="109:61" pos:end="109:66"><name pos:start="109:61" pos:end="109:66">keysym</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <comment type="block" pos:start="111:25" pos:end="113:55">/* fprintf(stderr, "keypad keysym %04x keycode %d\n",

                                   keysym, keycode); */</comment>

                    </block_content>}</block></if></if_stmt>



                    <if_stmt pos:start="119:21" pos:end="123:21"><if pos:start="119:21" pos:end="123:21">if <condition pos:start="119:24" pos:end="119:46">(<expr pos:start="119:25" pos:end="119:45"><call pos:start="119:25" pos:end="119:45"><name pos:start="119:25" pos:end="119:30">strstr</name><argument_list pos:start="119:31" pos:end="119:45">(<argument pos:start="119:32" pos:end="119:35"><expr pos:start="119:32" pos:end="119:35"><name pos:start="119:32" pos:end="119:35">rest</name></expr></argument>, <argument pos:start="119:38" pos:end="119:44"><expr pos:start="119:38" pos:end="119:44"><literal type="string" pos:start="119:38" pos:end="119:44">"shift"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:48" pos:end="123:21">{<block_content pos:start="121:25" pos:end="121:50">

                        <expr_stmt pos:start="121:25" pos:end="121:50"><expr pos:start="121:25" pos:end="121:49"><name pos:start="121:25" pos:end="121:31">keycode</name> <operator pos:start="121:33" pos:end="121:34">|=</operator> <name pos:start="121:36" pos:end="121:49">SCANCODE_SHIFT</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="125:21" pos:end="129:21"><if pos:start="125:21" pos:end="129:21">if <condition pos:start="125:24" pos:end="125:46">(<expr pos:start="125:25" pos:end="125:45"><call pos:start="125:25" pos:end="125:45"><name pos:start="125:25" pos:end="125:30">strstr</name><argument_list pos:start="125:31" pos:end="125:45">(<argument pos:start="125:32" pos:end="125:35"><expr pos:start="125:32" pos:end="125:35"><name pos:start="125:32" pos:end="125:35">rest</name></expr></argument>, <argument pos:start="125:38" pos:end="125:44"><expr pos:start="125:38" pos:end="125:44"><literal type="string" pos:start="125:38" pos:end="125:44">"altgr"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:48" pos:end="129:21">{<block_content pos:start="127:25" pos:end="127:50">

                        <expr_stmt pos:start="127:25" pos:end="127:50"><expr pos:start="127:25" pos:end="127:49"><name pos:start="127:25" pos:end="127:31">keycode</name> <operator pos:start="127:33" pos:end="127:34">|=</operator> <name pos:start="127:36" pos:end="127:49">SCANCODE_ALTGR</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="131:21" pos:end="135:21"><if pos:start="131:21" pos:end="135:21">if <condition pos:start="131:24" pos:end="131:45">(<expr pos:start="131:25" pos:end="131:44"><call pos:start="131:25" pos:end="131:44"><name pos:start="131:25" pos:end="131:30">strstr</name><argument_list pos:start="131:31" pos:end="131:44">(<argument pos:start="131:32" pos:end="131:35"><expr pos:start="131:32" pos:end="131:35"><name pos:start="131:32" pos:end="131:35">rest</name></expr></argument>, <argument pos:start="131:38" pos:end="131:43"><expr pos:start="131:38" pos:end="131:43"><literal type="string" pos:start="131:38" pos:end="131:43">"ctrl"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="131:47" pos:end="135:21">{<block_content pos:start="133:25" pos:end="133:49">

                        <expr_stmt pos:start="133:25" pos:end="133:49"><expr pos:start="133:25" pos:end="133:48"><name pos:start="133:25" pos:end="133:31">keycode</name> <operator pos:start="133:33" pos:end="133:34">|=</operator> <name pos:start="133:36" pos:end="133:48">SCANCODE_CTRL</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>



                    <expr_stmt pos:start="139:21" pos:end="139:57"><expr pos:start="139:21" pos:end="139:56"><call pos:start="139:21" pos:end="139:56"><name pos:start="139:21" pos:end="139:30">add_keysym</name><argument_list pos:start="139:31" pos:end="139:56">(<argument pos:start="139:32" pos:end="139:35"><expr pos:start="139:32" pos:end="139:35"><name pos:start="139:32" pos:end="139:35">line</name></expr></argument>, <argument pos:start="139:38" pos:end="139:43"><expr pos:start="139:38" pos:end="139:43"><name pos:start="139:38" pos:end="139:43">keysym</name></expr></argument>, <argument pos:start="139:46" pos:end="139:52"><expr pos:start="139:46" pos:end="139:52"><name pos:start="139:46" pos:end="139:52">keycode</name></expr></argument>, <argument pos:start="139:55" pos:end="139:55"><expr pos:start="139:55" pos:end="139:55"><name pos:start="139:55" pos:end="139:55">k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="143:21" pos:end="163:21"><if pos:start="143:21" pos:end="163:21">if <condition pos:start="143:24" pos:end="143:49">(<expr pos:start="143:25" pos:end="143:48"><call pos:start="143:25" pos:end="143:48"><name pos:start="143:25" pos:end="143:30">strstr</name><argument_list pos:start="143:31" pos:end="143:48">(<argument pos:start="143:32" pos:end="143:35"><expr pos:start="143:32" pos:end="143:35"><name pos:start="143:32" pos:end="143:35">rest</name></expr></argument>, <argument pos:start="143:38" pos:end="143:47"><expr pos:start="143:38" pos:end="143:47"><literal type="string" pos:start="143:38" pos:end="143:47">"addupper"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:51" pos:end="163:21">{<block_content pos:start="145:25" pos:end="161:25">

                        <decl_stmt pos:start="145:25" pos:end="145:32"><decl pos:start="145:25" pos:end="145:31"><type pos:start="145:25" pos:end="145:30"><name pos:start="145:25" pos:end="145:28">char</name> <modifier pos:start="145:30" pos:end="145:30">*</modifier></type><name pos:start="145:31" pos:end="145:31">c</name></decl>;</decl_stmt>

                        <for pos:start="147:25" pos:end="151:25">for <control pos:start="147:29" pos:end="147:47">(<init pos:start="147:30" pos:end="147:38"><expr pos:start="147:30" pos:end="147:37"><name pos:start="147:30" pos:end="147:30">c</name> <operator pos:start="147:32" pos:end="147:32">=</operator> <name pos:start="147:34" pos:end="147:37">line</name></expr>;</init> <condition pos:start="147:40" pos:end="147:42"><expr pos:start="147:40" pos:end="147:41"><operator pos:start="147:40" pos:end="147:40">*</operator><name pos:start="147:41" pos:end="147:41">c</name></expr>;</condition> <incr pos:start="147:44" pos:end="147:46"><expr pos:start="147:44" pos:end="147:46"><name pos:start="147:44" pos:end="147:44">c</name><operator pos:start="147:45" pos:end="147:46">++</operator></expr></incr>)</control> <block pos:start="147:49" pos:end="151:25">{<block_content pos:start="149:29" pos:end="149:50">

                            <expr_stmt pos:start="149:29" pos:end="149:50"><expr pos:start="149:29" pos:end="149:49"><operator pos:start="149:29" pos:end="149:29">*</operator><name pos:start="149:30" pos:end="149:30">c</name> <operator pos:start="149:32" pos:end="149:32">=</operator> <call pos:start="149:34" pos:end="149:49"><name pos:start="149:34" pos:end="149:45">qemu_toupper</name><argument_list pos:start="149:46" pos:end="149:49">(<argument pos:start="149:47" pos:end="149:48"><expr pos:start="149:47" pos:end="149:48"><operator pos:start="149:47" pos:end="149:47">*</operator><name pos:start="149:48" pos:end="149:48">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <expr_stmt pos:start="153:25" pos:end="153:57"><expr pos:start="153:25" pos:end="153:56"><name pos:start="153:25" pos:end="153:30">keysym</name> <operator pos:start="153:32" pos:end="153:32">=</operator> <call pos:start="153:34" pos:end="153:56"><name pos:start="153:34" pos:end="153:43">get_keysym</name><argument_list pos:start="153:44" pos:end="153:56">(<argument pos:start="153:45" pos:end="153:49"><expr pos:start="153:45" pos:end="153:49"><name pos:start="153:45" pos:end="153:49">table</name></expr></argument>, <argument pos:start="153:52" pos:end="153:55"><expr pos:start="153:52" pos:end="153:55"><name pos:start="153:52" pos:end="153:55">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="155:25" pos:end="161:25"><if pos:start="155:25" pos:end="161:25">if <condition pos:start="155:28" pos:end="155:35">(<expr pos:start="155:29" pos:end="155:34"><name pos:start="155:29" pos:end="155:34">keysym</name></expr>)</condition> <block pos:start="155:37" pos:end="161:25">{<block_content pos:start="157:29" pos:end="159:68">

                            <expr_stmt pos:start="157:29" pos:end="159:68"><expr pos:start="157:29" pos:end="159:67"><call pos:start="157:29" pos:end="159:67"><name pos:start="157:29" pos:end="157:38">add_keysym</name><argument_list pos:start="157:39" pos:end="159:67">(<argument pos:start="157:40" pos:end="157:43"><expr pos:start="157:40" pos:end="157:43"><name pos:start="157:40" pos:end="157:43">line</name></expr></argument>, <argument pos:start="157:46" pos:end="157:51"><expr pos:start="157:46" pos:end="157:51"><name pos:start="157:46" pos:end="157:51">keysym</name></expr></argument>,

                                       <argument pos:start="159:40" pos:end="159:63"><expr pos:start="159:40" pos:end="159:63"><name pos:start="159:40" pos:end="159:46">keycode</name> <operator pos:start="159:48" pos:end="159:48">|</operator> <name pos:start="159:50" pos:end="159:63">SCANCODE_SHIFT</name></expr></argument>, <argument pos:start="159:66" pos:end="159:66"><expr pos:start="159:66" pos:end="159:66"><name pos:start="159:66" pos:end="159:66">k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="173:5" pos:end="173:14"><expr pos:start="173:5" pos:end="173:13"><call pos:start="173:5" pos:end="173:13"><name pos:start="173:5" pos:end="173:10">fclose</name><argument_list pos:start="173:11" pos:end="173:13">(<argument pos:start="173:12" pos:end="173:12"><expr pos:start="173:12" pos:end="173:12"><name pos:start="173:12" pos:end="173:12">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="175:5" pos:end="175:13">return <expr pos:start="175:12" pos:end="175:12"><name pos:start="175:12" pos:end="175:12">k</name></expr>;</return>

</block_content>}</block></function>
</unit>
