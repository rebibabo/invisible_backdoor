<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5003.c" pos:tabs="8"><function pos:start="1:1" pos:end="166:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:33">parse_nal_units</name><parameter_list pos:start="1:34" pos:end="2:63">(<parameter pos:start="1:35" pos:end="1:57"><decl pos:start="1:35" pos:end="1:57"><type pos:start="1:35" pos:end="1:57"><name pos:start="1:35" pos:end="1:54">AVCodecParserContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:77"><decl pos:start="1:60" pos:end="1:77"><type pos:start="1:60" pos:end="1:77"><specifier pos:start="1:60" pos:end="1:64">const</specifier> <name pos:start="1:66" pos:end="1:72">uint8_t</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:77">buf</name></decl></parameter>,
                           <parameter pos:start="2:28" pos:end="2:39"><decl pos:start="2:28" pos:end="2:39"><type pos:start="2:28" pos:end="2:39"><name pos:start="2:28" pos:end="2:30">int</name></type> <name pos:start="2:32" pos:end="2:39">buf_size</name></decl></parameter>, <parameter pos:start="2:42" pos:end="2:62"><decl pos:start="2:42" pos:end="2:62"><type pos:start="2:42" pos:end="2:62"><name pos:start="2:42" pos:end="2:55">AVCodecContext</name> <modifier pos:start="2:57" pos:end="2:57">*</modifier></type><name pos:start="2:58" pos:end="2:62">avctx</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="166:1">{<block_content pos:start="4:5" pos:end="165:14">
    <decl_stmt pos:start="4:5" pos:end="4:42"><decl pos:start="4:5" pos:end="4:41"><type pos:start="4:5" pos:end="4:23"><name pos:start="4:5" pos:end="4:21">HEVCParserContext</name> <modifier pos:start="4:23" pos:end="4:23">*</modifier></type><name pos:start="4:24" pos:end="4:26">ctx</name> <init pos:start="4:28" pos:end="4:41">= <expr pos:start="4:30" pos:end="4:41"><name pos:start="4:30" pos:end="4:41"><name pos:start="4:30" pos:end="4:30">s</name><operator pos:start="4:31" pos:end="4:32">-&gt;</operator><name pos:start="4:33" pos:end="4:41">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:15">HEVCContext</name>       <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">h</name>   <init pos:start="5:28" pos:end="5:36">= <expr pos:start="5:30" pos:end="5:36"><operator pos:start="5:30" pos:end="5:30">&amp;</operator><name pos:start="5:31" pos:end="5:36"><name pos:start="5:31" pos:end="5:33">ctx</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:36">h</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:27"><decl pos:start="6:5" pos:end="6:26"><type pos:start="6:5" pos:end="6:24"><name pos:start="6:5" pos:end="6:17">GetBitContext</name>      <modifier pos:start="6:24" pos:end="6:24">*</modifier></type><name pos:start="6:25" pos:end="6:26">gb</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:15">SliceHeader</name>        <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:26">sh</name> <init pos:start="7:28" pos:end="7:35">= <expr pos:start="7:30" pos:end="7:35"><operator pos:start="7:30" pos:end="7:30">&amp;</operator><name pos:start="7:31" pos:end="7:35"><name pos:start="7:31" pos:end="7:31">h</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:35">sh</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:31"><decl pos:start="8:5" pos:end="8:30"><type pos:start="8:5" pos:end="8:19"><name pos:start="8:5" pos:end="8:17">HEVCParamSets</name> <modifier pos:start="8:19" pos:end="8:19">*</modifier></type><name pos:start="8:20" pos:end="8:21">ps</name> <init pos:start="8:23" pos:end="8:30">= <expr pos:start="8:25" pos:end="8:30"><operator pos:start="8:25" pos:end="8:25">&amp;</operator><name pos:start="8:26" pos:end="8:30"><name pos:start="8:26" pos:end="8:26">h</name><operator pos:start="8:27" pos:end="8:28">-&gt;</operator><name pos:start="8:29" pos:end="8:30">ps</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:15">H2645Packet</name>   <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">pkt</name> <init pos:start="9:24" pos:end="9:34">= <expr pos:start="9:26" pos:end="9:34"><operator pos:start="9:26" pos:end="9:26">&amp;</operator><name pos:start="9:27" pos:end="9:34"><name pos:start="9:27" pos:end="9:29">ctx</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:34">pkt</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:44"><decl pos:start="10:5" pos:end="10:43"><type pos:start="10:5" pos:end="10:19"><specifier pos:start="10:5" pos:end="10:9">const</specifier> <name pos:start="10:11" pos:end="10:17">uint8_t</name> <modifier pos:start="10:19" pos:end="10:19">*</modifier></type><name pos:start="10:20" pos:end="10:26">buf_end</name> <init pos:start="10:28" pos:end="10:43">= <expr pos:start="10:30" pos:end="10:43"><name pos:start="10:30" pos:end="10:32">buf</name> <operator pos:start="10:34" pos:end="10:34">+</operator> <name pos:start="10:36" pos:end="10:43">buf_size</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">state</name> <init pos:start="11:15" pos:end="11:18">= <expr pos:start="11:17" pos:end="11:18"><operator pos:start="11:17" pos:end="11:17">-</operator><literal type="number" pos:start="11:18" pos:end="11:18">1</literal></expr></init></decl>, <decl pos:start="11:21" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:21">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:18"><decl pos:start="12:5" pos:end="12:17"><type pos:start="12:5" pos:end="12:14"><name pos:start="12:5" pos:end="12:12">H2645NAL</name> <modifier pos:start="12:14" pos:end="12:14">*</modifier></type><name pos:start="12:15" pos:end="12:17">nal</name></decl>;</decl_stmt>
    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">is_global</name> <init pos:start="13:19" pos:end="13:43">= <expr pos:start="13:21" pos:end="13:43"><name pos:start="13:21" pos:end="13:23">buf</name> <operator pos:start="13:25" pos:end="13:26">==</operator> <name pos:start="13:28" pos:end="13:43"><name pos:start="13:28" pos:end="13:32">avctx</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:43">extradata</name></name></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="14:5" pos:end="15:57"><if pos:start="14:5" pos:end="15:57">if <condition pos:start="14:8" pos:end="14:19">(<expr pos:start="14:9" pos:end="14:18"><operator pos:start="14:9" pos:end="14:9">!</operator><name pos:start="14:10" pos:end="14:18"><name pos:start="14:10" pos:end="14:10">h</name><operator pos:start="14:11" pos:end="14:12">-&gt;</operator><name pos:start="14:13" pos:end="14:18">HEVClc</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:57"><block_content pos:start="15:9" pos:end="15:57">
        <expr_stmt pos:start="15:9" pos:end="15:57"><expr pos:start="15:9" pos:end="15:56"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:9">h</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:17">HEVClc</name></name> <operator pos:start="15:19" pos:end="15:19">=</operator> <call pos:start="15:21" pos:end="15:56"><name pos:start="15:21" pos:end="15:30">av_mallocz</name><argument_list pos:start="15:31" pos:end="15:56">(<argument pos:start="15:32" pos:end="15:55"><expr pos:start="15:32" pos:end="15:55"><sizeof pos:start="15:32" pos:end="15:55">sizeof<argument_list pos:start="15:38" pos:end="15:55">(<argument pos:start="15:39" pos:end="15:54"><expr pos:start="15:39" pos:end="15:54"><name pos:start="15:39" pos:end="15:54">HEVCLocalContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="16:5" pos:end="17:31"><if pos:start="16:5" pos:end="17:31">if <condition pos:start="16:8" pos:end="16:19">(<expr pos:start="16:9" pos:end="16:18"><operator pos:start="16:9" pos:end="16:9">!</operator><name pos:start="16:10" pos:end="16:18"><name pos:start="16:10" pos:end="16:10">h</name><operator pos:start="16:11" pos:end="16:12">-&gt;</operator><name pos:start="16:13" pos:end="16:18">HEVClc</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">
        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:24"><expr pos:start="18:5" pos:end="18:23"><name pos:start="18:5" pos:end="18:6">gb</name> <operator pos:start="18:8" pos:end="18:8">=</operator> <operator pos:start="18:10" pos:end="18:10">&amp;</operator><name pos:start="18:11" pos:end="18:23"><name pos:start="18:11" pos:end="18:11">h</name><operator pos:start="18:12" pos:end="18:13">-&gt;</operator><name pos:start="18:14" pos:end="18:19">HEVClc</name><operator pos:start="18:20" pos:end="18:21">-&gt;</operator><name pos:start="18:22" pos:end="18:23">gb</name></name></expr>;</expr_stmt>
    <comment type="block" pos:start="19:5" pos:end="19:38">/* set some sane default values */</comment>
    <expr_stmt pos:start="20:5" pos:end="20:45"><expr pos:start="20:5" pos:end="20:44"><name pos:start="20:5" pos:end="20:16"><name pos:start="20:5" pos:end="20:5">s</name><operator pos:start="20:6" pos:end="20:7">-&gt;</operator><name pos:start="20:8" pos:end="20:16">pict_type</name></name>         <operator pos:start="20:26" pos:end="20:26">=</operator> <name pos:start="20:28" pos:end="20:44">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:16">key_frame</name></name>         <operator pos:start="21:26" pos:end="21:26">=</operator> <literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:56"><expr pos:start="22:5" pos:end="22:55"><name pos:start="22:5" pos:end="22:24"><name pos:start="22:5" pos:end="22:5">s</name><operator pos:start="22:6" pos:end="22:7">-&gt;</operator><name pos:start="22:8" pos:end="22:24">picture_structure</name></name> <operator pos:start="22:26" pos:end="22:26">=</operator> <name pos:start="22:28" pos:end="22:55">AV_PICTURE_STRUCTURE_UNKNOWN</name></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:5">h</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:12">avctx</name></name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:20">avctx</name></expr>;</expr_stmt>
    <if_stmt pos:start="24:5" pos:end="25:17"><if pos:start="24:5" pos:end="25:17">if <condition pos:start="24:8" pos:end="24:18">(<expr pos:start="24:9" pos:end="24:17"><operator pos:start="24:9" pos:end="24:9">!</operator><name pos:start="24:10" pos:end="24:17">buf_size</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:17"><block_content pos:start="25:9" pos:end="25:17">
        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="26:5" pos:end="33:5"><if pos:start="26:5" pos:end="33:5">if <condition pos:start="26:8" pos:end="26:32">(<expr pos:start="26:9" pos:end="26:31"><name pos:start="26:9" pos:end="26:27"><name pos:start="26:9" pos:end="26:11">pkt</name><operator pos:start="26:12" pos:end="26:13">-&gt;</operator><name pos:start="26:14" pos:end="26:27">nals_allocated</name></name> <operator pos:start="26:29" pos:end="26:29">&lt;</operator> <literal type="number" pos:start="26:31" pos:end="26:31">1</literal></expr>)</condition> <block pos:start="26:34" pos:end="33:5">{<block_content pos:start="27:9" pos:end="32:32">
        <decl_stmt pos:start="27:9" pos:end="27:69"><decl pos:start="27:9" pos:end="27:68"><type pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:16">H2645NAL</name> <modifier pos:start="27:18" pos:end="27:18">*</modifier></type><name pos:start="27:19" pos:end="27:21">tmp</name> <init pos:start="27:23" pos:end="27:68">= <expr pos:start="27:25" pos:end="27:68"><call pos:start="27:25" pos:end="27:68"><name pos:start="27:25" pos:end="27:40">av_realloc_array</name><argument_list pos:start="27:41" pos:end="27:68">(<argument pos:start="27:42" pos:end="27:50"><expr pos:start="27:42" pos:end="27:50"><name pos:start="27:42" pos:end="27:50"><name pos:start="27:42" pos:end="27:44">pkt</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:50">nals</name></name></expr></argument>, <argument pos:start="27:53" pos:end="27:53"><expr pos:start="27:53" pos:end="27:53"><literal type="number" pos:start="27:53" pos:end="27:53">1</literal></expr></argument>, <argument pos:start="27:56" pos:end="27:67"><expr pos:start="27:56" pos:end="27:67"><sizeof pos:start="27:56" pos:end="27:67">sizeof<argument_list pos:start="27:62" pos:end="27:67">(<argument pos:start="27:63" pos:end="27:66"><expr pos:start="27:63" pos:end="27:66"><operator pos:start="27:63" pos:end="27:63">*</operator><name pos:start="27:64" pos:end="27:66">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="28:9" pos:end="29:35"><if pos:start="28:9" pos:end="29:35">if <condition pos:start="28:12" pos:end="28:17">(<expr pos:start="28:13" pos:end="28:16"><operator pos:start="28:13" pos:end="28:13">!</operator><name pos:start="28:14" pos:end="28:16">tmp</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:35"><block_content pos:start="29:13" pos:end="29:35">
            <return pos:start="29:13" pos:end="29:35">return <expr pos:start="29:20" pos:end="29:34"><call pos:start="29:20" pos:end="29:34"><name pos:start="29:20" pos:end="29:26">AVERROR</name><argument_list pos:start="29:27" pos:end="29:34">(<argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><name pos:start="29:28" pos:end="29:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="30:9" pos:end="30:24"><expr pos:start="30:9" pos:end="30:23"><name pos:start="30:9" pos:end="30:17"><name pos:start="30:9" pos:end="30:11">pkt</name><operator pos:start="30:12" pos:end="30:13">-&gt;</operator><name pos:start="30:14" pos:end="30:17">nals</name></name> <operator pos:start="30:19" pos:end="30:19">=</operator> <name pos:start="30:21" pos:end="30:23">tmp</name></expr>;</expr_stmt>
        <expr_stmt pos:start="31:9" pos:end="31:43"><expr pos:start="31:9" pos:end="31:42"><call pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:14">memset</name><argument_list pos:start="31:15" pos:end="31:42">(<argument pos:start="31:16" pos:end="31:24"><expr pos:start="31:16" pos:end="31:24"><name pos:start="31:16" pos:end="31:24"><name pos:start="31:16" pos:end="31:18">pkt</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:24">nals</name></name></expr></argument>, <argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr></argument>, <argument pos:start="31:30" pos:end="31:41"><expr pos:start="31:30" pos:end="31:41"><sizeof pos:start="31:30" pos:end="31:41">sizeof<argument_list pos:start="31:36" pos:end="31:41">(<argument pos:start="31:37" pos:end="31:40"><expr pos:start="31:37" pos:end="31:40"><operator pos:start="31:37" pos:end="31:37">*</operator><name pos:start="31:38" pos:end="31:40">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:32"><expr pos:start="32:9" pos:end="32:31"><name pos:start="32:9" pos:end="32:27"><name pos:start="32:9" pos:end="32:11">pkt</name><operator pos:start="32:12" pos:end="32:13">-&gt;</operator><name pos:start="32:14" pos:end="32:27">nals_allocated</name></name> <operator pos:start="32:29" pos:end="32:29">=</operator> <literal type="number" pos:start="32:31" pos:end="32:31">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:24"><expr pos:start="34:5" pos:end="34:23"><name pos:start="34:5" pos:end="34:7">nal</name> <operator pos:start="34:9" pos:end="34:9">=</operator> <operator pos:start="34:11" pos:end="34:11">&amp;</operator><name pos:start="34:12" pos:end="34:23"><name pos:start="34:12" pos:end="34:14">pkt</name><operator pos:start="34:15" pos:end="34:16">-&gt;</operator><name pos:start="34:17" pos:end="34:20">nals</name><index pos:start="34:21" pos:end="34:23">[<expr pos:start="34:22" pos:end="34:22"><literal type="number" pos:start="34:22" pos:end="34:22">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <for pos:start="35:5" pos:end="161:5">for <control pos:start="35:9" pos:end="35:12">(<init pos:start="35:10" pos:end="35:10">;</init><condition pos:start="35:11" pos:end="35:11">;</condition><incr/>)</control> <block pos:start="35:14" pos:end="161:5">{<block_content pos:start="36:9" pos:end="160:24">
        <decl_stmt pos:start="36:9" pos:end="36:33"><decl pos:start="36:9" pos:end="36:22"><type pos:start="36:9" pos:end="36:11"><name pos:start="36:9" pos:end="36:11">int</name></type> <name pos:start="36:13" pos:end="36:22">src_length</name></decl>, <decl pos:start="36:25" pos:end="36:32"><type ref="prev" pos:start="36:9" pos:end="36:11"/><name pos:start="36:25" pos:end="36:32">consumed</name></decl>;</decl_stmt>
        <decl_stmt pos:start="37:9" pos:end="37:16"><decl pos:start="37:9" pos:end="37:15"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:15">ret</name></decl>;</decl_stmt>
        <expr_stmt pos:start="38:9" pos:end="38:59"><expr pos:start="38:9" pos:end="38:58"><name pos:start="38:9" pos:end="38:11">buf</name> <operator pos:start="38:13" pos:end="38:13">=</operator> <call pos:start="38:15" pos:end="38:58"><name pos:start="38:15" pos:end="38:36">avpriv_find_start_code</name><argument_list pos:start="38:37" pos:end="38:58">(<argument pos:start="38:38" pos:end="38:40"><expr pos:start="38:38" pos:end="38:40"><name pos:start="38:38" pos:end="38:40">buf</name></expr></argument>, <argument pos:start="38:43" pos:end="38:49"><expr pos:start="38:43" pos:end="38:49"><name pos:start="38:43" pos:end="38:49">buf_end</name></expr></argument>, <argument pos:start="38:52" pos:end="38:57"><expr pos:start="38:52" pos:end="38:57"><operator pos:start="38:52" pos:end="38:52">&amp;</operator><name pos:start="38:53" pos:end="38:57">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="39:9" pos:end="40:18"><if pos:start="39:9" pos:end="40:18">if <condition pos:start="39:12" pos:end="39:33">(<expr pos:start="39:13" pos:end="39:32"><operator pos:start="39:13" pos:end="39:14">--</operator><name pos:start="39:15" pos:end="39:17">buf</name> <operator pos:start="39:19" pos:end="39:19">+</operator> <literal type="number" pos:start="39:21" pos:end="39:21">2</literal> <operator pos:start="39:23" pos:end="39:24">&gt;=</operator> <name pos:start="39:26" pos:end="39:32">buf_end</name></expr>)</condition><block type="pseudo" pos:start="40:13" pos:end="40:18"><block_content pos:start="40:13" pos:end="40:18">
            <break pos:start="40:13" pos:end="40:18">break;</break></block_content></block></if></if_stmt>
        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:18">src_length</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:28">buf_end</name> <operator pos:start="41:30" pos:end="41:30">-</operator> <name pos:start="41:32" pos:end="41:34">buf</name></expr>;</expr_stmt>
        <expr_stmt pos:start="42:9" pos:end="42:46"><expr pos:start="42:9" pos:end="42:45"><name pos:start="42:9" pos:end="42:24"><name pos:start="42:9" pos:end="42:9">h</name><operator pos:start="42:10" pos:end="42:11">-&gt;</operator><name pos:start="42:12" pos:end="42:24">nal_unit_type</name></name> <operator pos:start="42:26" pos:end="42:26">=</operator> <operator pos:start="42:28" pos:end="42:28">(</operator><operator pos:start="42:29" pos:end="42:29">*</operator><name pos:start="42:30" pos:end="42:32">buf</name> <operator pos:start="42:34" pos:end="42:35">&gt;&gt;</operator> <literal type="number" pos:start="42:37" pos:end="42:37">1</literal><operator pos:start="42:38" pos:end="42:38">)</operator> <operator pos:start="42:40" pos:end="42:40">&amp;</operator> <literal type="number" pos:start="42:42" pos:end="42:45">0x3f</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="43:9" pos:end="43:51"><expr pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:9">h</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:22">temporal_id</name></name>   <operator pos:start="43:26" pos:end="43:26">=</operator> <operator pos:start="43:28" pos:end="43:28">(</operator><operator pos:start="43:29" pos:end="43:29">*</operator><operator pos:start="43:30" pos:end="43:30">(</operator><name pos:start="43:31" pos:end="43:33">buf</name> <operator pos:start="43:35" pos:end="43:35">+</operator> <literal type="number" pos:start="43:37" pos:end="43:37">1</literal><operator pos:start="43:38" pos:end="43:38">)</operator> <operator pos:start="43:40" pos:end="43:40">&amp;</operator> <literal type="number" pos:start="43:42" pos:end="43:45">0x07</literal><operator pos:start="43:46" pos:end="43:46">)</operator> <operator pos:start="43:48" pos:end="43:48">-</operator> <literal type="number" pos:start="43:50" pos:end="43:50">1</literal></expr>;</expr_stmt>
        <if_stmt pos:start="44:9" pos:end="48:9"><if pos:start="44:9" pos:end="48:9">if <condition pos:start="44:12" pos:end="44:44">(<expr pos:start="44:13" pos:end="44:43"><name pos:start="44:13" pos:end="44:28"><name pos:start="44:13" pos:end="44:13">h</name><operator pos:start="44:14" pos:end="44:15">-&gt;</operator><name pos:start="44:16" pos:end="44:28">nal_unit_type</name></name> <operator pos:start="44:30" pos:end="44:31">&lt;=</operator> <name pos:start="44:33" pos:end="44:43">NAL_CRA_NUT</name></expr>)</condition> <block pos:start="44:46" pos:end="48:9">{<block_content pos:start="46:13" pos:end="47:32">
            <comment type="line" pos:start="45:13" pos:end="45:79">// Do not walk the whole buffer just to decode slice segment header</comment>
            <if_stmt pos:start="46:13" pos:end="47:32"><if pos:start="46:13" pos:end="47:32">if <condition pos:start="46:16" pos:end="46:32">(<expr pos:start="46:17" pos:end="46:31"><name pos:start="46:17" pos:end="46:26">src_length</name> <operator pos:start="46:28" pos:end="46:28">&gt;</operator> <literal type="number" pos:start="46:30" pos:end="46:31">20</literal></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:32"><block_content pos:start="47:17" pos:end="47:32">
                <expr_stmt pos:start="47:17" pos:end="47:32"><expr pos:start="47:17" pos:end="47:31"><name pos:start="47:17" pos:end="47:26">src_length</name> <operator pos:start="47:28" pos:end="47:28">=</operator> <literal type="number" pos:start="47:30" pos:end="47:31">20</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="49:9" pos:end="49:63"><expr pos:start="49:9" pos:end="49:62"><name pos:start="49:9" pos:end="49:16">consumed</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:62"><name pos:start="49:20" pos:end="49:40">ff_h2645_extract_rbsp</name><argument_list pos:start="49:41" pos:end="49:62">(<argument pos:start="49:42" pos:end="49:44"><expr pos:start="49:42" pos:end="49:44"><name pos:start="49:42" pos:end="49:44">buf</name></expr></argument>, <argument pos:start="49:47" pos:end="49:56"><expr pos:start="49:47" pos:end="49:56"><name pos:start="49:47" pos:end="49:56">src_length</name></expr></argument>, <argument pos:start="49:59" pos:end="49:61"><expr pos:start="49:59" pos:end="49:61"><name pos:start="49:59" pos:end="49:61">nal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="50:9" pos:end="51:28"><if pos:start="50:9" pos:end="51:28">if <condition pos:start="50:12" pos:end="50:25">(<expr pos:start="50:13" pos:end="50:24"><name pos:start="50:13" pos:end="50:20">consumed</name> <operator pos:start="50:22" pos:end="50:22">&lt;</operator> <literal type="number" pos:start="50:24" pos:end="50:24">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:28"><block_content pos:start="51:13" pos:end="51:28">
            <return pos:start="51:13" pos:end="51:28">return <expr pos:start="51:20" pos:end="51:27"><name pos:start="51:20" pos:end="51:27">consumed</name></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="52:9" pos:end="52:59"><expr pos:start="52:9" pos:end="52:58"><name pos:start="52:9" pos:end="52:11">ret</name> <operator pos:start="52:13" pos:end="52:13">=</operator> <call pos:start="52:15" pos:end="52:58"><name pos:start="52:15" pos:end="52:28">init_get_bits8</name><argument_list pos:start="52:29" pos:end="52:58">(<argument pos:start="52:30" pos:end="52:31"><expr pos:start="52:30" pos:end="52:31"><name pos:start="52:30" pos:end="52:31">gb</name></expr></argument>, <argument pos:start="52:34" pos:end="52:46"><expr pos:start="52:34" pos:end="52:46"><name pos:start="52:34" pos:end="52:42"><name pos:start="52:34" pos:end="52:36">nal</name><operator pos:start="52:37" pos:end="52:38">-&gt;</operator><name pos:start="52:39" pos:end="52:42">data</name></name> <operator pos:start="52:44" pos:end="52:44">+</operator> <literal type="number" pos:start="52:46" pos:end="52:46">2</literal></expr></argument>, <argument pos:start="52:49" pos:end="52:57"><expr pos:start="52:49" pos:end="52:57"><name pos:start="52:49" pos:end="52:57"><name pos:start="52:49" pos:end="52:51">nal</name><operator pos:start="52:52" pos:end="52:53">-&gt;</operator><name pos:start="52:54" pos:end="52:57">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="53:9" pos:end="54:23"><if pos:start="53:9" pos:end="54:23">if <condition pos:start="53:12" pos:end="53:20">(<expr pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:17">&lt;</operator> <literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>)</condition><block type="pseudo" pos:start="54:13" pos:end="54:23"><block_content pos:start="54:13" pos:end="54:23">
            <return pos:start="54:13" pos:end="54:23">return <expr pos:start="54:20" pos:end="54:22"><name pos:start="54:20" pos:end="54:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <switch pos:start="55:9" pos:end="159:9">switch <condition pos:start="55:16" pos:end="55:33">(<expr pos:start="55:17" pos:end="55:32"><name pos:start="55:17" pos:end="55:32"><name pos:start="55:17" pos:end="55:17">h</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:32">nal_unit_type</name></name></expr>)</condition> <block pos:start="55:35" pos:end="159:9">{<block_content pos:start="56:9" pos:end="158:21">
        <case pos:start="56:9" pos:end="56:21">case <expr pos:start="56:14" pos:end="56:20"><name pos:start="56:14" pos:end="56:20">NAL_VPS</name></expr>:</case>
            <expr_stmt pos:start="57:13" pos:end="57:50"><expr pos:start="57:13" pos:end="57:49"><call pos:start="57:13" pos:end="57:49"><name pos:start="57:13" pos:end="57:34">ff_hevc_decode_nal_vps</name><argument_list pos:start="57:35" pos:end="57:49">(<argument pos:start="57:36" pos:end="57:37"><expr pos:start="57:36" pos:end="57:37"><name pos:start="57:36" pos:end="57:37">gb</name></expr></argument>, <argument pos:start="57:40" pos:end="57:44"><expr pos:start="57:40" pos:end="57:44"><name pos:start="57:40" pos:end="57:44">avctx</name></expr></argument>, <argument pos:start="57:47" pos:end="57:48"><expr pos:start="57:47" pos:end="57:48"><name pos:start="57:47" pos:end="57:48">ps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="58:13" pos:end="58:18">break;</break>
        <case pos:start="59:9" pos:end="59:21">case <expr pos:start="59:14" pos:end="59:20"><name pos:start="59:14" pos:end="59:20">NAL_SPS</name></expr>:</case>
            <expr_stmt pos:start="60:13" pos:end="60:53"><expr pos:start="60:13" pos:end="60:52"><call pos:start="60:13" pos:end="60:52"><name pos:start="60:13" pos:end="60:34">ff_hevc_decode_nal_sps</name><argument_list pos:start="60:35" pos:end="60:52">(<argument pos:start="60:36" pos:end="60:37"><expr pos:start="60:36" pos:end="60:37"><name pos:start="60:36" pos:end="60:37">gb</name></expr></argument>, <argument pos:start="60:40" pos:end="60:44"><expr pos:start="60:40" pos:end="60:44"><name pos:start="60:40" pos:end="60:44">avctx</name></expr></argument>, <argument pos:start="60:47" pos:end="60:48"><expr pos:start="60:47" pos:end="60:48"><name pos:start="60:47" pos:end="60:48">ps</name></expr></argument>, <argument pos:start="60:51" pos:end="60:51"><expr pos:start="60:51" pos:end="60:51"><literal type="number" pos:start="60:51" pos:end="60:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="61:13" pos:end="61:18">break;</break>
        <case pos:start="62:9" pos:end="62:21">case <expr pos:start="62:14" pos:end="62:20"><name pos:start="62:14" pos:end="62:20">NAL_PPS</name></expr>:</case>
            <expr_stmt pos:start="63:13" pos:end="63:50"><expr pos:start="63:13" pos:end="63:49"><call pos:start="63:13" pos:end="63:49"><name pos:start="63:13" pos:end="63:34">ff_hevc_decode_nal_pps</name><argument_list pos:start="63:35" pos:end="63:49">(<argument pos:start="63:36" pos:end="63:37"><expr pos:start="63:36" pos:end="63:37"><name pos:start="63:36" pos:end="63:37">gb</name></expr></argument>, <argument pos:start="63:40" pos:end="63:44"><expr pos:start="63:40" pos:end="63:44"><name pos:start="63:40" pos:end="63:44">avctx</name></expr></argument>, <argument pos:start="63:47" pos:end="63:48"><expr pos:start="63:47" pos:end="63:48"><name pos:start="63:47" pos:end="63:48">ps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="64:13" pos:end="64:18">break;</break>
        <case pos:start="65:9" pos:end="65:28">case <expr pos:start="65:14" pos:end="65:27"><name pos:start="65:14" pos:end="65:27">NAL_SEI_PREFIX</name></expr>:</case>
        <case pos:start="66:9" pos:end="66:28">case <expr pos:start="66:14" pos:end="66:27"><name pos:start="66:14" pos:end="66:27">NAL_SEI_SUFFIX</name></expr>:</case>
            <expr_stmt pos:start="67:13" pos:end="67:38"><expr pos:start="67:13" pos:end="67:37"><call pos:start="67:13" pos:end="67:37"><name pos:start="67:13" pos:end="67:34">ff_hevc_decode_nal_sei</name><argument_list pos:start="67:35" pos:end="67:37">(<argument pos:start="67:36" pos:end="67:36"><expr pos:start="67:36" pos:end="67:36"><name pos:start="67:36" pos:end="67:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="68:13" pos:end="68:18">break;</break>
        <case pos:start="69:9" pos:end="69:25">case <expr pos:start="69:14" pos:end="69:24"><name pos:start="69:14" pos:end="69:24">NAL_TRAIL_N</name></expr>:</case>
        <case pos:start="70:9" pos:end="70:25">case <expr pos:start="70:14" pos:end="70:24"><name pos:start="70:14" pos:end="70:24">NAL_TRAIL_R</name></expr>:</case>
        <case pos:start="71:9" pos:end="71:23">case <expr pos:start="71:14" pos:end="71:22"><name pos:start="71:14" pos:end="71:22">NAL_TSA_N</name></expr>:</case>
        <case pos:start="72:9" pos:end="72:23">case <expr pos:start="72:14" pos:end="72:22"><name pos:start="72:14" pos:end="72:22">NAL_TSA_R</name></expr>:</case>
        <case pos:start="73:9" pos:end="73:24">case <expr pos:start="73:14" pos:end="73:23"><name pos:start="73:14" pos:end="73:23">NAL_STSA_N</name></expr>:</case>
        <case pos:start="74:9" pos:end="74:24">case <expr pos:start="74:14" pos:end="74:23"><name pos:start="74:14" pos:end="74:23">NAL_STSA_R</name></expr>:</case>
        <case pos:start="75:9" pos:end="75:24">case <expr pos:start="75:14" pos:end="75:23"><name pos:start="75:14" pos:end="75:23">NAL_RADL_N</name></expr>:</case>
        <case pos:start="76:9" pos:end="76:24">case <expr pos:start="76:14" pos:end="76:23"><name pos:start="76:14" pos:end="76:23">NAL_RADL_R</name></expr>:</case>
        <case pos:start="77:9" pos:end="77:24">case <expr pos:start="77:14" pos:end="77:23"><name pos:start="77:14" pos:end="77:23">NAL_RASL_N</name></expr>:</case>
        <case pos:start="78:9" pos:end="78:24">case <expr pos:start="78:14" pos:end="78:23"><name pos:start="78:14" pos:end="78:23">NAL_RASL_R</name></expr>:</case>
        <case pos:start="79:9" pos:end="79:26">case <expr pos:start="79:14" pos:end="79:25"><name pos:start="79:14" pos:end="79:25">NAL_BLA_W_LP</name></expr>:</case>
        <case pos:start="80:9" pos:end="80:28">case <expr pos:start="80:14" pos:end="80:27"><name pos:start="80:14" pos:end="80:27">NAL_BLA_W_RADL</name></expr>:</case>
        <case pos:start="81:9" pos:end="81:26">case <expr pos:start="81:14" pos:end="81:25"><name pos:start="81:14" pos:end="81:25">NAL_BLA_N_LP</name></expr>:</case>
        <case pos:start="82:9" pos:end="82:28">case <expr pos:start="82:14" pos:end="82:27"><name pos:start="82:14" pos:end="82:27">NAL_IDR_W_RADL</name></expr>:</case>
        <case pos:start="83:9" pos:end="83:26">case <expr pos:start="83:14" pos:end="83:25"><name pos:start="83:14" pos:end="83:25">NAL_IDR_N_LP</name></expr>:</case>
        <case pos:start="84:9" pos:end="84:25">case <expr pos:start="84:14" pos:end="84:24"><name pos:start="84:14" pos:end="84:24">NAL_CRA_NUT</name></expr>:</case>
            <if_stmt pos:start="85:13" pos:end="88:13"><if pos:start="85:13" pos:end="88:13">if <condition pos:start="85:16" pos:end="85:26">(<expr pos:start="85:17" pos:end="85:25"><name pos:start="85:17" pos:end="85:25">is_global</name></expr>)</condition> <block pos:start="85:28" pos:end="88:13">{<block_content pos:start="86:17" pos:end="87:43">
                <expr_stmt pos:start="86:17" pos:end="86:88"><expr pos:start="86:17" pos:end="86:87"><call pos:start="86:17" pos:end="86:87"><name pos:start="86:17" pos:end="86:22">av_log</name><argument_list pos:start="86:23" pos:end="86:87">(<argument pos:start="86:24" pos:end="86:28"><expr pos:start="86:24" pos:end="86:28"><name pos:start="86:24" pos:end="86:28">avctx</name></expr></argument>, <argument pos:start="86:31" pos:end="86:42"><expr pos:start="86:31" pos:end="86:42"><name pos:start="86:31" pos:end="86:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="86:45" pos:end="86:68"><expr pos:start="86:45" pos:end="86:68"><literal type="string" pos:start="86:45" pos:end="86:68">"Invalid NAL unit: %d\n"</literal></expr></argument>, <argument pos:start="86:71" pos:end="86:86"><expr pos:start="86:71" pos:end="86:86"><name pos:start="86:71" pos:end="86:86"><name pos:start="86:71" pos:end="86:71">h</name><operator pos:start="86:72" pos:end="86:73">-&gt;</operator><name pos:start="86:74" pos:end="86:86">nal_unit_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:start="87:17" pos:end="87:43">return <expr pos:start="87:24" pos:end="87:42"><name pos:start="87:24" pos:end="87:42">AVERROR_INVALIDDATA</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="89:13" pos:end="89:56"><expr pos:start="89:13" pos:end="89:55"><name pos:start="89:13" pos:end="89:39"><name pos:start="89:13" pos:end="89:14">sh</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:39">first_slice_in_pic_flag</name></name> <operator pos:start="89:41" pos:end="89:41">=</operator> <call pos:start="89:43" pos:end="89:55"><name pos:start="89:43" pos:end="89:51">get_bits1</name><argument_list pos:start="89:52" pos:end="89:55">(<argument pos:start="89:53" pos:end="89:54"><expr pos:start="89:53" pos:end="89:54"><name pos:start="89:53" pos:end="89:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="90:13" pos:end="90:53"><expr pos:start="90:13" pos:end="90:52"><name pos:start="90:13" pos:end="90:32"><name pos:start="90:13" pos:end="90:13">s</name><operator pos:start="90:14" pos:end="90:15">-&gt;</operator><name pos:start="90:16" pos:end="90:32">picture_structure</name></name> <operator pos:start="90:34" pos:end="90:34">=</operator> <name pos:start="90:36" pos:end="90:52"><name pos:start="90:36" pos:end="90:36">h</name><operator pos:start="90:37" pos:end="90:38">-&gt;</operator><name pos:start="90:39" pos:end="90:52">picture_struct</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="91:13" pos:end="91:47"><expr pos:start="91:13" pos:end="91:46"><name pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:26">field_order</name></name> <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:46"><name pos:start="91:30" pos:end="91:30">h</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:46">picture_struct</name></name></expr>;</expr_stmt>
            <if_stmt pos:start="92:13" pos:end="95:13"><if pos:start="92:13" pos:end="95:13">if <condition pos:start="92:16" pos:end="92:27">(<expr pos:start="92:17" pos:end="92:26"><call pos:start="92:17" pos:end="92:26"><name pos:start="92:17" pos:end="92:23">IS_IRAP</name><argument_list pos:start="92:24" pos:end="92:26">(<argument pos:start="92:25" pos:end="92:25"><expr pos:start="92:25" pos:end="92:25"><name pos:start="92:25" pos:end="92:25">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="92:29" pos:end="95:13">{<block_content pos:start="93:17" pos:end="94:65">
                <expr_stmt pos:start="93:17" pos:end="93:33"><expr pos:start="93:17" pos:end="93:32"><name pos:start="93:17" pos:end="93:28"><name pos:start="93:17" pos:end="93:17">s</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:28">key_frame</name></name> <operator pos:start="93:30" pos:end="93:30">=</operator> <literal type="number" pos:start="93:32" pos:end="93:32">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="94:17" pos:end="94:65"><expr pos:start="94:17" pos:end="94:64"><name pos:start="94:17" pos:end="94:48"><name pos:start="94:17" pos:end="94:18">sh</name><operator pos:start="94:19" pos:end="94:20">-&gt;</operator><name pos:start="94:21" pos:end="94:48">no_output_of_prior_pics_flag</name></name> <operator pos:start="94:50" pos:end="94:50">=</operator> <call pos:start="94:52" pos:end="94:64"><name pos:start="94:52" pos:end="94:60">get_bits1</name><argument_list pos:start="94:61" pos:end="94:64">(<argument pos:start="94:62" pos:end="94:63"><expr pos:start="94:62" pos:end="94:63"><name pos:start="94:62" pos:end="94:63">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="96:13" pos:end="96:43"><expr pos:start="96:13" pos:end="96:42"><name pos:start="96:13" pos:end="96:22"><name pos:start="96:13" pos:end="96:14">sh</name><operator pos:start="96:15" pos:end="96:16">-&gt;</operator><name pos:start="96:17" pos:end="96:22">pps_id</name></name> <operator pos:start="96:24" pos:end="96:24">=</operator> <call pos:start="96:26" pos:end="96:42"><name pos:start="96:26" pos:end="96:38">get_ue_golomb</name><argument_list pos:start="96:39" pos:end="96:42">(<argument pos:start="96:40" pos:end="96:41"><expr pos:start="96:40" pos:end="96:41"><name pos:start="96:40" pos:end="96:41">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="97:13" pos:end="100:13"><if pos:start="97:13" pos:end="100:13">if <condition pos:start="97:16" pos:end="97:73">(<expr pos:start="97:17" pos:end="97:72"><name pos:start="97:17" pos:end="97:26"><name pos:start="97:17" pos:end="97:18">sh</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:26">pps_id</name></name> <operator pos:start="97:28" pos:end="97:29">&gt;=</operator> <name pos:start="97:31" pos:end="97:43">MAX_PPS_COUNT</name> <operator pos:start="97:45" pos:end="97:46">||</operator> <operator pos:start="97:48" pos:end="97:48">!</operator><name pos:start="97:49" pos:end="97:72"><name pos:start="97:49" pos:end="97:50">ps</name><operator pos:start="97:51" pos:end="97:52">-&gt;</operator><name pos:start="97:53" pos:end="97:60">pps_list</name><index pos:start="97:61" pos:end="97:72">[<expr pos:start="97:62" pos:end="97:71"><name pos:start="97:62" pos:end="97:71"><name pos:start="97:62" pos:end="97:63">sh</name><operator pos:start="97:64" pos:end="97:65">-&gt;</operator><name pos:start="97:66" pos:end="97:71">pps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="97:75" pos:end="100:13">{<block_content pos:start="98:17" pos:end="99:43">
                <expr_stmt pos:start="98:17" pos:end="98:85"><expr pos:start="98:17" pos:end="98:84"><call pos:start="98:17" pos:end="98:84"><name pos:start="98:17" pos:end="98:22">av_log</name><argument_list pos:start="98:23" pos:end="98:84">(<argument pos:start="98:24" pos:end="98:28"><expr pos:start="98:24" pos:end="98:28"><name pos:start="98:24" pos:end="98:28">avctx</name></expr></argument>, <argument pos:start="98:31" pos:end="98:42"><expr pos:start="98:31" pos:end="98:42"><name pos:start="98:31" pos:end="98:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="98:45" pos:end="98:71"><expr pos:start="98:45" pos:end="98:71"><literal type="string" pos:start="98:45" pos:end="98:71">"PPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="98:74" pos:end="98:83"><expr pos:start="98:74" pos:end="98:83"><name pos:start="98:74" pos:end="98:83"><name pos:start="98:74" pos:end="98:75">sh</name><operator pos:start="98:76" pos:end="98:77">-&gt;</operator><name pos:start="98:78" pos:end="98:83">pps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:start="99:17" pos:end="99:43">return <expr pos:start="99:24" pos:end="99:42"><name pos:start="99:24" pos:end="99:42">AVERROR_INVALIDDATA</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="101:13" pos:end="101:63"><expr pos:start="101:13" pos:end="101:62"><name pos:start="101:13" pos:end="101:19"><name pos:start="101:13" pos:end="101:14">ps</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:19">pps</name></name> <operator pos:start="101:21" pos:end="101:21">=</operator> <operator pos:start="101:23" pos:end="101:23">(</operator><name pos:start="101:24" pos:end="101:30">HEVCPPS</name><operator pos:start="101:31" pos:end="101:31">*</operator><operator pos:start="101:32" pos:end="101:32">)</operator><name pos:start="101:33" pos:end="101:56"><name pos:start="101:33" pos:end="101:34">ps</name><operator pos:start="101:35" pos:end="101:36">-&gt;</operator><name pos:start="101:37" pos:end="101:44">pps_list</name><index pos:start="101:45" pos:end="101:56">[<expr pos:start="101:46" pos:end="101:55"><name pos:start="101:46" pos:end="101:55"><name pos:start="101:46" pos:end="101:47">sh</name><operator pos:start="101:48" pos:end="101:49">-&gt;</operator><name pos:start="101:50" pos:end="101:55">pps_id</name></name></expr>]</index></name><operator pos:start="101:57" pos:end="101:58">-&gt;</operator><name pos:start="101:59" pos:end="101:62">data</name></expr>;</expr_stmt>
            <if_stmt pos:start="102:13" pos:end="105:13"><if pos:start="102:13" pos:end="105:13">if <condition pos:start="102:16" pos:end="102:83">(<expr pos:start="102:17" pos:end="102:82"><name pos:start="102:17" pos:end="102:31"><name pos:start="102:17" pos:end="102:18">ps</name><operator pos:start="102:19" pos:end="102:20">-&gt;</operator><name pos:start="102:21" pos:end="102:23">pps</name><operator pos:start="102:24" pos:end="102:25">-&gt;</operator><name pos:start="102:26" pos:end="102:31">sps_id</name></name> <operator pos:start="102:33" pos:end="102:34">&gt;=</operator> <name pos:start="102:36" pos:end="102:48">MAX_SPS_COUNT</name> <operator pos:start="102:50" pos:end="102:51">||</operator> <operator pos:start="102:53" pos:end="102:53">!</operator><name pos:start="102:54" pos:end="102:82"><name pos:start="102:54" pos:end="102:55">ps</name><operator pos:start="102:56" pos:end="102:57">-&gt;</operator><name pos:start="102:58" pos:end="102:65">sps_list</name><index pos:start="102:66" pos:end="102:82">[<expr pos:start="102:67" pos:end="102:81"><name pos:start="102:67" pos:end="102:81"><name pos:start="102:67" pos:end="102:68">ps</name><operator pos:start="102:69" pos:end="102:70">-&gt;</operator><name pos:start="102:71" pos:end="102:73">pps</name><operator pos:start="102:74" pos:end="102:75">-&gt;</operator><name pos:start="102:76" pos:end="102:81">sps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="102:85" pos:end="105:13">{<block_content pos:start="103:17" pos:end="104:43">
                <expr_stmt pos:start="103:17" pos:end="103:90"><expr pos:start="103:17" pos:end="103:89"><call pos:start="103:17" pos:end="103:89"><name pos:start="103:17" pos:end="103:22">av_log</name><argument_list pos:start="103:23" pos:end="103:89">(<argument pos:start="103:24" pos:end="103:28"><expr pos:start="103:24" pos:end="103:28"><name pos:start="103:24" pos:end="103:28">avctx</name></expr></argument>, <argument pos:start="103:31" pos:end="103:42"><expr pos:start="103:31" pos:end="103:42"><name pos:start="103:31" pos:end="103:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="103:45" pos:end="103:71"><expr pos:start="103:45" pos:end="103:71"><literal type="string" pos:start="103:45" pos:end="103:71">"SPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="103:74" pos:end="103:88"><expr pos:start="103:74" pos:end="103:88"><name pos:start="103:74" pos:end="103:88"><name pos:start="103:74" pos:end="103:75">ps</name><operator pos:start="103:76" pos:end="103:77">-&gt;</operator><name pos:start="103:78" pos:end="103:80">pps</name><operator pos:start="103:81" pos:end="103:82">-&gt;</operator><name pos:start="103:83" pos:end="103:88">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:start="104:17" pos:end="104:43">return <expr pos:start="104:24" pos:end="104:42"><name pos:start="104:24" pos:end="104:42">AVERROR_INVALIDDATA</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="106:13" pos:end="109:13"><if pos:start="106:13" pos:end="109:13">if <condition pos:start="106:16" pos:end="106:73">(<expr pos:start="106:17" pos:end="106:72"><name pos:start="106:17" pos:end="106:23"><name pos:start="106:17" pos:end="106:18">ps</name><operator pos:start="106:19" pos:end="106:20">-&gt;</operator><name pos:start="106:21" pos:end="106:23">sps</name></name> <operator pos:start="106:25" pos:end="106:26">!=</operator> <operator pos:start="106:28" pos:end="106:28">(</operator><name pos:start="106:29" pos:end="106:35">HEVCSPS</name><operator pos:start="106:36" pos:end="106:36">*</operator><operator pos:start="106:37" pos:end="106:37">)</operator><name pos:start="106:38" pos:end="106:66"><name pos:start="106:38" pos:end="106:39">ps</name><operator pos:start="106:40" pos:end="106:41">-&gt;</operator><name pos:start="106:42" pos:end="106:49">sps_list</name><index pos:start="106:50" pos:end="106:66">[<expr pos:start="106:51" pos:end="106:65"><name pos:start="106:51" pos:end="106:65"><name pos:start="106:51" pos:end="106:52">ps</name><operator pos:start="106:53" pos:end="106:54">-&gt;</operator><name pos:start="106:55" pos:end="106:57">pps</name><operator pos:start="106:58" pos:end="106:59">-&gt;</operator><name pos:start="106:60" pos:end="106:65">sps_id</name></name></expr>]</index></name><operator pos:start="106:67" pos:end="106:68">-&gt;</operator><name pos:start="106:69" pos:end="106:72">data</name></expr>)</condition> <block pos:start="106:75" pos:end="109:13">{<block_content pos:start="107:17" pos:end="108:72">
                <expr_stmt pos:start="107:17" pos:end="107:72"><expr pos:start="107:17" pos:end="107:71"><name pos:start="107:17" pos:end="107:23"><name pos:start="107:17" pos:end="107:18">ps</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:23">sps</name></name> <operator pos:start="107:25" pos:end="107:25">=</operator> <operator pos:start="107:27" pos:end="107:27">(</operator><name pos:start="107:28" pos:end="107:34">HEVCSPS</name><operator pos:start="107:35" pos:end="107:35">*</operator><operator pos:start="107:36" pos:end="107:36">)</operator><name pos:start="107:37" pos:end="107:65"><name pos:start="107:37" pos:end="107:38">ps</name><operator pos:start="107:39" pos:end="107:40">-&gt;</operator><name pos:start="107:41" pos:end="107:48">sps_list</name><index pos:start="107:49" pos:end="107:65">[<expr pos:start="107:50" pos:end="107:64"><name pos:start="107:50" pos:end="107:64"><name pos:start="107:50" pos:end="107:51">ps</name><operator pos:start="107:52" pos:end="107:53">-&gt;</operator><name pos:start="107:54" pos:end="107:56">pps</name><operator pos:start="107:57" pos:end="107:58">-&gt;</operator><name pos:start="107:59" pos:end="107:64">sps_id</name></name></expr>]</index></name><operator pos:start="107:66" pos:end="107:67">-&gt;</operator><name pos:start="107:68" pos:end="107:71">data</name></expr>;</expr_stmt>
                <expr_stmt pos:start="108:17" pos:end="108:72"><expr pos:start="108:17" pos:end="108:71"><name pos:start="108:17" pos:end="108:23"><name pos:start="108:17" pos:end="108:18">ps</name><operator pos:start="108:19" pos:end="108:20">-&gt;</operator><name pos:start="108:21" pos:end="108:23">vps</name></name> <operator pos:start="108:25" pos:end="108:25">=</operator> <operator pos:start="108:27" pos:end="108:27">(</operator><name pos:start="108:28" pos:end="108:34">HEVCVPS</name><operator pos:start="108:35" pos:end="108:35">*</operator><operator pos:start="108:36" pos:end="108:36">)</operator><name pos:start="108:37" pos:end="108:65"><name pos:start="108:37" pos:end="108:38">ps</name><operator pos:start="108:39" pos:end="108:40">-&gt;</operator><name pos:start="108:41" pos:end="108:48">vps_list</name><index pos:start="108:49" pos:end="108:65">[<expr pos:start="108:50" pos:end="108:64"><name pos:start="108:50" pos:end="108:64"><name pos:start="108:50" pos:end="108:51">ps</name><operator pos:start="108:52" pos:end="108:53">-&gt;</operator><name pos:start="108:54" pos:end="108:56">sps</name><operator pos:start="108:57" pos:end="108:58">-&gt;</operator><name pos:start="108:59" pos:end="108:64">vps_id</name></name></expr>]</index></name><operator pos:start="108:66" pos:end="108:67">-&gt;</operator><name pos:start="108:68" pos:end="108:71">data</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="110:13" pos:end="125:53"><if pos:start="110:13" pos:end="124:13">if <condition pos:start="110:16" pos:end="110:45">(<expr pos:start="110:17" pos:end="110:44"><operator pos:start="110:17" pos:end="110:17">!</operator><name pos:start="110:18" pos:end="110:44"><name pos:start="110:18" pos:end="110:19">sh</name><operator pos:start="110:20" pos:end="110:21">-&gt;</operator><name pos:start="110:22" pos:end="110:44">first_slice_in_pic_flag</name></name></expr>)</condition> <block pos:start="110:47" pos:end="124:13">{<block_content pos:start="111:17" pos:end="123:17">
                <decl_stmt pos:start="111:17" pos:end="111:41"><decl pos:start="111:17" pos:end="111:40"><type pos:start="111:17" pos:end="111:19"><name pos:start="111:17" pos:end="111:19">int</name></type> <name pos:start="111:21" pos:end="111:40">slice_address_length</name></decl>;</decl_stmt>
                <if_stmt pos:start="112:17" pos:end="115:57"><if pos:start="112:17" pos:end="113:69">if <condition pos:start="112:20" pos:end="112:67">(<expr pos:start="112:21" pos:end="112:66"><name pos:start="112:21" pos:end="112:66"><name pos:start="112:21" pos:end="112:22">ps</name><operator pos:start="112:23" pos:end="112:24">-&gt;</operator><name pos:start="112:25" pos:end="112:27">pps</name><operator pos:start="112:28" pos:end="112:29">-&gt;</operator><name pos:start="112:30" pos:end="112:66">dependent_slice_segments_enabled_flag</name></name></expr>)</condition><block type="pseudo" pos:start="113:21" pos:end="113:69"><block_content pos:start="113:21" pos:end="113:69">
                    <expr_stmt pos:start="113:21" pos:end="113:69"><expr pos:start="113:21" pos:end="113:68"><name pos:start="113:21" pos:end="113:52"><name pos:start="113:21" pos:end="113:22">sh</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:52">dependent_slice_segment_flag</name></name> <operator pos:start="113:54" pos:end="113:54">=</operator> <call pos:start="113:56" pos:end="113:68"><name pos:start="113:56" pos:end="113:64">get_bits1</name><argument_list pos:start="113:65" pos:end="113:68">(<argument pos:start="113:66" pos:end="113:67"><expr pos:start="113:66" pos:end="113:67"><name pos:start="113:66" pos:end="113:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                <else pos:start="114:17" pos:end="115:57">else<block type="pseudo" pos:start="115:21" pos:end="115:57"><block_content pos:start="115:21" pos:end="115:57">
                    <expr_stmt pos:start="115:21" pos:end="115:57"><expr pos:start="115:21" pos:end="115:56"><name pos:start="115:21" pos:end="115:52"><name pos:start="115:21" pos:end="115:22">sh</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:52">dependent_slice_segment_flag</name></name> <operator pos:start="115:54" pos:end="115:54">=</operator> <literal type="number" pos:start="115:56" pos:end="115:56">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
                <expr_stmt pos:start="116:17" pos:end="117:75"><expr pos:start="116:17" pos:end="117:74"><name pos:start="116:17" pos:end="116:36">slice_address_length</name> <operator pos:start="116:38" pos:end="116:38">=</operator> <call pos:start="116:40" pos:end="117:74"><name pos:start="116:40" pos:end="116:53">av_ceil_log2_c</name><argument_list pos:start="116:54" pos:end="117:74">(<argument pos:start="116:55" pos:end="117:73"><expr pos:start="116:55" pos:end="117:73"><name pos:start="116:55" pos:end="116:72"><name pos:start="116:55" pos:end="116:56">ps</name><operator pos:start="116:57" pos:end="116:58">-&gt;</operator><name pos:start="116:59" pos:end="116:61">sps</name><operator pos:start="116:62" pos:end="116:63">-&gt;</operator><name pos:start="116:64" pos:end="116:72">ctb_width</name></name> <operator pos:start="116:74" pos:end="116:74">*</operator>
                                                      <name pos:start="117:55" pos:end="117:73"><name pos:start="117:55" pos:end="117:56">ps</name><operator pos:start="117:57" pos:end="117:58">-&gt;</operator><name pos:start="117:59" pos:end="117:61">sps</name><operator pos:start="117:62" pos:end="117:63">-&gt;</operator><name pos:start="117:64" pos:end="117:73">ctb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="118:17" pos:end="118:77"><expr pos:start="118:17" pos:end="118:76"><name pos:start="118:17" pos:end="118:38"><name pos:start="118:17" pos:end="118:18">sh</name><operator pos:start="118:19" pos:end="118:20">-&gt;</operator><name pos:start="118:21" pos:end="118:38">slice_segment_addr</name></name> <operator pos:start="118:40" pos:end="118:40">=</operator> <call pos:start="118:42" pos:end="118:76"><name pos:start="118:42" pos:end="118:50">get_bitsz</name><argument_list pos:start="118:51" pos:end="118:76">(<argument pos:start="118:52" pos:end="118:53"><expr pos:start="118:52" pos:end="118:53"><name pos:start="118:52" pos:end="118:53">gb</name></expr></argument>, <argument pos:start="118:56" pos:end="118:75"><expr pos:start="118:56" pos:end="118:75"><name pos:start="118:56" pos:end="118:75">slice_address_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="119:17" pos:end="123:17"><if pos:start="119:17" pos:end="123:17">if <condition pos:start="119:20" pos:end="119:87">(<expr pos:start="119:21" pos:end="119:86"><name pos:start="119:21" pos:end="119:42"><name pos:start="119:21" pos:end="119:22">sh</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:42">slice_segment_addr</name></name> <operator pos:start="119:44" pos:end="119:45">&gt;=</operator> <name pos:start="119:47" pos:end="119:64"><name pos:start="119:47" pos:end="119:48">ps</name><operator pos:start="119:49" pos:end="119:50">-&gt;</operator><name pos:start="119:51" pos:end="119:53">sps</name><operator pos:start="119:54" pos:end="119:55">-&gt;</operator><name pos:start="119:56" pos:end="119:64">ctb_width</name></name> <operator pos:start="119:66" pos:end="119:66">*</operator> <name pos:start="119:68" pos:end="119:86"><name pos:start="119:68" pos:end="119:69">ps</name><operator pos:start="119:70" pos:end="119:71">-&gt;</operator><name pos:start="119:72" pos:end="119:74">sps</name><operator pos:start="119:75" pos:end="119:76">-&gt;</operator><name pos:start="119:77" pos:end="119:86">ctb_height</name></name></expr>)</condition> <block pos:start="119:89" pos:end="123:17">{<block_content pos:start="120:21" pos:end="122:47">
                    <expr_stmt pos:start="120:21" pos:end="121:51"><expr pos:start="120:21" pos:end="121:50"><call pos:start="120:21" pos:end="121:50"><name pos:start="120:21" pos:end="120:26">av_log</name><argument_list pos:start="120:27" pos:end="121:50">(<argument pos:start="120:28" pos:end="120:32"><expr pos:start="120:28" pos:end="120:32"><name pos:start="120:28" pos:end="120:32">avctx</name></expr></argument>, <argument pos:start="120:35" pos:end="120:46"><expr pos:start="120:35" pos:end="120:46"><name pos:start="120:35" pos:end="120:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="120:49" pos:end="120:86"><expr pos:start="120:49" pos:end="120:86"><literal type="string" pos:start="120:49" pos:end="120:86">"Invalid slice segment address: %u.\n"</literal></expr></argument>,
                           <argument pos:start="121:28" pos:end="121:49"><expr pos:start="121:28" pos:end="121:49"><name pos:start="121:28" pos:end="121:49"><name pos:start="121:28" pos:end="121:29">sh</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:49">slice_segment_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <return pos:start="122:21" pos:end="122:47">return <expr pos:start="122:28" pos:end="122:46"><name pos:start="122:28" pos:end="122:46">AVERROR_INVALIDDATA</name></expr>;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if> <else pos:start="124:15" pos:end="125:53">else<block type="pseudo" pos:start="125:17" pos:end="125:53"><block_content pos:start="125:17" pos:end="125:53">
                <expr_stmt pos:start="125:17" pos:end="125:53"><expr pos:start="125:17" pos:end="125:52"><name pos:start="125:17" pos:end="125:48"><name pos:start="125:17" pos:end="125:18">sh</name><operator pos:start="125:19" pos:end="125:20">-&gt;</operator><name pos:start="125:21" pos:end="125:48">dependent_slice_segment_flag</name></name> <operator pos:start="125:50" pos:end="125:50">=</operator> <literal type="number" pos:start="125:52" pos:end="125:52">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
            <if_stmt pos:start="126:13" pos:end="127:22"><if pos:start="126:13" pos:end="127:22">if <condition pos:start="126:16" pos:end="126:49">(<expr pos:start="126:17" pos:end="126:48"><name pos:start="126:17" pos:end="126:48"><name pos:start="126:17" pos:end="126:18">sh</name><operator pos:start="126:19" pos:end="126:20">-&gt;</operator><name pos:start="126:21" pos:end="126:48">dependent_slice_segment_flag</name></name></expr>)</condition><block type="pseudo" pos:start="127:17" pos:end="127:22"><block_content pos:start="127:17" pos:end="127:22">
                <break pos:start="127:17" pos:end="127:22">break;</break></block_content></block></if></if_stmt>
            <for pos:start="128:13" pos:end="129:33">for <control pos:start="128:17" pos:end="128:70">(<init pos:start="128:18" pos:end="128:23"><expr pos:start="128:18" pos:end="128:22"><name pos:start="128:18" pos:end="128:18">i</name> <operator pos:start="128:20" pos:end="128:20">=</operator> <literal type="number" pos:start="128:22" pos:end="128:22">0</literal></expr>;</init> <condition pos:start="128:25" pos:end="128:65"><expr pos:start="128:25" pos:end="128:64"><name pos:start="128:25" pos:end="128:25">i</name> <operator pos:start="128:27" pos:end="128:27">&lt;</operator> <name pos:start="128:29" pos:end="128:64"><name pos:start="128:29" pos:end="128:30">ps</name><operator pos:start="128:31" pos:end="128:32">-&gt;</operator><name pos:start="128:33" pos:end="128:35">pps</name><operator pos:start="128:36" pos:end="128:37">-&gt;</operator><name pos:start="128:38" pos:end="128:64">num_extra_slice_header_bits</name></name></expr>;</condition> <incr pos:start="128:67" pos:end="128:69"><expr pos:start="128:67" pos:end="128:69"><name pos:start="128:67" pos:end="128:67">i</name><operator pos:start="128:68" pos:end="128:69">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:17" pos:end="129:33"><block_content pos:start="129:17" pos:end="129:33">
                <expr_stmt pos:start="129:17" pos:end="129:33"><expr pos:start="129:17" pos:end="129:32"><call pos:start="129:17" pos:end="129:32"><name pos:start="129:17" pos:end="129:25">skip_bits</name><argument_list pos:start="129:26" pos:end="129:32">(<argument pos:start="129:27" pos:end="129:28"><expr pos:start="129:27" pos:end="129:28"><name pos:start="129:27" pos:end="129:28">gb</name></expr></argument>, <argument pos:start="129:31" pos:end="129:31"><expr pos:start="129:31" pos:end="129:31"><literal type="number" pos:start="129:31" pos:end="129:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for> <comment type="line" pos:start="129:35" pos:end="129:71">// slice_reserved_undetermined_flag[]</comment>
            <expr_stmt pos:start="130:13" pos:end="130:47"><expr pos:start="130:13" pos:end="130:46"><name pos:start="130:13" pos:end="130:26"><name pos:start="130:13" pos:end="130:14">sh</name><operator pos:start="130:15" pos:end="130:16">-&gt;</operator><name pos:start="130:17" pos:end="130:26">slice_type</name></name> <operator pos:start="130:28" pos:end="130:28">=</operator> <call pos:start="130:30" pos:end="130:46"><name pos:start="130:30" pos:end="130:42">get_ue_golomb</name><argument_list pos:start="130:43" pos:end="130:46">(<argument pos:start="130:44" pos:end="130:45"><expr pos:start="130:44" pos:end="130:45"><name pos:start="130:44" pos:end="130:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="131:13" pos:end="136:13"><if pos:start="131:13" pos:end="136:13">if <condition pos:start="131:16" pos:end="132:45">(<expr pos:start="131:17" pos:end="132:44"><operator pos:start="131:17" pos:end="131:17">!</operator><operator pos:start="131:18" pos:end="131:18">(</operator><name pos:start="131:19" pos:end="131:32"><name pos:start="131:19" pos:end="131:20">sh</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:32">slice_type</name></name> <operator pos:start="131:34" pos:end="131:35">==</operator> <name pos:start="131:37" pos:end="131:43">I_SLICE</name> <operator pos:start="131:45" pos:end="131:46">||</operator> <name pos:start="131:48" pos:end="131:61"><name pos:start="131:48" pos:end="131:49">sh</name><operator pos:start="131:50" pos:end="131:51">-&gt;</operator><name pos:start="131:52" pos:end="131:61">slice_type</name></name> <operator pos:start="131:63" pos:end="131:64">==</operator> <name pos:start="131:66" pos:end="131:72">P_SLICE</name> <operator pos:start="131:74" pos:end="131:75">||</operator>
                  <name pos:start="132:19" pos:end="132:32"><name pos:start="132:19" pos:end="132:20">sh</name><operator pos:start="132:21" pos:end="132:22">-&gt;</operator><name pos:start="132:23" pos:end="132:32">slice_type</name></name> <operator pos:start="132:34" pos:end="132:35">==</operator> <name pos:start="132:37" pos:end="132:43">B_SLICE</name><operator pos:start="132:44" pos:end="132:44">)</operator></expr>)</condition> <block pos:start="132:47" pos:end="136:13">{<block_content pos:start="133:17" pos:end="135:43">
                <expr_stmt pos:start="133:17" pos:end="134:39"><expr pos:start="133:17" pos:end="134:38"><call pos:start="133:17" pos:end="134:38"><name pos:start="133:17" pos:end="133:22">av_log</name><argument_list pos:start="133:23" pos:end="134:38">(<argument pos:start="133:24" pos:end="133:28"><expr pos:start="133:24" pos:end="133:28"><name pos:start="133:24" pos:end="133:28">avctx</name></expr></argument>, <argument pos:start="133:31" pos:end="133:42"><expr pos:start="133:31" pos:end="133:42"><name pos:start="133:31" pos:end="133:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="133:45" pos:end="133:71"><expr pos:start="133:45" pos:end="133:71"><literal type="string" pos:start="133:45" pos:end="133:71">"Unknown slice type: %d.\n"</literal></expr></argument>,
                       <argument pos:start="134:24" pos:end="134:37"><expr pos:start="134:24" pos:end="134:37"><name pos:start="134:24" pos:end="134:37"><name pos:start="134:24" pos:end="134:25">sh</name><operator pos:start="134:26" pos:end="134:27">-&gt;</operator><name pos:start="134:28" pos:end="134:37">slice_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:start="135:17" pos:end="135:43">return <expr pos:start="135:24" pos:end="135:42"><name pos:start="135:24" pos:end="135:42">AVERROR_INVALIDDATA</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="137:13" pos:end="139:73"><expr pos:start="137:13" pos:end="139:72"><name pos:start="137:13" pos:end="137:24"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:24">pict_type</name></name> <operator pos:start="137:26" pos:end="137:26">=</operator> <ternary pos:start="137:28" pos:end="139:72"><condition pos:start="137:28" pos:end="137:54"><expr pos:start="137:28" pos:end="137:52"><name pos:start="137:28" pos:end="137:41"><name pos:start="137:28" pos:end="137:29">sh</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:41">slice_type</name></name> <operator pos:start="137:43" pos:end="137:44">==</operator> <name pos:start="137:46" pos:end="137:52">B_SLICE</name></expr> ?</condition><then pos:start="137:56" pos:end="137:72"> <expr pos:start="137:56" pos:end="137:72"><name pos:start="137:56" pos:end="137:72">AV_PICTURE_TYPE_B</name></expr> </then><else pos:start="137:74" pos:end="139:72">:
                           <expr pos:start="138:28" pos:end="139:72"><ternary pos:start="138:28" pos:end="139:72"><condition pos:start="138:28" pos:end="138:54"><expr pos:start="138:28" pos:end="138:52"><name pos:start="138:28" pos:end="138:41"><name pos:start="138:28" pos:end="138:29">sh</name><operator pos:start="138:30" pos:end="138:31">-&gt;</operator><name pos:start="138:32" pos:end="138:41">slice_type</name></name> <operator pos:start="138:43" pos:end="138:44">==</operator> <name pos:start="138:46" pos:end="138:52">P_SLICE</name></expr> ?</condition><then pos:start="138:56" pos:end="138:72"> <expr pos:start="138:56" pos:end="138:72"><name pos:start="138:56" pos:end="138:72">AV_PICTURE_TYPE_P</name></expr> </then><else pos:start="138:74" pos:end="139:72">:
                                                       <expr pos:start="139:56" pos:end="139:72"><name pos:start="139:56" pos:end="139:72">AV_PICTURE_TYPE_I</name></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>
            <if_stmt pos:start="140:13" pos:end="141:52"><if pos:start="140:13" pos:end="141:52">if <condition pos:start="140:16" pos:end="140:50">(<expr pos:start="140:17" pos:end="140:49"><name pos:start="140:17" pos:end="140:49"><name pos:start="140:17" pos:end="140:18">ps</name><operator pos:start="140:19" pos:end="140:20">-&gt;</operator><name pos:start="140:21" pos:end="140:23">pps</name><operator pos:start="140:24" pos:end="140:25">-&gt;</operator><name pos:start="140:26" pos:end="140:49">output_flag_present_flag</name></name></expr>)</condition><block type="pseudo" pos:start="141:17" pos:end="141:52"><block_content pos:start="141:17" pos:end="141:52">
                <expr_stmt pos:start="141:17" pos:end="141:52"><expr pos:start="141:17" pos:end="141:51"><name pos:start="141:17" pos:end="141:35"><name pos:start="141:17" pos:end="141:18">sh</name><operator pos:start="141:19" pos:end="141:20">-&gt;</operator><name pos:start="141:21" pos:end="141:35">pic_output_flag</name></name> <operator pos:start="141:37" pos:end="141:37">=</operator> <call pos:start="141:39" pos:end="141:51"><name pos:start="141:39" pos:end="141:47">get_bits1</name><argument_list pos:start="141:48" pos:end="141:51">(<argument pos:start="141:49" pos:end="141:50"><expr pos:start="141:49" pos:end="141:50"><name pos:start="141:49" pos:end="141:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="142:13" pos:end="143:54"><if pos:start="142:13" pos:end="143:54">if <condition pos:start="142:16" pos:end="142:52">(<expr pos:start="142:17" pos:end="142:51"><name pos:start="142:17" pos:end="142:51"><name pos:start="142:17" pos:end="142:18">ps</name><operator pos:start="142:19" pos:end="142:20">-&gt;</operator><name pos:start="142:21" pos:end="142:23">sps</name><operator pos:start="142:24" pos:end="142:25">-&gt;</operator><name pos:start="142:26" pos:end="142:51">separate_colour_plane_flag</name></name></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:54"><block_content pos:start="143:17" pos:end="143:54">
                <expr_stmt pos:start="143:17" pos:end="143:54"><expr pos:start="143:17" pos:end="143:53"><name pos:start="143:17" pos:end="143:35"><name pos:start="143:17" pos:end="143:18">sh</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:35">colour_plane_id</name></name> <operator pos:start="143:37" pos:end="143:37">=</operator> <call pos:start="143:39" pos:end="143:53"><name pos:start="143:39" pos:end="143:46">get_bits</name><argument_list pos:start="143:47" pos:end="143:53">(<argument pos:start="143:48" pos:end="143:49"><expr pos:start="143:48" pos:end="143:49"><name pos:start="143:48" pos:end="143:49">gb</name></expr></argument>, <argument pos:start="143:52" pos:end="143:52"><expr pos:start="143:52" pos:end="143:52"><literal type="number" pos:start="143:52" pos:end="143:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <if_stmt pos:start="144:13" pos:end="148:54"><if pos:start="144:13" pos:end="147:13">if <condition pos:start="144:16" pos:end="144:27">(<expr pos:start="144:17" pos:end="144:26"><operator pos:start="144:17" pos:end="144:17">!</operator><call pos:start="144:18" pos:end="144:26"><name pos:start="144:18" pos:end="144:23">IS_IDR</name><argument_list pos:start="144:24" pos:end="144:26">(<argument pos:start="144:25" pos:end="144:25"><expr pos:start="144:25" pos:end="144:25"><name pos:start="144:25" pos:end="144:25">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="144:29" pos:end="147:13">{<block_content pos:start="145:17" pos:end="146:98">
                <expr_stmt pos:start="145:17" pos:end="145:80"><expr pos:start="145:17" pos:end="145:79"><name pos:start="145:17" pos:end="145:37"><name pos:start="145:17" pos:end="145:18">sh</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:37">pic_order_cnt_lsb</name></name> <operator pos:start="145:39" pos:end="145:39">=</operator> <call pos:start="145:41" pos:end="145:79"><name pos:start="145:41" pos:end="145:48">get_bits</name><argument_list pos:start="145:49" pos:end="145:79">(<argument pos:start="145:50" pos:end="145:51"><expr pos:start="145:50" pos:end="145:51"><name pos:start="145:50" pos:end="145:51">gb</name></expr></argument>, <argument pos:start="145:54" pos:end="145:78"><expr pos:start="145:54" pos:end="145:78"><name pos:start="145:54" pos:end="145:78"><name pos:start="145:54" pos:end="145:55">ps</name><operator pos:start="145:56" pos:end="145:57">-&gt;</operator><name pos:start="145:58" pos:end="145:60">sps</name><operator pos:start="145:61" pos:end="145:62">-&gt;</operator><name pos:start="145:63" pos:end="145:78">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="146:17" pos:end="146:98"><expr pos:start="146:17" pos:end="146:97"><name pos:start="146:17" pos:end="146:40"><name pos:start="146:17" pos:end="146:17">s</name><operator pos:start="146:18" pos:end="146:19">-&gt;</operator><name pos:start="146:20" pos:end="146:40">output_picture_number</name></name> <operator pos:start="146:42" pos:end="146:42">=</operator> <name pos:start="146:44" pos:end="146:49"><name pos:start="146:44" pos:end="146:44">h</name><operator pos:start="146:45" pos:end="146:46">-&gt;</operator><name pos:start="146:47" pos:end="146:49">poc</name></name> <operator pos:start="146:51" pos:end="146:51">=</operator> <call pos:start="146:53" pos:end="146:97"><name pos:start="146:53" pos:end="146:71">ff_hevc_compute_poc</name><argument_list pos:start="146:72" pos:end="146:97">(<argument pos:start="146:73" pos:end="146:73"><expr pos:start="146:73" pos:end="146:73"><name pos:start="146:73" pos:end="146:73">h</name></expr></argument>, <argument pos:start="146:76" pos:end="146:96"><expr pos:start="146:76" pos:end="146:96"><name pos:start="146:76" pos:end="146:96"><name pos:start="146:76" pos:end="146:77">sh</name><operator pos:start="146:78" pos:end="146:79">-&gt;</operator><name pos:start="146:80" pos:end="146:96">pic_order_cnt_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="147:15" pos:end="148:54">else<block type="pseudo" pos:start="148:17" pos:end="148:54"><block_content pos:start="148:17" pos:end="148:54">
                <expr_stmt pos:start="148:17" pos:end="148:54"><expr pos:start="148:17" pos:end="148:53"><name pos:start="148:17" pos:end="148:40"><name pos:start="148:17" pos:end="148:17">s</name><operator pos:start="148:18" pos:end="148:19">-&gt;</operator><name pos:start="148:20" pos:end="148:40">output_picture_number</name></name> <operator pos:start="148:42" pos:end="148:42">=</operator> <name pos:start="148:44" pos:end="148:49"><name pos:start="148:44" pos:end="148:44">h</name><operator pos:start="148:45" pos:end="148:46">-&gt;</operator><name pos:start="148:47" pos:end="148:49">poc</name></name> <operator pos:start="148:51" pos:end="148:51">=</operator> <literal type="number" pos:start="148:53" pos:end="148:53">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
            <if_stmt pos:start="149:13" pos:end="157:36"><if pos:start="149:13" pos:end="157:36">if <condition pos:start="149:16" pos:end="156:47">(<expr pos:start="149:17" pos:end="156:46"><name pos:start="149:17" pos:end="149:30"><name pos:start="149:17" pos:end="149:17">h</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:30">temporal_id</name></name> <operator pos:start="149:32" pos:end="149:33">==</operator> <literal type="number" pos:start="149:35" pos:end="149:35">0</literal> <operator pos:start="149:37" pos:end="149:38">&amp;&amp;</operator>
                <name pos:start="150:17" pos:end="150:32"><name pos:start="150:17" pos:end="150:17">h</name><operator pos:start="150:18" pos:end="150:19">-&gt;</operator><name pos:start="150:20" pos:end="150:32">nal_unit_type</name></name> <operator pos:start="150:34" pos:end="150:35">!=</operator> <name pos:start="150:37" pos:end="150:47">NAL_TRAIL_N</name> <operator pos:start="150:49" pos:end="150:50">&amp;&amp;</operator>
                <name pos:start="151:17" pos:end="151:32"><name pos:start="151:17" pos:end="151:17">h</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:32">nal_unit_type</name></name> <operator pos:start="151:34" pos:end="151:35">!=</operator> <name pos:start="151:37" pos:end="151:45">NAL_TSA_N</name> <operator pos:start="151:47" pos:end="151:48">&amp;&amp;</operator>
                <name pos:start="152:17" pos:end="152:32"><name pos:start="152:17" pos:end="152:17">h</name><operator pos:start="152:18" pos:end="152:19">-&gt;</operator><name pos:start="152:20" pos:end="152:32">nal_unit_type</name></name> <operator pos:start="152:34" pos:end="152:35">!=</operator> <name pos:start="152:37" pos:end="152:46">NAL_STSA_N</name> <operator pos:start="152:48" pos:end="152:49">&amp;&amp;</operator>
                <name pos:start="153:17" pos:end="153:32"><name pos:start="153:17" pos:end="153:17">h</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:32">nal_unit_type</name></name> <operator pos:start="153:34" pos:end="153:35">!=</operator> <name pos:start="153:37" pos:end="153:46">NAL_RADL_N</name> <operator pos:start="153:48" pos:end="153:49">&amp;&amp;</operator>
                <name pos:start="154:17" pos:end="154:32"><name pos:start="154:17" pos:end="154:17">h</name><operator pos:start="154:18" pos:end="154:19">-&gt;</operator><name pos:start="154:20" pos:end="154:32">nal_unit_type</name></name> <operator pos:start="154:34" pos:end="154:35">!=</operator> <name pos:start="154:37" pos:end="154:46">NAL_RASL_N</name> <operator pos:start="154:48" pos:end="154:49">&amp;&amp;</operator>
                <name pos:start="155:17" pos:end="155:32"><name pos:start="155:17" pos:end="155:17">h</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:32">nal_unit_type</name></name> <operator pos:start="155:34" pos:end="155:35">!=</operator> <name pos:start="155:37" pos:end="155:46">NAL_RADL_R</name> <operator pos:start="155:48" pos:end="155:49">&amp;&amp;</operator>
                <name pos:start="156:17" pos:end="156:32"><name pos:start="156:17" pos:end="156:17">h</name><operator pos:start="156:18" pos:end="156:19">-&gt;</operator><name pos:start="156:20" pos:end="156:32">nal_unit_type</name></name> <operator pos:start="156:34" pos:end="156:35">!=</operator> <name pos:start="156:37" pos:end="156:46">NAL_RASL_R</name></expr>)</condition><block type="pseudo" pos:start="157:17" pos:end="157:36"><block_content pos:start="157:17" pos:end="157:36">
                <expr_stmt pos:start="157:17" pos:end="157:36"><expr pos:start="157:17" pos:end="157:35"><name pos:start="157:17" pos:end="157:26"><name pos:start="157:17" pos:end="157:17">h</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:26">pocTid0</name></name> <operator pos:start="157:28" pos:end="157:28">=</operator> <name pos:start="157:30" pos:end="157:35"><name pos:start="157:30" pos:end="157:30">h</name><operator pos:start="157:31" pos:end="157:32">-&gt;</operator><name pos:start="157:33" pos:end="157:35">poc</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <return pos:start="158:13" pos:end="158:21">return <expr pos:start="158:20" pos:end="158:20"><literal type="number" pos:start="158:20" pos:end="158:20">0</literal></expr>;</return> <comment type="block" pos:start="158:23" pos:end="158:56">/* no need to evaluate the rest */</comment>
        </block_content>}</block></switch>
        <expr_stmt pos:start="160:9" pos:end="160:24"><expr pos:start="160:9" pos:end="160:23"><name pos:start="160:9" pos:end="160:11">buf</name> <operator pos:start="160:13" pos:end="160:14">+=</operator> <name pos:start="160:16" pos:end="160:23">consumed</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <comment type="block" pos:start="162:5" pos:end="162:32">/* didn't find a picture! */</comment>
    <if_stmt pos:start="163:5" pos:end="164:75"><if pos:start="163:5" pos:end="164:75">if <condition pos:start="163:8" pos:end="163:19">(<expr pos:start="163:9" pos:end="163:18"><operator pos:start="163:9" pos:end="163:9">!</operator><name pos:start="163:10" pos:end="163:18">is_global</name></expr>)</condition><block type="pseudo" pos:start="164:9" pos:end="164:75"><block_content pos:start="164:9" pos:end="164:75">
        <expr_stmt pos:start="164:9" pos:end="164:75"><expr pos:start="164:9" pos:end="164:74"><call pos:start="164:9" pos:end="164:74"><name pos:start="164:9" pos:end="164:14">av_log</name><argument_list pos:start="164:15" pos:end="164:74">(<argument pos:start="164:16" pos:end="164:23"><expr pos:start="164:16" pos:end="164:23"><name pos:start="164:16" pos:end="164:23"><name pos:start="164:16" pos:end="164:16">h</name><operator pos:start="164:17" pos:end="164:18">-&gt;</operator><name pos:start="164:19" pos:end="164:23">avctx</name></name></expr></argument>, <argument pos:start="164:26" pos:end="164:37"><expr pos:start="164:26" pos:end="164:37"><name pos:start="164:26" pos:end="164:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="164:40" pos:end="164:73"><expr pos:start="164:40" pos:end="164:73"><literal type="string" pos:start="164:40" pos:end="164:73">"missing picture in access unit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <return pos:start="165:5" pos:end="165:14">return <expr pos:start="165:12" pos:end="165:13"><operator pos:start="165:12" pos:end="165:12">-</operator><literal type="number" pos:start="165:13" pos:end="165:13">1</literal></expr>;</return>
</block_content>}</block></function></unit>
