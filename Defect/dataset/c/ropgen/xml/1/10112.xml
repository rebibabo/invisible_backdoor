<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10112.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">scale_vector</name><parameter_list pos:start="1:24" pos:end="1:52">(<parameter pos:start="1:25" pos:end="1:39"><decl pos:start="1:25" pos:end="1:39"><type pos:start="1:25" pos:end="1:39"><name pos:start="1:25" pos:end="1:31">int16_t</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">vector</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:51"><decl pos:start="1:42" pos:end="1:51"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:51">length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:20">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">bits</name></decl>, <decl pos:start="5:15" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:17">max</name> <init pos:start="5:19" pos:end="5:21">= <expr pos:start="5:21" pos:end="5:21"><literal type="number" pos:start="5:21" pos:end="5:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:17">scale</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>





    <for pos:start="15:5" pos:end="17:43">for <control pos:start="15:9" pos:end="15:32">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:27"><expr pos:start="15:17" pos:end="15:26"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:26">length</name></expr>;</condition> <incr pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:29">i</name><operator pos:start="15:30" pos:end="15:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="17:9" pos:end="17:43"><block_content pos:start="17:9" pos:end="17:43">

        <expr_stmt pos:start="17:9" pos:end="17:43"><expr pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:11">max</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:42"><name pos:start="17:15" pos:end="17:19">FFMAX</name><argument_list pos:start="17:20" pos:end="17:42">(<argument pos:start="17:21" pos:end="17:23"><expr pos:start="17:21" pos:end="17:23"><name pos:start="17:21" pos:end="17:23">max</name></expr></argument>, <argument pos:start="17:26" pos:end="17:41"><expr pos:start="17:26" pos:end="17:41"><call pos:start="17:26" pos:end="17:41"><name pos:start="17:26" pos:end="17:30">FFABS</name><argument_list pos:start="17:31" pos:end="17:41">(<argument pos:start="17:32" pos:end="17:40"><expr pos:start="17:32" pos:end="17:40"><name pos:start="17:32" pos:end="17:40"><name pos:start="17:32" pos:end="17:37">vector</name><index pos:start="17:38" pos:end="17:40">[<expr pos:start="17:39" pos:end="17:39"><name pos:start="17:39" pos:end="17:39">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:7">max</name>   <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:17">FFMIN</name><argument_list pos:start="21:18" pos:end="21:30">(<argument pos:start="21:19" pos:end="21:21"><expr pos:start="21:19" pos:end="21:21"><name pos:start="21:19" pos:end="21:21">max</name></expr></argument>, <argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><literal type="number" pos:start="21:24" pos:end="21:29">0x7FFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:8">bits</name>  <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:35"><name pos:start="23:13" pos:end="23:26">normalize_bits</name><argument_list pos:start="23:27" pos:end="23:35">(<argument pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:30">max</name></expr></argument>, <argument pos:start="23:33" pos:end="23:34"><expr pos:start="23:33" pos:end="23:34"><literal type="number" pos:start="23:33" pos:end="23:34">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:48"><expr pos:start="25:5" pos:end="25:47"><name pos:start="25:5" pos:end="25:9">scale</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <ternary pos:start="25:13" pos:end="25:47"><condition pos:start="25:13" pos:end="25:26"><expr pos:start="25:13" pos:end="25:24"><operator pos:start="25:13" pos:end="25:13">(</operator><name pos:start="25:14" pos:end="25:17">bits</name> <operator pos:start="25:19" pos:end="25:20">==</operator> <literal type="number" pos:start="25:22" pos:end="25:23">15</literal><operator pos:start="25:24" pos:end="25:24">)</operator></expr> ?</condition><then pos:start="25:28" pos:end="25:33"> <expr pos:start="25:28" pos:end="25:33"><literal type="number" pos:start="25:28" pos:end="25:33">0x7FFF</literal></expr> </then><else pos:start="25:35" pos:end="25:47">: <expr pos:start="25:37" pos:end="25:47"><operator pos:start="25:37" pos:end="25:37">(</operator><literal type="number" pos:start="25:38" pos:end="25:38">1</literal> <operator pos:start="25:40" pos:end="25:41">&lt;&lt;</operator> <name pos:start="25:43" pos:end="25:46">bits</name><operator pos:start="25:47" pos:end="25:47">)</operator></expr></else></ternary></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="31:64">for <control pos:start="29:9" pos:end="29:32">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:27"><expr pos:start="29:17" pos:end="29:26"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:26">length</name></expr>;</condition> <incr pos:start="29:29" pos:end="29:31"><expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:29">i</name><operator pos:start="29:30" pos:end="29:31">++</operator></expr></incr>)</control><block type="pseudo" pos:start="31:9" pos:end="31:64"><block_content pos:start="31:9" pos:end="31:64">

        <expr_stmt pos:start="31:9" pos:end="31:64"><expr pos:start="31:9" pos:end="31:63"><name pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:14">vector</name><index pos:start="31:15" pos:end="31:17">[<expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">i</name></expr>]</index></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:58"><name pos:start="31:21" pos:end="31:34">av_clipl_int32</name><argument_list pos:start="31:35" pos:end="31:58">(<argument pos:start="31:36" pos:end="31:57"><expr pos:start="31:36" pos:end="31:57"><name pos:start="31:36" pos:end="31:44"><name pos:start="31:36" pos:end="31:41">vector</name><index pos:start="31:42" pos:end="31:44">[<expr pos:start="31:43" pos:end="31:43"><name pos:start="31:43" pos:end="31:43">i</name></expr>]</index></name> <operator pos:start="31:46" pos:end="31:46">*</operator> <name pos:start="31:48" pos:end="31:52">scale</name> <operator pos:start="31:54" pos:end="31:55">&lt;&lt;</operator> <literal type="number" pos:start="31:57" pos:end="31:57">1</literal></expr></argument>)</argument_list></call> <operator pos:start="31:60" pos:end="31:61">&gt;&gt;</operator> <literal type="number" pos:start="31:63" pos:end="31:63">4</literal></expr>;</expr_stmt></block_content></block></for>



    <return pos:start="35:5" pos:end="35:20">return <expr pos:start="35:12" pos:end="35:19"><name pos:start="35:12" pos:end="35:15">bits</name> <operator pos:start="35:17" pos:end="35:17">-</operator> <literal type="number" pos:start="35:19" pos:end="35:19">3</literal></expr>;</return>

</block_content>}</block></function>
</unit>
