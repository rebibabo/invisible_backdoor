<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11348.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">h264_free_context</name><parameter_list pos:start="1:30" pos:end="1:51">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:46"><name pos:start="1:31" pos:end="1:44">PayloadContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:18">

<cpp:ifdef pos:start="5:1" pos:end="5:12">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:12">DEBUG</name></cpp:ifdef>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">ii</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="22:0">for <control pos:start="11:9" pos:end="11:31">(<init pos:start="11:10" pos:end="11:16"><expr pos:start="11:10" pos:end="11:15"><name pos:start="11:10" pos:end="11:11">ii</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>;</init> <condition pos:start="11:18" pos:end="11:25"><expr pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:19">ii</name> <operator pos:start="11:21" pos:end="11:21">&lt;</operator> <literal type="number" pos:start="11:23" pos:end="11:24">32</literal></expr>;</condition> <incr pos:start="11:27" pos:end="11:30"><expr pos:start="11:27" pos:end="11:30"><name pos:start="11:27" pos:end="11:28">ii</name><operator pos:start="11:29" pos:end="11:30">++</operator></expr></incr>)</control> <block pos:start="11:33" pos:end="22:0">{<block_content pos:start="13:9" pos:end="17:56">

        <if_stmt pos:start="13:9" pos:end="17:56"><if pos:start="13:9" pos:end="17:56">if <condition pos:start="13:12" pos:end="13:44">(<expr pos:start="13:13" pos:end="13:43"><name pos:start="13:13" pos:end="13:43"><name pos:start="13:13" pos:end="13:16">data</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:39">packet_types_received</name><index pos:start="13:40" pos:end="13:43">[<expr pos:start="13:41" pos:end="13:42"><name pos:start="13:41" pos:end="13:42">ii</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="17:56"><block_content pos:start="15:13" pos:end="17:56">

            <expr_stmt pos:start="15:13" pos:end="17:56"><expr pos:start="15:13" pos:end="17:55"><call pos:start="15:13" pos:end="17:55"><name pos:start="15:13" pos:end="15:18">av_log</name><argument_list pos:start="15:19" pos:end="17:55">(<argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">NULL</name></expr></argument>, <argument pos:start="15:26" pos:end="15:37"><expr pos:start="15:26" pos:end="15:37"><name pos:start="15:26" pos:end="15:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="15:40" pos:end="15:73"><expr pos:start="15:40" pos:end="15:73"><literal type="string" pos:start="15:40" pos:end="15:73">"Received %d packets of type %d\n"</literal></expr></argument>,

                   <argument pos:start="17:20" pos:end="17:50"><expr pos:start="17:20" pos:end="17:50"><name pos:start="17:20" pos:end="17:50"><name pos:start="17:20" pos:end="17:23">data</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:46">packet_types_received</name><index pos:start="17:47" pos:end="17:50">[<expr pos:start="17:48" pos:end="17:49"><name pos:start="17:48" pos:end="17:49">ii</name></expr>]</index></name></expr></argument>, <argument pos:start="17:53" pos:end="17:54"><expr pos:start="17:53" pos:end="17:54"><name pos:start="17:53" pos:end="17:54">ii</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="25:5" pos:end="25:17"><expr pos:start="25:5" pos:end="25:16"><call pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:10">assert</name><argument_list pos:start="25:11" pos:end="25:16">(<argument pos:start="25:12" pos:end="25:15"><expr pos:start="25:12" pos:end="25:15"><name pos:start="25:12" pos:end="25:15">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:41"><expr pos:start="27:5" pos:end="27:40"><call pos:start="27:5" pos:end="27:40"><name pos:start="27:5" pos:end="27:10">assert</name><argument_list pos:start="27:11" pos:end="27:40">(<argument pos:start="27:12" pos:end="27:39"><expr pos:start="27:12" pos:end="27:39"><name pos:start="27:12" pos:end="27:23"><name pos:start="27:12" pos:end="27:15">data</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:23">cookie</name></name> <operator pos:start="27:25" pos:end="27:26">==</operator> <name pos:start="27:28" pos:end="27:39">MAGIC_COOKIE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="31:5" pos:end="31:36">// avoid stale pointers (assert)</comment>

    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:8">data</name><operator pos:start="33:9" pos:end="33:10">-&gt;</operator><name pos:start="33:11" pos:end="33:16">cookie</name></name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:30">DEAD_COOKIE</name></expr>;</expr_stmt>



    <comment type="line" pos:start="37:5" pos:end="37:28">// and clear out this...</comment>

    <expr_stmt pos:start="39:5" pos:end="39:18"><expr pos:start="39:5" pos:end="39:17"><call pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:11">av_free</name><argument_list pos:start="39:12" pos:end="39:17">(<argument pos:start="39:13" pos:end="39:16"><expr pos:start="39:13" pos:end="39:16"><name pos:start="39:13" pos:end="39:16">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
