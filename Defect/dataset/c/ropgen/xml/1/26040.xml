<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26040.c" pos:tabs="8"><function pos:start="1:1" pos:end="351:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:36">mpeg4_decode_block</name><parameter_list pos:start="1:37" pos:end="3:58">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><name pos:start="1:38" pos:end="1:51">MpegEncContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type> <name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:72"><decl pos:start="1:58" pos:end="1:72"><type pos:start="1:58" pos:end="1:72"><name pos:start="1:58" pos:end="1:64">DCTELEM</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type> <name pos:start="1:68" pos:end="1:72">block</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:35"><decl pos:start="3:31" pos:end="3:35"><type pos:start="3:31" pos:end="3:35"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:35">n</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:46"><decl pos:start="3:38" pos:end="3:46"><type pos:start="3:38" pos:end="3:46"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:46">coded</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:57"><decl pos:start="3:49" pos:end="3:57"><type pos:start="3:49" pos:end="3:57"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:57">intra</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="351:1">{<block_content pos:start="7:5" pos:end="349:13">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">level</name></decl>, <decl pos:start="7:16" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:16">i</name></decl>, <decl pos:start="7:19" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:22">last</name></decl>, <decl pos:start="7:25" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:27">run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">dc_pred_dir</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">RLTable</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type> <name pos:start="11:15" pos:end="11:16">rl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">RL_VLC_ELEM</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type> <name pos:start="13:19" pos:end="13:24">rl_vlc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:17"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:15">UINT8</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type> <name pos:start="15:19" pos:end="15:28">scan_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">qmul</name></decl>, <decl pos:start="17:15" pos:end="17:18"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:18">qadd</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="115:5"><if pos:start="21:5" pos:end="77:5">if<condition pos:start="21:7" pos:end="21:13">(<expr pos:start="21:8" pos:end="21:12"><name pos:start="21:8" pos:end="21:12">intra</name></expr>)</condition> <block pos:start="21:15" pos:end="77:5">{<block_content pos:start="25:9" pos:end="75:15">

	<comment type="block" pos:start="23:9" pos:end="23:21">/* DC coef */</comment>

        <if_stmt pos:start="25:9" pos:end="43:9"><if pos:start="25:9" pos:end="35:9">if<condition pos:start="25:11" pos:end="25:32">(<expr pos:start="25:12" pos:end="25:31"><name pos:start="25:12" pos:end="25:31"><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:31">partitioned_frame</name></name></expr>)</condition><block pos:start="25:33" pos:end="35:9">{<block_content pos:start="27:13" pos:end="33:82">

            <expr_stmt pos:start="27:13" pos:end="27:54"><expr pos:start="27:13" pos:end="27:53"><name pos:start="27:13" pos:end="27:17">level</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:53"><name pos:start="27:21" pos:end="27:21">s</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:29">dc_val</name><index pos:start="27:30" pos:end="27:32">[<expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">0</literal></expr>]</index><index pos:start="27:33" pos:end="27:53">[ <expr pos:start="27:35" pos:end="27:51"><name pos:start="27:35" pos:end="27:51"><name pos:start="27:35" pos:end="27:35">s</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:48">block_index</name><index pos:start="27:49" pos:end="27:51">[<expr pos:start="27:50" pos:end="27:50"><name pos:start="27:50" pos:end="27:50">n</name></expr>]</index></name></expr> ]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="31:70"><if pos:start="29:13" pos:end="29:70">if<condition pos:start="29:15" pos:end="29:19">(<expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:16">n</name><operator pos:start="29:17" pos:end="29:17">&lt;</operator><literal type="number" pos:start="29:18" pos:end="29:18">4</literal></expr>)</condition><block type="pseudo" pos:start="29:21" pos:end="29:70"><block_content pos:start="29:21" pos:end="29:70"> <expr_stmt pos:start="29:21" pos:end="29:70"><expr pos:start="29:21" pos:end="29:69"><name pos:start="29:21" pos:end="29:25">level</name><operator pos:start="29:26" pos:end="29:26">=</operator> <operator pos:start="29:28" pos:end="29:28">(</operator><name pos:start="29:29" pos:end="29:33">level</name> <operator pos:start="29:35" pos:end="29:35">+</operator> <operator pos:start="29:37" pos:end="29:37">(</operator><name pos:start="29:38" pos:end="29:50"><name pos:start="29:38" pos:end="29:38">s</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:50">y_dc_scale</name></name><operator pos:start="29:51" pos:end="29:52">&gt;&gt;</operator><literal type="number" pos:start="29:53" pos:end="29:53">1</literal><operator pos:start="29:54" pos:end="29:54">)</operator><operator pos:start="29:55" pos:end="29:55">)</operator><operator pos:start="29:56" pos:end="29:56">/</operator><name pos:start="29:57" pos:end="29:69"><name pos:start="29:57" pos:end="29:57">s</name><operator pos:start="29:58" pos:end="29:59">-&gt;</operator><name pos:start="29:60" pos:end="29:69">y_dc_scale</name></name></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="29:72" pos:end="29:87">//FIXME optimizs</comment>

            <else pos:start="31:13" pos:end="31:70">else<block type="pseudo" pos:start="31:21" pos:end="31:70"><block_content pos:start="31:21" pos:end="31:70">    <expr_stmt pos:start="31:21" pos:end="31:70"><expr pos:start="31:21" pos:end="31:69"><name pos:start="31:21" pos:end="31:25">level</name><operator pos:start="31:26" pos:end="31:26">=</operator> <operator pos:start="31:28" pos:end="31:28">(</operator><name pos:start="31:29" pos:end="31:33">level</name> <operator pos:start="31:35" pos:end="31:35">+</operator> <operator pos:start="31:37" pos:end="31:37">(</operator><name pos:start="31:38" pos:end="31:50"><name pos:start="31:38" pos:end="31:38">s</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:50">c_dc_scale</name></name><operator pos:start="31:51" pos:end="31:52">&gt;&gt;</operator><literal type="number" pos:start="31:53" pos:end="31:53">1</literal><operator pos:start="31:54" pos:end="31:54">)</operator><operator pos:start="31:55" pos:end="31:55">)</operator><operator pos:start="31:56" pos:end="31:56">/</operator><name pos:start="31:57" pos:end="31:69"><name pos:start="31:57" pos:end="31:57">s</name><operator pos:start="31:58" pos:end="31:59">-&gt;</operator><name pos:start="31:60" pos:end="31:69">c_dc_scale</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:82"><expr pos:start="33:13" pos:end="33:81"><name pos:start="33:13" pos:end="33:23">dc_pred_dir</name><operator pos:start="33:24" pos:end="33:24">=</operator> <operator pos:start="33:26" pos:end="33:26">(</operator><name pos:start="33:27" pos:end="33:74"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:43">pred_dir_table</name><index pos:start="33:44" pos:end="33:74">[<expr pos:start="33:45" pos:end="33:73"><name pos:start="33:45" pos:end="33:51"><name pos:start="33:45" pos:end="33:45">s</name><operator pos:start="33:46" pos:end="33:47">-&gt;</operator><name pos:start="33:48" pos:end="33:51">mb_x</name></name> <operator pos:start="33:53" pos:end="33:53">+</operator> <name pos:start="33:55" pos:end="33:61"><name pos:start="33:55" pos:end="33:55">s</name><operator pos:start="33:56" pos:end="33:57">-&gt;</operator><name pos:start="33:58" pos:end="33:61">mb_y</name></name><operator pos:start="33:62" pos:end="33:62">*</operator><name pos:start="33:63" pos:end="33:73"><name pos:start="33:63" pos:end="33:63">s</name><operator pos:start="33:64" pos:end="33:65">-&gt;</operator><name pos:start="33:66" pos:end="33:73">mb_width</name></name></expr>]</index></name><operator pos:start="33:75" pos:end="33:76">&lt;&lt;</operator><name pos:start="33:77" pos:end="33:77">n</name><operator pos:start="33:78" pos:end="33:78">)</operator><operator pos:start="33:79" pos:end="33:79">&amp;</operator><literal type="number" pos:start="33:80" pos:end="33:81">32</literal></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="35:10" pos:end="43:9">else<block pos:start="35:14" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:26">

            <expr_stmt pos:start="37:13" pos:end="37:56"><expr pos:start="37:13" pos:end="37:55"><name pos:start="37:13" pos:end="37:17">level</name> <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:55"><name pos:start="37:21" pos:end="37:35">mpeg4_decode_dc</name><argument_list pos:start="37:36" pos:end="37:55">(<argument pos:start="37:37" pos:end="37:37"><expr pos:start="37:37" pos:end="37:37"><name pos:start="37:37" pos:end="37:37">s</name></expr></argument>, <argument pos:start="37:40" pos:end="37:40"><expr pos:start="37:40" pos:end="37:40"><name pos:start="37:40" pos:end="37:40">n</name></expr></argument>, <argument pos:start="37:43" pos:end="37:54"><expr pos:start="37:43" pos:end="37:54"><operator pos:start="37:43" pos:end="37:43">&amp;</operator><name pos:start="37:44" pos:end="37:54">dc_pred_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="41:26"><if pos:start="39:13" pos:end="41:26">if <condition pos:start="39:16" pos:end="39:26">(<expr pos:start="39:17" pos:end="39:25"><name pos:start="39:17" pos:end="39:21">level</name> <operator pos:start="39:23" pos:end="39:23">&lt;</operator> <literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:26"><block_content pos:start="41:17" pos:end="41:26">

                <return pos:start="41:17" pos:end="41:26">return <expr pos:start="41:24" pos:end="41:25"><operator pos:start="41:24" pos:end="41:24">-</operator><literal type="number" pos:start="41:25" pos:end="41:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:13">block</name><index pos:start="45:14" pos:end="45:16">[<expr pos:start="45:15" pos:end="45:15"><literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>]</index></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:24">level</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:14"><expr pos:start="47:9" pos:end="47:13"><name pos:start="47:9" pos:end="47:9">i</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <literal type="number" pos:start="47:13" pos:end="47:13">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="51:27"><if pos:start="49:9" pos:end="51:27">if <condition pos:start="49:12" pos:end="49:19">(<expr pos:start="49:13" pos:end="49:18"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:18">coded</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:27"><block_content pos:start="51:13" pos:end="51:27"> 

            <goto pos:start="51:13" pos:end="51:27">goto <name pos:start="51:18" pos:end="51:26">not_coded</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:23"><expr pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:10">rl</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <operator pos:start="53:14" pos:end="53:14">&amp;</operator><name pos:start="53:15" pos:end="53:22">rl_intra</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:36"><expr pos:start="55:9" pos:end="55:35"><name pos:start="55:9" pos:end="55:14">rl_vlc</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:35"><name pos:start="55:18" pos:end="55:25">rl_intra</name><operator pos:start="55:26" pos:end="55:26">.</operator><name pos:start="55:27" pos:end="55:32">rl_vlc</name><index pos:start="55:33" pos:end="55:35">[<expr pos:start="55:34" pos:end="55:34"><literal type="number" pos:start="55:34" pos:end="55:34">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="71:9"><if pos:start="57:9" pos:end="67:9">if <condition pos:start="57:12" pos:end="57:23">(<expr pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:22">ac_pred</name></name></expr>)</condition> <block pos:start="57:25" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:61">

            <if_stmt pos:start="59:13" pos:end="65:61"><if pos:start="59:13" pos:end="61:61">if <condition pos:start="59:16" pos:end="59:33">(<expr pos:start="59:17" pos:end="59:32"><name pos:start="59:17" pos:end="59:27">dc_pred_dir</name> <operator pos:start="59:29" pos:end="59:30">==</operator> <literal type="number" pos:start="59:32" pos:end="59:32">0</literal></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:61"><block_content pos:start="61:17" pos:end="61:61"> 

                <expr_stmt pos:start="61:17" pos:end="61:61"><expr pos:start="61:17" pos:end="61:60"><name pos:start="61:17" pos:end="61:26">scan_table</name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:60"><name pos:start="61:30" pos:end="61:30">s</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:49">intra_v_scantable</name><operator pos:start="61:50" pos:end="61:50">.</operator><name pos:start="61:51" pos:end="61:60">permutated</name></name></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="61:63" pos:end="61:72">/* left */</comment>

            <else pos:start="63:13" pos:end="65:61">else<block type="pseudo" pos:start="65:17" pos:end="65:61"><block_content pos:start="65:17" pos:end="65:61">

                <expr_stmt pos:start="65:17" pos:end="65:61"><expr pos:start="65:17" pos:end="65:60"><name pos:start="65:17" pos:end="65:26">scan_table</name> <operator pos:start="65:28" pos:end="65:28">=</operator> <name pos:start="65:30" pos:end="65:60"><name pos:start="65:30" pos:end="65:30">s</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:49">intra_h_scantable</name><operator pos:start="65:50" pos:end="65:50">.</operator><name pos:start="65:51" pos:end="65:60">permutated</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="65:63" pos:end="65:71">/* top */</comment>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="71:9">else <block pos:start="67:16" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:55">

            <expr_stmt pos:start="69:13" pos:end="69:55"><expr pos:start="69:13" pos:end="69:54"><name pos:start="69:13" pos:end="69:22">scan_table</name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:54"><name pos:start="69:26" pos:end="69:26">s</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:43">intra_scantable</name><operator pos:start="69:44" pos:end="69:44">.</operator><name pos:start="69:45" pos:end="69:54">permutated</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:15"><expr pos:start="73:9" pos:end="73:14"><name pos:start="73:9" pos:end="73:12">qmul</name><operator pos:start="73:13" pos:end="73:13">=</operator><literal type="number" pos:start="73:14" pos:end="73:14">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:15"><expr pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:12">qadd</name><operator pos:start="75:13" pos:end="75:13">=</operator><literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="115:5">else <block pos:start="77:12" pos:end="115:5">{<block_content pos:start="79:9" pos:end="113:9">

        <expr_stmt pos:start="79:9" pos:end="79:15"><expr pos:start="79:9" pos:end="79:14"><name pos:start="79:9" pos:end="79:9">i</name> <operator pos:start="79:11" pos:end="79:11">=</operator> <operator pos:start="79:13" pos:end="79:13">-</operator><literal type="number" pos:start="79:14" pos:end="79:14">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:19">(<expr pos:start="81:13" pos:end="81:18"><operator pos:start="81:13" pos:end="81:13">!</operator><name pos:start="81:14" pos:end="81:18">coded</name></expr>)</condition> <block pos:start="81:21" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:21">

            <expr_stmt pos:start="83:13" pos:end="83:39"><expr pos:start="83:13" pos:end="83:38"><name pos:start="83:13" pos:end="83:34"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:31">block_last_index</name><index pos:start="83:32" pos:end="83:34">[<expr pos:start="83:33" pos:end="83:33"><name pos:start="83:33" pos:end="83:33">n</name></expr>]</index></name> <operator pos:start="83:36" pos:end="83:36">=</operator> <name pos:start="83:38" pos:end="83:38">i</name></expr>;</expr_stmt>

            <return pos:start="85:13" pos:end="85:21">return <expr pos:start="85:20" pos:end="85:20"><literal type="number" pos:start="85:20" pos:end="85:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:23"><expr pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:10">rl</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <operator pos:start="89:14" pos:end="89:14">&amp;</operator><name pos:start="89:15" pos:end="89:22">rl_inter</name></expr>;</expr_stmt>

   

        <expr_stmt pos:start="93:9" pos:end="93:51"><expr pos:start="93:9" pos:end="93:50"><name pos:start="93:9" pos:end="93:18">scan_table</name> <operator pos:start="93:20" pos:end="93:20">=</operator> <name pos:start="93:22" pos:end="93:50"><name pos:start="93:22" pos:end="93:22">s</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:39">intra_scantable</name><operator pos:start="93:40" pos:end="93:40">.</operator><name pos:start="93:41" pos:end="93:50">permutated</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="97:9" pos:end="113:9"><if pos:start="97:9" pos:end="105:9">if<condition pos:start="97:11" pos:end="97:25">(<expr pos:start="97:12" pos:end="97:24"><name pos:start="97:12" pos:end="97:24"><name pos:start="97:12" pos:end="97:12">s</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:24">mpeg_quant</name></name></expr>)</condition><block pos:start="97:26" pos:end="105:9">{<block_content pos:start="99:13" pos:end="103:40">

            <expr_stmt pos:start="99:13" pos:end="99:19"><expr pos:start="99:13" pos:end="99:18"><name pos:start="99:13" pos:end="99:16">qmul</name><operator pos:start="99:17" pos:end="99:17">=</operator><literal type="number" pos:start="99:18" pos:end="99:18">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:19"><expr pos:start="101:13" pos:end="101:18"><name pos:start="101:13" pos:end="101:16">qadd</name><operator pos:start="101:17" pos:end="101:17">=</operator><literal type="number" pos:start="101:18" pos:end="101:18">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:40"><expr pos:start="103:13" pos:end="103:39"><name pos:start="103:13" pos:end="103:18">rl_vlc</name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:39"><name pos:start="103:22" pos:end="103:29">rl_inter</name><operator pos:start="103:30" pos:end="103:30">.</operator><name pos:start="103:31" pos:end="103:36">rl_vlc</name><index pos:start="103:37" pos:end="103:39">[<expr pos:start="103:38" pos:end="103:38"><literal type="number" pos:start="103:38" pos:end="103:38">0</literal></expr>]</index></name></expr>;</expr_stmt>        

        </block_content>}</block></if><else pos:start="105:10" pos:end="113:9">else<block pos:start="105:14" pos:end="113:9">{<block_content pos:start="107:13" pos:end="111:48">

            <expr_stmt pos:start="107:13" pos:end="107:34"><expr pos:start="107:13" pos:end="107:33"><name pos:start="107:13" pos:end="107:16">qmul</name> <operator pos:start="107:18" pos:end="107:18">=</operator> <name pos:start="107:20" pos:end="107:28"><name pos:start="107:20" pos:end="107:20">s</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:28">qscale</name></name> <operator pos:start="107:30" pos:end="107:31">&lt;&lt;</operator> <literal type="number" pos:start="107:33" pos:end="107:33">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:39"><expr pos:start="109:13" pos:end="109:38"><name pos:start="109:13" pos:end="109:16">qadd</name> <operator pos:start="109:18" pos:end="109:18">=</operator> <operator pos:start="109:20" pos:end="109:20">(</operator><name pos:start="109:21" pos:end="109:29"><name pos:start="109:21" pos:end="109:21">s</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:29">qscale</name></name> <operator pos:start="109:31" pos:end="109:31">-</operator> <literal type="number" pos:start="109:33" pos:end="109:33">1</literal><operator pos:start="109:34" pos:end="109:34">)</operator> <operator pos:start="109:36" pos:end="109:36">|</operator> <literal type="number" pos:start="109:38" pos:end="109:38">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:48"><expr pos:start="111:13" pos:end="111:47"><name pos:start="111:13" pos:end="111:18">rl_vlc</name> <operator pos:start="111:20" pos:end="111:20">=</operator> <name pos:start="111:22" pos:end="111:47"><name pos:start="111:22" pos:end="111:29">rl_inter</name><operator pos:start="111:30" pos:end="111:30">.</operator><name pos:start="111:31" pos:end="111:36">rl_vlc</name><index pos:start="111:37" pos:end="111:47">[<expr pos:start="111:38" pos:end="111:46"><name pos:start="111:38" pos:end="111:46"><name pos:start="111:38" pos:end="111:38">s</name><operator pos:start="111:39" pos:end="111:40">-&gt;</operator><name pos:start="111:41" pos:end="111:46">qscale</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

  <block pos:start="117:3" pos:end="331:3">{<block_content pos:start="119:5" pos:end="329:29">

    <expr_stmt pos:start="119:5" pos:end="119:28"><expr pos:start="119:5" pos:end="119:27"><call pos:start="119:5" pos:end="119:27"><name pos:start="119:5" pos:end="119:15">OPEN_READER</name><argument_list pos:start="119:16" pos:end="119:27">(<argument pos:start="119:17" pos:end="119:18"><expr pos:start="119:17" pos:end="119:18"><name pos:start="119:17" pos:end="119:18">re</name></expr></argument>, <argument pos:start="119:21" pos:end="119:26"><expr pos:start="119:21" pos:end="119:26"><operator pos:start="119:21" pos:end="119:21">&amp;</operator><name pos:start="119:22" pos:end="119:26"><name pos:start="119:22" pos:end="119:22">s</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:26">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="121:5" pos:end="327:5">for<control pos:start="121:8" pos:end="121:11">(<init pos:start="121:9" pos:end="121:9">;</init><condition pos:start="121:10" pos:end="121:10">;</condition><incr/>)</control> <block pos:start="121:13" pos:end="327:5">{<block_content pos:start="123:9" pos:end="325:37">

        <expr_stmt pos:start="123:9" pos:end="123:33"><expr pos:start="123:9" pos:end="123:32"><call pos:start="123:9" pos:end="123:32"><name pos:start="123:9" pos:end="123:20">UPDATE_CACHE</name><argument_list pos:start="123:21" pos:end="123:32">(<argument pos:start="123:22" pos:end="123:23"><expr pos:start="123:22" pos:end="123:23"><name pos:start="123:22" pos:end="123:23">re</name></expr></argument>, <argument pos:start="123:26" pos:end="123:31"><expr pos:start="123:26" pos:end="123:31"><operator pos:start="123:26" pos:end="123:26">&amp;</operator><name pos:start="123:27" pos:end="123:31"><name pos:start="123:27" pos:end="123:27">s</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:68"><expr pos:start="125:9" pos:end="125:67"><call pos:start="125:9" pos:end="125:67"><name pos:start="125:9" pos:end="125:18">GET_RL_VLC</name><argument_list pos:start="125:19" pos:end="125:67">(<argument pos:start="125:20" pos:end="125:24"><expr pos:start="125:20" pos:end="125:24"><name pos:start="125:20" pos:end="125:24">level</name></expr></argument>, <argument pos:start="125:27" pos:end="125:29"><expr pos:start="125:27" pos:end="125:29"><name pos:start="125:27" pos:end="125:29">run</name></expr></argument>, <argument pos:start="125:32" pos:end="125:33"><expr pos:start="125:32" pos:end="125:33"><name pos:start="125:32" pos:end="125:33">re</name></expr></argument>, <argument pos:start="125:36" pos:end="125:41"><expr pos:start="125:36" pos:end="125:41"><operator pos:start="125:36" pos:end="125:36">&amp;</operator><name pos:start="125:37" pos:end="125:41"><name pos:start="125:37" pos:end="125:37">s</name><operator pos:start="125:38" pos:end="125:39">-&gt;</operator><name pos:start="125:40" pos:end="125:41">gb</name></name></expr></argument>, <argument pos:start="125:44" pos:end="125:49"><expr pos:start="125:44" pos:end="125:49"><name pos:start="125:44" pos:end="125:49">rl_vlc</name></expr></argument>, <argument pos:start="125:52" pos:end="125:63"><expr pos:start="125:52" pos:end="125:63"><name pos:start="125:52" pos:end="125:63">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="125:66" pos:end="125:66"><expr pos:start="125:66" pos:end="125:66"><literal type="number" pos:start="125:66" pos:end="125:66">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="301:9"><if pos:start="127:9" pos:end="293:9">if <condition pos:start="127:12" pos:end="127:21">(<expr pos:start="127:13" pos:end="127:20"><name pos:start="127:13" pos:end="127:17">level</name><operator pos:start="127:18" pos:end="127:19">==</operator><literal type="number" pos:start="127:20" pos:end="127:20">0</literal></expr>)</condition> <block pos:start="127:23" pos:end="293:9">{<block_content pos:start="129:13" pos:end="291:13">

            <decl_stmt pos:start="129:13" pos:end="129:22"><decl pos:start="129:13" pos:end="129:21"><type pos:start="129:13" pos:end="129:15"><name pos:start="129:13" pos:end="129:15">int</name></type> <name pos:start="129:17" pos:end="129:21">cache</name></decl>;</decl_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:41"><expr pos:start="131:13" pos:end="131:40"><name pos:start="131:13" pos:end="131:17">cache</name><operator pos:start="131:18" pos:end="131:18">=</operator> <call pos:start="131:20" pos:end="131:40"><name pos:start="131:20" pos:end="131:28">GET_CACHE</name><argument_list pos:start="131:29" pos:end="131:40">(<argument pos:start="131:30" pos:end="131:31"><expr pos:start="131:30" pos:end="131:31"><name pos:start="131:30" pos:end="131:31">re</name></expr></argument>, <argument pos:start="131:34" pos:end="131:39"><expr pos:start="131:34" pos:end="131:39"><operator pos:start="131:34" pos:end="131:34">&amp;</operator><name pos:start="131:35" pos:end="131:39"><name pos:start="131:35" pos:end="131:35">s</name><operator pos:start="131:36" pos:end="131:37">-&gt;</operator><name pos:start="131:38" pos:end="131:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="133:13" pos:end="133:24">/* escape */</comment>

            <if_stmt pos:start="135:13" pos:end="291:13"><if pos:start="135:13" pos:end="265:13">if <condition pos:start="135:16" pos:end="135:33">(<expr pos:start="135:17" pos:end="135:32"><name pos:start="135:17" pos:end="135:21">cache</name><operator pos:start="135:22" pos:end="135:22">&amp;</operator><literal type="number" pos:start="135:23" pos:end="135:32">0x80000000</literal></expr>)</condition> <block pos:start="135:35" pos:end="265:13">{<block_content pos:start="137:17" pos:end="263:17">

                <if_stmt pos:start="137:17" pos:end="263:17"><if pos:start="137:17" pos:end="239:17">if <condition pos:start="137:20" pos:end="137:37">(<expr pos:start="137:21" pos:end="137:36"><name pos:start="137:21" pos:end="137:25">cache</name><operator pos:start="137:26" pos:end="137:26">&amp;</operator><literal type="number" pos:start="137:27" pos:end="137:36">0x40000000</literal></expr>)</condition> <block pos:start="137:39" pos:end="239:17">{<block_content pos:start="141:21" pos:end="237:36">

                    <comment type="block" pos:start="139:21" pos:end="139:38">/* third escape */</comment>

                    <expr_stmt pos:start="141:21" pos:end="141:46"><expr pos:start="141:21" pos:end="141:45"><call pos:start="141:21" pos:end="141:45"><name pos:start="141:21" pos:end="141:30">SKIP_CACHE</name><argument_list pos:start="141:31" pos:end="141:45">(<argument pos:start="141:32" pos:end="141:33"><expr pos:start="141:32" pos:end="141:33"><name pos:start="141:32" pos:end="141:33">re</name></expr></argument>, <argument pos:start="141:36" pos:end="141:41"><expr pos:start="141:36" pos:end="141:41"><operator pos:start="141:36" pos:end="141:36">&amp;</operator><name pos:start="141:37" pos:end="141:41"><name pos:start="141:37" pos:end="141:37">s</name><operator pos:start="141:38" pos:end="141:39">-&gt;</operator><name pos:start="141:40" pos:end="141:41">gb</name></name></expr></argument>, <argument pos:start="141:44" pos:end="141:44"><expr pos:start="141:44" pos:end="141:44"><literal type="number" pos:start="141:44" pos:end="141:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:53"><expr pos:start="143:21" pos:end="143:52"><name pos:start="143:21" pos:end="143:24">last</name><operator pos:start="143:25" pos:end="143:25">=</operator>  <call pos:start="143:28" pos:end="143:52"><name pos:start="143:28" pos:end="143:37">SHOW_UBITS</name><argument_list pos:start="143:38" pos:end="143:52">(<argument pos:start="143:39" pos:end="143:40"><expr pos:start="143:39" pos:end="143:40"><name pos:start="143:39" pos:end="143:40">re</name></expr></argument>, <argument pos:start="143:43" pos:end="143:48"><expr pos:start="143:43" pos:end="143:48"><operator pos:start="143:43" pos:end="143:43">&amp;</operator><name pos:start="143:44" pos:end="143:48"><name pos:start="143:44" pos:end="143:44">s</name><operator pos:start="143:45" pos:end="143:46">-&gt;</operator><name pos:start="143:47" pos:end="143:48">gb</name></name></expr></argument>, <argument pos:start="143:51" pos:end="143:51"><expr pos:start="143:51" pos:end="143:51"><literal type="number" pos:start="143:51" pos:end="143:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="143:55" pos:end="143:80"><expr pos:start="143:55" pos:end="143:79"><call pos:start="143:55" pos:end="143:79"><name pos:start="143:55" pos:end="143:64">SKIP_CACHE</name><argument_list pos:start="143:65" pos:end="143:79">(<argument pos:start="143:66" pos:end="143:67"><expr pos:start="143:66" pos:end="143:67"><name pos:start="143:66" pos:end="143:67">re</name></expr></argument>, <argument pos:start="143:70" pos:end="143:75"><expr pos:start="143:70" pos:end="143:75"><operator pos:start="143:70" pos:end="143:70">&amp;</operator><name pos:start="143:71" pos:end="143:75"><name pos:start="143:71" pos:end="143:71">s</name><operator pos:start="143:72" pos:end="143:73">-&gt;</operator><name pos:start="143:74" pos:end="143:75">gb</name></name></expr></argument>, <argument pos:start="143:78" pos:end="143:78"><expr pos:start="143:78" pos:end="143:78"><literal type="number" pos:start="143:78" pos:end="143:78">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="145:21" pos:end="145:53"><expr pos:start="145:21" pos:end="145:52"><name pos:start="145:21" pos:end="145:23">run</name><operator pos:start="145:24" pos:end="145:24">=</operator>   <call pos:start="145:28" pos:end="145:52"><name pos:start="145:28" pos:end="145:37">SHOW_UBITS</name><argument_list pos:start="145:38" pos:end="145:52">(<argument pos:start="145:39" pos:end="145:40"><expr pos:start="145:39" pos:end="145:40"><name pos:start="145:39" pos:end="145:40">re</name></expr></argument>, <argument pos:start="145:43" pos:end="145:48"><expr pos:start="145:43" pos:end="145:48"><operator pos:start="145:43" pos:end="145:43">&amp;</operator><name pos:start="145:44" pos:end="145:48"><name pos:start="145:44" pos:end="145:44">s</name><operator pos:start="145:45" pos:end="145:46">-&gt;</operator><name pos:start="145:47" pos:end="145:48">gb</name></name></expr></argument>, <argument pos:start="145:51" pos:end="145:51"><expr pos:start="145:51" pos:end="145:51"><literal type="number" pos:start="145:51" pos:end="145:51">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="145:55" pos:end="145:85"><expr pos:start="145:55" pos:end="145:84"><call pos:start="145:55" pos:end="145:84"><name pos:start="145:55" pos:end="145:69">LAST_SKIP_CACHE</name><argument_list pos:start="145:70" pos:end="145:84">(<argument pos:start="145:71" pos:end="145:72"><expr pos:start="145:71" pos:end="145:72"><name pos:start="145:71" pos:end="145:72">re</name></expr></argument>, <argument pos:start="145:75" pos:end="145:80"><expr pos:start="145:75" pos:end="145:80"><operator pos:start="145:75" pos:end="145:75">&amp;</operator><name pos:start="145:76" pos:end="145:80"><name pos:start="145:76" pos:end="145:76">s</name><operator pos:start="145:77" pos:end="145:78">-&gt;</operator><name pos:start="145:79" pos:end="145:80">gb</name></name></expr></argument>, <argument pos:start="145:83" pos:end="145:83"><expr pos:start="145:83" pos:end="145:83"><literal type="number" pos:start="145:83" pos:end="145:83">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:52"><expr pos:start="147:21" pos:end="147:51"><call pos:start="147:21" pos:end="147:51"><name pos:start="147:21" pos:end="147:32">SKIP_COUNTER</name><argument_list pos:start="147:33" pos:end="147:51">(<argument pos:start="147:34" pos:end="147:35"><expr pos:start="147:34" pos:end="147:35"><name pos:start="147:34" pos:end="147:35">re</name></expr></argument>, <argument pos:start="147:38" pos:end="147:43"><expr pos:start="147:38" pos:end="147:43"><operator pos:start="147:38" pos:end="147:38">&amp;</operator><name pos:start="147:39" pos:end="147:43"><name pos:start="147:39" pos:end="147:39">s</name><operator pos:start="147:40" pos:end="147:41">-&gt;</operator><name pos:start="147:42" pos:end="147:43">gb</name></name></expr></argument>, <argument pos:start="147:46" pos:end="147:50"><expr pos:start="147:46" pos:end="147:50"><literal type="number" pos:start="147:46" pos:end="147:47">2</literal><operator pos:start="147:47" pos:end="147:47">+</operator><literal type="number" pos:start="147:48" pos:end="147:49">1</literal><operator pos:start="147:49" pos:end="147:49">+</operator><literal type="number" pos:start="147:50" pos:end="147:50">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:45"><expr pos:start="149:21" pos:end="149:44"><call pos:start="149:21" pos:end="149:44"><name pos:start="149:21" pos:end="149:32">UPDATE_CACHE</name><argument_list pos:start="149:33" pos:end="149:44">(<argument pos:start="149:34" pos:end="149:35"><expr pos:start="149:34" pos:end="149:35"><name pos:start="149:34" pos:end="149:35">re</name></expr></argument>, <argument pos:start="149:38" pos:end="149:43"><expr pos:start="149:38" pos:end="149:43"><operator pos:start="149:38" pos:end="149:38">&amp;</operator><name pos:start="149:39" pos:end="149:43"><name pos:start="149:39" pos:end="149:39">s</name><operator pos:start="149:40" pos:end="149:41">-&gt;</operator><name pos:start="149:42" pos:end="149:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="153:21" pos:end="159:21"><if pos:start="153:21" pos:end="159:21">if<condition pos:start="153:23" pos:end="153:52">(<expr pos:start="153:24" pos:end="153:51"><call pos:start="153:24" pos:end="153:48"><name pos:start="153:24" pos:end="153:33">SHOW_UBITS</name><argument_list pos:start="153:34" pos:end="153:48">(<argument pos:start="153:35" pos:end="153:36"><expr pos:start="153:35" pos:end="153:36"><name pos:start="153:35" pos:end="153:36">re</name></expr></argument>, <argument pos:start="153:39" pos:end="153:44"><expr pos:start="153:39" pos:end="153:44"><operator pos:start="153:39" pos:end="153:39">&amp;</operator><name pos:start="153:40" pos:end="153:44"><name pos:start="153:40" pos:end="153:40">s</name><operator pos:start="153:41" pos:end="153:42">-&gt;</operator><name pos:start="153:43" pos:end="153:44">gb</name></name></expr></argument>, <argument pos:start="153:47" pos:end="153:47"><expr pos:start="153:47" pos:end="153:47"><literal type="number" pos:start="153:47" pos:end="153:47">1</literal></expr></argument>)</argument_list></call><operator pos:start="153:49" pos:end="153:50">==</operator><literal type="number" pos:start="153:51" pos:end="153:51">0</literal></expr>)</condition><block pos:start="153:53" pos:end="159:21">{<block_content pos:start="155:25" pos:end="157:34">

                        <expr_stmt pos:start="155:25" pos:end="155:77"><expr pos:start="155:25" pos:end="155:76"><call pos:start="155:25" pos:end="155:76"><name pos:start="155:25" pos:end="155:31">fprintf</name><argument_list pos:start="155:32" pos:end="155:76">(<argument pos:start="155:33" pos:end="155:38"><expr pos:start="155:33" pos:end="155:38"><name pos:start="155:33" pos:end="155:38">stderr</name></expr></argument>, <argument pos:start="155:41" pos:end="155:75"><expr pos:start="155:41" pos:end="155:75"><literal type="string" pos:start="155:41" pos:end="155:75">"1. marker bit missing in 3. esc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="157:25" pos:end="157:34">return <expr pos:start="157:32" pos:end="157:33"><operator pos:start="157:32" pos:end="157:32">-</operator><literal type="number" pos:start="157:33" pos:end="157:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt><empty_stmt pos:start="159:22" pos:end="159:22">;</empty_stmt> <expr_stmt pos:start="159:24" pos:end="159:49"><expr pos:start="159:24" pos:end="159:48"><call pos:start="159:24" pos:end="159:48"><name pos:start="159:24" pos:end="159:33">SKIP_CACHE</name><argument_list pos:start="159:34" pos:end="159:48">(<argument pos:start="159:35" pos:end="159:36"><expr pos:start="159:35" pos:end="159:36"><name pos:start="159:35" pos:end="159:36">re</name></expr></argument>, <argument pos:start="159:39" pos:end="159:44"><expr pos:start="159:39" pos:end="159:44"><operator pos:start="159:39" pos:end="159:39">&amp;</operator><name pos:start="159:40" pos:end="159:44"><name pos:start="159:40" pos:end="159:40">s</name><operator pos:start="159:41" pos:end="159:42">-&gt;</operator><name pos:start="159:43" pos:end="159:44">gb</name></name></expr></argument>, <argument pos:start="159:47" pos:end="159:47"><expr pos:start="159:47" pos:end="159:47"><literal type="number" pos:start="159:47" pos:end="159:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    

                    <expr_stmt pos:start="163:21" pos:end="163:54"><expr pos:start="163:21" pos:end="163:53"><name pos:start="163:21" pos:end="163:25">level</name><operator pos:start="163:26" pos:end="163:26">=</operator> <call pos:start="163:28" pos:end="163:53"><name pos:start="163:28" pos:end="163:37">SHOW_SBITS</name><argument_list pos:start="163:38" pos:end="163:53">(<argument pos:start="163:39" pos:end="163:40"><expr pos:start="163:39" pos:end="163:40"><name pos:start="163:39" pos:end="163:40">re</name></expr></argument>, <argument pos:start="163:43" pos:end="163:48"><expr pos:start="163:43" pos:end="163:48"><operator pos:start="163:43" pos:end="163:43">&amp;</operator><name pos:start="163:44" pos:end="163:48"><name pos:start="163:44" pos:end="163:44">s</name><operator pos:start="163:45" pos:end="163:46">-&gt;</operator><name pos:start="163:47" pos:end="163:48">gb</name></name></expr></argument>, <argument pos:start="163:51" pos:end="163:52"><expr pos:start="163:51" pos:end="163:52"><literal type="number" pos:start="163:51" pos:end="163:52">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="163:56" pos:end="163:82"><expr pos:start="163:56" pos:end="163:81"><call pos:start="163:56" pos:end="163:81"><name pos:start="163:56" pos:end="163:65">SKIP_CACHE</name><argument_list pos:start="163:66" pos:end="163:81">(<argument pos:start="163:67" pos:end="163:68"><expr pos:start="163:67" pos:end="163:68"><name pos:start="163:67" pos:end="163:68">re</name></expr></argument>, <argument pos:start="163:71" pos:end="163:76"><expr pos:start="163:71" pos:end="163:76"><operator pos:start="163:71" pos:end="163:71">&amp;</operator><name pos:start="163:72" pos:end="163:76"><name pos:start="163:72" pos:end="163:72">s</name><operator pos:start="163:73" pos:end="163:74">-&gt;</operator><name pos:start="163:75" pos:end="163:76">gb</name></name></expr></argument>, <argument pos:start="163:79" pos:end="163:80"><expr pos:start="163:79" pos:end="163:80"><literal type="number" pos:start="163:79" pos:end="163:80">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

 

                    <if_stmt pos:start="167:21" pos:end="173:21"><if pos:start="167:21" pos:end="173:21">if<condition pos:start="167:23" pos:end="167:52">(<expr pos:start="167:24" pos:end="167:51"><call pos:start="167:24" pos:end="167:48"><name pos:start="167:24" pos:end="167:33">SHOW_UBITS</name><argument_list pos:start="167:34" pos:end="167:48">(<argument pos:start="167:35" pos:end="167:36"><expr pos:start="167:35" pos:end="167:36"><name pos:start="167:35" pos:end="167:36">re</name></expr></argument>, <argument pos:start="167:39" pos:end="167:44"><expr pos:start="167:39" pos:end="167:44"><operator pos:start="167:39" pos:end="167:39">&amp;</operator><name pos:start="167:40" pos:end="167:44"><name pos:start="167:40" pos:end="167:40">s</name><operator pos:start="167:41" pos:end="167:42">-&gt;</operator><name pos:start="167:43" pos:end="167:44">gb</name></name></expr></argument>, <argument pos:start="167:47" pos:end="167:47"><expr pos:start="167:47" pos:end="167:47"><literal type="number" pos:start="167:47" pos:end="167:47">1</literal></expr></argument>)</argument_list></call><operator pos:start="167:49" pos:end="167:50">==</operator><literal type="number" pos:start="167:51" pos:end="167:51">0</literal></expr>)</condition><block pos:start="167:53" pos:end="173:21">{<block_content pos:start="169:25" pos:end="171:34">

                        <expr_stmt pos:start="169:25" pos:end="169:77"><expr pos:start="169:25" pos:end="169:76"><call pos:start="169:25" pos:end="169:76"><name pos:start="169:25" pos:end="169:31">fprintf</name><argument_list pos:start="169:32" pos:end="169:76">(<argument pos:start="169:33" pos:end="169:38"><expr pos:start="169:33" pos:end="169:38"><name pos:start="169:33" pos:end="169:38">stderr</name></expr></argument>, <argument pos:start="169:41" pos:end="169:75"><expr pos:start="169:41" pos:end="169:75"><literal type="string" pos:start="169:41" pos:end="169:75">"2. marker bit missing in 3. esc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="171:25" pos:end="171:34">return <expr pos:start="171:32" pos:end="171:33"><operator pos:start="171:32" pos:end="171:32">-</operator><literal type="number" pos:start="171:33" pos:end="171:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt><empty_stmt pos:start="173:22" pos:end="173:22">;</empty_stmt> <expr_stmt pos:start="173:24" pos:end="173:54"><expr pos:start="173:24" pos:end="173:53"><call pos:start="173:24" pos:end="173:53"><name pos:start="173:24" pos:end="173:38">LAST_SKIP_CACHE</name><argument_list pos:start="173:39" pos:end="173:53">(<argument pos:start="173:40" pos:end="173:41"><expr pos:start="173:40" pos:end="173:41"><name pos:start="173:40" pos:end="173:41">re</name></expr></argument>, <argument pos:start="173:44" pos:end="173:49"><expr pos:start="173:44" pos:end="173:49"><operator pos:start="173:44" pos:end="173:44">&amp;</operator><name pos:start="173:45" pos:end="173:49"><name pos:start="173:45" pos:end="173:45">s</name><operator pos:start="173:46" pos:end="173:47">-&gt;</operator><name pos:start="173:48" pos:end="173:49">gb</name></name></expr></argument>, <argument pos:start="173:52" pos:end="173:52"><expr pos:start="173:52" pos:end="173:52"><literal type="number" pos:start="173:52" pos:end="173:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    

                    <expr_stmt pos:start="177:21" pos:end="177:53"><expr pos:start="177:21" pos:end="177:52"><call pos:start="177:21" pos:end="177:52"><name pos:start="177:21" pos:end="177:32">SKIP_COUNTER</name><argument_list pos:start="177:33" pos:end="177:52">(<argument pos:start="177:34" pos:end="177:35"><expr pos:start="177:34" pos:end="177:35"><name pos:start="177:34" pos:end="177:35">re</name></expr></argument>, <argument pos:start="177:38" pos:end="177:43"><expr pos:start="177:38" pos:end="177:43"><operator pos:start="177:38" pos:end="177:38">&amp;</operator><name pos:start="177:39" pos:end="177:43"><name pos:start="177:39" pos:end="177:39">s</name><operator pos:start="177:40" pos:end="177:41">-&gt;</operator><name pos:start="177:42" pos:end="177:43">gb</name></name></expr></argument>, <argument pos:start="177:46" pos:end="177:51"><expr pos:start="177:46" pos:end="177:51"><literal type="number" pos:start="177:46" pos:end="177:47">1</literal><operator pos:start="177:47" pos:end="177:47">+</operator><literal type="number" pos:start="177:48" pos:end="177:50">12</literal><operator pos:start="177:50" pos:end="177:50">+</operator><literal type="number" pos:start="177:51" pos:end="177:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    

                    <if_stmt pos:start="181:21" pos:end="190:0"><if pos:start="181:21" pos:end="190:0">if<condition pos:start="181:23" pos:end="181:69">(<expr pos:start="181:24" pos:end="181:68"><name pos:start="181:24" pos:end="181:28">level</name><operator pos:start="181:29" pos:end="181:29">*</operator><name pos:start="181:30" pos:end="181:38"><name pos:start="181:30" pos:end="181:30">s</name><operator pos:start="181:31" pos:end="181:32">-&gt;</operator><name pos:start="181:33" pos:end="181:38">qscale</name></name><operator pos:start="181:39" pos:end="181:39">&gt;</operator><literal type="number" pos:start="181:40" pos:end="181:43">1024</literal> <operator pos:start="181:45" pos:end="181:46">||</operator> <name pos:start="181:48" pos:end="181:52">level</name><operator pos:start="181:53" pos:end="181:53">*</operator><name pos:start="181:54" pos:end="181:62"><name pos:start="181:54" pos:end="181:54">s</name><operator pos:start="181:55" pos:end="181:56">-&gt;</operator><name pos:start="181:57" pos:end="181:62">qscale</name></name><operator pos:start="181:63" pos:end="181:63">&lt;</operator><operator pos:start="181:64" pos:end="181:64">-</operator><literal type="number" pos:start="181:65" pos:end="181:68">1024</literal></expr>)</condition><block pos:start="181:70" pos:end="190:0">{<block_content pos:start="183:25" pos:end="185:34">

                        <expr_stmt pos:start="183:25" pos:end="183:90"><expr pos:start="183:25" pos:end="183:89"><call pos:start="183:25" pos:end="183:89"><name pos:start="183:25" pos:end="183:31">fprintf</name><argument_list pos:start="183:32" pos:end="183:89">(<argument pos:start="183:33" pos:end="183:38"><expr pos:start="183:33" pos:end="183:38"><name pos:start="183:33" pos:end="183:38">stderr</name></expr></argument>, <argument pos:start="183:41" pos:end="183:77"><expr pos:start="183:41" pos:end="183:77"><literal type="string" pos:start="183:41" pos:end="183:77">"|level| overflow in 3. esc, qp=%d\n"</literal></expr></argument>, <argument pos:start="183:80" pos:end="183:88"><expr pos:start="183:80" pos:end="183:88"><name pos:start="183:80" pos:end="183:88"><name pos:start="183:80" pos:end="183:80">s</name><operator pos:start="183:81" pos:end="183:82">-&gt;</operator><name pos:start="183:83" pos:end="183:88">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="185:25" pos:end="185:34">return <expr pos:start="185:32" pos:end="185:33"><operator pos:start="185:32" pos:end="185:32">-</operator><literal type="number" pos:start="185:33" pos:end="185:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="189:1" pos:end="189:5">#<cpp:directive pos:start="189:2" pos:end="189:3">if</cpp:directive> <expr pos:start="189:5" pos:end="189:5"><literal type="number" pos:start="189:5" pos:end="189:5">1</literal></expr></cpp:if> 

                    <block pos:start="191:21" pos:end="228:0">{<block_content pos:start="193:25" pos:end="223:25">

                        <decl_stmt pos:start="193:25" pos:end="193:56"><decl pos:start="193:25" pos:end="193:55"><type pos:start="193:25" pos:end="193:33"><specifier pos:start="193:25" pos:end="193:29">const</specifier> <name pos:start="193:31" pos:end="193:33">int</name></type> <name pos:start="193:35" pos:end="193:43">abs_level</name><init pos:start="193:44" pos:end="193:55">= <expr pos:start="193:46" pos:end="193:55"><call pos:start="193:46" pos:end="193:55"><name pos:start="193:46" pos:end="193:48">ABS</name><argument_list pos:start="193:49" pos:end="193:55">(<argument pos:start="193:50" pos:end="193:54"><expr pos:start="193:50" pos:end="193:54"><name pos:start="193:50" pos:end="193:54">level</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="195:25" pos:end="223:25"><if pos:start="195:25" pos:end="223:25">if<condition pos:start="195:27" pos:end="195:107">(<expr pos:start="195:28" pos:end="195:106"><name pos:start="195:28" pos:end="195:36">abs_level</name><operator pos:start="195:37" pos:end="195:38">&lt;=</operator><name pos:start="195:39" pos:end="195:47">MAX_LEVEL</name> <operator pos:start="195:49" pos:end="195:50">&amp;&amp;</operator> <name pos:start="195:52" pos:end="195:54">run</name><operator pos:start="195:55" pos:end="195:56">&lt;=</operator><name pos:start="195:57" pos:end="195:63">MAX_RUN</name> <operator pos:start="195:65" pos:end="195:66">&amp;&amp;</operator> <operator pos:start="195:68" pos:end="195:68">(</operator><operator pos:start="195:69" pos:end="195:69">(</operator><name pos:start="195:70" pos:end="195:87"><name pos:start="195:70" pos:end="195:70">s</name><operator pos:start="195:71" pos:end="195:72">-&gt;</operator><name pos:start="195:73" pos:end="195:87">workaround_bugs</name></name><operator pos:start="195:88" pos:end="195:88">&amp;</operator><name pos:start="195:89" pos:end="195:101">FF_BUG_AC_VLC</name><operator pos:start="195:102" pos:end="195:102">)</operator><operator pos:start="195:103" pos:end="195:104">==</operator><literal type="number" pos:start="195:105" pos:end="195:105">0</literal><operator pos:start="195:106" pos:end="195:106">)</operator></expr>)</condition><block pos:start="195:108" pos:end="223:25">{<block_content pos:start="197:29" pos:end="221:29">

                            <decl_stmt pos:start="197:29" pos:end="197:83"><decl pos:start="197:29" pos:end="197:82"><type pos:start="197:29" pos:end="197:37"><specifier pos:start="197:29" pos:end="197:33">const</specifier> <name pos:start="197:35" pos:end="197:37">int</name></type> <name pos:start="197:39" pos:end="197:42">run1</name><init pos:start="197:43" pos:end="197:82">= <expr pos:start="197:45" pos:end="197:82"><name pos:start="197:45" pos:end="197:47">run</name> <operator pos:start="197:49" pos:end="197:49">-</operator> <name pos:start="197:51" pos:end="197:78"><name pos:start="197:51" pos:end="197:52">rl</name><operator pos:start="197:53" pos:end="197:54">-&gt;</operator><name pos:start="197:55" pos:end="197:61">max_run</name><index pos:start="197:62" pos:end="197:67">[<expr pos:start="197:63" pos:end="197:66"><name pos:start="197:63" pos:end="197:66">last</name></expr>]</index><index pos:start="197:68" pos:end="197:78">[<expr pos:start="197:69" pos:end="197:77"><name pos:start="197:69" pos:end="197:77">abs_level</name></expr>]</index></name> <operator pos:start="197:80" pos:end="197:80">-</operator> <literal type="number" pos:start="197:82" pos:end="197:82">1</literal></expr></init></decl>;</decl_stmt>

                            <if_stmt pos:start="199:29" pos:end="205:29"><if pos:start="199:29" pos:end="205:29">if<condition pos:start="199:31" pos:end="199:69">(<expr pos:start="199:32" pos:end="199:68"><name pos:start="199:32" pos:end="199:40">abs_level</name> <operator pos:start="199:42" pos:end="199:43">&lt;=</operator> <name pos:start="199:45" pos:end="199:68"><name pos:start="199:45" pos:end="199:46">rl</name><operator pos:start="199:47" pos:end="199:48">-&gt;</operator><name pos:start="199:49" pos:end="199:57">max_level</name><index pos:start="199:58" pos:end="199:63">[<expr pos:start="199:59" pos:end="199:62"><name pos:start="199:59" pos:end="199:62">last</name></expr>]</index><index pos:start="199:64" pos:end="199:68">[<expr pos:start="199:65" pos:end="199:67"><name pos:start="199:65" pos:end="199:67">run</name></expr>]</index></name></expr>)</condition><block pos:start="199:70" pos:end="205:29">{<block_content pos:start="201:33" pos:end="203:42">

                                <expr_stmt pos:start="201:33" pos:end="201:91"><expr pos:start="201:33" pos:end="201:90"><call pos:start="201:33" pos:end="201:90"><name pos:start="201:33" pos:end="201:39">fprintf</name><argument_list pos:start="201:40" pos:end="201:90">(<argument pos:start="201:41" pos:end="201:46"><expr pos:start="201:41" pos:end="201:46"><name pos:start="201:41" pos:end="201:46">stderr</name></expr></argument>, <argument pos:start="201:49" pos:end="201:89"><expr pos:start="201:49" pos:end="201:89"><literal type="string" pos:start="201:49" pos:end="201:89">"illegal 3. esc, vlc encoding possible\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <return pos:start="203:33" pos:end="203:42">return <expr pos:start="203:40" pos:end="203:41"><operator pos:start="203:40" pos:end="203:40">-</operator><literal type="number" pos:start="203:41" pos:end="203:41">1</literal></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                            <if_stmt pos:start="207:29" pos:end="213:29"><if pos:start="207:29" pos:end="213:29">if<condition pos:start="207:31" pos:end="207:71">(<expr pos:start="207:32" pos:end="207:70"><name pos:start="207:32" pos:end="207:40">abs_level</name> <operator pos:start="207:42" pos:end="207:43">&lt;=</operator> <name pos:start="207:45" pos:end="207:68"><name pos:start="207:45" pos:end="207:46">rl</name><operator pos:start="207:47" pos:end="207:48">-&gt;</operator><name pos:start="207:49" pos:end="207:57">max_level</name><index pos:start="207:58" pos:end="207:63">[<expr pos:start="207:59" pos:end="207:62"><name pos:start="207:59" pos:end="207:62">last</name></expr>]</index><index pos:start="207:64" pos:end="207:68">[<expr pos:start="207:65" pos:end="207:67"><name pos:start="207:65" pos:end="207:67">run</name></expr>]</index></name><operator pos:start="207:69" pos:end="207:69">*</operator><literal type="number" pos:start="207:70" pos:end="207:70">2</literal></expr>)</condition><block pos:start="207:72" pos:end="213:29">{<block_content pos:start="209:33" pos:end="211:42">

                                <expr_stmt pos:start="209:33" pos:end="209:93"><expr pos:start="209:33" pos:end="209:92"><call pos:start="209:33" pos:end="209:92"><name pos:start="209:33" pos:end="209:39">fprintf</name><argument_list pos:start="209:40" pos:end="209:92">(<argument pos:start="209:41" pos:end="209:46"><expr pos:start="209:41" pos:end="209:46"><name pos:start="209:41" pos:end="209:46">stderr</name></expr></argument>, <argument pos:start="209:49" pos:end="209:91"><expr pos:start="209:49" pos:end="209:91"><literal type="string" pos:start="209:49" pos:end="209:91">"illegal 3. esc, esc 1 encoding possible\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <return pos:start="211:33" pos:end="211:42">return <expr pos:start="211:40" pos:end="211:41"><operator pos:start="211:40" pos:end="211:40">-</operator><literal type="number" pos:start="211:41" pos:end="211:41">1</literal></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                            <if_stmt pos:start="215:29" pos:end="221:29"><if pos:start="215:29" pos:end="221:29">if<condition pos:start="215:31" pos:end="215:83">(<expr pos:start="215:32" pos:end="215:82"><name pos:start="215:32" pos:end="215:35">run1</name> <operator pos:start="215:37" pos:end="215:38">&gt;=</operator> <literal type="number" pos:start="215:40" pos:end="215:40">0</literal> <operator pos:start="215:42" pos:end="215:43">&amp;&amp;</operator> <name pos:start="215:45" pos:end="215:53">abs_level</name> <operator pos:start="215:55" pos:end="215:56">&lt;=</operator> <name pos:start="215:58" pos:end="215:82"><name pos:start="215:58" pos:end="215:59">rl</name><operator pos:start="215:60" pos:end="215:61">-&gt;</operator><name pos:start="215:62" pos:end="215:70">max_level</name><index pos:start="215:71" pos:end="215:76">[<expr pos:start="215:72" pos:end="215:75"><name pos:start="215:72" pos:end="215:75">last</name></expr>]</index><index pos:start="215:77" pos:end="215:82">[<expr pos:start="215:78" pos:end="215:81"><name pos:start="215:78" pos:end="215:81">run1</name></expr>]</index></name></expr>)</condition><block pos:start="215:84" pos:end="221:29">{<block_content pos:start="217:33" pos:end="219:42">

                                <expr_stmt pos:start="217:33" pos:end="217:93"><expr pos:start="217:33" pos:end="217:92"><call pos:start="217:33" pos:end="217:92"><name pos:start="217:33" pos:end="217:39">fprintf</name><argument_list pos:start="217:40" pos:end="217:92">(<argument pos:start="217:41" pos:end="217:46"><expr pos:start="217:41" pos:end="217:46"><name pos:start="217:41" pos:end="217:46">stderr</name></expr></argument>, <argument pos:start="217:49" pos:end="217:91"><expr pos:start="217:49" pos:end="217:91"><literal type="string" pos:start="217:49" pos:end="217:91">"illegal 3. esc, esc 2 encoding possible\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <return pos:start="219:33" pos:end="219:42">return <expr pos:start="219:40" pos:end="219:41"><operator pos:start="219:40" pos:end="219:40">-</operator><literal type="number" pos:start="219:41" pos:end="219:41">1</literal></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block>

<cpp:endif pos:start="227:1" pos:end="227:6">#<cpp:directive pos:start="227:2" pos:end="227:6">endif</cpp:directive></cpp:endif>

		    <if_stmt pos:start="229:21" pos:end="231:60"><if pos:start="229:21" pos:end="229:60">if <condition pos:start="229:24" pos:end="229:32">(<expr pos:start="229:25" pos:end="229:31"><name pos:start="229:25" pos:end="229:29">level</name><operator pos:start="229:30" pos:end="229:30">&gt;</operator><literal type="number" pos:start="229:31" pos:end="229:31">0</literal></expr>)</condition><block type="pseudo" pos:start="229:34" pos:end="229:60"><block_content pos:start="229:34" pos:end="229:60"> <expr_stmt pos:start="229:34" pos:end="229:60"><expr pos:start="229:34" pos:end="229:59"><name pos:start="229:34" pos:end="229:38">level</name><operator pos:start="229:39" pos:end="229:39">=</operator> <name pos:start="229:41" pos:end="229:45">level</name> <operator pos:start="229:47" pos:end="229:47">*</operator> <name pos:start="229:49" pos:end="229:52">qmul</name> <operator pos:start="229:54" pos:end="229:54">+</operator> <name pos:start="229:56" pos:end="229:59">qadd</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="231:21" pos:end="231:60">else<block type="pseudo" pos:start="231:34" pos:end="231:60"><block_content pos:start="231:34" pos:end="231:60">         <expr_stmt pos:start="231:34" pos:end="231:60"><expr pos:start="231:34" pos:end="231:59"><name pos:start="231:34" pos:end="231:38">level</name><operator pos:start="231:39" pos:end="231:39">=</operator> <name pos:start="231:41" pos:end="231:45">level</name> <operator pos:start="231:47" pos:end="231:47">*</operator> <name pos:start="231:49" pos:end="231:52">qmul</name> <operator pos:start="231:54" pos:end="231:54">-</operator> <name pos:start="231:56" pos:end="231:59">qadd</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <expr_stmt pos:start="235:21" pos:end="235:32"><expr pos:start="235:21" pos:end="235:31"><name pos:start="235:21" pos:end="235:21">i</name><operator pos:start="235:22" pos:end="235:23">+=</operator> <name pos:start="235:25" pos:end="235:27">run</name> <operator pos:start="235:29" pos:end="235:29">+</operator> <literal type="number" pos:start="235:31" pos:end="235:31">1</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="237:21" pos:end="237:36"><if pos:start="237:21" pos:end="237:36">if<condition pos:start="237:23" pos:end="237:28">(<expr pos:start="237:24" pos:end="237:27"><name pos:start="237:24" pos:end="237:27">last</name></expr>)</condition><block type="pseudo" pos:start="237:30" pos:end="237:36"><block_content pos:start="237:30" pos:end="237:36"> <expr_stmt pos:start="237:30" pos:end="237:36"><expr pos:start="237:30" pos:end="237:35"><name pos:start="237:30" pos:end="237:30">i</name><operator pos:start="237:31" pos:end="237:32">+=</operator><literal type="number" pos:start="237:33" pos:end="237:35">192</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="239:19" pos:end="263:17">else <block pos:start="239:24" pos:end="263:17">{<block_content pos:start="245:21" pos:end="261:50">

                    <comment type="block" pos:start="241:21" pos:end="241:39">/* second escape */</comment>

<cpp:if pos:start="243:1" pos:end="243:23">#<cpp:directive pos:start="243:2" pos:end="243:3">if</cpp:directive> <expr pos:start="243:5" pos:end="243:23"><name pos:start="243:5" pos:end="243:18">MIN_CACHE_BITS</name> <operator pos:start="243:20" pos:end="243:20">&lt;</operator> <literal type="number" pos:start="243:22" pos:end="243:23">20</literal></expr></cpp:if>

                    <expr_stmt pos:start="245:21" pos:end="245:50"><expr pos:start="245:21" pos:end="245:49"><call pos:start="245:21" pos:end="245:49"><name pos:start="245:21" pos:end="245:34">LAST_SKIP_BITS</name><argument_list pos:start="245:35" pos:end="245:49">(<argument pos:start="245:36" pos:end="245:37"><expr pos:start="245:36" pos:end="245:37"><name pos:start="245:36" pos:end="245:37">re</name></expr></argument>, <argument pos:start="245:40" pos:end="245:45"><expr pos:start="245:40" pos:end="245:45"><operator pos:start="245:40" pos:end="245:40">&amp;</operator><name pos:start="245:41" pos:end="245:45"><name pos:start="245:41" pos:end="245:41">s</name><operator pos:start="245:42" pos:end="245:43">-&gt;</operator><name pos:start="245:44" pos:end="245:45">gb</name></name></expr></argument>, <argument pos:start="245:48" pos:end="245:48"><expr pos:start="245:48" pos:end="245:48"><literal type="number" pos:start="245:48" pos:end="245:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="247:21" pos:end="250:0"><expr pos:start="247:21" pos:end="247:44"><call pos:start="247:21" pos:end="247:44"><name pos:start="247:21" pos:end="247:32">UPDATE_CACHE</name><argument_list pos:start="247:33" pos:end="247:44">(<argument pos:start="247:34" pos:end="247:35"><expr pos:start="247:34" pos:end="247:35"><name pos:start="247:34" pos:end="247:35">re</name></expr></argument>, <argument pos:start="247:38" pos:end="247:43"><expr pos:start="247:38" pos:end="247:43"><operator pos:start="247:38" pos:end="247:38">&amp;</operator><name pos:start="247:39" pos:end="247:43"><name pos:start="247:39" pos:end="247:39">s</name><operator pos:start="247:40" pos:end="247:41">-&gt;</operator><name pos:start="247:42" pos:end="247:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="249:1" pos:end="249:5">#<cpp:directive pos:start="249:2" pos:end="249:5">else</cpp:directive></cpp:else>

                    <expr_stmt pos:start="251:21" pos:end="254:0"><expr pos:start="251:21" pos:end="251:44"><call pos:start="251:21" pos:end="251:44"><name pos:start="251:21" pos:end="251:29">SKIP_BITS</name><argument_list pos:start="251:30" pos:end="251:44">(<argument pos:start="251:31" pos:end="251:32"><expr pos:start="251:31" pos:end="251:32"><name pos:start="251:31" pos:end="251:32">re</name></expr></argument>, <argument pos:start="251:35" pos:end="251:40"><expr pos:start="251:35" pos:end="251:40"><operator pos:start="251:35" pos:end="251:35">&amp;</operator><name pos:start="251:36" pos:end="251:40"><name pos:start="251:36" pos:end="251:36">s</name><operator pos:start="251:37" pos:end="251:38">-&gt;</operator><name pos:start="251:39" pos:end="251:40">gb</name></name></expr></argument>, <argument pos:start="251:43" pos:end="251:43"><expr pos:start="251:43" pos:end="251:43"><literal type="number" pos:start="251:43" pos:end="251:43">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="253:1" pos:end="253:6">#<cpp:directive pos:start="253:2" pos:end="253:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="255:21" pos:end="255:80"><expr pos:start="255:21" pos:end="255:79"><call pos:start="255:21" pos:end="255:79"><name pos:start="255:21" pos:end="255:30">GET_RL_VLC</name><argument_list pos:start="255:31" pos:end="255:79">(<argument pos:start="255:32" pos:end="255:36"><expr pos:start="255:32" pos:end="255:36"><name pos:start="255:32" pos:end="255:36">level</name></expr></argument>, <argument pos:start="255:39" pos:end="255:41"><expr pos:start="255:39" pos:end="255:41"><name pos:start="255:39" pos:end="255:41">run</name></expr></argument>, <argument pos:start="255:44" pos:end="255:45"><expr pos:start="255:44" pos:end="255:45"><name pos:start="255:44" pos:end="255:45">re</name></expr></argument>, <argument pos:start="255:48" pos:end="255:53"><expr pos:start="255:48" pos:end="255:53"><operator pos:start="255:48" pos:end="255:48">&amp;</operator><name pos:start="255:49" pos:end="255:53"><name pos:start="255:49" pos:end="255:49">s</name><operator pos:start="255:50" pos:end="255:51">-&gt;</operator><name pos:start="255:52" pos:end="255:53">gb</name></name></expr></argument>, <argument pos:start="255:56" pos:end="255:61"><expr pos:start="255:56" pos:end="255:61"><name pos:start="255:56" pos:end="255:61">rl_vlc</name></expr></argument>, <argument pos:start="255:64" pos:end="255:75"><expr pos:start="255:64" pos:end="255:75"><name pos:start="255:64" pos:end="255:75">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="255:78" pos:end="255:78"><expr pos:start="255:78" pos:end="255:78"><literal type="number" pos:start="255:78" pos:end="255:78">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="257:21" pos:end="257:65"><expr pos:start="257:21" pos:end="257:64"><name pos:start="257:21" pos:end="257:21">i</name><operator pos:start="257:22" pos:end="257:23">+=</operator> <name pos:start="257:25" pos:end="257:27">run</name> <operator pos:start="257:29" pos:end="257:29">+</operator> <name pos:start="257:31" pos:end="257:61"><name pos:start="257:31" pos:end="257:32">rl</name><operator pos:start="257:33" pos:end="257:34">-&gt;</operator><name pos:start="257:35" pos:end="257:41">max_run</name><index pos:start="257:42" pos:end="257:49">[<expr pos:start="257:43" pos:end="257:48"><name pos:start="257:43" pos:end="257:45">run</name><operator pos:start="257:46" pos:end="257:47">&gt;&gt;</operator><literal type="number" pos:start="257:48" pos:end="257:48">7</literal></expr>]</index><index pos:start="257:50" pos:end="257:61">[<expr pos:start="257:51" pos:end="257:60"><name pos:start="257:51" pos:end="257:55">level</name><operator pos:start="257:56" pos:end="257:56">/</operator><name pos:start="257:57" pos:end="257:60">qmul</name></expr>]</index></name> <operator pos:start="257:63" pos:end="257:63">+</operator><literal type="number" pos:start="257:64" pos:end="257:64">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="257:67" pos:end="257:86">//FIXME opt indexing</comment>

                    <expr_stmt pos:start="259:21" pos:end="259:92"><expr pos:start="259:21" pos:end="259:91"><name pos:start="259:21" pos:end="259:25">level</name> <operator pos:start="259:27" pos:end="259:27">=</operator> <operator pos:start="259:29" pos:end="259:29">(</operator><name pos:start="259:30" pos:end="259:34">level</name> <operator pos:start="259:36" pos:end="259:36">^</operator> <call pos:start="259:38" pos:end="259:62"><name pos:start="259:38" pos:end="259:47">SHOW_SBITS</name><argument_list pos:start="259:48" pos:end="259:62">(<argument pos:start="259:49" pos:end="259:50"><expr pos:start="259:49" pos:end="259:50"><name pos:start="259:49" pos:end="259:50">re</name></expr></argument>, <argument pos:start="259:53" pos:end="259:58"><expr pos:start="259:53" pos:end="259:58"><operator pos:start="259:53" pos:end="259:53">&amp;</operator><name pos:start="259:54" pos:end="259:58"><name pos:start="259:54" pos:end="259:54">s</name><operator pos:start="259:55" pos:end="259:56">-&gt;</operator><name pos:start="259:57" pos:end="259:58">gb</name></name></expr></argument>, <argument pos:start="259:61" pos:end="259:61"><expr pos:start="259:61" pos:end="259:61"><literal type="number" pos:start="259:61" pos:end="259:61">1</literal></expr></argument>)</argument_list></call><operator pos:start="259:63" pos:end="259:63">)</operator> <operator pos:start="259:65" pos:end="259:65">-</operator> <call pos:start="259:67" pos:end="259:91"><name pos:start="259:67" pos:end="259:76">SHOW_SBITS</name><argument_list pos:start="259:77" pos:end="259:91">(<argument pos:start="259:78" pos:end="259:79"><expr pos:start="259:78" pos:end="259:79"><name pos:start="259:78" pos:end="259:79">re</name></expr></argument>, <argument pos:start="259:82" pos:end="259:87"><expr pos:start="259:82" pos:end="259:87"><operator pos:start="259:82" pos:end="259:82">&amp;</operator><name pos:start="259:83" pos:end="259:87"><name pos:start="259:83" pos:end="259:83">s</name><operator pos:start="259:84" pos:end="259:85">-&gt;</operator><name pos:start="259:86" pos:end="259:87">gb</name></name></expr></argument>, <argument pos:start="259:90" pos:end="259:90"><expr pos:start="259:90" pos:end="259:90"><literal type="number" pos:start="259:90" pos:end="259:90">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="261:21" pos:end="261:50"><expr pos:start="261:21" pos:end="261:49"><call pos:start="261:21" pos:end="261:49"><name pos:start="261:21" pos:end="261:34">LAST_SKIP_BITS</name><argument_list pos:start="261:35" pos:end="261:49">(<argument pos:start="261:36" pos:end="261:37"><expr pos:start="261:36" pos:end="261:37"><name pos:start="261:36" pos:end="261:37">re</name></expr></argument>, <argument pos:start="261:40" pos:end="261:45"><expr pos:start="261:40" pos:end="261:45"><operator pos:start="261:40" pos:end="261:40">&amp;</operator><name pos:start="261:41" pos:end="261:45"><name pos:start="261:41" pos:end="261:41">s</name><operator pos:start="261:42" pos:end="261:43">-&gt;</operator><name pos:start="261:44" pos:end="261:45">gb</name></name></expr></argument>, <argument pos:start="261:48" pos:end="261:48"><expr pos:start="261:48" pos:end="261:48"><literal type="number" pos:start="261:48" pos:end="261:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="265:15" pos:end="291:13">else <block pos:start="265:20" pos:end="291:13">{<block_content pos:start="271:17" pos:end="289:46">

                <comment type="block" pos:start="267:17" pos:end="267:34">/* first escape */</comment>

<cpp:if pos:start="269:1" pos:end="269:23">#<cpp:directive pos:start="269:2" pos:end="269:3">if</cpp:directive> <expr pos:start="269:5" pos:end="269:23"><name pos:start="269:5" pos:end="269:18">MIN_CACHE_BITS</name> <operator pos:start="269:20" pos:end="269:20">&lt;</operator> <literal type="number" pos:start="269:22" pos:end="269:23">19</literal></expr></cpp:if>

                <expr_stmt pos:start="271:17" pos:end="271:46"><expr pos:start="271:17" pos:end="271:45"><call pos:start="271:17" pos:end="271:45"><name pos:start="271:17" pos:end="271:30">LAST_SKIP_BITS</name><argument_list pos:start="271:31" pos:end="271:45">(<argument pos:start="271:32" pos:end="271:33"><expr pos:start="271:32" pos:end="271:33"><name pos:start="271:32" pos:end="271:33">re</name></expr></argument>, <argument pos:start="271:36" pos:end="271:41"><expr pos:start="271:36" pos:end="271:41"><operator pos:start="271:36" pos:end="271:36">&amp;</operator><name pos:start="271:37" pos:end="271:41"><name pos:start="271:37" pos:end="271:37">s</name><operator pos:start="271:38" pos:end="271:39">-&gt;</operator><name pos:start="271:40" pos:end="271:41">gb</name></name></expr></argument>, <argument pos:start="271:44" pos:end="271:44"><expr pos:start="271:44" pos:end="271:44"><literal type="number" pos:start="271:44" pos:end="271:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="273:17" pos:end="276:0"><expr pos:start="273:17" pos:end="273:40"><call pos:start="273:17" pos:end="273:40"><name pos:start="273:17" pos:end="273:28">UPDATE_CACHE</name><argument_list pos:start="273:29" pos:end="273:40">(<argument pos:start="273:30" pos:end="273:31"><expr pos:start="273:30" pos:end="273:31"><name pos:start="273:30" pos:end="273:31">re</name></expr></argument>, <argument pos:start="273:34" pos:end="273:39"><expr pos:start="273:34" pos:end="273:39"><operator pos:start="273:34" pos:end="273:34">&amp;</operator><name pos:start="273:35" pos:end="273:39"><name pos:start="273:35" pos:end="273:35">s</name><operator pos:start="273:36" pos:end="273:37">-&gt;</operator><name pos:start="273:38" pos:end="273:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="275:1" pos:end="275:5">#<cpp:directive pos:start="275:2" pos:end="275:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="277:17" pos:end="280:0"><expr pos:start="277:17" pos:end="277:40"><call pos:start="277:17" pos:end="277:40"><name pos:start="277:17" pos:end="277:25">SKIP_BITS</name><argument_list pos:start="277:26" pos:end="277:40">(<argument pos:start="277:27" pos:end="277:28"><expr pos:start="277:27" pos:end="277:28"><name pos:start="277:27" pos:end="277:28">re</name></expr></argument>, <argument pos:start="277:31" pos:end="277:36"><expr pos:start="277:31" pos:end="277:36"><operator pos:start="277:31" pos:end="277:31">&amp;</operator><name pos:start="277:32" pos:end="277:36"><name pos:start="277:32" pos:end="277:32">s</name><operator pos:start="277:33" pos:end="277:34">-&gt;</operator><name pos:start="277:35" pos:end="277:36">gb</name></name></expr></argument>, <argument pos:start="277:39" pos:end="277:39"><expr pos:start="277:39" pos:end="277:39"><literal type="number" pos:start="277:39" pos:end="277:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="279:1" pos:end="279:6">#<cpp:directive pos:start="279:2" pos:end="279:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="281:17" pos:end="281:76"><expr pos:start="281:17" pos:end="281:75"><call pos:start="281:17" pos:end="281:75"><name pos:start="281:17" pos:end="281:26">GET_RL_VLC</name><argument_list pos:start="281:27" pos:end="281:75">(<argument pos:start="281:28" pos:end="281:32"><expr pos:start="281:28" pos:end="281:32"><name pos:start="281:28" pos:end="281:32">level</name></expr></argument>, <argument pos:start="281:35" pos:end="281:37"><expr pos:start="281:35" pos:end="281:37"><name pos:start="281:35" pos:end="281:37">run</name></expr></argument>, <argument pos:start="281:40" pos:end="281:41"><expr pos:start="281:40" pos:end="281:41"><name pos:start="281:40" pos:end="281:41">re</name></expr></argument>, <argument pos:start="281:44" pos:end="281:49"><expr pos:start="281:44" pos:end="281:49"><operator pos:start="281:44" pos:end="281:44">&amp;</operator><name pos:start="281:45" pos:end="281:49"><name pos:start="281:45" pos:end="281:45">s</name><operator pos:start="281:46" pos:end="281:47">-&gt;</operator><name pos:start="281:48" pos:end="281:49">gb</name></name></expr></argument>, <argument pos:start="281:52" pos:end="281:57"><expr pos:start="281:52" pos:end="281:57"><name pos:start="281:52" pos:end="281:57">rl_vlc</name></expr></argument>, <argument pos:start="281:60" pos:end="281:71"><expr pos:start="281:60" pos:end="281:71"><name pos:start="281:60" pos:end="281:71">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="281:74" pos:end="281:74"><expr pos:start="281:74" pos:end="281:74"><literal type="number" pos:start="281:74" pos:end="281:74">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="283:17" pos:end="283:24"><expr pos:start="283:17" pos:end="283:23"><name pos:start="283:17" pos:end="283:17">i</name><operator pos:start="283:18" pos:end="283:19">+=</operator> <name pos:start="283:21" pos:end="283:23">run</name></expr>;</expr_stmt>

                <expr_stmt pos:start="285:17" pos:end="285:73"><expr pos:start="285:17" pos:end="285:72"><name pos:start="285:17" pos:end="285:21">level</name> <operator pos:start="285:23" pos:end="285:23">=</operator> <name pos:start="285:25" pos:end="285:29">level</name> <operator pos:start="285:31" pos:end="285:31">+</operator> <name pos:start="285:33" pos:end="285:65"><name pos:start="285:33" pos:end="285:34">rl</name><operator pos:start="285:35" pos:end="285:36">-&gt;</operator><name pos:start="285:37" pos:end="285:45">max_level</name><index pos:start="285:46" pos:end="285:53">[<expr pos:start="285:47" pos:end="285:52"><name pos:start="285:47" pos:end="285:49">run</name><operator pos:start="285:50" pos:end="285:51">&gt;&gt;</operator><literal type="number" pos:start="285:52" pos:end="285:52">7</literal></expr>]</index><index pos:start="285:54" pos:end="285:65">[<expr pos:start="285:55" pos:end="285:64"><operator pos:start="285:55" pos:end="285:55">(</operator><name pos:start="285:56" pos:end="285:58">run</name><operator pos:start="285:59" pos:end="285:59">-</operator><literal type="number" pos:start="285:60" pos:end="285:60">1</literal><operator pos:start="285:61" pos:end="285:61">)</operator><operator pos:start="285:62" pos:end="285:62">&amp;</operator><literal type="number" pos:start="285:63" pos:end="285:64">63</literal></expr>]</index></name> <operator pos:start="285:67" pos:end="285:67">*</operator> <name pos:start="285:69" pos:end="285:72">qmul</name></expr>;</expr_stmt><comment type="line" pos:start="285:74" pos:end="285:93">//FIXME opt indexing</comment>

                <expr_stmt pos:start="287:17" pos:end="287:88"><expr pos:start="287:17" pos:end="287:87"><name pos:start="287:17" pos:end="287:21">level</name> <operator pos:start="287:23" pos:end="287:23">=</operator> <operator pos:start="287:25" pos:end="287:25">(</operator><name pos:start="287:26" pos:end="287:30">level</name> <operator pos:start="287:32" pos:end="287:32">^</operator> <call pos:start="287:34" pos:end="287:58"><name pos:start="287:34" pos:end="287:43">SHOW_SBITS</name><argument_list pos:start="287:44" pos:end="287:58">(<argument pos:start="287:45" pos:end="287:46"><expr pos:start="287:45" pos:end="287:46"><name pos:start="287:45" pos:end="287:46">re</name></expr></argument>, <argument pos:start="287:49" pos:end="287:54"><expr pos:start="287:49" pos:end="287:54"><operator pos:start="287:49" pos:end="287:49">&amp;</operator><name pos:start="287:50" pos:end="287:54"><name pos:start="287:50" pos:end="287:50">s</name><operator pos:start="287:51" pos:end="287:52">-&gt;</operator><name pos:start="287:53" pos:end="287:54">gb</name></name></expr></argument>, <argument pos:start="287:57" pos:end="287:57"><expr pos:start="287:57" pos:end="287:57"><literal type="number" pos:start="287:57" pos:end="287:57">1</literal></expr></argument>)</argument_list></call><operator pos:start="287:59" pos:end="287:59">)</operator> <operator pos:start="287:61" pos:end="287:61">-</operator> <call pos:start="287:63" pos:end="287:87"><name pos:start="287:63" pos:end="287:72">SHOW_SBITS</name><argument_list pos:start="287:73" pos:end="287:87">(<argument pos:start="287:74" pos:end="287:75"><expr pos:start="287:74" pos:end="287:75"><name pos:start="287:74" pos:end="287:75">re</name></expr></argument>, <argument pos:start="287:78" pos:end="287:83"><expr pos:start="287:78" pos:end="287:83"><operator pos:start="287:78" pos:end="287:78">&amp;</operator><name pos:start="287:79" pos:end="287:83"><name pos:start="287:79" pos:end="287:79">s</name><operator pos:start="287:80" pos:end="287:81">-&gt;</operator><name pos:start="287:82" pos:end="287:83">gb</name></name></expr></argument>, <argument pos:start="287:86" pos:end="287:86"><expr pos:start="287:86" pos:end="287:86"><literal type="number" pos:start="287:86" pos:end="287:86">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:46"><expr pos:start="289:17" pos:end="289:45"><call pos:start="289:17" pos:end="289:45"><name pos:start="289:17" pos:end="289:30">LAST_SKIP_BITS</name><argument_list pos:start="289:31" pos:end="289:45">(<argument pos:start="289:32" pos:end="289:33"><expr pos:start="289:32" pos:end="289:33"><name pos:start="289:32" pos:end="289:33">re</name></expr></argument>, <argument pos:start="289:36" pos:end="289:41"><expr pos:start="289:36" pos:end="289:41"><operator pos:start="289:36" pos:end="289:36">&amp;</operator><name pos:start="289:37" pos:end="289:41"><name pos:start="289:37" pos:end="289:37">s</name><operator pos:start="289:38" pos:end="289:39">-&gt;</operator><name pos:start="289:40" pos:end="289:41">gb</name></name></expr></argument>, <argument pos:start="289:44" pos:end="289:44"><expr pos:start="289:44" pos:end="289:44"><literal type="number" pos:start="289:44" pos:end="289:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="293:11" pos:end="301:9">else <block pos:start="293:16" pos:end="301:9">{<block_content pos:start="295:13" pos:end="299:42">

            <expr_stmt pos:start="295:13" pos:end="295:20"><expr pos:start="295:13" pos:end="295:19"><name pos:start="295:13" pos:end="295:13">i</name><operator pos:start="295:14" pos:end="295:15">+=</operator> <name pos:start="295:17" pos:end="295:19">run</name></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:84"><expr pos:start="297:13" pos:end="297:83"><name pos:start="297:13" pos:end="297:17">level</name> <operator pos:start="297:19" pos:end="297:19">=</operator> <operator pos:start="297:21" pos:end="297:21">(</operator><name pos:start="297:22" pos:end="297:26">level</name> <operator pos:start="297:28" pos:end="297:28">^</operator> <call pos:start="297:30" pos:end="297:54"><name pos:start="297:30" pos:end="297:39">SHOW_SBITS</name><argument_list pos:start="297:40" pos:end="297:54">(<argument pos:start="297:41" pos:end="297:42"><expr pos:start="297:41" pos:end="297:42"><name pos:start="297:41" pos:end="297:42">re</name></expr></argument>, <argument pos:start="297:45" pos:end="297:50"><expr pos:start="297:45" pos:end="297:50"><operator pos:start="297:45" pos:end="297:45">&amp;</operator><name pos:start="297:46" pos:end="297:50"><name pos:start="297:46" pos:end="297:46">s</name><operator pos:start="297:47" pos:end="297:48">-&gt;</operator><name pos:start="297:49" pos:end="297:50">gb</name></name></expr></argument>, <argument pos:start="297:53" pos:end="297:53"><expr pos:start="297:53" pos:end="297:53"><literal type="number" pos:start="297:53" pos:end="297:53">1</literal></expr></argument>)</argument_list></call><operator pos:start="297:55" pos:end="297:55">)</operator> <operator pos:start="297:57" pos:end="297:57">-</operator> <call pos:start="297:59" pos:end="297:83"><name pos:start="297:59" pos:end="297:68">SHOW_SBITS</name><argument_list pos:start="297:69" pos:end="297:83">(<argument pos:start="297:70" pos:end="297:71"><expr pos:start="297:70" pos:end="297:71"><name pos:start="297:70" pos:end="297:71">re</name></expr></argument>, <argument pos:start="297:74" pos:end="297:79"><expr pos:start="297:74" pos:end="297:79"><operator pos:start="297:74" pos:end="297:74">&amp;</operator><name pos:start="297:75" pos:end="297:79"><name pos:start="297:75" pos:end="297:75">s</name><operator pos:start="297:76" pos:end="297:77">-&gt;</operator><name pos:start="297:78" pos:end="297:79">gb</name></name></expr></argument>, <argument pos:start="297:82" pos:end="297:82"><expr pos:start="297:82" pos:end="297:82"><literal type="number" pos:start="297:82" pos:end="297:82">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:42"><expr pos:start="299:13" pos:end="299:41"><call pos:start="299:13" pos:end="299:41"><name pos:start="299:13" pos:end="299:26">LAST_SKIP_BITS</name><argument_list pos:start="299:27" pos:end="299:41">(<argument pos:start="299:28" pos:end="299:29"><expr pos:start="299:28" pos:end="299:29"><name pos:start="299:28" pos:end="299:29">re</name></expr></argument>, <argument pos:start="299:32" pos:end="299:37"><expr pos:start="299:32" pos:end="299:37"><operator pos:start="299:32" pos:end="299:32">&amp;</operator><name pos:start="299:33" pos:end="299:37"><name pos:start="299:33" pos:end="299:33">s</name><operator pos:start="299:34" pos:end="299:35">-&gt;</operator><name pos:start="299:36" pos:end="299:37">gb</name></name></expr></argument>, <argument pos:start="299:40" pos:end="299:40"><expr pos:start="299:40" pos:end="299:40"><literal type="number" pos:start="299:40" pos:end="299:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="303:9" pos:end="321:9"><if pos:start="303:9" pos:end="321:9">if <condition pos:start="303:12" pos:end="303:19">(<expr pos:start="303:13" pos:end="303:18"><name pos:start="303:13" pos:end="303:13">i</name> <operator pos:start="303:15" pos:end="303:15">&gt;</operator> <literal type="number" pos:start="303:17" pos:end="303:18">62</literal></expr>)</condition><block pos:start="303:20" pos:end="321:9">{<block_content pos:start="305:13" pos:end="319:18">

            <expr_stmt pos:start="305:13" pos:end="305:20"><expr pos:start="305:13" pos:end="305:19"><name pos:start="305:13" pos:end="305:13">i</name><operator pos:start="305:14" pos:end="305:15">-=</operator> <literal type="number" pos:start="305:17" pos:end="305:19">192</literal></expr>;</expr_stmt>

            <if_stmt pos:start="307:13" pos:end="313:13"><if pos:start="307:13" pos:end="313:13">if<condition pos:start="307:15" pos:end="307:23">(<expr pos:start="307:16" pos:end="307:22"><name pos:start="307:16" pos:end="307:16">i</name><operator pos:start="307:17" pos:end="307:17">&amp;</operator><operator pos:start="307:18" pos:end="307:18">(</operator><operator pos:start="307:19" pos:end="307:19">~</operator><literal type="number" pos:start="307:20" pos:end="307:21">63</literal><operator pos:start="307:22" pos:end="307:22">)</operator></expr>)</condition><block pos:start="307:24" pos:end="313:13">{<block_content pos:start="309:17" pos:end="311:26">

                <expr_stmt pos:start="309:17" pos:end="309:79"><expr pos:start="309:17" pos:end="309:78"><call pos:start="309:17" pos:end="309:78"><name pos:start="309:17" pos:end="309:23">fprintf</name><argument_list pos:start="309:24" pos:end="309:78">(<argument pos:start="309:25" pos:end="309:30"><expr pos:start="309:25" pos:end="309:30"><name pos:start="309:25" pos:end="309:30">stderr</name></expr></argument>, <argument pos:start="309:33" pos:end="309:59"><expr pos:start="309:33" pos:end="309:59"><literal type="string" pos:start="309:33" pos:end="309:59">"ac-tex damaged at %d %d\n"</literal></expr></argument>, <argument pos:start="309:62" pos:end="309:68"><expr pos:start="309:62" pos:end="309:68"><name pos:start="309:62" pos:end="309:68"><name pos:start="309:62" pos:end="309:62">s</name><operator pos:start="309:63" pos:end="309:64">-&gt;</operator><name pos:start="309:65" pos:end="309:68">mb_x</name></name></expr></argument>, <argument pos:start="309:71" pos:end="309:77"><expr pos:start="309:71" pos:end="309:77"><name pos:start="309:71" pos:end="309:77"><name pos:start="309:71" pos:end="309:71">s</name><operator pos:start="309:72" pos:end="309:73">-&gt;</operator><name pos:start="309:74" pos:end="309:77">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="311:17" pos:end="311:26">return <expr pos:start="311:24" pos:end="311:25"><operator pos:start="311:24" pos:end="311:24">-</operator><literal type="number" pos:start="311:25" pos:end="311:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="317:13" pos:end="317:41"><expr pos:start="317:13" pos:end="317:40"><name pos:start="317:13" pos:end="317:32"><name pos:start="317:13" pos:end="317:17">block</name><index pos:start="317:18" pos:end="317:32">[<expr pos:start="317:19" pos:end="317:31"><name pos:start="317:19" pos:end="317:31"><name pos:start="317:19" pos:end="317:28">scan_table</name><index pos:start="317:29" pos:end="317:31">[<expr pos:start="317:30" pos:end="317:30"><name pos:start="317:30" pos:end="317:30">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="317:34" pos:end="317:34">=</operator> <name pos:start="317:36" pos:end="317:40">level</name></expr>;</expr_stmt>

            <break pos:start="319:13" pos:end="319:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="325:9" pos:end="325:37"><expr pos:start="325:9" pos:end="325:36"><name pos:start="325:9" pos:end="325:28"><name pos:start="325:9" pos:end="325:13">block</name><index pos:start="325:14" pos:end="325:28">[<expr pos:start="325:15" pos:end="325:27"><name pos:start="325:15" pos:end="325:27"><name pos:start="325:15" pos:end="325:24">scan_table</name><index pos:start="325:25" pos:end="325:27">[<expr pos:start="325:26" pos:end="325:26"><name pos:start="325:26" pos:end="325:26">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="325:30" pos:end="325:30">=</operator> <name pos:start="325:32" pos:end="325:36">level</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="329:5" pos:end="329:29"><expr pos:start="329:5" pos:end="329:28"><call pos:start="329:5" pos:end="329:28"><name pos:start="329:5" pos:end="329:16">CLOSE_READER</name><argument_list pos:start="329:17" pos:end="329:28">(<argument pos:start="329:18" pos:end="329:19"><expr pos:start="329:18" pos:end="329:19"><name pos:start="329:18" pos:end="329:19">re</name></expr></argument>, <argument pos:start="329:22" pos:end="329:27"><expr pos:start="329:22" pos:end="329:27"><operator pos:start="329:22" pos:end="329:22">&amp;</operator><name pos:start="329:23" pos:end="329:27"><name pos:start="329:23" pos:end="329:23">s</name><operator pos:start="329:24" pos:end="329:25">-&gt;</operator><name pos:start="329:26" pos:end="329:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block>

 <label pos:start="333:2" pos:end="333:11"><name pos:start="333:2" pos:end="333:10">not_coded</name>:</label>

    <if_stmt pos:start="335:5" pos:end="345:5"><if pos:start="335:5" pos:end="345:5">if <condition pos:start="335:8" pos:end="335:20">(<expr pos:start="335:9" pos:end="335:19"><name pos:start="335:9" pos:end="335:19"><name pos:start="335:9" pos:end="335:9">s</name><operator pos:start="335:10" pos:end="335:11">-&gt;</operator><name pos:start="335:12" pos:end="335:19">mb_intra</name></name></expr>)</condition> <block pos:start="335:22" pos:end="345:5">{<block_content pos:start="337:9" pos:end="343:9">

        <expr_stmt pos:start="337:9" pos:end="337:48"><expr pos:start="337:9" pos:end="337:47"><call pos:start="337:9" pos:end="337:47"><name pos:start="337:9" pos:end="337:21">mpeg4_pred_ac</name><argument_list pos:start="337:22" pos:end="337:47">(<argument pos:start="337:23" pos:end="337:23"><expr pos:start="337:23" pos:end="337:23"><name pos:start="337:23" pos:end="337:23">s</name></expr></argument>, <argument pos:start="337:26" pos:end="337:30"><expr pos:start="337:26" pos:end="337:30"><name pos:start="337:26" pos:end="337:30">block</name></expr></argument>, <argument pos:start="337:33" pos:end="337:33"><expr pos:start="337:33" pos:end="337:33"><name pos:start="337:33" pos:end="337:33">n</name></expr></argument>, <argument pos:start="337:36" pos:end="337:46"><expr pos:start="337:36" pos:end="337:46"><name pos:start="337:36" pos:end="337:46">dc_pred_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="339:9" pos:end="343:9"><if pos:start="339:9" pos:end="343:9">if <condition pos:start="339:12" pos:end="339:23">(<expr pos:start="339:13" pos:end="339:22"><name pos:start="339:13" pos:end="339:22"><name pos:start="339:13" pos:end="339:13">s</name><operator pos:start="339:14" pos:end="339:15">-&gt;</operator><name pos:start="339:16" pos:end="339:22">ac_pred</name></name></expr>)</condition> <block pos:start="339:25" pos:end="343:9">{<block_content pos:start="341:13" pos:end="341:19">

            <expr_stmt pos:start="341:13" pos:end="341:19"><expr pos:start="341:13" pos:end="341:18"><name pos:start="341:13" pos:end="341:13">i</name> <operator pos:start="341:15" pos:end="341:15">=</operator> <literal type="number" pos:start="341:17" pos:end="341:18">63</literal></expr>;</expr_stmt> <comment type="block" pos:start="341:21" pos:end="341:42">/* XXX: not optimal */</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="347:5" pos:end="347:31"><expr pos:start="347:5" pos:end="347:30"><name pos:start="347:5" pos:end="347:26"><name pos:start="347:5" pos:end="347:5">s</name><operator pos:start="347:6" pos:end="347:7">-&gt;</operator><name pos:start="347:8" pos:end="347:23">block_last_index</name><index pos:start="347:24" pos:end="347:26">[<expr pos:start="347:25" pos:end="347:25"><name pos:start="347:25" pos:end="347:25">n</name></expr>]</index></name> <operator pos:start="347:28" pos:end="347:28">=</operator> <name pos:start="347:30" pos:end="347:30">i</name></expr>;</expr_stmt>

    <return pos:start="349:5" pos:end="349:13">return <expr pos:start="349:12" pos:end="349:12"><literal type="number" pos:start="349:12" pos:end="349:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
