<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25129.c" pos:tabs="8"><function pos:start="1:1" pos:end="321:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">usb_mtp_command</name><parameter_list pos:start="1:28" pos:end="1:55">(<parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:36">MTPState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:51">MTPControl</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">c</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="321:1">{<block_content pos:start="5:5" pos:end="319:61">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">MTPData</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:20">data_in</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">MTPObject</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">o</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">nres</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>, <decl pos:start="9:24" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:24" pos:end="9:27">res0</name> <init pos:start="9:29" pos:end="9:31">= <expr pos:start="9:31" pos:end="9:31"><literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:23">/* sanity checks */</comment>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:56">(<expr pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:9">c</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:15">code</name></name> <operator pos:start="15:17" pos:end="15:18">&gt;=</operator> <name pos:start="15:20" pos:end="15:36">CMD_CLOSE_SESSION</name> <operator pos:start="15:38" pos:end="15:39">&amp;&amp;</operator> <name pos:start="15:41" pos:end="15:50"><name pos:start="15:41" pos:end="15:41">s</name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:50">session</name></name> <operator pos:start="15:52" pos:end="15:53">==</operator> <literal type="number" pos:start="15:55" pos:end="15:55">0</literal></expr>)</condition> <block pos:start="15:58" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:15">

        <expr_stmt pos:start="17:9" pos:end="19:48"><expr pos:start="17:9" pos:end="19:47"><call pos:start="17:9" pos:end="19:47"><name pos:start="17:9" pos:end="17:28">usb_mtp_queue_result</name><argument_list pos:start="17:29" pos:end="19:47">(<argument pos:start="17:30" pos:end="17:30"><expr pos:start="17:30" pos:end="17:30"><name pos:start="17:30" pos:end="17:30">s</name></expr></argument>, <argument pos:start="17:33" pos:end="17:52"><expr pos:start="17:33" pos:end="17:52"><name pos:start="17:33" pos:end="17:52">RES_SESSION_NOT_OPEN</name></expr></argument>,

                             <argument pos:start="19:30" pos:end="19:37"><expr pos:start="19:30" pos:end="19:37"><name pos:start="19:30" pos:end="19:37"><name pos:start="19:30" pos:end="19:30">c</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:37">trans</name></name></expr></argument>, <argument pos:start="19:40" pos:end="19:40"><expr pos:start="19:40" pos:end="19:40"><literal type="number" pos:start="19:40" pos:end="19:40">0</literal></expr></argument>, <argument pos:start="19:43" pos:end="19:43"><expr pos:start="19:43" pos:end="19:43"><literal type="number" pos:start="19:43" pos:end="19:43">0</literal></expr></argument>, <argument pos:start="19:46" pos:end="19:46"><expr pos:start="19:46" pos:end="19:46"><literal type="number" pos:start="19:46" pos:end="19:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:26">/* process commands */</comment>

    <switch pos:start="29:5" pos:end="305:5">switch <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:13">c</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:19">code</name></name></expr>)</condition> <block pos:start="29:22" pos:end="305:5">{<block_content pos:start="31:5" pos:end="303:15">

    <case pos:start="31:5" pos:end="31:29">case <expr pos:start="31:10" pos:end="31:28"><name pos:start="31:10" pos:end="31:28">CMD_GET_DEVICE_INFO</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:48"><expr pos:start="33:9" pos:end="33:47"><name pos:start="33:9" pos:end="33:15">data_in</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:47"><name pos:start="33:19" pos:end="33:41">usb_mtp_get_device_info</name><argument_list pos:start="33:42" pos:end="33:47">(<argument pos:start="33:43" pos:end="33:43"><expr pos:start="33:43" pos:end="33:43"><name pos:start="33:43" pos:end="33:43">s</name></expr></argument>, <argument pos:start="33:46" pos:end="33:46"><expr pos:start="33:46" pos:end="33:46"><name pos:start="33:46" pos:end="33:46">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:26">case <expr pos:start="37:10" pos:end="37:25"><name pos:start="37:10" pos:end="37:25">CMD_OPEN_SESSION</name></expr>:</case>

        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="47:9">if <condition pos:start="39:12" pos:end="39:23">(<expr pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:22">session</name></name></expr>)</condition> <block pos:start="39:25" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:19">

            <expr_stmt pos:start="41:13" pos:end="43:61"><expr pos:start="41:13" pos:end="43:60"><call pos:start="41:13" pos:end="43:60"><name pos:start="41:13" pos:end="41:32">usb_mtp_queue_result</name><argument_list pos:start="41:33" pos:end="43:60">(<argument pos:start="41:34" pos:end="41:34"><expr pos:start="41:34" pos:end="41:34"><name pos:start="41:34" pos:end="41:34">s</name></expr></argument>, <argument pos:start="41:37" pos:end="41:60"><expr pos:start="41:37" pos:end="41:60"><name pos:start="41:37" pos:end="41:60">RES_SESSION_ALREADY_OPEN</name></expr></argument>,

                                 <argument pos:start="43:34" pos:end="43:41"><expr pos:start="43:34" pos:end="43:41"><name pos:start="43:34" pos:end="43:41"><name pos:start="43:34" pos:end="43:34">c</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:41">trans</name></name></expr></argument>, <argument pos:start="43:44" pos:end="43:44"><expr pos:start="43:44" pos:end="43:44"><literal type="number" pos:start="43:44" pos:end="43:44">1</literal></expr></argument>, <argument pos:start="43:47" pos:end="43:56"><expr pos:start="43:47" pos:end="43:56"><name pos:start="43:47" pos:end="43:56"><name pos:start="43:47" pos:end="43:47">s</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:56">session</name></name></expr></argument>, <argument pos:start="43:59" pos:end="43:59"><expr pos:start="43:59" pos:end="43:59"><literal type="number" pos:start="43:59" pos:end="43:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:28">(<expr pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:13">c</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:19">argv</name><index pos:start="49:20" pos:end="49:22">[<expr pos:start="49:21" pos:end="49:21"><literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr>]</index></name> <operator pos:start="49:24" pos:end="49:25">==</operator> <literal type="number" pos:start="49:27" pos:end="49:27">0</literal></expr>)</condition> <block pos:start="49:30" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:19">

            <expr_stmt pos:start="51:13" pos:end="53:52"><expr pos:start="51:13" pos:end="53:51"><call pos:start="51:13" pos:end="53:51"><name pos:start="51:13" pos:end="51:32">usb_mtp_queue_result</name><argument_list pos:start="51:33" pos:end="53:51">(<argument pos:start="51:34" pos:end="51:34"><expr pos:start="51:34" pos:end="51:34"><name pos:start="51:34" pos:end="51:34">s</name></expr></argument>, <argument pos:start="51:37" pos:end="51:57"><expr pos:start="51:37" pos:end="51:57"><name pos:start="51:37" pos:end="51:57">RES_INVALID_PARAMETER</name></expr></argument>,

                                 <argument pos:start="53:34" pos:end="53:41"><expr pos:start="53:34" pos:end="53:41"><name pos:start="53:34" pos:end="53:41"><name pos:start="53:34" pos:end="53:34">c</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:41">trans</name></name></expr></argument>, <argument pos:start="53:44" pos:end="53:44"><expr pos:start="53:44" pos:end="53:44"><literal type="number" pos:start="53:44" pos:end="53:44">0</literal></expr></argument>, <argument pos:start="53:47" pos:end="53:47"><expr pos:start="53:47" pos:end="53:47"><literal type="number" pos:start="53:47" pos:end="53:47">0</literal></expr></argument>, <argument pos:start="53:50" pos:end="53:50"><expr pos:start="53:50" pos:end="53:50"><literal type="number" pos:start="53:50" pos:end="53:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:51"><expr pos:start="59:9" pos:end="59:50"><call pos:start="59:9" pos:end="59:50"><name pos:start="59:9" pos:end="59:37">trace_usb_mtp_op_open_session</name><argument_list pos:start="59:38" pos:end="59:50">(<argument pos:start="59:39" pos:end="59:49"><expr pos:start="59:39" pos:end="59:49"><name pos:start="59:39" pos:end="59:49"><name pos:start="59:39" pos:end="59:39">s</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:44">dev</name><operator pos:start="59:45" pos:end="59:45">.</operator><name pos:start="59:46" pos:end="59:49">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:18">session</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:31"><name pos:start="61:22" pos:end="61:22">c</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:28">argv</name><index pos:start="61:29" pos:end="61:31">[<expr pos:start="61:30" pos:end="61:30"><literal type="number" pos:start="61:30" pos:end="61:30">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="66:0"><expr pos:start="63:9" pos:end="63:64"><call pos:start="63:9" pos:end="63:64"><name pos:start="63:9" pos:end="63:28">usb_mtp_object_alloc</name><argument_list pos:start="63:29" pos:end="63:64">(<argument pos:start="63:30" pos:end="63:30"><expr pos:start="63:30" pos:end="63:30"><name pos:start="63:30" pos:end="63:30">s</name></expr></argument>, <argument pos:start="63:33" pos:end="63:48"><expr pos:start="63:33" pos:end="63:48"><name pos:start="63:33" pos:end="63:46"><name pos:start="63:33" pos:end="63:33">s</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:46">next_handle</name></name><operator pos:start="63:47" pos:end="63:48">++</operator></expr></argument>, <argument pos:start="63:51" pos:end="63:54"><expr pos:start="63:51" pos:end="63:54"><name pos:start="63:51" pos:end="63:54">NULL</name></expr></argument>, <argument pos:start="63:57" pos:end="63:63"><expr pos:start="63:57" pos:end="63:63"><name pos:start="63:57" pos:end="63:63"><name pos:start="63:57" pos:end="63:57">s</name><operator pos:start="63:58" pos:end="63:59">-&gt;</operator><name pos:start="63:60" pos:end="63:63">root</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="65:1" pos:end="65:16">#<cpp:directive pos:start="65:2" pos:end="65:6">ifdef</cpp:directive> <name pos:start="65:8" pos:end="65:16">__linux__</name></cpp:ifdef>

        <if_stmt pos:start="67:9" pos:end="74:0"><if pos:start="67:9" pos:end="74:0">if <condition pos:start="67:12" pos:end="67:36">(<expr pos:start="67:13" pos:end="67:35"><call pos:start="67:13" pos:end="67:35"><name pos:start="67:13" pos:end="67:32">usb_mtp_inotify_init</name><argument_list pos:start="67:33" pos:end="67:35">(<argument pos:start="67:34" pos:end="67:34"><expr pos:start="67:34" pos:end="67:34"><name pos:start="67:34" pos:end="67:34">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:38" pos:end="74:0">{<block_content pos:start="69:13" pos:end="69:70">

            <expr_stmt pos:start="69:13" pos:end="69:70"><expr pos:start="69:13" pos:end="69:69"><call pos:start="69:13" pos:end="69:69"><name pos:start="69:13" pos:end="69:19">fprintf</name><argument_list pos:start="69:20" pos:end="69:69">(<argument pos:start="69:21" pos:end="69:26"><expr pos:start="69:21" pos:end="69:26"><name pos:start="69:21" pos:end="69:26">stderr</name></expr></argument>, <argument pos:start="69:29" pos:end="69:68"><expr pos:start="69:29" pos:end="69:68"><literal type="string" pos:start="69:29" pos:end="69:68">"usb-mtp: file monitoring init failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="73:1" pos:end="73:6">#<cpp:directive pos:start="73:2" pos:end="73:6">endif</cpp:directive></cpp:endif>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:27">case <expr pos:start="77:10" pos:end="77:26"><name pos:start="77:10" pos:end="77:26">CMD_CLOSE_SESSION</name></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:52"><expr pos:start="79:9" pos:end="79:51"><call pos:start="79:9" pos:end="79:51"><name pos:start="79:9" pos:end="79:38">trace_usb_mtp_op_close_session</name><argument_list pos:start="79:39" pos:end="79:51">(<argument pos:start="79:40" pos:end="79:50"><expr pos:start="79:40" pos:end="79:50"><name pos:start="79:40" pos:end="79:50"><name pos:start="79:40" pos:end="79:40">s</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:45">dev</name><operator pos:start="79:46" pos:end="79:46">.</operator><name pos:start="79:47" pos:end="79:50">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:23"><expr pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:18">session</name></name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="86:0"><expr pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:22">next_handle</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <literal type="number" pos:start="83:26" pos:end="83:26">0</literal></expr>;</expr_stmt>

<cpp:ifdef pos:start="85:1" pos:end="85:16">#<cpp:directive pos:start="85:2" pos:end="85:6">ifdef</cpp:directive> <name pos:start="85:8" pos:end="85:16">__linux__</name></cpp:ifdef>

        <expr_stmt pos:start="87:9" pos:end="90:0"><expr pos:start="87:9" pos:end="87:34"><call pos:start="87:9" pos:end="87:34"><name pos:start="87:9" pos:end="87:31">usb_mtp_inotify_cleanup</name><argument_list pos:start="87:32" pos:end="87:34">(<argument pos:start="87:33" pos:end="87:33"><expr pos:start="87:33" pos:end="87:33"><name pos:start="87:33" pos:end="87:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="91:9" pos:end="91:58"><expr pos:start="91:9" pos:end="91:57"><call pos:start="91:9" pos:end="91:57"><name pos:start="91:9" pos:end="91:27">usb_mtp_object_free</name><argument_list pos:start="91:28" pos:end="91:57">(<argument pos:start="91:29" pos:end="91:29"><expr pos:start="91:29" pos:end="91:29"><name pos:start="91:29" pos:end="91:29">s</name></expr></argument>, <argument pos:start="91:32" pos:end="91:56"><expr pos:start="91:32" pos:end="91:56"><call pos:start="91:32" pos:end="91:56"><name pos:start="91:32" pos:end="91:43">QTAILQ_FIRST</name><argument_list pos:start="91:44" pos:end="91:56">(<argument pos:start="91:45" pos:end="91:55"><expr pos:start="91:45" pos:end="91:55"><operator pos:start="91:45" pos:end="91:45">&amp;</operator><name pos:start="91:46" pos:end="91:55"><name pos:start="91:46" pos:end="91:46">s</name><operator pos:start="91:47" pos:end="91:48">-&gt;</operator><name pos:start="91:49" pos:end="91:55">objects</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:42"><expr pos:start="93:9" pos:end="93:41"><call pos:start="93:9" pos:end="93:41"><name pos:start="93:9" pos:end="93:14">assert</name><argument_list pos:start="93:15" pos:end="93:41">(<argument pos:start="93:16" pos:end="93:40"><expr pos:start="93:16" pos:end="93:40"><call pos:start="93:16" pos:end="93:40"><name pos:start="93:16" pos:end="93:27">QTAILQ_EMPTY</name><argument_list pos:start="93:28" pos:end="93:40">(<argument pos:start="93:29" pos:end="93:39"><expr pos:start="93:29" pos:end="93:39"><operator pos:start="93:29" pos:end="93:29">&amp;</operator><name pos:start="93:30" pos:end="93:39"><name pos:start="93:30" pos:end="93:30">s</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:39">objects</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:29">case <expr pos:start="97:10" pos:end="97:28"><name pos:start="97:10" pos:end="97:28">CMD_GET_STORAGE_IDS</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:48"><expr pos:start="99:9" pos:end="99:47"><name pos:start="99:9" pos:end="99:15">data_in</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <call pos:start="99:19" pos:end="99:47"><name pos:start="99:19" pos:end="99:41">usb_mtp_get_storage_ids</name><argument_list pos:start="99:42" pos:end="99:47">(<argument pos:start="99:43" pos:end="99:43"><expr pos:start="99:43" pos:end="99:43"><name pos:start="99:43" pos:end="99:43">s</name></expr></argument>, <argument pos:start="99:46" pos:end="99:46"><expr pos:start="99:46" pos:end="99:46"><name pos:start="99:46" pos:end="99:46">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:30">case <expr pos:start="103:10" pos:end="103:29"><name pos:start="103:10" pos:end="103:29">CMD_GET_STORAGE_INFO</name></expr>:</case>

        <if_stmt pos:start="105:9" pos:end="115:9"><if pos:start="105:9" pos:end="115:9">if <condition pos:start="105:12" pos:end="107:37">(<expr pos:start="105:13" pos:end="107:36"><name pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:13">c</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:19">argv</name><index pos:start="105:20" pos:end="105:22">[<expr pos:start="105:21" pos:end="105:21"><literal type="number" pos:start="105:21" pos:end="105:21">0</literal></expr>]</index></name> <operator pos:start="105:24" pos:end="105:25">!=</operator> <name pos:start="105:27" pos:end="105:41">QEMU_STORAGE_ID</name> <operator pos:start="105:43" pos:end="105:44">&amp;&amp;</operator>

            <name pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:13">c</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:19">argv</name><index pos:start="107:20" pos:end="107:22">[<expr pos:start="107:21" pos:end="107:21"><literal type="number" pos:start="107:21" pos:end="107:21">0</literal></expr>]</index></name> <operator pos:start="107:24" pos:end="107:25">!=</operator> <literal type="number" pos:start="107:27" pos:end="107:36">0xffffffff</literal></expr>)</condition> <block pos:start="107:39" pos:end="115:9">{<block_content pos:start="109:13" pos:end="113:19">

            <expr_stmt pos:start="109:13" pos:end="111:52"><expr pos:start="109:13" pos:end="111:51"><call pos:start="109:13" pos:end="111:51"><name pos:start="109:13" pos:end="109:32">usb_mtp_queue_result</name><argument_list pos:start="109:33" pos:end="111:51">(<argument pos:start="109:34" pos:end="109:34"><expr pos:start="109:34" pos:end="109:34"><name pos:start="109:34" pos:end="109:34">s</name></expr></argument>, <argument pos:start="109:37" pos:end="109:58"><expr pos:start="109:37" pos:end="109:58"><name pos:start="109:37" pos:end="109:58">RES_INVALID_STORAGE_ID</name></expr></argument>,

                                 <argument pos:start="111:34" pos:end="111:41"><expr pos:start="111:34" pos:end="111:41"><name pos:start="111:34" pos:end="111:41"><name pos:start="111:34" pos:end="111:34">c</name><operator pos:start="111:35" pos:end="111:36">-&gt;</operator><name pos:start="111:37" pos:end="111:41">trans</name></name></expr></argument>, <argument pos:start="111:44" pos:end="111:44"><expr pos:start="111:44" pos:end="111:44"><literal type="number" pos:start="111:44" pos:end="111:44">0</literal></expr></argument>, <argument pos:start="111:47" pos:end="111:47"><expr pos:start="111:47" pos:end="111:47"><literal type="number" pos:start="111:47" pos:end="111:47">0</literal></expr></argument>, <argument pos:start="111:50" pos:end="111:50"><expr pos:start="111:50" pos:end="111:50"><literal type="number" pos:start="111:50" pos:end="111:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="113:13" pos:end="113:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:49"><expr pos:start="117:9" pos:end="117:48"><name pos:start="117:9" pos:end="117:15">data_in</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <call pos:start="117:19" pos:end="117:48"><name pos:start="117:19" pos:end="117:42">usb_mtp_get_storage_info</name><argument_list pos:start="117:43" pos:end="117:48">(<argument pos:start="117:44" pos:end="117:44"><expr pos:start="117:44" pos:end="117:44"><name pos:start="117:44" pos:end="117:44">s</name></expr></argument>, <argument pos:start="117:47" pos:end="117:47"><expr pos:start="117:47" pos:end="117:47"><name pos:start="117:47" pos:end="117:47">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="119:9" pos:end="119:14">break;</break>

    <case pos:start="121:5" pos:end="121:29">case <expr pos:start="121:10" pos:end="121:28"><name pos:start="121:10" pos:end="121:28">CMD_GET_NUM_OBJECTS</name></expr>:</case>

    <case pos:start="123:5" pos:end="123:32">case <expr pos:start="123:10" pos:end="123:31"><name pos:start="123:10" pos:end="123:31">CMD_GET_OBJECT_HANDLES</name></expr>:</case>

        <if_stmt pos:start="125:9" pos:end="135:9"><if pos:start="125:9" pos:end="135:9">if <condition pos:start="125:12" pos:end="127:37">(<expr pos:start="125:13" pos:end="127:36"><name pos:start="125:13" pos:end="125:22"><name pos:start="125:13" pos:end="125:13">c</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:19">argv</name><index pos:start="125:20" pos:end="125:22">[<expr pos:start="125:21" pos:end="125:21"><literal type="number" pos:start="125:21" pos:end="125:21">0</literal></expr>]</index></name> <operator pos:start="125:24" pos:end="125:25">!=</operator> <name pos:start="125:27" pos:end="125:41">QEMU_STORAGE_ID</name> <operator pos:start="125:43" pos:end="125:44">&amp;&amp;</operator>

            <name pos:start="127:13" pos:end="127:22"><name pos:start="127:13" pos:end="127:13">c</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:19">argv</name><index pos:start="127:20" pos:end="127:22">[<expr pos:start="127:21" pos:end="127:21"><literal type="number" pos:start="127:21" pos:end="127:21">0</literal></expr>]</index></name> <operator pos:start="127:24" pos:end="127:25">!=</operator> <literal type="number" pos:start="127:27" pos:end="127:36">0xffffffff</literal></expr>)</condition> <block pos:start="127:39" pos:end="135:9">{<block_content pos:start="129:13" pos:end="133:19">

            <expr_stmt pos:start="129:13" pos:end="131:52"><expr pos:start="129:13" pos:end="131:51"><call pos:start="129:13" pos:end="131:51"><name pos:start="129:13" pos:end="129:32">usb_mtp_queue_result</name><argument_list pos:start="129:33" pos:end="131:51">(<argument pos:start="129:34" pos:end="129:34"><expr pos:start="129:34" pos:end="129:34"><name pos:start="129:34" pos:end="129:34">s</name></expr></argument>, <argument pos:start="129:37" pos:end="129:58"><expr pos:start="129:37" pos:end="129:58"><name pos:start="129:37" pos:end="129:58">RES_INVALID_STORAGE_ID</name></expr></argument>,

                                 <argument pos:start="131:34" pos:end="131:41"><expr pos:start="131:34" pos:end="131:41"><name pos:start="131:34" pos:end="131:41"><name pos:start="131:34" pos:end="131:34">c</name><operator pos:start="131:35" pos:end="131:36">-&gt;</operator><name pos:start="131:37" pos:end="131:41">trans</name></name></expr></argument>, <argument pos:start="131:44" pos:end="131:44"><expr pos:start="131:44" pos:end="131:44"><literal type="number" pos:start="131:44" pos:end="131:44">0</literal></expr></argument>, <argument pos:start="131:47" pos:end="131:47"><expr pos:start="131:47" pos:end="131:47"><literal type="number" pos:start="131:47" pos:end="131:47">0</literal></expr></argument>, <argument pos:start="131:50" pos:end="131:50"><expr pos:start="131:50" pos:end="131:50"><literal type="number" pos:start="131:50" pos:end="131:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="133:13" pos:end="133:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="137:9" pos:end="145:9"><if pos:start="137:9" pos:end="145:9">if <condition pos:start="137:12" pos:end="137:37">(<expr pos:start="137:13" pos:end="137:36"><name pos:start="137:13" pos:end="137:22"><name pos:start="137:13" pos:end="137:13">c</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:19">argv</name><index pos:start="137:20" pos:end="137:22">[<expr pos:start="137:21" pos:end="137:21"><literal type="number" pos:start="137:21" pos:end="137:21">1</literal></expr>]</index></name> <operator pos:start="137:24" pos:end="137:25">!=</operator> <literal type="number" pos:start="137:27" pos:end="137:36">0x00000000</literal></expr>)</condition> <block pos:start="137:39" pos:end="145:9">{<block_content pos:start="139:13" pos:end="143:19">

            <expr_stmt pos:start="139:13" pos:end="141:52"><expr pos:start="139:13" pos:end="141:51"><call pos:start="139:13" pos:end="141:51"><name pos:start="139:13" pos:end="139:32">usb_mtp_queue_result</name><argument_list pos:start="139:33" pos:end="141:51">(<argument pos:start="139:34" pos:end="139:34"><expr pos:start="139:34" pos:end="139:34"><name pos:start="139:34" pos:end="139:34">s</name></expr></argument>, <argument pos:start="139:37" pos:end="139:66"><expr pos:start="139:37" pos:end="139:66"><name pos:start="139:37" pos:end="139:66">RES_SPEC_BY_FORMAT_UNSUPPORTED</name></expr></argument>,

                                 <argument pos:start="141:34" pos:end="141:41"><expr pos:start="141:34" pos:end="141:41"><name pos:start="141:34" pos:end="141:41"><name pos:start="141:34" pos:end="141:34">c</name><operator pos:start="141:35" pos:end="141:36">-&gt;</operator><name pos:start="141:37" pos:end="141:41">trans</name></name></expr></argument>, <argument pos:start="141:44" pos:end="141:44"><expr pos:start="141:44" pos:end="141:44"><literal type="number" pos:start="141:44" pos:end="141:44">0</literal></expr></argument>, <argument pos:start="141:47" pos:end="141:47"><expr pos:start="141:47" pos:end="141:47"><literal type="number" pos:start="141:47" pos:end="141:47">0</literal></expr></argument>, <argument pos:start="141:50" pos:end="141:50"><expr pos:start="141:50" pos:end="141:50"><literal type="number" pos:start="141:50" pos:end="141:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="143:13" pos:end="143:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="147:9" pos:end="157:9"><if pos:start="147:9" pos:end="153:9">if <condition pos:start="147:12" pos:end="149:37">(<expr pos:start="147:13" pos:end="149:36"><name pos:start="147:13" pos:end="147:22"><name pos:start="147:13" pos:end="147:13">c</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:19">argv</name><index pos:start="147:20" pos:end="147:22">[<expr pos:start="147:21" pos:end="147:21"><literal type="number" pos:start="147:21" pos:end="147:21">2</literal></expr>]</index></name> <operator pos:start="147:24" pos:end="147:25">==</operator> <literal type="number" pos:start="147:27" pos:end="147:36">0x00000000</literal> <operator pos:start="147:38" pos:end="147:39">||</operator>

            <name pos:start="149:13" pos:end="149:22"><name pos:start="149:13" pos:end="149:13">c</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:19">argv</name><index pos:start="149:20" pos:end="149:22">[<expr pos:start="149:21" pos:end="149:21"><literal type="number" pos:start="149:21" pos:end="149:21">2</literal></expr>]</index></name> <operator pos:start="149:24" pos:end="149:25">==</operator> <literal type="number" pos:start="149:27" pos:end="149:36">0xffffffff</literal></expr>)</condition> <block pos:start="149:39" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:42">

            <expr_stmt pos:start="151:13" pos:end="151:42"><expr pos:start="151:13" pos:end="151:41"><name pos:start="151:13" pos:end="151:13">o</name> <operator pos:start="151:15" pos:end="151:15">=</operator> <call pos:start="151:17" pos:end="151:41"><name pos:start="151:17" pos:end="151:28">QTAILQ_FIRST</name><argument_list pos:start="151:29" pos:end="151:41">(<argument pos:start="151:30" pos:end="151:40"><expr pos:start="151:30" pos:end="151:40"><operator pos:start="151:30" pos:end="151:30">&amp;</operator><name pos:start="151:31" pos:end="151:40"><name pos:start="151:31" pos:end="151:31">s</name><operator pos:start="151:32" pos:end="151:33">-&gt;</operator><name pos:start="151:34" pos:end="151:40">objects</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="153:11" pos:end="157:9">else <block pos:start="153:16" pos:end="157:9">{<block_content pos:start="155:13" pos:end="155:53">

            <expr_stmt pos:start="155:13" pos:end="155:53"><expr pos:start="155:13" pos:end="155:52"><name pos:start="155:13" pos:end="155:13">o</name> <operator pos:start="155:15" pos:end="155:15">=</operator> <call pos:start="155:17" pos:end="155:52"><name pos:start="155:17" pos:end="155:37">usb_mtp_object_lookup</name><argument_list pos:start="155:38" pos:end="155:52">(<argument pos:start="155:39" pos:end="155:39"><expr pos:start="155:39" pos:end="155:39"><name pos:start="155:39" pos:end="155:39">s</name></expr></argument>, <argument pos:start="155:42" pos:end="155:51"><expr pos:start="155:42" pos:end="155:51"><name pos:start="155:42" pos:end="155:51"><name pos:start="155:42" pos:end="155:42">c</name><operator pos:start="155:43" pos:end="155:44">-&gt;</operator><name pos:start="155:45" pos:end="155:48">argv</name><index pos:start="155:49" pos:end="155:51">[<expr pos:start="155:50" pos:end="155:50"><literal type="number" pos:start="155:50" pos:end="155:50">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="159:9" pos:end="167:9"><if pos:start="159:9" pos:end="167:9">if <condition pos:start="159:12" pos:end="159:22">(<expr pos:start="159:13" pos:end="159:21"><name pos:start="159:13" pos:end="159:13">o</name> <operator pos:start="159:15" pos:end="159:16">==</operator> <name pos:start="159:18" pos:end="159:21">NULL</name></expr>)</condition> <block pos:start="159:24" pos:end="167:9">{<block_content pos:start="161:13" pos:end="165:19">

            <expr_stmt pos:start="161:13" pos:end="163:52"><expr pos:start="161:13" pos:end="163:51"><call pos:start="161:13" pos:end="163:51"><name pos:start="161:13" pos:end="161:32">usb_mtp_queue_result</name><argument_list pos:start="161:33" pos:end="163:51">(<argument pos:start="161:34" pos:end="161:34"><expr pos:start="161:34" pos:end="161:34"><name pos:start="161:34" pos:end="161:34">s</name></expr></argument>, <argument pos:start="161:37" pos:end="161:61"><expr pos:start="161:37" pos:end="161:61"><name pos:start="161:37" pos:end="161:61">RES_INVALID_OBJECT_HANDLE</name></expr></argument>,

                                 <argument pos:start="163:34" pos:end="163:41"><expr pos:start="163:34" pos:end="163:41"><name pos:start="163:34" pos:end="163:41"><name pos:start="163:34" pos:end="163:34">c</name><operator pos:start="163:35" pos:end="163:36">-&gt;</operator><name pos:start="163:37" pos:end="163:41">trans</name></name></expr></argument>, <argument pos:start="163:44" pos:end="163:44"><expr pos:start="163:44" pos:end="163:44"><literal type="number" pos:start="163:44" pos:end="163:44">0</literal></expr></argument>, <argument pos:start="163:47" pos:end="163:47"><expr pos:start="163:47" pos:end="163:47"><literal type="number" pos:start="163:47" pos:end="163:47">0</literal></expr></argument>, <argument pos:start="163:50" pos:end="163:50"><expr pos:start="163:50" pos:end="163:50"><literal type="number" pos:start="163:50" pos:end="163:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="165:13" pos:end="165:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="169:9" pos:end="177:9"><if pos:start="169:9" pos:end="177:9">if <condition pos:start="169:12" pos:end="169:41">(<expr pos:start="169:13" pos:end="169:40"><name pos:start="169:13" pos:end="169:21"><name pos:start="169:13" pos:end="169:13">o</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:21">format</name></name> <operator pos:start="169:23" pos:end="169:24">!=</operator> <name pos:start="169:26" pos:end="169:40">FMT_ASSOCIATION</name></expr>)</condition> <block pos:start="169:43" pos:end="177:9">{<block_content pos:start="171:13" pos:end="175:19">

            <expr_stmt pos:start="171:13" pos:end="173:52"><expr pos:start="171:13" pos:end="173:51"><call pos:start="171:13" pos:end="173:51"><name pos:start="171:13" pos:end="171:32">usb_mtp_queue_result</name><argument_list pos:start="171:33" pos:end="173:51">(<argument pos:start="171:34" pos:end="171:34"><expr pos:start="171:34" pos:end="171:34"><name pos:start="171:34" pos:end="171:34">s</name></expr></argument>, <argument pos:start="171:37" pos:end="171:61"><expr pos:start="171:37" pos:end="171:61"><name pos:start="171:37" pos:end="171:61">RES_INVALID_PARENT_OBJECT</name></expr></argument>,

                                 <argument pos:start="173:34" pos:end="173:41"><expr pos:start="173:34" pos:end="173:41"><name pos:start="173:34" pos:end="173:41"><name pos:start="173:34" pos:end="173:34">c</name><operator pos:start="173:35" pos:end="173:36">-&gt;</operator><name pos:start="173:37" pos:end="173:41">trans</name></name></expr></argument>, <argument pos:start="173:44" pos:end="173:44"><expr pos:start="173:44" pos:end="173:44"><literal type="number" pos:start="173:44" pos:end="173:44">0</literal></expr></argument>, <argument pos:start="173:47" pos:end="173:47"><expr pos:start="173:47" pos:end="173:47"><literal type="number" pos:start="173:47" pos:end="173:47">0</literal></expr></argument>, <argument pos:start="173:50" pos:end="173:50"><expr pos:start="173:50" pos:end="173:50"><literal type="number" pos:start="173:50" pos:end="173:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="175:13" pos:end="175:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:37"><expr pos:start="179:9" pos:end="179:36"><call pos:start="179:9" pos:end="179:36"><name pos:start="179:9" pos:end="179:30">usb_mtp_object_readdir</name><argument_list pos:start="179:31" pos:end="179:36">(<argument pos:start="179:32" pos:end="179:32"><expr pos:start="179:32" pos:end="179:32"><name pos:start="179:32" pos:end="179:32">s</name></expr></argument>, <argument pos:start="179:35" pos:end="179:35"><expr pos:start="179:35" pos:end="179:35"><name pos:start="179:35" pos:end="179:35">o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="181:9" pos:end="193:9"><if pos:start="181:9" pos:end="189:9">if <condition pos:start="181:12" pos:end="181:43">(<expr pos:start="181:13" pos:end="181:42"><name pos:start="181:13" pos:end="181:19"><name pos:start="181:13" pos:end="181:13">c</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:19">code</name></name> <operator pos:start="181:21" pos:end="181:22">==</operator> <name pos:start="181:24" pos:end="181:42">CMD_GET_NUM_OBJECTS</name></expr>)</condition> <block pos:start="181:45" pos:end="189:9">{<block_content pos:start="183:13" pos:end="187:32">

            <expr_stmt pos:start="183:13" pos:end="183:78"><expr pos:start="183:13" pos:end="183:77"><call pos:start="183:13" pos:end="183:77"><name pos:start="183:13" pos:end="183:44">trace_usb_mtp_op_get_num_objects</name><argument_list pos:start="183:45" pos:end="183:77">(<argument pos:start="183:46" pos:end="183:56"><expr pos:start="183:46" pos:end="183:56"><name pos:start="183:46" pos:end="183:56"><name pos:start="183:46" pos:end="183:46">s</name><operator pos:start="183:47" pos:end="183:48">-&gt;</operator><name pos:start="183:49" pos:end="183:51">dev</name><operator pos:start="183:52" pos:end="183:52">.</operator><name pos:start="183:53" pos:end="183:56">addr</name></name></expr></argument>, <argument pos:start="183:59" pos:end="183:67"><expr pos:start="183:59" pos:end="183:67"><name pos:start="183:59" pos:end="183:67"><name pos:start="183:59" pos:end="183:59">o</name><operator pos:start="183:60" pos:end="183:61">-&gt;</operator><name pos:start="183:62" pos:end="183:67">handle</name></name></expr></argument>, <argument pos:start="183:70" pos:end="183:76"><expr pos:start="183:70" pos:end="183:76"><name pos:start="183:70" pos:end="183:76"><name pos:start="183:70" pos:end="183:70">o</name><operator pos:start="183:71" pos:end="183:72">-&gt;</operator><name pos:start="183:73" pos:end="183:76">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:21"><expr pos:start="185:13" pos:end="185:20"><name pos:start="185:13" pos:end="185:16">nres</name> <operator pos:start="185:18" pos:end="185:18">=</operator> <literal type="number" pos:start="185:20" pos:end="185:20">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:32"><expr pos:start="187:13" pos:end="187:31"><name pos:start="187:13" pos:end="187:16">res0</name> <operator pos:start="187:18" pos:end="187:18">=</operator> <name pos:start="187:20" pos:end="187:31"><name pos:start="187:20" pos:end="187:20">o</name><operator pos:start="187:21" pos:end="187:22">-&gt;</operator><name pos:start="187:23" pos:end="187:31">nchildren</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="189:11" pos:end="193:9">else <block pos:start="189:16" pos:end="193:9">{<block_content pos:start="191:13" pos:end="191:58">

            <expr_stmt pos:start="191:13" pos:end="191:58"><expr pos:start="191:13" pos:end="191:57"><name pos:start="191:13" pos:end="191:19">data_in</name> <operator pos:start="191:21" pos:end="191:21">=</operator> <call pos:start="191:23" pos:end="191:57"><name pos:start="191:23" pos:end="191:48">usb_mtp_get_object_handles</name><argument_list pos:start="191:49" pos:end="191:57">(<argument pos:start="191:50" pos:end="191:50"><expr pos:start="191:50" pos:end="191:50"><name pos:start="191:50" pos:end="191:50">s</name></expr></argument>, <argument pos:start="191:53" pos:end="191:53"><expr pos:start="191:53" pos:end="191:53"><name pos:start="191:53" pos:end="191:53">c</name></expr></argument>, <argument pos:start="191:56" pos:end="191:56"><expr pos:start="191:56" pos:end="191:56"><name pos:start="191:56" pos:end="191:56">o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="195:9" pos:end="195:14">break;</break>

    <case pos:start="197:5" pos:end="197:29">case <expr pos:start="197:10" pos:end="197:28"><name pos:start="197:10" pos:end="197:28">CMD_GET_OBJECT_INFO</name></expr>:</case>

        <expr_stmt pos:start="199:9" pos:end="199:49"><expr pos:start="199:9" pos:end="199:48"><name pos:start="199:9" pos:end="199:9">o</name> <operator pos:start="199:11" pos:end="199:11">=</operator> <call pos:start="199:13" pos:end="199:48"><name pos:start="199:13" pos:end="199:33">usb_mtp_object_lookup</name><argument_list pos:start="199:34" pos:end="199:48">(<argument pos:start="199:35" pos:end="199:35"><expr pos:start="199:35" pos:end="199:35"><name pos:start="199:35" pos:end="199:35">s</name></expr></argument>, <argument pos:start="199:38" pos:end="199:47"><expr pos:start="199:38" pos:end="199:47"><name pos:start="199:38" pos:end="199:47"><name pos:start="199:38" pos:end="199:38">c</name><operator pos:start="199:39" pos:end="199:40">-&gt;</operator><name pos:start="199:41" pos:end="199:44">argv</name><index pos:start="199:45" pos:end="199:47">[<expr pos:start="199:46" pos:end="199:46"><literal type="number" pos:start="199:46" pos:end="199:46">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="201:9" pos:end="209:9"><if pos:start="201:9" pos:end="209:9">if <condition pos:start="201:12" pos:end="201:22">(<expr pos:start="201:13" pos:end="201:21"><name pos:start="201:13" pos:end="201:13">o</name> <operator pos:start="201:15" pos:end="201:16">==</operator> <name pos:start="201:18" pos:end="201:21">NULL</name></expr>)</condition> <block pos:start="201:24" pos:end="209:9">{<block_content pos:start="203:13" pos:end="207:19">

            <expr_stmt pos:start="203:13" pos:end="205:52"><expr pos:start="203:13" pos:end="205:51"><call pos:start="203:13" pos:end="205:51"><name pos:start="203:13" pos:end="203:32">usb_mtp_queue_result</name><argument_list pos:start="203:33" pos:end="205:51">(<argument pos:start="203:34" pos:end="203:34"><expr pos:start="203:34" pos:end="203:34"><name pos:start="203:34" pos:end="203:34">s</name></expr></argument>, <argument pos:start="203:37" pos:end="203:61"><expr pos:start="203:37" pos:end="203:61"><name pos:start="203:37" pos:end="203:61">RES_INVALID_OBJECT_HANDLE</name></expr></argument>,

                                 <argument pos:start="205:34" pos:end="205:41"><expr pos:start="205:34" pos:end="205:41"><name pos:start="205:34" pos:end="205:41"><name pos:start="205:34" pos:end="205:34">c</name><operator pos:start="205:35" pos:end="205:36">-&gt;</operator><name pos:start="205:37" pos:end="205:41">trans</name></name></expr></argument>, <argument pos:start="205:44" pos:end="205:44"><expr pos:start="205:44" pos:end="205:44"><literal type="number" pos:start="205:44" pos:end="205:44">0</literal></expr></argument>, <argument pos:start="205:47" pos:end="205:47"><expr pos:start="205:47" pos:end="205:47"><literal type="number" pos:start="205:47" pos:end="205:47">0</literal></expr></argument>, <argument pos:start="205:50" pos:end="205:50"><expr pos:start="205:50" pos:end="205:50"><literal type="number" pos:start="205:50" pos:end="205:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="207:13" pos:end="207:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:51"><expr pos:start="211:9" pos:end="211:50"><name pos:start="211:9" pos:end="211:15">data_in</name> <operator pos:start="211:17" pos:end="211:17">=</operator> <call pos:start="211:19" pos:end="211:50"><name pos:start="211:19" pos:end="211:41">usb_mtp_get_object_info</name><argument_list pos:start="211:42" pos:end="211:50">(<argument pos:start="211:43" pos:end="211:43"><expr pos:start="211:43" pos:end="211:43"><name pos:start="211:43" pos:end="211:43">s</name></expr></argument>, <argument pos:start="211:46" pos:end="211:46"><expr pos:start="211:46" pos:end="211:46"><name pos:start="211:46" pos:end="211:46">c</name></expr></argument>, <argument pos:start="211:49" pos:end="211:49"><expr pos:start="211:49" pos:end="211:49"><name pos:start="211:49" pos:end="211:49">o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="213:9" pos:end="213:14">break;</break>

    <case pos:start="215:5" pos:end="215:24">case <expr pos:start="215:10" pos:end="215:23"><name pos:start="215:10" pos:end="215:23">CMD_GET_OBJECT</name></expr>:</case>

        <expr_stmt pos:start="217:9" pos:end="217:49"><expr pos:start="217:9" pos:end="217:48"><name pos:start="217:9" pos:end="217:9">o</name> <operator pos:start="217:11" pos:end="217:11">=</operator> <call pos:start="217:13" pos:end="217:48"><name pos:start="217:13" pos:end="217:33">usb_mtp_object_lookup</name><argument_list pos:start="217:34" pos:end="217:48">(<argument pos:start="217:35" pos:end="217:35"><expr pos:start="217:35" pos:end="217:35"><name pos:start="217:35" pos:end="217:35">s</name></expr></argument>, <argument pos:start="217:38" pos:end="217:47"><expr pos:start="217:38" pos:end="217:47"><name pos:start="217:38" pos:end="217:47"><name pos:start="217:38" pos:end="217:38">c</name><operator pos:start="217:39" pos:end="217:40">-&gt;</operator><name pos:start="217:41" pos:end="217:44">argv</name><index pos:start="217:45" pos:end="217:47">[<expr pos:start="217:46" pos:end="217:46"><literal type="number" pos:start="217:46" pos:end="217:46">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="219:9" pos:end="227:9"><if pos:start="219:9" pos:end="227:9">if <condition pos:start="219:12" pos:end="219:22">(<expr pos:start="219:13" pos:end="219:21"><name pos:start="219:13" pos:end="219:13">o</name> <operator pos:start="219:15" pos:end="219:16">==</operator> <name pos:start="219:18" pos:end="219:21">NULL</name></expr>)</condition> <block pos:start="219:24" pos:end="227:9">{<block_content pos:start="221:13" pos:end="225:19">

            <expr_stmt pos:start="221:13" pos:end="223:52"><expr pos:start="221:13" pos:end="223:51"><call pos:start="221:13" pos:end="223:51"><name pos:start="221:13" pos:end="221:32">usb_mtp_queue_result</name><argument_list pos:start="221:33" pos:end="223:51">(<argument pos:start="221:34" pos:end="221:34"><expr pos:start="221:34" pos:end="221:34"><name pos:start="221:34" pos:end="221:34">s</name></expr></argument>, <argument pos:start="221:37" pos:end="221:61"><expr pos:start="221:37" pos:end="221:61"><name pos:start="221:37" pos:end="221:61">RES_INVALID_OBJECT_HANDLE</name></expr></argument>,

                                 <argument pos:start="223:34" pos:end="223:41"><expr pos:start="223:34" pos:end="223:41"><name pos:start="223:34" pos:end="223:41"><name pos:start="223:34" pos:end="223:34">c</name><operator pos:start="223:35" pos:end="223:36">-&gt;</operator><name pos:start="223:37" pos:end="223:41">trans</name></name></expr></argument>, <argument pos:start="223:44" pos:end="223:44"><expr pos:start="223:44" pos:end="223:44"><literal type="number" pos:start="223:44" pos:end="223:44">0</literal></expr></argument>, <argument pos:start="223:47" pos:end="223:47"><expr pos:start="223:47" pos:end="223:47"><literal type="number" pos:start="223:47" pos:end="223:47">0</literal></expr></argument>, <argument pos:start="223:50" pos:end="223:50"><expr pos:start="223:50" pos:end="223:50"><literal type="number" pos:start="223:50" pos:end="223:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="225:13" pos:end="225:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="229:9" pos:end="237:9"><if pos:start="229:9" pos:end="237:9">if <condition pos:start="229:12" pos:end="229:41">(<expr pos:start="229:13" pos:end="229:40"><name pos:start="229:13" pos:end="229:21"><name pos:start="229:13" pos:end="229:13">o</name><operator pos:start="229:14" pos:end="229:15">-&gt;</operator><name pos:start="229:16" pos:end="229:21">format</name></name> <operator pos:start="229:23" pos:end="229:24">==</operator> <name pos:start="229:26" pos:end="229:40">FMT_ASSOCIATION</name></expr>)</condition> <block pos:start="229:43" pos:end="237:9">{<block_content pos:start="231:13" pos:end="235:19">

            <expr_stmt pos:start="231:13" pos:end="233:52"><expr pos:start="231:13" pos:end="233:51"><call pos:start="231:13" pos:end="233:51"><name pos:start="231:13" pos:end="231:32">usb_mtp_queue_result</name><argument_list pos:start="231:33" pos:end="233:51">(<argument pos:start="231:34" pos:end="231:34"><expr pos:start="231:34" pos:end="231:34"><name pos:start="231:34" pos:end="231:34">s</name></expr></argument>, <argument pos:start="231:37" pos:end="231:61"><expr pos:start="231:37" pos:end="231:61"><name pos:start="231:37" pos:end="231:61">RES_INVALID_OBJECT_HANDLE</name></expr></argument>,

                                 <argument pos:start="233:34" pos:end="233:41"><expr pos:start="233:34" pos:end="233:41"><name pos:start="233:34" pos:end="233:41"><name pos:start="233:34" pos:end="233:34">c</name><operator pos:start="233:35" pos:end="233:36">-&gt;</operator><name pos:start="233:37" pos:end="233:41">trans</name></name></expr></argument>, <argument pos:start="233:44" pos:end="233:44"><expr pos:start="233:44" pos:end="233:44"><literal type="number" pos:start="233:44" pos:end="233:44">0</literal></expr></argument>, <argument pos:start="233:47" pos:end="233:47"><expr pos:start="233:47" pos:end="233:47"><literal type="number" pos:start="233:47" pos:end="233:47">0</literal></expr></argument>, <argument pos:start="233:50" pos:end="233:50"><expr pos:start="233:50" pos:end="233:50"><literal type="number" pos:start="233:50" pos:end="233:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="235:13" pos:end="235:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:46"><expr pos:start="239:9" pos:end="239:45"><name pos:start="239:9" pos:end="239:15">data_in</name> <operator pos:start="239:17" pos:end="239:17">=</operator> <call pos:start="239:19" pos:end="239:45"><name pos:start="239:19" pos:end="239:36">usb_mtp_get_object</name><argument_list pos:start="239:37" pos:end="239:45">(<argument pos:start="239:38" pos:end="239:38"><expr pos:start="239:38" pos:end="239:38"><name pos:start="239:38" pos:end="239:38">s</name></expr></argument>, <argument pos:start="239:41" pos:end="239:41"><expr pos:start="239:41" pos:end="239:41"><name pos:start="239:41" pos:end="239:41">c</name></expr></argument>, <argument pos:start="239:44" pos:end="239:44"><expr pos:start="239:44" pos:end="239:44"><name pos:start="239:44" pos:end="239:44">o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="241:9" pos:end="249:9"><if pos:start="241:9" pos:end="249:9">if <condition pos:start="241:12" pos:end="241:28">(<expr pos:start="241:13" pos:end="241:27"><name pos:start="241:13" pos:end="241:19">data_in</name> <operator pos:start="241:21" pos:end="241:22">==</operator> <name pos:start="241:24" pos:end="241:27">NULL</name></expr>)</condition> <block pos:start="241:30" pos:end="249:9">{<block_content pos:start="243:13" pos:end="247:19">

            <expr_stmt pos:start="243:13" pos:end="245:52"><expr pos:start="243:13" pos:end="245:51"><call pos:start="243:13" pos:end="245:51"><name pos:start="243:13" pos:end="243:32">usb_mtp_queue_result</name><argument_list pos:start="243:33" pos:end="245:51">(<argument pos:start="243:34" pos:end="243:34"><expr pos:start="243:34" pos:end="243:34"><name pos:start="243:34" pos:end="243:34">s</name></expr></argument>, <argument pos:start="243:37" pos:end="243:53"><expr pos:start="243:37" pos:end="243:53"><name pos:start="243:37" pos:end="243:53">RES_GENERAL_ERROR</name></expr></argument>,

                                 <argument pos:start="245:34" pos:end="245:41"><expr pos:start="245:34" pos:end="245:41"><name pos:start="245:34" pos:end="245:41"><name pos:start="245:34" pos:end="245:34">c</name><operator pos:start="245:35" pos:end="245:36">-&gt;</operator><name pos:start="245:37" pos:end="245:41">trans</name></name></expr></argument>, <argument pos:start="245:44" pos:end="245:44"><expr pos:start="245:44" pos:end="245:44"><literal type="number" pos:start="245:44" pos:end="245:44">0</literal></expr></argument>, <argument pos:start="245:47" pos:end="245:47"><expr pos:start="245:47" pos:end="245:47"><literal type="number" pos:start="245:47" pos:end="245:47">0</literal></expr></argument>, <argument pos:start="245:50" pos:end="245:50"><expr pos:start="245:50" pos:end="245:50"><literal type="number" pos:start="245:50" pos:end="245:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="247:13" pos:end="247:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="251:9" pos:end="251:14">break;</break>

    <case pos:start="253:5" pos:end="253:32">case <expr pos:start="253:10" pos:end="253:31"><name pos:start="253:10" pos:end="253:31">CMD_GET_PARTIAL_OBJECT</name></expr>:</case>

        <expr_stmt pos:start="255:9" pos:end="255:49"><expr pos:start="255:9" pos:end="255:48"><name pos:start="255:9" pos:end="255:9">o</name> <operator pos:start="255:11" pos:end="255:11">=</operator> <call pos:start="255:13" pos:end="255:48"><name pos:start="255:13" pos:end="255:33">usb_mtp_object_lookup</name><argument_list pos:start="255:34" pos:end="255:48">(<argument pos:start="255:35" pos:end="255:35"><expr pos:start="255:35" pos:end="255:35"><name pos:start="255:35" pos:end="255:35">s</name></expr></argument>, <argument pos:start="255:38" pos:end="255:47"><expr pos:start="255:38" pos:end="255:47"><name pos:start="255:38" pos:end="255:47"><name pos:start="255:38" pos:end="255:38">c</name><operator pos:start="255:39" pos:end="255:40">-&gt;</operator><name pos:start="255:41" pos:end="255:44">argv</name><index pos:start="255:45" pos:end="255:47">[<expr pos:start="255:46" pos:end="255:46"><literal type="number" pos:start="255:46" pos:end="255:46">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="257:9" pos:end="265:9"><if pos:start="257:9" pos:end="265:9">if <condition pos:start="257:12" pos:end="257:22">(<expr pos:start="257:13" pos:end="257:21"><name pos:start="257:13" pos:end="257:13">o</name> <operator pos:start="257:15" pos:end="257:16">==</operator> <name pos:start="257:18" pos:end="257:21">NULL</name></expr>)</condition> <block pos:start="257:24" pos:end="265:9">{<block_content pos:start="259:13" pos:end="263:19">

            <expr_stmt pos:start="259:13" pos:end="261:52"><expr pos:start="259:13" pos:end="261:51"><call pos:start="259:13" pos:end="261:51"><name pos:start="259:13" pos:end="259:32">usb_mtp_queue_result</name><argument_list pos:start="259:33" pos:end="261:51">(<argument pos:start="259:34" pos:end="259:34"><expr pos:start="259:34" pos:end="259:34"><name pos:start="259:34" pos:end="259:34">s</name></expr></argument>, <argument pos:start="259:37" pos:end="259:61"><expr pos:start="259:37" pos:end="259:61"><name pos:start="259:37" pos:end="259:61">RES_INVALID_OBJECT_HANDLE</name></expr></argument>,

                                 <argument pos:start="261:34" pos:end="261:41"><expr pos:start="261:34" pos:end="261:41"><name pos:start="261:34" pos:end="261:41"><name pos:start="261:34" pos:end="261:34">c</name><operator pos:start="261:35" pos:end="261:36">-&gt;</operator><name pos:start="261:37" pos:end="261:41">trans</name></name></expr></argument>, <argument pos:start="261:44" pos:end="261:44"><expr pos:start="261:44" pos:end="261:44"><literal type="number" pos:start="261:44" pos:end="261:44">0</literal></expr></argument>, <argument pos:start="261:47" pos:end="261:47"><expr pos:start="261:47" pos:end="261:47"><literal type="number" pos:start="261:47" pos:end="261:47">0</literal></expr></argument>, <argument pos:start="261:50" pos:end="261:50"><expr pos:start="261:50" pos:end="261:50"><literal type="number" pos:start="261:50" pos:end="261:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="263:13" pos:end="263:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="267:9" pos:end="275:9"><if pos:start="267:9" pos:end="275:9">if <condition pos:start="267:12" pos:end="267:41">(<expr pos:start="267:13" pos:end="267:40"><name pos:start="267:13" pos:end="267:21"><name pos:start="267:13" pos:end="267:13">o</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:21">format</name></name> <operator pos:start="267:23" pos:end="267:24">==</operator> <name pos:start="267:26" pos:end="267:40">FMT_ASSOCIATION</name></expr>)</condition> <block pos:start="267:43" pos:end="275:9">{<block_content pos:start="269:13" pos:end="273:19">

            <expr_stmt pos:start="269:13" pos:end="271:52"><expr pos:start="269:13" pos:end="271:51"><call pos:start="269:13" pos:end="271:51"><name pos:start="269:13" pos:end="269:32">usb_mtp_queue_result</name><argument_list pos:start="269:33" pos:end="271:51">(<argument pos:start="269:34" pos:end="269:34"><expr pos:start="269:34" pos:end="269:34"><name pos:start="269:34" pos:end="269:34">s</name></expr></argument>, <argument pos:start="269:37" pos:end="269:61"><expr pos:start="269:37" pos:end="269:61"><name pos:start="269:37" pos:end="269:61">RES_INVALID_OBJECT_HANDLE</name></expr></argument>,

                                 <argument pos:start="271:34" pos:end="271:41"><expr pos:start="271:34" pos:end="271:41"><name pos:start="271:34" pos:end="271:41"><name pos:start="271:34" pos:end="271:34">c</name><operator pos:start="271:35" pos:end="271:36">-&gt;</operator><name pos:start="271:37" pos:end="271:41">trans</name></name></expr></argument>, <argument pos:start="271:44" pos:end="271:44"><expr pos:start="271:44" pos:end="271:44"><literal type="number" pos:start="271:44" pos:end="271:44">0</literal></expr></argument>, <argument pos:start="271:47" pos:end="271:47"><expr pos:start="271:47" pos:end="271:47"><literal type="number" pos:start="271:47" pos:end="271:47">0</literal></expr></argument>, <argument pos:start="271:50" pos:end="271:50"><expr pos:start="271:50" pos:end="271:50"><literal type="number" pos:start="271:50" pos:end="271:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="273:13" pos:end="273:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:54"><expr pos:start="277:9" pos:end="277:53"><name pos:start="277:9" pos:end="277:15">data_in</name> <operator pos:start="277:17" pos:end="277:17">=</operator> <call pos:start="277:19" pos:end="277:53"><name pos:start="277:19" pos:end="277:44">usb_mtp_get_partial_object</name><argument_list pos:start="277:45" pos:end="277:53">(<argument pos:start="277:46" pos:end="277:46"><expr pos:start="277:46" pos:end="277:46"><name pos:start="277:46" pos:end="277:46">s</name></expr></argument>, <argument pos:start="277:49" pos:end="277:49"><expr pos:start="277:49" pos:end="277:49"><name pos:start="277:49" pos:end="277:49">c</name></expr></argument>, <argument pos:start="277:52" pos:end="277:52"><expr pos:start="277:52" pos:end="277:52"><name pos:start="277:52" pos:end="277:52">o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="279:9" pos:end="287:9"><if pos:start="279:9" pos:end="287:9">if <condition pos:start="279:12" pos:end="279:28">(<expr pos:start="279:13" pos:end="279:27"><name pos:start="279:13" pos:end="279:19">data_in</name> <operator pos:start="279:21" pos:end="279:22">==</operator> <name pos:start="279:24" pos:end="279:27">NULL</name></expr>)</condition> <block pos:start="279:30" pos:end="287:9">{<block_content pos:start="281:13" pos:end="285:19">

            <expr_stmt pos:start="281:13" pos:end="283:52"><expr pos:start="281:13" pos:end="283:51"><call pos:start="281:13" pos:end="283:51"><name pos:start="281:13" pos:end="281:32">usb_mtp_queue_result</name><argument_list pos:start="281:33" pos:end="283:51">(<argument pos:start="281:34" pos:end="281:34"><expr pos:start="281:34" pos:end="281:34"><name pos:start="281:34" pos:end="281:34">s</name></expr></argument>, <argument pos:start="281:37" pos:end="281:53"><expr pos:start="281:37" pos:end="281:53"><name pos:start="281:37" pos:end="281:53">RES_GENERAL_ERROR</name></expr></argument>,

                                 <argument pos:start="283:34" pos:end="283:41"><expr pos:start="283:34" pos:end="283:41"><name pos:start="283:34" pos:end="283:41"><name pos:start="283:34" pos:end="283:34">c</name><operator pos:start="283:35" pos:end="283:36">-&gt;</operator><name pos:start="283:37" pos:end="283:41">trans</name></name></expr></argument>, <argument pos:start="283:44" pos:end="283:44"><expr pos:start="283:44" pos:end="283:44"><literal type="number" pos:start="283:44" pos:end="283:44">0</literal></expr></argument>, <argument pos:start="283:47" pos:end="283:47"><expr pos:start="283:47" pos:end="283:47"><literal type="number" pos:start="283:47" pos:end="283:47">0</literal></expr></argument>, <argument pos:start="283:50" pos:end="283:50"><expr pos:start="283:50" pos:end="283:50"><literal type="number" pos:start="283:50" pos:end="283:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="285:13" pos:end="285:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:17"><expr pos:start="289:9" pos:end="289:16"><name pos:start="289:9" pos:end="289:12">nres</name> <operator pos:start="289:14" pos:end="289:14">=</operator> <literal type="number" pos:start="289:16" pos:end="289:16">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:31"><expr pos:start="291:9" pos:end="291:30"><name pos:start="291:9" pos:end="291:12">res0</name> <operator pos:start="291:14" pos:end="291:14">=</operator> <name pos:start="291:16" pos:end="291:30"><name pos:start="291:16" pos:end="291:22">data_in</name><operator pos:start="291:23" pos:end="291:24">-&gt;</operator><name pos:start="291:25" pos:end="291:30">length</name></name></expr>;</expr_stmt>

        <break pos:start="293:9" pos:end="293:14">break;</break>

    <default pos:start="295:5" pos:end="295:12">default:</default>

        <expr_stmt pos:start="297:9" pos:end="297:55"><expr pos:start="297:9" pos:end="297:54"><call pos:start="297:9" pos:end="297:54"><name pos:start="297:9" pos:end="297:32">trace_usb_mtp_op_unknown</name><argument_list pos:start="297:33" pos:end="297:54">(<argument pos:start="297:34" pos:end="297:44"><expr pos:start="297:34" pos:end="297:44"><name pos:start="297:34" pos:end="297:44"><name pos:start="297:34" pos:end="297:34">s</name><operator pos:start="297:35" pos:end="297:36">-&gt;</operator><name pos:start="297:37" pos:end="297:39">dev</name><operator pos:start="297:40" pos:end="297:40">.</operator><name pos:start="297:41" pos:end="297:44">addr</name></name></expr></argument>, <argument pos:start="297:47" pos:end="297:53"><expr pos:start="297:47" pos:end="297:53"><name pos:start="297:47" pos:end="297:53"><name pos:start="297:47" pos:end="297:47">c</name><operator pos:start="297:48" pos:end="297:49">-&gt;</operator><name pos:start="297:50" pos:end="297:53">code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="301:48"><expr pos:start="299:9" pos:end="301:47"><call pos:start="299:9" pos:end="301:47"><name pos:start="299:9" pos:end="299:28">usb_mtp_queue_result</name><argument_list pos:start="299:29" pos:end="301:47">(<argument pos:start="299:30" pos:end="299:30"><expr pos:start="299:30" pos:end="299:30"><name pos:start="299:30" pos:end="299:30">s</name></expr></argument>, <argument pos:start="299:33" pos:end="299:59"><expr pos:start="299:33" pos:end="299:59"><name pos:start="299:33" pos:end="299:59">RES_OPERATION_NOT_SUPPORTED</name></expr></argument>,

                             <argument pos:start="301:30" pos:end="301:37"><expr pos:start="301:30" pos:end="301:37"><name pos:start="301:30" pos:end="301:37"><name pos:start="301:30" pos:end="301:30">c</name><operator pos:start="301:31" pos:end="301:32">-&gt;</operator><name pos:start="301:33" pos:end="301:37">trans</name></name></expr></argument>, <argument pos:start="301:40" pos:end="301:40"><expr pos:start="301:40" pos:end="301:40"><literal type="number" pos:start="301:40" pos:end="301:40">0</literal></expr></argument>, <argument pos:start="301:43" pos:end="301:43"><expr pos:start="301:43" pos:end="301:43"><literal type="number" pos:start="301:43" pos:end="301:43">0</literal></expr></argument>, <argument pos:start="301:46" pos:end="301:46"><expr pos:start="301:46" pos:end="301:46"><literal type="number" pos:start="301:46" pos:end="301:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="303:9" pos:end="303:15">return;</return>

    </block_content>}</block></switch>



    <comment type="block" pos:start="309:5" pos:end="309:35">/* return results on success */</comment>

    <if_stmt pos:start="311:5" pos:end="317:5"><if pos:start="311:5" pos:end="317:5">if <condition pos:start="311:8" pos:end="311:16">(<expr pos:start="311:9" pos:end="311:15"><name pos:start="311:9" pos:end="311:15">data_in</name></expr>)</condition> <block pos:start="311:18" pos:end="317:5">{<block_content pos:start="313:9" pos:end="315:29">

        <expr_stmt pos:start="313:9" pos:end="313:35"><expr pos:start="313:9" pos:end="313:34"><call pos:start="313:9" pos:end="313:34"><name pos:start="313:9" pos:end="313:14">assert</name><argument_list pos:start="313:15" pos:end="313:34">(<argument pos:start="313:16" pos:end="313:33"><expr pos:start="313:16" pos:end="313:33"><name pos:start="313:16" pos:end="313:25"><name pos:start="313:16" pos:end="313:16">s</name><operator pos:start="313:17" pos:end="313:18">-&gt;</operator><name pos:start="313:19" pos:end="313:25">data_in</name></name> <operator pos:start="313:27" pos:end="313:28">==</operator> <name pos:start="313:30" pos:end="313:33">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:29"><expr pos:start="315:9" pos:end="315:28"><name pos:start="315:9" pos:end="315:18"><name pos:start="315:9" pos:end="315:9">s</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:18">data_in</name></name> <operator pos:start="315:20" pos:end="315:20">=</operator> <name pos:start="315:22" pos:end="315:28">data_in</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="319:5" pos:end="319:61"><expr pos:start="319:5" pos:end="319:60"><call pos:start="319:5" pos:end="319:60"><name pos:start="319:5" pos:end="319:24">usb_mtp_queue_result</name><argument_list pos:start="319:25" pos:end="319:60">(<argument pos:start="319:26" pos:end="319:26"><expr pos:start="319:26" pos:end="319:26"><name pos:start="319:26" pos:end="319:26">s</name></expr></argument>, <argument pos:start="319:29" pos:end="319:34"><expr pos:start="319:29" pos:end="319:34"><name pos:start="319:29" pos:end="319:34">RES_OK</name></expr></argument>, <argument pos:start="319:37" pos:end="319:44"><expr pos:start="319:37" pos:end="319:44"><name pos:start="319:37" pos:end="319:44"><name pos:start="319:37" pos:end="319:37">c</name><operator pos:start="319:38" pos:end="319:39">-&gt;</operator><name pos:start="319:40" pos:end="319:44">trans</name></name></expr></argument>, <argument pos:start="319:47" pos:end="319:50"><expr pos:start="319:47" pos:end="319:50"><name pos:start="319:47" pos:end="319:50">nres</name></expr></argument>, <argument pos:start="319:53" pos:end="319:56"><expr pos:start="319:53" pos:end="319:56"><name pos:start="319:53" pos:end="319:56">res0</name></expr></argument>, <argument pos:start="319:59" pos:end="319:59"><expr pos:start="319:59" pos:end="319:59"><literal type="number" pos:start="319:59" pos:end="319:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
