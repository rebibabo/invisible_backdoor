<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22165.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">gen_check_sr</name><parameter_list pos:start="1:25" pos:end="1:55">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:37">DisasContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">dc</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:54"><decl pos:start="1:44" pos:end="1:54"><type pos:start="1:44" pos:end="1:54"><name pos:start="1:44" pos:end="1:51">uint32_t</name></type> <name pos:start="1:53" pos:end="1:54">sr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:5">

    <if_stmt pos:start="5:5" pos:end="19:5"><if pos:start="5:5" pos:end="19:5">if <condition pos:start="5:8" pos:end="5:72">(<expr pos:start="5:9" pos:end="5:71"><operator pos:start="5:9" pos:end="5:9">!</operator><call pos:start="5:10" pos:end="5:71"><name pos:start="5:10" pos:end="5:35">xtensa_option_bits_enabled</name><argument_list pos:start="5:36" pos:end="5:71">(<argument pos:start="5:37" pos:end="5:46"><expr pos:start="5:37" pos:end="5:46"><name pos:start="5:37" pos:end="5:46"><name pos:start="5:37" pos:end="5:38">dc</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:46">config</name></name></expr></argument>, <argument pos:start="5:49" pos:end="5:70"><expr pos:start="5:49" pos:end="5:70"><name pos:start="5:49" pos:end="5:61"><name pos:start="5:49" pos:end="5:57">sregnames</name><index pos:start="5:58" pos:end="5:61">[<expr pos:start="5:59" pos:end="5:60"><name pos:start="5:59" pos:end="5:60">sr</name></expr>]</index></name><operator pos:start="5:62" pos:end="5:62">.</operator><name pos:start="5:63" pos:end="5:70">opt_bits</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:74" pos:end="19:5">{<block_content pos:start="7:9" pos:end="17:59">

        <if_stmt pos:start="7:9" pos:end="15:9"><if pos:start="7:9" pos:end="11:9">if <condition pos:start="7:12" pos:end="7:31">(<expr pos:start="7:13" pos:end="7:30"><name pos:start="7:13" pos:end="7:25"><name pos:start="7:13" pos:end="7:21">sregnames</name><index pos:start="7:22" pos:end="7:25">[<expr pos:start="7:23" pos:end="7:24"><name pos:start="7:23" pos:end="7:24">sr</name></expr>]</index></name><operator pos:start="7:26" pos:end="7:26">.</operator><name pos:start="7:27" pos:end="7:30">name</name></expr>)</condition> <block pos:start="7:33" pos:end="11:9">{<block_content pos:start="9:13" pos:end="9:70">

            <expr_stmt pos:start="9:13" pos:end="9:70"><expr pos:start="9:13" pos:end="9:69"><call pos:start="9:13" pos:end="9:69"><name pos:start="9:13" pos:end="9:20">qemu_log</name><argument_list pos:start="9:21" pos:end="9:69">(<argument pos:start="9:22" pos:end="9:48"><expr pos:start="9:22" pos:end="9:48"><literal type="string" pos:start="9:22" pos:end="9:48">"SR %s is not configured\n"</literal></expr></argument>, <argument pos:start="9:51" pos:end="9:68"><expr pos:start="9:51" pos:end="9:68"><name pos:start="9:51" pos:end="9:63"><name pos:start="9:51" pos:end="9:59">sregnames</name><index pos:start="9:60" pos:end="9:63">[<expr pos:start="9:61" pos:end="9:62"><name pos:start="9:61" pos:end="9:62">sr</name></expr>]</index></name><operator pos:start="9:64" pos:end="9:64">.</operator><name pos:start="9:65" pos:end="9:68">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="11:11" pos:end="15:9">else <block pos:start="11:16" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:55">

            <expr_stmt pos:start="13:13" pos:end="13:55"><expr pos:start="13:13" pos:end="13:54"><call pos:start="13:13" pos:end="13:54"><name pos:start="13:13" pos:end="13:20">qemu_log</name><argument_list pos:start="13:21" pos:end="13:54">(<argument pos:start="13:22" pos:end="13:49"><expr pos:start="13:22" pos:end="13:49"><literal type="string" pos:start="13:22" pos:end="13:49">"SR %d is not implemented\n"</literal></expr></argument>, <argument pos:start="13:52" pos:end="13:53"><expr pos:start="13:52" pos:end="13:53"><name pos:start="13:52" pos:end="13:53">sr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:59"><expr pos:start="17:9" pos:end="17:58"><call pos:start="17:9" pos:end="17:58"><name pos:start="17:9" pos:end="17:27">gen_exception_cause</name><argument_list pos:start="17:28" pos:end="17:58">(<argument pos:start="17:29" pos:end="17:30"><expr pos:start="17:29" pos:end="17:30"><name pos:start="17:29" pos:end="17:30">dc</name></expr></argument>, <argument pos:start="17:33" pos:end="17:57"><expr pos:start="17:33" pos:end="17:57"><name pos:start="17:33" pos:end="17:57">ILLEGAL_INSTRUCTION_CAUSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
