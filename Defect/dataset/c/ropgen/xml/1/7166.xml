<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7166.c" pos:tabs="8"><function pos:start="1:1" pos:end="185:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">AVIOContext</name> <modifier pos:start="1:20" pos:end="1:20">*</modifier></type> <name pos:start="1:22" pos:end="1:40">wtvfile_open_sector</name><parameter_list pos:start="1:41" pos:end="1:106">(<parameter pos:start="1:42" pos:end="1:57"><decl pos:start="1:42" pos:end="1:57"><type pos:start="1:42" pos:end="1:57"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:57">first_sector</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:74"><decl pos:start="1:60" pos:end="1:74"><type pos:start="1:60" pos:end="1:74"><name pos:start="1:60" pos:end="1:67">uint64_t</name></type> <name pos:start="1:69" pos:end="1:74">length</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:85"><decl pos:start="1:77" pos:end="1:85"><type pos:start="1:77" pos:end="1:85"><name pos:start="1:77" pos:end="1:79">int</name></type> <name pos:start="1:81" pos:end="1:85">depth</name></decl></parameter>, <parameter pos:start="1:88" pos:end="1:105"><decl pos:start="1:88" pos:end="1:105"><type pos:start="1:88" pos:end="1:105"><name pos:start="1:88" pos:end="1:102">AVFormatContext</name> <modifier pos:start="1:104" pos:end="1:104">*</modifier></type><name pos:start="1:105" pos:end="1:105">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="185:1">{<block_content pos:start="5:5" pos:end="183:14">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">WtvFile</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:15">wf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:19">buffer</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:20"><if pos:start="13:5" pos:end="15:20">if <condition pos:start="13:8" pos:end="13:81">(<expr pos:start="13:9" pos:end="13:80"><call pos:start="13:9" pos:end="13:76"><name pos:start="13:9" pos:end="13:17">avio_seek</name><argument_list pos:start="13:18" pos:end="13:76">(<argument pos:start="13:19" pos:end="13:23"><expr pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:19">s</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:23">pb</name></name></expr></argument>, <argument pos:start="13:26" pos:end="13:65"><expr pos:start="13:26" pos:end="13:65"><operator pos:start="13:26" pos:end="13:26">(</operator><name pos:start="13:27" pos:end="13:33">int64_t</name><operator pos:start="13:34" pos:end="13:34">)</operator><name pos:start="13:35" pos:end="13:46">first_sector</name> <operator pos:start="13:48" pos:end="13:49">&lt;&lt;</operator> <name pos:start="13:51" pos:end="13:65">WTV_SECTOR_BITS</name></expr></argument>, <argument pos:start="13:68" pos:end="13:75"><expr pos:start="13:68" pos:end="13:75"><name pos:start="13:68" pos:end="13:75">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="13:78" pos:end="13:78">&lt;</operator> <literal type="number" pos:start="13:80" pos:end="13:80">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:20"><block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:6">wf</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:36"><name pos:start="19:10" pos:end="19:19">av_mallocz</name><argument_list pos:start="19:20" pos:end="19:36">(<argument pos:start="19:21" pos:end="19:35"><expr pos:start="19:21" pos:end="19:35"><sizeof pos:start="19:21" pos:end="19:35">sizeof<argument_list pos:start="19:27" pos:end="19:35">(<argument pos:start="19:28" pos:end="19:34"><expr pos:start="19:28" pos:end="19:34"><name pos:start="19:28" pos:end="19:34">WtvFile</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:20"><if pos:start="21:5" pos:end="23:20">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:11">wf</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:20"><block_content pos:start="23:9" pos:end="23:20">

        <return pos:start="23:9" pos:end="23:20">return <expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="97:5"><if pos:start="27:5" pos:end="43:5">if <condition pos:start="27:8" pos:end="27:19">(<expr pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:13">depth</name> <operator pos:start="27:15" pos:end="27:16">==</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>)</condition> <block pos:start="27:21" pos:end="43:5">{<block_content pos:start="29:9" pos:end="41:28">

        <expr_stmt pos:start="29:9" pos:end="29:50"><expr pos:start="29:9" pos:end="29:49"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:10">wf</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:19">sectors</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <call pos:start="29:23" pos:end="29:49"><name pos:start="29:23" pos:end="29:31">av_malloc</name><argument_list pos:start="29:32" pos:end="29:49">(<argument pos:start="29:33" pos:end="29:48"><expr pos:start="29:33" pos:end="29:48"><sizeof pos:start="29:33" pos:end="29:48">sizeof<argument_list pos:start="29:39" pos:end="29:48">(<argument pos:start="29:40" pos:end="29:47"><expr pos:start="29:40" pos:end="29:47"><name pos:start="29:40" pos:end="29:47">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:25">(<expr pos:start="31:13" pos:end="31:24"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:24"><name pos:start="31:14" pos:end="31:15">wf</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:24">sectors</name></name></expr>)</condition> <block pos:start="31:27" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:24">

            <expr_stmt pos:start="33:13" pos:end="33:24"><expr pos:start="33:13" pos:end="33:23"><call pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:19">av_free</name><argument_list pos:start="33:20" pos:end="33:23">(<argument pos:start="33:21" pos:end="33:22"><expr pos:start="33:21" pos:end="33:22"><name pos:start="33:21" pos:end="33:22">wf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:24">return <expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:39"><expr pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:10">wf</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:19">sectors</name><index pos:start="39:20" pos:end="39:22">[<expr pos:start="39:21" pos:end="39:21"><literal type="number" pos:start="39:21" pos:end="39:21">0</literal></expr>]</index></name>  <operator pos:start="39:25" pos:end="39:25">=</operator> <name pos:start="39:27" pos:end="39:38">first_sector</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:10">wf</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:22">nb_sectors</name></name>  <operator pos:start="41:25" pos:end="41:25">=</operator> <literal type="number" pos:start="41:27" pos:end="41:27">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="57:5">else if <condition pos:start="43:15" pos:end="43:26">(<expr pos:start="43:16" pos:end="43:25"><name pos:start="43:16" pos:end="43:20">depth</name> <operator pos:start="43:22" pos:end="43:23">==</operator> <literal type="number" pos:start="43:25" pos:end="43:25">1</literal></expr>)</condition> <block pos:start="43:28" pos:end="57:5">{<block_content pos:start="45:9" pos:end="55:77">

        <expr_stmt pos:start="45:9" pos:end="45:49"><expr pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:10">wf</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:19">sectors</name></name> <operator pos:start="45:21" pos:end="45:21">=</operator> <call pos:start="45:23" pos:end="45:48"><name pos:start="45:23" pos:end="45:31">av_malloc</name><argument_list pos:start="45:32" pos:end="45:48">(<argument pos:start="45:33" pos:end="45:47"><expr pos:start="45:33" pos:end="45:47"><name pos:start="45:33" pos:end="45:47">WTV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:25">(<expr pos:start="47:13" pos:end="47:24"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:24"><name pos:start="47:14" pos:end="47:15">wf</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:24">sectors</name></name></expr>)</condition> <block pos:start="47:27" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:24">

            <expr_stmt pos:start="49:13" pos:end="49:24"><expr pos:start="49:13" pos:end="49:23"><call pos:start="49:13" pos:end="49:23"><name pos:start="49:13" pos:end="49:19">av_free</name><argument_list pos:start="49:20" pos:end="49:23">(<argument pos:start="49:21" pos:end="49:22"><expr pos:start="49:21" pos:end="49:22"><name pos:start="49:21" pos:end="49:22">wf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="51:13" pos:end="51:24">return <expr pos:start="51:20" pos:end="51:23"><name pos:start="51:20" pos:end="51:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:77"><expr pos:start="55:9" pos:end="55:76"><name pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:10">wf</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:22">nb_sectors</name></name>  <operator pos:start="55:25" pos:end="55:25">=</operator> <call pos:start="55:27" pos:end="55:76"><name pos:start="55:27" pos:end="55:35">read_ints</name><argument_list pos:start="55:36" pos:end="55:76">(<argument pos:start="55:37" pos:end="55:41"><expr pos:start="55:37" pos:end="55:41"><name pos:start="55:37" pos:end="55:41"><name pos:start="55:37" pos:end="55:37">s</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:41">pb</name></name></expr></argument>, <argument pos:start="55:44" pos:end="55:54"><expr pos:start="55:44" pos:end="55:54"><name pos:start="55:44" pos:end="55:54"><name pos:start="55:44" pos:end="55:45">wf</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:54">sectors</name></name></expr></argument>, <argument pos:start="55:57" pos:end="55:75"><expr pos:start="55:57" pos:end="55:75"><name pos:start="55:57" pos:end="55:71">WTV_SECTOR_SIZE</name> <operator pos:start="55:73" pos:end="55:73">/</operator> <literal type="number" pos:start="55:75" pos:end="55:75">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="57:7" pos:end="89:5">else if <condition pos:start="57:15" pos:end="57:26">(<expr pos:start="57:16" pos:end="57:25"><name pos:start="57:16" pos:end="57:20">depth</name> <operator pos:start="57:22" pos:end="57:23">==</operator> <literal type="number" pos:start="57:25" pos:end="57:25">2</literal></expr>)</condition> <block pos:start="57:28" pos:end="89:5">{<block_content pos:start="59:9" pos:end="87:9">

        <decl_stmt pos:start="59:9" pos:end="59:47"><decl pos:start="59:9" pos:end="59:46"><type pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:16">uint32_t</name></type> <name pos:start="59:18" pos:end="59:46"><name pos:start="59:18" pos:end="59:25">sectors1</name><index pos:start="59:26" pos:end="59:46">[<expr pos:start="59:27" pos:end="59:45"><name pos:start="59:27" pos:end="59:41">WTV_SECTOR_SIZE</name> <operator pos:start="59:43" pos:end="59:43">/</operator> <literal type="number" pos:start="59:45" pos:end="59:45">4</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:74"><decl pos:start="61:9" pos:end="61:73"><type pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">int</name></type> <name pos:start="61:13" pos:end="61:23">nb_sectors1</name> <init pos:start="61:25" pos:end="61:73">= <expr pos:start="61:27" pos:end="61:73"><call pos:start="61:27" pos:end="61:73"><name pos:start="61:27" pos:end="61:35">read_ints</name><argument_list pos:start="61:36" pos:end="61:73">(<argument pos:start="61:37" pos:end="61:41"><expr pos:start="61:37" pos:end="61:41"><name pos:start="61:37" pos:end="61:41"><name pos:start="61:37" pos:end="61:37">s</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:41">pb</name></name></expr></argument>, <argument pos:start="61:44" pos:end="61:51"><expr pos:start="61:44" pos:end="61:51"><name pos:start="61:44" pos:end="61:51">sectors1</name></expr></argument>, <argument pos:start="61:54" pos:end="61:72"><expr pos:start="61:54" pos:end="61:72"><name pos:start="61:54" pos:end="61:68">WTV_SECTOR_SIZE</name> <operator pos:start="61:70" pos:end="61:70">/</operator> <literal type="number" pos:start="61:72" pos:end="61:72">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:14"><decl pos:start="63:9" pos:end="63:13"><type pos:start="63:9" pos:end="63:11"><name pos:start="63:9" pos:end="63:11">int</name></type> <name pos:start="63:13" pos:end="63:13">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:64"><expr pos:start="67:9" pos:end="67:63"><name pos:start="67:9" pos:end="67:19"><name pos:start="67:9" pos:end="67:10">wf</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:19">sectors</name></name> <operator pos:start="67:21" pos:end="67:21">=</operator> <call pos:start="67:23" pos:end="67:63"><name pos:start="67:23" pos:end="67:31">av_malloc</name><argument_list pos:start="67:32" pos:end="67:63">(<argument pos:start="67:33" pos:end="67:62"><expr pos:start="67:33" pos:end="67:62"><name pos:start="67:33" pos:end="67:43">nb_sectors1</name> <operator pos:start="67:45" pos:end="67:46">&lt;&lt;</operator> <name pos:start="67:48" pos:end="67:62">WTV_SECTOR_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:25">(<expr pos:start="69:13" pos:end="69:24"><operator pos:start="69:13" pos:end="69:13">!</operator><name pos:start="69:14" pos:end="69:24"><name pos:start="69:14" pos:end="69:15">wf</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:24">sectors</name></name></expr>)</condition> <block pos:start="69:27" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:24">

            <expr_stmt pos:start="71:13" pos:end="71:24"><expr pos:start="71:13" pos:end="71:23"><call pos:start="71:13" pos:end="71:23"><name pos:start="71:13" pos:end="71:19">av_free</name><argument_list pos:start="71:20" pos:end="71:23">(<argument pos:start="71:21" pos:end="71:22"><expr pos:start="71:21" pos:end="71:22"><name pos:start="71:21" pos:end="71:22">wf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="73:13" pos:end="73:24">return <expr pos:start="73:20" pos:end="73:23"><name pos:start="73:20" pos:end="73:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:27"><expr pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:10">wf</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:22">nb_sectors</name></name> <operator pos:start="77:24" pos:end="77:24">=</operator> <literal type="number" pos:start="77:26" pos:end="77:26">0</literal></expr>;</expr_stmt>

        <for pos:start="79:9" pos:end="87:9">for <control pos:start="79:13" pos:end="79:41">(<init pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:18"><name pos:start="79:14" pos:end="79:14">i</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr>;</init> <condition pos:start="79:21" pos:end="79:36"><expr pos:start="79:21" pos:end="79:35"><name pos:start="79:21" pos:end="79:21">i</name> <operator pos:start="79:23" pos:end="79:23">&lt;</operator> <name pos:start="79:25" pos:end="79:35">nb_sectors1</name></expr>;</condition> <incr pos:start="79:38" pos:end="79:40"><expr pos:start="79:38" pos:end="79:40"><name pos:start="79:38" pos:end="79:38">i</name><operator pos:start="79:39" pos:end="79:40">++</operator></expr></incr>)</control> <block pos:start="79:43" pos:end="87:9">{<block_content pos:start="81:13" pos:end="85:107">

            <if_stmt pos:start="81:13" pos:end="83:22"><if pos:start="81:13" pos:end="83:22">if <condition pos:start="81:16" pos:end="81:88">(<expr pos:start="81:17" pos:end="81:87"><call pos:start="81:17" pos:end="81:83"><name pos:start="81:17" pos:end="81:25">avio_seek</name><argument_list pos:start="81:26" pos:end="81:83">(<argument pos:start="81:27" pos:end="81:31"><expr pos:start="81:27" pos:end="81:31"><name pos:start="81:27" pos:end="81:31"><name pos:start="81:27" pos:end="81:27">s</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:31">pb</name></name></expr></argument>, <argument pos:start="81:34" pos:end="81:72"><expr pos:start="81:34" pos:end="81:72"><operator pos:start="81:34" pos:end="81:34">(</operator><name pos:start="81:35" pos:end="81:41">int64_t</name><operator pos:start="81:42" pos:end="81:42">)</operator><name pos:start="81:43" pos:end="81:53"><name pos:start="81:43" pos:end="81:50">sectors1</name><index pos:start="81:51" pos:end="81:53">[<expr pos:start="81:52" pos:end="81:52"><name pos:start="81:52" pos:end="81:52">i</name></expr>]</index></name> <operator pos:start="81:55" pos:end="81:56">&lt;&lt;</operator> <name pos:start="81:58" pos:end="81:72">WTV_SECTOR_BITS</name></expr></argument>, <argument pos:start="81:75" pos:end="81:82"><expr pos:start="81:75" pos:end="81:82"><name pos:start="81:75" pos:end="81:82">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="81:85" pos:end="81:85">&lt;</operator> <literal type="number" pos:start="81:87" pos:end="81:87">0</literal></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:22"><block_content pos:start="83:17" pos:end="83:22">

                <break pos:start="83:17" pos:end="83:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:107"><expr pos:start="85:13" pos:end="85:106"><name pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:14">wf</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:26">nb_sectors</name></name> <operator pos:start="85:28" pos:end="85:29">+=</operator> <call pos:start="85:31" pos:end="85:106"><name pos:start="85:31" pos:end="85:39">read_ints</name><argument_list pos:start="85:40" pos:end="85:106">(<argument pos:start="85:41" pos:end="85:45"><expr pos:start="85:41" pos:end="85:45"><name pos:start="85:41" pos:end="85:45"><name pos:start="85:41" pos:end="85:41">s</name><operator pos:start="85:42" pos:end="85:43">-&gt;</operator><name pos:start="85:44" pos:end="85:45">pb</name></name></expr></argument>, <argument pos:start="85:48" pos:end="85:84"><expr pos:start="85:48" pos:end="85:84"><name pos:start="85:48" pos:end="85:58"><name pos:start="85:48" pos:end="85:49">wf</name><operator pos:start="85:50" pos:end="85:51">-&gt;</operator><name pos:start="85:52" pos:end="85:58">sectors</name></name> <operator pos:start="85:60" pos:end="85:60">+</operator> <name pos:start="85:62" pos:end="85:62">i</name> <operator pos:start="85:64" pos:end="85:64">*</operator> <name pos:start="85:66" pos:end="85:80">WTV_SECTOR_SIZE</name> <operator pos:start="85:82" pos:end="85:82">/</operator> <literal type="number" pos:start="85:84" pos:end="85:84">4</literal></expr></argument>, <argument pos:start="85:87" pos:end="85:105"><expr pos:start="85:87" pos:end="85:105"><name pos:start="85:87" pos:end="85:101">WTV_SECTOR_SIZE</name> <operator pos:start="85:103" pos:end="85:103">/</operator> <literal type="number" pos:start="85:105" pos:end="85:105">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="97:5">else <block pos:start="89:12" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:20">

        <expr_stmt pos:start="91:9" pos:end="91:91"><expr pos:start="91:9" pos:end="91:90"><call pos:start="91:9" pos:end="91:90"><name pos:start="91:9" pos:end="91:14">av_log</name><argument_list pos:start="91:15" pos:end="91:90">(<argument pos:start="91:16" pos:end="91:16"><expr pos:start="91:16" pos:end="91:16"><name pos:start="91:16" pos:end="91:16">s</name></expr></argument>, <argument pos:start="91:19" pos:end="91:30"><expr pos:start="91:19" pos:end="91:30"><name pos:start="91:19" pos:end="91:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:33" pos:end="91:82"><expr pos:start="91:33" pos:end="91:82"><literal type="string" pos:start="91:33" pos:end="91:82">"unsupported file allocation table depth (0x%x)\n"</literal></expr></argument>, <argument pos:start="91:85" pos:end="91:89"><expr pos:start="91:85" pos:end="91:89"><name pos:start="91:85" pos:end="91:89">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:20"><expr pos:start="93:9" pos:end="93:19"><call pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:15">av_free</name><argument_list pos:start="93:16" pos:end="93:19">(<argument pos:start="93:17" pos:end="93:18"><expr pos:start="93:17" pos:end="93:18"><name pos:start="93:17" pos:end="93:18">wf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:20">return <expr pos:start="95:16" pos:end="95:19"><name pos:start="95:16" pos:end="95:19">NULL</name></expr>;</return>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:81"><expr pos:start="99:5" pos:end="99:80"><name pos:start="99:5" pos:end="99:19"><name pos:start="99:5" pos:end="99:6">wf</name><operator pos:start="99:7" pos:end="99:8">-&gt;</operator><name pos:start="99:9" pos:end="99:19">sector_bits</name></name> <operator pos:start="99:21" pos:end="99:21">=</operator> <ternary pos:start="99:23" pos:end="99:80"><condition pos:start="99:23" pos:end="99:43"><expr pos:start="99:23" pos:end="99:41"><name pos:start="99:23" pos:end="99:28">length</name> <operator pos:start="99:30" pos:end="99:30">&amp;</operator> <operator pos:start="99:32" pos:end="99:32">(</operator><literal type="number" pos:start="99:33" pos:end="99:36">1ULL</literal><operator pos:start="99:37" pos:end="99:38">&lt;&lt;</operator><literal type="number" pos:start="99:39" pos:end="99:40">63</literal><operator pos:start="99:41" pos:end="99:41">)</operator></expr> ?</condition><then pos:start="99:45" pos:end="99:59"> <expr pos:start="99:45" pos:end="99:59"><name pos:start="99:45" pos:end="99:59">WTV_SECTOR_BITS</name></expr> </then><else pos:start="99:61" pos:end="99:80">: <expr pos:start="99:63" pos:end="99:80"><name pos:start="99:63" pos:end="99:80">WTV_BIGSECTOR_BITS</name></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="103:5" pos:end="111:5"><if pos:start="103:5" pos:end="111:5">if <condition pos:start="103:8" pos:end="103:24">(<expr pos:start="103:9" pos:end="103:23"><operator pos:start="103:9" pos:end="103:9">!</operator><name pos:start="103:10" pos:end="103:23"><name pos:start="103:10" pos:end="103:11">wf</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:23">nb_sectors</name></name></expr>)</condition> <block pos:start="103:26" pos:end="111:5">{<block_content pos:start="105:9" pos:end="109:20">

        <expr_stmt pos:start="105:9" pos:end="105:29"><expr pos:start="105:9" pos:end="105:28"><call pos:start="105:9" pos:end="105:28"><name pos:start="105:9" pos:end="105:15">av_free</name><argument_list pos:start="105:16" pos:end="105:28">(<argument pos:start="105:17" pos:end="105:27"><expr pos:start="105:17" pos:end="105:27"><name pos:start="105:17" pos:end="105:27"><name pos:start="105:17" pos:end="105:18">wf</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:27">sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:20"><expr pos:start="107:9" pos:end="107:19"><call pos:start="107:9" pos:end="107:19"><name pos:start="107:9" pos:end="107:15">av_free</name><argument_list pos:start="107:16" pos:end="107:19">(<argument pos:start="107:17" pos:end="107:18"><expr pos:start="107:17" pos:end="107:18"><name pos:start="107:17" pos:end="107:18">wf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="109:9" pos:end="109:20">return <expr pos:start="109:16" pos:end="109:19"><name pos:start="109:16" pos:end="109:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="115:5" pos:end="117:54"><if pos:start="115:5" pos:end="117:54">if <condition pos:start="115:8" pos:end="115:78">(<expr pos:start="115:9" pos:end="115:77"><name pos:start="115:9" pos:end="115:39"><name pos:start="115:9" pos:end="115:10">wf</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:19">sectors</name><index pos:start="115:20" pos:end="115:39">[<expr pos:start="115:21" pos:end="115:38"><name pos:start="115:21" pos:end="115:34"><name pos:start="115:21" pos:end="115:22">wf</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:34">nb_sectors</name></name> <operator pos:start="115:36" pos:end="115:36">-</operator> <literal type="number" pos:start="115:38" pos:end="115:38">1</literal></expr>]</index></name> <operator pos:start="115:41" pos:end="115:42">&lt;&lt;</operator> <name pos:start="115:44" pos:end="115:58">WTV_SECTOR_BITS</name> <operator pos:start="115:60" pos:end="115:60">&gt;</operator> <call pos:start="115:62" pos:end="115:77"><name pos:start="115:62" pos:end="115:70">avio_tell</name><argument_list pos:start="115:71" pos:end="115:77">(<argument pos:start="115:72" pos:end="115:76"><expr pos:start="115:72" pos:end="115:76"><name pos:start="115:72" pos:end="115:76"><name pos:start="115:72" pos:end="115:72">s</name><operator pos:start="115:73" pos:end="115:74">-&gt;</operator><name pos:start="115:75" pos:end="115:76">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:54"><block_content pos:start="117:9" pos:end="117:54">

        <expr_stmt pos:start="117:9" pos:end="117:54"><expr pos:start="117:9" pos:end="117:53"><call pos:start="117:9" pos:end="117:53"><name pos:start="117:9" pos:end="117:14">av_log</name><argument_list pos:start="117:15" pos:end="117:53">(<argument pos:start="117:16" pos:end="117:16"><expr pos:start="117:16" pos:end="117:16"><name pos:start="117:16" pos:end="117:16">s</name></expr></argument>, <argument pos:start="117:19" pos:end="117:32"><expr pos:start="117:19" pos:end="117:32"><name pos:start="117:19" pos:end="117:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="117:35" pos:end="117:52"><expr pos:start="117:35" pos:end="117:52"><literal type="string" pos:start="117:35" pos:end="117:52">"truncated file\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="121:5" pos:end="121:22">/* check length */</comment>

    <expr_stmt pos:start="123:5" pos:end="123:29"><expr pos:start="123:5" pos:end="123:28"><name pos:start="123:5" pos:end="123:10">length</name> <operator pos:start="123:12" pos:end="123:13">&amp;=</operator> <literal type="number" pos:start="123:15" pos:end="123:28">0xFFFFFFFFFFFF</literal></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="131:5"><if pos:start="125:5" pos:end="131:5">if <condition pos:start="125:8" pos:end="125:62">(<expr pos:start="125:9" pos:end="125:61"><name pos:start="125:9" pos:end="125:14">length</name> <operator pos:start="125:16" pos:end="125:16">&gt;</operator> <operator pos:start="125:18" pos:end="125:18">(</operator><operator pos:start="125:19" pos:end="125:19">(</operator><name pos:start="125:20" pos:end="125:26">int64_t</name><operator pos:start="125:27" pos:end="125:27">)</operator><name pos:start="125:28" pos:end="125:41"><name pos:start="125:28" pos:end="125:29">wf</name><operator pos:start="125:30" pos:end="125:31">-&gt;</operator><name pos:start="125:32" pos:end="125:41">nb_sectors</name></name> <operator pos:start="125:43" pos:end="125:44">&lt;&lt;</operator> <name pos:start="125:46" pos:end="125:60"><name pos:start="125:46" pos:end="125:47">wf</name><operator pos:start="125:48" pos:end="125:49">-&gt;</operator><name pos:start="125:50" pos:end="125:60">sector_bits</name></name><operator pos:start="125:61" pos:end="125:61">)</operator></expr>)</condition> <block pos:start="125:64" pos:end="131:5">{<block_content pos:start="127:9" pos:end="129:61">

        <expr_stmt pos:start="127:9" pos:end="127:176"><expr pos:start="127:9" pos:end="127:175"><call pos:start="127:9" pos:end="127:175"><name pos:start="127:9" pos:end="127:14">av_log</name><argument_list pos:start="127:15" pos:end="127:175">(<argument pos:start="127:16" pos:end="127:16"><expr pos:start="127:16" pos:end="127:16"><name pos:start="127:16" pos:end="127:16">s</name></expr></argument>, <argument pos:start="127:19" pos:end="127:32"><expr pos:start="127:19" pos:end="127:32"><name pos:start="127:19" pos:end="127:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="127:35" pos:end="127:122"><expr pos:start="127:35" pos:end="127:122"><literal type="string" pos:start="127:35" pos:end="127:61">"reported file length (0x%"</literal><name pos:start="127:62" pos:end="127:67">PRIx64</name><literal type="string" pos:start="127:68" pos:end="127:111">") exceeds number of available sectors (0x%"</literal><name pos:start="127:112" pos:end="127:117">PRIx64</name><literal type="string" pos:start="127:118" pos:end="127:122">")\n"</literal></expr></argument>, <argument pos:start="127:125" pos:end="127:130"><expr pos:start="127:125" pos:end="127:130"><name pos:start="127:125" pos:end="127:130">length</name></expr></argument>, <argument pos:start="127:133" pos:end="127:174"><expr pos:start="127:133" pos:end="127:174"><operator pos:start="127:133" pos:end="127:133">(</operator><name pos:start="127:134" pos:end="127:140">int64_t</name><operator pos:start="127:141" pos:end="127:141">)</operator><name pos:start="127:142" pos:end="127:155"><name pos:start="127:142" pos:end="127:143">wf</name><operator pos:start="127:144" pos:end="127:145">-&gt;</operator><name pos:start="127:146" pos:end="127:155">nb_sectors</name></name> <operator pos:start="127:157" pos:end="127:158">&lt;&lt;</operator> <name pos:start="127:160" pos:end="127:174"><name pos:start="127:160" pos:end="127:161">wf</name><operator pos:start="127:162" pos:end="127:163">-&gt;</operator><name pos:start="127:164" pos:end="127:174">sector_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:61"><expr pos:start="129:9" pos:end="129:60"><name pos:start="129:9" pos:end="129:14">length</name> <operator pos:start="129:16" pos:end="129:16">=</operator> <operator pos:start="129:18" pos:end="129:18">(</operator><name pos:start="129:19" pos:end="129:25">int64_t</name><operator pos:start="129:26" pos:end="129:26">)</operator><name pos:start="129:27" pos:end="129:40"><name pos:start="129:27" pos:end="129:28">wf</name><operator pos:start="129:29" pos:end="129:30">-&gt;</operator><name pos:start="129:31" pos:end="129:40">nb_sectors</name></name> <operator pos:start="129:42" pos:end="129:43">&lt;&lt;</operator>  <name pos:start="129:46" pos:end="129:60"><name pos:start="129:46" pos:end="129:47">wf</name><operator pos:start="129:48" pos:end="129:49">-&gt;</operator><name pos:start="129:50" pos:end="129:60">sector_bits</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:24"><expr pos:start="133:5" pos:end="133:23"><name pos:start="133:5" pos:end="133:14"><name pos:start="133:5" pos:end="133:6">wf</name><operator pos:start="133:7" pos:end="133:8">-&gt;</operator><name pos:start="133:9" pos:end="133:14">length</name></name> <operator pos:start="133:16" pos:end="133:16">=</operator> <name pos:start="133:18" pos:end="133:23">length</name></expr>;</expr_stmt>



    <comment type="block" pos:start="137:5" pos:end="137:32">/* seek to initial sector */</comment>

    <expr_stmt pos:start="139:5" pos:end="139:21"><expr pos:start="139:5" pos:end="139:20"><name pos:start="139:5" pos:end="139:16"><name pos:start="139:5" pos:end="139:6">wf</name><operator pos:start="139:7" pos:end="139:8">-&gt;</operator><name pos:start="139:9" pos:end="139:16">position</name></name> <operator pos:start="139:18" pos:end="139:18">=</operator> <literal type="number" pos:start="139:20" pos:end="139:20">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="149:5"><if pos:start="141:5" pos:end="149:5">if <condition pos:start="141:8" pos:end="141:83">(<expr pos:start="141:9" pos:end="141:82"><call pos:start="141:9" pos:end="141:78"><name pos:start="141:9" pos:end="141:17">avio_seek</name><argument_list pos:start="141:18" pos:end="141:78">(<argument pos:start="141:19" pos:end="141:23"><expr pos:start="141:19" pos:end="141:23"><name pos:start="141:19" pos:end="141:23"><name pos:start="141:19" pos:end="141:19">s</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:23">pb</name></name></expr></argument>, <argument pos:start="141:26" pos:end="141:67"><expr pos:start="141:26" pos:end="141:67"><operator pos:start="141:26" pos:end="141:26">(</operator><name pos:start="141:27" pos:end="141:33">int64_t</name><operator pos:start="141:34" pos:end="141:34">)</operator><name pos:start="141:35" pos:end="141:48"><name pos:start="141:35" pos:end="141:36">wf</name><operator pos:start="141:37" pos:end="141:38">-&gt;</operator><name pos:start="141:39" pos:end="141:45">sectors</name><index pos:start="141:46" pos:end="141:48">[<expr pos:start="141:47" pos:end="141:47"><literal type="number" pos:start="141:47" pos:end="141:47">0</literal></expr>]</index></name> <operator pos:start="141:50" pos:end="141:51">&lt;&lt;</operator> <name pos:start="141:53" pos:end="141:67">WTV_SECTOR_BITS</name></expr></argument>, <argument pos:start="141:70" pos:end="141:77"><expr pos:start="141:70" pos:end="141:77"><name pos:start="141:70" pos:end="141:77">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="141:80" pos:end="141:80">&lt;</operator> <literal type="number" pos:start="141:82" pos:end="141:82">0</literal></expr>)</condition> <block pos:start="141:85" pos:end="149:5">{<block_content pos:start="143:9" pos:end="147:20">

        <expr_stmt pos:start="143:9" pos:end="143:29"><expr pos:start="143:9" pos:end="143:28"><call pos:start="143:9" pos:end="143:28"><name pos:start="143:9" pos:end="143:15">av_free</name><argument_list pos:start="143:16" pos:end="143:28">(<argument pos:start="143:17" pos:end="143:27"><expr pos:start="143:17" pos:end="143:27"><name pos:start="143:17" pos:end="143:27"><name pos:start="143:17" pos:end="143:18">wf</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:27">sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:20"><expr pos:start="145:9" pos:end="145:19"><call pos:start="145:9" pos:end="145:19"><name pos:start="145:9" pos:end="145:15">av_free</name><argument_list pos:start="145:16" pos:end="145:19">(<argument pos:start="145:17" pos:end="145:18"><expr pos:start="145:17" pos:end="145:18"><name pos:start="145:17" pos:end="145:18">wf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="147:9" pos:end="147:20">return <expr pos:start="147:16" pos:end="147:19"><name pos:start="147:16" pos:end="147:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:30"><expr pos:start="153:5" pos:end="153:29"><name pos:start="153:5" pos:end="153:21"><name pos:start="153:5" pos:end="153:6">wf</name><operator pos:start="153:7" pos:end="153:8">-&gt;</operator><name pos:start="153:9" pos:end="153:21">pb_filesystem</name></name> <operator pos:start="153:23" pos:end="153:23">=</operator> <name pos:start="153:25" pos:end="153:29"><name pos:start="153:25" pos:end="153:25">s</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:29">pb</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:45"><expr pos:start="155:5" pos:end="155:44"><name pos:start="155:5" pos:end="155:10">buffer</name> <operator pos:start="155:12" pos:end="155:12">=</operator> <call pos:start="155:14" pos:end="155:44"><name pos:start="155:14" pos:end="155:22">av_malloc</name><argument_list pos:start="155:23" pos:end="155:44">(<argument pos:start="155:24" pos:end="155:43"><expr pos:start="155:24" pos:end="155:43"><literal type="number" pos:start="155:24" pos:end="155:24">1</literal> <operator pos:start="155:26" pos:end="155:27">&lt;&lt;</operator> <name pos:start="155:29" pos:end="155:43"><name pos:start="155:29" pos:end="155:30">wf</name><operator pos:start="155:31" pos:end="155:32">-&gt;</operator><name pos:start="155:33" pos:end="155:43">sector_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="157:5" pos:end="165:5"><if pos:start="157:5" pos:end="165:5">if <condition pos:start="157:8" pos:end="157:16">(<expr pos:start="157:9" pos:end="157:15"><operator pos:start="157:9" pos:end="157:9">!</operator><name pos:start="157:10" pos:end="157:15">buffer</name></expr>)</condition> <block pos:start="157:18" pos:end="165:5">{<block_content pos:start="159:9" pos:end="163:20">

        <expr_stmt pos:start="159:9" pos:end="159:29"><expr pos:start="159:9" pos:end="159:28"><call pos:start="159:9" pos:end="159:28"><name pos:start="159:9" pos:end="159:15">av_free</name><argument_list pos:start="159:16" pos:end="159:28">(<argument pos:start="159:17" pos:end="159:27"><expr pos:start="159:17" pos:end="159:27"><name pos:start="159:17" pos:end="159:27"><name pos:start="159:17" pos:end="159:18">wf</name><operator pos:start="159:19" pos:end="159:20">-&gt;</operator><name pos:start="159:21" pos:end="159:27">sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:20"><expr pos:start="161:9" pos:end="161:19"><call pos:start="161:9" pos:end="161:19"><name pos:start="161:9" pos:end="161:15">av_free</name><argument_list pos:start="161:16" pos:end="161:19">(<argument pos:start="161:17" pos:end="161:18"><expr pos:start="161:17" pos:end="161:18"><name pos:start="161:17" pos:end="161:18">wf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="163:9" pos:end="163:20">return <expr pos:start="163:16" pos:end="163:19"><name pos:start="163:16" pos:end="163:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="169:5" pos:end="171:68"><expr pos:start="169:5" pos:end="171:67"><name pos:start="169:5" pos:end="169:6">pb</name> <operator pos:start="169:8" pos:end="169:8">=</operator> <call pos:start="169:10" pos:end="171:67"><name pos:start="169:10" pos:end="169:27">avio_alloc_context</name><argument_list pos:start="169:28" pos:end="171:67">(<argument pos:start="169:29" pos:end="169:34"><expr pos:start="169:29" pos:end="169:34"><name pos:start="169:29" pos:end="169:34">buffer</name></expr></argument>, <argument pos:start="169:37" pos:end="169:56"><expr pos:start="169:37" pos:end="169:56"><literal type="number" pos:start="169:37" pos:end="169:37">1</literal> <operator pos:start="169:39" pos:end="169:40">&lt;&lt;</operator> <name pos:start="169:42" pos:end="169:56"><name pos:start="169:42" pos:end="169:43">wf</name><operator pos:start="169:44" pos:end="169:45">-&gt;</operator><name pos:start="169:46" pos:end="169:56">sector_bits</name></name></expr></argument>, <argument pos:start="169:59" pos:end="169:59"><expr pos:start="169:59" pos:end="169:59"><literal type="number" pos:start="169:59" pos:end="169:59">0</literal></expr></argument>, <argument pos:start="169:62" pos:end="169:63"><expr pos:start="169:62" pos:end="169:63"><name pos:start="169:62" pos:end="169:63">wf</name></expr></argument>,

                           <argument pos:start="171:28" pos:end="171:46"><expr pos:start="171:28" pos:end="171:46"><name pos:start="171:28" pos:end="171:46">wtvfile_read_packet</name></expr></argument>, <argument pos:start="171:49" pos:end="171:52"><expr pos:start="171:49" pos:end="171:52"><name pos:start="171:49" pos:end="171:52">NULL</name></expr></argument>, <argument pos:start="171:55" pos:end="171:66"><expr pos:start="171:55" pos:end="171:66"><name pos:start="171:55" pos:end="171:66">wtvfile_seek</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="173:5" pos:end="181:5"><if pos:start="173:5" pos:end="181:5">if <condition pos:start="173:8" pos:end="173:12">(<expr pos:start="173:9" pos:end="173:11"><operator pos:start="173:9" pos:end="173:9">!</operator><name pos:start="173:10" pos:end="173:11">pb</name></expr>)</condition> <block pos:start="173:14" pos:end="181:5">{<block_content pos:start="175:9" pos:end="179:20">

        <expr_stmt pos:start="175:9" pos:end="175:24"><expr pos:start="175:9" pos:end="175:23"><call pos:start="175:9" pos:end="175:23"><name pos:start="175:9" pos:end="175:15">av_free</name><argument_list pos:start="175:16" pos:end="175:23">(<argument pos:start="175:17" pos:end="175:22"><expr pos:start="175:17" pos:end="175:22"><name pos:start="175:17" pos:end="175:22">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:29"><expr pos:start="177:9" pos:end="177:28"><call pos:start="177:9" pos:end="177:28"><name pos:start="177:9" pos:end="177:15">av_free</name><argument_list pos:start="177:16" pos:end="177:28">(<argument pos:start="177:17" pos:end="177:27"><expr pos:start="177:17" pos:end="177:27"><name pos:start="177:17" pos:end="177:27"><name pos:start="177:17" pos:end="177:18">wf</name><operator pos:start="177:19" pos:end="177:20">-&gt;</operator><name pos:start="177:21" pos:end="177:27">sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:20"><expr pos:start="179:9" pos:end="179:19"><call pos:start="179:9" pos:end="179:19"><name pos:start="179:9" pos:end="179:15">av_free</name><argument_list pos:start="179:16" pos:end="179:19">(<argument pos:start="179:17" pos:end="179:18"><expr pos:start="179:17" pos:end="179:18"><name pos:start="179:17" pos:end="179:18">wf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="183:5" pos:end="183:14">return <expr pos:start="183:12" pos:end="183:13"><name pos:start="183:12" pos:end="183:13">pb</name></expr>;</return>

</block_content>}</block></function>
</unit>
