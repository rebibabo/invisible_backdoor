<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10607.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">handle_sw_breakpoint</name><parameter_list pos:start="1:32" pos:end="1:66">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:39">S390CPU</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">cpu</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:65"><decl pos:start="1:47" pos:end="1:65"><type pos:start="1:47" pos:end="1:65"><name pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:52">struct</name> <name pos:start="1:54" pos:end="1:60">kvm_run</name></name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">run</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:19">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">CPUS390XState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">env</name> <init pos:start="5:24" pos:end="5:34">= <expr pos:start="5:26" pos:end="5:34"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:34"><name pos:start="5:27" pos:end="5:29">cpu</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:34">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">long</name></type> <name pos:start="7:19" pos:end="7:20">pc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><call pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:25">cpu_synchronize_state</name><argument_list pos:start="11:26" pos:end="11:35">(<argument pos:start="11:27" pos:end="11:34"><expr pos:start="11:27" pos:end="11:34"><call pos:start="11:27" pos:end="11:34"><name pos:start="11:27" pos:end="11:29">CPU</name><argument_list pos:start="11:30" pos:end="11:34">(<argument pos:start="11:31" pos:end="11:33"><expr pos:start="11:31" pos:end="11:33"><name pos:start="11:31" pos:end="11:33">cpu</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:6">pc</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <name pos:start="15:10" pos:end="15:22"><name pos:start="15:10" pos:end="15:12">env</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:17">psw</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:22">addr</name></name> <operator pos:start="15:24" pos:end="15:24">-</operator> <literal type="number" pos:start="15:26" pos:end="15:26">4</literal></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:45">(<expr pos:start="17:9" pos:end="17:44"><call pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:30">kvm_find_sw_breakpoint</name><argument_list pos:start="17:31" pos:end="17:44">(<argument pos:start="17:32" pos:end="17:39"><expr pos:start="17:32" pos:end="17:39"><call pos:start="17:32" pos:end="17:39"><name pos:start="17:32" pos:end="17:34">CPU</name><argument_list pos:start="17:35" pos:end="17:39">(<argument pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:38">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:42" pos:end="17:43"><expr pos:start="17:42" pos:end="17:43"><name pos:start="17:42" pos:end="17:43">pc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:47" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:26">

        <expr_stmt pos:start="19:9" pos:end="19:27"><expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:11">env</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:16">psw</name><operator pos:start="19:17" pos:end="19:17">.</operator><name pos:start="19:18" pos:end="19:21">addr</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <name pos:start="19:25" pos:end="19:26">pc</name></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:26">return <expr pos:start="21:16" pos:end="21:25"><name pos:start="21:16" pos:end="21:25">EXCP_DEBUG</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="27:5" pos:end="27:19">return <expr pos:start="27:12" pos:end="27:18"><operator pos:start="27:12" pos:end="27:12">-</operator><name pos:start="27:13" pos:end="27:18">ENOENT</name></expr>;</return>

</block_content>}</block></function>
</unit>
