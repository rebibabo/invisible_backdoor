<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25563.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">av_thread_message_flush</name><parameter_list pos:start="1:29" pos:end="1:54">(<parameter pos:start="1:30" pos:end="1:53"><decl pos:start="1:30" pos:end="1:53"><type pos:start="1:30" pos:end="1:51"><name pos:start="1:30" pos:end="1:49">AVThreadMessageQueue</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">mq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="7:5" pos:end="30:0">

<cpp:if pos:start="5:1" pos:end="5:16">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:16">HAVE_THREADS</name></expr></cpp:if>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">used</name></decl>, <decl pos:start="7:15" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:17">off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">void</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:19">free_func</name> <init pos:start="9:21" pos:end="9:35">= <expr pos:start="9:23" pos:end="9:35"><name pos:start="9:23" pos:end="9:35"><name pos:start="9:23" pos:end="9:24">mq</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:35">free_func</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><call pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:22">pthread_mutex_lock</name><argument_list pos:start="13:23" pos:end="13:33">(<argument pos:start="13:24" pos:end="13:32"><expr pos:start="13:24" pos:end="13:32"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:32"><name pos:start="13:25" pos:end="13:26">mq</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:32">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:8">used</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:33"><name pos:start="15:12" pos:end="15:23">av_fifo_size</name><argument_list pos:start="15:24" pos:end="15:33">(<argument pos:start="15:25" pos:end="15:32"><expr pos:start="15:25" pos:end="15:32"><name pos:start="15:25" pos:end="15:32"><name pos:start="15:25" pos:end="15:26">mq</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:32">fifo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:83"><if pos:start="17:5" pos:end="21:83">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:17">free_func</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="21:83"><block_content pos:start="19:9" pos:end="21:83">

        <for pos:start="19:9" pos:end="21:83">for <control pos:start="19:13" pos:end="19:52">(<init pos:start="19:14" pos:end="19:21"><expr pos:start="19:14" pos:end="19:20"><name pos:start="19:14" pos:end="19:16">off</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>;</init> <condition pos:start="19:23" pos:end="19:33"><expr pos:start="19:23" pos:end="19:32"><name pos:start="19:23" pos:end="19:25">off</name> <operator pos:start="19:27" pos:end="19:27">&lt;</operator> <name pos:start="19:29" pos:end="19:32">used</name></expr>;</condition> <incr pos:start="19:35" pos:end="19:51"><expr pos:start="19:35" pos:end="19:51"><name pos:start="19:35" pos:end="19:37">off</name> <operator pos:start="19:39" pos:end="19:40">+=</operator> <name pos:start="19:42" pos:end="19:51"><name pos:start="19:42" pos:end="19:43">mq</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:51">elsize</name></name></expr></incr>)</control><block type="pseudo" pos:start="21:13" pos:end="21:83"><block_content pos:start="21:13" pos:end="21:83">

            <expr_stmt pos:start="21:13" pos:end="21:83"><expr pos:start="21:13" pos:end="21:82"><call pos:start="21:13" pos:end="21:82"><name pos:start="21:13" pos:end="21:35">av_fifo_generic_peek_at</name><argument_list pos:start="21:36" pos:end="21:82">(<argument pos:start="21:37" pos:end="21:44"><expr pos:start="21:37" pos:end="21:44"><name pos:start="21:37" pos:end="21:44"><name pos:start="21:37" pos:end="21:38">mq</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:44">fifo</name></name></expr></argument>, <argument pos:start="21:47" pos:end="21:48"><expr pos:start="21:47" pos:end="21:48"><name pos:start="21:47" pos:end="21:48">mq</name></expr></argument>, <argument pos:start="21:51" pos:end="21:53"><expr pos:start="21:51" pos:end="21:53"><name pos:start="21:51" pos:end="21:53">off</name></expr></argument>, <argument pos:start="21:56" pos:end="21:65"><expr pos:start="21:56" pos:end="21:65"><name pos:start="21:56" pos:end="21:65"><name pos:start="21:56" pos:end="21:57">mq</name><operator pos:start="21:58" pos:end="21:59">-&gt;</operator><name pos:start="21:60" pos:end="21:65">elsize</name></name></expr></argument>, <argument pos:start="21:68" pos:end="21:81"><expr pos:start="21:68" pos:end="21:81"><name pos:start="21:68" pos:end="21:81">free_func_wrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><call pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:17">av_fifo_drain</name><argument_list pos:start="23:18" pos:end="23:33">(<argument pos:start="23:19" pos:end="23:26"><expr pos:start="23:19" pos:end="23:26"><name pos:start="23:19" pos:end="23:26"><name pos:start="23:19" pos:end="23:20">mq</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:26">fifo</name></name></expr></argument>, <argument pos:start="23:29" pos:end="23:32"><expr pos:start="23:29" pos:end="23:32"><name pos:start="23:29" pos:end="23:32">used</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><call pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:26">pthread_cond_broadcast</name><argument_list pos:start="25:27" pos:end="25:37">(<argument pos:start="25:28" pos:end="25:36"><expr pos:start="25:28" pos:end="25:36"><operator pos:start="25:28" pos:end="25:28">&amp;</operator><name pos:start="25:29" pos:end="25:36"><name pos:start="25:29" pos:end="25:30">mq</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:36">cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="30:0"><expr pos:start="27:5" pos:end="27:35"><call pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:24">pthread_mutex_unlock</name><argument_list pos:start="27:25" pos:end="27:35">(<argument pos:start="27:26" pos:end="27:34"><expr pos:start="27:26" pos:end="27:34"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:34"><name pos:start="27:27" pos:end="27:28">mq</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:34">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="29:8" pos:end="29:25">/* HAVE_THREADS */</comment>

</block_content>}</block></function>
</unit>
