<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2355.c" pos:tabs="8"><function pos:start="1:1" pos:end="150:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">raise_mmu_exception</name><parameter_list pos:start="1:32" pos:end="3:54">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:44">CPUMIPSState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">env</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:71"><decl pos:start="1:52" pos:end="1:71"><type pos:start="1:52" pos:end="1:71"><name pos:start="1:52" pos:end="1:63">target_ulong</name></type> <name pos:start="1:65" pos:end="1:71">address</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:38"><decl pos:start="3:33" pos:end="3:38"><type pos:start="3:33" pos:end="3:38"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:38">rw</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:53"><decl pos:start="3:41" pos:end="3:53"><type pos:start="3:41" pos:end="3:53"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:53">tlb_error</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="150:1">{<block_content pos:start="7:5" pos:end="148:33">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:45">= <expr pos:start="7:20" pos:end="7:45"><call pos:start="7:20" pos:end="7:45"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:45">(<argument pos:start="7:24" pos:end="7:44"><expr pos:start="7:24" pos:end="7:44"><call pos:start="7:24" pos:end="7:44"><name pos:start="7:24" pos:end="7:39">mips_env_get_cpu</name><argument_list pos:start="7:40" pos:end="7:44">(<argument pos:start="7:41" pos:end="7:43"><expr pos:start="7:41" pos:end="7:43"><name pos:start="7:41" pos:end="7:43">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">exception</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>, <decl pos:start="9:24" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:24" pos:end="9:33">error_code</name> <init pos:start="9:35" pos:end="9:37">= <expr pos:start="9:37" pos:end="9:37"><literal type="number" pos:start="9:37" pos:end="9:37">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:29">(<expr pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:10">rw</name> <operator pos:start="13:12" pos:end="13:13">==</operator> <name pos:start="13:15" pos:end="13:28">MMU_INST_FETCH</name></expr>)</condition> <block pos:start="13:31" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:41">

        <expr_stmt pos:start="15:9" pos:end="15:41"><expr pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:18">error_code</name> <operator pos:start="15:20" pos:end="15:21">|=</operator> <name pos:start="15:23" pos:end="15:40">EXCP_INST_NOTAVAIL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="21:5" pos:end="117:5">switch <condition pos:start="21:12" pos:end="21:22">(<expr pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:21">tlb_error</name></expr>)</condition> <block pos:start="21:24" pos:end="117:5">{<block_content pos:start="23:5" pos:end="115:14">

    <default pos:start="23:5" pos:end="23:12">default:</default>

    <case pos:start="25:5" pos:end="25:24">case <expr pos:start="25:10" pos:end="25:23"><name pos:start="25:10" pos:end="25:23">TLBRET_BADADDR</name></expr>:</case>

        <comment type="block" pos:start="27:9" pos:end="27:75">/* Reference to kernel address from user mode or supervisor mode */</comment>

        <comment type="block" pos:start="29:9" pos:end="29:60">/* Reference to supervisor address from user mode */</comment>

        <if_stmt pos:start="31:9" pos:end="39:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:33">(<expr pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:14">rw</name> <operator pos:start="31:16" pos:end="31:17">==</operator> <name pos:start="31:19" pos:end="31:32">MMU_DATA_STORE</name></expr>)</condition> <block pos:start="31:35" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:34">

            <expr_stmt pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:21">exception</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:33">EXCP_AdES</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="35:11" pos:end="39:9">else <block pos:start="35:16" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:34">

            <expr_stmt pos:start="37:13" pos:end="37:34"><expr pos:start="37:13" pos:end="37:33"><name pos:start="37:13" pos:end="37:21">exception</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:33">EXCP_AdEL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:24">case <expr pos:start="43:10" pos:end="43:23"><name pos:start="43:10" pos:end="43:23">TLBRET_NOMATCH</name></expr>:</case>

        <comment type="block" pos:start="45:9" pos:end="45:47">/* No TLB match for a mapped address */</comment>

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:33">(<expr pos:start="47:13" pos:end="47:32"><name pos:start="47:13" pos:end="47:14">rw</name> <operator pos:start="47:16" pos:end="47:17">==</operator> <name pos:start="47:19" pos:end="47:32">MMU_DATA_STORE</name></expr>)</condition> <block pos:start="47:35" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:34">

            <expr_stmt pos:start="49:13" pos:end="49:34"><expr pos:start="49:13" pos:end="49:33"><name pos:start="49:13" pos:end="49:21">exception</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <name pos:start="49:25" pos:end="49:33">EXCP_TLBS</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="55:9">else <block pos:start="51:16" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:34">

            <expr_stmt pos:start="53:13" pos:end="53:34"><expr pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:21">exception</name> <operator pos:start="53:23" pos:end="53:23">=</operator> <name pos:start="53:25" pos:end="53:33">EXCP_TLBL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:39"><expr pos:start="57:9" pos:end="57:38"><name pos:start="57:9" pos:end="57:18">error_code</name> <operator pos:start="57:20" pos:end="57:21">|=</operator> <name pos:start="57:23" pos:end="57:38">EXCP_TLB_NOMATCH</name></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:24">case <expr pos:start="61:10" pos:end="61:23"><name pos:start="61:10" pos:end="61:23">TLBRET_INVALID</name></expr>:</case>

        <comment type="block" pos:start="63:9" pos:end="63:41">/* TLB match with no valid bit */</comment>

        <if_stmt pos:start="65:9" pos:end="73:9"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="65:33">(<expr pos:start="65:13" pos:end="65:32"><name pos:start="65:13" pos:end="65:14">rw</name> <operator pos:start="65:16" pos:end="65:17">==</operator> <name pos:start="65:19" pos:end="65:32">MMU_DATA_STORE</name></expr>)</condition> <block pos:start="65:35" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:34">

            <expr_stmt pos:start="67:13" pos:end="67:34"><expr pos:start="67:13" pos:end="67:33"><name pos:start="67:13" pos:end="67:21">exception</name> <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:33">EXCP_TLBS</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="73:9">else <block pos:start="69:16" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:34">

            <expr_stmt pos:start="71:13" pos:end="71:34"><expr pos:start="71:13" pos:end="71:33"><name pos:start="71:13" pos:end="71:21">exception</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <name pos:start="71:25" pos:end="71:33">EXCP_TLBL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:22">case <expr pos:start="77:10" pos:end="77:21"><name pos:start="77:10" pos:end="77:21">TLBRET_DIRTY</name></expr>:</case>

        <comment type="block" pos:start="79:9" pos:end="79:46">/* TLB match but 'D' bit is cleared */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:31"><expr pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:17">exception</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <name pos:start="81:21" pos:end="81:30">EXCP_LTLBL</name></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:19">case <expr pos:start="85:10" pos:end="85:18"><name pos:start="85:10" pos:end="85:18">TLBRET_XI</name></expr>:</case>

        <comment type="block" pos:start="87:9" pos:end="87:39">/* Execute-Inhibit Exception */</comment>

        <if_stmt pos:start="89:9" pos:end="97:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:50">(<expr pos:start="89:13" pos:end="89:49"><name pos:start="89:13" pos:end="89:30"><name pos:start="89:13" pos:end="89:15">env</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:30">CP0_PageGrain</name></name> <operator pos:start="89:32" pos:end="89:32">&amp;</operator> <operator pos:start="89:34" pos:end="89:34">(</operator><literal type="number" pos:start="89:35" pos:end="89:35">1</literal> <operator pos:start="89:37" pos:end="89:38">&lt;&lt;</operator> <name pos:start="89:40" pos:end="89:48">CP0PG_IEC</name><operator pos:start="89:49" pos:end="89:49">)</operator></expr>)</condition> <block pos:start="89:52" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:35">

            <expr_stmt pos:start="91:13" pos:end="91:35"><expr pos:start="91:13" pos:end="91:34"><name pos:start="91:13" pos:end="91:21">exception</name> <operator pos:start="91:23" pos:end="91:23">=</operator> <name pos:start="91:25" pos:end="91:34">EXCP_TLBXI</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="93:11" pos:end="97:9">else <block pos:start="93:16" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:34">

            <expr_stmt pos:start="95:13" pos:end="95:34"><expr pos:start="95:13" pos:end="95:33"><name pos:start="95:13" pos:end="95:21">exception</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <name pos:start="95:25" pos:end="95:33">EXCP_TLBL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:19">case <expr pos:start="101:10" pos:end="101:18"><name pos:start="101:10" pos:end="101:18">TLBRET_RI</name></expr>:</case>

        <comment type="block" pos:start="103:9" pos:end="103:36">/* Read-Inhibit Exception */</comment>

        <if_stmt pos:start="105:9" pos:end="113:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:50">(<expr pos:start="105:13" pos:end="105:49"><name pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:15">env</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:30">CP0_PageGrain</name></name> <operator pos:start="105:32" pos:end="105:32">&amp;</operator> <operator pos:start="105:34" pos:end="105:34">(</operator><literal type="number" pos:start="105:35" pos:end="105:35">1</literal> <operator pos:start="105:37" pos:end="105:38">&lt;&lt;</operator> <name pos:start="105:40" pos:end="105:48">CP0PG_IEC</name><operator pos:start="105:49" pos:end="105:49">)</operator></expr>)</condition> <block pos:start="105:52" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:35">

            <expr_stmt pos:start="107:13" pos:end="107:35"><expr pos:start="107:13" pos:end="107:34"><name pos:start="107:13" pos:end="107:21">exception</name> <operator pos:start="107:23" pos:end="107:23">=</operator> <name pos:start="107:25" pos:end="107:34">EXCP_TLBRI</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="113:9">else <block pos:start="109:16" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:34">

            <expr_stmt pos:start="111:13" pos:end="111:34"><expr pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:21">exception</name> <operator pos:start="111:23" pos:end="111:23">=</operator> <name pos:start="111:25" pos:end="111:33">EXCP_TLBL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    </block_content>}</block></switch>

    <comment type="block" pos:start="119:5" pos:end="119:25">/* Raise exception */</comment>

    <expr_stmt pos:start="121:5" pos:end="121:32"><expr pos:start="121:5" pos:end="121:31"><name pos:start="121:5" pos:end="121:21"><name pos:start="121:5" pos:end="121:7">env</name><operator pos:start="121:8" pos:end="121:9">-&gt;</operator><name pos:start="121:10" pos:end="121:21">CP0_BadVAddr</name></name> <operator pos:start="121:23" pos:end="121:23">=</operator> <name pos:start="121:25" pos:end="121:31">address</name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="125:53"><expr pos:start="123:5" pos:end="125:52"><name pos:start="123:5" pos:end="123:20"><name pos:start="123:5" pos:end="123:7">env</name><operator pos:start="123:8" pos:end="123:9">-&gt;</operator><name pos:start="123:10" pos:end="123:20">CP0_Context</name></name> <operator pos:start="123:22" pos:end="123:22">=</operator> <operator pos:start="123:24" pos:end="123:24">(</operator><name pos:start="123:25" pos:end="123:40"><name pos:start="123:25" pos:end="123:27">env</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:40">CP0_Context</name></name> <operator pos:start="123:42" pos:end="123:42">&amp;</operator> <operator pos:start="123:44" pos:end="123:44">~</operator><literal type="number" pos:start="123:45" pos:end="123:54">0x007fffff</literal><operator pos:start="123:55" pos:end="123:55">)</operator> <operator pos:start="123:57" pos:end="123:57">|</operator>

                       <operator pos:start="125:24" pos:end="125:24">(</operator><operator pos:start="125:25" pos:end="125:25">(</operator><name pos:start="125:26" pos:end="125:32">address</name> <operator pos:start="125:34" pos:end="125:35">&gt;&gt;</operator> <literal type="number" pos:start="125:37" pos:end="125:37">9</literal><operator pos:start="125:38" pos:end="125:38">)</operator> <operator pos:start="125:40" pos:end="125:40">&amp;</operator> <literal type="number" pos:start="125:42" pos:end="125:51">0x007ffff0</literal><operator pos:start="125:52" pos:end="125:52">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="133:0"><expr pos:start="127:5" pos:end="130:58"><name pos:start="127:5" pos:end="127:20"><name pos:start="127:5" pos:end="127:7">env</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:20">CP0_EntryHi</name></name> <operator pos:start="127:22" pos:end="127:22">=</operator> <operator pos:start="127:24" pos:end="127:24">(</operator><name pos:start="127:25" pos:end="127:40"><name pos:start="127:25" pos:end="127:27">env</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:40">CP0_EntryHi</name></name> <operator pos:start="127:42" pos:end="127:42">&amp;</operator> <name pos:start="127:44" pos:end="127:69"><name pos:start="127:44" pos:end="127:46">env</name><operator pos:start="127:47" pos:end="127:48">-&gt;</operator><name pos:start="127:49" pos:end="127:69">CP0_EntryHi_ASID_mask</name></name><operator pos:start="127:70" pos:end="127:70">)</operator> <operator pos:start="127:72" pos:end="127:72">|</operator>


                       <operator pos:start="130:24" pos:end="130:24">(</operator><name pos:start="130:25" pos:end="130:31">address</name> <operator pos:start="130:33" pos:end="130:33">&amp;</operator> <operator pos:start="130:35" pos:end="130:35">(</operator><name pos:start="130:36" pos:end="130:51">TARGET_PAGE_MASK</name> <operator pos:start="130:53" pos:end="130:54">&lt;&lt;</operator> <literal type="number" pos:start="130:56" pos:end="130:56">1</literal><operator pos:start="130:57" pos:end="130:57">)</operator><operator pos:start="130:58" pos:end="130:58">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="132:1" pos:end="132:26">#<cpp:directive pos:start="132:2" pos:end="132:3">if</cpp:directive> <expr pos:start="132:5" pos:end="132:26"><call pos:start="132:5" pos:end="132:26"><name pos:start="132:5" pos:end="132:11">defined</name><argument_list pos:start="132:12" pos:end="132:26">(<argument pos:start="132:13" pos:end="132:25"><expr pos:start="132:13" pos:end="132:25"><name pos:start="132:13" pos:end="132:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="134:5" pos:end="134:37"><expr pos:start="134:5" pos:end="134:36"><name pos:start="134:5" pos:end="134:20"><name pos:start="134:5" pos:end="134:7">env</name><operator pos:start="134:8" pos:end="134:9">-&gt;</operator><name pos:start="134:10" pos:end="134:20">CP0_EntryHi</name></name> <operator pos:start="134:22" pos:end="134:23">&amp;=</operator> <name pos:start="134:25" pos:end="134:36"><name pos:start="134:25" pos:end="134:27">env</name><operator pos:start="134:28" pos:end="134:29">-&gt;</operator><name pos:start="134:30" pos:end="134:36">SEGMask</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="136:5" pos:end="145:0"><expr pos:start="136:5" pos:end="142:72"><name pos:start="136:5" pos:end="136:21"><name pos:start="136:5" pos:end="136:7">env</name><operator pos:start="136:8" pos:end="136:9">-&gt;</operator><name pos:start="136:10" pos:end="136:21">CP0_XContext</name></name> <operator pos:start="136:23" pos:end="136:23">=</operator>

        <comment type="block" pos:start="138:9" pos:end="138:21">/* PTEBase */</comment>   <operator pos:start="138:25" pos:end="138:25">(</operator><name pos:start="138:26" pos:end="138:42"><name pos:start="138:26" pos:end="138:28">env</name><operator pos:start="138:29" pos:end="138:30">-&gt;</operator><name pos:start="138:31" pos:end="138:42">CP0_XContext</name></name> <operator pos:start="138:44" pos:end="138:44">&amp;</operator> <operator pos:start="138:46" pos:end="138:46">(</operator><operator pos:start="138:47" pos:end="138:47">(</operator><operator pos:start="138:48" pos:end="138:48">~</operator><literal type="number" pos:start="138:49" pos:end="138:52">0ULL</literal><operator pos:start="138:53" pos:end="138:53">)</operator> <operator pos:start="138:55" pos:end="138:56">&lt;&lt;</operator> <operator pos:start="138:58" pos:end="138:58">(</operator><name pos:start="138:59" pos:end="138:70"><name pos:start="138:59" pos:end="138:61">env</name><operator pos:start="138:62" pos:end="138:63">-&gt;</operator><name pos:start="138:64" pos:end="138:70">SEGBITS</name></name> <operator pos:start="138:72" pos:end="138:72">-</operator> <literal type="number" pos:start="138:74" pos:end="138:74">7</literal><operator pos:start="138:75" pos:end="138:75">)</operator><operator pos:start="138:76" pos:end="138:76">)</operator><operator pos:start="138:77" pos:end="138:77">)</operator> <operator pos:start="138:79" pos:end="138:79">|</operator>

        <comment type="block" pos:start="140:9" pos:end="140:15">/* R */</comment>         <operator pos:start="140:25" pos:end="140:25">(</operator><call pos:start="140:26" pos:end="140:50"><name pos:start="140:26" pos:end="140:34">extract64</name><argument_list pos:start="140:35" pos:end="140:50">(<argument pos:start="140:36" pos:end="140:42"><expr pos:start="140:36" pos:end="140:42"><name pos:start="140:36" pos:end="140:42">address</name></expr></argument>, <argument pos:start="140:45" pos:end="140:46"><expr pos:start="140:45" pos:end="140:46"><literal type="number" pos:start="140:45" pos:end="140:46">62</literal></expr></argument>, <argument pos:start="140:49" pos:end="140:49"><expr pos:start="140:49" pos:end="140:49"><literal type="number" pos:start="140:49" pos:end="140:49">2</literal></expr></argument>)</argument_list></call> <operator pos:start="140:52" pos:end="140:53">&lt;&lt;</operator> <operator pos:start="140:55" pos:end="140:55">(</operator><name pos:start="140:56" pos:end="140:67"><name pos:start="140:56" pos:end="140:58">env</name><operator pos:start="140:59" pos:end="140:60">-&gt;</operator><name pos:start="140:61" pos:end="140:67">SEGBITS</name></name> <operator pos:start="140:69" pos:end="140:69">-</operator> <literal type="number" pos:start="140:71" pos:end="140:71">9</literal><operator pos:start="140:72" pos:end="140:72">)</operator><operator pos:start="140:73" pos:end="140:73">)</operator> <operator pos:start="140:75" pos:end="140:75">|</operator>

        <comment type="block" pos:start="142:9" pos:end="142:21">/* BadVPN2 */</comment>   <operator pos:start="142:25" pos:end="142:25">(</operator><call pos:start="142:26" pos:end="142:66"><name pos:start="142:26" pos:end="142:34">extract64</name><argument_list pos:start="142:35" pos:end="142:66">(<argument pos:start="142:36" pos:end="142:42"><expr pos:start="142:36" pos:end="142:42"><name pos:start="142:36" pos:end="142:42">address</name></expr></argument>, <argument pos:start="142:45" pos:end="142:46"><expr pos:start="142:45" pos:end="142:46"><literal type="number" pos:start="142:45" pos:end="142:46">13</literal></expr></argument>, <argument pos:start="142:49" pos:end="142:65"><expr pos:start="142:49" pos:end="142:65"><name pos:start="142:49" pos:end="142:60"><name pos:start="142:49" pos:end="142:51">env</name><operator pos:start="142:52" pos:end="142:53">-&gt;</operator><name pos:start="142:54" pos:end="142:60">SEGBITS</name></name> <operator pos:start="142:62" pos:end="142:62">-</operator> <literal type="number" pos:start="142:64" pos:end="142:65">13</literal></expr></argument>)</argument_list></call> <operator pos:start="142:68" pos:end="142:69">&lt;&lt;</operator> <literal type="number" pos:start="142:71" pos:end="142:71">4</literal><operator pos:start="142:72" pos:end="142:72">)</operator></expr>;</expr_stmt>

<cpp:endif pos:start="144:1" pos:end="144:6">#<cpp:directive pos:start="144:2" pos:end="144:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="146:5" pos:end="146:36"><expr pos:start="146:5" pos:end="146:35"><name pos:start="146:5" pos:end="146:23"><name pos:start="146:5" pos:end="146:6">cs</name><operator pos:start="146:7" pos:end="146:8">-&gt;</operator><name pos:start="146:9" pos:end="146:23">exception_index</name></name> <operator pos:start="146:25" pos:end="146:25">=</operator> <name pos:start="146:27" pos:end="146:35">exception</name></expr>;</expr_stmt>

    <expr_stmt pos:start="148:5" pos:end="148:33"><expr pos:start="148:5" pos:end="148:32"><name pos:start="148:5" pos:end="148:19"><name pos:start="148:5" pos:end="148:7">env</name><operator pos:start="148:8" pos:end="148:9">-&gt;</operator><name pos:start="148:10" pos:end="148:19">error_code</name></name> <operator pos:start="148:21" pos:end="148:21">=</operator> <name pos:start="148:23" pos:end="148:32">error_code</name></expr>;</expr_stmt>

</block_content>}</block></function></unit>
