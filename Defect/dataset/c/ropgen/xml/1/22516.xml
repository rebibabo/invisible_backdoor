<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22516.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">usb_hid_handle_data</name><parameter_list pos:start="1:31" pos:end="1:60">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:40">USBDevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:56">USBPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:15">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">USBHIDState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:39">= <expr pos:start="5:22" pos:end="5:39"><operator pos:start="5:22" pos:end="5:22">(</operator><name pos:start="5:23" pos:end="5:33">USBHIDState</name> <operator pos:start="5:35" pos:end="5:35">*</operator><operator pos:start="5:36" pos:end="5:36">)</operator><name pos:start="5:37" pos:end="5:39">dev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="57:5">switch<condition pos:start="11:11" pos:end="11:18">(<expr pos:start="11:12" pos:end="11:17"><name pos:start="11:12" pos:end="11:17"><name pos:start="11:12" pos:end="11:12">p</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:17">pid</name></name></expr>)</condition> <block pos:start="11:20" pos:end="57:5">{<block_content pos:start="13:5" pos:end="55:14">

    <case pos:start="13:5" pos:end="13:22">case <expr pos:start="13:10" pos:end="13:21"><name pos:start="13:10" pos:end="13:21">USB_TOKEN_IN</name></expr>:</case>

        <if_stmt pos:start="15:9" pos:end="43:9"><if pos:start="15:9" pos:end="39:9">if <condition pos:start="15:12" pos:end="15:26">(<expr pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:13">p</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:20">devep</name></name> <operator pos:start="15:22" pos:end="15:23">==</operator> <literal type="number" pos:start="15:25" pos:end="15:25">1</literal></expr>)</condition> <block pos:start="15:28" pos:end="39:9">{<block_content pos:start="17:13" pos:end="37:34">

            <decl_stmt pos:start="17:13" pos:end="17:58"><decl pos:start="17:13" pos:end="17:57"><type pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:19">int64_t</name></type> <name pos:start="17:21" pos:end="17:27">curtime</name> <init pos:start="17:29" pos:end="17:57">= <expr pos:start="17:31" pos:end="17:57"><call pos:start="17:31" pos:end="17:57"><name pos:start="17:31" pos:end="17:47">qemu_get_clock_ns</name><argument_list pos:start="17:48" pos:end="17:57">(<argument pos:start="17:49" pos:end="17:56"><expr pos:start="17:49" pos:end="17:56"><name pos:start="17:49" pos:end="17:56">vm_clock</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="19:13" pos:end="21:35"><if pos:start="19:13" pos:end="21:35">if <condition pos:start="19:16" pos:end="19:78">(<expr pos:start="19:17" pos:end="19:77"><operator pos:start="19:17" pos:end="19:17">!</operator><name pos:start="19:18" pos:end="19:27"><name pos:start="19:18" pos:end="19:18">s</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:27">changed</name></name> <operator pos:start="19:29" pos:end="19:30">&amp;&amp;</operator> <operator pos:start="19:32" pos:end="19:32">(</operator><operator pos:start="19:33" pos:end="19:33">!</operator><name pos:start="19:34" pos:end="19:40"><name pos:start="19:34" pos:end="19:34">s</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:40">idle</name></name> <operator pos:start="19:42" pos:end="19:43">||</operator> <name pos:start="19:45" pos:end="19:62"><name pos:start="19:45" pos:end="19:45">s</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:62">next_idle_clock</name></name> <operator pos:start="19:64" pos:end="19:64">-</operator> <name pos:start="19:66" pos:end="19:72">curtime</name> <operator pos:start="19:74" pos:end="19:74">&gt;</operator> <literal type="number" pos:start="19:76" pos:end="19:76">0</literal><operator pos:start="19:77" pos:end="19:77">)</operator></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:35"><block_content pos:start="21:17" pos:end="21:35">

                <return pos:start="21:17" pos:end="21:35">return <expr pos:start="21:24" pos:end="21:34"><name pos:start="21:24" pos:end="21:34">USB_RET_NAK</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:46"><expr pos:start="23:13" pos:end="23:45"><call pos:start="23:13" pos:end="23:45"><name pos:start="23:13" pos:end="23:33">usb_hid_set_next_idle</name><argument_list pos:start="23:34" pos:end="23:45">(<argument pos:start="23:35" pos:end="23:35"><expr pos:start="23:35" pos:end="23:35"><name pos:start="23:35" pos:end="23:35">s</name></expr></argument>, <argument pos:start="23:38" pos:end="23:44"><expr pos:start="23:38" pos:end="23:44"><name pos:start="23:38" pos:end="23:44">curtime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="35:13"><if pos:start="25:13" pos:end="29:13">if <condition pos:start="25:16" pos:end="25:62">(<expr pos:start="25:17" pos:end="25:61"><name pos:start="25:17" pos:end="25:23"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:23">kind</name></name> <operator pos:start="25:25" pos:end="25:26">==</operator> <name pos:start="25:28" pos:end="25:36">USB_MOUSE</name> <operator pos:start="25:38" pos:end="25:39">||</operator> <name pos:start="25:41" pos:end="25:47"><name pos:start="25:41" pos:end="25:41">s</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:47">kind</name></name> <operator pos:start="25:49" pos:end="25:50">==</operator> <name pos:start="25:52" pos:end="25:61">USB_TABLET</name></expr>)</condition> <block pos:start="25:64" pos:end="29:13">{<block_content pos:start="27:17" pos:end="27:59">

                <expr_stmt pos:start="27:17" pos:end="27:59"><expr pos:start="27:17" pos:end="27:58"><name pos:start="27:17" pos:end="27:19">ret</name> <operator pos:start="27:21" pos:end="27:21">=</operator> <call pos:start="27:23" pos:end="27:58"><name pos:start="27:23" pos:end="27:38">usb_pointer_poll</name><argument_list pos:start="27:39" pos:end="27:58">(<argument pos:start="27:40" pos:end="27:40"><expr pos:start="27:40" pos:end="27:40"><name pos:start="27:40" pos:end="27:40">s</name></expr></argument>, <argument pos:start="27:43" pos:end="27:49"><expr pos:start="27:43" pos:end="27:49"><name pos:start="27:43" pos:end="27:49"><name pos:start="27:43" pos:end="27:43">p</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:49">data</name></name></expr></argument>, <argument pos:start="27:52" pos:end="27:57"><expr pos:start="27:52" pos:end="27:57"><name pos:start="27:52" pos:end="27:57"><name pos:start="27:52" pos:end="27:52">p</name><operator pos:start="27:53" pos:end="27:54">-&gt;</operator><name pos:start="27:55" pos:end="27:57">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if>

            <if type="elseif" pos:start="31:13" pos:end="35:13">else if <condition pos:start="31:21" pos:end="31:45">(<expr pos:start="31:22" pos:end="31:44"><name pos:start="31:22" pos:end="31:28"><name pos:start="31:22" pos:end="31:22">s</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:28">kind</name></name> <operator pos:start="31:30" pos:end="31:31">==</operator> <name pos:start="31:33" pos:end="31:44">USB_KEYBOARD</name></expr>)</condition> <block pos:start="31:47" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:60">

                <expr_stmt pos:start="33:17" pos:end="33:60"><expr pos:start="33:17" pos:end="33:59"><name pos:start="33:17" pos:end="33:19">ret</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <call pos:start="33:23" pos:end="33:59"><name pos:start="33:23" pos:end="33:39">usb_keyboard_poll</name><argument_list pos:start="33:40" pos:end="33:59">(<argument pos:start="33:41" pos:end="33:41"><expr pos:start="33:41" pos:end="33:41"><name pos:start="33:41" pos:end="33:41">s</name></expr></argument>, <argument pos:start="33:44" pos:end="33:50"><expr pos:start="33:44" pos:end="33:50"><name pos:start="33:44" pos:end="33:50"><name pos:start="33:44" pos:end="33:44">p</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:50">data</name></name></expr></argument>, <argument pos:start="33:53" pos:end="33:58"><expr pos:start="33:53" pos:end="33:58"><name pos:start="33:53" pos:end="33:58"><name pos:start="33:53" pos:end="33:53">p</name><operator pos:start="33:54" pos:end="33:55">-&gt;</operator><name pos:start="33:56" pos:end="33:58">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:34"><expr pos:start="37:13" pos:end="37:33"><name pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:22">changed</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:29"><name pos:start="37:26" pos:end="37:26">s</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:29">n</name></name> <operator pos:start="37:31" pos:end="37:31">&gt;</operator> <literal type="number" pos:start="37:33" pos:end="37:33">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="43:9">else <block pos:start="39:16" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:22">

            <goto pos:start="41:13" pos:end="41:22">goto <name pos:start="41:18" pos:end="41:21">fail</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:23">case <expr pos:start="47:10" pos:end="47:22"><name pos:start="47:10" pos:end="47:22">USB_TOKEN_OUT</name></expr>:</case>

    <default pos:start="49:5" pos:end="49:12">default:</default>

    <label pos:start="51:5" pos:end="51:9"><name pos:start="51:5" pos:end="51:8">fail</name>:</label>

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:27">USB_RET_STALL</name></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="59:5" pos:end="59:15">return <expr pos:start="59:12" pos:end="59:14"><name pos:start="59:12" pos:end="59:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
