<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14380.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">test_endianness</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:41">gconstpointer</name></type> <name pos:start="1:43" pos:end="1:46">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="147:1">{<block_content pos:start="5:5" pos:end="145:17">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:20"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:18">TestCase</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">test</name> <init pos:start="5:26" pos:end="5:31">= <expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">args</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="17:48"><expr pos:start="11:5" pos:end="17:47"><name pos:start="11:5" pos:end="11:8">args</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="17:47"><name pos:start="11:12" pos:end="11:26">g_strdup_printf</name><argument_list pos:start="11:27" pos:end="17:47">(<argument pos:start="11:28" pos:end="11:71"><expr pos:start="11:28" pos:end="11:71"><literal type="string" pos:start="11:28" pos:end="11:71">"-display none -M %s%s%s -device pc-testdev"</literal></expr></argument>,

                           <argument pos:start="13:28" pos:end="13:40"><expr pos:start="13:28" pos:end="13:40"><name pos:start="13:28" pos:end="13:40"><name pos:start="13:28" pos:end="13:31">test</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:40">machine</name></name></expr></argument>,

                           <argument pos:start="15:28" pos:end="15:59"><expr pos:start="15:28" pos:end="15:59"><ternary pos:start="15:28" pos:end="15:59"><condition pos:start="15:28" pos:end="15:42"><expr pos:start="15:28" pos:end="15:40"><name pos:start="15:28" pos:end="15:40"><name pos:start="15:28" pos:end="15:31">test</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:40">superio</name></name></expr> ?</condition><then pos:start="15:44" pos:end="15:54"> <expr pos:start="15:44" pos:end="15:54"><literal type="string" pos:start="15:44" pos:end="15:54">" -device "</literal></expr> </then><else pos:start="15:56" pos:end="15:59">: <expr pos:start="15:58" pos:end="15:59"><literal type="string" pos:start="15:58" pos:end="15:59">""</literal></expr></else></ternary></expr></argument>,

                           <argument pos:start="17:28" pos:end="17:46"><expr pos:start="17:28" pos:end="17:46"><ternary pos:start="17:28" pos:end="17:46"><condition pos:start="17:28" pos:end="17:42"><expr pos:start="17:28" pos:end="17:40"><name pos:start="17:28" pos:end="17:40"><name pos:start="17:28" pos:end="17:31">test</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:40">superio</name></name></expr> ?</condition><then/><else pos:start="17:43" pos:end="17:46">: <expr pos:start="17:45" pos:end="17:46"><literal type="string" pos:start="17:45" pos:end="17:46">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><call pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:15">qtest_start</name><argument_list pos:start="19:16" pos:end="19:21">(<argument pos:start="19:17" pos:end="19:20"><expr pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:20">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><call pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:12">isa_outl</name><argument_list pos:start="21:13" pos:end="21:36">(<argument pos:start="21:14" pos:end="21:17"><expr pos:start="21:14" pos:end="21:17"><name pos:start="21:14" pos:end="21:17">test</name></expr></argument>, <argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><literal type="number" pos:start="21:20" pos:end="21:23">0xe0</literal></expr></argument>, <argument pos:start="21:26" pos:end="21:35"><expr pos:start="21:26" pos:end="21:35"><literal type="number" pos:start="21:26" pos:end="21:35">0x87654321</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:57"><expr pos:start="23:5" pos:end="23:56"><call pos:start="23:5" pos:end="23:56"><name pos:start="23:5" pos:end="23:19">g_assert_cmphex</name><argument_list pos:start="23:20" pos:end="23:56">(<argument pos:start="23:21" pos:end="23:39"><expr pos:start="23:21" pos:end="23:39"><call pos:start="23:21" pos:end="23:39"><name pos:start="23:21" pos:end="23:27">isa_inl</name><argument_list pos:start="23:28" pos:end="23:39">(<argument pos:start="23:29" pos:end="23:32"><expr pos:start="23:29" pos:end="23:32"><name pos:start="23:29" pos:end="23:32">test</name></expr></argument>, <argument pos:start="23:35" pos:end="23:38"><expr pos:start="23:35" pos:end="23:38"><literal type="number" pos:start="23:35" pos:end="23:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:42" pos:end="23:43"><expr pos:start="23:42" pos:end="23:43"><operator pos:start="23:42" pos:end="23:43">==</operator></expr></argument>, <argument pos:start="23:46" pos:end="23:55"><expr pos:start="23:46" pos:end="23:55"><literal type="number" pos:start="23:46" pos:end="23:55">0x87654321</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:53"><expr pos:start="25:5" pos:end="25:52"><call pos:start="25:5" pos:end="25:52"><name pos:start="25:5" pos:end="25:19">g_assert_cmphex</name><argument_list pos:start="25:20" pos:end="25:52">(<argument pos:start="25:21" pos:end="25:39"><expr pos:start="25:21" pos:end="25:39"><call pos:start="25:21" pos:end="25:39"><name pos:start="25:21" pos:end="25:27">isa_inw</name><argument_list pos:start="25:28" pos:end="25:39">(<argument pos:start="25:29" pos:end="25:32"><expr pos:start="25:29" pos:end="25:32"><name pos:start="25:29" pos:end="25:32">test</name></expr></argument>, <argument pos:start="25:35" pos:end="25:38"><expr pos:start="25:35" pos:end="25:38"><literal type="number" pos:start="25:35" pos:end="25:38">0xe2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:42" pos:end="25:43"><expr pos:start="25:42" pos:end="25:43"><operator pos:start="25:42" pos:end="25:43">==</operator></expr></argument>, <argument pos:start="25:46" pos:end="25:51"><expr pos:start="25:46" pos:end="25:51"><literal type="number" pos:start="25:46" pos:end="25:51">0x8765</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><call pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:19">g_assert_cmphex</name><argument_list pos:start="27:20" pos:end="27:52">(<argument pos:start="27:21" pos:end="27:39"><expr pos:start="27:21" pos:end="27:39"><call pos:start="27:21" pos:end="27:39"><name pos:start="27:21" pos:end="27:27">isa_inw</name><argument_list pos:start="27:28" pos:end="27:39">(<argument pos:start="27:29" pos:end="27:32"><expr pos:start="27:29" pos:end="27:32"><name pos:start="27:29" pos:end="27:32">test</name></expr></argument>, <argument pos:start="27:35" pos:end="27:38"><expr pos:start="27:35" pos:end="27:38"><literal type="number" pos:start="27:35" pos:end="27:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:42" pos:end="27:43"><expr pos:start="27:42" pos:end="27:43"><operator pos:start="27:42" pos:end="27:43">==</operator></expr></argument>, <argument pos:start="27:46" pos:end="27:51"><expr pos:start="27:46" pos:end="27:51"><literal type="number" pos:start="27:46" pos:end="27:51">0x4321</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:51"><expr pos:start="29:5" pos:end="29:50"><call pos:start="29:5" pos:end="29:50"><name pos:start="29:5" pos:end="29:19">g_assert_cmphex</name><argument_list pos:start="29:20" pos:end="29:50">(<argument pos:start="29:21" pos:end="29:39"><expr pos:start="29:21" pos:end="29:39"><call pos:start="29:21" pos:end="29:39"><name pos:start="29:21" pos:end="29:27">isa_inb</name><argument_list pos:start="29:28" pos:end="29:39">(<argument pos:start="29:29" pos:end="29:32"><expr pos:start="29:29" pos:end="29:32"><name pos:start="29:29" pos:end="29:32">test</name></expr></argument>, <argument pos:start="29:35" pos:end="29:38"><expr pos:start="29:35" pos:end="29:38"><literal type="number" pos:start="29:35" pos:end="29:38">0xe3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:42" pos:end="29:43"><expr pos:start="29:42" pos:end="29:43"><operator pos:start="29:42" pos:end="29:43">==</operator></expr></argument>, <argument pos:start="29:46" pos:end="29:49"><expr pos:start="29:46" pos:end="29:49"><literal type="number" pos:start="29:46" pos:end="29:49">0x87</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:51"><expr pos:start="31:5" pos:end="31:50"><call pos:start="31:5" pos:end="31:50"><name pos:start="31:5" pos:end="31:19">g_assert_cmphex</name><argument_list pos:start="31:20" pos:end="31:50">(<argument pos:start="31:21" pos:end="31:39"><expr pos:start="31:21" pos:end="31:39"><call pos:start="31:21" pos:end="31:39"><name pos:start="31:21" pos:end="31:27">isa_inb</name><argument_list pos:start="31:28" pos:end="31:39">(<argument pos:start="31:29" pos:end="31:32"><expr pos:start="31:29" pos:end="31:32"><name pos:start="31:29" pos:end="31:32">test</name></expr></argument>, <argument pos:start="31:35" pos:end="31:38"><expr pos:start="31:35" pos:end="31:38"><literal type="number" pos:start="31:35" pos:end="31:38">0xe2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:42" pos:end="31:43"><expr pos:start="31:42" pos:end="31:43"><operator pos:start="31:42" pos:end="31:43">==</operator></expr></argument>, <argument pos:start="31:46" pos:end="31:49"><expr pos:start="31:46" pos:end="31:49"><literal type="number" pos:start="31:46" pos:end="31:49">0x65</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:51"><expr pos:start="33:5" pos:end="33:50"><call pos:start="33:5" pos:end="33:50"><name pos:start="33:5" pos:end="33:19">g_assert_cmphex</name><argument_list pos:start="33:20" pos:end="33:50">(<argument pos:start="33:21" pos:end="33:39"><expr pos:start="33:21" pos:end="33:39"><call pos:start="33:21" pos:end="33:39"><name pos:start="33:21" pos:end="33:27">isa_inb</name><argument_list pos:start="33:28" pos:end="33:39">(<argument pos:start="33:29" pos:end="33:32"><expr pos:start="33:29" pos:end="33:32"><name pos:start="33:29" pos:end="33:32">test</name></expr></argument>, <argument pos:start="33:35" pos:end="33:38"><expr pos:start="33:35" pos:end="33:38"><literal type="number" pos:start="33:35" pos:end="33:38">0xe1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:42" pos:end="33:43"><expr pos:start="33:42" pos:end="33:43"><operator pos:start="33:42" pos:end="33:43">==</operator></expr></argument>, <argument pos:start="33:46" pos:end="33:49"><expr pos:start="33:46" pos:end="33:49"><literal type="number" pos:start="33:46" pos:end="33:49">0x43</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:51"><expr pos:start="35:5" pos:end="35:50"><call pos:start="35:5" pos:end="35:50"><name pos:start="35:5" pos:end="35:19">g_assert_cmphex</name><argument_list pos:start="35:20" pos:end="35:50">(<argument pos:start="35:21" pos:end="35:39"><expr pos:start="35:21" pos:end="35:39"><call pos:start="35:21" pos:end="35:39"><name pos:start="35:21" pos:end="35:27">isa_inb</name><argument_list pos:start="35:28" pos:end="35:39">(<argument pos:start="35:29" pos:end="35:32"><expr pos:start="35:29" pos:end="35:32"><name pos:start="35:29" pos:end="35:32">test</name></expr></argument>, <argument pos:start="35:35" pos:end="35:38"><expr pos:start="35:35" pos:end="35:38"><literal type="number" pos:start="35:35" pos:end="35:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:42" pos:end="35:43"><expr pos:start="35:42" pos:end="35:43"><operator pos:start="35:42" pos:end="35:43">==</operator></expr></argument>, <argument pos:start="35:46" pos:end="35:49"><expr pos:start="35:46" pos:end="35:49"><literal type="number" pos:start="35:46" pos:end="35:49">0x21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:33"><expr pos:start="39:5" pos:end="39:32"><call pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:12">isa_outw</name><argument_list pos:start="39:13" pos:end="39:32">(<argument pos:start="39:14" pos:end="39:17"><expr pos:start="39:14" pos:end="39:17"><name pos:start="39:14" pos:end="39:17">test</name></expr></argument>, <argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><literal type="number" pos:start="39:20" pos:end="39:23">0xe2</literal></expr></argument>, <argument pos:start="39:26" pos:end="39:31"><expr pos:start="39:26" pos:end="39:31"><literal type="number" pos:start="39:26" pos:end="39:31">0x8866</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:57"><expr pos:start="41:5" pos:end="41:56"><call pos:start="41:5" pos:end="41:56"><name pos:start="41:5" pos:end="41:19">g_assert_cmphex</name><argument_list pos:start="41:20" pos:end="41:56">(<argument pos:start="41:21" pos:end="41:39"><expr pos:start="41:21" pos:end="41:39"><call pos:start="41:21" pos:end="41:39"><name pos:start="41:21" pos:end="41:27">isa_inl</name><argument_list pos:start="41:28" pos:end="41:39">(<argument pos:start="41:29" pos:end="41:32"><expr pos:start="41:29" pos:end="41:32"><name pos:start="41:29" pos:end="41:32">test</name></expr></argument>, <argument pos:start="41:35" pos:end="41:38"><expr pos:start="41:35" pos:end="41:38"><literal type="number" pos:start="41:35" pos:end="41:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:42" pos:end="41:43"><expr pos:start="41:42" pos:end="41:43"><operator pos:start="41:42" pos:end="41:43">==</operator></expr></argument>, <argument pos:start="41:46" pos:end="41:55"><expr pos:start="41:46" pos:end="41:55"><literal type="number" pos:start="41:46" pos:end="41:55">0x88664321</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:53"><expr pos:start="43:5" pos:end="43:52"><call pos:start="43:5" pos:end="43:52"><name pos:start="43:5" pos:end="43:19">g_assert_cmphex</name><argument_list pos:start="43:20" pos:end="43:52">(<argument pos:start="43:21" pos:end="43:39"><expr pos:start="43:21" pos:end="43:39"><call pos:start="43:21" pos:end="43:39"><name pos:start="43:21" pos:end="43:27">isa_inw</name><argument_list pos:start="43:28" pos:end="43:39">(<argument pos:start="43:29" pos:end="43:32"><expr pos:start="43:29" pos:end="43:32"><name pos:start="43:29" pos:end="43:32">test</name></expr></argument>, <argument pos:start="43:35" pos:end="43:38"><expr pos:start="43:35" pos:end="43:38"><literal type="number" pos:start="43:35" pos:end="43:38">0xe2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:42" pos:end="43:43"><expr pos:start="43:42" pos:end="43:43"><operator pos:start="43:42" pos:end="43:43">==</operator></expr></argument>, <argument pos:start="43:46" pos:end="43:51"><expr pos:start="43:46" pos:end="43:51"><literal type="number" pos:start="43:46" pos:end="43:51">0x8866</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:53"><expr pos:start="45:5" pos:end="45:52"><call pos:start="45:5" pos:end="45:52"><name pos:start="45:5" pos:end="45:19">g_assert_cmphex</name><argument_list pos:start="45:20" pos:end="45:52">(<argument pos:start="45:21" pos:end="45:39"><expr pos:start="45:21" pos:end="45:39"><call pos:start="45:21" pos:end="45:39"><name pos:start="45:21" pos:end="45:27">isa_inw</name><argument_list pos:start="45:28" pos:end="45:39">(<argument pos:start="45:29" pos:end="45:32"><expr pos:start="45:29" pos:end="45:32"><name pos:start="45:29" pos:end="45:32">test</name></expr></argument>, <argument pos:start="45:35" pos:end="45:38"><expr pos:start="45:35" pos:end="45:38"><literal type="number" pos:start="45:35" pos:end="45:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:42" pos:end="45:43"><expr pos:start="45:42" pos:end="45:43"><operator pos:start="45:42" pos:end="45:43">==</operator></expr></argument>, <argument pos:start="45:46" pos:end="45:51"><expr pos:start="45:46" pos:end="45:51"><literal type="number" pos:start="45:46" pos:end="45:51">0x4321</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:51"><expr pos:start="47:5" pos:end="47:50"><call pos:start="47:5" pos:end="47:50"><name pos:start="47:5" pos:end="47:19">g_assert_cmphex</name><argument_list pos:start="47:20" pos:end="47:50">(<argument pos:start="47:21" pos:end="47:39"><expr pos:start="47:21" pos:end="47:39"><call pos:start="47:21" pos:end="47:39"><name pos:start="47:21" pos:end="47:27">isa_inb</name><argument_list pos:start="47:28" pos:end="47:39">(<argument pos:start="47:29" pos:end="47:32"><expr pos:start="47:29" pos:end="47:32"><name pos:start="47:29" pos:end="47:32">test</name></expr></argument>, <argument pos:start="47:35" pos:end="47:38"><expr pos:start="47:35" pos:end="47:38"><literal type="number" pos:start="47:35" pos:end="47:38">0xe3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:42" pos:end="47:43"><expr pos:start="47:42" pos:end="47:43"><operator pos:start="47:42" pos:end="47:43">==</operator></expr></argument>, <argument pos:start="47:46" pos:end="47:49"><expr pos:start="47:46" pos:end="47:49"><literal type="number" pos:start="47:46" pos:end="47:49">0x88</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:51"><expr pos:start="49:5" pos:end="49:50"><call pos:start="49:5" pos:end="49:50"><name pos:start="49:5" pos:end="49:19">g_assert_cmphex</name><argument_list pos:start="49:20" pos:end="49:50">(<argument pos:start="49:21" pos:end="49:39"><expr pos:start="49:21" pos:end="49:39"><call pos:start="49:21" pos:end="49:39"><name pos:start="49:21" pos:end="49:27">isa_inb</name><argument_list pos:start="49:28" pos:end="49:39">(<argument pos:start="49:29" pos:end="49:32"><expr pos:start="49:29" pos:end="49:32"><name pos:start="49:29" pos:end="49:32">test</name></expr></argument>, <argument pos:start="49:35" pos:end="49:38"><expr pos:start="49:35" pos:end="49:38"><literal type="number" pos:start="49:35" pos:end="49:38">0xe2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:42" pos:end="49:43"><expr pos:start="49:42" pos:end="49:43"><operator pos:start="49:42" pos:end="49:43">==</operator></expr></argument>, <argument pos:start="49:46" pos:end="49:49"><expr pos:start="49:46" pos:end="49:49"><literal type="number" pos:start="49:46" pos:end="49:49">0x66</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:51"><expr pos:start="51:5" pos:end="51:50"><call pos:start="51:5" pos:end="51:50"><name pos:start="51:5" pos:end="51:19">g_assert_cmphex</name><argument_list pos:start="51:20" pos:end="51:50">(<argument pos:start="51:21" pos:end="51:39"><expr pos:start="51:21" pos:end="51:39"><call pos:start="51:21" pos:end="51:39"><name pos:start="51:21" pos:end="51:27">isa_inb</name><argument_list pos:start="51:28" pos:end="51:39">(<argument pos:start="51:29" pos:end="51:32"><expr pos:start="51:29" pos:end="51:32"><name pos:start="51:29" pos:end="51:32">test</name></expr></argument>, <argument pos:start="51:35" pos:end="51:38"><expr pos:start="51:35" pos:end="51:38"><literal type="number" pos:start="51:35" pos:end="51:38">0xe1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:42" pos:end="51:43"><expr pos:start="51:42" pos:end="51:43"><operator pos:start="51:42" pos:end="51:43">==</operator></expr></argument>, <argument pos:start="51:46" pos:end="51:49"><expr pos:start="51:46" pos:end="51:49"><literal type="number" pos:start="51:46" pos:end="51:49">0x43</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:51"><expr pos:start="53:5" pos:end="53:50"><call pos:start="53:5" pos:end="53:50"><name pos:start="53:5" pos:end="53:19">g_assert_cmphex</name><argument_list pos:start="53:20" pos:end="53:50">(<argument pos:start="53:21" pos:end="53:39"><expr pos:start="53:21" pos:end="53:39"><call pos:start="53:21" pos:end="53:39"><name pos:start="53:21" pos:end="53:27">isa_inb</name><argument_list pos:start="53:28" pos:end="53:39">(<argument pos:start="53:29" pos:end="53:32"><expr pos:start="53:29" pos:end="53:32"><name pos:start="53:29" pos:end="53:32">test</name></expr></argument>, <argument pos:start="53:35" pos:end="53:38"><expr pos:start="53:35" pos:end="53:38"><literal type="number" pos:start="53:35" pos:end="53:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:42" pos:end="53:43"><expr pos:start="53:42" pos:end="53:43"><operator pos:start="53:42" pos:end="53:43">==</operator></expr></argument>, <argument pos:start="53:46" pos:end="53:49"><expr pos:start="53:46" pos:end="53:49"><literal type="number" pos:start="53:46" pos:end="53:49">0x21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:33"><expr pos:start="57:5" pos:end="57:32"><call pos:start="57:5" pos:end="57:32"><name pos:start="57:5" pos:end="57:12">isa_outw</name><argument_list pos:start="57:13" pos:end="57:32">(<argument pos:start="57:14" pos:end="57:17"><expr pos:start="57:14" pos:end="57:17"><name pos:start="57:14" pos:end="57:17">test</name></expr></argument>, <argument pos:start="57:20" pos:end="57:23"><expr pos:start="57:20" pos:end="57:23"><literal type="number" pos:start="57:20" pos:end="57:23">0xe0</literal></expr></argument>, <argument pos:start="57:26" pos:end="57:31"><expr pos:start="57:26" pos:end="57:31"><literal type="number" pos:start="57:26" pos:end="57:31">0x4422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:57"><expr pos:start="59:5" pos:end="59:56"><call pos:start="59:5" pos:end="59:56"><name pos:start="59:5" pos:end="59:19">g_assert_cmphex</name><argument_list pos:start="59:20" pos:end="59:56">(<argument pos:start="59:21" pos:end="59:39"><expr pos:start="59:21" pos:end="59:39"><call pos:start="59:21" pos:end="59:39"><name pos:start="59:21" pos:end="59:27">isa_inl</name><argument_list pos:start="59:28" pos:end="59:39">(<argument pos:start="59:29" pos:end="59:32"><expr pos:start="59:29" pos:end="59:32"><name pos:start="59:29" pos:end="59:32">test</name></expr></argument>, <argument pos:start="59:35" pos:end="59:38"><expr pos:start="59:35" pos:end="59:38"><literal type="number" pos:start="59:35" pos:end="59:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:42" pos:end="59:43"><expr pos:start="59:42" pos:end="59:43"><operator pos:start="59:42" pos:end="59:43">==</operator></expr></argument>, <argument pos:start="59:46" pos:end="59:55"><expr pos:start="59:46" pos:end="59:55"><literal type="number" pos:start="59:46" pos:end="59:55">0x88664422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:53"><expr pos:start="61:5" pos:end="61:52"><call pos:start="61:5" pos:end="61:52"><name pos:start="61:5" pos:end="61:19">g_assert_cmphex</name><argument_list pos:start="61:20" pos:end="61:52">(<argument pos:start="61:21" pos:end="61:39"><expr pos:start="61:21" pos:end="61:39"><call pos:start="61:21" pos:end="61:39"><name pos:start="61:21" pos:end="61:27">isa_inw</name><argument_list pos:start="61:28" pos:end="61:39">(<argument pos:start="61:29" pos:end="61:32"><expr pos:start="61:29" pos:end="61:32"><name pos:start="61:29" pos:end="61:32">test</name></expr></argument>, <argument pos:start="61:35" pos:end="61:38"><expr pos:start="61:35" pos:end="61:38"><literal type="number" pos:start="61:35" pos:end="61:38">0xe2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:42" pos:end="61:43"><expr pos:start="61:42" pos:end="61:43"><operator pos:start="61:42" pos:end="61:43">==</operator></expr></argument>, <argument pos:start="61:46" pos:end="61:51"><expr pos:start="61:46" pos:end="61:51"><literal type="number" pos:start="61:46" pos:end="61:51">0x8866</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:53"><expr pos:start="63:5" pos:end="63:52"><call pos:start="63:5" pos:end="63:52"><name pos:start="63:5" pos:end="63:19">g_assert_cmphex</name><argument_list pos:start="63:20" pos:end="63:52">(<argument pos:start="63:21" pos:end="63:39"><expr pos:start="63:21" pos:end="63:39"><call pos:start="63:21" pos:end="63:39"><name pos:start="63:21" pos:end="63:27">isa_inw</name><argument_list pos:start="63:28" pos:end="63:39">(<argument pos:start="63:29" pos:end="63:32"><expr pos:start="63:29" pos:end="63:32"><name pos:start="63:29" pos:end="63:32">test</name></expr></argument>, <argument pos:start="63:35" pos:end="63:38"><expr pos:start="63:35" pos:end="63:38"><literal type="number" pos:start="63:35" pos:end="63:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="63:42" pos:end="63:43"><expr pos:start="63:42" pos:end="63:43"><operator pos:start="63:42" pos:end="63:43">==</operator></expr></argument>, <argument pos:start="63:46" pos:end="63:51"><expr pos:start="63:46" pos:end="63:51"><literal type="number" pos:start="63:46" pos:end="63:51">0x4422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:51"><expr pos:start="65:5" pos:end="65:50"><call pos:start="65:5" pos:end="65:50"><name pos:start="65:5" pos:end="65:19">g_assert_cmphex</name><argument_list pos:start="65:20" pos:end="65:50">(<argument pos:start="65:21" pos:end="65:39"><expr pos:start="65:21" pos:end="65:39"><call pos:start="65:21" pos:end="65:39"><name pos:start="65:21" pos:end="65:27">isa_inb</name><argument_list pos:start="65:28" pos:end="65:39">(<argument pos:start="65:29" pos:end="65:32"><expr pos:start="65:29" pos:end="65:32"><name pos:start="65:29" pos:end="65:32">test</name></expr></argument>, <argument pos:start="65:35" pos:end="65:38"><expr pos:start="65:35" pos:end="65:38"><literal type="number" pos:start="65:35" pos:end="65:38">0xe3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:42" pos:end="65:43"><expr pos:start="65:42" pos:end="65:43"><operator pos:start="65:42" pos:end="65:43">==</operator></expr></argument>, <argument pos:start="65:46" pos:end="65:49"><expr pos:start="65:46" pos:end="65:49"><literal type="number" pos:start="65:46" pos:end="65:49">0x88</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:51"><expr pos:start="67:5" pos:end="67:50"><call pos:start="67:5" pos:end="67:50"><name pos:start="67:5" pos:end="67:19">g_assert_cmphex</name><argument_list pos:start="67:20" pos:end="67:50">(<argument pos:start="67:21" pos:end="67:39"><expr pos:start="67:21" pos:end="67:39"><call pos:start="67:21" pos:end="67:39"><name pos:start="67:21" pos:end="67:27">isa_inb</name><argument_list pos:start="67:28" pos:end="67:39">(<argument pos:start="67:29" pos:end="67:32"><expr pos:start="67:29" pos:end="67:32"><name pos:start="67:29" pos:end="67:32">test</name></expr></argument>, <argument pos:start="67:35" pos:end="67:38"><expr pos:start="67:35" pos:end="67:38"><literal type="number" pos:start="67:35" pos:end="67:38">0xe2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="67:42" pos:end="67:43"><expr pos:start="67:42" pos:end="67:43"><operator pos:start="67:42" pos:end="67:43">==</operator></expr></argument>, <argument pos:start="67:46" pos:end="67:49"><expr pos:start="67:46" pos:end="67:49"><literal type="number" pos:start="67:46" pos:end="67:49">0x66</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:51"><expr pos:start="69:5" pos:end="69:50"><call pos:start="69:5" pos:end="69:50"><name pos:start="69:5" pos:end="69:19">g_assert_cmphex</name><argument_list pos:start="69:20" pos:end="69:50">(<argument pos:start="69:21" pos:end="69:39"><expr pos:start="69:21" pos:end="69:39"><call pos:start="69:21" pos:end="69:39"><name pos:start="69:21" pos:end="69:27">isa_inb</name><argument_list pos:start="69:28" pos:end="69:39">(<argument pos:start="69:29" pos:end="69:32"><expr pos:start="69:29" pos:end="69:32"><name pos:start="69:29" pos:end="69:32">test</name></expr></argument>, <argument pos:start="69:35" pos:end="69:38"><expr pos:start="69:35" pos:end="69:38"><literal type="number" pos:start="69:35" pos:end="69:38">0xe1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:42" pos:end="69:43"><expr pos:start="69:42" pos:end="69:43"><operator pos:start="69:42" pos:end="69:43">==</operator></expr></argument>, <argument pos:start="69:46" pos:end="69:49"><expr pos:start="69:46" pos:end="69:49"><literal type="number" pos:start="69:46" pos:end="69:49">0x44</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:51"><expr pos:start="71:5" pos:end="71:50"><call pos:start="71:5" pos:end="71:50"><name pos:start="71:5" pos:end="71:19">g_assert_cmphex</name><argument_list pos:start="71:20" pos:end="71:50">(<argument pos:start="71:21" pos:end="71:39"><expr pos:start="71:21" pos:end="71:39"><call pos:start="71:21" pos:end="71:39"><name pos:start="71:21" pos:end="71:27">isa_inb</name><argument_list pos:start="71:28" pos:end="71:39">(<argument pos:start="71:29" pos:end="71:32"><expr pos:start="71:29" pos:end="71:32"><name pos:start="71:29" pos:end="71:32">test</name></expr></argument>, <argument pos:start="71:35" pos:end="71:38"><expr pos:start="71:35" pos:end="71:38"><literal type="number" pos:start="71:35" pos:end="71:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="71:42" pos:end="71:43"><expr pos:start="71:42" pos:end="71:43"><operator pos:start="71:42" pos:end="71:43">==</operator></expr></argument>, <argument pos:start="71:46" pos:end="71:49"><expr pos:start="71:46" pos:end="71:49"><literal type="number" pos:start="71:46" pos:end="71:49">0x22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:31"><expr pos:start="75:5" pos:end="75:30"><call pos:start="75:5" pos:end="75:30"><name pos:start="75:5" pos:end="75:12">isa_outb</name><argument_list pos:start="75:13" pos:end="75:30">(<argument pos:start="75:14" pos:end="75:17"><expr pos:start="75:14" pos:end="75:17"><name pos:start="75:14" pos:end="75:17">test</name></expr></argument>, <argument pos:start="75:20" pos:end="75:23"><expr pos:start="75:20" pos:end="75:23"><literal type="number" pos:start="75:20" pos:end="75:23">0xe3</literal></expr></argument>, <argument pos:start="75:26" pos:end="75:29"><expr pos:start="75:26" pos:end="75:29"><literal type="number" pos:start="75:26" pos:end="75:29">0x87</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:57"><expr pos:start="77:5" pos:end="77:56"><call pos:start="77:5" pos:end="77:56"><name pos:start="77:5" pos:end="77:19">g_assert_cmphex</name><argument_list pos:start="77:20" pos:end="77:56">(<argument pos:start="77:21" pos:end="77:39"><expr pos:start="77:21" pos:end="77:39"><call pos:start="77:21" pos:end="77:39"><name pos:start="77:21" pos:end="77:27">isa_inl</name><argument_list pos:start="77:28" pos:end="77:39">(<argument pos:start="77:29" pos:end="77:32"><expr pos:start="77:29" pos:end="77:32"><name pos:start="77:29" pos:end="77:32">test</name></expr></argument>, <argument pos:start="77:35" pos:end="77:38"><expr pos:start="77:35" pos:end="77:38"><literal type="number" pos:start="77:35" pos:end="77:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:42" pos:end="77:43"><expr pos:start="77:42" pos:end="77:43"><operator pos:start="77:42" pos:end="77:43">==</operator></expr></argument>, <argument pos:start="77:46" pos:end="77:55"><expr pos:start="77:46" pos:end="77:55"><literal type="number" pos:start="77:46" pos:end="77:55">0x87664422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:53"><expr pos:start="79:5" pos:end="79:52"><call pos:start="79:5" pos:end="79:52"><name pos:start="79:5" pos:end="79:19">g_assert_cmphex</name><argument_list pos:start="79:20" pos:end="79:52">(<argument pos:start="79:21" pos:end="79:39"><expr pos:start="79:21" pos:end="79:39"><call pos:start="79:21" pos:end="79:39"><name pos:start="79:21" pos:end="79:27">isa_inw</name><argument_list pos:start="79:28" pos:end="79:39">(<argument pos:start="79:29" pos:end="79:32"><expr pos:start="79:29" pos:end="79:32"><name pos:start="79:29" pos:end="79:32">test</name></expr></argument>, <argument pos:start="79:35" pos:end="79:38"><expr pos:start="79:35" pos:end="79:38"><literal type="number" pos:start="79:35" pos:end="79:38">0xe2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:42" pos:end="79:43"><expr pos:start="79:42" pos:end="79:43"><operator pos:start="79:42" pos:end="79:43">==</operator></expr></argument>, <argument pos:start="79:46" pos:end="79:51"><expr pos:start="79:46" pos:end="79:51"><literal type="number" pos:start="79:46" pos:end="79:51">0x8766</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:51"><expr pos:start="81:5" pos:end="81:50"><call pos:start="81:5" pos:end="81:50"><name pos:start="81:5" pos:end="81:19">g_assert_cmphex</name><argument_list pos:start="81:20" pos:end="81:50">(<argument pos:start="81:21" pos:end="81:39"><expr pos:start="81:21" pos:end="81:39"><call pos:start="81:21" pos:end="81:39"><name pos:start="81:21" pos:end="81:27">isa_inb</name><argument_list pos:start="81:28" pos:end="81:39">(<argument pos:start="81:29" pos:end="81:32"><expr pos:start="81:29" pos:end="81:32"><name pos:start="81:29" pos:end="81:32">test</name></expr></argument>, <argument pos:start="81:35" pos:end="81:38"><expr pos:start="81:35" pos:end="81:38"><literal type="number" pos:start="81:35" pos:end="81:38">0xe3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:42" pos:end="81:43"><expr pos:start="81:42" pos:end="81:43"><operator pos:start="81:42" pos:end="81:43">==</operator></expr></argument>, <argument pos:start="81:46" pos:end="81:49"><expr pos:start="81:46" pos:end="81:49"><literal type="number" pos:start="81:46" pos:end="81:49">0x87</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:51"><expr pos:start="83:5" pos:end="83:50"><call pos:start="83:5" pos:end="83:50"><name pos:start="83:5" pos:end="83:19">g_assert_cmphex</name><argument_list pos:start="83:20" pos:end="83:50">(<argument pos:start="83:21" pos:end="83:39"><expr pos:start="83:21" pos:end="83:39"><call pos:start="83:21" pos:end="83:39"><name pos:start="83:21" pos:end="83:27">isa_inb</name><argument_list pos:start="83:28" pos:end="83:39">(<argument pos:start="83:29" pos:end="83:32"><expr pos:start="83:29" pos:end="83:32"><name pos:start="83:29" pos:end="83:32">test</name></expr></argument>, <argument pos:start="83:35" pos:end="83:38"><expr pos:start="83:35" pos:end="83:38"><literal type="number" pos:start="83:35" pos:end="83:38">0xe2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="83:42" pos:end="83:43"><expr pos:start="83:42" pos:end="83:43"><operator pos:start="83:42" pos:end="83:43">==</operator></expr></argument>, <argument pos:start="83:46" pos:end="83:49"><expr pos:start="83:46" pos:end="83:49"><literal type="number" pos:start="83:46" pos:end="83:49">0x66</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:51"><expr pos:start="85:5" pos:end="85:50"><call pos:start="85:5" pos:end="85:50"><name pos:start="85:5" pos:end="85:19">g_assert_cmphex</name><argument_list pos:start="85:20" pos:end="85:50">(<argument pos:start="85:21" pos:end="85:39"><expr pos:start="85:21" pos:end="85:39"><call pos:start="85:21" pos:end="85:39"><name pos:start="85:21" pos:end="85:27">isa_inb</name><argument_list pos:start="85:28" pos:end="85:39">(<argument pos:start="85:29" pos:end="85:32"><expr pos:start="85:29" pos:end="85:32"><name pos:start="85:29" pos:end="85:32">test</name></expr></argument>, <argument pos:start="85:35" pos:end="85:38"><expr pos:start="85:35" pos:end="85:38"><literal type="number" pos:start="85:35" pos:end="85:38">0xe1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:42" pos:end="85:43"><expr pos:start="85:42" pos:end="85:43"><operator pos:start="85:42" pos:end="85:43">==</operator></expr></argument>, <argument pos:start="85:46" pos:end="85:49"><expr pos:start="85:46" pos:end="85:49"><literal type="number" pos:start="85:46" pos:end="85:49">0x44</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:51"><expr pos:start="87:5" pos:end="87:50"><call pos:start="87:5" pos:end="87:50"><name pos:start="87:5" pos:end="87:19">g_assert_cmphex</name><argument_list pos:start="87:20" pos:end="87:50">(<argument pos:start="87:21" pos:end="87:39"><expr pos:start="87:21" pos:end="87:39"><call pos:start="87:21" pos:end="87:39"><name pos:start="87:21" pos:end="87:27">isa_inb</name><argument_list pos:start="87:28" pos:end="87:39">(<argument pos:start="87:29" pos:end="87:32"><expr pos:start="87:29" pos:end="87:32"><name pos:start="87:29" pos:end="87:32">test</name></expr></argument>, <argument pos:start="87:35" pos:end="87:38"><expr pos:start="87:35" pos:end="87:38"><literal type="number" pos:start="87:35" pos:end="87:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="87:42" pos:end="87:43"><expr pos:start="87:42" pos:end="87:43"><operator pos:start="87:42" pos:end="87:43">==</operator></expr></argument>, <argument pos:start="87:46" pos:end="87:49"><expr pos:start="87:46" pos:end="87:49"><literal type="number" pos:start="87:46" pos:end="87:49">0x22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:31"><expr pos:start="91:5" pos:end="91:30"><call pos:start="91:5" pos:end="91:30"><name pos:start="91:5" pos:end="91:12">isa_outb</name><argument_list pos:start="91:13" pos:end="91:30">(<argument pos:start="91:14" pos:end="91:17"><expr pos:start="91:14" pos:end="91:17"><name pos:start="91:14" pos:end="91:17">test</name></expr></argument>, <argument pos:start="91:20" pos:end="91:23"><expr pos:start="91:20" pos:end="91:23"><literal type="number" pos:start="91:20" pos:end="91:23">0xe2</literal></expr></argument>, <argument pos:start="91:26" pos:end="91:29"><expr pos:start="91:26" pos:end="91:29"><literal type="number" pos:start="91:26" pos:end="91:29">0x65</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:57"><expr pos:start="93:5" pos:end="93:56"><call pos:start="93:5" pos:end="93:56"><name pos:start="93:5" pos:end="93:19">g_assert_cmphex</name><argument_list pos:start="93:20" pos:end="93:56">(<argument pos:start="93:21" pos:end="93:39"><expr pos:start="93:21" pos:end="93:39"><call pos:start="93:21" pos:end="93:39"><name pos:start="93:21" pos:end="93:27">isa_inl</name><argument_list pos:start="93:28" pos:end="93:39">(<argument pos:start="93:29" pos:end="93:32"><expr pos:start="93:29" pos:end="93:32"><name pos:start="93:29" pos:end="93:32">test</name></expr></argument>, <argument pos:start="93:35" pos:end="93:38"><expr pos:start="93:35" pos:end="93:38"><literal type="number" pos:start="93:35" pos:end="93:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="93:42" pos:end="93:43"><expr pos:start="93:42" pos:end="93:43"><operator pos:start="93:42" pos:end="93:43">==</operator></expr></argument>, <argument pos:start="93:46" pos:end="93:55"><expr pos:start="93:46" pos:end="93:55"><literal type="number" pos:start="93:46" pos:end="93:55">0x87654422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:53"><expr pos:start="95:5" pos:end="95:52"><call pos:start="95:5" pos:end="95:52"><name pos:start="95:5" pos:end="95:19">g_assert_cmphex</name><argument_list pos:start="95:20" pos:end="95:52">(<argument pos:start="95:21" pos:end="95:39"><expr pos:start="95:21" pos:end="95:39"><call pos:start="95:21" pos:end="95:39"><name pos:start="95:21" pos:end="95:27">isa_inw</name><argument_list pos:start="95:28" pos:end="95:39">(<argument pos:start="95:29" pos:end="95:32"><expr pos:start="95:29" pos:end="95:32"><name pos:start="95:29" pos:end="95:32">test</name></expr></argument>, <argument pos:start="95:35" pos:end="95:38"><expr pos:start="95:35" pos:end="95:38"><literal type="number" pos:start="95:35" pos:end="95:38">0xe2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:42" pos:end="95:43"><expr pos:start="95:42" pos:end="95:43"><operator pos:start="95:42" pos:end="95:43">==</operator></expr></argument>, <argument pos:start="95:46" pos:end="95:51"><expr pos:start="95:46" pos:end="95:51"><literal type="number" pos:start="95:46" pos:end="95:51">0x8765</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:53"><expr pos:start="97:5" pos:end="97:52"><call pos:start="97:5" pos:end="97:52"><name pos:start="97:5" pos:end="97:19">g_assert_cmphex</name><argument_list pos:start="97:20" pos:end="97:52">(<argument pos:start="97:21" pos:end="97:39"><expr pos:start="97:21" pos:end="97:39"><call pos:start="97:21" pos:end="97:39"><name pos:start="97:21" pos:end="97:27">isa_inw</name><argument_list pos:start="97:28" pos:end="97:39">(<argument pos:start="97:29" pos:end="97:32"><expr pos:start="97:29" pos:end="97:32"><name pos:start="97:29" pos:end="97:32">test</name></expr></argument>, <argument pos:start="97:35" pos:end="97:38"><expr pos:start="97:35" pos:end="97:38"><literal type="number" pos:start="97:35" pos:end="97:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="97:42" pos:end="97:43"><expr pos:start="97:42" pos:end="97:43"><operator pos:start="97:42" pos:end="97:43">==</operator></expr></argument>, <argument pos:start="97:46" pos:end="97:51"><expr pos:start="97:46" pos:end="97:51"><literal type="number" pos:start="97:46" pos:end="97:51">0x4422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:51"><expr pos:start="99:5" pos:end="99:50"><call pos:start="99:5" pos:end="99:50"><name pos:start="99:5" pos:end="99:19">g_assert_cmphex</name><argument_list pos:start="99:20" pos:end="99:50">(<argument pos:start="99:21" pos:end="99:39"><expr pos:start="99:21" pos:end="99:39"><call pos:start="99:21" pos:end="99:39"><name pos:start="99:21" pos:end="99:27">isa_inb</name><argument_list pos:start="99:28" pos:end="99:39">(<argument pos:start="99:29" pos:end="99:32"><expr pos:start="99:29" pos:end="99:32"><name pos:start="99:29" pos:end="99:32">test</name></expr></argument>, <argument pos:start="99:35" pos:end="99:38"><expr pos:start="99:35" pos:end="99:38"><literal type="number" pos:start="99:35" pos:end="99:38">0xe3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:42" pos:end="99:43"><expr pos:start="99:42" pos:end="99:43"><operator pos:start="99:42" pos:end="99:43">==</operator></expr></argument>, <argument pos:start="99:46" pos:end="99:49"><expr pos:start="99:46" pos:end="99:49"><literal type="number" pos:start="99:46" pos:end="99:49">0x87</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:51"><expr pos:start="101:5" pos:end="101:50"><call pos:start="101:5" pos:end="101:50"><name pos:start="101:5" pos:end="101:19">g_assert_cmphex</name><argument_list pos:start="101:20" pos:end="101:50">(<argument pos:start="101:21" pos:end="101:39"><expr pos:start="101:21" pos:end="101:39"><call pos:start="101:21" pos:end="101:39"><name pos:start="101:21" pos:end="101:27">isa_inb</name><argument_list pos:start="101:28" pos:end="101:39">(<argument pos:start="101:29" pos:end="101:32"><expr pos:start="101:29" pos:end="101:32"><name pos:start="101:29" pos:end="101:32">test</name></expr></argument>, <argument pos:start="101:35" pos:end="101:38"><expr pos:start="101:35" pos:end="101:38"><literal type="number" pos:start="101:35" pos:end="101:38">0xe2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="101:42" pos:end="101:43"><expr pos:start="101:42" pos:end="101:43"><operator pos:start="101:42" pos:end="101:43">==</operator></expr></argument>, <argument pos:start="101:46" pos:end="101:49"><expr pos:start="101:46" pos:end="101:49"><literal type="number" pos:start="101:46" pos:end="101:49">0x65</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:51"><expr pos:start="103:5" pos:end="103:50"><call pos:start="103:5" pos:end="103:50"><name pos:start="103:5" pos:end="103:19">g_assert_cmphex</name><argument_list pos:start="103:20" pos:end="103:50">(<argument pos:start="103:21" pos:end="103:39"><expr pos:start="103:21" pos:end="103:39"><call pos:start="103:21" pos:end="103:39"><name pos:start="103:21" pos:end="103:27">isa_inb</name><argument_list pos:start="103:28" pos:end="103:39">(<argument pos:start="103:29" pos:end="103:32"><expr pos:start="103:29" pos:end="103:32"><name pos:start="103:29" pos:end="103:32">test</name></expr></argument>, <argument pos:start="103:35" pos:end="103:38"><expr pos:start="103:35" pos:end="103:38"><literal type="number" pos:start="103:35" pos:end="103:38">0xe1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="103:42" pos:end="103:43"><expr pos:start="103:42" pos:end="103:43"><operator pos:start="103:42" pos:end="103:43">==</operator></expr></argument>, <argument pos:start="103:46" pos:end="103:49"><expr pos:start="103:46" pos:end="103:49"><literal type="number" pos:start="103:46" pos:end="103:49">0x44</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:51"><expr pos:start="105:5" pos:end="105:50"><call pos:start="105:5" pos:end="105:50"><name pos:start="105:5" pos:end="105:19">g_assert_cmphex</name><argument_list pos:start="105:20" pos:end="105:50">(<argument pos:start="105:21" pos:end="105:39"><expr pos:start="105:21" pos:end="105:39"><call pos:start="105:21" pos:end="105:39"><name pos:start="105:21" pos:end="105:27">isa_inb</name><argument_list pos:start="105:28" pos:end="105:39">(<argument pos:start="105:29" pos:end="105:32"><expr pos:start="105:29" pos:end="105:32"><name pos:start="105:29" pos:end="105:32">test</name></expr></argument>, <argument pos:start="105:35" pos:end="105:38"><expr pos:start="105:35" pos:end="105:38"><literal type="number" pos:start="105:35" pos:end="105:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="105:42" pos:end="105:43"><expr pos:start="105:42" pos:end="105:43"><operator pos:start="105:42" pos:end="105:43">==</operator></expr></argument>, <argument pos:start="105:46" pos:end="105:49"><expr pos:start="105:46" pos:end="105:49"><literal type="number" pos:start="105:46" pos:end="105:49">0x22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:31"><expr pos:start="109:5" pos:end="109:30"><call pos:start="109:5" pos:end="109:30"><name pos:start="109:5" pos:end="109:12">isa_outb</name><argument_list pos:start="109:13" pos:end="109:30">(<argument pos:start="109:14" pos:end="109:17"><expr pos:start="109:14" pos:end="109:17"><name pos:start="109:14" pos:end="109:17">test</name></expr></argument>, <argument pos:start="109:20" pos:end="109:23"><expr pos:start="109:20" pos:end="109:23"><literal type="number" pos:start="109:20" pos:end="109:23">0xe1</literal></expr></argument>, <argument pos:start="109:26" pos:end="109:29"><expr pos:start="109:26" pos:end="109:29"><literal type="number" pos:start="109:26" pos:end="109:29">0x43</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:57"><expr pos:start="111:5" pos:end="111:56"><call pos:start="111:5" pos:end="111:56"><name pos:start="111:5" pos:end="111:19">g_assert_cmphex</name><argument_list pos:start="111:20" pos:end="111:56">(<argument pos:start="111:21" pos:end="111:39"><expr pos:start="111:21" pos:end="111:39"><call pos:start="111:21" pos:end="111:39"><name pos:start="111:21" pos:end="111:27">isa_inl</name><argument_list pos:start="111:28" pos:end="111:39">(<argument pos:start="111:29" pos:end="111:32"><expr pos:start="111:29" pos:end="111:32"><name pos:start="111:29" pos:end="111:32">test</name></expr></argument>, <argument pos:start="111:35" pos:end="111:38"><expr pos:start="111:35" pos:end="111:38"><literal type="number" pos:start="111:35" pos:end="111:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="111:42" pos:end="111:43"><expr pos:start="111:42" pos:end="111:43"><operator pos:start="111:42" pos:end="111:43">==</operator></expr></argument>, <argument pos:start="111:46" pos:end="111:55"><expr pos:start="111:46" pos:end="111:55"><literal type="number" pos:start="111:46" pos:end="111:55">0x87654322</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:53"><expr pos:start="113:5" pos:end="113:52"><call pos:start="113:5" pos:end="113:52"><name pos:start="113:5" pos:end="113:19">g_assert_cmphex</name><argument_list pos:start="113:20" pos:end="113:52">(<argument pos:start="113:21" pos:end="113:39"><expr pos:start="113:21" pos:end="113:39"><call pos:start="113:21" pos:end="113:39"><name pos:start="113:21" pos:end="113:27">isa_inw</name><argument_list pos:start="113:28" pos:end="113:39">(<argument pos:start="113:29" pos:end="113:32"><expr pos:start="113:29" pos:end="113:32"><name pos:start="113:29" pos:end="113:32">test</name></expr></argument>, <argument pos:start="113:35" pos:end="113:38"><expr pos:start="113:35" pos:end="113:38"><literal type="number" pos:start="113:35" pos:end="113:38">0xe2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="113:42" pos:end="113:43"><expr pos:start="113:42" pos:end="113:43"><operator pos:start="113:42" pos:end="113:43">==</operator></expr></argument>, <argument pos:start="113:46" pos:end="113:51"><expr pos:start="113:46" pos:end="113:51"><literal type="number" pos:start="113:46" pos:end="113:51">0x8765</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:53"><expr pos:start="115:5" pos:end="115:52"><call pos:start="115:5" pos:end="115:52"><name pos:start="115:5" pos:end="115:19">g_assert_cmphex</name><argument_list pos:start="115:20" pos:end="115:52">(<argument pos:start="115:21" pos:end="115:39"><expr pos:start="115:21" pos:end="115:39"><call pos:start="115:21" pos:end="115:39"><name pos:start="115:21" pos:end="115:27">isa_inw</name><argument_list pos:start="115:28" pos:end="115:39">(<argument pos:start="115:29" pos:end="115:32"><expr pos:start="115:29" pos:end="115:32"><name pos:start="115:29" pos:end="115:32">test</name></expr></argument>, <argument pos:start="115:35" pos:end="115:38"><expr pos:start="115:35" pos:end="115:38"><literal type="number" pos:start="115:35" pos:end="115:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="115:42" pos:end="115:43"><expr pos:start="115:42" pos:end="115:43"><operator pos:start="115:42" pos:end="115:43">==</operator></expr></argument>, <argument pos:start="115:46" pos:end="115:51"><expr pos:start="115:46" pos:end="115:51"><literal type="number" pos:start="115:46" pos:end="115:51">0x4322</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:51"><expr pos:start="117:5" pos:end="117:50"><call pos:start="117:5" pos:end="117:50"><name pos:start="117:5" pos:end="117:19">g_assert_cmphex</name><argument_list pos:start="117:20" pos:end="117:50">(<argument pos:start="117:21" pos:end="117:39"><expr pos:start="117:21" pos:end="117:39"><call pos:start="117:21" pos:end="117:39"><name pos:start="117:21" pos:end="117:27">isa_inb</name><argument_list pos:start="117:28" pos:end="117:39">(<argument pos:start="117:29" pos:end="117:32"><expr pos:start="117:29" pos:end="117:32"><name pos:start="117:29" pos:end="117:32">test</name></expr></argument>, <argument pos:start="117:35" pos:end="117:38"><expr pos:start="117:35" pos:end="117:38"><literal type="number" pos:start="117:35" pos:end="117:38">0xe3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="117:42" pos:end="117:43"><expr pos:start="117:42" pos:end="117:43"><operator pos:start="117:42" pos:end="117:43">==</operator></expr></argument>, <argument pos:start="117:46" pos:end="117:49"><expr pos:start="117:46" pos:end="117:49"><literal type="number" pos:start="117:46" pos:end="117:49">0x87</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:51"><expr pos:start="119:5" pos:end="119:50"><call pos:start="119:5" pos:end="119:50"><name pos:start="119:5" pos:end="119:19">g_assert_cmphex</name><argument_list pos:start="119:20" pos:end="119:50">(<argument pos:start="119:21" pos:end="119:39"><expr pos:start="119:21" pos:end="119:39"><call pos:start="119:21" pos:end="119:39"><name pos:start="119:21" pos:end="119:27">isa_inb</name><argument_list pos:start="119:28" pos:end="119:39">(<argument pos:start="119:29" pos:end="119:32"><expr pos:start="119:29" pos:end="119:32"><name pos:start="119:29" pos:end="119:32">test</name></expr></argument>, <argument pos:start="119:35" pos:end="119:38"><expr pos:start="119:35" pos:end="119:38"><literal type="number" pos:start="119:35" pos:end="119:38">0xe2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:42" pos:end="119:43"><expr pos:start="119:42" pos:end="119:43"><operator pos:start="119:42" pos:end="119:43">==</operator></expr></argument>, <argument pos:start="119:46" pos:end="119:49"><expr pos:start="119:46" pos:end="119:49"><literal type="number" pos:start="119:46" pos:end="119:49">0x65</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:51"><expr pos:start="121:5" pos:end="121:50"><call pos:start="121:5" pos:end="121:50"><name pos:start="121:5" pos:end="121:19">g_assert_cmphex</name><argument_list pos:start="121:20" pos:end="121:50">(<argument pos:start="121:21" pos:end="121:39"><expr pos:start="121:21" pos:end="121:39"><call pos:start="121:21" pos:end="121:39"><name pos:start="121:21" pos:end="121:27">isa_inb</name><argument_list pos:start="121:28" pos:end="121:39">(<argument pos:start="121:29" pos:end="121:32"><expr pos:start="121:29" pos:end="121:32"><name pos:start="121:29" pos:end="121:32">test</name></expr></argument>, <argument pos:start="121:35" pos:end="121:38"><expr pos:start="121:35" pos:end="121:38"><literal type="number" pos:start="121:35" pos:end="121:38">0xe1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="121:42" pos:end="121:43"><expr pos:start="121:42" pos:end="121:43"><operator pos:start="121:42" pos:end="121:43">==</operator></expr></argument>, <argument pos:start="121:46" pos:end="121:49"><expr pos:start="121:46" pos:end="121:49"><literal type="number" pos:start="121:46" pos:end="121:49">0x43</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:51"><expr pos:start="123:5" pos:end="123:50"><call pos:start="123:5" pos:end="123:50"><name pos:start="123:5" pos:end="123:19">g_assert_cmphex</name><argument_list pos:start="123:20" pos:end="123:50">(<argument pos:start="123:21" pos:end="123:39"><expr pos:start="123:21" pos:end="123:39"><call pos:start="123:21" pos:end="123:39"><name pos:start="123:21" pos:end="123:27">isa_inb</name><argument_list pos:start="123:28" pos:end="123:39">(<argument pos:start="123:29" pos:end="123:32"><expr pos:start="123:29" pos:end="123:32"><name pos:start="123:29" pos:end="123:32">test</name></expr></argument>, <argument pos:start="123:35" pos:end="123:38"><expr pos:start="123:35" pos:end="123:38"><literal type="number" pos:start="123:35" pos:end="123:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="123:42" pos:end="123:43"><expr pos:start="123:42" pos:end="123:43"><operator pos:start="123:42" pos:end="123:43">==</operator></expr></argument>, <argument pos:start="123:46" pos:end="123:49"><expr pos:start="123:46" pos:end="123:49"><literal type="number" pos:start="123:46" pos:end="123:49">0x22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:31"><expr pos:start="127:5" pos:end="127:30"><call pos:start="127:5" pos:end="127:30"><name pos:start="127:5" pos:end="127:12">isa_outb</name><argument_list pos:start="127:13" pos:end="127:30">(<argument pos:start="127:14" pos:end="127:17"><expr pos:start="127:14" pos:end="127:17"><name pos:start="127:14" pos:end="127:17">test</name></expr></argument>, <argument pos:start="127:20" pos:end="127:23"><expr pos:start="127:20" pos:end="127:23"><literal type="number" pos:start="127:20" pos:end="127:23">0xe0</literal></expr></argument>, <argument pos:start="127:26" pos:end="127:29"><expr pos:start="127:26" pos:end="127:29"><literal type="number" pos:start="127:26" pos:end="127:29">0x21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:57"><expr pos:start="129:5" pos:end="129:56"><call pos:start="129:5" pos:end="129:56"><name pos:start="129:5" pos:end="129:19">g_assert_cmphex</name><argument_list pos:start="129:20" pos:end="129:56">(<argument pos:start="129:21" pos:end="129:39"><expr pos:start="129:21" pos:end="129:39"><call pos:start="129:21" pos:end="129:39"><name pos:start="129:21" pos:end="129:27">isa_inl</name><argument_list pos:start="129:28" pos:end="129:39">(<argument pos:start="129:29" pos:end="129:32"><expr pos:start="129:29" pos:end="129:32"><name pos:start="129:29" pos:end="129:32">test</name></expr></argument>, <argument pos:start="129:35" pos:end="129:38"><expr pos:start="129:35" pos:end="129:38"><literal type="number" pos:start="129:35" pos:end="129:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="129:42" pos:end="129:43"><expr pos:start="129:42" pos:end="129:43"><operator pos:start="129:42" pos:end="129:43">==</operator></expr></argument>, <argument pos:start="129:46" pos:end="129:55"><expr pos:start="129:46" pos:end="129:55"><literal type="number" pos:start="129:46" pos:end="129:55">0x87654321</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:53"><expr pos:start="131:5" pos:end="131:52"><call pos:start="131:5" pos:end="131:52"><name pos:start="131:5" pos:end="131:19">g_assert_cmphex</name><argument_list pos:start="131:20" pos:end="131:52">(<argument pos:start="131:21" pos:end="131:39"><expr pos:start="131:21" pos:end="131:39"><call pos:start="131:21" pos:end="131:39"><name pos:start="131:21" pos:end="131:27">isa_inw</name><argument_list pos:start="131:28" pos:end="131:39">(<argument pos:start="131:29" pos:end="131:32"><expr pos:start="131:29" pos:end="131:32"><name pos:start="131:29" pos:end="131:32">test</name></expr></argument>, <argument pos:start="131:35" pos:end="131:38"><expr pos:start="131:35" pos:end="131:38"><literal type="number" pos:start="131:35" pos:end="131:38">0xe2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="131:42" pos:end="131:43"><expr pos:start="131:42" pos:end="131:43"><operator pos:start="131:42" pos:end="131:43">==</operator></expr></argument>, <argument pos:start="131:46" pos:end="131:51"><expr pos:start="131:46" pos:end="131:51"><literal type="number" pos:start="131:46" pos:end="131:51">0x8765</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:53"><expr pos:start="133:5" pos:end="133:52"><call pos:start="133:5" pos:end="133:52"><name pos:start="133:5" pos:end="133:19">g_assert_cmphex</name><argument_list pos:start="133:20" pos:end="133:52">(<argument pos:start="133:21" pos:end="133:39"><expr pos:start="133:21" pos:end="133:39"><call pos:start="133:21" pos:end="133:39"><name pos:start="133:21" pos:end="133:27">isa_inw</name><argument_list pos:start="133:28" pos:end="133:39">(<argument pos:start="133:29" pos:end="133:32"><expr pos:start="133:29" pos:end="133:32"><name pos:start="133:29" pos:end="133:32">test</name></expr></argument>, <argument pos:start="133:35" pos:end="133:38"><expr pos:start="133:35" pos:end="133:38"><literal type="number" pos:start="133:35" pos:end="133:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="133:42" pos:end="133:43"><expr pos:start="133:42" pos:end="133:43"><operator pos:start="133:42" pos:end="133:43">==</operator></expr></argument>, <argument pos:start="133:46" pos:end="133:51"><expr pos:start="133:46" pos:end="133:51"><literal type="number" pos:start="133:46" pos:end="133:51">0x4321</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:51"><expr pos:start="135:5" pos:end="135:50"><call pos:start="135:5" pos:end="135:50"><name pos:start="135:5" pos:end="135:19">g_assert_cmphex</name><argument_list pos:start="135:20" pos:end="135:50">(<argument pos:start="135:21" pos:end="135:39"><expr pos:start="135:21" pos:end="135:39"><call pos:start="135:21" pos:end="135:39"><name pos:start="135:21" pos:end="135:27">isa_inb</name><argument_list pos:start="135:28" pos:end="135:39">(<argument pos:start="135:29" pos:end="135:32"><expr pos:start="135:29" pos:end="135:32"><name pos:start="135:29" pos:end="135:32">test</name></expr></argument>, <argument pos:start="135:35" pos:end="135:38"><expr pos:start="135:35" pos:end="135:38"><literal type="number" pos:start="135:35" pos:end="135:38">0xe3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="135:42" pos:end="135:43"><expr pos:start="135:42" pos:end="135:43"><operator pos:start="135:42" pos:end="135:43">==</operator></expr></argument>, <argument pos:start="135:46" pos:end="135:49"><expr pos:start="135:46" pos:end="135:49"><literal type="number" pos:start="135:46" pos:end="135:49">0x87</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:51"><expr pos:start="137:5" pos:end="137:50"><call pos:start="137:5" pos:end="137:50"><name pos:start="137:5" pos:end="137:19">g_assert_cmphex</name><argument_list pos:start="137:20" pos:end="137:50">(<argument pos:start="137:21" pos:end="137:39"><expr pos:start="137:21" pos:end="137:39"><call pos:start="137:21" pos:end="137:39"><name pos:start="137:21" pos:end="137:27">isa_inb</name><argument_list pos:start="137:28" pos:end="137:39">(<argument pos:start="137:29" pos:end="137:32"><expr pos:start="137:29" pos:end="137:32"><name pos:start="137:29" pos:end="137:32">test</name></expr></argument>, <argument pos:start="137:35" pos:end="137:38"><expr pos:start="137:35" pos:end="137:38"><literal type="number" pos:start="137:35" pos:end="137:38">0xe2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="137:42" pos:end="137:43"><expr pos:start="137:42" pos:end="137:43"><operator pos:start="137:42" pos:end="137:43">==</operator></expr></argument>, <argument pos:start="137:46" pos:end="137:49"><expr pos:start="137:46" pos:end="137:49"><literal type="number" pos:start="137:46" pos:end="137:49">0x65</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:51"><expr pos:start="139:5" pos:end="139:50"><call pos:start="139:5" pos:end="139:50"><name pos:start="139:5" pos:end="139:19">g_assert_cmphex</name><argument_list pos:start="139:20" pos:end="139:50">(<argument pos:start="139:21" pos:end="139:39"><expr pos:start="139:21" pos:end="139:39"><call pos:start="139:21" pos:end="139:39"><name pos:start="139:21" pos:end="139:27">isa_inb</name><argument_list pos:start="139:28" pos:end="139:39">(<argument pos:start="139:29" pos:end="139:32"><expr pos:start="139:29" pos:end="139:32"><name pos:start="139:29" pos:end="139:32">test</name></expr></argument>, <argument pos:start="139:35" pos:end="139:38"><expr pos:start="139:35" pos:end="139:38"><literal type="number" pos:start="139:35" pos:end="139:38">0xe1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="139:42" pos:end="139:43"><expr pos:start="139:42" pos:end="139:43"><operator pos:start="139:42" pos:end="139:43">==</operator></expr></argument>, <argument pos:start="139:46" pos:end="139:49"><expr pos:start="139:46" pos:end="139:49"><literal type="number" pos:start="139:46" pos:end="139:49">0x43</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:51"><expr pos:start="141:5" pos:end="141:50"><call pos:start="141:5" pos:end="141:50"><name pos:start="141:5" pos:end="141:19">g_assert_cmphex</name><argument_list pos:start="141:20" pos:end="141:50">(<argument pos:start="141:21" pos:end="141:39"><expr pos:start="141:21" pos:end="141:39"><call pos:start="141:21" pos:end="141:39"><name pos:start="141:21" pos:end="141:27">isa_inb</name><argument_list pos:start="141:28" pos:end="141:39">(<argument pos:start="141:29" pos:end="141:32"><expr pos:start="141:29" pos:end="141:32"><name pos:start="141:29" pos:end="141:32">test</name></expr></argument>, <argument pos:start="141:35" pos:end="141:38"><expr pos:start="141:35" pos:end="141:38"><literal type="number" pos:start="141:35" pos:end="141:38">0xe0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="141:42" pos:end="141:43"><expr pos:start="141:42" pos:end="141:43"><operator pos:start="141:42" pos:end="141:43">==</operator></expr></argument>, <argument pos:start="141:46" pos:end="141:49"><expr pos:start="141:46" pos:end="141:49"><literal type="number" pos:start="141:46" pos:end="141:49">0x21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:29"><expr pos:start="143:5" pos:end="143:28"><call pos:start="143:5" pos:end="143:28"><name pos:start="143:5" pos:end="143:14">qtest_quit</name><argument_list pos:start="143:15" pos:end="143:28">(<argument pos:start="143:16" pos:end="143:27"><expr pos:start="143:16" pos:end="143:27"><name pos:start="143:16" pos:end="143:27">global_qtest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:17"><expr pos:start="145:5" pos:end="145:16"><call pos:start="145:5" pos:end="145:16"><name pos:start="145:5" pos:end="145:10">g_free</name><argument_list pos:start="145:11" pos:end="145:16">(<argument pos:start="145:12" pos:end="145:15"><expr pos:start="145:12" pos:end="145:15"><name pos:start="145:12" pos:end="145:15">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
