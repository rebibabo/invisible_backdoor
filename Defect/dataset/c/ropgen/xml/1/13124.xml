<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13124.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">main_loop_wait</name><parameter_list pos:start="1:20" pos:end="1:36">(<parameter pos:start="1:21" pos:end="1:35"><decl pos:start="1:21" pos:end="1:35"><type pos:start="1:21" pos:end="1:23"><name pos:start="1:21" pos:end="1:23">int</name></type> <name pos:start="1:25" pos:end="1:35">nonblocking</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="145:19">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">IOHandlerRecord</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ioh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">fd_set</name></type> <name pos:start="7:12" pos:end="7:15">rfds</name></decl>, <decl pos:start="7:18" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:18" pos:end="7:21">wfds</name></decl>, <decl pos:start="7:24" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:24" pos:end="7:27">xfds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:17">nfds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:18">timeval</name></name></type> <name pos:start="11:20" pos:end="11:21">tv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">timeout</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="19:20">if <condition pos:start="17:8" pos:end="17:20">(<expr pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:19">nonblocking</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:20"><block_content pos:start="19:9" pos:end="19:20">

        <expr_stmt pos:start="19:9" pos:end="19:20"><expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:15">timeout</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="21:5" pos:end="27:5">else <block pos:start="21:10" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:41">

        <expr_stmt pos:start="23:9" pos:end="23:43"><expr pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:15">timeout</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:42"><name pos:start="23:19" pos:end="23:40">qemu_calculate_timeout</name><argument_list pos:start="23:41" pos:end="23:42">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><call pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:30">qemu_bh_update_timeout</name><argument_list pos:start="25:31" pos:end="25:40">(<argument pos:start="25:32" pos:end="25:39"><expr pos:start="25:32" pos:end="25:39"><operator pos:start="25:32" pos:end="25:32">&amp;</operator><name pos:start="25:33" pos:end="25:39">timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><call pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:26">os_host_main_loop_wait</name><argument_list pos:start="31:27" pos:end="31:36">(<argument pos:start="31:28" pos:end="31:35"><expr pos:start="31:28" pos:end="31:35"><operator pos:start="31:28" pos:end="31:28">&amp;</operator><name pos:start="31:29" pos:end="31:35">timeout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:25">/* poll any events */</comment>

    <comment type="block" pos:start="37:5" pos:end="37:56">/* XXX: separate device handlers from system ones */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:14"><expr pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:8">nfds</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <operator pos:start="39:12" pos:end="39:12">-</operator><literal type="number" pos:start="39:13" pos:end="39:13">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:19"><expr pos:start="41:5" pos:end="41:18"><call pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:11">FD_ZERO</name><argument_list pos:start="41:12" pos:end="41:18">(<argument pos:start="41:13" pos:end="41:17"><expr pos:start="41:13" pos:end="41:17"><operator pos:start="41:13" pos:end="41:13">&amp;</operator><name pos:start="41:14" pos:end="41:17">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:19"><expr pos:start="43:5" pos:end="43:18"><call pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:11">FD_ZERO</name><argument_list pos:start="43:12" pos:end="43:18">(<argument pos:start="43:13" pos:end="43:17"><expr pos:start="43:13" pos:end="43:17"><operator pos:start="43:13" pos:end="43:13">&amp;</operator><name pos:start="43:14" pos:end="43:17">wfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:19"><expr pos:start="45:5" pos:end="45:18"><call pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:11">FD_ZERO</name><argument_list pos:start="45:12" pos:end="45:18">(<argument pos:start="45:13" pos:end="45:17"><expr pos:start="45:13" pos:end="45:17"><operator pos:start="45:13" pos:end="45:13">&amp;</operator><name pos:start="45:14" pos:end="45:17">xfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="47:5" pos:end="47:42"><name pos:start="47:5" pos:end="47:17">QLIST_FOREACH</name><argument_list pos:start="47:18" pos:end="47:42">(<argument pos:start="47:19" pos:end="47:21">ioh</argument>, <argument pos:start="47:24" pos:end="47:35">&amp;io_handlers</argument>, <argument pos:start="47:38" pos:end="47:41">next</argument>)</argument_list></macro> <block pos:start="47:44" pos:end="77:5">{<block_content pos:start="49:9" pos:end="75:9">

        <if_stmt pos:start="49:9" pos:end="51:21"><if pos:start="49:9" pos:end="51:21">if <condition pos:start="49:12" pos:end="49:25">(<expr pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:15">ioh</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:24">deleted</name></name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:21"><block_content pos:start="51:13" pos:end="51:21">

            <continue pos:start="51:13" pos:end="51:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="65:9"><if pos:start="53:9" pos:end="65:9">if <condition pos:start="53:12" pos:end="57:50">(<expr pos:start="53:13" pos:end="57:49"><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:15">ioh</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:24">fd_read</name></name> <operator pos:start="53:26" pos:end="53:27">&amp;&amp;</operator>

            <operator pos:start="55:13" pos:end="55:13">(</operator><operator pos:start="55:14" pos:end="55:14">!</operator><name pos:start="55:15" pos:end="55:31"><name pos:start="55:15" pos:end="55:17">ioh</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:31">fd_read_poll</name></name> <operator pos:start="55:33" pos:end="55:34">||</operator>

             <call pos:start="57:14" pos:end="57:43"><name pos:start="57:14" pos:end="57:30"><name pos:start="57:14" pos:end="57:16">ioh</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:30">fd_read_poll</name></name><argument_list pos:start="57:31" pos:end="57:43">(<argument pos:start="57:32" pos:end="57:42"><expr pos:start="57:32" pos:end="57:42"><name pos:start="57:32" pos:end="57:42"><name pos:start="57:32" pos:end="57:34">ioh</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:42">opaque</name></name></expr></argument>)</argument_list></call> <operator pos:start="57:45" pos:end="57:46">!=</operator> <literal type="number" pos:start="57:48" pos:end="57:48">0</literal><operator pos:start="57:49" pos:end="57:49">)</operator></expr>)</condition> <block pos:start="57:52" pos:end="65:9">{<block_content pos:start="59:13" pos:end="63:31">

            <expr_stmt pos:start="59:13" pos:end="59:35"><expr pos:start="59:13" pos:end="59:34"><call pos:start="59:13" pos:end="59:34"><name pos:start="59:13" pos:end="59:18">FD_SET</name><argument_list pos:start="59:19" pos:end="59:34">(<argument pos:start="59:20" pos:end="59:26"><expr pos:start="59:20" pos:end="59:26"><name pos:start="59:20" pos:end="59:26"><name pos:start="59:20" pos:end="59:22">ioh</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:26">fd</name></name></expr></argument>, <argument pos:start="59:29" pos:end="59:33"><expr pos:start="59:29" pos:end="59:33"><operator pos:start="59:29" pos:end="59:29">&amp;</operator><name pos:start="59:30" pos:end="59:33">rfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="63:31"><if pos:start="61:13" pos:end="63:31">if <condition pos:start="61:16" pos:end="61:31">(<expr pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:23"><name pos:start="61:17" pos:end="61:19">ioh</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:23">fd</name></name> <operator pos:start="61:25" pos:end="61:25">&gt;</operator> <name pos:start="61:27" pos:end="61:30">nfds</name></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:31"><block_content pos:start="63:17" pos:end="63:31">

                <expr_stmt pos:start="63:17" pos:end="63:31"><expr pos:start="63:17" pos:end="63:30"><name pos:start="63:17" pos:end="63:20">nfds</name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:30"><name pos:start="63:24" pos:end="63:26">ioh</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:30">fd</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="75:9"><if pos:start="67:9" pos:end="75:9">if <condition pos:start="67:12" pos:end="67:26">(<expr pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:15">ioh</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:25">fd_write</name></name></expr>)</condition> <block pos:start="67:28" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:31">

            <expr_stmt pos:start="69:13" pos:end="69:35"><expr pos:start="69:13" pos:end="69:34"><call pos:start="69:13" pos:end="69:34"><name pos:start="69:13" pos:end="69:18">FD_SET</name><argument_list pos:start="69:19" pos:end="69:34">(<argument pos:start="69:20" pos:end="69:26"><expr pos:start="69:20" pos:end="69:26"><name pos:start="69:20" pos:end="69:26"><name pos:start="69:20" pos:end="69:22">ioh</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:26">fd</name></name></expr></argument>, <argument pos:start="69:29" pos:end="69:33"><expr pos:start="69:29" pos:end="69:33"><operator pos:start="69:29" pos:end="69:29">&amp;</operator><name pos:start="69:30" pos:end="69:33">wfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="73:31"><if pos:start="71:13" pos:end="73:31">if <condition pos:start="71:16" pos:end="71:31">(<expr pos:start="71:17" pos:end="71:30"><name pos:start="71:17" pos:end="71:23"><name pos:start="71:17" pos:end="71:19">ioh</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:23">fd</name></name> <operator pos:start="71:25" pos:end="71:25">&gt;</operator> <name pos:start="71:27" pos:end="71:30">nfds</name></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:31"><block_content pos:start="73:17" pos:end="73:31">

                <expr_stmt pos:start="73:17" pos:end="73:31"><expr pos:start="73:17" pos:end="73:30"><name pos:start="73:17" pos:end="73:20">nfds</name> <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:30"><name pos:start="73:24" pos:end="73:26">ioh</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:30">fd</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="81:5" pos:end="81:31"><expr pos:start="81:5" pos:end="81:30"><name pos:start="81:5" pos:end="81:13"><name pos:start="81:5" pos:end="81:6">tv</name><operator pos:start="81:7" pos:end="81:7">.</operator><name pos:start="81:8" pos:end="81:13">tv_sec</name></name> <operator pos:start="81:15" pos:end="81:15">=</operator> <name pos:start="81:17" pos:end="81:23">timeout</name> <operator pos:start="81:25" pos:end="81:25">/</operator> <literal type="number" pos:start="81:27" pos:end="81:30">1000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:41"><expr pos:start="83:5" pos:end="83:40"><name pos:start="83:5" pos:end="83:14"><name pos:start="83:5" pos:end="83:6">tv</name><operator pos:start="83:7" pos:end="83:7">.</operator><name pos:start="83:8" pos:end="83:14">tv_usec</name></name> <operator pos:start="83:16" pos:end="83:16">=</operator> <operator pos:start="83:18" pos:end="83:18">(</operator><name pos:start="83:19" pos:end="83:25">timeout</name> <operator pos:start="83:27" pos:end="83:27">%</operator> <literal type="number" pos:start="83:29" pos:end="83:32">1000</literal><operator pos:start="83:33" pos:end="83:33">)</operator> <operator pos:start="83:35" pos:end="83:35">*</operator> <literal type="number" pos:start="83:37" pos:end="83:40">1000</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:50"><expr pos:start="87:5" pos:end="87:49"><call pos:start="87:5" pos:end="87:49"><name pos:start="87:5" pos:end="87:21">slirp_select_fill</name><argument_list pos:start="87:22" pos:end="87:49">(<argument pos:start="87:23" pos:end="87:27"><expr pos:start="87:23" pos:end="87:27"><operator pos:start="87:23" pos:end="87:23">&amp;</operator><name pos:start="87:24" pos:end="87:27">nfds</name></expr></argument>, <argument pos:start="87:30" pos:end="87:34"><expr pos:start="87:30" pos:end="87:34"><operator pos:start="87:30" pos:end="87:30">&amp;</operator><name pos:start="87:31" pos:end="87:34">rfds</name></expr></argument>, <argument pos:start="87:37" pos:end="87:41"><expr pos:start="87:37" pos:end="87:41"><operator pos:start="87:37" pos:end="87:37">&amp;</operator><name pos:start="87:38" pos:end="87:41">wfds</name></expr></argument>, <argument pos:start="87:44" pos:end="87:48"><expr pos:start="87:44" pos:end="87:48"><operator pos:start="87:44" pos:end="87:44">&amp;</operator><name pos:start="87:45" pos:end="87:48">xfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:33"><expr pos:start="91:5" pos:end="91:32"><call pos:start="91:5" pos:end="91:32"><name pos:start="91:5" pos:end="91:30">qemu_mutex_unlock_iothread</name><argument_list pos:start="91:31" pos:end="91:32">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:53"><expr pos:start="93:5" pos:end="93:52"><name pos:start="93:5" pos:end="93:7">ret</name> <operator pos:start="93:9" pos:end="93:9">=</operator> <call pos:start="93:11" pos:end="93:52"><name pos:start="93:11" pos:end="93:16">select</name><argument_list pos:start="93:17" pos:end="93:52">(<argument pos:start="93:18" pos:end="93:25"><expr pos:start="93:18" pos:end="93:25"><name pos:start="93:18" pos:end="93:21">nfds</name> <operator pos:start="93:23" pos:end="93:23">+</operator> <literal type="number" pos:start="93:25" pos:end="93:25">1</literal></expr></argument>, <argument pos:start="93:28" pos:end="93:32"><expr pos:start="93:28" pos:end="93:32"><operator pos:start="93:28" pos:end="93:28">&amp;</operator><name pos:start="93:29" pos:end="93:32">rfds</name></expr></argument>, <argument pos:start="93:35" pos:end="93:39"><expr pos:start="93:35" pos:end="93:39"><operator pos:start="93:35" pos:end="93:35">&amp;</operator><name pos:start="93:36" pos:end="93:39">wfds</name></expr></argument>, <argument pos:start="93:42" pos:end="93:46"><expr pos:start="93:42" pos:end="93:46"><operator pos:start="93:42" pos:end="93:42">&amp;</operator><name pos:start="93:43" pos:end="93:46">xfds</name></expr></argument>, <argument pos:start="93:49" pos:end="93:51"><expr pos:start="93:49" pos:end="93:51"><operator pos:start="93:49" pos:end="93:49">&amp;</operator><name pos:start="93:50" pos:end="93:51">tv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:31"><expr pos:start="95:5" pos:end="95:30"><call pos:start="95:5" pos:end="95:30"><name pos:start="95:5" pos:end="95:28">qemu_mutex_lock_iothread</name><argument_list pos:start="95:29" pos:end="95:30">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="129:5"><if pos:start="97:5" pos:end="129:5">if <condition pos:start="97:8" pos:end="97:16">(<expr pos:start="97:9" pos:end="97:15"><name pos:start="97:9" pos:end="97:11">ret</name> <operator pos:start="97:13" pos:end="97:13">&gt;</operator> <literal type="number" pos:start="97:15" pos:end="97:15">0</literal></expr>)</condition> <block pos:start="97:18" pos:end="129:5">{<block_content pos:start="99:9" pos:end="127:9">

        <decl_stmt pos:start="99:9" pos:end="99:30"><decl pos:start="99:9" pos:end="99:29"><type pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:23">IOHandlerRecord</name> <modifier pos:start="99:25" pos:end="99:25">*</modifier></type><name pos:start="99:26" pos:end="99:29">pioh</name></decl>;</decl_stmt>



        <macro pos:start="103:9" pos:end="103:57"><name pos:start="103:9" pos:end="103:26">QLIST_FOREACH_SAFE</name><argument_list pos:start="103:27" pos:end="103:57">(<argument pos:start="103:28" pos:end="103:30">ioh</argument>, <argument pos:start="103:33" pos:end="103:44">&amp;io_handlers</argument>, <argument pos:start="103:47" pos:end="103:50">next</argument>, <argument pos:start="103:53" pos:end="103:56">pioh</argument>)</argument_list></macro> <block pos:start="103:59" pos:end="127:9">{<block_content pos:start="105:13" pos:end="125:13">

            <if_stmt pos:start="105:13" pos:end="113:13"><if pos:start="105:13" pos:end="113:13">if <condition pos:start="105:16" pos:end="105:29">(<expr pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:19">ioh</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:28">deleted</name></name></expr>)</condition> <block pos:start="105:31" pos:end="113:13">{<block_content pos:start="107:17" pos:end="111:25">

                <expr_stmt pos:start="107:17" pos:end="107:40"><expr pos:start="107:17" pos:end="107:39"><call pos:start="107:17" pos:end="107:39"><name pos:start="107:17" pos:end="107:28">QLIST_REMOVE</name><argument_list pos:start="107:29" pos:end="107:39">(<argument pos:start="107:30" pos:end="107:32"><expr pos:start="107:30" pos:end="107:32"><name pos:start="107:30" pos:end="107:32">ioh</name></expr></argument>, <argument pos:start="107:35" pos:end="107:38"><expr pos:start="107:35" pos:end="107:38"><name pos:start="107:35" pos:end="107:38">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:31"><expr pos:start="109:17" pos:end="109:30"><call pos:start="109:17" pos:end="109:30"><name pos:start="109:17" pos:end="109:25">qemu_free</name><argument_list pos:start="109:26" pos:end="109:30">(<argument pos:start="109:27" pos:end="109:29"><expr pos:start="109:27" pos:end="109:29"><name pos:start="109:27" pos:end="109:29">ioh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="111:17" pos:end="111:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="115:13" pos:end="119:13"><if pos:start="115:13" pos:end="119:13">if <condition pos:start="115:16" pos:end="115:57">(<expr pos:start="115:17" pos:end="115:56"><name pos:start="115:17" pos:end="115:28"><name pos:start="115:17" pos:end="115:19">ioh</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:28">fd_read</name></name> <operator pos:start="115:30" pos:end="115:31">&amp;&amp;</operator> <call pos:start="115:33" pos:end="115:56"><name pos:start="115:33" pos:end="115:40">FD_ISSET</name><argument_list pos:start="115:41" pos:end="115:56">(<argument pos:start="115:42" pos:end="115:48"><expr pos:start="115:42" pos:end="115:48"><name pos:start="115:42" pos:end="115:48"><name pos:start="115:42" pos:end="115:44">ioh</name><operator pos:start="115:45" pos:end="115:46">-&gt;</operator><name pos:start="115:47" pos:end="115:48">fd</name></name></expr></argument>, <argument pos:start="115:51" pos:end="115:55"><expr pos:start="115:51" pos:end="115:55"><operator pos:start="115:51" pos:end="115:51">&amp;</operator><name pos:start="115:52" pos:end="115:55">rfds</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:59" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:42">

                <expr_stmt pos:start="117:17" pos:end="117:42"><expr pos:start="117:17" pos:end="117:41"><call pos:start="117:17" pos:end="117:41"><name pos:start="117:17" pos:end="117:28"><name pos:start="117:17" pos:end="117:19">ioh</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:28">fd_read</name></name><argument_list pos:start="117:29" pos:end="117:41">(<argument pos:start="117:30" pos:end="117:40"><expr pos:start="117:30" pos:end="117:40"><name pos:start="117:30" pos:end="117:40"><name pos:start="117:30" pos:end="117:32">ioh</name><operator pos:start="117:33" pos:end="117:34">-&gt;</operator><name pos:start="117:35" pos:end="117:40">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="121:13" pos:end="125:13"><if pos:start="121:13" pos:end="125:13">if <condition pos:start="121:16" pos:end="121:58">(<expr pos:start="121:17" pos:end="121:57"><name pos:start="121:17" pos:end="121:29"><name pos:start="121:17" pos:end="121:19">ioh</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:29">fd_write</name></name> <operator pos:start="121:31" pos:end="121:32">&amp;&amp;</operator> <call pos:start="121:34" pos:end="121:57"><name pos:start="121:34" pos:end="121:41">FD_ISSET</name><argument_list pos:start="121:42" pos:end="121:57">(<argument pos:start="121:43" pos:end="121:49"><expr pos:start="121:43" pos:end="121:49"><name pos:start="121:43" pos:end="121:49"><name pos:start="121:43" pos:end="121:45">ioh</name><operator pos:start="121:46" pos:end="121:47">-&gt;</operator><name pos:start="121:48" pos:end="121:49">fd</name></name></expr></argument>, <argument pos:start="121:52" pos:end="121:56"><expr pos:start="121:52" pos:end="121:56"><operator pos:start="121:52" pos:end="121:52">&amp;</operator><name pos:start="121:53" pos:end="121:56">wfds</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="121:60" pos:end="125:13">{<block_content pos:start="123:17" pos:end="123:43">

                <expr_stmt pos:start="123:17" pos:end="123:43"><expr pos:start="123:17" pos:end="123:42"><call pos:start="123:17" pos:end="123:42"><name pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:19">ioh</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:29">fd_write</name></name><argument_list pos:start="123:30" pos:end="123:42">(<argument pos:start="123:31" pos:end="123:41"><expr pos:start="123:31" pos:end="123:41"><name pos:start="123:31" pos:end="123:41"><name pos:start="123:31" pos:end="123:33">ioh</name><operator pos:start="123:34" pos:end="123:35">-&gt;</operator><name pos:start="123:36" pos:end="123:41">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:54"><expr pos:start="133:5" pos:end="133:53"><call pos:start="133:5" pos:end="133:53"><name pos:start="133:5" pos:end="133:21">slirp_select_poll</name><argument_list pos:start="133:22" pos:end="133:53">(<argument pos:start="133:23" pos:end="133:27"><expr pos:start="133:23" pos:end="133:27"><operator pos:start="133:23" pos:end="133:23">&amp;</operator><name pos:start="133:24" pos:end="133:27">rfds</name></expr></argument>, <argument pos:start="133:30" pos:end="133:34"><expr pos:start="133:30" pos:end="133:34"><operator pos:start="133:30" pos:end="133:30">&amp;</operator><name pos:start="133:31" pos:end="133:34">wfds</name></expr></argument>, <argument pos:start="133:37" pos:end="133:41"><expr pos:start="133:37" pos:end="133:41"><operator pos:start="133:37" pos:end="133:37">&amp;</operator><name pos:start="133:38" pos:end="133:41">xfds</name></expr></argument>, <argument pos:start="133:44" pos:end="133:52"><expr pos:start="133:44" pos:end="133:52"><operator pos:start="133:44" pos:end="133:44">(</operator><name pos:start="133:45" pos:end="133:47">ret</name> <operator pos:start="133:49" pos:end="133:49">&lt;</operator> <literal type="number" pos:start="133:51" pos:end="133:51">0</literal><operator pos:start="133:52" pos:end="133:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:26"><expr pos:start="137:5" pos:end="137:25"><call pos:start="137:5" pos:end="137:25"><name pos:start="137:5" pos:end="137:23">qemu_run_all_timers</name><argument_list pos:start="137:24" pos:end="137:25">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="141:5" pos:end="143:16">/* Check bottom-halves last in case any of the earlier events triggered

       them.  */</comment>

    <expr_stmt pos:start="145:5" pos:end="145:19"><expr pos:start="145:5" pos:end="145:18"><call pos:start="145:5" pos:end="145:18"><name pos:start="145:5" pos:end="145:16">qemu_bh_poll</name><argument_list pos:start="145:17" pos:end="145:18">()</argument_list></call></expr>;</expr_stmt>



</block_content>}</block></function>
</unit>
