<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21081.c" pos:tabs="8"><function pos:start="1:1" pos:end="76:15"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">parse_outputs</name><parameter_list pos:start="1:25" pos:end="5:72">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><specifier pos:start="1:26" pos:end="1:30">const</specifier> <name pos:start="1:32" pos:end="1:35">char</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier><modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">buf</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:70"><decl pos:start="1:44" pos:end="1:70"><type pos:start="1:44" pos:end="1:70"><name pos:start="1:44" pos:end="1:56">AVFilterInOut</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier><modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:70">curr_inputs</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:52"><decl pos:start="3:26" pos:end="3:52"><type pos:start="3:26" pos:end="3:52"><name pos:start="3:26" pos:end="3:38">AVFilterInOut</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier><modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:52">open_inputs</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:53"><decl pos:start="5:26" pos:end="5:53"><type pos:start="5:26" pos:end="5:53"><name pos:start="5:26" pos:end="5:38">AVFilterInOut</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier><modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:53">open_outputs</name></decl></parameter>, <parameter pos:start="5:56" pos:end="5:71"><decl pos:start="5:56" pos:end="5:71"><type pos:start="5:56" pos:end="5:71"><name pos:start="5:56" pos:end="5:62">AVClass</name> <modifier pos:start="5:64" pos:end="5:64">*</modifier></type><name pos:start="5:65" pos:end="5:71">log_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="76:15">{<block_content pos:start="9:5" pos:end="76:15">

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:16">pad</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr></init></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="76:15">while <condition pos:start="13:11" pos:end="13:24">(<expr pos:start="13:12" pos:end="13:23"><operator pos:start="13:12" pos:end="13:12">*</operator><operator pos:start="13:13" pos:end="13:13">*</operator><name pos:start="13:14" pos:end="13:16">buf</name> <operator pos:start="13:18" pos:end="13:19">==</operator> <literal type="char" pos:start="13:21" pos:end="13:23">'['</literal></expr>)</condition> <block pos:start="13:26" pos:end="76:15">{<block_content pos:start="15:9" pos:end="76:15">

        <decl_stmt pos:start="15:9" pos:end="15:51"><decl pos:start="15:9" pos:end="15:50"><type pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:12">char</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:18">name</name> <init pos:start="15:20" pos:end="15:50">= <expr pos:start="15:22" pos:end="15:50"><call pos:start="15:22" pos:end="15:50"><name pos:start="15:22" pos:end="15:36">parse_link_name</name><argument_list pos:start="15:37" pos:end="15:50">(<argument pos:start="15:38" pos:end="15:40"><expr pos:start="15:38" pos:end="15:40"><name pos:start="15:38" pos:end="15:40">buf</name></expr></argument>, <argument pos:start="15:43" pos:end="15:49"><expr pos:start="15:43" pos:end="15:49"><name pos:start="15:43" pos:end="15:49">log_ctx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:29"><decl pos:start="17:9" pos:end="17:28"><type pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:21">AVFilterInOut</name> <modifier pos:start="17:23" pos:end="17:23">*</modifier></type><name pos:start="17:24" pos:end="17:28">match</name></decl>;</decl_stmt>



        <decl_stmt pos:start="21:9" pos:end="21:44"><decl pos:start="21:9" pos:end="21:43"><type pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:21">AVFilterInOut</name> <modifier pos:start="21:23" pos:end="21:23">*</modifier></type><name pos:start="21:24" pos:end="21:28">input</name> <init pos:start="21:30" pos:end="21:43">= <expr pos:start="21:32" pos:end="21:43"><operator pos:start="21:32" pos:end="21:32">*</operator><name pos:start="21:33" pos:end="21:43">curr_inputs</name></expr></init></decl>;</decl_stmt>







        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><operator pos:start="29:9" pos:end="29:9">*</operator><name pos:start="29:10" pos:end="29:20">curr_inputs</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:43"><operator pos:start="29:24" pos:end="29:24">(</operator><operator pos:start="29:25" pos:end="29:25">*</operator><name pos:start="29:26" pos:end="29:36">curr_inputs</name><operator pos:start="29:37" pos:end="29:37">)</operator><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:43">next</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="40:49"><if pos:start="33:9" pos:end="40:49">if <condition pos:start="33:12" pos:end="33:18">(<expr pos:start="33:13" pos:end="33:17"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:17">name</name></expr>)</condition><block type="pseudo" pos:start="40:9" pos:end="40:49"><block_content pos:start="40:9" pos:end="40:49">




        <comment type="block" pos:start="38:9" pos:end="38:69">/* First check if the label is not in the open_inputs list */</comment>

        <expr_stmt pos:start="40:9" pos:end="40:49"><expr pos:start="40:9" pos:end="40:48"><name pos:start="40:9" pos:end="40:13">match</name> <operator pos:start="40:15" pos:end="40:15">=</operator> <call pos:start="40:17" pos:end="40:48"><name pos:start="40:17" pos:end="40:29">extract_inout</name><argument_list pos:start="40:30" pos:end="40:48">(<argument pos:start="40:31" pos:end="40:34"><expr pos:start="40:31" pos:end="40:34"><name pos:start="40:31" pos:end="40:34">name</name></expr></argument>, <argument pos:start="40:37" pos:end="40:47"><expr pos:start="40:37" pos:end="40:47"><name pos:start="40:37" pos:end="40:47">open_inputs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="44:9" pos:end="76:15"><if pos:start="44:9" pos:end="60:9">if <condition pos:start="44:12" pos:end="44:18">(<expr pos:start="44:13" pos:end="44:17"><name pos:start="44:13" pos:end="44:17">match</name></expr>)</condition> <block pos:start="44:20" pos:end="60:9">{<block_content pos:start="46:13" pos:end="58:27">

            <if_stmt pos:start="46:13" pos:end="50:27"><if pos:start="46:13" pos:end="50:27">if <condition pos:start="46:16" pos:end="48:84">(<expr pos:start="46:17" pos:end="48:83"><operator pos:start="46:17" pos:end="46:17">(</operator><name pos:start="46:18" pos:end="46:20">ret</name> <operator pos:start="46:22" pos:end="46:22">=</operator> <call pos:start="46:24" pos:end="48:78"><name pos:start="46:24" pos:end="46:34">link_filter</name><argument_list pos:start="46:35" pos:end="48:78">(<argument pos:start="46:36" pos:end="46:52"><expr pos:start="46:36" pos:end="46:52"><name pos:start="46:36" pos:end="46:52"><name pos:start="46:36" pos:end="46:40">input</name><operator pos:start="46:41" pos:end="46:42">-&gt;</operator><name pos:start="46:43" pos:end="46:52">filter_ctx</name></name></expr></argument>, <argument pos:start="46:55" pos:end="46:68"><expr pos:start="46:55" pos:end="46:68"><name pos:start="46:55" pos:end="46:68"><name pos:start="46:55" pos:end="46:59">input</name><operator pos:start="46:60" pos:end="46:61">-&gt;</operator><name pos:start="46:62" pos:end="46:68">pad_idx</name></name></expr></argument>,

                                   <argument pos:start="48:36" pos:end="48:52"><expr pos:start="48:36" pos:end="48:52"><name pos:start="48:36" pos:end="48:52"><name pos:start="48:36" pos:end="48:40">match</name><operator pos:start="48:41" pos:end="48:42">-&gt;</operator><name pos:start="48:43" pos:end="48:52">filter_ctx</name></name></expr></argument>, <argument pos:start="48:55" pos:end="48:68"><expr pos:start="48:55" pos:end="48:68"><name pos:start="48:55" pos:end="48:68"><name pos:start="48:55" pos:end="48:59">match</name><operator pos:start="48:60" pos:end="48:61">-&gt;</operator><name pos:start="48:62" pos:end="48:68">pad_idx</name></name></expr></argument>, <argument pos:start="48:71" pos:end="48:77"><expr pos:start="48:71" pos:end="48:77"><name pos:start="48:71" pos:end="48:77">log_ctx</name></expr></argument>)</argument_list></call><operator pos:start="48:79" pos:end="48:79">)</operator> <operator pos:start="48:81" pos:end="48:81">&lt;</operator> <literal type="number" pos:start="48:83" pos:end="48:83">0</literal></expr>)</condition><block type="pseudo" pos:start="50:17" pos:end="50:27"><block_content pos:start="50:17" pos:end="50:27">

                <return pos:start="50:17" pos:end="50:27">return <expr pos:start="50:24" pos:end="50:26"><name pos:start="50:24" pos:end="50:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="52:13" pos:end="52:33"><expr pos:start="52:13" pos:end="52:32"><call pos:start="52:13" pos:end="52:32"><name pos:start="52:13" pos:end="52:19">av_free</name><argument_list pos:start="52:20" pos:end="52:32">(<argument pos:start="52:21" pos:end="52:31"><expr pos:start="52:21" pos:end="52:31"><name pos:start="52:21" pos:end="52:31"><name pos:start="52:21" pos:end="52:25">match</name><operator pos:start="52:26" pos:end="52:27">-&gt;</operator><name pos:start="52:28" pos:end="52:31">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="54:13" pos:end="54:26"><expr pos:start="54:13" pos:end="54:25"><call pos:start="54:13" pos:end="54:25"><name pos:start="54:13" pos:end="54:19">av_free</name><argument_list pos:start="54:20" pos:end="54:25">(<argument pos:start="54:21" pos:end="54:24"><expr pos:start="54:21" pos:end="54:24"><name pos:start="54:21" pos:end="54:24">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="56:13" pos:end="56:27"><expr pos:start="56:13" pos:end="56:26"><call pos:start="56:13" pos:end="56:26"><name pos:start="56:13" pos:end="56:19">av_free</name><argument_list pos:start="56:20" pos:end="56:26">(<argument pos:start="56:21" pos:end="56:25"><expr pos:start="56:21" pos:end="56:25"><name pos:start="56:21" pos:end="56:25">match</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="58:13" pos:end="58:27"><expr pos:start="58:13" pos:end="58:26"><call pos:start="58:13" pos:end="58:26"><name pos:start="58:13" pos:end="58:19">av_free</name><argument_list pos:start="58:20" pos:end="58:26">(<argument pos:start="58:21" pos:end="58:25"><expr pos:start="58:21" pos:end="58:25"><name pos:start="58:21" pos:end="58:25">input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="60:11" pos:end="76:15">else <block pos:start="60:16" pos:end="76:15">{<block_content pos:start="64:13" pos:end="76:15">

            <comment type="block" pos:start="62:13" pos:end="62:74">/* Not in the list, so add the first input as a open_output */</comment>

            <expr_stmt pos:start="64:13" pos:end="64:31"><expr pos:start="64:13" pos:end="64:30"><name pos:start="64:13" pos:end="64:23"><name pos:start="64:13" pos:end="64:17">input</name><operator pos:start="64:18" pos:end="64:19">-&gt;</operator><name pos:start="64:20" pos:end="64:23">name</name></name> <operator pos:start="64:25" pos:end="64:25">=</operator> <name pos:start="64:27" pos:end="64:30">name</name></expr>;</expr_stmt>

            <expr_stmt pos:start="66:13" pos:end="66:46"><expr pos:start="66:13" pos:end="66:45"><call pos:start="66:13" pos:end="66:45"><name pos:start="66:13" pos:end="66:24">insert_inout</name><argument_list pos:start="66:25" pos:end="66:45">(<argument pos:start="66:26" pos:end="66:37"><expr pos:start="66:26" pos:end="66:37"><name pos:start="66:26" pos:end="66:37">open_outputs</name></expr></argument>, <argument pos:start="66:40" pos:end="66:44"><expr pos:start="66:40" pos:end="66:44"><name pos:start="66:40" pos:end="66:44">input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <expr_stmt pos:start="69:9" pos:end="69:42"><expr pos:start="69:9" pos:end="69:41"><operator pos:start="69:9" pos:end="69:9">*</operator><name pos:start="69:10" pos:end="69:12">buf</name> <operator pos:start="69:14" pos:end="69:15">+=</operator> <call pos:start="69:17" pos:end="69:41"><name pos:start="69:17" pos:end="69:22">strspn</name><argument_list pos:start="69:23" pos:end="69:41">(<argument pos:start="69:24" pos:end="69:27"><expr pos:start="69:24" pos:end="69:27"><operator pos:start="69:24" pos:end="69:24">*</operator><name pos:start="69:25" pos:end="69:27">buf</name></expr></argument>, <argument pos:start="69:30" pos:end="69:40"><expr pos:start="69:30" pos:end="69:40"><name pos:start="69:30" pos:end="69:40">WHITESPACES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:14"><expr pos:start="71:9" pos:end="71:13"><name pos:start="71:9" pos:end="71:11">pad</name><operator pos:start="71:12" pos:end="71:13">++</operator></expr>;</expr_stmt>




    <return pos:start="76:5" pos:end="76:15">return <expr pos:start="76:12" pos:end="76:14"><name pos:start="76:12" pos:end="76:14">pad</name></expr>;</return></block_content></block></else></if_stmt></block_content></block></while></block_content></block></function>
</unit>
