<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23799.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">alloc_audio_output_buf</name><parameter_list pos:start="1:34" pos:end="3:68">(<parameter pos:start="1:35" pos:end="1:53"><decl pos:start="1:35" pos:end="1:53"><type pos:start="1:35" pos:end="1:53"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">dec</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:74"><decl pos:start="1:56" pos:end="1:74"><type pos:start="1:56" pos:end="1:74"><name pos:start="1:56" pos:end="1:69">AVCodecContext</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">enc</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:48"><decl pos:start="3:35" pos:end="3:48"><type pos:start="3:35" pos:end="3:48"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:48">nb_samples</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:67"><decl pos:start="3:51" pos:end="3:67"><type pos:start="3:51" pos:end="3:67"><name pos:start="3:51" pos:end="3:53">int</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:67">buf_linesize</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:13">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:29">audio_buf_samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">audio_buf_size</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:58">/* calculate required number of samples to allocate */</comment>

    <expr_stmt pos:start="15:5" pos:end="17:41"><expr pos:start="15:5" pos:end="17:40"><name pos:start="15:5" pos:end="15:21">audio_buf_samples</name> <operator pos:start="15:23" pos:end="15:23">=</operator> <operator pos:start="15:25" pos:end="15:25">(</operator><operator pos:start="15:26" pos:end="15:26">(</operator><name pos:start="15:27" pos:end="15:33">int64_t</name><operator pos:start="15:34" pos:end="15:34">)</operator><name pos:start="15:35" pos:end="15:44">nb_samples</name> <operator pos:start="15:46" pos:end="15:46">*</operator> <name pos:start="15:48" pos:end="15:63"><name pos:start="15:48" pos:end="15:50">enc</name><operator pos:start="15:51" pos:end="15:52">-&gt;</operator><name pos:start="15:53" pos:end="15:63">sample_rate</name></name> <operator pos:start="15:65" pos:end="15:65">+</operator> <name pos:start="15:67" pos:end="15:82"><name pos:start="15:67" pos:end="15:69">dec</name><operator pos:start="15:70" pos:end="15:71">-&gt;</operator><name pos:start="15:72" pos:end="15:82">sample_rate</name></name><operator pos:start="15:83" pos:end="15:83">)</operator> <operator pos:start="15:85" pos:end="15:85">/</operator>

                        <name pos:start="17:25" pos:end="17:40"><name pos:start="17:25" pos:end="17:27">dec</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:40">sample_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:54"><expr pos:start="19:5" pos:end="19:53"><name pos:start="19:5" pos:end="19:21">audio_buf_samples</name> <operator pos:start="19:23" pos:end="19:23">=</operator> <literal type="number" pos:start="19:25" pos:end="19:25">4</literal> <operator pos:start="19:27" pos:end="19:27">*</operator> <name pos:start="19:29" pos:end="19:45">audio_buf_samples</name> <operator pos:start="19:47" pos:end="19:47">+</operator> <literal type="number" pos:start="19:49" pos:end="19:53">10000</literal></expr>;</expr_stmt> <comment type="line" pos:start="19:56" pos:end="19:87">// safety factors for resampling</comment>

    <expr_stmt pos:start="21:5" pos:end="21:66"><expr pos:start="21:5" pos:end="21:65"><name pos:start="21:5" pos:end="21:21">audio_buf_samples</name> <operator pos:start="21:23" pos:end="21:23">=</operator> <call pos:start="21:25" pos:end="21:65"><name pos:start="21:25" pos:end="21:29">FFMAX</name><argument_list pos:start="21:30" pos:end="21:65">(<argument pos:start="21:31" pos:end="21:47"><expr pos:start="21:31" pos:end="21:47"><name pos:start="21:31" pos:end="21:47">audio_buf_samples</name></expr></argument>, <argument pos:start="21:50" pos:end="21:64"><expr pos:start="21:50" pos:end="21:64"><name pos:start="21:50" pos:end="21:64"><name pos:start="21:50" pos:end="21:52">enc</name><operator pos:start="21:53" pos:end="21:54">-&gt;</operator><name pos:start="21:55" pos:end="21:64">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:31"><if pos:start="23:5" pos:end="25:31">if <condition pos:start="23:8" pos:end="23:36">(<expr pos:start="23:9" pos:end="23:35"><name pos:start="23:9" pos:end="23:25">audio_buf_samples</name> <operator pos:start="23:27" pos:end="23:27">&gt;</operator> <name pos:start="23:29" pos:end="23:35">INT_MAX</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:31"><block_content pos:start="25:9" pos:end="25:31">

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="33:68"><expr pos:start="29:5" pos:end="33:67"><name pos:start="29:5" pos:end="29:18">audio_buf_size</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <call pos:start="29:22" pos:end="33:67"><name pos:start="29:22" pos:end="29:47">av_samples_get_buffer_size</name><argument_list pos:start="29:48" pos:end="33:67">(<argument pos:start="29:49" pos:end="29:60"><expr pos:start="29:49" pos:end="29:60"><name pos:start="29:49" pos:end="29:60">buf_linesize</name></expr></argument>, <argument pos:start="29:63" pos:end="29:75"><expr pos:start="29:63" pos:end="29:75"><name pos:start="29:63" pos:end="29:75"><name pos:start="29:63" pos:end="29:65">enc</name><operator pos:start="29:66" pos:end="29:67">-&gt;</operator><name pos:start="29:68" pos:end="29:75">channels</name></name></expr></argument>,

                                                <argument pos:start="31:49" pos:end="31:65"><expr pos:start="31:49" pos:end="31:65"><name pos:start="31:49" pos:end="31:65">audio_buf_samples</name></expr></argument>,

                                                <argument pos:start="33:49" pos:end="33:63"><expr pos:start="33:49" pos:end="33:63"><name pos:start="33:49" pos:end="33:63"><name pos:start="33:49" pos:end="33:51">enc</name><operator pos:start="33:52" pos:end="33:53">-&gt;</operator><name pos:start="33:54" pos:end="33:63">sample_fmt</name></name></expr></argument>, <argument pos:start="33:66" pos:end="33:66"><expr pos:start="33:66" pos:end="33:66"><literal type="number" pos:start="33:66" pos:end="33:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:30"><if pos:start="35:5" pos:end="37:30">if <condition pos:start="35:8" pos:end="35:27">(<expr pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:22">audio_buf_size</name> <operator pos:start="35:24" pos:end="35:24">&lt;</operator> <literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:30"><block_content pos:start="37:9" pos:end="37:30">

        <return pos:start="37:9" pos:end="37:30">return <expr pos:start="37:16" pos:end="37:29"><name pos:start="37:16" pos:end="37:29">audio_buf_size</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:74"><expr pos:start="41:5" pos:end="41:73"><call pos:start="41:5" pos:end="41:73"><name pos:start="41:5" pos:end="41:18">av_fast_malloc</name><argument_list pos:start="41:19" pos:end="41:73">(<argument pos:start="41:20" pos:end="41:29"><expr pos:start="41:20" pos:end="41:29"><operator pos:start="41:20" pos:end="41:20">&amp;</operator><name pos:start="41:21" pos:end="41:29">audio_buf</name></expr></argument>, <argument pos:start="41:32" pos:end="41:56"><expr pos:start="41:32" pos:end="41:56"><operator pos:start="41:32" pos:end="41:32">&amp;</operator><name pos:start="41:33" pos:end="41:56">allocated_audio_buf_size</name></expr></argument>, <argument pos:start="41:59" pos:end="41:72"><expr pos:start="41:59" pos:end="41:72"><name pos:start="41:59" pos:end="41:72">audio_buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:31"><if pos:start="43:5" pos:end="45:31">if <condition pos:start="43:8" pos:end="43:19">(<expr pos:start="43:9" pos:end="43:18"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:18">audio_buf</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:31"><block_content pos:start="45:9" pos:end="45:31">

        <return pos:start="45:9" pos:end="45:31">return <expr pos:start="45:16" pos:end="45:30"><call pos:start="45:16" pos:end="45:30"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
