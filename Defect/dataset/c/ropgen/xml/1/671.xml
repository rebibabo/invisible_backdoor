<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/671.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">mv88w8618_eth_init</name><parameter_list pos:start="1:31" pos:end="1:72">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:38">NICInfo</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">nd</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">uint32_t</name></type> <name pos:start="1:54" pos:end="1:57">base</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:67">qemu_irq</name></type> <name pos:start="1:69" pos:end="1:71">irq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:63">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">mv88w8618_eth_state</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:26">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">iomemtype</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:42"><expr pos:start="11:5" pos:end="11:41"><call pos:start="11:5" pos:end="11:41"><name pos:start="11:5" pos:end="11:24">qemu_check_nic_model</name><argument_list pos:start="11:25" pos:end="11:41">(<argument pos:start="11:26" pos:end="11:27"><expr pos:start="11:26" pos:end="11:27"><name pos:start="11:26" pos:end="11:27">nd</name></expr></argument>, <argument pos:start="11:30" pos:end="11:40"><expr pos:start="11:30" pos:end="11:40"><literal type="string" pos:start="11:30" pos:end="11:40">"mv88w8618"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:50"><expr pos:start="15:5" pos:end="15:49"><name pos:start="15:5" pos:end="15:5">s</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="15:49"><name pos:start="15:9" pos:end="15:20">qemu_mallocz</name><argument_list pos:start="15:21" pos:end="15:49">(<argument pos:start="15:22" pos:end="15:48"><expr pos:start="15:22" pos:end="15:48"><sizeof pos:start="15:22" pos:end="15:48">sizeof<argument_list pos:start="15:28" pos:end="15:48">(<argument pos:start="15:29" pos:end="15:47"><expr pos:start="15:29" pos:end="15:47"><name pos:start="15:29" pos:end="15:47">mv88w8618_eth_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:10">irq</name></name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:16">irq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="21:66"><expr pos:start="19:5" pos:end="21:65"><name pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:9">vc</name></name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="21:65"><name pos:start="19:13" pos:end="19:32">qemu_new_vlan_client</name><argument_list pos:start="19:33" pos:end="21:65">(<argument pos:start="19:34" pos:end="19:41"><expr pos:start="19:34" pos:end="19:41"><name pos:start="19:34" pos:end="19:41"><name pos:start="19:34" pos:end="19:35">nd</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:41">vlan</name></name></expr></argument>, <argument pos:start="19:44" pos:end="19:52"><expr pos:start="19:44" pos:end="19:52"><name pos:start="19:44" pos:end="19:52"><name pos:start="19:44" pos:end="19:45">nd</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:52">model</name></name></expr></argument>, <argument pos:start="19:55" pos:end="19:62"><expr pos:start="19:55" pos:end="19:62"><name pos:start="19:55" pos:end="19:62"><name pos:start="19:55" pos:end="19:56">nd</name><operator pos:start="19:57" pos:end="19:58">-&gt;</operator><name pos:start="19:59" pos:end="19:62">name</name></name></expr></argument>,

                                 <argument pos:start="21:34" pos:end="21:44"><expr pos:start="21:34" pos:end="21:44"><name pos:start="21:34" pos:end="21:44">eth_receive</name></expr></argument>, <argument pos:start="21:47" pos:end="21:61"><expr pos:start="21:47" pos:end="21:61"><name pos:start="21:47" pos:end="21:61">eth_can_receive</name></expr></argument>, <argument pos:start="21:64" pos:end="21:64"><expr pos:start="21:64" pos:end="21:64"><name pos:start="21:64" pos:end="21:64">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:65"><expr pos:start="23:5" pos:end="25:64"><name pos:start="23:5" pos:end="23:13">iomemtype</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="25:64"><name pos:start="23:17" pos:end="23:38">cpu_register_io_memory</name><argument_list pos:start="23:39" pos:end="25:64">(<argument pos:start="23:40" pos:end="23:40"><expr pos:start="23:40" pos:end="23:40"><literal type="number" pos:start="23:40" pos:end="23:40">0</literal></expr></argument>, <argument pos:start="23:43" pos:end="23:62"><expr pos:start="23:43" pos:end="23:62"><name pos:start="23:43" pos:end="23:62">mv88w8618_eth_readfn</name></expr></argument>,

                                       <argument pos:start="25:40" pos:end="25:60"><expr pos:start="25:40" pos:end="25:60"><name pos:start="25:40" pos:end="25:60">mv88w8618_eth_writefn</name></expr></argument>, <argument pos:start="25:63" pos:end="25:63"><expr pos:start="25:63" pos:end="25:63"><name pos:start="25:63" pos:end="25:63">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:63"><expr pos:start="27:5" pos:end="27:62"><call pos:start="27:5" pos:end="27:62"><name pos:start="27:5" pos:end="27:32">cpu_register_physical_memory</name><argument_list pos:start="27:33" pos:end="27:62">(<argument pos:start="27:34" pos:end="27:37"><expr pos:start="27:34" pos:end="27:37"><name pos:start="27:34" pos:end="27:37">base</name></expr></argument>, <argument pos:start="27:40" pos:end="27:50"><expr pos:start="27:40" pos:end="27:50"><name pos:start="27:40" pos:end="27:50">MP_ETH_SIZE</name></expr></argument>, <argument pos:start="27:53" pos:end="27:61"><expr pos:start="27:53" pos:end="27:61"><name pos:start="27:53" pos:end="27:61">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
