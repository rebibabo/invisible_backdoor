<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7207.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">dump_iterate</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:33">DumpState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:5">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">RAMBlock</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:19">block</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:16">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="53:5">while <condition pos:start="13:11" pos:end="13:13">(<expr pos:start="13:12" pos:end="13:12"><literal type="number" pos:start="13:12" pos:end="13:12">1</literal></expr>)</condition> <block pos:start="13:15" pos:end="53:5">{<block_content pos:start="15:9" pos:end="51:9">

        <expr_stmt pos:start="15:9" pos:end="15:25"><expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:13">block</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <name pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:17">s</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:24">block</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:12">size</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:20">block</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:28">length</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="31:9"><if pos:start="21:9" pos:end="31:9">if <condition pos:start="21:12" pos:end="21:26">(<expr pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:25">has_filter</name></name></expr>)</condition> <block pos:start="21:28" pos:end="31:9">{<block_content pos:start="23:13" pos:end="29:13">

            <expr_stmt pos:start="23:13" pos:end="23:29"><expr pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:16">size</name> <operator pos:start="23:18" pos:end="23:19">-=</operator> <name pos:start="23:21" pos:end="23:28"><name pos:start="23:21" pos:end="23:21">s</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:28">start</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="29:13"><if pos:start="25:13" pos:end="29:13">if <condition pos:start="25:16" pos:end="25:69">(<expr pos:start="25:17" pos:end="25:68"><name pos:start="25:17" pos:end="25:24"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:24">begin</name></name> <operator pos:start="25:26" pos:end="25:26">+</operator> <name pos:start="25:28" pos:end="25:36"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:36">length</name></name> <operator pos:start="25:38" pos:end="25:38">&lt;</operator> <name pos:start="25:40" pos:end="25:52"><name pos:start="25:40" pos:end="25:44">block</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:52">offset</name></name> <operator pos:start="25:54" pos:end="25:54">+</operator> <name pos:start="25:56" pos:end="25:68"><name pos:start="25:56" pos:end="25:60">block</name><operator pos:start="25:61" pos:end="25:62">-&gt;</operator><name pos:start="25:63" pos:end="25:68">length</name></name></expr>)</condition> <block pos:start="25:71" pos:end="29:13">{<block_content pos:start="27:17" pos:end="27:79">

                <expr_stmt pos:start="27:17" pos:end="27:79"><expr pos:start="27:17" pos:end="27:78"><name pos:start="27:17" pos:end="27:20">size</name> <operator pos:start="27:22" pos:end="27:23">-=</operator> <name pos:start="27:25" pos:end="27:37"><name pos:start="27:25" pos:end="27:29">block</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:37">offset</name></name> <operator pos:start="27:39" pos:end="27:39">+</operator> <name pos:start="27:41" pos:end="27:53"><name pos:start="27:41" pos:end="27:45">block</name><operator pos:start="27:46" pos:end="27:47">-&gt;</operator><name pos:start="27:48" pos:end="27:53">length</name></name> <operator pos:start="27:55" pos:end="27:55">-</operator> <operator pos:start="27:57" pos:end="27:57">(</operator><name pos:start="27:58" pos:end="27:65"><name pos:start="27:58" pos:end="27:58">s</name><operator pos:start="27:59" pos:end="27:60">-&gt;</operator><name pos:start="27:61" pos:end="27:65">begin</name></name> <operator pos:start="27:67" pos:end="27:67">+</operator> <name pos:start="27:69" pos:end="27:77"><name pos:start="27:69" pos:end="27:69">s</name><operator pos:start="27:70" pos:end="27:71">-&gt;</operator><name pos:start="27:72" pos:end="27:77">length</name></name><operator pos:start="27:78" pos:end="27:78">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:53"><expr pos:start="33:9" pos:end="33:52"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:52"><name pos:start="33:15" pos:end="33:26">write_memory</name><argument_list pos:start="33:27" pos:end="33:52">(<argument pos:start="33:28" pos:end="33:28"><expr pos:start="33:28" pos:end="33:28"><name pos:start="33:28" pos:end="33:28">s</name></expr></argument>, <argument pos:start="33:31" pos:end="33:35"><expr pos:start="33:31" pos:end="33:35"><name pos:start="33:31" pos:end="33:35">block</name></expr></argument>, <argument pos:start="33:38" pos:end="33:45"><expr pos:start="33:38" pos:end="33:45"><name pos:start="33:38" pos:end="33:45"><name pos:start="33:38" pos:end="33:38">s</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:45">start</name></name></expr></argument>, <argument pos:start="33:48" pos:end="33:51"><expr pos:start="33:48" pos:end="33:51"><name pos:start="33:48" pos:end="33:51">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:22">(<expr pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:18">==</operator> <operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>)</condition> <block pos:start="35:24" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:23">

            <return pos:start="37:13" pos:end="37:23">return <expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:39"><expr pos:start="43:9" pos:end="43:38"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:38"><name pos:start="43:15" pos:end="43:28">get_next_block</name><argument_list pos:start="43:29" pos:end="43:38">(<argument pos:start="43:30" pos:end="43:30"><expr pos:start="43:30" pos:end="43:30"><name pos:start="43:30" pos:end="43:30">s</name></expr></argument>, <argument pos:start="43:33" pos:end="43:37"><expr pos:start="43:33" pos:end="43:37"><name pos:start="43:33" pos:end="43:37">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:21">(<expr pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:18">==</operator> <literal type="number" pos:start="45:20" pos:end="45:20">1</literal></expr>)</condition> <block pos:start="45:23" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:21">

            <expr_stmt pos:start="47:13" pos:end="47:30"><expr pos:start="47:13" pos:end="47:29"><call pos:start="47:13" pos:end="47:29"><name pos:start="47:13" pos:end="47:26">dump_completed</name><argument_list pos:start="47:27" pos:end="47:29">(<argument pos:start="47:28" pos:end="47:28"><expr pos:start="47:28" pos:end="47:28"><name pos:start="47:28" pos:end="47:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:21">return <expr pos:start="49:20" pos:end="49:20"><literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
