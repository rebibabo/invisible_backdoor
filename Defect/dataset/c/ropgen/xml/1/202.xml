<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/202.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:29">esp_mem_readb</name><parameter_list pos:start="1:30" pos:end="1:68">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:67"><decl pos:start="1:45" pos:end="1:67"><type pos:start="1:45" pos:end="1:67"><name pos:start="1:45" pos:end="1:62">target_phys_addr_t</name></type> <name pos:start="1:64" pos:end="1:67">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:27">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">ESPState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:24">= <expr pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:24">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:18">saddr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:51"><expr pos:start="11:5" pos:end="11:50"><name pos:start="11:5" pos:end="11:9">saddr</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <operator pos:start="11:13" pos:end="11:13">(</operator><name pos:start="11:14" pos:end="11:17">addr</name> <operator pos:start="11:19" pos:end="11:20">&gt;&gt;</operator> <name pos:start="11:22" pos:end="11:32"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:32">it_shift</name></name><operator pos:start="11:33" pos:end="11:33">)</operator> <operator pos:start="11:35" pos:end="11:35">&amp;</operator> <operator pos:start="11:37" pos:end="11:37">(</operator><name pos:start="11:38" pos:end="11:45">ESP_REGS</name> <operator pos:start="11:47" pos:end="11:47">-</operator> <literal type="number" pos:start="11:49" pos:end="11:49">1</literal><operator pos:start="11:50" pos:end="11:50">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:63"><expr pos:start="13:5" pos:end="13:62"><call pos:start="13:5" pos:end="13:62"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="13:62">(<argument pos:start="13:13" pos:end="13:37"><expr pos:start="13:13" pos:end="13:37"><literal type="string" pos:start="13:13" pos:end="13:37">"read reg[%d]: 0x%2.2x\n"</literal></expr></argument>, <argument pos:start="13:40" pos:end="13:44"><expr pos:start="13:40" pos:end="13:44"><name pos:start="13:40" pos:end="13:44">saddr</name></expr></argument>, <argument pos:start="13:47" pos:end="13:61"><expr pos:start="13:47" pos:end="13:61"><name pos:start="13:47" pos:end="13:61"><name pos:start="13:47" pos:end="13:47">s</name><operator pos:start="13:48" pos:end="13:49">-&gt;</operator><name pos:start="13:50" pos:end="13:54">rregs</name><index pos:start="13:55" pos:end="13:61">[<expr pos:start="13:56" pos:end="13:60"><name pos:start="13:56" pos:end="13:60">saddr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="15:5" pos:end="65:5">switch <condition pos:start="15:12" pos:end="15:18">(<expr pos:start="15:13" pos:end="15:17"><name pos:start="15:13" pos:end="15:17">saddr</name></expr>)</condition> <block pos:start="15:20" pos:end="65:5">{<block_content pos:start="17:5" pos:end="63:14">

    <case pos:start="17:5" pos:end="17:18">case <expr pos:start="17:10" pos:end="17:17"><name pos:start="17:10" pos:end="17:17">ESP_FIFO</name></expr>:</case>

        <if_stmt pos:start="19:9" pos:end="39:9"><if pos:start="19:9" pos:end="39:9">if <condition pos:start="19:12" pos:end="19:27">(<expr pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:22">ti_size</name></name> <operator pos:start="19:24" pos:end="19:24">&gt;</operator> <literal type="number" pos:start="19:26" pos:end="19:26">0</literal></expr>)</condition> <block pos:start="19:29" pos:end="39:9">{<block_content pos:start="21:13" pos:end="37:29">

            <expr_stmt pos:start="21:13" pos:end="21:25"><expr pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:22">ti_size</name></name><operator pos:start="21:23" pos:end="21:24">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="35:13"><if pos:start="23:13" pos:end="31:13">if <condition pos:start="23:16" pos:end="23:59">(<expr pos:start="23:17" pos:end="23:58"><operator pos:start="23:17" pos:end="23:17">(</operator><name pos:start="23:18" pos:end="23:36"><name pos:start="23:18" pos:end="23:18">s</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:25">rregs</name><index pos:start="23:26" pos:end="23:36">[<expr pos:start="23:27" pos:end="23:35"><name pos:start="23:27" pos:end="23:35">ESP_RSTAT</name></expr>]</index></name> <operator pos:start="23:38" pos:end="23:38">&amp;</operator> <name pos:start="23:40" pos:end="23:52">STAT_PIO_MASK</name><operator pos:start="23:53" pos:end="23:53">)</operator> <operator pos:start="23:55" pos:end="23:56">==</operator> <literal type="number" pos:start="23:58" pos:end="23:58">0</literal></expr>)</condition> <block pos:start="23:61" pos:end="31:13">{<block_content pos:start="27:17" pos:end="29:39">

                <comment type="block" pos:start="25:17" pos:end="25:35">/* Data in/out.  */</comment>

                <expr_stmt pos:start="27:17" pos:end="27:72"><expr pos:start="27:17" pos:end="27:71"><call pos:start="27:17" pos:end="27:71"><name pos:start="27:17" pos:end="27:23">fprintf</name><argument_list pos:start="27:24" pos:end="27:71">(<argument pos:start="27:25" pos:end="27:30"><expr pos:start="27:25" pos:end="27:30"><name pos:start="27:25" pos:end="27:30">stderr</name></expr></argument>, <argument pos:start="27:33" pos:end="27:70"><expr pos:start="27:33" pos:end="27:70"><literal type="string" pos:start="27:33" pos:end="27:70">"esp: PIO data read not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:39"><expr pos:start="29:17" pos:end="29:38"><name pos:start="29:17" pos:end="29:34"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:24">rregs</name><index pos:start="29:25" pos:end="29:34">[<expr pos:start="29:26" pos:end="29:33"><name pos:start="29:26" pos:end="29:33">ESP_FIFO</name></expr>]</index></name> <operator pos:start="29:36" pos:end="29:36">=</operator> <literal type="number" pos:start="29:38" pos:end="29:38">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="31:15" pos:end="35:13">else <block pos:start="31:20" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:61">

                <expr_stmt pos:start="33:17" pos:end="33:61"><expr pos:start="33:17" pos:end="33:60"><name pos:start="33:17" pos:end="33:34"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:24">rregs</name><index pos:start="33:25" pos:end="33:34">[<expr pos:start="33:26" pos:end="33:33"><name pos:start="33:26" pos:end="33:33">ESP_FIFO</name></expr>]</index></name> <operator pos:start="33:36" pos:end="33:36">=</operator> <name pos:start="33:38" pos:end="33:60"><name pos:start="33:38" pos:end="33:38">s</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:46">ti_buf</name><index pos:start="33:47" pos:end="33:60">[<expr pos:start="33:48" pos:end="33:59"><name pos:start="33:48" pos:end="33:57"><name pos:start="33:48" pos:end="33:48">s</name><operator pos:start="33:49" pos:end="33:50">-&gt;</operator><name pos:start="33:51" pos:end="33:57">ti_rptr</name></name><operator pos:start="33:58" pos:end="33:59">++</operator></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:29"><expr pos:start="37:13" pos:end="37:28"><call pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:25">esp_raise_irq</name><argument_list pos:start="37:26" pos:end="37:28">(<argument pos:start="37:27" pos:end="37:27"><expr pos:start="37:27" pos:end="37:27"><name pos:start="37:27" pos:end="37:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:28">(<expr pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:22">ti_size</name></name> <operator pos:start="41:24" pos:end="41:25">==</operator> <literal type="number" pos:start="41:27" pos:end="41:27">0</literal></expr>)</condition> <block pos:start="41:30" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:27">

            <expr_stmt pos:start="43:13" pos:end="43:27"><expr pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">ti_rptr</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <literal type="number" pos:start="43:26" pos:end="43:26">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:27"><expr pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:22">ti_wptr</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:19">case <expr pos:start="51:10" pos:end="51:18"><name pos:start="51:10" pos:end="51:18">ESP_RINTR</name></expr>:</case>

        <comment type="line" pos:start="53:9" pos:end="53:44">// Clear interrupt/error status bits</comment>

        <expr_stmt pos:start="55:9" pos:end="55:52"><expr pos:start="55:9" pos:end="55:51"><name pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:16">rregs</name><index pos:start="55:17" pos:end="55:27">[<expr pos:start="55:18" pos:end="55:26"><name pos:start="55:18" pos:end="55:26">ESP_RSTAT</name></expr>]</index></name> <operator pos:start="55:29" pos:end="55:30">&amp;=</operator> <operator pos:start="55:32" pos:end="55:32">~</operator><operator pos:start="55:33" pos:end="55:33">(</operator><name pos:start="55:34" pos:end="55:40">STAT_GE</name> <operator pos:start="55:42" pos:end="55:42">|</operator> <name pos:start="55:44" pos:end="55:50">STAT_PE</name><operator pos:start="55:51" pos:end="55:51">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:25"><expr pos:start="57:9" pos:end="57:24"><call pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:21">esp_lower_irq</name><argument_list pos:start="57:22" pos:end="57:24">(<argument pos:start="57:23" pos:end="57:23"><expr pos:start="57:23" pos:end="57:23"><name pos:start="57:23" pos:end="57:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <default pos:start="61:5" pos:end="61:12">default:</default>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="67:5" pos:end="67:27">return <expr pos:start="67:12" pos:end="67:26"><name pos:start="67:12" pos:end="67:26"><name pos:start="67:12" pos:end="67:12">s</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:19">rregs</name><index pos:start="67:20" pos:end="67:26">[<expr pos:start="67:21" pos:end="67:25"><name pos:start="67:21" pos:end="67:25">saddr</name></expr>]</index></name></expr>;</return>

</block_content>}</block></function>
</unit>
