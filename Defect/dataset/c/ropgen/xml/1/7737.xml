<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7737.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">peak_init_writer</name><parameter_list pos:start="1:36" pos:end="1:55">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:53"><name pos:start="1:37" pos:end="1:51">AVFormatContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:27">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">WAVMuxContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">wav</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">enc</name> <init pos:start="7:25" pos:end="7:46">= <expr pos:start="7:27" pos:end="7:46"><name pos:start="7:27" pos:end="7:39"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:36">streams</name><index pos:start="7:37" pos:end="7:39">[<expr pos:start="7:38" pos:end="7:38"><literal type="number" pos:start="7:38" pos:end="7:38">0</literal></expr>]</index></name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:46">codec</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="25:5"><if pos:start="11:5" pos:end="25:5">if <condition pos:start="11:8" pos:end="17:47">(<expr pos:start="11:9" pos:end="17:46"><name pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:11">enc</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:21">codec_id</name></name> <operator pos:start="11:23" pos:end="11:24">!=</operator> <name pos:start="11:26" pos:end="11:43">AV_CODEC_ID_PCM_S8</name> <operator pos:start="11:45" pos:end="11:46">&amp;&amp;</operator>

        <name pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:11">enc</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:21">codec_id</name></name> <operator pos:start="13:23" pos:end="13:24">!=</operator> <name pos:start="13:26" pos:end="13:46">AV_CODEC_ID_PCM_S16LE</name> <operator pos:start="13:48" pos:end="13:49">&amp;&amp;</operator>

        <name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:11">enc</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:21">codec_id</name></name> <operator pos:start="15:23" pos:end="15:24">!=</operator> <name pos:start="15:26" pos:end="15:43">AV_CODEC_ID_PCM_U8</name> <operator pos:start="15:45" pos:end="15:46">&amp;&amp;</operator>

        <name pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:11">enc</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:21">codec_id</name></name> <operator pos:start="17:23" pos:end="17:24">!=</operator> <name pos:start="17:26" pos:end="17:46">AV_CODEC_ID_PCM_U16LE</name></expr>)</condition> <block pos:start="17:49" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:18">

        <expr_stmt pos:start="19:9" pos:end="21:89"><expr pos:start="19:9" pos:end="21:88"><call pos:start="19:9" pos:end="21:88"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="21:88">(<argument pos:start="19:16" pos:end="19:16"><expr pos:start="19:16" pos:end="19:16"><name pos:start="19:16" pos:end="19:16">s</name></expr></argument>, <argument pos:start="19:19" pos:end="19:30"><expr pos:start="19:19" pos:end="19:30"><name pos:start="19:19" pos:end="19:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:33" pos:end="19:73"><expr pos:start="19:33" pos:end="19:73"><literal type="string" pos:start="19:33" pos:end="19:73">"%s codec not supported for Peak Chunk\n"</literal></expr></argument>,

               <argument pos:start="21:16" pos:end="21:87"><expr pos:start="21:16" pos:end="21:87"><ternary pos:start="21:16" pos:end="21:87"><condition pos:start="21:16" pos:end="21:44"><expr pos:start="21:16" pos:end="21:42"><name pos:start="21:16" pos:end="21:28"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:25">streams</name><index pos:start="21:26" pos:end="21:28">[<expr pos:start="21:27" pos:end="21:27"><literal type="number" pos:start="21:27" pos:end="21:27">0</literal></expr>]</index></name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:35">codec</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:42">codec</name></name></expr> ?</condition><then pos:start="21:46" pos:end="21:78"> <expr pos:start="21:46" pos:end="21:78"><name pos:start="21:46" pos:end="21:58"><name pos:start="21:46" pos:end="21:46">s</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:55">streams</name><index pos:start="21:56" pos:end="21:58">[<expr pos:start="21:57" pos:end="21:57"><literal type="number" pos:start="21:57" pos:end="21:57">0</literal></expr>]</index></name><operator pos:start="21:59" pos:end="21:60">-&gt;</operator><name pos:start="21:61" pos:end="21:78"><name pos:start="21:61" pos:end="21:65">codec</name><operator pos:start="21:66" pos:end="21:67">-&gt;</operator><name pos:start="21:68" pos:end="21:72">codec</name><operator pos:start="21:73" pos:end="21:74">-&gt;</operator><name pos:start="21:75" pos:end="21:78">name</name></name></expr> </then><else pos:start="21:80" pos:end="21:87">: <expr pos:start="21:82" pos:end="21:87"><literal type="string" pos:start="21:82" pos:end="21:87">"NONE"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:62"><expr pos:start="29:5" pos:end="29:61"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:7">wav</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:17">peak_bps</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <call pos:start="29:21" pos:end="29:57"><name pos:start="29:21" pos:end="29:42">av_get_bits_per_sample</name><argument_list pos:start="29:43" pos:end="29:57">(<argument pos:start="29:44" pos:end="29:56"><expr pos:start="29:44" pos:end="29:56"><name pos:start="29:44" pos:end="29:56"><name pos:start="29:44" pos:end="29:46">enc</name><operator pos:start="29:47" pos:end="29:48">-&gt;</operator><name pos:start="29:49" pos:end="29:56">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:59" pos:end="29:59">/</operator> <literal type="number" pos:start="29:61" pos:end="29:61">8</literal></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:69">(<expr pos:start="33:9" pos:end="33:68"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:11">wav</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:21">peak_bps</name></name> <operator pos:start="33:23" pos:end="33:24">==</operator> <literal type="number" pos:start="33:26" pos:end="33:26">1</literal> <operator pos:start="33:28" pos:end="33:29">&amp;&amp;</operator> <name pos:start="33:31" pos:end="33:46"><name pos:start="33:31" pos:end="33:33">wav</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:46">peak_format</name></name> <operator pos:start="33:48" pos:end="33:49">==</operator> <name pos:start="33:51" pos:end="33:68">PEAK_FORMAT_UINT16</name></expr>)</condition> <block pos:start="33:71" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:31">

        <expr_stmt pos:start="35:9" pos:end="37:76"><expr pos:start="35:9" pos:end="37:75"><call pos:start="35:9" pos:end="37:75"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="37:75">(<argument pos:start="35:16" pos:end="35:16"><expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">s</name></expr></argument>, <argument pos:start="35:19" pos:end="35:30"><expr pos:start="35:19" pos:end="35:30"><name pos:start="35:19" pos:end="35:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="37:16" pos:end="37:74"><expr pos:start="37:16" pos:end="37:74"><literal type="string" pos:start="37:16" pos:end="37:74">"Writing 16 bit peak for 8 bit audio does not make sense\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:31">return <expr pos:start="39:16" pos:end="39:30"><call pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:30">(<argument pos:start="39:24" pos:end="39:29"><expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:77"><expr pos:start="45:5" pos:end="45:76"><name pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:7">wav</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:20">peak_maxpos</name></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:76"><name pos:start="45:24" pos:end="45:33">av_mallocz</name><argument_list pos:start="45:34" pos:end="45:76">(<argument pos:start="45:35" pos:end="45:75"><expr pos:start="45:35" pos:end="45:75"><name pos:start="45:35" pos:end="45:47"><name pos:start="45:35" pos:end="45:37">enc</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:47">channels</name></name> <operator pos:start="45:49" pos:end="45:49">*</operator> <sizeof pos:start="45:51" pos:end="45:75">sizeof<argument_list pos:start="45:57" pos:end="45:75">(<argument pos:start="45:58" pos:end="45:74"><expr pos:start="45:58" pos:end="45:74"><operator pos:start="45:58" pos:end="45:58">*</operator><name pos:start="45:59" pos:end="45:74"><name pos:start="45:59" pos:end="45:61">wav</name><operator pos:start="45:62" pos:end="45:63">-&gt;</operator><name pos:start="45:64" pos:end="45:74">peak_maxpos</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:19"><if pos:start="47:5" pos:end="49:19">if <condition pos:start="47:8" pos:end="47:26">(<expr pos:start="47:9" pos:end="47:25"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:25"><name pos:start="47:10" pos:end="47:12">wav</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:25">peak_maxpos</name></name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:19"><block_content pos:start="49:9" pos:end="49:19">

        <goto pos:start="49:9" pos:end="49:19">goto <name pos:start="49:14" pos:end="49:18">nomem</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:77"><expr pos:start="51:5" pos:end="51:76"><name pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:7">wav</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:20">peak_maxneg</name></name> <operator pos:start="51:22" pos:end="51:22">=</operator> <call pos:start="51:24" pos:end="51:76"><name pos:start="51:24" pos:end="51:33">av_mallocz</name><argument_list pos:start="51:34" pos:end="51:76">(<argument pos:start="51:35" pos:end="51:75"><expr pos:start="51:35" pos:end="51:75"><name pos:start="51:35" pos:end="51:47"><name pos:start="51:35" pos:end="51:37">enc</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:47">channels</name></name> <operator pos:start="51:49" pos:end="51:49">*</operator> <sizeof pos:start="51:51" pos:end="51:75">sizeof<argument_list pos:start="51:57" pos:end="51:75">(<argument pos:start="51:58" pos:end="51:74"><expr pos:start="51:58" pos:end="51:74"><operator pos:start="51:58" pos:end="51:58">*</operator><name pos:start="51:59" pos:end="51:74"><name pos:start="51:59" pos:end="51:61">wav</name><operator pos:start="51:62" pos:end="51:63">-&gt;</operator><name pos:start="51:64" pos:end="51:74">peak_maxneg</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="55:19"><if pos:start="53:5" pos:end="55:19">if <condition pos:start="53:8" pos:end="53:26">(<expr pos:start="53:9" pos:end="53:25"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:25"><name pos:start="53:10" pos:end="53:12">wav</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:25">peak_maxneg</name></name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:19"><block_content pos:start="55:9" pos:end="55:19">

        <goto pos:start="55:9" pos:end="55:19">goto <name pos:start="55:14" pos:end="55:18">nomem</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:51"><expr pos:start="59:5" pos:end="59:50"><name pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:7">wav</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:20">peak_output</name></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <call pos:start="59:24" pos:end="59:50"><name pos:start="59:24" pos:end="59:32">av_malloc</name><argument_list pos:start="59:33" pos:end="59:50">(<argument pos:start="59:34" pos:end="59:49"><expr pos:start="59:34" pos:end="59:49"><name pos:start="59:34" pos:end="59:49">PEAK_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="63:19"><if pos:start="61:5" pos:end="63:19">if <condition pos:start="61:8" pos:end="61:26">(<expr pos:start="61:9" pos:end="61:25"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:25"><name pos:start="61:10" pos:end="61:12">wav</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:25">peak_output</name></name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:19"><block_content pos:start="63:9" pos:end="63:19">

        <goto pos:start="63:9" pos:end="63:19">goto <name pos:start="63:14" pos:end="63:18">nomem</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:45"><expr pos:start="67:5" pos:end="67:44"><name pos:start="67:5" pos:end="67:25"><name pos:start="67:5" pos:end="67:7">wav</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:25">peak_outbuf_size</name></name> <operator pos:start="67:27" pos:end="67:27">=</operator> <name pos:start="67:29" pos:end="67:44">PEAK_BUFFER_SIZE</name></expr>;</expr_stmt>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>



<label pos:start="75:1" pos:end="75:6"><name pos:start="75:1" pos:end="75:5">nomem</name>:</label>

    <expr_stmt pos:start="77:5" pos:end="77:47"><expr pos:start="77:5" pos:end="77:46"><call pos:start="77:5" pos:end="77:46"><name pos:start="77:5" pos:end="77:10">av_log</name><argument_list pos:start="77:11" pos:end="77:46">(<argument pos:start="77:12" pos:end="77:12"><expr pos:start="77:12" pos:end="77:12"><name pos:start="77:12" pos:end="77:12">s</name></expr></argument>, <argument pos:start="77:15" pos:end="77:26"><expr pos:start="77:15" pos:end="77:26"><name pos:start="77:15" pos:end="77:26">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:29" pos:end="77:45"><expr pos:start="77:29" pos:end="77:45"><literal type="string" pos:start="77:29" pos:end="77:45">"Out of memory\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:25"><expr pos:start="79:5" pos:end="79:24"><call pos:start="79:5" pos:end="79:24"><name pos:start="79:5" pos:end="79:21">peak_free_buffers</name><argument_list pos:start="79:22" pos:end="79:24">(<argument pos:start="79:23" pos:end="79:23"><expr pos:start="79:23" pos:end="79:23"><name pos:start="79:23" pos:end="79:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="81:5" pos:end="81:27">return <expr pos:start="81:12" pos:end="81:26"><call pos:start="81:12" pos:end="81:26"><name pos:start="81:12" pos:end="81:18">AVERROR</name><argument_list pos:start="81:19" pos:end="81:26">(<argument pos:start="81:20" pos:end="81:25"><expr pos:start="81:20" pos:end="81:25"><name pos:start="81:20" pos:end="81:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
