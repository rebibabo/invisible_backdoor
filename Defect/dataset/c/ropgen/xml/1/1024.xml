<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1024.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">set_pci_devfn</name><parameter_list pos:start="1:26" pos:end="3:57">(<parameter pos:start="1:27" pos:end="1:37"><decl pos:start="1:27" pos:end="1:37"><type pos:start="1:27" pos:end="1:37"><name pos:start="1:27" pos:end="1:32">Object</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">obj</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:49"><decl pos:start="1:40" pos:end="1:49"><type pos:start="1:40" pos:end="1:49"><name pos:start="1:40" pos:end="1:46">Visitor</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">v</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:63">opaque</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:42"><decl pos:start="3:27" pos:end="3:42"><type pos:start="3:27" pos:end="3:42"><specifier pos:start="3:27" pos:end="3:31">const</specifier> <name pos:start="3:33" pos:end="3:36">char</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:42">name</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:56"><decl pos:start="3:45" pos:end="3:56"><type pos:start="3:45" pos:end="3:56"><name pos:start="3:45" pos:end="3:49">Error</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier><modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:56">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:65">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">dev</name> <init pos:start="7:22" pos:end="7:34">= <expr pos:start="7:24" pos:end="7:34"><call pos:start="7:24" pos:end="7:34"><name pos:start="7:24" pos:end="7:29">DEVICE</name><argument_list pos:start="7:30" pos:end="7:34">(<argument pos:start="7:31" pos:end="7:33"><expr pos:start="7:31" pos:end="7:33"><name pos:start="7:31" pos:end="7:33">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">Property</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">prop</name> <init pos:start="9:20" pos:end="9:27">= <expr pos:start="9:22" pos:end="9:27"><name pos:start="9:22" pos:end="9:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint32_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">ptr</name> <init pos:start="11:19" pos:end="11:48">= <expr pos:start="11:21" pos:end="11:48"><call pos:start="11:21" pos:end="11:48"><name pos:start="11:21" pos:end="11:37">qdev_get_prop_ptr</name><argument_list pos:start="11:38" pos:end="11:48">(<argument pos:start="11:39" pos:end="11:41"><expr pos:start="11:39" pos:end="11:41"><name pos:start="11:39" pos:end="11:41">dev</name></expr></argument>, <argument pos:start="11:44" pos:end="11:47"><expr pos:start="11:44" pos:end="11:47"><name pos:start="11:44" pos:end="11:47">prop</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:21">slot</name></decl>, <decl pos:start="13:24" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:24" pos:end="13:25">fn</name></decl>, <decl pos:start="13:28" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:28" pos:end="13:28">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:20">local_err</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:13">str</name> <init pos:start="17:15" pos:end="17:26">= <expr pos:start="17:17" pos:end="17:26"><operator pos:start="17:17" pos:end="17:17">(</operator><name pos:start="17:18" pos:end="17:21">char</name> <operator pos:start="17:23" pos:end="17:23">*</operator><operator pos:start="17:24" pos:end="17:24">)</operator><literal type="string" pos:start="17:25" pos:end="17:26">""</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:40">(<expr pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:11">dev</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:18">state</name></name> <operator pos:start="21:20" pos:end="21:21">!=</operator> <name pos:start="21:23" pos:end="21:39">DEV_STATE_CREATED</name></expr>)</condition> <block pos:start="21:42" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:48"><expr pos:start="23:9" pos:end="23:47"><call pos:start="23:9" pos:end="23:47"><name pos:start="23:9" pos:end="23:17">error_set</name><argument_list pos:start="23:18" pos:end="23:47">(<argument pos:start="23:19" pos:end="23:22"><expr pos:start="23:19" pos:end="23:22"><name pos:start="23:19" pos:end="23:22">errp</name></expr></argument>, <argument pos:start="23:25" pos:end="23:46"><expr pos:start="23:25" pos:end="23:46"><name pos:start="23:25" pos:end="23:46">QERR_PERMISSION_DENIED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><call pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:18">visit_type_str</name><argument_list pos:start="31:19" pos:end="31:45">(<argument pos:start="31:20" pos:end="31:20"><expr pos:start="31:20" pos:end="31:20"><name pos:start="31:20" pos:end="31:20">v</name></expr></argument>, <argument pos:start="31:23" pos:end="31:26"><expr pos:start="31:23" pos:end="31:26"><operator pos:start="31:23" pos:end="31:23">&amp;</operator><name pos:start="31:24" pos:end="31:26">str</name></expr></argument>, <argument pos:start="31:29" pos:end="31:32"><expr pos:start="31:29" pos:end="31:32"><name pos:start="31:29" pos:end="31:32">name</name></expr></argument>, <argument pos:start="31:35" pos:end="31:44"><expr pos:start="31:35" pos:end="31:44"><operator pos:start="31:35" pos:end="31:35">&amp;</operator><name pos:start="31:36" pos:end="31:44">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:17">local_err</name></expr>)</condition> <block pos:start="33:20" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:53">

        <expr_stmt pos:start="35:9" pos:end="35:30"><expr pos:start="35:9" pos:end="35:29"><call pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:18">error_free</name><argument_list pos:start="35:19" pos:end="35:29">(<argument pos:start="35:20" pos:end="35:28"><expr pos:start="35:20" pos:end="35:28"><name pos:start="35:20" pos:end="35:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:53">return <expr pos:start="37:16" pos:end="37:52"><call pos:start="37:16" pos:end="37:52"><name pos:start="37:16" pos:end="37:24">set_int32</name><argument_list pos:start="37:25" pos:end="37:52">(<argument pos:start="37:26" pos:end="37:28"><expr pos:start="37:26" pos:end="37:28"><name pos:start="37:26" pos:end="37:28">obj</name></expr></argument>, <argument pos:start="37:31" pos:end="37:31"><expr pos:start="37:31" pos:end="37:31"><name pos:start="37:31" pos:end="37:31">v</name></expr></argument>, <argument pos:start="37:34" pos:end="37:39"><expr pos:start="37:34" pos:end="37:39"><name pos:start="37:34" pos:end="37:39">opaque</name></expr></argument>, <argument pos:start="37:42" pos:end="37:45"><expr pos:start="37:42" pos:end="37:45"><name pos:start="37:42" pos:end="37:45">name</name></expr></argument>, <argument pos:start="37:48" pos:end="37:51"><expr pos:start="37:48" pos:end="37:51"><name pos:start="37:48" pos:end="37:51">errp</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="53:5"><if pos:start="43:5" pos:end="53:5">if <condition pos:start="43:8" pos:end="43:52">(<expr pos:start="43:9" pos:end="43:51"><call pos:start="43:9" pos:end="43:46"><name pos:start="43:9" pos:end="43:14">sscanf</name><argument_list pos:start="43:15" pos:end="43:46">(<argument pos:start="43:16" pos:end="43:18"><expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">str</name></expr></argument>, <argument pos:start="43:21" pos:end="43:29"><expr pos:start="43:21" pos:end="43:29"><literal type="string" pos:start="43:21" pos:end="43:29">"%x.%x%n"</literal></expr></argument>, <argument pos:start="43:32" pos:end="43:36"><expr pos:start="43:32" pos:end="43:36"><operator pos:start="43:32" pos:end="43:32">&amp;</operator><name pos:start="43:33" pos:end="43:36">slot</name></expr></argument>, <argument pos:start="43:39" pos:end="43:41"><expr pos:start="43:39" pos:end="43:41"><operator pos:start="43:39" pos:end="43:39">&amp;</operator><name pos:start="43:40" pos:end="43:41">fn</name></expr></argument>, <argument pos:start="43:44" pos:end="43:45"><expr pos:start="43:44" pos:end="43:45"><operator pos:start="43:44" pos:end="43:44">&amp;</operator><name pos:start="43:45" pos:end="43:45">n</name></expr></argument>)</argument_list></call> <operator pos:start="43:48" pos:end="43:49">!=</operator> <literal type="number" pos:start="43:51" pos:end="43:51">2</literal></expr>)</condition> <block pos:start="43:54" pos:end="53:5">{<block_content pos:start="45:9" pos:end="51:9">

        <expr_stmt pos:start="45:9" pos:end="45:15"><expr pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:10">fn</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:48">(<expr pos:start="47:13" pos:end="47:47"><call pos:start="47:13" pos:end="47:42"><name pos:start="47:13" pos:end="47:18">sscanf</name><argument_list pos:start="47:19" pos:end="47:42">(<argument pos:start="47:20" pos:end="47:22"><expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">str</name></expr></argument>, <argument pos:start="47:25" pos:end="47:30"><expr pos:start="47:25" pos:end="47:30"><literal type="string" pos:start="47:25" pos:end="47:30">"%x%n"</literal></expr></argument>, <argument pos:start="47:33" pos:end="47:37"><expr pos:start="47:33" pos:end="47:37"><operator pos:start="47:33" pos:end="47:33">&amp;</operator><name pos:start="47:34" pos:end="47:37">slot</name></expr></argument>, <argument pos:start="47:40" pos:end="47:41"><expr pos:start="47:40" pos:end="47:41"><operator pos:start="47:40" pos:end="47:40">&amp;</operator><name pos:start="47:41" pos:end="47:41">n</name></expr></argument>)</argument_list></call> <operator pos:start="47:44" pos:end="47:45">!=</operator> <literal type="number" pos:start="47:47" pos:end="47:47">1</literal></expr>)</condition> <block pos:start="47:50" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:25">

            <goto pos:start="49:13" pos:end="49:25">goto <name pos:start="49:18" pos:end="49:24">invalid</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:46">(<expr pos:start="55:9" pos:end="55:45"><name pos:start="55:9" pos:end="55:14"><name pos:start="55:9" pos:end="55:11">str</name><index pos:start="55:12" pos:end="55:14">[<expr pos:start="55:13" pos:end="55:13"><name pos:start="55:13" pos:end="55:13">n</name></expr>]</index></name> <operator pos:start="55:16" pos:end="55:17">!=</operator> <literal type="char" pos:start="55:19" pos:end="55:22">'\0'</literal> <operator pos:start="55:24" pos:end="55:25">||</operator> <name pos:start="55:27" pos:end="55:28">fn</name> <operator pos:start="55:30" pos:end="55:30">&gt;</operator> <literal type="number" pos:start="55:32" pos:end="55:32">7</literal> <operator pos:start="55:34" pos:end="55:35">||</operator> <name pos:start="55:37" pos:end="55:40">slot</name> <operator pos:start="55:42" pos:end="55:42">&gt;</operator> <literal type="number" pos:start="55:44" pos:end="55:45">31</literal></expr>)</condition> <block pos:start="55:48" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:21">

        <goto pos:start="57:9" pos:end="57:21">goto <name pos:start="57:14" pos:end="57:20">invalid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:26"><expr pos:start="61:5" pos:end="61:25"><operator pos:start="61:5" pos:end="61:5">*</operator><name pos:start="61:6" pos:end="61:8">ptr</name> <operator pos:start="61:10" pos:end="61:10">=</operator> <name pos:start="61:12" pos:end="61:15">slot</name> <operator pos:start="61:17" pos:end="61:18">&lt;&lt;</operator> <literal type="number" pos:start="61:20" pos:end="61:20">3</literal> <operator pos:start="61:22" pos:end="61:22">|</operator> <name pos:start="61:24" pos:end="61:25">fn</name></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:11">return;</return>



<label pos:start="67:1" pos:end="67:8"><name pos:start="67:1" pos:end="67:7">invalid</name>:</label>

    <expr_stmt pos:start="69:5" pos:end="69:65"><expr pos:start="69:5" pos:end="69:64"><call pos:start="69:5" pos:end="69:64"><name pos:start="69:5" pos:end="69:34">error_set_from_qdev_prop_error</name><argument_list pos:start="69:35" pos:end="69:64">(<argument pos:start="69:36" pos:end="69:39"><expr pos:start="69:36" pos:end="69:39"><name pos:start="69:36" pos:end="69:39">errp</name></expr></argument>, <argument pos:start="69:42" pos:end="69:47"><expr pos:start="69:42" pos:end="69:47"><name pos:start="69:42" pos:end="69:47">EINVAL</name></expr></argument>, <argument pos:start="69:50" pos:end="69:52"><expr pos:start="69:50" pos:end="69:52"><name pos:start="69:50" pos:end="69:52">dev</name></expr></argument>, <argument pos:start="69:55" pos:end="69:58"><expr pos:start="69:55" pos:end="69:58"><name pos:start="69:55" pos:end="69:58">prop</name></expr></argument>, <argument pos:start="69:61" pos:end="69:63"><expr pos:start="69:61" pos:end="69:63"><name pos:start="69:61" pos:end="69:63">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
