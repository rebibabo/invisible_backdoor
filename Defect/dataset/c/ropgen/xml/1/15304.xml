<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15304.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:47">virtio_queue_aio_set_host_notifier_handler</name><parameter_list pos:start="1:48" pos:end="3:78">(<parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:57">VirtQueue</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">vq</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:78"><decl pos:start="1:64" pos:end="1:78"><type pos:start="1:64" pos:end="1:78"><name pos:start="1:64" pos:end="1:73">AioContext</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:78">ctx</name></decl></parameter>,

                                                <parameter pos:start="3:49" pos:end="3:59"><decl pos:start="3:49" pos:end="3:59"><type pos:start="3:49" pos:end="3:59"><name pos:start="3:49" pos:end="3:52">bool</name></type> <name pos:start="3:54" pos:end="3:59">assign</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:77"><decl pos:start="3:62" pos:end="3:77"><type pos:start="3:62" pos:end="3:77"><name pos:start="3:62" pos:end="3:65">bool</name></type> <name pos:start="3:67" pos:end="3:77">set_handler</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:5">

    <if_stmt pos:start="7:5" pos:end="17:5"><if pos:start="7:5" pos:end="13:5">if <condition pos:start="7:8" pos:end="7:30">(<expr pos:start="7:9" pos:end="7:29"><name pos:start="7:9" pos:end="7:14">assign</name> <operator pos:start="7:16" pos:end="7:17">&amp;&amp;</operator> <name pos:start="7:19" pos:end="7:29">set_handler</name></expr>)</condition> <block pos:start="7:32" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:64">

        <expr_stmt pos:start="9:9" pos:end="11:64"><expr pos:start="9:9" pos:end="11:63"><call pos:start="9:9" pos:end="11:63"><name pos:start="9:9" pos:end="9:30">aio_set_event_notifier</name><argument_list pos:start="9:31" pos:end="11:63">(<argument pos:start="9:32" pos:end="9:34"><expr pos:start="9:32" pos:end="9:34"><name pos:start="9:32" pos:end="9:34">ctx</name></expr></argument>, <argument pos:start="9:37" pos:end="9:54"><expr pos:start="9:37" pos:end="9:54"><operator pos:start="9:37" pos:end="9:37">&amp;</operator><name pos:start="9:38" pos:end="9:54"><name pos:start="9:38" pos:end="9:39">vq</name><operator pos:start="9:40" pos:end="9:41">-&gt;</operator><name pos:start="9:42" pos:end="9:54">host_notifier</name></name></expr></argument>, <argument pos:start="9:57" pos:end="9:60"><expr pos:start="9:57" pos:end="9:60"><name pos:start="9:57" pos:end="9:60">true</name></expr></argument>,

                               <argument pos:start="11:32" pos:end="11:62"><expr pos:start="11:32" pos:end="11:62"><name pos:start="11:32" pos:end="11:62">virtio_queue_host_notifier_read</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="17:5">else <block pos:start="13:12" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:68">

        <expr_stmt pos:start="15:9" pos:end="15:68"><expr pos:start="15:9" pos:end="15:67"><call pos:start="15:9" pos:end="15:67"><name pos:start="15:9" pos:end="15:30">aio_set_event_notifier</name><argument_list pos:start="15:31" pos:end="15:67">(<argument pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:34">ctx</name></expr></argument>, <argument pos:start="15:37" pos:end="15:54"><expr pos:start="15:37" pos:end="15:54"><operator pos:start="15:37" pos:end="15:37">&amp;</operator><name pos:start="15:38" pos:end="15:54"><name pos:start="15:38" pos:end="15:39">vq</name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:54">host_notifier</name></name></expr></argument>, <argument pos:start="15:57" pos:end="15:60"><expr pos:start="15:57" pos:end="15:60"><name pos:start="15:57" pos:end="15:60">true</name></expr></argument>, <argument pos:start="15:63" pos:end="15:66"><expr pos:start="15:63" pos:end="15:66"><name pos:start="15:63" pos:end="15:66">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:15">assign</name></expr>)</condition> <block pos:start="19:18" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:60">

        <comment type="block" pos:start="21:9" pos:end="23:60">/* Test and clear notifier before after disabling event,

         * in case poll callback didn't have time to run. */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:60"><expr pos:start="25:9" pos:end="25:59"><call pos:start="25:9" pos:end="25:59"><name pos:start="25:9" pos:end="25:39">virtio_queue_host_notifier_read</name><argument_list pos:start="25:40" pos:end="25:59">(<argument pos:start="25:41" pos:end="25:58"><expr pos:start="25:41" pos:end="25:58"><operator pos:start="25:41" pos:end="25:41">&amp;</operator><name pos:start="25:42" pos:end="25:58"><name pos:start="25:42" pos:end="25:43">vq</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:58">host_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
