<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14059.c" pos:tabs="8"><function pos:start="1:1" pos:end="551:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">rtmp_open</name><parameter_list pos:start="1:21" pos:end="1:63">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:31">URLContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">s</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:51"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">uri</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:62"><decl pos:start="1:54" pos:end="1:62"><type pos:start="1:54" pos:end="1:62"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:62">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="551:1">{<block_content pos:start="5:5" pos:end="549:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">RTMPContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">rt</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:17"><name pos:start="7:10" pos:end="7:14">proto</name><index pos:start="7:15" pos:end="7:17">[<expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">8</literal></expr>]</index></name></decl>, <decl pos:start="7:20" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:27">hostname</name><index pos:start="7:28" pos:end="7:32">[<expr pos:start="7:29" pos:end="7:31"><literal type="number" pos:start="7:29" pos:end="7:31">256</literal></expr>]</index></name></decl>, <decl pos:start="7:35" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:35" pos:end="7:44"><name pos:start="7:35" pos:end="7:38">path</name><index pos:start="7:39" pos:end="7:44">[<expr pos:start="7:40" pos:end="7:43"><literal type="number" pos:start="7:40" pos:end="7:43">1024</literal></expr>]</index></name></decl>, <decl pos:start="7:47" pos:end="7:55"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:47" pos:end="7:55"><name pos:start="7:47" pos:end="7:50">auth</name><index pos:start="7:51" pos:end="7:55">[<expr pos:start="7:52" pos:end="7:54"><literal type="number" pos:start="7:52" pos:end="7:54">100</literal></expr>]</index></name></decl>, <decl pos:start="7:58" pos:end="7:63"><type ref="prev" pos:start="7:5" pos:end="7:8"><modifier pos:start="7:58" pos:end="7:58">*</modifier></type><name pos:start="7:59" pos:end="7:63">fname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:17">old_app</name></decl>, <decl pos:start="9:20" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:10"><modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">qmark</name></decl>, <decl pos:start="9:28" pos:end="9:45"><type ref="prev" pos:start="9:5" pos:end="9:10"/><name pos:start="9:28" pos:end="9:45"><name pos:start="9:28" pos:end="9:39">fname_buffer</name><index pos:start="9:40" pos:end="9:45">[<expr pos:start="9:41" pos:end="9:44"><literal type="number" pos:start="9:41" pos:end="9:44">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:15">buf</name><index pos:start="11:16" pos:end="11:21">[<expr pos:start="11:17" pos:end="11:20"><literal type="number" pos:start="11:17" pos:end="11:20">2048</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">port</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">AVDictionary</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:22">opts</name> <init pos:start="15:24" pos:end="15:29">= <expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:23"><if pos:start="21:5" pos:end="23:23">if <condition pos:start="21:8" pos:end="21:31">(<expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:10">rt</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:26">listen_timeout</name></name> <operator pos:start="21:28" pos:end="21:28">&gt;</operator> <literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:23"><block_content pos:start="23:9" pos:end="23:23">

        <expr_stmt pos:start="23:9" pos:end="23:23"><expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:10">rt</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:18">listen</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <literal type="number" pos:start="23:22" pos:end="23:22">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:6">rt</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:16">is_input</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <operator pos:start="27:20" pos:end="27:20">!</operator><operator pos:start="27:21" pos:end="27:21">(</operator><name pos:start="27:22" pos:end="27:26">flags</name> <operator pos:start="27:28" pos:end="27:28">&amp;</operator> <name pos:start="27:30" pos:end="27:44">AVIO_FLAG_WRITE</name><operator pos:start="27:45" pos:end="27:45">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="35:50"><expr pos:start="31:5" pos:end="35:49"><call pos:start="31:5" pos:end="35:49"><name pos:start="31:5" pos:end="31:16">av_url_split</name><argument_list pos:start="31:17" pos:end="35:49">(<argument pos:start="31:18" pos:end="31:22"><expr pos:start="31:18" pos:end="31:22"><name pos:start="31:18" pos:end="31:22">proto</name></expr></argument>, <argument pos:start="31:25" pos:end="31:37"><expr pos:start="31:25" pos:end="31:37"><sizeof pos:start="31:25" pos:end="31:37">sizeof<argument_list pos:start="31:31" pos:end="31:37">(<argument pos:start="31:32" pos:end="31:36"><expr pos:start="31:32" pos:end="31:36"><name pos:start="31:32" pos:end="31:36">proto</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:40" pos:end="31:43"><expr pos:start="31:40" pos:end="31:43"><name pos:start="31:40" pos:end="31:43">auth</name></expr></argument>, <argument pos:start="31:46" pos:end="31:57"><expr pos:start="31:46" pos:end="31:57"><sizeof pos:start="31:46" pos:end="31:57">sizeof<argument_list pos:start="31:52" pos:end="31:57">(<argument pos:start="31:53" pos:end="31:56"><expr pos:start="31:53" pos:end="31:56"><name pos:start="31:53" pos:end="31:56">auth</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                 <argument pos:start="33:18" pos:end="33:25"><expr pos:start="33:18" pos:end="33:25"><name pos:start="33:18" pos:end="33:25">hostname</name></expr></argument>, <argument pos:start="33:28" pos:end="33:43"><expr pos:start="33:28" pos:end="33:43"><sizeof pos:start="33:28" pos:end="33:43">sizeof<argument_list pos:start="33:34" pos:end="33:43">(<argument pos:start="33:35" pos:end="33:42"><expr pos:start="33:35" pos:end="33:42"><name pos:start="33:35" pos:end="33:42">hostname</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:46" pos:end="33:50"><expr pos:start="33:46" pos:end="33:50"><operator pos:start="33:46" pos:end="33:46">&amp;</operator><name pos:start="33:47" pos:end="33:50">port</name></expr></argument>,

                 <argument pos:start="35:18" pos:end="35:21"><expr pos:start="35:18" pos:end="35:21"><name pos:start="35:18" pos:end="35:21">path</name></expr></argument>, <argument pos:start="35:24" pos:end="35:35"><expr pos:start="35:24" pos:end="35:35"><sizeof pos:start="35:24" pos:end="35:35">sizeof<argument_list pos:start="35:30" pos:end="35:35">(<argument pos:start="35:31" pos:end="35:34"><expr pos:start="35:31" pos:end="35:34"><name pos:start="35:31" pos:end="35:34">path</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="35:38" pos:end="35:48"><expr pos:start="35:38" pos:end="35:48"><name pos:start="35:38" pos:end="35:48"><name pos:start="35:38" pos:end="35:38">s</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:48">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="49:5"><if pos:start="39:5" pos:end="49:5">if <condition pos:start="39:8" pos:end="39:26">(<expr pos:start="39:9" pos:end="39:25"><call pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:14">strchr</name><argument_list pos:start="39:15" pos:end="39:25">(<argument pos:start="39:16" pos:end="39:19"><expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">path</name></expr></argument>, <argument pos:start="39:22" pos:end="39:24"><expr pos:start="39:22" pos:end="39:24"><literal type="char" pos:start="39:22" pos:end="39:24">' '</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:28" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:82">

        <expr_stmt pos:start="41:9" pos:end="47:82"><expr pos:start="41:9" pos:end="47:81"><call pos:start="41:9" pos:end="47:81"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="47:81">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">s</name></expr></argument>, <argument pos:start="41:19" pos:end="41:32"><expr pos:start="41:19" pos:end="41:32"><name pos:start="41:19" pos:end="41:32">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="43:16" pos:end="47:80"><expr pos:start="43:16" pos:end="47:80"><literal type="string" pos:start="43:16" pos:end="43:79">"Detected librtmp style URL parameters, these aren't supported "</literal>

               <literal type="string" pos:start="45:16" pos:end="45:77">"by the libavformat internal RTMP handler currently enabled. "</literal>

               <literal type="string" pos:start="47:16" pos:end="47:80">"See the documentation for the correct way to pass parameters.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="67:5"><if pos:start="53:5" pos:end="67:5">if <condition pos:start="53:8" pos:end="53:16">(<expr pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:12">auth</name><index pos:start="53:13" pos:end="53:15">[<expr pos:start="53:14" pos:end="53:14"><literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="53:18" pos:end="67:5">{<block_content pos:start="55:9" pos:end="65:9">

        <decl_stmt pos:start="55:9" pos:end="55:38"><decl pos:start="55:9" pos:end="55:37"><type pos:start="55:9" pos:end="55:14"><name pos:start="55:9" pos:end="55:12">char</name> <modifier pos:start="55:14" pos:end="55:14">*</modifier></type><name pos:start="55:15" pos:end="55:17">ptr</name> <init pos:start="55:19" pos:end="55:37">= <expr pos:start="55:21" pos:end="55:37"><call pos:start="55:21" pos:end="55:37"><name pos:start="55:21" pos:end="55:26">strchr</name><argument_list pos:start="55:27" pos:end="55:37">(<argument pos:start="55:28" pos:end="55:31"><expr pos:start="55:28" pos:end="55:31"><name pos:start="55:28" pos:end="55:31">auth</name></expr></argument>, <argument pos:start="55:34" pos:end="55:36"><expr pos:start="55:34" pos:end="55:36"><literal type="char" pos:start="55:34" pos:end="55:36">':'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="57:9" pos:end="65:9"><if pos:start="57:9" pos:end="65:9">if <condition pos:start="57:12" pos:end="57:16">(<expr pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:15">ptr</name></expr>)</condition> <block pos:start="57:18" pos:end="65:9">{<block_content pos:start="59:13" pos:end="63:68">

            <expr_stmt pos:start="59:13" pos:end="59:24"><expr pos:start="59:13" pos:end="59:23"><operator pos:start="59:13" pos:end="59:13">*</operator><name pos:start="59:14" pos:end="59:16">ptr</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <literal type="char" pos:start="59:20" pos:end="59:23">'\0'</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:65"><expr pos:start="61:13" pos:end="61:64"><call pos:start="61:13" pos:end="61:64"><name pos:start="61:13" pos:end="61:22">av_strlcpy</name><argument_list pos:start="61:23" pos:end="61:64">(<argument pos:start="61:24" pos:end="61:35"><expr pos:start="61:24" pos:end="61:35"><name pos:start="61:24" pos:end="61:35"><name pos:start="61:24" pos:end="61:25">rt</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:35">username</name></name></expr></argument>, <argument pos:start="61:38" pos:end="61:41"><expr pos:start="61:38" pos:end="61:41"><name pos:start="61:38" pos:end="61:41">auth</name></expr></argument>, <argument pos:start="61:44" pos:end="61:63"><expr pos:start="61:44" pos:end="61:63"><sizeof pos:start="61:44" pos:end="61:63">sizeof<argument_list pos:start="61:50" pos:end="61:63">(<argument pos:start="61:51" pos:end="61:62"><expr pos:start="61:51" pos:end="61:62"><name pos:start="61:51" pos:end="61:62"><name pos:start="61:51" pos:end="61:52">rt</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:62">username</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:68"><expr pos:start="63:13" pos:end="63:67"><call pos:start="63:13" pos:end="63:67"><name pos:start="63:13" pos:end="63:22">av_strlcpy</name><argument_list pos:start="63:23" pos:end="63:67">(<argument pos:start="63:24" pos:end="63:35"><expr pos:start="63:24" pos:end="63:35"><name pos:start="63:24" pos:end="63:35"><name pos:start="63:24" pos:end="63:25">rt</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:35">password</name></name></expr></argument>, <argument pos:start="63:38" pos:end="63:44"><expr pos:start="63:38" pos:end="63:44"><name pos:start="63:38" pos:end="63:40">ptr</name> <operator pos:start="63:42" pos:end="63:42">+</operator> <literal type="number" pos:start="63:44" pos:end="63:44">1</literal></expr></argument>, <argument pos:start="63:47" pos:end="63:66"><expr pos:start="63:47" pos:end="63:66"><sizeof pos:start="63:47" pos:end="63:66">sizeof<argument_list pos:start="63:53" pos:end="63:66">(<argument pos:start="63:54" pos:end="63:65"><expr pos:start="63:54" pos:end="63:65"><name pos:start="63:54" pos:end="63:65"><name pos:start="63:54" pos:end="63:55">rt</name><operator pos:start="63:56" pos:end="63:57">-&gt;</operator><name pos:start="63:58" pos:end="63:65">password</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="79:5"><if pos:start="71:5" pos:end="79:5">if <condition pos:start="71:8" pos:end="71:44">(<expr pos:start="71:9" pos:end="71:43"><name pos:start="71:9" pos:end="71:18"><name pos:start="71:9" pos:end="71:10">rt</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:18">listen</name></name> <operator pos:start="71:20" pos:end="71:21">&amp;&amp;</operator> <call pos:start="71:23" pos:end="71:43"><name pos:start="71:23" pos:end="71:28">strcmp</name><argument_list pos:start="71:29" pos:end="71:43">(<argument pos:start="71:30" pos:end="71:34"><expr pos:start="71:30" pos:end="71:34"><name pos:start="71:30" pos:end="71:34">proto</name></expr></argument>, <argument pos:start="71:37" pos:end="71:42"><expr pos:start="71:37" pos:end="71:42"><literal type="string" pos:start="71:37" pos:end="71:42">"rtmp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:46" pos:end="79:5">{<block_content pos:start="73:9" pos:end="77:31">

        <expr_stmt pos:start="73:9" pos:end="75:22"><expr pos:start="73:9" pos:end="75:21"><call pos:start="73:9" pos:end="75:21"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="75:21">(<argument pos:start="73:16" pos:end="73:16"><expr pos:start="73:16" pos:end="73:16"><name pos:start="73:16" pos:end="73:16">s</name></expr></argument>, <argument pos:start="73:19" pos:end="73:30"><expr pos:start="73:19" pos:end="73:30"><name pos:start="73:19" pos:end="73:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:33" pos:end="73:68"><expr pos:start="73:33" pos:end="73:68"><literal type="string" pos:start="73:33" pos:end="73:68">"rtmp_listen not available for %s\n"</literal></expr></argument>,

               <argument pos:start="75:16" pos:end="75:20"><expr pos:start="75:16" pos:end="75:20"><name pos:start="75:16" pos:end="75:20">proto</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:31">return <expr pos:start="77:16" pos:end="77:30"><call pos:start="77:16" pos:end="77:30"><name pos:start="77:16" pos:end="77:22">AVERROR</name><argument_list pos:start="77:23" pos:end="77:30">(<argument pos:start="77:24" pos:end="77:29"><expr pos:start="77:24" pos:end="77:29"><name pos:start="77:24" pos:end="77:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="81:5" pos:end="137:5"><if pos:start="81:5" pos:end="93:5">if <condition pos:start="81:8" pos:end="81:60">(<expr pos:start="81:9" pos:end="81:59"><operator pos:start="81:9" pos:end="81:9">!</operator><call pos:start="81:10" pos:end="81:31"><name pos:start="81:10" pos:end="81:15">strcmp</name><argument_list pos:start="81:16" pos:end="81:31">(<argument pos:start="81:17" pos:end="81:21"><expr pos:start="81:17" pos:end="81:21"><name pos:start="81:17" pos:end="81:21">proto</name></expr></argument>, <argument pos:start="81:24" pos:end="81:30"><expr pos:start="81:24" pos:end="81:30"><literal type="string" pos:start="81:24" pos:end="81:30">"rtmpt"</literal></expr></argument>)</argument_list></call> <operator pos:start="81:33" pos:end="81:34">||</operator> <operator pos:start="81:36" pos:end="81:36">!</operator><call pos:start="81:37" pos:end="81:59"><name pos:start="81:37" pos:end="81:42">strcmp</name><argument_list pos:start="81:43" pos:end="81:59">(<argument pos:start="81:44" pos:end="81:48"><expr pos:start="81:44" pos:end="81:48"><name pos:start="81:44" pos:end="81:48">proto</name></expr></argument>, <argument pos:start="81:51" pos:end="81:58"><expr pos:start="81:51" pos:end="81:58"><literal type="string" pos:start="81:51" pos:end="81:58">"rtmpts"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:62" pos:end="93:5">{<block_content pos:start="83:9" pos:end="91:80">

        <if_stmt pos:start="83:9" pos:end="85:57"><if pos:start="83:9" pos:end="85:57">if <condition pos:start="83:12" pos:end="83:37">(<expr pos:start="83:13" pos:end="83:36"><operator pos:start="83:13" pos:end="83:13">!</operator><call pos:start="83:14" pos:end="83:36"><name pos:start="83:14" pos:end="83:19">strcmp</name><argument_list pos:start="83:20" pos:end="83:36">(<argument pos:start="83:21" pos:end="83:25"><expr pos:start="83:21" pos:end="83:25"><name pos:start="83:21" pos:end="83:25">proto</name></expr></argument>, <argument pos:start="83:28" pos:end="83:35"><expr pos:start="83:28" pos:end="83:35"><literal type="string" pos:start="83:28" pos:end="83:35">"rtmpts"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:57"><block_content pos:start="85:13" pos:end="85:57">

            <expr_stmt pos:start="85:13" pos:end="85:57"><expr pos:start="85:13" pos:end="85:56"><call pos:start="85:13" pos:end="85:56"><name pos:start="85:13" pos:end="85:23">av_dict_set</name><argument_list pos:start="85:24" pos:end="85:56">(<argument pos:start="85:25" pos:end="85:29"><expr pos:start="85:25" pos:end="85:29"><operator pos:start="85:25" pos:end="85:25">&amp;</operator><name pos:start="85:26" pos:end="85:29">opts</name></expr></argument>, <argument pos:start="85:32" pos:end="85:47"><expr pos:start="85:32" pos:end="85:47"><literal type="string" pos:start="85:32" pos:end="85:47">"ffrtmphttp_tls"</literal></expr></argument>, <argument pos:start="85:50" pos:end="85:52"><expr pos:start="85:50" pos:end="85:52"><literal type="string" pos:start="85:50" pos:end="85:52">"1"</literal></expr></argument>, <argument pos:start="85:55" pos:end="85:55"><expr pos:start="85:55" pos:end="85:55"><literal type="number" pos:start="85:55" pos:end="85:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="89:9" pos:end="89:48">/* open the http tunneling connection */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:80"><expr pos:start="91:9" pos:end="91:79"><call pos:start="91:9" pos:end="91:79"><name pos:start="91:9" pos:end="91:19">ff_url_join</name><argument_list pos:start="91:20" pos:end="91:79">(<argument pos:start="91:21" pos:end="91:23"><expr pos:start="91:21" pos:end="91:23"><name pos:start="91:21" pos:end="91:23">buf</name></expr></argument>, <argument pos:start="91:26" pos:end="91:36"><expr pos:start="91:26" pos:end="91:36"><sizeof pos:start="91:26" pos:end="91:36">sizeof<argument_list pos:start="91:32" pos:end="91:36">(<argument pos:start="91:33" pos:end="91:35"><expr pos:start="91:33" pos:end="91:35"><name pos:start="91:33" pos:end="91:35">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="91:39" pos:end="91:50"><expr pos:start="91:39" pos:end="91:50"><literal type="string" pos:start="91:39" pos:end="91:50">"ffrtmphttp"</literal></expr></argument>, <argument pos:start="91:53" pos:end="91:56"><expr pos:start="91:53" pos:end="91:56"><name pos:start="91:53" pos:end="91:56">NULL</name></expr></argument>, <argument pos:start="91:59" pos:end="91:66"><expr pos:start="91:59" pos:end="91:66"><name pos:start="91:59" pos:end="91:66">hostname</name></expr></argument>, <argument pos:start="91:69" pos:end="91:72"><expr pos:start="91:69" pos:end="91:72"><name pos:start="91:69" pos:end="91:72">port</name></expr></argument>, <argument pos:start="91:75" pos:end="91:78"><expr pos:start="91:75" pos:end="91:78"><name pos:start="91:75" pos:end="91:78">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="93:7" pos:end="103:5">else if <condition pos:start="93:15" pos:end="93:39">(<expr pos:start="93:16" pos:end="93:38"><operator pos:start="93:16" pos:end="93:16">!</operator><call pos:start="93:17" pos:end="93:38"><name pos:start="93:17" pos:end="93:22">strcmp</name><argument_list pos:start="93:23" pos:end="93:38">(<argument pos:start="93:24" pos:end="93:28"><expr pos:start="93:24" pos:end="93:28"><name pos:start="93:24" pos:end="93:28">proto</name></expr></argument>, <argument pos:start="93:31" pos:end="93:37"><expr pos:start="93:31" pos:end="93:37"><literal type="string" pos:start="93:31" pos:end="93:37">"rtmps"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:41" pos:end="103:5">{<block_content pos:start="97:9" pos:end="101:73">

        <comment type="block" pos:start="95:9" pos:end="95:37">/* open the tls connection */</comment>

        <if_stmt pos:start="97:9" pos:end="99:38"><if pos:start="97:9" pos:end="99:38">if <condition pos:start="97:12" pos:end="97:21">(<expr pos:start="97:13" pos:end="97:20"><name pos:start="97:13" pos:end="97:16">port</name> <operator pos:start="97:18" pos:end="97:18">&lt;</operator> <literal type="number" pos:start="97:20" pos:end="97:20">0</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:38"><block_content pos:start="99:13" pos:end="99:38">

            <expr_stmt pos:start="99:13" pos:end="99:38"><expr pos:start="99:13" pos:end="99:37"><name pos:start="99:13" pos:end="99:16">port</name> <operator pos:start="99:18" pos:end="99:18">=</operator> <name pos:start="99:20" pos:end="99:37">RTMPS_DEFAULT_PORT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:73"><expr pos:start="101:9" pos:end="101:72"><call pos:start="101:9" pos:end="101:72"><name pos:start="101:9" pos:end="101:19">ff_url_join</name><argument_list pos:start="101:20" pos:end="101:72">(<argument pos:start="101:21" pos:end="101:23"><expr pos:start="101:21" pos:end="101:23"><name pos:start="101:21" pos:end="101:23">buf</name></expr></argument>, <argument pos:start="101:26" pos:end="101:36"><expr pos:start="101:26" pos:end="101:36"><sizeof pos:start="101:26" pos:end="101:36">sizeof<argument_list pos:start="101:32" pos:end="101:36">(<argument pos:start="101:33" pos:end="101:35"><expr pos:start="101:33" pos:end="101:35"><name pos:start="101:33" pos:end="101:35">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="101:39" pos:end="101:43"><expr pos:start="101:39" pos:end="101:43"><literal type="string" pos:start="101:39" pos:end="101:43">"tls"</literal></expr></argument>, <argument pos:start="101:46" pos:end="101:49"><expr pos:start="101:46" pos:end="101:49"><name pos:start="101:46" pos:end="101:49">NULL</name></expr></argument>, <argument pos:start="101:52" pos:end="101:59"><expr pos:start="101:52" pos:end="101:59"><name pos:start="101:52" pos:end="101:59">hostname</name></expr></argument>, <argument pos:start="101:62" pos:end="101:65"><expr pos:start="101:62" pos:end="101:65"><name pos:start="101:62" pos:end="101:65">port</name></expr></argument>, <argument pos:start="101:68" pos:end="101:71"><expr pos:start="101:68" pos:end="101:71"><name pos:start="101:68" pos:end="101:71">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="103:7" pos:end="117:5">else if <condition pos:start="103:15" pos:end="103:69">(<expr pos:start="103:16" pos:end="103:68"><operator pos:start="103:16" pos:end="103:16">!</operator><call pos:start="103:17" pos:end="103:38"><name pos:start="103:17" pos:end="103:22">strcmp</name><argument_list pos:start="103:23" pos:end="103:38">(<argument pos:start="103:24" pos:end="103:28"><expr pos:start="103:24" pos:end="103:28"><name pos:start="103:24" pos:end="103:28">proto</name></expr></argument>, <argument pos:start="103:31" pos:end="103:37"><expr pos:start="103:31" pos:end="103:37"><literal type="string" pos:start="103:31" pos:end="103:37">"rtmpe"</literal></expr></argument>)</argument_list></call> <operator pos:start="103:40" pos:end="103:41">||</operator> <operator pos:start="103:43" pos:end="103:43">(</operator><operator pos:start="103:44" pos:end="103:44">!</operator><call pos:start="103:45" pos:end="103:67"><name pos:start="103:45" pos:end="103:50">strcmp</name><argument_list pos:start="103:51" pos:end="103:67">(<argument pos:start="103:52" pos:end="103:56"><expr pos:start="103:52" pos:end="103:56"><name pos:start="103:52" pos:end="103:56">proto</name></expr></argument>, <argument pos:start="103:59" pos:end="103:66"><expr pos:start="103:59" pos:end="103:66"><literal type="string" pos:start="103:59" pos:end="103:66">"rtmpte"</literal></expr></argument>)</argument_list></call><operator pos:start="103:68" pos:end="103:68">)</operator></expr>)</condition> <block pos:start="103:71" pos:end="117:5">{<block_content pos:start="105:9" pos:end="115:26">

        <if_stmt pos:start="105:9" pos:end="107:64"><if pos:start="105:9" pos:end="107:64">if <condition pos:start="105:12" pos:end="105:37">(<expr pos:start="105:13" pos:end="105:36"><operator pos:start="105:13" pos:end="105:13">!</operator><call pos:start="105:14" pos:end="105:36"><name pos:start="105:14" pos:end="105:19">strcmp</name><argument_list pos:start="105:20" pos:end="105:36">(<argument pos:start="105:21" pos:end="105:25"><expr pos:start="105:21" pos:end="105:25"><name pos:start="105:21" pos:end="105:25">proto</name></expr></argument>, <argument pos:start="105:28" pos:end="105:35"><expr pos:start="105:28" pos:end="105:35"><literal type="string" pos:start="105:28" pos:end="105:35">"rtmpte"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:64"><block_content pos:start="107:13" pos:end="107:64">

            <expr_stmt pos:start="107:13" pos:end="107:64"><expr pos:start="107:13" pos:end="107:63"><call pos:start="107:13" pos:end="107:63"><name pos:start="107:13" pos:end="107:23">av_dict_set</name><argument_list pos:start="107:24" pos:end="107:63">(<argument pos:start="107:25" pos:end="107:29"><expr pos:start="107:25" pos:end="107:29"><operator pos:start="107:25" pos:end="107:25">&amp;</operator><name pos:start="107:26" pos:end="107:29">opts</name></expr></argument>, <argument pos:start="107:32" pos:end="107:54"><expr pos:start="107:32" pos:end="107:54"><literal type="string" pos:start="107:32" pos:end="107:54">"ffrtmpcrypt_tunneling"</literal></expr></argument>, <argument pos:start="107:57" pos:end="107:59"><expr pos:start="107:57" pos:end="107:59"><literal type="string" pos:start="107:57" pos:end="107:59">"1"</literal></expr></argument>, <argument pos:start="107:62" pos:end="107:62"><expr pos:start="107:62" pos:end="107:62"><literal type="number" pos:start="107:62" pos:end="107:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="111:9" pos:end="111:43">/* open the encrypted connection */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:81"><expr pos:start="113:9" pos:end="113:80"><call pos:start="113:9" pos:end="113:80"><name pos:start="113:9" pos:end="113:19">ff_url_join</name><argument_list pos:start="113:20" pos:end="113:80">(<argument pos:start="113:21" pos:end="113:23"><expr pos:start="113:21" pos:end="113:23"><name pos:start="113:21" pos:end="113:23">buf</name></expr></argument>, <argument pos:start="113:26" pos:end="113:36"><expr pos:start="113:26" pos:end="113:36"><sizeof pos:start="113:26" pos:end="113:36">sizeof<argument_list pos:start="113:32" pos:end="113:36">(<argument pos:start="113:33" pos:end="113:35"><expr pos:start="113:33" pos:end="113:35"><name pos:start="113:33" pos:end="113:35">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="113:39" pos:end="113:51"><expr pos:start="113:39" pos:end="113:51"><literal type="string" pos:start="113:39" pos:end="113:51">"ffrtmpcrypt"</literal></expr></argument>, <argument pos:start="113:54" pos:end="113:57"><expr pos:start="113:54" pos:end="113:57"><name pos:start="113:54" pos:end="113:57">NULL</name></expr></argument>, <argument pos:start="113:60" pos:end="113:67"><expr pos:start="113:60" pos:end="113:67"><name pos:start="113:60" pos:end="113:67">hostname</name></expr></argument>, <argument pos:start="113:70" pos:end="113:73"><expr pos:start="113:70" pos:end="113:73"><name pos:start="113:70" pos:end="113:73">port</name></expr></argument>, <argument pos:start="113:76" pos:end="113:79"><expr pos:start="113:76" pos:end="113:79"><name pos:start="113:76" pos:end="113:79">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:26"><expr pos:start="115:9" pos:end="115:25"><name pos:start="115:9" pos:end="115:21"><name pos:start="115:9" pos:end="115:10">rt</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:21">encrypted</name></name> <operator pos:start="115:23" pos:end="115:23">=</operator> <literal type="number" pos:start="115:25" pos:end="115:25">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="117:7" pos:end="137:5">else <block pos:start="117:12" pos:end="137:5">{<block_content pos:start="121:9" pos:end="135:77">

        <comment type="block" pos:start="119:9" pos:end="119:37">/* open the tcp connection */</comment>

        <if_stmt pos:start="121:9" pos:end="123:37"><if pos:start="121:9" pos:end="123:37">if <condition pos:start="121:12" pos:end="121:21">(<expr pos:start="121:13" pos:end="121:20"><name pos:start="121:13" pos:end="121:16">port</name> <operator pos:start="121:18" pos:end="121:18">&lt;</operator> <literal type="number" pos:start="121:20" pos:end="121:20">0</literal></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:37"><block_content pos:start="123:13" pos:end="123:37">

            <expr_stmt pos:start="123:13" pos:end="123:37"><expr pos:start="123:13" pos:end="123:36"><name pos:start="123:13" pos:end="123:16">port</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <name pos:start="123:20" pos:end="123:36">RTMP_DEFAULT_PORT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="125:9" pos:end="135:77"><if pos:start="125:9" pos:end="131:51">if <condition pos:start="125:12" pos:end="125:23">(<expr pos:start="125:13" pos:end="125:22"><name pos:start="125:13" pos:end="125:22"><name pos:start="125:13" pos:end="125:14">rt</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:22">listen</name></name></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="131:51"><block_content pos:start="127:13" pos:end="131:51">

            <expr_stmt pos:start="127:13" pos:end="131:51"><expr pos:start="127:13" pos:end="131:50"><call pos:start="127:13" pos:end="131:50"><name pos:start="127:13" pos:end="127:23">ff_url_join</name><argument_list pos:start="127:24" pos:end="131:50">(<argument pos:start="127:25" pos:end="127:27"><expr pos:start="127:25" pos:end="127:27"><name pos:start="127:25" pos:end="127:27">buf</name></expr></argument>, <argument pos:start="127:30" pos:end="127:40"><expr pos:start="127:30" pos:end="127:40"><sizeof pos:start="127:30" pos:end="127:40">sizeof<argument_list pos:start="127:36" pos:end="127:40">(<argument pos:start="127:37" pos:end="127:39"><expr pos:start="127:37" pos:end="127:39"><name pos:start="127:37" pos:end="127:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="127:43" pos:end="127:47"><expr pos:start="127:43" pos:end="127:47"><literal type="string" pos:start="127:43" pos:end="127:47">"tcp"</literal></expr></argument>, <argument pos:start="127:50" pos:end="127:53"><expr pos:start="127:50" pos:end="127:53"><name pos:start="127:50" pos:end="127:53">NULL</name></expr></argument>, <argument pos:start="127:56" pos:end="127:63"><expr pos:start="127:56" pos:end="127:63"><name pos:start="127:56" pos:end="127:63">hostname</name></expr></argument>, <argument pos:start="127:66" pos:end="127:69"><expr pos:start="127:66" pos:end="127:69"><name pos:start="127:66" pos:end="127:69">port</name></expr></argument>,

                        <argument pos:start="129:25" pos:end="129:51"><expr pos:start="129:25" pos:end="129:51"><literal type="string" pos:start="129:25" pos:end="129:51">"?listen&amp;listen_timeout=%d"</literal></expr></argument>,

                        <argument pos:start="131:25" pos:end="131:49"><expr pos:start="131:25" pos:end="131:49"><name pos:start="131:25" pos:end="131:42"><name pos:start="131:25" pos:end="131:26">rt</name><operator pos:start="131:27" pos:end="131:28">-&gt;</operator><name pos:start="131:29" pos:end="131:42">listen_timeout</name></name> <operator pos:start="131:44" pos:end="131:44">*</operator> <literal type="number" pos:start="131:46" pos:end="131:49">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="133:9" pos:end="135:77">else<block type="pseudo" pos:start="135:13" pos:end="135:77"><block_content pos:start="135:13" pos:end="135:77">

            <expr_stmt pos:start="135:13" pos:end="135:77"><expr pos:start="135:13" pos:end="135:76"><call pos:start="135:13" pos:end="135:76"><name pos:start="135:13" pos:end="135:23">ff_url_join</name><argument_list pos:start="135:24" pos:end="135:76">(<argument pos:start="135:25" pos:end="135:27"><expr pos:start="135:25" pos:end="135:27"><name pos:start="135:25" pos:end="135:27">buf</name></expr></argument>, <argument pos:start="135:30" pos:end="135:40"><expr pos:start="135:30" pos:end="135:40"><sizeof pos:start="135:30" pos:end="135:40">sizeof<argument_list pos:start="135:36" pos:end="135:40">(<argument pos:start="135:37" pos:end="135:39"><expr pos:start="135:37" pos:end="135:39"><name pos:start="135:37" pos:end="135:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="135:43" pos:end="135:47"><expr pos:start="135:43" pos:end="135:47"><literal type="string" pos:start="135:43" pos:end="135:47">"tcp"</literal></expr></argument>, <argument pos:start="135:50" pos:end="135:53"><expr pos:start="135:50" pos:end="135:53"><name pos:start="135:50" pos:end="135:53">NULL</name></expr></argument>, <argument pos:start="135:56" pos:end="135:63"><expr pos:start="135:56" pos:end="135:63"><name pos:start="135:56" pos:end="135:63">hostname</name></expr></argument>, <argument pos:start="135:66" pos:end="135:69"><expr pos:start="135:66" pos:end="135:69"><name pos:start="135:66" pos:end="135:69">port</name></expr></argument>, <argument pos:start="135:72" pos:end="135:75"><expr pos:start="135:72" pos:end="135:75"><name pos:start="135:72" pos:end="135:75">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="141:1" pos:end="141:10"><name pos:start="141:1" pos:end="141:9">reconnect</name>:</label>

    <if_stmt pos:start="143:5" pos:end="151:5"><if pos:start="143:5" pos:end="151:5">if <condition pos:start="143:8" pos:end="145:62">(<expr pos:start="143:9" pos:end="145:61"><operator pos:start="143:9" pos:end="143:9">(</operator><name pos:start="143:10" pos:end="143:12">ret</name> <operator pos:start="143:14" pos:end="143:14">=</operator> <call pos:start="143:16" pos:end="145:56"><name pos:start="143:16" pos:end="143:25">ffurl_open</name><argument_list pos:start="143:26" pos:end="145:56">(<argument pos:start="143:27" pos:end="143:37"><expr pos:start="143:27" pos:end="143:37"><operator pos:start="143:27" pos:end="143:27">&amp;</operator><name pos:start="143:28" pos:end="143:37"><name pos:start="143:28" pos:end="143:29">rt</name><operator pos:start="143:30" pos:end="143:31">-&gt;</operator><name pos:start="143:32" pos:end="143:37">stream</name></name></expr></argument>, <argument pos:start="143:40" pos:end="143:42"><expr pos:start="143:40" pos:end="143:42"><name pos:start="143:40" pos:end="143:42">buf</name></expr></argument>, <argument pos:start="143:45" pos:end="143:64"><expr pos:start="143:45" pos:end="143:64"><name pos:start="143:45" pos:end="143:64">AVIO_FLAG_READ_WRITE</name></expr></argument>,

                          <argument pos:start="145:27" pos:end="145:48"><expr pos:start="145:27" pos:end="145:48"><operator pos:start="145:27" pos:end="145:27">&amp;</operator><name pos:start="145:28" pos:end="145:48"><name pos:start="145:28" pos:end="145:28">s</name><operator pos:start="145:29" pos:end="145:30">-&gt;</operator><name pos:start="145:31" pos:end="145:48">interrupt_callback</name></name></expr></argument>, <argument pos:start="145:51" pos:end="145:55"><expr pos:start="145:51" pos:end="145:55"><operator pos:start="145:51" pos:end="145:51">&amp;</operator><name pos:start="145:52" pos:end="145:55">opts</name></expr></argument>)</argument_list></call><operator pos:start="145:57" pos:end="145:57">)</operator> <operator pos:start="145:59" pos:end="145:59">&lt;</operator> <literal type="number" pos:start="145:61" pos:end="145:61">0</literal></expr>)</condition> <block pos:start="145:64" pos:end="151:5">{<block_content pos:start="147:9" pos:end="149:18">

        <expr_stmt pos:start="147:9" pos:end="147:69"><expr pos:start="147:9" pos:end="147:68"><call pos:start="147:9" pos:end="147:68"><name pos:start="147:9" pos:end="147:14">av_log</name><argument_list pos:start="147:15" pos:end="147:68">(<argument pos:start="147:16" pos:end="147:16"><expr pos:start="147:16" pos:end="147:16"><name pos:start="147:16" pos:end="147:16">s</name></expr></argument> , <argument pos:start="147:20" pos:end="147:31"><expr pos:start="147:20" pos:end="147:31"><name pos:start="147:20" pos:end="147:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="147:34" pos:end="147:62"><expr pos:start="147:34" pos:end="147:62"><literal type="string" pos:start="147:34" pos:end="147:62">"Cannot open connection %s\n"</literal></expr></argument>, <argument pos:start="147:65" pos:end="147:67"><expr pos:start="147:65" pos:end="147:67"><name pos:start="147:65" pos:end="147:67">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="149:9" pos:end="149:18">goto <name pos:start="149:14" pos:end="149:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="155:5" pos:end="161:5"><if pos:start="155:5" pos:end="161:5">if <condition pos:start="155:8" pos:end="155:22">(<expr pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:21"><name pos:start="155:9" pos:end="155:10">rt</name><operator pos:start="155:11" pos:end="155:12">-&gt;</operator><name pos:start="155:13" pos:end="155:21">swfverify</name></name></expr>)</condition> <block pos:start="155:24" pos:end="161:5">{<block_content pos:start="157:9" pos:end="159:22">

        <if_stmt pos:start="157:9" pos:end="159:22"><if pos:start="157:9" pos:end="159:22">if <condition pos:start="157:12" pos:end="157:45">(<expr pos:start="157:13" pos:end="157:44"><operator pos:start="157:13" pos:end="157:13">(</operator><name pos:start="157:14" pos:end="157:16">ret</name> <operator pos:start="157:18" pos:end="157:18">=</operator> <call pos:start="157:20" pos:end="157:39"><name pos:start="157:20" pos:end="157:36">rtmp_calc_swfhash</name><argument_list pos:start="157:37" pos:end="157:39">(<argument pos:start="157:38" pos:end="157:38"><expr pos:start="157:38" pos:end="157:38"><name pos:start="157:38" pos:end="157:38">s</name></expr></argument>)</argument_list></call><operator pos:start="157:40" pos:end="157:40">)</operator> <operator pos:start="157:42" pos:end="157:42">&lt;</operator> <literal type="number" pos:start="157:44" pos:end="157:44">0</literal></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:22"><block_content pos:start="159:13" pos:end="159:22">

            <goto pos:start="159:13" pos:end="159:22">goto <name pos:start="159:18" pos:end="159:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:28"><expr pos:start="165:5" pos:end="165:27"><name pos:start="165:5" pos:end="165:13"><name pos:start="165:5" pos:end="165:6">rt</name><operator pos:start="165:7" pos:end="165:8">-&gt;</operator><name pos:start="165:9" pos:end="165:13">state</name></name> <operator pos:start="165:15" pos:end="165:15">=</operator> <name pos:start="165:17" pos:end="165:27">STATE_START</name></expr>;</expr_stmt>

    <if_stmt pos:start="167:5" pos:end="169:18"><if pos:start="167:5" pos:end="169:18">if <condition pos:start="167:8" pos:end="167:57">(<expr pos:start="167:9" pos:end="167:56"><operator pos:start="167:9" pos:end="167:9">!</operator><name pos:start="167:10" pos:end="167:19"><name pos:start="167:10" pos:end="167:11">rt</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:19">listen</name></name> <operator pos:start="167:21" pos:end="167:22">&amp;&amp;</operator> <operator pos:start="167:24" pos:end="167:24">(</operator><name pos:start="167:25" pos:end="167:27">ret</name> <operator pos:start="167:29" pos:end="167:29">=</operator> <call pos:start="167:31" pos:end="167:51"><name pos:start="167:31" pos:end="167:44">rtmp_handshake</name><argument_list pos:start="167:45" pos:end="167:51">(<argument pos:start="167:46" pos:end="167:46"><expr pos:start="167:46" pos:end="167:46"><name pos:start="167:46" pos:end="167:46">s</name></expr></argument>, <argument pos:start="167:49" pos:end="167:50"><expr pos:start="167:49" pos:end="167:50"><name pos:start="167:49" pos:end="167:50">rt</name></expr></argument>)</argument_list></call><operator pos:start="167:52" pos:end="167:52">)</operator> <operator pos:start="167:54" pos:end="167:54">&lt;</operator> <literal type="number" pos:start="167:56" pos:end="167:56">0</literal></expr>)</condition><block type="pseudo" pos:start="169:9" pos:end="169:18"><block_content pos:start="169:9" pos:end="169:18">

        <goto pos:start="169:9" pos:end="169:18">goto <name pos:start="169:14" pos:end="169:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="171:5" pos:end="173:18"><if pos:start="171:5" pos:end="173:18">if <condition pos:start="171:8" pos:end="171:63">(<expr pos:start="171:9" pos:end="171:62"><name pos:start="171:9" pos:end="171:18"><name pos:start="171:9" pos:end="171:10">rt</name><operator pos:start="171:11" pos:end="171:12">-&gt;</operator><name pos:start="171:13" pos:end="171:18">listen</name></name> <operator pos:start="171:20" pos:end="171:21">&amp;&amp;</operator> <operator pos:start="171:23" pos:end="171:23">(</operator><name pos:start="171:24" pos:end="171:26">ret</name> <operator pos:start="171:28" pos:end="171:28">=</operator> <call pos:start="171:30" pos:end="171:57"><name pos:start="171:30" pos:end="171:50">rtmp_server_handshake</name><argument_list pos:start="171:51" pos:end="171:57">(<argument pos:start="171:52" pos:end="171:52"><expr pos:start="171:52" pos:end="171:52"><name pos:start="171:52" pos:end="171:52">s</name></expr></argument>, <argument pos:start="171:55" pos:end="171:56"><expr pos:start="171:55" pos:end="171:56"><name pos:start="171:55" pos:end="171:56">rt</name></expr></argument>)</argument_list></call><operator pos:start="171:58" pos:end="171:58">)</operator> <operator pos:start="171:60" pos:end="171:60">&lt;</operator> <literal type="number" pos:start="171:62" pos:end="171:62">0</literal></expr>)</condition><block type="pseudo" pos:start="173:9" pos:end="173:18"><block_content pos:start="173:9" pos:end="173:18">

        <goto pos:start="173:9" pos:end="173:18">goto <name pos:start="173:14" pos:end="173:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:29"><expr pos:start="177:5" pos:end="177:28"><name pos:start="177:5" pos:end="177:22"><name pos:start="177:5" pos:end="177:6">rt</name><operator pos:start="177:7" pos:end="177:8">-&gt;</operator><name pos:start="177:9" pos:end="177:22">out_chunk_size</name></name> <operator pos:start="177:24" pos:end="177:24">=</operator> <literal type="number" pos:start="177:26" pos:end="177:28">128</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:29"><expr pos:start="179:5" pos:end="179:28"><name pos:start="179:5" pos:end="179:21"><name pos:start="179:5" pos:end="179:6">rt</name><operator pos:start="179:7" pos:end="179:8">-&gt;</operator><name pos:start="179:9" pos:end="179:21">in_chunk_size</name></name>  <operator pos:start="179:24" pos:end="179:24">=</operator> <literal type="number" pos:start="179:26" pos:end="179:28">128</literal></expr>;</expr_stmt> <comment type="line" pos:start="179:31" pos:end="179:59">// Probably overwritten later</comment>

    <expr_stmt pos:start="181:5" pos:end="181:33"><expr pos:start="181:5" pos:end="181:32"><name pos:start="181:5" pos:end="181:13"><name pos:start="181:5" pos:end="181:6">rt</name><operator pos:start="181:7" pos:end="181:8">-&gt;</operator><name pos:start="181:9" pos:end="181:13">state</name></name> <operator pos:start="181:15" pos:end="181:15">=</operator> <name pos:start="181:17" pos:end="181:32">STATE_HANDSHAKED</name></expr>;</expr_stmt>



    <comment type="line" pos:start="185:5" pos:end="185:70">// Keep the application name when it has been defined by the user.</comment>

    <expr_stmt pos:start="187:5" pos:end="187:22"><expr pos:start="187:5" pos:end="187:21"><name pos:start="187:5" pos:end="187:11">old_app</name> <operator pos:start="187:13" pos:end="187:13">=</operator> <name pos:start="187:15" pos:end="187:21"><name pos:start="187:15" pos:end="187:16">rt</name><operator pos:start="187:17" pos:end="187:18">-&gt;</operator><name pos:start="187:19" pos:end="187:21">app</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:40"><expr pos:start="191:5" pos:end="191:39"><name pos:start="191:5" pos:end="191:11"><name pos:start="191:5" pos:end="191:6">rt</name><operator pos:start="191:7" pos:end="191:8">-&gt;</operator><name pos:start="191:9" pos:end="191:11">app</name></name> <operator pos:start="191:13" pos:end="191:13">=</operator> <call pos:start="191:15" pos:end="191:39"><name pos:start="191:15" pos:end="191:23">av_malloc</name><argument_list pos:start="191:24" pos:end="191:39">(<argument pos:start="191:25" pos:end="191:38"><expr pos:start="191:25" pos:end="191:38"><name pos:start="191:25" pos:end="191:38">APP_MAX_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="193:5" pos:end="199:5"><if pos:start="193:5" pos:end="199:5">if <condition pos:start="193:8" pos:end="193:17">(<expr pos:start="193:9" pos:end="193:16"><operator pos:start="193:9" pos:end="193:9">!</operator><name pos:start="193:10" pos:end="193:16"><name pos:start="193:10" pos:end="193:11">rt</name><operator pos:start="193:12" pos:end="193:13">-&gt;</operator><name pos:start="193:14" pos:end="193:16">app</name></name></expr>)</condition> <block pos:start="193:19" pos:end="199:5">{<block_content pos:start="195:9" pos:end="197:18">

        <expr_stmt pos:start="195:9" pos:end="195:30"><expr pos:start="195:9" pos:end="195:29"><name pos:start="195:9" pos:end="195:11">ret</name> <operator pos:start="195:13" pos:end="195:13">=</operator> <call pos:start="195:15" pos:end="195:29"><name pos:start="195:15" pos:end="195:21">AVERROR</name><argument_list pos:start="195:22" pos:end="195:29">(<argument pos:start="195:23" pos:end="195:28"><expr pos:start="195:23" pos:end="195:28"><name pos:start="195:23" pos:end="195:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="197:9" pos:end="197:18">goto <name pos:start="197:14" pos:end="197:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="203:5" pos:end="203:34">//extract "app" part from path</comment>

    <expr_stmt pos:start="205:5" pos:end="205:30"><expr pos:start="205:5" pos:end="205:29"><name pos:start="205:5" pos:end="205:9">qmark</name> <operator pos:start="205:11" pos:end="205:11">=</operator> <call pos:start="205:13" pos:end="205:29"><name pos:start="205:13" pos:end="205:18">strchr</name><argument_list pos:start="205:19" pos:end="205:29">(<argument pos:start="205:20" pos:end="205:23"><expr pos:start="205:20" pos:end="205:23"><name pos:start="205:20" pos:end="205:23">path</name></expr></argument>, <argument pos:start="205:26" pos:end="205:28"><expr pos:start="205:26" pos:end="205:28"><literal type="char" pos:start="205:26" pos:end="205:28">'?'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="207:5" pos:end="273:5"><if pos:start="207:5" pos:end="231:5">if <condition pos:start="207:8" pos:end="207:41">(<expr pos:start="207:9" pos:end="207:40"><name pos:start="207:9" pos:end="207:13">qmark</name> <operator pos:start="207:15" pos:end="207:16">&amp;&amp;</operator> <call pos:start="207:18" pos:end="207:40"><name pos:start="207:18" pos:end="207:23">strstr</name><argument_list pos:start="207:24" pos:end="207:40">(<argument pos:start="207:25" pos:end="207:29"><expr pos:start="207:25" pos:end="207:29"><name pos:start="207:25" pos:end="207:29">qmark</name></expr></argument>, <argument pos:start="207:32" pos:end="207:39"><expr pos:start="207:32" pos:end="207:39"><literal type="string" pos:start="207:32" pos:end="207:39">"slist="</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="207:43" pos:end="231:5">{<block_content pos:start="209:9" pos:end="229:9">

        <decl_stmt pos:start="209:9" pos:end="209:18"><decl pos:start="209:9" pos:end="209:17"><type pos:start="209:9" pos:end="209:13"><name pos:start="209:9" pos:end="209:12">char</name><modifier pos:start="209:13" pos:end="209:13">*</modifier></type> <name pos:start="209:15" pos:end="209:17">amp</name></decl>;</decl_stmt>

        <comment type="line" pos:start="211:9" pos:end="211:71">// After slist we have the playpath, before the params, the app</comment>

        <expr_stmt pos:start="213:9" pos:end="213:75"><expr pos:start="213:9" pos:end="213:74"><call pos:start="213:9" pos:end="213:74"><name pos:start="213:9" pos:end="213:18">av_strlcpy</name><argument_list pos:start="213:19" pos:end="213:74">(<argument pos:start="213:20" pos:end="213:26"><expr pos:start="213:20" pos:end="213:26"><name pos:start="213:20" pos:end="213:26"><name pos:start="213:20" pos:end="213:21">rt</name><operator pos:start="213:22" pos:end="213:23">-&gt;</operator><name pos:start="213:24" pos:end="213:26">app</name></name></expr></argument>, <argument pos:start="213:29" pos:end="213:36"><expr pos:start="213:29" pos:end="213:36"><name pos:start="213:29" pos:end="213:32">path</name> <operator pos:start="213:34" pos:end="213:34">+</operator> <literal type="number" pos:start="213:36" pos:end="213:36">1</literal></expr></argument>, <argument pos:start="213:39" pos:end="213:73"><expr pos:start="213:39" pos:end="213:73"><call pos:start="213:39" pos:end="213:73"><name pos:start="213:39" pos:end="213:43">FFMIN</name><argument_list pos:start="213:44" pos:end="213:73">(<argument pos:start="213:45" pos:end="213:56"><expr pos:start="213:45" pos:end="213:56"><name pos:start="213:45" pos:end="213:49">qmark</name> <operator pos:start="213:51" pos:end="213:51">-</operator> <name pos:start="213:53" pos:end="213:56">path</name></expr></argument>, <argument pos:start="213:59" pos:end="213:72"><expr pos:start="213:59" pos:end="213:72"><name pos:start="213:59" pos:end="213:72">APP_MAX_LENGTH</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:43"><expr pos:start="215:9" pos:end="215:42"><name pos:start="215:9" pos:end="215:13">fname</name> <operator pos:start="215:15" pos:end="215:15">=</operator> <call pos:start="215:17" pos:end="215:38"><name pos:start="215:17" pos:end="215:22">strstr</name><argument_list pos:start="215:23" pos:end="215:38">(<argument pos:start="215:24" pos:end="215:27"><expr pos:start="215:24" pos:end="215:27"><name pos:start="215:24" pos:end="215:27">path</name></expr></argument>, <argument pos:start="215:30" pos:end="215:37"><expr pos:start="215:30" pos:end="215:37"><literal type="string" pos:start="215:30" pos:end="215:37">"slist="</literal></expr></argument>)</argument_list></call> <operator pos:start="215:40" pos:end="215:40">+</operator> <literal type="number" pos:start="215:42" pos:end="215:42">6</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="217:9" pos:end="217:56">// Strip any further query parameters from fname</comment>

        <expr_stmt pos:start="219:9" pos:end="219:33"><expr pos:start="219:9" pos:end="219:32"><name pos:start="219:9" pos:end="219:11">amp</name> <operator pos:start="219:13" pos:end="219:13">=</operator> <call pos:start="219:15" pos:end="219:32"><name pos:start="219:15" pos:end="219:20">strchr</name><argument_list pos:start="219:21" pos:end="219:32">(<argument pos:start="219:22" pos:end="219:26"><expr pos:start="219:22" pos:end="219:26"><name pos:start="219:22" pos:end="219:26">fname</name></expr></argument>, <argument pos:start="219:29" pos:end="219:31"><expr pos:start="219:29" pos:end="219:31"><literal type="char" pos:start="219:29" pos:end="219:31">'&amp;'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="221:9" pos:end="229:9"><if pos:start="221:9" pos:end="229:9">if <condition pos:start="221:12" pos:end="221:16">(<expr pos:start="221:13" pos:end="221:15"><name pos:start="221:13" pos:end="221:15">amp</name></expr>)</condition> <block pos:start="221:18" pos:end="229:9">{<block_content pos:start="223:13" pos:end="227:33">

            <expr_stmt pos:start="223:13" pos:end="225:73"><expr pos:start="223:13" pos:end="225:72"><call pos:start="223:13" pos:end="225:72"><name pos:start="223:13" pos:end="223:22">av_strlcpy</name><argument_list pos:start="223:23" pos:end="225:72">(<argument pos:start="223:24" pos:end="223:35"><expr pos:start="223:24" pos:end="223:35"><name pos:start="223:24" pos:end="223:35">fname_buffer</name></expr></argument>, <argument pos:start="223:38" pos:end="223:42"><expr pos:start="223:38" pos:end="223:42"><name pos:start="223:38" pos:end="223:42">fname</name></expr></argument>, <argument pos:start="223:45" pos:end="225:71"><expr pos:start="223:45" pos:end="225:71"><call pos:start="223:45" pos:end="225:71"><name pos:start="223:45" pos:end="223:49">FFMIN</name><argument_list pos:start="223:50" pos:end="225:71">(<argument pos:start="223:51" pos:end="223:65"><expr pos:start="223:51" pos:end="223:65"><name pos:start="223:51" pos:end="223:53">amp</name> <operator pos:start="223:55" pos:end="223:55">-</operator> <name pos:start="223:57" pos:end="223:61">fname</name> <operator pos:start="223:63" pos:end="223:63">+</operator> <literal type="number" pos:start="223:65" pos:end="223:65">1</literal></expr></argument>,

                                                  <argument pos:start="225:51" pos:end="225:70"><expr pos:start="225:51" pos:end="225:70"><sizeof pos:start="225:51" pos:end="225:70">sizeof<argument_list pos:start="225:57" pos:end="225:70">(<argument pos:start="225:58" pos:end="225:69"><expr pos:start="225:58" pos:end="225:69"><name pos:start="225:58" pos:end="225:69">fname_buffer</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:33"><expr pos:start="227:13" pos:end="227:32"><name pos:start="227:13" pos:end="227:17">fname</name> <operator pos:start="227:19" pos:end="227:19">=</operator> <name pos:start="227:21" pos:end="227:32">fname_buffer</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="231:7" pos:end="237:5">else if <condition pos:start="231:15" pos:end="231:48">(<expr pos:start="231:16" pos:end="231:47"><operator pos:start="231:16" pos:end="231:16">!</operator><call pos:start="231:17" pos:end="231:47"><name pos:start="231:17" pos:end="231:23">strncmp</name><argument_list pos:start="231:24" pos:end="231:47">(<argument pos:start="231:25" pos:end="231:28"><expr pos:start="231:25" pos:end="231:28"><name pos:start="231:25" pos:end="231:28">path</name></expr></argument>, <argument pos:start="231:31" pos:end="231:42"><expr pos:start="231:31" pos:end="231:42"><literal type="string" pos:start="231:31" pos:end="231:42">"/ondemand/"</literal></expr></argument>, <argument pos:start="231:45" pos:end="231:46"><expr pos:start="231:45" pos:end="231:46"><literal type="number" pos:start="231:45" pos:end="231:46">10</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="231:50" pos:end="237:5">{<block_content pos:start="233:9" pos:end="235:39">

        <expr_stmt pos:start="233:9" pos:end="233:26"><expr pos:start="233:9" pos:end="233:25"><name pos:start="233:9" pos:end="233:13">fname</name> <operator pos:start="233:15" pos:end="233:15">=</operator> <name pos:start="233:17" pos:end="233:20">path</name> <operator pos:start="233:22" pos:end="233:22">+</operator> <literal type="number" pos:start="233:24" pos:end="233:25">10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:39"><expr pos:start="235:9" pos:end="235:38"><call pos:start="235:9" pos:end="235:38"><name pos:start="235:9" pos:end="235:14">memcpy</name><argument_list pos:start="235:15" pos:end="235:38">(<argument pos:start="235:16" pos:end="235:22"><expr pos:start="235:16" pos:end="235:22"><name pos:start="235:16" pos:end="235:22"><name pos:start="235:16" pos:end="235:17">rt</name><operator pos:start="235:18" pos:end="235:19">-&gt;</operator><name pos:start="235:20" pos:end="235:22">app</name></name></expr></argument>, <argument pos:start="235:25" pos:end="235:34"><expr pos:start="235:25" pos:end="235:34"><literal type="string" pos:start="235:25" pos:end="235:34">"ondemand"</literal></expr></argument>, <argument pos:start="235:37" pos:end="235:37"><expr pos:start="235:37" pos:end="235:37"><literal type="number" pos:start="235:37" pos:end="235:37">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="237:7" pos:end="273:5">else <block pos:start="237:12" pos:end="273:5">{<block_content pos:start="239:9" pos:end="271:9">

        <decl_stmt pos:start="239:9" pos:end="239:45"><decl pos:start="239:9" pos:end="239:44"><type pos:start="239:9" pos:end="239:14"><name pos:start="239:9" pos:end="239:12">char</name> <modifier pos:start="239:14" pos:end="239:14">*</modifier></type><name pos:start="239:15" pos:end="239:18">next</name> <init pos:start="239:20" pos:end="239:44">= <expr pos:start="239:22" pos:end="239:44"><ternary pos:start="239:22" pos:end="239:44"><condition pos:start="239:22" pos:end="239:28"><expr pos:start="239:22" pos:end="239:26"><operator pos:start="239:22" pos:end="239:22">*</operator><name pos:start="239:23" pos:end="239:26">path</name></expr> ?</condition><then pos:start="239:30" pos:end="239:37"> <expr pos:start="239:30" pos:end="239:37"><name pos:start="239:30" pos:end="239:33">path</name> <operator pos:start="239:35" pos:end="239:35">+</operator> <literal type="number" pos:start="239:37" pos:end="239:37">1</literal></expr> </then><else pos:start="239:39" pos:end="239:44">: <expr pos:start="239:41" pos:end="239:44"><name pos:start="239:41" pos:end="239:44">path</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="241:9" pos:end="241:36"><decl pos:start="241:9" pos:end="241:35"><type pos:start="241:9" pos:end="241:14"><name pos:start="241:9" pos:end="241:12">char</name> <modifier pos:start="241:14" pos:end="241:14">*</modifier></type><name pos:start="241:15" pos:end="241:15">p</name> <init pos:start="241:17" pos:end="241:35">= <expr pos:start="241:19" pos:end="241:35"><call pos:start="241:19" pos:end="241:35"><name pos:start="241:19" pos:end="241:24">strchr</name><argument_list pos:start="241:25" pos:end="241:35">(<argument pos:start="241:26" pos:end="241:29"><expr pos:start="241:26" pos:end="241:29"><name pos:start="241:26" pos:end="241:29">next</name></expr></argument>, <argument pos:start="241:32" pos:end="241:34"><expr pos:start="241:32" pos:end="241:34"><literal type="char" pos:start="241:32" pos:end="241:34">'/'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="243:9" pos:end="271:9"><if pos:start="243:9" pos:end="249:9">if <condition pos:start="243:12" pos:end="243:15">(<expr pos:start="243:13" pos:end="243:14"><operator pos:start="243:13" pos:end="243:13">!</operator><name pos:start="243:14" pos:end="243:14">p</name></expr>)</condition> <block pos:start="243:17" pos:end="249:9">{<block_content pos:start="245:13" pos:end="247:30">

            <expr_stmt pos:start="245:13" pos:end="245:25"><expr pos:start="245:13" pos:end="245:24"><name pos:start="245:13" pos:end="245:17">fname</name> <operator pos:start="245:19" pos:end="245:19">=</operator> <name pos:start="245:21" pos:end="245:24">next</name></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:30"><expr pos:start="247:13" pos:end="247:29"><name pos:start="247:13" pos:end="247:22"><name pos:start="247:13" pos:end="247:14">rt</name><operator pos:start="247:15" pos:end="247:16">-&gt;</operator><name pos:start="247:17" pos:end="247:19">app</name><index pos:start="247:20" pos:end="247:22">[<expr pos:start="247:21" pos:end="247:21"><literal type="number" pos:start="247:21" pos:end="247:21">0</literal></expr>]</index></name> <operator pos:start="247:24" pos:end="247:24">=</operator> <literal type="char" pos:start="247:26" pos:end="247:29">'\0'</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="249:11" pos:end="271:9">else <block pos:start="249:16" pos:end="271:9">{<block_content pos:start="253:13" pos:end="269:13">

            <comment type="line" pos:start="251:13" pos:end="251:82">// make sure we do not mismatch a playpath for an application instance</comment>

            <decl_stmt pos:start="253:13" pos:end="253:41"><decl pos:start="253:13" pos:end="253:40"><type pos:start="253:13" pos:end="253:18"><name pos:start="253:13" pos:end="253:16">char</name> <modifier pos:start="253:18" pos:end="253:18">*</modifier></type><name pos:start="253:19" pos:end="253:19">c</name> <init pos:start="253:21" pos:end="253:40">= <expr pos:start="253:23" pos:end="253:40"><call pos:start="253:23" pos:end="253:40"><name pos:start="253:23" pos:end="253:28">strchr</name><argument_list pos:start="253:29" pos:end="253:40">(<argument pos:start="253:30" pos:end="253:34"><expr pos:start="253:30" pos:end="253:34"><name pos:start="253:30" pos:end="253:30">p</name> <operator pos:start="253:32" pos:end="253:32">+</operator> <literal type="number" pos:start="253:34" pos:end="253:34">1</literal></expr></argument>, <argument pos:start="253:37" pos:end="253:39"><expr pos:start="253:37" pos:end="253:39"><literal type="char" pos:start="253:37" pos:end="253:39">':'</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:39"><expr pos:start="255:13" pos:end="255:38"><name pos:start="255:13" pos:end="255:17">fname</name> <operator pos:start="255:19" pos:end="255:19">=</operator> <call pos:start="255:21" pos:end="255:38"><name pos:start="255:21" pos:end="255:26">strchr</name><argument_list pos:start="255:27" pos:end="255:38">(<argument pos:start="255:28" pos:end="255:32"><expr pos:start="255:28" pos:end="255:32"><name pos:start="255:28" pos:end="255:28">p</name> <operator pos:start="255:30" pos:end="255:30">+</operator> <literal type="number" pos:start="255:32" pos:end="255:32">1</literal></expr></argument>, <argument pos:start="255:35" pos:end="255:37"><expr pos:start="255:35" pos:end="255:37"><literal type="char" pos:start="255:35" pos:end="255:37">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="257:13" pos:end="269:13"><if pos:start="257:13" pos:end="263:13">if <condition pos:start="257:16" pos:end="257:43">(<expr pos:start="257:17" pos:end="257:42"><operator pos:start="257:17" pos:end="257:17">!</operator><name pos:start="257:18" pos:end="257:22">fname</name> <operator pos:start="257:24" pos:end="257:25">||</operator> <operator pos:start="257:27" pos:end="257:27">(</operator><name pos:start="257:28" pos:end="257:28">c</name> <operator pos:start="257:30" pos:end="257:31">&amp;&amp;</operator> <name pos:start="257:33" pos:end="257:33">c</name> <operator pos:start="257:35" pos:end="257:35">&lt;</operator> <name pos:start="257:37" pos:end="257:41">fname</name><operator pos:start="257:42" pos:end="257:42">)</operator></expr>)</condition> <block pos:start="257:45" pos:end="263:13">{<block_content pos:start="259:17" pos:end="261:79">

                <expr_stmt pos:start="259:17" pos:end="259:30"><expr pos:start="259:17" pos:end="259:29"><name pos:start="259:17" pos:end="259:21">fname</name> <operator pos:start="259:23" pos:end="259:23">=</operator> <name pos:start="259:25" pos:end="259:25">p</name> <operator pos:start="259:27" pos:end="259:27">+</operator> <literal type="number" pos:start="259:29" pos:end="259:29">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="261:17" pos:end="261:79"><expr pos:start="261:17" pos:end="261:78"><call pos:start="261:17" pos:end="261:78"><name pos:start="261:17" pos:end="261:26">av_strlcpy</name><argument_list pos:start="261:27" pos:end="261:78">(<argument pos:start="261:28" pos:end="261:34"><expr pos:start="261:28" pos:end="261:34"><name pos:start="261:28" pos:end="261:34"><name pos:start="261:28" pos:end="261:29">rt</name><operator pos:start="261:30" pos:end="261:31">-&gt;</operator><name pos:start="261:32" pos:end="261:34">app</name></name></expr></argument>, <argument pos:start="261:37" pos:end="261:44"><expr pos:start="261:37" pos:end="261:44"><name pos:start="261:37" pos:end="261:40">path</name> <operator pos:start="261:42" pos:end="261:42">+</operator> <literal type="number" pos:start="261:44" pos:end="261:44">1</literal></expr></argument>, <argument pos:start="261:47" pos:end="261:77"><expr pos:start="261:47" pos:end="261:77"><call pos:start="261:47" pos:end="261:77"><name pos:start="261:47" pos:end="261:51">FFMIN</name><argument_list pos:start="261:52" pos:end="261:77">(<argument pos:start="261:53" pos:end="261:60"><expr pos:start="261:53" pos:end="261:60"><name pos:start="261:53" pos:end="261:53">p</name> <operator pos:start="261:55" pos:end="261:55">-</operator> <name pos:start="261:57" pos:end="261:60">path</name></expr></argument>, <argument pos:start="261:63" pos:end="261:76"><expr pos:start="261:63" pos:end="261:76"><name pos:start="261:63" pos:end="261:76">APP_MAX_LENGTH</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="263:15" pos:end="269:13">else <block pos:start="263:20" pos:end="269:13">{<block_content pos:start="265:17" pos:end="267:87">

                <expr_stmt pos:start="265:17" pos:end="265:24"><expr pos:start="265:17" pos:end="265:23"><name pos:start="265:17" pos:end="265:21">fname</name><operator pos:start="265:22" pos:end="265:23">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:87"><expr pos:start="267:17" pos:end="267:86"><call pos:start="267:17" pos:end="267:86"><name pos:start="267:17" pos:end="267:26">av_strlcpy</name><argument_list pos:start="267:27" pos:end="267:86">(<argument pos:start="267:28" pos:end="267:34"><expr pos:start="267:28" pos:end="267:34"><name pos:start="267:28" pos:end="267:34"><name pos:start="267:28" pos:end="267:29">rt</name><operator pos:start="267:30" pos:end="267:31">-&gt;</operator><name pos:start="267:32" pos:end="267:34">app</name></name></expr></argument>, <argument pos:start="267:37" pos:end="267:44"><expr pos:start="267:37" pos:end="267:44"><name pos:start="267:37" pos:end="267:40">path</name> <operator pos:start="267:42" pos:end="267:42">+</operator> <literal type="number" pos:start="267:44" pos:end="267:44">1</literal></expr></argument>, <argument pos:start="267:47" pos:end="267:85"><expr pos:start="267:47" pos:end="267:85"><call pos:start="267:47" pos:end="267:85"><name pos:start="267:47" pos:end="267:51">FFMIN</name><argument_list pos:start="267:52" pos:end="267:85">(<argument pos:start="267:53" pos:end="267:68"><expr pos:start="267:53" pos:end="267:68"><name pos:start="267:53" pos:end="267:57">fname</name> <operator pos:start="267:59" pos:end="267:59">-</operator> <name pos:start="267:61" pos:end="267:64">path</name> <operator pos:start="267:66" pos:end="267:66">-</operator> <literal type="number" pos:start="267:68" pos:end="267:68">1</literal></expr></argument>, <argument pos:start="267:71" pos:end="267:84"><expr pos:start="267:71" pos:end="267:84"><name pos:start="267:71" pos:end="267:84">APP_MAX_LENGTH</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="277:5" pos:end="293:5"><if pos:start="277:5" pos:end="293:5">if <condition pos:start="277:8" pos:end="277:16">(<expr pos:start="277:9" pos:end="277:15"><name pos:start="277:9" pos:end="277:15">old_app</name></expr>)</condition> <block pos:start="277:18" pos:end="293:5">{<block_content pos:start="281:9" pos:end="291:26">

        <comment type="line" pos:start="279:9" pos:end="279:77">// The name of application has been defined by the user, override it.</comment>

        <if_stmt pos:start="281:9" pos:end="287:9"><if pos:start="281:9" pos:end="287:9">if <condition pos:start="281:12" pos:end="281:46">(<expr pos:start="281:13" pos:end="281:45"><call pos:start="281:13" pos:end="281:27"><name pos:start="281:13" pos:end="281:18">strlen</name><argument_list pos:start="281:19" pos:end="281:27">(<argument pos:start="281:20" pos:end="281:26"><expr pos:start="281:20" pos:end="281:26"><name pos:start="281:20" pos:end="281:26">old_app</name></expr></argument>)</argument_list></call> <operator pos:start="281:29" pos:end="281:30">&gt;=</operator> <name pos:start="281:32" pos:end="281:45">APP_MAX_LENGTH</name></expr>)</condition> <block pos:start="281:48" pos:end="287:9">{<block_content pos:start="283:13" pos:end="285:22">

            <expr_stmt pos:start="283:13" pos:end="283:34"><expr pos:start="283:13" pos:end="283:33"><name pos:start="283:13" pos:end="283:15">ret</name> <operator pos:start="283:17" pos:end="283:17">=</operator> <call pos:start="283:19" pos:end="283:33"><name pos:start="283:19" pos:end="283:25">AVERROR</name><argument_list pos:start="283:26" pos:end="283:33">(<argument pos:start="283:27" pos:end="283:32"><expr pos:start="283:27" pos:end="283:32"><name pos:start="283:27" pos:end="283:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="285:13" pos:end="285:22">goto <name pos:start="285:18" pos:end="285:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:25"><expr pos:start="289:9" pos:end="289:24"><call pos:start="289:9" pos:end="289:24"><name pos:start="289:9" pos:end="289:15">av_free</name><argument_list pos:start="289:16" pos:end="289:24">(<argument pos:start="289:17" pos:end="289:23"><expr pos:start="289:17" pos:end="289:23"><name pos:start="289:17" pos:end="289:23"><name pos:start="289:17" pos:end="289:18">rt</name><operator pos:start="289:19" pos:end="289:20">-&gt;</operator><name pos:start="289:21" pos:end="289:23">app</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:26"><expr pos:start="291:9" pos:end="291:25"><name pos:start="291:9" pos:end="291:15"><name pos:start="291:9" pos:end="291:10">rt</name><operator pos:start="291:11" pos:end="291:12">-&gt;</operator><name pos:start="291:13" pos:end="291:15">app</name></name> <operator pos:start="291:17" pos:end="291:17">=</operator> <name pos:start="291:19" pos:end="291:25">old_app</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="297:5" pos:end="335:5"><if pos:start="297:5" pos:end="335:5">if <condition pos:start="297:8" pos:end="297:22">(<expr pos:start="297:9" pos:end="297:21"><operator pos:start="297:9" pos:end="297:9">!</operator><name pos:start="297:10" pos:end="297:21"><name pos:start="297:10" pos:end="297:11">rt</name><operator pos:start="297:12" pos:end="297:13">-&gt;</operator><name pos:start="297:14" pos:end="297:21">playpath</name></name></expr>)</condition> <block pos:start="297:24" pos:end="335:5">{<block_content pos:start="299:9" pos:end="333:61">

        <decl_stmt pos:start="299:9" pos:end="299:32"><decl pos:start="299:9" pos:end="299:31"><type pos:start="299:9" pos:end="299:11"><name pos:start="299:9" pos:end="299:11">int</name></type> <name pos:start="299:13" pos:end="299:15">len</name> <init pos:start="299:17" pos:end="299:31">= <expr pos:start="299:19" pos:end="299:31"><call pos:start="299:19" pos:end="299:31"><name pos:start="299:19" pos:end="299:24">strlen</name><argument_list pos:start="299:25" pos:end="299:31">(<argument pos:start="299:26" pos:end="299:30"><expr pos:start="299:26" pos:end="299:30"><name pos:start="299:26" pos:end="299:30">fname</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="303:9" pos:end="303:54"><expr pos:start="303:9" pos:end="303:53"><name pos:start="303:9" pos:end="303:20"><name pos:start="303:9" pos:end="303:10">rt</name><operator pos:start="303:11" pos:end="303:12">-&gt;</operator><name pos:start="303:13" pos:end="303:20">playpath</name></name> <operator pos:start="303:22" pos:end="303:22">=</operator> <call pos:start="303:24" pos:end="303:53"><name pos:start="303:24" pos:end="303:32">av_malloc</name><argument_list pos:start="303:33" pos:end="303:53">(<argument pos:start="303:34" pos:end="303:52"><expr pos:start="303:34" pos:end="303:52"><name pos:start="303:34" pos:end="303:52">PLAYPATH_MAX_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="305:9" pos:end="311:9"><if pos:start="305:9" pos:end="311:9">if <condition pos:start="305:12" pos:end="305:26">(<expr pos:start="305:13" pos:end="305:25"><operator pos:start="305:13" pos:end="305:13">!</operator><name pos:start="305:14" pos:end="305:25"><name pos:start="305:14" pos:end="305:15">rt</name><operator pos:start="305:16" pos:end="305:17">-&gt;</operator><name pos:start="305:18" pos:end="305:25">playpath</name></name></expr>)</condition> <block pos:start="305:28" pos:end="311:9">{<block_content pos:start="307:13" pos:end="309:22">

            <expr_stmt pos:start="307:13" pos:end="307:34"><expr pos:start="307:13" pos:end="307:33"><name pos:start="307:13" pos:end="307:15">ret</name> <operator pos:start="307:17" pos:end="307:17">=</operator> <call pos:start="307:19" pos:end="307:33"><name pos:start="307:19" pos:end="307:25">AVERROR</name><argument_list pos:start="307:26" pos:end="307:33">(<argument pos:start="307:27" pos:end="307:32"><expr pos:start="307:27" pos:end="307:32"><name pos:start="307:27" pos:end="307:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="309:13" pos:end="309:22">goto <name pos:start="309:18" pos:end="309:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="315:9" pos:end="331:9"><if pos:start="315:9" pos:end="323:9">if <condition pos:start="315:12" pos:end="319:47">(<expr pos:start="315:13" pos:end="319:46"><operator pos:start="315:13" pos:end="315:13">!</operator><call pos:start="315:14" pos:end="315:31"><name pos:start="315:14" pos:end="315:19">strchr</name><argument_list pos:start="315:20" pos:end="315:31">(<argument pos:start="315:21" pos:end="315:25"><expr pos:start="315:21" pos:end="315:25"><name pos:start="315:21" pos:end="315:25">fname</name></expr></argument>, <argument pos:start="315:28" pos:end="315:30"><expr pos:start="315:28" pos:end="315:30"><literal type="char" pos:start="315:28" pos:end="315:30">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="315:33" pos:end="315:34">&amp;&amp;</operator> <name pos:start="315:36" pos:end="315:38">len</name> <operator pos:start="315:40" pos:end="315:41">&gt;=</operator> <literal type="number" pos:start="315:43" pos:end="315:43">4</literal> <operator pos:start="315:45" pos:end="315:46">&amp;&amp;</operator>

            <operator pos:start="317:13" pos:end="317:13">(</operator><operator pos:start="317:14" pos:end="317:14">!</operator><call pos:start="317:15" pos:end="317:45"><name pos:start="317:15" pos:end="317:20">strcmp</name><argument_list pos:start="317:21" pos:end="317:45">(<argument pos:start="317:22" pos:end="317:36"><expr pos:start="317:22" pos:end="317:36"><name pos:start="317:22" pos:end="317:26">fname</name> <operator pos:start="317:28" pos:end="317:28">+</operator> <name pos:start="317:30" pos:end="317:32">len</name> <operator pos:start="317:34" pos:end="317:34">-</operator> <literal type="number" pos:start="317:36" pos:end="317:36">4</literal></expr></argument>, <argument pos:start="317:39" pos:end="317:44"><expr pos:start="317:39" pos:end="317:44"><literal type="string" pos:start="317:39" pos:end="317:44">".f4v"</literal></expr></argument>)</argument_list></call> <operator pos:start="317:47" pos:end="317:48">||</operator>

             <operator pos:start="319:14" pos:end="319:14">!</operator><call pos:start="319:15" pos:end="319:45"><name pos:start="319:15" pos:end="319:20">strcmp</name><argument_list pos:start="319:21" pos:end="319:45">(<argument pos:start="319:22" pos:end="319:36"><expr pos:start="319:22" pos:end="319:36"><name pos:start="319:22" pos:end="319:26">fname</name> <operator pos:start="319:28" pos:end="319:28">+</operator> <name pos:start="319:30" pos:end="319:32">len</name> <operator pos:start="319:34" pos:end="319:34">-</operator> <literal type="number" pos:start="319:36" pos:end="319:36">4</literal></expr></argument>, <argument pos:start="319:39" pos:end="319:44"><expr pos:start="319:39" pos:end="319:44"><literal type="string" pos:start="319:39" pos:end="319:44">".mp4"</literal></expr></argument>)</argument_list></call><operator pos:start="319:46" pos:end="319:46">)</operator></expr>)</condition> <block pos:start="319:49" pos:end="323:9">{<block_content pos:start="321:13" pos:end="321:44">

            <expr_stmt pos:start="321:13" pos:end="321:44"><expr pos:start="321:13" pos:end="321:43"><call pos:start="321:13" pos:end="321:43"><name pos:start="321:13" pos:end="321:18">memcpy</name><argument_list pos:start="321:19" pos:end="321:43">(<argument pos:start="321:20" pos:end="321:31"><expr pos:start="321:20" pos:end="321:31"><name pos:start="321:20" pos:end="321:31"><name pos:start="321:20" pos:end="321:21">rt</name><operator pos:start="321:22" pos:end="321:23">-&gt;</operator><name pos:start="321:24" pos:end="321:31">playpath</name></name></expr></argument>, <argument pos:start="321:34" pos:end="321:39"><expr pos:start="321:34" pos:end="321:39"><literal type="string" pos:start="321:34" pos:end="321:39">"mp4:"</literal></expr></argument>, <argument pos:start="321:42" pos:end="321:42"><expr pos:start="321:42" pos:end="321:42"><literal type="number" pos:start="321:42" pos:end="321:42">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="323:11" pos:end="331:9">else <block pos:start="323:16" pos:end="331:9">{<block_content pos:start="325:13" pos:end="329:32">

            <if_stmt pos:start="325:13" pos:end="327:38"><if pos:start="325:13" pos:end="327:38">if <condition pos:start="325:16" pos:end="325:61">(<expr pos:start="325:17" pos:end="325:60"><name pos:start="325:17" pos:end="325:19">len</name> <operator pos:start="325:21" pos:end="325:22">&gt;=</operator> <literal type="number" pos:start="325:24" pos:end="325:24">4</literal> <operator pos:start="325:26" pos:end="325:27">&amp;&amp;</operator> <operator pos:start="325:29" pos:end="325:29">!</operator><call pos:start="325:30" pos:end="325:60"><name pos:start="325:30" pos:end="325:35">strcmp</name><argument_list pos:start="325:36" pos:end="325:60">(<argument pos:start="325:37" pos:end="325:51"><expr pos:start="325:37" pos:end="325:51"><name pos:start="325:37" pos:end="325:41">fname</name> <operator pos:start="325:43" pos:end="325:43">+</operator> <name pos:start="325:45" pos:end="325:47">len</name> <operator pos:start="325:49" pos:end="325:49">-</operator> <literal type="number" pos:start="325:51" pos:end="325:51">4</literal></expr></argument>, <argument pos:start="325:54" pos:end="325:59"><expr pos:start="325:54" pos:end="325:59"><literal type="string" pos:start="325:54" pos:end="325:59">".flv"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="327:17" pos:end="327:38"><block_content pos:start="327:17" pos:end="327:38">

                <expr_stmt pos:start="327:17" pos:end="327:38"><expr pos:start="327:17" pos:end="327:37"><name pos:start="327:17" pos:end="327:30"><name pos:start="327:17" pos:end="327:21">fname</name><index pos:start="327:22" pos:end="327:30">[<expr pos:start="327:23" pos:end="327:29"><name pos:start="327:23" pos:end="327:25">len</name> <operator pos:start="327:27" pos:end="327:27">-</operator> <literal type="number" pos:start="327:29" pos:end="327:29">4</literal></expr>]</index></name> <operator pos:start="327:32" pos:end="327:32">=</operator> <literal type="char" pos:start="327:34" pos:end="327:37">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:32"><expr pos:start="329:13" pos:end="329:31"><name pos:start="329:13" pos:end="329:27"><name pos:start="329:13" pos:end="329:14">rt</name><operator pos:start="329:15" pos:end="329:16">-&gt;</operator><name pos:start="329:17" pos:end="329:24">playpath</name><index pos:start="329:25" pos:end="329:27">[<expr pos:start="329:26" pos:end="329:26"><literal type="number" pos:start="329:26" pos:end="329:26">0</literal></expr>]</index></name> <operator pos:start="329:29" pos:end="329:29">=</operator> <literal type="number" pos:start="329:31" pos:end="329:31">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:61"><expr pos:start="333:9" pos:end="333:60"><call pos:start="333:9" pos:end="333:60"><name pos:start="333:9" pos:end="333:18">av_strlcat</name><argument_list pos:start="333:19" pos:end="333:60">(<argument pos:start="333:20" pos:end="333:31"><expr pos:start="333:20" pos:end="333:31"><name pos:start="333:20" pos:end="333:31"><name pos:start="333:20" pos:end="333:21">rt</name><operator pos:start="333:22" pos:end="333:23">-&gt;</operator><name pos:start="333:24" pos:end="333:31">playpath</name></name></expr></argument>, <argument pos:start="333:34" pos:end="333:38"><expr pos:start="333:34" pos:end="333:38"><name pos:start="333:34" pos:end="333:38">fname</name></expr></argument>, <argument pos:start="333:41" pos:end="333:59"><expr pos:start="333:41" pos:end="333:59"><name pos:start="333:41" pos:end="333:59">PLAYPATH_MAX_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="339:5" pos:end="355:5"><if pos:start="339:5" pos:end="355:5">if <condition pos:start="339:8" pos:end="339:19">(<expr pos:start="339:9" pos:end="339:18"><operator pos:start="339:9" pos:end="339:9">!</operator><name pos:start="339:10" pos:end="339:18"><name pos:start="339:10" pos:end="339:11">rt</name><operator pos:start="339:12" pos:end="339:13">-&gt;</operator><name pos:start="339:14" pos:end="339:18">tcurl</name></name></expr>)</condition> <block pos:start="339:21" pos:end="355:5">{<block_content pos:start="341:9" pos:end="353:42">

        <expr_stmt pos:start="341:9" pos:end="341:48"><expr pos:start="341:9" pos:end="341:47"><name pos:start="341:9" pos:end="341:17"><name pos:start="341:9" pos:end="341:10">rt</name><operator pos:start="341:11" pos:end="341:12">-&gt;</operator><name pos:start="341:13" pos:end="341:17">tcurl</name></name> <operator pos:start="341:19" pos:end="341:19">=</operator> <call pos:start="341:21" pos:end="341:47"><name pos:start="341:21" pos:end="341:29">av_malloc</name><argument_list pos:start="341:30" pos:end="341:47">(<argument pos:start="341:31" pos:end="341:46"><expr pos:start="341:31" pos:end="341:46"><name pos:start="341:31" pos:end="341:46">TCURL_MAX_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="343:9" pos:end="349:9"><if pos:start="343:9" pos:end="349:9">if <condition pos:start="343:12" pos:end="343:23">(<expr pos:start="343:13" pos:end="343:22"><operator pos:start="343:13" pos:end="343:13">!</operator><name pos:start="343:14" pos:end="343:22"><name pos:start="343:14" pos:end="343:15">rt</name><operator pos:start="343:16" pos:end="343:17">-&gt;</operator><name pos:start="343:18" pos:end="343:22">tcurl</name></name></expr>)</condition> <block pos:start="343:25" pos:end="349:9">{<block_content pos:start="345:13" pos:end="347:22">

            <expr_stmt pos:start="345:13" pos:end="345:34"><expr pos:start="345:13" pos:end="345:33"><name pos:start="345:13" pos:end="345:15">ret</name> <operator pos:start="345:17" pos:end="345:17">=</operator> <call pos:start="345:19" pos:end="345:33"><name pos:start="345:19" pos:end="345:25">AVERROR</name><argument_list pos:start="345:26" pos:end="345:33">(<argument pos:start="345:27" pos:end="345:32"><expr pos:start="345:27" pos:end="345:32"><name pos:start="345:27" pos:end="345:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="347:13" pos:end="347:22">goto <name pos:start="347:18" pos:end="347:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="351:9" pos:end="353:42"><expr pos:start="351:9" pos:end="353:41"><call pos:start="351:9" pos:end="353:41"><name pos:start="351:9" pos:end="351:19">ff_url_join</name><argument_list pos:start="351:20" pos:end="353:41">(<argument pos:start="351:21" pos:end="351:29"><expr pos:start="351:21" pos:end="351:29"><name pos:start="351:21" pos:end="351:29"><name pos:start="351:21" pos:end="351:22">rt</name><operator pos:start="351:23" pos:end="351:24">-&gt;</operator><name pos:start="351:25" pos:end="351:29">tcurl</name></name></expr></argument>, <argument pos:start="351:32" pos:end="351:47"><expr pos:start="351:32" pos:end="351:47"><name pos:start="351:32" pos:end="351:47">TCURL_MAX_LENGTH</name></expr></argument>, <argument pos:start="351:50" pos:end="351:54"><expr pos:start="351:50" pos:end="351:54"><name pos:start="351:50" pos:end="351:54">proto</name></expr></argument>, <argument pos:start="351:57" pos:end="351:60"><expr pos:start="351:57" pos:end="351:60"><name pos:start="351:57" pos:end="351:60">NULL</name></expr></argument>, <argument pos:start="351:63" pos:end="351:70"><expr pos:start="351:63" pos:end="351:70"><name pos:start="351:63" pos:end="351:70">hostname</name></expr></argument>,

                    <argument pos:start="353:21" pos:end="353:24"><expr pos:start="353:21" pos:end="353:24"><name pos:start="353:21" pos:end="353:24">port</name></expr></argument>, <argument pos:start="353:27" pos:end="353:31"><expr pos:start="353:27" pos:end="353:31"><literal type="string" pos:start="353:27" pos:end="353:31">"/%s"</literal></expr></argument>, <argument pos:start="353:34" pos:end="353:40"><expr pos:start="353:34" pos:end="353:40"><name pos:start="353:34" pos:end="353:40"><name pos:start="353:34" pos:end="353:35">rt</name><operator pos:start="353:36" pos:end="353:37">-&gt;</operator><name pos:start="353:38" pos:end="353:40">app</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="359:5" pos:end="387:5"><if pos:start="359:5" pos:end="387:5">if <condition pos:start="359:8" pos:end="359:22">(<expr pos:start="359:9" pos:end="359:21"><operator pos:start="359:9" pos:end="359:9">!</operator><name pos:start="359:10" pos:end="359:21"><name pos:start="359:10" pos:end="359:11">rt</name><operator pos:start="359:12" pos:end="359:13">-&gt;</operator><name pos:start="359:14" pos:end="359:21">flashver</name></name></expr>)</condition> <block pos:start="359:24" pos:end="387:5">{<block_content pos:start="361:9" pos:end="385:9">

        <expr_stmt pos:start="361:9" pos:end="361:54"><expr pos:start="361:9" pos:end="361:53"><name pos:start="361:9" pos:end="361:20"><name pos:start="361:9" pos:end="361:10">rt</name><operator pos:start="361:11" pos:end="361:12">-&gt;</operator><name pos:start="361:13" pos:end="361:20">flashver</name></name> <operator pos:start="361:22" pos:end="361:22">=</operator> <call pos:start="361:24" pos:end="361:53"><name pos:start="361:24" pos:end="361:32">av_malloc</name><argument_list pos:start="361:33" pos:end="361:53">(<argument pos:start="361:34" pos:end="361:52"><expr pos:start="361:34" pos:end="361:52"><name pos:start="361:34" pos:end="361:52">FLASHVER_MAX_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="363:9" pos:end="369:9"><if pos:start="363:9" pos:end="369:9">if <condition pos:start="363:12" pos:end="363:26">(<expr pos:start="363:13" pos:end="363:25"><operator pos:start="363:13" pos:end="363:13">!</operator><name pos:start="363:14" pos:end="363:25"><name pos:start="363:14" pos:end="363:15">rt</name><operator pos:start="363:16" pos:end="363:17">-&gt;</operator><name pos:start="363:18" pos:end="363:25">flashver</name></name></expr>)</condition> <block pos:start="363:28" pos:end="369:9">{<block_content pos:start="365:13" pos:end="367:22">

            <expr_stmt pos:start="365:13" pos:end="365:34"><expr pos:start="365:13" pos:end="365:33"><name pos:start="365:13" pos:end="365:15">ret</name> <operator pos:start="365:17" pos:end="365:17">=</operator> <call pos:start="365:19" pos:end="365:33"><name pos:start="365:19" pos:end="365:25">AVERROR</name><argument_list pos:start="365:26" pos:end="365:33">(<argument pos:start="365:27" pos:end="365:32"><expr pos:start="365:27" pos:end="365:32"><name pos:start="365:27" pos:end="365:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="367:13" pos:end="367:22">goto <name pos:start="367:18" pos:end="367:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="371:9" pos:end="385:9"><if pos:start="371:9" pos:end="379:9">if <condition pos:start="371:12" pos:end="371:25">(<expr pos:start="371:13" pos:end="371:24"><name pos:start="371:13" pos:end="371:24"><name pos:start="371:13" pos:end="371:14">rt</name><operator pos:start="371:15" pos:end="371:16">-&gt;</operator><name pos:start="371:17" pos:end="371:24">is_input</name></name></expr>)</condition> <block pos:start="371:27" pos:end="379:9">{<block_content pos:start="373:13" pos:end="377:56">

            <expr_stmt pos:start="373:13" pos:end="377:56"><expr pos:start="373:13" pos:end="377:55"><call pos:start="373:13" pos:end="377:55"><name pos:start="373:13" pos:end="373:20">snprintf</name><argument_list pos:start="373:21" pos:end="377:55">(<argument pos:start="373:22" pos:end="373:33"><expr pos:start="373:22" pos:end="373:33"><name pos:start="373:22" pos:end="373:33"><name pos:start="373:22" pos:end="373:23">rt</name><operator pos:start="373:24" pos:end="373:25">-&gt;</operator><name pos:start="373:26" pos:end="373:33">flashver</name></name></expr></argument>, <argument pos:start="373:36" pos:end="373:54"><expr pos:start="373:36" pos:end="373:54"><name pos:start="373:36" pos:end="373:54">FLASHVER_MAX_LENGTH</name></expr></argument>, <argument pos:start="373:57" pos:end="373:72"><expr pos:start="373:57" pos:end="373:72"><literal type="string" pos:start="373:57" pos:end="373:72">"%s %d,%d,%d,%d"</literal></expr></argument>,

                    <argument pos:start="375:21" pos:end="375:40"><expr pos:start="375:21" pos:end="375:40"><name pos:start="375:21" pos:end="375:40">RTMP_CLIENT_PLATFORM</name></expr></argument>, <argument pos:start="375:43" pos:end="375:58"><expr pos:start="375:43" pos:end="375:58"><name pos:start="375:43" pos:end="375:58">RTMP_CLIENT_VER1</name></expr></argument>, <argument pos:start="375:61" pos:end="375:76"><expr pos:start="375:61" pos:end="375:76"><name pos:start="375:61" pos:end="375:76">RTMP_CLIENT_VER2</name></expr></argument>,

                    <argument pos:start="377:21" pos:end="377:36"><expr pos:start="377:21" pos:end="377:36"><name pos:start="377:21" pos:end="377:36">RTMP_CLIENT_VER3</name></expr></argument>, <argument pos:start="377:39" pos:end="377:54"><expr pos:start="377:39" pos:end="377:54"><name pos:start="377:39" pos:end="377:54">RTMP_CLIENT_VER4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="379:11" pos:end="385:9">else <block pos:start="379:16" pos:end="385:9">{<block_content pos:start="381:13" pos:end="383:68">

            <expr_stmt pos:start="381:13" pos:end="383:68"><expr pos:start="381:13" pos:end="383:67"><call pos:start="381:13" pos:end="383:67"><name pos:start="381:13" pos:end="381:20">snprintf</name><argument_list pos:start="381:21" pos:end="383:67">(<argument pos:start="381:22" pos:end="381:33"><expr pos:start="381:22" pos:end="381:33"><name pos:start="381:22" pos:end="381:33"><name pos:start="381:22" pos:end="381:23">rt</name><operator pos:start="381:24" pos:end="381:25">-&gt;</operator><name pos:start="381:26" pos:end="381:33">flashver</name></name></expr></argument>, <argument pos:start="381:36" pos:end="381:54"><expr pos:start="381:36" pos:end="381:54"><name pos:start="381:36" pos:end="381:54">FLASHVER_MAX_LENGTH</name></expr></argument>,

                    <argument pos:start="383:21" pos:end="383:47"><expr pos:start="383:21" pos:end="383:47"><literal type="string" pos:start="383:21" pos:end="383:47">"FMLE/3.0 (compatible; %s)"</literal></expr></argument>, <argument pos:start="383:50" pos:end="383:66"><expr pos:start="383:50" pos:end="383:66"><name pos:start="383:50" pos:end="383:66">LIBAVFORMAT_IDENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="391:5" pos:end="391:37"><expr pos:start="391:5" pos:end="391:36"><name pos:start="391:5" pos:end="391:26"><name pos:start="391:5" pos:end="391:6">rt</name><operator pos:start="391:7" pos:end="391:8">-&gt;</operator><name pos:start="391:9" pos:end="391:26">client_report_size</name></name> <operator pos:start="391:28" pos:end="391:28">=</operator> <literal type="number" pos:start="391:30" pos:end="391:36">1048576</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="393:5" pos:end="393:23"><expr pos:start="393:5" pos:end="393:22"><name pos:start="393:5" pos:end="393:18"><name pos:start="393:5" pos:end="393:6">rt</name><operator pos:start="393:7" pos:end="393:8">-&gt;</operator><name pos:start="393:9" pos:end="393:18">bytes_read</name></name> <operator pos:start="393:20" pos:end="393:20">=</operator> <literal type="number" pos:start="393:22" pos:end="393:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="395:5" pos:end="395:22"><expr pos:start="395:5" pos:end="395:21"><name pos:start="395:5" pos:end="395:17"><name pos:start="395:5" pos:end="395:6">rt</name><operator pos:start="395:7" pos:end="395:8">-&gt;</operator><name pos:start="395:9" pos:end="395:17">has_audio</name></name> <operator pos:start="395:19" pos:end="395:19">=</operator> <literal type="number" pos:start="395:21" pos:end="395:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="397:5" pos:end="397:22"><expr pos:start="397:5" pos:end="397:21"><name pos:start="397:5" pos:end="397:17"><name pos:start="397:5" pos:end="397:6">rt</name><operator pos:start="397:7" pos:end="397:8">-&gt;</operator><name pos:start="397:9" pos:end="397:17">has_video</name></name> <operator pos:start="397:19" pos:end="397:19">=</operator> <literal type="number" pos:start="397:21" pos:end="397:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="399:5" pos:end="399:30"><expr pos:start="399:5" pos:end="399:29"><name pos:start="399:5" pos:end="399:25"><name pos:start="399:5" pos:end="399:6">rt</name><operator pos:start="399:7" pos:end="399:8">-&gt;</operator><name pos:start="399:9" pos:end="399:25">received_metadata</name></name> <operator pos:start="399:27" pos:end="399:27">=</operator> <literal type="number" pos:start="399:29" pos:end="399:29">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="401:5" pos:end="401:28"><expr pos:start="401:5" pos:end="401:27"><name pos:start="401:5" pos:end="401:23"><name pos:start="401:5" pos:end="401:6">rt</name><operator pos:start="401:7" pos:end="401:8">-&gt;</operator><name pos:start="401:9" pos:end="401:23">last_bytes_read</name></name> <operator pos:start="401:25" pos:end="401:25">=</operator> <literal type="number" pos:start="401:27" pos:end="401:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="403:5" pos:end="403:28"><expr pos:start="403:5" pos:end="403:27"><name pos:start="403:5" pos:end="403:17"><name pos:start="403:5" pos:end="403:6">rt</name><operator pos:start="403:7" pos:end="403:8">-&gt;</operator><name pos:start="403:9" pos:end="403:17">server_bw</name></name> <operator pos:start="403:19" pos:end="403:19">=</operator> <literal type="number" pos:start="403:21" pos:end="403:27">2500000</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="407:5" pos:end="409:47"><expr pos:start="407:5" pos:end="409:46"><call pos:start="407:5" pos:end="409:46"><name pos:start="407:5" pos:end="407:10">av_log</name><argument_list pos:start="407:11" pos:end="409:46">(<argument pos:start="407:12" pos:end="407:12"><expr pos:start="407:12" pos:end="407:12"><name pos:start="407:12" pos:end="407:12">s</name></expr></argument>, <argument pos:start="407:15" pos:end="407:26"><expr pos:start="407:15" pos:end="407:26"><name pos:start="407:15" pos:end="407:26">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="407:29" pos:end="407:75"><expr pos:start="407:29" pos:end="407:75"><literal type="string" pos:start="407:29" pos:end="407:75">"Proto = %s, path = %s, app = %s, fname = %s\n"</literal></expr></argument>,

           <argument pos:start="409:12" pos:end="409:16"><expr pos:start="409:12" pos:end="409:16"><name pos:start="409:12" pos:end="409:16">proto</name></expr></argument>, <argument pos:start="409:19" pos:end="409:22"><expr pos:start="409:19" pos:end="409:22"><name pos:start="409:19" pos:end="409:22">path</name></expr></argument>, <argument pos:start="409:25" pos:end="409:31"><expr pos:start="409:25" pos:end="409:31"><name pos:start="409:25" pos:end="409:31"><name pos:start="409:25" pos:end="409:26">rt</name><operator pos:start="409:27" pos:end="409:28">-&gt;</operator><name pos:start="409:29" pos:end="409:31">app</name></name></expr></argument>, <argument pos:start="409:34" pos:end="409:45"><expr pos:start="409:34" pos:end="409:45"><name pos:start="409:34" pos:end="409:45"><name pos:start="409:34" pos:end="409:35">rt</name><operator pos:start="409:36" pos:end="409:37">-&gt;</operator><name pos:start="409:38" pos:end="409:45">playpath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="411:5" pos:end="423:5"><if pos:start="411:5" pos:end="417:5">if <condition pos:start="411:8" pos:end="411:20">(<expr pos:start="411:9" pos:end="411:19"><operator pos:start="411:9" pos:end="411:9">!</operator><name pos:start="411:10" pos:end="411:19"><name pos:start="411:10" pos:end="411:11">rt</name><operator pos:start="411:12" pos:end="411:13">-&gt;</operator><name pos:start="411:14" pos:end="411:19">listen</name></name></expr>)</condition> <block pos:start="411:22" pos:end="417:5">{<block_content pos:start="413:9" pos:end="415:22">

        <if_stmt pos:start="413:9" pos:end="415:22"><if pos:start="413:9" pos:end="415:22">if <condition pos:start="413:12" pos:end="413:43">(<expr pos:start="413:13" pos:end="413:42"><operator pos:start="413:13" pos:end="413:13">(</operator><name pos:start="413:14" pos:end="413:16">ret</name> <operator pos:start="413:18" pos:end="413:18">=</operator> <call pos:start="413:20" pos:end="413:37"><name pos:start="413:20" pos:end="413:30">gen_connect</name><argument_list pos:start="413:31" pos:end="413:37">(<argument pos:start="413:32" pos:end="413:32"><expr pos:start="413:32" pos:end="413:32"><name pos:start="413:32" pos:end="413:32">s</name></expr></argument>, <argument pos:start="413:35" pos:end="413:36"><expr pos:start="413:35" pos:end="413:36"><name pos:start="413:35" pos:end="413:36">rt</name></expr></argument>)</argument_list></call><operator pos:start="413:38" pos:end="413:38">)</operator> <operator pos:start="413:40" pos:end="413:40">&lt;</operator> <literal type="number" pos:start="413:42" pos:end="413:42">0</literal></expr>)</condition><block type="pseudo" pos:start="415:13" pos:end="415:22"><block_content pos:start="415:13" pos:end="415:22">

            <goto pos:start="415:13" pos:end="415:22">goto <name pos:start="415:18" pos:end="415:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="417:7" pos:end="423:5">else <block pos:start="417:12" pos:end="423:5">{<block_content pos:start="419:9" pos:end="421:22">

        <if_stmt pos:start="419:9" pos:end="421:22"><if pos:start="419:9" pos:end="421:22">if <condition pos:start="419:12" pos:end="419:54">(<expr pos:start="419:13" pos:end="419:53"><operator pos:start="419:13" pos:end="419:13">(</operator><name pos:start="419:14" pos:end="419:16">ret</name> <operator pos:start="419:18" pos:end="419:18">=</operator> <call pos:start="419:20" pos:end="419:48"><name pos:start="419:20" pos:end="419:31">read_connect</name><argument_list pos:start="419:32" pos:end="419:48">(<argument pos:start="419:33" pos:end="419:33"><expr pos:start="419:33" pos:end="419:33"><name pos:start="419:33" pos:end="419:33">s</name></expr></argument>, <argument pos:start="419:36" pos:end="419:47"><expr pos:start="419:36" pos:end="419:47"><name pos:start="419:36" pos:end="419:47"><name pos:start="419:36" pos:end="419:36">s</name><operator pos:start="419:37" pos:end="419:38">-&gt;</operator><name pos:start="419:39" pos:end="419:47">priv_data</name></name></expr></argument>)</argument_list></call><operator pos:start="419:49" pos:end="419:49">)</operator> <operator pos:start="419:51" pos:end="419:51">&lt;</operator> <literal type="number" pos:start="419:53" pos:end="419:53">0</literal></expr>)</condition><block type="pseudo" pos:start="421:13" pos:end="421:22"><block_content pos:start="421:13" pos:end="421:22">

            <goto pos:start="421:13" pos:end="421:22">goto <name pos:start="421:18" pos:end="421:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <do pos:start="427:5" pos:end="431:37">do <block pos:start="427:8" pos:end="431:5">{<block_content pos:start="429:9" pos:end="429:31">

        <expr_stmt pos:start="429:9" pos:end="429:31"><expr pos:start="429:9" pos:end="429:30"><name pos:start="429:9" pos:end="429:11">ret</name> <operator pos:start="429:13" pos:end="429:13">=</operator> <call pos:start="429:15" pos:end="429:30"><name pos:start="429:15" pos:end="429:24">get_packet</name><argument_list pos:start="429:25" pos:end="429:30">(<argument pos:start="429:26" pos:end="429:26"><expr pos:start="429:26" pos:end="429:26"><name pos:start="429:26" pos:end="429:26">s</name></expr></argument>, <argument pos:start="429:29" pos:end="429:29"><expr pos:start="429:29" pos:end="429:29"><literal type="number" pos:start="429:29" pos:end="429:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="431:13" pos:end="431:36">(<expr pos:start="431:14" pos:end="431:35"><name pos:start="431:14" pos:end="431:16">ret</name> <operator pos:start="431:18" pos:end="431:19">==</operator> <call pos:start="431:21" pos:end="431:35"><name pos:start="431:21" pos:end="431:27">AVERROR</name><argument_list pos:start="431:28" pos:end="431:35">(<argument pos:start="431:29" pos:end="431:34"><expr pos:start="431:29" pos:end="431:34"><name pos:start="431:29" pos:end="431:34">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>

    <if_stmt pos:start="433:5" pos:end="435:18"><if pos:start="433:5" pos:end="435:18">if <condition pos:start="433:8" pos:end="433:16">(<expr pos:start="433:9" pos:end="433:15"><name pos:start="433:9" pos:end="433:11">ret</name> <operator pos:start="433:13" pos:end="433:13">&lt;</operator> <literal type="number" pos:start="433:15" pos:end="433:15">0</literal></expr>)</condition><block type="pseudo" pos:start="435:9" pos:end="435:18"><block_content pos:start="435:9" pos:end="435:18">

        <goto pos:start="435:9" pos:end="435:18">goto <name pos:start="435:14" pos:end="435:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="439:5" pos:end="461:5"><if pos:start="439:5" pos:end="461:5">if <condition pos:start="439:8" pos:end="439:25">(<expr pos:start="439:9" pos:end="439:24"><name pos:start="439:9" pos:end="439:24"><name pos:start="439:9" pos:end="439:10">rt</name><operator pos:start="439:11" pos:end="439:12">-&gt;</operator><name pos:start="439:13" pos:end="439:24">do_reconnect</name></name></expr>)</condition> <block pos:start="439:27" pos:end="461:5">{<block_content pos:start="441:9" pos:end="459:23">

        <decl_stmt pos:start="441:9" pos:end="441:14"><decl pos:start="441:9" pos:end="441:13"><type pos:start="441:9" pos:end="441:11"><name pos:start="441:9" pos:end="441:11">int</name></type> <name pos:start="441:13" pos:end="441:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="443:9" pos:end="443:32"><expr pos:start="443:9" pos:end="443:31"><call pos:start="443:9" pos:end="443:31"><name pos:start="443:9" pos:end="443:19">ffurl_close</name><argument_list pos:start="443:20" pos:end="443:31">(<argument pos:start="443:21" pos:end="443:30"><expr pos:start="443:21" pos:end="443:30"><name pos:start="443:21" pos:end="443:30"><name pos:start="443:21" pos:end="443:22">rt</name><operator pos:start="443:23" pos:end="443:24">-&gt;</operator><name pos:start="443:25" pos:end="443:30">stream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="445:9" pos:end="445:32"><expr pos:start="445:9" pos:end="445:31"><name pos:start="445:9" pos:end="445:18"><name pos:start="445:9" pos:end="445:10">rt</name><operator pos:start="445:11" pos:end="445:12">-&gt;</operator><name pos:start="445:13" pos:end="445:18">stream</name></name>       <operator pos:start="445:26" pos:end="445:26">=</operator> <name pos:start="445:28" pos:end="445:31">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="447:9" pos:end="447:29"><expr pos:start="447:9" pos:end="447:28"><name pos:start="447:9" pos:end="447:24"><name pos:start="447:9" pos:end="447:10">rt</name><operator pos:start="447:11" pos:end="447:12">-&gt;</operator><name pos:start="447:13" pos:end="447:24">do_reconnect</name></name> <operator pos:start="447:26" pos:end="447:26">=</operator> <literal type="number" pos:start="447:28" pos:end="447:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="449:9" pos:end="449:29"><expr pos:start="449:9" pos:end="449:28"><name pos:start="449:9" pos:end="449:22"><name pos:start="449:9" pos:end="449:10">rt</name><operator pos:start="449:11" pos:end="449:12">-&gt;</operator><name pos:start="449:13" pos:end="449:22">nb_invokes</name></name>   <operator pos:start="449:26" pos:end="449:26">=</operator> <literal type="number" pos:start="449:28" pos:end="449:28">0</literal></expr>;</expr_stmt>

        <for pos:start="451:9" pos:end="455:64">for <control pos:start="451:13" pos:end="451:31">(<init pos:start="451:14" pos:end="451:19"><expr pos:start="451:14" pos:end="451:18"><name pos:start="451:14" pos:end="451:14">i</name> <operator pos:start="451:16" pos:end="451:16">=</operator> <literal type="number" pos:start="451:18" pos:end="451:18">0</literal></expr>;</init> <condition pos:start="451:21" pos:end="451:26"><expr pos:start="451:21" pos:end="451:25"><name pos:start="451:21" pos:end="451:21">i</name> <operator pos:start="451:23" pos:end="451:23">&lt;</operator> <literal type="number" pos:start="451:25" pos:end="451:25">2</literal></expr>;</condition> <incr pos:start="451:28" pos:end="451:30"><expr pos:start="451:28" pos:end="451:30"><name pos:start="451:28" pos:end="451:28">i</name><operator pos:start="451:29" pos:end="451:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="453:13" pos:end="455:64"><block_content pos:start="453:13" pos:end="455:64">

            <expr_stmt pos:start="453:13" pos:end="455:64"><expr pos:start="453:13" pos:end="455:63"><call pos:start="453:13" pos:end="455:63"><name pos:start="453:13" pos:end="453:18">memset</name><argument_list pos:start="453:19" pos:end="455:63">(<argument pos:start="453:20" pos:end="453:34"><expr pos:start="453:20" pos:end="453:34"><name pos:start="453:20" pos:end="453:34"><name pos:start="453:20" pos:end="453:21">rt</name><operator pos:start="453:22" pos:end="453:23">-&gt;</operator><name pos:start="453:24" pos:end="453:31">prev_pkt</name><index pos:start="453:32" pos:end="453:34">[<expr pos:start="453:33" pos:end="453:33"><name pos:start="453:33" pos:end="453:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="453:37" pos:end="453:37"><expr pos:start="453:37" pos:end="453:37"><literal type="number" pos:start="453:37" pos:end="453:37">0</literal></expr></argument>,

                   <argument pos:start="455:20" pos:end="455:62"><expr pos:start="455:20" pos:end="455:62"><sizeof pos:start="455:20" pos:end="455:41">sizeof<argument_list pos:start="455:26" pos:end="455:41">(<argument pos:start="455:27" pos:end="455:40"><expr pos:start="455:27" pos:end="455:40"><operator pos:start="455:27" pos:end="455:27">*</operator><operator pos:start="455:28" pos:end="455:28">*</operator><name pos:start="455:29" pos:end="455:40"><name pos:start="455:29" pos:end="455:30">rt</name><operator pos:start="455:31" pos:end="455:32">-&gt;</operator><name pos:start="455:33" pos:end="455:40">prev_pkt</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="455:43" pos:end="455:43">*</operator> <name pos:start="455:45" pos:end="455:62"><name pos:start="455:45" pos:end="455:46">rt</name><operator pos:start="455:47" pos:end="455:48">-&gt;</operator><name pos:start="455:49" pos:end="455:59">nb_prev_pkt</name><index pos:start="455:60" pos:end="455:62">[<expr pos:start="455:61" pos:end="455:61"><name pos:start="455:61" pos:end="455:61">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="457:9" pos:end="457:33"><expr pos:start="457:9" pos:end="457:32"><call pos:start="457:9" pos:end="457:32"><name pos:start="457:9" pos:end="457:28">free_tracked_methods</name><argument_list pos:start="457:29" pos:end="457:32">(<argument pos:start="457:30" pos:end="457:31"><expr pos:start="457:30" pos:end="457:31"><name pos:start="457:30" pos:end="457:31">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="459:9" pos:end="459:23">goto <name pos:start="459:14" pos:end="459:22">reconnect</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="465:5" pos:end="531:5"><if pos:start="465:5" pos:end="521:5">if <condition pos:start="465:8" pos:end="465:21">(<expr pos:start="465:9" pos:end="465:20"><name pos:start="465:9" pos:end="465:20"><name pos:start="465:9" pos:end="465:10">rt</name><operator pos:start="465:11" pos:end="465:12">-&gt;</operator><name pos:start="465:13" pos:end="465:20">is_input</name></name></expr>)</condition> <block pos:start="465:23" pos:end="521:5">{<block_content pos:start="467:9" pos:end="519:9">

        <decl_stmt pos:start="467:9" pos:end="467:16"><decl pos:start="467:9" pos:end="467:15"><type pos:start="467:9" pos:end="467:11"><name pos:start="467:9" pos:end="467:11">int</name></type> <name pos:start="467:13" pos:end="467:15">err</name></decl>;</decl_stmt>

        <comment type="line" pos:start="469:9" pos:end="469:42">// generate FLV header for demuxer</comment>

        <expr_stmt pos:start="471:9" pos:end="471:26"><expr pos:start="471:9" pos:end="471:25"><name pos:start="471:9" pos:end="471:20"><name pos:start="471:9" pos:end="471:10">rt</name><operator pos:start="471:11" pos:end="471:12">-&gt;</operator><name pos:start="471:13" pos:end="471:20">flv_size</name></name> <operator pos:start="471:22" pos:end="471:22">=</operator> <literal type="number" pos:start="471:24" pos:end="471:25">13</literal></expr>;</expr_stmt>

        <if_stmt pos:start="473:9" pos:end="475:23"><if pos:start="473:9" pos:end="475:23">if <condition pos:start="473:12" pos:end="473:65">(<expr pos:start="473:13" pos:end="473:64"><operator pos:start="473:13" pos:end="473:13">(</operator><name pos:start="473:14" pos:end="473:16">err</name> <operator pos:start="473:18" pos:end="473:18">=</operator> <call pos:start="473:20" pos:end="473:59"><name pos:start="473:20" pos:end="473:30">av_reallocp</name><argument_list pos:start="473:31" pos:end="473:59">(<argument pos:start="473:32" pos:end="473:44"><expr pos:start="473:32" pos:end="473:44"><operator pos:start="473:32" pos:end="473:32">&amp;</operator><name pos:start="473:33" pos:end="473:44"><name pos:start="473:33" pos:end="473:34">rt</name><operator pos:start="473:35" pos:end="473:36">-&gt;</operator><name pos:start="473:37" pos:end="473:44">flv_data</name></name></expr></argument>, <argument pos:start="473:47" pos:end="473:58"><expr pos:start="473:47" pos:end="473:58"><name pos:start="473:47" pos:end="473:58"><name pos:start="473:47" pos:end="473:48">rt</name><operator pos:start="473:49" pos:end="473:50">-&gt;</operator><name pos:start="473:51" pos:end="473:58">flv_size</name></name></expr></argument>)</argument_list></call><operator pos:start="473:60" pos:end="473:60">)</operator> <operator pos:start="473:62" pos:end="473:62">&lt;</operator> <literal type="number" pos:start="473:64" pos:end="473:64">0</literal></expr>)</condition><block type="pseudo" pos:start="475:13" pos:end="475:23"><block_content pos:start="475:13" pos:end="475:23">

            <return pos:start="475:13" pos:end="475:23">return <expr pos:start="475:20" pos:end="475:22"><name pos:start="475:20" pos:end="475:22">err</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="477:9" pos:end="477:25"><expr pos:start="477:9" pos:end="477:24"><name pos:start="477:9" pos:end="477:19"><name pos:start="477:9" pos:end="477:10">rt</name><operator pos:start="477:11" pos:end="477:12">-&gt;</operator><name pos:start="477:13" pos:end="477:19">flv_off</name></name>  <operator pos:start="477:22" pos:end="477:22">=</operator> <literal type="number" pos:start="477:24" pos:end="477:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="479:9" pos:end="479:72"><expr pos:start="479:9" pos:end="479:71"><call pos:start="479:9" pos:end="479:71"><name pos:start="479:9" pos:end="479:14">memcpy</name><argument_list pos:start="479:15" pos:end="479:71">(<argument pos:start="479:16" pos:end="479:27"><expr pos:start="479:16" pos:end="479:27"><name pos:start="479:16" pos:end="479:27"><name pos:start="479:16" pos:end="479:17">rt</name><operator pos:start="479:18" pos:end="479:19">-&gt;</operator><name pos:start="479:20" pos:end="479:27">flv_data</name></name></expr></argument>, <argument pos:start="479:30" pos:end="479:56"><expr pos:start="479:30" pos:end="479:56"><literal type="string" pos:start="479:30" pos:end="479:56">"FLV\1\0\0\0\0\011\0\0\0\0"</literal></expr></argument>, <argument pos:start="479:59" pos:end="479:70"><expr pos:start="479:59" pos:end="479:70"><name pos:start="479:59" pos:end="479:70"><name pos:start="479:59" pos:end="479:60">rt</name><operator pos:start="479:61" pos:end="479:62">-&gt;</operator><name pos:start="479:63" pos:end="479:70">flv_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="483:9" pos:end="483:77">// Read packets until we reach the first A/V packet or read metadata.</comment>

        <comment type="line" pos:start="485:9" pos:end="485:78">// If there was a metadata package in front of the A/V packets, we can</comment>

        <comment type="line" pos:start="487:9" pos:end="487:77">// build the FLV header from this. If we do not receive any metadata,</comment>

        <comment type="line" pos:start="489:9" pos:end="489:76">// the FLV decoder will allocate the needed streams when their first</comment>

        <comment type="line" pos:start="491:9" pos:end="491:41">// audio or video packet arrives.</comment>

        <while pos:start="493:9" pos:end="499:9">while <condition pos:start="493:15" pos:end="493:74">(<expr pos:start="493:16" pos:end="493:73"><operator pos:start="493:16" pos:end="493:16">!</operator><name pos:start="493:17" pos:end="493:29"><name pos:start="493:17" pos:end="493:18">rt</name><operator pos:start="493:19" pos:end="493:20">-&gt;</operator><name pos:start="493:21" pos:end="493:29">has_audio</name></name> <operator pos:start="493:31" pos:end="493:32">&amp;&amp;</operator> <operator pos:start="493:34" pos:end="493:34">!</operator><name pos:start="493:35" pos:end="493:47"><name pos:start="493:35" pos:end="493:36">rt</name><operator pos:start="493:37" pos:end="493:38">-&gt;</operator><name pos:start="493:39" pos:end="493:47">has_video</name></name> <operator pos:start="493:49" pos:end="493:50">&amp;&amp;</operator> <operator pos:start="493:52" pos:end="493:52">!</operator><name pos:start="493:53" pos:end="493:73"><name pos:start="493:53" pos:end="493:54">rt</name><operator pos:start="493:55" pos:end="493:56">-&gt;</operator><name pos:start="493:57" pos:end="493:73">received_metadata</name></name></expr>)</condition> <block pos:start="493:76" pos:end="499:9">{<block_content pos:start="495:13" pos:end="497:26">

            <if_stmt pos:start="495:13" pos:end="497:26"><if pos:start="495:13" pos:end="497:26">if <condition pos:start="495:16" pos:end="495:45">(<expr pos:start="495:17" pos:end="495:44"><operator pos:start="495:17" pos:end="495:17">(</operator><name pos:start="495:18" pos:end="495:20">ret</name> <operator pos:start="495:22" pos:end="495:22">=</operator> <call pos:start="495:24" pos:end="495:39"><name pos:start="495:24" pos:end="495:33">get_packet</name><argument_list pos:start="495:34" pos:end="495:39">(<argument pos:start="495:35" pos:end="495:35"><expr pos:start="495:35" pos:end="495:35"><name pos:start="495:35" pos:end="495:35">s</name></expr></argument>, <argument pos:start="495:38" pos:end="495:38"><expr pos:start="495:38" pos:end="495:38"><literal type="number" pos:start="495:38" pos:end="495:38">0</literal></expr></argument>)</argument_list></call><operator pos:start="495:40" pos:end="495:40">)</operator> <operator pos:start="495:42" pos:end="495:42">&lt;</operator> <literal type="number" pos:start="495:44" pos:end="495:44">0</literal></expr>)</condition><block type="pseudo" pos:start="497:16" pos:end="497:26"><block_content pos:start="497:16" pos:end="497:26">

               <return pos:start="497:16" pos:end="497:26">return <expr pos:start="497:23" pos:end="497:25"><name pos:start="497:23" pos:end="497:25">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></while>



        <comment type="line" pos:start="503:9" pos:end="503:75">// Either after we have read the metadata or (if there is none) the</comment>

        <comment type="line" pos:start="505:9" pos:end="505:78">// first packet of an A/V stream, we have a better knowledge about the</comment>

        <comment type="line" pos:start="507:9" pos:end="507:54">// streams, so set the FLV header accordingly.</comment>

        <if_stmt pos:start="509:9" pos:end="513:9"><if pos:start="509:9" pos:end="513:9">if <condition pos:start="509:12" pos:end="509:26">(<expr pos:start="509:13" pos:end="509:25"><name pos:start="509:13" pos:end="509:25"><name pos:start="509:13" pos:end="509:14">rt</name><operator pos:start="509:15" pos:end="509:16">-&gt;</operator><name pos:start="509:17" pos:end="509:25">has_audio</name></name></expr>)</condition> <block pos:start="509:28" pos:end="513:9">{<block_content pos:start="511:13" pos:end="511:56">

            <expr_stmt pos:start="511:13" pos:end="511:56"><expr pos:start="511:13" pos:end="511:55"><name pos:start="511:13" pos:end="511:27"><name pos:start="511:13" pos:end="511:14">rt</name><operator pos:start="511:15" pos:end="511:16">-&gt;</operator><name pos:start="511:17" pos:end="511:24">flv_data</name><index pos:start="511:25" pos:end="511:27">[<expr pos:start="511:26" pos:end="511:26"><literal type="number" pos:start="511:26" pos:end="511:26">4</literal></expr>]</index></name> <operator pos:start="511:29" pos:end="511:30">|=</operator> <name pos:start="511:32" pos:end="511:55">FLV_HEADER_FLAG_HASAUDIO</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="515:9" pos:end="519:9"><if pos:start="515:9" pos:end="519:9">if <condition pos:start="515:12" pos:end="515:26">(<expr pos:start="515:13" pos:end="515:25"><name pos:start="515:13" pos:end="515:25"><name pos:start="515:13" pos:end="515:14">rt</name><operator pos:start="515:15" pos:end="515:16">-&gt;</operator><name pos:start="515:17" pos:end="515:25">has_video</name></name></expr>)</condition> <block pos:start="515:28" pos:end="519:9">{<block_content pos:start="517:13" pos:end="517:56">

            <expr_stmt pos:start="517:13" pos:end="517:56"><expr pos:start="517:13" pos:end="517:55"><name pos:start="517:13" pos:end="517:27"><name pos:start="517:13" pos:end="517:14">rt</name><operator pos:start="517:15" pos:end="517:16">-&gt;</operator><name pos:start="517:17" pos:end="517:24">flv_data</name><index pos:start="517:25" pos:end="517:27">[<expr pos:start="517:26" pos:end="517:26"><literal type="number" pos:start="517:26" pos:end="517:26">4</literal></expr>]</index></name> <operator pos:start="517:29" pos:end="517:30">|=</operator> <name pos:start="517:32" pos:end="517:55">FLV_HEADER_FLAG_HASVIDEO</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="521:7" pos:end="531:5">else <block pos:start="521:12" pos:end="531:5">{<block_content pos:start="523:9" pos:end="529:28">

        <expr_stmt pos:start="523:9" pos:end="523:25"><expr pos:start="523:9" pos:end="523:24"><name pos:start="523:9" pos:end="523:20"><name pos:start="523:9" pos:end="523:10">rt</name><operator pos:start="523:11" pos:end="523:12">-&gt;</operator><name pos:start="523:13" pos:end="523:20">flv_size</name></name> <operator pos:start="523:22" pos:end="523:22">=</operator> <literal type="number" pos:start="523:24" pos:end="523:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="525:9" pos:end="525:28"><expr pos:start="525:9" pos:end="525:27"><name pos:start="525:9" pos:end="525:20"><name pos:start="525:9" pos:end="525:10">rt</name><operator pos:start="525:11" pos:end="525:12">-&gt;</operator><name pos:start="525:13" pos:end="525:20">flv_data</name></name> <operator pos:start="525:22" pos:end="525:22">=</operator> <name pos:start="525:24" pos:end="525:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="527:9" pos:end="527:25"><expr pos:start="527:9" pos:end="527:24"><name pos:start="527:9" pos:end="527:19"><name pos:start="527:9" pos:end="527:10">rt</name><operator pos:start="527:11" pos:end="527:12">-&gt;</operator><name pos:start="527:13" pos:end="527:19">flv_off</name></name>  <operator pos:start="527:22" pos:end="527:22">=</operator> <literal type="number" pos:start="527:24" pos:end="527:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="529:9" pos:end="529:28"><expr pos:start="529:9" pos:end="529:27"><name pos:start="529:9" pos:end="529:22"><name pos:start="529:9" pos:end="529:10">rt</name><operator pos:start="529:11" pos:end="529:12">-&gt;</operator><name pos:start="529:13" pos:end="529:22">skip_bytes</name></name> <operator pos:start="529:24" pos:end="529:24">=</operator> <literal type="number" pos:start="529:26" pos:end="529:27">13</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="535:5" pos:end="535:53"><expr pos:start="535:5" pos:end="535:52"><name pos:start="535:5" pos:end="535:22"><name pos:start="535:5" pos:end="535:5">s</name><operator pos:start="535:6" pos:end="535:7">-&gt;</operator><name pos:start="535:8" pos:end="535:22">max_packet_size</name></name> <operator pos:start="535:24" pos:end="535:24">=</operator> <name pos:start="535:26" pos:end="535:52"><name pos:start="535:26" pos:end="535:27">rt</name><operator pos:start="535:28" pos:end="535:29">-&gt;</operator><name pos:start="535:30" pos:end="535:35">stream</name><operator pos:start="535:36" pos:end="535:37">-&gt;</operator><name pos:start="535:38" pos:end="535:52">max_packet_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="537:5" pos:end="537:27"><expr pos:start="537:5" pos:end="537:26"><name pos:start="537:5" pos:end="537:18"><name pos:start="537:5" pos:end="537:5">s</name><operator pos:start="537:6" pos:end="537:7">-&gt;</operator><name pos:start="537:8" pos:end="537:18">is_streamed</name></name>     <operator pos:start="537:24" pos:end="537:24">=</operator> <literal type="number" pos:start="537:26" pos:end="537:26">1</literal></expr>;</expr_stmt>

    <return pos:start="539:5" pos:end="539:13">return <expr pos:start="539:12" pos:end="539:12"><literal type="number" pos:start="539:12" pos:end="539:12">0</literal></expr>;</return>



<label pos:start="543:1" pos:end="543:5"><name pos:start="543:1" pos:end="543:4">fail</name>:</label>

    <expr_stmt pos:start="545:5" pos:end="545:24"><expr pos:start="545:5" pos:end="545:23"><call pos:start="545:5" pos:end="545:23"><name pos:start="545:5" pos:end="545:16">av_dict_free</name><argument_list pos:start="545:17" pos:end="545:23">(<argument pos:start="545:18" pos:end="545:22"><expr pos:start="545:18" pos:end="545:22"><operator pos:start="545:18" pos:end="545:18">&amp;</operator><name pos:start="545:19" pos:end="545:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="547:5" pos:end="547:18"><expr pos:start="547:5" pos:end="547:17"><call pos:start="547:5" pos:end="547:17"><name pos:start="547:5" pos:end="547:14">rtmp_close</name><argument_list pos:start="547:15" pos:end="547:17">(<argument pos:start="547:16" pos:end="547:16"><expr pos:start="547:16" pos:end="547:16"><name pos:start="547:16" pos:end="547:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="549:5" pos:end="549:15">return <expr pos:start="549:12" pos:end="549:14"><name pos:start="549:12" pos:end="549:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
