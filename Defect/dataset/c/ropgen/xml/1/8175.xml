<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8175.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">test_submit_aio</name><parameter_list pos:start="1:28" pos:end="1:33">(<parameter pos:start="1:29" pos:end="1:32"><decl pos:start="1:29" pos:end="1:32"><type pos:start="1:29" pos:end="1:32"><name pos:start="1:29" pos:end="1:32">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:37">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:18">WorkerTestData</name></type> <name pos:start="5:20" pos:end="5:23">data</name> <init pos:start="5:25" pos:end="5:57">= <expr pos:start="5:27" pos:end="5:57"><block pos:start="5:27" pos:end="5:57">{ <expr pos:start="5:29" pos:end="5:34"><operator pos:start="5:29" pos:end="5:29">.</operator><name pos:start="5:30" pos:end="5:30">n</name> <operator pos:start="5:32" pos:end="5:32">=</operator> <literal type="number" pos:start="5:34" pos:end="5:34">0</literal></expr>, <expr pos:start="5:37" pos:end="5:55"><operator pos:start="5:37" pos:end="5:37">.</operator><name pos:start="5:38" pos:end="5:40">ret</name> <operator pos:start="5:42" pos:end="5:42">=</operator> <operator pos:start="5:44" pos:end="5:44">-</operator><name pos:start="5:45" pos:end="5:55">EINPROGRESS</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="9:56"><expr pos:start="7:5" pos:end="9:55"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:8">data</name><operator pos:start="7:9" pos:end="7:9">.</operator><name pos:start="7:10" pos:end="7:14">aiocb</name></name> <operator pos:start="7:16" pos:end="7:16">=</operator> <call pos:start="7:18" pos:end="9:55"><name pos:start="7:18" pos:end="7:39">thread_pool_submit_aio</name><argument_list pos:start="7:40" pos:end="9:55">(<argument pos:start="7:41" pos:end="7:44"><expr pos:start="7:41" pos:end="7:44"><name pos:start="7:41" pos:end="7:44">pool</name></expr></argument>, <argument pos:start="7:47" pos:end="7:55"><expr pos:start="7:47" pos:end="7:55"><name pos:start="7:47" pos:end="7:55">worker_cb</name></expr></argument>, <argument pos:start="7:58" pos:end="7:62"><expr pos:start="7:58" pos:end="7:62"><operator pos:start="7:58" pos:end="7:58">&amp;</operator><name pos:start="7:59" pos:end="7:62">data</name></expr></argument>,

                                        <argument pos:start="9:41" pos:end="9:47"><expr pos:start="9:41" pos:end="9:47"><name pos:start="9:41" pos:end="9:47">done_cb</name></expr></argument>, <argument pos:start="9:50" pos:end="9:54"><expr pos:start="9:50" pos:end="9:54"><operator pos:start="9:50" pos:end="9:50">&amp;</operator><name pos:start="9:51" pos:end="9:54">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:67">/* The callbacks are not called until after the first wait.  */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:15"><expr pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:10">active</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><call pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:19">g_assert_cmpint</name><argument_list pos:start="17:20" pos:end="17:47">(<argument pos:start="17:21" pos:end="17:28"><expr pos:start="17:21" pos:end="17:28"><name pos:start="17:21" pos:end="17:28"><name pos:start="17:21" pos:end="17:24">data</name><operator pos:start="17:25" pos:end="17:25">.</operator><name pos:start="17:26" pos:end="17:28">ret</name></name></expr></argument>, <argument pos:start="17:31" pos:end="17:32"><expr pos:start="17:31" pos:end="17:32"><operator pos:start="17:31" pos:end="17:32">==</operator></expr></argument>, <argument pos:start="17:35" pos:end="17:46"><expr pos:start="17:35" pos:end="17:46"><operator pos:start="17:35" pos:end="17:35">-</operator><name pos:start="17:36" pos:end="17:46">EINPROGRESS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><call pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:21">qemu_aio_wait_all</name><argument_list pos:start="19:22" pos:end="19:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><call pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:19">g_assert_cmpint</name><argument_list pos:start="21:20" pos:end="21:34">(<argument pos:start="21:21" pos:end="21:26"><expr pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:26">active</name></expr></argument>, <argument pos:start="21:29" pos:end="21:30"><expr pos:start="21:29" pos:end="21:30"><operator pos:start="21:29" pos:end="21:30">==</operator></expr></argument>, <argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><literal type="number" pos:start="21:33" pos:end="21:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><call pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:19">g_assert_cmpint</name><argument_list pos:start="23:20" pos:end="23:34">(<argument pos:start="23:21" pos:end="23:26"><expr pos:start="23:21" pos:end="23:26"><name pos:start="23:21" pos:end="23:26"><name pos:start="23:21" pos:end="23:24">data</name><operator pos:start="23:25" pos:end="23:25">.</operator><name pos:start="23:26" pos:end="23:26">n</name></name></expr></argument>, <argument pos:start="23:29" pos:end="23:30"><expr pos:start="23:29" pos:end="23:30"><operator pos:start="23:29" pos:end="23:30">==</operator></expr></argument>, <argument pos:start="23:33" pos:end="23:33"><expr pos:start="23:33" pos:end="23:33"><literal type="number" pos:start="23:33" pos:end="23:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><call pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:19">g_assert_cmpint</name><argument_list pos:start="25:20" pos:end="25:36">(<argument pos:start="25:21" pos:end="25:28"><expr pos:start="25:21" pos:end="25:28"><name pos:start="25:21" pos:end="25:28"><name pos:start="25:21" pos:end="25:24">data</name><operator pos:start="25:25" pos:end="25:25">.</operator><name pos:start="25:26" pos:end="25:28">ret</name></name></expr></argument>, <argument pos:start="25:31" pos:end="25:32"><expr pos:start="25:31" pos:end="25:32"><operator pos:start="25:31" pos:end="25:32">==</operator></expr></argument>, <argument pos:start="25:35" pos:end="25:35"><expr pos:start="25:35" pos:end="25:35"><literal type="number" pos:start="25:35" pos:end="25:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
