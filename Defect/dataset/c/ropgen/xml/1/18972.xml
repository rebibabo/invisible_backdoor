<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18972.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:32">ff_mp4_read_dec_config_descr</name><parameter_list pos:start="1:33" pos:end="1:84">(<parameter pos:start="1:34" pos:end="1:52"><decl pos:start="1:34" pos:end="1:52"><type pos:start="1:34" pos:end="1:52"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">fc</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:62">AVStream</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:66">st</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:83"><decl pos:start="1:69" pos:end="1:83"><type pos:start="1:69" pos:end="1:83"><name pos:start="1:69" pos:end="1:79">AVIOContext</name> <modifier pos:start="1:81" pos:end="1:81">*</modifier></type><name pos:start="1:82" pos:end="1:83">pb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">len</name></decl>, <decl pos:start="5:14" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:16">tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:22">object_type_id</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><call pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:32">avio_r8</name><argument_list pos:start="7:33" pos:end="7:36">(<argument pos:start="7:34" pos:end="7:35"><expr pos:start="7:34" pos:end="7:35"><name pos:start="7:34" pos:end="7:35">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:16"><expr pos:start="9:5" pos:end="9:15"><call pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:11">avio_r8</name><argument_list pos:start="9:12" pos:end="9:15">(<argument pos:start="9:13" pos:end="9:14"><expr pos:start="9:13" pos:end="9:14"><name pos:start="9:13" pos:end="9:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="9:18" pos:end="9:34">/* stream type */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:18"><expr pos:start="11:5" pos:end="11:17"><call pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:13">avio_rb24</name><argument_list pos:start="11:14" pos:end="11:17">(<argument pos:start="11:15" pos:end="11:16"><expr pos:start="11:15" pos:end="11:16"><name pos:start="11:15" pos:end="11:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="11:20" pos:end="11:39">/* buffer size db */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:18"><expr pos:start="13:5" pos:end="13:17"><call pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:13">avio_rb32</name><argument_list pos:start="13:14" pos:end="13:17">(<argument pos:start="13:15" pos:end="13:16"><expr pos:start="13:15" pos:end="13:16"><name pos:start="13:15" pos:end="13:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="13:20" pos:end="13:36">/* max bitrate */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:18"><expr pos:start="15:5" pos:end="15:17"><call pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:13">avio_rb32</name><argument_list pos:start="15:14" pos:end="15:17">(<argument pos:start="15:15" pos:end="15:16"><expr pos:start="15:15" pos:end="15:16"><name pos:start="15:15" pos:end="15:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="15:20" pos:end="15:36">/* avg bitrate */</comment>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if<condition pos:start="19:7" pos:end="19:34">(<expr pos:start="19:8" pos:end="19:33"><call pos:start="19:8" pos:end="19:33"><name pos:start="19:8" pos:end="19:22">avcodec_is_open</name><argument_list pos:start="19:23" pos:end="19:33">(<argument pos:start="19:24" pos:end="19:32"><expr pos:start="19:24" pos:end="19:32"><name pos:start="19:24" pos:end="19:32"><name pos:start="19:24" pos:end="19:25">st</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:32">codec</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:36" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:74"><expr pos:start="21:9" pos:end="21:73"><call pos:start="21:9" pos:end="21:73"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:73">(<argument pos:start="21:16" pos:end="21:17"><expr pos:start="21:16" pos:end="21:17"><name pos:start="21:16" pos:end="21:17">fc</name></expr></argument>, <argument pos:start="21:20" pos:end="21:31"><expr pos:start="21:20" pos:end="21:31"><name pos:start="21:20" pos:end="21:31">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="21:34" pos:end="21:72"><expr pos:start="21:34" pos:end="21:72"><literal type="string" pos:start="21:34" pos:end="21:72">"codec open in read_dec_config_descr\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:74"><expr pos:start="29:5" pos:end="29:73"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:6">st</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:13">codec</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:23">codec_id</name></name><operator pos:start="29:24" pos:end="29:24">=</operator> <call pos:start="29:26" pos:end="29:73"><name pos:start="29:26" pos:end="29:40">ff_codec_get_id</name><argument_list pos:start="29:41" pos:end="29:73">(<argument pos:start="29:42" pos:end="29:56"><expr pos:start="29:42" pos:end="29:56"><name pos:start="29:42" pos:end="29:56">ff_mp4_obj_type</name></expr></argument>, <argument pos:start="29:59" pos:end="29:72"><expr pos:start="29:59" pos:end="29:72"><name pos:start="29:59" pos:end="29:72">object_type_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:64"><expr pos:start="31:5" pos:end="31:63"><call pos:start="31:5" pos:end="31:63"><name pos:start="31:5" pos:end="31:11">av_dlog</name><argument_list pos:start="31:12" pos:end="31:63">(<argument pos:start="31:13" pos:end="31:14"><expr pos:start="31:13" pos:end="31:14"><name pos:start="31:13" pos:end="31:14">fc</name></expr></argument>, <argument pos:start="31:17" pos:end="31:46"><expr pos:start="31:17" pos:end="31:46"><literal type="string" pos:start="31:17" pos:end="31:46">"esds object type id 0x%02x\n"</literal></expr></argument>, <argument pos:start="31:49" pos:end="31:62"><expr pos:start="31:49" pos:end="31:62"><name pos:start="31:49" pos:end="31:62">object_type_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:7">len</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:41"><name pos:start="33:11" pos:end="33:27">ff_mp4_read_descr</name><argument_list pos:start="33:28" pos:end="33:41">(<argument pos:start="33:29" pos:end="33:30"><expr pos:start="33:29" pos:end="33:30"><name pos:start="33:29" pos:end="33:30">fc</name></expr></argument>, <argument pos:start="33:33" pos:end="33:34"><expr pos:start="33:33" pos:end="33:34"><name pos:start="33:33" pos:end="33:34">pb</name></expr></argument>, <argument pos:start="33:37" pos:end="33:40"><expr pos:start="33:37" pos:end="33:40"><operator pos:start="33:37" pos:end="33:37">&amp;</operator><name pos:start="33:38" pos:end="33:40">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="89:5"><if pos:start="35:5" pos:end="89:5">if <condition pos:start="35:8" pos:end="35:38">(<expr pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:11">tag</name> <operator pos:start="35:13" pos:end="35:14">==</operator> <name pos:start="35:16" pos:end="35:37">MP4DecSpecificDescrTag</name></expr>)</condition> <block pos:start="35:40" pos:end="89:5">{<block_content pos:start="37:9" pos:end="87:9">

        <expr_stmt pos:start="37:9" pos:end="37:59"><expr pos:start="37:9" pos:end="37:58"><call pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:15">av_dlog</name><argument_list pos:start="37:16" pos:end="37:58">(<argument pos:start="37:17" pos:end="37:18"><expr pos:start="37:17" pos:end="37:18"><name pos:start="37:17" pos:end="37:18">fc</name></expr></argument>, <argument pos:start="37:21" pos:end="37:52"><expr pos:start="37:21" pos:end="37:52"><literal type="string" pos:start="37:21" pos:end="37:52">"Specific MPEG4 header len=%d\n"</literal></expr></argument>, <argument pos:start="37:55" pos:end="37:57"><expr pos:start="37:55" pos:end="37:57"><name pos:start="37:55" pos:end="37:57">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:22"><if pos:start="39:9" pos:end="41:22">if <condition pos:start="39:12" pos:end="39:44">(<expr pos:start="39:13" pos:end="39:43"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:16">len</name> <operator pos:start="39:18" pos:end="39:19">||</operator> <operator pos:start="39:21" pos:end="39:21">(</operator><name pos:start="39:22" pos:end="39:29">uint64_t</name><operator pos:start="39:30" pos:end="39:30">)</operator><name pos:start="39:31" pos:end="39:33">len</name> <operator pos:start="39:35" pos:end="39:35">&gt;</operator> <operator pos:start="39:37" pos:end="39:37">(</operator><literal type="number" pos:start="39:38" pos:end="39:38">1</literal><operator pos:start="39:39" pos:end="39:40">&lt;&lt;</operator><literal type="number" pos:start="39:41" pos:end="39:42">30</literal><operator pos:start="39:43" pos:end="39:43">)</operator></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:22"><block_content pos:start="41:13" pos:end="41:22">

            <return pos:start="41:13" pos:end="41:22">return <expr pos:start="41:20" pos:end="41:21"><operator pos:start="41:20" pos:end="41:20">-</operator><literal type="number" pos:start="41:21" pos:end="41:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:38"><expr pos:start="43:9" pos:end="43:37"><call pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:15">av_free</name><argument_list pos:start="43:16" pos:end="43:37">(<argument pos:start="43:17" pos:end="43:36"><expr pos:start="43:17" pos:end="43:36"><name pos:start="43:17" pos:end="43:36"><name pos:start="43:17" pos:end="43:18">st</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:25">codec</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:36">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:35"><if pos:start="45:9" pos:end="47:35">if <condition pos:start="45:12" pos:end="45:47">(<expr pos:start="45:13" pos:end="45:46"><call pos:start="45:13" pos:end="45:46"><name pos:start="45:13" pos:end="45:30">ff_alloc_extradata</name><argument_list pos:start="45:31" pos:end="45:46">(<argument pos:start="45:32" pos:end="45:40"><expr pos:start="45:32" pos:end="45:40"><name pos:start="45:32" pos:end="45:40"><name pos:start="45:32" pos:end="45:33">st</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:40">codec</name></name></expr></argument>, <argument pos:start="45:43" pos:end="45:45"><expr pos:start="45:43" pos:end="45:45"><name pos:start="45:43" pos:end="45:45">len</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:35"><block_content pos:start="47:13" pos:end="47:35">

            <return pos:start="47:13" pos:end="47:35">return <expr pos:start="47:20" pos:end="47:34"><call pos:start="47:20" pos:end="47:34"><name pos:start="47:20" pos:end="47:26">AVERROR</name><argument_list pos:start="47:27" pos:end="47:34">(<argument pos:start="47:28" pos:end="47:33"><expr pos:start="47:28" pos:end="47:33"><name pos:start="47:28" pos:end="47:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:49"><expr pos:start="49:9" pos:end="49:48"><call pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:17">avio_read</name><argument_list pos:start="49:18" pos:end="49:48">(<argument pos:start="49:19" pos:end="49:20"><expr pos:start="49:19" pos:end="49:20"><name pos:start="49:19" pos:end="49:20">pb</name></expr></argument>, <argument pos:start="49:23" pos:end="49:42"><expr pos:start="49:23" pos:end="49:42"><name pos:start="49:23" pos:end="49:42"><name pos:start="49:23" pos:end="49:24">st</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:31">codec</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:42">extradata</name></name></expr></argument>, <argument pos:start="49:45" pos:end="49:47"><expr pos:start="49:45" pos:end="49:47"><name pos:start="49:45" pos:end="49:47">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="87:9"><if pos:start="51:9" pos:end="87:9">if <condition pos:start="51:12" pos:end="51:51">(<expr pos:start="51:13" pos:end="51:50"><name pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:14">st</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:21">codec</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:31">codec_id</name></name> <operator pos:start="51:33" pos:end="51:34">==</operator> <name pos:start="51:36" pos:end="51:50">AV_CODEC_ID_AAC</name></expr>)</condition> <block pos:start="51:53" pos:end="87:9">{<block_content pos:start="53:13" pos:end="85:54">

            <decl_stmt pos:start="53:13" pos:end="53:39"><decl pos:start="53:13" pos:end="53:38"><type pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:28">MPEG4AudioConfig</name></type> <name pos:start="53:30" pos:end="53:32">cfg</name> <init pos:start="53:34" pos:end="53:38">= <expr pos:start="53:36" pos:end="53:38"><block pos:start="53:36" pos:end="53:38">{<expr pos:start="53:37" pos:end="53:37"><literal type="number" pos:start="53:37" pos:end="53:37">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="55:13" pos:end="57:75"><expr pos:start="55:13" pos:end="57:74"><call pos:start="55:13" pos:end="57:74"><name pos:start="55:13" pos:end="55:40">avpriv_mpeg4audio_get_config</name><argument_list pos:start="55:41" pos:end="57:74">(<argument pos:start="55:42" pos:end="55:45"><expr pos:start="55:42" pos:end="55:45"><operator pos:start="55:42" pos:end="55:42">&amp;</operator><name pos:start="55:43" pos:end="55:45">cfg</name></expr></argument>, <argument pos:start="55:48" pos:end="55:67"><expr pos:start="55:48" pos:end="55:67"><name pos:start="55:48" pos:end="55:67"><name pos:start="55:48" pos:end="55:49">st</name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:56">codec</name><operator pos:start="55:57" pos:end="55:58">-&gt;</operator><name pos:start="55:59" pos:end="55:67">extradata</name></name></expr></argument>,

                                         <argument pos:start="57:42" pos:end="57:70"><expr pos:start="57:42" pos:end="57:70"><name pos:start="57:42" pos:end="57:66"><name pos:start="57:42" pos:end="57:43">st</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:50">codec</name><operator pos:start="57:51" pos:end="57:52">-&gt;</operator><name pos:start="57:53" pos:end="57:66">extradata_size</name></name> <operator pos:start="57:68" pos:end="57:68">*</operator> <literal type="number" pos:start="57:70" pos:end="57:70">8</literal></expr></argument>, <argument pos:start="57:73" pos:end="57:73"><expr pos:start="57:73" pos:end="57:73"><literal type="number" pos:start="57:73" pos:end="57:73">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:47"><expr pos:start="59:13" pos:end="59:46"><name pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:14">st</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:21">codec</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:31">channels</name></name> <operator pos:start="59:33" pos:end="59:33">=</operator> <name pos:start="59:35" pos:end="59:46"><name pos:start="59:35" pos:end="59:37">cfg</name><operator pos:start="59:38" pos:end="59:38">.</operator><name pos:start="59:39" pos:end="59:46">channels</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="71:57"><if pos:start="61:13" pos:end="63:81">if <condition pos:start="61:16" pos:end="61:64">(<expr pos:start="61:17" pos:end="61:63"><name pos:start="61:17" pos:end="61:31"><name pos:start="61:17" pos:end="61:19">cfg</name><operator pos:start="61:20" pos:end="61:20">.</operator><name pos:start="61:21" pos:end="61:31">object_type</name></name> <operator pos:start="61:33" pos:end="61:34">==</operator> <literal type="number" pos:start="61:36" pos:end="61:37">29</literal> <operator pos:start="61:39" pos:end="61:40">&amp;&amp;</operator> <name pos:start="61:42" pos:end="61:59"><name pos:start="61:42" pos:end="61:44">cfg</name><operator pos:start="61:45" pos:end="61:45">.</operator><name pos:start="61:46" pos:end="61:59">sampling_index</name></name> <operator pos:start="61:61" pos:end="61:61">&lt;</operator> <literal type="number" pos:start="61:63" pos:end="61:63">3</literal></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:81"><block_content pos:start="63:17" pos:end="63:81"> <comment type="line" pos:start="61:66" pos:end="61:78">// old mp3on4</comment>

                <expr_stmt pos:start="63:17" pos:end="63:81"><expr pos:start="63:17" pos:end="63:80"><name pos:start="63:17" pos:end="63:38"><name pos:start="63:17" pos:end="63:18">st</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:25">codec</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:38">sample_rate</name></name> <operator pos:start="63:40" pos:end="63:40">=</operator> <name pos:start="63:42" pos:end="63:80"><name pos:start="63:42" pos:end="63:60">avpriv_mpa_freq_tab</name><index pos:start="63:61" pos:end="63:80">[<expr pos:start="63:62" pos:end="63:79"><name pos:start="63:62" pos:end="63:79"><name pos:start="63:62" pos:end="63:64">cfg</name><operator pos:start="63:65" pos:end="63:65">.</operator><name pos:start="63:66" pos:end="63:79">sampling_index</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="65:13" pos:end="67:61">else if <condition pos:start="65:21" pos:end="65:41">(<expr pos:start="65:22" pos:end="65:40"><name pos:start="65:22" pos:end="65:40"><name pos:start="65:22" pos:end="65:24">cfg</name><operator pos:start="65:25" pos:end="65:25">.</operator><name pos:start="65:26" pos:end="65:40">ext_sample_rate</name></name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:61"><block_content pos:start="67:17" pos:end="67:61">

                <expr_stmt pos:start="67:17" pos:end="67:61"><expr pos:start="67:17" pos:end="67:60"><name pos:start="67:17" pos:end="67:38"><name pos:start="67:17" pos:end="67:18">st</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:25">codec</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:38">sample_rate</name></name> <operator pos:start="67:40" pos:end="67:40">=</operator> <name pos:start="67:42" pos:end="67:60"><name pos:start="67:42" pos:end="67:44">cfg</name><operator pos:start="67:45" pos:end="67:45">.</operator><name pos:start="67:46" pos:end="67:60">ext_sample_rate</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="69:13" pos:end="71:57">else<block type="pseudo" pos:start="71:17" pos:end="71:57"><block_content pos:start="71:17" pos:end="71:57">

                <expr_stmt pos:start="71:17" pos:end="71:57"><expr pos:start="71:17" pos:end="71:56"><name pos:start="71:17" pos:end="71:38"><name pos:start="71:17" pos:end="71:18">st</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:25">codec</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:38">sample_rate</name></name> <operator pos:start="71:40" pos:end="71:40">=</operator> <name pos:start="71:42" pos:end="71:56"><name pos:start="71:42" pos:end="71:44">cfg</name><operator pos:start="71:45" pos:end="71:45">.</operator><name pos:start="71:46" pos:end="71:56">sample_rate</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="73:13" pos:end="79:58"><expr pos:start="73:13" pos:end="79:57"><call pos:start="73:13" pos:end="79:57"><name pos:start="73:13" pos:end="73:19">av_dlog</name><argument_list pos:start="73:20" pos:end="79:57">(<argument pos:start="73:21" pos:end="73:22"><expr pos:start="73:21" pos:end="73:22"><name pos:start="73:21" pos:end="73:22">fc</name></expr></argument>, <argument pos:start="73:25" pos:end="75:57"><expr pos:start="73:25" pos:end="75:57"><literal type="string" pos:start="73:25" pos:end="73:68">"mp4a config channels %d obj %d ext obj %d "</literal>

                    <literal type="string" pos:start="75:21" pos:end="75:57">"sample rate %d ext sample rate %d\n"</literal></expr></argument>, <argument pos:start="75:60" pos:end="75:78"><expr pos:start="75:60" pos:end="75:78"><name pos:start="75:60" pos:end="75:78"><name pos:start="75:60" pos:end="75:61">st</name><operator pos:start="75:62" pos:end="75:63">-&gt;</operator><name pos:start="75:64" pos:end="75:68">codec</name><operator pos:start="75:69" pos:end="75:70">-&gt;</operator><name pos:start="75:71" pos:end="75:78">channels</name></name></expr></argument>,

                    <argument pos:start="77:21" pos:end="77:35"><expr pos:start="77:21" pos:end="77:35"><name pos:start="77:21" pos:end="77:35"><name pos:start="77:21" pos:end="77:23">cfg</name><operator pos:start="77:24" pos:end="77:24">.</operator><name pos:start="77:25" pos:end="77:35">object_type</name></name></expr></argument>, <argument pos:start="77:38" pos:end="77:56"><expr pos:start="77:38" pos:end="77:56"><name pos:start="77:38" pos:end="77:56"><name pos:start="77:38" pos:end="77:40">cfg</name><operator pos:start="77:41" pos:end="77:41">.</operator><name pos:start="77:42" pos:end="77:56">ext_object_type</name></name></expr></argument>,

                    <argument pos:start="79:21" pos:end="79:35"><expr pos:start="79:21" pos:end="79:35"><name pos:start="79:21" pos:end="79:35"><name pos:start="79:21" pos:end="79:23">cfg</name><operator pos:start="79:24" pos:end="79:24">.</operator><name pos:start="79:25" pos:end="79:35">sample_rate</name></name></expr></argument>, <argument pos:start="79:38" pos:end="79:56"><expr pos:start="79:38" pos:end="79:56"><name pos:start="79:38" pos:end="79:56"><name pos:start="79:38" pos:end="79:40">cfg</name><operator pos:start="79:41" pos:end="79:41">.</operator><name pos:start="79:42" pos:end="79:56">ext_sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="85:54"><if pos:start="81:13" pos:end="85:54">if <condition pos:start="81:16" pos:end="83:74">(<expr pos:start="81:17" pos:end="83:73"><operator pos:start="81:17" pos:end="81:17">!</operator><operator pos:start="81:18" pos:end="81:18">(</operator><name pos:start="81:19" pos:end="81:37"><name pos:start="81:19" pos:end="81:20">st</name><operator pos:start="81:21" pos:end="81:22">-&gt;</operator><name pos:start="81:23" pos:end="81:27">codec</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:37">codec_id</name></name> <operator pos:start="81:39" pos:end="81:39">=</operator> <call pos:start="81:41" pos:end="83:72"><name pos:start="81:41" pos:end="81:55">ff_codec_get_id</name><argument_list pos:start="81:56" pos:end="83:72">(<argument pos:start="81:57" pos:end="81:71"><expr pos:start="81:57" pos:end="81:71"><name pos:start="81:57" pos:end="81:71">mp4_audio_types</name></expr></argument>,

                                                        <argument pos:start="83:57" pos:end="83:71"><expr pos:start="83:57" pos:end="83:71"><name pos:start="83:57" pos:end="83:71"><name pos:start="83:57" pos:end="83:59">cfg</name><operator pos:start="83:60" pos:end="83:60">.</operator><name pos:start="83:61" pos:end="83:71">object_type</name></name></expr></argument>)</argument_list></call><operator pos:start="83:73" pos:end="83:73">)</operator></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:54"><block_content pos:start="85:17" pos:end="85:54">

                <expr_stmt pos:start="85:17" pos:end="85:54"><expr pos:start="85:17" pos:end="85:53"><name pos:start="85:17" pos:end="85:35"><name pos:start="85:17" pos:end="85:18">st</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:25">codec</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:35">codec_id</name></name> <operator pos:start="85:37" pos:end="85:37">=</operator> <name pos:start="85:39" pos:end="85:53">AV_CODEC_ID_AAC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
