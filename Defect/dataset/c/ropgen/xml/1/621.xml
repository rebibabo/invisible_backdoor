<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/621.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">read_password</name><parameter_list pos:start="1:25" pos:end="1:49">(<parameter pos:start="1:26" pos:end="1:34"><decl pos:start="1:26" pos:end="1:34"><type pos:start="1:26" pos:end="1:34"><name pos:start="1:26" pos:end="1:29">char</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">buf</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:48">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">c</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">i</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:25"><expr pos:start="7:5" pos:end="7:24"><call pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:10">printf</name><argument_list pos:start="7:11" pos:end="7:24">(<argument pos:start="7:12" pos:end="7:23"><expr pos:start="7:12" pos:end="7:23"><literal type="string" pos:start="7:12" pos:end="7:23">"Password: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:19"><expr pos:start="9:5" pos:end="9:18"><call pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:10">fflush</name><argument_list pos:start="9:11" pos:end="9:18">(<argument pos:start="9:12" pos:end="9:17"><expr pos:start="9:12" pos:end="9:17"><name pos:start="9:12" pos:end="9:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:10"><expr pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:5">i</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <literal type="number" pos:start="11:9" pos:end="11:9">0</literal></expr>;</expr_stmt>

    <for pos:start="13:5" pos:end="25:5">for<control pos:start="13:8" pos:end="13:11">(<init pos:start="13:9" pos:end="13:9">;</init><condition pos:start="13:10" pos:end="13:10">;</condition><incr/>)</control> <block pos:start="13:13" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:25">

        <expr_stmt pos:start="15:9" pos:end="15:22"><expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:9">c</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:19">getchar</name><argument_list pos:start="15:20" pos:end="15:21">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="19:18"><if pos:start="17:9" pos:end="19:18">if <condition pos:start="17:12" pos:end="17:22">(<expr pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:13">c</name> <operator pos:start="17:15" pos:end="17:16">==</operator> <literal type="char" pos:start="17:18" pos:end="17:21">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:18"><block_content pos:start="19:13" pos:end="19:18">

            <break pos:start="19:13" pos:end="19:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="21:9" pos:end="23:25"><if pos:start="21:9" pos:end="23:25">if <condition pos:start="21:12" pos:end="21:31">(<expr pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:13">i</name> <operator pos:start="21:15" pos:end="21:15">&lt;</operator> <operator pos:start="21:17" pos:end="21:17">(</operator><name pos:start="21:18" pos:end="21:25">buf_size</name> <operator pos:start="21:27" pos:end="21:27">-</operator> <literal type="number" pos:start="21:29" pos:end="21:29">1</literal><operator pos:start="21:30" pos:end="21:30">)</operator></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:25"><block_content pos:start="23:13" pos:end="23:25">

            <expr_stmt pos:start="23:13" pos:end="23:25"><expr pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:15">buf</name><index pos:start="23:16" pos:end="23:20">[<expr pos:start="23:17" pos:end="23:19"><name pos:start="23:17" pos:end="23:17">i</name><operator pos:start="23:18" pos:end="23:19">++</operator></expr>]</index></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:24">c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="27:5" pos:end="27:18"><expr pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:7">buf</name><index pos:start="27:8" pos:end="27:10">[<expr pos:start="27:9" pos:end="27:9"><name pos:start="27:9" pos:end="27:9">i</name></expr>]</index></name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="char" pos:start="27:14" pos:end="27:17">'\0'</literal></expr>;</expr_stmt>

    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
