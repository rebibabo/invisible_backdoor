<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/205.c" pos:tabs="8"><function pos:start="1:1" pos:end="66:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">qmp_getfd</name><parameter_list pos:start="1:15" pos:end="1:48">(<parameter pos:start="1:16" pos:end="1:33"><decl pos:start="1:16" pos:end="1:33"><type pos:start="1:16" pos:end="1:33"><specifier pos:start="1:16" pos:end="1:20">const</specifier> <name pos:start="1:22" pos:end="1:25">char</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:33">fdname</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:40">Error</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier><modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="66:1">{<block_content pos:start="5:5" pos:end="64:50">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">mon_fd_t</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:19">monfd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">fd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:45"><expr pos:start="11:5" pos:end="11:44"><name pos:start="11:5" pos:end="11:6">fd</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <call pos:start="11:10" pos:end="11:44"><name pos:start="11:10" pos:end="11:30">qemu_chr_fe_get_msgfd</name><argument_list pos:start="11:31" pos:end="11:44">(<argument pos:start="11:32" pos:end="11:43"><expr pos:start="11:32" pos:end="11:43"><name pos:start="11:32" pos:end="11:43"><name pos:start="11:32" pos:end="11:38">cur_mon</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:43">chr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:17">(<expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:10">fd</name> <operator pos:start="13:12" pos:end="13:13">==</operator> <operator pos:start="13:15" pos:end="13:15">-</operator><literal type="number" pos:start="13:16" pos:end="13:16">1</literal></expr>)</condition> <block pos:start="13:19" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:46"><expr pos:start="15:9" pos:end="15:45"><call pos:start="15:9" pos:end="15:45"><name pos:start="15:9" pos:end="15:17">error_set</name><argument_list pos:start="15:18" pos:end="15:45">(<argument pos:start="15:19" pos:end="15:22"><expr pos:start="15:19" pos:end="15:22"><name pos:start="15:19" pos:end="15:22">errp</name></expr></argument>, <argument pos:start="15:25" pos:end="15:44"><expr pos:start="15:25" pos:end="15:44"><name pos:start="15:25" pos:end="15:44">QERR_FD_NOT_SUPPLIED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="32:5"><if pos:start="23:5" pos:end="32:5">if <condition pos:start="23:8" pos:end="23:32">(<expr pos:start="23:9" pos:end="23:31"><call pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:20">qemu_isdigit</name><argument_list pos:start="23:21" pos:end="23:31">(<argument pos:start="23:22" pos:end="23:30"><expr pos:start="23:22" pos:end="23:30"><name pos:start="23:22" pos:end="23:30"><name pos:start="23:22" pos:end="23:27">fdname</name><index pos:start="23:28" pos:end="23:30">[<expr pos:start="23:29" pos:end="23:29"><literal type="number" pos:start="23:29" pos:end="23:29">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:34" pos:end="32:5">{<block_content pos:start="26:9" pos:end="30:15">


        <expr_stmt pos:start="26:9" pos:end="28:54"><expr pos:start="26:9" pos:end="28:53"><call pos:start="26:9" pos:end="28:53"><name pos:start="26:9" pos:end="26:17">error_set</name><argument_list pos:start="26:18" pos:end="28:53">(<argument pos:start="26:19" pos:end="26:22"><expr pos:start="26:19" pos:end="26:22"><name pos:start="26:19" pos:end="26:22">errp</name></expr></argument>, <argument pos:start="26:25" pos:end="26:52"><expr pos:start="26:25" pos:end="26:52"><name pos:start="26:25" pos:end="26:52">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="26:55" pos:end="26:62"><expr pos:start="26:55" pos:end="26:62"><literal type="string" pos:start="26:55" pos:end="26:62">"fdname"</literal></expr></argument>,

                  <argument pos:start="28:19" pos:end="28:52"><expr pos:start="28:19" pos:end="28:52"><literal type="string" pos:start="28:19" pos:end="28:52">"a name not starting with a digit"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="30:9" pos:end="30:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="36:5" pos:end="36:45"><name pos:start="36:5" pos:end="36:17">QLIST_FOREACH</name><argument_list pos:start="36:18" pos:end="36:45">(<argument pos:start="36:19" pos:end="36:23">monfd</argument>, <argument pos:start="36:26" pos:end="36:38">&amp;cur_mon-&gt;fds</argument>, <argument pos:start="36:41" pos:end="36:44">next</argument>)</argument_list></macro> <block pos:start="36:47" pos:end="52:5">{<block_content pos:start="38:9" pos:end="50:15">

        <if_stmt pos:start="38:9" pos:end="42:9"><if pos:start="38:9" pos:end="42:9">if <condition pos:start="38:12" pos:end="38:45">(<expr pos:start="38:13" pos:end="38:44"><call pos:start="38:13" pos:end="38:39"><name pos:start="38:13" pos:end="38:18">strcmp</name><argument_list pos:start="38:19" pos:end="38:39">(<argument pos:start="38:20" pos:end="38:30"><expr pos:start="38:20" pos:end="38:30"><name pos:start="38:20" pos:end="38:30"><name pos:start="38:20" pos:end="38:24">monfd</name><operator pos:start="38:25" pos:end="38:26">-&gt;</operator><name pos:start="38:27" pos:end="38:30">name</name></name></expr></argument>, <argument pos:start="38:33" pos:end="38:38"><expr pos:start="38:33" pos:end="38:38"><name pos:start="38:33" pos:end="38:38">fdname</name></expr></argument>)</argument_list></call> <operator pos:start="38:41" pos:end="38:42">!=</operator> <literal type="number" pos:start="38:44" pos:end="38:44">0</literal></expr>)</condition> <block pos:start="38:47" pos:end="42:9">{<block_content pos:start="40:13" pos:end="40:21">

            <continue pos:start="40:13" pos:end="40:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="46:9" pos:end="46:25"><expr pos:start="46:9" pos:end="46:24"><call pos:start="46:9" pos:end="46:24"><name pos:start="46:9" pos:end="46:13">close</name><argument_list pos:start="46:14" pos:end="46:24">(<argument pos:start="46:15" pos:end="46:23"><expr pos:start="46:15" pos:end="46:23"><name pos:start="46:15" pos:end="46:23"><name pos:start="46:15" pos:end="46:19">monfd</name><operator pos:start="46:20" pos:end="46:21">-&gt;</operator><name pos:start="46:22" pos:end="46:23">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="48:9" pos:end="48:23"><expr pos:start="48:9" pos:end="48:22"><name pos:start="48:9" pos:end="48:17"><name pos:start="48:9" pos:end="48:13">monfd</name><operator pos:start="48:14" pos:end="48:15">-&gt;</operator><name pos:start="48:16" pos:end="48:17">fd</name></name> <operator pos:start="48:19" pos:end="48:19">=</operator> <name pos:start="48:21" pos:end="48:22">fd</name></expr>;</expr_stmt>

        <return pos:start="50:9" pos:end="50:15">return;</return>

    </block_content>}</block>



    <expr_stmt pos:start="56:5" pos:end="56:40"><expr pos:start="56:5" pos:end="56:39"><name pos:start="56:5" pos:end="56:9">monfd</name> <operator pos:start="56:11" pos:end="56:11">=</operator> <call pos:start="56:13" pos:end="56:39"><name pos:start="56:13" pos:end="56:21">g_malloc0</name><argument_list pos:start="56:22" pos:end="56:39">(<argument pos:start="56:23" pos:end="56:38"><expr pos:start="56:23" pos:end="56:38"><sizeof pos:start="56:23" pos:end="56:38">sizeof<argument_list pos:start="56:29" pos:end="56:38">(<argument pos:start="56:30" pos:end="56:37"><expr pos:start="56:30" pos:end="56:37"><name pos:start="56:30" pos:end="56:37">mon_fd_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="58:5" pos:end="58:35"><expr pos:start="58:5" pos:end="58:34"><name pos:start="58:5" pos:end="58:15"><name pos:start="58:5" pos:end="58:9">monfd</name><operator pos:start="58:10" pos:end="58:11">-&gt;</operator><name pos:start="58:12" pos:end="58:15">name</name></name> <operator pos:start="58:17" pos:end="58:17">=</operator> <call pos:start="58:19" pos:end="58:34"><name pos:start="58:19" pos:end="58:26">g_strdup</name><argument_list pos:start="58:27" pos:end="58:34">(<argument pos:start="58:28" pos:end="58:33"><expr pos:start="58:28" pos:end="58:33"><name pos:start="58:28" pos:end="58:33">fdname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="60:5" pos:end="60:19"><expr pos:start="60:5" pos:end="60:18"><name pos:start="60:5" pos:end="60:13"><name pos:start="60:5" pos:end="60:9">monfd</name><operator pos:start="60:10" pos:end="60:11">-&gt;</operator><name pos:start="60:12" pos:end="60:13">fd</name></name> <operator pos:start="60:15" pos:end="60:15">=</operator> <name pos:start="60:17" pos:end="60:18">fd</name></expr>;</expr_stmt>



    <expr_stmt pos:start="64:5" pos:end="64:50"><expr pos:start="64:5" pos:end="64:49"><call pos:start="64:5" pos:end="64:49"><name pos:start="64:5" pos:end="64:21">QLIST_INSERT_HEAD</name><argument_list pos:start="64:22" pos:end="64:49">(<argument pos:start="64:23" pos:end="64:35"><expr pos:start="64:23" pos:end="64:35"><operator pos:start="64:23" pos:end="64:23">&amp;</operator><name pos:start="64:24" pos:end="64:35"><name pos:start="64:24" pos:end="64:30">cur_mon</name><operator pos:start="64:31" pos:end="64:32">-&gt;</operator><name pos:start="64:33" pos:end="64:35">fds</name></name></expr></argument>, <argument pos:start="64:38" pos:end="64:42"><expr pos:start="64:38" pos:end="64:42"><name pos:start="64:38" pos:end="64:42">monfd</name></expr></argument>, <argument pos:start="64:45" pos:end="64:48"><expr pos:start="64:45" pos:end="64:48"><name pos:start="64:45" pos:end="64:48">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
