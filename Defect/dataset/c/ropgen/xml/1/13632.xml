<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13632.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">decode_info_header</name><parameter_list pos:start="1:30" pos:end="1:46">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:40">NUTContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">nut</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="179:1">{<block_content pos:start="5:5" pos:end="177:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFormatContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:33">= <expr pos:start="5:26" pos:end="5:33"><name pos:start="5:26" pos:end="5:33"><name pos:start="5:26" pos:end="5:28">nut</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:33">avf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">bc</name>    <init pos:start="7:24" pos:end="7:30">= <expr pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:16">tmp</name></decl>, <decl pos:start="9:19" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:19" pos:end="9:31">chapter_start</name></decl>, <decl pos:start="9:34" pos:end="9:44"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:34" pos:end="9:44">chapter_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:32">stream_id_plus1</name></decl>, <decl pos:start="11:35" pos:end="11:39"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:35" pos:end="11:39">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">chapter_id</name></decl>, <decl pos:start="13:21" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:21">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:17">value</name></decl>, <decl pos:start="15:20" pos:end="15:22"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:20" pos:end="15:22">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:51"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:18"><name pos:start="17:10" pos:end="17:13">name</name><index pos:start="17:14" pos:end="17:18">[<expr pos:start="17:15" pos:end="17:17"><literal type="number" pos:start="17:15" pos:end="17:17">256</literal></expr>]</index></name></decl>, <decl pos:start="17:21" pos:end="17:35"><type ref="prev" pos:start="17:5" pos:end="17:8"/><name pos:start="17:21" pos:end="17:35"><name pos:start="17:21" pos:end="17:29">str_value</name><index pos:start="17:30" pos:end="17:35">[<expr pos:start="17:31" pos:end="17:34"><literal type="number" pos:start="17:31" pos:end="17:34">1024</literal></expr>]</index></name></decl>, <decl pos:start="17:38" pos:end="17:50"><type ref="prev" pos:start="17:5" pos:end="17:8"/><name pos:start="17:38" pos:end="17:50"><name pos:start="17:38" pos:end="17:45">type_str</name><index pos:start="17:46" pos:end="17:50">[<expr pos:start="17:47" pos:end="17:49"><literal type="number" pos:start="17:47" pos:end="17:49">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:16"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:14">char</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:20">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:7">int</name> <modifier pos:start="21:9" pos:end="21:9">*</modifier></type><name pos:start="21:10" pos:end="21:20">event_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:35"><decl pos:start="23:5" pos:end="23:34"><type pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:13">AVChapter</name> <modifier pos:start="23:15" pos:end="23:15">*</modifier></type><name pos:start="23:16" pos:end="23:22">chapter</name>      <init pos:start="23:29" pos:end="23:34">= <expr pos:start="23:31" pos:end="23:34"><name pos:start="23:31" pos:end="23:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:35"><decl pos:start="25:5" pos:end="25:34"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:12">AVStream</name> <modifier pos:start="25:14" pos:end="25:14">*</modifier></type><name pos:start="25:15" pos:end="25:16">st</name>            <init pos:start="25:29" pos:end="25:34">= <expr pos:start="25:31" pos:end="25:34"><name pos:start="25:31" pos:end="25:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:35"><decl pos:start="27:5" pos:end="27:34"><type pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:16">AVDictionary</name> <modifier pos:start="27:18" pos:end="27:18">*</modifier><modifier pos:start="27:19" pos:end="27:19">*</modifier></type><name pos:start="27:20" pos:end="27:27">metadata</name> <init pos:start="27:29" pos:end="27:34">= <expr pos:start="27:31" pos:end="27:34"><name pos:start="27:31" pos:end="27:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:32"><decl pos:start="29:5" pos:end="29:31"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:21">metadata_flag</name>       <init pos:start="29:29" pos:end="29:31">= <expr pos:start="29:31" pos:end="29:31"><literal type="number" pos:start="29:31" pos:end="29:31">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:56"><expr pos:start="33:5" pos:end="33:55"><name pos:start="33:5" pos:end="33:7">end</name>  <operator pos:start="33:10" pos:end="33:10">=</operator> <call pos:start="33:12" pos:end="33:55"><name pos:start="33:12" pos:end="33:27">get_packetheader</name><argument_list pos:start="33:28" pos:end="33:55">(<argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><name pos:start="33:29" pos:end="33:31">nut</name></expr></argument>, <argument pos:start="33:34" pos:end="33:35"><expr pos:start="33:34" pos:end="33:35"><name pos:start="33:34" pos:end="33:35">bc</name></expr></argument>, <argument pos:start="33:38" pos:end="33:38"><expr pos:start="33:38" pos:end="33:38"><literal type="number" pos:start="33:38" pos:end="33:38">1</literal></expr></argument>, <argument pos:start="33:41" pos:end="33:54"><expr pos:start="33:41" pos:end="33:54"><name pos:start="33:41" pos:end="33:54">INFO_STARTCODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:25"><expr pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:7">end</name> <operator pos:start="35:9" pos:end="35:10">+=</operator> <call pos:start="35:12" pos:end="35:24"><name pos:start="35:12" pos:end="35:20">avio_tell</name><argument_list pos:start="35:21" pos:end="35:24">(<argument pos:start="35:22" pos:end="35:23"><expr pos:start="35:22" pos:end="35:23"><name pos:start="35:22" pos:end="35:23">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:49"><expr pos:start="39:5" pos:end="39:48"><call pos:start="39:5" pos:end="39:48"><name pos:start="39:5" pos:end="39:9">GET_V</name><argument_list pos:start="39:10" pos:end="39:48">(<argument pos:start="39:11" pos:end="39:25"><expr pos:start="39:11" pos:end="39:25"><name pos:start="39:11" pos:end="39:25">stream_id_plus1</name></expr></argument>, <argument pos:start="39:28" pos:end="39:47"><expr pos:start="39:28" pos:end="39:47"><name pos:start="39:28" pos:end="39:30">tmp</name> <operator pos:start="39:32" pos:end="39:33">&lt;=</operator> <name pos:start="39:35" pos:end="39:47"><name pos:start="39:35" pos:end="39:35">s</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:47">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:14">chapter_id</name>    <operator pos:start="41:19" pos:end="41:19">=</operator> <call pos:start="41:21" pos:end="41:29"><name pos:start="41:21" pos:end="41:25">get_s</name><argument_list pos:start="41:26" pos:end="41:29">(<argument pos:start="41:27" pos:end="41:28"><expr pos:start="41:27" pos:end="41:28"><name pos:start="41:27" pos:end="41:28">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:17">chapter_start</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <call pos:start="43:21" pos:end="43:40"><name pos:start="43:21" pos:end="43:36">ffio_read_varlen</name><argument_list pos:start="43:37" pos:end="43:40">(<argument pos:start="43:38" pos:end="43:39"><expr pos:start="43:38" pos:end="43:39"><name pos:start="43:38" pos:end="43:39">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:15">chapter_len</name>   <operator pos:start="45:19" pos:end="45:19">=</operator> <call pos:start="45:21" pos:end="45:40"><name pos:start="45:21" pos:end="45:36">ffio_read_varlen</name><argument_list pos:start="45:37" pos:end="45:40">(<argument pos:start="45:38" pos:end="45:39"><expr pos:start="45:38" pos:end="45:39"><name pos:start="45:38" pos:end="45:39">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:41"><expr pos:start="47:5" pos:end="47:40"><name pos:start="47:5" pos:end="47:9">count</name>         <operator pos:start="47:19" pos:end="47:19">=</operator> <call pos:start="47:21" pos:end="47:40"><name pos:start="47:21" pos:end="47:36">ffio_read_varlen</name><argument_list pos:start="47:37" pos:end="47:40">(<argument pos:start="47:38" pos:end="47:39"><expr pos:start="47:38" pos:end="47:39"><name pos:start="47:38" pos:end="47:39">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="83:5"><if pos:start="51:5" pos:end="65:5">if <condition pos:start="51:8" pos:end="51:39">(<expr pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:18">chapter_id</name> <operator pos:start="51:20" pos:end="51:21">&amp;&amp;</operator> <operator pos:start="51:23" pos:end="51:23">!</operator><name pos:start="51:24" pos:end="51:38">stream_id_plus1</name></expr>)</condition> <block pos:start="51:41" pos:end="65:5">{<block_content pos:start="53:9" pos:end="63:38">

        <decl_stmt pos:start="53:9" pos:end="53:61"><decl pos:start="53:9" pos:end="53:60"><type pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:15">int64_t</name></type> <name pos:start="53:17" pos:end="53:21">start</name> <init pos:start="53:23" pos:end="53:60">= <expr pos:start="53:25" pos:end="53:60"><name pos:start="53:25" pos:end="53:37">chapter_start</name> <operator pos:start="53:39" pos:end="53:39">/</operator> <name pos:start="53:41" pos:end="53:60"><name pos:start="53:41" pos:end="53:43">nut</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:60">time_base_count</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="55:9" pos:end="61:71"><expr pos:start="55:9" pos:end="61:70"><name pos:start="55:9" pos:end="55:15">chapter</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="61:70"><name pos:start="55:19" pos:end="55:36">avpriv_new_chapter</name><argument_list pos:start="55:37" pos:end="61:70">(<argument pos:start="55:38" pos:end="55:38"><expr pos:start="55:38" pos:end="55:38"><name pos:start="55:38" pos:end="55:38">s</name></expr></argument>, <argument pos:start="55:41" pos:end="55:50"><expr pos:start="55:41" pos:end="55:50"><name pos:start="55:41" pos:end="55:50">chapter_id</name></expr></argument>,

                                     <argument pos:start="57:38" pos:end="59:73"><expr pos:start="57:38" pos:end="59:73"><name pos:start="57:38" pos:end="59:73"><name pos:start="57:38" pos:end="57:40">nut</name><operator pos:start="57:41" pos:end="57:42">-&gt;</operator><name pos:start="57:43" pos:end="57:51">time_base</name><index pos:start="57:52" pos:end="59:73">[<expr pos:start="57:53" pos:end="59:72"><name pos:start="57:53" pos:end="57:65">chapter_start</name> <operator pos:start="57:67" pos:end="57:67">%</operator>

                                                    <name pos:start="59:53" pos:end="59:72"><name pos:start="59:53" pos:end="59:55">nut</name><operator pos:start="59:56" pos:end="59:57">-&gt;</operator><name pos:start="59:58" pos:end="59:72">time_base_count</name></name></expr>]</index></name></expr></argument>,

                                     <argument pos:start="61:38" pos:end="61:42"><expr pos:start="61:38" pos:end="61:42"><name pos:start="61:38" pos:end="61:42">start</name></expr></argument>, <argument pos:start="61:45" pos:end="61:63"><expr pos:start="61:45" pos:end="61:63"><name pos:start="61:45" pos:end="61:49">start</name> <operator pos:start="61:51" pos:end="61:51">+</operator> <name pos:start="61:53" pos:end="61:63">chapter_len</name></expr></argument>, <argument pos:start="61:66" pos:end="61:69"><expr pos:start="61:66" pos:end="61:69"><name pos:start="61:66" pos:end="61:69">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:16">metadata</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <operator pos:start="63:20" pos:end="63:20">&amp;</operator><name pos:start="63:21" pos:end="63:37"><name pos:start="63:21" pos:end="63:27">chapter</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:37">metadata</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="65:7" pos:end="75:5">else if <condition pos:start="65:15" pos:end="65:31">(<expr pos:start="65:16" pos:end="65:30"><name pos:start="65:16" pos:end="65:30">stream_id_plus1</name></expr>)</condition> <block pos:start="65:33" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:61">

        <expr_stmt pos:start="67:9" pos:end="67:51"><expr pos:start="67:9" pos:end="67:50"><name pos:start="67:9" pos:end="67:10">st</name>       <operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:50"><name pos:start="67:20" pos:end="67:20">s</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:29">streams</name><index pos:start="67:30" pos:end="67:50">[<expr pos:start="67:31" pos:end="67:49"><name pos:start="67:31" pos:end="67:45">stream_id_plus1</name> <operator pos:start="67:47" pos:end="67:47">-</operator> <literal type="number" pos:start="67:49" pos:end="67:49">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:33"><expr pos:start="69:9" pos:end="69:32"><name pos:start="69:9" pos:end="69:16">metadata</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <operator pos:start="69:20" pos:end="69:20">&amp;</operator><name pos:start="69:21" pos:end="69:32"><name pos:start="69:21" pos:end="69:22">st</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:32">metadata</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:39"><expr pos:start="71:9" pos:end="71:38"><name pos:start="71:9" pos:end="71:19">event_flags</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <operator pos:start="71:23" pos:end="71:23">&amp;</operator><name pos:start="71:24" pos:end="71:38"><name pos:start="71:24" pos:end="71:25">st</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:38">event_flags</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:61"><expr pos:start="73:9" pos:end="73:60"><name pos:start="73:9" pos:end="73:21">metadata_flag</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:60">AVSTREAM_EVENT_FLAG_METADATA_UPDATED</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="75:7" pos:end="83:5">else <block pos:start="75:12" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:58">

        <expr_stmt pos:start="77:9" pos:end="77:32"><expr pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:16">metadata</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <operator pos:start="77:20" pos:end="77:20">&amp;</operator><name pos:start="77:21" pos:end="77:31"><name pos:start="77:21" pos:end="77:21">s</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:31">metadata</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:38"><expr pos:start="79:9" pos:end="79:37"><name pos:start="79:9" pos:end="79:19">event_flags</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <operator pos:start="79:23" pos:end="79:23">&amp;</operator><name pos:start="79:24" pos:end="79:37"><name pos:start="79:24" pos:end="79:24">s</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:37">event_flags</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:58"><expr pos:start="81:9" pos:end="81:57"><name pos:start="81:9" pos:end="81:21">metadata_flag</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <name pos:start="81:25" pos:end="81:57">AVFMT_EVENT_FLAG_METADATA_UPDATED</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="87:5" pos:end="165:5">for <control pos:start="87:9" pos:end="87:31">(<init pos:start="87:10" pos:end="87:15"><expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:10">i</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr>;</init> <condition pos:start="87:17" pos:end="87:26"><expr pos:start="87:17" pos:end="87:25"><name pos:start="87:17" pos:end="87:17">i</name> <operator pos:start="87:19" pos:end="87:19">&lt;</operator> <name pos:start="87:21" pos:end="87:25">count</name></expr>;</condition> <incr pos:start="87:28" pos:end="87:30"><expr pos:start="87:28" pos:end="87:30"><name pos:start="87:28" pos:end="87:28">i</name><operator pos:start="87:29" pos:end="87:30">++</operator></expr></incr>)</control> <block pos:start="87:33" pos:end="165:5">{<block_content pos:start="89:9" pos:end="163:9">

        <expr_stmt pos:start="89:9" pos:end="89:40"><expr pos:start="89:9" pos:end="89:39"><call pos:start="89:9" pos:end="89:39"><name pos:start="89:9" pos:end="89:15">get_str</name><argument_list pos:start="89:16" pos:end="89:39">(<argument pos:start="89:17" pos:end="89:18"><expr pos:start="89:17" pos:end="89:18"><name pos:start="89:17" pos:end="89:18">bc</name></expr></argument>, <argument pos:start="89:21" pos:end="89:24"><expr pos:start="89:21" pos:end="89:24"><name pos:start="89:21" pos:end="89:24">name</name></expr></argument>, <argument pos:start="89:27" pos:end="89:38"><expr pos:start="89:27" pos:end="89:38"><sizeof pos:start="89:27" pos:end="89:38">sizeof<argument_list pos:start="89:33" pos:end="89:38">(<argument pos:start="89:34" pos:end="89:37"><expr pos:start="89:34" pos:end="89:37"><name pos:start="89:34" pos:end="89:37">name</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:26"><expr pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:13">value</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <call pos:start="91:17" pos:end="91:25"><name pos:start="91:17" pos:end="91:21">get_s</name><argument_list pos:start="91:22" pos:end="91:25">(<argument pos:start="91:23" pos:end="91:24"><expr pos:start="91:23" pos:end="91:24"><name pos:start="91:23" pos:end="91:24">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="129:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:24">(<expr pos:start="93:13" pos:end="93:23"><name pos:start="93:13" pos:end="93:17">value</name> <operator pos:start="93:19" pos:end="93:20">==</operator> <operator pos:start="93:22" pos:end="93:22">-</operator><literal type="number" pos:start="93:23" pos:end="93:23">1</literal></expr>)</condition> <block pos:start="93:26" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:54">

            <expr_stmt pos:start="95:13" pos:end="95:27"><expr pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:16">type</name> <operator pos:start="95:18" pos:end="95:18">=</operator> <literal type="string" pos:start="95:20" pos:end="95:26">"UTF-8"</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:54"><expr pos:start="97:13" pos:end="97:53"><call pos:start="97:13" pos:end="97:53"><name pos:start="97:13" pos:end="97:19">get_str</name><argument_list pos:start="97:20" pos:end="97:53">(<argument pos:start="97:21" pos:end="97:22"><expr pos:start="97:21" pos:end="97:22"><name pos:start="97:21" pos:end="97:22">bc</name></expr></argument>, <argument pos:start="97:25" pos:end="97:33"><expr pos:start="97:25" pos:end="97:33"><name pos:start="97:25" pos:end="97:33">str_value</name></expr></argument>, <argument pos:start="97:36" pos:end="97:52"><expr pos:start="97:36" pos:end="97:52"><sizeof pos:start="97:36" pos:end="97:52">sizeof<argument_list pos:start="97:42" pos:end="97:52">(<argument pos:start="97:43" pos:end="97:51"><expr pos:start="97:43" pos:end="97:51"><name pos:start="97:43" pos:end="97:51">str_value</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="99:11" pos:end="107:9">else if <condition pos:start="99:19" pos:end="99:31">(<expr pos:start="99:20" pos:end="99:30"><name pos:start="99:20" pos:end="99:24">value</name> <operator pos:start="99:26" pos:end="99:27">==</operator> <operator pos:start="99:29" pos:end="99:29">-</operator><literal type="number" pos:start="99:30" pos:end="99:30">2</literal></expr>)</condition> <block pos:start="99:33" pos:end="107:9">{<block_content pos:start="101:13" pos:end="105:54">

            <expr_stmt pos:start="101:13" pos:end="101:52"><expr pos:start="101:13" pos:end="101:51"><call pos:start="101:13" pos:end="101:51"><name pos:start="101:13" pos:end="101:19">get_str</name><argument_list pos:start="101:20" pos:end="101:51">(<argument pos:start="101:21" pos:end="101:22"><expr pos:start="101:21" pos:end="101:22"><name pos:start="101:21" pos:end="101:22">bc</name></expr></argument>, <argument pos:start="101:25" pos:end="101:32"><expr pos:start="101:25" pos:end="101:32"><name pos:start="101:25" pos:end="101:32">type_str</name></expr></argument>, <argument pos:start="101:35" pos:end="101:50"><expr pos:start="101:35" pos:end="101:50"><sizeof pos:start="101:35" pos:end="101:50">sizeof<argument_list pos:start="101:41" pos:end="101:50">(<argument pos:start="101:42" pos:end="101:49"><expr pos:start="101:42" pos:end="101:49"><name pos:start="101:42" pos:end="101:49">type_str</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:28"><expr pos:start="103:13" pos:end="103:27"><name pos:start="103:13" pos:end="103:16">type</name> <operator pos:start="103:18" pos:end="103:18">=</operator> <name pos:start="103:20" pos:end="103:27">type_str</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:54"><expr pos:start="105:13" pos:end="105:53"><call pos:start="105:13" pos:end="105:53"><name pos:start="105:13" pos:end="105:19">get_str</name><argument_list pos:start="105:20" pos:end="105:53">(<argument pos:start="105:21" pos:end="105:22"><expr pos:start="105:21" pos:end="105:22"><name pos:start="105:21" pos:end="105:22">bc</name></expr></argument>, <argument pos:start="105:25" pos:end="105:33"><expr pos:start="105:25" pos:end="105:33"><name pos:start="105:25" pos:end="105:33">str_value</name></expr></argument>, <argument pos:start="105:36" pos:end="105:52"><expr pos:start="105:36" pos:end="105:52"><sizeof pos:start="105:36" pos:end="105:52">sizeof<argument_list pos:start="105:42" pos:end="105:52">(<argument pos:start="105:43" pos:end="105:51"><expr pos:start="105:43" pos:end="105:51"><name pos:start="105:43" pos:end="105:51">str_value</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="107:11" pos:end="113:9">else if <condition pos:start="107:19" pos:end="107:31">(<expr pos:start="107:20" pos:end="107:30"><name pos:start="107:20" pos:end="107:24">value</name> <operator pos:start="107:26" pos:end="107:27">==</operator> <operator pos:start="107:29" pos:end="107:29">-</operator><literal type="number" pos:start="107:30" pos:end="107:30">3</literal></expr>)</condition> <block pos:start="107:33" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:30">

            <expr_stmt pos:start="109:13" pos:end="109:24"><expr pos:start="109:13" pos:end="109:23"><name pos:start="109:13" pos:end="109:16">type</name>  <operator pos:start="109:19" pos:end="109:19">=</operator> <literal type="string" pos:start="109:21" pos:end="109:23">"s"</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:30"><expr pos:start="111:13" pos:end="111:29"><name pos:start="111:13" pos:end="111:17">value</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <call pos:start="111:21" pos:end="111:29"><name pos:start="111:21" pos:end="111:25">get_s</name><argument_list pos:start="111:26" pos:end="111:29">(<argument pos:start="111:27" pos:end="111:28"><expr pos:start="111:27" pos:end="111:28"><name pos:start="111:27" pos:end="111:28">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="113:11" pos:end="119:9">else if <condition pos:start="113:19" pos:end="113:31">(<expr pos:start="113:20" pos:end="113:30"><name pos:start="113:20" pos:end="113:24">value</name> <operator pos:start="113:26" pos:end="113:27">==</operator> <operator pos:start="113:29" pos:end="113:29">-</operator><literal type="number" pos:start="113:30" pos:end="113:30">4</literal></expr>)</condition> <block pos:start="113:33" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:41">

            <expr_stmt pos:start="115:13" pos:end="115:24"><expr pos:start="115:13" pos:end="115:23"><name pos:start="115:13" pos:end="115:16">type</name>  <operator pos:start="115:19" pos:end="115:19">=</operator> <literal type="string" pos:start="115:21" pos:end="115:23">"t"</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:41"><expr pos:start="117:13" pos:end="117:40"><name pos:start="117:13" pos:end="117:17">value</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <call pos:start="117:21" pos:end="117:40"><name pos:start="117:21" pos:end="117:36">ffio_read_varlen</name><argument_list pos:start="117:37" pos:end="117:40">(<argument pos:start="117:38" pos:end="117:39"><expr pos:start="117:38" pos:end="117:39"><name pos:start="117:38" pos:end="117:39">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="119:11" pos:end="125:9">else if <condition pos:start="119:19" pos:end="119:30">(<expr pos:start="119:20" pos:end="119:29"><name pos:start="119:20" pos:end="119:24">value</name> <operator pos:start="119:26" pos:end="119:26">&lt;</operator> <operator pos:start="119:28" pos:end="119:28">-</operator><literal type="number" pos:start="119:29" pos:end="119:29">4</literal></expr>)</condition> <block pos:start="119:32" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:22">

            <expr_stmt pos:start="121:13" pos:end="121:23"><expr pos:start="121:13" pos:end="121:22"><name pos:start="121:13" pos:end="121:16">type</name> <operator pos:start="121:18" pos:end="121:18">=</operator> <literal type="string" pos:start="121:20" pos:end="121:22">"r"</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:22"><expr pos:start="123:13" pos:end="123:21"><call pos:start="123:13" pos:end="123:21"><name pos:start="123:13" pos:end="123:17">get_s</name><argument_list pos:start="123:18" pos:end="123:21">(<argument pos:start="123:19" pos:end="123:20"><expr pos:start="123:19" pos:end="123:20"><name pos:start="123:19" pos:end="123:20">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="125:11" pos:end="129:9">else <block pos:start="125:16" pos:end="129:9">{<block_content pos:start="127:13" pos:end="127:23">

            <expr_stmt pos:start="127:13" pos:end="127:23"><expr pos:start="127:13" pos:end="127:22"><name pos:start="127:13" pos:end="127:16">type</name> <operator pos:start="127:18" pos:end="127:18">=</operator> <literal type="string" pos:start="127:20" pos:end="127:22">"v"</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="133:9" pos:end="139:9"><if pos:start="133:9" pos:end="139:9">if <condition pos:start="133:12" pos:end="133:44">(<expr pos:start="133:13" pos:end="133:43"><name pos:start="133:13" pos:end="133:27">stream_id_plus1</name> <operator pos:start="133:29" pos:end="133:29">&gt;</operator> <name pos:start="133:31" pos:end="133:43"><name pos:start="133:31" pos:end="133:31">s</name><operator pos:start="133:32" pos:end="133:33">-&gt;</operator><name pos:start="133:34" pos:end="133:43">nb_streams</name></name></expr>)</condition> <block pos:start="133:46" pos:end="139:9">{<block_content pos:start="135:13" pos:end="137:21">

            <expr_stmt pos:start="135:13" pos:end="135:75"><expr pos:start="135:13" pos:end="135:74"><call pos:start="135:13" pos:end="135:74"><name pos:start="135:13" pos:end="135:18">av_log</name><argument_list pos:start="135:19" pos:end="135:74">(<argument pos:start="135:20" pos:end="135:20"><expr pos:start="135:20" pos:end="135:20"><name pos:start="135:20" pos:end="135:20">s</name></expr></argument>, <argument pos:start="135:23" pos:end="135:34"><expr pos:start="135:23" pos:end="135:34"><name pos:start="135:23" pos:end="135:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="135:37" pos:end="135:73"><expr pos:start="135:37" pos:end="135:73"><literal type="string" pos:start="135:37" pos:end="135:73">"invalid stream id for info packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="137:13" pos:end="137:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="143:9" pos:end="163:9"><if pos:start="143:9" pos:end="163:9">if <condition pos:start="143:12" pos:end="143:35">(<expr pos:start="143:13" pos:end="143:34"><operator pos:start="143:13" pos:end="143:13">!</operator><call pos:start="143:14" pos:end="143:34"><name pos:start="143:14" pos:end="143:19">strcmp</name><argument_list pos:start="143:20" pos:end="143:34">(<argument pos:start="143:21" pos:end="143:24"><expr pos:start="143:21" pos:end="143:24"><name pos:start="143:21" pos:end="143:24">type</name></expr></argument>, <argument pos:start="143:27" pos:end="143:33"><expr pos:start="143:27" pos:end="143:33"><literal type="string" pos:start="143:27" pos:end="143:33">"UTF-8"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:37" pos:end="163:9">{<block_content pos:start="145:13" pos:end="161:13">

            <if_stmt pos:start="145:13" pos:end="151:13"><if pos:start="145:13" pos:end="151:13">if <condition pos:start="145:16" pos:end="145:64">(<expr pos:start="145:17" pos:end="145:63"><name pos:start="145:17" pos:end="145:26">chapter_id</name> <operator pos:start="145:28" pos:end="145:29">==</operator> <literal type="number" pos:start="145:31" pos:end="145:31">0</literal> <operator pos:start="145:33" pos:end="145:34">&amp;&amp;</operator> <operator pos:start="145:36" pos:end="145:36">!</operator><call pos:start="145:37" pos:end="145:63"><name pos:start="145:37" pos:end="145:42">strcmp</name><argument_list pos:start="145:43" pos:end="145:63">(<argument pos:start="145:44" pos:end="145:47"><expr pos:start="145:44" pos:end="145:47"><name pos:start="145:44" pos:end="145:47">name</name></expr></argument>, <argument pos:start="145:50" pos:end="145:62"><expr pos:start="145:50" pos:end="145:62"><literal type="string" pos:start="145:50" pos:end="145:62">"Disposition"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="145:66" pos:end="151:13">{<block_content pos:start="147:17" pos:end="149:25">

                <expr_stmt pos:start="147:17" pos:end="147:72"><expr pos:start="147:17" pos:end="147:71"><call pos:start="147:17" pos:end="147:71"><name pos:start="147:17" pos:end="147:36">set_disposition_bits</name><argument_list pos:start="147:37" pos:end="147:71">(<argument pos:start="147:38" pos:end="147:38"><expr pos:start="147:38" pos:end="147:38"><name pos:start="147:38" pos:end="147:38">s</name></expr></argument>, <argument pos:start="147:41" pos:end="147:49"><expr pos:start="147:41" pos:end="147:49"><name pos:start="147:41" pos:end="147:49">str_value</name></expr></argument>, <argument pos:start="147:52" pos:end="147:70"><expr pos:start="147:52" pos:end="147:70"><name pos:start="147:52" pos:end="147:66">stream_id_plus1</name> <operator pos:start="147:68" pos:end="147:68">-</operator> <literal type="number" pos:start="147:70" pos:end="147:70">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="149:17" pos:end="149:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="153:13" pos:end="161:13"><if pos:start="153:13" pos:end="161:13">if <condition pos:start="153:16" pos:end="155:82">(<expr pos:start="153:17" pos:end="155:81"><name pos:start="153:17" pos:end="153:24">metadata</name> <operator pos:start="153:26" pos:end="153:27">&amp;&amp;</operator> <call pos:start="153:29" pos:end="153:55"><name pos:start="153:29" pos:end="153:41">av_strcasecmp</name><argument_list pos:start="153:42" pos:end="153:55">(<argument pos:start="153:43" pos:end="153:46"><expr pos:start="153:43" pos:end="153:46"><name pos:start="153:43" pos:end="153:46">name</name></expr></argument>, <argument pos:start="153:49" pos:end="153:54"><expr pos:start="153:49" pos:end="153:54"><literal type="string" pos:start="153:49" pos:end="153:54">"Uses"</literal></expr></argument>)</argument_list></call> <operator pos:start="153:57" pos:end="153:58">&amp;&amp;</operator>

                <call pos:start="155:17" pos:end="155:46"><name pos:start="155:17" pos:end="155:29">av_strcasecmp</name><argument_list pos:start="155:30" pos:end="155:46">(<argument pos:start="155:31" pos:end="155:34"><expr pos:start="155:31" pos:end="155:34"><name pos:start="155:31" pos:end="155:34">name</name></expr></argument>, <argument pos:start="155:37" pos:end="155:45"><expr pos:start="155:37" pos:end="155:45"><literal type="string" pos:start="155:37" pos:end="155:45">"Depends"</literal></expr></argument>)</argument_list></call> <operator pos:start="155:48" pos:end="155:49">&amp;&amp;</operator> <call pos:start="155:51" pos:end="155:81"><name pos:start="155:51" pos:end="155:63">av_strcasecmp</name><argument_list pos:start="155:64" pos:end="155:81">(<argument pos:start="155:65" pos:end="155:68"><expr pos:start="155:65" pos:end="155:68"><name pos:start="155:65" pos:end="155:68">name</name></expr></argument>, <argument pos:start="155:71" pos:end="155:80"><expr pos:start="155:71" pos:end="155:80"><literal type="string" pos:start="155:71" pos:end="155:80">"Replaces"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="155:84" pos:end="161:13">{<block_content pos:start="157:17" pos:end="159:58">

                <expr_stmt pos:start="157:17" pos:end="157:46"><expr pos:start="157:17" pos:end="157:45"><operator pos:start="157:17" pos:end="157:17">*</operator><name pos:start="157:18" pos:end="157:28">event_flags</name> <operator pos:start="157:30" pos:end="157:31">|=</operator> <name pos:start="157:33" pos:end="157:45">metadata_flag</name></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:58"><expr pos:start="159:17" pos:end="159:57"><call pos:start="159:17" pos:end="159:57"><name pos:start="159:17" pos:end="159:27">av_dict_set</name><argument_list pos:start="159:28" pos:end="159:57">(<argument pos:start="159:29" pos:end="159:36"><expr pos:start="159:29" pos:end="159:36"><name pos:start="159:29" pos:end="159:36">metadata</name></expr></argument>, <argument pos:start="159:39" pos:end="159:42"><expr pos:start="159:39" pos:end="159:42"><name pos:start="159:39" pos:end="159:42">name</name></expr></argument>, <argument pos:start="159:45" pos:end="159:53"><expr pos:start="159:45" pos:end="159:53"><name pos:start="159:45" pos:end="159:53">str_value</name></expr></argument>, <argument pos:start="159:56" pos:end="159:56"><expr pos:start="159:56" pos:end="159:56"><literal type="number" pos:start="159:56" pos:end="159:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="169:5" pos:end="175:5"><if pos:start="169:5" pos:end="175:5">if <condition pos:start="169:8" pos:end="169:56">(<expr pos:start="169:9" pos:end="169:55"><call pos:start="169:9" pos:end="169:30"><name pos:start="169:9" pos:end="169:21">skip_reserved</name><argument_list pos:start="169:22" pos:end="169:30">(<argument pos:start="169:23" pos:end="169:24"><expr pos:start="169:23" pos:end="169:24"><name pos:start="169:23" pos:end="169:24">bc</name></expr></argument>, <argument pos:start="169:27" pos:end="169:29"><expr pos:start="169:27" pos:end="169:29"><name pos:start="169:27" pos:end="169:29">end</name></expr></argument>)</argument_list></call> <operator pos:start="169:32" pos:end="169:33">||</operator> <call pos:start="169:35" pos:end="169:55"><name pos:start="169:35" pos:end="169:51">ffio_get_checksum</name><argument_list pos:start="169:52" pos:end="169:55">(<argument pos:start="169:53" pos:end="169:54"><expr pos:start="169:53" pos:end="169:54"><name pos:start="169:53" pos:end="169:54">bc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="169:58" pos:end="175:5">{<block_content pos:start="171:9" pos:end="173:35">

        <expr_stmt pos:start="171:9" pos:end="171:67"><expr pos:start="171:9" pos:end="171:66"><call pos:start="171:9" pos:end="171:66"><name pos:start="171:9" pos:end="171:14">av_log</name><argument_list pos:start="171:15" pos:end="171:66">(<argument pos:start="171:16" pos:end="171:16"><expr pos:start="171:16" pos:end="171:16"><name pos:start="171:16" pos:end="171:16">s</name></expr></argument>, <argument pos:start="171:19" pos:end="171:30"><expr pos:start="171:19" pos:end="171:30"><name pos:start="171:19" pos:end="171:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="171:33" pos:end="171:65"><expr pos:start="171:33" pos:end="171:65"><literal type="string" pos:start="171:33" pos:end="171:65">"info header checksum mismatch\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="173:9" pos:end="173:35">return <expr pos:start="173:16" pos:end="173:34"><name pos:start="173:16" pos:end="173:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="177:5" pos:end="177:13">return <expr pos:start="177:12" pos:end="177:12"><literal type="number" pos:start="177:12" pos:end="177:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
