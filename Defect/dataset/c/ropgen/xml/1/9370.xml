<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9370.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">vnc_worker_thread_loop</name><parameter_list pos:start="1:34" pos:end="1:53">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:45">VncJobQueue</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">queue</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="163:1">{<block_content pos:start="5:5" pos:end="161:13">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">VncJob</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">job</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VncRectEntry</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:23">entry</name></decl>, <decl pos:start="7:26" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:18"><modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:29">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">VncState</name></type> <name pos:start="9:14" pos:end="9:15">vs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:20">n_rectangles</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:20">saved_offset</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><call pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:18">vnc_lock_queue</name><argument_list pos:start="17:19" pos:end="17:25">(<argument pos:start="17:20" pos:end="17:24"><expr pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:24">queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="23:5">while <condition pos:start="19:11" pos:end="19:54">(<expr pos:start="19:12" pos:end="19:53"><call pos:start="19:12" pos:end="19:37"><name pos:start="19:12" pos:end="19:23">QTAILQ_EMPTY</name><argument_list pos:start="19:24" pos:end="19:37">(<argument pos:start="19:25" pos:end="19:36"><expr pos:start="19:25" pos:end="19:36"><operator pos:start="19:25" pos:end="19:25">&amp;</operator><name pos:start="19:26" pos:end="19:36"><name pos:start="19:26" pos:end="19:30">queue</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:36">jobs</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:39" pos:end="19:40">&amp;&amp;</operator> <operator pos:start="19:42" pos:end="19:42">!</operator><name pos:start="19:43" pos:end="19:53"><name pos:start="19:43" pos:end="19:47">queue</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:53">exit</name></name></expr>)</condition> <block pos:start="19:56" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:52">

        <expr_stmt pos:start="21:9" pos:end="21:52"><expr pos:start="21:9" pos:end="21:51"><call pos:start="21:9" pos:end="21:51"><name pos:start="21:9" pos:end="21:22">qemu_cond_wait</name><argument_list pos:start="21:23" pos:end="21:51">(<argument pos:start="21:24" pos:end="21:35"><expr pos:start="21:24" pos:end="21:35"><operator pos:start="21:24" pos:end="21:24">&amp;</operator><name pos:start="21:25" pos:end="21:35"><name pos:start="21:25" pos:end="21:29">queue</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:35">cond</name></name></expr></argument>, <argument pos:start="21:38" pos:end="21:50"><expr pos:start="21:38" pos:end="21:50"><operator pos:start="21:38" pos:end="21:38">&amp;</operator><name pos:start="21:39" pos:end="21:50"><name pos:start="21:39" pos:end="21:43">queue</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:50">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <comment type="block" pos:start="25:5" pos:end="25:58">/* Here job can only be NULL if queue-&gt;exit is true */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:37"><expr pos:start="27:5" pos:end="27:36"><name pos:start="27:5" pos:end="27:7">job</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:36"><name pos:start="27:11" pos:end="27:22">QTAILQ_FIRST</name><argument_list pos:start="27:23" pos:end="27:36">(<argument pos:start="27:24" pos:end="27:35"><expr pos:start="27:24" pos:end="27:35"><operator pos:start="27:24" pos:end="27:24">&amp;</operator><name pos:start="27:25" pos:end="27:35"><name pos:start="27:25" pos:end="27:29">queue</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:35">jobs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><call pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:20">vnc_unlock_queue</name><argument_list pos:start="29:21" pos:end="29:27">(<argument pos:start="29:22" pos:end="29:26"><expr pos:start="29:22" pos:end="29:26"><name pos:start="29:22" pos:end="29:26">queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:13">queue</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:19">exit</name></name></expr>)</condition> <block pos:start="33:22" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:18">

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:29"><expr pos:start="41:5" pos:end="41:28"><call pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:19">vnc_lock_output</name><argument_list pos:start="41:20" pos:end="41:28">(<argument pos:start="41:21" pos:end="41:27"><expr pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:23">job</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:27">vs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:55">(<expr pos:start="43:9" pos:end="43:54"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:11">job</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:15">vs</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:22">csock</name></name> <operator pos:start="43:24" pos:end="43:25">==</operator> <operator pos:start="43:27" pos:end="43:27">-</operator><literal type="number" pos:start="43:28" pos:end="43:28">1</literal> <operator pos:start="43:30" pos:end="43:31">||</operator> <name pos:start="43:33" pos:end="43:46"><name pos:start="43:33" pos:end="43:35">job</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:39">vs</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:46">abort</name></name> <operator pos:start="43:48" pos:end="43:49">==</operator> <name pos:start="43:51" pos:end="43:54">true</name></expr>)</condition> <block pos:start="43:57" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:26">

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><call pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:25">vnc_unlock_output</name><argument_list pos:start="45:26" pos:end="45:34">(<argument pos:start="45:27" pos:end="45:33"><expr pos:start="45:27" pos:end="45:33"><name pos:start="45:27" pos:end="45:33"><name pos:start="45:27" pos:end="45:29">job</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:33">vs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:26">goto <name pos:start="47:14" pos:end="47:25">disconnected</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><call pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:21">vnc_unlock_output</name><argument_list pos:start="51:22" pos:end="51:30">(<argument pos:start="51:23" pos:end="51:29"><expr pos:start="51:23" pos:end="51:29"><name pos:start="51:23" pos:end="51:29"><name pos:start="51:23" pos:end="51:25">job</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:29">vs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:59">/* Make a local copy of vs and switch output buffers */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:43"><expr pos:start="57:5" pos:end="57:42"><call pos:start="57:5" pos:end="57:42"><name pos:start="57:5" pos:end="57:28">vnc_async_encoding_start</name><argument_list pos:start="57:29" pos:end="57:42">(<argument pos:start="57:30" pos:end="57:36"><expr pos:start="57:30" pos:end="57:36"><name pos:start="57:30" pos:end="57:36"><name pos:start="57:30" pos:end="57:32">job</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:36">vs</name></name></expr></argument>, <argument pos:start="57:39" pos:end="57:41"><expr pos:start="57:39" pos:end="57:41"><operator pos:start="57:39" pos:end="57:39">&amp;</operator><name pos:start="57:40" pos:end="57:41">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:34">/* Start sending rectangles */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:16">n_rectangles</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <literal type="number" pos:start="63:20" pos:end="63:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:57"><expr pos:start="65:5" pos:end="65:56"><call pos:start="65:5" pos:end="65:56"><name pos:start="65:5" pos:end="65:16">vnc_write_u8</name><argument_list pos:start="65:17" pos:end="65:56">(<argument pos:start="65:18" pos:end="65:20"><expr pos:start="65:18" pos:end="65:20"><operator pos:start="65:18" pos:end="65:18">&amp;</operator><name pos:start="65:19" pos:end="65:20">vs</name></expr></argument>, <argument pos:start="65:23" pos:end="65:55"><expr pos:start="65:23" pos:end="65:55"><name pos:start="65:23" pos:end="65:55">VNC_MSG_SERVER_FRAMEBUFFER_UPDATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:25"><expr pos:start="67:5" pos:end="67:24"><call pos:start="67:5" pos:end="67:24"><name pos:start="67:5" pos:end="67:16">vnc_write_u8</name><argument_list pos:start="67:17" pos:end="67:24">(<argument pos:start="67:18" pos:end="67:20"><expr pos:start="67:18" pos:end="67:20"><operator pos:start="67:18" pos:end="67:18">&amp;</operator><name pos:start="67:19" pos:end="67:20">vs</name></expr></argument>, <argument pos:start="67:23" pos:end="67:23"><expr pos:start="67:23" pos:end="67:23"><literal type="number" pos:start="67:23" pos:end="67:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:36"><expr pos:start="69:5" pos:end="69:35"><name pos:start="69:5" pos:end="69:16">saved_offset</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:35"><name pos:start="69:20" pos:end="69:21">vs</name><operator pos:start="69:22" pos:end="69:22">.</operator><name pos:start="69:23" pos:end="69:28">output</name><operator pos:start="69:29" pos:end="69:29">.</operator><name pos:start="69:30" pos:end="69:35">offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:26"><expr pos:start="71:5" pos:end="71:25"><call pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:17">vnc_write_u16</name><argument_list pos:start="71:18" pos:end="71:25">(<argument pos:start="71:19" pos:end="71:21"><expr pos:start="71:19" pos:end="71:21"><operator pos:start="71:19" pos:end="71:19">&amp;</operator><name pos:start="71:20" pos:end="71:21">vs</name></expr></argument>, <argument pos:start="71:24" pos:end="71:24"><expr pos:start="71:24" pos:end="71:24"><literal type="number" pos:start="71:24" pos:end="71:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:34"><expr pos:start="75:5" pos:end="75:33"><call pos:start="75:5" pos:end="75:33"><name pos:start="75:5" pos:end="75:20">vnc_lock_display</name><argument_list pos:start="75:21" pos:end="75:33">(<argument pos:start="75:22" pos:end="75:32"><expr pos:start="75:22" pos:end="75:32"><name pos:start="75:22" pos:end="75:32"><name pos:start="75:22" pos:end="75:24">job</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:28">vs</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:32">vd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="77:5" pos:end="77:58"><name pos:start="77:5" pos:end="77:22">QLIST_FOREACH_SAFE</name><argument_list pos:start="77:23" pos:end="77:58">(<argument pos:start="77:24" pos:end="77:28">entry</argument>, <argument pos:start="77:31" pos:end="77:46">&amp;job-&gt;rectangles</argument>, <argument pos:start="77:49" pos:end="77:52">next</argument>, <argument pos:start="77:55" pos:end="77:57">tmp</argument>)</argument_list></macro> <block pos:start="77:60" pos:end="109:5">{<block_content pos:start="79:9" pos:end="107:22">

        <decl_stmt pos:start="79:9" pos:end="79:14"><decl pos:start="79:9" pos:end="79:13"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:13">n</name></decl>;</decl_stmt>



        <if_stmt pos:start="83:9" pos:end="91:9"><if pos:start="83:9" pos:end="91:9">if <condition pos:start="83:12" pos:end="83:33">(<expr pos:start="83:13" pos:end="83:32"><name pos:start="83:13" pos:end="83:26"><name pos:start="83:13" pos:end="83:15">job</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:19">vs</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:26">csock</name></name> <operator pos:start="83:28" pos:end="83:29">==</operator> <operator pos:start="83:31" pos:end="83:31">-</operator><literal type="number" pos:start="83:32" pos:end="83:32">1</literal></expr>)</condition> <block pos:start="83:35" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:30">

            <expr_stmt pos:start="85:13" pos:end="85:44"><expr pos:start="85:13" pos:end="85:43"><call pos:start="85:13" pos:end="85:43"><name pos:start="85:13" pos:end="85:30">vnc_unlock_display</name><argument_list pos:start="85:31" pos:end="85:43">(<argument pos:start="85:32" pos:end="85:42"><expr pos:start="85:32" pos:end="85:42"><name pos:start="85:32" pos:end="85:42"><name pos:start="85:32" pos:end="85:34">job</name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:38">vs</name><operator pos:start="85:39" pos:end="85:40">-&gt;</operator><name pos:start="85:41" pos:end="85:42">vd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <goto pos:start="89:13" pos:end="89:30">goto <name pos:start="89:18" pos:end="89:29">disconnected</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="95:9" pos:end="97:70"><expr pos:start="95:9" pos:end="97:69"><name pos:start="95:9" pos:end="95:9">n</name> <operator pos:start="95:11" pos:end="95:11">=</operator> <call pos:start="95:13" pos:end="97:69"><name pos:start="95:13" pos:end="95:39">vnc_send_framebuffer_update</name><argument_list pos:start="95:40" pos:end="97:69">(<argument pos:start="95:41" pos:end="95:43"><expr pos:start="95:41" pos:end="95:43"><operator pos:start="95:41" pos:end="95:41">&amp;</operator><name pos:start="95:42" pos:end="95:43">vs</name></expr></argument>, <argument pos:start="95:46" pos:end="95:58"><expr pos:start="95:46" pos:end="95:58"><name pos:start="95:46" pos:end="95:58"><name pos:start="95:46" pos:end="95:50">entry</name><operator pos:start="95:51" pos:end="95:52">-&gt;</operator><name pos:start="95:53" pos:end="95:56">rect</name><operator pos:start="95:57" pos:end="95:57">.</operator><name pos:start="95:58" pos:end="95:58">x</name></name></expr></argument>, <argument pos:start="95:61" pos:end="95:73"><expr pos:start="95:61" pos:end="95:73"><name pos:start="95:61" pos:end="95:73"><name pos:start="95:61" pos:end="95:65">entry</name><operator pos:start="95:66" pos:end="95:67">-&gt;</operator><name pos:start="95:68" pos:end="95:71">rect</name><operator pos:start="95:72" pos:end="95:72">.</operator><name pos:start="95:73" pos:end="95:73">y</name></name></expr></argument>,

                                        <argument pos:start="97:41" pos:end="97:53"><expr pos:start="97:41" pos:end="97:53"><name pos:start="97:41" pos:end="97:53"><name pos:start="97:41" pos:end="97:45">entry</name><operator pos:start="97:46" pos:end="97:47">-&gt;</operator><name pos:start="97:48" pos:end="97:51">rect</name><operator pos:start="97:52" pos:end="97:52">.</operator><name pos:start="97:53" pos:end="97:53">w</name></name></expr></argument>, <argument pos:start="97:56" pos:end="97:68"><expr pos:start="97:56" pos:end="97:68"><name pos:start="97:56" pos:end="97:68"><name pos:start="97:56" pos:end="97:60">entry</name><operator pos:start="97:61" pos:end="97:62">-&gt;</operator><name pos:start="97:63" pos:end="97:66">rect</name><operator pos:start="97:67" pos:end="97:67">.</operator><name pos:start="97:68" pos:end="97:68">h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="101:9" pos:end="105:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:19">(<expr pos:start="101:13" pos:end="101:18"><name pos:start="101:13" pos:end="101:13">n</name> <operator pos:start="101:15" pos:end="101:16">&gt;=</operator> <literal type="number" pos:start="101:18" pos:end="101:18">0</literal></expr>)</condition> <block pos:start="101:21" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:30">

            <expr_stmt pos:start="103:13" pos:end="103:30"><expr pos:start="103:13" pos:end="103:29"><name pos:start="103:13" pos:end="103:24">n_rectangles</name> <operator pos:start="103:26" pos:end="103:27">+=</operator> <name pos:start="103:29" pos:end="103:29">n</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:22"><expr pos:start="107:9" pos:end="107:21"><call pos:start="107:9" pos:end="107:21"><name pos:start="107:9" pos:end="107:14">g_free</name><argument_list pos:start="107:15" pos:end="107:21">(<argument pos:start="107:16" pos:end="107:20"><expr pos:start="107:16" pos:end="107:20"><name pos:start="107:16" pos:end="107:20">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="111:5" pos:end="111:36"><expr pos:start="111:5" pos:end="111:35"><call pos:start="111:5" pos:end="111:35"><name pos:start="111:5" pos:end="111:22">vnc_unlock_display</name><argument_list pos:start="111:23" pos:end="111:35">(<argument pos:start="111:24" pos:end="111:34"><expr pos:start="111:24" pos:end="111:34"><name pos:start="111:24" pos:end="111:34"><name pos:start="111:24" pos:end="111:26">job</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:30">vs</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:34">vd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="115:5" pos:end="115:58">/* Put n_rectangles at the beginning of the message */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:64"><expr pos:start="117:5" pos:end="117:63"><name pos:start="117:5" pos:end="117:34"><name pos:start="117:5" pos:end="117:6">vs</name><operator pos:start="117:7" pos:end="117:7">.</operator><name pos:start="117:8" pos:end="117:13">output</name><operator pos:start="117:14" pos:end="117:14">.</operator><name pos:start="117:15" pos:end="117:20">buffer</name><index pos:start="117:21" pos:end="117:34">[<expr pos:start="117:22" pos:end="117:33"><name pos:start="117:22" pos:end="117:33">saved_offset</name></expr>]</index></name> <operator pos:start="117:36" pos:end="117:36">=</operator> <operator pos:start="117:38" pos:end="117:38">(</operator><name pos:start="117:39" pos:end="117:50">n_rectangles</name> <operator pos:start="117:52" pos:end="117:53">&gt;&gt;</operator> <literal type="number" pos:start="117:55" pos:end="117:55">8</literal><operator pos:start="117:56" pos:end="117:56">)</operator> <operator pos:start="117:58" pos:end="117:58">&amp;</operator> <literal type="number" pos:start="117:60" pos:end="117:63">0xFF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:61"><expr pos:start="119:5" pos:end="119:60"><name pos:start="119:5" pos:end="119:38"><name pos:start="119:5" pos:end="119:6">vs</name><operator pos:start="119:7" pos:end="119:7">.</operator><name pos:start="119:8" pos:end="119:13">output</name><operator pos:start="119:14" pos:end="119:14">.</operator><name pos:start="119:15" pos:end="119:20">buffer</name><index pos:start="119:21" pos:end="119:38">[<expr pos:start="119:22" pos:end="119:37"><name pos:start="119:22" pos:end="119:33">saved_offset</name> <operator pos:start="119:35" pos:end="119:35">+</operator> <literal type="number" pos:start="119:37" pos:end="119:37">1</literal></expr>]</index></name> <operator pos:start="119:40" pos:end="119:40">=</operator> <name pos:start="119:42" pos:end="119:53">n_rectangles</name> <operator pos:start="119:55" pos:end="119:55">&amp;</operator> <literal type="number" pos:start="119:57" pos:end="119:60">0xFF</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:29"><expr pos:start="123:5" pos:end="123:28"><call pos:start="123:5" pos:end="123:28"><name pos:start="123:5" pos:end="123:19">vnc_lock_output</name><argument_list pos:start="123:20" pos:end="123:28">(<argument pos:start="123:21" pos:end="123:27"><expr pos:start="123:21" pos:end="123:27"><name pos:start="123:21" pos:end="123:27"><name pos:start="123:21" pos:end="123:23">job</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:27">vs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="143:5"><if pos:start="125:5" pos:end="139:5">if <condition pos:start="125:8" pos:end="125:29">(<expr pos:start="125:9" pos:end="125:28"><name pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:11">job</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:15">vs</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:22">csock</name></name> <operator pos:start="125:24" pos:end="125:25">!=</operator> <operator pos:start="125:27" pos:end="125:27">-</operator><literal type="number" pos:start="125:28" pos:end="125:28">1</literal></expr>)</condition> <block pos:start="125:31" pos:end="139:5">{<block_content pos:start="127:9" pos:end="137:38">

        <expr_stmt pos:start="127:9" pos:end="127:64"><expr pos:start="127:9" pos:end="127:63"><call pos:start="127:9" pos:end="127:63"><name pos:start="127:9" pos:end="127:22">buffer_reserve</name><argument_list pos:start="127:23" pos:end="127:63">(<argument pos:start="127:24" pos:end="127:44"><expr pos:start="127:24" pos:end="127:44"><operator pos:start="127:24" pos:end="127:24">&amp;</operator><name pos:start="127:25" pos:end="127:44"><name pos:start="127:25" pos:end="127:27">job</name><operator pos:start="127:28" pos:end="127:29">-&gt;</operator><name pos:start="127:30" pos:end="127:31">vs</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:44">jobs_buffer</name></name></expr></argument>, <argument pos:start="127:47" pos:end="127:62"><expr pos:start="127:47" pos:end="127:62"><name pos:start="127:47" pos:end="127:62"><name pos:start="127:47" pos:end="127:48">vs</name><operator pos:start="127:49" pos:end="127:49">.</operator><name pos:start="127:50" pos:end="127:55">output</name><operator pos:start="127:56" pos:end="127:56">.</operator><name pos:start="127:57" pos:end="127:62">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="131:40"><expr pos:start="129:9" pos:end="131:39"><call pos:start="129:9" pos:end="131:39"><name pos:start="129:9" pos:end="129:21">buffer_append</name><argument_list pos:start="129:22" pos:end="131:39">(<argument pos:start="129:23" pos:end="129:43"><expr pos:start="129:23" pos:end="129:43"><operator pos:start="129:23" pos:end="129:23">&amp;</operator><name pos:start="129:24" pos:end="129:43"><name pos:start="129:24" pos:end="129:26">job</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:30">vs</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:43">jobs_buffer</name></name></expr></argument>, <argument pos:start="129:46" pos:end="129:61"><expr pos:start="129:46" pos:end="129:61"><name pos:start="129:46" pos:end="129:61"><name pos:start="129:46" pos:end="129:47">vs</name><operator pos:start="129:48" pos:end="129:48">.</operator><name pos:start="129:49" pos:end="129:54">output</name><operator pos:start="129:55" pos:end="129:55">.</operator><name pos:start="129:56" pos:end="129:61">buffer</name></name></expr></argument>,

                      <argument pos:start="131:23" pos:end="131:38"><expr pos:start="131:23" pos:end="131:38"><name pos:start="131:23" pos:end="131:38"><name pos:start="131:23" pos:end="131:24">vs</name><operator pos:start="131:25" pos:end="131:25">.</operator><name pos:start="131:26" pos:end="131:31">output</name><operator pos:start="131:32" pos:end="131:32">.</operator><name pos:start="131:33" pos:end="131:38">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





	<expr_stmt pos:start="137:9" pos:end="137:38"><expr pos:start="137:9" pos:end="137:37"><call pos:start="137:9" pos:end="137:37"><name pos:start="137:9" pos:end="137:24">qemu_bh_schedule</name><argument_list pos:start="137:25" pos:end="137:37">(<argument pos:start="137:26" pos:end="137:36"><expr pos:start="137:26" pos:end="137:36"><name pos:start="137:26" pos:end="137:36"><name pos:start="137:26" pos:end="137:28">job</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:32">vs</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:36">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if>  <else pos:start="139:8" pos:end="143:5">else <block pos:start="139:13" pos:end="143:5">{<block_content>



    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:31"><expr pos:start="145:5" pos:end="145:30"><call pos:start="145:5" pos:end="145:30"><name pos:start="145:5" pos:end="145:21">vnc_unlock_output</name><argument_list pos:start="145:22" pos:end="145:30">(<argument pos:start="145:23" pos:end="145:29"><expr pos:start="145:23" pos:end="145:29"><name pos:start="145:23" pos:end="145:29"><name pos:start="145:23" pos:end="145:25">job</name><operator pos:start="145:26" pos:end="145:27">-&gt;</operator><name pos:start="145:28" pos:end="145:29">vs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="149:1" pos:end="149:13"><name pos:start="149:1" pos:end="149:12">disconnected</name>:</label>

    <expr_stmt pos:start="151:5" pos:end="151:26"><expr pos:start="151:5" pos:end="151:25"><call pos:start="151:5" pos:end="151:25"><name pos:start="151:5" pos:end="151:18">vnc_lock_queue</name><argument_list pos:start="151:19" pos:end="151:25">(<argument pos:start="151:20" pos:end="151:24"><expr pos:start="151:20" pos:end="151:24"><name pos:start="151:20" pos:end="151:24">queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:43"><expr pos:start="153:5" pos:end="153:42"><call pos:start="153:5" pos:end="153:42"><name pos:start="153:5" pos:end="153:17">QTAILQ_REMOVE</name><argument_list pos:start="153:18" pos:end="153:42">(<argument pos:start="153:19" pos:end="153:30"><expr pos:start="153:19" pos:end="153:30"><operator pos:start="153:19" pos:end="153:19">&amp;</operator><name pos:start="153:20" pos:end="153:30"><name pos:start="153:20" pos:end="153:24">queue</name><operator pos:start="153:25" pos:end="153:26">-&gt;</operator><name pos:start="153:27" pos:end="153:30">jobs</name></name></expr></argument>, <argument pos:start="153:33" pos:end="153:35"><expr pos:start="153:33" pos:end="153:35"><name pos:start="153:33" pos:end="153:35">job</name></expr></argument>, <argument pos:start="153:38" pos:end="153:41"><expr pos:start="153:38" pos:end="153:41"><name pos:start="153:38" pos:end="153:41">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:28"><expr pos:start="155:5" pos:end="155:27"><call pos:start="155:5" pos:end="155:27"><name pos:start="155:5" pos:end="155:20">vnc_unlock_queue</name><argument_list pos:start="155:21" pos:end="155:27">(<argument pos:start="155:22" pos:end="155:26"><expr pos:start="155:22" pos:end="155:26"><name pos:start="155:22" pos:end="155:26">queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:38"><expr pos:start="157:5" pos:end="157:37"><call pos:start="157:5" pos:end="157:37"><name pos:start="157:5" pos:end="157:23">qemu_cond_broadcast</name><argument_list pos:start="157:24" pos:end="157:37">(<argument pos:start="157:25" pos:end="157:36"><expr pos:start="157:25" pos:end="157:36"><operator pos:start="157:25" pos:end="157:25">&amp;</operator><name pos:start="157:26" pos:end="157:36"><name pos:start="157:26" pos:end="157:30">queue</name><operator pos:start="157:31" pos:end="157:32">-&gt;</operator><name pos:start="157:33" pos:end="157:36">cond</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:16"><expr pos:start="159:5" pos:end="159:15"><call pos:start="159:5" pos:end="159:15"><name pos:start="159:5" pos:end="159:10">g_free</name><argument_list pos:start="159:11" pos:end="159:15">(<argument pos:start="159:12" pos:end="159:14"><expr pos:start="159:12" pos:end="159:14"><name pos:start="159:12" pos:end="159:14">job</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="161:5" pos:end="161:13">return <expr pos:start="161:12" pos:end="161:12"><literal type="number" pos:start="161:12" pos:end="161:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
