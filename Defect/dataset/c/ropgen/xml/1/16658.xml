<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16658.c" pos:tabs="8"><function pos:start="1:1" pos:end="132:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">cpu_dump_state</name> <parameter_list pos:start="1:21" pos:end="2:31">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:37"><name pos:start="1:22" pos:end="1:32">CPUPPCState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">env</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:46"><decl pos:start="1:40" pos:end="1:46"><type pos:start="1:40" pos:end="1:46"><name pos:start="1:40" pos:end="1:43">FILE</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">f</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:76"><decl pos:start="1:49" pos:end="1:76"><type pos:start="1:49" pos:end="1:76"><name pos:start="1:49" pos:end="1:64">fprintf_function</name></type> <name pos:start="1:66" pos:end="1:76">cpu_fprintf</name></decl></parameter>,
                     <parameter pos:start="2:22" pos:end="2:30"><decl pos:start="2:22" pos:end="2:30"><type pos:start="2:22" pos:end="2:30"><name pos:start="2:22" pos:end="2:24">int</name></type> <name pos:start="2:26" pos:end="2:30">flags</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="132:1">{<block_content pos:start="6:5" pos:end="132:0">
<cpp:define pos:start="4:1" pos:end="4:15">#<cpp:directive pos:start="4:2" pos:end="4:7">define</cpp:directive> <cpp:macro pos:start="4:9" pos:end="4:12"><name pos:start="4:9" pos:end="4:12">RGPL</name></cpp:macro>  <cpp:value pos:start="4:15" pos:end="4:15">4</cpp:value></cpp:define>
<cpp:define pos:start="5:1" pos:end="5:15">#<cpp:directive pos:start="5:2" pos:end="5:7">define</cpp:directive> <cpp:macro pos:start="5:9" pos:end="5:12"><name pos:start="5:9" pos:end="5:12">RFPL</name></cpp:macro>  <cpp:value pos:start="5:15" pos:end="5:15">4</cpp:value></cpp:define>
    <decl_stmt pos:start="6:5" pos:end="6:10"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">i</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="9:55"><expr pos:start="7:5" pos:end="9:54"><call pos:start="7:5" pos:end="9:54"><name pos:start="7:5" pos:end="7:15">cpu_fprintf</name><argument_list pos:start="7:16" pos:end="9:54">(<argument pos:start="7:17" pos:end="7:17"><expr pos:start="7:17" pos:end="7:17"><name pos:start="7:17" pos:end="7:17">f</name></expr></argument>, <argument pos:start="7:20" pos:end="8:56"><expr pos:start="7:20" pos:end="8:56"><literal type="string" pos:start="7:20" pos:end="7:25">"NIP "</literal> <name pos:start="7:27" pos:end="7:39">TARGET_FMT_lx</name> <literal type="string" pos:start="7:41" pos:end="7:48">"   LR "</literal> <name pos:start="7:50" pos:end="7:62">TARGET_FMT_lx</name> <literal type="string" pos:start="7:64" pos:end="7:70">" CTR "</literal>
                <name pos:start="8:17" pos:end="8:29">TARGET_FMT_lx</name> <literal type="string" pos:start="8:31" pos:end="8:37">" XER "</literal> <name pos:start="8:39" pos:end="8:51">TARGET_FMT_lx</name> <literal type="string" pos:start="8:53" pos:end="8:56">"\n"</literal></expr></argument>,
                <argument pos:start="9:17" pos:end="9:24"><expr pos:start="9:17" pos:end="9:24"><name pos:start="9:17" pos:end="9:24"><name pos:start="9:17" pos:end="9:19">env</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:24">nip</name></name></expr></argument>, <argument pos:start="9:27" pos:end="9:33"><expr pos:start="9:27" pos:end="9:33"><name pos:start="9:27" pos:end="9:33"><name pos:start="9:27" pos:end="9:29">env</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:33">lr</name></name></expr></argument>, <argument pos:start="9:36" pos:end="9:43"><expr pos:start="9:36" pos:end="9:43"><name pos:start="9:36" pos:end="9:43"><name pos:start="9:36" pos:end="9:38">env</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:43">ctr</name></name></expr></argument>, <argument pos:start="9:46" pos:end="9:53"><expr pos:start="9:46" pos:end="9:53"><name pos:start="9:46" pos:end="9:53"><name pos:start="9:46" pos:end="9:48">env</name><operator pos:start="9:49" pos:end="9:50">-&gt;</operator><name pos:start="9:51" pos:end="9:53">xer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="14:0"><expr pos:start="10:5" pos:end="12:42"><call pos:start="10:5" pos:end="12:42"><name pos:start="10:5" pos:end="10:15">cpu_fprintf</name><argument_list pos:start="10:16" pos:end="12:42">(<argument pos:start="10:17" pos:end="10:17"><expr pos:start="10:17" pos:end="10:17"><name pos:start="10:17" pos:end="10:17">f</name></expr></argument>, <argument pos:start="10:20" pos:end="11:41"><expr pos:start="10:20" pos:end="11:41"><literal type="string" pos:start="10:20" pos:end="10:25">"MSR "</literal> <name pos:start="10:27" pos:end="10:39">TARGET_FMT_lx</name> <literal type="string" pos:start="10:41" pos:end="10:48">" HID0 "</literal> <name pos:start="10:50" pos:end="10:62">TARGET_FMT_lx</name> <literal type="string" pos:start="10:64" pos:end="10:70">"  HF "</literal>
                <name pos:start="11:17" pos:end="11:29">TARGET_FMT_lx</name> <literal type="string" pos:start="11:31" pos:end="11:41">" idx %d\n"</literal></expr></argument>, <argument pos:start="11:44" pos:end="11:51"><expr pos:start="11:44" pos:end="11:51"><name pos:start="11:44" pos:end="11:51"><name pos:start="11:44" pos:end="11:46">env</name><operator pos:start="11:47" pos:end="11:48">-&gt;</operator><name pos:start="11:49" pos:end="11:51">msr</name></name></expr></argument>, <argument pos:start="11:54" pos:end="11:71"><expr pos:start="11:54" pos:end="11:71"><name pos:start="11:54" pos:end="11:71"><name pos:start="11:54" pos:end="11:56">env</name><operator pos:start="11:57" pos:end="11:58">-&gt;</operator><name pos:start="11:59" pos:end="11:61">spr</name><index pos:start="11:62" pos:end="11:71">[<expr pos:start="11:63" pos:end="11:70"><name pos:start="11:63" pos:end="11:70">SPR_HID0</name></expr>]</index></name></expr></argument>,
                <argument pos:start="12:17" pos:end="12:27"><expr pos:start="12:17" pos:end="12:27"><name pos:start="12:17" pos:end="12:27"><name pos:start="12:17" pos:end="12:19">env</name><operator pos:start="12:20" pos:end="12:21">-&gt;</operator><name pos:start="12:22" pos:end="12:27">hflags</name></name></expr></argument>, <argument pos:start="12:30" pos:end="12:41"><expr pos:start="12:30" pos:end="12:41"><name pos:start="12:30" pos:end="12:41"><name pos:start="12:30" pos:end="12:32">env</name><operator pos:start="12:33" pos:end="12:34">-&gt;</operator><name pos:start="12:35" pos:end="12:41">mmu_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if pos:start="13:1" pos:end="13:27">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:27"><operator pos:start="13:5" pos:end="13:5">!</operator><call pos:start="13:6" pos:end="13:27"><name pos:start="13:6" pos:end="13:12">defined</name><argument_list pos:start="13:13" pos:end="13:27">(<argument pos:start="13:14" pos:end="13:26"><expr pos:start="13:14" pos:end="13:26"><name pos:start="13:14" pos:end="13:26">NO_TIMER_DUMP</name></expr></argument>)</argument_list></call></expr></cpp:if>
    <expr_stmt pos:start="14:5" pos:end="25:0"><expr pos:start="14:5" pos:end="23:17"><call pos:start="14:5" pos:end="23:17"><name pos:start="14:5" pos:end="14:15">cpu_fprintf</name><argument_list pos:start="14:16" pos:end="23:17">(<argument pos:start="14:17" pos:end="14:17"><expr pos:start="14:17" pos:end="14:17"><name pos:start="14:17" pos:end="14:17">f</name></expr></argument>, <argument pos:start="14:20" pos:end="18:20"><expr pos:start="14:20" pos:end="18:20"><literal type="string" pos:start="14:20" pos:end="14:27">"TB %08"</literal> <name pos:start="14:29" pos:end="14:34">PRIu32</name> <literal type="string" pos:start="14:36" pos:end="14:41">" %08"</literal> <name pos:start="14:43" pos:end="16:0">PRIu64</name>
<cpp:if pos:start="15:1" pos:end="15:30">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:30"><operator pos:start="15:5" pos:end="15:5">!</operator><call pos:start="15:6" pos:end="15:30"><name pos:start="15:6" pos:end="15:12">defined</name><argument_list pos:start="15:13" pos:end="15:30">(<argument pos:start="15:14" pos:end="15:29"><expr pos:start="15:14" pos:end="15:29"><name pos:start="15:14" pos:end="15:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>
                <literal type="string" pos:start="16:17" pos:end="16:27">" DECR %08"</literal> <name pos:start="16:29" pos:end="18:0">PRIu32</name>
<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>
                <literal type="string" pos:start="18:17" pos:end="18:20">"\n"</literal></expr></argument>,
                <argument pos:start="19:17" pos:end="19:37"><expr pos:start="19:17" pos:end="19:37"><call pos:start="19:17" pos:end="19:37"><name pos:start="19:17" pos:end="19:32">cpu_ppc_load_tbu</name><argument_list pos:start="19:33" pos:end="19:37">(<argument pos:start="19:34" pos:end="19:36"><expr pos:start="19:34" pos:end="19:36"><name pos:start="19:34" pos:end="19:36">env</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:40" pos:end="21:0"><expr pos:start="19:40" pos:end="21:0"><call pos:start="19:40" pos:end="21:0"><name pos:start="19:40" pos:end="19:55">cpu_ppc_load_tbl</name><argument_list pos:start="19:56" pos:end="21:0">(<argument pos:start="19:57" pos:end="19:59"><expr pos:start="19:57" pos:end="19:59"><name pos:start="19:57" pos:end="19:59">env</name></expr></argument>)</argument_list></call></expr></argument>
<cpp:if pos:start="20:1" pos:end="20:30">#<cpp:directive pos:start="20:2" pos:end="20:3">if</cpp:directive> <expr pos:start="20:5" pos:end="20:30"><operator pos:start="20:5" pos:end="20:5">!</operator><call pos:start="20:6" pos:end="20:30"><name pos:start="20:6" pos:end="20:12">defined</name><argument_list pos:start="20:13" pos:end="20:30">(<argument pos:start="20:14" pos:end="20:29"><expr pos:start="20:14" pos:end="20:29"><name pos:start="20:14" pos:end="20:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>
                , <argument pos:start="21:19" pos:end="23:0"><expr pos:start="21:19" pos:end="23:0"><call pos:start="21:19" pos:end="23:0"><name pos:start="21:19" pos:end="21:35">cpu_ppc_load_decr</name><argument_list pos:start="21:36" pos:end="23:0">(<argument pos:start="21:37" pos:end="21:39"><expr pos:start="21:37" pos:end="21:39"><name pos:start="21:37" pos:end="21:39">env</name></expr></argument>)</argument_list></call></expr></argument>
<cpp:endif pos:start="22:1" pos:end="22:6">#<cpp:directive pos:start="22:2" pos:end="22:6">endif</cpp:directive></cpp:endif>
                )</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="24:1" pos:end="24:6">#<cpp:directive pos:start="24:2" pos:end="24:6">endif</cpp:directive></cpp:endif>
    <for pos:start="25:5" pos:end="31:5">for <control pos:start="25:9" pos:end="25:28">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:23"><expr pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <literal type="number" pos:start="25:21" pos:end="25:22">32</literal></expr>;</condition> <incr pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:25">i</name><operator pos:start="25:26" pos:end="25:27">++</operator></expr></incr>)</control> <block pos:start="25:30" pos:end="31:5">{<block_content pos:start="26:9" pos:end="30:33">
        <if_stmt pos:start="26:9" pos:end="27:41"><if pos:start="26:9" pos:end="27:41">if <condition pos:start="26:12" pos:end="26:34">(<expr pos:start="26:13" pos:end="26:33"><operator pos:start="26:13" pos:end="26:13">(</operator><name pos:start="26:14" pos:end="26:14">i</name> <operator pos:start="26:16" pos:end="26:16">&amp;</operator> <operator pos:start="26:18" pos:end="26:18">(</operator><name pos:start="26:19" pos:end="26:22">RGPL</name> <operator pos:start="26:24" pos:end="26:24">-</operator> <literal type="number" pos:start="26:26" pos:end="26:26">1</literal><operator pos:start="26:27" pos:end="26:27">)</operator><operator pos:start="26:28" pos:end="26:28">)</operator> <operator pos:start="26:30" pos:end="26:31">==</operator> <literal type="number" pos:start="26:33" pos:end="26:33">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:41"><block_content pos:start="27:13" pos:end="27:41">
            <expr_stmt pos:start="27:13" pos:end="27:41"><expr pos:start="27:13" pos:end="27:40"><call pos:start="27:13" pos:end="27:40"><name pos:start="27:13" pos:end="27:23">cpu_fprintf</name><argument_list pos:start="27:24" pos:end="27:40">(<argument pos:start="27:25" pos:end="27:25"><expr pos:start="27:25" pos:end="27:25"><name pos:start="27:25" pos:end="27:25">f</name></expr></argument>, <argument pos:start="27:28" pos:end="27:36"><expr pos:start="27:28" pos:end="27:36"><literal type="string" pos:start="27:28" pos:end="27:36">"GPR%02d"</literal></expr></argument>, <argument pos:start="27:39" pos:end="27:39"><expr pos:start="27:39" pos:end="27:39"><name pos:start="27:39" pos:end="27:39">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="28:9" pos:end="28:61"><expr pos:start="28:9" pos:end="28:60"><call pos:start="28:9" pos:end="28:60"><name pos:start="28:9" pos:end="28:19">cpu_fprintf</name><argument_list pos:start="28:20" pos:end="28:60">(<argument pos:start="28:21" pos:end="28:21"><expr pos:start="28:21" pos:end="28:21"><name pos:start="28:21" pos:end="28:21">f</name></expr></argument>, <argument pos:start="28:24" pos:end="28:37"><expr pos:start="28:24" pos:end="28:37"><literal type="string" pos:start="28:24" pos:end="28:30">" %016"</literal> <name pos:start="28:32" pos:end="28:37">PRIx64</name></expr></argument>, <argument pos:start="28:40" pos:end="28:59"><expr pos:start="28:40" pos:end="28:59"><call pos:start="28:40" pos:end="28:59"><name pos:start="28:40" pos:end="28:51">ppc_dump_gpr</name><argument_list pos:start="28:52" pos:end="28:59">(<argument pos:start="28:53" pos:end="28:55"><expr pos:start="28:53" pos:end="28:55"><name pos:start="28:53" pos:end="28:55">env</name></expr></argument>, <argument pos:start="28:58" pos:end="28:58"><expr pos:start="28:58" pos:end="28:58"><name pos:start="28:58" pos:end="28:58">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="29:9" pos:end="30:33"><if pos:start="29:9" pos:end="30:33">if <condition pos:start="29:12" pos:end="29:43">(<expr pos:start="29:13" pos:end="29:42"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:14">i</name> <operator pos:start="29:16" pos:end="29:16">&amp;</operator> <operator pos:start="29:18" pos:end="29:18">(</operator><name pos:start="29:19" pos:end="29:22">RGPL</name> <operator pos:start="29:24" pos:end="29:24">-</operator> <literal type="number" pos:start="29:26" pos:end="29:26">1</literal><operator pos:start="29:27" pos:end="29:27">)</operator><operator pos:start="29:28" pos:end="29:28">)</operator> <operator pos:start="29:30" pos:end="29:31">==</operator> <operator pos:start="29:33" pos:end="29:33">(</operator><name pos:start="29:34" pos:end="29:37">RGPL</name> <operator pos:start="29:39" pos:end="29:39">-</operator> <literal type="number" pos:start="29:41" pos:end="29:41">1</literal><operator pos:start="29:42" pos:end="29:42">)</operator></expr>)</condition><block type="pseudo" pos:start="30:13" pos:end="30:33"><block_content pos:start="30:13" pos:end="30:33">
            <expr_stmt pos:start="30:13" pos:end="30:33"><expr pos:start="30:13" pos:end="30:32"><call pos:start="30:13" pos:end="30:32"><name pos:start="30:13" pos:end="30:23">cpu_fprintf</name><argument_list pos:start="30:24" pos:end="30:32">(<argument pos:start="30:25" pos:end="30:25"><expr pos:start="30:25" pos:end="30:25"><name pos:start="30:25" pos:end="30:25">f</name></expr></argument>, <argument pos:start="30:28" pos:end="30:31"><expr pos:start="30:28" pos:end="30:31"><literal type="string" pos:start="30:28" pos:end="30:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="32:5" pos:end="32:26"><expr pos:start="32:5" pos:end="32:25"><call pos:start="32:5" pos:end="32:25"><name pos:start="32:5" pos:end="32:15">cpu_fprintf</name><argument_list pos:start="32:16" pos:end="32:25">(<argument pos:start="32:17" pos:end="32:17"><expr pos:start="32:17" pos:end="32:17"><name pos:start="32:17" pos:end="32:17">f</name></expr></argument>, <argument pos:start="32:20" pos:end="32:24"><expr pos:start="32:20" pos:end="32:24"><literal type="string" pos:start="32:20" pos:end="32:24">"CR "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="33:5" pos:end="34:44">for <control pos:start="33:9" pos:end="33:27">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <literal type="number" pos:start="33:21" pos:end="33:21">8</literal></expr>;</condition> <incr pos:start="33:24" pos:end="33:26"><expr pos:start="33:24" pos:end="33:26"><name pos:start="33:24" pos:end="33:24">i</name><operator pos:start="33:25" pos:end="33:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="34:9" pos:end="34:44"><block_content pos:start="34:9" pos:end="34:44">
        <expr_stmt pos:start="34:9" pos:end="34:44"><expr pos:start="34:9" pos:end="34:43"><call pos:start="34:9" pos:end="34:43"><name pos:start="34:9" pos:end="34:19">cpu_fprintf</name><argument_list pos:start="34:20" pos:end="34:43">(<argument pos:start="34:21" pos:end="34:21"><expr pos:start="34:21" pos:end="34:21"><name pos:start="34:21" pos:end="34:21">f</name></expr></argument>, <argument pos:start="34:24" pos:end="34:29"><expr pos:start="34:24" pos:end="34:29"><literal type="string" pos:start="34:24" pos:end="34:29">"%01x"</literal></expr></argument>, <argument pos:start="34:32" pos:end="34:42"><expr pos:start="34:32" pos:end="34:42"><name pos:start="34:32" pos:end="34:42"><name pos:start="34:32" pos:end="34:34">env</name><operator pos:start="34:35" pos:end="34:36">-&gt;</operator><name pos:start="34:37" pos:end="34:39">crf</name><index pos:start="34:40" pos:end="34:42">[<expr pos:start="34:41" pos:end="34:41"><name pos:start="34:41" pos:end="34:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><call pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:15">cpu_fprintf</name><argument_list pos:start="35:16" pos:end="35:25">(<argument pos:start="35:17" pos:end="35:17"><expr pos:start="35:17" pos:end="35:17"><name pos:start="35:17" pos:end="35:17">f</name></expr></argument>, <argument pos:start="35:20" pos:end="35:24"><expr pos:start="35:20" pos:end="35:24"><literal type="string" pos:start="35:20" pos:end="35:24">"  ["</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="36:5" pos:end="45:5">for <control pos:start="36:9" pos:end="36:27">(<init pos:start="36:10" pos:end="36:15"><expr pos:start="36:10" pos:end="36:14"><name pos:start="36:10" pos:end="36:10">i</name> <operator pos:start="36:12" pos:end="36:12">=</operator> <literal type="number" pos:start="36:14" pos:end="36:14">0</literal></expr>;</init> <condition pos:start="36:17" pos:end="36:22"><expr pos:start="36:17" pos:end="36:21"><name pos:start="36:17" pos:end="36:17">i</name> <operator pos:start="36:19" pos:end="36:19">&lt;</operator> <literal type="number" pos:start="36:21" pos:end="36:21">8</literal></expr>;</condition> <incr pos:start="36:24" pos:end="36:26"><expr pos:start="36:24" pos:end="36:26"><name pos:start="36:24" pos:end="36:24">i</name><operator pos:start="36:25" pos:end="36:26">++</operator></expr></incr>)</control> <block pos:start="36:29" pos:end="45:5">{<block_content pos:start="37:9" pos:end="44:67">
        <decl_stmt pos:start="37:9" pos:end="37:21"><decl pos:start="37:9" pos:end="37:20"><type pos:start="37:9" pos:end="37:12"><name pos:start="37:9" pos:end="37:12">char</name></type> <name pos:start="37:14" pos:end="37:14">a</name> <init pos:start="37:16" pos:end="37:20">= <expr pos:start="37:18" pos:end="37:20"><literal type="char" pos:start="37:18" pos:end="37:20">'-'</literal></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="38:9" pos:end="43:20"><if pos:start="38:9" pos:end="39:20">if <condition pos:start="38:12" pos:end="38:31">(<expr pos:start="38:13" pos:end="38:30"><name pos:start="38:13" pos:end="38:23"><name pos:start="38:13" pos:end="38:15">env</name><operator pos:start="38:16" pos:end="38:17">-&gt;</operator><name pos:start="38:18" pos:end="38:20">crf</name><index pos:start="38:21" pos:end="38:23">[<expr pos:start="38:22" pos:end="38:22"><name pos:start="38:22" pos:end="38:22">i</name></expr>]</index></name> <operator pos:start="38:25" pos:end="38:25">&amp;</operator> <literal type="number" pos:start="38:27" pos:end="38:30">0x08</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:20"><block_content pos:start="39:13" pos:end="39:20">
            <expr_stmt pos:start="39:13" pos:end="39:20"><expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:13">a</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <literal type="char" pos:start="39:17" pos:end="39:19">'L'</literal></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="40:9" pos:end="41:20">else if <condition pos:start="40:17" pos:end="40:36">(<expr pos:start="40:18" pos:end="40:35"><name pos:start="40:18" pos:end="40:28"><name pos:start="40:18" pos:end="40:20">env</name><operator pos:start="40:21" pos:end="40:22">-&gt;</operator><name pos:start="40:23" pos:end="40:25">crf</name><index pos:start="40:26" pos:end="40:28">[<expr pos:start="40:27" pos:end="40:27"><name pos:start="40:27" pos:end="40:27">i</name></expr>]</index></name> <operator pos:start="40:30" pos:end="40:30">&amp;</operator> <literal type="number" pos:start="40:32" pos:end="40:35">0x04</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:20"><block_content pos:start="41:13" pos:end="41:20">
            <expr_stmt pos:start="41:13" pos:end="41:20"><expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:13">a</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <literal type="char" pos:start="41:17" pos:end="41:19">'G'</literal></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="42:9" pos:end="43:20">else if <condition pos:start="42:17" pos:end="42:36">(<expr pos:start="42:18" pos:end="42:35"><name pos:start="42:18" pos:end="42:28"><name pos:start="42:18" pos:end="42:20">env</name><operator pos:start="42:21" pos:end="42:22">-&gt;</operator><name pos:start="42:23" pos:end="42:25">crf</name><index pos:start="42:26" pos:end="42:28">[<expr pos:start="42:27" pos:end="42:27"><name pos:start="42:27" pos:end="42:27">i</name></expr>]</index></name> <operator pos:start="42:30" pos:end="42:30">&amp;</operator> <literal type="number" pos:start="42:32" pos:end="42:35">0x02</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:20"><block_content pos:start="43:13" pos:end="43:20">
            <expr_stmt pos:start="43:13" pos:end="43:20"><expr pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:13">a</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <literal type="char" pos:start="43:17" pos:end="43:19">'E'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="44:9" pos:end="44:67"><expr pos:start="44:9" pos:end="44:66"><call pos:start="44:9" pos:end="44:66"><name pos:start="44:9" pos:end="44:19">cpu_fprintf</name><argument_list pos:start="44:20" pos:end="44:66">(<argument pos:start="44:21" pos:end="44:21"><expr pos:start="44:21" pos:end="44:21"><name pos:start="44:21" pos:end="44:21">f</name></expr></argument>, <argument pos:start="44:24" pos:end="44:30"><expr pos:start="44:24" pos:end="44:30"><literal type="string" pos:start="44:24" pos:end="44:30">" %c%c"</literal></expr></argument>, <argument pos:start="44:33" pos:end="44:33"><expr pos:start="44:33" pos:end="44:33"><name pos:start="44:33" pos:end="44:33">a</name></expr></argument>, <argument pos:start="44:36" pos:end="44:65"><expr pos:start="44:36" pos:end="44:65"><ternary pos:start="44:36" pos:end="44:65"><condition pos:start="44:36" pos:end="44:55"><expr pos:start="44:36" pos:end="44:53"><name pos:start="44:36" pos:end="44:46"><name pos:start="44:36" pos:end="44:38">env</name><operator pos:start="44:39" pos:end="44:40">-&gt;</operator><name pos:start="44:41" pos:end="44:43">crf</name><index pos:start="44:44" pos:end="44:46">[<expr pos:start="44:45" pos:end="44:45"><name pos:start="44:45" pos:end="44:45">i</name></expr>]</index></name> <operator pos:start="44:48" pos:end="44:48">&amp;</operator> <literal type="number" pos:start="44:50" pos:end="44:53">0x01</literal></expr> ?</condition><then pos:start="44:57" pos:end="44:59"> <expr pos:start="44:57" pos:end="44:59"><literal type="char" pos:start="44:57" pos:end="44:59">'O'</literal></expr> </then><else pos:start="44:61" pos:end="44:65">: <expr pos:start="44:63" pos:end="44:65"><literal type="char" pos:start="44:63" pos:end="44:65">' '</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="46:5" pos:end="47:35"><expr pos:start="46:5" pos:end="47:34"><call pos:start="46:5" pos:end="47:34"><name pos:start="46:5" pos:end="46:15">cpu_fprintf</name><argument_list pos:start="46:16" pos:end="47:34">(<argument pos:start="46:17" pos:end="46:17"><expr pos:start="46:17" pos:end="46:17"><name pos:start="46:17" pos:end="46:17">f</name></expr></argument>, <argument pos:start="46:20" pos:end="46:59"><expr pos:start="46:20" pos:end="46:59"><literal type="string" pos:start="46:20" pos:end="46:40">" ]             RES "</literal> <name pos:start="46:42" pos:end="46:54">TARGET_FMT_lx</name> <literal type="string" pos:start="46:56" pos:end="46:59">"\n"</literal></expr></argument>,
                <argument pos:start="47:17" pos:end="47:33"><expr pos:start="47:17" pos:end="47:33"><name pos:start="47:17" pos:end="47:33"><name pos:start="47:17" pos:end="47:19">env</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:33">reserve_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="48:5" pos:end="54:5">for <control pos:start="48:9" pos:end="48:28">(<init pos:start="48:10" pos:end="48:15"><expr pos:start="48:10" pos:end="48:14"><name pos:start="48:10" pos:end="48:10">i</name> <operator pos:start="48:12" pos:end="48:12">=</operator> <literal type="number" pos:start="48:14" pos:end="48:14">0</literal></expr>;</init> <condition pos:start="48:17" pos:end="48:23"><expr pos:start="48:17" pos:end="48:22"><name pos:start="48:17" pos:end="48:17">i</name> <operator pos:start="48:19" pos:end="48:19">&lt;</operator> <literal type="number" pos:start="48:21" pos:end="48:22">32</literal></expr>;</condition> <incr pos:start="48:25" pos:end="48:27"><expr pos:start="48:25" pos:end="48:27"><name pos:start="48:25" pos:end="48:25">i</name><operator pos:start="48:26" pos:end="48:27">++</operator></expr></incr>)</control> <block pos:start="48:30" pos:end="54:5">{<block_content pos:start="49:9" pos:end="53:33">
        <if_stmt pos:start="49:9" pos:end="50:41"><if pos:start="49:9" pos:end="50:41">if <condition pos:start="49:12" pos:end="49:34">(<expr pos:start="49:13" pos:end="49:33"><operator pos:start="49:13" pos:end="49:13">(</operator><name pos:start="49:14" pos:end="49:14">i</name> <operator pos:start="49:16" pos:end="49:16">&amp;</operator> <operator pos:start="49:18" pos:end="49:18">(</operator><name pos:start="49:19" pos:end="49:22">RFPL</name> <operator pos:start="49:24" pos:end="49:24">-</operator> <literal type="number" pos:start="49:26" pos:end="49:26">1</literal><operator pos:start="49:27" pos:end="49:27">)</operator><operator pos:start="49:28" pos:end="49:28">)</operator> <operator pos:start="49:30" pos:end="49:31">==</operator> <literal type="number" pos:start="49:33" pos:end="49:33">0</literal></expr>)</condition><block type="pseudo" pos:start="50:13" pos:end="50:41"><block_content pos:start="50:13" pos:end="50:41">
            <expr_stmt pos:start="50:13" pos:end="50:41"><expr pos:start="50:13" pos:end="50:40"><call pos:start="50:13" pos:end="50:40"><name pos:start="50:13" pos:end="50:23">cpu_fprintf</name><argument_list pos:start="50:24" pos:end="50:40">(<argument pos:start="50:25" pos:end="50:25"><expr pos:start="50:25" pos:end="50:25"><name pos:start="50:25" pos:end="50:25">f</name></expr></argument>, <argument pos:start="50:28" pos:end="50:36"><expr pos:start="50:28" pos:end="50:36"><literal type="string" pos:start="50:28" pos:end="50:36">"FPR%02d"</literal></expr></argument>, <argument pos:start="50:39" pos:end="50:39"><expr pos:start="50:39" pos:end="50:39"><name pos:start="50:39" pos:end="50:39">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="51:9" pos:end="51:68"><expr pos:start="51:9" pos:end="51:67"><call pos:start="51:9" pos:end="51:67"><name pos:start="51:9" pos:end="51:19">cpu_fprintf</name><argument_list pos:start="51:20" pos:end="51:67">(<argument pos:start="51:21" pos:end="51:21"><expr pos:start="51:21" pos:end="51:21"><name pos:start="51:21" pos:end="51:21">f</name></expr></argument>, <argument pos:start="51:24" pos:end="51:37"><expr pos:start="51:24" pos:end="51:37"><literal type="string" pos:start="51:24" pos:end="51:30">" %016"</literal> <name pos:start="51:32" pos:end="51:37">PRIx64</name></expr></argument>, <argument pos:start="51:40" pos:end="51:66"><expr pos:start="51:40" pos:end="51:66"><operator pos:start="51:40" pos:end="51:40">*</operator><operator pos:start="51:41" pos:end="51:41">(</operator><operator pos:start="51:42" pos:end="51:42">(</operator><name pos:start="51:43" pos:end="51:50">uint64_t</name> <operator pos:start="51:52" pos:end="51:52">*</operator><operator pos:start="51:53" pos:end="51:53">)</operator><operator pos:start="51:54" pos:end="51:54">&amp;</operator><name pos:start="51:55" pos:end="51:65"><name pos:start="51:55" pos:end="51:57">env</name><operator pos:start="51:58" pos:end="51:59">-&gt;</operator><name pos:start="51:60" pos:end="51:62">fpr</name><index pos:start="51:63" pos:end="51:65">[<expr pos:start="51:64" pos:end="51:64"><name pos:start="51:64" pos:end="51:64">i</name></expr>]</index></name><operator pos:start="51:66" pos:end="51:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="52:9" pos:end="53:33"><if pos:start="52:9" pos:end="53:33">if <condition pos:start="52:12" pos:end="52:43">(<expr pos:start="52:13" pos:end="52:42"><operator pos:start="52:13" pos:end="52:13">(</operator><name pos:start="52:14" pos:end="52:14">i</name> <operator pos:start="52:16" pos:end="52:16">&amp;</operator> <operator pos:start="52:18" pos:end="52:18">(</operator><name pos:start="52:19" pos:end="52:22">RFPL</name> <operator pos:start="52:24" pos:end="52:24">-</operator> <literal type="number" pos:start="52:26" pos:end="52:26">1</literal><operator pos:start="52:27" pos:end="52:27">)</operator><operator pos:start="52:28" pos:end="52:28">)</operator> <operator pos:start="52:30" pos:end="52:31">==</operator> <operator pos:start="52:33" pos:end="52:33">(</operator><name pos:start="52:34" pos:end="52:37">RFPL</name> <operator pos:start="52:39" pos:end="52:39">-</operator> <literal type="number" pos:start="52:41" pos:end="52:41">1</literal><operator pos:start="52:42" pos:end="52:42">)</operator></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:33"><block_content pos:start="53:13" pos:end="53:33">
            <expr_stmt pos:start="53:13" pos:end="53:33"><expr pos:start="53:13" pos:end="53:32"><call pos:start="53:13" pos:end="53:32"><name pos:start="53:13" pos:end="53:23">cpu_fprintf</name><argument_list pos:start="53:24" pos:end="53:32">(<argument pos:start="53:25" pos:end="53:25"><expr pos:start="53:25" pos:end="53:25"><name pos:start="53:25" pos:end="53:25">f</name></expr></argument>, <argument pos:start="53:28" pos:end="53:31"><expr pos:start="53:28" pos:end="53:31"><literal type="string" pos:start="53:28" pos:end="53:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="55:5" pos:end="57:0"><expr pos:start="55:5" pos:end="55:46"><call pos:start="55:5" pos:end="55:46"><name pos:start="55:5" pos:end="55:15">cpu_fprintf</name><argument_list pos:start="55:16" pos:end="55:46">(<argument pos:start="55:17" pos:end="55:17"><expr pos:start="55:17" pos:end="55:17"><name pos:start="55:17" pos:end="55:17">f</name></expr></argument>, <argument pos:start="55:20" pos:end="55:33"><expr pos:start="55:20" pos:end="55:33"><literal type="string" pos:start="55:20" pos:end="55:33">"FPSCR %08x\n"</literal></expr></argument>, <argument pos:start="55:36" pos:end="55:45"><expr pos:start="55:36" pos:end="55:45"><name pos:start="55:36" pos:end="55:45"><name pos:start="55:36" pos:end="55:38">env</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:45">fpscr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if pos:start="56:1" pos:end="56:30">#<cpp:directive pos:start="56:2" pos:end="56:3">if</cpp:directive> <expr pos:start="56:5" pos:end="56:30"><operator pos:start="56:5" pos:end="56:5">!</operator><call pos:start="56:6" pos:end="56:30"><name pos:start="56:6" pos:end="56:12">defined</name><argument_list pos:start="56:13" pos:end="56:30">(<argument pos:start="56:14" pos:end="56:29"><expr pos:start="56:14" pos:end="56:29"><name pos:start="56:14" pos:end="56:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>
    <expr_stmt pos:start="57:5" pos:end="60:57"><expr pos:start="57:5" pos:end="60:56"><call pos:start="57:5" pos:end="60:56"><name pos:start="57:5" pos:end="57:15">cpu_fprintf</name><argument_list pos:start="57:16" pos:end="60:56">(<argument pos:start="57:17" pos:end="57:17"><expr pos:start="57:17" pos:end="57:17"><name pos:start="57:17" pos:end="57:17">f</name></expr></argument>, <argument pos:start="57:20" pos:end="58:73"><expr pos:start="57:20" pos:end="58:73"><literal type="string" pos:start="57:20" pos:end="57:27">" SRR0 "</literal> <name pos:start="57:29" pos:end="57:41">TARGET_FMT_lx</name> <literal type="string" pos:start="57:43" pos:end="57:51">"  SRR1 "</literal> <name pos:start="57:53" pos:end="57:65">TARGET_FMT_lx</name>
                   <literal type="string" pos:start="58:20" pos:end="58:29">"    PVR "</literal> <name pos:start="58:31" pos:end="58:43">TARGET_FMT_lx</name> <literal type="string" pos:start="58:45" pos:end="58:54">" VRSAVE "</literal> <name pos:start="58:56" pos:end="58:68">TARGET_FMT_lx</name> <literal type="string" pos:start="58:70" pos:end="58:73">"\n"</literal></expr></argument>,
                <argument pos:start="59:17" pos:end="59:34"><expr pos:start="59:17" pos:end="59:34"><name pos:start="59:17" pos:end="59:34"><name pos:start="59:17" pos:end="59:19">env</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:24">spr</name><index pos:start="59:25" pos:end="59:34">[<expr pos:start="59:26" pos:end="59:33"><name pos:start="59:26" pos:end="59:33">SPR_SRR0</name></expr>]</index></name></expr></argument>, <argument pos:start="59:37" pos:end="59:54"><expr pos:start="59:37" pos:end="59:54"><name pos:start="59:37" pos:end="59:54"><name pos:start="59:37" pos:end="59:39">env</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:44">spr</name><index pos:start="59:45" pos:end="59:54">[<expr pos:start="59:46" pos:end="59:53"><name pos:start="59:46" pos:end="59:53">SPR_SRR1</name></expr>]</index></name></expr></argument>,
                <argument pos:start="60:17" pos:end="60:33"><expr pos:start="60:17" pos:end="60:33"><name pos:start="60:17" pos:end="60:33"><name pos:start="60:17" pos:end="60:19">env</name><operator pos:start="60:20" pos:end="60:21">-&gt;</operator><name pos:start="60:22" pos:end="60:24">spr</name><index pos:start="60:25" pos:end="60:33">[<expr pos:start="60:26" pos:end="60:32"><name pos:start="60:26" pos:end="60:32">SPR_PVR</name></expr>]</index></name></expr></argument>, <argument pos:start="60:36" pos:end="60:55"><expr pos:start="60:36" pos:end="60:55"><name pos:start="60:36" pos:end="60:55"><name pos:start="60:36" pos:end="60:38">env</name><operator pos:start="60:39" pos:end="60:40">-&gt;</operator><name pos:start="60:41" pos:end="60:43">spr</name><index pos:start="60:44" pos:end="60:55">[<expr pos:start="60:45" pos:end="60:54"><name pos:start="60:45" pos:end="60:54">SPR_VRSAVE</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="61:5" pos:end="64:58"><expr pos:start="61:5" pos:end="64:57"><call pos:start="61:5" pos:end="64:57"><name pos:start="61:5" pos:end="61:15">cpu_fprintf</name><argument_list pos:start="61:16" pos:end="64:57">(<argument pos:start="61:17" pos:end="61:17"><expr pos:start="61:17" pos:end="61:17"><name pos:start="61:17" pos:end="61:17">f</name></expr></argument>, <argument pos:start="61:20" pos:end="62:73"><expr pos:start="61:20" pos:end="62:73"><literal type="string" pos:start="61:20" pos:end="61:27">"SPRG0 "</literal> <name pos:start="61:29" pos:end="61:41">TARGET_FMT_lx</name> <literal type="string" pos:start="61:43" pos:end="61:51">" SPRG1 "</literal> <name pos:start="61:53" pos:end="61:65">TARGET_FMT_lx</name>
                   <literal type="string" pos:start="62:20" pos:end="62:29">"  SPRG2 "</literal> <name pos:start="62:31" pos:end="62:43">TARGET_FMT_lx</name> <literal type="string" pos:start="62:45" pos:end="62:54">"  SPRG3 "</literal> <name pos:start="62:56" pos:end="62:68">TARGET_FMT_lx</name> <literal type="string" pos:start="62:70" pos:end="62:73">"\n"</literal></expr></argument>,
                <argument pos:start="63:17" pos:end="63:35"><expr pos:start="63:17" pos:end="63:35"><name pos:start="63:17" pos:end="63:35"><name pos:start="63:17" pos:end="63:19">env</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:24">spr</name><index pos:start="63:25" pos:end="63:35">[<expr pos:start="63:26" pos:end="63:34"><name pos:start="63:26" pos:end="63:34">SPR_SPRG0</name></expr>]</index></name></expr></argument>, <argument pos:start="63:38" pos:end="63:56"><expr pos:start="63:38" pos:end="63:56"><name pos:start="63:38" pos:end="63:56"><name pos:start="63:38" pos:end="63:40">env</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:45">spr</name><index pos:start="63:46" pos:end="63:56">[<expr pos:start="63:47" pos:end="63:55"><name pos:start="63:47" pos:end="63:55">SPR_SPRG1</name></expr>]</index></name></expr></argument>,
                <argument pos:start="64:17" pos:end="64:35"><expr pos:start="64:17" pos:end="64:35"><name pos:start="64:17" pos:end="64:35"><name pos:start="64:17" pos:end="64:19">env</name><operator pos:start="64:20" pos:end="64:21">-&gt;</operator><name pos:start="64:22" pos:end="64:24">spr</name><index pos:start="64:25" pos:end="64:35">[<expr pos:start="64:26" pos:end="64:34"><name pos:start="64:26" pos:end="64:34">SPR_SPRG2</name></expr>]</index></name></expr></argument>, <argument pos:start="64:38" pos:end="64:56"><expr pos:start="64:38" pos:end="64:56"><name pos:start="64:38" pos:end="64:56"><name pos:start="64:38" pos:end="64:40">env</name><operator pos:start="64:41" pos:end="64:42">-&gt;</operator><name pos:start="64:43" pos:end="64:45">spr</name><index pos:start="64:46" pos:end="64:56">[<expr pos:start="64:47" pos:end="64:55"><name pos:start="64:47" pos:end="64:55">SPR_SPRG3</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="65:5" pos:end="68:58"><expr pos:start="65:5" pos:end="68:57"><call pos:start="65:5" pos:end="68:57"><name pos:start="65:5" pos:end="65:15">cpu_fprintf</name><argument_list pos:start="65:16" pos:end="68:57">(<argument pos:start="65:17" pos:end="65:17"><expr pos:start="65:17" pos:end="65:17"><name pos:start="65:17" pos:end="65:17">f</name></expr></argument>, <argument pos:start="65:20" pos:end="66:73"><expr pos:start="65:20" pos:end="66:73"><literal type="string" pos:start="65:20" pos:end="65:27">"SPRG4 "</literal> <name pos:start="65:29" pos:end="65:41">TARGET_FMT_lx</name> <literal type="string" pos:start="65:43" pos:end="65:51">" SPRG5 "</literal> <name pos:start="65:53" pos:end="65:65">TARGET_FMT_lx</name>
                   <literal type="string" pos:start="66:20" pos:end="66:29">"  SPRG6 "</literal> <name pos:start="66:31" pos:end="66:43">TARGET_FMT_lx</name> <literal type="string" pos:start="66:45" pos:end="66:54">"  SPRG7 "</literal> <name pos:start="66:56" pos:end="66:68">TARGET_FMT_lx</name> <literal type="string" pos:start="66:70" pos:end="66:73">"\n"</literal></expr></argument>,
                <argument pos:start="67:17" pos:end="67:35"><expr pos:start="67:17" pos:end="67:35"><name pos:start="67:17" pos:end="67:35"><name pos:start="67:17" pos:end="67:19">env</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:24">spr</name><index pos:start="67:25" pos:end="67:35">[<expr pos:start="67:26" pos:end="67:34"><name pos:start="67:26" pos:end="67:34">SPR_SPRG4</name></expr>]</index></name></expr></argument>, <argument pos:start="67:38" pos:end="67:56"><expr pos:start="67:38" pos:end="67:56"><name pos:start="67:38" pos:end="67:56"><name pos:start="67:38" pos:end="67:40">env</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:45">spr</name><index pos:start="67:46" pos:end="67:56">[<expr pos:start="67:47" pos:end="67:55"><name pos:start="67:47" pos:end="67:55">SPR_SPRG5</name></expr>]</index></name></expr></argument>,
                <argument pos:start="68:17" pos:end="68:35"><expr pos:start="68:17" pos:end="68:35"><name pos:start="68:17" pos:end="68:35"><name pos:start="68:17" pos:end="68:19">env</name><operator pos:start="68:20" pos:end="68:21">-&gt;</operator><name pos:start="68:22" pos:end="68:24">spr</name><index pos:start="68:25" pos:end="68:35">[<expr pos:start="68:26" pos:end="68:34"><name pos:start="68:26" pos:end="68:34">SPR_SPRG6</name></expr>]</index></name></expr></argument>, <argument pos:start="68:38" pos:end="68:56"><expr pos:start="68:38" pos:end="68:56"><name pos:start="68:38" pos:end="68:56"><name pos:start="68:38" pos:end="68:40">env</name><operator pos:start="68:41" pos:end="68:42">-&gt;</operator><name pos:start="68:43" pos:end="68:45">spr</name><index pos:start="68:46" pos:end="68:56">[<expr pos:start="68:47" pos:end="68:55"><name pos:start="68:47" pos:end="68:55">SPR_SPRG7</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="69:5" pos:end="97:0"><if pos:start="69:5" pos:end="97:0">if <condition pos:start="69:8" pos:end="69:46">(<expr pos:start="69:9" pos:end="69:45"><name pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:11">env</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:23">excp_model</name></name> <operator pos:start="69:25" pos:end="69:26">==</operator> <name pos:start="69:28" pos:end="69:45">POWERPC_EXCP_BOOKE</name></expr>)</condition> <block pos:start="69:48" pos:end="97:0">{<block_content pos:start="70:9" pos:end="90:70">
        <expr_stmt pos:start="70:9" pos:end="73:76"><expr pos:start="70:9" pos:end="73:75"><call pos:start="70:9" pos:end="73:75"><name pos:start="70:9" pos:end="70:19">cpu_fprintf</name><argument_list pos:start="70:20" pos:end="73:75">(<argument pos:start="70:21" pos:end="70:21"><expr pos:start="70:21" pos:end="70:21"><name pos:start="70:21" pos:end="70:21">f</name></expr></argument>, <argument pos:start="70:24" pos:end="71:77"><expr pos:start="70:24" pos:end="71:77"><literal type="string" pos:start="70:24" pos:end="70:31">"CSRR0 "</literal> <name pos:start="70:33" pos:end="70:45">TARGET_FMT_lx</name> <literal type="string" pos:start="70:47" pos:end="70:55">" CSRR1 "</literal> <name pos:start="70:57" pos:end="70:69">TARGET_FMT_lx</name>
                       <literal type="string" pos:start="71:24" pos:end="71:33">" MCSRR0 "</literal> <name pos:start="71:35" pos:end="71:47">TARGET_FMT_lx</name> <literal type="string" pos:start="71:49" pos:end="71:58">" MCSRR1 "</literal> <name pos:start="71:60" pos:end="71:72">TARGET_FMT_lx</name> <literal type="string" pos:start="71:74" pos:end="71:77">"\n"</literal></expr></argument>,
                    <argument pos:start="72:21" pos:end="72:45"><expr pos:start="72:21" pos:end="72:45"><name pos:start="72:21" pos:end="72:45"><name pos:start="72:21" pos:end="72:23">env</name><operator pos:start="72:24" pos:end="72:25">-&gt;</operator><name pos:start="72:26" pos:end="72:28">spr</name><index pos:start="72:29" pos:end="72:45">[<expr pos:start="72:30" pos:end="72:44"><name pos:start="72:30" pos:end="72:44">SPR_BOOKE_CSRR0</name></expr>]</index></name></expr></argument>, <argument pos:start="72:48" pos:end="72:72"><expr pos:start="72:48" pos:end="72:72"><name pos:start="72:48" pos:end="72:72"><name pos:start="72:48" pos:end="72:50">env</name><operator pos:start="72:51" pos:end="72:52">-&gt;</operator><name pos:start="72:53" pos:end="72:55">spr</name><index pos:start="72:56" pos:end="72:72">[<expr pos:start="72:57" pos:end="72:71"><name pos:start="72:57" pos:end="72:71">SPR_BOOKE_CSRR1</name></expr>]</index></name></expr></argument>,
                    <argument pos:start="73:21" pos:end="73:46"><expr pos:start="73:21" pos:end="73:46"><name pos:start="73:21" pos:end="73:46"><name pos:start="73:21" pos:end="73:23">env</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:28">spr</name><index pos:start="73:29" pos:end="73:46">[<expr pos:start="73:30" pos:end="73:45"><name pos:start="73:30" pos:end="73:45">SPR_BOOKE_MCSRR0</name></expr>]</index></name></expr></argument>, <argument pos:start="73:49" pos:end="73:74"><expr pos:start="73:49" pos:end="73:74"><name pos:start="73:49" pos:end="73:74"><name pos:start="73:49" pos:end="73:51">env</name><operator pos:start="73:52" pos:end="73:53">-&gt;</operator><name pos:start="73:54" pos:end="73:56">spr</name><index pos:start="73:57" pos:end="73:74">[<expr pos:start="73:58" pos:end="73:73"><name pos:start="73:58" pos:end="73:73">SPR_BOOKE_MCSRR1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="74:9" pos:end="77:71"><expr pos:start="74:9" pos:end="77:70"><call pos:start="74:9" pos:end="77:70"><name pos:start="74:9" pos:end="74:19">cpu_fprintf</name><argument_list pos:start="74:20" pos:end="77:70">(<argument pos:start="74:21" pos:end="74:21"><expr pos:start="74:21" pos:end="74:21"><name pos:start="74:21" pos:end="74:21">f</name></expr></argument>, <argument pos:start="74:24" pos:end="75:77"><expr pos:start="74:24" pos:end="75:77"><literal type="string" pos:start="74:24" pos:end="74:31">"  TCR "</literal> <name pos:start="74:33" pos:end="74:45">TARGET_FMT_lx</name> <literal type="string" pos:start="74:47" pos:end="74:55">"   TSR "</literal> <name pos:start="74:57" pos:end="74:69">TARGET_FMT_lx</name>
                       <literal type="string" pos:start="75:24" pos:end="75:33">"    ESR "</literal> <name pos:start="75:35" pos:end="75:47">TARGET_FMT_lx</name> <literal type="string" pos:start="75:49" pos:end="75:58">"   DEAR "</literal> <name pos:start="75:60" pos:end="75:72">TARGET_FMT_lx</name> <literal type="string" pos:start="75:74" pos:end="75:77">"\n"</literal></expr></argument>,
                    <argument pos:start="76:21" pos:end="76:43"><expr pos:start="76:21" pos:end="76:43"><name pos:start="76:21" pos:end="76:43"><name pos:start="76:21" pos:end="76:23">env</name><operator pos:start="76:24" pos:end="76:25">-&gt;</operator><name pos:start="76:26" pos:end="76:28">spr</name><index pos:start="76:29" pos:end="76:43">[<expr pos:start="76:30" pos:end="76:42"><name pos:start="76:30" pos:end="76:42">SPR_BOOKE_TCR</name></expr>]</index></name></expr></argument>, <argument pos:start="76:46" pos:end="76:68"><expr pos:start="76:46" pos:end="76:68"><name pos:start="76:46" pos:end="76:68"><name pos:start="76:46" pos:end="76:48">env</name><operator pos:start="76:49" pos:end="76:50">-&gt;</operator><name pos:start="76:51" pos:end="76:53">spr</name><index pos:start="76:54" pos:end="76:68">[<expr pos:start="76:55" pos:end="76:67"><name pos:start="76:55" pos:end="76:67">SPR_BOOKE_TSR</name></expr>]</index></name></expr></argument>,
                    <argument pos:start="77:21" pos:end="77:43"><expr pos:start="77:21" pos:end="77:43"><name pos:start="77:21" pos:end="77:43"><name pos:start="77:21" pos:end="77:23">env</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:28">spr</name><index pos:start="77:29" pos:end="77:43">[<expr pos:start="77:30" pos:end="77:42"><name pos:start="77:30" pos:end="77:42">SPR_BOOKE_ESR</name></expr>]</index></name></expr></argument>, <argument pos:start="77:46" pos:end="77:69"><expr pos:start="77:46" pos:end="77:69"><name pos:start="77:46" pos:end="77:69"><name pos:start="77:46" pos:end="77:48">env</name><operator pos:start="77:49" pos:end="77:50">-&gt;</operator><name pos:start="77:51" pos:end="77:53">spr</name><index pos:start="77:54" pos:end="77:69">[<expr pos:start="77:55" pos:end="77:68"><name pos:start="77:55" pos:end="77:68">SPR_BOOKE_DEAR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="78:9" pos:end="81:72"><expr pos:start="78:9" pos:end="81:71"><call pos:start="78:9" pos:end="81:71"><name pos:start="78:9" pos:end="78:19">cpu_fprintf</name><argument_list pos:start="78:20" pos:end="81:71">(<argument pos:start="78:21" pos:end="78:21"><expr pos:start="78:21" pos:end="78:21"><name pos:start="78:21" pos:end="78:21">f</name></expr></argument>, <argument pos:start="78:24" pos:end="79:77"><expr pos:start="78:24" pos:end="79:77"><literal type="string" pos:start="78:24" pos:end="78:31">"  PIR "</literal> <name pos:start="78:33" pos:end="78:45">TARGET_FMT_lx</name> <literal type="string" pos:start="78:47" pos:end="78:55">" DECAR "</literal> <name pos:start="78:57" pos:end="78:69">TARGET_FMT_lx</name>
                       <literal type="string" pos:start="79:24" pos:end="79:33">"   IVPR "</literal> <name pos:start="79:35" pos:end="79:47">TARGET_FMT_lx</name> <literal type="string" pos:start="79:49" pos:end="79:58">"   EPCR "</literal> <name pos:start="79:60" pos:end="79:72">TARGET_FMT_lx</name> <literal type="string" pos:start="79:74" pos:end="79:77">"\n"</literal></expr></argument>,
                    <argument pos:start="80:21" pos:end="80:43"><expr pos:start="80:21" pos:end="80:43"><name pos:start="80:21" pos:end="80:43"><name pos:start="80:21" pos:end="80:23">env</name><operator pos:start="80:24" pos:end="80:25">-&gt;</operator><name pos:start="80:26" pos:end="80:28">spr</name><index pos:start="80:29" pos:end="80:43">[<expr pos:start="80:30" pos:end="80:42"><name pos:start="80:30" pos:end="80:42">SPR_BOOKE_PIR</name></expr>]</index></name></expr></argument>, <argument pos:start="80:46" pos:end="80:70"><expr pos:start="80:46" pos:end="80:70"><name pos:start="80:46" pos:end="80:70"><name pos:start="80:46" pos:end="80:48">env</name><operator pos:start="80:49" pos:end="80:50">-&gt;</operator><name pos:start="80:51" pos:end="80:53">spr</name><index pos:start="80:54" pos:end="80:70">[<expr pos:start="80:55" pos:end="80:69"><name pos:start="80:55" pos:end="80:69">SPR_BOOKE_DECAR</name></expr>]</index></name></expr></argument>,
                    <argument pos:start="81:21" pos:end="81:44"><expr pos:start="81:21" pos:end="81:44"><name pos:start="81:21" pos:end="81:44"><name pos:start="81:21" pos:end="81:23">env</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:28">spr</name><index pos:start="81:29" pos:end="81:44">[<expr pos:start="81:30" pos:end="81:43"><name pos:start="81:30" pos:end="81:43">SPR_BOOKE_IVPR</name></expr>]</index></name></expr></argument>, <argument pos:start="81:47" pos:end="81:70"><expr pos:start="81:47" pos:end="81:70"><name pos:start="81:47" pos:end="81:70"><name pos:start="81:47" pos:end="81:49">env</name><operator pos:start="81:50" pos:end="81:51">-&gt;</operator><name pos:start="81:52" pos:end="81:54">spr</name><index pos:start="81:55" pos:end="81:70">[<expr pos:start="81:56" pos:end="81:69"><name pos:start="81:56" pos:end="81:69">SPR_BOOKE_EPCR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="82:9" pos:end="85:45"><expr pos:start="82:9" pos:end="85:44"><call pos:start="82:9" pos:end="85:44"><name pos:start="82:9" pos:end="82:19">cpu_fprintf</name><argument_list pos:start="82:20" pos:end="85:44">(<argument pos:start="82:21" pos:end="82:21"><expr pos:start="82:21" pos:end="82:21"><name pos:start="82:21" pos:end="82:21">f</name></expr></argument>, <argument pos:start="82:24" pos:end="83:52"><expr pos:start="82:24" pos:end="83:52"><literal type="string" pos:start="82:24" pos:end="82:31">" MCSR "</literal> <name pos:start="82:33" pos:end="82:45">TARGET_FMT_lx</name> <literal type="string" pos:start="82:47" pos:end="82:55">" SPRG8 "</literal> <name pos:start="82:57" pos:end="82:69">TARGET_FMT_lx</name>
                       <literal type="string" pos:start="83:24" pos:end="83:33">"    EPR "</literal> <name pos:start="83:35" pos:end="83:47">TARGET_FMT_lx</name> <literal type="string" pos:start="83:49" pos:end="83:52">"\n"</literal></expr></argument>,
                    <argument pos:start="84:21" pos:end="84:44"><expr pos:start="84:21" pos:end="84:44"><name pos:start="84:21" pos:end="84:44"><name pos:start="84:21" pos:end="84:23">env</name><operator pos:start="84:24" pos:end="84:25">-&gt;</operator><name pos:start="84:26" pos:end="84:28">spr</name><index pos:start="84:29" pos:end="84:44">[<expr pos:start="84:30" pos:end="84:43"><name pos:start="84:30" pos:end="84:43">SPR_BOOKE_MCSR</name></expr>]</index></name></expr></argument>, <argument pos:start="84:47" pos:end="84:71"><expr pos:start="84:47" pos:end="84:71"><name pos:start="84:47" pos:end="84:71"><name pos:start="84:47" pos:end="84:49">env</name><operator pos:start="84:50" pos:end="84:51">-&gt;</operator><name pos:start="84:52" pos:end="84:54">spr</name><index pos:start="84:55" pos:end="84:71">[<expr pos:start="84:56" pos:end="84:70"><name pos:start="84:56" pos:end="84:70">SPR_BOOKE_SPRG8</name></expr>]</index></name></expr></argument>,
                    <argument pos:start="85:21" pos:end="85:43"><expr pos:start="85:21" pos:end="85:43"><name pos:start="85:21" pos:end="85:43"><name pos:start="85:21" pos:end="85:23">env</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:28">spr</name><index pos:start="85:29" pos:end="85:43">[<expr pos:start="85:30" pos:end="85:42"><name pos:start="85:30" pos:end="85:42">SPR_BOOKE_EPR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="86:9" pos:end="86:26">/* FSL-specific */</comment>
        <expr_stmt pos:start="87:9" pos:end="90:70"><expr pos:start="87:9" pos:end="90:69"><call pos:start="87:9" pos:end="90:69"><name pos:start="87:9" pos:end="87:19">cpu_fprintf</name><argument_list pos:start="87:20" pos:end="90:69">(<argument pos:start="87:21" pos:end="87:21"><expr pos:start="87:21" pos:end="87:21"><name pos:start="87:21" pos:end="87:21">f</name></expr></argument>, <argument pos:start="87:24" pos:end="88:77"><expr pos:start="87:24" pos:end="88:77"><literal type="string" pos:start="87:24" pos:end="87:31">" MCAR "</literal> <name pos:start="87:33" pos:end="87:45">TARGET_FMT_lx</name> <literal type="string" pos:start="87:47" pos:end="87:55">"  PID1 "</literal> <name pos:start="87:57" pos:end="87:69">TARGET_FMT_lx</name>
                       <literal type="string" pos:start="88:24" pos:end="88:33">"   PID2 "</literal> <name pos:start="88:35" pos:end="88:47">TARGET_FMT_lx</name> <literal type="string" pos:start="88:49" pos:end="88:58">"    SVR "</literal> <name pos:start="88:60" pos:end="88:72">TARGET_FMT_lx</name> <literal type="string" pos:start="88:74" pos:end="88:77">"\n"</literal></expr></argument>,
                    <argument pos:start="89:21" pos:end="89:43"><expr pos:start="89:21" pos:end="89:43"><name pos:start="89:21" pos:end="89:43"><name pos:start="89:21" pos:end="89:23">env</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:28">spr</name><index pos:start="89:29" pos:end="89:43">[<expr pos:start="89:30" pos:end="89:42"><name pos:start="89:30" pos:end="89:42">SPR_Exxx_MCAR</name></expr>]</index></name></expr></argument>, <argument pos:start="89:46" pos:end="89:69"><expr pos:start="89:46" pos:end="89:69"><name pos:start="89:46" pos:end="89:69"><name pos:start="89:46" pos:end="89:48">env</name><operator pos:start="89:49" pos:end="89:50">-&gt;</operator><name pos:start="89:51" pos:end="89:53">spr</name><index pos:start="89:54" pos:end="89:69">[<expr pos:start="89:55" pos:end="89:68"><name pos:start="89:55" pos:end="89:68">SPR_BOOKE_PID1</name></expr>]</index></name></expr></argument>,
                    <argument pos:start="90:21" pos:end="90:44"><expr pos:start="90:21" pos:end="90:44"><name pos:start="90:21" pos:end="90:44"><name pos:start="90:21" pos:end="90:23">env</name><operator pos:start="90:24" pos:end="90:25">-&gt;</operator><name pos:start="90:26" pos:end="90:28">spr</name><index pos:start="90:29" pos:end="90:44">[<expr pos:start="90:30" pos:end="90:43"><name pos:start="90:30" pos:end="90:43">SPR_BOOKE_PID2</name></expr>]</index></name></expr></argument>, <argument pos:start="90:47" pos:end="90:68"><expr pos:start="90:47" pos:end="90:68"><name pos:start="90:47" pos:end="90:68"><name pos:start="90:47" pos:end="90:49">env</name><operator pos:start="90:50" pos:end="90:51">-&gt;</operator><name pos:start="90:52" pos:end="90:54">spr</name><index pos:start="90:55" pos:end="90:68">[<expr pos:start="90:56" pos:end="90:67"><name pos:start="90:56" pos:end="90:67">SPR_E500_SVR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="91:9" pos:end="94:11">/*
         * IVORs are left out as they are large and do not change often --
         * they can be read with "p $ivor0", "p $ivor1", etc.
         */</comment>
    </block_content>}</block></if></if_stmt>
<cpp:if pos:start="96:1" pos:end="96:25">#<cpp:directive pos:start="96:2" pos:end="96:3">if</cpp:directive> <expr pos:start="96:5" pos:end="96:25"><call pos:start="96:5" pos:end="96:25"><name pos:start="96:5" pos:end="96:11">defined</name><argument_list pos:start="96:12" pos:end="96:25">(<argument pos:start="96:13" pos:end="96:24"><expr pos:start="96:13" pos:end="96:24"><name pos:start="96:13" pos:end="96:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>
    <if_stmt pos:start="97:5" pos:end="101:0"><if pos:start="97:5" pos:end="101:0">if <condition pos:start="97:8" pos:end="97:39">(<expr pos:start="97:9" pos:end="97:38"><name pos:start="97:9" pos:end="97:18"><name pos:start="97:9" pos:end="97:11">env</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:18">flags</name></name> <operator pos:start="97:20" pos:end="97:20">&amp;</operator> <name pos:start="97:22" pos:end="97:38">POWERPC_FLAG_CFAR</name></expr>)</condition> <block pos:start="97:41" pos:end="101:0">{<block_content pos:start="98:9" pos:end="98:62">
        <expr_stmt pos:start="98:9" pos:end="98:62"><expr pos:start="98:9" pos:end="98:61"><call pos:start="98:9" pos:end="98:61"><name pos:start="98:9" pos:end="98:19">cpu_fprintf</name><argument_list pos:start="98:20" pos:end="98:61">(<argument pos:start="98:21" pos:end="98:21"><expr pos:start="98:21" pos:end="98:21"><name pos:start="98:21" pos:end="98:21">f</name></expr></argument>, <argument pos:start="98:24" pos:end="98:49"><expr pos:start="98:24" pos:end="98:49"><literal type="string" pos:start="98:24" pos:end="98:31">" CFAR "</literal> <name pos:start="98:33" pos:end="98:45">TARGET_FMT_lx</name><literal type="string" pos:start="98:46" pos:end="98:49">"\n"</literal></expr></argument>, <argument pos:start="98:52" pos:end="98:60"><expr pos:start="98:52" pos:end="98:60"><name pos:start="98:52" pos:end="98:60"><name pos:start="98:52" pos:end="98:54">env</name><operator pos:start="98:55" pos:end="98:56">-&gt;</operator><name pos:start="98:57" pos:end="98:60">cfar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
<cpp:endif pos:start="100:1" pos:end="100:6">#<cpp:directive pos:start="100:2" pos:end="100:6">endif</cpp:directive></cpp:endif>
    <switch pos:start="101:5" pos:end="132:0">switch <condition pos:start="101:12" pos:end="101:27">(<expr pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:15">env</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:26">mmu_model</name></name></expr>)</condition> <block pos:start="101:29" pos:end="132:0">{<block_content pos:start="102:5" pos:end="127:14">
    <case pos:start="102:5" pos:end="102:25">case <expr pos:start="102:10" pos:end="102:24"><name pos:start="102:10" pos:end="102:24">POWERPC_MMU_32B</name></expr>:</case>
    <case pos:start="103:5" pos:end="103:25">case <expr pos:start="103:10" pos:end="103:24"><name pos:start="103:10" pos:end="103:24">POWERPC_MMU_601</name></expr>:</case>
    <case pos:start="104:5" pos:end="104:30">case <expr pos:start="104:10" pos:end="104:29"><name pos:start="104:10" pos:end="104:29">POWERPC_MMU_SOFT_6xx</name></expr>:</case>
    <case pos:start="105:5" pos:end="107:0">case <expr pos:start="105:10" pos:end="105:30"><name pos:start="105:10" pos:end="105:30">POWERPC_MMU_SOFT_74xx</name></expr>:</case>
<cpp:if pos:start="106:1" pos:end="106:25">#<cpp:directive pos:start="106:2" pos:end="106:3">if</cpp:directive> <expr pos:start="106:5" pos:end="106:25"><call pos:start="106:5" pos:end="106:25"><name pos:start="106:5" pos:end="106:11">defined</name><argument_list pos:start="106:12" pos:end="106:25">(<argument pos:start="106:13" pos:end="106:24"><expr pos:start="106:13" pos:end="106:24"><name pos:start="106:13" pos:end="106:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>
    <case pos:start="107:5" pos:end="107:25">case <expr pos:start="107:10" pos:end="107:24"><name pos:start="107:10" pos:end="107:24">POWERPC_MMU_620</name></expr>:</case>
    <case pos:start="108:5" pos:end="110:0">case <expr pos:start="108:10" pos:end="108:24"><name pos:start="108:10" pos:end="108:24">POWERPC_MMU_64B</name></expr>:</case>
<cpp:endif pos:start="109:1" pos:end="109:6">#<cpp:directive pos:start="109:2" pos:end="109:6">endif</cpp:directive></cpp:endif>
        <expr_stmt pos:start="110:9" pos:end="110:72"><expr pos:start="110:9" pos:end="110:71"><call pos:start="110:9" pos:end="110:71"><name pos:start="110:9" pos:end="110:19">cpu_fprintf</name><argument_list pos:start="110:20" pos:end="110:71">(<argument pos:start="110:21" pos:end="110:21"><expr pos:start="110:21" pos:end="110:21"><name pos:start="110:21" pos:end="110:21">f</name></expr></argument>, <argument pos:start="110:24" pos:end="110:50"><expr pos:start="110:24" pos:end="110:50"><literal type="string" pos:start="110:24" pos:end="110:31">" SDR1 "</literal> <name pos:start="110:33" pos:end="110:45">TARGET_FMT_lx</name> <literal type="string" pos:start="110:47" pos:end="110:50">"\n"</literal></expr></argument>, <argument pos:start="110:53" pos:end="110:70"><expr pos:start="110:53" pos:end="110:70"><name pos:start="110:53" pos:end="110:70"><name pos:start="110:53" pos:end="110:55">env</name><operator pos:start="110:56" pos:end="110:57">-&gt;</operator><name pos:start="110:58" pos:end="110:60">spr</name><index pos:start="110:61" pos:end="110:70">[<expr pos:start="110:62" pos:end="110:69"><name pos:start="110:62" pos:end="110:69">SPR_SDR1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="111:9" pos:end="111:14">break;</break>
    <case pos:start="112:5" pos:end="112:30">case <expr pos:start="112:10" pos:end="112:29"><name pos:start="112:10" pos:end="112:29">POWERPC_MMU_BOOKE206</name></expr>:</case>
        <expr_stmt pos:start="113:9" pos:end="116:72"><expr pos:start="113:9" pos:end="116:71"><call pos:start="113:9" pos:end="116:71"><name pos:start="113:9" pos:end="113:19">cpu_fprintf</name><argument_list pos:start="113:20" pos:end="116:71">(<argument pos:start="113:21" pos:end="113:21"><expr pos:start="113:21" pos:end="113:21"><name pos:start="113:21" pos:end="113:21">f</name></expr></argument>, <argument pos:start="113:24" pos:end="114:77"><expr pos:start="113:24" pos:end="114:77"><literal type="string" pos:start="113:24" pos:end="113:31">" MAS0 "</literal> <name pos:start="113:33" pos:end="113:45">TARGET_FMT_lx</name> <literal type="string" pos:start="113:47" pos:end="113:55">"  MAS1 "</literal> <name pos:start="113:57" pos:end="113:69">TARGET_FMT_lx</name>
                       <literal type="string" pos:start="114:24" pos:end="114:33">"   MAS2 "</literal> <name pos:start="114:35" pos:end="114:47">TARGET_FMT_lx</name> <literal type="string" pos:start="114:49" pos:end="114:58">"   MAS3 "</literal> <name pos:start="114:60" pos:end="114:72">TARGET_FMT_lx</name> <literal type="string" pos:start="114:74" pos:end="114:77">"\n"</literal></expr></argument>,
                    <argument pos:start="115:21" pos:end="115:44"><expr pos:start="115:21" pos:end="115:44"><name pos:start="115:21" pos:end="115:44"><name pos:start="115:21" pos:end="115:23">env</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:28">spr</name><index pos:start="115:29" pos:end="115:44">[<expr pos:start="115:30" pos:end="115:43"><name pos:start="115:30" pos:end="115:43">SPR_BOOKE_MAS0</name></expr>]</index></name></expr></argument>, <argument pos:start="115:47" pos:end="115:70"><expr pos:start="115:47" pos:end="115:70"><name pos:start="115:47" pos:end="115:70"><name pos:start="115:47" pos:end="115:49">env</name><operator pos:start="115:50" pos:end="115:51">-&gt;</operator><name pos:start="115:52" pos:end="115:54">spr</name><index pos:start="115:55" pos:end="115:70">[<expr pos:start="115:56" pos:end="115:69"><name pos:start="115:56" pos:end="115:69">SPR_BOOKE_MAS1</name></expr>]</index></name></expr></argument>,
                    <argument pos:start="116:21" pos:end="116:44"><expr pos:start="116:21" pos:end="116:44"><name pos:start="116:21" pos:end="116:44"><name pos:start="116:21" pos:end="116:23">env</name><operator pos:start="116:24" pos:end="116:25">-&gt;</operator><name pos:start="116:26" pos:end="116:28">spr</name><index pos:start="116:29" pos:end="116:44">[<expr pos:start="116:30" pos:end="116:43"><name pos:start="116:30" pos:end="116:43">SPR_BOOKE_MAS2</name></expr>]</index></name></expr></argument>, <argument pos:start="116:47" pos:end="116:70"><expr pos:start="116:47" pos:end="116:70"><name pos:start="116:47" pos:end="116:70"><name pos:start="116:47" pos:end="116:49">env</name><operator pos:start="116:50" pos:end="116:51">-&gt;</operator><name pos:start="116:52" pos:end="116:54">spr</name><index pos:start="116:55" pos:end="116:70">[<expr pos:start="116:56" pos:end="116:69"><name pos:start="116:56" pos:end="116:69">SPR_BOOKE_MAS3</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="117:9" pos:end="120:71"><expr pos:start="117:9" pos:end="120:70"><call pos:start="117:9" pos:end="120:70"><name pos:start="117:9" pos:end="117:19">cpu_fprintf</name><argument_list pos:start="117:20" pos:end="120:70">(<argument pos:start="117:21" pos:end="117:21"><expr pos:start="117:21" pos:end="117:21"><name pos:start="117:21" pos:end="117:21">f</name></expr></argument>, <argument pos:start="117:24" pos:end="118:77"><expr pos:start="117:24" pos:end="118:77"><literal type="string" pos:start="117:24" pos:end="117:31">" MAS4 "</literal> <name pos:start="117:33" pos:end="117:45">TARGET_FMT_lx</name> <literal type="string" pos:start="117:47" pos:end="117:55">"  MAS6 "</literal> <name pos:start="117:57" pos:end="117:69">TARGET_FMT_lx</name>
                       <literal type="string" pos:start="118:24" pos:end="118:33">"   MAS7 "</literal> <name pos:start="118:35" pos:end="118:47">TARGET_FMT_lx</name> <literal type="string" pos:start="118:49" pos:end="118:58">"    PID "</literal> <name pos:start="118:60" pos:end="118:72">TARGET_FMT_lx</name> <literal type="string" pos:start="118:74" pos:end="118:77">"\n"</literal></expr></argument>,
                    <argument pos:start="119:21" pos:end="119:44"><expr pos:start="119:21" pos:end="119:44"><name pos:start="119:21" pos:end="119:44"><name pos:start="119:21" pos:end="119:23">env</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:28">spr</name><index pos:start="119:29" pos:end="119:44">[<expr pos:start="119:30" pos:end="119:43"><name pos:start="119:30" pos:end="119:43">SPR_BOOKE_MAS4</name></expr>]</index></name></expr></argument>, <argument pos:start="119:47" pos:end="119:70"><expr pos:start="119:47" pos:end="119:70"><name pos:start="119:47" pos:end="119:70"><name pos:start="119:47" pos:end="119:49">env</name><operator pos:start="119:50" pos:end="119:51">-&gt;</operator><name pos:start="119:52" pos:end="119:54">spr</name><index pos:start="119:55" pos:end="119:70">[<expr pos:start="119:56" pos:end="119:69"><name pos:start="119:56" pos:end="119:69">SPR_BOOKE_MAS6</name></expr>]</index></name></expr></argument>,
                    <argument pos:start="120:21" pos:end="120:44"><expr pos:start="120:21" pos:end="120:44"><name pos:start="120:21" pos:end="120:44"><name pos:start="120:21" pos:end="120:23">env</name><operator pos:start="120:24" pos:end="120:25">-&gt;</operator><name pos:start="120:26" pos:end="120:28">spr</name><index pos:start="120:29" pos:end="120:44">[<expr pos:start="120:30" pos:end="120:43"><name pos:start="120:30" pos:end="120:43">SPR_BOOKE_MAS7</name></expr>]</index></name></expr></argument>, <argument pos:start="120:47" pos:end="120:69"><expr pos:start="120:47" pos:end="120:69"><name pos:start="120:47" pos:end="120:69"><name pos:start="120:47" pos:end="120:49">env</name><operator pos:start="120:50" pos:end="120:51">-&gt;</operator><name pos:start="120:52" pos:end="120:54">spr</name><index pos:start="120:55" pos:end="120:69">[<expr pos:start="120:56" pos:end="120:68"><name pos:start="120:56" pos:end="120:68">SPR_BOOKE_PID</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="121:9" pos:end="124:49"><expr pos:start="121:9" pos:end="124:48"><call pos:start="121:9" pos:end="124:48"><name pos:start="121:9" pos:end="121:19">cpu_fprintf</name><argument_list pos:start="121:20" pos:end="124:48">(<argument pos:start="121:21" pos:end="121:21"><expr pos:start="121:21" pos:end="121:21"><name pos:start="121:21" pos:end="121:21">f</name></expr></argument>, <argument pos:start="121:24" pos:end="122:53"><expr pos:start="121:24" pos:end="122:53"><literal type="string" pos:start="121:24" pos:end="121:32">"MMUCFG "</literal> <name pos:start="121:34" pos:end="121:46">TARGET_FMT_lx</name> <literal type="string" pos:start="121:48" pos:end="121:58">" TLB0CFG "</literal> <name pos:start="121:60" pos:end="121:72">TARGET_FMT_lx</name>
                       <literal type="string" pos:start="122:24" pos:end="122:34">" TLB1CFG "</literal> <name pos:start="122:36" pos:end="122:48">TARGET_FMT_lx</name> <literal type="string" pos:start="122:50" pos:end="122:53">"\n"</literal></expr></argument>,
                    <argument pos:start="123:21" pos:end="123:40"><expr pos:start="123:21" pos:end="123:40"><name pos:start="123:21" pos:end="123:40"><name pos:start="123:21" pos:end="123:23">env</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:28">spr</name><index pos:start="123:29" pos:end="123:40">[<expr pos:start="123:30" pos:end="123:39"><name pos:start="123:30" pos:end="123:39">SPR_MMUCFG</name></expr>]</index></name></expr></argument>, <argument pos:start="123:43" pos:end="123:69"><expr pos:start="123:43" pos:end="123:69"><name pos:start="123:43" pos:end="123:69"><name pos:start="123:43" pos:end="123:45">env</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:50">spr</name><index pos:start="123:51" pos:end="123:69">[<expr pos:start="123:52" pos:end="123:68"><name pos:start="123:52" pos:end="123:68">SPR_BOOKE_TLB0CFG</name></expr>]</index></name></expr></argument>,
                    <argument pos:start="124:21" pos:end="124:47"><expr pos:start="124:21" pos:end="124:47"><name pos:start="124:21" pos:end="124:47"><name pos:start="124:21" pos:end="124:23">env</name><operator pos:start="124:24" pos:end="124:25">-&gt;</operator><name pos:start="124:26" pos:end="124:28">spr</name><index pos:start="124:29" pos:end="124:47">[<expr pos:start="124:30" pos:end="124:46"><name pos:start="124:30" pos:end="124:46">SPR_BOOKE_TLB1CFG</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="125:9" pos:end="125:14">break;</break>
    <default pos:start="126:5" pos:end="126:12">default:</default>
        <break pos:start="127:9" pos:end="127:14">break;</break>
    </block_content>}</block></switch>
<cpp:endif pos:start="129:1" pos:end="129:6">#<cpp:directive pos:start="129:2" pos:end="129:6">endif</cpp:directive></cpp:endif>
<cpp:undef pos:start="130:1" pos:end="130:11">#<cpp:directive pos:start="130:2" pos:end="130:6">undef</cpp:directive> <name pos:start="130:8" pos:end="130:11">RGPL</name></cpp:undef>
<cpp:undef pos:start="131:1" pos:end="131:11">#<cpp:directive pos:start="131:2" pos:end="131:6">undef</cpp:directive> <name pos:start="131:8" pos:end="131:11">RFPL</name></cpp:undef>
</block_content>}</block></function></unit>
