<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3172.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">webm_dash_manifest_cues</name><parameter_list pos:start="1:35" pos:end="1:54">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:13">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">MatroskaDemuxContext</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:34">matroska</name> <init pos:start="5:36" pos:end="5:49">= <expr pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:38">s</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">EbmlList</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:27">seekhead_list</name> <init pos:start="7:29" pos:end="7:49">= <expr pos:start="7:31" pos:end="7:49"><operator pos:start="7:31" pos:end="7:31">&amp;</operator><name pos:start="7:32" pos:end="7:49"><name pos:start="7:32" pos:end="7:39">matroska</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:49">seekhead</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">MatroskaSeekhead</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:30">seekhead</name> <init pos:start="9:32" pos:end="9:52">= <expr pos:start="9:34" pos:end="9:52"><name pos:start="9:34" pos:end="9:52"><name pos:start="9:34" pos:end="9:46">seekhead_list</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:52">elem</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:13">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:66"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:22">cues_start</name> <init pos:start="13:24" pos:end="13:27">= <expr pos:start="13:26" pos:end="13:27"><operator pos:start="13:26" pos:end="13:26">-</operator><literal type="number" pos:start="13:27" pos:end="13:27">1</literal></expr></init></decl>, <decl pos:start="13:30" pos:end="13:42"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:30" pos:end="13:37">cues_end</name> <init pos:start="13:39" pos:end="13:42">= <expr pos:start="13:41" pos:end="13:42"><operator pos:start="13:41" pos:end="13:41">-</operator><literal type="number" pos:start="13:42" pos:end="13:42">1</literal></expr></init></decl>, <decl pos:start="13:45" pos:end="13:54"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:45" pos:end="13:54">before_pos</name></decl>, <decl pos:start="13:57" pos:end="13:65"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:57" pos:end="13:65">bandwidth</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <comment type="line" pos:start="19:5" pos:end="19:45">// determine cues start and end positions</comment>

    <for pos:start="21:5" pos:end="25:18">for <control pos:start="21:9" pos:end="21:48">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:43"><expr pos:start="21:17" pos:end="21:42"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:42"><name pos:start="21:21" pos:end="21:33">seekhead_list</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:42">nb_elem</name></name></expr>;</condition> <incr pos:start="21:45" pos:end="21:47"><expr pos:start="21:45" pos:end="21:47"><name pos:start="21:45" pos:end="21:45">i</name><operator pos:start="21:46" pos:end="21:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:9" pos:end="25:18"><block_content pos:start="23:9" pos:end="25:18">

        <if_stmt pos:start="23:9" pos:end="25:18"><if pos:start="23:9" pos:end="25:18">if <condition pos:start="23:12" pos:end="23:47">(<expr pos:start="23:13" pos:end="23:46"><name pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:20">seekhead</name><index pos:start="23:21" pos:end="23:23">[<expr pos:start="23:22" pos:end="23:22"><name pos:start="23:22" pos:end="23:22">i</name></expr>]</index></name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:26">id</name> <operator pos:start="23:28" pos:end="23:29">==</operator> <name pos:start="23:31" pos:end="23:46">MATROSKA_ID_CUES</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:18"><block_content pos:start="25:13" pos:end="25:18">

            <break pos:start="25:13" pos:end="25:18">break;</break></block_content></block></if></if_stmt></block_content></block></for>



    <if_stmt pos:start="29:5" pos:end="29:47"><if pos:start="29:5" pos:end="29:47">if <condition pos:start="29:8" pos:end="29:36">(<expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:9">i</name> <operator pos:start="29:11" pos:end="29:12">&gt;=</operator> <name pos:start="29:14" pos:end="29:35"><name pos:start="29:14" pos:end="29:26">seekhead_list</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:35">nb_elem</name></name></expr>)</condition><block type="pseudo" pos:start="29:38" pos:end="29:47"><block_content pos:start="29:38" pos:end="29:47"> <return pos:start="29:38" pos:end="29:47">return <expr pos:start="29:45" pos:end="29:46"><operator pos:start="29:45" pos:end="29:45">-</operator><literal type="number" pos:start="29:46" pos:end="29:46">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:14">before_pos</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:45"><name pos:start="33:18" pos:end="33:26">avio_tell</name><argument_list pos:start="33:27" pos:end="33:45">(<argument pos:start="33:28" pos:end="33:44"><expr pos:start="33:28" pos:end="33:44"><name pos:start="33:28" pos:end="33:44"><name pos:start="33:28" pos:end="33:35">matroska</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:40">ctx</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:44">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:59"><expr pos:start="35:5" pos:end="35:58"><name pos:start="35:5" pos:end="35:14">cues_start</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:28"><name pos:start="35:18" pos:end="35:25">seekhead</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><name pos:start="35:27" pos:end="35:27">i</name></expr>]</index></name><operator pos:start="35:29" pos:end="35:29">.</operator><name pos:start="35:30" pos:end="35:32">pos</name> <operator pos:start="35:34" pos:end="35:34">+</operator> <name pos:start="35:36" pos:end="35:58"><name pos:start="35:36" pos:end="35:43">matroska</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:58">segment_start</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="53:5"><if pos:start="37:5" pos:end="53:5">if <condition pos:start="37:8" pos:end="37:73">(<expr pos:start="37:9" pos:end="37:72"><call pos:start="37:9" pos:end="37:58"><name pos:start="37:9" pos:end="37:17">avio_seek</name><argument_list pos:start="37:18" pos:end="37:58">(<argument pos:start="37:19" pos:end="37:35"><expr pos:start="37:19" pos:end="37:35"><name pos:start="37:19" pos:end="37:35"><name pos:start="37:19" pos:end="37:26">matroska</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:31">ctx</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:35">pb</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:47"><expr pos:start="37:38" pos:end="37:47"><name pos:start="37:38" pos:end="37:47">cues_start</name></expr></argument>, <argument pos:start="37:50" pos:end="37:57"><expr pos:start="37:50" pos:end="37:57"><name pos:start="37:50" pos:end="37:57">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="37:60" pos:end="37:61">==</operator> <name pos:start="37:63" pos:end="37:72">cues_start</name></expr>)</condition> <block pos:start="37:75" pos:end="53:5">{<block_content pos:start="45:9" pos:end="51:61">

        <comment type="line" pos:start="39:9" pos:end="39:75">// cues_end is computed as cues_start + cues_length + length of the</comment>

        <comment type="line" pos:start="41:9" pos:end="41:73">// Cues element ID + EBML length of the Cues element. cues_end is</comment>

        <comment type="line" pos:start="43:9" pos:end="43:55">// inclusive and the above sum is reduced by 1.</comment>

        <decl_stmt pos:start="45:9" pos:end="45:62"><decl pos:start="45:9" pos:end="45:32"><type pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:16">uint64_t</name></type> <name pos:start="45:18" pos:end="45:28">cues_length</name> <init pos:start="45:30" pos:end="45:32">= <expr pos:start="45:32" pos:end="45:32"><literal type="number" pos:start="45:32" pos:end="45:32">0</literal></expr></init></decl>, <decl pos:start="45:35" pos:end="45:45"><type ref="prev" pos:start="45:9" pos:end="45:16"/><name pos:start="45:35" pos:end="45:41">cues_id</name> <init pos:start="45:43" pos:end="45:45">= <expr pos:start="45:45" pos:end="45:45"><literal type="number" pos:start="45:45" pos:end="45:45">0</literal></expr></init></decl>, <decl pos:start="45:48" pos:end="45:61"><type ref="prev" pos:start="45:9" pos:end="45:16"/><name pos:start="45:48" pos:end="45:57">bytes_read</name> <init pos:start="45:59" pos:end="45:61">= <expr pos:start="45:61" pos:end="45:61"><literal type="number" pos:start="45:61" pos:end="45:61">0</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:78"><expr pos:start="47:9" pos:end="47:77"><name pos:start="47:9" pos:end="47:18">bytes_read</name> <operator pos:start="47:20" pos:end="47:21">+=</operator> <call pos:start="47:23" pos:end="47:77"><name pos:start="47:23" pos:end="47:35">ebml_read_num</name><argument_list pos:start="47:36" pos:end="47:77">(<argument pos:start="47:37" pos:end="47:44"><expr pos:start="47:37" pos:end="47:44"><name pos:start="47:37" pos:end="47:44">matroska</name></expr></argument>, <argument pos:start="47:47" pos:end="47:63"><expr pos:start="47:47" pos:end="47:63"><name pos:start="47:47" pos:end="47:63"><name pos:start="47:47" pos:end="47:54">matroska</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:59">ctx</name><operator pos:start="47:60" pos:end="47:61">-&gt;</operator><name pos:start="47:62" pos:end="47:63">pb</name></name></expr></argument>, <argument pos:start="47:66" pos:end="47:66"><expr pos:start="47:66" pos:end="47:66"><literal type="number" pos:start="47:66" pos:end="47:66">4</literal></expr></argument>, <argument pos:start="47:69" pos:end="47:76"><expr pos:start="47:69" pos:end="47:76"><operator pos:start="47:69" pos:end="47:69">&amp;</operator><name pos:start="47:70" pos:end="47:76">cues_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:82"><expr pos:start="49:9" pos:end="49:81"><name pos:start="49:9" pos:end="49:18">bytes_read</name> <operator pos:start="49:20" pos:end="49:21">+=</operator> <call pos:start="49:23" pos:end="49:81"><name pos:start="49:23" pos:end="49:38">ebml_read_length</name><argument_list pos:start="49:39" pos:end="49:81">(<argument pos:start="49:40" pos:end="49:47"><expr pos:start="49:40" pos:end="49:47"><name pos:start="49:40" pos:end="49:47">matroska</name></expr></argument>, <argument pos:start="49:50" pos:end="49:66"><expr pos:start="49:50" pos:end="49:66"><name pos:start="49:50" pos:end="49:66"><name pos:start="49:50" pos:end="49:57">matroska</name><operator pos:start="49:58" pos:end="49:59">-&gt;</operator><name pos:start="49:60" pos:end="49:62">ctx</name><operator pos:start="49:63" pos:end="49:64">-&gt;</operator><name pos:start="49:65" pos:end="49:66">pb</name></name></expr></argument>, <argument pos:start="49:69" pos:end="49:80"><expr pos:start="49:69" pos:end="49:80"><operator pos:start="49:69" pos:end="49:69">&amp;</operator><name pos:start="49:70" pos:end="49:80">cues_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:61"><expr pos:start="51:9" pos:end="51:60"><name pos:start="51:9" pos:end="51:16">cues_end</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <name pos:start="51:20" pos:end="51:29">cues_start</name> <operator pos:start="51:31" pos:end="51:31">+</operator> <name pos:start="51:33" pos:end="51:43">cues_length</name> <operator pos:start="51:45" pos:end="51:45">+</operator> <name pos:start="51:47" pos:end="51:56">bytes_read</name> <operator pos:start="51:58" pos:end="51:58">-</operator> <literal type="number" pos:start="51:60" pos:end="51:60">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:55"><expr pos:start="55:5" pos:end="55:54"><call pos:start="55:5" pos:end="55:54"><name pos:start="55:5" pos:end="55:13">avio_seek</name><argument_list pos:start="55:14" pos:end="55:54">(<argument pos:start="55:15" pos:end="55:31"><expr pos:start="55:15" pos:end="55:31"><name pos:start="55:15" pos:end="55:31"><name pos:start="55:15" pos:end="55:22">matroska</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:27">ctx</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:31">pb</name></name></expr></argument>, <argument pos:start="55:34" pos:end="55:43"><expr pos:start="55:34" pos:end="55:43"><name pos:start="55:34" pos:end="55:43">before_pos</name></expr></argument>, <argument pos:start="55:46" pos:end="55:53"><expr pos:start="55:46" pos:end="55:53"><name pos:start="55:46" pos:end="55:53">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="57:54"><if pos:start="57:5" pos:end="57:54">if <condition pos:start="57:8" pos:end="57:43">(<expr pos:start="57:9" pos:end="57:42"><name pos:start="57:9" pos:end="57:18">cues_start</name> <operator pos:start="57:20" pos:end="57:21">==</operator> <operator pos:start="57:23" pos:end="57:23">-</operator><literal type="number" pos:start="57:24" pos:end="57:24">1</literal> <operator pos:start="57:26" pos:end="57:27">||</operator> <name pos:start="57:29" pos:end="57:36">cues_end</name> <operator pos:start="57:38" pos:end="57:39">==</operator> <operator pos:start="57:41" pos:end="57:41">-</operator><literal type="number" pos:start="57:42" pos:end="57:42">1</literal></expr>)</condition><block type="pseudo" pos:start="57:45" pos:end="57:54"><block_content pos:start="57:45" pos:end="57:54"> <return pos:start="57:45" pos:end="57:54">return <expr pos:start="57:52" pos:end="57:53"><operator pos:start="57:52" pos:end="57:52">-</operator><literal type="number" pos:start="57:53" pos:end="57:53">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="61:5" pos:end="61:21">// parse the cues</comment>

    <expr_stmt pos:start="63:5" pos:end="63:34"><expr pos:start="63:5" pos:end="63:33"><call pos:start="63:5" pos:end="63:33"><name pos:start="63:5" pos:end="63:23">matroska_parse_cues</name><argument_list pos:start="63:24" pos:end="63:33">(<argument pos:start="63:25" pos:end="63:32"><expr pos:start="63:25" pos:end="63:32"><name pos:start="63:25" pos:end="63:32">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="67:5" pos:end="67:17">// cues start</comment>

    <expr_stmt pos:start="69:5" pos:end="69:73"><expr pos:start="69:5" pos:end="69:72"><call pos:start="69:5" pos:end="69:72"><name pos:start="69:5" pos:end="69:19">av_dict_set_int</name><argument_list pos:start="69:20" pos:end="69:72">(<argument pos:start="69:21" pos:end="69:44"><expr pos:start="69:21" pos:end="69:44"><operator pos:start="69:21" pos:end="69:21">&amp;</operator><name pos:start="69:22" pos:end="69:34"><name pos:start="69:22" pos:end="69:22">s</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:31">streams</name><index pos:start="69:32" pos:end="69:34">[<expr pos:start="69:33" pos:end="69:33"><literal type="number" pos:start="69:33" pos:end="69:33">0</literal></expr>]</index></name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:44">metadata</name></expr></argument>, <argument pos:start="69:47" pos:end="69:56"><expr pos:start="69:47" pos:end="69:56"><name pos:start="69:47" pos:end="69:56">CUES_START</name></expr></argument>, <argument pos:start="69:59" pos:end="69:68"><expr pos:start="69:59" pos:end="69:68"><name pos:start="69:59" pos:end="69:68">cues_start</name></expr></argument>, <argument pos:start="69:71" pos:end="69:71"><expr pos:start="69:71" pos:end="69:71"><literal type="number" pos:start="69:71" pos:end="69:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="73:5" pos:end="73:15">// cues end</comment>

    <expr_stmt pos:start="75:5" pos:end="75:69"><expr pos:start="75:5" pos:end="75:68"><call pos:start="75:5" pos:end="75:68"><name pos:start="75:5" pos:end="75:19">av_dict_set_int</name><argument_list pos:start="75:20" pos:end="75:68">(<argument pos:start="75:21" pos:end="75:44"><expr pos:start="75:21" pos:end="75:44"><operator pos:start="75:21" pos:end="75:21">&amp;</operator><name pos:start="75:22" pos:end="75:34"><name pos:start="75:22" pos:end="75:22">s</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:31">streams</name><index pos:start="75:32" pos:end="75:34">[<expr pos:start="75:33" pos:end="75:33"><literal type="number" pos:start="75:33" pos:end="75:33">0</literal></expr>]</index></name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:44">metadata</name></expr></argument>, <argument pos:start="75:47" pos:end="75:54"><expr pos:start="75:47" pos:end="75:54"><name pos:start="75:47" pos:end="75:54">CUES_END</name></expr></argument>, <argument pos:start="75:57" pos:end="75:64"><expr pos:start="75:57" pos:end="75:64"><name pos:start="75:57" pos:end="75:64">cues_end</name></expr></argument>, <argument pos:start="75:67" pos:end="75:67"><expr pos:start="75:67" pos:end="75:67"><literal type="number" pos:start="75:67" pos:end="75:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="79:5" pos:end="79:16">// bandwidth</comment>

    <expr_stmt pos:start="81:5" pos:end="81:68"><expr pos:start="81:5" pos:end="81:67"><name pos:start="81:5" pos:end="81:13">bandwidth</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <call pos:start="81:17" pos:end="81:67"><name pos:start="81:17" pos:end="81:52">webm_dash_manifest_compute_bandwidth</name><argument_list pos:start="81:53" pos:end="81:67">(<argument pos:start="81:54" pos:end="81:54"><expr pos:start="81:54" pos:end="81:54"><name pos:start="81:54" pos:end="81:54">s</name></expr></argument>, <argument pos:start="81:57" pos:end="81:66"><expr pos:start="81:57" pos:end="81:66"><name pos:start="81:57" pos:end="81:66">cues_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="83:33"><if pos:start="83:5" pos:end="83:33">if <condition pos:start="83:8" pos:end="83:22">(<expr pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:17">bandwidth</name> <operator pos:start="83:19" pos:end="83:19">&lt;</operator> <literal type="number" pos:start="83:21" pos:end="83:21">0</literal></expr>)</condition><block type="pseudo" pos:start="83:24" pos:end="83:33"><block_content pos:start="83:24" pos:end="83:33"> <return pos:start="83:24" pos:end="83:33">return <expr pos:start="83:31" pos:end="83:32"><operator pos:start="83:31" pos:end="83:31">-</operator><literal type="number" pos:start="83:32" pos:end="83:32">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:71"><expr pos:start="85:5" pos:end="85:70"><call pos:start="85:5" pos:end="85:70"><name pos:start="85:5" pos:end="85:19">av_dict_set_int</name><argument_list pos:start="85:20" pos:end="85:70">(<argument pos:start="85:21" pos:end="85:44"><expr pos:start="85:21" pos:end="85:44"><operator pos:start="85:21" pos:end="85:21">&amp;</operator><name pos:start="85:22" pos:end="85:34"><name pos:start="85:22" pos:end="85:22">s</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:31">streams</name><index pos:start="85:32" pos:end="85:34">[<expr pos:start="85:33" pos:end="85:33"><literal type="number" pos:start="85:33" pos:end="85:33">0</literal></expr>]</index></name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:44">metadata</name></expr></argument>, <argument pos:start="85:47" pos:end="85:55"><expr pos:start="85:47" pos:end="85:55"><name pos:start="85:47" pos:end="85:55">BANDWIDTH</name></expr></argument>, <argument pos:start="85:58" pos:end="85:66"><expr pos:start="85:58" pos:end="85:66"><name pos:start="85:58" pos:end="85:66">bandwidth</name></expr></argument>, <argument pos:start="85:69" pos:end="85:69"><expr pos:start="85:69" pos:end="85:69"><literal type="number" pos:start="85:69" pos:end="85:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="89:5" pos:end="89:50">// check if all clusters start with key frames</comment>

    <expr_stmt pos:start="91:5" pos:end="91:105"><expr pos:start="91:5" pos:end="91:104"><call pos:start="91:5" pos:end="91:104"><name pos:start="91:5" pos:end="91:19">av_dict_set_int</name><argument_list pos:start="91:20" pos:end="91:104">(<argument pos:start="91:21" pos:end="91:44"><expr pos:start="91:21" pos:end="91:44"><operator pos:start="91:21" pos:end="91:21">&amp;</operator><name pos:start="91:22" pos:end="91:34"><name pos:start="91:22" pos:end="91:22">s</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:31">streams</name><index pos:start="91:32" pos:end="91:34">[<expr pos:start="91:33" pos:end="91:33"><literal type="number" pos:start="91:33" pos:end="91:33">0</literal></expr>]</index></name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:44">metadata</name></expr></argument>, <argument pos:start="91:47" pos:end="91:62"><expr pos:start="91:47" pos:end="91:62"><name pos:start="91:47" pos:end="91:62">CLUSTER_KEYFRAME</name></expr></argument>, <argument pos:start="91:65" pos:end="91:100"><expr pos:start="91:65" pos:end="91:100"><call pos:start="91:65" pos:end="91:100"><name pos:start="91:65" pos:end="91:97">webm_clusters_start_with_keyframe</name><argument_list pos:start="91:98" pos:end="91:100">(<argument pos:start="91:99" pos:end="91:99"><expr pos:start="91:99" pos:end="91:99"><name pos:start="91:99" pos:end="91:99">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:103" pos:end="91:103"><expr pos:start="91:103" pos:end="91:103"><literal type="number" pos:start="91:103" pos:end="91:103">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="95:5" pos:end="95:96">// store cue point timestamps as a comma separated list for checking subsegment alignment in</comment>

    <comment type="line" pos:start="97:5" pos:end="97:85">// the muxer. assumes that each timestamp cannot be more than 20 characters long.</comment>

    <expr_stmt pos:start="99:5" pos:end="99:78"><expr pos:start="99:5" pos:end="99:77"><name pos:start="99:5" pos:end="99:7">buf</name> <operator pos:start="99:9" pos:end="99:9">=</operator> <call pos:start="99:11" pos:end="99:77"><name pos:start="99:11" pos:end="99:25">av_malloc_array</name><argument_list pos:start="99:26" pos:end="99:77">(<argument pos:start="99:27" pos:end="99:57"><expr pos:start="99:27" pos:end="99:57"><name pos:start="99:27" pos:end="99:39"><name pos:start="99:27" pos:end="99:27">s</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:36">streams</name><index pos:start="99:37" pos:end="99:39">[<expr pos:start="99:38" pos:end="99:38"><literal type="number" pos:start="99:38" pos:end="99:38">0</literal></expr>]</index></name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:57">nb_index_entries</name></expr></argument>, <argument pos:start="99:60" pos:end="99:76"><expr pos:start="99:60" pos:end="99:76"><literal type="number" pos:start="99:60" pos:end="99:61">20</literal> <operator pos:start="99:63" pos:end="99:63">*</operator> <sizeof pos:start="99:65" pos:end="99:76">sizeof<argument_list pos:start="99:71" pos:end="99:76">(<argument pos:start="99:72" pos:end="99:75"><expr pos:start="99:72" pos:end="99:75"><name pos:start="99:72" pos:end="99:75">char</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="101:24"><if pos:start="101:5" pos:end="101:24">if <condition pos:start="101:8" pos:end="101:13">(<expr pos:start="101:9" pos:end="101:12"><operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:12">buf</name></expr>)</condition><block type="pseudo" pos:start="101:15" pos:end="101:24"><block_content pos:start="101:15" pos:end="101:24"> <return pos:start="101:15" pos:end="101:24">return <expr pos:start="101:22" pos:end="101:23"><operator pos:start="101:22" pos:end="101:22">-</operator><literal type="number" pos:start="101:23" pos:end="101:23">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:20"><expr pos:start="103:5" pos:end="103:19"><call pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:10">strcpy</name><argument_list pos:start="103:11" pos:end="103:19">(<argument pos:start="103:12" pos:end="103:14"><expr pos:start="103:12" pos:end="103:14"><name pos:start="103:12" pos:end="103:14">buf</name></expr></argument>, <argument pos:start="103:17" pos:end="103:18"><expr pos:start="103:17" pos:end="103:18"><literal type="string" pos:start="103:17" pos:end="103:18">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="105:5" pos:end="115:5">for <control pos:start="105:9" pos:end="105:57">(<init pos:start="105:10" pos:end="105:15"><expr pos:start="105:10" pos:end="105:14"><name pos:start="105:10" pos:end="105:10">i</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <literal type="number" pos:start="105:14" pos:end="105:14">0</literal></expr>;</init> <condition pos:start="105:17" pos:end="105:52"><expr pos:start="105:17" pos:end="105:51"><name pos:start="105:17" pos:end="105:17">i</name> <operator pos:start="105:19" pos:end="105:19">&lt;</operator> <name pos:start="105:21" pos:end="105:33"><name pos:start="105:21" pos:end="105:21">s</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:30">streams</name><index pos:start="105:31" pos:end="105:33">[<expr pos:start="105:32" pos:end="105:32"><literal type="number" pos:start="105:32" pos:end="105:32">0</literal></expr>]</index></name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:51">nb_index_entries</name></expr>;</condition> <incr pos:start="105:54" pos:end="105:56"><expr pos:start="105:54" pos:end="105:56"><name pos:start="105:54" pos:end="105:54">i</name><operator pos:start="105:55" pos:end="105:56">++</operator></expr></incr>)</control> <block pos:start="105:59" pos:end="115:5">{<block_content pos:start="107:9" pos:end="113:44">

        <expr_stmt pos:start="107:9" pos:end="109:79"><expr pos:start="107:9" pos:end="109:78"><call pos:start="107:9" pos:end="109:78"><name pos:start="107:9" pos:end="107:16">snprintf</name><argument_list pos:start="107:17" pos:end="109:78">(<argument pos:start="107:18" pos:end="107:20"><expr pos:start="107:18" pos:end="107:20"><name pos:start="107:18" pos:end="107:20">buf</name></expr></argument>, <argument pos:start="107:23" pos:end="107:49"><expr pos:start="107:23" pos:end="107:49"><operator pos:start="107:23" pos:end="107:23">(</operator><name pos:start="107:24" pos:end="107:24">i</name> <operator pos:start="107:26" pos:end="107:26">+</operator> <literal type="number" pos:start="107:28" pos:end="107:28">1</literal><operator pos:start="107:29" pos:end="107:29">)</operator> <operator pos:start="107:31" pos:end="107:31">*</operator> <literal type="number" pos:start="107:33" pos:end="107:34">20</literal> <operator pos:start="107:36" pos:end="107:36">*</operator> <sizeof pos:start="107:38" pos:end="107:49">sizeof<argument_list pos:start="107:44" pos:end="107:49">(<argument pos:start="107:45" pos:end="107:48"><expr pos:start="107:45" pos:end="107:48"><name pos:start="107:45" pos:end="107:48">char</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                 <argument pos:start="109:18" pos:end="109:29"><expr pos:start="109:18" pos:end="109:29"><literal type="string" pos:start="109:18" pos:end="109:22">"%s%"</literal> <name pos:start="109:24" pos:end="109:29">PRId64</name></expr></argument>, <argument pos:start="109:32" pos:end="109:34"><expr pos:start="109:32" pos:end="109:34"><name pos:start="109:32" pos:end="109:34">buf</name></expr></argument>, <argument pos:start="109:37" pos:end="109:77"><expr pos:start="109:37" pos:end="109:77"><name pos:start="109:37" pos:end="109:49"><name pos:start="109:37" pos:end="109:37">s</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:46">streams</name><index pos:start="109:47" pos:end="109:49">[<expr pos:start="109:48" pos:end="109:48"><literal type="number" pos:start="109:48" pos:end="109:48">0</literal></expr>]</index></name><operator pos:start="109:50" pos:end="109:51">-&gt;</operator><name pos:start="109:52" pos:end="109:67"><name pos:start="109:52" pos:end="109:64">index_entries</name><index pos:start="109:65" pos:end="109:67">[<expr pos:start="109:66" pos:end="109:66"><name pos:start="109:66" pos:end="109:66">i</name></expr>]</index></name><operator pos:start="109:68" pos:end="109:68">.</operator><name pos:start="109:69" pos:end="109:77">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="113:44"><if pos:start="111:9" pos:end="113:44">if <condition pos:start="111:12" pos:end="111:53">(<expr pos:start="111:13" pos:end="111:52"><name pos:start="111:13" pos:end="111:13">i</name> <operator pos:start="111:15" pos:end="111:16">!=</operator> <name pos:start="111:18" pos:end="111:30"><name pos:start="111:18" pos:end="111:18">s</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:27">streams</name><index pos:start="111:28" pos:end="111:30">[<expr pos:start="111:29" pos:end="111:29"><literal type="number" pos:start="111:29" pos:end="111:29">0</literal></expr>]</index></name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:48">nb_index_entries</name> <operator pos:start="111:50" pos:end="111:50">-</operator> <literal type="number" pos:start="111:52" pos:end="111:52">1</literal></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:44"><block_content pos:start="113:13" pos:end="113:44">

            <expr_stmt pos:start="113:13" pos:end="113:44"><expr pos:start="113:13" pos:end="113:43"><call pos:start="113:13" pos:end="113:43"><name pos:start="113:13" pos:end="113:19">strncat</name><argument_list pos:start="113:20" pos:end="113:43">(<argument pos:start="113:21" pos:end="113:23"><expr pos:start="113:21" pos:end="113:23"><name pos:start="113:21" pos:end="113:23">buf</name></expr></argument>, <argument pos:start="113:26" pos:end="113:28"><expr pos:start="113:26" pos:end="113:28"><literal type="string" pos:start="113:26" pos:end="113:28">","</literal></expr></argument>, <argument pos:start="113:31" pos:end="113:42"><expr pos:start="113:31" pos:end="113:42"><sizeof pos:start="113:31" pos:end="113:42">sizeof<argument_list pos:start="113:37" pos:end="113:42">(<argument pos:start="113:38" pos:end="113:41"><expr pos:start="113:38" pos:end="113:41"><name pos:start="113:38" pos:end="113:41">char</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="117:5" pos:end="117:66"><expr pos:start="117:5" pos:end="117:65"><call pos:start="117:5" pos:end="117:65"><name pos:start="117:5" pos:end="117:15">av_dict_set</name><argument_list pos:start="117:16" pos:end="117:65">(<argument pos:start="117:17" pos:end="117:40"><expr pos:start="117:17" pos:end="117:40"><operator pos:start="117:17" pos:end="117:17">&amp;</operator><name pos:start="117:18" pos:end="117:30"><name pos:start="117:18" pos:end="117:18">s</name><operator pos:start="117:19" pos:end="117:20">-&gt;</operator><name pos:start="117:21" pos:end="117:27">streams</name><index pos:start="117:28" pos:end="117:30">[<expr pos:start="117:29" pos:end="117:29"><literal type="number" pos:start="117:29" pos:end="117:29">0</literal></expr>]</index></name><operator pos:start="117:31" pos:end="117:32">-&gt;</operator><name pos:start="117:33" pos:end="117:40">metadata</name></expr></argument>, <argument pos:start="117:43" pos:end="117:56"><expr pos:start="117:43" pos:end="117:56"><name pos:start="117:43" pos:end="117:56">CUE_TIMESTAMPS</name></expr></argument>, <argument pos:start="117:59" pos:end="117:61"><expr pos:start="117:59" pos:end="117:61"><name pos:start="117:59" pos:end="117:61">buf</name></expr></argument>, <argument pos:start="117:64" pos:end="117:64"><expr pos:start="117:64" pos:end="117:64"><literal type="number" pos:start="117:64" pos:end="117:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:17"><expr pos:start="119:5" pos:end="119:16"><call pos:start="119:5" pos:end="119:16"><name pos:start="119:5" pos:end="119:11">av_free</name><argument_list pos:start="119:12" pos:end="119:16">(<argument pos:start="119:13" pos:end="119:15"><expr pos:start="119:13" pos:end="119:15"><name pos:start="119:13" pos:end="119:15">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
