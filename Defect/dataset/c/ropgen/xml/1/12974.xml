<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12974.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:80"><name pos:start="1:1" pos:end="1:17">ff_voc_get_packet</name><argument_list pos:start="1:18" pos:end="1:80">(<argument pos:start="1:19" pos:end="1:36">AVFormatContext *s</argument>, <argument pos:start="1:39" pos:end="1:51">AVPacket *pkt</argument>, <argument pos:start="1:54" pos:end="1:65">AVStream *st</argument>, <argument pos:start="1:68" pos:end="1:79">int max_size</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="239:1">{<block_content pos:start="5:5" pos:end="237:15">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">VocDecContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">voc</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">AVCodecParameters</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:26">par</name> <init pos:start="7:28" pos:end="7:41">= <expr pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:31">st</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:41">codecpar</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">VocType</name></type> <name pos:start="11:13" pos:end="11:16">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">size</name></decl>, <decl pos:start="13:15" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:23">tmp_codec</name><init pos:start="13:24" pos:end="13:26">=<expr pos:start="13:25" pos:end="13:26"><operator pos:start="13:25" pos:end="13:25">-</operator><literal type="number" pos:start="13:26" pos:end="13:26">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">sample_rate</name> <init pos:start="15:21" pos:end="15:23">= <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">channels</name> <init pos:start="17:18" pos:end="17:20">= <expr pos:start="17:20" pos:end="17:20"><literal type="number" pos:start="17:20" pos:end="17:20">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int64_t</name></type> <name pos:start="19:13" pos:end="19:20">duration</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="35:41"><expr pos:start="25:5" pos:end="35:40"><call pos:start="25:5" pos:end="35:40"><name pos:start="25:5" pos:end="25:22">av_add_index_entry</name><argument_list pos:start="25:23" pos:end="35:40">(<argument pos:start="25:24" pos:end="25:25"><expr pos:start="25:24" pos:end="25:25"><name pos:start="25:24" pos:end="25:25">st</name></expr></argument>,

                       <argument pos:start="27:24" pos:end="27:36"><expr pos:start="27:24" pos:end="27:36"><call pos:start="27:24" pos:end="27:36"><name pos:start="27:24" pos:end="27:32">avio_tell</name><argument_list pos:start="27:33" pos:end="27:36">(<argument pos:start="27:34" pos:end="27:35"><expr pos:start="27:34" pos:end="27:35"><name pos:start="27:34" pos:end="27:35">pb</name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="29:24" pos:end="29:31"><expr pos:start="29:24" pos:end="29:31"><name pos:start="29:24" pos:end="29:31"><name pos:start="29:24" pos:end="29:26">voc</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:31">pts</name></name></expr></argument>,

                       <argument pos:start="31:24" pos:end="31:42"><expr pos:start="31:24" pos:end="31:42"><name pos:start="31:24" pos:end="31:42"><name pos:start="31:24" pos:end="31:26">voc</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:42">remaining_size</name></name></expr></argument>,

                       <argument pos:start="33:24" pos:end="33:24"><expr pos:start="33:24" pos:end="33:24"><literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr></argument>,

                       <argument pos:start="35:24" pos:end="35:39"><expr pos:start="35:24" pos:end="35:39"><name pos:start="35:24" pos:end="35:39">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="39:5" pos:end="161:5">while <condition pos:start="39:11" pos:end="39:32">(<expr pos:start="39:12" pos:end="39:31"><operator pos:start="39:12" pos:end="39:12">!</operator><name pos:start="39:13" pos:end="39:31"><name pos:start="39:13" pos:end="39:15">voc</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:31">remaining_size</name></name></expr>)</condition> <block pos:start="39:34" pos:end="161:5">{<block_content pos:start="41:9" pos:end="159:9">

        <expr_stmt pos:start="41:9" pos:end="41:27"><expr pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:12">type</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:26"><name pos:start="41:16" pos:end="41:22">avio_r8</name><argument_list pos:start="41:23" pos:end="41:26">(<argument pos:start="41:24" pos:end="41:25"><expr pos:start="41:24" pos:end="41:25"><name pos:start="41:24" pos:end="41:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="45:31"><if pos:start="43:9" pos:end="45:31">if <condition pos:start="43:12" pos:end="43:33">(<expr pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:16">type</name> <operator pos:start="43:18" pos:end="43:19">==</operator> <name pos:start="43:21" pos:end="43:32">VOC_TYPE_EOF</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:31"><block_content pos:start="45:13" pos:end="45:31">

            <return pos:start="45:13" pos:end="45:31">return <expr pos:start="45:20" pos:end="45:30"><name pos:start="45:20" pos:end="45:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:44"><expr pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:11">voc</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:27">remaining_size</name></name> <operator pos:start="47:29" pos:end="47:29">=</operator> <call pos:start="47:31" pos:end="47:43"><name pos:start="47:31" pos:end="47:39">avio_rl24</name><argument_list pos:start="47:40" pos:end="47:43">(<argument pos:start="47:41" pos:end="47:42"><expr pos:start="47:41" pos:end="47:42"><name pos:start="47:41" pos:end="47:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:33">(<expr pos:start="49:13" pos:end="49:32"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:32"><name pos:start="49:14" pos:end="49:16">voc</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:32">remaining_size</name></name></expr>)</condition> <block pos:start="49:35" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:64">

            <if_stmt pos:start="51:13" pos:end="53:36"><if pos:start="51:13" pos:end="53:36">if <condition pos:start="51:16" pos:end="51:33">(<expr pos:start="51:17" pos:end="51:32"><operator pos:start="51:17" pos:end="51:17">!</operator><name pos:start="51:18" pos:end="51:32"><name pos:start="51:18" pos:end="51:18">s</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:22">pb</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:32">seekable</name></name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:36"><block_content pos:start="53:17" pos:end="53:36">

                <return pos:start="53:17" pos:end="53:36">return <expr pos:start="53:24" pos:end="53:35"><call pos:start="53:24" pos:end="53:35"><name pos:start="53:24" pos:end="53:30">AVERROR</name><argument_list pos:start="53:31" pos:end="53:35">(<argument pos:start="53:32" pos:end="53:34"><expr pos:start="53:32" pos:end="53:34"><name pos:start="53:32" pos:end="53:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:64"><expr pos:start="55:13" pos:end="55:63"><name pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:15">voc</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:31">remaining_size</name></name> <operator pos:start="55:33" pos:end="55:33">=</operator> <call pos:start="55:35" pos:end="55:47"><name pos:start="55:35" pos:end="55:43">avio_size</name><argument_list pos:start="55:44" pos:end="55:47">(<argument pos:start="55:45" pos:end="55:46"><expr pos:start="55:45" pos:end="55:46"><name pos:start="55:45" pos:end="55:46">pb</name></expr></argument>)</argument_list></call> <operator pos:start="55:49" pos:end="55:49">-</operator> <call pos:start="55:51" pos:end="55:63"><name pos:start="55:51" pos:end="55:59">avio_tell</name><argument_list pos:start="55:60" pos:end="55:63">(<argument pos:start="55:61" pos:end="55:62"><expr pos:start="55:61" pos:end="55:62"><name pos:start="55:61" pos:end="55:62">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:16">max_size</name> <operator pos:start="59:18" pos:end="59:19">-=</operator> <literal type="number" pos:start="59:21" pos:end="59:21">4</literal></expr>;</expr_stmt>



        <switch pos:start="63:9" pos:end="159:9">switch <condition pos:start="63:16" pos:end="63:21">(<expr pos:start="63:17" pos:end="63:20"><name pos:start="63:17" pos:end="63:20">type</name></expr>)</condition> <block pos:start="63:23" pos:end="159:9">{<block_content pos:start="65:9" pos:end="157:18">

        <case pos:start="65:9" pos:end="65:33">case <expr pos:start="65:14" pos:end="65:32"><name pos:start="65:14" pos:end="65:32">VOC_TYPE_VOICE_DATA</name></expr>:</case>

            <if_stmt pos:start="67:13" pos:end="83:33"><if pos:start="67:13" pos:end="81:13">if <condition pos:start="67:16" pos:end="67:34">(<expr pos:start="67:17" pos:end="67:33"><operator pos:start="67:17" pos:end="67:17">!</operator><name pos:start="67:18" pos:end="67:33"><name pos:start="67:18" pos:end="67:20">par</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:33">sample_rate</name></name></expr>)</condition> <block pos:start="67:36" pos:end="81:13">{<block_content pos:start="69:17" pos:end="79:83">

                <expr_stmt pos:start="69:17" pos:end="69:65"><expr pos:start="69:17" pos:end="69:64"><name pos:start="69:17" pos:end="69:32"><name pos:start="69:17" pos:end="69:19">par</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:32">sample_rate</name></name> <operator pos:start="69:34" pos:end="69:34">=</operator> <literal type="number" pos:start="69:36" pos:end="69:42">1000000</literal> <operator pos:start="69:44" pos:end="69:44">/</operator> <operator pos:start="69:46" pos:end="69:46">(</operator><literal type="number" pos:start="69:47" pos:end="69:51">256</literal> <operator pos:start="69:51" pos:end="69:51">-</operator> <call pos:start="69:53" pos:end="69:63"><name pos:start="69:53" pos:end="69:59">avio_r8</name><argument_list pos:start="69:60" pos:end="69:63">(<argument pos:start="69:61" pos:end="69:62"><expr pos:start="69:61" pos:end="69:62"><name pos:start="69:61" pos:end="69:62">pb</name></expr></argument>)</argument_list></call><operator pos:start="69:64" pos:end="69:64">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="71:17" pos:end="73:51"><if pos:start="71:17" pos:end="73:51">if <condition pos:start="71:20" pos:end="71:32">(<expr pos:start="71:21" pos:end="71:31"><name pos:start="71:21" pos:end="71:31">sample_rate</name></expr>)</condition><block type="pseudo" pos:start="73:21" pos:end="73:51"><block_content pos:start="73:21" pos:end="73:51">

                    <expr_stmt pos:start="73:21" pos:end="73:51"><expr pos:start="73:21" pos:end="73:50"><name pos:start="73:21" pos:end="73:36"><name pos:start="73:21" pos:end="73:23">par</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:36">sample_rate</name></name> <operator pos:start="73:38" pos:end="73:38">=</operator> <name pos:start="73:40" pos:end="73:50">sample_rate</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:65"><expr pos:start="75:17" pos:end="75:64"><call pos:start="75:17" pos:end="75:64"><name pos:start="75:17" pos:end="75:35">avpriv_set_pts_info</name><argument_list pos:start="75:36" pos:end="75:64">(<argument pos:start="75:37" pos:end="75:38"><expr pos:start="75:37" pos:end="75:38"><name pos:start="75:37" pos:end="75:38">st</name></expr></argument>, <argument pos:start="75:41" pos:end="75:42"><expr pos:start="75:41" pos:end="75:42"><literal type="number" pos:start="75:41" pos:end="75:42">64</literal></expr></argument>, <argument pos:start="75:45" pos:end="75:45"><expr pos:start="75:45" pos:end="75:45"><literal type="number" pos:start="75:45" pos:end="75:45">1</literal></expr></argument>, <argument pos:start="75:48" pos:end="75:63"><expr pos:start="75:48" pos:end="75:63"><name pos:start="75:48" pos:end="75:63"><name pos:start="75:48" pos:end="75:50">par</name><operator pos:start="75:51" pos:end="75:52">-&gt;</operator><name pos:start="75:53" pos:end="75:63">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:41"><expr pos:start="77:17" pos:end="77:40"><name pos:start="77:17" pos:end="77:29"><name pos:start="77:17" pos:end="77:19">par</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:29">channels</name></name> <operator pos:start="77:31" pos:end="77:31">=</operator> <name pos:start="77:33" pos:end="77:40">channels</name></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:83"><expr pos:start="79:17" pos:end="79:82"><name pos:start="79:17" pos:end="79:42"><name pos:start="79:17" pos:end="79:19">par</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:42">bits_per_coded_sample</name></name> <operator pos:start="79:44" pos:end="79:44">=</operator> <call pos:start="79:46" pos:end="79:82"><name pos:start="79:46" pos:end="79:67">av_get_bits_per_sample</name><argument_list pos:start="79:68" pos:end="79:82">(<argument pos:start="79:69" pos:end="79:81"><expr pos:start="79:69" pos:end="79:81"><name pos:start="79:69" pos:end="79:81"><name pos:start="79:69" pos:end="79:71">par</name><operator pos:start="79:72" pos:end="79:73">-&gt;</operator><name pos:start="79:74" pos:end="79:81">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="81:15" pos:end="83:33">else<block type="pseudo" pos:start="83:17" pos:end="83:33"><block_content pos:start="83:17" pos:end="83:33">

                <expr_stmt pos:start="83:17" pos:end="83:33"><expr pos:start="83:17" pos:end="83:32"><call pos:start="83:17" pos:end="83:32"><name pos:start="83:17" pos:end="83:25">avio_skip</name><argument_list pos:start="83:26" pos:end="83:32">(<argument pos:start="83:27" pos:end="83:28"><expr pos:start="83:27" pos:end="83:28"><name pos:start="83:27" pos:end="83:28">pb</name></expr></argument>, <argument pos:start="83:31" pos:end="83:31"><expr pos:start="83:31" pos:end="83:31"><literal type="number" pos:start="83:31" pos:end="83:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:36"><expr pos:start="85:13" pos:end="85:35"><name pos:start="85:13" pos:end="85:21">tmp_codec</name> <operator pos:start="85:23" pos:end="85:23">=</operator> <call pos:start="85:25" pos:end="85:35"><name pos:start="85:25" pos:end="85:31">avio_r8</name><argument_list pos:start="85:32" pos:end="85:35">(<argument pos:start="85:33" pos:end="85:34"><expr pos:start="85:33" pos:end="85:34"><name pos:start="85:33" pos:end="85:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:37"><expr pos:start="87:13" pos:end="87:36"><name pos:start="87:13" pos:end="87:31"><name pos:start="87:13" pos:end="87:15">voc</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:31">remaining_size</name></name> <operator pos:start="87:33" pos:end="87:34">-=</operator> <literal type="number" pos:start="87:36" pos:end="87:36">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:26"><expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:20">max_size</name> <operator pos:start="89:22" pos:end="89:23">-=</operator> <literal type="number" pos:start="89:25" pos:end="89:25">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:25"><expr pos:start="91:13" pos:end="91:24"><name pos:start="91:13" pos:end="91:20">channels</name> <operator pos:start="91:22" pos:end="91:22">=</operator> <literal type="number" pos:start="91:24" pos:end="91:24">1</literal></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>



        <case pos:start="97:9" pos:end="97:38">case <expr pos:start="97:14" pos:end="97:37"><name pos:start="97:14" pos:end="97:37">VOC_TYPE_VOICE_DATA_CONT</name></expr>:</case>

            <break pos:start="99:13" pos:end="99:18">break;</break>



        <case pos:start="103:9" pos:end="103:31">case <expr pos:start="103:14" pos:end="103:30"><name pos:start="103:14" pos:end="103:30">VOC_TYPE_EXTENDED</name></expr>:</case>

            <expr_stmt pos:start="105:13" pos:end="105:40"><expr pos:start="105:13" pos:end="105:39"><name pos:start="105:13" pos:end="105:23">sample_rate</name> <operator pos:start="105:25" pos:end="105:25">=</operator> <call pos:start="105:27" pos:end="105:39"><name pos:start="105:27" pos:end="105:35">avio_rl16</name><argument_list pos:start="105:36" pos:end="105:39">(<argument pos:start="105:37" pos:end="105:38"><expr pos:start="105:37" pos:end="105:38"><name pos:start="105:37" pos:end="105:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:24"><expr pos:start="107:13" pos:end="107:23"><call pos:start="107:13" pos:end="107:23"><name pos:start="107:13" pos:end="107:19">avio_r8</name><argument_list pos:start="107:20" pos:end="107:23">(<argument pos:start="107:21" pos:end="107:22"><expr pos:start="107:21" pos:end="107:22"><name pos:start="107:21" pos:end="107:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:39"><expr pos:start="109:13" pos:end="109:38"><name pos:start="109:13" pos:end="109:20">channels</name> <operator pos:start="109:22" pos:end="109:22">=</operator> <call pos:start="109:24" pos:end="109:34"><name pos:start="109:24" pos:end="109:30">avio_r8</name><argument_list pos:start="109:31" pos:end="109:34">(<argument pos:start="109:32" pos:end="109:33"><expr pos:start="109:32" pos:end="109:33"><name pos:start="109:32" pos:end="109:33">pb</name></expr></argument>)</argument_list></call> <operator pos:start="109:36" pos:end="109:36">+</operator> <literal type="number" pos:start="109:38" pos:end="109:38">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:73"><expr pos:start="111:13" pos:end="111:72"><name pos:start="111:13" pos:end="111:23">sample_rate</name> <operator pos:start="111:25" pos:end="111:25">=</operator> <literal type="number" pos:start="111:27" pos:end="111:35">256000000</literal> <operator pos:start="111:37" pos:end="111:37">/</operator> <operator pos:start="111:39" pos:end="111:39">(</operator><name pos:start="111:40" pos:end="111:47">channels</name> <operator pos:start="111:49" pos:end="111:49">*</operator> <operator pos:start="111:51" pos:end="111:51">(</operator><literal type="number" pos:start="111:52" pos:end="111:58">65536</literal> <operator pos:start="111:58" pos:end="111:58">-</operator> <name pos:start="111:60" pos:end="111:70">sample_rate</name><operator pos:start="111:71" pos:end="111:71">)</operator><operator pos:start="111:72" pos:end="111:72">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:36"><expr pos:start="113:13" pos:end="113:35"><name pos:start="113:13" pos:end="113:31"><name pos:start="113:13" pos:end="113:15">voc</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:31">remaining_size</name></name> <operator pos:start="113:33" pos:end="113:33">=</operator> <literal type="number" pos:start="113:35" pos:end="113:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:26"><expr pos:start="115:13" pos:end="115:25"><name pos:start="115:13" pos:end="115:20">max_size</name> <operator pos:start="115:22" pos:end="115:23">-=</operator> <literal type="number" pos:start="115:25" pos:end="115:25">4</literal></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>



        <case pos:start="121:9" pos:end="121:37">case <expr pos:start="121:14" pos:end="121:36"><name pos:start="121:14" pos:end="121:36">VOC_TYPE_NEW_VOICE_DATA</name></expr>:</case>

            <if_stmt pos:start="123:13" pos:end="135:33"><if pos:start="123:13" pos:end="133:13">if <condition pos:start="123:16" pos:end="123:34">(<expr pos:start="123:17" pos:end="123:33"><operator pos:start="123:17" pos:end="123:17">!</operator><name pos:start="123:18" pos:end="123:33"><name pos:start="123:18" pos:end="123:20">par</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:33">sample_rate</name></name></expr>)</condition> <block pos:start="123:36" pos:end="133:13">{<block_content pos:start="125:17" pos:end="131:44">

                <expr_stmt pos:start="125:17" pos:end="125:49"><expr pos:start="125:17" pos:end="125:48"><name pos:start="125:17" pos:end="125:32"><name pos:start="125:17" pos:end="125:19">par</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:32">sample_rate</name></name> <operator pos:start="125:34" pos:end="125:34">=</operator> <call pos:start="125:36" pos:end="125:48"><name pos:start="125:36" pos:end="125:44">avio_rl32</name><argument_list pos:start="125:45" pos:end="125:48">(<argument pos:start="125:46" pos:end="125:47"><expr pos:start="125:46" pos:end="125:47"><name pos:start="125:46" pos:end="125:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:65"><expr pos:start="127:17" pos:end="127:64"><call pos:start="127:17" pos:end="127:64"><name pos:start="127:17" pos:end="127:35">avpriv_set_pts_info</name><argument_list pos:start="127:36" pos:end="127:64">(<argument pos:start="127:37" pos:end="127:38"><expr pos:start="127:37" pos:end="127:38"><name pos:start="127:37" pos:end="127:38">st</name></expr></argument>, <argument pos:start="127:41" pos:end="127:42"><expr pos:start="127:41" pos:end="127:42"><literal type="number" pos:start="127:41" pos:end="127:42">64</literal></expr></argument>, <argument pos:start="127:45" pos:end="127:45"><expr pos:start="127:45" pos:end="127:45"><literal type="number" pos:start="127:45" pos:end="127:45">1</literal></expr></argument>, <argument pos:start="127:48" pos:end="127:63"><expr pos:start="127:48" pos:end="127:63"><name pos:start="127:48" pos:end="127:63"><name pos:start="127:48" pos:end="127:50">par</name><operator pos:start="127:51" pos:end="127:52">-&gt;</operator><name pos:start="127:53" pos:end="127:63">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:57"><expr pos:start="129:17" pos:end="129:56"><name pos:start="129:17" pos:end="129:42"><name pos:start="129:17" pos:end="129:19">par</name><operator pos:start="129:20" pos:end="129:21">-&gt;</operator><name pos:start="129:22" pos:end="129:42">bits_per_coded_sample</name></name> <operator pos:start="129:44" pos:end="129:44">=</operator> <call pos:start="129:46" pos:end="129:56"><name pos:start="129:46" pos:end="129:52">avio_r8</name><argument_list pos:start="129:53" pos:end="129:56">(<argument pos:start="129:54" pos:end="129:55"><expr pos:start="129:54" pos:end="129:55"><name pos:start="129:54" pos:end="129:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:44"><expr pos:start="131:17" pos:end="131:43"><name pos:start="131:17" pos:end="131:29"><name pos:start="131:17" pos:end="131:19">par</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:29">channels</name></name> <operator pos:start="131:31" pos:end="131:31">=</operator> <call pos:start="131:33" pos:end="131:43"><name pos:start="131:33" pos:end="131:39">avio_r8</name><argument_list pos:start="131:40" pos:end="131:43">(<argument pos:start="131:41" pos:end="131:42"><expr pos:start="131:41" pos:end="131:42"><name pos:start="131:41" pos:end="131:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="133:15" pos:end="135:33">else<block type="pseudo" pos:start="135:17" pos:end="135:33"><block_content pos:start="135:17" pos:end="135:33">

                <expr_stmt pos:start="135:17" pos:end="135:33"><expr pos:start="135:17" pos:end="135:32"><call pos:start="135:17" pos:end="135:32"><name pos:start="135:17" pos:end="135:25">avio_skip</name><argument_list pos:start="135:26" pos:end="135:32">(<argument pos:start="135:27" pos:end="135:28"><expr pos:start="135:27" pos:end="135:28"><name pos:start="135:27" pos:end="135:28">pb</name></expr></argument>, <argument pos:start="135:31" pos:end="135:31"><expr pos:start="135:31" pos:end="135:31"><literal type="number" pos:start="135:31" pos:end="135:31">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:38"><expr pos:start="137:13" pos:end="137:37"><name pos:start="137:13" pos:end="137:21">tmp_codec</name> <operator pos:start="137:23" pos:end="137:23">=</operator> <call pos:start="137:25" pos:end="137:37"><name pos:start="137:25" pos:end="137:33">avio_rl16</name><argument_list pos:start="137:34" pos:end="137:37">(<argument pos:start="137:35" pos:end="137:36"><expr pos:start="137:35" pos:end="137:36"><name pos:start="137:35" pos:end="137:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:29"><expr pos:start="139:13" pos:end="139:28"><call pos:start="139:13" pos:end="139:28"><name pos:start="139:13" pos:end="139:21">avio_skip</name><argument_list pos:start="139:22" pos:end="139:28">(<argument pos:start="139:23" pos:end="139:24"><expr pos:start="139:23" pos:end="139:24"><name pos:start="139:23" pos:end="139:24">pb</name></expr></argument>, <argument pos:start="139:27" pos:end="139:27"><expr pos:start="139:27" pos:end="139:27"><literal type="number" pos:start="139:27" pos:end="139:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:38"><expr pos:start="141:13" pos:end="141:37"><name pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:15">voc</name><operator pos:start="141:16" pos:end="141:17">-&gt;</operator><name pos:start="141:18" pos:end="141:31">remaining_size</name></name> <operator pos:start="141:33" pos:end="141:34">-=</operator> <literal type="number" pos:start="141:36" pos:end="141:37">12</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:27"><expr pos:start="143:13" pos:end="143:26"><name pos:start="143:13" pos:end="143:20">max_size</name> <operator pos:start="143:22" pos:end="143:23">-=</operator> <literal type="number" pos:start="143:25" pos:end="143:26">12</literal></expr>;</expr_stmt>

            <break pos:start="145:13" pos:end="145:18">break;</break>



        <default pos:start="149:9" pos:end="149:16">default:</default>

            <expr_stmt pos:start="151:13" pos:end="151:47"><expr pos:start="151:13" pos:end="151:46"><call pos:start="151:13" pos:end="151:46"><name pos:start="151:13" pos:end="151:21">avio_skip</name><argument_list pos:start="151:22" pos:end="151:46">(<argument pos:start="151:23" pos:end="151:24"><expr pos:start="151:23" pos:end="151:24"><name pos:start="151:23" pos:end="151:24">pb</name></expr></argument>, <argument pos:start="151:27" pos:end="151:45"><expr pos:start="151:27" pos:end="151:45"><name pos:start="151:27" pos:end="151:45"><name pos:start="151:27" pos:end="151:29">voc</name><operator pos:start="151:30" pos:end="151:31">-&gt;</operator><name pos:start="151:32" pos:end="151:45">remaining_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:44"><expr pos:start="153:13" pos:end="153:43"><name pos:start="153:13" pos:end="153:20">max_size</name> <operator pos:start="153:22" pos:end="153:23">-=</operator> <name pos:start="153:25" pos:end="153:43"><name pos:start="153:25" pos:end="153:27">voc</name><operator pos:start="153:28" pos:end="153:29">-&gt;</operator><name pos:start="153:30" pos:end="153:43">remaining_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:36"><expr pos:start="155:13" pos:end="155:35"><name pos:start="155:13" pos:end="155:31"><name pos:start="155:13" pos:end="155:15">voc</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:31">remaining_size</name></name> <operator pos:start="155:33" pos:end="155:33">=</operator> <literal type="number" pos:start="155:35" pos:end="155:35">0</literal></expr>;</expr_stmt>

            <break pos:start="157:13" pos:end="157:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></while>



    <if_stmt pos:start="165:5" pos:end="171:5"><if pos:start="165:5" pos:end="171:5">if <condition pos:start="165:8" pos:end="165:30">(<expr pos:start="165:9" pos:end="165:29"><name pos:start="165:9" pos:end="165:24"><name pos:start="165:9" pos:end="165:11">par</name><operator pos:start="165:12" pos:end="165:13">-&gt;</operator><name pos:start="165:14" pos:end="165:24">sample_rate</name></name> <operator pos:start="165:26" pos:end="165:27">&lt;=</operator> <literal type="number" pos:start="165:29" pos:end="165:29">0</literal></expr>)</condition> <block pos:start="165:32" pos:end="171:5">{<block_content pos:start="167:9" pos:end="169:35">

        <expr_stmt pos:start="167:9" pos:end="167:78"><expr pos:start="167:9" pos:end="167:77"><call pos:start="167:9" pos:end="167:77"><name pos:start="167:9" pos:end="167:14">av_log</name><argument_list pos:start="167:15" pos:end="167:77">(<argument pos:start="167:16" pos:end="167:16"><expr pos:start="167:16" pos:end="167:16"><name pos:start="167:16" pos:end="167:16">s</name></expr></argument>, <argument pos:start="167:19" pos:end="167:30"><expr pos:start="167:19" pos:end="167:30"><name pos:start="167:19" pos:end="167:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="167:33" pos:end="167:58"><expr pos:start="167:33" pos:end="167:58"><literal type="string" pos:start="167:33" pos:end="167:58">"Invalid sample rate %d\n"</literal></expr></argument>, <argument pos:start="167:61" pos:end="167:76"><expr pos:start="167:61" pos:end="167:76"><name pos:start="167:61" pos:end="167:76"><name pos:start="167:61" pos:end="167:63">par</name><operator pos:start="167:64" pos:end="167:65">-&gt;</operator><name pos:start="167:66" pos:end="167:76">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="169:9" pos:end="169:35">return <expr pos:start="169:16" pos:end="169:34"><name pos:start="169:16" pos:end="169:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="175:5" pos:end="201:5"><if pos:start="175:5" pos:end="201:5">if <condition pos:start="175:8" pos:end="175:23">(<expr pos:start="175:9" pos:end="175:22"><name pos:start="175:9" pos:end="175:17">tmp_codec</name> <operator pos:start="175:19" pos:end="175:20">&gt;=</operator> <literal type="number" pos:start="175:22" pos:end="175:22">0</literal></expr>)</condition> <block pos:start="175:25" pos:end="201:5">{<block_content pos:start="177:9" pos:end="199:9">

        <expr_stmt pos:start="177:9" pos:end="177:66"><expr pos:start="177:9" pos:end="177:65"><name pos:start="177:9" pos:end="177:17">tmp_codec</name> <operator pos:start="177:19" pos:end="177:19">=</operator> <call pos:start="177:21" pos:end="177:65"><name pos:start="177:21" pos:end="177:35">ff_codec_get_id</name><argument_list pos:start="177:36" pos:end="177:65">(<argument pos:start="177:37" pos:end="177:53"><expr pos:start="177:37" pos:end="177:53"><name pos:start="177:37" pos:end="177:53">ff_voc_codec_tags</name></expr></argument>, <argument pos:start="177:56" pos:end="177:64"><expr pos:start="177:56" pos:end="177:64"><name pos:start="177:56" pos:end="177:64">tmp_codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="179:9" pos:end="185:85"><if pos:start="179:9" pos:end="181:38">if <condition pos:start="179:12" pos:end="179:46">(<expr pos:start="179:13" pos:end="179:45"><name pos:start="179:13" pos:end="179:25"><name pos:start="179:13" pos:end="179:15">par</name><operator pos:start="179:16" pos:end="179:17">-&gt;</operator><name pos:start="179:18" pos:end="179:25">codec_id</name></name> <operator pos:start="179:27" pos:end="179:28">==</operator> <name pos:start="179:30" pos:end="179:45">AV_CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="181:13" pos:end="181:38"><block_content pos:start="181:13" pos:end="181:38">

            <expr_stmt pos:start="181:13" pos:end="181:38"><expr pos:start="181:13" pos:end="181:37"><name pos:start="181:13" pos:end="181:25"><name pos:start="181:13" pos:end="181:15">par</name><operator pos:start="181:16" pos:end="181:17">-&gt;</operator><name pos:start="181:18" pos:end="181:25">codec_id</name></name> <operator pos:start="181:27" pos:end="181:27">=</operator> <name pos:start="181:29" pos:end="181:37">tmp_codec</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="183:9" pos:end="185:85">else if <condition pos:start="183:17" pos:end="183:44">(<expr pos:start="183:18" pos:end="183:43"><name pos:start="183:18" pos:end="183:30"><name pos:start="183:18" pos:end="183:20">par</name><operator pos:start="183:21" pos:end="183:22">-&gt;</operator><name pos:start="183:23" pos:end="183:30">codec_id</name></name> <operator pos:start="183:32" pos:end="183:33">!=</operator> <name pos:start="183:35" pos:end="183:43">tmp_codec</name></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:85"><block_content pos:start="185:13" pos:end="185:85">

            <expr_stmt pos:start="185:13" pos:end="185:85"><expr pos:start="185:13" pos:end="185:84"><call pos:start="185:13" pos:end="185:84"><name pos:start="185:13" pos:end="185:18">av_log</name><argument_list pos:start="185:19" pos:end="185:84">(<argument pos:start="185:20" pos:end="185:20"><expr pos:start="185:20" pos:end="185:20"><name pos:start="185:20" pos:end="185:20">s</name></expr></argument>, <argument pos:start="185:23" pos:end="185:36"><expr pos:start="185:23" pos:end="185:36"><name pos:start="185:23" pos:end="185:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="185:39" pos:end="185:83"><expr pos:start="185:39" pos:end="185:83"><literal type="string" pos:start="185:39" pos:end="185:83">"Ignoring mid-stream change in audio codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="187:9" pos:end="199:9"><if pos:start="187:9" pos:end="199:9">if <condition pos:start="187:12" pos:end="187:46">(<expr pos:start="187:13" pos:end="187:45"><name pos:start="187:13" pos:end="187:25"><name pos:start="187:13" pos:end="187:15">par</name><operator pos:start="187:16" pos:end="187:17">-&gt;</operator><name pos:start="187:18" pos:end="187:25">codec_id</name></name> <operator pos:start="187:27" pos:end="187:28">==</operator> <name pos:start="187:30" pos:end="187:45">AV_CODEC_ID_NONE</name></expr>)</condition> <block pos:start="187:48" pos:end="199:9">{<block_content pos:start="189:13" pos:end="197:61">

            <if_stmt pos:start="189:13" pos:end="195:13"><if pos:start="189:13" pos:end="195:13">if <condition pos:start="189:16" pos:end="189:54">(<expr pos:start="189:17" pos:end="189:53"><name pos:start="189:17" pos:end="189:33"><name pos:start="189:17" pos:end="189:17">s</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:33">audio_codec_id</name></name> <operator pos:start="189:35" pos:end="189:36">==</operator> <name pos:start="189:38" pos:end="189:53">AV_CODEC_ID_NONE</name></expr>)</condition> <block pos:start="189:56" pos:end="195:13">{<block_content pos:start="191:17" pos:end="193:39">

                <expr_stmt pos:start="191:17" pos:end="191:63"><expr pos:start="191:17" pos:end="191:62"><call pos:start="191:17" pos:end="191:62"><name pos:start="191:17" pos:end="191:22">av_log</name><argument_list pos:start="191:23" pos:end="191:62">(<argument pos:start="191:24" pos:end="191:24"><expr pos:start="191:24" pos:end="191:24"><name pos:start="191:24" pos:end="191:24">s</name></expr></argument>, <argument pos:start="191:27" pos:end="191:38"><expr pos:start="191:27" pos:end="191:38"><name pos:start="191:27" pos:end="191:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="191:41" pos:end="191:61"><expr pos:start="191:41" pos:end="191:61"><literal type="string" pos:start="191:41" pos:end="191:61">"unknown codec tag\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="193:17" pos:end="193:39">return <expr pos:start="193:24" pos:end="193:38"><call pos:start="193:24" pos:end="193:38"><name pos:start="193:24" pos:end="193:30">AVERROR</name><argument_list pos:start="193:31" pos:end="193:38">(<argument pos:start="193:32" pos:end="193:37"><expr pos:start="193:32" pos:end="193:37"><name pos:start="193:32" pos:end="193:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:61"><expr pos:start="197:13" pos:end="197:60"><call pos:start="197:13" pos:end="197:60"><name pos:start="197:13" pos:end="197:18">av_log</name><argument_list pos:start="197:19" pos:end="197:60">(<argument pos:start="197:20" pos:end="197:20"><expr pos:start="197:20" pos:end="197:20"><name pos:start="197:20" pos:end="197:20">s</name></expr></argument>, <argument pos:start="197:23" pos:end="197:36"><expr pos:start="197:23" pos:end="197:36"><name pos:start="197:23" pos:end="197:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="197:39" pos:end="197:59"><expr pos:start="197:39" pos:end="197:59"><literal type="string" pos:start="197:39" pos:end="197:59">"unknown codec tag\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="205:5" pos:end="205:82"><expr pos:start="205:5" pos:end="205:81"><name pos:start="205:5" pos:end="205:17"><name pos:start="205:5" pos:end="205:7">par</name><operator pos:start="205:8" pos:end="205:9">-&gt;</operator><name pos:start="205:10" pos:end="205:17">bit_rate</name></name> <operator pos:start="205:19" pos:end="205:19">=</operator> <name pos:start="205:21" pos:end="205:36"><name pos:start="205:21" pos:end="205:23">par</name><operator pos:start="205:24" pos:end="205:25">-&gt;</operator><name pos:start="205:26" pos:end="205:36">sample_rate</name></name> <operator pos:start="205:38" pos:end="205:38">*</operator> <name pos:start="205:40" pos:end="205:52"><name pos:start="205:40" pos:end="205:42">par</name><operator pos:start="205:43" pos:end="205:44">-&gt;</operator><name pos:start="205:45" pos:end="205:52">channels</name></name> <operator pos:start="205:54" pos:end="205:54">*</operator> <name pos:start="205:56" pos:end="205:81"><name pos:start="205:56" pos:end="205:58">par</name><operator pos:start="205:59" pos:end="205:60">-&gt;</operator><name pos:start="205:61" pos:end="205:81">bits_per_coded_sample</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="209:5" pos:end="211:24"><if pos:start="209:5" pos:end="211:24">if <condition pos:start="209:8" pos:end="209:22">(<expr pos:start="209:9" pos:end="209:21"><name pos:start="209:9" pos:end="209:16">max_size</name> <operator pos:start="209:18" pos:end="209:19">&lt;=</operator> <literal type="number" pos:start="209:21" pos:end="209:21">0</literal></expr>)</condition><block type="pseudo" pos:start="211:9" pos:end="211:24"><block_content pos:start="211:9" pos:end="211:24">

        <expr_stmt pos:start="211:9" pos:end="211:24"><expr pos:start="211:9" pos:end="211:23"><name pos:start="211:9" pos:end="211:16">max_size</name> <operator pos:start="211:18" pos:end="211:18">=</operator> <literal type="number" pos:start="211:20" pos:end="211:23">2048</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:48"><expr pos:start="213:5" pos:end="213:47"><name pos:start="213:5" pos:end="213:8">size</name> <operator pos:start="213:10" pos:end="213:10">=</operator> <call pos:start="213:12" pos:end="213:47"><name pos:start="213:12" pos:end="213:16">FFMIN</name><argument_list pos:start="213:17" pos:end="213:47">(<argument pos:start="213:18" pos:end="213:36"><expr pos:start="213:18" pos:end="213:36"><name pos:start="213:18" pos:end="213:36"><name pos:start="213:18" pos:end="213:20">voc</name><operator pos:start="213:21" pos:end="213:22">-&gt;</operator><name pos:start="213:23" pos:end="213:36">remaining_size</name></name></expr></argument>, <argument pos:start="213:39" pos:end="213:46"><expr pos:start="213:39" pos:end="213:46"><name pos:start="213:39" pos:end="213:46">max_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:32"><expr pos:start="215:5" pos:end="215:31"><name pos:start="215:5" pos:end="215:23"><name pos:start="215:5" pos:end="215:7">voc</name><operator pos:start="215:8" pos:end="215:9">-&gt;</operator><name pos:start="215:10" pos:end="215:23">remaining_size</name></name> <operator pos:start="215:25" pos:end="215:26">-=</operator> <name pos:start="215:28" pos:end="215:31">size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:39"><expr pos:start="219:5" pos:end="219:38"><name pos:start="219:5" pos:end="219:7">ret</name> <operator pos:start="219:9" pos:end="219:9">=</operator> <call pos:start="219:11" pos:end="219:38"><name pos:start="219:11" pos:end="219:23">av_get_packet</name><argument_list pos:start="219:24" pos:end="219:38">(<argument pos:start="219:25" pos:end="219:26"><expr pos:start="219:25" pos:end="219:26"><name pos:start="219:25" pos:end="219:26">pb</name></expr></argument>, <argument pos:start="219:29" pos:end="219:31"><expr pos:start="219:29" pos:end="219:31"><name pos:start="219:29" pos:end="219:31">pkt</name></expr></argument>, <argument pos:start="219:34" pos:end="219:37"><expr pos:start="219:34" pos:end="219:37"><name pos:start="219:34" pos:end="219:37">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:35"><expr pos:start="221:5" pos:end="221:34"><name pos:start="221:5" pos:end="221:12"><name pos:start="221:5" pos:end="221:7">pkt</name><operator pos:start="221:8" pos:end="221:9">-&gt;</operator><name pos:start="221:10" pos:end="221:12">dts</name></name> <operator pos:start="221:14" pos:end="221:14">=</operator> <name pos:start="221:16" pos:end="221:23"><name pos:start="221:16" pos:end="221:18">pkt</name><operator pos:start="221:19" pos:end="221:20">-&gt;</operator><name pos:start="221:21" pos:end="221:23">pts</name></name> <operator pos:start="221:25" pos:end="221:25">=</operator> <name pos:start="221:27" pos:end="221:34"><name pos:start="221:27" pos:end="221:29">voc</name><operator pos:start="221:30" pos:end="221:31">-&gt;</operator><name pos:start="221:32" pos:end="221:34">pts</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:64"><expr pos:start="225:5" pos:end="225:63"><name pos:start="225:5" pos:end="225:12">duration</name> <operator pos:start="225:14" pos:end="225:14">=</operator> <call pos:start="225:16" pos:end="225:63"><name pos:start="225:16" pos:end="225:43">av_get_audio_frame_duration2</name><argument_list pos:start="225:44" pos:end="225:63">(<argument pos:start="225:45" pos:end="225:56"><expr pos:start="225:45" pos:end="225:56"><name pos:start="225:45" pos:end="225:56"><name pos:start="225:45" pos:end="225:46">st</name><operator pos:start="225:47" pos:end="225:48">-&gt;</operator><name pos:start="225:49" pos:end="225:56">codecpar</name></name></expr></argument>, <argument pos:start="225:59" pos:end="225:62"><expr pos:start="225:59" pos:end="225:62"><name pos:start="225:59" pos:end="225:62">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="227:5" pos:end="233:34"><if pos:start="227:5" pos:end="229:29">if <condition pos:start="227:8" pos:end="227:51">(<expr pos:start="227:9" pos:end="227:50"><name pos:start="227:9" pos:end="227:16">duration</name> <operator pos:start="227:18" pos:end="227:18">&gt;</operator> <literal type="number" pos:start="227:20" pos:end="227:20">0</literal> <operator pos:start="227:22" pos:end="227:23">&amp;&amp;</operator> <name pos:start="227:25" pos:end="227:32"><name pos:start="227:25" pos:end="227:27">voc</name><operator pos:start="227:28" pos:end="227:29">-&gt;</operator><name pos:start="227:30" pos:end="227:32">pts</name></name> <operator pos:start="227:34" pos:end="227:35">!=</operator> <name pos:start="227:37" pos:end="227:50">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="229:9" pos:end="229:29"><block_content pos:start="229:9" pos:end="229:29">

        <expr_stmt pos:start="229:9" pos:end="229:29"><expr pos:start="229:9" pos:end="229:28"><name pos:start="229:9" pos:end="229:16"><name pos:start="229:9" pos:end="229:11">voc</name><operator pos:start="229:12" pos:end="229:13">-&gt;</operator><name pos:start="229:14" pos:end="229:16">pts</name></name> <operator pos:start="229:18" pos:end="229:19">+=</operator> <name pos:start="229:21" pos:end="229:28">duration</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="231:5" pos:end="233:34">else<block type="pseudo" pos:start="233:9" pos:end="233:34"><block_content pos:start="233:9" pos:end="233:34">

        <expr_stmt pos:start="233:9" pos:end="233:34"><expr pos:start="233:9" pos:end="233:33"><name pos:start="233:9" pos:end="233:16"><name pos:start="233:9" pos:end="233:11">voc</name><operator pos:start="233:12" pos:end="233:13">-&gt;</operator><name pos:start="233:14" pos:end="233:16">pts</name></name> <operator pos:start="233:18" pos:end="233:18">=</operator> <name pos:start="233:20" pos:end="233:33">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <return pos:start="237:5" pos:end="237:15">return <expr pos:start="237:12" pos:end="237:14"><name pos:start="237:12" pos:end="237:14">ret</name></expr>;</return>

</block_content>}</block>
</unit>
