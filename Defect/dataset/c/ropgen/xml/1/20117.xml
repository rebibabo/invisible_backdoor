<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20117.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">qemu_kvm_eat_signals</name><parameter_list pos:start="1:33" pos:end="1:47">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:43"><name pos:start="1:34" pos:end="1:41">CPUState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="82:0">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:19">timespec</name></name></type> <name pos:start="5:21" pos:end="5:22">ts</name> <init pos:start="5:24" pos:end="5:33">= <expr pos:start="5:26" pos:end="5:33"><block pos:start="5:26" pos:end="5:33">{ <expr pos:start="5:28" pos:end="5:28"><literal type="number" pos:start="5:28" pos:end="5:28">0</literal></expr>, <expr pos:start="5:31" pos:end="5:31"><literal type="number" pos:start="5:31" pos:end="5:31">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">siginfo_t</name></type> <name pos:start="7:15" pos:end="7:21">siginfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">sigset_t</name></type> <name pos:start="9:14" pos:end="9:20">waitset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">sigset_t</name></type> <name pos:start="11:14" pos:end="11:19">chkset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><call pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:15">sigemptyset</name><argument_list pos:start="17:16" pos:end="17:25">(<argument pos:start="17:17" pos:end="17:24"><expr pos:start="17:17" pos:end="17:24"><operator pos:start="17:17" pos:end="17:17">&amp;</operator><name pos:start="17:18" pos:end="17:24">waitset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><call pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:13">sigaddset</name><argument_list pos:start="19:14" pos:end="19:32">(<argument pos:start="19:15" pos:end="19:22"><expr pos:start="19:15" pos:end="19:22"><operator pos:start="19:15" pos:end="19:15">&amp;</operator><name pos:start="19:16" pos:end="19:22">waitset</name></expr></argument>, <argument pos:start="19:25" pos:end="19:31"><expr pos:start="19:25" pos:end="19:31"><name pos:start="19:25" pos:end="19:31">SIG_IPI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><call pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:13">sigaddset</name><argument_list pos:start="21:14" pos:end="21:31">(<argument pos:start="21:15" pos:end="21:22"><expr pos:start="21:15" pos:end="21:22"><operator pos:start="21:15" pos:end="21:15">&amp;</operator><name pos:start="21:16" pos:end="21:22">waitset</name></expr></argument>, <argument pos:start="21:25" pos:end="21:30"><expr pos:start="21:25" pos:end="21:30"><name pos:start="21:25" pos:end="21:30">SIGBUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <do pos:start="25:5" pos:end="74:0">do <block pos:start="25:8" pos:end="69:5">{<block_content pos:start="27:9" pos:end="67:9">

        <expr_stmt pos:start="27:9" pos:end="27:50"><expr pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:9">r</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:49"><name pos:start="27:13" pos:end="27:24">sigtimedwait</name><argument_list pos:start="27:25" pos:end="27:49">(<argument pos:start="27:26" pos:end="27:33"><expr pos:start="27:26" pos:end="27:33"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:33">waitset</name></expr></argument>, <argument pos:start="27:36" pos:end="27:43"><expr pos:start="27:36" pos:end="27:43"><operator pos:start="27:36" pos:end="27:36">&amp;</operator><name pos:start="27:37" pos:end="27:43">siginfo</name></expr></argument>, <argument pos:start="27:46" pos:end="27:48"><expr pos:start="27:46" pos:end="27:48"><operator pos:start="27:46" pos:end="27:46">&amp;</operator><name pos:start="27:47" pos:end="27:48">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:60">(<expr pos:start="29:13" pos:end="29:59"><name pos:start="29:13" pos:end="29:13">r</name> <operator pos:start="29:15" pos:end="29:16">==</operator> <operator pos:start="29:18" pos:end="29:18">-</operator><literal type="number" pos:start="29:19" pos:end="29:19">1</literal> <operator pos:start="29:21" pos:end="29:22">&amp;&amp;</operator> <operator pos:start="29:24" pos:end="29:24">!</operator><operator pos:start="29:25" pos:end="29:25">(</operator><name pos:start="29:26" pos:end="29:30">errno</name> <operator pos:start="29:32" pos:end="29:33">==</operator> <name pos:start="29:35" pos:end="29:40">EAGAIN</name> <operator pos:start="29:42" pos:end="29:43">||</operator> <name pos:start="29:45" pos:end="29:49">errno</name> <operator pos:start="29:51" pos:end="29:52">==</operator> <name pos:start="29:54" pos:end="29:58">EINTR</name><operator pos:start="29:59" pos:end="29:59">)</operator></expr>)</condition> <block pos:start="29:62" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:20">

            <expr_stmt pos:start="31:13" pos:end="31:35"><expr pos:start="31:13" pos:end="31:34"><call pos:start="31:13" pos:end="31:34"><name pos:start="31:13" pos:end="31:18">perror</name><argument_list pos:start="31:19" pos:end="31:34">(<argument pos:start="31:20" pos:end="31:33"><expr pos:start="31:20" pos:end="31:33"><literal type="string" pos:start="31:20" pos:end="31:33">"sigtimedwait"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:20"><expr pos:start="33:13" pos:end="33:19"><call pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:16">exit</name><argument_list pos:start="33:17" pos:end="33:19">(<argument pos:start="33:18" pos:end="33:18"><expr pos:start="33:18" pos:end="33:18"><literal type="number" pos:start="33:18" pos:end="33:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="39:9" pos:end="55:9">switch <condition pos:start="39:16" pos:end="39:18">(<expr pos:start="39:17" pos:end="39:17"><name pos:start="39:17" pos:end="39:17">r</name></expr>)</condition> <block pos:start="39:20" pos:end="55:9">{<block_content pos:start="41:9" pos:end="53:18">

        <case pos:start="41:9" pos:end="41:20">case <expr pos:start="41:14" pos:end="41:19"><name pos:start="41:14" pos:end="41:19">SIGBUS</name></expr>:</case>

            <if_stmt pos:start="43:13" pos:end="47:13"><if pos:start="43:13" pos:end="47:13">if <condition pos:start="43:16" pos:end="43:74">(<expr pos:start="43:17" pos:end="43:73"><call pos:start="43:17" pos:end="43:73"><name pos:start="43:17" pos:end="43:34">kvm_on_sigbus_vcpu</name><argument_list pos:start="43:35" pos:end="43:73">(<argument pos:start="43:36" pos:end="43:38"><expr pos:start="43:36" pos:end="43:38"><name pos:start="43:36" pos:end="43:38">env</name></expr></argument>, <argument pos:start="43:41" pos:end="43:55"><expr pos:start="43:41" pos:end="43:55"><name pos:start="43:41" pos:end="43:55"><name pos:start="43:41" pos:end="43:47">siginfo</name><operator pos:start="43:48" pos:end="43:48">.</operator><name pos:start="43:49" pos:end="43:55">si_code</name></name></expr></argument>, <argument pos:start="43:58" pos:end="43:72"><expr pos:start="43:58" pos:end="43:72"><name pos:start="43:58" pos:end="43:72"><name pos:start="43:58" pos:end="43:64">siginfo</name><operator pos:start="43:65" pos:end="43:65">.</operator><name pos:start="43:66" pos:end="43:72">si_addr</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:76" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:33">

                <expr_stmt pos:start="45:17" pos:end="45:33"><expr pos:start="45:17" pos:end="45:32"><call pos:start="45:17" pos:end="45:32"><name pos:start="45:17" pos:end="45:30">sigbus_reraise</name><argument_list pos:start="45:31" pos:end="45:32">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <default pos:start="51:9" pos:end="51:16">default:</default>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        </block_content>}</block></switch>



        <expr_stmt pos:start="59:9" pos:end="59:32"><expr pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:9">r</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <call pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:22">sigpending</name><argument_list pos:start="59:23" pos:end="59:31">(<argument pos:start="59:24" pos:end="59:30"><expr pos:start="59:24" pos:end="59:30"><operator pos:start="59:24" pos:end="59:24">&amp;</operator><name pos:start="59:25" pos:end="59:30">chkset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:20">(<expr pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:13">r</name> <operator pos:start="61:15" pos:end="61:16">==</operator> <operator pos:start="61:18" pos:end="61:18">-</operator><literal type="number" pos:start="61:19" pos:end="61:19">1</literal></expr>)</condition> <block pos:start="61:22" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:20">

            <expr_stmt pos:start="63:13" pos:end="63:33"><expr pos:start="63:13" pos:end="63:32"><call pos:start="63:13" pos:end="63:32"><name pos:start="63:13" pos:end="63:18">perror</name><argument_list pos:start="63:19" pos:end="63:32">(<argument pos:start="63:20" pos:end="63:31"><expr pos:start="63:20" pos:end="63:31"><literal type="string" pos:start="63:20" pos:end="63:31">"sigpending"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:20"><expr pos:start="65:13" pos:end="65:19"><call pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:16">exit</name><argument_list pos:start="65:17" pos:end="65:19">(<argument pos:start="65:18" pos:end="65:18"><expr pos:start="65:18" pos:end="65:18"><literal type="number" pos:start="65:18" pos:end="65:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="69:13" pos:end="69:75">(<expr pos:start="69:14" pos:end="69:74"><call pos:start="69:14" pos:end="69:42"><name pos:start="69:14" pos:end="69:24">sigismember</name><argument_list pos:start="69:25" pos:end="69:42">(<argument pos:start="69:26" pos:end="69:32"><expr pos:start="69:26" pos:end="69:32"><operator pos:start="69:26" pos:end="69:26">&amp;</operator><name pos:start="69:27" pos:end="69:32">chkset</name></expr></argument>, <argument pos:start="69:35" pos:end="69:41"><expr pos:start="69:35" pos:end="69:41"><name pos:start="69:35" pos:end="69:41">SIG_IPI</name></expr></argument>)</argument_list></call> <operator pos:start="69:44" pos:end="69:45">||</operator> <call pos:start="69:47" pos:end="69:74"><name pos:start="69:47" pos:end="69:57">sigismember</name><argument_list pos:start="69:58" pos:end="69:74">(<argument pos:start="69:59" pos:end="69:65"><expr pos:start="69:59" pos:end="69:65"><operator pos:start="69:59" pos:end="69:59">&amp;</operator><name pos:start="69:60" pos:end="69:65">chkset</name></expr></argument>, <argument pos:start="69:68" pos:end="69:73"><expr pos:start="69:68" pos:end="69:73"><name pos:start="69:68" pos:end="69:73">SIGBUS</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>



<cpp:ifndef pos:start="73:1" pos:end="73:23">#<cpp:directive pos:start="73:2" pos:end="73:7">ifndef</cpp:directive> <name pos:start="73:9" pos:end="73:23">CONFIG_IOTHREAD</name></cpp:ifndef>

    <if_stmt pos:start="75:5" pos:end="82:0"><if pos:start="75:5" pos:end="82:0">if <condition pos:start="75:8" pos:end="75:69">(<expr pos:start="75:9" pos:end="75:68"><call pos:start="75:9" pos:end="75:35"><name pos:start="75:9" pos:end="75:19">sigismember</name><argument_list pos:start="75:20" pos:end="75:35">(<argument pos:start="75:21" pos:end="75:27"><expr pos:start="75:21" pos:end="75:27"><operator pos:start="75:21" pos:end="75:21">&amp;</operator><name pos:start="75:22" pos:end="75:27">chkset</name></expr></argument>, <argument pos:start="75:30" pos:end="75:34"><expr pos:start="75:30" pos:end="75:34"><name pos:start="75:30" pos:end="75:34">SIGIO</name></expr></argument>)</argument_list></call> <operator pos:start="75:37" pos:end="75:38">||</operator> <call pos:start="75:40" pos:end="75:68"><name pos:start="75:40" pos:end="75:50">sigismember</name><argument_list pos:start="75:51" pos:end="75:68">(<argument pos:start="75:52" pos:end="75:58"><expr pos:start="75:52" pos:end="75:58"><operator pos:start="75:52" pos:end="75:52">&amp;</operator><name pos:start="75:53" pos:end="75:58">chkset</name></expr></argument>, <argument pos:start="75:61" pos:end="75:67"><expr pos:start="75:61" pos:end="75:67"><name pos:start="75:61" pos:end="75:67">SIGALRM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:71" pos:end="82:0">{<block_content pos:start="77:9" pos:end="77:28">

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><call pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:25">qemu_notify_event</name><argument_list pos:start="77:26" pos:end="77:27">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="81:1" pos:end="81:6">#<cpp:directive pos:start="81:2" pos:end="81:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
