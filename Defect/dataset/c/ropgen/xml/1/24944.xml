<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24944.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:18">RENAME</name></type>(<name pos:start="1:20" pos:end="1:31">hyscale_fast</name>)<parameter_list pos:start="1:33" pos:end="5:52">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:43">SwsContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">c</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:55">int16_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">dst</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:45">dstWidth</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:65"><decl pos:start="3:48" pos:end="3:65"><type pos:start="3:48" pos:end="3:65"><specifier pos:start="3:48" pos:end="3:52">const</specifier> <name pos:start="3:54" pos:end="3:60">uint8_t</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:65">src</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:41"><decl pos:start="5:34" pos:end="5:41"><type pos:start="5:34" pos:end="5:41"><name pos:start="5:34" pos:end="5:36">int</name></type> <name pos:start="5:38" pos:end="5:41">srcW</name></decl></parameter>, <parameter pos:start="5:44" pos:end="5:51"><decl pos:start="5:44" pos:end="5:51"><type pos:start="5:44" pos:end="5:51"><name pos:start="5:44" pos:end="5:46">int</name></type> <name pos:start="5:48" pos:end="5:51">xInc</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="189:1">{<block_content pos:start="9:5" pos:end="187:33">

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int16_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:22">filterPos</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:26">c</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:41">hLumFilterPos</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">int16_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:19">filter</name>    <init pos:start="11:24" pos:end="11:38">= <expr pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:26">c</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:38">hLumFilter</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:50"><decl pos:start="13:5" pos:end="13:49"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:8">void</name>    <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:27">mmx2FilterCode</name><init pos:start="13:28" pos:end="13:49">= <expr pos:start="13:30" pos:end="13:49"><name pos:start="13:30" pos:end="13:49"><name pos:start="13:30" pos:end="13:30">c</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:49">lumMmx2FilterCode</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="18:0"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

<cpp:if pos:start="17:1" pos:end="17:16">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:16"><call pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:11">defined</name><argument_list pos:start="17:12" pos:end="17:16">(<argument pos:start="17:13" pos:end="17:15"><expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="19:5" pos:end="24:0"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:20">ebxsave</name></decl>;</decl_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="23:1" pos:end="23:15">#<cpp:directive pos:start="23:2" pos:end="23:3">if</cpp:directive> <expr pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:15">ARCH_X86_64</name></expr></cpp:if>

    <decl_stmt pos:start="25:5" pos:end="28:0"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint64_t</name></type> <name pos:start="25:14" pos:end="25:20">retsave</name></decl>;</decl_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>



    <asm pos:start="31:5" pos:end="181:6">__asm__ <specifier pos:start="31:13" pos:end="31:20">volatile</specifier>(

<cpp:if pos:start="33:1" pos:end="33:16">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:16"><call pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:11">defined</name><argument_list pos:start="33:12" pos:end="33:16">(<argument pos:start="33:13" pos:end="33:15"><expr pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

        "mov               %%"REG_b", %5        \n\t"

<cpp:if pos:start="37:1" pos:end="37:15">#<cpp:directive pos:start="37:2" pos:end="37:3">if</cpp:directive> <expr pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:15">ARCH_X86_64</name></expr></cpp:if>

        "mov               -8(%%rsp), %%"REG_a" \n\t"

        "mov               %%"REG_a", %6        \n\t"

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

<cpp:else pos:start="45:1" pos:end="45:5">#<cpp:directive pos:start="45:2" pos:end="45:5">else</cpp:directive></cpp:else>

<cpp:if pos:start="47:1" pos:end="47:15">#<cpp:directive pos:start="47:2" pos:end="47:3">if</cpp:directive> <expr pos:start="47:5" pos:end="47:15"><name pos:start="47:5" pos:end="47:15">ARCH_X86_64</name></expr></cpp:if>

        "mov               -8(%%rsp), %%"REG_a" \n\t"

        "mov               %%"REG_a", %5        \n\t"

<cpp:endif pos:start="53:1" pos:end="53:6">#<cpp:directive pos:start="53:2" pos:end="53:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

        "pxor                  %%mm7, %%mm7     \n\t"

        "mov                      %0, %%"REG_c" \n\t"

        "mov                      %1, %%"REG_D" \n\t"

        "mov                      %2, %%"REG_d" \n\t"

        "mov                      %3, %%"REG_b" \n\t"

        "xor               %%"REG_a", %%"REG_a" \n\t" <comment type="line" pos:start="67:55" pos:end="67:58">// i</comment>

        PREFETCH"        (%%"REG_c")            \n\t"

        PREFETCH"      32(%%"REG_c")            \n\t"

        PREFETCH"      64(%%"REG_c")            \n\t"



<cpp:if pos:start="77:1" pos:end="77:15">#<cpp:directive pos:start="77:2" pos:end="77:3">if</cpp:directive> <expr pos:start="77:5" pos:end="77:15"><name pos:start="77:5" pos:end="77:15">ARCH_X86_64</name></expr></cpp:if>

<cpp:define pos:start="79:1" pos:end="95:5">#<cpp:directive pos:start="79:2" pos:end="79:7">define</cpp:directive> <cpp:macro pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:29">CALL_MMX2_FILTER_CODE</name></cpp:macro> \

        <cpp:value pos:start="81:9" pos:end="95:5">"movl            (%%"REG_b"), %%esi     \n\t"\

        "call                    *%4            \n\t"\

        "movl (%%"REG_b", %%"REG_a"), %%esi     \n\t"\

        "add               %%"REG_S", %%"REG_c" \n\t"\

        "add               %%"REG_a", %%"REG_D" \n\t"\

        "xor               %%"REG_a", %%"REG_a" \n\t"\



#else</cpp:value></cpp:define>

<cpp:define pos:start="97:1" pos:end="111:6">#<cpp:directive pos:start="97:2" pos:end="97:7">define</cpp:directive> <cpp:macro pos:start="97:9" pos:end="97:29"><name pos:start="97:9" pos:end="97:29">CALL_MMX2_FILTER_CODE</name></cpp:macro> \

        <cpp:value pos:start="99:9" pos:end="111:6">"movl (%%"REG_b"), %%esi        \n\t"\

        "call         *%4                       \n\t"\

        "addl (%%"REG_b", %%"REG_a"), %%"REG_c" \n\t"\

        "add               %%"REG_a", %%"REG_D" \n\t"\

        "xor               %%"REG_a", %%"REG_a" \n\t"\



#endif</cpp:value></cpp:define> <comment type="block" pos:start="111:8" pos:end="111:24">/* ARCH_X86_64 */</comment>



        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE



<cpp:if pos:start="133:1" pos:end="133:16">#<cpp:directive pos:start="133:2" pos:end="133:3">if</cpp:directive> <expr pos:start="133:5" pos:end="133:16"><call pos:start="133:5" pos:end="133:16"><name pos:start="133:5" pos:end="133:11">defined</name><argument_list pos:start="133:12" pos:end="133:16">(<argument pos:start="133:13" pos:end="133:15"><expr pos:start="133:13" pos:end="133:15"><name pos:start="133:13" pos:end="133:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

        "mov                      %5, %%"REG_b" \n\t"

<cpp:if pos:start="137:1" pos:end="137:15">#<cpp:directive pos:start="137:2" pos:end="137:3">if</cpp:directive> <expr pos:start="137:5" pos:end="137:15"><name pos:start="137:5" pos:end="137:15">ARCH_X86_64</name></expr></cpp:if>

        "mov                      %6, %%"REG_a" \n\t"

        "mov               %%"REG_a", -8(%%rsp) \n\t"

<cpp:endif pos:start="143:1" pos:end="143:6">#<cpp:directive pos:start="143:2" pos:end="143:6">endif</cpp:directive></cpp:endif>

<cpp:else pos:start="145:1" pos:end="145:5">#<cpp:directive pos:start="145:2" pos:end="145:5">else</cpp:directive></cpp:else>

<cpp:if pos:start="147:1" pos:end="147:15">#<cpp:directive pos:start="147:2" pos:end="147:3">if</cpp:directive> <expr pos:start="147:5" pos:end="147:15"><name pos:start="147:5" pos:end="147:15">ARCH_X86_64</name></expr></cpp:if>

        "mov                      %5, %%"REG_a" \n\t"

        "mov               %%"REG_a", -8(%%rsp) \n\t"

<cpp:endif pos:start="153:1" pos:end="153:6">#<cpp:directive pos:start="153:2" pos:end="153:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="155:1" pos:end="155:6">#<cpp:directive pos:start="155:2" pos:end="155:6">endif</cpp:directive></cpp:endif>

        :: "m" (src), "m" (dst), "m" (filter), "m" (filterPos),

           "m" (mmx2FilterCode)

<cpp:if pos:start="161:1" pos:end="161:16">#<cpp:directive pos:start="161:2" pos:end="161:3">if</cpp:directive> <expr pos:start="161:5" pos:end="161:16"><call pos:start="161:5" pos:end="161:16"><name pos:start="161:5" pos:end="161:11">defined</name><argument_list pos:start="161:12" pos:end="161:16">(<argument pos:start="161:13" pos:end="161:15"><expr pos:start="161:13" pos:end="161:15"><name pos:start="161:13" pos:end="161:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

          ,"m" (ebxsave)

<cpp:endif pos:start="165:1" pos:end="165:6">#<cpp:directive pos:start="165:2" pos:end="165:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="167:1" pos:end="167:15">#<cpp:directive pos:start="167:2" pos:end="167:3">if</cpp:directive> <expr pos:start="167:5" pos:end="167:15"><name pos:start="167:5" pos:end="167:15">ARCH_X86_64</name></expr></cpp:if>

          ,"m"(retsave)

<cpp:endif pos:start="171:1" pos:end="171:6">#<cpp:directive pos:start="171:2" pos:end="171:6">endif</cpp:directive></cpp:endif>

        : "%"REG_a, "%"REG_c, "%"REG_d, "%"REG_S, "%"REG_D

<cpp:if pos:start="175:1" pos:end="175:17">#<cpp:directive pos:start="175:2" pos:end="175:3">if</cpp:directive> <expr pos:start="175:5" pos:end="175:17"><operator pos:start="175:5" pos:end="175:5">!</operator><call pos:start="175:6" pos:end="175:17"><name pos:start="175:6" pos:end="175:12">defined</name><argument_list pos:start="175:13" pos:end="175:17">(<argument pos:start="175:14" pos:end="175:16"><expr pos:start="175:14" pos:end="175:16"><name pos:start="175:14" pos:end="175:16">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

         ,"%"REG_b

<cpp:endif pos:start="179:1" pos:end="179:6">#<cpp:directive pos:start="179:2" pos:end="179:6">endif</cpp:directive></cpp:endif>

    );</asm>



    <for pos:start="185:5" pos:end="187:33">for <control pos:start="185:9" pos:end="185:50">(<init pos:start="185:10" pos:end="185:22"><expr pos:start="185:10" pos:end="185:21"><name pos:start="185:10" pos:end="185:10">i</name><operator pos:start="185:11" pos:end="185:11">=</operator><name pos:start="185:12" pos:end="185:19">dstWidth</name><operator pos:start="185:20" pos:end="185:20">-</operator><literal type="number" pos:start="185:21" pos:end="185:21">1</literal></expr>;</init> <condition pos:start="185:24" pos:end="185:45"><expr pos:start="185:24" pos:end="185:44"><operator pos:start="185:24" pos:end="185:24">(</operator><name pos:start="185:25" pos:end="185:25">i</name><operator pos:start="185:26" pos:end="185:26">*</operator><name pos:start="185:27" pos:end="185:30">xInc</name><operator pos:start="185:31" pos:end="185:31">)</operator><operator pos:start="185:32" pos:end="185:33">&gt;&gt;</operator><literal type="number" pos:start="185:34" pos:end="185:35">16</literal> <operator pos:start="185:37" pos:end="185:38">&gt;=</operator><name pos:start="185:39" pos:end="185:42">srcW</name><operator pos:start="185:43" pos:end="185:43">-</operator><literal type="number" pos:start="185:44" pos:end="185:44">1</literal></expr>;</condition> <incr pos:start="185:47" pos:end="185:49"><expr pos:start="185:47" pos:end="185:49"><name pos:start="185:47" pos:end="185:47">i</name><operator pos:start="185:48" pos:end="185:49">--</operator></expr></incr>)</control><block type="pseudo" pos:start="187:9" pos:end="187:33"><block_content pos:start="187:9" pos:end="187:33">

        <expr_stmt pos:start="187:9" pos:end="187:33"><expr pos:start="187:9" pos:end="187:32"><name pos:start="187:9" pos:end="187:14"><name pos:start="187:9" pos:end="187:11">dst</name><index pos:start="187:12" pos:end="187:14">[<expr pos:start="187:13" pos:end="187:13"><name pos:start="187:13" pos:end="187:13">i</name></expr>]</index></name> <operator pos:start="187:16" pos:end="187:16">=</operator> <name pos:start="187:18" pos:end="187:28"><name pos:start="187:18" pos:end="187:20">src</name><index pos:start="187:21" pos:end="187:28">[<expr pos:start="187:22" pos:end="187:27"><name pos:start="187:22" pos:end="187:25">srcW</name><operator pos:start="187:26" pos:end="187:26">-</operator><literal type="number" pos:start="187:27" pos:end="187:27">1</literal></expr>]</index></name><operator pos:start="187:29" pos:end="187:29">*</operator><literal type="number" pos:start="187:30" pos:end="187:32">128</literal></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></function>
</unit>
