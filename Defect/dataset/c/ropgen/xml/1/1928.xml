<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1928.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">nprobe</name><parameter_list pos:start="1:18" pos:end="1:80">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:36"><name pos:start="1:19" pos:end="1:33">AVFormatContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:57"><decl pos:start="1:39" pos:end="1:57"><type pos:start="1:39" pos:end="1:57"><name pos:start="1:39" pos:end="1:45">uint8_t</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:57">enc_header</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:79"><decl pos:start="1:60" pos:end="1:79"><type pos:start="1:60" pos:end="1:79"><specifier pos:start="1:60" pos:end="1:64">const</specifier> <name pos:start="1:66" pos:end="1:72">uint8_t</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:79">n_val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:14">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">OMAContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">oc</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">pos</name></decl>, <decl pos:start="7:19" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:19" pos:end="7:24">taglen</name></decl>, <decl pos:start="7:27" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:27" pos:end="7:33">datalen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:16">AVDES</name></name></type> <name pos:start="9:18" pos:end="9:23">av_des</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:18"><if pos:start="13:5" pos:end="15:18">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:19">enc_header</name> <operator pos:start="13:21" pos:end="13:22">||</operator> <operator pos:start="13:24" pos:end="13:24">!</operator><name pos:start="13:25" pos:end="13:29">n_val</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:18"><block_content pos:start="15:9" pos:end="15:18">

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:7">pos</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <name pos:start="19:11" pos:end="19:29">OMA_ENC_HEADER_SIZE</name> <operator pos:start="19:31" pos:end="19:31">+</operator> <name pos:start="19:33" pos:end="19:42"><name pos:start="19:33" pos:end="19:34">oc</name><operator pos:start="19:35" pos:end="19:36">-&gt;</operator><name pos:start="19:37" pos:end="19:42">k_size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:45">(<expr pos:start="21:9" pos:end="21:44"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:44"><name pos:start="21:10" pos:end="21:15">memcmp</name><argument_list pos:start="21:16" pos:end="21:44">(<argument pos:start="21:17" pos:end="21:32"><expr pos:start="21:17" pos:end="21:32"><operator pos:start="21:17" pos:end="21:17">&amp;</operator><name pos:start="21:18" pos:end="21:32"><name pos:start="21:18" pos:end="21:27">enc_header</name><index pos:start="21:28" pos:end="21:32">[<expr pos:start="21:29" pos:end="21:31"><name pos:start="21:29" pos:end="21:31">pos</name></expr>]</index></name></expr></argument>, <argument pos:start="21:35" pos:end="21:40"><expr pos:start="21:35" pos:end="21:40"><literal type="string" pos:start="21:35" pos:end="21:40">"EKB "</literal></expr></argument>, <argument pos:start="21:43" pos:end="21:43"><expr pos:start="21:43" pos:end="21:43"><literal type="number" pos:start="21:43" pos:end="21:43">4</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:11">pos</name> <operator pos:start="23:13" pos:end="23:14">+=</operator> <literal type="number" pos:start="23:16" pos:end="23:17">32</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="29:53"><if pos:start="27:5" pos:end="29:53">if <condition pos:start="27:8" pos:end="27:45">(<expr pos:start="27:9" pos:end="27:44"><call pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:15">AV_RB32</name><argument_list pos:start="27:16" pos:end="27:33">(<argument pos:start="27:17" pos:end="27:32"><expr pos:start="27:17" pos:end="27:32"><operator pos:start="27:17" pos:end="27:17">&amp;</operator><name pos:start="27:18" pos:end="27:32"><name pos:start="27:18" pos:end="27:27">enc_header</name><index pos:start="27:28" pos:end="27:32">[<expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">pos</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="27:35" pos:end="27:36">!=</operator> <name pos:start="27:38" pos:end="27:44"><name pos:start="27:38" pos:end="27:39">oc</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:44">rid</name></name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:53"><block_content pos:start="29:9" pos:end="29:53">

        <expr_stmt pos:start="29:9" pos:end="29:53"><expr pos:start="29:9" pos:end="29:52"><call pos:start="29:9" pos:end="29:52"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:52">(<argument pos:start="29:16" pos:end="29:16"><expr pos:start="29:16" pos:end="29:16"><name pos:start="29:16" pos:end="29:16">s</name></expr></argument>, <argument pos:start="29:19" pos:end="29:30"><expr pos:start="29:19" pos:end="29:30"><name pos:start="29:19" pos:end="29:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="29:33" pos:end="29:51"><expr pos:start="29:33" pos:end="29:51"><literal type="string" pos:start="29:33" pos:end="29:51">"Mismatching RID\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:10">taglen</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:41"><name pos:start="33:14" pos:end="33:20">AV_RB32</name><argument_list pos:start="33:21" pos:end="33:41">(<argument pos:start="33:22" pos:end="33:40"><expr pos:start="33:22" pos:end="33:40"><operator pos:start="33:22" pos:end="33:22">&amp;</operator><name pos:start="33:23" pos:end="33:40"><name pos:start="33:23" pos:end="33:32">enc_header</name><index pos:start="33:33" pos:end="33:40">[<expr pos:start="33:34" pos:end="33:39"><name pos:start="33:34" pos:end="33:36">pos</name><operator pos:start="33:37" pos:end="33:37">+</operator><literal type="number" pos:start="33:38" pos:end="33:39">32</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:48"><expr pos:start="35:5" pos:end="35:47"><name pos:start="35:5" pos:end="35:11">datalen</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:42"><name pos:start="35:15" pos:end="35:21">AV_RB32</name><argument_list pos:start="35:22" pos:end="35:42">(<argument pos:start="35:23" pos:end="35:41"><expr pos:start="35:23" pos:end="35:41"><operator pos:start="35:23" pos:end="35:23">&amp;</operator><name pos:start="35:24" pos:end="35:41"><name pos:start="35:24" pos:end="35:33">enc_header</name><index pos:start="35:34" pos:end="35:41">[<expr pos:start="35:35" pos:end="35:40"><name pos:start="35:35" pos:end="35:37">pos</name><operator pos:start="35:38" pos:end="35:38">+</operator><literal type="number" pos:start="35:39" pos:end="35:40">36</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="35:44" pos:end="35:45">&gt;&gt;</operator> <literal type="number" pos:start="35:47" pos:end="35:47">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:23"><expr pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:7">pos</name> <operator pos:start="39:9" pos:end="39:10">+=</operator> <literal type="number" pos:start="39:12" pos:end="39:15">44</literal> <operator pos:start="39:15" pos:end="39:15">+</operator> <name pos:start="39:17" pos:end="39:22">taglen</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><call pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:15">av_des_init</name><argument_list pos:start="43:16" pos:end="43:39">(<argument pos:start="43:17" pos:end="43:23"><expr pos:start="43:17" pos:end="43:23"><operator pos:start="43:17" pos:end="43:17">&amp;</operator><name pos:start="43:18" pos:end="43:23">av_des</name></expr></argument>, <argument pos:start="43:26" pos:end="43:30"><expr pos:start="43:26" pos:end="43:30"><name pos:start="43:26" pos:end="43:30">n_val</name></expr></argument>, <argument pos:start="43:33" pos:end="43:35"><expr pos:start="43:33" pos:end="43:35"><literal type="number" pos:start="43:33" pos:end="43:35">192</literal></expr></argument>, <argument pos:start="43:38" pos:end="43:38"><expr pos:start="43:38" pos:end="43:38"><literal type="number" pos:start="43:38" pos:end="43:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="45:5" pos:end="57:5">while <condition pos:start="45:11" pos:end="45:25">(<expr pos:start="45:12" pos:end="45:24"><name pos:start="45:12" pos:end="45:18">datalen</name><operator pos:start="45:19" pos:end="45:20">--</operator> <operator pos:start="45:22" pos:end="45:22">&gt;</operator> <literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr>)</condition> <block pos:start="45:27" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:18">

        <expr_stmt pos:start="47:9" pos:end="47:71"><expr pos:start="47:9" pos:end="47:70"><call pos:start="47:9" pos:end="47:70"><name pos:start="47:9" pos:end="47:20">av_des_crypt</name><argument_list pos:start="47:21" pos:end="47:70">(<argument pos:start="47:22" pos:end="47:28"><expr pos:start="47:22" pos:end="47:28"><operator pos:start="47:22" pos:end="47:22">&amp;</operator><name pos:start="47:23" pos:end="47:28">av_des</name></expr></argument>, <argument pos:start="47:31" pos:end="47:39"><expr pos:start="47:31" pos:end="47:39"><name pos:start="47:31" pos:end="47:39"><name pos:start="47:31" pos:end="47:32">oc</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:39">r_val</name></name></expr></argument>, <argument pos:start="47:42" pos:end="47:57"><expr pos:start="47:42" pos:end="47:57"><operator pos:start="47:42" pos:end="47:42">&amp;</operator><name pos:start="47:43" pos:end="47:57"><name pos:start="47:43" pos:end="47:52">enc_header</name><index pos:start="47:53" pos:end="47:57">[<expr pos:start="47:54" pos:end="47:56"><name pos:start="47:54" pos:end="47:56">pos</name></expr>]</index></name></expr></argument>, <argument pos:start="47:60" pos:end="47:60"><expr pos:start="47:60" pos:end="47:60"><literal type="number" pos:start="47:60" pos:end="47:60">2</literal></expr></argument>, <argument pos:start="47:63" pos:end="47:66"><expr pos:start="47:63" pos:end="47:66"><name pos:start="47:63" pos:end="47:66">NULL</name></expr></argument>, <argument pos:start="47:69" pos:end="47:69"><expr pos:start="47:69" pos:end="47:69"><literal type="number" pos:start="47:69" pos:end="47:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><call pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:12">kset</name><argument_list pos:start="49:13" pos:end="49:36">(<argument pos:start="49:14" pos:end="49:14"><expr pos:start="49:14" pos:end="49:14"><name pos:start="49:14" pos:end="49:14">s</name></expr></argument>, <argument pos:start="49:17" pos:end="49:25"><expr pos:start="49:17" pos:end="49:25"><name pos:start="49:17" pos:end="49:25"><name pos:start="49:17" pos:end="49:18">oc</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:25">r_val</name></name></expr></argument>, <argument pos:start="49:28" pos:end="49:31"><expr pos:start="49:28" pos:end="49:31"><name pos:start="49:28" pos:end="49:31">NULL</name></expr></argument>, <argument pos:start="49:34" pos:end="49:35"><expr pos:start="49:34" pos:end="49:35"><literal type="number" pos:start="49:34" pos:end="49:35">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="53:21"><if pos:start="51:9" pos:end="53:21">if <condition pos:start="51:12" pos:end="51:46">(<expr pos:start="51:13" pos:end="51:45"><operator pos:start="51:13" pos:end="51:13">!</operator><call pos:start="51:14" pos:end="51:45"><name pos:start="51:14" pos:end="51:19">rprobe</name><argument_list pos:start="51:20" pos:end="51:45">(<argument pos:start="51:21" pos:end="51:21"><expr pos:start="51:21" pos:end="51:21"><name pos:start="51:21" pos:end="51:21">s</name></expr></argument>, <argument pos:start="51:24" pos:end="51:33"><expr pos:start="51:24" pos:end="51:33"><name pos:start="51:24" pos:end="51:33">enc_header</name></expr></argument>, <argument pos:start="51:36" pos:end="51:44"><expr pos:start="51:36" pos:end="51:44"><name pos:start="51:36" pos:end="51:44"><name pos:start="51:36" pos:end="51:37">oc</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:44">r_val</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:21"><block_content pos:start="53:13" pos:end="53:21">

            <return pos:start="53:13" pos:end="53:21">return <expr pos:start="53:20" pos:end="53:20"><literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:18"><expr pos:start="55:9" pos:end="55:17"><name pos:start="55:9" pos:end="55:11">pos</name> <operator pos:start="55:13" pos:end="55:14">+=</operator> <literal type="number" pos:start="55:16" pos:end="55:17">16</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="61:5" pos:end="61:14">return <expr pos:start="61:12" pos:end="61:13"><operator pos:start="61:12" pos:end="61:12">-</operator><literal type="number" pos:start="61:13" pos:end="61:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
