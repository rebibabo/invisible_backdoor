<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26081.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">ff_unlock_avcodec</name><parameter_list pos:start="1:22" pos:end="1:43">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:37"><specifier pos:start="1:23" pos:end="1:27">const</specifier> <name pos:start="1:29" pos:end="1:35">AVCodec</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:42">codec</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:13">

    <if_stmt pos:start="5:5" pos:end="7:17"><if pos:start="5:5" pos:end="7:17">if <condition pos:start="5:8" pos:end="5:76">(<expr pos:start="5:9" pos:end="5:75"><name pos:start="5:9" pos:end="5:28"><name pos:start="5:9" pos:end="5:13">codec</name><operator pos:start="5:14" pos:end="5:15">-&gt;</operator><name pos:start="5:16" pos:end="5:28">caps_internal</name></name> <operator pos:start="5:30" pos:end="5:30">&amp;</operator> <name pos:start="5:32" pos:end="5:59">FF_CODEC_CAP_INIT_THREADSAFE</name> <operator pos:start="5:61" pos:end="5:62">||</operator> <operator pos:start="5:64" pos:end="5:64">!</operator><name pos:start="5:65" pos:end="5:75"><name pos:start="5:65" pos:end="5:69">codec</name><operator pos:start="5:70" pos:end="5:71">-&gt;</operator><name pos:start="5:72" pos:end="5:75">init</name></name></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:17"><block_content pos:start="7:9" pos:end="7:17">

        <return pos:start="7:9" pos:end="7:17">return <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:34"><expr pos:start="11:5" pos:end="11:33"><call pos:start="11:5" pos:end="11:33"><name pos:start="11:5" pos:end="11:14">av_assert0</name><argument_list pos:start="11:15" pos:end="11:33">(<argument pos:start="11:16" pos:end="11:32"><expr pos:start="11:16" pos:end="11:32"><name pos:start="11:16" pos:end="11:32">ff_avcodec_locked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:26"><expr pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:21">ff_avcodec_locked</name> <operator pos:start="13:23" pos:end="13:23">=</operator> <literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:52"><expr pos:start="15:5" pos:end="15:51"><call pos:start="15:5" pos:end="15:51"><name pos:start="15:5" pos:end="15:20">atomic_fetch_add</name><argument_list pos:start="15:21" pos:end="15:51">(<argument pos:start="15:22" pos:end="15:46"><expr pos:start="15:22" pos:end="15:46"><operator pos:start="15:22" pos:end="15:22">&amp;</operator><name pos:start="15:23" pos:end="15:46">entangled_thread_counter</name></expr></argument>, <argument pos:start="15:49" pos:end="15:50"><expr pos:start="15:49" pos:end="15:50"><operator pos:start="15:49" pos:end="15:49">-</operator><literal type="number" pos:start="15:50" pos:end="15:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:19">(<expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:18">lockmgr_cb</name></expr>)</condition> <block pos:start="17:21" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:22">

        <if_stmt pos:start="19:9" pos:end="21:22"><if pos:start="19:9" pos:end="21:22">if <condition pos:start="19:12" pos:end="19:57">(<expr pos:start="19:13" pos:end="19:56"><call pos:start="19:13" pos:end="19:56">(<modifier pos:start="19:14" pos:end="19:14">*</modifier><name pos:start="19:15" pos:end="19:24">lockmgr_cb</name>)<argument_list pos:start="19:26" pos:end="19:56">(<argument pos:start="19:27" pos:end="19:38"><expr pos:start="19:27" pos:end="19:38"><operator pos:start="19:27" pos:end="19:27">&amp;</operator><name pos:start="19:28" pos:end="19:38">codec_mutex</name></expr></argument>, <argument pos:start="19:41" pos:end="19:55"><expr pos:start="19:41" pos:end="19:55"><name pos:start="19:41" pos:end="19:55">AV_LOCK_RELEASE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:22"><block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
