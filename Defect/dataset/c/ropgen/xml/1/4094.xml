<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4094.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">svq3_add_idct_c</name><parameter_list pos:start="1:28" pos:end="3:55">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:35">uint8_t</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dst</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:49">int16_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">block</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:38">stride</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:46"><decl pos:start="3:41" pos:end="3:46"><type pos:start="3:41" pos:end="3:46"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:46">qp</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:54"><decl pos:start="3:49" pos:end="3:54"><type pos:start="3:49" pos:end="3:54"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:54">dc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:43">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:18">qmul</name> <init pos:start="7:20" pos:end="7:43">= <expr pos:start="7:22" pos:end="7:43"><name pos:start="7:22" pos:end="7:43"><name pos:start="7:22" pos:end="7:39">svq3_dequant_coeff</name><index pos:start="7:40" pos:end="7:43">[<expr pos:start="7:41" pos:end="7:42"><name pos:start="7:41" pos:end="7:42">qp</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:11">(<expr pos:start="13:9" pos:end="13:10"><name pos:start="13:9" pos:end="13:10">dc</name></expr>)</condition> <block pos:start="13:13" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:21">

        <expr_stmt pos:start="15:9" pos:end="17:68"><expr pos:start="15:9" pos:end="17:67"><name pos:start="15:9" pos:end="15:10">dc</name>       <operator pos:start="15:18" pos:end="15:18">=</operator> <literal type="number" pos:start="15:20" pos:end="15:21">13</literal> <operator pos:start="15:23" pos:end="15:23">*</operator> <literal type="number" pos:start="15:25" pos:end="15:26">13</literal> <operator pos:start="15:28" pos:end="15:28">*</operator> <operator pos:start="15:30" pos:end="15:30">(</operator><ternary pos:start="15:31" pos:end="17:66"><condition pos:start="15:31" pos:end="15:39"><expr pos:start="15:31" pos:end="15:37"><name pos:start="15:31" pos:end="15:32">dc</name> <operator pos:start="15:34" pos:end="15:35">==</operator> <literal type="number" pos:start="15:37" pos:end="15:37">1</literal></expr> ?</condition><then pos:start="15:41" pos:end="15:55"> <expr pos:start="15:41" pos:end="15:55"><literal type="number" pos:start="15:41" pos:end="15:45">1538U</literal><operator pos:start="15:46" pos:end="15:46">*</operator> <name pos:start="15:48" pos:end="15:55"><name pos:start="15:48" pos:end="15:52">block</name><index pos:start="15:53" pos:end="15:55">[<expr pos:start="15:54" pos:end="15:54"><literal type="number" pos:start="15:54" pos:end="15:54">0</literal></expr>]</index></name></expr>

                                      </then><else pos:start="17:39" pos:end="17:66">: <expr pos:start="17:41" pos:end="17:66"><name pos:start="17:41" pos:end="17:44">qmul</name> <operator pos:start="17:46" pos:end="17:46">*</operator> <operator pos:start="17:48" pos:end="17:48">(</operator><name pos:start="17:49" pos:end="17:56"><name pos:start="17:49" pos:end="17:53">block</name><index pos:start="17:54" pos:end="17:56">[<expr pos:start="17:55" pos:end="17:55"><literal type="number" pos:start="17:55" pos:end="17:55">0</literal></expr>]</index></name> <operator pos:start="17:58" pos:end="17:59">&gt;&gt;</operator> <literal type="number" pos:start="17:61" pos:end="17:61">3</literal><operator pos:start="17:62" pos:end="17:62">)</operator> <operator pos:start="17:64" pos:end="17:64">/</operator> <literal type="number" pos:start="17:66" pos:end="17:66">2</literal></expr></else></ternary><operator pos:start="17:67" pos:end="17:67">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:21"><expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:13">block</name><index pos:start="19:14" pos:end="19:16">[<expr pos:start="19:15" pos:end="19:15"><literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>]</index></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="25:5" pos:end="45:5">for <control pos:start="25:9" pos:end="25:27">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:22"><expr pos:start="25:17" pos:end="25:21"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <literal type="number" pos:start="25:21" pos:end="25:21">4</literal></expr>;</condition> <incr pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:24">i</name><operator pos:start="25:25" pos:end="25:26">++</operator></expr></incr>)</control> <block pos:start="25:29" pos:end="45:5">{<block_content pos:start="27:9" pos:end="43:35">

        <decl_stmt pos:start="27:9" pos:end="27:71"><decl pos:start="27:9" pos:end="27:70"><type pos:start="27:9" pos:end="27:17"><specifier pos:start="27:9" pos:end="27:13">const</specifier> <name pos:start="27:15" pos:end="27:17">int</name></type> <name pos:start="27:19" pos:end="27:20">z0</name> <init pos:start="27:22" pos:end="27:70">= <expr pos:start="27:24" pos:end="27:70"><literal type="number" pos:start="27:24" pos:end="27:25">13</literal> <operator pos:start="27:27" pos:end="27:27">*</operator> <operator pos:start="27:29" pos:end="27:29">(</operator><name pos:start="27:30" pos:end="27:45"><name pos:start="27:30" pos:end="27:34">block</name><index pos:start="27:35" pos:end="27:45">[<expr pos:start="27:36" pos:end="27:44"><literal type="number" pos:start="27:36" pos:end="27:38">0</literal> <operator pos:start="27:38" pos:end="27:38">+</operator> <literal type="number" pos:start="27:40" pos:end="27:40">4</literal> <operator pos:start="27:42" pos:end="27:42">*</operator> <name pos:start="27:44" pos:end="27:44">i</name></expr>]</index></name> <operator pos:start="27:47" pos:end="27:47">+</operator>      <name pos:start="27:54" pos:end="27:69"><name pos:start="27:54" pos:end="27:58">block</name><index pos:start="27:59" pos:end="27:69">[<expr pos:start="27:60" pos:end="27:68"><literal type="number" pos:start="27:60" pos:end="27:62">2</literal> <operator pos:start="27:62" pos:end="27:62">+</operator> <literal type="number" pos:start="27:64" pos:end="27:64">4</literal> <operator pos:start="27:66" pos:end="27:66">*</operator> <name pos:start="27:68" pos:end="27:68">i</name></expr>]</index></name><operator pos:start="27:70" pos:end="27:70">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:71"><decl pos:start="29:9" pos:end="29:70"><type pos:start="29:9" pos:end="29:17"><specifier pos:start="29:9" pos:end="29:13">const</specifier> <name pos:start="29:15" pos:end="29:17">int</name></type> <name pos:start="29:19" pos:end="29:20">z1</name> <init pos:start="29:22" pos:end="29:70">= <expr pos:start="29:24" pos:end="29:70"><literal type="number" pos:start="29:24" pos:end="29:25">13</literal> <operator pos:start="29:27" pos:end="29:27">*</operator> <operator pos:start="29:29" pos:end="29:29">(</operator><name pos:start="29:30" pos:end="29:45"><name pos:start="29:30" pos:end="29:34">block</name><index pos:start="29:35" pos:end="29:45">[<expr pos:start="29:36" pos:end="29:44"><literal type="number" pos:start="29:36" pos:end="29:38">0</literal> <operator pos:start="29:38" pos:end="29:38">+</operator> <literal type="number" pos:start="29:40" pos:end="29:40">4</literal> <operator pos:start="29:42" pos:end="29:42">*</operator> <name pos:start="29:44" pos:end="29:44">i</name></expr>]</index></name> <operator pos:start="29:47" pos:end="29:47">-</operator>      <name pos:start="29:54" pos:end="29:69"><name pos:start="29:54" pos:end="29:58">block</name><index pos:start="29:59" pos:end="29:69">[<expr pos:start="29:60" pos:end="29:68"><literal type="number" pos:start="29:60" pos:end="29:62">2</literal> <operator pos:start="29:62" pos:end="29:62">+</operator> <literal type="number" pos:start="29:64" pos:end="29:64">4</literal> <operator pos:start="29:66" pos:end="29:66">*</operator> <name pos:start="29:68" pos:end="29:68">i</name></expr>]</index></name><operator pos:start="29:70" pos:end="29:70">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:70"><decl pos:start="31:9" pos:end="31:69"><type pos:start="31:9" pos:end="31:17"><specifier pos:start="31:9" pos:end="31:13">const</specifier> <name pos:start="31:15" pos:end="31:17">int</name></type> <name pos:start="31:19" pos:end="31:20">z2</name> <init pos:start="31:22" pos:end="31:69">=  <expr pos:start="31:25" pos:end="31:69"><literal type="number" pos:start="31:25" pos:end="31:25">7</literal> <operator pos:start="31:27" pos:end="31:27">*</operator>  <name pos:start="31:30" pos:end="31:45"><name pos:start="31:30" pos:end="31:34">block</name><index pos:start="31:35" pos:end="31:45">[<expr pos:start="31:36" pos:end="31:44"><literal type="number" pos:start="31:36" pos:end="31:38">1</literal> <operator pos:start="31:38" pos:end="31:38">+</operator> <literal type="number" pos:start="31:40" pos:end="31:40">4</literal> <operator pos:start="31:42" pos:end="31:42">*</operator> <name pos:start="31:44" pos:end="31:44">i</name></expr>]</index></name> <operator pos:start="31:47" pos:end="31:47">-</operator> <literal type="number" pos:start="31:49" pos:end="31:50">17</literal> <operator pos:start="31:52" pos:end="31:52">*</operator> <name pos:start="31:54" pos:end="31:69"><name pos:start="31:54" pos:end="31:58">block</name><index pos:start="31:59" pos:end="31:69">[<expr pos:start="31:60" pos:end="31:68"><literal type="number" pos:start="31:60" pos:end="31:62">3</literal> <operator pos:start="31:62" pos:end="31:62">+</operator> <literal type="number" pos:start="31:64" pos:end="31:64">4</literal> <operator pos:start="31:66" pos:end="31:66">*</operator> <name pos:start="31:68" pos:end="31:68">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:70"><decl pos:start="33:9" pos:end="33:69"><type pos:start="33:9" pos:end="33:17"><specifier pos:start="33:9" pos:end="33:13">const</specifier> <name pos:start="33:15" pos:end="33:17">int</name></type> <name pos:start="33:19" pos:end="33:20">z3</name> <init pos:start="33:22" pos:end="33:69">= <expr pos:start="33:24" pos:end="33:69"><literal type="number" pos:start="33:24" pos:end="33:25">17</literal> <operator pos:start="33:27" pos:end="33:27">*</operator>  <name pos:start="33:30" pos:end="33:45"><name pos:start="33:30" pos:end="33:34">block</name><index pos:start="33:35" pos:end="33:45">[<expr pos:start="33:36" pos:end="33:44"><literal type="number" pos:start="33:36" pos:end="33:38">1</literal> <operator pos:start="33:38" pos:end="33:38">+</operator> <literal type="number" pos:start="33:40" pos:end="33:40">4</literal> <operator pos:start="33:42" pos:end="33:42">*</operator> <name pos:start="33:44" pos:end="33:44">i</name></expr>]</index></name> <operator pos:start="33:47" pos:end="33:47">+</operator>  <literal type="number" pos:start="33:50" pos:end="33:50">7</literal> <operator pos:start="33:52" pos:end="33:52">*</operator> <name pos:start="33:54" pos:end="33:69"><name pos:start="33:54" pos:end="33:58">block</name><index pos:start="33:59" pos:end="33:69">[<expr pos:start="33:60" pos:end="33:68"><literal type="number" pos:start="33:60" pos:end="33:62">3</literal> <operator pos:start="33:62" pos:end="33:62">+</operator> <literal type="number" pos:start="33:64" pos:end="33:64">4</literal> <operator pos:start="33:66" pos:end="33:66">*</operator> <name pos:start="33:68" pos:end="33:68">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:13">block</name><index pos:start="37:14" pos:end="37:24">[<expr pos:start="37:15" pos:end="37:23"><literal type="number" pos:start="37:15" pos:end="37:15">0</literal> <operator pos:start="37:17" pos:end="37:17">+</operator> <literal type="number" pos:start="37:19" pos:end="37:19">4</literal> <operator pos:start="37:21" pos:end="37:21">*</operator> <name pos:start="37:23" pos:end="37:23">i</name></expr>]</index></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:29">z0</name> <operator pos:start="37:31" pos:end="37:31">+</operator> <name pos:start="37:33" pos:end="37:34">z3</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:13">block</name><index pos:start="39:14" pos:end="39:24">[<expr pos:start="39:15" pos:end="39:23"><literal type="number" pos:start="39:15" pos:end="39:15">1</literal> <operator pos:start="39:17" pos:end="39:17">+</operator> <literal type="number" pos:start="39:19" pos:end="39:19">4</literal> <operator pos:start="39:21" pos:end="39:21">*</operator> <name pos:start="39:23" pos:end="39:23">i</name></expr>]</index></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <name pos:start="39:28" pos:end="39:29">z1</name> <operator pos:start="39:31" pos:end="39:31">+</operator> <name pos:start="39:33" pos:end="39:34">z2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:13">block</name><index pos:start="41:14" pos:end="41:24">[<expr pos:start="41:15" pos:end="41:23"><literal type="number" pos:start="41:15" pos:end="41:15">2</literal> <operator pos:start="41:17" pos:end="41:17">+</operator> <literal type="number" pos:start="41:19" pos:end="41:19">4</literal> <operator pos:start="41:21" pos:end="41:21">*</operator> <name pos:start="41:23" pos:end="41:23">i</name></expr>]</index></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <name pos:start="41:28" pos:end="41:29">z1</name> <operator pos:start="41:31" pos:end="41:31">-</operator> <name pos:start="41:33" pos:end="41:34">z2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:35"><expr pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:13">block</name><index pos:start="43:14" pos:end="43:24">[<expr pos:start="43:15" pos:end="43:23"><literal type="number" pos:start="43:15" pos:end="43:15">3</literal> <operator pos:start="43:17" pos:end="43:17">+</operator> <literal type="number" pos:start="43:19" pos:end="43:19">4</literal> <operator pos:start="43:21" pos:end="43:21">*</operator> <name pos:start="43:23" pos:end="43:23">i</name></expr>]</index></name> <operator pos:start="43:26" pos:end="43:26">=</operator> <name pos:start="43:28" pos:end="43:29">z0</name> <operator pos:start="43:31" pos:end="43:31">-</operator> <name pos:start="43:33" pos:end="43:34">z3</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="49:5" pos:end="71:5">for <control pos:start="49:9" pos:end="49:27">(<init pos:start="49:10" pos:end="49:15"><expr pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:10">i</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>;</init> <condition pos:start="49:17" pos:end="49:22"><expr pos:start="49:17" pos:end="49:21"><name pos:start="49:17" pos:end="49:17">i</name> <operator pos:start="49:19" pos:end="49:19">&lt;</operator> <literal type="number" pos:start="49:21" pos:end="49:21">4</literal></expr>;</condition> <incr pos:start="49:24" pos:end="49:26"><expr pos:start="49:24" pos:end="49:26"><name pos:start="49:24" pos:end="49:24">i</name><operator pos:start="49:25" pos:end="49:26">++</operator></expr></incr>)</control> <block pos:start="49:29" pos:end="71:5">{<block_content pos:start="51:9" pos:end="69:104">

        <decl_stmt pos:start="51:9" pos:end="51:76"><decl pos:start="51:9" pos:end="51:75"><type pos:start="51:9" pos:end="51:22"><specifier pos:start="51:9" pos:end="51:13">const</specifier> <name pos:start="51:15" pos:end="51:22">unsigned</name></type> <name pos:start="51:24" pos:end="51:25">z0</name> <init pos:start="51:27" pos:end="51:75">= <expr pos:start="51:29" pos:end="51:75"><literal type="number" pos:start="51:29" pos:end="51:30">13</literal> <operator pos:start="51:32" pos:end="51:32">*</operator> <operator pos:start="51:34" pos:end="51:34">(</operator><name pos:start="51:35" pos:end="51:50"><name pos:start="51:35" pos:end="51:39">block</name><index pos:start="51:40" pos:end="51:50">[<expr pos:start="51:41" pos:end="51:49"><name pos:start="51:41" pos:end="51:41">i</name> <operator pos:start="51:43" pos:end="51:43">+</operator> <literal type="number" pos:start="51:45" pos:end="51:45">4</literal> <operator pos:start="51:47" pos:end="51:47">*</operator> <literal type="number" pos:start="51:49" pos:end="51:49">0</literal></expr>]</index></name> <operator pos:start="51:52" pos:end="51:52">+</operator>      <name pos:start="51:59" pos:end="51:74"><name pos:start="51:59" pos:end="51:63">block</name><index pos:start="51:64" pos:end="51:74">[<expr pos:start="51:65" pos:end="51:73"><name pos:start="51:65" pos:end="51:65">i</name> <operator pos:start="51:67" pos:end="51:67">+</operator> <literal type="number" pos:start="51:69" pos:end="51:69">4</literal> <operator pos:start="51:71" pos:end="51:71">*</operator> <literal type="number" pos:start="51:73" pos:end="51:73">2</literal></expr>]</index></name><operator pos:start="51:75" pos:end="51:75">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:76"><decl pos:start="53:9" pos:end="53:75"><type pos:start="53:9" pos:end="53:22"><specifier pos:start="53:9" pos:end="53:13">const</specifier> <name pos:start="53:15" pos:end="53:22">unsigned</name></type> <name pos:start="53:24" pos:end="53:25">z1</name> <init pos:start="53:27" pos:end="53:75">= <expr pos:start="53:29" pos:end="53:75"><literal type="number" pos:start="53:29" pos:end="53:30">13</literal> <operator pos:start="53:32" pos:end="53:32">*</operator> <operator pos:start="53:34" pos:end="53:34">(</operator><name pos:start="53:35" pos:end="53:50"><name pos:start="53:35" pos:end="53:39">block</name><index pos:start="53:40" pos:end="53:50">[<expr pos:start="53:41" pos:end="53:49"><name pos:start="53:41" pos:end="53:41">i</name> <operator pos:start="53:43" pos:end="53:43">+</operator> <literal type="number" pos:start="53:45" pos:end="53:45">4</literal> <operator pos:start="53:47" pos:end="53:47">*</operator> <literal type="number" pos:start="53:49" pos:end="53:49">0</literal></expr>]</index></name> <operator pos:start="53:52" pos:end="53:52">-</operator>      <name pos:start="53:59" pos:end="53:74"><name pos:start="53:59" pos:end="53:63">block</name><index pos:start="53:64" pos:end="53:74">[<expr pos:start="53:65" pos:end="53:73"><name pos:start="53:65" pos:end="53:65">i</name> <operator pos:start="53:67" pos:end="53:67">+</operator> <literal type="number" pos:start="53:69" pos:end="53:69">4</literal> <operator pos:start="53:71" pos:end="53:71">*</operator> <literal type="number" pos:start="53:73" pos:end="53:73">2</literal></expr>]</index></name><operator pos:start="53:75" pos:end="53:75">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="55:9" pos:end="55:75"><decl pos:start="55:9" pos:end="55:74"><type pos:start="55:9" pos:end="55:22"><specifier pos:start="55:9" pos:end="55:13">const</specifier> <name pos:start="55:15" pos:end="55:22">unsigned</name></type> <name pos:start="55:24" pos:end="55:25">z2</name> <init pos:start="55:27" pos:end="55:74">=  <expr pos:start="55:30" pos:end="55:74"><literal type="number" pos:start="55:30" pos:end="55:30">7</literal> <operator pos:start="55:32" pos:end="55:32">*</operator>  <name pos:start="55:35" pos:end="55:50"><name pos:start="55:35" pos:end="55:39">block</name><index pos:start="55:40" pos:end="55:50">[<expr pos:start="55:41" pos:end="55:49"><name pos:start="55:41" pos:end="55:41">i</name> <operator pos:start="55:43" pos:end="55:43">+</operator> <literal type="number" pos:start="55:45" pos:end="55:45">4</literal> <operator pos:start="55:47" pos:end="55:47">*</operator> <literal type="number" pos:start="55:49" pos:end="55:49">1</literal></expr>]</index></name> <operator pos:start="55:52" pos:end="55:52">-</operator> <literal type="number" pos:start="55:54" pos:end="55:55">17</literal> <operator pos:start="55:57" pos:end="55:57">*</operator> <name pos:start="55:59" pos:end="55:74"><name pos:start="55:59" pos:end="55:63">block</name><index pos:start="55:64" pos:end="55:74">[<expr pos:start="55:65" pos:end="55:73"><name pos:start="55:65" pos:end="55:65">i</name> <operator pos:start="55:67" pos:end="55:67">+</operator> <literal type="number" pos:start="55:69" pos:end="55:69">4</literal> <operator pos:start="55:71" pos:end="55:71">*</operator> <literal type="number" pos:start="55:73" pos:end="55:73">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:75"><decl pos:start="57:9" pos:end="57:74"><type pos:start="57:9" pos:end="57:22"><specifier pos:start="57:9" pos:end="57:13">const</specifier> <name pos:start="57:15" pos:end="57:22">unsigned</name></type> <name pos:start="57:24" pos:end="57:25">z3</name> <init pos:start="57:27" pos:end="57:74">= <expr pos:start="57:29" pos:end="57:74"><literal type="number" pos:start="57:29" pos:end="57:30">17</literal> <operator pos:start="57:32" pos:end="57:32">*</operator>  <name pos:start="57:35" pos:end="57:50"><name pos:start="57:35" pos:end="57:39">block</name><index pos:start="57:40" pos:end="57:50">[<expr pos:start="57:41" pos:end="57:49"><name pos:start="57:41" pos:end="57:41">i</name> <operator pos:start="57:43" pos:end="57:43">+</operator> <literal type="number" pos:start="57:45" pos:end="57:45">4</literal> <operator pos:start="57:47" pos:end="57:47">*</operator> <literal type="number" pos:start="57:49" pos:end="57:49">1</literal></expr>]</index></name> <operator pos:start="57:52" pos:end="57:52">+</operator>  <literal type="number" pos:start="57:55" pos:end="57:55">7</literal> <operator pos:start="57:57" pos:end="57:57">*</operator> <name pos:start="57:59" pos:end="57:74"><name pos:start="57:59" pos:end="57:63">block</name><index pos:start="57:64" pos:end="57:74">[<expr pos:start="57:65" pos:end="57:73"><name pos:start="57:65" pos:end="57:65">i</name> <operator pos:start="57:67" pos:end="57:67">+</operator> <literal type="number" pos:start="57:69" pos:end="57:69">4</literal> <operator pos:start="57:71" pos:end="57:71">*</operator> <literal type="number" pos:start="57:73" pos:end="57:73">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:38"><decl pos:start="59:9" pos:end="59:37"><type pos:start="59:9" pos:end="59:17"><specifier pos:start="59:9" pos:end="59:13">const</specifier> <name pos:start="59:15" pos:end="59:17">int</name></type> <name pos:start="59:19" pos:end="59:20">rr</name> <init pos:start="59:22" pos:end="59:37">= <expr pos:start="59:24" pos:end="59:37"><operator pos:start="59:24" pos:end="59:24">(</operator><name pos:start="59:25" pos:end="59:26">dc</name> <operator pos:start="59:28" pos:end="59:28">+</operator> <literal type="number" pos:start="59:30" pos:end="59:36">0x80000</literal><operator pos:start="59:37" pos:end="59:37">)</operator></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:104"><expr pos:start="63:9" pos:end="63:103"><name pos:start="63:9" pos:end="63:27"><name pos:start="63:9" pos:end="63:11">dst</name><index pos:start="63:12" pos:end="63:27">[<expr pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:13">i</name> <operator pos:start="63:15" pos:end="63:15">+</operator> <name pos:start="63:17" pos:end="63:22">stride</name> <operator pos:start="63:24" pos:end="63:24">*</operator> <literal type="number" pos:start="63:26" pos:end="63:26">0</literal></expr>]</index></name> <operator pos:start="63:29" pos:end="63:29">=</operator> <call pos:start="63:31" pos:end="63:103"><name pos:start="63:31" pos:end="63:43">av_clip_uint8</name><argument_list pos:start="63:44" pos:end="63:103">(<argument pos:start="63:45" pos:end="63:102"><expr pos:start="63:45" pos:end="63:102"><name pos:start="63:45" pos:end="63:63"><name pos:start="63:45" pos:end="63:47">dst</name><index pos:start="63:48" pos:end="63:63">[<expr pos:start="63:49" pos:end="63:62"><name pos:start="63:49" pos:end="63:49">i</name> <operator pos:start="63:51" pos:end="63:51">+</operator> <name pos:start="63:53" pos:end="63:58">stride</name> <operator pos:start="63:60" pos:end="63:60">*</operator> <literal type="number" pos:start="63:62" pos:end="63:62">0</literal></expr>]</index></name> <operator pos:start="63:65" pos:end="63:65">+</operator> <operator pos:start="63:67" pos:end="63:67">(</operator><operator pos:start="63:68" pos:end="63:68">(</operator><name pos:start="63:69" pos:end="63:71">int</name><operator pos:start="63:72" pos:end="63:72">)</operator><operator pos:start="63:73" pos:end="63:73">(</operator><operator pos:start="63:74" pos:end="63:74">(</operator><name pos:start="63:75" pos:end="63:76">z0</name> <operator pos:start="63:78" pos:end="63:78">+</operator> <name pos:start="63:80" pos:end="63:81">z3</name><operator pos:start="63:82" pos:end="63:82">)</operator> <operator pos:start="63:84" pos:end="63:84">*</operator> <name pos:start="63:86" pos:end="63:89">qmul</name> <operator pos:start="63:91" pos:end="63:91">+</operator> <name pos:start="63:93" pos:end="63:94">rr</name><operator pos:start="63:95" pos:end="63:95">)</operator> <operator pos:start="63:97" pos:end="63:98">&gt;&gt;</operator> <literal type="number" pos:start="63:100" pos:end="63:101">20</literal><operator pos:start="63:102" pos:end="63:102">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:104"><expr pos:start="65:9" pos:end="65:103"><name pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:11">dst</name><index pos:start="65:12" pos:end="65:27">[<expr pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:13">i</name> <operator pos:start="65:15" pos:end="65:15">+</operator> <name pos:start="65:17" pos:end="65:22">stride</name> <operator pos:start="65:24" pos:end="65:24">*</operator> <literal type="number" pos:start="65:26" pos:end="65:26">1</literal></expr>]</index></name> <operator pos:start="65:29" pos:end="65:29">=</operator> <call pos:start="65:31" pos:end="65:103"><name pos:start="65:31" pos:end="65:43">av_clip_uint8</name><argument_list pos:start="65:44" pos:end="65:103">(<argument pos:start="65:45" pos:end="65:102"><expr pos:start="65:45" pos:end="65:102"><name pos:start="65:45" pos:end="65:63"><name pos:start="65:45" pos:end="65:47">dst</name><index pos:start="65:48" pos:end="65:63">[<expr pos:start="65:49" pos:end="65:62"><name pos:start="65:49" pos:end="65:49">i</name> <operator pos:start="65:51" pos:end="65:51">+</operator> <name pos:start="65:53" pos:end="65:58">stride</name> <operator pos:start="65:60" pos:end="65:60">*</operator> <literal type="number" pos:start="65:62" pos:end="65:62">1</literal></expr>]</index></name> <operator pos:start="65:65" pos:end="65:65">+</operator> <operator pos:start="65:67" pos:end="65:67">(</operator><operator pos:start="65:68" pos:end="65:68">(</operator><name pos:start="65:69" pos:end="65:71">int</name><operator pos:start="65:72" pos:end="65:72">)</operator><operator pos:start="65:73" pos:end="65:73">(</operator><operator pos:start="65:74" pos:end="65:74">(</operator><name pos:start="65:75" pos:end="65:76">z1</name> <operator pos:start="65:78" pos:end="65:78">+</operator> <name pos:start="65:80" pos:end="65:81">z2</name><operator pos:start="65:82" pos:end="65:82">)</operator> <operator pos:start="65:84" pos:end="65:84">*</operator> <name pos:start="65:86" pos:end="65:89">qmul</name> <operator pos:start="65:91" pos:end="65:91">+</operator> <name pos:start="65:93" pos:end="65:94">rr</name><operator pos:start="65:95" pos:end="65:95">)</operator> <operator pos:start="65:97" pos:end="65:98">&gt;&gt;</operator> <literal type="number" pos:start="65:100" pos:end="65:101">20</literal><operator pos:start="65:102" pos:end="65:102">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:104"><expr pos:start="67:9" pos:end="67:103"><name pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:11">dst</name><index pos:start="67:12" pos:end="67:27">[<expr pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:13">i</name> <operator pos:start="67:15" pos:end="67:15">+</operator> <name pos:start="67:17" pos:end="67:22">stride</name> <operator pos:start="67:24" pos:end="67:24">*</operator> <literal type="number" pos:start="67:26" pos:end="67:26">2</literal></expr>]</index></name> <operator pos:start="67:29" pos:end="67:29">=</operator> <call pos:start="67:31" pos:end="67:103"><name pos:start="67:31" pos:end="67:43">av_clip_uint8</name><argument_list pos:start="67:44" pos:end="67:103">(<argument pos:start="67:45" pos:end="67:102"><expr pos:start="67:45" pos:end="67:102"><name pos:start="67:45" pos:end="67:63"><name pos:start="67:45" pos:end="67:47">dst</name><index pos:start="67:48" pos:end="67:63">[<expr pos:start="67:49" pos:end="67:62"><name pos:start="67:49" pos:end="67:49">i</name> <operator pos:start="67:51" pos:end="67:51">+</operator> <name pos:start="67:53" pos:end="67:58">stride</name> <operator pos:start="67:60" pos:end="67:60">*</operator> <literal type="number" pos:start="67:62" pos:end="67:62">2</literal></expr>]</index></name> <operator pos:start="67:65" pos:end="67:65">+</operator> <operator pos:start="67:67" pos:end="67:67">(</operator><operator pos:start="67:68" pos:end="67:68">(</operator><name pos:start="67:69" pos:end="67:71">int</name><operator pos:start="67:72" pos:end="67:72">)</operator><operator pos:start="67:73" pos:end="67:73">(</operator><operator pos:start="67:74" pos:end="67:74">(</operator><name pos:start="67:75" pos:end="67:76">z1</name> <operator pos:start="67:78" pos:end="67:78">-</operator> <name pos:start="67:80" pos:end="67:81">z2</name><operator pos:start="67:82" pos:end="67:82">)</operator> <operator pos:start="67:84" pos:end="67:84">*</operator> <name pos:start="67:86" pos:end="67:89">qmul</name> <operator pos:start="67:91" pos:end="67:91">+</operator> <name pos:start="67:93" pos:end="67:94">rr</name><operator pos:start="67:95" pos:end="67:95">)</operator> <operator pos:start="67:97" pos:end="67:98">&gt;&gt;</operator> <literal type="number" pos:start="67:100" pos:end="67:101">20</literal><operator pos:start="67:102" pos:end="67:102">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:104"><expr pos:start="69:9" pos:end="69:103"><name pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:11">dst</name><index pos:start="69:12" pos:end="69:27">[<expr pos:start="69:13" pos:end="69:26"><name pos:start="69:13" pos:end="69:13">i</name> <operator pos:start="69:15" pos:end="69:15">+</operator> <name pos:start="69:17" pos:end="69:22">stride</name> <operator pos:start="69:24" pos:end="69:24">*</operator> <literal type="number" pos:start="69:26" pos:end="69:26">3</literal></expr>]</index></name> <operator pos:start="69:29" pos:end="69:29">=</operator> <call pos:start="69:31" pos:end="69:103"><name pos:start="69:31" pos:end="69:43">av_clip_uint8</name><argument_list pos:start="69:44" pos:end="69:103">(<argument pos:start="69:45" pos:end="69:102"><expr pos:start="69:45" pos:end="69:102"><name pos:start="69:45" pos:end="69:63"><name pos:start="69:45" pos:end="69:47">dst</name><index pos:start="69:48" pos:end="69:63">[<expr pos:start="69:49" pos:end="69:62"><name pos:start="69:49" pos:end="69:49">i</name> <operator pos:start="69:51" pos:end="69:51">+</operator> <name pos:start="69:53" pos:end="69:58">stride</name> <operator pos:start="69:60" pos:end="69:60">*</operator> <literal type="number" pos:start="69:62" pos:end="69:62">3</literal></expr>]</index></name> <operator pos:start="69:65" pos:end="69:65">+</operator> <operator pos:start="69:67" pos:end="69:67">(</operator><operator pos:start="69:68" pos:end="69:68">(</operator><name pos:start="69:69" pos:end="69:71">int</name><operator pos:start="69:72" pos:end="69:72">)</operator><operator pos:start="69:73" pos:end="69:73">(</operator><operator pos:start="69:74" pos:end="69:74">(</operator><name pos:start="69:75" pos:end="69:76">z0</name> <operator pos:start="69:78" pos:end="69:78">-</operator> <name pos:start="69:80" pos:end="69:81">z3</name><operator pos:start="69:82" pos:end="69:82">)</operator> <operator pos:start="69:84" pos:end="69:84">*</operator> <name pos:start="69:86" pos:end="69:89">qmul</name> <operator pos:start="69:91" pos:end="69:91">+</operator> <name pos:start="69:93" pos:end="69:94">rr</name><operator pos:start="69:95" pos:end="69:95">)</operator> <operator pos:start="69:97" pos:end="69:98">&gt;&gt;</operator> <literal type="number" pos:start="69:100" pos:end="69:101">20</literal><operator pos:start="69:102" pos:end="69:102">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="75:5" pos:end="75:43"><expr pos:start="75:5" pos:end="75:42"><call pos:start="75:5" pos:end="75:42"><name pos:start="75:5" pos:end="75:10">memset</name><argument_list pos:start="75:11" pos:end="75:42">(<argument pos:start="75:12" pos:end="75:16"><expr pos:start="75:12" pos:end="75:16"><name pos:start="75:12" pos:end="75:16">block</name></expr></argument>, <argument pos:start="75:19" pos:end="75:19"><expr pos:start="75:19" pos:end="75:19"><literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr></argument>, <argument pos:start="75:22" pos:end="75:41"><expr pos:start="75:22" pos:end="75:41"><literal type="number" pos:start="75:22" pos:end="75:23">16</literal> <operator pos:start="75:25" pos:end="75:25">*</operator> <sizeof pos:start="75:27" pos:end="75:41">sizeof<argument_list pos:start="75:33" pos:end="75:41">(<argument pos:start="75:34" pos:end="75:40"><expr pos:start="75:34" pos:end="75:40"><name pos:start="75:34" pos:end="75:40">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
