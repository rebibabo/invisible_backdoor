<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24112.c" pos:tabs="8"><function pos:start="1:1" pos:end="92:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">ogg_read_header</name><parameter_list pos:start="1:27" pos:end="1:79">(<parameter pos:start="1:28" pos:end="1:54"><decl pos:start="1:28" pos:end="1:54"><type pos:start="1:28" pos:end="1:54"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:54">avfcontext</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:78"><decl pos:start="1:57" pos:end="1:78"><type pos:start="1:57" pos:end="1:78"><name pos:start="1:57" pos:end="1:74">AVFormatParameters</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:78">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="92:1">{<block_content pos:start="5:5" pos:end="90:14">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">OggContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:23">context</name> <init pos:start="5:25" pos:end="5:47">= <expr pos:start="5:27" pos:end="5:47"><name pos:start="5:27" pos:end="5:47"><name pos:start="5:27" pos:end="5:36">avfcontext</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:47">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">ogg_packet</name></type> <name pos:start="7:16" pos:end="7:17">op</name></decl> ;</decl_stmt>    

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:13">buf</name></decl> ;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">ogg_page</name></type> <name pos:start="11:14" pos:end="11:15">og</name></decl> ;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:17">ast</name></decl> ;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">AVCodecContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:25">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>

     

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:31"><call pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:17">ogg_sync_init</name><argument_list pos:start="23:18" pos:end="23:31">(<argument pos:start="23:19" pos:end="23:30"><expr pos:start="23:19" pos:end="23:30"><operator pos:start="23:19" pos:end="23:19">&amp;</operator><name pos:start="23:20" pos:end="23:30"><name pos:start="23:20" pos:end="23:26">context</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:30">oy</name></name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:62"><expr pos:start="25:5" pos:end="25:60"><name pos:start="25:5" pos:end="25:7">buf</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:60"><name pos:start="25:11" pos:end="25:25">ogg_sync_buffer</name><argument_list pos:start="25:26" pos:end="25:60">(<argument pos:start="25:27" pos:end="25:38"><expr pos:start="25:27" pos:end="25:38"><operator pos:start="25:27" pos:end="25:27">&amp;</operator><name pos:start="25:28" pos:end="25:38"><name pos:start="25:28" pos:end="25:34">context</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:38">oy</name></name></expr></argument>, <argument pos:start="25:41" pos:end="25:59"><expr pos:start="25:41" pos:end="25:59"><name pos:start="25:41" pos:end="25:59">DECODER_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="31:27"><if pos:start="29:5" pos:end="31:27">if<condition pos:start="29:7" pos:end="29:66">(<expr pos:start="29:8" pos:end="29:65"><call pos:start="29:8" pos:end="29:60"><name pos:start="29:8" pos:end="29:17">get_buffer</name><argument_list pos:start="29:18" pos:end="29:60">(<argument pos:start="29:19" pos:end="29:33"><expr pos:start="29:19" pos:end="29:33"><operator pos:start="29:19" pos:end="29:19">&amp;</operator><name pos:start="29:20" pos:end="29:33"><name pos:start="29:20" pos:end="29:29">avfcontext</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:33">pb</name></name></expr></argument>, <argument pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:38">buf</name></expr></argument>, <argument pos:start="29:41" pos:end="29:59"><expr pos:start="29:41" pos:end="29:59"><name pos:start="29:41" pos:end="29:59">DECODER_BUFFER_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="29:62" pos:end="29:63">&lt;=</operator> <literal type="number" pos:start="29:65" pos:end="29:65">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:27"><block_content pos:start="31:9" pos:end="31:27">

	<return pos:start="31:9" pos:end="31:27">return <expr pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:25">AVERROR_IO</name></expr> ;</return></block_content></block></if></if_stmt>

    

    <expr_stmt pos:start="35:5" pos:end="35:55"><expr pos:start="35:5" pos:end="35:53"><call pos:start="35:5" pos:end="35:53"><name pos:start="35:5" pos:end="35:18">ogg_sync_wrote</name><argument_list pos:start="35:19" pos:end="35:53">(<argument pos:start="35:20" pos:end="35:31"><expr pos:start="35:20" pos:end="35:31"><operator pos:start="35:20" pos:end="35:20">&amp;</operator><name pos:start="35:21" pos:end="35:31"><name pos:start="35:21" pos:end="35:27">context</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:31">oy</name></name></expr></argument>, <argument pos:start="35:34" pos:end="35:52"><expr pos:start="35:34" pos:end="35:52"><name pos:start="35:34" pos:end="35:52">DECODER_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>   

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:39"><call pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:20">ogg_sync_pageout</name><argument_list pos:start="37:21" pos:end="37:39">(<argument pos:start="37:22" pos:end="37:33"><expr pos:start="37:22" pos:end="37:33"><operator pos:start="37:22" pos:end="37:22">&amp;</operator><name pos:start="37:23" pos:end="37:33"><name pos:start="37:23" pos:end="37:29">context</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:33">oy</name></name></expr></argument>, <argument pos:start="37:36" pos:end="37:38"><expr pos:start="37:36" pos:end="37:38"><operator pos:start="37:36" pos:end="37:36">&amp;</operator><name pos:start="37:37" pos:end="37:38">og</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:59"><expr pos:start="39:5" pos:end="39:57"><call pos:start="39:5" pos:end="39:57"><name pos:start="39:5" pos:end="39:19">ogg_stream_init</name><argument_list pos:start="39:20" pos:end="39:57">(<argument pos:start="39:21" pos:end="39:32"><expr pos:start="39:21" pos:end="39:32"><operator pos:start="39:21" pos:end="39:21">&amp;</operator><name pos:start="39:22" pos:end="39:32"><name pos:start="39:22" pos:end="39:28">context</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:32">os</name></name></expr></argument>, <argument pos:start="39:35" pos:end="39:56"><expr pos:start="39:35" pos:end="39:56"><call pos:start="39:35" pos:end="39:56"><name pos:start="39:35" pos:end="39:51">ogg_page_serialno</name><argument_list pos:start="39:52" pos:end="39:56">(<argument pos:start="39:53" pos:end="39:55"><expr pos:start="39:53" pos:end="39:55"><operator pos:start="39:53" pos:end="39:53">&amp;</operator><name pos:start="39:54" pos:end="39:55">og</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:40"><call pos:start="41:5" pos:end="41:40"><name pos:start="41:5" pos:end="41:21">ogg_stream_pagein</name><argument_list pos:start="41:22" pos:end="41:40">(<argument pos:start="41:23" pos:end="41:34"><expr pos:start="41:23" pos:end="41:34"><operator pos:start="41:23" pos:end="41:23">&amp;</operator><name pos:start="41:24" pos:end="41:34"><name pos:start="41:24" pos:end="41:30">context</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:34">os</name></name></expr></argument>, <argument pos:start="41:37" pos:end="41:39"><expr pos:start="41:37" pos:end="41:39"><operator pos:start="41:37" pos:end="41:37">&amp;</operator><name pos:start="41:38" pos:end="41:39">og</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

    

    <comment type="block" pos:start="45:5" pos:end="45:52">/* currently only one vorbis stream supported */</comment>



    <expr_stmt pos:start="49:5" pos:end="49:40"><expr pos:start="49:5" pos:end="49:38"><name pos:start="49:5" pos:end="49:7">ast</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:38"><name pos:start="49:11" pos:end="49:23">av_new_stream</name><argument_list pos:start="49:24" pos:end="49:38">(<argument pos:start="49:25" pos:end="49:34"><expr pos:start="49:25" pos:end="49:34"><name pos:start="49:25" pos:end="49:34">avfcontext</name></expr></argument>, <argument pos:start="49:37" pos:end="49:37"><expr pos:start="49:37" pos:end="49:37"><literal type="number" pos:start="49:37" pos:end="49:37">0</literal></expr></argument>)</argument_list></call></expr> ;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:30"><if pos:start="51:5" pos:end="53:30">if<condition pos:start="51:7" pos:end="51:12">(<expr pos:start="51:8" pos:end="51:11"><operator pos:start="51:8" pos:end="51:8">!</operator><name pos:start="51:9" pos:end="51:11">ast</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:30"><block_content pos:start="53:9" pos:end="53:30">

	<return pos:start="53:9" pos:end="53:30">return <expr pos:start="53:16" pos:end="53:28"><name pos:start="53:16" pos:end="53:28">AVERROR_NOMEM</name></expr> ;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:46"><expr pos:start="55:5" pos:end="55:45"><call pos:start="55:5" pos:end="55:45"><name pos:start="55:5" pos:end="55:19">av_set_pts_info</name><argument_list pos:start="55:20" pos:end="55:45">(<argument pos:start="55:21" pos:end="55:23"><expr pos:start="55:21" pos:end="55:23"><name pos:start="55:21" pos:end="55:23">ast</name></expr></argument>, <argument pos:start="55:26" pos:end="55:27"><expr pos:start="55:26" pos:end="55:27"><literal type="number" pos:start="55:26" pos:end="55:27">60</literal></expr></argument>, <argument pos:start="55:30" pos:end="55:30"><expr pos:start="55:30" pos:end="55:30"><literal type="number" pos:start="55:30" pos:end="55:30">1</literal></expr></argument>, <argument pos:start="55:33" pos:end="55:44"><expr pos:start="55:33" pos:end="55:44"><name pos:start="55:33" pos:end="55:44">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:9">codec</name><operator pos:start="59:10" pos:end="59:10">=</operator> <operator pos:start="59:12" pos:end="59:12">&amp;</operator><name pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:15">ast</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:22">codec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:41"><expr pos:start="61:5" pos:end="61:40"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:9">codec</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:21">codec_type</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:40">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:38"><expr pos:start="63:5" pos:end="63:37"><name pos:start="63:5" pos:end="63:19"><name pos:start="63:5" pos:end="63:9">codec</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:19">codec_id</name></name> <operator pos:start="63:21" pos:end="63:21">=</operator> <name pos:start="63:23" pos:end="63:37">CODEC_ID_VORBIS</name></expr>;</expr_stmt>

    <for pos:start="65:5" pos:end="86:5">for<control pos:start="65:8" pos:end="65:22">(<init pos:start="65:9" pos:end="65:12"><expr pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:9">i</name><operator pos:start="65:10" pos:end="65:10">=</operator><literal type="number" pos:start="65:11" pos:end="65:11">0</literal></expr>;</init> <condition pos:start="65:14" pos:end="65:17"><expr pos:start="65:14" pos:end="65:16"><name pos:start="65:14" pos:end="65:14">i</name><operator pos:start="65:15" pos:end="65:15">&lt;</operator><literal type="number" pos:start="65:16" pos:end="65:16">3</literal></expr>;</condition> <incr pos:start="65:19" pos:end="65:21"><expr pos:start="65:19" pos:end="65:21"><name pos:start="65:19" pos:end="65:19">i</name><operator pos:start="65:20" pos:end="65:21">++</operator></expr></incr>)</control><block pos:start="65:23" pos:end="86:5">{<block_content pos:start="67:9" pos:end="84:39">

        <if_stmt pos:start="67:9" pos:end="70:9"><if pos:start="67:9" pos:end="70:9">if<condition pos:start="67:11" pos:end="67:40">(<expr pos:start="67:12" pos:end="67:39"><call pos:start="67:12" pos:end="67:39"><name pos:start="67:12" pos:end="67:22">next_packet</name><argument_list pos:start="67:23" pos:end="67:39">(<argument pos:start="67:24" pos:end="67:33"><expr pos:start="67:24" pos:end="67:33"><name pos:start="67:24" pos:end="67:33">avfcontext</name></expr></argument>, <argument pos:start="67:36" pos:end="67:38"><expr pos:start="67:36" pos:end="67:38"><operator pos:start="67:36" pos:end="67:36">&amp;</operator><name pos:start="67:37" pos:end="67:38">op</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="67:41" pos:end="70:9">{<block_content>


        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="74:9" pos:end="74:45"><expr pos:start="74:9" pos:end="74:44"><name pos:start="74:9" pos:end="74:29"><name pos:start="74:9" pos:end="74:13">codec</name><operator pos:start="74:14" pos:end="74:15">-&gt;</operator><name pos:start="74:16" pos:end="74:29">extradata_size</name></name><operator pos:start="74:30" pos:end="74:31">+=</operator> <literal type="number" pos:start="74:33" pos:end="74:35">2</literal> <operator pos:start="74:35" pos:end="74:35">+</operator> <name pos:start="74:37" pos:end="74:44"><name pos:start="74:37" pos:end="74:38">op</name><operator pos:start="74:39" pos:end="74:39">.</operator><name pos:start="74:40" pos:end="74:44">bytes</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="76:9" pos:end="76:109"><expr pos:start="76:9" pos:end="76:108"><name pos:start="76:9" pos:end="76:24"><name pos:start="76:9" pos:end="76:13">codec</name><operator pos:start="76:14" pos:end="76:15">-&gt;</operator><name pos:start="76:16" pos:end="76:24">extradata</name></name><operator pos:start="76:25" pos:end="76:25">=</operator> <call pos:start="76:27" pos:end="76:108"><name pos:start="76:27" pos:end="76:36">av_realloc</name><argument_list pos:start="76:37" pos:end="76:108">(<argument pos:start="76:38" pos:end="76:53"><expr pos:start="76:38" pos:end="76:53"><name pos:start="76:38" pos:end="76:53"><name pos:start="76:38" pos:end="76:42">codec</name><operator pos:start="76:43" pos:end="76:44">-&gt;</operator><name pos:start="76:45" pos:end="76:53">extradata</name></name></expr></argument>, <argument pos:start="76:56" pos:end="76:107"><expr pos:start="76:56" pos:end="76:107"><name pos:start="76:56" pos:end="76:76"><name pos:start="76:56" pos:end="76:60">codec</name><operator pos:start="76:61" pos:end="76:62">-&gt;</operator><name pos:start="76:63" pos:end="76:76">extradata_size</name></name> <operator pos:start="76:78" pos:end="76:78">+</operator> <name pos:start="76:80" pos:end="76:107">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="78:9" pos:end="78:67"><expr pos:start="78:9" pos:end="78:66"><name pos:start="78:9" pos:end="78:9">p</name><operator pos:start="78:10" pos:end="78:10">=</operator> <name pos:start="78:12" pos:end="78:27"><name pos:start="78:12" pos:end="78:16">codec</name><operator pos:start="78:17" pos:end="78:18">-&gt;</operator><name pos:start="78:19" pos:end="78:27">extradata</name></name> <operator pos:start="78:29" pos:end="78:29">+</operator> <name pos:start="78:31" pos:end="78:51"><name pos:start="78:31" pos:end="78:35">codec</name><operator pos:start="78:36" pos:end="78:37">-&gt;</operator><name pos:start="78:38" pos:end="78:51">extradata_size</name></name> <operator pos:start="78:53" pos:end="78:53">-</operator> <literal type="number" pos:start="78:55" pos:end="78:57">2</literal> <operator pos:start="78:57" pos:end="78:57">-</operator> <name pos:start="78:59" pos:end="78:66"><name pos:start="78:59" pos:end="78:60">op</name><operator pos:start="78:61" pos:end="78:61">.</operator><name pos:start="78:62" pos:end="78:66">bytes</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="80:9" pos:end="80:28"><expr pos:start="80:9" pos:end="80:27"><operator pos:start="80:9" pos:end="80:9">*</operator><operator pos:start="80:10" pos:end="80:10">(</operator><name pos:start="80:11" pos:end="80:11">p</name><operator pos:start="80:12" pos:end="80:13">++</operator><operator pos:start="80:14" pos:end="80:14">)</operator><operator pos:start="80:15" pos:end="80:15">=</operator> <name pos:start="80:17" pos:end="80:24"><name pos:start="80:17" pos:end="80:18">op</name><operator pos:start="80:19" pos:end="80:19">.</operator><name pos:start="80:20" pos:end="80:24">bytes</name></name><operator pos:start="80:25" pos:end="80:26">&gt;&gt;</operator><literal type="number" pos:start="80:27" pos:end="80:27">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="82:9" pos:end="82:30"><expr pos:start="82:9" pos:end="82:29"><operator pos:start="82:9" pos:end="82:9">*</operator><operator pos:start="82:10" pos:end="82:10">(</operator><name pos:start="82:11" pos:end="82:11">p</name><operator pos:start="82:12" pos:end="82:13">++</operator><operator pos:start="82:14" pos:end="82:14">)</operator><operator pos:start="82:15" pos:end="82:15">=</operator> <name pos:start="82:17" pos:end="82:24"><name pos:start="82:17" pos:end="82:18">op</name><operator pos:start="82:19" pos:end="82:19">.</operator><name pos:start="82:20" pos:end="82:24">bytes</name></name><operator pos:start="82:25" pos:end="82:25">&amp;</operator><literal type="number" pos:start="82:26" pos:end="82:29">0xFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="84:9" pos:end="84:39"><expr pos:start="84:9" pos:end="84:38"><call pos:start="84:9" pos:end="84:38"><name pos:start="84:9" pos:end="84:14">memcpy</name><argument_list pos:start="84:15" pos:end="84:38">(<argument pos:start="84:16" pos:end="84:16"><expr pos:start="84:16" pos:end="84:16"><name pos:start="84:16" pos:end="84:16">p</name></expr></argument>, <argument pos:start="84:19" pos:end="84:27"><expr pos:start="84:19" pos:end="84:27"><name pos:start="84:19" pos:end="84:27"><name pos:start="84:19" pos:end="84:20">op</name><operator pos:start="84:21" pos:end="84:21">.</operator><name pos:start="84:22" pos:end="84:27">packet</name></name></expr></argument>, <argument pos:start="84:30" pos:end="84:37"><expr pos:start="84:30" pos:end="84:37"><name pos:start="84:30" pos:end="84:37"><name pos:start="84:30" pos:end="84:31">op</name><operator pos:start="84:32" pos:end="84:32">.</operator><name pos:start="84:33" pos:end="84:37">bytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="90:5" pos:end="90:14">return <expr pos:start="90:12" pos:end="90:12"><literal type="number" pos:start="90:12" pos:end="90:12">0</literal></expr> ;</return>

</block_content>}</block></function></unit>
