<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22017.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">handle_secondary_tcp_pkt</name><parameter_list pos:start="1:36" pos:end="5:48">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:50">NetFilterState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">nf</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:52"><decl pos:start="3:37" pos:end="3:52"><type pos:start="3:37" pos:end="3:52"><name pos:start="3:37" pos:end="3:46">Connection</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:52">conn</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:47"><decl pos:start="5:37" pos:end="5:47"><type pos:start="5:37" pos:end="5:47"><name pos:start="5:37" pos:end="5:42">Packet</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="75:1">{<block_content pos:start="9:5" pos:end="73:13">

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:17">tcphdr</name></name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:26">tcp_pkt</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:53"><expr pos:start="13:5" pos:end="13:52"><name pos:start="13:5" pos:end="13:11">tcp_pkt</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <operator pos:start="13:15" pos:end="13:15">(</operator>struct <name pos:start="13:23" pos:end="13:28">tcphdr</name> <operator pos:start="13:30" pos:end="13:30">*</operator><operator pos:start="13:31" pos:end="13:31">)</operator><name pos:start="13:32" pos:end="13:52"><name pos:start="13:32" pos:end="13:34">pkt</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:52">transport_header</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="37:5"><if pos:start="17:5" pos:end="37:5">if <condition pos:start="17:8" pos:end="17:64">(<expr pos:start="17:9" pos:end="17:63"><call pos:start="17:9" pos:end="17:63"><name pos:start="17:9" pos:end="17:29">trace_event_get_state</name><argument_list pos:start="17:30" pos:end="17:63">(<argument pos:start="17:31" pos:end="17:62"><expr pos:start="17:31" pos:end="17:62"><name pos:start="17:31" pos:end="17:62">TRACE_COLO_FILTER_REWRITER_DEBUG</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:66" pos:end="37:5">{<block_content pos:start="19:9" pos:end="35:23">

        <decl_stmt pos:start="19:9" pos:end="19:30"><decl pos:start="19:9" pos:end="19:20"><type pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:12">char</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:20">sdebug</name></decl>, <decl pos:start="19:23" pos:end="19:29"><type ref="prev" pos:start="19:9" pos:end="19:14"><modifier pos:start="19:23" pos:end="19:23">*</modifier></type><name pos:start="19:24" pos:end="19:29">ddebug</name></decl>;</decl_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:52"><expr pos:start="21:9" pos:end="21:51"><name pos:start="21:9" pos:end="21:14">sdebug</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:51"><name pos:start="21:18" pos:end="21:23">strdup</name><argument_list pos:start="21:24" pos:end="21:51">(<argument pos:start="21:25" pos:end="21:50"><expr pos:start="21:25" pos:end="21:50"><call pos:start="21:25" pos:end="21:50"><name pos:start="21:25" pos:end="21:33">inet_ntoa</name><argument_list pos:start="21:34" pos:end="21:50">(<argument pos:start="21:35" pos:end="21:49"><expr pos:start="21:35" pos:end="21:49"><name pos:start="21:35" pos:end="21:49"><name pos:start="21:35" pos:end="21:37">pkt</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:41">ip</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:49">ip_src</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:52"><expr pos:start="23:9" pos:end="23:51"><name pos:start="23:9" pos:end="23:14">ddebug</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <call pos:start="23:18" pos:end="23:51"><name pos:start="23:18" pos:end="23:23">strdup</name><argument_list pos:start="23:24" pos:end="23:51">(<argument pos:start="23:25" pos:end="23:50"><expr pos:start="23:25" pos:end="23:50"><call pos:start="23:25" pos:end="23:50"><name pos:start="23:25" pos:end="23:33">inet_ntoa</name><argument_list pos:start="23:34" pos:end="23:50">(<argument pos:start="23:35" pos:end="23:49"><expr pos:start="23:35" pos:end="23:49"><name pos:start="23:35" pos:end="23:49"><name pos:start="23:35" pos:end="23:37">pkt</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:41">ip</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:49">ip_dst</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="29:39"><expr pos:start="25:9" pos:end="29:38"><call pos:start="25:9" pos:end="29:38"><name pos:start="25:9" pos:end="25:43">trace_colo_filter_rewriter_pkt_info</name><argument_list pos:start="25:44" pos:end="29:38">(<argument pos:start="25:45" pos:end="25:52"><expr pos:start="25:45" pos:end="25:52"><name pos:start="25:45" pos:end="25:52">__func__</name></expr></argument>, <argument pos:start="25:55" pos:end="25:60"><expr pos:start="25:55" pos:end="25:60"><name pos:start="25:55" pos:end="25:60">sdebug</name></expr></argument>, <argument pos:start="25:63" pos:end="25:68"><expr pos:start="25:63" pos:end="25:68"><name pos:start="25:63" pos:end="25:68">ddebug</name></expr></argument>,

                    <argument pos:start="27:21" pos:end="27:42"><expr pos:start="27:21" pos:end="27:42"><call pos:start="27:21" pos:end="27:42"><name pos:start="27:21" pos:end="27:25">ntohl</name><argument_list pos:start="27:26" pos:end="27:42">(<argument pos:start="27:27" pos:end="27:41"><expr pos:start="27:27" pos:end="27:41"><name pos:start="27:27" pos:end="27:41"><name pos:start="27:27" pos:end="27:33">tcp_pkt</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:41">th_seq</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:45" pos:end="27:66"><expr pos:start="27:45" pos:end="27:66"><call pos:start="27:45" pos:end="27:66"><name pos:start="27:45" pos:end="27:49">ntohl</name><argument_list pos:start="27:50" pos:end="27:66">(<argument pos:start="27:51" pos:end="27:65"><expr pos:start="27:51" pos:end="27:65"><name pos:start="27:51" pos:end="27:65"><name pos:start="27:51" pos:end="27:57">tcp_pkt</name><operator pos:start="27:58" pos:end="27:59">-&gt;</operator><name pos:start="27:60" pos:end="27:65">th_ack</name></name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="29:21" pos:end="29:37"><expr pos:start="29:21" pos:end="29:37"><name pos:start="29:21" pos:end="29:37"><name pos:start="29:21" pos:end="29:27">tcp_pkt</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:37">th_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:61"><expr pos:start="31:9" pos:end="31:60"><call pos:start="31:9" pos:end="31:60"><name pos:start="31:9" pos:end="31:46">trace_colo_filter_rewriter_conn_offset</name><argument_list pos:start="31:47" pos:end="31:60">(<argument pos:start="31:48" pos:end="31:59"><expr pos:start="31:48" pos:end="31:59"><name pos:start="31:48" pos:end="31:59"><name pos:start="31:48" pos:end="31:51">conn</name><operator pos:start="31:52" pos:end="31:53">-&gt;</operator><name pos:start="31:54" pos:end="31:59">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:23"><expr pos:start="33:9" pos:end="33:22"><call pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:14">g_free</name><argument_list pos:start="33:15" pos:end="33:22">(<argument pos:start="33:16" pos:end="33:21"><expr pos:start="33:16" pos:end="33:21"><name pos:start="33:16" pos:end="33:21">sdebug</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:23"><expr pos:start="35:9" pos:end="35:22"><call pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:14">g_free</name><argument_list pos:start="35:15" pos:end="35:22">(<argument pos:start="35:16" pos:end="35:21"><expr pos:start="35:16" pos:end="35:21"><name pos:start="35:16" pos:end="35:21">ddebug</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="55:5"><if pos:start="41:5" pos:end="55:5">if <condition pos:start="41:8" pos:end="41:71">(<expr pos:start="41:9" pos:end="41:70"><operator pos:start="41:9" pos:end="41:9">(</operator><operator pos:start="41:10" pos:end="41:10">(</operator><name pos:start="41:11" pos:end="41:27"><name pos:start="41:11" pos:end="41:17">tcp_pkt</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:27">th_flags</name></name> <operator pos:start="41:29" pos:end="41:29">&amp;</operator> <operator pos:start="41:31" pos:end="41:31">(</operator><name pos:start="41:32" pos:end="41:37">TH_ACK</name> <operator pos:start="41:39" pos:end="41:39">|</operator> <name pos:start="41:41" pos:end="41:46">TH_SYN</name><operator pos:start="41:47" pos:end="41:47">)</operator><operator pos:start="41:48" pos:end="41:48">)</operator> <operator pos:start="41:50" pos:end="41:51">==</operator> <operator pos:start="41:53" pos:end="41:53">(</operator><name pos:start="41:54" pos:end="41:59">TH_ACK</name> <operator pos:start="41:61" pos:end="41:61">|</operator> <name pos:start="41:63" pos:end="41:68">TH_SYN</name><operator pos:start="41:69" pos:end="41:69">)</operator><operator pos:start="41:70" pos:end="41:70">)</operator></expr>)</condition> <block pos:start="41:73" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:46">

        <comment type="block" pos:start="43:9" pos:end="51:11">/*

         * save offset = secondary_seq and then

         * in handle_primary_tcp_pkt make offset

         * = secondary_seq - primary_seq

         */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:46"><expr pos:start="53:9" pos:end="53:45"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:12">conn</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:20">offset</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:45"><name pos:start="53:24" pos:end="53:28">ntohl</name><argument_list pos:start="53:29" pos:end="53:45">(<argument pos:start="53:30" pos:end="53:44"><expr pos:start="53:30" pos:end="53:44"><name pos:start="53:30" pos:end="53:44"><name pos:start="53:30" pos:end="53:36">tcp_pkt</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:44">th_seq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="69:5"><if pos:start="59:5" pos:end="69:5">if <condition pos:start="59:8" pos:end="59:58">(<expr pos:start="59:9" pos:end="59:57"><operator pos:start="59:9" pos:end="59:9">(</operator><name pos:start="59:10" pos:end="59:26"><name pos:start="59:10" pos:end="59:16">tcp_pkt</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:26">th_flags</name></name> <operator pos:start="59:28" pos:end="59:28">&amp;</operator> <operator pos:start="59:30" pos:end="59:30">(</operator><name pos:start="59:31" pos:end="59:36">TH_ACK</name> <operator pos:start="59:38" pos:end="59:38">|</operator> <name pos:start="59:40" pos:end="59:45">TH_SYN</name><operator pos:start="59:46" pos:end="59:46">)</operator><operator pos:start="59:47" pos:end="59:47">)</operator> <operator pos:start="59:49" pos:end="59:50">==</operator> <name pos:start="59:52" pos:end="59:57">TH_ACK</name></expr>)</condition> <block pos:start="59:60" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:64">

        <comment type="block" pos:start="61:9" pos:end="61:61">/* handle packets to the primary from the secondary*/</comment>

        <expr_stmt pos:start="63:9" pos:end="63:71"><expr pos:start="63:9" pos:end="63:70"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:15">tcp_pkt</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:23">th_seq</name></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <call pos:start="63:27" pos:end="63:70"><name pos:start="63:27" pos:end="63:31">htonl</name><argument_list pos:start="63:32" pos:end="63:70">(<argument pos:start="63:33" pos:end="63:69"><expr pos:start="63:33" pos:end="63:69"><call pos:start="63:33" pos:end="63:54"><name pos:start="63:33" pos:end="63:37">ntohl</name><argument_list pos:start="63:38" pos:end="63:54">(<argument pos:start="63:39" pos:end="63:53"><expr pos:start="63:39" pos:end="63:53"><name pos:start="63:39" pos:end="63:53"><name pos:start="63:39" pos:end="63:45">tcp_pkt</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:53">th_seq</name></name></expr></argument>)</argument_list></call> <operator pos:start="63:56" pos:end="63:56">-</operator> <name pos:start="63:58" pos:end="63:69"><name pos:start="63:58" pos:end="63:61">conn</name><operator pos:start="63:62" pos:end="63:63">-&gt;</operator><name pos:start="63:64" pos:end="63:69">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:64"><expr pos:start="67:9" pos:end="67:63"><call pos:start="67:9" pos:end="67:63"><name pos:start="67:9" pos:end="67:30">net_checksum_calculate</name><argument_list pos:start="67:31" pos:end="67:63">(<argument pos:start="67:32" pos:end="67:51"><expr pos:start="67:32" pos:end="67:51"><operator pos:start="67:32" pos:end="67:32">(</operator><name pos:start="67:33" pos:end="67:39">uint8_t</name> <operator pos:start="67:41" pos:end="67:41">*</operator><operator pos:start="67:42" pos:end="67:42">)</operator><name pos:start="67:43" pos:end="67:51"><name pos:start="67:43" pos:end="67:45">pkt</name><operator pos:start="67:46" pos:end="67:47">-&gt;</operator><name pos:start="67:48" pos:end="67:51">data</name></name></expr></argument>, <argument pos:start="67:54" pos:end="67:62"><expr pos:start="67:54" pos:end="67:62"><name pos:start="67:54" pos:end="67:62"><name pos:start="67:54" pos:end="67:56">pkt</name><operator pos:start="67:57" pos:end="67:58">-&gt;</operator><name pos:start="67:59" pos:end="67:62">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
