<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12924.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">oma_read_seek</name><parameter_list pos:start="1:25" pos:end="3:72">(<parameter pos:start="1:26" pos:end="1:50"><decl pos:start="1:26" pos:end="1:50"><type pos:start="1:26" pos:end="1:50"><name pos:start="1:26" pos:end="1:47"><name pos:start="1:26" pos:end="1:31">struct</name> <name pos:start="1:33" pos:end="1:47">AVFormatContext</name></name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:41"><decl pos:start="3:26" pos:end="3:41"><type pos:start="3:26" pos:end="3:41"><name pos:start="3:26" pos:end="3:28">int</name></type> <name pos:start="3:30" pos:end="3:41">stream_index</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:60"><decl pos:start="3:44" pos:end="3:60"><type pos:start="3:44" pos:end="3:60"><name pos:start="3:44" pos:end="3:50">int64_t</name></type> <name pos:start="3:52" pos:end="3:60">timestamp</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:71"><decl pos:start="3:63" pos:end="3:71"><type pos:start="3:63" pos:end="3:71"><name pos:start="3:63" pos:end="3:65">int</name></type> <name pos:start="3:67" pos:end="3:71">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:15">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">OMAContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">oc</name> <init pos:start="7:20" pos:end="7:33">= <expr pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:22">s</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:66"><decl pos:start="9:5" pos:end="9:65"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name> <init pos:start="9:13" pos:end="9:65">= <expr pos:start="9:15" pos:end="9:65"><call pos:start="9:15" pos:end="9:65"><name pos:start="9:15" pos:end="9:30">ff_pcm_read_seek</name><argument_list pos:start="9:31" pos:end="9:65">(<argument pos:start="9:32" pos:end="9:32"><expr pos:start="9:32" pos:end="9:32"><name pos:start="9:32" pos:end="9:32">s</name></expr></argument>, <argument pos:start="9:35" pos:end="9:46"><expr pos:start="9:35" pos:end="9:46"><name pos:start="9:35" pos:end="9:46">stream_index</name></expr></argument>, <argument pos:start="9:49" pos:end="9:57"><expr pos:start="9:49" pos:end="9:57"><name pos:start="9:49" pos:end="9:57">timestamp</name></expr></argument>, <argument pos:start="9:60" pos:end="9:64"><expr pos:start="9:60" pos:end="9:64"><name pos:start="9:60" pos:end="9:64">flags</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:19"><if pos:start="13:5" pos:end="15:19">if <condition pos:start="13:8" pos:end="13:23">(<expr pos:start="13:9" pos:end="13:22"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:22"><name pos:start="13:10" pos:end="13:11">oc</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:22">encrypted</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:19"><block_content pos:start="15:9" pos:end="15:19">

        <return pos:start="15:9" pos:end="15:19">return <expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:18">err</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:29">/* readjust IV for CBC */</comment>

    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:52">(<expr pos:start="21:9" pos:end="21:51"><name pos:start="21:9" pos:end="21:11">err</name> <operator pos:start="21:13" pos:end="21:14">||</operator> <call pos:start="21:16" pos:end="21:31"><name pos:start="21:16" pos:end="21:24">avio_tell</name><argument_list pos:start="21:25" pos:end="21:31">(<argument pos:start="21:26" pos:end="21:30"><expr pos:start="21:26" pos:end="21:30"><name pos:start="21:26" pos:end="21:30"><name pos:start="21:26" pos:end="21:26">s</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:30">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:33" pos:end="21:33">&lt;</operator> <name pos:start="21:35" pos:end="21:51"><name pos:start="21:35" pos:end="21:36">oc</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:51">content_start</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <goto pos:start="23:9" pos:end="23:18">goto <name pos:start="23:14" pos:end="23:17">wipe</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if <condition pos:start="25:8" pos:end="25:51">(<expr pos:start="25:9" pos:end="25:50"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:12">err</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:45"><name pos:start="25:16" pos:end="25:24">avio_seek</name><argument_list pos:start="25:25" pos:end="25:45">(<argument pos:start="25:26" pos:end="25:30"><expr pos:start="25:26" pos:end="25:30"><name pos:start="25:26" pos:end="25:30"><name pos:start="25:26" pos:end="25:26">s</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:30">pb</name></name></expr></argument>, <argument pos:start="25:33" pos:end="25:34"><expr pos:start="25:33" pos:end="25:34"><operator pos:start="25:33" pos:end="25:33">-</operator><literal type="number" pos:start="25:34" pos:end="25:34">8</literal></expr></argument>, <argument pos:start="25:37" pos:end="25:44"><expr pos:start="25:37" pos:end="25:44"><name pos:start="25:37" pos:end="25:44">SEEK_CUR</name></expr></argument>)</argument_list></call><operator pos:start="25:46" pos:end="25:46">)</operator> <operator pos:start="25:48" pos:end="25:48">&lt;</operator> <literal type="number" pos:start="25:50" pos:end="25:50">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <goto pos:start="27:9" pos:end="27:18">goto <name pos:start="27:14" pos:end="27:17">wipe</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:48">(<expr pos:start="29:9" pos:end="29:47"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:12">err</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:42"><name pos:start="29:16" pos:end="29:24">avio_read</name><argument_list pos:start="29:25" pos:end="29:42">(<argument pos:start="29:26" pos:end="29:30"><expr pos:start="29:26" pos:end="29:30"><name pos:start="29:26" pos:end="29:30"><name pos:start="29:26" pos:end="29:26">s</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:30">pb</name></name></expr></argument>, <argument pos:start="29:33" pos:end="29:38"><expr pos:start="29:33" pos:end="29:38"><name pos:start="29:33" pos:end="29:38"><name pos:start="29:33" pos:end="29:34">oc</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:38">iv</name></name></expr></argument>, <argument pos:start="29:41" pos:end="29:41"><expr pos:start="29:41" pos:end="29:41"><literal type="number" pos:start="29:41" pos:end="29:41">8</literal></expr></argument>)</argument_list></call><operator pos:start="29:43" pos:end="29:43">)</operator> <operator pos:start="29:45" pos:end="29:45">&lt;</operator> <literal type="number" pos:start="29:47" pos:end="29:47">8</literal></expr>)</condition> <block pos:start="29:50" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:18">

        <if_stmt pos:start="31:9" pos:end="33:30"><if pos:start="31:9" pos:end="33:30">if <condition pos:start="31:12" pos:end="31:21">(<expr pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:15">err</name> <operator pos:start="31:17" pos:end="31:18">&gt;=</operator> <literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:30"><block_content pos:start="33:13" pos:end="33:30">

            <expr_stmt pos:start="33:13" pos:end="33:30"><expr pos:start="33:13" pos:end="33:29"><name pos:start="33:13" pos:end="33:15">err</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:29">AVERROR_EOF</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <goto pos:start="35:9" pos:end="35:18">goto <name pos:start="35:14" pos:end="35:17">wipe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>

<label pos:start="43:1" pos:end="43:5"><name pos:start="43:1" pos:end="43:4">wipe</name>:</label>

    <expr_stmt pos:start="45:5" pos:end="45:25"><expr pos:start="45:5" pos:end="45:24"><call pos:start="45:5" pos:end="45:24"><name pos:start="45:5" pos:end="45:10">memset</name><argument_list pos:start="45:11" pos:end="45:24">(<argument pos:start="45:12" pos:end="45:17"><expr pos:start="45:12" pos:end="45:17"><name pos:start="45:12" pos:end="45:17"><name pos:start="45:12" pos:end="45:13">oc</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:17">iv</name></name></expr></argument>, <argument pos:start="45:20" pos:end="45:20"><expr pos:start="45:20" pos:end="45:20"><literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr></argument>, <argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><literal type="number" pos:start="45:23" pos:end="45:23">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:15">return <expr pos:start="47:12" pos:end="47:14"><name pos:start="47:12" pos:end="47:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
