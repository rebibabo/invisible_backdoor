<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17230.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vmdk_add_extent</name><parameter_list pos:start="1:27" pos:end="13:40">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">bs</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><name pos:start="3:28" pos:end="3:43">BlockDriverState</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">file</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:60"><decl pos:start="3:52" pos:end="3:60"><type pos:start="3:52" pos:end="3:60"><name pos:start="3:52" pos:end="3:55">bool</name></type> <name pos:start="3:57" pos:end="3:60">flat</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:77"><decl pos:start="3:63" pos:end="3:77"><type pos:start="3:63" pos:end="3:77"><name pos:start="3:63" pos:end="3:69">int64_t</name></type> <name pos:start="3:71" pos:end="3:77">sectors</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:44"><decl pos:start="5:28" pos:end="5:44"><type pos:start="5:28" pos:end="5:44"><name pos:start="5:28" pos:end="5:34">int64_t</name></type> <name pos:start="5:36" pos:end="5:44">l1_offset</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:70"><decl pos:start="5:47" pos:end="5:70"><type pos:start="5:47" pos:end="5:70"><name pos:start="5:47" pos:end="5:53">int64_t</name></type> <name pos:start="5:55" pos:end="5:70">l1_backup_offset</name></decl></parameter>,

                           <parameter pos:start="7:28" pos:end="7:43"><decl pos:start="7:28" pos:end="7:43"><type pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:35">uint32_t</name></type> <name pos:start="7:37" pos:end="7:43">l1_size</name></decl></parameter>,

                           <parameter pos:start="9:28" pos:end="9:38"><decl pos:start="9:28" pos:end="9:38"><type pos:start="9:28" pos:end="9:38"><name pos:start="9:28" pos:end="9:30">int</name></type> <name pos:start="9:32" pos:end="9:38">l2_size</name></decl></parameter>, <parameter pos:start="9:41" pos:end="9:64"><decl pos:start="9:41" pos:end="9:64"><type pos:start="9:41" pos:end="9:64"><name pos:start="9:41" pos:end="9:48">uint64_t</name></type> <name pos:start="9:50" pos:end="9:64">cluster_sectors</name></decl></parameter>,

                           <parameter pos:start="11:28" pos:end="11:50"><decl pos:start="11:28" pos:end="11:50"><type pos:start="11:28" pos:end="11:50"><name pos:start="11:28" pos:end="11:37">VmdkExtent</name> <modifier pos:start="11:39" pos:end="11:39">*</modifier><modifier pos:start="11:40" pos:end="11:40">*</modifier></type><name pos:start="11:41" pos:end="11:50">new_extent</name></decl></parameter>,

                           <parameter pos:start="13:28" pos:end="13:39"><decl pos:start="13:28" pos:end="13:39"><type pos:start="13:28" pos:end="13:39"><name pos:start="13:28" pos:end="13:32">Error</name> <modifier pos:start="13:34" pos:end="13:34">*</modifier><modifier pos:start="13:35" pos:end="13:35">*</modifier></type><name pos:start="13:36" pos:end="13:39">errp</name></decl></parameter>)</parameter_list>

<block pos:start="15:1" pos:end="119:1">{<block_content pos:start="17:5" pos:end="117:13">

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">VmdkExtent</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:22">extent</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:34"><decl pos:start="19:5" pos:end="19:33"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:17">BDRVVmdkState</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:20">s</name> <init pos:start="19:22" pos:end="19:33">= <expr pos:start="19:24" pos:end="19:33"><name pos:start="19:24" pos:end="19:33"><name pos:start="19:24" pos:end="19:25">bs</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int64_t</name></type> <name pos:start="21:13" pos:end="21:18">length</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:35">(<expr pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:23">cluster_sectors</name> <operator pos:start="25:25" pos:end="25:25">&gt;</operator> <literal type="number" pos:start="25:27" pos:end="25:34">0x200000</literal></expr>)</condition> <block pos:start="25:37" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:22">

        <comment type="block" pos:start="27:9" pos:end="27:70">/* 0x200000 * 512Bytes = 1GB for one cluster is unrealistic */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:70"><expr pos:start="29:9" pos:end="29:69"><call pos:start="29:9" pos:end="29:69"><name pos:start="29:9" pos:end="29:18">error_setg</name><argument_list pos:start="29:19" pos:end="29:69">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">errp</name></expr></argument>, <argument pos:start="29:26" pos:end="29:68"><expr pos:start="29:26" pos:end="29:68"><literal type="string" pos:start="29:26" pos:end="29:68">"Invalid granularity, image may be corrupt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:22">return <expr pos:start="31:16" pos:end="31:21"><operator pos:start="31:16" pos:end="31:16">-</operator><name pos:start="31:17" pos:end="31:21">EFBIG</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="49:5"><if pos:start="35:5" pos:end="49:5">if <condition pos:start="35:8" pos:end="35:36">(<expr pos:start="35:9" pos:end="35:35"><name pos:start="35:9" pos:end="35:15">l1_size</name> <operator pos:start="35:17" pos:end="35:17">&gt;</operator> <literal type="number" pos:start="35:19" pos:end="35:21">512</literal> <operator pos:start="35:23" pos:end="35:23">*</operator> <literal type="number" pos:start="35:25" pos:end="35:28">1024</literal> <operator pos:start="35:30" pos:end="35:30">*</operator> <literal type="number" pos:start="35:32" pos:end="35:35">1024</literal></expr>)</condition> <block pos:start="35:38" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:22">

        <comment type="block" pos:start="37:9" pos:end="43:18">/* Although with big capacity and small l1_entry_sectors, we can get a

         * big l1_size, we don't want unbounded value to allocate the table.

         * Limit it to 512M, which is 16PB for default cluster and L2 table

         * size */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:44"><expr pos:start="45:9" pos:end="45:43"><call pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:18">error_setg</name><argument_list pos:start="45:19" pos:end="45:43">(<argument pos:start="45:20" pos:end="45:23"><expr pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:23">errp</name></expr></argument>, <argument pos:start="45:26" pos:end="45:42"><expr pos:start="45:26" pos:end="45:42"><literal type="string" pos:start="45:26" pos:end="45:42">"L1 size too big"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:22">return <expr pos:start="47:16" pos:end="47:21"><operator pos:start="47:16" pos:end="47:16">-</operator><name pos:start="47:17" pos:end="47:21">EFBIG</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:34"><expr pos:start="53:5" pos:end="53:33"><name pos:start="53:5" pos:end="53:10">length</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="53:33"><name pos:start="53:14" pos:end="53:27">bdrv_getlength</name><argument_list pos:start="53:28" pos:end="53:33">(<argument pos:start="53:29" pos:end="53:32"><expr pos:start="53:29" pos:end="53:32"><name pos:start="53:29" pos:end="53:32">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:19">(<expr pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:14">length</name> <operator pos:start="55:16" pos:end="55:16">&lt;</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>)</condition> <block pos:start="55:21" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:22">

        <return pos:start="57:9" pos:end="57:22">return <expr pos:start="57:16" pos:end="57:21"><name pos:start="57:16" pos:end="57:21">length</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="65:73"><expr pos:start="63:5" pos:end="65:72"><name pos:start="63:5" pos:end="63:14"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:14">extents</name></name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="65:72"><name pos:start="63:18" pos:end="63:26">g_realloc</name><argument_list pos:start="63:27" pos:end="65:72">(<argument pos:start="63:28" pos:end="63:37"><expr pos:start="63:28" pos:end="63:37"><name pos:start="63:28" pos:end="63:37"><name pos:start="63:28" pos:end="63:28">s</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:37">extents</name></name></expr></argument>,

                              <argument pos:start="65:31" pos:end="65:71"><expr pos:start="65:31" pos:end="65:71"><operator pos:start="65:31" pos:end="65:31">(</operator><name pos:start="65:32" pos:end="65:45"><name pos:start="65:32" pos:end="65:32">s</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:45">num_extents</name></name> <operator pos:start="65:47" pos:end="65:47">+</operator> <literal type="number" pos:start="65:49" pos:end="65:49">1</literal><operator pos:start="65:50" pos:end="65:50">)</operator> <operator pos:start="65:52" pos:end="65:52">*</operator> <sizeof pos:start="65:54" pos:end="65:71">sizeof<argument_list pos:start="65:60" pos:end="65:71">(<argument pos:start="65:61" pos:end="65:70"><expr pos:start="65:61" pos:end="65:70"><name pos:start="65:61" pos:end="65:70">VmdkExtent</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:41"><expr pos:start="67:5" pos:end="67:40"><name pos:start="67:5" pos:end="67:10">extent</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <operator pos:start="67:14" pos:end="67:14">&amp;</operator><name pos:start="67:15" pos:end="67:40"><name pos:start="67:15" pos:end="67:15">s</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:24">extents</name><index pos:start="67:25" pos:end="67:40">[<expr pos:start="67:26" pos:end="67:39"><name pos:start="67:26" pos:end="67:39"><name pos:start="67:26" pos:end="67:26">s</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:39">num_extents</name></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:21"><expr pos:start="69:5" pos:end="69:20"><name pos:start="69:5" pos:end="69:18"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:18">num_extents</name></name><operator pos:start="69:19" pos:end="69:20">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:42"><expr pos:start="73:5" pos:end="73:41"><call pos:start="73:5" pos:end="73:41"><name pos:start="73:5" pos:end="73:10">memset</name><argument_list pos:start="73:11" pos:end="73:41">(<argument pos:start="73:12" pos:end="73:17"><expr pos:start="73:12" pos:end="73:17"><name pos:start="73:12" pos:end="73:17">extent</name></expr></argument>, <argument pos:start="73:20" pos:end="73:20"><expr pos:start="73:20" pos:end="73:20"><literal type="number" pos:start="73:20" pos:end="73:20">0</literal></expr></argument>, <argument pos:start="73:23" pos:end="73:40"><expr pos:start="73:23" pos:end="73:40"><sizeof pos:start="73:23" pos:end="73:40">sizeof<argument_list pos:start="73:29" pos:end="73:40">(<argument pos:start="73:30" pos:end="73:39"><expr pos:start="73:30" pos:end="73:39"><name pos:start="73:30" pos:end="73:39">VmdkExtent</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:24"><expr pos:start="75:5" pos:end="75:23"><name pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:10">extent</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:16">file</name></name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:23">file</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:24"><expr pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:16"><name pos:start="77:5" pos:end="77:10">extent</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:16">flat</name></name> <operator pos:start="77:18" pos:end="77:18">=</operator> <name pos:start="77:20" pos:end="77:23">flat</name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:30"><expr pos:start="79:5" pos:end="79:29"><name pos:start="79:5" pos:end="79:19"><name pos:start="79:5" pos:end="79:10">extent</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:19">sectors</name></name> <operator pos:start="79:21" pos:end="79:21">=</operator> <name pos:start="79:23" pos:end="79:29">sectors</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:40"><expr pos:start="81:5" pos:end="81:39"><name pos:start="81:5" pos:end="81:27"><name pos:start="81:5" pos:end="81:10">extent</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:27">l1_table_offset</name></name> <operator pos:start="81:29" pos:end="81:29">=</operator> <name pos:start="81:31" pos:end="81:39">l1_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:54"><expr pos:start="83:5" pos:end="83:53"><name pos:start="83:5" pos:end="83:34"><name pos:start="83:5" pos:end="83:10">extent</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:34">l1_backup_table_offset</name></name> <operator pos:start="83:36" pos:end="83:36">=</operator> <name pos:start="83:38" pos:end="83:53">l1_backup_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:30"><expr pos:start="85:5" pos:end="85:29"><name pos:start="85:5" pos:end="85:19"><name pos:start="85:5" pos:end="85:10">extent</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:19">l1_size</name></name> <operator pos:start="85:21" pos:end="85:21">=</operator> <name pos:start="85:23" pos:end="85:29">l1_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:57"><expr pos:start="87:5" pos:end="87:56"><name pos:start="87:5" pos:end="87:28"><name pos:start="87:5" pos:end="87:10">extent</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:28">l1_entry_sectors</name></name> <operator pos:start="87:30" pos:end="87:30">=</operator> <name pos:start="87:32" pos:end="87:38">l2_size</name> <operator pos:start="87:40" pos:end="87:40">*</operator> <name pos:start="87:42" pos:end="87:56">cluster_sectors</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:30"><expr pos:start="89:5" pos:end="89:29"><name pos:start="89:5" pos:end="89:19"><name pos:start="89:5" pos:end="89:10">extent</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:19">l2_size</name></name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:29">l2_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:63"><expr pos:start="91:5" pos:end="91:62"><name pos:start="91:5" pos:end="91:27"><name pos:start="91:5" pos:end="91:10">extent</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:27">cluster_sectors</name></name> <operator pos:start="91:29" pos:end="91:29">=</operator> <ternary pos:start="91:31" pos:end="91:62"><condition pos:start="91:31" pos:end="91:36"><expr pos:start="91:31" pos:end="91:34"><name pos:start="91:31" pos:end="91:34">flat</name></expr> ?</condition><then pos:start="91:38" pos:end="91:44"> <expr pos:start="91:38" pos:end="91:44"><name pos:start="91:38" pos:end="91:44">sectors</name></expr> </then><else pos:start="91:46" pos:end="91:62">: <expr pos:start="91:48" pos:end="91:62"><name pos:start="91:48" pos:end="91:62">cluster_sectors</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="95:74"><expr pos:start="93:5" pos:end="95:73"><name pos:start="93:5" pos:end="93:31"><name pos:start="93:5" pos:end="93:10">extent</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:31">next_cluster_sector</name></name> <operator pos:start="93:33" pos:end="93:33">=</operator>

        <call pos:start="95:9" pos:end="95:73"><name pos:start="95:9" pos:end="95:16">ROUND_UP</name><argument_list pos:start="95:17" pos:end="95:73">(<argument pos:start="95:18" pos:end="95:55"><expr pos:start="95:18" pos:end="95:55"><call pos:start="95:18" pos:end="95:55"><name pos:start="95:18" pos:end="95:29">DIV_ROUND_UP</name><argument_list pos:start="95:30" pos:end="95:55">(<argument pos:start="95:31" pos:end="95:36"><expr pos:start="95:31" pos:end="95:36"><name pos:start="95:31" pos:end="95:36">length</name></expr></argument>, <argument pos:start="95:39" pos:end="95:54"><expr pos:start="95:39" pos:end="95:54"><name pos:start="95:39" pos:end="95:54">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:58" pos:end="95:72"><expr pos:start="95:58" pos:end="95:72"><name pos:start="95:58" pos:end="95:72">cluster_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="99:5" pos:end="107:5"><if pos:start="99:5" pos:end="103:5">if <condition pos:start="99:8" pos:end="99:27">(<expr pos:start="99:9" pos:end="99:26"><name pos:start="99:9" pos:end="99:22"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:22">num_extents</name></name> <operator pos:start="99:24" pos:end="99:24">&gt;</operator> <literal type="number" pos:start="99:26" pos:end="99:26">1</literal></expr>)</condition> <block pos:start="99:29" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:74">

        <expr_stmt pos:start="101:9" pos:end="101:74"><expr pos:start="101:9" pos:end="101:73"><name pos:start="101:9" pos:end="101:26"><name pos:start="101:9" pos:end="101:14">extent</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:26">end_sector</name></name> <operator pos:start="101:28" pos:end="101:28">=</operator> <operator pos:start="101:30" pos:end="101:30">(</operator><operator pos:start="101:31" pos:end="101:31">*</operator><operator pos:start="101:32" pos:end="101:32">(</operator><name pos:start="101:33" pos:end="101:38">extent</name> <operator pos:start="101:40" pos:end="101:40">-</operator> <literal type="number" pos:start="101:42" pos:end="101:42">1</literal><operator pos:start="101:43" pos:end="101:43">)</operator><operator pos:start="101:44" pos:end="101:44">)</operator><operator pos:start="101:45" pos:end="101:45">.</operator><name pos:start="101:46" pos:end="101:55">end_sector</name> <operator pos:start="101:57" pos:end="101:57">+</operator> <name pos:start="101:59" pos:end="101:73"><name pos:start="101:59" pos:end="101:64">extent</name><operator pos:start="101:65" pos:end="101:66">-&gt;</operator><name pos:start="101:67" pos:end="101:73">sectors</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="107:5">else <block pos:start="103:12" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:45">

        <expr_stmt pos:start="105:9" pos:end="105:45"><expr pos:start="105:9" pos:end="105:44"><name pos:start="105:9" pos:end="105:26"><name pos:start="105:9" pos:end="105:14">extent</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:26">end_sector</name></name> <operator pos:start="105:28" pos:end="105:28">=</operator> <name pos:start="105:30" pos:end="105:44"><name pos:start="105:30" pos:end="105:35">extent</name><operator pos:start="105:36" pos:end="105:37">-&gt;</operator><name pos:start="105:38" pos:end="105:44">sectors</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:43"><expr pos:start="109:5" pos:end="109:42"><name pos:start="109:5" pos:end="109:21"><name pos:start="109:5" pos:end="109:6">bs</name><operator pos:start="109:7" pos:end="109:8">-&gt;</operator><name pos:start="109:9" pos:end="109:21">total_sectors</name></name> <operator pos:start="109:23" pos:end="109:23">=</operator> <name pos:start="109:25" pos:end="109:42"><name pos:start="109:25" pos:end="109:30">extent</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:42">end_sector</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="115:5"><if pos:start="111:5" pos:end="115:5">if <condition pos:start="111:8" pos:end="111:19">(<expr pos:start="111:9" pos:end="111:18"><name pos:start="111:9" pos:end="111:18">new_extent</name></expr>)</condition> <block pos:start="111:21" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:29">

        <expr_stmt pos:start="113:9" pos:end="113:29"><expr pos:start="113:9" pos:end="113:28"><operator pos:start="113:9" pos:end="113:9">*</operator><name pos:start="113:10" pos:end="113:19">new_extent</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <name pos:start="113:23" pos:end="113:28">extent</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="117:5" pos:end="117:13">return <expr pos:start="117:12" pos:end="117:12"><literal type="number" pos:start="117:12" pos:end="117:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
