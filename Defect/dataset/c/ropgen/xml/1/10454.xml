<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10454.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">update_wrap_reference</name><parameter_list pos:start="1:33" pos:end="1:84">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:61">AVStream</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:65">st</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:83"><decl pos:start="1:68" pos:end="1:83"><type pos:start="1:68" pos:end="1:83"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:83">stream_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:13">

    <if_stmt pos:start="5:5" pos:end="111:5"><if pos:start="5:5" pos:end="111:5">if <condition pos:start="5:8" pos:end="7:84">(<expr pos:start="5:9" pos:end="7:83"><name pos:start="5:9" pos:end="5:30"><name pos:start="5:9" pos:end="5:9">s</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:30">correct_ts_overflow</name></name> <operator pos:start="5:32" pos:end="5:33">&amp;&amp;</operator> <name pos:start="5:35" pos:end="5:51"><name pos:start="5:35" pos:end="5:36">st</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:51">pts_wrap_bits</name></name> <operator pos:start="5:53" pos:end="5:54">!=</operator> <literal type="number" pos:start="5:56" pos:end="5:57">64</literal> <operator pos:start="5:59" pos:end="5:60">&amp;&amp;</operator>

        <name pos:start="7:9" pos:end="7:30"><name pos:start="7:9" pos:end="7:10">st</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:30">pts_wrap_reference</name></name> <operator pos:start="7:32" pos:end="7:33">==</operator> <name pos:start="7:35" pos:end="7:48">AV_NOPTS_VALUE</name> <operator pos:start="7:50" pos:end="7:51">&amp;&amp;</operator> <name pos:start="7:53" pos:end="7:65"><name pos:start="7:53" pos:end="7:54">st</name><operator pos:start="7:55" pos:end="7:56">-&gt;</operator><name pos:start="7:57" pos:end="7:65">first_dts</name></name> <operator pos:start="7:67" pos:end="7:68">!=</operator> <name pos:start="7:70" pos:end="7:83">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="7:86" pos:end="111:5">{<block_content pos:start="9:9" pos:end="109:17">

        <decl_stmt pos:start="9:9" pos:end="9:14"><decl pos:start="9:9" pos:end="9:13"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:13">i</name></decl>;</decl_stmt>



        <comment type="line" pos:start="13:9" pos:end="13:70">// reference time stamp should be 60 s before first time stamp</comment>

        <decl_stmt pos:start="15:9" pos:end="15:106"><decl pos:start="15:9" pos:end="15:105"><type pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:15">int64_t</name></type> <name pos:start="15:17" pos:end="15:34">pts_wrap_reference</name> <init pos:start="15:36" pos:end="15:105">= <expr pos:start="15:38" pos:end="15:105"><name pos:start="15:38" pos:end="15:50"><name pos:start="15:38" pos:end="15:39">st</name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:50">first_dts</name></name> <operator pos:start="15:52" pos:end="15:52">-</operator> <call pos:start="15:54" pos:end="15:105"><name pos:start="15:54" pos:end="15:63">av_rescale</name><argument_list pos:start="15:64" pos:end="15:105">(<argument pos:start="15:65" pos:end="15:66"><expr pos:start="15:65" pos:end="15:66"><literal type="number" pos:start="15:65" pos:end="15:66">60</literal></expr></argument>, <argument pos:start="15:69" pos:end="15:85"><expr pos:start="15:69" pos:end="15:85"><name pos:start="15:69" pos:end="15:85"><name pos:start="15:69" pos:end="15:70">st</name><operator pos:start="15:71" pos:end="15:72">-&gt;</operator><name pos:start="15:73" pos:end="15:81">time_base</name><operator pos:start="15:82" pos:end="15:82">.</operator><name pos:start="15:83" pos:end="15:85">den</name></name></expr></argument>, <argument pos:start="15:88" pos:end="15:104"><expr pos:start="15:88" pos:end="15:104"><name pos:start="15:88" pos:end="15:104"><name pos:start="15:88" pos:end="15:89">st</name><operator pos:start="15:90" pos:end="15:91">-&gt;</operator><name pos:start="15:92" pos:end="15:100">time_base</name><operator pos:start="15:101" pos:end="15:101">.</operator><name pos:start="15:102" pos:end="15:104">num</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:start="17:9" pos:end="17:119">// if first time stamp is not more than 1/8 and 60s before the wrap point, subtract rather than add wrap offset</comment>

        <decl_stmt pos:start="19:9" pos:end="23:60"><decl pos:start="19:9" pos:end="23:59"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:29">pts_wrap_behavior</name> <init pos:start="19:31" pos:end="23:59">= <expr pos:start="19:33" pos:end="23:59"><ternary pos:start="19:33" pos:end="23:59"><condition pos:start="19:33" pos:end="21:111"><expr pos:start="19:33" pos:end="21:109"><operator pos:start="19:33" pos:end="19:33">(</operator><name pos:start="19:34" pos:end="19:46"><name pos:start="19:34" pos:end="19:35">st</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:46">first_dts</name></name> <operator pos:start="19:48" pos:end="19:48">&lt;</operator> <operator pos:start="19:50" pos:end="19:50">(</operator><literal type="number" pos:start="19:51" pos:end="19:53">1LL</literal><operator pos:start="19:54" pos:end="19:55">&lt;&lt;</operator><name pos:start="19:56" pos:end="19:72"><name pos:start="19:56" pos:end="19:57">st</name><operator pos:start="19:58" pos:end="19:59">-&gt;</operator><name pos:start="19:60" pos:end="19:72">pts_wrap_bits</name></name><operator pos:start="19:73" pos:end="19:73">)</operator> <operator pos:start="19:75" pos:end="19:75">-</operator> <operator pos:start="19:77" pos:end="19:77">(</operator><literal type="number" pos:start="19:78" pos:end="19:80">1LL</literal><operator pos:start="19:81" pos:end="19:82">&lt;&lt;</operator><name pos:start="19:83" pos:end="19:99"><name pos:start="19:83" pos:end="19:84">st</name><operator pos:start="19:85" pos:end="19:86">-&gt;</operator><name pos:start="19:87" pos:end="19:99">pts_wrap_bits</name></name><operator pos:start="19:100" pos:end="19:100">-</operator><literal type="number" pos:start="19:101" pos:end="19:101">3</literal><operator pos:start="19:102" pos:end="19:102">)</operator><operator pos:start="19:103" pos:end="19:103">)</operator> <operator pos:start="19:105" pos:end="19:106">||</operator>

            <operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:26"><name pos:start="21:14" pos:end="21:15">st</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:26">first_dts</name></name> <operator pos:start="21:28" pos:end="21:28">&lt;</operator> <operator pos:start="21:30" pos:end="21:30">(</operator><literal type="number" pos:start="21:31" pos:end="21:33">1LL</literal><operator pos:start="21:34" pos:end="21:35">&lt;&lt;</operator><name pos:start="21:36" pos:end="21:52"><name pos:start="21:36" pos:end="21:37">st</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:52">pts_wrap_bits</name></name><operator pos:start="21:53" pos:end="21:53">)</operator> <operator pos:start="21:55" pos:end="21:55">-</operator> <call pos:start="21:57" pos:end="21:108"><name pos:start="21:57" pos:end="21:66">av_rescale</name><argument_list pos:start="21:67" pos:end="21:108">(<argument pos:start="21:68" pos:end="21:69"><expr pos:start="21:68" pos:end="21:69"><literal type="number" pos:start="21:68" pos:end="21:69">60</literal></expr></argument>, <argument pos:start="21:72" pos:end="21:88"><expr pos:start="21:72" pos:end="21:88"><name pos:start="21:72" pos:end="21:88"><name pos:start="21:72" pos:end="21:73">st</name><operator pos:start="21:74" pos:end="21:75">-&gt;</operator><name pos:start="21:76" pos:end="21:84">time_base</name><operator pos:start="21:85" pos:end="21:85">.</operator><name pos:start="21:86" pos:end="21:88">den</name></name></expr></argument>, <argument pos:start="21:91" pos:end="21:107"><expr pos:start="21:91" pos:end="21:107"><name pos:start="21:91" pos:end="21:107"><name pos:start="21:91" pos:end="21:92">st</name><operator pos:start="21:93" pos:end="21:94">-&gt;</operator><name pos:start="21:95" pos:end="21:103">time_base</name><operator pos:start="21:104" pos:end="21:104">.</operator><name pos:start="21:105" pos:end="21:107">num</name></name></expr></argument>)</argument_list></call><operator pos:start="21:109" pos:end="21:109">)</operator></expr> ?</condition><then pos:start="23:13" pos:end="23:34">

            <expr pos:start="23:13" pos:end="23:34"><name pos:start="23:13" pos:end="23:34">AV_PTS_WRAP_ADD_OFFSET</name></expr> </then><else pos:start="23:36" pos:end="23:59">: <expr pos:start="23:38" pos:end="23:59"><name pos:start="23:38" pos:end="23:59">AV_PTS_WRAP_SUB_OFFSET</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <decl_stmt pos:start="27:9" pos:end="27:86"><decl pos:start="27:9" pos:end="27:85"><type pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:17">AVProgram</name> <modifier pos:start="27:19" pos:end="27:19">*</modifier></type><name pos:start="27:20" pos:end="27:32">first_program</name> <init pos:start="27:34" pos:end="27:85">= <expr pos:start="27:36" pos:end="27:85"><call pos:start="27:36" pos:end="27:85"><name pos:start="27:36" pos:end="27:62">av_find_program_from_stream</name><argument_list pos:start="27:63" pos:end="27:85">(<argument pos:start="27:64" pos:end="27:64"><expr pos:start="27:64" pos:end="27:64"><name pos:start="27:64" pos:end="27:64">s</name></expr></argument>, <argument pos:start="27:67" pos:end="27:70"><expr pos:start="27:67" pos:end="27:70"><name pos:start="27:67" pos:end="27:70">NULL</name></expr></argument>, <argument pos:start="27:73" pos:end="27:84"><expr pos:start="27:73" pos:end="27:84"><name pos:start="27:73" pos:end="27:84">stream_index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="31:9" pos:end="107:9"><if pos:start="31:9" pos:end="55:9">if <condition pos:start="31:12" pos:end="31:27">(<expr pos:start="31:13" pos:end="31:26"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:26">first_program</name></expr>)</condition> <block pos:start="31:29" pos:end="55:9">{<block_content pos:start="33:13" pos:end="53:13">

            <decl_stmt pos:start="33:13" pos:end="33:71"><decl pos:start="33:13" pos:end="33:70"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:36">default_stream_index</name> <init pos:start="33:38" pos:end="33:70">= <expr pos:start="33:40" pos:end="33:70"><call pos:start="33:40" pos:end="33:70"><name pos:start="33:40" pos:end="33:67">av_find_default_stream_index</name><argument_list pos:start="33:68" pos:end="33:70">(<argument pos:start="33:69" pos:end="33:69"><expr pos:start="33:69" pos:end="33:69"><name pos:start="33:69" pos:end="33:69">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="35:13" pos:end="53:13"><if pos:start="35:13" pos:end="45:13">if <condition pos:start="35:16" pos:end="35:87">(<expr pos:start="35:17" pos:end="35:86"><name pos:start="35:17" pos:end="35:48"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:26">streams</name><index pos:start="35:27" pos:end="35:48">[<expr pos:start="35:28" pos:end="35:47"><name pos:start="35:28" pos:end="35:47">default_stream_index</name></expr>]</index></name><operator pos:start="35:49" pos:end="35:50">-&gt;</operator><name pos:start="35:51" pos:end="35:68">pts_wrap_reference</name> <operator pos:start="35:70" pos:end="35:71">==</operator> <name pos:start="35:73" pos:end="35:86">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="35:89" pos:end="45:13">{<block_content pos:start="37:17" pos:end="43:17">

                <for pos:start="37:17" pos:end="43:17">for <control pos:start="37:21" pos:end="37:47">(<init pos:start="37:22" pos:end="37:25"><expr pos:start="37:22" pos:end="37:24"><name pos:start="37:22" pos:end="37:22">i</name><operator pos:start="37:23" pos:end="37:23">=</operator><literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr>;</init> <condition pos:start="37:27" pos:end="37:42"><expr pos:start="37:27" pos:end="37:41"><name pos:start="37:27" pos:end="37:27">i</name><operator pos:start="37:28" pos:end="37:28">&lt;</operator><name pos:start="37:29" pos:end="37:41"><name pos:start="37:29" pos:end="37:29">s</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:41">nb_streams</name></name></expr>;</condition> <incr pos:start="37:44" pos:end="37:46"><expr pos:start="37:44" pos:end="37:46"><name pos:start="37:44" pos:end="37:44">i</name><operator pos:start="37:45" pos:end="37:46">++</operator></expr></incr>)</control> <block pos:start="37:49" pos:end="43:17">{<block_content pos:start="39:21" pos:end="41:73">

                    <expr_stmt pos:start="39:21" pos:end="39:75"><expr pos:start="39:21" pos:end="39:74"><name pos:start="39:21" pos:end="39:33"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:30">streams</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">i</name></expr>]</index></name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:53">pts_wrap_reference</name> <operator pos:start="39:55" pos:end="39:55">=</operator> <name pos:start="39:57" pos:end="39:74">pts_wrap_reference</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="41:21" pos:end="41:73"><expr pos:start="41:21" pos:end="41:72"><name pos:start="41:21" pos:end="41:33"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:30">streams</name><index pos:start="41:31" pos:end="41:33">[<expr pos:start="41:32" pos:end="41:32"><name pos:start="41:32" pos:end="41:32">i</name></expr>]</index></name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:52">pts_wrap_behavior</name> <operator pos:start="41:54" pos:end="41:54">=</operator> <name pos:start="41:56" pos:end="41:72">pts_wrap_behavior</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if>

            <else pos:start="47:13" pos:end="53:13">else <block pos:start="47:18" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:92">

                <expr_stmt pos:start="49:17" pos:end="49:94"><expr pos:start="49:17" pos:end="49:93"><name pos:start="49:17" pos:end="49:38"><name pos:start="49:17" pos:end="49:18">st</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:38">pts_wrap_reference</name></name> <operator pos:start="49:40" pos:end="49:40">=</operator> <name pos:start="49:42" pos:end="49:73"><name pos:start="49:42" pos:end="49:42">s</name><operator pos:start="49:43" pos:end="49:44">-&gt;</operator><name pos:start="49:45" pos:end="49:51">streams</name><index pos:start="49:52" pos:end="49:73">[<expr pos:start="49:53" pos:end="49:72"><name pos:start="49:53" pos:end="49:72">default_stream_index</name></expr>]</index></name><operator pos:start="49:74" pos:end="49:75">-&gt;</operator><name pos:start="49:76" pos:end="49:93">pts_wrap_reference</name></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:92"><expr pos:start="51:17" pos:end="51:91"><name pos:start="51:17" pos:end="51:37"><name pos:start="51:17" pos:end="51:18">st</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:37">pts_wrap_behavior</name></name> <operator pos:start="51:39" pos:end="51:39">=</operator> <name pos:start="51:41" pos:end="51:72"><name pos:start="51:41" pos:end="51:41">s</name><operator pos:start="51:42" pos:end="51:43">-&gt;</operator><name pos:start="51:44" pos:end="51:50">streams</name><index pos:start="51:51" pos:end="51:72">[<expr pos:start="51:52" pos:end="51:71"><name pos:start="51:52" pos:end="51:71">default_stream_index</name></expr>]</index></name><operator pos:start="51:73" pos:end="51:74">-&gt;</operator><name pos:start="51:75" pos:end="51:91">pts_wrap_behavior</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if>

        <else pos:start="57:9" pos:end="107:9">else <block pos:start="57:14" pos:end="107:9">{<block_content pos:start="59:13" pos:end="105:13">

            <decl_stmt pos:start="59:13" pos:end="59:47"><decl pos:start="59:13" pos:end="59:46"><type pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:21">AVProgram</name> <modifier pos:start="59:23" pos:end="59:23">*</modifier></type><name pos:start="59:24" pos:end="59:30">program</name> <init pos:start="59:32" pos:end="59:46">= <expr pos:start="59:34" pos:end="59:46"><name pos:start="59:34" pos:end="59:46">first_program</name></expr></init></decl>;</decl_stmt>

            <while pos:start="61:13" pos:end="75:13">while <condition pos:start="61:19" pos:end="61:27">(<expr pos:start="61:20" pos:end="61:26"><name pos:start="61:20" pos:end="61:26">program</name></expr>)</condition> <block pos:start="61:29" pos:end="75:13">{<block_content pos:start="63:17" pos:end="73:80">

                <if_stmt pos:start="63:17" pos:end="71:17"><if pos:start="63:17" pos:end="71:17">if <condition pos:start="63:20" pos:end="63:66">(<expr pos:start="63:21" pos:end="63:65"><name pos:start="63:21" pos:end="63:47"><name pos:start="63:21" pos:end="63:27">program</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:47">pts_wrap_reference</name></name> <operator pos:start="63:49" pos:end="63:50">!=</operator> <name pos:start="63:52" pos:end="63:65">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="63:68" pos:end="71:17">{<block_content pos:start="65:21" pos:end="69:26">

                    <expr_stmt pos:start="65:21" pos:end="65:69"><expr pos:start="65:21" pos:end="65:68"><name pos:start="65:21" pos:end="65:38">pts_wrap_reference</name> <operator pos:start="65:40" pos:end="65:40">=</operator> <name pos:start="65:42" pos:end="65:68"><name pos:start="65:42" pos:end="65:48">program</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:68">pts_wrap_reference</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="67:21" pos:end="67:67"><expr pos:start="67:21" pos:end="67:66"><name pos:start="67:21" pos:end="67:37">pts_wrap_behavior</name> <operator pos:start="67:39" pos:end="67:39">=</operator> <name pos:start="67:41" pos:end="67:66"><name pos:start="67:41" pos:end="67:47">program</name><operator pos:start="67:48" pos:end="67:49">-&gt;</operator><name pos:start="67:50" pos:end="67:66">pts_wrap_behavior</name></name></expr>;</expr_stmt>

                    <break pos:start="69:21" pos:end="69:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:80"><expr pos:start="73:17" pos:end="73:79"><name pos:start="73:17" pos:end="73:23">program</name> <operator pos:start="73:25" pos:end="73:25">=</operator> <call pos:start="73:27" pos:end="73:79"><name pos:start="73:27" pos:end="73:53">av_find_program_from_stream</name><argument_list pos:start="73:54" pos:end="73:79">(<argument pos:start="73:55" pos:end="73:55"><expr pos:start="73:55" pos:end="73:55"><name pos:start="73:55" pos:end="73:55">s</name></expr></argument>, <argument pos:start="73:58" pos:end="73:64"><expr pos:start="73:58" pos:end="73:64"><name pos:start="73:58" pos:end="73:64">program</name></expr></argument>, <argument pos:start="73:67" pos:end="73:78"><expr pos:start="73:67" pos:end="73:78"><name pos:start="73:67" pos:end="73:78">stream_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>



            <comment type="line" pos:start="79:13" pos:end="79:69">// update every program with differing pts_wrap_reference</comment>

            <expr_stmt pos:start="81:13" pos:end="81:36"><expr pos:start="81:13" pos:end="81:35"><name pos:start="81:13" pos:end="81:19">program</name> <operator pos:start="81:21" pos:end="81:21">=</operator> <name pos:start="81:23" pos:end="81:35">first_program</name></expr>;</expr_stmt>

            <while pos:start="83:13" pos:end="105:13">while<condition pos:start="83:18" pos:end="83:26">(<expr pos:start="83:19" pos:end="83:25"><name pos:start="83:19" pos:end="83:25">program</name></expr>)</condition> <block pos:start="83:28" pos:end="105:13">{<block_content pos:start="85:17" pos:end="103:80">

                <if_stmt pos:start="85:17" pos:end="101:17"><if pos:start="85:17" pos:end="101:17">if <condition pos:start="85:20" pos:end="85:70">(<expr pos:start="85:21" pos:end="85:69"><name pos:start="85:21" pos:end="85:47"><name pos:start="85:21" pos:end="85:27">program</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:47">pts_wrap_reference</name></name> <operator pos:start="85:49" pos:end="85:50">!=</operator> <name pos:start="85:52" pos:end="85:69">pts_wrap_reference</name></expr>)</condition> <block pos:start="85:72" pos:end="101:17">{<block_content pos:start="87:21" pos:end="99:67">

                    <for pos:start="87:21" pos:end="93:21">for <control pos:start="87:25" pos:end="87:64">(<init pos:start="87:26" pos:end="87:29"><expr pos:start="87:26" pos:end="87:28"><name pos:start="87:26" pos:end="87:26">i</name><operator pos:start="87:27" pos:end="87:27">=</operator><literal type="number" pos:start="87:28" pos:end="87:28">0</literal></expr>;</init> <condition pos:start="87:31" pos:end="87:59"><expr pos:start="87:31" pos:end="87:58"><name pos:start="87:31" pos:end="87:31">i</name><operator pos:start="87:32" pos:end="87:32">&lt;</operator><name pos:start="87:33" pos:end="87:58"><name pos:start="87:33" pos:end="87:39">program</name><operator pos:start="87:40" pos:end="87:41">-&gt;</operator><name pos:start="87:42" pos:end="87:58">nb_stream_indexes</name></name></expr>;</condition> <incr pos:start="87:61" pos:end="87:63"><expr pos:start="87:61" pos:end="87:63"><name pos:start="87:61" pos:end="87:61">i</name><operator pos:start="87:62" pos:end="87:63">++</operator></expr></incr>)</control> <block pos:start="87:66" pos:end="93:21">{<block_content pos:start="89:25" pos:end="91:100">

                        <expr_stmt pos:start="89:25" pos:end="89:102"><expr pos:start="89:25" pos:end="89:101"><name pos:start="89:25" pos:end="89:60"><name pos:start="89:25" pos:end="89:25">s</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:34">streams</name><index pos:start="89:35" pos:end="89:60">[<expr pos:start="89:36" pos:end="89:59"><name pos:start="89:36" pos:end="89:59"><name pos:start="89:36" pos:end="89:42">program</name><operator pos:start="89:43" pos:end="89:44">-&gt;</operator><name pos:start="89:45" pos:end="89:56">stream_index</name><index pos:start="89:57" pos:end="89:59">[<expr pos:start="89:58" pos:end="89:58"><name pos:start="89:58" pos:end="89:58">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="89:61" pos:end="89:62">-&gt;</operator><name pos:start="89:63" pos:end="89:80">pts_wrap_reference</name> <operator pos:start="89:82" pos:end="89:82">=</operator> <name pos:start="89:84" pos:end="89:101">pts_wrap_reference</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="91:25" pos:end="91:100"><expr pos:start="91:25" pos:end="91:99"><name pos:start="91:25" pos:end="91:60"><name pos:start="91:25" pos:end="91:25">s</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:34">streams</name><index pos:start="91:35" pos:end="91:60">[<expr pos:start="91:36" pos:end="91:59"><name pos:start="91:36" pos:end="91:59"><name pos:start="91:36" pos:end="91:42">program</name><operator pos:start="91:43" pos:end="91:44">-&gt;</operator><name pos:start="91:45" pos:end="91:56">stream_index</name><index pos:start="91:57" pos:end="91:59">[<expr pos:start="91:58" pos:end="91:58"><name pos:start="91:58" pos:end="91:58">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="91:61" pos:end="91:62">-&gt;</operator><name pos:start="91:63" pos:end="91:79">pts_wrap_behavior</name> <operator pos:start="91:81" pos:end="91:81">=</operator> <name pos:start="91:83" pos:end="91:99">pts_wrap_behavior</name></expr>;</expr_stmt>

                    </block_content>}</block></for>



                    <expr_stmt pos:start="97:21" pos:end="97:69"><expr pos:start="97:21" pos:end="97:68"><name pos:start="97:21" pos:end="97:47"><name pos:start="97:21" pos:end="97:27">program</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:47">pts_wrap_reference</name></name> <operator pos:start="97:49" pos:end="97:49">=</operator> <name pos:start="97:51" pos:end="97:68">pts_wrap_reference</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="99:67"><expr pos:start="99:21" pos:end="99:66"><name pos:start="99:21" pos:end="99:46"><name pos:start="99:21" pos:end="99:27">program</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:46">pts_wrap_behavior</name></name> <operator pos:start="99:48" pos:end="99:48">=</operator> <name pos:start="99:50" pos:end="99:66">pts_wrap_behavior</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:80"><expr pos:start="103:17" pos:end="103:79"><name pos:start="103:17" pos:end="103:23">program</name> <operator pos:start="103:25" pos:end="103:25">=</operator> <call pos:start="103:27" pos:end="103:79"><name pos:start="103:27" pos:end="103:53">av_find_program_from_stream</name><argument_list pos:start="103:54" pos:end="103:79">(<argument pos:start="103:55" pos:end="103:55"><expr pos:start="103:55" pos:end="103:55"><name pos:start="103:55" pos:end="103:55">s</name></expr></argument>, <argument pos:start="103:58" pos:end="103:64"><expr pos:start="103:58" pos:end="103:64"><name pos:start="103:58" pos:end="103:64">program</name></expr></argument>, <argument pos:start="103:67" pos:end="103:78"><expr pos:start="103:67" pos:end="103:78"><name pos:start="103:67" pos:end="103:78">stream_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>

        </block_content>}</block></else></if_stmt>

        <return pos:start="109:9" pos:end="109:17">return <expr pos:start="109:16" pos:end="109:16"><literal type="number" pos:start="109:16" pos:end="109:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="113:5" pos:end="113:13">return <expr pos:start="113:12" pos:end="113:12"><literal type="number" pos:start="113:12" pos:end="113:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
