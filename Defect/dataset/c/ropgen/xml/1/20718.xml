<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20718.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mov_write_trailer</name><parameter_list pos:start="1:29" pos:end="1:48">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:15">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MOVMuxContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">mov</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">res</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:20">moov_pos</name> <init pos:start="15:22" pos:end="15:36">= <expr pos:start="15:24" pos:end="15:36"><call pos:start="15:24" pos:end="15:36"><name pos:start="15:24" pos:end="15:32">avio_tell</name><argument_list pos:start="15:33" pos:end="15:36">(<argument pos:start="15:34" pos:end="15:35"><expr pos:start="15:34" pos:end="15:35"><name pos:start="15:34" pos:end="15:35">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="83:5"><if pos:start="19:5" pos:end="77:5">if <condition pos:start="19:8" pos:end="19:45">(<expr pos:start="19:9" pos:end="19:44"><operator pos:start="19:9" pos:end="19:9">!</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:20"><name pos:start="19:11" pos:end="19:13">mov</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:20">flags</name></name> <operator pos:start="19:22" pos:end="19:22">&amp;</operator> <name pos:start="19:24" pos:end="19:43">FF_MOV_FLAG_FRAGMENT</name><operator pos:start="19:44" pos:end="19:44">)</operator></expr>)</condition> <block pos:start="19:47" pos:end="77:5">{<block_content pos:start="23:9" pos:end="75:9">

        <comment type="block" pos:start="21:9" pos:end="21:36">/* Write size of mdat tag */</comment>

        <if_stmt pos:start="23:9" pos:end="45:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:45">(<expr pos:start="23:13" pos:end="23:44"><name pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:15">mov</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:26">mdat_size</name></name> <operator pos:start="23:28" pos:end="23:28">+</operator> <literal type="number" pos:start="23:30" pos:end="23:30">8</literal> <operator pos:start="23:32" pos:end="23:33">&lt;=</operator> <name pos:start="23:35" pos:end="23:44">UINT32_MAX</name></expr>)</condition> <block pos:start="23:47" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:46">

            <expr_stmt pos:start="25:13" pos:end="25:51"><expr pos:start="25:13" pos:end="25:50"><call pos:start="25:13" pos:end="25:50"><name pos:start="25:13" pos:end="25:21">avio_seek</name><argument_list pos:start="25:22" pos:end="25:50">(<argument pos:start="25:23" pos:end="25:24"><expr pos:start="25:23" pos:end="25:24"><name pos:start="25:23" pos:end="25:24">pb</name></expr></argument>, <argument pos:start="25:27" pos:end="25:39"><expr pos:start="25:27" pos:end="25:39"><name pos:start="25:27" pos:end="25:39"><name pos:start="25:27" pos:end="25:29">mov</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:39">mdat_pos</name></name></expr></argument>, <argument pos:start="25:42" pos:end="25:49"><expr pos:start="25:42" pos:end="25:49"><name pos:start="25:42" pos:end="25:49">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:46"><expr pos:start="27:13" pos:end="27:45"><call pos:start="27:13" pos:end="27:45"><name pos:start="27:13" pos:end="27:21">avio_wb32</name><argument_list pos:start="27:22" pos:end="27:45">(<argument pos:start="27:23" pos:end="27:24"><expr pos:start="27:23" pos:end="27:24"><name pos:start="27:23" pos:end="27:24">pb</name></expr></argument>, <argument pos:start="27:27" pos:end="27:44"><expr pos:start="27:27" pos:end="27:44"><name pos:start="27:27" pos:end="27:40"><name pos:start="27:27" pos:end="27:29">mov</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:40">mdat_size</name></name> <operator pos:start="27:42" pos:end="27:42">+</operator> <literal type="number" pos:start="27:44" pos:end="27:44">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="45:9">else <block pos:start="29:16" pos:end="45:9">{<block_content pos:start="33:13" pos:end="43:47">

            <comment type="block" pos:start="31:13" pos:end="31:51">/* overwrite 'wide' placeholder atom */</comment>

            <expr_stmt pos:start="33:13" pos:end="33:55"><expr pos:start="33:13" pos:end="33:54"><call pos:start="33:13" pos:end="33:54"><name pos:start="33:13" pos:end="33:21">avio_seek</name><argument_list pos:start="33:22" pos:end="33:54">(<argument pos:start="33:23" pos:end="33:24"><expr pos:start="33:23" pos:end="33:24"><name pos:start="33:23" pos:end="33:24">pb</name></expr></argument>, <argument pos:start="33:27" pos:end="33:43"><expr pos:start="33:27" pos:end="33:43"><name pos:start="33:27" pos:end="33:39"><name pos:start="33:27" pos:end="33:29">mov</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:39">mdat_pos</name></name> <operator pos:start="33:41" pos:end="33:41">-</operator> <literal type="number" pos:start="33:43" pos:end="33:43">8</literal></expr></argument>, <argument pos:start="33:46" pos:end="33:53"><expr pos:start="33:46" pos:end="33:53"><name pos:start="33:46" pos:end="33:53">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="35:13" pos:end="37:27">/* special value: real atom size will be 64 bit value after

             * tag field */</comment>

            <expr_stmt pos:start="39:13" pos:end="39:29"><expr pos:start="39:13" pos:end="39:28"><call pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:21">avio_wb32</name><argument_list pos:start="39:22" pos:end="39:28">(<argument pos:start="39:23" pos:end="39:24"><expr pos:start="39:23" pos:end="39:24"><name pos:start="39:23" pos:end="39:24">pb</name></expr></argument>, <argument pos:start="39:27" pos:end="39:27"><expr pos:start="39:27" pos:end="39:27"><literal type="number" pos:start="39:27" pos:end="39:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:37"><expr pos:start="41:13" pos:end="41:36"><call pos:start="41:13" pos:end="41:36"><name pos:start="41:13" pos:end="41:24">ffio_wfourcc</name><argument_list pos:start="41:25" pos:end="41:36">(<argument pos:start="41:26" pos:end="41:27"><expr pos:start="41:26" pos:end="41:27"><name pos:start="41:26" pos:end="41:27">pb</name></expr></argument>, <argument pos:start="41:30" pos:end="41:35"><expr pos:start="41:30" pos:end="41:35"><literal type="string" pos:start="41:30" pos:end="41:35">"mdat"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:47"><expr pos:start="43:13" pos:end="43:46"><call pos:start="43:13" pos:end="43:46"><name pos:start="43:13" pos:end="43:21">avio_wb64</name><argument_list pos:start="43:22" pos:end="43:46">(<argument pos:start="43:23" pos:end="43:24"><expr pos:start="43:23" pos:end="43:24"><name pos:start="43:23" pos:end="43:24">pb</name></expr></argument>, <argument pos:start="43:27" pos:end="43:45"><expr pos:start="43:27" pos:end="43:45"><name pos:start="43:27" pos:end="43:40"><name pos:start="43:27" pos:end="43:29">mov</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:40">mdat_size</name></name> <operator pos:start="43:42" pos:end="43:42">+</operator> <literal type="number" pos:start="43:44" pos:end="43:45">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:93"><expr pos:start="47:9" pos:end="47:92"><call pos:start="47:9" pos:end="47:92"><name pos:start="47:9" pos:end="47:17">avio_seek</name><argument_list pos:start="47:18" pos:end="47:92">(<argument pos:start="47:19" pos:end="47:20"><expr pos:start="47:19" pos:end="47:20"><name pos:start="47:19" pos:end="47:20">pb</name></expr></argument>, <argument pos:start="47:23" pos:end="47:81"><expr pos:start="47:23" pos:end="47:81"><ternary pos:start="47:23" pos:end="47:81"><condition pos:start="47:23" pos:end="47:47"><expr pos:start="47:23" pos:end="47:45"><name pos:start="47:23" pos:end="47:45"><name pos:start="47:23" pos:end="47:25">mov</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:45">reserved_moov_size</name></name></expr> ?</condition><then pos:start="47:49" pos:end="47:70"> <expr pos:start="47:49" pos:end="47:70"><name pos:start="47:49" pos:end="47:70"><name pos:start="47:49" pos:end="47:51">mov</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:70">reserved_moov_pos</name></name></expr> </then><else pos:start="47:72" pos:end="47:81">: <expr pos:start="47:74" pos:end="47:81"><name pos:start="47:74" pos:end="47:81">moov_pos</name></expr></else></ternary></expr></argument>, <argument pos:start="47:84" pos:end="47:91"><expr pos:start="47:84" pos:end="47:91"><name pos:start="47:84" pos:end="47:91">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:39"><expr pos:start="51:9" pos:end="51:38"><call pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:26">mov_write_moov_tag</name><argument_list pos:start="51:27" pos:end="51:38">(<argument pos:start="51:28" pos:end="51:29"><expr pos:start="51:28" pos:end="51:29"><name pos:start="51:28" pos:end="51:29">pb</name></expr></argument>, <argument pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:34">mov</name></expr></argument>, <argument pos:start="51:37" pos:end="51:37"><expr pos:start="51:37" pos:end="51:37"><name pos:start="51:37" pos:end="51:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="75:9"><if pos:start="53:9" pos:end="75:9">if<condition pos:start="53:11" pos:end="53:35">(<expr pos:start="53:12" pos:end="53:34"><name pos:start="53:12" pos:end="53:34"><name pos:start="53:12" pos:end="53:14">mov</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:34">reserved_moov_size</name></name></expr>)</condition><block pos:start="53:36" pos:end="75:9">{<block_content pos:start="55:13" pos:end="73:46">

            <decl_stmt pos:start="55:13" pos:end="55:94"><decl pos:start="55:13" pos:end="55:93"><type pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:19">int64_t</name></type> <name pos:start="55:21" pos:end="55:24">size</name><init pos:start="55:25" pos:end="55:93">=  <expr pos:start="55:28" pos:end="55:93"><name pos:start="55:28" pos:end="55:50"><name pos:start="55:28" pos:end="55:30">mov</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:50">reserved_moov_size</name></name> <operator pos:start="55:52" pos:end="55:52">-</operator> <operator pos:start="55:54" pos:end="55:54">(</operator><call pos:start="55:55" pos:end="55:67"><name pos:start="55:55" pos:end="55:63">avio_tell</name><argument_list pos:start="55:64" pos:end="55:67">(<argument pos:start="55:65" pos:end="55:66"><expr pos:start="55:65" pos:end="55:66"><name pos:start="55:65" pos:end="55:66">pb</name></expr></argument>)</argument_list></call> <operator pos:start="55:69" pos:end="55:69">-</operator> <name pos:start="55:71" pos:end="55:92"><name pos:start="55:71" pos:end="55:73">mov</name><operator pos:start="55:74" pos:end="55:75">-&gt;</operator><name pos:start="55:76" pos:end="55:92">reserved_moov_pos</name></name><operator pos:start="55:93" pos:end="55:93">)</operator></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="57:13" pos:end="63:13"><if pos:start="57:13" pos:end="63:13">if<condition pos:start="57:15" pos:end="57:24">(<expr pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:19">size</name> <operator pos:start="57:21" pos:end="57:21">&lt;</operator> <literal type="number" pos:start="57:23" pos:end="57:23">8</literal></expr>)</condition><block pos:start="57:25" pos:end="63:13">{<block_content pos:start="59:17" pos:end="61:26">

                <expr_stmt pos:start="59:17" pos:end="59:114"><expr pos:start="59:17" pos:end="59:113"><call pos:start="59:17" pos:end="59:113"><name pos:start="59:17" pos:end="59:22">av_log</name><argument_list pos:start="59:23" pos:end="59:113">(<argument pos:start="59:24" pos:end="59:24"><expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">s</name></expr></argument>, <argument pos:start="59:27" pos:end="59:38"><expr pos:start="59:27" pos:end="59:38"><name pos:start="59:27" pos:end="59:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:41" pos:end="59:104"><expr pos:start="59:41" pos:end="59:104"><literal type="string" pos:start="59:41" pos:end="59:83">"reserved_moov_size is too small, needed %"</literal><name pos:start="59:84" pos:end="59:89">PRId64</name><literal type="string" pos:start="59:90" pos:end="59:104">" additional\n"</literal></expr></argument>, <argument pos:start="59:107" pos:end="59:112"><expr pos:start="59:107" pos:end="59:112"><literal type="number" pos:start="59:107" pos:end="59:108">8</literal><operator pos:start="59:108" pos:end="59:108">-</operator><name pos:start="59:109" pos:end="59:112">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="61:17" pos:end="61:26">return <expr pos:start="61:24" pos:end="61:25"><operator pos:start="61:24" pos:end="61:24">-</operator><literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:32"><expr pos:start="65:13" pos:end="65:31"><call pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:21">avio_wb32</name><argument_list pos:start="65:22" pos:end="65:31">(<argument pos:start="65:23" pos:end="65:24"><expr pos:start="65:23" pos:end="65:24"><name pos:start="65:23" pos:end="65:24">pb</name></expr></argument>, <argument pos:start="65:27" pos:end="65:30"><expr pos:start="65:27" pos:end="65:30"><name pos:start="65:27" pos:end="65:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:37"><expr pos:start="67:13" pos:end="67:36"><call pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:24">ffio_wfourcc</name><argument_list pos:start="67:25" pos:end="67:36">(<argument pos:start="67:26" pos:end="67:27"><expr pos:start="67:26" pos:end="67:27"><name pos:start="67:26" pos:end="67:27">pb</name></expr></argument>, <argument pos:start="67:30" pos:end="67:35"><expr pos:start="67:30" pos:end="67:35"><literal type="string" pos:start="67:30" pos:end="67:35">"free"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="69:13" pos:end="71:31">for<control pos:start="69:16" pos:end="69:33">(<init pos:start="69:17" pos:end="69:20"><expr pos:start="69:17" pos:end="69:19"><name pos:start="69:17" pos:end="69:17">i</name><operator pos:start="69:18" pos:end="69:18">=</operator><literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr>;</init> <condition pos:start="69:22" pos:end="69:28"><expr pos:start="69:22" pos:end="69:27"><name pos:start="69:22" pos:end="69:22">i</name><operator pos:start="69:23" pos:end="69:23">&lt;</operator><name pos:start="69:24" pos:end="69:27">size</name></expr>;</condition> <incr pos:start="69:30" pos:end="69:32"><expr pos:start="69:30" pos:end="69:32"><name pos:start="69:30" pos:end="69:30">i</name><operator pos:start="69:31" pos:end="69:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="71:17" pos:end="71:31"><block_content pos:start="71:17" pos:end="71:31">

                <expr_stmt pos:start="71:17" pos:end="71:31"><expr pos:start="71:17" pos:end="71:30"><call pos:start="71:17" pos:end="71:30"><name pos:start="71:17" pos:end="71:23">avio_w8</name><argument_list pos:start="71:24" pos:end="71:30">(<argument pos:start="71:25" pos:end="71:26"><expr pos:start="71:25" pos:end="71:26"><name pos:start="71:25" pos:end="71:26">pb</name></expr></argument>, <argument pos:start="71:29" pos:end="71:29"><expr pos:start="71:29" pos:end="71:29"><literal type="number" pos:start="71:29" pos:end="71:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="73:13" pos:end="73:46"><expr pos:start="73:13" pos:end="73:45"><call pos:start="73:13" pos:end="73:45"><name pos:start="73:13" pos:end="73:21">avio_seek</name><argument_list pos:start="73:22" pos:end="73:45">(<argument pos:start="73:23" pos:end="73:24"><expr pos:start="73:23" pos:end="73:24"><name pos:start="73:23" pos:end="73:24">pb</name></expr></argument>, <argument pos:start="73:27" pos:end="73:34"><expr pos:start="73:27" pos:end="73:34"><name pos:start="73:27" pos:end="73:34">moov_pos</name></expr></argument>, <argument pos:start="73:37" pos:end="73:44"><expr pos:start="73:37" pos:end="73:44"><name pos:start="73:37" pos:end="73:44">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="83:5">else <block pos:start="77:12" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:36">

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><call pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:26">mov_flush_fragment</name><argument_list pos:start="79:27" pos:end="79:29">(<argument pos:start="79:28" pos:end="79:28"><expr pos:start="79:28" pos:end="79:28"><name pos:start="79:28" pos:end="79:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:36"><expr pos:start="81:9" pos:end="81:35"><call pos:start="81:9" pos:end="81:35"><name pos:start="81:9" pos:end="81:26">mov_write_mfra_tag</name><argument_list pos:start="81:27" pos:end="81:35">(<argument pos:start="81:28" pos:end="81:29"><expr pos:start="81:28" pos:end="81:29"><name pos:start="81:28" pos:end="81:29">pb</name></expr></argument>, <argument pos:start="81:32" pos:end="81:34"><expr pos:start="81:32" pos:end="81:34"><name pos:start="81:32" pos:end="81:34">mov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="87:5" pos:end="89:55"><if pos:start="87:5" pos:end="89:55">if <condition pos:start="87:8" pos:end="87:27">(<expr pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:11">mov</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:26">chapter_track</name></name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:55"><block_content pos:start="89:9" pos:end="89:55">

        <expr_stmt pos:start="89:9" pos:end="89:55"><expr pos:start="89:9" pos:end="89:54"><call pos:start="89:9" pos:end="89:54"><name pos:start="89:9" pos:end="89:16">av_freep</name><argument_list pos:start="89:17" pos:end="89:54">(<argument pos:start="89:18" pos:end="89:53"><expr pos:start="89:18" pos:end="89:53"><operator pos:start="89:18" pos:end="89:18">&amp;</operator><name pos:start="89:19" pos:end="89:49"><name pos:start="89:19" pos:end="89:21">mov</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:29">tracks</name><index pos:start="89:30" pos:end="89:49">[<expr pos:start="89:31" pos:end="89:48"><name pos:start="89:31" pos:end="89:48"><name pos:start="89:31" pos:end="89:33">mov</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:48">chapter_track</name></name></expr>]</index></name><operator pos:start="89:50" pos:end="89:50">.</operator><name pos:start="89:51" pos:end="89:53">enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="93:5" pos:end="135:5">for <control pos:start="93:9" pos:end="93:37">(<init pos:start="93:10" pos:end="93:13"><expr pos:start="93:10" pos:end="93:12"><name pos:start="93:10" pos:end="93:10">i</name><operator pos:start="93:11" pos:end="93:11">=</operator><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</init> <condition pos:start="93:15" pos:end="93:32"><expr pos:start="93:15" pos:end="93:31"><name pos:start="93:15" pos:end="93:15">i</name><operator pos:start="93:16" pos:end="93:16">&lt;</operator><name pos:start="93:17" pos:end="93:31"><name pos:start="93:17" pos:end="93:19">mov</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:31">nb_streams</name></name></expr>;</condition> <incr pos:start="93:34" pos:end="93:36"><expr pos:start="93:34" pos:end="93:36"><name pos:start="93:34" pos:end="93:34">i</name><operator pos:start="93:35" pos:end="93:36">++</operator></expr></incr>)</control> <block pos:start="93:39" pos:end="135:5">{<block_content pos:start="95:9" pos:end="131:45">

        <if_stmt pos:start="95:9" pos:end="101:42"><if pos:start="95:9" pos:end="97:50">if <condition pos:start="95:12" pos:end="95:57">(<expr pos:start="95:13" pos:end="95:56"><name pos:start="95:13" pos:end="95:26"><name pos:start="95:13" pos:end="95:15">mov</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:23">tracks</name><index pos:start="95:24" pos:end="95:26">[<expr pos:start="95:25" pos:end="95:25"><name pos:start="95:25" pos:end="95:25">i</name></expr>]</index></name><operator pos:start="95:27" pos:end="95:27">.</operator><name pos:start="95:28" pos:end="95:30">tag</name> <operator pos:start="95:32" pos:end="95:33">==</operator> <call pos:start="95:35" pos:end="95:56"><name pos:start="95:35" pos:end="95:39">MKTAG</name><argument_list pos:start="95:40" pos:end="95:56">(<argument pos:start="95:41" pos:end="95:43"><expr pos:start="95:41" pos:end="95:43"><literal type="char" pos:start="95:41" pos:end="95:43">'r'</literal></expr></argument>,<argument pos:start="95:45" pos:end="95:47"><expr pos:start="95:45" pos:end="95:47"><literal type="char" pos:start="95:45" pos:end="95:47">'t'</literal></expr></argument>,<argument pos:start="95:49" pos:end="95:51"><expr pos:start="95:49" pos:end="95:51"><literal type="char" pos:start="95:49" pos:end="95:51">'p'</literal></expr></argument>,<argument pos:start="95:53" pos:end="95:55"><expr pos:start="95:53" pos:end="95:55"><literal type="char" pos:start="95:53" pos:end="95:55">' '</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:50"><block_content pos:start="97:13" pos:end="97:50">

            <expr_stmt pos:start="97:13" pos:end="97:50"><expr pos:start="97:13" pos:end="97:49"><call pos:start="97:13" pos:end="97:49"><name pos:start="97:13" pos:end="97:32">ff_mov_close_hinting</name><argument_list pos:start="97:33" pos:end="97:49">(<argument pos:start="97:34" pos:end="97:48"><expr pos:start="97:34" pos:end="97:48"><operator pos:start="97:34" pos:end="97:34">&amp;</operator><name pos:start="97:35" pos:end="97:48"><name pos:start="97:35" pos:end="97:37">mov</name><operator pos:start="97:38" pos:end="97:39">-&gt;</operator><name pos:start="97:40" pos:end="97:45">tracks</name><index pos:start="97:46" pos:end="97:48">[<expr pos:start="97:47" pos:end="97:47"><name pos:start="97:47" pos:end="97:47">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="99:9" pos:end="101:42">else if <condition pos:start="99:17" pos:end="99:62">(<expr pos:start="99:18" pos:end="99:61"><name pos:start="99:18" pos:end="99:31"><name pos:start="99:18" pos:end="99:20">mov</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:28">tracks</name><index pos:start="99:29" pos:end="99:31">[<expr pos:start="99:30" pos:end="99:30"><name pos:start="99:30" pos:end="99:30">i</name></expr>]</index></name><operator pos:start="99:32" pos:end="99:32">.</operator><name pos:start="99:33" pos:end="99:35">tag</name> <operator pos:start="99:37" pos:end="99:38">==</operator> <call pos:start="99:40" pos:end="99:61"><name pos:start="99:40" pos:end="99:44">MKTAG</name><argument_list pos:start="99:45" pos:end="99:61">(<argument pos:start="99:46" pos:end="99:48"><expr pos:start="99:46" pos:end="99:48"><literal type="char" pos:start="99:46" pos:end="99:48">'t'</literal></expr></argument>,<argument pos:start="99:50" pos:end="99:52"><expr pos:start="99:50" pos:end="99:52"><literal type="char" pos:start="99:50" pos:end="99:52">'m'</literal></expr></argument>,<argument pos:start="99:54" pos:end="99:56"><expr pos:start="99:54" pos:end="99:56"><literal type="char" pos:start="99:54" pos:end="99:56">'c'</literal></expr></argument>,<argument pos:start="99:58" pos:end="99:60"><expr pos:start="99:58" pos:end="99:60"><literal type="char" pos:start="99:58" pos:end="99:60">'d'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:42"><block_content pos:start="101:13" pos:end="101:42">

            <expr_stmt pos:start="101:13" pos:end="101:42"><expr pos:start="101:13" pos:end="101:41"><call pos:start="101:13" pos:end="101:41"><name pos:start="101:13" pos:end="101:20">av_freep</name><argument_list pos:start="101:21" pos:end="101:41">(<argument pos:start="101:22" pos:end="101:40"><expr pos:start="101:22" pos:end="101:40"><operator pos:start="101:22" pos:end="101:22">&amp;</operator><name pos:start="101:23" pos:end="101:36"><name pos:start="101:23" pos:end="101:25">mov</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:33">tracks</name><index pos:start="101:34" pos:end="101:36">[<expr pos:start="101:35" pos:end="101:35"><name pos:start="101:35" pos:end="101:35">i</name></expr>]</index></name><operator pos:start="101:37" pos:end="101:37">.</operator><name pos:start="101:38" pos:end="101:40">enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="103:9" pos:end="121:9"><if pos:start="103:9" pos:end="121:9">if <condition pos:start="103:12" pos:end="105:69">(<expr pos:start="103:13" pos:end="105:68"><name pos:start="103:13" pos:end="103:22"><name pos:start="103:13" pos:end="103:15">mov</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:22">flags</name></name> <operator pos:start="103:24" pos:end="103:24">&amp;</operator> <name pos:start="103:26" pos:end="103:45">FF_MOV_FLAG_FRAGMENT</name> <operator pos:start="103:47" pos:end="103:48">&amp;&amp;</operator>

            <name pos:start="105:13" pos:end="105:26"><name pos:start="105:13" pos:end="105:15">mov</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:23">tracks</name><index pos:start="105:24" pos:end="105:26">[<expr pos:start="105:25" pos:end="105:25"><name pos:start="105:25" pos:end="105:25">i</name></expr>]</index></name><operator pos:start="105:27" pos:end="105:27">.</operator><name pos:start="105:28" pos:end="105:49"><name pos:start="105:28" pos:end="105:35">vc1_info</name><operator pos:start="105:36" pos:end="105:36">.</operator><name pos:start="105:37" pos:end="105:49">struct_offset</name></name> <operator pos:start="105:51" pos:end="105:52">&amp;&amp;</operator> <name pos:start="105:54" pos:end="105:68"><name pos:start="105:54" pos:end="105:54">s</name><operator pos:start="105:55" pos:end="105:56">-&gt;</operator><name pos:start="105:57" pos:end="105:58">pb</name><operator pos:start="105:59" pos:end="105:60">-&gt;</operator><name pos:start="105:61" pos:end="105:68">seekable</name></name></expr>)</condition> <block pos:start="105:71" pos:end="121:9">{<block_content pos:start="107:13" pos:end="119:13">

            <decl_stmt pos:start="107:13" pos:end="107:40"><decl pos:start="107:13" pos:end="107:39"><type pos:start="107:13" pos:end="107:19"><name pos:start="107:13" pos:end="107:19">int64_t</name></type> <name pos:start="107:21" pos:end="107:23">off</name> <init pos:start="107:25" pos:end="107:39">= <expr pos:start="107:27" pos:end="107:39"><call pos:start="107:27" pos:end="107:39"><name pos:start="107:27" pos:end="107:35">avio_tell</name><argument_list pos:start="107:36" pos:end="107:39">(<argument pos:start="107:37" pos:end="107:38"><expr pos:start="107:37" pos:end="107:38"><name pos:start="107:37" pos:end="107:38">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="109:13" pos:end="109:27"><decl pos:start="109:13" pos:end="109:26"><type pos:start="109:13" pos:end="109:19"><name pos:start="109:13" pos:end="109:19">uint8_t</name></type> <name pos:start="109:21" pos:end="109:26"><name pos:start="109:21" pos:end="109:23">buf</name><index pos:start="109:24" pos:end="109:26">[<expr pos:start="109:25" pos:end="109:25"><literal type="number" pos:start="109:25" pos:end="109:25">7</literal></expr>]</index></name></decl>;</decl_stmt>

            <if_stmt pos:start="111:13" pos:end="119:13"><if pos:start="111:13" pos:end="119:13">if <condition pos:start="111:16" pos:end="111:66">(<expr pos:start="111:17" pos:end="111:65"><call pos:start="111:17" pos:end="111:60"><name pos:start="111:17" pos:end="111:38">mov_write_dvc1_structs</name><argument_list pos:start="111:39" pos:end="111:60">(<argument pos:start="111:40" pos:end="111:54"><expr pos:start="111:40" pos:end="111:54"><operator pos:start="111:40" pos:end="111:40">&amp;</operator><name pos:start="111:41" pos:end="111:54"><name pos:start="111:41" pos:end="111:43">mov</name><operator pos:start="111:44" pos:end="111:45">-&gt;</operator><name pos:start="111:46" pos:end="111:51">tracks</name><index pos:start="111:52" pos:end="111:54">[<expr pos:start="111:53" pos:end="111:53"><name pos:start="111:53" pos:end="111:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="111:57" pos:end="111:59"><expr pos:start="111:57" pos:end="111:59"><name pos:start="111:57" pos:end="111:59">buf</name></expr></argument>)</argument_list></call> <operator pos:start="111:62" pos:end="111:63">&gt;=</operator> <literal type="number" pos:start="111:65" pos:end="111:65">0</literal></expr>)</condition> <block pos:start="111:68" pos:end="119:13">{<block_content pos:start="113:17" pos:end="117:45">

                <expr_stmt pos:start="113:17" pos:end="113:79"><expr pos:start="113:17" pos:end="113:78"><call pos:start="113:17" pos:end="113:78"><name pos:start="113:17" pos:end="113:25">avio_seek</name><argument_list pos:start="113:26" pos:end="113:78">(<argument pos:start="113:27" pos:end="113:28"><expr pos:start="113:27" pos:end="113:28"><name pos:start="113:27" pos:end="113:28">pb</name></expr></argument>, <argument pos:start="113:31" pos:end="113:67"><expr pos:start="113:31" pos:end="113:67"><name pos:start="113:31" pos:end="113:44"><name pos:start="113:31" pos:end="113:33">mov</name><operator pos:start="113:34" pos:end="113:35">-&gt;</operator><name pos:start="113:36" pos:end="113:41">tracks</name><index pos:start="113:42" pos:end="113:44">[<expr pos:start="113:43" pos:end="113:43"><name pos:start="113:43" pos:end="113:43">i</name></expr>]</index></name><operator pos:start="113:45" pos:end="113:45">.</operator><name pos:start="113:46" pos:end="113:67"><name pos:start="113:46" pos:end="113:53">vc1_info</name><operator pos:start="113:54" pos:end="113:54">.</operator><name pos:start="113:55" pos:end="113:67">struct_offset</name></name></expr></argument>, <argument pos:start="113:70" pos:end="113:77"><expr pos:start="113:70" pos:end="113:77"><name pos:start="113:70" pos:end="113:77">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:39"><expr pos:start="115:17" pos:end="115:38"><call pos:start="115:17" pos:end="115:38"><name pos:start="115:17" pos:end="115:26">avio_write</name><argument_list pos:start="115:27" pos:end="115:38">(<argument pos:start="115:28" pos:end="115:29"><expr pos:start="115:28" pos:end="115:29"><name pos:start="115:28" pos:end="115:29">pb</name></expr></argument>, <argument pos:start="115:32" pos:end="115:34"><expr pos:start="115:32" pos:end="115:34"><name pos:start="115:32" pos:end="115:34">buf</name></expr></argument>, <argument pos:start="115:37" pos:end="115:37"><expr pos:start="115:37" pos:end="115:37"><literal type="number" pos:start="115:37" pos:end="115:37">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:45"><expr pos:start="117:17" pos:end="117:44"><call pos:start="117:17" pos:end="117:44"><name pos:start="117:17" pos:end="117:25">avio_seek</name><argument_list pos:start="117:26" pos:end="117:44">(<argument pos:start="117:27" pos:end="117:28"><expr pos:start="117:27" pos:end="117:28"><name pos:start="117:27" pos:end="117:28">pb</name></expr></argument>, <argument pos:start="117:31" pos:end="117:33"><expr pos:start="117:31" pos:end="117:33"><name pos:start="117:31" pos:end="117:33">off</name></expr></argument>, <argument pos:start="117:36" pos:end="117:43"><expr pos:start="117:36" pos:end="117:43"><name pos:start="117:36" pos:end="117:43">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:42"><expr pos:start="123:9" pos:end="123:41"><call pos:start="123:9" pos:end="123:41"><name pos:start="123:9" pos:end="123:16">av_freep</name><argument_list pos:start="123:17" pos:end="123:41">(<argument pos:start="123:18" pos:end="123:40"><expr pos:start="123:18" pos:end="123:40"><operator pos:start="123:18" pos:end="123:18">&amp;</operator><name pos:start="123:19" pos:end="123:32"><name pos:start="123:19" pos:end="123:21">mov</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:29">tracks</name><index pos:start="123:30" pos:end="123:32">[<expr pos:start="123:31" pos:end="123:31"><name pos:start="123:31" pos:end="123:31">i</name></expr>]</index></name><operator pos:start="123:33" pos:end="123:33">.</operator><name pos:start="123:34" pos:end="123:40">cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:44"><expr pos:start="125:9" pos:end="125:43"><call pos:start="125:9" pos:end="125:43"><name pos:start="125:9" pos:end="125:16">av_freep</name><argument_list pos:start="125:17" pos:end="125:43">(<argument pos:start="125:18" pos:end="125:42"><expr pos:start="125:18" pos:end="125:42"><operator pos:start="125:18" pos:end="125:18">&amp;</operator><name pos:start="125:19" pos:end="125:32"><name pos:start="125:19" pos:end="125:21">mov</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:29">tracks</name><index pos:start="125:30" pos:end="125:32">[<expr pos:start="125:31" pos:end="125:31"><name pos:start="125:31" pos:end="125:31">i</name></expr>]</index></name><operator pos:start="125:33" pos:end="125:33">.</operator><name pos:start="125:34" pos:end="125:42">frag_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="129:9" pos:end="131:45"><if pos:start="129:9" pos:end="131:45">if <condition pos:start="129:12" pos:end="129:35">(<expr pos:start="129:13" pos:end="129:34"><name pos:start="129:13" pos:end="129:26"><name pos:start="129:13" pos:end="129:15">mov</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:23">tracks</name><index pos:start="129:24" pos:end="129:26">[<expr pos:start="129:25" pos:end="129:25"><name pos:start="129:25" pos:end="129:25">i</name></expr>]</index></name><operator pos:start="129:27" pos:end="129:27">.</operator><name pos:start="129:28" pos:end="129:34">vos_len</name></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:45"><block_content pos:start="131:13" pos:end="131:45">

            <expr_stmt pos:start="131:13" pos:end="131:45"><expr pos:start="131:13" pos:end="131:44"><call pos:start="131:13" pos:end="131:44"><name pos:start="131:13" pos:end="131:19">av_free</name><argument_list pos:start="131:20" pos:end="131:44">(<argument pos:start="131:21" pos:end="131:43"><expr pos:start="131:21" pos:end="131:43"><name pos:start="131:21" pos:end="131:34"><name pos:start="131:21" pos:end="131:23">mov</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:31">tracks</name><index pos:start="131:32" pos:end="131:34">[<expr pos:start="131:33" pos:end="131:33"><name pos:start="131:33" pos:end="131:33">i</name></expr>]</index></name><operator pos:start="131:35" pos:end="131:35">.</operator><name pos:start="131:36" pos:end="131:43">vos_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    </block_content>}</block></for>



    <expr_stmt pos:start="139:5" pos:end="139:19"><expr pos:start="139:5" pos:end="139:18"><call pos:start="139:5" pos:end="139:18"><name pos:start="139:5" pos:end="139:14">avio_flush</name><argument_list pos:start="139:15" pos:end="139:18">(<argument pos:start="139:16" pos:end="139:17"><expr pos:start="139:16" pos:end="139:17"><name pos:start="139:16" pos:end="139:17">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:27"><expr pos:start="143:5" pos:end="143:26"><call pos:start="143:5" pos:end="143:26"><name pos:start="143:5" pos:end="143:12">av_freep</name><argument_list pos:start="143:13" pos:end="143:26">(<argument pos:start="143:14" pos:end="143:25"><expr pos:start="143:14" pos:end="143:25"><operator pos:start="143:14" pos:end="143:14">&amp;</operator><name pos:start="143:15" pos:end="143:25"><name pos:start="143:15" pos:end="143:17">mov</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:25">tracks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="147:5" pos:end="147:15">return <expr pos:start="147:12" pos:end="147:14"><name pos:start="147:12" pos:end="147:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
