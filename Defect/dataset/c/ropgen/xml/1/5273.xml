<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5273.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">sparc_cpu_class_init</name><parameter_list pos:start="1:33" pos:end="1:61">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:44">ObjectClass</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">oc</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:54">void</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:55">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">SPARCCPUClass</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">scc</name> <init pos:start="5:24" pos:end="5:44">= <expr pos:start="5:26" pos:end="5:44"><call pos:start="5:26" pos:end="5:44"><name pos:start="5:26" pos:end="5:40">SPARC_CPU_CLASS</name><argument_list pos:start="5:41" pos:end="5:44">(<argument pos:start="5:42" pos:end="5:43"><expr pos:start="5:42" pos:end="5:43"><name pos:start="5:42" pos:end="5:43">oc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUClass</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cc</name> <init pos:start="7:18" pos:end="7:32">= <expr pos:start="7:20" pos:end="7:32"><call pos:start="7:20" pos:end="7:32"><name pos:start="7:20" pos:end="7:28">CPU_CLASS</name><argument_list pos:start="7:29" pos:end="7:32">(<argument pos:start="7:30" pos:end="7:31"><expr pos:start="7:30" pos:end="7:31"><name pos:start="7:30" pos:end="7:31">oc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceClass</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">dc</name> <init pos:start="9:21" pos:end="9:38">= <expr pos:start="9:23" pos:end="9:38"><call pos:start="9:23" pos:end="9:38"><name pos:start="9:23" pos:end="9:34">DEVICE_CLASS</name><argument_list pos:start="9:35" pos:end="9:38">(<argument pos:start="9:36" pos:end="9:37"><expr pos:start="9:36" pos:end="9:37"><name pos:start="9:36" pos:end="9:37">oc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:7">scc</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:23">parent_realize</name></name> <operator pos:start="13:25" pos:end="13:25">=</operator> <name pos:start="13:27" pos:end="13:37"><name pos:start="13:27" pos:end="13:28">dc</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:37">realize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:6">dc</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:15">realize</name></name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:37">sparc_cpu_realizefn</name></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:7">scc</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:21">parent_reset</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <name pos:start="19:25" pos:end="19:33"><name pos:start="19:25" pos:end="19:26">cc</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:33">reset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:6">cc</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:13">reset</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:31">sparc_cpu_reset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:6">cc</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:16">has_work</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:37">sparc_cpu_has_work</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:6">cc</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:20">do_interrupt</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:45">sparc_cpu_do_interrupt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:54"><expr pos:start="29:5" pos:end="29:53"><name pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:6">cc</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:26">cpu_exec_interrupt</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <name pos:start="29:30" pos:end="29:53">sparc_cpu_exec_interrupt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="34:0"><expr pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:6">cc</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:18">dump_state</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:41">sparc_cpu_dump_state</name></expr>;</expr_stmt>

<cpp:if pos:start="33:1" pos:end="33:58">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:58"><operator pos:start="33:5" pos:end="33:5">!</operator><call pos:start="33:6" pos:end="33:28"><name pos:start="33:6" pos:end="33:12">defined</name><argument_list pos:start="33:13" pos:end="33:28">(<argument pos:start="33:14" pos:end="33:27"><expr pos:start="33:14" pos:end="33:27"><name pos:start="33:14" pos:end="33:27">TARGET_SPARC64</name></expr></argument>)</argument_list></call> <operator pos:start="33:30" pos:end="33:31">&amp;&amp;</operator> <operator pos:start="33:33" pos:end="33:33">!</operator><call pos:start="33:34" pos:end="33:58"><name pos:start="33:34" pos:end="33:40">defined</name><argument_list pos:start="33:41" pos:end="33:58">(<argument pos:start="33:42" pos:end="33:57"><expr pos:start="33:42" pos:end="33:57"><name pos:start="33:42" pos:end="33:57">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="35:5" pos:end="38:0"><expr pos:start="35:5" pos:end="35:51"><name pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:6">cc</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:23">memory_rw_debug</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:51">sparc_cpu_memory_rw_debug</name></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="39:5" pos:end="39:34"><expr pos:start="39:5" pos:end="39:33"><name pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:6">cc</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:14">set_pc</name></name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:33">sparc_cpu_set_pc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:60"><expr pos:start="41:5" pos:end="41:59"><name pos:start="41:5" pos:end="41:27"><name pos:start="41:5" pos:end="41:6">cc</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:27">synchronize_from_tb</name></name> <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:59">sparc_cpu_synchronize_from_tb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:56"><expr pos:start="43:5" pos:end="43:55"><name pos:start="43:5" pos:end="43:25"><name pos:start="43:5" pos:end="43:6">cc</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:25">gdb_read_register</name></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <name pos:start="43:29" pos:end="43:55">sparc_cpu_gdb_read_register</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="48:0"><expr pos:start="45:5" pos:end="45:57"><name pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:6">cc</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:26">gdb_write_register</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:57">sparc_cpu_gdb_write_register</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="47:1" pos:end="47:23">#<cpp:directive pos:start="47:2" pos:end="47:6">ifdef</cpp:directive> <name pos:start="47:8" pos:end="47:23">CONFIG_USER_ONLY</name></cpp:ifdef>

    <expr_stmt pos:start="49:5" pos:end="52:0"><expr pos:start="49:5" pos:end="49:53"><name pos:start="49:5" pos:end="49:24"><name pos:start="49:5" pos:end="49:6">cc</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:24">handle_mmu_fault</name></name> <operator pos:start="49:26" pos:end="49:26">=</operator> <name pos:start="49:28" pos:end="49:53">sparc_cpu_handle_mmu_fault</name></expr>;</expr_stmt>

<cpp:else pos:start="51:1" pos:end="51:5">#<cpp:directive pos:start="51:2" pos:end="51:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="53:5" pos:end="53:59"><expr pos:start="53:5" pos:end="53:58"><name pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:6">cc</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:28">do_unassigned_access</name></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <name pos:start="53:32" pos:end="53:58">sparc_cpu_unassigned_access</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:60"><expr pos:start="55:5" pos:end="55:59"><name pos:start="55:5" pos:end="55:27"><name pos:start="55:5" pos:end="55:6">cc</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:27">do_unaligned_access</name></name> <operator pos:start="55:29" pos:end="55:29">=</operator> <name pos:start="55:31" pos:end="55:59">sparc_cpu_do_unaligned_access</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:60"><expr pos:start="57:5" pos:end="57:59"><name pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:6">cc</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:27">get_phys_page_debug</name></name> <operator pos:start="57:29" pos:end="57:29">=</operator> <name pos:start="57:31" pos:end="57:59">sparc_cpu_get_phys_page_debug</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="62:0"><expr pos:start="59:5" pos:end="59:33"><name pos:start="59:5" pos:end="59:12"><name pos:start="59:5" pos:end="59:6">cc</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:12">vmsd</name></name> <operator pos:start="59:14" pos:end="59:14">=</operator> <operator pos:start="59:16" pos:end="59:16">&amp;</operator><name pos:start="59:17" pos:end="59:33">vmstate_sparc_cpu</name></expr>;</expr_stmt>

<cpp:endif pos:start="61:1" pos:end="61:6">#<cpp:directive pos:start="61:2" pos:end="61:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="63:5" pos:end="68:0"><expr pos:start="63:5" pos:end="63:49"><name pos:start="63:5" pos:end="63:22"><name pos:start="63:5" pos:end="63:6">cc</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:22">disas_set_info</name></name> <operator pos:start="63:24" pos:end="63:24">=</operator> <name pos:start="63:26" pos:end="63:49">cpu_sparc_disas_set_info</name></expr>;</expr_stmt>



<cpp:if pos:start="67:1" pos:end="67:53">#<cpp:directive pos:start="67:2" pos:end="67:3">if</cpp:directive> <expr pos:start="67:5" pos:end="67:53"><call pos:start="67:5" pos:end="67:27"><name pos:start="67:5" pos:end="67:11">defined</name><argument_list pos:start="67:12" pos:end="67:27">(<argument pos:start="67:13" pos:end="67:26"><expr pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:26">TARGET_SPARC64</name></expr></argument>)</argument_list></call> <operator pos:start="67:29" pos:end="67:30">&amp;&amp;</operator> <operator pos:start="67:32" pos:end="67:32">!</operator><call pos:start="67:33" pos:end="67:53"><name pos:start="67:33" pos:end="67:39">defined</name><argument_list pos:start="67:40" pos:end="67:53">(<argument pos:start="67:41" pos:end="67:52"><expr pos:start="67:41" pos:end="67:52"><name pos:start="67:41" pos:end="67:52">TARGET_ABI32</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="69:5" pos:end="72:0"><expr pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:25"><name pos:start="69:5" pos:end="69:6">cc</name><operator pos:start="69:7" pos:end="69:8">-&gt;</operator><name pos:start="69:9" pos:end="69:25">gdb_num_core_regs</name></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <literal type="number" pos:start="69:29" pos:end="69:30">86</literal></expr>;</expr_stmt>

<cpp:else pos:start="71:1" pos:end="71:5">#<cpp:directive pos:start="71:2" pos:end="71:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="73:5" pos:end="76:0"><expr pos:start="73:5" pos:end="73:30"><name pos:start="73:5" pos:end="73:25"><name pos:start="73:5" pos:end="73:6">cc</name><operator pos:start="73:7" pos:end="73:8">-&gt;</operator><name pos:start="73:9" pos:end="73:25">gdb_num_core_regs</name></name> <operator pos:start="73:27" pos:end="73:27">=</operator> <literal type="number" pos:start="73:29" pos:end="73:30">72</literal></expr>;</expr_stmt>

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="79:5" pos:end="87:7">/*

     * Reason: sparc_cpu_initfn() calls cpu_exec_init(), which saves

     * the object in cpus -&gt; dangling pointer after final

     * object_unref().

     */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:55"><expr pos:start="89:5" pos:end="89:54"><name pos:start="89:5" pos:end="89:47"><name pos:start="89:5" pos:end="89:6">dc</name><operator pos:start="89:7" pos:end="89:8">-&gt;</operator><name pos:start="89:9" pos:end="89:47">cannot_destroy_with_object_finalize_yet</name></name> <operator pos:start="89:49" pos:end="89:49">=</operator> <name pos:start="89:51" pos:end="89:54">true</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
