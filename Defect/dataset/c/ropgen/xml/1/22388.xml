<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22388.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">selfTest</name><parameter_list pos:start="1:21" pos:end="1:66">(<parameter pos:start="1:22" pos:end="1:36"><decl pos:start="1:22" pos:end="1:36"><type pos:start="1:22" pos:end="1:33"><name pos:start="1:22" pos:end="1:28">uint8_t</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36"><name pos:start="1:31" pos:end="1:33">src</name><index pos:start="1:34" pos:end="1:36">[<expr pos:start="1:35" pos:end="1:35"><literal type="number" pos:start="1:35" pos:end="1:35">3</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:48"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:51"><name pos:start="1:43" pos:end="1:48">stride</name><index pos:start="1:49" pos:end="1:51">[<expr pos:start="1:50" pos:end="1:50"><literal type="number" pos:start="1:50" pos:end="1:50">3</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:58"><decl pos:start="1:54" pos:end="1:58"><type pos:start="1:54" pos:end="1:58"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:58">w</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:65"><decl pos:start="1:61" pos:end="1:65"><type pos:start="1:61" pos:end="1:65"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:65">h</name></decl></parameter>)</parameter_list><block pos:start="1:67" pos:end="61:1">{<block_content pos:start="3:9" pos:end="59:9">

	<decl_stmt pos:start="3:9" pos:end="3:46"><decl pos:start="3:9" pos:end="3:34"><type pos:start="3:9" pos:end="3:24"><name pos:start="3:9" pos:end="3:24"><name pos:start="3:9" pos:end="3:12">enum</name> <name pos:start="3:14" pos:end="3:24">PixelFormat</name></name></type> <name pos:start="3:26" pos:end="3:34">srcFormat</name></decl>, <decl pos:start="3:37" pos:end="3:45"><type ref="prev" pos:start="3:9" pos:end="3:24"/><name pos:start="3:37" pos:end="3:45">dstFormat</name></decl>;</decl_stmt>

	<decl_stmt pos:start="5:9" pos:end="5:35"><decl pos:start="5:9" pos:end="5:16"><type pos:start="5:9" pos:end="5:11"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:16">srcW</name></decl>, <decl pos:start="5:19" pos:end="5:22"><type ref="prev" pos:start="5:9" pos:end="5:11"/><name pos:start="5:19" pos:end="5:22">srcH</name></decl>, <decl pos:start="5:25" pos:end="5:28"><type ref="prev" pos:start="5:9" pos:end="5:11"/><name pos:start="5:25" pos:end="5:28">dstW</name></decl>, <decl pos:start="5:31" pos:end="5:34"><type ref="prev" pos:start="5:9" pos:end="5:11"/><name pos:start="5:31" pos:end="5:34">dstH</name></decl>;</decl_stmt>

	<decl_stmt pos:start="7:9" pos:end="7:18"><decl pos:start="7:9" pos:end="7:17"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:17">flags</name></decl>;</decl_stmt>



	<for pos:start="11:9" pos:end="59:9">for<control pos:start="11:12" pos:end="11:63">(<init pos:start="11:13" pos:end="11:26"><expr pos:start="11:13" pos:end="11:25"><name pos:start="11:13" pos:end="11:21">srcFormat</name> <operator pos:start="11:23" pos:end="11:23">=</operator> <literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr>;</init> <condition pos:start="11:28" pos:end="11:50"><expr pos:start="11:28" pos:end="11:49"><name pos:start="11:28" pos:end="11:36">srcFormat</name> <operator pos:start="11:38" pos:end="11:38">&lt;</operator> <name pos:start="11:40" pos:end="11:49">PIX_FMT_NB</name></expr>;</condition> <incr pos:start="11:52" pos:end="11:62"><expr pos:start="11:52" pos:end="11:62"><name pos:start="11:52" pos:end="11:60">srcFormat</name><operator pos:start="11:61" pos:end="11:62">++</operator></expr></incr>)</control> <block pos:start="11:65" pos:end="59:9">{<block_content pos:start="13:17" pos:end="57:17">

		<for pos:start="13:17" pos:end="57:17">for<control pos:start="13:20" pos:end="13:71">(<init pos:start="13:21" pos:end="13:34"><expr pos:start="13:21" pos:end="13:33"><name pos:start="13:21" pos:end="13:29">dstFormat</name> <operator pos:start="13:31" pos:end="13:31">=</operator> <literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr>;</init> <condition pos:start="13:36" pos:end="13:58"><expr pos:start="13:36" pos:end="13:57"><name pos:start="13:36" pos:end="13:44">dstFormat</name> <operator pos:start="13:46" pos:end="13:46">&lt;</operator> <name pos:start="13:48" pos:end="13:57">PIX_FMT_NB</name></expr>;</condition> <incr pos:start="13:60" pos:end="13:70"><expr pos:start="13:60" pos:end="13:70"><name pos:start="13:60" pos:end="13:68">dstFormat</name><operator pos:start="13:69" pos:end="13:70">++</operator></expr></incr>)</control> <block pos:start="13:73" pos:end="57:17">{<block_content pos:start="15:25" pos:end="55:25">

			<expr_stmt pos:start="15:25" pos:end="19:68"><expr pos:start="15:25" pos:end="19:67"><call pos:start="15:25" pos:end="19:67"><name pos:start="15:25" pos:end="15:30">printf</name><argument_list pos:start="15:31" pos:end="19:67">(<argument pos:start="15:32" pos:end="15:43"><expr pos:start="15:32" pos:end="15:43"><literal type="string" pos:start="15:32" pos:end="15:43">"%s -&gt; %s\n"</literal></expr></argument>,

					<argument pos:start="17:41" pos:end="17:66"><expr pos:start="17:41" pos:end="17:66"><call pos:start="17:41" pos:end="17:66"><name pos:start="17:41" pos:end="17:55">sws_format_name</name><argument_list pos:start="17:56" pos:end="17:66">(<argument pos:start="17:57" pos:end="17:65"><expr pos:start="17:57" pos:end="17:65"><name pos:start="17:57" pos:end="17:65">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>,

					<argument pos:start="19:41" pos:end="19:66"><expr pos:start="19:41" pos:end="19:66"><call pos:start="19:41" pos:end="19:66"><name pos:start="19:41" pos:end="19:55">sws_format_name</name><argument_list pos:start="19:56" pos:end="19:66">(<argument pos:start="19:57" pos:end="19:65"><expr pos:start="19:57" pos:end="19:65"><name pos:start="19:57" pos:end="19:65">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



			<expr_stmt pos:start="23:25" pos:end="23:32"><expr pos:start="23:25" pos:end="23:31"><name pos:start="23:25" pos:end="23:28">srcW</name><operator pos:start="23:29" pos:end="23:29">=</operator> <name pos:start="23:31" pos:end="23:31">w</name></expr>;</expr_stmt>

			<expr_stmt pos:start="25:25" pos:end="25:32"><expr pos:start="25:25" pos:end="25:31"><name pos:start="25:25" pos:end="25:28">srcH</name><operator pos:start="25:29" pos:end="25:29">=</operator> <name pos:start="25:31" pos:end="25:31">h</name></expr>;</expr_stmt>

			<for pos:start="27:25" pos:end="55:25">for<control pos:start="27:28" pos:end="27:67">(<init pos:start="27:29" pos:end="27:41"><expr pos:start="27:29" pos:end="27:40"><name pos:start="27:29" pos:end="27:32">dstW</name><operator pos:start="27:33" pos:end="27:33">=</operator><name pos:start="27:34" pos:end="27:34">w</name> <operator pos:start="27:36" pos:end="27:36">-</operator> <name pos:start="27:38" pos:end="27:38">w</name><operator pos:start="27:39" pos:end="27:39">/</operator><literal type="number" pos:start="27:40" pos:end="27:40">3</literal></expr>;</init> <condition pos:start="27:43" pos:end="27:55"><expr pos:start="27:43" pos:end="27:54"><name pos:start="27:43" pos:end="27:46">dstW</name><operator pos:start="27:47" pos:end="27:48">&lt;=</operator> <literal type="number" pos:start="27:50" pos:end="27:50">4</literal><operator pos:start="27:51" pos:end="27:51">*</operator><name pos:start="27:52" pos:end="27:52">w</name><operator pos:start="27:53" pos:end="27:53">/</operator><literal type="number" pos:start="27:54" pos:end="27:54">3</literal></expr>;</condition> <incr pos:start="27:57" pos:end="27:66"><expr pos:start="27:57" pos:end="27:66"><name pos:start="27:57" pos:end="27:60">dstW</name><operator pos:start="27:61" pos:end="27:62">+=</operator> <name pos:start="27:64" pos:end="27:64">w</name><operator pos:start="27:65" pos:end="27:65">/</operator><literal type="number" pos:start="27:66" pos:end="27:66">3</literal></expr></incr>)</control><block pos:start="27:68" pos:end="55:25">{<block_content pos:start="29:33" pos:end="53:33">

				<for pos:start="29:33" pos:end="53:33">for<control pos:start="29:36" pos:end="29:75">(<init pos:start="29:37" pos:end="29:49"><expr pos:start="29:37" pos:end="29:48"><name pos:start="29:37" pos:end="29:40">dstH</name><operator pos:start="29:41" pos:end="29:41">=</operator><name pos:start="29:42" pos:end="29:42">h</name> <operator pos:start="29:44" pos:end="29:44">-</operator> <name pos:start="29:46" pos:end="29:46">h</name><operator pos:start="29:47" pos:end="29:47">/</operator><literal type="number" pos:start="29:48" pos:end="29:48">3</literal></expr>;</init> <condition pos:start="29:51" pos:end="29:63"><expr pos:start="29:51" pos:end="29:62"><name pos:start="29:51" pos:end="29:54">dstH</name><operator pos:start="29:55" pos:end="29:56">&lt;=</operator> <literal type="number" pos:start="29:58" pos:end="29:58">4</literal><operator pos:start="29:59" pos:end="29:59">*</operator><name pos:start="29:60" pos:end="29:60">h</name><operator pos:start="29:61" pos:end="29:61">/</operator><literal type="number" pos:start="29:62" pos:end="29:62">3</literal></expr>;</condition> <incr pos:start="29:65" pos:end="29:74"><expr pos:start="29:65" pos:end="29:74"><name pos:start="29:65" pos:end="29:68">dstH</name><operator pos:start="29:69" pos:end="29:70">+=</operator> <name pos:start="29:72" pos:end="29:72">h</name><operator pos:start="29:73" pos:end="29:73">/</operator><literal type="number" pos:start="29:74" pos:end="29:74">3</literal></expr></incr>)</control><block pos:start="29:76" pos:end="53:33">{<block_content pos:start="31:41" pos:end="51:41">

					<for pos:start="31:41" pos:end="51:41">for<control pos:start="31:44" pos:end="31:72">(<init pos:start="31:45" pos:end="31:52"><expr pos:start="31:45" pos:end="31:51"><name pos:start="31:45" pos:end="31:49">flags</name><operator pos:start="31:50" pos:end="31:50">=</operator><literal type="number" pos:start="31:51" pos:end="31:51">1</literal></expr>;</init> <condition pos:start="31:54" pos:end="31:62"><expr pos:start="31:54" pos:end="31:61"><name pos:start="31:54" pos:end="31:58">flags</name><operator pos:start="31:59" pos:end="31:59">&lt;</operator><literal type="number" pos:start="31:60" pos:end="31:61">33</literal></expr>;</condition> <incr pos:start="31:64" pos:end="31:71"><expr pos:start="31:64" pos:end="31:71"><name pos:start="31:64" pos:end="31:68">flags</name><operator pos:start="31:69" pos:end="31:70">*=</operator><literal type="number" pos:start="31:71" pos:end="31:71">2</literal></expr></incr>)</control> <block pos:start="31:74" pos:end="51:41">{<block_content pos:start="33:49" pos:end="49:49">

						<decl_stmt pos:start="33:49" pos:end="33:56"><decl pos:start="33:49" pos:end="33:55"><type pos:start="33:49" pos:end="33:51"><name pos:start="33:49" pos:end="33:51">int</name></type> <name pos:start="33:53" pos:end="33:55">res</name></decl>;</decl_stmt>



						<expr_stmt pos:start="37:49" pos:end="39:87"><expr pos:start="37:49" pos:end="39:86"><name pos:start="37:49" pos:end="37:51">res</name> <operator pos:start="37:53" pos:end="37:53">=</operator> <call pos:start="37:55" pos:end="39:86"><name pos:start="37:55" pos:end="37:60">doTest</name><argument_list pos:start="37:61" pos:end="39:86">(<argument pos:start="37:62" pos:end="37:64"><expr pos:start="37:62" pos:end="37:64"><name pos:start="37:62" pos:end="37:64">src</name></expr></argument>, <argument pos:start="37:67" pos:end="37:72"><expr pos:start="37:67" pos:end="37:72"><name pos:start="37:67" pos:end="37:72">stride</name></expr></argument>, <argument pos:start="37:75" pos:end="37:75"><expr pos:start="37:75" pos:end="37:75"><name pos:start="37:75" pos:end="37:75">w</name></expr></argument>, <argument pos:start="37:78" pos:end="37:78"><expr pos:start="37:78" pos:end="37:78"><name pos:start="37:78" pos:end="37:78">h</name></expr></argument>, <argument pos:start="37:81" pos:end="37:89"><expr pos:start="37:81" pos:end="37:89"><name pos:start="37:81" pos:end="37:89">srcFormat</name></expr></argument>, <argument pos:start="37:92" pos:end="37:100"><expr pos:start="37:92" pos:end="37:100"><name pos:start="37:92" pos:end="37:100">dstFormat</name></expr></argument>,

							<argument pos:start="39:57" pos:end="39:60"><expr pos:start="39:57" pos:end="39:60"><name pos:start="39:57" pos:end="39:60">srcW</name></expr></argument>, <argument pos:start="39:63" pos:end="39:66"><expr pos:start="39:63" pos:end="39:66"><name pos:start="39:63" pos:end="39:66">srcH</name></expr></argument>, <argument pos:start="39:69" pos:end="39:72"><expr pos:start="39:69" pos:end="39:72"><name pos:start="39:69" pos:end="39:72">dstW</name></expr></argument>, <argument pos:start="39:75" pos:end="39:78"><expr pos:start="39:75" pos:end="39:78"><name pos:start="39:75" pos:end="39:78">dstH</name></expr></argument>, <argument pos:start="39:81" pos:end="39:85"><expr pos:start="39:81" pos:end="39:85"><name pos:start="39:81" pos:end="39:85">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

						<if_stmt pos:start="41:49" pos:end="49:49"><if pos:start="41:49" pos:end="49:49">if <condition pos:start="41:52" pos:end="41:60">(<expr pos:start="41:53" pos:end="41:59"><name pos:start="41:53" pos:end="41:55">res</name> <operator pos:start="41:57" pos:end="41:57">&lt;</operator> <literal type="number" pos:start="41:59" pos:end="41:59">0</literal></expr>)</condition> <block pos:start="41:62" pos:end="49:49">{<block_content pos:start="43:57" pos:end="47:67">

							<expr_stmt pos:start="43:57" pos:end="43:73"><expr pos:start="43:57" pos:end="43:72"><name pos:start="43:57" pos:end="43:60">dstW</name> <operator pos:start="43:62" pos:end="43:62">=</operator> <literal type="number" pos:start="43:64" pos:end="43:64">4</literal> <operator pos:start="43:66" pos:end="43:66">*</operator> <name pos:start="43:68" pos:end="43:68">w</name> <operator pos:start="43:70" pos:end="43:70">/</operator> <literal type="number" pos:start="43:72" pos:end="43:72">3</literal></expr>;</expr_stmt>

							<expr_stmt pos:start="45:57" pos:end="45:73"><expr pos:start="45:57" pos:end="45:72"><name pos:start="45:57" pos:end="45:60">dstH</name> <operator pos:start="45:62" pos:end="45:62">=</operator> <literal type="number" pos:start="45:64" pos:end="45:64">4</literal> <operator pos:start="45:66" pos:end="45:66">*</operator> <name pos:start="45:68" pos:end="45:68">h</name> <operator pos:start="45:70" pos:end="45:70">/</operator> <literal type="number" pos:start="45:72" pos:end="45:72">3</literal></expr>;</expr_stmt>

							<expr_stmt pos:start="47:57" pos:end="47:67"><expr pos:start="47:57" pos:end="47:66"><name pos:start="47:57" pos:end="47:61">flags</name> <operator pos:start="47:63" pos:end="47:63">=</operator> <literal type="number" pos:start="47:65" pos:end="47:66">33</literal></expr>;</expr_stmt>

						</block_content>}</block></if></if_stmt>

					</block_content>}</block></for>

				</block_content>}</block></for>

			</block_content>}</block></for>

		</block_content>}</block></for>

	</block_content>}</block></for>

</block_content>}</block></function>
</unit>
