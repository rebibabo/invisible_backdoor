<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4646.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">xtensa_cpu_initfn</name><parameter_list pos:start="1:30" pos:end="1:42">(<parameter pos:start="1:31" pos:end="1:41"><decl pos:start="1:31" pos:end="1:41"><type pos:start="1:31" pos:end="1:38"><name pos:start="1:31" pos:end="1:36">Object</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">obj</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:27">= <expr pos:start="5:20" pos:end="5:27"><call pos:start="5:20" pos:end="5:27"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:27">(<argument pos:start="5:24" pos:end="5:26"><expr pos:start="5:24" pos:end="5:26"><name pos:start="5:24" pos:end="5:26">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">XtensaCPU</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">cpu</name> <init pos:start="7:20" pos:end="7:36">= <expr pos:start="7:22" pos:end="7:36"><call pos:start="7:22" pos:end="7:36"><name pos:start="7:22" pos:end="7:31">XTENSA_CPU</name><argument_list pos:start="7:32" pos:end="7:36">(<argument pos:start="7:33" pos:end="7:35"><expr pos:start="7:33" pos:end="7:35"><name pos:start="7:33" pos:end="7:35">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">XtensaCPUClass</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">xcc</name> <init pos:start="9:25" pos:end="9:51">= <expr pos:start="9:27" pos:end="9:51"><call pos:start="9:27" pos:end="9:51"><name pos:start="9:27" pos:end="9:46">XTENSA_CPU_GET_CLASS</name><argument_list pos:start="9:47" pos:end="9:51">(<argument pos:start="9:48" pos:end="9:50"><expr pos:start="9:48" pos:end="9:50"><name pos:start="9:48" pos:end="9:50">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">CPUXtensaState</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">env</name> <init pos:start="11:25" pos:end="11:35">= <expr pos:start="11:27" pos:end="11:35"><operator pos:start="11:27" pos:end="11:27">&amp;</operator><name pos:start="11:28" pos:end="11:35"><name pos:start="11:28" pos:end="11:30">cpu</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:35">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:15"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:15">bool</name></type> <name pos:start="13:17" pos:end="13:26">tcg_inited</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:6">cs</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:15">env_ptr</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:21">env</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:7">env</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:15">config</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:29"><name pos:start="19:19" pos:end="19:21">xcc</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:29">config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><call pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:17">cpu_exec_init</name><argument_list pos:start="21:18" pos:end="21:35">(<argument pos:start="21:19" pos:end="21:20"><expr pos:start="21:19" pos:end="21:20"><name pos:start="21:19" pos:end="21:20">cs</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:34">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:37">(<expr pos:start="25:9" pos:end="25:36"><call pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:19">tcg_enabled</name><argument_list pos:start="25:20" pos:end="25:21">()</argument_list></call> <operator pos:start="25:23" pos:end="25:24">&amp;&amp;</operator> <operator pos:start="25:26" pos:end="25:26">!</operator><name pos:start="25:27" pos:end="25:36">tcg_inited</name></expr>)</condition> <block pos:start="25:39" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:32">

        <expr_stmt pos:start="27:9" pos:end="27:26"><expr pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:18">tcg_inited</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:25">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><call pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:29">xtensa_translate_init</name><argument_list pos:start="29:30" pos:end="29:31">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
