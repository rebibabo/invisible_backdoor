<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26448.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">configure_output_filter</name><parameter_list pos:start="1:35" pos:end="1:94">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><name pos:start="1:36" pos:end="1:46">FilterGraph</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">fg</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:73"><decl pos:start="1:53" pos:end="1:73"><type pos:start="1:53" pos:end="1:73"><name pos:start="1:53" pos:end="1:64">OutputFilter</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:73">ofilter</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:93"><decl pos:start="1:76" pos:end="1:93"><type pos:start="1:76" pos:end="1:93"><name pos:start="1:76" pos:end="1:88">AVFilterInOut</name> <modifier pos:start="1:90" pos:end="1:90">*</modifier></type><name pos:start="1:91" pos:end="1:93">out</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:18">pix_fmts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">codec</name> <init pos:start="7:27" pos:end="7:51">= <expr pos:start="7:29" pos:end="7:51"><name pos:start="7:29" pos:end="7:51"><name pos:start="7:29" pos:end="7:35">ofilter</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:40">ost</name><operator pos:start="7:41" pos:end="7:42">-&gt;</operator><name pos:start="7:43" pos:end="7:44">st</name><operator pos:start="7:45" pos:end="7:46">-&gt;</operator><name pos:start="7:47" pos:end="7:51">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVFilterContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:32">last_filter</name> <init pos:start="9:34" pos:end="9:50">= <expr pos:start="9:36" pos:end="9:50"><name pos:start="9:36" pos:end="9:50"><name pos:start="9:36" pos:end="9:38">out</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:50">filter_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">pad_idx</name> <init pos:start="11:17" pos:end="11:30">= <expr pos:start="11:19" pos:end="11:30"><name pos:start="11:19" pos:end="11:30"><name pos:start="11:19" pos:end="11:21">out</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:30">pad_idx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="20:0"><decl pos:start="15:5" pos:end="15:72"><type pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:22">AVBufferSinkParams</name> <modifier pos:start="15:24" pos:end="15:24">*</modifier></type><name pos:start="15:25" pos:end="15:41">buffersink_params</name> <init pos:start="15:43" pos:end="15:72">= <expr pos:start="15:45" pos:end="15:72"><call pos:start="15:45" pos:end="15:72"><name pos:start="15:45" pos:end="15:70">av_buffersink_params_alloc</name><argument_list pos:start="15:71" pos:end="15:72">()</argument_list></call></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="19:1" pos:end="19:24">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:24">FF_API_OLD_VSINK_API</name></expr></cpp:if>

    <expr_stmt pos:start="21:5" pos:end="28:0"><expr pos:start="21:5" pos:end="25:68"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="25:68"><name pos:start="21:11" pos:end="21:38">avfilter_graph_create_filter</name><argument_list pos:start="21:39" pos:end="25:68">(<argument pos:start="21:40" pos:end="21:55"><expr pos:start="21:40" pos:end="21:55"><operator pos:start="21:40" pos:end="21:40">&amp;</operator><name pos:start="21:41" pos:end="21:55"><name pos:start="21:41" pos:end="21:47">ofilter</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:55">filter</name></name></expr></argument>,

                                       <argument pos:start="23:40" pos:end="23:73"><expr pos:start="23:40" pos:end="23:73"><call pos:start="23:40" pos:end="23:73"><name pos:start="23:40" pos:end="23:59">avfilter_get_by_name</name><argument_list pos:start="23:60" pos:end="23:73">(<argument pos:start="23:61" pos:end="23:72"><expr pos:start="23:61" pos:end="23:72"><literal type="string" pos:start="23:61" pos:end="23:72">"buffersink"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                       <argument pos:start="25:40" pos:end="25:44"><expr pos:start="25:40" pos:end="25:44"><literal type="string" pos:start="25:40" pos:end="25:44">"out"</literal></expr></argument>, <argument pos:start="25:47" pos:end="25:50"><expr pos:start="25:47" pos:end="25:50"><name pos:start="25:47" pos:end="25:50">NULL</name></expr></argument>, <argument pos:start="25:53" pos:end="25:56"><expr pos:start="25:53" pos:end="25:56"><name pos:start="25:53" pos:end="25:56">NULL</name></expr></argument>, <argument pos:start="25:59" pos:end="25:67"><expr pos:start="25:59" pos:end="25:67"><name pos:start="25:59" pos:end="25:67"><name pos:start="25:59" pos:end="25:60">fg</name><operator pos:start="25:61" pos:end="25:62">-&gt;</operator><name pos:start="25:63" pos:end="25:67">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="27:1" pos:end="27:5">#<cpp:directive pos:start="27:2" pos:end="27:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="29:5" pos:end="36:0"><expr pos:start="29:5" pos:end="33:81"><name pos:start="29:5" pos:end="29:7">ret</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="33:81"><name pos:start="29:11" pos:end="29:38">avfilter_graph_create_filter</name><argument_list pos:start="29:39" pos:end="33:81">(<argument pos:start="29:40" pos:end="29:55"><expr pos:start="29:40" pos:end="29:55"><operator pos:start="29:40" pos:end="29:40">&amp;</operator><name pos:start="29:41" pos:end="29:55"><name pos:start="29:41" pos:end="29:47">ofilter</name><operator pos:start="29:48" pos:end="29:49">-&gt;</operator><name pos:start="29:50" pos:end="29:55">filter</name></name></expr></argument>,

                                       <argument pos:start="31:40" pos:end="31:73"><expr pos:start="31:40" pos:end="31:73"><call pos:start="31:40" pos:end="31:73"><name pos:start="31:40" pos:end="31:59">avfilter_get_by_name</name><argument_list pos:start="31:60" pos:end="31:73">(<argument pos:start="31:61" pos:end="31:72"><expr pos:start="31:61" pos:end="31:72"><literal type="string" pos:start="31:61" pos:end="31:72">"buffersink"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                       <argument pos:start="33:40" pos:end="33:44"><expr pos:start="33:40" pos:end="33:44"><literal type="string" pos:start="33:40" pos:end="33:44">"out"</literal></expr></argument>, <argument pos:start="33:47" pos:end="33:50"><expr pos:start="33:47" pos:end="33:50"><name pos:start="33:47" pos:end="33:50">NULL</name></expr></argument>, <argument pos:start="33:53" pos:end="33:69"><expr pos:start="33:53" pos:end="33:69"><name pos:start="33:53" pos:end="33:69">buffersink_params</name></expr></argument>, <argument pos:start="33:72" pos:end="33:80"><expr pos:start="33:72" pos:end="33:80"><name pos:start="33:72" pos:end="33:80"><name pos:start="33:72" pos:end="33:73">fg</name><operator pos:start="33:74" pos:end="33:75">-&gt;</operator><name pos:start="33:76" pos:end="33:80">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><call pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:12">av_freep</name><argument_list pos:start="37:13" pos:end="37:32">(<argument pos:start="37:14" pos:end="37:31"><expr pos:start="37:14" pos:end="37:31"><operator pos:start="37:14" pos:end="37:14">&amp;</operator><name pos:start="37:15" pos:end="37:31">buffersink_params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="43:19"><if pos:start="41:5" pos:end="43:19">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">&lt;</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:19"><block_content pos:start="43:9" pos:end="43:19">

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="79:5"><if pos:start="47:5" pos:end="79:5">if <condition pos:start="47:8" pos:end="47:38">(<expr pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:13">codec</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:20">width</name></name> <operator pos:start="47:22" pos:end="47:23">||</operator> <name pos:start="47:25" pos:end="47:37"><name pos:start="47:25" pos:end="47:29">codec</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:37">height</name></name></expr>)</condition> <block pos:start="47:40" pos:end="79:5">{<block_content pos:start="49:9" pos:end="77:20">

        <decl_stmt pos:start="49:9" pos:end="49:23"><decl pos:start="49:9" pos:end="49:22"><type pos:start="49:9" pos:end="49:12"><name pos:start="49:9" pos:end="49:12">char</name></type> <name pos:start="49:14" pos:end="49:22"><name pos:start="49:14" pos:end="49:17">args</name><index pos:start="49:18" pos:end="49:22">[<expr pos:start="49:19" pos:end="49:21"><literal type="number" pos:start="49:19" pos:end="49:21">255</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:32"><decl pos:start="51:9" pos:end="51:31"><type pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:23">AVFilterContext</name> <modifier pos:start="51:25" pos:end="51:25">*</modifier></type><name pos:start="51:26" pos:end="51:31">filter</name></decl>;</decl_stmt>



        <expr_stmt pos:start="55:9" pos:end="61:52"><expr pos:start="55:9" pos:end="61:51"><call pos:start="55:9" pos:end="61:51"><name pos:start="55:9" pos:end="55:16">snprintf</name><argument_list pos:start="55:17" pos:end="61:51">(<argument pos:start="55:18" pos:end="55:21"><expr pos:start="55:18" pos:end="55:21"><name pos:start="55:18" pos:end="55:21">args</name></expr></argument>, <argument pos:start="55:24" pos:end="55:35"><expr pos:start="55:24" pos:end="55:35"><sizeof pos:start="55:24" pos:end="55:35">sizeof<argument_list pos:start="55:30" pos:end="55:35">(<argument pos:start="55:31" pos:end="55:34"><expr pos:start="55:31" pos:end="55:34"><name pos:start="55:31" pos:end="55:34">args</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="55:38" pos:end="55:55"><expr pos:start="55:38" pos:end="55:55"><literal type="string" pos:start="55:38" pos:end="55:55">"%d:%d:flags=0x%X"</literal></expr></argument>,

                 <argument pos:start="57:18" pos:end="57:29"><expr pos:start="57:18" pos:end="57:29"><name pos:start="57:18" pos:end="57:29"><name pos:start="57:18" pos:end="57:22">codec</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:29">width</name></name></expr></argument>,

                 <argument pos:start="59:18" pos:end="59:30"><expr pos:start="59:18" pos:end="59:30"><name pos:start="59:18" pos:end="59:30"><name pos:start="59:18" pos:end="59:22">codec</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:30">height</name></name></expr></argument>,

                 <argument pos:start="61:18" pos:end="61:50"><expr pos:start="61:18" pos:end="61:50"><operator pos:start="61:18" pos:end="61:18">(</operator><name pos:start="61:19" pos:end="61:26">unsigned</name><operator pos:start="61:27" pos:end="61:27">)</operator><name pos:start="61:28" pos:end="61:50"><name pos:start="61:28" pos:end="61:34">ofilter</name><operator pos:start="61:35" pos:end="61:36">-&gt;</operator><name pos:start="61:37" pos:end="61:39">ost</name><operator pos:start="61:40" pos:end="61:41">-&gt;</operator><name pos:start="61:42" pos:end="61:50">sws_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="67:23"><if pos:start="63:9" pos:end="67:23">if <condition pos:start="63:12" pos:end="65:82">(<expr pos:start="63:13" pos:end="65:81"><operator pos:start="63:13" pos:end="63:13">(</operator><name pos:start="63:14" pos:end="63:16">ret</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="65:76"><name pos:start="63:20" pos:end="63:47">avfilter_graph_create_filter</name><argument_list pos:start="63:48" pos:end="65:76">(<argument pos:start="63:49" pos:end="63:55"><expr pos:start="63:49" pos:end="63:55"><operator pos:start="63:49" pos:end="63:49">&amp;</operator><name pos:start="63:50" pos:end="63:55">filter</name></expr></argument>, <argument pos:start="63:58" pos:end="63:86"><expr pos:start="63:58" pos:end="63:86"><call pos:start="63:58" pos:end="63:86"><name pos:start="63:58" pos:end="63:77">avfilter_get_by_name</name><argument_list pos:start="63:78" pos:end="63:86">(<argument pos:start="63:79" pos:end="63:85"><expr pos:start="63:79" pos:end="63:85"><literal type="string" pos:start="63:79" pos:end="63:85">"scale"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                                <argument pos:start="65:49" pos:end="65:52"><expr pos:start="65:49" pos:end="65:52"><name pos:start="65:49" pos:end="65:52">NULL</name></expr></argument>, <argument pos:start="65:55" pos:end="65:58"><expr pos:start="65:55" pos:end="65:58"><name pos:start="65:55" pos:end="65:58">args</name></expr></argument>, <argument pos:start="65:61" pos:end="65:64"><expr pos:start="65:61" pos:end="65:64"><name pos:start="65:61" pos:end="65:64">NULL</name></expr></argument>, <argument pos:start="65:67" pos:end="65:75"><expr pos:start="65:67" pos:end="65:75"><name pos:start="65:67" pos:end="65:75"><name pos:start="65:67" pos:end="65:68">fg</name><operator pos:start="65:69" pos:end="65:70">-&gt;</operator><name pos:start="65:71" pos:end="65:75">graph</name></name></expr></argument>)</argument_list></call><operator pos:start="65:77" pos:end="65:77">)</operator> <operator pos:start="65:79" pos:end="65:79">&lt;</operator> <literal type="number" pos:start="65:81" pos:end="65:81">0</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:23"><block_content pos:start="67:13" pos:end="67:23">

            <return pos:start="67:13" pos:end="67:23">return <expr pos:start="67:20" pos:end="67:22"><name pos:start="67:20" pos:end="67:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="69:9" pos:end="71:23"><if pos:start="69:9" pos:end="71:23">if <condition pos:start="69:12" pos:end="69:71">(<expr pos:start="69:13" pos:end="69:70"><operator pos:start="69:13" pos:end="69:13">(</operator><name pos:start="69:14" pos:end="69:16">ret</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <call pos:start="69:20" pos:end="69:65"><name pos:start="69:20" pos:end="69:32">avfilter_link</name><argument_list pos:start="69:33" pos:end="69:65">(<argument pos:start="69:34" pos:end="69:44"><expr pos:start="69:34" pos:end="69:44"><name pos:start="69:34" pos:end="69:44">last_filter</name></expr></argument>, <argument pos:start="69:47" pos:end="69:53"><expr pos:start="69:47" pos:end="69:53"><name pos:start="69:47" pos:end="69:53">pad_idx</name></expr></argument>, <argument pos:start="69:56" pos:end="69:61"><expr pos:start="69:56" pos:end="69:61"><name pos:start="69:56" pos:end="69:61">filter</name></expr></argument>, <argument pos:start="69:64" pos:end="69:64"><expr pos:start="69:64" pos:end="69:64"><literal type="number" pos:start="69:64" pos:end="69:64">0</literal></expr></argument>)</argument_list></call><operator pos:start="69:66" pos:end="69:66">)</operator> <operator pos:start="69:68" pos:end="69:68">&lt;</operator> <literal type="number" pos:start="69:70" pos:end="69:70">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:23"><block_content pos:start="71:13" pos:end="71:23">

            <return pos:start="71:13" pos:end="71:23">return <expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:29"><expr pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:19">last_filter</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <name pos:start="75:23" pos:end="75:28">filter</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:20"><expr pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:15">pad_idx</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="109:5"><if pos:start="83:5" pos:end="109:5">if <condition pos:start="83:8" pos:end="83:53">(<expr pos:start="83:9" pos:end="83:52"><operator pos:start="83:9" pos:end="83:9">(</operator><name pos:start="83:10" pos:end="83:17">pix_fmts</name> <operator pos:start="83:19" pos:end="83:19">=</operator> <call pos:start="83:21" pos:end="83:51"><name pos:start="83:21" pos:end="83:37">choose_pixel_fmts</name><argument_list pos:start="83:38" pos:end="83:51">(<argument pos:start="83:39" pos:end="83:50"><expr pos:start="83:39" pos:end="83:50"><name pos:start="83:39" pos:end="83:50"><name pos:start="83:39" pos:end="83:45">ofilter</name><operator pos:start="83:46" pos:end="83:47">-&gt;</operator><name pos:start="83:48" pos:end="83:50">ost</name></name></expr></argument>)</argument_list></call><operator pos:start="83:52" pos:end="83:52">)</operator></expr>)</condition> <block pos:start="83:55" pos:end="109:5">{<block_content pos:start="85:9" pos:end="107:28">

        <decl_stmt pos:start="85:9" pos:end="85:32"><decl pos:start="85:9" pos:end="85:31"><type pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:23">AVFilterContext</name> <modifier pos:start="85:25" pos:end="85:25">*</modifier></type><name pos:start="85:26" pos:end="85:31">filter</name></decl>;</decl_stmt>

        <if_stmt pos:start="87:9" pos:end="95:23"><if pos:start="87:9" pos:end="95:23">if <condition pos:start="87:12" pos:end="93:64">(<expr pos:start="87:13" pos:end="93:63"><operator pos:start="87:13" pos:end="87:13">(</operator><name pos:start="87:14" pos:end="87:16">ret</name> <operator pos:start="87:18" pos:end="87:18">=</operator> <call pos:start="87:20" pos:end="93:58"><name pos:start="87:20" pos:end="87:47">avfilter_graph_create_filter</name><argument_list pos:start="87:48" pos:end="93:58">(<argument pos:start="87:49" pos:end="87:55"><expr pos:start="87:49" pos:end="87:55"><operator pos:start="87:49" pos:end="87:49">&amp;</operator><name pos:start="87:50" pos:end="87:55">filter</name></expr></argument>,

                                                <argument pos:start="89:49" pos:end="89:78"><expr pos:start="89:49" pos:end="89:78"><call pos:start="89:49" pos:end="89:78"><name pos:start="89:49" pos:end="89:68">avfilter_get_by_name</name><argument_list pos:start="89:69" pos:end="89:78">(<argument pos:start="89:70" pos:end="89:77"><expr pos:start="89:70" pos:end="89:77"><literal type="string" pos:start="89:70" pos:end="89:77">"format"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                                <argument pos:start="91:49" pos:end="91:56"><expr pos:start="91:49" pos:end="91:56"><literal type="string" pos:start="91:49" pos:end="91:56">"format"</literal></expr></argument>, <argument pos:start="91:59" pos:end="91:66"><expr pos:start="91:59" pos:end="91:66"><name pos:start="91:59" pos:end="91:66">pix_fmts</name></expr></argument>, <argument pos:start="91:69" pos:end="91:72"><expr pos:start="91:69" pos:end="91:72"><name pos:start="91:69" pos:end="91:72">NULL</name></expr></argument>,

                                                <argument pos:start="93:49" pos:end="93:57"><expr pos:start="93:49" pos:end="93:57"><name pos:start="93:49" pos:end="93:57"><name pos:start="93:49" pos:end="93:50">fg</name><operator pos:start="93:51" pos:end="93:52">-&gt;</operator><name pos:start="93:53" pos:end="93:57">graph</name></name></expr></argument>)</argument_list></call><operator pos:start="93:59" pos:end="93:59">)</operator> <operator pos:start="93:61" pos:end="93:61">&lt;</operator> <literal type="number" pos:start="93:63" pos:end="93:63">0</literal></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:23"><block_content pos:start="95:13" pos:end="95:23">

            <return pos:start="95:13" pos:end="95:23">return <expr pos:start="95:20" pos:end="95:22"><name pos:start="95:20" pos:end="95:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="97:9" pos:end="99:23"><if pos:start="97:9" pos:end="99:23">if <condition pos:start="97:12" pos:end="97:71">(<expr pos:start="97:13" pos:end="97:70"><operator pos:start="97:13" pos:end="97:13">(</operator><name pos:start="97:14" pos:end="97:16">ret</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <call pos:start="97:20" pos:end="97:65"><name pos:start="97:20" pos:end="97:32">avfilter_link</name><argument_list pos:start="97:33" pos:end="97:65">(<argument pos:start="97:34" pos:end="97:44"><expr pos:start="97:34" pos:end="97:44"><name pos:start="97:34" pos:end="97:44">last_filter</name></expr></argument>, <argument pos:start="97:47" pos:end="97:53"><expr pos:start="97:47" pos:end="97:53"><name pos:start="97:47" pos:end="97:53">pad_idx</name></expr></argument>, <argument pos:start="97:56" pos:end="97:61"><expr pos:start="97:56" pos:end="97:61"><name pos:start="97:56" pos:end="97:61">filter</name></expr></argument>, <argument pos:start="97:64" pos:end="97:64"><expr pos:start="97:64" pos:end="97:64"><literal type="number" pos:start="97:64" pos:end="97:64">0</literal></expr></argument>)</argument_list></call><operator pos:start="97:66" pos:end="97:66">)</operator> <operator pos:start="97:68" pos:end="97:68">&lt;</operator> <literal type="number" pos:start="97:70" pos:end="97:70">0</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:23"><block_content pos:start="99:13" pos:end="99:23">

            <return pos:start="99:13" pos:end="99:23">return <expr pos:start="99:20" pos:end="99:22"><name pos:start="99:20" pos:end="99:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="103:9" pos:end="103:29"><expr pos:start="103:9" pos:end="103:28"><name pos:start="103:9" pos:end="103:19">last_filter</name> <operator pos:start="103:21" pos:end="103:21">=</operator> <name pos:start="103:23" pos:end="103:28">filter</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:24"><expr pos:start="105:9" pos:end="105:23"><name pos:start="105:9" pos:end="105:15">pad_idx</name>     <operator pos:start="105:21" pos:end="105:21">=</operator> <literal type="number" pos:start="105:23" pos:end="105:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:28"><expr pos:start="107:9" pos:end="107:27"><call pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:16">av_freep</name><argument_list pos:start="107:17" pos:end="107:27">(<argument pos:start="107:18" pos:end="107:26"><expr pos:start="107:18" pos:end="107:26"><operator pos:start="107:18" pos:end="107:18">&amp;</operator><name pos:start="107:19" pos:end="107:26">pix_fmts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="115:19"><if pos:start="113:5" pos:end="115:19">if <condition pos:start="113:8" pos:end="113:76">(<expr pos:start="113:9" pos:end="113:75"><operator pos:start="113:9" pos:end="113:9">(</operator><name pos:start="113:10" pos:end="113:12">ret</name> <operator pos:start="113:14" pos:end="113:14">=</operator> <call pos:start="113:16" pos:end="113:70"><name pos:start="113:16" pos:end="113:28">avfilter_link</name><argument_list pos:start="113:29" pos:end="113:70">(<argument pos:start="113:30" pos:end="113:40"><expr pos:start="113:30" pos:end="113:40"><name pos:start="113:30" pos:end="113:40">last_filter</name></expr></argument>, <argument pos:start="113:43" pos:end="113:49"><expr pos:start="113:43" pos:end="113:49"><name pos:start="113:43" pos:end="113:49">pad_idx</name></expr></argument>, <argument pos:start="113:52" pos:end="113:66"><expr pos:start="113:52" pos:end="113:66"><name pos:start="113:52" pos:end="113:66"><name pos:start="113:52" pos:end="113:58">ofilter</name><operator pos:start="113:59" pos:end="113:60">-&gt;</operator><name pos:start="113:61" pos:end="113:66">filter</name></name></expr></argument>, <argument pos:start="113:69" pos:end="113:69"><expr pos:start="113:69" pos:end="113:69"><literal type="number" pos:start="113:69" pos:end="113:69">0</literal></expr></argument>)</argument_list></call><operator pos:start="113:71" pos:end="113:71">)</operator> <operator pos:start="113:73" pos:end="113:73">&lt;</operator> <literal type="number" pos:start="113:75" pos:end="113:75">0</literal></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:19"><block_content pos:start="115:9" pos:end="115:19">

        <return pos:start="115:9" pos:end="115:19">return <expr pos:start="115:16" pos:end="115:18"><name pos:start="115:16" pos:end="115:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="119:5" pos:end="119:13">return <expr pos:start="119:12" pos:end="119:12"><literal type="number" pos:start="119:12" pos:end="119:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
