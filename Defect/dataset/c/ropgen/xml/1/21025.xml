<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21025.c" pos:tabs="8"><function pos:start="1:1" pos:end="52:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">bmdma_map</name><parameter_list pos:start="1:22" pos:end="3:59">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:31">PCIDevice</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:40">pci_dev</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:56">region_num</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:33"><decl pos:start="3:21" pos:end="3:33"><type pos:start="3:21" pos:end="3:33"><name pos:start="3:21" pos:end="3:28">pcibus_t</name></type> <name pos:start="3:30" pos:end="3:33">addr</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:48"><decl pos:start="3:36" pos:end="3:48"><type pos:start="3:36" pos:end="3:48"><name pos:start="3:36" pos:end="3:43">pcibus_t</name></type> <name pos:start="3:45" pos:end="3:48">size</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:58"><decl pos:start="3:51" pos:end="3:58"><type pos:start="3:51" pos:end="3:58"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:58">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="52:1">{<block_content pos:start="7:5" pos:end="50:5">

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">PCIIDEState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">d</name> <init pos:start="7:20" pos:end="7:57">= <expr pos:start="7:22" pos:end="7:57"><call pos:start="7:22" pos:end="7:57"><name pos:start="7:22" pos:end="7:30">DO_UPCAST</name><argument_list pos:start="7:31" pos:end="7:57">(<argument pos:start="7:32" pos:end="7:42"><expr pos:start="7:32" pos:end="7:42"><name pos:start="7:32" pos:end="7:42">PCIIDEState</name></expr></argument>, <argument pos:start="7:45" pos:end="7:47"><expr pos:start="7:45" pos:end="7:47"><name pos:start="7:45" pos:end="7:47">dev</name></expr></argument>, <argument pos:start="7:50" pos:end="7:56"><expr pos:start="7:50" pos:end="7:56"><name pos:start="7:50" pos:end="7:56">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="50:5">for<control pos:start="13:8" pos:end="13:25">(<init pos:start="13:9" pos:end="13:14"><expr pos:start="13:9" pos:end="13:13"><name pos:start="13:9" pos:end="13:9">i</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <literal type="number" pos:start="13:13" pos:end="13:13">0</literal></expr>;</init><condition pos:start="13:15" pos:end="13:20"><expr pos:start="13:15" pos:end="13:19"><name pos:start="13:15" pos:end="13:15">i</name> <operator pos:start="13:17" pos:end="13:17">&lt;</operator> <literal type="number" pos:start="13:19" pos:end="13:19">2</literal></expr>;</condition> <incr pos:start="13:22" pos:end="13:24"><expr pos:start="13:22" pos:end="13:24"><name pos:start="13:22" pos:end="13:22">i</name><operator pos:start="13:23" pos:end="13:24">++</operator></expr></incr>)</control> <block pos:start="13:27" pos:end="50:5">{<block_content pos:start="15:9" pos:end="48:18">

        <decl_stmt pos:start="15:9" pos:end="15:38"><decl pos:start="15:9" pos:end="15:37"><type pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:18">BMDMAState</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:22">bm</name> <init pos:start="15:24" pos:end="15:37">= <expr pos:start="15:26" pos:end="15:37"><operator pos:start="15:26" pos:end="15:26">&amp;</operator><name pos:start="15:27" pos:end="15:37"><name pos:start="15:27" pos:end="15:27">d</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:34">bmdma</name><index pos:start="15:35" pos:end="15:37">[<expr pos:start="15:36" pos:end="15:36"><name pos:start="15:36" pos:end="15:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:29"><expr pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:9">d</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:14">bus</name><index pos:start="17:15" pos:end="17:17">[<expr pos:start="17:16" pos:end="17:16"><name pos:start="17:16" pos:end="17:16">i</name></expr>]</index></name><operator pos:start="17:18" pos:end="17:18">.</operator><name pos:start="17:19" pos:end="17:23">bmdma</name> <operator pos:start="17:25" pos:end="17:25">=</operator> <name pos:start="17:27" pos:end="17:28">bm</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:27"><expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:10">bm</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:15">bus</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:24"><name pos:start="19:19" pos:end="19:19">d</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:24">bus</name></name><operator pos:start="19:25" pos:end="19:25">+</operator><name pos:start="19:26" pos:end="19:26">i</name></expr>;</expr_stmt>


        <expr_stmt pos:start="22:9" pos:end="22:65"><expr pos:start="22:9" pos:end="22:64"><call pos:start="22:9" pos:end="22:64"><name pos:start="22:9" pos:end="22:40">qemu_add_vm_change_state_handler</name><argument_list pos:start="22:41" pos:end="22:64">(<argument pos:start="22:42" pos:end="22:59"><expr pos:start="22:42" pos:end="22:59"><name pos:start="22:42" pos:end="22:59">ide_dma_restart_cb</name></expr></argument>, <argument pos:start="22:62" pos:end="22:63"><expr pos:start="22:62" pos:end="22:63"><name pos:start="22:62" pos:end="22:63">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="26:9" pos:end="26:64"><expr pos:start="26:9" pos:end="26:63"><call pos:start="26:9" pos:end="26:63"><name pos:start="26:9" pos:end="26:29">register_ioport_write</name><argument_list pos:start="26:30" pos:end="26:63">(<argument pos:start="26:31" pos:end="26:34"><expr pos:start="26:31" pos:end="26:34"><name pos:start="26:31" pos:end="26:34">addr</name></expr></argument>, <argument pos:start="26:37" pos:end="26:37"><expr pos:start="26:37" pos:end="26:37"><literal type="number" pos:start="26:37" pos:end="26:37">1</literal></expr></argument>, <argument pos:start="26:40" pos:end="26:40"><expr pos:start="26:40" pos:end="26:40"><literal type="number" pos:start="26:40" pos:end="26:40">1</literal></expr></argument>, <argument pos:start="26:43" pos:end="26:58"><expr pos:start="26:43" pos:end="26:58"><name pos:start="26:43" pos:end="26:58">bmdma_cmd_writeb</name></expr></argument>, <argument pos:start="26:61" pos:end="26:62"><expr pos:start="26:61" pos:end="26:62"><name pos:start="26:61" pos:end="26:62">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="30:9" pos:end="30:64"><expr pos:start="30:9" pos:end="30:63"><call pos:start="30:9" pos:end="30:63"><name pos:start="30:9" pos:end="30:29">register_ioport_write</name><argument_list pos:start="30:30" pos:end="30:63">(<argument pos:start="30:31" pos:end="30:38"><expr pos:start="30:31" pos:end="30:38"><name pos:start="30:31" pos:end="30:34">addr</name> <operator pos:start="30:36" pos:end="30:36">+</operator> <literal type="number" pos:start="30:38" pos:end="30:38">1</literal></expr></argument>, <argument pos:start="30:41" pos:end="30:41"><expr pos:start="30:41" pos:end="30:41"><literal type="number" pos:start="30:41" pos:end="30:41">3</literal></expr></argument>, <argument pos:start="30:44" pos:end="30:44"><expr pos:start="30:44" pos:end="30:44"><literal type="number" pos:start="30:44" pos:end="30:44">1</literal></expr></argument>, <argument pos:start="30:47" pos:end="30:58"><expr pos:start="30:47" pos:end="30:58"><name pos:start="30:47" pos:end="30:58">bmdma_writeb</name></expr></argument>, <argument pos:start="30:61" pos:end="30:62"><expr pos:start="30:61" pos:end="30:62"><name pos:start="30:61" pos:end="30:62">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="32:9" pos:end="32:58"><expr pos:start="32:9" pos:end="32:57"><call pos:start="32:9" pos:end="32:57"><name pos:start="32:9" pos:end="32:28">register_ioport_read</name><argument_list pos:start="32:29" pos:end="32:57">(<argument pos:start="32:30" pos:end="32:33"><expr pos:start="32:30" pos:end="32:33"><name pos:start="32:30" pos:end="32:33">addr</name></expr></argument>, <argument pos:start="32:36" pos:end="32:36"><expr pos:start="32:36" pos:end="32:36"><literal type="number" pos:start="32:36" pos:end="32:36">4</literal></expr></argument>, <argument pos:start="32:39" pos:end="32:39"><expr pos:start="32:39" pos:end="32:39"><literal type="number" pos:start="32:39" pos:end="32:39">1</literal></expr></argument>, <argument pos:start="32:42" pos:end="32:52"><expr pos:start="32:42" pos:end="32:52"><name pos:start="32:42" pos:end="32:52">bmdma_readb</name></expr></argument>, <argument pos:start="32:55" pos:end="32:56"><expr pos:start="32:55" pos:end="32:56"><name pos:start="32:55" pos:end="32:56">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="36:9" pos:end="36:69"><expr pos:start="36:9" pos:end="36:68"><call pos:start="36:9" pos:end="36:68"><name pos:start="36:9" pos:end="36:29">register_ioport_write</name><argument_list pos:start="36:30" pos:end="36:68">(<argument pos:start="36:31" pos:end="36:38"><expr pos:start="36:31" pos:end="36:38"><name pos:start="36:31" pos:end="36:34">addr</name> <operator pos:start="36:36" pos:end="36:36">+</operator> <literal type="number" pos:start="36:38" pos:end="36:38">4</literal></expr></argument>, <argument pos:start="36:41" pos:end="36:41"><expr pos:start="36:41" pos:end="36:41"><literal type="number" pos:start="36:41" pos:end="36:41">4</literal></expr></argument>, <argument pos:start="36:44" pos:end="36:44"><expr pos:start="36:44" pos:end="36:44"><literal type="number" pos:start="36:44" pos:end="36:44">1</literal></expr></argument>, <argument pos:start="36:47" pos:end="36:63"><expr pos:start="36:47" pos:end="36:63"><name pos:start="36:47" pos:end="36:63">bmdma_addr_writeb</name></expr></argument>, <argument pos:start="36:66" pos:end="36:67"><expr pos:start="36:66" pos:end="36:67"><name pos:start="36:66" pos:end="36:67">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="38:9" pos:end="38:67"><expr pos:start="38:9" pos:end="38:66"><call pos:start="38:9" pos:end="38:66"><name pos:start="38:9" pos:end="38:28">register_ioport_read</name><argument_list pos:start="38:29" pos:end="38:66">(<argument pos:start="38:30" pos:end="38:37"><expr pos:start="38:30" pos:end="38:37"><name pos:start="38:30" pos:end="38:33">addr</name> <operator pos:start="38:35" pos:end="38:35">+</operator> <literal type="number" pos:start="38:37" pos:end="38:37">4</literal></expr></argument>, <argument pos:start="38:40" pos:end="38:40"><expr pos:start="38:40" pos:end="38:40"><literal type="number" pos:start="38:40" pos:end="38:40">4</literal></expr></argument>, <argument pos:start="38:43" pos:end="38:43"><expr pos:start="38:43" pos:end="38:43"><literal type="number" pos:start="38:43" pos:end="38:43">1</literal></expr></argument>, <argument pos:start="38:46" pos:end="38:61"><expr pos:start="38:46" pos:end="38:61"><name pos:start="38:46" pos:end="38:61">bmdma_addr_readb</name></expr></argument>, <argument pos:start="38:64" pos:end="38:65"><expr pos:start="38:64" pos:end="38:65"><name pos:start="38:64" pos:end="38:65">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="40:9" pos:end="40:69"><expr pos:start="40:9" pos:end="40:68"><call pos:start="40:9" pos:end="40:68"><name pos:start="40:9" pos:end="40:29">register_ioport_write</name><argument_list pos:start="40:30" pos:end="40:68">(<argument pos:start="40:31" pos:end="40:38"><expr pos:start="40:31" pos:end="40:38"><name pos:start="40:31" pos:end="40:34">addr</name> <operator pos:start="40:36" pos:end="40:36">+</operator> <literal type="number" pos:start="40:38" pos:end="40:38">4</literal></expr></argument>, <argument pos:start="40:41" pos:end="40:41"><expr pos:start="40:41" pos:end="40:41"><literal type="number" pos:start="40:41" pos:end="40:41">4</literal></expr></argument>, <argument pos:start="40:44" pos:end="40:44"><expr pos:start="40:44" pos:end="40:44"><literal type="number" pos:start="40:44" pos:end="40:44">2</literal></expr></argument>, <argument pos:start="40:47" pos:end="40:63"><expr pos:start="40:47" pos:end="40:63"><name pos:start="40:47" pos:end="40:63">bmdma_addr_writew</name></expr></argument>, <argument pos:start="40:66" pos:end="40:67"><expr pos:start="40:66" pos:end="40:67"><name pos:start="40:66" pos:end="40:67">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="42:9" pos:end="42:67"><expr pos:start="42:9" pos:end="42:66"><call pos:start="42:9" pos:end="42:66"><name pos:start="42:9" pos:end="42:28">register_ioport_read</name><argument_list pos:start="42:29" pos:end="42:66">(<argument pos:start="42:30" pos:end="42:37"><expr pos:start="42:30" pos:end="42:37"><name pos:start="42:30" pos:end="42:33">addr</name> <operator pos:start="42:35" pos:end="42:35">+</operator> <literal type="number" pos:start="42:37" pos:end="42:37">4</literal></expr></argument>, <argument pos:start="42:40" pos:end="42:40"><expr pos:start="42:40" pos:end="42:40"><literal type="number" pos:start="42:40" pos:end="42:40">4</literal></expr></argument>, <argument pos:start="42:43" pos:end="42:43"><expr pos:start="42:43" pos:end="42:43"><literal type="number" pos:start="42:43" pos:end="42:43">2</literal></expr></argument>, <argument pos:start="42:46" pos:end="42:61"><expr pos:start="42:46" pos:end="42:61"><name pos:start="42:46" pos:end="42:61">bmdma_addr_readw</name></expr></argument>, <argument pos:start="42:64" pos:end="42:65"><expr pos:start="42:64" pos:end="42:65"><name pos:start="42:64" pos:end="42:65">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="44:9" pos:end="44:69"><expr pos:start="44:9" pos:end="44:68"><call pos:start="44:9" pos:end="44:68"><name pos:start="44:9" pos:end="44:29">register_ioport_write</name><argument_list pos:start="44:30" pos:end="44:68">(<argument pos:start="44:31" pos:end="44:38"><expr pos:start="44:31" pos:end="44:38"><name pos:start="44:31" pos:end="44:34">addr</name> <operator pos:start="44:36" pos:end="44:36">+</operator> <literal type="number" pos:start="44:38" pos:end="44:38">4</literal></expr></argument>, <argument pos:start="44:41" pos:end="44:41"><expr pos:start="44:41" pos:end="44:41"><literal type="number" pos:start="44:41" pos:end="44:41">4</literal></expr></argument>, <argument pos:start="44:44" pos:end="44:44"><expr pos:start="44:44" pos:end="44:44"><literal type="number" pos:start="44:44" pos:end="44:44">4</literal></expr></argument>, <argument pos:start="44:47" pos:end="44:63"><expr pos:start="44:47" pos:end="44:63"><name pos:start="44:47" pos:end="44:63">bmdma_addr_writel</name></expr></argument>, <argument pos:start="44:66" pos:end="44:67"><expr pos:start="44:66" pos:end="44:67"><name pos:start="44:66" pos:end="44:67">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="46:9" pos:end="46:67"><expr pos:start="46:9" pos:end="46:66"><call pos:start="46:9" pos:end="46:66"><name pos:start="46:9" pos:end="46:28">register_ioport_read</name><argument_list pos:start="46:29" pos:end="46:66">(<argument pos:start="46:30" pos:end="46:37"><expr pos:start="46:30" pos:end="46:37"><name pos:start="46:30" pos:end="46:33">addr</name> <operator pos:start="46:35" pos:end="46:35">+</operator> <literal type="number" pos:start="46:37" pos:end="46:37">4</literal></expr></argument>, <argument pos:start="46:40" pos:end="46:40"><expr pos:start="46:40" pos:end="46:40"><literal type="number" pos:start="46:40" pos:end="46:40">4</literal></expr></argument>, <argument pos:start="46:43" pos:end="46:43"><expr pos:start="46:43" pos:end="46:43"><literal type="number" pos:start="46:43" pos:end="46:43">4</literal></expr></argument>, <argument pos:start="46:46" pos:end="46:61"><expr pos:start="46:46" pos:end="46:61"><name pos:start="46:46" pos:end="46:61">bmdma_addr_readl</name></expr></argument>, <argument pos:start="46:64" pos:end="46:65"><expr pos:start="46:64" pos:end="46:65"><name pos:start="46:64" pos:end="46:65">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="48:9" pos:end="48:18"><expr pos:start="48:9" pos:end="48:17"><name pos:start="48:9" pos:end="48:12">addr</name> <operator pos:start="48:14" pos:end="48:15">+=</operator> <literal type="number" pos:start="48:17" pos:end="48:17">8</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function></unit>
