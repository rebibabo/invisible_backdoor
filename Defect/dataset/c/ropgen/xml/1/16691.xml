<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16691.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">ff_hevc_cabac_init</name><parameter_list pos:start="1:23" pos:end="1:55">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:34">HEVCContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:54">ctb_addr_ts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:13">

    <if_stmt pos:start="5:5" pos:end="99:5"><if pos:start="5:5" pos:end="41:5">if <condition pos:start="5:8" pos:end="5:77">(<expr pos:start="5:9" pos:end="5:76"><name pos:start="5:9" pos:end="5:19">ctb_addr_ts</name> <operator pos:start="5:21" pos:end="5:22">==</operator> <name pos:start="5:24" pos:end="5:76"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:28">ps</name><operator pos:start="5:29" pos:end="5:29">.</operator><name pos:start="5:30" pos:end="5:32">pps</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:51">ctb_addr_rs_to_ts</name><index pos:start="5:52" pos:end="5:76">[<expr pos:start="5:53" pos:end="5:75"><name pos:start="5:53" pos:end="5:75"><name pos:start="5:53" pos:end="5:53">s</name><operator pos:start="5:54" pos:end="5:55">-&gt;</operator><name pos:start="5:56" pos:end="5:57">sh</name><operator pos:start="5:58" pos:end="5:58">.</operator><name pos:start="5:59" pos:end="5:75">slice_ctb_addr_rs</name></name></expr>]</index></name></expr>)</condition> <block pos:start="5:79" pos:end="41:5">{<block_content pos:start="7:9" pos:end="39:9">

        <decl_stmt pos:start="7:9" pos:end="7:40"><decl pos:start="7:9" pos:end="7:39"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:15">ret</name> <init pos:start="7:17" pos:end="7:39">= <expr pos:start="7:19" pos:end="7:39"><call pos:start="7:19" pos:end="7:39"><name pos:start="7:19" pos:end="7:36">cabac_init_decoder</name><argument_list pos:start="7:37" pos:end="7:39">(<argument pos:start="7:38" pos:end="7:38"><expr pos:start="7:38" pos:end="7:38"><name pos:start="7:38" pos:end="7:38">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="9:9" pos:end="11:23"><if pos:start="9:9" pos:end="11:23">if <condition pos:start="9:12" pos:end="9:20">(<expr pos:start="9:13" pos:end="9:19"><name pos:start="9:13" pos:end="9:15">ret</name> <operator pos:start="9:17" pos:end="9:17">&lt;</operator> <literal type="number" pos:start="9:19" pos:end="9:19">0</literal></expr>)</condition><block type="pseudo" pos:start="11:13" pos:end="11:23"><block_content pos:start="11:13" pos:end="11:23">

            <return pos:start="11:13" pos:end="11:23">return <expr pos:start="11:20" pos:end="11:22"><name pos:start="11:20" pos:end="11:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="13:9" pos:end="19:32"><if pos:start="13:9" pos:end="19:32">if <condition pos:start="13:12" pos:end="17:85">(<expr pos:start="13:13" pos:end="17:84"><name pos:start="13:13" pos:end="13:46"><name pos:start="13:13" pos:end="13:13">s</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:17">sh</name><operator pos:start="13:18" pos:end="13:18">.</operator><name pos:start="13:19" pos:end="13:46">dependent_slice_segment_flag</name></name> <operator pos:start="13:48" pos:end="13:49">==</operator> <literal type="number" pos:start="13:51" pos:end="13:51">0</literal> <operator pos:start="13:53" pos:end="13:54">||</operator>

            <operator pos:start="15:13" pos:end="15:13">(</operator><name pos:start="15:14" pos:end="15:42"><name pos:start="15:14" pos:end="15:14">s</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:18">ps</name><operator pos:start="15:19" pos:end="15:19">.</operator><name pos:start="15:20" pos:end="15:22">pps</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:42">tiles_enabled_flag</name></name> <operator pos:start="15:44" pos:end="15:45">&amp;&amp;</operator>

             <name pos:start="17:14" pos:end="17:44"><name pos:start="17:14" pos:end="17:14">s</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:18">ps</name><operator pos:start="17:19" pos:end="17:19">.</operator><name pos:start="17:20" pos:end="17:22">pps</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:31">tile_id</name><index pos:start="17:32" pos:end="17:44">[<expr pos:start="17:33" pos:end="17:43"><name pos:start="17:33" pos:end="17:43">ctb_addr_ts</name></expr>]</index></name> <operator pos:start="17:46" pos:end="17:47">!=</operator> <name pos:start="17:49" pos:end="17:83"><name pos:start="17:49" pos:end="17:49">s</name><operator pos:start="17:50" pos:end="17:51">-&gt;</operator><name pos:start="17:52" pos:end="17:53">ps</name><operator pos:start="17:54" pos:end="17:54">.</operator><name pos:start="17:55" pos:end="17:57">pps</name><operator pos:start="17:58" pos:end="17:59">-&gt;</operator><name pos:start="17:60" pos:end="17:66">tile_id</name><index pos:start="17:67" pos:end="17:83">[<expr pos:start="17:68" pos:end="17:82"><name pos:start="17:68" pos:end="17:78">ctb_addr_ts</name> <operator pos:start="17:80" pos:end="17:80">-</operator> <literal type="number" pos:start="17:82" pos:end="17:82">1</literal></expr>]</index></name><operator pos:start="17:84" pos:end="17:84">)</operator></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:32"><block_content pos:start="19:13" pos:end="19:32">

            <expr_stmt pos:start="19:13" pos:end="19:32"><expr pos:start="19:13" pos:end="19:31"><call pos:start="19:13" pos:end="19:31"><name pos:start="19:13" pos:end="19:28">cabac_init_state</name><argument_list pos:start="19:29" pos:end="19:31">(<argument pos:start="19:30" pos:end="19:30"><expr pos:start="19:30" pos:end="19:30"><name pos:start="19:30" pos:end="19:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="23:9" pos:end="39:9"><if pos:start="23:9" pos:end="39:9">if <condition pos:start="23:12" pos:end="25:56">(<expr pos:start="23:13" pos:end="25:55"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:42"><name pos:start="23:14" pos:end="23:14">s</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:18">sh</name><operator pos:start="23:19" pos:end="23:19">.</operator><name pos:start="23:20" pos:end="23:42">first_slice_in_pic_flag</name></name> <operator pos:start="23:44" pos:end="23:45">&amp;&amp;</operator>

            <name pos:start="25:13" pos:end="25:55"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:17">ps</name><operator pos:start="25:18" pos:end="25:18">.</operator><name pos:start="25:19" pos:end="25:21">pps</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:55">entropy_coding_sync_enabled_flag</name></name></expr>)</condition> <block pos:start="25:58" pos:end="39:9">{<block_content pos:start="27:13" pos:end="37:13">

            <if_stmt pos:start="27:13" pos:end="37:13"><if pos:start="27:13" pos:end="37:13">if <condition pos:start="27:16" pos:end="27:56">(<expr pos:start="27:17" pos:end="27:55"><name pos:start="27:17" pos:end="27:27">ctb_addr_ts</name> <operator pos:start="27:29" pos:end="27:29">%</operator> <name pos:start="27:31" pos:end="27:50"><name pos:start="27:31" pos:end="27:31">s</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:35">ps</name><operator pos:start="27:36" pos:end="27:36">.</operator><name pos:start="27:37" pos:end="27:39">sps</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:50">ctb_width</name></name> <operator pos:start="27:52" pos:end="27:53">==</operator> <literal type="number" pos:start="27:55" pos:end="27:55">0</literal></expr>)</condition> <block pos:start="27:58" pos:end="37:13">{<block_content pos:start="29:17" pos:end="35:35">

                <if_stmt pos:start="29:17" pos:end="35:35"><if pos:start="29:17" pos:end="31:40">if <condition pos:start="29:20" pos:end="29:46">(<expr pos:start="29:21" pos:end="29:45"><name pos:start="29:21" pos:end="29:40"><name pos:start="29:21" pos:end="29:21">s</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:25">ps</name><operator pos:start="29:26" pos:end="29:26">.</operator><name pos:start="29:27" pos:end="29:29">sps</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:40">ctb_width</name></name> <operator pos:start="29:42" pos:end="29:43">==</operator> <literal type="number" pos:start="29:45" pos:end="29:45">1</literal></expr>)</condition><block type="pseudo" pos:start="31:21" pos:end="31:40"><block_content pos:start="31:21" pos:end="31:40">

                    <expr_stmt pos:start="31:21" pos:end="31:40"><expr pos:start="31:21" pos:end="31:39"><call pos:start="31:21" pos:end="31:39"><name pos:start="31:21" pos:end="31:36">cabac_init_state</name><argument_list pos:start="31:37" pos:end="31:39">(<argument pos:start="31:38" pos:end="31:38"><expr pos:start="31:38" pos:end="31:38"><name pos:start="31:38" pos:end="31:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="33:17" pos:end="35:35">else if <condition pos:start="33:25" pos:end="33:65">(<expr pos:start="33:26" pos:end="33:64"><name pos:start="33:26" pos:end="33:59"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:30">sh</name><operator pos:start="33:31" pos:end="33:31">.</operator><name pos:start="33:32" pos:end="33:59">dependent_slice_segment_flag</name></name> <operator pos:start="33:61" pos:end="33:62">==</operator> <literal type="number" pos:start="33:64" pos:end="33:64">1</literal></expr>)</condition><block type="pseudo" pos:start="35:21" pos:end="35:35"><block_content pos:start="35:21" pos:end="35:35">

                    <expr_stmt pos:start="35:21" pos:end="35:35"><expr pos:start="35:21" pos:end="35:34"><call pos:start="35:21" pos:end="35:34"><name pos:start="35:21" pos:end="35:31">load_states</name><argument_list pos:start="35:32" pos:end="35:34">(<argument pos:start="35:33" pos:end="35:33"><expr pos:start="35:33" pos:end="35:33"><name pos:start="35:33" pos:end="35:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="99:5">else <block pos:start="41:12" pos:end="99:5">{<block_content pos:start="43:9" pos:end="97:9">

        <if_stmt pos:start="43:9" pos:end="63:9"><if pos:start="43:9" pos:end="63:9">if <condition pos:start="43:12" pos:end="45:83">(<expr pos:start="43:13" pos:end="45:82"><name pos:start="43:13" pos:end="43:41"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:17">ps</name><operator pos:start="43:18" pos:end="43:18">.</operator><name pos:start="43:19" pos:end="43:21">pps</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:41">tiles_enabled_flag</name></name> <operator pos:start="43:43" pos:end="43:44">&amp;&amp;</operator>

            <name pos:start="45:13" pos:end="45:43"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:17">ps</name><operator pos:start="45:18" pos:end="45:18">.</operator><name pos:start="45:19" pos:end="45:21">pps</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:30">tile_id</name><index pos:start="45:31" pos:end="45:43">[<expr pos:start="45:32" pos:end="45:42"><name pos:start="45:32" pos:end="45:42">ctb_addr_ts</name></expr>]</index></name> <operator pos:start="45:45" pos:end="45:46">!=</operator> <name pos:start="45:48" pos:end="45:82"><name pos:start="45:48" pos:end="45:48">s</name><operator pos:start="45:49" pos:end="45:50">-&gt;</operator><name pos:start="45:51" pos:end="45:52">ps</name><operator pos:start="45:53" pos:end="45:53">.</operator><name pos:start="45:54" pos:end="45:56">pps</name><operator pos:start="45:57" pos:end="45:58">-&gt;</operator><name pos:start="45:59" pos:end="45:65">tile_id</name><index pos:start="45:66" pos:end="45:82">[<expr pos:start="45:67" pos:end="45:81"><name pos:start="45:67" pos:end="45:77">ctb_addr_ts</name> <operator pos:start="45:79" pos:end="45:79">-</operator> <literal type="number" pos:start="45:81" pos:end="45:81">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="45:85" pos:end="63:9">{<block_content pos:start="47:13" pos:end="61:32">

            <if_stmt pos:start="47:13" pos:end="59:13"><if pos:start="47:13" pos:end="49:40">if <condition pos:start="47:16" pos:end="47:39">(<expr pos:start="47:17" pos:end="47:38"><name pos:start="47:17" pos:end="47:33"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:33">threads_number</name></name> <operator pos:start="47:35" pos:end="47:36">==</operator> <literal type="number" pos:start="47:38" pos:end="47:38">1</literal></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:40"><block_content pos:start="49:17" pos:end="49:40">

                <expr_stmt pos:start="49:17" pos:end="49:40"><expr pos:start="49:17" pos:end="49:39"><call pos:start="49:17" pos:end="49:39"><name pos:start="49:17" pos:end="49:28">cabac_reinit</name><argument_list pos:start="49:29" pos:end="49:39">(<argument pos:start="49:30" pos:end="49:38"><expr pos:start="49:30" pos:end="49:38"><name pos:start="49:30" pos:end="49:38"><name pos:start="49:30" pos:end="49:30">s</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:38">HEVClc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="51:13" pos:end="59:13">else <block pos:start="51:18" pos:end="59:13">{<block_content pos:start="53:17" pos:end="57:31">

                <decl_stmt pos:start="53:17" pos:end="53:48"><decl pos:start="53:17" pos:end="53:47"><type pos:start="53:17" pos:end="53:19"><name pos:start="53:17" pos:end="53:19">int</name></type> <name pos:start="53:21" pos:end="53:23">ret</name> <init pos:start="53:25" pos:end="53:47">= <expr pos:start="53:27" pos:end="53:47"><call pos:start="53:27" pos:end="53:47"><name pos:start="53:27" pos:end="53:44">cabac_init_decoder</name><argument_list pos:start="53:45" pos:end="53:47">(<argument pos:start="53:46" pos:end="53:46"><expr pos:start="53:46" pos:end="53:46"><name pos:start="53:46" pos:end="53:46">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="55:17" pos:end="57:31"><if pos:start="55:17" pos:end="57:31">if <condition pos:start="55:20" pos:end="55:28">(<expr pos:start="55:21" pos:end="55:27"><name pos:start="55:21" pos:end="55:23">ret</name> <operator pos:start="55:25" pos:end="55:25">&lt;</operator> <literal type="number" pos:start="55:27" pos:end="55:27">0</literal></expr>)</condition><block type="pseudo" pos:start="57:21" pos:end="57:31"><block_content pos:start="57:21" pos:end="57:31">

                    <return pos:start="57:21" pos:end="57:31">return <expr pos:start="57:28" pos:end="57:30"><name pos:start="57:28" pos:end="57:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:32"><expr pos:start="61:13" pos:end="61:31"><call pos:start="61:13" pos:end="61:31"><name pos:start="61:13" pos:end="61:28">cabac_init_state</name><argument_list pos:start="61:29" pos:end="61:31">(<argument pos:start="61:30" pos:end="61:30"><expr pos:start="61:30" pos:end="61:30"><name pos:start="61:30" pos:end="61:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="97:9"><if pos:start="65:9" pos:end="97:9">if <condition pos:start="65:12" pos:end="65:56">(<expr pos:start="65:13" pos:end="65:55"><name pos:start="65:13" pos:end="65:55"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:17">ps</name><operator pos:start="65:18" pos:end="65:18">.</operator><name pos:start="65:19" pos:end="65:21">pps</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:55">entropy_coding_sync_enabled_flag</name></name></expr>)</condition> <block pos:start="65:58" pos:end="97:9">{<block_content pos:start="67:13" pos:end="95:13">

            <if_stmt pos:start="67:13" pos:end="95:13"><if pos:start="67:13" pos:end="95:13">if <condition pos:start="67:16" pos:end="67:56">(<expr pos:start="67:17" pos:end="67:55"><name pos:start="67:17" pos:end="67:27">ctb_addr_ts</name> <operator pos:start="67:29" pos:end="67:29">%</operator> <name pos:start="67:31" pos:end="67:50"><name pos:start="67:31" pos:end="67:31">s</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:35">ps</name><operator pos:start="67:36" pos:end="67:36">.</operator><name pos:start="67:37" pos:end="67:39">sps</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:50">ctb_width</name></name> <operator pos:start="67:52" pos:end="67:53">==</operator> <literal type="number" pos:start="67:55" pos:end="67:55">0</literal></expr>)</condition> <block pos:start="67:58" pos:end="95:13">{<block_content pos:start="69:17" pos:end="93:35">

                <expr_stmt pos:start="69:17" pos:end="69:52"><expr pos:start="69:17" pos:end="69:51"><call pos:start="69:17" pos:end="69:51"><name pos:start="69:17" pos:end="69:35">get_cabac_terminate</name><argument_list pos:start="69:36" pos:end="69:51">(<argument pos:start="69:37" pos:end="69:50"><expr pos:start="69:37" pos:end="69:50"><operator pos:start="69:37" pos:end="69:37">&amp;</operator><name pos:start="69:38" pos:end="69:50"><name pos:start="69:38" pos:end="69:38">s</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:46">HEVClc</name><operator pos:start="69:47" pos:end="69:48">-&gt;</operator><name pos:start="69:49" pos:end="69:50">cc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="71:17" pos:end="83:17"><if pos:start="71:17" pos:end="73:44">if <condition pos:start="71:20" pos:end="71:43">(<expr pos:start="71:21" pos:end="71:42"><name pos:start="71:21" pos:end="71:37"><name pos:start="71:21" pos:end="71:21">s</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:37">threads_number</name></name> <operator pos:start="71:39" pos:end="71:40">==</operator> <literal type="number" pos:start="71:42" pos:end="71:42">1</literal></expr>)</condition><block type="pseudo" pos:start="73:21" pos:end="73:44"><block_content pos:start="73:21" pos:end="73:44">

                    <expr_stmt pos:start="73:21" pos:end="73:44"><expr pos:start="73:21" pos:end="73:43"><call pos:start="73:21" pos:end="73:43"><name pos:start="73:21" pos:end="73:32">cabac_reinit</name><argument_list pos:start="73:33" pos:end="73:43">(<argument pos:start="73:34" pos:end="73:42"><expr pos:start="73:34" pos:end="73:42"><name pos:start="73:34" pos:end="73:42"><name pos:start="73:34" pos:end="73:34">s</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:42">HEVClc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="75:17" pos:end="83:17">else <block pos:start="75:22" pos:end="83:17">{<block_content pos:start="77:21" pos:end="81:35">

                    <decl_stmt pos:start="77:21" pos:end="77:52"><decl pos:start="77:21" pos:end="77:51"><type pos:start="77:21" pos:end="77:23"><name pos:start="77:21" pos:end="77:23">int</name></type> <name pos:start="77:25" pos:end="77:27">ret</name> <init pos:start="77:29" pos:end="77:51">= <expr pos:start="77:31" pos:end="77:51"><call pos:start="77:31" pos:end="77:51"><name pos:start="77:31" pos:end="77:48">cabac_init_decoder</name><argument_list pos:start="77:49" pos:end="77:51">(<argument pos:start="77:50" pos:end="77:50"><expr pos:start="77:50" pos:end="77:50"><name pos:start="77:50" pos:end="77:50">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="79:21" pos:end="81:35"><if pos:start="79:21" pos:end="81:35">if <condition pos:start="79:24" pos:end="79:32">(<expr pos:start="79:25" pos:end="79:31"><name pos:start="79:25" pos:end="79:27">ret</name> <operator pos:start="79:29" pos:end="79:29">&lt;</operator> <literal type="number" pos:start="79:31" pos:end="79:31">0</literal></expr>)</condition><block type="pseudo" pos:start="81:25" pos:end="81:35"><block_content pos:start="81:25" pos:end="81:35">

                        <return pos:start="81:25" pos:end="81:35">return <expr pos:start="81:32" pos:end="81:34"><name pos:start="81:32" pos:end="81:34">ret</name></expr>;</return></block_content></block></if></if_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="87:17" pos:end="93:35"><if pos:start="87:17" pos:end="89:40">if <condition pos:start="87:20" pos:end="87:46">(<expr pos:start="87:21" pos:end="87:45"><name pos:start="87:21" pos:end="87:40"><name pos:start="87:21" pos:end="87:21">s</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:25">ps</name><operator pos:start="87:26" pos:end="87:26">.</operator><name pos:start="87:27" pos:end="87:29">sps</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:40">ctb_width</name></name> <operator pos:start="87:42" pos:end="87:43">==</operator> <literal type="number" pos:start="87:45" pos:end="87:45">1</literal></expr>)</condition><block type="pseudo" pos:start="89:21" pos:end="89:40"><block_content pos:start="89:21" pos:end="89:40">

                    <expr_stmt pos:start="89:21" pos:end="89:40"><expr pos:start="89:21" pos:end="89:39"><call pos:start="89:21" pos:end="89:39"><name pos:start="89:21" pos:end="89:36">cabac_init_state</name><argument_list pos:start="89:37" pos:end="89:39">(<argument pos:start="89:38" pos:end="89:38"><expr pos:start="89:38" pos:end="89:38"><name pos:start="89:38" pos:end="89:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="91:17" pos:end="93:35">else<block type="pseudo" pos:start="93:21" pos:end="93:35"><block_content pos:start="93:21" pos:end="93:35">

                    <expr_stmt pos:start="93:21" pos:end="93:35"><expr pos:start="93:21" pos:end="93:34"><call pos:start="93:21" pos:end="93:34"><name pos:start="93:21" pos:end="93:31">load_states</name><argument_list pos:start="93:32" pos:end="93:34">(<argument pos:start="93:33" pos:end="93:33"><expr pos:start="93:33" pos:end="93:33"><name pos:start="93:33" pos:end="93:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="101:5" pos:end="101:13">return <expr pos:start="101:12" pos:end="101:12"><literal type="number" pos:start="101:12" pos:end="101:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
