<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14996.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">parse_psfile</name><parameter_list pos:start="1:24" pos:end="1:64">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:39">AVFilterContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">ctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:63"><decl pos:start="1:47" pos:end="1:63"><type pos:start="1:47" pos:end="1:63"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">fname</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:15">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">CurvesContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:25">curves</name> <init pos:start="5:27" pos:end="5:37">= <expr pos:start="5:29" pos:end="5:37"><name pos:start="5:29" pos:end="5:37"><name pos:start="5:29" pos:end="5:31">ctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:37">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:15">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">ret</name></decl>, <decl pos:start="11:17" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:25">av_unused</name><argument_list pos:start="11:26" pos:end="11:34">(<argument pos:start="11:27" pos:end="11:33"><expr pos:start="11:27" pos:end="11:33"><name pos:start="11:27" pos:end="11:33">version</name></expr></argument>)</argument_list></decl>, <decl pos:start="11:37" pos:end="11:45"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:37" pos:end="11:45">nb_curves</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">AVBPrint</name></type> <name pos:start="13:14" pos:end="13:18">ptstr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:46"><type pos:start="15:5" pos:end="15:20"><specifier pos:start="15:5" pos:end="15:10">static</specifier> <specifier pos:start="15:12" pos:end="15:16">const</specifier> <name pos:start="15:18" pos:end="15:20">int</name></type> <name pos:start="15:22" pos:end="15:31"><name pos:start="15:22" pos:end="15:29">comp_ids</name><index pos:start="15:30" pos:end="15:31">[]</index></name> <init pos:start="15:33" pos:end="15:46">= <expr pos:start="15:35" pos:end="15:46"><block pos:start="15:35" pos:end="15:46">{<expr pos:start="15:36" pos:end="15:36"><literal type="number" pos:start="15:36" pos:end="15:36">3</literal></expr>, <expr pos:start="15:39" pos:end="15:39"><literal type="number" pos:start="15:39" pos:end="15:39">0</literal></expr>, <expr pos:start="15:42" pos:end="15:42"><literal type="number" pos:start="15:42" pos:end="15:42">1</literal></expr>, <expr pos:start="15:45" pos:end="15:45"><literal type="number" pos:start="15:45" pos:end="15:45">2</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:56"><expr pos:start="19:5" pos:end="19:55"><call pos:start="19:5" pos:end="19:55"><name pos:start="19:5" pos:end="19:18">av_bprint_init</name><argument_list pos:start="19:19" pos:end="19:55">(<argument pos:start="19:20" pos:end="19:25"><expr pos:start="19:20" pos:end="19:25"><operator pos:start="19:20" pos:end="19:20">&amp;</operator><name pos:start="19:21" pos:end="19:25">ptstr</name></expr></argument>, <argument pos:start="19:28" pos:end="19:28"><expr pos:start="19:28" pos:end="19:28"><literal type="number" pos:start="19:28" pos:end="19:28">0</literal></expr></argument>, <argument pos:start="19:31" pos:end="19:54"><expr pos:start="19:31" pos:end="19:54"><name pos:start="19:31" pos:end="19:54">AV_BPRINT_SIZE_AUTOMATIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:50"><name pos:start="23:11" pos:end="23:21">av_file_map</name><argument_list pos:start="23:22" pos:end="23:50">(<argument pos:start="23:23" pos:end="23:27"><expr pos:start="23:23" pos:end="23:27"><name pos:start="23:23" pos:end="23:27">fname</name></expr></argument>, <argument pos:start="23:30" pos:end="23:33"><expr pos:start="23:30" pos:end="23:33"><operator pos:start="23:30" pos:end="23:30">&amp;</operator><name pos:start="23:31" pos:end="23:33">buf</name></expr></argument>, <argument pos:start="23:36" pos:end="23:40"><expr pos:start="23:36" pos:end="23:40"><operator pos:start="23:36" pos:end="23:36">&amp;</operator><name pos:start="23:37" pos:end="23:40">size</name></expr></argument>, <argument pos:start="23:43" pos:end="23:43"><expr pos:start="23:43" pos:end="23:43"><literal type="number" pos:start="23:43" pos:end="23:43">0</literal></expr></argument>, <argument pos:start="23:46" pos:end="23:49"><expr pos:start="23:46" pos:end="23:49"><name pos:start="23:46" pos:end="23:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="44:0"><if pos:start="25:5" pos:end="44:0">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">&lt;</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="44:0"><block_content pos:start="27:9" pos:end="44:0">

        <return pos:start="27:9" pos:end="44:0">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



<cpp:define pos:start="31:1" pos:end="43:11">#<cpp:directive pos:start="31:2" pos:end="31:7">define</cpp:directive> <cpp:macro pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:14">READ16</name><parameter_list pos:start="31:15" pos:end="31:19">(<parameter pos:start="31:16" pos:end="31:18"><type pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">dst</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="31:21" pos:end="43:11">do {                \

    if (size &lt; 2)                       \

        return AVERROR_INVALIDDATA;     \

    dst = AV_RB16(buf);                 \

    buf  += 2;                          \

    size -= 2;                          \

} while (0)</cpp:value></cpp:define>



    <expr_stmt pos:start="47:5" pos:end="47:20"><expr pos:start="47:5" pos:end="47:19"><call pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:10">READ16</name><argument_list pos:start="47:11" pos:end="47:19">(<argument pos:start="47:12" pos:end="47:18"><expr pos:start="47:12" pos:end="47:18"><name pos:start="47:12" pos:end="47:18">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:22"><expr pos:start="49:5" pos:end="49:21"><call pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:10">READ16</name><argument_list pos:start="49:11" pos:end="49:21">(<argument pos:start="49:12" pos:end="49:20"><expr pos:start="49:12" pos:end="49:20"><name pos:start="49:12" pos:end="49:20">nb_curves</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="51:5" pos:end="95:5">for <control pos:start="51:9" pos:end="51:68">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:63"><expr pos:start="51:17" pos:end="51:62"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <call pos:start="51:21" pos:end="51:62"><name pos:start="51:21" pos:end="51:25">FFMIN</name><argument_list pos:start="51:26" pos:end="51:62">(<argument pos:start="51:27" pos:end="51:35"><expr pos:start="51:27" pos:end="51:35"><name pos:start="51:27" pos:end="51:35">nb_curves</name></expr></argument>, <argument pos:start="51:38" pos:end="51:61"><expr pos:start="51:38" pos:end="51:61"><call pos:start="51:38" pos:end="51:61"><name pos:start="51:38" pos:end="51:51">FF_ARRAY_ELEMS</name><argument_list pos:start="51:52" pos:end="51:61">(<argument pos:start="51:53" pos:end="51:60"><expr pos:start="51:53" pos:end="51:60"><name pos:start="51:53" pos:end="51:60">comp_ids</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="51:65" pos:end="51:67"><expr pos:start="51:65" pos:end="51:67"><name pos:start="51:65" pos:end="51:65">i</name><operator pos:start="51:66" pos:end="51:67">++</operator></expr></incr>)</control> <block pos:start="51:70" pos:end="95:5">{<block_content pos:start="53:9" pos:end="93:9">

        <decl_stmt pos:start="53:9" pos:end="53:25"><decl pos:start="53:9" pos:end="53:21"><type pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">int</name></type> <name pos:start="53:13" pos:end="53:21">nb_points</name></decl>, <decl pos:start="53:24" pos:end="53:24"><type ref="prev" pos:start="53:9" pos:end="53:11"/><name pos:start="53:24" pos:end="53:24">n</name></decl>;</decl_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><call pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:23">av_bprint_clear</name><argument_list pos:start="55:24" pos:end="55:31">(<argument pos:start="55:25" pos:end="55:30"><expr pos:start="55:25" pos:end="55:30"><operator pos:start="55:25" pos:end="55:25">&amp;</operator><name pos:start="55:26" pos:end="55:30">ptstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:26"><expr pos:start="57:9" pos:end="57:25"><call pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:14">READ16</name><argument_list pos:start="57:15" pos:end="57:25">(<argument pos:start="57:16" pos:end="57:24"><expr pos:start="57:16" pos:end="57:24"><name pos:start="57:16" pos:end="57:24">nb_points</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="59:9" pos:end="69:9">for <control pos:start="59:13" pos:end="59:39">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">n</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:34"><expr pos:start="59:21" pos:end="59:33"><name pos:start="59:21" pos:end="59:21">n</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <name pos:start="59:25" pos:end="59:33">nb_points</name></expr>;</condition> <incr pos:start="59:36" pos:end="59:38"><expr pos:start="59:36" pos:end="59:38"><name pos:start="59:36" pos:end="59:36">n</name><operator pos:start="59:37" pos:end="59:38">++</operator></expr></incr>)</control> <block pos:start="59:41" pos:end="69:9">{<block_content pos:start="61:13" pos:end="67:61">

            <decl_stmt pos:start="61:13" pos:end="61:21"><decl pos:start="61:13" pos:end="61:17"><type pos:start="61:13" pos:end="61:15"><name pos:start="61:13" pos:end="61:15">int</name></type> <name pos:start="61:17" pos:end="61:17">y</name></decl>, <decl pos:start="61:20" pos:end="61:20"><type ref="prev" pos:start="61:13" pos:end="61:15"/><name pos:start="61:20" pos:end="61:20">x</name></decl>;</decl_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:22"><expr pos:start="63:13" pos:end="63:21"><call pos:start="63:13" pos:end="63:21"><name pos:start="63:13" pos:end="63:18">READ16</name><argument_list pos:start="63:19" pos:end="63:21">(<argument pos:start="63:20" pos:end="63:20"><expr pos:start="63:20" pos:end="63:20"><name pos:start="63:20" pos:end="63:20">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:22"><expr pos:start="65:13" pos:end="65:21"><call pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:18">READ16</name><argument_list pos:start="65:19" pos:end="65:21">(<argument pos:start="65:20" pos:end="65:20"><expr pos:start="65:20" pos:end="65:20"><name pos:start="65:20" pos:end="65:20">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:61"><expr pos:start="67:13" pos:end="67:60"><call pos:start="67:13" pos:end="67:60"><name pos:start="67:13" pos:end="67:22">av_bprintf</name><argument_list pos:start="67:23" pos:end="67:60">(<argument pos:start="67:24" pos:end="67:29"><expr pos:start="67:24" pos:end="67:29"><operator pos:start="67:24" pos:end="67:24">&amp;</operator><name pos:start="67:25" pos:end="67:29">ptstr</name></expr></argument>, <argument pos:start="67:32" pos:end="67:39"><expr pos:start="67:32" pos:end="67:39"><literal type="string" pos:start="67:32" pos:end="67:39">"%f/%f "</literal></expr></argument>, <argument pos:start="67:42" pos:end="67:49"><expr pos:start="67:42" pos:end="67:49"><name pos:start="67:42" pos:end="67:42">x</name> <operator pos:start="67:44" pos:end="67:44">/</operator> <literal type="number" pos:start="67:46" pos:end="67:49">255.</literal></expr></argument>, <argument pos:start="67:52" pos:end="67:59"><expr pos:start="67:52" pos:end="67:59"><name pos:start="67:52" pos:end="67:52">y</name> <operator pos:start="67:54" pos:end="67:54">/</operator> <literal type="number" pos:start="67:56" pos:end="67:59">255.</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="71:9" pos:end="93:9"><if pos:start="71:9" pos:end="93:9">if <condition pos:start="71:12" pos:end="71:23">(<expr pos:start="71:13" pos:end="71:22"><operator pos:start="71:13" pos:end="71:13">*</operator><name pos:start="71:14" pos:end="71:22"><name pos:start="71:14" pos:end="71:18">ptstr</name><operator pos:start="71:19" pos:end="71:19">.</operator><name pos:start="71:20" pos:end="71:22">str</name></name></expr>)</condition> <block pos:start="71:25" pos:end="93:9">{<block_content pos:start="73:13" pos:end="91:13">

            <decl_stmt pos:start="73:13" pos:end="73:63"><decl pos:start="73:13" pos:end="73:62"><type pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:16">char</name> <modifier pos:start="73:18" pos:end="73:18">*</modifier><modifier pos:start="73:19" pos:end="73:19">*</modifier></type><name pos:start="73:20" pos:end="73:22">pts</name> <init pos:start="73:24" pos:end="73:62">= <expr pos:start="73:26" pos:end="73:62"><operator pos:start="73:26" pos:end="73:26">&amp;</operator><name pos:start="73:27" pos:end="73:62"><name pos:start="73:27" pos:end="73:32">curves</name><operator pos:start="73:33" pos:end="73:34">-&gt;</operator><name pos:start="73:35" pos:end="73:49">comp_points_str</name><index pos:start="73:50" pos:end="73:62">[<expr pos:start="73:51" pos:end="73:61"><name pos:start="73:51" pos:end="73:61"><name pos:start="73:51" pos:end="73:58">comp_ids</name><index pos:start="73:59" pos:end="73:61">[<expr pos:start="73:60" pos:end="73:60"><name pos:start="73:60" pos:end="73:60">i</name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="75:13" pos:end="91:13"><if pos:start="75:13" pos:end="91:13">if <condition pos:start="75:16" pos:end="75:22">(<expr pos:start="75:17" pos:end="75:21"><operator pos:start="75:17" pos:end="75:17">!</operator><operator pos:start="75:18" pos:end="75:18">*</operator><name pos:start="75:19" pos:end="75:21">pts</name></expr>)</condition> <block pos:start="75:24" pos:end="91:13">{<block_content pos:start="77:17" pos:end="89:17">

                <expr_stmt pos:start="77:17" pos:end="77:44"><expr pos:start="77:17" pos:end="77:43"><operator pos:start="77:17" pos:end="77:17">*</operator><name pos:start="77:18" pos:end="77:20">pts</name> <operator pos:start="77:22" pos:end="77:22">=</operator> <call pos:start="77:24" pos:end="77:43"><name pos:start="77:24" pos:end="77:32">av_strdup</name><argument_list pos:start="77:33" pos:end="77:43">(<argument pos:start="77:34" pos:end="77:42"><expr pos:start="77:34" pos:end="77:42"><name pos:start="77:34" pos:end="77:42"><name pos:start="77:34" pos:end="77:38">ptstr</name><operator pos:start="77:39" pos:end="77:39">.</operator><name pos:start="77:40" pos:end="77:42">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="81:56"><expr pos:start="79:17" pos:end="81:55"><call pos:start="79:17" pos:end="81:55"><name pos:start="79:17" pos:end="79:22">av_log</name><argument_list pos:start="79:23" pos:end="81:55">(<argument pos:start="79:24" pos:end="79:26"><expr pos:start="79:24" pos:end="79:26"><name pos:start="79:24" pos:end="79:26">ctx</name></expr></argument>, <argument pos:start="79:29" pos:end="79:40"><expr pos:start="79:29" pos:end="79:40"><name pos:start="79:29" pos:end="79:40">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="79:43" pos:end="79:84"><expr pos:start="79:43" pos:end="79:84"><literal type="string" pos:start="79:43" pos:end="79:84">"curves %d (intid=%d) [%d points]: [%s]\n"</literal></expr></argument>,

                       <argument pos:start="81:24" pos:end="81:24"><expr pos:start="81:24" pos:end="81:24"><name pos:start="81:24" pos:end="81:24">i</name></expr></argument>, <argument pos:start="81:27" pos:end="81:37"><expr pos:start="81:27" pos:end="81:37"><name pos:start="81:27" pos:end="81:37"><name pos:start="81:27" pos:end="81:34">comp_ids</name><index pos:start="81:35" pos:end="81:37">[<expr pos:start="81:36" pos:end="81:36"><name pos:start="81:36" pos:end="81:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="81:40" pos:end="81:48"><expr pos:start="81:40" pos:end="81:48"><name pos:start="81:40" pos:end="81:48">nb_points</name></expr></argument>, <argument pos:start="81:51" pos:end="81:54"><expr pos:start="81:51" pos:end="81:54"><operator pos:start="81:51" pos:end="81:51">*</operator><name pos:start="81:52" pos:end="81:54">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="83:17" pos:end="89:17"><if pos:start="83:17" pos:end="89:17">if <condition pos:start="83:20" pos:end="83:26">(<expr pos:start="83:21" pos:end="83:25"><operator pos:start="83:21" pos:end="83:21">!</operator><operator pos:start="83:22" pos:end="83:22">*</operator><name pos:start="83:23" pos:end="83:25">pts</name></expr>)</condition> <block pos:start="83:28" pos:end="89:17">{<block_content pos:start="85:21" pos:end="87:29">

                    <expr_stmt pos:start="85:21" pos:end="85:42"><expr pos:start="85:21" pos:end="85:41"><name pos:start="85:21" pos:end="85:23">ret</name> <operator pos:start="85:25" pos:end="85:25">=</operator> <call pos:start="85:27" pos:end="85:41"><name pos:start="85:27" pos:end="85:33">AVERROR</name><argument_list pos:start="85:34" pos:end="85:41">(<argument pos:start="85:35" pos:end="85:40"><expr pos:start="85:35" pos:end="85:40"><name pos:start="85:35" pos:end="85:40">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="87:21" pos:end="87:29">goto <name pos:start="87:26" pos:end="87:28">end</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<label pos:start="97:1" pos:end="97:4"><name pos:start="97:1" pos:end="97:3">end</name>:</label>

    <expr_stmt pos:start="99:5" pos:end="99:37"><expr pos:start="99:5" pos:end="99:36"><call pos:start="99:5" pos:end="99:36"><name pos:start="99:5" pos:end="99:22">av_bprint_finalize</name><argument_list pos:start="99:23" pos:end="99:36">(<argument pos:start="99:24" pos:end="99:29"><expr pos:start="99:24" pos:end="99:29"><operator pos:start="99:24" pos:end="99:24">&amp;</operator><name pos:start="99:25" pos:end="99:29">ptstr</name></expr></argument>, <argument pos:start="99:32" pos:end="99:35"><expr pos:start="99:32" pos:end="99:35"><name pos:start="99:32" pos:end="99:35">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:29"><expr pos:start="101:5" pos:end="101:28"><call pos:start="101:5" pos:end="101:28"><name pos:start="101:5" pos:end="101:17">av_file_unmap</name><argument_list pos:start="101:18" pos:end="101:28">(<argument pos:start="101:19" pos:end="101:21"><expr pos:start="101:19" pos:end="101:21"><name pos:start="101:19" pos:end="101:21">buf</name></expr></argument>, <argument pos:start="101:24" pos:end="101:27"><expr pos:start="101:24" pos:end="101:27"><name pos:start="101:24" pos:end="101:27">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="103:5" pos:end="103:15">return <expr pos:start="103:12" pos:end="103:14"><name pos:start="103:12" pos:end="103:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
