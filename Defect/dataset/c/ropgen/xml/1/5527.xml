<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5527.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">read_ffserver_streams</name><parameter_list pos:start="1:33" pos:end="1:93">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:47">OptionsContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">o</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><name pos:start="1:53" pos:end="1:67">AVFormatContext</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:70">s</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:92"><decl pos:start="1:73" pos:end="1:92"><type pos:start="1:73" pos:end="1:92"><specifier pos:start="1:73" pos:end="1:77">const</specifier> <name pos:start="1:79" pos:end="1:82">char</name> <modifier pos:start="1:84" pos:end="1:84">*</modifier></type><name pos:start="1:85" pos:end="1:92">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:15">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">ic</name> <init pos:start="7:25" pos:end="7:50">= <expr pos:start="7:27" pos:end="7:50"><call pos:start="7:27" pos:end="7:50"><name pos:start="7:27" pos:end="7:48">avformat_alloc_context</name><argument_list pos:start="7:49" pos:end="7:50">()</argument_list></call></expr></init></decl>;</decl_stmt>





    <expr_stmt pos:start="13:5" pos:end="13:36"><expr pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:6">ic</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:26">interrupt_callback</name></name> <operator pos:start="13:28" pos:end="13:28">=</operator> <name pos:start="13:30" pos:end="13:35">int_cb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:57"><expr pos:start="15:5" pos:end="15:56"><name pos:start="15:5" pos:end="15:7">err</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:56"><name pos:start="15:11" pos:end="15:29">avformat_open_input</name><argument_list pos:start="15:30" pos:end="15:56">(<argument pos:start="15:31" pos:end="15:33"><expr pos:start="15:31" pos:end="15:33"><operator pos:start="15:31" pos:end="15:31">&amp;</operator><name pos:start="15:32" pos:end="15:33">ic</name></expr></argument>, <argument pos:start="15:36" pos:end="15:43"><expr pos:start="15:36" pos:end="15:43"><name pos:start="15:36" pos:end="15:43">filename</name></expr></argument>, <argument pos:start="15:46" pos:end="15:49"><expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">NULL</name></expr></argument>, <argument pos:start="15:52" pos:end="15:55"><expr pos:start="15:52" pos:end="15:55"><name pos:start="15:52" pos:end="15:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:19"><if pos:start="17:5" pos:end="19:19">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">err</name> <operator pos:start="17:13" pos:end="17:13">&lt;</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:19"><block_content pos:start="19:9" pos:end="19:19">

        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">err</name></expr>;</return></block_content></block></if></if_stmt>

    <comment type="block" pos:start="21:5" pos:end="21:28">/* copy stream format */</comment>

    <for pos:start="23:5" pos:end="91:5">for<control pos:start="23:8" pos:end="23:33">(<init pos:start="23:9" pos:end="23:12"><expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:9">i</name><operator pos:start="23:10" pos:end="23:10">=</operator><literal type="number" pos:start="23:11" pos:end="23:11">0</literal></expr>;</init><condition pos:start="23:13" pos:end="23:29"><expr pos:start="23:13" pos:end="23:28"><name pos:start="23:13" pos:end="23:13">i</name><operator pos:start="23:14" pos:end="23:14">&lt;</operator><name pos:start="23:15" pos:end="23:28"><name pos:start="23:15" pos:end="23:16">ic</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:28">nb_streams</name></name></expr>;</condition><incr pos:start="23:30" pos:end="23:32"><expr pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:30">i</name><operator pos:start="23:31" pos:end="23:32">++</operator></expr></incr>)</control> <block pos:start="23:35" pos:end="91:5">{<block_content pos:start="25:9" pos:end="89:78">

        <decl_stmt pos:start="25:9" pos:end="25:21"><decl pos:start="25:9" pos:end="25:20"><type pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:16">AVStream</name> <modifier pos:start="25:18" pos:end="25:18">*</modifier></type><name pos:start="25:19" pos:end="25:20">st</name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:26"><decl pos:start="27:9" pos:end="27:25"><type pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:20">OutputStream</name> <modifier pos:start="27:22" pos:end="27:22">*</modifier></type><name pos:start="27:23" pos:end="27:25">ost</name></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:23"><decl pos:start="29:9" pos:end="29:22"><type pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:15">AVCodec</name> <modifier pos:start="29:17" pos:end="29:17">*</modifier></type><name pos:start="29:18" pos:end="29:22">codec</name></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:31"><decl pos:start="31:9" pos:end="31:30"><type pos:start="31:9" pos:end="31:20"><specifier pos:start="31:9" pos:end="31:13">const</specifier> <name pos:start="31:15" pos:end="31:18">char</name> <modifier pos:start="31:20" pos:end="31:20">*</modifier></type><name pos:start="31:21" pos:end="31:30">enc_config</name></decl>;</decl_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:73"><expr pos:start="35:9" pos:end="35:72"><name pos:start="35:9" pos:end="35:13">codec</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:72"><name pos:start="35:17" pos:end="35:36">avcodec_find_encoder</name><argument_list pos:start="35:37" pos:end="35:72">(<argument pos:start="35:38" pos:end="35:71"><expr pos:start="35:38" pos:end="35:71"><name pos:start="35:38" pos:end="35:51"><name pos:start="35:38" pos:end="35:39">ic</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:48">streams</name><index pos:start="35:49" pos:end="35:51">[<expr pos:start="35:50" pos:end="35:50"><name pos:start="35:50" pos:end="35:50">i</name></expr>]</index></name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:71"><name pos:start="35:54" pos:end="35:61">codecpar</name><operator pos:start="35:62" pos:end="35:63">-&gt;</operator><name pos:start="35:64" pos:end="35:71">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:19">(<expr pos:start="37:13" pos:end="37:18"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:18">codec</name></expr>)</condition> <block pos:start="37:21" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:35">

            <expr_stmt pos:start="39:13" pos:end="39:110"><expr pos:start="39:13" pos:end="39:109"><call pos:start="39:13" pos:end="39:109"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="39:109">(<argument pos:start="39:20" pos:end="39:20"><expr pos:start="39:20" pos:end="39:20"><name pos:start="39:20" pos:end="39:20">s</name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:37" pos:end="39:72"><expr pos:start="39:37" pos:end="39:72"><literal type="string" pos:start="39:37" pos:end="39:72">"no encoder found for codec id %i\n"</literal></expr></argument>, <argument pos:start="39:75" pos:end="39:108"><expr pos:start="39:75" pos:end="39:108"><name pos:start="39:75" pos:end="39:88"><name pos:start="39:75" pos:end="39:76">ic</name><operator pos:start="39:77" pos:end="39:78">-&gt;</operator><name pos:start="39:79" pos:end="39:85">streams</name><index pos:start="39:86" pos:end="39:88">[<expr pos:start="39:87" pos:end="39:87"><name pos:start="39:87" pos:end="39:87">i</name></expr>]</index></name><operator pos:start="39:89" pos:end="39:90">-&gt;</operator><name pos:start="39:91" pos:end="39:108"><name pos:start="39:91" pos:end="39:98">codecpar</name><operator pos:start="39:99" pos:end="39:100">-&gt;</operator><name pos:start="39:101" pos:end="39:108">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:35">return <expr pos:start="41:20" pos:end="41:34"><call pos:start="41:20" pos:end="41:34"><name pos:start="41:20" pos:end="41:26">AVERROR</name><argument_list pos:start="41:27" pos:end="41:34">(<argument pos:start="41:28" pos:end="41:33"><expr pos:start="41:28" pos:end="41:33"><name pos:start="41:28" pos:end="41:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="51:51"><if pos:start="45:9" pos:end="47:51">if <condition pos:start="45:12" pos:end="45:46">(<expr pos:start="45:13" pos:end="45:45"><name pos:start="45:13" pos:end="45:23"><name pos:start="45:13" pos:end="45:17">codec</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:23">type</name></name> <operator pos:start="45:25" pos:end="45:26">==</operator> <name pos:start="45:28" pos:end="45:45">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:51"><block_content pos:start="47:13" pos:end="47:51">

            <expr_stmt pos:start="47:13" pos:end="47:51"><expr pos:start="47:13" pos:end="47:50"><call pos:start="47:13" pos:end="47:50"><name pos:start="47:13" pos:end="47:27">opt_audio_codec</name><argument_list pos:start="47:28" pos:end="47:50">(<argument pos:start="47:29" pos:end="47:29"><expr pos:start="47:29" pos:end="47:29"><name pos:start="47:29" pos:end="47:29">o</name></expr></argument>, <argument pos:start="47:32" pos:end="47:36"><expr pos:start="47:32" pos:end="47:36"><literal type="string" pos:start="47:32" pos:end="47:36">"c:a"</literal></expr></argument>, <argument pos:start="47:39" pos:end="47:49"><expr pos:start="47:39" pos:end="47:49"><name pos:start="47:39" pos:end="47:49"><name pos:start="47:39" pos:end="47:43">codec</name><operator pos:start="47:44" pos:end="47:45">-&gt;</operator><name pos:start="47:46" pos:end="47:49">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="49:9" pos:end="51:51">else if <condition pos:start="49:17" pos:end="49:51">(<expr pos:start="49:18" pos:end="49:50"><name pos:start="49:18" pos:end="49:28"><name pos:start="49:18" pos:end="49:22">codec</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:28">type</name></name> <operator pos:start="49:30" pos:end="49:31">==</operator> <name pos:start="49:33" pos:end="49:50">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:51"><block_content pos:start="51:13" pos:end="51:51">

            <expr_stmt pos:start="51:13" pos:end="51:51"><expr pos:start="51:13" pos:end="51:50"><call pos:start="51:13" pos:end="51:50"><name pos:start="51:13" pos:end="51:27">opt_video_codec</name><argument_list pos:start="51:28" pos:end="51:50">(<argument pos:start="51:29" pos:end="51:29"><expr pos:start="51:29" pos:end="51:29"><name pos:start="51:29" pos:end="51:29">o</name></expr></argument>, <argument pos:start="51:32" pos:end="51:36"><expr pos:start="51:32" pos:end="51:36"><literal type="string" pos:start="51:32" pos:end="51:36">"c:v"</literal></expr></argument>, <argument pos:start="51:39" pos:end="51:49"><expr pos:start="51:39" pos:end="51:49"><name pos:start="51:39" pos:end="51:49"><name pos:start="51:39" pos:end="51:43">codec</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:49">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:57"><expr pos:start="53:9" pos:end="53:56"><name pos:start="53:9" pos:end="53:11">ost</name>   <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:56"><name pos:start="53:17" pos:end="53:33">new_output_stream</name><argument_list pos:start="53:34" pos:end="53:56">(<argument pos:start="53:35" pos:end="53:35"><expr pos:start="53:35" pos:end="53:35"><name pos:start="53:35" pos:end="53:35">o</name></expr></argument>, <argument pos:start="53:38" pos:end="53:38"><expr pos:start="53:38" pos:end="53:38"><name pos:start="53:38" pos:end="53:38">s</name></expr></argument>, <argument pos:start="53:41" pos:end="53:51"><expr pos:start="53:41" pos:end="53:51"><name pos:start="53:41" pos:end="53:51"><name pos:start="53:41" pos:end="53:45">codec</name><operator pos:start="53:46" pos:end="53:47">-&gt;</operator><name pos:start="53:48" pos:end="53:51">type</name></name></expr></argument>, <argument pos:start="53:54" pos:end="53:55"><expr pos:start="53:54" pos:end="53:55"><operator pos:start="53:54" pos:end="53:54">-</operator><literal type="number" pos:start="53:55" pos:end="53:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:24"><expr pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:10">st</name>    <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:23"><name pos:start="55:17" pos:end="55:19">ost</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:23">st</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:56"><expr pos:start="59:9" pos:end="59:55"><call pos:start="59:9" pos:end="59:55"><name pos:start="59:9" pos:end="59:37">avcodec_get_context_defaults3</name><argument_list pos:start="59:38" pos:end="59:55">(<argument pos:start="59:39" pos:end="59:47"><expr pos:start="59:39" pos:end="59:47"><name pos:start="59:39" pos:end="59:47"><name pos:start="59:39" pos:end="59:40">st</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:47">codec</name></name></expr></argument>, <argument pos:start="59:50" pos:end="59:54"><expr pos:start="59:50" pos:end="59:54"><name pos:start="59:50" pos:end="59:54">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:85"><expr pos:start="61:9" pos:end="61:84"><name pos:start="61:9" pos:end="61:18">enc_config</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <call pos:start="61:22" pos:end="61:84"><name pos:start="61:22" pos:end="61:68">av_stream_get_recommended_encoder_configuration</name><argument_list pos:start="61:69" pos:end="61:84">(<argument pos:start="61:70" pos:end="61:83"><expr pos:start="61:70" pos:end="61:83"><name pos:start="61:70" pos:end="61:83"><name pos:start="61:70" pos:end="61:71">ic</name><operator pos:start="61:72" pos:end="61:73">-&gt;</operator><name pos:start="61:74" pos:end="61:80">streams</name><index pos:start="61:81" pos:end="61:83">[<expr pos:start="61:82" pos:end="61:82"><name pos:start="61:82" pos:end="61:82">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="73:9"><if pos:start="63:9" pos:end="73:9">if <condition pos:start="63:12" pos:end="63:23">(<expr pos:start="63:13" pos:end="63:22"><name pos:start="63:13" pos:end="63:22">enc_config</name></expr>)</condition> <block pos:start="63:25" pos:end="73:9">{<block_content pos:start="65:13" pos:end="71:32">

            <decl_stmt pos:start="65:13" pos:end="65:38"><decl pos:start="65:13" pos:end="65:37"><type pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:24">AVDictionary</name> <modifier pos:start="65:26" pos:end="65:26">*</modifier></type><name pos:start="65:27" pos:end="65:30">opts</name> <init pos:start="65:32" pos:end="65:37">= <expr pos:start="65:34" pos:end="65:37"><name pos:start="65:34" pos:end="65:37">NULL</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:65"><expr pos:start="67:13" pos:end="67:64"><call pos:start="67:13" pos:end="67:64"><name pos:start="67:13" pos:end="67:32">av_dict_parse_string</name><argument_list pos:start="67:33" pos:end="67:64">(<argument pos:start="67:34" pos:end="67:38"><expr pos:start="67:34" pos:end="67:38"><operator pos:start="67:34" pos:end="67:34">&amp;</operator><name pos:start="67:35" pos:end="67:38">opts</name></expr></argument>, <argument pos:start="67:41" pos:end="67:50"><expr pos:start="67:41" pos:end="67:50"><name pos:start="67:41" pos:end="67:50">enc_config</name></expr></argument>, <argument pos:start="67:53" pos:end="67:55"><expr pos:start="67:53" pos:end="67:55"><literal type="string" pos:start="67:53" pos:end="67:55">"="</literal></expr></argument>, <argument pos:start="67:58" pos:end="67:60"><expr pos:start="67:58" pos:end="67:60"><literal type="string" pos:start="67:58" pos:end="67:60">","</literal></expr></argument>, <argument pos:start="67:63" pos:end="67:63"><expr pos:start="67:63" pos:end="67:63"><literal type="number" pos:start="67:63" pos:end="67:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:71"><expr pos:start="69:13" pos:end="69:70"><call pos:start="69:13" pos:end="69:70"><name pos:start="69:13" pos:end="69:28">av_opt_set_dict2</name><argument_list pos:start="69:29" pos:end="69:70">(<argument pos:start="69:30" pos:end="69:38"><expr pos:start="69:30" pos:end="69:38"><name pos:start="69:30" pos:end="69:38"><name pos:start="69:30" pos:end="69:31">st</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:38">codec</name></name></expr></argument>, <argument pos:start="69:41" pos:end="69:45"><expr pos:start="69:41" pos:end="69:45"><operator pos:start="69:41" pos:end="69:41">&amp;</operator><name pos:start="69:42" pos:end="69:45">opts</name></expr></argument>, <argument pos:start="69:48" pos:end="69:69"><expr pos:start="69:48" pos:end="69:69"><name pos:start="69:48" pos:end="69:69">AV_OPT_SEARCH_CHILDREN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:32"><expr pos:start="71:13" pos:end="71:31"><call pos:start="71:13" pos:end="71:31"><name pos:start="71:13" pos:end="71:24">av_dict_free</name><argument_list pos:start="71:25" pos:end="71:31">(<argument pos:start="71:26" pos:end="71:30"><expr pos:start="71:26" pos:end="71:30"><operator pos:start="71:26" pos:end="71:26">&amp;</operator><name pos:start="71:27" pos:end="71:30">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="77:9" pos:end="83:73"><if pos:start="77:9" pos:end="79:41">if <condition pos:start="77:12" pos:end="77:80">(<expr pos:start="77:13" pos:end="77:79"><name pos:start="77:13" pos:end="77:36"><name pos:start="77:13" pos:end="77:14">st</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:24">codecpar</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:36">codec_type</name></name> <operator pos:start="77:38" pos:end="77:39">==</operator> <name pos:start="77:41" pos:end="77:58">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="77:60" pos:end="77:61">&amp;&amp;</operator> <operator pos:start="77:63" pos:end="77:63">!</operator><name pos:start="77:64" pos:end="77:79"><name pos:start="77:64" pos:end="77:66">ost</name><operator pos:start="77:67" pos:end="77:68">-&gt;</operator><name pos:start="77:69" pos:end="77:79">stream_copy</name></name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:41"><block_content pos:start="79:13" pos:end="79:41">

            <expr_stmt pos:start="79:13" pos:end="79:41"><expr pos:start="79:13" pos:end="79:40"><call pos:start="79:13" pos:end="79:40"><name pos:start="79:13" pos:end="79:29">choose_sample_fmt</name><argument_list pos:start="79:30" pos:end="79:40">(<argument pos:start="79:31" pos:end="79:32"><expr pos:start="79:31" pos:end="79:32"><name pos:start="79:31" pos:end="79:32">st</name></expr></argument>, <argument pos:start="79:35" pos:end="79:39"><expr pos:start="79:35" pos:end="79:39"><name pos:start="79:35" pos:end="79:39">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="81:9" pos:end="83:73">else if <condition pos:start="81:17" pos:end="81:85">(<expr pos:start="81:18" pos:end="81:84"><name pos:start="81:18" pos:end="81:41"><name pos:start="81:18" pos:end="81:19">st</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:29">codecpar</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:41">codec_type</name></name> <operator pos:start="81:43" pos:end="81:44">==</operator> <name pos:start="81:46" pos:end="81:63">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="81:65" pos:end="81:66">&amp;&amp;</operator> <operator pos:start="81:68" pos:end="81:68">!</operator><name pos:start="81:69" pos:end="81:84"><name pos:start="81:69" pos:end="81:71">ost</name><operator pos:start="81:72" pos:end="81:73">-&gt;</operator><name pos:start="81:74" pos:end="81:84">stream_copy</name></name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:73"><block_content pos:start="83:13" pos:end="83:73">

            <expr_stmt pos:start="83:13" pos:end="83:73"><expr pos:start="83:13" pos:end="83:72"><call pos:start="83:13" pos:end="83:72"><name pos:start="83:13" pos:end="83:28">choose_pixel_fmt</name><argument_list pos:start="83:29" pos:end="83:72">(<argument pos:start="83:30" pos:end="83:31"><expr pos:start="83:30" pos:end="83:31"><name pos:start="83:30" pos:end="83:31">st</name></expr></argument>, <argument pos:start="83:34" pos:end="83:42"><expr pos:start="83:34" pos:end="83:42"><name pos:start="83:34" pos:end="83:42"><name pos:start="83:34" pos:end="83:35">st</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:42">codec</name></name></expr></argument>, <argument pos:start="83:45" pos:end="83:49"><expr pos:start="83:45" pos:end="83:49"><name pos:start="83:45" pos:end="83:49">codec</name></expr></argument>, <argument pos:start="83:52" pos:end="83:71"><expr pos:start="83:52" pos:end="83:71"><name pos:start="83:52" pos:end="83:71"><name pos:start="83:52" pos:end="83:53">st</name><operator pos:start="83:54" pos:end="83:55">-&gt;</operator><name pos:start="83:56" pos:end="83:63">codecpar</name><operator pos:start="83:64" pos:end="83:65">-&gt;</operator><name pos:start="83:66" pos:end="83:71">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:54"><expr pos:start="85:9" pos:end="85:53"><call pos:start="85:9" pos:end="85:53"><name pos:start="85:9" pos:end="85:28">avcodec_copy_context</name><argument_list pos:start="85:29" pos:end="85:53">(<argument pos:start="85:30" pos:end="85:41"><expr pos:start="85:30" pos:end="85:41"><name pos:start="85:30" pos:end="85:41"><name pos:start="85:30" pos:end="85:32">ost</name><operator pos:start="85:33" pos:end="85:34">-&gt;</operator><name pos:start="85:35" pos:end="85:41">enc_ctx</name></name></expr></argument>, <argument pos:start="85:44" pos:end="85:52"><expr pos:start="85:44" pos:end="85:52"><name pos:start="85:44" pos:end="85:52"><name pos:start="85:44" pos:end="85:45">st</name><operator pos:start="85:46" pos:end="85:47">-&gt;</operator><name pos:start="85:48" pos:end="85:52">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="89:78"><if pos:start="87:9" pos:end="89:78">if <condition pos:start="87:12" pos:end="87:23">(<expr pos:start="87:13" pos:end="87:22"><name pos:start="87:13" pos:end="87:22">enc_config</name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:78"><block_content pos:start="89:13" pos:end="89:78">

            <expr_stmt pos:start="89:13" pos:end="89:78"><expr pos:start="89:13" pos:end="89:77"><call pos:start="89:13" pos:end="89:77"><name pos:start="89:13" pos:end="89:32">av_dict_parse_string</name><argument_list pos:start="89:33" pos:end="89:77">(<argument pos:start="89:34" pos:end="89:51"><expr pos:start="89:34" pos:end="89:51"><operator pos:start="89:34" pos:end="89:34">&amp;</operator><name pos:start="89:35" pos:end="89:51"><name pos:start="89:35" pos:end="89:37">ost</name><operator pos:start="89:38" pos:end="89:39">-&gt;</operator><name pos:start="89:40" pos:end="89:51">encoder_opts</name></name></expr></argument>, <argument pos:start="89:54" pos:end="89:63"><expr pos:start="89:54" pos:end="89:63"><name pos:start="89:54" pos:end="89:63">enc_config</name></expr></argument>, <argument pos:start="89:66" pos:end="89:68"><expr pos:start="89:66" pos:end="89:68"><literal type="string" pos:start="89:66" pos:end="89:68">"="</literal></expr></argument>, <argument pos:start="89:71" pos:end="89:73"><expr pos:start="89:71" pos:end="89:73"><literal type="string" pos:start="89:71" pos:end="89:73">","</literal></expr></argument>, <argument pos:start="89:76" pos:end="89:76"><expr pos:start="89:76" pos:end="89:76"><literal type="number" pos:start="89:76" pos:end="89:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="95:5" pos:end="95:30"><expr pos:start="95:5" pos:end="95:29"><call pos:start="95:5" pos:end="95:29"><name pos:start="95:5" pos:end="95:24">avformat_close_input</name><argument_list pos:start="95:25" pos:end="95:29">(<argument pos:start="95:26" pos:end="95:28"><expr pos:start="95:26" pos:end="95:28"><operator pos:start="95:26" pos:end="95:26">&amp;</operator><name pos:start="95:27" pos:end="95:28">ic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="97:5" pos:end="97:15">return <expr pos:start="97:12" pos:end="97:14"><name pos:start="97:12" pos:end="97:14">err</name></expr>;</return>

</block_content>}</block></function></unit>
