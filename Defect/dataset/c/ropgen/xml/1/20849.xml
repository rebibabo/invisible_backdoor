<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20849.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">ff_h261_resync</name><parameter_list pos:start="1:26" pos:end="1:41">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:37">H261Context</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">h</name></decl></parameter>)</parameter_list><block pos:start="1:42" pos:end="57:1">{<block_content pos:start="3:5" pos:end="55:14">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">left</name></decl>, <decl pos:start="5:15" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:17">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="17:5">if<condition pos:start="9:7" pos:end="9:32">(<expr pos:start="9:8" pos:end="9:31"><call pos:start="9:8" pos:end="9:28"><name pos:start="9:8" pos:end="9:16">show_bits</name><argument_list pos:start="9:17" pos:end="9:28">(<argument pos:start="9:18" pos:end="9:23"><expr pos:start="9:18" pos:end="9:23"><operator pos:start="9:18" pos:end="9:18">&amp;</operator><name pos:start="9:19" pos:end="9:23"><name pos:start="9:19" pos:end="9:19">s</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:23">gb</name></name></expr></argument>, <argument pos:start="9:26" pos:end="9:27"><expr pos:start="9:26" pos:end="9:27"><literal type="number" pos:start="9:26" pos:end="9:27">15</literal></expr></argument>)</argument_list></call><operator pos:start="9:29" pos:end="9:30">==</operator><literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr>)</condition><block pos:start="9:33" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:21">

        <expr_stmt pos:start="11:9" pos:end="11:39"><expr pos:start="11:9" pos:end="11:38"><name pos:start="11:9" pos:end="11:11">ret</name><operator pos:start="11:12" pos:end="11:12">=</operator> <call pos:start="11:14" pos:end="11:38"><name pos:start="11:14" pos:end="11:35">h261_decode_gob_header</name><argument_list pos:start="11:36" pos:end="11:38">(<argument pos:start="11:37" pos:end="11:37"><expr pos:start="11:37" pos:end="11:37"><name pos:start="11:37" pos:end="11:37">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="13:9" pos:end="15:21"><if pos:start="13:9" pos:end="15:21">if<condition pos:start="13:11" pos:end="13:18">(<expr pos:start="13:12" pos:end="13:17"><name pos:start="13:12" pos:end="13:14">ret</name><operator pos:start="13:15" pos:end="13:16">&gt;=</operator><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:21"><block_content pos:start="15:13" pos:end="15:21">

            <return pos:start="15:13" pos:end="15:21">return <expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="line" pos:start="19:5" pos:end="19:46">//ok, its not where its supposed to be ...</comment>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:9">gb</name></name><operator pos:start="21:10" pos:end="21:10">=</operator> <name pos:start="21:12" pos:end="21:28"><name pos:start="21:12" pos:end="21:12">s</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:28">last_resync_gb</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><call pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:18">align_get_bits</name><argument_list pos:start="23:19" pos:end="23:26">(<argument pos:start="23:20" pos:end="23:25"><expr pos:start="23:20" pos:end="23:25"><operator pos:start="23:20" pos:end="23:20">&amp;</operator><name pos:start="23:21" pos:end="23:25"><name pos:start="23:21" pos:end="23:21">s</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:8">left</name><operator pos:start="25:9" pos:end="25:9">=</operator> <name pos:start="25:11" pos:end="25:28"><name pos:start="25:11" pos:end="25:11">s</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:15">gb</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:28">size_in_bits</name></name> <operator pos:start="25:30" pos:end="25:30">-</operator> <call pos:start="25:32" pos:end="25:53"><name pos:start="25:32" pos:end="25:45">get_bits_count</name><argument_list pos:start="25:46" pos:end="25:53">(<argument pos:start="25:47" pos:end="25:52"><expr pos:start="25:47" pos:end="25:52"><operator pos:start="25:47" pos:end="25:47">&amp;</operator><name pos:start="25:48" pos:end="25:52"><name pos:start="25:48" pos:end="25:48">s</name><operator pos:start="25:49" pos:end="25:50">-&gt;</operator><name pos:start="25:51" pos:end="25:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="51:5">for<control pos:start="29:8" pos:end="29:32">(<init pos:start="29:9" pos:end="29:9">;</init><condition pos:start="29:10" pos:end="29:23"><expr pos:start="29:10" pos:end="29:22"><name pos:start="29:10" pos:end="29:13">left</name><operator pos:start="29:14" pos:end="29:14">&gt;</operator><literal type="number" pos:start="29:15" pos:end="29:17">15</literal><operator pos:start="29:17" pos:end="29:17">+</operator><literal type="number" pos:start="29:18" pos:end="29:19">1</literal><operator pos:start="29:19" pos:end="29:19">+</operator><literal type="number" pos:start="29:20" pos:end="29:21">4</literal><operator pos:start="29:21" pos:end="29:21">+</operator><literal type="number" pos:start="29:22" pos:end="29:22">5</literal></expr>;</condition> <incr pos:start="29:25" pos:end="29:31"><expr pos:start="29:25" pos:end="29:31"><name pos:start="29:25" pos:end="29:28">left</name><operator pos:start="29:29" pos:end="29:30">-=</operator><literal type="number" pos:start="29:31" pos:end="29:31">8</literal></expr></incr>)</control><block pos:start="29:33" pos:end="51:5">{<block_content pos:start="31:9" pos:end="49:29">

        <if_stmt pos:start="31:9" pos:end="47:9"><if pos:start="31:9" pos:end="47:9">if<condition pos:start="31:11" pos:end="31:36">(<expr pos:start="31:12" pos:end="31:35"><call pos:start="31:12" pos:end="31:32"><name pos:start="31:12" pos:end="31:20">show_bits</name><argument_list pos:start="31:21" pos:end="31:32">(<argument pos:start="31:22" pos:end="31:27"><expr pos:start="31:22" pos:end="31:27"><operator pos:start="31:22" pos:end="31:22">&amp;</operator><name pos:start="31:23" pos:end="31:27"><name pos:start="31:23" pos:end="31:23">s</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:27">gb</name></name></expr></argument>, <argument pos:start="31:30" pos:end="31:31"><expr pos:start="31:30" pos:end="31:31"><literal type="number" pos:start="31:30" pos:end="31:31">15</literal></expr></argument>)</argument_list></call><operator pos:start="31:33" pos:end="31:34">==</operator><literal type="number" pos:start="31:35" pos:end="31:35">0</literal></expr>)</condition><block pos:start="31:37" pos:end="47:9">{<block_content pos:start="33:13" pos:end="45:23">

            <decl_stmt pos:start="33:13" pos:end="33:37"><decl pos:start="33:13" pos:end="33:36"><type pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:25">GetBitContext</name></type> <name pos:start="33:27" pos:end="33:29">bak</name><init pos:start="33:30" pos:end="33:36">= <expr pos:start="33:32" pos:end="33:36"><name pos:start="33:32" pos:end="33:36"><name pos:start="33:32" pos:end="33:32">s</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:36">gb</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="37:13" pos:end="37:43"><expr pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:15">ret</name><operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:42"><name pos:start="37:18" pos:end="37:39">h261_decode_gob_header</name><argument_list pos:start="37:40" pos:end="37:42">(<argument pos:start="37:41" pos:end="37:41"><expr pos:start="37:41" pos:end="37:41"><name pos:start="37:41" pos:end="37:41">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="41:25"><if pos:start="39:13" pos:end="41:25">if<condition pos:start="39:15" pos:end="39:22">(<expr pos:start="39:16" pos:end="39:21"><name pos:start="39:16" pos:end="39:18">ret</name><operator pos:start="39:19" pos:end="39:20">&gt;=</operator><literal type="number" pos:start="39:21" pos:end="39:21">0</literal></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:25"><block_content pos:start="41:17" pos:end="41:25">

                <return pos:start="41:17" pos:end="41:25">return <expr pos:start="41:24" pos:end="41:24"><literal type="number" pos:start="41:24" pos:end="41:24">0</literal></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="45:13" pos:end="45:23"><expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:17"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:17">gb</name></name><operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:22">bak</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><call pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:17">skip_bits</name><argument_list pos:start="49:18" pos:end="49:28">(<argument pos:start="49:19" pos:end="49:24"><expr pos:start="49:19" pos:end="49:24"><operator pos:start="49:19" pos:end="49:19">&amp;</operator><name pos:start="49:20" pos:end="49:24"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:24">gb</name></name></expr></argument>, <argument pos:start="49:27" pos:end="49:27"><expr pos:start="49:27" pos:end="49:27"><literal type="number" pos:start="49:27" pos:end="49:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="55:5" pos:end="55:14">return <expr pos:start="55:12" pos:end="55:13"><operator pos:start="55:12" pos:end="55:12">-</operator><literal type="number" pos:start="55:13" pos:end="55:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
