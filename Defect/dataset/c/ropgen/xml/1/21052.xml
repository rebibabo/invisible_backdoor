<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21052.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <name pos:start="1:12" pos:end="1:23">coroutine_fn</name></type> <name pos:start="1:25" pos:end="1:45">qcow2_co_is_allocated</name><parameter_list pos:start="1:46" pos:end="3:54">(<parameter pos:start="1:47" pos:end="1:66"><decl pos:start="1:47" pos:end="1:66"><type pos:start="1:47" pos:end="1:66"><name pos:start="1:47" pos:end="1:62">BlockDriverState</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:66">bs</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:26"><type pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:15">int64_t</name></type> <name pos:start="3:17" pos:end="3:26">sector_num</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:42">nb_sectors</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:53"><decl pos:start="3:45" pos:end="3:53"><type pos:start="3:45" pos:end="3:53"><name pos:start="3:45" pos:end="3:47">int</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">pnum</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:64">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:27">cluster_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><operator pos:start="15:5" pos:end="15:5">*</operator><name pos:start="15:6" pos:end="15:9">pnum</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <name pos:start="15:13" pos:end="15:22">nb_sectors</name></expr>;</expr_stmt>

    <comment type="block" pos:start="17:5" pos:end="19:34">/* FIXME We can get errors here, but the bdrv_co_is_allocated interface

     * can't pass them on today */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:22">qemu_co_mutex_lock</name><argument_list pos:start="21:23" pos:end="21:32">(<argument pos:start="21:24" pos:end="21:31"><expr pos:start="21:24" pos:end="21:31"><operator pos:start="21:24" pos:end="21:24">&amp;</operator><name pos:start="21:25" pos:end="21:31"><name pos:start="21:25" pos:end="21:25">s</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:79"><expr pos:start="23:5" pos:end="23:78"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:78"><name pos:start="23:11" pos:end="23:34">qcow2_get_cluster_offset</name><argument_list pos:start="23:35" pos:end="23:78">(<argument pos:start="23:36" pos:end="23:37"><expr pos:start="23:36" pos:end="23:37"><name pos:start="23:36" pos:end="23:37">bs</name></expr></argument>, <argument pos:start="23:40" pos:end="23:54"><expr pos:start="23:40" pos:end="23:54"><name pos:start="23:40" pos:end="23:49">sector_num</name> <operator pos:start="23:51" pos:end="23:52">&lt;&lt;</operator> <literal type="number" pos:start="23:54" pos:end="23:54">9</literal></expr></argument>, <argument pos:start="23:57" pos:end="23:60"><expr pos:start="23:57" pos:end="23:60"><name pos:start="23:57" pos:end="23:60">pnum</name></expr></argument>, <argument pos:start="23:63" pos:end="23:77"><expr pos:start="23:63" pos:end="23:77"><operator pos:start="23:63" pos:end="23:63">&amp;</operator><name pos:start="23:64" pos:end="23:77">cluster_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><call pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:24">qemu_co_mutex_unlock</name><argument_list pos:start="25:25" pos:end="25:34">(<argument pos:start="25:26" pos:end="25:33"><expr pos:start="25:26" pos:end="25:33"><operator pos:start="25:26" pos:end="25:26">&amp;</operator><name pos:start="25:27" pos:end="25:33"><name pos:start="25:27" pos:end="25:27">s</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:33">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition> <block pos:start="27:18" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:18">

        <expr_stmt pos:start="29:9" pos:end="29:18"><expr pos:start="29:9" pos:end="29:17"><operator pos:start="29:9" pos:end="29:9">*</operator><name pos:start="29:10" pos:end="29:13">pnum</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="35:5" pos:end="35:64">return <expr pos:start="35:12" pos:end="35:63"><operator pos:start="35:12" pos:end="35:12">(</operator><name pos:start="35:13" pos:end="35:26">cluster_offset</name> <operator pos:start="35:28" pos:end="35:29">!=</operator> <literal type="number" pos:start="35:31" pos:end="35:31">0</literal><operator pos:start="35:32" pos:end="35:32">)</operator> <operator pos:start="35:34" pos:end="35:35">||</operator> <operator pos:start="35:37" pos:end="35:37">(</operator><name pos:start="35:38" pos:end="35:40">ret</name> <operator pos:start="35:42" pos:end="35:43">==</operator> <name pos:start="35:45" pos:end="35:62">QCOW2_CLUSTER_ZERO</name><operator pos:start="35:63" pos:end="35:63">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
