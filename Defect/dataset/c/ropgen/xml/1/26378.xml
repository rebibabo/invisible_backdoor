<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26378.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">parse_iplconvkernel</name><parameter_list pos:start="1:31" pos:end="1:80">(<parameter pos:start="1:32" pos:end="1:53"><decl pos:start="1:32" pos:end="1:53"><type pos:start="1:32" pos:end="1:53"><name pos:start="1:32" pos:end="1:44">IplConvKernel</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier><modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:53">kernel</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:64"><decl pos:start="1:56" pos:end="1:64"><type pos:start="1:56" pos:end="1:64"><name pos:start="1:56" pos:end="1:59">char</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">buf</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:79"><decl pos:start="1:67" pos:end="1:79"><type pos:start="1:67" pos:end="1:79"><name pos:start="1:67" pos:end="1:70">void</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:79">log_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:13">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:28"><name pos:start="5:10" pos:end="5:23">shape_filename</name><index pos:start="5:24" pos:end="5:28">[<expr pos:start="5:25" pos:end="5:27"><literal type="number" pos:start="5:25" pos:end="5:27">128</literal></expr>]</index></name> <init pos:start="5:30" pos:end="5:33">= <expr pos:start="5:32" pos:end="5:33"><literal type="string" pos:start="5:32" pos:end="5:33">""</literal></expr></init></decl>, <decl pos:start="5:36" pos:end="5:57"><type ref="prev" pos:start="5:5" pos:end="5:8"/><name pos:start="5:36" pos:end="5:48"><name pos:start="5:36" pos:end="5:44">shape_str</name><index pos:start="5:45" pos:end="5:48">[<expr pos:start="5:46" pos:end="5:47"><literal type="number" pos:start="5:46" pos:end="5:47">32</literal></expr>]</index></name> <init pos:start="5:50" pos:end="5:57">= <expr pos:start="5:52" pos:end="5:57"><literal type="string" pos:start="5:52" pos:end="5:57">"rect"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:78"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">cols</name> <init pos:start="7:14" pos:end="7:16">= <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr></init></decl>, <decl pos:start="7:19" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:22">rows</name> <init pos:start="7:24" pos:end="7:26">= <expr pos:start="7:26" pos:end="7:26"><literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr></init></decl>, <decl pos:start="7:29" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:36">anchor_x</name> <init pos:start="7:38" pos:end="7:40">= <expr pos:start="7:40" pos:end="7:40"><literal type="number" pos:start="7:40" pos:end="7:40">0</literal></expr></init></decl>, <decl pos:start="7:43" pos:end="7:54"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:43" pos:end="7:50">anchor_y</name> <init pos:start="7:52" pos:end="7:54">= <expr pos:start="7:54" pos:end="7:54"><literal type="number" pos:start="7:54" pos:end="7:54">0</literal></expr></init></decl>, <decl pos:start="7:57" pos:end="7:77"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:57" pos:end="7:61">shape</name> <init pos:start="7:63" pos:end="7:77">= <expr pos:start="7:65" pos:end="7:77"><name pos:start="7:65" pos:end="7:77">CV_SHAPE_RECT</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:7">int</name> <modifier pos:start="9:9" pos:end="9:9">*</modifier></type><name pos:start="9:10" pos:end="9:15">values</name> <init pos:start="9:17" pos:end="9:22">= <expr pos:start="9:19" pos:end="9:22"><name pos:start="9:19" pos:end="9:22">NULL</name></expr></init></decl>, <decl pos:start="9:25" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="9:25" pos:end="9:27">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:108"><expr pos:start="13:5" pos:end="13:107"><call pos:start="13:5" pos:end="13:107"><name pos:start="13:5" pos:end="13:10">sscanf</name><argument_list pos:start="13:11" pos:end="13:107">(<argument pos:start="13:12" pos:end="13:14"><expr pos:start="13:12" pos:end="13:14"><name pos:start="13:12" pos:end="13:14">buf</name></expr></argument>, <argument pos:start="13:17" pos:end="13:43"><expr pos:start="13:17" pos:end="13:43"><literal type="string" pos:start="13:17" pos:end="13:43">"%dx%d+%dx%d/%32[^=]=%127s"</literal></expr></argument>, <argument pos:start="13:46" pos:end="13:50"><expr pos:start="13:46" pos:end="13:50"><operator pos:start="13:46" pos:end="13:46">&amp;</operator><name pos:start="13:47" pos:end="13:50">cols</name></expr></argument>, <argument pos:start="13:53" pos:end="13:57"><expr pos:start="13:53" pos:end="13:57"><operator pos:start="13:53" pos:end="13:53">&amp;</operator><name pos:start="13:54" pos:end="13:57">rows</name></expr></argument>, <argument pos:start="13:60" pos:end="13:68"><expr pos:start="13:60" pos:end="13:68"><operator pos:start="13:60" pos:end="13:60">&amp;</operator><name pos:start="13:61" pos:end="13:68">anchor_x</name></expr></argument>, <argument pos:start="13:71" pos:end="13:79"><expr pos:start="13:71" pos:end="13:79"><operator pos:start="13:71" pos:end="13:71">&amp;</operator><name pos:start="13:72" pos:end="13:79">anchor_y</name></expr></argument>, <argument pos:start="13:82" pos:end="13:90"><expr pos:start="13:82" pos:end="13:90"><name pos:start="13:82" pos:end="13:90">shape_str</name></expr></argument>, <argument pos:start="13:93" pos:end="13:106"><expr pos:start="13:93" pos:end="13:106"><name pos:start="13:93" pos:end="13:106">shape_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="39:5"><if pos:start="17:5" pos:end="17:66">if      <condition pos:start="17:13" pos:end="17:43">(<expr pos:start="17:14" pos:end="17:42"><operator pos:start="17:14" pos:end="17:14">!</operator><call pos:start="17:15" pos:end="17:42"><name pos:start="17:15" pos:end="17:20">strcmp</name><argument_list pos:start="17:21" pos:end="17:42">(<argument pos:start="17:22" pos:end="17:30"><expr pos:start="17:22" pos:end="17:30"><name pos:start="17:22" pos:end="17:30">shape_str</name></expr></argument>, <argument pos:start="17:33" pos:end="17:38"><expr pos:start="17:33" pos:end="17:38"><literal type="string" pos:start="17:33" pos:end="17:38">"rect"</literal></expr></argument>   )</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:45" pos:end="17:66"><block_content pos:start="17:45" pos:end="17:66"> <expr_stmt pos:start="17:45" pos:end="17:66"><expr pos:start="17:45" pos:end="17:65"><name pos:start="17:45" pos:end="17:49">shape</name> <operator pos:start="17:51" pos:end="17:51">=</operator> <name pos:start="17:53" pos:end="17:65">CV_SHAPE_RECT</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="19:5" pos:end="19:67">else if <condition pos:start="19:13" pos:end="19:43">(<expr pos:start="19:14" pos:end="19:42"><operator pos:start="19:14" pos:end="19:14">!</operator><call pos:start="19:15" pos:end="19:42"><name pos:start="19:15" pos:end="19:20">strcmp</name><argument_list pos:start="19:21" pos:end="19:42">(<argument pos:start="19:22" pos:end="19:30"><expr pos:start="19:22" pos:end="19:30"><name pos:start="19:22" pos:end="19:30">shape_str</name></expr></argument>, <argument pos:start="19:33" pos:end="19:39"><expr pos:start="19:33" pos:end="19:39"><literal type="string" pos:start="19:33" pos:end="19:39">"cross"</literal></expr></argument>  )</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:45" pos:end="19:67"><block_content pos:start="19:45" pos:end="19:67"> <expr_stmt pos:start="19:45" pos:end="19:67"><expr pos:start="19:45" pos:end="19:66"><name pos:start="19:45" pos:end="19:49">shape</name> <operator pos:start="19:51" pos:end="19:51">=</operator> <name pos:start="19:53" pos:end="19:66">CV_SHAPE_CROSS</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="21:5" pos:end="21:69">else if <condition pos:start="21:13" pos:end="21:43">(<expr pos:start="21:14" pos:end="21:42"><operator pos:start="21:14" pos:end="21:14">!</operator><call pos:start="21:15" pos:end="21:42"><name pos:start="21:15" pos:end="21:20">strcmp</name><argument_list pos:start="21:21" pos:end="21:42">(<argument pos:start="21:22" pos:end="21:30"><expr pos:start="21:22" pos:end="21:30"><name pos:start="21:22" pos:end="21:30">shape_str</name></expr></argument>, <argument pos:start="21:33" pos:end="21:41"><expr pos:start="21:33" pos:end="21:41"><literal type="string" pos:start="21:33" pos:end="21:41">"ellipse"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:45" pos:end="21:69"><block_content pos:start="21:45" pos:end="21:69"> <expr_stmt pos:start="21:45" pos:end="21:69"><expr pos:start="21:45" pos:end="21:68"><name pos:start="21:45" pos:end="21:49">shape</name> <operator pos:start="21:51" pos:end="21:51">=</operator> <name pos:start="21:53" pos:end="21:68">CV_SHAPE_ELLIPSE</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="23:5" pos:end="31:5">else if <condition pos:start="23:13" pos:end="23:43">(<expr pos:start="23:14" pos:end="23:42"><operator pos:start="23:14" pos:end="23:14">!</operator><call pos:start="23:15" pos:end="23:42"><name pos:start="23:15" pos:end="23:20">strcmp</name><argument_list pos:start="23:21" pos:end="23:42">(<argument pos:start="23:22" pos:end="23:30"><expr pos:start="23:22" pos:end="23:30"><name pos:start="23:22" pos:end="23:30">shape_str</name></expr></argument>, <argument pos:start="23:33" pos:end="23:40"><expr pos:start="23:33" pos:end="23:40"><literal type="string" pos:start="23:33" pos:end="23:40">"custom"</literal></expr></argument> )</argument_list></call></expr>)</condition> <block pos:start="23:45" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:23">

        <expr_stmt pos:start="25:9" pos:end="25:32"><expr pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:13">shape</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:31">CV_SHAPE_CUSTOM</name></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:23"><if pos:start="27:9" pos:end="29:23">if <condition pos:start="27:12" pos:end="27:93">(<expr pos:start="27:13" pos:end="27:92"><operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:16">ret</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:87"><name pos:start="27:20" pos:end="27:39">read_shape_from_file</name><argument_list pos:start="27:40" pos:end="27:87">(<argument pos:start="27:41" pos:end="27:45"><expr pos:start="27:41" pos:end="27:45"><operator pos:start="27:41" pos:end="27:41">&amp;</operator><name pos:start="27:42" pos:end="27:45">cols</name></expr></argument>, <argument pos:start="27:48" pos:end="27:52"><expr pos:start="27:48" pos:end="27:52"><operator pos:start="27:48" pos:end="27:48">&amp;</operator><name pos:start="27:49" pos:end="27:52">rows</name></expr></argument>, <argument pos:start="27:55" pos:end="27:61"><expr pos:start="27:55" pos:end="27:61"><operator pos:start="27:55" pos:end="27:55">&amp;</operator><name pos:start="27:56" pos:end="27:61">values</name></expr></argument>, <argument pos:start="27:64" pos:end="27:77"><expr pos:start="27:64" pos:end="27:77"><name pos:start="27:64" pos:end="27:77">shape_filename</name></expr></argument>, <argument pos:start="27:80" pos:end="27:86"><expr pos:start="27:80" pos:end="27:86"><name pos:start="27:80" pos:end="27:86">log_ctx</name></expr></argument>)</argument_list></call><operator pos:start="27:88" pos:end="27:88">)</operator> <operator pos:start="27:90" pos:end="27:90">&lt;</operator> <literal type="number" pos:start="27:92" pos:end="27:92">0</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:23"><block_content pos:start="29:13" pos:end="29:23">

            <return pos:start="29:13" pos:end="29:23">return <expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="39:5">else <block pos:start="31:12" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:31">

        <expr_stmt pos:start="33:9" pos:end="35:71"><expr pos:start="33:9" pos:end="35:70"><call pos:start="33:9" pos:end="35:70"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="35:70">(<argument pos:start="33:16" pos:end="33:22"><expr pos:start="33:16" pos:end="33:22"><name pos:start="33:16" pos:end="33:22">log_ctx</name></expr></argument>, <argument pos:start="33:25" pos:end="33:36"><expr pos:start="33:25" pos:end="33:36"><name pos:start="33:25" pos:end="33:36">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="35:16" pos:end="35:58"><expr pos:start="35:16" pos:end="35:58"><literal type="string" pos:start="35:16" pos:end="35:58">"Shape unspecified or type '%s' unknown.\n"</literal></expr></argument>, <argument pos:start="35:61" pos:end="35:69"><expr pos:start="35:61" pos:end="35:69"><name pos:start="35:61" pos:end="35:69">shape_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:31">(<expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:12">rows</name> <operator pos:start="43:14" pos:end="43:15">&lt;=</operator> <literal type="number" pos:start="43:17" pos:end="43:17">0</literal> <operator pos:start="43:19" pos:end="43:20">||</operator> <name pos:start="43:22" pos:end="43:25">cols</name> <operator pos:start="43:27" pos:end="43:28">&lt;=</operator> <literal type="number" pos:start="43:30" pos:end="43:30">0</literal></expr>)</condition> <block pos:start="43:33" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:31">

        <expr_stmt pos:start="45:9" pos:end="47:81"><expr pos:start="45:9" pos:end="47:80"><call pos:start="45:9" pos:end="47:80"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="47:80">(<argument pos:start="45:16" pos:end="45:22"><expr pos:start="45:16" pos:end="45:22"><name pos:start="45:16" pos:end="45:22">log_ctx</name></expr></argument>, <argument pos:start="45:25" pos:end="45:36"><expr pos:start="45:25" pos:end="45:36"><name pos:start="45:25" pos:end="45:36">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="47:16" pos:end="47:67"><expr pos:start="47:16" pos:end="47:67"><literal type="string" pos:start="47:16" pos:end="47:67">"Invalid non-positive values for shape size %dx%d\n"</literal></expr></argument>, <argument pos:start="47:70" pos:end="47:73"><expr pos:start="47:70" pos:end="47:73"><name pos:start="47:70" pos:end="47:73">cols</name></expr></argument>, <argument pos:start="47:76" pos:end="47:79"><expr pos:start="47:76" pos:end="47:79"><name pos:start="47:76" pos:end="47:79">rows</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:31">return <expr pos:start="49:16" pos:end="49:30"><call pos:start="49:16" pos:end="49:30"><name pos:start="49:16" pos:end="49:22">AVERROR</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="65:5"><if pos:start="55:5" pos:end="65:5">if <condition pos:start="55:8" pos:end="55:77">(<expr pos:start="55:9" pos:end="55:76"><name pos:start="55:9" pos:end="55:16">anchor_x</name> <operator pos:start="55:18" pos:end="55:18">&lt;</operator> <literal type="number" pos:start="55:20" pos:end="55:20">0</literal> <operator pos:start="55:22" pos:end="55:23">||</operator> <name pos:start="55:25" pos:end="55:32">anchor_y</name> <operator pos:start="55:34" pos:end="55:34">&lt;</operator> <literal type="number" pos:start="55:36" pos:end="55:36">0</literal> <operator pos:start="55:38" pos:end="55:39">||</operator> <name pos:start="55:41" pos:end="55:48">anchor_x</name> <operator pos:start="55:50" pos:end="55:51">&gt;=</operator> <name pos:start="55:53" pos:end="55:56">cols</name> <operator pos:start="55:58" pos:end="55:59">||</operator> <name pos:start="55:61" pos:end="55:68">anchor_y</name> <operator pos:start="55:70" pos:end="55:71">&gt;=</operator> <name pos:start="55:73" pos:end="55:76">rows</name></expr>)</condition> <block pos:start="55:79" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:31">

        <expr_stmt pos:start="57:9" pos:end="61:47"><expr pos:start="57:9" pos:end="61:46"><call pos:start="57:9" pos:end="61:46"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="61:46">(<argument pos:start="57:16" pos:end="57:22"><expr pos:start="57:16" pos:end="57:22"><name pos:start="57:16" pos:end="57:22">log_ctx</name></expr></argument>, <argument pos:start="57:25" pos:end="57:36"><expr pos:start="57:25" pos:end="57:36"><name pos:start="57:25" pos:end="57:36">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="59:16" pos:end="59:82"><expr pos:start="59:16" pos:end="59:82"><literal type="string" pos:start="59:16" pos:end="59:82">"Shape anchor %dx%d is not inside the rectangle with size %dx%d.\n"</literal></expr></argument>,

               <argument pos:start="61:16" pos:end="61:23"><expr pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:23">anchor_x</name></expr></argument>, <argument pos:start="61:26" pos:end="61:33"><expr pos:start="61:26" pos:end="61:33"><name pos:start="61:26" pos:end="61:33">anchor_y</name></expr></argument>, <argument pos:start="61:36" pos:end="61:39"><expr pos:start="61:36" pos:end="61:39"><name pos:start="61:36" pos:end="61:39">cols</name></expr></argument>, <argument pos:start="61:42" pos:end="61:45"><expr pos:start="61:42" pos:end="61:45"><name pos:start="61:42" pos:end="61:45">rows</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:31">return <expr pos:start="63:16" pos:end="63:30"><call pos:start="63:16" pos:end="63:30"><name pos:start="63:16" pos:end="63:22">AVERROR</name><argument_list pos:start="63:23" pos:end="63:30">(<argument pos:start="63:24" pos:end="63:29"><expr pos:start="63:24" pos:end="63:29"><name pos:start="63:24" pos:end="63:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:90"><expr pos:start="69:5" pos:end="69:89"><operator pos:start="69:5" pos:end="69:5">*</operator><name pos:start="69:6" pos:end="69:11">kernel</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:89"><name pos:start="69:15" pos:end="69:42">cvCreateStructuringElementEx</name><argument_list pos:start="69:43" pos:end="69:89">(<argument pos:start="69:44" pos:end="69:47"><expr pos:start="69:44" pos:end="69:47"><name pos:start="69:44" pos:end="69:47">cols</name></expr></argument>, <argument pos:start="69:50" pos:end="69:53"><expr pos:start="69:50" pos:end="69:53"><name pos:start="69:50" pos:end="69:53">rows</name></expr></argument>, <argument pos:start="69:56" pos:end="69:63"><expr pos:start="69:56" pos:end="69:63"><name pos:start="69:56" pos:end="69:63">anchor_x</name></expr></argument>, <argument pos:start="69:66" pos:end="69:73"><expr pos:start="69:66" pos:end="69:73"><name pos:start="69:66" pos:end="69:73">anchor_y</name></expr></argument>, <argument pos:start="69:76" pos:end="69:80"><expr pos:start="69:76" pos:end="69:80"><name pos:start="69:76" pos:end="69:80">shape</name></expr></argument>, <argument pos:start="69:83" pos:end="69:88"><expr pos:start="69:83" pos:end="69:88"><name pos:start="69:83" pos:end="69:88">values</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:22"><expr pos:start="71:5" pos:end="71:21"><call pos:start="71:5" pos:end="71:21"><name pos:start="71:5" pos:end="71:12">av_freep</name><argument_list pos:start="71:13" pos:end="71:21">(<argument pos:start="71:14" pos:end="71:20"><expr pos:start="71:14" pos:end="71:20"><operator pos:start="71:14" pos:end="71:14">&amp;</operator><name pos:start="71:15" pos:end="71:20">values</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="75:31"><if pos:start="73:5" pos:end="75:31">if <condition pos:start="73:8" pos:end="73:17">(<expr pos:start="73:9" pos:end="73:16"><operator pos:start="73:9" pos:end="73:9">!</operator><operator pos:start="73:10" pos:end="73:10">*</operator><name pos:start="73:11" pos:end="73:16">kernel</name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:31"><block_content pos:start="75:9" pos:end="75:31">

        <return pos:start="75:9" pos:end="75:31">return <expr pos:start="75:16" pos:end="75:30"><call pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:22">AVERROR</name><argument_list pos:start="75:23" pos:end="75:30">(<argument pos:start="75:24" pos:end="75:29"><expr pos:start="75:24" pos:end="75:29"><name pos:start="75:24" pos:end="75:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="81:54"><expr pos:start="79:5" pos:end="81:53"><call pos:start="79:5" pos:end="81:53"><name pos:start="79:5" pos:end="79:10">av_log</name><argument_list pos:start="79:11" pos:end="81:53">(<argument pos:start="79:12" pos:end="79:18"><expr pos:start="79:12" pos:end="79:18"><name pos:start="79:12" pos:end="79:18">log_ctx</name></expr></argument>, <argument pos:start="79:21" pos:end="79:34"><expr pos:start="79:21" pos:end="79:34"><name pos:start="79:21" pos:end="79:34">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="79:37" pos:end="79:89"><expr pos:start="79:37" pos:end="79:89"><literal type="string" pos:start="79:37" pos:end="79:89">"Structuring element: w:%d h:%d x:%d y:%d shape:%s\n"</literal></expr></argument>,

           <argument pos:start="81:12" pos:end="81:15"><expr pos:start="81:12" pos:end="81:15"><name pos:start="81:12" pos:end="81:15">rows</name></expr></argument>, <argument pos:start="81:18" pos:end="81:21"><expr pos:start="81:18" pos:end="81:21"><name pos:start="81:18" pos:end="81:21">cols</name></expr></argument>, <argument pos:start="81:24" pos:end="81:31"><expr pos:start="81:24" pos:end="81:31"><name pos:start="81:24" pos:end="81:31">anchor_x</name></expr></argument>, <argument pos:start="81:34" pos:end="81:41"><expr pos:start="81:34" pos:end="81:41"><name pos:start="81:34" pos:end="81:41">anchor_y</name></expr></argument>, <argument pos:start="81:44" pos:end="81:52"><expr pos:start="81:44" pos:end="81:52"><name pos:start="81:44" pos:end="81:52">shape_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
