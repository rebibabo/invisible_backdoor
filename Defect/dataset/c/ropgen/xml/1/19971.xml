<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19971.c" pos:tabs="8"><function pos:start="1:1" pos:end="221:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vfio_get_device</name><parameter_list pos:start="1:27" pos:end="1:80">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:36">VFIOGroup</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">group</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">name</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:79"><decl pos:start="1:64" pos:end="1:79"><type pos:start="1:64" pos:end="1:79"><name pos:start="1:64" pos:end="1:73">VFIODevice</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:79">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="221:1">{<block_content pos:start="5:5" pos:end="219:15">

    <decl_stmt pos:start="5:5" pos:end="5:69"><decl pos:start="5:5" pos:end="5:68"><type pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:27">vfio_device_info</name></name></type> <name pos:start="5:29" pos:end="5:36">dev_info</name> <init pos:start="5:38" pos:end="5:68">= <expr pos:start="5:40" pos:end="5:68"><block pos:start="5:40" pos:end="5:68">{ <expr pos:start="5:42" pos:end="5:66"><operator pos:start="5:42" pos:end="5:42">.</operator><name pos:start="5:43" pos:end="5:47">argsz</name> <operator pos:start="5:49" pos:end="5:49">=</operator> sizeof<operator pos:start="5:57" pos:end="5:57">(</operator><name pos:start="5:58" pos:end="5:65">dev_info</name><operator pos:start="5:66" pos:end="5:66">)</operator></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:69"><decl pos:start="7:5" pos:end="7:68"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:27">vfio_region_info</name></name></type> <name pos:start="7:29" pos:end="7:36">reg_info</name> <init pos:start="7:38" pos:end="7:68">= <expr pos:start="7:40" pos:end="7:68"><block pos:start="7:40" pos:end="7:68">{ <expr pos:start="7:42" pos:end="7:66"><operator pos:start="7:42" pos:end="7:42">.</operator><name pos:start="7:43" pos:end="7:47">argsz</name> <operator pos:start="7:49" pos:end="7:49">=</operator> sizeof<operator pos:start="7:57" pos:end="7:57">(</operator><name pos:start="7:58" pos:end="7:65">reg_info</name><operator pos:start="7:66" pos:end="7:66">)</operator></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:59"><expr pos:start="13:5" pos:end="13:58"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:58"><name pos:start="13:11" pos:end="13:15">ioctl</name><argument_list pos:start="13:16" pos:end="13:58">(<argument pos:start="13:17" pos:end="13:25"><expr pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:21">group</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:25">fd</name></name></expr></argument>, <argument pos:start="13:28" pos:end="13:51"><expr pos:start="13:28" pos:end="13:51"><name pos:start="13:28" pos:end="13:51">VFIO_GROUP_GET_DEVICE_FD</name></expr></argument>, <argument pos:start="13:54" pos:end="13:57"><expr pos:start="13:54" pos:end="13:57"><name pos:start="13:54" pos:end="13:57">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="27:5"><if pos:start="15:5" pos:end="27:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">&lt;</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>)</condition> <block pos:start="15:18" pos:end="27:5">{<block_content pos:start="17:9" pos:end="25:19">

        <expr_stmt pos:start="17:9" pos:end="19:43"><expr pos:start="17:9" pos:end="19:42"><call pos:start="17:9" pos:end="19:42"><name pos:start="17:9" pos:end="17:20">error_report</name><argument_list pos:start="17:21" pos:end="19:42">(<argument pos:start="17:22" pos:end="17:72"><expr pos:start="17:22" pos:end="17:72"><literal type="string" pos:start="17:22" pos:end="17:72">"vfio: error getting device %s from group %d: %m\n"</literal></expr></argument>,

                     <argument pos:start="19:22" pos:end="19:25"><expr pos:start="19:22" pos:end="19:25"><name pos:start="19:22" pos:end="19:25">name</name></expr></argument>, <argument pos:start="19:28" pos:end="19:41"><expr pos:start="19:28" pos:end="19:41"><name pos:start="19:28" pos:end="19:41"><name pos:start="19:28" pos:end="19:32">group</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:41">groupid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="23:77"><expr pos:start="21:9" pos:end="23:76"><call pos:start="21:9" pos:end="23:76"><name pos:start="21:9" pos:end="21:20">error_report</name><argument_list pos:start="21:21" pos:end="23:76">(<argument pos:start="21:22" pos:end="23:59"><expr pos:start="21:22" pos:end="23:59"><literal type="string" pos:start="21:22" pos:end="21:76">"Verify all devices in group %d are bound to vfio-pci "</literal>

                     <literal type="string" pos:start="23:22" pos:end="23:59">"or pci-stub and not already in use\n"</literal></expr></argument>, <argument pos:start="23:62" pos:end="23:75"><expr pos:start="23:62" pos:end="23:75"><name pos:start="23:62" pos:end="23:75"><name pos:start="23:62" pos:end="23:66">group</name><operator pos:start="23:67" pos:end="23:68">-&gt;</operator><name pos:start="23:69" pos:end="23:75">groupid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:19">return <expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:19"><expr pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:8">vdev</name><operator pos:start="31:9" pos:end="31:10">-&gt;</operator><name pos:start="31:11" pos:end="31:12">fd</name></name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:18">ret</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:15"><name pos:start="33:5" pos:end="33:8">vdev</name><operator pos:start="33:9" pos:end="33:10">-&gt;</operator><name pos:start="33:11" pos:end="33:15">group</name></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:23">group</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:55"><expr pos:start="35:5" pos:end="35:54"><call pos:start="35:5" pos:end="35:54"><name pos:start="35:5" pos:end="35:21">QLIST_INSERT_HEAD</name><argument_list pos:start="35:22" pos:end="35:54">(<argument pos:start="35:23" pos:end="35:41"><expr pos:start="35:23" pos:end="35:41"><operator pos:start="35:23" pos:end="35:23">&amp;</operator><name pos:start="35:24" pos:end="35:41"><name pos:start="35:24" pos:end="35:28">group</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:41">device_list</name></name></expr></argument>, <argument pos:start="35:44" pos:end="35:47"><expr pos:start="35:44" pos:end="35:47"><name pos:start="35:44" pos:end="35:47">vdev</name></expr></argument>, <argument pos:start="35:50" pos:end="35:53"><expr pos:start="35:50" pos:end="35:53"><name pos:start="35:50" pos:end="35:53">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:29">/* Sanity check device */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:59"><expr pos:start="41:5" pos:end="41:58"><name pos:start="41:5" pos:end="41:7">ret</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:58"><name pos:start="41:11" pos:end="41:15">ioctl</name><argument_list pos:start="41:16" pos:end="41:58">(<argument pos:start="41:17" pos:end="41:24"><expr pos:start="41:17" pos:end="41:24"><name pos:start="41:17" pos:end="41:24"><name pos:start="41:17" pos:end="41:20">vdev</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:24">fd</name></name></expr></argument>, <argument pos:start="41:27" pos:end="41:46"><expr pos:start="41:27" pos:end="41:46"><name pos:start="41:27" pos:end="41:46">VFIO_DEVICE_GET_INFO</name></expr></argument>, <argument pos:start="41:49" pos:end="41:57"><expr pos:start="41:49" pos:end="41:57"><operator pos:start="41:49" pos:end="41:49">&amp;</operator><name pos:start="41:50" pos:end="41:57">dev_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:12">(<expr pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">ret</name></expr>)</condition> <block pos:start="43:14" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:19">

        <expr_stmt pos:start="45:9" pos:end="45:62"><expr pos:start="45:9" pos:end="45:61"><call pos:start="45:9" pos:end="45:61"><name pos:start="45:9" pos:end="45:20">error_report</name><argument_list pos:start="45:21" pos:end="45:61">(<argument pos:start="45:22" pos:end="45:60"><expr pos:start="45:22" pos:end="45:60"><literal type="string" pos:start="45:22" pos:end="45:60">"vfio: error getting device info: %m\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:19">goto <name pos:start="47:14" pos:end="47:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="55:69"><expr pos:start="53:5" pos:end="55:68"><call pos:start="53:5" pos:end="55:68"><name pos:start="53:5" pos:end="53:11">DPRINTF</name><argument_list pos:start="53:12" pos:end="55:68">(<argument pos:start="53:13" pos:end="53:58"><expr pos:start="53:13" pos:end="53:58"><literal type="string" pos:start="53:13" pos:end="53:58">"Device %s flags: %u, regions: %u, irgs: %u\n"</literal></expr></argument>, <argument pos:start="53:61" pos:end="53:64"><expr pos:start="53:61" pos:end="53:64"><name pos:start="53:61" pos:end="53:64">name</name></expr></argument>,

            <argument pos:start="55:13" pos:end="55:26"><expr pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:20">dev_info</name><operator pos:start="55:21" pos:end="55:21">.</operator><name pos:start="55:22" pos:end="55:26">flags</name></name></expr></argument>, <argument pos:start="55:29" pos:end="55:48"><expr pos:start="55:29" pos:end="55:48"><name pos:start="55:29" pos:end="55:48"><name pos:start="55:29" pos:end="55:36">dev_info</name><operator pos:start="55:37" pos:end="55:37">.</operator><name pos:start="55:38" pos:end="55:48">num_regions</name></name></expr></argument>, <argument pos:start="55:51" pos:end="55:67"><expr pos:start="55:51" pos:end="55:67"><name pos:start="55:51" pos:end="55:67"><name pos:start="55:51" pos:end="55:58">dev_info</name><operator pos:start="55:59" pos:end="55:59">.</operator><name pos:start="55:60" pos:end="55:67">num_irqs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:50">(<expr pos:start="59:9" pos:end="59:49"><operator pos:start="59:9" pos:end="59:9">!</operator><operator pos:start="59:10" pos:end="59:10">(</operator><name pos:start="59:11" pos:end="59:24"><name pos:start="59:11" pos:end="59:18">dev_info</name><operator pos:start="59:19" pos:end="59:19">.</operator><name pos:start="59:20" pos:end="59:24">flags</name></name> <operator pos:start="59:26" pos:end="59:26">&amp;</operator> <name pos:start="59:28" pos:end="59:48">VFIO_DEVICE_FLAGS_PCI</name><operator pos:start="59:49" pos:end="59:49">)</operator></expr>)</condition> <block pos:start="59:52" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:19">

        <expr_stmt pos:start="61:9" pos:end="61:60"><expr pos:start="61:9" pos:end="61:59"><call pos:start="61:9" pos:end="61:59"><name pos:start="61:9" pos:end="61:20">error_report</name><argument_list pos:start="61:21" pos:end="61:59">(<argument pos:start="61:22" pos:end="61:58"><expr pos:start="61:22" pos:end="61:58"><literal type="string" pos:start="61:22" pos:end="61:58">"vfio: Um, this isn't a PCI device\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:19">goto <name pos:start="63:14" pos:end="63:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:69"><expr pos:start="69:5" pos:end="69:68"><name pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:8">vdev</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:21">reset_works</name></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <operator pos:start="69:25" pos:end="69:25">!</operator><operator pos:start="69:26" pos:end="69:26">!</operator><operator pos:start="69:27" pos:end="69:27">(</operator><name pos:start="69:28" pos:end="69:41"><name pos:start="69:28" pos:end="69:35">dev_info</name><operator pos:start="69:36" pos:end="69:36">.</operator><name pos:start="69:37" pos:end="69:41">flags</name></name> <operator pos:start="69:43" pos:end="69:43">&amp;</operator> <name pos:start="69:45" pos:end="69:67">VFIO_DEVICE_FLAGS_RESET</name><operator pos:start="69:68" pos:end="69:68">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="75:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:27">(<expr pos:start="71:9" pos:end="71:26"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:26"><name pos:start="71:10" pos:end="71:13">vdev</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:26">reset_works</name></name></expr>)</condition> <block pos:start="71:29" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:74">

        <expr_stmt pos:start="73:9" pos:end="73:74"><expr pos:start="73:9" pos:end="73:73"><call pos:start="73:9" pos:end="73:73"><name pos:start="73:9" pos:end="73:20">error_report</name><argument_list pos:start="73:21" pos:end="73:73">(<argument pos:start="73:22" pos:end="73:66"><expr pos:start="73:22" pos:end="73:66"><literal type="string" pos:start="73:22" pos:end="73:66">"Warning, device %s does not support reset\n"</literal></expr></argument>, <argument pos:start="73:69" pos:end="73:72"><expr pos:start="73:69" pos:end="73:72"><name pos:start="73:69" pos:end="73:72">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="87:5"><if pos:start="79:5" pos:end="87:5">if <condition pos:start="79:8" pos:end="79:53">(<expr pos:start="79:9" pos:end="79:52"><name pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:16">dev_info</name><operator pos:start="79:17" pos:end="79:17">.</operator><name pos:start="79:18" pos:end="79:28">num_regions</name></name> <operator pos:start="79:30" pos:end="79:31">!=</operator> <name pos:start="79:33" pos:end="79:52">VFIO_PCI_NUM_REGIONS</name></expr>)</condition> <block pos:start="79:55" pos:end="87:5">{<block_content pos:start="81:9" pos:end="85:19">

        <expr_stmt pos:start="81:9" pos:end="83:43"><expr pos:start="81:9" pos:end="83:42"><call pos:start="81:9" pos:end="83:42"><name pos:start="81:9" pos:end="81:20">error_report</name><argument_list pos:start="81:21" pos:end="83:42">(<argument pos:start="81:22" pos:end="81:65"><expr pos:start="81:22" pos:end="81:65"><literal type="string" pos:start="81:22" pos:end="81:65">"vfio: unexpected number of io regions %u\n"</literal></expr></argument>,

                     <argument pos:start="83:22" pos:end="83:41"><expr pos:start="83:22" pos:end="83:41"><name pos:start="83:22" pos:end="83:41"><name pos:start="83:22" pos:end="83:29">dev_info</name><operator pos:start="83:30" pos:end="83:30">.</operator><name pos:start="83:31" pos:end="83:41">num_regions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="85:9" pos:end="85:19">goto <name pos:start="85:14" pos:end="85:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:47">(<expr pos:start="91:9" pos:end="91:46"><name pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:16">dev_info</name><operator pos:start="91:17" pos:end="91:17">.</operator><name pos:start="91:18" pos:end="91:25">num_irqs</name></name> <operator pos:start="91:27" pos:end="91:28">!=</operator> <name pos:start="91:30" pos:end="91:46">VFIO_PCI_NUM_IRQS</name></expr>)</condition> <block pos:start="91:49" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:19">

        <expr_stmt pos:start="93:9" pos:end="93:80"><expr pos:start="93:9" pos:end="93:79"><call pos:start="93:9" pos:end="93:79"><name pos:start="93:9" pos:end="93:20">error_report</name><argument_list pos:start="93:21" pos:end="93:79">(<argument pos:start="93:22" pos:end="93:59"><expr pos:start="93:22" pos:end="93:59"><literal type="string" pos:start="93:22" pos:end="93:59">"vfio: unexpected number of irqs %u\n"</literal></expr></argument>, <argument pos:start="93:62" pos:end="93:78"><expr pos:start="93:62" pos:end="93:78"><name pos:start="93:62" pos:end="93:78"><name pos:start="93:62" pos:end="93:69">dev_info</name><operator pos:start="93:70" pos:end="93:70">.</operator><name pos:start="93:71" pos:end="93:78">num_irqs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="95:9" pos:end="95:19">goto <name pos:start="95:14" pos:end="95:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="101:5" pos:end="139:5">for <control pos:start="101:9" pos:end="101:76">(<init pos:start="101:10" pos:end="101:40"><expr pos:start="101:10" pos:end="101:39"><name pos:start="101:10" pos:end="101:10">i</name> <operator pos:start="101:12" pos:end="101:12">=</operator> <name pos:start="101:14" pos:end="101:39">VFIO_PCI_BAR0_REGION_INDEX</name></expr>;</init> <condition pos:start="101:42" pos:end="101:71"><expr pos:start="101:42" pos:end="101:70"><name pos:start="101:42" pos:end="101:42">i</name> <operator pos:start="101:44" pos:end="101:44">&lt;</operator> <name pos:start="101:46" pos:end="101:70">VFIO_PCI_ROM_REGION_INDEX</name></expr>;</condition> <incr pos:start="101:73" pos:end="101:75"><expr pos:start="101:73" pos:end="101:75"><name pos:start="101:73" pos:end="101:73">i</name><operator pos:start="101:74" pos:end="101:75">++</operator></expr></incr>)</control> <block pos:start="101:78" pos:end="139:5">{<block_content pos:start="103:9" pos:end="137:29">

        <expr_stmt pos:start="103:9" pos:end="103:27"><expr pos:start="103:9" pos:end="103:26"><name pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:16">reg_info</name><operator pos:start="103:17" pos:end="103:17">.</operator><name pos:start="103:18" pos:end="103:22">index</name></name> <operator pos:start="103:24" pos:end="103:24">=</operator> <name pos:start="103:26" pos:end="103:26">i</name></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:70"><expr pos:start="107:9" pos:end="107:69"><name pos:start="107:9" pos:end="107:11">ret</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:69"><name pos:start="107:15" pos:end="107:19">ioctl</name><argument_list pos:start="107:20" pos:end="107:69">(<argument pos:start="107:21" pos:end="107:28"><expr pos:start="107:21" pos:end="107:28"><name pos:start="107:21" pos:end="107:28"><name pos:start="107:21" pos:end="107:24">vdev</name><operator pos:start="107:25" pos:end="107:26">-&gt;</operator><name pos:start="107:27" pos:end="107:28">fd</name></name></expr></argument>, <argument pos:start="107:31" pos:end="107:57"><expr pos:start="107:31" pos:end="107:57"><name pos:start="107:31" pos:end="107:57">VFIO_DEVICE_GET_REGION_INFO</name></expr></argument>, <argument pos:start="107:60" pos:end="107:68"><expr pos:start="107:60" pos:end="107:68"><operator pos:start="107:60" pos:end="107:60">&amp;</operator><name pos:start="107:61" pos:end="107:68">reg_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:16">(<expr pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:15">ret</name></expr>)</condition> <block pos:start="109:18" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:23">

            <expr_stmt pos:start="111:13" pos:end="111:72"><expr pos:start="111:13" pos:end="111:71"><call pos:start="111:13" pos:end="111:71"><name pos:start="111:13" pos:end="111:24">error_report</name><argument_list pos:start="111:25" pos:end="111:71">(<argument pos:start="111:26" pos:end="111:67"><expr pos:start="111:26" pos:end="111:67"><literal type="string" pos:start="111:26" pos:end="111:67">"vfio: Error getting region %d info: %m\n"</literal></expr></argument>, <argument pos:start="111:70" pos:end="111:70"><expr pos:start="111:70" pos:end="111:70"><name pos:start="111:70" pos:end="111:70">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="113:13" pos:end="113:23">goto <name pos:start="113:18" pos:end="113:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:51"><expr pos:start="119:9" pos:end="119:50"><call pos:start="119:9" pos:end="119:50"><name pos:start="119:9" pos:end="119:15">DPRINTF</name><argument_list pos:start="119:16" pos:end="119:50">(<argument pos:start="119:17" pos:end="119:40"><expr pos:start="119:17" pos:end="119:40"><literal type="string" pos:start="119:17" pos:end="119:40">"Device %s region %d:\n"</literal></expr></argument>, <argument pos:start="119:43" pos:end="119:46"><expr pos:start="119:43" pos:end="119:46"><name pos:start="119:43" pos:end="119:46">name</name></expr></argument>, <argument pos:start="119:49" pos:end="119:49"><expr pos:start="119:49" pos:end="119:49"><name pos:start="119:49" pos:end="119:49">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="125:47"><expr pos:start="121:9" pos:end="125:46"><call pos:start="121:9" pos:end="125:46"><name pos:start="121:9" pos:end="121:15">DPRINTF</name><argument_list pos:start="121:16" pos:end="125:46">(<argument pos:start="121:17" pos:end="121:62"><expr pos:start="121:17" pos:end="121:62"><literal type="string" pos:start="121:17" pos:end="121:62">"  size: 0x%lx, offset: 0x%lx, flags: 0x%lx\n"</literal></expr></argument>,

                <argument pos:start="123:17" pos:end="123:44"><expr pos:start="123:17" pos:end="123:44"><operator pos:start="123:17" pos:end="123:17">(</operator><name pos:start="123:18" pos:end="123:25">unsigned</name> <name pos:start="123:27" pos:end="123:30">long</name><operator pos:start="123:31" pos:end="123:31">)</operator><name pos:start="123:32" pos:end="123:44"><name pos:start="123:32" pos:end="123:39">reg_info</name><operator pos:start="123:40" pos:end="123:40">.</operator><name pos:start="123:41" pos:end="123:44">size</name></name></expr></argument>, <argument pos:start="123:47" pos:end="123:76"><expr pos:start="123:47" pos:end="123:76"><operator pos:start="123:47" pos:end="123:47">(</operator><name pos:start="123:48" pos:end="123:55">unsigned</name> <name pos:start="123:57" pos:end="123:60">long</name><operator pos:start="123:61" pos:end="123:61">)</operator><name pos:start="123:62" pos:end="123:76"><name pos:start="123:62" pos:end="123:69">reg_info</name><operator pos:start="123:70" pos:end="123:70">.</operator><name pos:start="123:71" pos:end="123:76">offset</name></name></expr></argument>,

                <argument pos:start="125:17" pos:end="125:45"><expr pos:start="125:17" pos:end="125:45"><operator pos:start="125:17" pos:end="125:17">(</operator><name pos:start="125:18" pos:end="125:25">unsigned</name> <name pos:start="125:27" pos:end="125:30">long</name><operator pos:start="125:31" pos:end="125:31">)</operator><name pos:start="125:32" pos:end="125:45"><name pos:start="125:32" pos:end="125:39">reg_info</name><operator pos:start="125:40" pos:end="125:40">.</operator><name pos:start="125:41" pos:end="125:45">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:45"><expr pos:start="129:9" pos:end="129:44"><name pos:start="129:9" pos:end="129:21"><name pos:start="129:9" pos:end="129:12">vdev</name><operator pos:start="129:13" pos:end="129:14">-&gt;</operator><name pos:start="129:15" pos:end="129:18">bars</name><index pos:start="129:19" pos:end="129:21">[<expr pos:start="129:20" pos:end="129:20"><name pos:start="129:20" pos:end="129:20">i</name></expr>]</index></name><operator pos:start="129:22" pos:end="129:22">.</operator><name pos:start="129:23" pos:end="129:27">flags</name> <operator pos:start="129:29" pos:end="129:29">=</operator> <name pos:start="129:31" pos:end="129:44"><name pos:start="129:31" pos:end="129:38">reg_info</name><operator pos:start="129:39" pos:end="129:39">.</operator><name pos:start="129:40" pos:end="129:44">flags</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:43"><expr pos:start="131:9" pos:end="131:42"><name pos:start="131:9" pos:end="131:21"><name pos:start="131:9" pos:end="131:12">vdev</name><operator pos:start="131:13" pos:end="131:14">-&gt;</operator><name pos:start="131:15" pos:end="131:18">bars</name><index pos:start="131:19" pos:end="131:21">[<expr pos:start="131:20" pos:end="131:20"><name pos:start="131:20" pos:end="131:20">i</name></expr>]</index></name><operator pos:start="131:22" pos:end="131:22">.</operator><name pos:start="131:23" pos:end="131:26">size</name> <operator pos:start="131:28" pos:end="131:28">=</operator> <name pos:start="131:30" pos:end="131:42"><name pos:start="131:30" pos:end="131:37">reg_info</name><operator pos:start="131:38" pos:end="131:38">.</operator><name pos:start="131:39" pos:end="131:42">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:50"><expr pos:start="133:9" pos:end="133:49"><name pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:12">vdev</name><operator pos:start="133:13" pos:end="133:14">-&gt;</operator><name pos:start="133:15" pos:end="133:18">bars</name><index pos:start="133:19" pos:end="133:21">[<expr pos:start="133:20" pos:end="133:20"><name pos:start="133:20" pos:end="133:20">i</name></expr>]</index></name><operator pos:start="133:22" pos:end="133:22">.</operator><name pos:start="133:23" pos:end="133:31">fd_offset</name> <operator pos:start="133:33" pos:end="133:33">=</operator> <name pos:start="133:35" pos:end="133:49"><name pos:start="133:35" pos:end="133:42">reg_info</name><operator pos:start="133:43" pos:end="133:43">.</operator><name pos:start="133:44" pos:end="133:49">offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:36"><expr pos:start="135:9" pos:end="135:35"><name pos:start="135:9" pos:end="135:21"><name pos:start="135:9" pos:end="135:12">vdev</name><operator pos:start="135:13" pos:end="135:14">-&gt;</operator><name pos:start="135:15" pos:end="135:18">bars</name><index pos:start="135:19" pos:end="135:21">[<expr pos:start="135:20" pos:end="135:20"><name pos:start="135:20" pos:end="135:20">i</name></expr>]</index></name><operator pos:start="135:22" pos:end="135:22">.</operator><name pos:start="135:23" pos:end="135:24">fd</name> <operator pos:start="135:26" pos:end="135:26">=</operator> <name pos:start="135:28" pos:end="135:35"><name pos:start="135:28" pos:end="135:31">vdev</name><operator pos:start="135:32" pos:end="135:33">-&gt;</operator><name pos:start="135:34" pos:end="135:35">fd</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:29"><expr pos:start="137:9" pos:end="137:28"><name pos:start="137:9" pos:end="137:21"><name pos:start="137:9" pos:end="137:12">vdev</name><operator pos:start="137:13" pos:end="137:14">-&gt;</operator><name pos:start="137:15" pos:end="137:18">bars</name><index pos:start="137:19" pos:end="137:21">[<expr pos:start="137:20" pos:end="137:20"><name pos:start="137:20" pos:end="137:20">i</name></expr>]</index></name><operator pos:start="137:22" pos:end="137:22">.</operator><name pos:start="137:23" pos:end="137:24">nr</name> <operator pos:start="137:26" pos:end="137:26">=</operator> <name pos:start="137:28" pos:end="137:28">i</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="143:5" pos:end="143:47"><expr pos:start="143:5" pos:end="143:46"><name pos:start="143:5" pos:end="143:18"><name pos:start="143:5" pos:end="143:12">reg_info</name><operator pos:start="143:13" pos:end="143:13">.</operator><name pos:start="143:14" pos:end="143:18">index</name></name> <operator pos:start="143:20" pos:end="143:20">=</operator> <name pos:start="143:22" pos:end="143:46">VFIO_PCI_ROM_REGION_INDEX</name></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:66"><expr pos:start="147:5" pos:end="147:65"><name pos:start="147:5" pos:end="147:7">ret</name> <operator pos:start="147:9" pos:end="147:9">=</operator> <call pos:start="147:11" pos:end="147:65"><name pos:start="147:11" pos:end="147:15">ioctl</name><argument_list pos:start="147:16" pos:end="147:65">(<argument pos:start="147:17" pos:end="147:24"><expr pos:start="147:17" pos:end="147:24"><name pos:start="147:17" pos:end="147:24"><name pos:start="147:17" pos:end="147:20">vdev</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:24">fd</name></name></expr></argument>, <argument pos:start="147:27" pos:end="147:53"><expr pos:start="147:27" pos:end="147:53"><name pos:start="147:27" pos:end="147:53">VFIO_DEVICE_GET_REGION_INFO</name></expr></argument>, <argument pos:start="147:56" pos:end="147:64"><expr pos:start="147:56" pos:end="147:64"><operator pos:start="147:56" pos:end="147:56">&amp;</operator><name pos:start="147:57" pos:end="147:64">reg_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="149:5" pos:end="155:5"><if pos:start="149:5" pos:end="155:5">if <condition pos:start="149:8" pos:end="149:12">(<expr pos:start="149:9" pos:end="149:11"><name pos:start="149:9" pos:end="149:11">ret</name></expr>)</condition> <block pos:start="149:14" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:19">

        <expr_stmt pos:start="151:9" pos:end="151:59"><expr pos:start="151:9" pos:end="151:58"><call pos:start="151:9" pos:end="151:58"><name pos:start="151:9" pos:end="151:20">error_report</name><argument_list pos:start="151:21" pos:end="151:58">(<argument pos:start="151:22" pos:end="151:57"><expr pos:start="151:22" pos:end="151:57"><literal type="string" pos:start="151:22" pos:end="151:57">"vfio: Error getting ROM info: %m\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="153:9" pos:end="153:19">goto <name pos:start="153:14" pos:end="153:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:38"><expr pos:start="159:5" pos:end="159:37"><call pos:start="159:5" pos:end="159:37"><name pos:start="159:5" pos:end="159:11">DPRINTF</name><argument_list pos:start="159:12" pos:end="159:37">(<argument pos:start="159:13" pos:end="159:30"><expr pos:start="159:13" pos:end="159:30"><literal type="string" pos:start="159:13" pos:end="159:30">"Device %s ROM:\n"</literal></expr></argument>, <argument pos:start="159:33" pos:end="159:36"><expr pos:start="159:33" pos:end="159:36"><name pos:start="159:33" pos:end="159:36">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="165:43"><expr pos:start="161:5" pos:end="165:42"><call pos:start="161:5" pos:end="165:42"><name pos:start="161:5" pos:end="161:11">DPRINTF</name><argument_list pos:start="161:12" pos:end="165:42">(<argument pos:start="161:13" pos:end="161:58"><expr pos:start="161:13" pos:end="161:58"><literal type="string" pos:start="161:13" pos:end="161:58">"  size: 0x%lx, offset: 0x%lx, flags: 0x%lx\n"</literal></expr></argument>,

            <argument pos:start="163:13" pos:end="163:40"><expr pos:start="163:13" pos:end="163:40"><operator pos:start="163:13" pos:end="163:13">(</operator><name pos:start="163:14" pos:end="163:21">unsigned</name> <name pos:start="163:23" pos:end="163:26">long</name><operator pos:start="163:27" pos:end="163:27">)</operator><name pos:start="163:28" pos:end="163:40"><name pos:start="163:28" pos:end="163:35">reg_info</name><operator pos:start="163:36" pos:end="163:36">.</operator><name pos:start="163:37" pos:end="163:40">size</name></name></expr></argument>, <argument pos:start="163:43" pos:end="163:72"><expr pos:start="163:43" pos:end="163:72"><operator pos:start="163:43" pos:end="163:43">(</operator><name pos:start="163:44" pos:end="163:51">unsigned</name> <name pos:start="163:53" pos:end="163:56">long</name><operator pos:start="163:57" pos:end="163:57">)</operator><name pos:start="163:58" pos:end="163:72"><name pos:start="163:58" pos:end="163:65">reg_info</name><operator pos:start="163:66" pos:end="163:66">.</operator><name pos:start="163:67" pos:end="163:72">offset</name></name></expr></argument>,

            <argument pos:start="165:13" pos:end="165:41"><expr pos:start="165:13" pos:end="165:41"><operator pos:start="165:13" pos:end="165:13">(</operator><name pos:start="165:14" pos:end="165:21">unsigned</name> <name pos:start="165:23" pos:end="165:26">long</name><operator pos:start="165:27" pos:end="165:27">)</operator><name pos:start="165:28" pos:end="165:41"><name pos:start="165:28" pos:end="165:35">reg_info</name><operator pos:start="165:36" pos:end="165:36">.</operator><name pos:start="165:37" pos:end="165:41">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="169:5" pos:end="169:35"><expr pos:start="169:5" pos:end="169:34"><name pos:start="169:5" pos:end="169:18"><name pos:start="169:5" pos:end="169:8">vdev</name><operator pos:start="169:9" pos:end="169:10">-&gt;</operator><name pos:start="169:11" pos:end="169:18">rom_size</name></name> <operator pos:start="169:20" pos:end="169:20">=</operator> <name pos:start="169:22" pos:end="169:34"><name pos:start="169:22" pos:end="169:29">reg_info</name><operator pos:start="169:30" pos:end="169:30">.</operator><name pos:start="169:31" pos:end="169:34">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:39"><expr pos:start="171:5" pos:end="171:38"><name pos:start="171:5" pos:end="171:20"><name pos:start="171:5" pos:end="171:8">vdev</name><operator pos:start="171:9" pos:end="171:10">-&gt;</operator><name pos:start="171:11" pos:end="171:20">rom_offset</name></name> <operator pos:start="171:22" pos:end="171:22">=</operator> <name pos:start="171:24" pos:end="171:38"><name pos:start="171:24" pos:end="171:31">reg_info</name><operator pos:start="171:32" pos:end="171:32">.</operator><name pos:start="171:33" pos:end="171:38">offset</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:50"><expr pos:start="175:5" pos:end="175:49"><name pos:start="175:5" pos:end="175:18"><name pos:start="175:5" pos:end="175:12">reg_info</name><operator pos:start="175:13" pos:end="175:13">.</operator><name pos:start="175:14" pos:end="175:18">index</name></name> <operator pos:start="175:20" pos:end="175:20">=</operator> <name pos:start="175:22" pos:end="175:49">VFIO_PCI_CONFIG_REGION_INDEX</name></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:66"><expr pos:start="179:5" pos:end="179:65"><name pos:start="179:5" pos:end="179:7">ret</name> <operator pos:start="179:9" pos:end="179:9">=</operator> <call pos:start="179:11" pos:end="179:65"><name pos:start="179:11" pos:end="179:15">ioctl</name><argument_list pos:start="179:16" pos:end="179:65">(<argument pos:start="179:17" pos:end="179:24"><expr pos:start="179:17" pos:end="179:24"><name pos:start="179:17" pos:end="179:24"><name pos:start="179:17" pos:end="179:20">vdev</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:24">fd</name></name></expr></argument>, <argument pos:start="179:27" pos:end="179:53"><expr pos:start="179:27" pos:end="179:53"><name pos:start="179:27" pos:end="179:53">VFIO_DEVICE_GET_REGION_INFO</name></expr></argument>, <argument pos:start="179:56" pos:end="179:64"><expr pos:start="179:56" pos:end="179:64"><operator pos:start="179:56" pos:end="179:56">&amp;</operator><name pos:start="179:57" pos:end="179:64">reg_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="181:5" pos:end="187:5"><if pos:start="181:5" pos:end="187:5">if <condition pos:start="181:8" pos:end="181:12">(<expr pos:start="181:9" pos:end="181:11"><name pos:start="181:9" pos:end="181:11">ret</name></expr>)</condition> <block pos:start="181:14" pos:end="187:5">{<block_content pos:start="183:9" pos:end="185:19">

        <expr_stmt pos:start="183:9" pos:end="183:62"><expr pos:start="183:9" pos:end="183:61"><call pos:start="183:9" pos:end="183:61"><name pos:start="183:9" pos:end="183:20">error_report</name><argument_list pos:start="183:21" pos:end="183:61">(<argument pos:start="183:22" pos:end="183:60"><expr pos:start="183:22" pos:end="183:60"><literal type="string" pos:start="183:22" pos:end="183:60">"vfio: Error getting config info: %m\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="185:9" pos:end="185:19">goto <name pos:start="185:14" pos:end="185:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:41"><expr pos:start="191:5" pos:end="191:40"><call pos:start="191:5" pos:end="191:40"><name pos:start="191:5" pos:end="191:11">DPRINTF</name><argument_list pos:start="191:12" pos:end="191:40">(<argument pos:start="191:13" pos:end="191:33"><expr pos:start="191:13" pos:end="191:33"><literal type="string" pos:start="191:13" pos:end="191:33">"Device %s config:\n"</literal></expr></argument>, <argument pos:start="191:36" pos:end="191:39"><expr pos:start="191:36" pos:end="191:39"><name pos:start="191:36" pos:end="191:39">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="197:43"><expr pos:start="193:5" pos:end="197:42"><call pos:start="193:5" pos:end="197:42"><name pos:start="193:5" pos:end="193:11">DPRINTF</name><argument_list pos:start="193:12" pos:end="197:42">(<argument pos:start="193:13" pos:end="193:58"><expr pos:start="193:13" pos:end="193:58"><literal type="string" pos:start="193:13" pos:end="193:58">"  size: 0x%lx, offset: 0x%lx, flags: 0x%lx\n"</literal></expr></argument>,

            <argument pos:start="195:13" pos:end="195:40"><expr pos:start="195:13" pos:end="195:40"><operator pos:start="195:13" pos:end="195:13">(</operator><name pos:start="195:14" pos:end="195:21">unsigned</name> <name pos:start="195:23" pos:end="195:26">long</name><operator pos:start="195:27" pos:end="195:27">)</operator><name pos:start="195:28" pos:end="195:40"><name pos:start="195:28" pos:end="195:35">reg_info</name><operator pos:start="195:36" pos:end="195:36">.</operator><name pos:start="195:37" pos:end="195:40">size</name></name></expr></argument>, <argument pos:start="195:43" pos:end="195:72"><expr pos:start="195:43" pos:end="195:72"><operator pos:start="195:43" pos:end="195:43">(</operator><name pos:start="195:44" pos:end="195:51">unsigned</name> <name pos:start="195:53" pos:end="195:56">long</name><operator pos:start="195:57" pos:end="195:57">)</operator><name pos:start="195:58" pos:end="195:72"><name pos:start="195:58" pos:end="195:65">reg_info</name><operator pos:start="195:66" pos:end="195:66">.</operator><name pos:start="195:67" pos:end="195:72">offset</name></name></expr></argument>,

            <argument pos:start="197:13" pos:end="197:41"><expr pos:start="197:13" pos:end="197:41"><operator pos:start="197:13" pos:end="197:13">(</operator><name pos:start="197:14" pos:end="197:21">unsigned</name> <name pos:start="197:23" pos:end="197:26">long</name><operator pos:start="197:27" pos:end="197:27">)</operator><name pos:start="197:28" pos:end="197:41"><name pos:start="197:28" pos:end="197:35">reg_info</name><operator pos:start="197:36" pos:end="197:36">.</operator><name pos:start="197:37" pos:end="197:41">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="201:5" pos:end="201:38"><expr pos:start="201:5" pos:end="201:37"><name pos:start="201:5" pos:end="201:21"><name pos:start="201:5" pos:end="201:8">vdev</name><operator pos:start="201:9" pos:end="201:10">-&gt;</operator><name pos:start="201:11" pos:end="201:21">config_size</name></name> <operator pos:start="201:23" pos:end="201:23">=</operator> <name pos:start="201:25" pos:end="201:37"><name pos:start="201:25" pos:end="201:32">reg_info</name><operator pos:start="201:33" pos:end="201:33">.</operator><name pos:start="201:34" pos:end="201:37">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:42"><expr pos:start="203:5" pos:end="203:41"><name pos:start="203:5" pos:end="203:23"><name pos:start="203:5" pos:end="203:8">vdev</name><operator pos:start="203:9" pos:end="203:10">-&gt;</operator><name pos:start="203:11" pos:end="203:23">config_offset</name></name> <operator pos:start="203:25" pos:end="203:25">=</operator> <name pos:start="203:27" pos:end="203:41"><name pos:start="203:27" pos:end="203:34">reg_info</name><operator pos:start="203:35" pos:end="203:35">.</operator><name pos:start="203:36" pos:end="203:41">offset</name></name></expr>;</expr_stmt>



<label pos:start="207:1" pos:end="207:6"><name pos:start="207:1" pos:end="207:5">error</name>:</label>

    <if_stmt pos:start="209:5" pos:end="217:5"><if pos:start="209:5" pos:end="217:5">if <condition pos:start="209:8" pos:end="209:12">(<expr pos:start="209:9" pos:end="209:11"><name pos:start="209:9" pos:end="209:11">ret</name></expr>)</condition> <block pos:start="209:14" pos:end="217:5">{<block_content pos:start="211:9" pos:end="215:24">

        <expr_stmt pos:start="211:9" pos:end="211:33"><expr pos:start="211:9" pos:end="211:32"><call pos:start="211:9" pos:end="211:32"><name pos:start="211:9" pos:end="211:20">QLIST_REMOVE</name><argument_list pos:start="211:21" pos:end="211:32">(<argument pos:start="211:22" pos:end="211:25"><expr pos:start="211:22" pos:end="211:25"><name pos:start="211:22" pos:end="211:25">vdev</name></expr></argument>, <argument pos:start="211:28" pos:end="211:31"><expr pos:start="211:28" pos:end="211:31"><name pos:start="211:28" pos:end="211:31">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:27"><expr pos:start="213:9" pos:end="213:26"><name pos:start="213:9" pos:end="213:19"><name pos:start="213:9" pos:end="213:12">vdev</name><operator pos:start="213:13" pos:end="213:14">-&gt;</operator><name pos:start="213:15" pos:end="213:19">group</name></name> <operator pos:start="213:21" pos:end="213:21">=</operator> <name pos:start="213:23" pos:end="213:26">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:24"><expr pos:start="215:9" pos:end="215:23"><call pos:start="215:9" pos:end="215:23"><name pos:start="215:9" pos:end="215:13">close</name><argument_list pos:start="215:14" pos:end="215:23">(<argument pos:start="215:15" pos:end="215:22"><expr pos:start="215:15" pos:end="215:22"><name pos:start="215:15" pos:end="215:22"><name pos:start="215:15" pos:end="215:18">vdev</name><operator pos:start="215:19" pos:end="215:20">-&gt;</operator><name pos:start="215:21" pos:end="215:22">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="219:5" pos:end="219:15">return <expr pos:start="219:12" pos:end="219:14"><name pos:start="219:12" pos:end="219:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
