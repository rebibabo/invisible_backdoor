<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24609.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">parse_channel_name</name><parameter_list pos:start="1:30" pos:end="1:69">(<parameter pos:start="1:31" pos:end="1:40"><decl pos:start="1:31" pos:end="1:40"><type pos:start="1:31" pos:end="1:40"><name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier><modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">arg</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:45">int</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:55">rchannel</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:68"><decl pos:start="1:58" pos:end="1:68"><type pos:start="1:58" pos:end="1:68"><name pos:start="1:58" pos:end="1:60">int</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:68">rnamed</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:27">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:15"><name pos:start="5:10" pos:end="5:12">buf</name><index pos:start="5:13" pos:end="5:15">[<expr pos:start="5:14" pos:end="5:14"><literal type="number" pos:start="5:14" pos:end="5:14">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:14">i</name></decl>, <decl pos:start="7:17" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:26">channel_id</name> <init pos:start="7:28" pos:end="7:30">= <expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:18">layout</name></decl>, <decl pos:start="9:21" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:21" pos:end="9:27">layout0</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:48">/* try to parse a channel name, e.g. "FL" */</comment>

    <if_stmt pos:start="15:5" pos:end="47:5"><if pos:start="15:5" pos:end="47:5">if <condition pos:start="15:8" pos:end="15:47">(<expr pos:start="15:9" pos:end="15:46"><call pos:start="15:9" pos:end="15:46"><name pos:start="15:9" pos:end="15:14">sscanf</name><argument_list pos:start="15:15" pos:end="15:46">(<argument pos:start="15:16" pos:end="15:19"><expr pos:start="15:16" pos:end="15:19"><operator pos:start="15:16" pos:end="15:16">*</operator><name pos:start="15:17" pos:end="15:19">arg</name></expr></argument>, <argument pos:start="15:22" pos:end="15:34"><expr pos:start="15:22" pos:end="15:34"><literal type="string" pos:start="15:22" pos:end="15:34">" %7[A-Z] %n"</literal></expr></argument>, <argument pos:start="15:37" pos:end="15:39"><expr pos:start="15:37" pos:end="15:39"><name pos:start="15:37" pos:end="15:39">buf</name></expr></argument>, <argument pos:start="15:42" pos:end="15:45"><expr pos:start="15:42" pos:end="15:45"><operator pos:start="15:42" pos:end="15:42">&amp;</operator><name pos:start="15:43" pos:end="15:45">len</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:49" pos:end="47:5">{<block_content pos:start="17:9" pos:end="45:17">

        <expr_stmt pos:start="17:9" pos:end="17:54"><expr pos:start="17:9" pos:end="17:53"><name pos:start="17:9" pos:end="17:15">layout0</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:24">layout</name> <operator pos:start="17:26" pos:end="17:26">=</operator> <call pos:start="17:28" pos:end="17:53"><name pos:start="17:28" pos:end="17:48">av_get_channel_layout</name><argument_list pos:start="17:49" pos:end="17:53">(<argument pos:start="17:50" pos:end="17:52"><expr pos:start="17:50" pos:end="17:52"><name pos:start="17:50" pos:end="17:52">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="19:9" pos:end="19:51">/* channel_id &lt;- first set bit in layout */</comment>

        <for pos:start="21:9" pos:end="31:9">for <control pos:start="21:13" pos:end="21:36">(<init pos:start="21:14" pos:end="21:20"><expr pos:start="21:14" pos:end="21:19"><name pos:start="21:14" pos:end="21:14">i</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:19">32</literal></expr>;</init> <condition pos:start="21:22" pos:end="21:27"><expr pos:start="21:22" pos:end="21:26"><name pos:start="21:22" pos:end="21:22">i</name> <operator pos:start="21:24" pos:end="21:24">&gt;</operator> <literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr>;</condition> <incr pos:start="21:29" pos:end="21:35"><expr pos:start="21:29" pos:end="21:35"><name pos:start="21:29" pos:end="21:29">i</name> <operator pos:start="21:31" pos:end="21:33">&gt;&gt;=</operator> <literal type="number" pos:start="21:35" pos:end="21:35">1</literal></expr></incr>)</control> <block pos:start="21:38" pos:end="31:9">{<block_content pos:start="23:13" pos:end="29:13">

            <if_stmt pos:start="23:13" pos:end="29:13"><if pos:start="23:13" pos:end="29:13">if <condition pos:start="23:16" pos:end="23:42">(<expr pos:start="23:17" pos:end="23:41"><name pos:start="23:17" pos:end="23:22">layout</name> <operator pos:start="23:24" pos:end="23:25">&gt;=</operator> <operator pos:start="23:27" pos:end="23:27">(</operator><name pos:start="23:28" pos:end="23:34">int64_t</name><operator pos:start="23:35" pos:end="23:35">)</operator><literal type="number" pos:start="23:36" pos:end="23:36">1</literal> <operator pos:start="23:38" pos:end="23:39">&lt;&lt;</operator> <name pos:start="23:41" pos:end="23:41">i</name></expr>)</condition> <block pos:start="23:44" pos:end="29:13">{<block_content pos:start="25:17" pos:end="27:29">

                <expr_stmt pos:start="25:17" pos:end="25:32"><expr pos:start="25:17" pos:end="25:31"><name pos:start="25:17" pos:end="25:26">channel_id</name> <operator pos:start="25:28" pos:end="25:29">+=</operator> <name pos:start="25:31" pos:end="25:31">i</name></expr>;</expr_stmt>

                <expr_stmt pos:start="27:17" pos:end="27:29"><expr pos:start="27:17" pos:end="27:28"><name pos:start="27:17" pos:end="27:22">layout</name> <operator pos:start="27:24" pos:end="27:26">&gt;&gt;=</operator> <name pos:start="27:28" pos:end="27:28">i</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="33:9" pos:end="33:58">/* reject layouts that are not a single channel */</comment>

        <if_stmt pos:start="35:9" pos:end="37:35"><if pos:start="35:9" pos:end="37:35">if <condition pos:start="35:12" pos:end="35:78">(<expr pos:start="35:13" pos:end="35:77"><name pos:start="35:13" pos:end="35:22">channel_id</name> <operator pos:start="35:24" pos:end="35:25">&gt;=</operator> <name pos:start="35:27" pos:end="35:38">MAX_CHANNELS</name> <operator pos:start="35:40" pos:end="35:41">||</operator> <name pos:start="35:43" pos:end="35:49">layout0</name> <operator pos:start="35:51" pos:end="35:52">!=</operator> <operator pos:start="35:54" pos:end="35:54">(</operator><name pos:start="35:55" pos:end="35:61">int64_t</name><operator pos:start="35:62" pos:end="35:62">)</operator><literal type="number" pos:start="35:63" pos:end="35:63">1</literal> <operator pos:start="35:65" pos:end="35:66">&lt;&lt;</operator> <name pos:start="35:68" pos:end="35:77">channel_id</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:35"><block_content pos:start="37:13" pos:end="37:35">

            <return pos:start="37:13" pos:end="37:35">return <expr pos:start="37:20" pos:end="37:34"><call pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:26">AVERROR</name><argument_list pos:start="37:27" pos:end="37:34">(<argument pos:start="37:28" pos:end="37:33"><expr pos:start="37:28" pos:end="37:33"><name pos:start="37:28" pos:end="37:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><operator pos:start="39:9" pos:end="39:9">*</operator><name pos:start="39:10" pos:end="39:17">rchannel</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:30">channel_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:20"><expr pos:start="41:9" pos:end="41:19"><operator pos:start="41:9" pos:end="41:9">*</operator><name pos:start="41:10" pos:end="41:15">rnamed</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <literal type="number" pos:start="41:19" pos:end="41:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:20"><expr pos:start="43:9" pos:end="43:19"><operator pos:start="43:9" pos:end="43:9">*</operator><name pos:start="43:10" pos:end="43:12">arg</name> <operator pos:start="43:14" pos:end="43:15">+=</operator> <name pos:start="43:17" pos:end="43:19">len</name></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:17">return <expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="49:5" pos:end="49:50">/* try to parse a channel number, e.g. "c2" */</comment>

    <if_stmt pos:start="51:5" pos:end="63:5"><if pos:start="51:5" pos:end="63:5">if <condition pos:start="51:8" pos:end="53:53">(<expr pos:start="51:9" pos:end="53:52"><call pos:start="51:9" pos:end="51:50"><name pos:start="51:9" pos:end="51:14">sscanf</name><argument_list pos:start="51:15" pos:end="51:50">(<argument pos:start="51:16" pos:end="51:19"><expr pos:start="51:16" pos:end="51:19"><operator pos:start="51:16" pos:end="51:16">*</operator><name pos:start="51:17" pos:end="51:19">arg</name></expr></argument>, <argument pos:start="51:22" pos:end="51:30"><expr pos:start="51:22" pos:end="51:30"><literal type="string" pos:start="51:22" pos:end="51:30">" c%d %n"</literal></expr></argument>, <argument pos:start="51:33" pos:end="51:43"><expr pos:start="51:33" pos:end="51:43"><operator pos:start="51:33" pos:end="51:33">&amp;</operator><name pos:start="51:34" pos:end="51:43">channel_id</name></expr></argument>, <argument pos:start="51:46" pos:end="51:49"><expr pos:start="51:46" pos:end="51:49"><operator pos:start="51:46" pos:end="51:46">&amp;</operator><name pos:start="51:47" pos:end="51:49">len</name></expr></argument>)</argument_list></call> <operator pos:start="51:52" pos:end="51:53">&amp;&amp;</operator>

        <name pos:start="53:9" pos:end="53:18">channel_id</name> <operator pos:start="53:20" pos:end="53:21">&gt;=</operator> <literal type="number" pos:start="53:23" pos:end="53:23">0</literal> <operator pos:start="53:25" pos:end="53:26">&amp;&amp;</operator> <name pos:start="53:28" pos:end="53:37">channel_id</name> <operator pos:start="53:39" pos:end="53:39">&lt;</operator> <name pos:start="53:41" pos:end="53:52">MAX_CHANNELS</name></expr>)</condition> <block pos:start="53:55" pos:end="63:5">{<block_content pos:start="55:9" pos:end="61:17">

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><operator pos:start="55:9" pos:end="55:9">*</operator><name pos:start="55:10" pos:end="55:17">rchannel</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:30">channel_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:20"><expr pos:start="57:9" pos:end="57:19"><operator pos:start="57:9" pos:end="57:9">*</operator><name pos:start="57:10" pos:end="57:15">rnamed</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:20"><expr pos:start="59:9" pos:end="59:19"><operator pos:start="59:9" pos:end="59:9">*</operator><name pos:start="59:10" pos:end="59:12">arg</name> <operator pos:start="59:14" pos:end="59:15">+=</operator> <name pos:start="59:17" pos:end="59:19">len</name></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="65:5" pos:end="65:27">return <expr pos:start="65:12" pos:end="65:26"><call pos:start="65:12" pos:end="65:26"><name pos:start="65:12" pos:end="65:18">AVERROR</name><argument_list pos:start="65:19" pos:end="65:26">(<argument pos:start="65:20" pos:end="65:25"><expr pos:start="65:20" pos:end="65:25"><name pos:start="65:20" pos:end="65:25">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
