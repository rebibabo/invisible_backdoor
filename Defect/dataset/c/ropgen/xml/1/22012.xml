<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22012.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">ff_v4l2_m2m_codec_init</name><parameter_list pos:start="1:27" pos:end="1:49">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:38">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:29">= <expr pos:start="5:15" pos:end="5:29"><call pos:start="5:15" pos:end="5:29"><name pos:start="5:15" pos:end="5:21">AVERROR</name><argument_list pos:start="5:22" pos:end="5:29">(<argument pos:start="5:23" pos:end="5:28"><expr pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:28">EINVAL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:17">dirent</name></name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:24">entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:23"><name pos:start="9:10" pos:end="9:13">node</name><index pos:start="9:14" pos:end="9:23">[<expr pos:start="9:15" pos:end="9:22"><name pos:start="9:15" pos:end="9:22">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:7">DIR</name> <modifier pos:start="11:9" pos:end="11:9">*</modifier></type><name pos:start="11:10" pos:end="11:13">dirp</name></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:41"><decl pos:start="15:5" pos:end="15:40"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">V4L2m2mContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:21">s</name> <init pos:start="15:23" pos:end="15:40">= <expr pos:start="15:25" pos:end="15:40"><name pos:start="15:25" pos:end="15:40"><name pos:start="15:25" pos:end="15:29">avctx</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:12">avctx</name></name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:20">avctx</name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:8">dirp</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:26"><name pos:start="21:12" pos:end="21:18">opendir</name><argument_list pos:start="21:19" pos:end="21:26">(<argument pos:start="21:20" pos:end="21:25"><expr pos:start="21:20" pos:end="21:25"><literal type="string" pos:start="21:20" pos:end="21:25">"/dev"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:30"><if pos:start="23:5" pos:end="25:30">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:13">dirp</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:30"><block_content pos:start="25:9" pos:end="25:30">

        <return pos:start="25:9" pos:end="25:30">return <expr pos:start="25:16" pos:end="25:29"><call pos:start="25:16" pos:end="25:29"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:29">(<argument pos:start="25:24" pos:end="25:28"><expr pos:start="25:24" pos:end="25:28"><name pos:start="25:24" pos:end="25:28">errno</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="29:5" pos:end="51:5">for <control pos:start="29:9" pos:end="29:61">(<init pos:start="29:10" pos:end="29:31"><expr pos:start="29:10" pos:end="29:30"><name pos:start="29:10" pos:end="29:14">entry</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:30"><name pos:start="29:18" pos:end="29:24">readdir</name><argument_list pos:start="29:25" pos:end="29:30">(<argument pos:start="29:26" pos:end="29:29"><expr pos:start="29:26" pos:end="29:29"><name pos:start="29:26" pos:end="29:29">dirp</name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="29:33" pos:end="29:38"><expr pos:start="29:33" pos:end="29:37"><name pos:start="29:33" pos:end="29:37">entry</name></expr>;</condition> <incr pos:start="29:40" pos:end="29:60"><expr pos:start="29:40" pos:end="29:60"><name pos:start="29:40" pos:end="29:44">entry</name> <operator pos:start="29:46" pos:end="29:46">=</operator> <call pos:start="29:48" pos:end="29:60"><name pos:start="29:48" pos:end="29:54">readdir</name><argument_list pos:start="29:55" pos:end="29:60">(<argument pos:start="29:56" pos:end="29:59"><expr pos:start="29:56" pos:end="29:59"><name pos:start="29:56" pos:end="29:59">dirp</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block pos:start="29:63" pos:end="51:5">{<block_content pos:start="33:9" pos:end="49:22">



        <if_stmt pos:start="33:9" pos:end="35:21"><if pos:start="33:9" pos:end="35:21">if <condition pos:start="33:12" pos:end="33:47">(<expr pos:start="33:13" pos:end="33:46"><call pos:start="33:13" pos:end="33:46"><name pos:start="33:13" pos:end="33:19">strncmp</name><argument_list pos:start="33:20" pos:end="33:46">(<argument pos:start="33:21" pos:end="33:33"><expr pos:start="33:21" pos:end="33:33"><name pos:start="33:21" pos:end="33:33"><name pos:start="33:21" pos:end="33:25">entry</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:33">d_name</name></name></expr></argument>, <argument pos:start="33:36" pos:end="33:42"><expr pos:start="33:36" pos:end="33:42"><literal type="string" pos:start="33:36" pos:end="33:42">"video"</literal></expr></argument>, <argument pos:start="33:45" pos:end="33:45"><expr pos:start="33:45" pos:end="33:45"><literal type="number" pos:start="33:45" pos:end="33:45">5</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:21"><block_content pos:start="35:13" pos:end="35:21">

            <continue pos:start="35:13" pos:end="35:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:63"><expr pos:start="39:9" pos:end="39:62"><call pos:start="39:9" pos:end="39:62"><name pos:start="39:9" pos:end="39:16">snprintf</name><argument_list pos:start="39:17" pos:end="39:62">(<argument pos:start="39:18" pos:end="39:21"><expr pos:start="39:18" pos:end="39:21"><name pos:start="39:18" pos:end="39:21">node</name></expr></argument>, <argument pos:start="39:24" pos:end="39:35"><expr pos:start="39:24" pos:end="39:35"><sizeof pos:start="39:24" pos:end="39:35">sizeof<argument_list pos:start="39:30" pos:end="39:35">(<argument pos:start="39:31" pos:end="39:34"><expr pos:start="39:31" pos:end="39:34"><name pos:start="39:31" pos:end="39:34">node</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:38" pos:end="39:46"><expr pos:start="39:38" pos:end="39:46"><literal type="string" pos:start="39:38" pos:end="39:46">"/dev/%s"</literal></expr></argument>, <argument pos:start="39:49" pos:end="39:61"><expr pos:start="39:49" pos:end="39:61"><name pos:start="39:49" pos:end="39:61"><name pos:start="39:49" pos:end="39:53">entry</name><operator pos:start="39:54" pos:end="39:55">-&gt;</operator><name pos:start="39:56" pos:end="39:61">d_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:68"><expr pos:start="41:9" pos:end="41:67"><call pos:start="41:9" pos:end="41:67"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:67">(<argument pos:start="41:16" pos:end="41:23"><expr pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:16">s</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:23">avctx</name></name></expr></argument>, <argument pos:start="41:26" pos:end="41:37"><expr pos:start="41:26" pos:end="41:37"><name pos:start="41:26" pos:end="41:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="41:40" pos:end="41:60"><expr pos:start="41:40" pos:end="41:60"><literal type="string" pos:start="41:40" pos:end="41:60">"probing device %s\n"</literal></expr></argument>, <argument pos:start="41:63" pos:end="41:66"><expr pos:start="41:63" pos:end="41:66"><name pos:start="41:63" pos:end="41:66">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:52"><expr pos:start="43:9" pos:end="43:51"><call pos:start="43:9" pos:end="43:51"><name pos:start="43:9" pos:end="43:15">strncpy</name><argument_list pos:start="43:16" pos:end="43:51">(<argument pos:start="43:17" pos:end="43:26"><expr pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:26">devname</name></name></expr></argument>, <argument pos:start="43:29" pos:end="43:32"><expr pos:start="43:29" pos:end="43:32"><name pos:start="43:29" pos:end="43:32">node</name></expr></argument>, <argument pos:start="43:35" pos:end="43:50"><expr pos:start="43:35" pos:end="43:50"><call pos:start="43:35" pos:end="43:46"><name pos:start="43:35" pos:end="43:40">strlen</name><argument_list pos:start="43:41" pos:end="43:46">(<argument pos:start="43:42" pos:end="43:45"><expr pos:start="43:42" pos:end="43:45"><name pos:start="43:42" pos:end="43:45">node</name></expr></argument>)</argument_list></call> <operator pos:start="43:48" pos:end="43:48">+</operator> <literal type="number" pos:start="43:50" pos:end="43:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:34"><name pos:start="45:15" pos:end="45:31">v4l2_probe_driver</name><argument_list pos:start="45:32" pos:end="45:34">(<argument pos:start="45:33" pos:end="45:33"><expr pos:start="45:33" pos:end="45:33"><name pos:start="45:33" pos:end="45:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="49:22"><if pos:start="47:9" pos:end="49:22">if <condition pos:start="47:12" pos:end="47:17">(<expr pos:start="47:13" pos:end="47:16"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:16">ret</name></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:22"><block_content pos:start="49:17" pos:end="49:22">

                <break pos:start="49:17" pos:end="49:22">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="55:5" pos:end="55:19"><expr pos:start="55:5" pos:end="55:18"><call pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:12">closedir</name><argument_list pos:start="55:13" pos:end="55:18">(<argument pos:start="55:14" pos:end="55:17"><expr pos:start="55:14" pos:end="55:17"><name pos:start="55:14" pos:end="55:17">dirp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="69:5"><if pos:start="59:5" pos:end="69:5">if <condition pos:start="59:8" pos:end="59:12">(<expr pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">ret</name></expr>)</condition> <block pos:start="59:14" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:19">

        <expr_stmt pos:start="61:9" pos:end="61:74"><expr pos:start="61:9" pos:end="61:73"><call pos:start="61:9" pos:end="61:73"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:73">(<argument pos:start="61:16" pos:end="61:23"><expr pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:16">s</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:23">avctx</name></name></expr></argument>, <argument pos:start="61:26" pos:end="61:37"><expr pos:start="61:26" pos:end="61:37"><name pos:start="61:26" pos:end="61:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:40" pos:end="61:72"><expr pos:start="61:40" pos:end="61:72"><literal type="string" pos:start="61:40" pos:end="61:72">"Could not find a valid device\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:50"><expr pos:start="63:9" pos:end="63:49"><call pos:start="63:9" pos:end="63:49"><name pos:start="63:9" pos:end="63:14">memset</name><argument_list pos:start="63:15" pos:end="63:49">(<argument pos:start="63:16" pos:end="63:25"><expr pos:start="63:16" pos:end="63:25"><name pos:start="63:16" pos:end="63:25"><name pos:start="63:16" pos:end="63:16">s</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:25">devname</name></name></expr></argument>, <argument pos:start="63:28" pos:end="63:28"><expr pos:start="63:28" pos:end="63:28"><literal type="number" pos:start="63:28" pos:end="63:28">0</literal></expr></argument>, <argument pos:start="63:31" pos:end="63:48"><expr pos:start="63:31" pos:end="63:48"><sizeof pos:start="63:31" pos:end="63:48">sizeof<argument_list pos:start="63:37" pos:end="63:48">(<argument pos:start="63:38" pos:end="63:47"><expr pos:start="63:38" pos:end="63:47"><name pos:start="63:38" pos:end="63:47"><name pos:start="63:38" pos:end="63:38">s</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:47">devname</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="67:9" pos:end="67:19">return <expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:61"><expr pos:start="73:5" pos:end="73:60"><call pos:start="73:5" pos:end="73:60"><name pos:start="73:5" pos:end="73:10">av_log</name><argument_list pos:start="73:11" pos:end="73:60">(<argument pos:start="73:12" pos:end="73:19"><expr pos:start="73:12" pos:end="73:19"><name pos:start="73:12" pos:end="73:19"><name pos:start="73:12" pos:end="73:12">s</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:19">avctx</name></name></expr></argument>, <argument pos:start="73:22" pos:end="73:32"><expr pos:start="73:22" pos:end="73:32"><name pos:start="73:22" pos:end="73:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="73:35" pos:end="73:53"><expr pos:start="73:35" pos:end="73:53"><literal type="string" pos:start="73:35" pos:end="73:53">"Using device %s\n"</literal></expr></argument>, <argument pos:start="73:56" pos:end="73:59"><expr pos:start="73:56" pos:end="73:59"><name pos:start="73:56" pos:end="73:59">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:38">return <expr pos:start="77:12" pos:end="77:37"><call pos:start="77:12" pos:end="77:37"><name pos:start="77:12" pos:end="77:34">v4l2_configure_contexts</name><argument_list pos:start="77:35" pos:end="77:37">(<argument pos:start="77:36" pos:end="77:36"><expr pos:start="77:36" pos:end="77:36"><name pos:start="77:36" pos:end="77:36">s</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
