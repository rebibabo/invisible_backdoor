<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22232.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">create_flash</name><parameter_list pos:start="1:25" pos:end="1:50">(<parameter pos:start="1:26" pos:end="1:49"><decl pos:start="1:26" pos:end="1:49"><type pos:start="1:26" pos:end="1:46"><specifier pos:start="1:26" pos:end="1:30">const</specifier> <name pos:start="1:32" pos:end="1:44">VirtBoardInfo</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">vbi</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="11:5" pos:end="87:21">

    <comment type="block" pos:start="5:5" pos:end="9:7">/* Create two flash devices to fill the VIRT_FLASH space in the memmap.

     * Any file passed via -bios goes in the first of these.

     */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:55"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">hwaddr</name></type> <name pos:start="11:12" pos:end="11:20">flashsize</name> <init pos:start="11:22" pos:end="11:55">= <expr pos:start="11:24" pos:end="11:55"><name pos:start="11:24" pos:end="11:46"><name pos:start="11:24" pos:end="11:26">vbi</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:34">memmap</name><index pos:start="11:35" pos:end="11:46">[<expr pos:start="11:36" pos:end="11:45"><name pos:start="11:36" pos:end="11:45">VIRT_FLASH</name></expr>]</index></name><operator pos:start="11:47" pos:end="11:47">.</operator><name pos:start="11:48" pos:end="11:51">size</name> <operator pos:start="11:53" pos:end="11:53">/</operator> <literal type="number" pos:start="11:55" pos:end="11:55">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:51"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">hwaddr</name></type> <name pos:start="13:12" pos:end="13:20">flashbase</name> <init pos:start="13:22" pos:end="13:51">= <expr pos:start="13:24" pos:end="13:51"><name pos:start="13:24" pos:end="13:46"><name pos:start="13:24" pos:end="13:26">vbi</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:34">memmap</name><index pos:start="13:35" pos:end="13:46">[<expr pos:start="13:36" pos:end="13:45"><name pos:start="13:36" pos:end="13:45">VIRT_FLASH</name></expr>]</index></name><operator pos:start="13:47" pos:end="13:47">.</operator><name pos:start="13:48" pos:end="13:51">base</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:18">nodename</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="63:5"><if pos:start="19:5" pos:end="63:5">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:17">bios_name</name></expr>)</condition> <block pos:start="19:20" pos:end="63:5">{<block_content pos:start="21:9" pos:end="61:19">

        <decl_stmt pos:start="21:9" pos:end="21:17"><decl pos:start="21:9" pos:end="21:16"><type pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:12">char</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:16">fn</name></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:23"><decl pos:start="23:9" pos:end="23:22"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:22">image_size</name></decl>;</decl_stmt>



        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="27:39">(<expr pos:start="27:13" pos:end="27:38"><call pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:21">drive_get</name><argument_list pos:start="27:22" pos:end="27:38">(<argument pos:start="27:23" pos:end="27:31"><expr pos:start="27:23" pos:end="27:31"><name pos:start="27:23" pos:end="27:31">IF_PFLASH</name></expr></argument>, <argument pos:start="27:34" pos:end="27:34"><expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">0</literal></expr></argument>, <argument pos:start="27:37" pos:end="27:37"><expr pos:start="27:37" pos:end="27:37"><literal type="number" pos:start="27:37" pos:end="27:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:41" pos:end="37:9">{<block_content pos:start="29:13" pos:end="35:20">

            <expr_stmt pos:start="29:13" pos:end="33:68"><expr pos:start="29:13" pos:end="33:67"><call pos:start="29:13" pos:end="33:67"><name pos:start="29:13" pos:end="29:24">error_report</name><argument_list pos:start="29:25" pos:end="33:67">(<argument pos:start="29:26" pos:end="33:66"><expr pos:start="29:26" pos:end="33:66"><literal type="string" pos:start="29:26" pos:end="29:73">"The contents of the first flash device may be "</literal>

                         <literal type="string" pos:start="31:26" pos:end="31:76">"specified with -bios or with -drive if=pflash... "</literal>

                         <literal type="string" pos:start="33:26" pos:end="33:66">"but you cannot use both options at once"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:20"><expr pos:start="35:13" pos:end="35:19"><call pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:16">exit</name><argument_list pos:start="35:17" pos:end="35:19">(<argument pos:start="35:18" pos:end="35:18"><expr pos:start="35:18" pos:end="35:18"><literal type="number" pos:start="35:18" pos:end="35:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:60"><expr pos:start="39:9" pos:end="39:59"><name pos:start="39:9" pos:end="39:10">fn</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:59"><name pos:start="39:14" pos:end="39:27">qemu_find_file</name><argument_list pos:start="39:28" pos:end="39:59">(<argument pos:start="39:29" pos:end="39:47"><expr pos:start="39:29" pos:end="39:47"><name pos:start="39:29" pos:end="39:47">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="39:50" pos:end="39:58"><expr pos:start="39:50" pos:end="39:58"><name pos:start="39:50" pos:end="39:58">bios_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:16">(<expr pos:start="41:13" pos:end="41:15"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:15">fn</name></expr>)</condition> <block pos:start="41:18" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:20">

            <expr_stmt pos:start="43:13" pos:end="43:69"><expr pos:start="43:13" pos:end="43:68"><call pos:start="43:13" pos:end="43:68"><name pos:start="43:13" pos:end="43:24">error_report</name><argument_list pos:start="43:25" pos:end="43:68">(<argument pos:start="43:26" pos:end="43:56"><expr pos:start="43:26" pos:end="43:56"><literal type="string" pos:start="43:26" pos:end="43:56">"Could not find ROM image '%s'"</literal></expr></argument>, <argument pos:start="43:59" pos:end="43:67"><expr pos:start="43:59" pos:end="43:67"><name pos:start="43:59" pos:end="43:67">bios_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:20"><expr pos:start="45:13" pos:end="45:19"><call pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:16">exit</name><argument_list pos:start="45:17" pos:end="45:19">(<argument pos:start="45:18" pos:end="45:18"><expr pos:start="45:18" pos:end="45:18"><literal type="number" pos:start="45:18" pos:end="45:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:67"><expr pos:start="49:9" pos:end="49:66"><name pos:start="49:9" pos:end="49:18">image_size</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="49:66"><name pos:start="49:22" pos:end="49:40">load_image_targphys</name><argument_list pos:start="49:41" pos:end="49:66">(<argument pos:start="49:42" pos:end="49:43"><expr pos:start="49:42" pos:end="49:43"><name pos:start="49:42" pos:end="49:43">fn</name></expr></argument>, <argument pos:start="49:46" pos:end="49:54"><expr pos:start="49:46" pos:end="49:54"><name pos:start="49:46" pos:end="49:54">flashbase</name></expr></argument>, <argument pos:start="49:57" pos:end="49:65"><expr pos:start="49:57" pos:end="49:65"><name pos:start="49:57" pos:end="49:65">flashsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:19"><expr pos:start="51:9" pos:end="51:18"><call pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:14">g_free</name><argument_list pos:start="51:15" pos:end="51:18">(<argument pos:start="51:16" pos:end="51:17"><expr pos:start="51:16" pos:end="51:17"><name pos:start="51:16" pos:end="51:17">fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:27">(<expr pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:22">image_size</name> <operator pos:start="53:24" pos:end="53:24">&lt;</operator> <literal type="number" pos:start="53:26" pos:end="53:26">0</literal></expr>)</condition> <block pos:start="53:29" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:20">

            <expr_stmt pos:start="55:13" pos:end="55:69"><expr pos:start="55:13" pos:end="55:68"><call pos:start="55:13" pos:end="55:68"><name pos:start="55:13" pos:end="55:24">error_report</name><argument_list pos:start="55:25" pos:end="55:68">(<argument pos:start="55:26" pos:end="55:56"><expr pos:start="55:26" pos:end="55:56"><literal type="string" pos:start="55:26" pos:end="55:56">"Could not load ROM image '%s'"</literal></expr></argument>, <argument pos:start="55:59" pos:end="55:67"><expr pos:start="55:59" pos:end="55:67"><name pos:start="55:59" pos:end="55:67">bios_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:20"><expr pos:start="57:13" pos:end="57:19"><call pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:16">exit</name><argument_list pos:start="57:17" pos:end="57:19">(<argument pos:start="57:18" pos:end="57:18"><expr pos:start="57:18" pos:end="57:18"><literal type="number" pos:start="57:18" pos:end="57:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:19"><expr pos:start="61:9" pos:end="61:18"><call pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:14">g_free</name><argument_list pos:start="61:15" pos:end="61:18">(<argument pos:start="61:16" pos:end="61:17"><expr pos:start="61:16" pos:end="61:17"><name pos:start="61:16" pos:end="61:17">fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:58"><expr pos:start="67:5" pos:end="67:57"><call pos:start="67:5" pos:end="67:57"><name pos:start="67:5" pos:end="67:20">create_one_flash</name><argument_list pos:start="67:21" pos:end="67:57">(<argument pos:start="67:22" pos:end="67:34"><expr pos:start="67:22" pos:end="67:34"><literal type="string" pos:start="67:22" pos:end="67:34">"virt.flash0"</literal></expr></argument>, <argument pos:start="67:37" pos:end="67:45"><expr pos:start="67:37" pos:end="67:45"><name pos:start="67:37" pos:end="67:45">flashbase</name></expr></argument>, <argument pos:start="67:48" pos:end="67:56"><expr pos:start="67:48" pos:end="67:56"><name pos:start="67:48" pos:end="67:56">flashsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:70"><expr pos:start="69:5" pos:end="69:69"><call pos:start="69:5" pos:end="69:69"><name pos:start="69:5" pos:end="69:20">create_one_flash</name><argument_list pos:start="69:21" pos:end="69:69">(<argument pos:start="69:22" pos:end="69:34"><expr pos:start="69:22" pos:end="69:34"><literal type="string" pos:start="69:22" pos:end="69:34">"virt.flash1"</literal></expr></argument>, <argument pos:start="69:37" pos:end="69:57"><expr pos:start="69:37" pos:end="69:57"><name pos:start="69:37" pos:end="69:45">flashbase</name> <operator pos:start="69:47" pos:end="69:47">+</operator> <name pos:start="69:49" pos:end="69:57">flashsize</name></expr></argument>, <argument pos:start="69:60" pos:end="69:68"><expr pos:start="69:60" pos:end="69:68"><name pos:start="69:60" pos:end="69:68">flashsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:61"><expr pos:start="73:5" pos:end="73:60"><name pos:start="73:5" pos:end="73:12">nodename</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <call pos:start="73:16" pos:end="73:60"><name pos:start="73:16" pos:end="73:30">g_strdup_printf</name><argument_list pos:start="73:31" pos:end="73:60">(<argument pos:start="73:32" pos:end="73:48"><expr pos:start="73:32" pos:end="73:48"><literal type="string" pos:start="73:32" pos:end="73:41">"/flash@%"</literal> <name pos:start="73:43" pos:end="73:48">PRIx64</name></expr></argument>, <argument pos:start="73:51" pos:end="73:59"><expr pos:start="73:51" pos:end="73:59"><name pos:start="73:51" pos:end="73:59">flashbase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:45"><expr pos:start="75:5" pos:end="75:44"><call pos:start="75:5" pos:end="75:44"><name pos:start="75:5" pos:end="75:24">qemu_fdt_add_subnode</name><argument_list pos:start="75:25" pos:end="75:44">(<argument pos:start="75:26" pos:end="75:33"><expr pos:start="75:26" pos:end="75:33"><name pos:start="75:26" pos:end="75:33"><name pos:start="75:26" pos:end="75:28">vbi</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:33">fdt</name></name></expr></argument>, <argument pos:start="75:36" pos:end="75:43"><expr pos:start="75:36" pos:end="75:43"><name pos:start="75:36" pos:end="75:43">nodename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:75"><expr pos:start="77:5" pos:end="77:74"><call pos:start="77:5" pos:end="77:74"><name pos:start="77:5" pos:end="77:27">qemu_fdt_setprop_string</name><argument_list pos:start="77:28" pos:end="77:74">(<argument pos:start="77:29" pos:end="77:36"><expr pos:start="77:29" pos:end="77:36"><name pos:start="77:29" pos:end="77:36"><name pos:start="77:29" pos:end="77:31">vbi</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:36">fdt</name></name></expr></argument>, <argument pos:start="77:39" pos:end="77:46"><expr pos:start="77:39" pos:end="77:46"><name pos:start="77:39" pos:end="77:46">nodename</name></expr></argument>, <argument pos:start="77:49" pos:end="77:60"><expr pos:start="77:49" pos:end="77:60"><literal type="string" pos:start="77:49" pos:end="77:60">"compatible"</literal></expr></argument>, <argument pos:start="77:63" pos:end="77:73"><expr pos:start="77:63" pos:end="77:73"><literal type="string" pos:start="77:63" pos:end="77:73">"cfi-flash"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="83:73"><expr pos:start="79:5" pos:end="83:72"><call pos:start="79:5" pos:end="83:72"><name pos:start="79:5" pos:end="79:32">qemu_fdt_setprop_sized_cells</name><argument_list pos:start="79:33" pos:end="83:72">(<argument pos:start="79:34" pos:end="79:41"><expr pos:start="79:34" pos:end="79:41"><name pos:start="79:34" pos:end="79:41"><name pos:start="79:34" pos:end="79:36">vbi</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:41">fdt</name></name></expr></argument>, <argument pos:start="79:44" pos:end="79:51"><expr pos:start="79:44" pos:end="79:51"><name pos:start="79:44" pos:end="79:51">nodename</name></expr></argument>, <argument pos:start="79:54" pos:end="79:58"><expr pos:start="79:54" pos:end="79:58"><literal type="string" pos:start="79:54" pos:end="79:58">"reg"</literal></expr></argument>,

                                 <argument pos:start="81:34" pos:end="81:34"><expr pos:start="81:34" pos:end="81:34"><literal type="number" pos:start="81:34" pos:end="81:34">2</literal></expr></argument>, <argument pos:start="81:37" pos:end="81:45"><expr pos:start="81:37" pos:end="81:45"><name pos:start="81:37" pos:end="81:45">flashbase</name></expr></argument>, <argument pos:start="81:48" pos:end="81:48"><expr pos:start="81:48" pos:end="81:48"><literal type="number" pos:start="81:48" pos:end="81:48">2</literal></expr></argument>, <argument pos:start="81:51" pos:end="81:59"><expr pos:start="81:51" pos:end="81:59"><name pos:start="81:51" pos:end="81:59">flashsize</name></expr></argument>,

                                 <argument pos:start="83:34" pos:end="83:34"><expr pos:start="83:34" pos:end="83:34"><literal type="number" pos:start="83:34" pos:end="83:34">2</literal></expr></argument>, <argument pos:start="83:37" pos:end="83:57"><expr pos:start="83:37" pos:end="83:57"><name pos:start="83:37" pos:end="83:45">flashbase</name> <operator pos:start="83:47" pos:end="83:47">+</operator> <name pos:start="83:49" pos:end="83:57">flashsize</name></expr></argument>, <argument pos:start="83:60" pos:end="83:60"><expr pos:start="83:60" pos:end="83:60"><literal type="number" pos:start="83:60" pos:end="83:60">2</literal></expr></argument>, <argument pos:start="83:63" pos:end="83:71"><expr pos:start="83:63" pos:end="83:71"><name pos:start="83:63" pos:end="83:71">flashsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:63"><expr pos:start="85:5" pos:end="85:62"><call pos:start="85:5" pos:end="85:62"><name pos:start="85:5" pos:end="85:25">qemu_fdt_setprop_cell</name><argument_list pos:start="85:26" pos:end="85:62">(<argument pos:start="85:27" pos:end="85:34"><expr pos:start="85:27" pos:end="85:34"><name pos:start="85:27" pos:end="85:34"><name pos:start="85:27" pos:end="85:29">vbi</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:34">fdt</name></name></expr></argument>, <argument pos:start="85:37" pos:end="85:44"><expr pos:start="85:37" pos:end="85:44"><name pos:start="85:37" pos:end="85:44">nodename</name></expr></argument>, <argument pos:start="85:47" pos:end="85:58"><expr pos:start="85:47" pos:end="85:58"><literal type="string" pos:start="85:47" pos:end="85:58">"bank-width"</literal></expr></argument>, <argument pos:start="85:61" pos:end="85:61"><expr pos:start="85:61" pos:end="85:61"><literal type="number" pos:start="85:61" pos:end="85:61">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:21"><expr pos:start="87:5" pos:end="87:20"><call pos:start="87:5" pos:end="87:20"><name pos:start="87:5" pos:end="87:10">g_free</name><argument_list pos:start="87:11" pos:end="87:20">(<argument pos:start="87:12" pos:end="87:19"><expr pos:start="87:12" pos:end="87:19"><name pos:start="87:12" pos:end="87:19">nodename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
