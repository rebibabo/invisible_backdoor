<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27111.c" pos:tabs="8"><function pos:start="1:1" pos:end="1330:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">disas_vfp_insn</name><parameter_list pos:start="1:26" pos:end="1:73">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:34">CPUState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type> <name pos:start="1:38" pos:end="1:40">env</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:54">DisasContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:72"><decl pos:start="1:60" pos:end="1:72"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:67">uint32_t</name></type> <name pos:start="1:69" pos:end="1:72">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1330:1">{<block_content pos:start="5:5" pos:end="1328:13">

    <decl_stmt pos:start="5:5" pos:end="5:71"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:15">rd</name></decl>, <decl pos:start="5:18" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:18" pos:end="5:19">rn</name></decl>, <decl pos:start="5:22" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:22" pos:end="5:23">rm</name></decl>, <decl pos:start="5:26" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:26" pos:end="5:27">op</name></decl>, <decl pos:start="5:30" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:30" pos:end="5:30">i</name></decl>, <decl pos:start="5:33" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:33" pos:end="5:33">n</name></decl>, <decl pos:start="5:36" pos:end="5:41"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:36" pos:end="5:41">offset</name></decl>, <decl pos:start="5:44" pos:end="5:50"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:44" pos:end="5:50">delta_d</name></decl>, <decl pos:start="5:53" pos:end="5:59"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:53" pos:end="5:59">delta_m</name></decl>, <decl pos:start="5:62" pos:end="5:70"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:62" pos:end="5:70">bank_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">dp</name></decl>, <decl pos:start="7:13" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:18">veclen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:13">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">TCGv</name></type> <name pos:start="11:10" pos:end="11:12">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">TCGv</name></type> <name pos:start="13:10" pos:end="13:13">tmp2</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:43">(<expr pos:start="17:9" pos:end="17:42"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:42"><name pos:start="17:10" pos:end="17:20">arm_feature</name><argument_list pos:start="17:21" pos:end="17:42">(<argument pos:start="17:22" pos:end="17:24"><expr pos:start="17:22" pos:end="17:24"><name pos:start="17:22" pos:end="17:24">env</name></expr></argument>, <argument pos:start="17:27" pos:end="17:41"><expr pos:start="17:27" pos:end="17:41"><name pos:start="17:27" pos:end="17:41">ARM_FEATURE_VFP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="39:5"><if pos:start="23:5" pos:end="39:5">if <condition pos:start="23:8" pos:end="23:26">(<expr pos:start="23:9" pos:end="23:25"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:25"><name pos:start="23:10" pos:end="23:20">vfp_enabled</name><argument_list pos:start="23:21" pos:end="23:25">(<argument pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:24">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:28" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:21">

        <comment type="block" pos:start="25:9" pos:end="25:77">/* VFP disabled.  Only allow fmxr/fmrx to/from some control regs.  */</comment>

        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if <condition pos:start="27:12" pos:end="27:46">(<expr pos:start="27:13" pos:end="27:45"><operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:17">insn</name> <operator pos:start="27:19" pos:end="27:19">&amp;</operator> <literal type="number" pos:start="27:21" pos:end="27:30">0x0fe00fff</literal><operator pos:start="27:31" pos:end="27:31">)</operator> <operator pos:start="27:33" pos:end="27:34">!=</operator> <literal type="number" pos:start="27:36" pos:end="27:45">0x0ee00a10</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <return pos:start="29:13" pos:end="29:21">return <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:10">rn</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <operator pos:start="31:14" pos:end="31:14">(</operator><name pos:start="31:15" pos:end="31:18">insn</name> <operator pos:start="31:20" pos:end="31:21">&gt;&gt;</operator> <literal type="number" pos:start="31:23" pos:end="31:24">16</literal><operator pos:start="31:25" pos:end="31:25">)</operator> <operator pos:start="31:27" pos:end="31:27">&amp;</operator> <literal type="number" pos:start="31:29" pos:end="31:31">0xf</literal></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="37:21"><if pos:start="33:9" pos:end="37:21">if <condition pos:start="33:12" pos:end="35:58">(<expr pos:start="33:13" pos:end="35:57"><name pos:start="33:13" pos:end="33:14">rn</name> <operator pos:start="33:16" pos:end="33:17">!=</operator> <name pos:start="33:19" pos:end="33:31">ARM_VFP_FPSID</name> <operator pos:start="33:33" pos:end="33:34">&amp;&amp;</operator> <name pos:start="33:36" pos:end="33:37">rn</name> <operator pos:start="33:39" pos:end="33:40">!=</operator> <name pos:start="33:42" pos:end="33:54">ARM_VFP_FPEXC</name>

            <operator pos:start="35:13" pos:end="35:14">&amp;&amp;</operator> <name pos:start="35:16" pos:end="35:17">rn</name> <operator pos:start="35:19" pos:end="35:20">!=</operator> <name pos:start="35:22" pos:end="35:34">ARM_VFP_MVFR1</name> <operator pos:start="35:36" pos:end="35:37">&amp;&amp;</operator> <name pos:start="35:39" pos:end="35:40">rn</name> <operator pos:start="35:42" pos:end="35:43">!=</operator> <name pos:start="35:45" pos:end="35:57">ARM_VFP_MVFR0</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:21"><block_content pos:start="37:13" pos:end="37:21">

            <return pos:start="37:13" pos:end="37:21">return <expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:6">dp</name> <operator pos:start="41:8" pos:end="41:8">=</operator> <operator pos:start="41:10" pos:end="41:10">(</operator><operator pos:start="41:11" pos:end="41:11">(</operator><name pos:start="41:12" pos:end="41:15">insn</name> <operator pos:start="41:17" pos:end="41:17">&amp;</operator> <literal type="number" pos:start="41:19" pos:end="41:23">0xf00</literal><operator pos:start="41:24" pos:end="41:24">)</operator> <operator pos:start="41:26" pos:end="41:27">==</operator> <literal type="number" pos:start="41:29" pos:end="41:33">0xb00</literal><operator pos:start="41:34" pos:end="41:34">)</operator></expr>;</expr_stmt>

    <switch pos:start="43:5" pos:end="1326:5">switch <condition pos:start="43:12" pos:end="43:31">(<expr pos:start="43:13" pos:end="43:30"><operator pos:start="43:13" pos:end="43:13">(</operator><name pos:start="43:14" pos:end="43:17">insn</name> <operator pos:start="43:19" pos:end="43:20">&gt;&gt;</operator> <literal type="number" pos:start="43:22" pos:end="43:23">24</literal><operator pos:start="43:24" pos:end="43:24">)</operator> <operator pos:start="43:26" pos:end="43:26">&amp;</operator> <literal type="number" pos:start="43:28" pos:end="43:30">0xf</literal></expr>)</condition> <block pos:start="43:33" pos:end="1326:5">{<block_content pos:start="45:5" pos:end="1324:17">

    <case pos:start="45:5" pos:end="45:13">case <expr pos:start="45:10" pos:end="45:12"><literal type="number" pos:start="45:10" pos:end="45:12">0xe</literal></expr>:</case>

        <if_stmt pos:start="47:9" pos:end="1080:9"><if pos:start="47:9" pos:end="430:9">if <condition pos:start="47:12" pos:end="47:28">(<expr pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:16">insn</name> <operator pos:start="47:18" pos:end="47:18">&amp;</operator> <operator pos:start="47:20" pos:end="47:20">(</operator><literal type="number" pos:start="47:21" pos:end="47:21">1</literal> <operator pos:start="47:23" pos:end="47:24">&lt;&lt;</operator> <literal type="number" pos:start="47:26" pos:end="47:26">4</literal><operator pos:start="47:27" pos:end="47:27">)</operator></expr>)</condition> <block pos:start="47:30" pos:end="430:9">{<block_content pos:start="51:13" pos:end="428:13">

            <comment type="block" pos:start="49:13" pos:end="49:42">/* single register transfer */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:36"><expr pos:start="51:13" pos:end="51:35"><name pos:start="51:13" pos:end="51:14">rd</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <operator pos:start="51:18" pos:end="51:18">(</operator><name pos:start="51:19" pos:end="51:22">insn</name> <operator pos:start="51:24" pos:end="51:25">&gt;&gt;</operator> <literal type="number" pos:start="51:27" pos:end="51:28">12</literal><operator pos:start="51:29" pos:end="51:29">)</operator> <operator pos:start="51:31" pos:end="51:31">&amp;</operator> <literal type="number" pos:start="51:33" pos:end="51:35">0xf</literal></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="428:13"><if pos:start="53:13" pos:end="229:13">if <condition pos:start="53:16" pos:end="53:19">(<expr pos:start="53:17" pos:end="53:18"><name pos:start="53:17" pos:end="53:18">dp</name></expr>)</condition> <block pos:start="53:21" pos:end="229:13">{<block_content pos:start="55:17" pos:end="227:17">

                <decl_stmt pos:start="55:17" pos:end="55:25"><decl pos:start="55:17" pos:end="55:24"><type pos:start="55:17" pos:end="55:19"><name pos:start="55:17" pos:end="55:19">int</name></type> <name pos:start="55:21" pos:end="55:24">size</name></decl>;</decl_stmt>

                <decl_stmt pos:start="57:17" pos:end="57:25"><decl pos:start="57:17" pos:end="57:24"><type pos:start="57:17" pos:end="57:19"><name pos:start="57:17" pos:end="57:19">int</name></type> <name pos:start="57:21" pos:end="57:24">pass</name></decl>;</decl_stmt>



                <expr_stmt pos:start="61:17" pos:end="61:37"><expr pos:start="61:17" pos:end="61:36"><call pos:start="61:17" pos:end="61:36"><name pos:start="61:17" pos:end="61:26">VFP_DREG_N</name><argument_list pos:start="61:27" pos:end="61:36">(<argument pos:start="61:28" pos:end="61:29"><expr pos:start="61:28" pos:end="61:29"><name pos:start="61:28" pos:end="61:29">rn</name></expr></argument>, <argument pos:start="61:32" pos:end="61:35"><expr pos:start="61:32" pos:end="61:35"><name pos:start="61:32" pos:end="61:35">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="63:17" pos:end="65:29"><if pos:start="63:17" pos:end="65:29">if <condition pos:start="63:20" pos:end="63:31">(<expr pos:start="63:21" pos:end="63:30"><name pos:start="63:21" pos:end="63:24">insn</name> <operator pos:start="63:26" pos:end="63:26">&amp;</operator> <literal type="number" pos:start="63:28" pos:end="63:30">0xf</literal></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:29"><block_content pos:start="65:21" pos:end="65:29">

                    <return pos:start="65:21" pos:end="65:29">return <expr pos:start="65:28" pos:end="65:28"><literal type="number" pos:start="65:28" pos:end="65:28">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <if_stmt pos:start="67:17" pos:end="71:29"><if pos:start="67:17" pos:end="71:29">if <condition pos:start="67:20" pos:end="69:59">(<expr pos:start="67:21" pos:end="69:58"><name pos:start="67:21" pos:end="67:24">insn</name> <operator pos:start="67:26" pos:end="67:26">&amp;</operator> <literal type="number" pos:start="67:28" pos:end="67:37">0x00c00060</literal>

                    <operator pos:start="69:21" pos:end="69:22">&amp;&amp;</operator> <operator pos:start="69:24" pos:end="69:24">!</operator><call pos:start="69:25" pos:end="69:58"><name pos:start="69:25" pos:end="69:35">arm_feature</name><argument_list pos:start="69:36" pos:end="69:58">(<argument pos:start="69:37" pos:end="69:39"><expr pos:start="69:37" pos:end="69:39"><name pos:start="69:37" pos:end="69:39">env</name></expr></argument>, <argument pos:start="69:42" pos:end="69:57"><expr pos:start="69:42" pos:end="69:57"><name pos:start="69:42" pos:end="69:57">ARM_FEATURE_NEON</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="71:21" pos:end="71:29"><block_content pos:start="71:21" pos:end="71:29">

                    <return pos:start="71:21" pos:end="71:29">return <expr pos:start="71:28" pos:end="71:28"><literal type="number" pos:start="71:28" pos:end="71:28">1</literal></expr>;</return></block_content></block></if></if_stmt>



                <expr_stmt pos:start="75:17" pos:end="75:40"><expr pos:start="75:17" pos:end="75:39"><name pos:start="75:17" pos:end="75:20">pass</name> <operator pos:start="75:22" pos:end="75:22">=</operator> <operator pos:start="75:24" pos:end="75:24">(</operator><name pos:start="75:25" pos:end="75:28">insn</name> <operator pos:start="75:30" pos:end="75:31">&gt;&gt;</operator> <literal type="number" pos:start="75:33" pos:end="75:34">21</literal><operator pos:start="75:35" pos:end="75:35">)</operator> <operator pos:start="75:37" pos:end="75:37">&amp;</operator> <literal type="number" pos:start="75:39" pos:end="75:39">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="77:17" pos:end="95:17"><if pos:start="77:17" pos:end="83:17">if <condition pos:start="77:20" pos:end="77:37">(<expr pos:start="77:21" pos:end="77:36"><name pos:start="77:21" pos:end="77:24">insn</name> <operator pos:start="77:26" pos:end="77:26">&amp;</operator> <operator pos:start="77:28" pos:end="77:28">(</operator><literal type="number" pos:start="77:29" pos:end="77:29">1</literal> <operator pos:start="77:31" pos:end="77:32">&lt;&lt;</operator> <literal type="number" pos:start="77:34" pos:end="77:35">22</literal><operator pos:start="77:36" pos:end="77:36">)</operator></expr>)</condition> <block pos:start="77:39" pos:end="83:17">{<block_content pos:start="79:21" pos:end="81:51">

                    <expr_stmt pos:start="79:21" pos:end="79:29"><expr pos:start="79:21" pos:end="79:28"><name pos:start="79:21" pos:end="79:24">size</name> <operator pos:start="79:26" pos:end="79:26">=</operator> <literal type="number" pos:start="79:28" pos:end="79:28">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:51"><expr pos:start="81:21" pos:end="81:50"><name pos:start="81:21" pos:end="81:26">offset</name> <operator pos:start="81:28" pos:end="81:28">=</operator> <operator pos:start="81:30" pos:end="81:30">(</operator><operator pos:start="81:31" pos:end="81:31">(</operator><name pos:start="81:32" pos:end="81:35">insn</name> <operator pos:start="81:37" pos:end="81:38">&gt;&gt;</operator> <literal type="number" pos:start="81:40" pos:end="81:40">5</literal><operator pos:start="81:41" pos:end="81:41">)</operator> <operator pos:start="81:43" pos:end="81:43">&amp;</operator> <literal type="number" pos:start="81:45" pos:end="81:45">3</literal><operator pos:start="81:46" pos:end="81:46">)</operator> <operator pos:start="81:48" pos:end="81:48">*</operator> <literal type="number" pos:start="81:50" pos:end="81:50">8</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="83:19" pos:end="89:17">else if <condition pos:start="83:27" pos:end="83:43">(<expr pos:start="83:28" pos:end="83:42"><name pos:start="83:28" pos:end="83:31">insn</name> <operator pos:start="83:33" pos:end="83:33">&amp;</operator> <operator pos:start="83:35" pos:end="83:35">(</operator><literal type="number" pos:start="83:36" pos:end="83:36">1</literal> <operator pos:start="83:38" pos:end="83:39">&lt;&lt;</operator> <literal type="number" pos:start="83:41" pos:end="83:41">5</literal><operator pos:start="83:42" pos:end="83:42">)</operator></expr>)</condition> <block pos:start="83:45" pos:end="89:17">{<block_content pos:start="85:21" pos:end="87:56">

                    <expr_stmt pos:start="85:21" pos:end="85:29"><expr pos:start="85:21" pos:end="85:28"><name pos:start="85:21" pos:end="85:24">size</name> <operator pos:start="85:26" pos:end="85:26">=</operator> <literal type="number" pos:start="85:28" pos:end="85:28">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:56"><expr pos:start="87:21" pos:end="87:55"><name pos:start="87:21" pos:end="87:26">offset</name> <operator pos:start="87:28" pos:end="87:28">=</operator> <ternary pos:start="87:30" pos:end="87:55"><condition pos:start="87:30" pos:end="87:48"><expr pos:start="87:30" pos:end="87:46"><operator pos:start="87:30" pos:end="87:30">(</operator><name pos:start="87:31" pos:end="87:34">insn</name> <operator pos:start="87:36" pos:end="87:36">&amp;</operator> <operator pos:start="87:38" pos:end="87:38">(</operator><literal type="number" pos:start="87:39" pos:end="87:39">1</literal> <operator pos:start="87:41" pos:end="87:42">&lt;&lt;</operator> <literal type="number" pos:start="87:44" pos:end="87:44">6</literal><operator pos:start="87:45" pos:end="87:45">)</operator><operator pos:start="87:46" pos:end="87:46">)</operator></expr> ?</condition><then pos:start="87:50" pos:end="87:51"> <expr pos:start="87:50" pos:end="87:51"><literal type="number" pos:start="87:50" pos:end="87:51">16</literal></expr> </then><else pos:start="87:53" pos:end="87:55">: <expr pos:start="87:55" pos:end="87:55"><literal type="number" pos:start="87:55" pos:end="87:55">0</literal></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="89:19" pos:end="95:17">else <block pos:start="89:24" pos:end="95:17">{<block_content pos:start="91:21" pos:end="93:31">

                    <expr_stmt pos:start="91:21" pos:end="91:29"><expr pos:start="91:21" pos:end="91:28"><name pos:start="91:21" pos:end="91:24">size</name> <operator pos:start="91:26" pos:end="91:26">=</operator> <literal type="number" pos:start="91:28" pos:end="91:28">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:31"><expr pos:start="93:21" pos:end="93:30"><name pos:start="93:21" pos:end="93:26">offset</name> <operator pos:start="93:28" pos:end="93:28">=</operator> <literal type="number" pos:start="93:30" pos:end="93:30">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="97:17" pos:end="227:17"><if pos:start="97:17" pos:end="159:17">if <condition pos:start="97:20" pos:end="97:41">(<expr pos:start="97:21" pos:end="97:40"><name pos:start="97:21" pos:end="97:24">insn</name> <operator pos:start="97:26" pos:end="97:26">&amp;</operator> <name pos:start="97:28" pos:end="97:40">ARM_CP_RW_BIT</name></expr>)</condition> <block pos:start="97:43" pos:end="159:17">{<block_content pos:start="101:21" pos:end="157:42">

                    <comment type="block" pos:start="99:21" pos:end="99:34">/* vfp-&gt;arm */</comment>

                    <expr_stmt pos:start="101:21" pos:end="101:50"><expr pos:start="101:21" pos:end="101:49"><name pos:start="101:21" pos:end="101:23">tmp</name> <operator pos:start="101:25" pos:end="101:25">=</operator> <call pos:start="101:27" pos:end="101:49"><name pos:start="101:27" pos:end="101:39">neon_load_reg</name><argument_list pos:start="101:40" pos:end="101:49">(<argument pos:start="101:41" pos:end="101:42"><expr pos:start="101:41" pos:end="101:42"><name pos:start="101:41" pos:end="101:42">rn</name></expr></argument>, <argument pos:start="101:45" pos:end="101:48"><expr pos:start="101:45" pos:end="101:48"><name pos:start="101:45" pos:end="101:48">pass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <switch pos:start="103:21" pos:end="155:21">switch <condition pos:start="103:28" pos:end="103:33">(<expr pos:start="103:29" pos:end="103:32"><name pos:start="103:29" pos:end="103:32">size</name></expr>)</condition> <block pos:start="103:35" pos:end="155:21">{<block_content pos:start="105:21" pos:end="153:30">

                    <case pos:start="105:21" pos:end="105:27">case <expr pos:start="105:26" pos:end="105:26"><literal type="number" pos:start="105:26" pos:end="105:26">0</literal></expr>:</case>

                        <if_stmt pos:start="107:25" pos:end="109:63"><if pos:start="107:25" pos:end="109:63">if <condition pos:start="107:28" pos:end="107:35">(<expr pos:start="107:29" pos:end="107:34"><name pos:start="107:29" pos:end="107:34">offset</name></expr>)</condition><block type="pseudo" pos:start="109:29" pos:end="109:63"><block_content pos:start="109:29" pos:end="109:63">

                            <expr_stmt pos:start="109:29" pos:end="109:63"><expr pos:start="109:29" pos:end="109:62"><call pos:start="109:29" pos:end="109:62"><name pos:start="109:29" pos:end="109:44">tcg_gen_shri_i32</name><argument_list pos:start="109:45" pos:end="109:62">(<argument pos:start="109:46" pos:end="109:48"><expr pos:start="109:46" pos:end="109:48"><name pos:start="109:46" pos:end="109:48">tmp</name></expr></argument>, <argument pos:start="109:51" pos:end="109:53"><expr pos:start="109:51" pos:end="109:53"><name pos:start="109:51" pos:end="109:53">tmp</name></expr></argument>, <argument pos:start="109:56" pos:end="109:61"><expr pos:start="109:56" pos:end="109:61"><name pos:start="109:56" pos:end="109:61">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="111:25" pos:end="117:42"><if pos:start="111:25" pos:end="113:42">if <condition pos:start="111:28" pos:end="111:45">(<expr pos:start="111:29" pos:end="111:44"><name pos:start="111:29" pos:end="111:32">insn</name> <operator pos:start="111:34" pos:end="111:34">&amp;</operator> <operator pos:start="111:36" pos:end="111:36">(</operator><literal type="number" pos:start="111:37" pos:end="111:37">1</literal> <operator pos:start="111:39" pos:end="111:40">&lt;&lt;</operator> <literal type="number" pos:start="111:42" pos:end="111:43">23</literal><operator pos:start="111:44" pos:end="111:44">)</operator></expr>)</condition><block type="pseudo" pos:start="113:29" pos:end="113:42"><block_content pos:start="113:29" pos:end="113:42">

                            <expr_stmt pos:start="113:29" pos:end="113:42"><expr pos:start="113:29" pos:end="113:41"><call pos:start="113:29" pos:end="113:41"><name pos:start="113:29" pos:end="113:36">gen_uxtb</name><argument_list pos:start="113:37" pos:end="113:41">(<argument pos:start="113:38" pos:end="113:40"><expr pos:start="113:38" pos:end="113:40"><name pos:start="113:38" pos:end="113:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="115:25" pos:end="117:42">else<block type="pseudo" pos:start="117:29" pos:end="117:42"><block_content pos:start="117:29" pos:end="117:42">

                            <expr_stmt pos:start="117:29" pos:end="117:42"><expr pos:start="117:29" pos:end="117:41"><call pos:start="117:29" pos:end="117:41"><name pos:start="117:29" pos:end="117:36">gen_sxtb</name><argument_list pos:start="117:37" pos:end="117:41">(<argument pos:start="117:38" pos:end="117:40"><expr pos:start="117:38" pos:end="117:40"><name pos:start="117:38" pos:end="117:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <break pos:start="119:25" pos:end="119:30">break;</break>

                    <case pos:start="121:21" pos:end="121:27">case <expr pos:start="121:26" pos:end="121:26"><literal type="number" pos:start="121:26" pos:end="121:26">1</literal></expr>:</case>

                        <if_stmt pos:start="123:25" pos:end="147:25"><if pos:start="123:25" pos:end="135:25">if <condition pos:start="123:28" pos:end="123:45">(<expr pos:start="123:29" pos:end="123:44"><name pos:start="123:29" pos:end="123:32">insn</name> <operator pos:start="123:34" pos:end="123:34">&amp;</operator> <operator pos:start="123:36" pos:end="123:36">(</operator><literal type="number" pos:start="123:37" pos:end="123:37">1</literal> <operator pos:start="123:39" pos:end="123:40">&lt;&lt;</operator> <literal type="number" pos:start="123:42" pos:end="123:43">23</literal><operator pos:start="123:44" pos:end="123:44">)</operator></expr>)</condition> <block pos:start="123:47" pos:end="135:25">{<block_content pos:start="125:29" pos:end="133:29">

                            <if_stmt pos:start="125:29" pos:end="133:29"><if pos:start="125:29" pos:end="129:29">if <condition pos:start="125:32" pos:end="125:39">(<expr pos:start="125:33" pos:end="125:38"><name pos:start="125:33" pos:end="125:38">offset</name></expr>)</condition> <block pos:start="125:41" pos:end="129:29">{<block_content pos:start="127:33" pos:end="127:63">

                                <expr_stmt pos:start="127:33" pos:end="127:63"><expr pos:start="127:33" pos:end="127:62"><call pos:start="127:33" pos:end="127:62"><name pos:start="127:33" pos:end="127:48">tcg_gen_shri_i32</name><argument_list pos:start="127:49" pos:end="127:62">(<argument pos:start="127:50" pos:end="127:52"><expr pos:start="127:50" pos:end="127:52"><name pos:start="127:50" pos:end="127:52">tmp</name></expr></argument>, <argument pos:start="127:55" pos:end="127:57"><expr pos:start="127:55" pos:end="127:57"><name pos:start="127:55" pos:end="127:57">tmp</name></expr></argument>, <argument pos:start="127:60" pos:end="127:61"><expr pos:start="127:60" pos:end="127:61"><literal type="number" pos:start="127:60" pos:end="127:61">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="129:31" pos:end="133:29">else <block pos:start="129:36" pos:end="133:29">{<block_content pos:start="131:33" pos:end="131:46">

                                <expr_stmt pos:start="131:33" pos:end="131:46"><expr pos:start="131:33" pos:end="131:45"><call pos:start="131:33" pos:end="131:45"><name pos:start="131:33" pos:end="131:40">gen_uxth</name><argument_list pos:start="131:41" pos:end="131:45">(<argument pos:start="131:42" pos:end="131:44"><expr pos:start="131:42" pos:end="131:44"><name pos:start="131:42" pos:end="131:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if> <else pos:start="135:27" pos:end="147:25">else <block pos:start="135:32" pos:end="147:25">{<block_content pos:start="137:29" pos:end="145:29">

                            <if_stmt pos:start="137:29" pos:end="145:29"><if pos:start="137:29" pos:end="141:29">if <condition pos:start="137:32" pos:end="137:39">(<expr pos:start="137:33" pos:end="137:38"><name pos:start="137:33" pos:end="137:38">offset</name></expr>)</condition> <block pos:start="137:41" pos:end="141:29">{<block_content pos:start="139:33" pos:end="139:63">

                                <expr_stmt pos:start="139:33" pos:end="139:63"><expr pos:start="139:33" pos:end="139:62"><call pos:start="139:33" pos:end="139:62"><name pos:start="139:33" pos:end="139:48">tcg_gen_sari_i32</name><argument_list pos:start="139:49" pos:end="139:62">(<argument pos:start="139:50" pos:end="139:52"><expr pos:start="139:50" pos:end="139:52"><name pos:start="139:50" pos:end="139:52">tmp</name></expr></argument>, <argument pos:start="139:55" pos:end="139:57"><expr pos:start="139:55" pos:end="139:57"><name pos:start="139:55" pos:end="139:57">tmp</name></expr></argument>, <argument pos:start="139:60" pos:end="139:61"><expr pos:start="139:60" pos:end="139:61"><literal type="number" pos:start="139:60" pos:end="139:61">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="141:31" pos:end="145:29">else <block pos:start="141:36" pos:end="145:29">{<block_content pos:start="143:33" pos:end="143:46">

                                <expr_stmt pos:start="143:33" pos:end="143:46"><expr pos:start="143:33" pos:end="143:45"><call pos:start="143:33" pos:end="143:45"><name pos:start="143:33" pos:end="143:40">gen_sxth</name><argument_list pos:start="143:41" pos:end="143:45">(<argument pos:start="143:42" pos:end="143:44"><expr pos:start="143:42" pos:end="143:44"><name pos:start="143:42" pos:end="143:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></else></if_stmt>

                        <break pos:start="149:25" pos:end="149:30">break;</break>

                    <case pos:start="151:21" pos:end="151:27">case <expr pos:start="151:26" pos:end="151:26"><literal type="number" pos:start="151:26" pos:end="151:26">2</literal></expr>:</case>

                        <break pos:start="153:25" pos:end="153:30">break;</break>

                    </block_content>}</block></switch>

                    <expr_stmt pos:start="157:21" pos:end="157:42"><expr pos:start="157:21" pos:end="157:41"><call pos:start="157:21" pos:end="157:41"><name pos:start="157:21" pos:end="157:29">store_reg</name><argument_list pos:start="157:30" pos:end="157:41">(<argument pos:start="157:31" pos:end="157:31"><expr pos:start="157:31" pos:end="157:31"><name pos:start="157:31" pos:end="157:31">s</name></expr></argument>, <argument pos:start="157:34" pos:end="157:35"><expr pos:start="157:34" pos:end="157:35"><name pos:start="157:34" pos:end="157:35">rd</name></expr></argument>, <argument pos:start="157:38" pos:end="157:40"><expr pos:start="157:38" pos:end="157:40"><name pos:start="157:38" pos:end="157:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="159:19" pos:end="227:17">else <block pos:start="159:24" pos:end="227:17">{<block_content pos:start="163:21" pos:end="225:21">

                    <comment type="block" pos:start="161:21" pos:end="161:34">/* arm-&gt;vfp */</comment>

                    <expr_stmt pos:start="163:21" pos:end="163:42"><expr pos:start="163:21" pos:end="163:41"><name pos:start="163:21" pos:end="163:23">tmp</name> <operator pos:start="163:25" pos:end="163:25">=</operator> <call pos:start="163:27" pos:end="163:41"><name pos:start="163:27" pos:end="163:34">load_reg</name><argument_list pos:start="163:35" pos:end="163:41">(<argument pos:start="163:36" pos:end="163:36"><expr pos:start="163:36" pos:end="163:36"><name pos:start="163:36" pos:end="163:36">s</name></expr></argument>, <argument pos:start="163:39" pos:end="163:40"><expr pos:start="163:39" pos:end="163:40"><name pos:start="163:39" pos:end="163:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="165:21" pos:end="225:21"><if pos:start="165:21" pos:end="191:21">if <condition pos:start="165:24" pos:end="165:41">(<expr pos:start="165:25" pos:end="165:40"><name pos:start="165:25" pos:end="165:28">insn</name> <operator pos:start="165:30" pos:end="165:30">&amp;</operator> <operator pos:start="165:32" pos:end="165:32">(</operator><literal type="number" pos:start="165:33" pos:end="165:33">1</literal> <operator pos:start="165:35" pos:end="165:36">&lt;&lt;</operator> <literal type="number" pos:start="165:38" pos:end="165:39">23</literal><operator pos:start="165:40" pos:end="165:40">)</operator></expr>)</condition> <block pos:start="165:43" pos:end="191:21">{<block_content pos:start="169:25" pos:end="189:51">

                        <comment type="block" pos:start="167:25" pos:end="167:34">/* VDUP */</comment>

                        <if_stmt pos:start="169:25" pos:end="177:25"><if pos:start="169:25" pos:end="173:25">if <condition pos:start="169:28" pos:end="169:38">(<expr pos:start="169:29" pos:end="169:37"><name pos:start="169:29" pos:end="169:32">size</name> <operator pos:start="169:34" pos:end="169:35">==</operator> <literal type="number" pos:start="169:37" pos:end="169:37">0</literal></expr>)</condition> <block pos:start="169:40" pos:end="173:25">{<block_content pos:start="171:29" pos:end="171:52">

                            <expr_stmt pos:start="171:29" pos:end="171:52"><expr pos:start="171:29" pos:end="171:51"><call pos:start="171:29" pos:end="171:51"><name pos:start="171:29" pos:end="171:43">gen_neon_dup_u8</name><argument_list pos:start="171:44" pos:end="171:51">(<argument pos:start="171:45" pos:end="171:47"><expr pos:start="171:45" pos:end="171:47"><name pos:start="171:45" pos:end="171:47">tmp</name></expr></argument>, <argument pos:start="171:50" pos:end="171:50"><expr pos:start="171:50" pos:end="171:50"><literal type="number" pos:start="171:50" pos:end="171:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <if type="elseif" pos:start="173:27" pos:end="177:25">else if <condition pos:start="173:35" pos:end="173:45">(<expr pos:start="173:36" pos:end="173:44"><name pos:start="173:36" pos:end="173:39">size</name> <operator pos:start="173:41" pos:end="173:42">==</operator> <literal type="number" pos:start="173:44" pos:end="173:44">1</literal></expr>)</condition> <block pos:start="173:47" pos:end="177:25">{<block_content pos:start="175:29" pos:end="175:52">

                            <expr_stmt pos:start="175:29" pos:end="175:52"><expr pos:start="175:29" pos:end="175:51"><call pos:start="175:29" pos:end="175:51"><name pos:start="175:29" pos:end="175:46">gen_neon_dup_low16</name><argument_list pos:start="175:47" pos:end="175:51">(<argument pos:start="175:48" pos:end="175:50"><expr pos:start="175:48" pos:end="175:50"><name pos:start="175:48" pos:end="175:50">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <for pos:start="179:25" pos:end="187:25">for <control pos:start="179:29" pos:end="179:55">(<init pos:start="179:30" pos:end="179:35"><expr pos:start="179:30" pos:end="179:34"><name pos:start="179:30" pos:end="179:30">n</name> <operator pos:start="179:32" pos:end="179:32">=</operator> <literal type="number" pos:start="179:34" pos:end="179:34">0</literal></expr>;</init> <condition pos:start="179:37" pos:end="179:50"><expr pos:start="179:37" pos:end="179:49"><name pos:start="179:37" pos:end="179:37">n</name> <operator pos:start="179:39" pos:end="179:40">&lt;=</operator> <name pos:start="179:42" pos:end="179:45">pass</name> <operator pos:start="179:47" pos:end="179:47">*</operator> <literal type="number" pos:start="179:49" pos:end="179:49">2</literal></expr>;</condition> <incr pos:start="179:52" pos:end="179:54"><expr pos:start="179:52" pos:end="179:54"><name pos:start="179:52" pos:end="179:52">n</name><operator pos:start="179:53" pos:end="179:54">++</operator></expr></incr>)</control> <block pos:start="179:57" pos:end="187:25">{<block_content pos:start="181:29" pos:end="185:56">

                            <expr_stmt pos:start="181:29" pos:end="181:45"><expr pos:start="181:29" pos:end="181:44"><name pos:start="181:29" pos:end="181:32">tmp2</name> <operator pos:start="181:34" pos:end="181:34">=</operator> <call pos:start="181:36" pos:end="181:44"><name pos:start="181:36" pos:end="181:42">new_tmp</name><argument_list pos:start="181:43" pos:end="181:44">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="183:29" pos:end="183:55"><expr pos:start="183:29" pos:end="183:54"><call pos:start="183:29" pos:end="183:54"><name pos:start="183:29" pos:end="183:43">tcg_gen_mov_i32</name><argument_list pos:start="183:44" pos:end="183:54">(<argument pos:start="183:45" pos:end="183:48"><expr pos:start="183:45" pos:end="183:48"><name pos:start="183:45" pos:end="183:48">tmp2</name></expr></argument>, <argument pos:start="183:51" pos:end="183:53"><expr pos:start="183:51" pos:end="183:53"><name pos:start="183:51" pos:end="183:53">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="185:29" pos:end="185:56"><expr pos:start="185:29" pos:end="185:55"><call pos:start="185:29" pos:end="185:55"><name pos:start="185:29" pos:end="185:42">neon_store_reg</name><argument_list pos:start="185:43" pos:end="185:55">(<argument pos:start="185:44" pos:end="185:45"><expr pos:start="185:44" pos:end="185:45"><name pos:start="185:44" pos:end="185:45">rn</name></expr></argument>, <argument pos:start="185:48" pos:end="185:48"><expr pos:start="185:48" pos:end="185:48"><name pos:start="185:48" pos:end="185:48">n</name></expr></argument>, <argument pos:start="185:51" pos:end="185:54"><expr pos:start="185:51" pos:end="185:54"><name pos:start="185:51" pos:end="185:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></for>

                        <expr_stmt pos:start="189:25" pos:end="189:51"><expr pos:start="189:25" pos:end="189:50"><call pos:start="189:25" pos:end="189:50"><name pos:start="189:25" pos:end="189:38">neon_store_reg</name><argument_list pos:start="189:39" pos:end="189:50">(<argument pos:start="189:40" pos:end="189:41"><expr pos:start="189:40" pos:end="189:41"><name pos:start="189:40" pos:end="189:41">rn</name></expr></argument>, <argument pos:start="189:44" pos:end="189:44"><expr pos:start="189:44" pos:end="189:44"><name pos:start="189:44" pos:end="189:44">n</name></expr></argument>, <argument pos:start="189:47" pos:end="189:49"><expr pos:start="189:47" pos:end="189:49"><name pos:start="189:47" pos:end="189:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="191:23" pos:end="225:21">else <block pos:start="191:28" pos:end="225:21">{<block_content pos:start="195:25" pos:end="223:54">

                        <comment type="block" pos:start="193:25" pos:end="193:34">/* VMOV */</comment>

                        <switch pos:start="195:25" pos:end="221:25">switch <condition pos:start="195:32" pos:end="195:37">(<expr pos:start="195:33" pos:end="195:36"><name pos:start="195:33" pos:end="195:36">size</name></expr>)</condition> <block pos:start="195:39" pos:end="221:25">{<block_content pos:start="197:25" pos:end="219:34">

                        <case pos:start="197:25" pos:end="197:31">case <expr pos:start="197:30" pos:end="197:30"><literal type="number" pos:start="197:30" pos:end="197:30">0</literal></expr>:</case>

                            <expr_stmt pos:start="199:29" pos:end="199:59"><expr pos:start="199:29" pos:end="199:58"><name pos:start="199:29" pos:end="199:32">tmp2</name> <operator pos:start="199:34" pos:end="199:34">=</operator> <call pos:start="199:36" pos:end="199:58"><name pos:start="199:36" pos:end="199:48">neon_load_reg</name><argument_list pos:start="199:49" pos:end="199:58">(<argument pos:start="199:50" pos:end="199:51"><expr pos:start="199:50" pos:end="199:51"><name pos:start="199:50" pos:end="199:51">rn</name></expr></argument>, <argument pos:start="199:54" pos:end="199:57"><expr pos:start="199:54" pos:end="199:57"><name pos:start="199:54" pos:end="199:57">pass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="201:29" pos:end="201:66"><expr pos:start="201:29" pos:end="201:65"><call pos:start="201:29" pos:end="201:65"><name pos:start="201:29" pos:end="201:35">gen_bfi</name><argument_list pos:start="201:36" pos:end="201:65">(<argument pos:start="201:37" pos:end="201:39"><expr pos:start="201:37" pos:end="201:39"><name pos:start="201:37" pos:end="201:39">tmp</name></expr></argument>, <argument pos:start="201:42" pos:end="201:45"><expr pos:start="201:42" pos:end="201:45"><name pos:start="201:42" pos:end="201:45">tmp2</name></expr></argument>, <argument pos:start="201:48" pos:end="201:50"><expr pos:start="201:48" pos:end="201:50"><name pos:start="201:48" pos:end="201:50">tmp</name></expr></argument>, <argument pos:start="201:53" pos:end="201:58"><expr pos:start="201:53" pos:end="201:58"><name pos:start="201:53" pos:end="201:58">offset</name></expr></argument>, <argument pos:start="201:61" pos:end="201:64"><expr pos:start="201:61" pos:end="201:64"><literal type="number" pos:start="201:61" pos:end="201:64">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="203:29" pos:end="203:43"><expr pos:start="203:29" pos:end="203:42"><call pos:start="203:29" pos:end="203:42"><name pos:start="203:29" pos:end="203:36">dead_tmp</name><argument_list pos:start="203:37" pos:end="203:42">(<argument pos:start="203:38" pos:end="203:41"><expr pos:start="203:38" pos:end="203:41"><name pos:start="203:38" pos:end="203:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="205:29" pos:end="205:34">break;</break>

                        <case pos:start="207:25" pos:end="207:31">case <expr pos:start="207:30" pos:end="207:30"><literal type="number" pos:start="207:30" pos:end="207:30">1</literal></expr>:</case>

                            <expr_stmt pos:start="209:29" pos:end="209:59"><expr pos:start="209:29" pos:end="209:58"><name pos:start="209:29" pos:end="209:32">tmp2</name> <operator pos:start="209:34" pos:end="209:34">=</operator> <call pos:start="209:36" pos:end="209:58"><name pos:start="209:36" pos:end="209:48">neon_load_reg</name><argument_list pos:start="209:49" pos:end="209:58">(<argument pos:start="209:50" pos:end="209:51"><expr pos:start="209:50" pos:end="209:51"><name pos:start="209:50" pos:end="209:51">rn</name></expr></argument>, <argument pos:start="209:54" pos:end="209:57"><expr pos:start="209:54" pos:end="209:57"><name pos:start="209:54" pos:end="209:57">pass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="211:29" pos:end="211:68"><expr pos:start="211:29" pos:end="211:67"><call pos:start="211:29" pos:end="211:67"><name pos:start="211:29" pos:end="211:35">gen_bfi</name><argument_list pos:start="211:36" pos:end="211:67">(<argument pos:start="211:37" pos:end="211:39"><expr pos:start="211:37" pos:end="211:39"><name pos:start="211:37" pos:end="211:39">tmp</name></expr></argument>, <argument pos:start="211:42" pos:end="211:45"><expr pos:start="211:42" pos:end="211:45"><name pos:start="211:42" pos:end="211:45">tmp2</name></expr></argument>, <argument pos:start="211:48" pos:end="211:50"><expr pos:start="211:48" pos:end="211:50"><name pos:start="211:48" pos:end="211:50">tmp</name></expr></argument>, <argument pos:start="211:53" pos:end="211:58"><expr pos:start="211:53" pos:end="211:58"><name pos:start="211:53" pos:end="211:58">offset</name></expr></argument>, <argument pos:start="211:61" pos:end="211:66"><expr pos:start="211:61" pos:end="211:66"><literal type="number" pos:start="211:61" pos:end="211:66">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="213:29" pos:end="213:43"><expr pos:start="213:29" pos:end="213:42"><call pos:start="213:29" pos:end="213:42"><name pos:start="213:29" pos:end="213:36">dead_tmp</name><argument_list pos:start="213:37" pos:end="213:42">(<argument pos:start="213:38" pos:end="213:41"><expr pos:start="213:38" pos:end="213:41"><name pos:start="213:38" pos:end="213:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="215:29" pos:end="215:34">break;</break>

                        <case pos:start="217:25" pos:end="217:31">case <expr pos:start="217:30" pos:end="217:30"><literal type="number" pos:start="217:30" pos:end="217:30">2</literal></expr>:</case>

                            <break pos:start="219:29" pos:end="219:34">break;</break>

                        </block_content>}</block></switch>

                        <expr_stmt pos:start="223:25" pos:end="223:54"><expr pos:start="223:25" pos:end="223:53"><call pos:start="223:25" pos:end="223:53"><name pos:start="223:25" pos:end="223:38">neon_store_reg</name><argument_list pos:start="223:39" pos:end="223:53">(<argument pos:start="223:40" pos:end="223:41"><expr pos:start="223:40" pos:end="223:41"><name pos:start="223:40" pos:end="223:41">rn</name></expr></argument>, <argument pos:start="223:44" pos:end="223:47"><expr pos:start="223:44" pos:end="223:47"><name pos:start="223:44" pos:end="223:47">pass</name></expr></argument>, <argument pos:start="223:50" pos:end="223:52"><expr pos:start="223:50" pos:end="223:52"><name pos:start="223:50" pos:end="223:52">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="229:15" pos:end="428:13">else <block pos:start="229:20" pos:end="428:13">{<block_content pos:start="231:17" pos:end="426:17"> <comment type="block" pos:start="229:22" pos:end="229:30">/* !dp */</comment>

                <if_stmt pos:start="231:17" pos:end="233:29"><if pos:start="231:17" pos:end="233:29">if <condition pos:start="231:20" pos:end="231:42">(<expr pos:start="231:21" pos:end="231:41"><operator pos:start="231:21" pos:end="231:21">(</operator><name pos:start="231:22" pos:end="231:25">insn</name> <operator pos:start="231:27" pos:end="231:27">&amp;</operator> <literal type="number" pos:start="231:29" pos:end="231:32">0x6f</literal><operator pos:start="231:33" pos:end="231:33">)</operator> <operator pos:start="231:35" pos:end="231:36">!=</operator> <literal type="number" pos:start="231:38" pos:end="231:41">0x00</literal></expr>)</condition><block type="pseudo" pos:start="233:21" pos:end="233:29"><block_content pos:start="233:21" pos:end="233:29">

                    <return pos:start="233:21" pos:end="233:29">return <expr pos:start="233:28" pos:end="233:28"><literal type="number" pos:start="233:28" pos:end="233:28">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:38"><expr pos:start="235:17" pos:end="235:37"><name pos:start="235:17" pos:end="235:18">rn</name> <operator pos:start="235:20" pos:end="235:20">=</operator> <call pos:start="235:22" pos:end="235:37"><name pos:start="235:22" pos:end="235:31">VFP_SREG_N</name><argument_list pos:start="235:32" pos:end="235:37">(<argument pos:start="235:33" pos:end="235:36"><expr pos:start="235:33" pos:end="235:36"><name pos:start="235:33" pos:end="235:36">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="237:17" pos:end="426:17"><if pos:start="237:17" pos:end="355:17">if <condition pos:start="237:20" pos:end="237:41">(<expr pos:start="237:21" pos:end="237:40"><name pos:start="237:21" pos:end="237:24">insn</name> <operator pos:start="237:26" pos:end="237:26">&amp;</operator> <name pos:start="237:28" pos:end="237:40">ARM_CP_RW_BIT</name></expr>)</condition> <block pos:start="237:43" pos:end="355:17">{<block_content pos:start="241:21" pos:end="353:21">

                    <comment type="block" pos:start="239:21" pos:end="239:34">/* vfp-&gt;arm */</comment>

                    <if_stmt pos:start="241:21" pos:end="339:21"><if pos:start="241:21" pos:end="333:21">if <condition pos:start="241:24" pos:end="241:41">(<expr pos:start="241:25" pos:end="241:40"><name pos:start="241:25" pos:end="241:28">insn</name> <operator pos:start="241:30" pos:end="241:30">&amp;</operator> <operator pos:start="241:32" pos:end="241:32">(</operator><literal type="number" pos:start="241:33" pos:end="241:33">1</literal> <operator pos:start="241:35" pos:end="241:36">&lt;&lt;</operator> <literal type="number" pos:start="241:38" pos:end="241:39">21</literal><operator pos:start="241:40" pos:end="241:40">)</operator></expr>)</condition> <block pos:start="241:43" pos:end="333:21">{<block_content pos:start="245:25" pos:end="331:25">

                        <comment type="block" pos:start="243:25" pos:end="243:45">/* system register */</comment>

                        <expr_stmt pos:start="245:25" pos:end="245:33"><expr pos:start="245:25" pos:end="245:32"><name pos:start="245:25" pos:end="245:26">rn</name> <operator pos:start="245:28" pos:end="245:30">&gt;&gt;=</operator> <literal type="number" pos:start="245:32" pos:end="245:32">1</literal></expr>;</expr_stmt>



                        <switch pos:start="249:25" pos:end="331:25">switch <condition pos:start="249:32" pos:end="249:35">(<expr pos:start="249:33" pos:end="249:34"><name pos:start="249:33" pos:end="249:34">rn</name></expr>)</condition> <block pos:start="249:37" pos:end="331:25">{<block_content pos:start="251:25" pos:end="329:37">

                        <case pos:start="251:25" pos:end="251:43">case <expr pos:start="251:30" pos:end="251:42"><name pos:start="251:30" pos:end="251:42">ARM_VFP_FPSID</name></expr>:</case>

                            <comment type="block" pos:start="253:29" pos:end="257:44">/* VFP2 allows access to FSID from userspace.

                               VFP3 restricts all id registers to privileged

                               accesses.  */</comment>

                            <if_stmt pos:start="259:29" pos:end="263:41"><if pos:start="259:29" pos:end="263:41">if <condition pos:start="259:32" pos:end="261:70">(<expr pos:start="259:33" pos:end="261:69"><call pos:start="259:33" pos:end="259:42"><name pos:start="259:33" pos:end="259:39">IS_USER</name><argument_list pos:start="259:40" pos:end="259:42">(<argument pos:start="259:41" pos:end="259:41"><expr pos:start="259:41" pos:end="259:41"><name pos:start="259:41" pos:end="259:41">s</name></expr></argument>)</argument_list></call>

                                <operator pos:start="261:33" pos:end="261:34">&amp;&amp;</operator> <call pos:start="261:36" pos:end="261:69"><name pos:start="261:36" pos:end="261:46">arm_feature</name><argument_list pos:start="261:47" pos:end="261:69">(<argument pos:start="261:48" pos:end="261:50"><expr pos:start="261:48" pos:end="261:50"><name pos:start="261:48" pos:end="261:50">env</name></expr></argument>, <argument pos:start="261:53" pos:end="261:68"><expr pos:start="261:53" pos:end="261:68"><name pos:start="261:53" pos:end="261:68">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="263:33" pos:end="263:41"><block_content pos:start="263:33" pos:end="263:41">

                                <return pos:start="263:33" pos:end="263:41">return <expr pos:start="263:40" pos:end="263:40"><literal type="number" pos:start="263:40" pos:end="263:40">1</literal></expr>;</return></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="265:29" pos:end="265:64"><expr pos:start="265:29" pos:end="265:63"><name pos:start="265:29" pos:end="265:31">tmp</name> <operator pos:start="265:33" pos:end="265:33">=</operator> <call pos:start="265:35" pos:end="265:63"><name pos:start="265:35" pos:end="265:48">load_cpu_field</name><argument_list pos:start="265:49" pos:end="265:63">(<argument pos:start="265:50" pos:end="265:62"><expr pos:start="265:50" pos:end="265:62"><name pos:start="265:50" pos:end="265:62"><name pos:start="265:50" pos:end="265:52">vfp</name><operator pos:start="265:53" pos:end="265:53">.</operator><name pos:start="265:54" pos:end="265:58">xregs</name><index pos:start="265:59" pos:end="265:62">[<expr pos:start="265:60" pos:end="265:61"><name pos:start="265:60" pos:end="265:61">rn</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="267:29" pos:end="267:34">break;</break>

                        <case pos:start="269:25" pos:end="269:43">case <expr pos:start="269:30" pos:end="269:42"><name pos:start="269:30" pos:end="269:42">ARM_VFP_FPEXC</name></expr>:</case>

                            <if_stmt pos:start="271:29" pos:end="273:41"><if pos:start="271:29" pos:end="273:41">if <condition pos:start="271:32" pos:end="271:43">(<expr pos:start="271:33" pos:end="271:42"><call pos:start="271:33" pos:end="271:42"><name pos:start="271:33" pos:end="271:39">IS_USER</name><argument_list pos:start="271:40" pos:end="271:42">(<argument pos:start="271:41" pos:end="271:41"><expr pos:start="271:41" pos:end="271:41"><name pos:start="271:41" pos:end="271:41">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="273:33" pos:end="273:41"><block_content pos:start="273:33" pos:end="273:41">

                                <return pos:start="273:33" pos:end="273:41">return <expr pos:start="273:40" pos:end="273:40"><literal type="number" pos:start="273:40" pos:end="273:40">1</literal></expr>;</return></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="275:29" pos:end="275:64"><expr pos:start="275:29" pos:end="275:63"><name pos:start="275:29" pos:end="275:31">tmp</name> <operator pos:start="275:33" pos:end="275:33">=</operator> <call pos:start="275:35" pos:end="275:63"><name pos:start="275:35" pos:end="275:48">load_cpu_field</name><argument_list pos:start="275:49" pos:end="275:63">(<argument pos:start="275:50" pos:end="275:62"><expr pos:start="275:50" pos:end="275:62"><name pos:start="275:50" pos:end="275:62"><name pos:start="275:50" pos:end="275:52">vfp</name><operator pos:start="275:53" pos:end="275:53">.</operator><name pos:start="275:54" pos:end="275:58">xregs</name><index pos:start="275:59" pos:end="275:62">[<expr pos:start="275:60" pos:end="275:61"><name pos:start="275:60" pos:end="275:61">rn</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="277:29" pos:end="277:34">break;</break>

                        <case pos:start="279:25" pos:end="279:44">case <expr pos:start="279:30" pos:end="279:43"><name pos:start="279:30" pos:end="279:43">ARM_VFP_FPINST</name></expr>:</case>

                        <case pos:start="281:25" pos:end="281:45">case <expr pos:start="281:30" pos:end="281:44"><name pos:start="281:30" pos:end="281:44">ARM_VFP_FPINST2</name></expr>:</case>

                            <comment type="block" pos:start="283:29" pos:end="283:55">/* Not present in VFP3.  */</comment>

                            <if_stmt pos:start="285:29" pos:end="289:41"><if pos:start="285:29" pos:end="289:41">if <condition pos:start="285:32" pos:end="287:70">(<expr pos:start="285:33" pos:end="287:69"><call pos:start="285:33" pos:end="285:42"><name pos:start="285:33" pos:end="285:39">IS_USER</name><argument_list pos:start="285:40" pos:end="285:42">(<argument pos:start="285:41" pos:end="285:41"><expr pos:start="285:41" pos:end="285:41"><name pos:start="285:41" pos:end="285:41">s</name></expr></argument>)</argument_list></call>

                                <operator pos:start="287:33" pos:end="287:34">||</operator> <call pos:start="287:36" pos:end="287:69"><name pos:start="287:36" pos:end="287:46">arm_feature</name><argument_list pos:start="287:47" pos:end="287:69">(<argument pos:start="287:48" pos:end="287:50"><expr pos:start="287:48" pos:end="287:50"><name pos:start="287:48" pos:end="287:50">env</name></expr></argument>, <argument pos:start="287:53" pos:end="287:68"><expr pos:start="287:53" pos:end="287:68"><name pos:start="287:53" pos:end="287:68">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="289:33" pos:end="289:41"><block_content pos:start="289:33" pos:end="289:41">

                                <return pos:start="289:33" pos:end="289:41">return <expr pos:start="289:40" pos:end="289:40"><literal type="number" pos:start="289:40" pos:end="289:40">1</literal></expr>;</return></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="291:29" pos:end="291:64"><expr pos:start="291:29" pos:end="291:63"><name pos:start="291:29" pos:end="291:31">tmp</name> <operator pos:start="291:33" pos:end="291:33">=</operator> <call pos:start="291:35" pos:end="291:63"><name pos:start="291:35" pos:end="291:48">load_cpu_field</name><argument_list pos:start="291:49" pos:end="291:63">(<argument pos:start="291:50" pos:end="291:62"><expr pos:start="291:50" pos:end="291:62"><name pos:start="291:50" pos:end="291:62"><name pos:start="291:50" pos:end="291:52">vfp</name><operator pos:start="291:53" pos:end="291:53">.</operator><name pos:start="291:54" pos:end="291:58">xregs</name><index pos:start="291:59" pos:end="291:62">[<expr pos:start="291:60" pos:end="291:61"><name pos:start="291:60" pos:end="291:61">rn</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="293:29" pos:end="293:34">break;</break>

                        <case pos:start="295:25" pos:end="295:43">case <expr pos:start="295:30" pos:end="295:42"><name pos:start="295:30" pos:end="295:42">ARM_VFP_FPSCR</name></expr>:</case>

                            <if_stmt pos:start="297:29" pos:end="309:29"><if pos:start="297:29" pos:end="303:29">if <condition pos:start="297:32" pos:end="297:41">(<expr pos:start="297:33" pos:end="297:40"><name pos:start="297:33" pos:end="297:34">rd</name> <operator pos:start="297:36" pos:end="297:37">==</operator> <literal type="number" pos:start="297:39" pos:end="297:40">15</literal></expr>)</condition> <block pos:start="297:43" pos:end="303:29">{<block_content pos:start="299:33" pos:end="301:71">

                                <expr_stmt pos:start="299:33" pos:end="299:79"><expr pos:start="299:33" pos:end="299:78"><name pos:start="299:33" pos:end="299:35">tmp</name> <operator pos:start="299:37" pos:end="299:37">=</operator> <call pos:start="299:39" pos:end="299:78"><name pos:start="299:39" pos:end="299:52">load_cpu_field</name><argument_list pos:start="299:53" pos:end="299:78">(<argument pos:start="299:54" pos:end="299:77"><expr pos:start="299:54" pos:end="299:77"><name pos:start="299:54" pos:end="299:77"><name pos:start="299:54" pos:end="299:56">vfp</name><operator pos:start="299:57" pos:end="299:57">.</operator><name pos:start="299:58" pos:end="299:62">xregs</name><index pos:start="299:63" pos:end="299:77">[<expr pos:start="299:64" pos:end="299:76"><name pos:start="299:64" pos:end="299:76">ARM_VFP_FPSCR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="301:33" pos:end="301:71"><expr pos:start="301:33" pos:end="301:70"><call pos:start="301:33" pos:end="301:70"><name pos:start="301:33" pos:end="301:48">tcg_gen_andi_i32</name><argument_list pos:start="301:49" pos:end="301:70">(<argument pos:start="301:50" pos:end="301:52"><expr pos:start="301:50" pos:end="301:52"><name pos:start="301:50" pos:end="301:52">tmp</name></expr></argument>, <argument pos:start="301:55" pos:end="301:57"><expr pos:start="301:55" pos:end="301:57"><name pos:start="301:55" pos:end="301:57">tmp</name></expr></argument>, <argument pos:start="301:60" pos:end="301:69"><expr pos:start="301:60" pos:end="301:69"><literal type="number" pos:start="301:60" pos:end="301:69">0xf0000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="303:31" pos:end="309:29">else <block pos:start="303:36" pos:end="309:29">{<block_content pos:start="305:33" pos:end="307:71">

                                <expr_stmt pos:start="305:33" pos:end="305:48"><expr pos:start="305:33" pos:end="305:47"><name pos:start="305:33" pos:end="305:35">tmp</name> <operator pos:start="305:37" pos:end="305:37">=</operator> <call pos:start="305:39" pos:end="305:47"><name pos:start="305:39" pos:end="305:45">new_tmp</name><argument_list pos:start="305:46" pos:end="305:47">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="307:33" pos:end="307:71"><expr pos:start="307:33" pos:end="307:70"><call pos:start="307:33" pos:end="307:70"><name pos:start="307:33" pos:end="307:56">gen_helper_vfp_get_fpscr</name><argument_list pos:start="307:57" pos:end="307:70">(<argument pos:start="307:58" pos:end="307:60"><expr pos:start="307:58" pos:end="307:60"><name pos:start="307:58" pos:end="307:60">tmp</name></expr></argument>, <argument pos:start="307:63" pos:end="307:69"><expr pos:start="307:63" pos:end="307:69"><name pos:start="307:63" pos:end="307:69">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <break pos:start="311:29" pos:end="311:34">break;</break>

                        <case pos:start="313:25" pos:end="313:43">case <expr pos:start="313:30" pos:end="313:42"><name pos:start="313:30" pos:end="313:42">ARM_VFP_MVFR0</name></expr>:</case>

                        <case pos:start="315:25" pos:end="315:43">case <expr pos:start="315:30" pos:end="315:42"><name pos:start="315:30" pos:end="315:42">ARM_VFP_MVFR1</name></expr>:</case>

                            <if_stmt pos:start="317:29" pos:end="321:41"><if pos:start="317:29" pos:end="321:41">if <condition pos:start="317:32" pos:end="319:71">(<expr pos:start="317:33" pos:end="319:70"><call pos:start="317:33" pos:end="317:42"><name pos:start="317:33" pos:end="317:39">IS_USER</name><argument_list pos:start="317:40" pos:end="317:42">(<argument pos:start="317:41" pos:end="317:41"><expr pos:start="317:41" pos:end="317:41"><name pos:start="317:41" pos:end="317:41">s</name></expr></argument>)</argument_list></call>

                                <operator pos:start="319:33" pos:end="319:34">||</operator> <operator pos:start="319:36" pos:end="319:36">!</operator><call pos:start="319:37" pos:end="319:70"><name pos:start="319:37" pos:end="319:47">arm_feature</name><argument_list pos:start="319:48" pos:end="319:70">(<argument pos:start="319:49" pos:end="319:51"><expr pos:start="319:49" pos:end="319:51"><name pos:start="319:49" pos:end="319:51">env</name></expr></argument>, <argument pos:start="319:54" pos:end="319:69"><expr pos:start="319:54" pos:end="319:69"><name pos:start="319:54" pos:end="319:69">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="321:33" pos:end="321:41"><block_content pos:start="321:33" pos:end="321:41">

                                <return pos:start="321:33" pos:end="321:41">return <expr pos:start="321:40" pos:end="321:40"><literal type="number" pos:start="321:40" pos:end="321:40">1</literal></expr>;</return></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="323:29" pos:end="323:64"><expr pos:start="323:29" pos:end="323:63"><name pos:start="323:29" pos:end="323:31">tmp</name> <operator pos:start="323:33" pos:end="323:33">=</operator> <call pos:start="323:35" pos:end="323:63"><name pos:start="323:35" pos:end="323:48">load_cpu_field</name><argument_list pos:start="323:49" pos:end="323:63">(<argument pos:start="323:50" pos:end="323:62"><expr pos:start="323:50" pos:end="323:62"><name pos:start="323:50" pos:end="323:62"><name pos:start="323:50" pos:end="323:52">vfp</name><operator pos:start="323:53" pos:end="323:53">.</operator><name pos:start="323:54" pos:end="323:58">xregs</name><index pos:start="323:59" pos:end="323:62">[<expr pos:start="323:60" pos:end="323:61"><name pos:start="323:60" pos:end="323:61">rn</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="325:29" pos:end="325:34">break;</break>

                        <default pos:start="327:25" pos:end="327:32">default:</default>

                            <return pos:start="329:29" pos:end="329:37">return <expr pos:start="329:36" pos:end="329:36"><literal type="number" pos:start="329:36" pos:end="329:36">1</literal></expr>;</return>

                        </block_content>}</block></switch>

                    </block_content>}</block></if> <else pos:start="333:23" pos:end="339:21">else <block pos:start="333:28" pos:end="339:21">{<block_content pos:start="335:25" pos:end="337:44">

                        <expr_stmt pos:start="335:25" pos:end="335:47"><expr pos:start="335:25" pos:end="335:46"><call pos:start="335:25" pos:end="335:46"><name pos:start="335:25" pos:end="335:39">gen_mov_F0_vreg</name><argument_list pos:start="335:40" pos:end="335:46">(<argument pos:start="335:41" pos:end="335:41"><expr pos:start="335:41" pos:end="335:41"><literal type="number" pos:start="335:41" pos:end="335:41">0</literal></expr></argument>, <argument pos:start="335:44" pos:end="335:45"><expr pos:start="335:44" pos:end="335:45"><name pos:start="335:44" pos:end="335:45">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="337:25" pos:end="337:44"><expr pos:start="337:25" pos:end="337:43"><name pos:start="337:25" pos:end="337:27">tmp</name> <operator pos:start="337:29" pos:end="337:29">=</operator> <call pos:start="337:31" pos:end="337:43"><name pos:start="337:31" pos:end="337:41">gen_vfp_mrs</name><argument_list pos:start="337:42" pos:end="337:43">()</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="341:21" pos:end="353:21"><if pos:start="341:21" pos:end="349:21">if <condition pos:start="341:24" pos:end="341:33">(<expr pos:start="341:25" pos:end="341:32"><name pos:start="341:25" pos:end="341:26">rd</name> <operator pos:start="341:28" pos:end="341:29">==</operator> <literal type="number" pos:start="341:31" pos:end="341:32">15</literal></expr>)</condition> <block pos:start="341:35" pos:end="349:21">{<block_content pos:start="345:25" pos:end="347:38">

                        <comment type="block" pos:start="343:25" pos:end="343:63">/* Set the 4 flag bits in the CPSR.  */</comment>

                        <expr_stmt pos:start="345:25" pos:end="345:42"><expr pos:start="345:25" pos:end="345:41"><call pos:start="345:25" pos:end="345:41"><name pos:start="345:25" pos:end="345:36">gen_set_nzcv</name><argument_list pos:start="345:37" pos:end="345:41">(<argument pos:start="345:38" pos:end="345:40"><expr pos:start="345:38" pos:end="345:40"><name pos:start="345:38" pos:end="345:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="347:25" pos:end="347:38"><expr pos:start="347:25" pos:end="347:37"><call pos:start="347:25" pos:end="347:37"><name pos:start="347:25" pos:end="347:32">dead_tmp</name><argument_list pos:start="347:33" pos:end="347:37">(<argument pos:start="347:34" pos:end="347:36"><expr pos:start="347:34" pos:end="347:36"><name pos:start="347:34" pos:end="347:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="349:23" pos:end="353:21">else <block pos:start="349:28" pos:end="353:21">{<block_content pos:start="351:25" pos:end="351:46">

                        <expr_stmt pos:start="351:25" pos:end="351:46"><expr pos:start="351:25" pos:end="351:45"><call pos:start="351:25" pos:end="351:45"><name pos:start="351:25" pos:end="351:33">store_reg</name><argument_list pos:start="351:34" pos:end="351:45">(<argument pos:start="351:35" pos:end="351:35"><expr pos:start="351:35" pos:end="351:35"><name pos:start="351:35" pos:end="351:35">s</name></expr></argument>, <argument pos:start="351:38" pos:end="351:39"><expr pos:start="351:38" pos:end="351:39"><name pos:start="351:38" pos:end="351:39">rd</name></expr></argument>, <argument pos:start="351:42" pos:end="351:44"><expr pos:start="351:42" pos:end="351:44"><name pos:start="351:42" pos:end="351:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="355:19" pos:end="426:17">else <block pos:start="355:24" pos:end="426:17">{<block_content pos:start="359:21" pos:end="424:21">

                    <comment type="block" pos:start="357:21" pos:end="357:34">/* arm-&gt;vfp */</comment>

                    <expr_stmt pos:start="359:21" pos:end="359:42"><expr pos:start="359:21" pos:end="359:41"><name pos:start="359:21" pos:end="359:23">tmp</name> <operator pos:start="359:25" pos:end="359:25">=</operator> <call pos:start="359:27" pos:end="359:41"><name pos:start="359:27" pos:end="359:34">load_reg</name><argument_list pos:start="359:35" pos:end="359:41">(<argument pos:start="359:36" pos:end="359:36"><expr pos:start="359:36" pos:end="359:36"><name pos:start="359:36" pos:end="359:36">s</name></expr></argument>, <argument pos:start="359:39" pos:end="359:40"><expr pos:start="359:39" pos:end="359:40"><name pos:start="359:39" pos:end="359:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="361:21" pos:end="424:21"><if pos:start="361:21" pos:end="418:21">if <condition pos:start="361:24" pos:end="361:41">(<expr pos:start="361:25" pos:end="361:40"><name pos:start="361:25" pos:end="361:28">insn</name> <operator pos:start="361:30" pos:end="361:30">&amp;</operator> <operator pos:start="361:32" pos:end="361:32">(</operator><literal type="number" pos:start="361:33" pos:end="361:33">1</literal> <operator pos:start="361:35" pos:end="361:36">&lt;&lt;</operator> <literal type="number" pos:start="361:38" pos:end="361:39">21</literal><operator pos:start="361:40" pos:end="361:40">)</operator></expr>)</condition> <block pos:start="361:43" pos:end="418:21">{<block_content pos:start="363:25" pos:end="416:25">

                        <expr_stmt pos:start="363:25" pos:end="363:33"><expr pos:start="363:25" pos:end="363:32"><name pos:start="363:25" pos:end="363:26">rn</name> <operator pos:start="363:28" pos:end="363:30">&gt;&gt;=</operator> <literal type="number" pos:start="363:32" pos:end="363:32">1</literal></expr>;</expr_stmt>

                        <comment type="block" pos:start="365:25" pos:end="365:45">/* system register */</comment>

                        <switch pos:start="367:25" pos:end="416:25">switch <condition pos:start="367:32" pos:end="367:35">(<expr pos:start="367:33" pos:end="367:34"><name pos:start="367:33" pos:end="367:34">rn</name></expr>)</condition> <block pos:start="367:37" pos:end="416:25">{<block_content pos:start="369:25" pos:end="414:37">

                        <case pos:start="369:25" pos:end="369:43">case <expr pos:start="369:30" pos:end="369:42"><name pos:start="369:30" pos:end="369:42">ARM_VFP_FPSID</name></expr>:</case>

                        <case pos:start="371:25" pos:end="371:43">case <expr pos:start="371:30" pos:end="371:42"><name pos:start="371:30" pos:end="371:42">ARM_VFP_MVFR0</name></expr>:</case>

                        <case pos:start="373:25" pos:end="373:43">case <expr pos:start="373:30" pos:end="373:42"><name pos:start="373:30" pos:end="373:42">ARM_VFP_MVFR1</name></expr>:</case>

                            <comment type="block" pos:start="375:29" pos:end="375:54">/* Writes are ignored.  */</comment>

                            <break pos:start="377:29" pos:end="377:34">break;</break>

                        <case pos:start="379:25" pos:end="379:43">case <expr pos:start="379:30" pos:end="379:42"><name pos:start="379:30" pos:end="379:42">ARM_VFP_FPSCR</name></expr>:</case>

                            <expr_stmt pos:start="381:29" pos:end="381:67"><expr pos:start="381:29" pos:end="381:66"><call pos:start="381:29" pos:end="381:66"><name pos:start="381:29" pos:end="381:52">gen_helper_vfp_set_fpscr</name><argument_list pos:start="381:53" pos:end="381:66">(<argument pos:start="381:54" pos:end="381:60"><expr pos:start="381:54" pos:end="381:60"><name pos:start="381:54" pos:end="381:60">cpu_env</name></expr></argument>, <argument pos:start="381:63" pos:end="381:65"><expr pos:start="381:63" pos:end="381:65"><name pos:start="381:63" pos:end="381:65">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="383:29" pos:end="383:42"><expr pos:start="383:29" pos:end="383:41"><call pos:start="383:29" pos:end="383:41"><name pos:start="383:29" pos:end="383:36">dead_tmp</name><argument_list pos:start="383:37" pos:end="383:41">(<argument pos:start="383:38" pos:end="383:40"><expr pos:start="383:38" pos:end="383:40"><name pos:start="383:38" pos:end="383:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="385:29" pos:end="385:45"><expr pos:start="385:29" pos:end="385:44"><call pos:start="385:29" pos:end="385:44"><name pos:start="385:29" pos:end="385:41">gen_lookup_tb</name><argument_list pos:start="385:42" pos:end="385:44">(<argument pos:start="385:43" pos:end="385:43"><expr pos:start="385:43" pos:end="385:43"><name pos:start="385:43" pos:end="385:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="387:29" pos:end="387:34">break;</break>

                        <case pos:start="389:25" pos:end="389:43">case <expr pos:start="389:30" pos:end="389:42"><name pos:start="389:30" pos:end="389:42">ARM_VFP_FPEXC</name></expr>:</case>

                            <if_stmt pos:start="391:29" pos:end="393:41"><if pos:start="391:29" pos:end="393:41">if <condition pos:start="391:32" pos:end="391:43">(<expr pos:start="391:33" pos:end="391:42"><call pos:start="391:33" pos:end="391:42"><name pos:start="391:33" pos:end="391:39">IS_USER</name><argument_list pos:start="391:40" pos:end="391:42">(<argument pos:start="391:41" pos:end="391:41"><expr pos:start="391:41" pos:end="391:41"><name pos:start="391:41" pos:end="391:41">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="393:33" pos:end="393:41"><block_content pos:start="393:33" pos:end="393:41">

                                <return pos:start="393:33" pos:end="393:41">return <expr pos:start="393:40" pos:end="393:40"><literal type="number" pos:start="393:40" pos:end="393:40">1</literal></expr>;</return></block_content></block></if></if_stmt>




                            <expr_stmt pos:start="398:29" pos:end="398:64"><expr pos:start="398:29" pos:end="398:63"><call pos:start="398:29" pos:end="398:63"><name pos:start="398:29" pos:end="398:43">store_cpu_field</name><argument_list pos:start="398:44" pos:end="398:63">(<argument pos:start="398:45" pos:end="398:47"><expr pos:start="398:45" pos:end="398:47"><name pos:start="398:45" pos:end="398:47">tmp</name></expr></argument>, <argument pos:start="398:50" pos:end="398:62"><expr pos:start="398:50" pos:end="398:62"><name pos:start="398:50" pos:end="398:62"><name pos:start="398:50" pos:end="398:52">vfp</name><operator pos:start="398:53" pos:end="398:53">.</operator><name pos:start="398:54" pos:end="398:58">xregs</name><index pos:start="398:59" pos:end="398:62">[<expr pos:start="398:60" pos:end="398:61"><name pos:start="398:60" pos:end="398:61">rn</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="400:29" pos:end="400:45"><expr pos:start="400:29" pos:end="400:44"><call pos:start="400:29" pos:end="400:44"><name pos:start="400:29" pos:end="400:41">gen_lookup_tb</name><argument_list pos:start="400:42" pos:end="400:44">(<argument pos:start="400:43" pos:end="400:43"><expr pos:start="400:43" pos:end="400:43"><name pos:start="400:43" pos:end="400:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="402:29" pos:end="402:34">break;</break>

                        <case pos:start="404:25" pos:end="404:44">case <expr pos:start="404:30" pos:end="404:43"><name pos:start="404:30" pos:end="404:43">ARM_VFP_FPINST</name></expr>:</case>

                        <case pos:start="406:25" pos:end="406:45">case <expr pos:start="406:30" pos:end="406:44"><name pos:start="406:30" pos:end="406:44">ARM_VFP_FPINST2</name></expr>:</case>

                            <expr_stmt pos:start="408:29" pos:end="408:64"><expr pos:start="408:29" pos:end="408:63"><call pos:start="408:29" pos:end="408:63"><name pos:start="408:29" pos:end="408:43">store_cpu_field</name><argument_list pos:start="408:44" pos:end="408:63">(<argument pos:start="408:45" pos:end="408:47"><expr pos:start="408:45" pos:end="408:47"><name pos:start="408:45" pos:end="408:47">tmp</name></expr></argument>, <argument pos:start="408:50" pos:end="408:62"><expr pos:start="408:50" pos:end="408:62"><name pos:start="408:50" pos:end="408:62"><name pos:start="408:50" pos:end="408:52">vfp</name><operator pos:start="408:53" pos:end="408:53">.</operator><name pos:start="408:54" pos:end="408:58">xregs</name><index pos:start="408:59" pos:end="408:62">[<expr pos:start="408:60" pos:end="408:61"><name pos:start="408:60" pos:end="408:61">rn</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="410:29" pos:end="410:34">break;</break>

                        <default pos:start="412:25" pos:end="412:32">default:</default>

                            <return pos:start="414:29" pos:end="414:37">return <expr pos:start="414:36" pos:end="414:36"><literal type="number" pos:start="414:36" pos:end="414:36">1</literal></expr>;</return>

                        </block_content>}</block></switch>

                    </block_content>}</block></if> <else pos:start="418:23" pos:end="424:21">else <block pos:start="418:28" pos:end="424:21">{<block_content pos:start="420:25" pos:end="422:47">

                        <expr_stmt pos:start="420:25" pos:end="420:41"><expr pos:start="420:25" pos:end="420:40"><call pos:start="420:25" pos:end="420:40"><name pos:start="420:25" pos:end="420:35">gen_vfp_msr</name><argument_list pos:start="420:36" pos:end="420:40">(<argument pos:start="420:37" pos:end="420:39"><expr pos:start="420:37" pos:end="420:39"><name pos:start="420:37" pos:end="420:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="422:25" pos:end="422:47"><expr pos:start="422:25" pos:end="422:46"><call pos:start="422:25" pos:end="422:46"><name pos:start="422:25" pos:end="422:39">gen_mov_vreg_F0</name><argument_list pos:start="422:40" pos:end="422:46">(<argument pos:start="422:41" pos:end="422:41"><expr pos:start="422:41" pos:end="422:41"><literal type="number" pos:start="422:41" pos:end="422:41">0</literal></expr></argument>, <argument pos:start="422:44" pos:end="422:45"><expr pos:start="422:44" pos:end="422:45"><name pos:start="422:44" pos:end="422:45">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="430:11" pos:end="1080:9">else <block pos:start="430:16" pos:end="1080:9">{<block_content pos:start="436:13" pos:end="1078:13">

            <comment type="block" pos:start="432:13" pos:end="432:33">/* data processing */</comment>

            <comment type="block" pos:start="434:13" pos:end="434:58">/* The opcode is in bits 23, 21, 20 and 6.  */</comment>

            <expr_stmt pos:start="436:13" pos:end="436:77"><expr pos:start="436:13" pos:end="436:76"><name pos:start="436:13" pos:end="436:14">op</name> <operator pos:start="436:16" pos:end="436:16">=</operator> <operator pos:start="436:18" pos:end="436:18">(</operator><operator pos:start="436:19" pos:end="436:19">(</operator><name pos:start="436:20" pos:end="436:23">insn</name> <operator pos:start="436:25" pos:end="436:26">&gt;&gt;</operator> <literal type="number" pos:start="436:28" pos:end="436:29">20</literal><operator pos:start="436:30" pos:end="436:30">)</operator> <operator pos:start="436:32" pos:end="436:32">&amp;</operator> <literal type="number" pos:start="436:34" pos:end="436:34">8</literal><operator pos:start="436:35" pos:end="436:35">)</operator> <operator pos:start="436:37" pos:end="436:37">|</operator> <operator pos:start="436:39" pos:end="436:39">(</operator><operator pos:start="436:40" pos:end="436:40">(</operator><name pos:start="436:41" pos:end="436:44">insn</name> <operator pos:start="436:46" pos:end="436:47">&gt;&gt;</operator> <literal type="number" pos:start="436:49" pos:end="436:50">19</literal><operator pos:start="436:51" pos:end="436:51">)</operator> <operator pos:start="436:53" pos:end="436:53">&amp;</operator> <literal type="number" pos:start="436:55" pos:end="436:55">6</literal><operator pos:start="436:56" pos:end="436:56">)</operator> <operator pos:start="436:58" pos:end="436:58">|</operator> <operator pos:start="436:60" pos:end="436:60">(</operator><operator pos:start="436:61" pos:end="436:61">(</operator><name pos:start="436:62" pos:end="436:65">insn</name> <operator pos:start="436:67" pos:end="436:68">&gt;&gt;</operator> <literal type="number" pos:start="436:70" pos:end="436:70">6</literal><operator pos:start="436:71" pos:end="436:71">)</operator> <operator pos:start="436:73" pos:end="436:73">&amp;</operator> <literal type="number" pos:start="436:75" pos:end="436:75">1</literal><operator pos:start="436:76" pos:end="436:76">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="438:13" pos:end="500:13"><if pos:start="438:13" pos:end="482:13">if <condition pos:start="438:16" pos:end="438:19">(<expr pos:start="438:17" pos:end="438:18"><name pos:start="438:17" pos:end="438:18">dp</name></expr>)</condition> <block pos:start="438:21" pos:end="482:13">{<block_content pos:start="440:17" pos:end="480:17">

                <if_stmt pos:start="440:17" pos:end="452:17"><if pos:start="440:17" pos:end="446:17">if <condition pos:start="440:20" pos:end="440:29">(<expr pos:start="440:21" pos:end="440:28"><name pos:start="440:21" pos:end="440:22">op</name> <operator pos:start="440:24" pos:end="440:25">==</operator> <literal type="number" pos:start="440:27" pos:end="440:28">15</literal></expr>)</condition> <block pos:start="440:31" pos:end="446:17">{<block_content pos:start="444:21" pos:end="444:67">

                    <comment type="block" pos:start="442:21" pos:end="442:38">/* rn is opcode */</comment>

                    <expr_stmt pos:start="444:21" pos:end="444:67"><expr pos:start="444:21" pos:end="444:66"><name pos:start="444:21" pos:end="444:22">rn</name> <operator pos:start="444:24" pos:end="444:24">=</operator> <operator pos:start="444:26" pos:end="444:26">(</operator><operator pos:start="444:27" pos:end="444:27">(</operator><name pos:start="444:28" pos:end="444:31">insn</name> <operator pos:start="444:33" pos:end="444:34">&gt;&gt;</operator> <literal type="number" pos:start="444:36" pos:end="444:37">15</literal><operator pos:start="444:38" pos:end="444:38">)</operator> <operator pos:start="444:40" pos:end="444:40">&amp;</operator> <literal type="number" pos:start="444:42" pos:end="444:45">0x1e</literal><operator pos:start="444:46" pos:end="444:46">)</operator> <operator pos:start="444:48" pos:end="444:48">|</operator> <operator pos:start="444:50" pos:end="444:50">(</operator><operator pos:start="444:51" pos:end="444:51">(</operator><name pos:start="444:52" pos:end="444:55">insn</name> <operator pos:start="444:57" pos:end="444:58">&gt;&gt;</operator> <literal type="number" pos:start="444:60" pos:end="444:60">7</literal><operator pos:start="444:61" pos:end="444:61">)</operator> <operator pos:start="444:63" pos:end="444:63">&amp;</operator> <literal type="number" pos:start="444:65" pos:end="444:65">1</literal><operator pos:start="444:66" pos:end="444:66">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="446:19" pos:end="452:17">else <block pos:start="446:24" pos:end="452:17">{<block_content pos:start="450:21" pos:end="450:41">

                    <comment type="block" pos:start="448:21" pos:end="448:47">/* rn is register number */</comment>

                    <expr_stmt pos:start="450:21" pos:end="450:41"><expr pos:start="450:21" pos:end="450:40"><call pos:start="450:21" pos:end="450:40"><name pos:start="450:21" pos:end="450:30">VFP_DREG_N</name><argument_list pos:start="450:31" pos:end="450:40">(<argument pos:start="450:32" pos:end="450:33"><expr pos:start="450:32" pos:end="450:33"><name pos:start="450:32" pos:end="450:33">rn</name></expr></argument>, <argument pos:start="450:36" pos:end="450:39"><expr pos:start="450:36" pos:end="450:39"><name pos:start="450:36" pos:end="450:39">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="456:17" pos:end="466:17"><if pos:start="456:17" pos:end="462:17">if <condition pos:start="456:20" pos:end="456:54">(<expr pos:start="456:21" pos:end="456:53"><name pos:start="456:21" pos:end="456:22">op</name> <operator pos:start="456:24" pos:end="456:25">==</operator> <literal type="number" pos:start="456:27" pos:end="456:28">15</literal> <operator pos:start="456:30" pos:end="456:31">&amp;&amp;</operator> <operator pos:start="456:33" pos:end="456:33">(</operator><name pos:start="456:34" pos:end="456:35">rn</name> <operator pos:start="456:37" pos:end="456:38">==</operator> <literal type="number" pos:start="456:40" pos:end="456:41">15</literal> <operator pos:start="456:43" pos:end="456:44">||</operator> <name pos:start="456:46" pos:end="456:47">rn</name> <operator pos:start="456:49" pos:end="456:49">&gt;</operator> <literal type="number" pos:start="456:51" pos:end="456:52">17</literal><operator pos:start="456:53" pos:end="456:53">)</operator></expr>)</condition> <block pos:start="456:56" pos:end="462:17">{<block_content pos:start="460:21" pos:end="460:42">

                    <comment type="block" pos:start="458:21" pos:end="458:67">/* Integer or single precision destination.  */</comment>

                    <expr_stmt pos:start="460:21" pos:end="460:42"><expr pos:start="460:21" pos:end="460:41"><name pos:start="460:21" pos:end="460:22">rd</name> <operator pos:start="460:24" pos:end="460:24">=</operator> <call pos:start="460:26" pos:end="460:41"><name pos:start="460:26" pos:end="460:35">VFP_SREG_D</name><argument_list pos:start="460:36" pos:end="460:41">(<argument pos:start="460:37" pos:end="460:40"><expr pos:start="460:37" pos:end="460:40"><name pos:start="460:37" pos:end="460:40">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="462:19" pos:end="466:17">else <block pos:start="462:24" pos:end="466:17">{<block_content pos:start="464:21" pos:end="464:41">

                    <expr_stmt pos:start="464:21" pos:end="464:41"><expr pos:start="464:21" pos:end="464:40"><call pos:start="464:21" pos:end="464:40"><name pos:start="464:21" pos:end="464:30">VFP_DREG_D</name><argument_list pos:start="464:31" pos:end="464:40">(<argument pos:start="464:32" pos:end="464:33"><expr pos:start="464:32" pos:end="464:33"><name pos:start="464:32" pos:end="464:33">rd</name></expr></argument>, <argument pos:start="464:36" pos:end="464:39"><expr pos:start="464:36" pos:end="464:39"><name pos:start="464:36" pos:end="464:39">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="470:17" pos:end="480:17"><if pos:start="470:17" pos:end="476:17">if <condition pos:start="470:20" pos:end="470:55">(<expr pos:start="470:21" pos:end="470:54"><name pos:start="470:21" pos:end="470:22">op</name> <operator pos:start="470:24" pos:end="470:25">==</operator> <literal type="number" pos:start="470:27" pos:end="470:28">15</literal> <operator pos:start="470:30" pos:end="470:31">&amp;&amp;</operator> <operator pos:start="470:33" pos:end="470:33">(</operator><name pos:start="470:34" pos:end="470:35">rn</name> <operator pos:start="470:37" pos:end="470:38">==</operator> <literal type="number" pos:start="470:40" pos:end="470:41">16</literal> <operator pos:start="470:43" pos:end="470:44">||</operator> <name pos:start="470:46" pos:end="470:47">rn</name> <operator pos:start="470:49" pos:end="470:50">==</operator> <literal type="number" pos:start="470:52" pos:end="470:53">17</literal><operator pos:start="470:54" pos:end="470:54">)</operator></expr>)</condition> <block pos:start="470:57" pos:end="476:17">{<block_content pos:start="474:21" pos:end="474:66">

                    <comment type="block" pos:start="472:21" pos:end="472:42">/* Integer source.  */</comment>

                    <expr_stmt pos:start="474:21" pos:end="474:66"><expr pos:start="474:21" pos:end="474:65"><name pos:start="474:21" pos:end="474:22">rm</name> <operator pos:start="474:24" pos:end="474:24">=</operator> <operator pos:start="474:26" pos:end="474:26">(</operator><operator pos:start="474:27" pos:end="474:27">(</operator><name pos:start="474:28" pos:end="474:31">insn</name> <operator pos:start="474:33" pos:end="474:34">&lt;&lt;</operator> <literal type="number" pos:start="474:36" pos:end="474:36">1</literal><operator pos:start="474:37" pos:end="474:37">)</operator> <operator pos:start="474:39" pos:end="474:39">&amp;</operator> <literal type="number" pos:start="474:41" pos:end="474:44">0x1e</literal><operator pos:start="474:45" pos:end="474:45">)</operator> <operator pos:start="474:47" pos:end="474:47">|</operator> <operator pos:start="474:49" pos:end="474:49">(</operator><operator pos:start="474:50" pos:end="474:50">(</operator><name pos:start="474:51" pos:end="474:54">insn</name> <operator pos:start="474:56" pos:end="474:57">&gt;&gt;</operator> <literal type="number" pos:start="474:59" pos:end="474:59">5</literal><operator pos:start="474:60" pos:end="474:60">)</operator> <operator pos:start="474:62" pos:end="474:62">&amp;</operator> <literal type="number" pos:start="474:64" pos:end="474:64">1</literal><operator pos:start="474:65" pos:end="474:65">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="476:19" pos:end="480:17">else <block pos:start="476:24" pos:end="480:17">{<block_content pos:start="478:21" pos:end="478:41">

                    <expr_stmt pos:start="478:21" pos:end="478:41"><expr pos:start="478:21" pos:end="478:40"><call pos:start="478:21" pos:end="478:40"><name pos:start="478:21" pos:end="478:30">VFP_DREG_M</name><argument_list pos:start="478:31" pos:end="478:40">(<argument pos:start="478:32" pos:end="478:33"><expr pos:start="478:32" pos:end="478:33"><name pos:start="478:32" pos:end="478:33">rm</name></expr></argument>, <argument pos:start="478:36" pos:end="478:39"><expr pos:start="478:36" pos:end="478:39"><name pos:start="478:36" pos:end="478:39">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="482:15" pos:end="500:13">else <block pos:start="482:20" pos:end="500:13">{<block_content pos:start="484:17" pos:end="498:38">

                <expr_stmt pos:start="484:17" pos:end="484:38"><expr pos:start="484:17" pos:end="484:37"><name pos:start="484:17" pos:end="484:18">rn</name> <operator pos:start="484:20" pos:end="484:20">=</operator> <call pos:start="484:22" pos:end="484:37"><name pos:start="484:22" pos:end="484:31">VFP_SREG_N</name><argument_list pos:start="484:32" pos:end="484:37">(<argument pos:start="484:33" pos:end="484:36"><expr pos:start="484:33" pos:end="484:36"><name pos:start="484:33" pos:end="484:36">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="486:17" pos:end="496:17"><if pos:start="486:17" pos:end="492:17">if <condition pos:start="486:20" pos:end="486:41">(<expr pos:start="486:21" pos:end="486:40"><name pos:start="486:21" pos:end="486:22">op</name> <operator pos:start="486:24" pos:end="486:25">==</operator> <literal type="number" pos:start="486:27" pos:end="486:28">15</literal> <operator pos:start="486:30" pos:end="486:31">&amp;&amp;</operator> <name pos:start="486:33" pos:end="486:34">rn</name> <operator pos:start="486:36" pos:end="486:37">==</operator> <literal type="number" pos:start="486:39" pos:end="486:40">15</literal></expr>)</condition> <block pos:start="486:43" pos:end="492:17">{<block_content pos:start="490:21" pos:end="490:41">

                    <comment type="block" pos:start="488:21" pos:end="488:56">/* Double precision destination.  */</comment>

                    <expr_stmt pos:start="490:21" pos:end="490:41"><expr pos:start="490:21" pos:end="490:40"><call pos:start="490:21" pos:end="490:40"><name pos:start="490:21" pos:end="490:30">VFP_DREG_D</name><argument_list pos:start="490:31" pos:end="490:40">(<argument pos:start="490:32" pos:end="490:33"><expr pos:start="490:32" pos:end="490:33"><name pos:start="490:32" pos:end="490:33">rd</name></expr></argument>, <argument pos:start="490:36" pos:end="490:39"><expr pos:start="490:36" pos:end="490:39"><name pos:start="490:36" pos:end="490:39">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="492:19" pos:end="496:17">else <block pos:start="492:24" pos:end="496:17">{<block_content pos:start="494:21" pos:end="494:42">

                    <expr_stmt pos:start="494:21" pos:end="494:42"><expr pos:start="494:21" pos:end="494:41"><name pos:start="494:21" pos:end="494:22">rd</name> <operator pos:start="494:24" pos:end="494:24">=</operator> <call pos:start="494:26" pos:end="494:41"><name pos:start="494:26" pos:end="494:35">VFP_SREG_D</name><argument_list pos:start="494:36" pos:end="494:41">(<argument pos:start="494:37" pos:end="494:40"><expr pos:start="494:37" pos:end="494:40"><name pos:start="494:37" pos:end="494:40">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="498:17" pos:end="498:38"><expr pos:start="498:17" pos:end="498:37"><name pos:start="498:17" pos:end="498:18">rm</name> <operator pos:start="498:20" pos:end="498:20">=</operator> <call pos:start="498:22" pos:end="498:37"><name pos:start="498:22" pos:end="498:31">VFP_SREG_M</name><argument_list pos:start="498:32" pos:end="498:37">(<argument pos:start="498:33" pos:end="498:36"><expr pos:start="498:33" pos:end="498:36"><name pos:start="498:33" pos:end="498:36">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="504:13" pos:end="504:38"><expr pos:start="504:13" pos:end="504:37"><name pos:start="504:13" pos:end="504:18">veclen</name> <operator pos:start="504:20" pos:end="504:20">=</operator> <name pos:start="504:22" pos:end="504:37"><name pos:start="504:22" pos:end="504:24">env</name><operator pos:start="504:25" pos:end="504:26">-&gt;</operator><name pos:start="504:27" pos:end="504:29">vfp</name><operator pos:start="504:30" pos:end="504:30">.</operator><name pos:start="504:31" pos:end="504:37">vec_len</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="506:13" pos:end="508:27"><if pos:start="506:13" pos:end="508:27">if <condition pos:start="506:16" pos:end="506:35">(<expr pos:start="506:17" pos:end="506:34"><name pos:start="506:17" pos:end="506:18">op</name> <operator pos:start="506:20" pos:end="506:21">==</operator> <literal type="number" pos:start="506:23" pos:end="506:24">15</literal> <operator pos:start="506:26" pos:end="506:27">&amp;&amp;</operator> <name pos:start="506:29" pos:end="506:30">rn</name> <operator pos:start="506:32" pos:end="506:32">&gt;</operator> <literal type="number" pos:start="506:34" pos:end="506:34">3</literal></expr>)</condition><block type="pseudo" pos:start="508:17" pos:end="508:27"><block_content pos:start="508:17" pos:end="508:27">

                <expr_stmt pos:start="508:17" pos:end="508:27"><expr pos:start="508:17" pos:end="508:26"><name pos:start="508:17" pos:end="508:22">veclen</name> <operator pos:start="508:24" pos:end="508:24">=</operator> <literal type="number" pos:start="508:26" pos:end="508:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="512:13" pos:end="512:45">/* Shut up compiler warnings.  */</comment>

            <expr_stmt pos:start="514:13" pos:end="514:24"><expr pos:start="514:13" pos:end="514:23"><name pos:start="514:13" pos:end="514:19">delta_m</name> <operator pos:start="514:21" pos:end="514:21">=</operator> <literal type="number" pos:start="514:23" pos:end="514:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="516:13" pos:end="516:24"><expr pos:start="516:13" pos:end="516:23"><name pos:start="516:13" pos:end="516:19">delta_d</name> <operator pos:start="516:21" pos:end="516:21">=</operator> <literal type="number" pos:start="516:23" pos:end="516:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="518:13" pos:end="518:26"><expr pos:start="518:13" pos:end="518:25"><name pos:start="518:13" pos:end="518:21">bank_mask</name> <operator pos:start="518:23" pos:end="518:23">=</operator> <literal type="number" pos:start="518:25" pos:end="518:25">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="522:13" pos:end="570:13"><if pos:start="522:13" pos:end="570:13">if <condition pos:start="522:16" pos:end="522:27">(<expr pos:start="522:17" pos:end="522:26"><name pos:start="522:17" pos:end="522:22">veclen</name> <operator pos:start="522:24" pos:end="522:24">&gt;</operator> <literal type="number" pos:start="522:26" pos:end="522:26">0</literal></expr>)</condition> <block pos:start="522:29" pos:end="570:13">{<block_content pos:start="524:17" pos:end="568:17">

                <if_stmt pos:start="524:17" pos:end="530:37"><if pos:start="524:17" pos:end="526:36">if <condition pos:start="524:20" pos:end="524:23">(<expr pos:start="524:21" pos:end="524:22"><name pos:start="524:21" pos:end="524:22">dp</name></expr>)</condition><block type="pseudo" pos:start="526:21" pos:end="526:36"><block_content pos:start="526:21" pos:end="526:36">

                    <expr_stmt pos:start="526:21" pos:end="526:36"><expr pos:start="526:21" pos:end="526:35"><name pos:start="526:21" pos:end="526:29">bank_mask</name> <operator pos:start="526:31" pos:end="526:31">=</operator> <literal type="number" pos:start="526:33" pos:end="526:35">0xc</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="528:17" pos:end="530:37">else<block type="pseudo" pos:start="530:21" pos:end="530:37"><block_content pos:start="530:21" pos:end="530:37">

                    <expr_stmt pos:start="530:21" pos:end="530:37"><expr pos:start="530:21" pos:end="530:36"><name pos:start="530:21" pos:end="530:29">bank_mask</name> <operator pos:start="530:31" pos:end="530:31">=</operator> <literal type="number" pos:start="530:33" pos:end="530:36">0x18</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <comment type="block" pos:start="534:17" pos:end="534:72">/* Figure out what type of vector operation this is.  */</comment>

                <if_stmt pos:start="536:17" pos:end="568:17"><if pos:start="536:17" pos:end="542:17">if <condition pos:start="536:20" pos:end="536:42">(<expr pos:start="536:21" pos:end="536:41"><operator pos:start="536:21" pos:end="536:21">(</operator><name pos:start="536:22" pos:end="536:23">rd</name> <operator pos:start="536:25" pos:end="536:25">&amp;</operator> <name pos:start="536:27" pos:end="536:35">bank_mask</name><operator pos:start="536:36" pos:end="536:36">)</operator> <operator pos:start="536:38" pos:end="536:39">==</operator> <literal type="number" pos:start="536:41" pos:end="536:41">0</literal></expr>)</condition> <block pos:start="536:44" pos:end="542:17">{<block_content pos:start="540:21" pos:end="540:31">

                    <comment type="block" pos:start="538:21" pos:end="538:32">/* scalar */</comment>

                    <expr_stmt pos:start="540:21" pos:end="540:31"><expr pos:start="540:21" pos:end="540:30"><name pos:start="540:21" pos:end="540:26">veclen</name> <operator pos:start="540:28" pos:end="540:28">=</operator> <literal type="number" pos:start="540:30" pos:end="540:30">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="542:19" pos:end="568:17">else <block pos:start="542:24" pos:end="568:17">{<block_content pos:start="544:21" pos:end="566:21">

                    <if_stmt pos:start="544:21" pos:end="550:58"><if pos:start="544:21" pos:end="546:65">if <condition pos:start="544:24" pos:end="544:27">(<expr pos:start="544:25" pos:end="544:26"><name pos:start="544:25" pos:end="544:26">dp</name></expr>)</condition><block type="pseudo" pos:start="546:25" pos:end="546:65"><block_content pos:start="546:25" pos:end="546:65">

                        <expr_stmt pos:start="546:25" pos:end="546:65"><expr pos:start="546:25" pos:end="546:64"><name pos:start="546:25" pos:end="546:31">delta_d</name> <operator pos:start="546:33" pos:end="546:33">=</operator> <operator pos:start="546:35" pos:end="546:35">(</operator><name pos:start="546:36" pos:end="546:54"><name pos:start="546:36" pos:end="546:38">env</name><operator pos:start="546:39" pos:end="546:40">-&gt;</operator><name pos:start="546:41" pos:end="546:43">vfp</name><operator pos:start="546:44" pos:end="546:44">.</operator><name pos:start="546:45" pos:end="546:54">vec_stride</name></name> <operator pos:start="546:56" pos:end="546:57">&gt;&gt;</operator> <literal type="number" pos:start="546:59" pos:end="546:59">1</literal><operator pos:start="546:60" pos:end="546:60">)</operator> <operator pos:start="546:62" pos:end="546:62">+</operator> <literal type="number" pos:start="546:64" pos:end="546:64">1</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="548:21" pos:end="550:58">else<block type="pseudo" pos:start="550:25" pos:end="550:58"><block_content pos:start="550:25" pos:end="550:58">

                        <expr_stmt pos:start="550:25" pos:end="550:58"><expr pos:start="550:25" pos:end="550:57"><name pos:start="550:25" pos:end="550:31">delta_d</name> <operator pos:start="550:33" pos:end="550:33">=</operator> <name pos:start="550:35" pos:end="550:53"><name pos:start="550:35" pos:end="550:37">env</name><operator pos:start="550:38" pos:end="550:39">-&gt;</operator><name pos:start="550:40" pos:end="550:42">vfp</name><operator pos:start="550:43" pos:end="550:43">.</operator><name pos:start="550:44" pos:end="550:53">vec_stride</name></name> <operator pos:start="550:55" pos:end="550:55">+</operator> <literal type="number" pos:start="550:57" pos:end="550:57">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <if_stmt pos:start="554:21" pos:end="566:21"><if pos:start="554:21" pos:end="560:21">if <condition pos:start="554:24" pos:end="554:46">(<expr pos:start="554:25" pos:end="554:45"><operator pos:start="554:25" pos:end="554:25">(</operator><name pos:start="554:26" pos:end="554:27">rm</name> <operator pos:start="554:29" pos:end="554:29">&amp;</operator> <name pos:start="554:31" pos:end="554:39">bank_mask</name><operator pos:start="554:40" pos:end="554:40">)</operator> <operator pos:start="554:42" pos:end="554:43">==</operator> <literal type="number" pos:start="554:45" pos:end="554:45">0</literal></expr>)</condition> <block pos:start="554:48" pos:end="560:21">{<block_content pos:start="558:25" pos:end="558:36">

                        <comment type="block" pos:start="556:25" pos:end="556:49">/* mixed scalar/vector */</comment>

                        <expr_stmt pos:start="558:25" pos:end="558:36"><expr pos:start="558:25" pos:end="558:35"><name pos:start="558:25" pos:end="558:31">delta_m</name> <operator pos:start="558:33" pos:end="558:33">=</operator> <literal type="number" pos:start="558:35" pos:end="558:35">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="560:23" pos:end="566:21">else <block pos:start="560:28" pos:end="566:21">{<block_content pos:start="564:25" pos:end="564:42">

                        <comment type="block" pos:start="562:25" pos:end="562:36">/* vector */</comment>

                        <expr_stmt pos:start="564:25" pos:end="564:42"><expr pos:start="564:25" pos:end="564:41"><name pos:start="564:25" pos:end="564:31">delta_m</name> <operator pos:start="564:33" pos:end="564:33">=</operator> <name pos:start="564:35" pos:end="564:41">delta_d</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="574:13" pos:end="574:45">/* Load the initial operands.  */</comment>

            <if_stmt pos:start="576:13" pos:end="654:13"><if pos:start="576:13" pos:end="646:13">if <condition pos:start="576:16" pos:end="576:25">(<expr pos:start="576:17" pos:end="576:24"><name pos:start="576:17" pos:end="576:18">op</name> <operator pos:start="576:20" pos:end="576:21">==</operator> <literal type="number" pos:start="576:23" pos:end="576:24">15</literal></expr>)</condition> <block pos:start="576:27" pos:end="646:13">{<block_content pos:start="578:17" pos:end="644:17">

                <switch pos:start="578:17" pos:end="644:17">switch <condition pos:start="578:24" pos:end="578:27">(<expr pos:start="578:25" pos:end="578:26"><name pos:start="578:25" pos:end="578:26">rn</name></expr>)</condition> <block pos:start="578:29" pos:end="644:17">{<block_content pos:start="580:17" pos:end="642:26">

                <case pos:start="580:17" pos:end="580:24">case <expr pos:start="580:22" pos:end="580:23"><literal type="number" pos:start="580:22" pos:end="580:23">16</literal></expr>:</case>

                <case pos:start="582:17" pos:end="582:24">case <expr pos:start="582:22" pos:end="582:23"><literal type="number" pos:start="582:22" pos:end="582:23">17</literal></expr>:</case>

                    <comment type="block" pos:start="584:21" pos:end="584:40">/* Integer source */</comment>

                    <expr_stmt pos:start="586:21" pos:end="586:43"><expr pos:start="586:21" pos:end="586:42"><call pos:start="586:21" pos:end="586:42"><name pos:start="586:21" pos:end="586:35">gen_mov_F0_vreg</name><argument_list pos:start="586:36" pos:end="586:42">(<argument pos:start="586:37" pos:end="586:37"><expr pos:start="586:37" pos:end="586:37"><literal type="number" pos:start="586:37" pos:end="586:37">0</literal></expr></argument>, <argument pos:start="586:40" pos:end="586:41"><expr pos:start="586:40" pos:end="586:41"><name pos:start="586:40" pos:end="586:41">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="588:21" pos:end="588:26">break;</break>

                <case pos:start="590:17" pos:end="590:23">case <expr pos:start="590:22" pos:end="590:22"><literal type="number" pos:start="590:22" pos:end="590:22">8</literal></expr>:</case>

                <case pos:start="592:17" pos:end="592:23">case <expr pos:start="592:22" pos:end="592:22"><literal type="number" pos:start="592:22" pos:end="592:22">9</literal></expr>:</case>

                    <comment type="block" pos:start="594:21" pos:end="594:33">/* Compare */</comment>

                    <expr_stmt pos:start="596:21" pos:end="596:44"><expr pos:start="596:21" pos:end="596:43"><call pos:start="596:21" pos:end="596:43"><name pos:start="596:21" pos:end="596:35">gen_mov_F0_vreg</name><argument_list pos:start="596:36" pos:end="596:43">(<argument pos:start="596:37" pos:end="596:38"><expr pos:start="596:37" pos:end="596:38"><name pos:start="596:37" pos:end="596:38">dp</name></expr></argument>, <argument pos:start="596:41" pos:end="596:42"><expr pos:start="596:41" pos:end="596:42"><name pos:start="596:41" pos:end="596:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="598:21" pos:end="598:44"><expr pos:start="598:21" pos:end="598:43"><call pos:start="598:21" pos:end="598:43"><name pos:start="598:21" pos:end="598:35">gen_mov_F1_vreg</name><argument_list pos:start="598:36" pos:end="598:43">(<argument pos:start="598:37" pos:end="598:38"><expr pos:start="598:37" pos:end="598:38"><name pos:start="598:37" pos:end="598:38">dp</name></expr></argument>, <argument pos:start="598:41" pos:end="598:42"><expr pos:start="598:41" pos:end="598:42"><name pos:start="598:41" pos:end="598:42">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="600:21" pos:end="600:26">break;</break>

                <case pos:start="602:17" pos:end="602:24">case <expr pos:start="602:22" pos:end="602:23"><literal type="number" pos:start="602:22" pos:end="602:23">10</literal></expr>:</case>

                <case pos:start="604:17" pos:end="604:24">case <expr pos:start="604:22" pos:end="604:23"><literal type="number" pos:start="604:22" pos:end="604:23">11</literal></expr>:</case>

                    <comment type="block" pos:start="606:21" pos:end="606:43">/* Compare with zero */</comment>

                    <expr_stmt pos:start="608:21" pos:end="608:44"><expr pos:start="608:21" pos:end="608:43"><call pos:start="608:21" pos:end="608:43"><name pos:start="608:21" pos:end="608:35">gen_mov_F0_vreg</name><argument_list pos:start="608:36" pos:end="608:43">(<argument pos:start="608:37" pos:end="608:38"><expr pos:start="608:37" pos:end="608:38"><name pos:start="608:37" pos:end="608:38">dp</name></expr></argument>, <argument pos:start="608:41" pos:end="608:42"><expr pos:start="608:41" pos:end="608:42"><name pos:start="608:41" pos:end="608:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="610:21" pos:end="610:39"><expr pos:start="610:21" pos:end="610:38"><call pos:start="610:21" pos:end="610:38"><name pos:start="610:21" pos:end="610:34">gen_vfp_F1_ld0</name><argument_list pos:start="610:35" pos:end="610:38">(<argument pos:start="610:36" pos:end="610:37"><expr pos:start="610:36" pos:end="610:37"><name pos:start="610:36" pos:end="610:37">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="612:21" pos:end="612:26">break;</break>

                <case pos:start="614:17" pos:end="614:24">case <expr pos:start="614:22" pos:end="614:23"><literal type="number" pos:start="614:22" pos:end="614:23">20</literal></expr>:</case>

                <case pos:start="616:17" pos:end="616:24">case <expr pos:start="616:22" pos:end="616:23"><literal type="number" pos:start="616:22" pos:end="616:23">21</literal></expr>:</case>

                <case pos:start="618:17" pos:end="618:24">case <expr pos:start="618:22" pos:end="618:23"><literal type="number" pos:start="618:22" pos:end="618:23">22</literal></expr>:</case>

                <case pos:start="620:17" pos:end="620:24">case <expr pos:start="620:22" pos:end="620:23"><literal type="number" pos:start="620:22" pos:end="620:23">23</literal></expr>:</case>

                <case pos:start="622:17" pos:end="622:24">case <expr pos:start="622:22" pos:end="622:23"><literal type="number" pos:start="622:22" pos:end="622:23">28</literal></expr>:</case>

                <case pos:start="624:17" pos:end="624:24">case <expr pos:start="624:22" pos:end="624:23"><literal type="number" pos:start="624:22" pos:end="624:23">29</literal></expr>:</case>

                <case pos:start="626:17" pos:end="626:24">case <expr pos:start="626:22" pos:end="626:23"><literal type="number" pos:start="626:22" pos:end="626:23">30</literal></expr>:</case>

                <case pos:start="628:17" pos:end="628:24">case <expr pos:start="628:22" pos:end="628:23"><literal type="number" pos:start="628:22" pos:end="628:23">31</literal></expr>:</case>

                    <comment type="block" pos:start="630:21" pos:end="630:59">/* Source and destination the same.  */</comment>

                    <expr_stmt pos:start="632:21" pos:end="632:44"><expr pos:start="632:21" pos:end="632:43"><call pos:start="632:21" pos:end="632:43"><name pos:start="632:21" pos:end="632:35">gen_mov_F0_vreg</name><argument_list pos:start="632:36" pos:end="632:43">(<argument pos:start="632:37" pos:end="632:38"><expr pos:start="632:37" pos:end="632:38"><name pos:start="632:37" pos:end="632:38">dp</name></expr></argument>, <argument pos:start="632:41" pos:end="632:42"><expr pos:start="632:41" pos:end="632:42"><name pos:start="632:41" pos:end="632:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="634:21" pos:end="634:26">break;</break>

                <default pos:start="636:17" pos:end="636:24">default:</default>

                    <comment type="block" pos:start="638:21" pos:end="638:46">/* One source operand.  */</comment>

                    <expr_stmt pos:start="640:21" pos:end="640:44"><expr pos:start="640:21" pos:end="640:43"><call pos:start="640:21" pos:end="640:43"><name pos:start="640:21" pos:end="640:35">gen_mov_F0_vreg</name><argument_list pos:start="640:36" pos:end="640:43">(<argument pos:start="640:37" pos:end="640:38"><expr pos:start="640:37" pos:end="640:38"><name pos:start="640:37" pos:end="640:38">dp</name></expr></argument>, <argument pos:start="640:41" pos:end="640:42"><expr pos:start="640:41" pos:end="640:42"><name pos:start="640:41" pos:end="640:42">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="642:21" pos:end="642:26">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></if> <else pos:start="646:15" pos:end="654:13">else <block pos:start="646:20" pos:end="654:13">{<block_content pos:start="650:17" pos:end="652:40">

                <comment type="block" pos:start="648:17" pos:end="648:43">/* Two source operands.  */</comment>

                <expr_stmt pos:start="650:17" pos:end="650:40"><expr pos:start="650:17" pos:end="650:39"><call pos:start="650:17" pos:end="650:39"><name pos:start="650:17" pos:end="650:31">gen_mov_F0_vreg</name><argument_list pos:start="650:32" pos:end="650:39">(<argument pos:start="650:33" pos:end="650:34"><expr pos:start="650:33" pos:end="650:34"><name pos:start="650:33" pos:end="650:34">dp</name></expr></argument>, <argument pos:start="650:37" pos:end="650:38"><expr pos:start="650:37" pos:end="650:38"><name pos:start="650:37" pos:end="650:38">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="652:17" pos:end="652:40"><expr pos:start="652:17" pos:end="652:39"><call pos:start="652:17" pos:end="652:39"><name pos:start="652:17" pos:end="652:31">gen_mov_F1_vreg</name><argument_list pos:start="652:32" pos:end="652:39">(<argument pos:start="652:33" pos:end="652:34"><expr pos:start="652:33" pos:end="652:34"><name pos:start="652:33" pos:end="652:34">dp</name></expr></argument>, <argument pos:start="652:37" pos:end="652:38"><expr pos:start="652:37" pos:end="652:38"><name pos:start="652:37" pos:end="652:38">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <for pos:start="658:13" pos:end="1078:13">for <control pos:start="658:17" pos:end="658:20">(<init pos:start="658:18" pos:end="658:18">;</init><condition pos:start="658:19" pos:end="658:19">;</condition><incr/>)</control> <block pos:start="658:22" pos:end="1078:13">{<block_content pos:start="662:17" pos:end="1076:17">

                <comment type="block" pos:start="660:17" pos:end="660:47">/* Perform the calculation.  */</comment>

                <switch pos:start="662:17" pos:end="982:17">switch <condition pos:start="662:24" pos:end="662:27">(<expr pos:start="662:25" pos:end="662:26"><name pos:start="662:25" pos:end="662:26">op</name></expr>)</condition> <block pos:start="662:29" pos:end="982:17">{<block_content pos:start="664:17" pos:end="980:29">

                <case pos:start="664:17" pos:end="664:23">case <expr pos:start="664:22" pos:end="664:22"><literal type="number" pos:start="664:22" pos:end="664:22">0</literal></expr>:</case> <comment type="block" pos:start="664:25" pos:end="664:49">/* mac: fd + (fn * fm) */</comment>

                    <expr_stmt pos:start="666:21" pos:end="666:36"><expr pos:start="666:21" pos:end="666:35"><call pos:start="666:21" pos:end="666:35"><name pos:start="666:21" pos:end="666:31">gen_vfp_mul</name><argument_list pos:start="666:32" pos:end="666:35">(<argument pos:start="666:33" pos:end="666:34"><expr pos:start="666:33" pos:end="666:34"><name pos:start="666:33" pos:end="666:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="668:21" pos:end="668:44"><expr pos:start="668:21" pos:end="668:43"><call pos:start="668:21" pos:end="668:43"><name pos:start="668:21" pos:end="668:35">gen_mov_F1_vreg</name><argument_list pos:start="668:36" pos:end="668:43">(<argument pos:start="668:37" pos:end="668:38"><expr pos:start="668:37" pos:end="668:38"><name pos:start="668:37" pos:end="668:38">dp</name></expr></argument>, <argument pos:start="668:41" pos:end="668:42"><expr pos:start="668:41" pos:end="668:42"><name pos:start="668:41" pos:end="668:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="670:21" pos:end="670:36"><expr pos:start="670:21" pos:end="670:35"><call pos:start="670:21" pos:end="670:35"><name pos:start="670:21" pos:end="670:31">gen_vfp_add</name><argument_list pos:start="670:32" pos:end="670:35">(<argument pos:start="670:33" pos:end="670:34"><expr pos:start="670:33" pos:end="670:34"><name pos:start="670:33" pos:end="670:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="672:21" pos:end="672:26">break;</break>

                <case pos:start="674:17" pos:end="674:23">case <expr pos:start="674:22" pos:end="674:22"><literal type="number" pos:start="674:22" pos:end="674:22">1</literal></expr>:</case> <comment type="block" pos:start="674:25" pos:end="674:50">/* nmac: fd - (fn * fm) */</comment>

                    <expr_stmt pos:start="676:21" pos:end="676:36"><expr pos:start="676:21" pos:end="676:35"><call pos:start="676:21" pos:end="676:35"><name pos:start="676:21" pos:end="676:31">gen_vfp_mul</name><argument_list pos:start="676:32" pos:end="676:35">(<argument pos:start="676:33" pos:end="676:34"><expr pos:start="676:33" pos:end="676:34"><name pos:start="676:33" pos:end="676:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="678:21" pos:end="678:36"><expr pos:start="678:21" pos:end="678:35"><call pos:start="678:21" pos:end="678:35"><name pos:start="678:21" pos:end="678:31">gen_vfp_neg</name><argument_list pos:start="678:32" pos:end="678:35">(<argument pos:start="678:33" pos:end="678:34"><expr pos:start="678:33" pos:end="678:34"><name pos:start="678:33" pos:end="678:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="680:21" pos:end="680:44"><expr pos:start="680:21" pos:end="680:43"><call pos:start="680:21" pos:end="680:43"><name pos:start="680:21" pos:end="680:35">gen_mov_F1_vreg</name><argument_list pos:start="680:36" pos:end="680:43">(<argument pos:start="680:37" pos:end="680:38"><expr pos:start="680:37" pos:end="680:38"><name pos:start="680:37" pos:end="680:38">dp</name></expr></argument>, <argument pos:start="680:41" pos:end="680:42"><expr pos:start="680:41" pos:end="680:42"><name pos:start="680:41" pos:end="680:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="682:21" pos:end="682:36"><expr pos:start="682:21" pos:end="682:35"><call pos:start="682:21" pos:end="682:35"><name pos:start="682:21" pos:end="682:31">gen_vfp_add</name><argument_list pos:start="682:32" pos:end="682:35">(<argument pos:start="682:33" pos:end="682:34"><expr pos:start="682:33" pos:end="682:34"><name pos:start="682:33" pos:end="682:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="684:21" pos:end="684:26">break;</break>

                <case pos:start="686:17" pos:end="686:23">case <expr pos:start="686:22" pos:end="686:22"><literal type="number" pos:start="686:22" pos:end="686:22">2</literal></expr>:</case> <comment type="block" pos:start="686:25" pos:end="686:50">/* msc: -fd + (fn * fm) */</comment>

                    <expr_stmt pos:start="688:21" pos:end="688:36"><expr pos:start="688:21" pos:end="688:35"><call pos:start="688:21" pos:end="688:35"><name pos:start="688:21" pos:end="688:31">gen_vfp_mul</name><argument_list pos:start="688:32" pos:end="688:35">(<argument pos:start="688:33" pos:end="688:34"><expr pos:start="688:33" pos:end="688:34"><name pos:start="688:33" pos:end="688:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="690:21" pos:end="690:44"><expr pos:start="690:21" pos:end="690:43"><call pos:start="690:21" pos:end="690:43"><name pos:start="690:21" pos:end="690:35">gen_mov_F1_vreg</name><argument_list pos:start="690:36" pos:end="690:43">(<argument pos:start="690:37" pos:end="690:38"><expr pos:start="690:37" pos:end="690:38"><name pos:start="690:37" pos:end="690:38">dp</name></expr></argument>, <argument pos:start="690:41" pos:end="690:42"><expr pos:start="690:41" pos:end="690:42"><name pos:start="690:41" pos:end="690:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="692:21" pos:end="692:36"><expr pos:start="692:21" pos:end="692:35"><call pos:start="692:21" pos:end="692:35"><name pos:start="692:21" pos:end="692:31">gen_vfp_sub</name><argument_list pos:start="692:32" pos:end="692:35">(<argument pos:start="692:33" pos:end="692:34"><expr pos:start="692:33" pos:end="692:34"><name pos:start="692:33" pos:end="692:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="694:21" pos:end="694:26">break;</break>

                <case pos:start="696:17" pos:end="696:23">case <expr pos:start="696:22" pos:end="696:22"><literal type="number" pos:start="696:22" pos:end="696:22">3</literal></expr>:</case> <comment type="block" pos:start="696:25" pos:end="696:52">/* nmsc: -fd - (fn * fm)  */</comment>

                    <expr_stmt pos:start="698:21" pos:end="698:36"><expr pos:start="698:21" pos:end="698:35"><call pos:start="698:21" pos:end="698:35"><name pos:start="698:21" pos:end="698:31">gen_vfp_mul</name><argument_list pos:start="698:32" pos:end="698:35">(<argument pos:start="698:33" pos:end="698:34"><expr pos:start="698:33" pos:end="698:34"><name pos:start="698:33" pos:end="698:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="700:21" pos:end="700:36"><expr pos:start="700:21" pos:end="700:35"><call pos:start="700:21" pos:end="700:35"><name pos:start="700:21" pos:end="700:31">gen_vfp_neg</name><argument_list pos:start="700:32" pos:end="700:35">(<argument pos:start="700:33" pos:end="700:34"><expr pos:start="700:33" pos:end="700:34"><name pos:start="700:33" pos:end="700:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="702:21" pos:end="702:44"><expr pos:start="702:21" pos:end="702:43"><call pos:start="702:21" pos:end="702:43"><name pos:start="702:21" pos:end="702:35">gen_mov_F1_vreg</name><argument_list pos:start="702:36" pos:end="702:43">(<argument pos:start="702:37" pos:end="702:38"><expr pos:start="702:37" pos:end="702:38"><name pos:start="702:37" pos:end="702:38">dp</name></expr></argument>, <argument pos:start="702:41" pos:end="702:42"><expr pos:start="702:41" pos:end="702:42"><name pos:start="702:41" pos:end="702:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="704:21" pos:end="704:36"><expr pos:start="704:21" pos:end="704:35"><call pos:start="704:21" pos:end="704:35"><name pos:start="704:21" pos:end="704:31">gen_vfp_sub</name><argument_list pos:start="704:32" pos:end="704:35">(<argument pos:start="704:33" pos:end="704:34"><expr pos:start="704:33" pos:end="704:34"><name pos:start="704:33" pos:end="704:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="706:21" pos:end="706:26">break;</break>

                <case pos:start="708:17" pos:end="708:23">case <expr pos:start="708:22" pos:end="708:22"><literal type="number" pos:start="708:22" pos:end="708:22">4</literal></expr>:</case> <comment type="block" pos:start="708:25" pos:end="708:42">/* mul: fn * fm */</comment>

                    <expr_stmt pos:start="710:21" pos:end="710:36"><expr pos:start="710:21" pos:end="710:35"><call pos:start="710:21" pos:end="710:35"><name pos:start="710:21" pos:end="710:31">gen_vfp_mul</name><argument_list pos:start="710:32" pos:end="710:35">(<argument pos:start="710:33" pos:end="710:34"><expr pos:start="710:33" pos:end="710:34"><name pos:start="710:33" pos:end="710:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="712:21" pos:end="712:26">break;</break>

                <case pos:start="714:17" pos:end="714:23">case <expr pos:start="714:22" pos:end="714:22"><literal type="number" pos:start="714:22" pos:end="714:22">5</literal></expr>:</case> <comment type="block" pos:start="714:25" pos:end="714:46">/* nmul: -(fn * fm) */</comment>

                    <expr_stmt pos:start="716:21" pos:end="716:36"><expr pos:start="716:21" pos:end="716:35"><call pos:start="716:21" pos:end="716:35"><name pos:start="716:21" pos:end="716:31">gen_vfp_mul</name><argument_list pos:start="716:32" pos:end="716:35">(<argument pos:start="716:33" pos:end="716:34"><expr pos:start="716:33" pos:end="716:34"><name pos:start="716:33" pos:end="716:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="718:21" pos:end="718:36"><expr pos:start="718:21" pos:end="718:35"><call pos:start="718:21" pos:end="718:35"><name pos:start="718:21" pos:end="718:31">gen_vfp_neg</name><argument_list pos:start="718:32" pos:end="718:35">(<argument pos:start="718:33" pos:end="718:34"><expr pos:start="718:33" pos:end="718:34"><name pos:start="718:33" pos:end="718:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="720:21" pos:end="720:26">break;</break>

                <case pos:start="722:17" pos:end="722:23">case <expr pos:start="722:22" pos:end="722:22"><literal type="number" pos:start="722:22" pos:end="722:22">6</literal></expr>:</case> <comment type="block" pos:start="722:25" pos:end="722:42">/* add: fn + fm */</comment>

                    <expr_stmt pos:start="724:21" pos:end="724:36"><expr pos:start="724:21" pos:end="724:35"><call pos:start="724:21" pos:end="724:35"><name pos:start="724:21" pos:end="724:31">gen_vfp_add</name><argument_list pos:start="724:32" pos:end="724:35">(<argument pos:start="724:33" pos:end="724:34"><expr pos:start="724:33" pos:end="724:34"><name pos:start="724:33" pos:end="724:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="726:21" pos:end="726:26">break;</break>

                <case pos:start="728:17" pos:end="728:23">case <expr pos:start="728:22" pos:end="728:22"><literal type="number" pos:start="728:22" pos:end="728:22">7</literal></expr>:</case> <comment type="block" pos:start="728:25" pos:end="728:42">/* sub: fn - fm */</comment>

                    <expr_stmt pos:start="730:21" pos:end="730:36"><expr pos:start="730:21" pos:end="730:35"><call pos:start="730:21" pos:end="730:35"><name pos:start="730:21" pos:end="730:31">gen_vfp_sub</name><argument_list pos:start="730:32" pos:end="730:35">(<argument pos:start="730:33" pos:end="730:34"><expr pos:start="730:33" pos:end="730:34"><name pos:start="730:33" pos:end="730:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="732:21" pos:end="732:26">break;</break>

                <case pos:start="734:17" pos:end="734:23">case <expr pos:start="734:22" pos:end="734:22"><literal type="number" pos:start="734:22" pos:end="734:22">8</literal></expr>:</case> <comment type="block" pos:start="734:25" pos:end="734:42">/* div: fn / fm */</comment>

                    <expr_stmt pos:start="736:21" pos:end="736:36"><expr pos:start="736:21" pos:end="736:35"><call pos:start="736:21" pos:end="736:35"><name pos:start="736:21" pos:end="736:31">gen_vfp_div</name><argument_list pos:start="736:32" pos:end="736:35">(<argument pos:start="736:33" pos:end="736:34"><expr pos:start="736:33" pos:end="736:34"><name pos:start="736:33" pos:end="736:34">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="738:21" pos:end="738:26">break;</break>

                <case pos:start="740:17" pos:end="740:24">case <expr pos:start="740:22" pos:end="740:23"><literal type="number" pos:start="740:22" pos:end="740:23">14</literal></expr>:</case> <comment type="block" pos:start="740:26" pos:end="740:37">/* fconst */</comment>

                    <if_stmt pos:start="742:21" pos:end="744:31"><if pos:start="742:21" pos:end="744:31">if <condition pos:start="742:24" pos:end="742:60">(<expr pos:start="742:25" pos:end="742:59"><operator pos:start="742:25" pos:end="742:25">!</operator><call pos:start="742:26" pos:end="742:59"><name pos:start="742:26" pos:end="742:36">arm_feature</name><argument_list pos:start="742:37" pos:end="742:59">(<argument pos:start="742:38" pos:end="742:40"><expr pos:start="742:38" pos:end="742:40"><name pos:start="742:38" pos:end="742:40">env</name></expr></argument>, <argument pos:start="742:43" pos:end="742:58"><expr pos:start="742:43" pos:end="742:58"><name pos:start="742:43" pos:end="742:58">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="744:23" pos:end="744:31"><block_content pos:start="744:23" pos:end="744:31">

                      <return pos:start="744:23" pos:end="744:31">return <expr pos:start="744:30" pos:end="744:30"><literal type="number" pos:start="744:30" pos:end="744:30">1</literal></expr>;</return></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="748:21" pos:end="748:50"><expr pos:start="748:21" pos:end="748:49"><name pos:start="748:21" pos:end="748:21">n</name> <operator pos:start="748:23" pos:end="748:23">=</operator> <operator pos:start="748:25" pos:end="748:25">(</operator><name pos:start="748:26" pos:end="748:29">insn</name> <operator pos:start="748:31" pos:end="748:32">&lt;&lt;</operator> <literal type="number" pos:start="748:34" pos:end="748:35">12</literal><operator pos:start="748:36" pos:end="748:36">)</operator> <operator pos:start="748:38" pos:end="748:38">&amp;</operator> <literal type="number" pos:start="748:40" pos:end="748:49">0x80000000</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="750:21" pos:end="750:61"><expr pos:start="750:21" pos:end="750:60"><name pos:start="750:21" pos:end="750:21">i</name> <operator pos:start="750:23" pos:end="750:23">=</operator> <operator pos:start="750:25" pos:end="750:25">(</operator><operator pos:start="750:26" pos:end="750:26">(</operator><name pos:start="750:27" pos:end="750:30">insn</name> <operator pos:start="750:32" pos:end="750:33">&gt;&gt;</operator> <literal type="number" pos:start="750:35" pos:end="750:36">12</literal><operator pos:start="750:37" pos:end="750:37">)</operator> <operator pos:start="750:39" pos:end="750:39">&amp;</operator> <literal type="number" pos:start="750:41" pos:end="750:44">0x70</literal><operator pos:start="750:45" pos:end="750:45">)</operator> <operator pos:start="750:47" pos:end="750:47">|</operator> <operator pos:start="750:49" pos:end="750:49">(</operator><name pos:start="750:50" pos:end="750:53">insn</name> <operator pos:start="750:55" pos:end="750:55">&amp;</operator> <literal type="number" pos:start="750:57" pos:end="750:59">0xf</literal><operator pos:start="750:60" pos:end="750:60">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="752:21" pos:end="780:21"><if pos:start="752:21" pos:end="766:21">if <condition pos:start="752:24" pos:end="752:27">(<expr pos:start="752:25" pos:end="752:26"><name pos:start="752:25" pos:end="752:26">dp</name></expr>)</condition> <block pos:start="752:29" pos:end="766:21">{<block_content pos:start="754:25" pos:end="764:71">

                        <if_stmt pos:start="754:25" pos:end="760:40"><if pos:start="754:25" pos:end="756:40">if <condition pos:start="754:28" pos:end="754:37">(<expr pos:start="754:29" pos:end="754:36"><name pos:start="754:29" pos:end="754:29">i</name> <operator pos:start="754:31" pos:end="754:31">&amp;</operator> <literal type="number" pos:start="754:33" pos:end="754:36">0x40</literal></expr>)</condition><block type="pseudo" pos:start="756:29" pos:end="756:40"><block_content pos:start="756:29" pos:end="756:40">

                            <expr_stmt pos:start="756:29" pos:end="756:40"><expr pos:start="756:29" pos:end="756:39"><name pos:start="756:29" pos:end="756:29">i</name> <operator pos:start="756:31" pos:end="756:32">|=</operator> <literal type="number" pos:start="756:34" pos:end="756:39">0x3f80</literal></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="758:25" pos:end="760:40">else<block type="pseudo" pos:start="760:29" pos:end="760:40"><block_content pos:start="760:29" pos:end="760:40">

                            <expr_stmt pos:start="760:29" pos:end="760:40"><expr pos:start="760:29" pos:end="760:39"><name pos:start="760:29" pos:end="760:29">i</name> <operator pos:start="760:31" pos:end="760:32">|=</operator> <literal type="number" pos:start="760:34" pos:end="760:39">0x4000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="762:25" pos:end="762:37"><expr pos:start="762:25" pos:end="762:36"><name pos:start="762:25" pos:end="762:25">n</name> <operator pos:start="762:27" pos:end="762:28">|=</operator> <name pos:start="762:30" pos:end="762:30">i</name> <operator pos:start="762:32" pos:end="762:33">&lt;&lt;</operator> <literal type="number" pos:start="762:35" pos:end="762:36">16</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="764:25" pos:end="764:71"><expr pos:start="764:25" pos:end="764:70"><call pos:start="764:25" pos:end="764:70"><name pos:start="764:25" pos:end="764:40">tcg_gen_movi_i64</name><argument_list pos:start="764:41" pos:end="764:70">(<argument pos:start="764:42" pos:end="764:48"><expr pos:start="764:42" pos:end="764:48"><name pos:start="764:42" pos:end="764:48">cpu_F0d</name></expr></argument>, <argument pos:start="764:51" pos:end="764:69"><expr pos:start="764:51" pos:end="764:69"><operator pos:start="764:51" pos:end="764:51">(</operator><operator pos:start="764:52" pos:end="764:52">(</operator><name pos:start="764:53" pos:end="764:60">uint64_t</name><operator pos:start="764:61" pos:end="764:61">)</operator><name pos:start="764:62" pos:end="764:62">n</name><operator pos:start="764:63" pos:end="764:63">)</operator> <operator pos:start="764:65" pos:end="764:66">&lt;&lt;</operator> <literal type="number" pos:start="764:68" pos:end="764:69">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="766:23" pos:end="780:21">else <block pos:start="766:28" pos:end="780:21">{<block_content pos:start="768:25" pos:end="778:53">

                        <if_stmt pos:start="768:25" pos:end="774:39"><if pos:start="768:25" pos:end="770:39">if <condition pos:start="768:28" pos:end="768:37">(<expr pos:start="768:29" pos:end="768:36"><name pos:start="768:29" pos:end="768:29">i</name> <operator pos:start="768:31" pos:end="768:31">&amp;</operator> <literal type="number" pos:start="768:33" pos:end="768:36">0x40</literal></expr>)</condition><block type="pseudo" pos:start="770:29" pos:end="770:39"><block_content pos:start="770:29" pos:end="770:39">

                            <expr_stmt pos:start="770:29" pos:end="770:39"><expr pos:start="770:29" pos:end="770:38"><name pos:start="770:29" pos:end="770:29">i</name> <operator pos:start="770:31" pos:end="770:32">|=</operator> <literal type="number" pos:start="770:34" pos:end="770:38">0x780</literal></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="772:25" pos:end="774:39">else<block type="pseudo" pos:start="774:29" pos:end="774:39"><block_content pos:start="774:29" pos:end="774:39">

                            <expr_stmt pos:start="774:29" pos:end="774:39"><expr pos:start="774:29" pos:end="774:38"><name pos:start="774:29" pos:end="774:29">i</name> <operator pos:start="774:31" pos:end="774:32">|=</operator> <literal type="number" pos:start="774:34" pos:end="774:38">0x800</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="776:25" pos:end="776:37"><expr pos:start="776:25" pos:end="776:36"><name pos:start="776:25" pos:end="776:25">n</name> <operator pos:start="776:27" pos:end="776:28">|=</operator> <name pos:start="776:30" pos:end="776:30">i</name> <operator pos:start="776:32" pos:end="776:33">&lt;&lt;</operator> <literal type="number" pos:start="776:35" pos:end="776:36">19</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="778:25" pos:end="778:53"><expr pos:start="778:25" pos:end="778:52"><call pos:start="778:25" pos:end="778:52"><name pos:start="778:25" pos:end="778:40">tcg_gen_movi_i32</name><argument_list pos:start="778:41" pos:end="778:52">(<argument pos:start="778:42" pos:end="778:48"><expr pos:start="778:42" pos:end="778:48"><name pos:start="778:42" pos:end="778:48">cpu_F0s</name></expr></argument>, <argument pos:start="778:51" pos:end="778:51"><expr pos:start="778:51" pos:end="778:51"><name pos:start="778:51" pos:end="778:51">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="782:21" pos:end="782:26">break;</break>

                <case pos:start="784:17" pos:end="784:24">case <expr pos:start="784:22" pos:end="784:23"><literal type="number" pos:start="784:22" pos:end="784:23">15</literal></expr>:</case> <comment type="block" pos:start="784:26" pos:end="784:46">/* extension space */</comment>

                    <switch pos:start="786:21" pos:end="972:21">switch <condition pos:start="786:28" pos:end="786:31">(<expr pos:start="786:29" pos:end="786:30"><name pos:start="786:29" pos:end="786:30">rn</name></expr>)</condition> <block pos:start="786:33" pos:end="972:21">{<block_content pos:start="788:21" pos:end="970:33">

                    <case pos:start="788:21" pos:end="788:27">case <expr pos:start="788:26" pos:end="788:26"><literal type="number" pos:start="788:26" pos:end="788:26">0</literal></expr>:</case> <comment type="block" pos:start="788:29" pos:end="788:37">/* cpy */</comment>

                        <comment type="block" pos:start="790:25" pos:end="790:35">/* no-op */</comment>

                        <break pos:start="792:25" pos:end="792:30">break;</break>

                    <case pos:start="794:21" pos:end="794:27">case <expr pos:start="794:26" pos:end="794:26"><literal type="number" pos:start="794:26" pos:end="794:26">1</literal></expr>:</case> <comment type="block" pos:start="794:29" pos:end="794:37">/* abs */</comment>

                        <expr_stmt pos:start="796:25" pos:end="796:40"><expr pos:start="796:25" pos:end="796:39"><call pos:start="796:25" pos:end="796:39"><name pos:start="796:25" pos:end="796:35">gen_vfp_abs</name><argument_list pos:start="796:36" pos:end="796:39">(<argument pos:start="796:37" pos:end="796:38"><expr pos:start="796:37" pos:end="796:38"><name pos:start="796:37" pos:end="796:38">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="798:25" pos:end="798:30">break;</break>

                    <case pos:start="800:21" pos:end="800:27">case <expr pos:start="800:26" pos:end="800:26"><literal type="number" pos:start="800:26" pos:end="800:26">2</literal></expr>:</case> <comment type="block" pos:start="800:29" pos:end="800:37">/* neg */</comment>

                        <expr_stmt pos:start="802:25" pos:end="802:40"><expr pos:start="802:25" pos:end="802:39"><call pos:start="802:25" pos:end="802:39"><name pos:start="802:25" pos:end="802:35">gen_vfp_neg</name><argument_list pos:start="802:36" pos:end="802:39">(<argument pos:start="802:37" pos:end="802:38"><expr pos:start="802:37" pos:end="802:38"><name pos:start="802:37" pos:end="802:38">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="804:25" pos:end="804:30">break;</break>

                    <case pos:start="806:21" pos:end="806:27">case <expr pos:start="806:26" pos:end="806:26"><literal type="number" pos:start="806:26" pos:end="806:26">3</literal></expr>:</case> <comment type="block" pos:start="806:29" pos:end="806:38">/* sqrt */</comment>

                        <expr_stmt pos:start="808:25" pos:end="808:41"><expr pos:start="808:25" pos:end="808:40"><call pos:start="808:25" pos:end="808:40"><name pos:start="808:25" pos:end="808:36">gen_vfp_sqrt</name><argument_list pos:start="808:37" pos:end="808:40">(<argument pos:start="808:38" pos:end="808:39"><expr pos:start="808:38" pos:end="808:39"><name pos:start="808:38" pos:end="808:39">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="810:25" pos:end="810:30">break;</break>

                    <case pos:start="812:21" pos:end="812:27">case <expr pos:start="812:26" pos:end="812:26"><literal type="number" pos:start="812:26" pos:end="812:26">8</literal></expr>:</case> <comment type="block" pos:start="812:29" pos:end="812:37">/* cmp */</comment>

                        <expr_stmt pos:start="814:25" pos:end="814:40"><expr pos:start="814:25" pos:end="814:39"><call pos:start="814:25" pos:end="814:39"><name pos:start="814:25" pos:end="814:35">gen_vfp_cmp</name><argument_list pos:start="814:36" pos:end="814:39">(<argument pos:start="814:37" pos:end="814:38"><expr pos:start="814:37" pos:end="814:38"><name pos:start="814:37" pos:end="814:38">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="816:25" pos:end="816:30">break;</break>

                    <case pos:start="818:21" pos:end="818:27">case <expr pos:start="818:26" pos:end="818:26"><literal type="number" pos:start="818:26" pos:end="818:26">9</literal></expr>:</case> <comment type="block" pos:start="818:29" pos:end="818:38">/* cmpe */</comment>

                        <expr_stmt pos:start="820:25" pos:end="820:41"><expr pos:start="820:25" pos:end="820:40"><call pos:start="820:25" pos:end="820:40"><name pos:start="820:25" pos:end="820:36">gen_vfp_cmpe</name><argument_list pos:start="820:37" pos:end="820:40">(<argument pos:start="820:38" pos:end="820:39"><expr pos:start="820:38" pos:end="820:39"><name pos:start="820:38" pos:end="820:39">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="822:25" pos:end="822:30">break;</break>

                    <case pos:start="824:21" pos:end="824:28">case <expr pos:start="824:26" pos:end="824:27"><literal type="number" pos:start="824:26" pos:end="824:27">10</literal></expr>:</case> <comment type="block" pos:start="824:30" pos:end="824:39">/* cmpz */</comment>

                        <expr_stmt pos:start="826:25" pos:end="826:40"><expr pos:start="826:25" pos:end="826:39"><call pos:start="826:25" pos:end="826:39"><name pos:start="826:25" pos:end="826:35">gen_vfp_cmp</name><argument_list pos:start="826:36" pos:end="826:39">(<argument pos:start="826:37" pos:end="826:38"><expr pos:start="826:37" pos:end="826:38"><name pos:start="826:37" pos:end="826:38">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="828:25" pos:end="828:30">break;</break>

                    <case pos:start="830:21" pos:end="830:28">case <expr pos:start="830:26" pos:end="830:27"><literal type="number" pos:start="830:26" pos:end="830:27">11</literal></expr>:</case> <comment type="block" pos:start="830:30" pos:end="830:40">/* cmpez */</comment>

                        <expr_stmt pos:start="832:25" pos:end="832:43"><expr pos:start="832:25" pos:end="832:42"><call pos:start="832:25" pos:end="832:42"><name pos:start="832:25" pos:end="832:38">gen_vfp_F1_ld0</name><argument_list pos:start="832:39" pos:end="832:42">(<argument pos:start="832:40" pos:end="832:41"><expr pos:start="832:40" pos:end="832:41"><name pos:start="832:40" pos:end="832:41">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="834:25" pos:end="834:41"><expr pos:start="834:25" pos:end="834:40"><call pos:start="834:25" pos:end="834:40"><name pos:start="834:25" pos:end="834:36">gen_vfp_cmpe</name><argument_list pos:start="834:37" pos:end="834:40">(<argument pos:start="834:38" pos:end="834:39"><expr pos:start="834:38" pos:end="834:39"><name pos:start="834:38" pos:end="834:39">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="836:25" pos:end="836:30">break;</break>

                    <case pos:start="838:21" pos:end="838:28">case <expr pos:start="838:26" pos:end="838:27"><literal type="number" pos:start="838:26" pos:end="838:27">15</literal></expr>:</case> <comment type="block" pos:start="838:30" pos:end="838:61">/* single&lt;-&gt;double conversion */</comment>

                        <if_stmt pos:start="840:25" pos:end="846:77"><if pos:start="840:25" pos:end="842:77">if <condition pos:start="840:28" pos:end="840:31">(<expr pos:start="840:29" pos:end="840:30"><name pos:start="840:29" pos:end="840:30">dp</name></expr>)</condition><block type="pseudo" pos:start="842:29" pos:end="842:77"><block_content pos:start="842:29" pos:end="842:77">

                            <expr_stmt pos:start="842:29" pos:end="842:77"><expr pos:start="842:29" pos:end="842:76"><call pos:start="842:29" pos:end="842:76"><name pos:start="842:29" pos:end="842:49">gen_helper_vfp_fcvtsd</name><argument_list pos:start="842:50" pos:end="842:76">(<argument pos:start="842:51" pos:end="842:57"><expr pos:start="842:51" pos:end="842:57"><name pos:start="842:51" pos:end="842:57">cpu_F0s</name></expr></argument>, <argument pos:start="842:60" pos:end="842:66"><expr pos:start="842:60" pos:end="842:66"><name pos:start="842:60" pos:end="842:66">cpu_F0d</name></expr></argument>, <argument pos:start="842:69" pos:end="842:75"><expr pos:start="842:69" pos:end="842:75"><name pos:start="842:69" pos:end="842:75">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="844:25" pos:end="846:77">else<block type="pseudo" pos:start="846:29" pos:end="846:77"><block_content pos:start="846:29" pos:end="846:77">

                            <expr_stmt pos:start="846:29" pos:end="846:77"><expr pos:start="846:29" pos:end="846:76"><call pos:start="846:29" pos:end="846:76"><name pos:start="846:29" pos:end="846:49">gen_helper_vfp_fcvtds</name><argument_list pos:start="846:50" pos:end="846:76">(<argument pos:start="846:51" pos:end="846:57"><expr pos:start="846:51" pos:end="846:57"><name pos:start="846:51" pos:end="846:57">cpu_F0d</name></expr></argument>, <argument pos:start="846:60" pos:end="846:66"><expr pos:start="846:60" pos:end="846:66"><name pos:start="846:60" pos:end="846:66">cpu_F0s</name></expr></argument>, <argument pos:start="846:69" pos:end="846:75"><expr pos:start="846:69" pos:end="846:75"><name pos:start="846:69" pos:end="846:75">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <break pos:start="848:25" pos:end="848:30">break;</break>

                    <case pos:start="850:21" pos:end="850:28">case <expr pos:start="850:26" pos:end="850:27"><literal type="number" pos:start="850:26" pos:end="850:27">16</literal></expr>:</case> <comment type="block" pos:start="850:30" pos:end="850:40">/* fuito */</comment>

                        <expr_stmt pos:start="852:25" pos:end="852:41"><expr pos:start="852:25" pos:end="852:40"><call pos:start="852:25" pos:end="852:40"><name pos:start="852:25" pos:end="852:36">gen_vfp_uito</name><argument_list pos:start="852:37" pos:end="852:40">(<argument pos:start="852:38" pos:end="852:39"><expr pos:start="852:38" pos:end="852:39"><name pos:start="852:38" pos:end="852:39">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="854:25" pos:end="854:30">break;</break>

                    <case pos:start="856:21" pos:end="856:28">case <expr pos:start="856:26" pos:end="856:27"><literal type="number" pos:start="856:26" pos:end="856:27">17</literal></expr>:</case> <comment type="block" pos:start="856:30" pos:end="856:40">/* fsito */</comment>

                        <expr_stmt pos:start="858:25" pos:end="858:41"><expr pos:start="858:25" pos:end="858:40"><call pos:start="858:25" pos:end="858:40"><name pos:start="858:25" pos:end="858:36">gen_vfp_sito</name><argument_list pos:start="858:37" pos:end="858:40">(<argument pos:start="858:38" pos:end="858:39"><expr pos:start="858:38" pos:end="858:39"><name pos:start="858:38" pos:end="858:39">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="860:25" pos:end="860:30">break;</break>

                    <case pos:start="862:21" pos:end="862:28">case <expr pos:start="862:26" pos:end="862:27"><literal type="number" pos:start="862:26" pos:end="862:27">20</literal></expr>:</case> <comment type="block" pos:start="862:30" pos:end="862:40">/* fshto */</comment>

                        <if_stmt pos:start="864:25" pos:end="866:35"><if pos:start="864:25" pos:end="866:35">if <condition pos:start="864:28" pos:end="864:64">(<expr pos:start="864:29" pos:end="864:63"><operator pos:start="864:29" pos:end="864:29">!</operator><call pos:start="864:30" pos:end="864:63"><name pos:start="864:30" pos:end="864:40">arm_feature</name><argument_list pos:start="864:41" pos:end="864:63">(<argument pos:start="864:42" pos:end="864:44"><expr pos:start="864:42" pos:end="864:44"><name pos:start="864:42" pos:end="864:44">env</name></expr></argument>, <argument pos:start="864:47" pos:end="864:62"><expr pos:start="864:47" pos:end="864:62"><name pos:start="864:47" pos:end="864:62">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="866:27" pos:end="866:35"><block_content pos:start="866:27" pos:end="866:35">

                          <return pos:start="866:27" pos:end="866:35">return <expr pos:start="866:34" pos:end="866:34"><literal type="number" pos:start="866:34" pos:end="866:34">1</literal></expr>;</return></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="868:25" pos:end="868:50"><expr pos:start="868:25" pos:end="868:49"><call pos:start="868:25" pos:end="868:49"><name pos:start="868:25" pos:end="868:36">gen_vfp_shto</name><argument_list pos:start="868:37" pos:end="868:49">(<argument pos:start="868:38" pos:end="868:39"><expr pos:start="868:38" pos:end="868:39"><name pos:start="868:38" pos:end="868:39">dp</name></expr></argument>, <argument pos:start="868:42" pos:end="868:48"><expr pos:start="868:42" pos:end="868:48"><literal type="number" pos:start="868:42" pos:end="868:45">16</literal> <operator pos:start="868:45" pos:end="868:45">-</operator> <name pos:start="868:47" pos:end="868:48">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="870:25" pos:end="870:30">break;</break>

                    <case pos:start="872:21" pos:end="872:28">case <expr pos:start="872:26" pos:end="872:27"><literal type="number" pos:start="872:26" pos:end="872:27">21</literal></expr>:</case> <comment type="block" pos:start="872:30" pos:end="872:40">/* fslto */</comment>

                        <if_stmt pos:start="874:25" pos:end="876:35"><if pos:start="874:25" pos:end="876:35">if <condition pos:start="874:28" pos:end="874:64">(<expr pos:start="874:29" pos:end="874:63"><operator pos:start="874:29" pos:end="874:29">!</operator><call pos:start="874:30" pos:end="874:63"><name pos:start="874:30" pos:end="874:40">arm_feature</name><argument_list pos:start="874:41" pos:end="874:63">(<argument pos:start="874:42" pos:end="874:44"><expr pos:start="874:42" pos:end="874:44"><name pos:start="874:42" pos:end="874:44">env</name></expr></argument>, <argument pos:start="874:47" pos:end="874:62"><expr pos:start="874:47" pos:end="874:62"><name pos:start="874:47" pos:end="874:62">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="876:27" pos:end="876:35"><block_content pos:start="876:27" pos:end="876:35">

                          <return pos:start="876:27" pos:end="876:35">return <expr pos:start="876:34" pos:end="876:34"><literal type="number" pos:start="876:34" pos:end="876:34">1</literal></expr>;</return></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="878:25" pos:end="878:50"><expr pos:start="878:25" pos:end="878:49"><call pos:start="878:25" pos:end="878:49"><name pos:start="878:25" pos:end="878:36">gen_vfp_slto</name><argument_list pos:start="878:37" pos:end="878:49">(<argument pos:start="878:38" pos:end="878:39"><expr pos:start="878:38" pos:end="878:39"><name pos:start="878:38" pos:end="878:39">dp</name></expr></argument>, <argument pos:start="878:42" pos:end="878:48"><expr pos:start="878:42" pos:end="878:48"><literal type="number" pos:start="878:42" pos:end="878:45">32</literal> <operator pos:start="878:45" pos:end="878:45">-</operator> <name pos:start="878:47" pos:end="878:48">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="880:25" pos:end="880:30">break;</break>

                    <case pos:start="882:21" pos:end="882:28">case <expr pos:start="882:26" pos:end="882:27"><literal type="number" pos:start="882:26" pos:end="882:27">22</literal></expr>:</case> <comment type="block" pos:start="882:30" pos:end="882:40">/* fuhto */</comment>

                        <if_stmt pos:start="884:25" pos:end="886:35"><if pos:start="884:25" pos:end="886:35">if <condition pos:start="884:28" pos:end="884:64">(<expr pos:start="884:29" pos:end="884:63"><operator pos:start="884:29" pos:end="884:29">!</operator><call pos:start="884:30" pos:end="884:63"><name pos:start="884:30" pos:end="884:40">arm_feature</name><argument_list pos:start="884:41" pos:end="884:63">(<argument pos:start="884:42" pos:end="884:44"><expr pos:start="884:42" pos:end="884:44"><name pos:start="884:42" pos:end="884:44">env</name></expr></argument>, <argument pos:start="884:47" pos:end="884:62"><expr pos:start="884:47" pos:end="884:62"><name pos:start="884:47" pos:end="884:62">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="886:27" pos:end="886:35"><block_content pos:start="886:27" pos:end="886:35">

                          <return pos:start="886:27" pos:end="886:35">return <expr pos:start="886:34" pos:end="886:34"><literal type="number" pos:start="886:34" pos:end="886:34">1</literal></expr>;</return></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="888:25" pos:end="888:50"><expr pos:start="888:25" pos:end="888:49"><call pos:start="888:25" pos:end="888:49"><name pos:start="888:25" pos:end="888:36">gen_vfp_uhto</name><argument_list pos:start="888:37" pos:end="888:49">(<argument pos:start="888:38" pos:end="888:39"><expr pos:start="888:38" pos:end="888:39"><name pos:start="888:38" pos:end="888:39">dp</name></expr></argument>, <argument pos:start="888:42" pos:end="888:48"><expr pos:start="888:42" pos:end="888:48"><literal type="number" pos:start="888:42" pos:end="888:45">16</literal> <operator pos:start="888:45" pos:end="888:45">-</operator> <name pos:start="888:47" pos:end="888:48">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="890:25" pos:end="890:30">break;</break>

                    <case pos:start="892:21" pos:end="892:28">case <expr pos:start="892:26" pos:end="892:27"><literal type="number" pos:start="892:26" pos:end="892:27">23</literal></expr>:</case> <comment type="block" pos:start="892:30" pos:end="892:40">/* fulto */</comment>

                        <if_stmt pos:start="894:25" pos:end="896:35"><if pos:start="894:25" pos:end="896:35">if <condition pos:start="894:28" pos:end="894:64">(<expr pos:start="894:29" pos:end="894:63"><operator pos:start="894:29" pos:end="894:29">!</operator><call pos:start="894:30" pos:end="894:63"><name pos:start="894:30" pos:end="894:40">arm_feature</name><argument_list pos:start="894:41" pos:end="894:63">(<argument pos:start="894:42" pos:end="894:44"><expr pos:start="894:42" pos:end="894:44"><name pos:start="894:42" pos:end="894:44">env</name></expr></argument>, <argument pos:start="894:47" pos:end="894:62"><expr pos:start="894:47" pos:end="894:62"><name pos:start="894:47" pos:end="894:62">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="896:27" pos:end="896:35"><block_content pos:start="896:27" pos:end="896:35">

                          <return pos:start="896:27" pos:end="896:35">return <expr pos:start="896:34" pos:end="896:34"><literal type="number" pos:start="896:34" pos:end="896:34">1</literal></expr>;</return></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="898:25" pos:end="898:50"><expr pos:start="898:25" pos:end="898:49"><call pos:start="898:25" pos:end="898:49"><name pos:start="898:25" pos:end="898:36">gen_vfp_ulto</name><argument_list pos:start="898:37" pos:end="898:49">(<argument pos:start="898:38" pos:end="898:39"><expr pos:start="898:38" pos:end="898:39"><name pos:start="898:38" pos:end="898:39">dp</name></expr></argument>, <argument pos:start="898:42" pos:end="898:48"><expr pos:start="898:42" pos:end="898:48"><literal type="number" pos:start="898:42" pos:end="898:45">32</literal> <operator pos:start="898:45" pos:end="898:45">-</operator> <name pos:start="898:47" pos:end="898:48">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="900:25" pos:end="900:30">break;</break>

                    <case pos:start="902:21" pos:end="902:28">case <expr pos:start="902:26" pos:end="902:27"><literal type="number" pos:start="902:26" pos:end="902:27">24</literal></expr>:</case> <comment type="block" pos:start="902:30" pos:end="902:40">/* ftoui */</comment>

                        <expr_stmt pos:start="904:25" pos:end="904:41"><expr pos:start="904:25" pos:end="904:40"><call pos:start="904:25" pos:end="904:40"><name pos:start="904:25" pos:end="904:36">gen_vfp_toui</name><argument_list pos:start="904:37" pos:end="904:40">(<argument pos:start="904:38" pos:end="904:39"><expr pos:start="904:38" pos:end="904:39"><name pos:start="904:38" pos:end="904:39">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="906:25" pos:end="906:30">break;</break>

                    <case pos:start="908:21" pos:end="908:28">case <expr pos:start="908:26" pos:end="908:27"><literal type="number" pos:start="908:26" pos:end="908:27">25</literal></expr>:</case> <comment type="block" pos:start="908:30" pos:end="908:41">/* ftouiz */</comment>

                        <expr_stmt pos:start="910:25" pos:end="910:42"><expr pos:start="910:25" pos:end="910:41"><call pos:start="910:25" pos:end="910:41"><name pos:start="910:25" pos:end="910:37">gen_vfp_touiz</name><argument_list pos:start="910:38" pos:end="910:41">(<argument pos:start="910:39" pos:end="910:40"><expr pos:start="910:39" pos:end="910:40"><name pos:start="910:39" pos:end="910:40">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="912:25" pos:end="912:30">break;</break>

                    <case pos:start="914:21" pos:end="914:28">case <expr pos:start="914:26" pos:end="914:27"><literal type="number" pos:start="914:26" pos:end="914:27">26</literal></expr>:</case> <comment type="block" pos:start="914:30" pos:end="914:40">/* ftosi */</comment>

                        <expr_stmt pos:start="916:25" pos:end="916:41"><expr pos:start="916:25" pos:end="916:40"><call pos:start="916:25" pos:end="916:40"><name pos:start="916:25" pos:end="916:36">gen_vfp_tosi</name><argument_list pos:start="916:37" pos:end="916:40">(<argument pos:start="916:38" pos:end="916:39"><expr pos:start="916:38" pos:end="916:39"><name pos:start="916:38" pos:end="916:39">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="918:25" pos:end="918:30">break;</break>

                    <case pos:start="920:21" pos:end="920:28">case <expr pos:start="920:26" pos:end="920:27"><literal type="number" pos:start="920:26" pos:end="920:27">27</literal></expr>:</case> <comment type="block" pos:start="920:30" pos:end="920:41">/* ftosiz */</comment>

                        <expr_stmt pos:start="922:25" pos:end="922:42"><expr pos:start="922:25" pos:end="922:41"><call pos:start="922:25" pos:end="922:41"><name pos:start="922:25" pos:end="922:37">gen_vfp_tosiz</name><argument_list pos:start="922:38" pos:end="922:41">(<argument pos:start="922:39" pos:end="922:40"><expr pos:start="922:39" pos:end="922:40"><name pos:start="922:39" pos:end="922:40">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="924:25" pos:end="924:30">break;</break>

                    <case pos:start="926:21" pos:end="926:28">case <expr pos:start="926:26" pos:end="926:27"><literal type="number" pos:start="926:26" pos:end="926:27">28</literal></expr>:</case> <comment type="block" pos:start="926:30" pos:end="926:40">/* ftosh */</comment>

                        <if_stmt pos:start="928:25" pos:end="930:35"><if pos:start="928:25" pos:end="930:35">if <condition pos:start="928:28" pos:end="928:64">(<expr pos:start="928:29" pos:end="928:63"><operator pos:start="928:29" pos:end="928:29">!</operator><call pos:start="928:30" pos:end="928:63"><name pos:start="928:30" pos:end="928:40">arm_feature</name><argument_list pos:start="928:41" pos:end="928:63">(<argument pos:start="928:42" pos:end="928:44"><expr pos:start="928:42" pos:end="928:44"><name pos:start="928:42" pos:end="928:44">env</name></expr></argument>, <argument pos:start="928:47" pos:end="928:62"><expr pos:start="928:47" pos:end="928:62"><name pos:start="928:47" pos:end="928:62">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="930:27" pos:end="930:35"><block_content pos:start="930:27" pos:end="930:35">

                          <return pos:start="930:27" pos:end="930:35">return <expr pos:start="930:34" pos:end="930:34"><literal type="number" pos:start="930:34" pos:end="930:34">1</literal></expr>;</return></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="932:25" pos:end="932:50"><expr pos:start="932:25" pos:end="932:49"><call pos:start="932:25" pos:end="932:49"><name pos:start="932:25" pos:end="932:36">gen_vfp_tosh</name><argument_list pos:start="932:37" pos:end="932:49">(<argument pos:start="932:38" pos:end="932:39"><expr pos:start="932:38" pos:end="932:39"><name pos:start="932:38" pos:end="932:39">dp</name></expr></argument>, <argument pos:start="932:42" pos:end="932:48"><expr pos:start="932:42" pos:end="932:48"><literal type="number" pos:start="932:42" pos:end="932:45">16</literal> <operator pos:start="932:45" pos:end="932:45">-</operator> <name pos:start="932:47" pos:end="932:48">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="934:25" pos:end="934:30">break;</break>

                    <case pos:start="936:21" pos:end="936:28">case <expr pos:start="936:26" pos:end="936:27"><literal type="number" pos:start="936:26" pos:end="936:27">29</literal></expr>:</case> <comment type="block" pos:start="936:30" pos:end="936:40">/* ftosl */</comment>

                        <if_stmt pos:start="938:25" pos:end="940:35"><if pos:start="938:25" pos:end="940:35">if <condition pos:start="938:28" pos:end="938:64">(<expr pos:start="938:29" pos:end="938:63"><operator pos:start="938:29" pos:end="938:29">!</operator><call pos:start="938:30" pos:end="938:63"><name pos:start="938:30" pos:end="938:40">arm_feature</name><argument_list pos:start="938:41" pos:end="938:63">(<argument pos:start="938:42" pos:end="938:44"><expr pos:start="938:42" pos:end="938:44"><name pos:start="938:42" pos:end="938:44">env</name></expr></argument>, <argument pos:start="938:47" pos:end="938:62"><expr pos:start="938:47" pos:end="938:62"><name pos:start="938:47" pos:end="938:62">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="940:27" pos:end="940:35"><block_content pos:start="940:27" pos:end="940:35">

                          <return pos:start="940:27" pos:end="940:35">return <expr pos:start="940:34" pos:end="940:34"><literal type="number" pos:start="940:34" pos:end="940:34">1</literal></expr>;</return></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="942:25" pos:end="942:50"><expr pos:start="942:25" pos:end="942:49"><call pos:start="942:25" pos:end="942:49"><name pos:start="942:25" pos:end="942:36">gen_vfp_tosl</name><argument_list pos:start="942:37" pos:end="942:49">(<argument pos:start="942:38" pos:end="942:39"><expr pos:start="942:38" pos:end="942:39"><name pos:start="942:38" pos:end="942:39">dp</name></expr></argument>, <argument pos:start="942:42" pos:end="942:48"><expr pos:start="942:42" pos:end="942:48"><literal type="number" pos:start="942:42" pos:end="942:45">32</literal> <operator pos:start="942:45" pos:end="942:45">-</operator> <name pos:start="942:47" pos:end="942:48">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="944:25" pos:end="944:30">break;</break>

                    <case pos:start="946:21" pos:end="946:28">case <expr pos:start="946:26" pos:end="946:27"><literal type="number" pos:start="946:26" pos:end="946:27">30</literal></expr>:</case> <comment type="block" pos:start="946:30" pos:end="946:40">/* ftouh */</comment>

                        <if_stmt pos:start="948:25" pos:end="950:35"><if pos:start="948:25" pos:end="950:35">if <condition pos:start="948:28" pos:end="948:64">(<expr pos:start="948:29" pos:end="948:63"><operator pos:start="948:29" pos:end="948:29">!</operator><call pos:start="948:30" pos:end="948:63"><name pos:start="948:30" pos:end="948:40">arm_feature</name><argument_list pos:start="948:41" pos:end="948:63">(<argument pos:start="948:42" pos:end="948:44"><expr pos:start="948:42" pos:end="948:44"><name pos:start="948:42" pos:end="948:44">env</name></expr></argument>, <argument pos:start="948:47" pos:end="948:62"><expr pos:start="948:47" pos:end="948:62"><name pos:start="948:47" pos:end="948:62">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="950:27" pos:end="950:35"><block_content pos:start="950:27" pos:end="950:35">

                          <return pos:start="950:27" pos:end="950:35">return <expr pos:start="950:34" pos:end="950:34"><literal type="number" pos:start="950:34" pos:end="950:34">1</literal></expr>;</return></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="952:25" pos:end="952:50"><expr pos:start="952:25" pos:end="952:49"><call pos:start="952:25" pos:end="952:49"><name pos:start="952:25" pos:end="952:36">gen_vfp_touh</name><argument_list pos:start="952:37" pos:end="952:49">(<argument pos:start="952:38" pos:end="952:39"><expr pos:start="952:38" pos:end="952:39"><name pos:start="952:38" pos:end="952:39">dp</name></expr></argument>, <argument pos:start="952:42" pos:end="952:48"><expr pos:start="952:42" pos:end="952:48"><literal type="number" pos:start="952:42" pos:end="952:45">16</literal> <operator pos:start="952:45" pos:end="952:45">-</operator> <name pos:start="952:47" pos:end="952:48">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="954:25" pos:end="954:30">break;</break>

                    <case pos:start="956:21" pos:end="956:28">case <expr pos:start="956:26" pos:end="956:27"><literal type="number" pos:start="956:26" pos:end="956:27">31</literal></expr>:</case> <comment type="block" pos:start="956:30" pos:end="956:40">/* ftoul */</comment>

                        <if_stmt pos:start="958:25" pos:end="960:35"><if pos:start="958:25" pos:end="960:35">if <condition pos:start="958:28" pos:end="958:64">(<expr pos:start="958:29" pos:end="958:63"><operator pos:start="958:29" pos:end="958:29">!</operator><call pos:start="958:30" pos:end="958:63"><name pos:start="958:30" pos:end="958:40">arm_feature</name><argument_list pos:start="958:41" pos:end="958:63">(<argument pos:start="958:42" pos:end="958:44"><expr pos:start="958:42" pos:end="958:44"><name pos:start="958:42" pos:end="958:44">env</name></expr></argument>, <argument pos:start="958:47" pos:end="958:62"><expr pos:start="958:47" pos:end="958:62"><name pos:start="958:47" pos:end="958:62">ARM_FEATURE_VFP3</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="960:27" pos:end="960:35"><block_content pos:start="960:27" pos:end="960:35">

                          <return pos:start="960:27" pos:end="960:35">return <expr pos:start="960:34" pos:end="960:34"><literal type="number" pos:start="960:34" pos:end="960:34">1</literal></expr>;</return></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="962:25" pos:end="962:50"><expr pos:start="962:25" pos:end="962:49"><call pos:start="962:25" pos:end="962:49"><name pos:start="962:25" pos:end="962:36">gen_vfp_toul</name><argument_list pos:start="962:37" pos:end="962:49">(<argument pos:start="962:38" pos:end="962:39"><expr pos:start="962:38" pos:end="962:39"><name pos:start="962:38" pos:end="962:39">dp</name></expr></argument>, <argument pos:start="962:42" pos:end="962:48"><expr pos:start="962:42" pos:end="962:48"><literal type="number" pos:start="962:42" pos:end="962:45">32</literal> <operator pos:start="962:45" pos:end="962:45">-</operator> <name pos:start="962:47" pos:end="962:48">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="964:25" pos:end="964:30">break;</break>

                    <default pos:start="966:21" pos:end="966:28">default:</default> <comment type="block" pos:start="966:30" pos:end="966:44">/* undefined */</comment>

                        <expr_stmt pos:start="968:25" pos:end="968:47"><expr pos:start="968:25" pos:end="968:46"><call pos:start="968:25" pos:end="968:46"><name pos:start="968:25" pos:end="968:30">printf</name> <argument_list pos:start="968:32" pos:end="968:46">(<argument pos:start="968:33" pos:end="968:41"><expr pos:start="968:33" pos:end="968:41"><literal type="string" pos:start="968:33" pos:end="968:41">"rn:%d\n"</literal></expr></argument>, <argument pos:start="968:44" pos:end="968:45"><expr pos:start="968:44" pos:end="968:45"><name pos:start="968:44" pos:end="968:45">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="970:25" pos:end="970:33">return <expr pos:start="970:32" pos:end="970:32"><literal type="number" pos:start="970:32" pos:end="970:32">1</literal></expr>;</return>

                    </block_content>}</block></switch>

                    <break pos:start="974:21" pos:end="974:26">break;</break>

                <default pos:start="976:17" pos:end="976:24">default:</default> <comment type="block" pos:start="976:26" pos:end="976:40">/* undefined */</comment>

                    <expr_stmt pos:start="978:21" pos:end="978:43"><expr pos:start="978:21" pos:end="978:42"><call pos:start="978:21" pos:end="978:42"><name pos:start="978:21" pos:end="978:26">printf</name> <argument_list pos:start="978:28" pos:end="978:42">(<argument pos:start="978:29" pos:end="978:37"><expr pos:start="978:29" pos:end="978:37"><literal type="string" pos:start="978:29" pos:end="978:37">"op:%d\n"</literal></expr></argument>, <argument pos:start="978:40" pos:end="978:41"><expr pos:start="978:40" pos:end="978:41"><name pos:start="978:40" pos:end="978:41">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="980:21" pos:end="980:29">return <expr pos:start="980:28" pos:end="980:28"><literal type="number" pos:start="980:28" pos:end="980:28">1</literal></expr>;</return>

                </block_content>}</block></switch>



                <comment type="block" pos:start="986:17" pos:end="986:45">/* Write back the result.  */</comment>

                <if_stmt pos:start="988:17" pos:end="1006:44"><if pos:start="988:17" pos:end="990:21">if <condition pos:start="988:20" pos:end="988:54">(<expr pos:start="988:21" pos:end="988:53"><name pos:start="988:21" pos:end="988:22">op</name> <operator pos:start="988:24" pos:end="988:25">==</operator> <literal type="number" pos:start="988:27" pos:end="988:28">15</literal> <operator pos:start="988:30" pos:end="988:31">&amp;&amp;</operator> <operator pos:start="988:33" pos:end="988:33">(</operator><name pos:start="988:34" pos:end="988:35">rn</name> <operator pos:start="988:37" pos:end="988:38">&gt;=</operator> <literal type="number" pos:start="988:40" pos:end="988:40">8</literal> <operator pos:start="988:42" pos:end="988:43">&amp;&amp;</operator> <name pos:start="988:45" pos:end="988:46">rn</name> <operator pos:start="988:48" pos:end="988:49">&lt;=</operator> <literal type="number" pos:start="988:51" pos:end="988:52">11</literal><operator pos:start="988:53" pos:end="988:53">)</operator></expr>)</condition><block type="pseudo" pos:start="990:21" pos:end="990:21"><block_content pos:start="990:21" pos:end="990:21">

                    <empty_stmt pos:start="990:21" pos:end="990:21">;</empty_stmt></block_content></block></if> <comment type="block" pos:start="990:23" pos:end="990:52">/* Comparison, do nothing.  */</comment>

                <if type="elseif" pos:start="992:17" pos:end="996:43">else if <condition pos:start="992:25" pos:end="992:45">(<expr pos:start="992:26" pos:end="992:44"><name pos:start="992:26" pos:end="992:27">op</name> <operator pos:start="992:29" pos:end="992:30">==</operator> <literal type="number" pos:start="992:32" pos:end="992:33">15</literal> <operator pos:start="992:35" pos:end="992:36">&amp;&amp;</operator> <name pos:start="992:38" pos:end="992:39">rn</name> <operator pos:start="992:41" pos:end="992:41">&gt;</operator> <literal type="number" pos:start="992:43" pos:end="992:44">17</literal></expr>)</condition><block type="pseudo" pos:start="996:21" pos:end="996:43"><block_content pos:start="996:21" pos:end="996:43">

                    <comment type="block" pos:start="994:21" pos:end="994:42">/* Integer result.  */</comment>

                    <expr_stmt pos:start="996:21" pos:end="996:43"><expr pos:start="996:21" pos:end="996:42"><call pos:start="996:21" pos:end="996:42"><name pos:start="996:21" pos:end="996:35">gen_mov_vreg_F0</name><argument_list pos:start="996:36" pos:end="996:42">(<argument pos:start="996:37" pos:end="996:37"><expr pos:start="996:37" pos:end="996:37"><literal type="number" pos:start="996:37" pos:end="996:37">0</literal></expr></argument>, <argument pos:start="996:40" pos:end="996:41"><expr pos:start="996:40" pos:end="996:41"><name pos:start="996:40" pos:end="996:41">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="998:17" pos:end="1002:45">else if <condition pos:start="998:25" pos:end="998:46">(<expr pos:start="998:26" pos:end="998:45"><name pos:start="998:26" pos:end="998:27">op</name> <operator pos:start="998:29" pos:end="998:30">==</operator> <literal type="number" pos:start="998:32" pos:end="998:33">15</literal> <operator pos:start="998:35" pos:end="998:36">&amp;&amp;</operator> <name pos:start="998:38" pos:end="998:39">rn</name> <operator pos:start="998:41" pos:end="998:42">==</operator> <literal type="number" pos:start="998:44" pos:end="998:45">15</literal></expr>)</condition><block type="pseudo" pos:start="1002:21" pos:end="1002:45"><block_content pos:start="1002:21" pos:end="1002:45">

                    <comment type="block" pos:start="1000:21" pos:end="1000:36">/* conversion */</comment>

                    <expr_stmt pos:start="1002:21" pos:end="1002:45"><expr pos:start="1002:21" pos:end="1002:44"><call pos:start="1002:21" pos:end="1002:44"><name pos:start="1002:21" pos:end="1002:35">gen_mov_vreg_F0</name><argument_list pos:start="1002:36" pos:end="1002:44">(<argument pos:start="1002:37" pos:end="1002:39"><expr pos:start="1002:37" pos:end="1002:39"><operator pos:start="1002:37" pos:end="1002:37">!</operator><name pos:start="1002:38" pos:end="1002:39">dp</name></expr></argument>, <argument pos:start="1002:42" pos:end="1002:43"><expr pos:start="1002:42" pos:end="1002:43"><name pos:start="1002:42" pos:end="1002:43">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1004:17" pos:end="1006:44">else<block type="pseudo" pos:start="1006:21" pos:end="1006:44"><block_content pos:start="1006:21" pos:end="1006:44">

                    <expr_stmt pos:start="1006:21" pos:end="1006:44"><expr pos:start="1006:21" pos:end="1006:43"><call pos:start="1006:21" pos:end="1006:43"><name pos:start="1006:21" pos:end="1006:35">gen_mov_vreg_F0</name><argument_list pos:start="1006:36" pos:end="1006:43">(<argument pos:start="1006:37" pos:end="1006:38"><expr pos:start="1006:37" pos:end="1006:38"><name pos:start="1006:37" pos:end="1006:38">dp</name></expr></argument>, <argument pos:start="1006:41" pos:end="1006:42"><expr pos:start="1006:41" pos:end="1006:42"><name pos:start="1006:41" pos:end="1006:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <comment type="block" pos:start="1010:17" pos:end="1010:64">/* break out of the loop if we have finished  */</comment>

                <if_stmt pos:start="1012:17" pos:end="1014:26"><if pos:start="1012:17" pos:end="1014:26">if <condition pos:start="1012:20" pos:end="1012:32">(<expr pos:start="1012:21" pos:end="1012:31"><name pos:start="1012:21" pos:end="1012:26">veclen</name> <operator pos:start="1012:28" pos:end="1012:29">==</operator> <literal type="number" pos:start="1012:31" pos:end="1012:31">0</literal></expr>)</condition><block type="pseudo" pos:start="1014:21" pos:end="1014:26"><block_content pos:start="1014:21" pos:end="1014:26">

                    <break pos:start="1014:21" pos:end="1014:26">break;</break></block_content></block></if></if_stmt>



                <if_stmt pos:start="1018:17" pos:end="1034:17"><if pos:start="1018:17" pos:end="1034:17">if <condition pos:start="1018:20" pos:end="1018:45">(<expr pos:start="1018:21" pos:end="1018:44"><name pos:start="1018:21" pos:end="1018:22">op</name> <operator pos:start="1018:24" pos:end="1018:25">==</operator> <literal type="number" pos:start="1018:27" pos:end="1018:28">15</literal> <operator pos:start="1018:30" pos:end="1018:31">&amp;&amp;</operator> <name pos:start="1018:33" pos:end="1018:39">delta_m</name> <operator pos:start="1018:41" pos:end="1018:42">==</operator> <literal type="number" pos:start="1018:44" pos:end="1018:44">0</literal></expr>)</condition> <block pos:start="1018:47" pos:end="1034:17">{<block_content pos:start="1022:21" pos:end="1032:26">

                    <comment type="block" pos:start="1020:21" pos:end="1020:48">/* single source one-many */</comment>

                    <while pos:start="1022:21" pos:end="1030:21">while <condition pos:start="1022:27" pos:end="1022:36">(<expr pos:start="1022:28" pos:end="1022:35"><name pos:start="1022:28" pos:end="1022:33">veclen</name><operator pos:start="1022:34" pos:end="1022:35">--</operator></expr>)</condition> <block pos:start="1022:38" pos:end="1030:21">{<block_content pos:start="1024:25" pos:end="1028:48">

                        <expr_stmt pos:start="1024:25" pos:end="1026:48"><expr pos:start="1024:25" pos:end="1026:47"><name pos:start="1024:25" pos:end="1024:26">rd</name> <operator pos:start="1024:28" pos:end="1024:28">=</operator> <operator pos:start="1024:30" pos:end="1024:30">(</operator><operator pos:start="1024:31" pos:end="1024:31">(</operator><name pos:start="1024:32" pos:end="1024:33">rd</name> <operator pos:start="1024:35" pos:end="1024:35">+</operator> <name pos:start="1024:37" pos:end="1024:43">delta_d</name><operator pos:start="1024:44" pos:end="1024:44">)</operator> <operator pos:start="1024:46" pos:end="1024:46">&amp;</operator> <operator pos:start="1024:48" pos:end="1024:48">(</operator><name pos:start="1024:49" pos:end="1024:57">bank_mask</name> <operator pos:start="1024:59" pos:end="1024:59">-</operator> <literal type="number" pos:start="1024:61" pos:end="1024:61">1</literal><operator pos:start="1024:62" pos:end="1024:62">)</operator><operator pos:start="1024:63" pos:end="1024:63">)</operator>

                             <operator pos:start="1026:30" pos:end="1026:30">|</operator> <operator pos:start="1026:32" pos:end="1026:32">(</operator><name pos:start="1026:33" pos:end="1026:34">rd</name> <operator pos:start="1026:36" pos:end="1026:36">&amp;</operator> <name pos:start="1026:38" pos:end="1026:46">bank_mask</name><operator pos:start="1026:47" pos:end="1026:47">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1028:25" pos:end="1028:48"><expr pos:start="1028:25" pos:end="1028:47"><call pos:start="1028:25" pos:end="1028:47"><name pos:start="1028:25" pos:end="1028:39">gen_mov_vreg_F0</name><argument_list pos:start="1028:40" pos:end="1028:47">(<argument pos:start="1028:41" pos:end="1028:42"><expr pos:start="1028:41" pos:end="1028:42"><name pos:start="1028:41" pos:end="1028:42">dp</name></expr></argument>, <argument pos:start="1028:45" pos:end="1028:46"><expr pos:start="1028:45" pos:end="1028:46"><name pos:start="1028:45" pos:end="1028:46">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></while>

                    <break pos:start="1032:21" pos:end="1032:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="1036:17" pos:end="1036:47">/* Setup the next operands.  */</comment>

                <expr_stmt pos:start="1038:17" pos:end="1038:25"><expr pos:start="1038:17" pos:end="1038:24"><name pos:start="1038:17" pos:end="1038:22">veclen</name><operator pos:start="1038:23" pos:end="1038:24">--</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="1040:17" pos:end="1042:40"><expr pos:start="1040:17" pos:end="1042:39"><name pos:start="1040:17" pos:end="1040:18">rd</name> <operator pos:start="1040:20" pos:end="1040:20">=</operator> <operator pos:start="1040:22" pos:end="1040:22">(</operator><operator pos:start="1040:23" pos:end="1040:23">(</operator><name pos:start="1040:24" pos:end="1040:25">rd</name> <operator pos:start="1040:27" pos:end="1040:27">+</operator> <name pos:start="1040:29" pos:end="1040:35">delta_d</name><operator pos:start="1040:36" pos:end="1040:36">)</operator> <operator pos:start="1040:38" pos:end="1040:38">&amp;</operator> <operator pos:start="1040:40" pos:end="1040:40">(</operator><name pos:start="1040:41" pos:end="1040:49">bank_mask</name> <operator pos:start="1040:51" pos:end="1040:51">-</operator> <literal type="number" pos:start="1040:53" pos:end="1040:53">1</literal><operator pos:start="1040:54" pos:end="1040:54">)</operator><operator pos:start="1040:55" pos:end="1040:55">)</operator>

                     <operator pos:start="1042:22" pos:end="1042:22">|</operator> <operator pos:start="1042:24" pos:end="1042:24">(</operator><name pos:start="1042:25" pos:end="1042:26">rd</name> <operator pos:start="1042:28" pos:end="1042:28">&amp;</operator> <name pos:start="1042:30" pos:end="1042:38">bank_mask</name><operator pos:start="1042:39" pos:end="1042:39">)</operator></expr>;</expr_stmt>



                <if_stmt pos:start="1046:17" pos:end="1076:17"><if pos:start="1046:17" pos:end="1056:17">if <condition pos:start="1046:20" pos:end="1046:29">(<expr pos:start="1046:21" pos:end="1046:28"><name pos:start="1046:21" pos:end="1046:22">op</name> <operator pos:start="1046:24" pos:end="1046:25">==</operator> <literal type="number" pos:start="1046:27" pos:end="1046:28">15</literal></expr>)</condition> <block pos:start="1046:31" pos:end="1056:17">{<block_content pos:start="1050:21" pos:end="1054:44">

                    <comment type="block" pos:start="1048:21" pos:end="1048:46">/* One source operand.  */</comment>

                    <expr_stmt pos:start="1050:21" pos:end="1052:44"><expr pos:start="1050:21" pos:end="1052:43"><name pos:start="1050:21" pos:end="1050:22">rm</name> <operator pos:start="1050:24" pos:end="1050:24">=</operator> <operator pos:start="1050:26" pos:end="1050:26">(</operator><operator pos:start="1050:27" pos:end="1050:27">(</operator><name pos:start="1050:28" pos:end="1050:29">rm</name> <operator pos:start="1050:31" pos:end="1050:31">+</operator> <name pos:start="1050:33" pos:end="1050:39">delta_m</name><operator pos:start="1050:40" pos:end="1050:40">)</operator> <operator pos:start="1050:42" pos:end="1050:42">&amp;</operator> <operator pos:start="1050:44" pos:end="1050:44">(</operator><name pos:start="1050:45" pos:end="1050:53">bank_mask</name> <operator pos:start="1050:55" pos:end="1050:55">-</operator> <literal type="number" pos:start="1050:57" pos:end="1050:57">1</literal><operator pos:start="1050:58" pos:end="1050:58">)</operator><operator pos:start="1050:59" pos:end="1050:59">)</operator>

                         <operator pos:start="1052:26" pos:end="1052:26">|</operator> <operator pos:start="1052:28" pos:end="1052:28">(</operator><name pos:start="1052:29" pos:end="1052:30">rm</name> <operator pos:start="1052:32" pos:end="1052:32">&amp;</operator> <name pos:start="1052:34" pos:end="1052:42">bank_mask</name><operator pos:start="1052:43" pos:end="1052:43">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="1054:21" pos:end="1054:44"><expr pos:start="1054:21" pos:end="1054:43"><call pos:start="1054:21" pos:end="1054:43"><name pos:start="1054:21" pos:end="1054:35">gen_mov_F0_vreg</name><argument_list pos:start="1054:36" pos:end="1054:43">(<argument pos:start="1054:37" pos:end="1054:38"><expr pos:start="1054:37" pos:end="1054:38"><name pos:start="1054:37" pos:end="1054:38">dp</name></expr></argument>, <argument pos:start="1054:41" pos:end="1054:42"><expr pos:start="1054:41" pos:end="1054:42"><name pos:start="1054:41" pos:end="1054:42">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1056:19" pos:end="1076:17">else <block pos:start="1056:24" pos:end="1076:17">{<block_content pos:start="1060:21" pos:end="1074:21">

                    <comment type="block" pos:start="1058:21" pos:end="1058:47">/* Two source operands.  */</comment>

                    <expr_stmt pos:start="1060:21" pos:end="1062:44"><expr pos:start="1060:21" pos:end="1062:43"><name pos:start="1060:21" pos:end="1060:22">rn</name> <operator pos:start="1060:24" pos:end="1060:24">=</operator> <operator pos:start="1060:26" pos:end="1060:26">(</operator><operator pos:start="1060:27" pos:end="1060:27">(</operator><name pos:start="1060:28" pos:end="1060:29">rn</name> <operator pos:start="1060:31" pos:end="1060:31">+</operator> <name pos:start="1060:33" pos:end="1060:39">delta_d</name><operator pos:start="1060:40" pos:end="1060:40">)</operator> <operator pos:start="1060:42" pos:end="1060:42">&amp;</operator> <operator pos:start="1060:44" pos:end="1060:44">(</operator><name pos:start="1060:45" pos:end="1060:53">bank_mask</name> <operator pos:start="1060:55" pos:end="1060:55">-</operator> <literal type="number" pos:start="1060:57" pos:end="1060:57">1</literal><operator pos:start="1060:58" pos:end="1060:58">)</operator><operator pos:start="1060:59" pos:end="1060:59">)</operator>

                         <operator pos:start="1062:26" pos:end="1062:26">|</operator> <operator pos:start="1062:28" pos:end="1062:28">(</operator><name pos:start="1062:29" pos:end="1062:30">rn</name> <operator pos:start="1062:32" pos:end="1062:32">&amp;</operator> <name pos:start="1062:34" pos:end="1062:42">bank_mask</name><operator pos:start="1062:43" pos:end="1062:43">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="1064:21" pos:end="1064:44"><expr pos:start="1064:21" pos:end="1064:43"><call pos:start="1064:21" pos:end="1064:43"><name pos:start="1064:21" pos:end="1064:35">gen_mov_F0_vreg</name><argument_list pos:start="1064:36" pos:end="1064:43">(<argument pos:start="1064:37" pos:end="1064:38"><expr pos:start="1064:37" pos:end="1064:38"><name pos:start="1064:37" pos:end="1064:38">dp</name></expr></argument>, <argument pos:start="1064:41" pos:end="1064:42"><expr pos:start="1064:41" pos:end="1064:42"><name pos:start="1064:41" pos:end="1064:42">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="1066:21" pos:end="1074:21"><if pos:start="1066:21" pos:end="1074:21">if <condition pos:start="1066:24" pos:end="1066:32">(<expr pos:start="1066:25" pos:end="1066:31"><name pos:start="1066:25" pos:end="1066:31">delta_m</name></expr>)</condition> <block pos:start="1066:34" pos:end="1074:21">{<block_content pos:start="1068:25" pos:end="1072:48">

                        <expr_stmt pos:start="1068:25" pos:end="1070:48"><expr pos:start="1068:25" pos:end="1070:47"><name pos:start="1068:25" pos:end="1068:26">rm</name> <operator pos:start="1068:28" pos:end="1068:28">=</operator> <operator pos:start="1068:30" pos:end="1068:30">(</operator><operator pos:start="1068:31" pos:end="1068:31">(</operator><name pos:start="1068:32" pos:end="1068:33">rm</name> <operator pos:start="1068:35" pos:end="1068:35">+</operator> <name pos:start="1068:37" pos:end="1068:43">delta_m</name><operator pos:start="1068:44" pos:end="1068:44">)</operator> <operator pos:start="1068:46" pos:end="1068:46">&amp;</operator> <operator pos:start="1068:48" pos:end="1068:48">(</operator><name pos:start="1068:49" pos:end="1068:57">bank_mask</name> <operator pos:start="1068:59" pos:end="1068:59">-</operator> <literal type="number" pos:start="1068:61" pos:end="1068:61">1</literal><operator pos:start="1068:62" pos:end="1068:62">)</operator><operator pos:start="1068:63" pos:end="1068:63">)</operator>

                             <operator pos:start="1070:30" pos:end="1070:30">|</operator> <operator pos:start="1070:32" pos:end="1070:32">(</operator><name pos:start="1070:33" pos:end="1070:34">rm</name> <operator pos:start="1070:36" pos:end="1070:36">&amp;</operator> <name pos:start="1070:38" pos:end="1070:46">bank_mask</name><operator pos:start="1070:47" pos:end="1070:47">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1072:25" pos:end="1072:48"><expr pos:start="1072:25" pos:end="1072:47"><call pos:start="1072:25" pos:end="1072:47"><name pos:start="1072:25" pos:end="1072:39">gen_mov_F1_vreg</name><argument_list pos:start="1072:40" pos:end="1072:47">(<argument pos:start="1072:41" pos:end="1072:42"><expr pos:start="1072:41" pos:end="1072:42"><name pos:start="1072:41" pos:end="1072:42">dp</name></expr></argument>, <argument pos:start="1072:45" pos:end="1072:46"><expr pos:start="1072:45" pos:end="1072:46"><name pos:start="1072:45" pos:end="1072:46">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <break pos:start="1082:9" pos:end="1082:14">break;</break>

    <case pos:start="1084:5" pos:end="1084:13">case <expr pos:start="1084:10" pos:end="1084:12"><literal type="number" pos:start="1084:10" pos:end="1084:12">0xc</literal></expr>:</case>

    <case pos:start="1086:5" pos:end="1086:13">case <expr pos:start="1086:10" pos:end="1086:12"><literal type="number" pos:start="1086:10" pos:end="1086:12">0xd</literal></expr>:</case>

        <if_stmt pos:start="1088:9" pos:end="1316:9"><if pos:start="1088:9" pos:end="1178:9">if <condition pos:start="1088:12" pos:end="1088:52">(<expr pos:start="1088:13" pos:end="1088:51"><name pos:start="1088:13" pos:end="1088:14">dp</name> <operator pos:start="1088:16" pos:end="1088:17">&amp;&amp;</operator> <operator pos:start="1088:19" pos:end="1088:19">(</operator><name pos:start="1088:20" pos:end="1088:23">insn</name> <operator pos:start="1088:25" pos:end="1088:25">&amp;</operator> <literal type="number" pos:start="1088:27" pos:end="1088:36">0x03e00000</literal><operator pos:start="1088:37" pos:end="1088:37">)</operator> <operator pos:start="1088:39" pos:end="1088:40">==</operator> <literal type="number" pos:start="1088:42" pos:end="1088:51">0x00400000</literal></expr>)</condition> <block pos:start="1088:54" pos:end="1178:9">{<block_content pos:start="1092:13" pos:end="1176:13">

            <comment type="block" pos:start="1090:13" pos:end="1090:39">/* two-register transfer */</comment>

            <expr_stmt pos:start="1092:13" pos:end="1092:36"><expr pos:start="1092:13" pos:end="1092:35"><name pos:start="1092:13" pos:end="1092:14">rn</name> <operator pos:start="1092:16" pos:end="1092:16">=</operator> <operator pos:start="1092:18" pos:end="1092:18">(</operator><name pos:start="1092:19" pos:end="1092:22">insn</name> <operator pos:start="1092:24" pos:end="1092:25">&gt;&gt;</operator> <literal type="number" pos:start="1092:27" pos:end="1092:28">16</literal><operator pos:start="1092:29" pos:end="1092:29">)</operator> <operator pos:start="1092:31" pos:end="1092:31">&amp;</operator> <literal type="number" pos:start="1092:33" pos:end="1092:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="1094:13" pos:end="1094:36"><expr pos:start="1094:13" pos:end="1094:35"><name pos:start="1094:13" pos:end="1094:14">rd</name> <operator pos:start="1094:16" pos:end="1094:16">=</operator> <operator pos:start="1094:18" pos:end="1094:18">(</operator><name pos:start="1094:19" pos:end="1094:22">insn</name> <operator pos:start="1094:24" pos:end="1094:25">&gt;&gt;</operator> <literal type="number" pos:start="1094:27" pos:end="1094:28">12</literal><operator pos:start="1094:29" pos:end="1094:29">)</operator> <operator pos:start="1094:31" pos:end="1094:31">&amp;</operator> <literal type="number" pos:start="1094:33" pos:end="1094:35">0xf</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1096:13" pos:end="1104:13"><if pos:start="1096:13" pos:end="1100:13">if <condition pos:start="1096:16" pos:end="1096:19">(<expr pos:start="1096:17" pos:end="1096:18"><name pos:start="1096:17" pos:end="1096:18">dp</name></expr>)</condition> <block pos:start="1096:21" pos:end="1100:13">{<block_content pos:start="1098:17" pos:end="1098:37">

                <expr_stmt pos:start="1098:17" pos:end="1098:37"><expr pos:start="1098:17" pos:end="1098:36"><call pos:start="1098:17" pos:end="1098:36"><name pos:start="1098:17" pos:end="1098:26">VFP_DREG_M</name><argument_list pos:start="1098:27" pos:end="1098:36">(<argument pos:start="1098:28" pos:end="1098:29"><expr pos:start="1098:28" pos:end="1098:29"><name pos:start="1098:28" pos:end="1098:29">rm</name></expr></argument>, <argument pos:start="1098:32" pos:end="1098:35"><expr pos:start="1098:32" pos:end="1098:35"><name pos:start="1098:32" pos:end="1098:35">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1100:15" pos:end="1104:13">else <block pos:start="1100:20" pos:end="1104:13">{<block_content pos:start="1102:17" pos:end="1102:38">

                <expr_stmt pos:start="1102:17" pos:end="1102:38"><expr pos:start="1102:17" pos:end="1102:37"><name pos:start="1102:17" pos:end="1102:18">rm</name> <operator pos:start="1102:20" pos:end="1102:20">=</operator> <call pos:start="1102:22" pos:end="1102:37"><name pos:start="1102:22" pos:end="1102:31">VFP_SREG_M</name><argument_list pos:start="1102:32" pos:end="1102:37">(<argument pos:start="1102:33" pos:end="1102:36"><expr pos:start="1102:33" pos:end="1102:36"><name pos:start="1102:33" pos:end="1102:36">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="1108:13" pos:end="1176:13"><if pos:start="1108:13" pos:end="1142:13">if <condition pos:start="1108:16" pos:end="1108:37">(<expr pos:start="1108:17" pos:end="1108:36"><name pos:start="1108:17" pos:end="1108:20">insn</name> <operator pos:start="1108:22" pos:end="1108:22">&amp;</operator> <name pos:start="1108:24" pos:end="1108:36">ARM_CP_RW_BIT</name></expr>)</condition> <block pos:start="1108:39" pos:end="1142:13">{<block_content pos:start="1112:17" pos:end="1140:17">

                <comment type="block" pos:start="1110:17" pos:end="1110:30">/* vfp-&gt;arm */</comment>

                <if_stmt pos:start="1112:17" pos:end="1140:17"><if pos:start="1112:17" pos:end="1126:17">if <condition pos:start="1112:20" pos:end="1112:23">(<expr pos:start="1112:21" pos:end="1112:22"><name pos:start="1112:21" pos:end="1112:22">dp</name></expr>)</condition> <block pos:start="1112:25" pos:end="1126:17">{<block_content pos:start="1114:21" pos:end="1124:42">

                    <expr_stmt pos:start="1114:21" pos:end="1114:47"><expr pos:start="1114:21" pos:end="1114:46"><call pos:start="1114:21" pos:end="1114:46"><name pos:start="1114:21" pos:end="1114:35">gen_mov_F0_vreg</name><argument_list pos:start="1114:36" pos:end="1114:46">(<argument pos:start="1114:37" pos:end="1114:37"><expr pos:start="1114:37" pos:end="1114:37"><literal type="number" pos:start="1114:37" pos:end="1114:37">0</literal></expr></argument>, <argument pos:start="1114:40" pos:end="1114:45"><expr pos:start="1114:40" pos:end="1114:45"><name pos:start="1114:40" pos:end="1114:41">rm</name> <operator pos:start="1114:43" pos:end="1114:43">*</operator> <literal type="number" pos:start="1114:45" pos:end="1114:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1116:21" pos:end="1116:40"><expr pos:start="1116:21" pos:end="1116:39"><name pos:start="1116:21" pos:end="1116:23">tmp</name> <operator pos:start="1116:25" pos:end="1116:25">=</operator> <call pos:start="1116:27" pos:end="1116:39"><name pos:start="1116:27" pos:end="1116:37">gen_vfp_mrs</name><argument_list pos:start="1116:38" pos:end="1116:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1118:21" pos:end="1118:42"><expr pos:start="1118:21" pos:end="1118:41"><call pos:start="1118:21" pos:end="1118:41"><name pos:start="1118:21" pos:end="1118:29">store_reg</name><argument_list pos:start="1118:30" pos:end="1118:41">(<argument pos:start="1118:31" pos:end="1118:31"><expr pos:start="1118:31" pos:end="1118:31"><name pos:start="1118:31" pos:end="1118:31">s</name></expr></argument>, <argument pos:start="1118:34" pos:end="1118:35"><expr pos:start="1118:34" pos:end="1118:35"><name pos:start="1118:34" pos:end="1118:35">rd</name></expr></argument>, <argument pos:start="1118:38" pos:end="1118:40"><expr pos:start="1118:38" pos:end="1118:40"><name pos:start="1118:38" pos:end="1118:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1120:21" pos:end="1120:51"><expr pos:start="1120:21" pos:end="1120:50"><call pos:start="1120:21" pos:end="1120:50"><name pos:start="1120:21" pos:end="1120:35">gen_mov_F0_vreg</name><argument_list pos:start="1120:36" pos:end="1120:50">(<argument pos:start="1120:37" pos:end="1120:37"><expr pos:start="1120:37" pos:end="1120:37"><literal type="number" pos:start="1120:37" pos:end="1120:37">0</literal></expr></argument>, <argument pos:start="1120:40" pos:end="1120:49"><expr pos:start="1120:40" pos:end="1120:49"><name pos:start="1120:40" pos:end="1120:41">rm</name> <operator pos:start="1120:43" pos:end="1120:43">*</operator> <literal type="number" pos:start="1120:45" pos:end="1120:47">2</literal> <operator pos:start="1120:47" pos:end="1120:47">+</operator> <literal type="number" pos:start="1120:49" pos:end="1120:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1122:21" pos:end="1122:40"><expr pos:start="1122:21" pos:end="1122:39"><name pos:start="1122:21" pos:end="1122:23">tmp</name> <operator pos:start="1122:25" pos:end="1122:25">=</operator> <call pos:start="1122:27" pos:end="1122:39"><name pos:start="1122:27" pos:end="1122:37">gen_vfp_mrs</name><argument_list pos:start="1122:38" pos:end="1122:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1124:21" pos:end="1124:42"><expr pos:start="1124:21" pos:end="1124:41"><call pos:start="1124:21" pos:end="1124:41"><name pos:start="1124:21" pos:end="1124:29">store_reg</name><argument_list pos:start="1124:30" pos:end="1124:41">(<argument pos:start="1124:31" pos:end="1124:31"><expr pos:start="1124:31" pos:end="1124:31"><name pos:start="1124:31" pos:end="1124:31">s</name></expr></argument>, <argument pos:start="1124:34" pos:end="1124:35"><expr pos:start="1124:34" pos:end="1124:35"><name pos:start="1124:34" pos:end="1124:35">rn</name></expr></argument>, <argument pos:start="1124:38" pos:end="1124:40"><expr pos:start="1124:38" pos:end="1124:40"><name pos:start="1124:38" pos:end="1124:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1126:19" pos:end="1140:17">else <block pos:start="1126:24" pos:end="1140:17">{<block_content pos:start="1128:21" pos:end="1138:42">

                    <expr_stmt pos:start="1128:21" pos:end="1128:43"><expr pos:start="1128:21" pos:end="1128:42"><call pos:start="1128:21" pos:end="1128:42"><name pos:start="1128:21" pos:end="1128:35">gen_mov_F0_vreg</name><argument_list pos:start="1128:36" pos:end="1128:42">(<argument pos:start="1128:37" pos:end="1128:37"><expr pos:start="1128:37" pos:end="1128:37"><literal type="number" pos:start="1128:37" pos:end="1128:37">0</literal></expr></argument>, <argument pos:start="1128:40" pos:end="1128:41"><expr pos:start="1128:40" pos:end="1128:41"><name pos:start="1128:40" pos:end="1128:41">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1130:21" pos:end="1130:40"><expr pos:start="1130:21" pos:end="1130:39"><name pos:start="1130:21" pos:end="1130:23">tmp</name> <operator pos:start="1130:25" pos:end="1130:25">=</operator> <call pos:start="1130:27" pos:end="1130:39"><name pos:start="1130:27" pos:end="1130:37">gen_vfp_mrs</name><argument_list pos:start="1130:38" pos:end="1130:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1132:21" pos:end="1132:42"><expr pos:start="1132:21" pos:end="1132:41"><call pos:start="1132:21" pos:end="1132:41"><name pos:start="1132:21" pos:end="1132:29">store_reg</name><argument_list pos:start="1132:30" pos:end="1132:41">(<argument pos:start="1132:31" pos:end="1132:31"><expr pos:start="1132:31" pos:end="1132:31"><name pos:start="1132:31" pos:end="1132:31">s</name></expr></argument>, <argument pos:start="1132:34" pos:end="1132:35"><expr pos:start="1132:34" pos:end="1132:35"><name pos:start="1132:34" pos:end="1132:35">rn</name></expr></argument>, <argument pos:start="1132:38" pos:end="1132:40"><expr pos:start="1132:38" pos:end="1132:40"><name pos:start="1132:38" pos:end="1132:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1134:21" pos:end="1134:47"><expr pos:start="1134:21" pos:end="1134:46"><call pos:start="1134:21" pos:end="1134:46"><name pos:start="1134:21" pos:end="1134:35">gen_mov_F0_vreg</name><argument_list pos:start="1134:36" pos:end="1134:46">(<argument pos:start="1134:37" pos:end="1134:37"><expr pos:start="1134:37" pos:end="1134:37"><literal type="number" pos:start="1134:37" pos:end="1134:37">0</literal></expr></argument>, <argument pos:start="1134:40" pos:end="1134:45"><expr pos:start="1134:40" pos:end="1134:45"><name pos:start="1134:40" pos:end="1134:41">rm</name> <operator pos:start="1134:43" pos:end="1134:43">+</operator> <literal type="number" pos:start="1134:45" pos:end="1134:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1136:21" pos:end="1136:40"><expr pos:start="1136:21" pos:end="1136:39"><name pos:start="1136:21" pos:end="1136:23">tmp</name> <operator pos:start="1136:25" pos:end="1136:25">=</operator> <call pos:start="1136:27" pos:end="1136:39"><name pos:start="1136:27" pos:end="1136:37">gen_vfp_mrs</name><argument_list pos:start="1136:38" pos:end="1136:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1138:21" pos:end="1138:42"><expr pos:start="1138:21" pos:end="1138:41"><call pos:start="1138:21" pos:end="1138:41"><name pos:start="1138:21" pos:end="1138:29">store_reg</name><argument_list pos:start="1138:30" pos:end="1138:41">(<argument pos:start="1138:31" pos:end="1138:31"><expr pos:start="1138:31" pos:end="1138:31"><name pos:start="1138:31" pos:end="1138:31">s</name></expr></argument>, <argument pos:start="1138:34" pos:end="1138:35"><expr pos:start="1138:34" pos:end="1138:35"><name pos:start="1138:34" pos:end="1138:35">rd</name></expr></argument>, <argument pos:start="1138:38" pos:end="1138:40"><expr pos:start="1138:38" pos:end="1138:40"><name pos:start="1138:38" pos:end="1138:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="1142:15" pos:end="1176:13">else <block pos:start="1142:20" pos:end="1176:13">{<block_content pos:start="1146:17" pos:end="1174:17">

                <comment type="block" pos:start="1144:17" pos:end="1144:30">/* arm-&gt;vfp */</comment>

                <if_stmt pos:start="1146:17" pos:end="1174:17"><if pos:start="1146:17" pos:end="1160:17">if <condition pos:start="1146:20" pos:end="1146:23">(<expr pos:start="1146:21" pos:end="1146:22"><name pos:start="1146:21" pos:end="1146:22">dp</name></expr>)</condition> <block pos:start="1146:25" pos:end="1160:17">{<block_content pos:start="1148:21" pos:end="1158:51">

                    <expr_stmt pos:start="1148:21" pos:end="1148:42"><expr pos:start="1148:21" pos:end="1148:41"><name pos:start="1148:21" pos:end="1148:23">tmp</name> <operator pos:start="1148:25" pos:end="1148:25">=</operator> <call pos:start="1148:27" pos:end="1148:41"><name pos:start="1148:27" pos:end="1148:34">load_reg</name><argument_list pos:start="1148:35" pos:end="1148:41">(<argument pos:start="1148:36" pos:end="1148:36"><expr pos:start="1148:36" pos:end="1148:36"><name pos:start="1148:36" pos:end="1148:36">s</name></expr></argument>, <argument pos:start="1148:39" pos:end="1148:40"><expr pos:start="1148:39" pos:end="1148:40"><name pos:start="1148:39" pos:end="1148:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1150:21" pos:end="1150:37"><expr pos:start="1150:21" pos:end="1150:36"><call pos:start="1150:21" pos:end="1150:36"><name pos:start="1150:21" pos:end="1150:31">gen_vfp_msr</name><argument_list pos:start="1150:32" pos:end="1150:36">(<argument pos:start="1150:33" pos:end="1150:35"><expr pos:start="1150:33" pos:end="1150:35"><name pos:start="1150:33" pos:end="1150:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1152:21" pos:end="1152:47"><expr pos:start="1152:21" pos:end="1152:46"><call pos:start="1152:21" pos:end="1152:46"><name pos:start="1152:21" pos:end="1152:35">gen_mov_vreg_F0</name><argument_list pos:start="1152:36" pos:end="1152:46">(<argument pos:start="1152:37" pos:end="1152:37"><expr pos:start="1152:37" pos:end="1152:37"><literal type="number" pos:start="1152:37" pos:end="1152:37">0</literal></expr></argument>, <argument pos:start="1152:40" pos:end="1152:45"><expr pos:start="1152:40" pos:end="1152:45"><name pos:start="1152:40" pos:end="1152:41">rm</name> <operator pos:start="1152:43" pos:end="1152:43">*</operator> <literal type="number" pos:start="1152:45" pos:end="1152:45">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1154:21" pos:end="1154:42"><expr pos:start="1154:21" pos:end="1154:41"><name pos:start="1154:21" pos:end="1154:23">tmp</name> <operator pos:start="1154:25" pos:end="1154:25">=</operator> <call pos:start="1154:27" pos:end="1154:41"><name pos:start="1154:27" pos:end="1154:34">load_reg</name><argument_list pos:start="1154:35" pos:end="1154:41">(<argument pos:start="1154:36" pos:end="1154:36"><expr pos:start="1154:36" pos:end="1154:36"><name pos:start="1154:36" pos:end="1154:36">s</name></expr></argument>, <argument pos:start="1154:39" pos:end="1154:40"><expr pos:start="1154:39" pos:end="1154:40"><name pos:start="1154:39" pos:end="1154:40">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1156:21" pos:end="1156:37"><expr pos:start="1156:21" pos:end="1156:36"><call pos:start="1156:21" pos:end="1156:36"><name pos:start="1156:21" pos:end="1156:31">gen_vfp_msr</name><argument_list pos:start="1156:32" pos:end="1156:36">(<argument pos:start="1156:33" pos:end="1156:35"><expr pos:start="1156:33" pos:end="1156:35"><name pos:start="1156:33" pos:end="1156:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1158:21" pos:end="1158:51"><expr pos:start="1158:21" pos:end="1158:50"><call pos:start="1158:21" pos:end="1158:50"><name pos:start="1158:21" pos:end="1158:35">gen_mov_vreg_F0</name><argument_list pos:start="1158:36" pos:end="1158:50">(<argument pos:start="1158:37" pos:end="1158:37"><expr pos:start="1158:37" pos:end="1158:37"><literal type="number" pos:start="1158:37" pos:end="1158:37">0</literal></expr></argument>, <argument pos:start="1158:40" pos:end="1158:49"><expr pos:start="1158:40" pos:end="1158:49"><name pos:start="1158:40" pos:end="1158:41">rm</name> <operator pos:start="1158:43" pos:end="1158:43">*</operator> <literal type="number" pos:start="1158:45" pos:end="1158:47">2</literal> <operator pos:start="1158:47" pos:end="1158:47">+</operator> <literal type="number" pos:start="1158:49" pos:end="1158:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1160:19" pos:end="1174:17">else <block pos:start="1160:24" pos:end="1174:17">{<block_content pos:start="1162:21" pos:end="1172:47">

                    <expr_stmt pos:start="1162:21" pos:end="1162:42"><expr pos:start="1162:21" pos:end="1162:41"><name pos:start="1162:21" pos:end="1162:23">tmp</name> <operator pos:start="1162:25" pos:end="1162:25">=</operator> <call pos:start="1162:27" pos:end="1162:41"><name pos:start="1162:27" pos:end="1162:34">load_reg</name><argument_list pos:start="1162:35" pos:end="1162:41">(<argument pos:start="1162:36" pos:end="1162:36"><expr pos:start="1162:36" pos:end="1162:36"><name pos:start="1162:36" pos:end="1162:36">s</name></expr></argument>, <argument pos:start="1162:39" pos:end="1162:40"><expr pos:start="1162:39" pos:end="1162:40"><name pos:start="1162:39" pos:end="1162:40">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1164:21" pos:end="1164:37"><expr pos:start="1164:21" pos:end="1164:36"><call pos:start="1164:21" pos:end="1164:36"><name pos:start="1164:21" pos:end="1164:31">gen_vfp_msr</name><argument_list pos:start="1164:32" pos:end="1164:36">(<argument pos:start="1164:33" pos:end="1164:35"><expr pos:start="1164:33" pos:end="1164:35"><name pos:start="1164:33" pos:end="1164:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1166:21" pos:end="1166:43"><expr pos:start="1166:21" pos:end="1166:42"><call pos:start="1166:21" pos:end="1166:42"><name pos:start="1166:21" pos:end="1166:35">gen_mov_vreg_F0</name><argument_list pos:start="1166:36" pos:end="1166:42">(<argument pos:start="1166:37" pos:end="1166:37"><expr pos:start="1166:37" pos:end="1166:37"><literal type="number" pos:start="1166:37" pos:end="1166:37">0</literal></expr></argument>, <argument pos:start="1166:40" pos:end="1166:41"><expr pos:start="1166:40" pos:end="1166:41"><name pos:start="1166:40" pos:end="1166:41">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1168:21" pos:end="1168:42"><expr pos:start="1168:21" pos:end="1168:41"><name pos:start="1168:21" pos:end="1168:23">tmp</name> <operator pos:start="1168:25" pos:end="1168:25">=</operator> <call pos:start="1168:27" pos:end="1168:41"><name pos:start="1168:27" pos:end="1168:34">load_reg</name><argument_list pos:start="1168:35" pos:end="1168:41">(<argument pos:start="1168:36" pos:end="1168:36"><expr pos:start="1168:36" pos:end="1168:36"><name pos:start="1168:36" pos:end="1168:36">s</name></expr></argument>, <argument pos:start="1168:39" pos:end="1168:40"><expr pos:start="1168:39" pos:end="1168:40"><name pos:start="1168:39" pos:end="1168:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1170:21" pos:end="1170:37"><expr pos:start="1170:21" pos:end="1170:36"><call pos:start="1170:21" pos:end="1170:36"><name pos:start="1170:21" pos:end="1170:31">gen_vfp_msr</name><argument_list pos:start="1170:32" pos:end="1170:36">(<argument pos:start="1170:33" pos:end="1170:35"><expr pos:start="1170:33" pos:end="1170:35"><name pos:start="1170:33" pos:end="1170:35">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1172:21" pos:end="1172:47"><expr pos:start="1172:21" pos:end="1172:46"><call pos:start="1172:21" pos:end="1172:46"><name pos:start="1172:21" pos:end="1172:35">gen_mov_vreg_F0</name><argument_list pos:start="1172:36" pos:end="1172:46">(<argument pos:start="1172:37" pos:end="1172:37"><expr pos:start="1172:37" pos:end="1172:37"><literal type="number" pos:start="1172:37" pos:end="1172:37">0</literal></expr></argument>, <argument pos:start="1172:40" pos:end="1172:45"><expr pos:start="1172:40" pos:end="1172:45"><name pos:start="1172:40" pos:end="1172:41">rm</name> <operator pos:start="1172:43" pos:end="1172:43">+</operator> <literal type="number" pos:start="1172:45" pos:end="1172:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="1178:11" pos:end="1316:9">else <block pos:start="1178:16" pos:end="1316:9">{<block_content pos:start="1182:13" pos:end="1314:13">

            <comment type="block" pos:start="1180:13" pos:end="1180:28">/* Load/store */</comment>

            <expr_stmt pos:start="1182:13" pos:end="1182:36"><expr pos:start="1182:13" pos:end="1182:35"><name pos:start="1182:13" pos:end="1182:14">rn</name> <operator pos:start="1182:16" pos:end="1182:16">=</operator> <operator pos:start="1182:18" pos:end="1182:18">(</operator><name pos:start="1182:19" pos:end="1182:22">insn</name> <operator pos:start="1182:24" pos:end="1182:25">&gt;&gt;</operator> <literal type="number" pos:start="1182:27" pos:end="1182:28">16</literal><operator pos:start="1182:29" pos:end="1182:29">)</operator> <operator pos:start="1182:31" pos:end="1182:31">&amp;</operator> <literal type="number" pos:start="1182:33" pos:end="1182:35">0xf</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1184:13" pos:end="1190:38"><if pos:start="1184:13" pos:end="1186:37">if <condition pos:start="1184:16" pos:end="1184:19">(<expr pos:start="1184:17" pos:end="1184:18"><name pos:start="1184:17" pos:end="1184:18">dp</name></expr>)</condition><block type="pseudo" pos:start="1186:17" pos:end="1186:37"><block_content pos:start="1186:17" pos:end="1186:37">

                <expr_stmt pos:start="1186:17" pos:end="1186:37"><expr pos:start="1186:17" pos:end="1186:36"><call pos:start="1186:17" pos:end="1186:36"><name pos:start="1186:17" pos:end="1186:26">VFP_DREG_D</name><argument_list pos:start="1186:27" pos:end="1186:36">(<argument pos:start="1186:28" pos:end="1186:29"><expr pos:start="1186:28" pos:end="1186:29"><name pos:start="1186:28" pos:end="1186:29">rd</name></expr></argument>, <argument pos:start="1186:32" pos:end="1186:35"><expr pos:start="1186:32" pos:end="1186:35"><name pos:start="1186:32" pos:end="1186:35">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1188:13" pos:end="1190:38">else<block type="pseudo" pos:start="1190:17" pos:end="1190:38"><block_content pos:start="1190:17" pos:end="1190:38">

                <expr_stmt pos:start="1190:17" pos:end="1190:38"><expr pos:start="1190:17" pos:end="1190:37"><name pos:start="1190:17" pos:end="1190:18">rd</name> <operator pos:start="1190:20" pos:end="1190:20">=</operator> <call pos:start="1190:22" pos:end="1190:37"><name pos:start="1190:22" pos:end="1190:31">VFP_SREG_D</name><argument_list pos:start="1190:32" pos:end="1190:37">(<argument pos:start="1190:33" pos:end="1190:36"><expr pos:start="1190:33" pos:end="1190:36"><name pos:start="1190:33" pos:end="1190:36">insn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="1192:13" pos:end="1202:13"><if pos:start="1192:13" pos:end="1198:13">if <condition pos:start="1192:16" pos:end="1192:37">(<expr pos:start="1192:17" pos:end="1192:36"><name pos:start="1192:17" pos:end="1192:24"><name pos:start="1192:17" pos:end="1192:17">s</name><operator pos:start="1192:18" pos:end="1192:19">-&gt;</operator><name pos:start="1192:20" pos:end="1192:24">thumb</name></name> <operator pos:start="1192:26" pos:end="1192:27">&amp;&amp;</operator> <name pos:start="1192:29" pos:end="1192:30">rn</name> <operator pos:start="1192:32" pos:end="1192:33">==</operator> <literal type="number" pos:start="1192:35" pos:end="1192:36">15</literal></expr>)</condition> <block pos:start="1192:39" pos:end="1198:13">{<block_content pos:start="1194:17" pos:end="1196:51">

                <expr_stmt pos:start="1194:17" pos:end="1194:33"><expr pos:start="1194:17" pos:end="1194:32"><name pos:start="1194:17" pos:end="1194:20">addr</name> <operator pos:start="1194:22" pos:end="1194:22">=</operator> <call pos:start="1194:24" pos:end="1194:32"><name pos:start="1194:24" pos:end="1194:30">new_tmp</name><argument_list pos:start="1194:31" pos:end="1194:32">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1196:17" pos:end="1196:51"><expr pos:start="1196:17" pos:end="1196:50"><call pos:start="1196:17" pos:end="1196:50"><name pos:start="1196:17" pos:end="1196:32">tcg_gen_movi_i32</name><argument_list pos:start="1196:33" pos:end="1196:50">(<argument pos:start="1196:34" pos:end="1196:37"><expr pos:start="1196:34" pos:end="1196:37"><name pos:start="1196:34" pos:end="1196:37">addr</name></expr></argument>, <argument pos:start="1196:40" pos:end="1196:49"><expr pos:start="1196:40" pos:end="1196:49"><name pos:start="1196:40" pos:end="1196:44"><name pos:start="1196:40" pos:end="1196:40">s</name><operator pos:start="1196:41" pos:end="1196:42">-&gt;</operator><name pos:start="1196:43" pos:end="1196:44">pc</name></name> <operator pos:start="1196:46" pos:end="1196:46">&amp;</operator> <operator pos:start="1196:48" pos:end="1196:48">~</operator><literal type="number" pos:start="1196:49" pos:end="1196:49">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1198:15" pos:end="1202:13">else <block pos:start="1198:20" pos:end="1202:13">{<block_content pos:start="1200:17" pos:end="1200:39">

                <expr_stmt pos:start="1200:17" pos:end="1200:39"><expr pos:start="1200:17" pos:end="1200:38"><name pos:start="1200:17" pos:end="1200:20">addr</name> <operator pos:start="1200:22" pos:end="1200:22">=</operator> <call pos:start="1200:24" pos:end="1200:38"><name pos:start="1200:24" pos:end="1200:31">load_reg</name><argument_list pos:start="1200:32" pos:end="1200:38">(<argument pos:start="1200:33" pos:end="1200:33"><expr pos:start="1200:33" pos:end="1200:33"><name pos:start="1200:33" pos:end="1200:33">s</name></expr></argument>, <argument pos:start="1200:36" pos:end="1200:37"><expr pos:start="1200:36" pos:end="1200:37"><name pos:start="1200:36" pos:end="1200:37">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="1204:13" pos:end="1314:13"><if pos:start="1204:13" pos:end="1232:13">if <condition pos:start="1204:16" pos:end="1204:50">(<expr pos:start="1204:17" pos:end="1204:49"><operator pos:start="1204:17" pos:end="1204:17">(</operator><name pos:start="1204:18" pos:end="1204:21">insn</name> <operator pos:start="1204:23" pos:end="1204:23">&amp;</operator> <literal type="number" pos:start="1204:25" pos:end="1204:34">0x01200000</literal><operator pos:start="1204:35" pos:end="1204:35">)</operator> <operator pos:start="1204:37" pos:end="1204:38">==</operator> <literal type="number" pos:start="1204:40" pos:end="1204:49">0x01000000</literal></expr>)</condition> <block pos:start="1204:52" pos:end="1232:13">{<block_content pos:start="1208:17" pos:end="1230:31">

                <comment type="block" pos:start="1206:17" pos:end="1206:39">/* Single load/store */</comment>

                <expr_stmt pos:start="1208:17" pos:end="1208:44"><expr pos:start="1208:17" pos:end="1208:43"><name pos:start="1208:17" pos:end="1208:22">offset</name> <operator pos:start="1208:24" pos:end="1208:24">=</operator> <operator pos:start="1208:26" pos:end="1208:26">(</operator><name pos:start="1208:27" pos:end="1208:30">insn</name> <operator pos:start="1208:32" pos:end="1208:32">&amp;</operator> <literal type="number" pos:start="1208:34" pos:end="1208:37">0xff</literal><operator pos:start="1208:38" pos:end="1208:38">)</operator> <operator pos:start="1208:40" pos:end="1208:41">&lt;&lt;</operator> <literal type="number" pos:start="1208:43" pos:end="1208:43">2</literal></expr>;</expr_stmt>

                <if_stmt pos:start="1210:17" pos:end="1212:37"><if pos:start="1210:17" pos:end="1212:37">if <condition pos:start="1210:20" pos:end="1210:44">(<expr pos:start="1210:21" pos:end="1210:43"><operator pos:start="1210:21" pos:end="1210:21">(</operator><name pos:start="1210:22" pos:end="1210:25">insn</name> <operator pos:start="1210:27" pos:end="1210:27">&amp;</operator> <operator pos:start="1210:29" pos:end="1210:29">(</operator><literal type="number" pos:start="1210:30" pos:end="1210:30">1</literal> <operator pos:start="1210:32" pos:end="1210:33">&lt;&lt;</operator> <literal type="number" pos:start="1210:35" pos:end="1210:36">23</literal><operator pos:start="1210:37" pos:end="1210:37">)</operator><operator pos:start="1210:38" pos:end="1210:38">)</operator> <operator pos:start="1210:40" pos:end="1210:41">==</operator> <literal type="number" pos:start="1210:43" pos:end="1210:43">0</literal></expr>)</condition><block type="pseudo" pos:start="1212:21" pos:end="1212:37"><block_content pos:start="1212:21" pos:end="1212:37">

                    <expr_stmt pos:start="1212:21" pos:end="1212:37"><expr pos:start="1212:21" pos:end="1212:36"><name pos:start="1212:21" pos:end="1212:26">offset</name> <operator pos:start="1212:28" pos:end="1212:28">=</operator> <operator pos:start="1212:30" pos:end="1212:30">-</operator><name pos:start="1212:31" pos:end="1212:36">offset</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1214:17" pos:end="1214:53"><expr pos:start="1214:17" pos:end="1214:52"><call pos:start="1214:17" pos:end="1214:52"><name pos:start="1214:17" pos:end="1214:32">tcg_gen_addi_i32</name><argument_list pos:start="1214:33" pos:end="1214:52">(<argument pos:start="1214:34" pos:end="1214:37"><expr pos:start="1214:34" pos:end="1214:37"><name pos:start="1214:34" pos:end="1214:37">addr</name></expr></argument>, <argument pos:start="1214:40" pos:end="1214:43"><expr pos:start="1214:40" pos:end="1214:43"><name pos:start="1214:40" pos:end="1214:43">addr</name></expr></argument>, <argument pos:start="1214:46" pos:end="1214:51"><expr pos:start="1214:46" pos:end="1214:51"><name pos:start="1214:46" pos:end="1214:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1216:17" pos:end="1228:17"><if pos:start="1216:17" pos:end="1222:17">if <condition pos:start="1216:20" pos:end="1216:37">(<expr pos:start="1216:21" pos:end="1216:36"><name pos:start="1216:21" pos:end="1216:24">insn</name> <operator pos:start="1216:26" pos:end="1216:26">&amp;</operator> <operator pos:start="1216:28" pos:end="1216:28">(</operator><literal type="number" pos:start="1216:29" pos:end="1216:29">1</literal> <operator pos:start="1216:31" pos:end="1216:32">&lt;&lt;</operator> <literal type="number" pos:start="1216:34" pos:end="1216:35">20</literal><operator pos:start="1216:36" pos:end="1216:36">)</operator></expr>)</condition> <block pos:start="1216:39" pos:end="1222:17">{<block_content pos:start="1218:21" pos:end="1220:44">

                    <expr_stmt pos:start="1218:21" pos:end="1218:44"><expr pos:start="1218:21" pos:end="1218:43"><call pos:start="1218:21" pos:end="1218:43"><name pos:start="1218:21" pos:end="1218:30">gen_vfp_ld</name><argument_list pos:start="1218:31" pos:end="1218:43">(<argument pos:start="1218:32" pos:end="1218:32"><expr pos:start="1218:32" pos:end="1218:32"><name pos:start="1218:32" pos:end="1218:32">s</name></expr></argument>, <argument pos:start="1218:35" pos:end="1218:36"><expr pos:start="1218:35" pos:end="1218:36"><name pos:start="1218:35" pos:end="1218:36">dp</name></expr></argument>, <argument pos:start="1218:39" pos:end="1218:42"><expr pos:start="1218:39" pos:end="1218:42"><name pos:start="1218:39" pos:end="1218:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1220:21" pos:end="1220:44"><expr pos:start="1220:21" pos:end="1220:43"><call pos:start="1220:21" pos:end="1220:43"><name pos:start="1220:21" pos:end="1220:35">gen_mov_vreg_F0</name><argument_list pos:start="1220:36" pos:end="1220:43">(<argument pos:start="1220:37" pos:end="1220:38"><expr pos:start="1220:37" pos:end="1220:38"><name pos:start="1220:37" pos:end="1220:38">dp</name></expr></argument>, <argument pos:start="1220:41" pos:end="1220:42"><expr pos:start="1220:41" pos:end="1220:42"><name pos:start="1220:41" pos:end="1220:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1222:19" pos:end="1228:17">else <block pos:start="1222:24" pos:end="1228:17">{<block_content pos:start="1224:21" pos:end="1226:44">

                    <expr_stmt pos:start="1224:21" pos:end="1224:44"><expr pos:start="1224:21" pos:end="1224:43"><call pos:start="1224:21" pos:end="1224:43"><name pos:start="1224:21" pos:end="1224:35">gen_mov_F0_vreg</name><argument_list pos:start="1224:36" pos:end="1224:43">(<argument pos:start="1224:37" pos:end="1224:38"><expr pos:start="1224:37" pos:end="1224:38"><name pos:start="1224:37" pos:end="1224:38">dp</name></expr></argument>, <argument pos:start="1224:41" pos:end="1224:42"><expr pos:start="1224:41" pos:end="1224:42"><name pos:start="1224:41" pos:end="1224:42">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1226:21" pos:end="1226:44"><expr pos:start="1226:21" pos:end="1226:43"><call pos:start="1226:21" pos:end="1226:43"><name pos:start="1226:21" pos:end="1226:30">gen_vfp_st</name><argument_list pos:start="1226:31" pos:end="1226:43">(<argument pos:start="1226:32" pos:end="1226:32"><expr pos:start="1226:32" pos:end="1226:32"><name pos:start="1226:32" pos:end="1226:32">s</name></expr></argument>, <argument pos:start="1226:35" pos:end="1226:36"><expr pos:start="1226:35" pos:end="1226:36"><name pos:start="1226:35" pos:end="1226:36">dp</name></expr></argument>, <argument pos:start="1226:39" pos:end="1226:42"><expr pos:start="1226:39" pos:end="1226:42"><name pos:start="1226:39" pos:end="1226:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="1230:17" pos:end="1230:31"><expr pos:start="1230:17" pos:end="1230:30"><call pos:start="1230:17" pos:end="1230:30"><name pos:start="1230:17" pos:end="1230:24">dead_tmp</name><argument_list pos:start="1230:25" pos:end="1230:30">(<argument pos:start="1230:26" pos:end="1230:29"><expr pos:start="1230:26" pos:end="1230:29"><name pos:start="1230:26" pos:end="1230:29">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1232:15" pos:end="1314:13">else <block pos:start="1232:20" pos:end="1314:13">{<block_content pos:start="1236:17" pos:end="1312:17">

                <comment type="block" pos:start="1234:17" pos:end="1234:41">/* load/store multiple */</comment>

                <if_stmt pos:start="1236:17" pos:end="1242:36"><if pos:start="1236:17" pos:end="1238:43">if <condition pos:start="1236:20" pos:end="1236:23">(<expr pos:start="1236:21" pos:end="1236:22"><name pos:start="1236:21" pos:end="1236:22">dp</name></expr>)</condition><block type="pseudo" pos:start="1238:21" pos:end="1238:43"><block_content pos:start="1238:21" pos:end="1238:43">

                    <expr_stmt pos:start="1238:21" pos:end="1238:43"><expr pos:start="1238:21" pos:end="1238:42"><name pos:start="1238:21" pos:end="1238:21">n</name> <operator pos:start="1238:23" pos:end="1238:23">=</operator> <operator pos:start="1238:25" pos:end="1238:25">(</operator><name pos:start="1238:26" pos:end="1238:29">insn</name> <operator pos:start="1238:31" pos:end="1238:32">&gt;&gt;</operator> <literal type="number" pos:start="1238:34" pos:end="1238:34">1</literal><operator pos:start="1238:35" pos:end="1238:35">)</operator> <operator pos:start="1238:37" pos:end="1238:37">&amp;</operator> <literal type="number" pos:start="1238:39" pos:end="1238:42">0x7f</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1240:17" pos:end="1242:36">else<block type="pseudo" pos:start="1242:21" pos:end="1242:36"><block_content pos:start="1242:21" pos:end="1242:36">

                    <expr_stmt pos:start="1242:21" pos:end="1242:36"><expr pos:start="1242:21" pos:end="1242:35"><name pos:start="1242:21" pos:end="1242:21">n</name> <operator pos:start="1242:23" pos:end="1242:23">=</operator> <name pos:start="1242:25" pos:end="1242:28">insn</name> <operator pos:start="1242:30" pos:end="1242:30">&amp;</operator> <literal type="number" pos:start="1242:32" pos:end="1242:35">0xff</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <if_stmt pos:start="1246:17" pos:end="1248:72"><if pos:start="1246:17" pos:end="1248:72">if <condition pos:start="1246:20" pos:end="1246:37">(<expr pos:start="1246:21" pos:end="1246:36"><name pos:start="1246:21" pos:end="1246:24">insn</name> <operator pos:start="1246:26" pos:end="1246:26">&amp;</operator> <operator pos:start="1246:28" pos:end="1246:28">(</operator><literal type="number" pos:start="1246:29" pos:end="1246:29">1</literal> <operator pos:start="1246:31" pos:end="1246:32">&lt;&lt;</operator> <literal type="number" pos:start="1246:34" pos:end="1246:35">24</literal><operator pos:start="1246:36" pos:end="1246:36">)</operator></expr>)</condition><block type="pseudo" pos:start="1248:21" pos:end="1248:72"><block_content pos:start="1248:21" pos:end="1248:72"> <comment type="block" pos:start="1246:39" pos:end="1246:57">/* pre-decrement */</comment>

                    <expr_stmt pos:start="1248:21" pos:end="1248:72"><expr pos:start="1248:21" pos:end="1248:71"><call pos:start="1248:21" pos:end="1248:71"><name pos:start="1248:21" pos:end="1248:36">tcg_gen_addi_i32</name><argument_list pos:start="1248:37" pos:end="1248:71">(<argument pos:start="1248:38" pos:end="1248:41"><expr pos:start="1248:38" pos:end="1248:41"><name pos:start="1248:38" pos:end="1248:41">addr</name></expr></argument>, <argument pos:start="1248:44" pos:end="1248:47"><expr pos:start="1248:44" pos:end="1248:47"><name pos:start="1248:44" pos:end="1248:47">addr</name></expr></argument>, <argument pos:start="1248:50" pos:end="1248:70"><expr pos:start="1248:50" pos:end="1248:70"><operator pos:start="1248:50" pos:end="1248:50">-</operator><operator pos:start="1248:51" pos:end="1248:51">(</operator><operator pos:start="1248:52" pos:end="1248:52">(</operator><name pos:start="1248:53" pos:end="1248:56">insn</name> <operator pos:start="1248:58" pos:end="1248:58">&amp;</operator> <literal type="number" pos:start="1248:60" pos:end="1248:63">0xff</literal><operator pos:start="1248:64" pos:end="1248:64">)</operator> <operator pos:start="1248:66" pos:end="1248:67">&lt;&lt;</operator> <literal type="number" pos:start="1248:69" pos:end="1248:69">2</literal><operator pos:start="1248:70" pos:end="1248:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="1252:17" pos:end="1258:31"><if pos:start="1252:17" pos:end="1254:31">if <condition pos:start="1252:20" pos:end="1252:23">(<expr pos:start="1252:21" pos:end="1252:22"><name pos:start="1252:21" pos:end="1252:22">dp</name></expr>)</condition><block type="pseudo" pos:start="1254:21" pos:end="1254:31"><block_content pos:start="1254:21" pos:end="1254:31">

                    <expr_stmt pos:start="1254:21" pos:end="1254:31"><expr pos:start="1254:21" pos:end="1254:30"><name pos:start="1254:21" pos:end="1254:26">offset</name> <operator pos:start="1254:28" pos:end="1254:28">=</operator> <literal type="number" pos:start="1254:30" pos:end="1254:30">8</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1256:17" pos:end="1258:31">else<block type="pseudo" pos:start="1258:21" pos:end="1258:31"><block_content pos:start="1258:21" pos:end="1258:31">

                    <expr_stmt pos:start="1258:21" pos:end="1258:31"><expr pos:start="1258:21" pos:end="1258:30"><name pos:start="1258:21" pos:end="1258:26">offset</name> <operator pos:start="1258:28" pos:end="1258:28">=</operator> <literal type="number" pos:start="1258:30" pos:end="1258:30">4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <for pos:start="1260:17" pos:end="1282:17">for <control pos:start="1260:21" pos:end="1260:39">(<init pos:start="1260:22" pos:end="1260:27"><expr pos:start="1260:22" pos:end="1260:26"><name pos:start="1260:22" pos:end="1260:22">i</name> <operator pos:start="1260:24" pos:end="1260:24">=</operator> <literal type="number" pos:start="1260:26" pos:end="1260:26">0</literal></expr>;</init> <condition pos:start="1260:29" pos:end="1260:34"><expr pos:start="1260:29" pos:end="1260:33"><name pos:start="1260:29" pos:end="1260:29">i</name> <operator pos:start="1260:31" pos:end="1260:31">&lt;</operator> <name pos:start="1260:33" pos:end="1260:33">n</name></expr>;</condition> <incr pos:start="1260:36" pos:end="1260:38"><expr pos:start="1260:36" pos:end="1260:38"><name pos:start="1260:36" pos:end="1260:36">i</name><operator pos:start="1260:37" pos:end="1260:38">++</operator></expr></incr>)</control> <block pos:start="1260:41" pos:end="1282:17">{<block_content pos:start="1262:21" pos:end="1280:57">

                    <if_stmt pos:start="1262:21" pos:end="1278:21"><if pos:start="1262:21" pos:end="1270:21">if <condition pos:start="1262:24" pos:end="1262:45">(<expr pos:start="1262:25" pos:end="1262:44"><name pos:start="1262:25" pos:end="1262:28">insn</name> <operator pos:start="1262:30" pos:end="1262:30">&amp;</operator> <name pos:start="1262:32" pos:end="1262:44">ARM_CP_RW_BIT</name></expr>)</condition> <block pos:start="1262:47" pos:end="1270:21">{<block_content pos:start="1266:25" pos:end="1268:52">

                        <comment type="block" pos:start="1264:25" pos:end="1264:34">/* load */</comment>

                        <expr_stmt pos:start="1266:25" pos:end="1266:48"><expr pos:start="1266:25" pos:end="1266:47"><call pos:start="1266:25" pos:end="1266:47"><name pos:start="1266:25" pos:end="1266:34">gen_vfp_ld</name><argument_list pos:start="1266:35" pos:end="1266:47">(<argument pos:start="1266:36" pos:end="1266:36"><expr pos:start="1266:36" pos:end="1266:36"><name pos:start="1266:36" pos:end="1266:36">s</name></expr></argument>, <argument pos:start="1266:39" pos:end="1266:40"><expr pos:start="1266:39" pos:end="1266:40"><name pos:start="1266:39" pos:end="1266:40">dp</name></expr></argument>, <argument pos:start="1266:43" pos:end="1266:46"><expr pos:start="1266:43" pos:end="1266:46"><name pos:start="1266:43" pos:end="1266:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1268:25" pos:end="1268:52"><expr pos:start="1268:25" pos:end="1268:51"><call pos:start="1268:25" pos:end="1268:51"><name pos:start="1268:25" pos:end="1268:39">gen_mov_vreg_F0</name><argument_list pos:start="1268:40" pos:end="1268:51">(<argument pos:start="1268:41" pos:end="1268:42"><expr pos:start="1268:41" pos:end="1268:42"><name pos:start="1268:41" pos:end="1268:42">dp</name></expr></argument>, <argument pos:start="1268:45" pos:end="1268:50"><expr pos:start="1268:45" pos:end="1268:50"><name pos:start="1268:45" pos:end="1268:46">rd</name> <operator pos:start="1268:48" pos:end="1268:48">+</operator> <name pos:start="1268:50" pos:end="1268:50">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1270:23" pos:end="1278:21">else <block pos:start="1270:28" pos:end="1278:21">{<block_content pos:start="1274:25" pos:end="1276:48">

                        <comment type="block" pos:start="1272:25" pos:end="1272:35">/* store */</comment>

                        <expr_stmt pos:start="1274:25" pos:end="1274:52"><expr pos:start="1274:25" pos:end="1274:51"><call pos:start="1274:25" pos:end="1274:51"><name pos:start="1274:25" pos:end="1274:39">gen_mov_F0_vreg</name><argument_list pos:start="1274:40" pos:end="1274:51">(<argument pos:start="1274:41" pos:end="1274:42"><expr pos:start="1274:41" pos:end="1274:42"><name pos:start="1274:41" pos:end="1274:42">dp</name></expr></argument>, <argument pos:start="1274:45" pos:end="1274:50"><expr pos:start="1274:45" pos:end="1274:50"><name pos:start="1274:45" pos:end="1274:46">rd</name> <operator pos:start="1274:48" pos:end="1274:48">+</operator> <name pos:start="1274:50" pos:end="1274:50">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1276:25" pos:end="1276:48"><expr pos:start="1276:25" pos:end="1276:47"><call pos:start="1276:25" pos:end="1276:47"><name pos:start="1276:25" pos:end="1276:34">gen_vfp_st</name><argument_list pos:start="1276:35" pos:end="1276:47">(<argument pos:start="1276:36" pos:end="1276:36"><expr pos:start="1276:36" pos:end="1276:36"><name pos:start="1276:36" pos:end="1276:36">s</name></expr></argument>, <argument pos:start="1276:39" pos:end="1276:40"><expr pos:start="1276:39" pos:end="1276:40"><name pos:start="1276:39" pos:end="1276:40">dp</name></expr></argument>, <argument pos:start="1276:43" pos:end="1276:46"><expr pos:start="1276:43" pos:end="1276:46"><name pos:start="1276:43" pos:end="1276:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="1280:21" pos:end="1280:57"><expr pos:start="1280:21" pos:end="1280:56"><call pos:start="1280:21" pos:end="1280:56"><name pos:start="1280:21" pos:end="1280:36">tcg_gen_addi_i32</name><argument_list pos:start="1280:37" pos:end="1280:56">(<argument pos:start="1280:38" pos:end="1280:41"><expr pos:start="1280:38" pos:end="1280:41"><name pos:start="1280:38" pos:end="1280:41">addr</name></expr></argument>, <argument pos:start="1280:44" pos:end="1280:47"><expr pos:start="1280:44" pos:end="1280:47"><name pos:start="1280:44" pos:end="1280:47">addr</name></expr></argument>, <argument pos:start="1280:50" pos:end="1280:55"><expr pos:start="1280:50" pos:end="1280:55"><name pos:start="1280:50" pos:end="1280:55">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="1284:17" pos:end="1312:17"><if pos:start="1284:17" pos:end="1308:17">if <condition pos:start="1284:20" pos:end="1284:37">(<expr pos:start="1284:21" pos:end="1284:36"><name pos:start="1284:21" pos:end="1284:24">insn</name> <operator pos:start="1284:26" pos:end="1284:26">&amp;</operator> <operator pos:start="1284:28" pos:end="1284:28">(</operator><literal type="number" pos:start="1284:29" pos:end="1284:29">1</literal> <operator pos:start="1284:31" pos:end="1284:32">&lt;&lt;</operator> <literal type="number" pos:start="1284:34" pos:end="1284:35">21</literal><operator pos:start="1284:36" pos:end="1284:36">)</operator></expr>)</condition> <block pos:start="1284:39" pos:end="1308:17">{<block_content pos:start="1288:21" pos:end="1306:43">

                    <comment type="block" pos:start="1286:21" pos:end="1286:35">/* writeback */</comment>

                    <if_stmt pos:start="1288:21" pos:end="1298:35"><if pos:start="1288:21" pos:end="1290:45">if <condition pos:start="1288:24" pos:end="1288:41">(<expr pos:start="1288:25" pos:end="1288:40"><name pos:start="1288:25" pos:end="1288:28">insn</name> <operator pos:start="1288:30" pos:end="1288:30">&amp;</operator> <operator pos:start="1288:32" pos:end="1288:32">(</operator><literal type="number" pos:start="1288:33" pos:end="1288:33">1</literal> <operator pos:start="1288:35" pos:end="1288:36">&lt;&lt;</operator> <literal type="number" pos:start="1288:38" pos:end="1288:39">24</literal><operator pos:start="1288:40" pos:end="1288:40">)</operator></expr>)</condition><block type="pseudo" pos:start="1290:25" pos:end="1290:45"><block_content pos:start="1290:25" pos:end="1290:45">

                        <expr_stmt pos:start="1290:25" pos:end="1290:45"><expr pos:start="1290:25" pos:end="1290:44"><name pos:start="1290:25" pos:end="1290:30">offset</name> <operator pos:start="1290:32" pos:end="1290:32">=</operator> <operator pos:start="1290:34" pos:end="1290:34">-</operator><name pos:start="1290:35" pos:end="1290:40">offset</name> <operator pos:start="1290:42" pos:end="1290:42">*</operator> <name pos:start="1290:44" pos:end="1290:44">n</name></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="1292:21" pos:end="1294:35">else if <condition pos:start="1292:29" pos:end="1292:46">(<expr pos:start="1292:30" pos:end="1292:45"><name pos:start="1292:30" pos:end="1292:31">dp</name> <operator pos:start="1292:33" pos:end="1292:34">&amp;&amp;</operator> <operator pos:start="1292:36" pos:end="1292:36">(</operator><name pos:start="1292:37" pos:end="1292:40">insn</name> <operator pos:start="1292:42" pos:end="1292:42">&amp;</operator> <literal type="number" pos:start="1292:44" pos:end="1292:44">1</literal><operator pos:start="1292:45" pos:end="1292:45">)</operator></expr>)</condition><block type="pseudo" pos:start="1294:25" pos:end="1294:35"><block_content pos:start="1294:25" pos:end="1294:35">

                        <expr_stmt pos:start="1294:25" pos:end="1294:35"><expr pos:start="1294:25" pos:end="1294:34"><name pos:start="1294:25" pos:end="1294:30">offset</name> <operator pos:start="1294:32" pos:end="1294:32">=</operator> <literal type="number" pos:start="1294:34" pos:end="1294:34">4</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1296:21" pos:end="1298:35">else<block type="pseudo" pos:start="1298:25" pos:end="1298:35"><block_content pos:start="1298:25" pos:end="1298:35">

                        <expr_stmt pos:start="1298:25" pos:end="1298:35"><expr pos:start="1298:25" pos:end="1298:34"><name pos:start="1298:25" pos:end="1298:30">offset</name> <operator pos:start="1298:32" pos:end="1298:32">=</operator> <literal type="number" pos:start="1298:34" pos:end="1298:34">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <if_stmt pos:start="1302:21" pos:end="1304:61"><if pos:start="1302:21" pos:end="1304:61">if <condition pos:start="1302:24" pos:end="1302:36">(<expr pos:start="1302:25" pos:end="1302:35"><name pos:start="1302:25" pos:end="1302:30">offset</name> <operator pos:start="1302:32" pos:end="1302:33">!=</operator> <literal type="number" pos:start="1302:35" pos:end="1302:35">0</literal></expr>)</condition><block type="pseudo" pos:start="1304:25" pos:end="1304:61"><block_content pos:start="1304:25" pos:end="1304:61">

                        <expr_stmt pos:start="1304:25" pos:end="1304:61"><expr pos:start="1304:25" pos:end="1304:60"><call pos:start="1304:25" pos:end="1304:60"><name pos:start="1304:25" pos:end="1304:40">tcg_gen_addi_i32</name><argument_list pos:start="1304:41" pos:end="1304:60">(<argument pos:start="1304:42" pos:end="1304:45"><expr pos:start="1304:42" pos:end="1304:45"><name pos:start="1304:42" pos:end="1304:45">addr</name></expr></argument>, <argument pos:start="1304:48" pos:end="1304:51"><expr pos:start="1304:48" pos:end="1304:51"><name pos:start="1304:48" pos:end="1304:51">addr</name></expr></argument>, <argument pos:start="1304:54" pos:end="1304:59"><expr pos:start="1304:54" pos:end="1304:59"><name pos:start="1304:54" pos:end="1304:59">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="1306:21" pos:end="1306:43"><expr pos:start="1306:21" pos:end="1306:42"><call pos:start="1306:21" pos:end="1306:42"><name pos:start="1306:21" pos:end="1306:29">store_reg</name><argument_list pos:start="1306:30" pos:end="1306:42">(<argument pos:start="1306:31" pos:end="1306:31"><expr pos:start="1306:31" pos:end="1306:31"><name pos:start="1306:31" pos:end="1306:31">s</name></expr></argument>, <argument pos:start="1306:34" pos:end="1306:35"><expr pos:start="1306:34" pos:end="1306:35"><name pos:start="1306:34" pos:end="1306:35">rn</name></expr></argument>, <argument pos:start="1306:38" pos:end="1306:41"><expr pos:start="1306:38" pos:end="1306:41"><name pos:start="1306:38" pos:end="1306:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1308:19" pos:end="1312:17">else <block pos:start="1308:24" pos:end="1312:17">{<block_content pos:start="1310:21" pos:end="1310:35">

                    <expr_stmt pos:start="1310:21" pos:end="1310:35"><expr pos:start="1310:21" pos:end="1310:34"><call pos:start="1310:21" pos:end="1310:34"><name pos:start="1310:21" pos:end="1310:28">dead_tmp</name><argument_list pos:start="1310:29" pos:end="1310:34">(<argument pos:start="1310:30" pos:end="1310:33"><expr pos:start="1310:30" pos:end="1310:33"><name pos:start="1310:30" pos:end="1310:33">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="1318:9" pos:end="1318:14">break;</break>

    <default pos:start="1320:5" pos:end="1320:12">default:</default>

        <comment type="block" pos:start="1322:9" pos:end="1322:35">/* Should never happen.  */</comment>

        <return pos:start="1324:9" pos:end="1324:17">return <expr pos:start="1324:16" pos:end="1324:16"><literal type="number" pos:start="1324:16" pos:end="1324:16">1</literal></expr>;</return>

    </block_content>}</block></switch>

    <return pos:start="1328:5" pos:end="1328:13">return <expr pos:start="1328:12" pos:end="1328:12"><literal type="number" pos:start="1328:12" pos:end="1328:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
